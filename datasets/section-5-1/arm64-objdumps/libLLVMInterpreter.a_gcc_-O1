In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMInterpreter.a_gcc_-O1:

Execution.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL14getShiftAmountmN4llvm5APIntE>:
       0:	ldr	w1, [x1, #8]
       4:	cmp	x0, w1, uxtw
       8:	b.cc	28 <_ZL14getShiftAmountmN4llvm5APIntE+0x28>  // b.lo, b.ul, b.last
       c:	sub	w1, w1, #0x1
      10:	orr	x1, x1, x1, lsr #1
      14:	orr	x1, x1, x1, lsr #2
      18:	orr	x1, x1, x1, lsr #4
      1c:	orr	x1, x1, x1, lsr #8
      20:	orr	x1, x1, x1, lsr #16
      24:	and	w0, w1, w0
      28:	ret

000000000000002c <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>:
      2c:	stp	x29, x30, [sp, #-32]!
      30:	mov	x29, sp
      34:	stp	x19, x20, [sp, #16]
      38:	mov	x19, x3
      3c:	ldrb	w3, [x3, #8]
      40:	cmp	w3, #0x2
      44:	b.eq	64 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x38>  // b.none
      48:	cmp	w3, #0x3
      4c:	b.ne	80 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x54>  // b.any
      50:	ldr	d0, [x1]
      54:	ldr	d1, [x2]
      58:	fadd	d0, d0, d1
      5c:	str	d0, [x0]
      60:	b	74 <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x48>
      64:	ldr	s0, [x1]
      68:	ldr	s1, [x2]
      6c:	fadd	s0, s0, s1
      70:	str	s0, [x0]
      74:	ldp	x19, x20, [sp, #16]
      78:	ldp	x29, x30, [sp], #32
      7c:	ret
      80:	bl	0 <_ZN4llvm4dbgsEv>
      84:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      88:	add	x1, x1, #0x0
      8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
      90:	mov	x20, x0
      94:	mov	w3, #0x0                   	// #0
      98:	mov	w2, #0x0                   	// #0
      9c:	mov	x1, x0
      a0:	mov	x0, x19
      a4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
      a8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      ac:	add	x1, x1, #0x0
      b0:	mov	x0, x20
      b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
      b8:	mov	w2, #0x73                  	// #115
      bc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
      c0:	add	x1, x1, #0x0
      c4:	mov	x0, #0x0                   	// #0
      c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000000cc <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>:
      cc:	stp	x29, x30, [sp, #-32]!
      d0:	mov	x29, sp
      d4:	stp	x19, x20, [sp, #16]
      d8:	mov	x19, x3
      dc:	ldrb	w3, [x3, #8]
      e0:	cmp	w3, #0x2
      e4:	b.eq	104 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x38>  // b.none
      e8:	cmp	w3, #0x3
      ec:	b.ne	120 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x54>  // b.any
      f0:	ldr	d0, [x1]
      f4:	ldr	d1, [x2]
      f8:	fsub	d0, d0, d1
      fc:	str	d0, [x0]
     100:	b	114 <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x48>
     104:	ldr	s0, [x1]
     108:	ldr	s1, [x2]
     10c:	fsub	s0, s0, s1
     110:	str	s0, [x0]
     114:	ldp	x19, x20, [sp, #16]
     118:	ldp	x29, x30, [sp], #32
     11c:	ret
     120:	bl	0 <_ZN4llvm4dbgsEv>
     124:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     128:	add	x1, x1, #0x0
     12c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     130:	mov	x20, x0
     134:	mov	w3, #0x0                   	// #0
     138:	mov	w2, #0x0                   	// #0
     13c:	mov	x1, x0
     140:	mov	x0, x19
     144:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     148:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     14c:	add	x1, x1, #0x0
     150:	mov	x0, x20
     154:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     158:	mov	w2, #0x7e                  	// #126
     15c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     160:	add	x1, x1, #0x0
     164:	mov	x0, #0x0                   	// #0
     168:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000016c <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>:
     16c:	stp	x29, x30, [sp, #-32]!
     170:	mov	x29, sp
     174:	stp	x19, x20, [sp, #16]
     178:	mov	x19, x3
     17c:	ldrb	w3, [x3, #8]
     180:	cmp	w3, #0x2
     184:	b.eq	1a4 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x38>  // b.none
     188:	cmp	w3, #0x3
     18c:	b.ne	1c0 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x54>  // b.any
     190:	ldr	d0, [x1]
     194:	ldr	d1, [x2]
     198:	fmul	d0, d0, d1
     19c:	str	d0, [x0]
     1a0:	b	1b4 <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x48>
     1a4:	ldr	s0, [x1]
     1a8:	ldr	s1, [x2]
     1ac:	fmul	s0, s0, s1
     1b0:	str	s0, [x0]
     1b4:	ldp	x19, x20, [sp, #16]
     1b8:	ldp	x29, x30, [sp], #32
     1bc:	ret
     1c0:	bl	0 <_ZN4llvm4dbgsEv>
     1c4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1c8:	add	x1, x1, #0x0
     1cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1d0:	mov	x20, x0
     1d4:	mov	w3, #0x0                   	// #0
     1d8:	mov	w2, #0x0                   	// #0
     1dc:	mov	x1, x0
     1e0:	mov	x0, x19
     1e4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     1e8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1ec:	add	x1, x1, #0x0
     1f0:	mov	x0, x20
     1f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     1f8:	mov	w2, #0x89                  	// #137
     1fc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     200:	add	x1, x1, #0x0
     204:	mov	x0, #0x0                   	// #0
     208:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000020c <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>:
     20c:	stp	x29, x30, [sp, #-32]!
     210:	mov	x29, sp
     214:	stp	x19, x20, [sp, #16]
     218:	mov	x19, x3
     21c:	ldrb	w3, [x3, #8]
     220:	cmp	w3, #0x2
     224:	b.eq	244 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x38>  // b.none
     228:	cmp	w3, #0x3
     22c:	b.ne	260 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x54>  // b.any
     230:	ldr	d1, [x2]
     234:	ldr	d0, [x1]
     238:	fdiv	d0, d0, d1
     23c:	str	d0, [x0]
     240:	b	254 <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x48>
     244:	ldr	s1, [x2]
     248:	ldr	s0, [x1]
     24c:	fdiv	s0, s0, s1
     250:	str	s0, [x0]
     254:	ldp	x19, x20, [sp, #16]
     258:	ldp	x29, x30, [sp], #32
     25c:	ret
     260:	bl	0 <_ZN4llvm4dbgsEv>
     264:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     268:	add	x1, x1, #0x0
     26c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     270:	mov	x20, x0
     274:	mov	w3, #0x0                   	// #0
     278:	mov	w2, #0x0                   	// #0
     27c:	mov	x1, x0
     280:	mov	x0, x19
     284:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     288:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     28c:	add	x1, x1, #0x0
     290:	mov	x0, x20
     294:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     298:	mov	w2, #0x94                  	// #148
     29c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     2a0:	add	x1, x1, #0x0
     2a4:	mov	x0, #0x0                   	// #0
     2a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000002ac <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>:
     2ac:	stp	x29, x30, [sp, #-32]!
     2b0:	mov	x29, sp
     2b4:	stp	x19, x20, [sp, #16]
     2b8:	mov	x20, x0
     2bc:	ldrb	w0, [x3, #8]
     2c0:	cmp	w0, #0x2
     2c4:	b.eq	2e8 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x3c>  // b.none
     2c8:	mov	x19, x3
     2cc:	cmp	w0, #0x3
     2d0:	b.ne	310 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x64>  // b.any
     2d4:	ldr	d1, [x2]
     2d8:	ldr	d0, [x1]
     2dc:	bl	0 <fmod>
     2e0:	str	d0, [x20]
     2e4:	b	304 <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE+0x58>
     2e8:	ldr	s1, [x2]
     2ec:	ldr	s0, [x1]
     2f0:	fcvt	d1, s1
     2f4:	fcvt	d0, s0
     2f8:	bl	0 <fmod>
     2fc:	fcvt	s0, d0
     300:	str	s0, [x20]
     304:	ldp	x19, x20, [sp, #16]
     308:	ldp	x29, x30, [sp], #32
     30c:	ret
     310:	bl	0 <_ZN4llvm4dbgsEv>
     314:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     318:	add	x1, x1, #0x0
     31c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     320:	mov	x20, x0
     324:	mov	w3, #0x0                   	// #0
     328:	mov	w2, #0x0                   	// #0
     32c:	mov	x1, x0
     330:	mov	x0, x19
     334:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     338:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     33c:	add	x1, x1, #0x0
     340:	mov	x0, x20
     344:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     348:	mov	w2, #0xa3                  	// #163
     34c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     350:	add	x1, x1, #0x0
     354:	mov	x0, #0x0                   	// #0
     358:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000035c <_ZN4llvm11Interpreter20visitUnreachableInstERNS_15UnreachableInstE>:
     35c:	stp	x29, x30, [sp, #-16]!
     360:	mov	x29, sp
     364:	mov	w1, #0x1                   	// #1
     368:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     36c:	add	x0, x0, #0x0
     370:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000000374 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE>:
     374:	stp	x29, x30, [sp, #-96]!
     378:	mov	x29, sp
     37c:	stp	x19, x20, [sp, #16]
     380:	stp	x21, x22, [sp, #32]
     384:	stp	x23, x24, [sp, #48]
     388:	str	x25, [sp, #64]
     38c:	mov	x23, x0
     390:	mov	x24, x1
     394:	ldr	x25, [x0, #696]
     398:	ldr	x22, [x0, #704]
     39c:	cmp	x25, x22
     3a0:	b.eq	444 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xd0>  // b.none
     3a4:	mov	x19, x25
     3a8:	b	400 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x8c>
     3ac:	bl	0 <_ZdaPv>
     3b0:	add	x20, x20, #0x30
     3b4:	cmp	x21, x20
     3b8:	b.eq	3dc <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x68>  // b.none
     3bc:	add	x0, x20, #0x18
     3c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     3c4:	ldr	w0, [x20, #16]
     3c8:	cmp	w0, #0x40
     3cc:	b.ls	3b0 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x3c>  // b.plast
     3d0:	ldr	x0, [x20, #8]
     3d4:	cbnz	x0, 3ac <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x38>
     3d8:	b	3b0 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x3c>
     3dc:	ldr	x0, [x19, #80]
     3e0:	cbz	x0, 3e8 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x74>
     3e4:	bl	0 <_ZdlPv>
     3e8:	ldr	x1, [x19, #48]
     3ec:	add	x0, x19, #0x20
     3f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     3f4:	add	x19, x19, #0x80
     3f8:	cmp	x22, x19
     3fc:	b.eq	440 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xcc>  // b.none
     400:	ldr	x20, [x19, #104]
     404:	ldr	x21, [x19, #112]
     408:	cmp	x20, x21
     40c:	b.eq	420 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xac>  // b.none
     410:	ldr	x0, [x20], #8
     414:	bl	0 <free>
     418:	cmp	x21, x20
     41c:	b.ne	410 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x9c>  // b.any
     420:	ldr	x0, [x19, #104]
     424:	cbz	x0, 42c <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0xb8>
     428:	bl	0 <_ZdlPv>
     42c:	ldr	x20, [x19, #80]
     430:	ldr	x21, [x19, #88]
     434:	cmp	x20, x21
     438:	b.ne	3bc <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x48>  // b.any
     43c:	b	3dc <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x68>
     440:	str	x25, [x23, #704]
     444:	mov	x0, x23
     448:	bl	0 <_ZN4llvm11Interpreter17runAtExitHandlersEv>
     44c:	add	x8, sp, #0x50
     450:	mov	w1, #0x20                  	// #32
     454:	add	x0, x24, #0x8
     458:	bl	0 <_ZNK4llvm5APInt11zextOrTruncEj>
     45c:	ldr	w19, [sp, #88]
     460:	cmp	w19, #0x40
     464:	b.ls	488 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x114>  // b.plast
     468:	add	x0, sp, #0x50
     46c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     470:	sub	w19, w19, w0
     474:	cmp	w19, #0x40
     478:	b.hi	490 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x11c>  // b.pmore
     47c:	ldr	x0, [sp, #80]
     480:	ldr	x0, [x0]
     484:	bl	0 <exit>
     488:	ldr	x0, [sp, #80]
     48c:	b	484 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE+0x110>
     490:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     494:	add	x3, x3, #0x0
     498:	mov	w2, #0x657                 	// #1623
     49c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     4a0:	add	x1, x1, #0x0
     4a4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     4a8:	add	x0, x0, #0x0
     4ac:	bl	0 <__assert_fail>

00000000000004b0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>:
     4b0:	stp	x29, x30, [sp, #-80]!
     4b4:	mov	x29, sp
     4b8:	stp	x19, x20, [sp, #16]
     4bc:	stp	x21, x22, [sp, #32]
     4c0:	mov	x19, x8
     4c4:	mov	x21, x0
     4c8:	mov	x22, x1
     4cc:	mov	w0, #0x1                   	// #1
     4d0:	str	w0, [x8, #16]
     4d4:	str	xzr, [x8, #8]
     4d8:	str	xzr, [x8, #24]
     4dc:	str	xzr, [x8, #32]
     4e0:	str	xzr, [x8, #40]
     4e4:	str	wzr, [x8]
     4e8:	str	wzr, [x8, #4]
     4ec:	ldrb	w0, [x2, #8]
     4f0:	cmp	w0, #0xf
     4f4:	b.eq	734 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x284>  // b.none
     4f8:	mov	x20, x2
     4fc:	cmp	w0, #0x10
     500:	b.eq	5d0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x120>  // b.none
     504:	cmp	w0, #0xb
     508:	b.eq	560 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
     50c:	stp	x23, x24, [sp, #48]
     510:	stp	x25, x26, [sp, #64]
     514:	bl	0 <_ZN4llvm4dbgsEv>
     518:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     51c:	add	x1, x1, #0x0
     520:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     524:	mov	x19, x0
     528:	mov	w3, #0x0                   	// #0
     52c:	mov	w2, #0x0                   	// #0
     530:	mov	x1, x0
     534:	mov	x0, x20
     538:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     53c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     540:	add	x1, x1, #0x0
     544:	mov	x0, x19
     548:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     54c:	mov	w2, #0xc8                  	// #200
     550:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     554:	add	x1, x1, #0x0
     558:	mov	x0, #0x0                   	// #0
     55c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     560:	ldr	w0, [x21, #16]
     564:	ldr	w1, [x1, #16]
     568:	cmp	w0, w1
     56c:	b.ne	594 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xe4>  // b.any
     570:	cmp	w0, #0x40
     574:	b.ls	5bc <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.plast
     578:	add	x1, x22, #0x8
     57c:	add	x0, x21, #0x8
     580:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     584:	and	w0, w0, #0xff
     588:	and	x0, x0, #0xff
     58c:	str	x0, [x19, #8]
     590:	b	748 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x298>
     594:	stp	x23, x24, [sp, #48]
     598:	stp	x25, x26, [sp, #64]
     59c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     5a0:	add	x3, x3, #0x0
     5a4:	mov	w2, #0x47f                 	// #1151
     5a8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     5ac:	add	x1, x1, #0x0
     5b0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     5b4:	add	x0, x0, #0x0
     5b8:	bl	0 <__assert_fail>
     5bc:	ldr	x1, [x21, #8]
     5c0:	ldr	x0, [x22, #8]
     5c4:	cmp	x1, x0
     5c8:	cset	w0, eq  // eq = none
     5cc:	b	588 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0xd8>
     5d0:	ldr	x0, [x21, #32]
     5d4:	ldr	x1, [x21, #24]
     5d8:	sub	x0, x0, x1
     5dc:	asr	x1, x0, #4
     5e0:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     5e4:	movk	x2, #0xaaab
     5e8:	mul	x1, x1, x2
     5ec:	ldr	x2, [x22, #32]
     5f0:	ldr	x3, [x22, #24]
     5f4:	sub	x2, x2, x3
     5f8:	cmp	x2, x0
     5fc:	b.ne	638 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x188>  // b.any
     600:	add	x0, x8, #0x18
     604:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     608:	ldr	x1, [x21, #24]
     60c:	ldr	x0, [x21, #32]
     610:	cmp	x1, x0
     614:	b.eq	748 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x298>  // b.none
     618:	stp	x23, x24, [sp, #48]
     61c:	stp	x25, x26, [sp, #64]
     620:	mov	w20, #0x0                   	// #0
     624:	mov	x2, #0x0                   	// #0
     628:	mov	w24, #0x1                   	// #1
     62c:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     630:	movk	x23, #0xaaab
     634:	b	6c4 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x214>
     638:	stp	x23, x24, [sp, #48]
     63c:	stp	x25, x26, [sp, #64]
     640:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     644:	add	x3, x3, #0x0
     648:	mov	w2, #0xc4                  	// #196
     64c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     650:	add	x1, x1, #0x0
     654:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     658:	add	x0, x0, #0x0
     65c:	bl	0 <__assert_fail>
     660:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     664:	add	x3, x3, #0x0
     668:	mov	w2, #0x47f                 	// #1151
     66c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     670:	add	x1, x1, #0x0
     674:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     678:	add	x0, x0, #0x0
     67c:	bl	0 <__assert_fail>
     680:	ldr	x1, [x0, #8]
     684:	ldr	x0, [x2, #8]
     688:	cmp	x1, x0
     68c:	cset	w26, eq  // eq = none
     690:	b	708 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x258>
     694:	mov	x0, x25
     698:	str	x26, [x0, #8]!
     69c:	str	w24, [x0, #8]
     6a0:	add	w20, w20, #0x1
     6a4:	mov	w2, w20
     6a8:	ldr	x1, [x21, #24]
     6ac:	ldr	x3, [x21, #32]
     6b0:	sub	x3, x3, x1
     6b4:	asr	x3, x3, #4
     6b8:	mul	x3, x3, x23
     6bc:	cmp	x3, w20, uxtw
     6c0:	b.ls	728 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x278>  // b.plast
     6c4:	add	x2, x2, x2, lsl #1
     6c8:	lsl	x2, x2, #4
     6cc:	ldr	x0, [x19, #24]
     6d0:	add	x25, x0, x2
     6d4:	add	x0, x1, x2
     6d8:	ldr	x1, [x22, #24]
     6dc:	add	x2, x1, x2
     6e0:	ldr	w1, [x0, #16]
     6e4:	ldr	w3, [x2, #16]
     6e8:	cmp	w1, w3
     6ec:	b.ne	660 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1b0>  // b.any
     6f0:	cmp	w1, #0x40
     6f4:	b.ls	680 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.plast
     6f8:	add	x1, x2, #0x8
     6fc:	add	x0, x0, #0x8
     700:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     704:	and	w26, w0, #0xff
     708:	and	x26, x26, #0xff
     70c:	ldr	w0, [x25, #16]
     710:	cmp	w0, #0x40
     714:	b.ls	694 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1e4>  // b.plast
     718:	ldr	x0, [x25, #8]
     71c:	cbz	x0, 694 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1e4>
     720:	bl	0 <_ZdaPv>
     724:	b	694 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x1e4>
     728:	ldp	x23, x24, [sp, #48]
     72c:	ldp	x25, x26, [sp, #64]
     730:	b	748 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE+0x298>
     734:	ldr	x1, [x21]
     738:	ldr	x0, [x22]
     73c:	cmp	x1, x0
     740:	cset	x0, eq  // eq = none
     744:	str	x0, [x8, #8]
     748:	mov	x0, x19
     74c:	ldp	x19, x20, [sp, #16]
     750:	ldp	x21, x22, [sp, #32]
     754:	ldp	x29, x30, [sp], #80
     758:	ret

000000000000075c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>:
     75c:	stp	x29, x30, [sp, #-80]!
     760:	mov	x29, sp
     764:	stp	x19, x20, [sp, #16]
     768:	stp	x21, x22, [sp, #32]
     76c:	mov	x19, x8
     770:	mov	x21, x0
     774:	mov	x22, x1
     778:	mov	w0, #0x1                   	// #1
     77c:	str	w0, [x8, #16]
     780:	str	xzr, [x8, #8]
     784:	str	xzr, [x8, #24]
     788:	str	xzr, [x8, #32]
     78c:	str	xzr, [x8, #40]
     790:	str	wzr, [x8]
     794:	str	wzr, [x8, #4]
     798:	ldrb	w0, [x2, #8]
     79c:	cmp	w0, #0xf
     7a0:	b.eq	9e8 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.none
     7a4:	mov	x20, x2
     7a8:	cmp	w0, #0x10
     7ac:	b.eq	880 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x124>  // b.none
     7b0:	cmp	w0, #0xb
     7b4:	b.eq	80c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
     7b8:	stp	x23, x24, [sp, #48]
     7bc:	stp	x25, x26, [sp, #64]
     7c0:	bl	0 <_ZN4llvm4dbgsEv>
     7c4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     7c8:	add	x1, x1, #0x0
     7cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     7d0:	mov	x19, x0
     7d4:	mov	w3, #0x0                   	// #0
     7d8:	mov	w2, #0x0                   	// #0
     7dc:	mov	x1, x0
     7e0:	mov	x0, x20
     7e4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     7e8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     7ec:	add	x1, x1, #0x0
     7f0:	mov	x0, x19
     7f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     7f8:	mov	w2, #0xd6                  	// #214
     7fc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     800:	add	x1, x1, #0x0
     804:	mov	x0, #0x0                   	// #0
     808:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     80c:	ldr	w0, [x21, #16]
     810:	ldr	w1, [x1, #16]
     814:	cmp	w0, w1
     818:	b.ne	844 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xe8>  // b.any
     81c:	cmp	w0, #0x40
     820:	b.ls	86c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x110>  // b.plast
     824:	add	x1, x22, #0x8
     828:	add	x0, x21, #0x8
     82c:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     830:	and	w0, w0, #0xff
     834:	eor	w0, w0, #0x1
     838:	and	x0, x0, #0xff
     83c:	str	x0, [x19, #8]
     840:	b	9fc <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>
     844:	stp	x23, x24, [sp, #48]
     848:	stp	x25, x26, [sp, #64]
     84c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     850:	add	x3, x3, #0x0
     854:	mov	w2, #0x47f                 	// #1151
     858:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     85c:	add	x1, x1, #0x0
     860:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     864:	add	x0, x0, #0x0
     868:	bl	0 <__assert_fail>
     86c:	ldr	x1, [x21, #8]
     870:	ldr	x0, [x22, #8]
     874:	cmp	x1, x0
     878:	cset	w0, eq  // eq = none
     87c:	b	834 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0xd8>
     880:	ldr	x0, [x21, #32]
     884:	ldr	x1, [x21, #24]
     888:	sub	x0, x0, x1
     88c:	asr	x1, x0, #4
     890:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     894:	movk	x2, #0xaaab
     898:	mul	x1, x1, x2
     89c:	ldr	x2, [x22, #32]
     8a0:	ldr	x3, [x22, #24]
     8a4:	sub	x2, x2, x3
     8a8:	cmp	x2, x0
     8ac:	b.ne	8e8 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x18c>  // b.any
     8b0:	add	x0, x8, #0x18
     8b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     8b8:	ldr	x1, [x21, #24]
     8bc:	ldr	x0, [x21, #32]
     8c0:	cmp	x1, x0
     8c4:	b.eq	9fc <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>  // b.none
     8c8:	stp	x23, x24, [sp, #48]
     8cc:	stp	x25, x26, [sp, #64]
     8d0:	mov	w20, #0x0                   	// #0
     8d4:	mov	x2, #0x0                   	// #0
     8d8:	mov	w24, #0x1                   	// #1
     8dc:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     8e0:	movk	x23, #0xaaab
     8e4:	b	974 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x218>
     8e8:	stp	x23, x24, [sp, #48]
     8ec:	stp	x25, x26, [sp, #64]
     8f0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     8f4:	add	x3, x3, #0x0
     8f8:	mov	w2, #0xd2                  	// #210
     8fc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     900:	add	x1, x1, #0x0
     904:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     908:	add	x0, x0, #0x0
     90c:	bl	0 <__assert_fail>
     910:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     914:	add	x3, x3, #0x0
     918:	mov	w2, #0x47f                 	// #1151
     91c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     920:	add	x1, x1, #0x0
     924:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     928:	add	x0, x0, #0x0
     92c:	bl	0 <__assert_fail>
     930:	ldr	x1, [x0, #8]
     934:	ldr	x0, [x2, #8]
     938:	cmp	x1, x0
     93c:	cset	w26, eq  // eq = none
     940:	b	9b8 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x25c>
     944:	mov	x0, x25
     948:	str	x26, [x0, #8]!
     94c:	str	w24, [x0, #8]
     950:	add	w20, w20, #0x1
     954:	mov	w2, w20
     958:	ldr	x1, [x21, #24]
     95c:	ldr	x3, [x21, #32]
     960:	sub	x3, x3, x1
     964:	asr	x3, x3, #4
     968:	mul	x3, x3, x23
     96c:	cmp	x3, w20, uxtw
     970:	b.ls	9dc <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x280>  // b.plast
     974:	add	x2, x2, x2, lsl #1
     978:	lsl	x2, x2, #4
     97c:	ldr	x0, [x19, #24]
     980:	add	x25, x0, x2
     984:	add	x0, x1, x2
     988:	ldr	x1, [x22, #24]
     98c:	add	x2, x1, x2
     990:	ldr	w1, [x0, #16]
     994:	ldr	w3, [x2, #16]
     998:	cmp	w1, w3
     99c:	b.ne	910 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1b4>  // b.any
     9a0:	cmp	w1, #0x40
     9a4:	b.ls	930 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1d4>  // b.plast
     9a8:	add	x1, x2, #0x8
     9ac:	add	x0, x0, #0x8
     9b0:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
     9b4:	and	w26, w0, #0xff
     9b8:	eor	w26, w26, #0x1
     9bc:	and	x26, x26, #0xff
     9c0:	ldr	w0, [x25, #16]
     9c4:	cmp	w0, #0x40
     9c8:	b.ls	944 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1e8>  // b.plast
     9cc:	ldr	x0, [x25, #8]
     9d0:	cbz	x0, 944 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1e8>
     9d4:	bl	0 <_ZdaPv>
     9d8:	b	944 <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x1e8>
     9dc:	ldp	x23, x24, [sp, #48]
     9e0:	ldp	x25, x26, [sp, #64]
     9e4:	b	9fc <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>
     9e8:	ldr	x1, [x21]
     9ec:	ldr	x0, [x22]
     9f0:	cmp	x1, x0
     9f4:	cset	x0, ne  // ne = any
     9f8:	str	x0, [x8, #8]
     9fc:	mov	x0, x19
     a00:	ldp	x19, x20, [sp, #16]
     a04:	ldp	x21, x22, [sp, #32]
     a08:	ldp	x29, x30, [sp], #80
     a0c:	ret

0000000000000a10 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>:
     a10:	stp	x29, x30, [sp, #-80]!
     a14:	mov	x29, sp
     a18:	stp	x19, x20, [sp, #16]
     a1c:	stp	x21, x22, [sp, #32]
     a20:	mov	x19, x8
     a24:	mov	x21, x0
     a28:	mov	x22, x1
     a2c:	mov	w0, #0x1                   	// #1
     a30:	str	w0, [x8, #16]
     a34:	str	xzr, [x8, #8]
     a38:	str	xzr, [x8, #24]
     a3c:	str	xzr, [x8, #32]
     a40:	str	xzr, [x8, #40]
     a44:	str	wzr, [x8]
     a48:	str	wzr, [x8, #4]
     a4c:	ldrb	w0, [x2, #8]
     a50:	cmp	w0, #0xf
     a54:	b.eq	bfc <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1ec>  // b.none
     a58:	mov	x20, x2
     a5c:	cmp	w0, #0x10
     a60:	b.eq	ae8 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.none
     a64:	cmp	w0, #0xb
     a68:	b.eq	ac0 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
     a6c:	stp	x23, x24, [sp, #48]
     a70:	stp	x25, x26, [sp, #64]
     a74:	bl	0 <_ZN4llvm4dbgsEv>
     a78:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     a7c:	add	x1, x1, #0x0
     a80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     a84:	mov	x19, x0
     a88:	mov	w3, #0x0                   	// #0
     a8c:	mov	w2, #0x0                   	// #0
     a90:	mov	x1, x0
     a94:	mov	x0, x20
     a98:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     a9c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     aa0:	add	x1, x1, #0x0
     aa4:	mov	x0, x19
     aa8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     aac:	mov	w2, #0xe4                  	// #228
     ab0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ab4:	add	x1, x1, #0x0
     ab8:	mov	x0, #0x0                   	// #0
     abc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     ac0:	add	x1, x1, #0x8
     ac4:	add	x0, x21, #0x8
     ac8:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     acc:	lsr	w0, w0, #31
     ad0:	str	x0, [x19, #8]
     ad4:	mov	x0, x19
     ad8:	ldp	x19, x20, [sp, #16]
     adc:	ldp	x21, x22, [sp, #32]
     ae0:	ldp	x29, x30, [sp], #80
     ae4:	ret
     ae8:	ldr	x0, [x21, #32]
     aec:	ldr	x1, [x21, #24]
     af0:	sub	x0, x0, x1
     af4:	asr	x1, x0, #4
     af8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     afc:	movk	x2, #0xaaab
     b00:	mul	x1, x1, x2
     b04:	ldr	x2, [x22, #32]
     b08:	ldr	x3, [x22, #24]
     b0c:	sub	x2, x2, x3
     b10:	cmp	x2, x0
     b14:	b.ne	b50 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x140>  // b.any
     b18:	add	x0, x8, #0x18
     b1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     b20:	ldr	x0, [x21, #24]
     b24:	ldr	x1, [x21, #32]
     b28:	cmp	x0, x1
     b2c:	b.eq	ad4 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
     b30:	stp	x23, x24, [sp, #48]
     b34:	stp	x25, x26, [sp, #64]
     b38:	mov	w20, #0x0                   	// #0
     b3c:	mov	x2, #0x0                   	// #0
     b40:	mov	w24, #0x1                   	// #1
     b44:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     b48:	movk	x23, #0xaaab
     b4c:	b	bac <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x19c>
     b50:	stp	x23, x24, [sp, #48]
     b54:	stp	x25, x26, [sp, #64]
     b58:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     b5c:	add	x3, x3, #0x0
     b60:	mov	w2, #0xe0                  	// #224
     b64:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     b68:	add	x1, x1, #0x0
     b6c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     b70:	add	x0, x0, #0x0
     b74:	bl	0 <__assert_fail>
     b78:	bl	0 <_ZdaPv>
     b7c:	mov	x1, x25
     b80:	str	x26, [x1, #8]!
     b84:	str	w24, [x1, #8]
     b88:	add	w20, w20, #0x1
     b8c:	mov	w2, w20
     b90:	ldr	x0, [x21, #24]
     b94:	ldr	x3, [x21, #32]
     b98:	sub	x3, x3, x0
     b9c:	asr	x3, x3, #4
     ba0:	mul	x3, x3, x23
     ba4:	cmp	x3, w20, uxtw
     ba8:	b.ls	bf0 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x1e0>  // b.plast
     bac:	add	x2, x2, x2, lsl #1
     bb0:	lsl	x2, x2, #4
     bb4:	ldr	x1, [x19, #24]
     bb8:	add	x25, x1, x2
     bbc:	ldr	x1, [x22, #24]
     bc0:	add	x1, x1, x2
     bc4:	add	x0, x0, x2
     bc8:	add	x1, x1, #0x8
     bcc:	add	x0, x0, #0x8
     bd0:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     bd4:	lsr	w26, w0, #31
     bd8:	ldr	w1, [x25, #16]
     bdc:	cmp	w1, #0x40
     be0:	b.ls	b7c <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x16c>  // b.plast
     be4:	ldr	x0, [x25, #8]
     be8:	cbnz	x0, b78 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x168>
     bec:	b	b7c <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x16c>
     bf0:	ldp	x23, x24, [sp, #48]
     bf4:	ldp	x25, x26, [sp, #64]
     bf8:	b	ad4 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
     bfc:	ldr	x1, [x21]
     c00:	ldr	x0, [x22]
     c04:	cmp	x1, x0
     c08:	cset	x0, cc  // cc = lo, ul, last
     c0c:	str	x0, [x8, #8]
     c10:	b	ad4 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>

0000000000000c14 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>:
     c14:	stp	x29, x30, [sp, #-80]!
     c18:	mov	x29, sp
     c1c:	stp	x19, x20, [sp, #16]
     c20:	stp	x21, x22, [sp, #32]
     c24:	mov	x19, x8
     c28:	mov	x21, x0
     c2c:	mov	x22, x1
     c30:	mov	w0, #0x1                   	// #1
     c34:	str	w0, [x8, #16]
     c38:	str	xzr, [x8, #8]
     c3c:	str	xzr, [x8, #24]
     c40:	str	xzr, [x8, #32]
     c44:	str	xzr, [x8, #40]
     c48:	str	wzr, [x8]
     c4c:	str	wzr, [x8, #4]
     c50:	ldrb	w0, [x2, #8]
     c54:	cmp	w0, #0xf
     c58:	b.eq	e00 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x1ec>  // b.none
     c5c:	mov	x20, x2
     c60:	cmp	w0, #0x10
     c64:	b.eq	cec <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.none
     c68:	cmp	w0, #0xb
     c6c:	b.eq	cc4 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
     c70:	stp	x23, x24, [sp, #48]
     c74:	stp	x25, x26, [sp, #64]
     c78:	bl	0 <_ZN4llvm4dbgsEv>
     c7c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     c80:	add	x1, x1, #0x0
     c84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     c88:	mov	x19, x0
     c8c:	mov	w3, #0x0                   	// #0
     c90:	mov	w2, #0x0                   	// #0
     c94:	mov	x1, x0
     c98:	mov	x0, x20
     c9c:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     ca0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ca4:	add	x1, x1, #0x0
     ca8:	mov	x0, x19
     cac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     cb0:	mov	w2, #0xf2                  	// #242
     cb4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     cb8:	add	x1, x1, #0x0
     cbc:	mov	x0, #0x0                   	// #0
     cc0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     cc4:	add	x1, x1, #0x8
     cc8:	add	x0, x21, #0x8
     ccc:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
     cd0:	lsr	w0, w0, #31
     cd4:	str	x0, [x19, #8]
     cd8:	mov	x0, x19
     cdc:	ldp	x19, x20, [sp, #16]
     ce0:	ldp	x21, x22, [sp, #32]
     ce4:	ldp	x29, x30, [sp], #80
     ce8:	ret
     cec:	ldr	x0, [x21, #32]
     cf0:	ldr	x1, [x21, #24]
     cf4:	sub	x0, x0, x1
     cf8:	asr	x1, x0, #4
     cfc:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     d00:	movk	x2, #0xaaab
     d04:	mul	x1, x1, x2
     d08:	ldr	x2, [x22, #32]
     d0c:	ldr	x3, [x22, #24]
     d10:	sub	x2, x2, x3
     d14:	cmp	x2, x0
     d18:	b.ne	d54 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x140>  // b.any
     d1c:	add	x0, x8, #0x18
     d20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     d24:	ldr	x0, [x21, #24]
     d28:	ldr	x1, [x21, #32]
     d2c:	cmp	x0, x1
     d30:	b.eq	cd8 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
     d34:	stp	x23, x24, [sp, #48]
     d38:	stp	x25, x26, [sp, #64]
     d3c:	mov	w20, #0x0                   	// #0
     d40:	mov	x2, #0x0                   	// #0
     d44:	mov	w24, #0x1                   	// #1
     d48:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     d4c:	movk	x23, #0xaaab
     d50:	b	db0 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x19c>
     d54:	stp	x23, x24, [sp, #48]
     d58:	stp	x25, x26, [sp, #64]
     d5c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     d60:	add	x3, x3, #0x0
     d64:	mov	w2, #0xee                  	// #238
     d68:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     d6c:	add	x1, x1, #0x0
     d70:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     d74:	add	x0, x0, #0x0
     d78:	bl	0 <__assert_fail>
     d7c:	bl	0 <_ZdaPv>
     d80:	mov	x1, x25
     d84:	str	x26, [x1, #8]!
     d88:	str	w24, [x1, #8]
     d8c:	add	w20, w20, #0x1
     d90:	mov	w2, w20
     d94:	ldr	x0, [x21, #24]
     d98:	ldr	x3, [x21, #32]
     d9c:	sub	x3, x3, x0
     da0:	asr	x3, x3, #4
     da4:	mul	x3, x3, x23
     da8:	cmp	x3, w20, uxtw
     dac:	b.ls	df4 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x1e0>  // b.plast
     db0:	add	x2, x2, x2, lsl #1
     db4:	lsl	x2, x2, #4
     db8:	ldr	x1, [x19, #24]
     dbc:	add	x25, x1, x2
     dc0:	ldr	x1, [x22, #24]
     dc4:	add	x1, x1, x2
     dc8:	add	x0, x0, x2
     dcc:	add	x1, x1, #0x8
     dd0:	add	x0, x0, #0x8
     dd4:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
     dd8:	lsr	w26, w0, #31
     ddc:	ldr	w1, [x25, #16]
     de0:	cmp	w1, #0x40
     de4:	b.ls	d80 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x16c>  // b.plast
     de8:	ldr	x0, [x25, #8]
     dec:	cbnz	x0, d7c <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x168>
     df0:	b	d80 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0x16c>
     df4:	ldp	x23, x24, [sp, #48]
     df8:	ldp	x25, x26, [sp, #64]
     dfc:	b	cd8 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
     e00:	ldr	x1, [x21]
     e04:	ldr	x0, [x22]
     e08:	cmp	x1, x0
     e0c:	cset	x0, cc  // cc = lo, ul, last
     e10:	str	x0, [x8, #8]
     e14:	b	cd8 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>

0000000000000e18 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>:
     e18:	stp	x29, x30, [sp, #-80]!
     e1c:	mov	x29, sp
     e20:	stp	x19, x20, [sp, #16]
     e24:	stp	x21, x22, [sp, #32]
     e28:	mov	x19, x8
     e2c:	mov	x21, x0
     e30:	mov	x22, x1
     e34:	mov	w0, #0x1                   	// #1
     e38:	str	w0, [x8, #16]
     e3c:	str	xzr, [x8, #8]
     e40:	str	xzr, [x8, #24]
     e44:	str	xzr, [x8, #32]
     e48:	str	xzr, [x8, #40]
     e4c:	str	wzr, [x8]
     e50:	str	wzr, [x8, #4]
     e54:	ldrb	w0, [x2, #8]
     e58:	cmp	w0, #0xf
     e5c:	b.eq	100c <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1f4>  // b.none
     e60:	mov	x20, x2
     e64:	cmp	w0, #0x10
     e68:	b.eq	ef4 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xdc>  // b.none
     e6c:	cmp	w0, #0xb
     e70:	b.eq	ec8 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
     e74:	stp	x23, x24, [sp, #48]
     e78:	stp	x25, x26, [sp, #64]
     e7c:	bl	0 <_ZN4llvm4dbgsEv>
     e80:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e84:	add	x1, x1, #0x0
     e88:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     e8c:	mov	x19, x0
     e90:	mov	w3, #0x0                   	// #0
     e94:	mov	w2, #0x0                   	// #0
     e98:	mov	x1, x0
     e9c:	mov	x0, x20
     ea0:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
     ea4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ea8:	add	x1, x1, #0x0
     eac:	mov	x0, x19
     eb0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     eb4:	mov	w2, #0x100                 	// #256
     eb8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     ebc:	add	x1, x1, #0x0
     ec0:	mov	x0, #0x0                   	// #0
     ec4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     ec8:	add	x1, x1, #0x8
     ecc:	add	x0, x21, #0x8
     ed0:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     ed4:	cmp	w0, #0x0
     ed8:	cset	x0, gt
     edc:	str	x0, [x19, #8]
     ee0:	mov	x0, x19
     ee4:	ldp	x19, x20, [sp, #16]
     ee8:	ldp	x21, x22, [sp, #32]
     eec:	ldp	x29, x30, [sp], #80
     ef0:	ret
     ef4:	ldr	x0, [x21, #32]
     ef8:	ldr	x1, [x21, #24]
     efc:	sub	x0, x0, x1
     f00:	asr	x1, x0, #4
     f04:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     f08:	movk	x2, #0xaaab
     f0c:	mul	x1, x1, x2
     f10:	ldr	x2, [x22, #32]
     f14:	ldr	x3, [x22, #24]
     f18:	sub	x2, x2, x3
     f1c:	cmp	x2, x0
     f20:	b.ne	f5c <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.any
     f24:	add	x0, x8, #0x18
     f28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
     f2c:	ldr	x4, [x21, #24]
     f30:	ldr	x0, [x21, #32]
     f34:	cmp	x4, x0
     f38:	b.eq	ee0 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
     f3c:	stp	x23, x24, [sp, #48]
     f40:	stp	x25, x26, [sp, #64]
     f44:	mov	w20, #0x0                   	// #0
     f48:	mov	x2, #0x0                   	// #0
     f4c:	mov	w24, #0x1                   	// #1
     f50:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     f54:	movk	x23, #0xaaab
     f58:	b	fb8 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
     f5c:	stp	x23, x24, [sp, #48]
     f60:	stp	x25, x26, [sp, #64]
     f64:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     f68:	add	x3, x3, #0x0
     f6c:	mov	w2, #0xfc                  	// #252
     f70:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     f74:	add	x1, x1, #0x0
     f78:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
     f7c:	add	x0, x0, #0x0
     f80:	bl	0 <__assert_fail>
     f84:	bl	0 <_ZdaPv>
     f88:	mov	x0, x25
     f8c:	str	x26, [x0, #8]!
     f90:	str	w24, [x0, #8]
     f94:	add	w20, w20, #0x1
     f98:	mov	w2, w20
     f9c:	ldr	x4, [x21, #24]
     fa0:	ldr	x3, [x21, #32]
     fa4:	sub	x3, x3, x4
     fa8:	asr	x3, x3, #4
     fac:	mul	x3, x3, x23
     fb0:	cmp	x3, w20, uxtw
     fb4:	b.ls	1000 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1e8>  // b.plast
     fb8:	add	x2, x2, x2, lsl #1
     fbc:	lsl	x2, x2, #4
     fc0:	ldr	x0, [x19, #24]
     fc4:	add	x25, x0, x2
     fc8:	ldr	x1, [x22, #24]
     fcc:	add	x1, x1, x2
     fd0:	add	x0, x4, x2
     fd4:	add	x1, x1, #0x8
     fd8:	add	x0, x0, #0x8
     fdc:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
     fe0:	cmp	w0, #0x0
     fe4:	cset	x26, gt
     fe8:	ldr	w0, [x25, #16]
     fec:	cmp	w0, #0x40
     ff0:	b.ls	f88 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x170>  // b.plast
     ff4:	ldr	x0, [x25, #8]
     ff8:	cbnz	x0, f84 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x16c>
     ffc:	b	f88 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x170>
    1000:	ldp	x23, x24, [sp, #48]
    1004:	ldp	x25, x26, [sp, #64]
    1008:	b	ee0 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    100c:	ldr	x1, [x21]
    1010:	ldr	x0, [x22]
    1014:	cmp	x1, x0
    1018:	cset	x0, hi  // hi = pmore
    101c:	str	x0, [x8, #8]
    1020:	b	ee0 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>

0000000000001024 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>:
    1024:	stp	x29, x30, [sp, #-80]!
    1028:	mov	x29, sp
    102c:	stp	x19, x20, [sp, #16]
    1030:	stp	x21, x22, [sp, #32]
    1034:	mov	x19, x8
    1038:	mov	x21, x0
    103c:	mov	x22, x1
    1040:	mov	w0, #0x1                   	// #1
    1044:	str	w0, [x8, #16]
    1048:	str	xzr, [x8, #8]
    104c:	str	xzr, [x8, #24]
    1050:	str	xzr, [x8, #32]
    1054:	str	xzr, [x8, #40]
    1058:	str	wzr, [x8]
    105c:	str	wzr, [x8, #4]
    1060:	ldrb	w0, [x2, #8]
    1064:	cmp	w0, #0xf
    1068:	b.eq	1218 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x1f4>  // b.none
    106c:	mov	x20, x2
    1070:	cmp	w0, #0x10
    1074:	b.eq	1100 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xdc>  // b.none
    1078:	cmp	w0, #0xb
    107c:	b.eq	10d4 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    1080:	stp	x23, x24, [sp, #48]
    1084:	stp	x25, x26, [sp, #64]
    1088:	bl	0 <_ZN4llvm4dbgsEv>
    108c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1090:	add	x1, x1, #0x0
    1094:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1098:	mov	x19, x0
    109c:	mov	w3, #0x0                   	// #0
    10a0:	mov	w2, #0x0                   	// #0
    10a4:	mov	x1, x0
    10a8:	mov	x0, x20
    10ac:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    10b0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    10b4:	add	x1, x1, #0x0
    10b8:	mov	x0, x19
    10bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    10c0:	mov	w2, #0x10e                 	// #270
    10c4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    10c8:	add	x1, x1, #0x0
    10cc:	mov	x0, #0x0                   	// #0
    10d0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    10d4:	add	x1, x1, #0x8
    10d8:	add	x0, x21, #0x8
    10dc:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    10e0:	cmp	w0, #0x0
    10e4:	cset	x0, gt
    10e8:	str	x0, [x19, #8]
    10ec:	mov	x0, x19
    10f0:	ldp	x19, x20, [sp, #16]
    10f4:	ldp	x21, x22, [sp, #32]
    10f8:	ldp	x29, x30, [sp], #80
    10fc:	ret
    1100:	ldr	x0, [x21, #32]
    1104:	ldr	x1, [x21, #24]
    1108:	sub	x0, x0, x1
    110c:	asr	x1, x0, #4
    1110:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1114:	movk	x2, #0xaaab
    1118:	mul	x1, x1, x2
    111c:	ldr	x2, [x22, #32]
    1120:	ldr	x3, [x22, #24]
    1124:	sub	x2, x2, x3
    1128:	cmp	x2, x0
    112c:	b.ne	1168 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.any
    1130:	add	x0, x8, #0x18
    1134:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1138:	ldr	x4, [x21, #24]
    113c:	ldr	x0, [x21, #32]
    1140:	cmp	x4, x0
    1144:	b.eq	10ec <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    1148:	stp	x23, x24, [sp, #48]
    114c:	stp	x25, x26, [sp, #64]
    1150:	mov	w20, #0x0                   	// #0
    1154:	mov	x2, #0x0                   	// #0
    1158:	mov	w24, #0x1                   	// #1
    115c:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1160:	movk	x23, #0xaaab
    1164:	b	11c4 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
    1168:	stp	x23, x24, [sp, #48]
    116c:	stp	x25, x26, [sp, #64]
    1170:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1174:	add	x3, x3, #0x0
    1178:	mov	w2, #0x10a                 	// #266
    117c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1180:	add	x1, x1, #0x0
    1184:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1188:	add	x0, x0, #0x0
    118c:	bl	0 <__assert_fail>
    1190:	bl	0 <_ZdaPv>
    1194:	mov	x0, x25
    1198:	str	x26, [x0, #8]!
    119c:	str	w24, [x0, #8]
    11a0:	add	w20, w20, #0x1
    11a4:	mov	w2, w20
    11a8:	ldr	x4, [x21, #24]
    11ac:	ldr	x3, [x21, #32]
    11b0:	sub	x3, x3, x4
    11b4:	asr	x3, x3, #4
    11b8:	mul	x3, x3, x23
    11bc:	cmp	x3, w20, uxtw
    11c0:	b.ls	120c <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x1e8>  // b.plast
    11c4:	add	x2, x2, x2, lsl #1
    11c8:	lsl	x2, x2, #4
    11cc:	ldr	x0, [x19, #24]
    11d0:	add	x25, x0, x2
    11d4:	ldr	x1, [x22, #24]
    11d8:	add	x1, x1, x2
    11dc:	add	x0, x4, x2
    11e0:	add	x1, x1, #0x8
    11e4:	add	x0, x0, #0x8
    11e8:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    11ec:	cmp	w0, #0x0
    11f0:	cset	x26, gt
    11f4:	ldr	w0, [x25, #16]
    11f8:	cmp	w0, #0x40
    11fc:	b.ls	1194 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x170>  // b.plast
    1200:	ldr	x0, [x25, #8]
    1204:	cbnz	x0, 1190 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x16c>
    1208:	b	1194 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0x170>
    120c:	ldp	x23, x24, [sp, #48]
    1210:	ldp	x25, x26, [sp, #64]
    1214:	b	10ec <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    1218:	ldr	x1, [x21]
    121c:	ldr	x0, [x22]
    1220:	cmp	x1, x0
    1224:	cset	x0, hi  // hi = pmore
    1228:	str	x0, [x8, #8]
    122c:	b	10ec <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE+0xc8>

0000000000001230 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>:
    1230:	stp	x29, x30, [sp, #-80]!
    1234:	mov	x29, sp
    1238:	stp	x19, x20, [sp, #16]
    123c:	stp	x21, x22, [sp, #32]
    1240:	mov	x19, x8
    1244:	mov	x21, x0
    1248:	mov	x22, x1
    124c:	mov	w0, #0x1                   	// #1
    1250:	str	w0, [x8, #16]
    1254:	str	xzr, [x8, #8]
    1258:	str	xzr, [x8, #24]
    125c:	str	xzr, [x8, #32]
    1260:	str	xzr, [x8, #40]
    1264:	str	wzr, [x8]
    1268:	str	wzr, [x8, #4]
    126c:	ldrb	w0, [x2, #8]
    1270:	cmp	w0, #0xf
    1274:	b.eq	1424 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1f4>  // b.none
    1278:	mov	x20, x2
    127c:	cmp	w0, #0x10
    1280:	b.eq	130c <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xdc>  // b.none
    1284:	cmp	w0, #0xb
    1288:	b.eq	12e0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    128c:	stp	x23, x24, [sp, #48]
    1290:	stp	x25, x26, [sp, #64]
    1294:	bl	0 <_ZN4llvm4dbgsEv>
    1298:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    129c:	add	x1, x1, #0x0
    12a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    12a4:	mov	x19, x0
    12a8:	mov	w3, #0x0                   	// #0
    12ac:	mov	w2, #0x0                   	// #0
    12b0:	mov	x1, x0
    12b4:	mov	x0, x20
    12b8:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    12bc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    12c0:	add	x1, x1, #0x0
    12c4:	mov	x0, x19
    12c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    12cc:	mov	w2, #0x11c                 	// #284
    12d0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    12d4:	add	x1, x1, #0x0
    12d8:	mov	x0, #0x0                   	// #0
    12dc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    12e0:	add	x1, x1, #0x8
    12e4:	add	x0, x21, #0x8
    12e8:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    12ec:	cmp	w0, #0x0
    12f0:	cset	x0, le
    12f4:	str	x0, [x19, #8]
    12f8:	mov	x0, x19
    12fc:	ldp	x19, x20, [sp, #16]
    1300:	ldp	x21, x22, [sp, #32]
    1304:	ldp	x29, x30, [sp], #80
    1308:	ret
    130c:	ldr	x0, [x21, #32]
    1310:	ldr	x1, [x21, #24]
    1314:	sub	x0, x0, x1
    1318:	asr	x1, x0, #4
    131c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1320:	movk	x2, #0xaaab
    1324:	mul	x1, x1, x2
    1328:	ldr	x2, [x22, #32]
    132c:	ldr	x3, [x22, #24]
    1330:	sub	x2, x2, x3
    1334:	cmp	x2, x0
    1338:	b.ne	1374 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.any
    133c:	add	x0, x8, #0x18
    1340:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1344:	ldr	x4, [x21, #24]
    1348:	ldr	x0, [x21, #32]
    134c:	cmp	x4, x0
    1350:	b.eq	12f8 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    1354:	stp	x23, x24, [sp, #48]
    1358:	stp	x25, x26, [sp, #64]
    135c:	mov	w20, #0x0                   	// #0
    1360:	mov	x2, #0x0                   	// #0
    1364:	mov	w24, #0x1                   	// #1
    1368:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    136c:	movk	x23, #0xaaab
    1370:	b	13d0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
    1374:	stp	x23, x24, [sp, #48]
    1378:	stp	x25, x26, [sp, #64]
    137c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1380:	add	x3, x3, #0x0
    1384:	mov	w2, #0x118                 	// #280
    1388:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    138c:	add	x1, x1, #0x0
    1390:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1394:	add	x0, x0, #0x0
    1398:	bl	0 <__assert_fail>
    139c:	bl	0 <_ZdaPv>
    13a0:	mov	x0, x25
    13a4:	str	x26, [x0, #8]!
    13a8:	str	w24, [x0, #8]
    13ac:	add	w20, w20, #0x1
    13b0:	mov	w2, w20
    13b4:	ldr	x4, [x21, #24]
    13b8:	ldr	x3, [x21, #32]
    13bc:	sub	x3, x3, x4
    13c0:	asr	x3, x3, #4
    13c4:	mul	x3, x3, x23
    13c8:	cmp	x3, w20, uxtw
    13cc:	b.ls	1418 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x1e8>  // b.plast
    13d0:	add	x2, x2, x2, lsl #1
    13d4:	lsl	x2, x2, #4
    13d8:	ldr	x0, [x19, #24]
    13dc:	add	x25, x0, x2
    13e0:	ldr	x1, [x22, #24]
    13e4:	add	x1, x1, x2
    13e8:	add	x0, x4, x2
    13ec:	add	x1, x1, #0x8
    13f0:	add	x0, x0, #0x8
    13f4:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    13f8:	cmp	w0, #0x0
    13fc:	cset	x26, le
    1400:	ldr	w0, [x25, #16]
    1404:	cmp	w0, #0x40
    1408:	b.ls	13a0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x170>  // b.plast
    140c:	ldr	x0, [x25, #8]
    1410:	cbnz	x0, 139c <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x16c>
    1414:	b	13a0 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x170>
    1418:	ldp	x23, x24, [sp, #48]
    141c:	ldp	x25, x26, [sp, #64]
    1420:	b	12f8 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    1424:	ldr	x1, [x21]
    1428:	ldr	x0, [x22]
    142c:	cmp	x1, x0
    1430:	cset	x0, ls  // ls = plast
    1434:	str	x0, [x8, #8]
    1438:	b	12f8 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>

000000000000143c <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>:
    143c:	stp	x29, x30, [sp, #-80]!
    1440:	mov	x29, sp
    1444:	stp	x19, x20, [sp, #16]
    1448:	stp	x21, x22, [sp, #32]
    144c:	mov	x19, x8
    1450:	mov	x21, x0
    1454:	mov	x22, x1
    1458:	mov	w0, #0x1                   	// #1
    145c:	str	w0, [x8, #16]
    1460:	str	xzr, [x8, #8]
    1464:	str	xzr, [x8, #24]
    1468:	str	xzr, [x8, #32]
    146c:	str	xzr, [x8, #40]
    1470:	str	wzr, [x8]
    1474:	str	wzr, [x8, #4]
    1478:	ldrb	w0, [x2, #8]
    147c:	cmp	w0, #0xf
    1480:	b.eq	1630 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x1f4>  // b.none
    1484:	mov	x20, x2
    1488:	cmp	w0, #0x10
    148c:	b.eq	1518 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xdc>  // b.none
    1490:	cmp	w0, #0xb
    1494:	b.eq	14ec <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    1498:	stp	x23, x24, [sp, #48]
    149c:	stp	x25, x26, [sp, #64]
    14a0:	bl	0 <_ZN4llvm4dbgsEv>
    14a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    14a8:	add	x1, x1, #0x0
    14ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    14b0:	mov	x19, x0
    14b4:	mov	w3, #0x0                   	// #0
    14b8:	mov	w2, #0x0                   	// #0
    14bc:	mov	x1, x0
    14c0:	mov	x0, x20
    14c4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    14c8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    14cc:	add	x1, x1, #0x0
    14d0:	mov	x0, x19
    14d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    14d8:	mov	w2, #0x12a                 	// #298
    14dc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    14e0:	add	x1, x1, #0x0
    14e4:	mov	x0, #0x0                   	// #0
    14e8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    14ec:	add	x1, x1, #0x8
    14f0:	add	x0, x21, #0x8
    14f4:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    14f8:	cmp	w0, #0x0
    14fc:	cset	x0, le
    1500:	str	x0, [x19, #8]
    1504:	mov	x0, x19
    1508:	ldp	x19, x20, [sp, #16]
    150c:	ldp	x21, x22, [sp, #32]
    1510:	ldp	x29, x30, [sp], #80
    1514:	ret
    1518:	ldr	x0, [x21, #32]
    151c:	ldr	x1, [x21, #24]
    1520:	sub	x0, x0, x1
    1524:	asr	x1, x0, #4
    1528:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    152c:	movk	x2, #0xaaab
    1530:	mul	x1, x1, x2
    1534:	ldr	x2, [x22, #32]
    1538:	ldr	x3, [x22, #24]
    153c:	sub	x2, x2, x3
    1540:	cmp	x2, x0
    1544:	b.ne	1580 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.any
    1548:	add	x0, x8, #0x18
    154c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1550:	ldr	x4, [x21, #24]
    1554:	ldr	x0, [x21, #32]
    1558:	cmp	x4, x0
    155c:	b.eq	1504 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    1560:	stp	x23, x24, [sp, #48]
    1564:	stp	x25, x26, [sp, #64]
    1568:	mov	w20, #0x0                   	// #0
    156c:	mov	x2, #0x0                   	// #0
    1570:	mov	w24, #0x1                   	// #1
    1574:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1578:	movk	x23, #0xaaab
    157c:	b	15dc <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
    1580:	stp	x23, x24, [sp, #48]
    1584:	stp	x25, x26, [sp, #64]
    1588:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    158c:	add	x3, x3, #0x0
    1590:	mov	w2, #0x126                 	// #294
    1594:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1598:	add	x1, x1, #0x0
    159c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    15a0:	add	x0, x0, #0x0
    15a4:	bl	0 <__assert_fail>
    15a8:	bl	0 <_ZdaPv>
    15ac:	mov	x0, x25
    15b0:	str	x26, [x0, #8]!
    15b4:	str	w24, [x0, #8]
    15b8:	add	w20, w20, #0x1
    15bc:	mov	w2, w20
    15c0:	ldr	x4, [x21, #24]
    15c4:	ldr	x3, [x21, #32]
    15c8:	sub	x3, x3, x4
    15cc:	asr	x3, x3, #4
    15d0:	mul	x3, x3, x23
    15d4:	cmp	x3, w20, uxtw
    15d8:	b.ls	1624 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x1e8>  // b.plast
    15dc:	add	x2, x2, x2, lsl #1
    15e0:	lsl	x2, x2, #4
    15e4:	ldr	x0, [x19, #24]
    15e8:	add	x25, x0, x2
    15ec:	ldr	x1, [x22, #24]
    15f0:	add	x1, x1, x2
    15f4:	add	x0, x4, x2
    15f8:	add	x1, x1, #0x8
    15fc:	add	x0, x0, #0x8
    1600:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1604:	cmp	w0, #0x0
    1608:	cset	x26, le
    160c:	ldr	w0, [x25, #16]
    1610:	cmp	w0, #0x40
    1614:	b.ls	15ac <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x170>  // b.plast
    1618:	ldr	x0, [x25, #8]
    161c:	cbnz	x0, 15a8 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x16c>
    1620:	b	15ac <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0x170>
    1624:	ldp	x23, x24, [sp, #48]
    1628:	ldp	x25, x26, [sp, #64]
    162c:	b	1504 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    1630:	ldr	x1, [x21]
    1634:	ldr	x0, [x22]
    1638:	cmp	x1, x0
    163c:	cset	x0, ls  // ls = plast
    1640:	str	x0, [x8, #8]
    1644:	b	1504 <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>

0000000000001648 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>:
    1648:	stp	x29, x30, [sp, #-80]!
    164c:	mov	x29, sp
    1650:	stp	x19, x20, [sp, #16]
    1654:	stp	x21, x22, [sp, #32]
    1658:	mov	x19, x8
    165c:	mov	x21, x0
    1660:	mov	x22, x1
    1664:	mov	w0, #0x1                   	// #1
    1668:	str	w0, [x8, #16]
    166c:	str	xzr, [x8, #8]
    1670:	str	xzr, [x8, #24]
    1674:	str	xzr, [x8, #32]
    1678:	str	xzr, [x8, #40]
    167c:	str	wzr, [x8]
    1680:	str	wzr, [x8, #4]
    1684:	ldrb	w0, [x2, #8]
    1688:	cmp	w0, #0xf
    168c:	b.eq	183c <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1f4>  // b.none
    1690:	mov	x20, x2
    1694:	cmp	w0, #0x10
    1698:	b.eq	1724 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xdc>  // b.none
    169c:	cmp	w0, #0xb
    16a0:	b.eq	16f8 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    16a4:	stp	x23, x24, [sp, #48]
    16a8:	stp	x25, x26, [sp, #64]
    16ac:	bl	0 <_ZN4llvm4dbgsEv>
    16b0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    16b4:	add	x1, x1, #0x0
    16b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    16bc:	mov	x19, x0
    16c0:	mov	w3, #0x0                   	// #0
    16c4:	mov	w2, #0x0                   	// #0
    16c8:	mov	x1, x0
    16cc:	mov	x0, x20
    16d0:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    16d4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    16d8:	add	x1, x1, #0x0
    16dc:	mov	x0, x19
    16e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    16e4:	mov	w2, #0x138                 	// #312
    16e8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    16ec:	add	x1, x1, #0x0
    16f0:	mov	x0, #0x0                   	// #0
    16f4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    16f8:	add	x1, x1, #0x8
    16fc:	add	x0, x21, #0x8
    1700:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1704:	eor	x0, x0, #0x80000000
    1708:	lsr	w0, w0, #31
    170c:	str	x0, [x19, #8]
    1710:	mov	x0, x19
    1714:	ldp	x19, x20, [sp, #16]
    1718:	ldp	x21, x22, [sp, #32]
    171c:	ldp	x29, x30, [sp], #80
    1720:	ret
    1724:	ldr	x0, [x21, #32]
    1728:	ldr	x1, [x21, #24]
    172c:	sub	x0, x0, x1
    1730:	asr	x1, x0, #4
    1734:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1738:	movk	x2, #0xaaab
    173c:	mul	x1, x1, x2
    1740:	ldr	x2, [x22, #32]
    1744:	ldr	x3, [x22, #24]
    1748:	sub	x2, x2, x3
    174c:	cmp	x2, x0
    1750:	b.ne	178c <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.any
    1754:	add	x0, x8, #0x18
    1758:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    175c:	ldr	x4, [x21, #24]
    1760:	ldr	x0, [x21, #32]
    1764:	cmp	x4, x0
    1768:	b.eq	1710 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    176c:	stp	x23, x24, [sp, #48]
    1770:	stp	x25, x26, [sp, #64]
    1774:	mov	w20, #0x0                   	// #0
    1778:	mov	x2, #0x0                   	// #0
    177c:	mov	w24, #0x1                   	// #1
    1780:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1784:	movk	x23, #0xaaab
    1788:	b	17e8 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
    178c:	stp	x23, x24, [sp, #48]
    1790:	stp	x25, x26, [sp, #64]
    1794:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1798:	add	x3, x3, #0x0
    179c:	mov	w2, #0x134                 	// #308
    17a0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    17a4:	add	x1, x1, #0x0
    17a8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    17ac:	add	x0, x0, #0x0
    17b0:	bl	0 <__assert_fail>
    17b4:	bl	0 <_ZdaPv>
    17b8:	mov	x0, x25
    17bc:	str	x26, [x0, #8]!
    17c0:	str	w24, [x0, #8]
    17c4:	add	w20, w20, #0x1
    17c8:	mov	w2, w20
    17cc:	ldr	x4, [x21, #24]
    17d0:	ldr	x3, [x21, #32]
    17d4:	sub	x3, x3, x4
    17d8:	asr	x3, x3, #4
    17dc:	mul	x3, x3, x23
    17e0:	cmp	x3, w20, uxtw
    17e4:	b.ls	1830 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x1e8>  // b.plast
    17e8:	add	x2, x2, x2, lsl #1
    17ec:	lsl	x2, x2, #4
    17f0:	ldr	x0, [x19, #24]
    17f4:	add	x25, x0, x2
    17f8:	ldr	x1, [x22, #24]
    17fc:	add	x1, x1, x2
    1800:	add	x0, x4, x2
    1804:	add	x1, x1, #0x8
    1808:	add	x0, x0, #0x8
    180c:	bl	0 <_ZNK4llvm5APInt7compareERKS0_>
    1810:	eor	x0, x0, #0x80000000
    1814:	lsr	w26, w0, #31
    1818:	ldr	w0, [x25, #16]
    181c:	cmp	w0, #0x40
    1820:	b.ls	17b8 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x170>  // b.plast
    1824:	ldr	x0, [x25, #8]
    1828:	cbnz	x0, 17b4 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x16c>
    182c:	b	17b8 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x170>
    1830:	ldp	x23, x24, [sp, #48]
    1834:	ldp	x25, x26, [sp, #64]
    1838:	b	1710 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    183c:	ldr	x1, [x21]
    1840:	ldr	x0, [x22]
    1844:	cmp	x1, x0
    1848:	cset	x0, cs  // cs = hs, nlast
    184c:	str	x0, [x8, #8]
    1850:	b	1710 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>

0000000000001854 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>:
    1854:	stp	x29, x30, [sp, #-80]!
    1858:	mov	x29, sp
    185c:	stp	x19, x20, [sp, #16]
    1860:	stp	x21, x22, [sp, #32]
    1864:	mov	x19, x8
    1868:	mov	x21, x0
    186c:	mov	x22, x1
    1870:	mov	w0, #0x1                   	// #1
    1874:	str	w0, [x8, #16]
    1878:	str	xzr, [x8, #8]
    187c:	str	xzr, [x8, #24]
    1880:	str	xzr, [x8, #32]
    1884:	str	xzr, [x8, #40]
    1888:	str	wzr, [x8]
    188c:	str	wzr, [x8, #4]
    1890:	ldrb	w0, [x2, #8]
    1894:	cmp	w0, #0xf
    1898:	b.eq	1a48 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x1f4>  // b.none
    189c:	mov	x20, x2
    18a0:	cmp	w0, #0x10
    18a4:	b.eq	1930 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xdc>  // b.none
    18a8:	cmp	w0, #0xb
    18ac:	b.eq	1904 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    18b0:	stp	x23, x24, [sp, #48]
    18b4:	stp	x25, x26, [sp, #64]
    18b8:	bl	0 <_ZN4llvm4dbgsEv>
    18bc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    18c0:	add	x1, x1, #0x0
    18c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    18c8:	mov	x19, x0
    18cc:	mov	w3, #0x0                   	// #0
    18d0:	mov	w2, #0x0                   	// #0
    18d4:	mov	x1, x0
    18d8:	mov	x0, x20
    18dc:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    18e0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    18e4:	add	x1, x1, #0x0
    18e8:	mov	x0, x19
    18ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    18f0:	mov	w2, #0x146                 	// #326
    18f4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    18f8:	add	x1, x1, #0x0
    18fc:	mov	x0, #0x0                   	// #0
    1900:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1904:	add	x1, x1, #0x8
    1908:	add	x0, x21, #0x8
    190c:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1910:	eor	x0, x0, #0x80000000
    1914:	lsr	w0, w0, #31
    1918:	str	x0, [x19, #8]
    191c:	mov	x0, x19
    1920:	ldp	x19, x20, [sp, #16]
    1924:	ldp	x21, x22, [sp, #32]
    1928:	ldp	x29, x30, [sp], #80
    192c:	ret
    1930:	ldr	x0, [x21, #32]
    1934:	ldr	x1, [x21, #24]
    1938:	sub	x0, x0, x1
    193c:	asr	x1, x0, #4
    1940:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1944:	movk	x2, #0xaaab
    1948:	mul	x1, x1, x2
    194c:	ldr	x2, [x22, #32]
    1950:	ldr	x3, [x22, #24]
    1954:	sub	x2, x2, x3
    1958:	cmp	x2, x0
    195c:	b.ne	1998 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.any
    1960:	add	x0, x8, #0x18
    1964:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1968:	ldr	x4, [x21, #24]
    196c:	ldr	x0, [x21, #32]
    1970:	cmp	x4, x0
    1974:	b.eq	191c <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>  // b.none
    1978:	stp	x23, x24, [sp, #48]
    197c:	stp	x25, x26, [sp, #64]
    1980:	mov	w20, #0x0                   	// #0
    1984:	mov	x2, #0x0                   	// #0
    1988:	mov	w24, #0x1                   	// #1
    198c:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1990:	movk	x23, #0xaaab
    1994:	b	19f4 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
    1998:	stp	x23, x24, [sp, #48]
    199c:	stp	x25, x26, [sp, #64]
    19a0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    19a4:	add	x3, x3, #0x0
    19a8:	mov	w2, #0x142                 	// #322
    19ac:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    19b0:	add	x1, x1, #0x0
    19b4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    19b8:	add	x0, x0, #0x0
    19bc:	bl	0 <__assert_fail>
    19c0:	bl	0 <_ZdaPv>
    19c4:	mov	x0, x25
    19c8:	str	x26, [x0, #8]!
    19cc:	str	w24, [x0, #8]
    19d0:	add	w20, w20, #0x1
    19d4:	mov	w2, w20
    19d8:	ldr	x4, [x21, #24]
    19dc:	ldr	x3, [x21, #32]
    19e0:	sub	x3, x3, x4
    19e4:	asr	x3, x3, #4
    19e8:	mul	x3, x3, x23
    19ec:	cmp	x3, w20, uxtw
    19f0:	b.ls	1a3c <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x1e8>  // b.plast
    19f4:	add	x2, x2, x2, lsl #1
    19f8:	lsl	x2, x2, #4
    19fc:	ldr	x0, [x19, #24]
    1a00:	add	x25, x0, x2
    1a04:	ldr	x1, [x22, #24]
    1a08:	add	x1, x1, x2
    1a0c:	add	x0, x4, x2
    1a10:	add	x1, x1, #0x8
    1a14:	add	x0, x0, #0x8
    1a18:	bl	0 <_ZNK4llvm5APInt13compareSignedERKS0_>
    1a1c:	eor	x0, x0, #0x80000000
    1a20:	lsr	w26, w0, #31
    1a24:	ldr	w0, [x25, #16]
    1a28:	cmp	w0, #0x40
    1a2c:	b.ls	19c4 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x170>  // b.plast
    1a30:	ldr	x0, [x25, #8]
    1a34:	cbnz	x0, 19c0 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x16c>
    1a38:	b	19c4 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0x170>
    1a3c:	ldp	x23, x24, [sp, #48]
    1a40:	ldp	x25, x26, [sp, #64]
    1a44:	b	191c <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>
    1a48:	ldr	x1, [x21]
    1a4c:	ldr	x0, [x22]
    1a50:	cmp	x1, x0
    1a54:	cset	x0, cs  // cs = hs, nlast
    1a58:	str	x0, [x8, #8]
    1a5c:	b	191c <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE+0xc8>

0000000000001a60 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>:
    1a60:	stp	x29, x30, [sp, #-96]!
    1a64:	mov	x29, sp
    1a68:	stp	x19, x20, [sp, #16]
    1a6c:	stp	x21, x22, [sp, #32]
    1a70:	mov	x19, x8
    1a74:	mov	x20, x0
    1a78:	mov	x22, x1
    1a7c:	mov	w0, #0x1                   	// #1
    1a80:	str	w0, [x8, #16]
    1a84:	str	xzr, [x8, #8]
    1a88:	str	xzr, [x8, #24]
    1a8c:	str	xzr, [x8, #32]
    1a90:	str	xzr, [x8, #40]
    1a94:	str	wzr, [x8]
    1a98:	str	wzr, [x8, #4]
    1a9c:	ldrb	w0, [x2, #8]
    1aa0:	cmp	w0, #0x10
    1aa4:	b.eq	1ae8 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x88>  // b.none
    1aa8:	cmp	w0, #0x2
    1aac:	b.eq	1d18 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x2b8>  // b.none
    1ab0:	ldr	d0, [x20]
    1ab4:	mov	w0, #0x0                   	// #0
    1ab8:	fcmp	d0, d0
    1abc:	b.ne	1acc <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x6c>  // b.any
    1ac0:	ldr	d0, [x1]
    1ac4:	fcmp	d0, d0
    1ac8:	cset	w0, eq  // eq = none
    1acc:	and	x0, x0, #0xff
    1ad0:	str	x0, [x19, #8]
    1ad4:	mov	x0, x19
    1ad8:	ldp	x19, x20, [sp, #16]
    1adc:	ldp	x21, x22, [sp, #32]
    1ae0:	ldp	x29, x30, [sp], #96
    1ae4:	ret
    1ae8:	mov	x21, x2
    1aec:	ldr	x0, [x20, #32]
    1af0:	ldr	x1, [x20, #24]
    1af4:	sub	x0, x0, x1
    1af8:	asr	x1, x0, #4
    1afc:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1b00:	movk	x2, #0xaaab
    1b04:	mul	x1, x1, x2
    1b08:	ldr	x2, [x22, #32]
    1b0c:	ldr	x3, [x22, #24]
    1b10:	sub	x2, x2, x3
    1b14:	cmp	x2, x0
    1b18:	b.ne	1b74 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x114>  // b.any
    1b1c:	add	x0, x8, #0x18
    1b20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1b24:	ldrb	w0, [x21, #8]
    1b28:	cmp	w0, #0x10
    1b2c:	b.ne	1ba0 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x140>  // b.any
    1b30:	ldr	x0, [x21, #24]
    1b34:	ldrb	w0, [x0, #8]
    1b38:	cmp	w0, #0x2
    1b3c:	b.eq	1bcc <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x16c>  // b.none
    1b40:	ldr	x3, [x20, #24]
    1b44:	ldr	x0, [x20, #32]
    1b48:	cmp	x3, x0
    1b4c:	b.eq	1ad4 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.none
    1b50:	stp	x23, x24, [sp, #48]
    1b54:	stp	x25, x26, [sp, #64]
    1b58:	str	x27, [sp, #80]
    1b5c:	mov	x21, #0x0                   	// #0
    1b60:	mov	w25, #0x0                   	// #0
    1b64:	mov	w24, #0x1                   	// #1
    1b68:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1b6c:	movk	x23, #0xaaab
    1b70:	b	1cbc <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x25c>
    1b74:	stp	x23, x24, [sp, #48]
    1b78:	stp	x25, x26, [sp, #64]
    1b7c:	str	x27, [sp, #80]
    1b80:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1b84:	add	x3, x3, #0x0
    1b88:	mov	w2, #0x24e                 	// #590
    1b8c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1b90:	add	x1, x1, #0x0
    1b94:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1b98:	add	x0, x0, #0x0
    1b9c:	bl	0 <__assert_fail>
    1ba0:	stp	x23, x24, [sp, #48]
    1ba4:	stp	x25, x26, [sp, #64]
    1ba8:	str	x27, [sp, #80]
    1bac:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1bb0:	add	x3, x3, #0x0
    1bb4:	mov	w2, #0x108                 	// #264
    1bb8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1bbc:	add	x1, x1, #0x0
    1bc0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1bc4:	add	x0, x0, #0x0
    1bc8:	bl	0 <__assert_fail>
    1bcc:	ldr	x2, [x20, #24]
    1bd0:	ldr	x0, [x20, #32]
    1bd4:	cmp	x0, x2
    1bd8:	b.eq	1ad4 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.none
    1bdc:	stp	x23, x24, [sp, #48]
    1be0:	stp	x25, x26, [sp, #64]
    1be4:	str	x27, [sp, #80]
    1be8:	mov	x21, #0x0                   	// #0
    1bec:	mov	w25, #0x0                   	// #0
    1bf0:	mov	w24, #0x1                   	// #1
    1bf4:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1bf8:	movk	x23, #0xaaab
    1bfc:	b	1c2c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1cc>
    1c00:	mov	x0, x26
    1c04:	str	x27, [x0, #8]!
    1c08:	str	w24, [x0, #8]
    1c0c:	add	x21, x21, #0x1
    1c10:	ldr	x2, [x20, #24]
    1c14:	ldr	x0, [x20, #32]
    1c18:	sub	x0, x0, x2
    1c1c:	asr	x0, x0, #4
    1c20:	mul	x0, x0, x23
    1c24:	cmp	x21, x0
    1c28:	b.cs	1c7c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x21c>  // b.hs, b.nlast
    1c2c:	add	x1, x21, x21, lsl #1
    1c30:	lsl	x1, x1, #4
    1c34:	ldr	x0, [x19, #24]
    1c38:	add	x26, x0, x1
    1c3c:	ldr	s0, [x2, x1]
    1c40:	mov	w0, w25
    1c44:	fcmp	s0, s0
    1c48:	b.ne	1c5c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    1c4c:	ldr	x0, [x22, #24]
    1c50:	ldr	s0, [x0, x1]
    1c54:	fcmp	s0, s0
    1c58:	cset	w0, eq  // eq = none
    1c5c:	and	x27, x0, #0xff
    1c60:	ldr	w0, [x26, #16]
    1c64:	cmp	w0, #0x40
    1c68:	b.ls	1c00 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>  // b.plast
    1c6c:	ldr	x0, [x26, #8]
    1c70:	cbz	x0, 1c00 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
    1c74:	bl	0 <_ZdaPv>
    1c78:	b	1c00 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x1a0>
    1c7c:	ldp	x23, x24, [sp, #48]
    1c80:	ldp	x25, x26, [sp, #64]
    1c84:	ldr	x27, [sp, #80]
    1c88:	b	1ad4 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x74>
    1c8c:	bl	0 <_ZdaPv>
    1c90:	mov	x0, x26
    1c94:	str	x27, [x0, #8]!
    1c98:	str	w24, [x0, #8]
    1c9c:	add	x21, x21, #0x1
    1ca0:	ldr	x3, [x20, #24]
    1ca4:	ldr	x2, [x20, #32]
    1ca8:	sub	x2, x2, x3
    1cac:	asr	x2, x2, #4
    1cb0:	mul	x2, x2, x23
    1cb4:	cmp	x21, x2
    1cb8:	b.cs	1d08 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x2a8>  // b.hs, b.nlast
    1cbc:	add	x1, x21, x21, lsl #1
    1cc0:	lsl	x1, x1, #4
    1cc4:	ldr	x0, [x19, #24]
    1cc8:	add	x26, x0, x1
    1ccc:	ldr	d0, [x3, x1]
    1cd0:	mov	w0, w25
    1cd4:	fcmp	d0, d0
    1cd8:	b.ne	1cec <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.any
    1cdc:	ldr	x0, [x22, #24]
    1ce0:	ldr	d0, [x0, x1]
    1ce4:	fcmp	d0, d0
    1ce8:	cset	w0, eq  // eq = none
    1cec:	and	x27, x0, #0xff
    1cf0:	ldr	w0, [x26, #16]
    1cf4:	cmp	w0, #0x40
    1cf8:	b.ls	1c90 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x230>  // b.plast
    1cfc:	ldr	x0, [x26, #8]
    1d00:	cbnz	x0, 1c8c <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x22c>
    1d04:	b	1c90 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x230>
    1d08:	ldp	x23, x24, [sp, #48]
    1d0c:	ldp	x25, x26, [sp, #64]
    1d10:	ldr	x27, [sp, #80]
    1d14:	b	1ad4 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x74>
    1d18:	ldr	s0, [x20]
    1d1c:	mov	w0, #0x0                   	// #0
    1d20:	fcmp	s0, s0
    1d24:	b.ne	1d34 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>  // b.any
    1d28:	ldr	s0, [x1]
    1d2c:	fcmp	s0, s0
    1d30:	cset	w0, eq  // eq = none
    1d34:	and	x0, x0, #0xff
    1d38:	str	x0, [x19, #8]
    1d3c:	b	1ad4 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE+0x74>

0000000000001d40 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>:
    1d40:	stp	x29, x30, [sp, #-80]!
    1d44:	mov	x29, sp
    1d48:	stp	x19, x20, [sp, #16]
    1d4c:	stp	x21, x22, [sp, #32]
    1d50:	mov	x19, x8
    1d54:	mov	x20, x0
    1d58:	mov	x22, x1
    1d5c:	mov	w0, #0x1                   	// #1
    1d60:	str	w0, [x8, #16]
    1d64:	str	xzr, [x8, #8]
    1d68:	str	xzr, [x8, #24]
    1d6c:	str	xzr, [x8, #32]
    1d70:	str	xzr, [x8, #40]
    1d74:	str	wzr, [x8]
    1d78:	str	wzr, [x8, #4]
    1d7c:	ldrb	w0, [x2, #8]
    1d80:	cmp	w0, #0x10
    1d84:	b.eq	1dc8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x88>  // b.none
    1d88:	cmp	w0, #0x2
    1d8c:	b.eq	1fd8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x298>  // b.none
    1d90:	ldr	d0, [x20]
    1d94:	mov	w0, #0x1                   	// #1
    1d98:	fcmp	d0, d0
    1d9c:	b.ne	1dac <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x6c>  // b.any
    1da0:	ldr	d0, [x1]
    1da4:	fcmp	d0, d0
    1da8:	cset	w0, ne  // ne = any
    1dac:	and	x0, x0, #0xff
    1db0:	str	x0, [x19, #8]
    1db4:	mov	x0, x19
    1db8:	ldp	x19, x20, [sp, #16]
    1dbc:	ldp	x21, x22, [sp, #32]
    1dc0:	ldp	x29, x30, [sp], #80
    1dc4:	ret
    1dc8:	mov	x21, x2
    1dcc:	ldr	x0, [x20, #32]
    1dd0:	ldr	x1, [x20, #24]
    1dd4:	sub	x0, x0, x1
    1dd8:	asr	x1, x0, #4
    1ddc:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1de0:	movk	x2, #0xaaab
    1de4:	mul	x1, x1, x2
    1de8:	ldr	x2, [x22, #32]
    1dec:	ldr	x3, [x22, #24]
    1df0:	sub	x2, x2, x3
    1df4:	cmp	x2, x0
    1df8:	b.ne	1e4c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x10c>  // b.any
    1dfc:	add	x0, x8, #0x18
    1e00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e04:	ldrb	w0, [x21, #8]
    1e08:	cmp	w0, #0x10
    1e0c:	b.ne	1e74 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x134>  // b.any
    1e10:	ldr	x0, [x21, #24]
    1e14:	ldrb	w0, [x0, #8]
    1e18:	cmp	w0, #0x2
    1e1c:	b.eq	1e9c <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x15c>  // b.none
    1e20:	ldr	x3, [x20, #24]
    1e24:	ldr	x0, [x20, #32]
    1e28:	cmp	x0, x3
    1e2c:	b.eq	1db4 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.none
    1e30:	stp	x23, x24, [sp, #48]
    1e34:	stp	x25, x26, [sp, #64]
    1e38:	mov	x21, #0x0                   	// #0
    1e3c:	mov	w23, #0x1                   	// #1
    1e40:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1e44:	movk	x24, #0xaaab
    1e48:	b	1f80 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x240>
    1e4c:	stp	x23, x24, [sp, #48]
    1e50:	stp	x25, x26, [sp, #64]
    1e54:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e58:	add	x3, x3, #0x0
    1e5c:	mov	w2, #0x26d                 	// #621
    1e60:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e64:	add	x1, x1, #0x0
    1e68:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e6c:	add	x0, x0, #0x0
    1e70:	bl	0 <__assert_fail>
    1e74:	stp	x23, x24, [sp, #48]
    1e78:	stp	x25, x26, [sp, #64]
    1e7c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e80:	add	x3, x3, #0x0
    1e84:	mov	w2, #0x108                 	// #264
    1e88:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e8c:	add	x1, x1, #0x0
    1e90:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    1e94:	add	x0, x0, #0x0
    1e98:	bl	0 <__assert_fail>
    1e9c:	ldr	x2, [x20, #24]
    1ea0:	ldr	x0, [x20, #32]
    1ea4:	cmp	x2, x0
    1ea8:	b.eq	1db4 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x74>  // b.none
    1eac:	stp	x23, x24, [sp, #48]
    1eb0:	stp	x25, x26, [sp, #64]
    1eb4:	mov	x21, #0x0                   	// #0
    1eb8:	mov	w23, #0x1                   	// #1
    1ebc:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1ec0:	movk	x24, #0xaaab
    1ec4:	b	1ef4 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1b4>
    1ec8:	mov	x0, x25
    1ecc:	str	x26, [x0, #8]!
    1ed0:	str	w23, [x0, #8]
    1ed4:	add	x21, x21, #0x1
    1ed8:	ldr	x2, [x20, #24]
    1edc:	ldr	x0, [x20, #32]
    1ee0:	sub	x0, x0, x2
    1ee4:	asr	x0, x0, #4
    1ee8:	mul	x0, x0, x24
    1eec:	cmp	x21, x0
    1ef0:	b.cs	1f44 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x204>  // b.hs, b.nlast
    1ef4:	add	x1, x21, x21, lsl #1
    1ef8:	lsl	x1, x1, #4
    1efc:	ldr	x0, [x19, #24]
    1f00:	add	x25, x0, x1
    1f04:	ldr	s0, [x2, x1]
    1f08:	mov	w0, w23
    1f0c:	fcmp	s0, s0
    1f10:	b.ne	1f24 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x1e4>  // b.any
    1f14:	ldr	x0, [x22, #24]
    1f18:	ldr	s0, [x0, x1]
    1f1c:	fcmp	s0, s0
    1f20:	cset	w0, ne  // ne = any
    1f24:	and	x26, x0, #0xff
    1f28:	ldr	w0, [x25, #16]
    1f2c:	cmp	w0, #0x40
    1f30:	b.ls	1ec8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x188>  // b.plast
    1f34:	ldr	x0, [x25, #8]
    1f38:	cbz	x0, 1ec8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x188>
    1f3c:	bl	0 <_ZdaPv>
    1f40:	b	1ec8 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x188>
    1f44:	ldp	x23, x24, [sp, #48]
    1f48:	ldp	x25, x26, [sp, #64]
    1f4c:	b	1db4 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x74>
    1f50:	bl	0 <_ZdaPv>
    1f54:	mov	x0, x25
    1f58:	str	x26, [x0, #8]!
    1f5c:	str	w23, [x0, #8]
    1f60:	add	x21, x21, #0x1
    1f64:	ldr	x3, [x20, #24]
    1f68:	ldr	x2, [x20, #32]
    1f6c:	sub	x2, x2, x3
    1f70:	asr	x2, x2, #4
    1f74:	mul	x2, x2, x24
    1f78:	cmp	x21, x2
    1f7c:	b.cs	1fcc <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.hs, b.nlast
    1f80:	add	x1, x21, x21, lsl #1
    1f84:	lsl	x1, x1, #4
    1f88:	ldr	x0, [x19, #24]
    1f8c:	add	x25, x0, x1
    1f90:	ldr	d0, [x3, x1]
    1f94:	mov	w0, w23
    1f98:	fcmp	d0, d0
    1f9c:	b.ne	1fb0 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x270>  // b.any
    1fa0:	ldr	x0, [x22, #24]
    1fa4:	ldr	d0, [x0, x1]
    1fa8:	fcmp	d0, d0
    1fac:	cset	w0, ne  // ne = any
    1fb0:	and	x26, x0, #0xff
    1fb4:	ldr	w0, [x25, #16]
    1fb8:	cmp	w0, #0x40
    1fbc:	b.ls	1f54 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x214>  // b.plast
    1fc0:	ldr	x0, [x25, #8]
    1fc4:	cbnz	x0, 1f50 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x210>
    1fc8:	b	1f54 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x214>
    1fcc:	ldp	x23, x24, [sp, #48]
    1fd0:	ldp	x25, x26, [sp, #64]
    1fd4:	b	1db4 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x74>
    1fd8:	ldr	s0, [x20]
    1fdc:	mov	w0, #0x1                   	// #1
    1fe0:	fcmp	s0, s0
    1fe4:	b.ne	1ff4 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x2b4>  // b.any
    1fe8:	ldr	s0, [x1]
    1fec:	fcmp	s0, s0
    1ff0:	cset	w0, ne  // ne = any
    1ff4:	and	x0, x0, #0xff
    1ff8:	str	x0, [x19, #8]
    1ffc:	b	1db4 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE+0x74>

0000000000002000 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>:
    2000:	stp	x29, x30, [sp, #-80]!
    2004:	mov	x29, sp
    2008:	stp	x19, x20, [sp, #16]
    200c:	stp	x21, x22, [sp, #32]
    2010:	mov	x19, x8
    2014:	mov	x20, x0
    2018:	mov	x22, x1
    201c:	mov	w0, #0x1                   	// #1
    2020:	str	w0, [x8, #16]
    2024:	str	xzr, [x8, #8]
    2028:	str	xzr, [x8, #24]
    202c:	str	xzr, [x8, #32]
    2030:	str	xzr, [x8, #40]
    2034:	str	wzr, [x8]
    2038:	str	wzr, [x8, #4]
    203c:	ldrb	w0, [x2, #8]
    2040:	cmp	w0, #0x3
    2044:	b.eq	20d8 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.none
    2048:	mov	x21, x2
    204c:	cmp	w0, #0x10
    2050:	b.eq	20f0 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xf0>  // b.none
    2054:	cmp	w0, #0x2
    2058:	b.eq	20b0 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    205c:	stp	x23, x24, [sp, #48]
    2060:	stp	x25, x26, [sp, #64]
    2064:	bl	0 <_ZN4llvm4dbgsEv>
    2068:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    206c:	add	x1, x1, #0x0
    2070:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2074:	mov	x19, x0
    2078:	mov	w3, #0x0                   	// #0
    207c:	mov	w2, #0x0                   	// #0
    2080:	mov	x1, x0
    2084:	mov	x0, x21
    2088:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    208c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2090:	add	x1, x1, #0x0
    2094:	mov	x0, x19
    2098:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    209c:	mov	w2, #0x183                 	// #387
    20a0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    20a4:	add	x1, x1, #0x0
    20a8:	mov	x0, #0x0                   	// #0
    20ac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    20b0:	ldr	s1, [x20]
    20b4:	ldr	s0, [x1]
    20b8:	fcmp	s1, s0
    20bc:	cset	x0, eq  // eq = none
    20c0:	str	x0, [x8, #8]
    20c4:	mov	x0, x19
    20c8:	ldp	x19, x20, [sp, #16]
    20cc:	ldp	x21, x22, [sp, #32]
    20d0:	ldp	x29, x30, [sp], #80
    20d4:	ret
    20d8:	ldr	d1, [x20]
    20dc:	ldr	d0, [x1]
    20e0:	fcmp	d1, d0
    20e4:	cset	x0, eq  // eq = none
    20e8:	str	x0, [x8, #8]
    20ec:	b	20c4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    20f0:	ldr	x0, [x2, #24]
    20f4:	ldrb	w0, [x0, #8]
    20f8:	cmp	w0, #0x2
    20fc:	b.eq	2168 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.none
    2100:	ldr	x0, [x20, #32]
    2104:	ldr	x1, [x20, #24]
    2108:	sub	x0, x0, x1
    210c:	asr	x1, x0, #4
    2110:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2114:	movk	x2, #0xaaab
    2118:	mul	x1, x1, x2
    211c:	ldr	x2, [x22, #32]
    2120:	ldr	x3, [x22, #24]
    2124:	sub	x2, x2, x3
    2128:	cmp	x2, x0
    212c:	b.ne	2274 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x274>  // b.any
    2130:	add	x0, x8, #0x18
    2134:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2138:	ldr	x1, [x20, #24]
    213c:	ldr	x0, [x20, #32]
    2140:	cmp	x0, x1
    2144:	b.eq	20c4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    2148:	stp	x23, x24, [sp, #48]
    214c:	stp	x25, x26, [sp, #64]
    2150:	mov	w21, #0x0                   	// #0
    2154:	mov	x2, #0x0                   	// #0
    2158:	mov	w24, #0x1                   	// #1
    215c:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2160:	movk	x23, #0xaaab
    2164:	b	22d0 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x2d0>
    2168:	ldr	x0, [x20, #32]
    216c:	ldr	x1, [x20, #24]
    2170:	sub	x0, x0, x1
    2174:	asr	x1, x0, #4
    2178:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    217c:	movk	x2, #0xaaab
    2180:	mul	x1, x1, x2
    2184:	ldr	x2, [x22, #32]
    2188:	ldr	x3, [x22, #24]
    218c:	sub	x2, x2, x3
    2190:	cmp	x2, x0
    2194:	b.ne	21d0 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    2198:	add	x0, x8, #0x18
    219c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    21a0:	ldr	x2, [x20, #24]
    21a4:	ldr	x0, [x20, #32]
    21a8:	cmp	x2, x0
    21ac:	b.eq	20c4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    21b0:	stp	x23, x24, [sp, #48]
    21b4:	stp	x25, x26, [sp, #64]
    21b8:	mov	w21, #0x0                   	// #0
    21bc:	mov	x0, #0x0                   	// #0
    21c0:	mov	w24, #0x1                   	// #1
    21c4:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    21c8:	movk	x23, #0xaaab
    21cc:	b	222c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x22c>
    21d0:	stp	x23, x24, [sp, #48]
    21d4:	stp	x25, x26, [sp, #64]
    21d8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    21dc:	add	x3, x3, #0x0
    21e0:	mov	w2, #0x180                 	// #384
    21e4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    21e8:	add	x1, x1, #0x0
    21ec:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    21f0:	add	x0, x0, #0x0
    21f4:	bl	0 <__assert_fail>
    21f8:	bl	0 <_ZdaPv>
    21fc:	mov	x0, x25
    2200:	str	x26, [x0, #8]!
    2204:	str	w24, [x0, #8]
    2208:	add	w21, w21, #0x1
    220c:	mov	w0, w21
    2210:	ldr	x2, [x20, #24]
    2214:	ldr	x1, [x20, #32]
    2218:	sub	x1, x1, x2
    221c:	asr	x1, x1, #4
    2220:	mul	x1, x1, x23
    2224:	cmp	x1, w21, uxtw
    2228:	b.ls	2268 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x268>  // b.plast
    222c:	add	x0, x0, x0, lsl #1
    2230:	lsl	x0, x0, #4
    2234:	ldr	x25, [x19, #24]
    2238:	add	x25, x25, x0
    223c:	ldr	x1, [x22, #24]
    2240:	ldr	s1, [x1, x0]
    2244:	ldr	s0, [x2, x0]
    2248:	fcmp	s1, s0
    224c:	cset	x26, eq  // eq = none
    2250:	ldr	w0, [x25, #16]
    2254:	cmp	w0, #0x40
    2258:	b.ls	21fc <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.plast
    225c:	ldr	x0, [x25, #8]
    2260:	cbnz	x0, 21f8 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1f8>
    2264:	b	21fc <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>
    2268:	ldp	x23, x24, [sp, #48]
    226c:	ldp	x25, x26, [sp, #64]
    2270:	b	20c4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    2274:	stp	x23, x24, [sp, #48]
    2278:	stp	x25, x26, [sp, #64]
    227c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2280:	add	x3, x3, #0x0
    2284:	mov	w2, #0x180                 	// #384
    2288:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    228c:	add	x1, x1, #0x0
    2290:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2294:	add	x0, x0, #0x0
    2298:	bl	0 <__assert_fail>
    229c:	bl	0 <_ZdaPv>
    22a0:	mov	x0, x25
    22a4:	str	x26, [x0, #8]!
    22a8:	str	w24, [x0, #8]
    22ac:	add	w21, w21, #0x1
    22b0:	mov	w2, w21
    22b4:	ldr	x1, [x20, #24]
    22b8:	ldr	x3, [x20, #32]
    22bc:	sub	x3, x3, x1
    22c0:	asr	x3, x3, #4
    22c4:	mul	x3, x3, x23
    22c8:	cmp	x3, w21, uxtw
    22cc:	b.ls	230c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.plast
    22d0:	add	x2, x2, x2, lsl #1
    22d4:	lsl	x2, x2, #4
    22d8:	ldr	x0, [x19, #24]
    22dc:	add	x25, x0, x2
    22e0:	ldr	x0, [x22, #24]
    22e4:	ldr	d1, [x0, x2]
    22e8:	ldr	d0, [x1, x2]
    22ec:	fcmp	d1, d0
    22f0:	cset	x26, eq  // eq = none
    22f4:	ldr	w0, [x25, #16]
    22f8:	cmp	w0, #0x40
    22fc:	b.ls	22a0 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>  // b.plast
    2300:	ldr	x0, [x25, #8]
    2304:	cbnz	x0, 229c <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x29c>
    2308:	b	22a0 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>
    230c:	ldp	x23, x24, [sp, #48]
    2310:	ldp	x25, x26, [sp, #64]
    2314:	b	20c4 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE+0xc4>

0000000000002318 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>:
    2318:	stp	x29, x30, [sp, #-432]!
    231c:	mov	x29, sp
    2320:	stp	x19, x20, [sp, #16]
    2324:	stp	x21, x22, [sp, #32]
    2328:	mov	x20, x8
    232c:	mov	x19, x0
    2330:	mov	x22, x1
    2334:	mov	x21, x2
    2338:	mov	w0, #0x1                   	// #1
    233c:	str	w0, [sp, #304]
    2340:	str	xzr, [sp, #296]
    2344:	str	xzr, [sp, #312]
    2348:	str	xzr, [sp, #320]
    234c:	str	xzr, [sp, #328]
    2350:	str	wzr, [sp, #288]
    2354:	str	wzr, [sp, #292]
    2358:	ldrb	w0, [x2, #8]
    235c:	cmp	w0, #0x2
    2360:	b.eq	23c4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    2364:	ldr	d0, [x19]
    2368:	fcmp	d0, d0
    236c:	b.ne	237c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x64>  // b.any
    2370:	ldr	d0, [x1]
    2374:	fcmp	d0, d0
    2378:	b.eq	2458 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x140>  // b.none
    237c:	mov	x0, #0x1                   	// #1
    2380:	str	x0, [sp, #296]
    2384:	mov	x1, x20
    2388:	ldr	x2, [sp, #288]
    238c:	str	x2, [x1], #8
    2390:	str	w0, [x1, #8]
    2394:	str	x0, [x20, #8]
    2398:	str	wzr, [sp, #304]
    239c:	str	xzr, [x20, #24]
    23a0:	str	xzr, [x20, #32]
    23a4:	str	xzr, [x20, #40]
    23a8:	add	x0, sp, #0x120
    23ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    23b0:	mov	x0, x20
    23b4:	ldp	x19, x20, [sp, #16]
    23b8:	ldp	x21, x22, [sp, #32]
    23bc:	ldp	x29, x30, [sp], #432
    23c0:	ret
    23c4:	ldr	s0, [x19]
    23c8:	fcmp	s0, s0
    23cc:	b.ne	23dc <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.any
    23d0:	ldr	s0, [x1]
    23d4:	fcmp	s0, s0
    23d8:	b.eq	2460 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x148>  // b.none
    23dc:	mov	w0, #0x1                   	// #1
    23e0:	str	w0, [sp, #344]
    23e4:	mov	x0, #0x1                   	// #1
    23e8:	str	x0, [sp, #336]
    23ec:	add	x1, sp, #0x150
    23f0:	add	x0, sp, #0x128
    23f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    23f8:	ldr	w0, [sp, #344]
    23fc:	cmp	w0, #0x40
    2400:	b.ls	2410 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.plast
    2404:	ldr	x0, [sp, #336]
    2408:	cbz	x0, 2410 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0xf8>
    240c:	bl	0 <_ZdaPv>
    2410:	mov	x0, x20
    2414:	ldr	x1, [sp, #288]
    2418:	str	x1, [x0], #8
    241c:	ldr	w1, [sp, #304]
    2420:	str	w1, [x0, #8]
    2424:	ldr	x0, [sp, #296]
    2428:	str	x0, [x20, #8]
    242c:	str	wzr, [sp, #304]
    2430:	ldr	x1, [sp, #312]
    2434:	str	x1, [x20, #24]
    2438:	ldr	x1, [sp, #320]
    243c:	str	x1, [x20, #32]
    2440:	ldr	x1, [sp, #328]
    2444:	str	x1, [x20, #40]
    2448:	str	xzr, [sp, #328]
    244c:	str	xzr, [sp, #320]
    2450:	str	xzr, [sp, #312]
    2454:	b	23a8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    2458:	cmp	w0, #0x10
    245c:	b.eq	24a8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x190>  // b.none
    2460:	add	x0, sp, #0xc0
    2464:	mov	x1, x19
    2468:	mov	x19, x0
    246c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2470:	add	x0, sp, #0xf0
    2474:	mov	x1, x22
    2478:	mov	x22, x0
    247c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2480:	mov	x8, x20
    2484:	mov	x2, x21
    2488:	mov	x1, x22
    248c:	mov	x0, x19
    2490:	bl	2000 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    2494:	mov	x0, x22
    2498:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    249c:	mov	x0, x19
    24a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    24a4:	b	23a8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    24a8:	stp	x23, x24, [sp, #48]
    24ac:	stp	x25, x26, [sp, #64]
    24b0:	stp	x27, x28, [sp, #80]
    24b4:	mov	x0, x2
    24b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    24bc:	ldr	x0, [x0, #24]
    24c0:	ldrb	w0, [x0, #8]
    24c4:	cmp	w0, #0x2
    24c8:	b.eq	2538 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.none
    24cc:	ldr	x0, [x19, #32]
    24d0:	ldr	x1, [x19, #24]
    24d4:	sub	x0, x0, x1
    24d8:	asr	x1, x0, #4
    24dc:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    24e0:	movk	x2, #0xaaab
    24e4:	mul	x1, x1, x2
    24e8:	ldr	x2, [x22, #32]
    24ec:	ldr	x3, [x22, #24]
    24f0:	sub	x2, x2, x3
    24f4:	cmp	x2, x0
    24f8:	b.ne	267c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x364>  // b.any
    24fc:	add	x0, sp, #0x138
    2500:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2504:	ldr	x2, [x19, #24]
    2508:	ldr	x0, [x19, #32]
    250c:	cmp	x0, x2
    2510:	b.eq	2754 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    2514:	mov	w23, #0x0                   	// #0
    2518:	mov	x0, #0x0                   	// #0
    251c:	mov	w25, #0x1                   	// #1
    2520:	mov	x27, #0x1                   	// #1
    2524:	add	x26, sp, #0x180
    2528:	add	x28, sp, #0x190
    252c:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2530:	movk	x24, #0xaaab
    2534:	b	26e8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>
    2538:	ldr	x0, [x19, #32]
    253c:	ldr	x1, [x19, #24]
    2540:	sub	x0, x0, x1
    2544:	asr	x1, x0, #4
    2548:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    254c:	movk	x2, #0xaaab
    2550:	mul	x1, x1, x2
    2554:	ldr	x2, [x22, #32]
    2558:	ldr	x3, [x22, #24]
    255c:	sub	x2, x2, x3
    2560:	cmp	x2, x0
    2564:	b.ne	25a4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.any
    2568:	add	x0, sp, #0x138
    256c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2570:	ldr	x2, [x19, #24]
    2574:	ldr	x0, [x19, #32]
    2578:	cmp	x2, x0
    257c:	b.eq	2754 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    2580:	mov	w23, #0x0                   	// #0
    2584:	mov	x0, #0x0                   	// #0
    2588:	mov	w25, #0x1                   	// #1
    258c:	mov	x27, #0x1                   	// #1
    2590:	add	x26, sp, #0x160
    2594:	add	x28, sp, #0x170
    2598:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    259c:	movk	x24, #0xaaab
    25a0:	b	2610 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2f8>
    25a4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25a8:	add	x3, x3, #0x0
    25ac:	mov	w2, #0x217                 	// #535
    25b0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25b4:	add	x1, x1, #0x0
    25b8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25bc:	add	x0, x0, #0x0
    25c0:	bl	0 <__assert_fail>
    25c4:	ldr	x1, [sp, #312]
    25c8:	add	x0, x1, x0
    25cc:	str	w25, [sp, #376]
    25d0:	str	xzr, [sp, #368]
    25d4:	mov	x1, x28
    25d8:	add	x0, x0, #0x8
    25dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    25e0:	ldr	w0, [sp, #376]
    25e4:	cmp	w0, #0x40
    25e8:	b.hi	266c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.pmore
    25ec:	add	w23, w23, #0x1
    25f0:	mov	w0, w23
    25f4:	ldr	x2, [x19, #24]
    25f8:	ldr	x1, [x19, #32]
    25fc:	sub	x1, x1, x2
    2600:	asr	x1, x1, #4
    2604:	mul	x1, x1, x24
    2608:	cmp	x1, w23, uxtw
    260c:	b.ls	2754 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    2610:	add	x0, x0, x0, lsl #1
    2614:	lsl	x0, x0, #4
    2618:	ldr	s0, [x2, x0]
    261c:	fcmp	s0, s0
    2620:	b.ne	2634 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x31c>  // b.any
    2624:	ldr	x1, [x22, #24]
    2628:	ldr	s0, [x1, x0]
    262c:	fcmp	s0, s0
    2630:	b.eq	25c4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2ac>  // b.none
    2634:	ldr	x1, [sp, #312]
    2638:	add	x0, x1, x0
    263c:	str	w25, [sp, #360]
    2640:	str	x27, [sp, #352]
    2644:	mov	x1, x26
    2648:	add	x0, x0, #0x8
    264c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2650:	ldr	w0, [sp, #360]
    2654:	cmp	w0, #0x40
    2658:	b.ls	25ec <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>  // b.plast
    265c:	ldr	x0, [sp, #352]
    2660:	cbz	x0, 25ec <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    2664:	bl	0 <_ZdaPv>
    2668:	b	25ec <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    266c:	ldr	x0, [sp, #368]
    2670:	cbz	x0, 25ec <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    2674:	bl	0 <_ZdaPv>
    2678:	b	25ec <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    267c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2680:	add	x3, x3, #0x0
    2684:	mov	w2, #0x217                 	// #535
    2688:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    268c:	add	x1, x1, #0x0
    2690:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2694:	add	x0, x0, #0x0
    2698:	bl	0 <__assert_fail>
    269c:	ldr	x1, [sp, #312]
    26a0:	add	x0, x1, x0
    26a4:	str	w25, [sp, #408]
    26a8:	str	xzr, [sp, #400]
    26ac:	mov	x1, x28
    26b0:	add	x0, x0, #0x8
    26b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    26b8:	ldr	w0, [sp, #408]
    26bc:	cmp	w0, #0x40
    26c0:	b.hi	2744 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    26c4:	add	w23, w23, #0x1
    26c8:	mov	w0, w23
    26cc:	ldr	x2, [x19, #24]
    26d0:	ldr	x1, [x19, #32]
    26d4:	sub	x1, x1, x2
    26d8:	asr	x1, x1, #4
    26dc:	mul	x1, x1, x24
    26e0:	cmp	x1, w23, uxtw
    26e4:	b.ls	2754 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    26e8:	add	x0, x0, x0, lsl #1
    26ec:	lsl	x0, x0, #4
    26f0:	ldr	d0, [x2, x0]
    26f4:	fcmp	d0, d0
    26f8:	b.ne	270c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3f4>  // b.any
    26fc:	ldr	x1, [x22, #24]
    2700:	ldr	d0, [x1, x0]
    2704:	fcmp	d0, d0
    2708:	b.eq	269c <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x384>  // b.none
    270c:	ldr	x1, [sp, #312]
    2710:	add	x0, x1, x0
    2714:	str	w25, [sp, #392]
    2718:	str	x27, [sp, #384]
    271c:	mov	x1, x26
    2720:	add	x0, x0, #0x8
    2724:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2728:	ldr	w0, [sp, #392]
    272c:	cmp	w0, #0x40
    2730:	b.ls	26c4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>  // b.plast
    2734:	ldr	x0, [sp, #384]
    2738:	cbz	x0, 26c4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    273c:	bl	0 <_ZdaPv>
    2740:	b	26c4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    2744:	ldr	x0, [sp, #400]
    2748:	cbz	x0, 26c4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    274c:	bl	0 <_ZdaPv>
    2750:	b	26c4 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    2754:	ldrb	w0, [x21, #8]
    2758:	cmp	w0, #0x10
    275c:	b.ne	2904 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x5ec>  // b.any
    2760:	add	x25, sp, #0x120
    2764:	mov	x1, x25
    2768:	add	x0, sp, #0x60
    276c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2770:	add	x23, sp, #0x90
    2774:	mov	x1, x19
    2778:	mov	x0, x23
    277c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2780:	add	x0, sp, #0xc0
    2784:	mov	x1, x22
    2788:	mov	x22, x0
    278c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2790:	add	x24, sp, #0xf0
    2794:	mov	x8, x24
    2798:	mov	x2, x21
    279c:	mov	x1, x22
    27a0:	mov	x0, x23
    27a4:	bl	2000 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    27a8:	ldr	x0, [sp, #240]
    27ac:	str	x0, [sp, #288]
    27b0:	add	x1, x24, #0x8
    27b4:	add	x0, x25, #0x8
    27b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    27bc:	add	x1, x24, #0x18
    27c0:	add	x0, x25, #0x18
    27c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    27c8:	mov	x0, x24
    27cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    27d0:	mov	x0, x22
    27d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    27d8:	mov	x0, x23
    27dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    27e0:	ldr	x1, [x19, #24]
    27e4:	ldr	x0, [x19, #32]
    27e8:	cmp	x1, x0
    27ec:	b.eq	28a8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.none
    27f0:	mov	x21, #0x0                   	// #0
    27f4:	mov	x22, #0x0                   	// #0
    27f8:	mov	w26, #0x1                   	// #1
    27fc:	mov	x25, #0x1                   	// #1
    2800:	add	x24, sp, #0x1a0
    2804:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2808:	movk	x23, #0xaaab
    280c:	b	2834 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x51c>
    2810:	add	x22, x22, #0x1
    2814:	add	x21, x21, #0x30
    2818:	ldr	x0, [x19, #32]
    281c:	ldr	x1, [x19, #24]
    2820:	sub	x0, x0, x1
    2824:	asr	x0, x0, #4
    2828:	mul	x0, x0, x23
    282c:	cmp	x22, x0
    2830:	b.cs	28a8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.hs, b.nlast
    2834:	ldr	x27, [sp, #120]
    2838:	add	x27, x27, x21
    283c:	add	x27, x27, #0x8
    2840:	ldr	w28, [x27, #8]
    2844:	cmp	w28, #0x40
    2848:	b.ls	2860 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x548>  // b.plast
    284c:	mov	x0, x27
    2850:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    2854:	sub	w28, w28, w0
    2858:	cmp	w28, #0x40
    285c:	b.hi	2810 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.pmore
    2860:	mov	x0, x27
    2864:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2868:	cmp	x0, #0x1
    286c:	b.ne	2810 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.any
    2870:	ldr	x0, [sp, #312]
    2874:	add	x0, x0, x21
    2878:	str	w26, [sp, #424]
    287c:	str	x25, [sp, #416]
    2880:	mov	x1, x24
    2884:	add	x0, x0, #0x8
    2888:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    288c:	ldr	w0, [sp, #424]
    2890:	cmp	w0, #0x40
    2894:	b.ls	2810 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.plast
    2898:	ldr	x0, [sp, #416]
    289c:	cbz	x0, 2810 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    28a0:	bl	0 <_ZdaPv>
    28a4:	b	2810 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    28a8:	mov	x0, x20
    28ac:	ldr	x1, [sp, #288]
    28b0:	str	x1, [x0], #8
    28b4:	ldr	w1, [sp, #304]
    28b8:	str	w1, [x0, #8]
    28bc:	ldr	x0, [sp, #296]
    28c0:	str	x0, [x20, #8]
    28c4:	str	wzr, [sp, #304]
    28c8:	ldr	x1, [sp, #312]
    28cc:	str	x1, [x20, #24]
    28d0:	ldr	x1, [sp, #320]
    28d4:	str	x1, [x20, #32]
    28d8:	ldr	x1, [sp, #328]
    28dc:	str	x1, [x20, #40]
    28e0:	str	xzr, [sp, #328]
    28e4:	str	xzr, [sp, #320]
    28e8:	str	xzr, [sp, #312]
    28ec:	add	x0, sp, #0x60
    28f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    28f4:	ldp	x23, x24, [sp, #48]
    28f8:	ldp	x25, x26, [sp, #64]
    28fc:	ldp	x27, x28, [sp, #80]
    2900:	b	23a8 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    2904:	ldp	x23, x24, [sp, #48]
    2908:	ldp	x25, x26, [sp, #64]
    290c:	ldp	x27, x28, [sp, #80]
    2910:	b	2460 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE+0x148>

0000000000002914 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>:
    2914:	stp	x29, x30, [sp, #-320]!
    2918:	mov	x29, sp
    291c:	stp	x19, x20, [sp, #16]
    2920:	stp	x21, x22, [sp, #32]
    2924:	stp	x23, x24, [sp, #48]
    2928:	mov	x19, x8
    292c:	mov	x20, x0
    2930:	mov	x21, x1
    2934:	mov	x22, x2
    2938:	add	x23, x8, #0x8
    293c:	mov	w0, #0x1                   	// #1
    2940:	str	w0, [x23, #8]
    2944:	str	xzr, [x8, #8]
    2948:	str	xzr, [x8, #24]
    294c:	str	xzr, [x8, #32]
    2950:	str	xzr, [x8, #40]
    2954:	str	wzr, [x8]
    2958:	str	wzr, [x8, #4]
    295c:	ldrb	w0, [x2, #8]
    2960:	cmp	w0, #0x2
    2964:	b.eq	29b4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0xa0>  // b.none
    2968:	ldr	d0, [x20]
    296c:	fcmp	d0, d0
    2970:	b.ne	2980 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x6c>  // b.any
    2974:	ldr	d0, [x1]
    2978:	fcmp	d0, d0
    297c:	b.eq	2a00 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0xec>  // b.none
    2980:	mov	w0, #0x1                   	// #1
    2984:	str	w0, [sp, #184]
    2988:	str	xzr, [sp, #176]
    298c:	add	x1, sp, #0xb0
    2990:	mov	x0, x23
    2994:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2998:	ldr	w0, [sp, #184]
    299c:	cmp	w0, #0x40
    29a0:	b.ls	302c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x718>  // b.plast
    29a4:	ldr	x0, [sp, #176]
    29a8:	cbz	x0, 302c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x718>
    29ac:	bl	0 <_ZdaPv>
    29b0:	b	302c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x718>
    29b4:	ldr	s0, [x20]
    29b8:	fcmp	s0, s0
    29bc:	b.ne	29cc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0xb8>  // b.any
    29c0:	ldr	s0, [x1]
    29c4:	fcmp	s0, s0
    29c8:	b.eq	2ce4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>  // b.none
    29cc:	mov	w0, #0x1                   	// #1
    29d0:	str	w0, [sp, #168]
    29d4:	str	xzr, [sp, #160]
    29d8:	add	x1, sp, #0xa0
    29dc:	mov	x0, x23
    29e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    29e4:	ldr	w0, [sp, #168]
    29e8:	cmp	w0, #0x40
    29ec:	b.ls	302c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x718>  // b.plast
    29f0:	ldr	x0, [sp, #160]
    29f4:	cbz	x0, 302c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x718>
    29f8:	bl	0 <_ZdaPv>
    29fc:	b	302c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x718>
    2a00:	cmp	w0, #0x10
    2a04:	b.ne	2ce4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>  // b.any
    2a08:	mov	x0, x2
    2a0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2a10:	ldr	x0, [x0, #24]
    2a14:	ldrb	w0, [x0, #8]
    2a18:	cmp	w0, #0x2
    2a1c:	b.eq	2a98 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x184>  // b.none
    2a20:	ldr	x0, [x20, #32]
    2a24:	ldr	x1, [x20, #24]
    2a28:	sub	x0, x0, x1
    2a2c:	asr	x1, x0, #4
    2a30:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2a34:	movk	x2, #0xaaab
    2a38:	mul	x1, x1, x2
    2a3c:	ldr	x2, [x21, #32]
    2a40:	ldr	x3, [x21, #24]
    2a44:	sub	x2, x2, x3
    2a48:	cmp	x2, x0
    2a4c:	b.ne	2bfc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x2e8>  // b.any
    2a50:	add	x0, x19, #0x18
    2a54:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2a58:	ldr	x2, [x20, #24]
    2a5c:	ldr	x0, [x20, #32]
    2a60:	cmp	x0, x2
    2a64:	b.eq	2ce4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>  // b.none
    2a68:	stp	x25, x26, [sp, #64]
    2a6c:	stp	x27, x28, [sp, #80]
    2a70:	mov	w24, #0x0                   	// #0
    2a74:	mov	x0, #0x0                   	// #0
    2a78:	mov	w26, #0x1                   	// #1
    2a7c:	add	x27, sp, #0xe0
    2a80:	mov	x28, #0x1                   	// #1
    2a84:	add	x1, sp, #0xf0
    2a88:	str	x1, [sp, #104]
    2a8c:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2a90:	movk	x25, #0xaaab
    2a94:	b	2c84 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x370>
    2a98:	ldr	x0, [x20, #32]
    2a9c:	ldr	x1, [x20, #24]
    2aa0:	sub	x0, x0, x1
    2aa4:	asr	x1, x0, #4
    2aa8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2aac:	movk	x2, #0xaaab
    2ab0:	mul	x1, x1, x2
    2ab4:	ldr	x2, [x21, #32]
    2ab8:	ldr	x3, [x21, #24]
    2abc:	sub	x2, x2, x3
    2ac0:	cmp	x0, x2
    2ac4:	b.ne	2b10 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.any
    2ac8:	add	x0, x19, #0x18
    2acc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2ad0:	ldr	x2, [x20, #24]
    2ad4:	ldr	x0, [x20, #32]
    2ad8:	cmp	x0, x2
    2adc:	b.eq	2ce4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>  // b.none
    2ae0:	stp	x25, x26, [sp, #64]
    2ae4:	stp	x27, x28, [sp, #80]
    2ae8:	mov	w24, #0x0                   	// #0
    2aec:	mov	x0, #0x0                   	// #0
    2af0:	mov	w26, #0x1                   	// #1
    2af4:	add	x27, sp, #0xc0
    2af8:	mov	x28, #0x1                   	// #1
    2afc:	add	x1, sp, #0xd0
    2b00:	str	x1, [sp, #104]
    2b04:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2b08:	movk	x25, #0xaaab
    2b0c:	b	2b84 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x270>
    2b10:	stp	x25, x26, [sp, #64]
    2b14:	stp	x27, x28, [sp, #80]
    2b18:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2b1c:	add	x3, x3, #0x0
    2b20:	mov	w2, #0x1b3                 	// #435
    2b24:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2b28:	add	x1, x1, #0x0
    2b2c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2b30:	add	x0, x0, #0x0
    2b34:	bl	0 <__assert_fail>
    2b38:	ldr	x1, [x19, #24]
    2b3c:	add	x0, x1, x0
    2b40:	str	w26, [sp, #216]
    2b44:	str	x28, [sp, #208]
    2b48:	ldr	x1, [sp, #104]
    2b4c:	add	x0, x0, #0x8
    2b50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2b54:	ldr	w0, [sp, #216]
    2b58:	cmp	w0, #0x40
    2b5c:	b.hi	2be0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x2cc>  // b.pmore
    2b60:	add	w24, w24, #0x1
    2b64:	mov	w0, w24
    2b68:	ldr	x2, [x20, #24]
    2b6c:	ldr	x1, [x20, #32]
    2b70:	sub	x1, x1, x2
    2b74:	asr	x1, x1, #4
    2b78:	mul	x1, x1, x25
    2b7c:	cmp	x1, w24, uxtw
    2b80:	b.ls	2bf0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x2dc>  // b.plast
    2b84:	add	x0, x0, x0, lsl #1
    2b88:	lsl	x0, x0, #4
    2b8c:	ldr	s0, [x2, x0]
    2b90:	fcmp	s0, s0
    2b94:	b.ne	2ba8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x294>  // b.any
    2b98:	ldr	x1, [x21, #24]
    2b9c:	ldr	s0, [x1, x0]
    2ba0:	fcmp	s0, s0
    2ba4:	b.eq	2b38 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x224>  // b.none
    2ba8:	ldr	x1, [x19, #24]
    2bac:	add	x0, x1, x0
    2bb0:	str	w26, [sp, #200]
    2bb4:	str	xzr, [sp, #192]
    2bb8:	mov	x1, x27
    2bbc:	add	x0, x0, #0x8
    2bc0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2bc4:	ldr	w0, [sp, #200]
    2bc8:	cmp	w0, #0x40
    2bcc:	b.ls	2b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x24c>  // b.plast
    2bd0:	ldr	x0, [sp, #192]
    2bd4:	cbz	x0, 2b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x24c>
    2bd8:	bl	0 <_ZdaPv>
    2bdc:	b	2b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x24c>
    2be0:	ldr	x0, [sp, #208]
    2be4:	cbz	x0, 2b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x24c>
    2be8:	bl	0 <_ZdaPv>
    2bec:	b	2b60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x24c>
    2bf0:	ldp	x25, x26, [sp, #64]
    2bf4:	ldp	x27, x28, [sp, #80]
    2bf8:	b	2ce4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>
    2bfc:	stp	x25, x26, [sp, #64]
    2c00:	stp	x27, x28, [sp, #80]
    2c04:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2c08:	add	x3, x3, #0x0
    2c0c:	mov	w2, #0x1b3                 	// #435
    2c10:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2c14:	add	x1, x1, #0x0
    2c18:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2c1c:	add	x0, x0, #0x0
    2c20:	bl	0 <__assert_fail>
    2c24:	ldr	x1, [x19, #24]
    2c28:	add	x0, x1, x0
    2c2c:	str	w26, [sp, #248]
    2c30:	str	x28, [sp, #240]
    2c34:	ldr	x1, [sp, #104]
    2c38:	add	x0, x0, #0x8
    2c3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2c40:	ldr	w0, [sp, #248]
    2c44:	cmp	w0, #0x40
    2c48:	b.ls	2c60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x34c>  // b.plast
    2c4c:	ldr	x0, [sp, #240]
    2c50:	cbz	x0, 2c60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x34c>
    2c54:	bl	0 <_ZdaPv>
    2c58:	b	2c60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x34c>
    2c5c:	bl	0 <_ZdaPv>
    2c60:	add	w24, w24, #0x1
    2c64:	mov	w0, w24
    2c68:	ldr	x2, [x20, #24]
    2c6c:	ldr	x1, [x20, #32]
    2c70:	sub	x1, x1, x2
    2c74:	asr	x1, x1, #4
    2c78:	mul	x1, x1, x25
    2c7c:	cmp	x1, w24, uxtw
    2c80:	b.ls	2cdc <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x3c8>  // b.plast
    2c84:	add	x0, x0, x0, lsl #1
    2c88:	lsl	x0, x0, #4
    2c8c:	ldr	d0, [x2, x0]
    2c90:	fcmp	d0, d0
    2c94:	b.ne	2ca8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x394>  // b.any
    2c98:	ldr	x1, [x21, #24]
    2c9c:	ldr	d0, [x1, x0]
    2ca0:	fcmp	d0, d0
    2ca4:	b.eq	2c24 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x310>  // b.none
    2ca8:	ldr	x1, [x19, #24]
    2cac:	add	x0, x1, x0
    2cb0:	str	w26, [sp, #232]
    2cb4:	str	xzr, [sp, #224]
    2cb8:	mov	x1, x27
    2cbc:	add	x0, x0, #0x8
    2cc0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2cc4:	ldr	w0, [sp, #232]
    2cc8:	cmp	w0, #0x40
    2ccc:	b.ls	2c60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x34c>  // b.plast
    2cd0:	ldr	x0, [sp, #224]
    2cd4:	cbnz	x0, 2c5c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x348>
    2cd8:	b	2c60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x34c>
    2cdc:	ldp	x25, x26, [sp, #64]
    2ce0:	ldp	x27, x28, [sp, #80]
    2ce4:	mov	x1, x19
    2ce8:	add	x0, sp, #0x70
    2cec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2cf0:	ldrb	w0, [x22, #8]
    2cf4:	cmp	w0, #0x3
    2cf8:	b.eq	2da4 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x490>  // b.none
    2cfc:	cmp	w0, #0x10
    2d00:	b.eq	2de8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x4d4>  // b.none
    2d04:	cmp	w0, #0x2
    2d08:	b.eq	2d60 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x44c>  // b.none
    2d0c:	stp	x25, x26, [sp, #64]
    2d10:	stp	x27, x28, [sp, #80]
    2d14:	bl	0 <_ZN4llvm4dbgsEv>
    2d18:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d1c:	add	x1, x1, #0x0
    2d20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d24:	mov	x19, x0
    2d28:	mov	w3, #0x0                   	// #0
    2d2c:	mov	w2, #0x0                   	// #0
    2d30:	mov	x1, x0
    2d34:	mov	x0, x22
    2d38:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    2d3c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d40:	add	x1, x1, #0x0
    2d44:	mov	x0, x19
    2d48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d4c:	mov	w2, #0x1bb                 	// #443
    2d50:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d54:	add	x1, x1, #0x0
    2d58:	mov	x0, #0x0                   	// #0
    2d5c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2d60:	ldr	s1, [x20]
    2d64:	ldr	s0, [x21]
    2d68:	fcmp	s1, s0
    2d6c:	cset	x0, ne  // ne = any
    2d70:	mov	w1, #0x1                   	// #1
    2d74:	str	w1, [sp, #264]
    2d78:	str	x0, [sp, #256]
    2d7c:	add	x1, sp, #0x100
    2d80:	mov	x0, x23
    2d84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2d88:	ldr	w0, [sp, #264]
    2d8c:	cmp	w0, #0x40
    2d90:	b.ls	3018 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x704>  // b.plast
    2d94:	ldr	x0, [sp, #256]
    2d98:	cbz	x0, 3018 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x704>
    2d9c:	bl	0 <_ZdaPv>
    2da0:	b	3018 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x704>
    2da4:	ldr	d1, [x20]
    2da8:	ldr	d0, [x21]
    2dac:	fcmp	d1, d0
    2db0:	cset	x0, ne  // ne = any
    2db4:	mov	w1, #0x1                   	// #1
    2db8:	str	w1, [sp, #280]
    2dbc:	str	x0, [sp, #272]
    2dc0:	add	x1, sp, #0x110
    2dc4:	mov	x0, x23
    2dc8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2dcc:	ldr	w0, [sp, #280]
    2dd0:	cmp	w0, #0x40
    2dd4:	b.ls	3018 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x704>  // b.plast
    2dd8:	ldr	x0, [sp, #272]
    2ddc:	cbz	x0, 3018 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x704>
    2de0:	bl	0 <_ZdaPv>
    2de4:	b	3018 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x704>
    2de8:	mov	x0, x22
    2dec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2df0:	ldr	x0, [x0, #24]
    2df4:	ldrb	w0, [x0, #8]
    2df8:	cmp	w0, #0x2
    2dfc:	b.eq	2e68 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x554>  // b.none
    2e00:	ldr	x0, [x20, #32]
    2e04:	ldr	x1, [x20, #24]
    2e08:	sub	x0, x0, x1
    2e0c:	asr	x1, x0, #4
    2e10:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2e14:	movk	x2, #0xaaab
    2e18:	mul	x1, x1, x2
    2e1c:	ldr	x2, [x21, #32]
    2e20:	ldr	x3, [x21, #24]
    2e24:	sub	x2, x2, x3
    2e28:	cmp	x2, x0
    2e2c:	b.ne	2f78 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x664>  // b.any
    2e30:	add	x0, x19, #0x18
    2e34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2e38:	ldr	x2, [x20, #24]
    2e3c:	ldr	x0, [x20, #32]
    2e40:	cmp	x0, x2
    2e44:	b.eq	3024 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x710>  // b.none
    2e48:	stp	x25, x26, [sp, #64]
    2e4c:	stp	x27, x28, [sp, #80]
    2e50:	mov	w23, #0x0                   	// #0
    2e54:	mov	x0, #0x0                   	// #0
    2e58:	mov	w25, #0x1                   	// #1
    2e5c:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2e60:	movk	x24, #0xaaab
    2e64:	b	2fd0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x6bc>
    2e68:	ldr	x0, [x20, #32]
    2e6c:	ldr	x1, [x20, #24]
    2e70:	sub	x0, x0, x1
    2e74:	asr	x1, x0, #4
    2e78:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2e7c:	movk	x2, #0xaaab
    2e80:	mul	x1, x1, x2
    2e84:	ldr	x2, [x21, #32]
    2e88:	ldr	x3, [x21, #24]
    2e8c:	sub	x2, x2, x3
    2e90:	cmp	x2, x0
    2e94:	b.ne	2ed0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5bc>  // b.any
    2e98:	add	x0, x19, #0x18
    2e9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2ea0:	ldr	x2, [x20, #24]
    2ea4:	ldr	x0, [x20, #32]
    2ea8:	cmp	x2, x0
    2eac:	b.eq	3024 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x710>  // b.none
    2eb0:	stp	x25, x26, [sp, #64]
    2eb4:	mov	w23, #0x0                   	// #0
    2eb8:	mov	x1, #0x0                   	// #0
    2ebc:	mov	w26, #0x1                   	// #1
    2ec0:	add	x25, sp, #0x120
    2ec4:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2ec8:	movk	x24, #0xaaab
    2ecc:	b	2f1c <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x608>
    2ed0:	stp	x25, x26, [sp, #64]
    2ed4:	stp	x27, x28, [sp, #80]
    2ed8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2edc:	add	x3, x3, #0x0
    2ee0:	mov	w2, #0x1b8                 	// #440
    2ee4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2ee8:	add	x1, x1, #0x0
    2eec:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2ef0:	add	x0, x0, #0x0
    2ef4:	bl	0 <__assert_fail>
    2ef8:	add	w23, w23, #0x1
    2efc:	mov	w1, w23
    2f00:	ldr	x2, [x20, #24]
    2f04:	ldr	x0, [x20, #32]
    2f08:	sub	x0, x0, x2
    2f0c:	asr	x0, x0, #4
    2f10:	mul	x0, x0, x24
    2f14:	cmp	x0, w23, uxtw
    2f18:	b.ls	2f70 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x65c>  // b.plast
    2f1c:	add	x1, x1, x1, lsl #1
    2f20:	lsl	x1, x1, #4
    2f24:	ldr	x0, [x19, #24]
    2f28:	add	x0, x0, x1
    2f2c:	ldr	x3, [x21, #24]
    2f30:	ldr	s1, [x3, x1]
    2f34:	ldr	s0, [x2, x1]
    2f38:	fcmp	s1, s0
    2f3c:	cset	x1, ne  // ne = any
    2f40:	str	w26, [sp, #296]
    2f44:	str	x1, [sp, #288]
    2f48:	mov	x1, x25
    2f4c:	add	x0, x0, #0x8
    2f50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f54:	ldr	w0, [sp, #296]
    2f58:	cmp	w0, #0x40
    2f5c:	b.ls	2ef8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5e4>  // b.plast
    2f60:	ldr	x0, [sp, #288]
    2f64:	cbz	x0, 2ef8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5e4>
    2f68:	bl	0 <_ZdaPv>
    2f6c:	b	2ef8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x5e4>
    2f70:	ldp	x25, x26, [sp, #64]
    2f74:	b	3018 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x704>
    2f78:	stp	x25, x26, [sp, #64]
    2f7c:	stp	x27, x28, [sp, #80]
    2f80:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f84:	add	x3, x3, #0x0
    2f88:	mov	w2, #0x1b8                 	// #440
    2f8c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f90:	add	x1, x1, #0x0
    2f94:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    2f98:	add	x0, x0, #0x0
    2f9c:	bl	0 <__assert_fail>
    2fa0:	mov	x0, x26
    2fa4:	str	x27, [x0, #8]!
    2fa8:	str	w25, [x0, #8]
    2fac:	add	w23, w23, #0x1
    2fb0:	mov	w0, w23
    2fb4:	ldr	x2, [x20, #24]
    2fb8:	ldr	x1, [x20, #32]
    2fbc:	sub	x1, x1, x2
    2fc0:	asr	x1, x1, #4
    2fc4:	mul	x1, x1, x24
    2fc8:	cmp	x1, w23, uxtw
    2fcc:	b.ls	3010 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x6fc>  // b.plast
    2fd0:	add	x0, x0, x0, lsl #1
    2fd4:	lsl	x0, x0, #4
    2fd8:	ldr	x26, [x19, #24]
    2fdc:	add	x26, x26, x0
    2fe0:	ldr	x1, [x21, #24]
    2fe4:	ldr	d1, [x1, x0]
    2fe8:	ldr	d0, [x2, x0]
    2fec:	fcmp	d1, d0
    2ff0:	cset	x27, ne  // ne = any
    2ff4:	ldr	w0, [x26, #16]
    2ff8:	cmp	w0, #0x40
    2ffc:	b.ls	2fa0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x68c>  // b.plast
    3000:	ldr	x0, [x26, #8]
    3004:	cbz	x0, 2fa0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x68c>
    3008:	bl	0 <_ZdaPv>
    300c:	b	2fa0 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x68c>
    3010:	ldp	x25, x26, [sp, #64]
    3014:	ldp	x27, x28, [sp, #80]
    3018:	ldrb	w0, [x22, #8]
    301c:	cmp	w0, #0x10
    3020:	b.eq	3044 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x730>  // b.none
    3024:	add	x0, sp, #0x70
    3028:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    302c:	mov	x0, x19
    3030:	ldp	x19, x20, [sp, #16]
    3034:	ldp	x21, x22, [sp, #32]
    3038:	ldp	x23, x24, [sp, #48]
    303c:	ldp	x29, x30, [sp], #320
    3040:	ret
    3044:	ldr	x1, [x20, #24]
    3048:	ldr	x0, [x20, #32]
    304c:	cmp	x1, x0
    3050:	b.eq	3024 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x710>  // b.none
    3054:	stp	x25, x26, [sp, #64]
    3058:	stp	x27, x28, [sp, #80]
    305c:	mov	x21, #0x0                   	// #0
    3060:	mov	x22, #0x0                   	// #0
    3064:	mov	w25, #0x1                   	// #1
    3068:	add	x24, sp, #0x130
    306c:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3070:	movk	x23, #0xaaab
    3074:	b	30a8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x794>
    3078:	mov	x0, x26
    307c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3080:	cbz	x0, 30d8 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x7c4>
    3084:	add	x22, x22, #0x1
    3088:	add	x21, x21, #0x30
    308c:	ldr	x0, [x20, #32]
    3090:	ldr	x1, [x20, #24]
    3094:	sub	x0, x0, x1
    3098:	asr	x0, x0, #4
    309c:	mul	x0, x0, x23
    30a0:	cmp	x22, x0
    30a4:	b.cs	3110 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x7fc>  // b.hs, b.nlast
    30a8:	ldr	x26, [sp, #136]
    30ac:	add	x26, x26, x21
    30b0:	add	x26, x26, #0x8
    30b4:	ldr	w27, [x26, #8]
    30b8:	cmp	w27, #0x40
    30bc:	b.ls	3078 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x764>  // b.plast
    30c0:	mov	x0, x26
    30c4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    30c8:	sub	w27, w27, w0
    30cc:	cmp	w27, #0x40
    30d0:	b.hi	3084 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x770>  // b.pmore
    30d4:	b	3078 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x764>
    30d8:	ldr	x0, [x19, #24]
    30dc:	add	x0, x0, x21
    30e0:	str	w25, [sp, #312]
    30e4:	str	xzr, [sp, #304]
    30e8:	mov	x1, x24
    30ec:	add	x0, x0, #0x8
    30f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    30f4:	ldr	w0, [sp, #312]
    30f8:	cmp	w0, #0x40
    30fc:	b.ls	3084 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x770>  // b.plast
    3100:	ldr	x0, [sp, #304]
    3104:	cbz	x0, 3084 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x770>
    3108:	bl	0 <_ZdaPv>
    310c:	b	3084 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x770>
    3110:	ldp	x25, x26, [sp, #64]
    3114:	ldp	x27, x28, [sp, #80]
    3118:	b	3024 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE+0x710>

000000000000311c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>:
    311c:	stp	x29, x30, [sp, #-432]!
    3120:	mov	x29, sp
    3124:	stp	x19, x20, [sp, #16]
    3128:	stp	x21, x22, [sp, #32]
    312c:	mov	x20, x8
    3130:	mov	x19, x0
    3134:	mov	x22, x1
    3138:	mov	x21, x2
    313c:	mov	w0, #0x1                   	// #1
    3140:	str	w0, [sp, #304]
    3144:	str	xzr, [sp, #296]
    3148:	str	xzr, [sp, #312]
    314c:	str	xzr, [sp, #320]
    3150:	str	xzr, [sp, #328]
    3154:	str	wzr, [sp, #288]
    3158:	str	wzr, [sp, #292]
    315c:	ldrb	w0, [x2, #8]
    3160:	cmp	w0, #0x2
    3164:	b.eq	31c8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    3168:	ldr	d0, [x19]
    316c:	fcmp	d0, d0
    3170:	b.ne	3180 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x64>  // b.any
    3174:	ldr	d0, [x1]
    3178:	fcmp	d0, d0
    317c:	b.eq	325c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x140>  // b.none
    3180:	mov	x0, #0x1                   	// #1
    3184:	str	x0, [sp, #296]
    3188:	mov	x1, x20
    318c:	ldr	x2, [sp, #288]
    3190:	str	x2, [x1], #8
    3194:	str	w0, [x1, #8]
    3198:	str	x0, [x20, #8]
    319c:	str	wzr, [sp, #304]
    31a0:	str	xzr, [x20, #24]
    31a4:	str	xzr, [x20, #32]
    31a8:	str	xzr, [x20, #40]
    31ac:	add	x0, sp, #0x120
    31b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    31b4:	mov	x0, x20
    31b8:	ldp	x19, x20, [sp, #16]
    31bc:	ldp	x21, x22, [sp, #32]
    31c0:	ldp	x29, x30, [sp], #432
    31c4:	ret
    31c8:	ldr	s0, [x19]
    31cc:	fcmp	s0, s0
    31d0:	b.ne	31e0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.any
    31d4:	ldr	s0, [x1]
    31d8:	fcmp	s0, s0
    31dc:	b.eq	3264 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x148>  // b.none
    31e0:	mov	w0, #0x1                   	// #1
    31e4:	str	w0, [sp, #344]
    31e8:	mov	x0, #0x1                   	// #1
    31ec:	str	x0, [sp, #336]
    31f0:	add	x1, sp, #0x150
    31f4:	add	x0, sp, #0x128
    31f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    31fc:	ldr	w0, [sp, #344]
    3200:	cmp	w0, #0x40
    3204:	b.ls	3214 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.plast
    3208:	ldr	x0, [sp, #336]
    320c:	cbz	x0, 3214 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>
    3210:	bl	0 <_ZdaPv>
    3214:	mov	x0, x20
    3218:	ldr	x1, [sp, #288]
    321c:	str	x1, [x0], #8
    3220:	ldr	w1, [sp, #304]
    3224:	str	w1, [x0, #8]
    3228:	ldr	x0, [sp, #296]
    322c:	str	x0, [x20, #8]
    3230:	str	wzr, [sp, #304]
    3234:	ldr	x1, [sp, #312]
    3238:	str	x1, [x20, #24]
    323c:	ldr	x1, [sp, #320]
    3240:	str	x1, [x20, #32]
    3244:	ldr	x1, [sp, #328]
    3248:	str	x1, [x20, #40]
    324c:	str	xzr, [sp, #328]
    3250:	str	xzr, [sp, #320]
    3254:	str	xzr, [sp, #312]
    3258:	b	31ac <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    325c:	cmp	w0, #0x10
    3260:	b.eq	32ac <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x190>  // b.none
    3264:	add	x0, sp, #0xc0
    3268:	mov	x1, x19
    326c:	mov	x19, x0
    3270:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3274:	add	x0, sp, #0xf0
    3278:	mov	x1, x22
    327c:	mov	x22, x0
    3280:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3284:	mov	x8, x20
    3288:	mov	x2, x21
    328c:	mov	x1, x22
    3290:	mov	x0, x19
    3294:	bl	2914 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    3298:	mov	x0, x22
    329c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    32a0:	mov	x0, x19
    32a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    32a8:	b	31ac <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    32ac:	stp	x23, x24, [sp, #48]
    32b0:	stp	x25, x26, [sp, #64]
    32b4:	stp	x27, x28, [sp, #80]
    32b8:	mov	x0, x2
    32bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    32c0:	ldr	x0, [x0, #24]
    32c4:	ldrb	w0, [x0, #8]
    32c8:	cmp	w0, #0x2
    32cc:	b.eq	333c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.none
    32d0:	ldr	x0, [x19, #32]
    32d4:	ldr	x1, [x19, #24]
    32d8:	sub	x0, x0, x1
    32dc:	asr	x1, x0, #4
    32e0:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    32e4:	movk	x2, #0xaaab
    32e8:	mul	x1, x1, x2
    32ec:	ldr	x2, [x22, #32]
    32f0:	ldr	x3, [x22, #24]
    32f4:	sub	x2, x2, x3
    32f8:	cmp	x2, x0
    32fc:	b.ne	3480 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x364>  // b.any
    3300:	add	x0, sp, #0x138
    3304:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3308:	ldr	x2, [x19, #24]
    330c:	ldr	x0, [x19, #32]
    3310:	cmp	x0, x2
    3314:	b.eq	3558 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    3318:	mov	w23, #0x0                   	// #0
    331c:	mov	x0, #0x0                   	// #0
    3320:	mov	w25, #0x1                   	// #1
    3324:	mov	x27, #0x1                   	// #1
    3328:	add	x26, sp, #0x180
    332c:	add	x28, sp, #0x190
    3330:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3334:	movk	x24, #0xaaab
    3338:	b	34ec <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>
    333c:	ldr	x0, [x19, #32]
    3340:	ldr	x1, [x19, #24]
    3344:	sub	x0, x0, x1
    3348:	asr	x1, x0, #4
    334c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3350:	movk	x2, #0xaaab
    3354:	mul	x1, x1, x2
    3358:	ldr	x2, [x22, #32]
    335c:	ldr	x3, [x22, #24]
    3360:	sub	x2, x2, x3
    3364:	cmp	x2, x0
    3368:	b.ne	33a8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.any
    336c:	add	x0, sp, #0x138
    3370:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3374:	ldr	x2, [x19, #24]
    3378:	ldr	x0, [x19, #32]
    337c:	cmp	x2, x0
    3380:	b.eq	3558 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    3384:	mov	w23, #0x0                   	// #0
    3388:	mov	x0, #0x0                   	// #0
    338c:	mov	w25, #0x1                   	// #1
    3390:	mov	x27, #0x1                   	// #1
    3394:	add	x26, sp, #0x160
    3398:	add	x28, sp, #0x170
    339c:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    33a0:	movk	x24, #0xaaab
    33a4:	b	3414 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2f8>
    33a8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    33ac:	add	x3, x3, #0x0
    33b0:	mov	w2, #0x221                 	// #545
    33b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    33b8:	add	x1, x1, #0x0
    33bc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    33c0:	add	x0, x0, #0x0
    33c4:	bl	0 <__assert_fail>
    33c8:	ldr	x1, [sp, #312]
    33cc:	add	x0, x1, x0
    33d0:	str	w25, [sp, #376]
    33d4:	str	xzr, [sp, #368]
    33d8:	mov	x1, x28
    33dc:	add	x0, x0, #0x8
    33e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    33e4:	ldr	w0, [sp, #376]
    33e8:	cmp	w0, #0x40
    33ec:	b.hi	3470 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.pmore
    33f0:	add	w23, w23, #0x1
    33f4:	mov	w0, w23
    33f8:	ldr	x2, [x19, #24]
    33fc:	ldr	x1, [x19, #32]
    3400:	sub	x1, x1, x2
    3404:	asr	x1, x1, #4
    3408:	mul	x1, x1, x24
    340c:	cmp	x1, w23, uxtw
    3410:	b.ls	3558 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    3414:	add	x0, x0, x0, lsl #1
    3418:	lsl	x0, x0, #4
    341c:	ldr	s0, [x2, x0]
    3420:	fcmp	s0, s0
    3424:	b.ne	3438 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x31c>  // b.any
    3428:	ldr	x1, [x22, #24]
    342c:	ldr	s0, [x1, x0]
    3430:	fcmp	s0, s0
    3434:	b.eq	33c8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2ac>  // b.none
    3438:	ldr	x1, [sp, #312]
    343c:	add	x0, x1, x0
    3440:	str	w25, [sp, #360]
    3444:	str	x27, [sp, #352]
    3448:	mov	x1, x26
    344c:	add	x0, x0, #0x8
    3450:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3454:	ldr	w0, [sp, #360]
    3458:	cmp	w0, #0x40
    345c:	b.ls	33f0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>  // b.plast
    3460:	ldr	x0, [sp, #352]
    3464:	cbz	x0, 33f0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    3468:	bl	0 <_ZdaPv>
    346c:	b	33f0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    3470:	ldr	x0, [sp, #368]
    3474:	cbz	x0, 33f0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    3478:	bl	0 <_ZdaPv>
    347c:	b	33f0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    3480:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3484:	add	x3, x3, #0x0
    3488:	mov	w2, #0x221                 	// #545
    348c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3490:	add	x1, x1, #0x0
    3494:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3498:	add	x0, x0, #0x0
    349c:	bl	0 <__assert_fail>
    34a0:	ldr	x1, [sp, #312]
    34a4:	add	x0, x1, x0
    34a8:	str	w25, [sp, #408]
    34ac:	str	xzr, [sp, #400]
    34b0:	mov	x1, x28
    34b4:	add	x0, x0, #0x8
    34b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    34bc:	ldr	w0, [sp, #408]
    34c0:	cmp	w0, #0x40
    34c4:	b.hi	3548 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    34c8:	add	w23, w23, #0x1
    34cc:	mov	w0, w23
    34d0:	ldr	x2, [x19, #24]
    34d4:	ldr	x1, [x19, #32]
    34d8:	sub	x1, x1, x2
    34dc:	asr	x1, x1, #4
    34e0:	mul	x1, x1, x24
    34e4:	cmp	x1, w23, uxtw
    34e8:	b.ls	3558 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    34ec:	add	x0, x0, x0, lsl #1
    34f0:	lsl	x0, x0, #4
    34f4:	ldr	d0, [x2, x0]
    34f8:	fcmp	d0, d0
    34fc:	b.ne	3510 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3f4>  // b.any
    3500:	ldr	x1, [x22, #24]
    3504:	ldr	d0, [x1, x0]
    3508:	fcmp	d0, d0
    350c:	b.eq	34a0 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x384>  // b.none
    3510:	ldr	x1, [sp, #312]
    3514:	add	x0, x1, x0
    3518:	str	w25, [sp, #392]
    351c:	str	x27, [sp, #384]
    3520:	mov	x1, x26
    3524:	add	x0, x0, #0x8
    3528:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    352c:	ldr	w0, [sp, #392]
    3530:	cmp	w0, #0x40
    3534:	b.ls	34c8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>  // b.plast
    3538:	ldr	x0, [sp, #384]
    353c:	cbz	x0, 34c8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    3540:	bl	0 <_ZdaPv>
    3544:	b	34c8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    3548:	ldr	x0, [sp, #400]
    354c:	cbz	x0, 34c8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    3550:	bl	0 <_ZdaPv>
    3554:	b	34c8 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    3558:	ldrb	w0, [x21, #8]
    355c:	cmp	w0, #0x10
    3560:	b.ne	3708 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x5ec>  // b.any
    3564:	add	x25, sp, #0x120
    3568:	mov	x1, x25
    356c:	add	x0, sp, #0x60
    3570:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3574:	add	x23, sp, #0x90
    3578:	mov	x1, x19
    357c:	mov	x0, x23
    3580:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3584:	add	x0, sp, #0xc0
    3588:	mov	x1, x22
    358c:	mov	x22, x0
    3590:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3594:	add	x24, sp, #0xf0
    3598:	mov	x8, x24
    359c:	mov	x2, x21
    35a0:	mov	x1, x22
    35a4:	mov	x0, x23
    35a8:	bl	2914 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    35ac:	ldr	x0, [sp, #240]
    35b0:	str	x0, [sp, #288]
    35b4:	add	x1, x24, #0x8
    35b8:	add	x0, x25, #0x8
    35bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    35c0:	add	x1, x24, #0x18
    35c4:	add	x0, x25, #0x18
    35c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    35cc:	mov	x0, x24
    35d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    35d4:	mov	x0, x22
    35d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    35dc:	mov	x0, x23
    35e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    35e4:	ldr	x1, [x19, #24]
    35e8:	ldr	x0, [x19, #32]
    35ec:	cmp	x1, x0
    35f0:	b.eq	36ac <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.none
    35f4:	mov	x21, #0x0                   	// #0
    35f8:	mov	x22, #0x0                   	// #0
    35fc:	mov	w26, #0x1                   	// #1
    3600:	mov	x25, #0x1                   	// #1
    3604:	add	x24, sp, #0x1a0
    3608:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    360c:	movk	x23, #0xaaab
    3610:	b	3638 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x51c>
    3614:	add	x22, x22, #0x1
    3618:	add	x21, x21, #0x30
    361c:	ldr	x0, [x19, #32]
    3620:	ldr	x1, [x19, #24]
    3624:	sub	x0, x0, x1
    3628:	asr	x0, x0, #4
    362c:	mul	x0, x0, x23
    3630:	cmp	x22, x0
    3634:	b.cs	36ac <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.hs, b.nlast
    3638:	ldr	x27, [sp, #120]
    363c:	add	x27, x27, x21
    3640:	add	x27, x27, #0x8
    3644:	ldr	w28, [x27, #8]
    3648:	cmp	w28, #0x40
    364c:	b.ls	3664 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x548>  // b.plast
    3650:	mov	x0, x27
    3654:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3658:	sub	w28, w28, w0
    365c:	cmp	w28, #0x40
    3660:	b.hi	3614 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.pmore
    3664:	mov	x0, x27
    3668:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    366c:	cmp	x0, #0x1
    3670:	b.ne	3614 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.any
    3674:	ldr	x0, [sp, #312]
    3678:	add	x0, x0, x21
    367c:	str	w26, [sp, #424]
    3680:	str	x25, [sp, #416]
    3684:	mov	x1, x24
    3688:	add	x0, x0, #0x8
    368c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3690:	ldr	w0, [sp, #424]
    3694:	cmp	w0, #0x40
    3698:	b.ls	3614 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.plast
    369c:	ldr	x0, [sp, #416]
    36a0:	cbz	x0, 3614 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    36a4:	bl	0 <_ZdaPv>
    36a8:	b	3614 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    36ac:	mov	x0, x20
    36b0:	ldr	x1, [sp, #288]
    36b4:	str	x1, [x0], #8
    36b8:	ldr	w1, [sp, #304]
    36bc:	str	w1, [x0, #8]
    36c0:	ldr	x0, [sp, #296]
    36c4:	str	x0, [x20, #8]
    36c8:	str	wzr, [sp, #304]
    36cc:	ldr	x1, [sp, #312]
    36d0:	str	x1, [x20, #24]
    36d4:	ldr	x1, [sp, #320]
    36d8:	str	x1, [x20, #32]
    36dc:	ldr	x1, [sp, #328]
    36e0:	str	x1, [x20, #40]
    36e4:	str	xzr, [sp, #328]
    36e8:	str	xzr, [sp, #320]
    36ec:	str	xzr, [sp, #312]
    36f0:	add	x0, sp, #0x60
    36f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    36f8:	ldp	x23, x24, [sp, #48]
    36fc:	ldp	x25, x26, [sp, #64]
    3700:	ldp	x27, x28, [sp, #80]
    3704:	b	31ac <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    3708:	ldp	x23, x24, [sp, #48]
    370c:	ldp	x25, x26, [sp, #64]
    3710:	ldp	x27, x28, [sp, #80]
    3714:	b	3264 <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE+0x148>

0000000000003718 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>:
    3718:	stp	x29, x30, [sp, #-80]!
    371c:	mov	x29, sp
    3720:	stp	x19, x20, [sp, #16]
    3724:	stp	x21, x22, [sp, #32]
    3728:	mov	x19, x8
    372c:	mov	x20, x0
    3730:	mov	x22, x1
    3734:	mov	w0, #0x1                   	// #1
    3738:	str	w0, [x8, #16]
    373c:	str	xzr, [x8, #8]
    3740:	str	xzr, [x8, #24]
    3744:	str	xzr, [x8, #32]
    3748:	str	xzr, [x8, #40]
    374c:	str	wzr, [x8]
    3750:	str	wzr, [x8, #4]
    3754:	ldrb	w0, [x2, #8]
    3758:	cmp	w0, #0x3
    375c:	b.eq	37f0 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.none
    3760:	mov	x21, x2
    3764:	cmp	w0, #0x10
    3768:	b.eq	3808 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xf0>  // b.none
    376c:	cmp	w0, #0x2
    3770:	b.eq	37c8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    3774:	stp	x23, x24, [sp, #48]
    3778:	stp	x25, x26, [sp, #64]
    377c:	bl	0 <_ZN4llvm4dbgsEv>
    3780:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3784:	add	x1, x1, #0x0
    3788:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    378c:	mov	x19, x0
    3790:	mov	w3, #0x0                   	// #0
    3794:	mov	w2, #0x0                   	// #0
    3798:	mov	x1, x0
    379c:	mov	x0, x21
    37a0:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    37a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    37a8:	add	x1, x1, #0x0
    37ac:	mov	x0, x19
    37b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    37b4:	mov	w2, #0x1eb                 	// #491
    37b8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    37bc:	add	x1, x1, #0x0
    37c0:	mov	x0, #0x0                   	// #0
    37c4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    37c8:	ldr	s1, [x20]
    37cc:	ldr	s0, [x1]
    37d0:	fcmpe	s1, s0
    37d4:	cset	x0, mi  // mi = first
    37d8:	str	x0, [x8, #8]
    37dc:	mov	x0, x19
    37e0:	ldp	x19, x20, [sp, #16]
    37e4:	ldp	x21, x22, [sp, #32]
    37e8:	ldp	x29, x30, [sp], #80
    37ec:	ret
    37f0:	ldr	d1, [x20]
    37f4:	ldr	d0, [x1]
    37f8:	fcmpe	d1, d0
    37fc:	cset	x0, mi  // mi = first
    3800:	str	x0, [x8, #8]
    3804:	b	37dc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    3808:	ldr	x0, [x2, #24]
    380c:	ldrb	w0, [x0, #8]
    3810:	cmp	w0, #0x2
    3814:	b.eq	3880 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.none
    3818:	ldr	x0, [x20, #32]
    381c:	ldr	x1, [x20, #24]
    3820:	sub	x0, x0, x1
    3824:	asr	x1, x0, #4
    3828:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    382c:	movk	x2, #0xaaab
    3830:	mul	x1, x1, x2
    3834:	ldr	x2, [x22, #32]
    3838:	ldr	x3, [x22, #24]
    383c:	sub	x2, x2, x3
    3840:	cmp	x2, x0
    3844:	b.ne	398c <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x274>  // b.any
    3848:	add	x0, x8, #0x18
    384c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3850:	ldr	x1, [x20, #24]
    3854:	ldr	x0, [x20, #32]
    3858:	cmp	x0, x1
    385c:	b.eq	37dc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    3860:	stp	x23, x24, [sp, #48]
    3864:	stp	x25, x26, [sp, #64]
    3868:	mov	w21, #0x0                   	// #0
    386c:	mov	x2, #0x0                   	// #0
    3870:	mov	w24, #0x1                   	// #1
    3874:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3878:	movk	x23, #0xaaab
    387c:	b	39e8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x2d0>
    3880:	ldr	x0, [x20, #32]
    3884:	ldr	x1, [x20, #24]
    3888:	sub	x0, x0, x1
    388c:	asr	x1, x0, #4
    3890:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3894:	movk	x2, #0xaaab
    3898:	mul	x1, x1, x2
    389c:	ldr	x2, [x22, #32]
    38a0:	ldr	x3, [x22, #24]
    38a4:	sub	x2, x2, x3
    38a8:	cmp	x2, x0
    38ac:	b.ne	38e8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    38b0:	add	x0, x8, #0x18
    38b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    38b8:	ldr	x2, [x20, #24]
    38bc:	ldr	x0, [x20, #32]
    38c0:	cmp	x2, x0
    38c4:	b.eq	37dc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    38c8:	stp	x23, x24, [sp, #48]
    38cc:	stp	x25, x26, [sp, #64]
    38d0:	mov	w21, #0x0                   	// #0
    38d4:	mov	x0, #0x0                   	// #0
    38d8:	mov	w24, #0x1                   	// #1
    38dc:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    38e0:	movk	x23, #0xaaab
    38e4:	b	3944 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x22c>
    38e8:	stp	x23, x24, [sp, #48]
    38ec:	stp	x25, x26, [sp, #64]
    38f0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    38f4:	add	x3, x3, #0x0
    38f8:	mov	w2, #0x1e8                 	// #488
    38fc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3900:	add	x1, x1, #0x0
    3904:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3908:	add	x0, x0, #0x0
    390c:	bl	0 <__assert_fail>
    3910:	bl	0 <_ZdaPv>
    3914:	mov	x0, x25
    3918:	str	x26, [x0, #8]!
    391c:	str	w24, [x0, #8]
    3920:	add	w21, w21, #0x1
    3924:	mov	w0, w21
    3928:	ldr	x2, [x20, #24]
    392c:	ldr	x1, [x20, #32]
    3930:	sub	x1, x1, x2
    3934:	asr	x1, x1, #4
    3938:	mul	x1, x1, x23
    393c:	cmp	x1, w21, uxtw
    3940:	b.ls	3980 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x268>  // b.plast
    3944:	add	x0, x0, x0, lsl #1
    3948:	lsl	x0, x0, #4
    394c:	ldr	x25, [x19, #24]
    3950:	add	x25, x25, x0
    3954:	ldr	x1, [x22, #24]
    3958:	ldr	s1, [x2, x0]
    395c:	ldr	s0, [x1, x0]
    3960:	fcmpe	s1, s0
    3964:	cset	x26, mi  // mi = first
    3968:	ldr	w0, [x25, #16]
    396c:	cmp	w0, #0x40
    3970:	b.ls	3914 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.plast
    3974:	ldr	x0, [x25, #8]
    3978:	cbnz	x0, 3910 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1f8>
    397c:	b	3914 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>
    3980:	ldp	x23, x24, [sp, #48]
    3984:	ldp	x25, x26, [sp, #64]
    3988:	b	37dc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    398c:	stp	x23, x24, [sp, #48]
    3990:	stp	x25, x26, [sp, #64]
    3994:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3998:	add	x3, x3, #0x0
    399c:	mov	w2, #0x1e8                 	// #488
    39a0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    39a4:	add	x1, x1, #0x0
    39a8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    39ac:	add	x0, x0, #0x0
    39b0:	bl	0 <__assert_fail>
    39b4:	bl	0 <_ZdaPv>
    39b8:	mov	x0, x25
    39bc:	str	x26, [x0, #8]!
    39c0:	str	w24, [x0, #8]
    39c4:	add	w21, w21, #0x1
    39c8:	mov	w2, w21
    39cc:	ldr	x1, [x20, #24]
    39d0:	ldr	x3, [x20, #32]
    39d4:	sub	x3, x3, x1
    39d8:	asr	x3, x3, #4
    39dc:	mul	x3, x3, x23
    39e0:	cmp	x3, w21, uxtw
    39e4:	b.ls	3a24 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.plast
    39e8:	add	x2, x2, x2, lsl #1
    39ec:	lsl	x2, x2, #4
    39f0:	ldr	x0, [x19, #24]
    39f4:	add	x25, x0, x2
    39f8:	ldr	x0, [x22, #24]
    39fc:	ldr	d1, [x1, x2]
    3a00:	ldr	d0, [x0, x2]
    3a04:	fcmpe	d1, d0
    3a08:	cset	x26, mi  // mi = first
    3a0c:	ldr	w0, [x25, #16]
    3a10:	cmp	w0, #0x40
    3a14:	b.ls	39b8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>  // b.plast
    3a18:	ldr	x0, [x25, #8]
    3a1c:	cbnz	x0, 39b4 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>
    3a20:	b	39b8 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>
    3a24:	ldp	x23, x24, [sp, #48]
    3a28:	ldp	x25, x26, [sp, #64]
    3a2c:	b	37dc <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>

0000000000003a30 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>:
    3a30:	stp	x29, x30, [sp, #-432]!
    3a34:	mov	x29, sp
    3a38:	stp	x19, x20, [sp, #16]
    3a3c:	stp	x21, x22, [sp, #32]
    3a40:	mov	x20, x8
    3a44:	mov	x19, x0
    3a48:	mov	x22, x1
    3a4c:	mov	x21, x2
    3a50:	mov	w0, #0x1                   	// #1
    3a54:	str	w0, [sp, #304]
    3a58:	str	xzr, [sp, #296]
    3a5c:	str	xzr, [sp, #312]
    3a60:	str	xzr, [sp, #320]
    3a64:	str	xzr, [sp, #328]
    3a68:	str	wzr, [sp, #288]
    3a6c:	str	wzr, [sp, #292]
    3a70:	ldrb	w0, [x2, #8]
    3a74:	cmp	w0, #0x2
    3a78:	b.eq	3adc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    3a7c:	ldr	d0, [x19]
    3a80:	fcmp	d0, d0
    3a84:	b.ne	3a94 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x64>  // b.any
    3a88:	ldr	d0, [x1]
    3a8c:	fcmp	d0, d0
    3a90:	b.eq	3b70 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x140>  // b.none
    3a94:	mov	x0, #0x1                   	// #1
    3a98:	str	x0, [sp, #296]
    3a9c:	mov	x1, x20
    3aa0:	ldr	x2, [sp, #288]
    3aa4:	str	x2, [x1], #8
    3aa8:	str	w0, [x1, #8]
    3aac:	str	x0, [x20, #8]
    3ab0:	str	wzr, [sp, #304]
    3ab4:	str	xzr, [x20, #24]
    3ab8:	str	xzr, [x20, #32]
    3abc:	str	xzr, [x20, #40]
    3ac0:	add	x0, sp, #0x120
    3ac4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ac8:	mov	x0, x20
    3acc:	ldp	x19, x20, [sp, #16]
    3ad0:	ldp	x21, x22, [sp, #32]
    3ad4:	ldp	x29, x30, [sp], #432
    3ad8:	ret
    3adc:	ldr	s0, [x19]
    3ae0:	fcmp	s0, s0
    3ae4:	b.ne	3af4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.any
    3ae8:	ldr	s0, [x1]
    3aec:	fcmp	s0, s0
    3af0:	b.eq	3b78 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x148>  // b.none
    3af4:	mov	w0, #0x1                   	// #1
    3af8:	str	w0, [sp, #344]
    3afc:	mov	x0, #0x1                   	// #1
    3b00:	str	x0, [sp, #336]
    3b04:	add	x1, sp, #0x150
    3b08:	add	x0, sp, #0x128
    3b0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b10:	ldr	w0, [sp, #344]
    3b14:	cmp	w0, #0x40
    3b18:	b.ls	3b28 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.plast
    3b1c:	ldr	x0, [sp, #336]
    3b20:	cbz	x0, 3b28 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0xf8>
    3b24:	bl	0 <_ZdaPv>
    3b28:	mov	x0, x20
    3b2c:	ldr	x1, [sp, #288]
    3b30:	str	x1, [x0], #8
    3b34:	ldr	w1, [sp, #304]
    3b38:	str	w1, [x0, #8]
    3b3c:	ldr	x0, [sp, #296]
    3b40:	str	x0, [x20, #8]
    3b44:	str	wzr, [sp, #304]
    3b48:	ldr	x1, [sp, #312]
    3b4c:	str	x1, [x20, #24]
    3b50:	ldr	x1, [sp, #320]
    3b54:	str	x1, [x20, #32]
    3b58:	ldr	x1, [sp, #328]
    3b5c:	str	x1, [x20, #40]
    3b60:	str	xzr, [sp, #328]
    3b64:	str	xzr, [sp, #320]
    3b68:	str	xzr, [sp, #312]
    3b6c:	b	3ac0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    3b70:	cmp	w0, #0x10
    3b74:	b.eq	3bc0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x190>  // b.none
    3b78:	add	x0, sp, #0xc0
    3b7c:	mov	x1, x19
    3b80:	mov	x19, x0
    3b84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b88:	add	x0, sp, #0xf0
    3b8c:	mov	x1, x22
    3b90:	mov	x22, x0
    3b94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3b98:	mov	x8, x20
    3b9c:	mov	x2, x21
    3ba0:	mov	x1, x22
    3ba4:	mov	x0, x19
    3ba8:	bl	3718 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    3bac:	mov	x0, x22
    3bb0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3bb4:	mov	x0, x19
    3bb8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3bbc:	b	3ac0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    3bc0:	stp	x23, x24, [sp, #48]
    3bc4:	stp	x25, x26, [sp, #64]
    3bc8:	stp	x27, x28, [sp, #80]
    3bcc:	mov	x0, x2
    3bd0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3bd4:	ldr	x0, [x0, #24]
    3bd8:	ldrb	w0, [x0, #8]
    3bdc:	cmp	w0, #0x2
    3be0:	b.eq	3c50 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.none
    3be4:	ldr	x0, [x19, #32]
    3be8:	ldr	x1, [x19, #24]
    3bec:	sub	x0, x0, x1
    3bf0:	asr	x1, x0, #4
    3bf4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3bf8:	movk	x2, #0xaaab
    3bfc:	mul	x1, x1, x2
    3c00:	ldr	x2, [x22, #32]
    3c04:	ldr	x3, [x22, #24]
    3c08:	sub	x2, x2, x3
    3c0c:	cmp	x2, x0
    3c10:	b.ne	3d94 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x364>  // b.any
    3c14:	add	x0, sp, #0x138
    3c18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3c1c:	ldr	x2, [x19, #24]
    3c20:	ldr	x0, [x19, #32]
    3c24:	cmp	x0, x2
    3c28:	b.eq	3e6c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    3c2c:	mov	w23, #0x0                   	// #0
    3c30:	mov	x0, #0x0                   	// #0
    3c34:	mov	w25, #0x1                   	// #1
    3c38:	mov	x27, #0x1                   	// #1
    3c3c:	add	x26, sp, #0x180
    3c40:	add	x28, sp, #0x190
    3c44:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3c48:	movk	x24, #0xaaab
    3c4c:	b	3e00 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>
    3c50:	ldr	x0, [x19, #32]
    3c54:	ldr	x1, [x19, #24]
    3c58:	sub	x0, x0, x1
    3c5c:	asr	x1, x0, #4
    3c60:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3c64:	movk	x2, #0xaaab
    3c68:	mul	x1, x1, x2
    3c6c:	ldr	x2, [x22, #32]
    3c70:	ldr	x3, [x22, #24]
    3c74:	sub	x2, x2, x3
    3c78:	cmp	x2, x0
    3c7c:	b.ne	3cbc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.any
    3c80:	add	x0, sp, #0x138
    3c84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3c88:	ldr	x2, [x19, #24]
    3c8c:	ldr	x0, [x19, #32]
    3c90:	cmp	x2, x0
    3c94:	b.eq	3e6c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    3c98:	mov	w23, #0x0                   	// #0
    3c9c:	mov	x0, #0x0                   	// #0
    3ca0:	mov	w25, #0x1                   	// #1
    3ca4:	mov	x27, #0x1                   	// #1
    3ca8:	add	x26, sp, #0x160
    3cac:	add	x28, sp, #0x170
    3cb0:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3cb4:	movk	x24, #0xaaab
    3cb8:	b	3d28 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2f8>
    3cbc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3cc0:	add	x3, x3, #0x0
    3cc4:	mov	w2, #0x23c                 	// #572
    3cc8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ccc:	add	x1, x1, #0x0
    3cd0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3cd4:	add	x0, x0, #0x0
    3cd8:	bl	0 <__assert_fail>
    3cdc:	ldr	x1, [sp, #312]
    3ce0:	add	x0, x1, x0
    3ce4:	str	w25, [sp, #376]
    3ce8:	str	xzr, [sp, #368]
    3cec:	mov	x1, x28
    3cf0:	add	x0, x0, #0x8
    3cf4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3cf8:	ldr	w0, [sp, #376]
    3cfc:	cmp	w0, #0x40
    3d00:	b.hi	3d84 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.pmore
    3d04:	add	w23, w23, #0x1
    3d08:	mov	w0, w23
    3d0c:	ldr	x2, [x19, #24]
    3d10:	ldr	x1, [x19, #32]
    3d14:	sub	x1, x1, x2
    3d18:	asr	x1, x1, #4
    3d1c:	mul	x1, x1, x24
    3d20:	cmp	x1, w23, uxtw
    3d24:	b.ls	3e6c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    3d28:	add	x0, x0, x0, lsl #1
    3d2c:	lsl	x0, x0, #4
    3d30:	ldr	s0, [x2, x0]
    3d34:	fcmp	s0, s0
    3d38:	b.ne	3d4c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x31c>  // b.any
    3d3c:	ldr	x1, [x22, #24]
    3d40:	ldr	s0, [x1, x0]
    3d44:	fcmp	s0, s0
    3d48:	b.eq	3cdc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2ac>  // b.none
    3d4c:	ldr	x1, [sp, #312]
    3d50:	add	x0, x1, x0
    3d54:	str	w25, [sp, #360]
    3d58:	str	x27, [sp, #352]
    3d5c:	mov	x1, x26
    3d60:	add	x0, x0, #0x8
    3d64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d68:	ldr	w0, [sp, #360]
    3d6c:	cmp	w0, #0x40
    3d70:	b.ls	3d04 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>  // b.plast
    3d74:	ldr	x0, [sp, #352]
    3d78:	cbz	x0, 3d04 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    3d7c:	bl	0 <_ZdaPv>
    3d80:	b	3d04 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    3d84:	ldr	x0, [sp, #368]
    3d88:	cbz	x0, 3d04 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    3d8c:	bl	0 <_ZdaPv>
    3d90:	b	3d04 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    3d94:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3d98:	add	x3, x3, #0x0
    3d9c:	mov	w2, #0x23c                 	// #572
    3da0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3da4:	add	x1, x1, #0x0
    3da8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3dac:	add	x0, x0, #0x0
    3db0:	bl	0 <__assert_fail>
    3db4:	ldr	x1, [sp, #312]
    3db8:	add	x0, x1, x0
    3dbc:	str	w25, [sp, #408]
    3dc0:	str	xzr, [sp, #400]
    3dc4:	mov	x1, x28
    3dc8:	add	x0, x0, #0x8
    3dcc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3dd0:	ldr	w0, [sp, #408]
    3dd4:	cmp	w0, #0x40
    3dd8:	b.hi	3e5c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    3ddc:	add	w23, w23, #0x1
    3de0:	mov	w0, w23
    3de4:	ldr	x2, [x19, #24]
    3de8:	ldr	x1, [x19, #32]
    3dec:	sub	x1, x1, x2
    3df0:	asr	x1, x1, #4
    3df4:	mul	x1, x1, x24
    3df8:	cmp	x1, w23, uxtw
    3dfc:	b.ls	3e6c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    3e00:	add	x0, x0, x0, lsl #1
    3e04:	lsl	x0, x0, #4
    3e08:	ldr	d0, [x2, x0]
    3e0c:	fcmp	d0, d0
    3e10:	b.ne	3e24 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3f4>  // b.any
    3e14:	ldr	x1, [x22, #24]
    3e18:	ldr	d0, [x1, x0]
    3e1c:	fcmp	d0, d0
    3e20:	b.eq	3db4 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x384>  // b.none
    3e24:	ldr	x1, [sp, #312]
    3e28:	add	x0, x1, x0
    3e2c:	str	w25, [sp, #392]
    3e30:	str	x27, [sp, #384]
    3e34:	mov	x1, x26
    3e38:	add	x0, x0, #0x8
    3e3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3e40:	ldr	w0, [sp, #392]
    3e44:	cmp	w0, #0x40
    3e48:	b.ls	3ddc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>  // b.plast
    3e4c:	ldr	x0, [sp, #384]
    3e50:	cbz	x0, 3ddc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    3e54:	bl	0 <_ZdaPv>
    3e58:	b	3ddc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    3e5c:	ldr	x0, [sp, #400]
    3e60:	cbz	x0, 3ddc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    3e64:	bl	0 <_ZdaPv>
    3e68:	b	3ddc <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    3e6c:	ldrb	w0, [x21, #8]
    3e70:	cmp	w0, #0x10
    3e74:	b.ne	401c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x5ec>  // b.any
    3e78:	add	x25, sp, #0x120
    3e7c:	mov	x1, x25
    3e80:	add	x0, sp, #0x60
    3e84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3e88:	add	x23, sp, #0x90
    3e8c:	mov	x1, x19
    3e90:	mov	x0, x23
    3e94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3e98:	add	x0, sp, #0xc0
    3e9c:	mov	x1, x22
    3ea0:	mov	x22, x0
    3ea4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ea8:	add	x24, sp, #0xf0
    3eac:	mov	x8, x24
    3eb0:	mov	x2, x21
    3eb4:	mov	x1, x22
    3eb8:	mov	x0, x23
    3ebc:	bl	3718 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    3ec0:	ldr	x0, [sp, #240]
    3ec4:	str	x0, [sp, #288]
    3ec8:	add	x1, x24, #0x8
    3ecc:	add	x0, x25, #0x8
    3ed0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ed4:	add	x1, x24, #0x18
    3ed8:	add	x0, x25, #0x18
    3edc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ee0:	mov	x0, x24
    3ee4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ee8:	mov	x0, x22
    3eec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ef0:	mov	x0, x23
    3ef4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3ef8:	ldr	x1, [x19, #24]
    3efc:	ldr	x0, [x19, #32]
    3f00:	cmp	x1, x0
    3f04:	b.eq	3fc0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.none
    3f08:	mov	x21, #0x0                   	// #0
    3f0c:	mov	x22, #0x0                   	// #0
    3f10:	mov	w26, #0x1                   	// #1
    3f14:	mov	x25, #0x1                   	// #1
    3f18:	add	x24, sp, #0x1a0
    3f1c:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3f20:	movk	x23, #0xaaab
    3f24:	b	3f4c <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x51c>
    3f28:	add	x22, x22, #0x1
    3f2c:	add	x21, x21, #0x30
    3f30:	ldr	x0, [x19, #32]
    3f34:	ldr	x1, [x19, #24]
    3f38:	sub	x0, x0, x1
    3f3c:	asr	x0, x0, #4
    3f40:	mul	x0, x0, x23
    3f44:	cmp	x22, x0
    3f48:	b.cs	3fc0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.hs, b.nlast
    3f4c:	ldr	x27, [sp, #120]
    3f50:	add	x27, x27, x21
    3f54:	add	x27, x27, #0x8
    3f58:	ldr	w28, [x27, #8]
    3f5c:	cmp	w28, #0x40
    3f60:	b.ls	3f78 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x548>  // b.plast
    3f64:	mov	x0, x27
    3f68:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3f6c:	sub	w28, w28, w0
    3f70:	cmp	w28, #0x40
    3f74:	b.hi	3f28 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.pmore
    3f78:	mov	x0, x27
    3f7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3f80:	cmp	x0, #0x1
    3f84:	b.ne	3f28 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.any
    3f88:	ldr	x0, [sp, #312]
    3f8c:	add	x0, x0, x21
    3f90:	str	w26, [sp, #424]
    3f94:	str	x25, [sp, #416]
    3f98:	mov	x1, x24
    3f9c:	add	x0, x0, #0x8
    3fa0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    3fa4:	ldr	w0, [sp, #424]
    3fa8:	cmp	w0, #0x40
    3fac:	b.ls	3f28 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.plast
    3fb0:	ldr	x0, [sp, #416]
    3fb4:	cbz	x0, 3f28 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    3fb8:	bl	0 <_ZdaPv>
    3fbc:	b	3f28 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    3fc0:	mov	x0, x20
    3fc4:	ldr	x1, [sp, #288]
    3fc8:	str	x1, [x0], #8
    3fcc:	ldr	w1, [sp, #304]
    3fd0:	str	w1, [x0, #8]
    3fd4:	ldr	x0, [sp, #296]
    3fd8:	str	x0, [x20, #8]
    3fdc:	str	wzr, [sp, #304]
    3fe0:	ldr	x1, [sp, #312]
    3fe4:	str	x1, [x20, #24]
    3fe8:	ldr	x1, [sp, #320]
    3fec:	str	x1, [x20, #32]
    3ff0:	ldr	x1, [sp, #328]
    3ff4:	str	x1, [x20, #40]
    3ff8:	str	xzr, [sp, #328]
    3ffc:	str	xzr, [sp, #320]
    4000:	str	xzr, [sp, #312]
    4004:	add	x0, sp, #0x60
    4008:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    400c:	ldp	x23, x24, [sp, #48]
    4010:	ldp	x25, x26, [sp, #64]
    4014:	ldp	x27, x28, [sp, #80]
    4018:	b	3ac0 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    401c:	ldp	x23, x24, [sp, #48]
    4020:	ldp	x25, x26, [sp, #64]
    4024:	ldp	x27, x28, [sp, #80]
    4028:	b	3b78 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE+0x148>

000000000000402c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>:
    402c:	stp	x29, x30, [sp, #-80]!
    4030:	mov	x29, sp
    4034:	stp	x19, x20, [sp, #16]
    4038:	stp	x21, x22, [sp, #32]
    403c:	mov	x19, x8
    4040:	mov	x20, x0
    4044:	mov	x22, x1
    4048:	mov	w0, #0x1                   	// #1
    404c:	str	w0, [x8, #16]
    4050:	str	xzr, [x8, #8]
    4054:	str	xzr, [x8, #24]
    4058:	str	xzr, [x8, #32]
    405c:	str	xzr, [x8, #40]
    4060:	str	wzr, [x8]
    4064:	str	wzr, [x8, #4]
    4068:	ldrb	w0, [x2, #8]
    406c:	cmp	w0, #0x3
    4070:	b.eq	4104 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.none
    4074:	mov	x21, x2
    4078:	cmp	w0, #0x10
    407c:	b.eq	411c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xf0>  // b.none
    4080:	cmp	w0, #0x2
    4084:	b.eq	40dc <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    4088:	stp	x23, x24, [sp, #48]
    408c:	stp	x25, x26, [sp, #64]
    4090:	bl	0 <_ZN4llvm4dbgsEv>
    4094:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4098:	add	x1, x1, #0x0
    409c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    40a0:	mov	x19, x0
    40a4:	mov	w3, #0x0                   	// #0
    40a8:	mov	w2, #0x0                   	// #0
    40ac:	mov	x1, x0
    40b0:	mov	x0, x21
    40b4:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    40b8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    40bc:	add	x1, x1, #0x0
    40c0:	mov	x0, x19
    40c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    40c8:	mov	w2, #0x1f9                 	// #505
    40cc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    40d0:	add	x1, x1, #0x0
    40d4:	mov	x0, #0x0                   	// #0
    40d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    40dc:	ldr	s1, [x20]
    40e0:	ldr	s0, [x1]
    40e4:	fcmpe	s1, s0
    40e8:	cset	x0, gt
    40ec:	str	x0, [x8, #8]
    40f0:	mov	x0, x19
    40f4:	ldp	x19, x20, [sp, #16]
    40f8:	ldp	x21, x22, [sp, #32]
    40fc:	ldp	x29, x30, [sp], #80
    4100:	ret
    4104:	ldr	d1, [x20]
    4108:	ldr	d0, [x1]
    410c:	fcmpe	d1, d0
    4110:	cset	x0, gt
    4114:	str	x0, [x8, #8]
    4118:	b	40f0 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    411c:	ldr	x0, [x2, #24]
    4120:	ldrb	w0, [x0, #8]
    4124:	cmp	w0, #0x2
    4128:	b.eq	4194 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.none
    412c:	ldr	x0, [x20, #32]
    4130:	ldr	x1, [x20, #24]
    4134:	sub	x0, x0, x1
    4138:	asr	x1, x0, #4
    413c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4140:	movk	x2, #0xaaab
    4144:	mul	x1, x1, x2
    4148:	ldr	x2, [x22, #32]
    414c:	ldr	x3, [x22, #24]
    4150:	sub	x2, x2, x3
    4154:	cmp	x2, x0
    4158:	b.ne	42a0 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x274>  // b.any
    415c:	add	x0, x8, #0x18
    4160:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4164:	ldr	x1, [x20, #24]
    4168:	ldr	x0, [x20, #32]
    416c:	cmp	x0, x1
    4170:	b.eq	40f0 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    4174:	stp	x23, x24, [sp, #48]
    4178:	stp	x25, x26, [sp, #64]
    417c:	mov	w21, #0x0                   	// #0
    4180:	mov	x2, #0x0                   	// #0
    4184:	mov	w24, #0x1                   	// #1
    4188:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    418c:	movk	x23, #0xaaab
    4190:	b	42fc <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x2d0>
    4194:	ldr	x0, [x20, #32]
    4198:	ldr	x1, [x20, #24]
    419c:	sub	x0, x0, x1
    41a0:	asr	x1, x0, #4
    41a4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    41a8:	movk	x2, #0xaaab
    41ac:	mul	x1, x1, x2
    41b0:	ldr	x2, [x22, #32]
    41b4:	ldr	x3, [x22, #24]
    41b8:	sub	x2, x2, x3
    41bc:	cmp	x2, x0
    41c0:	b.ne	41fc <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    41c4:	add	x0, x8, #0x18
    41c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    41cc:	ldr	x2, [x20, #24]
    41d0:	ldr	x0, [x20, #32]
    41d4:	cmp	x2, x0
    41d8:	b.eq	40f0 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    41dc:	stp	x23, x24, [sp, #48]
    41e0:	stp	x25, x26, [sp, #64]
    41e4:	mov	w21, #0x0                   	// #0
    41e8:	mov	x0, #0x0                   	// #0
    41ec:	mov	w24, #0x1                   	// #1
    41f0:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    41f4:	movk	x23, #0xaaab
    41f8:	b	4258 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x22c>
    41fc:	stp	x23, x24, [sp, #48]
    4200:	stp	x25, x26, [sp, #64]
    4204:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4208:	add	x3, x3, #0x0
    420c:	mov	w2, #0x1f6                 	// #502
    4210:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4214:	add	x1, x1, #0x0
    4218:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    421c:	add	x0, x0, #0x0
    4220:	bl	0 <__assert_fail>
    4224:	bl	0 <_ZdaPv>
    4228:	mov	x0, x25
    422c:	str	x26, [x0, #8]!
    4230:	str	w24, [x0, #8]
    4234:	add	w21, w21, #0x1
    4238:	mov	w0, w21
    423c:	ldr	x2, [x20, #24]
    4240:	ldr	x1, [x20, #32]
    4244:	sub	x1, x1, x2
    4248:	asr	x1, x1, #4
    424c:	mul	x1, x1, x23
    4250:	cmp	x1, w21, uxtw
    4254:	b.ls	4294 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x268>  // b.plast
    4258:	add	x0, x0, x0, lsl #1
    425c:	lsl	x0, x0, #4
    4260:	ldr	x25, [x19, #24]
    4264:	add	x25, x25, x0
    4268:	ldr	x1, [x22, #24]
    426c:	ldr	s1, [x2, x0]
    4270:	ldr	s0, [x1, x0]
    4274:	fcmpe	s1, s0
    4278:	cset	x26, gt
    427c:	ldr	w0, [x25, #16]
    4280:	cmp	w0, #0x40
    4284:	b.ls	4228 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.plast
    4288:	ldr	x0, [x25, #8]
    428c:	cbnz	x0, 4224 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1f8>
    4290:	b	4228 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>
    4294:	ldp	x23, x24, [sp, #48]
    4298:	ldp	x25, x26, [sp, #64]
    429c:	b	40f0 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    42a0:	stp	x23, x24, [sp, #48]
    42a4:	stp	x25, x26, [sp, #64]
    42a8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    42ac:	add	x3, x3, #0x0
    42b0:	mov	w2, #0x1f6                 	// #502
    42b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    42b8:	add	x1, x1, #0x0
    42bc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    42c0:	add	x0, x0, #0x0
    42c4:	bl	0 <__assert_fail>
    42c8:	bl	0 <_ZdaPv>
    42cc:	mov	x0, x25
    42d0:	str	x26, [x0, #8]!
    42d4:	str	w24, [x0, #8]
    42d8:	add	w21, w21, #0x1
    42dc:	mov	w2, w21
    42e0:	ldr	x1, [x20, #24]
    42e4:	ldr	x3, [x20, #32]
    42e8:	sub	x3, x3, x1
    42ec:	asr	x3, x3, #4
    42f0:	mul	x3, x3, x23
    42f4:	cmp	x3, w21, uxtw
    42f8:	b.ls	4338 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.plast
    42fc:	add	x2, x2, x2, lsl #1
    4300:	lsl	x2, x2, #4
    4304:	ldr	x0, [x19, #24]
    4308:	add	x25, x0, x2
    430c:	ldr	x0, [x22, #24]
    4310:	ldr	d1, [x1, x2]
    4314:	ldr	d0, [x0, x2]
    4318:	fcmpe	d1, d0
    431c:	cset	x26, gt
    4320:	ldr	w0, [x25, #16]
    4324:	cmp	w0, #0x40
    4328:	b.ls	42cc <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>  // b.plast
    432c:	ldr	x0, [x25, #8]
    4330:	cbnz	x0, 42c8 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x29c>
    4334:	b	42cc <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>
    4338:	ldp	x23, x24, [sp, #48]
    433c:	ldp	x25, x26, [sp, #64]
    4340:	b	40f0 <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>

0000000000004344 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>:
    4344:	stp	x29, x30, [sp, #-416]!
    4348:	mov	x29, sp
    434c:	stp	x19, x20, [sp, #16]
    4350:	stp	x21, x22, [sp, #32]
    4354:	mov	x20, x8
    4358:	mov	x19, x0
    435c:	mov	x22, x1
    4360:	mov	x21, x2
    4364:	mov	w0, #0x1                   	// #1
    4368:	str	w0, [sp, #304]
    436c:	str	xzr, [sp, #296]
    4370:	str	xzr, [sp, #312]
    4374:	str	xzr, [sp, #320]
    4378:	str	xzr, [sp, #328]
    437c:	str	wzr, [sp, #288]
    4380:	str	wzr, [sp, #292]
    4384:	ldrb	w0, [x2, #8]
    4388:	cmp	w0, #0x2
    438c:	b.eq	43f0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    4390:	ldr	d0, [x19]
    4394:	fcmp	d0, d0
    4398:	b.ne	43a8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x64>  // b.any
    439c:	ldr	d0, [x1]
    43a0:	fcmp	d0, d0
    43a4:	b.eq	4438 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xf4>  // b.none
    43a8:	mov	x0, #0x1                   	// #1
    43ac:	str	x0, [sp, #296]
    43b0:	mov	x1, x20
    43b4:	ldr	x2, [sp, #288]
    43b8:	str	x2, [x1], #8
    43bc:	str	w0, [x1, #8]
    43c0:	str	x0, [x20, #8]
    43c4:	str	wzr, [sp, #304]
    43c8:	str	xzr, [x20, #24]
    43cc:	str	xzr, [x20, #32]
    43d0:	str	xzr, [x20, #40]
    43d4:	add	x0, sp, #0x120
    43d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    43dc:	mov	x0, x20
    43e0:	ldp	x19, x20, [sp, #16]
    43e4:	ldp	x21, x22, [sp, #32]
    43e8:	ldp	x29, x30, [sp], #416
    43ec:	ret
    43f0:	ldr	s0, [x19]
    43f4:	fcmp	s0, s0
    43f8:	b.ne	4408 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.any
    43fc:	ldr	s0, [x1]
    4400:	fcmp	s0, s0
    4404:	b.eq	4440 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xfc>  // b.none
    4408:	mov	x0, #0x1                   	// #1
    440c:	str	x0, [sp, #296]
    4410:	mov	x1, x20
    4414:	ldr	x2, [sp, #288]
    4418:	str	x2, [x1], #8
    441c:	str	w0, [x1, #8]
    4420:	str	x0, [x20, #8]
    4424:	str	wzr, [sp, #304]
    4428:	str	xzr, [x20, #24]
    442c:	str	xzr, [x20, #32]
    4430:	str	xzr, [x20, #40]
    4434:	b	43d4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    4438:	cmp	w0, #0x10
    443c:	b.eq	4488 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x144>  // b.none
    4440:	add	x0, sp, #0xc0
    4444:	mov	x1, x19
    4448:	mov	x19, x0
    444c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4450:	add	x0, sp, #0xf0
    4454:	mov	x1, x22
    4458:	mov	x22, x0
    445c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4460:	mov	x8, x20
    4464:	mov	x2, x21
    4468:	mov	x1, x22
    446c:	mov	x0, x19
    4470:	bl	402c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    4474:	mov	x0, x22
    4478:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    447c:	mov	x0, x19
    4480:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4484:	b	43d4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    4488:	stp	x23, x24, [sp, #48]
    448c:	stp	x25, x26, [sp, #64]
    4490:	stp	x27, x28, [sp, #80]
    4494:	mov	x0, x2
    4498:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    449c:	ldr	x0, [x0, #24]
    44a0:	ldrb	w0, [x0, #8]
    44a4:	cmp	w0, #0x2
    44a8:	b.eq	4518 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x1d4>  // b.none
    44ac:	ldr	x0, [x19, #32]
    44b0:	ldr	x1, [x19, #24]
    44b4:	sub	x0, x0, x1
    44b8:	asr	x1, x0, #4
    44bc:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    44c0:	movk	x2, #0xaaab
    44c4:	mul	x1, x1, x2
    44c8:	ldr	x2, [x22, #32]
    44cc:	ldr	x3, [x22, #24]
    44d0:	sub	x2, x2, x3
    44d4:	cmp	x2, x0
    44d8:	b.ne	465c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x318>  // b.any
    44dc:	add	x0, sp, #0x138
    44e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    44e4:	ldr	x2, [x19, #24]
    44e8:	ldr	x0, [x19, #32]
    44ec:	cmp	x0, x2
    44f0:	b.eq	4734 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.none
    44f4:	mov	w23, #0x0                   	// #0
    44f8:	mov	x0, #0x0                   	// #0
    44fc:	mov	w25, #0x1                   	// #1
    4500:	mov	x27, #0x1                   	// #1
    4504:	add	x26, sp, #0x170
    4508:	add	x28, sp, #0x180
    450c:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4510:	movk	x24, #0xaaab
    4514:	b	46c8 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x384>
    4518:	ldr	x0, [x19, #32]
    451c:	ldr	x1, [x19, #24]
    4520:	sub	x0, x0, x1
    4524:	asr	x1, x0, #4
    4528:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    452c:	movk	x2, #0xaaab
    4530:	mul	x1, x1, x2
    4534:	ldr	x2, [x22, #32]
    4538:	ldr	x3, [x22, #24]
    453c:	sub	x2, x2, x3
    4540:	cmp	x2, x0
    4544:	b.ne	4584 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x240>  // b.any
    4548:	add	x0, sp, #0x138
    454c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4550:	ldr	x2, [x19, #24]
    4554:	ldr	x0, [x19, #32]
    4558:	cmp	x0, x2
    455c:	b.eq	4734 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.none
    4560:	mov	w23, #0x0                   	// #0
    4564:	mov	x0, #0x0                   	// #0
    4568:	mov	w25, #0x1                   	// #1
    456c:	mov	x27, #0x1                   	// #1
    4570:	add	x26, sp, #0x150
    4574:	add	x28, sp, #0x160
    4578:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    457c:	movk	x24, #0xaaab
    4580:	b	45f0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2ac>
    4584:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4588:	add	x3, x3, #0x0
    458c:	mov	w2, #0x245                 	// #581
    4590:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4594:	add	x1, x1, #0x0
    4598:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    459c:	add	x0, x0, #0x0
    45a0:	bl	0 <__assert_fail>
    45a4:	ldr	x1, [sp, #312]
    45a8:	add	x0, x1, x0
    45ac:	str	w25, [sp, #360]
    45b0:	str	xzr, [sp, #352]
    45b4:	mov	x1, x28
    45b8:	add	x0, x0, #0x8
    45bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    45c0:	ldr	w0, [sp, #360]
    45c4:	cmp	w0, #0x40
    45c8:	b.hi	464c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x308>  // b.pmore
    45cc:	add	w23, w23, #0x1
    45d0:	mov	w0, w23
    45d4:	ldr	x2, [x19, #24]
    45d8:	ldr	x1, [x19, #32]
    45dc:	sub	x1, x1, x2
    45e0:	asr	x1, x1, #4
    45e4:	mul	x1, x1, x24
    45e8:	cmp	x1, w23, uxtw
    45ec:	b.ls	4734 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.plast
    45f0:	add	x0, x0, x0, lsl #1
    45f4:	lsl	x0, x0, #4
    45f8:	ldr	s0, [x2, x0]
    45fc:	fcmp	s0, s0
    4600:	b.ne	4614 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x2d0>  // b.any
    4604:	ldr	x1, [x22, #24]
    4608:	ldr	s0, [x1, x0]
    460c:	fcmp	s0, s0
    4610:	b.eq	45a4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x260>  // b.none
    4614:	ldr	x1, [sp, #312]
    4618:	add	x0, x1, x0
    461c:	str	w25, [sp, #344]
    4620:	str	x27, [sp, #336]
    4624:	mov	x1, x26
    4628:	add	x0, x0, #0x8
    462c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4630:	ldr	w0, [sp, #344]
    4634:	cmp	w0, #0x40
    4638:	b.ls	45cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x288>  // b.plast
    463c:	ldr	x0, [sp, #336]
    4640:	cbz	x0, 45cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x288>
    4644:	bl	0 <_ZdaPv>
    4648:	b	45cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x288>
    464c:	ldr	x0, [sp, #352]
    4650:	cbz	x0, 45cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x288>
    4654:	bl	0 <_ZdaPv>
    4658:	b	45cc <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x288>
    465c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4660:	add	x3, x3, #0x0
    4664:	mov	w2, #0x245                 	// #581
    4668:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    466c:	add	x1, x1, #0x0
    4670:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4674:	add	x0, x0, #0x0
    4678:	bl	0 <__assert_fail>
    467c:	ldr	x1, [sp, #312]
    4680:	add	x0, x1, x0
    4684:	str	w25, [sp, #392]
    4688:	str	xzr, [sp, #384]
    468c:	mov	x1, x28
    4690:	add	x0, x0, #0x8
    4694:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4698:	ldr	w0, [sp, #392]
    469c:	cmp	w0, #0x40
    46a0:	b.hi	4724 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3e0>  // b.pmore
    46a4:	add	w23, w23, #0x1
    46a8:	mov	w0, w23
    46ac:	ldr	x2, [x19, #24]
    46b0:	ldr	x1, [x19, #32]
    46b4:	sub	x1, x1, x2
    46b8:	asr	x1, x1, #4
    46bc:	mul	x1, x1, x24
    46c0:	cmp	x1, w23, uxtw
    46c4:	b.ls	4734 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3f0>  // b.plast
    46c8:	add	x0, x0, x0, lsl #1
    46cc:	lsl	x0, x0, #4
    46d0:	ldr	d0, [x2, x0]
    46d4:	fcmp	d0, d0
    46d8:	b.ne	46ec <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x3a8>  // b.any
    46dc:	ldr	x1, [x22, #24]
    46e0:	ldr	d0, [x1, x0]
    46e4:	fcmp	d0, d0
    46e8:	b.eq	467c <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x338>  // b.none
    46ec:	ldr	x1, [sp, #312]
    46f0:	add	x0, x1, x0
    46f4:	str	w25, [sp, #376]
    46f8:	str	x27, [sp, #368]
    46fc:	mov	x1, x26
    4700:	add	x0, x0, #0x8
    4704:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4708:	ldr	w0, [sp, #376]
    470c:	cmp	w0, #0x40
    4710:	b.ls	46a4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x360>  // b.plast
    4714:	ldr	x0, [sp, #368]
    4718:	cbz	x0, 46a4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x360>
    471c:	bl	0 <_ZdaPv>
    4720:	b	46a4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x360>
    4724:	ldr	x0, [sp, #384]
    4728:	cbz	x0, 46a4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x360>
    472c:	bl	0 <_ZdaPv>
    4730:	b	46a4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x360>
    4734:	ldrb	w0, [x21, #8]
    4738:	cmp	w0, #0x10
    473c:	b.ne	48e4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x5a0>  // b.any
    4740:	add	x25, sp, #0x120
    4744:	mov	x1, x25
    4748:	add	x0, sp, #0x60
    474c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4750:	add	x23, sp, #0x90
    4754:	mov	x1, x19
    4758:	mov	x0, x23
    475c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4760:	add	x0, sp, #0xc0
    4764:	mov	x1, x22
    4768:	mov	x22, x0
    476c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4770:	add	x24, sp, #0xf0
    4774:	mov	x8, x24
    4778:	mov	x2, x21
    477c:	mov	x1, x22
    4780:	mov	x0, x23
    4784:	bl	402c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    4788:	ldr	x0, [sp, #240]
    478c:	str	x0, [sp, #288]
    4790:	add	x1, x24, #0x8
    4794:	add	x0, x25, #0x8
    4798:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    479c:	add	x1, x24, #0x18
    47a0:	add	x0, x25, #0x18
    47a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    47a8:	mov	x0, x24
    47ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    47b0:	mov	x0, x22
    47b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    47b8:	mov	x0, x23
    47bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    47c0:	ldr	x1, [x19, #32]
    47c4:	ldr	x0, [x19, #24]
    47c8:	cmp	x1, x0
    47cc:	b.eq	4888 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x544>  // b.none
    47d0:	mov	x21, #0x0                   	// #0
    47d4:	mov	x22, #0x0                   	// #0
    47d8:	mov	w26, #0x1                   	// #1
    47dc:	mov	x25, #0x1                   	// #1
    47e0:	add	x24, sp, #0x190
    47e4:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    47e8:	movk	x23, #0xaaab
    47ec:	b	4814 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4d0>
    47f0:	add	x22, x22, #0x1
    47f4:	add	x21, x21, #0x30
    47f8:	ldr	x0, [x19, #32]
    47fc:	ldr	x1, [x19, #24]
    4800:	sub	x0, x0, x1
    4804:	asr	x0, x0, #4
    4808:	mul	x0, x0, x23
    480c:	cmp	x22, x0
    4810:	b.cs	4888 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x544>  // b.hs, b.nlast
    4814:	ldr	x27, [sp, #120]
    4818:	add	x27, x27, x21
    481c:	add	x27, x27, #0x8
    4820:	ldr	w28, [x27, #8]
    4824:	cmp	w28, #0x40
    4828:	b.ls	4840 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4fc>  // b.plast
    482c:	mov	x0, x27
    4830:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    4834:	sub	w28, w28, w0
    4838:	cmp	w28, #0x40
    483c:	b.hi	47f0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4ac>  // b.pmore
    4840:	mov	x0, x27
    4844:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4848:	cmp	x0, #0x1
    484c:	b.ne	47f0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4ac>  // b.any
    4850:	ldr	x0, [sp, #312]
    4854:	add	x0, x0, x21
    4858:	str	w26, [sp, #408]
    485c:	str	x25, [sp, #400]
    4860:	mov	x1, x24
    4864:	add	x0, x0, #0x8
    4868:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    486c:	ldr	w0, [sp, #408]
    4870:	cmp	w0, #0x40
    4874:	b.ls	47f0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4ac>  // b.plast
    4878:	ldr	x0, [sp, #400]
    487c:	cbz	x0, 47f0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4ac>
    4880:	bl	0 <_ZdaPv>
    4884:	b	47f0 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x4ac>
    4888:	mov	x0, x20
    488c:	ldr	x1, [sp, #288]
    4890:	str	x1, [x0], #8
    4894:	ldr	w1, [sp, #304]
    4898:	str	w1, [x0, #8]
    489c:	ldr	x0, [sp, #296]
    48a0:	str	x0, [x20, #8]
    48a4:	str	wzr, [sp, #304]
    48a8:	ldr	x1, [sp, #312]
    48ac:	str	x1, [x20, #24]
    48b0:	ldr	x1, [sp, #320]
    48b4:	str	x1, [x20, #32]
    48b8:	ldr	x1, [sp, #328]
    48bc:	str	x1, [x20, #40]
    48c0:	str	xzr, [sp, #328]
    48c4:	str	xzr, [sp, #320]
    48c8:	str	xzr, [sp, #312]
    48cc:	add	x0, sp, #0x60
    48d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    48d4:	ldp	x23, x24, [sp, #48]
    48d8:	ldp	x25, x26, [sp, #64]
    48dc:	ldp	x27, x28, [sp, #80]
    48e0:	b	43d4 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    48e4:	ldp	x23, x24, [sp, #48]
    48e8:	ldp	x25, x26, [sp, #64]
    48ec:	ldp	x27, x28, [sp, #80]
    48f0:	b	4440 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE+0xfc>

00000000000048f4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>:
    48f4:	stp	x29, x30, [sp, #-80]!
    48f8:	mov	x29, sp
    48fc:	stp	x19, x20, [sp, #16]
    4900:	stp	x21, x22, [sp, #32]
    4904:	mov	x19, x8
    4908:	mov	x20, x0
    490c:	mov	x22, x1
    4910:	mov	w0, #0x1                   	// #1
    4914:	str	w0, [x8, #16]
    4918:	str	xzr, [x8, #8]
    491c:	str	xzr, [x8, #24]
    4920:	str	xzr, [x8, #32]
    4924:	str	xzr, [x8, #40]
    4928:	str	wzr, [x8]
    492c:	str	wzr, [x8, #4]
    4930:	ldrb	w0, [x2, #8]
    4934:	cmp	w0, #0x3
    4938:	b.eq	49cc <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.none
    493c:	mov	x21, x2
    4940:	cmp	w0, #0x10
    4944:	b.eq	49e4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xf0>  // b.none
    4948:	cmp	w0, #0x2
    494c:	b.eq	49a4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    4950:	stp	x23, x24, [sp, #48]
    4954:	stp	x25, x26, [sp, #64]
    4958:	bl	0 <_ZN4llvm4dbgsEv>
    495c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4960:	add	x1, x1, #0x0
    4964:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4968:	mov	x19, x0
    496c:	mov	w3, #0x0                   	// #0
    4970:	mov	w2, #0x0                   	// #0
    4974:	mov	x1, x0
    4978:	mov	x0, x21
    497c:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    4980:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4984:	add	x1, x1, #0x0
    4988:	mov	x0, x19
    498c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4990:	mov	w2, #0x1cf                 	// #463
    4994:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4998:	add	x1, x1, #0x0
    499c:	mov	x0, #0x0                   	// #0
    49a0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    49a4:	ldr	s1, [x20]
    49a8:	ldr	s0, [x1]
    49ac:	fcmpe	s1, s0
    49b0:	cset	x0, ls  // ls = plast
    49b4:	str	x0, [x8, #8]
    49b8:	mov	x0, x19
    49bc:	ldp	x19, x20, [sp, #16]
    49c0:	ldp	x21, x22, [sp, #32]
    49c4:	ldp	x29, x30, [sp], #80
    49c8:	ret
    49cc:	ldr	d1, [x20]
    49d0:	ldr	d0, [x1]
    49d4:	fcmpe	d1, d0
    49d8:	cset	x0, ls  // ls = plast
    49dc:	str	x0, [x8, #8]
    49e0:	b	49b8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    49e4:	ldr	x0, [x2, #24]
    49e8:	ldrb	w0, [x0, #8]
    49ec:	cmp	w0, #0x2
    49f0:	b.eq	4a5c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.none
    49f4:	ldr	x0, [x20, #32]
    49f8:	ldr	x1, [x20, #24]
    49fc:	sub	x0, x0, x1
    4a00:	asr	x1, x0, #4
    4a04:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4a08:	movk	x2, #0xaaab
    4a0c:	mul	x1, x1, x2
    4a10:	ldr	x2, [x22, #32]
    4a14:	ldr	x3, [x22, #24]
    4a18:	sub	x2, x2, x3
    4a1c:	cmp	x2, x0
    4a20:	b.ne	4b68 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x274>  // b.any
    4a24:	add	x0, x8, #0x18
    4a28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4a2c:	ldr	x1, [x20, #24]
    4a30:	ldr	x0, [x20, #32]
    4a34:	cmp	x0, x1
    4a38:	b.eq	49b8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    4a3c:	stp	x23, x24, [sp, #48]
    4a40:	stp	x25, x26, [sp, #64]
    4a44:	mov	w21, #0x0                   	// #0
    4a48:	mov	x2, #0x0                   	// #0
    4a4c:	mov	w24, #0x1                   	// #1
    4a50:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4a54:	movk	x23, #0xaaab
    4a58:	b	4bc4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x2d0>
    4a5c:	ldr	x0, [x20, #32]
    4a60:	ldr	x1, [x20, #24]
    4a64:	sub	x0, x0, x1
    4a68:	asr	x1, x0, #4
    4a6c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4a70:	movk	x2, #0xaaab
    4a74:	mul	x1, x1, x2
    4a78:	ldr	x2, [x22, #32]
    4a7c:	ldr	x3, [x22, #24]
    4a80:	sub	x2, x2, x3
    4a84:	cmp	x2, x0
    4a88:	b.ne	4ac4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    4a8c:	add	x0, x8, #0x18
    4a90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4a94:	ldr	x2, [x20, #24]
    4a98:	ldr	x0, [x20, #32]
    4a9c:	cmp	x2, x0
    4aa0:	b.eq	49b8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    4aa4:	stp	x23, x24, [sp, #48]
    4aa8:	stp	x25, x26, [sp, #64]
    4aac:	mov	w21, #0x0                   	// #0
    4ab0:	mov	x0, #0x0                   	// #0
    4ab4:	mov	w24, #0x1                   	// #1
    4ab8:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4abc:	movk	x23, #0xaaab
    4ac0:	b	4b20 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x22c>
    4ac4:	stp	x23, x24, [sp, #48]
    4ac8:	stp	x25, x26, [sp, #64]
    4acc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ad0:	add	x3, x3, #0x0
    4ad4:	mov	w2, #0x1cc                 	// #460
    4ad8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4adc:	add	x1, x1, #0x0
    4ae0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ae4:	add	x0, x0, #0x0
    4ae8:	bl	0 <__assert_fail>
    4aec:	bl	0 <_ZdaPv>
    4af0:	mov	x0, x25
    4af4:	str	x26, [x0, #8]!
    4af8:	str	w24, [x0, #8]
    4afc:	add	w21, w21, #0x1
    4b00:	mov	w0, w21
    4b04:	ldr	x2, [x20, #24]
    4b08:	ldr	x1, [x20, #32]
    4b0c:	sub	x1, x1, x2
    4b10:	asr	x1, x1, #4
    4b14:	mul	x1, x1, x23
    4b18:	cmp	x1, w21, uxtw
    4b1c:	b.ls	4b5c <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x268>  // b.plast
    4b20:	add	x0, x0, x0, lsl #1
    4b24:	lsl	x0, x0, #4
    4b28:	ldr	x25, [x19, #24]
    4b2c:	add	x25, x25, x0
    4b30:	ldr	x1, [x22, #24]
    4b34:	ldr	s1, [x2, x0]
    4b38:	ldr	s0, [x1, x0]
    4b3c:	fcmpe	s1, s0
    4b40:	cset	x26, ls  // ls = plast
    4b44:	ldr	w0, [x25, #16]
    4b48:	cmp	w0, #0x40
    4b4c:	b.ls	4af0 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.plast
    4b50:	ldr	x0, [x25, #8]
    4b54:	cbnz	x0, 4aec <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1f8>
    4b58:	b	4af0 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>
    4b5c:	ldp	x23, x24, [sp, #48]
    4b60:	ldp	x25, x26, [sp, #64]
    4b64:	b	49b8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    4b68:	stp	x23, x24, [sp, #48]
    4b6c:	stp	x25, x26, [sp, #64]
    4b70:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b74:	add	x3, x3, #0x0
    4b78:	mov	w2, #0x1cc                 	// #460
    4b7c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b80:	add	x1, x1, #0x0
    4b84:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4b88:	add	x0, x0, #0x0
    4b8c:	bl	0 <__assert_fail>
    4b90:	bl	0 <_ZdaPv>
    4b94:	mov	x0, x25
    4b98:	str	x26, [x0, #8]!
    4b9c:	str	w24, [x0, #8]
    4ba0:	add	w21, w21, #0x1
    4ba4:	mov	w2, w21
    4ba8:	ldr	x1, [x20, #24]
    4bac:	ldr	x3, [x20, #32]
    4bb0:	sub	x3, x3, x1
    4bb4:	asr	x3, x3, #4
    4bb8:	mul	x3, x3, x23
    4bbc:	cmp	x3, w21, uxtw
    4bc0:	b.ls	4c00 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.plast
    4bc4:	add	x2, x2, x2, lsl #1
    4bc8:	lsl	x2, x2, #4
    4bcc:	ldr	x0, [x19, #24]
    4bd0:	add	x25, x0, x2
    4bd4:	ldr	x0, [x22, #24]
    4bd8:	ldr	d1, [x1, x2]
    4bdc:	ldr	d0, [x0, x2]
    4be0:	fcmpe	d1, d0
    4be4:	cset	x26, ls  // ls = plast
    4be8:	ldr	w0, [x25, #16]
    4bec:	cmp	w0, #0x40
    4bf0:	b.ls	4b94 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>  // b.plast
    4bf4:	ldr	x0, [x25, #8]
    4bf8:	cbnz	x0, 4b90 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>
    4bfc:	b	4b94 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>
    4c00:	ldp	x23, x24, [sp, #48]
    4c04:	ldp	x25, x26, [sp, #64]
    4c08:	b	49b8 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>

0000000000004c0c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>:
    4c0c:	stp	x29, x30, [sp, #-432]!
    4c10:	mov	x29, sp
    4c14:	stp	x19, x20, [sp, #16]
    4c18:	stp	x21, x22, [sp, #32]
    4c1c:	mov	x20, x8
    4c20:	mov	x19, x0
    4c24:	mov	x22, x1
    4c28:	mov	x21, x2
    4c2c:	mov	w0, #0x1                   	// #1
    4c30:	str	w0, [sp, #304]
    4c34:	str	xzr, [sp, #296]
    4c38:	str	xzr, [sp, #312]
    4c3c:	str	xzr, [sp, #320]
    4c40:	str	xzr, [sp, #328]
    4c44:	str	wzr, [sp, #288]
    4c48:	str	wzr, [sp, #292]
    4c4c:	ldrb	w0, [x2, #8]
    4c50:	cmp	w0, #0x2
    4c54:	b.eq	4cb8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    4c58:	ldr	d0, [x19]
    4c5c:	fcmp	d0, d0
    4c60:	b.ne	4c70 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x64>  // b.any
    4c64:	ldr	d0, [x1]
    4c68:	fcmp	d0, d0
    4c6c:	b.eq	4d4c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x140>  // b.none
    4c70:	mov	x0, #0x1                   	// #1
    4c74:	str	x0, [sp, #296]
    4c78:	mov	x1, x20
    4c7c:	ldr	x2, [sp, #288]
    4c80:	str	x2, [x1], #8
    4c84:	str	w0, [x1, #8]
    4c88:	str	x0, [x20, #8]
    4c8c:	str	wzr, [sp, #304]
    4c90:	str	xzr, [x20, #24]
    4c94:	str	xzr, [x20, #32]
    4c98:	str	xzr, [x20, #40]
    4c9c:	add	x0, sp, #0x120
    4ca0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ca4:	mov	x0, x20
    4ca8:	ldp	x19, x20, [sp, #16]
    4cac:	ldp	x21, x22, [sp, #32]
    4cb0:	ldp	x29, x30, [sp], #432
    4cb4:	ret
    4cb8:	ldr	s0, [x19]
    4cbc:	fcmp	s0, s0
    4cc0:	b.ne	4cd0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.any
    4cc4:	ldr	s0, [x1]
    4cc8:	fcmp	s0, s0
    4ccc:	b.eq	4d54 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x148>  // b.none
    4cd0:	mov	w0, #0x1                   	// #1
    4cd4:	str	w0, [sp, #344]
    4cd8:	mov	x0, #0x1                   	// #1
    4cdc:	str	x0, [sp, #336]
    4ce0:	add	x1, sp, #0x150
    4ce4:	add	x0, sp, #0x128
    4ce8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4cec:	ldr	w0, [sp, #344]
    4cf0:	cmp	w0, #0x40
    4cf4:	b.ls	4d04 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.plast
    4cf8:	ldr	x0, [sp, #336]
    4cfc:	cbz	x0, 4d04 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>
    4d00:	bl	0 <_ZdaPv>
    4d04:	mov	x0, x20
    4d08:	ldr	x1, [sp, #288]
    4d0c:	str	x1, [x0], #8
    4d10:	ldr	w1, [sp, #304]
    4d14:	str	w1, [x0, #8]
    4d18:	ldr	x0, [sp, #296]
    4d1c:	str	x0, [x20, #8]
    4d20:	str	wzr, [sp, #304]
    4d24:	ldr	x1, [sp, #312]
    4d28:	str	x1, [x20, #24]
    4d2c:	ldr	x1, [sp, #320]
    4d30:	str	x1, [x20, #32]
    4d34:	ldr	x1, [sp, #328]
    4d38:	str	x1, [x20, #40]
    4d3c:	str	xzr, [sp, #328]
    4d40:	str	xzr, [sp, #320]
    4d44:	str	xzr, [sp, #312]
    4d48:	b	4c9c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    4d4c:	cmp	w0, #0x10
    4d50:	b.eq	4d9c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x190>  // b.none
    4d54:	add	x0, sp, #0xc0
    4d58:	mov	x1, x19
    4d5c:	mov	x19, x0
    4d60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d64:	add	x0, sp, #0xf0
    4d68:	mov	x1, x22
    4d6c:	mov	x22, x0
    4d70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d74:	mov	x8, x20
    4d78:	mov	x2, x21
    4d7c:	mov	x1, x22
    4d80:	mov	x0, x19
    4d84:	bl	48f4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    4d88:	mov	x0, x22
    4d8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d90:	mov	x0, x19
    4d94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4d98:	b	4c9c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    4d9c:	stp	x23, x24, [sp, #48]
    4da0:	stp	x25, x26, [sp, #64]
    4da4:	stp	x27, x28, [sp, #80]
    4da8:	mov	x0, x2
    4dac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4db0:	ldr	x0, [x0, #24]
    4db4:	ldrb	w0, [x0, #8]
    4db8:	cmp	w0, #0x2
    4dbc:	b.eq	4e2c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.none
    4dc0:	ldr	x0, [x19, #32]
    4dc4:	ldr	x1, [x19, #24]
    4dc8:	sub	x0, x0, x1
    4dcc:	asr	x1, x0, #4
    4dd0:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4dd4:	movk	x2, #0xaaab
    4dd8:	mul	x1, x1, x2
    4ddc:	ldr	x2, [x22, #32]
    4de0:	ldr	x3, [x22, #24]
    4de4:	sub	x2, x2, x3
    4de8:	cmp	x2, x0
    4dec:	b.ne	4f70 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x364>  // b.any
    4df0:	add	x0, sp, #0x138
    4df4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4df8:	ldr	x2, [x19, #24]
    4dfc:	ldr	x0, [x19, #32]
    4e00:	cmp	x0, x2
    4e04:	b.eq	5048 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    4e08:	mov	w23, #0x0                   	// #0
    4e0c:	mov	x0, #0x0                   	// #0
    4e10:	mov	w25, #0x1                   	// #1
    4e14:	mov	x27, #0x1                   	// #1
    4e18:	add	x26, sp, #0x180
    4e1c:	add	x28, sp, #0x190
    4e20:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4e24:	movk	x24, #0xaaab
    4e28:	b	4fdc <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>
    4e2c:	ldr	x0, [x19, #32]
    4e30:	ldr	x1, [x19, #24]
    4e34:	sub	x0, x0, x1
    4e38:	asr	x1, x0, #4
    4e3c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4e40:	movk	x2, #0xaaab
    4e44:	mul	x1, x1, x2
    4e48:	ldr	x2, [x22, #32]
    4e4c:	ldr	x3, [x22, #24]
    4e50:	sub	x2, x2, x3
    4e54:	cmp	x2, x0
    4e58:	b.ne	4e98 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.any
    4e5c:	add	x0, sp, #0x138
    4e60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4e64:	ldr	x2, [x19, #24]
    4e68:	ldr	x0, [x19, #32]
    4e6c:	cmp	x2, x0
    4e70:	b.eq	5048 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    4e74:	mov	w23, #0x0                   	// #0
    4e78:	mov	x0, #0x0                   	// #0
    4e7c:	mov	w25, #0x1                   	// #1
    4e80:	mov	x27, #0x1                   	// #1
    4e84:	add	x26, sp, #0x160
    4e88:	add	x28, sp, #0x170
    4e8c:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4e90:	movk	x24, #0xaaab
    4e94:	b	4f04 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2f8>
    4e98:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4e9c:	add	x3, x3, #0x0
    4ea0:	mov	w2, #0x22a                 	// #554
    4ea4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ea8:	add	x1, x1, #0x0
    4eac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4eb0:	add	x0, x0, #0x0
    4eb4:	bl	0 <__assert_fail>
    4eb8:	ldr	x1, [sp, #312]
    4ebc:	add	x0, x1, x0
    4ec0:	str	w25, [sp, #376]
    4ec4:	str	xzr, [sp, #368]
    4ec8:	mov	x1, x28
    4ecc:	add	x0, x0, #0x8
    4ed0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4ed4:	ldr	w0, [sp, #376]
    4ed8:	cmp	w0, #0x40
    4edc:	b.hi	4f60 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.pmore
    4ee0:	add	w23, w23, #0x1
    4ee4:	mov	w0, w23
    4ee8:	ldr	x2, [x19, #24]
    4eec:	ldr	x1, [x19, #32]
    4ef0:	sub	x1, x1, x2
    4ef4:	asr	x1, x1, #4
    4ef8:	mul	x1, x1, x24
    4efc:	cmp	x1, w23, uxtw
    4f00:	b.ls	5048 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    4f04:	add	x0, x0, x0, lsl #1
    4f08:	lsl	x0, x0, #4
    4f0c:	ldr	s0, [x2, x0]
    4f10:	fcmp	s0, s0
    4f14:	b.ne	4f28 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x31c>  // b.any
    4f18:	ldr	x1, [x22, #24]
    4f1c:	ldr	s0, [x1, x0]
    4f20:	fcmp	s0, s0
    4f24:	b.eq	4eb8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2ac>  // b.none
    4f28:	ldr	x1, [sp, #312]
    4f2c:	add	x0, x1, x0
    4f30:	str	w25, [sp, #360]
    4f34:	str	x27, [sp, #352]
    4f38:	mov	x1, x26
    4f3c:	add	x0, x0, #0x8
    4f40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4f44:	ldr	w0, [sp, #360]
    4f48:	cmp	w0, #0x40
    4f4c:	b.ls	4ee0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>  // b.plast
    4f50:	ldr	x0, [sp, #352]
    4f54:	cbz	x0, 4ee0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    4f58:	bl	0 <_ZdaPv>
    4f5c:	b	4ee0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    4f60:	ldr	x0, [sp, #368]
    4f64:	cbz	x0, 4ee0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    4f68:	bl	0 <_ZdaPv>
    4f6c:	b	4ee0 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    4f70:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4f74:	add	x3, x3, #0x0
    4f78:	mov	w2, #0x22a                 	// #554
    4f7c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4f80:	add	x1, x1, #0x0
    4f84:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4f88:	add	x0, x0, #0x0
    4f8c:	bl	0 <__assert_fail>
    4f90:	ldr	x1, [sp, #312]
    4f94:	add	x0, x1, x0
    4f98:	str	w25, [sp, #408]
    4f9c:	str	xzr, [sp, #400]
    4fa0:	mov	x1, x28
    4fa4:	add	x0, x0, #0x8
    4fa8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    4fac:	ldr	w0, [sp, #408]
    4fb0:	cmp	w0, #0x40
    4fb4:	b.hi	5038 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    4fb8:	add	w23, w23, #0x1
    4fbc:	mov	w0, w23
    4fc0:	ldr	x2, [x19, #24]
    4fc4:	ldr	x1, [x19, #32]
    4fc8:	sub	x1, x1, x2
    4fcc:	asr	x1, x1, #4
    4fd0:	mul	x1, x1, x24
    4fd4:	cmp	x1, w23, uxtw
    4fd8:	b.ls	5048 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    4fdc:	add	x0, x0, x0, lsl #1
    4fe0:	lsl	x0, x0, #4
    4fe4:	ldr	d0, [x2, x0]
    4fe8:	fcmp	d0, d0
    4fec:	b.ne	5000 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3f4>  // b.any
    4ff0:	ldr	x1, [x22, #24]
    4ff4:	ldr	d0, [x1, x0]
    4ff8:	fcmp	d0, d0
    4ffc:	b.eq	4f90 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x384>  // b.none
    5000:	ldr	x1, [sp, #312]
    5004:	add	x0, x1, x0
    5008:	str	w25, [sp, #392]
    500c:	str	x27, [sp, #384]
    5010:	mov	x1, x26
    5014:	add	x0, x0, #0x8
    5018:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    501c:	ldr	w0, [sp, #392]
    5020:	cmp	w0, #0x40
    5024:	b.ls	4fb8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>  // b.plast
    5028:	ldr	x0, [sp, #384]
    502c:	cbz	x0, 4fb8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    5030:	bl	0 <_ZdaPv>
    5034:	b	4fb8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    5038:	ldr	x0, [sp, #400]
    503c:	cbz	x0, 4fb8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    5040:	bl	0 <_ZdaPv>
    5044:	b	4fb8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    5048:	ldrb	w0, [x21, #8]
    504c:	cmp	w0, #0x10
    5050:	b.ne	51f8 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x5ec>  // b.any
    5054:	add	x25, sp, #0x120
    5058:	mov	x1, x25
    505c:	add	x0, sp, #0x60
    5060:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5064:	add	x23, sp, #0x90
    5068:	mov	x1, x19
    506c:	mov	x0, x23
    5070:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5074:	add	x0, sp, #0xc0
    5078:	mov	x1, x22
    507c:	mov	x22, x0
    5080:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5084:	add	x24, sp, #0xf0
    5088:	mov	x8, x24
    508c:	mov	x2, x21
    5090:	mov	x1, x22
    5094:	mov	x0, x23
    5098:	bl	48f4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    509c:	ldr	x0, [sp, #240]
    50a0:	str	x0, [sp, #288]
    50a4:	add	x1, x24, #0x8
    50a8:	add	x0, x25, #0x8
    50ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    50b0:	add	x1, x24, #0x18
    50b4:	add	x0, x25, #0x18
    50b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    50bc:	mov	x0, x24
    50c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    50c4:	mov	x0, x22
    50c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    50cc:	mov	x0, x23
    50d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    50d4:	ldr	x1, [x19, #24]
    50d8:	ldr	x0, [x19, #32]
    50dc:	cmp	x1, x0
    50e0:	b.eq	519c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.none
    50e4:	mov	x21, #0x0                   	// #0
    50e8:	mov	x22, #0x0                   	// #0
    50ec:	mov	w26, #0x1                   	// #1
    50f0:	mov	x25, #0x1                   	// #1
    50f4:	add	x24, sp, #0x1a0
    50f8:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    50fc:	movk	x23, #0xaaab
    5100:	b	5128 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x51c>
    5104:	add	x22, x22, #0x1
    5108:	add	x21, x21, #0x30
    510c:	ldr	x0, [x19, #32]
    5110:	ldr	x1, [x19, #24]
    5114:	sub	x0, x0, x1
    5118:	asr	x0, x0, #4
    511c:	mul	x0, x0, x23
    5120:	cmp	x22, x0
    5124:	b.cs	519c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.hs, b.nlast
    5128:	ldr	x27, [sp, #120]
    512c:	add	x27, x27, x21
    5130:	add	x27, x27, #0x8
    5134:	ldr	w28, [x27, #8]
    5138:	cmp	w28, #0x40
    513c:	b.ls	5154 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x548>  // b.plast
    5140:	mov	x0, x27
    5144:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5148:	sub	w28, w28, w0
    514c:	cmp	w28, #0x40
    5150:	b.hi	5104 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.pmore
    5154:	mov	x0, x27
    5158:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    515c:	cmp	x0, #0x1
    5160:	b.ne	5104 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.any
    5164:	ldr	x0, [sp, #312]
    5168:	add	x0, x0, x21
    516c:	str	w26, [sp, #424]
    5170:	str	x25, [sp, #416]
    5174:	mov	x1, x24
    5178:	add	x0, x0, #0x8
    517c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5180:	ldr	w0, [sp, #424]
    5184:	cmp	w0, #0x40
    5188:	b.ls	5104 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.plast
    518c:	ldr	x0, [sp, #416]
    5190:	cbz	x0, 5104 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    5194:	bl	0 <_ZdaPv>
    5198:	b	5104 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    519c:	mov	x0, x20
    51a0:	ldr	x1, [sp, #288]
    51a4:	str	x1, [x0], #8
    51a8:	ldr	w1, [sp, #304]
    51ac:	str	w1, [x0, #8]
    51b0:	ldr	x0, [sp, #296]
    51b4:	str	x0, [x20, #8]
    51b8:	str	wzr, [sp, #304]
    51bc:	ldr	x1, [sp, #312]
    51c0:	str	x1, [x20, #24]
    51c4:	ldr	x1, [sp, #320]
    51c8:	str	x1, [x20, #32]
    51cc:	ldr	x1, [sp, #328]
    51d0:	str	x1, [x20, #40]
    51d4:	str	xzr, [sp, #328]
    51d8:	str	xzr, [sp, #320]
    51dc:	str	xzr, [sp, #312]
    51e0:	add	x0, sp, #0x60
    51e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    51e8:	ldp	x23, x24, [sp, #48]
    51ec:	ldp	x25, x26, [sp, #64]
    51f0:	ldp	x27, x28, [sp, #80]
    51f4:	b	4c9c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    51f8:	ldp	x23, x24, [sp, #48]
    51fc:	ldp	x25, x26, [sp, #64]
    5200:	ldp	x27, x28, [sp, #80]
    5204:	b	4d54 <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE+0x148>

0000000000005208 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>:
    5208:	stp	x29, x30, [sp, #-80]!
    520c:	mov	x29, sp
    5210:	stp	x19, x20, [sp, #16]
    5214:	stp	x21, x22, [sp, #32]
    5218:	mov	x19, x8
    521c:	mov	x20, x0
    5220:	mov	x22, x1
    5224:	mov	w0, #0x1                   	// #1
    5228:	str	w0, [x8, #16]
    522c:	str	xzr, [x8, #8]
    5230:	str	xzr, [x8, #24]
    5234:	str	xzr, [x8, #32]
    5238:	str	xzr, [x8, #40]
    523c:	str	wzr, [x8]
    5240:	str	wzr, [x8, #4]
    5244:	ldrb	w0, [x2, #8]
    5248:	cmp	w0, #0x3
    524c:	b.eq	52e0 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xd8>  // b.none
    5250:	mov	x21, x2
    5254:	cmp	w0, #0x10
    5258:	b.eq	52f8 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xf0>  // b.none
    525c:	cmp	w0, #0x2
    5260:	b.eq	52b8 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xb0>  // b.none
    5264:	stp	x23, x24, [sp, #48]
    5268:	stp	x25, x26, [sp, #64]
    526c:	bl	0 <_ZN4llvm4dbgsEv>
    5270:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5274:	add	x1, x1, #0x0
    5278:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    527c:	mov	x19, x0
    5280:	mov	w3, #0x0                   	// #0
    5284:	mov	w2, #0x0                   	// #0
    5288:	mov	x1, x0
    528c:	mov	x0, x21
    5290:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    5294:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5298:	add	x1, x1, #0x0
    529c:	mov	x0, x19
    52a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    52a4:	mov	w2, #0x1dd                 	// #477
    52a8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    52ac:	add	x1, x1, #0x0
    52b0:	mov	x0, #0x0                   	// #0
    52b4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    52b8:	ldr	s1, [x20]
    52bc:	ldr	s0, [x1]
    52c0:	fcmpe	s1, s0
    52c4:	cset	x0, ge  // ge = tcont
    52c8:	str	x0, [x8, #8]
    52cc:	mov	x0, x19
    52d0:	ldp	x19, x20, [sp, #16]
    52d4:	ldp	x21, x22, [sp, #32]
    52d8:	ldp	x29, x30, [sp], #80
    52dc:	ret
    52e0:	ldr	d1, [x20]
    52e4:	ldr	d0, [x1]
    52e8:	fcmpe	d1, d0
    52ec:	cset	x0, ge  // ge = tcont
    52f0:	str	x0, [x8, #8]
    52f4:	b	52cc <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    52f8:	ldr	x0, [x2, #24]
    52fc:	ldrb	w0, [x0, #8]
    5300:	cmp	w0, #0x2
    5304:	b.eq	5370 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x168>  // b.none
    5308:	ldr	x0, [x20, #32]
    530c:	ldr	x1, [x20, #24]
    5310:	sub	x0, x0, x1
    5314:	asr	x1, x0, #4
    5318:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    531c:	movk	x2, #0xaaab
    5320:	mul	x1, x1, x2
    5324:	ldr	x2, [x22, #32]
    5328:	ldr	x3, [x22, #24]
    532c:	sub	x2, x2, x3
    5330:	cmp	x2, x0
    5334:	b.ne	547c <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x274>  // b.any
    5338:	add	x0, x8, #0x18
    533c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5340:	ldr	x1, [x20, #24]
    5344:	ldr	x0, [x20, #32]
    5348:	cmp	x0, x1
    534c:	b.eq	52cc <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    5350:	stp	x23, x24, [sp, #48]
    5354:	stp	x25, x26, [sp, #64]
    5358:	mov	w21, #0x0                   	// #0
    535c:	mov	x2, #0x0                   	// #0
    5360:	mov	w24, #0x1                   	// #1
    5364:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5368:	movk	x23, #0xaaab
    536c:	b	54d8 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x2d0>
    5370:	ldr	x0, [x20, #32]
    5374:	ldr	x1, [x20, #24]
    5378:	sub	x0, x0, x1
    537c:	asr	x1, x0, #4
    5380:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5384:	movk	x2, #0xaaab
    5388:	mul	x1, x1, x2
    538c:	ldr	x2, [x22, #32]
    5390:	ldr	x3, [x22, #24]
    5394:	sub	x2, x2, x3
    5398:	cmp	x2, x0
    539c:	b.ne	53d8 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1d0>  // b.any
    53a0:	add	x0, x8, #0x18
    53a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    53a8:	ldr	x2, [x20, #24]
    53ac:	ldr	x0, [x20, #32]
    53b0:	cmp	x2, x0
    53b4:	b.eq	52cc <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.none
    53b8:	stp	x23, x24, [sp, #48]
    53bc:	stp	x25, x26, [sp, #64]
    53c0:	mov	w21, #0x0                   	// #0
    53c4:	mov	x0, #0x0                   	// #0
    53c8:	mov	w24, #0x1                   	// #1
    53cc:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    53d0:	movk	x23, #0xaaab
    53d4:	b	5434 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x22c>
    53d8:	stp	x23, x24, [sp, #48]
    53dc:	stp	x25, x26, [sp, #64]
    53e0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    53e4:	add	x3, x3, #0x0
    53e8:	mov	w2, #0x1da                 	// #474
    53ec:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    53f0:	add	x1, x1, #0x0
    53f4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    53f8:	add	x0, x0, #0x0
    53fc:	bl	0 <__assert_fail>
    5400:	bl	0 <_ZdaPv>
    5404:	mov	x0, x25
    5408:	str	x26, [x0, #8]!
    540c:	str	w24, [x0, #8]
    5410:	add	w21, w21, #0x1
    5414:	mov	w0, w21
    5418:	ldr	x2, [x20, #24]
    541c:	ldr	x1, [x20, #32]
    5420:	sub	x1, x1, x2
    5424:	asr	x1, x1, #4
    5428:	mul	x1, x1, x23
    542c:	cmp	x1, w21, uxtw
    5430:	b.ls	5470 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x268>  // b.plast
    5434:	add	x0, x0, x0, lsl #1
    5438:	lsl	x0, x0, #4
    543c:	ldr	x25, [x19, #24]
    5440:	add	x25, x25, x0
    5444:	ldr	x1, [x22, #24]
    5448:	ldr	s1, [x2, x0]
    544c:	ldr	s0, [x1, x0]
    5450:	fcmpe	s1, s0
    5454:	cset	x26, ge  // ge = tcont
    5458:	ldr	w0, [x25, #16]
    545c:	cmp	w0, #0x40
    5460:	b.ls	5404 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>  // b.plast
    5464:	ldr	x0, [x25, #8]
    5468:	cbnz	x0, 5400 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1f8>
    546c:	b	5404 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x1fc>
    5470:	ldp	x23, x24, [sp, #48]
    5474:	ldp	x25, x26, [sp, #64]
    5478:	b	52cc <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>
    547c:	stp	x23, x24, [sp, #48]
    5480:	stp	x25, x26, [sp, #64]
    5484:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5488:	add	x3, x3, #0x0
    548c:	mov	w2, #0x1da                 	// #474
    5490:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5494:	add	x1, x1, #0x0
    5498:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    549c:	add	x0, x0, #0x0
    54a0:	bl	0 <__assert_fail>
    54a4:	bl	0 <_ZdaPv>
    54a8:	mov	x0, x25
    54ac:	str	x26, [x0, #8]!
    54b0:	str	w24, [x0, #8]
    54b4:	add	w21, w21, #0x1
    54b8:	mov	w2, w21
    54bc:	ldr	x1, [x20, #24]
    54c0:	ldr	x3, [x20, #32]
    54c4:	sub	x3, x3, x1
    54c8:	asr	x3, x3, #4
    54cc:	mul	x3, x3, x23
    54d0:	cmp	x3, w21, uxtw
    54d4:	b.ls	5514 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x30c>  // b.plast
    54d8:	add	x2, x2, x2, lsl #1
    54dc:	lsl	x2, x2, #4
    54e0:	ldr	x0, [x19, #24]
    54e4:	add	x25, x0, x2
    54e8:	ldr	x0, [x22, #24]
    54ec:	ldr	d1, [x1, x2]
    54f0:	ldr	d0, [x0, x2]
    54f4:	fcmpe	d1, d0
    54f8:	cset	x26, ge  // ge = tcont
    54fc:	ldr	w0, [x25, #16]
    5500:	cmp	w0, #0x40
    5504:	b.ls	54a8 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>  // b.plast
    5508:	ldr	x0, [x25, #8]
    550c:	cbnz	x0, 54a4 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x29c>
    5510:	b	54a8 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0x2a0>
    5514:	ldp	x23, x24, [sp, #48]
    5518:	ldp	x25, x26, [sp, #64]
    551c:	b	52cc <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>

0000000000005520 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>:
    5520:	stp	x29, x30, [sp, #-432]!
    5524:	mov	x29, sp
    5528:	stp	x19, x20, [sp, #16]
    552c:	stp	x21, x22, [sp, #32]
    5530:	mov	x20, x8
    5534:	mov	x19, x0
    5538:	mov	x22, x1
    553c:	mov	x21, x2
    5540:	mov	w0, #0x1                   	// #1
    5544:	str	w0, [sp, #304]
    5548:	str	xzr, [sp, #296]
    554c:	str	xzr, [sp, #312]
    5550:	str	xzr, [sp, #320]
    5554:	str	xzr, [sp, #328]
    5558:	str	wzr, [sp, #288]
    555c:	str	wzr, [sp, #292]
    5560:	ldrb	w0, [x2, #8]
    5564:	cmp	w0, #0x2
    5568:	b.eq	55cc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xac>  // b.none
    556c:	ldr	d0, [x19]
    5570:	fcmp	d0, d0
    5574:	b.ne	5584 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x64>  // b.any
    5578:	ldr	d0, [x1]
    557c:	fcmp	d0, d0
    5580:	b.eq	5660 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x140>  // b.none
    5584:	mov	x0, #0x1                   	// #1
    5588:	str	x0, [sp, #296]
    558c:	mov	x1, x20
    5590:	ldr	x2, [sp, #288]
    5594:	str	x2, [x1], #8
    5598:	str	w0, [x1, #8]
    559c:	str	x0, [x20, #8]
    55a0:	str	wzr, [sp, #304]
    55a4:	str	xzr, [x20, #24]
    55a8:	str	xzr, [x20, #32]
    55ac:	str	xzr, [x20, #40]
    55b0:	add	x0, sp, #0x120
    55b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    55b8:	mov	x0, x20
    55bc:	ldp	x19, x20, [sp, #16]
    55c0:	ldp	x21, x22, [sp, #32]
    55c4:	ldp	x29, x30, [sp], #432
    55c8:	ret
    55cc:	ldr	s0, [x19]
    55d0:	fcmp	s0, s0
    55d4:	b.ne	55e4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xc4>  // b.any
    55d8:	ldr	s0, [x1]
    55dc:	fcmp	s0, s0
    55e0:	b.eq	5668 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x148>  // b.none
    55e4:	mov	w0, #0x1                   	// #1
    55e8:	str	w0, [sp, #344]
    55ec:	mov	x0, #0x1                   	// #1
    55f0:	str	x0, [sp, #336]
    55f4:	add	x1, sp, #0x150
    55f8:	add	x0, sp, #0x128
    55fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5600:	ldr	w0, [sp, #344]
    5604:	cmp	w0, #0x40
    5608:	b.ls	5618 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>  // b.plast
    560c:	ldr	x0, [sp, #336]
    5610:	cbz	x0, 5618 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0xf8>
    5614:	bl	0 <_ZdaPv>
    5618:	mov	x0, x20
    561c:	ldr	x1, [sp, #288]
    5620:	str	x1, [x0], #8
    5624:	ldr	w1, [sp, #304]
    5628:	str	w1, [x0, #8]
    562c:	ldr	x0, [sp, #296]
    5630:	str	x0, [x20, #8]
    5634:	str	wzr, [sp, #304]
    5638:	ldr	x1, [sp, #312]
    563c:	str	x1, [x20, #24]
    5640:	ldr	x1, [sp, #320]
    5644:	str	x1, [x20, #32]
    5648:	ldr	x1, [sp, #328]
    564c:	str	x1, [x20, #40]
    5650:	str	xzr, [sp, #328]
    5654:	str	xzr, [sp, #320]
    5658:	str	xzr, [sp, #312]
    565c:	b	55b0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    5660:	cmp	w0, #0x10
    5664:	b.eq	56b0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x190>  // b.none
    5668:	add	x0, sp, #0xc0
    566c:	mov	x1, x19
    5670:	mov	x19, x0
    5674:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5678:	add	x0, sp, #0xf0
    567c:	mov	x1, x22
    5680:	mov	x22, x0
    5684:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5688:	mov	x8, x20
    568c:	mov	x2, x21
    5690:	mov	x1, x22
    5694:	mov	x0, x19
    5698:	bl	5208 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    569c:	mov	x0, x22
    56a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    56a4:	mov	x0, x19
    56a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    56ac:	b	55b0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    56b0:	stp	x23, x24, [sp, #48]
    56b4:	stp	x25, x26, [sp, #64]
    56b8:	stp	x27, x28, [sp, #80]
    56bc:	mov	x0, x2
    56c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    56c4:	ldr	x0, [x0, #24]
    56c8:	ldrb	w0, [x0, #8]
    56cc:	cmp	w0, #0x2
    56d0:	b.eq	5740 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x220>  // b.none
    56d4:	ldr	x0, [x19, #32]
    56d8:	ldr	x1, [x19, #24]
    56dc:	sub	x0, x0, x1
    56e0:	asr	x1, x0, #4
    56e4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    56e8:	movk	x2, #0xaaab
    56ec:	mul	x1, x1, x2
    56f0:	ldr	x2, [x22, #32]
    56f4:	ldr	x3, [x22, #24]
    56f8:	sub	x2, x2, x3
    56fc:	cmp	x2, x0
    5700:	b.ne	5884 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x364>  // b.any
    5704:	add	x0, sp, #0x138
    5708:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    570c:	ldr	x2, [x19, #24]
    5710:	ldr	x0, [x19, #32]
    5714:	cmp	x0, x2
    5718:	b.eq	595c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    571c:	mov	w23, #0x0                   	// #0
    5720:	mov	x0, #0x0                   	// #0
    5724:	mov	w25, #0x1                   	// #1
    5728:	mov	x27, #0x1                   	// #1
    572c:	add	x26, sp, #0x180
    5730:	add	x28, sp, #0x190
    5734:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5738:	movk	x24, #0xaaab
    573c:	b	58f0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3d0>
    5740:	ldr	x0, [x19, #32]
    5744:	ldr	x1, [x19, #24]
    5748:	sub	x0, x0, x1
    574c:	asr	x1, x0, #4
    5750:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5754:	movk	x2, #0xaaab
    5758:	mul	x1, x1, x2
    575c:	ldr	x2, [x22, #32]
    5760:	ldr	x3, [x22, #24]
    5764:	sub	x2, x2, x3
    5768:	cmp	x2, x0
    576c:	b.ne	57ac <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x28c>  // b.any
    5770:	add	x0, sp, #0x138
    5774:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5778:	ldr	x2, [x19, #24]
    577c:	ldr	x0, [x19, #32]
    5780:	cmp	x2, x0
    5784:	b.eq	595c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.none
    5788:	mov	w23, #0x0                   	// #0
    578c:	mov	x0, #0x0                   	// #0
    5790:	mov	w25, #0x1                   	// #1
    5794:	mov	x27, #0x1                   	// #1
    5798:	add	x26, sp, #0x160
    579c:	add	x28, sp, #0x170
    57a0:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    57a4:	movk	x24, #0xaaab
    57a8:	b	5818 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2f8>
    57ac:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    57b0:	add	x3, x3, #0x0
    57b4:	mov	w2, #0x233                 	// #563
    57b8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    57bc:	add	x1, x1, #0x0
    57c0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    57c4:	add	x0, x0, #0x0
    57c8:	bl	0 <__assert_fail>
    57cc:	ldr	x1, [sp, #312]
    57d0:	add	x0, x1, x0
    57d4:	str	w25, [sp, #376]
    57d8:	str	xzr, [sp, #368]
    57dc:	mov	x1, x28
    57e0:	add	x0, x0, #0x8
    57e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    57e8:	ldr	w0, [sp, #376]
    57ec:	cmp	w0, #0x40
    57f0:	b.hi	5874 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x354>  // b.pmore
    57f4:	add	w23, w23, #0x1
    57f8:	mov	w0, w23
    57fc:	ldr	x2, [x19, #24]
    5800:	ldr	x1, [x19, #32]
    5804:	sub	x1, x1, x2
    5808:	asr	x1, x1, #4
    580c:	mul	x1, x1, x24
    5810:	cmp	x1, w23, uxtw
    5814:	b.ls	595c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    5818:	add	x0, x0, x0, lsl #1
    581c:	lsl	x0, x0, #4
    5820:	ldr	s0, [x2, x0]
    5824:	fcmp	s0, s0
    5828:	b.ne	583c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x31c>  // b.any
    582c:	ldr	x1, [x22, #24]
    5830:	ldr	s0, [x1, x0]
    5834:	fcmp	s0, s0
    5838:	b.eq	57cc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2ac>  // b.none
    583c:	ldr	x1, [sp, #312]
    5840:	add	x0, x1, x0
    5844:	str	w25, [sp, #360]
    5848:	str	x27, [sp, #352]
    584c:	mov	x1, x26
    5850:	add	x0, x0, #0x8
    5854:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5858:	ldr	w0, [sp, #360]
    585c:	cmp	w0, #0x40
    5860:	b.ls	57f4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>  // b.plast
    5864:	ldr	x0, [sp, #352]
    5868:	cbz	x0, 57f4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    586c:	bl	0 <_ZdaPv>
    5870:	b	57f4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    5874:	ldr	x0, [sp, #368]
    5878:	cbz	x0, 57f4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    587c:	bl	0 <_ZdaPv>
    5880:	b	57f4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x2d4>
    5884:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5888:	add	x3, x3, #0x0
    588c:	mov	w2, #0x233                 	// #563
    5890:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5894:	add	x1, x1, #0x0
    5898:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    589c:	add	x0, x0, #0x0
    58a0:	bl	0 <__assert_fail>
    58a4:	ldr	x1, [sp, #312]
    58a8:	add	x0, x1, x0
    58ac:	str	w25, [sp, #408]
    58b0:	str	xzr, [sp, #400]
    58b4:	mov	x1, x28
    58b8:	add	x0, x0, #0x8
    58bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    58c0:	ldr	w0, [sp, #408]
    58c4:	cmp	w0, #0x40
    58c8:	b.hi	594c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x42c>  // b.pmore
    58cc:	add	w23, w23, #0x1
    58d0:	mov	w0, w23
    58d4:	ldr	x2, [x19, #24]
    58d8:	ldr	x1, [x19, #32]
    58dc:	sub	x1, x1, x2
    58e0:	asr	x1, x1, #4
    58e4:	mul	x1, x1, x24
    58e8:	cmp	x1, w23, uxtw
    58ec:	b.ls	595c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x43c>  // b.plast
    58f0:	add	x0, x0, x0, lsl #1
    58f4:	lsl	x0, x0, #4
    58f8:	ldr	d0, [x2, x0]
    58fc:	fcmp	d0, d0
    5900:	b.ne	5914 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3f4>  // b.any
    5904:	ldr	x1, [x22, #24]
    5908:	ldr	d0, [x1, x0]
    590c:	fcmp	d0, d0
    5910:	b.eq	58a4 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x384>  // b.none
    5914:	ldr	x1, [sp, #312]
    5918:	add	x0, x1, x0
    591c:	str	w25, [sp, #392]
    5920:	str	x27, [sp, #384]
    5924:	mov	x1, x26
    5928:	add	x0, x0, #0x8
    592c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5930:	ldr	w0, [sp, #392]
    5934:	cmp	w0, #0x40
    5938:	b.ls	58cc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>  // b.plast
    593c:	ldr	x0, [sp, #384]
    5940:	cbz	x0, 58cc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    5944:	bl	0 <_ZdaPv>
    5948:	b	58cc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    594c:	ldr	x0, [sp, #400]
    5950:	cbz	x0, 58cc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    5954:	bl	0 <_ZdaPv>
    5958:	b	58cc <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x3ac>
    595c:	ldrb	w0, [x21, #8]
    5960:	cmp	w0, #0x10
    5964:	b.ne	5b0c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x5ec>  // b.any
    5968:	add	x25, sp, #0x120
    596c:	mov	x1, x25
    5970:	add	x0, sp, #0x60
    5974:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5978:	add	x23, sp, #0x90
    597c:	mov	x1, x19
    5980:	mov	x0, x23
    5984:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5988:	add	x0, sp, #0xc0
    598c:	mov	x1, x22
    5990:	mov	x22, x0
    5994:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5998:	add	x24, sp, #0xf0
    599c:	mov	x8, x24
    59a0:	mov	x2, x21
    59a4:	mov	x1, x22
    59a8:	mov	x0, x23
    59ac:	bl	5208 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    59b0:	ldr	x0, [sp, #240]
    59b4:	str	x0, [sp, #288]
    59b8:	add	x1, x24, #0x8
    59bc:	add	x0, x25, #0x8
    59c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    59c4:	add	x1, x24, #0x18
    59c8:	add	x0, x25, #0x18
    59cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    59d0:	mov	x0, x24
    59d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    59d8:	mov	x0, x22
    59dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    59e0:	mov	x0, x23
    59e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    59e8:	ldr	x1, [x19, #24]
    59ec:	ldr	x0, [x19, #32]
    59f0:	cmp	x1, x0
    59f4:	b.eq	5ab0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.none
    59f8:	mov	x21, #0x0                   	// #0
    59fc:	mov	x22, #0x0                   	// #0
    5a00:	mov	w26, #0x1                   	// #1
    5a04:	mov	x25, #0x1                   	// #1
    5a08:	add	x24, sp, #0x1a0
    5a0c:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5a10:	movk	x23, #0xaaab
    5a14:	b	5a3c <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x51c>
    5a18:	add	x22, x22, #0x1
    5a1c:	add	x21, x21, #0x30
    5a20:	ldr	x0, [x19, #32]
    5a24:	ldr	x1, [x19, #24]
    5a28:	sub	x0, x0, x1
    5a2c:	asr	x0, x0, #4
    5a30:	mul	x0, x0, x23
    5a34:	cmp	x22, x0
    5a38:	b.cs	5ab0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x590>  // b.hs, b.nlast
    5a3c:	ldr	x27, [sp, #120]
    5a40:	add	x27, x27, x21
    5a44:	add	x27, x27, #0x8
    5a48:	ldr	w28, [x27, #8]
    5a4c:	cmp	w28, #0x40
    5a50:	b.ls	5a68 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x548>  // b.plast
    5a54:	mov	x0, x27
    5a58:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5a5c:	sub	w28, w28, w0
    5a60:	cmp	w28, #0x40
    5a64:	b.hi	5a18 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.pmore
    5a68:	mov	x0, x27
    5a6c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5a70:	cmp	x0, #0x1
    5a74:	b.ne	5a18 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.any
    5a78:	ldr	x0, [sp, #312]
    5a7c:	add	x0, x0, x21
    5a80:	str	w26, [sp, #424]
    5a84:	str	x25, [sp, #416]
    5a88:	mov	x1, x24
    5a8c:	add	x0, x0, #0x8
    5a90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5a94:	ldr	w0, [sp, #424]
    5a98:	cmp	w0, #0x40
    5a9c:	b.ls	5a18 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>  // b.plast
    5aa0:	ldr	x0, [sp, #416]
    5aa4:	cbz	x0, 5a18 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    5aa8:	bl	0 <_ZdaPv>
    5aac:	b	5a18 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x4f8>
    5ab0:	mov	x0, x20
    5ab4:	ldr	x1, [sp, #288]
    5ab8:	str	x1, [x0], #8
    5abc:	ldr	w1, [sp, #304]
    5ac0:	str	w1, [x0, #8]
    5ac4:	ldr	x0, [sp, #296]
    5ac8:	str	x0, [x20, #8]
    5acc:	str	wzr, [sp, #304]
    5ad0:	ldr	x1, [sp, #312]
    5ad4:	str	x1, [x20, #24]
    5ad8:	ldr	x1, [sp, #320]
    5adc:	str	x1, [x20, #32]
    5ae0:	ldr	x1, [sp, #328]
    5ae4:	str	x1, [x20, #40]
    5ae8:	str	xzr, [sp, #328]
    5aec:	str	xzr, [sp, #320]
    5af0:	str	xzr, [sp, #312]
    5af4:	add	x0, sp, #0x60
    5af8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5afc:	ldp	x23, x24, [sp, #48]
    5b00:	ldp	x25, x26, [sp, #64]
    5b04:	ldp	x27, x28, [sp, #80]
    5b08:	b	55b0 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x90>
    5b0c:	ldp	x23, x24, [sp, #48]
    5b10:	ldp	x25, x26, [sp, #64]
    5b14:	ldp	x27, x28, [sp, #80]
    5b18:	b	5668 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE+0x148>

0000000000005b1c <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>:
    5b1c:	stp	x29, x30, [sp, #-80]!
    5b20:	mov	x29, sp
    5b24:	stp	x19, x20, [sp, #16]
    5b28:	stp	x21, x22, [sp, #32]
    5b2c:	stp	x23, x24, [sp, #48]
    5b30:	mov	x20, x8
    5b34:	mov	x21, x0
    5b38:	mov	x0, x1
    5b3c:	and	w24, w3, #0xff
    5b40:	mov	w1, #0x1                   	// #1
    5b44:	str	w1, [x8, #16]
    5b48:	str	xzr, [x8, #8]
    5b4c:	str	xzr, [x8, #24]
    5b50:	str	xzr, [x8, #32]
    5b54:	str	xzr, [x8, #40]
    5b58:	str	wzr, [x8]
    5b5c:	str	wzr, [x8, #4]
    5b60:	ldrb	w1, [x2, #8]
    5b64:	cmp	w1, #0x10
    5b68:	b.ne	5c58 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x13c>  // b.any
    5b6c:	ldr	x2, [x21, #32]
    5b70:	ldr	x1, [x21, #24]
    5b74:	sub	x2, x2, x1
    5b78:	asr	x1, x2, #4
    5b7c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5b80:	movk	x3, #0xaaab
    5b84:	mul	x1, x1, x3
    5b88:	ldr	x3, [x0, #32]
    5b8c:	ldr	x0, [x0, #24]
    5b90:	sub	x0, x3, x0
    5b94:	cmp	x0, x2
    5b98:	b.ne	5bd8 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xbc>  // b.any
    5b9c:	add	x0, x8, #0x18
    5ba0:	cbz	x1, 5c60 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x144>
    5ba4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5ba8:	ldr	x1, [x21, #32]
    5bac:	ldr	x0, [x21, #24]
    5bb0:	cmp	x1, x0
    5bb4:	b.eq	5c60 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x144>  // b.none
    5bb8:	stp	x25, x26, [sp, #64]
    5bbc:	mov	x22, #0x0                   	// #0
    5bc0:	mov	x23, #0x0                   	// #0
    5bc4:	and	x24, x24, #0xff
    5bc8:	mov	w26, #0x1                   	// #1
    5bcc:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5bd0:	movk	x25, #0xaaab
    5bd4:	b	5c30 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x114>
    5bd8:	stp	x25, x26, [sp, #64]
    5bdc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5be0:	add	x3, x3, #0x0
    5be4:	mov	w2, #0x28c                 	// #652
    5be8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5bec:	add	x1, x1, #0x0
    5bf0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5bf4:	add	x0, x0, #0x0
    5bf8:	bl	0 <__assert_fail>
    5bfc:	bl	0 <_ZdaPv>
    5c00:	mov	x1, x19
    5c04:	str	x24, [x1, #8]!
    5c08:	str	w26, [x1, #8]
    5c0c:	add	x23, x23, #0x1
    5c10:	add	x22, x22, #0x30
    5c14:	ldr	x0, [x21, #32]
    5c18:	ldr	x1, [x21, #24]
    5c1c:	sub	x0, x0, x1
    5c20:	asr	x0, x0, #4
    5c24:	mul	x0, x0, x25
    5c28:	cmp	x23, x0
    5c2c:	b.cs	5c50 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x134>  // b.hs, b.nlast
    5c30:	ldr	x1, [x20, #24]
    5c34:	add	x19, x1, x22
    5c38:	ldr	w0, [x19, #16]
    5c3c:	cmp	w0, #0x40
    5c40:	b.ls	5c00 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xe4>  // b.plast
    5c44:	ldr	x0, [x19, #8]
    5c48:	cbnz	x0, 5bfc <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xe0>
    5c4c:	b	5c00 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0xe4>
    5c50:	ldp	x25, x26, [sp, #64]
    5c54:	b	5c60 <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb+0x144>
    5c58:	and	x24, x24, #0xff
    5c5c:	str	x24, [x8, #8]
    5c60:	mov	x0, x20
    5c64:	ldp	x19, x20, [sp, #16]
    5c68:	ldp	x21, x22, [sp, #32]
    5c6c:	ldp	x23, x24, [sp, #48]
    5c70:	ldp	x29, x30, [sp], #80
    5c74:	ret

0000000000005c78 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>:
    5c78:	stp	x29, x30, [sp, #-96]!
    5c7c:	mov	x29, sp
    5c80:	stp	x23, x24, [sp, #48]
    5c84:	stp	x25, x26, [sp, #64]
    5c88:	stp	x27, x28, [sp, #80]
    5c8c:	mov	x23, x8
    5c90:	mov	x24, x0
    5c94:	mov	x27, x1
    5c98:	mov	x26, x2
    5c9c:	mov	w0, #0x1                   	// #1
    5ca0:	str	w0, [x8, #16]
    5ca4:	str	xzr, [x8, #8]
    5ca8:	str	xzr, [x8, #24]
    5cac:	str	xzr, [x8, #32]
    5cb0:	str	xzr, [x8, #40]
    5cb4:	str	wzr, [x8]
    5cb8:	str	wzr, [x8, #4]
    5cbc:	ldrb	w0, [x3, #8]
    5cc0:	cmp	w0, #0x10
    5cc4:	b.ne	5ea0 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x228>  // b.any
    5cc8:	ldr	x2, [x24, #32]
    5ccc:	ldr	x0, [x24, #24]
    5cd0:	sub	x2, x2, x0
    5cd4:	asr	x1, x2, #4
    5cd8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5cdc:	movk	x0, #0xaaab
    5ce0:	mul	x1, x1, x0
    5ce4:	ldr	x0, [x27, #32]
    5ce8:	ldr	x3, [x27, #24]
    5cec:	sub	x0, x0, x3
    5cf0:	cmp	x2, x0
    5cf4:	b.ne	5d44 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0xcc>  // b.any
    5cf8:	ldr	x2, [x26, #32]
    5cfc:	ldr	x3, [x26, #24]
    5d00:	sub	x2, x2, x3
    5d04:	cmp	x0, x2
    5d08:	b.ne	5d6c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0xf4>  // b.any
    5d0c:	add	x0, x8, #0x18
    5d10:	cbz	x1, 5f14 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x29c>
    5d14:	stp	x19, x20, [sp, #16]
    5d18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d1c:	ldr	x19, [x24, #24]
    5d20:	ldr	x0, [x24, #32]
    5d24:	cmp	x0, x19
    5d28:	b.eq	5f44 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x2cc>  // b.none
    5d2c:	stp	x21, x22, [sp, #32]
    5d30:	mov	x21, #0x0                   	// #0
    5d34:	mov	x25, #0x0                   	// #0
    5d38:	mov	x28, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5d3c:	movk	x28, #0xaaab
    5d40:	b	5e0c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x194>
    5d44:	stp	x19, x20, [sp, #16]
    5d48:	stp	x21, x22, [sp, #32]
    5d4c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d50:	add	x3, x3, #0x0
    5d54:	mov	w2, #0x34f                 	// #847
    5d58:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d5c:	add	x1, x1, #0x0
    5d60:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d64:	add	x0, x0, #0x0
    5d68:	bl	0 <__assert_fail>
    5d6c:	stp	x19, x20, [sp, #16]
    5d70:	stp	x21, x22, [sp, #32]
    5d74:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d78:	add	x3, x3, #0x0
    5d7c:	mov	w2, #0x350                 	// #848
    5d80:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d84:	add	x1, x1, #0x0
    5d88:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5d8c:	add	x0, x0, #0x0
    5d90:	bl	0 <__assert_fail>
    5d94:	ldr	x0, [x19, #8]
    5d98:	b	5da4 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x12c>
    5d9c:	ldr	x0, [x19, #8]
    5da0:	ldr	x0, [x0]
    5da4:	cbnz	x0, 5e38 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1c0>
    5da8:	ldr	x19, [x26, #24]
    5dac:	add	x19, x19, x21
    5db0:	mov	x1, x19
    5db4:	ldr	x2, [x1], #8
    5db8:	mov	x0, x20
    5dbc:	str	x2, [x0], #8
    5dc0:	ldr	w2, [x0, #8]
    5dc4:	cmp	w2, #0x40
    5dc8:	b.hi	5dd8 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x160>  // b.pmore
    5dcc:	ldr	w2, [x19, #16]
    5dd0:	cmp	w2, #0x40
    5dd4:	b.ls	5e44 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1cc>  // b.plast
    5dd8:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    5ddc:	add	x1, x19, #0x18
    5de0:	add	x0, x20, #0x18
    5de4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5de8:	add	x25, x25, #0x1
    5dec:	ldr	x19, [x24, #24]
    5df0:	add	x21, x21, #0x30
    5df4:	ldr	x0, [x24, #32]
    5df8:	sub	x0, x0, x19
    5dfc:	asr	x0, x0, #4
    5e00:	mul	x0, x0, x28
    5e04:	cmp	x25, x0
    5e08:	b.cs	5e94 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x21c>  // b.hs, b.nlast
    5e0c:	ldr	x20, [x23, #24]
    5e10:	add	x20, x20, x21
    5e14:	add	x19, x19, x21
    5e18:	ldr	w22, [x19, #16]
    5e1c:	cmp	w22, #0x40
    5e20:	b.ls	5d94 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x11c>  // b.plast
    5e24:	add	x0, x19, #0x8
    5e28:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5e2c:	sub	w22, w22, w0
    5e30:	cmp	w22, #0x40
    5e34:	b.ls	5d9c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x124>  // b.plast
    5e38:	ldr	x19, [x27, #24]
    5e3c:	add	x19, x19, x21
    5e40:	b	5db0 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x138>
    5e44:	ldr	x1, [x19, #8]
    5e48:	str	x1, [x20, #8]
    5e4c:	ldr	w0, [x19, #16]
    5e50:	str	w0, [x20, #16]
    5e54:	neg	w2, w0
    5e58:	mov	x3, #0xffffffffffffffff    	// #-1
    5e5c:	lsr	x2, x3, x2
    5e60:	cmp	w0, #0x40
    5e64:	b.hi	5e74 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x1fc>  // b.pmore
    5e68:	and	x1, x1, x2
    5e6c:	str	x1, [x20, #8]
    5e70:	b	5ddc <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x164>
    5e74:	mov	w0, w0
    5e78:	add	x0, x0, #0x3f
    5e7c:	lsr	x0, x0, #6
    5e80:	sub	w0, w0, #0x1
    5e84:	ldr	x3, [x1, x0, lsl #3]
    5e88:	and	x2, x3, x2
    5e8c:	str	x2, [x1, x0, lsl #3]
    5e90:	b	5ddc <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x164>
    5e94:	ldp	x19, x20, [sp, #16]
    5e98:	ldp	x21, x22, [sp, #32]
    5e9c:	b	5f14 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x29c>
    5ea0:	stp	x19, x20, [sp, #16]
    5ea4:	ldr	w19, [x24, #16]
    5ea8:	cmp	w19, #0x40
    5eac:	b.ls	5ecc <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x254>  // b.plast
    5eb0:	add	x0, x24, #0x8
    5eb4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5eb8:	sub	w19, w19, w0
    5ebc:	cmp	w19, #0x40
    5ec0:	b.ls	5ed4 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x25c>  // b.plast
    5ec4:	mov	x26, x27
    5ec8:	b	5ee4 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x26c>
    5ecc:	ldr	x0, [x24, #8]
    5ed0:	b	5edc <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x264>
    5ed4:	ldr	x0, [x24, #8]
    5ed8:	ldr	x0, [x0]
    5edc:	cmp	x0, #0x0
    5ee0:	csel	x26, x26, x27, eq  // eq = none
    5ee4:	mov	x0, x23
    5ee8:	mov	x1, x26
    5eec:	ldr	x2, [x1], #8
    5ef0:	str	x2, [x0], #8
    5ef4:	ldr	w2, [x1, #8]
    5ef8:	cmp	w2, #0x40
    5efc:	b.ls	5f2c <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x2b4>  // b.plast
    5f00:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    5f04:	add	x1, x26, #0x18
    5f08:	add	x0, x23, #0x18
    5f0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5f10:	ldp	x19, x20, [sp, #16]
    5f14:	mov	x0, x23
    5f18:	ldp	x23, x24, [sp, #48]
    5f1c:	ldp	x25, x26, [sp, #64]
    5f20:	ldp	x27, x28, [sp, #80]
    5f24:	ldp	x29, x30, [sp], #96
    5f28:	ret
    5f2c:	ldr	x1, [x26, #8]
    5f30:	str	x1, [x23, #8]
    5f34:	ldr	w1, [x26, #16]
    5f38:	str	w1, [x23, #16]
    5f3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5f40:	b	5f04 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x28c>
    5f44:	ldp	x19, x20, [sp, #16]
    5f48:	b	5f14 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE+0x29c>

0000000000005f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>:
    5f4c:	stp	x29, x30, [sp, #-64]!
    5f50:	mov	x29, sp
    5f54:	str	x19, [sp, #16]
    5f58:	str	x1, [sp, #40]
    5f5c:	cbz	x1, 5f88 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x3c>
    5f60:	mov	x19, x8
    5f64:	mov	x5, x2
    5f68:	ldrb	w2, [x1, #16]
    5f6c:	cmp	w2, #0x5
    5f70:	b.eq	6030 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xe4>  // b.none
    5f74:	cmp	w2, #0x10
    5f78:	b.hi	5fa8 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x5c>  // b.pmore
    5f7c:	mov	x8, x19
    5f80:	bl	0 <_ZN4llvm15ExecutionEngine16getConstantValueEPKNS_8ConstantE>
    5f84:	b	6038 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xec>
    5f88:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5f8c:	add	x3, x3, #0x0
    5f90:	mov	w2, #0x69                  	// #105
    5f94:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5f98:	add	x1, x1, #0x0
    5f9c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    5fa0:	add	x0, x0, #0x0
    5fa4:	bl	0 <__assert_fail>
    5fa8:	ldr	x2, [x5, #48]
    5fac:	add	x4, x5, #0x28
    5fb0:	cbz	x2, 6028 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xdc>
    5fb4:	mov	x0, x4
    5fb8:	mov	x6, x1
    5fbc:	b	5fc8 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x7c>
    5fc0:	ldr	x2, [x2, #24]
    5fc4:	cbz	x2, 5fe0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x94>
    5fc8:	ldr	x3, [x2, #32]
    5fcc:	cmp	x3, x1
    5fd0:	b.cc	5fc0 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x74>  // b.lo, b.ul, b.last
    5fd4:	mov	x0, x2
    5fd8:	ldr	x2, [x2, #16]
    5fdc:	b	5fc4 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0x78>
    5fe0:	cmp	x0, x4
    5fe4:	b.eq	5ff4 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xa8>  // b.none
    5fe8:	ldr	x1, [x0, #32]
    5fec:	cmp	x1, x6
    5ff0:	b.ls	6018 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xcc>  // b.plast
    5ff4:	add	x1, sp, #0x28
    5ff8:	str	x1, [sp, #56]
    5ffc:	add	x4, sp, #0x30
    6000:	add	x3, sp, #0x38
    6004:	adrp	x2, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6008:	add	x2, x2, #0x0
    600c:	mov	x1, x0
    6010:	add	x0, x5, #0x20
    6014:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6018:	add	x1, x0, #0x28
    601c:	mov	x0, x19
    6020:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6024:	b	6038 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xec>
    6028:	mov	x0, x4
    602c:	b	5ff4 <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE+0xa8>
    6030:	mov	x2, x5
    6034:	bl	9134 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE>
    6038:	mov	x0, x19
    603c:	ldr	x19, [sp, #16]
    6040:	ldp	x29, x30, [sp], #64
    6044:	ret

0000000000006048 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>:
    6048:	stp	x29, x30, [sp, #-192]!
    604c:	mov	x29, sp
    6050:	stp	x19, x20, [sp, #16]
    6054:	stp	x21, x22, [sp, #32]
    6058:	stp	x27, x28, [sp, #80]
    605c:	str	x8, [sp, #128]
    6060:	str	x0, [sp, #96]
    6064:	str	x1, [sp, #136]
    6068:	str	x4, [sp, #104]
    606c:	ldr	x21, [x2]
    6070:	ldr	x19, [x2, #8]
    6074:	ldr	x28, [x3]
    6078:	ldr	x0, [x1]
    607c:	ldrb	w0, [x0, #8]
    6080:	cmp	w0, #0xf
    6084:	b.ne	60b8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x70>  // b.any
    6088:	stp	x25, x26, [sp, #64]
    608c:	cmp	x28, x21
    6090:	b.eq	65a8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x560>  // b.none
    6094:	stp	x23, x24, [sp, #48]
    6098:	mov	x26, #0x0                   	// #0
    609c:	add	x0, sp, #0x90
    60a0:	str	x0, [sp, #112]
    60a4:	ldr	x1, [sp, #96]
    60a8:	add	x27, x1, #0x58
    60ac:	add	x0, sp, #0x98
    60b0:	str	x0, [sp, #120]
    60b4:	b	62bc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x274>
    60b8:	stp	x23, x24, [sp, #48]
    60bc:	stp	x25, x26, [sp, #64]
    60c0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    60c4:	add	x3, x3, #0x0
    60c8:	mov	w2, #0x419                 	// #1049
    60cc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    60d0:	add	x1, x1, #0x0
    60d4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    60d8:	add	x0, x0, #0x0
    60dc:	bl	0 <__assert_fail>
    60e0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    60e4:	add	x3, x3, #0x0
    60e8:	mov	w2, #0x69                  	// #105
    60ec:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    60f0:	add	x1, x1, #0x0
    60f4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    60f8:	add	x0, x0, #0x0
    60fc:	bl	0 <__assert_fail>
    6100:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6104:	add	x3, x3, #0x0
    6108:	mov	w2, #0x108                 	// #264
    610c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6110:	add	x1, x1, #0x0
    6114:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6118:	add	x0, x0, #0x0
    611c:	bl	0 <__assert_fail>
    6120:	ldr	x0, [x20, #24]
    6124:	b	6318 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2d0>
    6128:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    612c:	add	x3, x3, #0x0
    6130:	mov	w2, #0x657                 	// #1623
    6134:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6138:	add	x1, x1, #0x0
    613c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6140:	add	x0, x0, #0x0
    6144:	bl	0 <__assert_fail>
    6148:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    614c:	add	x3, x3, #0x0
    6150:	mov	w2, #0x260                 	// #608
    6154:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6158:	add	x1, x1, #0x0
    615c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6160:	add	x0, x0, #0x0
    6164:	bl	0 <__assert_fail>
    6168:	ldr	x8, [sp, #112]
    616c:	ldr	x2, [sp, #104]
    6170:	ldr	x1, [x21]
    6174:	ldr	x0, [sp, #96]
    6178:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    617c:	ldr	x20, [x21]
    6180:	ldr	x0, [x20]
    6184:	cbz	x0, 6338 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x2f0>
    6188:	ldrb	w1, [x0, #8]
    618c:	cmp	w1, #0xb
    6190:	b.ne	6358 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x310>  // b.any
    6194:	ldr	w0, [x0, #8]
    6198:	lsr	w0, w0, #8
    619c:	cmp	w0, #0x20
    61a0:	b.eq	6378 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x330>  // b.none
    61a4:	cmp	w0, #0x40
    61a8:	b.ne	63d0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x388>  // b.any
    61ac:	ldr	w22, [sp, #160]
    61b0:	cmp	w22, #0x40
    61b4:	b.ls	63f0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3a8>  // b.plast
    61b8:	ldr	x0, [sp, #120]
    61bc:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    61c0:	sub	w22, w22, w0
    61c4:	cmp	w22, #0x40
    61c8:	b.hi	63f8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3b0>  // b.pmore
    61cc:	ldr	x0, [sp, #152]
    61d0:	ldr	x22, [x0]
    61d4:	cbnz	x25, 6418 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3d0>
    61d8:	mov	x1, x20
    61dc:	and	x0, x19, #0xfffffffffffffff8
    61e0:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEPKNS_5ValueE>
    61e4:	mov	x23, x0
    61e8:	mov	x1, x23
    61ec:	mov	x0, x27
    61f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    61f4:	add	x0, x0, #0x7
    61f8:	lsr	x20, x0, #3
    61fc:	and	w24, w1, #0xff
    6200:	mov	x1, x23
    6204:	mov	x0, x27
    6208:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    620c:	mov	w1, w0
    6210:	cbz	w0, 6440 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x3f8>
    6214:	sub	x20, x20, #0x1
    6218:	add	x20, x20, x1
    621c:	udiv	x20, x20, x1
    6220:	mul	x22, x22, x1
    6224:	mul	x22, x20, x22
    6228:	cbnz	w24, 6460 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x418>
    622c:	add	x26, x26, x22
    6230:	ldr	x20, [sp, #168]
    6234:	ldr	x22, [sp, #176]
    6238:	cmp	x20, x22
    623c:	b.eq	6254 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x20c>  // b.none
    6240:	mov	x0, x20
    6244:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6248:	add	x20, x20, #0x30
    624c:	cmp	x22, x20
    6250:	b.ne	6240 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x1f8>  // b.any
    6254:	ldr	x0, [sp, #168]
    6258:	cbz	x0, 6260 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x218>
    625c:	bl	0 <_ZdlPv>
    6260:	ldr	w0, [sp, #160]
    6264:	cmp	w0, #0x40
    6268:	b.ls	6278 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x230>  // b.plast
    626c:	ldr	x0, [sp, #152]
    6270:	cbz	x0, 6278 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x230>
    6274:	bl	0 <_ZdaPv>
    6278:	cbnz	x25, 6480 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x438>
    627c:	ldr	x1, [x21]
    6280:	and	x0, x19, #0xfffffffffffffff8
    6284:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEPKNS_5ValueE>
    6288:	cbz	x0, 64a8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x460>
    628c:	ldrb	w2, [x0, #8]
    6290:	sub	w1, w2, #0xe
    6294:	and	w1, w1, #0xfffffffd
    6298:	tst	w1, #0xff
    629c:	b.ne	64e8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4a0>  // b.any
    62a0:	ldr	x19, [x0, #24]
    62a4:	tst	x19, #0x7
    62a8:	b.ne	64c8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x480>  // b.any
    62ac:	orr	x19, x19, #0x4
    62b0:	add	x21, x21, #0x18
    62b4:	cmp	x28, x21
    62b8:	b.eq	6528 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4e0>  // b.none
    62bc:	ubfx	x25, x19, #2, #1
    62c0:	tst	w19, #0x4
    62c4:	b.ne	6168 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x120>  // b.any
    62c8:	ands	x1, x19, #0xfffffffffffffff8
    62cc:	b.eq	6168 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x120>  // b.none
    62d0:	mov	x0, x27
    62d4:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
    62d8:	mov	x22, x0
    62dc:	ldr	x20, [x21]
    62e0:	cbz	x20, 60e0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x98>
    62e4:	ldrb	w0, [x20, #16]
    62e8:	cmp	w0, #0xd
    62ec:	b.ne	6100 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xb8>  // b.any
    62f0:	ldr	w23, [x20, #32]
    62f4:	cmp	w23, #0x40
    62f8:	b.ls	6120 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xd8>  // b.plast
    62fc:	add	x0, x20, #0x18
    6300:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    6304:	sub	w23, w23, w0
    6308:	cmp	w23, #0x40
    630c:	b.hi	6128 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0xe0>  // b.pmore
    6310:	ldr	x0, [x20, #24]
    6314:	ldr	x0, [x0]
    6318:	ldr	w1, [x22, #12]
    631c:	ubfx	x1, x1, #0, #31
    6320:	cmp	w1, w0
    6324:	b.ls	6148 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x100>  // b.plast
    6328:	add	x0, x22, w0, uxtw #3
    632c:	ldr	x0, [x0, #16]
    6330:	add	x26, x26, x0
    6334:	b	627c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x234>
    6338:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    633c:	add	x3, x3, #0x0
    6340:	mov	w2, #0x69                  	// #105
    6344:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6348:	add	x1, x1, #0x0
    634c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6350:	add	x0, x0, #0x0
    6354:	bl	0 <__assert_fail>
    6358:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    635c:	add	x3, x3, #0x0
    6360:	mov	w2, #0x108                 	// #264
    6364:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6368:	add	x1, x1, #0x0
    636c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6370:	add	x0, x0, #0x0
    6374:	bl	0 <__assert_fail>
    6378:	ldr	w22, [sp, #160]
    637c:	cmp	w22, #0x40
    6380:	b.ls	63a8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x360>  // b.plast
    6384:	ldr	x0, [sp, #120]
    6388:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    638c:	sub	w22, w22, w0
    6390:	cmp	w22, #0x40
    6394:	b.hi	63b0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x368>  // b.pmore
    6398:	ldr	x0, [sp, #152]
    639c:	ldr	x22, [x0]
    63a0:	sxtw	x22, w22
    63a4:	b	61d4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x18c>
    63a8:	ldr	x22, [sp, #152]
    63ac:	b	63a0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x358>
    63b0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    63b4:	add	x3, x3, #0x0
    63b8:	mov	w2, #0x657                 	// #1623
    63bc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    63c0:	add	x1, x1, #0x0
    63c4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    63c8:	add	x0, x0, #0x0
    63cc:	bl	0 <__assert_fail>
    63d0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    63d4:	add	x3, x3, #0x0
    63d8:	mov	w2, #0x430                 	// #1072
    63dc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    63e0:	add	x1, x1, #0x0
    63e4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    63e8:	add	x0, x0, #0x0
    63ec:	bl	0 <__assert_fail>
    63f0:	ldr	x22, [sp, #152]
    63f4:	b	61d4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x18c>
    63f8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    63fc:	add	x3, x3, #0x0
    6400:	mov	w2, #0x657                 	// #1623
    6404:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6408:	add	x1, x1, #0x0
    640c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6410:	add	x0, x0, #0x0
    6414:	bl	0 <__assert_fail>
    6418:	ands	x23, x19, #0xfffffffffffffff8
    641c:	b.ne	61e8 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x1a0>  // b.any
    6420:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6424:	add	x3, x3, #0x0
    6428:	mov	w2, #0xc3                  	// #195
    642c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6430:	add	x1, x1, #0x0
    6434:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6438:	add	x0, x0, #0x0
    643c:	bl	0 <__assert_fail>
    6440:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6444:	add	x3, x3, #0x0
    6448:	mov	w2, #0xc7                  	// #199
    644c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6450:	add	x1, x1, #0x0
    6454:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6458:	add	x0, x0, #0x0
    645c:	bl	0 <__assert_fail>
    6460:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6464:	add	x3, x3, #0x0
    6468:	mov	w2, #0x7d                  	// #125
    646c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6470:	add	x1, x1, #0x0
    6474:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6478:	add	x0, x0, #0x0
    647c:	bl	0 <__assert_fail>
    6480:	ands	x0, x19, #0xfffffffffffffff8
    6484:	b.ne	628c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x244>  // b.any
    6488:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    648c:	add	x3, x3, #0x0
    6490:	mov	w2, #0xc3                  	// #195
    6494:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6498:	add	x1, x1, #0x0
    649c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    64a0:	add	x0, x0, #0x0
    64a4:	bl	0 <__assert_fail>
    64a8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    64ac:	add	x3, x3, #0x0
    64b0:	mov	w2, #0x69                  	// #105
    64b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    64b8:	add	x1, x1, #0x0
    64bc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    64c0:	add	x0, x0, #0x0
    64c4:	bl	0 <__assert_fail>
    64c8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    64cc:	add	x3, x3, #0x0
    64d0:	mov	w2, #0xb2                  	// #178
    64d4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    64d8:	add	x1, x1, #0x0
    64dc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    64e0:	add	x0, x0, #0x0
    64e4:	bl	0 <__assert_fail>
    64e8:	mov	x19, #0x0                   	// #0
    64ec:	cmp	w2, #0xd
    64f0:	b.eq	64fc <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4b4>  // b.none
    64f4:	and	x19, x19, #0xfffffffffffffffb
    64f8:	b	62b0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x268>
    64fc:	mov	x19, x0
    6500:	tst	x0, #0x7
    6504:	b.eq	64f4 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4ac>  // b.none
    6508:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    650c:	add	x3, x3, #0x0
    6510:	mov	w2, #0xb2                  	// #178
    6514:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6518:	add	x1, x1, #0x0
    651c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6520:	add	x0, x0, #0x0
    6524:	bl	0 <__assert_fail>
    6528:	ldp	x23, x24, [sp, #48]
    652c:	mov	w0, #0x1                   	// #1
    6530:	ldr	x20, [sp, #128]
    6534:	str	w0, [x20, #16]
    6538:	str	xzr, [x20, #8]
    653c:	str	xzr, [x20, #24]
    6540:	str	xzr, [x20, #32]
    6544:	str	xzr, [x20, #40]
    6548:	str	wzr, [x20]
    654c:	str	wzr, [x20, #4]
    6550:	add	x19, sp, #0x90
    6554:	mov	x8, x19
    6558:	ldr	x2, [sp, #104]
    655c:	ldr	x1, [sp, #136]
    6560:	ldr	x0, [sp, #96]
    6564:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6568:	ldr	x0, [sp, #144]
    656c:	add	x0, x0, x26
    6570:	str	x0, [x20]
    6574:	mov	x0, x19
    6578:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    657c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    6580:	ldr	x0, [x0]
    6584:	ldrb	w0, [x0]
    6588:	cbnz	w0, 65b0 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x568>
    658c:	ldr	x0, [sp, #128]
    6590:	ldp	x25, x26, [sp, #64]
    6594:	ldp	x19, x20, [sp, #16]
    6598:	ldp	x21, x22, [sp, #32]
    659c:	ldp	x27, x28, [sp, #80]
    65a0:	ldp	x29, x30, [sp], #192
    65a4:	ret
    65a8:	mov	x26, #0x0                   	// #0
    65ac:	b	652c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x4e4>
    65b0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    65b4:	add	x0, x0, #0x0
    65b8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    65bc:	and	w0, w0, #0xff
    65c0:	cbz	w0, 658c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x544>
    65c4:	bl	0 <_ZN4llvm4dbgsEv>
    65c8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    65cc:	add	x1, x1, #0x0
    65d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    65d4:	mov	x1, x26
    65d8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    65dc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    65e0:	add	x1, x1, #0x0
    65e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    65e8:	b	658c <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE+0x544>

00000000000065ec <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE>:
    65ec:	stp	x29, x30, [sp, #-144]!
    65f0:	mov	x29, sp
    65f4:	stp	x19, x20, [sp, #16]
    65f8:	stp	x21, x22, [sp, #32]
    65fc:	mov	x20, x0
    6600:	mov	x19, x1
    6604:	ldr	x21, [x0, #704]
    6608:	sub	x21, x21, #0x80
    660c:	add	x22, sp, #0x60
    6610:	mov	x8, x22
    6614:	mov	x2, x21
    6618:	ldur	x1, [x1, #-48]
    661c:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6620:	add	x8, sp, #0x30
    6624:	mov	x2, x21
    6628:	ldur	x1, [x19, #-24]
    662c:	mov	x0, x20
    6630:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6634:	ldur	x0, [x19, #-48]
    6638:	ldr	x3, [x0]
    663c:	ldr	x2, [sp, #48]
    6640:	mov	x1, x22
    6644:	mov	x0, x20
    6648:	bl	0 <_ZN4llvm15ExecutionEngine18StoreValueToMemoryERKNS_12GenericValueEPS1_PNS_4TypeE>
    664c:	ldrh	w0, [x19, #18]
    6650:	tbz	w0, #0, 6660 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x74>
    6654:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6658:	ldrb	w0, [x0]
    665c:	cbnz	w0, 6700 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x114>
    6660:	ldr	x19, [sp, #72]
    6664:	ldr	x20, [sp, #80]
    6668:	cmp	x19, x20
    666c:	b.eq	6684 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x98>  // b.none
    6670:	mov	x0, x19
    6674:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6678:	add	x19, x19, #0x30
    667c:	cmp	x20, x19
    6680:	b.ne	6670 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x84>  // b.any
    6684:	ldr	x0, [sp, #72]
    6688:	cbz	x0, 6690 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xa4>
    668c:	bl	0 <_ZdlPv>
    6690:	ldr	w0, [sp, #64]
    6694:	cmp	w0, #0x40
    6698:	b.ls	66a8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xbc>  // b.plast
    669c:	ldr	x0, [sp, #56]
    66a0:	cbz	x0, 66a8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xbc>
    66a4:	bl	0 <_ZdaPv>
    66a8:	ldr	x19, [sp, #120]
    66ac:	ldr	x20, [sp, #128]
    66b0:	cmp	x19, x20
    66b4:	b.eq	66cc <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xe0>  // b.none
    66b8:	mov	x0, x19
    66bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    66c0:	add	x19, x19, #0x30
    66c4:	cmp	x20, x19
    66c8:	b.ne	66b8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xcc>  // b.any
    66cc:	ldr	x0, [sp, #120]
    66d0:	cbz	x0, 66d8 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0xec>
    66d4:	bl	0 <_ZdlPv>
    66d8:	ldr	w0, [sp, #112]
    66dc:	cmp	w0, #0x40
    66e0:	b.ls	66f0 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x104>  // b.plast
    66e4:	ldr	x0, [sp, #104]
    66e8:	cbz	x0, 66f0 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x104>
    66ec:	bl	0 <_ZdaPv>
    66f0:	ldp	x19, x20, [sp, #16]
    66f4:	ldp	x21, x22, [sp, #32]
    66f8:	ldp	x29, x30, [sp], #144
    66fc:	ret
    6700:	bl	0 <_ZN4llvm4dbgsEv>
    6704:	ldr	x2, [x0, #24]
    6708:	ldr	x1, [x0, #16]
    670c:	sub	x1, x1, x2
    6710:	cmp	x1, #0xf
    6714:	b.ls	6738 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x14c>  // b.plast
    6718:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    671c:	add	x1, x1, #0x0
    6720:	ldp	x4, x5, [x1]
    6724:	stp	x4, x5, [x2]
    6728:	ldr	x1, [x0, #24]
    672c:	add	x1, x1, #0x10
    6730:	str	x1, [x0, #24]
    6734:	b	6748 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x15c>
    6738:	mov	x2, #0x10                  	// #16
    673c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6740:	add	x1, x1, #0x0
    6744:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    6748:	mov	w2, #0x0                   	// #0
    674c:	mov	x1, x0
    6750:	mov	x0, x19
    6754:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    6758:	b	6660 <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE+0x74>

000000000000675c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    675c:	stp	x29, x30, [sp, #-160]!
    6760:	mov	x29, sp
    6764:	stp	x19, x20, [sp, #16]
    6768:	stp	x21, x22, [sp, #32]
    676c:	mov	x21, x8
    6770:	mov	x20, x1
    6774:	mov	x19, x2
    6778:	mov	x2, x3
    677c:	mov	w3, #0x1                   	// #1
    6780:	str	w3, [x8, #16]
    6784:	str	xzr, [x8, #8]
    6788:	str	xzr, [x8, #24]
    678c:	str	xzr, [x8, #32]
    6790:	str	xzr, [x8, #40]
    6794:	str	wzr, [x8]
    6798:	str	wzr, [x8, #4]
    679c:	add	x8, sp, #0x50
    67a0:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    67a4:	ldr	x0, [x20]
    67a8:	ldrb	w0, [x0, #8]
    67ac:	cmp	w0, #0x10
    67b0:	b.ne	69ac <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x250>  // b.any
    67b4:	stp	x23, x24, [sp, #48]
    67b8:	stp	x25, x26, [sp, #64]
    67bc:	ldrb	w0, [x19, #8]
    67c0:	cmp	w0, #0x10
    67c4:	b.eq	6838 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xdc>  // b.none
    67c8:	ldrb	w0, [x19, #8]
    67cc:	cmp	w0, #0xb
    67d0:	b.ne	6864 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x108>  // b.any
    67d4:	ldr	w24, [x19, #8]
    67d8:	lsr	w24, w24, #8
    67dc:	ldr	x20, [sp, #112]
    67e0:	ldr	x0, [sp, #104]
    67e4:	sub	x20, x20, x0
    67e8:	asr	x20, x20, #4
    67ec:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    67f0:	movk	x2, #0xaaab
    67f4:	mul	x20, x20, x2
    67f8:	and	x1, x20, #0xffffffff
    67fc:	ldr	x25, [x21, #32]
    6800:	ldr	x26, [x21, #24]
    6804:	sub	x0, x25, x26
    6808:	asr	x0, x0, #4
    680c:	mul	x0, x0, x2
    6810:	cmp	x0, w20, uxtw
    6814:	b.cc	6884 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x128>  // b.lo, b.ul, b.last
    6818:	cmp	x1, x0
    681c:	b.cs	6890 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x134>  // b.hs, b.nlast
    6820:	add	x1, x1, x1, lsl #1
    6824:	add	x26, x26, x1, lsl #4
    6828:	cmp	x25, x26
    682c:	b.eq	6890 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x134>  // b.none
    6830:	mov	x22, x26
    6834:	b	68cc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x170>
    6838:	ldr	x0, [x19, #16]
    683c:	ldr	x19, [x0]
    6840:	cbnz	x19, 67c8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c>
    6844:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6848:	add	x3, x3, #0x0
    684c:	mov	w2, #0x69                  	// #105
    6850:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6854:	add	x1, x1, #0x0
    6858:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    685c:	add	x0, x0, #0x0
    6860:	bl	0 <__assert_fail>
    6864:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6868:	add	x3, x3, #0x0
    686c:	mov	w2, #0x108                 	// #264
    6870:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6874:	add	x1, x1, #0x0
    6878:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    687c:	add	x0, x0, #0x0
    6880:	bl	0 <__assert_fail>
    6884:	sub	x1, x1, x0
    6888:	add	x0, x21, #0x18
    688c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6890:	cbz	w20, 68b0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x154>
    6894:	sub	w20, w20, #0x1
    6898:	add	x22, x20, #0x1
    689c:	add	x22, x22, x22, lsl #1
    68a0:	lsl	x22, x22, #4
    68a4:	mov	x20, #0x0                   	// #0
    68a8:	add	x23, sp, #0x80
    68ac:	b	695c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x200>
    68b0:	ldp	x23, x24, [sp, #48]
    68b4:	ldp	x25, x26, [sp, #64]
    68b8:	b	69fc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a0>
    68bc:	bl	0 <_ZdaPv>
    68c0:	add	x22, x22, #0x30
    68c4:	cmp	x25, x22
    68c8:	b.eq	6914 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b8>  // b.none
    68cc:	ldr	x19, [x22, #24]
    68d0:	ldr	x23, [x22, #32]
    68d4:	cmp	x19, x23
    68d8:	b.eq	68f0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x194>  // b.none
    68dc:	mov	x0, x19
    68e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    68e4:	add	x19, x19, #0x30
    68e8:	cmp	x23, x19
    68ec:	b.ne	68dc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x180>  // b.any
    68f0:	ldr	x0, [x22, #24]
    68f4:	cbz	x0, 68fc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a0>
    68f8:	bl	0 <_ZdlPv>
    68fc:	ldr	w0, [x22, #16]
    6900:	cmp	w0, #0x40
    6904:	b.ls	68c0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>  // b.plast
    6908:	ldr	x0, [x22, #8]
    690c:	cbnz	x0, 68bc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x160>
    6910:	b	68c0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>
    6914:	str	x26, [x21, #32]
    6918:	b	6890 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x134>
    691c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6920:	add	x3, x3, #0x0
    6924:	mov	w2, #0x302                 	// #770
    6928:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    692c:	add	x1, x1, #0x0
    6930:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6934:	add	x0, x0, #0x0
    6938:	bl	0 <__assert_fail>
    693c:	bl	0 <_ZdaPv>
    6940:	ldr	x0, [sp, #128]
    6944:	str	x0, [x19, #8]!
    6948:	ldr	w0, [sp, #136]
    694c:	str	w0, [x19, #8]
    6950:	add	x20, x20, #0x30
    6954:	cmp	x22, x20
    6958:	b.eq	69a0 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x244>  // b.none
    695c:	ldr	x19, [x21, #24]
    6960:	add	x19, x19, x20
    6964:	ldr	x0, [sp, #104]
    6968:	add	x0, x0, x20
    696c:	mov	x8, x23
    6970:	mov	w1, w24
    6974:	add	x0, x0, #0x8
    6978:	bl	0 <_ZNK4llvm5APInt5truncEj>
    697c:	add	x0, x19, #0x8
    6980:	cmp	x23, x0
    6984:	b.eq	691c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1c0>  // b.none
    6988:	ldr	w0, [x19, #16]
    698c:	cmp	w0, #0x40
    6990:	b.ls	6940 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e4>  // b.plast
    6994:	ldr	x0, [x19, #8]
    6998:	cbnz	x0, 693c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>
    699c:	b	6940 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e4>
    69a0:	ldp	x23, x24, [sp, #48]
    69a4:	ldp	x25, x26, [sp, #64]
    69a8:	b	69fc <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a0>
    69ac:	cbz	x19, 6a58 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2fc>
    69b0:	ldrb	w0, [x19, #8]
    69b4:	cmp	w0, #0xb
    69b8:	b.ne	6a80 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x324>  // b.any
    69bc:	ldr	w1, [x19, #8]
    69c0:	add	x8, sp, #0x90
    69c4:	lsr	w1, w1, #8
    69c8:	add	x0, sp, #0x58
    69cc:	bl	0 <_ZNK4llvm5APInt5truncEj>
    69d0:	ldr	w0, [x21, #16]
    69d4:	cmp	w0, #0x40
    69d8:	b.ls	69e8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x28c>  // b.plast
    69dc:	ldr	x0, [x21, #8]
    69e0:	cbz	x0, 69e8 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x28c>
    69e4:	bl	0 <_ZdaPv>
    69e8:	mov	x0, x21
    69ec:	ldr	x1, [sp, #144]
    69f0:	str	x1, [x0, #8]!
    69f4:	ldr	w1, [sp, #152]
    69f8:	str	w1, [x0, #8]
    69fc:	ldr	x19, [sp, #104]
    6a00:	ldr	x20, [sp, #112]
    6a04:	cmp	x19, x20
    6a08:	b.eq	6a20 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2c4>  // b.none
    6a0c:	mov	x0, x19
    6a10:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a14:	add	x19, x19, #0x30
    6a18:	cmp	x20, x19
    6a1c:	b.ne	6a0c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2b0>  // b.any
    6a20:	ldr	x0, [sp, #104]
    6a24:	cbz	x0, 6a2c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2d0>
    6a28:	bl	0 <_ZdlPv>
    6a2c:	ldr	w0, [sp, #96]
    6a30:	cmp	w0, #0x40
    6a34:	b.ls	6a44 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e8>  // b.plast
    6a38:	ldr	x0, [sp, #88]
    6a3c:	cbz	x0, 6a44 <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e8>
    6a40:	bl	0 <_ZdaPv>
    6a44:	mov	x0, x21
    6a48:	ldp	x19, x20, [sp, #16]
    6a4c:	ldp	x21, x22, [sp, #32]
    6a50:	ldp	x29, x30, [sp], #160
    6a54:	ret
    6a58:	stp	x23, x24, [sp, #48]
    6a5c:	stp	x25, x26, [sp, #64]
    6a60:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a64:	add	x3, x3, #0x0
    6a68:	mov	w2, #0x69                  	// #105
    6a6c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a70:	add	x1, x1, #0x0
    6a74:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a78:	add	x0, x0, #0x0
    6a7c:	bl	0 <__assert_fail>
    6a80:	stp	x23, x24, [sp, #48]
    6a84:	stp	x25, x26, [sp, #64]
    6a88:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a8c:	add	x3, x3, #0x0
    6a90:	mov	w2, #0x108                 	// #264
    6a94:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6a98:	add	x1, x1, #0x0
    6a9c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6aa0:	add	x0, x0, #0x0
    6aa4:	bl	0 <__assert_fail>

0000000000006aa8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    6aa8:	stp	x29, x30, [sp, #-160]!
    6aac:	mov	x29, sp
    6ab0:	stp	x19, x20, [sp, #16]
    6ab4:	stp	x21, x22, [sp, #32]
    6ab8:	mov	x21, x8
    6abc:	mov	x19, x2
    6ac0:	mov	x2, x3
    6ac4:	ldr	x20, [x1]
    6ac8:	mov	w3, #0x1                   	// #1
    6acc:	str	w3, [x8, #16]
    6ad0:	str	xzr, [x8, #8]
    6ad4:	str	xzr, [x8, #24]
    6ad8:	str	xzr, [x8, #32]
    6adc:	str	xzr, [x8, #40]
    6ae0:	str	wzr, [x8]
    6ae4:	str	wzr, [x8, #4]
    6ae8:	add	x8, sp, #0x50
    6aec:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6af0:	ldrb	w0, [x20, #8]
    6af4:	cmp	w0, #0x10
    6af8:	b.ne	6cf4 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>  // b.any
    6afc:	stp	x23, x24, [sp, #48]
    6b00:	stp	x25, x26, [sp, #64]
    6b04:	ldrb	w0, [x19, #8]
    6b08:	cmp	w0, #0x10
    6b0c:	b.eq	6b80 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd8>  // b.none
    6b10:	ldrb	w0, [x19, #8]
    6b14:	cmp	w0, #0xb
    6b18:	b.ne	6bac <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>  // b.any
    6b1c:	ldr	w24, [x19, #8]
    6b20:	lsr	w24, w24, #8
    6b24:	ldr	x20, [sp, #112]
    6b28:	ldr	x0, [sp, #104]
    6b2c:	sub	x20, x20, x0
    6b30:	asr	x20, x20, #4
    6b34:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6b38:	movk	x2, #0xaaab
    6b3c:	mul	x20, x20, x2
    6b40:	and	x1, x20, #0xffffffff
    6b44:	ldr	x25, [x21, #32]
    6b48:	ldr	x26, [x21, #24]
    6b4c:	sub	x0, x25, x26
    6b50:	asr	x0, x0, #4
    6b54:	mul	x0, x0, x2
    6b58:	cmp	x0, w20, uxtw
    6b5c:	b.cc	6bcc <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x124>  // b.lo, b.ul, b.last
    6b60:	cmp	x1, x0
    6b64:	b.cs	6bd8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>  // b.hs, b.nlast
    6b68:	add	x1, x1, x1, lsl #1
    6b6c:	add	x26, x26, x1, lsl #4
    6b70:	cmp	x25, x26
    6b74:	b.eq	6bd8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>  // b.none
    6b78:	mov	x22, x26
    6b7c:	b	6c14 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>
    6b80:	ldr	x0, [x19, #16]
    6b84:	ldr	x19, [x0]
    6b88:	cbnz	x19, 6b10 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x68>
    6b8c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6b90:	add	x3, x3, #0x0
    6b94:	mov	w2, #0x69                  	// #105
    6b98:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6b9c:	add	x1, x1, #0x0
    6ba0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ba4:	add	x0, x0, #0x0
    6ba8:	bl	0 <__assert_fail>
    6bac:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6bb0:	add	x3, x3, #0x0
    6bb4:	mov	w2, #0x108                 	// #264
    6bb8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6bbc:	add	x1, x1, #0x0
    6bc0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6bc4:	add	x0, x0, #0x0
    6bc8:	bl	0 <__assert_fail>
    6bcc:	sub	x1, x1, x0
    6bd0:	add	x0, x21, #0x18
    6bd4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6bd8:	cbz	w20, 6bf8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x150>
    6bdc:	sub	w20, w20, #0x1
    6be0:	add	x22, x20, #0x1
    6be4:	add	x22, x22, x22, lsl #1
    6be8:	lsl	x22, x22, #4
    6bec:	mov	x20, #0x0                   	// #0
    6bf0:	add	x23, sp, #0x80
    6bf4:	b	6ca4 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1fc>
    6bf8:	ldp	x23, x24, [sp, #48]
    6bfc:	ldp	x25, x26, [sp, #64]
    6c00:	b	6d44 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x29c>
    6c04:	bl	0 <_ZdaPv>
    6c08:	add	x22, x22, #0x30
    6c0c:	cmp	x25, x22
    6c10:	b.eq	6c5c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b4>  // b.none
    6c14:	ldr	x19, [x22, #24]
    6c18:	ldr	x23, [x22, #32]
    6c1c:	cmp	x19, x23
    6c20:	b.eq	6c38 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x190>  // b.none
    6c24:	mov	x0, x19
    6c28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c2c:	add	x19, x19, #0x30
    6c30:	cmp	x23, x19
    6c34:	b.ne	6c24 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>  // b.any
    6c38:	ldr	x0, [x22, #24]
    6c3c:	cbz	x0, 6c44 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x19c>
    6c40:	bl	0 <_ZdlPv>
    6c44:	ldr	w0, [x22, #16]
    6c48:	cmp	w0, #0x40
    6c4c:	b.ls	6c08 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x160>  // b.plast
    6c50:	ldr	x0, [x22, #8]
    6c54:	cbnz	x0, 6c04 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x15c>
    6c58:	b	6c08 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x160>
    6c5c:	str	x26, [x21, #32]
    6c60:	b	6bd8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    6c64:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c68:	add	x3, x3, #0x0
    6c6c:	mov	w2, #0x302                 	// #770
    6c70:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c74:	add	x1, x1, #0x0
    6c78:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6c7c:	add	x0, x0, #0x0
    6c80:	bl	0 <__assert_fail>
    6c84:	bl	0 <_ZdaPv>
    6c88:	ldr	x0, [sp, #128]
    6c8c:	str	x0, [x19, #8]!
    6c90:	ldr	w0, [sp, #136]
    6c94:	str	w0, [x19, #8]
    6c98:	add	x20, x20, #0x30
    6c9c:	cmp	x22, x20
    6ca0:	b.eq	6ce8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x240>  // b.none
    6ca4:	ldr	x19, [x21, #24]
    6ca8:	add	x19, x19, x20
    6cac:	ldr	x0, [sp, #104]
    6cb0:	add	x0, x0, x20
    6cb4:	mov	x8, x23
    6cb8:	mov	w1, w24
    6cbc:	add	x0, x0, #0x8
    6cc0:	bl	0 <_ZNK4llvm5APInt4sextEj>
    6cc4:	add	x0, x19, #0x8
    6cc8:	cmp	x23, x0
    6ccc:	b.eq	6c64 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1bc>  // b.none
    6cd0:	ldr	w0, [x19, #16]
    6cd4:	cmp	w0, #0x40
    6cd8:	b.ls	6c88 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>  // b.plast
    6cdc:	ldr	x0, [x19, #8]
    6ce0:	cbnz	x0, 6c84 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1dc>
    6ce4:	b	6c88 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>
    6ce8:	ldp	x23, x24, [sp, #48]
    6cec:	ldp	x25, x26, [sp, #64]
    6cf0:	b	6d44 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x29c>
    6cf4:	cbz	x19, 6da0 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>
    6cf8:	ldrb	w0, [x19, #8]
    6cfc:	cmp	w0, #0xb
    6d00:	b.ne	6dc8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x320>  // b.any
    6d04:	ldr	w1, [x19, #8]
    6d08:	add	x8, sp, #0x90
    6d0c:	lsr	w1, w1, #8
    6d10:	add	x0, sp, #0x58
    6d14:	bl	0 <_ZNK4llvm5APInt4sextEj>
    6d18:	ldr	w0, [x21, #16]
    6d1c:	cmp	w0, #0x40
    6d20:	b.ls	6d30 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x288>  // b.plast
    6d24:	ldr	x0, [x21, #8]
    6d28:	cbz	x0, 6d30 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x288>
    6d2c:	bl	0 <_ZdaPv>
    6d30:	mov	x0, x21
    6d34:	ldr	x1, [sp, #144]
    6d38:	str	x1, [x0, #8]!
    6d3c:	ldr	w1, [sp, #152]
    6d40:	str	w1, [x0, #8]
    6d44:	ldr	x19, [sp, #104]
    6d48:	ldr	x20, [sp, #112]
    6d4c:	cmp	x19, x20
    6d50:	b.eq	6d68 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2c0>  // b.none
    6d54:	mov	x0, x19
    6d58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6d5c:	add	x19, x19, #0x30
    6d60:	cmp	x20, x19
    6d64:	b.ne	6d54 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ac>  // b.any
    6d68:	ldr	x0, [sp, #104]
    6d6c:	cbz	x0, 6d74 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>
    6d70:	bl	0 <_ZdlPv>
    6d74:	ldr	w0, [sp, #96]
    6d78:	cmp	w0, #0x40
    6d7c:	b.ls	6d8c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e4>  // b.plast
    6d80:	ldr	x0, [sp, #88]
    6d84:	cbz	x0, 6d8c <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e4>
    6d88:	bl	0 <_ZdaPv>
    6d8c:	mov	x0, x21
    6d90:	ldp	x19, x20, [sp, #16]
    6d94:	ldp	x21, x22, [sp, #32]
    6d98:	ldp	x29, x30, [sp], #160
    6d9c:	ret
    6da0:	stp	x23, x24, [sp, #48]
    6da4:	stp	x25, x26, [sp, #64]
    6da8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6dac:	add	x3, x3, #0x0
    6db0:	mov	w2, #0x69                  	// #105
    6db4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6db8:	add	x1, x1, #0x0
    6dbc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6dc0:	add	x0, x0, #0x0
    6dc4:	bl	0 <__assert_fail>
    6dc8:	stp	x23, x24, [sp, #48]
    6dcc:	stp	x25, x26, [sp, #64]
    6dd0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6dd4:	add	x3, x3, #0x0
    6dd8:	mov	w2, #0x108                 	// #264
    6ddc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6de0:	add	x1, x1, #0x0
    6de4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6de8:	add	x0, x0, #0x0
    6dec:	bl	0 <__assert_fail>

0000000000006df0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    6df0:	stp	x29, x30, [sp, #-160]!
    6df4:	mov	x29, sp
    6df8:	stp	x19, x20, [sp, #16]
    6dfc:	stp	x21, x22, [sp, #32]
    6e00:	mov	x21, x8
    6e04:	mov	x19, x2
    6e08:	mov	x2, x3
    6e0c:	ldr	x20, [x1]
    6e10:	mov	w3, #0x1                   	// #1
    6e14:	str	w3, [x8, #16]
    6e18:	str	xzr, [x8, #8]
    6e1c:	str	xzr, [x8, #24]
    6e20:	str	xzr, [x8, #32]
    6e24:	str	xzr, [x8, #40]
    6e28:	str	wzr, [x8]
    6e2c:	str	wzr, [x8, #4]
    6e30:	add	x8, sp, #0x50
    6e34:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    6e38:	ldrb	w0, [x20, #8]
    6e3c:	cmp	w0, #0x10
    6e40:	b.ne	703c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x24c>  // b.any
    6e44:	stp	x23, x24, [sp, #48]
    6e48:	stp	x25, x26, [sp, #64]
    6e4c:	ldrb	w0, [x19, #8]
    6e50:	cmp	w0, #0x10
    6e54:	b.eq	6ec8 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd8>  // b.none
    6e58:	ldrb	w0, [x19, #8]
    6e5c:	cmp	w0, #0xb
    6e60:	b.ne	6ef4 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x104>  // b.any
    6e64:	ldr	w24, [x19, #8]
    6e68:	lsr	w24, w24, #8
    6e6c:	ldr	x20, [sp, #112]
    6e70:	ldr	x0, [sp, #104]
    6e74:	sub	x20, x20, x0
    6e78:	asr	x20, x20, #4
    6e7c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6e80:	movk	x2, #0xaaab
    6e84:	mul	x20, x20, x2
    6e88:	and	x1, x20, #0xffffffff
    6e8c:	ldr	x25, [x21, #32]
    6e90:	ldr	x26, [x21, #24]
    6e94:	sub	x0, x25, x26
    6e98:	asr	x0, x0, #4
    6e9c:	mul	x0, x0, x2
    6ea0:	cmp	x0, w20, uxtw
    6ea4:	b.cc	6f14 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x124>  // b.lo, b.ul, b.last
    6ea8:	cmp	x1, x0
    6eac:	b.cs	6f20 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>  // b.hs, b.nlast
    6eb0:	add	x1, x1, x1, lsl #1
    6eb4:	add	x26, x26, x1, lsl #4
    6eb8:	cmp	x25, x26
    6ebc:	b.eq	6f20 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>  // b.none
    6ec0:	mov	x22, x26
    6ec4:	b	6f5c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>
    6ec8:	ldr	x0, [x19, #16]
    6ecc:	ldr	x19, [x0]
    6ed0:	cbnz	x19, 6e58 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x68>
    6ed4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ed8:	add	x3, x3, #0x0
    6edc:	mov	w2, #0x69                  	// #105
    6ee0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ee4:	add	x1, x1, #0x0
    6ee8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6eec:	add	x0, x0, #0x0
    6ef0:	bl	0 <__assert_fail>
    6ef4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6ef8:	add	x3, x3, #0x0
    6efc:	mov	w2, #0x108                 	// #264
    6f00:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6f04:	add	x1, x1, #0x0
    6f08:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6f0c:	add	x0, x0, #0x0
    6f10:	bl	0 <__assert_fail>
    6f14:	sub	x1, x1, x0
    6f18:	add	x0, x21, #0x18
    6f1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6f20:	cbz	w20, 6f40 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x150>
    6f24:	sub	w20, w20, #0x1
    6f28:	add	x22, x20, #0x1
    6f2c:	add	x22, x22, x22, lsl #1
    6f30:	lsl	x22, x22, #4
    6f34:	mov	x20, #0x0                   	// #0
    6f38:	add	x23, sp, #0x80
    6f3c:	b	6fec <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1fc>
    6f40:	ldp	x23, x24, [sp, #48]
    6f44:	ldp	x25, x26, [sp, #64]
    6f48:	b	708c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x29c>
    6f4c:	bl	0 <_ZdaPv>
    6f50:	add	x22, x22, #0x30
    6f54:	cmp	x25, x22
    6f58:	b.eq	6fa4 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b4>  // b.none
    6f5c:	ldr	x19, [x22, #24]
    6f60:	ldr	x23, [x22, #32]
    6f64:	cmp	x19, x23
    6f68:	b.eq	6f80 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x190>  // b.none
    6f6c:	mov	x0, x19
    6f70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6f74:	add	x19, x19, #0x30
    6f78:	cmp	x23, x19
    6f7c:	b.ne	6f6c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>  // b.any
    6f80:	ldr	x0, [x22, #24]
    6f84:	cbz	x0, 6f8c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x19c>
    6f88:	bl	0 <_ZdlPv>
    6f8c:	ldr	w0, [x22, #16]
    6f90:	cmp	w0, #0x40
    6f94:	b.ls	6f50 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x160>  // b.plast
    6f98:	ldr	x0, [x22, #8]
    6f9c:	cbnz	x0, 6f4c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x15c>
    6fa0:	b	6f50 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x160>
    6fa4:	str	x26, [x21, #32]
    6fa8:	b	6f20 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x130>
    6fac:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6fb0:	add	x3, x3, #0x0
    6fb4:	mov	w2, #0x302                 	// #770
    6fb8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6fbc:	add	x1, x1, #0x0
    6fc0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    6fc4:	add	x0, x0, #0x0
    6fc8:	bl	0 <__assert_fail>
    6fcc:	bl	0 <_ZdaPv>
    6fd0:	ldr	x0, [sp, #128]
    6fd4:	str	x0, [x19, #8]!
    6fd8:	ldr	w0, [sp, #136]
    6fdc:	str	w0, [x19, #8]
    6fe0:	add	x20, x20, #0x30
    6fe4:	cmp	x22, x20
    6fe8:	b.eq	7030 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x240>  // b.none
    6fec:	ldr	x19, [x21, #24]
    6ff0:	add	x19, x19, x20
    6ff4:	ldr	x0, [sp, #104]
    6ff8:	add	x0, x0, x20
    6ffc:	mov	x8, x23
    7000:	mov	w1, w24
    7004:	add	x0, x0, #0x8
    7008:	bl	0 <_ZNK4llvm5APInt4zextEj>
    700c:	add	x0, x19, #0x8
    7010:	cmp	x23, x0
    7014:	b.eq	6fac <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1bc>  // b.none
    7018:	ldr	w0, [x19, #16]
    701c:	cmp	w0, #0x40
    7020:	b.ls	6fd0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>  // b.plast
    7024:	ldr	x0, [x19, #8]
    7028:	cbnz	x0, 6fcc <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1dc>
    702c:	b	6fd0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e0>
    7030:	ldp	x23, x24, [sp, #48]
    7034:	ldp	x25, x26, [sp, #64]
    7038:	b	708c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x29c>
    703c:	cbz	x19, 70e8 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2f8>
    7040:	ldrb	w0, [x19, #8]
    7044:	cmp	w0, #0xb
    7048:	b.ne	7110 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x320>  // b.any
    704c:	ldr	w1, [x19, #8]
    7050:	add	x8, sp, #0x90
    7054:	lsr	w1, w1, #8
    7058:	add	x0, sp, #0x58
    705c:	bl	0 <_ZNK4llvm5APInt4zextEj>
    7060:	ldr	w0, [x21, #16]
    7064:	cmp	w0, #0x40
    7068:	b.ls	7078 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x288>  // b.plast
    706c:	ldr	x0, [x21, #8]
    7070:	cbz	x0, 7078 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x288>
    7074:	bl	0 <_ZdaPv>
    7078:	mov	x0, x21
    707c:	ldr	x1, [sp, #144]
    7080:	str	x1, [x0, #8]!
    7084:	ldr	w1, [sp, #152]
    7088:	str	w1, [x0, #8]
    708c:	ldr	x19, [sp, #104]
    7090:	ldr	x20, [sp, #112]
    7094:	cmp	x19, x20
    7098:	b.eq	70b0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2c0>  // b.none
    709c:	mov	x0, x19
    70a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    70a4:	add	x19, x19, #0x30
    70a8:	cmp	x20, x19
    70ac:	b.ne	709c <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2ac>  // b.any
    70b0:	ldr	x0, [sp, #104]
    70b4:	cbz	x0, 70bc <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2cc>
    70b8:	bl	0 <_ZdlPv>
    70bc:	ldr	w0, [sp, #96]
    70c0:	cmp	w0, #0x40
    70c4:	b.ls	70d4 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e4>  // b.plast
    70c8:	ldr	x0, [sp, #88]
    70cc:	cbz	x0, 70d4 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e4>
    70d0:	bl	0 <_ZdaPv>
    70d4:	mov	x0, x21
    70d8:	ldp	x19, x20, [sp, #16]
    70dc:	ldp	x21, x22, [sp, #32]
    70e0:	ldp	x29, x30, [sp], #160
    70e4:	ret
    70e8:	stp	x23, x24, [sp, #48]
    70ec:	stp	x25, x26, [sp, #64]
    70f0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    70f4:	add	x3, x3, #0x0
    70f8:	mov	w2, #0x69                  	// #105
    70fc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7100:	add	x1, x1, #0x0
    7104:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7108:	add	x0, x0, #0x0
    710c:	bl	0 <__assert_fail>
    7110:	stp	x23, x24, [sp, #48]
    7114:	stp	x25, x26, [sp, #64]
    7118:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    711c:	add	x3, x3, #0x0
    7120:	mov	w2, #0x108                 	// #264
    7124:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7128:	add	x1, x1, #0x0
    712c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7130:	add	x0, x0, #0x0
    7134:	bl	0 <__assert_fail>

0000000000007138 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7138:	stp	x29, x30, [sp, #-96]!
    713c:	mov	x29, sp
    7140:	stp	x19, x20, [sp, #16]
    7144:	str	x21, [sp, #32]
    7148:	mov	x20, x8
    714c:	mov	x21, x1
    7150:	mov	x19, x2
    7154:	mov	x2, x3
    7158:	mov	w3, #0x1                   	// #1
    715c:	str	w3, [x8, #16]
    7160:	str	xzr, [x8, #8]
    7164:	str	xzr, [x8, #24]
    7168:	str	xzr, [x8, #32]
    716c:	str	xzr, [x8, #40]
    7170:	str	wzr, [x8]
    7174:	str	wzr, [x8, #4]
    7178:	add	x8, sp, #0x30
    717c:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7180:	ldr	x1, [x21]
    7184:	ldrb	w0, [x1, #8]
    7188:	cmp	w0, #0x10
    718c:	b.eq	720c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd4>  // b.none
    7190:	cmp	w0, #0x3
    7194:	b.ne	72c8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x190>  // b.any
    7198:	ldrb	w0, [x19, #8]
    719c:	cmp	w0, #0x2
    71a0:	b.ne	72c8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x190>  // b.any
    71a4:	ldr	d0, [sp, #48]
    71a8:	fcvt	s0, d0
    71ac:	str	s0, [x20]
    71b0:	ldr	x19, [sp, #72]
    71b4:	ldr	x21, [sp, #80]
    71b8:	cmp	x19, x21
    71bc:	b.eq	71d4 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9c>  // b.none
    71c0:	mov	x0, x19
    71c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    71c8:	add	x19, x19, #0x30
    71cc:	cmp	x21, x19
    71d0:	b.ne	71c0 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x88>  // b.any
    71d4:	ldr	x0, [sp, #72]
    71d8:	cbz	x0, 71e0 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>
    71dc:	bl	0 <_ZdlPv>
    71e0:	ldr	w0, [sp, #64]
    71e4:	cmp	w0, #0x40
    71e8:	b.ls	71f8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>  // b.plast
    71ec:	ldr	x0, [sp, #56]
    71f0:	cbz	x0, 71f8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>
    71f4:	bl	0 <_ZdaPv>
    71f8:	mov	x0, x20
    71fc:	ldp	x19, x20, [sp, #16]
    7200:	ldr	x21, [sp, #32]
    7204:	ldp	x29, x30, [sp], #96
    7208:	ret
    720c:	ldr	x0, [x1, #16]
    7210:	ldr	x0, [x0]
    7214:	ldrb	w0, [x0, #8]
    7218:	cmp	w0, #0x3
    721c:	b.ne	72a8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x170>  // b.any
    7220:	ldrb	w0, [x19, #8]
    7224:	cmp	w0, #0x10
    7228:	b.eq	729c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>  // b.none
    722c:	ldrb	w0, [x19, #8]
    7230:	cmp	w0, #0x2
    7234:	b.ne	72a8 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x170>  // b.any
    7238:	ldr	x19, [sp, #80]
    723c:	ldr	x0, [sp, #72]
    7240:	sub	x19, x19, x0
    7244:	asr	x19, x19, #4
    7248:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    724c:	movk	x0, #0xaaab
    7250:	mul	x19, x19, x0
    7254:	mov	w1, w19
    7258:	add	x0, x20, #0x18
    725c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7260:	cbz	w19, 71b0 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    7264:	sub	w1, w19, #0x1
    7268:	add	x1, x1, #0x1
    726c:	add	x1, x1, x1, lsl #1
    7270:	lsl	x1, x1, #4
    7274:	mov	x0, #0x0                   	// #0
    7278:	ldr	x2, [x20, #24]
    727c:	ldr	x3, [sp, #72]
    7280:	ldr	d0, [x3, x0]
    7284:	fcvt	s0, d0
    7288:	str	s0, [x2, x0]
    728c:	add	x0, x0, #0x30
    7290:	cmp	x1, x0
    7294:	b.ne	7278 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    7298:	b	71b0 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    729c:	ldr	x0, [x19, #16]
    72a0:	ldr	x19, [x0]
    72a4:	b	722c <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf4>
    72a8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    72ac:	add	x3, x3, #0x0
    72b0:	mov	w2, #0x538                 	// #1336
    72b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    72b8:	add	x1, x1, #0x0
    72bc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    72c0:	add	x0, x0, #0x0
    72c4:	bl	0 <__assert_fail>
    72c8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    72cc:	add	x3, x3, #0x0
    72d0:	mov	w2, #0x542                 	// #1346
    72d4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    72d8:	add	x1, x1, #0x0
    72dc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    72e0:	add	x0, x0, #0x0
    72e4:	bl	0 <__assert_fail>

00000000000072e8 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    72e8:	stp	x29, x30, [sp, #-96]!
    72ec:	mov	x29, sp
    72f0:	stp	x19, x20, [sp, #16]
    72f4:	str	x21, [sp, #32]
    72f8:	mov	x20, x8
    72fc:	mov	x21, x1
    7300:	mov	x19, x2
    7304:	mov	x2, x3
    7308:	mov	w3, #0x1                   	// #1
    730c:	str	w3, [x8, #16]
    7310:	str	xzr, [x8, #8]
    7314:	str	xzr, [x8, #24]
    7318:	str	xzr, [x8, #32]
    731c:	str	xzr, [x8, #40]
    7320:	str	wzr, [x8]
    7324:	str	wzr, [x8, #4]
    7328:	add	x8, sp, #0x30
    732c:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7330:	ldr	x1, [x21]
    7334:	ldrb	w0, [x1, #8]
    7338:	cmp	w0, #0x10
    733c:	b.eq	73bc <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd4>  // b.none
    7340:	cmp	w0, #0x2
    7344:	b.ne	7478 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x190>  // b.any
    7348:	ldrb	w0, [x19, #8]
    734c:	cmp	w0, #0x3
    7350:	b.ne	7478 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x190>  // b.any
    7354:	ldr	s0, [sp, #48]
    7358:	fcvt	d0, s0
    735c:	str	d0, [x20]
    7360:	ldr	x19, [sp, #72]
    7364:	ldr	x21, [sp, #80]
    7368:	cmp	x19, x21
    736c:	b.eq	7384 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9c>  // b.none
    7370:	mov	x0, x19
    7374:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7378:	add	x19, x19, #0x30
    737c:	cmp	x21, x19
    7380:	b.ne	7370 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x88>  // b.any
    7384:	ldr	x0, [sp, #72]
    7388:	cbz	x0, 7390 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>
    738c:	bl	0 <_ZdlPv>
    7390:	ldr	w0, [sp, #64]
    7394:	cmp	w0, #0x40
    7398:	b.ls	73a8 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>  // b.plast
    739c:	ldr	x0, [sp, #56]
    73a0:	cbz	x0, 73a8 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>
    73a4:	bl	0 <_ZdaPv>
    73a8:	mov	x0, x20
    73ac:	ldp	x19, x20, [sp, #16]
    73b0:	ldr	x21, [sp, #32]
    73b4:	ldp	x29, x30, [sp], #96
    73b8:	ret
    73bc:	ldr	x0, [x1, #16]
    73c0:	ldr	x0, [x0]
    73c4:	ldrb	w0, [x0, #8]
    73c8:	cmp	w0, #0x2
    73cc:	b.ne	7458 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x170>  // b.any
    73d0:	ldrb	w0, [x19, #8]
    73d4:	cmp	w0, #0x10
    73d8:	b.eq	744c <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>  // b.none
    73dc:	ldrb	w0, [x19, #8]
    73e0:	cmp	w0, #0x3
    73e4:	b.ne	7458 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x170>  // b.any
    73e8:	ldr	x19, [sp, #80]
    73ec:	ldr	x0, [sp, #72]
    73f0:	sub	x19, x19, x0
    73f4:	asr	x19, x19, #4
    73f8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    73fc:	movk	x0, #0xaaab
    7400:	mul	x19, x19, x0
    7404:	mov	w1, w19
    7408:	add	x0, x20, #0x18
    740c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7410:	cbz	w19, 7360 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    7414:	sub	w1, w19, #0x1
    7418:	add	x1, x1, #0x1
    741c:	add	x1, x1, x1, lsl #1
    7420:	lsl	x1, x1, #4
    7424:	mov	x0, #0x0                   	// #0
    7428:	ldr	x2, [x20, #24]
    742c:	ldr	x3, [sp, #72]
    7430:	ldr	s0, [x3, x0]
    7434:	fcvt	d0, s0
    7438:	str	d0, [x2, x0]
    743c:	add	x0, x0, #0x30
    7440:	cmp	x1, x0
    7444:	b.ne	7428 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    7448:	b	7360 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78>
    744c:	ldr	x0, [x19, #16]
    7450:	ldr	x19, [x0]
    7454:	b	73dc <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf4>
    7458:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    745c:	add	x3, x3, #0x0
    7460:	mov	w2, #0x54f                 	// #1359
    7464:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7468:	add	x1, x1, #0x0
    746c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7470:	add	x0, x0, #0x0
    7474:	bl	0 <__assert_fail>
    7478:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    747c:	add	x3, x3, #0x0
    7480:	mov	w2, #0x558                 	// #1368
    7484:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7488:	add	x1, x1, #0x0
    748c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7490:	add	x0, x0, #0x0
    7494:	bl	0 <__assert_fail>

0000000000007498 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7498:	stp	x29, x30, [sp, #-176]!
    749c:	mov	x29, sp
    74a0:	stp	x19, x20, [sp, #16]
    74a4:	stp	x21, x22, [sp, #32]
    74a8:	mov	x20, x8
    74ac:	mov	x19, x2
    74b0:	mov	x2, x3
    74b4:	ldr	x21, [x1]
    74b8:	mov	w3, #0x1                   	// #1
    74bc:	str	w3, [x8, #16]
    74c0:	str	xzr, [x8, #8]
    74c4:	str	xzr, [x8, #24]
    74c8:	str	xzr, [x8, #32]
    74cc:	str	xzr, [x8, #40]
    74d0:	str	wzr, [x8]
    74d4:	str	wzr, [x8, #4]
    74d8:	add	x8, sp, #0x40
    74dc:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    74e0:	ldrb	w1, [x21, #8]
    74e4:	cmp	w1, #0x10
    74e8:	b.ne	770c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x274>  // b.any
    74ec:	stp	x23, x24, [sp, #48]
    74f0:	ldrb	w0, [x19, #8]
    74f4:	cmp	w0, #0x10
    74f8:	b.eq	756c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd4>  // b.none
    74fc:	ldr	x0, [x21, #16]
    7500:	ldr	x21, [x0]
    7504:	ldrb	w0, [x19, #8]
    7508:	cmp	w0, #0xb
    750c:	b.ne	75a0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x108>  // b.any
    7510:	ldr	w23, [x19, #8]
    7514:	lsr	w23, w23, #8
    7518:	ldr	x19, [sp, #96]
    751c:	ldr	x0, [sp, #88]
    7520:	sub	x19, x19, x0
    7524:	asr	x19, x19, #4
    7528:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    752c:	movk	x0, #0xaaab
    7530:	mul	x19, x19, x0
    7534:	mov	w1, w19
    7538:	add	x0, x20, #0x18
    753c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7540:	ldrb	w0, [x21, #8]
    7544:	cmp	w0, #0x2
    7548:	b.eq	75c0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x128>  // b.none
    754c:	cbz	w19, 7828 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x390>
    7550:	sub	w19, w19, #0x1
    7554:	add	x22, x19, #0x1
    7558:	add	x22, x22, x22, lsl #1
    755c:	lsl	x22, x22, #4
    7560:	mov	x21, #0x0                   	// #0
    7564:	add	x24, sp, #0x80
    7568:	b	76ac <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x214>
    756c:	ldr	x0, [x19, #16]
    7570:	ldr	x19, [x0]
    7574:	ldr	x0, [x21, #16]
    7578:	ldr	x21, [x0]
    757c:	cbnz	x19, 7504 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c>
    7580:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7584:	add	x3, x3, #0x0
    7588:	mov	w2, #0x69                  	// #105
    758c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7590:	add	x1, x1, #0x0
    7594:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7598:	add	x0, x0, #0x0
    759c:	bl	0 <__assert_fail>
    75a0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75a4:	add	x3, x3, #0x0
    75a8:	mov	w2, #0x108                 	// #264
    75ac:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75b0:	add	x1, x1, #0x0
    75b4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75b8:	add	x0, x0, #0x0
    75bc:	bl	0 <__assert_fail>
    75c0:	cbz	w19, 7820 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x388>
    75c4:	sub	w19, w19, #0x1
    75c8:	add	x21, x19, #0x1
    75cc:	add	x21, x21, x21, lsl #1
    75d0:	lsl	x21, x21, #4
    75d4:	mov	x22, #0x0                   	// #0
    75d8:	add	x24, sp, #0x70
    75dc:	b	7620 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x188>
    75e0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75e4:	add	x3, x3, #0x0
    75e8:	mov	w2, #0x302                 	// #770
    75ec:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75f0:	add	x1, x1, #0x0
    75f4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    75f8:	add	x0, x0, #0x0
    75fc:	bl	0 <__assert_fail>
    7600:	bl	0 <_ZdaPv>
    7604:	ldr	x0, [sp, #112]
    7608:	str	x0, [x19, #8]!
    760c:	ldr	w0, [sp, #120]
    7610:	str	w0, [x19, #8]
    7614:	add	x22, x22, #0x30
    7618:	cmp	x21, x22
    761c:	b.eq	7664 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1cc>  // b.none
    7620:	ldr	x19, [x20, #24]
    7624:	add	x19, x19, x22
    7628:	ldr	x0, [sp, #88]
    762c:	ldr	s0, [x0, x22]
    7630:	mov	x8, x24
    7634:	mov	w0, w23
    7638:	fcvt	d0, s0
    763c:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    7640:	add	x0, x19, #0x8
    7644:	cmp	x24, x0
    7648:	b.eq	75e0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x148>  // b.none
    764c:	ldr	w0, [x19, #16]
    7650:	cmp	w0, #0x40
    7654:	b.ls	7604 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.plast
    7658:	ldr	x0, [x19, #8]
    765c:	cbnz	x0, 7600 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x168>
    7660:	b	7604 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>
    7664:	ldp	x23, x24, [sp, #48]
    7668:	b	76f0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    766c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7670:	add	x3, x3, #0x0
    7674:	mov	w2, #0x302                 	// #770
    7678:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    767c:	add	x1, x1, #0x0
    7680:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7684:	add	x0, x0, #0x0
    7688:	bl	0 <__assert_fail>
    768c:	bl	0 <_ZdaPv>
    7690:	ldr	x0, [sp, #128]
    7694:	str	x0, [x19, #8]!
    7698:	ldr	w0, [sp, #136]
    769c:	str	w0, [x19, #8]
    76a0:	add	x21, x21, #0x30
    76a4:	cmp	x21, x22
    76a8:	b.eq	76ec <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x254>  // b.none
    76ac:	ldr	x19, [x20, #24]
    76b0:	add	x19, x19, x21
    76b4:	mov	x8, x24
    76b8:	mov	w0, w23
    76bc:	ldr	x1, [sp, #88]
    76c0:	ldr	d0, [x1, x21]
    76c4:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    76c8:	add	x0, x19, #0x8
    76cc:	cmp	x24, x0
    76d0:	b.eq	766c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d4>  // b.none
    76d4:	ldr	w0, [x19, #16]
    76d8:	cmp	w0, #0x40
    76dc:	b.ls	7690 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f8>  // b.plast
    76e0:	ldr	x0, [x19, #8]
    76e4:	cbnz	x0, 768c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f4>
    76e8:	b	7690 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f8>
    76ec:	ldp	x23, x24, [sp, #48]
    76f0:	add	x0, sp, #0x40
    76f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    76f8:	mov	x0, x20
    76fc:	ldp	x19, x20, [sp, #16]
    7700:	ldp	x21, x22, [sp, #32]
    7704:	ldp	x29, x30, [sp], #176
    7708:	ret
    770c:	cbz	x19, 7778 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e0>
    7710:	ldrb	w0, [x19, #8]
    7714:	cmp	w0, #0xb
    7718:	b.ne	779c <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x304>  // b.any
    771c:	ldr	w0, [x19, #8]
    7720:	lsr	w0, w0, #8
    7724:	sub	w2, w1, #0x1
    7728:	and	w2, w2, #0xff
    772c:	cmp	w2, #0x5
    7730:	b.hi	77c0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x328>  // b.pmore
    7734:	cmp	w1, #0x2
    7738:	b.eq	77e4 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x34c>  // b.none
    773c:	add	x8, sp, #0xa0
    7740:	ldr	d0, [sp, #64]
    7744:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    7748:	ldr	w0, [x20, #16]
    774c:	cmp	w0, #0x40
    7750:	b.ls	7760 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2c8>  // b.plast
    7754:	ldr	x0, [x20, #8]
    7758:	cbz	x0, 7760 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2c8>
    775c:	bl	0 <_ZdaPv>
    7760:	mov	x0, x20
    7764:	ldr	x1, [sp, #160]
    7768:	str	x1, [x0, #8]!
    776c:	ldr	w1, [sp, #168]
    7770:	str	w1, [x0, #8]
    7774:	b	76f0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    7778:	stp	x23, x24, [sp, #48]
    777c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7780:	add	x3, x3, #0x0
    7784:	mov	w2, #0x69                  	// #105
    7788:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    778c:	add	x1, x1, #0x0
    7790:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7794:	add	x0, x0, #0x0
    7798:	bl	0 <__assert_fail>
    779c:	stp	x23, x24, [sp, #48]
    77a0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    77a4:	add	x3, x3, #0x0
    77a8:	mov	w2, #0x108                 	// #264
    77ac:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    77b0:	add	x1, x1, #0x0
    77b4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    77b8:	add	x0, x0, #0x0
    77bc:	bl	0 <__assert_fail>
    77c0:	stp	x23, x24, [sp, #48]
    77c4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    77c8:	add	x3, x3, #0x0
    77cc:	mov	w2, #0x57a                 	// #1402
    77d0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    77d4:	add	x1, x1, #0x0
    77d8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    77dc:	add	x0, x0, #0x0
    77e0:	bl	0 <__assert_fail>
    77e4:	add	x19, sp, #0x90
    77e8:	mov	x8, x19
    77ec:	ldr	s0, [sp, #64]
    77f0:	fcvt	d0, s0
    77f4:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    77f8:	mov	x1, x19
    77fc:	add	x0, x20, #0x8
    7800:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7804:	ldr	w0, [sp, #152]
    7808:	cmp	w0, #0x40
    780c:	b.ls	76f0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>  // b.plast
    7810:	ldr	x0, [sp, #144]
    7814:	cbz	x0, 76f0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    7818:	bl	0 <_ZdaPv>
    781c:	b	76f0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    7820:	ldp	x23, x24, [sp, #48]
    7824:	b	76f0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    7828:	ldp	x23, x24, [sp, #48]
    782c:	b	76f0 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>

0000000000007830 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7830:	stp	x29, x30, [sp, #-176]!
    7834:	mov	x29, sp
    7838:	stp	x19, x20, [sp, #16]
    783c:	stp	x21, x22, [sp, #32]
    7840:	mov	x20, x8
    7844:	mov	x19, x2
    7848:	mov	x2, x3
    784c:	ldr	x21, [x1]
    7850:	mov	w3, #0x1                   	// #1
    7854:	str	w3, [x8, #16]
    7858:	str	xzr, [x8, #8]
    785c:	str	xzr, [x8, #24]
    7860:	str	xzr, [x8, #32]
    7864:	str	xzr, [x8, #40]
    7868:	str	wzr, [x8]
    786c:	str	wzr, [x8, #4]
    7870:	add	x8, sp, #0x40
    7874:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7878:	ldrb	w1, [x21, #8]
    787c:	cmp	w1, #0x10
    7880:	b.ne	7aa4 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x274>  // b.any
    7884:	stp	x23, x24, [sp, #48]
    7888:	ldrb	w0, [x19, #8]
    788c:	cmp	w0, #0x10
    7890:	b.eq	7904 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd4>  // b.none
    7894:	ldr	x0, [x21, #16]
    7898:	ldr	x21, [x0]
    789c:	ldrb	w0, [x19, #8]
    78a0:	cmp	w0, #0xb
    78a4:	b.ne	7938 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x108>  // b.any
    78a8:	ldr	w23, [x19, #8]
    78ac:	lsr	w23, w23, #8
    78b0:	ldr	x19, [sp, #96]
    78b4:	ldr	x0, [sp, #88]
    78b8:	sub	x19, x19, x0
    78bc:	asr	x19, x19, #4
    78c0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    78c4:	movk	x0, #0xaaab
    78c8:	mul	x19, x19, x0
    78cc:	mov	w1, w19
    78d0:	add	x0, x20, #0x18
    78d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    78d8:	ldrb	w0, [x21, #8]
    78dc:	cmp	w0, #0x2
    78e0:	b.eq	7958 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x128>  // b.none
    78e4:	cbz	w19, 7bc0 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x390>
    78e8:	sub	w19, w19, #0x1
    78ec:	add	x22, x19, #0x1
    78f0:	add	x22, x22, x22, lsl #1
    78f4:	lsl	x22, x22, #4
    78f8:	mov	x21, #0x0                   	// #0
    78fc:	add	x24, sp, #0x80
    7900:	b	7a44 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x214>
    7904:	ldr	x0, [x19, #16]
    7908:	ldr	x19, [x0]
    790c:	ldr	x0, [x21, #16]
    7910:	ldr	x21, [x0]
    7914:	cbnz	x19, 789c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6c>
    7918:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    791c:	add	x3, x3, #0x0
    7920:	mov	w2, #0x69                  	// #105
    7924:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7928:	add	x1, x1, #0x0
    792c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7930:	add	x0, x0, #0x0
    7934:	bl	0 <__assert_fail>
    7938:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    793c:	add	x3, x3, #0x0
    7940:	mov	w2, #0x108                 	// #264
    7944:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7948:	add	x1, x1, #0x0
    794c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7950:	add	x0, x0, #0x0
    7954:	bl	0 <__assert_fail>
    7958:	cbz	w19, 7bb8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x388>
    795c:	sub	w19, w19, #0x1
    7960:	add	x21, x19, #0x1
    7964:	add	x21, x21, x21, lsl #1
    7968:	lsl	x21, x21, #4
    796c:	mov	x22, #0x0                   	// #0
    7970:	add	x24, sp, #0x70
    7974:	b	79b8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x188>
    7978:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    797c:	add	x3, x3, #0x0
    7980:	mov	w2, #0x302                 	// #770
    7984:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7988:	add	x1, x1, #0x0
    798c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7990:	add	x0, x0, #0x0
    7994:	bl	0 <__assert_fail>
    7998:	bl	0 <_ZdaPv>
    799c:	ldr	x0, [sp, #112]
    79a0:	str	x0, [x19, #8]!
    79a4:	ldr	w0, [sp, #120]
    79a8:	str	w0, [x19, #8]
    79ac:	add	x22, x22, #0x30
    79b0:	cmp	x21, x22
    79b4:	b.eq	79fc <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1cc>  // b.none
    79b8:	ldr	x19, [x20, #24]
    79bc:	add	x19, x19, x22
    79c0:	ldr	x0, [sp, #88]
    79c4:	ldr	s0, [x0, x22]
    79c8:	mov	x8, x24
    79cc:	mov	w0, w23
    79d0:	fcvt	d0, s0
    79d4:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    79d8:	add	x0, x19, #0x8
    79dc:	cmp	x24, x0
    79e0:	b.eq	7978 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x148>  // b.none
    79e4:	ldr	w0, [x19, #16]
    79e8:	cmp	w0, #0x40
    79ec:	b.ls	799c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>  // b.plast
    79f0:	ldr	x0, [x19, #8]
    79f4:	cbnz	x0, 7998 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x168>
    79f8:	b	799c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x16c>
    79fc:	ldp	x23, x24, [sp, #48]
    7a00:	b	7a88 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    7a04:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a08:	add	x3, x3, #0x0
    7a0c:	mov	w2, #0x302                 	// #770
    7a10:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a14:	add	x1, x1, #0x0
    7a18:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a1c:	add	x0, x0, #0x0
    7a20:	bl	0 <__assert_fail>
    7a24:	bl	0 <_ZdaPv>
    7a28:	ldr	x0, [sp, #128]
    7a2c:	str	x0, [x19, #8]!
    7a30:	ldr	w0, [sp, #136]
    7a34:	str	w0, [x19, #8]
    7a38:	add	x21, x21, #0x30
    7a3c:	cmp	x21, x22
    7a40:	b.eq	7a84 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x254>  // b.none
    7a44:	ldr	x19, [x20, #24]
    7a48:	add	x19, x19, x21
    7a4c:	mov	x8, x24
    7a50:	mov	w0, w23
    7a54:	ldr	x1, [sp, #88]
    7a58:	ldr	d0, [x1, x21]
    7a5c:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    7a60:	add	x0, x19, #0x8
    7a64:	cmp	x24, x0
    7a68:	b.eq	7a04 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d4>  // b.none
    7a6c:	ldr	w0, [x19, #16]
    7a70:	cmp	w0, #0x40
    7a74:	b.ls	7a28 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f8>  // b.plast
    7a78:	ldr	x0, [x19, #8]
    7a7c:	cbnz	x0, 7a24 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f4>
    7a80:	b	7a28 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f8>
    7a84:	ldp	x23, x24, [sp, #48]
    7a88:	add	x0, sp, #0x40
    7a8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7a90:	mov	x0, x20
    7a94:	ldp	x19, x20, [sp, #16]
    7a98:	ldp	x21, x22, [sp, #32]
    7a9c:	ldp	x29, x30, [sp], #176
    7aa0:	ret
    7aa4:	cbz	x19, 7b10 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e0>
    7aa8:	ldrb	w0, [x19, #8]
    7aac:	cmp	w0, #0xb
    7ab0:	b.ne	7b34 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x304>  // b.any
    7ab4:	ldr	w0, [x19, #8]
    7ab8:	lsr	w0, w0, #8
    7abc:	sub	w2, w1, #0x1
    7ac0:	and	w2, w2, #0xff
    7ac4:	cmp	w2, #0x5
    7ac8:	b.hi	7b58 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x328>  // b.pmore
    7acc:	cmp	w1, #0x2
    7ad0:	b.eq	7b7c <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x34c>  // b.none
    7ad4:	add	x8, sp, #0xa0
    7ad8:	ldr	d0, [sp, #64]
    7adc:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    7ae0:	ldr	w0, [x20, #16]
    7ae4:	cmp	w0, #0x40
    7ae8:	b.ls	7af8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2c8>  // b.plast
    7aec:	ldr	x0, [x20, #8]
    7af0:	cbz	x0, 7af8 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2c8>
    7af4:	bl	0 <_ZdaPv>
    7af8:	mov	x0, x20
    7afc:	ldr	x1, [sp, #160]
    7b00:	str	x1, [x0, #8]!
    7b04:	ldr	w1, [sp, #168]
    7b08:	str	w1, [x0, #8]
    7b0c:	b	7a88 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    7b10:	stp	x23, x24, [sp, #48]
    7b14:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b18:	add	x3, x3, #0x0
    7b1c:	mov	w2, #0x69                  	// #105
    7b20:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b24:	add	x1, x1, #0x0
    7b28:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b2c:	add	x0, x0, #0x0
    7b30:	bl	0 <__assert_fail>
    7b34:	stp	x23, x24, [sp, #48]
    7b38:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b3c:	add	x3, x3, #0x0
    7b40:	mov	w2, #0x108                 	// #264
    7b44:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b48:	add	x1, x1, #0x0
    7b4c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b50:	add	x0, x0, #0x0
    7b54:	bl	0 <__assert_fail>
    7b58:	stp	x23, x24, [sp, #48]
    7b5c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b60:	add	x3, x3, #0x0
    7b64:	mov	w2, #0x5a0                 	// #1440
    7b68:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b6c:	add	x1, x1, #0x0
    7b70:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b74:	add	x0, x0, #0x0
    7b78:	bl	0 <__assert_fail>
    7b7c:	add	x19, sp, #0x90
    7b80:	mov	x8, x19
    7b84:	ldr	s0, [sp, #64]
    7b88:	fcvt	d0, s0
    7b8c:	bl	0 <_ZN4llvm8APIntOps18RoundDoubleToAPIntEdj>
    7b90:	mov	x1, x19
    7b94:	add	x0, x20, #0x8
    7b98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7b9c:	ldr	w0, [sp, #152]
    7ba0:	cmp	w0, #0x40
    7ba4:	b.ls	7a88 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>  // b.plast
    7ba8:	ldr	x0, [sp, #144]
    7bac:	cbz	x0, 7a88 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    7bb0:	bl	0 <_ZdaPv>
    7bb4:	b	7a88 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    7bb8:	ldp	x23, x24, [sp, #48]
    7bbc:	b	7a88 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>
    7bc0:	ldp	x23, x24, [sp, #48]
    7bc4:	b	7a88 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x258>

0000000000007bc8 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7bc8:	stp	x29, x30, [sp, #-96]!
    7bcc:	mov	x29, sp
    7bd0:	stp	x19, x20, [sp, #16]
    7bd4:	stp	x21, x22, [sp, #32]
    7bd8:	mov	x19, x8
    7bdc:	mov	x20, x1
    7be0:	mov	x21, x2
    7be4:	mov	x2, x3
    7be8:	mov	w3, #0x1                   	// #1
    7bec:	str	w3, [x8, #16]
    7bf0:	str	xzr, [x8, #8]
    7bf4:	str	xzr, [x8, #24]
    7bf8:	str	xzr, [x8, #32]
    7bfc:	str	xzr, [x8, #40]
    7c00:	str	wzr, [x8]
    7c04:	str	wzr, [x8, #4]
    7c08:	add	x8, sp, #0x30
    7c0c:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7c10:	ldr	x0, [x20]
    7c14:	ldrb	w0, [x0, #8]
    7c18:	cmp	w0, #0x10
    7c1c:	b.eq	7ca8 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe0>  // b.none
    7c20:	ldrb	w1, [x21, #8]
    7c24:	sub	w0, w1, #0x1
    7c28:	and	w0, w0, #0xff
    7c2c:	cmp	w0, #0x5
    7c30:	b.hi	7d80 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1b8>  // b.pmore
    7c34:	cmp	w1, #0x2
    7c38:	b.eq	7da0 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d8>  // b.none
    7c3c:	mov	w1, #0x0                   	// #0
    7c40:	add	x0, sp, #0x38
    7c44:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7c48:	str	d0, [x19]
    7c4c:	ldr	x20, [sp, #72]
    7c50:	ldr	x21, [sp, #80]
    7c54:	cmp	x20, x21
    7c58:	b.eq	7c70 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>  // b.none
    7c5c:	mov	x0, x20
    7c60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7c64:	add	x20, x20, #0x30
    7c68:	cmp	x21, x20
    7c6c:	b.ne	7c5c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x94>  // b.any
    7c70:	ldr	x0, [sp, #72]
    7c74:	cbz	x0, 7c7c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    7c78:	bl	0 <_ZdlPv>
    7c7c:	ldr	w0, [sp, #64]
    7c80:	cmp	w0, #0x40
    7c84:	b.ls	7c94 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>  // b.plast
    7c88:	ldr	x0, [sp, #56]
    7c8c:	cbz	x0, 7c94 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    7c90:	bl	0 <_ZdaPv>
    7c94:	mov	x0, x19
    7c98:	ldp	x19, x20, [sp, #16]
    7c9c:	ldp	x21, x22, [sp, #32]
    7ca0:	ldp	x29, x30, [sp], #96
    7ca4:	ret
    7ca8:	ldrb	w0, [x21, #8]
    7cac:	cmp	w0, #0x10
    7cb0:	b.eq	7d2c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>  // b.none
    7cb4:	ldr	x20, [sp, #80]
    7cb8:	ldr	x0, [sp, #72]
    7cbc:	sub	x20, x20, x0
    7cc0:	asr	x20, x20, #4
    7cc4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    7cc8:	movk	x0, #0xaaab
    7ccc:	mul	x20, x20, x0
    7cd0:	mov	w1, w20
    7cd4:	add	x0, x19, #0x18
    7cd8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7cdc:	ldrb	w0, [x21, #8]
    7ce0:	cmp	w0, #0x2
    7ce4:	b.eq	7d38 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x170>  // b.none
    7ce8:	cbz	w20, 7c4c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>
    7cec:	sub	w20, w20, #0x1
    7cf0:	add	x21, x20, #0x1
    7cf4:	add	x21, x21, x21, lsl #1
    7cf8:	lsl	x21, x21, #4
    7cfc:	mov	x20, #0x0                   	// #0
    7d00:	ldr	x22, [x19, #24]
    7d04:	ldr	x0, [sp, #72]
    7d08:	add	x0, x0, x20
    7d0c:	mov	w1, #0x0                   	// #0
    7d10:	add	x0, x0, #0x8
    7d14:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7d18:	str	d0, [x22, x20]
    7d1c:	add	x20, x20, #0x30
    7d20:	cmp	x20, x21
    7d24:	b.ne	7d00 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x138>  // b.any
    7d28:	b	7c4c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>
    7d2c:	ldr	x0, [x21, #16]
    7d30:	ldr	x21, [x0]
    7d34:	b	7cb4 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xec>
    7d38:	cbz	w20, 7c4c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>
    7d3c:	sub	w20, w20, #0x1
    7d40:	add	x20, x20, #0x1
    7d44:	add	x20, x20, x20, lsl #1
    7d48:	lsl	x20, x20, #4
    7d4c:	mov	x21, #0x0                   	// #0
    7d50:	ldr	x22, [x19, #24]
    7d54:	ldr	x0, [sp, #72]
    7d58:	add	x0, x0, x21
    7d5c:	mov	w1, #0x0                   	// #0
    7d60:	add	x0, x0, #0x8
    7d64:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7d68:	fcvt	s0, d0
    7d6c:	str	s0, [x22, x21]
    7d70:	add	x21, x21, #0x30
    7d74:	cmp	x20, x21
    7d78:	b.ne	7d50 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x188>  // b.any
    7d7c:	b	7c4c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>
    7d80:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7d84:	add	x3, x3, #0x0
    7d88:	mov	w2, #0x5c1                 	// #1473
    7d8c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7d90:	add	x1, x1, #0x0
    7d94:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7d98:	add	x0, x0, #0x0
    7d9c:	bl	0 <__assert_fail>
    7da0:	mov	w1, #0x0                   	// #0
    7da4:	add	x0, sp, #0x38
    7da8:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7dac:	fcvt	s0, d0
    7db0:	str	s0, [x19]
    7db4:	b	7c4c <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>

0000000000007db8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7db8:	stp	x29, x30, [sp, #-112]!
    7dbc:	mov	x29, sp
    7dc0:	stp	x19, x20, [sp, #16]
    7dc4:	stp	x21, x22, [sp, #32]
    7dc8:	mov	x19, x8
    7dcc:	mov	x20, x1
    7dd0:	mov	x21, x2
    7dd4:	mov	x2, x3
    7dd8:	mov	w3, #0x1                   	// #1
    7ddc:	str	w3, [x8, #16]
    7de0:	str	xzr, [x8, #8]
    7de4:	str	xzr, [x8, #24]
    7de8:	str	xzr, [x8, #32]
    7dec:	str	xzr, [x8, #40]
    7df0:	str	wzr, [x8]
    7df4:	str	wzr, [x8, #4]
    7df8:	add	x8, sp, #0x40
    7dfc:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    7e00:	ldr	x0, [x20]
    7e04:	ldrb	w0, [x0, #8]
    7e08:	cmp	w0, #0x10
    7e0c:	b.eq	7e98 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe0>  // b.none
    7e10:	ldrb	w1, [x21, #8]
    7e14:	sub	w0, w1, #0x1
    7e18:	and	w0, w0, #0xff
    7e1c:	cmp	w0, #0x5
    7e20:	b.hi	7f88 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1d0>  // b.pmore
    7e24:	cmp	w1, #0x2
    7e28:	b.eq	7fac <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1f4>  // b.none
    7e2c:	mov	w1, #0x1                   	// #1
    7e30:	add	x0, sp, #0x48
    7e34:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7e38:	str	d0, [x19]
    7e3c:	ldr	x20, [sp, #88]
    7e40:	ldr	x21, [sp, #96]
    7e44:	cmp	x20, x21
    7e48:	b.eq	7e60 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa8>  // b.none
    7e4c:	mov	x0, x20
    7e50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7e54:	add	x20, x20, #0x30
    7e58:	cmp	x21, x20
    7e5c:	b.ne	7e4c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x94>  // b.any
    7e60:	ldr	x0, [sp, #88]
    7e64:	cbz	x0, 7e6c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    7e68:	bl	0 <_ZdlPv>
    7e6c:	ldr	w0, [sp, #80]
    7e70:	cmp	w0, #0x40
    7e74:	b.ls	7e84 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>  // b.plast
    7e78:	ldr	x0, [sp, #72]
    7e7c:	cbz	x0, 7e84 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    7e80:	bl	0 <_ZdaPv>
    7e84:	mov	x0, x19
    7e88:	ldp	x19, x20, [sp, #16]
    7e8c:	ldp	x21, x22, [sp, #32]
    7e90:	ldp	x29, x30, [sp], #112
    7e94:	ret
    7e98:	ldrb	w0, [x21, #8]
    7e9c:	cmp	w0, #0x10
    7ea0:	b.eq	7f28 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x170>  // b.none
    7ea4:	ldr	x20, [sp, #96]
    7ea8:	ldr	x0, [sp, #88]
    7eac:	sub	x20, x20, x0
    7eb0:	asr	x20, x20, #4
    7eb4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    7eb8:	movk	x0, #0xaaab
    7ebc:	mul	x20, x20, x0
    7ec0:	mov	w1, w20
    7ec4:	add	x0, x19, #0x18
    7ec8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7ecc:	ldrb	w0, [x21, #8]
    7ed0:	cmp	w0, #0x2
    7ed4:	b.eq	7f34 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x17c>  // b.none
    7ed8:	cbz	w20, 7e3c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>
    7edc:	str	x23, [sp, #48]
    7ee0:	sub	w20, w20, #0x1
    7ee4:	add	x21, x20, #0x1
    7ee8:	add	x21, x21, x21, lsl #1
    7eec:	lsl	x21, x21, #4
    7ef0:	mov	x20, #0x0                   	// #0
    7ef4:	mov	w23, #0x1                   	// #1
    7ef8:	ldr	x22, [x19, #24]
    7efc:	ldr	x0, [sp, #88]
    7f00:	add	x0, x0, x20
    7f04:	mov	w1, w23
    7f08:	add	x0, x0, #0x8
    7f0c:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7f10:	str	d0, [x22, x20]
    7f14:	add	x20, x20, #0x30
    7f18:	cmp	x20, x21
    7f1c:	b.ne	7ef8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x140>  // b.any
    7f20:	ldr	x23, [sp, #48]
    7f24:	b	7e3c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>
    7f28:	ldr	x0, [x21, #16]
    7f2c:	ldr	x21, [x0]
    7f30:	b	7ea4 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xec>
    7f34:	cbz	w20, 7e3c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>
    7f38:	str	x23, [sp, #48]
    7f3c:	sub	w20, w20, #0x1
    7f40:	add	x20, x20, #0x1
    7f44:	add	x20, x20, x20, lsl #1
    7f48:	lsl	x20, x20, #4
    7f4c:	mov	x21, #0x0                   	// #0
    7f50:	mov	w23, #0x1                   	// #1
    7f54:	ldr	x22, [x19, #24]
    7f58:	ldr	x0, [sp, #88]
    7f5c:	add	x0, x0, x21
    7f60:	mov	w1, w23
    7f64:	add	x0, x0, #0x8
    7f68:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7f6c:	fcvt	s0, d0
    7f70:	str	s0, [x22, x21]
    7f74:	add	x21, x21, #0x30
    7f78:	cmp	x20, x21
    7f7c:	b.ne	7f54 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x19c>  // b.any
    7f80:	ldr	x23, [sp, #48]
    7f84:	b	7e3c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>
    7f88:	str	x23, [sp, #48]
    7f8c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f90:	add	x3, x3, #0x0
    7f94:	mov	w2, #0x5e1                 	// #1505
    7f98:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7f9c:	add	x1, x1, #0x0
    7fa0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    7fa4:	add	x0, x0, #0x0
    7fa8:	bl	0 <__assert_fail>
    7fac:	mov	w1, #0x1                   	// #1
    7fb0:	add	x0, sp, #0x48
    7fb4:	bl	0 <_ZNK4llvm5APInt13roundToDoubleEb>
    7fb8:	fcvt	s0, d0
    7fbc:	str	s0, [x19]
    7fc0:	b	7e3c <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84>

0000000000007fc4 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    7fc4:	stp	x29, x30, [sp, #-112]!
    7fc8:	mov	x29, sp
    7fcc:	stp	x19, x20, [sp, #16]
    7fd0:	str	x21, [sp, #32]
    7fd4:	mov	x4, x2
    7fd8:	cbz	x2, 80e8 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x124>
    7fdc:	mov	x19, x8
    7fe0:	mov	x21, x1
    7fe4:	mov	x2, x3
    7fe8:	ldrb	w1, [x4, #8]
    7fec:	cmp	w1, #0xb
    7ff0:	b.ne	8108 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x144>  // b.any
    7ff4:	ldr	w20, [x4, #8]
    7ff8:	lsr	w20, w20, #8
    7ffc:	mov	w1, #0x1                   	// #1
    8000:	str	w1, [x8, #16]
    8004:	str	xzr, [x8, #8]
    8008:	str	xzr, [x8, #24]
    800c:	str	xzr, [x8, #32]
    8010:	str	xzr, [x8, #40]
    8014:	str	wzr, [x8]
    8018:	str	wzr, [x8, #4]
    801c:	add	x8, sp, #0x30
    8020:	mov	x1, x21
    8024:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8028:	ldr	x0, [x21]
    802c:	ldrb	w0, [x0, #8]
    8030:	cmp	w0, #0xf
    8034:	b.ne	8128 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x164>  // b.any
    8038:	ldr	x1, [sp, #48]
    803c:	str	w20, [sp, #104]
    8040:	cbz	w20, 8148 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x184>
    8044:	cmp	w20, #0x40
    8048:	b.hi	8168 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1a4>  // b.pmore
    804c:	neg	w20, w20
    8050:	mov	x0, #0xffffffffffffffff    	// #-1
    8054:	lsr	x20, x0, x20
    8058:	and	x20, x20, x1
    805c:	str	x20, [sp, #96]
    8060:	ldr	w0, [x19, #16]
    8064:	cmp	w0, #0x40
    8068:	b.ls	8078 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>  // b.plast
    806c:	ldr	x0, [x19, #8]
    8070:	cbz	x0, 8078 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb4>
    8074:	bl	0 <_ZdaPv>
    8078:	mov	x0, x19
    807c:	ldr	x1, [sp, #96]
    8080:	str	x1, [x0, #8]!
    8084:	ldr	w1, [sp, #104]
    8088:	str	w1, [x0, #8]
    808c:	ldr	x20, [sp, #72]
    8090:	ldr	x21, [sp, #80]
    8094:	cmp	x20, x21
    8098:	b.eq	80b0 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xec>  // b.none
    809c:	mov	x0, x20
    80a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    80a4:	add	x20, x20, #0x30
    80a8:	cmp	x21, x20
    80ac:	b.ne	809c <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd8>  // b.any
    80b0:	ldr	x0, [sp, #72]
    80b4:	cbz	x0, 80bc <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf8>
    80b8:	bl	0 <_ZdlPv>
    80bc:	ldr	w0, [sp, #64]
    80c0:	cmp	w0, #0x40
    80c4:	b.ls	80d4 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>  // b.plast
    80c8:	ldr	x0, [sp, #56]
    80cc:	cbz	x0, 80d4 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x110>
    80d0:	bl	0 <_ZdaPv>
    80d4:	mov	x0, x19
    80d8:	ldp	x19, x20, [sp, #16]
    80dc:	ldr	x21, [sp, #32]
    80e0:	ldp	x29, x30, [sp], #112
    80e4:	ret
    80e8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    80ec:	add	x3, x3, #0x0
    80f0:	mov	w2, #0x69                  	// #105
    80f4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    80f8:	add	x1, x1, #0x0
    80fc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8100:	add	x0, x0, #0x0
    8104:	bl	0 <__assert_fail>
    8108:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    810c:	add	x3, x3, #0x0
    8110:	mov	w2, #0x108                 	// #264
    8114:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8118:	add	x1, x1, #0x0
    811c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8120:	add	x0, x0, #0x0
    8124:	bl	0 <__assert_fail>
    8128:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    812c:	add	x3, x3, #0x0
    8130:	mov	w2, #0x5f1                 	// #1521
    8134:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8138:	add	x1, x1, #0x0
    813c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8140:	add	x0, x0, #0x0
    8144:	bl	0 <__assert_fail>
    8148:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    814c:	add	x3, x3, #0x0
    8150:	mov	w2, #0x117                 	// #279
    8154:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8158:	add	x1, x1, #0x0
    815c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8160:	add	x0, x0, #0x0
    8164:	bl	0 <__assert_fail>
    8168:	mov	w2, #0x0                   	// #0
    816c:	add	x0, sp, #0x60
    8170:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    8174:	b	8060 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9c>

0000000000008178 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    8178:	stp	x29, x30, [sp, #-112]!
    817c:	mov	x29, sp
    8180:	stp	x19, x20, [sp, #16]
    8184:	str	x21, [sp, #32]
    8188:	mov	x19, x8
    818c:	mov	x21, x0
    8190:	mov	x20, x2
    8194:	mov	x2, x3
    8198:	mov	w3, #0x1                   	// #1
    819c:	str	w3, [x8, #16]
    81a0:	str	xzr, [x8, #8]
    81a4:	str	xzr, [x8, #24]
    81a8:	str	xzr, [x8, #32]
    81ac:	str	xzr, [x8, #40]
    81b0:	str	wzr, [x8]
    81b4:	str	wzr, [x8, #4]
    81b8:	add	x8, sp, #0x30
    81bc:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    81c0:	ldrb	w0, [x20, #8]
    81c4:	cmp	w0, #0xf
    81c8:	b.ne	8270 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xf8>  // b.any
    81cc:	mov	w1, #0x0                   	// #0
    81d0:	add	x0, x21, #0x58
    81d4:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
    81d8:	lsl	w1, w0, #3
    81dc:	ldr	w2, [sp, #64]
    81e0:	cmp	w2, w0, lsl #3
    81e4:	b.ne	8290 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x118>  // b.any
    81e8:	ldr	w20, [sp, #64]
    81ec:	cmp	w20, #0x40
    81f0:	b.ls	82c8 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x150>  // b.plast
    81f4:	add	x0, sp, #0x38
    81f8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    81fc:	sub	w20, w20, w0
    8200:	cmp	w20, #0x40
    8204:	b.hi	82d0 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x158>  // b.pmore
    8208:	ldr	x0, [sp, #56]
    820c:	ldr	x0, [x0]
    8210:	str	x0, [x19]
    8214:	ldr	x20, [sp, #72]
    8218:	ldr	x21, [sp, #80]
    821c:	cmp	x20, x21
    8220:	b.eq	8238 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0>  // b.none
    8224:	mov	x0, x20
    8228:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    822c:	add	x20, x20, #0x30
    8230:	cmp	x21, x20
    8234:	b.ne	8224 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xac>  // b.any
    8238:	ldr	x0, [sp, #72]
    823c:	cbz	x0, 8244 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcc>
    8240:	bl	0 <_ZdlPv>
    8244:	ldr	w0, [sp, #64]
    8248:	cmp	w0, #0x40
    824c:	b.ls	825c <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>  // b.plast
    8250:	ldr	x0, [sp, #56]
    8254:	cbz	x0, 825c <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xe4>
    8258:	bl	0 <_ZdaPv>
    825c:	mov	x0, x19
    8260:	ldp	x19, x20, [sp, #16]
    8264:	ldr	x21, [sp, #32]
    8268:	ldp	x29, x30, [sp], #112
    826c:	ret
    8270:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8274:	add	x3, x3, #0x0
    8278:	mov	w2, #0x5fa                 	// #1530
    827c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8280:	add	x1, x1, #0x0
    8284:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8288:	add	x0, x0, #0x0
    828c:	bl	0 <__assert_fail>
    8290:	add	x8, sp, #0x60
    8294:	add	x0, sp, #0x38
    8298:	bl	0 <_ZNK4llvm5APInt11zextOrTruncEj>
    829c:	ldr	w0, [sp, #64]
    82a0:	cmp	w0, #0x40
    82a4:	b.ls	82b4 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x13c>  // b.plast
    82a8:	ldr	x0, [sp, #56]
    82ac:	cbz	x0, 82b4 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x13c>
    82b0:	bl	0 <_ZdaPv>
    82b4:	ldr	x0, [sp, #96]
    82b8:	str	x0, [sp, #56]
    82bc:	ldr	w0, [sp, #104]
    82c0:	str	w0, [sp, #64]
    82c4:	b	81e8 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x70>
    82c8:	ldr	x0, [sp, #56]
    82cc:	b	8210 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x98>
    82d0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82d4:	add	x3, x3, #0x0
    82d8:	mov	w2, #0x657                 	// #1623
    82dc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82e0:	add	x1, x1, #0x0
    82e4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    82e8:	add	x0, x0, #0x0
    82ec:	bl	0 <__assert_fail>

00000000000082f0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>:
    82f0:	sub	sp, sp, #0x240
    82f4:	stp	x29, x30, [sp]
    82f8:	mov	x29, sp
    82fc:	stp	x19, x20, [sp, #16]
    8300:	stp	x21, x22, [sp, #32]
    8304:	str	x8, [sp, #176]
    8308:	mov	x20, x0
    830c:	mov	x21, x2
    8310:	str	x2, [sp, #168]
    8314:	mov	x2, x3
    8318:	ldr	x19, [x1]
    831c:	add	x3, x8, #0x8
    8320:	mov	x5, x3
    8324:	str	x3, [sp, #192]
    8328:	mov	w3, #0x1                   	// #1
    832c:	str	w3, [x5, #8]
    8330:	str	xzr, [x8, #8]
    8334:	str	xzr, [x8, #24]
    8338:	str	xzr, [x8, #32]
    833c:	str	xzr, [x8, #40]
    8340:	str	wzr, [x8]
    8344:	str	wzr, [x8, #4]
    8348:	add	x8, sp, #0x1a0
    834c:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    8350:	ldrb	w1, [x19, #8]
    8354:	cmp	w1, #0x10
    8358:	b.eq	83a0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb0>  // b.none
    835c:	ldrb	w0, [x21, #8]
    8360:	cmp	w0, #0x10
    8364:	b.eq	83a0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb0>  // b.none
    8368:	cmp	w0, #0xf
    836c:	b.eq	8ee4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbf4>  // b.none
    8370:	cmp	w0, #0xb
    8374:	b.eq	8f28 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc38>  // b.none
    8378:	cmp	w0, #0x2
    837c:	b.eq	8fe4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcf4>  // b.none
    8380:	cmp	w0, #0x3
    8384:	b.ne	9054 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd64>  // b.any
    8388:	cmp	w1, #0xb
    838c:	b.eq	9028 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd38>  // b.none
    8390:	ldr	d0, [sp, #416]
    8394:	ldr	x0, [sp, #176]
    8398:	str	d0, [x0]
    839c:	b	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    83a0:	stp	x23, x24, [sp, #48]
    83a4:	stp	x25, x26, [sp, #64]
    83a8:	ldrb	w24, [x20, #88]
    83ac:	mov	w0, #0x1                   	// #1
    83b0:	str	w0, [sp, #240]
    83b4:	str	xzr, [sp, #232]
    83b8:	str	xzr, [sp, #248]
    83bc:	str	xzr, [sp, #256]
    83c0:	str	xzr, [sp, #264]
    83c4:	str	wzr, [sp, #224]
    83c8:	str	wzr, [sp, #228]
    83cc:	str	w0, [sp, #288]
    83d0:	str	xzr, [sp, #280]
    83d4:	str	xzr, [sp, #296]
    83d8:	str	xzr, [sp, #304]
    83dc:	str	xzr, [sp, #312]
    83e0:	str	wzr, [sp, #272]
    83e4:	str	wzr, [sp, #276]
    83e8:	str	w0, [sp, #336]
    83ec:	str	xzr, [sp, #328]
    83f0:	str	xzr, [sp, #344]
    83f4:	str	xzr, [sp, #352]
    83f8:	str	xzr, [sp, #360]
    83fc:	str	wzr, [sp, #320]
    8400:	str	wzr, [sp, #324]
    8404:	ldrb	w0, [x19, #8]
    8408:	cmp	w0, #0x10
    840c:	b.eq	84d4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x1e4>  // b.none
    8410:	mov	x0, x19
    8414:	bl	0 <_ZNK4llvm4Type22getPrimitiveSizeInBitsEv>
    8418:	mov	x25, x0
    841c:	tst	w1, #0xff
    8420:	b.ne	8538 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x248>  // b.any
    8424:	add	x2, sp, #0x1a0
    8428:	mov	x1, #0x0                   	// #0
    842c:	add	x0, sp, #0x158
    8430:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8434:	mov	w0, #0x1                   	// #1
    8438:	str	w0, [sp, #140]
    843c:	ldr	x0, [sp, #168]
    8440:	ldrb	w0, [x0, #8]
    8444:	cmp	w0, #0x10
    8448:	b.eq	855c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x26c>  // b.none
    844c:	ldr	x0, [sp, #168]
    8450:	bl	0 <_ZNK4llvm4Type22getPrimitiveSizeInBitsEv>
    8454:	tst	w1, #0xff
    8458:	b.ne	8590 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2a0>  // b.any
    845c:	str	w0, [sp, #108]
    8460:	ldr	x0, [sp, #168]
    8464:	str	x0, [sp, #200]
    8468:	mov	w0, #0x1                   	// #1
    846c:	str	w0, [sp, #184]
    8470:	ldr	w0, [sp, #140]
    8474:	mul	w0, w25, w0
    8478:	ldr	w1, [sp, #108]
    847c:	ldr	w2, [sp, #184]
    8480:	mul	w1, w1, w2
    8484:	cmp	w0, w1
    8488:	b.ne	85b4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2c4>  // b.any
    848c:	ldr	w1, [sp, #140]
    8490:	add	x0, sp, #0x128
    8494:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8498:	ldrb	w0, [x19, #8]
    849c:	cmp	w0, #0x2
    84a0:	b.eq	85d0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x2e0>  // b.none
    84a4:	cmp	w0, #0x3
    84a8:	b.eq	8638 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x348>  // b.none
    84ac:	cmp	w0, #0xb
    84b0:	b.ne	86f8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x408>  // b.any
    84b4:	ldr	w0, [sp, #140]
    84b8:	cbz	w0, 8ce8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9f8>
    84bc:	sub	w0, w0, #0x1
    84c0:	add	x0, x0, #0x1
    84c4:	add	x0, x0, x0, lsl #1
    84c8:	lsl	x20, x0, #4
    84cc:	mov	x19, #0x0                   	// #0
    84d0:	b	86b0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3c0>
    84d4:	ldr	x0, [x19, #16]
    84d8:	ldr	x20, [x0]
    84dc:	mov	x0, x19
    84e0:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    84e4:	mov	w25, w0
    84e8:	ldr	x0, [sp, #448]
    84ec:	ldr	x1, [sp, #440]
    84f0:	sub	x0, x0, x1
    84f4:	asr	x0, x0, #4
    84f8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    84fc:	movk	x1, #0xaaab
    8500:	mul	w0, w0, w1
    8504:	str	w0, [sp, #140]
    8508:	ldr	x0, [sp, #416]
    850c:	str	x0, [sp, #320]
    8510:	add	x21, sp, #0x1a0
    8514:	add	x19, sp, #0x140
    8518:	add	x1, sp, #0x1a8
    851c:	add	x0, sp, #0x148
    8520:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8524:	add	x1, x21, #0x18
    8528:	add	x0, x19, #0x18
    852c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8530:	mov	x19, x20
    8534:	b	843c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x14c>
    8538:	stp	x27, x28, [sp, #80]
    853c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8540:	add	x3, x3, #0x0
    8544:	mov	w2, #0x7d                  	// #125
    8548:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    854c:	add	x1, x1, #0x0
    8550:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8554:	add	x0, x0, #0x0
    8558:	bl	0 <__assert_fail>
    855c:	ldr	x1, [sp, #168]
    8560:	ldr	x0, [x1, #16]
    8564:	ldr	x0, [x0]
    8568:	str	x0, [sp, #200]
    856c:	mov	x0, x1
    8570:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    8574:	mov	w1, w0
    8578:	str	w0, [sp, #108]
    857c:	ldr	w0, [sp, #140]
    8580:	mul	w0, w25, w0
    8584:	udiv	w0, w0, w1
    8588:	str	w0, [sp, #184]
    858c:	b	8470 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x180>
    8590:	stp	x27, x28, [sp, #80]
    8594:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8598:	add	x3, x3, #0x0
    859c:	mov	w2, #0x7d                  	// #125
    85a0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    85a4:	add	x1, x1, #0x0
    85a8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    85ac:	add	x0, x0, #0x0
    85b0:	bl	0 <__assert_fail>
    85b4:	stp	x27, x28, [sp, #80]
    85b8:	mov	w2, #0x631                 	// #1585
    85bc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    85c0:	add	x1, x1, #0x0
    85c4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    85c8:	add	x0, x0, #0x0
    85cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    85d0:	ldr	w0, [sp, #140]
    85d4:	cbz	w0, 8ce8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9f8>
    85d8:	sub	w0, w0, #0x1
    85dc:	add	x0, x0, #0x1
    85e0:	add	x0, x0, x0, lsl #1
    85e4:	lsl	x22, x0, #4
    85e8:	mov	x20, #0x0                   	// #0
    85ec:	mov	w23, #0x20                  	// #32
    85f0:	b	8610 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x320>
    85f4:	bl	0 <_ZdaPv>
    85f8:	mov	x0, x19
    85fc:	str	x21, [x0, #8]!
    8600:	str	w23, [x0, #8]
    8604:	add	x20, x20, #0x30
    8608:	cmp	x22, x20
    860c:	b.eq	9078 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd88>  // b.none
    8610:	ldr	x0, [sp, #296]
    8614:	add	x19, x0, x20
    8618:	ldr	x0, [sp, #344]
    861c:	ldr	w21, [x0, x20]
    8620:	ldr	w0, [x19, #16]
    8624:	cmp	w0, #0x40
    8628:	b.ls	85f8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x308>  // b.plast
    862c:	ldr	x0, [x19, #8]
    8630:	cbnz	x0, 85f4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x304>
    8634:	b	85f8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x308>
    8638:	ldr	w0, [sp, #140]
    863c:	cbz	w0, 8ce8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9f8>
    8640:	sub	w0, w0, #0x1
    8644:	add	x0, x0, #0x1
    8648:	add	x0, x0, x0, lsl #1
    864c:	lsl	x22, x0, #4
    8650:	mov	x20, #0x0                   	// #0
    8654:	mov	w23, #0x40                  	// #64
    8658:	b	8674 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x384>
    865c:	mov	x0, x19
    8660:	str	x21, [x0, #8]!
    8664:	str	w23, [x0, #8]
    8668:	add	x20, x20, #0x30
    866c:	cmp	x20, x22
    8670:	b.eq	9078 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd88>  // b.none
    8674:	ldr	x0, [sp, #296]
    8678:	add	x19, x0, x20
    867c:	ldr	x0, [sp, #344]
    8680:	ldr	x21, [x0, x20]
    8684:	ldr	w0, [x19, #16]
    8688:	cmp	w0, #0x40
    868c:	b.ls	865c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x36c>  // b.plast
    8690:	ldr	x0, [x19, #8]
    8694:	cbz	x0, 865c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x36c>
    8698:	bl	0 <_ZdaPv>
    869c:	b	865c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x36c>
    86a0:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    86a4:	add	x19, x19, #0x30
    86a8:	cmp	x19, x20
    86ac:	b.eq	9078 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd88>  // b.none
    86b0:	ldr	x3, [sp, #296]
    86b4:	add	x3, x3, x19
    86b8:	add	x0, x3, #0x8
    86bc:	ldr	x2, [sp, #344]
    86c0:	add	x2, x2, x19
    86c4:	add	x1, x2, #0x8
    86c8:	ldr	w4, [x0, #8]
    86cc:	cmp	w4, #0x40
    86d0:	b.hi	86a0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3b0>  // b.pmore
    86d4:	ldr	w4, [x2, #16]
    86d8:	cmp	w4, #0x40
    86dc:	b.hi	86a0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3b0>  // b.pmore
    86e0:	ldr	x1, [x2, #8]
    86e4:	str	x1, [x3, #8]
    86e8:	ldr	w1, [x2, #16]
    86ec:	str	w1, [x3, #16]
    86f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    86f4:	b	86a4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x3b4>
    86f8:	stp	x27, x28, [sp, #80]
    86fc:	mov	w2, #0x643                 	// #1603
    8700:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8704:	add	x1, x1, #0x0
    8708:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    870c:	add	x0, x0, #0x0
    8710:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8714:	ldr	x2, [x19, #8]
    8718:	str	w0, [sp, #216]
    871c:	neg	w0, w0
    8720:	mov	x1, #0xffffffffffffffff    	// #-1
    8724:	lsr	x0, x1, x0
    8728:	and	x0, x0, x2
    872c:	str	x0, [sp, #208]
    8730:	b	8820 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x530>
    8734:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8738:	add	x3, x3, #0x0
    873c:	mov	w2, #0x39a                 	// #922
    8740:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8744:	add	x1, x1, #0x0
    8748:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    874c:	add	x0, x0, #0x0
    8750:	bl	0 <__assert_fail>
    8754:	mov	w1, w20
    8758:	mov	x0, x21
    875c:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    8760:	b	8888 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x598>
    8764:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8768:	add	x3, x3, #0x0
    876c:	mov	w2, #0x347                 	// #839
    8770:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8774:	add	x1, x1, #0x0
    8778:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    877c:	add	x0, x0, #0x0
    8780:	bl	0 <__assert_fail>
    8784:	mov	x1, x21
    8788:	ldr	x0, [sp, #120]
    878c:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    8790:	b	88b4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x5c4>
    8794:	bl	0 <_ZdaPv>
    8798:	add	w22, w22, #0x1
    879c:	cmp	w26, w22
    87a0:	b.ls	88cc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x5dc>  // b.plast
    87a4:	mov	w19, w23
    87a8:	mov	w0, #0x1                   	// #1
    87ac:	str	w0, [sp, #216]
    87b0:	str	xzr, [sp, #208]
    87b4:	mov	x8, x28
    87b8:	ldr	w1, [sp, #112]
    87bc:	mov	x0, x21
    87c0:	bl	0 <_ZNK4llvm5APInt4zextEj>
    87c4:	ldr	w0, [sp, #216]
    87c8:	cmp	w0, #0x40
    87cc:	b.ls	87dc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4ec>  // b.plast
    87d0:	ldr	x0, [sp, #208]
    87d4:	cbz	x0, 87dc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4ec>
    87d8:	bl	0 <_ZdaPv>
    87dc:	ldr	x0, [sp, #480]
    87e0:	str	x0, [sp, #208]
    87e4:	ldr	w2, [sp, #488]
    87e8:	str	w2, [sp, #216]
    87ec:	add	w23, w19, #0x1
    87f0:	ubfiz	x0, x19, #1, #32
    87f4:	add	x19, x0, w19, uxtw
    87f8:	ldr	x0, [sp, #296]
    87fc:	add	x19, x0, x19, lsl #4
    8800:	add	x1, x19, #0x8
    8804:	cmp	w2, #0x40
    8808:	b.hi	8818 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x528>  // b.pmore
    880c:	ldr	w0, [x19, #16]
    8810:	cmp	w0, #0x40
    8814:	b.ls	8714 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x424>  // b.plast
    8818:	mov	x0, x21
    881c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    8820:	mov	x8, x25
    8824:	mov	w1, w24
    8828:	mov	x0, x21
    882c:	bl	0 <_ZNK4llvm5APInt4zextEj>
    8830:	ldr	w0, [sp, #216]
    8834:	cmp	w0, #0x40
    8838:	b.ls	8848 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x558>  // b.plast
    883c:	ldr	x0, [sp, #208]
    8840:	cbz	x0, 8848 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x558>
    8844:	bl	0 <_ZdaPv>
    8848:	ldr	x1, [sp, #496]
    884c:	str	x1, [sp, #208]
    8850:	ldr	w0, [sp, #504]
    8854:	str	w0, [sp, #216]
    8858:	cmp	w20, w0
    885c:	b.hi	8734 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x444>  // b.pmore
    8860:	cmp	w0, #0x40
    8864:	b.hi	8754 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x464>  // b.pmore
    8868:	lsl	x1, x1, x20
    886c:	cmp	w20, w0
    8870:	csel	x1, x1, xzr, ne  // ne = any
    8874:	neg	w0, w0
    8878:	mov	x2, #0xffffffffffffffff    	// #-1
    887c:	lsr	x0, x2, x0
    8880:	and	x1, x0, x1
    8884:	str	x1, [sp, #208]
    8888:	add	w20, w20, w27
    888c:	ldr	w0, [sp, #384]
    8890:	ldr	w1, [sp, #216]
    8894:	cmp	w0, w1
    8898:	b.ne	8764 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x474>  // b.any
    889c:	cmp	w0, #0x40
    88a0:	b.hi	8784 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x494>  // b.pmore
    88a4:	ldr	x0, [sp, #376]
    88a8:	ldr	x1, [sp, #208]
    88ac:	orr	x0, x0, x1
    88b0:	str	x0, [sp, #376]
    88b4:	ldr	w0, [sp, #216]
    88b8:	cmp	w0, #0x40
    88bc:	b.ls	8798 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4a8>  // b.plast
    88c0:	ldr	x0, [sp, #208]
    88c4:	cbnz	x0, 8794 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4a4>
    88c8:	b	8798 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4a8>
    88cc:	mov	w19, w23
    88d0:	ldr	x0, [sp, #256]
    88d4:	ldr	x1, [sp, #264]
    88d8:	cmp	x0, x1
    88dc:	b.eq	8990 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6a0>  // b.none
    88e0:	ldr	x1, [sp, #128]
    88e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    88e8:	ldr	x0, [sp, #256]
    88ec:	add	x0, x0, #0x30
    88f0:	str	x0, [sp, #256]
    88f4:	ldr	x0, [sp, #128]
    88f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    88fc:	ldr	w0, [sp, #136]
    8900:	add	w0, w0, #0x1
    8904:	str	w0, [sp, #136]
    8908:	ldr	w1, [sp, #184]
    890c:	cmp	w1, w0
    8910:	b.eq	89a4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6b4>  // b.none
    8914:	mov	w0, #0x1                   	// #1
    8918:	str	w0, [sp, #384]
    891c:	str	xzr, [sp, #392]
    8920:	str	xzr, [sp, #400]
    8924:	str	xzr, [sp, #408]
    8928:	str	wzr, [sp, #368]
    892c:	str	wzr, [sp, #372]
    8930:	str	xzr, [sp, #376]
    8934:	ldr	x8, [sp, #144]
    8938:	mov	w1, w24
    893c:	ldr	x0, [sp, #120]
    8940:	bl	0 <_ZNK4llvm5APInt4zextEj>
    8944:	ldr	w0, [sp, #384]
    8948:	cmp	w0, #0x40
    894c:	b.ls	895c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x66c>  // b.plast
    8950:	ldr	x0, [sp, #376]
    8954:	cbz	x0, 895c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x66c>
    8958:	bl	0 <_ZdaPv>
    895c:	ldr	x0, [sp, #464]
    8960:	str	x0, [sp, #376]
    8964:	ldr	w0, [sp, #472]
    8968:	str	w0, [sp, #384]
    896c:	ldr	w0, [sp, #140]
    8970:	ldr	w1, [sp, #184]
    8974:	cmp	w0, w1
    8978:	b.cc	88d0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x5e0>  // b.lo, b.ul, b.last
    897c:	ldr	w20, [sp, #152]
    8980:	mov	w22, #0x0                   	// #0
    8984:	add	x28, sp, #0x1e0
    8988:	add	x25, sp, #0x1f0
    898c:	b	87a8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x4b8>
    8990:	ldr	x2, [sp, #128]
    8994:	mov	x1, x0
    8998:	ldr	x0, [sp, #160]
    899c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    89a0:	b	88f4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x604>
    89a4:	ldp	x27, x28, [sp, #80]
    89a8:	b	8ce8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9f8>
    89ac:	ldr	x3, [x0, #8]
    89b0:	str	w2, [sp, #384]
    89b4:	neg	w0, w2
    89b8:	mov	x1, #0xffffffffffffffff    	// #-1
    89bc:	lsr	x0, x1, x0
    89c0:	and	x0, x0, x3
    89c4:	str	x0, [sp, #376]
    89c8:	cmp	w23, w2
    89cc:	b.hi	89e8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6f8>  // b.pmore
    89d0:	cmp	w2, w23
    89d4:	b.eq	8a08 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x718>  // b.none
    89d8:	ldr	x0, [sp, #376]
    89dc:	lsr	x0, x0, x23
    89e0:	str	x0, [sp, #376]
    89e4:	b	8b30 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x840>
    89e8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    89ec:	add	x3, x3, #0x0
    89f0:	mov	w2, #0x3e3                 	// #995
    89f4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    89f8:	add	x1, x1, #0x0
    89fc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8a00:	add	x0, x0, #0x0
    8a04:	bl	0 <__assert_fail>
    8a08:	str	xzr, [sp, #376]
    8a0c:	b	8b30 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x840>
    8a10:	add	x8, sp, #0x210
    8a14:	ldr	w1, [sp, #108]
    8a18:	mov	x0, x27
    8a1c:	bl	0 <_ZNK4llvm5APInt5truncEj>
    8a20:	ldr	w0, [sp, #384]
    8a24:	cmp	w0, #0x40
    8a28:	b.ls	8a38 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x748>  // b.plast
    8a2c:	ldr	x0, [sp, #376]
    8a30:	cbz	x0, 8a38 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x748>
    8a34:	bl	0 <_ZdaPv>
    8a38:	ldr	x0, [sp, #528]
    8a3c:	str	x0, [sp, #376]
    8a40:	ldr	w0, [sp, #536]
    8a44:	str	w0, [sp, #384]
    8a48:	b	8b3c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x84c>
    8a4c:	mov	x1, x27
    8a50:	add	x0, x20, #0x8
    8a54:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    8a58:	b	8b78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x888>
    8a5c:	bl	0 <_ZSt17__throw_bad_allocv>
    8a60:	mov	x21, #0x0                   	// #0
    8a64:	b	8bc0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x8d0>
    8a68:	ldr	x2, [sp, #144]
    8a6c:	mov	x1, x20
    8a70:	ldr	x0, [sp, #152]
    8a74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8a78:	b	8c44 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x954>
    8a7c:	add	w26, w26, #0x1
    8a80:	ldr	w0, [sp, #128]
    8a84:	cmp	w0, w26
    8a88:	b.eq	8c90 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9a0>  // b.none
    8a8c:	mov	w0, #0x1                   	// #1
    8a90:	str	w0, [sp, #384]
    8a94:	str	xzr, [sp, #376]
    8a98:	str	xzr, [sp, #392]
    8a9c:	str	xzr, [sp, #400]
    8aa0:	str	xzr, [sp, #408]
    8aa4:	str	wzr, [sp, #368]
    8aa8:	str	wzr, [sp, #372]
    8aac:	ldr	x8, [sp, #120]
    8ab0:	mov	w1, w25
    8ab4:	mov	x0, x27
    8ab8:	bl	0 <_ZNK4llvm5APInt4zextEj>
    8abc:	ldr	w0, [sp, #384]
    8ac0:	cmp	w0, #0x40
    8ac4:	b.ls	8ad4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7e4>  // b.plast
    8ac8:	ldr	x0, [sp, #376]
    8acc:	cbz	x0, 8ad4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x7e4>
    8ad0:	bl	0 <_ZdaPv>
    8ad4:	ldr	x0, [sp, #512]
    8ad8:	str	x0, [sp, #376]
    8adc:	ldr	w2, [sp, #520]
    8ae0:	str	w2, [sp, #384]
    8ae4:	ldr	x0, [sp, #296]
    8ae8:	ldr	x1, [sp, #112]
    8aec:	add	x0, x0, x1
    8af0:	add	x1, x0, #0x8
    8af4:	cmp	w2, #0x40
    8af8:	b.hi	8b08 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x818>  // b.pmore
    8afc:	ldr	w2, [x0, #16]
    8b00:	cmp	w2, #0x40
    8b04:	b.ls	89ac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6bc>  // b.plast
    8b08:	mov	x0, x27
    8b0c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    8b10:	ldr	w2, [sp, #384]
    8b14:	cmp	w23, w2
    8b18:	b.hi	89e8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6f8>  // b.pmore
    8b1c:	cmp	w2, #0x40
    8b20:	b.ls	89d0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x6e0>  // b.plast
    8b24:	mov	w1, w23
    8b28:	mov	x0, x27
    8b2c:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    8b30:	ldr	w0, [sp, #108]
    8b34:	cmp	w25, w0
    8b38:	b.hi	8a10 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x720>  // b.pmore
    8b3c:	ldr	w0, [sp, #136]
    8b40:	add	w23, w23, w0
    8b44:	ldr	x20, [sp, #256]
    8b48:	ldr	x0, [sp, #264]
    8b4c:	cmp	x20, x0
    8b50:	b.eq	8a68 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x778>  // b.none
    8b54:	mov	x0, x20
    8b58:	ldr	x1, [sp, #368]
    8b5c:	str	x1, [x0], #8
    8b60:	ldr	w1, [sp, #384]
    8b64:	str	w1, [x0, #8]
    8b68:	cmp	w1, #0x40
    8b6c:	b.hi	8a4c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x75c>  // b.pmore
    8b70:	ldr	x0, [sp, #376]
    8b74:	str	x0, [x20, #8]
    8b78:	ldr	x19, [sp, #400]
    8b7c:	ldr	x0, [sp, #392]
    8b80:	sub	x19, x19, x0
    8b84:	asr	x1, x19, #4
    8b88:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8b8c:	movk	x0, #0xaaab
    8b90:	mul	x1, x1, x0
    8b94:	str	xzr, [x20, #24]
    8b98:	str	xzr, [x20, #32]
    8b9c:	str	xzr, [x20, #40]
    8ba0:	cbz	x1, 8a60 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x770>
    8ba4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8ba8:	movk	x0, #0x2aa, lsl #48
    8bac:	cmp	x1, x0
    8bb0:	b.hi	8a5c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x76c>  // b.pmore
    8bb4:	mov	x0, x19
    8bb8:	bl	0 <_Znwm>
    8bbc:	mov	x21, x0
    8bc0:	str	x21, [x20, #24]
    8bc4:	str	x21, [x20, #32]
    8bc8:	add	x19, x21, x19
    8bcc:	str	x19, [x20, #40]
    8bd0:	ldr	x28, [sp, #392]
    8bd4:	ldr	x19, [sp, #400]
    8bd8:	cmp	x28, x19
    8bdc:	b.eq	8c34 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x944>  // b.none
    8be0:	mov	x22, x28
    8be4:	mov	x24, x21
    8be8:	mov	x1, x22
    8bec:	mov	x0, x24
    8bf0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8bf4:	add	x24, x24, #0x30
    8bf8:	add	x22, x22, #0x30
    8bfc:	cmp	x19, x22
    8c00:	b.ne	8be8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x8f8>  // b.any
    8c04:	sub	x0, x19, #0x30
    8c08:	sub	x0, x0, x28
    8c0c:	lsr	x0, x0, #4
    8c10:	mov	x1, #0xaaab                	// #43691
    8c14:	movk	x1, #0xaaaa, lsl #16
    8c18:	movk	x1, #0xaaaa, lsl #32
    8c1c:	movk	x1, #0xaaa, lsl #48
    8c20:	mul	x0, x0, x1
    8c24:	and	x0, x0, #0xfffffffffffffff
    8c28:	add	x0, x0, #0x1
    8c2c:	add	x0, x0, x0, lsl #1
    8c30:	add	x21, x21, x0, lsl #4
    8c34:	str	x21, [x20, #32]
    8c38:	ldr	x0, [sp, #256]
    8c3c:	add	x0, x0, #0x30
    8c40:	str	x0, [sp, #256]
    8c44:	ldr	x19, [sp, #392]
    8c48:	ldr	x20, [sp, #400]
    8c4c:	cmp	x19, x20
    8c50:	b.eq	8c68 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x978>  // b.none
    8c54:	mov	x0, x19
    8c58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8c5c:	add	x19, x19, #0x30
    8c60:	cmp	x20, x19
    8c64:	b.ne	8c54 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x964>  // b.any
    8c68:	ldr	x0, [sp, #392]
    8c6c:	cbz	x0, 8c74 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x984>
    8c70:	bl	0 <_ZdlPv>
    8c74:	ldr	w0, [sp, #384]
    8c78:	cmp	w0, #0x40
    8c7c:	b.ls	8a7c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78c>  // b.plast
    8c80:	ldr	x0, [sp, #376]
    8c84:	cbz	x0, 8a7c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78c>
    8c88:	bl	0 <_ZdaPv>
    8c8c:	b	8a7c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x78c>
    8c90:	ldr	w0, [sp, #160]
    8c94:	add	w0, w0, #0x1
    8c98:	str	w0, [sp, #160]
    8c9c:	ldr	x1, [sp, #112]
    8ca0:	add	x1, x1, #0x30
    8ca4:	str	x1, [sp, #112]
    8ca8:	ldr	w1, [sp, #140]
    8cac:	cmp	w1, w0
    8cb0:	b.ls	8ce4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9f4>  // b.plast
    8cb4:	ldr	w0, [sp, #140]
    8cb8:	ldr	w1, [sp, #184]
    8cbc:	cmp	w0, w1
    8cc0:	b.hi	8c90 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9a0>  // b.pmore
    8cc4:	ldr	w23, [sp, #188]
    8cc8:	mov	w26, #0x0                   	// #0
    8ccc:	add	x0, sp, #0x170
    8cd0:	str	x0, [sp, #144]
    8cd4:	add	x27, sp, #0x178
    8cd8:	add	x0, sp, #0x200
    8cdc:	str	x0, [sp, #120]
    8ce0:	b	8a8c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x79c>
    8ce4:	ldp	x27, x28, [sp, #80]
    8ce8:	ldr	x0, [sp, #168]
    8cec:	ldrb	w0, [x0, #8]
    8cf0:	cmp	w0, #0x10
    8cf4:	b.eq	8d34 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa44>  // b.none
    8cf8:	ldr	x0, [sp, #200]
    8cfc:	ldrb	w0, [x0, #8]
    8d00:	cmp	w0, #0x3
    8d04:	b.eq	8e58 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb68>  // b.none
    8d08:	cmp	w0, #0x2
    8d0c:	b.ne	8ed0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbe0>  // b.any
    8d10:	ldr	x0, [sp, #248]
    8d14:	ldr	w1, [x0, #16]
    8d18:	cmp	w1, #0x40
    8d1c:	b.hi	8ec4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbd4>  // b.pmore
    8d20:	ldr	x0, [x0, #8]
    8d24:	fmov	s0, w0
    8d28:	ldr	x0, [sp, #176]
    8d2c:	str	s0, [x0]
    8d30:	b	8e78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb88>
    8d34:	ldr	x0, [sp, #200]
    8d38:	ldrb	w0, [x0, #8]
    8d3c:	cmp	w0, #0x3
    8d40:	b.eq	8d78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa88>  // b.none
    8d44:	cmp	w0, #0x2
    8d48:	b.eq	8de8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xaf8>  // b.none
    8d4c:	ldr	x19, [sp, #176]
    8d50:	ldr	x0, [sp, #224]
    8d54:	str	x0, [x19], #24
    8d58:	add	x20, sp, #0xe0
    8d5c:	add	x1, sp, #0xe8
    8d60:	ldr	x0, [sp, #192]
    8d64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d68:	add	x1, x20, #0x18
    8d6c:	mov	x0, x19
    8d70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d74:	b	8e78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb88>
    8d78:	ldr	w19, [sp, #184]
    8d7c:	mov	w1, w19
    8d80:	ldr	x20, [sp, #176]
    8d84:	add	x0, x20, #0x18
    8d88:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8d8c:	cbz	w19, 8e78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb88>
    8d90:	sub	w0, w19, #0x1
    8d94:	add	x0, x0, #0x1
    8d98:	add	x0, x0, x0, lsl #1
    8d9c:	lsl	x4, x0, #4
    8da0:	mov	x0, #0x0                   	// #0
    8da4:	mov	x5, x20
    8da8:	b	8dc0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xad0>
    8dac:	ldr	x1, [x1, #8]
    8db0:	str	x1, [x2]
    8db4:	add	x0, x0, #0x30
    8db8:	cmp	x0, x4
    8dbc:	b.eq	8e78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb88>  // b.none
    8dc0:	ldr	x1, [sp, #248]
    8dc4:	add	x1, x1, x0
    8dc8:	ldr	x2, [x5, #24]
    8dcc:	add	x2, x2, x0
    8dd0:	ldr	w3, [x1, #16]
    8dd4:	cmp	w3, #0x40
    8dd8:	b.ls	8dac <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xabc>  // b.plast
    8ddc:	ldr	x1, [x1, #8]
    8de0:	ldr	x1, [x1]
    8de4:	b	8db0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xac0>
    8de8:	ldr	w19, [sp, #184]
    8dec:	mov	w1, w19
    8df0:	ldr	x20, [sp, #176]
    8df4:	add	x0, x20, #0x18
    8df8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8dfc:	cbz	w19, 8e78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb88>
    8e00:	sub	w0, w19, #0x1
    8e04:	add	x0, x0, #0x1
    8e08:	add	x0, x0, x0, lsl #1
    8e0c:	lsl	x4, x0, #4
    8e10:	mov	x0, #0x0                   	// #0
    8e14:	mov	x5, x20
    8e18:	b	8e30 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb40>
    8e1c:	ldr	x1, [x1, #8]
    8e20:	str	w1, [x2]
    8e24:	add	x0, x0, #0x30
    8e28:	cmp	x4, x0
    8e2c:	b.eq	8e78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb88>  // b.none
    8e30:	ldr	x1, [sp, #248]
    8e34:	add	x1, x1, x0
    8e38:	ldr	x2, [x5, #24]
    8e3c:	add	x2, x2, x0
    8e40:	ldr	w3, [x1, #16]
    8e44:	cmp	w3, #0x40
    8e48:	b.ls	8e1c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb2c>  // b.plast
    8e4c:	ldr	x1, [x1, #8]
    8e50:	ldr	x1, [x1]
    8e54:	b	8e20 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb30>
    8e58:	ldr	x0, [sp, #248]
    8e5c:	ldr	w1, [x0, #16]
    8e60:	cmp	w1, #0x40
    8e64:	b.hi	8eb8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xbc8>  // b.pmore
    8e68:	ldr	x0, [x0, #8]
    8e6c:	fmov	d0, x0
    8e70:	ldr	x0, [sp, #176]
    8e74:	str	d0, [x0]
    8e78:	add	x0, sp, #0x140
    8e7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8e80:	add	x0, sp, #0x110
    8e84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8e88:	add	x0, sp, #0xe0
    8e8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8e90:	ldp	x23, x24, [sp, #48]
    8e94:	ldp	x25, x26, [sp, #64]
    8e98:	add	x0, sp, #0x1a0
    8e9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8ea0:	ldr	x0, [sp, #176]
    8ea4:	ldp	x19, x20, [sp, #16]
    8ea8:	ldp	x21, x22, [sp, #32]
    8eac:	ldp	x29, x30, [sp]
    8eb0:	add	sp, sp, #0x240
    8eb4:	ret
    8eb8:	ldr	x0, [x0, #8]
    8ebc:	ldr	x0, [x0]
    8ec0:	b	8e6c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb7c>
    8ec4:	ldr	x0, [x0, #8]
    8ec8:	ldr	x0, [x0]
    8ecc:	b	8d24 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xa34>
    8ed0:	ldr	x1, [sp, #248]
    8ed4:	add	x1, x1, #0x8
    8ed8:	ldr	x0, [sp, #192]
    8edc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8ee0:	b	8e78 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xb88>
    8ee4:	cmp	w1, #0xf
    8ee8:	b.ne	8efc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc0c>  // b.any
    8eec:	ldr	x0, [sp, #416]
    8ef0:	ldr	x1, [sp, #176]
    8ef4:	str	x0, [x1]
    8ef8:	b	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    8efc:	stp	x23, x24, [sp, #48]
    8f00:	stp	x25, x26, [sp, #64]
    8f04:	stp	x27, x28, [sp, #80]
    8f08:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f0c:	add	x3, x3, #0x0
    8f10:	mov	w2, #0x68b                 	// #1675
    8f14:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f18:	add	x1, x1, #0x0
    8f1c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f20:	add	x0, x0, #0x0
    8f24:	bl	0 <__assert_fail>
    8f28:	cmp	w1, #0x2
    8f2c:	b.eq	8f50 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc60>  // b.none
    8f30:	cmp	w1, #0x3
    8f34:	b.eq	8f88 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xc98>  // b.none
    8f38:	cmp	w1, #0xb
    8f3c:	b.ne	8fc0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xcd0>  // b.any
    8f40:	add	x1, sp, #0x1a8
    8f44:	ldr	x0, [sp, #192]
    8f48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f4c:	b	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    8f50:	ldr	w0, [sp, #416]
    8f54:	mov	w1, #0x20                  	// #32
    8f58:	str	w1, [sp, #552]
    8f5c:	str	x0, [sp, #544]
    8f60:	add	x1, sp, #0x220
    8f64:	ldr	x0, [sp, #192]
    8f68:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8f6c:	ldr	w0, [sp, #552]
    8f70:	cmp	w0, #0x40
    8f74:	b.ls	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>  // b.plast
    8f78:	ldr	x0, [sp, #544]
    8f7c:	cbz	x0, 8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    8f80:	bl	0 <_ZdaPv>
    8f84:	b	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    8f88:	mov	w0, #0x40                  	// #64
    8f8c:	str	w0, [sp, #568]
    8f90:	ldr	x0, [sp, #416]
    8f94:	str	x0, [sp, #560]
    8f98:	add	x1, sp, #0x230
    8f9c:	ldr	x0, [sp, #192]
    8fa0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8fa4:	ldr	w0, [sp, #568]
    8fa8:	cmp	w0, #0x40
    8fac:	b.ls	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>  // b.plast
    8fb0:	ldr	x0, [sp, #560]
    8fb4:	cbz	x0, 8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    8fb8:	bl	0 <_ZdaPv>
    8fbc:	b	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    8fc0:	stp	x23, x24, [sp, #48]
    8fc4:	stp	x25, x26, [sp, #64]
    8fc8:	stp	x27, x28, [sp, #80]
    8fcc:	mov	w2, #0x695                 	// #1685
    8fd0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8fd4:	add	x1, x1, #0x0
    8fd8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    8fdc:	add	x0, x0, #0x0
    8fe0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8fe4:	cmp	w1, #0xb
    8fe8:	b.eq	8ffc <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd0c>  // b.none
    8fec:	ldr	s0, [sp, #416]
    8ff0:	ldr	x0, [sp, #176]
    8ff4:	str	s0, [x0]
    8ff8:	b	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    8ffc:	ldr	w0, [sp, #432]
    9000:	cmp	w0, #0x40
    9004:	b.hi	901c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd2c>  // b.pmore
    9008:	ldr	x0, [sp, #424]
    900c:	fmov	s0, w0
    9010:	ldr	x0, [sp, #176]
    9014:	str	s0, [x0]
    9018:	b	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    901c:	ldr	x0, [sp, #424]
    9020:	ldr	x0, [x0]
    9024:	b	900c <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd1c>
    9028:	ldr	w0, [sp, #432]
    902c:	cmp	w0, #0x40
    9030:	b.hi	9048 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd58>  // b.pmore
    9034:	ldr	x0, [sp, #424]
    9038:	fmov	d0, x0
    903c:	ldr	x0, [sp, #176]
    9040:	str	d0, [x0]
    9044:	b	8e98 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xba8>
    9048:	ldr	x0, [sp, #424]
    904c:	ldr	x0, [x0]
    9050:	b	9038 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xd48>
    9054:	stp	x23, x24, [sp, #48]
    9058:	stp	x25, x26, [sp, #64]
    905c:	stp	x27, x28, [sp, #80]
    9060:	mov	w2, #0x6a4                 	// #1700
    9064:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9068:	add	x1, x1, #0x0
    906c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9070:	add	x0, x0, #0x0
    9074:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    9078:	ldr	w0, [sp, #140]
    907c:	ldr	w1, [sp, #184]
    9080:	cmp	w0, w1
    9084:	b.ls	90ec <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0xdfc>  // b.plast
    9088:	ldr	w1, [sp, #140]
    908c:	ldr	w0, [sp, #184]
    9090:	udiv	w26, w1, w0
    9094:	cbz	w0, 8ce8 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9f8>
    9098:	stp	x27, x28, [sp, #80]
    909c:	sub	w0, w26, #0x1
    90a0:	mul	w0, w0, w25
    90a4:	cmp	w24, #0x0
    90a8:	csel	w0, w0, wzr, ne  // ne = any
    90ac:	str	w0, [sp, #152]
    90b0:	cneg	w27, w25, ne  // ne = any
    90b4:	str	wzr, [sp, #136]
    90b8:	mov	w19, #0x0                   	// #0
    90bc:	add	x0, sp, #0x170
    90c0:	str	x0, [sp, #128]
    90c4:	add	x0, sp, #0x178
    90c8:	str	x0, [sp, #120]
    90cc:	add	x0, sp, #0x1d0
    90d0:	str	x0, [sp, #144]
    90d4:	add	x21, sp, #0xd0
    90d8:	add	x0, sp, #0xf8
    90dc:	str	x0, [sp, #160]
    90e0:	str	w25, [sp, #112]
    90e4:	ldr	w24, [sp, #108]
    90e8:	b	8914 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x624>
    90ec:	stp	x27, x28, [sp, #80]
    90f0:	ldr	w0, [sp, #184]
    90f4:	ldr	w1, [sp, #140]
    90f8:	udiv	w0, w0, w1
    90fc:	str	w0, [sp, #128]
    9100:	sub	w0, w0, #0x1
    9104:	ldr	w1, [sp, #108]
    9108:	mul	w0, w0, w1
    910c:	cmp	w24, #0x0
    9110:	csel	w0, w0, wzr, ne  // ne = any
    9114:	str	w0, [sp, #188]
    9118:	cneg	w0, w1, ne  // ne = any
    911c:	str	w0, [sp, #136]
    9120:	str	xzr, [sp, #112]
    9124:	str	wzr, [sp, #160]
    9128:	add	x0, sp, #0xf8
    912c:	str	x0, [sp, #152]
    9130:	b	8cb4 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE+0x9c4>

0000000000009134 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE>:
    9134:	sub	sp, sp, #0x300
    9138:	stp	x29, x30, [sp]
    913c:	mov	x29, sp
    9140:	stp	x19, x20, [sp, #16]
    9144:	stp	x21, x22, [sp, #32]
    9148:	mov	x20, x8
    914c:	mov	x21, x0
    9150:	mov	x19, x1
    9154:	mov	x22, x2
    9158:	ldrh	w3, [x1, #18]
    915c:	cmp	w3, #0x2c
    9160:	b.eq	94e0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3ac>  // b.none
    9164:	b.hi	92dc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1a8>  // b.pmore
    9168:	cmp	w3, #0x28
    916c:	b.eq	9490 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x35c>  // b.none
    9170:	b.ls	91ac <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x78>  // b.plast
    9174:	cmp	w3, #0x2a
    9178:	b.eq	9508 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3d4>  // b.none
    917c:	cmp	w3, #0x2b
    9180:	b.ne	92ac <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x178>  // b.any
    9184:	mov	w1, #0x0                   	// #0
    9188:	mov	x0, x19
    918c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9190:	mov	x8, x20
    9194:	mov	x3, x22
    9198:	ldr	x2, [x19]
    919c:	mov	x1, x0
    91a0:	mov	x0, x21
    91a4:	bl	7bc8 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    91a8:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    91ac:	cmp	w3, #0x26
    91b0:	b.eq	9454 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x320>  // b.none
    91b4:	cmp	w3, #0x27
    91b8:	b.ne	91e4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xb0>  // b.any
    91bc:	mov	w1, #0x0                   	// #0
    91c0:	mov	x0, x19
    91c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    91c8:	mov	x8, x20
    91cc:	mov	x3, x22
    91d0:	ldr	x2, [x19]
    91d4:	mov	x1, x0
    91d8:	mov	x0, x21
    91dc:	bl	6df0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    91e0:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    91e4:	cmp	w3, #0x22
    91e8:	b.ne	9df4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xcc0>  // b.any
    91ec:	stp	x23, x24, [sp, #48]
    91f0:	mov	w1, #0x0                   	// #0
    91f4:	mov	x0, x19
    91f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    91fc:	mov	x23, x0
    9200:	ldrb	w0, [x19, #16]
    9204:	cmp	w0, #0x3a
    9208:	b.eq	9214 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xe0>  // b.none
    920c:	cmp	w0, #0x5
    9210:	b.ne	9558 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x424>  // b.any
    9214:	mov	x0, x19
    9218:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
    921c:	ldrb	w1, [x19, #23]
    9220:	tbz	w1, #6, 957c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x448>
    9224:	ldur	x2, [x19, #-8]
    9228:	add	x1, x2, #0x18
    922c:	mov	x3, #0xffffffffffffffff    	// #-1
    9230:	str	x3, [sp, #448]
    9234:	tst	x0, #0x7
    9238:	b.ne	9594 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x460>  // b.any
    923c:	orr	x0, x0, #0x4
    9240:	str	x0, [sp, #440]
    9244:	str	x1, [sp, #432]
    9248:	ldr	w1, [x19, #20]
    924c:	and	x0, x1, #0xfffffff
    9250:	ubfiz	x1, x1, #1, #28
    9254:	add	x1, x1, x0
    9258:	add	x1, x2, x1, lsl #3
    925c:	str	xzr, [sp, #464]
    9260:	str	x1, [sp, #456]
    9264:	ldp	x0, x1, [sp, #432]
    9268:	stp	x0, x1, [sp, #112]
    926c:	ldr	x0, [sp, #448]
    9270:	str	x0, [sp, #128]
    9274:	add	x0, sp, #0x200
    9278:	ldp	x0, x1, [x0, #-56]
    927c:	stp	x0, x1, [sp, #80]
    9280:	mov	x0, #0xffffffffffffffff    	// #-1
    9284:	str	x0, [sp, #96]
    9288:	mov	x8, x20
    928c:	mov	x4, x22
    9290:	add	x3, sp, #0x50
    9294:	add	x2, sp, #0x70
    9298:	mov	x1, x23
    929c:	mov	x0, x21
    92a0:	bl	6048 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>
    92a4:	ldp	x23, x24, [sp, #48]
    92a8:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    92ac:	cmp	w3, #0x29
    92b0:	b.ne	9df4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xcc0>  // b.any
    92b4:	mov	w1, #0x0                   	// #0
    92b8:	mov	x0, x19
    92bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    92c0:	mov	x8, x20
    92c4:	mov	x3, x22
    92c8:	ldr	x2, [x19]
    92cc:	mov	x1, x0
    92d0:	mov	x0, x21
    92d4:	bl	7498 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    92d8:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    92dc:	cmp	w3, #0x30
    92e0:	b.eq	9530 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x3fc>  // b.none
    92e4:	b.ls	9328 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1f4>  // b.plast
    92e8:	cmp	w3, #0x36
    92ec:	b.hi	9390 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x25c>  // b.pmore
    92f0:	cmp	w3, #0x34
    92f4:	b.hi	95b8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x484>  // b.pmore
    92f8:	cmp	w3, #0x31
    92fc:	b.ne	9df4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xcc0>  // b.any
    9300:	mov	w1, #0x0                   	// #0
    9304:	mov	x0, x19
    9308:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    930c:	mov	x8, x20
    9310:	mov	x3, x22
    9314:	ldr	x2, [x19]
    9318:	mov	x1, x0
    931c:	mov	x0, x21
    9320:	bl	82f0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    9324:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    9328:	cmp	w3, #0x2e
    932c:	b.eq	94b8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x384>  // b.none
    9330:	cmp	w3, #0x2f
    9334:	b.ne	9360 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x22c>  // b.any
    9338:	mov	w1, #0x0                   	// #0
    933c:	mov	x0, x19
    9340:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9344:	mov	x8, x20
    9348:	mov	x3, x22
    934c:	ldr	x2, [x19]
    9350:	mov	x1, x0
    9354:	mov	x0, x21
    9358:	bl	7fc4 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    935c:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    9360:	cmp	w3, #0x2d
    9364:	b.ne	9df4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xcc0>  // b.any
    9368:	mov	w1, #0x0                   	// #0
    936c:	mov	x0, x19
    9370:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9374:	mov	x8, x20
    9378:	mov	x3, x22
    937c:	ldr	x2, [x19]
    9380:	mov	x1, x0
    9384:	mov	x0, x21
    9388:	bl	7138 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    938c:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    9390:	cmp	w3, #0x39
    9394:	b.ne	9df4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xcc0>  // b.any
    9398:	stp	x23, x24, [sp, #48]
    939c:	str	x25, [sp, #64]
    93a0:	mov	w1, #0x0                   	// #0
    93a4:	mov	x0, x19
    93a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    93ac:	add	x23, sp, #0xf0
    93b0:	mov	x8, x23
    93b4:	mov	x2, x22
    93b8:	mov	x1, x0
    93bc:	mov	x0, x21
    93c0:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    93c4:	mov	w1, #0x1                   	// #1
    93c8:	mov	x0, x19
    93cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    93d0:	add	x24, sp, #0x120
    93d4:	mov	x8, x24
    93d8:	mov	x2, x22
    93dc:	mov	x1, x0
    93e0:	mov	x0, x21
    93e4:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    93e8:	mov	w1, #0x2                   	// #2
    93ec:	mov	x0, x19
    93f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    93f4:	add	x25, sp, #0x150
    93f8:	mov	x8, x25
    93fc:	mov	x2, x22
    9400:	mov	x1, x0
    9404:	mov	x0, x21
    9408:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    940c:	mov	w1, #0x0                   	// #0
    9410:	mov	x0, x19
    9414:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9418:	mov	x8, x20
    941c:	ldr	x3, [x0]
    9420:	mov	x2, x25
    9424:	mov	x1, x24
    9428:	mov	x0, x23
    942c:	bl	5c78 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>
    9430:	mov	x0, x25
    9434:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9438:	mov	x0, x24
    943c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9440:	mov	x0, x23
    9444:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9448:	ldp	x23, x24, [sp, #48]
    944c:	ldr	x25, [sp, #64]
    9450:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    9454:	mov	w1, #0x0                   	// #0
    9458:	mov	x0, x19
    945c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9460:	mov	x8, x20
    9464:	mov	x3, x22
    9468:	ldr	x2, [x19]
    946c:	mov	x1, x0
    9470:	mov	x0, x21
    9474:	bl	675c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    9478:	mov	x0, x20
    947c:	ldp	x19, x20, [sp, #16]
    9480:	ldp	x21, x22, [sp, #32]
    9484:	ldp	x29, x30, [sp]
    9488:	add	sp, sp, #0x300
    948c:	ret
    9490:	mov	w1, #0x0                   	// #0
    9494:	mov	x0, x19
    9498:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    949c:	mov	x8, x20
    94a0:	mov	x3, x22
    94a4:	ldr	x2, [x19]
    94a8:	mov	x1, x0
    94ac:	mov	x0, x21
    94b0:	bl	6aa8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    94b4:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    94b8:	mov	w1, #0x0                   	// #0
    94bc:	mov	x0, x19
    94c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    94c4:	mov	x8, x20
    94c8:	mov	x3, x22
    94cc:	ldr	x2, [x19]
    94d0:	mov	x1, x0
    94d4:	mov	x0, x21
    94d8:	bl	72e8 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    94dc:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    94e0:	mov	w1, #0x0                   	// #0
    94e4:	mov	x0, x19
    94e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    94ec:	mov	x8, x20
    94f0:	mov	x3, x22
    94f4:	ldr	x2, [x19]
    94f8:	mov	x1, x0
    94fc:	mov	x0, x21
    9500:	bl	7db8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    9504:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    9508:	mov	w1, #0x0                   	// #0
    950c:	mov	x0, x19
    9510:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9514:	mov	x8, x20
    9518:	mov	x3, x22
    951c:	ldr	x2, [x19]
    9520:	mov	x1, x0
    9524:	mov	x0, x21
    9528:	bl	7830 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    952c:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    9530:	mov	w1, #0x0                   	// #0
    9534:	mov	x0, x19
    9538:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    953c:	mov	x8, x20
    9540:	mov	x3, x22
    9544:	ldr	x2, [x19]
    9548:	mov	x1, x0
    954c:	mov	x0, x21
    9550:	bl	8178 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
    9554:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    9558:	str	x25, [sp, #64]
    955c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9560:	add	x3, x3, #0x0
    9564:	mov	w2, #0x108                 	// #264
    9568:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    956c:	add	x1, x1, #0x0
    9570:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9574:	add	x0, x0, #0x0
    9578:	bl	0 <__assert_fail>
    957c:	ldr	w1, [x19, #20]
    9580:	and	x2, x1, #0xfffffff
    9584:	ubfiz	x1, x1, #1, #28
    9588:	add	x1, x1, x2
    958c:	sub	x2, x19, x1, lsl #3
    9590:	b	9228 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xf4>
    9594:	str	x25, [sp, #64]
    9598:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    959c:	add	x3, x3, #0x0
    95a0:	mov	w2, #0xb2                  	// #178
    95a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    95a8:	add	x1, x1, #0x0
    95ac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    95b0:	add	x0, x0, #0x0
    95b4:	bl	0 <__assert_fail>
    95b8:	stp	x23, x24, [sp, #48]
    95bc:	mov	x0, x1
    95c0:	bl	0 <_ZNK4llvm12ConstantExpr12getPredicateEv>
    95c4:	mov	w23, w0
    95c8:	mov	w1, #0x0                   	// #0
    95cc:	mov	x0, x19
    95d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    95d4:	add	x8, sp, #0x90
    95d8:	mov	x2, x22
    95dc:	mov	x1, x0
    95e0:	mov	x0, x21
    95e4:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    95e8:	mov	w1, #0x1                   	// #1
    95ec:	mov	x0, x19
    95f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    95f4:	add	x8, sp, #0xc0
    95f8:	mov	x2, x22
    95fc:	mov	x1, x0
    9600:	mov	x0, x21
    9604:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    9608:	mov	w1, #0x0                   	// #0
    960c:	mov	x0, x19
    9610:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9614:	ldr	x19, [x0]
    9618:	mov	w0, #0x1                   	// #1
    961c:	str	w0, [sp, #256]
    9620:	str	xzr, [sp, #248]
    9624:	str	xzr, [sp, #264]
    9628:	str	xzr, [sp, #272]
    962c:	str	xzr, [sp, #280]
    9630:	str	wzr, [sp, #240]
    9634:	str	wzr, [sp, #244]
    9638:	cmp	w23, #0x29
    963c:	b.hi	9dcc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xc98>  // b.pmore
    9640:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9644:	add	x0, x0, #0x0
    9648:	ldrh	w0, [x0, w23, uxtw #1]
    964c:	adr	x1, 9658 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x524>
    9650:	add	x0, x1, w0, sxth #2
    9654:	br	x0
    9658:	add	x21, sp, #0x150
    965c:	add	x1, sp, #0x90
    9660:	mov	x0, x21
    9664:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9668:	add	x22, sp, #0x120
    966c:	add	x1, sp, #0xc0
    9670:	mov	x0, x22
    9674:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9678:	mov	x8, x20
    967c:	mov	x2, x19
    9680:	mov	x1, x22
    9684:	mov	x0, x21
    9688:	bl	4b0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    968c:	mov	x0, x22
    9690:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9694:	mov	x0, x21
    9698:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    969c:	add	x0, sp, #0xf0
    96a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    96a4:	add	x0, sp, #0xc0
    96a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    96ac:	add	x0, sp, #0x90
    96b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    96b4:	ldp	x23, x24, [sp, #48]
    96b8:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    96bc:	add	x21, sp, #0x150
    96c0:	add	x1, sp, #0x90
    96c4:	mov	x0, x21
    96c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    96cc:	add	x22, sp, #0x120
    96d0:	add	x1, sp, #0xc0
    96d4:	mov	x0, x22
    96d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    96dc:	mov	x8, x20
    96e0:	mov	x2, x19
    96e4:	mov	x1, x22
    96e8:	mov	x0, x21
    96ec:	bl	75c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>
    96f0:	mov	x0, x22
    96f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    96f8:	mov	x0, x21
    96fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9700:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9704:	add	x21, sp, #0x150
    9708:	add	x1, sp, #0x90
    970c:	mov	x0, x21
    9710:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9714:	add	x22, sp, #0x120
    9718:	add	x1, sp, #0xc0
    971c:	mov	x0, x22
    9720:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9724:	mov	x8, x20
    9728:	mov	x2, x19
    972c:	mov	x1, x22
    9730:	mov	x0, x21
    9734:	bl	e18 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    9738:	mov	x0, x22
    973c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9740:	mov	x0, x21
    9744:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9748:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    974c:	add	x21, sp, #0x150
    9750:	add	x1, sp, #0x90
    9754:	mov	x0, x21
    9758:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    975c:	add	x22, sp, #0x120
    9760:	add	x1, sp, #0xc0
    9764:	mov	x0, x22
    9768:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    976c:	mov	x8, x20
    9770:	mov	x2, x19
    9774:	mov	x1, x22
    9778:	mov	x0, x21
    977c:	bl	1024 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>
    9780:	mov	x0, x22
    9784:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9788:	mov	x0, x21
    978c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9790:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9794:	add	x21, sp, #0x150
    9798:	add	x1, sp, #0x90
    979c:	mov	x0, x21
    97a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    97a4:	add	x22, sp, #0x120
    97a8:	add	x1, sp, #0xc0
    97ac:	mov	x0, x22
    97b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    97b4:	mov	x8, x20
    97b8:	mov	x2, x19
    97bc:	mov	x1, x22
    97c0:	mov	x0, x21
    97c4:	bl	a10 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    97c8:	mov	x0, x22
    97cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    97d0:	mov	x0, x21
    97d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    97d8:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    97dc:	add	x21, sp, #0x150
    97e0:	add	x1, sp, #0x90
    97e4:	mov	x0, x21
    97e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    97ec:	add	x22, sp, #0x120
    97f0:	add	x1, sp, #0xc0
    97f4:	mov	x0, x22
    97f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    97fc:	mov	x8, x20
    9800:	mov	x2, x19
    9804:	mov	x1, x22
    9808:	mov	x0, x21
    980c:	bl	c14 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>
    9810:	mov	x0, x22
    9814:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9818:	mov	x0, x21
    981c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9820:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9824:	add	x21, sp, #0x150
    9828:	add	x1, sp, #0x90
    982c:	mov	x0, x21
    9830:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9834:	add	x22, sp, #0x120
    9838:	add	x1, sp, #0xc0
    983c:	mov	x0, x22
    9840:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9844:	mov	x8, x20
    9848:	mov	x2, x19
    984c:	mov	x1, x22
    9850:	mov	x0, x21
    9854:	bl	1648 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    9858:	mov	x0, x22
    985c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9860:	mov	x0, x21
    9864:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9868:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    986c:	add	x21, sp, #0x150
    9870:	add	x1, sp, #0x90
    9874:	mov	x0, x21
    9878:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    987c:	add	x22, sp, #0x120
    9880:	add	x1, sp, #0xc0
    9884:	mov	x0, x22
    9888:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    988c:	mov	x8, x20
    9890:	mov	x2, x19
    9894:	mov	x1, x22
    9898:	mov	x0, x21
    989c:	bl	1854 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>
    98a0:	mov	x0, x22
    98a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98a8:	mov	x0, x21
    98ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98b0:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    98b4:	add	x21, sp, #0x150
    98b8:	add	x1, sp, #0x90
    98bc:	mov	x0, x21
    98c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98c4:	add	x22, sp, #0x120
    98c8:	add	x1, sp, #0xc0
    98cc:	mov	x0, x22
    98d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98d4:	mov	x8, x20
    98d8:	mov	x2, x19
    98dc:	mov	x1, x22
    98e0:	mov	x0, x21
    98e4:	bl	1230 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    98e8:	mov	x0, x22
    98ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98f0:	mov	x0, x21
    98f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    98f8:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    98fc:	add	x21, sp, #0x150
    9900:	add	x1, sp, #0x90
    9904:	mov	x0, x21
    9908:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    990c:	add	x22, sp, #0x120
    9910:	add	x1, sp, #0xc0
    9914:	mov	x0, x22
    9918:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    991c:	mov	x8, x20
    9920:	mov	x2, x19
    9924:	mov	x1, x22
    9928:	mov	x0, x21
    992c:	bl	143c <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>
    9930:	mov	x0, x22
    9934:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9938:	mov	x0, x21
    993c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9940:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9944:	add	x21, sp, #0x150
    9948:	add	x1, sp, #0x90
    994c:	mov	x0, x21
    9950:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9954:	add	x22, sp, #0x120
    9958:	add	x1, sp, #0xc0
    995c:	mov	x0, x22
    9960:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9964:	mov	x8, x20
    9968:	mov	x2, x19
    996c:	mov	x1, x22
    9970:	mov	x0, x21
    9974:	bl	1a60 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>
    9978:	mov	x0, x22
    997c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9980:	mov	x0, x21
    9984:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9988:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    998c:	add	x21, sp, #0x150
    9990:	add	x1, sp, #0x90
    9994:	mov	x0, x21
    9998:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    999c:	add	x22, sp, #0x120
    99a0:	add	x1, sp, #0xc0
    99a4:	mov	x0, x22
    99a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    99ac:	mov	x8, x20
    99b0:	mov	x2, x19
    99b4:	mov	x1, x22
    99b8:	mov	x0, x21
    99bc:	bl	1d40 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>
    99c0:	mov	x0, x22
    99c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    99c8:	mov	x0, x21
    99cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    99d0:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    99d4:	add	x21, sp, #0x150
    99d8:	add	x1, sp, #0x90
    99dc:	mov	x0, x21
    99e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    99e4:	add	x22, sp, #0x120
    99e8:	add	x1, sp, #0xc0
    99ec:	mov	x0, x22
    99f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    99f4:	mov	x8, x20
    99f8:	mov	x2, x19
    99fc:	mov	x1, x22
    9a00:	mov	x0, x21
    9a04:	bl	2000 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    9a08:	mov	x0, x22
    9a0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a10:	mov	x0, x21
    9a14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a18:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9a1c:	add	x21, sp, #0x150
    9a20:	add	x1, sp, #0x90
    9a24:	mov	x0, x21
    9a28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a2c:	add	x22, sp, #0x120
    9a30:	add	x1, sp, #0xc0
    9a34:	mov	x0, x22
    9a38:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a3c:	mov	x8, x20
    9a40:	mov	x2, x19
    9a44:	mov	x1, x22
    9a48:	mov	x0, x21
    9a4c:	bl	2318 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>
    9a50:	mov	x0, x22
    9a54:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a58:	mov	x0, x21
    9a5c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a60:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9a64:	add	x21, sp, #0x150
    9a68:	add	x1, sp, #0x90
    9a6c:	mov	x0, x21
    9a70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a74:	add	x22, sp, #0x120
    9a78:	add	x1, sp, #0xc0
    9a7c:	mov	x0, x22
    9a80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9a84:	mov	x8, x20
    9a88:	mov	x2, x19
    9a8c:	mov	x1, x22
    9a90:	mov	x0, x21
    9a94:	bl	2914 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    9a98:	mov	x0, x22
    9a9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9aa0:	mov	x0, x21
    9aa4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9aa8:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9aac:	add	x21, sp, #0x150
    9ab0:	add	x1, sp, #0x90
    9ab4:	mov	x0, x21
    9ab8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9abc:	add	x22, sp, #0x120
    9ac0:	add	x1, sp, #0xc0
    9ac4:	mov	x0, x22
    9ac8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9acc:	mov	x8, x20
    9ad0:	mov	x2, x19
    9ad4:	mov	x1, x22
    9ad8:	mov	x0, x21
    9adc:	bl	311c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>
    9ae0:	mov	x0, x22
    9ae4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ae8:	mov	x0, x21
    9aec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9af0:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9af4:	add	x21, sp, #0x150
    9af8:	add	x1, sp, #0x90
    9afc:	mov	x0, x21
    9b00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b04:	add	x22, sp, #0x120
    9b08:	add	x1, sp, #0xc0
    9b0c:	mov	x0, x22
    9b10:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b14:	mov	x8, x20
    9b18:	mov	x2, x19
    9b1c:	mov	x1, x22
    9b20:	mov	x0, x21
    9b24:	bl	3718 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    9b28:	mov	x0, x22
    9b2c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b30:	mov	x0, x21
    9b34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b38:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9b3c:	add	x21, sp, #0x150
    9b40:	add	x1, sp, #0x90
    9b44:	mov	x0, x21
    9b48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b4c:	add	x22, sp, #0x120
    9b50:	add	x1, sp, #0xc0
    9b54:	mov	x0, x22
    9b58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b5c:	mov	x8, x20
    9b60:	mov	x2, x19
    9b64:	mov	x1, x22
    9b68:	mov	x0, x21
    9b6c:	bl	3a30 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    9b70:	mov	x0, x22
    9b74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b78:	mov	x0, x21
    9b7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b80:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9b84:	add	x21, sp, #0x150
    9b88:	add	x1, sp, #0x90
    9b8c:	mov	x0, x21
    9b90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9b94:	add	x22, sp, #0x120
    9b98:	add	x1, sp, #0xc0
    9b9c:	mov	x0, x22
    9ba0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ba4:	mov	x8, x20
    9ba8:	mov	x2, x19
    9bac:	mov	x1, x22
    9bb0:	mov	x0, x21
    9bb4:	bl	402c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    9bb8:	mov	x0, x22
    9bbc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9bc0:	mov	x0, x21
    9bc4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9bc8:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9bcc:	add	x21, sp, #0x150
    9bd0:	add	x1, sp, #0x90
    9bd4:	mov	x0, x21
    9bd8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9bdc:	add	x22, sp, #0x120
    9be0:	add	x1, sp, #0xc0
    9be4:	mov	x0, x22
    9be8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9bec:	mov	x8, x20
    9bf0:	mov	x2, x19
    9bf4:	mov	x1, x22
    9bf8:	mov	x0, x21
    9bfc:	bl	4344 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    9c00:	mov	x0, x22
    9c04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c08:	mov	x0, x21
    9c0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c10:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9c14:	add	x21, sp, #0x150
    9c18:	add	x1, sp, #0x90
    9c1c:	mov	x0, x21
    9c20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c24:	add	x22, sp, #0x120
    9c28:	add	x1, sp, #0xc0
    9c2c:	mov	x0, x22
    9c30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c34:	mov	x8, x20
    9c38:	mov	x2, x19
    9c3c:	mov	x1, x22
    9c40:	mov	x0, x21
    9c44:	bl	48f4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    9c48:	mov	x0, x22
    9c4c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c50:	mov	x0, x21
    9c54:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c58:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9c5c:	add	x21, sp, #0x150
    9c60:	add	x1, sp, #0x90
    9c64:	mov	x0, x21
    9c68:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c6c:	add	x22, sp, #0x120
    9c70:	add	x1, sp, #0xc0
    9c74:	mov	x0, x22
    9c78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c7c:	mov	x8, x20
    9c80:	mov	x2, x19
    9c84:	mov	x1, x22
    9c88:	mov	x0, x21
    9c8c:	bl	4c0c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    9c90:	mov	x0, x22
    9c94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9c98:	mov	x0, x21
    9c9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ca0:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9ca4:	add	x21, sp, #0x150
    9ca8:	add	x1, sp, #0x90
    9cac:	mov	x0, x21
    9cb0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9cb4:	add	x22, sp, #0x120
    9cb8:	add	x1, sp, #0xc0
    9cbc:	mov	x0, x22
    9cc0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9cc4:	mov	x8, x20
    9cc8:	mov	x2, x19
    9ccc:	mov	x1, x22
    9cd0:	mov	x0, x21
    9cd4:	bl	5208 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    9cd8:	mov	x0, x22
    9cdc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ce0:	mov	x0, x21
    9ce4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ce8:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9cec:	add	x21, sp, #0x150
    9cf0:	add	x1, sp, #0x90
    9cf4:	mov	x0, x21
    9cf8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9cfc:	add	x22, sp, #0x120
    9d00:	add	x1, sp, #0xc0
    9d04:	mov	x0, x22
    9d08:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d0c:	mov	x8, x20
    9d10:	mov	x2, x19
    9d14:	mov	x1, x22
    9d18:	mov	x0, x21
    9d1c:	bl	5520 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    9d20:	mov	x0, x22
    9d24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d28:	mov	x0, x21
    9d2c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d30:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9d34:	add	x21, sp, #0x150
    9d38:	add	x1, sp, #0x90
    9d3c:	mov	x0, x21
    9d40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d44:	add	x22, sp, #0x120
    9d48:	add	x1, sp, #0xc0
    9d4c:	mov	x0, x22
    9d50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d54:	mov	x8, x20
    9d58:	mov	w3, #0x0                   	// #0
    9d5c:	mov	x2, x19
    9d60:	mov	x1, x22
    9d64:	mov	x0, x21
    9d68:	bl	5b1c <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    9d6c:	mov	x0, x22
    9d70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d74:	mov	x0, x21
    9d78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d7c:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9d80:	add	x21, sp, #0x150
    9d84:	add	x1, sp, #0x90
    9d88:	mov	x0, x21
    9d8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9d90:	add	x22, sp, #0x120
    9d94:	add	x1, sp, #0xc0
    9d98:	mov	x0, x22
    9d9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9da0:	mov	x8, x20
    9da4:	mov	w3, #0x1                   	// #1
    9da8:	mov	x2, x19
    9dac:	mov	x1, x22
    9db0:	mov	x0, x21
    9db4:	bl	5b1c <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    9db8:	mov	x0, x22
    9dbc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9dc0:	mov	x0, x21
    9dc4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9dc8:	b	969c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x568>
    9dcc:	str	x25, [sp, #64]
    9dd0:	bl	0 <_ZN4llvm4dbgsEv>
    9dd4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9dd8:	add	x1, x1, #0x0
    9ddc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9de0:	mov	w2, #0x2da                 	// #730
    9de4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9de8:	add	x1, x1, #0x0
    9dec:	mov	x0, #0x0                   	// #0
    9df0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    9df4:	mov	w1, #0x0                   	// #0
    9df8:	mov	x0, x19
    9dfc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9e00:	add	x8, sp, #0x180
    9e04:	mov	x2, x22
    9e08:	mov	x1, x0
    9e0c:	mov	x0, x21
    9e10:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    9e14:	mov	w1, #0x1                   	// #1
    9e18:	mov	x0, x19
    9e1c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9e20:	add	x8, sp, #0xc0
    9e24:	mov	x2, x22
    9e28:	mov	x1, x0
    9e2c:	mov	x0, x21
    9e30:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    9e34:	mov	w0, #0x1                   	// #1
    9e38:	str	w0, [sp, #256]
    9e3c:	str	xzr, [sp, #248]
    9e40:	str	xzr, [sp, #264]
    9e44:	str	xzr, [sp, #272]
    9e48:	str	xzr, [sp, #280]
    9e4c:	str	wzr, [sp, #240]
    9e50:	str	wzr, [sp, #244]
    9e54:	mov	w1, #0x0                   	// #0
    9e58:	mov	x0, x19
    9e5c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9e60:	ldr	x21, [x0]
    9e64:	ldrh	w0, [x19, #18]
    9e68:	sub	w0, w0, #0xd
    9e6c:	cmp	w0, #0x11
    9e70:	b.hi	a7e0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x16ac>  // b.pmore
    9e74:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9e78:	add	x1, x1, #0x0
    9e7c:	ldrh	w0, [x1, w0, uxtw #1]
    9e80:	adr	x1, 9e8c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xd58>
    9e84:	add	x0, x1, w0, sxth #2
    9e88:	br	x0
    9e8c:	ldr	w0, [sp, #400]
    9e90:	str	w0, [sp, #504]
    9e94:	cmp	w0, #0x40
    9e98:	b.hi	9f04 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xdd0>  // b.pmore
    9e9c:	ldr	x0, [sp, #392]
    9ea0:	str	x0, [sp, #496]
    9ea4:	add	x1, sp, #0xc8
    9ea8:	add	x0, sp, #0x1f0
    9eac:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    9eb0:	ldr	w0, [sp, #504]
    9eb4:	str	w0, [sp, #488]
    9eb8:	ldr	x0, [sp, #496]
    9ebc:	str	x0, [sp, #480]
    9ec0:	str	wzr, [sp, #504]
    9ec4:	add	x1, sp, #0x1e0
    9ec8:	add	x0, sp, #0xf8
    9ecc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ed0:	ldr	w0, [sp, #488]
    9ed4:	cmp	w0, #0x40
    9ed8:	b.ls	9ee8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xdb4>  // b.plast
    9edc:	ldr	x0, [sp, #480]
    9ee0:	cbz	x0, 9ee8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xdb4>
    9ee4:	bl	0 <_ZdaPv>
    9ee8:	ldr	w0, [sp, #504]
    9eec:	cmp	w0, #0x40
    9ef0:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    9ef4:	ldr	x0, [sp, #496]
    9ef8:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    9efc:	bl	0 <_ZdaPv>
    9f00:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    9f04:	add	x1, sp, #0x188
    9f08:	add	x0, sp, #0x1f0
    9f0c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9f10:	b	9ea4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xd70>
    9f14:	ldr	w0, [sp, #400]
    9f18:	str	w0, [sp, #536]
    9f1c:	cmp	w0, #0x40
    9f20:	b.hi	9f8c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xe58>  // b.pmore
    9f24:	ldr	x0, [sp, #392]
    9f28:	str	x0, [sp, #528]
    9f2c:	add	x1, sp, #0xc8
    9f30:	add	x0, sp, #0x210
    9f34:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    9f38:	ldr	w0, [sp, #536]
    9f3c:	str	w0, [sp, #520]
    9f40:	ldr	x0, [sp, #528]
    9f44:	str	x0, [sp, #512]
    9f48:	str	wzr, [sp, #536]
    9f4c:	add	x1, sp, #0x200
    9f50:	add	x0, sp, #0xf8
    9f54:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9f58:	ldr	w0, [sp, #520]
    9f5c:	cmp	w0, #0x40
    9f60:	b.ls	9f70 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xe3c>  // b.plast
    9f64:	ldr	x0, [sp, #512]
    9f68:	cbz	x0, 9f70 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xe3c>
    9f6c:	bl	0 <_ZdaPv>
    9f70:	ldr	w0, [sp, #536]
    9f74:	cmp	w0, #0x40
    9f78:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    9f7c:	ldr	x0, [sp, #528]
    9f80:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    9f84:	bl	0 <_ZdaPv>
    9f88:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    9f8c:	add	x1, sp, #0x188
    9f90:	add	x0, sp, #0x210
    9f94:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    9f98:	b	9f2c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xdf8>
    9f9c:	add	x19, sp, #0x220
    9fa0:	mov	x8, x19
    9fa4:	add	x1, sp, #0xc8
    9fa8:	add	x0, sp, #0x188
    9fac:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    9fb0:	mov	x1, x19
    9fb4:	add	x0, sp, #0xf8
    9fb8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9fbc:	ldr	w0, [sp, #552]
    9fc0:	cmp	w0, #0x40
    9fc4:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    9fc8:	ldr	x0, [sp, #544]
    9fcc:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    9fd0:	bl	0 <_ZdaPv>
    9fd4:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    9fd8:	add	x19, sp, #0x120
    9fdc:	add	x1, sp, #0x180
    9fe0:	mov	x0, x19
    9fe4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9fe8:	add	x22, sp, #0x150
    9fec:	add	x1, sp, #0xc0
    9ff0:	mov	x0, x22
    9ff4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    9ff8:	mov	x3, x21
    9ffc:	mov	x2, x22
    a000:	mov	x1, x19
    a004:	add	x0, sp, #0xf0
    a008:	bl	2c <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    a00c:	mov	x0, x22
    a010:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a014:	mov	x0, x19
    a018:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a01c:	mov	x0, x20
    a020:	ldr	x1, [sp, #240]
    a024:	str	x1, [x0], #8
    a028:	ldr	w1, [sp, #256]
    a02c:	str	w1, [x0, #8]
    a030:	ldr	x0, [sp, #248]
    a034:	str	x0, [x20, #8]
    a038:	str	wzr, [sp, #256]
    a03c:	ldr	x1, [sp, #264]
    a040:	str	x1, [x20, #24]
    a044:	ldr	x1, [sp, #272]
    a048:	str	x1, [x20, #32]
    a04c:	ldr	x1, [sp, #280]
    a050:	str	x1, [x20, #40]
    a054:	str	xzr, [sp, #280]
    a058:	str	xzr, [sp, #272]
    a05c:	str	xzr, [sp, #264]
    a060:	add	x0, sp, #0xf0
    a064:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a068:	add	x0, sp, #0xc0
    a06c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a070:	add	x0, sp, #0x180
    a074:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a078:	b	9478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x344>
    a07c:	add	x19, sp, #0x120
    a080:	add	x1, sp, #0x180
    a084:	mov	x0, x19
    a088:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a08c:	add	x22, sp, #0x150
    a090:	add	x1, sp, #0xc0
    a094:	mov	x0, x22
    a098:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a09c:	mov	x3, x21
    a0a0:	mov	x2, x22
    a0a4:	mov	x1, x19
    a0a8:	add	x0, sp, #0xf0
    a0ac:	bl	cc <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    a0b0:	mov	x0, x22
    a0b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a0b8:	mov	x0, x19
    a0bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a0c0:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a0c4:	add	x19, sp, #0x120
    a0c8:	add	x1, sp, #0x180
    a0cc:	mov	x0, x19
    a0d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a0d4:	add	x22, sp, #0x150
    a0d8:	add	x1, sp, #0xc0
    a0dc:	mov	x0, x22
    a0e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a0e4:	mov	x3, x21
    a0e8:	mov	x2, x22
    a0ec:	mov	x1, x19
    a0f0:	add	x0, sp, #0xf0
    a0f4:	bl	16c <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    a0f8:	mov	x0, x22
    a0fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a100:	mov	x0, x19
    a104:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a108:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a10c:	add	x19, sp, #0x120
    a110:	add	x1, sp, #0x180
    a114:	mov	x0, x19
    a118:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a11c:	add	x22, sp, #0x150
    a120:	add	x1, sp, #0xc0
    a124:	mov	x0, x22
    a128:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a12c:	mov	x3, x21
    a130:	mov	x2, x22
    a134:	mov	x1, x19
    a138:	add	x0, sp, #0xf0
    a13c:	bl	20c <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    a140:	mov	x0, x22
    a144:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a148:	mov	x0, x19
    a14c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a150:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a154:	add	x19, sp, #0x120
    a158:	add	x1, sp, #0x180
    a15c:	mov	x0, x19
    a160:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a164:	add	x22, sp, #0x150
    a168:	add	x1, sp, #0xc0
    a16c:	mov	x0, x22
    a170:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a174:	mov	x3, x21
    a178:	mov	x2, x22
    a17c:	mov	x1, x19
    a180:	add	x0, sp, #0xf0
    a184:	bl	2ac <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    a188:	mov	x0, x22
    a18c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a190:	mov	x0, x19
    a194:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a198:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a19c:	add	x19, sp, #0x230
    a1a0:	mov	x8, x19
    a1a4:	add	x1, sp, #0xc8
    a1a8:	add	x0, sp, #0x188
    a1ac:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    a1b0:	mov	x1, x19
    a1b4:	add	x0, sp, #0xf8
    a1b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a1bc:	ldr	w0, [sp, #568]
    a1c0:	cmp	w0, #0x40
    a1c4:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a1c8:	ldr	x0, [sp, #560]
    a1cc:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a1d0:	bl	0 <_ZdaPv>
    a1d4:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a1d8:	add	x19, sp, #0x240
    a1dc:	mov	x8, x19
    a1e0:	add	x1, sp, #0xc8
    a1e4:	add	x0, sp, #0x188
    a1e8:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    a1ec:	mov	x1, x19
    a1f0:	add	x0, sp, #0xf8
    a1f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a1f8:	ldr	w0, [sp, #584]
    a1fc:	cmp	w0, #0x40
    a200:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a204:	ldr	x0, [sp, #576]
    a208:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a20c:	bl	0 <_ZdaPv>
    a210:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a214:	add	x19, sp, #0x250
    a218:	mov	x8, x19
    a21c:	add	x1, sp, #0xc8
    a220:	add	x0, sp, #0x188
    a224:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    a228:	mov	x1, x19
    a22c:	add	x0, sp, #0xf8
    a230:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a234:	ldr	w0, [sp, #600]
    a238:	cmp	w0, #0x40
    a23c:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a240:	ldr	x0, [sp, #592]
    a244:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a248:	bl	0 <_ZdaPv>
    a24c:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a250:	add	x19, sp, #0x260
    a254:	mov	x8, x19
    a258:	add	x1, sp, #0xc8
    a25c:	add	x0, sp, #0x188
    a260:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    a264:	mov	x1, x19
    a268:	add	x0, sp, #0xf8
    a26c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a270:	ldr	w0, [sp, #616]
    a274:	cmp	w0, #0x40
    a278:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a27c:	ldr	x0, [sp, #608]
    a280:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a284:	bl	0 <_ZdaPv>
    a288:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a28c:	ldr	w0, [sp, #400]
    a290:	str	w0, [sp, #648]
    a294:	cmp	w0, #0x40
    a298:	b.hi	a314 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x11e0>  // b.pmore
    a29c:	ldr	x1, [sp, #392]
    a2a0:	str	x1, [sp, #640]
    a2a4:	ldr	w1, [sp, #208]
    a2a8:	cmp	w0, w1
    a2ac:	b.ne	a348 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1214>  // b.any
    a2b0:	ldr	x0, [sp, #640]
    a2b4:	ldr	x1, [sp, #200]
    a2b8:	and	x0, x0, x1
    a2bc:	str	x0, [sp, #640]
    a2c0:	ldr	w0, [sp, #648]
    a2c4:	str	w0, [sp, #632]
    a2c8:	ldr	x0, [sp, #640]
    a2cc:	str	x0, [sp, #624]
    a2d0:	str	wzr, [sp, #648]
    a2d4:	add	x1, sp, #0x270
    a2d8:	add	x0, sp, #0xf8
    a2dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a2e0:	ldr	w0, [sp, #632]
    a2e4:	cmp	w0, #0x40
    a2e8:	b.ls	a2f8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x11c4>  // b.plast
    a2ec:	ldr	x0, [sp, #624]
    a2f0:	cbz	x0, a2f8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x11c4>
    a2f4:	bl	0 <_ZdaPv>
    a2f8:	ldr	w0, [sp, #648]
    a2fc:	cmp	w0, #0x40
    a300:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a304:	ldr	x0, [sp, #640]
    a308:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a30c:	bl	0 <_ZdaPv>
    a310:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a314:	add	x1, sp, #0x188
    a318:	add	x0, sp, #0x280
    a31c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    a320:	ldr	w0, [sp, #648]
    a324:	ldr	w1, [sp, #208]
    a328:	cmp	w0, w1
    a32c:	b.ne	a348 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1214>  // b.any
    a330:	cmp	w0, #0x40
    a334:	b.ls	a2b0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x117c>  // b.plast
    a338:	add	x1, sp, #0xc8
    a33c:	add	x0, sp, #0x280
    a340:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
    a344:	b	a2c0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x118c>
    a348:	stp	x23, x24, [sp, #48]
    a34c:	str	x25, [sp, #64]
    a350:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a354:	add	x3, x3, #0x0
    a358:	mov	w2, #0x329                 	// #809
    a35c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a360:	add	x1, x1, #0x0
    a364:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a368:	add	x0, x0, #0x0
    a36c:	bl	0 <__assert_fail>
    a370:	ldr	w0, [sp, #400]
    a374:	str	w0, [sp, #680]
    a378:	cmp	w0, #0x40
    a37c:	b.hi	a3f8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12c4>  // b.pmore
    a380:	ldr	x1, [sp, #392]
    a384:	str	x1, [sp, #672]
    a388:	ldr	w1, [sp, #208]
    a38c:	cmp	w0, w1
    a390:	b.ne	a42c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12f8>  // b.any
    a394:	ldr	x0, [sp, #672]
    a398:	ldr	x1, [sp, #200]
    a39c:	orr	x0, x0, x1
    a3a0:	str	x0, [sp, #672]
    a3a4:	ldr	w0, [sp, #680]
    a3a8:	str	w0, [sp, #664]
    a3ac:	ldr	x0, [sp, #672]
    a3b0:	str	x0, [sp, #656]
    a3b4:	str	wzr, [sp, #680]
    a3b8:	add	x1, sp, #0x290
    a3bc:	add	x0, sp, #0xf8
    a3c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a3c4:	ldr	w0, [sp, #664]
    a3c8:	cmp	w0, #0x40
    a3cc:	b.ls	a3dc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12a8>  // b.plast
    a3d0:	ldr	x0, [sp, #656]
    a3d4:	cbz	x0, a3dc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12a8>
    a3d8:	bl	0 <_ZdaPv>
    a3dc:	ldr	w0, [sp, #680]
    a3e0:	cmp	w0, #0x40
    a3e4:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a3e8:	ldr	x0, [sp, #672]
    a3ec:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a3f0:	bl	0 <_ZdaPv>
    a3f4:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a3f8:	add	x1, sp, #0x188
    a3fc:	add	x0, sp, #0x2a0
    a400:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    a404:	ldr	w0, [sp, #680]
    a408:	ldr	w1, [sp, #208]
    a40c:	cmp	w0, w1
    a410:	b.ne	a42c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x12f8>  // b.any
    a414:	cmp	w0, #0x40
    a418:	b.ls	a394 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1260>  // b.plast
    a41c:	add	x1, sp, #0xc8
    a420:	add	x0, sp, #0x2a0
    a424:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    a428:	b	a3a4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1270>
    a42c:	stp	x23, x24, [sp, #48]
    a430:	str	x25, [sp, #64]
    a434:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a438:	add	x3, x3, #0x0
    a43c:	mov	w2, #0x347                 	// #839
    a440:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a444:	add	x1, x1, #0x0
    a448:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a44c:	add	x0, x0, #0x0
    a450:	bl	0 <__assert_fail>
    a454:	ldr	w0, [sp, #400]
    a458:	str	w0, [sp, #712]
    a45c:	cmp	w0, #0x40
    a460:	b.hi	a4dc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x13a8>  // b.pmore
    a464:	ldr	x1, [sp, #392]
    a468:	str	x1, [sp, #704]
    a46c:	ldr	w1, [sp, #208]
    a470:	cmp	w0, w1
    a474:	b.ne	a510 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x13dc>  // b.any
    a478:	ldr	x0, [sp, #704]
    a47c:	ldr	x1, [sp, #200]
    a480:	eor	x0, x0, x1
    a484:	str	x0, [sp, #704]
    a488:	ldr	w0, [sp, #712]
    a48c:	str	w0, [sp, #696]
    a490:	ldr	x0, [sp, #704]
    a494:	str	x0, [sp, #688]
    a498:	str	wzr, [sp, #712]
    a49c:	add	x1, sp, #0x2b0
    a4a0:	add	x0, sp, #0xf8
    a4a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a4a8:	ldr	w0, [sp, #696]
    a4ac:	cmp	w0, #0x40
    a4b0:	b.ls	a4c0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x138c>  // b.plast
    a4b4:	ldr	x0, [sp, #688]
    a4b8:	cbz	x0, a4c0 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x138c>
    a4bc:	bl	0 <_ZdaPv>
    a4c0:	ldr	w0, [sp, #712]
    a4c4:	cmp	w0, #0x40
    a4c8:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a4cc:	ldr	x0, [sp, #704]
    a4d0:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a4d4:	bl	0 <_ZdaPv>
    a4d8:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a4dc:	add	x1, sp, #0x188
    a4e0:	add	x0, sp, #0x2c0
    a4e4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    a4e8:	ldr	w0, [sp, #712]
    a4ec:	ldr	w1, [sp, #208]
    a4f0:	cmp	w0, w1
    a4f4:	b.ne	a510 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x13dc>  // b.any
    a4f8:	cmp	w0, #0x40
    a4fc:	b.ls	a478 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1344>  // b.plast
    a500:	add	x1, sp, #0xc8
    a504:	add	x0, sp, #0x2c0
    a508:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
    a50c:	b	a488 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1354>
    a510:	stp	x23, x24, [sp, #48]
    a514:	str	x25, [sp, #64]
    a518:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a51c:	add	x3, x3, #0x0
    a520:	mov	w2, #0x365                 	// #869
    a524:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a528:	add	x1, x1, #0x0
    a52c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a530:	add	x0, x0, #0x0
    a534:	bl	0 <__assert_fail>
    a538:	add	x0, sp, #0xc8
    a53c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a540:	mov	x19, x0
    a544:	ldr	w0, [sp, #400]
    a548:	str	w0, [sp, #728]
    a54c:	cmp	w0, #0x40
    a550:	b.hi	a5b4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1480>  // b.pmore
    a554:	ldr	x1, [sp, #392]
    a558:	str	x1, [sp, #720]
    a55c:	cmp	w19, w0
    a560:	b.hi	a5e4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x14b0>  // b.pmore
    a564:	mov	x2, #0x0                   	// #0
    a568:	cmp	w19, w0
    a56c:	b.eq	a578 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1444>  // b.none
    a570:	ldr	x2, [sp, #720]
    a574:	lsl	x2, x2, x19
    a578:	neg	w0, w0
    a57c:	mov	x1, #0xffffffffffffffff    	// #-1
    a580:	lsr	x0, x1, x0
    a584:	and	x0, x0, x2
    a588:	str	x0, [sp, #720]
    a58c:	add	x1, sp, #0x2d0
    a590:	add	x0, sp, #0xf8
    a594:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a598:	ldr	w0, [sp, #728]
    a59c:	cmp	w0, #0x40
    a5a0:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a5a4:	ldr	x0, [sp, #720]
    a5a8:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a5ac:	bl	0 <_ZdaPv>
    a5b0:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a5b4:	add	x1, sp, #0x188
    a5b8:	add	x0, sp, #0x2d0
    a5bc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    a5c0:	ldr	w0, [sp, #728]
    a5c4:	cmp	w19, w0
    a5c8:	b.hi	a5e4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x14b0>  // b.pmore
    a5cc:	cmp	w0, #0x40
    a5d0:	b.ls	a564 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1430>  // b.plast
    a5d4:	mov	w1, w19
    a5d8:	add	x0, sp, #0x2d0
    a5dc:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    a5e0:	b	a58c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1458>
    a5e4:	stp	x23, x24, [sp, #48]
    a5e8:	str	x25, [sp, #64]
    a5ec:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a5f0:	add	x3, x3, #0x0
    a5f4:	mov	w2, #0x39a                 	// #922
    a5f8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a5fc:	add	x1, x1, #0x0
    a600:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a604:	add	x0, x0, #0x0
    a608:	bl	0 <__assert_fail>
    a60c:	add	x0, sp, #0xc8
    a610:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a614:	mov	x19, x0
    a618:	ldr	w0, [sp, #400]
    a61c:	str	w0, [sp, #744]
    a620:	cmp	w0, #0x40
    a624:	b.hi	a650 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x151c>  // b.pmore
    a628:	ldr	x1, [sp, #392]
    a62c:	str	x1, [sp, #736]
    a630:	cmp	w19, w0
    a634:	b.hi	a6a4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1570>  // b.pmore
    a638:	cmp	w19, w0
    a63c:	b.eq	a6cc <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1598>  // b.none
    a640:	ldr	x0, [sp, #736]
    a644:	lsr	x19, x0, x19
    a648:	str	x19, [sp, #736]
    a64c:	b	a67c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1548>
    a650:	add	x1, sp, #0x188
    a654:	add	x0, sp, #0x2e0
    a658:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    a65c:	ldr	w0, [sp, #744]
    a660:	cmp	w19, w0
    a664:	b.hi	a6a4 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1570>  // b.pmore
    a668:	cmp	w0, #0x40
    a66c:	b.ls	a638 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1504>  // b.plast
    a670:	mov	w1, w19
    a674:	add	x0, sp, #0x2e0
    a678:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    a67c:	add	x1, sp, #0x2e0
    a680:	add	x0, sp, #0xf8
    a684:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a688:	ldr	w0, [sp, #744]
    a68c:	cmp	w0, #0x40
    a690:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a694:	ldr	x0, [sp, #736]
    a698:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a69c:	bl	0 <_ZdaPv>
    a6a0:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a6a4:	stp	x23, x24, [sp, #48]
    a6a8:	str	x25, [sp, #64]
    a6ac:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a6b0:	add	x3, x3, #0x0
    a6b4:	mov	w2, #0x3e3                 	// #995
    a6b8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a6bc:	add	x1, x1, #0x0
    a6c0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a6c4:	add	x0, x0, #0x0
    a6c8:	bl	0 <__assert_fail>
    a6cc:	str	xzr, [sp, #736]
    a6d0:	b	a67c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1548>
    a6d4:	add	x0, sp, #0xc8
    a6d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a6dc:	mov	x19, x0
    a6e0:	ldr	w0, [sp, #400]
    a6e4:	str	w0, [sp, #760]
    a6e8:	cmp	w0, #0x40
    a6ec:	b.hi	a73c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1608>  // b.pmore
    a6f0:	ldr	x1, [sp, #392]
    a6f4:	str	x1, [sp, #752]
    a6f8:	cmp	w19, w0
    a6fc:	b.hi	a790 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x165c>  // b.pmore
    a700:	ldr	x1, [sp, #752]
    a704:	cbz	w0, a7b8 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1684>
    a708:	mov	w2, #0x40                  	// #64
    a70c:	sub	w2, w2, w0
    a710:	lsl	x1, x1, x2
    a714:	asr	x1, x1, x2
    a718:	asr	x3, x1, #63
    a71c:	asr	x1, x1, x19
    a720:	cmp	w0, w19
    a724:	csel	x0, x1, x3, ne  // ne = any
    a728:	mov	x1, #0xffffffffffffffff    	// #-1
    a72c:	lsr	x1, x1, x2
    a730:	and	x0, x1, x0
    a734:	str	x0, [sp, #752]
    a738:	b	a768 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x1634>
    a73c:	add	x1, sp, #0x188
    a740:	add	x0, sp, #0x2f0
    a744:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    a748:	ldr	w0, [sp, #760]
    a74c:	cmp	w19, w0
    a750:	b.hi	a790 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x165c>  // b.pmore
    a754:	cmp	w0, #0x40
    a758:	b.ls	a700 <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0x15cc>  // b.plast
    a75c:	mov	w1, w19
    a760:	add	x0, sp, #0x2f0
    a764:	bl	0 <_ZN4llvm5APInt12ashrSlowCaseEj>
    a768:	add	x1, sp, #0x2f0
    a76c:	add	x0, sp, #0xf8
    a770:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a774:	ldr	w0, [sp, #760]
    a778:	cmp	w0, #0x40
    a77c:	b.ls	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>  // b.plast
    a780:	ldr	x0, [sp, #752]
    a784:	cbz	x0, a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a788:	bl	0 <_ZdaPv>
    a78c:	b	a01c <_ZN4llvm11Interpreter20getConstantExprValueEPNS_12ConstantExprERNS_16ExecutionContextE+0xee8>
    a790:	stp	x23, x24, [sp, #48]
    a794:	str	x25, [sp, #64]
    a798:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a79c:	add	x3, x3, #0x0
    a7a0:	mov	w2, #0x3cb                 	// #971
    a7a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7a8:	add	x1, x1, #0x0
    a7ac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7b0:	add	x0, x0, #0x0
    a7b4:	bl	0 <__assert_fail>
    a7b8:	stp	x23, x24, [sp, #48]
    a7bc:	str	x25, [sp, #64]
    a7c0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7c4:	add	x3, x3, #0x0
    a7c8:	mov	w2, #0x307                 	// #775
    a7cc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7d0:	add	x1, x1, #0x0
    a7d4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7d8:	add	x0, x0, #0x0
    a7dc:	bl	0 <__assert_fail>
    a7e0:	stp	x23, x24, [sp, #48]
    a7e4:	str	x25, [sp, #64]
    a7e8:	bl	0 <_ZN4llvm4dbgsEv>
    a7ec:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7f0:	add	x1, x1, #0x0
    a7f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a7f8:	mov	x20, x0
    a7fc:	mov	w2, #0x0                   	// #0
    a800:	mov	x1, x0
    a804:	mov	x0, x19
    a808:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    a80c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a810:	add	x1, x1, #0x0
    a814:	mov	x0, x20
    a818:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a81c:	mov	w2, #0x833                 	// #2099
    a820:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a824:	add	x1, x1, #0x0
    a828:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a82c:	add	x0, x0, #0x0
    a830:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>:
    a834:	stp	x29, x30, [sp, #-64]!
    a838:	mov	x29, sp
    a83c:	stp	x19, x20, [sp, #16]
    a840:	str	x0, [sp, #40]
    a844:	mov	x20, x1
    a848:	mov	x0, x2
    a84c:	ldr	x3, [x2, #48]
    a850:	add	x1, x2, #0x28
    a854:	cbz	x3, a904 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0xd0>
    a858:	ldr	x2, [sp, #40]
    a85c:	mov	x19, x1
    a860:	b	a86c <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x38>
    a864:	ldr	x3, [x3, #24]
    a868:	cbz	x3, a884 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x50>
    a86c:	ldr	x4, [x3, #32]
    a870:	cmp	x4, x2
    a874:	b.cc	a864 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x30>  // b.lo, b.ul, b.last
    a878:	mov	x19, x3
    a87c:	ldr	x3, [x3, #16]
    a880:	b	a868 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x34>
    a884:	cmp	x1, x19
    a888:	b.eq	a898 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x64>  // b.none
    a88c:	ldr	x1, [x19, #32]
    a890:	cmp	x1, x2
    a894:	b.ls	a8c0 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x8c>  // b.plast
    a898:	add	x1, sp, #0x28
    a89c:	str	x1, [sp, #56]
    a8a0:	add	x4, sp, #0x30
    a8a4:	add	x3, sp, #0x38
    a8a8:	adrp	x2, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a8ac:	add	x2, x2, #0x0
    a8b0:	mov	x1, x19
    a8b4:	add	x0, x0, #0x20
    a8b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a8bc:	mov	x19, x0
    a8c0:	mov	x1, x20
    a8c4:	ldr	x0, [x1], #8
    a8c8:	str	x0, [x19, #40]
    a8cc:	add	x0, x19, #0x30
    a8d0:	ldr	w2, [x0, #8]
    a8d4:	cmp	w2, #0x40
    a8d8:	b.hi	a8e8 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0xb4>  // b.pmore
    a8dc:	ldr	w2, [x20, #16]
    a8e0:	cmp	w2, #0x40
    a8e4:	b.ls	a90c <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0xd8>  // b.plast
    a8e8:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
    a8ec:	add	x1, x20, #0x18
    a8f0:	add	x0, x19, #0x40
    a8f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a8f8:	ldp	x19, x20, [sp, #16]
    a8fc:	ldp	x29, x30, [sp], #64
    a900:	ret
    a904:	mov	x19, x1
    a908:	b	a898 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x64>
    a90c:	ldr	x1, [x20, #8]
    a910:	str	x1, [x19, #48]
    a914:	ldr	w0, [x20, #16]
    a918:	str	w0, [x19, #56]
    a91c:	neg	w3, w0
    a920:	mov	x2, #0xffffffffffffffff    	// #-1
    a924:	lsr	x2, x2, x3
    a928:	cmp	w0, #0x40
    a92c:	b.hi	a93c <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0x108>  // b.pmore
    a930:	and	x1, x1, x2
    a934:	str	x1, [x19, #48]
    a938:	b	a8ec <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0xb8>
    a93c:	mov	w0, w0
    a940:	add	x0, x0, #0x3f
    a944:	lsr	x0, x0, #6
    a948:	sub	w0, w0, #0x1
    a94c:	ldr	x3, [x1, x0, lsl #3]
    a950:	and	x2, x3, x2
    a954:	str	x2, [x1, x0, lsl #3]
    a958:	b	a8ec <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE+0xb8>

000000000000a95c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE>:
    a95c:	stp	x29, x30, [sp, #-192]!
    a960:	mov	x29, sp
    a964:	stp	x19, x20, [sp, #16]
    a968:	str	x21, [sp, #32]
    a96c:	mov	x19, x1
    a970:	ldr	x20, [x0, #704]
    a974:	sub	x20, x20, #0x80
    a978:	ldur	x1, [x1, #-24]
    a97c:	ldr	x21, [x1]
    a980:	add	x8, sp, #0x90
    a984:	mov	x2, x20
    a988:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    a98c:	mov	w0, #0x1                   	// #1
    a990:	str	w0, [sp, #112]
    a994:	str	xzr, [sp, #104]
    a998:	str	xzr, [sp, #120]
    a99c:	str	xzr, [sp, #128]
    a9a0:	str	xzr, [sp, #136]
    a9a4:	str	wzr, [sp, #96]
    a9a8:	str	wzr, [sp, #100]
    a9ac:	ldrb	w0, [x21, #8]
    a9b0:	cmp	w0, #0x10
    a9b4:	b.eq	a9f4 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x98>  // b.none
    a9b8:	ldrb	w0, [x19, #16]
    a9bc:	cmp	w0, #0x24
    a9c0:	b.ne	ab58 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1fc>  // b.any
    a9c4:	add	x1, sp, #0x90
    a9c8:	add	x0, sp, #0x30
    a9cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    a9d0:	ldrb	w0, [x21, #8]
    a9d4:	cmp	w0, #0x2
    a9d8:	b.eq	ab70 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x214>  // b.none
    a9dc:	cmp	w0, #0x3
    a9e0:	b.ne	ac8c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x330>  // b.any
    a9e4:	ldr	d0, [sp, #48]
    a9e8:	fneg	d0, d0
    a9ec:	str	d0, [sp, #96]
    a9f0:	b	ab7c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x220>
    a9f4:	ldr	x0, [sp, #176]
    a9f8:	ldr	x1, [sp, #168]
    a9fc:	sub	x0, x0, x1
    aa00:	asr	x0, x0, #4
    aa04:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    aa08:	movk	x1, #0xaaab
    aa0c:	mul	x1, x0, x1
    aa10:	add	x0, sp, #0x78
    aa14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aa18:	ldrb	w0, [x19, #16]
    aa1c:	cmp	w0, #0x24
    aa20:	b.ne	aaa8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x14c>  // b.any
    aa24:	ldrb	w0, [x21, #8]
    aa28:	cmp	w0, #0x10
    aa2c:	b.ne	aac0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x164>  // b.any
    aa30:	ldr	x0, [x21, #24]
    aa34:	ldrb	w0, [x0, #8]
    aa38:	cmp	w0, #0x2
    aa3c:	b.eq	aae0 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x184>  // b.none
    aa40:	cmp	w0, #0x3
    aa44:	b.ne	ab40 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1e4>  // b.any
    aa48:	ldr	x3, [sp, #120]
    aa4c:	ldr	x0, [sp, #128]
    aa50:	cmp	x0, x3
    aa54:	b.eq	ab84 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x228>  // b.none
    aa58:	mov	w1, #0x0                   	// #0
    aa5c:	mov	x0, #0x0                   	// #0
    aa60:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    aa64:	movk	x4, #0xaaab
    aa68:	add	x0, x0, x0, lsl #1
    aa6c:	lsl	x0, x0, #4
    aa70:	ldr	x2, [sp, #168]
    aa74:	ldr	d0, [x2, x0]
    aa78:	fneg	d0, d0
    aa7c:	str	d0, [x3, x0]
    aa80:	add	w1, w1, #0x1
    aa84:	mov	w0, w1
    aa88:	ldr	x3, [sp, #120]
    aa8c:	ldr	x2, [sp, #128]
    aa90:	sub	x2, x2, x3
    aa94:	asr	x2, x2, #4
    aa98:	mul	x2, x2, x4
    aa9c:	cmp	x2, w1, uxtw
    aaa0:	b.hi	aa68 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x10c>  // b.pmore
    aaa4:	b	ab84 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x228>
    aaa8:	mov	w2, #0x4a                  	// #74
    aaac:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aab0:	add	x1, x1, #0x0
    aab4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aab8:	add	x0, x0, #0x0
    aabc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    aac0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aac4:	add	x3, x3, #0x0
    aac8:	mov	w2, #0x108                 	// #264
    aacc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aad0:	add	x1, x1, #0x0
    aad4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aad8:	add	x0, x0, #0x0
    aadc:	bl	0 <__assert_fail>
    aae0:	ldr	x3, [sp, #120]
    aae4:	ldr	x0, [sp, #128]
    aae8:	cmp	x0, x3
    aaec:	b.eq	ab84 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x228>  // b.none
    aaf0:	mov	w2, #0x0                   	// #0
    aaf4:	mov	x0, #0x0                   	// #0
    aaf8:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    aafc:	movk	x4, #0xaaab
    ab00:	add	x0, x0, x0, lsl #1
    ab04:	lsl	x0, x0, #4
    ab08:	ldr	x1, [sp, #168]
    ab0c:	ldr	s0, [x1, x0]
    ab10:	fneg	s0, s0
    ab14:	str	s0, [x3, x0]
    ab18:	add	w2, w2, #0x1
    ab1c:	mov	w0, w2
    ab20:	ldr	x3, [sp, #120]
    ab24:	ldr	x1, [sp, #128]
    ab28:	sub	x1, x1, x3
    ab2c:	asr	x1, x1, #4
    ab30:	mul	x1, x1, x4
    ab34:	cmp	x1, w2, uxtw
    ab38:	b.hi	ab00 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x1a4>  // b.pmore
    ab3c:	b	ab84 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x228>
    ab40:	mov	w2, #0x54                  	// #84
    ab44:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab48:	add	x1, x1, #0x0
    ab4c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab50:	add	x0, x0, #0x0
    ab54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ab58:	mov	w2, #0x5b                  	// #91
    ab5c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab60:	add	x1, x1, #0x0
    ab64:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab68:	add	x0, x0, #0x0
    ab6c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ab70:	ldr	s0, [sp, #48]
    ab74:	fneg	s0, s0
    ab78:	str	s0, [sp, #96]
    ab7c:	add	x0, sp, #0x30
    ab80:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab84:	add	x21, sp, #0x30
    ab88:	add	x1, sp, #0x60
    ab8c:	mov	x0, x21
    ab90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ab94:	mov	x2, x20
    ab98:	mov	x1, x21
    ab9c:	mov	x0, x19
    aba0:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    aba4:	ldr	x19, [sp, #72]
    aba8:	ldr	x20, [sp, #80]
    abac:	cmp	x19, x20
    abb0:	b.eq	abc8 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x26c>  // b.none
    abb4:	mov	x0, x19
    abb8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    abbc:	add	x19, x19, #0x30
    abc0:	cmp	x20, x19
    abc4:	b.ne	abb4 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x258>  // b.any
    abc8:	ldr	x0, [sp, #72]
    abcc:	cbz	x0, abd4 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x278>
    abd0:	bl	0 <_ZdlPv>
    abd4:	ldr	w0, [sp, #64]
    abd8:	cmp	w0, #0x40
    abdc:	b.ls	abec <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x290>  // b.plast
    abe0:	ldr	x0, [sp, #56]
    abe4:	cbz	x0, abec <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x290>
    abe8:	bl	0 <_ZdaPv>
    abec:	ldr	x19, [sp, #120]
    abf0:	ldr	x20, [sp, #128]
    abf4:	cmp	x19, x20
    abf8:	b.eq	ac10 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2b4>  // b.none
    abfc:	mov	x0, x19
    ac00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac04:	add	x19, x19, #0x30
    ac08:	cmp	x20, x19
    ac0c:	b.ne	abfc <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2a0>  // b.any
    ac10:	ldr	x0, [sp, #120]
    ac14:	cbz	x0, ac1c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2c0>
    ac18:	bl	0 <_ZdlPv>
    ac1c:	ldr	w0, [sp, #112]
    ac20:	cmp	w0, #0x40
    ac24:	b.ls	ac34 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2d8>  // b.plast
    ac28:	ldr	x0, [sp, #104]
    ac2c:	cbz	x0, ac34 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2d8>
    ac30:	bl	0 <_ZdaPv>
    ac34:	ldr	x19, [sp, #168]
    ac38:	ldr	x20, [sp, #176]
    ac3c:	cmp	x19, x20
    ac40:	b.eq	ac58 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2fc>  // b.none
    ac44:	mov	x0, x19
    ac48:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac4c:	add	x19, x19, #0x30
    ac50:	cmp	x20, x19
    ac54:	b.ne	ac44 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x2e8>  // b.any
    ac58:	ldr	x0, [sp, #168]
    ac5c:	cbz	x0, ac64 <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x308>
    ac60:	bl	0 <_ZdlPv>
    ac64:	ldr	w0, [sp, #160]
    ac68:	cmp	w0, #0x40
    ac6c:	b.ls	ac7c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x320>  // b.plast
    ac70:	ldr	x0, [sp, #152]
    ac74:	cbz	x0, ac7c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE+0x320>
    ac78:	bl	0 <_ZdaPv>
    ac7c:	ldp	x19, x20, [sp, #16]
    ac80:	ldr	x21, [sp, #32]
    ac84:	ldp	x29, x30, [sp], #192
    ac88:	ret
    ac8c:	mov	w2, #0x3a                  	// #58
    ac90:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac94:	add	x1, x1, #0x0
    ac98:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ac9c:	add	x0, x0, #0x0
    aca0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000aca4 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE>:
    aca4:	stp	x29, x30, [sp, #-352]!
    aca8:	mov	x29, sp
    acac:	stp	x19, x20, [sp, #16]
    acb0:	stp	x21, x22, [sp, #32]
    acb4:	stp	x23, x24, [sp, #48]
    acb8:	mov	x20, x0
    acbc:	mov	x19, x1
    acc0:	ldr	x21, [x0, #704]
    acc4:	sub	x21, x21, #0x80
    acc8:	ldur	x1, [x1, #-48]
    accc:	ldr	x22, [x1]
    acd0:	add	x8, sp, #0x130
    acd4:	mov	x2, x21
    acd8:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    acdc:	add	x8, sp, #0x100
    ace0:	mov	x2, x21
    ace4:	ldur	x1, [x19, #-24]
    ace8:	mov	x0, x20
    acec:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    acf0:	mov	w0, #0x1                   	// #1
    acf4:	str	w0, [sp, #224]
    acf8:	str	xzr, [sp, #216]
    acfc:	str	xzr, [sp, #232]
    ad00:	str	xzr, [sp, #240]
    ad04:	str	xzr, [sp, #248]
    ad08:	str	wzr, [sp, #208]
    ad0c:	str	wzr, [sp, #212]
    ad10:	ldrh	w0, [x19, #18]
    ad14:	and	w0, w0, #0xffff7fff
    ad18:	cmp	w0, #0x25
    ad1c:	b.eq	b188 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x4e4>  // b.none
    ad20:	b.hi	ae40 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x19c>  // b.pmore
    ad24:	cmp	w0, #0x22
    ad28:	b.eq	b098 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x3f4>  // b.none
    ad2c:	b.ls	adb8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x114>  // b.plast
    ad30:	cmp	w0, #0x23
    ad34:	b.eq	b200 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x55c>  // b.none
    ad38:	cmp	w0, #0x24
    ad3c:	b.ne	b278 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x5d4>  // b.any
    ad40:	add	x20, sp, #0x40
    ad44:	add	x1, sp, #0x130
    ad48:	mov	x0, x20
    ad4c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ad50:	add	x23, sp, #0x70
    ad54:	add	x1, sp, #0x100
    ad58:	mov	x0, x23
    ad5c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ad60:	add	x24, sp, #0xa0
    ad64:	mov	x8, x24
    ad68:	mov	x2, x22
    ad6c:	mov	x1, x23
    ad70:	mov	x0, x20
    ad74:	bl	a10 <_ZL15executeICMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    ad78:	ldr	x0, [sp, #160]
    ad7c:	str	x0, [sp, #208]
    ad80:	add	x22, sp, #0xd0
    ad84:	add	x1, x24, #0x8
    ad88:	add	x0, sp, #0xd8
    ad8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ad90:	add	x1, x24, #0x18
    ad94:	add	x0, x22, #0x18
    ad98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ad9c:	mov	x0, x24
    ada0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ada4:	mov	x0, x23
    ada8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    adac:	mov	x0, x20
    adb0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    adb4:	b	afc8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x324>
    adb8:	cmp	w0, #0x20
    adbc:	b.eq	af54 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x2b0>  // b.none
    adc0:	cmp	w0, #0x21
    adc4:	b.ne	b278 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x5d4>  // b.any
    adc8:	add	x20, sp, #0x40
    adcc:	add	x1, sp, #0x130
    add0:	mov	x0, x20
    add4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    add8:	add	x23, sp, #0x70
    addc:	add	x1, sp, #0x100
    ade0:	mov	x0, x23
    ade4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ade8:	add	x24, sp, #0xa0
    adec:	mov	x8, x24
    adf0:	mov	x2, x22
    adf4:	mov	x1, x23
    adf8:	mov	x0, x20
    adfc:	bl	75c <_ZL14executeICMP_NEN4llvm12GenericValueES0_PNS_4TypeE>
    ae00:	ldr	x0, [sp, #160]
    ae04:	str	x0, [sp, #208]
    ae08:	add	x22, sp, #0xd0
    ae0c:	add	x1, x24, #0x8
    ae10:	add	x0, sp, #0xd8
    ae14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae18:	add	x1, x24, #0x18
    ae1c:	add	x0, x22, #0x18
    ae20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae24:	mov	x0, x24
    ae28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae2c:	mov	x0, x23
    ae30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae34:	mov	x0, x20
    ae38:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae3c:	b	afc8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x324>
    ae40:	cmp	w0, #0x28
    ae44:	b.eq	b020 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x37c>  // b.none
    ae48:	b.ls	aecc <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x228>  // b.plast
    ae4c:	cmp	w0, #0x29
    ae50:	b.ne	b278 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x5d4>  // b.any
    ae54:	add	x20, sp, #0x40
    ae58:	add	x1, sp, #0x130
    ae5c:	mov	x0, x20
    ae60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae64:	add	x23, sp, #0x70
    ae68:	add	x1, sp, #0x100
    ae6c:	mov	x0, x23
    ae70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ae74:	add	x24, sp, #0xa0
    ae78:	mov	x8, x24
    ae7c:	mov	x2, x22
    ae80:	mov	x1, x23
    ae84:	mov	x0, x20
    ae88:	bl	143c <_ZL15executeICMP_SLEN4llvm12GenericValueES0_PNS_4TypeE>
    ae8c:	ldr	x0, [sp, #160]
    ae90:	str	x0, [sp, #208]
    ae94:	add	x22, sp, #0xd0
    ae98:	add	x1, x24, #0x8
    ae9c:	add	x0, sp, #0xd8
    aea0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aea4:	add	x1, x24, #0x18
    aea8:	add	x0, x22, #0x18
    aeac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aeb0:	mov	x0, x24
    aeb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aeb8:	mov	x0, x23
    aebc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aec0:	mov	x0, x20
    aec4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aec8:	b	afc8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x324>
    aecc:	cmp	w0, #0x26
    aed0:	b.eq	b110 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x46c>  // b.none
    aed4:	cmp	w0, #0x27
    aed8:	b.ne	b278 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x5d4>  // b.any
    aedc:	add	x20, sp, #0x40
    aee0:	add	x1, sp, #0x130
    aee4:	mov	x0, x20
    aee8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aeec:	add	x23, sp, #0x70
    aef0:	add	x1, sp, #0x100
    aef4:	mov	x0, x23
    aef8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aefc:	add	x24, sp, #0xa0
    af00:	mov	x8, x24
    af04:	mov	x2, x22
    af08:	mov	x1, x23
    af0c:	mov	x0, x20
    af10:	bl	1854 <_ZL15executeICMP_SGEN4llvm12GenericValueES0_PNS_4TypeE>
    af14:	ldr	x0, [sp, #160]
    af18:	str	x0, [sp, #208]
    af1c:	add	x22, sp, #0xd0
    af20:	add	x1, x24, #0x8
    af24:	add	x0, sp, #0xd8
    af28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af2c:	add	x1, x24, #0x18
    af30:	add	x0, x22, #0x18
    af34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af38:	mov	x0, x24
    af3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af40:	mov	x0, x23
    af44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af48:	mov	x0, x20
    af4c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af50:	b	afc8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x324>
    af54:	add	x20, sp, #0x40
    af58:	add	x1, sp, #0x130
    af5c:	mov	x0, x20
    af60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af64:	add	x23, sp, #0x70
    af68:	add	x1, sp, #0x100
    af6c:	mov	x0, x23
    af70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    af74:	add	x24, sp, #0xa0
    af78:	mov	x8, x24
    af7c:	mov	x2, x22
    af80:	mov	x1, x23
    af84:	mov	x0, x20
    af88:	bl	4b0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    af8c:	ldr	x0, [sp, #160]
    af90:	str	x0, [sp, #208]
    af94:	add	x22, sp, #0xd0
    af98:	add	x1, x24, #0x8
    af9c:	add	x0, sp, #0xd8
    afa0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    afa4:	add	x1, x24, #0x18
    afa8:	add	x0, x22, #0x18
    afac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    afb0:	mov	x0, x24
    afb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    afb8:	mov	x0, x23
    afbc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    afc0:	mov	x0, x20
    afc4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    afc8:	add	x22, sp, #0xd0
    afcc:	add	x20, sp, #0xa0
    afd0:	mov	x1, x22
    afd4:	mov	x0, x20
    afd8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    afdc:	mov	x2, x21
    afe0:	mov	x1, x20
    afe4:	mov	x0, x19
    afe8:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    afec:	mov	x0, x20
    aff0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    aff4:	mov	x0, x22
    aff8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    affc:	add	x0, sp, #0x100
    b000:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b004:	add	x0, sp, #0x130
    b008:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b00c:	ldp	x19, x20, [sp, #16]
    b010:	ldp	x21, x22, [sp, #32]
    b014:	ldp	x23, x24, [sp, #48]
    b018:	ldp	x29, x30, [sp], #352
    b01c:	ret
    b020:	add	x20, sp, #0x40
    b024:	add	x1, sp, #0x130
    b028:	mov	x0, x20
    b02c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b030:	add	x23, sp, #0x70
    b034:	add	x1, sp, #0x100
    b038:	mov	x0, x23
    b03c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b040:	add	x24, sp, #0xa0
    b044:	mov	x8, x24
    b048:	mov	x2, x22
    b04c:	mov	x1, x23
    b050:	mov	x0, x20
    b054:	bl	c14 <_ZL15executeICMP_SLTN4llvm12GenericValueES0_PNS_4TypeE>
    b058:	ldr	x0, [sp, #160]
    b05c:	str	x0, [sp, #208]
    b060:	add	x22, sp, #0xd0
    b064:	add	x1, x24, #0x8
    b068:	add	x0, sp, #0xd8
    b06c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b070:	add	x1, x24, #0x18
    b074:	add	x0, x22, #0x18
    b078:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b07c:	mov	x0, x24
    b080:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b084:	mov	x0, x23
    b088:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b08c:	mov	x0, x20
    b090:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b094:	b	afc8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x324>
    b098:	add	x20, sp, #0x40
    b09c:	add	x1, sp, #0x130
    b0a0:	mov	x0, x20
    b0a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b0a8:	add	x23, sp, #0x70
    b0ac:	add	x1, sp, #0x100
    b0b0:	mov	x0, x23
    b0b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b0b8:	add	x24, sp, #0xa0
    b0bc:	mov	x8, x24
    b0c0:	mov	x2, x22
    b0c4:	mov	x1, x23
    b0c8:	mov	x0, x20
    b0cc:	bl	e18 <_ZL15executeICMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    b0d0:	ldr	x0, [sp, #160]
    b0d4:	str	x0, [sp, #208]
    b0d8:	add	x22, sp, #0xd0
    b0dc:	add	x1, x24, #0x8
    b0e0:	add	x0, sp, #0xd8
    b0e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b0e8:	add	x1, x24, #0x18
    b0ec:	add	x0, x22, #0x18
    b0f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b0f4:	mov	x0, x24
    b0f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b0fc:	mov	x0, x23
    b100:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b104:	mov	x0, x20
    b108:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b10c:	b	afc8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x324>
    b110:	add	x20, sp, #0x40
    b114:	add	x1, sp, #0x130
    b118:	mov	x0, x20
    b11c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b120:	add	x23, sp, #0x70
    b124:	add	x1, sp, #0x100
    b128:	mov	x0, x23
    b12c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b130:	add	x24, sp, #0xa0
    b134:	mov	x8, x24
    b138:	mov	x2, x22
    b13c:	mov	x1, x23
    b140:	mov	x0, x20
    b144:	bl	1024 <_ZL15executeICMP_SGTN4llvm12GenericValueES0_PNS_4TypeE>
    b148:	ldr	x0, [sp, #160]
    b14c:	str	x0, [sp, #208]
    b150:	add	x22, sp, #0xd0
    b154:	add	x1, x24, #0x8
    b158:	add	x0, sp, #0xd8
    b15c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b160:	add	x1, x24, #0x18
    b164:	add	x0, x22, #0x18
    b168:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b16c:	mov	x0, x24
    b170:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b174:	mov	x0, x23
    b178:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b17c:	mov	x0, x20
    b180:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b184:	b	afc8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x324>
    b188:	add	x20, sp, #0x40
    b18c:	add	x1, sp, #0x130
    b190:	mov	x0, x20
    b194:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b198:	add	x23, sp, #0x70
    b19c:	add	x1, sp, #0x100
    b1a0:	mov	x0, x23
    b1a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1a8:	add	x24, sp, #0xa0
    b1ac:	mov	x8, x24
    b1b0:	mov	x2, x22
    b1b4:	mov	x1, x23
    b1b8:	mov	x0, x20
    b1bc:	bl	1230 <_ZL15executeICMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    b1c0:	ldr	x0, [sp, #160]
    b1c4:	str	x0, [sp, #208]
    b1c8:	add	x22, sp, #0xd0
    b1cc:	add	x1, x24, #0x8
    b1d0:	add	x0, sp, #0xd8
    b1d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1d8:	add	x1, x24, #0x18
    b1dc:	add	x0, x22, #0x18
    b1e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1e4:	mov	x0, x24
    b1e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1ec:	mov	x0, x23
    b1f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1f4:	mov	x0, x20
    b1f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b1fc:	b	afc8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x324>
    b200:	add	x20, sp, #0x40
    b204:	add	x1, sp, #0x130
    b208:	mov	x0, x20
    b20c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b210:	add	x23, sp, #0x70
    b214:	add	x1, sp, #0x100
    b218:	mov	x0, x23
    b21c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b220:	add	x24, sp, #0xa0
    b224:	mov	x8, x24
    b228:	mov	x2, x22
    b22c:	mov	x1, x23
    b230:	mov	x0, x20
    b234:	bl	1648 <_ZL15executeICMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    b238:	ldr	x0, [sp, #160]
    b23c:	str	x0, [sp, #208]
    b240:	add	x22, sp, #0xd0
    b244:	add	x1, x24, #0x8
    b248:	add	x0, sp, #0xd8
    b24c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b250:	add	x1, x24, #0x18
    b254:	add	x0, x22, #0x18
    b258:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b25c:	mov	x0, x24
    b260:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b264:	mov	x0, x23
    b268:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b26c:	mov	x0, x20
    b270:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b274:	b	afc8 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE+0x324>
    b278:	bl	0 <_ZN4llvm4dbgsEv>
    b27c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b280:	add	x1, x1, #0x0
    b284:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b288:	mov	w2, #0x0                   	// #0
    b28c:	mov	x1, x0
    b290:	mov	x0, x19
    b294:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    b298:	mov	w2, #0x15f                 	// #351
    b29c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b2a0:	add	x1, x1, #0x0
    b2a4:	mov	x0, #0x0                   	// #0
    b2a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000b2ac <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE>:
    b2ac:	stp	x29, x30, [sp, #-352]!
    b2b0:	mov	x29, sp
    b2b4:	stp	x19, x20, [sp, #16]
    b2b8:	stp	x21, x22, [sp, #32]
    b2bc:	stp	x23, x24, [sp, #48]
    b2c0:	mov	x20, x0
    b2c4:	mov	x19, x1
    b2c8:	ldr	x21, [x0, #704]
    b2cc:	sub	x21, x21, #0x80
    b2d0:	ldur	x1, [x1, #-48]
    b2d4:	ldr	x22, [x1]
    b2d8:	add	x8, sp, #0x130
    b2dc:	mov	x2, x21
    b2e0:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    b2e4:	add	x8, sp, #0x100
    b2e8:	mov	x2, x21
    b2ec:	ldur	x1, [x19, #-24]
    b2f0:	mov	x0, x20
    b2f4:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    b2f8:	mov	w0, #0x1                   	// #1
    b2fc:	str	w0, [sp, #224]
    b300:	str	xzr, [sp, #216]
    b304:	str	xzr, [sp, #232]
    b308:	str	xzr, [sp, #240]
    b30c:	str	xzr, [sp, #248]
    b310:	str	wzr, [sp, #208]
    b314:	str	wzr, [sp, #212]
    b318:	ldrh	w0, [x19, #18]
    b31c:	and	w0, w0, #0xffff7fff
    b320:	cmp	w0, #0x8
    b324:	b.eq	b874 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x5c8>  // b.none
    b328:	b.hi	b550 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x2a4>  // b.pmore
    b32c:	cmp	w0, #0x4
    b330:	b.eq	ba54 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x7a8>  // b.none
    b334:	b.hi	b448 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x19c>  // b.pmore
    b338:	cmp	w0, #0x2
    b33c:	b.eq	bb44 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x898>  // b.none
    b340:	b.ls	b3c4 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x118>  // b.plast
    b344:	cmp	w0, #0x3
    b348:	b.ne	b770 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x4c4>  // b.any
    b34c:	add	x20, sp, #0x40
    b350:	add	x1, sp, #0x130
    b354:	mov	x0, x20
    b358:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b35c:	add	x23, sp, #0x70
    b360:	add	x1, sp, #0x100
    b364:	mov	x0, x23
    b368:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b36c:	add	x24, sp, #0xa0
    b370:	mov	x8, x24
    b374:	mov	x2, x22
    b378:	mov	x1, x23
    b37c:	mov	x0, x20
    b380:	bl	5208 <_ZL15executeFCMP_OGEN4llvm12GenericValueES0_PNS_4TypeE>
    b384:	ldr	x0, [sp, #160]
    b388:	str	x0, [sp, #208]
    b38c:	add	x22, sp, #0xd0
    b390:	add	x1, x24, #0x8
    b394:	add	x0, sp, #0xd8
    b398:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b39c:	add	x1, x24, #0x18
    b3a0:	add	x0, x22, #0x18
    b3a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b3a8:	mov	x0, x24
    b3ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b3b0:	mov	x0, x23
    b3b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b3b8:	mov	x0, x20
    b3bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b3c0:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b3c4:	cbz	w0, b7a4 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x4f8>
    b3c8:	cmp	w0, #0x1
    b3cc:	b.ne	b770 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x4c4>  // b.any
    b3d0:	add	x20, sp, #0x40
    b3d4:	add	x1, sp, #0x130
    b3d8:	mov	x0, x20
    b3dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b3e0:	add	x23, sp, #0x70
    b3e4:	add	x1, sp, #0x100
    b3e8:	mov	x0, x23
    b3ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b3f0:	add	x24, sp, #0xa0
    b3f4:	mov	x8, x24
    b3f8:	mov	x2, x22
    b3fc:	mov	x1, x23
    b400:	mov	x0, x20
    b404:	bl	2000 <_ZL15executeFCMP_OEQN4llvm12GenericValueES0_PNS_4TypeE>
    b408:	ldr	x0, [sp, #160]
    b40c:	str	x0, [sp, #208]
    b410:	add	x22, sp, #0xd0
    b414:	add	x1, x24, #0x8
    b418:	add	x0, sp, #0xd8
    b41c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b420:	add	x1, x24, #0x18
    b424:	add	x0, x22, #0x18
    b428:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b42c:	mov	x0, x24
    b430:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b434:	mov	x0, x23
    b438:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b43c:	mov	x0, x20
    b440:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b444:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b448:	cmp	w0, #0x6
    b44c:	b.eq	b964 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x6b8>  // b.none
    b450:	cmp	w0, #0x7
    b454:	b.ne	b4d0 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x224>  // b.any
    b458:	add	x20, sp, #0x40
    b45c:	add	x1, sp, #0x130
    b460:	mov	x0, x20
    b464:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b468:	add	x23, sp, #0x70
    b46c:	add	x1, sp, #0x100
    b470:	mov	x0, x23
    b474:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b478:	add	x24, sp, #0xa0
    b47c:	mov	x8, x24
    b480:	mov	x2, x22
    b484:	mov	x1, x23
    b488:	mov	x0, x20
    b48c:	bl	1a60 <_ZL15executeFCMP_ORDN4llvm12GenericValueES0_PNS_4TypeE>
    b490:	ldr	x0, [sp, #160]
    b494:	str	x0, [sp, #208]
    b498:	add	x22, sp, #0xd0
    b49c:	add	x1, x24, #0x8
    b4a0:	add	x0, sp, #0xd8
    b4a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b4a8:	add	x1, x24, #0x18
    b4ac:	add	x0, x22, #0x18
    b4b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b4b4:	mov	x0, x24
    b4b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b4bc:	mov	x0, x23
    b4c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b4c4:	mov	x0, x20
    b4c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b4cc:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b4d0:	cmp	w0, #0x5
    b4d4:	b.ne	b770 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x4c4>  // b.any
    b4d8:	add	x20, sp, #0x40
    b4dc:	add	x1, sp, #0x130
    b4e0:	mov	x0, x20
    b4e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b4e8:	add	x23, sp, #0x70
    b4ec:	add	x1, sp, #0x100
    b4f0:	mov	x0, x23
    b4f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b4f8:	add	x24, sp, #0xa0
    b4fc:	mov	x8, x24
    b500:	mov	x2, x22
    b504:	mov	x1, x23
    b508:	mov	x0, x20
    b50c:	bl	48f4 <_ZL15executeFCMP_OLEN4llvm12GenericValueES0_PNS_4TypeE>
    b510:	ldr	x0, [sp, #160]
    b514:	str	x0, [sp, #208]
    b518:	add	x22, sp, #0xd0
    b51c:	add	x1, x24, #0x8
    b520:	add	x0, sp, #0xd8
    b524:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b528:	add	x1, x24, #0x18
    b52c:	add	x0, x22, #0x18
    b530:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b534:	mov	x0, x24
    b538:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b53c:	mov	x0, x23
    b540:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b544:	mov	x0, x20
    b548:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b54c:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b550:	cmp	w0, #0xc
    b554:	b.eq	b9dc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x730>  // b.none
    b558:	b.ls	b5e8 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x33c>  // b.plast
    b55c:	cmp	w0, #0xe
    b560:	b.eq	b8ec <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x640>  // b.none
    b564:	cmp	w0, #0xf
    b568:	b.ne	b6f0 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x444>  // b.any
    b56c:	add	x20, sp, #0x40
    b570:	add	x1, sp, #0x130
    b574:	mov	x0, x20
    b578:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b57c:	add	x23, sp, #0x70
    b580:	add	x1, sp, #0x100
    b584:	mov	x0, x23
    b588:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b58c:	add	x24, sp, #0xa0
    b590:	mov	x8, x24
    b594:	mov	w3, #0x1                   	// #1
    b598:	mov	x2, x22
    b59c:	mov	x1, x23
    b5a0:	mov	x0, x20
    b5a4:	bl	5b1c <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    b5a8:	ldr	x0, [sp, #160]
    b5ac:	str	x0, [sp, #208]
    b5b0:	add	x22, sp, #0xd0
    b5b4:	add	x1, x24, #0x8
    b5b8:	add	x0, sp, #0xd8
    b5bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b5c0:	add	x1, x24, #0x18
    b5c4:	add	x0, x22, #0x18
    b5c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b5cc:	mov	x0, x24
    b5d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b5d4:	mov	x0, x23
    b5d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b5dc:	mov	x0, x20
    b5e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b5e4:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b5e8:	cmp	w0, #0xa
    b5ec:	b.eq	bacc <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x820>  // b.none
    b5f0:	cmp	w0, #0xb
    b5f4:	b.ne	b670 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x3c4>  // b.any
    b5f8:	add	x20, sp, #0x40
    b5fc:	add	x1, sp, #0x130
    b600:	mov	x0, x20
    b604:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b608:	add	x23, sp, #0x70
    b60c:	add	x1, sp, #0x100
    b610:	mov	x0, x23
    b614:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b618:	add	x24, sp, #0xa0
    b61c:	mov	x8, x24
    b620:	mov	x2, x22
    b624:	mov	x1, x23
    b628:	mov	x0, x20
    b62c:	bl	5520 <_ZL15executeFCMP_UGEN4llvm12GenericValueES0_PNS_4TypeE>
    b630:	ldr	x0, [sp, #160]
    b634:	str	x0, [sp, #208]
    b638:	add	x22, sp, #0xd0
    b63c:	add	x1, x24, #0x8
    b640:	add	x0, sp, #0xd8
    b644:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b648:	add	x1, x24, #0x18
    b64c:	add	x0, x22, #0x18
    b650:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b654:	mov	x0, x24
    b658:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b65c:	mov	x0, x23
    b660:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b664:	mov	x0, x20
    b668:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b66c:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b670:	cmp	w0, #0x9
    b674:	b.ne	b770 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x4c4>  // b.any
    b678:	add	x20, sp, #0x40
    b67c:	add	x1, sp, #0x130
    b680:	mov	x0, x20
    b684:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b688:	add	x23, sp, #0x70
    b68c:	add	x1, sp, #0x100
    b690:	mov	x0, x23
    b694:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b698:	add	x24, sp, #0xa0
    b69c:	mov	x8, x24
    b6a0:	mov	x2, x22
    b6a4:	mov	x1, x23
    b6a8:	mov	x0, x20
    b6ac:	bl	2318 <_ZL15executeFCMP_UEQN4llvm12GenericValueES0_PNS_4TypeE>
    b6b0:	ldr	x0, [sp, #160]
    b6b4:	str	x0, [sp, #208]
    b6b8:	add	x22, sp, #0xd0
    b6bc:	add	x1, x24, #0x8
    b6c0:	add	x0, sp, #0xd8
    b6c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b6c8:	add	x1, x24, #0x18
    b6cc:	add	x0, x22, #0x18
    b6d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b6d4:	mov	x0, x24
    b6d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b6dc:	mov	x0, x23
    b6e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b6e4:	mov	x0, x20
    b6e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b6ec:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b6f0:	cmp	w0, #0xd
    b6f4:	b.ne	b770 <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x4c4>  // b.any
    b6f8:	add	x20, sp, #0x40
    b6fc:	add	x1, sp, #0x130
    b700:	mov	x0, x20
    b704:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b708:	add	x23, sp, #0x70
    b70c:	add	x1, sp, #0x100
    b710:	mov	x0, x23
    b714:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b718:	add	x24, sp, #0xa0
    b71c:	mov	x8, x24
    b720:	mov	x2, x22
    b724:	mov	x1, x23
    b728:	mov	x0, x20
    b72c:	bl	4c0c <_ZL15executeFCMP_ULEN4llvm12GenericValueES0_PNS_4TypeE>
    b730:	ldr	x0, [sp, #160]
    b734:	str	x0, [sp, #208]
    b738:	add	x22, sp, #0xd0
    b73c:	add	x1, x24, #0x8
    b740:	add	x0, sp, #0xd8
    b744:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b748:	add	x1, x24, #0x18
    b74c:	add	x0, x22, #0x18
    b750:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b754:	mov	x0, x24
    b758:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b75c:	mov	x0, x23
    b760:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b764:	mov	x0, x20
    b768:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b76c:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b770:	bl	0 <_ZN4llvm4dbgsEv>
    b774:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b778:	add	x1, x1, #0x0
    b77c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b780:	mov	w2, #0x0                   	// #0
    b784:	mov	x1, x0
    b788:	mov	x0, x19
    b78c:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    b790:	mov	w2, #0x2a1                 	// #673
    b794:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b798:	add	x1, x1, #0x0
    b79c:	mov	x0, #0x0                   	// #0
    b7a0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b7a4:	add	x20, sp, #0x40
    b7a8:	add	x1, sp, #0x130
    b7ac:	mov	x0, x20
    b7b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b7b4:	add	x23, sp, #0x70
    b7b8:	add	x1, sp, #0x100
    b7bc:	mov	x0, x23
    b7c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b7c4:	add	x24, sp, #0xa0
    b7c8:	mov	x8, x24
    b7cc:	mov	w3, #0x0                   	// #0
    b7d0:	mov	x2, x22
    b7d4:	mov	x1, x23
    b7d8:	mov	x0, x20
    b7dc:	bl	5b1c <_ZL16executeFCMP_BOOLN4llvm12GenericValueES0_PNS_4TypeEb>
    b7e0:	ldr	x0, [sp, #160]
    b7e4:	str	x0, [sp, #208]
    b7e8:	add	x22, sp, #0xd0
    b7ec:	add	x1, x24, #0x8
    b7f0:	add	x0, sp, #0xd8
    b7f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b7f8:	add	x1, x24, #0x18
    b7fc:	add	x0, x22, #0x18
    b800:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b804:	mov	x0, x24
    b808:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b80c:	mov	x0, x23
    b810:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b814:	mov	x0, x20
    b818:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b81c:	add	x22, sp, #0xd0
    b820:	add	x20, sp, #0xa0
    b824:	mov	x1, x22
    b828:	mov	x0, x20
    b82c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b830:	mov	x2, x21
    b834:	mov	x1, x20
    b838:	mov	x0, x19
    b83c:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    b840:	mov	x0, x20
    b844:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b848:	mov	x0, x22
    b84c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b850:	add	x0, sp, #0x100
    b854:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b858:	add	x0, sp, #0x130
    b85c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b860:	ldp	x19, x20, [sp, #16]
    b864:	ldp	x21, x22, [sp, #32]
    b868:	ldp	x23, x24, [sp, #48]
    b86c:	ldp	x29, x30, [sp], #352
    b870:	ret
    b874:	add	x20, sp, #0x40
    b878:	add	x1, sp, #0x130
    b87c:	mov	x0, x20
    b880:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b884:	add	x23, sp, #0x70
    b888:	add	x1, sp, #0x100
    b88c:	mov	x0, x23
    b890:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b894:	add	x24, sp, #0xa0
    b898:	mov	x8, x24
    b89c:	mov	x2, x22
    b8a0:	mov	x1, x23
    b8a4:	mov	x0, x20
    b8a8:	bl	1d40 <_ZL15executeFCMP_UNON4llvm12GenericValueES0_PNS_4TypeE>
    b8ac:	ldr	x0, [sp, #160]
    b8b0:	str	x0, [sp, #208]
    b8b4:	add	x22, sp, #0xd0
    b8b8:	add	x1, x24, #0x8
    b8bc:	add	x0, sp, #0xd8
    b8c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b8c4:	add	x1, x24, #0x18
    b8c8:	add	x0, x22, #0x18
    b8cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b8d0:	mov	x0, x24
    b8d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b8d8:	mov	x0, x23
    b8dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b8e0:	mov	x0, x20
    b8e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b8e8:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b8ec:	add	x20, sp, #0x40
    b8f0:	add	x1, sp, #0x130
    b8f4:	mov	x0, x20
    b8f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b8fc:	add	x23, sp, #0x70
    b900:	add	x1, sp, #0x100
    b904:	mov	x0, x23
    b908:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b90c:	add	x24, sp, #0xa0
    b910:	mov	x8, x24
    b914:	mov	x2, x22
    b918:	mov	x1, x23
    b91c:	mov	x0, x20
    b920:	bl	311c <_ZL15executeFCMP_UNEN4llvm12GenericValueES0_PNS_4TypeE>
    b924:	ldr	x0, [sp, #160]
    b928:	str	x0, [sp, #208]
    b92c:	add	x22, sp, #0xd0
    b930:	add	x1, x24, #0x8
    b934:	add	x0, sp, #0xd8
    b938:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b93c:	add	x1, x24, #0x18
    b940:	add	x0, x22, #0x18
    b944:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b948:	mov	x0, x24
    b94c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b950:	mov	x0, x23
    b954:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b958:	mov	x0, x20
    b95c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b960:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b964:	add	x20, sp, #0x40
    b968:	add	x1, sp, #0x130
    b96c:	mov	x0, x20
    b970:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b974:	add	x23, sp, #0x70
    b978:	add	x1, sp, #0x100
    b97c:	mov	x0, x23
    b980:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b984:	add	x24, sp, #0xa0
    b988:	mov	x8, x24
    b98c:	mov	x2, x22
    b990:	mov	x1, x23
    b994:	mov	x0, x20
    b998:	bl	2914 <_ZL15executeFCMP_ONEN4llvm12GenericValueES0_PNS_4TypeE>
    b99c:	ldr	x0, [sp, #160]
    b9a0:	str	x0, [sp, #208]
    b9a4:	add	x22, sp, #0xd0
    b9a8:	add	x1, x24, #0x8
    b9ac:	add	x0, sp, #0xd8
    b9b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b9b4:	add	x1, x24, #0x18
    b9b8:	add	x0, x22, #0x18
    b9bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b9c0:	mov	x0, x24
    b9c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b9c8:	mov	x0, x23
    b9cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b9d0:	mov	x0, x20
    b9d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b9d8:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    b9dc:	add	x20, sp, #0x40
    b9e0:	add	x1, sp, #0x130
    b9e4:	mov	x0, x20
    b9e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b9ec:	add	x23, sp, #0x70
    b9f0:	add	x1, sp, #0x100
    b9f4:	mov	x0, x23
    b9f8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    b9fc:	add	x24, sp, #0xa0
    ba00:	mov	x8, x24
    ba04:	mov	x2, x22
    ba08:	mov	x1, x23
    ba0c:	mov	x0, x20
    ba10:	bl	3a30 <_ZL15executeFCMP_ULTN4llvm12GenericValueES0_PNS_4TypeE>
    ba14:	ldr	x0, [sp, #160]
    ba18:	str	x0, [sp, #208]
    ba1c:	add	x22, sp, #0xd0
    ba20:	add	x1, x24, #0x8
    ba24:	add	x0, sp, #0xd8
    ba28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ba2c:	add	x1, x24, #0x18
    ba30:	add	x0, x22, #0x18
    ba34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ba38:	mov	x0, x24
    ba3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ba40:	mov	x0, x23
    ba44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ba48:	mov	x0, x20
    ba4c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ba50:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    ba54:	add	x20, sp, #0x40
    ba58:	add	x1, sp, #0x130
    ba5c:	mov	x0, x20
    ba60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ba64:	add	x23, sp, #0x70
    ba68:	add	x1, sp, #0x100
    ba6c:	mov	x0, x23
    ba70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ba74:	add	x24, sp, #0xa0
    ba78:	mov	x8, x24
    ba7c:	mov	x2, x22
    ba80:	mov	x1, x23
    ba84:	mov	x0, x20
    ba88:	bl	3718 <_ZL15executeFCMP_OLTN4llvm12GenericValueES0_PNS_4TypeE>
    ba8c:	ldr	x0, [sp, #160]
    ba90:	str	x0, [sp, #208]
    ba94:	add	x22, sp, #0xd0
    ba98:	add	x1, x24, #0x8
    ba9c:	add	x0, sp, #0xd8
    baa0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    baa4:	add	x1, x24, #0x18
    baa8:	add	x0, x22, #0x18
    baac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bab0:	mov	x0, x24
    bab4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bab8:	mov	x0, x23
    babc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bac0:	mov	x0, x20
    bac4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bac8:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    bacc:	add	x20, sp, #0x40
    bad0:	add	x1, sp, #0x130
    bad4:	mov	x0, x20
    bad8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    badc:	add	x23, sp, #0x70
    bae0:	add	x1, sp, #0x100
    bae4:	mov	x0, x23
    bae8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    baec:	add	x24, sp, #0xa0
    baf0:	mov	x8, x24
    baf4:	mov	x2, x22
    baf8:	mov	x1, x23
    bafc:	mov	x0, x20
    bb00:	bl	4344 <_ZL15executeFCMP_UGTN4llvm12GenericValueES0_PNS_4TypeE>
    bb04:	ldr	x0, [sp, #160]
    bb08:	str	x0, [sp, #208]
    bb0c:	add	x22, sp, #0xd0
    bb10:	add	x1, x24, #0x8
    bb14:	add	x0, sp, #0xd8
    bb18:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bb1c:	add	x1, x24, #0x18
    bb20:	add	x0, x22, #0x18
    bb24:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bb28:	mov	x0, x24
    bb2c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bb30:	mov	x0, x23
    bb34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bb38:	mov	x0, x20
    bb3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bb40:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>
    bb44:	add	x20, sp, #0x40
    bb48:	add	x1, sp, #0x130
    bb4c:	mov	x0, x20
    bb50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bb54:	add	x23, sp, #0x70
    bb58:	add	x1, sp, #0x100
    bb5c:	mov	x0, x23
    bb60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bb64:	add	x24, sp, #0xa0
    bb68:	mov	x8, x24
    bb6c:	mov	x2, x22
    bb70:	mov	x1, x23
    bb74:	mov	x0, x20
    bb78:	bl	402c <_ZL15executeFCMP_OGTN4llvm12GenericValueES0_PNS_4TypeE>
    bb7c:	ldr	x0, [sp, #160]
    bb80:	str	x0, [sp, #208]
    bb84:	add	x22, sp, #0xd0
    bb88:	add	x1, x24, #0x8
    bb8c:	add	x0, sp, #0xd8
    bb90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bb94:	add	x1, x24, #0x18
    bb98:	add	x0, x22, #0x18
    bb9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bba0:	mov	x0, x24
    bba4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bba8:	mov	x0, x23
    bbac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bbb0:	mov	x0, x20
    bbb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bbb8:	b	b81c <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE+0x570>

000000000000bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>:
    bbbc:	sub	sp, sp, #0x320
    bbc0:	stp	x29, x30, [sp]
    bbc4:	mov	x29, sp
    bbc8:	stp	x19, x20, [sp, #16]
    bbcc:	stp	x21, x22, [sp, #32]
    bbd0:	mov	x21, x0
    bbd4:	mov	x19, x1
    bbd8:	ldr	x20, [x0, #704]
    bbdc:	sub	x20, x20, #0x80
    bbe0:	ldur	x1, [x1, #-48]
    bbe4:	ldr	x22, [x1]
    bbe8:	add	x8, sp, #0x110
    bbec:	mov	x2, x20
    bbf0:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    bbf4:	add	x8, sp, #0xe0
    bbf8:	mov	x2, x20
    bbfc:	ldur	x1, [x19, #-24]
    bc00:	mov	x0, x21
    bc04:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    bc08:	mov	w0, #0x1                   	// #1
    bc0c:	str	w0, [sp, #192]
    bc10:	str	xzr, [sp, #184]
    bc14:	str	xzr, [sp, #200]
    bc18:	str	xzr, [sp, #208]
    bc1c:	str	xzr, [sp, #216]
    bc20:	str	wzr, [sp, #176]
    bc24:	str	wzr, [sp, #180]
    bc28:	ldrb	w0, [x22, #8]
    bc2c:	cmp	w0, #0x10
    bc30:	b.eq	bca4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe8>  // b.none
    bc34:	ldrb	w1, [x19, #16]
    bc38:	sub	w0, w1, #0x18
    bc3c:	cmp	w1, #0x2c
    bc40:	b.eq	d32c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1770>  // b.none
    bc44:	cmp	w0, #0x14
    bc48:	b.hi	cf64 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x13a8>  // b.pmore
    bc4c:	cmp	w0, #0x10
    bc50:	b.eq	d23c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1680>  // b.none
    bc54:	b.ls	ce18 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x125c>  // b.plast
    bc58:	cmp	w0, #0x12
    bc5c:	b.eq	d28c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x16d0>  // b.none
    bc60:	cmp	w0, #0x13
    bc64:	b.ne	cf20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1364>  // b.any
    bc68:	add	x21, sp, #0x280
    bc6c:	mov	x8, x21
    bc70:	add	x1, sp, #0xe8
    bc74:	add	x0, sp, #0x118
    bc78:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    bc7c:	mov	x1, x21
    bc80:	add	x0, sp, #0xb8
    bc84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bc88:	ldr	w0, [sp, #648]
    bc8c:	cmp	w0, #0x40
    bc90:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    bc94:	ldr	x0, [sp, #640]
    bc98:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    bc9c:	bl	0 <_ZdaPv>
    bca0:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    bca4:	ldr	x0, [sp, #304]
    bca8:	ldr	x1, [sp, #296]
    bcac:	sub	x0, x0, x1
    bcb0:	asr	x1, x0, #4
    bcb4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    bcb8:	movk	x2, #0xaaab
    bcbc:	mul	x1, x1, x2
    bcc0:	ldr	x2, [sp, #256]
    bcc4:	ldr	x3, [sp, #248]
    bcc8:	sub	x2, x2, x3
    bccc:	cmp	x2, x0
    bcd0:	b.ne	bd40 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x184>  // b.any
    bcd4:	add	x0, sp, #0xc8
    bcd8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bcdc:	ldrb	w1, [x19, #16]
    bce0:	sub	w0, w1, #0x18
    bce4:	cmp	w1, #0x2c
    bce8:	b.eq	c270 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6b4>  // b.none
    bcec:	cmp	w0, #0x14
    bcf0:	b.hi	be20 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x264>  // b.pmore
    bcf4:	cmp	w0, #0x10
    bcf8:	b.eq	c970 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xdb4>  // b.none
    bcfc:	b.ls	bd68 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1ac>  // b.plast
    bd00:	cmp	w0, #0x12
    bd04:	b.eq	cab4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xef8>  // b.none
    bd08:	cmp	w0, #0x13
    bd0c:	b.ne	bde8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x22c>  // b.any
    bd10:	stp	x23, x24, [sp, #48]
    bd14:	ldr	x23, [sp, #200]
    bd18:	ldr	x0, [sp, #208]
    bd1c:	cmp	x0, x23
    bd20:	b.eq	d548 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x198c>  // b.none
    bd24:	stp	x25, x26, [sp, #64]
    bd28:	mov	w22, #0x0                   	// #0
    bd2c:	mov	x21, #0x0                   	// #0
    bd30:	add	x24, sp, #0x190
    bd34:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    bd38:	movk	x25, #0xaaab
    bd3c:	b	c214 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x658>
    bd40:	stp	x23, x24, [sp, #48]
    bd44:	stp	x25, x26, [sp, #64]
    bd48:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bd4c:	add	x3, x3, #0x0
    bd50:	mov	w2, #0x2e7                 	// #743
    bd54:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bd58:	add	x1, x1, #0x0
    bd5c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bd60:	add	x0, x0, #0x0
    bd64:	bl	0 <__assert_fail>
    bd68:	cmp	w0, #0xe
    bd6c:	b.eq	c82c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc70>  // b.none
    bd70:	cmp	w0, #0xf
    bd74:	b.ne	bdac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1f0>  // b.any
    bd78:	ldr	x0, [sp, #200]
    bd7c:	ldr	x1, [sp, #208]
    bd80:	cmp	x1, x0
    bd84:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    bd88:	stp	x23, x24, [sp, #48]
    bd8c:	stp	x25, x26, [sp, #64]
    bd90:	mov	w21, #0x0                   	// #0
    bd94:	mov	x2, #0x0                   	// #0
    bd98:	add	x22, sp, #0x170
    bd9c:	add	x24, sp, #0x160
    bda0:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    bda4:	movk	x23, #0xaaab
    bda8:	b	c0c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x50c>
    bdac:	cmp	w0, #0xd
    bdb0:	b.ne	bf7c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x3c0>  // b.any
    bdb4:	ldr	x0, [sp, #200]
    bdb8:	ldr	x1, [sp, #208]
    bdbc:	cmp	x1, x0
    bdc0:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    bdc4:	stp	x23, x24, [sp, #48]
    bdc8:	stp	x25, x26, [sp, #64]
    bdcc:	mov	w21, #0x0                   	// #0
    bdd0:	mov	x2, #0x0                   	// #0
    bdd4:	add	x22, sp, #0x150
    bdd8:	add	x24, sp, #0x140
    bddc:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    bde0:	movk	x23, #0xaaab
    bde4:	b	bff0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x434>
    bde8:	cmp	w0, #0x11
    bdec:	b.ne	bf7c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x3c0>  // b.any
    bdf0:	stp	x23, x24, [sp, #48]
    bdf4:	ldr	x23, [sp, #200]
    bdf8:	ldr	x0, [sp, #208]
    bdfc:	cmp	x0, x23
    be00:	b.eq	d540 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1984>  // b.none
    be04:	stp	x25, x26, [sp, #64]
    be08:	mov	w22, #0x0                   	// #0
    be0c:	mov	x21, #0x0                   	// #0
    be10:	add	x24, sp, #0x180
    be14:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    be18:	movk	x25, #0xaaab
    be1c:	b	c190 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5d4>
    be20:	cmp	w0, #0x18
    be24:	b.eq	ccb4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x10f8>  // b.none
    be28:	b.ls	be70 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x2b4>  // b.plast
    be2c:	cmp	w0, #0x1d
    be30:	b.eq	c590 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9d4>  // b.none
    be34:	cmp	w0, #0x1e
    be38:	b.ne	bf40 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x384>  // b.any
    be3c:	ldr	x0, [sp, #200]
    be40:	ldr	x1, [sp, #208]
    be44:	cmp	x1, x0
    be48:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    be4c:	stp	x23, x24, [sp, #48]
    be50:	stp	x25, x26, [sp, #64]
    be54:	mov	w22, #0x0                   	// #0
    be58:	mov	x21, #0x0                   	// #0
    be5c:	add	x25, sp, #0x220
    be60:	add	x24, sp, #0x210
    be64:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    be68:	movk	x23, #0xaaab
    be6c:	b	c778 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xbbc>
    be70:	cmp	w0, #0x16
    be74:	b.eq	c324 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x768>  // b.none
    be78:	cmp	w0, #0x17
    be7c:	b.ne	beb0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x2f4>  // b.any
    be80:	stp	x23, x24, [sp, #48]
    be84:	ldr	x23, [sp, #200]
    be88:	ldr	x0, [sp, #208]
    be8c:	cmp	x0, x23
    be90:	b.eq	d560 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x19a4>  // b.none
    be94:	stp	x25, x26, [sp, #64]
    be98:	mov	w22, #0x0                   	// #0
    be9c:	mov	x21, #0x0                   	// #0
    bea0:	add	x24, sp, #0x1c0
    bea4:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    bea8:	movk	x25, #0xaaab
    beac:	b	c400 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x844>
    beb0:	cmp	w0, #0x15
    beb4:	b.ne	bf7c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x3c0>  // b.any
    beb8:	mov	x0, x22
    bebc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bec0:	ldr	x0, [x0, #24]
    bec4:	ldrb	w0, [x0, #8]
    bec8:	cmp	w0, #0x2
    becc:	b.eq	cbf8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x103c>  // b.none
    bed0:	cmp	w0, #0x3
    bed4:	b.ne	cc60 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x10a4>  // b.any
    bed8:	ldr	x3, [sp, #200]
    bedc:	ldr	x0, [sp, #208]
    bee0:	cmp	x0, x3
    bee4:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    bee8:	mov	w2, #0x0                   	// #0
    beec:	mov	x0, #0x0                   	// #0
    bef0:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    bef4:	movk	x4, #0xaaab
    bef8:	add	x0, x0, x0, lsl #1
    befc:	lsl	x0, x0, #4
    bf00:	ldr	x1, [sp, #248]
    bf04:	ldr	d1, [x1, x0]
    bf08:	ldr	x1, [sp, #296]
    bf0c:	ldr	d0, [x1, x0]
    bf10:	fdiv	d0, d0, d1
    bf14:	str	d0, [x3, x0]
    bf18:	add	w2, w2, #0x1
    bf1c:	mov	w0, w2
    bf20:	ldr	x3, [sp, #200]
    bf24:	ldr	x1, [sp, #208]
    bf28:	sub	x1, x1, x3
    bf2c:	asr	x1, x1, #4
    bf30:	mul	x1, x1, x4
    bf34:	cmp	x1, w2, uxtw
    bf38:	b.hi	bef8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x33c>  // b.pmore
    bf3c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    bf40:	cmp	w0, #0x1c
    bf44:	b.ne	bf7c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x3c0>  // b.any
    bf48:	ldr	x0, [sp, #200]
    bf4c:	ldr	x1, [sp, #208]
    bf50:	cmp	x1, x0
    bf54:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    bf58:	stp	x23, x24, [sp, #48]
    bf5c:	stp	x25, x26, [sp, #64]
    bf60:	mov	w22, #0x0                   	// #0
    bf64:	mov	x21, #0x0                   	// #0
    bf68:	add	x25, sp, #0x1e0
    bf6c:	add	x24, sp, #0x1d0
    bf70:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    bf74:	movk	x23, #0xaaab
    bf78:	b	c4dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x920>
    bf7c:	stp	x23, x24, [sp, #48]
    bf80:	stp	x25, x26, [sp, #64]
    bf84:	bl	0 <_ZN4llvm4dbgsEv>
    bf88:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bf8c:	add	x1, x1, #0x0
    bf90:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bf94:	mov	w2, #0x0                   	// #0
    bf98:	mov	x1, x0
    bf9c:	mov	x0, x19
    bfa0:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    bfa4:	mov	w2, #0x310                 	// #784
    bfa8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    bfac:	add	x1, x1, #0x0
    bfb0:	mov	x0, #0x0                   	// #0
    bfb4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    bfb8:	add	x1, x1, #0x8
    bfbc:	mov	x0, x22
    bfc0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    bfc4:	b	c020 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x464>
    bfc8:	bl	0 <_ZdaPv>
    bfcc:	add	w21, w21, #0x1
    bfd0:	mov	w2, w21
    bfd4:	ldr	x0, [sp, #200]
    bfd8:	ldr	x1, [sp, #208]
    bfdc:	sub	x1, x1, x0
    bfe0:	asr	x1, x1, #4
    bfe4:	mul	x1, x1, x23
    bfe8:	cmp	x1, w21, uxtw
    bfec:	b.ls	c084 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4c8>  // b.plast
    bff0:	add	x2, x2, x2, lsl #1
    bff4:	lsl	x26, x2, #4
    bff8:	add	x0, x0, x26
    bffc:	add	x25, x0, #0x8
    c000:	ldr	x1, [sp, #296]
    c004:	add	x1, x1, x26
    c008:	ldr	w0, [x1, #16]
    c00c:	str	w0, [sp, #344]
    c010:	cmp	w0, #0x40
    c014:	b.hi	bfb8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x3fc>  // b.pmore
    c018:	ldr	x0, [x1, #8]
    c01c:	str	x0, [sp, #336]
    c020:	ldr	x2, [sp, #248]
    c024:	add	x2, x2, x26
    c028:	add	x1, x2, #0x8
    c02c:	mov	x0, x22
    c030:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    c034:	ldr	w0, [sp, #344]
    c038:	str	w0, [sp, #328]
    c03c:	ldr	x0, [sp, #336]
    c040:	str	x0, [sp, #320]
    c044:	str	wzr, [sp, #344]
    c048:	mov	x1, x24
    c04c:	mov	x0, x25
    c050:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c054:	ldr	w0, [sp, #328]
    c058:	cmp	w0, #0x40
    c05c:	b.ls	c06c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4b0>  // b.plast
    c060:	ldr	x0, [sp, #320]
    c064:	cbz	x0, c06c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4b0>
    c068:	bl	0 <_ZdaPv>
    c06c:	ldr	w0, [sp, #344]
    c070:	cmp	w0, #0x40
    c074:	b.ls	bfcc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x410>  // b.plast
    c078:	ldr	x0, [sp, #336]
    c07c:	cbnz	x0, bfc8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x40c>
    c080:	b	bfcc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x410>
    c084:	ldp	x23, x24, [sp, #48]
    c088:	ldp	x25, x26, [sp, #64]
    c08c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c090:	add	x1, x1, #0x8
    c094:	mov	x0, x22
    c098:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    c09c:	b	c0f8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x53c>
    c0a0:	bl	0 <_ZdaPv>
    c0a4:	add	w21, w21, #0x1
    c0a8:	mov	w2, w21
    c0ac:	ldr	x0, [sp, #200]
    c0b0:	ldr	x1, [sp, #208]
    c0b4:	sub	x1, x1, x0
    c0b8:	asr	x1, x1, #4
    c0bc:	mul	x1, x1, x23
    c0c0:	cmp	x1, w21, uxtw
    c0c4:	b.ls	c15c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5a0>  // b.plast
    c0c8:	add	x2, x2, x2, lsl #1
    c0cc:	lsl	x26, x2, #4
    c0d0:	add	x0, x0, x26
    c0d4:	add	x25, x0, #0x8
    c0d8:	ldr	x1, [sp, #296]
    c0dc:	add	x1, x1, x26
    c0e0:	ldr	w0, [x1, #16]
    c0e4:	str	w0, [sp, #376]
    c0e8:	cmp	w0, #0x40
    c0ec:	b.hi	c090 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4d4>  // b.pmore
    c0f0:	ldr	x0, [x1, #8]
    c0f4:	str	x0, [sp, #368]
    c0f8:	ldr	x2, [sp, #248]
    c0fc:	add	x2, x2, x26
    c100:	add	x1, x2, #0x8
    c104:	mov	x0, x22
    c108:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    c10c:	ldr	w0, [sp, #376]
    c110:	str	w0, [sp, #360]
    c114:	ldr	x0, [sp, #368]
    c118:	str	x0, [sp, #352]
    c11c:	str	wzr, [sp, #376]
    c120:	mov	x1, x24
    c124:	mov	x0, x25
    c128:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c12c:	ldr	w0, [sp, #360]
    c130:	cmp	w0, #0x40
    c134:	b.ls	c144 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x588>  // b.plast
    c138:	ldr	x0, [sp, #352]
    c13c:	cbz	x0, c144 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x588>
    c140:	bl	0 <_ZdaPv>
    c144:	ldr	w0, [sp, #376]
    c148:	cmp	w0, #0x40
    c14c:	b.ls	c0a4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4e8>  // b.plast
    c150:	ldr	x0, [sp, #368]
    c154:	cbnz	x0, c0a0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4e4>
    c158:	b	c0a4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x4e8>
    c15c:	ldp	x23, x24, [sp, #48]
    c160:	ldp	x25, x26, [sp, #64]
    c164:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c168:	bl	0 <_ZdaPv>
    c16c:	add	w22, w22, #0x1
    c170:	mov	w21, w22
    c174:	ldr	x23, [sp, #200]
    c178:	ldr	x1, [sp, #208]
    c17c:	sub	x1, x1, x23
    c180:	asr	x1, x1, #4
    c184:	mul	x1, x1, x25
    c188:	cmp	x1, w22, uxtw
    c18c:	b.ls	c1e0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x624>  // b.plast
    c190:	add	x21, x21, x21, lsl #1
    c194:	lsl	x21, x21, #4
    c198:	ldr	x1, [sp, #248]
    c19c:	add	x1, x1, x21
    c1a0:	ldr	x0, [sp, #296]
    c1a4:	add	x0, x0, x21
    c1a8:	mov	x8, x24
    c1ac:	add	x1, x1, #0x8
    c1b0:	add	x0, x0, #0x8
    c1b4:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    c1b8:	add	x0, x23, x21
    c1bc:	mov	x1, x24
    c1c0:	add	x0, x0, #0x8
    c1c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c1c8:	ldr	w0, [sp, #392]
    c1cc:	cmp	w0, #0x40
    c1d0:	b.ls	c16c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5b0>  // b.plast
    c1d4:	ldr	x0, [sp, #384]
    c1d8:	cbnz	x0, c168 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5ac>
    c1dc:	b	c16c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x5b0>
    c1e0:	ldp	x23, x24, [sp, #48]
    c1e4:	ldp	x25, x26, [sp, #64]
    c1e8:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c1ec:	bl	0 <_ZdaPv>
    c1f0:	add	w22, w22, #0x1
    c1f4:	mov	w21, w22
    c1f8:	ldr	x23, [sp, #200]
    c1fc:	ldr	x1, [sp, #208]
    c200:	sub	x1, x1, x23
    c204:	asr	x1, x1, #4
    c208:	mul	x1, x1, x25
    c20c:	cmp	x1, w22, uxtw
    c210:	b.ls	c264 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6a8>  // b.plast
    c214:	add	x21, x21, x21, lsl #1
    c218:	lsl	x21, x21, #4
    c21c:	ldr	x1, [sp, #248]
    c220:	add	x1, x1, x21
    c224:	ldr	x0, [sp, #296]
    c228:	add	x0, x0, x21
    c22c:	mov	x8, x24
    c230:	add	x1, x1, #0x8
    c234:	add	x0, x0, #0x8
    c238:	bl	0 <_ZNK4llvm5APInt4udivERKS0_>
    c23c:	add	x0, x23, x21
    c240:	mov	x1, x24
    c244:	add	x0, x0, #0x8
    c248:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c24c:	ldr	w0, [sp, #408]
    c250:	cmp	w0, #0x40
    c254:	b.ls	c1f0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x634>  // b.plast
    c258:	ldr	x0, [sp, #400]
    c25c:	cbnz	x0, c1ec <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x630>
    c260:	b	c1f0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x634>
    c264:	ldp	x23, x24, [sp, #48]
    c268:	ldp	x25, x26, [sp, #64]
    c26c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c270:	stp	x23, x24, [sp, #48]
    c274:	ldr	x23, [sp, #200]
    c278:	ldr	x0, [sp, #208]
    c27c:	cmp	x0, x23
    c280:	b.eq	d550 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1994>  // b.none
    c284:	stp	x25, x26, [sp, #64]
    c288:	mov	w22, #0x0                   	// #0
    c28c:	mov	x21, #0x0                   	// #0
    c290:	add	x24, sp, #0x1a0
    c294:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c298:	movk	x25, #0xaaab
    c29c:	b	c2c8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x70c>
    c2a0:	bl	0 <_ZdaPv>
    c2a4:	add	w22, w22, #0x1
    c2a8:	mov	w21, w22
    c2ac:	ldr	x23, [sp, #200]
    c2b0:	ldr	x1, [sp, #208]
    c2b4:	sub	x1, x1, x23
    c2b8:	asr	x1, x1, #4
    c2bc:	mul	x1, x1, x25
    c2c0:	cmp	x1, w22, uxtw
    c2c4:	b.ls	c318 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x75c>  // b.plast
    c2c8:	add	x21, x21, x21, lsl #1
    c2cc:	lsl	x21, x21, #4
    c2d0:	ldr	x1, [sp, #248]
    c2d4:	add	x1, x1, x21
    c2d8:	ldr	x0, [sp, #296]
    c2dc:	add	x0, x0, x21
    c2e0:	mov	x8, x24
    c2e4:	add	x1, x1, #0x8
    c2e8:	add	x0, x0, #0x8
    c2ec:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    c2f0:	add	x0, x23, x21
    c2f4:	mov	x1, x24
    c2f8:	add	x0, x0, #0x8
    c2fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c300:	ldr	w0, [sp, #424]
    c304:	cmp	w0, #0x40
    c308:	b.ls	c2a4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6e8>  // b.plast
    c30c:	ldr	x0, [sp, #416]
    c310:	cbnz	x0, c2a0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6e4>
    c314:	b	c2a4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x6e8>
    c318:	ldp	x23, x24, [sp, #48]
    c31c:	ldp	x25, x26, [sp, #64]
    c320:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c324:	stp	x23, x24, [sp, #48]
    c328:	ldr	x23, [sp, #200]
    c32c:	ldr	x0, [sp, #208]
    c330:	cmp	x0, x23
    c334:	b.eq	d558 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x199c>  // b.none
    c338:	stp	x25, x26, [sp, #64]
    c33c:	mov	w22, #0x0                   	// #0
    c340:	mov	x21, #0x0                   	// #0
    c344:	add	x24, sp, #0x1b0
    c348:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c34c:	movk	x25, #0xaaab
    c350:	b	c37c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x7c0>
    c354:	bl	0 <_ZdaPv>
    c358:	add	w22, w22, #0x1
    c35c:	mov	w21, w22
    c360:	ldr	x23, [sp, #200]
    c364:	ldr	x1, [sp, #208]
    c368:	sub	x1, x1, x23
    c36c:	asr	x1, x1, #4
    c370:	mul	x1, x1, x25
    c374:	cmp	x1, w22, uxtw
    c378:	b.ls	c3cc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x810>  // b.plast
    c37c:	add	x21, x21, x21, lsl #1
    c380:	lsl	x21, x21, #4
    c384:	ldr	x1, [sp, #248]
    c388:	add	x1, x1, x21
    c38c:	ldr	x0, [sp, #296]
    c390:	add	x0, x0, x21
    c394:	mov	x8, x24
    c398:	add	x1, x1, #0x8
    c39c:	add	x0, x0, #0x8
    c3a0:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    c3a4:	add	x0, x23, x21
    c3a8:	mov	x1, x24
    c3ac:	add	x0, x0, #0x8
    c3b0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c3b4:	ldr	w0, [sp, #440]
    c3b8:	cmp	w0, #0x40
    c3bc:	b.ls	c358 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x79c>  // b.plast
    c3c0:	ldr	x0, [sp, #432]
    c3c4:	cbnz	x0, c354 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x798>
    c3c8:	b	c358 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x79c>
    c3cc:	ldp	x23, x24, [sp, #48]
    c3d0:	ldp	x25, x26, [sp, #64]
    c3d4:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c3d8:	bl	0 <_ZdaPv>
    c3dc:	add	w22, w22, #0x1
    c3e0:	mov	w21, w22
    c3e4:	ldr	x23, [sp, #200]
    c3e8:	ldr	x1, [sp, #208]
    c3ec:	sub	x1, x1, x23
    c3f0:	asr	x1, x1, #4
    c3f4:	mul	x1, x1, x25
    c3f8:	cmp	x1, w22, uxtw
    c3fc:	b.ls	c450 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x894>  // b.plast
    c400:	add	x21, x21, x21, lsl #1
    c404:	lsl	x21, x21, #4
    c408:	ldr	x1, [sp, #248]
    c40c:	add	x1, x1, x21
    c410:	ldr	x0, [sp, #296]
    c414:	add	x0, x0, x21
    c418:	mov	x8, x24
    c41c:	add	x1, x1, #0x8
    c420:	add	x0, x0, #0x8
    c424:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    c428:	add	x0, x23, x21
    c42c:	mov	x1, x24
    c430:	add	x0, x0, #0x8
    c434:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c438:	ldr	w0, [sp, #456]
    c43c:	cmp	w0, #0x40
    c440:	b.ls	c3dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x820>  // b.plast
    c444:	ldr	x0, [sp, #448]
    c448:	cbnz	x0, c3d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x81c>
    c44c:	b	c3dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x820>
    c450:	ldp	x23, x24, [sp, #48]
    c454:	ldp	x25, x26, [sp, #64]
    c458:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c45c:	add	x1, x1, #0x8
    c460:	mov	x0, x25
    c464:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    c468:	ldr	x0, [sp, #248]
    c46c:	add	x21, x0, x21
    c470:	add	x1, x21, #0x8
    c474:	ldr	w0, [sp, #488]
    c478:	ldr	w2, [x1, #8]
    c47c:	cmp	w0, w2
    c480:	b.ne	c498 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8dc>  // b.any
    c484:	cmp	w0, #0x40
    c488:	b.ls	c520 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x964>  // b.plast
    c48c:	mov	x0, x25
    c490:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
    c494:	b	c530 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x974>
    c498:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c49c:	add	x3, x3, #0x0
    c4a0:	mov	w2, #0x329                 	// #809
    c4a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c4a8:	add	x1, x1, #0x0
    c4ac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c4b0:	add	x0, x0, #0x0
    c4b4:	bl	0 <__assert_fail>
    c4b8:	add	w22, w22, #0x1
    c4bc:	mov	w21, w22
    c4c0:	ldr	x0, [sp, #200]
    c4c4:	ldr	x1, [sp, #208]
    c4c8:	sub	x1, x1, x0
    c4cc:	asr	x1, x1, #4
    c4d0:	mul	x1, x1, x23
    c4d4:	cmp	x1, w22, uxtw
    c4d8:	b.ls	c584 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9c8>  // b.plast
    c4dc:	add	x21, x21, x21, lsl #1
    c4e0:	lsl	x21, x21, #4
    c4e4:	add	x0, x0, x21
    c4e8:	add	x26, x0, #0x8
    c4ec:	ldr	x1, [sp, #296]
    c4f0:	add	x1, x1, x21
    c4f4:	ldr	w0, [x1, #16]
    c4f8:	str	w0, [sp, #488]
    c4fc:	cmp	w0, #0x40
    c500:	b.hi	c45c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8a0>  // b.pmore
    c504:	ldr	x1, [x1, #8]
    c508:	str	x1, [sp, #480]
    c50c:	ldr	x1, [sp, #248]
    c510:	add	x21, x1, x21
    c514:	ldr	w1, [x21, #16]
    c518:	cmp	w1, w0
    c51c:	b.ne	c498 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8dc>  // b.any
    c520:	ldr	x1, [x21, #8]
    c524:	ldr	x0, [sp, #480]
    c528:	and	x0, x0, x1
    c52c:	str	x0, [sp, #480]
    c530:	ldr	w0, [sp, #488]
    c534:	str	w0, [sp, #472]
    c538:	ldr	x0, [sp, #480]
    c53c:	str	x0, [sp, #464]
    c540:	str	wzr, [sp, #488]
    c544:	mov	x1, x24
    c548:	mov	x0, x26
    c54c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c550:	ldr	w0, [sp, #472]
    c554:	cmp	w0, #0x40
    c558:	b.ls	c568 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9ac>  // b.plast
    c55c:	ldr	x0, [sp, #464]
    c560:	cbz	x0, c568 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x9ac>
    c564:	bl	0 <_ZdaPv>
    c568:	ldr	w0, [sp, #488]
    c56c:	cmp	w0, #0x40
    c570:	b.ls	c4b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8fc>  // b.plast
    c574:	ldr	x0, [sp, #480]
    c578:	cbz	x0, c4b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8fc>
    c57c:	bl	0 <_ZdaPv>
    c580:	b	c4b8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x8fc>
    c584:	ldp	x23, x24, [sp, #48]
    c588:	ldp	x25, x26, [sp, #64]
    c58c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c590:	ldr	x0, [sp, #200]
    c594:	ldr	x1, [sp, #208]
    c598:	cmp	x1, x0
    c59c:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    c5a0:	stp	x23, x24, [sp, #48]
    c5a4:	stp	x25, x26, [sp, #64]
    c5a8:	mov	w22, #0x0                   	// #0
    c5ac:	mov	x21, #0x0                   	// #0
    c5b0:	add	x25, sp, #0x200
    c5b4:	add	x24, sp, #0x1f0
    c5b8:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c5bc:	movk	x23, #0xaaab
    c5c0:	b	c644 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa88>
    c5c4:	add	x1, x1, #0x8
    c5c8:	mov	x0, x25
    c5cc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    c5d0:	ldr	x0, [sp, #248]
    c5d4:	add	x21, x0, x21
    c5d8:	add	x1, x21, #0x8
    c5dc:	ldr	w0, [sp, #520]
    c5e0:	ldr	w2, [x1, #8]
    c5e4:	cmp	w0, w2
    c5e8:	b.ne	c600 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa44>  // b.any
    c5ec:	cmp	w0, #0x40
    c5f0:	b.ls	c688 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xacc>  // b.plast
    c5f4:	mov	x0, x25
    c5f8:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    c5fc:	b	c698 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xadc>
    c600:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c604:	add	x3, x3, #0x0
    c608:	mov	w2, #0x347                 	// #839
    c60c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c610:	add	x1, x1, #0x0
    c614:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c618:	add	x0, x0, #0x0
    c61c:	bl	0 <__assert_fail>
    c620:	add	w22, w22, #0x1
    c624:	mov	w21, w22
    c628:	ldr	x0, [sp, #200]
    c62c:	ldr	x1, [sp, #208]
    c630:	sub	x1, x1, x0
    c634:	asr	x1, x1, #4
    c638:	mul	x1, x1, x23
    c63c:	cmp	x1, w22, uxtw
    c640:	b.ls	c6ec <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb30>  // b.plast
    c644:	add	x21, x21, x21, lsl #1
    c648:	lsl	x21, x21, #4
    c64c:	add	x0, x0, x21
    c650:	add	x26, x0, #0x8
    c654:	ldr	x1, [sp, #296]
    c658:	add	x1, x1, x21
    c65c:	ldr	w0, [x1, #16]
    c660:	str	w0, [sp, #520]
    c664:	cmp	w0, #0x40
    c668:	b.hi	c5c4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa08>  // b.pmore
    c66c:	ldr	x1, [x1, #8]
    c670:	str	x1, [sp, #512]
    c674:	ldr	x1, [sp, #248]
    c678:	add	x21, x1, x21
    c67c:	ldr	w1, [x21, #16]
    c680:	cmp	w1, w0
    c684:	b.ne	c600 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa44>  // b.any
    c688:	ldr	x1, [x21, #8]
    c68c:	ldr	x0, [sp, #512]
    c690:	orr	x0, x0, x1
    c694:	str	x0, [sp, #512]
    c698:	ldr	w0, [sp, #520]
    c69c:	str	w0, [sp, #504]
    c6a0:	ldr	x0, [sp, #512]
    c6a4:	str	x0, [sp, #496]
    c6a8:	str	wzr, [sp, #520]
    c6ac:	mov	x1, x24
    c6b0:	mov	x0, x26
    c6b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c6b8:	ldr	w0, [sp, #504]
    c6bc:	cmp	w0, #0x40
    c6c0:	b.ls	c6d0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb14>  // b.plast
    c6c4:	ldr	x0, [sp, #496]
    c6c8:	cbz	x0, c6d0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb14>
    c6cc:	bl	0 <_ZdaPv>
    c6d0:	ldr	w0, [sp, #520]
    c6d4:	cmp	w0, #0x40
    c6d8:	b.ls	c620 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa64>  // b.plast
    c6dc:	ldr	x0, [sp, #512]
    c6e0:	cbz	x0, c620 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa64>
    c6e4:	bl	0 <_ZdaPv>
    c6e8:	b	c620 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xa64>
    c6ec:	ldp	x23, x24, [sp, #48]
    c6f0:	ldp	x25, x26, [sp, #64]
    c6f4:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c6f8:	add	x1, x1, #0x8
    c6fc:	mov	x0, x25
    c700:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    c704:	ldr	x0, [sp, #248]
    c708:	add	x21, x0, x21
    c70c:	add	x1, x21, #0x8
    c710:	ldr	w0, [sp, #552]
    c714:	ldr	w2, [x1, #8]
    c718:	cmp	w0, w2
    c71c:	b.ne	c734 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb78>  // b.any
    c720:	cmp	w0, #0x40
    c724:	b.ls	c7bc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc00>  // b.plast
    c728:	mov	x0, x25
    c72c:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
    c730:	b	c7cc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc10>
    c734:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c738:	add	x3, x3, #0x0
    c73c:	mov	w2, #0x365                 	// #869
    c740:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c744:	add	x1, x1, #0x0
    c748:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c74c:	add	x0, x0, #0x0
    c750:	bl	0 <__assert_fail>
    c754:	add	w22, w22, #0x1
    c758:	mov	w21, w22
    c75c:	ldr	x0, [sp, #200]
    c760:	ldr	x1, [sp, #208]
    c764:	sub	x1, x1, x0
    c768:	asr	x1, x1, #4
    c76c:	mul	x1, x1, x23
    c770:	cmp	x1, w22, uxtw
    c774:	b.ls	c820 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc64>  // b.plast
    c778:	add	x21, x21, x21, lsl #1
    c77c:	lsl	x21, x21, #4
    c780:	add	x0, x0, x21
    c784:	add	x26, x0, #0x8
    c788:	ldr	x1, [sp, #296]
    c78c:	add	x1, x1, x21
    c790:	ldr	w0, [x1, #16]
    c794:	str	w0, [sp, #552]
    c798:	cmp	w0, #0x40
    c79c:	b.hi	c6f8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb3c>  // b.pmore
    c7a0:	ldr	x1, [x1, #8]
    c7a4:	str	x1, [sp, #544]
    c7a8:	ldr	x1, [sp, #248]
    c7ac:	add	x21, x1, x21
    c7b0:	ldr	w1, [x21, #16]
    c7b4:	cmp	w1, w0
    c7b8:	b.ne	c734 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb78>  // b.any
    c7bc:	ldr	x1, [x21, #8]
    c7c0:	ldr	x0, [sp, #544]
    c7c4:	eor	x0, x0, x1
    c7c8:	str	x0, [sp, #544]
    c7cc:	ldr	w0, [sp, #552]
    c7d0:	str	w0, [sp, #536]
    c7d4:	ldr	x0, [sp, #544]
    c7d8:	str	x0, [sp, #528]
    c7dc:	str	wzr, [sp, #552]
    c7e0:	mov	x1, x24
    c7e4:	mov	x0, x26
    c7e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c7ec:	ldr	w0, [sp, #536]
    c7f0:	cmp	w0, #0x40
    c7f4:	b.ls	c804 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc48>  // b.plast
    c7f8:	ldr	x0, [sp, #528]
    c7fc:	cbz	x0, c804 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xc48>
    c800:	bl	0 <_ZdaPv>
    c804:	ldr	w0, [sp, #552]
    c808:	cmp	w0, #0x40
    c80c:	b.ls	c754 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb98>  // b.plast
    c810:	ldr	x0, [sp, #544]
    c814:	cbz	x0, c754 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb98>
    c818:	bl	0 <_ZdaPv>
    c81c:	b	c754 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xb98>
    c820:	ldp	x23, x24, [sp, #48]
    c824:	ldp	x25, x26, [sp, #64]
    c828:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c82c:	mov	x0, x22
    c830:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c834:	ldr	x0, [x0, #24]
    c838:	ldrb	w0, [x0, #8]
    c83c:	cmp	w0, #0x2
    c840:	b.eq	c8b4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xcf8>  // b.none
    c844:	cmp	w0, #0x3
    c848:	b.ne	c91c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd60>  // b.any
    c84c:	ldr	x3, [sp, #200]
    c850:	ldr	x0, [sp, #208]
    c854:	cmp	x0, x3
    c858:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    c85c:	mov	w2, #0x0                   	// #0
    c860:	mov	x0, #0x0                   	// #0
    c864:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c868:	movk	x4, #0xaaab
    c86c:	add	x0, x0, x0, lsl #1
    c870:	lsl	x0, x0, #4
    c874:	ldr	x1, [sp, #296]
    c878:	ldr	d0, [x1, x0]
    c87c:	ldr	x1, [sp, #248]
    c880:	ldr	d1, [x1, x0]
    c884:	fadd	d0, d0, d1
    c888:	str	d0, [x3, x0]
    c88c:	add	w2, w2, #0x1
    c890:	mov	w0, w2
    c894:	ldr	x3, [sp, #200]
    c898:	ldr	x1, [sp, #208]
    c89c:	sub	x1, x1, x3
    c8a0:	asr	x1, x1, #4
    c8a4:	mul	x1, x1, x4
    c8a8:	cmp	x1, w2, uxtw
    c8ac:	b.hi	c86c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xcb0>  // b.pmore
    c8b0:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c8b4:	ldr	x3, [sp, #200]
    c8b8:	ldr	x0, [sp, #208]
    c8bc:	cmp	x0, x3
    c8c0:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    c8c4:	mov	w2, #0x0                   	// #0
    c8c8:	mov	x0, #0x0                   	// #0
    c8cc:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c8d0:	movk	x4, #0xaaab
    c8d4:	add	x0, x0, x0, lsl #1
    c8d8:	lsl	x0, x0, #4
    c8dc:	ldr	x1, [sp, #296]
    c8e0:	ldr	s0, [x1, x0]
    c8e4:	ldr	x1, [sp, #248]
    c8e8:	ldr	s1, [x1, x0]
    c8ec:	fadd	s0, s0, s1
    c8f0:	str	s0, [x3, x0]
    c8f4:	add	w2, w2, #0x1
    c8f8:	mov	w0, w2
    c8fc:	ldr	x3, [sp, #200]
    c900:	ldr	x1, [sp, #208]
    c904:	sub	x1, x1, x3
    c908:	asr	x1, x1, #4
    c90c:	mul	x1, x1, x4
    c910:	cmp	x1, w2, uxtw
    c914:	b.hi	c8d4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xd18>  // b.pmore
    c918:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c91c:	stp	x23, x24, [sp, #48]
    c920:	stp	x25, x26, [sp, #64]
    c924:	bl	0 <_ZN4llvm4dbgsEv>
    c928:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c92c:	add	x1, x1, #0x0
    c930:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c934:	mov	x19, x0
    c938:	mov	w3, #0x0                   	// #0
    c93c:	mov	w2, #0x0                   	// #0
    c940:	mov	x1, x0
    c944:	mov	x0, x22
    c948:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    c94c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c950:	add	x1, x1, #0x0
    c954:	mov	x0, x19
    c958:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c95c:	mov	w2, #0x31c                 	// #796
    c960:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c964:	add	x1, x1, #0x0
    c968:	mov	x0, #0x0                   	// #0
    c96c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c970:	mov	x0, x22
    c974:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    c978:	ldr	x0, [x0, #24]
    c97c:	ldrb	w0, [x0, #8]
    c980:	cmp	w0, #0x2
    c984:	b.eq	c9f8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe3c>  // b.none
    c988:	cmp	w0, #0x3
    c98c:	b.ne	ca60 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xea4>  // b.any
    c990:	ldr	x3, [sp, #200]
    c994:	ldr	x0, [sp, #208]
    c998:	cmp	x0, x3
    c99c:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    c9a0:	mov	w2, #0x0                   	// #0
    c9a4:	mov	x0, #0x0                   	// #0
    c9a8:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c9ac:	movk	x4, #0xaaab
    c9b0:	add	x0, x0, x0, lsl #1
    c9b4:	lsl	x0, x0, #4
    c9b8:	ldr	x1, [sp, #296]
    c9bc:	ldr	d0, [x1, x0]
    c9c0:	ldr	x1, [sp, #248]
    c9c4:	ldr	d1, [x1, x0]
    c9c8:	fsub	d0, d0, d1
    c9cc:	str	d0, [x3, x0]
    c9d0:	add	w2, w2, #0x1
    c9d4:	mov	w0, w2
    c9d8:	ldr	x3, [sp, #200]
    c9dc:	ldr	x1, [sp, #208]
    c9e0:	sub	x1, x1, x3
    c9e4:	asr	x1, x1, #4
    c9e8:	mul	x1, x1, x4
    c9ec:	cmp	x1, w2, uxtw
    c9f0:	b.hi	c9b0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xdf4>  // b.pmore
    c9f4:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    c9f8:	ldr	x3, [sp, #200]
    c9fc:	ldr	x0, [sp, #208]
    ca00:	cmp	x0, x3
    ca04:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    ca08:	mov	w2, #0x0                   	// #0
    ca0c:	mov	x0, #0x0                   	// #0
    ca10:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    ca14:	movk	x4, #0xaaab
    ca18:	add	x0, x0, x0, lsl #1
    ca1c:	lsl	x0, x0, #4
    ca20:	ldr	x1, [sp, #296]
    ca24:	ldr	s0, [x1, x0]
    ca28:	ldr	x1, [sp, #248]
    ca2c:	ldr	s1, [x1, x0]
    ca30:	fsub	s0, s0, s1
    ca34:	str	s0, [x3, x0]
    ca38:	add	w2, w2, #0x1
    ca3c:	mov	w0, w2
    ca40:	ldr	x3, [sp, #200]
    ca44:	ldr	x1, [sp, #208]
    ca48:	sub	x1, x1, x3
    ca4c:	asr	x1, x1, #4
    ca50:	mul	x1, x1, x4
    ca54:	cmp	x1, w2, uxtw
    ca58:	b.hi	ca18 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xe5c>  // b.pmore
    ca5c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    ca60:	stp	x23, x24, [sp, #48]
    ca64:	stp	x25, x26, [sp, #64]
    ca68:	bl	0 <_ZN4llvm4dbgsEv>
    ca6c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ca70:	add	x1, x1, #0x0
    ca74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ca78:	mov	x19, x0
    ca7c:	mov	w3, #0x0                   	// #0
    ca80:	mov	w2, #0x0                   	// #0
    ca84:	mov	x1, x0
    ca88:	mov	x0, x22
    ca8c:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    ca90:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ca94:	add	x1, x1, #0x0
    ca98:	mov	x0, x19
    ca9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    caa0:	mov	w2, #0x31d                 	// #797
    caa4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    caa8:	add	x1, x1, #0x0
    caac:	mov	x0, #0x0                   	// #0
    cab0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    cab4:	mov	x0, x22
    cab8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cabc:	ldr	x0, [x0, #24]
    cac0:	ldrb	w0, [x0, #8]
    cac4:	cmp	w0, #0x2
    cac8:	b.eq	cb3c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf80>  // b.none
    cacc:	cmp	w0, #0x3
    cad0:	b.ne	cba4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xfe8>  // b.any
    cad4:	ldr	x3, [sp, #200]
    cad8:	ldr	x0, [sp, #208]
    cadc:	cmp	x0, x3
    cae0:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    cae4:	mov	w2, #0x0                   	// #0
    cae8:	mov	x0, #0x0                   	// #0
    caec:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    caf0:	movk	x4, #0xaaab
    caf4:	add	x0, x0, x0, lsl #1
    caf8:	lsl	x0, x0, #4
    cafc:	ldr	x1, [sp, #296]
    cb00:	ldr	d0, [x1, x0]
    cb04:	ldr	x1, [sp, #248]
    cb08:	ldr	d1, [x1, x0]
    cb0c:	fmul	d0, d0, d1
    cb10:	str	d0, [x3, x0]
    cb14:	add	w2, w2, #0x1
    cb18:	mov	w0, w2
    cb1c:	ldr	x3, [sp, #200]
    cb20:	ldr	x1, [sp, #208]
    cb24:	sub	x1, x1, x3
    cb28:	asr	x1, x1, #4
    cb2c:	mul	x1, x1, x4
    cb30:	cmp	x1, w2, uxtw
    cb34:	b.hi	caf4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xf38>  // b.pmore
    cb38:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cb3c:	ldr	x3, [sp, #200]
    cb40:	ldr	x0, [sp, #208]
    cb44:	cmp	x0, x3
    cb48:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    cb4c:	mov	w2, #0x0                   	// #0
    cb50:	mov	x0, #0x0                   	// #0
    cb54:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    cb58:	movk	x4, #0xaaab
    cb5c:	add	x0, x0, x0, lsl #1
    cb60:	lsl	x0, x0, #4
    cb64:	ldr	x1, [sp, #296]
    cb68:	ldr	s0, [x1, x0]
    cb6c:	ldr	x1, [sp, #248]
    cb70:	ldr	s1, [x1, x0]
    cb74:	fmul	s0, s0, s1
    cb78:	str	s0, [x3, x0]
    cb7c:	add	w2, w2, #0x1
    cb80:	mov	w0, w2
    cb84:	ldr	x3, [sp, #200]
    cb88:	ldr	x1, [sp, #208]
    cb8c:	sub	x1, x1, x3
    cb90:	asr	x1, x1, #4
    cb94:	mul	x1, x1, x4
    cb98:	cmp	x1, w2, uxtw
    cb9c:	b.hi	cb5c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0xfa0>  // b.pmore
    cba0:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cba4:	stp	x23, x24, [sp, #48]
    cba8:	stp	x25, x26, [sp, #64]
    cbac:	bl	0 <_ZN4llvm4dbgsEv>
    cbb0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cbb4:	add	x1, x1, #0x0
    cbb8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cbbc:	mov	x19, x0
    cbc0:	mov	w3, #0x0                   	// #0
    cbc4:	mov	w2, #0x0                   	// #0
    cbc8:	mov	x1, x0
    cbcc:	mov	x0, x22
    cbd0:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    cbd4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cbd8:	add	x1, x1, #0x0
    cbdc:	mov	x0, x19
    cbe0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cbe4:	mov	w2, #0x31e                 	// #798
    cbe8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cbec:	add	x1, x1, #0x0
    cbf0:	mov	x0, #0x0                   	// #0
    cbf4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    cbf8:	ldr	x3, [sp, #200]
    cbfc:	ldr	x0, [sp, #208]
    cc00:	cmp	x0, x3
    cc04:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    cc08:	mov	w2, #0x0                   	// #0
    cc0c:	mov	x0, #0x0                   	// #0
    cc10:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    cc14:	movk	x4, #0xaaab
    cc18:	add	x0, x0, x0, lsl #1
    cc1c:	lsl	x0, x0, #4
    cc20:	ldr	x1, [sp, #248]
    cc24:	ldr	s1, [x1, x0]
    cc28:	ldr	x1, [sp, #296]
    cc2c:	ldr	s0, [x1, x0]
    cc30:	fdiv	s0, s0, s1
    cc34:	str	s0, [x3, x0]
    cc38:	add	w2, w2, #0x1
    cc3c:	mov	w0, w2
    cc40:	ldr	x3, [sp, #200]
    cc44:	ldr	x1, [sp, #208]
    cc48:	sub	x1, x1, x3
    cc4c:	asr	x1, x1, #4
    cc50:	mul	x1, x1, x4
    cc54:	cmp	x1, w2, uxtw
    cc58:	b.hi	cc18 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x105c>  // b.pmore
    cc5c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cc60:	stp	x23, x24, [sp, #48]
    cc64:	stp	x25, x26, [sp, #64]
    cc68:	bl	0 <_ZN4llvm4dbgsEv>
    cc6c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cc70:	add	x1, x1, #0x0
    cc74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cc78:	mov	x19, x0
    cc7c:	mov	w3, #0x0                   	// #0
    cc80:	mov	w2, #0x0                   	// #0
    cc84:	mov	x1, x0
    cc88:	mov	x0, x22
    cc8c:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    cc90:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cc94:	add	x1, x1, #0x0
    cc98:	mov	x0, x19
    cc9c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cca0:	mov	w2, #0x31f                 	// #799
    cca4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cca8:	add	x1, x1, #0x0
    ccac:	mov	x0, #0x0                   	// #0
    ccb0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ccb4:	mov	x0, x22
    ccb8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ccbc:	ldr	x0, [x0, #24]
    ccc0:	ldrb	w0, [x0, #8]
    ccc4:	cmp	w0, #0x2
    ccc8:	b.eq	cd44 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1188>  // b.none
    cccc:	cmp	w0, #0x3
    ccd0:	b.ne	cdc4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1208>  // b.any
    ccd4:	stp	x23, x24, [sp, #48]
    ccd8:	ldr	x23, [sp, #200]
    ccdc:	ldr	x0, [sp, #208]
    cce0:	cmp	x0, x23
    cce4:	b.eq	d568 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x19ac>  // b.none
    cce8:	mov	w22, #0x0                   	// #0
    ccec:	mov	x21, #0x0                   	// #0
    ccf0:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    ccf4:	movk	x24, #0xaaab
    ccf8:	add	x21, x21, x21, lsl #1
    ccfc:	lsl	x21, x21, #4
    cd00:	ldr	x0, [sp, #248]
    cd04:	ldr	d1, [x0, x21]
    cd08:	ldr	x0, [sp, #296]
    cd0c:	ldr	d0, [x0, x21]
    cd10:	bl	0 <fmod>
    cd14:	str	d0, [x23, x21]
    cd18:	add	w22, w22, #0x1
    cd1c:	mov	w21, w22
    cd20:	ldr	x23, [sp, #200]
    cd24:	ldr	x0, [sp, #208]
    cd28:	sub	x0, x0, x23
    cd2c:	asr	x0, x0, #4
    cd30:	mul	x0, x0, x24
    cd34:	cmp	x0, w22, uxtw
    cd38:	b.hi	ccf8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x113c>  // b.pmore
    cd3c:	ldp	x23, x24, [sp, #48]
    cd40:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cd44:	ldr	x1, [sp, #208]
    cd48:	ldr	x0, [sp, #200]
    cd4c:	cmp	x1, x0
    cd50:	b.eq	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.none
    cd54:	stp	x23, x24, [sp, #48]
    cd58:	mov	w22, #0x0                   	// #0
    cd5c:	mov	x21, #0x0                   	// #0
    cd60:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    cd64:	movk	x23, #0xaaab
    cd68:	add	x21, x21, x21, lsl #1
    cd6c:	lsl	x21, x21, #4
    cd70:	ldr	x0, [sp, #248]
    cd74:	ldr	s1, [x0, x21]
    cd78:	ldr	x0, [sp, #296]
    cd7c:	ldr	s0, [x0, x21]
    cd80:	fcvt	d1, s1
    cd84:	fcvt	d0, s0
    cd88:	bl	0 <fmod>
    cd8c:	fcvt	s0, d0
    cd90:	ldr	x0, [sp, #200]
    cd94:	str	s0, [x0, x21]
    cd98:	add	w22, w22, #0x1
    cd9c:	mov	w21, w22
    cda0:	ldr	x0, [sp, #208]
    cda4:	ldr	x1, [sp, #200]
    cda8:	sub	x0, x0, x1
    cdac:	asr	x0, x0, #4
    cdb0:	mul	x0, x0, x23
    cdb4:	cmp	x0, w22, uxtw
    cdb8:	b.hi	cd68 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x11ac>  // b.pmore
    cdbc:	ldp	x23, x24, [sp, #48]
    cdc0:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cdc4:	stp	x23, x24, [sp, #48]
    cdc8:	stp	x25, x26, [sp, #64]
    cdcc:	bl	0 <_ZN4llvm4dbgsEv>
    cdd0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cdd4:	add	x1, x1, #0x0
    cdd8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cddc:	mov	x19, x0
    cde0:	mov	w3, #0x0                   	// #0
    cde4:	mov	w2, #0x0                   	// #0
    cde8:	mov	x1, x0
    cdec:	mov	x0, x22
    cdf0:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    cdf4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cdf8:	add	x1, x1, #0x0
    cdfc:	mov	x0, x19
    ce00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ce04:	mov	w2, #0x32c                 	// #812
    ce08:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ce0c:	add	x1, x1, #0x0
    ce10:	mov	x0, #0x0                   	// #0
    ce14:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ce18:	cmp	w0, #0xe
    ce1c:	b.eq	d198 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15dc>  // b.none
    ce20:	cmp	w0, #0xf
    ce24:	b.ne	cea0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x12e4>  // b.any
    ce28:	ldr	w0, [sp, #288]
    ce2c:	str	w0, [sp, #616]
    ce30:	cmp	w0, #0x40
    ce34:	b.hi	d188 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15cc>  // b.pmore
    ce38:	ldr	x0, [sp, #280]
    ce3c:	str	x0, [sp, #608]
    ce40:	add	x1, sp, #0xe8
    ce44:	add	x0, sp, #0x260
    ce48:	bl	0 <_ZN4llvm5APIntmIERKS0_>
    ce4c:	ldr	w0, [sp, #616]
    ce50:	str	w0, [sp, #600]
    ce54:	ldr	x0, [sp, #608]
    ce58:	str	x0, [sp, #592]
    ce5c:	str	wzr, [sp, #616]
    ce60:	add	x1, sp, #0x250
    ce64:	add	x0, sp, #0xb8
    ce68:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ce6c:	ldr	w0, [sp, #600]
    ce70:	cmp	w0, #0x40
    ce74:	b.ls	ce84 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x12c8>  // b.plast
    ce78:	ldr	x0, [sp, #592]
    ce7c:	cbz	x0, ce84 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x12c8>
    ce80:	bl	0 <_ZdaPv>
    ce84:	ldr	w0, [sp, #616]
    ce88:	cmp	w0, #0x40
    ce8c:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    ce90:	ldr	x0, [sp, #608]
    ce94:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    ce98:	bl	0 <_ZdaPv>
    ce9c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cea0:	cmp	w0, #0xd
    cea4:	b.ne	d13c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1580>  // b.any
    cea8:	ldr	w0, [sp, #288]
    ceac:	str	w0, [sp, #584]
    ceb0:	cmp	w0, #0x40
    ceb4:	b.hi	d178 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x15bc>  // b.pmore
    ceb8:	ldr	x0, [sp, #280]
    cebc:	str	x0, [sp, #576]
    cec0:	add	x1, sp, #0xe8
    cec4:	add	x0, sp, #0x240
    cec8:	bl	0 <_ZN4llvm5APIntpLERKS0_>
    cecc:	ldr	w0, [sp, #584]
    ced0:	str	w0, [sp, #568]
    ced4:	ldr	x0, [sp, #576]
    ced8:	str	x0, [sp, #560]
    cedc:	str	wzr, [sp, #584]
    cee0:	add	x1, sp, #0x230
    cee4:	add	x0, sp, #0xb8
    cee8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ceec:	ldr	w0, [sp, #568]
    cef0:	cmp	w0, #0x40
    cef4:	b.ls	cf04 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1348>  // b.plast
    cef8:	ldr	x0, [sp, #560]
    cefc:	cbz	x0, cf04 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1348>
    cf00:	bl	0 <_ZdaPv>
    cf04:	ldr	w0, [sp, #584]
    cf08:	cmp	w0, #0x40
    cf0c:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    cf10:	ldr	x0, [sp, #576]
    cf14:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cf18:	bl	0 <_ZdaPv>
    cf1c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cf20:	cmp	w0, #0x11
    cf24:	b.ne	d13c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1580>  // b.any
    cf28:	add	x21, sp, #0x270
    cf2c:	mov	x8, x21
    cf30:	add	x1, sp, #0xe8
    cf34:	add	x0, sp, #0x118
    cf38:	bl	0 <_ZNK4llvm5APIntmlERKS0_>
    cf3c:	mov	x1, x21
    cf40:	add	x0, sp, #0xb8
    cf44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cf48:	ldr	w0, [sp, #632]
    cf4c:	cmp	w0, #0x40
    cf50:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    cf54:	ldr	x0, [sp, #624]
    cf58:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cf5c:	bl	0 <_ZdaPv>
    cf60:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    cf64:	cmp	w0, #0x18
    cf68:	b.eq	d2dc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1720>  // b.none
    cf6c:	b.ls	d008 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x144c>  // b.plast
    cf70:	cmp	w0, #0x1d
    cf74:	b.eq	d400 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1844>  // b.none
    cf78:	cmp	w0, #0x1e
    cf7c:	b.ne	d0ac <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x14f0>  // b.any
    cf80:	ldr	w0, [sp, #288]
    cf84:	str	w0, [sp, #792]
    cf88:	cmp	w0, #0x40
    cf8c:	b.hi	d4e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1928>  // b.pmore
    cf90:	ldr	x1, [sp, #280]
    cf94:	str	x1, [sp, #784]
    cf98:	ldr	w1, [sp, #240]
    cf9c:	cmp	w1, w0
    cfa0:	b.ne	d518 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x195c>  // b.any
    cfa4:	ldr	x0, [sp, #784]
    cfa8:	ldr	x1, [sp, #232]
    cfac:	eor	x0, x0, x1
    cfb0:	str	x0, [sp, #784]
    cfb4:	ldr	w0, [sp, #792]
    cfb8:	str	w0, [sp, #776]
    cfbc:	ldr	x0, [sp, #784]
    cfc0:	str	x0, [sp, #768]
    cfc4:	str	wzr, [sp, #792]
    cfc8:	add	x1, sp, #0x300
    cfcc:	add	x0, sp, #0xb8
    cfd0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    cfd4:	ldr	w0, [sp, #776]
    cfd8:	cmp	w0, #0x40
    cfdc:	b.ls	cfec <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1430>  // b.plast
    cfe0:	ldr	x0, [sp, #768]
    cfe4:	cbz	x0, cfec <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1430>
    cfe8:	bl	0 <_ZdaPv>
    cfec:	ldr	w0, [sp, #792]
    cff0:	cmp	w0, #0x40
    cff4:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    cff8:	ldr	x0, [sp, #784]
    cffc:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d000:	bl	0 <_ZdaPv>
    d004:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d008:	cmp	w0, #0x16
    d00c:	b.eq	d368 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x17ac>  // b.none
    d010:	cmp	w0, #0x17
    d014:	b.ne	d054 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1498>  // b.any
    d018:	add	x21, sp, #0x2b0
    d01c:	mov	x8, x21
    d020:	add	x1, sp, #0xe8
    d024:	add	x0, sp, #0x118
    d028:	bl	0 <_ZNK4llvm5APInt4sremERKS0_>
    d02c:	mov	x1, x21
    d030:	add	x0, sp, #0xb8
    d034:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d038:	ldr	w0, [sp, #696]
    d03c:	cmp	w0, #0x40
    d040:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    d044:	ldr	x0, [sp, #688]
    d048:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d04c:	bl	0 <_ZdaPv>
    d050:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d054:	cmp	w0, #0x15
    d058:	b.ne	d13c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1580>  // b.any
    d05c:	stp	x23, x24, [sp, #48]
    d060:	add	x21, sp, #0x50
    d064:	add	x1, sp, #0x110
    d068:	mov	x0, x21
    d06c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d070:	add	x23, sp, #0x80
    d074:	add	x1, sp, #0xe0
    d078:	mov	x0, x23
    d07c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d080:	mov	x3, x22
    d084:	mov	x2, x23
    d088:	mov	x1, x21
    d08c:	add	x0, sp, #0xb0
    d090:	bl	20c <_ZL15executeFDivInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    d094:	mov	x0, x23
    d098:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d09c:	mov	x0, x21
    d0a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d0a4:	ldp	x23, x24, [sp, #48]
    d0a8:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d0ac:	cmp	w0, #0x1c
    d0b0:	b.ne	d13c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1580>  // b.any
    d0b4:	ldr	w0, [sp, #288]
    d0b8:	str	w0, [sp, #728]
    d0bc:	cmp	w0, #0x40
    d0c0:	b.hi	d3a4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x17e8>  // b.pmore
    d0c4:	ldr	x1, [sp, #280]
    d0c8:	str	x1, [sp, #720]
    d0cc:	ldr	w1, [sp, #240]
    d0d0:	cmp	w1, w0
    d0d4:	b.ne	d3d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x181c>  // b.any
    d0d8:	ldr	x0, [sp, #720]
    d0dc:	ldr	x1, [sp, #232]
    d0e0:	and	x0, x0, x1
    d0e4:	str	x0, [sp, #720]
    d0e8:	ldr	w0, [sp, #728]
    d0ec:	str	w0, [sp, #712]
    d0f0:	ldr	x0, [sp, #720]
    d0f4:	str	x0, [sp, #704]
    d0f8:	str	wzr, [sp, #728]
    d0fc:	add	x1, sp, #0x2c0
    d100:	add	x0, sp, #0xb8
    d104:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d108:	ldr	w0, [sp, #712]
    d10c:	cmp	w0, #0x40
    d110:	b.ls	d120 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1564>  // b.plast
    d114:	ldr	x0, [sp, #704]
    d118:	cbz	x0, d120 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1564>
    d11c:	bl	0 <_ZdaPv>
    d120:	ldr	w0, [sp, #728]
    d124:	cmp	w0, #0x40
    d128:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    d12c:	ldr	x0, [sp, #720]
    d130:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d134:	bl	0 <_ZdaPv>
    d138:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d13c:	stp	x23, x24, [sp, #48]
    d140:	stp	x25, x26, [sp, #64]
    d144:	bl	0 <_ZN4llvm4dbgsEv>
    d148:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d14c:	add	x1, x1, #0x0
    d150:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d154:	mov	w2, #0x0                   	// #0
    d158:	mov	x1, x0
    d15c:	mov	x0, x19
    d160:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    d164:	mov	w2, #0x335                 	// #821
    d168:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d16c:	add	x1, x1, #0x0
    d170:	mov	x0, #0x0                   	// #0
    d174:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    d178:	add	x1, sp, #0x118
    d17c:	add	x0, sp, #0x240
    d180:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d184:	b	cec0 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1304>
    d188:	add	x1, sp, #0x118
    d18c:	add	x0, sp, #0x260
    d190:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d194:	b	ce40 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1284>
    d198:	stp	x23, x24, [sp, #48]
    d19c:	add	x21, sp, #0x50
    d1a0:	add	x1, sp, #0x110
    d1a4:	mov	x0, x21
    d1a8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d1ac:	add	x23, sp, #0x80
    d1b0:	add	x1, sp, #0xe0
    d1b4:	mov	x0, x23
    d1b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d1bc:	mov	x3, x22
    d1c0:	mov	x2, x23
    d1c4:	mov	x1, x21
    d1c8:	add	x0, sp, #0xb0
    d1cc:	bl	2c <_ZL15executeFAddInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    d1d0:	mov	x0, x23
    d1d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d1d8:	mov	x0, x21
    d1dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d1e0:	ldp	x23, x24, [sp, #48]
    d1e4:	add	x22, sp, #0xb0
    d1e8:	add	x21, sp, #0x80
    d1ec:	mov	x1, x22
    d1f0:	mov	x0, x21
    d1f4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d1f8:	mov	x2, x20
    d1fc:	mov	x1, x21
    d200:	mov	x0, x19
    d204:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    d208:	mov	x0, x21
    d20c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d210:	mov	x0, x22
    d214:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d218:	add	x0, sp, #0xe0
    d21c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d220:	add	x0, sp, #0x110
    d224:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d228:	ldp	x19, x20, [sp, #16]
    d22c:	ldp	x21, x22, [sp, #32]
    d230:	ldp	x29, x30, [sp]
    d234:	add	sp, sp, #0x320
    d238:	ret
    d23c:	stp	x23, x24, [sp, #48]
    d240:	add	x21, sp, #0x50
    d244:	add	x1, sp, #0x110
    d248:	mov	x0, x21
    d24c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d250:	add	x23, sp, #0x80
    d254:	add	x1, sp, #0xe0
    d258:	mov	x0, x23
    d25c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d260:	mov	x3, x22
    d264:	mov	x2, x23
    d268:	mov	x1, x21
    d26c:	add	x0, sp, #0xb0
    d270:	bl	cc <_ZL15executeFSubInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    d274:	mov	x0, x23
    d278:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d27c:	mov	x0, x21
    d280:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d284:	ldp	x23, x24, [sp, #48]
    d288:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d28c:	stp	x23, x24, [sp, #48]
    d290:	add	x21, sp, #0x50
    d294:	add	x1, sp, #0x110
    d298:	mov	x0, x21
    d29c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d2a0:	add	x23, sp, #0x80
    d2a4:	add	x1, sp, #0xe0
    d2a8:	mov	x0, x23
    d2ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d2b0:	mov	x3, x22
    d2b4:	mov	x2, x23
    d2b8:	mov	x1, x21
    d2bc:	add	x0, sp, #0xb0
    d2c0:	bl	16c <_ZL15executeFMulInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    d2c4:	mov	x0, x23
    d2c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d2cc:	mov	x0, x21
    d2d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d2d4:	ldp	x23, x24, [sp, #48]
    d2d8:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d2dc:	stp	x23, x24, [sp, #48]
    d2e0:	add	x21, sp, #0x50
    d2e4:	add	x1, sp, #0x110
    d2e8:	mov	x0, x21
    d2ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d2f0:	add	x23, sp, #0x80
    d2f4:	add	x1, sp, #0xe0
    d2f8:	mov	x0, x23
    d2fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d300:	mov	x3, x22
    d304:	mov	x2, x23
    d308:	mov	x1, x21
    d30c:	add	x0, sp, #0xb0
    d310:	bl	2ac <_ZL15executeFRemInstRN4llvm12GenericValueES0_S0_PNS_4TypeE>
    d314:	mov	x0, x23
    d318:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d31c:	mov	x0, x21
    d320:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d324:	ldp	x23, x24, [sp, #48]
    d328:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d32c:	add	x21, sp, #0x290
    d330:	mov	x8, x21
    d334:	add	x1, sp, #0xe8
    d338:	add	x0, sp, #0x118
    d33c:	bl	0 <_ZNK4llvm5APInt4sdivERKS0_>
    d340:	mov	x1, x21
    d344:	add	x0, sp, #0xb8
    d348:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d34c:	ldr	w0, [sp, #664]
    d350:	cmp	w0, #0x40
    d354:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    d358:	ldr	x0, [sp, #656]
    d35c:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d360:	bl	0 <_ZdaPv>
    d364:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d368:	add	x21, sp, #0x2a0
    d36c:	mov	x8, x21
    d370:	add	x1, sp, #0xe8
    d374:	add	x0, sp, #0x118
    d378:	bl	0 <_ZNK4llvm5APInt4uremERKS0_>
    d37c:	mov	x1, x21
    d380:	add	x0, sp, #0xb8
    d384:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d388:	ldr	w0, [sp, #680]
    d38c:	cmp	w0, #0x40
    d390:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    d394:	ldr	x0, [sp, #672]
    d398:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d39c:	bl	0 <_ZdaPv>
    d3a0:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d3a4:	add	x1, sp, #0x118
    d3a8:	add	x0, sp, #0x2d0
    d3ac:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d3b0:	ldr	w0, [sp, #728]
    d3b4:	ldr	w1, [sp, #240]
    d3b8:	cmp	w0, w1
    d3bc:	b.ne	d3d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x181c>  // b.any
    d3c0:	cmp	w0, #0x40
    d3c4:	b.ls	d0d8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x151c>  // b.plast
    d3c8:	add	x1, sp, #0xe8
    d3cc:	add	x0, sp, #0x2d0
    d3d0:	bl	0 <_ZN4llvm5APInt17AndAssignSlowCaseERKS0_>
    d3d4:	b	d0e8 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x152c>
    d3d8:	stp	x23, x24, [sp, #48]
    d3dc:	stp	x25, x26, [sp, #64]
    d3e0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d3e4:	add	x3, x3, #0x0
    d3e8:	mov	w2, #0x329                 	// #809
    d3ec:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d3f0:	add	x1, x1, #0x0
    d3f4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d3f8:	add	x0, x0, #0x0
    d3fc:	bl	0 <__assert_fail>
    d400:	ldr	w0, [sp, #288]
    d404:	str	w0, [sp, #760]
    d408:	cmp	w0, #0x40
    d40c:	b.hi	d488 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x18cc>  // b.pmore
    d410:	ldr	x1, [sp, #280]
    d414:	str	x1, [sp, #752]
    d418:	ldr	w1, [sp, #240]
    d41c:	cmp	w1, w0
    d420:	b.ne	d4bc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1900>  // b.any
    d424:	ldr	x0, [sp, #752]
    d428:	ldr	x1, [sp, #232]
    d42c:	orr	x0, x0, x1
    d430:	str	x0, [sp, #752]
    d434:	ldr	w0, [sp, #760]
    d438:	str	w0, [sp, #744]
    d43c:	ldr	x0, [sp, #752]
    d440:	str	x0, [sp, #736]
    d444:	str	wzr, [sp, #760]
    d448:	add	x1, sp, #0x2e0
    d44c:	add	x0, sp, #0xb8
    d450:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d454:	ldr	w0, [sp, #744]
    d458:	cmp	w0, #0x40
    d45c:	b.ls	d46c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x18b0>  // b.plast
    d460:	ldr	x0, [sp, #736]
    d464:	cbz	x0, d46c <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x18b0>
    d468:	bl	0 <_ZdaPv>
    d46c:	ldr	w0, [sp, #760]
    d470:	cmp	w0, #0x40
    d474:	b.ls	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>  // b.plast
    d478:	ldr	x0, [sp, #752]
    d47c:	cbz	x0, d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d480:	bl	0 <_ZdaPv>
    d484:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d488:	add	x1, sp, #0x118
    d48c:	add	x0, sp, #0x2f0
    d490:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d494:	ldr	w0, [sp, #760]
    d498:	ldr	w1, [sp, #240]
    d49c:	cmp	w0, w1
    d4a0:	b.ne	d4bc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1900>  // b.any
    d4a4:	cmp	w0, #0x40
    d4a8:	b.ls	d424 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1868>  // b.plast
    d4ac:	add	x1, sp, #0xe8
    d4b0:	add	x0, sp, #0x2f0
    d4b4:	bl	0 <_ZN4llvm5APInt16OrAssignSlowCaseERKS0_>
    d4b8:	b	d434 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1878>
    d4bc:	stp	x23, x24, [sp, #48]
    d4c0:	stp	x25, x26, [sp, #64]
    d4c4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d4c8:	add	x3, x3, #0x0
    d4cc:	mov	w2, #0x347                 	// #839
    d4d0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d4d4:	add	x1, x1, #0x0
    d4d8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d4dc:	add	x0, x0, #0x0
    d4e0:	bl	0 <__assert_fail>
    d4e4:	add	x1, sp, #0x118
    d4e8:	add	x0, sp, #0x310
    d4ec:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    d4f0:	ldr	w0, [sp, #792]
    d4f4:	ldr	w1, [sp, #240]
    d4f8:	cmp	w0, w1
    d4fc:	b.ne	d518 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x195c>  // b.any
    d500:	cmp	w0, #0x40
    d504:	b.ls	cfa4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x13e8>  // b.plast
    d508:	add	x1, sp, #0xe8
    d50c:	add	x0, sp, #0x310
    d510:	bl	0 <_ZN4llvm5APInt17XorAssignSlowCaseERKS0_>
    d514:	b	cfb4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x13f8>
    d518:	stp	x23, x24, [sp, #48]
    d51c:	stp	x25, x26, [sp, #64]
    d520:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d524:	add	x3, x3, #0x0
    d528:	mov	w2, #0x365                 	// #869
    d52c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d530:	add	x1, x1, #0x0
    d534:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d538:	add	x0, x0, #0x0
    d53c:	bl	0 <__assert_fail>
    d540:	ldp	x23, x24, [sp, #48]
    d544:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d548:	ldp	x23, x24, [sp, #48]
    d54c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d550:	ldp	x23, x24, [sp, #48]
    d554:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d558:	ldp	x23, x24, [sp, #48]
    d55c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d560:	ldp	x23, x24, [sp, #48]
    d564:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>
    d568:	ldp	x23, x24, [sp, #48]
    d56c:	b	d1e4 <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE+0x1628>

000000000000d570 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE>:
    d570:	stp	x29, x30, [sp, #-416]!
    d574:	mov	x29, sp
    d578:	stp	x19, x20, [sp, #16]
    d57c:	stp	x21, x22, [sp, #32]
    d580:	stp	x23, x24, [sp, #48]
    d584:	str	x25, [sp, #64]
    d588:	mov	x21, x0
    d58c:	mov	x19, x1
    d590:	ldr	x20, [x0, #704]
    d594:	sub	x20, x20, #0x80
    d598:	ldur	x1, [x1, #-72]
    d59c:	ldr	x24, [x1]
    d5a0:	add	x22, sp, #0x170
    d5a4:	mov	x8, x22
    d5a8:	mov	x2, x20
    d5ac:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    d5b0:	add	x23, sp, #0x140
    d5b4:	mov	x8, x23
    d5b8:	mov	x2, x20
    d5bc:	ldur	x1, [x19, #-48]
    d5c0:	mov	x0, x21
    d5c4:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    d5c8:	add	x25, sp, #0x110
    d5cc:	mov	x8, x25
    d5d0:	mov	x2, x20
    d5d4:	ldur	x1, [x19, #-24]
    d5d8:	mov	x0, x21
    d5dc:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    d5e0:	add	x21, sp, #0x50
    d5e4:	mov	x1, x22
    d5e8:	mov	x0, x21
    d5ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d5f0:	add	x22, sp, #0x80
    d5f4:	mov	x1, x23
    d5f8:	mov	x0, x22
    d5fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d600:	add	x23, sp, #0xb0
    d604:	mov	x1, x25
    d608:	mov	x0, x23
    d60c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d610:	add	x8, sp, #0xe0
    d614:	mov	x3, x24
    d618:	mov	x2, x23
    d61c:	mov	x1, x22
    d620:	mov	x0, x21
    d624:	bl	5c78 <_ZL17executeSelectInstN4llvm12GenericValueES0_S0_PNS_4TypeE>
    d628:	ldr	x21, [sp, #200]
    d62c:	ldr	x22, [sp, #208]
    d630:	cmp	x21, x22
    d634:	b.eq	d64c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0xdc>  // b.none
    d638:	mov	x0, x21
    d63c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d640:	add	x21, x21, #0x30
    d644:	cmp	x22, x21
    d648:	b.ne	d638 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0xc8>  // b.any
    d64c:	ldr	x0, [sp, #200]
    d650:	cbz	x0, d658 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0xe8>
    d654:	bl	0 <_ZdlPv>
    d658:	ldr	w0, [sp, #192]
    d65c:	cmp	w0, #0x40
    d660:	b.ls	d670 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x100>  // b.plast
    d664:	ldr	x0, [sp, #184]
    d668:	cbz	x0, d670 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x100>
    d66c:	bl	0 <_ZdaPv>
    d670:	ldr	x21, [sp, #152]
    d674:	ldr	x22, [sp, #160]
    d678:	cmp	x21, x22
    d67c:	b.eq	d694 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x124>  // b.none
    d680:	mov	x0, x21
    d684:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d688:	add	x21, x21, #0x30
    d68c:	cmp	x22, x21
    d690:	b.ne	d680 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x110>  // b.any
    d694:	ldr	x0, [sp, #152]
    d698:	cbz	x0, d6a0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x130>
    d69c:	bl	0 <_ZdlPv>
    d6a0:	ldr	w0, [sp, #144]
    d6a4:	cmp	w0, #0x40
    d6a8:	b.ls	d6b8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x148>  // b.plast
    d6ac:	ldr	x0, [sp, #136]
    d6b0:	cbz	x0, d6b8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x148>
    d6b4:	bl	0 <_ZdaPv>
    d6b8:	ldr	x21, [sp, #104]
    d6bc:	ldr	x22, [sp, #112]
    d6c0:	cmp	x21, x22
    d6c4:	b.eq	d6dc <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x16c>  // b.none
    d6c8:	mov	x0, x21
    d6cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d6d0:	add	x21, x21, #0x30
    d6d4:	cmp	x22, x21
    d6d8:	b.ne	d6c8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x158>  // b.any
    d6dc:	ldr	x0, [sp, #104]
    d6e0:	cbz	x0, d6e8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x178>
    d6e4:	bl	0 <_ZdlPv>
    d6e8:	ldr	w0, [sp, #96]
    d6ec:	cmp	w0, #0x40
    d6f0:	b.ls	d700 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x190>  // b.plast
    d6f4:	ldr	x0, [sp, #88]
    d6f8:	cbz	x0, d700 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x190>
    d6fc:	bl	0 <_ZdaPv>
    d700:	add	x21, sp, #0xb0
    d704:	add	x1, sp, #0xe0
    d708:	mov	x0, x21
    d70c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d710:	mov	x2, x20
    d714:	mov	x1, x21
    d718:	mov	x0, x19
    d71c:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    d720:	ldr	x19, [sp, #200]
    d724:	ldr	x20, [sp, #208]
    d728:	cmp	x19, x20
    d72c:	b.eq	d744 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1d4>  // b.none
    d730:	mov	x0, x19
    d734:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d738:	add	x19, x19, #0x30
    d73c:	cmp	x20, x19
    d740:	b.ne	d730 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1c0>  // b.any
    d744:	ldr	x0, [sp, #200]
    d748:	cbz	x0, d750 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1e0>
    d74c:	bl	0 <_ZdlPv>
    d750:	ldr	w0, [sp, #192]
    d754:	cmp	w0, #0x40
    d758:	b.ls	d768 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1f8>  // b.plast
    d75c:	ldr	x0, [sp, #184]
    d760:	cbz	x0, d768 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x1f8>
    d764:	bl	0 <_ZdaPv>
    d768:	ldr	x19, [sp, #248]
    d76c:	ldr	x20, [sp, #256]
    d770:	cmp	x19, x20
    d774:	b.eq	d78c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x21c>  // b.none
    d778:	mov	x0, x19
    d77c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d780:	add	x19, x19, #0x30
    d784:	cmp	x20, x19
    d788:	b.ne	d778 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x208>  // b.any
    d78c:	ldr	x0, [sp, #248]
    d790:	cbz	x0, d798 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x228>
    d794:	bl	0 <_ZdlPv>
    d798:	ldr	w0, [sp, #240]
    d79c:	cmp	w0, #0x40
    d7a0:	b.ls	d7b0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x240>  // b.plast
    d7a4:	ldr	x0, [sp, #232]
    d7a8:	cbz	x0, d7b0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x240>
    d7ac:	bl	0 <_ZdaPv>
    d7b0:	ldr	x19, [sp, #296]
    d7b4:	ldr	x20, [sp, #304]
    d7b8:	cmp	x19, x20
    d7bc:	b.eq	d7d4 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x264>  // b.none
    d7c0:	mov	x0, x19
    d7c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d7c8:	add	x19, x19, #0x30
    d7cc:	cmp	x20, x19
    d7d0:	b.ne	d7c0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x250>  // b.any
    d7d4:	ldr	x0, [sp, #296]
    d7d8:	cbz	x0, d7e0 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x270>
    d7dc:	bl	0 <_ZdlPv>
    d7e0:	ldr	w0, [sp, #288]
    d7e4:	cmp	w0, #0x40
    d7e8:	b.ls	d7f8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x288>  // b.plast
    d7ec:	ldr	x0, [sp, #280]
    d7f0:	cbz	x0, d7f8 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x288>
    d7f4:	bl	0 <_ZdaPv>
    d7f8:	ldr	x19, [sp, #344]
    d7fc:	ldr	x20, [sp, #352]
    d800:	cmp	x19, x20
    d804:	b.eq	d81c <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2ac>  // b.none
    d808:	mov	x0, x19
    d80c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d810:	add	x19, x19, #0x30
    d814:	cmp	x20, x19
    d818:	b.ne	d808 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x298>  // b.any
    d81c:	ldr	x0, [sp, #344]
    d820:	cbz	x0, d828 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2b8>
    d824:	bl	0 <_ZdlPv>
    d828:	ldr	w0, [sp, #336]
    d82c:	cmp	w0, #0x40
    d830:	b.ls	d840 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2d0>  // b.plast
    d834:	ldr	x0, [sp, #328]
    d838:	cbz	x0, d840 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2d0>
    d83c:	bl	0 <_ZdaPv>
    d840:	ldr	x19, [sp, #392]
    d844:	ldr	x20, [sp, #400]
    d848:	cmp	x19, x20
    d84c:	b.eq	d864 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2f4>  // b.none
    d850:	mov	x0, x19
    d854:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d858:	add	x19, x19, #0x30
    d85c:	cmp	x20, x19
    d860:	b.ne	d850 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x2e0>  // b.any
    d864:	ldr	x0, [sp, #392]
    d868:	cbz	x0, d870 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x300>
    d86c:	bl	0 <_ZdlPv>
    d870:	ldr	w0, [sp, #384]
    d874:	cmp	w0, #0x40
    d878:	b.ls	d888 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x318>  // b.plast
    d87c:	ldr	x0, [sp, #376]
    d880:	cbz	x0, d888 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE+0x318>
    d884:	bl	0 <_ZdaPv>
    d888:	ldp	x19, x20, [sp, #16]
    d88c:	ldp	x21, x22, [sp, #32]
    d890:	ldp	x23, x24, [sp, #48]
    d894:	ldr	x25, [sp, #64]
    d898:	ldp	x29, x30, [sp], #416
    d89c:	ret

000000000000d8a0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>:
    d8a0:	stp	x29, x30, [sp, #-192]!
    d8a4:	mov	x29, sp
    d8a8:	stp	x21, x22, [sp, #32]
    d8ac:	mov	x21, x0
    d8b0:	ldr	x22, [x2, #8]
    d8b4:	str	x1, [x2, #8]
    d8b8:	ldr	x0, [x1, #48]
    d8bc:	str	x0, [x2, #16]
    d8c0:	ldr	x1, [x0]
    d8c4:	tst	w1, #0x4
    d8c8:	b.ne	d918 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x78>  // b.any
    d8cc:	stp	x19, x20, [sp, #16]
    d8d0:	mov	x20, x2
    d8d4:	ldurb	w0, [x0, #-8]
    d8d8:	cmp	w0, #0x4f
    d8dc:	b.ne	dc90 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3f0>  // b.any
    d8e0:	stp	x23, x24, [sp, #48]
    d8e4:	stp	x25, x26, [sp, #64]
    d8e8:	stp	x27, x28, [sp, #80]
    d8ec:	str	xzr, [sp, #168]
    d8f0:	str	xzr, [sp, #176]
    d8f4:	str	xzr, [sp, #184]
    d8f8:	ldr	x2, [x2, #16]
    d8fc:	ldr	x0, [x2]
    d900:	ubfx	x0, x0, #2, #1
    d904:	mov	w24, w0
    d908:	cbnz	x0, d948 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xa8>
    d90c:	add	x19, sp, #0x78
    d910:	add	x23, sp, #0xa8
    d914:	b	da34 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x194>
    d918:	stp	x19, x20, [sp, #16]
    d91c:	stp	x23, x24, [sp, #48]
    d920:	stp	x25, x26, [sp, #64]
    d924:	stp	x27, x28, [sp, #80]
    d928:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d92c:	add	x3, x3, #0x0
    d930:	mov	w2, #0x8b                  	// #139
    d934:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d938:	add	x1, x1, #0x0
    d93c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d940:	add	x0, x0, #0x0
    d944:	bl	0 <__assert_fail>
    d948:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d94c:	add	x3, x3, #0x0
    d950:	mov	w2, #0x8b                  	// #139
    d954:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d958:	add	x1, x1, #0x0
    d95c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d960:	add	x0, x0, #0x0
    d964:	bl	0 <__assert_fail>
    d968:	ldr	x6, [x6, x1]
    d96c:	cmp	x22, x6
    d970:	b.eq	d994 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xf4>  // b.none
    d974:	add	w0, w0, #0x1
    d978:	add	x1, x1, #0x8
    d97c:	cmp	w7, w0
    d980:	b.eq	da88 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1e8>  // b.none
    d984:	mov	x6, x8
    d988:	cbz	w5, d968 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xc8>
    d98c:	ldur	x6, [x2, #-32]
    d990:	b	d968 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xc8>
    d994:	cmn	w0, #0x1
    d998:	b.eq	da88 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1e8>  // b.none
    d99c:	cmp	w3, w0
    d9a0:	b.ls	daa8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x208>  // b.plast
    d9a4:	cbz	w5, d9ac <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x10c>
    d9a8:	ldur	x4, [x2, #-32]
    d9ac:	ubfiz	x1, x0, #1, #32
    d9b0:	add	x0, x1, w0, uxtw
    d9b4:	mov	x8, x19
    d9b8:	mov	x2, x20
    d9bc:	ldr	x1, [x4, x0, lsl #3]
    d9c0:	mov	x0, x21
    d9c4:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    d9c8:	mov	x1, x19
    d9cc:	mov	x0, x23
    d9d0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d9d4:	ldr	x25, [sp, #144]
    d9d8:	ldr	x26, [sp, #152]
    d9dc:	cmp	x25, x26
    d9e0:	b.eq	d9f8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x158>  // b.none
    d9e4:	mov	x0, x25
    d9e8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    d9ec:	add	x25, x25, #0x30
    d9f0:	cmp	x26, x25
    d9f4:	b.ne	d9e4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x144>  // b.any
    d9f8:	ldr	x0, [sp, #144]
    d9fc:	cbz	x0, da04 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x164>
    da00:	bl	0 <_ZdlPv>
    da04:	ldr	w0, [sp, #136]
    da08:	cmp	w0, #0x40
    da0c:	b.ls	da1c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x17c>  // b.plast
    da10:	ldr	x0, [sp, #128]
    da14:	cbz	x0, da1c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x17c>
    da18:	bl	0 <_ZdaPv>
    da1c:	ldr	x0, [x20, #16]
    da20:	ldr	x2, [x0, #8]
    da24:	str	x2, [x20, #16]
    da28:	ldr	x0, [x2]
    da2c:	tst	w0, #0x4
    da30:	b.ne	d948 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xa8>  // b.any
    da34:	ldurb	w0, [x2, #-8]
    da38:	cmp	w0, #0x4f
    da3c:	b.ne	dcf8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x458>  // b.any
    da40:	ldur	w3, [x2, #-4]
    da44:	ubfx	x3, x3, #0, #28
    da48:	mov	w7, w3
    da4c:	cbz	w3, da88 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x1e8>
    da50:	sub	x0, x2, #0x18
    da54:	ldurb	w5, [x2, #-1]
    da58:	and	w5, w5, #0x40
    da5c:	mov	w1, w3
    da60:	ubfiz	x4, x3, #1, #28
    da64:	add	x4, x4, x1
    da68:	sub	x4, x0, x4, lsl #3
    da6c:	ldr	w1, [x2, #32]
    da70:	add	x1, x1, x1, lsl #1
    da74:	lsl	x1, x1, #3
    da78:	add	x1, x1, #0x8
    da7c:	mov	w0, w24
    da80:	mov	x8, x4
    da84:	b	d984 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0xe4>
    da88:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    da8c:	add	x3, x3, #0x0
    da90:	mov	w2, #0x3e4                 	// #996
    da94:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    da98:	add	x1, x1, #0x0
    da9c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    daa0:	add	x0, x0, #0x0
    daa4:	bl	0 <__assert_fail>
    daa8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    daac:	add	x3, x3, #0x0
    dab0:	mov	w2, #0xadf                 	// #2783
    dab4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dab8:	add	x1, x1, #0x0
    dabc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dac0:	add	x0, x0, #0x0
    dac4:	bl	0 <__assert_fail>
    dac8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dacc:	add	x3, x3, #0x0
    dad0:	mov	w2, #0x8b                  	// #139
    dad4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dad8:	add	x1, x1, #0x0
    dadc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dae0:	add	x0, x0, #0x0
    dae4:	bl	0 <__assert_fail>
    dae8:	add	x1, x19, #0x8
    daec:	ldr	x0, [sp, #104]
    daf0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    daf4:	b	db64 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x2c4>
    daf8:	bl	0 <_ZSt17__throw_bad_allocv>
    dafc:	mov	x22, #0x0                   	// #0
    db00:	b	dba4 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x304>
    db04:	ldr	x0, [x20, #16]
    db08:	ldr	x0, [x0, #8]
    db0c:	str	x0, [x20, #16]
    db10:	add	w24, w24, #0x1
    db14:	ldr	x1, [x0]
    db18:	tst	w1, #0x4
    db1c:	b.ne	dac8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x228>  // b.any
    db20:	sub	x26, x0, #0x18
    db24:	ldurb	w0, [x0, #-8]
    db28:	cmp	w0, #0x4f
    db2c:	b.ne	dc68 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3c8>  // b.any
    db30:	ubfiz	x0, x24, #1, #32
    db34:	add	x0, x0, w24, uxtw
    db38:	lsl	x0, x0, #4
    db3c:	ldr	x1, [sp, #168]
    db40:	add	x19, x1, x0
    db44:	ldr	x0, [x1, x0]
    db48:	str	x0, [sp, #120]
    db4c:	ldr	w0, [x19, #16]
    db50:	str	w0, [sp, #136]
    db54:	cmp	w0, #0x40
    db58:	b.hi	dae8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x248>  // b.pmore
    db5c:	ldr	x0, [x19, #8]
    db60:	str	x0, [sp, #128]
    db64:	ldr	x21, [x19, #32]
    db68:	ldr	x0, [x19, #24]
    db6c:	sub	x21, x21, x0
    db70:	asr	x0, x21, #4
    db74:	mul	x0, x0, x27
    db78:	str	xzr, [sp, #144]
    db7c:	str	xzr, [sp, #152]
    db80:	str	xzr, [sp, #160]
    db84:	cbz	x0, dafc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x25c>
    db88:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    db8c:	movk	x1, #0x2aa, lsl #48
    db90:	cmp	x0, x1
    db94:	b.hi	daf8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x258>  // b.pmore
    db98:	mov	x0, x21
    db9c:	bl	0 <_Znwm>
    dba0:	mov	x22, x0
    dba4:	str	x22, [sp, #144]
    dba8:	str	x22, [sp, #152]
    dbac:	add	x21, x22, x21
    dbb0:	str	x21, [sp, #160]
    dbb4:	ldr	x25, [x19, #24]
    dbb8:	ldr	x19, [x19, #32]
    dbbc:	cmp	x25, x19
    dbc0:	b.eq	dc08 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x368>  // b.none
    dbc4:	mov	x21, x25
    dbc8:	mov	x23, x22
    dbcc:	mov	x1, x21
    dbd0:	mov	x0, x23
    dbd4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dbd8:	add	x23, x23, #0x30
    dbdc:	add	x21, x21, #0x30
    dbe0:	cmp	x19, x21
    dbe4:	b.ne	dbcc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x32c>  // b.any
    dbe8:	sub	x0, x19, #0x30
    dbec:	sub	x0, x0, x25
    dbf0:	lsr	x0, x0, #4
    dbf4:	mul	x0, x0, x28
    dbf8:	and	x0, x0, #0xfffffffffffffff
    dbfc:	add	x0, x0, #0x1
    dc00:	add	x0, x0, x0, lsl #1
    dc04:	add	x22, x22, x0, lsl #4
    dc08:	str	x22, [sp, #152]
    dc0c:	mov	x2, x20
    dc10:	ldr	x1, [sp, #96]
    dc14:	mov	x0, x26
    dc18:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    dc1c:	ldr	x19, [sp, #144]
    dc20:	ldr	x21, [sp, #152]
    dc24:	cmp	x19, x21
    dc28:	b.eq	dc40 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3a0>  // b.none
    dc2c:	mov	x0, x19
    dc30:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dc34:	add	x19, x19, #0x30
    dc38:	cmp	x21, x19
    dc3c:	b.ne	dc2c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x38c>  // b.any
    dc40:	ldr	x0, [sp, #144]
    dc44:	cbz	x0, dc4c <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3ac>
    dc48:	bl	0 <_ZdlPv>
    dc4c:	ldr	w0, [sp, #136]
    dc50:	cmp	w0, #0x40
    dc54:	b.ls	db04 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x264>  // b.plast
    dc58:	ldr	x0, [sp, #128]
    dc5c:	cbz	x0, db04 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x264>
    dc60:	bl	0 <_ZdaPv>
    dc64:	b	db04 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x264>
    dc68:	ldr	x20, [sp, #168]
    dc6c:	ldr	x22, [sp, #176]
    dc70:	cmp	x20, x22
    dc74:	b.ne	dcac <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x40c>  // b.any
    dc78:	ldr	x0, [sp, #168]
    dc7c:	cbz	x0, dd44 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x4a4>
    dc80:	bl	0 <_ZdlPv>
    dc84:	ldp	x23, x24, [sp, #48]
    dc88:	ldp	x25, x26, [sp, #64]
    dc8c:	ldp	x27, x28, [sp, #80]
    dc90:	ldp	x19, x20, [sp, #16]
    dc94:	ldp	x21, x22, [sp, #32]
    dc98:	ldp	x29, x30, [sp], #192
    dc9c:	ret
    dca0:	add	x20, x20, #0x30
    dca4:	cmp	x22, x20
    dca8:	b.eq	dc78 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3d8>  // b.none
    dcac:	ldr	x19, [x20, #24]
    dcb0:	ldr	x21, [x20, #32]
    dcb4:	cmp	x19, x21
    dcb8:	b.eq	dcd0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x430>  // b.none
    dcbc:	mov	x0, x19
    dcc0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dcc4:	add	x19, x19, #0x30
    dcc8:	cmp	x21, x19
    dccc:	b.ne	dcbc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x41c>  // b.any
    dcd0:	ldr	x0, [x20, #24]
    dcd4:	cbz	x0, dcdc <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x43c>
    dcd8:	bl	0 <_ZdlPv>
    dcdc:	ldr	w0, [x20, #16]
    dce0:	cmp	w0, #0x40
    dce4:	b.ls	dca0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x400>  // b.plast
    dce8:	ldr	x0, [x20, #8]
    dcec:	cbz	x0, dca0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x400>
    dcf0:	bl	0 <_ZdaPv>
    dcf4:	b	dca0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x400>
    dcf8:	ldr	x0, [x20, #8]
    dcfc:	ldr	x1, [x0, #48]
    dd00:	str	x1, [x20, #16]
    dd04:	mov	x0, x1
    dd08:	ldr	x1, [x1]
    dd0c:	ubfx	x1, x1, #2, #1
    dd10:	mov	w24, w1
    dd14:	cbnz	x1, dac8 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x228>
    dd18:	add	x1, sp, #0x78
    dd1c:	str	x1, [sp, #96]
    dd20:	add	x1, sp, #0x80
    dd24:	str	x1, [sp, #104]
    dd28:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    dd2c:	movk	x27, #0xaaab
    dd30:	mov	x28, #0xaaab                	// #43691
    dd34:	movk	x28, #0xaaaa, lsl #16
    dd38:	movk	x28, #0xaaaa, lsl #32
    dd3c:	movk	x28, #0xaaa, lsl #48
    dd40:	b	db20 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x280>
    dd44:	ldp	x23, x24, [sp, #48]
    dd48:	ldp	x25, x26, [sp, #64]
    dd4c:	ldp	x27, x28, [sp, #80]
    dd50:	b	dc90 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE+0x3f0>

000000000000dd54 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE>:
    dd54:	stp	x29, x30, [sp, #-128]!
    dd58:	mov	x29, sp
    dd5c:	stp	x19, x20, [sp, #16]
    dd60:	stp	x21, x22, [sp, #32]
    dd64:	stp	x23, x24, [sp, #48]
    dd68:	mov	x20, x0
    dd6c:	mov	x19, x1
    dd70:	ldr	x22, [x0, #704]
    dd74:	sub	x22, x22, #0x80
    dd78:	ldr	w0, [x1, #20]
    dd7c:	ubfx	x0, x0, #0, #28
    dd80:	ldur	x23, [x1, #-24]
    dd84:	cbz	x23, dd94 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x40>
    dd88:	ldrb	w1, [x23, #16]
    dd8c:	cmp	w1, #0x12
    dd90:	b.ne	de64 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x110>  // b.any
    dd94:	cmp	w0, #0x1
    dd98:	b.eq	de40 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xec>  // b.none
    dd9c:	str	x25, [sp, #64]
    dda0:	cmp	w0, #0x3
    dda4:	b.ne	de88 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x134>  // b.any
    dda8:	add	x8, sp, #0x50
    ddac:	mov	x2, x22
    ddb0:	ldur	x1, [x19, #-72]
    ddb4:	mov	x0, x20
    ddb8:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ddbc:	ldr	w21, [sp, #96]
    ddc0:	cmp	w21, #0x40
    ddc4:	b.ls	dea8 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x154>  // b.plast
    ddc8:	add	x0, sp, #0x58
    ddcc:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ddd0:	sub	w21, w21, w0
    ddd4:	mov	w25, #0x0                   	// #0
    ddd8:	cmp	w21, #0x40
    dddc:	b.hi	ddf0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x9c>  // b.pmore
    dde0:	ldr	x0, [sp, #88]
    dde4:	ldr	x0, [x0]
    dde8:	cmp	x0, #0x0
    ddec:	cset	w25, eq  // eq = none
    ddf0:	ldr	x21, [sp, #104]
    ddf4:	ldr	x24, [sp, #112]
    ddf8:	cmp	x21, x24
    ddfc:	b.eq	de14 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xc0>  // b.none
    de00:	mov	x0, x21
    de04:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    de08:	add	x21, x21, #0x30
    de0c:	cmp	x24, x21
    de10:	b.ne	de00 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xac>  // b.any
    de14:	ldr	x0, [sp, #104]
    de18:	cbz	x0, de20 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xcc>
    de1c:	bl	0 <_ZdlPv>
    de20:	ldr	w0, [sp, #96]
    de24:	cmp	w0, #0x40
    de28:	b.ls	de38 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xe4>  // b.plast
    de2c:	ldr	x0, [sp, #88]
    de30:	cbz	x0, de38 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xe4>
    de34:	bl	0 <_ZdaPv>
    de38:	cbnz	w25, deb0 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x15c>
    de3c:	ldr	x25, [sp, #64]
    de40:	mov	x2, x22
    de44:	mov	x1, x23
    de48:	mov	x0, x20
    de4c:	bl	d8a0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    de50:	ldp	x19, x20, [sp, #16]
    de54:	ldp	x21, x22, [sp, #32]
    de58:	ldp	x23, x24, [sp, #48]
    de5c:	ldp	x29, x30, [sp], #128
    de60:	ret
    de64:	str	x25, [sp, #64]
    de68:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    de6c:	add	x3, x3, #0x0
    de70:	mov	w2, #0x134                 	// #308
    de74:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    de78:	add	x1, x1, #0x0
    de7c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    de80:	add	x0, x0, #0x0
    de84:	bl	0 <__assert_fail>
    de88:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    de8c:	add	x3, x3, #0x0
    de90:	mov	w2, #0xbf7                 	// #3063
    de94:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    de98:	add	x1, x1, #0x0
    de9c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dea0:	add	x0, x0, #0x0
    dea4:	bl	0 <__assert_fail>
    dea8:	ldr	x0, [sp, #88]
    deac:	b	dde8 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x94>
    deb0:	ldr	w0, [x19, #20]
    deb4:	ubfx	x0, x0, #0, #28
    deb8:	cmp	w0, #0x3
    debc:	b.ne	dedc <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x188>  // b.any
    dec0:	ldur	x23, [x19, #-48]
    dec4:	cbz	x23, df1c <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x1c8>
    dec8:	ldrb	w0, [x23, #16]
    decc:	cmp	w0, #0x12
    ded0:	b.ne	defc <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0x1a8>  // b.any
    ded4:	ldr	x25, [sp, #64]
    ded8:	b	de40 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xec>
    dedc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dee0:	add	x3, x3, #0x0
    dee4:	mov	w2, #0xc03                 	// #3075
    dee8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    deec:	add	x1, x1, #0x0
    def0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    def4:	add	x0, x0, #0x0
    def8:	bl	0 <__assert_fail>
    defc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    df00:	add	x3, x3, #0x0
    df04:	mov	w2, #0x134                 	// #308
    df08:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    df0c:	add	x1, x1, #0x0
    df10:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    df14:	add	x0, x0, #0x0
    df18:	bl	0 <__assert_fail>
    df1c:	ldr	x25, [sp, #64]
    df20:	b	de40 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE+0xec>

000000000000df24 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE>:
    df24:	stp	x29, x30, [sp, #-400]!
    df28:	mov	x29, sp
    df2c:	stp	x25, x26, [sp, #64]
    df30:	str	x0, [sp, #104]
    df34:	ldr	x26, [x0, #704]
    df38:	sub	x0, x26, #0x80
    df3c:	str	x0, [sp, #96]
    df40:	ldr	w0, [x1, #20]
    df44:	ubfx	x0, x0, #0, #28
    df48:	cbz	w0, dfcc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xa8>
    df4c:	stp	x19, x20, [sp, #16]
    df50:	stp	x23, x24, [sp, #48]
    df54:	mov	x23, x1
    df58:	str	x1, [sp, #136]
    df5c:	ldrb	w1, [x1, #23]
    df60:	tbz	w1, #6, dffc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xd8>
    df64:	ldur	x0, [x23, #-8]
    df68:	ldr	x1, [x0]
    df6c:	ldr	x0, [x1]
    df70:	str	x0, [sp, #112]
    df74:	add	x8, sp, #0x160
    df78:	ldr	x2, [sp, #96]
    df7c:	ldr	x0, [sp, #104]
    df80:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    df84:	ldr	w0, [x23, #20]
    df88:	ubfx	x0, x0, #1, #27
    df8c:	sub	w26, w0, #0x1
    df90:	cbz	x26, e5fc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x6d8>
    df94:	stp	x21, x22, [sp, #32]
    df98:	stp	x27, x28, [sp, #80]
    df9c:	mov	x21, #0x0                   	// #0
    dfa0:	add	x0, sp, #0x168
    dfa4:	str	x0, [sp, #144]
    dfa8:	add	x0, sp, #0xd0
    dfac:	str	x0, [sp, #128]
    dfb0:	add	x0, sp, #0xd8
    dfb4:	str	x0, [sp, #152]
    dfb8:	mov	x24, #0xaaab                	// #43691
    dfbc:	movk	x24, #0xaaaa, lsl #16
    dfc0:	movk	x24, #0xaaaa, lsl #32
    dfc4:	movk	x24, #0xaaa, lsl #48
    dfc8:	b	e26c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x348>
    dfcc:	stp	x19, x20, [sp, #16]
    dfd0:	stp	x21, x22, [sp, #32]
    dfd4:	stp	x23, x24, [sp, #48]
    dfd8:	stp	x27, x28, [sp, #80]
    dfdc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dfe0:	add	x3, x3, #0x0
    dfe4:	mov	w2, #0xdbe                 	// #3518
    dfe8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dfec:	add	x1, x1, #0x0
    dff0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    dff4:	add	x0, x0, #0x0
    dff8:	bl	0 <__assert_fail>
    dffc:	mov	w1, w0
    e000:	ubfiz	x0, x0, #1, #28
    e004:	add	x0, x0, x1
    e008:	sub	x0, x23, x0, lsl #3
    e00c:	b	df68 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x44>
    e010:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e014:	add	x3, x3, #0x0
    e018:	mov	w2, #0xc78                 	// #3192
    e01c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e020:	add	x1, x1, #0x0
    e024:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e028:	add	x0, x0, #0x0
    e02c:	bl	0 <__assert_fail>
    e030:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e034:	add	x3, x3, #0x0
    e038:	mov	w2, #0xdbe                 	// #3518
    e03c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e040:	add	x1, x1, #0x0
    e044:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e048:	add	x0, x0, #0x0
    e04c:	bl	0 <__assert_fail>
    e050:	mov	w2, w1
    e054:	ubfiz	x1, x1, #1, #28
    e058:	add	x1, x1, x2
    e05c:	ldr	x2, [sp, #136]
    e060:	sub	x1, x2, x1, lsl #3
    e064:	b	e2a8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x384>
    e068:	ldr	x1, [sp, #144]
    e06c:	ldr	x0, [sp, #152]
    e070:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e074:	b	e2e4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x3c0>
    e078:	bl	0 <_ZSt17__throw_bad_allocv>
    e07c:	mov	x20, #0x0                   	// #0
    e080:	b	e32c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x408>
    e084:	add	x1, sp, #0xa8
    e088:	add	x0, sp, #0x108
    e08c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    e090:	b	e3b4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x490>
    e094:	bl	0 <_ZSt17__throw_bad_allocv>
    e098:	mov	x20, #0x0                   	// #0
    e09c:	b	e3fc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x4d8>
    e0a0:	ldr	x0, [sp, #312]
    e0a4:	b	e4a4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x580>
    e0a8:	ldr	w2, [x23, #20]
    e0ac:	ubfx	x1, x2, #0, #28
    e0b0:	ubfx	x2, x2, #1, #27
    e0b4:	sub	w0, w2, #0x1
    e0b8:	ldr	w3, [sp, #124]
    e0bc:	cmp	w0, w3
    e0c0:	ccmn	w3, #0x2, #0x4, ls  // ls = plast
    e0c4:	b.ne	e190 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x26c>  // b.any
    e0c8:	ldr	w0, [sp, #124]
    e0cc:	cmn	w0, #0x2
    e0d0:	csinc	w0, wzr, w0, eq  // eq = none
    e0d4:	cmp	w2, w0
    e0d8:	b.ls	e1b0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x28c>  // b.plast
    e0dc:	lsl	w0, w0, #1
    e0e0:	add	w0, w0, #0x1
    e0e4:	cmp	w1, w0
    e0e8:	b.ls	e1d0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x2ac>  // b.plast
    e0ec:	ldrb	w2, [x23, #23]
    e0f0:	tbz	w2, #6, e1f0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x2cc>
    e0f4:	ldur	x23, [x23, #-8]
    e0f8:	ubfiz	x1, x0, #1, #32
    e0fc:	add	x0, x1, w0, uxtw
    e100:	ldr	x19, [x23, x0, lsl #3]
    e104:	cbz	x19, e204 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x2e0>
    e108:	ldrb	w0, [x19, #16]
    e10c:	cmp	w0, #0x12
    e110:	b.ne	e224 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x300>  // b.any
    e114:	add	x0, sp, #0xa0
    e118:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e11c:	ldp	x21, x22, [sp, #32]
    e120:	ldp	x27, x28, [sp, #80]
    e124:	ldr	x2, [sp, #96]
    e128:	mov	x1, x19
    e12c:	ldr	x0, [sp, #104]
    e130:	bl	d8a0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    e134:	ldr	x19, [sp, #376]
    e138:	ldr	x20, [sp, #384]
    e13c:	cmp	x19, x20
    e140:	b.eq	e158 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x234>  // b.none
    e144:	mov	x0, x19
    e148:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e14c:	add	x19, x19, #0x30
    e150:	cmp	x20, x19
    e154:	b.ne	e144 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x220>  // b.any
    e158:	ldr	x0, [sp, #376]
    e15c:	cbz	x0, e164 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x240>
    e160:	bl	0 <_ZdlPv>
    e164:	ldr	w0, [sp, #368]
    e168:	cmp	w0, #0x40
    e16c:	b.ls	e17c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x258>  // b.plast
    e170:	ldr	x0, [sp, #360]
    e174:	cbz	x0, e17c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x258>
    e178:	bl	0 <_ZdaPv>
    e17c:	ldp	x19, x20, [sp, #16]
    e180:	ldp	x23, x24, [sp, #48]
    e184:	ldp	x25, x26, [sp, #64]
    e188:	ldp	x29, x30, [sp], #400
    e18c:	ret
    e190:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e194:	add	x3, x3, #0x0
    e198:	mov	w2, #0xc7f                 	// #3199
    e19c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e1a0:	add	x1, x1, #0x0
    e1a4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e1a8:	add	x0, x0, #0x0
    e1ac:	bl	0 <__assert_fail>
    e1b0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e1b4:	add	x3, x3, #0x0
    e1b8:	mov	w2, #0xd7c                 	// #3452
    e1bc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e1c0:	add	x1, x1, #0x0
    e1c4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e1c8:	add	x0, x0, #0x0
    e1cc:	bl	0 <__assert_fail>
    e1d0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e1d4:	add	x3, x3, #0x0
    e1d8:	mov	w2, #0xdbe                 	// #3518
    e1dc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e1e0:	add	x1, x1, #0x0
    e1e4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e1e8:	add	x0, x0, #0x0
    e1ec:	bl	0 <__assert_fail>
    e1f0:	mov	w2, w1
    e1f4:	ubfiz	x1, x1, #1, #28
    e1f8:	add	x1, x1, x2
    e1fc:	sub	x23, x23, x1, lsl #3
    e200:	b	e0f8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x1d4>
    e204:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e208:	add	x3, x3, #0x0
    e20c:	mov	w2, #0x69                  	// #105
    e210:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e214:	add	x1, x1, #0x0
    e218:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e21c:	add	x0, x0, #0x0
    e220:	bl	0 <__assert_fail>
    e224:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e228:	add	x3, x3, #0x0
    e22c:	mov	w2, #0x108                 	// #264
    e230:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e234:	add	x1, x1, #0x0
    e238:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e23c:	add	x0, x0, #0x0
    e240:	bl	0 <__assert_fail>
    e244:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e248:	cmp	x21, x0
    e24c:	b.eq	e5d4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x6b0>  // b.none
    e250:	ldr	w0, [x23, #20]
    e254:	ubfx	x0, x0, #1, #27
    e258:	sub	w0, w0, #0x1
    e25c:	cmp	w0, w25
    e260:	b.cc	e5d4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x6b0>  // b.lo, b.ul, b.last
    e264:	cmp	x26, x21
    e268:	b.eq	e5f4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x6d0>  // b.none
    e26c:	str	w21, [sp, #124]
    e270:	ldr	w0, [x23, #20]
    e274:	ubfx	x1, x0, #0, #28
    e278:	ubfx	x0, x0, #1, #27
    e27c:	sub	w0, w0, #0x1
    e280:	cmp	w0, w21
    e284:	b.ls	e010 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0xec>  // b.plast
    e288:	add	x21, x21, #0x1
    e28c:	mov	w25, w21
    e290:	lsl	w0, w21, #1
    e294:	cmp	w1, w21, lsl #1
    e298:	b.ls	e030 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x10c>  // b.plast
    e29c:	ldrb	w2, [x23, #23]
    e2a0:	tbz	w2, #6, e050 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x12c>
    e2a4:	ldur	x1, [x23, #-8]
    e2a8:	mov	w0, w0
    e2ac:	add	x0, x0, x0, lsl #1
    e2b0:	add	x8, sp, #0xa0
    e2b4:	ldr	x2, [sp, #96]
    e2b8:	ldr	x1, [x1, x0, lsl #3]
    e2bc:	ldr	x0, [sp, #104]
    e2c0:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e2c4:	ldr	x0, [sp, #352]
    e2c8:	str	x0, [sp, #208]
    e2cc:	ldr	w0, [sp, #368]
    e2d0:	str	w0, [sp, #224]
    e2d4:	cmp	w0, #0x40
    e2d8:	b.hi	e068 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x144>  // b.pmore
    e2dc:	ldr	x0, [sp, #360]
    e2e0:	str	x0, [sp, #216]
    e2e4:	ldr	x19, [sp, #384]
    e2e8:	ldr	x0, [sp, #376]
    e2ec:	sub	x19, x19, x0
    e2f0:	asr	x0, x19, #4
    e2f4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e2f8:	movk	x1, #0xaaab
    e2fc:	mul	x0, x0, x1
    e300:	str	xzr, [sp, #232]
    e304:	str	xzr, [sp, #240]
    e308:	str	xzr, [sp, #248]
    e30c:	cbz	x0, e07c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x158>
    e310:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e314:	movk	x1, #0x2aa, lsl #48
    e318:	cmp	x0, x1
    e31c:	b.hi	e078 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x154>  // b.pmore
    e320:	mov	x0, x19
    e324:	bl	0 <_Znwm>
    e328:	mov	x20, x0
    e32c:	str	x20, [sp, #232]
    e330:	str	x20, [sp, #240]
    e334:	add	x19, x20, x19
    e338:	str	x19, [sp, #248]
    e33c:	ldr	x28, [sp, #376]
    e340:	ldr	x19, [sp, #384]
    e344:	cmp	x28, x19
    e348:	b.eq	e390 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x46c>  // b.none
    e34c:	mov	x22, x28
    e350:	mov	x27, x20
    e354:	mov	x1, x22
    e358:	mov	x0, x27
    e35c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e360:	add	x27, x27, #0x30
    e364:	add	x22, x22, #0x30
    e368:	cmp	x19, x22
    e36c:	b.ne	e354 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x430>  // b.any
    e370:	sub	x0, x19, #0x30
    e374:	sub	x0, x0, x28
    e378:	lsr	x0, x0, #4
    e37c:	mul	x0, x0, x24
    e380:	and	x0, x0, #0xfffffffffffffff
    e384:	add	x0, x0, #0x1
    e388:	add	x0, x0, x0, lsl #1
    e38c:	add	x20, x20, x0, lsl #4
    e390:	str	x20, [sp, #240]
    e394:	ldr	x0, [sp, #160]
    e398:	str	x0, [sp, #256]
    e39c:	ldr	w0, [sp, #176]
    e3a0:	str	w0, [sp, #272]
    e3a4:	cmp	w0, #0x40
    e3a8:	b.hi	e084 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x160>  // b.pmore
    e3ac:	ldr	x0, [sp, #168]
    e3b0:	str	x0, [sp, #264]
    e3b4:	ldr	x19, [sp, #192]
    e3b8:	ldr	x0, [sp, #184]
    e3bc:	sub	x19, x19, x0
    e3c0:	asr	x0, x19, #4
    e3c4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e3c8:	movk	x1, #0xaaab
    e3cc:	mul	x0, x0, x1
    e3d0:	str	xzr, [sp, #280]
    e3d4:	str	xzr, [sp, #288]
    e3d8:	str	xzr, [sp, #296]
    e3dc:	cbz	x0, e098 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x174>
    e3e0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e3e4:	movk	x1, #0x2aa, lsl #48
    e3e8:	cmp	x0, x1
    e3ec:	b.hi	e094 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x170>  // b.pmore
    e3f0:	mov	x0, x19
    e3f4:	bl	0 <_Znwm>
    e3f8:	mov	x20, x0
    e3fc:	str	x20, [sp, #280]
    e400:	str	x20, [sp, #288]
    e404:	add	x19, x20, x19
    e408:	str	x19, [sp, #296]
    e40c:	ldr	x28, [sp, #184]
    e410:	ldr	x19, [sp, #192]
    e414:	cmp	x28, x19
    e418:	b.eq	e460 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x53c>  // b.none
    e41c:	mov	x22, x28
    e420:	mov	x27, x20
    e424:	mov	x1, x22
    e428:	mov	x0, x27
    e42c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e430:	add	x27, x27, #0x30
    e434:	add	x22, x22, #0x30
    e438:	cmp	x19, x22
    e43c:	b.ne	e424 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x500>  // b.any
    e440:	sub	x0, x19, #0x30
    e444:	sub	x0, x0, x28
    e448:	lsr	x0, x0, #4
    e44c:	mul	x0, x0, x24
    e450:	and	x0, x0, #0xfffffffffffffff
    e454:	add	x0, x0, #0x1
    e458:	add	x0, x0, x0, lsl #1
    e45c:	add	x20, x20, x0, lsl #4
    e460:	str	x20, [sp, #288]
    e464:	add	x8, sp, #0x130
    e468:	ldr	x2, [sp, #112]
    e46c:	add	x1, sp, #0x100
    e470:	ldr	x0, [sp, #128]
    e474:	bl	4b0 <_ZL14executeICMP_EQN4llvm12GenericValueES0_PNS_4TypeE>
    e478:	ldr	w19, [sp, #320]
    e47c:	cmp	w19, #0x40
    e480:	b.ls	e0a0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x17c>  // b.plast
    e484:	add	x0, sp, #0x138
    e488:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    e48c:	sub	w19, w19, w0
    e490:	mov	w20, #0x0                   	// #0
    e494:	cmp	w19, #0x40
    e498:	b.hi	e4ac <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x588>  // b.pmore
    e49c:	ldr	x0, [sp, #312]
    e4a0:	ldr	x0, [x0]
    e4a4:	cmp	x0, #0x0
    e4a8:	cset	w20, eq  // eq = none
    e4ac:	ldr	x19, [sp, #328]
    e4b0:	ldr	x22, [sp, #336]
    e4b4:	cmp	x19, x22
    e4b8:	b.eq	e4d0 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5ac>  // b.none
    e4bc:	mov	x0, x19
    e4c0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e4c4:	add	x19, x19, #0x30
    e4c8:	cmp	x22, x19
    e4cc:	b.ne	e4bc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x598>  // b.any
    e4d0:	ldr	x0, [sp, #328]
    e4d4:	cbz	x0, e4dc <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5b8>
    e4d8:	bl	0 <_ZdlPv>
    e4dc:	ldr	w0, [sp, #320]
    e4e0:	cmp	w0, #0x40
    e4e4:	b.ls	e4f4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5d0>  // b.plast
    e4e8:	ldr	x0, [sp, #312]
    e4ec:	cbz	x0, e4f4 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5d0>
    e4f0:	bl	0 <_ZdaPv>
    e4f4:	ldr	x19, [sp, #280]
    e4f8:	ldr	x22, [sp, #288]
    e4fc:	cmp	x19, x22
    e500:	b.eq	e518 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5f4>  // b.none
    e504:	mov	x0, x19
    e508:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e50c:	add	x19, x19, #0x30
    e510:	cmp	x22, x19
    e514:	b.ne	e504 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x5e0>  // b.any
    e518:	ldr	x0, [sp, #280]
    e51c:	cbz	x0, e524 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x600>
    e520:	bl	0 <_ZdlPv>
    e524:	ldr	w0, [sp, #272]
    e528:	cmp	w0, #0x40
    e52c:	b.ls	e53c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x618>  // b.plast
    e530:	ldr	x0, [sp, #264]
    e534:	cbz	x0, e53c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x618>
    e538:	bl	0 <_ZdaPv>
    e53c:	ldr	x19, [sp, #232]
    e540:	ldr	x22, [sp, #240]
    e544:	cmp	x19, x22
    e548:	b.eq	e560 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x63c>  // b.none
    e54c:	mov	x0, x19
    e550:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e554:	add	x19, x19, #0x30
    e558:	cmp	x22, x19
    e55c:	b.ne	e54c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x628>  // b.any
    e560:	ldr	x0, [sp, #232]
    e564:	cbz	x0, e56c <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x648>
    e568:	bl	0 <_ZdlPv>
    e56c:	ldr	w0, [sp, #224]
    e570:	cmp	w0, #0x40
    e574:	b.ls	e584 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x660>  // b.plast
    e578:	ldr	x0, [sp, #216]
    e57c:	cbz	x0, e584 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x660>
    e580:	bl	0 <_ZdaPv>
    e584:	cbz	w20, e0a8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x184>
    e588:	ldr	x19, [sp, #184]
    e58c:	ldr	x20, [sp, #192]
    e590:	cmp	x19, x20
    e594:	b.eq	e5ac <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x688>  // b.none
    e598:	mov	x0, x19
    e59c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e5a0:	add	x19, x19, #0x30
    e5a4:	cmp	x20, x19
    e5a8:	b.ne	e598 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x674>  // b.any
    e5ac:	ldr	x0, [sp, #184]
    e5b0:	cbz	x0, e5b8 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x694>
    e5b4:	bl	0 <_ZdlPv>
    e5b8:	ldr	w0, [sp, #176]
    e5bc:	cmp	w0, #0x40
    e5c0:	b.ls	e244 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x320>  // b.plast
    e5c4:	ldr	x0, [sp, #168]
    e5c8:	cbz	x0, e244 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x320>
    e5cc:	bl	0 <_ZdaPv>
    e5d0:	b	e244 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x320>
    e5d4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e5d8:	add	x3, x3, #0x0
    e5dc:	mov	w2, #0xcd2                 	// #3282
    e5e0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e5e4:	add	x1, x1, #0x0
    e5e8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e5ec:	add	x0, x0, #0x0
    e5f0:	bl	0 <__assert_fail>
    e5f4:	ldp	x21, x22, [sp, #32]
    e5f8:	ldp	x27, x28, [sp, #80]
    e5fc:	ldr	w0, [x23, #20]
    e600:	ubfx	x0, x0, #0, #28
    e604:	cmp	w0, #0x1
    e608:	b.ls	e690 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x76c>  // b.plast
    e60c:	ldrb	w1, [x23, #23]
    e610:	tbz	w1, #6, e654 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x730>
    e614:	ldur	x23, [x23, #-8]
    e618:	ldr	x19, [x23, #24]
    e61c:	cbz	x19, e668 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x744>
    e620:	ldrb	w0, [x19, #16]
    e624:	cmp	w0, #0x12
    e628:	b.eq	e124 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x200>  // b.none
    e62c:	stp	x21, x22, [sp, #32]
    e630:	stp	x27, x28, [sp, #80]
    e634:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e638:	add	x3, x3, #0x0
    e63c:	mov	w2, #0x108                 	// #264
    e640:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e644:	add	x1, x1, #0x0
    e648:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e64c:	add	x0, x0, #0x0
    e650:	bl	0 <__assert_fail>
    e654:	mov	w1, w0
    e658:	ubfiz	x0, x0, #1, #28
    e65c:	add	x0, x0, x1
    e660:	sub	x23, x23, x0, lsl #3
    e664:	b	e618 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE+0x6f4>
    e668:	stp	x21, x22, [sp, #32]
    e66c:	stp	x27, x28, [sp, #80]
    e670:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e674:	add	x3, x3, #0x0
    e678:	mov	w2, #0x69                  	// #105
    e67c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e680:	add	x1, x1, #0x0
    e684:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e688:	add	x0, x0, #0x0
    e68c:	bl	0 <__assert_fail>
    e690:	stp	x21, x22, [sp, #32]
    e694:	stp	x27, x28, [sp, #80]
    e698:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e69c:	add	x3, x3, #0x0
    e6a0:	mov	w2, #0xdbe                 	// #3518
    e6a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e6a8:	add	x1, x1, #0x0
    e6ac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e6b0:	add	x0, x0, #0x0
    e6b4:	bl	0 <__assert_fail>

000000000000e6b8 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE>:
    e6b8:	stp	x29, x30, [sp, #-112]!
    e6bc:	mov	x29, sp
    e6c0:	stp	x19, x20, [sp, #16]
    e6c4:	stp	x21, x22, [sp, #32]
    e6c8:	str	x23, [sp, #48]
    e6cc:	ldr	x21, [x0, #704]
    e6d0:	ldr	w2, [x1, #20]
    e6d4:	ubfx	x2, x2, #0, #28
    e6d8:	cbz	w2, e774 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0xbc>
    e6dc:	mov	x19, x0
    e6e0:	sub	x21, x21, #0x80
    e6e4:	ldrb	w0, [x1, #23]
    e6e8:	tbz	w0, #6, e794 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0xdc>
    e6ec:	ldur	x1, [x1, #-8]
    e6f0:	add	x8, sp, #0x40
    e6f4:	mov	x2, x21
    e6f8:	ldr	x1, [x1]
    e6fc:	mov	x0, x19
    e700:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    e704:	ldr	x23, [sp, #64]
    e708:	ldr	x20, [sp, #88]
    e70c:	ldr	x22, [sp, #96]
    e710:	cmp	x20, x22
    e714:	b.eq	e72c <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x74>  // b.none
    e718:	mov	x0, x20
    e71c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e720:	add	x20, x20, #0x30
    e724:	cmp	x22, x20
    e728:	b.ne	e718 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x60>  // b.any
    e72c:	ldr	x0, [sp, #88]
    e730:	cbz	x0, e738 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x80>
    e734:	bl	0 <_ZdlPv>
    e738:	ldr	w0, [sp, #80]
    e73c:	cmp	w0, #0x40
    e740:	b.ls	e750 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x98>  // b.plast
    e744:	ldr	x0, [sp, #72]
    e748:	cbz	x0, e750 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x98>
    e74c:	bl	0 <_ZdaPv>
    e750:	mov	x2, x21
    e754:	mov	x1, x23
    e758:	mov	x0, x19
    e75c:	bl	d8a0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    e760:	ldp	x19, x20, [sp, #16]
    e764:	ldp	x21, x22, [sp, #32]
    e768:	ldr	x23, [sp, #48]
    e76c:	ldp	x29, x30, [sp], #112
    e770:	ret
    e774:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e778:	add	x3, x3, #0x0
    e77c:	mov	w2, #0xe45                 	// #3653
    e780:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e784:	add	x1, x1, #0x0
    e788:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e78c:	add	x0, x0, #0x0
    e790:	bl	0 <__assert_fail>
    e794:	mov	w0, w2
    e798:	ubfiz	x2, x2, #1, #28
    e79c:	add	x2, x2, x0
    e7a0:	sub	x1, x1, x2, lsl #3
    e7a4:	b	e6f0 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE+0x38>

000000000000e7a8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>:
    e7a8:	stp	x29, x30, [sp, #-128]!
    e7ac:	mov	x29, sp
    e7b0:	stp	x19, x20, [sp, #16]
    e7b4:	stp	x21, x22, [sp, #32]
    e7b8:	stp	x23, x24, [sp, #48]
    e7bc:	stp	x25, x26, [sp, #64]
    e7c0:	mov	x21, x0
    e7c4:	mov	x23, x1
    e7c8:	mov	x24, x2
    e7cc:	ldr	x19, [x0, #704]
    e7d0:	sub	x1, x19, #0x80
    e7d4:	str	x1, [x0, #704]
    e7d8:	ldur	x20, [x19, #-24]
    e7dc:	ldur	x22, [x19, #-16]
    e7e0:	cmp	x20, x22
    e7e4:	b.eq	e7f8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x50>  // b.none
    e7e8:	ldr	x0, [x20], #8
    e7ec:	bl	0 <free>
    e7f0:	cmp	x22, x20
    e7f4:	b.ne	e7e8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x40>  // b.any
    e7f8:	ldur	x0, [x19, #-24]
    e7fc:	cbz	x0, e804 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x5c>
    e800:	bl	0 <_ZdlPv>
    e804:	ldur	x20, [x19, #-48]
    e808:	ldur	x25, [x19, #-40]
    e80c:	cmp	x20, x25
    e810:	b.ne	e88c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xe4>  // b.any
    e814:	ldur	x0, [x19, #-48]
    e818:	cbz	x0, e820 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x78>
    e81c:	bl	0 <_ZdlPv>
    e820:	ldur	x1, [x19, #-80]
    e824:	sub	x0, x19, #0x60
    e828:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e82c:	ldr	x20, [x21, #704]
    e830:	ldr	x0, [x21, #696]
    e834:	cmp	x20, x0
    e838:	b.eq	e8d8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x130>  // b.none
    e83c:	ldur	x0, [x20, #-104]
    e840:	ands	x19, x0, #0xfffffffffffffff8
    e844:	b.eq	e868 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xc0>  // b.none
    e848:	sub	x23, x20, #0x80
    e84c:	ldr	x0, [x19]
    e850:	ldrb	w0, [x0, #8]
    e854:	cbnz	w0, e910 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x168>
    e858:	ldrb	w0, [x19, #16]
    e85c:	cmp	w0, #0x1d
    e860:	b.eq	e97c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x1d4>  // b.none
    e864:	stur	xzr, [x20, #-104]
    e868:	ldp	x19, x20, [sp, #16]
    e86c:	ldp	x21, x22, [sp, #32]
    e870:	ldp	x23, x24, [sp, #48]
    e874:	ldp	x25, x26, [sp, #64]
    e878:	ldp	x29, x30, [sp], #128
    e87c:	ret
    e880:	add	x20, x20, #0x30
    e884:	cmp	x25, x20
    e888:	b.eq	e814 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x6c>  // b.none
    e88c:	ldr	x22, [x20, #24]
    e890:	ldr	x26, [x20, #32]
    e894:	cmp	x22, x26
    e898:	b.eq	e8b0 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x108>  // b.none
    e89c:	mov	x0, x22
    e8a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e8a4:	add	x22, x22, #0x30
    e8a8:	cmp	x26, x22
    e8ac:	b.ne	e89c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xf4>  // b.any
    e8b0:	ldr	x0, [x20, #24]
    e8b4:	cbz	x0, e8bc <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x114>
    e8b8:	bl	0 <_ZdlPv>
    e8bc:	ldr	w0, [x20, #16]
    e8c0:	cmp	w0, #0x40
    e8c4:	b.ls	e880 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xd8>  // b.plast
    e8c8:	ldr	x0, [x20, #8]
    e8cc:	cbz	x0, e880 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xd8>
    e8d0:	bl	0 <_ZdaPv>
    e8d4:	b	e880 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xd8>
    e8d8:	cbz	x23, e8e4 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x13c>
    e8dc:	ldrb	w0, [x23, #8]
    e8e0:	cbnz	w0, e8ec <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x144>
    e8e4:	str	xzr, [x21, #640]
    e8e8:	b	e868 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xc0>
    e8ec:	mov	x1, x24
    e8f0:	ldr	x0, [x1], #8
    e8f4:	str	x0, [x21, #640]
    e8f8:	add	x0, x21, #0x288
    e8fc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e900:	add	x1, x24, #0x18
    e904:	add	x0, x21, #0x298
    e908:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e90c:	b	e868 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xc0>
    e910:	add	x22, sp, #0x50
    e914:	mov	x1, x24
    e918:	mov	x0, x22
    e91c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e920:	mov	x2, x23
    e924:	mov	x1, x22
    e928:	mov	x0, x19
    e92c:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    e930:	mov	x0, x22
    e934:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e938:	b	e858 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xb0>
    e93c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e940:	add	x3, x3, #0x0
    e944:	mov	w2, #0x5b                  	// #91
    e948:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e94c:	add	x1, x1, #0x0
    e950:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e954:	add	x0, x0, #0x0
    e958:	bl	0 <__assert_fail>
    e95c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e960:	add	x3, x3, #0x0
    e964:	mov	w2, #0xfa                  	// #250
    e968:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e96c:	add	x1, x1, #0x0
    e970:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    e974:	add	x0, x0, #0x0
    e978:	bl	0 <__assert_fail>
    e97c:	ldur	x1, [x19, #-72]
    e980:	cbz	x1, e93c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x194>
    e984:	ldrb	w0, [x1, #16]
    e988:	cmp	w0, #0x12
    e98c:	b.ne	e95c <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0x1b4>  // b.any
    e990:	mov	x2, x23
    e994:	mov	x0, x21
    e998:	bl	d8a0 <_ZN4llvm11Interpreter21SwitchToNewBasicBlockEPNS_10BasicBlockERNS_16ExecutionContextE>
    e99c:	b	e864 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE+0xbc>

000000000000e9a0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE>:
    e9a0:	stp	x29, x30, [sp, #-176]!
    e9a4:	mov	x29, sp
    e9a8:	stp	x19, x20, [sp, #16]
    e9ac:	stp	x21, x22, [sp, #32]
    e9b0:	mov	x21, x0
    e9b4:	mov	x19, x1
    e9b8:	ldr	x20, [x0, #704]
    e9bc:	mov	x0, x1
    e9c0:	bl	0 <_ZNK4llvm5Value10getContextEv>
    e9c4:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
    e9c8:	mov	x22, x0
    e9cc:	mov	w0, #0x1                   	// #1
    e9d0:	str	w0, [sp, #144]
    e9d4:	str	xzr, [sp, #136]
    e9d8:	str	xzr, [sp, #152]
    e9dc:	str	xzr, [sp, #160]
    e9e0:	str	xzr, [sp, #168]
    e9e4:	str	wzr, [sp, #128]
    e9e8:	str	wzr, [sp, #132]
    e9ec:	ldr	w2, [x19, #20]
    e9f0:	ubfx	x2, x2, #0, #28
    e9f4:	cbz	w2, eb08 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x168>
    e9f8:	stp	x23, x24, [sp, #48]
    e9fc:	str	x25, [sp, #64]
    ea00:	mov	w0, w2
    ea04:	ubfiz	x2, x2, #2, #28
    ea08:	sub	x2, x0, x2
    ea0c:	ldr	x1, [x19, x2, lsl #3]
    ea10:	ldr	x22, [x1]
    ea14:	add	x8, sp, #0x50
    ea18:	sub	x2, x20, #0x80
    ea1c:	mov	x0, x21
    ea20:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ea24:	ldr	x0, [sp, #80]
    ea28:	str	x0, [sp, #128]
    ea2c:	ldr	w0, [sp, #144]
    ea30:	cmp	w0, #0x40
    ea34:	b.ls	ea44 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xa4>  // b.plast
    ea38:	ldr	x0, [sp, #136]
    ea3c:	cbz	x0, ea44 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xa4>
    ea40:	bl	0 <_ZdaPv>
    ea44:	ldr	x0, [sp, #88]
    ea48:	str	x0, [sp, #136]
    ea4c:	ldr	w0, [sp, #96]
    ea50:	str	w0, [sp, #144]
    ea54:	str	wzr, [sp, #96]
    ea58:	ldr	x24, [sp, #152]
    ea5c:	ldr	x25, [sp, #160]
    ea60:	ldr	x0, [sp, #104]
    ea64:	str	x0, [sp, #152]
    ea68:	ldr	x0, [sp, #112]
    ea6c:	str	x0, [sp, #160]
    ea70:	ldr	x0, [sp, #120]
    ea74:	str	x0, [sp, #168]
    ea78:	str	xzr, [sp, #104]
    ea7c:	str	xzr, [sp, #112]
    ea80:	str	xzr, [sp, #120]
    ea84:	cmp	x24, x25
    ea88:	b.eq	eaec <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x14c>  // b.none
    ea8c:	mov	x19, x24
    ea90:	b	eaa0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x100>
    ea94:	add	x19, x19, #0x30
    ea98:	cmp	x25, x19
    ea9c:	b.eq	eaec <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x14c>  // b.none
    eaa0:	ldr	x20, [x19, #24]
    eaa4:	ldr	x23, [x19, #32]
    eaa8:	cmp	x20, x23
    eaac:	b.eq	eac4 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x124>  // b.none
    eab0:	mov	x0, x20
    eab4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eab8:	add	x20, x20, #0x30
    eabc:	cmp	x23, x20
    eac0:	b.ne	eab0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x110>  // b.any
    eac4:	ldr	x0, [x19, #24]
    eac8:	cbz	x0, ead0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x130>
    eacc:	bl	0 <_ZdlPv>
    ead0:	ldr	w0, [x19, #16]
    ead4:	cmp	w0, #0x40
    ead8:	b.ls	ea94 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xf4>  // b.plast
    eadc:	ldr	x0, [x19, #8]
    eae0:	cbz	x0, ea94 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xf4>
    eae4:	bl	0 <_ZdaPv>
    eae8:	b	ea94 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0xf4>
    eaec:	cbz	x24, eaf8 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x158>
    eaf0:	mov	x0, x24
    eaf4:	bl	0 <_ZdlPv>
    eaf8:	add	x0, sp, #0x50
    eafc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eb00:	ldp	x23, x24, [sp, #48]
    eb04:	ldr	x25, [sp, #64]
    eb08:	add	x19, sp, #0x50
    eb0c:	add	x1, sp, #0x80
    eb10:	mov	x0, x19
    eb14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eb18:	mov	x2, x19
    eb1c:	mov	x1, x22
    eb20:	mov	x0, x21
    eb24:	bl	e7a8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>
    eb28:	ldr	x19, [sp, #104]
    eb2c:	ldr	x20, [sp, #112]
    eb30:	cmp	x19, x20
    eb34:	b.eq	eb4c <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1ac>  // b.none
    eb38:	mov	x0, x19
    eb3c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eb40:	add	x19, x19, #0x30
    eb44:	cmp	x20, x19
    eb48:	b.ne	eb38 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x198>  // b.any
    eb4c:	ldr	x0, [sp, #104]
    eb50:	cbz	x0, eb58 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1b8>
    eb54:	bl	0 <_ZdlPv>
    eb58:	ldr	w0, [sp, #96]
    eb5c:	cmp	w0, #0x40
    eb60:	b.ls	eb70 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1d0>  // b.plast
    eb64:	ldr	x0, [sp, #88]
    eb68:	cbz	x0, eb70 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1d0>
    eb6c:	bl	0 <_ZdaPv>
    eb70:	ldr	x19, [sp, #152]
    eb74:	ldr	x20, [sp, #160]
    eb78:	cmp	x19, x20
    eb7c:	b.eq	eb94 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1f4>  // b.none
    eb80:	mov	x0, x19
    eb84:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eb88:	add	x19, x19, #0x30
    eb8c:	cmp	x20, x19
    eb90:	b.ne	eb80 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x1e0>  // b.any
    eb94:	ldr	x0, [sp, #152]
    eb98:	cbz	x0, eba0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x200>
    eb9c:	bl	0 <_ZdlPv>
    eba0:	ldr	w0, [sp, #144]
    eba4:	cmp	w0, #0x40
    eba8:	b.ls	ebb8 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x218>  // b.plast
    ebac:	ldr	x0, [sp, #136]
    ebb0:	cbz	x0, ebb8 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE+0x218>
    ebb4:	bl	0 <_ZdaPv>
    ebb8:	ldp	x19, x20, [sp, #16]
    ebbc:	ldp	x21, x22, [sp, #32]
    ebc0:	ldp	x29, x30, [sp], #176
    ebc4:	ret

000000000000ebc8 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE>:
    ebc8:	stp	x29, x30, [sp, #-192]!
    ebcc:	mov	x29, sp
    ebd0:	stp	x19, x20, [sp, #16]
    ebd4:	stp	x21, x22, [sp, #32]
    ebd8:	stp	x23, x24, [sp, #48]
    ebdc:	stp	x25, x26, [sp, #64]
    ebe0:	str	x27, [sp, #80]
    ebe4:	mov	x23, x0
    ebe8:	ldr	x24, [x0, #704]
    ebec:	ldr	x0, [x1]
    ebf0:	cbz	x0, ed34 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x16c>
    ebf4:	mov	x22, x1
    ebf8:	sub	x24, x24, #0x80
    ebfc:	ldrb	w1, [x0, #8]
    ec00:	cmp	w1, #0xf
    ec04:	b.ne	ed54 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x18c>  // b.any
    ec08:	ldr	x26, [x0, #24]
    ec0c:	add	x8, sp, #0x60
    ec10:	mov	x2, x24
    ec14:	ldur	x1, [x22, #-24]
    ec18:	mov	x0, x23
    ec1c:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    ec20:	ldr	w19, [sp, #112]
    ec24:	cmp	w19, #0x40
    ec28:	b.ls	ed74 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1ac>  // b.plast
    ec2c:	add	x0, sp, #0x68
    ec30:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ec34:	sub	w19, w19, w0
    ec38:	cmp	w19, #0x40
    ec3c:	b.hi	ed7c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1b4>  // b.pmore
    ec40:	ldr	x0, [sp, #104]
    ec44:	ldr	x27, [x0]
    ec48:	add	x0, sp, #0x60
    ec4c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ec50:	add	x19, x23, #0x58
    ec54:	mov	x1, x26
    ec58:	mov	x0, x19
    ec5c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ec60:	add	x0, x0, #0x7
    ec64:	lsr	x20, x0, #3
    ec68:	and	w25, w1, #0xff
    ec6c:	mov	x1, x26
    ec70:	mov	x0, x19
    ec74:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    ec78:	mov	w1, w0
    ec7c:	cbz	w0, ed9c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1d4>
    ec80:	sub	x19, x20, #0x1
    ec84:	add	x19, x19, x1
    ec88:	udiv	x19, x19, x1
    ec8c:	mul	x19, x19, x1
    ec90:	cbnz	w25, edbc <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x1f4>
    ec94:	mul	w21, w27, w19
    ec98:	cmp	w21, #0x0
    ec9c:	csinc	w21, w21, wzr, ne  // ne = any
    eca0:	mov	x0, x21
    eca4:	bl	0 <malloc>
    eca8:	mov	x20, x0
    ecac:	cbz	x0, eddc <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x214>
    ecb0:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    ecb4:	ldr	x0, [x0]
    ecb8:	ldrb	w0, [x0]
    ecbc:	cbnz	w0, ee1c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x254>
    ecc0:	str	x20, [sp, #144]
    ecc4:	mov	w0, #0x1                   	// #1
    ecc8:	str	w0, [sp, #160]
    eccc:	str	xzr, [sp, #152]
    ecd0:	str	xzr, [sp, #168]
    ecd4:	str	xzr, [sp, #176]
    ecd8:	str	xzr, [sp, #184]
    ecdc:	add	x19, sp, #0x60
    ece0:	add	x1, sp, #0x90
    ece4:	mov	x0, x19
    ece8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ecec:	mov	x2, x24
    ecf0:	mov	x1, x19
    ecf4:	mov	x0, x22
    ecf8:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    ecfc:	mov	x0, x19
    ed00:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed04:	ldrb	w0, [x22, #16]
    ed08:	cmp	w0, #0x37
    ed0c:	b.eq	ef1c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x354>  // b.none
    ed10:	add	x0, sp, #0x90
    ed14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed18:	ldp	x19, x20, [sp, #16]
    ed1c:	ldp	x21, x22, [sp, #32]
    ed20:	ldp	x23, x24, [sp, #48]
    ed24:	ldp	x25, x26, [sp, #64]
    ed28:	ldr	x27, [sp, #80]
    ed2c:	ldp	x29, x30, [sp], #192
    ed30:	ret
    ed34:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed38:	add	x3, x3, #0x0
    ed3c:	mov	w2, #0x69                  	// #105
    ed40:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed44:	add	x1, x1, #0x0
    ed48:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed4c:	add	x0, x0, #0x0
    ed50:	bl	0 <__assert_fail>
    ed54:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed58:	add	x3, x3, #0x0
    ed5c:	mov	w2, #0x108                 	// #264
    ed60:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed64:	add	x1, x1, #0x0
    ed68:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed6c:	add	x0, x0, #0x0
    ed70:	bl	0 <__assert_fail>
    ed74:	ldr	x27, [sp, #104]
    ed78:	b	ec48 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x80>
    ed7c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed80:	add	x3, x3, #0x0
    ed84:	mov	w2, #0x657                 	// #1623
    ed88:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed8c:	add	x1, x1, #0x0
    ed90:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ed94:	add	x0, x0, #0x0
    ed98:	bl	0 <__assert_fail>
    ed9c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eda0:	add	x3, x3, #0x0
    eda4:	mov	w2, #0xc7                  	// #199
    eda8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    edac:	add	x1, x1, #0x0
    edb0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    edb4:	add	x0, x0, #0x0
    edb8:	bl	0 <__assert_fail>
    edbc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    edc0:	add	x3, x3, #0x0
    edc4:	mov	w2, #0x7d                  	// #125
    edc8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    edcc:	add	x1, x1, #0x0
    edd0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    edd4:	add	x0, x0, #0x0
    edd8:	bl	0 <__assert_fail>
    eddc:	mov	w1, #0x1                   	// #1
    ede0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ede4:	add	x0, x0, #0x0
    ede8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    edec:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    edf0:	ldr	x0, [x0]
    edf4:	ldrb	w0, [x0]
    edf8:	cbnz	w0, ee1c <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x254>
    edfc:	str	xzr, [sp, #144]
    ee00:	mov	w0, #0x1                   	// #1
    ee04:	str	w0, [sp, #160]
    ee08:	str	xzr, [sp, #152]
    ee0c:	str	xzr, [sp, #168]
    ee10:	str	xzr, [sp, #176]
    ee14:	str	xzr, [sp, #184]
    ee18:	b	ee50 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x288>
    ee1c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ee20:	add	x0, x0, #0x0
    ee24:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    ee28:	and	w0, w0, #0xff
    ee2c:	cbnz	w0, ee70 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x2a8>
    ee30:	str	x20, [sp, #144]
    ee34:	mov	w0, #0x1                   	// #1
    ee38:	str	w0, [sp, #160]
    ee3c:	str	xzr, [sp, #152]
    ee40:	str	xzr, [sp, #168]
    ee44:	str	xzr, [sp, #176]
    ee48:	str	xzr, [sp, #184]
    ee4c:	cbnz	x20, ecdc <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x114>
    ee50:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ee54:	add	x3, x3, #0x0
    ee58:	mov	w2, #0x40d                 	// #1037
    ee5c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ee60:	add	x1, x1, #0x0
    ee64:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ee68:	add	x0, x0, #0x0
    ee6c:	bl	0 <__assert_fail>
    ee70:	bl	0 <_ZN4llvm4dbgsEv>
    ee74:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ee78:	add	x1, x1, #0x0
    ee7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ee80:	mov	x25, x0
    ee84:	mov	w3, #0x0                   	// #0
    ee88:	mov	w2, #0x0                   	// #0
    ee8c:	mov	x1, x0
    ee90:	mov	x0, x26
    ee94:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    ee98:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ee9c:	add	x1, x1, #0x0
    eea0:	mov	x0, x25
    eea4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eea8:	mov	w1, w19
    eeac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    eeb0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eeb4:	add	x1, x1, #0x0
    eeb8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eebc:	mov	w1, w27
    eec0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    eec4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eec8:	add	x1, x1, #0x0
    eecc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eed0:	mov	x1, x21
    eed4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    eed8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eedc:	add	x1, x1, #0x0
    eee0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    eee4:	mov	x1, x20
    eee8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    eeec:	ldr	x1, [x0, #24]
    eef0:	ldr	x2, [x0, #16]
    eef4:	cmp	x1, x2
    eef8:	b.cs	ef10 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x348>  // b.hs, b.nlast
    eefc:	add	x2, x1, #0x1
    ef00:	str	x2, [x0, #24]
    ef04:	mov	w0, #0xa                   	// #10
    ef08:	strb	w0, [x1]
    ef0c:	b	ee30 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x268>
    ef10:	mov	w1, #0xa                   	// #10
    ef14:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    ef18:	b	ee30 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x268>
    ef1c:	ldr	x0, [x23, #704]
    ef20:	str	x20, [sp, #96]
    ef24:	ldur	x1, [x0, #-16]
    ef28:	ldur	x2, [x0, #-8]
    ef2c:	cmp	x1, x2
    ef30:	b.eq	ef48 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x380>  // b.none
    ef34:	str	x20, [x1]
    ef38:	ldur	x1, [x0, #-16]
    ef3c:	add	x1, x1, #0x8
    ef40:	stur	x1, [x0, #-16]
    ef44:	b	ed10 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x148>
    ef48:	add	x2, sp, #0x60
    ef4c:	sub	x0, x0, #0x18
    ef50:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ef54:	b	ed10 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE+0x148>

000000000000ef58 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE>:
    ef58:	stp	x29, x30, [sp, #-224]!
    ef5c:	mov	x29, sp
    ef60:	stp	x19, x20, [sp, #16]
    ef64:	stp	x21, x22, [sp, #32]
    ef68:	str	x23, [sp, #48]
    ef6c:	mov	x19, x1
    ef70:	ldr	x21, [x0, #704]
    ef74:	ldr	w1, [x1, #20]
    ef78:	ubfx	x1, x1, #0, #28
    ef7c:	cbz	w1, efcc <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x74>
    ef80:	mov	x20, x0
    ef84:	sub	x21, x21, #0x80
    ef88:	mov	w0, w1
    ef8c:	ubfiz	x1, x1, #2, #28
    ef90:	sub	x1, x0, x1
    ef94:	ldr	x22, [x19, x1, lsl #3]
    ef98:	ldrb	w0, [x19, #16]
    ef9c:	cmp	w0, #0x3a
    efa0:	b.eq	eff8 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0xa0>  // b.none
    efa4:	cmp	w0, #0x5
    efa8:	b.eq	efec <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x94>  // b.none
    efac:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    efb0:	add	x3, x3, #0x0
    efb4:	mov	w2, #0x101                 	// #257
    efb8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    efbc:	add	x1, x1, #0x0
    efc0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    efc4:	add	x0, x0, #0x0
    efc8:	bl	0 <__assert_fail>
    efcc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    efd0:	add	x3, x3, #0x0
    efd4:	mov	w2, #0x47c                 	// #1148
    efd8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    efdc:	add	x1, x1, #0x0
    efe0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    efe4:	add	x0, x0, #0x0
    efe8:	bl	0 <__assert_fail>
    efec:	ldrh	w0, [x19, #18]
    eff0:	cmp	w0, #0x22
    eff4:	b.ne	efac <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x54>  // b.any
    eff8:	mov	x0, x19
    effc:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
    f000:	ldrb	w1, [x19, #23]
    f004:	tbz	w1, #6, f0f4 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x19c>
    f008:	ldur	x2, [x19, #-8]
    f00c:	add	x3, x2, #0x18
    f010:	mov	x1, #0xffffffffffffffff    	// #-1
    f014:	str	x1, [sp, #192]
    f018:	tst	x0, #0x7
    f01c:	b.ne	f10c <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x1b4>  // b.any
    f020:	orr	x0, x0, #0x4
    f024:	str	x0, [sp, #184]
    f028:	str	x3, [sp, #176]
    f02c:	ldr	w1, [x19, #20]
    f030:	and	x0, x1, #0xfffffff
    f034:	ubfiz	x1, x1, #1, #28
    f038:	add	x1, x1, x0
    f03c:	add	x1, x2, x1, lsl #3
    f040:	str	xzr, [sp, #208]
    f044:	str	x1, [sp, #200]
    f048:	ldp	x0, x1, [sp, #176]
    f04c:	stp	x0, x1, [sp, #96]
    f050:	ldr	x0, [sp, #192]
    f054:	str	x0, [sp, #112]
    f058:	ldp	x0, x1, [sp, #200]
    f05c:	stp	x0, x1, [sp, #64]
    f060:	mov	x0, #0xffffffffffffffff    	// #-1
    f064:	str	x0, [sp, #80]
    f068:	add	x23, sp, #0x80
    f06c:	mov	x8, x23
    f070:	mov	x4, x21
    f074:	add	x3, sp, #0x40
    f078:	add	x2, sp, #0x60
    f07c:	mov	x1, x22
    f080:	mov	x0, x20
    f084:	bl	6048 <_ZN4llvm11Interpreter19executeGEPOperationEPNS_5ValueENS_25generic_gep_type_iteratorIPKNS_3UseEEES7_RNS_16ExecutionContextE>
    f088:	mov	x2, x21
    f08c:	mov	x1, x23
    f090:	mov	x0, x19
    f094:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f098:	ldr	x19, [sp, #152]
    f09c:	ldr	x20, [sp, #160]
    f0a0:	cmp	x19, x20
    f0a4:	b.eq	f0bc <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x164>  // b.none
    f0a8:	mov	x0, x19
    f0ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f0b0:	add	x19, x19, #0x30
    f0b4:	cmp	x20, x19
    f0b8:	b.ne	f0a8 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x150>  // b.any
    f0bc:	ldr	x0, [sp, #152]
    f0c0:	cbz	x0, f0c8 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x170>
    f0c4:	bl	0 <_ZdlPv>
    f0c8:	ldr	w0, [sp, #144]
    f0cc:	cmp	w0, #0x40
    f0d0:	b.ls	f0e0 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x188>  // b.plast
    f0d4:	ldr	x0, [sp, #136]
    f0d8:	cbz	x0, f0e0 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0x188>
    f0dc:	bl	0 <_ZdaPv>
    f0e0:	ldp	x19, x20, [sp, #16]
    f0e4:	ldp	x21, x22, [sp, #32]
    f0e8:	ldr	x23, [sp, #48]
    f0ec:	ldp	x29, x30, [sp], #224
    f0f0:	ret
    f0f4:	ldr	w2, [x19, #20]
    f0f8:	and	x1, x2, #0xfffffff
    f0fc:	ubfiz	x2, x2, #1, #28
    f100:	add	x2, x2, x1
    f104:	sub	x2, x19, x2, lsl #3
    f108:	b	f00c <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE+0xb4>
    f10c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f110:	add	x3, x3, #0x0
    f114:	mov	w2, #0xb2                  	// #178
    f118:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f11c:	add	x1, x1, #0x0
    f120:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f124:	add	x0, x0, #0x0
    f128:	bl	0 <__assert_fail>

000000000000f12c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE>:
    f12c:	stp	x29, x30, [sp, #-192]!
    f130:	mov	x29, sp
    f134:	stp	x19, x20, [sp, #16]
    f138:	stp	x21, x22, [sp, #32]
    f13c:	mov	x20, x0
    f140:	mov	x19, x1
    f144:	ldr	x21, [x0, #704]
    f148:	sub	x21, x21, #0x80
    f14c:	add	x8, sp, #0x90
    f150:	mov	x2, x21
    f154:	ldur	x1, [x1, #-24]
    f158:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f15c:	mov	w0, #0x1                   	// #1
    f160:	str	w0, [sp, #112]
    f164:	str	xzr, [sp, #104]
    f168:	str	xzr, [sp, #120]
    f16c:	str	xzr, [sp, #128]
    f170:	str	xzr, [sp, #136]
    f174:	str	wzr, [sp, #96]
    f178:	str	wzr, [sp, #100]
    f17c:	add	x22, sp, #0x60
    f180:	ldr	x3, [x19]
    f184:	ldr	x2, [sp, #144]
    f188:	mov	x1, x22
    f18c:	mov	x0, x20
    f190:	bl	0 <_ZN4llvm15ExecutionEngine19LoadValueFromMemoryERNS_12GenericValueEPS1_PNS_4TypeE>
    f194:	add	x20, sp, #0x30
    f198:	mov	x1, x22
    f19c:	mov	x0, x20
    f1a0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f1a4:	mov	x2, x21
    f1a8:	mov	x1, x20
    f1ac:	mov	x0, x19
    f1b0:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f1b4:	ldr	x20, [sp, #72]
    f1b8:	ldr	x21, [sp, #80]
    f1bc:	cmp	x20, x21
    f1c0:	b.eq	f1d8 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xac>  // b.none
    f1c4:	mov	x0, x20
    f1c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f1cc:	add	x20, x20, #0x30
    f1d0:	cmp	x21, x20
    f1d4:	b.ne	f1c4 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x98>  // b.any
    f1d8:	ldr	x0, [sp, #72]
    f1dc:	cbz	x0, f1e4 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xb8>
    f1e0:	bl	0 <_ZdlPv>
    f1e4:	ldr	w0, [sp, #64]
    f1e8:	cmp	w0, #0x40
    f1ec:	b.ls	f1fc <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xd0>  // b.plast
    f1f0:	ldr	x0, [sp, #56]
    f1f4:	cbz	x0, f1fc <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xd0>
    f1f8:	bl	0 <_ZdaPv>
    f1fc:	ldrh	w0, [x19, #18]
    f200:	tbz	w0, #0, f210 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xe4>
    f204:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f208:	ldrb	w0, [x0]
    f20c:	cbnz	w0, f2b0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x184>
    f210:	ldr	x19, [sp, #120]
    f214:	ldr	x20, [sp, #128]
    f218:	cmp	x19, x20
    f21c:	b.eq	f234 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x108>  // b.none
    f220:	mov	x0, x19
    f224:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f228:	add	x19, x19, #0x30
    f22c:	cmp	x20, x19
    f230:	b.ne	f220 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xf4>  // b.any
    f234:	ldr	x0, [sp, #120]
    f238:	cbz	x0, f240 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x114>
    f23c:	bl	0 <_ZdlPv>
    f240:	ldr	w0, [sp, #112]
    f244:	cmp	w0, #0x40
    f248:	b.ls	f258 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x12c>  // b.plast
    f24c:	ldr	x0, [sp, #104]
    f250:	cbz	x0, f258 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x12c>
    f254:	bl	0 <_ZdaPv>
    f258:	ldr	x19, [sp, #168]
    f25c:	ldr	x20, [sp, #176]
    f260:	cmp	x19, x20
    f264:	b.eq	f27c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x150>  // b.none
    f268:	mov	x0, x19
    f26c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f270:	add	x19, x19, #0x30
    f274:	cmp	x20, x19
    f278:	b.ne	f268 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x13c>  // b.any
    f27c:	ldr	x0, [sp, #168]
    f280:	cbz	x0, f288 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x15c>
    f284:	bl	0 <_ZdlPv>
    f288:	ldr	w0, [sp, #160]
    f28c:	cmp	w0, #0x40
    f290:	b.ls	f2a0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x174>  // b.plast
    f294:	ldr	x0, [sp, #152]
    f298:	cbz	x0, f2a0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x174>
    f29c:	bl	0 <_ZdaPv>
    f2a0:	ldp	x19, x20, [sp, #16]
    f2a4:	ldp	x21, x22, [sp, #32]
    f2a8:	ldp	x29, x30, [sp], #192
    f2ac:	ret
    f2b0:	bl	0 <_ZN4llvm4dbgsEv>
    f2b4:	ldr	x2, [x0, #24]
    f2b8:	ldr	x1, [x0, #16]
    f2bc:	sub	x1, x1, x2
    f2c0:	cmp	x1, #0xd
    f2c4:	b.ls	f2f0 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x1c4>  // b.plast
    f2c8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f2cc:	add	x1, x1, #0x0
    f2d0:	ldr	x3, [x1]
    f2d4:	str	x3, [x2]
    f2d8:	ldur	x1, [x1, #6]
    f2dc:	stur	x1, [x2, #6]
    f2e0:	ldr	x1, [x0, #24]
    f2e4:	add	x1, x1, #0xe
    f2e8:	str	x1, [x0, #24]
    f2ec:	b	f300 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0x1d4>
    f2f0:	mov	x2, #0xe                   	// #14
    f2f4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f2f8:	add	x1, x1, #0x0
    f2fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    f300:	mov	w2, #0x0                   	// #0
    f304:	mov	x1, x0
    f308:	mov	x0, x19
    f30c:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    f310:	b	f210 <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE+0xe4>

000000000000f314 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE>:
    f314:	stp	x29, x30, [sp, #-368]!
    f318:	mov	x29, sp
    f31c:	stp	x19, x20, [sp, #16]
    f320:	stp	x21, x22, [sp, #32]
    f324:	stp	x23, x24, [sp, #48]
    f328:	mov	x19, x0
    f32c:	mov	x22, x1
    f330:	ldr	x23, [x0, #704]
    f334:	sub	x23, x23, #0x80
    f338:	add	x8, sp, #0x100
    f33c:	mov	x2, x23
    f340:	ldur	x1, [x1, #-48]
    f344:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f348:	add	x8, sp, #0xd0
    f34c:	mov	x2, x23
    f350:	ldur	x1, [x22, #-24]
    f354:	mov	x0, x19
    f358:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f35c:	mov	w0, #0x1                   	// #1
    f360:	str	w0, [sp, #176]
    f364:	str	xzr, [sp, #168]
    f368:	str	xzr, [sp, #184]
    f36c:	str	xzr, [sp, #192]
    f370:	str	xzr, [sp, #200]
    f374:	str	wzr, [sp, #160]
    f378:	str	wzr, [sp, #164]
    f37c:	ldr	x0, [x22]
    f380:	ldrb	w0, [x0, #8]
    f384:	cmp	w0, #0x10
    f388:	b.ne	f6f4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x3e0>  // b.any
    f38c:	ldr	x0, [sp, #288]
    f390:	ldr	x1, [sp, #280]
    f394:	sub	x0, x0, x1
    f398:	asr	x0, x0, #4
    f39c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f3a0:	movk	x2, #0xaaab
    f3a4:	mul	x0, x0, x2
    f3a8:	ldr	x1, [sp, #240]
    f3ac:	ldr	x3, [sp, #232]
    f3b0:	sub	x1, x1, x3
    f3b4:	asr	x1, x1, #4
    f3b8:	mul	x1, x1, x2
    f3bc:	cmp	x1, w0, uxtw
    f3c0:	b.ne	f3f8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0xe4>  // b.any
    f3c4:	cbz	w0, f69c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x388>
    f3c8:	stp	x25, x26, [sp, #64]
    f3cc:	stp	x27, x28, [sp, #80]
    f3d0:	sub	w0, w0, #0x1
    f3d4:	add	x21, x0, #0x1
    f3d8:	add	x21, x21, x21, lsl #1
    f3dc:	lsl	x21, x21, #4
    f3e0:	mov	x20, #0x0                   	// #0
    f3e4:	add	x25, sp, #0x60
    f3e8:	add	x24, sp, #0x140
    f3ec:	add	x26, sp, #0x130
    f3f0:	add	x27, sp, #0xb8
    f3f4:	b	f4f4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1e0>
    f3f8:	stp	x25, x26, [sp, #64]
    f3fc:	stp	x27, x28, [sp, #80]
    f400:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f404:	add	x3, x3, #0x0
    f408:	mov	w2, #0x4ae                 	// #1198
    f40c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f410:	add	x1, x1, #0x0
    f414:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f418:	add	x0, x0, #0x0
    f41c:	bl	0 <__assert_fail>
    f420:	ldr	x19, [x19, #8]
    f424:	b	f544 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x230>
    f428:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f42c:	add	x3, x3, #0x0
    f430:	mov	w2, #0x657                 	// #1623
    f434:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f438:	add	x1, x1, #0x0
    f43c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f440:	add	x0, x0, #0x0
    f444:	bl	0 <__assert_fail>
    f448:	add	x1, x1, #0x8
    f44c:	mov	x0, x25
    f450:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f454:	b	f564 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x250>
    f458:	mov	x1, x25
    f45c:	mov	x0, x24
    f460:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f464:	mov	x1, x24
    f468:	mov	x0, x19
    f46c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f470:	mov	w19, w0
    f474:	ldr	w0, [sp, #104]
    f478:	str	w0, [sp, #312]
    f47c:	cmp	w0, #0x40
    f480:	b.ls	f590 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x27c>  // b.plast
    f484:	mov	x1, x25
    f488:	mov	x0, x26
    f48c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f490:	ldr	w0, [sp, #312]
    f494:	cmp	w19, w0
    f498:	b.hi	f4b4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1a0>  // b.pmore
    f49c:	cmp	w0, #0x40
    f4a0:	b.ls	f5a4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x290>  // b.plast
    f4a4:	mov	w1, w19
    f4a8:	mov	x0, x26
    f4ac:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    f4b0:	b	f5cc <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2b8>
    f4b4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f4b8:	add	x3, x3, #0x0
    f4bc:	mov	w2, #0x39a                 	// #922
    f4c0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f4c4:	add	x1, x1, #0x0
    f4c8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f4cc:	add	x0, x0, #0x0
    f4d0:	bl	0 <__assert_fail>
    f4d4:	add	x2, sp, #0x70
    f4d8:	mov	x1, x0
    f4dc:	mov	x0, x27
    f4e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f4e4:	b	f630 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x31c>
    f4e8:	add	x20, x20, #0x30
    f4ec:	cmp	x20, x21
    f4f0:	b.eq	f694 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x380>  // b.none
    f4f4:	mov	w0, #0x1                   	// #1
    f4f8:	str	w0, [sp, #128]
    f4fc:	str	xzr, [sp, #120]
    f500:	str	xzr, [sp, #136]
    f504:	str	xzr, [sp, #144]
    f508:	str	xzr, [sp, #152]
    f50c:	str	wzr, [sp, #112]
    f510:	str	wzr, [sp, #116]
    f514:	ldr	x19, [sp, #232]
    f518:	add	x19, x19, x20
    f51c:	ldr	w28, [x19, #16]
    f520:	cmp	w28, #0x40
    f524:	b.ls	f420 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x10c>  // b.plast
    f528:	add	x0, x19, #0x8
    f52c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    f530:	sub	w28, w28, w0
    f534:	cmp	w28, #0x40
    f538:	b.hi	f428 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x114>  // b.pmore
    f53c:	ldr	x0, [x19, #8]
    f540:	ldr	x19, [x0]
    f544:	ldr	x1, [sp, #280]
    f548:	add	x1, x1, x20
    f54c:	ldr	w0, [x1, #16]
    f550:	str	w0, [sp, #104]
    f554:	cmp	w0, #0x40
    f558:	b.hi	f448 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x134>  // b.pmore
    f55c:	ldr	x0, [x1, #8]
    f560:	str	x0, [sp, #96]
    f564:	ldr	w28, [sp, #104]
    f568:	str	w28, [sp, #328]
    f56c:	cmp	w28, #0x40
    f570:	b.hi	f458 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x144>  // b.pmore
    f574:	ldr	x0, [sp, #96]
    f578:	str	x0, [sp, #320]
    f57c:	mov	x1, x24
    f580:	mov	x0, x19
    f584:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f588:	mov	w19, w0
    f58c:	str	w28, [sp, #312]
    f590:	ldr	x0, [sp, #96]
    f594:	str	x0, [sp, #304]
    f598:	ldr	w0, [sp, #312]
    f59c:	cmp	w0, w19
    f5a0:	b.cc	f4b4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1a0>  // b.lo, b.ul, b.last
    f5a4:	mov	x2, #0x0                   	// #0
    f5a8:	cmp	w19, w0
    f5ac:	b.eq	f5b8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2a4>  // b.none
    f5b0:	ldr	x2, [sp, #304]
    f5b4:	lsl	x2, x2, x19
    f5b8:	neg	w0, w0
    f5bc:	mov	x1, #0xffffffffffffffff    	// #-1
    f5c0:	lsr	x0, x1, x0
    f5c4:	and	x0, x0, x2
    f5c8:	str	x0, [sp, #304]
    f5cc:	ldr	w0, [sp, #128]
    f5d0:	cmp	w0, #0x40
    f5d4:	b.ls	f5e4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2d0>  // b.plast
    f5d8:	ldr	x0, [sp, #120]
    f5dc:	cbz	x0, f5e4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2d0>
    f5e0:	bl	0 <_ZdaPv>
    f5e4:	ldr	x0, [sp, #304]
    f5e8:	str	x0, [sp, #120]
    f5ec:	ldr	w0, [sp, #312]
    f5f0:	str	w0, [sp, #128]
    f5f4:	ldr	w0, [sp, #328]
    f5f8:	cmp	w0, #0x40
    f5fc:	b.ls	f60c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2f8>  // b.plast
    f600:	ldr	x0, [sp, #320]
    f604:	cbz	x0, f60c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x2f8>
    f608:	bl	0 <_ZdaPv>
    f60c:	ldr	x0, [sp, #192]
    f610:	ldr	x1, [sp, #200]
    f614:	cmp	x0, x1
    f618:	b.eq	f4d4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1c0>  // b.none
    f61c:	add	x1, sp, #0x70
    f620:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f624:	ldr	x0, [sp, #192]
    f628:	add	x0, x0, #0x30
    f62c:	str	x0, [sp, #192]
    f630:	ldr	w0, [sp, #104]
    f634:	cmp	w0, #0x40
    f638:	b.ls	f648 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x334>  // b.plast
    f63c:	ldr	x0, [sp, #96]
    f640:	cbz	x0, f648 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x334>
    f644:	bl	0 <_ZdaPv>
    f648:	ldr	x19, [sp, #136]
    f64c:	ldr	x28, [sp, #144]
    f650:	cmp	x19, x28
    f654:	b.eq	f66c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x358>  // b.none
    f658:	mov	x0, x19
    f65c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f660:	add	x19, x19, #0x30
    f664:	cmp	x28, x19
    f668:	b.ne	f658 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x344>  // b.any
    f66c:	ldr	x0, [sp, #136]
    f670:	cbz	x0, f678 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x364>
    f674:	bl	0 <_ZdlPv>
    f678:	ldr	w0, [sp, #128]
    f67c:	cmp	w0, #0x40
    f680:	b.ls	f4e8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1d4>  // b.plast
    f684:	ldr	x0, [sp, #120]
    f688:	cbz	x0, f4e8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1d4>
    f68c:	bl	0 <_ZdaPv>
    f690:	b	f4e8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x1d4>
    f694:	ldp	x25, x26, [sp, #64]
    f698:	ldp	x27, x28, [sp, #80]
    f69c:	add	x20, sp, #0xa0
    f6a0:	add	x19, sp, #0x70
    f6a4:	mov	x1, x20
    f6a8:	mov	x0, x19
    f6ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f6b0:	mov	x2, x23
    f6b4:	mov	x1, x19
    f6b8:	mov	x0, x22
    f6bc:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    f6c0:	mov	x0, x19
    f6c4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f6c8:	mov	x0, x20
    f6cc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f6d0:	add	x0, sp, #0xd0
    f6d4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f6d8:	add	x0, sp, #0x100
    f6dc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f6e0:	ldp	x19, x20, [sp, #16]
    f6e4:	ldp	x21, x22, [sp, #32]
    f6e8:	ldp	x23, x24, [sp, #48]
    f6ec:	ldp	x29, x30, [sp], #368
    f6f0:	ret
    f6f4:	ldr	w19, [sp, #224]
    f6f8:	cmp	w19, #0x40
    f6fc:	b.ls	f7f0 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4dc>  // b.plast
    f700:	add	x0, sp, #0xd8
    f704:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    f708:	sub	w19, w19, w0
    f70c:	cmp	w19, #0x40
    f710:	b.hi	f7f8 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4e4>  // b.pmore
    f714:	ldr	x0, [sp, #216]
    f718:	ldr	x19, [x0]
    f71c:	ldr	w0, [sp, #272]
    f720:	str	w0, [sp, #120]
    f724:	cmp	w0, #0x40
    f728:	b.hi	f820 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x50c>  // b.pmore
    f72c:	ldr	x0, [sp, #264]
    f730:	str	x0, [sp, #112]
    f734:	ldr	w20, [sp, #120]
    f738:	str	w20, [sp, #360]
    f73c:	cmp	w20, #0x40
    f740:	b.hi	f830 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x51c>  // b.pmore
    f744:	ldr	x0, [sp, #112]
    f748:	str	x0, [sp, #352]
    f74c:	add	x1, sp, #0x160
    f750:	mov	x0, x19
    f754:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f758:	mov	w19, w0
    f75c:	str	w20, [sp, #344]
    f760:	ldr	x0, [sp, #112]
    f764:	str	x0, [sp, #336]
    f768:	ldr	w0, [sp, #344]
    f76c:	cmp	w0, w19
    f770:	b.cc	f890 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x57c>  // b.lo, b.ul, b.last
    f774:	mov	x1, #0x0                   	// #0
    f778:	cmp	w19, w0
    f77c:	b.eq	f788 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x474>  // b.none
    f780:	ldr	x1, [sp, #336]
    f784:	lsl	x1, x1, x19
    f788:	str	x1, [sp, #336]
    f78c:	add	x0, sp, #0x150
    f790:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f794:	ldr	w0, [sp, #176]
    f798:	cmp	w0, #0x40
    f79c:	b.ls	f7ac <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x498>  // b.plast
    f7a0:	ldr	x0, [sp, #168]
    f7a4:	cbz	x0, f7ac <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x498>
    f7a8:	bl	0 <_ZdaPv>
    f7ac:	ldr	x0, [sp, #336]
    f7b0:	str	x0, [sp, #168]
    f7b4:	ldr	w0, [sp, #344]
    f7b8:	str	w0, [sp, #176]
    f7bc:	ldr	w0, [sp, #360]
    f7c0:	cmp	w0, #0x40
    f7c4:	b.ls	f7d4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4c0>  // b.plast
    f7c8:	ldr	x0, [sp, #352]
    f7cc:	cbz	x0, f7d4 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x4c0>
    f7d0:	bl	0 <_ZdaPv>
    f7d4:	ldr	w0, [sp, #120]
    f7d8:	cmp	w0, #0x40
    f7dc:	b.ls	f69c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x388>  // b.plast
    f7e0:	ldr	x0, [sp, #112]
    f7e4:	cbz	x0, f69c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x388>
    f7e8:	bl	0 <_ZdaPv>
    f7ec:	b	f69c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x388>
    f7f0:	ldr	x19, [sp, #216]
    f7f4:	b	f71c <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x408>
    f7f8:	stp	x25, x26, [sp, #64]
    f7fc:	stp	x27, x28, [sp, #80]
    f800:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f804:	add	x3, x3, #0x0
    f808:	mov	w2, #0x657                 	// #1623
    f80c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f810:	add	x1, x1, #0x0
    f814:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f818:	add	x0, x0, #0x0
    f81c:	bl	0 <__assert_fail>
    f820:	add	x1, sp, #0x108
    f824:	add	x0, sp, #0x70
    f828:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f82c:	b	f734 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x420>
    f830:	add	x20, sp, #0x160
    f834:	add	x1, sp, #0x70
    f838:	mov	x0, x20
    f83c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f840:	mov	x1, x20
    f844:	mov	x0, x19
    f848:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f84c:	mov	w19, w0
    f850:	ldr	w0, [sp, #120]
    f854:	str	w0, [sp, #344]
    f858:	cmp	w0, #0x40
    f85c:	b.ls	f760 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x44c>  // b.plast
    f860:	add	x1, sp, #0x70
    f864:	add	x0, sp, #0x150
    f868:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f86c:	ldr	w0, [sp, #344]
    f870:	cmp	w19, w0
    f874:	b.hi	f890 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x57c>  // b.pmore
    f878:	cmp	w0, #0x40
    f87c:	b.ls	f774 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x460>  // b.plast
    f880:	mov	w1, w19
    f884:	add	x0, sp, #0x150
    f888:	bl	0 <_ZN4llvm5APInt11shlSlowCaseEj>
    f88c:	b	f794 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE+0x480>
    f890:	stp	x25, x26, [sp, #64]
    f894:	stp	x27, x28, [sp, #80]
    f898:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f89c:	add	x3, x3, #0x0
    f8a0:	mov	w2, #0x39a                 	// #922
    f8a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f8a8:	add	x1, x1, #0x0
    f8ac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f8b0:	add	x0, x0, #0x0
    f8b4:	bl	0 <__assert_fail>

000000000000f8b8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE>:
    f8b8:	stp	x29, x30, [sp, #-368]!
    f8bc:	mov	x29, sp
    f8c0:	stp	x19, x20, [sp, #16]
    f8c4:	stp	x21, x22, [sp, #32]
    f8c8:	stp	x23, x24, [sp, #48]
    f8cc:	mov	x19, x0
    f8d0:	mov	x22, x1
    f8d4:	ldr	x23, [x0, #704]
    f8d8:	sub	x23, x23, #0x80
    f8dc:	add	x8, sp, #0x100
    f8e0:	mov	x2, x23
    f8e4:	ldur	x1, [x1, #-48]
    f8e8:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f8ec:	add	x8, sp, #0xd0
    f8f0:	mov	x2, x23
    f8f4:	ldur	x1, [x22, #-24]
    f8f8:	mov	x0, x19
    f8fc:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    f900:	mov	w0, #0x1                   	// #1
    f904:	str	w0, [sp, #176]
    f908:	str	xzr, [sp, #168]
    f90c:	str	xzr, [sp, #184]
    f910:	str	xzr, [sp, #192]
    f914:	str	xzr, [sp, #200]
    f918:	str	wzr, [sp, #160]
    f91c:	str	wzr, [sp, #164]
    f920:	ldr	x0, [x22]
    f924:	ldrb	w0, [x0, #8]
    f928:	cmp	w0, #0x10
    f92c:	b.ne	fc88 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3d0>  // b.any
    f930:	ldr	x0, [sp, #288]
    f934:	ldr	x1, [sp, #280]
    f938:	sub	x0, x0, x1
    f93c:	asr	x0, x0, #4
    f940:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f944:	movk	x2, #0xaaab
    f948:	mul	x0, x0, x2
    f94c:	ldr	x1, [sp, #240]
    f950:	ldr	x3, [sp, #232]
    f954:	sub	x1, x1, x3
    f958:	asr	x1, x1, #4
    f95c:	mul	x1, x1, x2
    f960:	cmp	x1, w0, uxtw
    f964:	b.ne	f99c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0xe4>  // b.any
    f968:	cbz	w0, fc30 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x378>
    f96c:	stp	x25, x26, [sp, #64]
    f970:	stp	x27, x28, [sp, #80]
    f974:	sub	w0, w0, #0x1
    f978:	add	x21, x0, #0x1
    f97c:	add	x21, x21, x21, lsl #1
    f980:	lsl	x21, x21, #4
    f984:	mov	x20, #0x0                   	// #0
    f988:	add	x25, sp, #0x60
    f98c:	add	x24, sp, #0x140
    f990:	add	x26, sp, #0x130
    f994:	add	x27, sp, #0xb8
    f998:	b	fb24 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x26c>
    f99c:	stp	x25, x26, [sp, #64]
    f9a0:	stp	x27, x28, [sp, #80]
    f9a4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f9a8:	add	x3, x3, #0x0
    f9ac:	mov	w2, #0x4c9                 	// #1225
    f9b0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f9b4:	add	x1, x1, #0x0
    f9b8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f9bc:	add	x0, x0, #0x0
    f9c0:	bl	0 <__assert_fail>
    f9c4:	ldr	x19, [x19, #8]
    f9c8:	b	fb74 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x2bc>
    f9cc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f9d0:	add	x3, x3, #0x0
    f9d4:	mov	w2, #0x657                 	// #1623
    f9d8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f9dc:	add	x1, x1, #0x0
    f9e0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    f9e4:	add	x0, x0, #0x0
    f9e8:	bl	0 <__assert_fail>
    f9ec:	add	x1, x1, #0x8
    f9f0:	mov	x0, x25
    f9f4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    f9f8:	b	fb94 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x2dc>
    f9fc:	mov	x1, x25
    fa00:	mov	x0, x24
    fa04:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    fa08:	mov	x1, x24
    fa0c:	mov	x0, x19
    fa10:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fa14:	mov	w19, w0
    fa18:	ldr	w0, [sp, #104]
    fa1c:	str	w0, [sp, #312]
    fa20:	cmp	w0, #0x40
    fa24:	b.ls	fbc0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x308>  // b.plast
    fa28:	mov	x1, x25
    fa2c:	mov	x0, x26
    fa30:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    fa34:	ldr	w0, [sp, #312]
    fa38:	cmp	w19, w0
    fa3c:	b.hi	fbec <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x334>  // b.pmore
    fa40:	cmp	w0, #0x40
    fa44:	b.ls	fbd4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x31c>  // b.plast
    fa48:	mov	w1, w19
    fa4c:	mov	x0, x26
    fa50:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    fa54:	ldr	w0, [sp, #128]
    fa58:	cmp	w0, #0x40
    fa5c:	b.ls	fa6c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1b4>  // b.plast
    fa60:	ldr	x0, [sp, #120]
    fa64:	cbz	x0, fa6c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1b4>
    fa68:	bl	0 <_ZdaPv>
    fa6c:	ldr	x0, [sp, #304]
    fa70:	str	x0, [sp, #120]
    fa74:	ldr	w0, [sp, #312]
    fa78:	str	w0, [sp, #128]
    fa7c:	ldr	w0, [sp, #328]
    fa80:	cmp	w0, #0x40
    fa84:	b.ls	fa94 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1dc>  // b.plast
    fa88:	ldr	x0, [sp, #320]
    fa8c:	cbz	x0, fa94 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x1dc>
    fa90:	bl	0 <_ZdaPv>
    fa94:	ldr	x0, [sp, #192]
    fa98:	ldr	x1, [sp, #200]
    fa9c:	cmp	x0, x1
    faa0:	b.eq	fc14 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x35c>  // b.none
    faa4:	add	x1, sp, #0x70
    faa8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    faac:	ldr	x0, [sp, #192]
    fab0:	add	x0, x0, #0x30
    fab4:	str	x0, [sp, #192]
    fab8:	ldr	w0, [sp, #104]
    fabc:	cmp	w0, #0x40
    fac0:	b.ls	fad0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x218>  // b.plast
    fac4:	ldr	x0, [sp, #96]
    fac8:	cbz	x0, fad0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x218>
    facc:	bl	0 <_ZdaPv>
    fad0:	ldr	x19, [sp, #136]
    fad4:	ldr	x28, [sp, #144]
    fad8:	cmp	x19, x28
    fadc:	b.eq	faf4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x23c>  // b.none
    fae0:	mov	x0, x19
    fae4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fae8:	add	x19, x19, #0x30
    faec:	cmp	x28, x19
    faf0:	b.ne	fae0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x228>  // b.any
    faf4:	ldr	x0, [sp, #136]
    faf8:	cbz	x0, fb00 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x248>
    fafc:	bl	0 <_ZdlPv>
    fb00:	ldr	w0, [sp, #128]
    fb04:	cmp	w0, #0x40
    fb08:	b.ls	fb18 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x260>  // b.plast
    fb0c:	ldr	x0, [sp, #120]
    fb10:	cbz	x0, fb18 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x260>
    fb14:	bl	0 <_ZdaPv>
    fb18:	add	x20, x20, #0x30
    fb1c:	cmp	x21, x20
    fb20:	b.eq	fc28 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x370>  // b.none
    fb24:	mov	w0, #0x1                   	// #1
    fb28:	str	w0, [sp, #128]
    fb2c:	str	xzr, [sp, #120]
    fb30:	str	xzr, [sp, #136]
    fb34:	str	xzr, [sp, #144]
    fb38:	str	xzr, [sp, #152]
    fb3c:	str	wzr, [sp, #112]
    fb40:	str	wzr, [sp, #116]
    fb44:	ldr	x19, [sp, #232]
    fb48:	add	x19, x19, x20
    fb4c:	ldr	w28, [x19, #16]
    fb50:	cmp	w28, #0x40
    fb54:	b.ls	f9c4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x10c>  // b.plast
    fb58:	add	x0, x19, #0x8
    fb5c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    fb60:	sub	w28, w28, w0
    fb64:	cmp	w28, #0x40
    fb68:	b.hi	f9cc <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x114>  // b.pmore
    fb6c:	ldr	x0, [x19, #8]
    fb70:	ldr	x19, [x0]
    fb74:	ldr	x1, [sp, #280]
    fb78:	add	x1, x1, x20
    fb7c:	ldr	w0, [x1, #16]
    fb80:	str	w0, [sp, #104]
    fb84:	cmp	w0, #0x40
    fb88:	b.hi	f9ec <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x134>  // b.pmore
    fb8c:	ldr	x0, [x1, #8]
    fb90:	str	x0, [sp, #96]
    fb94:	ldr	w28, [sp, #104]
    fb98:	str	w28, [sp, #328]
    fb9c:	cmp	w28, #0x40
    fba0:	b.hi	f9fc <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x144>  // b.pmore
    fba4:	ldr	x0, [sp, #96]
    fba8:	str	x0, [sp, #320]
    fbac:	mov	x1, x24
    fbb0:	mov	x0, x19
    fbb4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fbb8:	mov	w19, w0
    fbbc:	str	w28, [sp, #312]
    fbc0:	ldr	x0, [sp, #96]
    fbc4:	str	x0, [sp, #304]
    fbc8:	ldr	w0, [sp, #312]
    fbcc:	cmp	w0, w19
    fbd0:	b.cc	fbec <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x334>  // b.lo, b.ul, b.last
    fbd4:	cmp	w19, w0
    fbd8:	b.eq	fc0c <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x354>  // b.none
    fbdc:	ldr	x0, [sp, #304]
    fbe0:	lsr	x19, x0, x19
    fbe4:	str	x19, [sp, #304]
    fbe8:	b	fa54 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x19c>
    fbec:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fbf0:	add	x3, x3, #0x0
    fbf4:	mov	w2, #0x3e3                 	// #995
    fbf8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fbfc:	add	x1, x1, #0x0
    fc00:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fc04:	add	x0, x0, #0x0
    fc08:	bl	0 <__assert_fail>
    fc0c:	str	xzr, [sp, #304]
    fc10:	b	fa54 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x19c>
    fc14:	add	x2, sp, #0x70
    fc18:	mov	x1, x0
    fc1c:	mov	x0, x27
    fc20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fc24:	b	fab8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x200>
    fc28:	ldp	x25, x26, [sp, #64]
    fc2c:	ldp	x27, x28, [sp, #80]
    fc30:	add	x20, sp, #0xa0
    fc34:	add	x19, sp, #0x70
    fc38:	mov	x1, x20
    fc3c:	mov	x0, x19
    fc40:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fc44:	mov	x2, x23
    fc48:	mov	x1, x19
    fc4c:	mov	x0, x22
    fc50:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
    fc54:	mov	x0, x19
    fc58:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fc5c:	mov	x0, x20
    fc60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fc64:	add	x0, sp, #0xd0
    fc68:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fc6c:	add	x0, sp, #0x100
    fc70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fc74:	ldp	x19, x20, [sp, #16]
    fc78:	ldp	x21, x22, [sp, #32]
    fc7c:	ldp	x23, x24, [sp, #48]
    fc80:	ldp	x29, x30, [sp], #368
    fc84:	ret
    fc88:	ldr	w19, [sp, #224]
    fc8c:	cmp	w19, #0x40
    fc90:	b.ls	fd20 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x468>  // b.plast
    fc94:	add	x0, sp, #0xd8
    fc98:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    fc9c:	sub	w19, w19, w0
    fca0:	cmp	w19, #0x40
    fca4:	b.hi	fd28 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x470>  // b.pmore
    fca8:	ldr	x0, [sp, #216]
    fcac:	ldr	x19, [x0]
    fcb0:	ldr	w0, [sp, #272]
    fcb4:	str	w0, [sp, #120]
    fcb8:	cmp	w0, #0x40
    fcbc:	b.hi	fd50 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x498>  // b.pmore
    fcc0:	ldr	x0, [sp, #264]
    fcc4:	str	x0, [sp, #112]
    fcc8:	ldr	w20, [sp, #120]
    fccc:	str	w20, [sp, #360]
    fcd0:	cmp	w20, #0x40
    fcd4:	b.hi	fd60 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x4a8>  // b.pmore
    fcd8:	ldr	x0, [sp, #112]
    fcdc:	str	x0, [sp, #352]
    fce0:	add	x1, sp, #0x160
    fce4:	mov	x0, x19
    fce8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fcec:	mov	w19, w0
    fcf0:	str	w20, [sp, #344]
    fcf4:	ldr	x0, [sp, #112]
    fcf8:	str	x0, [sp, #336]
    fcfc:	ldr	w0, [sp, #344]
    fd00:	cmp	w19, w0
    fd04:	b.hi	fe18 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x560>  // b.pmore
    fd08:	cmp	w0, w19
    fd0c:	b.eq	fe40 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x588>  // b.none
    fd10:	ldr	x0, [sp, #336]
    fd14:	lsr	x19, x0, x19
    fd18:	str	x19, [sp, #336]
    fd1c:	b	fdbc <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x504>
    fd20:	ldr	x19, [sp, #216]
    fd24:	b	fcb0 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x3f8>
    fd28:	stp	x25, x26, [sp, #64]
    fd2c:	stp	x27, x28, [sp, #80]
    fd30:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fd34:	add	x3, x3, #0x0
    fd38:	mov	w2, #0x657                 	// #1623
    fd3c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fd40:	add	x1, x1, #0x0
    fd44:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fd48:	add	x0, x0, #0x0
    fd4c:	bl	0 <__assert_fail>
    fd50:	add	x1, sp, #0x108
    fd54:	add	x0, sp, #0x70
    fd58:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    fd5c:	b	fcc8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x410>
    fd60:	add	x20, sp, #0x160
    fd64:	add	x1, sp, #0x70
    fd68:	mov	x0, x20
    fd6c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    fd70:	mov	x1, x20
    fd74:	mov	x0, x19
    fd78:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fd7c:	mov	w19, w0
    fd80:	ldr	w0, [sp, #120]
    fd84:	str	w0, [sp, #344]
    fd88:	cmp	w0, #0x40
    fd8c:	b.ls	fcf4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x43c>  // b.plast
    fd90:	add	x1, sp, #0x70
    fd94:	add	x0, sp, #0x150
    fd98:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    fd9c:	ldr	w0, [sp, #344]
    fda0:	cmp	w19, w0
    fda4:	b.hi	fe18 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x560>  // b.pmore
    fda8:	cmp	w0, #0x40
    fdac:	b.ls	fd08 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x450>  // b.plast
    fdb0:	mov	w1, w19
    fdb4:	add	x0, sp, #0x150
    fdb8:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
    fdbc:	ldr	w0, [sp, #176]
    fdc0:	cmp	w0, #0x40
    fdc4:	b.ls	fdd4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x51c>  // b.plast
    fdc8:	ldr	x0, [sp, #168]
    fdcc:	cbz	x0, fdd4 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x51c>
    fdd0:	bl	0 <_ZdaPv>
    fdd4:	ldr	x0, [sp, #336]
    fdd8:	str	x0, [sp, #168]
    fddc:	ldr	w0, [sp, #344]
    fde0:	str	w0, [sp, #176]
    fde4:	ldr	w0, [sp, #360]
    fde8:	cmp	w0, #0x40
    fdec:	b.ls	fdfc <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x544>  // b.plast
    fdf0:	ldr	x0, [sp, #352]
    fdf4:	cbz	x0, fdfc <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x544>
    fdf8:	bl	0 <_ZdaPv>
    fdfc:	ldr	w0, [sp, #120]
    fe00:	cmp	w0, #0x40
    fe04:	b.ls	fc30 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x378>  // b.plast
    fe08:	ldr	x0, [sp, #112]
    fe0c:	cbz	x0, fc30 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x378>
    fe10:	bl	0 <_ZdaPv>
    fe14:	b	fc30 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x378>
    fe18:	stp	x25, x26, [sp, #64]
    fe1c:	stp	x27, x28, [sp, #80]
    fe20:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fe24:	add	x3, x3, #0x0
    fe28:	mov	w2, #0x3e3                 	// #995
    fe2c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fe30:	add	x1, x1, #0x0
    fe34:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    fe38:	add	x0, x0, #0x0
    fe3c:	bl	0 <__assert_fail>
    fe40:	str	xzr, [sp, #336]
    fe44:	b	fdbc <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE+0x504>

000000000000fe48 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE>:
    fe48:	stp	x29, x30, [sp, #-400]!
    fe4c:	mov	x29, sp
    fe50:	stp	x19, x20, [sp, #16]
    fe54:	stp	x25, x26, [sp, #64]
    fe58:	stp	x27, x28, [sp, #80]
    fe5c:	mov	x19, x0
    fe60:	mov	x26, x1
    fe64:	ldr	x28, [x0, #704]
    fe68:	sub	x28, x28, #0x80
    fe6c:	add	x8, sp, #0x120
    fe70:	mov	x2, x28
    fe74:	ldur	x1, [x1, #-48]
    fe78:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    fe7c:	add	x8, sp, #0xf0
    fe80:	mov	x2, x28
    fe84:	ldur	x1, [x26, #-24]
    fe88:	mov	x0, x19
    fe8c:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
    fe90:	mov	w0, #0x1                   	// #1
    fe94:	str	w0, [sp, #208]
    fe98:	str	xzr, [sp, #200]
    fe9c:	str	xzr, [sp, #216]
    fea0:	str	xzr, [sp, #224]
    fea4:	str	xzr, [sp, #232]
    fea8:	str	wzr, [sp, #192]
    feac:	str	wzr, [sp, #196]
    feb0:	ldr	x0, [x26]
    feb4:	ldrb	w0, [x0, #8]
    feb8:	cmp	w0, #0x10
    febc:	b.ne	10354 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x50c>  // b.any
    fec0:	ldr	x0, [sp, #320]
    fec4:	ldr	x1, [sp, #312]
    fec8:	sub	x0, x0, x1
    fecc:	asr	x27, x0, #4
    fed0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    fed4:	movk	x1, #0xaaab
    fed8:	mul	x27, x27, x1
    fedc:	ldr	x1, [sp, #272]
    fee0:	ldr	x2, [sp, #264]
    fee4:	sub	x1, x1, x2
    fee8:	cmp	x1, x0
    feec:	b.ne	ff20 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0xd8>  // b.any
    fef0:	cbz	x27, 102fc <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4b4>
    fef4:	stp	x21, x22, [sp, #32]
    fef8:	stp	x23, x24, [sp, #48]
    fefc:	mov	w23, #0x0                   	// #0
    ff00:	mov	x19, #0x0                   	// #0
    ff04:	add	x0, sp, #0x90
    ff08:	str	x0, [sp, #104]
    ff0c:	add	x1, sp, #0xd8
    ff10:	str	x1, [sp, #112]
    ff14:	add	x0, sp, #0x98
    ff18:	str	x0, [sp, #120]
    ff1c:	b	1018c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x344>
    ff20:	stp	x21, x22, [sp, #32]
    ff24:	stp	x23, x24, [sp, #48]
    ff28:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ff2c:	add	x3, x3, #0x0
    ff30:	mov	w2, #0x4e4                 	// #1252
    ff34:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ff38:	add	x1, x1, #0x0
    ff3c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ff40:	add	x0, x0, #0x0
    ff44:	bl	0 <__assert_fail>
    ff48:	ldr	x20, [x20, #8]
    ff4c:	b	101e4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x39c>
    ff50:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ff54:	add	x3, x3, #0x0
    ff58:	mov	w2, #0x657                 	// #1623
    ff5c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ff60:	add	x1, x1, #0x0
    ff64:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ff68:	add	x0, x0, #0x0
    ff6c:	bl	0 <__assert_fail>
    ff70:	add	x1, x1, #0x8
    ff74:	add	x0, sp, #0x80
    ff78:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ff7c:	b	10204 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3bc>
    ff80:	add	x19, sp, #0x160
    ff84:	add	x1, sp, #0x80
    ff88:	mov	x0, x19
    ff8c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ff90:	mov	x1, x19
    ff94:	mov	x0, x20
    ff98:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
    ff9c:	mov	w20, w0
    ffa0:	ldr	w0, [sp, #136]
    ffa4:	str	w0, [sp, #344]
    ffa8:	cmp	w0, #0x40
    ffac:	b.ls	10230 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3e8>  // b.plast
    ffb0:	add	x1, sp, #0x80
    ffb4:	add	x0, sp, #0x150
    ffb8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    ffbc:	ldr	w0, [sp, #344]
    ffc0:	cmp	w20, w0
    ffc4:	b.hi	10284 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x43c>  // b.pmore
    ffc8:	cmp	w0, #0x40
    ffcc:	b.ls	10244 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x3fc>  // b.plast
    ffd0:	mov	w1, w20
    ffd4:	add	x0, sp, #0x150
    ffd8:	bl	0 <_ZN4llvm5APInt12ashrSlowCaseEj>
    ffdc:	ldr	w0, [sp, #160]
    ffe0:	cmp	w0, #0x40
    ffe4:	b.ls	fff4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1ac>  // b.plast
    ffe8:	ldr	x0, [sp, #152]
    ffec:	cbz	x0, fff4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1ac>
    fff0:	bl	0 <_ZdaPv>
    fff4:	ldr	x0, [sp, #336]
    fff8:	str	x0, [sp, #152]
    fffc:	ldr	w0, [sp, #344]
   10000:	str	w0, [sp, #160]
   10004:	ldr	w0, [sp, #360]
   10008:	cmp	w0, #0x40
   1000c:	b.ls	1001c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1d4>  // b.plast
   10010:	ldr	x0, [sp, #352]
   10014:	cbz	x0, 1001c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x1d4>
   10018:	bl	0 <_ZdaPv>
   1001c:	ldr	x20, [sp, #224]
   10020:	ldr	x0, [sp, #232]
   10024:	cmp	x20, x0
   10028:	b.eq	102e0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x498>  // b.none
   1002c:	mov	x0, x20
   10030:	ldr	x1, [sp, #144]
   10034:	str	x1, [x0], #8
   10038:	ldr	w1, [sp, #160]
   1003c:	str	w1, [x0, #8]
   10040:	cmp	w1, #0x40
   10044:	b.hi	102c4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x47c>  // b.pmore
   10048:	ldr	x0, [sp, #152]
   1004c:	str	x0, [x20, #8]
   10050:	ldr	x19, [sp, #176]
   10054:	ldr	x0, [sp, #168]
   10058:	sub	x19, x19, x0
   1005c:	asr	x1, x19, #4
   10060:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10064:	movk	x0, #0xaaab
   10068:	mul	x1, x1, x0
   1006c:	str	xzr, [x20, #24]
   10070:	str	xzr, [x20, #32]
   10074:	str	xzr, [x20, #40]
   10078:	cbz	x1, 102d8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x490>
   1007c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10080:	movk	x0, #0x2aa, lsl #48
   10084:	cmp	x1, x0
   10088:	b.hi	102d4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x48c>  // b.pmore
   1008c:	mov	x0, x19
   10090:	bl	0 <_Znwm>
   10094:	mov	x21, x0
   10098:	str	x21, [x20, #24]
   1009c:	str	x21, [x20, #32]
   100a0:	add	x19, x21, x19
   100a4:	str	x19, [x20, #40]
   100a8:	ldr	x25, [sp, #168]
   100ac:	ldr	x19, [sp, #176]
   100b0:	cmp	x25, x19
   100b4:	b.eq	1010c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2c4>  // b.none
   100b8:	mov	x22, x25
   100bc:	mov	x24, x21
   100c0:	mov	x1, x22
   100c4:	mov	x0, x24
   100c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   100cc:	add	x24, x24, #0x30
   100d0:	add	x22, x22, #0x30
   100d4:	cmp	x19, x22
   100d8:	b.ne	100c0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x278>  // b.any
   100dc:	sub	x0, x19, #0x30
   100e0:	sub	x0, x0, x25
   100e4:	lsr	x0, x0, #4
   100e8:	mov	x1, #0xaaab                	// #43691
   100ec:	movk	x1, #0xaaaa, lsl #16
   100f0:	movk	x1, #0xaaaa, lsl #32
   100f4:	movk	x1, #0xaaa, lsl #48
   100f8:	mul	x0, x0, x1
   100fc:	and	x0, x0, #0xfffffffffffffff
   10100:	add	x0, x0, #0x1
   10104:	add	x0, x0, x0, lsl #1
   10108:	add	x21, x21, x0, lsl #4
   1010c:	str	x21, [x20, #32]
   10110:	ldr	x0, [sp, #224]
   10114:	add	x0, x0, #0x30
   10118:	str	x0, [sp, #224]
   1011c:	ldr	w0, [sp, #136]
   10120:	cmp	w0, #0x40
   10124:	b.ls	10134 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2ec>  // b.plast
   10128:	ldr	x0, [sp, #128]
   1012c:	cbz	x0, 10134 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2ec>
   10130:	bl	0 <_ZdaPv>
   10134:	ldr	x19, [sp, #168]
   10138:	ldr	x20, [sp, #176]
   1013c:	cmp	x19, x20
   10140:	b.eq	10158 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x310>  // b.none
   10144:	mov	x0, x19
   10148:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1014c:	add	x19, x19, #0x30
   10150:	cmp	x20, x19
   10154:	b.ne	10144 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2fc>  // b.any
   10158:	ldr	x0, [sp, #168]
   1015c:	cbz	x0, 10164 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x31c>
   10160:	bl	0 <_ZdlPv>
   10164:	ldr	w0, [sp, #160]
   10168:	cmp	w0, #0x40
   1016c:	b.ls	1017c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x334>  // b.plast
   10170:	ldr	x0, [sp, #152]
   10174:	cbz	x0, 1017c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x334>
   10178:	bl	0 <_ZdaPv>
   1017c:	add	w23, w23, #0x1
   10180:	mov	w19, w23
   10184:	cmp	x27, w23, uxtw
   10188:	b.ls	102f4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4ac>  // b.plast
   1018c:	mov	w0, #0x1                   	// #1
   10190:	str	w0, [sp, #160]
   10194:	str	xzr, [sp, #152]
   10198:	str	xzr, [sp, #168]
   1019c:	str	xzr, [sp, #176]
   101a0:	str	xzr, [sp, #184]
   101a4:	str	wzr, [sp, #144]
   101a8:	str	wzr, [sp, #148]
   101ac:	add	x19, x19, x19, lsl #1
   101b0:	lsl	x19, x19, #4
   101b4:	ldr	x20, [sp, #264]
   101b8:	add	x20, x20, x19
   101bc:	ldr	w21, [x20, #16]
   101c0:	cmp	w21, #0x40
   101c4:	b.ls	ff48 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x100>  // b.plast
   101c8:	add	x0, x20, #0x8
   101cc:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   101d0:	sub	w21, w21, w0
   101d4:	cmp	w21, #0x40
   101d8:	b.hi	ff50 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x108>  // b.pmore
   101dc:	ldr	x0, [x20, #8]
   101e0:	ldr	x20, [x0]
   101e4:	ldr	x1, [sp, #312]
   101e8:	add	x1, x1, x19
   101ec:	ldr	w0, [x1, #16]
   101f0:	str	w0, [sp, #136]
   101f4:	cmp	w0, #0x40
   101f8:	b.hi	ff70 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x128>  // b.pmore
   101fc:	ldr	x0, [x1, #8]
   10200:	str	x0, [sp, #128]
   10204:	ldr	w19, [sp, #136]
   10208:	str	w19, [sp, #360]
   1020c:	cmp	w19, #0x40
   10210:	b.hi	ff80 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x138>  // b.pmore
   10214:	ldr	x0, [sp, #128]
   10218:	str	x0, [sp, #352]
   1021c:	add	x1, sp, #0x160
   10220:	mov	x0, x20
   10224:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10228:	mov	w20, w0
   1022c:	str	w19, [sp, #344]
   10230:	ldr	x0, [sp, #128]
   10234:	str	x0, [sp, #336]
   10238:	ldr	w0, [sp, #344]
   1023c:	cmp	w0, w20
   10240:	b.cc	10284 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x43c>  // b.lo, b.ul, b.last
   10244:	ldr	x1, [sp, #336]
   10248:	cbz	w0, 102a4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x45c>
   1024c:	mov	w2, #0x40                  	// #64
   10250:	sub	w2, w2, w0
   10254:	lsl	x1, x1, x2
   10258:	asr	x1, x1, x2
   1025c:	asr	x2, x1, #63
   10260:	asr	x1, x1, x20
   10264:	cmp	w0, w20
   10268:	csel	x1, x1, x2, ne  // ne = any
   1026c:	neg	w0, w0
   10270:	mov	x2, #0xffffffffffffffff    	// #-1
   10274:	lsr	x0, x2, x0
   10278:	and	x1, x0, x1
   1027c:	str	x1, [sp, #336]
   10280:	b	ffdc <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x194>
   10284:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10288:	add	x3, x3, #0x0
   1028c:	mov	w2, #0x3cb                 	// #971
   10290:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10294:	add	x1, x1, #0x0
   10298:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1029c:	add	x0, x0, #0x0
   102a0:	bl	0 <__assert_fail>
   102a4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   102a8:	add	x3, x3, #0x0
   102ac:	mov	w2, #0x307                 	// #775
   102b0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   102b4:	add	x1, x1, #0x0
   102b8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   102bc:	add	x0, x0, #0x0
   102c0:	bl	0 <__assert_fail>
   102c4:	ldr	x1, [sp, #120]
   102c8:	add	x0, x20, #0x8
   102cc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   102d0:	b	10050 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x208>
   102d4:	bl	0 <_ZSt17__throw_bad_allocv>
   102d8:	mov	x21, #0x0                   	// #0
   102dc:	b	10098 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x250>
   102e0:	ldr	x2, [sp, #104]
   102e4:	mov	x1, x20
   102e8:	ldr	x0, [sp, #112]
   102ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   102f0:	b	1011c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x2d4>
   102f4:	ldp	x21, x22, [sp, #32]
   102f8:	ldp	x23, x24, [sp, #48]
   102fc:	add	x20, sp, #0xc0
   10300:	add	x19, sp, #0x90
   10304:	mov	x1, x20
   10308:	mov	x0, x19
   1030c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10310:	mov	x2, x28
   10314:	mov	x1, x19
   10318:	mov	x0, x26
   1031c:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10320:	mov	x0, x19
   10324:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10328:	mov	x0, x20
   1032c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10330:	add	x0, sp, #0xf0
   10334:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10338:	add	x0, sp, #0x120
   1033c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10340:	ldp	x19, x20, [sp, #16]
   10344:	ldp	x25, x26, [sp, #64]
   10348:	ldp	x27, x28, [sp, #80]
   1034c:	ldp	x29, x30, [sp], #400
   10350:	ret
   10354:	ldr	w19, [sp, #256]
   10358:	cmp	w19, #0x40
   1035c:	b.ls	1040c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x5c4>  // b.plast
   10360:	add	x0, sp, #0xf8
   10364:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   10368:	sub	w19, w19, w0
   1036c:	cmp	w19, #0x40
   10370:	b.hi	10414 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x5cc>  // b.pmore
   10374:	ldr	x0, [sp, #248]
   10378:	ldr	x19, [x0]
   1037c:	ldr	w0, [sp, #304]
   10380:	str	w0, [sp, #152]
   10384:	cmp	w0, #0x40
   10388:	b.hi	1043c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x5f4>  // b.pmore
   1038c:	ldr	x0, [sp, #296]
   10390:	str	x0, [sp, #144]
   10394:	ldr	w20, [sp, #152]
   10398:	str	w20, [sp, #392]
   1039c:	cmp	w20, #0x40
   103a0:	b.hi	1044c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x604>  // b.pmore
   103a4:	ldr	x0, [sp, #144]
   103a8:	str	x0, [sp, #384]
   103ac:	add	x1, sp, #0x180
   103b0:	mov	x0, x19
   103b4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   103b8:	mov	w19, w0
   103bc:	str	w20, [sp, #376]
   103c0:	ldr	x0, [sp, #144]
   103c4:	str	x0, [sp, #368]
   103c8:	ldr	w1, [sp, #376]
   103cc:	cmp	w19, w1
   103d0:	b.hi	10504 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x6bc>  // b.pmore
   103d4:	ldr	x0, [sp, #368]
   103d8:	cbz	w1, 1052c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x6e4>
   103dc:	mov	w2, #0x40                  	// #64
   103e0:	sub	w2, w2, w1
   103e4:	lsl	x0, x0, x2
   103e8:	asr	x0, x0, x2
   103ec:	asr	x2, x0, #63
   103f0:	asr	x0, x0, x19
   103f4:	cmp	w19, w1
   103f8:	csel	x0, x0, x2, ne  // ne = any
   103fc:	str	x0, [sp, #368]
   10400:	add	x0, sp, #0x170
   10404:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10408:	b	104a8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x660>
   1040c:	ldr	x19, [sp, #248]
   10410:	b	1037c <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x534>
   10414:	stp	x21, x22, [sp, #32]
   10418:	stp	x23, x24, [sp, #48]
   1041c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10420:	add	x3, x3, #0x0
   10424:	mov	w2, #0x657                 	// #1623
   10428:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1042c:	add	x1, x1, #0x0
   10430:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10434:	add	x0, x0, #0x0
   10438:	bl	0 <__assert_fail>
   1043c:	add	x1, sp, #0x128
   10440:	add	x0, sp, #0x90
   10444:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   10448:	b	10394 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x54c>
   1044c:	add	x20, sp, #0x180
   10450:	add	x1, sp, #0x90
   10454:	mov	x0, x20
   10458:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   1045c:	mov	x1, x20
   10460:	mov	x0, x19
   10464:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10468:	mov	w19, w0
   1046c:	ldr	w0, [sp, #152]
   10470:	str	w0, [sp, #376]
   10474:	cmp	w0, #0x40
   10478:	b.ls	103c0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x578>  // b.plast
   1047c:	add	x1, sp, #0x90
   10480:	add	x0, sp, #0x170
   10484:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   10488:	ldr	w1, [sp, #376]
   1048c:	cmp	w19, w1
   10490:	b.hi	10504 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x6bc>  // b.pmore
   10494:	cmp	w1, #0x40
   10498:	b.ls	103d4 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x58c>  // b.plast
   1049c:	mov	w1, w19
   104a0:	add	x0, sp, #0x170
   104a4:	bl	0 <_ZN4llvm5APInt12ashrSlowCaseEj>
   104a8:	ldr	w0, [sp, #208]
   104ac:	cmp	w0, #0x40
   104b0:	b.ls	104c0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x678>  // b.plast
   104b4:	ldr	x0, [sp, #200]
   104b8:	cbz	x0, 104c0 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x678>
   104bc:	bl	0 <_ZdaPv>
   104c0:	ldr	x0, [sp, #368]
   104c4:	str	x0, [sp, #200]
   104c8:	ldr	w0, [sp, #376]
   104cc:	str	w0, [sp, #208]
   104d0:	ldr	w0, [sp, #392]
   104d4:	cmp	w0, #0x40
   104d8:	b.ls	104e8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x6a0>  // b.plast
   104dc:	ldr	x0, [sp, #384]
   104e0:	cbz	x0, 104e8 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x6a0>
   104e4:	bl	0 <_ZdaPv>
   104e8:	ldr	w0, [sp, #152]
   104ec:	cmp	w0, #0x40
   104f0:	b.ls	102fc <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4b4>  // b.plast
   104f4:	ldr	x0, [sp, #144]
   104f8:	cbz	x0, 102fc <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4b4>
   104fc:	bl	0 <_ZdaPv>
   10500:	b	102fc <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE+0x4b4>
   10504:	stp	x21, x22, [sp, #32]
   10508:	stp	x23, x24, [sp, #48]
   1050c:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10510:	add	x3, x3, #0x0
   10514:	mov	w2, #0x3cb                 	// #971
   10518:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1051c:	add	x1, x1, #0x0
   10520:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10524:	add	x0, x0, #0x0
   10528:	bl	0 <__assert_fail>
   1052c:	stp	x21, x22, [sp, #32]
   10530:	stp	x23, x24, [sp, #48]
   10534:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10538:	add	x3, x3, #0x0
   1053c:	mov	w2, #0x307                 	// #775
   10540:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10544:	add	x1, x1, #0x0
   10548:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1054c:	add	x0, x0, #0x0
   10550:	bl	0 <__assert_fail>

0000000000010554 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE>:
   10554:	stp	x29, x30, [sp, #-96]!
   10558:	mov	x29, sp
   1055c:	stp	x19, x20, [sp, #16]
   10560:	str	x21, [sp, #32]
   10564:	mov	x19, x1
   10568:	ldr	x20, [x0, #704]
   1056c:	sub	x20, x20, #0x80
   10570:	add	x21, sp, #0x30
   10574:	mov	x8, x21
   10578:	mov	x3, x20
   1057c:	ldr	x2, [x1]
   10580:	ldur	x1, [x1, #-24]
   10584:	bl	675c <_ZN4llvm11Interpreter16executeTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   10588:	mov	x2, x20
   1058c:	mov	x1, x21
   10590:	mov	x0, x19
   10594:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10598:	ldr	x19, [sp, #72]
   1059c:	ldr	x20, [sp, #80]
   105a0:	cmp	x19, x20
   105a4:	b.eq	105bc <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x68>  // b.none
   105a8:	mov	x0, x19
   105ac:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   105b0:	add	x19, x19, #0x30
   105b4:	cmp	x20, x19
   105b8:	b.ne	105a8 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x54>  // b.any
   105bc:	ldr	x0, [sp, #72]
   105c0:	cbz	x0, 105c8 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x74>
   105c4:	bl	0 <_ZdlPv>
   105c8:	ldr	w0, [sp, #64]
   105cc:	cmp	w0, #0x40
   105d0:	b.ls	105e0 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x8c>  // b.plast
   105d4:	ldr	x0, [sp, #56]
   105d8:	cbz	x0, 105e0 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE+0x8c>
   105dc:	bl	0 <_ZdaPv>
   105e0:	ldp	x19, x20, [sp, #16]
   105e4:	ldr	x21, [sp, #32]
   105e8:	ldp	x29, x30, [sp], #96
   105ec:	ret

00000000000105f0 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE>:
   105f0:	stp	x29, x30, [sp, #-96]!
   105f4:	mov	x29, sp
   105f8:	stp	x19, x20, [sp, #16]
   105fc:	str	x21, [sp, #32]
   10600:	mov	x19, x1
   10604:	ldr	x20, [x0, #704]
   10608:	sub	x20, x20, #0x80
   1060c:	add	x21, sp, #0x30
   10610:	mov	x8, x21
   10614:	mov	x3, x20
   10618:	ldr	x2, [x1]
   1061c:	ldur	x1, [x1, #-24]
   10620:	bl	6aa8 <_ZN4llvm11Interpreter15executeSExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   10624:	mov	x2, x20
   10628:	mov	x1, x21
   1062c:	mov	x0, x19
   10630:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10634:	ldr	x19, [sp, #72]
   10638:	ldr	x20, [sp, #80]
   1063c:	cmp	x19, x20
   10640:	b.eq	10658 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x68>  // b.none
   10644:	mov	x0, x19
   10648:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1064c:	add	x19, x19, #0x30
   10650:	cmp	x20, x19
   10654:	b.ne	10644 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x54>  // b.any
   10658:	ldr	x0, [sp, #72]
   1065c:	cbz	x0, 10664 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x74>
   10660:	bl	0 <_ZdlPv>
   10664:	ldr	w0, [sp, #64]
   10668:	cmp	w0, #0x40
   1066c:	b.ls	1067c <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x8c>  // b.plast
   10670:	ldr	x0, [sp, #56]
   10674:	cbz	x0, 1067c <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE+0x8c>
   10678:	bl	0 <_ZdaPv>
   1067c:	ldp	x19, x20, [sp, #16]
   10680:	ldr	x21, [sp, #32]
   10684:	ldp	x29, x30, [sp], #96
   10688:	ret

000000000001068c <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE>:
   1068c:	stp	x29, x30, [sp, #-96]!
   10690:	mov	x29, sp
   10694:	stp	x19, x20, [sp, #16]
   10698:	str	x21, [sp, #32]
   1069c:	mov	x19, x1
   106a0:	ldr	x20, [x0, #704]
   106a4:	sub	x20, x20, #0x80
   106a8:	add	x21, sp, #0x30
   106ac:	mov	x8, x21
   106b0:	mov	x3, x20
   106b4:	ldr	x2, [x1]
   106b8:	ldur	x1, [x1, #-24]
   106bc:	bl	6df0 <_ZN4llvm11Interpreter15executeZExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   106c0:	mov	x2, x20
   106c4:	mov	x1, x21
   106c8:	mov	x0, x19
   106cc:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   106d0:	ldr	x19, [sp, #72]
   106d4:	ldr	x20, [sp, #80]
   106d8:	cmp	x19, x20
   106dc:	b.eq	106f4 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x68>  // b.none
   106e0:	mov	x0, x19
   106e4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   106e8:	add	x19, x19, #0x30
   106ec:	cmp	x20, x19
   106f0:	b.ne	106e0 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x54>  // b.any
   106f4:	ldr	x0, [sp, #72]
   106f8:	cbz	x0, 10700 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x74>
   106fc:	bl	0 <_ZdlPv>
   10700:	ldr	w0, [sp, #64]
   10704:	cmp	w0, #0x40
   10708:	b.ls	10718 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x8c>  // b.plast
   1070c:	ldr	x0, [sp, #56]
   10710:	cbz	x0, 10718 <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE+0x8c>
   10714:	bl	0 <_ZdaPv>
   10718:	ldp	x19, x20, [sp, #16]
   1071c:	ldr	x21, [sp, #32]
   10720:	ldp	x29, x30, [sp], #96
   10724:	ret

0000000000010728 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE>:
   10728:	stp	x29, x30, [sp, #-96]!
   1072c:	mov	x29, sp
   10730:	stp	x19, x20, [sp, #16]
   10734:	str	x21, [sp, #32]
   10738:	mov	x19, x1
   1073c:	ldr	x20, [x0, #704]
   10740:	sub	x20, x20, #0x80
   10744:	add	x21, sp, #0x30
   10748:	mov	x8, x21
   1074c:	mov	x3, x20
   10750:	ldr	x2, [x1]
   10754:	ldur	x1, [x1, #-24]
   10758:	bl	7138 <_ZN4llvm11Interpreter18executeFPTruncInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   1075c:	mov	x2, x20
   10760:	mov	x1, x21
   10764:	mov	x0, x19
   10768:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   1076c:	ldr	x19, [sp, #72]
   10770:	ldr	x20, [sp, #80]
   10774:	cmp	x19, x20
   10778:	b.eq	10790 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x68>  // b.none
   1077c:	mov	x0, x19
   10780:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10784:	add	x19, x19, #0x30
   10788:	cmp	x20, x19
   1078c:	b.ne	1077c <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x54>  // b.any
   10790:	ldr	x0, [sp, #72]
   10794:	cbz	x0, 1079c <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x74>
   10798:	bl	0 <_ZdlPv>
   1079c:	ldr	w0, [sp, #64]
   107a0:	cmp	w0, #0x40
   107a4:	b.ls	107b4 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x8c>  // b.plast
   107a8:	ldr	x0, [sp, #56]
   107ac:	cbz	x0, 107b4 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE+0x8c>
   107b0:	bl	0 <_ZdaPv>
   107b4:	ldp	x19, x20, [sp, #16]
   107b8:	ldr	x21, [sp, #32]
   107bc:	ldp	x29, x30, [sp], #96
   107c0:	ret

00000000000107c4 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE>:
   107c4:	stp	x29, x30, [sp, #-96]!
   107c8:	mov	x29, sp
   107cc:	stp	x19, x20, [sp, #16]
   107d0:	str	x21, [sp, #32]
   107d4:	mov	x19, x1
   107d8:	ldr	x20, [x0, #704]
   107dc:	sub	x20, x20, #0x80
   107e0:	add	x21, sp, #0x30
   107e4:	mov	x8, x21
   107e8:	mov	x3, x20
   107ec:	ldr	x2, [x1]
   107f0:	ldur	x1, [x1, #-24]
   107f4:	bl	72e8 <_ZN4llvm11Interpreter16executeFPExtInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   107f8:	mov	x2, x20
   107fc:	mov	x1, x21
   10800:	mov	x0, x19
   10804:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10808:	ldr	x19, [sp, #72]
   1080c:	ldr	x20, [sp, #80]
   10810:	cmp	x19, x20
   10814:	b.eq	1082c <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x68>  // b.none
   10818:	mov	x0, x19
   1081c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10820:	add	x19, x19, #0x30
   10824:	cmp	x20, x19
   10828:	b.ne	10818 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x54>  // b.any
   1082c:	ldr	x0, [sp, #72]
   10830:	cbz	x0, 10838 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x74>
   10834:	bl	0 <_ZdlPv>
   10838:	ldr	w0, [sp, #64]
   1083c:	cmp	w0, #0x40
   10840:	b.ls	10850 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x8c>  // b.plast
   10844:	ldr	x0, [sp, #56]
   10848:	cbz	x0, 10850 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE+0x8c>
   1084c:	bl	0 <_ZdaPv>
   10850:	ldp	x19, x20, [sp, #16]
   10854:	ldr	x21, [sp, #32]
   10858:	ldp	x29, x30, [sp], #96
   1085c:	ret

0000000000010860 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE>:
   10860:	stp	x29, x30, [sp, #-96]!
   10864:	mov	x29, sp
   10868:	stp	x19, x20, [sp, #16]
   1086c:	str	x21, [sp, #32]
   10870:	mov	x19, x1
   10874:	ldr	x20, [x0, #704]
   10878:	sub	x20, x20, #0x80
   1087c:	add	x21, sp, #0x30
   10880:	mov	x8, x21
   10884:	mov	x3, x20
   10888:	ldr	x2, [x1]
   1088c:	ldur	x1, [x1, #-24]
   10890:	bl	7498 <_ZN4llvm11Interpreter17executeFPToUIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   10894:	mov	x2, x20
   10898:	mov	x1, x21
   1089c:	mov	x0, x19
   108a0:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   108a4:	ldr	x19, [sp, #72]
   108a8:	ldr	x20, [sp, #80]
   108ac:	cmp	x19, x20
   108b0:	b.eq	108c8 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x68>  // b.none
   108b4:	mov	x0, x19
   108b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   108bc:	add	x19, x19, #0x30
   108c0:	cmp	x20, x19
   108c4:	b.ne	108b4 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x54>  // b.any
   108c8:	ldr	x0, [sp, #72]
   108cc:	cbz	x0, 108d4 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x74>
   108d0:	bl	0 <_ZdlPv>
   108d4:	ldr	w0, [sp, #64]
   108d8:	cmp	w0, #0x40
   108dc:	b.ls	108ec <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x8c>  // b.plast
   108e0:	ldr	x0, [sp, #56]
   108e4:	cbz	x0, 108ec <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE+0x8c>
   108e8:	bl	0 <_ZdaPv>
   108ec:	ldp	x19, x20, [sp, #16]
   108f0:	ldr	x21, [sp, #32]
   108f4:	ldp	x29, x30, [sp], #96
   108f8:	ret

00000000000108fc <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE>:
   108fc:	stp	x29, x30, [sp, #-96]!
   10900:	mov	x29, sp
   10904:	stp	x19, x20, [sp, #16]
   10908:	str	x21, [sp, #32]
   1090c:	mov	x19, x1
   10910:	ldr	x20, [x0, #704]
   10914:	sub	x20, x20, #0x80
   10918:	add	x21, sp, #0x30
   1091c:	mov	x8, x21
   10920:	mov	x3, x20
   10924:	ldr	x2, [x1]
   10928:	ldur	x1, [x1, #-24]
   1092c:	bl	7830 <_ZN4llvm11Interpreter17executeFPToSIInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   10930:	mov	x2, x20
   10934:	mov	x1, x21
   10938:	mov	x0, x19
   1093c:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10940:	ldr	x19, [sp, #72]
   10944:	ldr	x20, [sp, #80]
   10948:	cmp	x19, x20
   1094c:	b.eq	10964 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x68>  // b.none
   10950:	mov	x0, x19
   10954:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10958:	add	x19, x19, #0x30
   1095c:	cmp	x20, x19
   10960:	b.ne	10950 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x54>  // b.any
   10964:	ldr	x0, [sp, #72]
   10968:	cbz	x0, 10970 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x74>
   1096c:	bl	0 <_ZdlPv>
   10970:	ldr	w0, [sp, #64]
   10974:	cmp	w0, #0x40
   10978:	b.ls	10988 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x8c>  // b.plast
   1097c:	ldr	x0, [sp, #56]
   10980:	cbz	x0, 10988 <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE+0x8c>
   10984:	bl	0 <_ZdaPv>
   10988:	ldp	x19, x20, [sp, #16]
   1098c:	ldr	x21, [sp, #32]
   10990:	ldp	x29, x30, [sp], #96
   10994:	ret

0000000000010998 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE>:
   10998:	stp	x29, x30, [sp, #-96]!
   1099c:	mov	x29, sp
   109a0:	stp	x19, x20, [sp, #16]
   109a4:	str	x21, [sp, #32]
   109a8:	mov	x19, x1
   109ac:	ldr	x20, [x0, #704]
   109b0:	sub	x20, x20, #0x80
   109b4:	add	x21, sp, #0x30
   109b8:	mov	x8, x21
   109bc:	mov	x3, x20
   109c0:	ldr	x2, [x1]
   109c4:	ldur	x1, [x1, #-24]
   109c8:	bl	7bc8 <_ZN4llvm11Interpreter17executeUIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   109cc:	mov	x2, x20
   109d0:	mov	x1, x21
   109d4:	mov	x0, x19
   109d8:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   109dc:	ldr	x19, [sp, #72]
   109e0:	ldr	x20, [sp, #80]
   109e4:	cmp	x19, x20
   109e8:	b.eq	10a00 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x68>  // b.none
   109ec:	mov	x0, x19
   109f0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   109f4:	add	x19, x19, #0x30
   109f8:	cmp	x20, x19
   109fc:	b.ne	109ec <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x54>  // b.any
   10a00:	ldr	x0, [sp, #72]
   10a04:	cbz	x0, 10a0c <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x74>
   10a08:	bl	0 <_ZdlPv>
   10a0c:	ldr	w0, [sp, #64]
   10a10:	cmp	w0, #0x40
   10a14:	b.ls	10a24 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x8c>  // b.plast
   10a18:	ldr	x0, [sp, #56]
   10a1c:	cbz	x0, 10a24 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE+0x8c>
   10a20:	bl	0 <_ZdaPv>
   10a24:	ldp	x19, x20, [sp, #16]
   10a28:	ldr	x21, [sp, #32]
   10a2c:	ldp	x29, x30, [sp], #96
   10a30:	ret

0000000000010a34 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE>:
   10a34:	stp	x29, x30, [sp, #-96]!
   10a38:	mov	x29, sp
   10a3c:	stp	x19, x20, [sp, #16]
   10a40:	str	x21, [sp, #32]
   10a44:	mov	x19, x1
   10a48:	ldr	x20, [x0, #704]
   10a4c:	sub	x20, x20, #0x80
   10a50:	add	x21, sp, #0x30
   10a54:	mov	x8, x21
   10a58:	mov	x3, x20
   10a5c:	ldr	x2, [x1]
   10a60:	ldur	x1, [x1, #-24]
   10a64:	bl	7db8 <_ZN4llvm11Interpreter17executeSIToFPInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   10a68:	mov	x2, x20
   10a6c:	mov	x1, x21
   10a70:	mov	x0, x19
   10a74:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10a78:	ldr	x19, [sp, #72]
   10a7c:	ldr	x20, [sp, #80]
   10a80:	cmp	x19, x20
   10a84:	b.eq	10a9c <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x68>  // b.none
   10a88:	mov	x0, x19
   10a8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10a90:	add	x19, x19, #0x30
   10a94:	cmp	x20, x19
   10a98:	b.ne	10a88 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x54>  // b.any
   10a9c:	ldr	x0, [sp, #72]
   10aa0:	cbz	x0, 10aa8 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x74>
   10aa4:	bl	0 <_ZdlPv>
   10aa8:	ldr	w0, [sp, #64]
   10aac:	cmp	w0, #0x40
   10ab0:	b.ls	10ac0 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x8c>  // b.plast
   10ab4:	ldr	x0, [sp, #56]
   10ab8:	cbz	x0, 10ac0 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE+0x8c>
   10abc:	bl	0 <_ZdaPv>
   10ac0:	ldp	x19, x20, [sp, #16]
   10ac4:	ldr	x21, [sp, #32]
   10ac8:	ldp	x29, x30, [sp], #96
   10acc:	ret

0000000000010ad0 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE>:
   10ad0:	stp	x29, x30, [sp, #-96]!
   10ad4:	mov	x29, sp
   10ad8:	stp	x19, x20, [sp, #16]
   10adc:	str	x21, [sp, #32]
   10ae0:	mov	x19, x1
   10ae4:	ldr	x20, [x0, #704]
   10ae8:	sub	x20, x20, #0x80
   10aec:	add	x21, sp, #0x30
   10af0:	mov	x8, x21
   10af4:	mov	x3, x20
   10af8:	ldr	x2, [x1]
   10afc:	ldur	x1, [x1, #-24]
   10b00:	bl	7fc4 <_ZN4llvm11Interpreter19executePtrToIntInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   10b04:	mov	x2, x20
   10b08:	mov	x1, x21
   10b0c:	mov	x0, x19
   10b10:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10b14:	ldr	x19, [sp, #72]
   10b18:	ldr	x20, [sp, #80]
   10b1c:	cmp	x19, x20
   10b20:	b.eq	10b38 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x68>  // b.none
   10b24:	mov	x0, x19
   10b28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10b2c:	add	x19, x19, #0x30
   10b30:	cmp	x20, x19
   10b34:	b.ne	10b24 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x54>  // b.any
   10b38:	ldr	x0, [sp, #72]
   10b3c:	cbz	x0, 10b44 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x74>
   10b40:	bl	0 <_ZdlPv>
   10b44:	ldr	w0, [sp, #64]
   10b48:	cmp	w0, #0x40
   10b4c:	b.ls	10b5c <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x8c>  // b.plast
   10b50:	ldr	x0, [sp, #56]
   10b54:	cbz	x0, 10b5c <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE+0x8c>
   10b58:	bl	0 <_ZdaPv>
   10b5c:	ldp	x19, x20, [sp, #16]
   10b60:	ldr	x21, [sp, #32]
   10b64:	ldp	x29, x30, [sp], #96
   10b68:	ret

0000000000010b6c <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE>:
   10b6c:	stp	x29, x30, [sp, #-96]!
   10b70:	mov	x29, sp
   10b74:	stp	x19, x20, [sp, #16]
   10b78:	str	x21, [sp, #32]
   10b7c:	mov	x19, x1
   10b80:	ldr	x20, [x0, #704]
   10b84:	sub	x20, x20, #0x80
   10b88:	add	x21, sp, #0x30
   10b8c:	mov	x8, x21
   10b90:	mov	x3, x20
   10b94:	ldr	x2, [x1]
   10b98:	ldur	x1, [x1, #-24]
   10b9c:	bl	8178 <_ZN4llvm11Interpreter19executeIntToPtrInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   10ba0:	mov	x2, x20
   10ba4:	mov	x1, x21
   10ba8:	mov	x0, x19
   10bac:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10bb0:	ldr	x19, [sp, #72]
   10bb4:	ldr	x20, [sp, #80]
   10bb8:	cmp	x19, x20
   10bbc:	b.eq	10bd4 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x68>  // b.none
   10bc0:	mov	x0, x19
   10bc4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10bc8:	add	x19, x19, #0x30
   10bcc:	cmp	x20, x19
   10bd0:	b.ne	10bc0 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x54>  // b.any
   10bd4:	ldr	x0, [sp, #72]
   10bd8:	cbz	x0, 10be0 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x74>
   10bdc:	bl	0 <_ZdlPv>
   10be0:	ldr	w0, [sp, #64]
   10be4:	cmp	w0, #0x40
   10be8:	b.ls	10bf8 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x8c>  // b.plast
   10bec:	ldr	x0, [sp, #56]
   10bf0:	cbz	x0, 10bf8 <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE+0x8c>
   10bf4:	bl	0 <_ZdaPv>
   10bf8:	ldp	x19, x20, [sp, #16]
   10bfc:	ldr	x21, [sp, #32]
   10c00:	ldp	x29, x30, [sp], #96
   10c04:	ret

0000000000010c08 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE>:
   10c08:	stp	x29, x30, [sp, #-96]!
   10c0c:	mov	x29, sp
   10c10:	stp	x19, x20, [sp, #16]
   10c14:	str	x21, [sp, #32]
   10c18:	mov	x19, x1
   10c1c:	ldr	x20, [x0, #704]
   10c20:	sub	x20, x20, #0x80
   10c24:	add	x21, sp, #0x30
   10c28:	mov	x8, x21
   10c2c:	mov	x3, x20
   10c30:	ldr	x2, [x1]
   10c34:	ldur	x1, [x1, #-24]
   10c38:	bl	82f0 <_ZN4llvm11Interpreter18executeBitCastInstEPNS_5ValueEPNS_4TypeERNS_16ExecutionContextE>
   10c3c:	mov	x2, x20
   10c40:	mov	x1, x21
   10c44:	mov	x0, x19
   10c48:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10c4c:	ldr	x19, [sp, #72]
   10c50:	ldr	x20, [sp, #80]
   10c54:	cmp	x19, x20
   10c58:	b.eq	10c70 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x68>  // b.none
   10c5c:	mov	x0, x19
   10c60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10c64:	add	x19, x19, #0x30
   10c68:	cmp	x20, x19
   10c6c:	b.ne	10c5c <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x54>  // b.any
   10c70:	ldr	x0, [sp, #72]
   10c74:	cbz	x0, 10c7c <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x74>
   10c78:	bl	0 <_ZdlPv>
   10c7c:	ldr	w0, [sp, #64]
   10c80:	cmp	w0, #0x40
   10c84:	b.ls	10c94 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x8c>  // b.plast
   10c88:	ldr	x0, [sp, #56]
   10c8c:	cbz	x0, 10c94 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE+0x8c>
   10c90:	bl	0 <_ZdaPv>
   10c94:	ldp	x19, x20, [sp, #16]
   10c98:	ldr	x21, [sp, #32]
   10c9c:	ldp	x29, x30, [sp], #96
   10ca0:	ret

0000000000010ca4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE>:
   10ca4:	stp	x29, x30, [sp, #-240]!
   10ca8:	mov	x29, sp
   10cac:	stp	x19, x20, [sp, #16]
   10cb0:	str	x21, [sp, #32]
   10cb4:	mov	x20, x0
   10cb8:	mov	x19, x1
   10cbc:	ldr	x21, [x0, #704]
   10cc0:	sub	x21, x21, #0x80
   10cc4:	add	x8, sp, #0xc0
   10cc8:	mov	x2, x21
   10ccc:	ldur	x1, [x1, #-24]
   10cd0:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10cd4:	mov	w0, #0x1                   	// #1
   10cd8:	str	w0, [sp, #160]
   10cdc:	str	xzr, [sp, #152]
   10ce0:	str	xzr, [sp, #168]
   10ce4:	str	xzr, [sp, #176]
   10ce8:	str	xzr, [sp, #184]
   10cec:	str	wzr, [sp, #144]
   10cf0:	str	wzr, [sp, #148]
   10cf4:	ldr	w0, [sp, #192]
   10cf8:	ldr	x1, [x20, #696]
   10cfc:	add	x0, x1, x0, lsl #7
   10d00:	ldr	w1, [sp, #196]
   10d04:	add	x1, x1, x1, lsl #1
   10d08:	ldr	x0, [x0, #80]
   10d0c:	add	x1, x0, x1, lsl #4
   10d10:	add	x0, sp, #0x60
   10d14:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10d18:	ldr	x20, [x19]
   10d1c:	ldrb	w0, [x20, #8]
   10d20:	cmp	w0, #0xb
   10d24:	b.eq	10eb4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x210>  // b.none
   10d28:	b.hi	10d48 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xa4>  // b.pmore
   10d2c:	cmp	w0, #0x2
   10d30:	b.eq	10ef4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x250>  // b.none
   10d34:	cmp	w0, #0x3
   10d38:	b.ne	10f00 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x25c>  // b.any
   10d3c:	ldr	d0, [sp, #96]
   10d40:	str	d0, [sp, #144]
   10d44:	b	10d58 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xb4>
   10d48:	cmp	w0, #0xf
   10d4c:	b.ne	10f00 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x25c>  // b.any
   10d50:	ldr	x0, [sp, #96]
   10d54:	str	x0, [sp, #144]
   10d58:	add	x20, sp, #0x30
   10d5c:	add	x1, sp, #0x90
   10d60:	mov	x0, x20
   10d64:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10d68:	mov	x2, x21
   10d6c:	mov	x1, x20
   10d70:	mov	x0, x19
   10d74:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   10d78:	ldr	x19, [sp, #72]
   10d7c:	ldr	x20, [sp, #80]
   10d80:	cmp	x19, x20
   10d84:	b.eq	10d9c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xf8>  // b.none
   10d88:	mov	x0, x19
   10d8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10d90:	add	x19, x19, #0x30
   10d94:	cmp	x20, x19
   10d98:	b.ne	10d88 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xe4>  // b.any
   10d9c:	ldr	x0, [sp, #72]
   10da0:	cbz	x0, 10da8 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x104>
   10da4:	bl	0 <_ZdlPv>
   10da8:	ldr	w0, [sp, #64]
   10dac:	cmp	w0, #0x40
   10db0:	b.ls	10dc0 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x11c>  // b.plast
   10db4:	ldr	x0, [sp, #56]
   10db8:	cbz	x0, 10dc0 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x11c>
   10dbc:	bl	0 <_ZdaPv>
   10dc0:	ldr	w0, [sp, #196]
   10dc4:	add	w0, w0, #0x1
   10dc8:	str	w0, [sp, #196]
   10dcc:	ldr	x19, [sp, #120]
   10dd0:	ldr	x20, [sp, #128]
   10dd4:	cmp	x19, x20
   10dd8:	b.eq	10df0 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x14c>  // b.none
   10ddc:	mov	x0, x19
   10de0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10de4:	add	x19, x19, #0x30
   10de8:	cmp	x20, x19
   10dec:	b.ne	10ddc <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x138>  // b.any
   10df0:	ldr	x0, [sp, #120]
   10df4:	cbz	x0, 10dfc <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x158>
   10df8:	bl	0 <_ZdlPv>
   10dfc:	ldr	w0, [sp, #112]
   10e00:	cmp	w0, #0x40
   10e04:	b.ls	10e14 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x170>  // b.plast
   10e08:	ldr	x0, [sp, #104]
   10e0c:	cbz	x0, 10e14 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x170>
   10e10:	bl	0 <_ZdaPv>
   10e14:	ldr	x19, [sp, #168]
   10e18:	ldr	x20, [sp, #176]
   10e1c:	cmp	x19, x20
   10e20:	b.eq	10e38 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x194>  // b.none
   10e24:	mov	x0, x19
   10e28:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10e2c:	add	x19, x19, #0x30
   10e30:	cmp	x20, x19
   10e34:	b.ne	10e24 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x180>  // b.any
   10e38:	ldr	x0, [sp, #168]
   10e3c:	cbz	x0, 10e44 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1a0>
   10e40:	bl	0 <_ZdlPv>
   10e44:	ldr	w0, [sp, #160]
   10e48:	cmp	w0, #0x40
   10e4c:	b.ls	10e5c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1b8>  // b.plast
   10e50:	ldr	x0, [sp, #152]
   10e54:	cbz	x0, 10e5c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1b8>
   10e58:	bl	0 <_ZdaPv>
   10e5c:	ldr	x19, [sp, #216]
   10e60:	ldr	x20, [sp, #224]
   10e64:	cmp	x19, x20
   10e68:	b.eq	10e80 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1dc>  // b.none
   10e6c:	mov	x0, x19
   10e70:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10e74:	add	x19, x19, #0x30
   10e78:	cmp	x20, x19
   10e7c:	b.ne	10e6c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1c8>  // b.any
   10e80:	ldr	x0, [sp, #216]
   10e84:	cbz	x0, 10e8c <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x1e8>
   10e88:	bl	0 <_ZdlPv>
   10e8c:	ldr	w0, [sp, #208]
   10e90:	cmp	w0, #0x40
   10e94:	b.ls	10ea4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x200>  // b.plast
   10e98:	ldr	x0, [sp, #200]
   10e9c:	cbz	x0, 10ea4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x200>
   10ea0:	bl	0 <_ZdaPv>
   10ea4:	ldp	x19, x20, [sp, #16]
   10ea8:	ldr	x21, [sp, #32]
   10eac:	ldp	x29, x30, [sp], #240
   10eb0:	ret
   10eb4:	ldr	w0, [sp, #160]
   10eb8:	cmp	w0, #0x40
   10ebc:	b.hi	10ecc <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x228>  // b.pmore
   10ec0:	ldr	w0, [sp, #112]
   10ec4:	cmp	w0, #0x40
   10ec8:	b.ls	10edc <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0x238>  // b.plast
   10ecc:	add	x1, sp, #0x68
   10ed0:	add	x0, sp, #0x98
   10ed4:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   10ed8:	b	10d58 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xb4>
   10edc:	ldr	x1, [sp, #104]
   10ee0:	str	x1, [sp, #152]
   10ee4:	str	w0, [sp, #160]
   10ee8:	add	x0, sp, #0x98
   10eec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10ef0:	b	10d58 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xb4>
   10ef4:	ldr	s0, [sp, #96]
   10ef8:	str	s0, [sp, #144]
   10efc:	b	10d58 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE+0xb4>
   10f00:	bl	0 <_ZN4llvm4dbgsEv>
   10f04:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10f08:	add	x1, x1, #0x0
   10f0c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10f10:	mov	x19, x0
   10f14:	mov	w3, #0x0                   	// #0
   10f18:	mov	w2, #0x0                   	// #0
   10f1c:	mov	x1, x0
   10f20:	mov	x0, x20
   10f24:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
   10f28:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10f2c:	add	x1, x1, #0x0
   10f30:	mov	x0, x19
   10f34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10f38:	mov	w2, #0x6fd                 	// #1789
   10f3c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   10f40:	add	x1, x1, #0x0
   10f44:	mov	x0, #0x0                   	// #0
   10f48:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000010f4c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE>:
   10f4c:	stp	x29, x30, [sp, #-240]!
   10f50:	mov	x29, sp
   10f54:	stp	x19, x20, [sp, #16]
   10f58:	str	x21, [sp, #32]
   10f5c:	mov	x21, x0
   10f60:	mov	x19, x1
   10f64:	ldr	x20, [x0, #704]
   10f68:	sub	x20, x20, #0x80
   10f6c:	add	x8, sp, #0xc0
   10f70:	mov	x2, x20
   10f74:	ldur	x1, [x1, #-48]
   10f78:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10f7c:	add	x8, sp, #0x90
   10f80:	mov	x2, x20
   10f84:	ldur	x1, [x19, #-24]
   10f88:	mov	x0, x21
   10f8c:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   10f90:	mov	w0, #0x1                   	// #1
   10f94:	str	w0, [sp, #112]
   10f98:	str	xzr, [sp, #104]
   10f9c:	str	xzr, [sp, #120]
   10fa0:	str	xzr, [sp, #128]
   10fa4:	str	xzr, [sp, #136]
   10fa8:	str	wzr, [sp, #96]
   10fac:	str	wzr, [sp, #100]
   10fb0:	ldr	w21, [sp, #160]
   10fb4:	cmp	w21, #0x40
   10fb8:	b.ls	1106c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x120>  // b.plast
   10fbc:	add	x0, sp, #0x98
   10fc0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   10fc4:	sub	w21, w21, w0
   10fc8:	cmp	w21, #0x40
   10fcc:	b.hi	11074 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x128>  // b.pmore
   10fd0:	ldr	x0, [sp, #152]
   10fd4:	ldr	x2, [x0]
   10fd8:	ldr	x3, [sp, #216]
   10fdc:	and	x1, x2, #0xffffffff
   10fe0:	ldr	x0, [sp, #224]
   10fe4:	sub	x0, x0, x3
   10fe8:	asr	x0, x0, #4
   10fec:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10ff0:	movk	x4, #0xaaab
   10ff4:	mul	x0, x0, x4
   10ff8:	cmp	x0, w2, uxtw
   10ffc:	b.ls	11244 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2f8>  // b.plast
   11000:	ldr	x21, [x19]
   11004:	ldrb	w2, [x21, #8]
   11008:	cmp	w2, #0x3
   1100c:	b.eq	11230 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2e4>  // b.none
   11010:	cmp	w2, #0xb
   11014:	b.eq	11094 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x148>  // b.none
   11018:	cmp	w2, #0x2
   1101c:	b.eq	110d0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x184>  // b.none
   11020:	bl	0 <_ZN4llvm4dbgsEv>
   11024:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11028:	add	x1, x1, #0x0
   1102c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11030:	mov	x19, x0
   11034:	mov	w3, #0x0                   	// #0
   11038:	mov	w2, #0x0                   	// #0
   1103c:	mov	x1, x0
   11040:	mov	x0, x21
   11044:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
   11048:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1104c:	add	x1, x1, #0x0
   11050:	mov	x0, x19
   11054:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11058:	mov	w2, #0x715                 	// #1813
   1105c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11060:	add	x1, x1, #0x0
   11064:	mov	x0, #0x0                   	// #0
   11068:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1106c:	ldr	x2, [sp, #152]
   11070:	b	10fd8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x8c>
   11074:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11078:	add	x3, x3, #0x0
   1107c:	mov	w2, #0x657                 	// #1623
   11080:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11084:	add	x1, x1, #0x0
   11088:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1108c:	add	x0, x0, #0x0
   11090:	bl	0 <__assert_fail>
   11094:	add	x1, x1, x1, lsl #1
   11098:	add	x0, x3, x1, lsl #4
   1109c:	add	x1, x0, #0x8
   110a0:	ldr	w2, [x1, #8]
   110a4:	cmp	w2, #0x40
   110a8:	b.ls	110b8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x16c>  // b.plast
   110ac:	add	x0, sp, #0x68
   110b0:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   110b4:	b	110e0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x194>
   110b8:	ldr	x0, [x0, #8]
   110bc:	str	x0, [sp, #104]
   110c0:	str	w2, [sp, #112]
   110c4:	add	x0, sp, #0x68
   110c8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   110cc:	b	110e0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x194>
   110d0:	add	x1, x1, x1, lsl #1
   110d4:	lsl	x1, x1, #4
   110d8:	ldr	s0, [x3, x1]
   110dc:	str	s0, [sp, #96]
   110e0:	add	x21, sp, #0x30
   110e4:	add	x1, sp, #0x60
   110e8:	mov	x0, x21
   110ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   110f0:	mov	x2, x20
   110f4:	mov	x1, x21
   110f8:	mov	x0, x19
   110fc:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   11100:	ldr	x19, [sp, #72]
   11104:	ldr	x20, [sp, #80]
   11108:	cmp	x19, x20
   1110c:	b.eq	11124 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1d8>  // b.none
   11110:	mov	x0, x19
   11114:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11118:	add	x19, x19, #0x30
   1111c:	cmp	x20, x19
   11120:	b.ne	11110 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1c4>  // b.any
   11124:	ldr	x0, [sp, #72]
   11128:	cbz	x0, 11130 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1e4>
   1112c:	bl	0 <_ZdlPv>
   11130:	ldr	w0, [sp, #64]
   11134:	cmp	w0, #0x40
   11138:	b.ls	11148 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1fc>  // b.plast
   1113c:	ldr	x0, [sp, #56]
   11140:	cbz	x0, 11148 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x1fc>
   11144:	bl	0 <_ZdaPv>
   11148:	ldr	x19, [sp, #120]
   1114c:	ldr	x20, [sp, #128]
   11150:	cmp	x19, x20
   11154:	b.eq	1116c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x220>  // b.none
   11158:	mov	x0, x19
   1115c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11160:	add	x19, x19, #0x30
   11164:	cmp	x20, x19
   11168:	b.ne	11158 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x20c>  // b.any
   1116c:	ldr	x0, [sp, #120]
   11170:	cbz	x0, 11178 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x22c>
   11174:	bl	0 <_ZdlPv>
   11178:	ldr	w0, [sp, #112]
   1117c:	cmp	w0, #0x40
   11180:	b.ls	11190 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x244>  // b.plast
   11184:	ldr	x0, [sp, #104]
   11188:	cbz	x0, 11190 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x244>
   1118c:	bl	0 <_ZdaPv>
   11190:	ldr	x19, [sp, #168]
   11194:	ldr	x20, [sp, #176]
   11198:	cmp	x19, x20
   1119c:	b.eq	111b4 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x268>  // b.none
   111a0:	mov	x0, x19
   111a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   111a8:	add	x19, x19, #0x30
   111ac:	cmp	x20, x19
   111b0:	b.ne	111a0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x254>  // b.any
   111b4:	ldr	x0, [sp, #168]
   111b8:	cbz	x0, 111c0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x274>
   111bc:	bl	0 <_ZdlPv>
   111c0:	ldr	w0, [sp, #160]
   111c4:	cmp	w0, #0x40
   111c8:	b.ls	111d8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x28c>  // b.plast
   111cc:	ldr	x0, [sp, #152]
   111d0:	cbz	x0, 111d8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x28c>
   111d4:	bl	0 <_ZdaPv>
   111d8:	ldr	x19, [sp, #216]
   111dc:	ldr	x20, [sp, #224]
   111e0:	cmp	x19, x20
   111e4:	b.eq	111fc <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2b0>  // b.none
   111e8:	mov	x0, x19
   111ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   111f0:	add	x19, x19, #0x30
   111f4:	cmp	x20, x19
   111f8:	b.ne	111e8 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x29c>  // b.any
   111fc:	ldr	x0, [sp, #216]
   11200:	cbz	x0, 11208 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2bc>
   11204:	bl	0 <_ZdlPv>
   11208:	ldr	w0, [sp, #208]
   1120c:	cmp	w0, #0x40
   11210:	b.ls	11220 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2d4>  // b.plast
   11214:	ldr	x0, [sp, #200]
   11218:	cbz	x0, 11220 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x2d4>
   1121c:	bl	0 <_ZdaPv>
   11220:	ldp	x19, x20, [sp, #16]
   11224:	ldr	x21, [sp, #32]
   11228:	ldp	x29, x30, [sp], #240
   1122c:	ret
   11230:	add	x1, x1, x1, lsl #1
   11234:	lsl	x1, x1, #4
   11238:	ldr	d0, [x3, x1]
   1123c:	str	d0, [sp, #96]
   11240:	b	110e0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x194>
   11244:	bl	0 <_ZN4llvm4dbgsEv>
   11248:	ldr	x2, [x0, #24]
   1124c:	ldr	x1, [x0, #16]
   11250:	sub	x1, x1, x2
   11254:	cmp	x1, #0x2b
   11258:	b.ls	11294 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x348>  // b.plast
   1125c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11260:	add	x1, x1, #0x0
   11264:	ldp	x4, x5, [x1]
   11268:	stp	x4, x5, [x2]
   1126c:	ldp	x4, x5, [x1, #16]
   11270:	stp	x4, x5, [x2, #16]
   11274:	ldr	x3, [x1, #32]
   11278:	str	x3, [x2, #32]
   1127c:	ldr	w1, [x1, #40]
   11280:	str	w1, [x2, #40]
   11284:	ldr	x1, [x0, #24]
   11288:	add	x1, x1, #0x2c
   1128c:	str	x1, [x0, #24]
   11290:	b	110e0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x194>
   11294:	mov	x2, #0x2c                  	// #44
   11298:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1129c:	add	x1, x1, #0x0
   112a0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   112a4:	b	110e0 <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE+0x194>

00000000000112a8 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE>:
   112a8:	stp	x29, x30, [sp, #-288]!
   112ac:	mov	x29, sp
   112b0:	stp	x19, x20, [sp, #16]
   112b4:	stp	x21, x22, [sp, #32]
   112b8:	ldr	x20, [x0, #704]
   112bc:	ldr	x22, [x1]
   112c0:	cbz	x22, 113cc <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x124>
   112c4:	mov	x21, x0
   112c8:	mov	x19, x1
   112cc:	sub	x20, x20, #0x80
   112d0:	ldrb	w0, [x22, #8]
   112d4:	cmp	w0, #0x10
   112d8:	b.ne	113ec <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x144>  // b.any
   112dc:	add	x8, sp, #0xf0
   112e0:	mov	x2, x20
   112e4:	ldur	x1, [x1, #-72]
   112e8:	mov	x0, x21
   112ec:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   112f0:	add	x8, sp, #0xc0
   112f4:	mov	x2, x20
   112f8:	ldur	x1, [x19, #-48]
   112fc:	mov	x0, x21
   11300:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   11304:	add	x8, sp, #0x90
   11308:	mov	x2, x20
   1130c:	ldur	x1, [x19, #-24]
   11310:	mov	x0, x21
   11314:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   11318:	mov	w0, #0x1                   	// #1
   1131c:	str	w0, [sp, #112]
   11320:	str	xzr, [sp, #104]
   11324:	str	xzr, [sp, #120]
   11328:	str	xzr, [sp, #128]
   1132c:	str	xzr, [sp, #136]
   11330:	str	wzr, [sp, #96]
   11334:	str	wzr, [sp, #100]
   11338:	ldr	x22, [x22, #24]
   1133c:	ldr	w21, [sp, #160]
   11340:	cmp	w21, #0x40
   11344:	b.ls	1140c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x164>  // b.plast
   11348:	add	x0, sp, #0x98
   1134c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   11350:	sub	w21, w21, w0
   11354:	cmp	w21, #0x40
   11358:	b.hi	11414 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x16c>  // b.pmore
   1135c:	ldr	x0, [sp, #152]
   11360:	ldr	x21, [x0]
   11364:	add	x1, sp, #0x108
   11368:	add	x0, sp, #0x78
   1136c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11370:	and	x1, x21, #0xffffffff
   11374:	ldr	x0, [sp, #272]
   11378:	ldr	x2, [sp, #264]
   1137c:	sub	x0, x0, x2
   11380:	asr	x0, x0, #4
   11384:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11388:	movk	x2, #0xaaab
   1138c:	mul	x0, x0, x2
   11390:	cmp	x0, w21, uxtw
   11394:	b.ls	11434 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x18c>  // b.plast
   11398:	ldrb	w0, [x22, #8]
   1139c:	cmp	w0, #0x3
   113a0:	b.eq	11644 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x39c>  // b.none
   113a4:	cmp	w0, #0xb
   113a8:	b.eq	1144c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1a4>  // b.none
   113ac:	cmp	w0, #0x2
   113b0:	b.eq	11498 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1f0>  // b.none
   113b4:	mov	w2, #0x73a                 	// #1850
   113b8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   113bc:	add	x1, x1, #0x0
   113c0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   113c4:	add	x0, x0, #0x0
   113c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   113cc:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   113d0:	add	x3, x3, #0x0
   113d4:	mov	w2, #0x69                  	// #105
   113d8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   113dc:	add	x1, x1, #0x0
   113e0:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   113e4:	add	x0, x0, #0x0
   113e8:	bl	0 <__assert_fail>
   113ec:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   113f0:	add	x3, x3, #0x0
   113f4:	mov	w2, #0x108                 	// #264
   113f8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   113fc:	add	x1, x1, #0x0
   11400:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11404:	add	x0, x0, #0x0
   11408:	bl	0 <__assert_fail>
   1140c:	ldr	x21, [sp, #152]
   11410:	b	11364 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0xbc>
   11414:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11418:	add	x3, x3, #0x0
   1141c:	mov	w2, #0x657                 	// #1623
   11420:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11424:	add	x1, x1, #0x0
   11428:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1142c:	add	x0, x0, #0x0
   11430:	bl	0 <__assert_fail>
   11434:	mov	w2, #0x737                 	// #1847
   11438:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1143c:	add	x1, x1, #0x0
   11440:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11444:	add	x0, x0, #0x0
   11448:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1144c:	add	x1, x1, x1, lsl #1
   11450:	ldr	x0, [sp, #120]
   11454:	add	x1, x0, x1, lsl #4
   11458:	add	x0, x1, #0x8
   1145c:	ldr	w2, [x0, #8]
   11460:	cmp	w2, #0x40
   11464:	b.hi	11474 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1cc>  // b.pmore
   11468:	ldr	w2, [sp, #208]
   1146c:	cmp	w2, #0x40
   11470:	b.ls	11480 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x1d8>  // b.plast
   11474:	add	x1, sp, #0xc8
   11478:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   1147c:	b	114ac <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x204>
   11480:	ldr	x2, [sp, #200]
   11484:	str	x2, [x1, #8]
   11488:	ldr	w2, [sp, #208]
   1148c:	str	w2, [x1, #16]
   11490:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11494:	b	114ac <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x204>
   11498:	add	x1, x1, x1, lsl #1
   1149c:	lsl	x1, x1, #4
   114a0:	ldr	s0, [sp, #192]
   114a4:	ldr	x0, [sp, #120]
   114a8:	str	s0, [x0, x1]
   114ac:	add	x21, sp, #0x30
   114b0:	add	x1, sp, #0x60
   114b4:	mov	x0, x21
   114b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   114bc:	mov	x2, x20
   114c0:	mov	x1, x21
   114c4:	mov	x0, x19
   114c8:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   114cc:	ldr	x19, [sp, #72]
   114d0:	ldr	x20, [sp, #80]
   114d4:	cmp	x19, x20
   114d8:	b.eq	114f0 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x248>  // b.none
   114dc:	mov	x0, x19
   114e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   114e4:	add	x19, x19, #0x30
   114e8:	cmp	x20, x19
   114ec:	b.ne	114dc <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x234>  // b.any
   114f0:	ldr	x0, [sp, #72]
   114f4:	cbz	x0, 114fc <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x254>
   114f8:	bl	0 <_ZdlPv>
   114fc:	ldr	w0, [sp, #64]
   11500:	cmp	w0, #0x40
   11504:	b.ls	11514 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x26c>  // b.plast
   11508:	ldr	x0, [sp, #56]
   1150c:	cbz	x0, 11514 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x26c>
   11510:	bl	0 <_ZdaPv>
   11514:	ldr	x19, [sp, #120]
   11518:	ldr	x20, [sp, #128]
   1151c:	cmp	x19, x20
   11520:	b.eq	11538 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x290>  // b.none
   11524:	mov	x0, x19
   11528:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1152c:	add	x19, x19, #0x30
   11530:	cmp	x20, x19
   11534:	b.ne	11524 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x27c>  // b.any
   11538:	ldr	x0, [sp, #120]
   1153c:	cbz	x0, 11544 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x29c>
   11540:	bl	0 <_ZdlPv>
   11544:	ldr	w0, [sp, #112]
   11548:	cmp	w0, #0x40
   1154c:	b.ls	1155c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2b4>  // b.plast
   11550:	ldr	x0, [sp, #104]
   11554:	cbz	x0, 1155c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2b4>
   11558:	bl	0 <_ZdaPv>
   1155c:	ldr	x19, [sp, #168]
   11560:	ldr	x20, [sp, #176]
   11564:	cmp	x19, x20
   11568:	b.eq	11580 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2d8>  // b.none
   1156c:	mov	x0, x19
   11570:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11574:	add	x19, x19, #0x30
   11578:	cmp	x20, x19
   1157c:	b.ne	1156c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2c4>  // b.any
   11580:	ldr	x0, [sp, #168]
   11584:	cbz	x0, 1158c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2e4>
   11588:	bl	0 <_ZdlPv>
   1158c:	ldr	w0, [sp, #160]
   11590:	cmp	w0, #0x40
   11594:	b.ls	115a4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2fc>  // b.plast
   11598:	ldr	x0, [sp, #152]
   1159c:	cbz	x0, 115a4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x2fc>
   115a0:	bl	0 <_ZdaPv>
   115a4:	ldr	x19, [sp, #216]
   115a8:	ldr	x20, [sp, #224]
   115ac:	cmp	x19, x20
   115b0:	b.eq	115c8 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x320>  // b.none
   115b4:	mov	x0, x19
   115b8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   115bc:	add	x19, x19, #0x30
   115c0:	cmp	x20, x19
   115c4:	b.ne	115b4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x30c>  // b.any
   115c8:	ldr	x0, [sp, #216]
   115cc:	cbz	x0, 115d4 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x32c>
   115d0:	bl	0 <_ZdlPv>
   115d4:	ldr	w0, [sp, #208]
   115d8:	cmp	w0, #0x40
   115dc:	b.ls	115ec <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x344>  // b.plast
   115e0:	ldr	x0, [sp, #200]
   115e4:	cbz	x0, 115ec <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x344>
   115e8:	bl	0 <_ZdaPv>
   115ec:	ldr	x19, [sp, #264]
   115f0:	ldr	x20, [sp, #272]
   115f4:	cmp	x19, x20
   115f8:	b.eq	11610 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x368>  // b.none
   115fc:	mov	x0, x19
   11600:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11604:	add	x19, x19, #0x30
   11608:	cmp	x20, x19
   1160c:	b.ne	115fc <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x354>  // b.any
   11610:	ldr	x0, [sp, #264]
   11614:	cbz	x0, 1161c <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x374>
   11618:	bl	0 <_ZdlPv>
   1161c:	ldr	w0, [sp, #256]
   11620:	cmp	w0, #0x40
   11624:	b.ls	11634 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x38c>  // b.plast
   11628:	ldr	x0, [sp, #248]
   1162c:	cbz	x0, 11634 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x38c>
   11630:	bl	0 <_ZdaPv>
   11634:	ldp	x19, x20, [sp, #16]
   11638:	ldp	x21, x22, [sp, #32]
   1163c:	ldp	x29, x30, [sp], #288
   11640:	ret
   11644:	add	x1, x1, x1, lsl #1
   11648:	lsl	x1, x1, #4
   1164c:	ldr	d0, [sp, #192]
   11650:	ldr	x0, [sp, #120]
   11654:	str	d0, [x0, x1]
   11658:	b	114ac <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE+0x204>

000000000001165c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE>:
   1165c:	stp	x29, x30, [sp, #-336]!
   11660:	mov	x29, sp
   11664:	stp	x19, x20, [sp, #16]
   11668:	stp	x23, x24, [sp, #48]
   1166c:	ldr	x24, [x0, #704]
   11670:	ldr	x20, [x1]
   11674:	cbz	x20, 1177c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x120>
   11678:	mov	x19, x0
   1167c:	mov	x23, x1
   11680:	sub	x24, x24, #0x80
   11684:	ldrb	w0, [x20, #8]
   11688:	cmp	w0, #0x10
   1168c:	b.ne	117a8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x14c>  // b.any
   11690:	stp	x21, x22, [sp, #32]
   11694:	add	x8, sp, #0x120
   11698:	mov	x2, x24
   1169c:	ldur	x1, [x1, #-72]
   116a0:	mov	x0, x19
   116a4:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   116a8:	add	x8, sp, #0xf0
   116ac:	mov	x2, x24
   116b0:	ldur	x1, [x23, #-48]
   116b4:	mov	x0, x19
   116b8:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   116bc:	add	x8, sp, #0xc0
   116c0:	mov	x2, x24
   116c4:	ldur	x1, [x23, #-24]
   116c8:	mov	x0, x19
   116cc:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   116d0:	mov	w0, #0x1                   	// #1
   116d4:	str	w0, [sp, #160]
   116d8:	str	xzr, [sp, #152]
   116dc:	str	xzr, [sp, #168]
   116e0:	str	xzr, [sp, #176]
   116e4:	str	xzr, [sp, #184]
   116e8:	str	wzr, [sp, #144]
   116ec:	str	wzr, [sp, #148]
   116f0:	ldr	x21, [x20, #24]
   116f4:	ldr	x20, [sp, #320]
   116f8:	ldr	x0, [sp, #312]
   116fc:	sub	x20, x20, x0
   11700:	asr	x20, x20, #4
   11704:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11708:	movk	x0, #0xaaab
   1170c:	mul	w20, w20, w0
   11710:	ldr	x22, [sp, #272]
   11714:	ldr	x1, [sp, #264]
   11718:	sub	x22, x22, x1
   1171c:	asr	x22, x22, #4
   11720:	mul	w22, w22, w0
   11724:	ldr	x19, [sp, #224]
   11728:	ldr	x1, [sp, #216]
   1172c:	sub	x19, x19, x1
   11730:	asr	x19, x19, #4
   11734:	mul	x19, x19, x0
   11738:	and	x1, x19, #0xffffffff
   1173c:	cbnz	w19, 117d4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x178>
   11740:	ldrb	w0, [x21, #8]
   11744:	cmp	w0, #0x3
   11748:	b.eq	11b14 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x4b8>  // b.none
   1174c:	cmp	w0, #0xb
   11750:	b.eq	117e0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x184>  // b.none
   11754:	cmp	w0, #0x2
   11758:	b.eq	119bc <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x360>  // b.none
   1175c:	stp	x25, x26, [sp, #64]
   11760:	str	x27, [sp, #80]
   11764:	mov	w2, #0x75f                 	// #1887
   11768:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1176c:	add	x1, x1, #0x0
   11770:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11774:	add	x0, x0, #0x0
   11778:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1177c:	stp	x21, x22, [sp, #32]
   11780:	stp	x25, x26, [sp, #64]
   11784:	str	x27, [sp, #80]
   11788:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1178c:	add	x3, x3, #0x0
   11790:	mov	w2, #0x69                  	// #105
   11794:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11798:	add	x1, x1, #0x0
   1179c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   117a0:	add	x0, x0, #0x0
   117a4:	bl	0 <__assert_fail>
   117a8:	stp	x21, x22, [sp, #32]
   117ac:	stp	x25, x26, [sp, #64]
   117b0:	str	x27, [sp, #80]
   117b4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   117b8:	add	x3, x3, #0x0
   117bc:	mov	w2, #0x108                 	// #264
   117c0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   117c4:	add	x1, x1, #0x0
   117c8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   117cc:	add	x0, x0, #0x0
   117d0:	bl	0 <__assert_fail>
   117d4:	add	x0, sp, #0xa8
   117d8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   117dc:	b	11740 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0xe4>
   117e0:	cbz	w19, 11ab4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x458>
   117e4:	stp	x25, x26, [sp, #64]
   117e8:	str	x27, [sp, #80]
   117ec:	sub	w19, w19, #0x1
   117f0:	add	x19, x19, #0x1
   117f4:	add	x19, x19, x19, lsl #1
   117f8:	lsl	x19, x19, #4
   117fc:	mov	x21, #0x0                   	// #0
   11800:	add	w22, w20, w22
   11804:	mov	x25, #0xffffffffffffffff    	// #-1
   11808:	b	118f4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x298>
   1180c:	ldr	x1, [x26, #8]
   11810:	b	11924 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x2c8>
   11814:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11818:	add	x3, x3, #0x0
   1181c:	mov	w2, #0x657                 	// #1623
   11820:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11824:	add	x1, x1, #0x0
   11828:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1182c:	add	x0, x0, #0x0
   11830:	bl	0 <__assert_fail>
   11834:	ldr	x3, [sp, #168]
   11838:	add	x3, x3, x21
   1183c:	add	x0, x3, #0x8
   11840:	ubfiz	x2, x1, #1, #32
   11844:	add	x1, x2, w1, uxtw
   11848:	ldr	x2, [sp, #312]
   1184c:	add	x2, x2, x1, lsl #4
   11850:	add	x1, x2, #0x8
   11854:	ldr	w4, [x0, #8]
   11858:	cmp	w4, #0x40
   1185c:	b.hi	1186c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x210>  // b.pmore
   11860:	ldr	w4, [x2, #16]
   11864:	cmp	w4, #0x40
   11868:	b.ls	11874 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x218>  // b.plast
   1186c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   11870:	b	118e8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x28c>
   11874:	ldr	x4, [x2, #8]
   11878:	str	x4, [x3, #8]
   1187c:	ldr	w0, [x2, #16]
   11880:	str	w0, [x3, #16]
   11884:	neg	w1, w0
   11888:	lsr	x1, x25, x1
   1188c:	cmp	w0, #0x40
   11890:	b.hi	118a0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x244>  // b.pmore
   11894:	and	x1, x4, x1
   11898:	str	x1, [x3, #8]
   1189c:	b	118e8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x28c>
   118a0:	mov	w0, w0
   118a4:	add	x0, x0, #0x3f
   118a8:	lsr	x0, x0, #6
   118ac:	sub	w0, w0, #0x1
   118b0:	ldr	x3, [x3, #8]
   118b4:	ldr	x2, [x3, x0, lsl #3]
   118b8:	and	x1, x2, x1
   118bc:	str	x1, [x3, x0, lsl #3]
   118c0:	b	118e8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x28c>
   118c4:	mov	w0, w0
   118c8:	add	x0, x0, #0x3f
   118cc:	lsr	x0, x0, #6
   118d0:	sub	w0, w0, #0x1
   118d4:	ldr	x3, [x1, x0, lsl #3]
   118d8:	and	x2, x3, x2
   118dc:	str	x2, [x1, x0, lsl #3]
   118e0:	b	118e8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x28c>
   118e4:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   118e8:	add	x21, x21, #0x30
   118ec:	cmp	x19, x21
   118f0:	b.eq	119b0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x354>  // b.none
   118f4:	ldr	x26, [sp, #216]
   118f8:	add	x26, x26, x21
   118fc:	ldr	w27, [x26, #16]
   11900:	cmp	w27, #0x40
   11904:	b.ls	1180c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1b0>  // b.plast
   11908:	add	x0, x26, #0x8
   1190c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   11910:	sub	w27, w27, w0
   11914:	cmp	w27, #0x40
   11918:	b.hi	11814 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1b8>  // b.pmore
   1191c:	ldr	x0, [x26, #8]
   11920:	ldr	x1, [x0]
   11924:	cmp	w20, w1
   11928:	b.hi	11834 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x1d8>  // b.pmore
   1192c:	cmp	w22, w1
   11930:	b.ls	11998 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x33c>  // b.plast
   11934:	ldr	x3, [sp, #168]
   11938:	add	x3, x3, x21
   1193c:	add	x0, x3, #0x8
   11940:	sub	w2, w1, w20
   11944:	add	x2, x2, x2, lsl #1
   11948:	ldr	x1, [sp, #264]
   1194c:	add	x2, x1, x2, lsl #4
   11950:	add	x1, x2, #0x8
   11954:	ldr	w4, [x0, #8]
   11958:	cmp	w4, #0x40
   1195c:	b.hi	118e4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x288>  // b.pmore
   11960:	ldr	w4, [x2, #16]
   11964:	cmp	w4, #0x40
   11968:	b.hi	118e4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x288>  // b.pmore
   1196c:	ldr	x1, [x2, #8]
   11970:	str	x1, [x3, #8]
   11974:	ldr	w0, [x2, #16]
   11978:	str	w0, [x3, #16]
   1197c:	neg	w2, w0
   11980:	lsr	x2, x25, x2
   11984:	cmp	w0, #0x40
   11988:	b.hi	118c4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x268>  // b.pmore
   1198c:	and	x1, x1, x2
   11990:	str	x1, [x3, #8]
   11994:	b	118e8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x28c>
   11998:	mov	w2, #0x76e                 	// #1902
   1199c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   119a0:	add	x1, x1, #0x0
   119a4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   119a8:	add	x0, x0, #0x0
   119ac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   119b0:	ldp	x25, x26, [sp, #64]
   119b4:	ldr	x27, [sp, #80]
   119b8:	b	11ab4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x458>
   119bc:	cbz	w19, 11ab4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x458>
   119c0:	stp	x25, x26, [sp, #64]
   119c4:	sub	w19, w19, #0x1
   119c8:	add	x25, x19, #0x1
   119cc:	add	x25, x25, x25, lsl #1
   119d0:	lsl	x25, x25, #4
   119d4:	mov	x21, #0x0                   	// #0
   119d8:	add	w22, w20, w22
   119dc:	b	11a34 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x3d8>
   119e0:	ldr	x0, [x19, #8]
   119e4:	b	11a64 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x408>
   119e8:	str	x27, [sp, #80]
   119ec:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   119f0:	add	x3, x3, #0x0
   119f4:	mov	w2, #0x657                 	// #1623
   119f8:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   119fc:	add	x1, x1, #0x0
   11a00:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11a04:	add	x0, x0, #0x0
   11a08:	bl	0 <__assert_fail>
   11a0c:	ubfiz	x1, x0, #1, #32
   11a10:	add	x0, x1, w0, uxtw
   11a14:	lsl	x0, x0, #4
   11a18:	ldr	x1, [sp, #312]
   11a1c:	ldr	s0, [x1, x0]
   11a20:	ldr	x0, [sp, #168]
   11a24:	str	s0, [x0, x21]
   11a28:	add	x21, x21, #0x30
   11a2c:	cmp	x21, x25
   11a30:	b.eq	11ab0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x454>  // b.none
   11a34:	ldr	x19, [sp, #216]
   11a38:	add	x19, x19, x21
   11a3c:	ldr	w26, [x19, #16]
   11a40:	cmp	w26, #0x40
   11a44:	b.ls	119e0 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x384>  // b.plast
   11a48:	add	x0, x19, #0x8
   11a4c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   11a50:	sub	w26, w26, w0
   11a54:	cmp	w26, #0x40
   11a58:	b.hi	119e8 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x38c>  // b.pmore
   11a5c:	ldr	x0, [x19, #8]
   11a60:	ldr	x0, [x0]
   11a64:	cmp	w20, w0
   11a68:	b.hi	11a0c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x3b0>  // b.pmore
   11a6c:	cmp	w22, w0
   11a70:	b.ls	11a94 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x438>  // b.plast
   11a74:	sub	w1, w0, w20
   11a78:	add	x1, x1, x1, lsl #1
   11a7c:	lsl	x1, x1, #4
   11a80:	ldr	x0, [sp, #264]
   11a84:	ldr	s0, [x0, x1]
   11a88:	ldr	x0, [sp, #168]
   11a8c:	str	s0, [x0, x21]
   11a90:	b	11a28 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x3cc>
   11a94:	str	x27, [sp, #80]
   11a98:	mov	w2, #0x779                 	// #1913
   11a9c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11aa0:	add	x1, x1, #0x0
   11aa4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11aa8:	add	x0, x0, #0x0
   11aac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   11ab0:	ldp	x25, x26, [sp, #64]
   11ab4:	add	x20, sp, #0x90
   11ab8:	add	x19, sp, #0x60
   11abc:	mov	x1, x20
   11ac0:	mov	x0, x19
   11ac4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11ac8:	mov	x2, x24
   11acc:	mov	x1, x19
   11ad0:	mov	x0, x23
   11ad4:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   11ad8:	mov	x0, x19
   11adc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11ae0:	mov	x0, x20
   11ae4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11ae8:	add	x0, sp, #0xc0
   11aec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11af0:	add	x0, sp, #0xf0
   11af4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11af8:	add	x0, sp, #0x120
   11afc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11b00:	ldp	x21, x22, [sp, #32]
   11b04:	ldp	x19, x20, [sp, #16]
   11b08:	ldp	x23, x24, [sp, #48]
   11b0c:	ldp	x29, x30, [sp], #336
   11b10:	ret
   11b14:	cbz	w19, 11ab4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x458>
   11b18:	stp	x25, x26, [sp, #64]
   11b1c:	sub	w19, w19, #0x1
   11b20:	add	x21, x19, #0x1
   11b24:	add	x21, x21, x21, lsl #1
   11b28:	lsl	x21, x21, #4
   11b2c:	mov	x25, #0x0                   	// #0
   11b30:	add	w22, w20, w22
   11b34:	b	11b8c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x530>
   11b38:	ldr	x0, [x19, #8]
   11b3c:	b	11bbc <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x560>
   11b40:	str	x27, [sp, #80]
   11b44:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11b48:	add	x3, x3, #0x0
   11b4c:	mov	w2, #0x657                 	// #1623
   11b50:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11b54:	add	x1, x1, #0x0
   11b58:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11b5c:	add	x0, x0, #0x0
   11b60:	bl	0 <__assert_fail>
   11b64:	ubfiz	x1, x0, #1, #32
   11b68:	add	x0, x1, w0, uxtw
   11b6c:	lsl	x0, x0, #4
   11b70:	ldr	x1, [sp, #312]
   11b74:	ldr	d0, [x1, x0]
   11b78:	ldr	x0, [sp, #168]
   11b7c:	str	d0, [x0, x25]
   11b80:	add	x25, x25, #0x30
   11b84:	cmp	x21, x25
   11b88:	b.eq	11c08 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x5ac>  // b.none
   11b8c:	ldr	x19, [sp, #216]
   11b90:	add	x19, x19, x25
   11b94:	ldr	w26, [x19, #16]
   11b98:	cmp	w26, #0x40
   11b9c:	b.ls	11b38 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x4dc>  // b.plast
   11ba0:	add	x0, x19, #0x8
   11ba4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   11ba8:	sub	w26, w26, w0
   11bac:	cmp	w26, #0x40
   11bb0:	b.hi	11b40 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x4e4>  // b.pmore
   11bb4:	ldr	x0, [x19, #8]
   11bb8:	ldr	x0, [x0]
   11bbc:	cmp	w20, w0
   11bc0:	b.hi	11b64 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x508>  // b.pmore
   11bc4:	cmp	w22, w0
   11bc8:	b.ls	11bec <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x590>  // b.plast
   11bcc:	sub	w1, w0, w20
   11bd0:	add	x1, x1, x1, lsl #1
   11bd4:	lsl	x1, x1, #4
   11bd8:	ldr	x0, [sp, #264]
   11bdc:	ldr	d0, [x0, x1]
   11be0:	ldr	x0, [sp, #168]
   11be4:	str	d0, [x0, x25]
   11be8:	b	11b80 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x524>
   11bec:	str	x27, [sp, #80]
   11bf0:	mov	w2, #0x785                 	// #1925
   11bf4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11bf8:	add	x1, x1, #0x0
   11bfc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11c00:	add	x0, x0, #0x0
   11c04:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   11c08:	ldp	x25, x26, [sp, #64]
   11c0c:	b	11ab4 <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE+0x458>

0000000000011c10 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE>:
   11c10:	stp	x29, x30, [sp, #-192]!
   11c14:	mov	x29, sp
   11c18:	stp	x19, x20, [sp, #16]
   11c1c:	stp	x21, x22, [sp, #32]
   11c20:	mov	x20, x1
   11c24:	ldr	x21, [x0, #704]
   11c28:	sub	x21, x21, #0x80
   11c2c:	ldur	x22, [x1, #-24]
   11c30:	mov	w1, #0x1                   	// #1
   11c34:	str	w1, [sp, #160]
   11c38:	str	xzr, [sp, #152]
   11c3c:	str	xzr, [sp, #168]
   11c40:	str	xzr, [sp, #176]
   11c44:	str	xzr, [sp, #184]
   11c48:	str	wzr, [sp, #144]
   11c4c:	str	wzr, [sp, #148]
   11c50:	add	x8, sp, #0x60
   11c54:	mov	x2, x21
   11c58:	mov	x1, x22
   11c5c:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   11c60:	ldr	x1, [x20, #56]
   11c64:	ldr	w2, [x20, #64]
   11c68:	cbz	w2, 11cd0 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xc0>
   11c6c:	sub	w4, w2, #0x1
   11c70:	add	x4, x4, #0x1
   11c74:	add	x4, x1, x4, lsl #2
   11c78:	mov	x3, x1
   11c7c:	add	x19, sp, #0x60
   11c80:	ldr	w0, [x3], #4
   11c84:	add	x0, x0, x0, lsl #1
   11c88:	ldr	x19, [x19, #24]
   11c8c:	add	x19, x19, x0, lsl #4
   11c90:	cmp	x3, x4
   11c94:	b.ne	11c80 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x70>  // b.any
   11c98:	mov	w2, w2
   11c9c:	ldr	x0, [x22]
   11ca0:	bl	0 <_ZN4llvm16ExtractValueInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIjEE>
   11ca4:	ldrb	w0, [x0, #8]
   11ca8:	cmp	w0, #0xb
   11cac:	b.eq	11d28 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x118>  // b.none
   11cb0:	b.hi	11cd8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xc8>  // b.pmore
   11cb4:	cmp	w0, #0x2
   11cb8:	b.eq	11d68 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x158>  // b.none
   11cbc:	cmp	w0, #0x3
   11cc0:	b.ne	11cf0 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xe0>  // b.any
   11cc4:	ldr	d0, [x19]
   11cc8:	str	d0, [sp, #144]
   11ccc:	b	11d70 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x160>
   11cd0:	add	x19, sp, #0x60
   11cd4:	b	11c98 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x88>
   11cd8:	cmp	w0, #0xf
   11cdc:	b.eq	11e78 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x268>  // b.none
   11ce0:	cmp	w0, #0xf
   11ce4:	b.ls	11d08 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xf8>  // b.plast
   11ce8:	cmp	w0, #0x10
   11cec:	b.eq	11d18 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x108>  // b.none
   11cf0:	mov	w2, #0x79e                 	// #1950
   11cf4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11cf8:	add	x1, x1, #0x0
   11cfc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11d00:	add	x0, x0, #0x0
   11d04:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   11d08:	sub	w0, w0, #0xd
   11d0c:	and	w0, w0, #0xff
   11d10:	cmp	w0, #0x1
   11d14:	b.hi	11cf0 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0xe0>  // b.pmore
   11d18:	add	x1, x19, #0x18
   11d1c:	add	x0, sp, #0xa8
   11d20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11d24:	b	11d70 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x160>
   11d28:	add	x1, x19, #0x8
   11d2c:	ldr	w0, [sp, #160]
   11d30:	cmp	w0, #0x40
   11d34:	b.hi	11d44 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x134>  // b.pmore
   11d38:	ldr	w0, [x19, #16]
   11d3c:	cmp	w0, #0x40
   11d40:	b.ls	11d50 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x140>  // b.plast
   11d44:	add	x0, sp, #0x98
   11d48:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   11d4c:	b	11d70 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x160>
   11d50:	ldr	x1, [x19, #8]
   11d54:	str	x1, [sp, #152]
   11d58:	str	w0, [sp, #160]
   11d5c:	add	x0, sp, #0x98
   11d60:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11d64:	b	11d70 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x160>
   11d68:	ldr	s0, [x19]
   11d6c:	str	s0, [sp, #144]
   11d70:	add	x19, sp, #0x30
   11d74:	add	x1, sp, #0x90
   11d78:	mov	x0, x19
   11d7c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11d80:	mov	x2, x21
   11d84:	mov	x1, x19
   11d88:	mov	x0, x20
   11d8c:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   11d90:	ldr	x19, [sp, #72]
   11d94:	ldr	x20, [sp, #80]
   11d98:	cmp	x19, x20
   11d9c:	b.eq	11db4 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1a4>  // b.none
   11da0:	mov	x0, x19
   11da4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11da8:	add	x19, x19, #0x30
   11dac:	cmp	x20, x19
   11db0:	b.ne	11da0 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x190>  // b.any
   11db4:	ldr	x0, [sp, #72]
   11db8:	cbz	x0, 11dc0 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1b0>
   11dbc:	bl	0 <_ZdlPv>
   11dc0:	ldr	w0, [sp, #64]
   11dc4:	cmp	w0, #0x40
   11dc8:	b.ls	11dd8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1c8>  // b.plast
   11dcc:	ldr	x0, [sp, #56]
   11dd0:	cbz	x0, 11dd8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1c8>
   11dd4:	bl	0 <_ZdaPv>
   11dd8:	ldr	x19, [sp, #120]
   11ddc:	ldr	x20, [sp, #128]
   11de0:	cmp	x19, x20
   11de4:	b.eq	11dfc <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1ec>  // b.none
   11de8:	mov	x0, x19
   11dec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11df0:	add	x19, x19, #0x30
   11df4:	cmp	x20, x19
   11df8:	b.ne	11de8 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1d8>  // b.any
   11dfc:	ldr	x0, [sp, #120]
   11e00:	cbz	x0, 11e08 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x1f8>
   11e04:	bl	0 <_ZdlPv>
   11e08:	ldr	w0, [sp, #112]
   11e0c:	cmp	w0, #0x40
   11e10:	b.ls	11e20 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x210>  // b.plast
   11e14:	ldr	x0, [sp, #104]
   11e18:	cbz	x0, 11e20 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x210>
   11e1c:	bl	0 <_ZdaPv>
   11e20:	ldr	x19, [sp, #168]
   11e24:	ldr	x20, [sp, #176]
   11e28:	cmp	x19, x20
   11e2c:	b.eq	11e44 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x234>  // b.none
   11e30:	mov	x0, x19
   11e34:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11e38:	add	x19, x19, #0x30
   11e3c:	cmp	x20, x19
   11e40:	b.ne	11e30 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x220>  // b.any
   11e44:	ldr	x0, [sp, #168]
   11e48:	cbz	x0, 11e50 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x240>
   11e4c:	bl	0 <_ZdlPv>
   11e50:	ldr	w0, [sp, #160]
   11e54:	cmp	w0, #0x40
   11e58:	b.ls	11e68 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x258>  // b.plast
   11e5c:	ldr	x0, [sp, #152]
   11e60:	cbz	x0, 11e68 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x258>
   11e64:	bl	0 <_ZdaPv>
   11e68:	ldp	x19, x20, [sp, #16]
   11e6c:	ldp	x21, x22, [sp, #32]
   11e70:	ldp	x29, x30, [sp], #192
   11e74:	ret
   11e78:	ldr	x0, [x19]
   11e7c:	str	x0, [sp, #144]
   11e80:	b	11d70 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE+0x160>

0000000000011e84 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE>:
   11e84:	stp	x29, x30, [sp, #-256]!
   11e88:	mov	x29, sp
   11e8c:	stp	x19, x20, [sp, #16]
   11e90:	stp	x21, x22, [sp, #32]
   11e94:	str	x23, [sp, #48]
   11e98:	mov	x19, x0
   11e9c:	mov	x20, x1
   11ea0:	ldr	x21, [x0, #704]
   11ea4:	sub	x21, x21, #0x80
   11ea8:	ldur	x22, [x1, #-48]
   11eac:	add	x23, sp, #0xd0
   11eb0:	mov	x8, x23
   11eb4:	mov	x2, x21
   11eb8:	mov	x1, x22
   11ebc:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   11ec0:	add	x8, sp, #0xa0
   11ec4:	mov	x2, x21
   11ec8:	ldur	x1, [x20, #-24]
   11ecc:	mov	x0, x19
   11ed0:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   11ed4:	mov	x1, x23
   11ed8:	add	x0, sp, #0x70
   11edc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11ee0:	ldr	x1, [x20, #56]
   11ee4:	ldr	w2, [x20, #64]
   11ee8:	cbz	w2, 11f50 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xcc>
   11eec:	sub	w4, w2, #0x1
   11ef0:	add	x4, x4, #0x1
   11ef4:	add	x4, x1, x4, lsl #2
   11ef8:	mov	x3, x1
   11efc:	add	x19, sp, #0x70
   11f00:	ldr	w0, [x3], #4
   11f04:	add	x0, x0, x0, lsl #1
   11f08:	ldr	x19, [x19, #24]
   11f0c:	add	x19, x19, x0, lsl #4
   11f10:	cmp	x3, x4
   11f14:	b.ne	11f00 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x7c>  // b.any
   11f18:	mov	w2, w2
   11f1c:	ldr	x0, [x22]
   11f20:	bl	0 <_ZN4llvm16ExtractValueInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIjEE>
   11f24:	ldrb	w0, [x0, #8]
   11f28:	cmp	w0, #0xb
   11f2c:	b.eq	11fa8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x124>  // b.none
   11f30:	b.hi	11f58 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xd4>  // b.pmore
   11f34:	cmp	w0, #0x2
   11f38:	b.eq	12020 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x19c>  // b.none
   11f3c:	cmp	w0, #0x3
   11f40:	b.ne	11f70 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xec>  // b.any
   11f44:	ldr	d0, [sp, #160]
   11f48:	str	d0, [x19]
   11f4c:	b	12028 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1a4>
   11f50:	add	x19, sp, #0x70
   11f54:	b	11f18 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x94>
   11f58:	cmp	w0, #0xf
   11f5c:	b.eq	1217c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2f8>  // b.none
   11f60:	cmp	w0, #0xf
   11f64:	b.ls	11f88 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x104>  // b.plast
   11f68:	cmp	w0, #0x10
   11f6c:	b.eq	11f98 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x114>  // b.none
   11f70:	mov	w2, #0x7cd                 	// #1997
   11f74:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11f78:	add	x1, x1, #0x0
   11f7c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11f80:	add	x0, x0, #0x0
   11f84:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   11f88:	sub	w0, w0, #0xd
   11f8c:	and	w0, w0, #0xff
   11f90:	cmp	w0, #0x1
   11f94:	b.hi	11f70 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0xec>  // b.pmore
   11f98:	add	x1, sp, #0xb8
   11f9c:	add	x0, x19, #0x18
   11fa0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   11fa4:	b	12028 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1a4>
   11fa8:	add	x0, x19, #0x8
   11fac:	ldr	w1, [x0, #8]
   11fb0:	cmp	w1, #0x40
   11fb4:	b.hi	11fc4 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x140>  // b.pmore
   11fb8:	ldr	w1, [sp, #176]
   11fbc:	cmp	w1, #0x40
   11fc0:	b.ls	11fd0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x14c>  // b.plast
   11fc4:	add	x1, sp, #0xa8
   11fc8:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
   11fcc:	b	12028 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1a4>
   11fd0:	ldr	x1, [sp, #168]
   11fd4:	str	x1, [x19, #8]
   11fd8:	ldr	w0, [sp, #176]
   11fdc:	str	w0, [x19, #16]
   11fe0:	neg	w3, w0
   11fe4:	mov	x2, #0xffffffffffffffff    	// #-1
   11fe8:	lsr	x2, x2, x3
   11fec:	cmp	w0, #0x40
   11ff0:	b.hi	12000 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x17c>  // b.pmore
   11ff4:	and	x1, x1, x2
   11ff8:	str	x1, [x19, #8]
   11ffc:	b	12028 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1a4>
   12000:	mov	w0, w0
   12004:	add	x0, x0, #0x3f
   12008:	lsr	x0, x0, #6
   1200c:	sub	w0, w0, #0x1
   12010:	ldr	x3, [x1, x0, lsl #3]
   12014:	and	x2, x3, x2
   12018:	str	x2, [x1, x0, lsl #3]
   1201c:	b	12028 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1a4>
   12020:	ldr	s0, [sp, #160]
   12024:	str	s0, [x19]
   12028:	add	x19, sp, #0x40
   1202c:	add	x1, sp, #0x70
   12030:	mov	x0, x19
   12034:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12038:	mov	x2, x21
   1203c:	mov	x1, x19
   12040:	mov	x0, x20
   12044:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   12048:	ldr	x19, [sp, #88]
   1204c:	ldr	x20, [sp, #96]
   12050:	cmp	x19, x20
   12054:	b.eq	1206c <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1e8>  // b.none
   12058:	mov	x0, x19
   1205c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12060:	add	x19, x19, #0x30
   12064:	cmp	x20, x19
   12068:	b.ne	12058 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1d4>  // b.any
   1206c:	ldr	x0, [sp, #88]
   12070:	cbz	x0, 12078 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1f4>
   12074:	bl	0 <_ZdlPv>
   12078:	ldr	w0, [sp, #80]
   1207c:	cmp	w0, #0x40
   12080:	b.ls	12090 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x20c>  // b.plast
   12084:	ldr	x0, [sp, #72]
   12088:	cbz	x0, 12090 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x20c>
   1208c:	bl	0 <_ZdaPv>
   12090:	ldr	x19, [sp, #136]
   12094:	ldr	x20, [sp, #144]
   12098:	cmp	x19, x20
   1209c:	b.eq	120b4 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x230>  // b.none
   120a0:	mov	x0, x19
   120a4:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   120a8:	add	x19, x19, #0x30
   120ac:	cmp	x20, x19
   120b0:	b.ne	120a0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x21c>  // b.any
   120b4:	ldr	x0, [sp, #136]
   120b8:	cbz	x0, 120c0 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x23c>
   120bc:	bl	0 <_ZdlPv>
   120c0:	ldr	w0, [sp, #128]
   120c4:	cmp	w0, #0x40
   120c8:	b.ls	120d8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x254>  // b.plast
   120cc:	ldr	x0, [sp, #120]
   120d0:	cbz	x0, 120d8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x254>
   120d4:	bl	0 <_ZdaPv>
   120d8:	ldr	x19, [sp, #184]
   120dc:	ldr	x20, [sp, #192]
   120e0:	cmp	x19, x20
   120e4:	b.eq	120fc <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x278>  // b.none
   120e8:	mov	x0, x19
   120ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   120f0:	add	x19, x19, #0x30
   120f4:	cmp	x20, x19
   120f8:	b.ne	120e8 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x264>  // b.any
   120fc:	ldr	x0, [sp, #184]
   12100:	cbz	x0, 12108 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x284>
   12104:	bl	0 <_ZdlPv>
   12108:	ldr	w0, [sp, #176]
   1210c:	cmp	w0, #0x40
   12110:	b.ls	12120 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x29c>  // b.plast
   12114:	ldr	x0, [sp, #168]
   12118:	cbz	x0, 12120 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x29c>
   1211c:	bl	0 <_ZdaPv>
   12120:	ldr	x19, [sp, #232]
   12124:	ldr	x20, [sp, #240]
   12128:	cmp	x19, x20
   1212c:	b.eq	12144 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2c0>  // b.none
   12130:	mov	x0, x19
   12134:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12138:	add	x19, x19, #0x30
   1213c:	cmp	x20, x19
   12140:	b.ne	12130 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2ac>  // b.any
   12144:	ldr	x0, [sp, #232]
   12148:	cbz	x0, 12150 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2cc>
   1214c:	bl	0 <_ZdlPv>
   12150:	ldr	w0, [sp, #224]
   12154:	cmp	w0, #0x40
   12158:	b.ls	12168 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2e4>  // b.plast
   1215c:	ldr	x0, [sp, #216]
   12160:	cbz	x0, 12168 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x2e4>
   12164:	bl	0 <_ZdaPv>
   12168:	ldp	x19, x20, [sp, #16]
   1216c:	ldp	x21, x22, [sp, #32]
   12170:	ldr	x23, [sp, #48]
   12174:	ldp	x29, x30, [sp], #256
   12178:	ret
   1217c:	ldr	x0, [sp, #160]
   12180:	str	x0, [x19]
   12184:	b	12028 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE+0x1a4>

0000000000012188 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
   12188:	stp	x29, x30, [sp, #-240]!
   1218c:	mov	x29, sp
   12190:	stp	x19, x20, [sp, #16]
   12194:	stp	x21, x22, [sp, #32]
   12198:	stp	x25, x26, [sp, #64]
   1219c:	mov	x20, x0
   121a0:	mov	x19, x1
   121a4:	str	x2, [sp, #136]
   121a8:	str	x3, [sp, #128]
   121ac:	mov	x26, x2
   121b0:	str	x3, [sp, #112]
   121b4:	ldr	x21, [x0, #704]
   121b8:	ldr	x0, [x0, #696]
   121bc:	cmp	x21, x0
   121c0:	b.eq	121d0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x48>  // b.none
   121c4:	ldur	x0, [x21, #-104]
   121c8:	tst	x0, #0xfffffffffffffff8
   121cc:	b.ne	122e8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x160>  // b.any
   121d0:	stp	x27, x28, [sp, #80]
   121d4:	ldr	x1, [x20, #704]
   121d8:	ldr	x0, [x20, #712]
   121dc:	cmp	x1, x0
   121e0:	b.eq	124b8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x330>  // b.none
   121e4:	str	xzr, [x1]
   121e8:	str	xzr, [x1, #8]
   121ec:	str	xzr, [x1, #16]
   121f0:	str	xzr, [x1, #24]
   121f4:	add	x0, x1, #0x28
   121f8:	str	wzr, [x1, #40]
   121fc:	str	xzr, [x1, #48]
   12200:	str	x0, [x0, #16]
   12204:	str	x0, [x0, #24]
   12208:	str	xzr, [x0, #32]
   1220c:	str	xzr, [x1, #80]
   12210:	str	xzr, [x1, #88]
   12214:	str	xzr, [x1, #96]
   12218:	str	xzr, [x1, #104]
   1221c:	str	xzr, [x1, #112]
   12220:	str	xzr, [x1, #120]
   12224:	ldr	x0, [x20, #704]
   12228:	add	x0, x0, #0x80
   1222c:	str	x0, [x20, #704]
   12230:	ldr	x28, [x20, #704]
   12234:	stur	x19, [x28, #-128]
   12238:	mov	x0, x19
   1223c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
   12240:	and	w0, w0, #0xff
   12244:	cbnz	w0, 124c4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x33c>
   12248:	stp	x23, x24, [sp, #48]
   1224c:	ldr	x1, [x19, #80]
   12250:	ldr	x0, [x1]
   12254:	ubfx	x0, x0, #2, #1
   12258:	mov	w24, w0
   1225c:	cbnz	x0, 12578 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3f0>
   12260:	sub	x0, x1, #0x18
   12264:	stur	x0, [x28, #-120]
   12268:	ldr	x0, [x1, #24]
   1226c:	stur	x0, [x28, #-112]
   12270:	ldr	x0, [x19, #96]
   12274:	ldr	x1, [sp, #128]
   12278:	cmp	x1, x0
   1227c:	b.eq	122a4 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x11c>  // b.none
   12280:	b.ls	125d8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x450>  // b.plast
   12284:	ldr	x0, [x19, #24]
   12288:	cbz	x0, 12598 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x410>
   1228c:	ldrb	w1, [x0, #8]
   12290:	cmp	w1, #0xc
   12294:	b.ne	125b8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x430>  // b.any
   12298:	ldr	w0, [x0, #8]
   1229c:	tst	x0, #0xffffff00
   122a0:	b.eq	125d8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x450>  // b.none
   122a4:	ldrh	w0, [x19, #18]
   122a8:	tbnz	w0, #0, 125f8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x470>
   122ac:	ldr	x22, [x19, #88]
   122b0:	ldr	x27, [x19, #96]
   122b4:	add	x27, x27, x27, lsl #2
   122b8:	ldr	x0, [x19, #88]
   122bc:	add	x27, x0, x27, lsl #3
   122c0:	cmp	x27, x22
   122c4:	b.eq	127bc <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x634>  // b.none
   122c8:	mov	x0, #0x0                   	// #0
   122cc:	ldr	x1, [sp, #128]
   122d0:	cbz	x1, 12618 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x490>
   122d4:	add	x1, sp, #0xc0
   122d8:	str	x1, [sp, #104]
   122dc:	add	x1, sp, #0xc8
   122e0:	str	x1, [sp, #120]
   122e4:	b	12674 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4ec>
   122e8:	sub	x0, x21, #0x68
   122ec:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   122f0:	ldur	x2, [x21, #-104]
   122f4:	and	x1, x2, #0xfffffffffffffff8
   122f8:	ubfx	x2, x2, #1, #2
   122fc:	cmp	w2, #0x1
   12300:	b.eq	12378 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1f0>  // b.none
   12304:	cmp	w2, #0x2
   12308:	b.eq	123f0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x268>  // b.none
   1230c:	cbz	x1, 12468 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2e0>
   12310:	ldrb	w2, [x1, #16]
   12314:	cmp	w2, #0x1d
   12318:	b.ne	12490 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x308>  // b.any
   1231c:	ldr	w2, [x1, #20]
   12320:	and	x3, x2, #0xfffffff
   12324:	ubfiz	x2, x2, #1, #28
   12328:	add	x2, x2, x3
   1232c:	sub	x1, x1, x2, lsl #3
   12330:	sub	x0, x0, x1
   12334:	asr	x0, x0, #3
   12338:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1233c:	movk	x1, #0xaaab
   12340:	mul	w0, w0, w1
   12344:	ldr	x1, [sp, #128]
   12348:	cmp	x0, x1
   1234c:	b.eq	121d0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x48>  // b.none
   12350:	stp	x23, x24, [sp, #48]
   12354:	stp	x27, x28, [sp, #80]
   12358:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1235c:	add	x3, x3, #0x0
   12360:	mov	w2, #0x84c                 	// #2124
   12364:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12368:	add	x1, x1, #0x0
   1236c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12370:	add	x0, x0, #0x0
   12374:	bl	0 <__assert_fail>
   12378:	cbz	x1, 123a0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x218>
   1237c:	ldrb	w2, [x1, #16]
   12380:	cmp	w2, #0x50
   12384:	b.ne	123c8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x240>  // b.any
   12388:	ldr	w2, [x1, #20]
   1238c:	and	x3, x2, #0xfffffff
   12390:	ubfiz	x2, x2, #1, #28
   12394:	add	x2, x2, x3
   12398:	sub	x1, x1, x2, lsl #3
   1239c:	b	12330 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1a8>
   123a0:	stp	x23, x24, [sp, #48]
   123a4:	stp	x27, x28, [sp, #80]
   123a8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   123ac:	add	x3, x3, #0x0
   123b0:	mov	w2, #0x69                  	// #105
   123b4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   123b8:	add	x1, x1, #0x0
   123bc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   123c0:	add	x0, x0, #0x0
   123c4:	bl	0 <__assert_fail>
   123c8:	stp	x23, x24, [sp, #48]
   123cc:	stp	x27, x28, [sp, #80]
   123d0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   123d4:	add	x3, x3, #0x0
   123d8:	mov	w2, #0x108                 	// #264
   123dc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   123e0:	add	x1, x1, #0x0
   123e4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   123e8:	add	x0, x0, #0x0
   123ec:	bl	0 <__assert_fail>
   123f0:	cbz	x1, 12418 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x290>
   123f4:	ldrb	w2, [x1, #16]
   123f8:	cmp	w2, #0x23
   123fc:	b.ne	12440 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2b8>  // b.any
   12400:	ldr	w2, [x1, #20]
   12404:	and	x3, x2, #0xfffffff
   12408:	ubfiz	x2, x2, #1, #28
   1240c:	add	x2, x2, x3
   12410:	sub	x1, x1, x2, lsl #3
   12414:	b	12330 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1a8>
   12418:	stp	x23, x24, [sp, #48]
   1241c:	stp	x27, x28, [sp, #80]
   12420:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12424:	add	x3, x3, #0x0
   12428:	mov	w2, #0x69                  	// #105
   1242c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12430:	add	x1, x1, #0x0
   12434:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12438:	add	x0, x0, #0x0
   1243c:	bl	0 <__assert_fail>
   12440:	stp	x23, x24, [sp, #48]
   12444:	stp	x27, x28, [sp, #80]
   12448:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1244c:	add	x3, x3, #0x0
   12450:	mov	w2, #0x108                 	// #264
   12454:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12458:	add	x1, x1, #0x0
   1245c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12460:	add	x0, x0, #0x0
   12464:	bl	0 <__assert_fail>
   12468:	stp	x23, x24, [sp, #48]
   1246c:	stp	x27, x28, [sp, #80]
   12470:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12474:	add	x3, x3, #0x0
   12478:	mov	w2, #0x69                  	// #105
   1247c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12480:	add	x1, x1, #0x0
   12484:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12488:	add	x0, x0, #0x0
   1248c:	bl	0 <__assert_fail>
   12490:	stp	x23, x24, [sp, #48]
   12494:	stp	x27, x28, [sp, #80]
   12498:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1249c:	add	x3, x3, #0x0
   124a0:	mov	w2, #0x108                 	// #264
   124a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   124a8:	add	x1, x1, #0x0
   124ac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   124b0:	add	x0, x0, #0x0
   124b4:	bl	0 <__assert_fail>
   124b8:	add	x0, x20, #0x2b8
   124bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   124c0:	b	12230 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa8>
   124c4:	add	x8, sp, #0x90
   124c8:	ldr	x2, [sp, #136]
   124cc:	ldr	x3, [sp, #128]
   124d0:	mov	x1, x19
   124d4:	mov	x0, x20
   124d8:	bl	0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
   124dc:	ldr	x0, [x19, #24]
   124e0:	cbz	x0, 12530 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3a8>
   124e4:	ldrb	w1, [x0, #8]
   124e8:	cmp	w1, #0xc
   124ec:	b.ne	12554 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3cc>  // b.any
   124f0:	ldr	x0, [x0, #16]
   124f4:	ldr	x22, [x0]
   124f8:	add	x21, sp, #0x90
   124fc:	add	x19, sp, #0xc0
   12500:	mov	x1, x21
   12504:	mov	x0, x19
   12508:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1250c:	mov	x2, x19
   12510:	mov	x1, x22
   12514:	mov	x0, x20
   12518:	bl	e7a8 <_ZN4llvm11Interpreter30popStackAndReturnValueToCallerEPNS_4TypeENS_12GenericValueE>
   1251c:	mov	x0, x19
   12520:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12524:	mov	x0, x21
   12528:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1252c:	b	127e8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x660>
   12530:	stp	x23, x24, [sp, #48]
   12534:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12538:	add	x3, x3, #0x0
   1253c:	mov	w2, #0x69                  	// #105
   12540:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12544:	add	x1, x1, #0x0
   12548:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1254c:	add	x0, x0, #0x0
   12550:	bl	0 <__assert_fail>
   12554:	stp	x23, x24, [sp, #48]
   12558:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1255c:	add	x3, x3, #0x0
   12560:	mov	w2, #0x108                 	// #264
   12564:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12568:	add	x1, x1, #0x0
   1256c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12570:	add	x0, x0, #0x0
   12574:	bl	0 <__assert_fail>
   12578:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1257c:	add	x3, x3, #0x0
   12580:	mov	w2, #0x8b                  	// #139
   12584:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12588:	add	x1, x1, #0x0
   1258c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12590:	add	x0, x0, #0x0
   12594:	bl	0 <__assert_fail>
   12598:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1259c:	add	x3, x3, #0x0
   125a0:	mov	w2, #0x69                  	// #105
   125a4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   125a8:	add	x1, x1, #0x0
   125ac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   125b0:	add	x0, x0, #0x0
   125b4:	bl	0 <__assert_fail>
   125b8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   125bc:	add	x3, x3, #0x0
   125c0:	mov	w2, #0x108                 	// #264
   125c4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   125c8:	add	x1, x1, #0x0
   125cc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   125d0:	add	x0, x0, #0x0
   125d4:	bl	0 <__assert_fail>
   125d8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   125dc:	add	x3, x3, #0x0
   125e0:	mov	w2, #0x861                 	// #2145
   125e4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   125e8:	add	x1, x1, #0x0
   125ec:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   125f0:	add	x0, x0, #0x0
   125f4:	bl	0 <__assert_fail>
   125f8:	mov	x0, x19
   125fc:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
   12600:	ldr	x22, [x19, #88]
   12604:	ldrh	w0, [x19, #18]
   12608:	tbz	w0, #0, 122b0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x128>
   1260c:	mov	x0, x19
   12610:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
   12614:	b	122b0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x128>
   12618:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1261c:	add	x3, x3, #0x0
   12620:	mov	w2, #0xfa                  	// #250
   12624:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12628:	add	x1, x1, #0x0
   1262c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12630:	add	x0, x0, #0x0
   12634:	bl	0 <__assert_fail>
   12638:	add	x1, x19, #0x8
   1263c:	ldr	x0, [sp, #120]
   12640:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   12644:	b	126a0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x518>
   12648:	bl	0 <_ZSt17__throw_bad_allocv>
   1264c:	mov	x20, #0x0                   	// #0
   12650:	b	126e8 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x560>
   12654:	add	x22, x22, #0x28
   12658:	add	w24, w24, #0x1
   1265c:	cmp	x22, x27
   12660:	b.eq	127bc <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x634>  // b.none
   12664:	mov	w0, w24
   12668:	ldr	x1, [sp, #112]
   1266c:	cmp	x1, w24, uxtw
   12670:	b.ls	12618 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x490>  // b.plast
   12674:	add	x0, x0, x0, lsl #1
   12678:	lsl	x0, x0, #4
   1267c:	add	x19, x26, x0
   12680:	ldr	x0, [x26, x0]
   12684:	str	x0, [sp, #192]
   12688:	ldr	w0, [x19, #16]
   1268c:	str	w0, [sp, #208]
   12690:	cmp	w0, #0x40
   12694:	b.hi	12638 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4b0>  // b.pmore
   12698:	ldr	x0, [x19, #8]
   1269c:	str	x0, [sp, #200]
   126a0:	ldr	x21, [x19, #32]
   126a4:	ldr	x0, [x19, #24]
   126a8:	sub	x21, x21, x0
   126ac:	asr	x0, x21, #4
   126b0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   126b4:	movk	x1, #0xaaab
   126b8:	mul	x0, x0, x1
   126bc:	str	xzr, [sp, #216]
   126c0:	str	xzr, [sp, #224]
   126c4:	str	xzr, [sp, #232]
   126c8:	cbz	x0, 1264c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4c4>
   126cc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   126d0:	movk	x1, #0x2aa, lsl #48
   126d4:	cmp	x0, x1
   126d8:	b.hi	12648 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4c0>  // b.pmore
   126dc:	mov	x0, x21
   126e0:	bl	0 <_Znwm>
   126e4:	mov	x20, x0
   126e8:	str	x20, [sp, #216]
   126ec:	str	x20, [sp, #224]
   126f0:	add	x21, x20, x21
   126f4:	str	x21, [sp, #232]
   126f8:	ldr	x25, [x19, #24]
   126fc:	ldr	x19, [x19, #32]
   12700:	cmp	x25, x19
   12704:	b.eq	1275c <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5d4>  // b.none
   12708:	mov	x21, x25
   1270c:	mov	x23, x20
   12710:	mov	x1, x21
   12714:	mov	x0, x23
   12718:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1271c:	add	x23, x23, #0x30
   12720:	add	x21, x21, #0x30
   12724:	cmp	x19, x21
   12728:	b.ne	12710 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x588>  // b.any
   1272c:	sub	x0, x19, #0x30
   12730:	sub	x0, x0, x25
   12734:	lsr	x0, x0, #4
   12738:	mov	x1, #0xaaab                	// #43691
   1273c:	movk	x1, #0xaaaa, lsl #16
   12740:	movk	x1, #0xaaaa, lsl #32
   12744:	movk	x1, #0xaaa, lsl #48
   12748:	mul	x0, x0, x1
   1274c:	and	x0, x0, #0xfffffffffffffff
   12750:	add	x0, x0, #0x1
   12754:	add	x0, x0, x0, lsl #1
   12758:	add	x20, x20, x0, lsl #4
   1275c:	str	x20, [sp, #224]
   12760:	sub	x2, x28, #0x80
   12764:	ldr	x1, [sp, #104]
   12768:	mov	x0, x22
   1276c:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   12770:	ldr	x19, [sp, #216]
   12774:	ldr	x20, [sp, #224]
   12778:	cmp	x19, x20
   1277c:	b.eq	12794 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x60c>  // b.none
   12780:	mov	x0, x19
   12784:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12788:	add	x19, x19, #0x30
   1278c:	cmp	x20, x19
   12790:	b.ne	12780 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5f8>  // b.any
   12794:	ldr	x0, [sp, #216]
   12798:	cbz	x0, 127a0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x618>
   1279c:	bl	0 <_ZdlPv>
   127a0:	ldr	w0, [sp, #208]
   127a4:	cmp	w0, #0x40
   127a8:	b.ls	12654 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4cc>  // b.plast
   127ac:	ldr	x0, [sp, #200]
   127b0:	cbz	x0, 12654 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4cc>
   127b4:	bl	0 <_ZdaPv>
   127b8:	b	12654 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4cc>
   127bc:	ldr	x0, [sp, #128]
   127c0:	add	x2, x0, x0, lsl #1
   127c4:	ubfiz	x1, x24, #1, #32
   127c8:	add	x1, x1, w24, uxtw
   127cc:	mov	w3, #0x0                   	// #0
   127d0:	ldr	x0, [sp, #136]
   127d4:	add	x2, x0, x2, lsl #4
   127d8:	add	x1, x0, x1, lsl #4
   127dc:	sub	x0, x28, #0x30
   127e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   127e4:	ldp	x23, x24, [sp, #48]
   127e8:	ldp	x27, x28, [sp, #80]
   127ec:	ldp	x19, x20, [sp, #16]
   127f0:	ldp	x21, x22, [sp, #32]
   127f4:	ldp	x25, x26, [sp, #64]
   127f8:	ldp	x29, x30, [sp], #240
   127fc:	ret

0000000000012800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>:
   12800:	stp	x29, x30, [sp, #-224]!
   12804:	mov	x29, sp
   12808:	stp	x19, x20, [sp, #16]
   1280c:	stp	x21, x22, [sp, #32]
   12810:	stp	x23, x24, [sp, #48]
   12814:	stp	x25, x26, [sp, #64]
   12818:	str	x27, [sp, #80]
   1281c:	ldr	x27, [x0, #704]
   12820:	ands	x21, x1, #0xfffffffffffffff8
   12824:	b.eq	12944 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x144>  // b.none
   12828:	mov	x23, x0
   1282c:	mov	x19, x1
   12830:	sub	x25, x27, #0x80
   12834:	ldrb	w0, [x21, #16]
   12838:	cmp	w0, #0x50
   1283c:	ccmp	w0, #0x1d, #0x4, ne  // ne = any
   12840:	mov	w1, #0x23                  	// #35
   12844:	ccmp	w0, w1, #0x4, ne  // ne = any
   12848:	b.ne	12964 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x164>  // b.any
   1284c:	ldur	x20, [x21, #-24]
   12850:	cbz	x20, 12984 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x184>
   12854:	ldrb	w0, [x20, #16]
   12858:	cbnz	w0, 1286c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6c>
   1285c:	mov	x0, x20
   12860:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
   12864:	and	w0, w0, #0xff
   12868:	cbnz	w0, 129a4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1a4>
   1286c:	stur	x19, [x27, #-104]
   12870:	str	xzr, [sp, #200]
   12874:	str	xzr, [sp, #208]
   12878:	str	xzr, [sp, #216]
   1287c:	sub	x19, x27, #0x68
   12880:	mov	x0, x19
   12884:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12888:	ldur	x2, [x27, #-104]
   1288c:	and	x1, x2, #0xfffffffffffffff8
   12890:	ubfx	x2, x2, #1, #2
   12894:	cmp	w2, #0x1
   12898:	b.eq	12ba8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3a8>  // b.none
   1289c:	cmp	w2, #0x2
   128a0:	b.eq	12c10 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x410>  // b.none
   128a4:	cbz	x1, 12c78 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x478>
   128a8:	ldrb	w2, [x1, #16]
   128ac:	cmp	w2, #0x1d
   128b0:	b.ne	12c98 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x498>  // b.any
   128b4:	ldr	w2, [x1, #20]
   128b8:	and	x3, x2, #0xfffffff
   128bc:	ubfiz	x2, x2, #1, #28
   128c0:	add	x2, x2, x3
   128c4:	sub	x1, x1, x2, lsl #3
   128c8:	sub	x0, x0, x1
   128cc:	asr	x0, x0, #3
   128d0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   128d4:	movk	x1, #0xaaab
   128d8:	mul	w1, w0, w1
   128dc:	add	x0, sp, #0xc8
   128e0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   128e4:	ldur	x0, [x27, #-104]
   128e8:	and	x20, x0, #0xfffffffffffffff8
   128ec:	ubfx	x0, x0, #1, #2
   128f0:	cmp	w0, #0x1
   128f4:	b.eq	12cb8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x4b8>  // b.none
   128f8:	cmp	w0, #0x2
   128fc:	b.eq	12d20 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x520>  // b.none
   12900:	cbz	x20, 12d88 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x588>
   12904:	ldrb	w0, [x20, #16]
   12908:	cmp	w0, #0x1d
   1290c:	b.ne	12da8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5a8>  // b.any
   12910:	ldr	w0, [x20, #20]
   12914:	and	x1, x0, #0xfffffff
   12918:	ubfiz	x0, x0, #1, #28
   1291c:	add	x0, x0, x1
   12920:	sub	x20, x20, x0, lsl #3
   12924:	mov	x0, x19
   12928:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1292c:	mov	x24, x0
   12930:	cmp	x0, x20
   12934:	b.eq	12e40 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x640>  // b.none
   12938:	add	x22, sp, #0x98
   1293c:	add	x26, sp, #0xc8
   12940:	b	12dd4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5d4>
   12944:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12948:	add	x3, x3, #0x0
   1294c:	mov	w2, #0x69                  	// #105
   12950:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12954:	add	x1, x1, #0x0
   12958:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1295c:	add	x0, x0, #0x0
   12960:	bl	0 <__assert_fail>
   12964:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12968:	add	x3, x3, #0x0
   1296c:	mov	w2, #0x108                 	// #264
   12970:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12974:	add	x1, x1, #0x0
   12978:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1297c:	add	x0, x0, #0x0
   12980:	bl	0 <__assert_fail>
   12984:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12988:	add	x3, x3, #0x0
   1298c:	mov	w2, #0x69                  	// #105
   12990:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12994:	add	x1, x1, #0x0
   12998:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1299c:	add	x0, x0, #0x0
   129a0:	bl	0 <__assert_fail>
   129a4:	ldr	w0, [x20, #36]
   129a8:	cmp	w0, #0x106
   129ac:	b.eq	12ec8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6c8>  // b.none
   129b0:	b.hi	12a28 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x228>  // b.pmore
   129b4:	cbz	w0, 1286c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6c>
   129b8:	cmp	w0, #0x105
   129bc:	b.ne	12b44 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x344>  // b.any
   129c0:	ubfx	x19, x19, #1, #2
   129c4:	cmp	w19, #0x1
   129c8:	b.eq	12a9c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x29c>  // b.none
   129cc:	cmp	w19, #0x2
   129d0:	b.eq	12ae0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2e0>  // b.none
   129d4:	ldrb	w0, [x21, #16]
   129d8:	cmp	w0, #0x1d
   129dc:	b.ne	12b24 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x324>  // b.any
   129e0:	ldr	w0, [x21, #20]
   129e4:	and	x1, x0, #0xfffffff
   129e8:	ubfiz	x0, x0, #1, #28
   129ec:	add	x0, x0, x1
   129f0:	sub	x0, x21, x0, lsl #3
   129f4:	add	x19, sp, #0x98
   129f8:	mov	x8, x19
   129fc:	mov	x2, x25
   12a00:	ldr	x1, [x0]
   12a04:	mov	x0, x23
   12a08:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   12a0c:	mov	x2, x25
   12a10:	mov	x1, x19
   12a14:	mov	x0, x21
   12a18:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   12a1c:	mov	x0, x19
   12a20:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12a24:	b	12ec8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6c8>
   12a28:	cmp	w0, #0x107
   12a2c:	b.ne	12b44 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x344>  // b.any
   12a30:	mov	w0, #0x1                   	// #1
   12a34:	str	w0, [sp, #120]
   12a38:	str	xzr, [sp, #112]
   12a3c:	str	xzr, [sp, #128]
   12a40:	str	xzr, [sp, #136]
   12a44:	str	xzr, [sp, #144]
   12a48:	str	wzr, [sp, #108]
   12a4c:	ldr	x0, [x23, #704]
   12a50:	ldr	x1, [x23, #696]
   12a54:	sub	x0, x0, x1
   12a58:	asr	x0, x0, #7
   12a5c:	sub	w0, w0, #0x1
   12a60:	str	w0, [sp, #104]
   12a64:	add	x20, sp, #0x68
   12a68:	add	x19, sp, #0x98
   12a6c:	mov	x1, x20
   12a70:	mov	x0, x19
   12a74:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12a78:	mov	x2, x25
   12a7c:	mov	x1, x19
   12a80:	mov	x0, x21
   12a84:	bl	a834 <_ZL8SetValuePN4llvm5ValueENS_12GenericValueERNS_16ExecutionContextE>
   12a88:	mov	x0, x19
   12a8c:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12a90:	mov	x0, x20
   12a94:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12a98:	b	12ec8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6c8>
   12a9c:	ldrb	w0, [x21, #16]
   12aa0:	cmp	w0, #0x50
   12aa4:	b.ne	12ac0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x2c0>  // b.any
   12aa8:	ldr	w0, [x21, #20]
   12aac:	and	x1, x0, #0xfffffff
   12ab0:	ubfiz	x0, x0, #1, #28
   12ab4:	add	x0, x0, x1
   12ab8:	sub	x0, x21, x0, lsl #3
   12abc:	b	129f4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1f4>
   12ac0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ac4:	add	x3, x3, #0x0
   12ac8:	mov	w2, #0x108                 	// #264
   12acc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ad0:	add	x1, x1, #0x0
   12ad4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ad8:	add	x0, x0, #0x0
   12adc:	bl	0 <__assert_fail>
   12ae0:	ldrb	w0, [x21, #16]
   12ae4:	cmp	w0, #0x23
   12ae8:	b.ne	12b04 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x304>  // b.any
   12aec:	ldr	w0, [x21, #20]
   12af0:	and	x1, x0, #0xfffffff
   12af4:	ubfiz	x0, x0, #1, #28
   12af8:	add	x0, x0, x1
   12afc:	sub	x0, x21, x0, lsl #3
   12b00:	b	129f4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x1f4>
   12b04:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12b08:	add	x3, x3, #0x0
   12b0c:	mov	w2, #0x108                 	// #264
   12b10:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12b14:	add	x1, x1, #0x0
   12b18:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12b1c:	add	x0, x0, #0x0
   12b20:	bl	0 <__assert_fail>
   12b24:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12b28:	add	x3, x3, #0x0
   12b2c:	mov	w2, #0x108                 	// #264
   12b30:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12b34:	add	x1, x1, #0x0
   12b38:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12b3c:	add	x0, x0, #0x0
   12b40:	bl	0 <__assert_fail>
   12b44:	ldr	x19, [x21, #40]
   12b48:	add	x0, x21, #0x18
   12b4c:	ldr	x1, [x19, #48]
   12b50:	cmp	x1, x0
   12b54:	b.eq	12f7c <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x77c>  // b.none
   12b58:	ldr	x19, [x21, #24]
   12b5c:	and	x19, x19, #0xfffffffffffffff8
   12b60:	ldr	x0, [x23, #688]
   12b64:	ldrb	w1, [x21, #16]
   12b68:	cmp	w1, #0x50
   12b6c:	b.ne	12b88 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x388>  // b.any
   12b70:	mov	x1, x21
   12b74:	bl	0 <_ZN4llvm17IntrinsicLowering18LowerIntrinsicCallEPNS_8CallInstE>
   12b78:	stur	x19, [x27, #-112]
   12b7c:	ldr	x0, [x19, #8]
   12b80:	stur	x0, [x27, #-112]
   12b84:	b	12ec8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6c8>
   12b88:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12b8c:	add	x3, x3, #0x0
   12b90:	mov	w2, #0x108                 	// #264
   12b94:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12b98:	add	x1, x1, #0x0
   12b9c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ba0:	add	x0, x0, #0x0
   12ba4:	bl	0 <__assert_fail>
   12ba8:	cbz	x1, 12bd0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3d0>
   12bac:	ldrb	w2, [x1, #16]
   12bb0:	cmp	w2, #0x50
   12bb4:	b.ne	12bf0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x3f0>  // b.any
   12bb8:	ldr	w2, [x1, #20]
   12bbc:	and	x3, x2, #0xfffffff
   12bc0:	ubfiz	x2, x2, #1, #28
   12bc4:	add	x2, x2, x3
   12bc8:	sub	x1, x1, x2, lsl #3
   12bcc:	b	128c8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xc8>
   12bd0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12bd4:	add	x3, x3, #0x0
   12bd8:	mov	w2, #0x69                  	// #105
   12bdc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12be0:	add	x1, x1, #0x0
   12be4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12be8:	add	x0, x0, #0x0
   12bec:	bl	0 <__assert_fail>
   12bf0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12bf4:	add	x3, x3, #0x0
   12bf8:	mov	w2, #0x108                 	// #264
   12bfc:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c00:	add	x1, x1, #0x0
   12c04:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c08:	add	x0, x0, #0x0
   12c0c:	bl	0 <__assert_fail>
   12c10:	cbz	x1, 12c38 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x438>
   12c14:	ldrb	w2, [x1, #16]
   12c18:	cmp	w2, #0x23
   12c1c:	b.ne	12c58 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x458>  // b.any
   12c20:	ldr	w2, [x1, #20]
   12c24:	and	x3, x2, #0xfffffff
   12c28:	ubfiz	x2, x2, #1, #28
   12c2c:	add	x2, x2, x3
   12c30:	sub	x1, x1, x2, lsl #3
   12c34:	b	128c8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0xc8>
   12c38:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c3c:	add	x3, x3, #0x0
   12c40:	mov	w2, #0x69                  	// #105
   12c44:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c48:	add	x1, x1, #0x0
   12c4c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c50:	add	x0, x0, #0x0
   12c54:	bl	0 <__assert_fail>
   12c58:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c5c:	add	x3, x3, #0x0
   12c60:	mov	w2, #0x108                 	// #264
   12c64:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c68:	add	x1, x1, #0x0
   12c6c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c70:	add	x0, x0, #0x0
   12c74:	bl	0 <__assert_fail>
   12c78:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c7c:	add	x3, x3, #0x0
   12c80:	mov	w2, #0x69                  	// #105
   12c84:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c88:	add	x1, x1, #0x0
   12c8c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c90:	add	x0, x0, #0x0
   12c94:	bl	0 <__assert_fail>
   12c98:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12c9c:	add	x3, x3, #0x0
   12ca0:	mov	w2, #0x108                 	// #264
   12ca4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ca8:	add	x1, x1, #0x0
   12cac:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12cb0:	add	x0, x0, #0x0
   12cb4:	bl	0 <__assert_fail>
   12cb8:	cbz	x20, 12ce0 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x4e0>
   12cbc:	ldrb	w0, [x20, #16]
   12cc0:	cmp	w0, #0x50
   12cc4:	b.ne	12d00 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x500>  // b.any
   12cc8:	ldr	w0, [x20, #20]
   12ccc:	and	x1, x0, #0xfffffff
   12cd0:	ubfiz	x0, x0, #1, #28
   12cd4:	add	x0, x0, x1
   12cd8:	sub	x20, x20, x0, lsl #3
   12cdc:	b	12924 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x124>
   12ce0:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ce4:	add	x3, x3, #0x0
   12ce8:	mov	w2, #0x69                  	// #105
   12cec:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12cf0:	add	x1, x1, #0x0
   12cf4:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12cf8:	add	x0, x0, #0x0
   12cfc:	bl	0 <__assert_fail>
   12d00:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d04:	add	x3, x3, #0x0
   12d08:	mov	w2, #0x108                 	// #264
   12d0c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d10:	add	x1, x1, #0x0
   12d14:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d18:	add	x0, x0, #0x0
   12d1c:	bl	0 <__assert_fail>
   12d20:	cbz	x20, 12d48 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x548>
   12d24:	ldrb	w0, [x20, #16]
   12d28:	cmp	w0, #0x23
   12d2c:	b.ne	12d68 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x568>  // b.any
   12d30:	ldr	w0, [x20, #20]
   12d34:	and	x1, x0, #0xfffffff
   12d38:	ubfiz	x0, x0, #1, #28
   12d3c:	add	x0, x0, x1
   12d40:	sub	x20, x20, x0, lsl #3
   12d44:	b	12924 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x124>
   12d48:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d4c:	add	x3, x3, #0x0
   12d50:	mov	w2, #0x69                  	// #105
   12d54:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d58:	add	x1, x1, #0x0
   12d5c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d60:	add	x0, x0, #0x0
   12d64:	bl	0 <__assert_fail>
   12d68:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d6c:	add	x3, x3, #0x0
   12d70:	mov	w2, #0x108                 	// #264
   12d74:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d78:	add	x1, x1, #0x0
   12d7c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d80:	add	x0, x0, #0x0
   12d84:	bl	0 <__assert_fail>
   12d88:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d8c:	add	x3, x3, #0x0
   12d90:	mov	w2, #0x69                  	// #105
   12d94:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12d98:	add	x1, x1, #0x0
   12d9c:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12da0:	add	x0, x0, #0x0
   12da4:	bl	0 <__assert_fail>
   12da8:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12dac:	add	x3, x3, #0x0
   12db0:	mov	w2, #0x108                 	// #264
   12db4:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12db8:	add	x1, x1, #0x0
   12dbc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12dc0:	add	x0, x0, #0x0
   12dc4:	bl	0 <__assert_fail>
   12dc8:	add	x20, x20, #0x18
   12dcc:	cmp	x24, x20
   12dd0:	b.eq	12e40 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x640>  // b.none
   12dd4:	mov	x8, x22
   12dd8:	mov	x2, x25
   12ddc:	ldr	x1, [x20]
   12de0:	mov	x0, x23
   12de4:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   12de8:	mov	x1, x22
   12dec:	mov	x0, x26
   12df0:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12df4:	ldr	x19, [sp, #176]
   12df8:	ldr	x21, [sp, #184]
   12dfc:	cmp	x19, x21
   12e00:	b.eq	12e18 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x618>  // b.none
   12e04:	mov	x0, x19
   12e08:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12e0c:	add	x19, x19, #0x30
   12e10:	cmp	x21, x19
   12e14:	b.ne	12e04 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x604>  // b.any
   12e18:	ldr	x0, [sp, #176]
   12e1c:	cbz	x0, 12e24 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x624>
   12e20:	bl	0 <_ZdlPv>
   12e24:	ldr	w0, [sp, #168]
   12e28:	cmp	w0, #0x40
   12e2c:	b.ls	12dc8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5c8>  // b.plast
   12e30:	ldr	x0, [sp, #160]
   12e34:	cbz	x0, 12dc8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5c8>
   12e38:	bl	0 <_ZdaPv>
   12e3c:	b	12dc8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x5c8>
   12e40:	ldur	x0, [x27, #-104]
   12e44:	ands	x0, x0, #0xfffffffffffffff8
   12e48:	b.eq	12ee4 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6e4>  // b.none
   12e4c:	ldrb	w1, [x0, #16]
   12e50:	cmp	w1, #0x50
   12e54:	ccmp	w1, #0x1d, #0x4, ne  // ne = any
   12e58:	mov	w2, #0x23                  	// #35
   12e5c:	ccmp	w1, w2, #0x4, ne  // ne = any
   12e60:	b.ne	12f04 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x704>  // b.any
   12e64:	add	x19, sp, #0x98
   12e68:	mov	x8, x19
   12e6c:	mov	x2, x25
   12e70:	ldur	x1, [x0, #-24]
   12e74:	mov	x0, x23
   12e78:	bl	5f4c <_ZN4llvm11Interpreter15getOperandValueEPNS_5ValueERNS_16ExecutionContextE>
   12e7c:	ldr	x2, [sp, #200]
   12e80:	ldr	x0, [sp, #208]
   12e84:	sub	x0, x0, x2
   12e88:	asr	x0, x0, #4
   12e8c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   12e90:	movk	x3, #0xaaab
   12e94:	mul	x3, x0, x3
   12e98:	ldr	x1, [sp, #152]
   12e9c:	mov	x0, x23
   12ea0:	bl	12188 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
   12ea4:	mov	x0, x19
   12ea8:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12eac:	ldr	x19, [sp, #200]
   12eb0:	ldr	x22, [sp, #208]
   12eb4:	cmp	x19, x22
   12eb8:	b.ne	12f30 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x730>  // b.any
   12ebc:	ldr	x0, [sp, #200]
   12ec0:	cbz	x0, 12ec8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6c8>
   12ec4:	bl	0 <_ZdlPv>
   12ec8:	ldp	x19, x20, [sp, #16]
   12ecc:	ldp	x21, x22, [sp, #32]
   12ed0:	ldp	x23, x24, [sp, #48]
   12ed4:	ldp	x25, x26, [sp, #64]
   12ed8:	ldr	x27, [sp, #80]
   12edc:	ldp	x29, x30, [sp], #224
   12ee0:	ret
   12ee4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ee8:	add	x3, x3, #0x0
   12eec:	mov	w2, #0x69                  	// #105
   12ef0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ef4:	add	x1, x1, #0x0
   12ef8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12efc:	add	x0, x0, #0x0
   12f00:	bl	0 <__assert_fail>
   12f04:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12f08:	add	x3, x3, #0x0
   12f0c:	mov	w2, #0x108                 	// #264
   12f10:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12f14:	add	x1, x1, #0x0
   12f18:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12f1c:	add	x0, x0, #0x0
   12f20:	bl	0 <__assert_fail>
   12f24:	add	x19, x19, #0x30
   12f28:	cmp	x22, x19
   12f2c:	b.eq	12ebc <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6bc>  // b.none
   12f30:	ldr	x20, [x19, #24]
   12f34:	ldr	x21, [x19, #32]
   12f38:	cmp	x20, x21
   12f3c:	b.eq	12f54 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x754>  // b.none
   12f40:	mov	x0, x20
   12f44:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12f48:	add	x20, x20, #0x30
   12f4c:	cmp	x21, x20
   12f50:	b.ne	12f40 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x740>  // b.any
   12f54:	ldr	x0, [x19, #24]
   12f58:	cbz	x0, 12f60 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x760>
   12f5c:	bl	0 <_ZdlPv>
   12f60:	ldr	w0, [x19, #16]
   12f64:	cmp	w0, #0x40
   12f68:	b.ls	12f24 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x724>  // b.plast
   12f6c:	ldr	x0, [x19, #8]
   12f70:	cbz	x0, 12f24 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x724>
   12f74:	bl	0 <_ZdaPv>
   12f78:	b	12f24 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x724>
   12f7c:	ldr	x0, [x23, #688]
   12f80:	ldrb	w1, [x21, #16]
   12f84:	cmp	w1, #0x50
   12f88:	b.ne	12b88 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x388>  // b.any
   12f8c:	mov	x1, x21
   12f90:	bl	0 <_ZN4llvm17IntrinsicLowering18LowerIntrinsicCallEPNS_8CallInstE>
   12f94:	ldr	x0, [x19, #48]
   12f98:	stur	x0, [x27, #-112]
   12f9c:	b	12ec8 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE+0x6c8>

0000000000012fa0 <_ZN4llvm11Interpreter3runEv>:
   12fa0:	stp	x29, x30, [sp, #-80]!
   12fa4:	mov	x29, sp
   12fa8:	stp	x19, x20, [sp, #16]
   12fac:	mov	x20, x0
   12fb0:	ldr	x1, [x0, #704]
   12fb4:	ldr	x0, [x0, #696]
   12fb8:	cmp	x0, x1
   12fbc:	b.eq	13140 <_ZN4llvm11Interpreter3runEv+0x1a0>  // b.none
   12fc0:	stp	x21, x22, [sp, #32]
   12fc4:	stp	x23, x24, [sp, #48]
   12fc8:	adrp	x22, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12fcc:	add	x22, x22, #0x0
   12fd0:	add	x21, x22, #0xe0
   12fd4:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
   12fd8:	ldr	x23, [x23]
   12fdc:	b	13098 <_ZN4llvm11Interpreter3runEv+0xf8>
   12fe0:	str	x25, [sp, #64]
   12fe4:	adrp	x3, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12fe8:	add	x3, x3, #0x0
   12fec:	mov	w2, #0x8b                  	// #139
   12ff0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ff4:	add	x1, x1, #0x0
   12ff8:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   12ffc:	add	x0, x0, #0x0
   13000:	bl	0 <__assert_fail>
   13004:	add	x0, x22, #0xc8
   13008:	bl	0 <_ZN4llvm17TrackingStatistic17RegisterStatisticEv>
   1300c:	b	130d4 <_ZN4llvm11Interpreter3runEv+0x134>
   13010:	mov	x2, #0x14                  	// #20
   13014:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   13018:	add	x1, x1, #0x0
   1301c:	mov	x0, x25
   13020:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   13024:	mov	x25, x0
   13028:	mov	w2, #0x0                   	// #0
   1302c:	mov	x1, x25
   13030:	sub	x0, x19, #0x18
   13034:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
   13038:	ldr	x0, [x25, #24]
   1303c:	ldr	x1, [x25, #16]
   13040:	cmp	x1, x0
   13044:	b.eq	13064 <_ZN4llvm11Interpreter3runEv+0xc4>  // b.none
   13048:	mov	w1, #0xa                   	// #10
   1304c:	strb	w1, [x0]
   13050:	ldr	x0, [x25, #24]
   13054:	add	x0, x0, #0x1
   13058:	str	x0, [x25, #24]
   1305c:	ldr	x25, [sp, #64]
   13060:	b	1307c <_ZN4llvm11Interpreter3runEv+0xdc>
   13064:	mov	x2, #0x1                   	// #1
   13068:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1306c:	add	x1, x1, #0x0
   13070:	mov	x0, x25
   13074:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   13078:	ldr	x25, [sp, #64]
   1307c:	mov	x1, x24
   13080:	mov	x0, x20
   13084:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   13088:	ldr	x1, [x20, #704]
   1308c:	ldr	x0, [x20, #696]
   13090:	cmp	x1, x0
   13094:	b.eq	13138 <_ZN4llvm11Interpreter3runEv+0x198>  // b.none
   13098:	ldur	x19, [x1, #-112]
   1309c:	ldr	x0, [x19, #8]
   130a0:	stur	x0, [x1, #-112]
   130a4:	ldr	x0, [x19]
   130a8:	tst	w0, #0x4
   130ac:	b.ne	12fe0 <_ZN4llvm11Interpreter3runEv+0x40>  // b.any
   130b0:	sub	x24, x19, #0x18
   130b4:	ldxr	w0, [x21]
   130b8:	add	w0, w0, #0x1
   130bc:	stxr	w1, w0, [x21]
   130c0:	cbnz	w1, 130b4 <_ZN4llvm11Interpreter3runEv+0x114>
   130c4:	add	x0, x22, #0xe4
   130c8:	ldarb	w1, [x0]
   130cc:	and	w1, w1, #0xff
   130d0:	cbz	w1, 13004 <_ZN4llvm11Interpreter3runEv+0x64>
   130d4:	ldrb	w0, [x23]
   130d8:	cbz	w0, 1307c <_ZN4llvm11Interpreter3runEv+0xdc>
   130dc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   130e0:	add	x0, x0, #0x0
   130e4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   130e8:	and	w0, w0, #0xff
   130ec:	cbz	w0, 1307c <_ZN4llvm11Interpreter3runEv+0xdc>
   130f0:	str	x25, [sp, #64]
   130f4:	bl	0 <_ZN4llvm4dbgsEv>
   130f8:	mov	x25, x0
   130fc:	ldr	x1, [x0, #24]
   13100:	ldr	x0, [x0, #16]
   13104:	sub	x0, x0, x1
   13108:	cmp	x0, #0x13
   1310c:	b.ls	13010 <_ZN4llvm11Interpreter3runEv+0x70>  // b.plast
   13110:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   13114:	add	x0, x0, #0x0
   13118:	ldp	x2, x3, [x0]
   1311c:	stp	x2, x3, [x1]
   13120:	ldr	w0, [x0, #16]
   13124:	str	w0, [x1, #16]
   13128:	ldr	x0, [x25, #24]
   1312c:	add	x0, x0, #0x14
   13130:	str	x0, [x25, #24]
   13134:	b	13028 <_ZN4llvm11Interpreter3runEv+0x88>
   13138:	ldp	x21, x22, [sp, #32]
   1313c:	ldp	x23, x24, [sp, #48]
   13140:	ldp	x19, x20, [sp, #16]
   13144:	ldp	x29, x30, [sp], #80
   13148:	ret

000000000001314c <_GLOBAL__sub_I_Execution.cpp>:
   1314c:	stp	x29, x30, [sp, #-64]!
   13150:	mov	x29, sp
   13154:	str	x19, [sp, #16]
   13158:	adrp	x19, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1315c:	add	x19, x19, #0x0
   13160:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   13164:	add	x1, x1, #0x0
   13168:	str	x1, [x19, #200]
   1316c:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   13170:	add	x1, x1, #0x0
   13174:	str	x1, [x19, #208]
   13178:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   1317c:	add	x1, x1, #0x0
   13180:	str	x1, [x19, #216]
   13184:	str	wzr, [x19, #224]
   13188:	strb	wzr, [x19, #228]
   1318c:	mov	w0, #0x1                   	// #1
   13190:	str	w0, [sp, #60]
   13194:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   13198:	add	x0, x0, #0x0
   1319c:	str	x0, [sp, #40]
   131a0:	mov	x0, #0x38                  	// #56
   131a4:	str	x0, [sp, #48]
   131a8:	add	x3, sp, #0x28
   131ac:	add	x2, sp, #0x3c
   131b0:	adrp	x1, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   131b4:	add	x1, x1, #0x0
   131b8:	mov	x0, x19
   131bc:	bl	0 <_ZL14getShiftAmountmN4llvm5APIntE>
   131c0:	adrp	x2, 0 <__dso_handle>
   131c4:	add	x2, x2, #0x0
   131c8:	mov	x1, x19
   131cc:	adrp	x0, 0 <_ZL14getShiftAmountmN4llvm5APIntE>
   131d0:	add	x0, x0, #0x0
   131d4:	bl	0 <__cxa_atexit>
   131d8:	ldr	x19, [sp, #16]
   131dc:	ldp	x29, x30, [sp], #64
   131e0:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.eq	10 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x10>  // b.none
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	str	x1, [x0]
  14:	b	8 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x8>

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	mov	x2, x0
   4:	ldrb	w0, [x1, #9]
   8:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   c:	ldrb	w0, [x2, #9]
  10:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  14:	ldrb	w2, [x2, #8]
  18:	ldrb	w0, [x1, #8]
  1c:	cmp	w2, w0
  20:	cset	w0, ne  // ne = any
  24:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x1, x0
  14:	adrp	x0, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldr	x0, [x19, #104]
  3c:	ldr	x1, [x19, #96]
  40:	cmp	x0, x1
  44:	b.eq	4c <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x4c>  // b.none
  48:	bl	0 <free>
  4c:	ldr	x0, [x19, #64]
  50:	add	x19, x19, #0x50
  54:	cmp	x0, x19
  58:	b.eq	60 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZN4llvm5APInt15clearUnusedBitsEv:

0000000000000000 <_ZN4llvm5APInt15clearUnusedBitsEv>:
   0:	ldr	w1, [x0, #8]
   4:	neg	w3, w1
   8:	mov	x2, #0xffffffffffffffff    	// #-1
   c:	lsr	x2, x2, x3
  10:	cmp	w1, #0x40
  14:	b.hi	28 <_ZN4llvm5APInt15clearUnusedBitsEv+0x28>  // b.pmore
  18:	ldr	x1, [x0]
  1c:	and	x2, x1, x2
  20:	str	x2, [x0]
  24:	ret
  28:	mov	w1, w1
  2c:	add	x1, x1, #0x3f
  30:	lsr	x1, x1, #6
  34:	sub	w1, w1, #0x1
  38:	ldr	x4, [x0]
  3c:	ldr	x3, [x4, x1, lsl #3]
  40:	and	x2, x3, x2
  44:	str	x2, [x4, x1, lsl #3]
  48:	b	24 <_ZN4llvm5APInt15clearUnusedBitsEv+0x24>

Disassembly of section .text._ZN4llvm5APIntaSERKS0_:

0000000000000000 <_ZN4llvm5APIntaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w0, [x0, #8]
  14:	cmp	w0, #0x40
  18:	b.hi	28 <_ZN4llvm5APIntaSERKS0_+0x28>  // b.pmore
  1c:	ldr	w0, [x1, #8]
  20:	cmp	w0, #0x40
  24:	b.ls	40 <_ZN4llvm5APIntaSERKS0_+0x40>  // b.plast
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ldr	x2, [x1]
  44:	str	x2, [x19]
  48:	ldr	w0, [x1, #8]
  4c:	str	w0, [x19, #8]
  50:	neg	w3, w0
  54:	mov	x1, #0xffffffffffffffff    	// #-1
  58:	lsr	x1, x1, x3
  5c:	cmp	w0, #0x40
  60:	b.hi	70 <_ZN4llvm5APIntaSERKS0_+0x70>  // b.pmore
  64:	and	x2, x2, x1
  68:	str	x2, [x19]
  6c:	b	30 <_ZN4llvm5APIntaSERKS0_+0x30>
  70:	mov	w0, w0
  74:	add	x0, x0, #0x3f
  78:	lsr	x0, x0, #6
  7c:	sub	w0, w0, #0x1
  80:	ldr	x3, [x2, x0, lsl #3]
  84:	and	x1, x3, x1
  88:	str	x1, [x2, x0, lsl #3]
  8c:	b	30 <_ZN4llvm5APIntaSERKS0_+0x30>

Disassembly of section .text._ZN4llvm5APIntaSEOS0_:

0000000000000000 <_ZN4llvm5APIntaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cmp	x0, x1
  10:	b.eq	58 <_ZN4llvm5APIntaSEOS0_+0x58>  // b.none
  14:	mov	x19, x0
  18:	mov	x20, x1
  1c:	ldr	w0, [x0, #8]
  20:	cmp	w0, #0x40
  24:	b.ls	34 <_ZN4llvm5APIntaSEOS0_+0x34>  // b.plast
  28:	ldr	x0, [x19]
  2c:	cbz	x0, 34 <_ZN4llvm5APIntaSEOS0_+0x34>
  30:	bl	0 <_ZdaPv>
  34:	ldr	x0, [x20]
  38:	str	x0, [x19]
  3c:	ldr	w0, [x20, #8]
  40:	str	w0, [x19, #8]
  44:	str	wzr, [x20, #8]
  48:	mov	x0, x19
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	adrp	x3, 0 <_ZN4llvm5APIntaSEOS0_>
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x302                 	// #770
  64:	adrp	x1, 0 <_ZN4llvm5APIntaSEOS0_>
  68:	add	x1, x1, #0x0
  6c:	adrp	x0, 0 <_ZN4llvm5APIntaSEOS0_>
  70:	add	x0, x0, #0x0
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12GenericValueD2Ev:

0000000000000000 <_ZN4llvm12GenericValueD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x0
  14:	ldr	x20, [x0, #24]
  18:	ldr	x21, [x0, #32]
  1c:	cmp	x20, x21
  20:	b.eq	38 <_ZN4llvm12GenericValueD1Ev+0x38>  // b.none
  24:	mov	x0, x20
  28:	bl	0 <_ZN4llvm12GenericValueD1Ev>
  2c:	add	x20, x20, #0x30
  30:	cmp	x21, x20
  34:	b.ne	24 <_ZN4llvm12GenericValueD1Ev+0x24>  // b.any
  38:	ldr	x0, [x19, #24]
  3c:	cbz	x0, 44 <_ZN4llvm12GenericValueD1Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	w0, [x19, #16]
  48:	cmp	w0, #0x40
  4c:	b.ls	5c <_ZN4llvm12GenericValueD1Ev+0x5c>  // b.plast
  50:	ldr	x0, [x19, #8]
  54:	cbz	x0, 5c <_ZN4llvm12GenericValueD1Ev+0x5c>
  58:	bl	0 <_ZdaPv>
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldr	x21, [sp, #32]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZNK4llvm12ConstantExpr10getOperandEj:

0000000000000000 <_ZNK4llvm12ConstantExpr10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	ubfx	x2, x2, #0, #28
  10:	cmp	w1, w2
  14:	b.cs	44 <_ZNK4llvm12ConstantExpr10getOperandEj+0x44>  // b.hs, b.nlast
  18:	mov	w1, w1
  1c:	mov	w2, w2
  20:	sub	x1, x1, x2
  24:	add	x1, x1, x1, lsl #1
  28:	ldr	x0, [x0, x1, lsl #3]
  2c:	cbz	x0, 3c <_ZNK4llvm12ConstantExpr10getOperandEj+0x3c>
  30:	ldrb	w1, [x0, #16]
  34:	cmp	w1, #0x10
  38:	b.hi	64 <_ZNK4llvm12ConstantExpr10getOperandEj+0x64>  // b.pmore
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x4fa                 	// #1274
  50:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  54:	add	x1, x1, #0x0
  58:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  5c:	add	x0, x0, #0x0
  60:	bl	0 <__assert_fail>
  64:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x134                 	// #308
  70:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  74:	add	x1, x1, #0x0
  78:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  7c:	add	x0, x0, #0x0
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11Interpreter16visitInstructionERNS_11InstructionE:

0000000000000000 <_ZN4llvm11Interpreter16visitInstructionERNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	bl	0 <_ZN4llvm4errsEv>
  14:	mov	x19, x0
  18:	mov	w2, #0x0                   	// #0
  1c:	mov	x1, x0
  20:	mov	x0, x20
  24:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
  28:	adrp	x1, 0 <_ZN4llvm11Interpreter16visitInstructionERNS_11InstructionE>
  2c:	add	x1, x1, #0x0
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm11Interpreter16visitInstructionERNS_11InstructionE>
  38:	mov	w2, #0xac                  	// #172
  3c:	adrp	x1, 0 <_ZN4llvm11Interpreter16visitInstructionERNS_11InstructionE>
  40:	add	x1, x1, #0x0
  44:	adrp	x0, 0 <_ZN4llvm11Interpreter16visitInstructionERNS_11InstructionE>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm12GenericValueC2ERKS0_:

0000000000000000 <_ZN4llvm12GenericValueC1ERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x20, x0
  18:	mov	x19, x1
  1c:	ldr	x2, [x1], #8
  20:	str	x2, [x0], #8
  24:	ldr	w1, [x1, #8]
  28:	str	w1, [x0, #8]
  2c:	cmp	w1, #0x40
  30:	b.hi	110 <_ZN4llvm12GenericValueC1ERKS0_+0x110>  // b.pmore
  34:	ldr	x0, [x19, #8]
  38:	str	x0, [x20, #8]
  3c:	ldr	x22, [x19, #32]
  40:	ldr	x0, [x19, #24]
  44:	sub	x22, x22, x0
  48:	asr	x1, x22, #4
  4c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  50:	movk	x0, #0xaaab
  54:	mul	x1, x1, x0
  58:	str	xzr, [x20, #24]
  5c:	str	xzr, [x20, #32]
  60:	str	xzr, [x20, #40]
  64:	cbz	x1, 124 <_ZN4llvm12GenericValueC1ERKS0_+0x124>
  68:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  6c:	movk	x0, #0x2aa, lsl #48
  70:	cmp	x1, x0
  74:	b.hi	120 <_ZN4llvm12GenericValueC1ERKS0_+0x120>  // b.pmore
  78:	mov	x0, x22
  7c:	bl	0 <_Znwm>
  80:	mov	x21, x0
  84:	str	x21, [x20, #24]
  88:	str	x21, [x20, #32]
  8c:	add	x22, x21, x22
  90:	str	x22, [x20, #40]
  94:	ldr	x24, [x19, #24]
  98:	ldr	x19, [x19, #32]
  9c:	cmp	x24, x19
  a0:	b.eq	f8 <_ZN4llvm12GenericValueC1ERKS0_+0xf8>  // b.none
  a4:	mov	x22, x24
  a8:	mov	x23, x21
  ac:	mov	x1, x22
  b0:	mov	x0, x23
  b4:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  b8:	add	x23, x23, #0x30
  bc:	add	x22, x22, #0x30
  c0:	cmp	x19, x22
  c4:	b.ne	ac <_ZN4llvm12GenericValueC1ERKS0_+0xac>  // b.any
  c8:	sub	x1, x19, #0x30
  cc:	sub	x1, x1, x24
  d0:	lsr	x1, x1, #4
  d4:	mov	x19, #0xaaab                	// #43691
  d8:	movk	x19, #0xaaaa, lsl #16
  dc:	movk	x19, #0xaaaa, lsl #32
  e0:	movk	x19, #0xaaa, lsl #48
  e4:	mul	x1, x1, x19
  e8:	and	x1, x1, #0xfffffffffffffff
  ec:	add	x1, x1, #0x1
  f0:	add	x1, x1, x1, lsl #1
  f4:	add	x21, x21, x1, lsl #4
  f8:	str	x21, [x20, #32]
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x21, x22, [sp, #32]
 104:	ldp	x23, x24, [sp, #48]
 108:	ldp	x29, x30, [sp], #64
 10c:	ret
 110:	add	x1, x19, #0x8
 114:	add	x0, x20, #0x8
 118:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 11c:	b	3c <_ZN4llvm12GenericValueC1ERKS0_+0x3c>
 120:	bl	0 <_ZSt17__throw_bad_allocv>
 124:	mov	x21, #0x0                   	// #0
 128:	b	84 <_ZN4llvm12GenericValueC1ERKS0_+0x84>

Disassembly of section .text._ZN4llvm17countLeadingZerosImEEjT_NS_12ZeroBehaviorE:

0000000000000000 <_ZN4llvm17countLeadingZerosImEEjT_NS_12ZeroBehaviorE>:
   0:	cmp	w1, #0x0
   4:	clz	x1, x0
   8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   c:	mov	w0, #0x40                  	// #64
  10:	csel	w0, w0, w1, eq  // eq = none
  14:	ret

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #8]
  14:	cmp	w20, #0x40
  18:	b.ls	40 <_ZNK4llvm5APInt12getZExtValueEv+0x40>  // b.plast
  1c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  20:	sub	w20, w20, w0
  24:	cmp	w20, #0x40
  28:	b.hi	48 <_ZNK4llvm5APInt12getZExtValueEv+0x48>  // b.pmore
  2c:	ldr	x0, [x19]
  30:	ldr	x0, [x0]
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ldr	x0, [x0]
  44:	b	34 <_ZNK4llvm5APInt12getZExtValueEv+0x34>
  48:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x657                 	// #1623
  54:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  58:	add	x1, x1, #0x0
  5c:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  60:	add	x0, x0, #0x0
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w1, [x0, #8]
  10:	cmp	w1, #0x10
  14:	b.ne	40 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	adrp	x3, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	add	x3, x3, #0x0
  28:	mov	w2, #0x69                  	// #105
  2c:	adrp	x1, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x1, x1, #0x0
  34:	adrp	x0, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <__assert_fail>
  40:	adrp	x3, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x108                 	// #264
  4c:	adrp	x1, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  50:	add	x1, x1, #0x0
  54:	adrp	x0, 0 <_ZN4llvm4castINS_10VectorTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  58:	add	x0, x0, #0x0
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w1, [x1, #8]
  18:	sub	w0, w1, #0x1
  1c:	and	w0, w0, #0xff
  20:	and	w2, w1, #0xfffffffd
  24:	and	w2, w2, #0xff
  28:	cmp	w0, #0x5
  2c:	ccmp	w1, #0xf, #0x4, hi  // hi = pmore
  30:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  34:	b.ne	84 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x84>  // b.any
  38:	ldrb	w2, [x19, #8]
  3c:	cmp	w2, #0x9
  40:	b.eq	e0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xe0>  // b.none
  44:	b.hi	100 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x100>  // b.pmore
  48:	cmp	w2, #0x4
  4c:	b.eq	260 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x260>  // b.none
  50:	b.ls	d0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xd0>  // b.plast
  54:	cmp	w2, #0x6
  58:	b.ls	254 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x254>  // b.plast
  5c:	cmp	w2, #0x7
  60:	b.ne	2b8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2b8>  // b.any
  64:	mov	w1, #0x0                   	// #0
  68:	mov	x0, x20
  6c:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  70:	lsl	w0, w0, #3
  74:	mov	x1, #0x0                   	// #0
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	sub	w0, w1, #0xd
  88:	cmp	w0, #0x1
  8c:	ccmp	w1, #0x10, #0x4, hi  // hi = pmore
  90:	b.ne	a8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xa8>  // b.any
  94:	mov	x1, #0x0                   	// #0
  98:	mov	x0, x19
  9c:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  a0:	and	w0, w0, #0xff
  a4:	cbnz	w0, 38 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x38>
  a8:	stp	x21, x22, [sp, #32]
  ac:	str	x23, [sp, #48]
  b0:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x271                 	// #625
  bc:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  c0:	add	x1, x1, #0x0
  c4:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  c8:	add	x0, x0, #0x0
  cc:	bl	0 <__assert_fail>
  d0:	cmp	w2, #0x2
  d4:	b.eq	248 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x248>  // b.none
  d8:	cmp	w2, #0x3
  dc:	b.ne	ec <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xec>  // b.any
  e0:	mov	x0, #0x40                  	// #64
  e4:	mov	x1, #0x0                   	// #0
  e8:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
  ec:	cmp	w2, #0x1
  f0:	b.ne	2b8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2b8>  // b.any
  f4:	mov	x0, #0x10                  	// #16
  f8:	mov	x1, #0x0                   	// #0
  fc:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 100:	cmp	w2, #0xe
 104:	b.eq	1b0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1b0>  // b.none
 108:	b.ls	168 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x168>  // b.plast
 10c:	cmp	w2, #0xf
 110:	b.eq	194 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x194>  // b.none
 114:	cmp	w2, #0x10
 118:	b.ne	2b8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2b8>  // b.any
 11c:	mov	x0, x19
 120:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 124:	ldr	x1, [x0, #32]
 128:	mov	x2, #0xffffffff            	// #4294967295
 12c:	cmp	x1, x2
 130:	b.hi	26c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x26c>  // b.pmore
 134:	stp	x21, x22, [sp, #32]
 138:	ldrb	w21, [x0, #40]
 13c:	and	x19, x1, #0xffffffff
 140:	ldr	x1, [x0, #24]
 144:	mov	x0, x20
 148:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 14c:	tst	w1, #0xff
 150:	b.ne	294 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x294>  // b.any
 154:	mul	x0, x19, x0
 158:	mov	x1, #0x0                   	// #0
 15c:	bfxil	x1, x21, #0, #8
 160:	ldp	x21, x22, [sp, #32]
 164:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 168:	cmp	w2, #0xb
 16c:	b.eq	238 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x238>  // b.none
 170:	cmp	w2, #0xd
 174:	b.ne	2b8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2b8>  // b.any
 178:	mov	x1, x19
 17c:	mov	x0, x20
 180:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 184:	ldr	x0, [x0]
 188:	lsl	x0, x0, #3
 18c:	mov	x1, #0x0                   	// #0
 190:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 194:	ldr	w1, [x19, #8]
 198:	lsr	w1, w1, #8
 19c:	mov	x0, x20
 1a0:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 1a4:	lsl	w0, w0, #3
 1a8:	mov	x1, #0x0                   	// #0
 1ac:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 1b0:	stp	x21, x22, [sp, #32]
 1b4:	str	x23, [sp, #48]
 1b8:	ldr	x21, [x19, #32]
 1bc:	ldr	x23, [x19, #24]
 1c0:	mov	x1, x23
 1c4:	mov	x0, x20
 1c8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1cc:	add	x19, x0, #0x7
 1d0:	lsr	x19, x19, #3
 1d4:	and	w22, w1, #0xff
 1d8:	mov	x1, x23
 1dc:	mov	x0, x20
 1e0:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 1e4:	mov	w1, w0
 1e8:	cbz	w0, 218 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x218>
 1ec:	sub	x0, x19, #0x1
 1f0:	add	x0, x0, x1
 1f4:	udiv	x0, x0, x1
 1f8:	mul	x0, x0, x1
 1fc:	mul	x0, x0, x21
 200:	lsl	x0, x0, #3
 204:	mov	x1, #0x0                   	// #0
 208:	bfxil	x1, x22, #0, #8
 20c:	ldp	x21, x22, [sp, #32]
 210:	ldr	x23, [sp, #48]
 214:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 218:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 21c:	add	x3, x3, #0x0
 220:	mov	w2, #0xc7                  	// #199
 224:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 228:	add	x1, x1, #0x0
 22c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 230:	add	x0, x0, #0x0
 234:	bl	0 <__assert_fail>
 238:	ldr	w0, [x19, #8]
 23c:	lsr	w0, w0, #8
 240:	mov	x1, #0x0                   	// #0
 244:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 248:	mov	x0, #0x20                  	// #32
 24c:	mov	x1, #0x0                   	// #0
 250:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 254:	mov	x0, #0x80                  	// #128
 258:	mov	x1, #0x0                   	// #0
 25c:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 260:	mov	x0, #0x50                  	// #80
 264:	mov	x1, #0x0                   	// #0
 268:	b	78 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x78>
 26c:	stp	x21, x22, [sp, #32]
 270:	str	x23, [sp, #48]
 274:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 278:	add	x3, x3, #0x0
 27c:	mov	w2, #0x220                 	// #544
 280:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 284:	add	x1, x1, #0x0
 288:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 28c:	add	x0, x0, #0x0
 290:	bl	0 <__assert_fail>
 294:	str	x23, [sp, #48]
 298:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 29c:	add	x3, x3, #0x0
 2a0:	mov	w2, #0x7d                  	// #125
 2a4:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 2a8:	add	x1, x1, #0x0
 2ac:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 2b0:	add	x0, x0, #0x0
 2b4:	bl	0 <__assert_fail>
 2b8:	stp	x21, x22, [sp, #32]
 2bc:	str	x23, [sp, #48]
 2c0:	mov	w2, #0x298                 	// #664
 2c4:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 2c8:	add	x1, x1, #0x0
 2cc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 2d0:	add	x0, x0, #0x0
 2d4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	str	x23, [sp, #48]
  14:	mov	x23, x0
  18:	ldr	x19, [x0]
  1c:	ldr	x22, [x0, #8]
  20:	cmp	x19, x22
  24:	b.ne	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x54>  // b.any
  28:	ldr	x0, [x23]
  2c:	cbz	x0, 34 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x34>
  30:	bl	0 <_ZdlPv>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x21, x22, [sp, #32]
  3c:	ldr	x23, [sp, #48]
  40:	ldp	x29, x30, [sp], #64
  44:	ret
  48:	add	x19, x19, #0x30
  4c:	cmp	x22, x19
  50:	b.eq	28 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x28>  // b.none
  54:	ldr	x20, [x19, #24]
  58:	ldr	x21, [x19, #32]
  5c:	cmp	x20, x21
  60:	b.eq	78 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x78>  // b.none
  64:	mov	x0, x20
  68:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  6c:	add	x20, x20, #0x30
  70:	cmp	x21, x20
  74:	b.ne	64 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x64>  // b.any
  78:	ldr	x0, [x19, #24]
  7c:	cbz	x0, 84 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x84>
  80:	bl	0 <_ZdlPv>
  84:	ldr	w1, [x19, #16]
  88:	cmp	w1, #0x40
  8c:	b.ls	48 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x48>  // b.plast
  90:	ldr	x0, [x19, #8]
  94:	cbz	x0, 48 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x48>
  98:	bl	0 <_ZdaPv>
  9c:	b	48 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x48>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC2EPS7_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	xzr, [x0]
   c:	tst	x1, #0x7
  10:	b.ne	2c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_+0x2c>  // b.any
  14:	and	x2, x1, #0xfffffffffffffff9
  18:	orr	x2, x2, #0x2
  1c:	str	x2, [x0]
  20:	cbz	x1, 4c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_+0x4c>
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  30:	add	x3, x3, #0x0
  34:	mov	w2, #0xb2                  	// #178
  38:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  3c:	add	x1, x1, #0x0
  40:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  44:	add	x0, x0, #0x0
  48:	bl	0 <__assert_fail>
  4c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x3f                  	// #63
  58:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  5c:	add	x1, x1, #0x0
  60:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_EC1EPS7_>
  64:	add	x0, x0, #0x0
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	mov	x21, x1
  18:	mov	x22, x2
  1c:	mov	x20, x3
  20:	strh	wzr, [x0, #8]
  24:	ldrb	w0, [x0, #10]
  28:	and	w0, w0, #0xffffff80
  2c:	strb	w0, [x19, #10]
  30:	ldrh	w0, [x19, #10]
  34:	and	w0, w0, #0xfffffe7f
  38:	strh	w0, [x19, #10]
  3c:	ubfx	x0, x0, #8, #32
  40:	and	w0, w0, #0x80
  44:	strb	w0, [x19, #11]
  48:	strh	wzr, [x19, #12]
  4c:	strh	wzr, [x19, #14]
  50:	str	xzr, [x19, #16]
  54:	str	xzr, [x19, #24]
  58:	str	xzr, [x19, #32]
  5c:	str	xzr, [x19, #40]
  60:	str	xzr, [x19, #48]
  64:	str	xzr, [x19, #56]
  68:	add	x0, x19, #0x50
  6c:	str	x0, [x19, #64]
  70:	mov	w1, #0x1                   	// #1
  74:	str	w1, [x19, #76]
  78:	add	x2, x19, #0x80
  7c:	str	xzr, [x19, #88]
  80:	str	x2, [x19, #96]
  84:	str	x2, [x19, #104]
  88:	str	w1, [x19, #112]
  8c:	str	wzr, [x19, #116]
  90:	str	wzr, [x19, #120]
  94:	adrp	x0, 0 <_ZN4llvm2cl15GeneralCategoryE>
  98:	ldr	x0, [x0]
  9c:	str	x0, [x19, #80]
  a0:	str	w1, [x19, #72]
  a4:	strb	wzr, [x19, #136]
  a8:	adrp	x0, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>
  ac:	ldr	x0, [x0]
  b0:	add	x0, x0, #0x10
  b4:	str	x0, [x19, #144]
  b8:	strb	w1, [x19, #153]
  bc:	strb	wzr, [x19, #152]
  c0:	adrp	x0, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  c4:	ldr	x0, [x0]
  c8:	add	x0, x0, #0x10
  cc:	str	x0, [x19]
  d0:	adrp	x0, 0 <_ZTVN4llvm2cl6parserIbEE>
  d4:	ldr	x0, [x0]
  d8:	add	x0, x0, #0x10
  dc:	str	x0, [x19, #160]
  e0:	adrp	x0, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>
  e4:	ldr	x0, [x0]
  e8:	str	x0, [x19, #192]
  ec:	adrp	x0, 0 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC1IJA27_cNS0_12OptionHiddenENS0_4descEEEEDpRKT_>
  f0:	ldr	x0, [x0]
  f4:	str	x0, [x19, #184]
  f8:	mov	x0, x21
  fc:	bl	0 <strlen>
 100:	mov	x1, x21
 104:	mov	x2, x0
 108:	mov	x0, x19
 10c:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 110:	ldrb	w0, [x19, #10]
 114:	ldr	w1, [x22]
 118:	bfi	w0, w1, #5, #2
 11c:	strb	w0, [x19, #10]
 120:	ldr	x0, [x20, #8]
 124:	ldr	x1, [x20]
 128:	str	x1, [x19, #32]
 12c:	str	x0, [x19, #40]
 130:	mov	x0, x19
 134:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x29, x30, [sp], #48
 144:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x24, x0
  10:	cmp	x1, x0
  14:	b.eq	234 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x234>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x27, x28, [sp, #80]
  24:	mov	x22, x1
  28:	ldr	x28, [x1, #8]
  2c:	ldr	x19, [x1]
  30:	sub	x27, x28, x19
  34:	asr	x23, x27, #4
  38:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  3c:	movk	x1, #0xaaab
  40:	mul	x23, x23, x1
  44:	ldr	x20, [x0]
  48:	ldr	x0, [x0, #16]
  4c:	sub	x0, x0, x20
  50:	asr	x0, x0, #4
  54:	mul	x0, x0, x1
  58:	cmp	x0, x23
  5c:	b.cc	98 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x98>  // b.lo, b.ul, b.last
  60:	ldr	x0, [x24, #8]
  64:	sub	x0, x0, x20
  68:	asr	x21, x0, #4
  6c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  70:	movk	x1, #0xaaab
  74:	mul	x21, x21, x1
  78:	cmp	x23, x21
  7c:	b.hi	3ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3ac>  // b.pmore
  80:	cmp	x27, #0x0
  84:	b.le	344 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x344>
  88:	add	x21, x20, #0x8
  8c:	add	x19, x19, #0x8
  90:	mov	x22, #0xffffffffffffffff    	// #-1
  94:	b	2e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2e0>
  98:	cbz	x23, d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xd4>
  9c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  a0:	movk	x0, #0x2aa, lsl #48
  a4:	cmp	x23, x0
  a8:	b.hi	cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xcc>  // b.pmore
  ac:	mov	x0, x27
  b0:	bl	0 <_Znwm>
  b4:	str	x0, [sp, #104]
  b8:	cmp	x19, x28
  bc:	b.eq	1f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1f0>  // b.none
  c0:	stp	x25, x26, [sp, #64]
  c4:	ldr	x21, [sp, #104]
  c8:	b	1b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1b8>
  cc:	stp	x25, x26, [sp, #64]
  d0:	bl	0 <_ZSt17__throw_bad_allocv>
  d4:	str	xzr, [sp, #104]
  d8:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>
  dc:	add	x1, x19, #0x8
  e0:	add	x0, x21, #0x8
  e4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  e8:	ldr	x23, [x20, #32]
  ec:	ldr	x0, [x20, #24]
  f0:	sub	x23, x23, x0
  f4:	asr	x0, x23, #4
  f8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  fc:	movk	x1, #0xaaab
 100:	mul	x0, x0, x1
 104:	str	xzr, [x21, #24]
 108:	str	xzr, [x21, #32]
 10c:	str	xzr, [x21, #40]
 110:	cbz	x0, 1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1e4>
 114:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 118:	movk	x1, #0x2aa, lsl #48
 11c:	cmp	x0, x1
 120:	b.hi	1e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1e0>  // b.pmore
 124:	mov	x0, x23
 128:	bl	0 <_Znwm>
 12c:	mov	x22, x0
 130:	str	x22, [x21, #24]
 134:	str	x22, [x21, #32]
 138:	add	x23, x22, x23
 13c:	str	x23, [x21, #40]
 140:	ldr	x26, [x20, #24]
 144:	ldr	x20, [x20, #32]
 148:	cmp	x26, x20
 14c:	b.eq	1a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1a4>  // b.none
 150:	mov	x23, x26
 154:	mov	x25, x22
 158:	mov	x1, x23
 15c:	mov	x0, x25
 160:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 164:	add	x25, x25, #0x30
 168:	add	x23, x23, #0x30
 16c:	cmp	x20, x23
 170:	b.ne	158 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x158>  // b.any
 174:	sub	x0, x20, #0x30
 178:	sub	x0, x0, x26
 17c:	lsr	x0, x0, #4
 180:	mov	x1, #0xaaab                	// #43691
 184:	movk	x1, #0xaaaa, lsl #16
 188:	movk	x1, #0xaaaa, lsl #32
 18c:	movk	x1, #0xaaa, lsl #48
 190:	mul	x0, x0, x1
 194:	and	x0, x0, #0xfffffffffffffff
 198:	add	x0, x0, #0x1
 19c:	add	x0, x0, x0, lsl #1
 1a0:	add	x22, x22, x0, lsl #4
 1a4:	str	x22, [x21, #32]
 1a8:	add	x21, x21, #0x30
 1ac:	add	x19, x19, #0x30
 1b0:	cmp	x28, x19
 1b4:	b.eq	1ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1ec>  // b.none
 1b8:	mov	x20, x19
 1bc:	ldr	x0, [x19]
 1c0:	str	x0, [x21]
 1c4:	ldr	w0, [x19, #16]
 1c8:	str	w0, [x21, #16]
 1cc:	cmp	w0, #0x40
 1d0:	b.hi	dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xdc>  // b.pmore
 1d4:	ldr	x0, [x19, #8]
 1d8:	str	x0, [x21, #8]
 1dc:	b	e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xe8>
 1e0:	bl	0 <_ZSt17__throw_bad_allocv>
 1e4:	mov	x22, #0x0                   	// #0
 1e8:	b	130 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x130>
 1ec:	ldp	x25, x26, [sp, #64]
 1f0:	ldr	x19, [x24]
 1f4:	ldr	x22, [x24, #8]
 1f8:	cmp	x19, x22
 1fc:	b.ne	254 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x254>  // b.any
 200:	ldr	x0, [x24]
 204:	cbz	x0, 20c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x20c>
 208:	bl	0 <_ZdlPv>
 20c:	ldr	x0, [sp, #104]
 210:	str	x0, [x24]
 214:	add	x0, x0, x27
 218:	str	x0, [x24, #16]
 21c:	ldr	x0, [x24]
 220:	add	x27, x0, x27
 224:	str	x27, [x24, #8]
 228:	ldp	x19, x20, [sp, #16]
 22c:	ldp	x21, x22, [sp, #32]
 230:	ldp	x27, x28, [sp, #80]
 234:	mov	x0, x24
 238:	ldp	x23, x24, [sp, #48]
 23c:	ldp	x29, x30, [sp], #112
 240:	ret
 244:	bl	0 <_ZdaPv>
 248:	add	x19, x19, #0x30
 24c:	cmp	x22, x19
 250:	b.eq	200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x200>  // b.none
 254:	ldr	x20, [x19, #24]
 258:	ldr	x21, [x19, #32]
 25c:	cmp	x20, x21
 260:	b.eq	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x278>  // b.none
 264:	mov	x0, x20
 268:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 26c:	add	x20, x20, #0x30
 270:	cmp	x21, x20
 274:	b.ne	264 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x264>  // b.any
 278:	ldr	x0, [x19, #24]
 27c:	cbz	x0, 284 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x284>
 280:	bl	0 <_ZdlPv>
 284:	ldr	w0, [x19, #16]
 288:	cmp	w0, #0x40
 28c:	b.ls	248 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x248>  // b.plast
 290:	ldr	x0, [x19, #8]
 294:	cbnz	x0, 244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x244>
 298:	b	248 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x248>
 29c:	mov	w0, w1
 2a0:	add	x0, x0, #0x3f
 2a4:	lsr	x0, x0, #6
 2a8:	sub	w0, w0, #0x1
 2ac:	ldr	x1, [x2, x0, lsl #3]
 2b0:	and	x3, x1, x3
 2b4:	str	x3, [x2, x0, lsl #3]
 2b8:	b	2c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2c0>
 2bc:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 2c0:	add	x1, x19, #0x10
 2c4:	add	x0, x21, #0x10
 2c8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 2cc:	sub	x23, x23, #0x1
 2d0:	add	x21, x21, #0x30
 2d4:	add	x19, x19, #0x30
 2d8:	cmp	x23, #0x0
 2dc:	b.le	334 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x334>
 2e0:	mov	x1, x19
 2e4:	mov	x0, x21
 2e8:	ldur	x2, [x19, #-8]
 2ec:	stur	x2, [x21, #-8]
 2f0:	ldr	w2, [x21, #8]
 2f4:	cmp	w2, #0x40
 2f8:	b.hi	2bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2bc>  // b.pmore
 2fc:	ldr	w2, [x19, #8]
 300:	cmp	w2, #0x40
 304:	b.hi	2bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2bc>  // b.pmore
 308:	ldr	x2, [x19]
 30c:	str	x2, [x21]
 310:	ldr	w1, [x19, #8]
 314:	str	w1, [x21, #8]
 318:	neg	w3, w1
 31c:	lsr	x3, x22, x3
 320:	cmp	w1, #0x40
 324:	b.hi	29c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x29c>  // b.pmore
 328:	and	x2, x2, x3
 32c:	str	x2, [x21]
 330:	b	2c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2c0>
 334:	cmp	x27, #0x0
 338:	mov	x0, #0x30                  	// #48
 33c:	csel	x0, x27, x0, gt
 340:	add	x20, x20, x0
 344:	ldr	x22, [x24, #8]
 348:	cmp	x22, x20
 34c:	b.ne	360 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x360>  // b.any
 350:	b	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x21c>
 354:	add	x20, x20, #0x30
 358:	cmp	x20, x22
 35c:	b.eq	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x21c>  // b.none
 360:	ldr	x19, [x20, #24]
 364:	ldr	x21, [x20, #32]
 368:	cmp	x19, x21
 36c:	b.eq	384 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x384>  // b.none
 370:	mov	x0, x19
 374:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 378:	add	x19, x19, #0x30
 37c:	cmp	x21, x19
 380:	b.ne	370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x370>  // b.any
 384:	ldr	x0, [x20, #24]
 388:	cbz	x0, 390 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x390>
 38c:	bl	0 <_ZdlPv>
 390:	ldr	w0, [x20, #16]
 394:	cmp	w0, #0x40
 398:	b.ls	354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x354>  // b.plast
 39c:	ldr	x0, [x20, #8]
 3a0:	cbz	x0, 354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x354>
 3a4:	bl	0 <_ZdaPv>
 3a8:	b	354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x354>
 3ac:	cmp	x0, #0x0
 3b0:	b.le	45c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x45c>
 3b4:	add	x20, x20, #0x8
 3b8:	add	x19, x19, #0x8
 3bc:	mov	x23, #0xffffffffffffffff    	// #-1
 3c0:	b	408 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x408>
 3c4:	mov	w0, w1
 3c8:	add	x0, x0, #0x3f
 3cc:	lsr	x0, x0, #6
 3d0:	sub	w0, w0, #0x1
 3d4:	ldr	x1, [x2, x0, lsl #3]
 3d8:	and	x3, x1, x3
 3dc:	str	x3, [x2, x0, lsl #3]
 3e0:	b	3e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3e8>
 3e4:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 3e8:	add	x1, x19, #0x10
 3ec:	add	x0, x20, #0x10
 3f0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 3f4:	sub	x21, x21, #0x1
 3f8:	add	x20, x20, #0x30
 3fc:	add	x19, x19, #0x30
 400:	cmp	x21, #0x0
 404:	b.le	45c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x45c>
 408:	mov	x1, x19
 40c:	mov	x0, x20
 410:	ldur	x2, [x19, #-8]
 414:	stur	x2, [x20, #-8]
 418:	ldr	w2, [x20, #8]
 41c:	cmp	w2, #0x40
 420:	b.hi	3e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3e4>  // b.pmore
 424:	ldr	w2, [x19, #8]
 428:	cmp	w2, #0x40
 42c:	b.hi	3e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3e4>  // b.pmore
 430:	ldr	x2, [x19]
 434:	str	x2, [x20]
 438:	ldr	w1, [x19, #8]
 43c:	str	w1, [x20, #8]
 440:	neg	w3, w1
 444:	lsr	x3, x23, x3
 448:	cmp	w1, #0x40
 44c:	b.hi	3c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3c4>  // b.pmore
 450:	and	x2, x2, x3
 454:	str	x2, [x20]
 458:	b	3e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3e8>
 45c:	ldr	x20, [x24, #8]
 460:	ldr	x21, [x24]
 464:	sub	x0, x20, x21
 468:	ldr	x21, [x22]
 46c:	add	x21, x21, x0
 470:	ldr	x28, [x22, #8]
 474:	cmp	x21, x28
 478:	b.eq	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x21c>  // b.none
 47c:	stp	x25, x26, [sp, #64]
 480:	b	560 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x560>
 484:	add	x1, x21, #0x8
 488:	add	x0, x20, #0x8
 48c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 490:	ldr	x19, [x21, #32]
 494:	ldr	x0, [x21, #24]
 498:	sub	x19, x19, x0
 49c:	asr	x0, x19, #4
 4a0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 4a4:	movk	x1, #0xaaab
 4a8:	mul	x0, x0, x1
 4ac:	str	xzr, [x20, #24]
 4b0:	str	xzr, [x20, #32]
 4b4:	str	xzr, [x20, #40]
 4b8:	cbz	x0, 588 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x588>
 4bc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 4c0:	movk	x1, #0x2aa, lsl #48
 4c4:	cmp	x0, x1
 4c8:	b.hi	584 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x584>  // b.pmore
 4cc:	mov	x0, x19
 4d0:	bl	0 <_Znwm>
 4d4:	mov	x22, x0
 4d8:	str	x22, [x20, #24]
 4dc:	str	x22, [x20, #32]
 4e0:	add	x19, x22, x19
 4e4:	str	x19, [x20, #40]
 4e8:	ldr	x26, [x21, #24]
 4ec:	ldr	x19, [x21, #32]
 4f0:	cmp	x26, x19
 4f4:	b.eq	54c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x54c>  // b.none
 4f8:	mov	x23, x26
 4fc:	mov	x25, x22
 500:	mov	x1, x23
 504:	mov	x0, x25
 508:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 50c:	add	x25, x25, #0x30
 510:	add	x23, x23, #0x30
 514:	cmp	x19, x23
 518:	b.ne	500 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x500>  // b.any
 51c:	sub	x0, x19, #0x30
 520:	sub	x0, x0, x26
 524:	lsr	x0, x0, #4
 528:	mov	x1, #0xaaab                	// #43691
 52c:	movk	x1, #0xaaaa, lsl #16
 530:	movk	x1, #0xaaaa, lsl #32
 534:	movk	x1, #0xaaa, lsl #48
 538:	mul	x0, x0, x1
 53c:	and	x0, x0, #0xfffffffffffffff
 540:	add	x0, x0, #0x1
 544:	add	x0, x0, x0, lsl #1
 548:	add	x22, x22, x0, lsl #4
 54c:	str	x22, [x20, #32]
 550:	add	x21, x21, #0x30
 554:	add	x20, x20, #0x30
 558:	cmp	x28, x21
 55c:	b.eq	590 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x590>  // b.none
 560:	ldr	x0, [x21]
 564:	str	x0, [x20]
 568:	ldr	w0, [x21, #16]
 56c:	str	w0, [x20, #16]
 570:	cmp	w0, #0x40
 574:	b.hi	484 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x484>  // b.pmore
 578:	ldr	x0, [x21, #8]
 57c:	str	x0, [x20, #8]
 580:	b	490 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x490>
 584:	bl	0 <_ZSt17__throw_bad_allocv>
 588:	mov	x22, #0x0                   	// #0
 58c:	b	4d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x4d8>
 590:	ldp	x25, x26, [sp, #64]
 594:	b	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x21c>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x19, x0
  18:	ldr	x22, [x0]
  1c:	ldr	x23, [x0, #8]
  20:	ldr	x0, [x1]
  24:	str	x0, [x19]
  28:	ldr	x0, [x1, #8]
  2c:	str	x0, [x19, #8]
  30:	ldr	x0, [x1, #16]
  34:	str	x0, [x19, #16]
  38:	str	xzr, [x1]
  3c:	str	xzr, [x1, #8]
  40:	str	xzr, [x1, #16]
  44:	cmp	x22, x23
  48:	b.eq	ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0xac>  // b.none
  4c:	mov	x20, x22
  50:	b	60 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0x60>
  54:	add	x20, x20, #0x30
  58:	cmp	x23, x20
  5c:	b.eq	ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0xac>  // b.none
  60:	ldr	x21, [x20, #24]
  64:	ldr	x24, [x20, #32]
  68:	cmp	x21, x24
  6c:	b.eq	84 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0x84>  // b.none
  70:	mov	x0, x21
  74:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_>
  78:	add	x21, x21, #0x30
  7c:	cmp	x24, x21
  80:	b.ne	70 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0x70>  // b.any
  84:	ldr	x0, [x20, #24]
  88:	cbz	x0, 90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0x90>
  8c:	bl	0 <_ZdlPv>
  90:	ldr	w0, [x20, #16]
  94:	cmp	w0, #0x40
  98:	b.ls	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0x54>  // b.plast
  9c:	ldr	x0, [x20, #8]
  a0:	cbz	x0, 54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0x54>
  a4:	bl	0 <_ZdaPv>
  a8:	b	54 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0x54>
  ac:	cbz	x22, b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSEOS3_+0xb8>
  b0:	mov	x0, x22
  b4:	bl	0 <_ZdlPv>
  b8:	mov	x0, x19
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x21, x22, [sp, #32]
  c4:	ldp	x23, x24, [sp, #48]
  c8:	ldp	x29, x30, [sp], #64
  cc:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x27, x28, [sp, #80]
   c:	mov	x27, x0
  10:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  14:	movk	x0, #0x2aa, lsl #48
  18:	cmp	x1, x0
  1c:	b.hi	64 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x64>  // b.pmore
  20:	stp	x21, x22, [sp, #32]
  24:	stp	x25, x26, [sp, #64]
  28:	mov	x26, x1
  2c:	ldr	x21, [x27]
  30:	ldr	x0, [x27, #16]
  34:	sub	x0, x0, x21
  38:	asr	x0, x0, #4
  3c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40:	movk	x1, #0xaaab
  44:	mul	x0, x0, x1
  48:	cmp	x26, x0
  4c:	b.hi	80 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x80>  // b.pmore
  50:	ldp	x21, x22, [sp, #32]
  54:	ldp	x25, x26, [sp, #64]
  58:	ldp	x27, x28, [sp, #80]
  5c:	ldp	x29, x30, [sp], #112
  60:	ret
  64:	stp	x19, x20, [sp, #16]
  68:	stp	x21, x22, [sp, #32]
  6c:	stp	x23, x24, [sp, #48]
  70:	stp	x25, x26, [sp, #64]
  74:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <_ZSt20__throw_length_errorPKc>
  80:	stp	x19, x20, [sp, #16]
  84:	ldr	x28, [x27, #8]
  88:	sub	x0, x28, x21
  8c:	str	x0, [sp, #104]
  90:	cbz	x26, 26c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x26c>
  94:	add	x0, x26, x26, lsl #1
  98:	lsl	x0, x0, #4
  9c:	bl	0 <_Znwm>
  a0:	str	x0, [sp, #96]
  a4:	cmp	x21, x28
  a8:	b.eq	1c8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x1c8>  // b.none
  ac:	stp	x23, x24, [sp, #48]
  b0:	ldr	x20, [sp, #96]
  b4:	b	194 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x194>
  b8:	add	x1, x21, #0x8
  bc:	add	x0, x20, #0x8
  c0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  c4:	ldr	x19, [x21, #32]
  c8:	ldr	x0, [x21, #24]
  cc:	sub	x19, x19, x0
  d0:	asr	x0, x19, #4
  d4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  d8:	movk	x1, #0xaaab
  dc:	mul	x0, x0, x1
  e0:	str	xzr, [x20, #24]
  e4:	str	xzr, [x20, #32]
  e8:	str	xzr, [x20, #40]
  ec:	cbz	x0, 1bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x1bc>
  f0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  f4:	movk	x1, #0x2aa, lsl #48
  f8:	cmp	x0, x1
  fc:	b.hi	1b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x1b8>  // b.pmore
 100:	mov	x0, x19
 104:	bl	0 <_Znwm>
 108:	mov	x22, x0
 10c:	str	x22, [x20, #24]
 110:	str	x22, [x20, #32]
 114:	add	x19, x22, x19
 118:	str	x19, [x20, #40]
 11c:	ldr	x25, [x21, #24]
 120:	ldr	x19, [x21, #32]
 124:	cmp	x25, x19
 128:	b.eq	180 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x180>  // b.none
 12c:	mov	x23, x25
 130:	mov	x24, x22
 134:	mov	x1, x23
 138:	mov	x0, x24
 13c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm>
 140:	add	x24, x24, #0x30
 144:	add	x23, x23, #0x30
 148:	cmp	x19, x23
 14c:	b.ne	134 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x134>  // b.any
 150:	sub	x0, x19, #0x30
 154:	sub	x0, x0, x25
 158:	lsr	x0, x0, #4
 15c:	mov	x1, #0xaaab                	// #43691
 160:	movk	x1, #0xaaaa, lsl #16
 164:	movk	x1, #0xaaaa, lsl #32
 168:	movk	x1, #0xaaa, lsl #48
 16c:	mul	x0, x0, x1
 170:	and	x0, x0, #0xfffffffffffffff
 174:	add	x0, x0, #0x1
 178:	add	x0, x0, x0, lsl #1
 17c:	add	x22, x22, x0, lsl #4
 180:	str	x22, [x20, #32]
 184:	add	x21, x21, #0x30
 188:	add	x20, x20, #0x30
 18c:	cmp	x28, x21
 190:	b.eq	1c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x1c4>  // b.none
 194:	ldr	x0, [x21]
 198:	str	x0, [x20]
 19c:	ldr	w0, [x21, #16]
 1a0:	str	w0, [x20, #16]
 1a4:	cmp	w0, #0x40
 1a8:	b.hi	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0xb8>  // b.pmore
 1ac:	ldr	x0, [x21, #8]
 1b0:	str	x0, [x20, #8]
 1b4:	b	c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0xc4>
 1b8:	bl	0 <_ZSt17__throw_bad_allocv>
 1bc:	mov	x22, #0x0                   	// #0
 1c0:	b	10c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x10c>
 1c4:	ldp	x23, x24, [sp, #48]
 1c8:	ldr	x19, [x27]
 1cc:	ldr	x22, [x27, #8]
 1d0:	cmp	x19, x22
 1d4:	b.ne	218 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x218>  // b.any
 1d8:	ldr	x0, [x27]
 1dc:	cbz	x0, 1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x1e4>
 1e0:	bl	0 <_ZdlPv>
 1e4:	ldr	x1, [sp, #96]
 1e8:	str	x1, [x27]
 1ec:	ldr	x0, [sp, #104]
 1f0:	add	x0, x1, x0
 1f4:	str	x0, [x27, #8]
 1f8:	add	x26, x26, x26, lsl #1
 1fc:	add	x0, x1, x26, lsl #4
 200:	str	x0, [x27, #16]
 204:	ldp	x19, x20, [sp, #16]
 208:	b	50 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x50>
 20c:	add	x19, x19, #0x30
 210:	cmp	x22, x19
 214:	b.eq	1d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x1d8>  // b.none
 218:	ldr	x20, [x19, #24]
 21c:	ldr	x21, [x19, #32]
 220:	cmp	x20, x21
 224:	b.eq	23c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x23c>  // b.none
 228:	mov	x0, x20
 22c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm>
 230:	add	x20, x20, #0x30
 234:	cmp	x21, x20
 238:	b.ne	228 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x228>  // b.any
 23c:	ldr	x0, [x19, #24]
 240:	cbz	x0, 248 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x248>
 244:	bl	0 <_ZdlPv>
 248:	ldr	w0, [x19, #16]
 24c:	cmp	w0, #0x40
 250:	b.ls	20c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x20c>  // b.plast
 254:	ldr	x0, [x19, #8]
 258:	cbz	x0, 20c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x20c>
 25c:	bl	0 <_ZdaPv>
 260:	b	20c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x20c>
 264:	str	xzr, [sp, #96]
 268:	b	1d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x1d8>
 26c:	cmp	x21, x28
 270:	b.eq	264 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0x264>  // b.none
 274:	stp	x23, x24, [sp, #48]
 278:	str	xzr, [sp, #96]
 27c:	b	b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE7reserveEm+0xb0>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x0, [x0]
  10:	and	x19, x0, #0xfffffffffffffff8
  14:	ubfx	x0, x0, #1, #2
  18:	cmp	w0, #0x1
  1c:	b.eq	138 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x138>  // b.none
  20:	cmp	w0, #0x2
  24:	b.eq	2c0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x2c0>  // b.none
  28:	cbz	x19, 464 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x464>
  2c:	ldrb	w0, [x19, #16]
  30:	cmp	w0, #0x1d
  34:	b.ne	488 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x488>  // b.any
  38:	ldrsb	w0, [x19, #23]
  3c:	tbz	w0, #31, 4dc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4dc>
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  48:	mov	x20, x0
  4c:	ldrsb	w0, [x19, #23]
  50:	tbz	w0, #31, 4ac <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4ac>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  5c:	add	x1, x0, x1
  60:	sub	x1, x1, x20
  64:	asr	x1, x1, #4
  68:	mov	w0, w1
  6c:	cbz	w1, 118 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x118>
  70:	stp	x21, x22, [sp, #32]
  74:	ldrsb	w0, [x19, #23]
  78:	tbz	w0, #31, 5d8 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x5d8>
  7c:	mov	x0, x19
  80:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  84:	mov	x20, x0
  88:	ldrsb	w0, [x19, #23]
  8c:	tbz	w0, #31, 5cc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x5cc>
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  98:	add	x0, x0, x1
  9c:	sub	x0, x0, x20
  a0:	asr	x0, x0, #4
  a4:	cbz	w0, 5d8 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x5d8>
  a8:	ldrsb	w0, [x19, #23]
  ac:	tbz	w0, #31, 554 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x554>
  b0:	mov	x0, x19
  b4:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b8:	ldr	w21, [x0, #8]
  bc:	ldrsb	w0, [x19, #23]
  c0:	tbz	w0, #31, 554 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x554>
  c4:	mov	x0, x19
  c8:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  cc:	mov	x20, x0
  d0:	ldrsb	w0, [x19, #23]
  d4:	tbz	w0, #31, 544 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x544>
  d8:	mov	x0, x19
  dc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  e0:	add	x0, x0, x1
  e4:	sub	x0, x0, x20
  e8:	asr	x0, x0, #4
  ec:	cbz	w0, 554 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x554>
  f0:	ldrsb	w0, [x19, #23]
  f4:	tbz	w0, #31, 4b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4b4>
  f8:	mov	x0, x19
  fc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 100:	add	x0, x0, x1
 104:	ldur	w1, [x0, #-4]
 108:	sub	w0, w1, w21
 10c:	cmp	w1, w21
 110:	b.cc	4bc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4bc>  // b.lo, b.ul, b.last
 114:	ldp	x21, x22, [sp, #32]
 118:	ubfiz	x1, x0, #1, #32
 11c:	add	x0, x1, w0, uxtw
 120:	mov	x1, #0xffffffffffffffb8    	// #-72
 124:	sub	x0, x1, x0, lsl #3
 128:	add	x0, x19, x0
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x29, x30, [sp], #48
 134:	ret
 138:	cbz	x19, 240 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x240>
 13c:	ldrb	w0, [x19, #16]
 140:	cmp	w0, #0x50
 144:	b.ne	264 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x264>  // b.any
 148:	ldrsb	w0, [x19, #23]
 14c:	tbz	w0, #31, 2b8 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x2b8>
 150:	mov	x0, x19
 154:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 158:	mov	x20, x0
 15c:	ldrsb	w0, [x19, #23]
 160:	tbz	w0, #31, 288 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x288>
 164:	mov	x0, x19
 168:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 16c:	add	x1, x0, x1
 170:	sub	x1, x1, x20
 174:	asr	x1, x1, #4
 178:	mov	w0, w1
 17c:	cbz	w1, 228 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x228>
 180:	stp	x21, x22, [sp, #32]
 184:	ldrsb	w0, [x19, #23]
 188:	tbz	w0, #31, 580 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x580>
 18c:	mov	x0, x19
 190:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 194:	mov	x20, x0
 198:	ldrsb	w0, [x19, #23]
 19c:	tbz	w0, #31, 574 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x574>
 1a0:	mov	x0, x19
 1a4:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1a8:	add	x0, x0, x1
 1ac:	sub	x0, x0, x20
 1b0:	asr	x0, x0, #4
 1b4:	cbz	w0, 580 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x580>
 1b8:	ldrsb	w0, [x19, #23]
 1bc:	tbz	w0, #31, 4f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4f4>
 1c0:	mov	x0, x19
 1c4:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1c8:	ldr	w21, [x0, #8]
 1cc:	ldrsb	w0, [x19, #23]
 1d0:	tbz	w0, #31, 4f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4f4>
 1d4:	mov	x0, x19
 1d8:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1dc:	mov	x20, x0
 1e0:	ldrsb	w0, [x19, #23]
 1e4:	tbz	w0, #31, 4e4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4e4>
 1e8:	mov	x0, x19
 1ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1f0:	add	x0, x0, x1
 1f4:	sub	x0, x0, x20
 1f8:	asr	x0, x0, #4
 1fc:	cbz	w0, 4f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4f4>
 200:	ldrsb	w0, [x19, #23]
 204:	tbz	w0, #31, 290 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x290>
 208:	mov	x0, x19
 20c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 210:	add	x0, x0, x1
 214:	ldur	w1, [x0, #-4]
 218:	sub	w0, w1, w21
 21c:	cmp	w1, w21
 220:	b.cc	298 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x298>  // b.lo, b.ul, b.last
 224:	ldp	x21, x22, [sp, #32]
 228:	ubfiz	x1, x0, #1, #32
 22c:	add	x0, x1, w0, uxtw
 230:	mov	x1, #0xffffffffffffffe8    	// #-24
 234:	sub	x0, x1, x0, lsl #3
 238:	add	x0, x19, x0
 23c:	b	12c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x12c>
 240:	stp	x21, x22, [sp, #32]
 244:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 248:	add	x3, x3, #0x0
 24c:	mov	w2, #0x69                  	// #105
 250:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 254:	add	x1, x1, #0x0
 258:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 25c:	add	x0, x0, #0x0
 260:	bl	0 <__assert_fail>
 264:	stp	x21, x22, [sp, #32]
 268:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 26c:	add	x3, x3, #0x0
 270:	mov	w2, #0x108                 	// #264
 274:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 278:	add	x1, x1, #0x0
 27c:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 280:	add	x0, x0, #0x0
 284:	bl	0 <__assert_fail>
 288:	mov	x1, #0x0                   	// #0
 28c:	b	170 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x170>
 290:	mov	x0, #0x0                   	// #0
 294:	b	214 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x214>
 298:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 29c:	add	x3, x3, #0x0
 2a0:	mov	w2, #0x710                 	// #1808
 2a4:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 2a8:	add	x1, x1, #0x0
 2ac:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 2b0:	add	x0, x0, #0x0
 2b4:	bl	0 <__assert_fail>
 2b8:	mov	w0, #0x0                   	// #0
 2bc:	b	228 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x228>
 2c0:	cbz	x19, 3dc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3dc>
 2c4:	ldrb	w0, [x19, #16]
 2c8:	cmp	w0, #0x23
 2cc:	b.ne	400 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x400>  // b.any
 2d0:	mov	x0, x19
 2d4:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
 2d8:	ubfiz	x1, x0, #1, #32
 2dc:	add	x0, x1, w0, uxtw
 2e0:	mov	x20, #0xffffffffffffffe8    	// #-24
 2e4:	sub	x20, x20, x0, lsl #3
 2e8:	ldrsb	w0, [x19, #23]
 2ec:	tbz	w0, #31, 454 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x454>
 2f0:	stp	x21, x22, [sp, #32]
 2f4:	mov	x0, x19
 2f8:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 2fc:	mov	x21, x0
 300:	ldrsb	w0, [x19, #23]
 304:	tbz	w0, #31, 424 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x424>
 308:	mov	x0, x19
 30c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 310:	add	x1, x0, x1
 314:	sub	x1, x1, x21
 318:	asr	x1, x1, #4
 31c:	mov	w0, w1
 320:	cbz	w1, 45c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x45c>
 324:	ldrsb	w0, [x19, #23]
 328:	tbz	w0, #31, 5ac <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x5ac>
 32c:	mov	x0, x19
 330:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 334:	mov	x21, x0
 338:	ldrsb	w0, [x19, #23]
 33c:	tbz	w0, #31, 5a0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x5a0>
 340:	mov	x0, x19
 344:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 348:	add	x0, x0, x1
 34c:	sub	x0, x0, x21
 350:	asr	x0, x0, #4
 354:	cbz	w0, 5ac <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x5ac>
 358:	ldrsb	w0, [x19, #23]
 35c:	tbz	w0, #31, 524 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x524>
 360:	mov	x0, x19
 364:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 368:	ldr	w22, [x0, #8]
 36c:	ldrsb	w0, [x19, #23]
 370:	tbz	w0, #31, 524 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x524>
 374:	mov	x0, x19
 378:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 37c:	mov	x21, x0
 380:	ldrsb	w0, [x19, #23]
 384:	tbz	w0, #31, 514 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x514>
 388:	mov	x0, x19
 38c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 390:	add	x0, x0, x1
 394:	sub	x0, x0, x21
 398:	asr	x0, x0, #4
 39c:	cbz	w0, 524 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x524>
 3a0:	ldrsb	w0, [x19, #23]
 3a4:	tbz	w0, #31, 42c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x42c>
 3a8:	mov	x0, x19
 3ac:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 3b0:	add	x0, x0, x1
 3b4:	ldur	w1, [x0, #-4]
 3b8:	sub	w0, w1, w22
 3bc:	cmp	w1, w22
 3c0:	b.cc	434 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x434>  // b.lo, b.ul, b.last
 3c4:	ldp	x21, x22, [sp, #32]
 3c8:	ubfiz	x1, x0, #1, #32
 3cc:	add	x0, x1, w0, uxtw
 3d0:	sub	x0, x20, x0, lsl #3
 3d4:	add	x0, x19, x0
 3d8:	b	12c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x12c>
 3dc:	stp	x21, x22, [sp, #32]
 3e0:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 3e4:	add	x3, x3, #0x0
 3e8:	mov	w2, #0x69                  	// #105
 3ec:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 3f0:	add	x1, x1, #0x0
 3f4:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 3f8:	add	x0, x0, #0x0
 3fc:	bl	0 <__assert_fail>
 400:	stp	x21, x22, [sp, #32]
 404:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 408:	add	x3, x3, #0x0
 40c:	mov	w2, #0x108                 	// #264
 410:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 414:	add	x1, x1, #0x0
 418:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 41c:	add	x0, x0, #0x0
 420:	bl	0 <__assert_fail>
 424:	mov	x1, #0x0                   	// #0
 428:	b	314 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x314>
 42c:	mov	x0, #0x0                   	// #0
 430:	b	3b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3b4>
 434:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 438:	add	x3, x3, #0x0
 43c:	mov	w2, #0x710                 	// #1808
 440:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 444:	add	x1, x1, #0x0
 448:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 44c:	add	x0, x0, #0x0
 450:	bl	0 <__assert_fail>
 454:	mov	w0, #0x0                   	// #0
 458:	b	3c8 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3c8>
 45c:	ldp	x21, x22, [sp, #32]
 460:	b	3c8 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3c8>
 464:	stp	x21, x22, [sp, #32]
 468:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 46c:	add	x3, x3, #0x0
 470:	mov	w2, #0x69                  	// #105
 474:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 478:	add	x1, x1, #0x0
 47c:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 480:	add	x0, x0, #0x0
 484:	bl	0 <__assert_fail>
 488:	stp	x21, x22, [sp, #32]
 48c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 490:	add	x3, x3, #0x0
 494:	mov	w2, #0x108                 	// #264
 498:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 49c:	add	x1, x1, #0x0
 4a0:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 4a4:	add	x0, x0, #0x0
 4a8:	bl	0 <__assert_fail>
 4ac:	mov	x1, #0x0                   	// #0
 4b0:	b	60 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x60>
 4b4:	mov	x0, #0x0                   	// #0
 4b8:	b	104 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x104>
 4bc:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 4c0:	add	x3, x3, #0x0
 4c4:	mov	w2, #0x710                 	// #1808
 4c8:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 4cc:	add	x1, x1, #0x0
 4d0:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 4d4:	add	x0, x0, #0x0
 4d8:	bl	0 <__assert_fail>
 4dc:	mov	w0, #0x0                   	// #0
 4e0:	b	118 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x118>
 4e4:	neg	x20, x20
 4e8:	asr	x20, x20, #4
 4ec:	mov	x0, #0x0                   	// #0
 4f0:	cbnz	w20, 214 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x214>
 4f4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 4f8:	add	x3, x3, #0x0
 4fc:	mov	w2, #0x6f3                 	// #1779
 500:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 504:	add	x1, x1, #0x0
 508:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 50c:	add	x0, x0, #0x0
 510:	bl	0 <__assert_fail>
 514:	neg	x21, x21
 518:	asr	x21, x21, #4
 51c:	mov	x0, #0x0                   	// #0
 520:	cbnz	w21, 3b4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x3b4>
 524:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 528:	add	x3, x3, #0x0
 52c:	mov	w2, #0x6f3                 	// #1779
 530:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 534:	add	x1, x1, #0x0
 538:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 53c:	add	x0, x0, #0x0
 540:	bl	0 <__assert_fail>
 544:	neg	x20, x20
 548:	asr	x20, x20, #4
 54c:	mov	x0, #0x0                   	// #0
 550:	cbnz	w20, 104 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x104>
 554:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 558:	add	x3, x3, #0x0
 55c:	mov	w2, #0x6f3                 	// #1779
 560:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 564:	add	x1, x1, #0x0
 568:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 56c:	add	x0, x0, #0x0
 570:	bl	0 <__assert_fail>
 574:	neg	x0, x20
 578:	asr	x0, x0, #4
 57c:	cbnz	w0, 4f4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x4f4>
 580:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 584:	add	x3, x3, #0x0
 588:	mov	w2, #0x6ed                 	// #1773
 58c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 590:	add	x1, x1, #0x0
 594:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 598:	add	x0, x0, #0x0
 59c:	bl	0 <__assert_fail>
 5a0:	neg	x0, x21
 5a4:	asr	x0, x0, #4
 5a8:	cbnz	w0, 524 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x524>
 5ac:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 5b0:	add	x3, x3, #0x0
 5b4:	mov	w2, #0x6ed                 	// #1773
 5b8:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 5bc:	add	x1, x1, #0x0
 5c0:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 5c4:	add	x0, x0, #0x0
 5c8:	bl	0 <__assert_fail>
 5cc:	neg	x0, x20
 5d0:	asr	x0, x0, #4
 5d4:	cbnz	w0, 554 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv+0x554>
 5d8:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 5dc:	add	x3, x3, #0x0
 5e0:	mov	w2, #0x6ed                 	// #1773
 5e4:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 5e8:	add	x1, x1, #0x0
 5ec:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E7arg_endEv>
 5f0:	add	x0, x0, #0x0
 5f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x25, x1
  1c:	mov	x26, x2
  20:	ldr	x23, [x0, #8]
  24:	ldr	x24, [x0]
  28:	sub	x1, x23, x24
  2c:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  30:	cmp	x2, x1, asr #3
  34:	b.eq	e0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xe0>  // b.none
  38:	mov	x20, x0
  3c:	asr	x0, x1, #3
  40:	cmp	x0, #0x0
  44:	csinc	x3, x0, xzr, ne  // ne = any
  48:	adds	x3, x3, x0
  4c:	b.cs	118 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x118>  // b.hs, b.nlast
  50:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	x3, x22
  58:	csel	x22, x3, x22, ls  // ls = plast
  5c:	sub	x19, x25, x24
  60:	mov	x21, #0x0                   	// #0
  64:	cbz	x3, 74 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x74>
  68:	lsl	x0, x22, #3
  6c:	bl	0 <_Znwm>
  70:	mov	x21, x0
  74:	ldr	x0, [x26]
  78:	str	x0, [x21, x19]
  7c:	cmp	x19, #0x0
  80:	b.gt	ec <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xec>
  84:	add	x19, x19, #0x8
  88:	add	x19, x21, x19
  8c:	sub	x23, x23, x25
  90:	cmp	x23, #0x0
  94:	b.le	a8 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xa8>
  98:	mov	x2, x23
  9c:	mov	x1, x25
  a0:	mov	x0, x19
  a4:	bl	0 <memcpy>
  a8:	add	x19, x19, x23
  ac:	cbz	x24, b8 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xb8>
  b0:	mov	x0, x24
  b4:	bl	0 <_ZdlPv>
  b8:	str	x21, [x20]
  bc:	str	x19, [x20, #8]
  c0:	add	x21, x21, x22, lsl #3
  c4:	str	x21, [x20, #16]
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldp	x25, x26, [sp, #64]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	adrp	x0, 0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
  e4:	add	x0, x0, #0x0
  e8:	bl	0 <_ZSt20__throw_length_errorPKc>
  ec:	mov	x2, x19
  f0:	mov	x1, x24
  f4:	mov	x0, x21
  f8:	bl	0 <memmove>
  fc:	add	x19, x19, #0x8
 100:	add	x19, x21, x19
 104:	sub	x23, x23, x25
 108:	cmp	x23, #0x0
 10c:	b.gt	98 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x98>
 110:	add	x19, x19, x23
 114:	b	b0 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xb0>
 118:	sub	x19, x25, x24
 11c:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
 120:	b	68 <_ZNSt6vectorIPvSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x68>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	str	x23, [sp, #48]
  10:	mov	x23, x0
  14:	mov	x21, x1
  18:	cbz	x1, 94 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x94>
  1c:	stp	x19, x20, [sp, #16]
  20:	b	30 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x30>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	cbz	x21, 90 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x90>
  30:	ldr	x1, [x21, #24]
  34:	mov	x0, x23
  38:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  3c:	mov	x20, x21
  40:	ldr	x21, [x21, #16]
  44:	ldr	x19, [x20, #64]
  48:	ldr	x22, [x20, #72]
  4c:	cmp	x19, x22
  50:	b.eq	68 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x68>  // b.none
  54:	mov	x0, x19
  58:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  5c:	add	x19, x19, #0x30
  60:	cmp	x22, x19
  64:	b.ne	54 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x54>  // b.any
  68:	ldr	x0, [x20, #64]
  6c:	cbz	x0, 74 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x74>
  70:	bl	0 <_ZdlPv>
  74:	ldr	w1, [x20, #56]
  78:	cmp	w1, #0x40
  7c:	b.ls	24 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x24>  // b.plast
  80:	ldr	x0, [x20, #48]
  84:	cbz	x0, 24 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x24>
  88:	bl	0 <_ZdaPv>
  8c:	b	24 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x24>
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x21, x22, [sp, #32]
  98:	ldr	x23, [sp, #48]
  9c:	ldp	x29, x30, [sp], #64
  a0:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>:
   0:	cbz	x1, 328 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x328>
   4:	stp	x29, x30, [sp, #-128]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x27, x28, [sp, #80]
  18:	mov	x27, x0
  1c:	mov	x24, x1
  20:	ldr	x3, [x0, #8]
  24:	ldr	x0, [x0]
  28:	sub	x19, x3, x0
  2c:	asr	x0, x19, #4
  30:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  34:	movk	x2, #0xaaab
  38:	mul	x0, x0, x2
  3c:	str	x0, [sp, #104]
  40:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x1, #0x2aa, lsl #48
  48:	sub	x1, x1, x0
  4c:	ldr	x0, [x27, #16]
  50:	sub	x0, x0, x3
  54:	asr	x0, x0, #4
  58:	mul	x0, x0, x2
  5c:	cmp	x0, x24
  60:	b.cc	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0xb8>  // b.lo, b.ul, b.last
  64:	mov	x0, x3
  68:	mov	x1, x24
  6c:	mov	w2, #0x1                   	// #1
  70:	str	w2, [x0, #16]
  74:	str	xzr, [x0, #8]
  78:	str	xzr, [x0, #24]
  7c:	str	xzr, [x0, #32]
  80:	str	xzr, [x0, #40]
  84:	str	wzr, [x0]
  88:	str	wzr, [x0, #4]
  8c:	add	x0, x0, #0x30
  90:	subs	x1, x1, #0x1
  94:	b.ne	70 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x70>  // b.any
  98:	add	x24, x24, x24, lsl #1
  9c:	add	x3, x3, x24, lsl #4
  a0:	str	x3, [x27, #8]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x23, x24, [sp, #48]
  ac:	ldp	x27, x28, [sp, #80]
  b0:	ldp	x29, x30, [sp], #128
  b4:	ret
  b8:	cmp	x1, x24
  bc:	b.cc	14c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x14c>  // b.lo, b.ul, b.last
  c0:	stp	x21, x22, [sp, #32]
  c4:	ldr	x1, [sp, #104]
  c8:	cmp	x24, x1
  cc:	csel	x0, x24, x1, cs  // cs = hs, nlast
  d0:	adds	x0, x0, x1
  d4:	b.cs	160 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x160>  // b.hs, b.nlast
  d8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  dc:	movk	x1, #0x2aa, lsl #48
  e0:	cmp	x0, x1
  e4:	csel	x0, x0, x1, ls  // ls = plast
  e8:	add	x0, x0, x0, lsl #1
  ec:	lsl	x0, x0, #4
  f0:	str	x0, [sp, #120]
  f4:	bl	0 <_Znwm>
  f8:	str	x0, [sp, #112]
  fc:	add	x0, x0, x19
 100:	mov	x1, x24
 104:	mov	w2, #0x1                   	// #1
 108:	str	w2, [x0, #16]
 10c:	str	xzr, [x0, #8]
 110:	str	xzr, [x0, #24]
 114:	str	xzr, [x0, #32]
 118:	str	xzr, [x0, #40]
 11c:	str	wzr, [x0]
 120:	str	wzr, [x0, #4]
 124:	add	x0, x0, #0x30
 128:	subs	x1, x1, #0x1
 12c:	b.ne	108 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x108>  // b.any
 130:	ldr	x21, [x27]
 134:	ldr	x28, [x27, #8]
 138:	cmp	x21, x28
 13c:	b.eq	2ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2ec>  // b.none
 140:	stp	x25, x26, [sp, #64]
 144:	ldr	x20, [sp, #112]
 148:	b	244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x244>
 14c:	stp	x21, x22, [sp, #32]
 150:	stp	x25, x26, [sp, #64]
 154:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
 158:	add	x0, x0, #0x0
 15c:	bl	0 <_ZSt20__throw_length_errorPKc>
 160:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 164:	movk	x0, #0x2aa, lsl #48
 168:	b	e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0xe8>
 16c:	ldr	x0, [x21, #8]
 170:	str	x0, [x20, #8]
 174:	ldr	x19, [x21, #32]
 178:	ldr	x0, [x21, #24]
 17c:	sub	x19, x19, x0
 180:	asr	x0, x19, #4
 184:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 188:	movk	x1, #0xaaab
 18c:	mul	x0, x0, x1
 190:	str	xzr, [x20, #24]
 194:	str	xzr, [x20, #32]
 198:	str	xzr, [x20, #40]
 19c:	cbz	x0, 270 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x270>
 1a0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1a4:	movk	x1, #0x2aa, lsl #48
 1a8:	cmp	x0, x1
 1ac:	b.hi	26c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x26c>  // b.pmore
 1b0:	mov	x0, x19
 1b4:	bl	0 <_Znwm>
 1b8:	mov	x22, x0
 1bc:	str	x22, [x20, #24]
 1c0:	str	x22, [x20, #32]
 1c4:	add	x19, x22, x19
 1c8:	str	x19, [x20, #40]
 1cc:	ldr	x26, [x21, #24]
 1d0:	ldr	x19, [x21, #32]
 1d4:	cmp	x26, x19
 1d8:	b.eq	230 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x230>  // b.none
 1dc:	mov	x23, x26
 1e0:	mov	x25, x22
 1e4:	mov	x1, x23
 1e8:	mov	x0, x25
 1ec:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
 1f0:	add	x25, x25, #0x30
 1f4:	add	x23, x23, #0x30
 1f8:	cmp	x19, x23
 1fc:	b.ne	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x1e4>  // b.any
 200:	sub	x0, x19, #0x30
 204:	sub	x0, x0, x26
 208:	lsr	x0, x0, #4
 20c:	mov	x1, #0xaaab                	// #43691
 210:	movk	x1, #0xaaaa, lsl #16
 214:	movk	x1, #0xaaaa, lsl #32
 218:	movk	x1, #0xaaa, lsl #48
 21c:	mul	x0, x0, x1
 220:	and	x0, x0, #0xfffffffffffffff
 224:	add	x0, x0, #0x1
 228:	add	x0, x0, x0, lsl #1
 22c:	add	x22, x22, x0, lsl #4
 230:	str	x22, [x20, #32]
 234:	add	x21, x21, #0x30
 238:	add	x20, x20, #0x30
 23c:	cmp	x28, x21
 240:	b.eq	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x278>  // b.none
 244:	ldr	x0, [x21]
 248:	str	x0, [x20]
 24c:	ldr	w0, [x21, #16]
 250:	str	w0, [x20, #16]
 254:	cmp	w0, #0x40
 258:	b.ls	16c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x16c>  // b.plast
 25c:	add	x1, x21, #0x8
 260:	add	x0, x20, #0x8
 264:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 268:	b	174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x174>
 26c:	bl	0 <_ZSt17__throw_bad_allocv>
 270:	mov	x22, #0x0                   	// #0
 274:	b	1bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x1bc>
 278:	ldr	x19, [x27]
 27c:	ldr	x22, [x27, #8]
 280:	cmp	x19, x22
 284:	b.ne	29c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x29c>  // b.any
 288:	ldp	x25, x26, [sp, #64]
 28c:	b	2ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2ec>
 290:	add	x19, x19, #0x30
 294:	cmp	x22, x19
 298:	b.eq	2e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2e8>  // b.none
 29c:	ldr	x20, [x19, #24]
 2a0:	ldr	x21, [x19, #32]
 2a4:	cmp	x20, x21
 2a8:	b.eq	2c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2c0>  // b.none
 2ac:	mov	x0, x20
 2b0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm>
 2b4:	add	x20, x20, #0x30
 2b8:	cmp	x21, x20
 2bc:	b.ne	2ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2ac>  // b.any
 2c0:	ldr	x0, [x19, #24]
 2c4:	cbz	x0, 2cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2cc>
 2c8:	bl	0 <_ZdlPv>
 2cc:	ldr	w0, [x19, #16]
 2d0:	cmp	w0, #0x40
 2d4:	b.ls	290 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x290>  // b.plast
 2d8:	ldr	x0, [x19, #8]
 2dc:	cbz	x0, 290 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x290>
 2e0:	bl	0 <_ZdaPv>
 2e4:	b	290 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x290>
 2e8:	ldp	x25, x26, [sp, #64]
 2ec:	ldr	x0, [x27]
 2f0:	cbz	x0, 2f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0x2f8>
 2f4:	bl	0 <_ZdlPv>
 2f8:	ldr	x0, [sp, #112]
 2fc:	str	x0, [x27]
 300:	ldr	x1, [sp, #104]
 304:	add	x24, x24, x1
 308:	add	x24, x24, x24, lsl #1
 30c:	add	x24, x0, x24, lsl #4
 310:	str	x24, [x27, #8]
 314:	ldr	x1, [sp, #120]
 318:	add	x0, x0, x1
 31c:	str	x0, [x27, #16]
 320:	ldp	x21, x22, [sp, #32]
 324:	b	a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_default_appendEm+0xa4>
 328:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	stp	x23, x24, [sp, #48]
  10:	mov	x22, x0
  14:	ldr	x23, [x0, #8]
  18:	ldr	x21, [x0]
  1c:	sub	x2, x23, x21
  20:	asr	x2, x2, #4
  24:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  28:	movk	x0, #0xaaab
  2c:	mul	x2, x2, x0
  30:	cmp	x1, x2
  34:	b.hi	58 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x58>  // b.pmore
  38:	b.cs	64 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x64>  // b.hs, b.nlast
  3c:	add	x1, x1, x1, lsl #1
  40:	add	x21, x21, x1, lsl #4
  44:	cmp	x21, x23
  48:	b.eq	64 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x64>  // b.none
  4c:	stp	x19, x20, [sp, #16]
  50:	mov	x19, x21
  54:	b	80 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x80>
  58:	sub	x1, x1, x2
  5c:	mov	x0, x22
  60:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>
  64:	ldp	x21, x22, [sp, #32]
  68:	ldp	x23, x24, [sp, #48]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	add	x19, x19, #0x30
  78:	cmp	x23, x19
  7c:	b.eq	cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0xcc>  // b.none
  80:	ldr	x20, [x19, #24]
  84:	ldr	x24, [x19, #32]
  88:	cmp	x20, x24
  8c:	b.eq	a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0xa4>  // b.none
  90:	mov	x0, x20
  94:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm>
  98:	add	x20, x20, #0x30
  9c:	cmp	x24, x20
  a0:	b.ne	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x90>  // b.any
  a4:	ldr	x0, [x19, #24]
  a8:	cbz	x0, b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0xb0>
  ac:	bl	0 <_ZdlPv>
  b0:	ldr	w0, [x19, #16]
  b4:	cmp	w0, #0x40
  b8:	b.ls	74 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x74>  // b.plast
  bc:	ldr	x0, [x19, #8]
  c0:	cbz	x0, 74 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x74>
  c4:	bl	0 <_ZdaPv>
  c8:	b	74 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x74>
  cc:	str	x21, [x22, #8]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	b	64 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE6resizeEm+0x64>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	str	x0, [sp, #136]
  20:	str	x1, [sp, #112]
  24:	mov	x21, x1
  28:	ldr	x27, [x0, #8]
  2c:	ldr	x0, [x0]
  30:	str	x0, [sp, #104]
  34:	sub	x0, x27, x0
  38:	asr	x0, x0, #4
  3c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40:	movk	x1, #0xaaab
  44:	mul	x0, x0, x1
  48:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4c:	movk	x1, #0x2aa, lsl #48
  50:	cmp	x0, x1
  54:	b.eq	d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xd4>  // b.none
  58:	mov	x19, x2
  5c:	cmp	x0, #0x0
  60:	csinc	x1, x0, xzr, ne  // ne = any
  64:	adds	x0, x1, x0
  68:	b.cs	3bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3bc>  // b.hs, b.nlast
  6c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  70:	movk	x1, #0x2aa, lsl #48
  74:	cmp	x0, x1
  78:	csel	x1, x0, x1, ls  // ls = plast
  7c:	str	x1, [sp, #128]
  80:	ldr	x1, [sp, #112]
  84:	ldr	x2, [sp, #104]
  88:	sub	x20, x1, x2
  8c:	str	xzr, [sp, #120]
  90:	cbz	x0, a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa8>
  94:	ldr	x0, [sp, #128]
  98:	add	x0, x0, x0, lsl #1
  9c:	lsl	x0, x0, #4
  a0:	bl	0 <_Znwm>
  a4:	str	x0, [sp, #120]
  a8:	mov	x1, x19
  ac:	ldr	x19, [sp, #120]
  b0:	add	x0, x19, x20
  b4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  b8:	ldr	x0, [sp, #112]
  bc:	ldr	x22, [sp, #104]
  c0:	cmp	x0, x22
  c4:	b.eq	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1e4>  // b.none
  c8:	mov	x28, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  cc:	movk	x28, #0xaaab
  d0:	b	1b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1b4>
  d4:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  d8:	add	x0, x0, #0x0
  dc:	bl	0 <_ZSt20__throw_length_errorPKc>
  e0:	add	x1, x22, #0x8
  e4:	add	x0, x19, #0x8
  e8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  ec:	ldr	x20, [x22, #32]
  f0:	ldr	x0, [x22, #24]
  f4:	sub	x20, x20, x0
  f8:	asr	x0, x20, #4
  fc:	mul	x0, x0, x28
 100:	str	xzr, [x19, #24]
 104:	str	xzr, [x19, #32]
 108:	str	xzr, [x19, #40]
 10c:	cbz	x0, 1dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1dc>
 110:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 114:	movk	x1, #0x2aa, lsl #48
 118:	cmp	x0, x1
 11c:	b.hi	1d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1d8>  // b.pmore
 120:	mov	x0, x20
 124:	bl	0 <_Znwm>
 128:	mov	x23, x0
 12c:	str	x23, [x19, #24]
 130:	str	x23, [x19, #32]
 134:	add	x20, x23, x20
 138:	str	x20, [x19, #40]
 13c:	ldr	x26, [x22, #24]
 140:	ldr	x20, [x22, #32]
 144:	cmp	x26, x20
 148:	b.eq	1a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1a0>  // b.none
 14c:	mov	x24, x26
 150:	mov	x25, x23
 154:	mov	x1, x24
 158:	mov	x0, x25
 15c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 160:	add	x25, x25, #0x30
 164:	add	x24, x24, #0x30
 168:	cmp	x20, x24
 16c:	b.ne	154 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x154>  // b.any
 170:	sub	x0, x20, #0x30
 174:	sub	x0, x0, x26
 178:	lsr	x0, x0, #4
 17c:	mov	x1, #0xaaab                	// #43691
 180:	movk	x1, #0xaaaa, lsl #16
 184:	movk	x1, #0xaaaa, lsl #32
 188:	movk	x1, #0xaaa, lsl #48
 18c:	mul	x0, x0, x1
 190:	and	x0, x0, #0xfffffffffffffff
 194:	add	x0, x0, #0x1
 198:	add	x0, x0, x0, lsl #1
 19c:	add	x23, x23, x0, lsl #4
 1a0:	str	x23, [x19, #32]
 1a4:	add	x22, x22, #0x30
 1a8:	add	x19, x19, #0x30
 1ac:	cmp	x21, x22
 1b0:	b.eq	1e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1e8>  // b.none
 1b4:	ldr	x0, [x22]
 1b8:	str	x0, [x19]
 1bc:	ldr	w0, [x22, #16]
 1c0:	str	w0, [x19, #16]
 1c4:	cmp	w0, #0x40
 1c8:	b.hi	e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe0>  // b.pmore
 1cc:	ldr	x0, [x22, #8]
 1d0:	str	x0, [x19, #8]
 1d4:	b	ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>
 1d8:	bl	0 <_ZSt17__throw_bad_allocv>
 1dc:	mov	x23, #0x0                   	// #0
 1e0:	b	12c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x12c>
 1e4:	ldr	x19, [sp, #120]
 1e8:	add	x19, x19, #0x30
 1ec:	ldr	x0, [sp, #112]
 1f0:	cmp	x0, x27
 1f4:	b.eq	214 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x214>  // b.none
 1f8:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1fc:	movk	x26, #0xaaab
 200:	mov	x28, #0xaaab                	// #43691
 204:	movk	x28, #0xaaaa, lsl #16
 208:	movk	x28, #0xaaaa, lsl #32
 20c:	movk	x28, #0xaaa, lsl #48
 210:	b	2e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2e8>
 214:	ldr	x0, [sp, #104]
 218:	cmp	x27, x0
 21c:	b.eq	374 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x374>  // b.none
 220:	mov	x20, x0
 224:	b	328 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x328>
 228:	ldr	x0, [x21, #8]
 22c:	str	x0, [x19, #8]
 230:	ldr	x20, [x21, #32]
 234:	ldr	x0, [x21, #24]
 238:	sub	x20, x20, x0
 23c:	asr	x0, x20, #4
 240:	mul	x0, x0, x26
 244:	str	xzr, [x19, #24]
 248:	str	xzr, [x19, #32]
 24c:	str	xzr, [x19, #40]
 250:	cbz	x0, 314 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x314>
 254:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 258:	movk	x1, #0x2aa, lsl #48
 25c:	cmp	x0, x1
 260:	b.hi	310 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x310>  // b.pmore
 264:	mov	x0, x20
 268:	bl	0 <_Znwm>
 26c:	mov	x22, x0
 270:	str	x22, [x19, #24]
 274:	str	x22, [x19, #32]
 278:	add	x20, x22, x20
 27c:	str	x20, [x19, #40]
 280:	ldr	x25, [x21, #24]
 284:	ldr	x20, [x21, #32]
 288:	cmp	x25, x20
 28c:	b.eq	2d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2d4>  // b.none
 290:	mov	x23, x25
 294:	mov	x24, x22
 298:	mov	x1, x23
 29c:	mov	x0, x24
 2a0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 2a4:	add	x24, x24, #0x30
 2a8:	add	x23, x23, #0x30
 2ac:	cmp	x20, x23
 2b0:	b.ne	298 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x298>  // b.any
 2b4:	sub	x0, x20, #0x30
 2b8:	sub	x0, x0, x25
 2bc:	lsr	x0, x0, #4
 2c0:	mul	x0, x0, x28
 2c4:	and	x0, x0, #0xfffffffffffffff
 2c8:	add	x0, x0, #0x1
 2cc:	add	x0, x0, x0, lsl #1
 2d0:	add	x22, x22, x0, lsl #4
 2d4:	str	x22, [x19, #32]
 2d8:	add	x21, x21, #0x30
 2dc:	add	x19, x19, #0x30
 2e0:	cmp	x21, x27
 2e4:	b.eq	214 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x214>  // b.none
 2e8:	ldr	x0, [x21]
 2ec:	str	x0, [x19]
 2f0:	ldr	w0, [x21, #16]
 2f4:	str	w0, [x19, #16]
 2f8:	cmp	w0, #0x40
 2fc:	b.ls	228 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x228>  // b.plast
 300:	add	x1, x21, #0x8
 304:	add	x0, x19, #0x8
 308:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 30c:	b	230 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x230>
 310:	bl	0 <_ZSt17__throw_bad_allocv>
 314:	mov	x22, #0x0                   	// #0
 318:	b	270 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x270>
 31c:	add	x20, x20, #0x30
 320:	cmp	x20, x27
 324:	b.eq	374 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x374>  // b.none
 328:	ldr	x21, [x20, #24]
 32c:	ldr	x22, [x20, #32]
 330:	cmp	x21, x22
 334:	b.eq	34c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x34c>  // b.none
 338:	mov	x0, x21
 33c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 340:	add	x21, x21, #0x30
 344:	cmp	x22, x21
 348:	b.ne	338 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x338>  // b.any
 34c:	ldr	x0, [x20, #24]
 350:	cbz	x0, 358 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x358>
 354:	bl	0 <_ZdlPv>
 358:	ldr	w0, [x20, #16]
 35c:	cmp	w0, #0x40
 360:	b.ls	31c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x31c>  // b.plast
 364:	ldr	x0, [x20, #8]
 368:	cbz	x0, 31c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x31c>
 36c:	bl	0 <_ZdaPv>
 370:	b	31c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x31c>
 374:	ldr	x0, [sp, #104]
 378:	cbz	x0, 380 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x380>
 37c:	bl	0 <_ZdlPv>
 380:	ldr	x1, [sp, #136]
 384:	ldr	x2, [sp, #120]
 388:	str	x2, [x1]
 38c:	str	x19, [x1, #8]
 390:	ldr	x0, [sp, #128]
 394:	add	x0, x0, x0, lsl #1
 398:	add	x0, x2, x0, lsl #4
 39c:	str	x0, [x1, #16]
 3a0:	ldp	x19, x20, [sp, #16]
 3a4:	ldp	x21, x22, [sp, #32]
 3a8:	ldp	x23, x24, [sp, #48]
 3ac:	ldp	x25, x26, [sp, #64]
 3b0:	ldp	x27, x28, [sp, #80]
 3b4:	ldp	x29, x30, [sp], #144
 3b8:	ret
 3bc:	ldr	x0, [sp, #112]
 3c0:	ldr	x1, [sp, #104]
 3c4:	sub	x20, x0, x1
 3c8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 3cc:	movk	x0, #0x2aa, lsl #48
 3d0:	str	x0, [sp, #128]
 3d4:	b	94 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x94>

Disassembly of section .text._ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x25, x26, [sp, #64]
   c:	stp	x27, x28, [sp, #80]
  10:	str	x0, [sp, #104]
  14:	ldr	x26, [x0, #8]
  18:	ldr	x28, [x0]
  1c:	sub	x0, x26, x28
  20:	mov	x2, #0xffffffffffffff      	// #72057594037927935
  24:	cmp	x2, x0, asr #7
  28:	b.eq	d4 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xd4>  // b.none
  2c:	stp	x19, x20, [sp, #16]
  30:	stp	x21, x22, [sp, #32]
  34:	mov	x25, x1
  38:	asr	x1, x0, #7
  3c:	cmp	x1, #0x0
  40:	csinc	x0, x1, xzr, ne  // ne = any
  44:	adds	x0, x0, x1
  48:	b.cs	3a4 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3a4>  // b.hs, b.nlast
  4c:	mov	x27, #0xffffffffffffff      	// #72057594037927935
  50:	cmp	x0, x27
  54:	csel	x1, x0, x27, ls  // ls = plast
  58:	str	x1, [sp, #96]
  5c:	sub	x19, x25, x28
  60:	mov	x27, #0x0                   	// #0
  64:	cbz	x0, 78 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x78>
  68:	ldr	x0, [sp, #96]
  6c:	lsl	x0, x0, #7
  70:	bl	0 <_Znwm>
  74:	mov	x27, x0
  78:	add	x0, x27, x19
  7c:	str	xzr, [x27, x19]
  80:	str	xzr, [x0, #8]
  84:	str	xzr, [x0, #16]
  88:	str	xzr, [x0, #24]
  8c:	add	x1, x0, #0x28
  90:	str	wzr, [x0, #40]
  94:	str	xzr, [x0, #48]
  98:	str	x1, [x1, #16]
  9c:	str	x1, [x1, #24]
  a0:	str	xzr, [x1, #32]
  a4:	str	xzr, [x0, #80]
  a8:	str	xzr, [x0, #88]
  ac:	str	xzr, [x0, #96]
  b0:	str	xzr, [x0, #104]
  b4:	str	xzr, [x0, #112]
  b8:	str	xzr, [x0, #120]
  bc:	cmp	x25, x28
  c0:	b.eq	270 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x270>  // b.none
  c4:	stp	x23, x24, [sp, #48]
  c8:	mov	x20, x27
  cc:	mov	x19, x28
  d0:	b	188 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x188>
  d4:	stp	x19, x20, [sp, #16]
  d8:	stp	x21, x22, [sp, #32]
  dc:	stp	x23, x24, [sp, #48]
  e0:	adrp	x0, 0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  e4:	add	x0, x0, #0x0
  e8:	bl	0 <_ZSt20__throw_length_errorPKc>
  ec:	str	wzr, [x20, #40]
  f0:	str	xzr, [x20, #48]
  f4:	add	x0, x20, #0x28
  f8:	str	x0, [x20, #56]
  fc:	str	x0, [x20, #64]
 100:	str	xzr, [x20, #72]
 104:	b	1f0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1f0>
 108:	bl	0 <_ZdaPv>
 10c:	add	x21, x21, #0x30
 110:	cmp	x24, x21
 114:	b.eq	160 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x160>  // b.none
 118:	ldr	x22, [x21, #24]
 11c:	ldr	x23, [x21, #32]
 120:	cmp	x22, x23
 124:	b.eq	13c <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x13c>  // b.none
 128:	mov	x0, x22
 12c:	bl	0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 130:	add	x22, x22, #0x30
 134:	cmp	x23, x22
 138:	b.ne	128 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x128>  // b.any
 13c:	ldr	x0, [x21, #24]
 140:	cbz	x0, 148 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x148>
 144:	bl	0 <_ZdlPv>
 148:	ldr	w0, [x21, #16]
 14c:	cmp	w0, #0x40
 150:	b.ls	10c <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x10c>  // b.plast
 154:	ldr	x0, [x21, #8]
 158:	cbnz	x0, 108 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x108>
 15c:	b	10c <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x10c>
 160:	ldr	x0, [x19, #80]
 164:	cbz	x0, 16c <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x16c>
 168:	bl	0 <_ZdlPv>
 16c:	ldr	x1, [x19, #48]
 170:	add	x0, x19, #0x20
 174:	bl	0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 178:	add	x19, x19, #0x80
 17c:	add	x20, x20, #0x80
 180:	cmp	x25, x19
 184:	b.eq	24c <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x24c>  // b.none
 188:	ldr	x0, [x19]
 18c:	str	x0, [x20]
 190:	ldr	x0, [x19, #8]
 194:	str	x0, [x20, #8]
 198:	ldr	x0, [x19, #16]
 19c:	str	x0, [x20, #16]
 1a0:	ldr	x0, [x19, #24]
 1a4:	str	x0, [x20, #24]
 1a8:	ldr	x0, [x19, #48]
 1ac:	cbz	x0, ec <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>
 1b0:	ldr	w1, [x19, #40]
 1b4:	str	w1, [x20, #40]
 1b8:	str	x0, [x20, #48]
 1bc:	ldr	x1, [x19, #56]
 1c0:	str	x1, [x20, #56]
 1c4:	ldr	x1, [x19, #64]
 1c8:	str	x1, [x20, #64]
 1cc:	add	x1, x20, #0x28
 1d0:	str	x1, [x0, #8]
 1d4:	ldr	x0, [x19, #72]
 1d8:	str	x0, [x20, #72]
 1dc:	str	xzr, [x19, #48]
 1e0:	add	x0, x19, #0x28
 1e4:	str	x0, [x19, #56]
 1e8:	str	x0, [x19, #64]
 1ec:	str	xzr, [x19, #72]
 1f0:	ldr	x0, [x19, #80]
 1f4:	str	x0, [x20, #80]
 1f8:	ldr	x0, [x19, #88]
 1fc:	str	x0, [x20, #88]
 200:	ldr	x0, [x19, #96]
 204:	str	x0, [x20, #96]
 208:	str	xzr, [x19, #96]
 20c:	str	xzr, [x19, #88]
 210:	str	xzr, [x19, #80]
 214:	ldr	x0, [x19, #104]
 218:	str	x0, [x20, #104]
 21c:	ldr	x0, [x19, #112]
 220:	str	x0, [x20, #112]
 224:	ldr	x0, [x19, #120]
 228:	str	x0, [x20, #120]
 22c:	str	xzr, [x19, #120]
 230:	str	xzr, [x19, #112]
 234:	str	xzr, [x19, #104]
 238:	ldr	x21, [x19, #80]
 23c:	ldr	x24, [x19, #88]
 240:	cmp	x21, x24
 244:	b.ne	118 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x118>  // b.any
 248:	b	160 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x160>
 24c:	sub	x21, x25, x28
 250:	add	x21, x27, x21
 254:	ldp	x23, x24, [sp, #48]
 258:	add	x21, x21, #0x80
 25c:	cmp	x25, x26
 260:	b.eq	368 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x368>  // b.none
 264:	mov	x19, x25
 268:	mov	x20, x21
 26c:	b	31c <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x31c>
 270:	mov	x21, x27
 274:	b	258 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x258>
 278:	ldr	w1, [x19, #40]
 27c:	str	w1, [x20, #40]
 280:	str	x0, [x20, #48]
 284:	ldr	x1, [x19, #56]
 288:	str	x1, [x20, #56]
 28c:	ldr	x1, [x19, #64]
 290:	str	x1, [x20, #64]
 294:	add	x1, x20, #0x28
 298:	str	x1, [x0, #8]
 29c:	ldr	x0, [x19, #72]
 2a0:	str	x0, [x20, #72]
 2a4:	str	xzr, [x19, #48]
 2a8:	add	x0, x19, #0x28
 2ac:	str	x0, [x19, #56]
 2b0:	str	x0, [x19, #64]
 2b4:	str	xzr, [x19, #72]
 2b8:	ldr	x0, [x19, #80]
 2bc:	str	x0, [x20, #80]
 2c0:	ldr	x0, [x19, #88]
 2c4:	str	x0, [x20, #88]
 2c8:	ldr	x0, [x19, #96]
 2cc:	str	x0, [x20, #96]
 2d0:	str	xzr, [x19, #96]
 2d4:	str	xzr, [x19, #88]
 2d8:	str	xzr, [x19, #80]
 2dc:	ldr	x0, [x19, #104]
 2e0:	str	x0, [x20, #104]
 2e4:	ldr	x0, [x19, #112]
 2e8:	str	x0, [x20, #112]
 2ec:	ldr	x0, [x19, #120]
 2f0:	str	x0, [x20, #120]
 2f4:	str	xzr, [x19, #120]
 2f8:	str	xzr, [x19, #112]
 2fc:	str	xzr, [x19, #104]
 300:	ldr	x1, [x19, #48]
 304:	add	x0, x19, #0x20
 308:	bl	0 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 30c:	add	x19, x19, #0x80
 310:	add	x20, x20, #0x80
 314:	cmp	x19, x26
 318:	b.eq	360 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x360>  // b.none
 31c:	ldr	x0, [x19]
 320:	str	x0, [x20]
 324:	ldr	x0, [x19, #8]
 328:	str	x0, [x20, #8]
 32c:	ldr	x0, [x19, #16]
 330:	str	x0, [x20, #16]
 334:	ldr	x0, [x19, #24]
 338:	str	x0, [x20, #24]
 33c:	ldr	x0, [x19, #48]
 340:	cbnz	x0, 278 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x278>
 344:	str	wzr, [x20, #40]
 348:	str	xzr, [x20, #48]
 34c:	add	x0, x20, #0x28
 350:	str	x0, [x20, #56]
 354:	str	x0, [x20, #64]
 358:	str	xzr, [x20, #72]
 35c:	b	2b8 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2b8>
 360:	sub	x25, x26, x25
 364:	add	x21, x21, x25
 368:	cbz	x28, 374 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x374>
 36c:	mov	x0, x28
 370:	bl	0 <_ZdlPv>
 374:	ldr	x0, [sp, #104]
 378:	str	x27, [x0]
 37c:	str	x21, [x0, #8]
 380:	ldr	x1, [sp, #96]
 384:	add	x27, x27, x1, lsl #7
 388:	str	x27, [x0, #16]
 38c:	ldp	x19, x20, [sp, #16]
 390:	ldp	x21, x22, [sp, #32]
 394:	ldp	x25, x26, [sp, #64]
 398:	ldp	x27, x28, [sp, #80]
 39c:	ldp	x29, x30, [sp], #112
 3a0:	ret
 3a4:	sub	x19, x25, x28
 3a8:	mov	x0, #0xffffffffffffff      	// #72057594037927935
 3ac:	str	x0, [sp, #96]
 3b0:	b	68 <_ZNSt6vectorIN4llvm16ExecutionContextESaIS1_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x68>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	str	x0, [sp, #136]
  20:	str	x1, [sp, #112]
  24:	mov	x21, x1
  28:	ldr	x27, [x0, #8]
  2c:	ldr	x0, [x0]
  30:	str	x0, [sp, #104]
  34:	sub	x0, x27, x0
  38:	asr	x0, x0, #4
  3c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40:	movk	x1, #0xaaab
  44:	mul	x0, x0, x1
  48:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4c:	movk	x1, #0x2aa, lsl #48
  50:	cmp	x0, x1
  54:	b.eq	118 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x118>  // b.none
  58:	mov	x19, x2
  5c:	cmp	x0, #0x0
  60:	csinc	x1, x0, xzr, ne  // ne = any
  64:	adds	x0, x1, x0
  68:	b.cs	400 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x400>  // b.hs, b.nlast
  6c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  70:	movk	x1, #0x2aa, lsl #48
  74:	cmp	x0, x1
  78:	csel	x1, x0, x1, ls  // ls = plast
  7c:	str	x1, [sp, #128]
  80:	ldr	x1, [sp, #112]
  84:	ldr	x2, [sp, #104]
  88:	sub	x20, x1, x2
  8c:	str	xzr, [sp, #120]
  90:	cbz	x0, a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa8>
  94:	ldr	x0, [sp, #128]
  98:	add	x0, x0, x0, lsl #1
  9c:	lsl	x0, x0, #4
  a0:	bl	0 <_Znwm>
  a4:	str	x0, [sp, #120]
  a8:	ldr	x4, [sp, #120]
  ac:	add	x1, x4, x20
  b0:	mov	x0, x19
  b4:	ldr	x2, [x0], #8
  b8:	str	x2, [x4, x20]
  bc:	ldr	w2, [x0, #8]
  c0:	str	w2, [x1, #16]
  c4:	ldr	x2, [x19, #8]
  c8:	str	x2, [x1, #8]
  cc:	str	wzr, [x0, #8]
  d0:	add	x2, x1, #0x18
  d4:	ldr	x3, [x19, #24]
  d8:	str	x3, [x1, #24]
  dc:	ldr	x1, [x19, #32]
  e0:	str	x1, [x2, #8]
  e4:	ldr	x1, [x19, #40]
  e8:	str	x1, [x2, #16]
  ec:	str	xzr, [x19, #40]
  f0:	str	xzr, [x19, #32]
  f4:	str	xzr, [x19, #24]
  f8:	ldr	x0, [sp, #112]
  fc:	ldr	x22, [sp, #104]
 100:	cmp	x0, x22
 104:	b.eq	228 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x228>  // b.none
 108:	mov	x19, x4
 10c:	mov	x28, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 110:	movk	x28, #0xaaab
 114:	b	1f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1f8>
 118:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 11c:	add	x0, x0, #0x0
 120:	bl	0 <_ZSt20__throw_length_errorPKc>
 124:	add	x1, x22, #0x8
 128:	add	x0, x19, #0x8
 12c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 130:	ldr	x20, [x22, #32]
 134:	ldr	x0, [x22, #24]
 138:	sub	x20, x20, x0
 13c:	asr	x0, x20, #4
 140:	mul	x0, x0, x28
 144:	str	xzr, [x19, #24]
 148:	str	xzr, [x19, #32]
 14c:	str	xzr, [x19, #40]
 150:	cbz	x0, 220 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x220>
 154:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 158:	movk	x1, #0x2aa, lsl #48
 15c:	cmp	x0, x1
 160:	b.hi	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x21c>  // b.pmore
 164:	mov	x0, x20
 168:	bl	0 <_Znwm>
 16c:	mov	x23, x0
 170:	str	x23, [x19, #24]
 174:	str	x23, [x19, #32]
 178:	add	x20, x23, x20
 17c:	str	x20, [x19, #40]
 180:	ldr	x26, [x22, #24]
 184:	ldr	x20, [x22, #32]
 188:	cmp	x26, x20
 18c:	b.eq	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1e4>  // b.none
 190:	mov	x24, x26
 194:	mov	x25, x23
 198:	mov	x1, x24
 19c:	mov	x0, x25
 1a0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 1a4:	add	x25, x25, #0x30
 1a8:	add	x24, x24, #0x30
 1ac:	cmp	x20, x24
 1b0:	b.ne	198 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x198>  // b.any
 1b4:	sub	x0, x20, #0x30
 1b8:	sub	x0, x0, x26
 1bc:	lsr	x0, x0, #4
 1c0:	mov	x1, #0xaaab                	// #43691
 1c4:	movk	x1, #0xaaaa, lsl #16
 1c8:	movk	x1, #0xaaaa, lsl #32
 1cc:	movk	x1, #0xaaa, lsl #48
 1d0:	mul	x0, x0, x1
 1d4:	and	x0, x0, #0xfffffffffffffff
 1d8:	add	x0, x0, #0x1
 1dc:	add	x0, x0, x0, lsl #1
 1e0:	add	x23, x23, x0, lsl #4
 1e4:	str	x23, [x19, #32]
 1e8:	add	x22, x22, #0x30
 1ec:	add	x19, x19, #0x30
 1f0:	cmp	x21, x22
 1f4:	b.eq	22c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x22c>  // b.none
 1f8:	ldr	x0, [x22]
 1fc:	str	x0, [x19]
 200:	ldr	w0, [x22, #16]
 204:	str	w0, [x19, #16]
 208:	cmp	w0, #0x40
 20c:	b.hi	124 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x124>  // b.pmore
 210:	ldr	x0, [x22, #8]
 214:	str	x0, [x19, #8]
 218:	b	130 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x130>
 21c:	bl	0 <_ZSt17__throw_bad_allocv>
 220:	mov	x23, #0x0                   	// #0
 224:	b	170 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x170>
 228:	ldr	x19, [sp, #120]
 22c:	add	x19, x19, #0x30
 230:	ldr	x0, [sp, #112]
 234:	cmp	x0, x27
 238:	b.eq	258 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x258>  // b.none
 23c:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 240:	movk	x26, #0xaaab
 244:	mov	x28, #0xaaab                	// #43691
 248:	movk	x28, #0xaaaa, lsl #16
 24c:	movk	x28, #0xaaaa, lsl #32
 250:	movk	x28, #0xaaa, lsl #48
 254:	b	32c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x32c>
 258:	ldr	x0, [sp, #104]
 25c:	cmp	x27, x0
 260:	b.eq	3b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3b8>  // b.none
 264:	mov	x20, x0
 268:	b	36c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x36c>
 26c:	ldr	x0, [x21, #8]
 270:	str	x0, [x19, #8]
 274:	ldr	x20, [x21, #32]
 278:	ldr	x0, [x21, #24]
 27c:	sub	x20, x20, x0
 280:	asr	x0, x20, #4
 284:	mul	x0, x0, x26
 288:	str	xzr, [x19, #24]
 28c:	str	xzr, [x19, #32]
 290:	str	xzr, [x19, #40]
 294:	cbz	x0, 358 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x358>
 298:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 29c:	movk	x1, #0x2aa, lsl #48
 2a0:	cmp	x0, x1
 2a4:	b.hi	354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x354>  // b.pmore
 2a8:	mov	x0, x20
 2ac:	bl	0 <_Znwm>
 2b0:	mov	x22, x0
 2b4:	str	x22, [x19, #24]
 2b8:	str	x22, [x19, #32]
 2bc:	add	x20, x22, x20
 2c0:	str	x20, [x19, #40]
 2c4:	ldr	x25, [x21, #24]
 2c8:	ldr	x20, [x21, #32]
 2cc:	cmp	x25, x20
 2d0:	b.eq	318 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x318>  // b.none
 2d4:	mov	x23, x25
 2d8:	mov	x24, x22
 2dc:	mov	x1, x23
 2e0:	mov	x0, x24
 2e4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 2e8:	add	x24, x24, #0x30
 2ec:	add	x23, x23, #0x30
 2f0:	cmp	x20, x23
 2f4:	b.ne	2dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2dc>  // b.any
 2f8:	sub	x0, x20, #0x30
 2fc:	sub	x0, x0, x25
 300:	lsr	x0, x0, #4
 304:	mul	x0, x0, x28
 308:	and	x0, x0, #0xfffffffffffffff
 30c:	add	x0, x0, #0x1
 310:	add	x0, x0, x0, lsl #1
 314:	add	x22, x22, x0, lsl #4
 318:	str	x22, [x19, #32]
 31c:	add	x21, x21, #0x30
 320:	add	x19, x19, #0x30
 324:	cmp	x21, x27
 328:	b.eq	258 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x258>  // b.none
 32c:	ldr	x0, [x21]
 330:	str	x0, [x19]
 334:	ldr	w0, [x21, #16]
 338:	str	w0, [x19, #16]
 33c:	cmp	w0, #0x40
 340:	b.ls	26c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x26c>  // b.plast
 344:	add	x1, x21, #0x8
 348:	add	x0, x19, #0x8
 34c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 350:	b	274 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x274>
 354:	bl	0 <_ZSt17__throw_bad_allocv>
 358:	mov	x22, #0x0                   	// #0
 35c:	b	2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2b4>
 360:	add	x20, x20, #0x30
 364:	cmp	x20, x27
 368:	b.eq	3b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3b8>  // b.none
 36c:	ldr	x21, [x20, #24]
 370:	ldr	x22, [x20, #32]
 374:	cmp	x21, x22
 378:	b.eq	390 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x390>  // b.none
 37c:	mov	x0, x21
 380:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 384:	add	x21, x21, #0x30
 388:	cmp	x22, x21
 38c:	b.ne	37c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x37c>  // b.any
 390:	ldr	x0, [x20, #24]
 394:	cbz	x0, 39c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x39c>
 398:	bl	0 <_ZdlPv>
 39c:	ldr	w0, [x20, #16]
 3a0:	cmp	w0, #0x40
 3a4:	b.ls	360 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x360>  // b.plast
 3a8:	ldr	x0, [x20, #8]
 3ac:	cbz	x0, 360 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x360>
 3b0:	bl	0 <_ZdaPv>
 3b4:	b	360 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x360>
 3b8:	ldr	x0, [sp, #104]
 3bc:	cbz	x0, 3c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3c4>
 3c0:	bl	0 <_ZdlPv>
 3c4:	ldr	x1, [sp, #136]
 3c8:	ldr	x2, [sp, #120]
 3cc:	str	x2, [x1]
 3d0:	str	x19, [x1, #8]
 3d4:	ldr	x0, [sp, #128]
 3d8:	add	x0, x0, x0, lsl #1
 3dc:	add	x0, x2, x0, lsl #4
 3e0:	str	x0, [x1, #16]
 3e4:	ldp	x19, x20, [sp, #16]
 3e8:	ldp	x21, x22, [sp, #32]
 3ec:	ldp	x23, x24, [sp, #48]
 3f0:	ldp	x25, x26, [sp, #64]
 3f4:	ldp	x27, x28, [sp, #80]
 3f8:	ldp	x29, x30, [sp], #144
 3fc:	ret
 400:	ldr	x0, [sp, #112]
 404:	ldr	x1, [sp, #104]
 408:	sub	x20, x0, x1
 40c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 410:	movk	x0, #0x2aa, lsl #48
 414:	str	x0, [sp, #128]
 418:	b	94 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x94>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	70 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x70>  // b.none
  14:	mov	x3, x2
  18:	ldr	x5, [x3], #8
  1c:	mov	x4, x1
  20:	str	x5, [x4], #8
  24:	ldr	w5, [x3, #8]
  28:	str	w5, [x4, #8]
  2c:	ldr	x4, [x2, #8]
  30:	str	x4, [x1, #8]
  34:	str	wzr, [x3, #8]
  38:	add	x4, x1, #0x18
  3c:	ldr	x5, [x2, #24]
  40:	str	x5, [x1, #24]
  44:	ldr	x1, [x2, #32]
  48:	str	x1, [x4, #8]
  4c:	ldr	x1, [x2, #40]
  50:	str	x1, [x4, #16]
  54:	str	xzr, [x2, #40]
  58:	str	xzr, [x2, #32]
  5c:	str	xzr, [x2, #24]
  60:	ldr	x1, [x0, #8]
  64:	add	x1, x1, #0x30
  68:	str	x1, [x0, #8]
  6c:	ret
  70:	stp	x29, x30, [sp, #-16]!
  74:	mov	x29, sp
  78:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  7c:	ldp	x29, x30, [sp], #16
  80:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x25, x26, [sp, #64]
  14:	stp	x27, x28, [sp, #80]
  18:	mov	x27, x0
  1c:	mov	x20, x1
  20:	mov	x26, x2
  24:	sub	x0, x2, x1
  28:	str	x0, [sp, #96]
  2c:	asr	x19, x0, #4
  30:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  34:	movk	x1, #0xaaab
  38:	mul	x19, x19, x1
  3c:	ldr	x22, [x27]
  40:	ldr	x0, [x27, #16]
  44:	sub	x0, x0, x22
  48:	asr	x0, x0, #4
  4c:	mul	x0, x0, x1
  50:	cmp	x19, x0
  54:	b.ls	254 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x254>  // b.plast
  58:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	movk	x0, #0x2aa, lsl #48
  60:	cmp	x19, x0
  64:	b.hi	98 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x98>  // b.pmore
  68:	str	xzr, [sp, #104]
  6c:	cbz	x19, 7c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x7c>
  70:	ldr	x0, [sp, #96]
  74:	bl	0 <_Znwm>
  78:	str	x0, [sp, #104]
  7c:	cmp	x20, x26
  80:	b.eq	1b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1b0>  // b.none
  84:	stp	x23, x24, [sp, #48]
  88:	ldr	x21, [sp, #104]
  8c:	mov	x28, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  90:	movk	x28, #0xaaab
  94:	b	17c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x17c>
  98:	stp	x23, x24, [sp, #48]
  9c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <_ZSt20__throw_length_errorPKc>
  a8:	add	x1, x20, #0x8
  ac:	add	x0, x21, #0x8
  b0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  b4:	ldr	x19, [x20, #32]
  b8:	ldr	x0, [x20, #24]
  bc:	sub	x19, x19, x0
  c0:	asr	x0, x19, #4
  c4:	mul	x0, x0, x28
  c8:	str	xzr, [x21, #24]
  cc:	str	xzr, [x21, #32]
  d0:	str	xzr, [x21, #40]
  d4:	cbz	x0, 1a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1a4>
  d8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  dc:	movk	x1, #0x2aa, lsl #48
  e0:	cmp	x0, x1
  e4:	b.hi	1a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1a0>  // b.pmore
  e8:	mov	x0, x19
  ec:	bl	0 <_Znwm>
  f0:	mov	x22, x0
  f4:	str	x22, [x21, #24]
  f8:	str	x22, [x21, #32]
  fc:	add	x19, x22, x19
 100:	str	x19, [x21, #40]
 104:	ldr	x25, [x20, #24]
 108:	ldr	x19, [x20, #32]
 10c:	cmp	x25, x19
 110:	b.eq	168 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x168>  // b.none
 114:	mov	x23, x25
 118:	mov	x24, x22
 11c:	mov	x1, x23
 120:	mov	x0, x24
 124:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 128:	add	x24, x24, #0x30
 12c:	add	x23, x23, #0x30
 130:	cmp	x19, x23
 134:	b.ne	11c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x11c>  // b.any
 138:	sub	x0, x19, #0x30
 13c:	sub	x0, x0, x25
 140:	lsr	x0, x0, #4
 144:	mov	x1, #0xaaab                	// #43691
 148:	movk	x1, #0xaaaa, lsl #16
 14c:	movk	x1, #0xaaaa, lsl #32
 150:	movk	x1, #0xaaa, lsl #48
 154:	mul	x0, x0, x1
 158:	and	x0, x0, #0xfffffffffffffff
 15c:	add	x0, x0, #0x1
 160:	add	x0, x0, x0, lsl #1
 164:	add	x22, x22, x0, lsl #4
 168:	str	x22, [x21, #32]
 16c:	add	x20, x20, #0x30
 170:	add	x21, x21, #0x30
 174:	cmp	x26, x20
 178:	b.eq	1ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1ac>  // b.none
 17c:	ldr	x0, [x20]
 180:	str	x0, [x21]
 184:	ldr	w0, [x20, #16]
 188:	str	w0, [x21, #16]
 18c:	cmp	w0, #0x40
 190:	b.hi	a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xa8>  // b.pmore
 194:	ldr	x0, [x20, #8]
 198:	str	x0, [x21, #8]
 19c:	b	b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xb4>
 1a0:	bl	0 <_ZSt17__throw_bad_allocv>
 1a4:	mov	x22, #0x0                   	// #0
 1a8:	b	f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xf4>
 1ac:	ldp	x23, x24, [sp, #48]
 1b0:	ldr	x19, [x27]
 1b4:	ldr	x22, [x27, #8]
 1b8:	cmp	x19, x22
 1bc:	b.ne	208 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x208>  // b.any
 1c0:	ldr	x0, [x27]
 1c4:	cbz	x0, 1cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1cc>
 1c8:	bl	0 <_ZdlPv>
 1cc:	ldr	x0, [sp, #104]
 1d0:	str	x0, [x27]
 1d4:	ldr	x1, [sp, #96]
 1d8:	add	x0, x0, x1
 1dc:	str	x0, [x27, #8]
 1e0:	str	x0, [x27, #16]
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x21, x22, [sp, #32]
 1ec:	ldp	x25, x26, [sp, #64]
 1f0:	ldp	x27, x28, [sp, #80]
 1f4:	ldp	x29, x30, [sp], #112
 1f8:	ret
 1fc:	add	x19, x19, #0x30
 200:	cmp	x22, x19
 204:	b.eq	1c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1c0>  // b.none
 208:	ldr	x20, [x19, #24]
 20c:	ldr	x21, [x19, #32]
 210:	cmp	x20, x21
 214:	b.eq	22c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x22c>  // b.none
 218:	mov	x0, x20
 21c:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 220:	add	x20, x20, #0x30
 224:	cmp	x21, x20
 228:	b.ne	218 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x218>  // b.any
 22c:	ldr	x0, [x19, #24]
 230:	cbz	x0, 238 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x238>
 234:	bl	0 <_ZdlPv>
 238:	ldr	w0, [x19, #16]
 23c:	cmp	w0, #0x40
 240:	b.ls	1fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1fc>  // b.plast
 244:	ldr	x0, [x19, #8]
 248:	cbz	x0, 1fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1fc>
 24c:	bl	0 <_ZdaPv>
 250:	b	1fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1fc>
 254:	stp	x23, x24, [sp, #48]
 258:	ldr	x0, [x27, #8]
 25c:	sub	x0, x0, x22
 260:	asr	x23, x0, #4
 264:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 268:	movk	x1, #0xaaab
 26c:	mul	x23, x23, x1
 270:	cmp	x19, x23
 274:	b.ls	294 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x294>  // b.plast
 278:	add	x21, x20, x0
 27c:	cmp	x0, #0x0
 280:	b.le	46c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x46c>
 284:	add	x19, x22, #0x8
 288:	add	x20, x20, #0x8
 28c:	mov	x22, #0xffffffffffffffff    	// #-1
 290:	b	418 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x418>
 294:	ldr	x0, [sp, #96]
 298:	cmp	x0, #0x0
 29c:	b.le	35c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x35c>
 2a0:	add	x21, x22, #0x8
 2a4:	add	x20, x20, #0x8
 2a8:	mov	x23, #0xffffffffffffffff    	// #-1
 2ac:	b	2f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2f4>
 2b0:	mov	w0, w1
 2b4:	add	x0, x0, #0x3f
 2b8:	lsr	x0, x0, #6
 2bc:	sub	w0, w0, #0x1
 2c0:	ldr	x1, [x2, x0, lsl #3]
 2c4:	and	x3, x1, x3
 2c8:	str	x3, [x2, x0, lsl #3]
 2cc:	b	2d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2d4>
 2d0:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 2d4:	add	x1, x20, #0x10
 2d8:	add	x0, x21, #0x10
 2dc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 2e0:	sub	x19, x19, #0x1
 2e4:	add	x21, x21, #0x30
 2e8:	add	x20, x20, #0x30
 2ec:	cmp	x19, #0x0
 2f0:	b.le	348 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x348>
 2f4:	mov	x1, x20
 2f8:	mov	x0, x21
 2fc:	ldur	x2, [x20, #-8]
 300:	stur	x2, [x21, #-8]
 304:	ldr	w2, [x21, #8]
 308:	cmp	w2, #0x40
 30c:	b.hi	2d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2d0>  // b.pmore
 310:	ldr	w2, [x20, #8]
 314:	cmp	w2, #0x40
 318:	b.hi	2d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2d0>  // b.pmore
 31c:	ldr	x2, [x20]
 320:	str	x2, [x21]
 324:	ldr	w1, [x20, #8]
 328:	str	w1, [x21, #8]
 32c:	neg	w3, w1
 330:	lsr	x3, x23, x3
 334:	cmp	w1, #0x40
 338:	b.hi	2b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2b0>  // b.pmore
 33c:	and	x2, x2, x3
 340:	str	x2, [x21]
 344:	b	2d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x2d4>
 348:	ldr	x1, [sp, #96]
 34c:	cmp	x1, #0x0
 350:	mov	x0, #0x30                  	// #48
 354:	csel	x0, x1, x0, gt
 358:	add	x22, x22, x0
 35c:	ldr	x23, [x27, #8]
 360:	cmp	x22, x23
 364:	b.eq	594 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x594>  // b.none
 368:	mov	x20, x22
 36c:	b	37c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x37c>
 370:	add	x20, x20, #0x30
 374:	cmp	x23, x20
 378:	b.eq	3c8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3c8>  // b.none
 37c:	ldr	x19, [x20, #24]
 380:	ldr	x21, [x20, #32]
 384:	cmp	x19, x21
 388:	b.eq	3a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3a0>  // b.none
 38c:	mov	x0, x19
 390:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 394:	add	x19, x19, #0x30
 398:	cmp	x21, x19
 39c:	b.ne	38c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x38c>  // b.any
 3a0:	ldr	x0, [x20, #24]
 3a4:	cbz	x0, 3ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3ac>
 3a8:	bl	0 <_ZdlPv>
 3ac:	ldr	w0, [x20, #16]
 3b0:	cmp	w0, #0x40
 3b4:	b.ls	370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x370>  // b.plast
 3b8:	ldr	x0, [x20, #8]
 3bc:	cbz	x0, 370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x370>
 3c0:	bl	0 <_ZdaPv>
 3c4:	b	370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x370>
 3c8:	str	x22, [x27, #8]
 3cc:	ldp	x23, x24, [sp, #48]
 3d0:	b	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1e4>
 3d4:	mov	w0, w1
 3d8:	add	x0, x0, #0x3f
 3dc:	lsr	x0, x0, #6
 3e0:	sub	w0, w0, #0x1
 3e4:	ldr	x1, [x2, x0, lsl #3]
 3e8:	and	x3, x1, x3
 3ec:	str	x3, [x2, x0, lsl #3]
 3f0:	b	3f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3f8>
 3f4:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 3f8:	add	x1, x20, #0x10
 3fc:	add	x0, x19, #0x10
 400:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 404:	sub	x23, x23, #0x1
 408:	add	x19, x19, #0x30
 40c:	add	x20, x20, #0x30
 410:	cmp	x23, #0x0
 414:	b.le	46c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x46c>
 418:	mov	x1, x20
 41c:	mov	x0, x19
 420:	ldur	x2, [x20, #-8]
 424:	stur	x2, [x19, #-8]
 428:	ldr	w2, [x19, #8]
 42c:	cmp	w2, #0x40
 430:	b.hi	3f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3f4>  // b.pmore
 434:	ldr	w2, [x20, #8]
 438:	cmp	w2, #0x40
 43c:	b.hi	3f4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3f4>  // b.pmore
 440:	ldr	x2, [x20]
 444:	str	x2, [x19]
 448:	ldr	w1, [x20, #8]
 44c:	str	w1, [x19, #8]
 450:	neg	w3, w1
 454:	lsr	x3, x22, x3
 458:	cmp	w1, #0x40
 45c:	b.hi	3d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3d4>  // b.pmore
 460:	and	x2, x2, x3
 464:	str	x2, [x19]
 468:	b	3f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x3f8>
 46c:	ldr	x20, [x27, #8]
 470:	cmp	x26, x21
 474:	b.eq	588 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x588>  // b.none
 478:	mov	x28, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 47c:	movk	x28, #0xaaab
 480:	b	558 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x558>
 484:	add	x1, x21, #0x8
 488:	add	x0, x20, #0x8
 48c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 490:	ldr	x19, [x21, #32]
 494:	ldr	x0, [x21, #24]
 498:	sub	x19, x19, x0
 49c:	asr	x0, x19, #4
 4a0:	mul	x0, x0, x28
 4a4:	str	xzr, [x20, #24]
 4a8:	str	xzr, [x20, #32]
 4ac:	str	xzr, [x20, #40]
 4b0:	cbz	x0, 580 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x580>
 4b4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 4b8:	movk	x1, #0x2aa, lsl #48
 4bc:	cmp	x0, x1
 4c0:	b.hi	57c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x57c>  // b.pmore
 4c4:	mov	x0, x19
 4c8:	bl	0 <_Znwm>
 4cc:	mov	x22, x0
 4d0:	str	x22, [x20, #24]
 4d4:	str	x22, [x20, #32]
 4d8:	add	x19, x22, x19
 4dc:	str	x19, [x20, #40]
 4e0:	ldr	x25, [x21, #24]
 4e4:	ldr	x19, [x21, #32]
 4e8:	cmp	x25, x19
 4ec:	b.eq	544 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x544>  // b.none
 4f0:	mov	x23, x25
 4f4:	mov	x24, x22
 4f8:	mov	x1, x23
 4fc:	mov	x0, x24
 500:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
 504:	add	x24, x24, #0x30
 508:	add	x23, x23, #0x30
 50c:	cmp	x19, x23
 510:	b.ne	4f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4f8>  // b.any
 514:	sub	x0, x19, #0x30
 518:	sub	x0, x0, x25
 51c:	lsr	x0, x0, #4
 520:	mov	x1, #0xaaab                	// #43691
 524:	movk	x1, #0xaaaa, lsl #16
 528:	movk	x1, #0xaaaa, lsl #32
 52c:	movk	x1, #0xaaa, lsl #48
 530:	mul	x0, x0, x1
 534:	and	x0, x0, #0xfffffffffffffff
 538:	add	x0, x0, #0x1
 53c:	add	x0, x0, x0, lsl #1
 540:	add	x22, x22, x0, lsl #4
 544:	str	x22, [x20, #32]
 548:	add	x21, x21, #0x30
 54c:	add	x20, x20, #0x30
 550:	cmp	x26, x21
 554:	b.eq	588 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x588>  // b.none
 558:	ldr	x0, [x21]
 55c:	str	x0, [x20]
 560:	ldr	w0, [x21, #16]
 564:	str	w0, [x20, #16]
 568:	cmp	w0, #0x40
 56c:	b.hi	484 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x484>  // b.pmore
 570:	ldr	x0, [x21, #8]
 574:	str	x0, [x20, #8]
 578:	b	490 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x490>
 57c:	bl	0 <_ZSt17__throw_bad_allocv>
 580:	mov	x22, #0x0                   	// #0
 584:	b	4d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x4d0>
 588:	str	x20, [x27, #8]
 58c:	ldp	x23, x24, [sp, #48]
 590:	b	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1e4>
 594:	ldp	x23, x24, [sp, #48]
 598:	b	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x1e4>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	x19, [x0, #16]
  14:	cbz	x19, 28 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x28>
  18:	ldr	x4, [x1]
  1c:	mov	w6, #0x0                   	// #0
  20:	mov	w5, #0x1                   	// #1
  24:	b	5c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x5c>
  28:	add	x19, x0, #0x8
  2c:	ldr	x0, [x0, #24]
  30:	cmp	x0, x19
  34:	b.eq	9c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x9c>  // b.none
  38:	mov	x0, x19
  3c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  40:	mov	x1, x19
  44:	mov	x19, x0
  48:	b	7c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x7c>
  4c:	ldr	x2, [x19, #24]
  50:	mov	w3, w6
  54:	cbz	x2, 74 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x74>
  58:	mov	x19, x2
  5c:	ldr	x2, [x19, #32]
  60:	cmp	x2, x4
  64:	b.ls	4c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x4c>  // b.plast
  68:	ldr	x2, [x19, #16]
  6c:	mov	w3, w5
  70:	b	54 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x54>
  74:	mov	x1, x19
  78:	cbnz	w3, 2c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x2c>
  7c:	ldr	x3, [x19, #32]
  80:	ldr	x2, [x20]
  84:	cmp	x3, x2
  88:	csel	x0, x19, xzr, cs  // cs = hs, nlast
  8c:	csel	x1, x1, xzr, cc  // cc = lo, ul, last
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret
  9c:	mov	x0, #0x0                   	// #0
  a0:	mov	x1, x19
  a4:	b	90 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE24_M_get_insert_unique_posERS4_+0x90>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x0
  14:	mov	x21, x2
  18:	add	x0, x0, #0x8
  1c:	cmp	x1, x0
  20:	b.eq	78 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x78>  // b.none
  24:	mov	x19, x1
  28:	ldr	x22, [x2]
  2c:	ldr	x0, [x1, #32]
  30:	cmp	x0, x22
  34:	b.ls	c8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xc8>  // b.plast
  38:	ldr	x3, [x20, #24]
  3c:	mov	x0, x3
  40:	mov	x1, x3
  44:	cmp	x3, x19
  48:	b.eq	a8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xa8>  // b.none
  4c:	mov	x0, x19
  50:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  54:	mov	x3, x0
  58:	ldr	x0, [x0, #32]
  5c:	cmp	x0, x22
  60:	b.cs	b8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xb8>  // b.hs, b.nlast
  64:	ldr	x1, [x3, #24]
  68:	cmp	x1, #0x0
  6c:	csel	x0, x19, xzr, ne  // ne = any
  70:	csel	x1, x3, x19, eq  // eq = none
  74:	b	a8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xa8>
  78:	ldr	x0, [x20, #40]
  7c:	cbz	x0, 9c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x9c>
  80:	ldr	x1, [x20, #32]
  84:	ldr	x2, [x2]
  88:	ldr	x0, [x1, #32]
  8c:	cmp	x2, x0
  90:	b.ls	9c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x9c>  // b.plast
  94:	mov	x0, #0x0                   	// #0
  98:	b	a8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xa8>
  9c:	mov	x1, x21
  a0:	mov	x0, x20
  a4:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_>
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldp	x21, x22, [sp, #32]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret
  b8:	mov	x1, x21
  bc:	mov	x0, x20
  c0:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_>
  c4:	b	a8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xa8>
  c8:	b.cs	11c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x11c>  // b.hs, b.nlast
  cc:	ldr	x3, [x20, #32]
  d0:	mov	x0, #0x0                   	// #0
  d4:	mov	x1, x3
  d8:	cmp	x3, x19
  dc:	b.eq	a8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xa8>  // b.none
  e0:	mov	x0, x19
  e4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  e8:	mov	x3, x0
  ec:	ldr	x0, [x0, #32]
  f0:	cmp	x0, x22
  f4:	b.ls	10c <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0x10c>  // b.plast
  f8:	ldr	x1, [x19, #24]
  fc:	cmp	x1, #0x0
 100:	csel	x0, x3, xzr, ne  // ne = any
 104:	csel	x1, x3, x19, ne  // ne = any
 108:	b	a8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xa8>
 10c:	mov	x1, x21
 110:	mov	x0, x20
 114:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_>
 118:	b	a8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xa8>
 11c:	mov	x0, x1
 120:	mov	x1, #0x0                   	// #0
 124:	b	a8 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS4_+0xa8>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x0
  14:	mov	x21, x1
  18:	mov	x22, x3
  1c:	mov	x0, #0x58                  	// #88
  20:	bl	0 <_Znwm>
  24:	mov	x19, x0
  28:	ldr	x0, [x22]
  2c:	ldr	x0, [x0]
  30:	str	x0, [x19, #32]
  34:	mov	w0, #0x1                   	// #1
  38:	str	w0, [x19, #56]
  3c:	str	xzr, [x19, #48]
  40:	str	xzr, [x19, #64]
  44:	str	xzr, [x19, #72]
  48:	str	xzr, [x19, #80]
  4c:	str	wzr, [x19, #40]
  50:	str	wzr, [x19, #44]
  54:	add	x2, x19, #0x20
  58:	mov	x1, x21
  5c:	mov	x0, x20
  60:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>
  64:	mov	x21, x0
  68:	cbz	x1, c4 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0xc4>
  6c:	mov	x2, x1
  70:	mov	w0, #0x1                   	// #1
  74:	cbz	x21, a4 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0xa4>
  78:	add	x3, x20, #0x8
  7c:	mov	x1, x19
  80:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  84:	ldr	x0, [x20, #40]
  88:	add	x0, x0, #0x1
  8c:	str	x0, [x20, #40]
  90:	mov	x0, x19
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x21, x22, [sp, #32]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret
  a4:	add	x1, x20, #0x8
  a8:	cmp	x2, x1
  ac:	b.eq	78 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x78>  // b.none
  b0:	ldr	x1, [x19, #32]
  b4:	ldr	x0, [x2, #32]
  b8:	cmp	x1, x0
  bc:	cset	w0, cc  // cc = lo, ul, last
  c0:	b	78 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x78>
  c4:	add	x0, x19, #0x28
  c8:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>
  cc:	mov	x0, x19
  d0:	bl	0 <_ZdlPv>
  d4:	mov	x0, x21
  d8:	b	94 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x94>

Disassembly of section .text._ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE:

0000000000000000 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldur	x0, [x1, #-24]
  14:	cbz	x0, 16c <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x16c>
  18:	ldrb	w2, [x0, #16]
  1c:	cbnz	w2, 16c <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x16c>
  20:	ldr	w2, [x0, #36]
  24:	cmp	w2, #0xb0
  28:	b.eq	124 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x124>  // b.none
  2c:	b.hi	88 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x88>  // b.pmore
  30:	cmp	w2, #0x2b
  34:	b.eq	10c <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x10c>  // b.none
  38:	b.ls	64 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x64>  // b.plast
  3c:	cmp	w2, #0x2c
  40:	b.eq	f4 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xf4>  // b.none
  44:	cmp	w2, #0xae
  48:	b.ne	dc <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xdc>  // b.any
  4c:	add	x0, sp, #0x40
  50:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  54:	ldr	x1, [sp, #64]
  58:	mov	x0, x19
  5c:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  60:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
  64:	cbz	w2, 16c <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x16c>
  68:	cmp	w2, #0x2a
  6c:	b.ne	dc <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xdc>  // b.any
  70:	add	x0, sp, #0x28
  74:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  78:	ldr	x1, [sp, #40]
  7c:	mov	x0, x19
  80:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  84:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
  88:	cmp	w2, #0x106
  8c:	b.eq	154 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x154>  // b.none
  90:	b.ls	b4 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xb4>  // b.plast
  94:	cmp	w2, #0x107
  98:	b.ne	dc <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xdc>  // b.any
  9c:	add	x0, sp, #0x58
  a0:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  a4:	ldr	x1, [sp, #88]
  a8:	mov	x0, x19
  ac:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  b0:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
  b4:	cmp	w2, #0xb2
  b8:	b.eq	13c <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x13c>  // b.none
  bc:	cmp	w2, #0x105
  c0:	b.ne	dc <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0xdc>  // b.any
  c4:	add	x0, sp, #0x68
  c8:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  cc:	ldr	x1, [sp, #104]
  d0:	mov	x0, x19
  d4:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  d8:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
  dc:	add	x0, sp, #0x20
  e0:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  e4:	ldr	x1, [sp, #32]
  e8:	mov	x0, x19
  ec:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  f0:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
  f4:	add	x0, sp, #0x30
  f8:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
  fc:	ldr	x1, [sp, #48]
 100:	mov	x0, x19
 104:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
 108:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
 10c:	add	x0, sp, #0x38
 110:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
 114:	ldr	x1, [sp, #56]
 118:	mov	x0, x19
 11c:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
 120:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
 124:	add	x0, sp, #0x48
 128:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
 12c:	ldr	x1, [sp, #72]
 130:	mov	x0, x19
 134:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
 138:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
 13c:	add	x0, sp, #0x50
 140:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
 144:	ldr	x1, [sp, #80]
 148:	mov	x0, x19
 14c:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
 150:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
 154:	add	x0, sp, #0x60
 158:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
 15c:	ldr	x1, [sp, #96]
 160:	mov	x0, x19
 164:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
 168:	b	184 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x184>
 16c:	tst	x1, #0x7
 170:	b.ne	190 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE+0x190>  // b.any
 174:	and	x1, x1, #0xfffffffffffffff9
 178:	orr	x1, x1, #0x2
 17c:	mov	x0, x19
 180:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
 184:	ldr	x19, [sp, #16]
 188:	ldp	x29, x30, [sp], #112
 18c:	ret
 190:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
 194:	add	x3, x3, #0x0
 198:	mov	w2, #0xb2                  	// #178
 19c:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
 1a0:	add	x1, x1, #0x0
 1a4:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE16delegateCallInstERNS_8CallInstE>
 1a8:	add	x0, x0, #0x0
 1ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE:

0000000000000000 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w2, [x1, #16]
   c:	sub	w2, w2, #0x19
  10:	cmp	w2, #0x42
  14:	b.hi	30 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x30>  // b.pmore
  18:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  1c:	add	x3, x3, #0x0
  20:	ldrh	w2, [x3, w2, uxtw #1]
  24:	adr	x3, 30 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x30>
  28:	add	x2, x3, w2, sxth #2
  2c:	br	x2
  30:	mov	w2, #0x7a                  	// #122
  34:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  38:	add	x1, x1, #0x0
  3c:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  40:	add	x0, x0, #0x0
  44:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  48:	bl	e9a0 <_ZN4llvm11Interpreter15visitReturnInstERNS_10ReturnInstE>
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	bl	dd54 <_ZN4llvm11Interpreter15visitBranchInstERNS_10BranchInstE>
  58:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
  5c:	bl	df24 <_ZN4llvm11Interpreter15visitSwitchInstERNS_10SwitchInstE>
  60:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
  64:	bl	e6b8 <_ZN4llvm11Interpreter19visitIndirectBrInstERNS_14IndirectBrInstE>
  68:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
  6c:	tst	x1, #0x7
  70:	b.ne	80 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x80>  // b.any
  74:	and	x1, x1, #0xfffffffffffffff9
  78:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  7c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
  80:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0xb2                  	// #178
  8c:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  a4:	bl	35c <_ZN4llvm11Interpreter20visitUnreachableInstERNS_15UnreachableInstE>
  a8:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
  ac:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  b0:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  b4:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  b8:	tst	x1, #0x7
  bc:	b.ne	d0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0xd0>  // b.any
  c0:	and	x1, x1, #0xfffffffffffffff9
  c4:	orr	x1, x1, #0x4
  c8:	bl	12800 <_ZN4llvm11Interpreter13visitCallSiteENS_8CallSiteE>
  cc:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
  d0:	adrp	x3, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0xb2                  	// #178
  dc:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  e0:	add	x1, x1, #0x0
  e4:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	bl	0 <__assert_fail>
  f0:	bl	a95c <_ZN4llvm11Interpreter18visitUnaryOperatorERNS_13UnaryOperatorE>
  f4:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
  f8:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
  fc:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 100:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 104:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 108:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 10c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 110:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 114:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 118:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 11c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 120:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 124:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 128:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 12c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 130:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 134:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 138:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 13c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 140:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 144:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 148:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 14c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 150:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 154:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 158:	bl	f314 <_ZN4llvm11Interpreter8visitShlERNS_14BinaryOperatorE>
 15c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 160:	bl	f8b8 <_ZN4llvm11Interpreter9visitLShrERNS_14BinaryOperatorE>
 164:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 168:	bl	fe48 <_ZN4llvm11Interpreter9visitAShrERNS_14BinaryOperatorE>
 16c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 170:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 174:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 178:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 17c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 180:	bl	bbbc <_ZN4llvm11Interpreter19visitBinaryOperatorERNS_14BinaryOperatorE>
 184:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 188:	bl	ebc8 <_ZN4llvm11Interpreter15visitAllocaInstERNS_10AllocaInstE>
 18c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 190:	bl	f12c <_ZN4llvm11Interpreter13visitLoadInstERNS_8LoadInstE>
 194:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 198:	bl	65ec <_ZN4llvm11Interpreter14visitStoreInstERNS_9StoreInstE>
 19c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1a0:	bl	ef58 <_ZN4llvm11Interpreter22visitGetElementPtrInstERNS_17GetElementPtrInstE>
 1a4:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1a8:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1ac:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1b0:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 1b4:	bl	10554 <_ZN4llvm11Interpreter14visitTruncInstERNS_9TruncInstE>
 1b8:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1bc:	bl	1068c <_ZN4llvm11Interpreter13visitZExtInstERNS_8ZExtInstE>
 1c0:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1c4:	bl	105f0 <_ZN4llvm11Interpreter13visitSExtInstERNS_8SExtInstE>
 1c8:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1cc:	bl	10860 <_ZN4llvm11Interpreter15visitFPToUIInstERNS_10FPToUIInstE>
 1d0:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1d4:	bl	108fc <_ZN4llvm11Interpreter15visitFPToSIInstERNS_10FPToSIInstE>
 1d8:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1dc:	bl	10998 <_ZN4llvm11Interpreter15visitUIToFPInstERNS_10UIToFPInstE>
 1e0:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1e4:	bl	10a34 <_ZN4llvm11Interpreter15visitSIToFPInstERNS_10SIToFPInstE>
 1e8:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1ec:	bl	10728 <_ZN4llvm11Interpreter16visitFPTruncInstERNS_11FPTruncInstE>
 1f0:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1f4:	bl	107c4 <_ZN4llvm11Interpreter14visitFPExtInstERNS_9FPExtInstE>
 1f8:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 1fc:	bl	10ad0 <_ZN4llvm11Interpreter17visitPtrToIntInstERNS_12PtrToIntInstE>
 200:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 204:	bl	10b6c <_ZN4llvm11Interpreter17visitIntToPtrInstERNS_12IntToPtrInstE>
 208:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 20c:	bl	10c08 <_ZN4llvm11Interpreter16visitBitCastInstERNS_11BitCastInstE>
 210:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 214:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 218:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 21c:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 220:	bl	aca4 <_ZN4llvm11Interpreter13visitICmpInstERNS_8ICmpInstE>
 224:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 228:	bl	b2ac <_ZN4llvm11Interpreter13visitFCmpInstERNS_8FCmpInstE>
 22c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 230:	mov	w2, #0x88                  	// #136
 234:	adrp	x1, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 238:	add	x1, x1, #0x0
 23c:	adrp	x0, 0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 240:	add	x0, x0, #0x0
 244:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 248:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 24c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 250:	bl	d570 <_ZN4llvm11Interpreter15visitSelectInstERNS_10SelectInstE>
 254:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 258:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 25c:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 260:	bl	10ca4 <_ZN4llvm11Interpreter14visitVAArgInstERNS_9VAArgInstE>
 264:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 268:	bl	10f4c <_ZN4llvm11Interpreter23visitExtractElementInstERNS_18ExtractElementInstE>
 26c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 270:	bl	112a8 <_ZN4llvm11Interpreter22visitInsertElementInstERNS_17InsertElementInstE>
 274:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 278:	bl	1165c <_ZN4llvm11Interpreter22visitShuffleVectorInstERNS_17ShuffleVectorInstE>
 27c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 280:	bl	11c10 <_ZN4llvm11Interpreter21visitExtractValueInstERNS_16ExtractValueInstE>
 284:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 288:	bl	11e84 <_ZN4llvm11Interpreter20visitInsertValueInstERNS_15InsertValueInstE>
 28c:	b	4c <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE+0x4c>
 290:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>
 294:	bl	0 <_ZN4llvm11InstVisitorINS_11InterpreterEvE5visitERNS_11InstructionE>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x1, x0
  14:	adrp	x0, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldr	x0, [x19, #104]
  3c:	ldr	x1, [x19, #96]
  40:	cmp	x0, x1
  44:	b.eq	4c <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x4c>  // b.none
  48:	bl	0 <free>
  4c:	ldr	x0, [x19, #64]
  50:	add	x1, x19, #0x50
  54:	cmp	x0, x1
  58:	b.eq	60 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x60>  // b.none
  5c:	bl	0 <free>
  60:	mov	x1, #0xc8                  	// #200
  64:	mov	x0, x19
  68:	bl	0 <_ZdlPvm>
  6c:	ldr	x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

ExternalFunctions.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL9getTypeIDPN4llvm4TypeE>:
       0:	mov	x2, x0
       4:	ldrb	w1, [x0, #8]
       8:	cmp	w1, #0xc
       c:	b.eq	c8 <_ZL9getTypeIDPN4llvm4TypeE+0xc8>  // b.none
      10:	b.hi	80 <_ZL9getTypeIDPN4llvm4TypeE+0x80>  // b.pmore
      14:	mov	w0, #0x44                  	// #68
      18:	cmp	w1, #0x3
      1c:	b.eq	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>  // b.none
      20:	b.ls	64 <_ZL9getTypeIDPN4llvm4TypeE+0x64>  // b.plast
      24:	mov	w0, #0x55                  	// #85
      28:	cmp	w1, #0xb
      2c:	b.ne	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>  // b.any
      30:	ldr	w1, [x2, #8]
      34:	lsr	w1, w1, #8
      38:	cmp	w1, #0x10
      3c:	b.eq	d0 <_ZL9getTypeIDPN4llvm4TypeE+0xd0>  // b.none
      40:	b.ls	a8 <_ZL9getTypeIDPN4llvm4TypeE+0xa8>  // b.plast
      44:	mov	w0, #0x49                  	// #73
      48:	cmp	w1, #0x20
      4c:	b.eq	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>  // b.none
      50:	cmp	w1, #0x40
      54:	mov	w0, #0x4e                  	// #78
      58:	mov	w1, #0x4c                  	// #76
      5c:	csel	w0, w0, w1, ne  // ne = any
      60:	b	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>
      64:	mov	w0, #0x56                  	// #86
      68:	cbz	w1, 7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>
      6c:	cmp	w1, #0x2
      70:	mov	w0, #0x55                  	// #85
      74:	mov	w1, #0x46                  	// #70
      78:	csel	w0, w0, w1, ne  // ne = any
      7c:	ret
      80:	mov	w0, #0x41                  	// #65
      84:	cmp	w1, #0xe
      88:	b.eq	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>  // b.none
      8c:	mov	w0, #0x50                  	// #80
      90:	cmp	w1, #0xf
      94:	b.eq	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>  // b.none
      98:	cmp	w1, #0xd
      9c:	cset	w0, ne  // ne = any
      a0:	add	w0, w0, #0x54
      a4:	b	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>
      a8:	mov	w0, #0x6f                  	// #111
      ac:	cmp	w1, #0x1
      b0:	b.eq	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>  // b.none
      b4:	cmp	w1, #0x8
      b8:	mov	w0, #0x4e                  	// #78
      bc:	mov	w1, #0x42                  	// #66
      c0:	csel	w0, w0, w1, ne  // ne = any
      c4:	b	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>
      c8:	mov	w0, #0x4d                  	// #77
      cc:	b	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>
      d0:	mov	w0, #0x53                  	// #83
      d4:	b	7c <_ZL9getTypeIDPN4llvm4TypeE+0x7c>

00000000000000d8 <_ZL11lle_X_abortPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
      d8:	stp	x29, x30, [sp, #-32]!
      dc:	mov	x29, sp
      e0:	str	x19, [sp, #16]
      e4:	mov	x19, x8
      e8:	mov	w0, #0x6                   	// #6
      ec:	bl	0 <raise>
      f0:	mov	w0, #0x1                   	// #1
      f4:	str	w0, [x19, #16]
      f8:	str	xzr, [x19, #8]
      fc:	str	xzr, [x19, #24]
     100:	str	xzr, [x19, #32]
     104:	str	xzr, [x19, #40]
     108:	str	wzr, [x19]
     10c:	str	wzr, [x19, #4]
     110:	mov	x0, x19
     114:	ldr	x19, [sp, #16]
     118:	ldp	x29, x30, [sp], #32
     11c:	ret

0000000000000120 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     120:	sub	sp, sp, #0x90
     124:	stp	x29, x30, [sp, #16]
     128:	add	x29, sp, #0x10
     12c:	stp	x19, x20, [sp, #32]
     130:	str	x21, [sp, #48]
     134:	cmp	x2, #0x9
     138:	b.hi	1fc <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xdc>  // b.pmore
     13c:	mov	x19, x8
     140:	cbz	x2, 164 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x44>
     144:	mov	x0, x1
     148:	add	x3, sp, #0x40
     14c:	add	x2, x2, x2, lsl #1
     150:	add	x1, x1, x2, lsl #4
     154:	ldr	x2, [x0], #48
     158:	str	x2, [x3], #8
     15c:	cmp	x0, x1
     160:	b.ne	154 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x34>  // b.any
     164:	mov	w0, #0x1                   	// #1
     168:	str	w0, [x19, #16]
     16c:	str	xzr, [x19, #8]
     170:	str	xzr, [x19, #24]
     174:	str	xzr, [x19, #32]
     178:	str	xzr, [x19, #40]
     17c:	str	wzr, [x19]
     180:	str	wzr, [x19, #4]
     184:	ldr	x0, [sp, #136]
     188:	str	x0, [sp, #8]
     18c:	ldr	x0, [sp, #128]
     190:	str	x0, [sp]
     194:	ldr	x7, [sp, #120]
     198:	ldr	x6, [sp, #112]
     19c:	ldr	x5, [sp, #104]
     1a0:	ldr	x4, [sp, #96]
     1a4:	ldr	x3, [sp, #88]
     1a8:	ldr	x2, [sp, #80]
     1ac:	ldr	x1, [sp, #72]
     1b0:	ldr	x0, [sp, #64]
     1b4:	bl	0 <__isoc99_scanf>
     1b8:	mov	w21, w0
     1bc:	ldr	w0, [x19, #16]
     1c0:	cmp	w0, #0x40
     1c4:	b.ls	1d4 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb4>  // b.plast
     1c8:	ldr	x0, [x19, #8]
     1cc:	cbz	x0, 1d4 <_ZL11lle_X_scanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb4>
     1d0:	bl	0 <_ZdaPv>
     1d4:	mov	x1, x19
     1d8:	str	x21, [x1, #8]!
     1dc:	mov	w0, #0x20                  	// #32
     1e0:	str	w0, [x1, #8]
     1e4:	mov	x0, x19
     1e8:	ldp	x19, x20, [sp, #32]
     1ec:	ldr	x21, [sp, #48]
     1f0:	ldp	x29, x30, [sp, #16]
     1f4:	add	sp, sp, #0x90
     1f8:	ret
     1fc:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     200:	add	x3, x3, #0x0
     204:	mov	w2, #0x1bd                 	// #445
     208:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     20c:	add	x1, x1, #0x0
     210:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     214:	add	x0, x0, #0x0
     218:	bl	0 <__assert_fail>

000000000000021c <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     21c:	sub	sp, sp, #0x90
     220:	stp	x29, x30, [sp, #16]
     224:	add	x29, sp, #0x10
     228:	stp	x19, x20, [sp, #32]
     22c:	str	x21, [sp, #48]
     230:	cmp	x2, #0x9
     234:	b.hi	2f8 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xdc>  // b.pmore
     238:	mov	x19, x8
     23c:	cbz	x2, 260 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x44>
     240:	mov	x0, x1
     244:	add	x3, sp, #0x40
     248:	add	x2, x2, x2, lsl #1
     24c:	add	x1, x1, x2, lsl #4
     250:	ldr	x2, [x0], #48
     254:	str	x2, [x3], #8
     258:	cmp	x0, x1
     25c:	b.ne	250 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x34>  // b.any
     260:	mov	w0, #0x1                   	// #1
     264:	str	w0, [x19, #16]
     268:	str	xzr, [x19, #8]
     26c:	str	xzr, [x19, #24]
     270:	str	xzr, [x19, #32]
     274:	str	xzr, [x19, #40]
     278:	str	wzr, [x19]
     27c:	str	wzr, [x19, #4]
     280:	ldr	x0, [sp, #136]
     284:	str	x0, [sp, #8]
     288:	ldr	x0, [sp, #128]
     28c:	str	x0, [sp]
     290:	ldr	x7, [sp, #120]
     294:	ldr	x6, [sp, #112]
     298:	ldr	x5, [sp, #104]
     29c:	ldr	x4, [sp, #96]
     2a0:	ldr	x3, [sp, #88]
     2a4:	ldr	x2, [sp, #80]
     2a8:	ldr	x1, [sp, #72]
     2ac:	ldr	x0, [sp, #64]
     2b0:	bl	0 <__isoc99_sscanf>
     2b4:	mov	w21, w0
     2b8:	ldr	w0, [x19, #16]
     2bc:	cmp	w0, #0x40
     2c0:	b.ls	2d0 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb4>  // b.plast
     2c4:	ldr	x0, [x19, #8]
     2c8:	cbz	x0, 2d0 <_ZL12lle_X_sscanfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xb4>
     2cc:	bl	0 <_ZdaPv>
     2d0:	mov	x1, x19
     2d4:	str	x21, [x1, #8]!
     2d8:	mov	w0, #0x20                  	// #32
     2dc:	str	w0, [x1, #8]
     2e0:	mov	x0, x19
     2e4:	ldp	x19, x20, [sp, #32]
     2e8:	ldr	x21, [sp, #48]
     2ec:	ldp	x29, x30, [sp, #16]
     2f0:	add	sp, sp, #0x90
     2f4:	ret
     2f8:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     2fc:	add	x3, x3, #0x0
     300:	mov	w2, #0x1af                 	// #431
     304:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     308:	add	x1, x1, #0x0
     30c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     310:	add	x0, x0, #0x0
     314:	bl	0 <__assert_fail>

0000000000000318 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     318:	stp	x29, x30, [sp, #-64]!
     31c:	mov	x29, sp
     320:	stp	x19, x20, [sp, #16]
     324:	stp	x21, x22, [sp, #32]
     328:	str	x23, [sp, #48]
     32c:	cmp	x2, #0x1
     330:	b.ls	3d8 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc0>  // b.plast
     334:	mov	x19, x8
     338:	mov	x20, x1
     33c:	mov	x23, x2
     340:	ldr	w22, [x1, #64]
     344:	cmp	w22, #0x40
     348:	b.hi	418 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x100>  // b.pmore
     34c:	ldr	x21, [x1, #56]
     350:	cbz	w22, 3f8 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xe0>
     354:	mov	w0, #0x40                  	// #64
     358:	sub	w22, w0, w22
     35c:	lsl	x21, x21, x22
     360:	asr	x21, x21, x22
     364:	cmp	x23, #0x2
     368:	b.ls	488 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x170>  // b.plast
     36c:	ldr	w22, [x20, #112]
     370:	cmp	w22, #0x40
     374:	b.ls	4a8 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x190>  // b.plast
     378:	add	x0, x20, #0x68
     37c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     380:	sub	w22, w22, w0
     384:	cmp	w22, #0x40
     388:	b.hi	4b0 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x198>  // b.pmore
     38c:	ldr	x0, [x20, #104]
     390:	ldr	x2, [x0]
     394:	mov	w1, w21
     398:	ldr	x0, [x20]
     39c:	bl	0 <memset>
     3a0:	mov	w0, #0x1                   	// #1
     3a4:	str	w0, [x19, #16]
     3a8:	str	xzr, [x19, #8]
     3ac:	str	xzr, [x19, #24]
     3b0:	str	xzr, [x19, #32]
     3b4:	str	xzr, [x19, #40]
     3b8:	str	wzr, [x19]
     3bc:	str	wzr, [x19, #4]
     3c0:	mov	x0, x19
     3c4:	ldp	x19, x20, [sp, #16]
     3c8:	ldp	x21, x22, [sp, #32]
     3cc:	ldr	x23, [sp, #48]
     3d0:	ldp	x29, x30, [sp], #64
     3d4:	ret
     3d8:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     3dc:	add	x3, x3, #0x0
     3e0:	mov	w2, #0xfa                  	// #250
     3e4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     3e8:	add	x1, x1, #0x0
     3ec:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     3f0:	add	x0, x0, #0x0
     3f4:	bl	0 <__assert_fail>
     3f8:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     3fc:	add	x3, x3, #0x0
     400:	mov	w2, #0x307                 	// #775
     404:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     408:	add	x1, x1, #0x0
     40c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     410:	add	x0, x0, #0x0
     414:	bl	0 <__assert_fail>
     418:	add	x0, x1, #0x38
     41c:	sub	w1, w22, #0x1
     420:	ldr	x21, [x20, #56]
     424:	lsr	w3, w1, #6
     428:	mov	x2, #0x1                   	// #1
     42c:	lsl	x1, x2, x1
     430:	ldr	x2, [x21, x3, lsl #3]
     434:	tst	x1, x2
     438:	b.eq	458 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x140>  // b.none
     43c:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
     440:	add	w22, w22, #0x1
     444:	sub	w0, w22, w0
     448:	cmp	w0, #0x40
     44c:	b.hi	468 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x150>  // b.pmore
     450:	ldr	x21, [x21]
     454:	b	364 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x4c>
     458:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     45c:	add	w22, w22, #0x1
     460:	sub	w0, w22, w0
     464:	b	448 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x130>
     468:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     46c:	add	x3, x3, #0x0
     470:	mov	w2, #0x663                 	// #1635
     474:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     478:	add	x1, x1, #0x0
     47c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     480:	add	x0, x0, #0x0
     484:	bl	0 <__assert_fail>
     488:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     48c:	add	x3, x3, #0x0
     490:	mov	w2, #0xfa                  	// #250
     494:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     498:	add	x1, x1, #0x0
     49c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     4a0:	add	x0, x0, #0x0
     4a4:	bl	0 <__assert_fail>
     4a8:	ldr	x2, [x20, #104]
     4ac:	b	394 <_ZL12lle_X_memsetPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x7c>
     4b0:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     4b4:	add	x3, x3, #0x0
     4b8:	mov	w2, #0x657                 	// #1623
     4bc:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     4c0:	add	x1, x1, #0x0
     4c4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     4c8:	add	x0, x0, #0x0
     4cc:	bl	0 <__assert_fail>

00000000000004d0 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     4d0:	stp	x29, x30, [sp, #-64]!
     4d4:	mov	x29, sp
     4d8:	stp	x19, x20, [sp, #16]
     4dc:	stp	x21, x22, [sp, #32]
     4e0:	str	x23, [sp, #48]
     4e4:	cbz	x2, 578 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa8>
     4e8:	mov	x19, x8
     4ec:	mov	x20, x1
     4f0:	ldr	x23, [x1]
     4f4:	cmp	x2, #0x1
     4f8:	b.ls	598 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc8>  // b.plast
     4fc:	ldr	x22, [x1, #48]
     500:	cmp	x2, #0x2
     504:	b.ls	5b8 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xe8>  // b.plast
     508:	ldr	w21, [x1, #112]
     50c:	cmp	w21, #0x40
     510:	b.ls	5d8 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x108>  // b.plast
     514:	add	x0, x1, #0x68
     518:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     51c:	sub	w21, w21, w0
     520:	mov	x2, #0xffffffffffffffff    	// #-1
     524:	cmp	w21, #0x40
     528:	b.hi	534 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x64>  // b.pmore
     52c:	ldr	x0, [x20, #104]
     530:	ldr	x2, [x0]
     534:	mov	x1, x22
     538:	mov	x0, x23
     53c:	bl	0 <memcpy>
     540:	mov	w0, #0x1                   	// #1
     544:	str	w0, [x19, #16]
     548:	str	xzr, [x19, #8]
     54c:	str	xzr, [x19, #24]
     550:	str	xzr, [x19, #32]
     554:	str	xzr, [x19, #40]
     558:	str	wzr, [x19]
     55c:	str	wzr, [x19, #4]
     560:	mov	x0, x19
     564:	ldp	x19, x20, [sp, #16]
     568:	ldp	x21, x22, [sp, #32]
     56c:	ldr	x23, [sp, #48]
     570:	ldp	x29, x30, [sp], #64
     574:	ret
     578:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     57c:	add	x3, x3, #0x0
     580:	mov	w2, #0xfa                  	// #250
     584:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     588:	add	x1, x1, #0x0
     58c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     590:	add	x0, x0, #0x0
     594:	bl	0 <__assert_fail>
     598:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     59c:	add	x3, x3, #0x0
     5a0:	mov	w2, #0xfa                  	// #250
     5a4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     5a8:	add	x1, x1, #0x0
     5ac:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     5b0:	add	x0, x0, #0x0
     5b4:	bl	0 <__assert_fail>
     5b8:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     5bc:	add	x3, x3, #0x0
     5c0:	mov	w2, #0xfa                  	// #250
     5c4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     5c8:	add	x1, x1, #0x0
     5cc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     5d0:	add	x0, x0, #0x0
     5d4:	bl	0 <__assert_fail>
     5d8:	ldr	x2, [x1, #104]
     5dc:	b	534 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x64>

00000000000005e0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     5e0:	sub	sp, sp, #0x4c0
     5e4:	stp	x29, x30, [sp]
     5e8:	mov	x29, sp
     5ec:	stp	x19, x20, [sp, #16]
     5f0:	stp	x21, x22, [sp, #32]
     5f4:	stp	x23, x24, [sp, #48]
     5f8:	stp	x25, x26, [sp, #64]
     5fc:	stp	x27, x28, [sp, #80]
     600:	str	x1, [sp, #96]
     604:	cbz	x2, 6a8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc8>
     608:	mov	x21, x8
     60c:	mov	x28, x2
     610:	ldr	x22, [x1]
     614:	cmp	x2, #0x1
     618:	b.ls	6c8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xe8>  // b.plast
     61c:	ldr	x20, [x1, #48]
     620:	mov	w0, #0x1                   	// #1
     624:	str	w0, [x8, #16]
     628:	str	xzr, [x8, #8]
     62c:	str	xzr, [x8, #24]
     630:	str	xzr, [x8, #32]
     634:	str	xzr, [x8, #40]
     638:	str	wzr, [x8]
     63c:	str	wzr, [x8, #4]
     640:	mov	x0, x20
     644:	bl	0 <strlen>
     648:	mov	w0, w0
     64c:	str	x0, [x21, #8]
     650:	mov	w0, #0x20                  	// #32
     654:	str	w0, [x21, #16]
     658:	mov	w23, #0x2                   	// #2
     65c:	add	x27, sp, #0xe8
     660:	add	x24, sp, #0xd8
     664:	adrp	x25, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     668:	add	x25, x25, #0x0
     66c:	add	x26, sp, #0x70
     670:	ldrb	w2, [x20]
     674:	cmp	w2, #0x25
     678:	b.eq	70c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x12c>  // b.none
     67c:	cmp	w2, #0x5c
     680:	b.eq	6e8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x108>  // b.none
     684:	cbz	w2, cd4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x6f4>
     688:	add	x19, x22, #0x1
     68c:	add	x20, x20, #0x1
     690:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     694:	add	x1, x1, #0x0
     698:	mov	x0, x22
     69c:	bl	0 <sprintf>
     6a0:	mov	x22, x19
     6a4:	b	670 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x90>
     6a8:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     6ac:	add	x3, x3, #0x0
     6b0:	mov	w2, #0xfa                  	// #250
     6b4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     6b8:	add	x1, x1, #0x0
     6bc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     6c0:	add	x0, x0, #0x0
     6c4:	bl	0 <__assert_fail>
     6c8:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     6cc:	add	x3, x3, #0x0
     6d0:	mov	w2, #0xfa                  	// #250
     6d4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     6d8:	add	x1, x1, #0x0
     6dc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     6e0:	add	x0, x0, #0x0
     6e4:	bl	0 <__assert_fail>
     6e8:	ldrb	w3, [x20, #1]
     6ec:	mov	w2, #0x5c                  	// #92
     6f0:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     6f4:	add	x1, x1, #0x0
     6f8:	mov	x0, x22
     6fc:	bl	0 <sprintf>
     700:	add	x20, x20, #0x2
     704:	add	x22, x22, #0x2
     708:	b	670 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x90>
     70c:	stp	xzr, xzr, [sp, #112]
     710:	stp	xzr, xzr, [sp, #128]
     714:	stp	xzr, xzr, [sp, #144]
     718:	stp	xzr, xzr, [sp, #160]
     71c:	stp	xzr, xzr, [sp, #176]
     720:	stp	xzr, xzr, [sp, #192]
     724:	str	wzr, [sp, #208]
     728:	stp	xzr, xzr, [sp, #216]
     72c:	mov	x2, #0x3d8                 	// #984
     730:	mov	w1, #0x0                   	// #0
     734:	mov	x0, x27
     738:	bl	0 <memset>
     73c:	mov	x19, x20
     740:	ldrb	w0, [x19], #2
     744:	strb	w0, [sp, #112]
     748:	ldrb	w0, [x20, #1]
     74c:	strb	w0, [sp, #113]
     750:	sub	w1, w0, #0x63
     754:	and	w1, w1, #0xff
     758:	cmp	w0, #0x69
     75c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
     760:	b.ls	910 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x330>  // b.plast
     764:	cmp	w0, #0x6f
     768:	mov	w1, #0x75                  	// #117
     76c:	ccmp	w0, w1, #0x4, ne  // ne = any
     770:	b.eq	964 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x384>  // b.none
     774:	and	w1, w0, #0xffffffdf
     778:	and	w1, w1, #0xff
     77c:	cmp	w1, #0x58
     780:	b.eq	970 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x390>  // b.none
     784:	mov	w3, #0x0                   	// #0
     788:	add	x4, x26, #0x2
     78c:	mov	w5, #0x25                  	// #37
     790:	mov	w6, #0x6f                  	// #111
     794:	and	w2, w0, #0xfffffffd
     798:	and	w2, w2, #0xff
     79c:	sub	w1, w0, #0x65
     7a0:	and	w1, w1, #0xff
     7a4:	cmp	w2, #0x45
     7a8:	ccmp	w1, #0x2, #0x0, ne  // ne = any
     7ac:	b.ls	918 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x338>  // b.plast
     7b0:	cmp	w0, #0x70
     7b4:	b.eq	8a4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2c4>  // b.none
     7b8:	cmp	w0, #0x73
     7bc:	ccmp	w0, w5, #0x4, ne  // ne = any
     7c0:	b.eq	918 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x338>  // b.none
     7c4:	and	w0, w0, #0xffffffdf
     7c8:	and	w0, w0, #0xff
     7cc:	cmp	w0, #0x4c
     7d0:	cinc	w3, w3, eq  // eq = none
     7d4:	ldrb	w0, [x19], #1
     7d8:	strb	w0, [x4], #1
     7dc:	sub	w1, w0, #0x63
     7e0:	and	w1, w1, #0xff
     7e4:	cmp	w0, #0x69
     7e8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
     7ec:	b.ls	918 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x338>  // b.plast
     7f0:	cmp	w0, #0x75
     7f4:	ccmp	w0, w6, #0x4, ne  // ne = any
     7f8:	b.eq	918 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x338>  // b.none
     7fc:	and	w1, w0, #0xffffffdf
     800:	and	w1, w1, #0xff
     804:	cmp	w1, #0x58
     808:	b.ne	794 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b4>  // b.any
     80c:	strb	wzr, [x4]
     810:	cmp	w0, #0x67
     814:	b.hi	8a8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2c8>  // b.pmore
     818:	sub	w0, w0, #0x45
     81c:	mov	x1, #0x1                   	// #1
     820:	lsl	x0, x1, x0
     824:	mov	x1, #0x5                   	// #5
     828:	movk	x1, #0x7, lsl #32
     82c:	tst	x0, x1
     830:	b.ne	b38 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x558>  // b.any
     834:	mov	x1, #0x80080000            	// #2148007936
     838:	tst	x0, x1
     83c:	b.ne	9c4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3e4>  // b.any
     840:	tbz	w0, #30, c10 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x630>
     844:	add	w0, w23, #0x1
     848:	str	w0, [sp, #108]
     84c:	mov	w0, w23
     850:	cmp	x28, w23, uxtw
     854:	b.ls	97c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x39c>  // b.plast
     858:	add	x0, x0, x0, lsl #1
     85c:	ldr	x1, [sp, #96]
     860:	add	x23, x1, x0, lsl #4
     864:	ldr	w20, [x23, #16]
     868:	cmp	w20, #0x40
     86c:	b.ls	99c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3bc>  // b.plast
     870:	add	x0, x23, #0x8
     874:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     878:	sub	w20, w20, w0
     87c:	cmp	w20, #0x40
     880:	b.hi	9a4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3c4>  // b.pmore
     884:	ldr	x0, [x23, #8]
     888:	ldr	x2, [x0]
     88c:	mov	x1, x26
     890:	mov	x0, x24
     894:	bl	0 <sprintf>
     898:	mov	x20, x19
     89c:	ldr	w23, [sp, #108]
     8a0:	b	940 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x360>
     8a4:	strb	wzr, [x4]
     8a8:	sub	w0, w0, #0x69
     8ac:	and	w0, w0, #0xff
     8b0:	cmp	w0, #0xf
     8b4:	b.hi	c10 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x630>  // b.pmore
     8b8:	mov	x1, #0x1                   	// #1
     8bc:	lsl	x0, x1, x0
     8c0:	mov	x1, #0x9041                	// #36929
     8c4:	tst	x0, x1
     8c8:	b.ne	9c4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3e4>  // b.any
     8cc:	tbnz	w0, #10, bb4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5d4>
     8d0:	tbz	w0, #7, c10 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x630>
     8d4:	add	w0, w23, #0x1
     8d8:	str	w0, [sp, #108]
     8dc:	mov	w0, w23
     8e0:	cmp	x28, w23, uxtw
     8e4:	b.ls	b94 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x5b4>  // b.plast
     8e8:	add	x0, x0, x0, lsl #1
     8ec:	lsl	x0, x0, #4
     8f0:	ldr	x1, [sp, #96]
     8f4:	ldr	x2, [x1, x0]
     8f8:	mov	x1, x26
     8fc:	mov	x0, x24
     900:	bl	0 <sprintf>
     904:	mov	x20, x19
     908:	ldr	w23, [sp, #108]
     90c:	b	940 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x360>
     910:	mov	w3, #0x0                   	// #0
     914:	add	x4, x26, #0x2
     918:	strb	wzr, [x4]
     91c:	cmp	w0, #0x67
     920:	b.hi	8a8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2c8>  // b.pmore
     924:	cmp	w0, #0x44
     928:	b.hi	818 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x238>  // b.pmore
     92c:	cmp	w0, #0x25
     930:	b.ne	c10 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x630>  // b.any
     934:	mov	w0, #0x25                  	// #37
     938:	strh	w0, [x24]
     93c:	mov	x20, x19
     940:	mov	x0, x24
     944:	bl	0 <strlen>
     948:	mov	x19, x0
     94c:	add	x2, x0, #0x1
     950:	mov	x1, x24
     954:	mov	x0, x22
     958:	bl	0 <memcpy>
     95c:	add	x22, x22, x19
     960:	b	670 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x90>
     964:	mov	w3, #0x0                   	// #0
     968:	add	x4, x26, #0x2
     96c:	b	918 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x338>
     970:	mov	w3, #0x0                   	// #0
     974:	add	x4, x26, #0x2
     978:	b	918 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x338>
     97c:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     980:	add	x3, x3, #0x0
     984:	mov	w2, #0xfa                  	// #250
     988:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     98c:	add	x1, x1, #0x0
     990:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     994:	add	x0, x0, #0x0
     998:	bl	0 <__assert_fail>
     99c:	ldr	x2, [x23, #8]
     9a0:	b	88c <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2ac>
     9a4:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     9a8:	add	x3, x3, #0x0
     9ac:	mov	w2, #0x657                 	// #1623
     9b0:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     9b4:	add	x1, x1, #0x0
     9b8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     9bc:	add	x0, x0, #0x0
     9c0:	bl	0 <__assert_fail>
     9c4:	cbz	w3, a90 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x4b0>
     9c8:	cmp	w3, #0x1
     9cc:	b.eq	a30 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x450>  // b.none
     9d0:	add	w0, w23, #0x1
     9d4:	str	w0, [sp, #108]
     9d8:	mov	w0, w23
     9dc:	cmp	x28, w23, uxtw
     9e0:	b.ls	a48 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x468>  // b.plast
     9e4:	add	x0, x0, x0, lsl #1
     9e8:	ldr	x1, [sp, #96]
     9ec:	add	x23, x1, x0, lsl #4
     9f0:	ldr	w20, [x23, #16]
     9f4:	cmp	w20, #0x40
     9f8:	b.ls	a68 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x488>  // b.plast
     9fc:	add	x0, x23, #0x8
     a00:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     a04:	sub	w20, w20, w0
     a08:	cmp	w20, #0x40
     a0c:	b.hi	a70 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x490>  // b.pmore
     a10:	ldr	x0, [x23, #8]
     a14:	ldr	x2, [x0]
     a18:	mov	x1, x26
     a1c:	mov	x0, x24
     a20:	bl	0 <sprintf>
     a24:	mov	x20, x19
     a28:	ldr	w23, [sp, #108]
     a2c:	b	940 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x360>
     a30:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     a34:	ldr	x0, [x0]
     a38:	mov	w1, #0x0                   	// #0
     a3c:	add	x0, x0, #0x58
     a40:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
     a44:	b	9d0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x3f0>
     a48:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     a4c:	add	x3, x3, #0x0
     a50:	mov	w2, #0xfa                  	// #250
     a54:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     a58:	add	x1, x1, #0x0
     a5c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     a60:	add	x0, x0, #0x0
     a64:	bl	0 <__assert_fail>
     a68:	ldr	x2, [x23, #8]
     a6c:	b	a18 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x438>
     a70:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     a74:	add	x3, x3, #0x0
     a78:	mov	w2, #0x657                 	// #1623
     a7c:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     a80:	add	x1, x1, #0x0
     a84:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     a88:	add	x0, x0, #0x0
     a8c:	bl	0 <__assert_fail>
     a90:	add	w0, w23, #0x1
     a94:	str	w0, [sp, #108]
     a98:	mov	w0, w23
     a9c:	cmp	x28, w23, uxtw
     aa0:	b.ls	af0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x510>  // b.plast
     aa4:	add	x0, x0, x0, lsl #1
     aa8:	ldr	x1, [sp, #96]
     aac:	add	x23, x1, x0, lsl #4
     ab0:	ldr	w20, [x23, #16]
     ab4:	cmp	w20, #0x40
     ab8:	b.ls	b10 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x530>  // b.plast
     abc:	add	x0, x23, #0x8
     ac0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     ac4:	sub	w20, w20, w0
     ac8:	cmp	w20, #0x40
     acc:	b.hi	b18 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x538>  // b.pmore
     ad0:	ldr	x0, [x23, #8]
     ad4:	ldr	x2, [x0]
     ad8:	mov	x1, x26
     adc:	mov	x0, x24
     ae0:	bl	0 <sprintf>
     ae4:	mov	x20, x19
     ae8:	ldr	w23, [sp, #108]
     aec:	b	940 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x360>
     af0:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     af4:	add	x3, x3, #0x0
     af8:	mov	w2, #0xfa                  	// #250
     afc:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     b00:	add	x1, x1, #0x0
     b04:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     b08:	add	x0, x0, #0x0
     b0c:	bl	0 <__assert_fail>
     b10:	ldr	x2, [x23, #8]
     b14:	b	ad8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x4f8>
     b18:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     b1c:	add	x3, x3, #0x0
     b20:	mov	w2, #0x657                 	// #1623
     b24:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     b28:	add	x1, x1, #0x0
     b2c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     b30:	add	x0, x0, #0x0
     b34:	bl	0 <__assert_fail>
     b38:	add	w0, w23, #0x1
     b3c:	str	w0, [sp, #108]
     b40:	mov	w0, w23
     b44:	cmp	x28, w23, uxtw
     b48:	b.ls	b74 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x594>  // b.plast
     b4c:	add	x0, x0, x0, lsl #1
     b50:	lsl	x0, x0, #4
     b54:	ldr	x1, [sp, #96]
     b58:	ldr	d0, [x1, x0]
     b5c:	mov	x1, x26
     b60:	mov	x0, x24
     b64:	bl	0 <sprintf>
     b68:	mov	x20, x19
     b6c:	ldr	w23, [sp, #108]
     b70:	b	940 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x360>
     b74:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     b78:	add	x3, x3, #0x0
     b7c:	mov	w2, #0xfa                  	// #250
     b80:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     b84:	add	x1, x1, #0x0
     b88:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     b8c:	add	x0, x0, #0x0
     b90:	bl	0 <__assert_fail>
     b94:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     b98:	add	x3, x3, #0x0
     b9c:	mov	w2, #0xfa                  	// #250
     ba0:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     ba4:	add	x1, x1, #0x0
     ba8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     bac:	add	x0, x0, #0x0
     bb0:	bl	0 <__assert_fail>
     bb4:	add	w0, w23, #0x1
     bb8:	str	w0, [sp, #108]
     bbc:	mov	w0, w23
     bc0:	cmp	x28, w23, uxtw
     bc4:	b.ls	bf0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x610>  // b.plast
     bc8:	add	x0, x0, x0, lsl #1
     bcc:	lsl	x0, x0, #4
     bd0:	ldr	x1, [sp, #96]
     bd4:	ldr	x2, [x1, x0]
     bd8:	mov	x1, x26
     bdc:	mov	x0, x24
     be0:	bl	0 <sprintf>
     be4:	mov	x20, x19
     be8:	ldr	w23, [sp, #108]
     bec:	b	940 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x360>
     bf0:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     bf4:	add	x3, x3, #0x0
     bf8:	mov	w2, #0xfa                  	// #250
     bfc:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     c00:	add	x1, x1, #0x0
     c04:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     c08:	add	x0, x0, #0x0
     c0c:	bl	0 <__assert_fail>
     c10:	bl	0 <_ZN4llvm4errsEv>
     c14:	ldr	x2, [x0, #24]
     c18:	ldr	x1, [x0, #16]
     c1c:	sub	x1, x1, x2
     c20:	cmp	x1, #0x15
     c24:	b.ls	c50 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x670>  // b.plast
     c28:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     c2c:	add	x1, x1, #0x0
     c30:	ldp	x4, x5, [x1]
     c34:	stp	x4, x5, [x2]
     c38:	ldur	x1, [x1, #14]
     c3c:	stur	x1, [x2, #14]
     c40:	ldr	x1, [x0, #24]
     c44:	add	x1, x1, #0x16
     c48:	str	x1, [x0, #24]
     c4c:	b	c60 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x680>
     c50:	mov	x2, #0x16                  	// #22
     c54:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     c58:	add	x1, x1, #0x0
     c5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c60:	ldrb	w1, [x19]
     c64:	ldr	x2, [x0, #24]
     c68:	ldr	x3, [x0, #16]
     c6c:	cmp	x2, x3
     c70:	b.cs	cb4 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x6d4>  // b.hs, b.nlast
     c74:	add	x3, x2, #0x1
     c78:	str	x3, [x0, #24]
     c7c:	strb	w1, [x2]
     c80:	ldr	x2, [x0, #24]
     c84:	ldr	x1, [x0, #16]
     c88:	sub	x1, x1, x2
     c8c:	cmp	x1, #0x2
     c90:	b.ls	cbc <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x6dc>  // b.plast
     c94:	ldrh	w1, [x25]
     c98:	strh	w1, [x2]
     c9c:	ldrb	w1, [x25, #2]
     ca0:	strb	w1, [x2, #2]
     ca4:	ldr	x1, [x0, #24]
     ca8:	add	x1, x1, #0x3
     cac:	str	x1, [x0, #24]
     cb0:	b	cc8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x6e8>
     cb4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     cb8:	b	c80 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x6a0>
     cbc:	mov	x2, #0x3                   	// #3
     cc0:	mov	x1, x25
     cc4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cc8:	add	w23, w23, #0x1
     ccc:	mov	x20, x19
     cd0:	b	940 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x360>
     cd4:	mov	x0, x21
     cd8:	ldp	x19, x20, [sp, #16]
     cdc:	ldp	x21, x22, [sp, #32]
     ce0:	ldp	x23, x24, [sp, #48]
     ce4:	ldp	x25, x26, [sp, #64]
     ce8:	ldp	x27, x28, [sp, #80]
     cec:	ldp	x29, x30, [sp]
     cf0:	add	sp, sp, #0x4c0
     cf4:	ret

0000000000000cf8 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     cf8:	stp	x29, x30, [sp, #-128]!
     cfc:	mov	x29, sp
     d00:	stp	x19, x20, [sp, #16]
     d04:	stp	x21, x22, [sp, #32]
     d08:	stp	x23, x24, [sp, #48]
     d0c:	str	x25, [sp, #64]
     d10:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     d14:	ldr	x22, [x0]
     d18:	cbz	x2, e84 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x18c>
     d1c:	mov	x20, x8
     d20:	mov	x19, x1
     d24:	mov	x0, x1
     d28:	ldr	x1, [x0], #8
     d2c:	str	x1, [sp, #80]
     d30:	ldr	w0, [x0, #8]
     d34:	str	w0, [sp, #96]
     d38:	cmp	w0, #0x40
     d3c:	b.hi	ea4 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1ac>  // b.pmore
     d40:	ldr	x0, [x19, #8]
     d44:	str	x0, [sp, #88]
     d48:	ldr	x23, [x19, #32]
     d4c:	ldr	x0, [x19, #24]
     d50:	sub	x23, x23, x0
     d54:	asr	x0, x23, #4
     d58:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     d5c:	movk	x1, #0xaaab
     d60:	mul	x0, x0, x1
     d64:	str	xzr, [sp, #104]
     d68:	str	xzr, [sp, #112]
     d6c:	str	xzr, [sp, #120]
     d70:	cbz	x0, eb8 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1c0>
     d74:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     d78:	movk	x1, #0x2aa, lsl #48
     d7c:	cmp	x0, x1
     d80:	b.hi	eb4 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1bc>  // b.pmore
     d84:	mov	x0, x23
     d88:	bl	0 <_Znwm>
     d8c:	mov	x21, x0
     d90:	str	x21, [sp, #104]
     d94:	str	x21, [sp, #112]
     d98:	add	x23, x21, x23
     d9c:	str	x23, [sp, #120]
     da0:	ldr	x25, [x19, #24]
     da4:	ldr	x19, [x19, #32]
     da8:	cmp	x25, x19
     dac:	b.eq	e04 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x10c>  // b.none
     db0:	mov	x23, x25
     db4:	mov	x24, x21
     db8:	mov	x1, x23
     dbc:	mov	x0, x24
     dc0:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
     dc4:	add	x24, x24, #0x30
     dc8:	add	x23, x23, #0x30
     dcc:	cmp	x19, x23
     dd0:	b.ne	db8 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xc0>  // b.any
     dd4:	sub	x1, x19, #0x30
     dd8:	sub	x1, x1, x25
     ddc:	lsr	x1, x1, #4
     de0:	mov	x19, #0xaaab                	// #43691
     de4:	movk	x19, #0xaaaa, lsl #16
     de8:	movk	x19, #0xaaaa, lsl #32
     dec:	movk	x19, #0xaaa, lsl #48
     df0:	mul	x1, x1, x19
     df4:	and	x1, x1, #0xfffffffffffffff
     df8:	add	x1, x1, #0x1
     dfc:	add	x1, x1, x1, lsl #1
     e00:	add	x21, x21, x1, lsl #4
     e04:	str	x21, [sp, #112]
     e08:	add	x1, sp, #0x50
     e0c:	mov	x0, x22
     e10:	bl	0 <_ZN4llvm11Interpreter10exitCalledENS_12GenericValueE>
     e14:	ldr	x19, [sp, #104]
     e18:	ldr	x21, [sp, #112]
     e1c:	cmp	x19, x21
     e20:	b.ne	ed0 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1d8>  // b.any
     e24:	ldr	x0, [sp, #104]
     e28:	cbz	x0, e30 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x138>
     e2c:	bl	0 <_ZdlPv>
     e30:	ldr	w0, [sp, #96]
     e34:	cmp	w0, #0x40
     e38:	b.ls	e48 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x150>  // b.plast
     e3c:	ldr	x0, [sp, #88]
     e40:	cbz	x0, e48 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x150>
     e44:	bl	0 <_ZdaPv>
     e48:	mov	w0, #0x1                   	// #1
     e4c:	str	w0, [x20, #16]
     e50:	str	xzr, [x20, #8]
     e54:	str	xzr, [x20, #24]
     e58:	str	xzr, [x20, #32]
     e5c:	str	xzr, [x20, #40]
     e60:	str	wzr, [x20]
     e64:	str	wzr, [x20, #4]
     e68:	mov	x0, x20
     e6c:	ldp	x19, x20, [sp, #16]
     e70:	ldp	x21, x22, [sp, #32]
     e74:	ldp	x23, x24, [sp, #48]
     e78:	ldr	x25, [sp, #64]
     e7c:	ldp	x29, x30, [sp], #128
     e80:	ret
     e84:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     e88:	add	x3, x3, #0x0
     e8c:	mov	w2, #0xfa                  	// #250
     e90:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     e94:	add	x1, x1, #0x0
     e98:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     e9c:	add	x0, x0, #0x0
     ea0:	bl	0 <__assert_fail>
     ea4:	add	x1, x19, #0x8
     ea8:	add	x0, sp, #0x58
     eac:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     eb0:	b	d48 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x50>
     eb4:	bl	0 <_ZSt17__throw_bad_allocv>
     eb8:	mov	x21, #0x0                   	// #0
     ebc:	b	d90 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x98>
     ec0:	bl	0 <_ZdaPv>
     ec4:	add	x19, x19, #0x30
     ec8:	cmp	x21, x19
     ecc:	b.eq	e24 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x12c>  // b.none
     ed0:	add	x0, x19, #0x18
     ed4:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
     ed8:	ldr	w0, [x19, #16]
     edc:	cmp	w0, #0x40
     ee0:	b.ls	ec4 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1cc>  // b.plast
     ee4:	ldr	x0, [x19, #8]
     ee8:	cbnz	x0, ec0 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1c8>
     eec:	b	ec4 <_ZL10lle_X_exitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1cc>

0000000000000ef0 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
     ef0:	stp	x29, x30, [sp, #-48]!
     ef4:	mov	x29, sp
     ef8:	str	x19, [sp, #16]
     efc:	cmp	x2, #0x1
     f00:	b.ne	f68 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x78>  // b.any
     f04:	mov	x19, x8
     f08:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     f0c:	ldr	x0, [x0]
     f10:	ldr	x3, [x1]
     f14:	str	x3, [sp, #40]
     f18:	ldr	x1, [x0, #728]
     f1c:	ldr	x2, [x0, #736]
     f20:	cmp	x1, x2
     f24:	b.eq	f88 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x98>  // b.none
     f28:	str	x3, [x1]
     f2c:	ldr	x1, [x0, #728]
     f30:	add	x1, x1, #0x8
     f34:	str	x1, [x0, #728]
     f38:	mov	w0, #0x1                   	// #1
     f3c:	str	w0, [x19, #16]
     f40:	str	xzr, [x19, #8]
     f44:	str	xzr, [x19, #24]
     f48:	str	xzr, [x19, #32]
     f4c:	str	xzr, [x19, #40]
     f50:	str	wzr, [x19]
     f54:	str	wzr, [x19, #4]
     f58:	mov	x0, x19
     f5c:	ldr	x19, [sp, #16]
     f60:	ldp	x29, x30, [sp], #48
     f64:	ret
     f68:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     f6c:	add	x3, x3, #0x0
     f70:	mov	w2, #0x138                 	// #312
     f74:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     f78:	add	x1, x1, #0x0
     f7c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     f80:	add	x0, x0, #0x0
     f84:	bl	0 <__assert_fail>
     f88:	add	x2, sp, #0x28
     f8c:	add	x0, x0, #0x2d0
     f90:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
     f94:	b	f38 <_ZL12lle_X_atexitPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x48>

0000000000000f98 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
     f98:	stp	x29, x30, [sp, #-400]!
     f9c:	mov	x29, sp
     fa0:	stp	x19, x20, [sp, #16]
     fa4:	stp	x25, x26, [sp, #64]
     fa8:	mov	x20, x8
     fac:	mov	x19, x1
     fb0:	str	x2, [sp, #104]
     fb4:	str	x3, [sp, #112]
     fb8:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     fbc:	add	x1, x2, #0x0
     fc0:	str	x0, [x2]
     fc4:	add	x1, x1, #0x8
     fc8:	ldar	x0, [x1]
     fcc:	cbz	x0, 103c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xa4>
     fd0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
     fd4:	add	x0, x0, #0x0
     fd8:	add	x0, x0, #0x8
     fdc:	ldr	x25, [x0]
     fe0:	cbz	x25, 1060 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xc8>
     fe4:	adrp	x0, 0 <__pthread_key_create>
     fe8:	ldr	x0, [x0]
     fec:	cbz	x0, ffc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x64>
     ff0:	mov	x0, x25
     ff4:	bl	0 <pthread_mutex_lock>
     ff8:	cbnz	w0, 1074 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xdc>
     ffc:	stp	x21, x22, [sp, #32]
    1000:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1004:	add	x0, x0, #0x0
    1008:	add	x0, x0, #0x20
    100c:	ldar	x0, [x0]
    1010:	cbz	x0, 1084 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xec>
    1014:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1018:	add	x0, x0, #0x0
    101c:	add	x0, x0, #0x20
    1020:	ldr	x21, [x0]
    1024:	ldr	x0, [x21, #16]
    1028:	add	x21, x21, #0x8
    102c:	cbz	x0, 10dc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x144>
    1030:	mov	x1, x21
    1034:	mov	x3, x19
    1038:	b	10b0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x118>
    103c:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1040:	add	x2, x2, #0x0
    1044:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1048:	add	x1, x1, #0x0
    104c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1050:	add	x0, x0, #0x0
    1054:	add	x0, x0, #0x8
    1058:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    105c:	b	fd0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x38>
    1060:	stp	x21, x22, [sp, #32]
    1064:	stp	x23, x24, [sp, #48]
    1068:	stp	x27, x28, [sp, #80]
    106c:	mov	w0, #0x1                   	// #1
    1070:	bl	0 <_ZSt20__throw_system_errori>
    1074:	stp	x21, x22, [sp, #32]
    1078:	stp	x23, x24, [sp, #48]
    107c:	stp	x27, x28, [sp, #80]
    1080:	bl	0 <_ZSt20__throw_system_errori>
    1084:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1088:	add	x2, x2, #0x0
    108c:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1090:	add	x1, x1, #0x0
    1094:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1098:	add	x0, x0, #0x0
    109c:	add	x0, x0, #0x20
    10a0:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    10a4:	b	1014 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x7c>
    10a8:	ldr	x0, [x0, #24]
    10ac:	cbz	x0, 10c8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x130>
    10b0:	ldr	x2, [x0, #32]
    10b4:	cmp	x2, x19
    10b8:	b.cc	10a8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x110>  // b.lo, b.ul, b.last
    10bc:	mov	x1, x0
    10c0:	ldr	x0, [x0, #16]
    10c4:	b	10ac <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x114>
    10c8:	cmp	x21, x1
    10cc:	b.eq	1164 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1cc>  // b.none
    10d0:	ldr	x0, [x1, #32]
    10d4:	cmp	x0, x3
    10d8:	csel	x21, x21, x1, hi  // hi = pmore
    10dc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    10e0:	add	x0, x0, #0x0
    10e4:	add	x0, x0, #0x20
    10e8:	ldar	x0, [x0]
    10ec:	cbz	x0, 116c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1d4>
    10f0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    10f4:	add	x0, x0, #0x0
    10f8:	add	x0, x0, #0x20
    10fc:	ldr	x0, [x0]
    1100:	add	x0, x0, #0x8
    1104:	cmp	x21, x0
    1108:	b.eq	1190 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1f8>  // b.none
    110c:	ldr	x21, [x21, #40]
    1110:	cbz	x21, 174c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x7b4>
    1114:	adrp	x0, 0 <__pthread_key_create>
    1118:	ldr	x0, [x0]
    111c:	cbz	x0, 1128 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x190>
    1120:	mov	x0, x25
    1124:	bl	0 <pthread_mutex_unlock>
    1128:	ldr	x0, [x19, #24]
    112c:	cbz	x0, 16fc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x764>
    1130:	ldrb	w1, [x0, #8]
    1134:	cmp	w1, #0xc
    1138:	b.ne	1724 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x78c>  // b.any
    113c:	mov	x8, x20
    1140:	ldr	x1, [sp, #104]
    1144:	ldr	x2, [sp, #112]
    1148:	blr	x21
    114c:	mov	x0, x20
    1150:	ldp	x21, x22, [sp, #32]
    1154:	ldp	x19, x20, [sp, #16]
    1158:	ldp	x25, x26, [sp, #64]
    115c:	ldp	x29, x30, [sp], #400
    1160:	ret
    1164:	mov	x21, x1
    1168:	b	10dc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x144>
    116c:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1170:	add	x2, x2, #0x0
    1174:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1178:	add	x1, x1, #0x0
    117c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1180:	add	x0, x0, #0x0
    1184:	add	x0, x0, #0x20
    1188:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    118c:	b	10f0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x158>
    1190:	add	x0, sp, #0x80
    1194:	add	x1, x0, #0x10
    1198:	str	x1, [sp, #128]
    119c:	mov	w3, #0x0                   	// #0
    11a0:	adrp	x2, 4d8 <_ZL12lle_X_memcpyPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x8>
    11a4:	add	x2, x2, #0x0
    11a8:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    11ac:	add	x1, x1, #0x0
    11b0:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    11b4:	ldr	x22, [x19, #24]
    11b8:	cbz	x22, 1248 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2b0>
    11bc:	ldrb	w0, [x22, #8]
    11c0:	cmp	w0, #0xc
    11c4:	b.ne	1270 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x2d8>  // b.any
    11c8:	stp	x23, x24, [sp, #48]
    11cc:	ldr	x0, [x22, #16]
    11d0:	ldr	x0, [x0]
    11d4:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    11d8:	mov	w23, w0
    11dc:	ldr	x24, [sp, #136]
    11e0:	add	x21, x24, #0x1
    11e4:	add	x0, sp, #0x90
    11e8:	ldr	x1, [sp, #128]
    11ec:	cmp	x1, x0
    11f0:	ldr	x0, [sp, #144]
    11f4:	mov	x1, #0xf                   	// #15
    11f8:	csel	x0, x0, x1, ne  // ne = any
    11fc:	cmp	x21, x0
    1200:	b.hi	1298 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x300>  // b.pmore
    1204:	ldr	x0, [sp, #128]
    1208:	strb	w23, [x0, x24]
    120c:	str	x21, [sp, #136]
    1210:	ldr	x0, [sp, #128]
    1214:	strb	wzr, [x0, x21]
    1218:	ldr	x0, [x22, #16]
    121c:	add	x21, x0, #0x8
    1220:	ldr	w26, [x22, #12]
    1224:	add	x26, x0, x26, lsl #3
    1228:	cmp	x21, x26
    122c:	b.eq	1320 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x388>  // b.none
    1230:	stp	x27, x28, [sp, #80]
    1234:	add	x0, sp, #0x80
    1238:	str	x0, [sp, #120]
    123c:	add	x28, sp, #0x90
    1240:	mov	x27, #0xf                   	// #15
    1244:	b	12d4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x33c>
    1248:	stp	x23, x24, [sp, #48]
    124c:	stp	x27, x28, [sp, #80]
    1250:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1254:	add	x3, x3, #0x0
    1258:	mov	w2, #0x69                  	// #105
    125c:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1260:	add	x1, x1, #0x0
    1264:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1268:	add	x0, x0, #0x0
    126c:	bl	0 <__assert_fail>
    1270:	stp	x23, x24, [sp, #48]
    1274:	stp	x27, x28, [sp, #80]
    1278:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    127c:	add	x3, x3, #0x0
    1280:	mov	w2, #0x108                 	// #264
    1284:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1288:	add	x1, x1, #0x0
    128c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1290:	add	x0, x0, #0x0
    1294:	bl	0 <__assert_fail>
    1298:	mov	x4, #0x1                   	// #1
    129c:	mov	x3, #0x0                   	// #0
    12a0:	mov	x2, #0x0                   	// #0
    12a4:	mov	x1, x24
    12a8:	add	x0, sp, #0x80
    12ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    12b0:	b	1204 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x26c>
    12b4:	ldr	x0, [sp, #128]
    12b8:	strb	w23, [x0, x24]
    12bc:	str	x22, [sp, #136]
    12c0:	ldr	x0, [sp, #128]
    12c4:	strb	wzr, [x0, x22]
    12c8:	add	x21, x21, #0x8
    12cc:	cmp	x26, x21
    12d0:	b.eq	131c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x384>  // b.none
    12d4:	ldr	x0, [x21]
    12d8:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    12dc:	mov	w23, w0
    12e0:	ldr	x24, [sp, #136]
    12e4:	add	x22, x24, #0x1
    12e8:	ldr	x0, [sp, #128]
    12ec:	cmp	x0, x28
    12f0:	ldr	x0, [sp, #144]
    12f4:	csel	x0, x0, x27, ne  // ne = any
    12f8:	cmp	x22, x0
    12fc:	b.ls	12b4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x31c>  // b.plast
    1300:	mov	x4, #0x1                   	// #1
    1304:	mov	x3, #0x0                   	// #0
    1308:	mov	x2, #0x0                   	// #0
    130c:	mov	x1, x24
    1310:	ldr	x0, [sp, #120]
    1314:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    1318:	b	12b4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x31c>
    131c:	ldp	x27, x28, [sp, #80]
    1320:	mov	x0, x19
    1324:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1328:	add	x2, sp, #0x220
    132c:	stp	x0, x1, [x2, #-216]
    1330:	mov	w0, #0x3                   	// #3
    1334:	strb	w0, [sp, #360]
    1338:	mov	w0, #0x5                   	// #5
    133c:	strb	w0, [sp, #361]
    1340:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1344:	add	x0, x0, #0x0
    1348:	str	x0, [sp, #344]
    134c:	add	x0, sp, #0x148
    1350:	str	x0, [sp, #352]
    1354:	add	x21, sp, #0xa0
    1358:	mov	x8, x21
    135c:	add	x0, sp, #0x158
    1360:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1364:	ldr	x2, [sp, #168]
    1368:	ldr	x1, [sp, #160]
    136c:	add	x0, sp, #0x80
    1370:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1374:	ldr	x0, [sp, #160]
    1378:	add	x21, x21, #0x10
    137c:	cmp	x0, x21
    1380:	b.eq	1388 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x3f0>  // b.none
    1384:	bl	0 <_ZdlPv>
    1388:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    138c:	add	x0, x0, #0x0
    1390:	add	x0, x0, #0x8
    1394:	ldar	x0, [x0]
    1398:	cbz	x0, 14e4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x54c>
    139c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    13a0:	add	x0, x0, #0x0
    13a4:	add	x0, x0, #0x8
    13a8:	ldr	x22, [x0]
    13ac:	adrp	x0, 0 <__pthread_key_create>
    13b0:	ldr	x0, [x0]
    13b4:	cbz	x0, 13c4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x42c>
    13b8:	mov	x0, x22
    13bc:	bl	0 <pthread_mutex_lock>
    13c0:	cbnz	w0, 1508 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x570>
    13c4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    13c8:	add	x0, x0, #0x0
    13cc:	add	x0, x0, #0x38
    13d0:	ldar	x0, [x0]
    13d4:	cbz	x0, 1510 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x578>
    13d8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    13dc:	add	x0, x0, #0x0
    13e0:	add	x0, x0, #0x38
    13e4:	ldr	x23, [x0]
    13e8:	add	x24, x23, #0x8
    13ec:	add	x3, sp, #0x80
    13f0:	mov	x2, x24
    13f4:	ldr	x1, [x23, #16]
    13f8:	mov	x0, x23
    13fc:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1400:	mov	x21, x0
    1404:	cmp	x24, x0
    1408:	b.eq	1450 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4b8>  // b.none
    140c:	ldr	x26, [sp, #136]
    1410:	ldr	x24, [x0, #40]
    1414:	cmp	x26, x24
    1418:	csel	x2, x26, x24, ls  // ls = plast
    141c:	cbz	x2, 1430 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x498>
    1420:	ldr	x1, [x0, #32]
    1424:	ldr	x0, [sp, #128]
    1428:	bl	0 <memcmp>
    142c:	cbnz	w0, 144c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4b4>
    1430:	sub	x0, x26, x24
    1434:	mov	x1, #0x7fffffff            	// #2147483647
    1438:	cmp	x0, x1
    143c:	b.gt	1478 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e0>
    1440:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1444:	cmp	x0, x1
    1448:	b.lt	1450 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4b8>  // b.tstop
    144c:	tbz	w0, #31, 1478 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e0>
    1450:	add	x0, sp, #0x80
    1454:	str	x0, [sp, #376]
    1458:	add	x4, sp, #0x170
    145c:	add	x3, sp, #0x178
    1460:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1464:	add	x2, x2, #0x0
    1468:	mov	x1, x21
    146c:	mov	x0, x23
    1470:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1474:	mov	x21, x0
    1478:	ldr	x21, [x21, #64]
    147c:	cbz	x21, 1534 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x59c>
    1480:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1484:	add	x0, x0, #0x0
    1488:	add	x0, x0, #0x20
    148c:	ldar	x0, [x0]
    1490:	cbz	x0, 16d0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x738>
    1494:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1498:	add	x0, x0, #0x0
    149c:	add	x0, x0, #0x20
    14a0:	ldr	x0, [x0]
    14a4:	str	x19, [sp, #232]
    14a8:	str	x21, [sp, #240]
    14ac:	add	x1, sp, #0xe8
    14b0:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    14b4:	adrp	x0, 0 <__pthread_key_create>
    14b8:	ldr	x0, [x0]
    14bc:	cbz	x0, 14c8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x530>
    14c0:	mov	x0, x22
    14c4:	bl	0 <pthread_mutex_unlock>
    14c8:	ldr	x0, [sp, #128]
    14cc:	add	x1, sp, #0x90
    14d0:	cmp	x0, x1
    14d4:	b.eq	16f4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x75c>  // b.none
    14d8:	bl	0 <_ZdlPv>
    14dc:	ldp	x23, x24, [sp, #48]
    14e0:	b	1110 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x178>
    14e4:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    14e8:	add	x2, x2, #0x0
    14ec:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    14f0:	add	x1, x1, #0x0
    14f4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    14f8:	add	x0, x0, #0x0
    14fc:	add	x0, x0, #0x8
    1500:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1504:	b	139c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x404>
    1508:	stp	x27, x28, [sp, #80]
    150c:	bl	0 <_ZSt20__throw_system_errori>
    1510:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1514:	add	x2, x2, #0x0
    1518:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    151c:	add	x1, x1, #0x0
    1520:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1524:	add	x0, x0, #0x0
    1528:	add	x0, x0, #0x38
    152c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    1530:	b	13d8 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x440>
    1534:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1538:	add	x0, x0, #0x0
    153c:	add	x0, x0, #0x38
    1540:	ldar	x0, [x0]
    1544:	cbz	x0, 16ac <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x714>
    1548:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    154c:	add	x0, x0, #0x0
    1550:	add	x0, x0, #0x38
    1554:	ldr	x23, [x0]
    1558:	mov	x0, x19
    155c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1560:	stp	x0, x1, [sp, #288]
    1564:	mov	w0, #0x3                   	// #3
    1568:	strb	w0, [sp, #320]
    156c:	mov	w0, #0x5                   	// #5
    1570:	strb	w0, [sp, #321]
    1574:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1578:	add	x0, x0, #0x0
    157c:	str	x0, [sp, #304]
    1580:	add	x0, sp, #0x120
    1584:	str	x0, [sp, #312]
    1588:	add	x21, sp, #0xa0
    158c:	mov	x8, x21
    1590:	add	x0, sp, #0x130
    1594:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1598:	add	x24, x23, #0x8
    159c:	mov	x3, x21
    15a0:	mov	x2, x24
    15a4:	ldr	x1, [x23, #16]
    15a8:	mov	x0, x23
    15ac:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    15b0:	mov	x21, x0
    15b4:	cmp	x24, x0
    15b8:	b.eq	1600 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x668>  // b.none
    15bc:	ldr	x26, [sp, #168]
    15c0:	ldr	x24, [x0, #40]
    15c4:	cmp	x26, x24
    15c8:	csel	x2, x26, x24, ls  // ls = plast
    15cc:	cbz	x2, 15e0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x648>
    15d0:	ldr	x1, [x0, #32]
    15d4:	ldr	x0, [sp, #160]
    15d8:	bl	0 <memcmp>
    15dc:	cbnz	w0, 15fc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x664>
    15e0:	sub	x0, x26, x24
    15e4:	mov	x1, #0x7fffffff            	// #2147483647
    15e8:	cmp	x0, x1
    15ec:	b.gt	1628 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x690>
    15f0:	mov	x1, #0xffffffff80000000    	// #-2147483648
    15f4:	cmp	x0, x1
    15f8:	b.lt	1600 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x668>  // b.tstop
    15fc:	tbz	w0, #31, 1628 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x690>
    1600:	add	x0, sp, #0xa0
    1604:	str	x0, [sp, #392]
    1608:	add	x4, sp, #0x180
    160c:	add	x3, sp, #0x188
    1610:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1614:	add	x2, x2, #0x0
    1618:	mov	x1, x21
    161c:	mov	x0, x23
    1620:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1624:	mov	x21, x0
    1628:	ldr	x21, [x21, #64]
    162c:	ldr	x0, [sp, #160]
    1630:	add	x1, sp, #0xb0
    1634:	cmp	x0, x1
    1638:	b.eq	1640 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x6a8>  // b.none
    163c:	bl	0 <_ZdlPv>
    1640:	cbnz	x21, 1480 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e8>
    1644:	mov	x0, x19
    1648:	bl	0 <_ZNK4llvm5Value7getNameEv>
    164c:	stp	x0, x1, [sp, #248]
    1650:	mov	w0, #0x3                   	// #3
    1654:	strb	w0, [sp, #280]
    1658:	mov	w0, #0x5                   	// #5
    165c:	strb	w0, [sp, #281]
    1660:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1664:	add	x0, x0, #0x0
    1668:	str	x0, [sp, #264]
    166c:	add	x0, sp, #0xf8
    1670:	str	x0, [sp, #272]
    1674:	add	x23, sp, #0xa0
    1678:	mov	x8, x23
    167c:	add	x0, sp, #0x108
    1680:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1684:	ldr	x0, [sp, #160]
    1688:	bl	0 <_ZN4llvm3sys14DynamicLibrary24SearchForAddressOfSymbolEPKc>
    168c:	mov	x21, x0
    1690:	ldr	x0, [sp, #160]
    1694:	add	x23, x23, #0x10
    1698:	cmp	x0, x23
    169c:	b.eq	16a4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x70c>  // b.none
    16a0:	bl	0 <_ZdlPv>
    16a4:	cbz	x21, 14b4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x51c>
    16a8:	b	1480 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4e8>
    16ac:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    16b0:	add	x2, x2, #0x0
    16b4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    16b8:	add	x1, x1, #0x0
    16bc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    16c0:	add	x0, x0, #0x0
    16c4:	add	x0, x0, #0x38
    16c8:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    16cc:	b	1548 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x5b0>
    16d0:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    16d4:	add	x2, x2, #0x0
    16d8:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    16dc:	add	x1, x1, #0x0
    16e0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    16e4:	add	x0, x0, #0x0
    16e8:	add	x0, x0, #0x20
    16ec:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    16f0:	b	1494 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x4fc>
    16f4:	ldp	x23, x24, [sp, #48]
    16f8:	b	1110 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x178>
    16fc:	stp	x23, x24, [sp, #48]
    1700:	stp	x27, x28, [sp, #80]
    1704:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1708:	add	x3, x3, #0x0
    170c:	mov	w2, #0x69                  	// #105
    1710:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1714:	add	x1, x1, #0x0
    1718:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    171c:	add	x0, x0, #0x0
    1720:	bl	0 <__assert_fail>
    1724:	stp	x23, x24, [sp, #48]
    1728:	stp	x27, x28, [sp, #80]
    172c:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1730:	add	x3, x3, #0x0
    1734:	mov	w2, #0x108                 	// #264
    1738:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    173c:	add	x1, x1, #0x0
    1740:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1744:	add	x0, x0, #0x0
    1748:	bl	0 <__assert_fail>
    174c:	mov	x0, x19
    1750:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1754:	cmp	x1, #0x6
    1758:	b.eq	17a0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x808>  // b.none
    175c:	stp	x23, x24, [sp, #48]
    1760:	stp	x27, x28, [sp, #80]
    1764:	mov	x0, x19
    1768:	bl	0 <_ZNK4llvm5Value7getNameEv>
    176c:	stp	x0, x1, [sp, #216]
    1770:	mov	w0, #0x3                   	// #3
    1774:	strb	w0, [sp, #208]
    1778:	mov	w0, #0x5                   	// #5
    177c:	strb	w0, [sp, #209]
    1780:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1784:	add	x0, x0, #0x0
    1788:	str	x0, [sp, #192]
    178c:	add	x0, sp, #0xd8
    1790:	str	x0, [sp, #200]
    1794:	mov	w1, #0x1                   	// #1
    1798:	add	x0, sp, #0xc0
    179c:	bl	0 <_ZN4llvm18report_fatal_errorERKNS_5TwineEb>
    17a0:	mov	x2, #0x6                   	// #6
    17a4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    17a8:	add	x1, x1, #0x0
    17ac:	bl	0 <memcmp>
    17b0:	cbnz	w0, 175c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x7c4>
    17b4:	bl	0 <_ZN4llvm4errsEv>
    17b8:	mov	x21, x0
    17bc:	ldr	x1, [x0, #24]
    17c0:	ldr	x0, [x0, #16]
    17c4:	sub	x0, x0, x1
    17c8:	cmp	x0, #0x2e
    17cc:	b.ls	1808 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x870>  // b.plast
    17d0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    17d4:	add	x0, x0, #0x0
    17d8:	ldp	x2, x3, [x0]
    17dc:	stp	x2, x3, [x1]
    17e0:	ldp	x2, x3, [x0, #16]
    17e4:	stp	x2, x3, [x1, #16]
    17e8:	ldr	x2, [x0, #32]
    17ec:	str	x2, [x1, #32]
    17f0:	ldur	x0, [x0, #39]
    17f4:	stur	x0, [x1, #39]
    17f8:	ldr	x0, [x21, #24]
    17fc:	add	x0, x0, #0x2f
    1800:	str	x0, [x21, #24]
    1804:	b	1820 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x888>
    1808:	mov	x2, #0x2f                  	// #47
    180c:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1810:	add	x1, x1, #0x0
    1814:	mov	x0, x21
    1818:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    181c:	mov	x21, x0
    1820:	ldr	x0, [x19]
    1824:	cbz	x0, 187c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x8e4>
    1828:	ldrb	w1, [x0, #8]
    182c:	cmp	w1, #0xf
    1830:	b.ne	18a4 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x90c>  // b.any
    1834:	mov	w3, #0x0                   	// #0
    1838:	mov	w2, #0x0                   	// #0
    183c:	mov	x1, x21
    1840:	bl	0 <_ZNK4llvm4Type5printERNS_11raw_ostreamEbb>
    1844:	ldr	x1, [x21, #24]
    1848:	ldr	x0, [x21, #16]
    184c:	sub	x0, x0, x1
    1850:	cmp	x0, #0x7
    1854:	b.ls	18cc <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x934>  // b.plast
    1858:	mov	x0, #0x5f20                	// #24352
    185c:	movk	x0, #0x6d5f, lsl #16
    1860:	movk	x0, #0x6961, lsl #32
    1864:	movk	x0, #0xa6e, lsl #48
    1868:	str	x0, [x1]
    186c:	ldr	x0, [x21, #24]
    1870:	add	x0, x0, #0x8
    1874:	str	x0, [x21, #24]
    1878:	b	18e0 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x948>
    187c:	stp	x23, x24, [sp, #48]
    1880:	stp	x27, x28, [sp, #80]
    1884:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1888:	add	x3, x3, #0x0
    188c:	mov	w2, #0x69                  	// #105
    1890:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1894:	add	x1, x1, #0x0
    1898:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    189c:	add	x0, x0, #0x0
    18a0:	bl	0 <__assert_fail>
    18a4:	stp	x23, x24, [sp, #48]
    18a8:	stp	x27, x28, [sp, #80]
    18ac:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    18b0:	add	x3, x3, #0x0
    18b4:	mov	w2, #0x108                 	// #264
    18b8:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    18bc:	add	x1, x1, #0x0
    18c0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    18c4:	add	x0, x0, #0x0
    18c8:	bl	0 <__assert_fail>
    18cc:	mov	x2, #0x8                   	// #8
    18d0:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    18d4:	add	x1, x1, #0x0
    18d8:	mov	x0, x21
    18dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    18e0:	bl	0 <_ZN4llvm4errsEv>
    18e4:	ldr	x2, [x0, #24]
    18e8:	ldr	x1, [x0, #16]
    18ec:	sub	x1, x1, x2
    18f0:	cmp	x1, #0x31
    18f4:	b.ls	1930 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x998>  // b.plast
    18f8:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    18fc:	add	x1, x1, #0x0
    1900:	ldp	x4, x5, [x1]
    1904:	stp	x4, x5, [x2]
    1908:	ldp	x4, x5, [x1, #16]
    190c:	stp	x4, x5, [x2, #16]
    1910:	ldp	x4, x5, [x1, #32]
    1914:	stp	x4, x5, [x2, #32]
    1918:	ldrh	w1, [x1, #48]
    191c:	strh	w1, [x2, #48]
    1920:	ldr	x1, [x0, #24]
    1924:	add	x1, x1, #0x32
    1928:	str	x1, [x0, #24]
    192c:	b	1940 <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x9a8>
    1930:	mov	x2, #0x32                  	// #50
    1934:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1938:	add	x1, x1, #0x0
    193c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1940:	mov	w0, #0x1                   	// #1
    1944:	str	w0, [x20, #16]
    1948:	str	xzr, [x20, #8]
    194c:	str	xzr, [x20, #24]
    1950:	str	xzr, [x20, #32]
    1954:	str	xzr, [x20, #40]
    1958:	str	wzr, [x20]
    195c:	str	wzr, [x20, #4]
    1960:	adrp	x0, 0 <__pthread_key_create>
    1964:	ldr	x0, [x0]
    1968:	cbz	x0, 114c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1b4>
    196c:	mov	x0, x25
    1970:	bl	0 <pthread_mutex_unlock>
    1974:	b	114c <_ZN4llvm11Interpreter20callExternalFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1b4>

0000000000001978 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv>:
    1978:	stp	x29, x30, [sp, #-256]!
    197c:	mov	x29, sp
    1980:	stp	x19, x20, [sp, #16]
    1984:	stp	x21, x22, [sp, #32]
    1988:	str	x23, [sp, #48]
    198c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1990:	add	x0, x0, #0x0
    1994:	add	x0, x0, #0x8
    1998:	ldar	x0, [x0]
    199c:	cbz	x0, 23c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa50>
    19a0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    19a4:	add	x0, x0, #0x0
    19a8:	add	x0, x0, #0x8
    19ac:	ldr	x20, [x0]
    19b0:	adrp	x0, 0 <__pthread_key_create>
    19b4:	ldr	x0, [x0]
    19b8:	cbz	x0, 19c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x50>
    19bc:	mov	x0, x20
    19c0:	bl	0 <pthread_mutex_lock>
    19c4:	cbnz	w0, 23ec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa74>
    19c8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    19cc:	add	x0, x0, #0x0
    19d0:	add	x0, x0, #0x38
    19d4:	ldar	x0, [x0]
    19d8:	cbz	x0, 23f0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa78>
    19dc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    19e0:	add	x0, x0, #0x0
    19e4:	add	x0, x0, #0x38
    19e8:	ldr	x21, [x0]
    19ec:	add	x19, sp, #0x40
    19f0:	add	x0, sp, #0x50
    19f4:	str	x0, [sp, #64]
    19f8:	mov	w3, #0x0                   	// #0
    19fc:	adrp	x2, 868 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x288>
    1a00:	add	x2, x2, #0x0
    1a04:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1a08:	add	x1, x1, #0x0
    1a0c:	mov	x0, x19
    1a10:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1a14:	add	x22, x21, #0x8
    1a18:	mov	x3, x19
    1a1c:	mov	x2, x22
    1a20:	ldr	x1, [x21, #16]
    1a24:	mov	x0, x21
    1a28:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1a2c:	mov	x19, x0
    1a30:	cmp	x22, x0
    1a34:	b.eq	1a7c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x104>  // b.none
    1a38:	ldr	x23, [sp, #72]
    1a3c:	ldr	x22, [x0, #40]
    1a40:	cmp	x23, x22
    1a44:	csel	x2, x23, x22, ls  // ls = plast
    1a48:	cbz	x2, 1a5c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xe4>
    1a4c:	ldr	x1, [x0, #32]
    1a50:	ldr	x0, [sp, #64]
    1a54:	bl	0 <memcmp>
    1a58:	cbnz	w0, 1a78 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x100>
    1a5c:	sub	x0, x23, x22
    1a60:	mov	x1, #0x7fffffff            	// #2147483647
    1a64:	cmp	x0, x1
    1a68:	b.gt	1aa4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12c>
    1a6c:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1a70:	cmp	x0, x1
    1a74:	b.lt	1a7c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x104>  // b.tstop
    1a78:	tbz	w0, #31, 1aa4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x12c>
    1a7c:	add	x0, sp, #0x40
    1a80:	str	x0, [sp, #104]
    1a84:	add	x4, sp, #0x60
    1a88:	add	x3, sp, #0x68
    1a8c:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1a90:	add	x2, x2, #0x0
    1a94:	mov	x1, x19
    1a98:	mov	x0, x21
    1a9c:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1aa0:	mov	x19, x0
    1aa4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1aa8:	add	x0, x0, #0x0
    1aac:	str	x0, [x19, #64]
    1ab0:	ldr	x0, [sp, #64]
    1ab4:	add	x1, sp, #0x50
    1ab8:	cmp	x0, x1
    1abc:	b.eq	1ac4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x14c>  // b.none
    1ac0:	bl	0 <_ZdlPv>
    1ac4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1ac8:	add	x0, x0, #0x0
    1acc:	add	x0, x0, #0x38
    1ad0:	ldar	x0, [x0]
    1ad4:	cbz	x0, 2414 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa9c>
    1ad8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1adc:	add	x0, x0, #0x0
    1ae0:	add	x0, x0, #0x38
    1ae4:	ldr	x21, [x0]
    1ae8:	add	x19, sp, #0x40
    1aec:	add	x0, sp, #0x50
    1af0:	str	x0, [sp, #64]
    1af4:	mov	w3, #0x0                   	// #0
    1af8:	adrp	x2, 878 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x298>
    1afc:	add	x2, x2, #0x0
    1b00:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1b04:	add	x1, x1, #0x0
    1b08:	mov	x0, x19
    1b0c:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1b10:	add	x22, x21, #0x8
    1b14:	mov	x3, x19
    1b18:	mov	x2, x22
    1b1c:	ldr	x1, [x21, #16]
    1b20:	mov	x0, x21
    1b24:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1b28:	mov	x19, x0
    1b2c:	cmp	x22, x0
    1b30:	b.eq	1b78 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x200>  // b.none
    1b34:	ldr	x23, [sp, #72]
    1b38:	ldr	x22, [x0, #40]
    1b3c:	cmp	x23, x22
    1b40:	csel	x2, x23, x22, ls  // ls = plast
    1b44:	cbz	x2, 1b58 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1e0>
    1b48:	ldr	x1, [x0, #32]
    1b4c:	ldr	x0, [sp, #64]
    1b50:	bl	0 <memcmp>
    1b54:	cbnz	w0, 1b74 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x1fc>
    1b58:	sub	x0, x23, x22
    1b5c:	mov	x1, #0x7fffffff            	// #2147483647
    1b60:	cmp	x0, x1
    1b64:	b.gt	1ba0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x228>
    1b68:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1b6c:	cmp	x0, x1
    1b70:	b.lt	1b78 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x200>  // b.tstop
    1b74:	tbz	w0, #31, 1ba0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x228>
    1b78:	add	x0, sp, #0x40
    1b7c:	str	x0, [sp, #120]
    1b80:	add	x4, sp, #0x70
    1b84:	add	x3, sp, #0x78
    1b88:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1b8c:	add	x2, x2, #0x0
    1b90:	mov	x1, x19
    1b94:	mov	x0, x21
    1b98:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1b9c:	mov	x19, x0
    1ba0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1ba4:	add	x0, x0, #0x0
    1ba8:	str	x0, [x19, #64]
    1bac:	ldr	x0, [sp, #64]
    1bb0:	add	x1, sp, #0x50
    1bb4:	cmp	x0, x1
    1bb8:	b.eq	1bc0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x248>  // b.none
    1bbc:	bl	0 <_ZdlPv>
    1bc0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1bc4:	add	x0, x0, #0x0
    1bc8:	add	x0, x0, #0x38
    1bcc:	ldar	x0, [x0]
    1bd0:	cbz	x0, 2438 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xac0>
    1bd4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1bd8:	add	x0, x0, #0x0
    1bdc:	add	x0, x0, #0x38
    1be0:	ldr	x21, [x0]
    1be4:	add	x19, sp, #0x40
    1be8:	add	x0, sp, #0x50
    1bec:	str	x0, [sp, #64]
    1bf0:	mov	w3, #0x0                   	// #0
    1bf4:	adrp	x2, 888 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2a8>
    1bf8:	add	x2, x2, #0x0
    1bfc:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1c00:	add	x1, x1, #0x0
    1c04:	mov	x0, x19
    1c08:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1c0c:	add	x22, x21, #0x8
    1c10:	mov	x3, x19
    1c14:	mov	x2, x22
    1c18:	ldr	x1, [x21, #16]
    1c1c:	mov	x0, x21
    1c20:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1c24:	mov	x19, x0
    1c28:	cmp	x22, x0
    1c2c:	b.eq	1c74 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2fc>  // b.none
    1c30:	ldr	x23, [sp, #72]
    1c34:	ldr	x22, [x0, #40]
    1c38:	cmp	x23, x22
    1c3c:	csel	x2, x23, x22, ls  // ls = plast
    1c40:	cbz	x2, 1c54 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2dc>
    1c44:	ldr	x1, [x0, #32]
    1c48:	ldr	x0, [sp, #64]
    1c4c:	bl	0 <memcmp>
    1c50:	cbnz	w0, 1c70 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2f8>
    1c54:	sub	x0, x23, x22
    1c58:	mov	x1, #0x7fffffff            	// #2147483647
    1c5c:	cmp	x0, x1
    1c60:	b.gt	1c9c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x324>
    1c64:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1c68:	cmp	x0, x1
    1c6c:	b.lt	1c74 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x2fc>  // b.tstop
    1c70:	tbz	w0, #31, 1c9c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x324>
    1c74:	add	x0, sp, #0x40
    1c78:	str	x0, [sp, #136]
    1c7c:	add	x4, sp, #0x80
    1c80:	add	x3, sp, #0x88
    1c84:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1c88:	add	x2, x2, #0x0
    1c8c:	mov	x1, x19
    1c90:	mov	x0, x21
    1c94:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1c98:	mov	x19, x0
    1c9c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1ca0:	add	x0, x0, #0x0
    1ca4:	str	x0, [x19, #64]
    1ca8:	ldr	x0, [sp, #64]
    1cac:	add	x1, sp, #0x50
    1cb0:	cmp	x0, x1
    1cb4:	b.eq	1cbc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x344>  // b.none
    1cb8:	bl	0 <_ZdlPv>
    1cbc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1cc0:	add	x0, x0, #0x0
    1cc4:	add	x0, x0, #0x38
    1cc8:	ldar	x0, [x0]
    1ccc:	cbz	x0, 245c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xae4>
    1cd0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1cd4:	add	x0, x0, #0x0
    1cd8:	add	x0, x0, #0x38
    1cdc:	ldr	x21, [x0]
    1ce0:	add	x19, sp, #0x40
    1ce4:	add	x0, sp, #0x50
    1ce8:	str	x0, [sp, #64]
    1cec:	mov	w3, #0x0                   	// #0
    1cf0:	adrp	x2, 898 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2b8>
    1cf4:	add	x2, x2, #0x0
    1cf8:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1cfc:	add	x1, x1, #0x0
    1d00:	mov	x0, x19
    1d04:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1d08:	add	x22, x21, #0x8
    1d0c:	mov	x3, x19
    1d10:	mov	x2, x22
    1d14:	ldr	x1, [x21, #16]
    1d18:	mov	x0, x21
    1d1c:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1d20:	mov	x19, x0
    1d24:	cmp	x22, x0
    1d28:	b.eq	1d70 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x3f8>  // b.none
    1d2c:	ldr	x23, [sp, #72]
    1d30:	ldr	x22, [x0, #40]
    1d34:	cmp	x23, x22
    1d38:	csel	x2, x23, x22, ls  // ls = plast
    1d3c:	cbz	x2, 1d50 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x3d8>
    1d40:	ldr	x1, [x0, #32]
    1d44:	ldr	x0, [sp, #64]
    1d48:	bl	0 <memcmp>
    1d4c:	cbnz	w0, 1d6c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x3f4>
    1d50:	sub	x0, x23, x22
    1d54:	mov	x1, #0x7fffffff            	// #2147483647
    1d58:	cmp	x0, x1
    1d5c:	b.gt	1d98 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x420>
    1d60:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1d64:	cmp	x0, x1
    1d68:	b.lt	1d70 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x3f8>  // b.tstop
    1d6c:	tbz	w0, #31, 1d98 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x420>
    1d70:	add	x0, sp, #0x40
    1d74:	str	x0, [sp, #152]
    1d78:	add	x4, sp, #0x90
    1d7c:	add	x3, sp, #0x98
    1d80:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1d84:	add	x2, x2, #0x0
    1d88:	mov	x1, x19
    1d8c:	mov	x0, x21
    1d90:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1d94:	mov	x19, x0
    1d98:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1d9c:	add	x0, x0, #0x0
    1da0:	str	x0, [x19, #64]
    1da4:	ldr	x0, [sp, #64]
    1da8:	add	x1, sp, #0x50
    1dac:	cmp	x0, x1
    1db0:	b.eq	1db8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x440>  // b.none
    1db4:	bl	0 <_ZdlPv>
    1db8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1dbc:	add	x0, x0, #0x0
    1dc0:	add	x0, x0, #0x38
    1dc4:	ldar	x0, [x0]
    1dc8:	cbz	x0, 2480 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb08>
    1dcc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1dd0:	add	x0, x0, #0x0
    1dd4:	add	x0, x0, #0x38
    1dd8:	ldr	x21, [x0]
    1ddc:	add	x19, sp, #0x40
    1de0:	add	x0, sp, #0x50
    1de4:	str	x0, [sp, #64]
    1de8:	mov	w3, #0x0                   	// #0
    1dec:	adrp	x2, 8a8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2c8>
    1df0:	add	x2, x2, #0x0
    1df4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1df8:	add	x1, x1, #0x0
    1dfc:	mov	x0, x19
    1e00:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1e04:	add	x22, x21, #0x8
    1e08:	mov	x3, x19
    1e0c:	mov	x2, x22
    1e10:	ldr	x1, [x21, #16]
    1e14:	mov	x0, x21
    1e18:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1e1c:	mov	x19, x0
    1e20:	cmp	x22, x0
    1e24:	b.eq	1e6c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4f4>  // b.none
    1e28:	ldr	x23, [sp, #72]
    1e2c:	ldr	x22, [x0, #40]
    1e30:	cmp	x23, x22
    1e34:	csel	x2, x23, x22, ls  // ls = plast
    1e38:	cbz	x2, 1e4c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4d4>
    1e3c:	ldr	x1, [x0, #32]
    1e40:	ldr	x0, [sp, #64]
    1e44:	bl	0 <memcmp>
    1e48:	cbnz	w0, 1e68 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4f0>
    1e4c:	sub	x0, x23, x22
    1e50:	mov	x1, #0x7fffffff            	// #2147483647
    1e54:	cmp	x0, x1
    1e58:	b.gt	1e94 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x51c>
    1e5c:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1e60:	cmp	x0, x1
    1e64:	b.lt	1e6c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x4f4>  // b.tstop
    1e68:	tbz	w0, #31, 1e94 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x51c>
    1e6c:	add	x0, sp, #0x40
    1e70:	str	x0, [sp, #168]
    1e74:	add	x4, sp, #0xa0
    1e78:	add	x3, sp, #0xa8
    1e7c:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1e80:	add	x2, x2, #0x0
    1e84:	mov	x1, x19
    1e88:	mov	x0, x21
    1e8c:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1e90:	mov	x19, x0
    1e94:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1e98:	add	x0, x0, #0x0
    1e9c:	str	x0, [x19, #64]
    1ea0:	ldr	x0, [sp, #64]
    1ea4:	add	x1, sp, #0x50
    1ea8:	cmp	x0, x1
    1eac:	b.eq	1eb4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x53c>  // b.none
    1eb0:	bl	0 <_ZdlPv>
    1eb4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1eb8:	add	x0, x0, #0x0
    1ebc:	add	x0, x0, #0x38
    1ec0:	ldar	x0, [x0]
    1ec4:	cbz	x0, 24a4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb2c>
    1ec8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1ecc:	add	x0, x0, #0x0
    1ed0:	add	x0, x0, #0x38
    1ed4:	ldr	x21, [x0]
    1ed8:	add	x19, sp, #0x40
    1edc:	add	x0, sp, #0x50
    1ee0:	str	x0, [sp, #64]
    1ee4:	mov	w3, #0x0                   	// #0
    1ee8:	adrp	x2, 8b8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2d8>
    1eec:	add	x2, x2, #0x0
    1ef0:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1ef4:	add	x1, x1, #0x0
    1ef8:	mov	x0, x19
    1efc:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1f00:	add	x22, x21, #0x8
    1f04:	mov	x3, x19
    1f08:	mov	x2, x22
    1f0c:	ldr	x1, [x21, #16]
    1f10:	mov	x0, x21
    1f14:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1f18:	mov	x19, x0
    1f1c:	cmp	x22, x0
    1f20:	b.eq	1f68 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5f0>  // b.none
    1f24:	ldr	x23, [sp, #72]
    1f28:	ldr	x22, [x0, #40]
    1f2c:	cmp	x23, x22
    1f30:	csel	x2, x23, x22, ls  // ls = plast
    1f34:	cbz	x2, 1f48 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5d0>
    1f38:	ldr	x1, [x0, #32]
    1f3c:	ldr	x0, [sp, #64]
    1f40:	bl	0 <memcmp>
    1f44:	cbnz	w0, 1f64 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5ec>
    1f48:	sub	x0, x23, x22
    1f4c:	mov	x1, #0x7fffffff            	// #2147483647
    1f50:	cmp	x0, x1
    1f54:	b.gt	1f90 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x618>
    1f58:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1f5c:	cmp	x0, x1
    1f60:	b.lt	1f68 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x5f0>  // b.tstop
    1f64:	tbz	w0, #31, 1f90 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x618>
    1f68:	add	x0, sp, #0x40
    1f6c:	str	x0, [sp, #184]
    1f70:	add	x4, sp, #0xb0
    1f74:	add	x3, sp, #0xb8
    1f78:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1f7c:	add	x2, x2, #0x0
    1f80:	mov	x1, x19
    1f84:	mov	x0, x21
    1f88:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1f8c:	mov	x19, x0
    1f90:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1f94:	add	x0, x0, #0x0
    1f98:	str	x0, [x19, #64]
    1f9c:	ldr	x0, [sp, #64]
    1fa0:	add	x1, sp, #0x50
    1fa4:	cmp	x0, x1
    1fa8:	b.eq	1fb0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x638>  // b.none
    1fac:	bl	0 <_ZdlPv>
    1fb0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1fb4:	add	x0, x0, #0x0
    1fb8:	add	x0, x0, #0x38
    1fbc:	ldar	x0, [x0]
    1fc0:	cbz	x0, 24c8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb50>
    1fc4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1fc8:	add	x0, x0, #0x0
    1fcc:	add	x0, x0, #0x38
    1fd0:	ldr	x21, [x0]
    1fd4:	add	x19, sp, #0x40
    1fd8:	add	x0, sp, #0x50
    1fdc:	str	x0, [sp, #64]
    1fe0:	mov	w3, #0x0                   	// #0
    1fe4:	adrp	x2, 8c8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2e8>
    1fe8:	add	x2, x2, #0x0
    1fec:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    1ff0:	add	x1, x1, #0x0
    1ff4:	mov	x0, x19
    1ff8:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    1ffc:	add	x22, x21, #0x8
    2000:	mov	x3, x19
    2004:	mov	x2, x22
    2008:	ldr	x1, [x21, #16]
    200c:	mov	x0, x21
    2010:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    2014:	mov	x19, x0
    2018:	cmp	x22, x0
    201c:	b.eq	2064 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6ec>  // b.none
    2020:	ldr	x23, [sp, #72]
    2024:	ldr	x22, [x0, #40]
    2028:	cmp	x23, x22
    202c:	csel	x2, x23, x22, ls  // ls = plast
    2030:	cbz	x2, 2044 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6cc>
    2034:	ldr	x1, [x0, #32]
    2038:	ldr	x0, [sp, #64]
    203c:	bl	0 <memcmp>
    2040:	cbnz	w0, 2060 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6e8>
    2044:	sub	x0, x23, x22
    2048:	mov	x1, #0x7fffffff            	// #2147483647
    204c:	cmp	x0, x1
    2050:	b.gt	208c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x714>
    2054:	mov	x1, #0xffffffff80000000    	// #-2147483648
    2058:	cmp	x0, x1
    205c:	b.lt	2064 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x6ec>  // b.tstop
    2060:	tbz	w0, #31, 208c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x714>
    2064:	add	x0, sp, #0x40
    2068:	str	x0, [sp, #200]
    206c:	add	x4, sp, #0xc0
    2070:	add	x3, sp, #0xc8
    2074:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2078:	add	x2, x2, #0x0
    207c:	mov	x1, x19
    2080:	mov	x0, x21
    2084:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    2088:	mov	x19, x0
    208c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2090:	add	x0, x0, #0x0
    2094:	str	x0, [x19, #64]
    2098:	ldr	x0, [sp, #64]
    209c:	add	x1, sp, #0x50
    20a0:	cmp	x0, x1
    20a4:	b.eq	20ac <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x734>  // b.none
    20a8:	bl	0 <_ZdlPv>
    20ac:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    20b0:	add	x0, x0, #0x0
    20b4:	add	x0, x0, #0x38
    20b8:	ldar	x0, [x0]
    20bc:	cbz	x0, 24ec <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb74>
    20c0:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    20c4:	add	x0, x0, #0x0
    20c8:	add	x0, x0, #0x38
    20cc:	ldr	x21, [x0]
    20d0:	add	x19, sp, #0x40
    20d4:	add	x0, sp, #0x50
    20d8:	str	x0, [sp, #64]
    20dc:	mov	w3, #0x0                   	// #0
    20e0:	adrp	x2, 8d8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x2f8>
    20e4:	add	x2, x2, #0x0
    20e8:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    20ec:	add	x1, x1, #0x0
    20f0:	mov	x0, x19
    20f4:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    20f8:	add	x22, x21, #0x8
    20fc:	mov	x3, x19
    2100:	mov	x2, x22
    2104:	ldr	x1, [x21, #16]
    2108:	mov	x0, x21
    210c:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    2110:	mov	x19, x0
    2114:	cmp	x22, x0
    2118:	b.eq	2160 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7e8>  // b.none
    211c:	ldr	x23, [sp, #72]
    2120:	ldr	x22, [x0, #40]
    2124:	cmp	x23, x22
    2128:	csel	x2, x23, x22, ls  // ls = plast
    212c:	cbz	x2, 2140 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7c8>
    2130:	ldr	x1, [x0, #32]
    2134:	ldr	x0, [sp, #64]
    2138:	bl	0 <memcmp>
    213c:	cbnz	w0, 215c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7e4>
    2140:	sub	x0, x23, x22
    2144:	mov	x1, #0x7fffffff            	// #2147483647
    2148:	cmp	x0, x1
    214c:	b.gt	2188 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x810>
    2150:	mov	x1, #0xffffffff80000000    	// #-2147483648
    2154:	cmp	x0, x1
    2158:	b.lt	2160 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x7e8>  // b.tstop
    215c:	tbz	w0, #31, 2188 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x810>
    2160:	add	x0, sp, #0x40
    2164:	str	x0, [sp, #216]
    2168:	add	x4, sp, #0xd0
    216c:	add	x3, sp, #0xd8
    2170:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2174:	add	x2, x2, #0x0
    2178:	mov	x1, x19
    217c:	mov	x0, x21
    2180:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    2184:	mov	x19, x0
    2188:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    218c:	add	x0, x0, #0x0
    2190:	str	x0, [x19, #64]
    2194:	ldr	x0, [sp, #64]
    2198:	add	x1, sp, #0x50
    219c:	cmp	x0, x1
    21a0:	b.eq	21a8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x830>  // b.none
    21a4:	bl	0 <_ZdlPv>
    21a8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    21ac:	add	x0, x0, #0x0
    21b0:	add	x0, x0, #0x38
    21b4:	ldar	x0, [x0]
    21b8:	cbz	x0, 2510 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xb98>
    21bc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    21c0:	add	x0, x0, #0x0
    21c4:	add	x0, x0, #0x38
    21c8:	ldr	x21, [x0]
    21cc:	add	x19, sp, #0x40
    21d0:	add	x0, sp, #0x50
    21d4:	str	x0, [sp, #64]
    21d8:	mov	w3, #0x0                   	// #0
    21dc:	adrp	x2, 8e8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x308>
    21e0:	add	x2, x2, #0x0
    21e4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    21e8:	add	x1, x1, #0x0
    21ec:	mov	x0, x19
    21f0:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    21f4:	add	x22, x21, #0x8
    21f8:	mov	x3, x19
    21fc:	mov	x2, x22
    2200:	ldr	x1, [x21, #16]
    2204:	mov	x0, x21
    2208:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    220c:	mov	x19, x0
    2210:	cmp	x22, x0
    2214:	b.eq	225c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8e4>  // b.none
    2218:	ldr	x23, [sp, #72]
    221c:	ldr	x22, [x0, #40]
    2220:	cmp	x23, x22
    2224:	csel	x2, x23, x22, ls  // ls = plast
    2228:	cbz	x2, 223c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8c4>
    222c:	ldr	x1, [x0, #32]
    2230:	ldr	x0, [sp, #64]
    2234:	bl	0 <memcmp>
    2238:	cbnz	w0, 2258 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8e0>
    223c:	sub	x0, x23, x22
    2240:	mov	x1, #0x7fffffff            	// #2147483647
    2244:	cmp	x0, x1
    2248:	b.gt	2284 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x90c>
    224c:	mov	x1, #0xffffffff80000000    	// #-2147483648
    2250:	cmp	x0, x1
    2254:	b.lt	225c <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x8e4>  // b.tstop
    2258:	tbz	w0, #31, 2284 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x90c>
    225c:	add	x0, sp, #0x40
    2260:	str	x0, [sp, #232]
    2264:	add	x4, sp, #0xe0
    2268:	add	x3, sp, #0xe8
    226c:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2270:	add	x2, x2, #0x0
    2274:	mov	x1, x19
    2278:	mov	x0, x21
    227c:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    2280:	mov	x19, x0
    2284:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2288:	add	x0, x0, #0x0
    228c:	str	x0, [x19, #64]
    2290:	ldr	x0, [sp, #64]
    2294:	add	x1, sp, #0x50
    2298:	cmp	x0, x1
    229c:	b.eq	22a4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x92c>  // b.none
    22a0:	bl	0 <_ZdlPv>
    22a4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    22a8:	add	x0, x0, #0x0
    22ac:	add	x0, x0, #0x38
    22b0:	ldar	x0, [x0]
    22b4:	cbz	x0, 2534 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xbbc>
    22b8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    22bc:	add	x0, x0, #0x0
    22c0:	add	x0, x0, #0x38
    22c4:	ldr	x21, [x0]
    22c8:	add	x19, sp, #0x40
    22cc:	add	x0, sp, #0x50
    22d0:	str	x0, [sp, #64]
    22d4:	mov	w3, #0x0                   	// #0
    22d8:	adrp	x2, 8f8 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x318>
    22dc:	add	x2, x2, #0x0
    22e0:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    22e4:	add	x1, x1, #0x0
    22e8:	mov	x0, x19
    22ec:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    22f0:	add	x22, x21, #0x8
    22f4:	mov	x3, x19
    22f8:	mov	x2, x22
    22fc:	ldr	x1, [x21, #16]
    2300:	mov	x0, x21
    2304:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    2308:	mov	x19, x0
    230c:	cmp	x22, x0
    2310:	b.eq	2358 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9e0>  // b.none
    2314:	ldr	x23, [sp, #72]
    2318:	ldr	x22, [x0, #40]
    231c:	cmp	x23, x22
    2320:	csel	x2, x23, x22, ls  // ls = plast
    2324:	cbz	x2, 2338 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9c0>
    2328:	ldr	x1, [x0, #32]
    232c:	ldr	x0, [sp, #64]
    2330:	bl	0 <memcmp>
    2334:	cbnz	w0, 2354 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9dc>
    2338:	sub	x0, x23, x22
    233c:	mov	x1, #0x7fffffff            	// #2147483647
    2340:	cmp	x0, x1
    2344:	b.gt	2380 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa08>
    2348:	mov	x1, #0xffffffff80000000    	// #-2147483648
    234c:	cmp	x0, x1
    2350:	b.lt	2358 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x9e0>  // b.tstop
    2354:	tbz	w0, #31, 2380 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa08>
    2358:	add	x0, sp, #0x40
    235c:	str	x0, [sp, #248]
    2360:	add	x4, sp, #0xf0
    2364:	add	x3, sp, #0xf8
    2368:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    236c:	add	x2, x2, #0x0
    2370:	mov	x1, x19
    2374:	mov	x0, x21
    2378:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    237c:	mov	x19, x0
    2380:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2384:	add	x0, x0, #0x0
    2388:	str	x0, [x19, #64]
    238c:	ldr	x0, [sp, #64]
    2390:	add	x1, sp, #0x50
    2394:	cmp	x0, x1
    2398:	b.eq	23a0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa28>  // b.none
    239c:	bl	0 <_ZdlPv>
    23a0:	adrp	x0, 0 <__pthread_key_create>
    23a4:	ldr	x0, [x0]
    23a8:	cbz	x0, 23b4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0xa3c>
    23ac:	mov	x0, x20
    23b0:	bl	0 <pthread_mutex_unlock>
    23b4:	ldp	x19, x20, [sp, #16]
    23b8:	ldp	x21, x22, [sp, #32]
    23bc:	ldr	x23, [sp, #48]
    23c0:	ldp	x29, x30, [sp], #256
    23c4:	ret
    23c8:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    23cc:	add	x2, x2, #0x0
    23d0:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    23d4:	add	x1, x1, #0x0
    23d8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    23dc:	add	x0, x0, #0x0
    23e0:	add	x0, x0, #0x8
    23e4:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    23e8:	b	19a0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x28>
    23ec:	bl	0 <_ZSt20__throw_system_errori>
    23f0:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    23f4:	add	x2, x2, #0x0
    23f8:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    23fc:	add	x1, x1, #0x0
    2400:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2404:	add	x0, x0, #0x0
    2408:	add	x0, x0, #0x38
    240c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2410:	b	19dc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x64>
    2414:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2418:	add	x2, x2, #0x0
    241c:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2420:	add	x1, x1, #0x0
    2424:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2428:	add	x0, x0, #0x0
    242c:	add	x0, x0, #0x38
    2430:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2434:	b	1ad8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x160>
    2438:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    243c:	add	x2, x2, #0x0
    2440:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2444:	add	x1, x1, #0x0
    2448:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    244c:	add	x0, x0, #0x0
    2450:	add	x0, x0, #0x38
    2454:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2458:	b	1bd4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x25c>
    245c:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2460:	add	x2, x2, #0x0
    2464:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2468:	add	x1, x1, #0x0
    246c:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2470:	add	x0, x0, #0x0
    2474:	add	x0, x0, #0x38
    2478:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    247c:	b	1cd0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x358>
    2480:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2484:	add	x2, x2, #0x0
    2488:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    248c:	add	x1, x1, #0x0
    2490:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2494:	add	x0, x0, #0x0
    2498:	add	x0, x0, #0x38
    249c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    24a0:	b	1dcc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x454>
    24a4:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    24a8:	add	x2, x2, #0x0
    24ac:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    24b0:	add	x1, x1, #0x0
    24b4:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    24b8:	add	x0, x0, #0x0
    24bc:	add	x0, x0, #0x38
    24c0:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    24c4:	b	1ec8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x550>
    24c8:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    24cc:	add	x2, x2, #0x0
    24d0:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    24d4:	add	x1, x1, #0x0
    24d8:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    24dc:	add	x0, x0, #0x0
    24e0:	add	x0, x0, #0x38
    24e4:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    24e8:	b	1fc4 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x64c>
    24ec:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    24f0:	add	x2, x2, #0x0
    24f4:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    24f8:	add	x1, x1, #0x0
    24fc:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2500:	add	x0, x0, #0x0
    2504:	add	x0, x0, #0x38
    2508:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    250c:	b	20c0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x748>
    2510:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2514:	add	x2, x2, #0x0
    2518:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    251c:	add	x1, x1, #0x0
    2520:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2524:	add	x0, x0, #0x0
    2528:	add	x0, x0, #0x38
    252c:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2530:	b	21bc <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x844>
    2534:	adrp	x2, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2538:	add	x2, x2, #0x0
    253c:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2540:	add	x1, x1, #0x0
    2544:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2548:	add	x0, x0, #0x0
    254c:	add	x0, x0, #0x38
    2550:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
    2554:	b	22b8 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv+0x940>

0000000000002558 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
    2558:	mov	x12, #0x27a0                	// #10144
    255c:	sub	sp, sp, x12
    2560:	stp	x29, x30, [sp]
    2564:	mov	x29, sp
    2568:	stp	x19, x20, [sp, #16]
    256c:	stp	x21, x22, [sp, #32]
    2570:	stp	x23, x24, [sp, #48]
    2574:	cmp	x2, #0x1
    2578:	b.ls	2684 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x12c>  // b.plast
    257c:	mov	x22, x8
    2580:	mov	x23, x0
    2584:	mov	x21, x1
    2588:	mov	x20, x2
    258c:	str	xzr, [sp, #120]
    2590:	str	xzr, [sp, #128]
    2594:	str	xzr, [sp, #136]
    2598:	add	x0, sp, #0x90
    259c:	str	x0, [sp, #72]
    25a0:	mov	w0, #0x1                   	// #1
    25a4:	str	w0, [sp, #88]
    25a8:	str	xzr, [sp, #80]
    25ac:	str	xzr, [sp, #96]
    25b0:	str	xzr, [sp, #104]
    25b4:	str	xzr, [sp, #112]
    25b8:	add	x1, sp, #0x48
    25bc:	add	x0, sp, #0x78
    25c0:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    25c4:	ldr	x19, [sp, #96]
    25c8:	ldr	x24, [sp, #104]
    25cc:	cmp	x19, x24
    25d0:	b.ne	26b4 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x15c>  // b.any
    25d4:	ldr	x0, [sp, #96]
    25d8:	cbz	x0, 25e0 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x88>
    25dc:	bl	0 <_ZdlPv>
    25e0:	ldr	w0, [sp, #88]
    25e4:	cmp	w0, #0x40
    25e8:	b.ls	25f8 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>  // b.plast
    25ec:	ldr	x0, [sp, #80]
    25f0:	cbz	x0, 25f8 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0xa0>
    25f4:	bl	0 <_ZdaPv>
    25f8:	add	x20, x20, x20, lsl #1
    25fc:	mov	w4, #0x0                   	// #0
    2600:	add	x3, x21, x20, lsl #4
    2604:	add	x2, x21, #0x30
    2608:	ldr	x1, [sp, #128]
    260c:	add	x0, sp, #0x78
    2610:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    2614:	ldr	x1, [sp, #120]
    2618:	ldr	x2, [sp, #128]
    261c:	sub	x2, x2, x1
    2620:	asr	x2, x2, #4
    2624:	mov	x8, x22
    2628:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    262c:	movk	x0, #0xaaab
    2630:	mul	x2, x2, x0
    2634:	mov	x0, x23
    2638:	bl	5e0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>
    263c:	ldr	x1, [x21]
    2640:	add	x0, sp, #0x90
    2644:	bl	0 <fputs>
    2648:	ldr	x19, [sp, #120]
    264c:	ldr	x20, [sp, #128]
    2650:	cmp	x19, x20
    2654:	b.ne	26e4 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x18c>  // b.any
    2658:	ldr	x0, [sp, #120]
    265c:	cbz	x0, 2664 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x10c>
    2660:	bl	0 <_ZdlPv>
    2664:	mov	x0, x22
    2668:	ldp	x19, x20, [sp, #16]
    266c:	ldp	x21, x22, [sp, #32]
    2670:	ldp	x23, x24, [sp, #48]
    2674:	ldp	x29, x30, [sp]
    2678:	mov	x12, #0x27a0                	// #10144
    267c:	add	sp, sp, x12
    2680:	ret
    2684:	adrp	x3, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2688:	add	x3, x3, #0x0
    268c:	mov	w2, #0x1cd                 	// #461
    2690:	adrp	x1, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    2694:	add	x1, x1, #0x0
    2698:	adrp	x0, 0 <_ZL9getTypeIDPN4llvm4TypeE>
    269c:	add	x0, x0, #0x0
    26a0:	bl	0 <__assert_fail>
    26a4:	bl	0 <_ZdaPv>
    26a8:	add	x19, x19, #0x30
    26ac:	cmp	x24, x19
    26b0:	b.eq	25d4 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x7c>  // b.none
    26b4:	add	x0, x19, #0x18
    26b8:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    26bc:	ldr	w0, [x19, #16]
    26c0:	cmp	w0, #0x40
    26c4:	b.ls	26a8 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x150>  // b.plast
    26c8:	ldr	x0, [x19, #8]
    26cc:	cbnz	x0, 26a4 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x14c>
    26d0:	b	26a8 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x150>
    26d4:	bl	0 <_ZdaPv>
    26d8:	add	x19, x19, #0x30
    26dc:	cmp	x20, x19
    26e0:	b.eq	2658 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x100>  // b.none
    26e4:	add	x0, x19, #0x18
    26e8:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    26ec:	ldr	w0, [x19, #16]
    26f0:	cmp	w0, #0x40
    26f4:	b.ls	26d8 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x180>  // b.plast
    26f8:	ldr	x0, [x19, #8]
    26fc:	cbnz	x0, 26d4 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x17c>
    2700:	b	26d8 <_ZL13lle_X_fprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x180>

0000000000002704 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>:
    2704:	mov	x12, #0x27a0                	// #10144
    2708:	sub	sp, sp, x12
    270c:	stp	x29, x30, [sp]
    2710:	mov	x29, sp
    2714:	stp	x19, x20, [sp, #16]
    2718:	stp	x21, x22, [sp, #32]
    271c:	stp	x23, x24, [sp, #48]
    2720:	mov	x21, x8
    2724:	mov	x23, x0
    2728:	mov	x22, x1
    272c:	mov	x20, x2
    2730:	str	xzr, [sp, #120]
    2734:	str	xzr, [sp, #128]
    2738:	str	xzr, [sp, #136]
    273c:	add	x0, sp, #0x90
    2740:	str	x0, [sp, #72]
    2744:	mov	w0, #0x1                   	// #1
    2748:	str	w0, [sp, #88]
    274c:	str	xzr, [sp, #80]
    2750:	str	xzr, [sp, #96]
    2754:	str	xzr, [sp, #104]
    2758:	str	xzr, [sp, #112]
    275c:	add	x1, sp, #0x48
    2760:	add	x0, sp, #0x78
    2764:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    2768:	ldr	x19, [sp, #96]
    276c:	ldr	x24, [sp, #104]
    2770:	cmp	x19, x24
    2774:	b.ne	2858 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x154>  // b.any
    2778:	ldr	x0, [sp, #96]
    277c:	cbz	x0, 2784 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x80>
    2780:	bl	0 <_ZdlPv>
    2784:	ldr	w0, [sp, #88]
    2788:	cmp	w0, #0x40
    278c:	b.ls	279c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x98>  // b.plast
    2790:	ldr	x0, [sp, #80]
    2794:	cbz	x0, 279c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x98>
    2798:	bl	0 <_ZdaPv>
    279c:	add	x20, x20, x20, lsl #1
    27a0:	mov	w4, #0x0                   	// #0
    27a4:	add	x3, x22, x20, lsl #4
    27a8:	mov	x2, x22
    27ac:	ldr	x1, [sp, #128]
    27b0:	add	x0, sp, #0x78
    27b4:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    27b8:	ldr	x1, [sp, #120]
    27bc:	ldr	x2, [sp, #128]
    27c0:	sub	x2, x2, x1
    27c4:	asr	x2, x2, #4
    27c8:	mov	x8, x21
    27cc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    27d0:	movk	x0, #0xaaab
    27d4:	mul	x2, x2, x0
    27d8:	mov	x0, x23
    27dc:	bl	5e0 <_ZL13lle_X_sprintfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE>
    27e0:	bl	0 <_ZN4llvm4outsEv>
    27e4:	mov	x19, x0
    27e8:	add	x0, sp, #0x90
    27ec:	bl	0 <strlen>
    27f0:	mov	x20, x0
    27f4:	ldr	x0, [x19, #24]
    27f8:	ldr	x1, [x19, #16]
    27fc:	sub	x1, x1, x0
    2800:	cmp	x20, x1
    2804:	b.hi	2878 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x174>  // b.pmore
    2808:	cbnz	x20, 288c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x188>
    280c:	ldr	x19, [sp, #120]
    2810:	ldr	x20, [sp, #128]
    2814:	cmp	x19, x20
    2818:	b.ne	28b8 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1b4>  // b.any
    281c:	ldr	x0, [sp, #120]
    2820:	cbz	x0, 2828 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x124>
    2824:	bl	0 <_ZdlPv>
    2828:	mov	x0, x21
    282c:	ldp	x19, x20, [sp, #16]
    2830:	ldp	x21, x22, [sp, #32]
    2834:	ldp	x23, x24, [sp, #48]
    2838:	ldp	x29, x30, [sp]
    283c:	mov	x12, #0x27a0                	// #10144
    2840:	add	sp, sp, x12
    2844:	ret
    2848:	bl	0 <_ZdaPv>
    284c:	add	x19, x19, #0x30
    2850:	cmp	x24, x19
    2854:	b.eq	2778 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x74>  // b.none
    2858:	add	x0, x19, #0x18
    285c:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    2860:	ldr	w0, [x19, #16]
    2864:	cmp	w0, #0x40
    2868:	b.ls	284c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x148>  // b.plast
    286c:	ldr	x0, [x19, #8]
    2870:	cbnz	x0, 2848 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x144>
    2874:	b	284c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x148>
    2878:	mov	x2, x20
    287c:	add	x1, sp, #0x90
    2880:	mov	x0, x19
    2884:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2888:	b	280c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x108>
    288c:	mov	x2, x20
    2890:	add	x1, sp, #0x90
    2894:	bl	0 <memcpy>
    2898:	ldr	x0, [x19, #24]
    289c:	add	x20, x0, x20
    28a0:	str	x20, [x19, #24]
    28a4:	b	280c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x108>
    28a8:	bl	0 <_ZdaPv>
    28ac:	add	x19, x19, #0x30
    28b0:	cmp	x20, x19
    28b4:	b.eq	281c <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x118>  // b.none
    28b8:	add	x0, x19, #0x18
    28bc:	bl	0 <_ZL9getTypeIDPN4llvm4TypeE>
    28c0:	ldr	w0, [x19, #16]
    28c4:	cmp	w0, #0x40
    28c8:	b.ls	28ac <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1a8>  // b.plast
    28cc:	ldr	x0, [x19, #8]
    28d0:	cbnz	x0, 28a8 <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1a4>
    28d4:	b	28ac <_ZL12lle_X_printfPN4llvm12FunctionTypeENS_8ArrayRefINS_12GenericValueEEE+0x1a8>

Disassembly of section .text._ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv>:
   0:	cbz	x0, 1c <_ZN4llvm14object_deleterINS_3sys10SmartMutexILb0EEEE4callEPv+0x1c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	mov	x29, sp
   c:	mov	x1, #0x38                  	// #56
  10:	bl	0 <_ZdlPvm>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	ret

Disassembly of section .text._ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorINS_3sys10SmartMutexILb0EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x0, #0x38                  	// #56
   c:	bl	0 <_Znwm>
  10:	stp	xzr, xzr, [x0]
  14:	stp	xzr, xzr, [x0, #16]
  18:	stp	xzr, xzr, [x0, #32]
  1c:	str	xzr, [x0, #48]
  20:	mov	w2, #0x1                   	// #1
  24:	str	w2, [x0, #16]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm14object_creatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x0, #0x30                  	// #48
   c:	bl	0 <_Znwm>
  10:	add	x1, x0, #0x8
  14:	str	wzr, [x0, #8]
  18:	str	xzr, [x0, #16]
  1c:	str	x1, [x1, #16]
  20:	str	x1, [x1, #24]
  24:	str	xzr, [x1, #32]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm14object_creatorISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEv:

0000000000000000 <_ZN4llvm14object_creatorISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x0, #0x30                  	// #48
   c:	bl	0 <_Znwm>
  10:	add	x1, x0, #0x8
  14:	str	wzr, [x0, #8]
  18:	str	xzr, [x0, #16]
  1c:	str	x1, [x1, #16]
  20:	str	x1, [x1, #24]
  24:	str	xzr, [x1, #32]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm12GenericValueC2ERKS0_:

0000000000000000 <_ZN4llvm12GenericValueC1ERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x20, x0
  18:	mov	x19, x1
  1c:	ldr	x2, [x1], #8
  20:	str	x2, [x0], #8
  24:	ldr	w1, [x1, #8]
  28:	str	w1, [x0, #8]
  2c:	cmp	w1, #0x40
  30:	b.hi	110 <_ZN4llvm12GenericValueC1ERKS0_+0x110>  // b.pmore
  34:	ldr	x0, [x19, #8]
  38:	str	x0, [x20, #8]
  3c:	ldr	x22, [x19, #32]
  40:	ldr	x0, [x19, #24]
  44:	sub	x22, x22, x0
  48:	asr	x1, x22, #4
  4c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  50:	movk	x0, #0xaaab
  54:	mul	x1, x1, x0
  58:	str	xzr, [x20, #24]
  5c:	str	xzr, [x20, #32]
  60:	str	xzr, [x20, #40]
  64:	cbz	x1, 124 <_ZN4llvm12GenericValueC1ERKS0_+0x124>
  68:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  6c:	movk	x0, #0x2aa, lsl #48
  70:	cmp	x1, x0
  74:	b.hi	120 <_ZN4llvm12GenericValueC1ERKS0_+0x120>  // b.pmore
  78:	mov	x0, x22
  7c:	bl	0 <_Znwm>
  80:	mov	x21, x0
  84:	str	x21, [x20, #24]
  88:	str	x21, [x20, #32]
  8c:	add	x22, x21, x22
  90:	str	x22, [x20, #40]
  94:	ldr	x24, [x19, #24]
  98:	ldr	x19, [x19, #32]
  9c:	cmp	x24, x19
  a0:	b.eq	f8 <_ZN4llvm12GenericValueC1ERKS0_+0xf8>  // b.none
  a4:	mov	x22, x24
  a8:	mov	x23, x21
  ac:	mov	x1, x22
  b0:	mov	x0, x23
  b4:	bl	0 <_ZN4llvm12GenericValueC1ERKS0_>
  b8:	add	x23, x23, #0x30
  bc:	add	x22, x22, #0x30
  c0:	cmp	x19, x22
  c4:	b.ne	ac <_ZN4llvm12GenericValueC1ERKS0_+0xac>  // b.any
  c8:	sub	x1, x19, #0x30
  cc:	sub	x1, x1, x24
  d0:	lsr	x1, x1, #4
  d4:	mov	x19, #0xaaab                	// #43691
  d8:	movk	x19, #0xaaaa, lsl #16
  dc:	movk	x19, #0xaaaa, lsl #32
  e0:	movk	x19, #0xaaa, lsl #48
  e4:	mul	x1, x1, x19
  e8:	and	x1, x1, #0xfffffffffffffff
  ec:	add	x1, x1, #0x1
  f0:	add	x1, x1, x1, lsl #1
  f4:	add	x21, x21, x1, lsl #4
  f8:	str	x21, [x20, #32]
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x21, x22, [sp, #32]
 104:	ldp	x23, x24, [sp, #48]
 108:	ldp	x29, x30, [sp], #64
 10c:	ret
 110:	add	x1, x19, #0x8
 114:	add	x0, x20, #0x8
 118:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 11c:	b	3c <_ZN4llvm12GenericValueC1ERKS0_+0x3c>
 120:	bl	0 <_ZSt17__throw_bad_allocv>
 124:	mov	x21, #0x0                   	// #0
 128:	b	84 <_ZN4llvm12GenericValueC1ERKS0_+0x84>

Disassembly of section .text._ZN4llvm17countLeadingZerosImEEjT_NS_12ZeroBehaviorE:

0000000000000000 <_ZN4llvm17countLeadingZerosImEEjT_NS_12ZeroBehaviorE>:
   0:	cmp	w1, #0x0
   4:	clz	x1, x0
   8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   c:	mov	w0, #0x40                  	// #64
  10:	csel	w0, w0, w1, eq  // eq = none
  14:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	ldr	x19, [x0]
  18:	ldr	x20, [x0, #8]
  1c:	cmp	x19, x20
  20:	b.ne	50 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x50>  // b.any
  24:	ldr	x0, [x21]
  28:	cbz	x0, 30 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x30>
  2c:	bl	0 <_ZdlPv>
  30:	ldp	x19, x20, [sp, #16]
  34:	ldr	x21, [sp, #32]
  38:	ldp	x29, x30, [sp], #48
  3c:	ret
  40:	bl	0 <_ZdaPv>
  44:	add	x19, x19, #0x30
  48:	cmp	x20, x19
  4c:	b.eq	24 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x24>  // b.none
  50:	add	x0, x19, #0x18
  54:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  58:	ldr	w1, [x19, #16]
  5c:	cmp	w1, #0x40
  60:	b.ls	44 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x44>  // b.plast
  64:	ldr	x0, [x19, #8]
  68:	cbnz	x0, 40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>
  6c:	b	44 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x44>

Disassembly of section .text._ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x25, x1
  1c:	mov	x26, x2
  20:	ldr	x23, [x0, #8]
  24:	ldr	x24, [x0]
  28:	sub	x1, x23, x24
  2c:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  30:	cmp	x2, x1, asr #3
  34:	b.eq	e0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.none
  38:	mov	x20, x0
  3c:	asr	x0, x1, #3
  40:	cmp	x0, #0x0
  44:	csinc	x3, x0, xzr, ne  // ne = any
  48:	adds	x3, x3, x0
  4c:	b.cs	118 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>  // b.hs, b.nlast
  50:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	x3, x22
  58:	csel	x22, x3, x22, ls  // ls = plast
  5c:	sub	x19, x25, x24
  60:	mov	x21, #0x0                   	// #0
  64:	cbz	x3, 74 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x74>
  68:	lsl	x0, x22, #3
  6c:	bl	0 <_Znwm>
  70:	mov	x21, x0
  74:	ldr	x0, [x26]
  78:	str	x0, [x21, x19]
  7c:	cmp	x19, #0x0
  80:	b.gt	ec <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  84:	add	x19, x19, #0x8
  88:	add	x19, x21, x19
  8c:	sub	x23, x23, x25
  90:	cmp	x23, #0x0
  94:	b.le	a8 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa8>
  98:	mov	x2, x23
  9c:	mov	x1, x25
  a0:	mov	x0, x19
  a4:	bl	0 <memcpy>
  a8:	add	x19, x19, x23
  ac:	cbz	x24, b8 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>
  b0:	mov	x0, x24
  b4:	bl	0 <_ZdlPv>
  b8:	str	x21, [x20]
  bc:	str	x19, [x20, #8]
  c0:	add	x21, x21, x22, lsl #3
  c4:	str	x21, [x20, #16]
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldp	x25, x26, [sp, #64]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  e4:	add	x0, x0, #0x0
  e8:	bl	0 <_ZSt20__throw_length_errorPKc>
  ec:	mov	x2, x19
  f0:	mov	x1, x24
  f4:	mov	x0, x21
  f8:	bl	0 <memmove>
  fc:	add	x19, x19, #0x8
 100:	add	x19, x21, x19
 104:	sub	x23, x23, x25
 108:	cmp	x23, #0x0
 10c:	b.gt	98 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>
 110:	add	x19, x19, x23
 114:	b	b0 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb0>
 118:	sub	x19, x25, x24
 11c:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
 120:	b	68 <_ZNSt6vectorIPN4llvm8FunctionESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	str	x23, [sp, #48]
  14:	mov	x21, x0
  18:	mov	x22, x1
  1c:	mov	x0, #0x30                  	// #48
  20:	bl	0 <_Znwm>
  24:	mov	x20, x0
  28:	ldr	x23, [x22]
  2c:	str	x23, [x0, #32]
  30:	ldr	x0, [x22, #8]
  34:	str	x0, [x20, #40]
  38:	ldr	x19, [x21, #16]
  3c:	add	x22, x21, #0x8
  40:	cbz	x19, c0 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xc0>
  44:	mov	w3, #0x0                   	// #0
  48:	mov	w2, #0x1                   	// #1
  4c:	b	60 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x60>
  50:	ldr	x0, [x19, #24]
  54:	mov	w1, w3
  58:	cbz	x0, 78 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x78>
  5c:	mov	x19, x0
  60:	ldr	x0, [x19, #32]
  64:	cmp	x23, x0
  68:	b.cs	50 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x50>  // b.hs, b.nlast
  6c:	ldr	x0, [x19, #16]
  70:	mov	w1, w2
  74:	b	58 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x58>
  78:	cbnz	w1, d4 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xd4>
  7c:	ldr	x0, [x19, #32]
  80:	cmp	x23, x0
  84:	b.hi	f8 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xf8>  // b.pmore
  88:	mov	x0, x20
  8c:	bl	0 <_ZdlPv>
  90:	mov	x0, x19
  94:	mov	x1, #0x0                   	// #0
  98:	b	130 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x130>
  9c:	ldr	x0, [x19, #32]
  a0:	cmp	x23, x0
  a4:	cset	w0, cc  // cc = lo, ul, last
  a8:	b	104 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x104>
  ac:	mov	x19, x22
  b0:	mov	w0, #0x1                   	// #1
  b4:	b	104 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x104>
  b8:	mov	x19, x0
  bc:	b	88 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x88>
  c0:	ldr	x0, [x21, #24]
  c4:	cmp	x22, x0
  c8:	b.eq	ac <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xac>  // b.none
  cc:	mov	x19, x22
  d0:	b	e0 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xe0>
  d4:	ldr	x0, [x21, #24]
  d8:	cmp	x19, x0
  dc:	b.eq	f8 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xf8>  // b.none
  e0:	mov	x0, x19
  e4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  e8:	ldr	x1, [x0, #32]
  ec:	cmp	x1, x23
  f0:	b.cs	b8 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0xb8>  // b.hs, b.nlast
  f4:	cbz	x19, 88 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x88>
  f8:	mov	w0, #0x1                   	// #1
  fc:	cmp	x22, x19
 100:	b.ne	9c <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE17_M_emplace_uniqueIJS4_IS3_SC_EEEES4_ISt17_Rb_tree_iteratorISD_EbEDpOT_+0x9c>  // b.any
 104:	mov	x3, x22
 108:	mov	x2, x19
 10c:	mov	x1, x20
 110:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 114:	ldr	x0, [x21, #40]
 118:	add	x0, x0, #0x1
 11c:	str	x0, [x21, #40]
 120:	mov	x0, x20
 124:	mov	x1, #0x0                   	// #0
 128:	mov	x2, #0x1                   	// #1
 12c:	bfxil	x1, x2, #0, #8
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldr	x23, [sp, #48]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	mov	x21, x2
  18:	mov	x20, x3
  1c:	mov	w0, #0x1                   	// #1
  20:	cbz	x1, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x54>
  24:	add	x3, x19, #0x8
  28:	mov	x2, x21
  2c:	mov	x1, x20
  30:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  34:	ldr	x0, [x19, #40]
  38:	add	x0, x0, #0x1
  3c:	str	x0, [x19, #40]
  40:	mov	x0, x20
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x21, x22, [sp, #32]
  4c:	ldp	x29, x30, [sp], #64
  50:	ret
  54:	add	x1, x19, #0x8
  58:	mov	w0, #0x1                   	// #1
  5c:	cmp	x2, x1
  60:	b.eq	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x24>  // b.none
  64:	str	x23, [sp, #48]
  68:	ldr	x22, [x3, #40]
  6c:	ldr	x23, [x2, #40]
  70:	cmp	x22, x23
  74:	csel	x2, x22, x23, ls  // ls = plast
  78:	cbz	x2, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x8c>
  7c:	ldr	x1, [x21, #32]
  80:	ldr	x0, [x3, #32]
  84:	bl	0 <memcmp>
  88:	cbnz	w0, ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0xac>
  8c:	sub	x22, x22, x23
  90:	mov	w0, #0x7fffffff            	// #2147483647
  94:	mov	x1, #0x7fffffff            	// #2147483647
  98:	cmp	x22, x1
  9c:	b.gt	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0xac>
  a0:	mov	x0, #0xffffffff80000000    	// #-2147483648
  a4:	cmp	x22, x0
  a8:	csel	w0, w22, w0, ge  // ge = tcont
  ac:	lsr	w0, w0, #31
  b0:	ldr	x23, [sp, #48]
  b4:	b	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSO_PSt13_Rb_tree_nodeISG_E+0x24>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	str	x0, [sp, #136]
  20:	str	x1, [sp, #112]
  24:	mov	x21, x1
  28:	ldr	x27, [x0, #8]
  2c:	ldr	x0, [x0]
  30:	str	x0, [sp, #104]
  34:	sub	x0, x27, x0
  38:	asr	x0, x0, #4
  3c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40:	movk	x1, #0xaaab
  44:	mul	x0, x0, x1
  48:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4c:	movk	x1, #0x2aa, lsl #48
  50:	cmp	x0, x1
  54:	b.eq	118 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x118>  // b.none
  58:	mov	x19, x2
  5c:	cmp	x0, #0x0
  60:	csinc	x1, x0, xzr, ne  // ne = any
  64:	adds	x0, x1, x0
  68:	b.cs	41c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x41c>  // b.hs, b.nlast
  6c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  70:	movk	x1, #0x2aa, lsl #48
  74:	cmp	x0, x1
  78:	csel	x1, x0, x1, ls  // ls = plast
  7c:	str	x1, [sp, #128]
  80:	ldr	x1, [sp, #112]
  84:	ldr	x2, [sp, #104]
  88:	sub	x20, x1, x2
  8c:	str	xzr, [sp, #120]
  90:	cbz	x0, a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa8>
  94:	ldr	x0, [sp, #128]
  98:	add	x0, x0, x0, lsl #1
  9c:	lsl	x0, x0, #4
  a0:	bl	0 <_Znwm>
  a4:	str	x0, [sp, #120]
  a8:	ldr	x4, [sp, #120]
  ac:	add	x1, x4, x20
  b0:	mov	x0, x19
  b4:	ldr	x2, [x0], #8
  b8:	str	x2, [x4, x20]
  bc:	ldr	w2, [x0, #8]
  c0:	str	w2, [x1, #16]
  c4:	ldr	x2, [x19, #8]
  c8:	str	x2, [x1, #8]
  cc:	str	wzr, [x0, #8]
  d0:	add	x2, x1, #0x18
  d4:	ldr	x3, [x19, #24]
  d8:	str	x3, [x1, #24]
  dc:	ldr	x1, [x19, #32]
  e0:	str	x1, [x2, #8]
  e4:	ldr	x1, [x19, #40]
  e8:	str	x1, [x2, #16]
  ec:	str	xzr, [x19, #40]
  f0:	str	xzr, [x19, #32]
  f4:	str	xzr, [x19, #24]
  f8:	ldr	x0, [sp, #112]
  fc:	ldr	x22, [sp, #104]
 100:	cmp	x0, x22
 104:	b.eq	228 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x228>  // b.none
 108:	mov	x19, x4
 10c:	mov	x28, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 110:	movk	x28, #0xaaab
 114:	b	1f8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1f8>
 118:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 11c:	add	x0, x0, #0x0
 120:	bl	0 <_ZSt20__throw_length_errorPKc>
 124:	add	x1, x22, #0x8
 128:	add	x0, x19, #0x8
 12c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 130:	ldr	x20, [x22, #32]
 134:	ldr	x0, [x22, #24]
 138:	sub	x20, x20, x0
 13c:	asr	x0, x20, #4
 140:	mul	x0, x0, x28
 144:	str	xzr, [x19, #24]
 148:	str	xzr, [x19, #32]
 14c:	str	xzr, [x19, #40]
 150:	cbz	x0, 220 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x220>
 154:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 158:	movk	x1, #0x2aa, lsl #48
 15c:	cmp	x0, x1
 160:	b.hi	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x21c>  // b.pmore
 164:	mov	x0, x20
 168:	bl	0 <_Znwm>
 16c:	mov	x23, x0
 170:	str	x23, [x19, #24]
 174:	str	x23, [x19, #32]
 178:	add	x20, x23, x20
 17c:	str	x20, [x19, #40]
 180:	ldr	x26, [x22, #24]
 184:	ldr	x20, [x22, #32]
 188:	cmp	x26, x20
 18c:	b.eq	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1e4>  // b.none
 190:	mov	x24, x26
 194:	mov	x25, x23
 198:	mov	x1, x24
 19c:	mov	x0, x25
 1a0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 1a4:	add	x25, x25, #0x30
 1a8:	add	x24, x24, #0x30
 1ac:	cmp	x20, x24
 1b0:	b.ne	198 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x198>  // b.any
 1b4:	sub	x0, x20, #0x30
 1b8:	sub	x0, x0, x26
 1bc:	lsr	x0, x0, #4
 1c0:	mov	x1, #0xaaab                	// #43691
 1c4:	movk	x1, #0xaaaa, lsl #16
 1c8:	movk	x1, #0xaaaa, lsl #32
 1cc:	movk	x1, #0xaaa, lsl #48
 1d0:	mul	x0, x0, x1
 1d4:	and	x0, x0, #0xfffffffffffffff
 1d8:	add	x0, x0, #0x1
 1dc:	add	x0, x0, x0, lsl #1
 1e0:	add	x23, x23, x0, lsl #4
 1e4:	str	x23, [x19, #32]
 1e8:	add	x22, x22, #0x30
 1ec:	add	x19, x19, #0x30
 1f0:	cmp	x21, x22
 1f4:	b.eq	22c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x22c>  // b.none
 1f8:	ldr	x0, [x22]
 1fc:	str	x0, [x19]
 200:	ldr	w0, [x22, #16]
 204:	str	w0, [x19, #16]
 208:	cmp	w0, #0x40
 20c:	b.hi	124 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x124>  // b.pmore
 210:	ldr	x0, [x22, #8]
 214:	str	x0, [x19, #8]
 218:	b	130 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x130>
 21c:	bl	0 <_ZSt17__throw_bad_allocv>
 220:	mov	x23, #0x0                   	// #0
 224:	b	170 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x170>
 228:	ldr	x19, [sp, #120]
 22c:	add	x19, x19, #0x30
 230:	ldr	x0, [sp, #112]
 234:	cmp	x0, x27
 238:	b.eq	258 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x258>  // b.none
 23c:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 240:	movk	x26, #0xaaab
 244:	mov	x28, #0xaaab                	// #43691
 248:	movk	x28, #0xaaaa, lsl #16
 24c:	movk	x28, #0xaaaa, lsl #32
 250:	movk	x28, #0xaaa, lsl #48
 254:	b	32c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x32c>
 258:	ldr	x0, [sp, #104]
 25c:	cmp	x27, x0
 260:	b.eq	3d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3d4>  // b.none
 264:	mov	x21, x0
 268:	b	3c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3c0>
 26c:	ldr	x0, [x21, #8]
 270:	str	x0, [x19, #8]
 274:	ldr	x20, [x21, #32]
 278:	ldr	x0, [x21, #24]
 27c:	sub	x20, x20, x0
 280:	asr	x0, x20, #4
 284:	mul	x0, x0, x26
 288:	str	xzr, [x19, #24]
 28c:	str	xzr, [x19, #32]
 290:	str	xzr, [x19, #40]
 294:	cbz	x0, 358 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x358>
 298:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 29c:	movk	x1, #0x2aa, lsl #48
 2a0:	cmp	x0, x1
 2a4:	b.hi	354 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x354>  // b.pmore
 2a8:	mov	x0, x20
 2ac:	bl	0 <_Znwm>
 2b0:	mov	x22, x0
 2b4:	str	x22, [x19, #24]
 2b8:	str	x22, [x19, #32]
 2bc:	add	x20, x22, x20
 2c0:	str	x20, [x19, #40]
 2c4:	ldr	x25, [x21, #24]
 2c8:	ldr	x20, [x21, #32]
 2cc:	cmp	x25, x20
 2d0:	b.eq	318 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x318>  // b.none
 2d4:	mov	x23, x25
 2d8:	mov	x24, x22
 2dc:	mov	x1, x23
 2e0:	mov	x0, x24
 2e4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 2e8:	add	x24, x24, #0x30
 2ec:	add	x23, x23, #0x30
 2f0:	cmp	x20, x23
 2f4:	b.ne	2dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2dc>  // b.any
 2f8:	sub	x0, x20, #0x30
 2fc:	sub	x0, x0, x25
 300:	lsr	x0, x0, #4
 304:	mul	x0, x0, x28
 308:	and	x0, x0, #0xfffffffffffffff
 30c:	add	x0, x0, #0x1
 310:	add	x0, x0, x0, lsl #1
 314:	add	x22, x22, x0, lsl #4
 318:	str	x22, [x19, #32]
 31c:	add	x21, x21, #0x30
 320:	add	x19, x19, #0x30
 324:	cmp	x21, x27
 328:	b.eq	258 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x258>  // b.none
 32c:	ldr	x0, [x21]
 330:	str	x0, [x19]
 334:	ldr	w0, [x21, #16]
 338:	str	w0, [x19, #16]
 33c:	cmp	w0, #0x40
 340:	b.ls	26c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x26c>  // b.plast
 344:	add	x1, x21, #0x8
 348:	add	x0, x19, #0x8
 34c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 350:	b	274 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x274>
 354:	bl	0 <_ZSt17__throw_bad_allocv>
 358:	mov	x22, #0x0                   	// #0
 35c:	b	2b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x2b4>
 360:	bl	0 <_ZdaPv>
 364:	add	x20, x20, #0x30
 368:	cmp	x22, x20
 36c:	b.eq	390 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x390>  // b.none
 370:	add	x0, x20, #0x18
 374:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 378:	ldr	w0, [x20, #16]
 37c:	cmp	w0, #0x40
 380:	b.ls	364 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x364>  // b.plast
 384:	ldr	x0, [x20, #8]
 388:	cbnz	x0, 360 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x360>
 38c:	b	364 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x364>
 390:	ldr	x0, [x21, #24]
 394:	cbz	x0, 39c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x39c>
 398:	bl	0 <_ZdlPv>
 39c:	ldr	w0, [x21, #16]
 3a0:	cmp	w0, #0x40
 3a4:	b.ls	3b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3b4>  // b.plast
 3a8:	ldr	x0, [x21, #8]
 3ac:	cbz	x0, 3b4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3b4>
 3b0:	bl	0 <_ZdaPv>
 3b4:	add	x21, x21, #0x30
 3b8:	cmp	x21, x27
 3bc:	b.eq	3d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3d4>  // b.none
 3c0:	ldr	x20, [x21, #24]
 3c4:	ldr	x22, [x21, #32]
 3c8:	cmp	x20, x22
 3cc:	b.ne	370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x370>  // b.any
 3d0:	b	390 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x390>
 3d4:	ldr	x0, [sp, #104]
 3d8:	cbz	x0, 3e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x3e0>
 3dc:	bl	0 <_ZdlPv>
 3e0:	ldr	x1, [sp, #136]
 3e4:	ldr	x2, [sp, #120]
 3e8:	str	x2, [x1]
 3ec:	str	x19, [x1, #8]
 3f0:	ldr	x0, [sp, #128]
 3f4:	add	x0, x0, x0, lsl #1
 3f8:	add	x0, x2, x0, lsl #4
 3fc:	str	x0, [x1, #16]
 400:	ldp	x19, x20, [sp, #16]
 404:	ldp	x21, x22, [sp, #32]
 408:	ldp	x23, x24, [sp, #48]
 40c:	ldp	x25, x26, [sp, #64]
 410:	ldp	x27, x28, [sp, #80]
 414:	ldp	x29, x30, [sp], #144
 418:	ret
 41c:	ldr	x0, [sp, #112]
 420:	ldr	x1, [sp, #104]
 424:	sub	x20, x0, x1
 428:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 42c:	movk	x0, #0x2aa, lsl #48
 430:	str	x0, [sp, #128]
 434:	b	94 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x94>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	70 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x70>  // b.none
  14:	mov	x3, x2
  18:	ldr	x5, [x3], #8
  1c:	mov	x4, x1
  20:	str	x5, [x4], #8
  24:	ldr	w5, [x3, #8]
  28:	str	w5, [x4, #8]
  2c:	ldr	x4, [x2, #8]
  30:	str	x4, [x1, #8]
  34:	str	wzr, [x3, #8]
  38:	add	x4, x1, #0x18
  3c:	ldr	x5, [x2, #24]
  40:	str	x5, [x1, #24]
  44:	ldr	x1, [x2, #32]
  48:	str	x1, [x4, #8]
  4c:	ldr	x1, [x2, #40]
  50:	str	x1, [x4, #16]
  54:	str	xzr, [x2, #40]
  58:	str	xzr, [x2, #32]
  5c:	str	xzr, [x2, #24]
  60:	ldr	x1, [x0, #8]
  64:	add	x1, x1, #0x30
  68:	str	x1, [x0, #8]
  6c:	ret
  70:	stp	x29, x30, [sp, #-16]!
  74:	mov	x29, sp
  78:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE12emplace_backIJS1_EEEvDpOT_>
  7c:	ldp	x29, x30, [sp], #16
  80:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	cmp	x1, #0x0
  14:	ccmp	x1, x2, #0x4, eq  // eq = none
  18:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  1c:	mov	x20, x0
  20:	mov	x21, x1
  24:	sub	x19, x2, x1
  28:	str	x19, [sp, #56]
  2c:	cmp	x19, #0xf
  30:	b.hi	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.pmore
  34:	ldr	x0, [x0]
  38:	cmp	x19, #0x1
  3c:	b.ne	9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [sp, #56]
  4c:	str	x0, [x20, #8]
  50:	ldr	x1, [x20]
  54:	strb	wzr, [x1, x0]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZSt19__throw_logic_errorPKc>
  74:	mov	x2, #0x0                   	// #0
  78:	add	x1, sp, #0x38
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  80:	str	x0, [x20]
  84:	ldr	x1, [sp, #56]
  88:	str	x1, [x20, #16]
  8c:	mov	x2, x19
  90:	mov	x1, x21
  94:	bl	0 <memcpy>
  98:	b	48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  9c:	cbz	x19, 48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  a0:	b	8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x19, x1
  18:	cbnz	x1, 3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x3c>
  1c:	ldp	x19, x20, [sp, #16]
  20:	ldr	x21, [sp, #32]
  24:	ldp	x29, x30, [sp], #48
  28:	ret
  2c:	bl	0 <_ZdlPv>
  30:	mov	x0, x20
  34:	bl	0 <_ZdlPv>
  38:	cbz	x19, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x1c>
  3c:	ldr	x1, [x19, #24]
  40:	mov	x0, x21
  44:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
  48:	mov	x20, x19
  4c:	ldr	x19, [x19, #16]
  50:	ldr	x0, [x20, #32]
  54:	add	x1, x20, #0x30
  58:	cmp	x0, x1
  5c:	b.ne	2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x2c>  // b.any
  60:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x30>

Disassembly of section .text._ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv>:
   0:	cbz	x0, 34 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv+0x34>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	x1, [x0, #16]
  18:	bl	0 <_ZN4llvm14object_deleterISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS8_EEESt4lessIS7_ESaISt4pairIKS7_SE_EEEE4callEPv>
  1c:	mov	x1, #0x30                  	// #48
  20:	mov	x0, x19
  24:	bl	0 <_ZdlPvm>
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x2
  10:	cbz	x1, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x94>
  14:	stp	x19, x20, [sp, #16]
  18:	stp	x23, x24, [sp, #48]
  1c:	str	x25, [sp, #64]
  20:	mov	x19, x1
  24:	ldr	x21, [x3, #8]
  28:	ldr	x24, [x3]
  2c:	mov	x23, #0x7fffffff            	// #2147483647
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x5c>
  38:	sub	x0, x20, x21
  3c:	cmp	x0, x23
  40:	b.gt	50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x50>
  44:	cmp	x0, x25
  48:	b.lt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x80>  // b.tstop
  4c:	tbnz	w0, #31, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x80>
  50:	mov	x22, x19
  54:	ldr	x19, [x19, #16]
  58:	cbz	x19, 88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x88>
  5c:	ldr	x20, [x19, #40]
  60:	cmp	x20, x21
  64:	csel	x2, x20, x21, ls  // ls = plast
  68:	cbz	x2, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x38>
  6c:	mov	x1, x24
  70:	ldr	x0, [x19, #32]
  74:	bl	0 <memcmp>
  78:	cbnz	w0, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x4c>
  7c:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x38>
  80:	ldr	x19, [x19, #24]
  84:	b	58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x58>
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x23, x24, [sp, #48]
  90:	ldr	x25, [sp, #64]
  94:	mov	x0, x22
  98:	ldp	x21, x22, [sp, #32]
  9c:	ldp	x29, x30, [sp], #80
  a0:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x27, x28, [sp, #80]
  18:	mov	x27, x0
  1c:	mov	x24, x1
  20:	ldr	x19, [x0, #16]
  24:	cbz	x19, 48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x48>
  28:	stp	x25, x26, [sp, #64]
  2c:	ldr	x21, [x1, #8]
  30:	ldr	x23, [x1]
  34:	mov	w25, #0x0                   	// #0
  38:	mov	w28, #0x1                   	// #1
  3c:	mov	x22, #0x7fffffff            	// #2147483647
  40:	mov	x26, #0xffffffff80000000    	// #-2147483648
  44:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x78>
  48:	add	x19, x0, #0x8
  4c:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x11c>
  50:	sub	x0, x21, x20
  54:	cmp	x0, x22
  58:	b.gt	68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x68>
  5c:	cmp	x0, x26
  60:	b.lt	9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x9c>  // b.tstop
  64:	tbnz	w0, #31, 9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x9c>
  68:	ldr	x0, [x19, #24]
  6c:	mov	w2, w25
  70:	cbz	x0, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xa8>
  74:	mov	x19, x0
  78:	ldr	x20, [x19, #40]
  7c:	cmp	x21, x20
  80:	csel	x2, x21, x20, ls  // ls = plast
  84:	cbz	x2, 50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x50>
  88:	ldr	x1, [x19, #32]
  8c:	mov	x0, x23
  90:	bl	0 <memcmp>
  94:	cbnz	w0, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x64>
  98:	b	50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x50>
  9c:	ldr	x0, [x19, #16]
  a0:	mov	w2, w28
  a4:	b	70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x70>
  a8:	mov	x20, x19
  ac:	cbnz	w2, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x118>
  b0:	ldp	x25, x26, [sp, #64]
  b4:	ldr	x22, [x19, #40]
  b8:	ldr	x21, [x24, #8]
  bc:	cmp	x22, x21
  c0:	csel	x2, x22, x21, ls  // ls = plast
  c4:	cbz	x2, d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xd8>
  c8:	ldr	x1, [x24]
  cc:	ldr	x0, [x19, #32]
  d0:	bl	0 <memcmp>
  d4:	cbnz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xf4>
  d8:	sub	x0, x22, x21
  dc:	mov	x1, #0x7fffffff            	// #2147483647
  e0:	cmp	x0, x1
  e4:	b.gt	f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xf8>
  e8:	mov	x1, #0xffffffff80000000    	// #-2147483648
  ec:	cmp	x0, x1
  f0:	b.lt	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x148>  // b.tstop
  f4:	tbnz	w0, #31, 148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x148>
  f8:	mov	x0, x19
  fc:	mov	x1, #0x0                   	// #0
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x21, x22, [sp, #32]
 108:	ldp	x23, x24, [sp, #48]
 10c:	ldp	x27, x28, [sp, #80]
 110:	ldp	x29, x30, [sp], #96
 114:	ret
 118:	ldp	x25, x26, [sp, #64]
 11c:	ldr	x0, [x27, #24]
 120:	cmp	x0, x19
 124:	b.eq	13c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x13c>  // b.none
 128:	mov	x0, x19
 12c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 130:	mov	x20, x19
 134:	mov	x19, x0
 138:	b	b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xb4>
 13c:	mov	x0, #0x0                   	// #0
 140:	mov	x1, x19
 144:	b	100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x100>
 148:	mov	x0, #0x0                   	// #0
 14c:	mov	x1, x20
 150:	b	100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x100>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	mov	x22, x2
  14:	add	x0, x0, #0x8
  18:	cmp	x1, x0
  1c:	b.eq	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xb8>  // b.none
  20:	stp	x19, x20, [sp, #16]
  24:	stp	x23, x24, [sp, #48]
  28:	stp	x25, x26, [sp, #64]
  2c:	mov	x19, x1
  30:	ldr	x23, [x2, #8]
  34:	ldr	x20, [x1, #40]
  38:	cmp	x23, x20
  3c:	csel	x25, x23, x20, ls  // ls = plast
  40:	ldr	x24, [x2]
  44:	ldr	x26, [x1, #32]
  48:	cbz	x25, 2b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x2b0>
  4c:	mov	x2, x25
  50:	mov	x1, x26
  54:	mov	x0, x24
  58:	bl	0 <memcmp>
  5c:	cbz	w0, 298 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x298>
  60:	tbnz	w0, #31, 148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x148>
  64:	mov	x2, x25
  68:	mov	x1, x24
  6c:	mov	x0, x26
  70:	bl	0 <memcmp>
  74:	cbnz	w0, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x94>
  78:	sub	x0, x20, x23
  7c:	mov	x1, #0x7fffffff            	// #2147483647
  80:	cmp	x0, x1
  84:	b.gt	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x98>
  88:	mov	x1, #0xffffffff80000000    	// #-2147483648
  8c:	cmp	x0, x1
  90:	b.lt	1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1f0>  // b.tstop
  94:	tbnz	w0, #31, 1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1f0>
  98:	mov	x0, x19
  9c:	mov	x1, #0x0                   	// #0
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldp	x21, x22, [sp, #32]
  b0:	ldp	x29, x30, [sp], #80
  b4:	ret
  b8:	ldr	x0, [x21, #40]
  bc:	cbz	x0, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x118>
  c0:	stp	x19, x20, [sp, #16]
  c4:	stp	x23, x24, [sp, #48]
  c8:	ldr	x19, [x21, #32]
  cc:	ldr	x23, [x19, #40]
  d0:	ldr	x20, [x2, #8]
  d4:	cmp	x23, x20
  d8:	csel	x2, x23, x20, ls  // ls = plast
  dc:	cbz	x2, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xf0>
  e0:	ldr	x1, [x22]
  e4:	ldr	x0, [x19, #32]
  e8:	bl	0 <memcmp>
  ec:	cbnz	w0, 10c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x10c>
  f0:	sub	x0, x23, x20
  f4:	mov	x1, #0x7fffffff            	// #2147483647
  f8:	cmp	x0, x1
  fc:	b.gt	13c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x13c>
 100:	mov	x1, #0xffffffff80000000    	// #-2147483648
 104:	cmp	x0, x1
 108:	b.lt	128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x128>  // b.tstop
 10c:	tbnz	w0, #31, 128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x128>
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x23, x24, [sp, #48]
 118:	mov	x1, x22
 11c:	mov	x0, x21
 120:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
 124:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
 128:	mov	x0, #0x0                   	// #0
 12c:	mov	x1, x19
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x23, x24, [sp, #48]
 138:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x23, x24, [sp, #48]
 144:	b	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x118>
 148:	ldr	x1, [x21, #24]
 14c:	cmp	x1, x19
 150:	b.eq	1c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1c0>  // b.none
 154:	mov	x0, x19
 158:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 15c:	mov	x20, x0
 160:	ldr	x25, [x0, #40]
 164:	cmp	x23, x25
 168:	csel	x2, x23, x25, ls  // ls = plast
 16c:	cbz	x2, 180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x180>
 170:	mov	x1, x24
 174:	ldr	x0, [x0, #32]
 178:	bl	0 <memcmp>
 17c:	cbnz	w0, 19c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x19c>
 180:	sub	x0, x25, x23
 184:	mov	x1, #0x7fffffff            	// #2147483647
 188:	cmp	x0, x1
 18c:	b.gt	1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1d4>
 190:	mov	x1, #0xffffffff80000000    	// #-2147483648
 194:	cmp	x0, x1
 198:	b.lt	1a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1a0>  // b.tstop
 19c:	tbz	w0, #31, 1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x1d4>
 1a0:	ldr	x1, [x20, #24]
 1a4:	cmp	x1, #0x0
 1a8:	csel	x0, x19, xzr, ne  // ne = any
 1ac:	csel	x1, x20, x19, eq  // eq = none
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x23, x24, [sp, #48]
 1b8:	ldp	x25, x26, [sp, #64]
 1bc:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
 1c0:	mov	x0, x1
 1c4:	ldp	x19, x20, [sp, #16]
 1c8:	ldp	x23, x24, [sp, #48]
 1cc:	ldp	x25, x26, [sp, #64]
 1d0:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
 1d4:	mov	x1, x22
 1d8:	mov	x0, x21
 1dc:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
 1e0:	ldp	x19, x20, [sp, #16]
 1e4:	ldp	x23, x24, [sp, #48]
 1e8:	ldp	x25, x26, [sp, #64]
 1ec:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
 1f0:	ldr	x1, [x21, #32]
 1f4:	cmp	x1, x19
 1f8:	b.eq	268 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x268>  // b.none
 1fc:	mov	x0, x19
 200:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 204:	mov	x20, x0
 208:	ldr	x25, [x0, #40]
 20c:	cmp	x23, x25
 210:	csel	x2, x23, x25, ls  // ls = plast
 214:	cbz	x2, 228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x228>
 218:	ldr	x1, [x0, #32]
 21c:	mov	x0, x24
 220:	bl	0 <memcmp>
 224:	cbnz	w0, 244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x244>
 228:	sub	x0, x23, x25
 22c:	mov	x1, #0x7fffffff            	// #2147483647
 230:	cmp	x0, x1
 234:	b.gt	27c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x27c>
 238:	mov	x1, #0xffffffff80000000    	// #-2147483648
 23c:	cmp	x0, x1
 240:	b.lt	248 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x248>  // b.tstop
 244:	tbz	w0, #31, 27c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x27c>
 248:	ldr	x1, [x19, #24]
 24c:	cmp	x1, #0x0
 250:	csel	x0, x20, xzr, ne  // ne = any
 254:	csel	x1, x20, x19, ne  // ne = any
 258:	ldp	x19, x20, [sp, #16]
 25c:	ldp	x23, x24, [sp, #48]
 260:	ldp	x25, x26, [sp, #64]
 264:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
 268:	mov	x0, #0x0                   	// #0
 26c:	ldp	x19, x20, [sp, #16]
 270:	ldp	x23, x24, [sp, #48]
 274:	ldp	x25, x26, [sp, #64]
 278:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
 27c:	mov	x1, x22
 280:	mov	x0, x21
 284:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_>
 288:	ldp	x19, x20, [sp, #16]
 28c:	ldp	x23, x24, [sp, #48]
 290:	ldp	x25, x26, [sp, #64]
 294:	b	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0xac>
 298:	sub	x0, x23, x20
 29c:	mov	x1, x0
 2a0:	mov	x2, #0x7fffffff            	// #2147483647
 2a4:	cmp	x0, x2
 2a8:	b.le	2c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x2c4>
 2ac:	b	64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x64>
 2b0:	sub	x0, x23, x20
 2b4:	mov	x1, x0
 2b8:	mov	x2, #0x7fffffff            	// #2147483647
 2bc:	cmp	x0, x2
 2c0:	b.gt	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x78>
 2c4:	mov	x2, #0xffffffff80000000    	// #-2147483648
 2c8:	cmp	x1, x2
 2cc:	b.lt	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x148>  // b.tstop
 2d0:	tbnz	w0, #31, 148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x148>
 2d4:	cbnz	x25, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x64>
 2d8:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISG_ERS7_+0x78>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	str	x25, [sp, #64]
  18:	mov	x21, x0
  1c:	mov	x22, x1
  20:	mov	x20, x3
  24:	mov	x0, #0x48                  	// #72
  28:	bl	0 <_Znwm>
  2c:	mov	x19, x0
  30:	ldr	x0, [x20]
  34:	add	x23, x19, #0x30
  38:	str	x23, [x19, #32]
  3c:	ldr	x24, [x0]
  40:	ldr	x20, [x0, #8]
  44:	cmp	x20, #0x0
  48:	ccmp	x24, #0x0, #0x0, ne  // ne = any
  4c:	b.eq	cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0xcc>  // b.none
  50:	add	x25, x19, #0x20
  54:	str	x20, [sp, #88]
  58:	cmp	x20, #0xf
  5c:	b.hi	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0xd8>  // b.pmore
  60:	ldr	x0, [x19, #32]
  64:	cmp	x20, #0x1
  68:	b.ne	104 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0x104>  // b.any
  6c:	ldrb	w1, [x24]
  70:	strb	w1, [x0]
  74:	ldr	x1, [sp, #88]
  78:	str	x1, [x19, #40]
  7c:	ldr	x2, [x19, #32]
  80:	strb	wzr, [x2, x1]
  84:	str	xzr, [x19, #64]
  88:	mov	x2, x25
  8c:	mov	x1, x22
  90:	mov	x0, x21
  94:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_>
  98:	mov	x20, x0
  9c:	mov	x2, x1
  a0:	cbz	x1, 10c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0x10c>
  a4:	mov	x3, x19
  a8:	mov	x1, x0
  ac:	mov	x0, x21
  b0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_>
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x21, x22, [sp, #32]
  bc:	ldp	x23, x24, [sp, #48]
  c0:	ldr	x25, [sp, #64]
  c4:	ldp	x29, x30, [sp], #96
  c8:	ret
  cc:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZSt19__throw_logic_errorPKc>
  d8:	mov	x2, #0x0                   	// #0
  dc:	add	x1, sp, #0x58
  e0:	mov	x0, x25
  e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  e8:	str	x0, [x19, #32]
  ec:	ldr	x1, [sp, #88]
  f0:	str	x1, [x19, #48]
  f4:	mov	x2, x20
  f8:	mov	x1, x24
  fc:	bl	0 <memcpy>
 100:	b	74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0x74>
 104:	cbz	x20, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0x74>
 108:	b	f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0xf4>
 10c:	ldr	x0, [x19, #32]
 110:	cmp	x0, x23
 114:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0x11c>  // b.none
 118:	bl	0 <_ZdlPv>
 11c:	mov	x0, x19
 120:	bl	0 <_ZdlPv>
 124:	mov	x0, x20
 128:	b	b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0xb4>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x20, x1
  18:	mov	x22, x3
  1c:	mov	x0, #0x48                  	// #72
  20:	bl	0 <_Znwm>
  24:	mov	x19, x0
  28:	ldr	x3, [x22]
  2c:	add	x22, x0, #0x30
  30:	str	x22, [x0, #32]
  34:	mov	x4, x3
  38:	ldr	x0, [x4], #16
  3c:	cmp	x0, x4
  40:	b.eq	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0xa4>  // b.none
  44:	str	x0, [x19, #32]
  48:	ldr	x0, [x3, #16]
  4c:	str	x0, [x19, #48]
  50:	add	x2, x19, #0x20
  54:	ldr	x0, [x3, #8]
  58:	str	x0, [x2, #8]
  5c:	str	x4, [x3]
  60:	str	xzr, [x3, #8]
  64:	strb	wzr, [x3, #16]
  68:	str	xzr, [x2, #32]
  6c:	mov	x1, x20
  70:	mov	x0, x21
  74:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_>
  78:	mov	x20, x0
  7c:	mov	x2, x1
  80:	cbz	x1, b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0xb0>
  84:	mov	x3, x19
  88:	mov	x1, x0
  8c:	mov	x0, x21
  90:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_>
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x21, x22, [sp, #32]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret
  a4:	ldp	x0, x1, [x3, #16]
  a8:	stp	x0, x1, [x19, #48]
  ac:	b	50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0x50>
  b0:	ldr	x0, [x19, #32]
  b4:	cmp	x0, x22
  b8:	b.eq	c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0xc0>  // b.none
  bc:	bl	0 <_ZdlPv>
  c0:	mov	x0, x19
  c4:	bl	0 <_ZdlPv>
  c8:	mov	x0, x20
  cc:	b	94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFN4llvm12GenericValueEPNS8_12FunctionTypeENS8_8ArrayRefIS9_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESR_IJEEEEESt17_Rb_tree_iteratorISG_ESt23_Rb_tree_const_iteratorISG_EDpOT_+0x94>

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	cbz	x1, 34 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E+0x34>
  18:	ldr	x1, [x19, #24]
  1c:	mov	x0, x20
  20:	bl	0 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E>
  24:	mov	x0, x19
  28:	ldr	x19, [x19, #16]
  2c:	bl	0 <_ZdlPv>
  30:	cbnz	x19, 18 <_ZNSt8_Rb_treeIPKN4llvm8FunctionESt4pairIKS3_PFNS0_12GenericValueEPNS0_12FunctionTypeENS0_8ArrayRefIS6_EEEESt10_Select1stISD_ESt4lessIS3_ESaISD_EE8_M_eraseEPSt13_Rb_tree_nodeISD_E+0x18>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv:

0000000000000000 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv>:
   0:	cbz	x0, 34 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv+0x34>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	x1, [x0, #16]
  18:	bl	0 <_ZN4llvm14object_deleterISt3mapIPKNS_8FunctionEPFNS_12GenericValueEPNS_12FunctionTypeENS_8ArrayRefIS5_EEESt4lessIS4_ESaISt4pairIKS4_SB_EEEE4callEPv>
  1c:	mov	x1, #0x30                  	// #48
  20:	mov	x0, x19
  24:	bl	0 <_ZdlPvm>
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x24, x0
  10:	cmp	x1, x0
  14:	b.eq	234 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x234>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x27, x28, [sp, #80]
  24:	mov	x22, x1
  28:	ldr	x28, [x1, #8]
  2c:	ldr	x19, [x1]
  30:	sub	x27, x28, x19
  34:	asr	x23, x27, #4
  38:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  3c:	movk	x1, #0xaaab
  40:	mul	x23, x23, x1
  44:	ldr	x20, [x0]
  48:	ldr	x0, [x0, #16]
  4c:	sub	x0, x0, x20
  50:	asr	x0, x0, #4
  54:	mul	x0, x0, x1
  58:	cmp	x0, x23
  5c:	b.cc	98 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x98>  // b.lo, b.ul, b.last
  60:	ldr	x0, [x24, #8]
  64:	sub	x0, x0, x20
  68:	asr	x21, x0, #4
  6c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  70:	movk	x1, #0xaaab
  74:	mul	x21, x21, x1
  78:	cmp	x23, x21
  7c:	b.hi	3e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3e4>  // b.pmore
  80:	cmp	x27, #0x0
  84:	b.le	360 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x360>
  88:	add	x21, x20, #0x8
  8c:	add	x19, x19, #0x8
  90:	mov	x22, #0xffffffffffffffff    	// #-1
  94:	b	2fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2fc>
  98:	cbz	x23, d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xd4>
  9c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  a0:	movk	x0, #0x2aa, lsl #48
  a4:	cmp	x23, x0
  a8:	b.hi	cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xcc>  // b.pmore
  ac:	mov	x0, x27
  b0:	bl	0 <_Znwm>
  b4:	str	x0, [sp, #104]
  b8:	cmp	x19, x28
  bc:	b.eq	1f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1f0>  // b.none
  c0:	stp	x25, x26, [sp, #64]
  c4:	ldr	x21, [sp, #104]
  c8:	b	1b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1b8>
  cc:	stp	x25, x26, [sp, #64]
  d0:	bl	0 <_ZSt17__throw_bad_allocv>
  d4:	str	xzr, [sp, #104]
  d8:	b	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xb8>
  dc:	add	x1, x19, #0x8
  e0:	add	x0, x21, #0x8
  e4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  e8:	ldr	x23, [x20, #32]
  ec:	ldr	x0, [x20, #24]
  f0:	sub	x23, x23, x0
  f4:	asr	x0, x23, #4
  f8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  fc:	movk	x1, #0xaaab
 100:	mul	x0, x0, x1
 104:	str	xzr, [x21, #24]
 108:	str	xzr, [x21, #32]
 10c:	str	xzr, [x21, #40]
 110:	cbz	x0, 1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1e4>
 114:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 118:	movk	x1, #0x2aa, lsl #48
 11c:	cmp	x0, x1
 120:	b.hi	1e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1e0>  // b.pmore
 124:	mov	x0, x23
 128:	bl	0 <_Znwm>
 12c:	mov	x22, x0
 130:	str	x22, [x21, #24]
 134:	str	x22, [x21, #32]
 138:	add	x23, x22, x23
 13c:	str	x23, [x21, #40]
 140:	ldr	x26, [x20, #24]
 144:	ldr	x20, [x20, #32]
 148:	cmp	x26, x20
 14c:	b.eq	1a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1a4>  // b.none
 150:	mov	x23, x26
 154:	mov	x25, x22
 158:	mov	x1, x23
 15c:	mov	x0, x25
 160:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 164:	add	x25, x25, #0x30
 168:	add	x23, x23, #0x30
 16c:	cmp	x20, x23
 170:	b.ne	158 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x158>  // b.any
 174:	sub	x0, x20, #0x30
 178:	sub	x0, x0, x26
 17c:	lsr	x0, x0, #4
 180:	mov	x1, #0xaaab                	// #43691
 184:	movk	x1, #0xaaaa, lsl #16
 188:	movk	x1, #0xaaaa, lsl #32
 18c:	movk	x1, #0xaaa, lsl #48
 190:	mul	x0, x0, x1
 194:	and	x0, x0, #0xfffffffffffffff
 198:	add	x0, x0, #0x1
 19c:	add	x0, x0, x0, lsl #1
 1a0:	add	x22, x22, x0, lsl #4
 1a4:	str	x22, [x21, #32]
 1a8:	add	x21, x21, #0x30
 1ac:	add	x19, x19, #0x30
 1b0:	cmp	x28, x19
 1b4:	b.eq	1ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x1ec>  // b.none
 1b8:	mov	x20, x19
 1bc:	ldr	x0, [x19]
 1c0:	str	x0, [x21]
 1c4:	ldr	w0, [x19, #16]
 1c8:	str	w0, [x21, #16]
 1cc:	cmp	w0, #0x40
 1d0:	b.hi	dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xdc>  // b.pmore
 1d4:	ldr	x0, [x19, #8]
 1d8:	str	x0, [x21, #8]
 1dc:	b	e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0xe8>
 1e0:	bl	0 <_ZSt17__throw_bad_allocv>
 1e4:	mov	x22, #0x0                   	// #0
 1e8:	b	130 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x130>
 1ec:	ldp	x25, x26, [sp, #64]
 1f0:	ldr	x20, [x24]
 1f4:	ldr	x22, [x24, #8]
 1f8:	cmp	x20, x22
 1fc:	b.ne	2a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2a4>  // b.any
 200:	ldr	x0, [x24]
 204:	cbz	x0, 20c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x20c>
 208:	bl	0 <_ZdlPv>
 20c:	ldr	x0, [sp, #104]
 210:	str	x0, [x24]
 214:	add	x0, x0, x27
 218:	str	x0, [x24, #16]
 21c:	ldr	x0, [x24]
 220:	add	x27, x0, x27
 224:	str	x27, [x24, #8]
 228:	ldp	x19, x20, [sp, #16]
 22c:	ldp	x21, x22, [sp, #32]
 230:	ldp	x27, x28, [sp, #80]
 234:	mov	x0, x24
 238:	ldp	x23, x24, [sp, #48]
 23c:	ldp	x29, x30, [sp], #112
 240:	ret
 244:	bl	0 <_ZdaPv>
 248:	add	x19, x19, #0x30
 24c:	cmp	x21, x19
 250:	b.eq	274 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x274>  // b.none
 254:	add	x0, x19, #0x18
 258:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 25c:	ldr	w0, [x19, #16]
 260:	cmp	w0, #0x40
 264:	b.ls	248 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x248>  // b.plast
 268:	ldr	x0, [x19, #8]
 26c:	cbnz	x0, 244 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x244>
 270:	b	248 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x248>
 274:	ldr	x0, [x20, #24]
 278:	cbz	x0, 280 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x280>
 27c:	bl	0 <_ZdlPv>
 280:	ldr	w0, [x20, #16]
 284:	cmp	w0, #0x40
 288:	b.ls	298 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x298>  // b.plast
 28c:	ldr	x0, [x20, #8]
 290:	cbz	x0, 298 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x298>
 294:	bl	0 <_ZdaPv>
 298:	add	x20, x20, #0x30
 29c:	cmp	x22, x20
 2a0:	b.eq	200 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x200>  // b.none
 2a4:	ldr	x19, [x20, #24]
 2a8:	ldr	x21, [x20, #32]
 2ac:	cmp	x19, x21
 2b0:	b.ne	254 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x254>  // b.any
 2b4:	b	274 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x274>
 2b8:	mov	w0, w1
 2bc:	add	x0, x0, #0x3f
 2c0:	lsr	x0, x0, #6
 2c4:	sub	w0, w0, #0x1
 2c8:	ldr	x1, [x2, x0, lsl #3]
 2cc:	and	x3, x1, x3
 2d0:	str	x3, [x2, x0, lsl #3]
 2d4:	b	2dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2dc>
 2d8:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 2dc:	add	x1, x19, #0x10
 2e0:	add	x0, x21, #0x10
 2e4:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 2e8:	sub	x23, x23, #0x1
 2ec:	add	x21, x21, #0x30
 2f0:	add	x19, x19, #0x30
 2f4:	cmp	x23, #0x0
 2f8:	b.le	350 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x350>
 2fc:	mov	x1, x19
 300:	mov	x0, x21
 304:	ldur	x2, [x19, #-8]
 308:	stur	x2, [x21, #-8]
 30c:	ldr	w2, [x21, #8]
 310:	cmp	w2, #0x40
 314:	b.hi	2d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2d8>  // b.pmore
 318:	ldr	w2, [x19, #8]
 31c:	cmp	w2, #0x40
 320:	b.hi	2d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2d8>  // b.pmore
 324:	ldr	x2, [x19]
 328:	str	x2, [x21]
 32c:	ldr	w1, [x19, #8]
 330:	str	w1, [x21, #8]
 334:	neg	w3, w1
 338:	lsr	x3, x22, x3
 33c:	cmp	w1, #0x40
 340:	b.hi	2b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2b8>  // b.pmore
 344:	and	x2, x2, x3
 348:	str	x2, [x21]
 34c:	b	2dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x2dc>
 350:	cmp	x27, #0x0
 354:	mov	x0, #0x30                  	// #48
 358:	csel	x0, x27, x0, gt
 35c:	add	x20, x20, x0
 360:	ldr	x22, [x24, #8]
 364:	cmp	x22, x20
 368:	b.ne	3d0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3d0>  // b.any
 36c:	b	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x21c>
 370:	bl	0 <_ZdaPv>
 374:	add	x19, x19, #0x30
 378:	cmp	x21, x19
 37c:	b.eq	3a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3a0>  // b.none
 380:	add	x0, x19, #0x18
 384:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 388:	ldr	w0, [x19, #16]
 38c:	cmp	w0, #0x40
 390:	b.ls	374 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x374>  // b.plast
 394:	ldr	x0, [x19, #8]
 398:	cbnz	x0, 370 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x370>
 39c:	b	374 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x374>
 3a0:	ldr	x0, [x20, #24]
 3a4:	cbz	x0, 3ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3ac>
 3a8:	bl	0 <_ZdlPv>
 3ac:	ldr	w0, [x20, #16]
 3b0:	cmp	w0, #0x40
 3b4:	b.ls	3c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3c4>  // b.plast
 3b8:	ldr	x0, [x20, #8]
 3bc:	cbz	x0, 3c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3c4>
 3c0:	bl	0 <_ZdaPv>
 3c4:	add	x20, x20, #0x30
 3c8:	cmp	x20, x22
 3cc:	b.eq	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x21c>  // b.none
 3d0:	ldr	x19, [x20, #24]
 3d4:	ldr	x21, [x20, #32]
 3d8:	cmp	x19, x21
 3dc:	b.ne	380 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x380>  // b.any
 3e0:	b	3a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3a0>
 3e4:	cmp	x0, #0x0
 3e8:	b.le	494 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x494>
 3ec:	add	x20, x20, #0x8
 3f0:	add	x19, x19, #0x8
 3f4:	mov	x23, #0xffffffffffffffff    	// #-1
 3f8:	b	440 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x440>
 3fc:	mov	w0, w1
 400:	add	x0, x0, #0x3f
 404:	lsr	x0, x0, #6
 408:	sub	w0, w0, #0x1
 40c:	ldr	x1, [x2, x0, lsl #3]
 410:	and	x3, x1, x3
 414:	str	x3, [x2, x0, lsl #3]
 418:	b	420 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x420>
 41c:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 420:	add	x1, x19, #0x10
 424:	add	x0, x20, #0x10
 428:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 42c:	sub	x21, x21, #0x1
 430:	add	x20, x20, #0x30
 434:	add	x19, x19, #0x30
 438:	cmp	x21, #0x0
 43c:	b.le	494 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x494>
 440:	mov	x1, x19
 444:	mov	x0, x20
 448:	ldur	x2, [x19, #-8]
 44c:	stur	x2, [x20, #-8]
 450:	ldr	w2, [x20, #8]
 454:	cmp	w2, #0x40
 458:	b.hi	41c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x41c>  // b.pmore
 45c:	ldr	w2, [x19, #8]
 460:	cmp	w2, #0x40
 464:	b.hi	41c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x41c>  // b.pmore
 468:	ldr	x2, [x19]
 46c:	str	x2, [x20]
 470:	ldr	w1, [x19, #8]
 474:	str	w1, [x20, #8]
 478:	neg	w3, w1
 47c:	lsr	x3, x23, x3
 480:	cmp	w1, #0x40
 484:	b.hi	3fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x3fc>  // b.pmore
 488:	and	x2, x2, x3
 48c:	str	x2, [x20]
 490:	b	420 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x420>
 494:	ldr	x20, [x24, #8]
 498:	ldr	x21, [x24]
 49c:	sub	x0, x20, x21
 4a0:	ldr	x21, [x22]
 4a4:	add	x21, x21, x0
 4a8:	ldr	x28, [x22, #8]
 4ac:	cmp	x21, x28
 4b0:	b.eq	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x21c>  // b.none
 4b4:	stp	x25, x26, [sp, #64]
 4b8:	b	598 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x598>
 4bc:	add	x1, x21, #0x8
 4c0:	add	x0, x20, #0x8
 4c4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 4c8:	ldr	x19, [x21, #32]
 4cc:	ldr	x0, [x21, #24]
 4d0:	sub	x19, x19, x0
 4d4:	asr	x0, x19, #4
 4d8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 4dc:	movk	x1, #0xaaab
 4e0:	mul	x0, x0, x1
 4e4:	str	xzr, [x20, #24]
 4e8:	str	xzr, [x20, #32]
 4ec:	str	xzr, [x20, #40]
 4f0:	cbz	x0, 5c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x5c0>
 4f4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 4f8:	movk	x1, #0x2aa, lsl #48
 4fc:	cmp	x0, x1
 500:	b.hi	5bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x5bc>  // b.pmore
 504:	mov	x0, x19
 508:	bl	0 <_Znwm>
 50c:	mov	x22, x0
 510:	str	x22, [x20, #24]
 514:	str	x22, [x20, #32]
 518:	add	x19, x22, x19
 51c:	str	x19, [x20, #40]
 520:	ldr	x26, [x21, #24]
 524:	ldr	x19, [x21, #32]
 528:	cmp	x26, x19
 52c:	b.eq	584 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x584>  // b.none
 530:	mov	x23, x26
 534:	mov	x25, x22
 538:	mov	x1, x23
 53c:	mov	x0, x25
 540:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_>
 544:	add	x25, x25, #0x30
 548:	add	x23, x23, #0x30
 54c:	cmp	x19, x23
 550:	b.ne	538 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x538>  // b.any
 554:	sub	x0, x19, #0x30
 558:	sub	x0, x0, x26
 55c:	lsr	x0, x0, #4
 560:	mov	x1, #0xaaab                	// #43691
 564:	movk	x1, #0xaaaa, lsl #16
 568:	movk	x1, #0xaaaa, lsl #32
 56c:	movk	x1, #0xaaa, lsl #48
 570:	mul	x0, x0, x1
 574:	and	x0, x0, #0xfffffffffffffff
 578:	add	x0, x0, #0x1
 57c:	add	x0, x0, x0, lsl #1
 580:	add	x22, x22, x0, lsl #4
 584:	str	x22, [x20, #32]
 588:	add	x21, x21, #0x30
 58c:	add	x20, x20, #0x30
 590:	cmp	x28, x21
 594:	b.eq	5c8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x5c8>  // b.none
 598:	ldr	x0, [x21]
 59c:	str	x0, [x20]
 5a0:	ldr	w0, [x21, #16]
 5a4:	str	w0, [x20, #16]
 5a8:	cmp	w0, #0x40
 5ac:	b.hi	4bc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x4bc>  // b.pmore
 5b0:	ldr	x0, [x21, #8]
 5b4:	str	x0, [x20, #8]
 5b8:	b	4c8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x4c8>
 5bc:	bl	0 <_ZSt17__throw_bad_allocv>
 5c0:	mov	x22, #0x0                   	// #0
 5c4:	b	510 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x510>
 5c8:	ldp	x25, x26, [sp, #64]
 5cc:	b	21c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEaSERKS3_+0x21c>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	str	x1, [sp, #112]
   c:	str	x3, [sp, #96]
  10:	cmp	x2, x3
  14:	b.eq	568 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x568>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	mov	x28, x0
  2c:	mov	x19, x2
  30:	mov	x2, x1
  34:	mov	x22, x1
  38:	sub	x21, x3, x19
  3c:	asr	x20, x21, #4
  40:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x1, #0xaaab
  48:	mul	x20, x20, x1
  4c:	str	x20, [sp, #120]
  50:	ldr	x3, [x0, #8]
  54:	str	x3, [sp, #104]
  58:	ldr	x0, [x0, #16]
  5c:	sub	x0, x0, x3
  60:	asr	x0, x0, #4
  64:	mul	x0, x0, x1
  68:	cmp	x0, x20
  6c:	b.cc	570 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x570>  // b.lo, b.ul, b.last
  70:	sub	x0, x3, x2
  74:	str	x0, [sp, #128]
  78:	asr	x26, x0, #4
  7c:	mul	x26, x26, x1
  80:	str	x26, [sp, #136]
  84:	cmp	x20, x26
  88:	b.cc	ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xac>  // b.lo, b.ul, b.last
  8c:	ldr	x0, [sp, #128]
  90:	add	x22, x19, x0
  94:	ldr	x0, [sp, #96]
  98:	cmp	x0, x22
  9c:	b.eq	414 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x414>  // b.none
  a0:	stp	x23, x24, [sp, #48]
  a4:	ldr	x21, [sp, #104]
  a8:	b	3dc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x3dc>
  ac:	mov	x1, x3
  b0:	sub	x3, x3, x21
  b4:	mov	x0, x3
  b8:	ldr	x2, [x0]
  bc:	str	x2, [x1]
  c0:	ldr	w2, [x0, #16]
  c4:	str	w2, [x1, #16]
  c8:	ldr	x2, [x0, #8]
  cc:	str	x2, [x1, #8]
  d0:	str	wzr, [x0, #16]
  d4:	ldr	x2, [x0, #24]
  d8:	str	x2, [x1, #24]
  dc:	ldr	x2, [x0, #32]
  e0:	str	x2, [x1, #32]
  e4:	ldr	x2, [x0, #40]
  e8:	str	x2, [x1, #40]
  ec:	str	xzr, [x0, #40]
  f0:	str	xzr, [x0, #32]
  f4:	str	xzr, [x0, #24]
  f8:	add	x1, x1, #0x30
  fc:	add	x0, x0, #0x30
 100:	ldr	x2, [sp, #104]
 104:	cmp	x2, x0
 108:	b.ne	b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xb8>  // b.any
 10c:	ldr	x0, [x28, #8]
 110:	add	x0, x0, x21
 114:	str	x0, [x28, #8]
 118:	ldr	x0, [sp, #112]
 11c:	sub	x0, x3, x0
 120:	asr	x26, x0, #4
 124:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 128:	movk	x1, #0xaaab
 12c:	mul	x26, x26, x1
 130:	cmp	x0, #0x0
 134:	b.le	238 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x238>
 138:	stp	x23, x24, [sp, #48]
 13c:	sub	x24, x2, #0x30
 140:	sub	x23, x3, #0x30
 144:	ldur	x0, [x3, #-48]
 148:	stur	x0, [x2, #-48]
 14c:	cmp	x24, x23
 150:	b.ne	1cc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1cc>  // b.any
 154:	adrp	x3, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x302                 	// #770
 160:	adrp	x1, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 164:	add	x1, x1, #0x0
 168:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 16c:	add	x0, x0, #0x0
 170:	bl	0 <__assert_fail>
 174:	bl	0 <_ZdaPv>
 178:	add	x22, x22, #0x30
 17c:	cmp	x27, x22
 180:	b.eq	1a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1a4>  // b.none
 184:	add	x0, x22, #0x18
 188:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 18c:	ldr	w0, [x22, #16]
 190:	cmp	w0, #0x40
 194:	b.ls	178 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x178>  // b.plast
 198:	ldr	x0, [x22, #8]
 19c:	cbnz	x0, 174 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x174>
 1a0:	b	178 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x178>
 1a4:	cbz	x25, 1b0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1b0>
 1a8:	mov	x0, x25
 1ac:	bl	0 <_ZdlPv>
 1b0:	sub	x26, x26, #0x1
 1b4:	cmp	x26, #0x0
 1b8:	b.le	234 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x234>
 1bc:	ldr	x0, [x23, #-48]!
 1c0:	str	x0, [x24, #-48]!
 1c4:	cmp	x24, x23
 1c8:	b.eq	154 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x154>  // b.none
 1cc:	ldr	w0, [x24, #16]
 1d0:	cmp	w0, #0x40
 1d4:	b.ls	1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1e4>  // b.plast
 1d8:	ldr	x0, [x24, #8]
 1dc:	cbz	x0, 1e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1e4>
 1e0:	bl	0 <_ZdaPv>
 1e4:	ldr	x0, [x23, #8]
 1e8:	str	x0, [x24, #8]
 1ec:	ldr	w0, [x23, #16]
 1f0:	str	w0, [x24, #16]
 1f4:	str	wzr, [x23, #16]
 1f8:	ldr	x25, [x24, #24]
 1fc:	ldr	x27, [x24, #32]
 200:	ldr	x0, [x23, #24]
 204:	str	x0, [x24, #24]
 208:	ldr	x0, [x23, #32]
 20c:	str	x0, [x24, #32]
 210:	ldr	x0, [x23, #40]
 214:	str	x0, [x24, #40]
 218:	str	xzr, [x23, #24]
 21c:	str	xzr, [x23, #32]
 220:	str	xzr, [x23, #40]
 224:	cmp	x25, x27
 228:	b.eq	1a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x1a4>  // b.none
 22c:	mov	x22, x25
 230:	b	184 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x184>
 234:	ldp	x23, x24, [sp, #48]
 238:	cmp	x21, #0x0
 23c:	b.le	a1c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xa1c>
 240:	ldr	x0, [sp, #112]
 244:	add	x21, x0, #0x8
 248:	add	x19, x19, #0x8
 24c:	mov	x22, #0xffffffffffffffff    	// #-1
 250:	b	298 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x298>
 254:	mov	w0, w1
 258:	add	x0, x0, #0x3f
 25c:	lsr	x0, x0, #6
 260:	sub	w0, w0, #0x1
 264:	ldr	x1, [x2, x0, lsl #3]
 268:	and	x3, x1, x3
 26c:	str	x3, [x2, x0, lsl #3]
 270:	b	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x278>
 274:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 278:	add	x1, x19, #0x10
 27c:	add	x0, x21, #0x10
 280:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 284:	sub	x20, x20, #0x1
 288:	add	x21, x21, #0x30
 28c:	add	x19, x19, #0x30
 290:	cmp	x20, #0x0
 294:	b.le	2ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x2ec>
 298:	mov	x1, x19
 29c:	mov	x0, x21
 2a0:	ldur	x2, [x19, #-8]
 2a4:	stur	x2, [x21, #-8]
 2a8:	ldr	w2, [x21, #8]
 2ac:	cmp	w2, #0x40
 2b0:	b.hi	274 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x274>  // b.pmore
 2b4:	ldr	w2, [x19, #8]
 2b8:	cmp	w2, #0x40
 2bc:	b.hi	274 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x274>  // b.pmore
 2c0:	ldr	x2, [x19]
 2c4:	str	x2, [x21]
 2c8:	ldr	w1, [x19, #8]
 2cc:	str	w1, [x21, #8]
 2d0:	neg	w3, w1
 2d4:	lsr	x3, x22, x3
 2d8:	cmp	w1, #0x40
 2dc:	b.hi	254 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x254>  // b.pmore
 2e0:	and	x2, x2, x3
 2e4:	str	x2, [x21]
 2e8:	b	278 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x278>
 2ec:	ldp	x19, x20, [sp, #16]
 2f0:	ldp	x21, x22, [sp, #32]
 2f4:	ldp	x25, x26, [sp, #64]
 2f8:	ldp	x27, x28, [sp, #80]
 2fc:	b	568 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x568>
 300:	ldr	x0, [x22, #8]
 304:	str	x0, [x21, #8]
 308:	ldr	x20, [x22, #32]
 30c:	ldr	x0, [x22, #24]
 310:	sub	x20, x20, x0
 314:	asr	x0, x20, #4
 318:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 31c:	movk	x1, #0xaaab
 320:	mul	x0, x0, x1
 324:	str	xzr, [x21, #24]
 328:	str	xzr, [x21, #32]
 32c:	str	xzr, [x21, #40]
 330:	cbz	x0, 408 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x408>
 334:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 338:	movk	x1, #0x2aa, lsl #48
 33c:	cmp	x0, x1
 340:	b.hi	404 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x404>  // b.pmore
 344:	mov	x0, x20
 348:	bl	0 <_Znwm>
 34c:	mov	x23, x0
 350:	str	x23, [x21, #24]
 354:	str	x23, [x21, #32]
 358:	add	x20, x23, x20
 35c:	str	x20, [x21, #40]
 360:	ldr	x27, [x22, #24]
 364:	ldr	x20, [x22, #32]
 368:	cmp	x27, x20
 36c:	b.eq	3c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x3c4>  // b.none
 370:	mov	x24, x27
 374:	mov	x25, x23
 378:	mov	x1, x24
 37c:	mov	x0, x25
 380:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 384:	add	x25, x25, #0x30
 388:	add	x24, x24, #0x30
 38c:	cmp	x20, x24
 390:	b.ne	378 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x378>  // b.any
 394:	sub	x0, x20, #0x30
 398:	sub	x0, x0, x27
 39c:	lsr	x0, x0, #4
 3a0:	mov	x1, #0xaaab                	// #43691
 3a4:	movk	x1, #0xaaaa, lsl #16
 3a8:	movk	x1, #0xaaaa, lsl #32
 3ac:	movk	x1, #0xaaa, lsl #48
 3b0:	mul	x0, x0, x1
 3b4:	and	x0, x0, #0xfffffffffffffff
 3b8:	add	x0, x0, #0x1
 3bc:	add	x0, x0, x0, lsl #1
 3c0:	add	x23, x23, x0, lsl #4
 3c4:	str	x23, [x21, #32]
 3c8:	add	x22, x22, #0x30
 3cc:	add	x21, x21, #0x30
 3d0:	ldr	x0, [sp, #96]
 3d4:	cmp	x0, x22
 3d8:	b.eq	410 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x410>  // b.none
 3dc:	ldr	x0, [x22]
 3e0:	str	x0, [x21]
 3e4:	ldr	w0, [x22, #16]
 3e8:	str	w0, [x21, #16]
 3ec:	cmp	w0, #0x40
 3f0:	b.ls	300 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x300>  // b.plast
 3f4:	add	x1, x22, #0x8
 3f8:	add	x0, x21, #0x8
 3fc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 400:	b	308 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x308>
 404:	bl	0 <_ZSt17__throw_bad_allocv>
 408:	mov	x23, #0x0                   	// #0
 40c:	b	350 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x350>
 410:	ldp	x23, x24, [sp, #48]
 414:	ldr	x0, [sp, #120]
 418:	ldr	x1, [sp, #136]
 41c:	sub	x1, x0, x1
 420:	add	x1, x1, x1, lsl #1
 424:	ldr	x0, [x28, #8]
 428:	add	x1, x0, x1, lsl #4
 42c:	str	x1, [x28, #8]
 430:	ldr	x2, [sp, #104]
 434:	ldr	x0, [sp, #112]
 438:	cmp	x2, x0
 43c:	b.eq	494 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x494>  // b.none
 440:	ldr	x2, [x0]
 444:	str	x2, [x1]
 448:	ldr	w2, [x0, #16]
 44c:	str	w2, [x1, #16]
 450:	ldr	x2, [x0, #8]
 454:	str	x2, [x1, #8]
 458:	str	wzr, [x0, #16]
 45c:	ldr	x2, [x0, #24]
 460:	str	x2, [x1, #24]
 464:	ldr	x2, [x0, #32]
 468:	str	x2, [x1, #32]
 46c:	ldr	x2, [x0, #40]
 470:	str	x2, [x1, #40]
 474:	str	xzr, [x0, #40]
 478:	str	xzr, [x0, #32]
 47c:	str	xzr, [x0, #24]
 480:	add	x1, x1, #0x30
 484:	add	x0, x0, #0x30
 488:	ldr	x2, [sp, #104]
 48c:	cmp	x2, x0
 490:	b.ne	440 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x440>  // b.any
 494:	ldr	x0, [x28, #8]
 498:	ldr	x1, [sp, #128]
 49c:	add	x0, x0, x1
 4a0:	str	x0, [x28, #8]
 4a4:	cmp	x1, #0x0
 4a8:	b.le	a30 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xa30>
 4ac:	ldr	x0, [sp, #112]
 4b0:	add	x20, x0, #0x8
 4b4:	add	x19, x19, #0x8
 4b8:	mov	x21, #0xffffffffffffffff    	// #-1
 4bc:	b	504 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x504>
 4c0:	mov	w0, w1
 4c4:	add	x0, x0, #0x3f
 4c8:	lsr	x0, x0, #6
 4cc:	sub	w0, w0, #0x1
 4d0:	ldr	x1, [x2, x0, lsl #3]
 4d4:	and	x3, x1, x3
 4d8:	str	x3, [x2, x0, lsl #3]
 4dc:	b	4e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x4e4>
 4e0:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 4e4:	add	x1, x19, #0x10
 4e8:	add	x0, x20, #0x10
 4ec:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 4f0:	sub	x26, x26, #0x1
 4f4:	add	x20, x20, #0x30
 4f8:	add	x19, x19, #0x30
 4fc:	cmp	x26, #0x0
 500:	b.le	558 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x558>
 504:	mov	x1, x19
 508:	mov	x0, x20
 50c:	ldur	x2, [x19, #-8]
 510:	stur	x2, [x20, #-8]
 514:	ldr	w2, [x20, #8]
 518:	cmp	w2, #0x40
 51c:	b.hi	4e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x4e0>  // b.pmore
 520:	ldr	w2, [x19, #8]
 524:	cmp	w2, #0x40
 528:	b.hi	4e0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x4e0>  // b.pmore
 52c:	ldr	x2, [x19]
 530:	str	x2, [x20]
 534:	ldr	w1, [x19, #8]
 538:	str	w1, [x20, #8]
 53c:	neg	w3, w1
 540:	lsr	x3, x21, x3
 544:	cmp	w1, #0x40
 548:	b.hi	4c0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x4c0>  // b.pmore
 54c:	and	x2, x2, x3
 550:	str	x2, [x20]
 554:	b	4e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x4e4>
 558:	ldp	x19, x20, [sp, #16]
 55c:	ldp	x21, x22, [sp, #32]
 560:	ldp	x25, x26, [sp, #64]
 564:	ldp	x27, x28, [sp, #80]
 568:	ldp	x29, x30, [sp], #144
 56c:	ret
 570:	stp	x23, x24, [sp, #48]
 574:	ldr	x0, [x28]
 578:	ldr	x1, [sp, #104]
 57c:	sub	x0, x1, x0
 580:	asr	x0, x0, #4
 584:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 588:	movk	x1, #0xaaab
 58c:	mul	x0, x0, x1
 590:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 594:	movk	x1, #0x2aa, lsl #48
 598:	sub	x1, x1, x0
 59c:	cmp	x20, x1
 5a0:	b.hi	608 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x608>  // b.pmore
 5a4:	ldr	x1, [sp, #120]
 5a8:	cmp	x1, x0
 5ac:	csel	x1, x1, x0, cs  // cs = hs, nlast
 5b0:	adds	x0, x1, x0
 5b4:	b.cs	614 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x614>  // b.hs, b.nlast
 5b8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 5bc:	movk	x1, #0x2aa, lsl #48
 5c0:	cmp	x0, x1
 5c4:	csel	x1, x0, x1, ls  // ls = plast
 5c8:	str	x1, [sp, #120]
 5cc:	str	xzr, [sp, #104]
 5d0:	cbz	x0, 5e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x5e8>
 5d4:	ldr	x0, [sp, #120]
 5d8:	add	x0, x0, x0, lsl #1
 5dc:	lsl	x0, x0, #4
 5e0:	bl	0 <_Znwm>
 5e4:	str	x0, [sp, #104]
 5e8:	ldr	x23, [x28]
 5ec:	ldr	x20, [sp, #104]
 5f0:	ldr	x0, [sp, #112]
 5f4:	cmp	x0, x23
 5f8:	b.ne	700 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x700>  // b.any
 5fc:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 600:	movk	x27, #0xaaab
 604:	b	808 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x808>
 608:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 60c:	add	x0, x0, #0x0
 610:	bl	0 <_ZSt20__throw_length_errorPKc>
 614:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 618:	movk	x0, #0x2aa, lsl #48
 61c:	str	x0, [sp, #120]
 620:	b	5d4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x5d4>
 624:	add	x1, x23, #0x8
 628:	add	x0, x20, #0x8
 62c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 630:	ldr	x21, [x23, #32]
 634:	ldr	x0, [x23, #24]
 638:	sub	x21, x21, x0
 63c:	asr	x0, x21, #4
 640:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 644:	movk	x1, #0xaaab
 648:	mul	x0, x0, x1
 64c:	str	xzr, [x20, #24]
 650:	str	xzr, [x20, #32]
 654:	str	xzr, [x20, #40]
 658:	cbz	x0, 728 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x728>
 65c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 660:	movk	x1, #0x2aa, lsl #48
 664:	cmp	x0, x1
 668:	b.hi	724 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x724>  // b.pmore
 66c:	mov	x0, x21
 670:	bl	0 <_Znwm>
 674:	mov	x24, x0
 678:	str	x24, [x20, #24]
 67c:	str	x24, [x20, #32]
 680:	add	x21, x24, x21
 684:	str	x21, [x20, #40]
 688:	ldr	x27, [x23, #24]
 68c:	ldr	x21, [x23, #32]
 690:	cmp	x27, x21
 694:	b.eq	6ec <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6ec>  // b.none
 698:	mov	x25, x27
 69c:	mov	x26, x24
 6a0:	mov	x1, x25
 6a4:	mov	x0, x26
 6a8:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 6ac:	add	x26, x26, #0x30
 6b0:	add	x25, x25, #0x30
 6b4:	cmp	x21, x25
 6b8:	b.ne	6a0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x6a0>  // b.any
 6bc:	sub	x0, x21, #0x30
 6c0:	sub	x0, x0, x27
 6c4:	lsr	x0, x0, #4
 6c8:	mov	x1, #0xaaab                	// #43691
 6cc:	movk	x1, #0xaaaa, lsl #16
 6d0:	movk	x1, #0xaaaa, lsl #32
 6d4:	movk	x1, #0xaaa, lsl #48
 6d8:	mul	x0, x0, x1
 6dc:	and	x0, x0, #0xfffffffffffffff
 6e0:	add	x0, x0, #0x1
 6e4:	add	x0, x0, x0, lsl #1
 6e8:	add	x24, x24, x0, lsl #4
 6ec:	str	x24, [x20, #32]
 6f0:	add	x23, x23, #0x30
 6f4:	add	x20, x20, #0x30
 6f8:	cmp	x22, x23
 6fc:	b.eq	5fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x5fc>  // b.none
 700:	ldr	x0, [x23]
 704:	str	x0, [x20]
 708:	ldr	w0, [x23, #16]
 70c:	str	w0, [x20, #16]
 710:	cmp	w0, #0x40
 714:	b.hi	624 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x624>  // b.pmore
 718:	ldr	x0, [x23, #8]
 71c:	str	x0, [x20, #8]
 720:	b	630 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x630>
 724:	bl	0 <_ZSt17__throw_bad_allocv>
 728:	mov	x24, #0x0                   	// #0
 72c:	b	678 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x678>
 730:	add	x1, x19, #0x8
 734:	add	x0, x20, #0x8
 738:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 73c:	ldr	x21, [x19, #32]
 740:	ldr	x0, [x19, #24]
 744:	sub	x21, x21, x0
 748:	asr	x0, x21, #4
 74c:	mul	x0, x0, x27
 750:	str	xzr, [x20, #24]
 754:	str	xzr, [x20, #32]
 758:	str	xzr, [x20, #40]
 75c:	cbz	x0, 830 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x830>
 760:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 764:	movk	x1, #0x2aa, lsl #48
 768:	cmp	x0, x1
 76c:	b.hi	82c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x82c>  // b.pmore
 770:	mov	x0, x21
 774:	bl	0 <_Znwm>
 778:	mov	x23, x0
 77c:	str	x23, [x20, #24]
 780:	str	x23, [x20, #32]
 784:	add	x21, x23, x21
 788:	str	x21, [x20, #40]
 78c:	ldr	x26, [x19, #24]
 790:	ldr	x21, [x19, #32]
 794:	cmp	x26, x21
 798:	b.eq	7f0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x7f0>  // b.none
 79c:	mov	x24, x26
 7a0:	mov	x25, x23
 7a4:	mov	x1, x24
 7a8:	mov	x0, x25
 7ac:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 7b0:	add	x25, x25, #0x30
 7b4:	add	x24, x24, #0x30
 7b8:	cmp	x21, x24
 7bc:	b.ne	7a4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x7a4>  // b.any
 7c0:	sub	x0, x21, #0x30
 7c4:	sub	x0, x0, x26
 7c8:	lsr	x0, x0, #4
 7cc:	mov	x1, #0xaaab                	// #43691
 7d0:	movk	x1, #0xaaaa, lsl #16
 7d4:	movk	x1, #0xaaaa, lsl #32
 7d8:	movk	x1, #0xaaa, lsl #48
 7dc:	mul	x0, x0, x1
 7e0:	and	x0, x0, #0xfffffffffffffff
 7e4:	add	x0, x0, #0x1
 7e8:	add	x0, x0, x0, lsl #1
 7ec:	add	x23, x23, x0, lsl #4
 7f0:	str	x23, [x20, #32]
 7f4:	add	x19, x19, #0x30
 7f8:	add	x20, x20, #0x30
 7fc:	ldr	x0, [sp, #96]
 800:	cmp	x0, x19
 804:	b.eq	838 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x838>  // b.none
 808:	ldr	x0, [x19]
 80c:	str	x0, [x20]
 810:	ldr	w0, [x19, #16]
 814:	str	w0, [x20, #16]
 818:	cmp	w0, #0x40
 81c:	b.hi	730 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x730>  // b.pmore
 820:	ldr	x0, [x19, #8]
 824:	str	x0, [x20, #8]
 828:	b	73c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x73c>
 82c:	bl	0 <_ZSt17__throw_bad_allocv>
 830:	mov	x23, #0x0                   	// #0
 834:	b	77c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x77c>
 838:	ldr	x26, [x28, #8]
 83c:	ldr	x0, [sp, #112]
 840:	cmp	x0, x26
 844:	b.eq	958 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x958>  // b.none
 848:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 84c:	movk	x27, #0xaaab
 850:	b	924 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x924>
 854:	ldr	x0, [x22, #8]
 858:	str	x0, [x20, #8]
 85c:	ldr	x19, [x22, #32]
 860:	ldr	x0, [x22, #24]
 864:	sub	x19, x19, x0
 868:	asr	x0, x19, #4
 86c:	mul	x0, x0, x27
 870:	str	xzr, [x20, #24]
 874:	str	xzr, [x20, #32]
 878:	str	xzr, [x20, #40]
 87c:	cbz	x0, 950 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x950>
 880:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 884:	movk	x1, #0x2aa, lsl #48
 888:	cmp	x0, x1
 88c:	b.hi	94c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x94c>  // b.pmore
 890:	mov	x0, x19
 894:	bl	0 <_Znwm>
 898:	mov	x21, x0
 89c:	str	x21, [x20, #24]
 8a0:	str	x21, [x20, #32]
 8a4:	add	x19, x21, x19
 8a8:	str	x19, [x20, #40]
 8ac:	ldr	x25, [x22, #24]
 8b0:	ldr	x19, [x22, #32]
 8b4:	cmp	x25, x19
 8b8:	b.eq	910 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x910>  // b.none
 8bc:	mov	x23, x25
 8c0:	mov	x24, x21
 8c4:	mov	x1, x23
 8c8:	mov	x0, x24
 8cc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 8d0:	add	x24, x24, #0x30
 8d4:	add	x23, x23, #0x30
 8d8:	cmp	x19, x23
 8dc:	b.ne	8c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x8c4>  // b.any
 8e0:	sub	x0, x19, #0x30
 8e4:	sub	x0, x0, x25
 8e8:	lsr	x0, x0, #4
 8ec:	mov	x1, #0xaaab                	// #43691
 8f0:	movk	x1, #0xaaaa, lsl #16
 8f4:	movk	x1, #0xaaaa, lsl #32
 8f8:	movk	x1, #0xaaa, lsl #48
 8fc:	mul	x0, x0, x1
 900:	and	x0, x0, #0xfffffffffffffff
 904:	add	x0, x0, #0x1
 908:	add	x0, x0, x0, lsl #1
 90c:	add	x21, x21, x0, lsl #4
 910:	str	x21, [x20, #32]
 914:	add	x22, x22, #0x30
 918:	add	x20, x20, #0x30
 91c:	cmp	x26, x22
 920:	b.eq	958 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x958>  // b.none
 924:	ldr	x0, [x22]
 928:	str	x0, [x20]
 92c:	ldr	w0, [x22, #16]
 930:	str	w0, [x20, #16]
 934:	cmp	w0, #0x40
 938:	b.ls	854 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x854>  // b.plast
 93c:	add	x1, x22, #0x8
 940:	add	x0, x20, #0x8
 944:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 948:	b	85c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x85c>
 94c:	bl	0 <_ZSt17__throw_bad_allocv>
 950:	mov	x21, #0x0                   	// #0
 954:	b	89c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x89c>
 958:	ldr	x21, [x28]
 95c:	ldr	x23, [x28, #8]
 960:	cmp	x21, x23
 964:	b.ne	a08 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0xa08>  // b.any
 968:	ldr	x0, [x28]
 96c:	cbz	x0, 974 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x974>
 970:	bl	0 <_ZdlPv>
 974:	ldr	x1, [sp, #104]
 978:	str	x1, [x28]
 97c:	str	x20, [x28, #8]
 980:	ldr	x0, [sp, #120]
 984:	add	x0, x0, x0, lsl #1
 988:	add	x0, x1, x0, lsl #4
 98c:	str	x0, [x28, #16]
 990:	ldp	x19, x20, [sp, #16]
 994:	ldp	x21, x22, [sp, #32]
 998:	ldp	x23, x24, [sp, #48]
 99c:	ldp	x25, x26, [sp, #64]
 9a0:	ldp	x27, x28, [sp, #80]
 9a4:	b	568 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x568>
 9a8:	bl	0 <_ZdaPv>
 9ac:	add	x19, x19, #0x30
 9b0:	cmp	x22, x19
 9b4:	b.eq	9d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x9d8>  // b.none
 9b8:	add	x0, x19, #0x18
 9bc:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag>
 9c0:	ldr	w0, [x19, #16]
 9c4:	cmp	w0, #0x40
 9c8:	b.ls	9ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x9ac>  // b.plast
 9cc:	ldr	x0, [x19, #8]
 9d0:	cbnz	x0, 9a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x9a8>
 9d4:	b	9ac <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x9ac>
 9d8:	ldr	x0, [x21, #24]
 9dc:	cbz	x0, 9e4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x9e4>
 9e0:	bl	0 <_ZdlPv>
 9e4:	ldr	w0, [x21, #16]
 9e8:	cmp	w0, #0x40
 9ec:	b.ls	9fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x9fc>  // b.plast
 9f0:	ldr	x0, [x21, #8]
 9f4:	cbz	x0, 9fc <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x9fc>
 9f8:	bl	0 <_ZdaPv>
 9fc:	add	x21, x21, #0x30
 a00:	cmp	x23, x21
 a04:	b.eq	968 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x968>  // b.none
 a08:	ldr	x19, [x21, #24]
 a0c:	ldr	x22, [x21, #32]
 a10:	cmp	x19, x22
 a14:	b.ne	9b8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x9b8>  // b.any
 a18:	b	9d8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x9d8>
 a1c:	ldp	x19, x20, [sp, #16]
 a20:	ldp	x21, x22, [sp, #32]
 a24:	ldp	x25, x26, [sp, #64]
 a28:	ldp	x27, x28, [sp, #80]
 a2c:	b	568 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x568>
 a30:	ldp	x19, x20, [sp, #16]
 a34:	ldp	x21, x22, [sp, #32]
 a38:	ldp	x25, x26, [sp, #64]
 a3c:	ldp	x27, x28, [sp, #80]
 a40:	b	568 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EE15_M_range_insertIPKS1_EEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EET_SB_St20forward_iterator_tag+0x568>

Interpreter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x0
  18:	mov	x22, x1
  1c:	ldr	x0, [x0]
  20:	ldr	x2, [x0]
  24:	ldr	x2, [x2, #48]
  28:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  2c:	ldr	x1, [x1]
  30:	blr	x2
  34:	and	w0, w0, #0xff
  38:	cbnz	w0, 60 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x60>
  3c:	ldr	x0, [x19]
  40:	str	xzr, [x19]
  44:	orr	x0, x0, #0x1
  48:	str	x0, [x20]
  4c:	mov	x0, x20
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x29, x30, [sp], #80
  5c:	ret
  60:	ldr	x21, [x19]
  64:	str	xzr, [x19]
  68:	ldr	x0, [x21]
  6c:	ldr	x2, [x0, #48]
  70:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  74:	ldr	x1, [x1]
  78:	mov	x0, x21
  7c:	blr	x2
  80:	and	w0, w0, #0xff
  84:	cbz	w0, 124 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x124>
  88:	ldr	x19, [x22]
  8c:	ldr	x0, [x21]
  90:	add	x22, sp, #0x30
  94:	mov	x8, x22
  98:	ldr	x1, [x0, #24]
  9c:	mov	x0, x21
  a0:	blr	x1
  a4:	ldr	x0, [x19]
  a8:	ldr	x1, [sp, #48]
  ac:	add	x22, x22, #0x10
  b0:	cmp	x1, x22
  b4:	b.eq	144 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x144>  // b.none
  b8:	add	x2, x19, #0x10
  bc:	cmp	x0, x2
  c0:	b.eq	17c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x17c>  // b.none
  c4:	ldr	x2, [x19, #16]
  c8:	str	x1, [x19]
  cc:	ldr	x1, [sp, #56]
  d0:	str	x1, [x19, #8]
  d4:	ldr	x1, [sp, #64]
  d8:	str	x1, [x19, #16]
  dc:	cbz	x0, 190 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x190>
  e0:	str	x0, [sp, #48]
  e4:	str	x2, [sp, #64]
  e8:	str	xzr, [sp, #56]
  ec:	ldr	x0, [sp, #48]
  f0:	strb	wzr, [x0]
  f4:	ldr	x0, [sp, #48]
  f8:	add	x1, sp, #0x40
  fc:	cmp	x0, x1
 100:	b.eq	108 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x108>  // b.none
 104:	bl	0 <_ZdlPv>
 108:	mov	x0, #0x1                   	// #1
 10c:	str	x0, [x20]
 110:	ldr	x0, [x21]
 114:	ldr	x1, [x0, #8]
 118:	mov	x0, x21
 11c:	blr	x1
 120:	b	4c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x4c>
 124:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x329                 	// #809
 130:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 134:	add	x1, x1, #0x0
 138:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 13c:	add	x0, x0, #0x0
 140:	bl	0 <__assert_fail>
 144:	ldr	x2, [sp, #56]
 148:	cbz	x2, 15c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x15c>
 14c:	cmp	x2, #0x1
 150:	b.eq	170 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x170>  // b.none
 154:	add	x1, sp, #0x40
 158:	bl	0 <memcpy>
 15c:	ldr	x0, [sp, #56]
 160:	str	x0, [x19, #8]
 164:	ldr	x1, [x19]
 168:	strb	wzr, [x1, x0]
 16c:	b	e8 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0xe8>
 170:	ldrb	w1, [sp, #64]
 174:	strb	w1, [x0]
 178:	b	15c <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0x15c>
 17c:	str	x1, [x19]
 180:	ldr	x0, [sp, #56]
 184:	str	x0, [x19, #8]
 188:	ldr	x0, [sp, #64]
 18c:	str	x0, [x19, #16]
 190:	add	x0, sp, #0x40
 194:	str	x0, [sp, #48]
 198:	b	e8 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_+0xe8>

000000000000019c <LLVMLinkInInterpreter>:
 19c:	ret

00000000000001a0 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>:
 1a0:	stp	x29, x30, [sp, #-48]!
 1a4:	mov	x29, sp
 1a8:	stp	x19, x20, [sp, #16]
 1ac:	mov	x19, x0
 1b0:	ldr	x2, [x1]
 1b4:	str	xzr, [x1]
 1b8:	str	x2, [sp, #40]
 1bc:	add	x1, sp, #0x28
 1c0:	bl	0 <_ZN4llvm15ExecutionEngineC2ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 1c4:	ldr	x20, [sp, #40]
 1c8:	cbz	x20, 1e0 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x40>
 1cc:	mov	x0, x20
 1d0:	bl	0 <_ZN4llvm6ModuleD1Ev>
 1d4:	mov	x1, #0x2c8                 	// #712
 1d8:	mov	x0, x20
 1dc:	bl	0 <_ZdlPvm>
 1e0:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 1e4:	ldr	x0, [x0]
 1e8:	add	x0, x0, #0x10
 1ec:	str	x0, [x19]
 1f0:	mov	w0, #0x1                   	// #1
 1f4:	str	w0, [x19, #656]
 1f8:	str	xzr, [x19, #648]
 1fc:	str	xzr, [x19, #664]
 200:	str	xzr, [x19, #672]
 204:	str	xzr, [x19, #680]
 208:	str	xzr, [x19, #696]
 20c:	str	xzr, [x19, #704]
 210:	str	xzr, [x19, #712]
 214:	str	xzr, [x19, #720]
 218:	str	xzr, [x19, #728]
 21c:	str	xzr, [x19, #736]
 220:	str	xzr, [x19, #640]
 224:	mov	x0, x19
 228:	bl	0 <_ZN4llvm11Interpreter27initializeExternalFunctionsEv>
 22c:	mov	x0, x19
 230:	bl	0 <_ZN4llvm15ExecutionEngine11emitGlobalsEv>
 234:	mov	x0, #0x10                  	// #16
 238:	bl	0 <_Znwm>
 23c:	add	x1, x19, #0x58
 240:	str	x1, [x0]
 244:	strb	wzr, [x0, #8]
 248:	str	x0, [x19, #688]
 24c:	ldp	x19, x20, [sp, #16]
 250:	ldp	x29, x30, [sp], #48
 254:	ret

0000000000000258 <_ZN4llvm11Interpreter17runAtExitHandlersEv>:
 258:	stp	x29, x30, [sp, #-32]!
 25c:	mov	x29, sp
 260:	stp	x19, x20, [sp, #16]
 264:	mov	x19, x0
 268:	ldr	x0, [x0, #728]
 26c:	ldr	x1, [x19, #720]
 270:	cmp	x1, x0
 274:	b.eq	2b0 <_ZN4llvm11Interpreter17runAtExitHandlersEv+0x58>  // b.none
 278:	mov	x2, #0x0                   	// #0
 27c:	mov	x3, #0x0                   	// #0
 280:	ldur	x1, [x0, #-8]
 284:	mov	x0, x19
 288:	bl	0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
 28c:	ldr	x0, [x19, #728]
 290:	sub	x0, x0, #0x8
 294:	str	x0, [x19, #728]
 298:	mov	x0, x19
 29c:	bl	0 <_ZN4llvm11Interpreter3runEv>
 2a0:	ldr	x0, [x19, #728]
 2a4:	ldr	x1, [x19, #720]
 2a8:	cmp	x0, x1
 2ac:	b.ne	278 <_ZN4llvm11Interpreter17runAtExitHandlersEv+0x20>  // b.any
 2b0:	ldp	x19, x20, [sp, #16]
 2b4:	ldp	x29, x30, [sp], #32
 2b8:	ret

00000000000002bc <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>:
 2bc:	stp	x29, x30, [sp, #-64]!
 2c0:	mov	x29, sp
 2c4:	stp	x19, x20, [sp, #16]
 2c8:	stp	x21, x22, [sp, #32]
 2cc:	stp	x23, x24, [sp, #48]
 2d0:	cbz	x1, 3b4 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xf8>
 2d4:	mov	x20, x8
 2d8:	mov	x19, x0
 2dc:	mov	x4, x3
 2e0:	ldr	x0, [x1, #24]
 2e4:	cbz	x0, 3d4 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x118>
 2e8:	ldrb	w3, [x0, #8]
 2ec:	cmp	w3, #0xc
 2f0:	b.ne	3f4 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x138>  // b.any
 2f4:	ldr	w0, [x0, #12]
 2f8:	sub	w0, w0, #0x1
 2fc:	cmp	x0, x4
 300:	csel	x3, x0, x4, ls  // ls = plast
 304:	cmp	x3, x4
 308:	b.hi	414 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x158>  // b.pmore
 30c:	mov	x0, x19
 310:	bl	0 <_ZN4llvm11Interpreter12callFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE>
 314:	mov	x0, x19
 318:	bl	0 <_ZN4llvm11Interpreter3runEv>
 31c:	ldr	x1, [x19, #640]
 320:	mov	x0, x20
 324:	str	x1, [x0], #8
 328:	ldr	w1, [x19, #656]
 32c:	str	w1, [x0, #8]
 330:	cmp	w1, #0x40
 334:	b.hi	434 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x178>  // b.pmore
 338:	ldr	x0, [x19, #648]
 33c:	str	x0, [x20, #8]
 340:	ldr	x22, [x19, #672]
 344:	ldr	x0, [x19, #664]
 348:	sub	x22, x22, x0
 34c:	asr	x1, x22, #4
 350:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 354:	movk	x0, #0xaaab
 358:	mul	x1, x1, x0
 35c:	str	xzr, [x20, #24]
 360:	str	xzr, [x20, #32]
 364:	str	xzr, [x20, #40]
 368:	cbz	x1, 448 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x18c>
 36c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 370:	movk	x0, #0x2aa, lsl #48
 374:	cmp	x1, x0
 378:	b.hi	444 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x188>  // b.pmore
 37c:	mov	x0, x22
 380:	bl	0 <_Znwm>
 384:	mov	x21, x0
 388:	str	x21, [x20, #24]
 38c:	str	x21, [x20, #32]
 390:	add	x22, x21, x22
 394:	str	x22, [x20, #40]
 398:	ldr	x24, [x19, #664]
 39c:	ldr	x19, [x19, #672]
 3a0:	cmp	x24, x19
 3a4:	b.eq	4cc <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x210>  // b.none
 3a8:	mov	x22, x24
 3ac:	mov	x23, x21
 3b0:	b	478 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1bc>
 3b4:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 3b8:	add	x3, x3, #0x0
 3bc:	mov	w2, #0x52                  	// #82
 3c0:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 3c4:	add	x1, x1, #0x0
 3c8:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 3cc:	add	x0, x0, #0x0
 3d0:	bl	0 <__assert_fail>
 3d4:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 3d8:	add	x3, x3, #0x0
 3dc:	mov	w2, #0x69                  	// #105
 3e0:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 3e4:	add	x1, x1, #0x0
 3e8:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 3ec:	add	x0, x0, #0x0
 3f0:	bl	0 <__assert_fail>
 3f4:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 3f8:	add	x3, x3, #0x0
 3fc:	mov	w2, #0x108                 	// #264
 400:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 404:	add	x1, x1, #0x0
 408:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 40c:	add	x0, x0, #0x0
 410:	bl	0 <__assert_fail>
 414:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 418:	add	x3, x3, #0x0
 41c:	mov	w2, #0xbd                  	// #189
 420:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 424:	add	x1, x1, #0x0
 428:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 42c:	add	x0, x0, #0x0
 430:	bl	0 <__assert_fail>
 434:	add	x1, x19, #0x288
 438:	add	x0, x20, #0x8
 43c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 440:	b	340 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x84>
 444:	bl	0 <_ZSt17__throw_bad_allocv>
 448:	mov	x21, #0x0                   	// #0
 44c:	b	388 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0xcc>
 450:	add	x1, x22, #0x8
 454:	add	x0, x23, #0x8
 458:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 45c:	add	x1, x22, #0x18
 460:	add	x0, x23, #0x18
 464:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 468:	add	x23, x23, #0x30
 46c:	add	x22, x22, #0x30
 470:	cmp	x19, x22
 474:	b.eq	49c <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1e0>  // b.none
 478:	ldr	x0, [x22]
 47c:	str	x0, [x23]
 480:	ldr	w0, [x22, #16]
 484:	str	w0, [x23, #16]
 488:	cmp	w0, #0x40
 48c:	b.hi	450 <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x194>  // b.pmore
 490:	ldr	x0, [x22, #8]
 494:	str	x0, [x23, #8]
 498:	b	45c <_ZN4llvm11Interpreter11runFunctionEPNS_8FunctionENS_8ArrayRefINS_12GenericValueEEE+0x1a0>
 49c:	sub	x1, x19, #0x30
 4a0:	sub	x1, x1, x24
 4a4:	lsr	x1, x1, #4
 4a8:	mov	x19, #0xaaab                	// #43691
 4ac:	movk	x19, #0xaaaa, lsl #16
 4b0:	movk	x19, #0xaaaa, lsl #32
 4b4:	movk	x19, #0xaaa, lsl #48
 4b8:	mul	x1, x1, x19
 4bc:	and	x1, x1, #0xfffffffffffffff
 4c0:	add	x1, x1, #0x1
 4c4:	add	x1, x1, x1, lsl #1
 4c8:	add	x21, x21, x1, lsl #4
 4cc:	str	x21, [x20, #32]
 4d0:	mov	x0, x20
 4d4:	ldp	x19, x20, [sp, #16]
 4d8:	ldp	x21, x22, [sp, #32]
 4dc:	ldp	x23, x24, [sp, #48]
 4e0:	ldp	x29, x30, [sp], #64
 4e4:	ret

00000000000004e8 <_ZN4llvm11InterpreterD1Ev>:
 4e8:	stp	x29, x30, [sp, #-64]!
 4ec:	mov	x29, sp
 4f0:	stp	x19, x20, [sp, #16]
 4f4:	stp	x21, x22, [sp, #32]
 4f8:	mov	x19, x0
 4fc:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 500:	ldr	x0, [x0]
 504:	add	x0, x0, #0x10
 508:	str	x0, [x19]
 50c:	ldr	x0, [x19, #688]
 510:	cbz	x0, 51c <_ZN4llvm11InterpreterD1Ev+0x34>
 514:	mov	x1, #0x10                  	// #16
 518:	bl	0 <_ZdlPvm>
 51c:	ldr	x0, [x19, #720]
 520:	cbz	x0, 528 <_ZN4llvm11InterpreterD1Ev+0x40>
 524:	bl	0 <_ZdlPv>
 528:	ldr	x20, [x19, #696]
 52c:	ldr	x22, [x19, #704]
 530:	cmp	x20, x22
 534:	b.eq	5d8 <_ZN4llvm11InterpreterD1Ev+0xf0>  // b.none
 538:	str	x23, [sp, #48]
 53c:	b	594 <_ZN4llvm11InterpreterD1Ev+0xac>
 540:	bl	0 <_ZdaPv>
 544:	add	x21, x21, #0x30
 548:	cmp	x23, x21
 54c:	b.eq	570 <_ZN4llvm11InterpreterD1Ev+0x88>  // b.none
 550:	add	x0, x21, #0x18
 554:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 558:	ldr	w0, [x21, #16]
 55c:	cmp	w0, #0x40
 560:	b.ls	544 <_ZN4llvm11InterpreterD1Ev+0x5c>  // b.plast
 564:	ldr	x0, [x21, #8]
 568:	cbnz	x0, 540 <_ZN4llvm11InterpreterD1Ev+0x58>
 56c:	b	544 <_ZN4llvm11InterpreterD1Ev+0x5c>
 570:	ldr	x0, [x20, #80]
 574:	cbz	x0, 57c <_ZN4llvm11InterpreterD1Ev+0x94>
 578:	bl	0 <_ZdlPv>
 57c:	ldr	x1, [x20, #48]
 580:	add	x0, x20, #0x20
 584:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 588:	add	x20, x20, #0x80
 58c:	cmp	x22, x20
 590:	b.eq	5d4 <_ZN4llvm11InterpreterD1Ev+0xec>  // b.none
 594:	ldr	x21, [x20, #104]
 598:	ldr	x23, [x20, #112]
 59c:	cmp	x21, x23
 5a0:	b.eq	5b4 <_ZN4llvm11InterpreterD1Ev+0xcc>  // b.none
 5a4:	ldr	x0, [x21], #8
 5a8:	bl	0 <free>
 5ac:	cmp	x23, x21
 5b0:	b.ne	5a4 <_ZN4llvm11InterpreterD1Ev+0xbc>  // b.any
 5b4:	ldr	x0, [x20, #104]
 5b8:	cbz	x0, 5c0 <_ZN4llvm11InterpreterD1Ev+0xd8>
 5bc:	bl	0 <_ZdlPv>
 5c0:	ldr	x21, [x20, #80]
 5c4:	ldr	x23, [x20, #88]
 5c8:	cmp	x21, x23
 5cc:	b.ne	550 <_ZN4llvm11InterpreterD1Ev+0x68>  // b.any
 5d0:	b	570 <_ZN4llvm11InterpreterD1Ev+0x88>
 5d4:	ldr	x23, [sp, #48]
 5d8:	ldr	x0, [x19, #696]
 5dc:	cbz	x0, 5e4 <_ZN4llvm11InterpreterD1Ev+0xfc>
 5e0:	bl	0 <_ZdlPv>
 5e4:	ldr	x20, [x19, #664]
 5e8:	ldr	x21, [x19, #672]
 5ec:	cmp	x20, x21
 5f0:	b.ne	63c <_ZN4llvm11InterpreterD1Ev+0x154>  // b.any
 5f4:	ldr	x0, [x19, #664]
 5f8:	cbz	x0, 600 <_ZN4llvm11InterpreterD1Ev+0x118>
 5fc:	bl	0 <_ZdlPv>
 600:	ldr	w0, [x19, #656]
 604:	cmp	w0, #0x40
 608:	b.ls	618 <_ZN4llvm11InterpreterD1Ev+0x130>  // b.plast
 60c:	ldr	x0, [x19, #648]
 610:	cbz	x0, 618 <_ZN4llvm11InterpreterD1Ev+0x130>
 614:	bl	0 <_ZdaPv>
 618:	mov	x0, x19
 61c:	bl	0 <_ZN4llvm15ExecutionEngineD2Ev>
 620:	ldp	x19, x20, [sp, #16]
 624:	ldp	x21, x22, [sp, #32]
 628:	ldp	x29, x30, [sp], #64
 62c:	ret
 630:	add	x20, x20, #0x30
 634:	cmp	x21, x20
 638:	b.eq	5f4 <_ZN4llvm11InterpreterD1Ev+0x10c>  // b.none
 63c:	add	x0, x20, #0x18
 640:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 644:	ldr	w0, [x20, #16]
 648:	cmp	w0, #0x40
 64c:	b.ls	630 <_ZN4llvm11InterpreterD1Ev+0x148>  // b.plast
 650:	ldr	x0, [x20, #8]
 654:	cbz	x0, 630 <_ZN4llvm11InterpreterD1Ev+0x148>
 658:	bl	0 <_ZdaPv>
 65c:	b	630 <_ZN4llvm11InterpreterD1Ev+0x148>

0000000000000660 <_ZN4llvm11InterpreterD0Ev>:
 660:	stp	x29, x30, [sp, #-32]!
 664:	mov	x29, sp
 668:	str	x19, [sp, #16]
 66c:	mov	x19, x0
 670:	bl	4e8 <_ZN4llvm11InterpreterD1Ev>
 674:	mov	x1, #0x2e8                 	// #744
 678:	mov	x0, x19
 67c:	bl	0 <_ZdlPvm>
 680:	ldr	x19, [sp, #16]
 684:	ldp	x29, x30, [sp], #32
 688:	ret

000000000000068c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 68c:	stp	x29, x30, [sp, #-336]!
 690:	mov	x29, sp
 694:	stp	x19, x20, [sp, #16]
 698:	stp	x21, x22, [sp, #32]
 69c:	mov	x21, x0
 6a0:	mov	x19, x1
 6a4:	add	x8, sp, #0x70
 6a8:	ldr	x0, [x0]
 6ac:	bl	0 <_ZN4llvm6Module14materializeAllEv>
 6b0:	ldr	x1, [sp, #112]
 6b4:	ands	x0, x1, #0xfffffffffffffffe
 6b8:	cset	x1, ne  // ne = any
 6bc:	orr	x1, x1, x0
 6c0:	str	x1, [sp, #112]
 6c4:	ands	x20, x1, #0xfffffffffffffffe
 6c8:	b.ne	720 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>  // b.any
 6cc:	tbnz	w1, #0, d24 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x698>
 6d0:	ldr	x0, [x21]
 6d4:	str	xzr, [x21]
 6d8:	str	x0, [sp, #248]
 6dc:	mov	x0, #0x2e8                 	// #744
 6e0:	bl	0 <_Znwm>
 6e4:	mov	x19, x0
 6e8:	add	x1, sp, #0xf8
 6ec:	bl	1a0 <_ZN4llvm11InterpreterC1ESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 6f0:	ldr	x20, [sp, #248]
 6f4:	cbz	x20, 70c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>
 6f8:	mov	x0, x20
 6fc:	bl	0 <_ZN4llvm6ModuleD1Ev>
 700:	mov	x1, #0x2c8                 	// #712
 704:	mov	x0, x20
 708:	bl	0 <_ZdlPvm>
 70c:	mov	x0, x19
 710:	ldp	x19, x20, [sp, #16]
 714:	ldp	x21, x22, [sp, #32]
 718:	ldp	x29, x30, [sp], #336
 71c:	ret
 720:	add	x0, sp, #0x78
 724:	add	x1, sp, #0x88
 728:	str	x1, [sp, #120]
 72c:	str	xzr, [sp, #128]
 730:	strb	wzr, [sp, #136]
 734:	str	xzr, [sp, #112]
 738:	str	x0, [sp, #240]
 73c:	str	xzr, [sp, #232]
 740:	str	xzr, [sp, #256]
 744:	ldr	x0, [x20]
 748:	ldr	x2, [x0, #48]
 74c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 750:	ldr	x1, [x1]
 754:	mov	x0, x20
 758:	blr	x2
 75c:	and	w0, w0, #0xff
 760:	cbz	w0, c20 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x594>
 764:	stp	x23, x24, [sp, #48]
 768:	mov	x0, #0x1                   	// #1
 76c:	str	x0, [sp, #184]
 770:	ldr	x21, [x20, #8]
 774:	ldr	x23, [x20, #16]
 778:	cmp	x21, x23
 77c:	b.eq	8f4 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x268>  // b.none
 780:	stp	x25, x26, [sp, #64]
 784:	add	x25, sp, #0xf0
 788:	add	x24, sp, #0x118
 78c:	adrp	x22, 0 <_ZTVN4llvm9ErrorListE>
 790:	ldr	x22, [x22]
 794:	add	x22, x22, #0x10
 798:	ldr	x0, [sp, #184]
 79c:	orr	x0, x0, #0x1
 7a0:	str	x0, [sp, #296]
 7a4:	str	xzr, [sp, #184]
 7a8:	ldr	x0, [x21]
 7ac:	str	xzr, [x21]
 7b0:	str	x0, [sp, #280]
 7b4:	add	x8, sp, #0x120
 7b8:	mov	x1, x25
 7bc:	mov	x0, x24
 7c0:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 7c4:	ldr	x0, [sp, #296]
 7c8:	ands	x1, x0, #0xfffffffffffffffe
 7cc:	cset	x0, ne  // ne = any
 7d0:	orr	x0, x0, x1
 7d4:	str	x0, [sp, #296]
 7d8:	ands	x0, x0, #0xfffffffffffffffe
 7dc:	b.eq	8a4 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x218>  // b.none
 7e0:	ldr	x1, [sp, #288]
 7e4:	ands	x2, x1, #0xfffffffffffffffe
 7e8:	cset	x1, ne  // ne = any
 7ec:	orr	x1, x1, x2
 7f0:	str	x1, [sp, #288]
 7f4:	tst	x1, #0xfffffffffffffffe
 7f8:	b.eq	984 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2f8>  // b.none
 7fc:	stp	x27, x28, [sp, #80]
 800:	ldr	x1, [x0]
 804:	ldr	x2, [x1, #48]
 808:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 80c:	ldr	x1, [x1]
 810:	blr	x2
 814:	and	w0, w0, #0xff
 818:	cbz	w0, 9d4 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x348>
 81c:	ldr	x27, [sp, #296]
 820:	and	x27, x27, #0xfffffffffffffffe
 824:	ldr	x0, [sp, #288]
 828:	ands	x0, x0, #0xfffffffffffffffe
 82c:	b.eq	990 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x304>  // b.none
 830:	ldr	x1, [x0]
 834:	ldr	x2, [x1, #48]
 838:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 83c:	ldr	x1, [x1]
 840:	blr	x2
 844:	and	w0, w0, #0xff
 848:	cbz	w0, 990 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x304>
 84c:	ldr	x0, [sp, #288]
 850:	and	x0, x0, #0xfffffffffffffffe
 854:	str	x0, [sp, #104]
 858:	str	xzr, [sp, #288]
 85c:	ldr	x26, [x0, #8]
 860:	ldr	x28, [x0, #16]
 864:	cmp	x26, x28
 868:	b.eq	888 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1fc>  // b.none
 86c:	add	x27, x27, #0x8
 870:	mov	x1, x26
 874:	mov	x0, x27
 878:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 87c:	add	x26, x26, #0x8
 880:	cmp	x28, x26
 884:	b.ne	870 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e4>  // b.any
 888:	ldr	x2, [sp, #104]
 88c:	cbz	x2, 9c0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x334>
 890:	ldr	x0, [x2]
 894:	ldr	x1, [x0, #8]
 898:	mov	x0, x2
 89c:	blr	x1
 8a0:	b	9c0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x334>
 8a4:	ldr	x0, [sp, #288]
 8a8:	orr	x26, x0, #0x1
 8ac:	str	xzr, [sp, #288]
 8b0:	ldr	x0, [sp, #184]
 8b4:	cbnz	x0, bfc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x570>
 8b8:	orr	x0, x26, #0x1
 8bc:	str	x0, [sp, #184]
 8c0:	ldr	x0, [sp, #288]
 8c4:	cbnz	x0, c08 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57c>
 8c8:	ldr	x0, [sp, #280]
 8cc:	cbz	x0, 8dc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x250>
 8d0:	ldr	x1, [x0]
 8d4:	ldr	x1, [x1, #8]
 8d8:	blr	x1
 8dc:	ldr	x0, [sp, #296]
 8e0:	cbnz	x0, c14 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x588>
 8e4:	add	x21, x21, #0x8
 8e8:	cmp	x23, x21
 8ec:	b.ne	798 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10c>  // b.any
 8f0:	ldp	x25, x26, [sp, #64]
 8f4:	ldr	x0, [sp, #184]
 8f8:	orr	x0, x0, #0x1
 8fc:	str	x0, [sp, #264]
 900:	ldr	x0, [x20]
 904:	ldr	x1, [x0, #8]
 908:	mov	x0, x20
 90c:	blr	x1
 910:	ldp	x23, x24, [sp, #48]
 914:	ldr	x0, [sp, #264]
 918:	ands	x1, x0, #0xfffffffffffffffe
 91c:	cset	x0, ne  // ne = any
 920:	orr	x0, x0, x1
 924:	str	x0, [sp, #264]
 928:	tst	x0, #0xfffffffffffffffe
 92c:	b.ne	c4c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5c0>  // b.any
 930:	tbnz	w0, #0, ce8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x65c>
 934:	ldr	x0, [sp, #256]
 938:	cbnz	x0, cfc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x670>
 93c:	ldr	x0, [sp, #232]
 940:	cbnz	x0, d10 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x684>
 944:	cbz	x19, 954 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c8>
 948:	add	x1, sp, #0x78
 94c:	mov	x0, x19
 950:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 954:	ldr	x0, [sp, #120]
 958:	add	x1, sp, #0x88
 95c:	cmp	x0, x1
 960:	b.eq	968 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2dc>  // b.none
 964:	bl	0 <_ZdlPv>
 968:	ldr	x19, [sp, #112]
 96c:	cbz	x19, 70c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>
 970:	stp	x23, x24, [sp, #48]
 974:	stp	x25, x26, [sp, #64]
 978:	stp	x27, x28, [sp, #80]
 97c:	add	x0, sp, #0x70
 980:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 984:	orr	x26, x0, #0x1
 988:	str	xzr, [sp, #296]
 98c:	b	8b0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
 990:	ldr	x0, [sp, #288]
 994:	and	x0, x0, #0xfffffffffffffffe
 998:	str	x0, [sp, #328]
 99c:	str	xzr, [sp, #288]
 9a0:	add	x1, sp, #0x148
 9a4:	add	x0, x27, #0x8
 9a8:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 9ac:	ldr	x0, [sp, #328]
 9b0:	cbz	x0, 9c0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x334>
 9b4:	ldr	x1, [x0]
 9b8:	ldr	x1, [x1, #8]
 9bc:	blr	x1
 9c0:	ldr	x0, [sp, #296]
 9c4:	orr	x26, x0, #0x1
 9c8:	str	xzr, [sp, #296]
 9cc:	ldp	x27, x28, [sp, #80]
 9d0:	b	8b0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
 9d4:	ldr	x0, [sp, #288]
 9d8:	ands	x0, x0, #0xfffffffffffffffe
 9dc:	b.eq	b08 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x47c>  // b.none
 9e0:	ldr	x1, [x0]
 9e4:	ldr	x2, [x1, #48]
 9e8:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 9ec:	ldr	x1, [x1]
 9f0:	blr	x2
 9f4:	and	w0, w0, #0xff
 9f8:	cbz	w0, b08 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x47c>
 9fc:	ldr	x0, [sp, #288]
 a00:	and	x0, x0, #0xfffffffffffffffe
 a04:	mov	x1, x0
 a08:	ldr	x28, [x1, #8]!
 a0c:	ldr	x2, [sp, #296]
 a10:	and	x2, x2, #0xfffffffffffffffe
 a14:	str	x2, [sp, #320]
 a18:	str	xzr, [sp, #296]
 a1c:	ldr	x3, [x1, #8]
 a20:	ldr	x1, [x1, #16]
 a24:	cmp	x3, x1
 a28:	b.eq	af4 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x468>  // b.none
 a2c:	cmp	x28, x3
 a30:	b.eq	a84 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3f8>  // b.none
 a34:	ldur	x1, [x3, #-8]
 a38:	stur	xzr, [x3, #-8]
 a3c:	str	x1, [x3]
 a40:	ldr	x26, [x0, #16]
 a44:	add	x1, x26, #0x8
 a48:	str	x1, [x0, #16]
 a4c:	sub	x0, x26, #0x8
 a50:	sub	x0, x0, x28
 a54:	asr	x27, x0, #3
 a58:	cmp	x0, #0x0
 a5c:	b.gt	acc <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x440>
 a60:	ldr	x1, [sp, #320]
 a64:	str	xzr, [sp, #320]
 a68:	ldr	x0, [x28]
 a6c:	str	x1, [x28]
 a70:	cbz	x0, a98 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40c>
 a74:	ldr	x1, [x0]
 a78:	ldr	x1, [x1, #8]
 a7c:	blr	x1
 a80:	b	a98 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40c>
 a84:	str	xzr, [sp, #320]
 a88:	str	x2, [x3]
 a8c:	ldr	x1, [x0, #16]
 a90:	add	x1, x1, #0x8
 a94:	str	x1, [x0, #16]
 a98:	ldr	x0, [sp, #320]
 a9c:	cbz	x0, aac <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x420>
 aa0:	ldr	x1, [x0]
 aa4:	ldr	x1, [x1, #8]
 aa8:	blr	x1
 aac:	ldr	x0, [sp, #288]
 ab0:	orr	x26, x0, #0x1
 ab4:	str	xzr, [sp, #288]
 ab8:	ldp	x27, x28, [sp, #80]
 abc:	b	8b0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
 ac0:	sub	x27, x27, #0x1
 ac4:	cmp	x27, #0x0
 ac8:	b.le	a60 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3d4>
 acc:	sub	x26, x26, #0x8
 ad0:	ldur	x1, [x26, #-8]
 ad4:	stur	xzr, [x26, #-8]
 ad8:	ldr	x0, [x26]
 adc:	str	x1, [x26]
 ae0:	cbz	x0, ac0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x434>
 ae4:	ldr	x1, [x0]
 ae8:	ldr	x1, [x1, #8]
 aec:	blr	x1
 af0:	b	ac0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x434>
 af4:	add	x2, sp, #0x140
 af8:	mov	x1, x28
 afc:	add	x0, x0, #0x8
 b00:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 b04:	b	a98 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40c>
 b08:	ldr	x0, [sp, #296]
 b0c:	and	x0, x0, #0xfffffffffffffffe
 b10:	str	x0, [sp, #312]
 b14:	str	xzr, [sp, #296]
 b18:	ldr	x0, [sp, #288]
 b1c:	and	x0, x0, #0xfffffffffffffffe
 b20:	str	x0, [sp, #304]
 b24:	str	xzr, [sp, #288]
 b28:	mov	x0, #0x20                  	// #32
 b2c:	bl	0 <_Znwm>
 b30:	mov	x26, x0
 b34:	mov	x27, x0
 b38:	str	x22, [x27], #8
 b3c:	str	xzr, [x0, #8]
 b40:	str	xzr, [x27, #8]
 b44:	str	xzr, [x27, #16]
 b48:	ldr	x0, [sp, #312]
 b4c:	ldr	x1, [x0]
 b50:	ldr	x2, [x1, #48]
 b54:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 b58:	ldr	x1, [x1]
 b5c:	blr	x2
 b60:	and	w0, w0, #0xff
 b64:	cbnz	w0, bd4 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x548>
 b68:	ldr	x0, [sp, #304]
 b6c:	ldr	x1, [x0]
 b70:	ldr	x2, [x1, #48]
 b74:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 b78:	ldr	x1, [x1]
 b7c:	blr	x2
 b80:	and	w0, w0, #0xff
 b84:	cbnz	w0, bd4 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x548>
 b88:	add	x1, sp, #0x138
 b8c:	mov	x0, x27
 b90:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 b94:	add	x1, sp, #0x130
 b98:	mov	x0, x27
 b9c:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 ba0:	orr	x26, x26, #0x1
 ba4:	ldr	x0, [sp, #304]
 ba8:	cbz	x0, bb8 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x52c>
 bac:	ldr	x1, [x0]
 bb0:	ldr	x1, [x1, #8]
 bb4:	blr	x1
 bb8:	ldr	x0, [sp, #312]
 bbc:	cbz	x0, bf4 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x568>
 bc0:	ldr	x1, [x0]
 bc4:	ldr	x1, [x1, #8]
 bc8:	blr	x1
 bcc:	ldp	x27, x28, [sp, #80]
 bd0:	b	8b0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
 bd4:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 bd8:	add	x3, x3, #0x0
 bdc:	mov	w2, #0x181                 	// #385
 be0:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 be4:	add	x1, x1, #0x0
 be8:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 bec:	add	x0, x0, #0x0
 bf0:	bl	0 <__assert_fail>
 bf4:	ldp	x27, x28, [sp, #80]
 bf8:	b	8b0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
 bfc:	stp	x27, x28, [sp, #80]
 c00:	add	x0, sp, #0xb8
 c04:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 c08:	stp	x27, x28, [sp, #80]
 c0c:	add	x0, sp, #0x120
 c10:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 c14:	stp	x27, x28, [sp, #80]
 c18:	add	x0, sp, #0x128
 c1c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 c20:	str	x20, [sp, #272]
 c24:	add	x8, sp, #0x108
 c28:	add	x1, sp, #0xf0
 c2c:	add	x0, sp, #0x110
 c30:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 c34:	ldr	x0, [sp, #272]
 c38:	cbz	x0, 914 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x288>
 c3c:	ldr	x1, [x0]
 c40:	ldr	x1, [x1, #8]
 c44:	blr	x1
 c48:	b	914 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x288>
 c4c:	stp	x23, x24, [sp, #48]
 c50:	stp	x25, x26, [sp, #64]
 c54:	stp	x27, x28, [sp, #80]
 c58:	add	x1, sp, #0x98
 c5c:	add	x0, sp, #0xa8
 c60:	str	x0, [sp, #152]
 c64:	str	xzr, [sp, #160]
 c68:	strb	wzr, [sp, #168]
 c6c:	mov	w0, #0x1                   	// #1
 c70:	str	w0, [sp, #216]
 c74:	str	xzr, [sp, #208]
 c78:	str	xzr, [sp, #200]
 c7c:	str	xzr, [sp, #192]
 c80:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 c84:	ldr	x0, [x0]
 c88:	add	x0, x0, #0x10
 c8c:	str	x0, [sp, #184]
 c90:	str	x1, [sp, #224]
 c94:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 c98:	add	x1, x1, #0x0
 c9c:	add	x0, sp, #0xb8
 ca0:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 ca4:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 ca8:	add	x1, x1, #0x0
 cac:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 cb0:	add	x1, sp, #0x108
 cb4:	bl	0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 cb8:	ldr	x1, [sp, #208]
 cbc:	ldr	x0, [sp, #192]
 cc0:	cmp	x1, x0
 cc4:	b.eq	cd0 <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x644>  // b.none
 cc8:	add	x0, sp, #0xb8
 ccc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 cd0:	mov	w2, #0x2c9                 	// #713
 cd4:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS3_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRNS_13ErrorInfoBaseEE_JEEENS_5ErrorES2_ISE_S4_ISE_EEOT_DpOT0_>
 cd8:	add	x1, x1, #0x0
 cdc:	ldr	x0, [sp, #224]
 ce0:	ldr	x0, [x0]
 ce4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 ce8:	stp	x23, x24, [sp, #48]
 cec:	stp	x25, x26, [sp, #64]
 cf0:	stp	x27, x28, [sp, #80]
 cf4:	add	x0, sp, #0x108
 cf8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 cfc:	stp	x23, x24, [sp, #48]
 d00:	stp	x25, x26, [sp, #64]
 d04:	stp	x27, x28, [sp, #80]
 d08:	add	x0, sp, #0x100
 d0c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 d10:	stp	x23, x24, [sp, #48]
 d14:	stp	x25, x26, [sp, #64]
 d18:	stp	x27, x28, [sp, #80]
 d1c:	add	x0, sp, #0xe8
 d20:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 d24:	stp	x23, x24, [sp, #48]
 d28:	stp	x25, x26, [sp, #64]
 d2c:	stp	x27, x28, [sp, #80]
 d30:	add	x0, sp, #0x70
 d34:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000d38 <_GLOBAL__sub_I_Interpreter.cpp>:
 d38:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine10InterpCtorB5cxx11E>
 d3c:	ldr	x0, [x0]
 d40:	adrp	x1, 68c <_ZN4llvm11Interpreter6createESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 d44:	ldr	x1, [x1]
 d48:	str	x1, [x0]
 d4c:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine21generateCodeForModuleEPNS_6ModuleE:

0000000000000000 <_ZN4llvm15ExecutionEngine21generateCodeForModuleEPNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine14finalizeObjectEv:

0000000000000000 <_ZN4llvm15ExecutionEngine14finalizeObjectEv>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE:

0000000000000000 <_ZN4llvm15ExecutionEngine26getPointerToFunctionOrStubEPNS_8FunctionE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0]
   c:	ldr	x2, [x2, #128]
  10:	blr	x2
  14:	ldp	x29, x30, [sp], #16
  18:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine21getGlobalValueAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm15ExecutionEngine21getGlobalValueAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine18getFunctionAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm15ExecutionEngine18getFunctionAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine24RegisterJITEventListenerEPNS_16JITEventListenerE:

0000000000000000 <_ZN4llvm15ExecutionEngine24RegisterJITEventListenerEPNS_16JITEventListenerE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine26UnregisterJITEventListenerEPNS_16JITEventListenerE:

0000000000000000 <_ZN4llvm15ExecutionEngine26UnregisterJITEventListenerEPNS_16JITEventListenerE>:
   0:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine16getTargetMachineEv:

0000000000000000 <_ZN4llvm15ExecutionEngine16getTargetMachineEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm11Interpreter25getPointerToNamedFunctionENS_9StringRefEb:

0000000000000000 <_ZN4llvm11Interpreter25getPointerToNamedFunctionENS_9StringRefEb>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm11Interpreter20getPointerToFunctionEPNS_8FunctionE:

0000000000000000 <_ZN4llvm11Interpreter20getPointerToFunctionEPNS_8FunctionE>:
   0:	mov	x0, x1
   4:	ret

Disassembly of section .text._ZN4llvm15ExecutionEngine21setProcessAllSectionsEb:

0000000000000000 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w2, #0x1af                 	// #431
   c:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>
  10:	add	x1, x1, #0x0
  14:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine21setProcessAllSectionsEb>
  18:	add	x0, x0, #0x0
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE:

0000000000000000 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w2, #0x1a0                 	// #416
   c:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>
  10:	add	x1, x1, #0x0
  14:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine14setObjectCacheEPNS_11ObjectCacheE>
  18:	add	x0, x0, #0x0
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm:

0000000000000000 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w2, #0xfa                  	// #250
   c:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>
  10:	add	x1, x1, #0x0
  14:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine17mapSectionAddressEPKvm>
  18:	add	x0, x0, #0x0
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15ExecutionEngine23getOrEmitGlobalVariableEPKNS_14GlobalVariableE:

0000000000000000 <_ZN4llvm15ExecutionEngine23getOrEmitGlobalVariableEPKNS_14GlobalVariableE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZN4llvm15ExecutionEngine18getPointerToGlobalEPKNS_11GlobalValueE>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	w0, [x0, #540]
  18:	ldr	w1, [x19, #536]
  1c:	cmp	w1, w0
  20:	b.cs	64 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x64>  // b.hs, b.nlast
  24:	ldr	w2, [x19, #536]
  28:	ldr	x1, [x19, #528]
  2c:	ldr	x3, [x20]
  30:	str	xzr, [x20]
  34:	str	x3, [x1, x2, lsl #3]
  38:	ldr	w1, [x19, #536]
  3c:	mov	w2, w1
  40:	add	x2, x2, #0x1
  44:	ldr	w0, [x19, #540]
  48:	cmp	x2, x0
  4c:	b.hi	198 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x198>  // b.pmore
  50:	add	w1, w1, #0x1
  54:	str	w1, [x19, #536]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #96
  60:	ret
  64:	stp	x21, x22, [sp, #32]
  68:	stp	x23, x24, [sp, #48]
  6c:	mov	w0, w0
  70:	add	x0, x0, #0x2
  74:	orr	x0, x0, x0, lsr #1
  78:	orr	x0, x0, x0, lsr #2
  7c:	orr	x0, x0, x0, lsr #4
  80:	orr	x0, x0, x0, lsr #8
  84:	orr	x1, x0, x0, lsr #16
  88:	orr	x0, x1, x0, lsr #32
  8c:	add	x0, x0, #0x1
  90:	str	x0, [sp, #80]
  94:	mov	x1, #0xffffffff            	// #4294967295
  98:	str	x1, [sp, #88]
  9c:	cmp	x0, x1
  a0:	add	x0, sp, #0x50
  a4:	add	x1, sp, #0x58
  a8:	csel	x0, x0, x1, ls  // ls = plast
  ac:	ldr	x24, [x0]
  b0:	str	x24, [sp, #80]
  b4:	lsl	x21, x24, #3
  b8:	mov	x0, x21
  bc:	bl	0 <malloc>
  c0:	mov	x23, x0
  c4:	cbz	x0, 114 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x114>
  c8:	ldr	x1, [x19, #528]
  cc:	ldr	w3, [x19, #536]
  d0:	add	x3, x1, x3, lsl #3
  d4:	cmp	x1, x3
  d8:	b.eq	168 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x168>  // b.none
  dc:	stp	x25, x26, [sp, #64]
  e0:	mov	x2, x23
  e4:	ldr	x0, [x1]
  e8:	str	xzr, [x1], #8
  ec:	str	x0, [x2], #8
  f0:	cmp	x3, x1
  f4:	b.ne	e4 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xe4>  // b.any
  f8:	ldr	x25, [x19, #528]
  fc:	ldr	w21, [x19, #536]
 100:	add	x21, x25, x21, lsl #3
 104:	cmp	x25, x21
 108:	b.eq	190 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x190>  // b.none
 10c:	mov	x26, #0x2c8                 	// #712
 110:	b	144 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x144>
 114:	cbnz	x21, 128 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x128>
 118:	mov	x0, #0x1                   	// #1
 11c:	bl	0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 120:	mov	x23, x0
 124:	b	c8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xc8>
 128:	mov	w1, #0x1                   	// #1
 12c:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 130:	add	x0, x0, #0x0
 134:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 138:	b	c8 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0xc8>
 13c:	cmp	x25, x21
 140:	b.eq	164 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x164>  // b.none
 144:	ldr	x22, [x21, #-8]!
 148:	cbz	x22, 13c <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x13c>
 14c:	mov	x0, x22
 150:	bl	0 <_ZN4llvm6ModuleD1Ev>
 154:	mov	x1, x26
 158:	mov	x0, x22
 15c:	bl	0 <_ZdlPvm>
 160:	b	13c <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x13c>
 164:	ldp	x25, x26, [sp, #64]
 168:	ldr	x0, [x19, #528]
 16c:	add	x1, x19, #0x220
 170:	cmp	x0, x1
 174:	b.eq	17c <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x17c>  // b.none
 178:	bl	0 <free>
 17c:	str	x23, [x19, #528]
 180:	str	w24, [x19, #540]
 184:	ldp	x21, x22, [sp, #32]
 188:	ldp	x23, x24, [sp, #48]
 18c:	b	24 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x24>
 190:	ldp	x25, x26, [sp, #64]
 194:	b	168 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE+0x168>
 198:	stp	x21, x22, [sp, #32]
 19c:	stp	x23, x24, [sp, #48]
 1a0:	stp	x25, x26, [sp, #64]
 1a4:	adrp	x3, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 1a8:	add	x3, x3, #0x0
 1ac:	mov	w2, #0x43                  	// #67
 1b0:	adrp	x1, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 1b4:	add	x1, x1, #0x0
 1b8:	adrp	x0, 0 <_ZN4llvm15ExecutionEngine9addModuleESt10unique_ptrINS_6ModuleESt14default_deleteIS2_EE>
 1bc:	add	x0, x0, #0x0
 1c0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x1]
  14:	ands	x0, x0, #0xfffffffffffffffe
  18:	b.eq	3c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x3c>  // b.none
  1c:	ldr	x1, [x0]
  20:	ldr	x2, [x1, #16]
  24:	mov	x1, x19
  28:	blr	x2
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	ldr	x1, [x19, #24]
  40:	ldr	x0, [x19, #16]
  44:	sub	x0, x0, x1
  48:	cmp	x0, #0x6
  4c:	b.ls	78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x78>  // b.plast
  50:	adrp	x0, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	ldr	w2, [x0]
  5c:	str	w2, [x1]
  60:	ldur	w0, [x0, #3]
  64:	stur	w0, [x1, #3]
  68:	ldr	x0, [x19, #24]
  6c:	add	x0, x0, #0x7
  70:	str	x0, [x19, #24]
  74:	b	2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x2c>
  78:	mov	x2, #0x7                   	// #7
  7c:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  80:	add	x1, x1, #0x0
  84:	mov	x0, x19
  88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  8c:	b	2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x2c>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	ldr	x19, [x0]
  18:	ldr	x20, [x0, #8]
  1c:	cmp	x19, x20
  20:	b.ne	50 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x50>  // b.any
  24:	ldr	x0, [x21]
  28:	cbz	x0, 30 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x30>
  2c:	bl	0 <_ZdlPv>
  30:	ldp	x19, x20, [sp, #16]
  34:	ldr	x21, [sp, #32]
  38:	ldp	x29, x30, [sp], #48
  3c:	ret
  40:	bl	0 <_ZdaPv>
  44:	add	x19, x19, #0x30
  48:	cmp	x20, x19
  4c:	b.eq	24 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x24>  // b.none
  50:	add	x0, x19, #0x18
  54:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev>
  58:	ldr	w1, [x19, #16]
  5c:	cmp	w1, #0x40
  60:	b.ls	44 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x44>  // b.plast
  64:	ldr	x0, [x19, #8]
  68:	cbnz	x0, 40 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x40>
  6c:	b	44 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EED1Ev+0x44>

Disassembly of section .text._ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC2ERKS3_:

0000000000000000 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x20, x0
  18:	mov	x22, x1
  1c:	ldr	x19, [x1, #8]
  20:	ldr	x0, [x1]
  24:	sub	x19, x19, x0
  28:	asr	x0, x19, #4
  2c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  30:	movk	x1, #0xaaab
  34:	mul	x0, x0, x1
  38:	str	xzr, [x20]
  3c:	str	xzr, [x20, #8]
  40:	str	xzr, [x20, #16]
  44:	cbz	x0, 94 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x94>
  48:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4c:	movk	x1, #0x2aa, lsl #48
  50:	cmp	x0, x1
  54:	b.hi	90 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x90>  // b.pmore
  58:	mov	x0, x19
  5c:	bl	0 <_Znwm>
  60:	mov	x21, x0
  64:	str	x21, [x20]
  68:	str	x21, [x20, #8]
  6c:	add	x19, x21, x19
  70:	str	x19, [x20, #16]
  74:	ldr	x24, [x22]
  78:	ldr	x19, [x22, #8]
  7c:	cmp	x24, x19
  80:	b.eq	118 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x118>  // b.none
  84:	mov	x22, x24
  88:	mov	x23, x21
  8c:	b	c4 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0xc4>
  90:	bl	0 <_ZSt17__throw_bad_allocv>
  94:	mov	x21, #0x0                   	// #0
  98:	b	64 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x64>
  9c:	add	x1, x22, #0x8
  a0:	add	x0, x23, #0x8
  a4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
  a8:	add	x1, x22, #0x18
  ac:	add	x0, x23, #0x18
  b0:	bl	0 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_>
  b4:	add	x23, x23, #0x30
  b8:	add	x22, x22, #0x30
  bc:	cmp	x19, x22
  c0:	b.eq	e8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0xe8>  // b.none
  c4:	ldr	x0, [x22]
  c8:	str	x0, [x23]
  cc:	ldr	w0, [x22, #16]
  d0:	str	w0, [x23, #16]
  d4:	cmp	w0, #0x40
  d8:	b.hi	9c <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0x9c>  // b.pmore
  dc:	ldr	x0, [x22, #8]
  e0:	str	x0, [x23, #8]
  e4:	b	a8 <_ZNSt6vectorIN4llvm12GenericValueESaIS1_EEC1ERKS3_+0xa8>
  e8:	sub	x1, x19, #0x30
  ec:	sub	x1, x1, x24
  f0:	lsr	x1, x1, #4
  f4:	mov	x19, #0xaaab                	// #43691
  f8:	movk	x19, #0xaaaa, lsl #16
  fc:	movk	x19, #0xaaaa, lsl #32
 100:	movk	x19, #0xaaa, lsl #48
 104:	mul	x1, x1, x19
 108:	and	x1, x1, #0xfffffffffffffff
 10c:	add	x1, x1, #0x1
 110:	add	x1, x1, x1, lsl #1
 114:	add	x21, x21, x1, lsl #4
 118:	str	x21, [x20, #8]
 11c:	ldp	x19, x20, [sp, #16]
 120:	ldp	x21, x22, [sp, #32]
 124:	ldp	x23, x24, [sp, #48]
 128:	ldp	x29, x30, [sp], #64
 12c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	str	x23, [sp, #48]
  10:	mov	x23, x0
  14:	mov	x21, x1
  18:	cbz	x1, b0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0xb0>
  1c:	stp	x19, x20, [sp, #16]
  20:	b	84 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x84>
  24:	bl	0 <_ZdaPv>
  28:	add	x19, x19, #0x30
  2c:	cmp	x22, x19
  30:	b.eq	54 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x54>  // b.none
  34:	add	x0, x19, #0x18
  38:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  3c:	ldr	w1, [x19, #16]
  40:	cmp	w1, #0x40
  44:	b.ls	28 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x28>  // b.plast
  48:	ldr	x0, [x19, #8]
  4c:	cbnz	x0, 24 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x24>
  50:	b	28 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x28>
  54:	ldr	x0, [x20, #64]
  58:	cbz	x0, 60 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x60>
  5c:	bl	0 <_ZdlPv>
  60:	ldr	w1, [x20, #56]
  64:	cmp	w1, #0x40
  68:	b.ls	78 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x78>  // b.plast
  6c:	ldr	x0, [x20, #48]
  70:	cbz	x0, 78 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x78>
  74:	bl	0 <_ZdaPv>
  78:	mov	x0, x20
  7c:	bl	0 <_ZdlPv>
  80:	cbz	x21, ac <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0xac>
  84:	ldr	x1, [x21, #24]
  88:	mov	x0, x23
  8c:	bl	0 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  90:	mov	x20, x21
  94:	ldr	x21, [x21, #16]
  98:	ldr	x19, [x20, #64]
  9c:	ldr	x22, [x20, #72]
  a0:	cmp	x19, x22
  a4:	b.ne	34 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x34>  // b.any
  a8:	b	54 <_ZNSt8_Rb_treeIPN4llvm5ValueESt4pairIKS2_NS0_12GenericValueEESt10_Select1stIS6_ESt4lessIS2_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x54>
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x21, x22, [sp, #32]
  b4:	ldr	x23, [sp, #48]
  b8:	ldp	x29, x30, [sp], #64
  bc:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x24, x0
  20:	mov	x19, x2
  24:	ldr	x21, [x0, #8]
  28:	ldr	x25, [x0]
  2c:	sub	x0, x21, x25
  30:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  34:	cmp	x2, x0, asr #3
  38:	b.eq	9c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x9c>  // b.none
  3c:	mov	x22, x1
  40:	mov	x27, x1
  44:	asr	x1, x0, #3
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	150 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x150>  // b.hs, b.nlast
  58:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
  5c:	cmp	x0, x26
  60:	csel	x26, x0, x26, ls  // ls = plast
  64:	sub	x20, x22, x25
  68:	mov	x23, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>
  70:	lsl	x0, x26, #3
  74:	bl	0 <_Znwm>
  78:	mov	x23, x0
  7c:	ldr	x0, [x19]
  80:	str	xzr, [x19]
  84:	str	x0, [x23, x20]
  88:	cmp	x22, x25
  8c:	b.eq	148 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x148>  // b.none
  90:	mov	x20, x23
  94:	mov	x19, x25
  98:	b	b8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>
  9c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <_ZSt20__throw_length_errorPKc>
  a8:	add	x19, x19, #0x8
  ac:	add	x20, x20, #0x8
  b0:	cmp	x27, x19
  b4:	b.eq	dc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>  // b.none
  b8:	ldr	x0, [x19]
  bc:	str	xzr, [x19]
  c0:	str	x0, [x20]
  c4:	ldr	x0, [x19]
  c8:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  cc:	ldr	x1, [x0]
  d0:	ldr	x1, [x1, #8]
  d4:	blr	x1
  d8:	b	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  dc:	sub	x19, x22, x25
  e0:	add	x19, x23, x19
  e4:	add	x19, x19, #0x8
  e8:	cmp	x22, x21
  ec:	b.eq	110 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x110>  // b.none
  f0:	mov	x2, x22
  f4:	mov	x0, x19
  f8:	ldr	x1, [x2], #8
  fc:	str	x1, [x0], #8
 100:	cmp	x2, x21
 104:	b.ne	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.any
 108:	sub	x21, x21, x22
 10c:	add	x19, x19, x21
 110:	cbz	x25, 11c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x11c>
 114:	mov	x0, x25
 118:	bl	0 <_ZdlPv>
 11c:	str	x23, [x24]
 120:	str	x19, [x24, #8]
 124:	add	x23, x23, x26, lsl #3
 128:	str	x23, [x24, #16]
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x21, x22, [sp, #32]
 134:	ldp	x23, x24, [sp, #48]
 138:	ldp	x25, x26, [sp, #64]
 13c:	ldr	x27, [sp, #80]
 140:	ldp	x29, x30, [sp], #96
 144:	ret
 148:	mov	x19, x23
 14c:	b	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>
 150:	sub	x20, x22, x25
 154:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
 158:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	30 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x30>  // b.none
  14:	ldr	x3, [x2]
  18:	str	xzr, [x2]
  1c:	str	x3, [x1]
  20:	ldr	x1, [x0, #8]
  24:	add	x1, x1, #0x8
  28:	str	x1, [x0, #8]
  2c:	ret
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
