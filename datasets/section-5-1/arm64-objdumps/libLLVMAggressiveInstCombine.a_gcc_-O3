In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMAggressiveInstCombine.a_gcc_-O3:

AggressiveInstCombine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x20, x0
      10:	bl	0 <_ZN4llvm38initializeDominatorTreeWrapperPassPassERNS_12PassRegistryE>
      14:	mov	x0, x20
      18:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
      1c:	mov	x0, #0x50                  	// #80
      20:	bl	0 <_Znwm>
      24:	mov	x19, x0
      28:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      2c:	mov	x4, x19
      30:	add	x0, x1, #0x0
      34:	mov	x5, #0x16                  	// #22
      38:	mov	x3, #0x21                  	// #33
      3c:	adrp	x2, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      40:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      44:	add	x2, x2, #0x0
      48:	add	x1, x1, #0x0
      4c:	stp	x0, x3, [x19]
      50:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      54:	add	x3, x3, #0x0
      58:	stp	x2, x5, [x19, #16]
      5c:	mov	x0, x20
      60:	mov	w2, #0x1                   	// #1
      64:	str	x1, [x19, #32]
      68:	mov	x1, x19
      6c:	strh	wzr, [x19, #40]
      70:	strb	wzr, [x19, #42]
      74:	stp	xzr, xzr, [x4, #48]!
      78:	str	xzr, [x4, #16]
      7c:	str	x3, [x19, #72]
      80:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
      84:	mov	x0, x19
      88:	ldp	x19, x20, [sp, #16]
      8c:	ldp	x29, x30, [sp], #32
      90:	ret
      94:	nop

0000000000000098 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassD1Ev>:
      98:	adrp	x1, 0 <_ZTVN4llvm12FunctionPassE>
      9c:	ldr	x1, [x1]
      a0:	add	x1, x1, #0x10
      a4:	str	x1, [x0]
      a8:	b	0 <_ZN4llvm4PassD2Ev>
      ac:	nop

00000000000000b0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassD0Ev>:
      b0:	stp	x29, x30, [sp, #-32]!
      b4:	adrp	x1, 0 <_ZTVN4llvm12FunctionPassE>
      b8:	mov	x29, sp
      bc:	ldr	x1, [x1]
      c0:	str	x19, [sp, #16]
      c4:	mov	x19, x0
      c8:	add	x1, x1, #0x10
      cc:	str	x1, [x0]
      d0:	bl	0 <_ZN4llvm4PassD2Ev>
      d4:	mov	x0, x19
      d8:	mov	x1, #0x20                  	// #32
      dc:	ldr	x19, [sp, #16]
      e0:	ldp	x29, x30, [sp], #32
      e4:	b	0 <_ZdlPvm>

00000000000000e8 <_ZN4llvm3isaINS_11InstructionEPKNS_5ValueEEEbRKT0_.isra.0.part.0>:
      e8:	stp	x29, x30, [sp, #-16]!
      ec:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      f0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      f4:	mov	x29, sp
      f8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      fc:	add	x3, x3, #0x0
     100:	add	x1, x1, #0x0
     104:	add	x0, x0, #0x0
     108:	mov	w2, #0x69                  	// #105
     10c:	bl	0 <__assert_fail>

0000000000000110 <_ZN4llvm3isaINS_8ConstantEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
     110:	stp	x29, x30, [sp, #-16]!
     114:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     118:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     11c:	mov	x29, sp
     120:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     124:	add	x3, x3, #0x0
     128:	add	x1, x1, #0x0
     12c:	add	x0, x0, #0x0
     130:	mov	w2, #0x69                  	// #105
     134:	bl	0 <__assert_fail>

0000000000000138 <_ZN4llvm3isaINS_11ConstantIntEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
     138:	stp	x29, x30, [sp, #-16]!
     13c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     140:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     144:	mov	x29, sp
     148:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     14c:	add	x3, x3, #0x0
     150:	add	x1, x1, #0x0
     154:	add	x0, x0, #0x0
     158:	mov	w2, #0x69                  	// #105
     15c:	bl	0 <__assert_fail>

0000000000000160 <_ZN4llvm13isa_impl_wrapINS_12ConstantExprEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>:
     160:	stp	x29, x30, [sp, #-16]!
     164:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     168:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     16c:	mov	x29, sp
     170:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     174:	add	x3, x3, #0x0
     178:	add	x1, x1, #0x0
     17c:	add	x0, x0, #0x0
     180:	mov	w2, #0x69                  	// #105
     184:	bl	0 <__assert_fail>

0000000000000188 <_ZN4llvm13isa_impl_wrapINS_10VectorTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>:
     188:	stp	x29, x30, [sp, #-16]!
     18c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     190:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     194:	mov	x29, sp
     198:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     19c:	add	x3, x3, #0x0
     1a0:	add	x1, x1, #0x0
     1a4:	add	x0, x0, #0x0
     1a8:	mov	w2, #0x69                  	// #105
     1ac:	bl	0 <__assert_fail>

00000000000001b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>:
     1b0:	stp	x29, x30, [sp, #-16]!
     1b4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1b8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1bc:	mov	x29, sp
     1c0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1c4:	add	x3, x3, #0x0
     1c8:	add	x1, x1, #0x0
     1cc:	add	x0, x0, #0x0
     1d0:	mov	w2, #0x69                  	// #105
     1d4:	bl	0 <__assert_fail>

00000000000001d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>:
     1d8:	stp	x29, x30, [sp, #-16]!
     1dc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1e0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1e4:	mov	x29, sp
     1e8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1ec:	add	x3, x3, #0x0
     1f0:	add	x1, x1, #0x0
     1f4:	add	x0, x0, #0x0
     1f8:	mov	w2, #0x69                  	// #105
     1fc:	bl	0 <__assert_fail>

0000000000000200 <_ZN4llvm3isaINS_11ConstantIntEPNS_8ConstantEEEbRKT0_.isra.0.part.0>:
     200:	stp	x29, x30, [sp, #-16]!
     204:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     208:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     20c:	mov	x29, sp
     210:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     214:	add	x3, x3, #0x0
     218:	add	x1, x1, #0x0
     21c:	add	x0, x0, #0x0
     220:	mov	w2, #0x69                  	// #105
     224:	bl	0 <__assert_fail>

0000000000000228 <_ZN4llvm3isaINS_12ConstantExprEPNS_8ConstantEEEbRKT0_.isra.0.part.0>:
     228:	stp	x29, x30, [sp, #-16]!
     22c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     230:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     234:	mov	x29, sp
     238:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     23c:	add	x3, x3, #0x0
     240:	add	x1, x1, #0x0
     244:	add	x0, x0, #0x0
     248:	mov	w2, #0x69                  	// #105
     24c:	bl	0 <__assert_fail>

0000000000000250 <_ZN4llvm3isaINS_10BasicBlockEPS1_EEbRKT0_.isra.0.part.0>:
     250:	stp	x29, x30, [sp, #-16]!
     254:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     258:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     25c:	mov	x29, sp
     260:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     264:	add	x3, x3, #0x0
     268:	add	x1, x1, #0x0
     26c:	add	x0, x0, #0x0
     270:	mov	w2, #0x69                  	// #105
     274:	bl	0 <__assert_fail>

0000000000000278 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     278:	stp	x29, x30, [sp, #-48]!
     27c:	mov	x0, x1
     280:	mov	x29, sp
     284:	stp	x19, x20, [sp, #16]
     288:	adrp	x20, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     28c:	mov	x19, x1
     290:	str	x21, [sp, #32]
     294:	bl	0 <_ZN4llvm13AnalysisUsage15setPreservesCFGEv>
     298:	ldr	x1, [x20]
     29c:	mov	x0, x19
     2a0:	add	x21, x19, #0x70
     2a4:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     2a8:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass2IDE>
     2ac:	mov	x0, x19
     2b0:	ldr	x1, [x1]
     2b4:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     2b8:	ldp	w1, w0, [x19, #120]
     2bc:	cmp	w1, w0
     2c0:	b.cs	398 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x120>  // b.hs, b.nlast
     2c4:	ldr	x2, [x19, #112]
     2c8:	adrp	x0, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     2cc:	ldr	x0, [x0]
     2d0:	str	x0, [x2, w1, uxtw #3]
     2d4:	ldp	w0, w2, [x19, #120]
     2d8:	mov	w1, w0
     2dc:	add	x1, x1, #0x1
     2e0:	cmp	x1, w2, uxtw
     2e4:	b.hi	408 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x190>  // b.pmore
     2e8:	add	w0, w0, #0x1
     2ec:	str	w0, [x19, #120]
     2f0:	cmp	w2, w0
     2f4:	b.ls	3b4 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x13c>  // b.plast
     2f8:	ldr	x2, [x19, #112]
     2fc:	adrp	x1, 0 <_ZN4llvm18BasicAAWrapperPass2IDE>
     300:	ldr	x1, [x1]
     304:	str	x1, [x2, w0, uxtw #3]
     308:	ldp	w0, w2, [x19, #120]
     30c:	mov	w1, w0
     310:	add	x1, x1, #0x1
     314:	cmp	x1, w2, uxtw
     318:	b.hi	408 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x190>  // b.pmore
     31c:	add	w0, w0, #0x1
     320:	str	w0, [x19, #120]
     324:	cmp	w2, w0
     328:	b.ls	3ec <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x174>  // b.plast
     32c:	ldr	x1, [x19, #112]
     330:	ldr	x20, [x20]
     334:	str	x20, [x1, w0, uxtw #3]
     338:	ldp	w0, w2, [x19, #120]
     33c:	mov	w1, w0
     340:	add	x1, x1, #0x1
     344:	cmp	x1, w2, uxtw
     348:	b.hi	408 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x190>  // b.pmore
     34c:	add	w0, w0, #0x1
     350:	str	w0, [x19, #120]
     354:	cmp	w2, w0
     358:	b.ls	3d0 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x158>  // b.plast
     35c:	ldr	x2, [x19, #112]
     360:	adrp	x1, 0 <_ZN4llvm20GlobalsAAWrapperPass2IDE>
     364:	ldr	x1, [x1]
     368:	str	x1, [x2, w0, uxtw #3]
     36c:	ldp	w0, w2, [x19, #120]
     370:	mov	w1, w0
     374:	add	x1, x1, #0x1
     378:	cmp	x1, x2
     37c:	b.hi	408 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x190>  // b.pmore
     380:	add	w0, w0, #0x1
     384:	ldr	x21, [sp, #32]
     388:	str	w0, [x19, #120]
     38c:	ldp	x19, x20, [sp, #16]
     390:	ldp	x29, x30, [sp], #48
     394:	ret
     398:	add	x1, x19, #0x80
     39c:	mov	x0, x21
     3a0:	mov	x3, #0x8                   	// #8
     3a4:	mov	x2, #0x0                   	// #0
     3a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     3ac:	ldr	w1, [x19, #120]
     3b0:	b	2c4 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x4c>
     3b4:	mov	x0, x21
     3b8:	add	x1, x19, #0x80
     3bc:	mov	x3, #0x8                   	// #8
     3c0:	mov	x2, #0x0                   	// #0
     3c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     3c8:	ldr	w0, [x19, #120]
     3cc:	b	2f8 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x80>
     3d0:	mov	x0, x21
     3d4:	add	x1, x19, #0x80
     3d8:	mov	x3, #0x8                   	// #8
     3dc:	mov	x2, #0x0                   	// #0
     3e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     3e4:	ldr	w0, [x19, #120]
     3e8:	b	35c <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0xe4>
     3ec:	mov	x0, x21
     3f0:	add	x1, x19, #0x80
     3f4:	mov	x3, #0x8                   	// #8
     3f8:	mov	x2, #0x0                   	// #0
     3fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     400:	ldr	w0, [x19, #120]
     404:	b	32c <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0xb4>
     408:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     40c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     410:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     414:	add	x3, x3, #0x0
     418:	add	x1, x1, #0x0
     41c:	add	x0, x0, #0x0
     420:	mov	w2, #0x43                  	// #67
     424:	bl	0 <__assert_fail>

0000000000000428 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>:
     428:	stp	x29, x30, [sp, #-96]!
     42c:	mov	x29, sp
     430:	stp	x19, x20, [sp, #16]
     434:	mov	x19, x0
     438:	mov	x20, x1
     43c:	stp	x21, x22, [sp, #32]
     440:	mov	x21, #0x1                   	// #1
     444:	mov	w22, w21
     448:	stp	x23, x24, [sp, #48]
     44c:	ldrb	w1, [x20, #24]
     450:	ldrb	w0, [x19, #16]
     454:	cbz	w1, 4e4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xbc>
     458:	cmp	w0, #0x34
     45c:	b.eq	59c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x174>  // b.none
     460:	cmp	w0, #0x5
     464:	b.ne	4f4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xcc>  // b.any
     468:	ldrh	w1, [x19, #18]
     46c:	cmp	w1, #0x1c
     470:	mov	w0, w1
     474:	b.eq	70c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x2e4>  // b.none
     478:	cmp	w0, #0x1a
     47c:	b.eq	6ac <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x284>  // b.none
     480:	ldr	x2, [x20]
     484:	mov	x0, #0x0                   	// #0
     488:	cbz	x2, 54c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x124>
     48c:	ldr	w1, [x20, #16]
     490:	cmp	x0, w1, uxtw
     494:	b.cs	560 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x138>  // b.hs, b.nlast
     498:	cmp	w0, w1
     49c:	mov	w4, w0
     4a0:	b.cs	a44 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x61c>  // b.hs, b.nlast
     4a4:	mov	x3, #0x1                   	// #1
     4a8:	cmp	w1, #0x40
     4ac:	lsl	x0, x3, x0
     4b0:	ldr	x1, [x20, #8]
     4b4:	b.ls	66c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x244>  // b.plast
     4b8:	lsr	w4, w4, #6
     4bc:	ldr	x3, [x1, x4, lsl #3]
     4c0:	orr	x0, x3, x0
     4c4:	str	x0, [x1, x4, lsl #3]
     4c8:	cmp	x19, x2
     4cc:	cset	w0, eq  // eq = none
     4d0:	ldp	x19, x20, [sp, #16]
     4d4:	ldp	x21, x22, [sp, #32]
     4d8:	ldp	x23, x24, [sp, #48]
     4dc:	ldp	x29, x30, [sp], #96
     4e0:	ret
     4e4:	cmp	w0, #0x35
     4e8:	b.eq	578 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x150>  // b.none
     4ec:	cmp	w0, #0x5
     4f0:	b.eq	5e8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1c0>  // b.none
     4f4:	cmp	w0, #0x32
     4f8:	b.ne	480 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x58>  // b.any
     4fc:	ldur	x22, [x19, #-48]
     500:	cbz	x22, 5dc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1b4>
     504:	ldur	x21, [x19, #-24]
     508:	cbz	x21, a04 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5dc>
     50c:	ldrb	w0, [x21, #16]
     510:	cmp	w0, #0xd
     514:	b.ne	480 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x58>  // b.any
     518:	ldr	w23, [x21, #32]
     51c:	cmp	w23, #0x40
     520:	b.ls	7d8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3b0>  // b.plast
     524:	add	x0, x21, #0x18
     528:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     52c:	sub	w23, w23, w0
     530:	cmp	w23, #0x40
     534:	b.hi	480 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x58>  // b.pmore
     538:	ldr	x0, [x21, #24]
     53c:	mov	x19, x22
     540:	ldr	x0, [x0]
     544:	ldr	x2, [x20]
     548:	cbnz	x2, 48c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x64>
     54c:	ldr	w1, [x20, #16]
     550:	mov	x2, x19
     554:	str	x19, [x20]
     558:	cmp	x0, w1, uxtw
     55c:	b.cc	498 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x70>  // b.lo, b.ul, b.last
     560:	mov	w0, #0x0                   	// #0
     564:	ldp	x19, x20, [sp, #16]
     568:	ldp	x21, x22, [sp, #32]
     56c:	ldp	x23, x24, [sp, #48]
     570:	ldp	x29, x30, [sp], #96
     574:	ret
     578:	ldur	x0, [x19, #-48]
     57c:	cbz	x0, 5dc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1b4>
     580:	ldur	x19, [x19, #-24]
     584:	cbz	x19, 5dc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1b4>
     588:	mov	x1, x20
     58c:	bl	428 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     590:	tst	w0, #0xff
     594:	b.eq	560 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x138>  // b.none
     598:	b	44c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x24>
     59c:	ldur	x24, [x19, #-48]
     5a0:	cbz	x24, 5dc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1b4>
     5a4:	ldur	x23, [x19, #-24]
     5a8:	cbz	x23, a04 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5dc>
     5ac:	stp	x25, x26, [sp, #64]
     5b0:	ldrb	w0, [x23, #16]
     5b4:	cmp	w0, #0xd
     5b8:	b.eq	678 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x250>  // b.none
     5bc:	ldr	x1, [x23]
     5c0:	ldrb	w1, [x1, #8]
     5c4:	cmp	w1, #0x10
     5c8:	ccmp	w0, #0x10, #0x2, eq  // eq = none
     5cc:	b.ls	818 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3f0>  // b.plast
     5d0:	ldp	x25, x26, [sp, #64]
     5d4:	mov	x0, x24
     5d8:	cbnz	x24, 580 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x158>
     5dc:	stp	x25, x26, [sp, #64]
     5e0:	str	x27, [sp, #80]
     5e4:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
     5e8:	ldrh	w0, [x19, #18]
     5ec:	cmp	w0, #0x1d
     5f0:	b.ne	478 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x50>  // b.any
     5f4:	ldr	w2, [x19, #20]
     5f8:	ubfx	x2, x2, #0, #28
     5fc:	cbz	w2, a10 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>
     600:	mov	w1, w2
     604:	ubfiz	x0, x2, #2, #28
     608:	sub	x0, x1, x0
     60c:	ldr	x0, [x19, x0, lsl #3]
     610:	cbz	x0, a38 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x610>
     614:	ldrb	w3, [x0, #16]
     618:	cmp	w3, #0x10
     61c:	b.hi	644 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     620:	cmp	w2, #0x1
     624:	b.ls	a10 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>  // b.plast
     628:	sub	x1, x21, x1
     62c:	add	x1, x1, x1, lsl #1
     630:	ldr	x19, [x19, x1, lsl #3]
     634:	cbz	x19, a38 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x610>
     638:	ldrb	w1, [x19, #16]
     63c:	cmp	w1, #0x10
     640:	b.ls	588 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x160>  // b.plast
     644:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     648:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     64c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     650:	add	x3, x3, #0x0
     654:	add	x1, x1, #0x0
     658:	add	x0, x0, #0x0
     65c:	mov	w2, #0x134                 	// #308
     660:	stp	x25, x26, [sp, #64]
     664:	str	x27, [sp, #80]
     668:	bl	0 <__assert_fail>
     66c:	orr	x0, x1, x0
     670:	str	x0, [x20, #8]
     674:	b	4c8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xa0>
     678:	ldr	w25, [x23, #32]
     67c:	cmp	w25, #0x40
     680:	b.ls	78c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x364>  // b.plast
     684:	sub	w25, w25, #0x1
     688:	add	x0, x23, #0x18
     68c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     690:	cmp	w25, w0
     694:	cset	w25, eq  // eq = none
     698:	cbz	w25, 7f8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3d0>
     69c:	mov	x19, x24
     6a0:	ldp	x25, x26, [sp, #64]
     6a4:	strb	w22, [x20, #25]
     6a8:	b	44c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x24>
     6ac:	ldr	w0, [x19, #20]
     6b0:	ubfx	x0, x0, #0, #28
     6b4:	cbz	w0, a10 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>
     6b8:	mov	w2, w0
     6bc:	ubfiz	x1, x0, #2, #28
     6c0:	sub	x1, x2, x1
     6c4:	ldr	x22, [x19, x1, lsl #3]
     6c8:	cbz	x22, a38 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x610>
     6cc:	ldrb	w1, [x22, #16]
     6d0:	cmp	w1, #0x10
     6d4:	b.hi	644 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     6d8:	cmp	w0, #0x1
     6dc:	b.ls	a10 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>  // b.plast
     6e0:	mov	x0, #0x1                   	// #1
     6e4:	sub	x0, x0, x2
     6e8:	add	x0, x0, x0, lsl #1
     6ec:	ldr	x21, [x19, x0, lsl #3]
     6f0:	cbz	x21, a6c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x644>
     6f4:	ldrb	w0, [x21, #16]
     6f8:	cmp	w0, #0x10
     6fc:	b.hi	644 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     700:	cmp	w0, #0xd
     704:	b.ne	480 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x58>  // b.any
     708:	b	518 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xf0>
     70c:	ldr	w2, [x19, #20]
     710:	ubfx	x2, x2, #0, #28
     714:	cbz	w2, a10 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>
     718:	mov	w0, w2
     71c:	ubfiz	x3, x2, #2, #28
     720:	sub	x3, x0, x3
     724:	ldr	x24, [x19, x3, lsl #3]
     728:	cbz	x24, a38 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x610>
     72c:	ldrb	w3, [x24, #16]
     730:	cmp	w3, #0x10
     734:	b.hi	644 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     738:	cmp	w2, #0x1
     73c:	b.ls	a10 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>  // b.plast
     740:	sub	x0, x21, x0
     744:	add	x0, x0, x0, lsl #1
     748:	ldr	x23, [x19, x0, lsl #3]
     74c:	cbz	x23, a6c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x644>
     750:	ldrb	w0, [x23, #16]
     754:	cmp	w0, #0x10
     758:	b.hi	644 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     75c:	str	x27, [sp, #80]
     760:	cmp	w0, #0xd
     764:	b.eq	79c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x374>  // b.none
     768:	ldr	x0, [x23]
     76c:	ldrb	w0, [x0, #8]
     770:	cmp	w0, #0x10
     774:	b.eq	8e8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x4c0>  // b.none
     778:	ldr	x27, [sp, #80]
     77c:	cmp	w1, #0x1c
     780:	mov	w0, w1
     784:	b.eq	5f4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1cc>  // b.none
     788:	b	478 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x50>
     78c:	ldr	x0, [x23, #24]
     790:	cmp	x0, #0x1
     794:	cset	w25, eq  // eq = none
     798:	b	698 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x270>
     79c:	stp	x25, x26, [sp, #64]
     7a0:	ldr	w25, [x23, #32]
     7a4:	cmp	w25, #0x40
     7a8:	b.ls	7e4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3bc>  // b.plast
     7ac:	sub	w25, w25, #0x1
     7b0:	add	x0, x23, #0x18
     7b4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     7b8:	cmp	w25, w0
     7bc:	ldp	x25, x26, [sp, #64]
     7c0:	cset	w27, eq  // eq = none
     7c4:	cbz	w27, a78 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x650>
     7c8:	mov	x19, x24
     7cc:	ldr	x27, [sp, #80]
     7d0:	strb	w22, [x20, #25]
     7d4:	b	44c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x24>
     7d8:	mov	x19, x22
     7dc:	ldr	x0, [x21, #24]
     7e0:	b	544 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x11c>
     7e4:	ldr	x0, [x23, #24]
     7e8:	ldp	x25, x26, [sp, #64]
     7ec:	cmp	x0, #0x1
     7f0:	cset	w27, eq  // eq = none
     7f4:	b	7c4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x39c>
     7f8:	ldp	x25, x26, [sp, #64]
     7fc:	ldrb	w0, [x19, #16]
     800:	cmp	w0, #0x34
     804:	b.eq	8e0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x4b8>  // b.none
     808:	cmp	w0, #0x5
     80c:	b.ne	4f4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xcc>  // b.any
     810:	ldrh	w1, [x19, #18]
     814:	b	77c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x354>
     818:	mov	x0, x23
     81c:	mov	w1, #0x0                   	// #0
     820:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
     824:	cbz	x0, 834 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x40c>
     828:	ldrb	w1, [x0, #16]
     82c:	cmp	w1, #0xd
     830:	b.eq	99c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x574>  // b.none
     834:	ldr	x0, [x23]
     838:	str	x27, [sp, #80]
     83c:	cbz	x0, ad4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x6ac>
     840:	ldrb	w1, [x0, #8]
     844:	cmp	w1, #0x10
     848:	b.ne	ab4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x68c>  // b.any
     84c:	ldr	x0, [x0, #32]
     850:	mov	w26, w0
     854:	cbz	w0, aa4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x67c>
     858:	mov	w25, #0x0                   	// #0
     85c:	mov	w27, #0x0                   	// #0
     860:	mov	w1, w27
     864:	mov	x0, x23
     868:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
     86c:	cbz	x0, 884 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     870:	ldrb	w1, [x0, #16]
     874:	cmp	w1, #0x9
     878:	b.eq	8b8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x490>  // b.none
     87c:	cmp	w1, #0xd
     880:	b.eq	894 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x46c>  // b.none
     884:	ldrb	w0, [x19, #16]
     888:	ldp	x25, x26, [sp, #64]
     88c:	ldr	x27, [sp, #80]
     890:	b	800 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3d8>
     894:	ldr	w25, [x0, #32]
     898:	cmp	w25, #0x40
     89c:	b.ls	8cc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x4a4>  // b.plast
     8a0:	sub	w25, w25, #0x1
     8a4:	add	x0, x0, #0x18
     8a8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     8ac:	cmp	w25, w0
     8b0:	cset	w25, eq  // eq = none
     8b4:	cbz	w25, 884 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     8b8:	add	w27, w27, #0x1
     8bc:	cmp	w26, w27
     8c0:	b.ne	860 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x438>  // b.any
     8c4:	ldr	x27, [sp, #80]
     8c8:	b	698 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x270>
     8cc:	ldr	x0, [x0, #24]
     8d0:	cmp	x0, #0x1
     8d4:	cset	w25, eq  // eq = none
     8d8:	cbnz	w25, 8b8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x490>
     8dc:	b	884 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     8e0:	ldur	x24, [x19, #-48]
     8e4:	b	5d4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1ac>
     8e8:	mov	x0, x23
     8ec:	mov	w1, #0x0                   	// #0
     8f0:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
     8f4:	cbz	x0, 904 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x4dc>
     8f8:	ldrb	w1, [x0, #16]
     8fc:	cmp	w1, #0xd
     900:	b.eq	9c0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x598>  // b.none
     904:	ldr	x0, [x23]
     908:	stp	x25, x26, [sp, #64]
     90c:	cbz	x0, ad4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x6ac>
     910:	ldrb	w1, [x0, #8]
     914:	cmp	w1, #0x10
     918:	b.ne	ab4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x68c>  // b.any
     91c:	ldr	x0, [x0, #32]
     920:	mov	w26, w0
     924:	cbz	w0, a84 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x65c>
     928:	mov	w27, #0x0                   	// #0
     92c:	mov	w25, #0x0                   	// #0
     930:	mov	w1, w25
     934:	mov	x0, x23
     938:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
     93c:	cbz	x0, 884 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     940:	ldrb	w1, [x0, #16]
     944:	cmp	w1, #0x9
     948:	b.eq	978 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x550>  // b.none
     94c:	cmp	w1, #0xd
     950:	b.ne	884 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>  // b.any
     954:	ldr	w27, [x0, #32]
     958:	cmp	w27, #0x40
     95c:	b.ls	98c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x564>  // b.plast
     960:	sub	w27, w27, #0x1
     964:	add	x0, x0, #0x18
     968:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     96c:	cmp	w27, w0
     970:	cset	w27, eq  // eq = none
     974:	cbz	w27, 884 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     978:	add	w25, w25, #0x1
     97c:	cmp	w26, w25
     980:	b.ne	930 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x508>  // b.any
     984:	ldp	x25, x26, [sp, #64]
     988:	b	7c4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x39c>
     98c:	ldr	x0, [x0, #24]
     990:	cmp	x0, #0x1
     994:	cset	w27, eq  // eq = none
     998:	b	974 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x54c>
     99c:	ldr	w23, [x0, #32]
     9a0:	cmp	w23, #0x40
     9a4:	b.ls	9e4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5bc>  // b.plast
     9a8:	sub	w23, w23, #0x1
     9ac:	add	x0, x0, #0x18
     9b0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     9b4:	cmp	w23, w0
     9b8:	cset	w25, eq  // eq = none
     9bc:	b	698 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x270>
     9c0:	ldr	w23, [x0, #32]
     9c4:	cmp	w23, #0x40
     9c8:	b.ls	9f4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5cc>  // b.plast
     9cc:	sub	w23, w23, #0x1
     9d0:	add	x0, x0, #0x18
     9d4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     9d8:	cmp	w23, w0
     9dc:	cset	w27, eq  // eq = none
     9e0:	b	7c4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x39c>
     9e4:	ldr	x0, [x0, #24]
     9e8:	cmp	x0, #0x1
     9ec:	cset	w25, eq  // eq = none
     9f0:	b	698 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x270>
     9f4:	ldr	x0, [x0, #24]
     9f8:	cmp	x0, #0x1
     9fc:	cset	w27, eq  // eq = none
     a00:	b	7c4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x39c>
     a04:	stp	x25, x26, [sp, #64]
     a08:	str	x27, [sp, #80]
     a0c:	bl	138 <_ZN4llvm3isaINS_11ConstantIntEPNS_5ValueEEEbRKT0_.isra.0.part.0>
     a10:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a14:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a18:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a1c:	add	x3, x3, #0x0
     a20:	add	x1, x1, #0x0
     a24:	add	x0, x0, #0x0
     a28:	mov	w2, #0x4fa                 	// #1274
     a2c:	stp	x25, x26, [sp, #64]
     a30:	str	x27, [sp, #80]
     a34:	bl	0 <__assert_fail>
     a38:	stp	x25, x26, [sp, #64]
     a3c:	str	x27, [sp, #80]
     a40:	bl	1d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
     a44:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a48:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a4c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a50:	add	x3, x3, #0x0
     a54:	add	x1, x1, #0x0
     a58:	add	x0, x0, #0x0
     a5c:	mov	w2, #0x59d                 	// #1437
     a60:	stp	x25, x26, [sp, #64]
     a64:	str	x27, [sp, #80]
     a68:	bl	0 <__assert_fail>
     a6c:	stp	x25, x26, [sp, #64]
     a70:	str	x27, [sp, #80]
     a74:	bl	200 <_ZN4llvm3isaINS_11ConstantIntEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
     a78:	ldrb	w0, [x19, #16]
     a7c:	ldr	x27, [sp, #80]
     a80:	b	800 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3d8>
     a84:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a88:	add	x3, x3, #0x0
     a8c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a90:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a94:	add	x1, x1, #0x0
     a98:	add	x0, x0, #0x0
     a9c:	mov	w2, #0xeb                  	// #235
     aa0:	bl	0 <__assert_fail>
     aa4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     aa8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     aac:	add	x3, x3, #0x0
     ab0:	b	a90 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x668>
     ab4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     ab8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     abc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     ac0:	add	x3, x3, #0x0
     ac4:	add	x1, x1, #0x0
     ac8:	add	x0, x0, #0x0
     acc:	mov	w2, #0x108                 	// #264
     ad0:	bl	0 <__assert_fail>
     ad4:	bl	188 <_ZN4llvm13isa_impl_wrapINS_10VectorTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>

0000000000000ad8 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>:
     ad8:	stp	x29, x30, [sp, #-48]!
     adc:	mov	x6, x0
     ae0:	adrp	x0, 0 <_ZSt15__once_callable>
     ae4:	ldr	x4, [x0]
     ae8:	add	x0, x0, #0x0
     aec:	blr	x4
     af0:	add	x4, sp, #0x20
     af4:	mrs	x1, tpidr_el0
     af8:	adrp	x2, 0 <__pthread_key_create>
     afc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     b00:	mov	x29, sp
     b04:	ldr	x2, [x2]
     b08:	str	x4, [x1, x0]
     b0c:	ldr	x3, [x3]
     b10:	adrp	x0, 0 <_ZSt11__once_call>
     b14:	ldr	x4, [x0]
     b18:	add	x0, x0, #0x0
     b1c:	blr	x4
     b20:	add	x4, sp, #0x18
     b24:	adrp	x5, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     b28:	add	x5, x5, #0x0
     b2c:	str	x3, [x1, x0]
     b30:	stp	x6, x5, [sp, #24]
     b34:	str	x4, [sp, #40]
     b38:	cbz	x2, b60 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE+0x88>
     b3c:	adrp	x1, 0 <__once_proxy>
     b40:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     b44:	add	x0, x0, #0x0
     b48:	ldr	x1, [x1]
     b4c:	add	x0, x0, #0x8
     b50:	bl	0 <pthread_once>
     b54:	cbnz	w0, b64 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE+0x8c>
     b58:	ldp	x29, x30, [sp], #48
     b5c:	ret
     b60:	mov	w0, #0xffffffff            	// #-1
     b64:	bl	0 <_ZSt20__throw_system_errori>

0000000000000b68 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassEEEPNS_4PassEv>:
     b68:	stp	x29, x30, [sp, #-32]!
     b6c:	mov	x0, #0x20                  	// #32
     b70:	mov	x29, sp
     b74:	str	x19, [sp, #16]
     b78:	bl	0 <_Znwm>
     b7c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     b80:	add	x1, x1, #0x0
     b84:	mov	x19, x0
     b88:	add	x1, x1, #0x10
     b8c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     b90:	add	x0, x0, #0x0
     b94:	mov	w2, #0x2                   	// #2
     b98:	stp	x1, xzr, [x19]
     b9c:	str	x0, [x19, #16]
     ba0:	str	w2, [x19, #24]
     ba4:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     ba8:	bl	ad8 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     bac:	mov	x0, x19
     bb0:	ldr	x19, [sp, #16]
     bb4:	ldp	x29, x30, [sp], #32
     bb8:	ret
     bbc:	nop

0000000000000bc0 <_ZN4llvm31initializeAggressiveInstCombineERNS_12PassRegistryE>:
     bc0:	b	ad8 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     bc4:	nop

0000000000000bc8 <LLVMInitializeAggressiveInstCombiner>:
     bc8:	b	ad8 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     bcc:	nop

0000000000000bd0 <_ZN4llvm32createAggressiveInstCombinerPassEv>:
     bd0:	stp	x29, x30, [sp, #-32]!
     bd4:	mov	x0, #0x20                  	// #32
     bd8:	mov	x29, sp
     bdc:	str	x19, [sp, #16]
     be0:	bl	0 <_Znwm>
     be4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     be8:	add	x1, x1, #0x0
     bec:	mov	x19, x0
     bf0:	add	x1, x1, #0x10
     bf4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     bf8:	add	x0, x0, #0x0
     bfc:	mov	w2, #0x2                   	// #2
     c00:	stp	x1, xzr, [x19]
     c04:	str	x0, [x19, #16]
     c08:	str	w2, [x19, #24]
     c0c:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     c10:	bl	ad8 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     c14:	mov	x0, x19
     c18:	ldr	x19, [sp, #16]
     c1c:	ldp	x29, x30, [sp], #32
     c20:	ret
     c24:	nop

0000000000000c28 <LLVMAddAggressiveInstCombinerPass>:
     c28:	stp	x29, x30, [sp, #-32]!
     c2c:	mov	x29, sp
     c30:	stp	x19, x20, [sp, #16]
     c34:	mov	x19, x0
     c38:	ldr	x0, [x0]
     c3c:	ldr	x20, [x0, #16]
     c40:	bl	bd0 <_ZN4llvm32createAggressiveInstCombinerPassEv>
     c44:	mov	x1, x0
     c48:	mov	x0, x19
     c4c:	mov	x16, x20
     c50:	ldp	x19, x20, [sp, #16]
     c54:	ldp	x29, x30, [sp], #32
     c58:	br	x16
     c5c:	nop

0000000000000c60 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0>:
     c60:	stp	x29, x30, [sp, #-320]!
     c64:	mov	x29, sp
     c68:	stp	x19, x20, [sp, #16]
     c6c:	mov	x19, x0
     c70:	add	x20, sp, #0x68
     c74:	ldr	x0, [x0]
     c78:	stp	x21, x22, [sp, #32]
     c7c:	mov	x21, x1
     c80:	mov	x22, x2
     c84:	stp	x23, x24, [sp, #48]
     c88:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     c8c:	add	x3, sp, #0x70
     c90:	mov	w4, w0
     c94:	mov	w1, #0x40                  	// #64
     c98:	mov	x0, x19
     c9c:	add	x23, sp, #0x58
     ca0:	add	x24, sp, #0x60
     ca4:	str	x4, [sp, #120]
     ca8:	str	w1, [sp, #128]
     cac:	str	x3, [sp, #136]
     cb0:	stp	x23, x24, [sp, #176]
     cb4:	stp	x20, x4, [sp, #192]
     cb8:	str	w1, [sp, #208]
     cbc:	str	x3, [sp, #216]
     cc0:	str	x3, [sp, #248]
     cc4:	str	x3, [sp, #312]
     cc8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     ccc:	ldr	x0, [x19, #8]
     cd0:	cbz	x0, cdc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>
     cd4:	ldr	x0, [x0, #8]
     cd8:	cbz	x0, f6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x30c>
     cdc:	ldr	w1, [sp, #128]
     ce0:	str	x20, [sp, #144]
     ce4:	str	w1, [sp, #160]
     ce8:	cmp	w1, #0x40
     cec:	b.hi	ec8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x268>  // b.pmore
     cf0:	ldr	x0, [sp, #120]
     cf4:	str	x0, [sp, #152]
     cf8:	ldr	x0, [sp, #136]
     cfc:	str	x0, [sp, #168]
     d00:	stp	x23, x24, [sp, #272]
     d04:	str	x20, [sp, #288]
     d08:	ldr	x2, [sp, #152]
     d0c:	str	w1, [sp, #256]
     d10:	str	x2, [sp, #296]
     d14:	ldr	x0, [sp, #168]
     d18:	str	x0, [sp, #312]
     d1c:	ldp	x2, x3, [sp, #272]
     d20:	stp	x2, x3, [sp, #224]
     d24:	ldr	x1, [sp, #288]
     d28:	str	x1, [sp, #240]
     d2c:	ldr	x0, [sp, #296]
     d30:	str	x0, [sp, #248]
     d34:	ldr	x0, [sp, #312]
     d38:	str	x0, [sp, #264]
     d3c:	ldr	w0, [sp, #160]
     d40:	cmp	w0, #0x40
     d44:	b.ls	d54 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xf4>  // b.plast
     d48:	ldr	x0, [sp, #152]
     d4c:	cbz	x0, d54 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xf4>
     d50:	bl	0 <_ZdaPv>
     d54:	mov	x0, x19
     d58:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     d5c:	ldr	x0, [x19, #8]
     d60:	cbz	x0, d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>
     d64:	ldr	x0, [x0, #8]
     d68:	cbz	x0, dd0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x170>
     d6c:	mov	w19, #0x0                   	// #0
     d70:	ldr	w0, [sp, #256]
     d74:	cmp	w0, #0x40
     d78:	b.ls	d88 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x128>  // b.plast
     d7c:	ldr	x0, [sp, #248]
     d80:	cbz	x0, d88 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x128>
     d84:	bl	0 <_ZdaPv>
     d88:	ldr	w0, [sp, #208]
     d8c:	cmp	w0, #0x40
     d90:	b.ls	da0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x140>  // b.plast
     d94:	ldr	x0, [sp, #200]
     d98:	cbz	x0, da0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x140>
     d9c:	bl	0 <_ZdaPv>
     da0:	ldr	w0, [sp, #128]
     da4:	cmp	w0, #0x40
     da8:	b.ls	db8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x158>  // b.plast
     dac:	ldr	x0, [sp, #120]
     db0:	cbz	x0, db8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x158>
     db4:	bl	0 <_ZdaPv>
     db8:	mov	w0, w19
     dbc:	ldp	x19, x20, [sp, #16]
     dc0:	ldp	x21, x22, [sp, #32]
     dc4:	ldp	x23, x24, [sp, #48]
     dc8:	ldp	x29, x30, [sp], #320
     dcc:	ret
     dd0:	ldrb	w0, [x19, #16]
     dd4:	cmp	w0, #0x35
     dd8:	b.eq	10b0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x450>  // b.none
     ddc:	cmp	w0, #0x5
     de0:	b.ne	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     de4:	ldrh	w0, [x19, #18]
     de8:	cmp	w0, #0x1d
     dec:	b.ne	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     df0:	mov	w1, #0x0                   	// #0
     df4:	mov	x0, x19
     df8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     dfc:	ldrb	w1, [x0, #16]
     e00:	mov	x20, x0
     e04:	cmp	w1, #0x32
     e08:	b.eq	1398 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x738>  // b.none
     e0c:	cmp	w1, #0x5
     e10:	b.eq	131c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x6bc>  // b.none
     e14:	mov	w1, #0x1                   	// #1
     e18:	mov	x0, x19
     e1c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e20:	ldrb	w1, [x0, #16]
     e24:	mov	x20, x0
     e28:	cmp	w1, #0x32
     e2c:	b.eq	13d4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x774>  // b.none
     e30:	cmp	w1, #0x5
     e34:	b.ne	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     e38:	ldrh	w1, [x20, #18]
     e3c:	cmp	w1, #0x1a
     e40:	b.ne	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     e44:	mov	w1, #0x0                   	// #0
     e48:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e4c:	mov	x2, x0
     e50:	cbz	x0, 13f4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
     e54:	ldr	x3, [sp, #224]
     e58:	mov	x0, x20
     e5c:	mov	w1, #0x1                   	// #1
     e60:	str	x2, [x3]
     e64:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e68:	cbz	x0, 13f4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
     e6c:	ldr	x1, [sp, #232]
     e70:	str	x0, [x1]
     e74:	mov	w1, #0x0                   	// #0
     e78:	mov	x0, x19
     e7c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e80:	mov	x1, x0
     e84:	add	x0, sp, #0xf0
     e88:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e8c:	tst	w0, #0xff
     e90:	b.eq	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.none
     e94:	nop
     e98:	ldr	x0, [sp, #88]
     e9c:	ldr	x1, [sp, #104]
     ea0:	cmp	x0, x1
     ea4:	b.ne	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     ea8:	ldr	x1, [sp, #96]
     eac:	ldr	x2, [sp, #112]
     eb0:	cmp	x1, x2
     eb4:	b.ne	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     eb8:	str	x0, [x21]
     ebc:	mov	w19, #0x83                  	// #131
     ec0:	str	x1, [x22]
     ec4:	b	d70 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x110>
     ec8:	str	x25, [sp, #64]
     ecc:	add	x25, sp, #0x98
     ed0:	add	x1, sp, #0x78
     ed4:	mov	x0, x25
     ed8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     edc:	stp	x23, x24, [sp, #272]
     ee0:	ldr	w1, [sp, #160]
     ee4:	ldr	x0, [sp, #136]
     ee8:	str	x0, [sp, #168]
     eec:	ldr	x0, [sp, #144]
     ef0:	str	x0, [sp, #288]
     ef4:	str	w1, [sp, #304]
     ef8:	cmp	w1, #0x40
     efc:	b.ls	13fc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x79c>  // b.plast
     f00:	add	x20, sp, #0x128
     f04:	mov	x1, x25
     f08:	mov	x0, x20
     f0c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     f10:	ldr	x0, [sp, #168]
     f14:	str	x0, [sp, #312]
     f18:	ldp	x0, x1, [sp, #272]
     f1c:	stp	x0, x1, [sp, #224]
     f20:	ldr	w0, [sp, #304]
     f24:	ldr	x1, [sp, #288]
     f28:	str	x1, [sp, #240]
     f2c:	str	w0, [sp, #256]
     f30:	cmp	w0, #0x40
     f34:	b.ls	1404 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7a4>  // b.plast
     f38:	mov	x1, x20
     f3c:	add	x0, sp, #0xf8
     f40:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     f44:	ldr	x1, [sp, #312]
     f48:	str	x1, [sp, #264]
     f4c:	ldr	w0, [sp, #304]
     f50:	cmp	w0, #0x40
     f54:	b.ls	106c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x40c>  // b.plast
     f58:	ldr	x0, [sp, #296]
     f5c:	cbz	x0, 106c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x40c>
     f60:	bl	0 <_ZdaPv>
     f64:	ldr	x25, [sp, #64]
     f68:	b	d3c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xdc>
     f6c:	ldrb	w0, [x19, #16]
     f70:	cmp	w0, #0x35
     f74:	b.eq	1074 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x414>  // b.none
     f78:	cmp	w0, #0x5
     f7c:	b.ne	cdc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>  // b.any
     f80:	ldrh	w0, [x19, #18]
     f84:	cmp	w0, #0x1d
     f88:	b.ne	cdc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>  // b.any
     f8c:	mov	w1, #0x0                   	// #0
     f90:	mov	x0, x19
     f94:	str	x25, [sp, #64]
     f98:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     f9c:	ldrb	w1, [x0, #16]
     fa0:	mov	x25, x0
     fa4:	cmp	w1, #0x31
     fa8:	b.eq	137c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x71c>  // b.none
     fac:	cmp	w1, #0x5
     fb0:	b.eq	12bc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x65c>  // b.none
     fb4:	mov	w1, #0x1                   	// #1
     fb8:	mov	x0, x19
     fbc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     fc0:	ldrb	w1, [x0, #16]
     fc4:	mov	x25, x0
     fc8:	cmp	w1, #0x31
     fcc:	b.eq	13b8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x758>  // b.none
     fd0:	cmp	w1, #0x5
     fd4:	b.ne	10a8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
     fd8:	ldrh	w1, [x25, #18]
     fdc:	cmp	w1, #0x19
     fe0:	b.ne	10a8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
     fe4:	mov	w1, #0x0                   	// #0
     fe8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     fec:	mov	x2, x0
     ff0:	cbz	x0, 13f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
     ff4:	ldr	x3, [sp, #176]
     ff8:	mov	x0, x25
     ffc:	mov	w1, #0x1                   	// #1
    1000:	str	x2, [x3]
    1004:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1008:	cbz	x0, 13f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    100c:	ldr	x1, [sp, #184]
    1010:	str	x0, [x1]
    1014:	mov	w1, #0x0                   	// #0
    1018:	mov	x0, x19
    101c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1020:	mov	x1, x0
    1024:	add	x0, sp, #0xc0
    1028:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    102c:	tst	w0, #0xff
    1030:	b.eq	10a8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.none
    1034:	nop
    1038:	ldr	x0, [sp, #88]
    103c:	ldr	x1, [sp, #104]
    1040:	cmp	x0, x1
    1044:	b.ne	10a8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
    1048:	ldr	x1, [sp, #96]
    104c:	ldr	x2, [sp, #112]
    1050:	cmp	x1, x2
    1054:	b.ne	10a8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
    1058:	ldr	x25, [sp, #64]
    105c:	str	x0, [x21]
    1060:	mov	w19, #0x82                  	// #130
    1064:	str	x1, [x22]
    1068:	b	d88 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x128>
    106c:	ldr	x25, [sp, #64]
    1070:	b	d3c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xdc>
    1074:	str	x25, [sp, #64]
    1078:	ldur	x25, [x19, #-48]
    107c:	ldrb	w0, [x25, #16]
    1080:	cmp	w0, #0x31
    1084:	b.eq	1244 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5e4>  // b.none
    1088:	cmp	w0, #0x5
    108c:	b.eq	1138 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x4d8>  // b.none
    1090:	ldur	x25, [x19, #-24]
    1094:	ldrb	w0, [x25, #16]
    1098:	cmp	w0, #0x31
    109c:	b.eq	1280 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x620>  // b.none
    10a0:	cmp	w0, #0x5
    10a4:	b.eq	11e8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x588>  // b.none
    10a8:	ldr	x25, [sp, #64]
    10ac:	b	cdc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>
    10b0:	ldur	x20, [x19, #-48]
    10b4:	ldrb	w0, [x20, #16]
    10b8:	cmp	w0, #0x32
    10bc:	b.eq	1260 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x600>  // b.none
    10c0:	cmp	w0, #0x5
    10c4:	b.eq	1190 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x530>  // b.none
    10c8:	ldur	x20, [x19, #-24]
    10cc:	ldrb	w0, [x20, #16]
    10d0:	cmp	w0, #0x32
    10d4:	b.eq	129c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x63c>  // b.none
    10d8:	cmp	w0, #0x5
    10dc:	b.ne	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
    10e0:	ldrh	w0, [x20, #18]
    10e4:	cmp	w0, #0x1a
    10e8:	b.ne	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
    10ec:	mov	x0, x20
    10f0:	mov	w1, #0x0                   	// #0
    10f4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    10f8:	mov	x2, x0
    10fc:	cbz	x0, 13f4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    1100:	ldr	x3, [sp, #224]
    1104:	mov	x0, x20
    1108:	mov	w1, #0x1                   	// #1
    110c:	str	x2, [x3]
    1110:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1114:	cbz	x0, 13f4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    1118:	ldr	x1, [sp, #232]
    111c:	str	x0, [x1]
    1120:	add	x0, sp, #0xf0
    1124:	ldur	x1, [x19, #-48]
    1128:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    112c:	tst	w0, #0xff
    1130:	b.ne	e98 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x238>  // b.any
    1134:	b	d6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>
    1138:	ldrh	w0, [x25, #18]
    113c:	cmp	w0, #0x19
    1140:	b.ne	1090 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x430>  // b.any
    1144:	mov	x0, x25
    1148:	mov	w1, #0x0                   	// #0
    114c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1150:	mov	x2, x0
    1154:	cbz	x0, 13f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    1158:	ldr	x3, [sp, #176]
    115c:	mov	x0, x25
    1160:	mov	w1, #0x1                   	// #1
    1164:	str	x2, [x3]
    1168:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    116c:	cbz	x0, 13f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    1170:	ldr	x1, [sp, #184]
    1174:	str	x0, [x1]
    1178:	add	x0, sp, #0xc0
    117c:	ldur	x1, [x19, #-24]
    1180:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1184:	tst	w0, #0xff
    1188:	b.eq	1090 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x430>  // b.none
    118c:	b	1038 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x3d8>
    1190:	ldrh	w0, [x20, #18]
    1194:	cmp	w0, #0x1a
    1198:	b.ne	10c8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x468>  // b.any
    119c:	mov	x0, x20
    11a0:	mov	w1, #0x0                   	// #0
    11a4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    11a8:	mov	x2, x0
    11ac:	cbz	x0, 13f4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    11b0:	ldr	x3, [sp, #224]
    11b4:	mov	x0, x20
    11b8:	mov	w1, #0x1                   	// #1
    11bc:	str	x2, [x3]
    11c0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    11c4:	cbz	x0, 13f4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    11c8:	ldr	x1, [sp, #232]
    11cc:	str	x0, [x1]
    11d0:	add	x0, sp, #0xf0
    11d4:	ldur	x1, [x19, #-24]
    11d8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    11dc:	tst	w0, #0xff
    11e0:	b.eq	10c8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x468>  // b.none
    11e4:	b	e98 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x238>
    11e8:	ldrh	w0, [x25, #18]
    11ec:	cmp	w0, #0x19
    11f0:	b.ne	10a8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
    11f4:	mov	x0, x25
    11f8:	mov	w1, #0x0                   	// #0
    11fc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1200:	mov	x2, x0
    1204:	cbz	x0, 13f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    1208:	ldr	x3, [sp, #176]
    120c:	mov	x0, x25
    1210:	mov	w1, #0x1                   	// #1
    1214:	str	x2, [x3]
    1218:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    121c:	cbz	x0, 13f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    1220:	ldr	x1, [sp, #184]
    1224:	str	x0, [x1]
    1228:	add	x0, sp, #0xc0
    122c:	ldur	x1, [x19, #-48]
    1230:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1234:	tst	w0, #0xff
    1238:	b.ne	1038 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x3d8>  // b.any
    123c:	ldr	x25, [sp, #64]
    1240:	b	cdc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>
    1244:	ldur	x0, [x25, #-48]
    1248:	cbz	x0, 125c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5fc>
    124c:	ldr	x1, [sp, #176]
    1250:	str	x0, [x1]
    1254:	ldur	x0, [x25, #-24]
    1258:	cbnz	x0, 1170 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x510>
    125c:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    1260:	ldur	x0, [x20, #-48]
    1264:	cbz	x0, 1278 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x618>
    1268:	ldr	x1, [sp, #224]
    126c:	str	x0, [x1]
    1270:	ldur	x0, [x20, #-24]
    1274:	cbnz	x0, 11c8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x568>
    1278:	str	x25, [sp, #64]
    127c:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    1280:	ldur	x0, [x25, #-48]
    1284:	cbz	x0, 125c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5fc>
    1288:	ldr	x1, [sp, #176]
    128c:	str	x0, [x1]
    1290:	ldur	x0, [x25, #-24]
    1294:	cbnz	x0, 1220 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5c0>
    1298:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    129c:	ldur	x0, [x20, #-48]
    12a0:	cbz	x0, 1278 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x618>
    12a4:	ldr	x1, [sp, #224]
    12a8:	str	x0, [x1]
    12ac:	ldur	x0, [x20, #-24]
    12b0:	cbnz	x0, 1118 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x4b8>
    12b4:	str	x25, [sp, #64]
    12b8:	b	127c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x61c>
    12bc:	ldrh	w1, [x0, #18]
    12c0:	cmp	w1, #0x19
    12c4:	b.ne	fb4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x354>  // b.any
    12c8:	mov	w1, #0x0                   	// #0
    12cc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    12d0:	mov	x2, x0
    12d4:	cbz	x0, 13f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    12d8:	ldr	x3, [sp, #176]
    12dc:	mov	x0, x25
    12e0:	mov	w1, #0x1                   	// #1
    12e4:	str	x2, [x3]
    12e8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    12ec:	cbz	x0, 13f8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    12f0:	ldr	x1, [sp, #184]
    12f4:	str	x0, [x1]
    12f8:	mov	w1, #0x1                   	// #1
    12fc:	mov	x0, x19
    1300:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1304:	mov	x1, x0
    1308:	add	x0, sp, #0xc0
    130c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1310:	tst	w0, #0xff
    1314:	b.ne	1038 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x3d8>  // b.any
    1318:	b	fb4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x354>
    131c:	ldrh	w1, [x0, #18]
    1320:	cmp	w1, #0x1a
    1324:	b.ne	e14 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x1b4>  // b.any
    1328:	mov	w1, #0x0                   	// #0
    132c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1330:	mov	x2, x0
    1334:	cbz	x0, 13f4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    1338:	ldr	x3, [sp, #224]
    133c:	mov	x0, x20
    1340:	mov	w1, #0x1                   	// #1
    1344:	str	x2, [x3]
    1348:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    134c:	cbz	x0, 13f4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    1350:	ldr	x1, [sp, #232]
    1354:	str	x0, [x1]
    1358:	mov	w1, #0x1                   	// #1
    135c:	mov	x0, x19
    1360:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1364:	mov	x1, x0
    1368:	add	x0, sp, #0xf0
    136c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1370:	tst	w0, #0xff
    1374:	b.ne	e98 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x238>  // b.any
    1378:	b	e14 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x1b4>
    137c:	ldur	x0, [x0, #-48]
    1380:	cbz	x0, 125c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5fc>
    1384:	ldr	x1, [sp, #176]
    1388:	str	x0, [x1]
    138c:	ldur	x0, [x25, #-24]
    1390:	cbnz	x0, 12f0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x690>
    1394:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    1398:	ldur	x0, [x0, #-48]
    139c:	cbz	x0, 1278 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x618>
    13a0:	ldr	x1, [sp, #224]
    13a4:	str	x0, [x1]
    13a8:	ldur	x0, [x20, #-24]
    13ac:	cbnz	x0, 1350 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x6f0>
    13b0:	str	x25, [sp, #64]
    13b4:	b	127c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x61c>
    13b8:	ldur	x0, [x25, #-48]
    13bc:	cbz	x0, 125c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5fc>
    13c0:	ldr	x1, [sp, #176]
    13c4:	str	x0, [x1]
    13c8:	ldur	x0, [x25, #-24]
    13cc:	cbnz	x0, 100c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x3ac>
    13d0:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    13d4:	ldur	x0, [x20, #-48]
    13d8:	cbz	x0, 1278 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x618>
    13dc:	ldr	x1, [sp, #224]
    13e0:	str	x0, [x1]
    13e4:	ldur	x0, [x20, #-24]
    13e8:	cbnz	x0, e6c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x20c>
    13ec:	str	x25, [sp, #64]
    13f0:	b	127c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x61c>
    13f4:	str	x25, [sp, #64]
    13f8:	bl	1d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    13fc:	ldr	x25, [sp, #64]
    1400:	b	d08 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xa8>
    1404:	ldr	x25, [sp, #64]
    1408:	b	d2c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xcc>
    140c:	nop

0000000000001410 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE>:
    1410:	stp	x29, x30, [sp, #-416]!
    1414:	mov	x29, sp
    1418:	stp	x19, x20, [sp, #16]
    141c:	mov	x19, x0
    1420:	ldrb	w0, [x0, #16]
    1424:	cmp	w0, #0x32
    1428:	b.ne	1444 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x34>  // b.any
    142c:	ldr	x0, [x19]
    1430:	ldrb	w1, [x0, #8]
    1434:	cmp	w1, #0x10
    1438:	b.eq	16d8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2c8>  // b.none
    143c:	cmp	w1, #0xb
    1440:	b.eq	1458 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x48>  // b.none
    1444:	mov	w20, #0x0                   	// #0
    1448:	mov	w0, w20
    144c:	ldp	x19, x20, [sp, #16]
    1450:	ldp	x29, x30, [sp], #416
    1454:	ret
    1458:	stp	x21, x22, [sp, #32]
    145c:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1460:	sub	w1, w0, #0x9
    1464:	mov	w21, w0
    1468:	cmp	w1, #0x77
    146c:	b.hi	16f0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2e0>  // b.pmore
    1470:	tst	x21, #0x7
    1474:	mov	w20, #0x0                   	// #0
    1478:	b.ne	16fc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2ec>  // b.any
    147c:	mov	w2, #0x8                   	// #8
    1480:	mov	x3, #0x55                  	// #85
    1484:	add	x22, sp, #0x158
    1488:	stp	x25, x26, [sp, #64]
    148c:	add	x25, sp, #0x70
    1490:	mov	x1, x22
    1494:	mov	x8, x25
    1498:	stp	x23, x24, [sp, #48]
    149c:	str	x3, [sp, #344]
    14a0:	str	w2, [sp, #352]
    14a4:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    14a8:	ldr	w0, [sp, #352]
    14ac:	cmp	w0, #0x40
    14b0:	b.ls	14c0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb0>  // b.plast
    14b4:	ldr	x0, [sp, #344]
    14b8:	cbz	x0, 14c0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb0>
    14bc:	bl	0 <_ZdaPv>
    14c0:	mov	w2, #0x8                   	// #8
    14c4:	mov	x3, #0x33                  	// #51
    14c8:	add	x23, sp, #0x80
    14cc:	mov	w0, w21
    14d0:	mov	x8, x23
    14d4:	mov	x1, x22
    14d8:	str	x3, [sp, #344]
    14dc:	str	w2, [sp, #352]
    14e0:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    14e4:	ldr	w0, [sp, #352]
    14e8:	cmp	w0, #0x40
    14ec:	b.ls	14fc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xec>  // b.plast
    14f0:	ldr	x0, [sp, #344]
    14f4:	cbz	x0, 14fc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xec>
    14f8:	bl	0 <_ZdaPv>
    14fc:	mov	w2, #0x8                   	// #8
    1500:	mov	x3, #0xf                   	// #15
    1504:	add	x24, sp, #0x90
    1508:	mov	w0, w21
    150c:	mov	x8, x24
    1510:	mov	x1, x22
    1514:	str	x3, [sp, #344]
    1518:	str	w2, [sp, #352]
    151c:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    1520:	ldr	w0, [sp, #352]
    1524:	cmp	w0, #0x40
    1528:	b.ls	1538 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x128>  // b.plast
    152c:	ldr	x0, [sp, #344]
    1530:	cbz	x0, 1538 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x128>
    1534:	bl	0 <_ZdaPv>
    1538:	mov	w2, #0x8                   	// #8
    153c:	mov	x3, #0x1                   	// #1
    1540:	add	x20, sp, #0xa0
    1544:	mov	w0, w21
    1548:	mov	x8, x20
    154c:	mov	x1, x22
    1550:	str	x3, [sp, #344]
    1554:	str	w2, [sp, #352]
    1558:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    155c:	ldr	w0, [sp, #352]
    1560:	cmp	w0, #0x40
    1564:	b.ls	1574 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x164>  // b.plast
    1568:	ldr	x0, [sp, #344]
    156c:	cbz	x0, 1574 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x164>
    1570:	bl	0 <_ZdaPv>
    1574:	str	w21, [sp, #184]
    1578:	cmp	w21, #0x40
    157c:	sub	w1, w21, #0x8
    1580:	b.ls	1704 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2f4>  // b.plast
    1584:	add	x0, sp, #0xb0
    1588:	mov	w2, #0x0                   	// #0
    158c:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    1590:	ldr	w0, [x19, #20]
    1594:	ubfx	x0, x0, #0, #28
    1598:	cbz	w0, 17f0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3e0>
    159c:	ldrb	w1, [x19, #23]
    15a0:	tbz	w1, #6, 17dc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3cc>
    15a4:	ldur	x1, [x19, #-8]
    15a8:	cmp	w0, #0x1
    15ac:	ldr	x21, [x1]
    15b0:	b.ls	17f0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3e0>  // b.plast
    15b4:	ldr	w0, [sp, #168]
    15b8:	ldr	x26, [x1, #24]
    15bc:	str	w0, [sp, #248]
    15c0:	cmp	w0, #0x40
    15c4:	b.hi	1844 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x434>  // b.pmore
    15c8:	ldr	x1, [sp, #160]
    15cc:	add	x2, sp, #0x58
    15d0:	str	x1, [sp, #240]
    15d4:	str	wzr, [sp, #248]
    15d8:	str	x1, [sp, #256]
    15dc:	str	w0, [sp, #264]
    15e0:	str	x2, [sp, #344]
    15e4:	str	w0, [sp, #360]
    15e8:	str	x1, [sp, #352]
    15ec:	ldrb	w0, [x21, #16]
    15f0:	cmp	w0, #0x29
    15f4:	b.eq	1810 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x400>  // b.none
    15f8:	cmp	w0, #0x5
    15fc:	b.eq	171c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x30c>  // b.none
    1600:	mov	w20, #0x0                   	// #0
    1604:	ldr	w0, [sp, #360]
    1608:	cmp	w0, #0x40
    160c:	b.ls	161c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x20c>  // b.plast
    1610:	ldr	x0, [sp, #352]
    1614:	cbz	x0, 161c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x20c>
    1618:	bl	0 <_ZdaPv>
    161c:	ldr	w0, [sp, #264]
    1620:	cmp	w0, #0x40
    1624:	b.ls	1634 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x224>  // b.plast
    1628:	ldr	x0, [sp, #256]
    162c:	cbz	x0, 1634 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x224>
    1630:	bl	0 <_ZdaPv>
    1634:	ldr	w0, [sp, #248]
    1638:	cmp	w0, #0x40
    163c:	b.ls	164c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x23c>  // b.plast
    1640:	ldr	x0, [sp, #240]
    1644:	cbz	x0, 164c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x23c>
    1648:	bl	0 <_ZdaPv>
    164c:	cbnz	w20, 1888 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x478>
    1650:	ldr	w0, [sp, #184]
    1654:	cmp	w0, #0x40
    1658:	b.ls	1668 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x258>  // b.plast
    165c:	ldr	x0, [sp, #176]
    1660:	cbz	x0, 1668 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x258>
    1664:	bl	0 <_ZdaPv>
    1668:	ldr	w0, [sp, #168]
    166c:	cmp	w0, #0x40
    1670:	b.ls	1680 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x270>  // b.plast
    1674:	ldr	x0, [sp, #160]
    1678:	cbz	x0, 1680 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x270>
    167c:	bl	0 <_ZdaPv>
    1680:	ldr	w0, [sp, #152]
    1684:	cmp	w0, #0x40
    1688:	b.ls	1698 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x288>  // b.plast
    168c:	ldr	x0, [sp, #144]
    1690:	cbz	x0, 1698 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x288>
    1694:	bl	0 <_ZdaPv>
    1698:	ldr	w0, [sp, #136]
    169c:	cmp	w0, #0x40
    16a0:	b.ls	16b0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2a0>  // b.plast
    16a4:	ldr	x0, [sp, #128]
    16a8:	cbz	x0, 16b0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2a0>
    16ac:	bl	0 <_ZdaPv>
    16b0:	ldr	w0, [sp, #120]
    16b4:	cmp	w0, #0x40
    16b8:	b.ls	17cc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3bc>  // b.plast
    16bc:	ldr	x0, [sp, #112]
    16c0:	cbz	x0, 17cc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3bc>
    16c4:	bl	0 <_ZdaPv>
    16c8:	ldp	x21, x22, [sp, #32]
    16cc:	ldp	x23, x24, [sp, #48]
    16d0:	ldp	x25, x26, [sp, #64]
    16d4:	b	1448 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x38>
    16d8:	ldr	x1, [x0, #16]
    16dc:	ldr	x1, [x1]
    16e0:	ldrb	w1, [x1, #8]
    16e4:	cmp	w1, #0xb
    16e8:	b.ne	1444 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x34>  // b.any
    16ec:	b	1458 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x48>
    16f0:	mov	w20, #0x0                   	// #0
    16f4:	ldp	x21, x22, [sp, #32]
    16f8:	b	1448 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x38>
    16fc:	ldp	x21, x22, [sp, #32]
    1700:	b	1448 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x38>
    1704:	neg	w21, w21
    1708:	mov	x2, #0xffffffffffffffff    	// #-1
    170c:	lsr	x21, x2, x21
    1710:	and	x21, x21, x1
    1714:	str	x21, [sp, #176]
    1718:	b	1590 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x180>
    171c:	ldrh	w0, [x21, #18]
    1720:	cmp	w0, #0x11
    1724:	b.ne	1600 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f0>  // b.any
    1728:	mov	x0, x21
    172c:	mov	w1, #0x0                   	// #0
    1730:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1734:	mov	x2, x0
    1738:	cbz	x0, 239c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf8c>
    173c:	ldr	x3, [sp, #344]
    1740:	mov	w1, #0x1                   	// #1
    1744:	mov	x0, x21
    1748:	str	x2, [x3]
    174c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1750:	mov	x1, x0
    1754:	add	x0, x22, #0x8
    1758:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    175c:	tst	w0, #0xff
    1760:	b.eq	1600 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f0>  // b.none
    1764:	ldr	w2, [sp, #184]
    1768:	str	w2, [sp, #288]
    176c:	cmp	w2, #0x40
    1770:	b.hi	1f4c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb3c>  // b.pmore
    1774:	ldr	x3, [sp, #176]
    1778:	str	x3, [sp, #280]
    177c:	mov	x1, x26
    1780:	add	x0, sp, #0x130
    1784:	str	wzr, [sp, #288]
    1788:	str	x3, [sp, #304]
    178c:	str	w2, [sp, #312]
    1790:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1794:	ldr	w1, [sp, #312]
    1798:	and	w20, w0, #0xff
    179c:	cmp	w1, #0x40
    17a0:	b.ls	17b0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3a0>  // b.plast
    17a4:	ldr	x0, [sp, #304]
    17a8:	cbz	x0, 17b0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3a0>
    17ac:	bl	0 <_ZdaPv>
    17b0:	ldr	w0, [sp, #288]
    17b4:	cmp	w0, #0x40
    17b8:	b.ls	1604 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f4>  // b.plast
    17bc:	ldr	x0, [sp, #280]
    17c0:	cbz	x0, 1604 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f4>
    17c4:	bl	0 <_ZdaPv>
    17c8:	b	1604 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f4>
    17cc:	ldp	x21, x22, [sp, #32]
    17d0:	ldp	x23, x24, [sp, #48]
    17d4:	ldp	x25, x26, [sp, #64]
    17d8:	b	1448 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x38>
    17dc:	mov	w1, #0x18                  	// #24
    17e0:	cmp	w0, #0x1
    17e4:	umsubl	x1, w0, w1, x19
    17e8:	ldr	x21, [x1]
    17ec:	b.hi	15b4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1a4>  // b.pmore
    17f0:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    17f4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    17f8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    17fc:	add	x3, x3, #0x0
    1800:	add	x1, x1, #0x0
    1804:	add	x0, x0, #0x0
    1808:	mov	w2, #0xaa                  	// #170
    180c:	bl	0 <__assert_fail>
    1810:	mov	x0, x21
    1814:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1818:	ldur	x2, [x0, #-48]
    181c:	mov	x1, x0
    1820:	cbz	x2, 21bc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xdac>
    1824:	ldr	x3, [sp, #344]
    1828:	add	x0, x22, #0x8
    182c:	str	x2, [x3]
    1830:	ldur	x1, [x1, #-24]
    1834:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1838:	tst	w0, #0xff
    183c:	b.ne	1764 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x354>  // b.any
    1840:	b	1600 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f0>
    1844:	mov	x1, x20
    1848:	add	x0, sp, #0xf0
    184c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1850:	ldr	w0, [sp, #248]
    1854:	add	x2, sp, #0x58
    1858:	ldr	x1, [sp, #240]
    185c:	str	wzr, [sp, #248]
    1860:	str	x1, [sp, #256]
    1864:	cmp	w0, #0x40
    1868:	str	w0, [sp, #264]
    186c:	str	x2, [sp, #344]
    1870:	str	w0, [sp, #360]
    1874:	b.ls	15e8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1d8>  // b.plast
    1878:	add	x1, sp, #0x100
    187c:	add	x0, x22, #0x8
    1880:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1884:	b	15ec <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1dc>
    1888:	ldr	w0, [sp, #152]
    188c:	add	x1, sp, #0x60
    1890:	mov	w2, #0x40                  	// #64
    1894:	mov	x3, #0x4                   	// #4
    1898:	str	w0, [sp, #264]
    189c:	cmp	w0, w2
    18a0:	stp	x1, x3, [sp, #304]
    18a4:	str	w2, [sp, #320]
    18a8:	str	x1, [sp, #328]
    18ac:	ldr	x20, [sp, #88]
    18b0:	b.hi	2030 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc20>  // b.pmore
    18b4:	ldr	x3, [sp, #144]
    18b8:	str	x3, [sp, #256]
    18bc:	str	wzr, [sp, #264]
    18c0:	str	x3, [sp, #280]
    18c4:	str	w0, [sp, #288]
    18c8:	str	x1, [sp, #344]
    18cc:	str	w2, [sp, #360]
    18d0:	ldr	x1, [sp, #312]
    18d4:	str	x1, [sp, #352]
    18d8:	ldr	x1, [sp, #328]
    18dc:	str	x1, [sp, #368]
    18e0:	str	w0, [sp, #384]
    18e4:	cmp	w0, #0x40
    18e8:	b.hi	2020 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc10>  // b.pmore
    18ec:	ldr	x0, [sp, #280]
    18f0:	str	x0, [sp, #376]
    18f4:	ldrb	w0, [x20, #16]
    18f8:	cmp	w0, #0x34
    18fc:	b.eq	1f64 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb54>  // b.none
    1900:	cmp	w0, #0x5
    1904:	b.eq	1b90 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x780>  // b.none
    1908:	mov	w20, #0x0                   	// #0
    190c:	ldr	w0, [sp, #384]
    1910:	cmp	w0, #0x40
    1914:	b.ls	1924 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x514>  // b.plast
    1918:	ldr	x0, [sp, #376]
    191c:	cbz	x0, 1924 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x514>
    1920:	bl	0 <_ZdaPv>
    1924:	ldr	w0, [sp, #360]
    1928:	cmp	w0, #0x40
    192c:	b.ls	193c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x52c>  // b.plast
    1930:	ldr	x0, [sp, #352]
    1934:	cbz	x0, 193c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x52c>
    1938:	bl	0 <_ZdaPv>
    193c:	ldr	w0, [sp, #288]
    1940:	cmp	w0, #0x40
    1944:	b.ls	1954 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x544>  // b.plast
    1948:	ldr	x0, [sp, #280]
    194c:	cbz	x0, 1954 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x544>
    1950:	bl	0 <_ZdaPv>
    1954:	ldr	w0, [sp, #264]
    1958:	cmp	w0, #0x40
    195c:	b.ls	196c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x55c>  // b.plast
    1960:	ldr	x0, [sp, #256]
    1964:	cbz	x0, 196c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x55c>
    1968:	bl	0 <_ZdaPv>
    196c:	ldr	w0, [sp, #320]
    1970:	cmp	w0, #0x40
    1974:	b.ls	1984 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x574>  // b.plast
    1978:	ldr	x0, [sp, #312]
    197c:	cbz	x0, 1984 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x574>
    1980:	bl	0 <_ZdaPv>
    1984:	cbz	w20, 1b88 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x778>
    1988:	ldr	w0, [sp, #136]
    198c:	str	w0, [sp, #200]
    1990:	cmp	w0, #0x40
    1994:	ldr	x21, [sp, #96]
    1998:	b.hi	2108 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xcf8>  // b.pmore
    199c:	ldr	x1, [sp, #128]
    19a0:	add	x20, sp, #0x68
    19a4:	str	x1, [sp, #192]
    19a8:	str	wzr, [sp, #200]
    19ac:	str	x1, [sp, #208]
    19b0:	str	w0, [sp, #216]
    19b4:	str	x20, [sp, #256]
    19b8:	str	w0, [sp, #272]
    19bc:	str	x1, [sp, #264]
    19c0:	mov	w1, #0x40                  	// #64
    19c4:	mov	x2, #0x2                   	// #2
    19c8:	str	w0, [sp, #232]
    19cc:	cmp	w0, w1
    19d0:	stp	x20, x2, [sp, #280]
    19d4:	str	w1, [sp, #296]
    19d8:	b.hi	20bc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xcac>  // b.pmore
    19dc:	ldr	x2, [sp, #128]
    19e0:	str	x2, [sp, #224]
    19e4:	str	wzr, [sp, #232]
    19e8:	str	x2, [sp, #240]
    19ec:	str	w0, [sp, #248]
    19f0:	str	x20, [sp, #304]
    19f4:	str	w1, [sp, #320]
    19f8:	ldr	x1, [sp, #288]
    19fc:	str	x1, [sp, #312]
    1a00:	str	w0, [sp, #336]
    1a04:	cmp	w0, #0x40
    1a08:	b.hi	20ac <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc9c>  // b.pmore
    1a0c:	ldr	x0, [sp, #240]
    1a10:	str	x0, [sp, #328]
    1a14:	ldr	x0, [sp, #256]
    1a18:	str	x0, [sp, #344]
    1a1c:	ldr	w0, [sp, #272]
    1a20:	str	w0, [sp, #360]
    1a24:	cmp	w0, #0x40
    1a28:	b.hi	209c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc8c>  // b.pmore
    1a2c:	ldr	x0, [sp, #264]
    1a30:	str	x0, [sp, #352]
    1a34:	ldr	x0, [sp, #304]
    1a38:	str	x0, [sp, #368]
    1a3c:	ldr	w0, [sp, #320]
    1a40:	str	w0, [sp, #384]
    1a44:	cmp	w0, #0x40
    1a48:	b.hi	208c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc7c>  // b.pmore
    1a4c:	ldr	x0, [sp, #312]
    1a50:	str	x0, [sp, #376]
    1a54:	ldr	w0, [sp, #336]
    1a58:	str	w0, [sp, #400]
    1a5c:	cmp	w0, #0x40
    1a60:	b.hi	207c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc6c>  // b.pmore
    1a64:	ldr	x0, [sp, #328]
    1a68:	str	x0, [sp, #392]
    1a6c:	mov	x1, x21
    1a70:	mov	x0, x22
    1a74:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1a78:	and	w20, w0, #0xff
    1a7c:	ldr	w1, [sp, #400]
    1a80:	cmp	w1, #0x40
    1a84:	b.ls	1a94 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x684>  // b.plast
    1a88:	ldr	x0, [sp, #392]
    1a8c:	cbz	x0, 1a94 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x684>
    1a90:	bl	0 <_ZdaPv>
    1a94:	ldr	w0, [sp, #384]
    1a98:	cmp	w0, #0x40
    1a9c:	b.ls	1aac <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x69c>  // b.plast
    1aa0:	ldr	x0, [sp, #376]
    1aa4:	cbz	x0, 1aac <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x69c>
    1aa8:	bl	0 <_ZdaPv>
    1aac:	ldr	w0, [sp, #360]
    1ab0:	cmp	w0, #0x40
    1ab4:	b.ls	1ac4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6b4>  // b.plast
    1ab8:	ldr	x0, [sp, #352]
    1abc:	cbz	x0, 1ac4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6b4>
    1ac0:	bl	0 <_ZdaPv>
    1ac4:	ldr	w0, [sp, #336]
    1ac8:	cmp	w0, #0x40
    1acc:	b.ls	1adc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6cc>  // b.plast
    1ad0:	ldr	x0, [sp, #328]
    1ad4:	cbz	x0, 1adc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6cc>
    1ad8:	bl	0 <_ZdaPv>
    1adc:	ldr	w0, [sp, #320]
    1ae0:	cmp	w0, #0x40
    1ae4:	b.ls	1af4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6e4>  // b.plast
    1ae8:	ldr	x0, [sp, #312]
    1aec:	cbz	x0, 1af4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6e4>
    1af0:	bl	0 <_ZdaPv>
    1af4:	ldr	w0, [sp, #248]
    1af8:	cmp	w0, #0x40
    1afc:	b.ls	1b0c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6fc>  // b.plast
    1b00:	ldr	x0, [sp, #240]
    1b04:	cbz	x0, 1b0c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6fc>
    1b08:	bl	0 <_ZdaPv>
    1b0c:	ldr	w0, [sp, #232]
    1b10:	cmp	w0, #0x40
    1b14:	b.ls	1b24 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x714>  // b.plast
    1b18:	ldr	x0, [sp, #224]
    1b1c:	cbz	x0, 1b24 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x714>
    1b20:	bl	0 <_ZdaPv>
    1b24:	ldr	w0, [sp, #296]
    1b28:	cmp	w0, #0x40
    1b2c:	b.ls	1b3c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x72c>  // b.plast
    1b30:	ldr	x0, [sp, #288]
    1b34:	cbz	x0, 1b3c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x72c>
    1b38:	bl	0 <_ZdaPv>
    1b3c:	ldr	w0, [sp, #272]
    1b40:	cmp	w0, #0x40
    1b44:	b.ls	1b54 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x744>  // b.plast
    1b48:	ldr	x0, [sp, #264]
    1b4c:	cbz	x0, 1b54 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x744>
    1b50:	bl	0 <_ZdaPv>
    1b54:	ldr	w0, [sp, #216]
    1b58:	cmp	w0, #0x40
    1b5c:	b.ls	1b6c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x75c>  // b.plast
    1b60:	ldr	x0, [sp, #208]
    1b64:	cbz	x0, 1b6c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x75c>
    1b68:	bl	0 <_ZdaPv>
    1b6c:	ldr	w0, [sp, #200]
    1b70:	cmp	w0, #0x40
    1b74:	b.ls	1b84 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x774>  // b.plast
    1b78:	ldr	x0, [sp, #192]
    1b7c:	cbz	x0, 1b84 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x774>
    1b80:	bl	0 <_ZdaPv>
    1b84:	cbnz	w20, 1c60 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x850>
    1b88:	mov	w20, #0x0                   	// #0
    1b8c:	b	1650 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x240>
    1b90:	ldrh	w0, [x20, #18]
    1b94:	cmp	w0, #0x1c
    1b98:	b.ne	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1b9c:	mov	w1, #0x0                   	// #0
    1ba0:	mov	x0, x20
    1ba4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ba8:	ldrb	w1, [x0, #16]
    1bac:	mov	x21, x0
    1bb0:	cmp	w1, #0x25
    1bb4:	b.eq	21c8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xdb8>  // b.none
    1bb8:	cmp	w1, #0x5
    1bbc:	b.ne	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1bc0:	ldrh	w1, [x0, #18]
    1bc4:	cmp	w1, #0xd
    1bc8:	b.ne	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1bcc:	mov	w1, #0x0                   	// #0
    1bd0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1bd4:	mov	x1, x0
    1bd8:	mov	x0, x22
    1bdc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1be0:	tst	w0, #0xff
    1be4:	b.eq	1c04 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x7f4>  // b.none
    1be8:	mov	w1, #0x1                   	// #1
    1bec:	mov	x0, x21
    1bf0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1bf4:	ldr	x1, [sp, #368]
    1bf8:	ldr	x1, [x1]
    1bfc:	cmp	x1, x0
    1c00:	b.eq	1c40 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x830>  // b.none
    1c04:	mov	w1, #0x1                   	// #1
    1c08:	mov	x0, x21
    1c0c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c10:	mov	x1, x0
    1c14:	mov	x0, x22
    1c18:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c1c:	tst	w0, #0xff
    1c20:	b.eq	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.none
    1c24:	mov	w1, #0x0                   	// #0
    1c28:	mov	x0, x21
    1c2c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c30:	ldr	x1, [sp, #368]
    1c34:	ldr	x1, [x1]
    1c38:	cmp	x1, x0
    1c3c:	b.ne	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1c40:	mov	x0, x20
    1c44:	mov	w1, #0x1                   	// #1
    1c48:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c4c:	mov	x1, x0
    1c50:	add	x0, x22, #0x20
    1c54:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c58:	and	w20, w0, #0xff
    1c5c:	b	190c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4fc>
    1c60:	ldr	x0, [sp, #104]
    1c64:	ldrb	w1, [x0, #16]
    1c68:	cmp	w1, #0x27
    1c6c:	b.eq	21a8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xd98>  // b.none
    1c70:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c74:	mov	x20, x0
    1c78:	cbz	x0, 1b88 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x778>
    1c7c:	ldrh	w1, [x0, #18]
    1c80:	cmp	w1, #0xf
    1c84:	b.ne	1b88 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x778>  // b.any
    1c88:	mov	w1, #0x0                   	// #0
    1c8c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c90:	mov	x21, x0
    1c94:	cbz	x0, 239c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf8c>
    1c98:	mov	x0, x20
    1c9c:	mov	w1, #0x1                   	// #1
    1ca0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ca4:	mov	x20, x0
    1ca8:	cbz	x0, 239c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf8c>
    1cac:	ldr	w0, [sp, #120]
    1cb0:	mov	w1, #0x40                  	// #64
    1cb4:	mov	x2, #0x1                   	// #1
    1cb8:	str	w0, [sp, #264]
    1cbc:	stp	x21, x2, [sp, #304]
    1cc0:	cmp	w0, w1
    1cc4:	str	w1, [sp, #320]
    1cc8:	b.hi	229c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xe8c>  // b.pmore
    1ccc:	ldr	x0, [sp, #112]
    1cd0:	str	x0, [sp, #256]
    1cd4:	ldr	x0, [sp, #256]
    1cd8:	str	x0, [sp, #280]
    1cdc:	ldr	w2, [sp, #264]
    1ce0:	ldr	w0, [sp, #320]
    1ce4:	ldr	x1, [sp, #304]
    1ce8:	str	wzr, [sp, #264]
    1cec:	str	w2, [sp, #288]
    1cf0:	cmp	w0, #0x40
    1cf4:	str	x1, [sp, #344]
    1cf8:	str	w0, [sp, #360]
    1cfc:	b.hi	2318 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf08>  // b.pmore
    1d00:	ldr	x0, [sp, #312]
    1d04:	str	x0, [sp, #352]
    1d08:	ldr	w0, [sp, #288]
    1d0c:	str	w0, [sp, #376]
    1d10:	cmp	w0, #0x40
    1d14:	b.hi	2308 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xef8>  // b.pmore
    1d18:	ldr	x0, [sp, #280]
    1d1c:	str	x0, [sp, #368]
    1d20:	ldrb	w0, [x20, #16]
    1d24:	cmp	w0, #0x34
    1d28:	b.eq	2220 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xe10>  // b.none
    1d2c:	cmp	w0, #0x5
    1d30:	b.eq	1ebc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xaac>  // b.none
    1d34:	mov	w20, #0x0                   	// #0
    1d38:	ldr	w0, [sp, #376]
    1d3c:	cmp	w0, #0x40
    1d40:	b.ls	1d50 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x940>  // b.plast
    1d44:	ldr	x0, [sp, #368]
    1d48:	cbz	x0, 1d50 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x940>
    1d4c:	bl	0 <_ZdaPv>
    1d50:	ldr	w0, [sp, #360]
    1d54:	cmp	w0, #0x40
    1d58:	b.ls	1d68 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x958>  // b.plast
    1d5c:	ldr	x0, [sp, #352]
    1d60:	cbz	x0, 1d68 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x958>
    1d64:	bl	0 <_ZdaPv>
    1d68:	ldr	w0, [sp, #288]
    1d6c:	cmp	w0, #0x40
    1d70:	b.ls	1d80 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x970>  // b.plast
    1d74:	ldr	x0, [sp, #280]
    1d78:	cbz	x0, 1d80 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x970>
    1d7c:	bl	0 <_ZdaPv>
    1d80:	ldr	w0, [sp, #264]
    1d84:	cmp	w0, #0x40
    1d88:	b.ls	1d98 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x988>  // b.plast
    1d8c:	ldr	x0, [sp, #256]
    1d90:	cbz	x0, 1d98 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x988>
    1d94:	bl	0 <_ZdaPv>
    1d98:	ldr	w0, [sp, #320]
    1d9c:	cmp	w0, #0x40
    1da0:	b.ls	1db0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9a0>  // b.plast
    1da4:	ldr	x0, [sp, #312]
    1da8:	cbz	x0, 1db0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9a0>
    1dac:	bl	0 <_ZdaPv>
    1db0:	cbz	w20, 1b88 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x778>
    1db4:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    1db8:	ldr	x0, [x0]
    1dbc:	ldrb	w0, [x0]
    1dc0:	cbnz	w0, 22ac <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xe9c>
    1dc4:	mov	x0, x19
    1dc8:	bl	0 <_ZNK4llvm5Value10getContextEv>
    1dcc:	ldr	x1, [x19, #40]
    1dd0:	add	x2, x19, #0x18
    1dd4:	mov	w3, #0x200                 	// #512
    1dd8:	stp	xzr, x1, [sp, #344]
    1ddc:	add	x1, x1, #0x28
    1de0:	stp	x2, x0, [sp, #360]
    1de4:	cmp	x2, x1
    1de8:	str	xzr, [sp, #376]
    1dec:	str	wzr, [sp, #384]
    1df0:	strh	w3, [sp, #388]
    1df4:	strb	wzr, [sp, #390]
    1df8:	stp	xzr, xzr, [sp, #392]
    1dfc:	b.eq	2374 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf64>  // b.none
    1e00:	ldr	x1, [x19, #48]
    1e04:	str	x1, [sp, #304]
    1e08:	add	x23, sp, #0x130
    1e0c:	cbz	x1, 1e44 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xa34>
    1e10:	mov	x0, x23
    1e14:	mov	x2, #0x2                   	// #2
    1e18:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    1e1c:	ldr	x1, [sp, #344]
    1e20:	cbz	x1, 1e2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xa1c>
    1e24:	mov	x0, x22
    1e28:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1e2c:	ldr	x1, [sp, #304]
    1e30:	str	x1, [sp, #344]
    1e34:	cbz	x1, 1e44 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xa34>
    1e38:	mov	x2, x22
    1e3c:	mov	x0, x23
    1e40:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    1e44:	mov	x0, x19
    1e48:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    1e4c:	ldr	x4, [x19]
    1e50:	mov	x2, x23
    1e54:	mov	x3, #0x1                   	// #1
    1e58:	mov	w1, #0x27                  	// #39
    1e5c:	str	x4, [sp, #304]
    1e60:	add	x25, sp, #0x118
    1e64:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    1e68:	mov	x24, x0
    1e6c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1e70:	mov	x0, x23
    1e74:	add	x1, x1, #0x0
    1e78:	str	x21, [sp, #280]
    1e7c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1e80:	mov	x4, x23
    1e84:	mov	x2, x25
    1e88:	mov	x5, #0x0                   	// #0
    1e8c:	mov	x3, #0x1                   	// #1
    1e90:	mov	x1, x24
    1e94:	mov	x0, x22
    1e98:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1e9c:	mov	x1, x0
    1ea0:	mov	x0, x19
    1ea4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1ea8:	ldr	x1, [sp, #344]
    1eac:	cbz	x1, 1650 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x240>
    1eb0:	mov	x0, x22
    1eb4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1eb8:	b	1650 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x240>
    1ebc:	ldrh	w0, [x20, #18]
    1ec0:	cmp	w0, #0x1c
    1ec4:	b.ne	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    1ec8:	mov	w1, #0x0                   	// #0
    1ecc:	mov	x0, x20
    1ed0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ed4:	ldrb	w1, [x0, #16]
    1ed8:	mov	x23, x0
    1edc:	cmp	w1, #0x32
    1ee0:	b.eq	23a0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf90>  // b.none
    1ee4:	cmp	w1, #0x5
    1ee8:	b.ne	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    1eec:	ldrh	w1, [x0, #18]
    1ef0:	cmp	w1, #0x1a
    1ef4:	b.ne	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    1ef8:	mov	w1, #0x0                   	// #0
    1efc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f00:	ldr	x1, [sp, #344]
    1f04:	cmp	x1, x0
    1f08:	b.ne	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    1f0c:	mov	w1, #0x1                   	// #1
    1f10:	mov	x0, x23
    1f14:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f18:	mov	x1, x0
    1f1c:	add	x0, x22, #0x8
    1f20:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f24:	tst	w0, #0xff
    1f28:	b.eq	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.none
    1f2c:	mov	x0, x20
    1f30:	mov	w1, #0x1                   	// #1
    1f34:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f38:	mov	x1, x0
    1f3c:	add	x0, x22, #0x18
    1f40:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f44:	and	w20, w0, #0xff
    1f48:	b	1d38 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x928>
    1f4c:	add	x1, sp, #0xb0
    1f50:	add	x0, sp, #0x118
    1f54:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1f58:	ldr	w2, [sp, #288]
    1f5c:	ldr	x3, [sp, #280]
    1f60:	b	177c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x36c>
    1f64:	mov	x0, x20
    1f68:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f6c:	mov	x20, x0
    1f70:	ldur	x0, [x0, #-48]
    1f74:	ldrb	w1, [x0, #16]
    1f78:	cmp	w1, #0x25
    1f7c:	b.eq	2150 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xd40>  // b.none
    1f80:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f84:	mov	x21, x0
    1f88:	cbz	x0, 1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>
    1f8c:	ldrh	w1, [x0, #18]
    1f90:	cmp	w1, #0xd
    1f94:	b.ne	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1f98:	mov	w1, #0x0                   	// #0
    1f9c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fa0:	mov	x1, x0
    1fa4:	mov	x0, x22
    1fa8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fac:	tst	w0, #0xff
    1fb0:	b.eq	1fd0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xbc0>  // b.none
    1fb4:	mov	w1, #0x1                   	// #1
    1fb8:	mov	x0, x21
    1fbc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fc0:	ldr	x1, [sp, #368]
    1fc4:	ldr	x1, [x1]
    1fc8:	cmp	x1, x0
    1fcc:	b.eq	200c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xbfc>  // b.none
    1fd0:	mov	w1, #0x1                   	// #1
    1fd4:	mov	x0, x21
    1fd8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fdc:	mov	x1, x0
    1fe0:	mov	x0, x22
    1fe4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fe8:	tst	w0, #0xff
    1fec:	b.eq	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.none
    1ff0:	mov	w1, #0x0                   	// #0
    1ff4:	mov	x0, x21
    1ff8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ffc:	ldr	x1, [sp, #368]
    2000:	ldr	x1, [x1]
    2004:	cmp	x1, x0
    2008:	b.ne	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    200c:	ldur	x1, [x20, #-24]
    2010:	add	x0, x22, #0x20
    2014:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2018:	and	w20, w0, #0xff
    201c:	b	190c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4fc>
    2020:	add	x1, sp, #0x118
    2024:	add	x0, x22, #0x20
    2028:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    202c:	b	18f4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4e4>
    2030:	mov	x1, x24
    2034:	add	x0, sp, #0x100
    2038:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    203c:	ldr	x1, [sp, #256]
    2040:	str	x1, [sp, #280]
    2044:	ldr	w0, [sp, #264]
    2048:	ldr	w1, [sp, #320]
    204c:	ldr	x2, [sp, #304]
    2050:	str	wzr, [sp, #264]
    2054:	str	w0, [sp, #288]
    2058:	cmp	w1, #0x40
    205c:	str	x2, [sp, #344]
    2060:	str	w1, [sp, #360]
    2064:	b.ls	18d0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4c0>  // b.plast
    2068:	add	x0, x22, #0x8
    206c:	add	x1, sp, #0x138
    2070:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2074:	ldr	w0, [sp, #288]
    2078:	b	18d8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4c8>
    207c:	add	x1, sp, #0x148
    2080:	add	x0, x22, #0x30
    2084:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2088:	b	1a6c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x65c>
    208c:	add	x1, sp, #0x138
    2090:	add	x0, x22, #0x20
    2094:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2098:	b	1a54 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x644>
    209c:	add	x1, sp, #0x108
    20a0:	add	x0, x22, #0x8
    20a4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    20a8:	b	1a34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x624>
    20ac:	add	x1, sp, #0xf0
    20b0:	add	x0, sp, #0x148
    20b4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    20b8:	b	1a14 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x604>
    20bc:	mov	x1, x23
    20c0:	add	x0, sp, #0xe0
    20c4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    20c8:	ldr	x1, [sp, #224]
    20cc:	str	x1, [sp, #240]
    20d0:	ldr	w0, [sp, #232]
    20d4:	ldr	w1, [sp, #296]
    20d8:	ldr	x2, [sp, #280]
    20dc:	str	wzr, [sp, #232]
    20e0:	str	w0, [sp, #248]
    20e4:	cmp	w1, #0x40
    20e8:	str	x2, [sp, #304]
    20ec:	str	w1, [sp, #320]
    20f0:	b.ls	19f8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x5e8>  // b.plast
    20f4:	add	x0, sp, #0x138
    20f8:	add	x1, sp, #0x120
    20fc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2100:	ldr	w0, [sp, #248]
    2104:	b	1a00 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x5f0>
    2108:	mov	x1, x23
    210c:	add	x0, sp, #0xc0
    2110:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2114:	add	x20, sp, #0x68
    2118:	ldr	w0, [sp, #200]
    211c:	ldr	x1, [sp, #192]
    2120:	str	wzr, [sp, #200]
    2124:	str	x1, [sp, #208]
    2128:	cmp	w0, #0x40
    212c:	str	w0, [sp, #216]
    2130:	str	x20, [sp, #256]
    2134:	str	w0, [sp, #272]
    2138:	b.ls	2394 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf84>  // b.plast
    213c:	add	x0, sp, #0x108
    2140:	add	x1, sp, #0xd0
    2144:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2148:	ldr	w0, [sp, #136]
    214c:	b	19c0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x5b0>
    2150:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2154:	mov	x21, x0
    2158:	mov	x0, x22
    215c:	ldur	x1, [x21, #-48]
    2160:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2164:	tst	w0, #0xff
    2168:	b.eq	21c0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xdb0>  // b.none
    216c:	ldr	x0, [sp, #368]
    2170:	ldur	x1, [x21, #-24]
    2174:	ldr	x0, [x0]
    2178:	cmp	x1, x0
    217c:	b.eq	200c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xbfc>  // b.none
    2180:	mov	x0, x22
    2184:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2188:	tst	w0, #0xff
    218c:	b.eq	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.none
    2190:	ldr	x1, [sp, #368]
    2194:	ldur	x0, [x21, #-48]
    2198:	ldr	x1, [x1]
    219c:	cmp	x1, x0
    21a0:	b.ne	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    21a4:	b	200c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xbfc>
    21a8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    21ac:	ldur	x21, [x0, #-48]
    21b0:	cbz	x21, 21bc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xdac>
    21b4:	ldur	x20, [x0, #-24]
    21b8:	cbnz	x20, 1cac <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x89c>
    21bc:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    21c0:	ldur	x1, [x21, #-24]
    21c4:	b	2180 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xd70>
    21c8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    21cc:	mov	x21, x0
    21d0:	mov	x0, x22
    21d4:	ldur	x1, [x21, #-48]
    21d8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    21dc:	tst	w0, #0xff
    21e0:	b.eq	2328 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf18>  // b.none
    21e4:	ldr	x0, [sp, #368]
    21e8:	ldur	x1, [x21, #-24]
    21ec:	ldr	x0, [x0]
    21f0:	cmp	x0, x1
    21f4:	b.eq	1c40 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x830>  // b.none
    21f8:	mov	x0, x22
    21fc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2200:	tst	w0, #0xff
    2204:	b.eq	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.none
    2208:	ldr	x1, [sp, #368]
    220c:	ldur	x0, [x21, #-48]
    2210:	ldr	x1, [x1]
    2214:	cmp	x1, x0
    2218:	b.ne	1908 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    221c:	b	1c40 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x830>
    2220:	mov	x0, x20
    2224:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2228:	ldur	x20, [x0, #-48]
    222c:	mov	x23, x0
    2230:	ldrb	w0, [x20, #16]
    2234:	cmp	w0, #0x32
    2238:	b.eq	2330 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf20>  // b.none
    223c:	cmp	w0, #0x5
    2240:	b.ne	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    2244:	ldrh	w0, [x20, #18]
    2248:	cmp	w0, #0x1a
    224c:	b.ne	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    2250:	mov	w1, #0x0                   	// #0
    2254:	mov	x0, x20
    2258:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    225c:	ldr	x1, [sp, #344]
    2260:	cmp	x1, x0
    2264:	b.ne	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    2268:	mov	w1, #0x1                   	// #1
    226c:	mov	x0, x20
    2270:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2274:	mov	x1, x0
    2278:	add	x0, x22, #0x8
    227c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2280:	tst	w0, #0xff
    2284:	b.eq	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.none
    2288:	ldur	x1, [x23, #-24]
    228c:	add	x0, x22, #0x18
    2290:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2294:	and	w20, w0, #0xff
    2298:	b	1d38 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x928>
    229c:	mov	x1, x25
    22a0:	add	x0, sp, #0x100
    22a4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    22a8:	b	1cd4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x8c4>
    22ac:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    22b0:	add	x0, x0, #0x0
    22b4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    22b8:	tst	w0, #0xff
    22bc:	b.eq	1dc4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9b4>  // b.none
    22c0:	bl	0 <_ZN4llvm4dbgsEv>
    22c4:	mov	x1, x0
    22c8:	ldp	x2, x4, [x0, #16]
    22cc:	sub	x2, x2, x4
    22d0:	cmp	x2, #0x1d
    22d4:	b.ls	2360 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf50>  // b.plast
    22d8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    22dc:	add	x0, x0, #0x0
    22e0:	ldr	x2, [x0, #16]
    22e4:	str	x2, [x4, #16]
    22e8:	ldp	x2, x3, [x0]
    22ec:	stp	x2, x3, [x4]
    22f0:	ldur	x0, [x0, #22]
    22f4:	stur	x0, [x4, #22]
    22f8:	ldr	x0, [x1, #24]
    22fc:	add	x0, x0, #0x1e
    2300:	str	x0, [x1, #24]
    2304:	b	1dc4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9b4>
    2308:	add	x1, sp, #0x118
    230c:	add	x0, x22, #0x18
    2310:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2314:	b	1d20 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x910>
    2318:	add	x1, sp, #0x138
    231c:	add	x0, x22, #0x8
    2320:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2324:	b	1d08 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x8f8>
    2328:	ldur	x1, [x21, #-24]
    232c:	b	21f8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xde8>
    2330:	mov	x0, x20
    2334:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2338:	ldur	x1, [x0, #-48]
    233c:	ldr	x2, [sp, #344]
    2340:	cmp	x2, x1
    2344:	b.ne	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    2348:	ldur	x1, [x0, #-24]
    234c:	add	x0, x22, #0x8
    2350:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2354:	tst	w0, #0xff
    2358:	b.eq	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.none
    235c:	b	2288 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xe78>
    2360:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2364:	mov	x2, #0x1e                  	// #30
    2368:	add	x1, x1, #0x0
    236c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2370:	b	1dc4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9b4>
    2374:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2378:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    237c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2380:	add	x3, x3, #0x0
    2384:	add	x1, x1, #0x0
    2388:	add	x0, x0, #0x0
    238c:	mov	w2, #0x8e                  	// #142
    2390:	bl	0 <__assert_fail>
    2394:	ldr	w0, [sp, #136]
    2398:	b	19bc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x5ac>
    239c:	bl	1d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    23a0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    23a4:	ldur	x1, [x0, #-48]
    23a8:	ldr	x2, [sp, #344]
    23ac:	cmp	x2, x1
    23b0:	b.ne	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    23b4:	ldur	x1, [x0, #-24]
    23b8:	add	x0, x22, #0x8
    23bc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    23c0:	tst	w0, #0xff
    23c4:	b.eq	1d34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.none
    23c8:	b	1f2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb1c>
    23cc:	nop

00000000000023d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE>:
    23d0:	sub	sp, sp, #0x230
    23d4:	stp	x29, x30, [sp, #16]
    23d8:	add	x29, sp, #0x10
    23dc:	str	x1, [sp, #168]
    23e0:	add	x1, x0, #0x48
    23e4:	str	x0, [sp, #192]
    23e8:	ldr	x0, [x0, #80]
    23ec:	stp	x21, x22, [sp, #48]
    23f0:	str	x0, [sp, #120]
    23f4:	cmp	x0, x1
    23f8:	str	x1, [sp, #176]
    23fc:	b.eq	3658 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1288>  // b.none
    2400:	stp	x25, x26, [sp, #80]
    2404:	add	x25, sp, #0x1c8
    2408:	add	x0, x25, #0x8
    240c:	stp	x27, x28, [sp, #96]
    2410:	add	x27, sp, #0x1e8
    2414:	mov	w22, #0x0                   	// #0
    2418:	stp	x19, x20, [sp, #32]
    241c:	stp	x23, x24, [sp, #64]
    2420:	str	x0, [sp, #128]
    2424:	add	x0, x27, #0x2
    2428:	str	x0, [sp, #184]
    242c:	nop
    2430:	ldr	x0, [sp, #120]
    2434:	ldr	x0, [x0]
    2438:	tst	w0, #0x4
    243c:	b.ne	36e4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1314>  // b.any
    2440:	ldr	x0, [sp, #168]
    2444:	ldr	w1, [x0, #48]
    2448:	ldr	x2, [x0, #32]
    244c:	cbz	w1, 2938 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x568>
    2450:	ldr	x4, [sp, #120]
    2454:	cmp	x4, #0x8
    2458:	sub	x3, x4, #0x18
    245c:	cset	w0, ne  // ne = any
    2460:	cmp	x4, #0x10
    2464:	csel	w0, w0, wzr, ne  // ne = any
    2468:	str	w0, [sp, #116]
    246c:	cbz	w0, 36f4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1324>
    2470:	lsr	w0, w3, #9
    2474:	sub	w6, w1, #0x1
    2478:	eor	w0, w0, w3, lsr #4
    247c:	and	w0, w0, w6
    2480:	lsl	w5, w0, #4
    2484:	add	x4, x2, x5
    2488:	ldr	x5, [x2, x5]
    248c:	cmp	x3, x5
    2490:	b.ne	2928 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x558>  // b.any
    2494:	ubfiz	x1, x1, #4, #32
    2498:	add	x1, x2, x1
    249c:	cmp	x4, x1
    24a0:	b.eq	2938 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x568>  // b.none
    24a4:	ldr	x0, [x4, #8]
    24a8:	cbz	x0, 2938 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x568>
    24ac:	ldr	x26, [sp, #120]
    24b0:	ldr	x19, [x26, #16]!
    24b4:	and	x19, x19, #0xfffffffffffffff8
    24b8:	cmp	x26, x19
    24bc:	b.eq	2938 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x568>  // b.none
    24c0:	add	x24, sp, #0x1b0
    24c4:	b	2598 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1c8>
    24c8:	cmp	w0, #0x5
    24cc:	b.eq	2664 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x294>  // b.none
    24d0:	cmp	w0, #0x4f
    24d4:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    24d8:	ldr	w0, [x21, #20]
    24dc:	ubfx	x0, x0, #0, #28
    24e0:	cmp	w0, #0x2
    24e4:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    24e8:	ldur	x0, [x19, #-24]
    24ec:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    24f0:	cbz	w0, 2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>
    24f4:	sub	w1, w0, #0x1
    24f8:	tst	w1, w0
    24fc:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    2500:	ldrb	w0, [x21, #23]
    2504:	tbz	w0, #6, 2fe0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc10>
    2508:	ldur	x4, [x19, #-32]
    250c:	add	x28, sp, #0x190
    2510:	ldr	x5, [x4, #24]
    2514:	add	x1, sp, #0x170
    2518:	ldr	x23, [x4]
    251c:	mov	x2, x28
    2520:	str	x5, [sp, #136]
    2524:	mov	x0, x23
    2528:	str	x1, [sp, #160]
    252c:	bl	c60 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0>
    2530:	mov	w4, w0
    2534:	ldr	x5, [sp, #136]
    2538:	ldr	x1, [sp, #160]
    253c:	cbz	w0, 254c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x17c>
    2540:	ldr	x0, [sp, #368]
    2544:	cmp	x0, x5
    2548:	b.eq	3454 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1084>  // b.none
    254c:	mov	x2, x28
    2550:	mov	x0, x5
    2554:	str	x5, [sp, #136]
    2558:	bl	c60 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0>
    255c:	mov	w4, w0
    2560:	cbz	w0, 2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>
    2564:	ldr	x3, [sp, #368]
    2568:	cmp	x3, x23
    256c:	b.eq	31a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xdd0>  // b.none
    2570:	mov	x0, x21
    2574:	bl	1410 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE>
    2578:	ldr	x19, [x19]
    257c:	tst	w0, #0xff
    2580:	ccmp	w20, #0x0, #0x0, eq  // eq = none
    2584:	cset	w0, ne  // ne = any
    2588:	and	x19, x19, #0xfffffffffffffff8
    258c:	orr	w22, w22, w0
    2590:	cmp	x26, x19
    2594:	b.eq	2938 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x568>  // b.none
    2598:	ldr	x20, [x19]
    259c:	tst	w20, #0x4
    25a0:	ubfx	w20, w20, #2, #1
    25a4:	b.ne	3638 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1268>  // b.any
    25a8:	ldurb	w0, [x19, #-8]
    25ac:	sub	x21, x19, #0x18
    25b0:	cmp	w0, #0x34
    25b4:	b.ne	24c8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xf8>  // b.any
    25b8:	ldur	x23, [x19, #-72]
    25bc:	mov	x0, x23
    25c0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    25c4:	ldr	x0, [x23, #8]
    25c8:	cbz	x0, 25d4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x204>
    25cc:	ldr	x0, [x0, #8]
    25d0:	cbz	x0, 29b4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x5e4>
    25d4:	ldur	x23, [x19, #-48]
    25d8:	mov	x0, x23
    25dc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    25e0:	ldr	x0, [x23, #8]
    25e4:	cbz	x0, 25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>
    25e8:	ldr	x0, [x0, #8]
    25ec:	cbz	x0, 2fe8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc18>
    25f0:	ldurb	w0, [x19, #-8]
    25f4:	cmp	w0, #0x34
    25f8:	b.ne	34a4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x10d4>  // b.any
    25fc:	ldur	x23, [x19, #-72]
    2600:	mov	x0, x23
    2604:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2608:	ldr	x0, [x23, #8]
    260c:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    2610:	ldr	x0, [x0, #8]
    2614:	cbz	x0, 2620 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x250>
    2618:	ldurb	w0, [x19, #-8]
    261c:	b	24d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x100>
    2620:	ldrb	w0, [x23, #16]
    2624:	cmp	w0, #0x35
    2628:	b.eq	3084 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xcb4>  // b.none
    262c:	cmp	w0, #0x5
    2630:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    2634:	ldrh	w0, [x23, #18]
    2638:	cmp	w0, #0x1d
    263c:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    2640:	mov	x0, x23
    2644:	mov	w1, #0x0                   	// #0
    2648:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    264c:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    2650:	mov	x0, x23
    2654:	mov	w1, #0x1                   	// #1
    2658:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    265c:	cbnz	x0, 309c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xccc>
    2660:	bl	1d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    2664:	ldurh	w0, [x19, #-6]
    2668:	cmp	w0, #0x1c
    266c:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    2670:	ldr	w0, [x21, #20]
    2674:	ubfx	x0, x0, #0, #28
    2678:	cbz	w0, 37d4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1404>
    267c:	mov	w1, w0
    2680:	ubfiz	x0, x0, #2, #28
    2684:	sub	x0, x1, x0
    2688:	ldr	x23, [x21, x0, lsl #3]
    268c:	cbz	x23, 38a4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x14d4>
    2690:	ldrb	w0, [x23, #16]
    2694:	cmp	w0, #0x10
    2698:	b.hi	3724 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1354>  // b.pmore
    269c:	mov	x0, x23
    26a0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    26a4:	ldr	x0, [x23, #8]
    26a8:	cbz	x0, 26b4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x2e4>
    26ac:	ldr	x0, [x0, #8]
    26b0:	cbz	x0, 3040 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc70>
    26b4:	mov	w1, #0x1                   	// #1
    26b8:	mov	x0, x21
    26bc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    26c0:	mov	x23, x0
    26c4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    26c8:	ldr	x0, [x23, #8]
    26cc:	cbz	x0, 25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>
    26d0:	ldr	x0, [x0, #8]
    26d4:	cbnz	x0, 25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>
    26d8:	ldrb	w0, [x23, #16]
    26dc:	cmp	w0, #0x34
    26e0:	b.eq	3520 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1150>  // b.none
    26e4:	cmp	w0, #0x5
    26e8:	b.ne	25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>  // b.any
    26ec:	ldrh	w0, [x23, #18]
    26f0:	cmp	w0, #0x1c
    26f4:	b.ne	25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>  // b.any
    26f8:	mov	x0, x23
    26fc:	mov	w1, #0x0                   	// #0
    2700:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2704:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    2708:	mov	x0, x23
    270c:	mov	w1, #0x1                   	// #1
    2710:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2714:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    2718:	mov	x0, x21
    271c:	mov	w1, #0x0                   	// #0
    2720:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2724:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    2728:	ldr	w23, [sp, #116]
    272c:	ldur	x0, [x19, #-24]
    2730:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2734:	str	xzr, [sp, #456]
    2738:	str	w0, [sp, #472]
    273c:	cbz	w0, 3618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1248>
    2740:	cmp	w0, #0x40
    2744:	b.hi	2aa8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x6d8>  // b.pmore
    2748:	str	xzr, [sp, #464]
    274c:	strb	w23, [sp, #480]
    2750:	strb	wzr, [sp, #481]
    2754:	cbz	w23, 2a80 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x6b0>
    2758:	ldurb	w0, [x19, #-8]
    275c:	sub	w0, w0, #0x25
    2760:	cmp	w0, #0x11
    2764:	b.hi	3660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1290>  // b.pmore
    2768:	mov	x1, x25
    276c:	mov	x0, x21
    2770:	bl	428 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
    2774:	tst	w0, #0xff
    2778:	b.eq	2908 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x538>  // b.none
    277c:	ldrb	w0, [sp, #481]
    2780:	cbz	w0, 2908 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x538>
    2784:	mov	x0, x21
    2788:	bl	0 <_ZNK4llvm5Value10getContextEv>
    278c:	mov	w1, #0x200                 	// #512
    2790:	str	xzr, [sp, #504]
    2794:	strh	w1, [sp, #532]
    2798:	str	xzr, [sp, #536]
    279c:	str	xzr, [sp, #544]
    27a0:	str	xzr, [sp, #488]
    27a4:	ldr	x1, [x19, #16]
    27a8:	stp	x1, x19, [sp, #496]
    27ac:	str	x0, [sp, #512]
    27b0:	add	x1, x1, #0x28
    27b4:	str	xzr, [sp, #520]
    27b8:	cmp	x19, x1
    27bc:	str	wzr, [sp, #528]
    27c0:	strb	wzr, [sp, #534]
    27c4:	b.eq	3680 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x12b0>  // b.none
    27c8:	ldr	x1, [x19, #24]
    27cc:	str	x1, [sp, #432]
    27d0:	cbz	x1, 2808 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x438>
    27d4:	mov	x0, x24
    27d8:	mov	x2, #0x2                   	// #2
    27dc:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    27e0:	ldr	x1, [sp, #488]
    27e4:	cbz	x1, 27f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x420>
    27e8:	mov	x0, x27
    27ec:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    27f0:	ldr	x1, [sp, #432]
    27f4:	str	x1, [sp, #488]
    27f8:	cbz	x1, 2808 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x438>
    27fc:	mov	x2, x27
    2800:	mov	x0, x24
    2804:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    2808:	ldur	x0, [x19, #-24]
    280c:	add	x1, x25, #0x8
    2810:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeERKNS_5APIntE>
    2814:	stp	xzr, xzr, [sp, #304]
    2818:	mov	w1, #0x101                 	// #257
    281c:	strh	w1, [sp, #320]
    2820:	mov	x22, x0
    2824:	ldr	x28, [sp, #456]
    2828:	cbz	x0, 35f8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1228>
    282c:	ldrb	w0, [x22, #16]
    2830:	cmp	w0, #0x10
    2834:	b.hi	2abc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x6ec>  // b.pmore
    2838:	cmp	w0, #0xd
    283c:	b.eq	2a00 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x630>  // b.none
    2840:	cbz	x28, 35f8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1228>
    2844:	ldrb	w0, [x28, #16]
    2848:	cmp	w0, #0x10
    284c:	b.hi	2abc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x6ec>  // b.pmore
    2850:	mov	x0, x28
    2854:	mov	x1, x22
    2858:	bl	0 <_ZN4llvm12ConstantExpr6getAndEPNS_8ConstantES2_>
    285c:	mov	x28, x0
    2860:	cbz	w23, 2a30 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x660>
    2864:	mov	w0, #0x101                 	// #257
    2868:	stp	xzr, xzr, [sp, #272]
    286c:	strh	w0, [sp, #288]
    2870:	cbz	x28, 35f8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1228>
    2874:	ldrb	w0, [x28, #16]
    2878:	cmp	w0, #0x10
    287c:	b.hi	2ba4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x7d4>  // b.pmore
    2880:	ldrb	w0, [x22, #16]
    2884:	cmp	w0, #0x10
    2888:	b.hi	2ba4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x7d4>  // b.pmore
    288c:	mov	x2, x22
    2890:	mov	x1, x28
    2894:	mov	w3, #0x0                   	// #0
    2898:	mov	w0, #0x20                  	// #32
    289c:	bl	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
    28a0:	mov	x23, x0
    28a4:	nop
    28a8:	movi	v0.4s, #0x0
    28ac:	mov	w5, #0x101                 	// #257
    28b0:	ldur	x2, [x19, #-24]
    28b4:	strh	w5, [sp, #224]
    28b8:	ldr	x0, [x23]
    28bc:	str	q0, [sp, #208]
    28c0:	cmp	x2, x0
    28c4:	b.eq	28e8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x518>  // b.none
    28c8:	ldrb	w0, [x23, #16]
    28cc:	mov	x1, x23
    28d0:	cmp	w0, #0x10
    28d4:	b.hi	2ecc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xafc>  // b.pmore
    28d8:	mov	w3, #0x0                   	// #0
    28dc:	mov	w0, #0x27                  	// #39
    28e0:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    28e4:	mov	x23, x0
    28e8:	mov	x1, x23
    28ec:	mov	x0, x21
    28f0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    28f4:	ldr	x1, [sp, #488]
    28f8:	cbz	x1, 2904 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x534>
    28fc:	mov	x0, x27
    2900:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2904:	ldr	w22, [sp, #116]
    2908:	ldr	w0, [sp, #472]
    290c:	cmp	w0, #0x40
    2910:	b.ls	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.plast
    2914:	ldr	x0, [sp, #464]
    2918:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    291c:	bl	0 <_ZdaPv>
    2920:	ldurb	w0, [x19, #-8]
    2924:	b	24d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x100>
    2928:	mov	w4, #0x1                   	// #1
    292c:	cmn	x5, #0x8
    2930:	b.ne	358c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x11bc>  // b.any
    2934:	nop
    2938:	ldr	x0, [sp, #120]
    293c:	ldr	x1, [sp, #176]
    2940:	ldr	x0, [x0, #8]
    2944:	str	x0, [sp, #120]
    2948:	cmp	x1, x0
    294c:	b.ne	2430 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x60>  // b.any
    2950:	cbz	w22, 2990 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x5c0>
    2954:	ldr	x0, [sp, #192]
    2958:	ldr	x19, [x0, #80]
    295c:	ldr	x0, [sp, #120]
    2960:	cmp	x0, x19
    2964:	b.eq	2990 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x5c0>  // b.none
    2968:	ldr	x0, [x19]
    296c:	tst	w0, #0x4
    2970:	b.ne	36e4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1314>  // b.any
    2974:	sub	x0, x19, #0x18
    2978:	mov	x1, #0x0                   	// #0
    297c:	bl	0 <_ZN4llvm27SimplifyInstructionsInBlockEPNS_10BasicBlockEPKNS_17TargetLibraryInfoE>
    2980:	ldr	x19, [x19, #8]
    2984:	ldr	x0, [sp, #120]
    2988:	cmp	x0, x19
    298c:	b.ne	2968 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x598>  // b.any
    2990:	ldp	x19, x20, [sp, #32]
    2994:	ldp	x23, x24, [sp, #64]
    2998:	ldp	x25, x26, [sp, #80]
    299c:	ldp	x27, x28, [sp, #96]
    29a0:	mov	w0, w22
    29a4:	ldp	x29, x30, [sp, #16]
    29a8:	ldp	x21, x22, [sp, #48]
    29ac:	add	sp, sp, #0x230
    29b0:	ret
    29b4:	ldrb	w0, [x23, #16]
    29b8:	cmp	w0, #0x34
    29bc:	b.eq	2fcc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xbfc>  // b.none
    29c0:	cmp	w0, #0x5
    29c4:	b.ne	25d4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x204>  // b.any
    29c8:	ldrh	w0, [x23, #18]
    29cc:	cmp	w0, #0x1c
    29d0:	b.ne	25d4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x204>  // b.any
    29d4:	mov	x0, x23
    29d8:	mov	w1, #0x0                   	// #0
    29dc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    29e0:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    29e4:	mov	x0, x23
    29e8:	mov	w1, #0x1                   	// #1
    29ec:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    29f0:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    29f4:	ldur	x0, [x19, #-48]
    29f8:	cbnz	x0, 2728 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x358>
    29fc:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    2a00:	ldr	w1, [x22, #32]
    2a04:	cmp	w1, #0x40
    2a08:	b.ls	2fac <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xbdc>  // b.plast
    2a0c:	add	x0, x22, #0x18
    2a10:	str	w1, [sp, #136]
    2a14:	bl	0 <_ZNK4llvm5APInt25countTrailingOnesSlowCaseEv>
    2a18:	ldr	w1, [sp, #136]
    2a1c:	cmp	w1, w0
    2a20:	cset	w0, eq  // eq = none
    2a24:	cbz	w0, 2840 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x470>
    2a28:	cbnz	w23, 2864 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x494>
    2a2c:	nop
    2a30:	ldr	x0, [x28]
    2a34:	mov	w1, #0x101                 	// #257
    2a38:	stp	xzr, xzr, [sp, #240]
    2a3c:	strh	w1, [sp, #256]
    2a40:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
    2a44:	ldrb	w1, [x28, #16]
    2a48:	mov	x22, x0
    2a4c:	cmp	w1, #0x10
    2a50:	b.hi	2d04 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x934>  // b.pmore
    2a54:	cbz	x0, 35f8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1228>
    2a58:	ldrb	w0, [x0, #16]
    2a5c:	cmp	w0, #0x10
    2a60:	b.hi	2d04 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x934>  // b.pmore
    2a64:	mov	x2, x22
    2a68:	mov	x1, x28
    2a6c:	mov	w3, #0x0                   	// #0
    2a70:	mov	w0, #0x21                  	// #33
    2a74:	bl	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
    2a78:	mov	x23, x0
    2a7c:	b	28a8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d8>
    2a80:	ldurb	w0, [x19, #-8]
    2a84:	sub	w0, w0, #0x25
    2a88:	cmp	w0, #0x11
    2a8c:	b.hi	3660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1290>  // b.pmore
    2a90:	ldur	x0, [x19, #-72]
    2a94:	mov	x1, x25
    2a98:	bl	428 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
    2a9c:	tst	w0, #0xff
    2aa0:	b.ne	2784 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x3b4>  // b.any
    2aa4:	b	2908 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x538>
    2aa8:	ldr	x0, [sp, #128]
    2aac:	mov	w2, #0x0                   	// #0
    2ab0:	mov	x1, #0x0                   	// #0
    2ab4:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    2ab8:	b	274c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x37c>
    2abc:	mov	w5, #0x101                 	// #257
    2ac0:	mov	x1, x28
    2ac4:	add	x3, sp, #0x150
    2ac8:	mov	x2, x22
    2acc:	mov	x4, #0x0                   	// #0
    2ad0:	mov	w0, #0x1c                  	// #28
    2ad4:	stp	xzr, xzr, [sp, #336]
    2ad8:	strh	w5, [sp, #352]
    2adc:	bl	0 <_ZN4llvm14BinaryOperator6CreateENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_>
    2ae0:	ldr	x1, [sp, #496]
    2ae4:	mov	x28, x0
    2ae8:	cbz	x1, 2b3c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x76c>
    2aec:	ldr	x2, [sp, #504]
    2af0:	add	x0, x1, #0x28
    2af4:	mov	x1, x28
    2af8:	str	x2, [sp, #136]
    2afc:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    2b00:	ldr	x2, [sp, #136]
    2b04:	add	x5, x28, #0x18
    2b08:	ldr	x1, [x28, #24]
    2b0c:	tst	x5, #0x7
    2b10:	ldr	x3, [x2]
    2b14:	and	x1, x1, #0x7
    2b18:	and	x3, x3, #0xfffffffffffffff8
    2b1c:	orr	x1, x1, x3
    2b20:	stp	x1, x2, [x28, #24]
    2b24:	ldr	x0, [x2]
    2b28:	str	x5, [x3, #8]
    2b2c:	b.ne	3754 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1384>  // b.any
    2b30:	and	x0, x0, #0x7
    2b34:	orr	x0, x0, x5
    2b38:	str	x0, [x2]
    2b3c:	add	x1, sp, #0x130
    2b40:	mov	x0, x28
    2b44:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    2b48:	ldr	x1, [sp, #488]
    2b4c:	cbz	x1, 2860 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x490>
    2b50:	add	x3, x28, #0x30
    2b54:	mov	x0, x24
    2b58:	mov	x2, #0x2                   	// #2
    2b5c:	str	x3, [sp, #136]
    2b60:	str	x1, [sp, #432]
    2b64:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    2b68:	ldr	x3, [sp, #136]
    2b6c:	cmp	x3, x24
    2b70:	b.eq	2f98 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xbc8>  // b.none
    2b74:	ldr	x1, [x28, #48]
    2b78:	cbz	x1, 2b88 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x7b8>
    2b7c:	mov	x0, x3
    2b80:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2b84:	ldr	x3, [sp, #136]
    2b88:	ldr	x1, [sp, #432]
    2b8c:	str	x1, [x3]
    2b90:	cbz	x1, 2860 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x490>
    2b94:	mov	x2, x3
    2b98:	mov	x0, x24
    2b9c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    2ba0:	b	2860 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x490>
    2ba4:	mov	w2, #0x101                 	// #257
    2ba8:	mov	w1, #0x2                   	// #2
    2bac:	mov	x0, #0x38                  	// #56
    2bb0:	stp	xzr, xzr, [sp, #368]
    2bb4:	strh	w2, [sp, #384]
    2bb8:	bl	0 <_ZN4llvm4UsernwEmj>
    2bbc:	ldr	x1, [x28]
    2bc0:	mov	x23, x0
    2bc4:	cbz	x1, 36d4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1304>
    2bc8:	ldrb	w2, [x1, #8]
    2bcc:	ldr	x0, [x1]
    2bd0:	cmp	w2, #0x10
    2bd4:	b.eq	2e8c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xabc>  // b.none
    2bd8:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    2bdc:	mov	x1, x0
    2be0:	str	xzr, [sp]
    2be4:	mov	x0, x23
    2be8:	mov	x5, x22
    2bec:	mov	x4, x28
    2bf0:	add	x6, sp, #0x170
    2bf4:	mov	x7, #0x0                   	// #0
    2bf8:	mov	w3, #0x20                  	// #32
    2bfc:	mov	w2, #0x35                  	// #53
    2c00:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
    2c04:	ldrh	w0, [x23, #18]
    2c08:	and	w0, w0, #0xffff7fff
    2c0c:	sub	w0, w0, #0x20
    2c10:	cmp	w0, #0x9
    2c14:	b.hi	3884 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x14b4>  // b.pmore
    2c18:	ldur	x1, [x23, #-48]
    2c1c:	ldur	x0, [x23, #-24]
    2c20:	ldr	x1, [x1]
    2c24:	ldr	x0, [x0]
    2c28:	cmp	x1, x0
    2c2c:	b.ne	3864 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1494>  // b.any
    2c30:	ldrb	w0, [x1, #8]
    2c34:	cmp	w0, #0x10
    2c38:	b.ne	2c48 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x878>  // b.any
    2c3c:	ldr	x0, [x1, #16]
    2c40:	ldr	x0, [x0]
    2c44:	ldrb	w0, [x0, #8]
    2c48:	and	w0, w0, #0xfffffffb
    2c4c:	and	w0, w0, #0xff
    2c50:	cmp	w0, #0xb
    2c54:	b.ne	3814 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1444>  // b.any
    2c58:	ldr	x0, [sp, #496]
    2c5c:	cbz	x0, 2ca8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x8d8>
    2c60:	ldr	x22, [sp, #504]
    2c64:	add	x0, x0, #0x28
    2c68:	mov	x1, x23
    2c6c:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    2c70:	ldr	x0, [x23, #24]
    2c74:	add	x2, x23, #0x18
    2c78:	ldr	x1, [x22]
    2c7c:	and	x0, x0, #0x7
    2c80:	tst	x2, #0x7
    2c84:	and	x1, x1, #0xfffffffffffffff8
    2c88:	orr	x0, x0, x1
    2c8c:	stp	x0, x22, [x23, #24]
    2c90:	ldr	x0, [x22]
    2c94:	str	x2, [x1, #8]
    2c98:	b.ne	3754 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1384>  // b.any
    2c9c:	and	x0, x0, #0x7
    2ca0:	orr	x0, x0, x2
    2ca4:	str	x0, [x22]
    2ca8:	add	x1, sp, #0x110
    2cac:	mov	x0, x23
    2cb0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    2cb4:	ldr	x1, [sp, #488]
    2cb8:	cbz	x1, 28a8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d8>
    2cbc:	mov	x0, x24
    2cc0:	add	x22, x23, #0x30
    2cc4:	mov	x2, #0x2                   	// #2
    2cc8:	str	x1, [sp, #432]
    2ccc:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    2cd0:	cmp	x22, x24
    2cd4:	b.eq	2e38 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xa68>  // b.none
    2cd8:	ldr	x1, [x23, #48]
    2cdc:	cbz	x1, 2ce8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x918>
    2ce0:	mov	x0, x22
    2ce4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2ce8:	ldr	x1, [sp, #432]
    2cec:	str	x1, [x22]
    2cf0:	cbz	x1, 28a8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d8>
    2cf4:	mov	x2, x22
    2cf8:	mov	x0, x24
    2cfc:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    2d00:	b	28a8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d8>
    2d04:	mov	w2, #0x101                 	// #257
    2d08:	mov	w1, #0x2                   	// #2
    2d0c:	mov	x0, #0x38                  	// #56
    2d10:	stp	xzr, xzr, [sp, #400]
    2d14:	strh	w2, [sp, #416]
    2d18:	bl	0 <_ZN4llvm4UsernwEmj>
    2d1c:	ldr	x1, [x28]
    2d20:	mov	x23, x0
    2d24:	cbz	x1, 36d4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1304>
    2d28:	ldrb	w2, [x1, #8]
    2d2c:	ldr	x0, [x1]
    2d30:	cmp	w2, #0x10
    2d34:	b.eq	2e4c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xa7c>  // b.none
    2d38:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    2d3c:	mov	x1, x0
    2d40:	str	xzr, [sp]
    2d44:	mov	x0, x23
    2d48:	mov	x5, x22
    2d4c:	mov	x4, x28
    2d50:	add	x6, sp, #0x190
    2d54:	mov	x7, #0x0                   	// #0
    2d58:	mov	w3, #0x21                  	// #33
    2d5c:	mov	w2, #0x35                  	// #53
    2d60:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
    2d64:	ldrh	w0, [x23, #18]
    2d68:	and	w0, w0, #0xffff7fff
    2d6c:	sub	w0, w0, #0x20
    2d70:	cmp	w0, #0x9
    2d74:	b.hi	3884 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x14b4>  // b.pmore
    2d78:	ldur	x1, [x23, #-48]
    2d7c:	ldur	x0, [x23, #-24]
    2d80:	ldr	x1, [x1]
    2d84:	ldr	x0, [x0]
    2d88:	cmp	x1, x0
    2d8c:	b.ne	3864 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1494>  // b.any
    2d90:	ldrb	w0, [x1, #8]
    2d94:	cmp	w0, #0x10
    2d98:	b.ne	2da8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x9d8>  // b.any
    2d9c:	ldr	x0, [x1, #16]
    2da0:	ldr	x0, [x0]
    2da4:	ldrb	w0, [x0, #8]
    2da8:	and	w0, w0, #0xfffffffb
    2dac:	and	w0, w0, #0xff
    2db0:	cmp	w0, #0xb
    2db4:	b.ne	3814 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1444>  // b.any
    2db8:	ldr	x0, [sp, #496]
    2dbc:	cbz	x0, 2e08 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xa38>
    2dc0:	ldr	x22, [sp, #504]
    2dc4:	add	x0, x0, #0x28
    2dc8:	mov	x1, x23
    2dcc:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    2dd0:	ldr	x0, [x23, #24]
    2dd4:	add	x2, x23, #0x18
    2dd8:	ldr	x1, [x22]
    2ddc:	and	x0, x0, #0x7
    2de0:	tst	x2, #0x7
    2de4:	and	x1, x1, #0xfffffffffffffff8
    2de8:	orr	x0, x0, x1
    2dec:	stp	x0, x22, [x23, #24]
    2df0:	ldr	x0, [x22]
    2df4:	str	x2, [x1, #8]
    2df8:	b.ne	3754 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1384>  // b.any
    2dfc:	and	x0, x0, #0x7
    2e00:	orr	x0, x0, x2
    2e04:	str	x0, [x22]
    2e08:	add	x1, sp, #0xf0
    2e0c:	mov	x0, x23
    2e10:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    2e14:	ldr	x1, [sp, #488]
    2e18:	cbz	x1, 28a8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d8>
    2e1c:	mov	x0, x24
    2e20:	add	x22, x23, #0x30
    2e24:	mov	x2, #0x2                   	// #2
    2e28:	str	x1, [sp, #432]
    2e2c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    2e30:	cmp	x22, x24
    2e34:	b.ne	2cd8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x908>  // b.any
    2e38:	ldr	x1, [sp, #432]
    2e3c:	cbz	x1, 28a8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d8>
    2e40:	mov	x0, x24
    2e44:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2e48:	b	28a8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d8>
    2e4c:	str	x1, [sp, #136]
    2e50:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    2e54:	ldr	x1, [sp, #136]
    2e58:	mov	x3, #0xffffffff            	// #4294967295
    2e5c:	ldr	x2, [x1, #32]
    2e60:	cmp	x2, x3
    2e64:	b.hi	37f4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1424>  // b.pmore
    2e68:	ldr	x3, [sp, #144]
    2e6c:	ldrb	w1, [x1, #40]
    2e70:	bfxil	x3, x2, #0, #32
    2e74:	bfi	x3, x1, #32, #8
    2e78:	str	x3, [sp, #144]
    2e7c:	mov	x1, x3
    2e80:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
    2e84:	mov	x1, x0
    2e88:	b	2d40 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x970>
    2e8c:	str	x1, [sp, #136]
    2e90:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    2e94:	ldr	x1, [sp, #136]
    2e98:	mov	x3, #0xffffffff            	// #4294967295
    2e9c:	ldr	x2, [x1, #32]
    2ea0:	cmp	x2, x3
    2ea4:	b.hi	37f4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1424>  // b.pmore
    2ea8:	ldr	x3, [sp, #152]
    2eac:	ldrb	w1, [x1, #40]
    2eb0:	bfxil	x3, x2, #0, #32
    2eb4:	bfi	x3, x1, #32, #8
    2eb8:	str	x3, [sp, #152]
    2ebc:	mov	x1, x3
    2ec0:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
    2ec4:	mov	x1, x0
    2ec8:	b	2be0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x810>
    2ecc:	mov	x3, x24
    2ed0:	mov	x4, #0x0                   	// #0
    2ed4:	mov	w0, #0x27                  	// #39
    2ed8:	str	q0, [sp, #432]
    2edc:	strh	w5, [sp, #448]
    2ee0:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    2ee4:	ldr	x1, [sp, #496]
    2ee8:	mov	x23, x0
    2eec:	cbz	x1, 2f38 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xb68>
    2ef0:	ldr	x22, [sp, #504]
    2ef4:	add	x0, x1, #0x28
    2ef8:	mov	x1, x23
    2efc:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    2f00:	ldr	x0, [x23, #24]
    2f04:	add	x2, x23, #0x18
    2f08:	ldr	x1, [x22]
    2f0c:	and	x0, x0, #0x7
    2f10:	tst	x2, #0x7
    2f14:	and	x1, x1, #0xfffffffffffffff8
    2f18:	orr	x0, x0, x1
    2f1c:	stp	x0, x22, [x23, #24]
    2f20:	ldr	x0, [x22]
    2f24:	str	x2, [x1, #8]
    2f28:	b.ne	3754 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1384>  // b.any
    2f2c:	and	x0, x0, #0x7
    2f30:	orr	x0, x0, x2
    2f34:	str	x0, [x22]
    2f38:	add	x1, sp, #0xd0
    2f3c:	mov	x0, x23
    2f40:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    2f44:	ldr	x1, [sp, #488]
    2f48:	cbz	x1, 28e8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x518>
    2f4c:	add	x28, sp, #0x190
    2f50:	add	x22, x23, #0x30
    2f54:	mov	x0, x28
    2f58:	mov	x2, #0x2                   	// #2
    2f5c:	str	x1, [sp, #400]
    2f60:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    2f64:	cmp	x22, x28
    2f68:	b.eq	302c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc5c>  // b.none
    2f6c:	ldr	x1, [x23, #48]
    2f70:	cbz	x1, 2f7c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xbac>
    2f74:	mov	x0, x22
    2f78:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2f7c:	ldr	x1, [sp, #400]
    2f80:	str	x1, [x22]
    2f84:	cbz	x1, 28e8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x518>
    2f88:	mov	x2, x22
    2f8c:	mov	x0, x28
    2f90:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    2f94:	b	28e8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x518>
    2f98:	ldr	x1, [sp, #432]
    2f9c:	cbz	x1, 2860 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x490>
    2fa0:	mov	x0, x24
    2fa4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2fa8:	b	2860 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x490>
    2fac:	ldr	x2, [x22, #24]
    2fb0:	neg	w1, w1
    2fb4:	mov	x0, #0xffffffffffffffff    	// #-1
    2fb8:	lsr	x1, x0, x1
    2fbc:	cmp	x1, x2
    2fc0:	cset	w0, eq  // eq = none
    2fc4:	cbz	w0, 2840 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x470>
    2fc8:	b	2a28 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x658>
    2fcc:	ldur	x0, [x23, #-48]
    2fd0:	cbz	x0, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    2fd4:	ldur	x0, [x23, #-24]
    2fd8:	cbnz	x0, 29f4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x624>
    2fdc:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    2fe0:	sub	x4, x19, #0x48
    2fe4:	b	250c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13c>
    2fe8:	ldrb	w0, [x23, #16]
    2fec:	cmp	w0, #0x34
    2ff0:	b.eq	345c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x108c>  // b.none
    2ff4:	cmp	w0, #0x5
    2ff8:	b.ne	25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>  // b.any
    2ffc:	ldrh	w0, [x23, #18]
    3000:	cmp	w0, #0x1c
    3004:	b.ne	25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>  // b.any
    3008:	mov	x0, x23
    300c:	mov	w1, #0x0                   	// #0
    3010:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3014:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    3018:	mov	x0, x23
    301c:	mov	w1, #0x1                   	// #1
    3020:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3024:	cbnz	x0, 3474 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x10a4>
    3028:	bl	1d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    302c:	ldr	x1, [sp, #400]
    3030:	cbz	x1, 28e8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x518>
    3034:	mov	x0, x22
    3038:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    303c:	b	28e8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x518>
    3040:	ldrb	w0, [x23, #16]
    3044:	cmp	w0, #0x34
    3048:	b.eq	3480 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x10b0>  // b.none
    304c:	cmp	w0, #0x5
    3050:	b.ne	26b4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x2e4>  // b.any
    3054:	ldrh	w0, [x23, #18]
    3058:	cmp	w0, #0x1c
    305c:	b.ne	26b4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x2e4>  // b.any
    3060:	mov	x0, x23
    3064:	mov	w1, #0x0                   	// #0
    3068:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    306c:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    3070:	mov	x0, x23
    3074:	mov	w1, #0x1                   	// #1
    3078:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    307c:	cbnz	x0, 3490 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x10c0>
    3080:	bl	1d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    3084:	mov	x0, x23
    3088:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    308c:	ldur	x1, [x0, #-48]
    3090:	cbz	x1, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    3094:	ldur	x0, [x0, #-24]
    3098:	cbz	x0, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    309c:	ldur	x28, [x19, #-48]
    30a0:	cbz	x28, 3714 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1344>
    30a4:	ldrb	w0, [x28, #16]
    30a8:	cmp	w0, #0xd
    30ac:	b.eq	3178 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xda8>  // b.none
    30b0:	ldr	x0, [x28]
    30b4:	ldrb	w0, [x0, #8]
    30b8:	cmp	w0, #0x10
    30bc:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    30c0:	mov	x0, x28
    30c4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    30c8:	str	x0, [sp, #136]
    30cc:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    30d0:	mov	w1, #0x0                   	// #0
    30d4:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
    30d8:	cbz	x0, 30e8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd18>
    30dc:	ldrb	w1, [x0, #16]
    30e0:	cmp	w1, #0xd
    30e4:	b.eq	35c8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x11f8>  // b.none
    30e8:	ldr	x0, [x28]
    30ec:	cbz	x0, 37d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1400>
    30f0:	ldrb	w1, [x0, #8]
    30f4:	cmp	w1, #0x10
    30f8:	b.ne	37c0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13f0>  // b.any
    30fc:	ldr	x0, [x0, #32]
    3100:	str	w0, [sp, #160]
    3104:	cbz	w0, 37a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13d0>
    3108:	mov	w28, #0x0                   	// #0
    310c:	mov	w23, #0x0                   	// #0
    3110:	ldr	x0, [sp, #136]
    3114:	mov	w1, w23
    3118:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
    311c:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    3120:	ldrb	w3, [x0, #16]
    3124:	cmp	w3, #0x9
    3128:	b.eq	3158 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd88>  // b.none
    312c:	cmp	w3, #0xd
    3130:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    3134:	ldr	w28, [x0, #32]
    3138:	cmp	w28, #0x40
    313c:	b.ls	35b8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x11e8>  // b.plast
    3140:	add	x0, x0, #0x18
    3144:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3148:	sub	w2, w28, #0x1
    314c:	cmp	w2, w0
    3150:	cset	w28, eq  // eq = none
    3154:	cbz	w28, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    3158:	ldr	w0, [sp, #160]
    315c:	add	w23, w23, #0x1
    3160:	cmp	w0, w23
    3164:	b.ne	3110 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd40>  // b.any
    3168:	cbz	w28, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    316c:	nop
    3170:	mov	w23, #0x0                   	// #0
    3174:	b	272c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x35c>
    3178:	ldr	w23, [x28, #32]
    317c:	cmp	w23, #0x40
    3180:	b.ls	3440 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1070>  // b.plast
    3184:	sub	w23, w23, #0x1
    3188:	add	x0, x28, #0x18
    318c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3190:	cmp	w23, w0
    3194:	cset	w28, eq  // eq = none
    3198:	cbnz	w28, 3170 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xda0>
    319c:	b	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    31a0:	sub	w0, w0, #0x82
    31a4:	cmp	w0, #0x1
    31a8:	ldr	x5, [sp, #136]
    31ac:	b.hi	3844 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1474>  // b.pmore
    31b0:	ldrb	w1, [x21, #23]
    31b4:	cmp	x3, x5
    31b8:	cset	w0, eq  // eq = none
    31bc:	tbz	w1, #6, 342c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x105c>
    31c0:	ldur	x2, [x19, #-32]
    31c4:	mov	w7, #0x18                  	// #24
    31c8:	ldr	w1, [x21, #56]
    31cc:	mov	x6, #0x8                   	// #8
    31d0:	and	x0, x0, #0xff
    31d4:	cmp	x3, x5
    31d8:	cset	x3, ne  // ne = any
    31dc:	str	w4, [sp, #136]
    31e0:	add	x0, x2, x0, lsl #3
    31e4:	umaddl	x1, w1, w7, x6
    31e8:	add	x2, x2, x3, lsl #3
    31ec:	ldr	x0, [x0, x1]
    31f0:	ldr	x23, [x2, x1]
    31f4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    31f8:	mov	x2, x0
    31fc:	ldr	x28, [x19, #16]
    3200:	add	x1, sp, #0x150
    3204:	ldr	x3, [sp, #400]
    3208:	stp	x1, x3, [sp, #488]
    320c:	ldr	w4, [sp, #136]
    3210:	str	x28, [sp, #512]
    3214:	str	x23, [sp, #520]
    3218:	cbz	x0, 3834 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1464>
    321c:	ldrb	w0, [x0, #16]
    3220:	cmp	w0, #0x1a
    3224:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    3228:	ldr	w0, [x2, #20]
    322c:	ubfx	x0, x0, #0, #28
    3230:	cmp	w0, #0x3
    3234:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    3238:	ldur	x6, [x2, #-72]
    323c:	cbz	x6, 3744 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1374>
    3240:	ldrb	w0, [x6, #16]
    3244:	cmp	w0, #0x4d
    3248:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    324c:	ldur	x0, [x6, #-48]
    3250:	cmp	x3, x0
    3254:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    3258:	ldur	x1, [x6, #-24]
    325c:	add	x0, x27, #0x10
    3260:	str	x6, [sp, #136]
    3264:	str	w4, [sp, #160]
    3268:	str	x2, [sp, #200]
    326c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3270:	ldr	w4, [sp, #160]
    3274:	ands	w23, w0, #0xff
    3278:	ldr	x6, [sp, #136]
    327c:	ldr	x2, [sp, #200]
    3280:	b.eq	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.none
    3284:	ldr	x3, [sp, #488]
    3288:	ldrh	w1, [x6, #18]
    328c:	ldur	x0, [x2, #-24]
    3290:	and	w1, w1, #0xffff7fff
    3294:	str	w1, [x3]
    3298:	cbz	x0, 3784 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13b4>
    329c:	ldrb	w1, [x0, #16]
    32a0:	cmp	w1, #0x12
    32a4:	b.ne	3774 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13a4>  // b.any
    32a8:	ldr	x1, [sp, #512]
    32ac:	cmp	x1, x0
    32b0:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    32b4:	ldr	w0, [x2, #20]
    32b8:	ubfx	x0, x0, #0, #28
    32bc:	cmp	w0, #0x3
    32c0:	b.ne	36a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x12d0>  // b.any
    32c4:	ldur	x0, [x2, #-48]
    32c8:	cbz	x0, 3784 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13b4>
    32cc:	ldrb	w1, [x0, #16]
    32d0:	cmp	w1, #0x12
    32d4:	b.ne	3774 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13a4>  // b.any
    32d8:	ldr	x1, [sp, #520]
    32dc:	cmp	x1, x0
    32e0:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    32e4:	ldr	w0, [sp, #336]
    32e8:	cmp	w0, #0x20
    32ec:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    32f0:	mov	x0, x28
    32f4:	str	w4, [sp, #136]
    32f8:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    32fc:	mov	x20, x0
    3300:	mov	x0, x28
    3304:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    3308:	mov	w2, #0x200                 	// #512
    330c:	stp	xzr, x28, [sp, #488]
    3310:	add	x1, x28, #0x28
    3314:	stp	x20, x0, [sp, #504]
    3318:	cmp	x20, x1
    331c:	ldr	w4, [sp, #136]
    3320:	str	xzr, [sp, #520]
    3324:	str	wzr, [sp, #528]
    3328:	strh	w2, [sp, #532]
    332c:	strb	wzr, [sp, #534]
    3330:	str	xzr, [sp, #536]
    3334:	str	xzr, [sp, #544]
    3338:	b.eq	33a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xfd0>  // b.none
    333c:	ldr	x0, [x20]
    3340:	tst	w0, #0x4
    3344:	b.ne	3790 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13c0>  // b.any
    3348:	ldr	x1, [x20, #24]
    334c:	str	x1, [sp, #456]
    3350:	cbz	x1, 33a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xfd0>
    3354:	mov	x0, x25
    3358:	mov	x2, #0x2                   	// #2
    335c:	str	w4, [sp, #136]
    3360:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    3364:	ldr	x1, [sp, #488]
    3368:	ldr	w4, [sp, #136]
    336c:	cbz	x1, 3788 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13b8>
    3370:	mov	x0, x27
    3374:	str	w4, [sp, #136]
    3378:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    337c:	ldr	w4, [sp, #136]
    3380:	ldr	x1, [sp, #456]
    3384:	str	x1, [sp, #488]
    3388:	cbz	x1, 33a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xfd0>
    338c:	mov	x2, x27
    3390:	mov	x0, x25
    3394:	str	w4, [sp, #136]
    3398:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    339c:	ldr	w4, [sp, #136]
    33a0:	mov	x0, x21
    33a4:	str	w4, [sp, #136]
    33a8:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    33ac:	mov	w20, w23
    33b0:	ldr	w4, [sp, #136]
    33b4:	mov	x2, x25
    33b8:	ldur	x5, [x19, #-24]
    33bc:	mov	w1, w4
    33c0:	mov	x3, #0x1                   	// #1
    33c4:	str	x5, [sp, #456]
    33c8:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    33cc:	mov	x28, x0
    33d0:	ldr	x2, [sp, #368]
    33d4:	mov	x0, x24
    33d8:	ldr	x3, [sp, #400]
    33dc:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    33e0:	add	x1, x1, #0x0
    33e4:	stp	x2, x2, [sp, #456]
    33e8:	str	x3, [sp, #472]
    33ec:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    33f0:	mov	x4, x24
    33f4:	mov	x2, x25
    33f8:	mov	x5, #0x0                   	// #0
    33fc:	mov	x3, #0x3                   	// #3
    3400:	mov	x1, x28
    3404:	mov	x0, x27
    3408:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    340c:	mov	x1, x0
    3410:	mov	x0, x21
    3414:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    3418:	ldr	x1, [sp, #488]
    341c:	cbz	x1, 2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>
    3420:	mov	x0, x27
    3424:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3428:	b	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>
    342c:	ldr	w2, [x21, #20]
    3430:	mov	w1, #0x18                  	// #24
    3434:	ubfx	x2, x2, #0, #28
    3438:	umsubl	x2, w2, w1, x21
    343c:	b	31c4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xdf4>
    3440:	ldr	x0, [x28, #24]
    3444:	cmp	x0, #0x1
    3448:	cset	w28, eq  // eq = none
    344c:	cbnz	w28, 3170 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xda0>
    3450:	b	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    3454:	mov	x3, x5
    3458:	b	31b0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xde0>
    345c:	mov	x0, x23
    3460:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3464:	ldur	x1, [x0, #-48]
    3468:	cbz	x1, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    346c:	ldur	x0, [x0, #-24]
    3470:	cbz	x0, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    3474:	ldur	x0, [x19, #-72]
    3478:	cbnz	x0, 2728 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x358>
    347c:	bl	1b0 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    3480:	ldur	x0, [x23, #-48]
    3484:	cbz	x0, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    3488:	ldur	x0, [x23, #-24]
    348c:	cbz	x0, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    3490:	mov	x0, x21
    3494:	mov	w1, #0x1                   	// #1
    3498:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    349c:	cbnz	x0, 2728 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x358>
    34a0:	bl	1d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    34a4:	cmp	w0, #0x5
    34a8:	b.ne	24d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x100>  // b.any
    34ac:	ldurh	w0, [x19, #-6]
    34b0:	cmp	w0, #0x1c
    34b4:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    34b8:	mov	w1, #0x0                   	// #0
    34bc:	mov	x0, x21
    34c0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    34c4:	mov	x23, x0
    34c8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    34cc:	ldr	x0, [x23, #8]
    34d0:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    34d4:	ldr	x0, [x0, #8]
    34d8:	cbnz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    34dc:	ldrb	w0, [x23, #16]
    34e0:	cmp	w0, #0x35
    34e4:	b.eq	354c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x117c>  // b.none
    34e8:	cmp	w0, #0x5
    34ec:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    34f0:	ldrh	w0, [x23, #18]
    34f4:	cmp	w0, #0x1d
    34f8:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    34fc:	mov	x0, x23
    3500:	mov	w1, #0x0                   	// #0
    3504:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3508:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    350c:	mov	x0, x23
    3510:	mov	w1, #0x1                   	// #1
    3514:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3518:	cbnz	x0, 3564 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1194>
    351c:	bl	1d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    3520:	mov	x0, x23
    3524:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3528:	ldur	x1, [x0, #-48]
    352c:	cbz	x1, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    3530:	ldur	x0, [x0, #-24]
    3534:	cbz	x0, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    3538:	mov	x0, x21
    353c:	mov	w1, #0x0                   	// #0
    3540:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3544:	cbnz	x0, 2728 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x358>
    3548:	bl	1d8 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    354c:	mov	x0, x23
    3550:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3554:	ldur	x1, [x0, #-48]
    3558:	cbz	x1, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    355c:	ldur	x0, [x0, #-24]
    3560:	cbz	x0, 29fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x62c>
    3564:	mov	w1, #0x1                   	// #1
    3568:	mov	x0, x21
    356c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3570:	mov	x1, x0
    3574:	ldr	x0, [sp, #184]
    3578:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    357c:	tst	w0, #0xff
    3580:	b.eq	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.none
    3584:	mov	w23, #0x0                   	// #0
    3588:	b	272c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x35c>
    358c:	add	w0, w0, w4
    3590:	add	w7, w4, #0x1
    3594:	and	w5, w6, w0
    3598:	and	w0, w6, w0
    359c:	lsl	x5, x5, #4
    35a0:	add	x4, x2, x5
    35a4:	ldr	x5, [x2, x5]
    35a8:	cmp	x3, x5
    35ac:	b.eq	2494 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc4>  // b.none
    35b0:	mov	w4, w7
    35b4:	b	292c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x55c>
    35b8:	ldr	x0, [x0, #24]
    35bc:	cmp	x0, #0x1
    35c0:	cset	w28, eq  // eq = none
    35c4:	b	3154 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd84>
    35c8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    35cc:	cbz	x0, 30e8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd18>
    35d0:	ldr	w23, [x0, #32]
    35d4:	cmp	w23, #0x40
    35d8:	b.ls	36c0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x12f0>  // b.plast
    35dc:	sub	w23, w23, #0x1
    35e0:	add	x0, x0, #0x18
    35e4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    35e8:	cmp	w23, w0
    35ec:	cset	w28, eq  // eq = none
    35f0:	cbnz	w28, 3170 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xda0>
    35f4:	b	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    35f8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    35fc:	add	x3, x3, #0x0
    3600:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3604:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3608:	add	x1, x1, #0x0
    360c:	add	x0, x0, #0x0
    3610:	mov	w2, #0x69                  	// #105
    3614:	bl	0 <__assert_fail>
    3618:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    361c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3620:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3624:	add	x3, x3, #0x0
    3628:	add	x1, x1, #0x0
    362c:	add	x0, x0, #0x0
    3630:	mov	w2, #0x117                 	// #279
    3634:	bl	0 <__assert_fail>
    3638:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    363c:	add	x3, x3, #0x0
    3640:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3644:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3648:	add	x1, x1, #0x0
    364c:	add	x0, x0, #0x0
    3650:	mov	w2, #0x8b                  	// #139
    3654:	bl	0 <__assert_fail>
    3658:	mov	w22, #0x0                   	// #0
    365c:	b	29a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x5d0>
    3660:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3664:	add	x3, x3, #0x0
    3668:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    366c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3670:	add	x1, x1, #0x0
    3674:	add	x0, x0, #0x0
    3678:	mov	w2, #0x108                 	// #264
    367c:	bl	0 <__assert_fail>
    3680:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3684:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3688:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    368c:	add	x3, x3, #0x0
    3690:	add	x1, x1, #0x0
    3694:	add	x0, x0, #0x0
    3698:	mov	w2, #0x8e                  	// #142
    369c:	bl	0 <__assert_fail>
    36a0:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36a4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36a8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36ac:	add	x3, x3, #0x0
    36b0:	add	x1, x1, #0x0
    36b4:	add	x0, x0, #0x0
    36b8:	mov	w2, #0xc03                 	// #3075
    36bc:	bl	0 <__assert_fail>
    36c0:	ldr	x0, [x0, #24]
    36c4:	cmp	x0, #0x1
    36c8:	cset	w28, eq  // eq = none
    36cc:	cbnz	w28, 3170 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xda0>
    36d0:	b	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    36d4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36d8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36dc:	add	x3, x3, #0x0
    36e0:	b	3604 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1234>
    36e4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36e8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36ec:	add	x3, x3, #0x0
    36f0:	b	3644 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1274>
    36f4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36f8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36fc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3700:	add	x3, x3, #0x0
    3704:	add	x1, x1, #0x0
    3708:	add	x0, x0, #0x0
    370c:	mov	w2, #0x250                 	// #592
    3710:	bl	0 <__assert_fail>
    3714:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3718:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    371c:	add	x3, x3, #0x0
    3720:	b	3604 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1234>
    3724:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3728:	add	x3, x3, #0x0
    372c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3730:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3734:	add	x1, x1, #0x0
    3738:	add	x0, x0, #0x0
    373c:	mov	w2, #0x134                 	// #308
    3740:	bl	0 <__assert_fail>
    3744:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3748:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    374c:	add	x3, x3, #0x0
    3750:	b	3604 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1234>
    3754:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3758:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    375c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3760:	add	x3, x3, #0x0
    3764:	add	x1, x1, #0x0
    3768:	add	x0, x0, #0x0
    376c:	mov	w2, #0xb2                  	// #178
    3770:	bl	0 <__assert_fail>
    3774:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3778:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    377c:	add	x3, x3, #0x0
    3780:	b	3730 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1360>
    3784:	bl	250 <_ZN4llvm3isaINS_10BasicBlockEPS1_EEbRKT0_.isra.0.part.0>
    3788:	ldr	x1, [sp, #456]
    378c:	b	3384 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xfb4>
    3790:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3794:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3798:	add	x3, x3, #0x0
    379c:	b	3644 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1274>
    37a0:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37a4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37a8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37ac:	add	x3, x3, #0x0
    37b0:	add	x1, x1, #0x0
    37b4:	add	x0, x0, #0x0
    37b8:	mov	w2, #0xeb                  	// #235
    37bc:	bl	0 <__assert_fail>
    37c0:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37c4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37c8:	add	x3, x3, #0x0
    37cc:	b	366c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x129c>
    37d0:	bl	188 <_ZN4llvm13isa_impl_wrapINS_10VectorTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    37d4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37d8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37dc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37e0:	add	x3, x3, #0x0
    37e4:	add	x1, x1, #0x0
    37e8:	add	x0, x0, #0x0
    37ec:	mov	w2, #0x4fa                 	// #1274
    37f0:	bl	0 <__assert_fail>
    37f4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37f8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37fc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3800:	add	x3, x3, #0x0
    3804:	add	x1, x1, #0x0
    3808:	add	x0, x0, #0x0
    380c:	mov	w2, #0x220                 	// #544
    3810:	bl	0 <__assert_fail>
    3814:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3818:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    381c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3820:	add	x3, x3, #0x0
    3824:	add	x1, x1, #0x0
    3828:	add	x0, x0, #0x0
    382c:	mov	w2, #0x48d                 	// #1165
    3830:	bl	0 <__assert_fail>
    3834:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3838:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    383c:	add	x3, x3, #0x0
    3840:	b	3604 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1234>
    3844:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3848:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    384c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3850:	add	x3, x3, #0x0
    3854:	add	x1, x1, #0x0
    3858:	add	x0, x0, #0x0
    385c:	mov	w2, #0x73                  	// #115
    3860:	bl	0 <__assert_fail>
    3864:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3868:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    386c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3870:	add	x3, x3, #0x0
    3874:	add	x1, x1, #0x0
    3878:	add	x0, x0, #0x0
    387c:	mov	w2, #0x48a                 	// #1162
    3880:	bl	0 <__assert_fail>
    3884:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3888:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    388c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3890:	add	x3, x3, #0x0
    3894:	add	x1, x1, #0x0
    3898:	add	x0, x0, #0x0
    389c:	mov	w2, #0x488                 	// #1160
    38a0:	bl	0 <__assert_fail>
    38a4:	mov	x0, #0x0                   	// #0
    38a8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    38ac:	ldr	x0, [x23, #8]
    38b0:	brk	#0x3e8
    38b4:	nop

00000000000038b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>:
    38b8:	stp	x29, x30, [sp, #-192]!
    38bc:	mov	x29, sp
    38c0:	stp	x21, x22, [sp, #32]
    38c4:	mov	x21, x0
    38c8:	mov	x22, x2
    38cc:	ldr	x0, [x0, #40]
    38d0:	stp	x19, x20, [sp, #16]
    38d4:	mov	x19, x1
    38d8:	add	x20, sp, #0x38
    38dc:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    38e0:	mov	x4, x0
    38e4:	add	x3, x20, #0x28
    38e8:	mov	x2, #0x400000000           	// #17179869184
    38ec:	mov	x1, x21
    38f0:	mov	x0, x20
    38f4:	stp	x19, x4, [sp, #56]
    38f8:	stp	x22, x3, [sp, #72]
    38fc:	str	x2, [sp, #88]
    3900:	stp	xzr, xzr, [sp, #128]
    3904:	stp	xzr, xzr, [sp, #144]
    3908:	str	wzr, [sp, #160]
    390c:	stp	xzr, xzr, [sp, #168]
    3910:	str	xzr, [sp, #184]
    3914:	bl	0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE>
    3918:	mov	x1, x22
    391c:	and	w19, w0, #0xff
    3920:	mov	x0, x21
    3924:	bl	23d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE>
    3928:	ldr	x2, [sp, #168]
    392c:	and	w1, w0, #0xff
    3930:	orr	w19, w19, w1
    3934:	cbz	x2, 3940 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x88>
    3938:	mov	x0, x2
    393c:	bl	0 <_ZdlPv>
    3940:	ldr	x0, [sp, #144]
    3944:	add	x20, x20, #0x28
    3948:	ldr	w1, [sp, #160]
    394c:	lsl	x1, x1, #4
    3950:	bl	0 <_ZdlPvm>
    3954:	ldr	x0, [sp, #80]
    3958:	cmp	x0, x20
    395c:	b.eq	3964 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xac>  // b.none
    3960:	bl	0 <free>
    3964:	mov	w0, w19
    3968:	ldp	x19, x20, [sp, #16]
    396c:	ldp	x21, x22, [sp, #32]
    3970:	ldp	x29, x30, [sp], #192
    3974:	ret

0000000000003978 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE>:
    3978:	stp	x29, x30, [sp, #-224]!
    397c:	mov	x29, sp
    3980:	stp	x21, x22, [sp, #32]
    3984:	mov	x21, x0
    3988:	ldr	x0, [x0, #8]
    398c:	stp	x19, x20, [sp, #16]
    3990:	stp	x23, x24, [sp, #48]
    3994:	stp	x25, x26, [sp, #64]
    3998:	cbz	x0, 3d88 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x410>
    399c:	ldp	x2, x0, [x0]
    39a0:	cmp	x2, x0
    39a4:	b.eq	3d78 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x400>  // b.none
    39a8:	mov	x20, x1
    39ac:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass2IDE>
    39b0:	ldr	x1, [x1]
    39b4:	b	39c4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x4c>
    39b8:	add	x2, x2, #0x10
    39bc:	cmp	x0, x2
    39c0:	b.eq	3d78 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x400>  // b.none
    39c4:	ldr	x3, [x2]
    39c8:	cmp	x3, x1
    39cc:	b.ne	39b8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x40>  // b.any
    39d0:	ldr	x0, [x2, #8]
    39d4:	cbz	x0, 3d78 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x400>
    39d8:	ldr	x2, [x0]
    39dc:	add	x23, sp, #0x58
    39e0:	ldr	x2, [x2, #96]
    39e4:	blr	x2
    39e8:	mov	x19, x0
    39ec:	mov	x8, x23
    39f0:	add	x0, x0, #0x20
    39f4:	add	x2, sp, #0x78
    39f8:	mov	x1, x20
    39fc:	stp	xzr, xzr, [sp, #120]
    3a00:	add	x22, x19, #0xf0
    3a04:	str	xzr, [sp, #136]
    3a08:	str	wzr, [sp, #144]
    3a0c:	stp	xzr, xzr, [sp, #152]
    3a10:	str	xzr, [sp, #168]
    3a14:	str	wzr, [sp, #176]
    3a18:	stp	xzr, xzr, [sp, #184]
    3a1c:	str	xzr, [sp, #200]
    3a20:	str	wzr, [sp, #208]
    3a24:	strb	wzr, [sp, #216]
    3a28:	bl	0 <_ZN4llvm21TargetLibraryAnalysis3runERKNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>
    3a2c:	ldrb	w0, [x19, #272]
    3a30:	cbnz	w0, 3bec <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x274>
    3a34:	ldr	w0, [sp, #112]
    3a38:	ldr	x1, [sp, #88]
    3a3c:	stp	x1, xzr, [x19, #240]
    3a40:	str	xzr, [x19, #256]
    3a44:	str	w0, [x19, #264]
    3a48:	cbnz	w0, 3c60 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2e8>
    3a4c:	ldr	x24, [sp, #96]
    3a50:	mov	w0, #0x1                   	// #1
    3a54:	strb	w0, [x22, #32]
    3a58:	mov	x0, x24
    3a5c:	bl	0 <free>
    3a60:	ldrb	w0, [x22, #32]
    3a64:	cbz	w0, 3d98 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x420>
    3a68:	ldr	w2, [sp, #208]
    3a6c:	mov	w1, #0x18                  	// #24
    3a70:	ldr	x0, [sp, #192]
    3a74:	umull	x1, w2, w1
    3a78:	bl	0 <_ZdlPvm>
    3a7c:	ldr	w1, [sp, #176]
    3a80:	cbz	w1, 3b18 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1a0>
    3a84:	ldr	x24, [sp, #160]
    3a88:	ubfiz	x1, x1, #5, #32
    3a8c:	add	x25, x24, x1
    3a90:	add	x23, x24, #0x8
    3a94:	b	3aa8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x130>
    3a98:	add	x24, x24, #0x20
    3a9c:	add	x23, x23, #0x20
    3aa0:	cmp	x25, x24
    3aa4:	b.eq	3b14 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x19c>  // b.none
    3aa8:	ldr	x0, [x24]
    3aac:	cmn	x0, #0x8
    3ab0:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    3ab4:	b.eq	3a98 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x120>  // b.none
    3ab8:	ldr	x19, [x23]
    3abc:	cmp	x19, x23
    3ac0:	b.eq	3a98 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x120>  // b.none
    3ac4:	ldr	x0, [x19, #24]
    3ac8:	ldr	x26, [x19]
    3acc:	cbz	x0, 3afc <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x184>
    3ad0:	ldr	x1, [x0]
    3ad4:	ldr	x1, [x1, #8]
    3ad8:	blr	x1
    3adc:	mov	x0, x19
    3ae0:	bl	0 <_ZdlPv>
    3ae4:	cmp	x26, x23
    3ae8:	b.eq	3a98 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x120>  // b.none
    3aec:	mov	x19, x26
    3af0:	ldr	x0, [x19, #24]
    3af4:	ldr	x26, [x19]
    3af8:	cbnz	x0, 3ad0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x158>
    3afc:	mov	x0, x19
    3b00:	bl	0 <_ZdlPv>
    3b04:	cmp	x26, x23
    3b08:	b.eq	3a98 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x120>  // b.none
    3b0c:	mov	x19, x26
    3b10:	b	3af0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x178>
    3b14:	ldr	w1, [sp, #176]
    3b18:	ldr	x0, [sp, #160]
    3b1c:	ubfiz	x1, x1, #5, #32
    3b20:	bl	0 <_ZdlPvm>
    3b24:	ldr	w1, [sp, #144]
    3b28:	cbz	w1, 3b6c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1f4>
    3b2c:	ldr	x23, [sp, #128]
    3b30:	ubfiz	x2, x1, #4, #32
    3b34:	add	x19, x23, x2
    3b38:	ldr	x0, [x23]
    3b3c:	cmn	x0, #0x10
    3b40:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    3b44:	b.eq	3b5c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1e4>  // b.none
    3b48:	ldr	x0, [x23, #8]
    3b4c:	cbz	x0, 3b5c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1e4>
    3b50:	ldr	x1, [x0]
    3b54:	ldr	x1, [x1, #8]
    3b58:	blr	x1
    3b5c:	add	x23, x23, #0x10
    3b60:	cmp	x19, x23
    3b64:	b.ne	3b38 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1c0>  // b.any
    3b68:	ldr	w1, [sp, #144]
    3b6c:	ldr	x0, [sp, #128]
    3b70:	ubfiz	x1, x1, #4, #32
    3b74:	bl	0 <_ZdlPvm>
    3b78:	ldr	x1, [x21, #8]
    3b7c:	cbz	x1, 3d38 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3c0>
    3b80:	ldp	x0, x2, [x1]
    3b84:	cmp	x0, x2
    3b88:	b.eq	3d58 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3e0>  // b.none
    3b8c:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
    3b90:	ldr	x1, [x1]
    3b94:	b	3ba4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x22c>
    3b98:	add	x0, x0, #0x10
    3b9c:	cmp	x2, x0
    3ba0:	b.eq	3d58 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3e0>  // b.none
    3ba4:	ldr	x3, [x0]
    3ba8:	cmp	x3, x1
    3bac:	b.ne	3b98 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x220>  // b.any
    3bb0:	ldr	x0, [x0, #8]
    3bb4:	cbz	x0, 3d58 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3e0>
    3bb8:	ldr	x2, [x0]
    3bbc:	ldr	x2, [x2, #96]
    3bc0:	blr	x2
    3bc4:	add	x2, x0, #0x20
    3bc8:	mov	x1, x22
    3bcc:	mov	x0, x20
    3bd0:	bl	38b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>
    3bd4:	ldp	x19, x20, [sp, #16]
    3bd8:	ldp	x21, x22, [sp, #32]
    3bdc:	ldp	x23, x24, [sp, #48]
    3be0:	ldp	x25, x26, [sp, #64]
    3be4:	ldp	x29, x30, [sp], #224
    3be8:	ret
    3bec:	ldr	x0, [sp, #88]
    3bf0:	str	x0, [x19, #240]
    3bf4:	add	x23, x23, #0x8
    3bf8:	add	x24, x19, #0xf8
    3bfc:	cmp	x23, x24
    3c00:	b.eq	3c58 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2e0>  // b.none
    3c04:	ldr	x2, [x19, #256]
    3c08:	ldr	w1, [sp, #112]
    3c0c:	str	w1, [x24, #16]
    3c10:	add	w23, w1, #0x3f
    3c14:	lsl	x0, x2, #6
    3c18:	cmp	x0, w1, uxtw
    3c1c:	lsr	w23, w23, #6
    3c20:	b.cs	3c98 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x320>  // b.hs, b.nlast
    3c24:	cbz	w23, 3dd0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x458>
    3c28:	ubfiz	x25, x23, #3, #26
    3c2c:	mov	x0, x25
    3c30:	bl	0 <malloc>
    3c34:	mov	x24, x0
    3c38:	cbz	x0, 3df0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x478>
    3c3c:	ldr	x1, [sp, #96]
    3c40:	mov	x2, x25
    3c44:	mov	x0, x24
    3c48:	bl	0 <memcpy>
    3c4c:	ldr	x0, [x19, #248]
    3c50:	bl	0 <free>
    3c54:	stp	x24, x23, [x19, #248]
    3c58:	ldr	x24, [sp, #96]
    3c5c:	b	3a58 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xe0>
    3c60:	add	w0, w0, #0x3f
    3c64:	lsr	w23, w0, #6
    3c68:	lsl	x26, x23, #3
    3c6c:	mov	x0, x26
    3c70:	bl	0 <malloc>
    3c74:	mov	x25, x0
    3c78:	cbz	x0, 3db8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x440>
    3c7c:	ldr	x24, [sp, #96]
    3c80:	stp	x25, x23, [x19, #248]
    3c84:	mov	x2, x26
    3c88:	mov	x0, x25
    3c8c:	mov	x1, x24
    3c90:	bl	0 <memcpy>
    3c94:	b	3a50 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xd8>
    3c98:	mov	w0, w23
    3c9c:	cbnz	w1, 3d00 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x388>
    3ca0:	cmp	x0, x2
    3ca4:	b.cs	3c58 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2e0>  // b.hs, b.nlast
    3ca8:	subs	x2, x2, x0
    3cac:	b.eq	3c58 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2e0>  // b.none
    3cb0:	ldr	x3, [x19, #248]
    3cb4:	lsl	x2, x2, #3
    3cb8:	mov	w1, #0x0                   	// #0
    3cbc:	add	x0, x3, x0, lsl #3
    3cc0:	bl	0 <memset>
    3cc4:	ldr	w3, [x24, #16]
    3cc8:	ands	w3, w3, #0x3f
    3ccc:	b.eq	3c58 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2e0>  // b.none
    3cd0:	ldr	x1, [x19, #256]
    3cd4:	sub	w23, w23, #0x1
    3cd8:	mov	x0, #0xffffffffffffffff    	// #-1
    3cdc:	cmp	x23, x1
    3ce0:	lsl	x0, x0, x3
    3ce4:	b.cs	3e04 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x48c>  // b.hs, b.nlast
    3ce8:	ldr	x1, [x19, #248]
    3cec:	ldr	x24, [sp, #96]
    3cf0:	ldr	x2, [x1, x23, lsl #3]
    3cf4:	bic	x0, x2, x0
    3cf8:	str	x0, [x1, x23, lsl #3]
    3cfc:	b	3a58 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xe0>
    3d00:	lsl	x2, x0, #3
    3d04:	ldr	x1, [sp, #96]
    3d08:	ldr	x0, [x19, #248]
    3d0c:	bl	0 <memcpy>
    3d10:	ldr	w3, [x24, #16]
    3d14:	ldr	x1, [x19, #256]
    3d18:	add	w23, w3, #0x3f
    3d1c:	lsr	w0, w23, #6
    3d20:	lsr	w23, w23, #6
    3d24:	cmp	x1, x0
    3d28:	b.ls	3cc8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x350>  // b.plast
    3d2c:	subs	x2, x1, x0
    3d30:	b.eq	3cc8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x350>  // b.none
    3d34:	b	3cb0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x338>
    3d38:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d3c:	add	x3, x3, #0x0
    3d40:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d44:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d48:	add	x1, x1, #0x0
    3d4c:	add	x0, x0, #0x0
    3d50:	mov	w2, #0xdd                  	// #221
    3d54:	bl	0 <__assert_fail>
    3d58:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d5c:	add	x3, x3, #0x0
    3d60:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d64:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d68:	add	x1, x1, #0x0
    3d6c:	add	x0, x0, #0x0
    3d70:	mov	w2, #0xe9                  	// #233
    3d74:	bl	0 <__assert_fail>
    3d78:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d7c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d80:	add	x3, x3, #0x0
    3d84:	b	3d64 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3ec>
    3d88:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d8c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d90:	add	x3, x3, #0x0
    3d94:	b	3d44 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3cc>
    3d98:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d9c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3da0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3da4:	add	x3, x3, #0x0
    3da8:	add	x1, x1, #0x0
    3dac:	add	x0, x0, #0x0
    3db0:	mov	w2, #0x49                  	// #73
    3db4:	bl	0 <__assert_fail>
    3db8:	cbz	x26, 3e24 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x4ac>
    3dbc:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3dc0:	mov	w1, #0x1                   	// #1
    3dc4:	add	x0, x0, #0x0
    3dc8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    3dcc:	b	3c7c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x304>
    3dd0:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3dd4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3dd8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3ddc:	add	x3, x3, #0x0
    3de0:	add	x1, x1, #0x0
    3de4:	add	x0, x0, #0x0
    3de8:	mov	w2, #0x2dc                 	// #732
    3dec:	bl	0 <__assert_fail>
    3df0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3df4:	mov	w1, #0x1                   	// #1
    3df8:	add	x0, x0, #0x0
    3dfc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    3e00:	b	3c3c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2c4>
    3e04:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3e08:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3e0c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3e10:	add	x3, x3, #0x0
    3e14:	add	x1, x1, #0x0
    3e18:	add	x0, x0, #0x0
    3e1c:	mov	w2, #0x1ab                 	// #427
    3e20:	bl	0 <__assert_fail>
    3e24:	mov	x0, #0x1                   	// #1
    3e28:	bl	0 <malloc>
    3e2c:	cbz	x0, 3dbc <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x444>
    3e30:	mov	x25, x0
    3e34:	b	3c7c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x304>

0000000000003e38 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>:
    3e38:	stp	x29, x30, [sp, #-192]!
    3e3c:	mov	x29, sp
    3e40:	ldr	w3, [x2, #24]
    3e44:	stp	x19, x20, [sp, #16]
    3e48:	stp	x21, x22, [sp, #32]
    3e4c:	stp	x23, x24, [sp, #48]
    3e50:	str	x25, [sp, #64]
    3e54:	cbz	w3, 4018 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1e0>
    3e58:	mov	x21, x1
    3e5c:	adrp	x1, 0 <_ZN4llvm21TargetLibraryAnalysis3KeyE>
    3e60:	mov	x19, x2
    3e64:	ldr	x2, [x1]
    3e68:	cmn	x2, #0x10
    3e6c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    3e70:	b.eq	40dc <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x2a4>  // b.none
    3e74:	lsr	w0, w2, #9
    3e78:	sub	w3, w3, #0x1
    3e7c:	eor	w0, w0, w2, lsr #4
    3e80:	mov	x20, x8
    3e84:	and	w0, w0, w3
    3e88:	ldr	x5, [x19, #8]
    3e8c:	lsl	w4, w0, #4
    3e90:	ldr	x4, [x5, x4]
    3e94:	cmp	x4, x2
    3e98:	b.ne	400c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1d4>  // b.any
    3e9c:	ldr	x1, [x1]
    3ea0:	mov	x2, x21
    3ea4:	mov	x0, x19
    3ea8:	bl	0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
    3eac:	mov	x22, x0
    3eb0:	ldr	w3, [x19, #24]
    3eb4:	cbz	w3, 3fec <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1b4>
    3eb8:	adrp	x1, 0 <_ZN4llvm21DominatorTreeAnalysis3KeyE>
    3ebc:	ldr	x4, [x1]
    3ec0:	cmn	x4, #0x8
    3ec4:	ccmn	x4, #0x10, #0x4, ne  // ne = any
    3ec8:	b.eq	40dc <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x2a4>  // b.none
    3ecc:	lsr	w2, w4, #9
    3ed0:	sub	w3, w3, #0x1
    3ed4:	eor	w2, w2, w4, lsr #4
    3ed8:	and	w2, w2, w3
    3edc:	ldr	x5, [x19, #8]
    3ee0:	lsl	w0, w2, #4
    3ee4:	ldr	x0, [x5, x0]
    3ee8:	cmp	x0, x4
    3eec:	b.ne	40ac <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x274>  // b.any
    3ef0:	ldr	x1, [x1]
    3ef4:	mov	x2, x21
    3ef8:	mov	x0, x19
    3efc:	add	x24, x20, #0x28
    3f00:	add	x25, x20, #0x38
    3f04:	add	x23, x20, #0x60
    3f08:	bl	0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
    3f0c:	add	x2, x0, #0x8
    3f10:	add	x1, x22, #0x8
    3f14:	mov	x0, x21
    3f18:	bl	38b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>
    3f1c:	tst	w0, #0xff
    3f20:	b.eq	4028 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1f0>  // b.none
    3f24:	adrp	x1, 0 <_ZN4llvm9AAManager3KeyE>
    3f28:	adrp	x3, 0 <_ZN4llvm11CFGAnalyses6SetKeyE>
    3f2c:	add	x4, sp, #0x78
    3f30:	add	x2, sp, #0xb0
    3f34:	ldr	x3, [x3]
    3f38:	mov	w5, #0x1                   	// #1
    3f3c:	ldr	x1, [x1]
    3f40:	mov	x6, #0x1                   	// #1
    3f44:	add	x19, sp, #0x50
    3f48:	mov	w21, #0x2                   	// #2
    3f4c:	mov	x0, x19
    3f50:	mov	x22, #0x2                   	// #2
    3f54:	stp	x6, x4, [sp, #80]
    3f58:	str	x4, [sp, #96]
    3f5c:	stp	w21, w5, [sp, #104]
    3f60:	str	wzr, [sp, #112]
    3f64:	str	x3, [sp, #120]
    3f68:	stp	xzr, x2, [sp, #136]
    3f6c:	stp	x2, x22, [sp, #152]
    3f70:	str	wzr, [sp, #168]
    3f74:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3f78:	adrp	x1, 0 <_ZN4llvm9GlobalsAA3KeyE>
    3f7c:	mov	x0, x19
    3f80:	ldr	x1, [x1]
    3f84:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3f88:	mov	x3, x19
    3f8c:	mov	w2, w22
    3f90:	mov	x1, x24
    3f94:	mov	x0, x20
    3f98:	bl	0 <_ZN4llvm19SmallPtrSetImplBaseC2EPPKvjOS0_>
    3f9c:	mov	x1, x23
    3fa0:	mov	x0, x25
    3fa4:	add	x3, x19, #0x38
    3fa8:	mov	w2, w21
    3fac:	bl	0 <_ZN4llvm19SmallPtrSetImplBaseC2EPPKvjOS0_>
    3fb0:	ldp	x1, x0, [sp, #144]
    3fb4:	cmp	x1, x0
    3fb8:	b.eq	3fc0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x188>  // b.none
    3fbc:	bl	0 <free>
    3fc0:	ldp	x1, x0, [sp, #88]
    3fc4:	cmp	x1, x0
    3fc8:	b.eq	3fd0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x198>  // b.none
    3fcc:	bl	0 <free>
    3fd0:	mov	x0, x20
    3fd4:	ldp	x19, x20, [sp, #16]
    3fd8:	ldp	x21, x22, [sp, #32]
    3fdc:	ldp	x23, x24, [sp, #48]
    3fe0:	ldr	x25, [sp, #64]
    3fe4:	ldp	x29, x30, [sp], #192
    3fe8:	ret
    3fec:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3ff0:	add	x3, x3, #0x0
    3ff4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3ff8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3ffc:	add	x1, x1, #0x0
    4000:	add	x0, x0, #0x0
    4004:	mov	w2, #0x30a                 	// #778
    4008:	bl	0 <__assert_fail>
    400c:	mov	w6, #0x1                   	// #1
    4010:	cmn	x4, #0x8
    4014:	b.ne	4088 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x250>  // b.any
    4018:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    401c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    4020:	add	x3, x3, #0x0
    4024:	b	3ff8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1c0>
    4028:	dup	v1.2d, x24
    402c:	dup	v0.2d, x23
    4030:	adrp	x0, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
    4034:	mov	x2, #0x2                   	// #2
    4038:	str	xzr, [x20, #56]
    403c:	mov	x1, #0x2                   	// #2
    4040:	str	x2, [x20, #80]
    4044:	movk	x1, #0x1, lsl #32
    4048:	stur	q1, [x20, #8]
    404c:	mov	x2, #0x1                   	// #1
    4050:	str	q0, [x20, #64]
    4054:	ldr	x0, [x0]
    4058:	str	wzr, [x25, #32]
    405c:	str	x2, [x20]
    4060:	str	x1, [x20, #24]
    4064:	str	wzr, [x20, #32]
    4068:	str	x0, [x20, #40]
    406c:	mov	x0, x20
    4070:	ldp	x19, x20, [sp, #16]
    4074:	ldp	x21, x22, [sp, #32]
    4078:	ldp	x23, x24, [sp, #48]
    407c:	ldr	x25, [sp, #64]
    4080:	ldp	x29, x30, [sp], #192
    4084:	ret
    4088:	add	w0, w0, w6
    408c:	add	w6, w6, #0x1
    4090:	and	w4, w3, w0
    4094:	and	w0, w3, w0
    4098:	lsl	x4, x4, #4
    409c:	ldr	x4, [x5, x4]
    40a0:	cmp	x4, x2
    40a4:	b.eq	3e9c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x64>  // b.none
    40a8:	b	4010 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1d8>
    40ac:	mov	w6, #0x1                   	// #1
    40b0:	cmn	x0, #0x8
    40b4:	b.eq	3fec <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1b4>  // b.none
    40b8:	add	w2, w6, w2
    40bc:	add	w6, w6, #0x1
    40c0:	and	w0, w3, w2
    40c4:	and	w2, w3, w2
    40c8:	lsl	x0, x0, #4
    40cc:	ldr	x0, [x5, x0]
    40d0:	cmp	x0, x4
    40d4:	b.eq	3ef0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0xb8>  // b.none
    40d8:	b	40b0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x278>
    40dc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    40e0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    40e4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    40e8:	add	x3, x3, #0x0
    40ec:	add	x1, x1, #0x0
    40f0:	add	x0, x0, #0x0
    40f4:	mov	w2, #0x250                 	// #592
    40f8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_4_FUNEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_4_FUNEv>:
   0:	mrs	x1, tpidr_el0
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x2, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x2
  18:	mov	x29, sp
  1c:	ldr	x0, [x1, x0]
  20:	ldp	x29, x30, [sp], #16
  24:	ldp	x1, x2, [x0]
  28:	ldr	x0, [x2]
  2c:	mov	x16, x1
  30:	br	x16

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE:

0000000000000000 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x0, [x0, #64]
  18:	ldr	x2, [x19, #72]
  1c:	str	x21, [sp, #32]
  20:	cmp	x0, x2
  24:	b.eq	1a8 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1a8>  // b.none
  28:	add	x21, x19, #0x38
  2c:	mov	x0, x21
  30:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
  34:	ldr	x1, [x0]
  38:	cmp	x20, x1
  3c:	b.eq	f8 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xf8>  // b.none
  40:	ldp	x0, x1, [x19, #64]
  44:	cmp	x0, x1
  48:	b.eq	1f0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1f0>  // b.none
  4c:	ldp	x1, x3, [x19, #8]
  50:	ldr	w4, [x21, #32]
  54:	ldr	w5, [x19, #84]
  58:	cmp	w5, w4
  5c:	mov	x0, x1
  60:	mov	x2, x3
  64:	b.ne	14c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x14c>  // b.any
  68:	cmp	x3, x1
  6c:	b.eq	200 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x200>  // b.none
  70:	adrp	x21, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
  74:	mov	x0, x19
  78:	ldr	x21, [x21]
  7c:	mov	x1, x21
  80:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
  84:	ldr	x1, [x0]
  88:	cmp	x1, x21
  8c:	ldp	x1, x3, [x19, #8]
  90:	b.eq	2a0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2a0>  // b.none
  94:	cmp	x1, x3
  98:	b.eq	2ec <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2ec>  // b.none
  9c:	mov	x0, x1
  a0:	mov	x2, x3
  a4:	cmp	x3, x1
  a8:	b.ne	154 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x154>  // b.any
  ac:	nop
  b0:	ldr	w5, [x19, #28]
  b4:	ubfiz	x6, x5, #3, #32
  b8:	add	x4, x3, x6
  bc:	cmp	x4, x3
  c0:	b.eq	2b4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2b4>  // b.none
  c4:	mov	x3, #0x0                   	// #0
  c8:	b	e0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xe0>
  cc:	cmn	x1, #0x2
  d0:	csel	x3, x3, x0, ne  // ne = any
  d4:	add	x0, x0, #0x8
  d8:	cmp	x4, x0
  dc:	b.eq	274 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x274>  // b.none
  e0:	ldr	x1, [x0]
  e4:	cmp	x20, x1
  e8:	b.ne	cc <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xcc>  // b.any
  ec:	ldr	w1, [x19, #28]
  f0:	add	x2, x2, x1, lsl #3
  f4:	b	174 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x174>
  f8:	ldp	x3, x1, [x19, #64]
  fc:	cmp	x3, x1
 100:	b.eq	348 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x348>  // b.none
 104:	ldr	w2, [x21, #24]
 108:	add	x2, x1, x2, lsl #3
 10c:	cmp	x2, x0
 110:	b.eq	4c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x4c>  // b.none
 114:	ldr	x1, [x0]
 118:	cmp	x20, x1
 11c:	b.ne	31c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x31c>  // b.any
 120:	ldr	w4, [x21, #32]
 124:	mov	x1, #0xfffffffffffffffe    	// #-2
 128:	str	x1, [x0]
 12c:	add	w4, w4, #0x1
 130:	str	w4, [x21, #32]
 134:	ldp	x1, x3, [x19, #8]
 138:	ldr	w5, [x19, #84]
 13c:	cmp	w5, w4
 140:	mov	x0, x1
 144:	mov	x2, x3
 148:	b.eq	68 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x68>  // b.none
 14c:	cmp	x3, x1
 150:	b.eq	b0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xb0>  // b.none
 154:	mov	x1, x20
 158:	mov	x0, x19
 15c:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
 160:	ldp	x1, x2, [x19, #8]
 164:	cmp	x2, x1
 168:	b.eq	ec <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xec>  // b.none
 16c:	ldr	w1, [x19, #24]
 170:	add	x2, x2, x1, lsl #3
 174:	cmp	x0, x2
 178:	b.hi	2fc <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2fc>  // b.pmore
 17c:	b.eq	198 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x198>  // b.none
 180:	ldr	x1, [x0]
 184:	cmn	x1, #0x2
 188:	b.cc	198 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x198>  // b.lo, b.ul, b.last
 18c:	add	x0, x0, #0x8
 190:	cmp	x2, x0
 194:	b.ne	180 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x180>  // b.any
 198:	ldp	x19, x20, [sp, #16]
 19c:	ldr	x21, [sp, #32]
 1a0:	ldp	x29, x30, [sp], #48
 1a4:	ret
 1a8:	ldr	w1, [x19, #84]
 1ac:	add	x21, x19, #0x38
 1b0:	lsl	x1, x1, #3
 1b4:	add	x4, x0, x1
 1b8:	cmp	x0, x4
 1bc:	b.ne	1d0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1d0>  // b.any
 1c0:	b	1e4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1e4>
 1c4:	add	x0, x0, #0x8
 1c8:	cmp	x4, x0
 1cc:	b.eq	1e4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1e4>  // b.none
 1d0:	ldr	x3, [x0]
 1d4:	cmp	x20, x3
 1d8:	b.ne	1c4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1c4>  // b.any
 1dc:	add	x2, x2, x1
 1e0:	b	10c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x10c>
 1e4:	add	x0, x2, x1
 1e8:	mov	x2, x0
 1ec:	b	10c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x10c>
 1f0:	ldr	w2, [x21, #28]
 1f4:	add	x0, x0, x2, lsl #3
 1f8:	mov	x2, x0
 1fc:	b	10c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x10c>
 200:	ldr	w2, [x19, #28]
 204:	add	x2, x3, x2, lsl #3
 208:	cmp	x2, x3
 20c:	b.eq	2e4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2e4>  // b.none
 210:	adrp	x5, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
 214:	ldr	x5, [x5]
 218:	b	228 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x228>
 21c:	add	x0, x0, #0x8
 220:	cmp	x2, x0
 224:	b.eq	2e4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2e4>  // b.none
 228:	ldr	x4, [x0]
 22c:	cmp	x4, x5
 230:	b.ne	21c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x21c>  // b.any
 234:	cmp	x2, x0
 238:	b.cc	2fc <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2fc>  // b.lo, b.ul, b.last
 23c:	b.ne	250 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x250>  // b.any
 240:	b	9c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x9c>
 244:	add	x0, x0, #0x8
 248:	cmp	x2, x0
 24c:	b.eq	9c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x9c>  // b.none
 250:	ldr	x4, [x0]
 254:	cmn	x4, #0x2
 258:	b.cs	244 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x244>  // b.hs, b.nlast
 25c:	cmp	x2, x0
 260:	b.eq	9c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x9c>  // b.none
 264:	ldp	x19, x20, [sp, #16]
 268:	ldr	x21, [sp, #32]
 26c:	ldp	x29, x30, [sp], #48
 270:	ret
 274:	cbz	x3, 2b4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2b4>
 278:	ldr	x2, [x19]
 27c:	mov	x0, x3
 280:	ldr	w1, [x19, #32]
 284:	str	x20, [x3]
 288:	add	x2, x2, #0x1
 28c:	sub	w1, w1, #0x1
 290:	str	x2, [x19]
 294:	str	w1, [x19, #32]
 298:	ldp	x1, x2, [x19, #8]
 29c:	b	164 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x164>
 2a0:	cmp	x1, x3
 2a4:	b.eq	33c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x33c>  // b.none
 2a8:	ldr	w2, [x19, #24]
 2ac:	add	x2, x3, x2, lsl #3
 2b0:	b	234 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x234>
 2b4:	ldr	w0, [x19, #24]
 2b8:	cmp	w5, w0
 2bc:	b.cs	154 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x154>  // b.hs, b.nlast
 2c0:	add	w5, w5, #0x1
 2c4:	str	w5, [x19, #28]
 2c8:	ldr	x0, [x19]
 2cc:	str	x20, [x4]
 2d0:	ldp	x1, x2, [x19, #8]
 2d4:	add	x0, x0, #0x1
 2d8:	str	x0, [x19]
 2dc:	add	x0, x1, x6
 2e0:	b	164 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x164>
 2e4:	mov	x0, x2
 2e8:	b	234 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x234>
 2ec:	ldr	w0, [x19, #28]
 2f0:	add	x0, x1, x0, lsl #3
 2f4:	mov	x2, x0
 2f8:	b	234 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x234>
 2fc:	adrp	x3, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 300:	adrp	x1, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 304:	adrp	x0, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 308:	add	x3, x3, #0x0
 30c:	add	x1, x1, #0x0
 310:	add	x0, x0, #0x0
 314:	mov	w2, #0xf8                  	// #248
 318:	bl	0 <__assert_fail>
 31c:	adrp	x3, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 320:	adrp	x1, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 324:	adrp	x0, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 328:	add	x3, x3, #0x0
 32c:	add	x1, x1, #0x0
 330:	add	x0, x0, #0x0
 334:	mov	w2, #0xa7                  	// #167
 338:	bl	0 <__assert_fail>
 33c:	ldr	w2, [x19, #28]
 340:	add	x2, x1, x2, lsl #3
 344:	b	234 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x234>
 348:	ldr	w2, [x21, #28]
 34c:	add	x2, x3, x2, lsl #3
 350:	b	10c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x10c>

Disassembly of section .text._ZNK4llvm12ConstantExpr10getOperandEj:

0000000000000000 <_ZNK4llvm12ConstantExpr10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	ubfx	x2, x2, #0, #28
  10:	cmp	w1, w2
  14:	b.cs	44 <_ZNK4llvm12ConstantExpr10getOperandEj+0x44>  // b.hs, b.nlast
  18:	mov	w1, w1
  1c:	mov	w2, w2
  20:	sub	x1, x1, x2
  24:	add	x1, x1, x1, lsl #1
  28:	ldr	x0, [x0, x1, lsl #3]
  2c:	cbz	x0, 3c <_ZNK4llvm12ConstantExpr10getOperandEj+0x3c>
  30:	ldrb	w1, [x0, #16]
  34:	cmp	w1, #0x10
  38:	b.hi	64 <_ZNK4llvm12ConstantExpr10getOperandEj+0x64>  // b.pmore
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  48:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  4c:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  50:	add	x3, x3, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x0, x0, #0x0
  5c:	mov	w2, #0x4fa                 	// #1274
  60:	bl	0 <__assert_fail>
  64:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  68:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  6c:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  70:	add	x3, x3, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x0, x0, #0x0
  7c:	mov	w2, #0x134                 	// #308
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x0, [x1]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	stp	x23, x24, [sp, #48]
  20:	ldrb	w1, [x0, #8]
  24:	stp	x25, x26, [sp, #64]
  28:	cmp	w1, #0xf
  2c:	stp	x27, x28, [sp, #80]
  30:	stp	x4, x5, [sp, #96]
  34:	b.ne	408 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x408>  // b.any
  38:	ldr	x0, [x0, #16]
  3c:	ldr	x28, [x0]
  40:	cbz	x28, 3f8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x3f8>
  44:	ldrb	w0, [x28, #8]
  48:	cmp	w0, #0xc
  4c:	b.ne	428 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x428>  // b.any
  50:	ldp	x25, x23, [x20, #48]
  54:	mov	w0, #0x101                 	// #257
  58:	stp	xzr, xzr, [sp, #112]
  5c:	mov	x22, x2
  60:	mov	x27, x3
  64:	strh	w0, [sp, #128]
  68:	lsl	x26, x23, #3
  6c:	sub	x26, x26, x23
  70:	add	x26, x25, x26, lsl #3
  74:	cmp	x26, x25
  78:	b.eq	3b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x3b0>  // b.none
  7c:	mov	x2, x25
  80:	mov	w3, #0x0                   	// #0
  84:	nop
  88:	ldp	x1, x0, [x2, #32]
  8c:	add	x2, x2, #0x38
  90:	cmp	x26, x2
  94:	sub	x0, x0, x1
  98:	asr	x0, x0, #3
  9c:	add	w3, w3, w0
  a0:	b.ne	88 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x88>  // b.any
  a4:	add	w1, w27, #0x1
  a8:	lsl	w2, w23, #4
  ac:	add	w1, w1, w3
  b0:	mov	x0, #0x48                  	// #72
  b4:	bl	0 <_ZN4llvm4UsernwEmjj>
  b8:	mov	x24, x25
  bc:	ldr	x1, [x28, #16]
  c0:	mov	x19, x0
  c4:	mov	x2, x25
  c8:	mov	w7, #0x0                   	// #0
  cc:	ldr	x1, [x1]
  d0:	ldp	x3, x0, [x2, #32]
  d4:	add	x2, x2, #0x38
  d8:	cmp	x26, x2
  dc:	sub	x0, x0, x3
  e0:	asr	x0, x0, #3
  e4:	add	w7, w7, w0
  e8:	b.ne	d0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0xd0>  // b.any
  ec:	add	x7, x27, w7, uxtw
  f0:	mov	x3, #0xffffffffffffffe8    	// #-24
  f4:	mov	w4, #0x0                   	// #0
  f8:	add	x7, x7, x7, lsl #1
  fc:	sub	x7, x3, x7, lsl #3
 100:	add	x3, x19, x7
 104:	nop
 108:	ldp	x2, x0, [x25, #32]
 10c:	add	x25, x25, #0x38
 110:	cmp	x26, x25
 114:	sub	x0, x0, x2
 118:	asr	x0, x0, #3
 11c:	add	w4, w4, w0
 120:	b.ne	108 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x108>  // b.any
 124:	add	w4, w4, w27
 128:	add	w4, w4, #0x1
 12c:	mov	x0, x19
 130:	mov	x5, #0x0                   	// #0
 134:	mov	w2, #0x38                  	// #56
 138:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 13c:	str	xzr, [x19, #56]
 140:	add	x25, sp, #0x70
 144:	mov	x0, x19
 148:	mov	x5, x24
 14c:	mov	x6, x23
 150:	mov	x3, x22
 154:	mov	x4, x27
 158:	mov	x2, x21
 15c:	mov	x1, x28
 160:	mov	x7, x25
 164:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 168:	ldrb	w0, [x20, #44]
 16c:	cbnz	w0, 2a4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2a4>
 170:	ldrb	w1, [x19, #16]
 174:	cmp	w1, #0x17
 178:	sub	w2, w1, #0x18
 17c:	b.ls	310 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x310>  // b.plast
 180:	cmp	w2, #0x39
 184:	b.hi	1ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1ac>  // b.pmore
 188:	mov	x1, #0x5000                	// #20480
 18c:	mov	x0, #0x1                   	// #1
 190:	movk	x1, #0x125, lsl #16
 194:	lsl	x0, x0, x2
 198:	movk	x1, #0x40, lsl #48
 19c:	tst	x0, x1
 1a0:	b.ne	34c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x34c>  // b.any
 1a4:	tst	x0, #0x380000000000000
 1a8:	b.ne	320 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x320>  // b.any
 1ac:	ldr	x0, [x20, #8]
 1b0:	cbz	x0, 1fc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1fc>
 1b4:	ldr	x21, [x20, #16]
 1b8:	add	x0, x0, #0x28
 1bc:	mov	x1, x19
 1c0:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
 1c4:	ldr	x0, [x19, #24]
 1c8:	add	x2, x19, #0x18
 1cc:	ldr	x1, [x21]
 1d0:	and	x0, x0, #0x7
 1d4:	tst	x2, #0x7
 1d8:	and	x1, x1, #0xfffffffffffffff8
 1dc:	orr	x0, x0, x1
 1e0:	stp	x0, x21, [x19, #24]
 1e4:	ldr	x0, [x21]
 1e8:	str	x2, [x1, #8]
 1ec:	b.ne	448 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x448>  // b.any
 1f0:	and	x0, x0, #0x7
 1f4:	orr	x0, x0, x2
 1f8:	str	x0, [x21]
 1fc:	ldr	x1, [sp, #96]
 200:	mov	x0, x19
 204:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
 208:	ldr	x1, [x20]
 20c:	cbz	x1, 254 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x254>
 210:	mov	x0, x25
 214:	add	x20, x19, #0x30
 218:	mov	x2, #0x2                   	// #2
 21c:	str	x1, [sp, #112]
 220:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
 224:	cmp	x20, x25
 228:	b.eq	274 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x274>  // b.none
 22c:	ldr	x1, [x19, #48]
 230:	cbz	x1, 23c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x23c>
 234:	mov	x0, x20
 238:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 23c:	ldr	x1, [sp, #112]
 240:	str	x1, [x19, #48]
 244:	cbz	x1, 254 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x254>
 248:	mov	x2, x20
 24c:	mov	x0, x25
 250:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
 254:	mov	x0, x19
 258:	ldp	x19, x20, [sp, #16]
 25c:	ldp	x21, x22, [sp, #32]
 260:	ldp	x23, x24, [sp, #48]
 264:	ldp	x25, x26, [sp, #64]
 268:	ldp	x27, x28, [sp, #80]
 26c:	ldp	x29, x30, [sp], #144
 270:	ret
 274:	ldr	x1, [sp, #112]
 278:	cbz	x1, 254 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x254>
 27c:	mov	x0, x25
 280:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 284:	mov	x0, x19
 288:	ldp	x19, x20, [sp, #16]
 28c:	ldp	x21, x22, [sp, #32]
 290:	ldp	x23, x24, [sp, #48]
 294:	ldp	x25, x26, [sp, #64]
 298:	ldp	x27, x28, [sp, #80]
 29c:	ldp	x29, x30, [sp], #144
 2a0:	ret
 2a4:	add	x0, x19, #0x38
 2a8:	mov	w2, #0x39                  	// #57
 2ac:	mov	w1, #0xffffffff            	// #-1
 2b0:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
 2b4:	tst	w0, #0xff
 2b8:	b.ne	170 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x170>  // b.any
 2bc:	mov	x0, x19
 2c0:	mov	w1, #0x39                  	// #57
 2c4:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>
 2c8:	tst	w0, #0xff
 2cc:	b.ne	170 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x170>  // b.any
 2d0:	ldr	x1, [x19, #56]
 2d4:	mov	x0, x19
 2d8:	str	x1, [sp, #112]
 2dc:	bl	0 <_ZNK4llvm5Value10getContextEv>
 2e0:	mov	x1, x0
 2e4:	mov	w2, #0xffffffff            	// #-1
 2e8:	mov	x0, x25
 2ec:	mov	w3, #0x39                  	// #57
 2f0:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
 2f4:	str	x0, [sp, #112]
 2f8:	str	x0, [x19, #56]
 2fc:	ldrb	w1, [x19, #16]
 300:	cmp	w1, #0x17
 304:	sub	w2, w1, #0x18
 308:	b.hi	180 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x180>  // b.pmore
 30c:	nop
 310:	cmp	w1, #0x5
 314:	b.ne	1ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1ac>  // b.any
 318:	ldrh	w2, [x19, #18]
 31c:	b	180 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x180>
 320:	ldr	x0, [x19]
 324:	cbz	x0, 380 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x380>
 328:	ldrb	w1, [x0, #8]
 32c:	cmp	w1, #0xe
 330:	b.eq	378 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x378>  // b.none
 334:	cmp	w1, #0x10
 338:	b.eq	3e8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x3e8>  // b.none
 33c:	sub	w1, w1, #0x1
 340:	and	w1, w1, #0xff
 344:	cmp	w1, #0x5
 348:	b.hi	1ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1ac>  // b.pmore
 34c:	ldr	x0, [sp, #104]
 350:	ldr	w21, [x20, #40]
 354:	cbz	x0, 3a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x3a0>
 358:	ldr	x2, [sp, #104]
 35c:	mov	x0, x19
 360:	mov	w1, #0x3                   	// #3
 364:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 368:	mov	w1, w21
 36c:	mov	x0, x19
 370:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
 374:	b	1ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1ac>
 378:	ldr	x0, [x0, #24]
 37c:	cbnz	x0, 328 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x328>
 380:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 384:	add	x3, x3, #0x0
 388:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 38c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 390:	add	x1, x1, #0x0
 394:	add	x0, x0, #0x0
 398:	mov	w2, #0x69                  	// #105
 39c:	bl	0 <__assert_fail>
 3a0:	ldr	x0, [x20, #32]
 3a4:	str	x0, [sp, #104]
 3a8:	cbz	x0, 368 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x368>
 3ac:	b	358 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x358>
 3b0:	add	w1, w3, #0x1
 3b4:	lsl	w2, w23, #4
 3b8:	mov	x0, #0x48                  	// #72
 3bc:	bl	0 <_ZN4llvm4UsernwEmjj>
 3c0:	ldr	x2, [x28, #16]
 3c4:	add	x1, x27, x27, lsl #1
 3c8:	mov	x3, #0xffffffffffffffe8    	// #-24
 3cc:	mov	x19, x0
 3d0:	sub	x1, x3, x1, lsl #3
 3d4:	mov	x24, x26
 3d8:	add	x3, x0, x1
 3dc:	mov	w4, w27
 3e0:	ldr	x1, [x2]
 3e4:	b	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x128>
 3e8:	ldr	x0, [x0, #16]
 3ec:	ldr	x0, [x0]
 3f0:	ldrb	w1, [x0, #8]
 3f4:	b	33c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x33c>
 3f8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 3fc:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 400:	add	x3, x3, #0x0
 404:	b	38c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x38c>
 408:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 40c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 410:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 414:	add	x3, x3, #0x0
 418:	add	x1, x1, #0x0
 41c:	add	x0, x0, #0x0
 420:	mov	w2, #0x17e                 	// #382
 424:	bl	0 <__assert_fail>
 428:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 42c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 430:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 434:	add	x3, x3, #0x0
 438:	add	x1, x1, #0x0
 43c:	add	x0, x0, #0x0
 440:	mov	w2, #0x108                 	// #264
 444:	bl	0 <__assert_fail>
 448:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 44c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 450:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 454:	add	x3, x3, #0x0
 458:	add	x1, x1, #0x0
 45c:	add	x0, x0, #0x0
 460:	mov	w2, #0xb2                  	// #178
 464:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #16]
   8:	cmp	w1, #0x10
   c:	csel	x0, x0, xzr, ls  // ls = plast
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w1, [x0, #16]
  10:	cmp	w1, #0xd
  14:	b.ne	24 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x24>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	bl	0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x3, 0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x1, 0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	adrp	x0, 0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x108                 	// #264
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cbz	x1, 198 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x198>
  10:	mov	x19, x0
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0xd
  1c:	b.eq	68 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x68>  // b.none
  20:	ldr	x2, [x1]
  24:	ldrb	w2, [x2, #8]
  28:	cmp	w2, #0x10
  2c:	ccmp	w0, #0x10, #0x2, eq  // eq = none
  30:	b.ls	48 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x48>  // b.plast
  34:	mov	w19, #0x0                   	// #0
  38:	mov	w0, w19
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x29, x30, [sp], #80
  44:	ret
  48:	mov	x0, x1
  4c:	mov	w1, #0x0                   	// #0
  50:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  54:	mov	x1, x0
  58:	cbz	x0, 34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x34>
  5c:	ldrb	w0, [x0, #16]
  60:	cmp	w0, #0xd
  64:	b.ne	34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x34>  // b.any
  68:	ldr	w2, [x19, #8]
  6c:	add	x20, x1, #0x18
  70:	ldr	w1, [x1, #32]
  74:	cmp	w1, w2
  78:	b.eq	140 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x140>  // b.none
  7c:	stp	x21, x22, [sp, #32]
  80:	b.ls	e0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xe0>  // b.plast
  84:	add	x22, sp, #0x40
  88:	mov	x0, x19
  8c:	mov	x8, x22
  90:	bl	0 <_ZNK4llvm5APInt4zextEj>
  94:	ldr	w0, [x20, #8]
  98:	ldr	w21, [sp, #72]
  9c:	cmp	w0, w21
  a0:	b.ne	1a0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x1a0>  // b.any
  a4:	cmp	w21, #0x40
  a8:	b.ls	170 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x170>  // b.plast
  ac:	mov	x1, x22
  b0:	mov	x0, x20
  b4:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
  b8:	and	w19, w0, #0xff
  bc:	cmp	w21, #0x40
  c0:	b.ls	cc <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xcc>  // b.plast
  c4:	ldr	x0, [sp, #64]
  c8:	cbnz	x0, 128 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x128>
  cc:	mov	w0, w19
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x21, x22, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	add	x21, sp, #0x30
  e4:	mov	w1, w2
  e8:	mov	x0, x20
  ec:	mov	x8, x21
  f0:	bl	0 <_ZNK4llvm5APInt4zextEj>
  f4:	ldr	w1, [x19, #8]
  f8:	ldr	w0, [sp, #56]
  fc:	cmp	w0, w1
 100:	b.ne	1a0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x1a0>  // b.any
 104:	cmp	w0, #0x40
 108:	ldr	x20, [sp, #48]
 10c:	b.ls	15c <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x15c>  // b.plast
 110:	mov	x1, x19
 114:	mov	x0, x21
 118:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 11c:	and	w19, w0, #0xff
 120:	cbz	x20, cc <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xcc>
 124:	mov	x0, x20
 128:	bl	0 <_ZdaPv>
 12c:	mov	w0, w19
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
 140:	cmp	w1, #0x40
 144:	b.ls	184 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x184>  // b.plast
 148:	mov	x1, x19
 14c:	mov	x0, x20
 150:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 154:	and	w19, w0, #0xff
 158:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 15c:	ldr	x0, [x19]
 160:	ldp	x21, x22, [sp, #32]
 164:	cmp	x20, x0
 168:	cset	w19, eq  // eq = none
 16c:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 170:	ldr	x1, [x20]
 174:	ldr	x0, [sp, #64]
 178:	cmp	x1, x0
 17c:	cset	w19, eq  // eq = none
 180:	b	bc <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xbc>
 184:	ldr	x0, [x19]
 188:	ldr	x1, [x20]
 18c:	cmp	x1, x0
 190:	cset	w19, eq  // eq = none
 194:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 198:	stp	x21, x22, [sp, #32]
 19c:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1a0:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1a4:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1a8:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1ac:	add	x3, x3, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x0, x0, #0x0
 1b8:	mov	w2, #0x47f                 	// #1151
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 48 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x48>
   c:	ldrb	w1, [x0, #16]
  10:	sub	w1, w1, #0x25
  14:	and	w1, w1, #0xff
  18:	cmp	w1, #0x11
  1c:	b.ls	40 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>  // b.plast
  20:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x108                 	// #264
  3c:	bl	0 <__assert_fail>
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  4c:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  50:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  54:	add	x3, x3, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x0, x0, #0x0
  60:	mov	w2, #0x69                  	// #105
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #16]
   8:	cmp	w1, #0x5
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cbz	x1, 184 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x184>
  10:	ldrb	w0, [x1, #16]
  14:	mov	x19, x1
  18:	cmp	w0, #0xd
  1c:	b.eq	44 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x44>  // b.none
  20:	ldr	x0, [x1]
  24:	ldrb	w0, [x0, #8]
  28:	cmp	w0, #0x10
  2c:	b.eq	90 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x90>  // b.none
  30:	mov	w20, #0x0                   	// #0
  34:	mov	w0, w20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret
  44:	ldr	w20, [x1, #32]
  48:	cmp	w20, #0x40
  4c:	b.ls	74 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x74>  // b.plast
  50:	sub	w20, w20, #0x1
  54:	add	x0, x1, #0x18
  58:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  5c:	cmp	w20, w0
  60:	cset	w20, eq  // eq = none
  64:	mov	w0, w20
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	ldr	x0, [x1, #24]
  78:	cmp	x0, #0x1
  7c:	cset	w20, eq  // eq = none
  80:	mov	w0, w20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	mov	x0, x19
  94:	mov	w1, #0x0                   	// #0
  98:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  9c:	cbz	x0, ac <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xac>
  a0:	ldrb	w1, [x0, #16]
  a4:	cmp	w1, #0xd
  a8:	b.eq	140 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x140>  // b.none
  ac:	ldr	x0, [x19]
  b0:	stp	x21, x22, [sp, #32]
  b4:	cbz	x0, 1cc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1cc>
  b8:	ldrb	w1, [x0, #8]
  bc:	cmp	w1, #0x10
  c0:	b.ne	1ac <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1ac>  // b.any
  c4:	ldr	x0, [x0, #32]
  c8:	mov	w22, w0
  cc:	cbz	w0, 18c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x18c>
  d0:	mov	w21, #0x0                   	// #0
  d4:	mov	w20, #0x0                   	// #0
  d8:	mov	w1, w21
  dc:	mov	x0, x19
  e0:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
  e4:	cbz	x0, fc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xfc>
  e8:	ldrb	w1, [x0, #16]
  ec:	cmp	w1, #0x9
  f0:	b.eq	12c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x12c>  // b.none
  f4:	cmp	w1, #0xd
  f8:	b.eq	108 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x108>  // b.none
  fc:	mov	w20, #0x0                   	// #0
 100:	ldp	x21, x22, [sp, #32]
 104:	b	34 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x34>
 108:	ldr	w20, [x0, #32]
 10c:	cmp	w20, #0x40
 110:	b.ls	164 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x164>  // b.plast
 114:	sub	w20, w20, #0x1
 118:	add	x0, x0, #0x18
 11c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 120:	cmp	w20, w0
 124:	cset	w20, eq  // eq = none
 128:	cbz	w20, fc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xfc>
 12c:	add	w21, w21, #0x1
 130:	cmp	w21, w22
 134:	b.ne	d8 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xd8>  // b.any
 138:	ldp	x21, x22, [sp, #32]
 13c:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x64>
 140:	ldr	w19, [x0, #32]
 144:	cmp	w19, #0x40
 148:	b.ls	174 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x174>  // b.plast
 14c:	sub	w19, w19, #0x1
 150:	add	x0, x0, #0x18
 154:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 158:	cmp	w19, w0
 15c:	cset	w20, eq  // eq = none
 160:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x64>
 164:	ldr	x0, [x0, #24]
 168:	cmp	x0, #0x1
 16c:	cset	w20, eq  // eq = none
 170:	b	128 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x128>
 174:	ldr	x0, [x0, #24]
 178:	cmp	x0, #0x1
 17c:	cset	w20, eq  // eq = none
 180:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x64>
 184:	stp	x21, x22, [sp, #32]
 188:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 18c:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 190:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 194:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 198:	add	x3, x3, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x0, x0, #0x0
 1a4:	mov	w2, #0xeb                  	// #235
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 1b0:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 1b4:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 1b8:	add	x3, x3, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x0, x0, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>

Disassembly of section .text._ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cbz	x1, 198 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x198>
  10:	mov	x19, x0
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0xd
  1c:	b.eq	68 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x68>  // b.none
  20:	ldr	x0, [x1]
  24:	ldrb	w0, [x0, #8]
  28:	cmp	w0, #0x10
  2c:	b.eq	44 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x44>  // b.none
  30:	mov	w19, #0x0                   	// #0
  34:	mov	w0, w19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #80
  40:	ret
  44:	mov	x0, x1
  48:	mov	w1, #0x0                   	// #0
  4c:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  50:	mov	x1, x0
  54:	cbz	x0, 30 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x30>
  58:	ldrb	w0, [x0, #16]
  5c:	cmp	w0, #0xd
  60:	b.ne	30 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x30>  // b.any
  64:	nop
  68:	ldr	w2, [x19, #8]
  6c:	add	x20, x1, #0x18
  70:	ldr	w1, [x1, #32]
  74:	cmp	w1, w2
  78:	b.eq	140 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x140>  // b.none
  7c:	stp	x21, x22, [sp, #32]
  80:	b.ls	e0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xe0>  // b.plast
  84:	add	x22, sp, #0x40
  88:	mov	x0, x19
  8c:	mov	x8, x22
  90:	bl	0 <_ZNK4llvm5APInt4zextEj>
  94:	ldr	w0, [x20, #8]
  98:	ldr	w21, [sp, #72]
  9c:	cmp	w0, w21
  a0:	b.ne	1a0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x1a0>  // b.any
  a4:	cmp	w21, #0x40
  a8:	b.ls	170 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x170>  // b.plast
  ac:	mov	x1, x22
  b0:	mov	x0, x20
  b4:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
  b8:	and	w19, w0, #0xff
  bc:	cmp	w21, #0x40
  c0:	b.ls	cc <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xcc>  // b.plast
  c4:	ldr	x0, [sp, #64]
  c8:	cbnz	x0, 128 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x128>
  cc:	mov	w0, w19
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x21, x22, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	add	x21, sp, #0x30
  e4:	mov	w1, w2
  e8:	mov	x0, x20
  ec:	mov	x8, x21
  f0:	bl	0 <_ZNK4llvm5APInt4zextEj>
  f4:	ldr	w1, [x19, #8]
  f8:	ldr	w0, [sp, #56]
  fc:	cmp	w0, w1
 100:	b.ne	1a0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x1a0>  // b.any
 104:	cmp	w0, #0x40
 108:	ldr	x20, [sp, #48]
 10c:	b.ls	15c <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x15c>  // b.plast
 110:	mov	x1, x19
 114:	mov	x0, x21
 118:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 11c:	and	w19, w0, #0xff
 120:	cbz	x20, cc <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xcc>
 124:	mov	x0, x20
 128:	bl	0 <_ZdaPv>
 12c:	mov	w0, w19
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
 140:	cmp	w1, #0x40
 144:	b.ls	184 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x184>  // b.plast
 148:	mov	x1, x19
 14c:	mov	x0, x20
 150:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 154:	and	w19, w0, #0xff
 158:	b	34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x34>
 15c:	ldr	x0, [x19]
 160:	ldp	x21, x22, [sp, #32]
 164:	cmp	x20, x0
 168:	cset	w19, eq  // eq = none
 16c:	b	34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x34>
 170:	ldr	x1, [x20]
 174:	ldr	x0, [sp, #64]
 178:	cmp	x1, x0
 17c:	cset	w19, eq  // eq = none
 180:	b	bc <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xbc>
 184:	ldr	x0, [x19]
 188:	ldr	x1, [x20]
 18c:	cmp	x1, x0
 190:	cset	w19, eq  // eq = none
 194:	b	34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x34>
 198:	stp	x21, x22, [sp, #32]
 19c:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1a0:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1a4:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1a8:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1ac:	add	x3, x3, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x0, x0, #0x0
 1b8:	mov	w2, #0x47f                 	// #1151
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x32
  18:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x1a
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.any
  44:	ldr	w2, [x1, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x2, x2, #0, #28
  50:	cbz	w2, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>
  54:	mov	w4, w2
  58:	ubfiz	x3, x2, #2, #28
  5c:	sub	x3, x4, x3
  60:	ldr	x3, [x1, x3, lsl #3]
  64:	cbz	x3, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1e8>
  68:	ldrb	w0, [x3, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
  74:	ldr	x0, [x20]
  78:	cmp	w2, #0x1
  7c:	str	x3, [x0]
  80:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>  // b.plast
  84:	mov	x0, #0x1                   	// #1
  88:	sub	x0, x0, x4
  8c:	add	x0, x0, x0, lsl #1
  90:	ldr	x21, [x1, x0, lsl #3]
  94:	cbz	x21, 1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1ec>
  98:	ldrb	w0, [x21, #16]
  9c:	cmp	w0, #0x10
  a0:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
  a4:	cmp	w0, #0x5
  a8:	b.eq	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1ac>  // b.none
  ac:	nop
  b0:	ldr	x21, [sp, #32]
  b4:	b	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>
  b8:	ldur	x0, [x1, #-48]
  bc:	str	x21, [sp, #32]
  c0:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f4>
  c4:	ldr	x2, [x20]
  c8:	str	x0, [x2]
  cc:	ldur	x21, [x1, #-24]
  d0:	ldrb	w0, [x21, #16]
  d4:	cmp	w0, #0x27
  d8:	b.eq	180 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x180>  // b.none
  dc:	cmp	w0, #0x5
  e0:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  e4:	ldrh	w0, [x21, #18]
  e8:	cmp	w0, #0xf
  ec:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  f0:	ldr	w1, [x21, #20]
  f4:	add	x0, x20, #0x8
  f8:	ubfx	x1, x1, #0, #28
  fc:	cbz	w1, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>
 100:	mov	w2, w1
 104:	ubfiz	x1, x1, #2, #28
 108:	sub	x1, x2, x1
 10c:	ldr	x1, [x21, x1, lsl #3]
 110:	cbz	x1, 120 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x120>
 114:	ldrb	w2, [x1, #16]
 118:	cmp	w2, #0x10
 11c:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
 120:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 124:	ands	w19, w0, #0xff
 128:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 12c:	ldr	w0, [x21, #20]
 130:	ubfx	x0, x0, #0, #28
 134:	cmp	w0, #0x1
 138:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>  // b.plast
 13c:	mov	w1, w0
 140:	mov	x0, #0x1                   	// #1
 144:	sub	x0, x0, x1
 148:	add	x0, x0, x0, lsl #1
 14c:	ldr	x0, [x21, x0, lsl #3]
 150:	cbz	x0, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1e8>
 154:	ldrb	w1, [x0, #16]
 158:	cmp	w1, #0x10
 15c:	b.ls	19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x19c>  // b.plast
 160:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 164:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 168:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 16c:	add	x3, x3, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x0, x0, #0x0
 178:	mov	w2, #0x134                 	// #308
 17c:	bl	0 <__assert_fail>
 180:	ldur	x1, [x21, #-48]
 184:	add	x0, x20, #0x8
 188:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 18c:	ands	w19, w0, #0xff
 190:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 194:	ldur	x0, [x21, #-24]
 198:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f4>
 19c:	ldr	x1, [x20, #24]
 1a0:	ldr	x21, [sp, #32]
 1a4:	str	x0, [x1]
 1a8:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 1ac:	ldrh	w0, [x21, #18]
 1b0:	cmp	w0, #0xf
 1b4:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
 1b8:	mov	w1, #0x0                   	// #0
 1bc:	mov	x0, x21
 1c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1c4:	mov	x1, x0
 1c8:	add	x0, x20, #0x8
 1cc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1d0:	ands	w19, w0, #0xff
 1d4:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 1d8:	mov	x0, x21
 1dc:	mov	w1, #0x1                   	// #1
 1e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1e4:	cbnz	x0, 19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x19c>
 1e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1ec:	ldrb	w0, [x21, #16]
 1f0:	brk	#0x3e8
 1f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1fc:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 200:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 204:	add	x3, x3, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x0, x0, #0x0
 210:	mov	w2, #0x4fa                 	// #1274
 214:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x32
  18:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x1a
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x24>  // b.any
  44:	ldr	w2, [x1, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x2, x2, #0, #28
  50:	cbz	w2, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f8>
  54:	mov	w4, w2
  58:	ubfiz	x3, x2, #2, #28
  5c:	sub	x3, x4, x3
  60:	ldr	x3, [x1, x3, lsl #3]
  64:	cbz	x3, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1e8>
  68:	ldrb	w0, [x3, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x160>  // b.pmore
  74:	ldr	x0, [x20]
  78:	cmp	w2, #0x1
  7c:	str	x3, [x0]
  80:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f8>  // b.plast
  84:	mov	x0, #0x1                   	// #1
  88:	sub	x0, x0, x4
  8c:	add	x0, x0, x0, lsl #1
  90:	ldr	x21, [x1, x0, lsl #3]
  94:	cbz	x21, 1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1ec>
  98:	ldrb	w0, [x21, #16]
  9c:	cmp	w0, #0x10
  a0:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x160>  // b.pmore
  a4:	cmp	w0, #0x5
  a8:	b.eq	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1ac>  // b.none
  ac:	nop
  b0:	ldr	x21, [sp, #32]
  b4:	b	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x24>
  b8:	ldur	x0, [x1, #-48]
  bc:	str	x21, [sp, #32]
  c0:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f4>
  c4:	ldr	x2, [x20]
  c8:	str	x0, [x2]
  cc:	ldur	x21, [x1, #-24]
  d0:	ldrb	w0, [x21, #16]
  d4:	cmp	w0, #0x27
  d8:	b.eq	180 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x180>  // b.none
  dc:	cmp	w0, #0x5
  e0:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  e4:	ldrh	w0, [x21, #18]
  e8:	cmp	w0, #0xf
  ec:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  f0:	ldr	w1, [x21, #20]
  f4:	add	x0, x20, #0x8
  f8:	ubfx	x1, x1, #0, #28
  fc:	cbz	w1, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f8>
 100:	mov	w2, w1
 104:	ubfiz	x1, x1, #2, #28
 108:	sub	x1, x2, x1
 10c:	ldr	x1, [x21, x1, lsl #3]
 110:	cbz	x1, 120 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x120>
 114:	ldrb	w2, [x1, #16]
 118:	cmp	w2, #0x10
 11c:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x160>  // b.pmore
 120:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 124:	ands	w19, w0, #0xff
 128:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 12c:	ldr	w0, [x21, #20]
 130:	ubfx	x0, x0, #0, #28
 134:	cmp	w0, #0x1
 138:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f8>  // b.plast
 13c:	mov	w1, w0
 140:	mov	x0, #0x1                   	// #1
 144:	sub	x0, x0, x1
 148:	add	x0, x0, x0, lsl #1
 14c:	ldr	x0, [x21, x0, lsl #3]
 150:	cbz	x0, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1e8>
 154:	ldrb	w1, [x0, #16]
 158:	cmp	w1, #0x10
 15c:	b.ls	19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x19c>  // b.plast
 160:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 164:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 168:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 16c:	add	x3, x3, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x0, x0, #0x0
 178:	mov	w2, #0x134                 	// #308
 17c:	bl	0 <__assert_fail>
 180:	ldur	x1, [x21, #-48]
 184:	add	x0, x20, #0x8
 188:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 18c:	ands	w19, w0, #0xff
 190:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 194:	ldur	x0, [x21, #-24]
 198:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f4>
 19c:	ldr	x1, [x20, #24]
 1a0:	ldr	x21, [sp, #32]
 1a4:	str	x0, [x1]
 1a8:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x28>
 1ac:	ldrh	w0, [x21, #18]
 1b0:	cmp	w0, #0xf
 1b4:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
 1b8:	mov	w1, #0x0                   	// #0
 1bc:	mov	x0, x21
 1c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1c4:	mov	x1, x0
 1c8:	add	x0, x20, #0x8
 1cc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1d0:	ands	w19, w0, #0xff
 1d4:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 1d8:	mov	x0, x21
 1dc:	mov	w1, #0x1                   	// #1
 1e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1e4:	cbnz	x0, 19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x19c>
 1e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1ec:	ldrb	w0, [x21, #16]
 1f0:	brk	#0x3e8
 1f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1fc:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 200:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 204:	add	x3, x3, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x0, x0, #0x0
 210:	mov	w2, #0x4fa                 	// #1274
 214:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x31
  18:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x19
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.any
  44:	ldr	w2, [x1, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x2, x2, #0, #28
  50:	cbz	w2, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>
  54:	mov	w4, w2
  58:	ubfiz	x3, x2, #2, #28
  5c:	sub	x3, x4, x3
  60:	ldr	x3, [x1, x3, lsl #3]
  64:	cbz	x3, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1e8>
  68:	ldrb	w0, [x3, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
  74:	ldr	x0, [x20]
  78:	cmp	w2, #0x1
  7c:	str	x3, [x0]
  80:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>  // b.plast
  84:	mov	x0, #0x1                   	// #1
  88:	sub	x0, x0, x4
  8c:	add	x0, x0, x0, lsl #1
  90:	ldr	x21, [x1, x0, lsl #3]
  94:	cbz	x21, 1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1ec>
  98:	ldrb	w0, [x21, #16]
  9c:	cmp	w0, #0x10
  a0:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
  a4:	cmp	w0, #0x5
  a8:	b.eq	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1ac>  // b.none
  ac:	nop
  b0:	ldr	x21, [sp, #32]
  b4:	b	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x24>
  b8:	ldur	x0, [x1, #-48]
  bc:	str	x21, [sp, #32]
  c0:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f4>
  c4:	ldr	x2, [x20]
  c8:	str	x0, [x2]
  cc:	ldur	x21, [x1, #-24]
  d0:	ldrb	w0, [x21, #16]
  d4:	cmp	w0, #0x27
  d8:	b.eq	180 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x180>  // b.none
  dc:	cmp	w0, #0x5
  e0:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  e4:	ldrh	w0, [x21, #18]
  e8:	cmp	w0, #0xf
  ec:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  f0:	ldr	w1, [x21, #20]
  f4:	add	x0, x20, #0x8
  f8:	ubfx	x1, x1, #0, #28
  fc:	cbz	w1, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>
 100:	mov	w2, w1
 104:	ubfiz	x1, x1, #2, #28
 108:	sub	x1, x2, x1
 10c:	ldr	x1, [x21, x1, lsl #3]
 110:	cbz	x1, 120 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x120>
 114:	ldrb	w2, [x1, #16]
 118:	cmp	w2, #0x10
 11c:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
 120:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 124:	ands	w19, w0, #0xff
 128:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 12c:	ldr	w0, [x21, #20]
 130:	ubfx	x0, x0, #0, #28
 134:	cmp	w0, #0x1
 138:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>  // b.plast
 13c:	mov	w1, w0
 140:	mov	x0, #0x1                   	// #1
 144:	sub	x0, x0, x1
 148:	add	x0, x0, x0, lsl #1
 14c:	ldr	x0, [x21, x0, lsl #3]
 150:	cbz	x0, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1e8>
 154:	ldrb	w1, [x0, #16]
 158:	cmp	w1, #0x10
 15c:	b.ls	19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x19c>  // b.plast
 160:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 164:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 168:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 16c:	add	x3, x3, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x0, x0, #0x0
 178:	mov	w2, #0x134                 	// #308
 17c:	bl	0 <__assert_fail>
 180:	ldur	x1, [x21, #-48]
 184:	add	x0, x20, #0x8
 188:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 18c:	ands	w19, w0, #0xff
 190:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 194:	ldur	x0, [x21, #-24]
 198:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f4>
 19c:	ldr	x1, [x20, #24]
 1a0:	ldr	x21, [sp, #32]
 1a4:	str	x0, [x1]
 1a8:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 1ac:	ldrh	w0, [x21, #18]
 1b0:	cmp	w0, #0xf
 1b4:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
 1b8:	mov	w1, #0x0                   	// #0
 1bc:	mov	x0, x21
 1c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1c4:	mov	x1, x0
 1c8:	add	x0, x20, #0x8
 1cc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1d0:	ands	w19, w0, #0xff
 1d4:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 1d8:	mov	x0, x21
 1dc:	mov	w1, #0x1                   	// #1
 1e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1e4:	cbnz	x0, 19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x19c>
 1e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1ec:	ldrb	w0, [x21, #16]
 1f0:	brk	#0x3e8
 1f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1fc:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 200:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 204:	add	x3, x3, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x0, x0, #0x0
 210:	mov	w2, #0x4fa                 	// #1274
 214:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x31
  18:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x19
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x24>  // b.any
  44:	ldr	w2, [x1, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x2, x2, #0, #28
  50:	cbz	w2, 1cc <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1cc>
  54:	mov	w4, w2
  58:	ubfiz	x3, x2, #2, #28
  5c:	sub	x3, x4, x3
  60:	ldr	x3, [x1, x3, lsl #3]
  64:	cbz	x3, 19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x19c>
  68:	ldrb	w0, [x3, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1ac>  // b.pmore
  74:	ldr	x0, [x20]
  78:	cmp	w2, #0x1
  7c:	str	x3, [x0]
  80:	b.ls	1cc <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1cc>  // b.plast
  84:	mov	x0, #0x1                   	// #1
  88:	sub	x0, x0, x4
  8c:	add	x0, x0, x0, lsl #1
  90:	ldr	x21, [x1, x0, lsl #3]
  94:	cbz	x21, 1a0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1a0>
  98:	ldrb	w0, [x21, #16]
  9c:	cmp	w0, #0x10
  a0:	b.hi	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1ac>  // b.pmore
  a4:	cmp	w0, #0x5
  a8:	b.eq	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x160>  // b.none
  ac:	nop
  b0:	ldr	x21, [sp, #32]
  b4:	b	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x24>
  b8:	ldur	x0, [x1, #-48]
  bc:	str	x21, [sp, #32]
  c0:	cbz	x0, 1a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1a8>
  c4:	ldr	x2, [x20]
  c8:	str	x0, [x2]
  cc:	ldur	x21, [x1, #-24]
  d0:	ldrb	w0, [x21, #16]
  d4:	cmp	w0, #0x27
  d8:	b.eq	134 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x134>  // b.none
  dc:	cmp	w0, #0x5
  e0:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  e4:	ldrh	w0, [x21, #18]
  e8:	cmp	w0, #0xf
  ec:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  f0:	ldr	w1, [x21, #20]
  f4:	add	x0, x20, #0x8
  f8:	ubfx	x1, x1, #0, #28
  fc:	cbz	w1, 1cc <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1cc>
 100:	mov	w2, w1
 104:	ubfiz	x1, x1, #2, #28
 108:	sub	x1, x2, x1
 10c:	ldr	x1, [x21, x1, lsl #3]
 110:	cbz	x1, 120 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x120>
 114:	ldrb	w2, [x1, #16]
 118:	cmp	w2, #0x10
 11c:	b.hi	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1ac>  // b.pmore
 120:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 124:	ands	w19, w0, #0xff
 128:	b.ne	18c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x18c>  // b.any
 12c:	ldr	x21, [sp, #32]
 130:	b	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x24>
 134:	ldur	x1, [x21, #-48]
 138:	add	x0, x20, #0x8
 13c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 140:	ands	w19, w0, #0xff
 144:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 148:	ldur	x0, [x21, #-24]
 14c:	cbz	x0, 1a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1a8>
 150:	ldr	x1, [x20, #24]
 154:	ldr	x21, [sp, #32]
 158:	str	x0, [x1]
 15c:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x28>
 160:	ldrh	w0, [x21, #18]
 164:	cmp	w0, #0xf
 168:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
 16c:	mov	w1, #0x0                   	// #0
 170:	mov	x0, x21
 174:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 178:	mov	x1, x0
 17c:	add	x0, x20, #0x8
 180:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 184:	ands	w19, w0, #0xff
 188:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 18c:	mov	x0, x21
 190:	mov	w1, #0x1                   	// #1
 194:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 198:	cbnz	x0, 150 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x150>
 19c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1a0:	ldrb	w0, [x21, #16]
 1a4:	brk	#0x3e8
 1a8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1ac:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1b0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1b4:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1b8:	add	x3, x3, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x0, x0, #0x0
 1c4:	mov	w2, #0x134                 	// #308
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1d0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1d4:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1d8:	add	x3, x3, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x0, x0, #0x0
 1e4:	mov	w2, #0x4fa                 	// #1274
 1e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.eq	84 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x84>  // b.none
  20:	cmp	w1, #0x5
  24:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x19, #18]
  3c:	cmp	w0, #0x1c
  40:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
  44:	ldr	w0, [x19, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x0, x0, #0, #28
  50:	cbz	w0, 200 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x200>
  54:	mov	w1, w0
  58:	ubfiz	x0, x0, #2, #28
  5c:	sub	x0, x1, x0
  60:	ldr	x21, [x19, x0, lsl #3]
  64:	cbz	x21, 1d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1d0>
  68:	ldrb	w0, [x21, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1dc>  // b.pmore
  74:	cmp	w0, #0x5
  78:	b.eq	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x140>  // b.none
  7c:	ldr	x21, [sp, #32]
  80:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>
  84:	ldur	x0, [x19, #-48]
  88:	ldrb	w1, [x0, #16]
  8c:	cmp	w1, #0x32
  90:	b.eq	114 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x114>  // b.none
  94:	cmp	w1, #0x5
  98:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
  9c:	ldrh	w1, [x0, #18]
  a0:	cmp	w1, #0x1a
  a4:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
  a8:	ldr	w1, [x0, #20]
  ac:	ubfx	x1, x1, #0, #28
  b0:	cbz	w1, 1fc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1fc>
  b4:	mov	w2, w1
  b8:	ubfiz	x1, x1, #2, #28
  bc:	sub	x1, x2, x1
  c0:	ldr	x1, [x0, x1, lsl #3]
  c4:	cbz	x1, d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xd4>
  c8:	ldrb	w2, [x1, #16]
  cc:	cmp	w2, #0x10
  d0:	b.hi	1d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1d8>  // b.pmore
  d4:	ldr	x2, [x20]
  d8:	ldr	x2, [x2]
  dc:	cmp	x2, x1
  e0:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
  e4:	mov	w1, #0x1                   	// #1
  e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  ec:	mov	x1, x0
  f0:	add	x0, x20, #0x8
  f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  f8:	tst	w0, #0xff
  fc:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.none
 100:	add	x0, x20, #0x18
 104:	ldur	x1, [x19, #-24]
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 114:	ldr	x2, [x20]
 118:	ldur	x1, [x0, #-48]
 11c:	ldr	x2, [x2]
 120:	cmp	x2, x1
 124:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
 128:	ldur	x1, [x0, #-24]
 12c:	add	x0, x20, #0x8
 130:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 134:	tst	w0, #0xff
 138:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.none
 13c:	b	100 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x100>
 140:	ldrh	w0, [x21, #18]
 144:	cmp	w0, #0x1a
 148:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x7c>  // b.any
 14c:	mov	w1, #0x0                   	// #0
 150:	mov	x0, x21
 154:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 158:	ldr	x1, [x20]
 15c:	ldr	x1, [x1]
 160:	cmp	x1, x0
 164:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x7c>  // b.any
 168:	mov	w1, #0x1                   	// #1
 16c:	mov	x0, x21
 170:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 174:	mov	x1, x0
 178:	add	x0, x20, #0x8
 17c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 180:	tst	w0, #0xff
 184:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x7c>  // b.none
 188:	ldr	w1, [x19, #20]
 18c:	add	x0, x20, #0x18
 190:	ubfx	x1, x1, #0, #28
 194:	cmp	w1, #0x1
 198:	b.ls	200 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x200>  // b.plast
 19c:	mov	w2, w1
 1a0:	mov	x1, #0x1                   	// #1
 1a4:	sub	x1, x1, x2
 1a8:	add	x1, x1, x1, lsl #1
 1ac:	ldr	x1, [x19, x1, lsl #3]
 1b0:	cbz	x1, 1c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1c0>
 1b4:	ldrb	w2, [x1, #16]
 1b8:	cmp	w2, #0x10
 1bc:	b.hi	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1dc>  // b.pmore
 1c0:	ldp	x19, x20, [sp, #16]
 1c4:	ldr	x21, [sp, #32]
 1c8:	ldp	x29, x30, [sp], #48
 1cc:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1d0:	ldrb	w0, [x21, #16]
 1d4:	brk	#0x3e8
 1d8:	str	x21, [sp, #32]
 1dc:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1e0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1e4:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1e8:	add	x3, x3, #0x0
 1ec:	add	x1, x1, #0x0
 1f0:	add	x0, x0, #0x0
 1f4:	mov	w2, #0x134                 	// #308
 1f8:	bl	0 <__assert_fail>
 1fc:	str	x21, [sp, #32]
 200:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 204:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 208:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 20c:	add	x3, x3, #0x0
 210:	add	x1, x1, #0x0
 214:	add	x0, x0, #0x0
 218:	mov	w2, #0x4fa                 	// #1274
 21c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.eq	84 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x84>  // b.none
  20:	cmp	w1, #0x5
  24:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x19, #18]
  3c:	cmp	w0, #0x1c
  40:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
  44:	ldr	w0, [x19, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x0, x0, #0, #28
  50:	cbz	w0, 200 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x200>
  54:	mov	w1, w0
  58:	ubfiz	x0, x0, #2, #28
  5c:	sub	x0, x1, x0
  60:	ldr	x21, [x19, x0, lsl #3]
  64:	cbz	x21, 1d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1d0>
  68:	ldrb	w0, [x21, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1dc>  // b.pmore
  74:	cmp	w0, #0x5
  78:	b.eq	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x140>  // b.none
  7c:	ldr	x21, [sp, #32]
  80:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
  84:	ldur	x0, [x19, #-48]
  88:	ldrb	w1, [x0, #16]
  8c:	cmp	w1, #0x32
  90:	b.eq	114 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x114>  // b.none
  94:	cmp	w1, #0x5
  98:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
  9c:	ldrh	w1, [x0, #18]
  a0:	cmp	w1, #0x1a
  a4:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
  a8:	ldr	w1, [x0, #20]
  ac:	ubfx	x1, x1, #0, #28
  b0:	cbz	w1, 1fc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1fc>
  b4:	mov	w2, w1
  b8:	ubfiz	x1, x1, #2, #28
  bc:	sub	x1, x2, x1
  c0:	ldr	x1, [x0, x1, lsl #3]
  c4:	cbz	x1, d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0xd4>
  c8:	ldrb	w2, [x1, #16]
  cc:	cmp	w2, #0x10
  d0:	b.hi	1d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1d8>  // b.pmore
  d4:	ldr	x2, [x20]
  d8:	ldr	x2, [x2]
  dc:	cmp	x2, x1
  e0:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
  e4:	mov	w1, #0x1                   	// #1
  e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  ec:	mov	x1, x0
  f0:	add	x0, x20, #0x8
  f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  f8:	tst	w0, #0xff
  fc:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.none
 100:	add	x0, x20, #0x18
 104:	ldur	x1, [x19, #-24]
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 114:	ldr	x2, [x20]
 118:	ldur	x1, [x0, #-48]
 11c:	ldr	x2, [x2]
 120:	cmp	x2, x1
 124:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
 128:	ldur	x1, [x0, #-24]
 12c:	add	x0, x20, #0x8
 130:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 134:	tst	w0, #0xff
 138:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.none
 13c:	b	100 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x100>
 140:	ldrh	w0, [x21, #18]
 144:	cmp	w0, #0x1a
 148:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x7c>  // b.any
 14c:	mov	w1, #0x0                   	// #0
 150:	mov	x0, x21
 154:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 158:	ldr	x1, [x20]
 15c:	ldr	x1, [x1]
 160:	cmp	x1, x0
 164:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x7c>  // b.any
 168:	mov	w1, #0x1                   	// #1
 16c:	mov	x0, x21
 170:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 174:	mov	x1, x0
 178:	add	x0, x20, #0x8
 17c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 180:	tst	w0, #0xff
 184:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x7c>  // b.none
 188:	ldr	w1, [x19, #20]
 18c:	add	x0, x20, #0x18
 190:	ubfx	x1, x1, #0, #28
 194:	cmp	w1, #0x1
 198:	b.ls	200 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x200>  // b.plast
 19c:	mov	w2, w1
 1a0:	mov	x1, #0x1                   	// #1
 1a4:	sub	x1, x1, x2
 1a8:	add	x1, x1, x1, lsl #1
 1ac:	ldr	x1, [x19, x1, lsl #3]
 1b0:	cbz	x1, 1c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1c0>
 1b4:	ldrb	w2, [x1, #16]
 1b8:	cmp	w2, #0x10
 1bc:	b.hi	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1dc>  // b.pmore
 1c0:	ldp	x19, x20, [sp, #16]
 1c4:	ldr	x21, [sp, #32]
 1c8:	ldp	x29, x30, [sp], #48
 1cc:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1d0:	ldrb	w0, [x21, #16]
 1d4:	brk	#0x3e8
 1d8:	str	x21, [sp, #32]
 1dc:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1e0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1e4:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1e8:	add	x3, x3, #0x0
 1ec:	add	x1, x1, #0x0
 1f0:	add	x0, x0, #0x0
 1f4:	mov	w2, #0x134                 	// #308
 1f8:	bl	0 <__assert_fail>
 1fc:	str	x21, [sp, #32]
 200:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 204:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 208:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 20c:	add	x3, x3, #0x0
 210:	add	x1, x1, #0x0
 214:	add	x0, x0, #0x0
 218:	mov	w2, #0x4fa                 	// #1274
 21c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x25
  1c:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xb8>  // b.none
  20:	cmp	w1, #0x5
  24:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x38>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #64
  34:	ret
  38:	ldrh	w0, [x19, #18]
  3c:	cmp	w0, #0xd
  40:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>  // b.any
  44:	ldr	w0, [x19, #20]
  48:	ubfx	x0, x0, #0, #28
  4c:	cbz	w0, 414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>
  50:	mov	w1, w0
  54:	ubfiz	x2, x0, #2, #28
  58:	sub	x1, x1, x2
  5c:	stp	x21, x22, [sp, #32]
  60:	ldr	x21, [x19, x1, lsl #3]
  64:	cbz	x21, 3a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3a8>
  68:	ldrb	w1, [x21, #16]
  6c:	cmp	w1, #0x10
  70:	b.hi	3c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c0>  // b.pmore
  74:	cmp	w1, #0x5
  78:	b.eq	2bc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x2bc>  // b.none
  7c:	cmp	w0, #0x1
  80:	b.ls	3f0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3f0>  // b.plast
  84:	mov	w0, w0
  88:	mov	x22, #0x1                   	// #1
  8c:	sub	x0, x22, x0
  90:	add	x0, x0, x0, lsl #1
  94:	ldr	x21, [x19, x0, lsl #3]
  98:	cbz	x21, 3a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3a8>
  9c:	ldrb	w0, [x21, #16]
  a0:	cmp	w0, #0x10
  a4:	b.hi	3c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c0>  // b.pmore
  a8:	cmp	w0, #0x5
  ac:	b.eq	260 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x260>  // b.none
  b0:	ldp	x21, x22, [sp, #32]
  b4:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>
  b8:	ldur	x1, [x19, #-48]
  bc:	ldrb	w0, [x1, #16]
  c0:	cmp	w0, #0x34
  c4:	b.eq	1f0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x1f0>  // b.none
  c8:	cmp	w0, #0x5
  cc:	b.eq	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x174>  // b.none
  d0:	ldur	x1, [x19, #-24]
  d4:	ldrb	w0, [x1, #16]
  d8:	cmp	w0, #0x34
  dc:	b.eq	238 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x238>  // b.none
  e0:	cmp	w0, #0x5
  e4:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>  // b.any
  e8:	ldrh	w0, [x1, #18]
  ec:	cmp	w0, #0x1c
  f0:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>  // b.any
  f4:	ldr	w2, [x1, #20]
  f8:	ubfx	x2, x2, #0, #28
  fc:	cbz	w2, 414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>
 100:	mov	w4, w2
 104:	ubfiz	x0, x2, #2, #28
 108:	sub	x0, x4, x0
 10c:	ldr	x3, [x1, x0, lsl #3]
 110:	cbz	x3, 3b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3b4>
 114:	ldrb	w0, [x3, #16]
 118:	cmp	w0, #0x10
 11c:	b.hi	428 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x428>  // b.pmore
 120:	mov	x0, x20
 124:	cmp	w2, #0x1
 128:	ldr	x2, [x0], #8
 12c:	str	x3, [x2]
 130:	b.ls	414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>  // b.plast
 134:	mov	x2, #0x1                   	// #1
 138:	sub	x2, x2, x4
 13c:	add	x2, x2, x2, lsl #1
 140:	ldr	x1, [x1, x2, lsl #3]
 144:	cbz	x1, 154 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x154>
 148:	ldrb	w2, [x1, #16]
 14c:	cmp	w2, #0x10
 150:	b.hi	428 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x428>  // b.pmore
 154:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 158:	tst	w0, #0xff
 15c:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>  // b.none
 160:	add	x0, x20, #0x18
 164:	ldur	x1, [x19, #-48]
 168:	ldp	x19, x20, [sp, #16]
 16c:	ldp	x29, x30, [sp], #64
 170:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 174:	ldrh	w0, [x1, #18]
 178:	cmp	w0, #0x1c
 17c:	b.ne	d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xd0>  // b.any
 180:	ldr	w2, [x1, #20]
 184:	ubfx	x2, x2, #0, #28
 188:	cbz	w2, 414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>
 18c:	mov	w4, w2
 190:	ubfiz	x0, x2, #2, #28
 194:	sub	x0, x4, x0
 198:	ldr	x3, [x1, x0, lsl #3]
 19c:	cbz	x3, 3b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3b4>
 1a0:	ldrb	w0, [x3, #16]
 1a4:	cmp	w0, #0x10
 1a8:	b.hi	428 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x428>  // b.pmore
 1ac:	mov	x0, x20
 1b0:	cmp	w2, #0x1
 1b4:	ldr	x2, [x0], #8
 1b8:	str	x3, [x2]
 1bc:	b.ls	414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>  // b.plast
 1c0:	mov	x2, #0x1                   	// #1
 1c4:	sub	x2, x2, x4
 1c8:	add	x2, x2, x2, lsl #1
 1cc:	ldr	x1, [x1, x2, lsl #3]
 1d0:	cbz	x1, 1e0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x1e0>
 1d4:	ldrb	w2, [x1, #16]
 1d8:	cmp	w2, #0x10
 1dc:	b.hi	428 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x428>  // b.pmore
 1e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 1e4:	tst	w0, #0xff
 1e8:	b.ne	214 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x214>  // b.any
 1ec:	b	d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xd0>
 1f0:	ldur	x2, [x1, #-48]
 1f4:	cbz	x2, 3e4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3e4>
 1f8:	mov	x0, x20
 1fc:	ldr	x3, [x0], #8
 200:	str	x2, [x3]
 204:	ldur	x1, [x1, #-24]
 208:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 20c:	tst	w0, #0xff
 210:	b.eq	d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xd0>  // b.none
 214:	ldur	x1, [x19, #-24]
 218:	add	x0, x20, #0x18
 21c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 220:	tst	w0, #0xff
 224:	b.eq	d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xd0>  // b.none
 228:	mov	w0, #0x1                   	// #1
 22c:	ldp	x19, x20, [sp, #16]
 230:	ldp	x29, x30, [sp], #64
 234:	ret
 238:	ldur	x2, [x1, #-48]
 23c:	cbz	x2, 3e4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3e4>
 240:	mov	x0, x20
 244:	ldr	x3, [x0], #8
 248:	str	x2, [x3]
 24c:	ldur	x1, [x1, #-24]
 250:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 254:	tst	w0, #0xff
 258:	b.ne	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x160>  // b.any
 25c:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>
 260:	ldrh	w0, [x21, #18]
 264:	cmp	w0, #0x1c
 268:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xb0>  // b.any
 26c:	mov	x0, x21
 270:	mov	w1, #0x0                   	// #0
 274:	str	x23, [sp, #48]
 278:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 27c:	mov	x2, x0
 280:	cbz	x0, 3bc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3bc>
 284:	mov	x23, x20
 288:	mov	w1, w22
 28c:	mov	x0, x21
 290:	ldr	x3, [x23], #8
 294:	str	x2, [x3]
 298:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 29c:	mov	x1, x0
 2a0:	mov	x0, x23
 2a4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 2a8:	tst	w0, #0xff
 2ac:	b.ne	364 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x364>  // b.any
 2b0:	ldp	x21, x22, [sp, #32]
 2b4:	ldr	x23, [sp, #48]
 2b8:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>
 2bc:	ldrh	w1, [x21, #18]
 2c0:	cmp	w1, #0x1c
 2c4:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x7c>  // b.any
 2c8:	mov	x0, x21
 2cc:	mov	w1, #0x0                   	// #0
 2d0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 2d4:	mov	x2, x0
 2d8:	cbz	x0, 420 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x420>
 2dc:	mov	x22, x20
 2e0:	mov	w1, #0x1                   	// #1
 2e4:	mov	x0, x21
 2e8:	ldr	x3, [x22], #8
 2ec:	str	x2, [x3]
 2f0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 2f4:	mov	x1, x0
 2f8:	mov	x0, x22
 2fc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 300:	tst	w0, #0xff
 304:	b.ne	314 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x314>  // b.any
 308:	ldr	w0, [x19, #20]
 30c:	ubfx	x0, x0, #0, #28
 310:	b	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x7c>
 314:	ldr	w1, [x19, #20]
 318:	add	x0, x20, #0x18
 31c:	ubfx	x1, x1, #0, #28
 320:	cmp	w1, #0x1
 324:	b.ls	3f0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3f0>  // b.plast
 328:	mov	w2, w1
 32c:	mov	x1, #0x1                   	// #1
 330:	sub	x1, x1, x2
 334:	add	x1, x1, x1, lsl #1
 338:	ldr	x1, [x19, x1, lsl #3]
 33c:	cbz	x1, 34c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x34c>
 340:	ldrb	w2, [x1, #16]
 344:	cmp	w2, #0x10
 348:	b.hi	3c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c0>  // b.pmore
 34c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 350:	tst	w0, #0xff
 354:	b.eq	308 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x308>  // b.none
 358:	mov	w0, #0x1                   	// #1
 35c:	ldp	x21, x22, [sp, #32]
 360:	b	22c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x22c>
 364:	ldr	w1, [x19, #20]
 368:	add	x0, x20, #0x18
 36c:	ubfx	x1, x1, #0, #28
 370:	cbz	w1, 3f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3f4>
 374:	mov	w2, w1
 378:	ubfiz	x1, x1, #2, #28
 37c:	sub	x1, x2, x1
 380:	ldr	x1, [x19, x1, lsl #3]
 384:	cbz	x1, 394 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x394>
 388:	ldrb	w2, [x1, #16]
 38c:	cmp	w2, #0x10
 390:	b.hi	3c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c4>  // b.pmore
 394:	ldp	x19, x20, [sp, #16]
 398:	ldp	x21, x22, [sp, #32]
 39c:	ldr	x23, [sp, #48]
 3a0:	ldp	x29, x30, [sp], #64
 3a4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3a8:	str	x23, [sp, #48]
 3ac:	ldrb	w0, [x21, #16]
 3b0:	brk	#0x3e8
 3b4:	stp	x21, x22, [sp, #32]
 3b8:	str	x23, [sp, #48]
 3bc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3c0:	str	x23, [sp, #48]
 3c4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3c8:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3cc:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3d0:	add	x3, x3, #0x0
 3d4:	add	x1, x1, #0x0
 3d8:	add	x0, x0, #0x0
 3dc:	mov	w2, #0x134                 	// #308
 3e0:	bl	0 <__assert_fail>
 3e4:	stp	x21, x22, [sp, #32]
 3e8:	str	x23, [sp, #48]
 3ec:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3f0:	str	x23, [sp, #48]
 3f4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3f8:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3fc:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 400:	add	x3, x3, #0x0
 404:	add	x1, x1, #0x0
 408:	add	x0, x0, #0x0
 40c:	mov	w2, #0x4fa                 	// #1274
 410:	bl	0 <__assert_fail>
 414:	stp	x21, x22, [sp, #32]
 418:	str	x23, [sp, #48]
 41c:	b	3f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3f4>
 420:	str	x23, [sp, #48]
 424:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 428:	stp	x21, x22, [sp, #32]
 42c:	str	x23, [sp, #48]
 430:	b	3c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c4>

Disassembly of section .text._ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 48 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x48>
   c:	ldrb	w1, [x0, #16]
  10:	sub	w1, w1, #0x25
  14:	and	w1, w1, #0xff
  18:	cmp	w1, #0x11
  1c:	b.ls	40 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>  // b.plast
  20:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x108                 	// #264
  3c:	bl	0 <__assert_fail>
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  4c:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  50:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  54:	add	x3, x3, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x0, x0, #0x0
  60:	mov	w2, #0x69                  	// #105
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cbz	x1, 17c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x17c>
  10:	ldrb	w0, [x1, #16]
  14:	mov	x19, x1
  18:	cmp	w0, #0xd
  1c:	b.eq	48 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x48>  // b.none
  20:	ldr	x1, [x1]
  24:	ldrb	w1, [x1, #8]
  28:	cmp	w1, #0x10
  2c:	ccmp	w0, #0x10, #0x2, eq  // eq = none
  30:	b.ls	90 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x90>  // b.plast
  34:	mov	w20, #0x0                   	// #0
  38:	mov	w0, w20
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	ret
  48:	ldr	w20, [x1, #32]
  4c:	cmp	w20, #0x40
  50:	b.ls	74 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x74>  // b.plast
  54:	add	x0, x1, #0x18
  58:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  5c:	cmp	w0, w20
  60:	cset	w20, eq  // eq = none
  64:	mov	w0, w20
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	ldr	x0, [x1, #24]
  78:	cmp	x0, #0x0
  7c:	cset	w20, eq  // eq = none
  80:	mov	w0, w20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	mov	x0, x19
  94:	mov	w1, #0x0                   	// #0
  98:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  9c:	cbz	x0, ac <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xac>
  a0:	ldrb	w1, [x0, #16]
  a4:	cmp	w1, #0xd
  a8:	b.eq	14c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x14c>  // b.none
  ac:	ldr	x0, [x19]
  b0:	stp	x21, x22, [sp, #32]
  b4:	cbz	x0, 1c4 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x1c4>
  b8:	ldrb	w1, [x0, #8]
  bc:	cmp	w1, #0x10
  c0:	b.ne	1a4 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x1a4>  // b.any
  c4:	ldr	x0, [x0, #32]
  c8:	mov	w22, w0
  cc:	cbz	w0, 184 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x184>
  d0:	mov	w21, #0x0                   	// #0
  d4:	mov	w20, #0x0                   	// #0
  d8:	mov	w1, w21
  dc:	mov	x0, x19
  e0:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
  e4:	cbz	x0, fc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xfc>
  e8:	ldrb	w1, [x0, #16]
  ec:	cmp	w1, #0x9
  f0:	b.eq	128 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x128>  // b.none
  f4:	cmp	w1, #0xd
  f8:	b.eq	108 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x108>  // b.none
  fc:	mov	w20, #0x0                   	// #0
 100:	ldp	x21, x22, [sp, #32]
 104:	b	38 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x38>
 108:	ldr	w20, [x0, #32]
 10c:	cmp	w20, #0x40
 110:	b.ls	13c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x13c>  // b.plast
 114:	add	x0, x0, #0x18
 118:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 11c:	cmp	w20, w0
 120:	cset	w20, eq  // eq = none
 124:	cbz	w20, fc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xfc>
 128:	add	w21, w21, #0x1
 12c:	cmp	w21, w22
 130:	b.ne	d8 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xd8>  // b.any
 134:	ldp	x21, x22, [sp, #32]
 138:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x64>
 13c:	ldr	x0, [x0, #24]
 140:	cmp	x0, #0x0
 144:	cset	w20, eq  // eq = none
 148:	b	124 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x124>
 14c:	ldr	w19, [x0, #32]
 150:	cmp	w19, #0x40
 154:	b.ls	16c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x16c>  // b.plast
 158:	add	x0, x0, #0x18
 15c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 160:	cmp	w19, w0
 164:	cset	w20, eq  // eq = none
 168:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x64>
 16c:	ldr	x0, [x0, #24]
 170:	cmp	x0, #0x0
 174:	cset	w20, eq  // eq = none
 178:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x64>
 17c:	stp	x21, x22, [sp, #32]
 180:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 184:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 188:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 18c:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 190:	add	x3, x3, #0x0
 194:	add	x1, x1, #0x0
 198:	add	x0, x0, #0x0
 19c:	mov	w2, #0xeb                  	// #235
 1a0:	bl	0 <__assert_fail>
 1a4:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 1a8:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 1ac:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 1b0:	add	x3, x3, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x0, x0, #0x0
 1bc:	mov	w2, #0x108                 	// #264
 1c0:	bl	0 <__assert_fail>
 1c4:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x32
  18:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #80
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x1a
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x24>  // b.any
  44:	ldr	w3, [x1, #20]
  48:	ubfx	x3, x3, #0, #28
  4c:	cbz	w3, 268 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x268>
  50:	mov	w5, w3
  54:	ubfiz	x0, x3, #2, #28
  58:	sub	x0, x5, x0
  5c:	ldr	x4, [x1, x0, lsl #3]
  60:	cbz	x4, 29c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x29c>
  64:	ldrb	w0, [x4, #16]
  68:	cmp	w0, #0x10
  6c:	b.hi	224 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x224>  // b.pmore
  70:	mov	x0, x19
  74:	cmp	w3, #0x1
  78:	ldr	x2, [x0], #8
  7c:	str	x4, [x2]
  80:	b.ls	268 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x268>  // b.plast
  84:	mov	x2, #0x1                   	// #1
  88:	sub	x2, x2, x5
  8c:	add	x2, x2, x2, lsl #1
  90:	ldr	x1, [x1, x2, lsl #3]
  94:	cbz	x1, a4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xa4>
  98:	ldrb	w2, [x1, #16]
  9c:	cmp	w2, #0x10
  a0:	b.hi	224 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x224>  // b.pmore
  a4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  a8:	and	w19, w0, #0xff
  ac:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
  b0:	ldur	x0, [x1, #-48]
  b4:	cbz	x0, 28c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28c>
  b8:	ldr	x2, [x19]
  bc:	str	x0, [x2]
  c0:	ldur	x0, [x1, #-24]
  c4:	cbz	x0, 294 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x294>
  c8:	ldrb	w1, [x0, #16]
  cc:	cmp	w1, #0xd
  d0:	b.eq	100 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x100>  // b.none
  d4:	ldr	x2, [x0]
  d8:	ldrb	w2, [x2, #8]
  dc:	cmp	w2, #0x10
  e0:	ccmp	w1, #0x10, #0x2, eq  // eq = none
  e4:	b.hi	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x24>  // b.pmore
  e8:	mov	w1, #0x0                   	// #0
  ec:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  f0:	cbz	x0, 24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x24>
  f4:	ldrb	w1, [x0, #16]
  f8:	cmp	w1, #0xd
  fc:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x24>  // b.any
 100:	ldr	w1, [x19, #16]
 104:	add	x20, x0, #0x18
 108:	ldr	w0, [x0, #32]
 10c:	stp	x21, x22, [sp, #32]
 110:	add	x21, x19, #0x8
 114:	cmp	w0, w1
 118:	b.eq	1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x1ec>  // b.none
 11c:	b.ls	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x174>  // b.plast
 120:	add	x19, sp, #0x40
 124:	mov	w1, w0
 128:	mov	x8, x19
 12c:	mov	x0, x21
 130:	bl	0 <_ZNK4llvm5APInt4zextEj>
 134:	ldr	w21, [sp, #72]
 138:	ldr	w0, [x20, #8]
 13c:	cmp	w0, w21
 140:	b.ne	248 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x248>  // b.any
 144:	cmp	w21, #0x40
 148:	b.ls	1d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x1d8>  // b.plast
 14c:	mov	x1, x19
 150:	mov	x0, x20
 154:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 158:	and	w19, w0, #0xff
 15c:	cmp	w21, #0x40
 160:	b.ls	16c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x16c>  // b.plast
 164:	ldr	x0, [sp, #64]
 168:	cbnz	x0, 1b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x1b8>
 16c:	ldp	x21, x22, [sp, #32]
 170:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 174:	add	x22, sp, #0x30
 178:	mov	x0, x20
 17c:	mov	x8, x22
 180:	bl	0 <_ZNK4llvm5APInt4zextEj>
 184:	ldr	w1, [x21, #8]
 188:	ldr	w0, [sp, #56]
 18c:	cmp	w0, w1
 190:	b.ne	248 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x248>  // b.any
 194:	cmp	w0, #0x40
 198:	ldr	x20, [sp, #48]
 19c:	b.ls	1c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x1c4>  // b.plast
 1a0:	mov	x1, x21
 1a4:	mov	x0, x22
 1a8:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 1ac:	and	w19, w0, #0xff
 1b0:	cbz	x20, 16c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x16c>
 1b4:	mov	x0, x20
 1b8:	bl	0 <_ZdaPv>
 1bc:	ldp	x21, x22, [sp, #32]
 1c0:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 1c4:	ldr	x0, [x19, #8]
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	cmp	x20, x0
 1d0:	cset	w19, eq  // eq = none
 1d4:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 1d8:	ldr	x1, [x20]
 1dc:	ldr	x0, [sp, #64]
 1e0:	cmp	x1, x0
 1e4:	cset	w19, eq  // eq = none
 1e8:	b	15c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x15c>
 1ec:	cmp	w0, #0x40
 1f0:	b.ls	20c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x20c>  // b.plast
 1f4:	mov	x1, x21
 1f8:	mov	x0, x20
 1fc:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 200:	and	w19, w0, #0xff
 204:	ldp	x21, x22, [sp, #32]
 208:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 20c:	ldr	x1, [x20]
 210:	ldr	x0, [x19, #8]
 214:	ldp	x21, x22, [sp, #32]
 218:	cmp	x1, x0
 21c:	cset	w19, eq  // eq = none
 220:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 224:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 228:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 22c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 230:	add	x3, x3, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x0, x0, #0x0
 23c:	mov	w2, #0x134                 	// #308
 240:	stp	x21, x22, [sp, #32]
 244:	bl	0 <__assert_fail>
 248:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 24c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 250:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 254:	add	x3, x3, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x0, x0, #0x0
 260:	mov	w2, #0x47f                 	// #1151
 264:	bl	0 <__assert_fail>
 268:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 26c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 270:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 274:	add	x3, x3, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x0, x0, #0x0
 280:	mov	w2, #0x4fa                 	// #1274
 284:	stp	x21, x22, [sp, #32]
 288:	bl	0 <__assert_fail>
 28c:	stp	x21, x22, [sp, #32]
 290:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 294:	stp	x21, x22, [sp, #32]
 298:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 29c:	stp	x21, x22, [sp, #32]
 2a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x32
  18:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #80
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x1a
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.any
  44:	ldr	w3, [x1, #20]
  48:	ubfx	x3, x3, #0, #28
  4c:	cbz	w3, 268 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x268>
  50:	mov	w5, w3
  54:	ubfiz	x0, x3, #2, #28
  58:	sub	x0, x5, x0
  5c:	ldr	x4, [x1, x0, lsl #3]
  60:	cbz	x4, 29c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x29c>
  64:	ldrb	w0, [x4, #16]
  68:	cmp	w0, #0x10
  6c:	b.hi	224 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x224>  // b.pmore
  70:	mov	x0, x19
  74:	cmp	w3, #0x1
  78:	ldr	x2, [x0], #8
  7c:	str	x4, [x2]
  80:	b.ls	268 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x268>  // b.plast
  84:	mov	x2, #0x1                   	// #1
  88:	sub	x2, x2, x5
  8c:	add	x2, x2, x2, lsl #1
  90:	ldr	x1, [x1, x2, lsl #3]
  94:	cbz	x1, a4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xa4>
  98:	ldrb	w2, [x1, #16]
  9c:	cmp	w2, #0x10
  a0:	b.hi	224 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x224>  // b.pmore
  a4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  a8:	and	w19, w0, #0xff
  ac:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
  b0:	ldur	x0, [x1, #-48]
  b4:	cbz	x0, 28c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28c>
  b8:	ldr	x2, [x19]
  bc:	str	x0, [x2]
  c0:	ldur	x0, [x1, #-24]
  c4:	cbz	x0, 294 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x294>
  c8:	ldrb	w1, [x0, #16]
  cc:	cmp	w1, #0xd
  d0:	b.eq	100 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x100>  // b.none
  d4:	ldr	x2, [x0]
  d8:	ldrb	w2, [x2, #8]
  dc:	cmp	w2, #0x10
  e0:	ccmp	w1, #0x10, #0x2, eq  // eq = none
  e4:	b.hi	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.pmore
  e8:	mov	w1, #0x0                   	// #0
  ec:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  f0:	cbz	x0, 24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>
  f4:	ldrb	w1, [x0, #16]
  f8:	cmp	w1, #0xd
  fc:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.any
 100:	ldr	w1, [x19, #16]
 104:	add	x20, x0, #0x18
 108:	ldr	w0, [x0, #32]
 10c:	stp	x21, x22, [sp, #32]
 110:	add	x21, x19, #0x8
 114:	cmp	w0, w1
 118:	b.eq	1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1ec>  // b.none
 11c:	b.ls	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x174>  // b.plast
 120:	add	x19, sp, #0x40
 124:	mov	w1, w0
 128:	mov	x8, x19
 12c:	mov	x0, x21
 130:	bl	0 <_ZNK4llvm5APInt4zextEj>
 134:	ldr	w21, [sp, #72]
 138:	ldr	w0, [x20, #8]
 13c:	cmp	w0, w21
 140:	b.ne	248 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x248>  // b.any
 144:	cmp	w21, #0x40
 148:	b.ls	1d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1d8>  // b.plast
 14c:	mov	x1, x19
 150:	mov	x0, x20
 154:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 158:	and	w19, w0, #0xff
 15c:	cmp	w21, #0x40
 160:	b.ls	16c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x16c>  // b.plast
 164:	ldr	x0, [sp, #64]
 168:	cbnz	x0, 1b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1b8>
 16c:	ldp	x21, x22, [sp, #32]
 170:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 174:	add	x22, sp, #0x30
 178:	mov	x0, x20
 17c:	mov	x8, x22
 180:	bl	0 <_ZNK4llvm5APInt4zextEj>
 184:	ldr	w1, [x21, #8]
 188:	ldr	w0, [sp, #56]
 18c:	cmp	w0, w1
 190:	b.ne	248 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x248>  // b.any
 194:	cmp	w0, #0x40
 198:	ldr	x20, [sp, #48]
 19c:	b.ls	1c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1c4>  // b.plast
 1a0:	mov	x1, x21
 1a4:	mov	x0, x22
 1a8:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 1ac:	and	w19, w0, #0xff
 1b0:	cbz	x20, 16c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x16c>
 1b4:	mov	x0, x20
 1b8:	bl	0 <_ZdaPv>
 1bc:	ldp	x21, x22, [sp, #32]
 1c0:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 1c4:	ldr	x0, [x19, #8]
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	cmp	x20, x0
 1d0:	cset	w19, eq  // eq = none
 1d4:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 1d8:	ldr	x1, [x20]
 1dc:	ldr	x0, [sp, #64]
 1e0:	cmp	x1, x0
 1e4:	cset	w19, eq  // eq = none
 1e8:	b	15c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x15c>
 1ec:	cmp	w0, #0x40
 1f0:	b.ls	20c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x20c>  // b.plast
 1f4:	mov	x1, x21
 1f8:	mov	x0, x20
 1fc:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 200:	and	w19, w0, #0xff
 204:	ldp	x21, x22, [sp, #32]
 208:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 20c:	ldr	x1, [x20]
 210:	ldr	x0, [x19, #8]
 214:	ldp	x21, x22, [sp, #32]
 218:	cmp	x1, x0
 21c:	cset	w19, eq  // eq = none
 220:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 224:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 228:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 22c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 230:	add	x3, x3, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x0, x0, #0x0
 23c:	mov	w2, #0x134                 	// #308
 240:	stp	x21, x22, [sp, #32]
 244:	bl	0 <__assert_fail>
 248:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 24c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 250:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 254:	add	x3, x3, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x0, x0, #0x0
 260:	mov	w2, #0x47f                 	// #1151
 264:	bl	0 <__assert_fail>
 268:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 26c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 270:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 274:	add	x3, x3, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x0, x0, #0x0
 280:	mov	w2, #0x4fa                 	// #1274
 284:	stp	x21, x22, [sp, #32]
 288:	bl	0 <__assert_fail>
 28c:	stp	x21, x22, [sp, #32]
 290:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 294:	stp	x21, x22, [sp, #32]
 298:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 29c:	stp	x21, x22, [sp, #32]
 2a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>

TruncInstCombine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
       8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x69                  	// #105
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZN4llvm3isaINS_8ConstantEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
      28:	stp	x29, x30, [sp, #-16]!
      2c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      30:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      34:	mov	x29, sp
      38:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      3c:	add	x3, x3, #0x0
      40:	add	x1, x1, #0x0
      44:	add	x0, x0, #0x0
      48:	mov	w2, #0x69                  	// #105
      4c:	bl	0 <__assert_fail>

0000000000000050 <_ZN4llvm3isaINS_12ConstantExprEPKNS_5ValueEEEbRKT0_.isra.0.part.0>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      58:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      5c:	mov	x29, sp
      60:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      64:	add	x3, x3, #0x0
      68:	add	x1, x1, #0x0
      6c:	add	x0, x0, #0x0
      70:	mov	w2, #0x69                  	// #105
      74:	bl	0 <__assert_fail>

0000000000000078 <_ZN4llvm3isaINS_10VectorTypeEPNS_4TypeEEEbRKT0_.isra.0.part.0>:
      78:	stp	x29, x30, [sp, #-16]!
      7c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      80:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      84:	mov	x29, sp
      88:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      8c:	add	x3, x3, #0x0
      90:	add	x1, x1, #0x0
      94:	add	x0, x0, #0x0
      98:	mov	w2, #0x69                  	// #105
      9c:	bl	0 <__assert_fail>

00000000000000a0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>:
      a0:	stp	x29, x30, [sp, #-48]!
      a4:	mov	x29, sp
      a8:	stp	x19, x20, [sp, #16]
      ac:	mov	x20, x0
      b0:	mov	x19, x1
      b4:	ldrb	w0, [x0, #16]
      b8:	sub	w1, w0, #0x18
      bc:	cmp	w1, #0x28
      c0:	b.hi	e4 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x44>  // b.pmore
      c4:	mov	x0, #0x1                   	// #1
      c8:	mov	x2, #0xa000                	// #40960
      cc:	movk	x2, #0x7002, lsl #16
      d0:	lsl	x0, x0, x1
      d4:	tst	x0, x2
      d8:	b.ne	100 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x60>  // b.any
      dc:	tst	x0, #0x1c000000000
      e0:	b.ne	1a0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x100>  // b.any
      e4:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      e8:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      ec:	add	x1, x1, #0x0
      f0:	add	x0, x0, #0x0
      f4:	mov	w2, #0x3c                  	// #60
      f8:	str	x21, [sp, #32]
      fc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     100:	ldr	w0, [x20, #20]
     104:	str	x21, [sp, #32]
     108:	ubfx	x0, x0, #0, #28
     10c:	cbz	w0, 21c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x17c>
     110:	ldrb	w1, [x20, #23]
     114:	tbz	w1, #6, 1ac <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x10c>
     118:	ldur	x0, [x20, #-8]
     11c:	ldp	w1, w2, [x19, #8]
     120:	ldr	x21, [x0]
     124:	cmp	w1, w2
     128:	b.cs	1c4 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x124>  // b.hs, b.nlast
     12c:	ldr	x0, [x19]
     130:	str	x21, [x0, w1, uxtw #3]
     134:	ldp	w1, w2, [x19, #8]
     138:	mov	w0, w1
     13c:	add	x0, x0, #0x1
     140:	cmp	x0, w2, uxtw
     144:	b.hi	1fc <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x15c>  // b.pmore
     148:	ldr	w0, [x20, #20]
     14c:	add	w1, w1, #0x1
     150:	str	w1, [x19, #8]
     154:	ubfx	x0, x0, #0, #28
     158:	cmp	w0, #0x1
     15c:	b.ls	21c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x17c>  // b.plast
     160:	ldrb	w3, [x20, #23]
     164:	tbz	w3, #6, 1b8 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x118>
     168:	ldur	x0, [x20, #-8]
     16c:	cmp	w2, w1
     170:	ldr	x20, [x0, #24]
     174:	b.ls	1e0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x140>  // b.plast
     178:	ldr	x0, [x19]
     17c:	str	x20, [x0, w1, uxtw #3]
     180:	ldp	w0, w2, [x19, #8]
     184:	mov	w1, w0
     188:	add	x1, x1, #0x1
     18c:	cmp	x1, x2
     190:	b.hi	1fc <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x15c>  // b.pmore
     194:	add	w0, w0, #0x1
     198:	ldr	x21, [sp, #32]
     19c:	str	w0, [x19, #8]
     1a0:	ldp	x19, x20, [sp, #16]
     1a4:	ldp	x29, x30, [sp], #48
     1a8:	ret
     1ac:	mov	w1, #0x18                  	// #24
     1b0:	umsubl	x0, w0, w1, x20
     1b4:	b	11c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x7c>
     1b8:	mov	w3, #0x18                  	// #24
     1bc:	umsubl	x0, w0, w3, x20
     1c0:	b	16c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0xcc>
     1c4:	add	x1, x19, #0x10
     1c8:	mov	x0, x19
     1cc:	mov	x3, #0x8                   	// #8
     1d0:	mov	x2, #0x0                   	// #0
     1d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     1d8:	ldr	w1, [x19, #8]
     1dc:	b	12c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x8c>
     1e0:	add	x1, x19, #0x10
     1e4:	mov	x0, x19
     1e8:	mov	x3, #0x8                   	// #8
     1ec:	mov	x2, #0x0                   	// #0
     1f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     1f4:	ldr	w1, [x19, #8]
     1f8:	b	178 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0xd8>
     1fc:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     200:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     204:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     208:	add	x3, x3, #0x0
     20c:	add	x1, x1, #0x0
     210:	add	x0, x0, #0x0
     214:	mov	w2, #0x43                  	// #67
     218:	bl	0 <__assert_fail>
     21c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     220:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     224:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     228:	add	x3, x3, #0x0
     22c:	add	x1, x1, #0x0
     230:	add	x0, x0, #0x0
     234:	mov	w2, #0xaa                  	// #170
     238:	bl	0 <__assert_fail>
     23c:	nop

0000000000000240 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>:
     240:	stp	x29, x30, [sp, #-32]!
     244:	mov	x29, sp
     248:	stp	x19, x20, [sp, #16]
     24c:	cbz	x2, 390 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x150>
     250:	mov	x19, x1
     254:	ldrb	w1, [x2, #8]
     258:	mov	x20, x0
     25c:	mov	x0, x2
     260:	cmp	w1, #0x10
     264:	b.eq	390 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x150>  // b.none
     268:	ldr	x1, [x19]
     26c:	cbz	x1, 3b0 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x170>
     270:	ldrb	w2, [x1, #8]
     274:	cmp	w2, #0x10
     278:	b.ne	284 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x44>  // b.any
     27c:	ldr	w1, [x1, #32]
     280:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
     284:	ldrb	w1, [x19, #16]
     288:	cmp	w1, #0x10
     28c:	b.hi	2c0 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x80>  // b.pmore
     290:	mov	x1, x0
     294:	mov	w2, #0x0                   	// #0
     298:	mov	x0, x19
     29c:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     2a0:	ldp	x2, x1, [x20]
     2a4:	mov	x19, x0
     2a8:	bl	0 <_ZN4llvm20ConstantFoldConstantEPKNS_8ConstantERKNS_10DataLayoutEPKNS_17TargetLibraryInfoE>
     2ac:	cmp	x0, #0x0
     2b0:	csel	x0, x0, x19, ne  // ne = any
     2b4:	ldp	x19, x20, [sp, #16]
     2b8:	ldp	x29, x30, [sp], #32
     2bc:	ret
     2c0:	cmp	w1, #0x17
     2c4:	b.ls	3b4 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x174>  // b.plast
     2c8:	ldr	w1, [x20, #104]
     2cc:	ldr	x2, [x20, #88]
     2d0:	cbz	w1, 344 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x104>
     2d4:	cmn	x19, #0x10
     2d8:	ccmn	x19, #0x8, #0x4, ne  // ne = any
     2dc:	b.eq	3d4 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x194>  // b.none
     2e0:	lsr	w0, w19, #9
     2e4:	sub	w5, w1, #0x1
     2e8:	eor	w0, w0, w19, lsr #4
     2ec:	and	w0, w0, w5
     2f0:	lsl	w3, w0, #4
     2f4:	add	x4, x2, x3
     2f8:	ldr	x3, [x2, x3]
     2fc:	cmp	x19, x3
     300:	b.ne	338 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xf8>  // b.any
     304:	ubfiz	x1, x1, #4, #32
     308:	add	x1, x2, x1
     30c:	cmp	x4, x1
     310:	b.eq	344 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x104>  // b.none
     314:	ldr	w0, [x4, #8]
     318:	mov	w2, #0x18                  	// #24
     31c:	ldr	x1, [x20, #112]
     320:	umaddl	x0, w0, w2, x1
     324:	ldr	x0, [x0, #16]
     328:	cbz	x0, 344 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x104>
     32c:	ldp	x19, x20, [sp, #16]
     330:	ldp	x29, x30, [sp], #32
     334:	ret
     338:	mov	w4, #0x1                   	// #1
     33c:	cmn	x3, #0x8
     340:	b.ne	364 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x124>  // b.any
     344:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     348:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     34c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     350:	add	x3, x3, #0x0
     354:	add	x1, x1, #0x0
     358:	add	x0, x0, #0x0
     35c:	mov	w2, #0x128                 	// #296
     360:	bl	0 <__assert_fail>
     364:	add	w0, w4, w0
     368:	add	w6, w4, #0x1
     36c:	and	w3, w5, w0
     370:	and	w0, w5, w0
     374:	lsl	x3, x3, #4
     378:	add	x4, x2, x3
     37c:	ldr	x3, [x2, x3]
     380:	cmp	x19, x3
     384:	b.eq	304 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xc4>  // b.none
     388:	mov	w4, w6
     38c:	b	33c <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xfc>
     390:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     394:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     398:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     39c:	add	x3, x3, #0x0
     3a0:	add	x1, x1, #0x0
     3a4:	add	x0, x0, #0x0
     3a8:	mov	w2, #0x116                 	// #278
     3ac:	bl	0 <__assert_fail>
     3b0:	bl	78 <_ZN4llvm3isaINS_10VectorTypeEPNS_4TypeEEEbRKT0_.isra.0.part.0>
     3b4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3b8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3bc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3c0:	add	x3, x3, #0x0
     3c4:	add	x1, x1, #0x0
     3c8:	add	x0, x0, #0x0
     3cc:	mov	w2, #0x108                 	// #264
     3d0:	bl	0 <__assert_fail>
     3d4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3d8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3dc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3e0:	add	x3, x3, #0x0
     3e4:	add	x1, x1, #0x0
     3e8:	add	x0, x0, #0x0
     3ec:	mov	w2, #0x250                 	// #592
     3f0:	bl	0 <__assert_fail>
     3f4:	nop

00000000000003f8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE>:
     3f8:	stp	x29, x30, [sp, #-432]!
     3fc:	mov	x29, sp
     400:	stp	x19, x20, [sp, #16]
     404:	mov	x20, x1
     408:	stp	x21, x22, [sp, #32]
     40c:	mov	x21, x0
     410:	ldp	x19, x0, [x0, #112]
     414:	str	x0, [sp, #104]
     418:	cmp	x19, x0
     41c:	b.eq	604 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x20c>  // b.none
     420:	add	x22, sp, #0x160
     424:	stp	x23, x24, [sp, #48]
     428:	add	x23, sp, #0x118
     42c:	stp	x25, x26, [sp, #64]
     430:	mov	x25, #0xa000                	// #40960
     434:	add	x0, sp, #0xe0
     438:	movk	x25, #0x7002, lsl #16
     43c:	stp	x27, x28, [sp, #80]
     440:	str	x0, [sp, #120]
     444:	nop
     448:	ldr	x0, [x19, #16]
     44c:	ldr	x28, [x19]
     450:	cbnz	x0, e94 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa9c>
     454:	mov	x0, x28
     458:	bl	0 <_ZNK4llvm5Value10getContextEv>
     45c:	mov	w1, #0x200                 	// #512
     460:	strh	w1, [sp, #324]
     464:	stp	xzr, xzr, [sp, #328]
     468:	add	x2, x28, #0x18
     46c:	ldr	x1, [x28, #40]
     470:	str	xzr, [sp, #280]
     474:	stp	x1, x2, [sp, #288]
     478:	add	x1, x1, #0x28
     47c:	stp	x0, xzr, [sp, #304]
     480:	cmp	x2, x1
     484:	str	wzr, [sp, #320]
     488:	strb	wzr, [sp, #326]
     48c:	b.eq	e74 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa7c>  // b.none
     490:	ldr	x1, [x28, #48]
     494:	str	x1, [sp, #352]
     498:	cbz	x1, 4d0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xd8>
     49c:	mov	x0, x22
     4a0:	mov	x2, #0x2                   	// #2
     4a4:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     4a8:	ldr	x1, [sp, #280]
     4ac:	cbz	x1, 4b8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xc0>
     4b0:	mov	x0, x23
     4b4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     4b8:	ldr	x1, [sp, #352]
     4bc:	str	x1, [sp, #280]
     4c0:	cbz	x1, 4d0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xd8>
     4c4:	mov	x2, x23
     4c8:	mov	x0, x22
     4cc:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     4d0:	ldrb	w6, [x28, #16]
     4d4:	sub	w27, w6, #0x18
     4d8:	cmp	w27, #0x28
     4dc:	b.hi	4f8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x100>  // b.pmore
     4e0:	mov	x0, #0x1                   	// #1
     4e4:	lsl	x0, x0, x27
     4e8:	tst	x0, x25
     4ec:	b.ne	510 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x118>  // b.any
     4f0:	tst	x0, #0x1c000000000
     4f4:	b.ne	784 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x38c>  // b.any
     4f8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     4fc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     500:	add	x1, x1, #0x0
     504:	add	x0, x0, #0x0
     508:	mov	w2, #0x163                 	// #355
     50c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     510:	ldr	w0, [x28, #20]
     514:	ubfx	x0, x0, #0, #28
     518:	cbz	w0, e28 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa30>
     51c:	ldrb	w1, [x28, #23]
     520:	tbz	w1, #6, a34 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x63c>
     524:	ldur	x0, [x28, #-8]
     528:	mov	x2, x20
     52c:	ldr	x1, [x0]
     530:	mov	x0, x21
     534:	bl	240 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     538:	mov	x24, x0
     53c:	ldr	w1, [x28, #20]
     540:	ubfx	x1, x1, #0, #28
     544:	cmp	w1, #0x1
     548:	b.ls	e28 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa30>  // b.plast
     54c:	ldrb	w0, [x28, #23]
     550:	tbz	w0, #6, a28 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x630>
     554:	ldur	x1, [x28, #-8]
     558:	mov	x2, x20
     55c:	ldr	x1, [x1, #24]
     560:	mov	x0, x21
     564:	bl	240 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     568:	stp	xzr, xzr, [sp, #160]
     56c:	mov	w1, #0x101                 	// #257
     570:	strh	w1, [sp, #176]
     574:	mov	x2, x0
     578:	cbz	x24, df0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9f8>
     57c:	ldrb	w0, [x24, #16]
     580:	cmp	w0, #0x10
     584:	b.hi	8f4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4fc>  // b.pmore
     588:	cbz	x2, df0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9f8>
     58c:	ldrb	w0, [x2, #16]
     590:	cmp	w0, #0x10
     594:	b.hi	8f8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x500>  // b.pmore
     598:	mov	x4, #0x0                   	// #0
     59c:	mov	x1, x24
     5a0:	mov	w0, w27
     5a4:	mov	w3, #0x0                   	// #0
     5a8:	str	x2, [sp, #112]
     5ac:	bl	0 <_ZN4llvm12ConstantExpr3getEjPNS_8ConstantES2_jPNS_4TypeE>
     5b0:	mov	x4, x0
     5b4:	ldr	x2, [sp, #112]
     5b8:	cbz	x0, 8f8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x500>
     5bc:	str	x4, [x19, #16]
     5c0:	ldrb	w0, [x4, #16]
     5c4:	cmp	w0, #0x17
     5c8:	b.ls	5d8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1e0>  // b.plast
     5cc:	mov	x1, x28
     5d0:	mov	x0, x4
     5d4:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     5d8:	ldr	x1, [sp, #280]
     5dc:	cbz	x1, 5e8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1f0>
     5e0:	mov	x0, x23
     5e4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     5e8:	ldr	x0, [sp, #104]
     5ec:	add	x19, x19, #0x18
     5f0:	cmp	x0, x19
     5f4:	b.ne	448 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x50>  // b.any
     5f8:	ldp	x23, x24, [sp, #48]
     5fc:	ldp	x25, x26, [sp, #64]
     600:	ldp	x27, x28, [sp, #80]
     604:	mov	x2, x20
     608:	ldr	x1, [x21, #72]
     60c:	mov	x0, x21
     610:	ldur	x1, [x1, #-24]
     614:	bl	240 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     618:	mov	x19, x0
     61c:	ldr	x20, [x21, #72]
     620:	ldr	x0, [x0]
     624:	ldr	x22, [x20]
     628:	cmp	x22, x0
     62c:	b.eq	71c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x324>  // b.none
     630:	mov	x0, x20
     634:	bl	0 <_ZNK4llvm5Value10getContextEv>
     638:	mov	w1, #0x200                 	// #512
     63c:	strh	w1, [sp, #396]
     640:	stp	xzr, xzr, [sp, #400]
     644:	add	x2, x20, #0x18
     648:	ldr	x1, [x20, #40]
     64c:	str	xzr, [sp, #352]
     650:	stp	x1, x2, [sp, #360]
     654:	add	x1, x1, #0x28
     658:	stp	x0, xzr, [sp, #376]
     65c:	cmp	x2, x1
     660:	str	wzr, [sp, #392]
     664:	strb	wzr, [sp, #398]
     668:	b.eq	e68 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa70>  // b.none
     66c:	ldr	x1, [x20, #48]
     670:	str	x1, [sp, #280]
     674:	cbz	x1, 6b0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2b8>
     678:	add	x20, sp, #0x118
     67c:	mov	x2, #0x2                   	// #2
     680:	mov	x0, x20
     684:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     688:	ldr	x1, [sp, #352]
     68c:	cbz	x1, 698 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2a0>
     690:	add	x0, sp, #0x160
     694:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     698:	ldr	x1, [sp, #280]
     69c:	str	x1, [sp, #352]
     6a0:	cbz	x1, 6b0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2b8>
     6a4:	mov	x0, x20
     6a8:	add	x2, sp, #0x160
     6ac:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     6b0:	movi	v0.4s, #0x0
     6b4:	mov	w5, #0x101                 	// #257
     6b8:	ldr	x0, [x19]
     6bc:	strh	w5, [sp, #208]
     6c0:	str	q0, [sp, #192]
     6c4:	cmp	x22, x0
     6c8:	b.eq	6f0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2f8>  // b.none
     6cc:	ldrb	w0, [x19, #16]
     6d0:	mov	x1, x22
     6d4:	cmp	w0, #0x10
     6d8:	mov	x0, x19
     6dc:	b.hi	cec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8f4>  // b.pmore
     6e0:	mov	w2, #0x0                   	// #0
     6e4:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     6e8:	mov	x19, x0
     6ec:	cbz	x19, f40 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb48>
     6f0:	ldrb	w0, [x19, #16]
     6f4:	cmp	w0, #0x17
     6f8:	b.ls	708 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x310>  // b.plast
     6fc:	ldr	x1, [x21, #72]
     700:	mov	x0, x19
     704:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     708:	ldr	x1, [sp, #352]
     70c:	cbz	x1, 718 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x320>
     710:	add	x0, sp, #0x160
     714:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     718:	ldr	x20, [x21, #72]
     71c:	mov	x1, x19
     720:	mov	x0, x20
     724:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     728:	ldr	x0, [x21, #72]
     72c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     730:	ldp	x22, x19, [x21, #112]
     734:	cmp	x22, x19
     738:	b.ne	74c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x354>  // b.any
     73c:	b	774 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x37c>
     740:	sub	x19, x19, #0x18
     744:	cmp	x22, x19
     748:	b.eq	774 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x37c>  // b.none
     74c:	ldur	x20, [x19, #-24]
     750:	mov	x0, x20
     754:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     758:	ldr	x0, [x20, #8]
     75c:	cbnz	x0, 740 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x348>
     760:	ldur	x0, [x19, #-24]
     764:	sub	x19, x19, #0x18
     768:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     76c:	cmp	x22, x19
     770:	b.ne	74c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x354>  // b.any
     774:	ldp	x19, x20, [sp, #16]
     778:	ldp	x21, x22, [sp, #32]
     77c:	ldp	x29, x30, [sp], #432
     780:	ret
     784:	cbz	x20, e48 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa50>
     788:	ldrb	w0, [x20, #8]
     78c:	cmp	w0, #0x10
     790:	b.eq	e48 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa50>  // b.none
     794:	ldr	x0, [x28]
     798:	cbz	x0, eb4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xabc>
     79c:	ldrb	w2, [x0, #8]
     7a0:	mov	x1, x20
     7a4:	cmp	w2, #0x10
     7a8:	b.ne	7c8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3d0>  // b.any
     7ac:	ldr	x1, [x0, #32]
     7b0:	mov	x0, x20
     7b4:	bfxil	x26, x1, #0, #32
     7b8:	and	x26, x26, #0xffffff00ffffffff
     7bc:	mov	x1, x26
     7c0:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
     7c4:	mov	x1, x0
     7c8:	ldr	w2, [x28, #20]
     7cc:	ubfx	x2, x2, #0, #28
     7d0:	cbz	w2, e28 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa30>
     7d4:	ldrb	w0, [x28, #23]
     7d8:	tbz	w0, #6, a40 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x648>
     7dc:	ldur	x2, [x28, #-8]
     7e0:	ldr	x0, [x2]
     7e4:	ldr	x2, [x0]
     7e8:	cmp	x1, x2
     7ec:	b.eq	a58 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x660>  // b.none
     7f0:	movi	v0.4s, #0x0
     7f4:	mov	w7, #0x101                 	// #257
     7f8:	strh	w7, [sp, #144]
     7fc:	cmp	w27, #0x28
     800:	cset	w2, eq  // eq = none
     804:	ldrb	w3, [x0, #16]
     808:	str	q0, [sp, #128]
     80c:	cmp	w3, #0x10
     810:	b.hi	ae8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6f0>  // b.pmore
     814:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     818:	mov	x4, x0
     81c:	ldr	w7, [x21, #32]
     820:	ldr	x6, [x21, #24]
     824:	mov	w8, w7
     828:	ubfiz	x0, x7, #3, #32
     82c:	add	x2, x6, x0
     830:	cmp	xzr, x0, asr #5
     834:	asr	x1, x0, #3
     838:	asr	x0, x0, #5
     83c:	b.eq	dbc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9c4>  // b.none
     840:	add	x0, x6, x0, lsl #5
     844:	mov	x3, x6
     848:	b	87c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x484>
     84c:	ldr	x1, [x3, #8]
     850:	cmp	x28, x1
     854:	b.eq	bcc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7d4>  // b.none
     858:	ldr	x1, [x3, #16]
     85c:	cmp	x28, x1
     860:	b.eq	bd4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7dc>  // b.none
     864:	ldr	x1, [x3, #24]
     868:	cmp	x28, x1
     86c:	b.eq	bdc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7e4>  // b.none
     870:	add	x3, x3, #0x20
     874:	cmp	x3, x0
     878:	b.eq	be4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7ec>  // b.none
     87c:	ldr	x1, [x3]
     880:	cmp	x28, x1
     884:	b.ne	84c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x454>  // b.any
     888:	cmp	x2, x3
     88c:	b.eq	aa8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6b0>  // b.none
     890:	cbz	x4, ee4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xaec>
     894:	ldrb	w0, [x4, #16]
     898:	cmp	w0, #0x3e
     89c:	b.eq	a74 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x67c>  // b.none
     8a0:	cmp	x6, x3
     8a4:	b.hi	f80 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb88>  // b.pmore
     8a8:	cmp	x2, x3
     8ac:	b.ls	f20 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb28>  // b.plast
     8b0:	add	x1, x3, #0x8
     8b4:	cmp	x2, x1
     8b8:	b.eq	8d8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4e0>  // b.none
     8bc:	sub	x2, x2, x1
     8c0:	mov	x0, x3
     8c4:	str	x4, [sp, #112]
     8c8:	bl	0 <memmove>
     8cc:	ldr	w7, [x21, #32]
     8d0:	ldr	x4, [sp, #112]
     8d4:	mov	w8, w7
     8d8:	ldr	w0, [x21, #36]
     8dc:	sub	x8, x8, #0x1
     8e0:	cmp	x8, x0
     8e4:	b.hi	f50 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb58>  // b.pmore
     8e8:	sub	w7, w7, #0x1
     8ec:	str	w7, [x21, #32]
     8f0:	b	5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     8f4:	cbz	x2, df0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9f8>
     8f8:	mov	w6, #0x101                 	// #257
     8fc:	mov	x4, #0x0                   	// #0
     900:	mov	x1, x24
     904:	mov	w0, w27
     908:	mov	x3, x22
     90c:	stp	xzr, xzr, [sp, #352]
     910:	strh	w6, [sp, #368]
     914:	bl	0 <_ZN4llvm14BinaryOperator6CreateENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_>
     918:	mov	x4, x0
     91c:	cbz	x0, f70 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb78>
     920:	ldrb	w0, [x4, #16]
     924:	cmp	w0, #0x17
     928:	sub	w1, w0, #0x18
     92c:	b.ls	cb0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8b8>  // b.plast
     930:	cmp	w1, #0x39
     934:	b.hi	95c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x564>  // b.pmore
     938:	mov	x0, #0x1                   	// #1
     93c:	lsl	x0, x0, x1
     940:	mov	x1, #0x5000                	// #20480
     944:	movk	x1, #0x125, lsl #16
     948:	movk	x1, #0x40, lsl #48
     94c:	tst	x0, x1
     950:	b.ne	c44 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x84c>  // b.any
     954:	tst	x0, #0x380000000000000
     958:	b.ne	c14 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x81c>  // b.any
     95c:	ldr	x0, [sp, #288]
     960:	cbz	x0, 9b4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x5bc>
     964:	mov	x1, x4
     968:	add	x0, x0, #0x28
     96c:	str	x4, [sp, #112]
     970:	ldr	x24, [sp, #296]
     974:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     978:	ldr	x4, [sp, #112]
     97c:	ldr	x3, [x24]
     980:	add	x6, x4, #0x18
     984:	ldr	x1, [x4, #24]
     988:	and	x3, x3, #0xfffffffffffffff8
     98c:	tst	x6, #0x7
     990:	and	x1, x1, #0x7
     994:	orr	x1, x1, x3
     998:	stp	x1, x24, [x4, #24]
     99c:	ldr	x0, [x24]
     9a0:	str	x6, [x3, #8]
     9a4:	b.ne	f00 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb08>  // b.any
     9a8:	and	x0, x0, #0x7
     9ac:	orr	x0, x0, x6
     9b0:	str	x0, [x24]
     9b4:	add	x1, sp, #0xa0
     9b8:	mov	x0, x4
     9bc:	str	x4, [sp, #112]
     9c0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     9c4:	ldr	x1, [sp, #280]
     9c8:	ldr	x4, [sp, #112]
     9cc:	cbz	x1, 5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     9d0:	add	x24, x4, #0x30
     9d4:	mov	x0, x22
     9d8:	mov	x2, #0x2                   	// #2
     9dc:	str	x1, [sp, #352]
     9e0:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     9e4:	cmp	x24, x22
     9e8:	ldr	x4, [sp, #112]
     9ec:	b.eq	c94 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x89c>  // b.none
     9f0:	ldr	x1, [x4, #48]
     9f4:	cbz	x1, a04 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x60c>
     9f8:	mov	x0, x24
     9fc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     a00:	ldr	x4, [sp, #112]
     a04:	ldr	x1, [sp, #352]
     a08:	str	x1, [x24]
     a0c:	cbz	x1, 5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     a10:	mov	x2, x24
     a14:	mov	x0, x22
     a18:	str	x4, [sp, #112]
     a1c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     a20:	ldr	x4, [sp, #112]
     a24:	b	5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     a28:	mov	w0, #0x18                  	// #24
     a2c:	umsubl	x1, w1, w0, x28
     a30:	b	558 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x160>
     a34:	mov	w1, #0x18                  	// #24
     a38:	umsubl	x0, w0, w1, x28
     a3c:	b	528 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x130>
     a40:	mov	w0, #0x18                  	// #24
     a44:	umsubl	x2, w2, w0, x28
     a48:	ldr	x0, [x2]
     a4c:	ldr	x2, [x0]
     a50:	cmp	x1, x2
     a54:	b.ne	7f0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3f8>  // b.any
     a58:	ldrb	w1, [x28, #16]
     a5c:	cmp	w1, #0x3e
     a60:	b.eq	ec4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xacc>  // b.none
     a64:	ldr	x1, [sp, #280]
     a68:	str	x0, [x19, #16]
     a6c:	cbnz	x1, 5e0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1e8>
     a70:	b	5e8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1f0>
     a74:	str	x4, [x3]
     a78:	b	5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     a7c:	ldr	x0, [x3]
     a80:	cmp	x28, x0
     a84:	b.eq	888 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x490>  // b.none
     a88:	add	x3, x3, #0x8
     a8c:	ldr	x0, [x3]
     a90:	cmp	x28, x0
     a94:	b.eq	888 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x490>  // b.none
     a98:	ldr	x0, [x3, #8]
     a9c:	add	x3, x3, #0x8
     aa0:	cmp	x28, x0
     aa4:	b.eq	888 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x490>  // b.none
     aa8:	cbz	x4, ee4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xaec>
     aac:	ldrb	w0, [x4, #16]
     ab0:	cmp	w0, #0x3e
     ab4:	b.ne	5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>  // b.any
     ab8:	ldr	w0, [x21, #36]
     abc:	cmp	w7, w0
     ac0:	b.cs	dc4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9cc>  // b.hs, b.nlast
     ac4:	str	x4, [x2]
     ac8:	ldp	w0, w2, [x21, #32]
     acc:	mov	w1, w0
     ad0:	add	x1, x1, #0x1
     ad4:	cmp	x1, x2
     ad8:	b.hi	f50 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb58>  // b.pmore
     adc:	add	w0, w0, #0x1
     ae0:	str	w0, [x21, #32]
     ae4:	b	5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     ae8:	ldr	x3, [sp, #120]
     aec:	mov	x4, #0x0                   	// #0
     af0:	str	q0, [sp, #224]
     af4:	strh	w7, [sp, #240]
     af8:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
     afc:	ldr	x1, [sp, #288]
     b00:	mov	x4, x0
     b04:	cbz	x1, b58 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x760>
     b08:	add	x0, x1, #0x28
     b0c:	mov	x1, x4
     b10:	str	x4, [sp, #112]
     b14:	ldr	x24, [sp, #296]
     b18:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     b1c:	ldr	x4, [sp, #112]
     b20:	ldr	x1, [x24]
     b24:	add	x3, x4, #0x18
     b28:	ldr	x0, [x4, #24]
     b2c:	and	x1, x1, #0xfffffffffffffff8
     b30:	tst	x3, #0x7
     b34:	and	x0, x0, #0x7
     b38:	orr	x0, x0, x1
     b3c:	stp	x0, x24, [x4, #24]
     b40:	ldr	x0, [x24]
     b44:	str	x3, [x1, #8]
     b48:	b.ne	f00 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb08>  // b.any
     b4c:	and	x0, x0, #0x7
     b50:	orr	x0, x0, x3
     b54:	str	x0, [x24]
     b58:	add	x1, sp, #0x80
     b5c:	mov	x0, x4
     b60:	str	x4, [sp, #112]
     b64:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     b68:	ldr	x1, [sp, #280]
     b6c:	ldr	x4, [sp, #112]
     b70:	cbz	x1, 81c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x424>
     b74:	add	x24, x4, #0x30
     b78:	mov	x0, x22
     b7c:	mov	x2, #0x2                   	// #2
     b80:	str	x1, [sp, #352]
     b84:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     b88:	cmp	x24, x22
     b8c:	ldr	x4, [sp, #112]
     b90:	b.eq	cd0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8d8>  // b.none
     b94:	ldr	x1, [x4, #48]
     b98:	cbz	x1, ba8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7b0>
     b9c:	mov	x0, x24
     ba0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     ba4:	ldr	x4, [sp, #112]
     ba8:	ldr	x1, [sp, #352]
     bac:	str	x1, [x24]
     bb0:	cbz	x1, 81c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x424>
     bb4:	mov	x2, x24
     bb8:	mov	x0, x22
     bbc:	str	x4, [sp, #112]
     bc0:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     bc4:	ldr	x4, [sp, #112]
     bc8:	b	81c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x424>
     bcc:	add	x3, x3, #0x8
     bd0:	b	888 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x490>
     bd4:	add	x3, x3, #0x10
     bd8:	b	888 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x490>
     bdc:	add	x3, x3, #0x18
     be0:	b	888 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x490>
     be4:	sub	x1, x2, x3
     be8:	asr	x1, x1, #3
     bec:	cmp	x1, #0x2
     bf0:	b.eq	a8c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x694>  // b.none
     bf4:	cmp	x1, #0x3
     bf8:	b.eq	a7c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x684>  // b.none
     bfc:	cmp	x1, #0x1
     c00:	b.ne	aa8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6b0>  // b.any
     c04:	ldr	x0, [x3]
     c08:	cmp	x28, x0
     c0c:	b.ne	aa8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6b0>  // b.any
     c10:	b	888 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x490>
     c14:	ldr	x0, [x4]
     c18:	cbz	x0, c84 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x88c>
     c1c:	nop
     c20:	ldrb	w1, [x0, #8]
     c24:	cmp	w1, #0xe
     c28:	b.eq	c7c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x884>  // b.none
     c2c:	cmp	w1, #0x10
     c30:	b.eq	cc0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8c8>  // b.none
     c34:	sub	w1, w1, #0x1
     c38:	and	w1, w1, #0xff
     c3c:	cmp	w1, #0x5
     c40:	b.hi	95c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x564>  // b.pmore
     c44:	ldr	x2, [sp, #312]
     c48:	ldr	w24, [sp, #320]
     c4c:	cbz	x2, c64 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x86c>
     c50:	mov	x0, x4
     c54:	mov	w1, #0x3                   	// #3
     c58:	str	x4, [sp, #112]
     c5c:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
     c60:	ldr	x4, [sp, #112]
     c64:	mov	x0, x4
     c68:	mov	w1, w24
     c6c:	str	x4, [sp, #112]
     c70:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
     c74:	ldr	x4, [sp, #112]
     c78:	b	95c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x564>
     c7c:	ldr	x0, [x0, #24]
     c80:	cbnz	x0, c20 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x828>
     c84:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     c88:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     c8c:	add	x3, x3, #0x0
     c90:	b	dfc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa04>
     c94:	ldr	x1, [sp, #352]
     c98:	cbz	x1, 5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     c9c:	mov	x0, x22
     ca0:	str	x4, [sp, #112]
     ca4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     ca8:	ldr	x4, [sp, #112]
     cac:	b	5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     cb0:	cmp	w0, #0x5
     cb4:	b.ne	95c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x564>  // b.any
     cb8:	ldrh	w1, [x4, #18]
     cbc:	b	930 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x538>
     cc0:	ldr	x0, [x0, #16]
     cc4:	ldr	x0, [x0]
     cc8:	ldrb	w1, [x0, #8]
     ccc:	b	c34 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x83c>
     cd0:	ldr	x1, [sp, #352]
     cd4:	cbz	x1, 81c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x424>
     cd8:	mov	x0, x22
     cdc:	str	x4, [sp, #112]
     ce0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     ce4:	ldr	x4, [sp, #112]
     ce8:	b	81c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x424>
     cec:	add	x3, sp, #0x100
     cf0:	mov	x4, #0x0                   	// #0
     cf4:	mov	w2, #0x0                   	// #0
     cf8:	str	q0, [sp, #256]
     cfc:	strh	w5, [sp, #272]
     d00:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
     d04:	ldr	x1, [sp, #360]
     d08:	mov	x19, x0
     d0c:	cbz	x1, d58 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x960>
     d10:	ldr	x20, [sp, #368]
     d14:	add	x0, x1, #0x28
     d18:	mov	x1, x19
     d1c:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     d20:	ldr	x0, [x19, #24]
     d24:	add	x2, x19, #0x18
     d28:	ldr	x1, [x20]
     d2c:	and	x0, x0, #0x7
     d30:	tst	x2, #0x7
     d34:	and	x1, x1, #0xfffffffffffffff8
     d38:	orr	x0, x0, x1
     d3c:	stp	x0, x20, [x19, #24]
     d40:	ldr	x0, [x20]
     d44:	str	x2, [x1, #8]
     d48:	b.ne	ef4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xafc>  // b.any
     d4c:	and	x0, x0, #0x7
     d50:	orr	x0, x0, x2
     d54:	str	x0, [x20]
     d58:	add	x1, sp, #0xc0
     d5c:	mov	x0, x19
     d60:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     d64:	ldr	x1, [sp, #352]
     d68:	cbz	x1, 6ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2f4>
     d6c:	add	x20, sp, #0x118
     d70:	add	x22, x19, #0x30
     d74:	mov	x0, x20
     d78:	mov	x2, #0x2                   	// #2
     d7c:	str	x1, [sp, #280]
     d80:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     d84:	cmp	x22, x20
     d88:	b.eq	e10 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa18>  // b.none
     d8c:	ldr	x1, [x19, #48]
     d90:	cbz	x1, d9c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9a4>
     d94:	mov	x0, x22
     d98:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     d9c:	ldr	x1, [sp, #280]
     da0:	str	x1, [x19, #48]
     da4:	cbz	x1, 6ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2f4>
     da8:	mov	x2, x22
     dac:	mov	x0, x20
     db0:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     db4:	cbnz	x19, 6f0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2f8>
     db8:	b	f40 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb48>
     dbc:	mov	x3, x6
     dc0:	b	bec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7f4>
     dc4:	add	x0, x21, #0x18
     dc8:	mov	x2, #0x0                   	// #0
     dcc:	add	x1, x21, #0x28
     dd0:	mov	x3, #0x8                   	// #8
     dd4:	str	x4, [sp, #112]
     dd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ddc:	ldr	x0, [x21, #24]
     de0:	ldr	w2, [x21, #32]
     de4:	ldr	x4, [sp, #112]
     de8:	add	x2, x0, x2, lsl #3
     dec:	b	ac4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6cc>
     df0:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     df4:	add	x3, x3, #0x0
     df8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     dfc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e00:	add	x1, x1, #0x0
     e04:	add	x0, x0, #0x0
     e08:	mov	w2, #0x69                  	// #105
     e0c:	bl	0 <__assert_fail>
     e10:	ldr	x1, [sp, #280]
     e14:	cbz	x1, 6ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2f4>
     e18:	mov	x0, x22
     e1c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     e20:	cbnz	x19, 6f0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2f8>
     e24:	b	f40 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xb48>
     e28:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e2c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e30:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e34:	add	x3, x3, #0x0
     e38:	add	x1, x1, #0x0
     e3c:	add	x0, x0, #0x0
     e40:	mov	w2, #0xaa                  	// #170
     e44:	bl	0 <__assert_fail>
     e48:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e4c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e50:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e54:	add	x3, x3, #0x0
     e58:	add	x1, x1, #0x0
     e5c:	add	x0, x0, #0x0
     e60:	mov	w2, #0x116                 	// #278
     e64:	bl	0 <__assert_fail>
     e68:	stp	x23, x24, [sp, #48]
     e6c:	stp	x25, x26, [sp, #64]
     e70:	stp	x27, x28, [sp, #80]
     e74:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e78:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e7c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e80:	add	x3, x3, #0x0
     e84:	add	x1, x1, #0x0
     e88:	add	x0, x0, #0x0
     e8c:	mov	w2, #0x8e                  	// #142
     e90:	bl	0 <__assert_fail>
     e94:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e98:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e9c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ea0:	add	x3, x3, #0x0
     ea4:	add	x1, x1, #0x0
     ea8:	add	x0, x0, #0x0
     eac:	mov	w2, #0x131                 	// #305
     eb0:	bl	0 <__assert_fail>
     eb4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     eb8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ebc:	add	x3, x3, #0x0
     ec0:	b	dfc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa04>
     ec4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ec8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ecc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ed0:	add	x3, x3, #0x0
     ed4:	add	x1, x1, #0x0
     ed8:	add	x0, x0, #0x0
     edc:	mov	w2, #0x13f                 	// #319
     ee0:	bl	0 <__assert_fail>
     ee4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ee8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     eec:	add	x3, x3, #0x0
     ef0:	b	dfc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa04>
     ef4:	stp	x23, x24, [sp, #48]
     ef8:	stp	x25, x26, [sp, #64]
     efc:	stp	x27, x28, [sp, #80]
     f00:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f04:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f08:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f0c:	add	x3, x3, #0x0
     f10:	add	x1, x1, #0x0
     f14:	add	x0, x0, #0x0
     f18:	mov	w2, #0xb2                  	// #178
     f1c:	bl	0 <__assert_fail>
     f20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f24:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f28:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f2c:	add	x3, x3, #0x0
     f30:	add	x1, x1, #0x0
     f34:	add	x0, x0, #0x0
     f38:	mov	w2, #0x1b7                 	// #439
     f3c:	bl	0 <__assert_fail>
     f40:	stp	x23, x24, [sp, #48]
     f44:	stp	x25, x26, [sp, #64]
     f48:	stp	x27, x28, [sp, #80]
     f4c:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f50:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f54:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f58:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f5c:	add	x3, x3, #0x0
     f60:	add	x1, x1, #0x0
     f64:	add	x0, x0, #0x0
     f68:	mov	w2, #0x43                  	// #67
     f6c:	bl	0 <__assert_fail>
     f70:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f74:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f78:	add	x3, x3, #0x0
     f7c:	b	dfc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa04>
     f80:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f84:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f88:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     f8c:	add	x3, x3, #0x0
     f90:	add	x1, x1, #0x0
     f94:	add	x0, x0, #0x0
     f98:	mov	w2, #0x1b6                 	// #438
     f9c:	bl	0 <__assert_fail>

0000000000000fa0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv>:
     fa0:	stp	x29, x30, [sp, #-304]!
     fa4:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     fa8:	mov	x29, sp
     fac:	stp	x25, x26, [sp, #64]
     fb0:	mov	x25, x0
     fb4:	ldr	d0, [x1]
     fb8:	stp	x19, x20, [sp, #16]
     fbc:	add	x20, sp, #0x90
     fc0:	add	x0, x20, #0x10
     fc4:	str	x0, [sp, #144]
     fc8:	ldr	x0, [x25, #80]
     fcc:	stp	x21, x22, [sp, #32]
     fd0:	ldr	w2, [x25, #96]
     fd4:	add	x21, sp, #0xe0
     fd8:	add	x0, x0, #0x1
     fdc:	add	x1, x21, #0x10
     fe0:	str	x0, [x25, #80]
     fe4:	str	x1, [sp, #224]
     fe8:	str	d0, [sp, #152]
     fec:	str	d0, [sp, #232]
     ff0:	cbnz	w2, 1150 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1b0>
     ff4:	ldr	w0, [x25, #100]
     ff8:	cbz	w0, 1198 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1f8>
     ffc:	ldr	w1, [x25, #104]
    1000:	ldr	x2, [x25, #88]
    1004:	cmp	w1, #0x40
    1008:	ubfiz	x1, x1, #4, #32
    100c:	b.ls	1174 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1d4>  // b.plast
    1010:	mov	x0, x2
    1014:	bl	0 <_ZdlPvm>
    1018:	str	xzr, [x25, #88]
    101c:	str	xzr, [x25, #96]
    1020:	str	wzr, [x25, #104]
    1024:	ldp	x1, x3, [x25, #112]
    1028:	ldr	x2, [x25, #72]
    102c:	ldp	w0, w4, [sp, #152]
    1030:	cmp	x3, x1
    1034:	ldur	x19, [x2, #-24]
    1038:	b.eq	1044 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa4>  // b.none
    103c:	nop
    1040:	str	x1, [x25, #120]
    1044:	cmp	w0, w4
    1048:	b.cs	13d0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x430>  // b.hs, b.nlast
    104c:	ubfiz	x0, x0, #3, #32
    1050:	ldr	x1, [sp, #144]
    1054:	str	x19, [x1, x0]
    1058:	ldp	w1, w2, [sp, #152]
    105c:	mov	w0, w1
    1060:	add	x0, x0, #0x1
    1064:	cmp	x0, x2
    1068:	b.hi	1a28 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa88>  // b.pmore
    106c:	add	w1, w1, #0x1
    1070:	str	w1, [sp, #152]
    1074:	cbz	w1, 1148 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1a8>
    1078:	add	x22, sp, #0x70
    107c:	mov	x26, #0xa000                	// #40960
    1080:	stp	x23, x24, [sp, #48]
    1084:	add	x23, x22, #0x10
    1088:	add	x24, x20, #0x10
    108c:	movk	x26, #0x7002, lsl #16
    1090:	mov	x0, #0xfffffffffffffff8    	// #-8
    1094:	mov	w2, w1
    1098:	ldr	x4, [sp, #144]
    109c:	add	x3, x0, w1, uxtw #3
    10a0:	ldr	x19, [x4, x3]
    10a4:	cbz	x19, 1978 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9d8>
    10a8:	ldrb	w3, [x19, #16]
    10ac:	cmp	w3, #0x10
    10b0:	b.ls	1128 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x188>  // b.plast
    10b4:	cmp	w3, #0x17
    10b8:	b.ls	1220 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x280>  // b.plast
    10bc:	ldr	w3, [sp, #232]
    10c0:	cbz	w3, 10dc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x13c>
    10c4:	ldr	x4, [sp, #224]
    10c8:	add	x0, x0, w3, uxtw #3
    10cc:	mov	w5, w3
    10d0:	ldr	x0, [x4, x0]
    10d4:	cmp	x19, x0
    10d8:	b.eq	1348 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x3a8>  // b.none
    10dc:	ldr	w4, [x25, #104]
    10e0:	ldr	x5, [x25, #88]
    10e4:	cbz	w4, 11c8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x228>
    10e8:	cmn	x19, #0x10
    10ec:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    10f0:	b.eq	1954 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9b4>  // b.none
    10f4:	lsr	w0, w19, #9
    10f8:	sub	w7, w4, #0x1
    10fc:	eor	w0, w0, w19, lsr #4
    1100:	and	w0, w0, w7
    1104:	lsl	w6, w0, #4
    1108:	add	x8, x5, x6
    110c:	ldr	x6, [x5, x6]
    1110:	cmp	x19, x6
    1114:	b.ne	11bc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x21c>  // b.any
    1118:	ubfiz	x4, x4, #4, #32
    111c:	add	x4, x5, x4
    1120:	cmp	x8, x4
    1124:	b.eq	11c8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x228>  // b.none
    1128:	ldr	w0, [sp, #156]
    112c:	sub	x2, x2, #0x1
    1130:	cmp	x2, x0
    1134:	b.hi	18fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x95c>  // b.pmore
    1138:	sub	w1, w1, #0x1
    113c:	str	w1, [sp, #152]
    1140:	cbnz	w1, 1090 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xf0>
    1144:	ldp	x23, x24, [sp, #48]
    1148:	mov	w19, #0x1                   	// #1
    114c:	b	1228 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x288>
    1150:	lsl	w0, w2, #2
    1154:	ldr	w1, [x25, #104]
    1158:	cmp	w0, #0x40
    115c:	mov	w3, #0x40                  	// #64
    1160:	csel	w0, w0, w3, cs  // cs = hs, nlast
    1164:	cmp	w0, w1
    1168:	b.cc	13f0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x450>  // b.lo, b.ul, b.last
    116c:	ldr	x2, [x25, #88]
    1170:	ubfiz	x1, x1, #4, #32
    1174:	add	x1, x2, x1
    1178:	mov	x0, #0xfffffffffffffff8    	// #-8
    117c:	cmp	x1, x2
    1180:	b.eq	1194 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1f4>  // b.none
    1184:	nop
    1188:	str	x0, [x2], #16
    118c:	cmp	x1, x2
    1190:	b.ne	1188 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1e8>  // b.any
    1194:	str	xzr, [x25, #96]
    1198:	ldp	x1, x2, [x25, #112]
    119c:	mov	w4, #0x8                   	// #8
    11a0:	ldr	x3, [x25, #72]
    11a4:	mov	w0, #0x0                   	// #0
    11a8:	cmp	x2, x1
    11ac:	ldur	x19, [x3, #-24]
    11b0:	b.ne	1040 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa0>  // b.any
    11b4:	mov	x0, #0x0                   	// #0
    11b8:	b	1050 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb0>
    11bc:	mov	w8, #0x1                   	// #1
    11c0:	cmn	x6, #0x8
    11c4:	b.ne	14a8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x508>  // b.any
    11c8:	ldr	w0, [sp, #236]
    11cc:	cmp	w3, w0
    11d0:	b.cs	132c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x38c>  // b.hs, b.nlast
    11d4:	ldr	x0, [sp, #224]
    11d8:	str	x19, [x0, w3, uxtw #3]
    11dc:	ldp	w0, w2, [sp, #232]
    11e0:	mov	w1, w0
    11e4:	add	x1, x1, #0x1
    11e8:	cmp	x1, x2
    11ec:	b.hi	18fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x95c>  // b.pmore
    11f0:	ldrb	w1, [x19, #16]
    11f4:	add	w0, w0, #0x1
    11f8:	str	w0, [sp, #232]
    11fc:	sub	w0, w1, #0x18
    1200:	cmp	w0, #0x28
    1204:	b.hi	1220 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x280>  // b.pmore
    1208:	mov	x1, #0x1                   	// #1
    120c:	lsl	x1, x1, x0
    1210:	tst	x1, x26
    1214:	b.ne	1274 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2d4>  // b.any
    1218:	tst	x1, #0x1c000000000
    121c:	b.ne	1268 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2c8>  // b.any
    1220:	ldp	x23, x24, [sp, #48]
    1224:	mov	w19, #0x0                   	// #0
    1228:	ldr	x0, [sp, #224]
    122c:	add	x21, x21, #0x10
    1230:	cmp	x0, x21
    1234:	b.eq	123c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x29c>  // b.none
    1238:	bl	0 <free>
    123c:	ldr	x0, [sp, #144]
    1240:	add	x20, x20, #0x10
    1244:	cmp	x0, x20
    1248:	b.eq	1250 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2b0>  // b.none
    124c:	bl	0 <free>
    1250:	mov	w0, w19
    1254:	ldp	x19, x20, [sp, #16]
    1258:	ldp	x21, x22, [sp, #32]
    125c:	ldp	x25, x26, [sp, #64]
    1260:	ldp	x29, x30, [sp], #304
    1264:	ret
    1268:	ldr	w1, [sp, #152]
    126c:	cbnz	w1, 1090 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xf0>
    1270:	b	1144 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1a4>
    1274:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1278:	mov	x1, x22
    127c:	stp	x27, x28, [sp, #80]
    1280:	ldr	d0, [x0]
    1284:	mov	x0, x19
    1288:	str	x23, [sp, #112]
    128c:	str	d0, [sp, #120]
    1290:	bl	a0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
    1294:	ldr	x19, [sp, #112]
    1298:	ldr	w28, [sp, #120]
    129c:	add	x28, x19, x28, lsl #3
    12a0:	cmp	x19, x28
    12a4:	b.eq	12f0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x350>  // b.none
    12a8:	ldp	w1, w0, [sp, #152]
    12ac:	nop
    12b0:	cmp	w1, w0
    12b4:	ldr	x27, [x19]
    12b8:	b.cs	1310 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x370>  // b.hs, b.nlast
    12bc:	ldr	x0, [sp, #144]
    12c0:	str	x27, [x0, w1, uxtw #3]
    12c4:	ldp	w1, w0, [sp, #152]
    12c8:	mov	w2, w1
    12cc:	add	x2, x2, #0x1
    12d0:	cmp	x2, w0, uxtw
    12d4:	b.hi	1900 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x960>  // b.pmore
    12d8:	add	w1, w1, #0x1
    12dc:	str	w1, [sp, #152]
    12e0:	add	x19, x19, #0x8
    12e4:	cmp	x28, x19
    12e8:	b.ne	12b0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x310>  // b.any
    12ec:	ldr	x28, [sp, #112]
    12f0:	cmp	x28, x23
    12f4:	b.eq	1300 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x360>  // b.none
    12f8:	mov	x0, x28
    12fc:	bl	0 <free>
    1300:	ldr	w1, [sp, #152]
    1304:	ldp	x27, x28, [sp, #80]
    1308:	cbnz	w1, 1090 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xf0>
    130c:	b	1144 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1a4>
    1310:	mov	x1, x24
    1314:	mov	x0, x20
    1318:	mov	x3, #0x8                   	// #8
    131c:	mov	x2, #0x0                   	// #0
    1320:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1324:	ldr	w1, [sp, #152]
    1328:	b	12bc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x31c>
    132c:	mov	x3, #0x8                   	// #8
    1330:	add	x1, x21, #0x10
    1334:	mov	x0, x21
    1338:	mov	x2, #0x0                   	// #0
    133c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1340:	ldr	w3, [sp, #232]
    1344:	b	11d4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x234>
    1348:	ldr	w0, [sp, #156]
    134c:	sub	x2, x2, #0x1
    1350:	stp	x27, x28, [sp, #80]
    1354:	cmp	x2, x0
    1358:	b.hi	1900 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x960>  // b.pmore
    135c:	ldr	w0, [sp, #236]
    1360:	sub	w1, w1, #0x1
    1364:	str	w1, [sp, #152]
    1368:	sub	x5, x5, #0x1
    136c:	cmp	x5, x0
    1370:	b.hi	1900 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x960>  // b.pmore
    1374:	ldr	w28, [x25, #104]
    1378:	sub	w3, w3, #0x1
    137c:	str	x19, [sp, #112]
    1380:	str	xzr, [sp, #120]
    1384:	str	xzr, [sp, #128]
    1388:	str	w3, [sp, #232]
    138c:	ldr	x3, [x25, #88]
    1390:	cbz	w28, 16ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x74c>
    1394:	cmn	x19, #0x10
    1398:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    139c:	b.eq	1b34 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb94>  // b.none
    13a0:	lsr	w27, w19, #9
    13a4:	sub	w2, w28, #0x1
    13a8:	eor	w27, w27, w19, lsr #4
    13ac:	and	w6, w27, w2
    13b0:	lsl	w0, w6, #4
    13b4:	add	x7, x3, x0
    13b8:	ldr	x5, [x3, x0]
    13bc:	cmp	x19, x5
    13c0:	b.ne	14d4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x534>  // b.any
    13c4:	ldp	x27, x28, [sp, #80]
    13c8:	cbnz	w1, 1090 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xf0>
    13cc:	b	1144 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1a4>
    13d0:	mov	x0, x20
    13d4:	add	x1, x20, #0x10
    13d8:	mov	x3, #0x8                   	// #8
    13dc:	mov	x2, #0x0                   	// #0
    13e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13e4:	ldr	w0, [sp, #152]
    13e8:	lsl	x0, x0, #3
    13ec:	b	1050 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb0>
    13f0:	subs	w2, w2, #0x1
    13f4:	b.eq	16e0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x740>  // b.none
    13f8:	clz	w2, w2
    13fc:	mov	w0, #0x21                  	// #33
    1400:	sub	w2, w0, w2
    1404:	mov	w0, #0x1                   	// #1
    1408:	lsl	w0, w0, w2
    140c:	cmp	w0, #0x40
    1410:	csel	w0, w0, w3, ge  // ge = tcont
    1414:	cmp	w0, w1
    1418:	b.eq	1698 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6f8>  // b.none
    141c:	lsl	w0, w0, #2
    1420:	mov	w2, #0xaaab                	// #43691
    1424:	movk	w2, #0xaaaa, lsl #16
    1428:	umull	x0, w0, w2
    142c:	lsr	x0, x0, #33
    1430:	add	w0, w0, #0x1
    1434:	orr	x0, x0, x0, lsr #1
    1438:	orr	x0, x0, x0, lsr #2
    143c:	orr	x0, x0, x0, lsr #4
    1440:	orr	x0, x0, x0, lsr #8
    1444:	orr	x0, x0, x0, lsr #16
    1448:	add	x19, x0, #0x1
    144c:	mov	w22, w19
    1450:	lsl	x19, x19, #4
    1454:	ldr	x0, [x25, #88]
    1458:	ubfiz	x1, x1, #4, #32
    145c:	bl	0 <_ZdlPvm>
    1460:	str	w22, [x25, #104]
    1464:	mov	x0, x19
    1468:	bl	0 <_Znwm>
    146c:	str	x0, [x25, #88]
    1470:	ldr	w1, [x25, #104]
    1474:	str	xzr, [x25, #96]
    1478:	sub	w2, w1, #0x1
    147c:	tst	w2, w1
    1480:	b.ne	1aa0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb00>  // b.any
    1484:	ubfiz	x1, x1, #4, #32
    1488:	add	x1, x0, x1
    148c:	cmp	x0, x1
    1490:	b.eq	1024 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x84>  // b.none
    1494:	mov	x2, #0xfffffffffffffff8    	// #-8
    1498:	str	x2, [x0], #16
    149c:	cmp	x1, x0
    14a0:	b.ne	1498 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x4f8>  // b.any
    14a4:	b	1024 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x84>
    14a8:	add	w0, w8, w0
    14ac:	add	w9, w8, #0x1
    14b0:	and	w6, w7, w0
    14b4:	and	w0, w7, w0
    14b8:	lsl	x6, x6, #4
    14bc:	add	x8, x5, x6
    14c0:	ldr	x6, [x5, x6]
    14c4:	cmp	x19, x6
    14c8:	b.eq	1118 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x178>  // b.none
    14cc:	mov	w8, w9
    14d0:	b	11c0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x220>
    14d4:	mov	w0, #0x1                   	// #1
    14d8:	mov	x4, #0x0                   	// #0
    14dc:	cmn	x5, #0x8
    14e0:	b.ne	19c4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa24>  // b.any
    14e4:	ldr	x6, [x25, #80]
    14e8:	lsl	w0, w28, #1
    14ec:	ldr	w1, [x25, #96]
    14f0:	cmp	x4, #0x0
    14f4:	add	x6, x6, #0x1
    14f8:	str	x6, [x25, #80]
    14fc:	add	w1, w1, #0x1
    1500:	add	w6, w0, w28
    1504:	csel	x4, x4, x7, ne  // ne = any
    1508:	cmp	w6, w1, lsl #2
    150c:	b.ls	16fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x75c>  // b.plast
    1510:	ldr	w0, [x25, #100]
    1514:	sub	w0, w28, w0
    1518:	sub	w0, w0, w1
    151c:	cmp	w0, w28, lsr #3
    1520:	b.ls	15a0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x600>  // b.plast
    1524:	ldr	x0, [x4]
    1528:	str	w1, [x25, #96]
    152c:	cmn	x0, #0x8
    1530:	b.eq	1540 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x5a0>  // b.none
    1534:	ldr	w0, [x25, #100]
    1538:	sub	w0, w0, #0x1
    153c:	str	w0, [x25, #100]
    1540:	add	x0, x25, #0x70
    1544:	ldp	x1, x2, [x0, #8]
    1548:	str	x19, [x4]
    154c:	str	wzr, [x4, #8]
    1550:	cmp	x1, x2
    1554:	b.eq	16c8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x728>  // b.none
    1558:	ldp	x2, x3, [x22]
    155c:	stp	x2, x3, [x1]
    1560:	ldr	x3, [x22, #16]
    1564:	str	x3, [x1, #16]
    1568:	add	x2, x1, #0x18
    156c:	str	x2, [x0, #8]
    1570:	ldr	x0, [x25, #112]
    1574:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1578:	movk	x1, #0xaaab
    157c:	sub	x0, x2, x0
    1580:	ldp	x27, x28, [sp, #80]
    1584:	asr	x0, x0, #3
    1588:	mul	x0, x0, x1
    158c:	sub	w0, w0, #0x1
    1590:	str	w0, [x4, #8]
    1594:	ldr	w1, [sp, #152]
    1598:	cbnz	w1, 1090 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xf0>
    159c:	b	1144 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1a4>
    15a0:	mov	w1, w2
    15a4:	lsr	w0, w2, #1
    15a8:	orr	x0, x0, x1
    15ac:	mov	w1, #0x40                  	// #64
    15b0:	stp	x3, x5, [sp, #96]
    15b4:	orr	x0, x0, x0, lsr #2
    15b8:	orr	x0, x0, x0, lsr #4
    15bc:	orr	x0, x0, x0, lsr #8
    15c0:	orr	x0, x0, x0, lsr #16
    15c4:	add	x0, x0, #0x1
    15c8:	cmp	w0, w1
    15cc:	csel	w0, w0, w1, cs  // cs = hs, nlast
    15d0:	str	w0, [x25, #104]
    15d4:	ubfiz	x0, x0, #4, #32
    15d8:	bl	0 <_Znwm>
    15dc:	ldp	x3, x5, [sp, #96]
    15e0:	mov	x6, x0
    15e4:	ldr	w2, [x25, #104]
    15e8:	str	x6, [x25, #88]
    15ec:	str	xzr, [x25, #96]
    15f0:	sub	w0, w2, #0x1
    15f4:	and	w0, w0, w2
    15f8:	cbz	x3, 199c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9fc>
    15fc:	ubfiz	x1, x28, #4, #32
    1600:	add	x7, x3, x1
    1604:	cbnz	w0, 1aa8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb08>
    1608:	ubfiz	x0, x2, #4, #32
    160c:	mov	x2, x6
    1610:	add	x0, x6, x0
    1614:	cmp	x6, x0
    1618:	b.eq	1628 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x688>  // b.none
    161c:	str	x5, [x2], #16
    1620:	cmp	x0, x2
    1624:	b.ne	161c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x67c>  // b.any
    1628:	mov	x0, x3
    162c:	b	163c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x69c>
    1630:	add	x0, x0, #0x10
    1634:	cmp	x7, x0
    1638:	b.eq	1884 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8e4>  // b.none
    163c:	ldr	x2, [x0]
    1640:	cmn	x2, #0x8
    1644:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    1648:	b.eq	1630 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x690>  // b.none
    164c:	ldr	w5, [x25, #104]
    1650:	cbz	w5, 1b44 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xba4>
    1654:	lsr	w4, w2, #9
    1658:	sub	w5, w5, #0x1
    165c:	eor	w4, w4, w2, lsr #4
    1660:	and	w4, w4, w5
    1664:	lsl	w8, w4, #4
    1668:	add	x9, x6, x8
    166c:	ldr	x8, [x6, x8]
    1670:	cmp	x2, x8
    1674:	b.ne	1920 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x980>  // b.any
    1678:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    167c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1680:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1684:	add	x3, x3, #0x0
    1688:	add	x1, x1, #0x0
    168c:	add	x0, x0, #0x0
    1690:	mov	w2, #0x17a                 	// #378
    1694:	bl	0 <__assert_fail>
    1698:	str	xzr, [x25, #96]
    169c:	sub	w1, w0, #0x1
    16a0:	tst	w1, w0
    16a4:	b.ne	1aa0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb00>  // b.any
    16a8:	ldr	x1, [x25, #88]
    16ac:	ubfiz	x0, x0, #4, #32
    16b0:	mov	x2, #0xfffffffffffffff8    	// #-8
    16b4:	add	x0, x1, x0
    16b8:	str	x2, [x1], #16
    16bc:	cmp	x0, x1
    16c0:	b.ne	16b8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x718>  // b.any
    16c4:	b	1198 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1f8>
    16c8:	mov	x2, x22
    16cc:	str	x4, [sp, #96]
    16d0:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    16d4:	ldr	x4, [sp, #96]
    16d8:	ldr	x2, [x25, #120]
    16dc:	b	1570 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x5d0>
    16e0:	mov	x19, #0x800                 	// #2048
    16e4:	mov	w22, #0x80                  	// #128
    16e8:	b	1454 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x4b4>
    16ec:	ldr	x1, [x25, #80]
    16f0:	mov	w0, #0x0                   	// #0
    16f4:	add	x1, x1, #0x1
    16f8:	str	x1, [x25, #80]
    16fc:	sub	w0, w0, #0x1
    1700:	mov	w1, #0x40                  	// #64
    1704:	str	x3, [sp, #96]
    1708:	orr	x0, x0, x0, lsr #1
    170c:	orr	x0, x0, x0, lsr #2
    1710:	orr	x0, x0, x0, lsr #4
    1714:	orr	x0, x0, x0, lsr #8
    1718:	orr	x0, x0, x0, lsr #16
    171c:	add	x0, x0, #0x1
    1720:	cmp	w0, w1
    1724:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1728:	str	w0, [x25, #104]
    172c:	ubfiz	x0, x0, #4, #32
    1730:	bl	0 <_Znwm>
    1734:	ldr	x3, [sp, #96]
    1738:	mov	x6, x0
    173c:	ldr	w2, [x25, #104]
    1740:	str	x6, [x25, #88]
    1744:	str	xzr, [x25, #96]
    1748:	sub	w0, w2, #0x1
    174c:	and	w0, w0, w2
    1750:	cbz	x3, 19fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa5c>
    1754:	ubfiz	x1, x28, #4, #32
    1758:	add	x7, x3, x1
    175c:	cbnz	w0, 1aa8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb08>
    1760:	ubfiz	x0, x2, #4, #32
    1764:	mov	x4, #0xfffffffffffffff8    	// #-8
    1768:	add	x0, x6, x0
    176c:	mov	x2, x6
    1770:	cmp	x6, x0
    1774:	b.eq	1784 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x7e4>  // b.none
    1778:	str	x4, [x2], #16
    177c:	cmp	x0, x2
    1780:	b.ne	1778 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x7d8>  // b.any
    1784:	cmp	x3, x7
    1788:	mov	x0, x3
    178c:	b.ne	17a0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x800>  // b.any
    1790:	b	1810 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x870>
    1794:	add	x0, x0, #0x10
    1798:	cmp	x7, x0
    179c:	b.eq	1810 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x870>  // b.none
    17a0:	ldr	x2, [x0]
    17a4:	cmn	x2, #0x8
    17a8:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    17ac:	b.eq	1794 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x7f4>  // b.none
    17b0:	ldr	w5, [x25, #104]
    17b4:	cbz	w5, 1b44 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xba4>
    17b8:	lsr	w4, w2, #9
    17bc:	sub	w5, w5, #0x1
    17c0:	eor	w4, w4, w2, lsr #4
    17c4:	and	w4, w4, w5
    17c8:	lsl	w8, w4, #4
    17cc:	add	x10, x6, x8
    17d0:	ldr	x8, [x6, x8]
    17d4:	cmp	x8, x2
    17d8:	b.eq	1678 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6d8>  // b.none
    17dc:	mov	w11, #0x1                   	// #1
    17e0:	mov	x9, #0x0                   	// #0
    17e4:	cmn	x8, #0x8
    17e8:	b.ne	1a6c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xacc>  // b.any
    17ec:	cmp	x9, #0x0
    17f0:	ldr	w4, [x0, #8]
    17f4:	csel	x9, x9, x10, ne  // ne = any
    17f8:	str	w4, [x9, #8]
    17fc:	str	x2, [x9]
    1800:	ldr	w2, [x25, #96]
    1804:	add	w2, w2, #0x1
    1808:	str	w2, [x25, #96]
    180c:	b	1794 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x7f4>
    1810:	mov	x0, x3
    1814:	bl	0 <_ZdlPvm>
    1818:	ldr	w2, [x25, #104]
    181c:	ldr	x6, [x25, #88]
    1820:	cbz	w2, 18dc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x93c>
    1824:	cmn	x19, #0x10
    1828:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    182c:	b.eq	1b34 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb94>  // b.none
    1830:	lsr	w0, w19, #9
    1834:	sub	w2, w2, #0x1
    1838:	eor	w0, w0, w19, lsr #4
    183c:	ldr	w1, [x25, #96]
    1840:	and	w0, w0, w2
    1844:	add	w1, w1, #0x1
    1848:	lsl	w3, w0, #4
    184c:	add	x4, x6, x3
    1850:	ldr	x7, [x6, x3]
    1854:	cmp	x19, x7
    1858:	b.ne	1864 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8c4>  // b.any
    185c:	str	w1, [x25, #96]
    1860:	b	1534 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x594>
    1864:	mov	w5, #0x1                   	// #1
    1868:	mov	x3, #0x0                   	// #0
    186c:	cmn	x7, #0x8
    1870:	b.ne	1ac8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb28>  // b.any
    1874:	cbz	x3, 1524 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x584>
    1878:	mov	x4, x3
    187c:	ldr	x0, [x3]
    1880:	b	1528 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x588>
    1884:	mov	x0, x3
    1888:	bl	0 <_ZdlPvm>
    188c:	ldr	w2, [x25, #104]
    1890:	ldr	x6, [x25, #88]
    1894:	cbz	w2, 18dc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x93c>
    1898:	sub	w2, w2, #0x1
    189c:	ldr	w1, [x25, #96]
    18a0:	and	w27, w27, w2
    18a4:	add	w1, w1, #0x1
    18a8:	lsl	w0, w27, #4
    18ac:	add	x4, x6, x0
    18b0:	ldr	x5, [x6, x0]
    18b4:	cmp	x19, x5
    18b8:	b.eq	185c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8bc>  // b.none
    18bc:	mov	w3, #0x1                   	// #1
    18c0:	mov	x0, #0x0                   	// #0
    18c4:	cmn	x5, #0x8
    18c8:	b.ne	1a34 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa94>  // b.any
    18cc:	cbz	x0, 1524 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x584>
    18d0:	mov	x4, x0
    18d4:	ldr	x0, [x0]
    18d8:	b	1528 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x588>
    18dc:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    18e0:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    18e4:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    18e8:	add	x3, x3, #0x0
    18ec:	add	x1, x1, #0x0
    18f0:	add	x0, x0, #0x0
    18f4:	mov	w2, #0x22f                 	// #559
    18f8:	bl	0 <__assert_fail>
    18fc:	stp	x27, x28, [sp, #80]
    1900:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1904:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1908:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    190c:	add	x3, x3, #0x0
    1910:	add	x1, x1, #0x0
    1914:	add	x0, x0, #0x0
    1918:	mov	w2, #0x43                  	// #67
    191c:	bl	0 <__assert_fail>
    1920:	mov	w11, #0x1                   	// #1
    1924:	mov	x10, #0x0                   	// #0
    1928:	cmn	x8, #0x8
    192c:	b.ne	1b00 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb60>  // b.any
    1930:	cmp	x10, #0x0
    1934:	ldr	w4, [x0, #8]
    1938:	csel	x9, x9, x10, eq  // eq = none
    193c:	str	w4, [x9, #8]
    1940:	str	x2, [x9]
    1944:	ldr	w2, [x25, #96]
    1948:	add	w2, w2, #0x1
    194c:	str	w2, [x25, #96]
    1950:	b	1630 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x690>
    1954:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1958:	add	x3, x3, #0x0
    195c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1960:	stp	x27, x28, [sp, #80]
    1964:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1968:	add	x1, x1, #0x0
    196c:	add	x0, x0, #0x0
    1970:	mov	w2, #0x250                 	// #592
    1974:	bl	0 <__assert_fail>
    1978:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    197c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1980:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1984:	add	x3, x3, #0x0
    1988:	add	x1, x1, #0x0
    198c:	add	x0, x0, #0x0
    1990:	mov	w2, #0x69                  	// #105
    1994:	stp	x27, x28, [sp, #80]
    1998:	bl	0 <__assert_fail>
    199c:	cbnz	w0, 1aa8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb08>
    19a0:	ubfiz	x0, x2, #4, #32
    19a4:	add	x0, x6, x0
    19a8:	cmp	x6, x0
    19ac:	b.eq	1894 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8f4>  // b.none
    19b0:	mov	x1, x6
    19b4:	str	x5, [x1], #16
    19b8:	cmp	x0, x1
    19bc:	b.ne	19b4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa14>  // b.any
    19c0:	b	1894 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8f4>
    19c4:	add	w6, w6, w0
    19c8:	cmp	x4, #0x0
    19cc:	and	w8, w2, w6
    19d0:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    19d4:	csel	x4, x4, x7, ne  // ne = any
    19d8:	add	w0, w0, #0x1
    19dc:	lsl	x5, x8, #4
    19e0:	and	w6, w2, w6
    19e4:	add	x7, x3, x5
    19e8:	ldr	x5, [x3, x5]
    19ec:	cmp	x19, x5
    19f0:	b.ne	14dc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x53c>  // b.any
    19f4:	ldp	x27, x28, [sp, #80]
    19f8:	b	13c8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x428>
    19fc:	cbnz	w0, 1aa8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb08>
    1a00:	ubfiz	x0, x2, #4, #32
    1a04:	add	x0, x6, x0
    1a08:	cmp	x6, x0
    1a0c:	b.eq	1820 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x880>  // b.none
    1a10:	mov	x1, x6
    1a14:	mov	x3, #0xfffffffffffffff8    	// #-8
    1a18:	str	x3, [x1], #16
    1a1c:	cmp	x0, x1
    1a20:	b.ne	1a18 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa78>  // b.any
    1a24:	b	1820 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x880>
    1a28:	stp	x23, x24, [sp, #48]
    1a2c:	stp	x27, x28, [sp, #80]
    1a30:	b	1900 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x960>
    1a34:	add	w27, w27, w3
    1a38:	cmp	x0, #0x0
    1a3c:	and	w7, w2, w27
    1a40:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    1a44:	csel	x0, x0, x4, ne  // ne = any
    1a48:	add	w3, w3, #0x1
    1a4c:	lsl	x5, x7, #4
    1a50:	and	w27, w2, w27
    1a54:	add	x4, x6, x7, lsl #4
    1a58:	ldr	x5, [x6, x5]
    1a5c:	cmp	x19, x5
    1a60:	b.ne	18c4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x924>  // b.any
    1a64:	str	w1, [x25, #96]
    1a68:	b	1534 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x594>
    1a6c:	add	w4, w11, w4
    1a70:	cmp	x9, #0x0
    1a74:	and	w12, w5, w4
    1a78:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    1a7c:	csel	x9, x9, x10, ne  // ne = any
    1a80:	add	w11, w11, #0x1
    1a84:	lsl	x8, x12, #4
    1a88:	and	w4, w5, w4
    1a8c:	add	x10, x6, x12, lsl #4
    1a90:	ldr	x8, [x6, x8]
    1a94:	cmp	x2, x8
    1a98:	b.eq	1678 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6d8>  // b.none
    1a9c:	b	17e4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x844>
    1aa0:	stp	x23, x24, [sp, #48]
    1aa4:	stp	x27, x28, [sp, #80]
    1aa8:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1aac:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1ab0:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1ab4:	add	x3, x3, #0x0
    1ab8:	add	x1, x1, #0x0
    1abc:	add	x0, x0, #0x0
    1ac0:	mov	w2, #0x15b                 	// #347
    1ac4:	bl	0 <__assert_fail>
    1ac8:	add	w0, w5, w0
    1acc:	cmp	x3, #0x0
    1ad0:	and	w8, w2, w0
    1ad4:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    1ad8:	csel	x3, x3, x4, ne  // ne = any
    1adc:	add	w5, w5, #0x1
    1ae0:	lsl	x7, x8, #4
    1ae4:	and	w0, w2, w0
    1ae8:	add	x4, x6, x8, lsl #4
    1aec:	ldr	x7, [x6, x7]
    1af0:	cmp	x19, x7
    1af4:	b.ne	186c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8cc>  // b.any
    1af8:	str	w1, [x25, #96]
    1afc:	b	1534 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x594>
    1b00:	add	w4, w11, w4
    1b04:	cmp	x10, #0x0
    1b08:	and	w12, w5, w4
    1b0c:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    1b10:	csel	x10, x10, x9, ne  // ne = any
    1b14:	add	w11, w11, #0x1
    1b18:	lsl	x8, x12, #4
    1b1c:	and	w4, w5, w4
    1b20:	add	x9, x6, x12, lsl #4
    1b24:	ldr	x8, [x6, x8]
    1b28:	cmp	x2, x8
    1b2c:	b.eq	1678 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6d8>  // b.none
    1b30:	b	1928 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x988>
    1b34:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1b38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1b3c:	add	x3, x3, #0x0
    1b40:	b	1964 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9c4>
    1b44:	mov	x0, #0x0                   	// #0
    1b48:	str	x2, [x0]
    1b4c:	brk	#0x3e8

0000000000001b50 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>:
    1b50:	stp	x29, x30, [sp, #-400]!
    1b54:	mov	x29, sp
    1b58:	stp	x27, x28, [sp, #80]
    1b5c:	mov	x28, x0
    1b60:	add	x0, sp, #0x100
    1b64:	str	x0, [sp, #240]
    1b68:	add	x1, sp, #0xf0
    1b6c:	ldr	x0, [x28, #72]
    1b70:	add	x2, sp, #0x140
    1b74:	stp	x1, x2, [sp, #104]
    1b78:	add	x1, sp, #0x150
    1b7c:	str	x1, [sp, #320]
    1b80:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1b84:	stp	x23, x24, [sp, #48]
    1b88:	ldr	d0, [x1]
    1b8c:	ldur	x24, [x0, #-24]
    1b90:	ldr	x0, [x0]
    1b94:	str	x0, [sp, #128]
    1b98:	str	d0, [sp, #248]
    1b9c:	str	d0, [sp, #328]
    1ba0:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1ba4:	str	w0, [sp, #144]
    1ba8:	ldrb	w1, [x24, #16]
    1bac:	cmp	w1, #0x10
    1bb0:	b.hi	1bc8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x78>  // b.pmore
    1bb4:	ldr	w0, [sp, #144]
    1bb8:	ldp	x23, x24, [sp, #48]
    1bbc:	ldp	x27, x28, [sp, #80]
    1bc0:	ldp	x29, x30, [sp], #400
    1bc4:	ret
    1bc8:	ldr	x0, [x24]
    1bcc:	stp	x19, x20, [sp, #16]
    1bd0:	add	x19, x28, #0x50
    1bd4:	stp	x21, x22, [sp, #32]
    1bd8:	stp	x25, x26, [sp, #64]
    1bdc:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1be0:	mov	w1, #0x1                   	// #1
    1be4:	str	x24, [sp, #256]
    1be8:	str	w0, [sp, #148]
    1bec:	ldrb	w0, [x24, #16]
    1bf0:	str	w1, [sp, #248]
    1bf4:	cmp	w0, #0x17
    1bf8:	b.ls	2d14 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11c4>  // b.plast
    1bfc:	add	x21, sp, #0xd0
    1c00:	mov	x0, x19
    1c04:	mov	x1, x21
    1c08:	str	x24, [sp, #208]
    1c0c:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1c10:	ldr	w1, [sp, #144]
    1c14:	str	w1, [x0]
    1c18:	ldr	w0, [sp, #248]
    1c1c:	cbz	w0, 206c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x51c>
    1c20:	add	x22, sp, #0xb8
    1c24:	mov	x20, #0xfffffffffffffff8    	// #-8
    1c28:	str	x24, [sp, #152]
    1c2c:	nop
    1c30:	ldr	x2, [sp, #240]
    1c34:	add	x1, x20, w0, uxtw #3
    1c38:	mov	w3, w0
    1c3c:	ldr	x23, [x2, x1]
    1c40:	cbz	x23, 2d04 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11b4>
    1c44:	ldrb	w1, [x23, #16]
    1c48:	cmp	w1, #0x10
    1c4c:	b.ls	2168 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x618>  // b.plast
    1c50:	cmp	w1, #0x17
    1c54:	b.ls	2d14 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11c4>  // b.plast
    1c58:	ldr	w1, [x28, #104]
    1c5c:	ldr	x3, [x28, #88]
    1c60:	cbz	w1, 259c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa4c>
    1c64:	cmn	x23, #0x10
    1c68:	ccmn	x23, #0x8, #0x4, ne  // ne = any
    1c6c:	b.eq	2cd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1184>  // b.none
    1c70:	lsr	w25, w23, #9
    1c74:	sub	w2, w1, #0x1
    1c78:	eor	w25, w25, w23, lsr #4
    1c7c:	mov	w7, #0x1                   	// #1
    1c80:	and	w5, w25, w2
    1c84:	mov	x27, #0x0                   	// #0
    1c88:	lsl	w0, w5, #4
    1c8c:	add	x6, x3, x0
    1c90:	ldr	x0, [x3, x0]
    1c94:	cmp	x23, x0
    1c98:	b.ne	1f7c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x42c>  // b.any
    1c9c:	ldr	w25, [x6, #8]
    1ca0:	ldr	x0, [x28, #112]
    1ca4:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1ca8:	add	x2, x21, #0x10
    1cac:	mov	w3, #0x18                  	// #24
    1cb0:	ldr	d0, [x1]
    1cb4:	mov	x1, x21
    1cb8:	umaddl	x25, w25, w3, x0
    1cbc:	mov	x0, x23
    1cc0:	str	x2, [sp, #208]
    1cc4:	str	d0, [sp, #216]
    1cc8:	bl	a0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
    1ccc:	ldr	w1, [sp, #328]
    1cd0:	cbz	w1, 1cec <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x19c>
    1cd4:	ldr	x2, [sp, #320]
    1cd8:	add	x0, x20, w1, uxtw #3
    1cdc:	mov	w3, w1
    1ce0:	ldr	x0, [x2, x0]
    1ce4:	cmp	x23, x0
    1ce8:	b.eq	24d4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x984>  // b.none
    1cec:	ldr	w0, [sp, #332]
    1cf0:	cmp	w1, w0
    1cf4:	b.cs	22ac <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x75c>  // b.hs, b.nlast
    1cf8:	ldr	x0, [sp, #320]
    1cfc:	str	x23, [x0, w1, uxtw #3]
    1d00:	ldr	w0, [sp, #328]
    1d04:	ldr	w2, [sp, #332]
    1d08:	mov	w1, w0
    1d0c:	add	x1, x1, #0x1
    1d10:	cmp	x1, x2
    1d14:	b.hi	2ce4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1194>  // b.pmore
    1d18:	ldp	w26, w1, [x25, #8]
    1d1c:	add	w0, w0, #0x1
    1d20:	ldr	x2, [sp, #208]
    1d24:	cmp	w26, w1
    1d28:	csel	w1, w26, w1, hi  // hi = pmore
    1d2c:	str	w1, [x25, #12]
    1d30:	str	w0, [sp, #328]
    1d34:	ldr	w4, [sp, #216]
    1d38:	add	x27, x2, x4, lsl #3
    1d3c:	cmp	x2, x27
    1d40:	b.eq	204c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4fc>  // b.none
    1d44:	mov	x4, x21
    1d48:	mov	x25, x2
    1d4c:	mov	x21, x19
    1d50:	mov	w24, #0x18                  	// #24
    1d54:	mov	w19, w26
    1d58:	b	1e34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2e4>
    1d5c:	cmn	x23, #0x10
    1d60:	ccmn	x23, #0x8, #0x4, ne  // ne = any
    1d64:	b.eq	2bd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1084>  // b.none
    1d68:	lsr	w0, w23, #9
    1d6c:	sub	w3, w2, #0x1
    1d70:	eor	w0, w0, w23, lsr #4
    1d74:	and	w0, w0, w3
    1d78:	lsl	w1, w0, #4
    1d7c:	add	x5, x26, x1
    1d80:	ldr	x1, [x26, x1]
    1d84:	cmp	x23, x1
    1d88:	b.ne	2188 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x638>  // b.any
    1d8c:	ubfiz	x1, x2, #4, #32
    1d90:	add	x3, x26, x1
    1d94:	cmp	x5, x3
    1d98:	ldr	x7, [x21]
    1d9c:	b.eq	2dd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1284>  // b.none
    1da0:	ldr	w0, [x5, #8]
    1da4:	ldr	x5, [x28, #112]
    1da8:	umaddl	x0, w0, w24, x5
    1dac:	ldr	w0, [x0, #8]
    1db0:	cmp	w19, w0
    1db4:	b.ls	1e28 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2d8>  // b.plast
    1db8:	cmn	x23, #0x8
    1dbc:	ccmn	x23, #0x10, #0x4, ne  // ne = any
    1dc0:	b.eq	2cd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1184>  // b.none
    1dc4:	lsr	w5, w23, #9
    1dc8:	sub	w8, w2, #0x1
    1dcc:	eor	w5, w5, w23, lsr #4
    1dd0:	and	w9, w5, w8
    1dd4:	lsl	w0, w9, #4
    1dd8:	add	x10, x26, x0
    1ddc:	ldr	x0, [x26, x0]
    1de0:	cmp	x23, x0
    1de4:	b.ne	21c4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x674>  // b.any
    1de8:	ldr	w0, [x10, #8]
    1dec:	ldr	x3, [x28, #112]
    1df0:	umaddl	x0, w0, w24, x3
    1df4:	str	w19, [x0, #8]
    1df8:	ldp	w0, w1, [sp, #248]
    1dfc:	cmp	w0, w1
    1e00:	b.cs	21a0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x650>  // b.hs, b.nlast
    1e04:	ldr	x1, [sp, #240]
    1e08:	str	x23, [x1, w0, uxtw #3]
    1e0c:	ldp	w0, w2, [sp, #248]
    1e10:	mov	w1, w0
    1e14:	add	x1, x1, #0x1
    1e18:	cmp	x1, x2
    1e1c:	b.hi	2ce4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1194>  // b.pmore
    1e20:	add	w0, w0, #0x1
    1e24:	str	w0, [sp, #248]
    1e28:	add	x25, x25, #0x8
    1e2c:	cmp	x27, x25
    1e30:	b.eq	2040 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4f0>  // b.none
    1e34:	ldr	x23, [x25]
    1e38:	cbz	x23, 2b78 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1028>
    1e3c:	ldrb	w0, [x23, #16]
    1e40:	cmp	w0, #0x17
    1e44:	b.ls	1e28 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2d8>  // b.plast
    1e48:	ldr	w2, [x28, #104]
    1e4c:	ldr	x26, [x28, #88]
    1e50:	cbnz	w2, 1d5c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x20c>
    1e54:	mov	x3, x26
    1e58:	mov	x1, #0x0                   	// #0
    1e5c:	ldr	x7, [x21]
    1e60:	cbz	w19, 1e28 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2d8>
    1e64:	cbnz	w2, 1db8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x268>
    1e68:	add	x7, x7, #0x1
    1e6c:	mov	w0, #0x0                   	// #0
    1e70:	str	x7, [x28, #80]
    1e74:	sub	w0, w0, #0x1
    1e78:	mov	w2, #0x40                  	// #64
    1e7c:	str	x3, [sp, #120]
    1e80:	orr	x0, x0, x0, lsr #1
    1e84:	str	x1, [sp, #136]
    1e88:	str	x4, [sp, #160]
    1e8c:	orr	x0, x0, x0, lsr #2
    1e90:	orr	x0, x0, x0, lsr #4
    1e94:	orr	x0, x0, x0, lsr #8
    1e98:	orr	x0, x0, x0, lsr #16
    1e9c:	add	x0, x0, #0x1
    1ea0:	cmp	w0, w2
    1ea4:	csel	w0, w0, w2, cs  // cs = hs, nlast
    1ea8:	str	w0, [x28, #104]
    1eac:	ubfiz	x0, x0, #4, #32
    1eb0:	bl	0 <_Znwm>
    1eb4:	ldr	w2, [x28, #104]
    1eb8:	str	x0, [x28, #88]
    1ebc:	str	xzr, [x28, #96]
    1ec0:	sub	w5, w2, #0x1
    1ec4:	and	w5, w5, w2
    1ec8:	ldr	x3, [sp, #120]
    1ecc:	ldr	x1, [sp, #136]
    1ed0:	ldr	x4, [sp, #160]
    1ed4:	cbz	x26, 2984 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe34>
    1ed8:	cbnz	w5, 2db4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1264>
    1edc:	ubfiz	x5, x2, #4, #32
    1ee0:	mov	x2, x0
    1ee4:	add	x5, x0, x5
    1ee8:	cmp	x0, x5
    1eec:	b.eq	1efc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3ac>  // b.none
    1ef0:	str	x20, [x2], #16
    1ef4:	cmp	x5, x2
    1ef8:	b.ne	1ef0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3a0>  // b.any
    1efc:	cmp	x3, x26
    1f00:	mov	x2, x26
    1f04:	b.ne	1f18 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3c8>  // b.any
    1f08:	b	2440 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8f0>
    1f0c:	add	x2, x2, #0x10
    1f10:	cmp	x3, x2
    1f14:	b.eq	2440 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8f0>  // b.none
    1f18:	ldr	x10, [x2]
    1f1c:	cmn	x10, #0x8
    1f20:	ccmn	x10, #0x10, #0x4, ne  // ne = any
    1f24:	b.eq	1f0c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3bc>  // b.none
    1f28:	ldr	w6, [x28, #104]
    1f2c:	cbz	w6, 2df4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x12a4>
    1f30:	lsr	w5, w10, #9
    1f34:	sub	w6, w6, #0x1
    1f38:	eor	w5, w5, w10, lsr #4
    1f3c:	and	w5, w5, w6
    1f40:	lsl	w7, w5, #4
    1f44:	add	x8, x0, x7
    1f48:	ldr	x7, [x0, x7]
    1f4c:	cmp	x7, x10
    1f50:	b.ne	2924 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xdd4>  // b.any
    1f54:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1f58:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1f5c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1f60:	add	x3, x3, #0x0
    1f64:	add	x1, x1, #0x0
    1f68:	add	x0, x0, #0x0
    1f6c:	mov	w2, #0x17a                 	// #378
    1f70:	bl	0 <__assert_fail>
    1f74:	mov	x27, x6
    1f78:	mov	x6, x8
    1f7c:	cmn	x0, #0x8
    1f80:	b.ne	2ac4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf74>  // b.any
    1f84:	ldr	x7, [x28, #80]
    1f88:	lsl	w0, w1, #1
    1f8c:	ldr	w5, [x28, #96]
    1f90:	cmp	x27, #0x0
    1f94:	add	x7, x7, #0x1
    1f98:	str	x7, [x28, #80]
    1f9c:	add	w5, w5, #0x1
    1fa0:	add	w7, w0, w1
    1fa4:	csel	x27, x27, x6, ne  // ne = any
    1fa8:	cmp	w7, w5, lsl #2
    1fac:	b.ls	25ac <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa5c>  // b.plast
    1fb0:	ldr	w0, [x28, #100]
    1fb4:	sub	w0, w1, w0
    1fb8:	sub	w0, w0, w5
    1fbc:	cmp	w0, w1, lsr #3
    1fc0:	b.ls	26d8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb88>  // b.plast
    1fc4:	ldr	x0, [x27]
    1fc8:	str	w5, [x28, #96]
    1fcc:	cmn	x0, #0x8
    1fd0:	b.eq	1fe0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x490>  // b.none
    1fd4:	ldr	w0, [x28, #100]
    1fd8:	sub	w0, w0, #0x1
    1fdc:	str	w0, [x28, #100]
    1fe0:	add	x0, x28, #0x70
    1fe4:	ldp	x1, x2, [x0, #8]
    1fe8:	str	x23, [x27]
    1fec:	str	wzr, [x27, #8]
    1ff0:	str	x23, [sp, #208]
    1ff4:	str	xzr, [sp, #216]
    1ff8:	str	xzr, [sp, #224]
    1ffc:	cmp	x1, x2
    2000:	b.eq	258c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa3c>  // b.none
    2004:	ldp	x2, x3, [x21]
    2008:	stp	x2, x3, [x1]
    200c:	ldr	x3, [x21, #16]
    2010:	str	x3, [x1, #16]
    2014:	add	x2, x1, #0x18
    2018:	str	x2, [x0, #8]
    201c:	ldr	x0, [x28, #112]
    2020:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2024:	movk	x1, #0xaaab
    2028:	sub	x25, x2, x0
    202c:	asr	x25, x25, #3
    2030:	mul	x25, x25, x1
    2034:	sub	w25, w25, #0x1
    2038:	str	w25, [x27, #8]
    203c:	b	1ca4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x154>
    2040:	ldr	x27, [sp, #208]
    2044:	mov	x19, x21
    2048:	mov	x21, x4
    204c:	add	x0, x21, #0x10
    2050:	cmp	x27, x0
    2054:	b.eq	2060 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x510>  // b.none
    2058:	mov	x0, x27
    205c:	bl	0 <free>
    2060:	ldr	w0, [sp, #248]
    2064:	cbnz	w0, 1c30 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe0>
    2068:	ldr	x24, [sp, #152]
    206c:	ldrb	w0, [x24, #16]
    2070:	cmp	w0, #0x17
    2074:	b.ls	2d14 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11c4>  // b.plast
    2078:	ldr	w2, [x28, #104]
    207c:	ldr	x1, [x28, #88]
    2080:	cbz	w2, 27e8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc98>
    2084:	cmn	x24, #0x8
    2088:	ccmn	x24, #0x10, #0x4, ne  // ne = any
    208c:	b.eq	2bd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1084>  // b.none
    2090:	lsr	w0, w24, #9
    2094:	sub	w5, w2, #0x1
    2098:	eor	w0, w0, w24, lsr #4
    209c:	and	w0, w0, w5
    20a0:	lsl	w3, w0, #4
    20a4:	add	x4, x1, x3
    20a8:	ldr	x3, [x1, x3]
    20ac:	cmp	x24, x3
    20b0:	b.ne	2afc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xfac>  // b.any
    20b4:	ubfiz	x2, x2, #4, #32
    20b8:	add	x1, x1, x2
    20bc:	cmp	x4, x1
    20c0:	b.eq	27e8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc98>  // b.none
    20c4:	ldr	w0, [x4, #8]
    20c8:	mov	w2, #0x18                  	// #24
    20cc:	ldr	x1, [x28, #112]
    20d0:	umaddl	x0, w0, w2, x1
    20d4:	ldr	w2, [x0, #12]
    20d8:	ldr	w0, [sp, #144]
    20dc:	cmp	w0, w2
    20e0:	b.hi	29d8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe88>  // b.pmore
    20e4:	b.cs	26c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb70>  // b.hs, b.nlast
    20e8:	ldr	x1, [sp, #128]
    20ec:	ldr	w3, [sp, #148]
    20f0:	str	w3, [sp, #144]
    20f4:	ldrb	w0, [x1, #8]
    20f8:	cmp	w0, #0x10
    20fc:	b.eq	2118 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5c8>  // b.none
    2100:	ldr	x1, [x1]
    2104:	ldr	x0, [x28, #8]
    2108:	bl	0 <_ZNK4llvm10DataLayout23getSmallestLegalIntTypeERNS_11LLVMContextEj>
    210c:	cbz	x0, 2118 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5c8>
    2110:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2114:	str	w0, [sp, #144]
    2118:	ldr	x1, [sp, #112]
    211c:	ldr	x0, [sp, #320]
    2120:	add	x27, x1, #0x10
    2124:	cmp	x0, x27
    2128:	b.eq	2130 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5e0>  // b.none
    212c:	bl	0 <free>
    2130:	ldr	x1, [sp, #104]
    2134:	ldr	x0, [sp, #240]
    2138:	add	x25, x1, #0x10
    213c:	cmp	x0, x25
    2140:	b.eq	2da4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1254>  // b.none
    2144:	bl	0 <free>
    2148:	ldr	w0, [sp, #144]
    214c:	ldp	x19, x20, [sp, #16]
    2150:	ldp	x21, x22, [sp, #32]
    2154:	ldp	x23, x24, [sp, #48]
    2158:	ldp	x25, x26, [sp, #64]
    215c:	ldp	x27, x28, [sp, #80]
    2160:	ldp	x29, x30, [sp], #400
    2164:	ret
    2168:	ldr	w1, [sp, #252]
    216c:	sub	x3, x3, #0x1
    2170:	cmp	x3, x1
    2174:	b.hi	2ce4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1194>  // b.pmore
    2178:	sub	w0, w0, #0x1
    217c:	str	w0, [sp, #248]
    2180:	cbnz	w0, 1c30 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe0>
    2184:	b	2068 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x518>
    2188:	mov	w5, #0x1                   	// #1
    218c:	cmn	x1, #0x8
    2190:	b.ne	2958 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe08>  // b.any
    2194:	ubfiz	x1, x2, #4, #32
    2198:	add	x3, x26, x1
    219c:	b	1e5c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x30c>
    21a0:	ldr	x0, [sp, #104]
    21a4:	mov	x3, #0x8                   	// #8
    21a8:	mov	x2, #0x0                   	// #0
    21ac:	str	x4, [sp, #120]
    21b0:	add	x1, x0, #0x10
    21b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    21b8:	ldr	w0, [sp, #248]
    21bc:	ldr	x4, [sp, #120]
    21c0:	b	1e04 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2b4>
    21c4:	mov	w11, #0x1                   	// #1
    21c8:	mov	x6, #0x0                   	// #0
    21cc:	cmn	x0, #0x8
    21d0:	b.ne	2a00 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xeb0>  // b.any
    21d4:	ldr	w9, [x28, #96]
    21d8:	add	x7, x7, #0x1
    21dc:	lsl	w0, w2, #1
    21e0:	str	x7, [x28, #80]
    21e4:	add	w7, w9, #0x1
    21e8:	cmp	x6, #0x0
    21ec:	add	w9, w0, w2
    21f0:	csel	x6, x6, x10, ne  // ne = any
    21f4:	cmp	w9, w7, lsl #2
    21f8:	b.ls	1e74 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x324>  // b.plast
    21fc:	ldr	w0, [x28, #100]
    2200:	add	w0, w7, w0
    2204:	sub	w0, w2, w0
    2208:	cmp	w0, w2, lsr #3
    220c:	b.ls	22c8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x778>  // b.plast
    2210:	ldr	x0, [x6]
    2214:	str	w7, [x28, #96]
    2218:	cmn	x0, #0x8
    221c:	b.eq	222c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6dc>  // b.none
    2220:	ldr	w0, [x28, #100]
    2224:	sub	w0, w0, #0x1
    2228:	str	w0, [x28, #100]
    222c:	add	x0, x28, #0x70
    2230:	ldp	x1, x2, [x0, #8]
    2234:	str	x23, [x6]
    2238:	str	wzr, [x6, #8]
    223c:	str	x23, [sp, #184]
    2240:	str	xzr, [sp, #192]
    2244:	str	xzr, [sp, #200]
    2248:	cmp	x1, x2
    224c:	b.eq	228c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x73c>  // b.none
    2250:	ldp	x2, x3, [x22]
    2254:	stp	x2, x3, [x1]
    2258:	ldr	x3, [x22, #16]
    225c:	str	x3, [x1, #16]
    2260:	add	x2, x1, #0x18
    2264:	str	x2, [x0, #8]
    2268:	ldr	x3, [x28, #112]
    226c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2270:	movk	x0, #0xaaab
    2274:	sub	x1, x2, x3
    2278:	asr	x1, x1, #3
    227c:	mul	x1, x1, x0
    2280:	sub	w0, w1, #0x1
    2284:	str	w0, [x6, #8]
    2288:	b	1df0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2a0>
    228c:	mov	x2, x22
    2290:	str	x6, [sp, #120]
    2294:	str	x4, [sp, #136]
    2298:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    229c:	ldr	x2, [x28, #120]
    22a0:	ldr	x6, [sp, #120]
    22a4:	ldr	x4, [sp, #136]
    22a8:	b	2268 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x718>
    22ac:	ldr	x0, [sp, #112]
    22b0:	mov	x3, #0x8                   	// #8
    22b4:	mov	x2, #0x0                   	// #0
    22b8:	add	x1, x0, #0x10
    22bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    22c0:	ldr	w1, [sp, #328]
    22c4:	b	1cf8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1a8>
    22c8:	mov	w2, w8
    22cc:	lsr	w0, w8, #1
    22d0:	orr	x0, x0, x2
    22d4:	mov	w2, #0x40                  	// #64
    22d8:	str	x3, [sp, #120]
    22dc:	orr	x0, x0, x0, lsr #2
    22e0:	str	x1, [sp, #136]
    22e4:	str	w5, [sp, #160]
    22e8:	orr	x0, x0, x0, lsr #4
    22ec:	str	x4, [sp, #168]
    22f0:	orr	x0, x0, x0, lsr #8
    22f4:	orr	x0, x0, x0, lsr #16
    22f8:	add	x0, x0, #0x1
    22fc:	cmp	w0, w2
    2300:	csel	w0, w0, w2, cs  // cs = hs, nlast
    2304:	str	w0, [x28, #104]
    2308:	ubfiz	x0, x0, #4, #32
    230c:	bl	0 <_Znwm>
    2310:	ldr	w2, [x28, #104]
    2314:	str	x0, [x28, #88]
    2318:	str	xzr, [x28, #96]
    231c:	sub	w6, w2, #0x1
    2320:	ldr	w5, [sp, #160]
    2324:	and	w6, w6, w2
    2328:	ldr	x3, [sp, #120]
    232c:	ldr	x1, [sp, #136]
    2330:	ldr	x4, [sp, #168]
    2334:	cbz	x26, 29b0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe60>
    2338:	cbnz	w6, 2db4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1264>
    233c:	ubfiz	x6, x2, #4, #32
    2340:	mov	x2, x0
    2344:	add	x6, x0, x6
    2348:	cmp	x0, x6
    234c:	b.eq	235c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x80c>  // b.none
    2350:	str	x20, [x2], #16
    2354:	cmp	x6, x2
    2358:	b.ne	2350 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x800>  // b.any
    235c:	cmp	x3, x26
    2360:	mov	x2, x26
    2364:	b.ne	2378 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x828>  // b.any
    2368:	b	23f0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8a0>
    236c:	add	x2, x2, #0x10
    2370:	cmp	x3, x2
    2374:	b.eq	23f0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8a0>  // b.none
    2378:	ldr	x12, [x2]
    237c:	cmn	x12, #0x10
    2380:	ccmn	x12, #0x8, #0x4, ne  // ne = any
    2384:	b.eq	236c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x81c>  // b.none
    2388:	ldr	w7, [x28, #104]
    238c:	cbz	w7, 2e00 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x12b0>
    2390:	lsr	w6, w12, #9
    2394:	sub	w7, w7, #0x1
    2398:	eor	w6, w6, w12, lsr #4
    239c:	and	w6, w6, w7
    23a0:	lsl	w8, w6, #4
    23a4:	add	x9, x0, x8
    23a8:	ldr	x8, [x0, x8]
    23ac:	cmp	x12, x8
    23b0:	b.eq	1f54 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x404>  // b.none
    23b4:	mov	w11, #0x1                   	// #1
    23b8:	mov	x10, #0x0                   	// #0
    23bc:	cmn	x8, #0x8
    23c0:	b.ne	2b34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xfe4>  // b.any
    23c4:	cmp	x10, #0x0
    23c8:	ldr	w6, [x2, #8]
    23cc:	csel	x10, x10, x9, ne  // ne = any
    23d0:	add	x2, x2, #0x10
    23d4:	cmp	x3, x2
    23d8:	str	w6, [x10, #8]
    23dc:	str	x12, [x10]
    23e0:	ldr	w6, [x28, #96]
    23e4:	add	w6, w6, #0x1
    23e8:	str	w6, [x28, #96]
    23ec:	b.ne	2378 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x828>  // b.any
    23f0:	mov	x0, x26
    23f4:	str	w5, [sp, #120]
    23f8:	str	x4, [sp, #136]
    23fc:	bl	0 <_ZdlPvm>
    2400:	ldr	w2, [x28, #104]
    2404:	ldr	w5, [sp, #120]
    2408:	ldr	x0, [x28, #88]
    240c:	ldr	x4, [sp, #136]
    2410:	cbz	w2, 24b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x964>
    2414:	sub	w2, w2, #0x1
    2418:	ldr	w7, [x28, #96]
    241c:	and	w5, w5, w2
    2420:	add	w7, w7, #0x1
    2424:	lsl	w1, w5, #4
    2428:	add	x6, x0, x1
    242c:	ldr	x1, [x0, x1]
    2430:	cmp	x23, x1
    2434:	b.ne	2a5c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf0c>  // b.any
    2438:	str	w7, [x28, #96]
    243c:	b	2220 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6d0>
    2440:	mov	x0, x26
    2444:	str	x4, [sp, #120]
    2448:	bl	0 <_ZdlPvm>
    244c:	ldr	w2, [x28, #104]
    2450:	ldr	x0, [x28, #88]
    2454:	ldr	x4, [sp, #120]
    2458:	cbz	w2, 24b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x964>
    245c:	cmn	x23, #0x10
    2460:	ccmn	x23, #0x8, #0x4, ne  // ne = any
    2464:	b.eq	2cd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1184>  // b.none
    2468:	lsr	w1, w23, #9
    246c:	sub	w2, w2, #0x1
    2470:	eor	w1, w1, w23, lsr #4
    2474:	ldr	w7, [x28, #96]
    2478:	and	w1, w1, w2
    247c:	add	w7, w7, #0x1
    2480:	lsl	w3, w1, #4
    2484:	add	x6, x0, x3
    2488:	ldr	x3, [x0, x3]
    248c:	cmp	x23, x3
    2490:	b.eq	2438 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8e8>  // b.none
    2494:	mov	w8, #0x1                   	// #1
    2498:	mov	x5, #0x0                   	// #0
    249c:	cmn	x3, #0x8
    24a0:	b.ne	2c30 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10e0>  // b.any
    24a4:	cbz	x5, 2b70 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1020>
    24a8:	mov	x6, x5
    24ac:	ldr	x0, [x5]
    24b0:	b	2214 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6c4>
    24b4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    24b8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    24bc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    24c0:	add	x3, x3, #0x0
    24c4:	add	x1, x1, #0x0
    24c8:	add	x0, x0, #0x0
    24cc:	mov	w2, #0x22f                 	// #559
    24d0:	bl	0 <__assert_fail>
    24d4:	ldp	w0, w4, [sp, #248]
    24d8:	mov	w2, w0
    24dc:	sub	x2, x2, #0x1
    24e0:	cmp	x2, x4
    24e4:	b.hi	2ce4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1194>  // b.pmore
    24e8:	ldr	w2, [sp, #332]
    24ec:	sub	w0, w0, #0x1
    24f0:	str	w0, [sp, #248]
    24f4:	sub	x3, x3, #0x1
    24f8:	cmp	x3, x2
    24fc:	b.hi	2ce4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1194>  // b.pmore
    2500:	ldr	x0, [sp, #208]
    2504:	sub	w1, w1, #0x1
    2508:	ldr	w3, [sp, #216]
    250c:	str	w1, [sp, #328]
    2510:	mov	x23, x0
    2514:	add	x24, x0, x3, lsl #3
    2518:	cmp	x24, x0
    251c:	b.eq	2568 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa18>  // b.none
    2520:	ldr	x2, [x23]
    2524:	cbz	x2, 2b78 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1028>
    2528:	ldrb	w0, [x2, #16]
    252c:	cmp	w0, #0x17
    2530:	b.ls	257c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa2c>  // b.plast
    2534:	mov	x1, x22
    2538:	mov	x0, x19
    253c:	str	x2, [sp, #184]
    2540:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2544:	ldr	w2, [x25, #12]
    2548:	add	x23, x23, #0x8
    254c:	ldr	w0, [x0, #4]
    2550:	cmp	w2, w0
    2554:	csel	w2, w2, w0, cs  // cs = hs, nlast
    2558:	str	w2, [x25, #12]
    255c:	cmp	x24, x23
    2560:	b.ne	2520 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x9d0>  // b.any
    2564:	ldr	x0, [sp, #208]
    2568:	add	x1, x21, #0x10
    256c:	cmp	x0, x1
    2570:	b.eq	2060 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x510>  // b.none
    2574:	bl	0 <free>
    2578:	b	2060 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x510>
    257c:	add	x23, x23, #0x8
    2580:	cmp	x24, x23
    2584:	b.ne	2520 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x9d0>  // b.any
    2588:	b	2564 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa14>
    258c:	mov	x2, x21
    2590:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2594:	ldr	x2, [x28, #120]
    2598:	b	201c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4cc>
    259c:	ldr	x2, [x28, #80]
    25a0:	mov	w0, #0x0                   	// #0
    25a4:	add	x2, x2, #0x1
    25a8:	str	x2, [x28, #80]
    25ac:	sub	w0, w0, #0x1
    25b0:	mov	w2, #0x40                  	// #64
    25b4:	str	x3, [sp, #120]
    25b8:	orr	x0, x0, x0, lsr #1
    25bc:	str	w1, [sp, #136]
    25c0:	orr	x0, x0, x0, lsr #2
    25c4:	orr	x0, x0, x0, lsr #4
    25c8:	orr	x0, x0, x0, lsr #8
    25cc:	orr	x0, x0, x0, lsr #16
    25d0:	add	x0, x0, #0x1
    25d4:	cmp	w0, w2
    25d8:	csel	w0, w0, w2, cs  // cs = hs, nlast
    25dc:	str	w0, [x28, #104]
    25e0:	ubfiz	x0, x0, #4, #32
    25e4:	bl	0 <_Znwm>
    25e8:	ldr	x3, [sp, #120]
    25ec:	str	x0, [x28, #88]
    25f0:	ldr	w2, [x28, #104]
    25f4:	str	xzr, [x28, #96]
    25f8:	sub	w4, w2, #0x1
    25fc:	ldr	w1, [sp, #136]
    2600:	and	w4, w4, w2
    2604:	cbz	x3, 2a34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xee4>
    2608:	ubfiz	x1, x1, #4, #32
    260c:	add	x7, x3, x1
    2610:	cbnz	w4, 2db4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1264>
    2614:	ubfiz	x4, x2, #4, #32
    2618:	mov	x2, x0
    261c:	add	x4, x0, x4
    2620:	cmp	x0, x4
    2624:	b.eq	2634 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xae4>  // b.none
    2628:	str	x20, [x2], #16
    262c:	cmp	x4, x2
    2630:	b.ne	2628 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xad8>  // b.any
    2634:	cmp	x3, x7
    2638:	mov	x2, x3
    263c:	b.ne	2650 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb00>  // b.any
    2640:	b	2874 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd24>
    2644:	add	x2, x2, #0x10
    2648:	cmp	x7, x2
    264c:	b.eq	2874 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd24>  // b.none
    2650:	ldr	x5, [x2]
    2654:	cmn	x5, #0x10
    2658:	ccmn	x5, #0x8, #0x4, ne  // ne = any
    265c:	b.eq	2644 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xaf4>  // b.none
    2660:	ldr	w6, [x28, #104]
    2664:	cbz	w6, 2de8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1298>
    2668:	lsr	w4, w5, #9
    266c:	sub	w6, w6, #0x1
    2670:	eor	w4, w4, w5, lsr #4
    2674:	and	w4, w4, w6
    2678:	lsl	w8, w4, #4
    267c:	add	x9, x0, x8
    2680:	ldr	x8, [x0, x8]
    2684:	cmp	x5, x8
    2688:	b.eq	1f54 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x404>  // b.none
    268c:	mov	w11, #0x1                   	// #1
    2690:	mov	x10, #0x0                   	// #0
    2694:	cmn	x8, #0x8
    2698:	b.ne	2bfc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10ac>  // b.any
    269c:	cmp	x10, #0x0
    26a0:	ldr	w4, [x2, #8]
    26a4:	csel	x10, x10, x9, ne  // ne = any
    26a8:	str	w4, [x10, #8]
    26ac:	str	x5, [x10]
    26b0:	ldr	w4, [x28, #96]
    26b4:	add	w4, w4, #0x1
    26b8:	str	w4, [x28, #96]
    26bc:	b	2644 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xaf4>
    26c0:	mov	w0, #0x1                   	// #1
    26c4:	str	w0, [sp, #144]
    26c8:	cmp	w2, #0x1
    26cc:	b.eq	2118 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5c8>  // b.none
    26d0:	str	w2, [sp, #144]
    26d4:	b	27f0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xca0>
    26d8:	mov	w4, w2
    26dc:	lsr	w0, w2, #1
    26e0:	orr	x0, x0, x4
    26e4:	mov	w2, #0x40                  	// #64
    26e8:	str	x3, [sp, #120]
    26ec:	orr	x0, x0, x0, lsr #2
    26f0:	str	w1, [sp, #136]
    26f4:	orr	x0, x0, x0, lsr #4
    26f8:	orr	x0, x0, x0, lsr #8
    26fc:	orr	x0, x0, x0, lsr #16
    2700:	add	x0, x0, #0x1
    2704:	cmp	w0, w2
    2708:	csel	w0, w0, w2, cs  // cs = hs, nlast
    270c:	str	w0, [x28, #104]
    2710:	ubfiz	x0, x0, #4, #32
    2714:	bl	0 <_Znwm>
    2718:	ldr	x3, [sp, #120]
    271c:	str	x0, [x28, #88]
    2720:	ldr	w2, [x28, #104]
    2724:	str	xzr, [x28, #96]
    2728:	sub	w4, w2, #0x1
    272c:	ldr	w1, [sp, #136]
    2730:	and	w4, w4, w2
    2734:	cbz	x3, 2a9c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf4c>
    2738:	ubfiz	x1, x1, #4, #32
    273c:	add	x6, x3, x1
    2740:	cbnz	w4, 2db4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1264>
    2744:	ubfiz	x4, x2, #4, #32
    2748:	mov	x2, x0
    274c:	add	x4, x0, x4
    2750:	cmp	x0, x4
    2754:	b.eq	2764 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc14>  // b.none
    2758:	str	x20, [x2], #16
    275c:	cmp	x4, x2
    2760:	b.ne	2758 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc08>  // b.any
    2764:	mov	x2, x3
    2768:	b	2778 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc28>
    276c:	add	x2, x2, #0x10
    2770:	cmp	x6, x2
    2774:	b.eq	28c8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd78>  // b.none
    2778:	ldr	x7, [x2]
    277c:	cmn	x7, #0x10
    2780:	ccmn	x7, #0x8, #0x4, ne  // ne = any
    2784:	b.eq	276c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc1c>  // b.none
    2788:	ldr	w5, [x28, #104]
    278c:	cbz	w5, 2ddc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x128c>
    2790:	lsr	w4, w7, #9
    2794:	sub	w5, w5, #0x1
    2798:	eor	w4, w4, w7, lsr #4
    279c:	and	w4, w4, w5
    27a0:	lsl	w8, w4, #4
    27a4:	add	x9, x0, x8
    27a8:	ldr	x8, [x0, x8]
    27ac:	cmp	x7, x8
    27b0:	b.eq	1f54 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x404>  // b.none
    27b4:	mov	w11, #0x1                   	// #1
    27b8:	mov	x10, #0x0                   	// #0
    27bc:	cmn	x8, #0x8
    27c0:	b.ne	2ca0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1150>  // b.any
    27c4:	cmp	x10, #0x0
    27c8:	ldr	w4, [x2, #8]
    27cc:	csel	x10, x10, x9, ne  // ne = any
    27d0:	str	w4, [x10, #8]
    27d4:	str	x7, [x10]
    27d8:	ldr	w4, [x28, #96]
    27dc:	add	w4, w4, #0x1
    27e0:	str	w4, [x28, #96]
    27e4:	b	276c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc1c>
    27e8:	ldr	w0, [sp, #144]
    27ec:	cbnz	w0, 29d8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe88>
    27f0:	ldr	x1, [x28, #8]
    27f4:	ldr	x0, [x1, #32]
    27f8:	ldr	w2, [x1, #40]
    27fc:	add	x2, x0, x2
    2800:	cmp	x0, x2
    2804:	b.eq	2118 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5c8>  // b.none
    2808:	ldr	w4, [sp, #148]
    280c:	mov	x1, x0
    2810:	b	2820 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xcd0>
    2814:	add	x1, x1, #0x1
    2818:	cmp	x2, x1
    281c:	b.eq	29f8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xea8>  // b.none
    2820:	ldrb	w3, [x1]
    2824:	cmp	w4, w3
    2828:	b.ne	2814 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xcc4>  // b.any
    282c:	mov	w3, #0x1                   	// #1
    2830:	ldr	w4, [sp, #144]
    2834:	nop
    2838:	ldrb	w1, [x0]
    283c:	cmp	w4, w1
    2840:	b.eq	2118 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5c8>  // b.none
    2844:	add	x0, x0, #0x1
    2848:	cmp	x2, x0
    284c:	b.ne	2838 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xce8>  // b.any
    2850:	ldr	x0, [sp, #128]
    2854:	ldrb	w0, [x0, #8]
    2858:	cmp	w0, #0x10
    285c:	b.eq	2118 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5c8>  // b.none
    2860:	ldp	w0, w1, [sp, #144]
    2864:	cmp	w3, #0x0
    2868:	csel	w0, w0, w1, eq  // eq = none
    286c:	str	w0, [sp, #144]
    2870:	b	2118 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5c8>
    2874:	mov	x0, x3
    2878:	bl	0 <_ZdlPvm>
    287c:	ldr	w2, [x28, #104]
    2880:	ldr	x0, [x28, #88]
    2884:	cbz	w2, 24b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x964>
    2888:	cmn	x23, #0x8
    288c:	ccmn	x23, #0x10, #0x4, ne  // ne = any
    2890:	b.eq	2cd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1184>  // b.none
    2894:	lsr	w1, w23, #9
    2898:	sub	w2, w2, #0x1
    289c:	eor	w1, w1, w23, lsr #4
    28a0:	ldr	w5, [x28, #96]
    28a4:	and	w1, w1, w2
    28a8:	add	w5, w5, #0x1
    28ac:	lsl	w3, w1, #4
    28b0:	add	x27, x0, x3
    28b4:	ldr	x3, [x0, x3]
    28b8:	cmp	x23, x3
    28bc:	b.ne	2a7c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf2c>  // b.any
    28c0:	str	w5, [x28, #96]
    28c4:	b	1fd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x484>
    28c8:	mov	x0, x3
    28cc:	bl	0 <_ZdlPvm>
    28d0:	ldr	w2, [x28, #104]
    28d4:	ldr	x0, [x28, #88]
    28d8:	cbz	w2, 24b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x964>
    28dc:	sub	w2, w2, #0x1
    28e0:	ldr	w5, [x28, #96]
    28e4:	and	w25, w25, w2
    28e8:	add	w5, w5, #0x1
    28ec:	lsl	w1, w25, #4
    28f0:	add	x27, x0, x1
    28f4:	ldr	x1, [x0, x1]
    28f8:	cmp	x23, x1
    28fc:	b.eq	28c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd70>  // b.none
    2900:	mov	w4, w25
    2904:	mov	w6, #0x1                   	// #1
    2908:	mov	x3, #0x0                   	// #0
    290c:	cmn	x1, #0x8
    2910:	b.ne	2d6c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x121c>  // b.any
    2914:	cbz	x3, 2bf4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10a4>
    2918:	mov	x27, x3
    291c:	ldr	x0, [x3]
    2920:	b	1fc8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x478>
    2924:	mov	w11, #0x1                   	// #1
    2928:	mov	x9, #0x0                   	// #0
    292c:	cmn	x7, #0x8
    2930:	b.ne	2b98 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1048>  // b.any
    2934:	cmp	x9, #0x0
    2938:	ldr	w5, [x2, #8]
    293c:	csel	x9, x9, x8, ne  // ne = any
    2940:	str	w5, [x9, #8]
    2944:	str	x10, [x9]
    2948:	ldr	w5, [x28, #96]
    294c:	add	w5, w5, #0x1
    2950:	str	w5, [x28, #96]
    2954:	b	1f0c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3bc>
    2958:	add	w0, w5, w0
    295c:	add	w6, w5, #0x1
    2960:	and	w1, w3, w0
    2964:	and	w0, w3, w0
    2968:	lsl	x1, x1, #4
    296c:	add	x5, x26, x1
    2970:	ldr	x1, [x26, x1]
    2974:	cmp	x23, x1
    2978:	b.eq	1d8c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x23c>  // b.none
    297c:	mov	w5, w6
    2980:	b	218c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x63c>
    2984:	cbnz	w5, 2db4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1264>
    2988:	ubfiz	x3, x2, #4, #32
    298c:	add	x3, x0, x3
    2990:	cmp	x0, x3
    2994:	b.eq	2458 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x908>  // b.none
    2998:	mov	x1, x0
    299c:	nop
    29a0:	str	x20, [x1], #16
    29a4:	cmp	x3, x1
    29a8:	b.ne	29a0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe50>  // b.any
    29ac:	b	2458 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x908>
    29b0:	cbnz	w6, 2db4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1264>
    29b4:	ubfiz	x3, x2, #4, #32
    29b8:	add	x3, x0, x3
    29bc:	cmp	x0, x3
    29c0:	b.eq	2410 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8c0>  // b.none
    29c4:	mov	x1, x0
    29c8:	str	x20, [x1], #16
    29cc:	cmp	x3, x1
    29d0:	b.ne	29c8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe78>  // b.any
    29d4:	b	2410 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8c0>
    29d8:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    29dc:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    29e0:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    29e4:	add	x3, x3, #0x0
    29e8:	add	x1, x1, #0x0
    29ec:	add	x0, x0, #0x0
    29f0:	mov	w2, #0xca                  	// #202
    29f4:	bl	0 <__assert_fail>
    29f8:	mov	w3, #0x0                   	// #0
    29fc:	b	2830 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xce0>
    2a00:	add	w9, w11, w9
    2a04:	cmp	x6, #0x0
    2a08:	and	w12, w8, w9
    2a0c:	ccmn	x0, #0x10, #0x0, eq  // eq = none
    2a10:	csel	x6, x6, x10, ne  // ne = any
    2a14:	add	w11, w11, #0x1
    2a18:	lsl	x0, x12, #4
    2a1c:	and	w9, w8, w9
    2a20:	add	x10, x26, x0
    2a24:	ldr	x0, [x26, x0]
    2a28:	cmp	x23, x0
    2a2c:	b.eq	1de8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x298>  // b.none
    2a30:	b	21cc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x67c>
    2a34:	cbnz	w4, 2db4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1264>
    2a38:	ubfiz	x3, x2, #4, #32
    2a3c:	add	x3, x0, x3
    2a40:	cmp	x0, x3
    2a44:	b.eq	2884 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd34>  // b.none
    2a48:	mov	x1, x0
    2a4c:	str	x20, [x1], #16
    2a50:	cmp	x3, x1
    2a54:	b.ne	2a4c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xefc>  // b.any
    2a58:	b	2884 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd34>
    2a5c:	mov	w8, #0x1                   	// #1
    2a60:	mov	x3, #0x0                   	// #0
    2a64:	cmn	x1, #0x8
    2a68:	b.ne	2c68 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1118>  // b.any
    2a6c:	cbz	x3, 2b70 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1020>
    2a70:	mov	x6, x3
    2a74:	ldr	x0, [x3]
    2a78:	b	2214 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6c4>
    2a7c:	mov	w7, #0x1                   	// #1
    2a80:	mov	x6, #0x0                   	// #0
    2a84:	cmn	x3, #0x8
    2a88:	b.ne	2d34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11e4>  // b.any
    2a8c:	cbz	x6, 2bf4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10a4>
    2a90:	mov	x27, x6
    2a94:	ldr	x0, [x6]
    2a98:	b	1fc8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x478>
    2a9c:	cbnz	w4, 2db4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1264>
    2aa0:	ubfiz	x3, x2, #4, #32
    2aa4:	add	x3, x0, x3
    2aa8:	cmp	x0, x3
    2aac:	b.eq	28d8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd88>  // b.none
    2ab0:	mov	x1, x0
    2ab4:	str	x20, [x1], #16
    2ab8:	cmp	x3, x1
    2abc:	b.ne	2ab4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf64>  // b.any
    2ac0:	b	28d8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd88>
    2ac4:	add	w5, w5, w7
    2ac8:	cmp	x27, #0x0
    2acc:	and	w4, w2, w5
    2ad0:	ccmn	x0, #0x10, #0x0, eq  // eq = none
    2ad4:	csel	x6, x6, x27, eq  // eq = none
    2ad8:	add	w7, w7, #0x1
    2adc:	lsl	x0, x4, #4
    2ae0:	and	w5, w2, w5
    2ae4:	add	x8, x3, x0
    2ae8:	ldr	x0, [x3, x0]
    2aec:	cmp	x23, x0
    2af0:	b.ne	1f74 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x424>  // b.any
    2af4:	mov	x6, x8
    2af8:	b	1c9c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x14c>
    2afc:	mov	w4, #0x1                   	// #1
    2b00:	cmn	x3, #0x8
    2b04:	b.eq	27e8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc98>  // b.none
    2b08:	add	w0, w4, w0
    2b0c:	add	w4, w4, #0x1
    2b10:	and	w3, w5, w0
    2b14:	and	w0, w5, w0
    2b18:	lsl	x3, x3, #4
    2b1c:	add	x6, x1, x3
    2b20:	ldr	x3, [x1, x3]
    2b24:	cmp	x24, x3
    2b28:	b.ne	2b00 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xfb0>  // b.any
    2b2c:	mov	x4, x6
    2b30:	b	20b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x564>
    2b34:	add	w6, w6, w11
    2b38:	cmp	x10, #0x0
    2b3c:	and	w13, w7, w6
    2b40:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    2b44:	csel	x9, x9, x10, eq  // eq = none
    2b48:	add	w11, w11, #0x1
    2b4c:	lsl	x8, x13, #4
    2b50:	and	w6, w7, w6
    2b54:	add	x13, x0, x8
    2b58:	ldr	x8, [x0, x8]
    2b5c:	cmp	x12, x8
    2b60:	b.eq	1f54 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x404>  // b.none
    2b64:	mov	x10, x9
    2b68:	mov	x9, x13
    2b6c:	b	23bc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x86c>
    2b70:	str	w7, [x28, #96]
    2b74:	b	222c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6dc>
    2b78:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b7c:	add	x3, x3, #0x0
    2b80:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b84:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b88:	add	x1, x1, #0x0
    2b8c:	add	x0, x0, #0x0
    2b90:	mov	w2, #0x69                  	// #105
    2b94:	bl	0 <__assert_fail>
    2b98:	add	w5, w5, w11
    2b9c:	cmp	x9, #0x0
    2ba0:	and	w12, w6, w5
    2ba4:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    2ba8:	csel	x8, x8, x9, eq  // eq = none
    2bac:	add	w11, w11, #0x1
    2bb0:	lsl	x7, x12, #4
    2bb4:	and	w5, w6, w5
    2bb8:	add	x12, x0, x7
    2bbc:	ldr	x7, [x0, x7]
    2bc0:	cmp	x10, x7
    2bc4:	b.eq	1f54 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x404>  // b.none
    2bc8:	mov	x9, x8
    2bcc:	mov	x8, x12
    2bd0:	b	292c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xddc>
    2bd4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2bd8:	add	x3, x3, #0x0
    2bdc:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2be0:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2be4:	add	x1, x1, #0x0
    2be8:	add	x0, x0, #0x0
    2bec:	mov	w2, #0x250                 	// #592
    2bf0:	bl	0 <__assert_fail>
    2bf4:	str	w5, [x28, #96]
    2bf8:	b	1fe0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x490>
    2bfc:	add	w4, w11, w4
    2c00:	cmp	x10, #0x0
    2c04:	and	w12, w6, w4
    2c08:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    2c0c:	csel	x10, x10, x9, ne  // ne = any
    2c10:	add	w11, w11, #0x1
    2c14:	lsl	x8, x12, #4
    2c18:	and	w4, w6, w4
    2c1c:	add	x9, x0, x8
    2c20:	ldr	x8, [x0, x8]
    2c24:	cmp	x5, x8
    2c28:	b.eq	1f54 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x404>  // b.none
    2c2c:	b	2694 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb44>
    2c30:	add	w1, w8, w1
    2c34:	cmp	x5, #0x0
    2c38:	and	w9, w2, w1
    2c3c:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    2c40:	csel	x5, x5, x6, ne  // ne = any
    2c44:	add	w8, w8, #0x1
    2c48:	lsl	x3, x9, #4
    2c4c:	and	w1, w2, w1
    2c50:	add	x6, x0, x3
    2c54:	ldr	x3, [x0, x3]
    2c58:	cmp	x23, x3
    2c5c:	b.ne	249c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x94c>  // b.any
    2c60:	str	w7, [x28, #96]
    2c64:	b	2220 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6d0>
    2c68:	add	w5, w5, w8
    2c6c:	cmp	x3, #0x0
    2c70:	and	w9, w2, w5
    2c74:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    2c78:	csel	x3, x3, x6, ne  // ne = any
    2c7c:	add	w8, w8, #0x1
    2c80:	lsl	x1, x9, #4
    2c84:	and	w5, w2, w5
    2c88:	add	x6, x0, x1
    2c8c:	ldr	x1, [x0, x1]
    2c90:	cmp	x23, x1
    2c94:	b.ne	2a64 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf14>  // b.any
    2c98:	str	w7, [x28, #96]
    2c9c:	b	2220 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6d0>
    2ca0:	add	w4, w11, w4
    2ca4:	cmp	x10, #0x0
    2ca8:	and	w12, w5, w4
    2cac:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    2cb0:	csel	x10, x10, x9, ne  // ne = any
    2cb4:	add	w11, w11, #0x1
    2cb8:	lsl	x8, x12, #4
    2cbc:	and	w4, w5, w4
    2cc0:	add	x9, x0, x8
    2cc4:	ldr	x8, [x0, x8]
    2cc8:	cmp	x7, x8
    2ccc:	b.eq	1f54 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x404>  // b.none
    2cd0:	b	27bc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc6c>
    2cd4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2cd8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2cdc:	add	x3, x3, #0x0
    2ce0:	b	2be0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1090>
    2ce4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2ce8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2cec:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2cf0:	add	x3, x3, #0x0
    2cf4:	add	x1, x1, #0x0
    2cf8:	add	x0, x0, #0x0
    2cfc:	mov	w2, #0x43                  	// #67
    2d00:	bl	0 <__assert_fail>
    2d04:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2d08:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2d0c:	add	x3, x3, #0x0
    2d10:	b	2b84 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1034>
    2d14:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2d18:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2d1c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2d20:	add	x3, x3, #0x0
    2d24:	add	x1, x1, #0x0
    2d28:	add	x0, x0, #0x0
    2d2c:	mov	w2, #0x108                 	// #264
    2d30:	bl	0 <__assert_fail>
    2d34:	add	w1, w7, w1
    2d38:	cmp	x6, #0x0
    2d3c:	and	w4, w2, w1
    2d40:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    2d44:	csel	x6, x6, x27, ne  // ne = any
    2d48:	add	w7, w7, #0x1
    2d4c:	lsl	x3, x4, #4
    2d50:	and	w1, w2, w1
    2d54:	add	x27, x0, x3
    2d58:	ldr	x3, [x0, x3]
    2d5c:	cmp	x23, x3
    2d60:	b.ne	2a84 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf34>  // b.any
    2d64:	str	w5, [x28, #96]
    2d68:	b	1fd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x484>
    2d6c:	add	w4, w4, w6
    2d70:	cmp	x3, #0x0
    2d74:	and	w7, w2, w4
    2d78:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    2d7c:	csel	x3, x3, x27, ne  // ne = any
    2d80:	add	w6, w6, #0x1
    2d84:	lsl	x1, x7, #4
    2d88:	and	w4, w2, w4
    2d8c:	add	x27, x0, x1
    2d90:	ldr	x1, [x0, x1]
    2d94:	cmp	x23, x1
    2d98:	b.ne	290c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xdbc>  // b.any
    2d9c:	str	w5, [x28, #96]
    2da0:	b	1fd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x484>
    2da4:	ldp	x19, x20, [sp, #16]
    2da8:	ldp	x21, x22, [sp, #32]
    2dac:	ldp	x25, x26, [sp, #64]
    2db0:	b	1bb4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x64>
    2db4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2db8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2dbc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2dc0:	add	x3, x3, #0x0
    2dc4:	add	x1, x1, #0x0
    2dc8:	add	x0, x0, #0x0
    2dcc:	mov	w2, #0x15b                 	// #347
    2dd0:	bl	0 <__assert_fail>
    2dd4:	mov	w0, #0x0                   	// #0
    2dd8:	b	1db0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x260>
    2ddc:	mov	x0, #0x0                   	// #0
    2de0:	str	x7, [x0]
    2de4:	brk	#0x3e8
    2de8:	mov	x0, #0x0                   	// #0
    2dec:	str	x5, [x0]
    2df0:	brk	#0x3e8
    2df4:	mov	x0, #0x0                   	// #0
    2df8:	str	x10, [x0]
    2dfc:	brk	#0x3e8
    2e00:	mov	x0, #0x0                   	// #0
    2e04:	str	x12, [x0]
    2e08:	brk	#0x3e8
    2e0c:	nop

0000000000002e10 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv>:
    2e10:	stp	x29, x30, [sp, #-80]!
    2e14:	mov	x29, sp
    2e18:	stp	x19, x20, [sp, #16]
    2e1c:	mov	x20, x0
    2e20:	bl	fa0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv>
    2e24:	tst	w0, #0xff
    2e28:	b.eq	2f78 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x168>  // b.none
    2e2c:	stp	x23, x24, [sp, #48]
    2e30:	stp	x25, x26, [sp, #64]
    2e34:	ldp	x24, x26, [x20, #112]
    2e38:	stp	x21, x22, [sp, #32]
    2e3c:	cmp	x24, x26
    2e40:	b.eq	3038 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x228>  // b.none
    2e44:	mov	w22, #0x0                   	// #0
    2e48:	mov	w25, #0x18                  	// #24
    2e4c:	b	2e5c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x4c>
    2e50:	add	x24, x24, #0x18
    2e54:	cmp	x26, x24
    2e58:	b.eq	2fc0 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x1b0>  // b.none
    2e5c:	ldr	x21, [x24]
    2e60:	mov	x0, x21
    2e64:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2e68:	ldr	x0, [x21, #8]
    2e6c:	cbz	x0, 2e78 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x68>
    2e70:	ldr	x0, [x0, #8]
    2e74:	cbz	x0, 2e50 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x40>
    2e78:	ldrb	w23, [x21, #16]
    2e7c:	mov	x0, x21
    2e80:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2e84:	ldr	x19, [x21, #8]
    2e88:	sub	w23, w23, #0x3f
    2e8c:	and	w23, w23, #0xff
    2e90:	cbnz	x19, 2ee0 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xd0>
    2e94:	b	2e50 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x40>
    2e98:	cmn	x0, #0x8
    2e9c:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2ea0:	b.eq	3064 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x254>  // b.none
    2ea4:	lsr	w1, w0, #9
    2ea8:	sub	w5, w2, #0x1
    2eac:	eor	w1, w1, w0, lsr #4
    2eb0:	and	w1, w1, w5
    2eb4:	lsl	w4, w1, #4
    2eb8:	add	x6, x3, x4
    2ebc:	ldr	x4, [x3, x4]
    2ec0:	cmp	x0, x4
    2ec4:	b.ne	2f88 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x178>  // b.any
    2ec8:	ubfiz	x2, x2, #4, #32
    2ecc:	add	x2, x3, x2
    2ed0:	cmp	x6, x2
    2ed4:	b.eq	2f10 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x100>  // b.none
    2ed8:	ldr	x19, [x19, #8]
    2edc:	cbz	x19, 2e50 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x40>
    2ee0:	mov	x0, x19
    2ee4:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2ee8:	cbz	x0, 3018 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x208>
    2eec:	ldrb	w1, [x0, #16]
    2ef0:	cmp	w1, #0x17
    2ef4:	b.ls	2ed8 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xc8>  // b.plast
    2ef8:	ldr	x1, [x20, #72]
    2efc:	cmp	x1, x0
    2f00:	b.eq	2ed8 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xc8>  // b.none
    2f04:	ldr	w2, [x20, #104]
    2f08:	ldr	x3, [x20, #88]
    2f0c:	cbnz	w2, 2e98 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x88>
    2f10:	cmp	w23, #0x1
    2f14:	b.hi	2f6c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>  // b.pmore
    2f18:	ldr	w0, [x21, #20]
    2f1c:	ubfx	x0, x0, #0, #28
    2f20:	cbz	w0, 3084 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x274>
    2f24:	ldrb	w1, [x21, #23]
    2f28:	tbz	w1, #6, 2f50 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x140>
    2f2c:	ldur	x0, [x21, #-8]
    2f30:	ldr	x0, [x0]
    2f34:	ldr	x0, [x0]
    2f38:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2f3c:	cmp	w22, #0x0
    2f40:	ccmp	w0, w22, #0x4, ne  // ne = any
    2f44:	b.ne	2f6c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>  // b.any
    2f48:	mov	w22, w0
    2f4c:	b	2ed8 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xc8>
    2f50:	umsubl	x0, w0, w25, x21
    2f54:	ldr	x0, [x0]
    2f58:	ldr	x0, [x0]
    2f5c:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2f60:	cmp	w22, #0x0
    2f64:	ccmp	w0, w22, #0x4, ne  // ne = any
    2f68:	b.eq	2f48 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x138>  // b.none
    2f6c:	ldp	x21, x22, [sp, #32]
    2f70:	ldp	x23, x24, [sp, #48]
    2f74:	ldp	x25, x26, [sp, #64]
    2f78:	mov	x0, #0x0                   	// #0
    2f7c:	ldp	x19, x20, [sp, #16]
    2f80:	ldp	x29, x30, [sp], #80
    2f84:	ret
    2f88:	mov	w6, #0x1                   	// #1
    2f8c:	cmn	x4, #0x8
    2f90:	b.eq	2f10 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x100>  // b.none
    2f94:	add	w1, w6, w1
    2f98:	add	w7, w6, #0x1
    2f9c:	and	w4, w5, w1
    2fa0:	and	w1, w5, w1
    2fa4:	lsl	x4, x4, #4
    2fa8:	add	x6, x3, x4
    2fac:	ldr	x4, [x3, x4]
    2fb0:	cmp	x0, x4
    2fb4:	b.eq	2ec8 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xb8>  // b.none
    2fb8:	mov	w6, w7
    2fbc:	b	2f8c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x17c>
    2fc0:	ldr	x0, [x20, #72]
    2fc4:	ldur	x0, [x0, #-24]
    2fc8:	ldr	x0, [x0]
    2fcc:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2fd0:	mov	w21, w0
    2fd4:	mov	x0, x20
    2fd8:	bl	1b50 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>
    2fdc:	mov	w19, w0
    2fe0:	cmp	w21, w0
    2fe4:	b.ls	2f6c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>  // b.plast
    2fe8:	cmp	w22, #0x0
    2fec:	ccmp	w22, w0, #0x4, ne  // ne = any
    2ff0:	b.ne	2f6c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>  // b.any
    2ff4:	ldr	x0, [x20, #72]
    2ff8:	bl	0 <_ZNK4llvm5Value10getContextEv>
    2ffc:	mov	w1, w19
    3000:	ldp	x19, x20, [sp, #16]
    3004:	ldp	x21, x22, [sp, #32]
    3008:	ldp	x23, x24, [sp, #48]
    300c:	ldp	x25, x26, [sp, #64]
    3010:	ldp	x29, x30, [sp], #80
    3014:	b	0 <_ZN4llvm11IntegerType3getERNS_11LLVMContextEj>
    3018:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    301c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3020:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3024:	add	x3, x3, #0x0
    3028:	add	x1, x1, #0x0
    302c:	add	x0, x0, #0x0
    3030:	mov	w2, #0x69                  	// #105
    3034:	bl	0 <__assert_fail>
    3038:	ldr	x0, [x20, #72]
    303c:	ldur	x0, [x0, #-24]
    3040:	ldr	x0, [x0]
    3044:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    3048:	mov	w21, w0
    304c:	mov	x0, x20
    3050:	bl	1b50 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>
    3054:	mov	w19, w0
    3058:	cmp	w21, w0
    305c:	b.hi	2ff4 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x1e4>  // b.pmore
    3060:	b	2f6c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>
    3064:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3068:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    306c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3070:	add	x3, x3, #0x0
    3074:	add	x1, x1, #0x0
    3078:	add	x0, x0, #0x0
    307c:	mov	w2, #0x250                 	// #592
    3080:	bl	0 <__assert_fail>
    3084:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3088:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    308c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3090:	add	x3, x3, #0x0
    3094:	add	x1, x1, #0x0
    3098:	add	x0, x0, #0x0
    309c:	mov	w2, #0xaa                  	// #170
    30a0:	bl	0 <__assert_fail>
    30a4:	nop

00000000000030a8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE>:
    30a8:	stp	x29, x30, [sp, #-80]!
    30ac:	mov	x29, sp
    30b0:	str	x25, [sp, #64]
    30b4:	ldr	x25, [x1, #80]
    30b8:	stp	x19, x20, [sp, #16]
    30bc:	mov	x20, x0
    30c0:	stp	x21, x22, [sp, #32]
    30c4:	add	x21, x1, #0x48
    30c8:	add	x22, x0, #0x18
    30cc:	stp	x23, x24, [sp, #48]
    30d0:	cmp	x21, x25
    30d4:	add	x23, x0, #0x28
    30d8:	b.eq	31cc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x124>  // b.none
    30dc:	nop
    30e0:	ldr	x0, [x25]
    30e4:	tst	w0, #0x4
    30e8:	b.ne	33ac <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x304>  // b.any
    30ec:	ldr	x0, [x20, #16]
    30f0:	ldr	w1, [x0, #48]
    30f4:	ldr	x2, [x0, #32]
    30f8:	cbz	w1, 31c0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>
    30fc:	cmp	x25, #0x8
    3100:	sub	x3, x25, #0x18
    3104:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    3108:	b.eq	33bc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x314>  // b.none
    310c:	lsr	w0, w3, #9
    3110:	sub	w6, w1, #0x1
    3114:	eor	w0, w0, w3, lsr #4
    3118:	and	w0, w0, w6
    311c:	lsl	w5, w0, #4
    3120:	add	x4, x2, x5
    3124:	ldr	x5, [x2, x5]
    3128:	cmp	x3, x5
    312c:	b.ne	3260 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1b8>  // b.any
    3130:	ubfiz	x1, x1, #4, #32
    3134:	add	x1, x2, x1
    3138:	cmp	x4, x1
    313c:	b.eq	31c0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>  // b.none
    3140:	ldr	x0, [x4, #8]
    3144:	cbz	x0, 31c0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>
    3148:	ldr	x19, [x25, #24]
    314c:	add	x24, x25, #0x10
    3150:	cmp	x24, x19
    3154:	b.ne	3168 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xc0>  // b.any
    3158:	b	31c0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>
    315c:	ldr	x19, [x19, #8]
    3160:	cmp	x24, x19
    3164:	b.eq	31c0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>  // b.none
    3168:	ldr	x2, [x19]
    316c:	tst	w2, #0x4
    3170:	b.ne	3348 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2a0>  // b.any
    3174:	ldurb	w2, [x19, #-8]
    3178:	cmp	w2, #0x3e
    317c:	b.ne	315c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xb4>  // b.any
    3180:	ldp	w0, w1, [x20, #32]
    3184:	cmp	w0, w1
    3188:	b.cs	3244 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x19c>  // b.hs, b.nlast
    318c:	ldr	x1, [x20, #24]
    3190:	sub	x2, x19, #0x18
    3194:	str	x2, [x1, w0, uxtw #3]
    3198:	ldp	w2, w0, [x20, #32]
    319c:	mov	w3, w2
    31a0:	add	x3, x3, #0x1
    31a4:	cmp	x3, x0
    31a8:	b.hi	3380 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2d8>  // b.pmore
    31ac:	ldr	x19, [x19, #8]
    31b0:	add	w2, w2, #0x1
    31b4:	str	w2, [x20, #32]
    31b8:	cmp	x24, x19
    31bc:	b.ne	3168 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xc0>  // b.any
    31c0:	ldr	x25, [x25, #8]
    31c4:	cmp	x21, x25
    31c8:	b.ne	30e0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x38>  // b.any
    31cc:	adrp	x21, 0 <_ZN4llvm9DebugFlagE>
    31d0:	mov	w22, #0x0                   	// #0
    31d4:	mov	x19, #0xfffffffffffffff8    	// #-8
    31d8:	adrp	x23, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    31dc:	ldr	x21, [x21]
    31e0:	b	3220 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x178>
    31e4:	ldr	x3, [x20, #24]
    31e8:	add	x2, x19, w0, uxtw #3
    31ec:	ldr	w4, [x20, #36]
    31f0:	mov	w1, w0
    31f4:	sub	x1, x1, #0x1
    31f8:	cmp	x1, x4
    31fc:	ldr	x1, [x3, x2]
    3200:	b.hi	3380 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2d8>  // b.pmore
    3204:	sub	w0, w0, #0x1
    3208:	str	w0, [x20, #32]
    320c:	str	x1, [x20, #72]
    3210:	mov	x0, x20
    3214:	bl	2e10 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv>
    3218:	mov	x24, x0
    321c:	cbnz	x0, 3298 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1f0>
    3220:	ldr	w0, [x20, #32]
    3224:	cbnz	w0, 31e4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x13c>
    3228:	mov	w0, w22
    322c:	ldp	x19, x20, [sp, #16]
    3230:	ldp	x21, x22, [sp, #32]
    3234:	ldp	x23, x24, [sp, #48]
    3238:	ldr	x25, [sp, #64]
    323c:	ldp	x29, x30, [sp], #80
    3240:	ret
    3244:	mov	x0, x22
    3248:	mov	x1, x23
    324c:	mov	x3, #0x8                   	// #8
    3250:	mov	x2, #0x0                   	// #0
    3254:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3258:	ldr	w0, [x20, #32]
    325c:	b	318c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xe4>
    3260:	mov	w4, #0x1                   	// #1
    3264:	cmn	x5, #0x8
    3268:	b.eq	31c0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>  // b.none
    326c:	add	w0, w0, w4
    3270:	add	w7, w4, #0x1
    3274:	and	w5, w6, w0
    3278:	and	w0, w6, w0
    327c:	lsl	x5, x5, #4
    3280:	add	x4, x2, x5
    3284:	ldr	x5, [x2, x5]
    3288:	cmp	x3, x5
    328c:	b.eq	3130 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x88>  // b.none
    3290:	mov	w4, w7
    3294:	b	3264 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1bc>
    3298:	ldrb	w0, [x21]
    329c:	cbnz	w0, 32b4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x20c>
    32a0:	mov	x1, x24
    32a4:	mov	x0, x20
    32a8:	mov	w22, #0x1                   	// #1
    32ac:	bl	3f8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE>
    32b0:	b	3220 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x178>
    32b4:	add	x0, x23, #0x0
    32b8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    32bc:	tst	w0, #0xff
    32c0:	b.eq	32a0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1f8>  // b.none
    32c4:	bl	0 <_ZN4llvm4dbgsEv>
    32c8:	mov	x2, x0
    32cc:	ldp	x3, x1, [x0, #16]
    32d0:	sub	x3, x3, x1
    32d4:	cmp	x3, #0x43
    32d8:	b.ls	3368 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2c0>  // b.plast
    32dc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    32e0:	add	x0, x0, #0x0
    32e4:	ldp	x4, x5, [x0]
    32e8:	stp	x4, x5, [x1]
    32ec:	ldr	w3, [x0, #64]
    32f0:	ldp	x4, x5, [x0, #16]
    32f4:	stp	x4, x5, [x1, #16]
    32f8:	ldp	x4, x5, [x0, #32]
    32fc:	stp	x4, x5, [x1, #32]
    3300:	ldp	x4, x5, [x0, #48]
    3304:	stp	x4, x5, [x1, #48]
    3308:	str	w3, [x1, #64]
    330c:	ldr	x0, [x2, #24]
    3310:	add	x0, x0, #0x44
    3314:	str	x0, [x2, #24]
    3318:	ldr	x1, [x20, #72]
    331c:	mov	x0, x2
    3320:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    3324:	mov	x1, x0
    3328:	ldp	x3, x2, [x0, #16]
    332c:	cmp	x2, x3
    3330:	b.cs	33a0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2f8>  // b.hs, b.nlast
    3334:	add	x0, x2, #0x1
    3338:	str	x0, [x1, #24]
    333c:	mov	w0, #0xa                   	// #10
    3340:	strb	w0, [x2]
    3344:	b	32a0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1f8>
    3348:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    334c:	add	x3, x3, #0x0
    3350:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3354:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3358:	add	x1, x1, #0x0
    335c:	add	x0, x0, #0x0
    3360:	mov	w2, #0x8b                  	// #139
    3364:	bl	0 <__assert_fail>
    3368:	mov	x2, #0x44                  	// #68
    336c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3370:	add	x1, x1, #0x0
    3374:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3378:	mov	x2, x0
    337c:	b	3318 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x270>
    3380:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3384:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3388:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    338c:	add	x3, x3, #0x0
    3390:	add	x1, x1, #0x0
    3394:	add	x0, x0, #0x0
    3398:	mov	w2, #0x43                  	// #67
    339c:	bl	0 <__assert_fail>
    33a0:	mov	w1, #0xa                   	// #10
    33a4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    33a8:	b	32a0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1f8>
    33ac:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    33b0:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    33b4:	add	x3, x3, #0x0
    33b8:	b	3354 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2ac>
    33bc:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    33c0:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    33c4:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    33c8:	add	x3, x3, #0x0
    33cc:	add	x1, x1, #0x0
    33d0:	add	x0, x0, #0x0
    33d4:	mov	w2, #0x250                 	// #592
    33d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x3, #0xaaab
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	ldp	x24, x21, [x0]
  20:	stp	x19, x20, [sp, #16]
  24:	stp	x25, x26, [sp, #64]
  28:	mov	x25, x1
  2c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  30:	str	x27, [sp, #80]
  34:	movk	x1, #0x555, lsl #48
  38:	sub	x0, x21, x24
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	198 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x198>  // b.none
  4c:	mov	x26, x2
  50:	sub	x27, x25, x24
  54:	cbz	x0, 17c <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x17c>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x20, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	168 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x168>  // b.plast
  68:	mov	x0, x20
  6c:	bl	0 <_Znwm>
  70:	mov	x23, x0
  74:	add	x20, x0, x20
  78:	add	x19, x0, #0x18
  7c:	add	x0, x23, x27
  80:	cmp	x25, x24
  84:	ldp	x2, x3, [x26]
  88:	ldr	x1, [x26, #16]
  8c:	stp	x2, x3, [x0]
  90:	str	x1, [x0, #16]
  94:	b.eq	f0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0xf0>  // b.none
  98:	mov	x3, x23
  9c:	mov	x2, x24
  a0:	ldp	x4, x5, [x2]
  a4:	stp	x4, x5, [x3]
  a8:	add	x2, x2, #0x18
  ac:	ldur	x4, [x2, #-8]
  b0:	str	x4, [x3, #16]
  b4:	cmp	x25, x2
  b8:	add	x3, x3, #0x18
  bc:	b.ne	a0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0xa0>  // b.any
  c0:	sub	x19, x25, #0x18
  c4:	mov	x0, #0xaaab                	// #43691
  c8:	sub	x19, x19, x24
  cc:	movk	x0, #0xaaaa, lsl #16
  d0:	movk	x0, #0xaaaa, lsl #32
  d4:	lsr	x19, x19, #3
  d8:	movk	x0, #0xaaa, lsl #48
  dc:	mul	x19, x19, x0
  e0:	and	x19, x19, #0x1fffffffffffffff
  e4:	add	x19, x19, #0x2
  e8:	add	x19, x19, x19, lsl #1
  ec:	add	x19, x23, x19, lsl #3
  f0:	cmp	x25, x21
  f4:	b.eq	138 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x138>  // b.none
  f8:	sub	x21, x21, x25
  fc:	mov	x3, #0xaaab                	// #43691
 100:	sub	x21, x21, #0x18
 104:	movk	x3, #0xaaaa, lsl #16
 108:	movk	x3, #0xaaaa, lsl #32
 10c:	mov	x0, x19
 110:	lsr	x2, x21, #3
 114:	movk	x3, #0xaaa, lsl #48
 118:	mov	x1, x25
 11c:	mul	x2, x2, x3
 120:	and	x2, x2, #0x1fffffffffffffff
 124:	add	x2, x2, #0x1
 128:	add	x2, x2, x2, lsl #1
 12c:	lsl	x2, x2, #3
 130:	add	x19, x19, x2
 134:	bl	0 <memcpy>
 138:	cbz	x24, 144 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x144>
 13c:	mov	x0, x24
 140:	bl	0 <_ZdlPv>
 144:	ldp	x25, x26, [sp, #64]
 148:	ldr	x27, [sp, #80]
 14c:	stp	x23, x19, [x22]
 150:	str	x20, [x22, #16]
 154:	ldp	x19, x20, [sp, #16]
 158:	ldp	x21, x22, [sp, #32]
 15c:	ldp	x23, x24, [sp, #48]
 160:	ldp	x29, x30, [sp], #96
 164:	ret
 168:	cbnz	x0, 184 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x184>
 16c:	mov	x19, #0x18                  	// #24
 170:	mov	x20, #0x0                   	// #0
 174:	mov	x23, #0x0                   	// #0
 178:	b	7c <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x7c>
 17c:	mov	x20, #0x18                  	// #24
 180:	b	68 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x68>
 184:	cmp	x0, x1
 188:	mov	x20, #0x18                  	// #24
 18c:	csel	x0, x0, x1, ls  // ls = plast
 190:	mul	x20, x0, x20
 194:	b	68 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x68>
 198:	adrp	x0, 0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_>
 19c:	add	x0, x0, #0x0
 1a0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_:

0000000000000000 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x25, x26, [sp, #64]
   c:	ldr	w25, [x0, #24]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x1
  20:	stp	x23, x24, [sp, #48]
  24:	ldr	x20, [x1]
  28:	ldr	x23, [x0, #8]
  2c:	cbz	w25, 170 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x170>
  30:	cmn	x20, #0x10
  34:	ccmn	x20, #0x8, #0x4, ne  // ne = any
  38:	b.eq	5a4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5a4>  // b.none
  3c:	lsr	w22, w20, #9
  40:	sub	w1, w25, #0x1
  44:	eor	w22, w22, w20, lsr #4
  48:	and	w2, w22, w1
  4c:	lsl	w0, w2, #4
  50:	add	x3, x23, x0
  54:	ldr	x24, [x23, x0]
  58:	cmp	x20, x24
  5c:	b.ne	8c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x8c>  // b.any
  60:	ldr	w0, [x3, #8]
  64:	ldr	x1, [x19, #32]
  68:	mov	w2, #0x18                  	// #24
  6c:	ldp	x19, x20, [sp, #16]
  70:	umaddl	x0, w0, w2, x1
  74:	ldp	x21, x22, [sp, #32]
  78:	add	x0, x0, #0x8
  7c:	ldp	x23, x24, [sp, #48]
  80:	ldp	x25, x26, [sp, #64]
  84:	ldp	x29, x30, [sp], #112
  88:	ret
  8c:	mov	w0, #0x1                   	// #1
  90:	mov	x26, #0x0                   	// #0
  94:	cmn	x24, #0x8
  98:	b.ne	4f0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x4f0>  // b.any
  9c:	ldr	x4, [x19]
  a0:	lsl	w0, w25, #1
  a4:	ldr	w2, [x19, #16]
  a8:	cmp	x26, #0x0
  ac:	add	x4, x4, #0x1
  b0:	str	x4, [x19]
  b4:	add	w2, w2, #0x1
  b8:	add	w4, w0, w25
  bc:	csel	x26, x26, x3, ne  // ne = any
  c0:	cmp	w4, w2, lsl #2
  c4:	b.ls	180 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x180>  // b.plast
  c8:	ldr	w0, [x19, #20]
  cc:	sub	w0, w25, w0
  d0:	sub	w0, w0, w2
  d4:	cmp	w0, w25, lsr #3
  d8:	b.ls	274 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x274>  // b.plast
  dc:	ldr	x0, [x26]
  e0:	str	w2, [x19, #16]
  e4:	cmn	x0, #0x8
  e8:	b.eq	f8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf8>  // b.none
  ec:	ldr	w0, [x19, #20]
  f0:	sub	w0, w0, #0x1
  f4:	str	w0, [x19, #20]
  f8:	ldr	x2, [x19, #48]
  fc:	str	x20, [x26]
 100:	str	wzr, [x26, #8]
 104:	add	x0, x19, #0x20
 108:	ldr	x1, [x21]
 10c:	str	x1, [sp, #88]
 110:	ldr	x1, [x0, #8]
 114:	str	xzr, [sp, #96]
 118:	str	xzr, [sp, #104]
 11c:	cmp	x1, x2
 120:	b.eq	160 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x160>  // b.none
 124:	ldp	x2, x3, [sp, #88]
 128:	stp	x2, x3, [x1]
 12c:	ldr	x3, [sp, #104]
 130:	str	x3, [x1, #16]
 134:	add	x2, x1, #0x18
 138:	str	x2, [x0, #8]
 13c:	ldr	x1, [x19, #32]
 140:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 144:	movk	x0, #0xaaab
 148:	sub	x2, x2, x1
 14c:	asr	x2, x2, #3
 150:	mul	x2, x2, x0
 154:	sub	w0, w2, #0x1
 158:	str	w0, [x26, #8]
 15c:	b	68 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x68>
 160:	add	x2, sp, #0x58
 164:	bl	0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 168:	ldr	x2, [x19, #40]
 16c:	b	13c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x13c>
 170:	ldr	x1, [x19]
 174:	mov	w0, #0x0                   	// #0
 178:	add	x1, x1, #0x1
 17c:	str	x1, [x19]
 180:	sub	w0, w0, #0x1
 184:	mov	w1, #0x40                  	// #64
 188:	orr	x0, x0, x0, lsr #1
 18c:	orr	x0, x0, x0, lsr #2
 190:	orr	x0, x0, x0, lsr #4
 194:	orr	x0, x0, x0, lsr #8
 198:	orr	x0, x0, x0, lsr #16
 19c:	add	x0, x0, #0x1
 1a0:	cmp	w0, w1
 1a4:	csel	w0, w0, w1, cs  // cs = hs, nlast
 1a8:	str	w0, [x19, #24]
 1ac:	ubfiz	x0, x0, #4, #32
 1b0:	bl	0 <_Znwm>
 1b4:	ldr	w3, [x19, #24]
 1b8:	str	x0, [x19, #8]
 1bc:	str	xzr, [x19, #16]
 1c0:	sub	w1, w3, #0x1
 1c4:	and	w2, w1, w3
 1c8:	cbz	x23, 498 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x498>
 1cc:	ubfiz	x1, x25, #4, #32
 1d0:	add	x9, x23, x1
 1d4:	cbnz	w2, 634 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x634>
 1d8:	ubfiz	x3, x3, #4, #32
 1dc:	mov	x2, x0
 1e0:	add	x3, x0, x3
 1e4:	mov	x4, #0xfffffffffffffff8    	// #-8
 1e8:	cmp	x0, x3
 1ec:	b.eq	1fc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1fc>  // b.none
 1f0:	str	x4, [x2], #16
 1f4:	cmp	x3, x2
 1f8:	b.ne	1f0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1f0>  // b.any
 1fc:	cmp	x23, x9
 200:	mov	x2, x23
 204:	b.ne	218 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x218>  // b.any
 208:	b	378 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x378>
 20c:	add	x2, x2, #0x10
 210:	cmp	x9, x2
 214:	b.eq	378 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x378>  // b.none
 218:	ldr	x3, [x2]
 21c:	cmn	x3, #0x8
 220:	ccmn	x3, #0x10, #0x4, ne  // ne = any
 224:	b.eq	20c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x20c>  // b.none
 228:	ldr	w5, [x19, #24]
 22c:	cbz	w5, 654 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x654>
 230:	lsr	w4, w3, #9
 234:	sub	w5, w5, #0x1
 238:	eor	w4, w4, w3, lsr #4
 23c:	and	w4, w4, w5
 240:	lsl	w6, w4, #4
 244:	add	x7, x0, x6
 248:	ldr	x6, [x0, x6]
 24c:	cmp	x3, x6
 250:	b.ne	464 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x464>  // b.any
 254:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 258:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 25c:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 260:	add	x3, x3, #0x0
 264:	add	x1, x1, #0x0
 268:	add	x0, x0, #0x0
 26c:	mov	w2, #0x17a                 	// #378
 270:	bl	0 <__assert_fail>
 274:	mov	w2, w1
 278:	lsr	w0, w1, #1
 27c:	orr	x0, x0, x2
 280:	mov	w1, #0x40                  	// #64
 284:	orr	x0, x0, x0, lsr #2
 288:	orr	x0, x0, x0, lsr #4
 28c:	orr	x0, x0, x0, lsr #8
 290:	orr	x0, x0, x0, lsr #16
 294:	add	x0, x0, #0x1
 298:	cmp	w0, w1
 29c:	csel	w0, w0, w1, cs  // cs = hs, nlast
 2a0:	str	w0, [x19, #24]
 2a4:	ubfiz	x0, x0, #4, #32
 2a8:	bl	0 <_Znwm>
 2ac:	ldr	w3, [x19, #24]
 2b0:	str	x0, [x19, #8]
 2b4:	str	xzr, [x19, #16]
 2b8:	sub	w1, w3, #0x1
 2bc:	and	w2, w1, w3
 2c0:	cbz	x23, 4c8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x4c8>
 2c4:	ubfiz	x1, x25, #4, #32
 2c8:	add	x9, x23, x1
 2cc:	cbnz	w2, 634 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x634>
 2d0:	ubfiz	x3, x3, #4, #32
 2d4:	mov	x2, x0
 2d8:	add	x3, x0, x3
 2dc:	cmp	x0, x3
 2e0:	b.eq	2f4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2f4>  // b.none
 2e4:	nop
 2e8:	str	x24, [x2], #16
 2ec:	cmp	x3, x2
 2f0:	b.ne	2e8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2e8>  // b.any
 2f4:	mov	x2, x23
 2f8:	b	308 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x308>
 2fc:	add	x2, x2, #0x10
 300:	cmp	x9, x2
 304:	b.eq	3ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3ec>  // b.none
 308:	ldr	x3, [x2]
 30c:	cmn	x3, #0x10
 310:	ccmn	x3, #0x8, #0x4, ne  // ne = any
 314:	b.eq	2fc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2fc>  // b.none
 318:	ldr	w5, [x19, #24]
 31c:	cbz	w5, 654 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x654>
 320:	lsr	w4, w3, #9
 324:	sub	w5, w5, #0x1
 328:	eor	w4, w4, w3, lsr #4
 32c:	and	w4, w4, w5
 330:	lsl	w6, w4, #4
 334:	add	x7, x0, x6
 338:	ldr	x6, [x0, x6]
 33c:	cmp	x3, x6
 340:	b.eq	254 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x254>  // b.none
 344:	mov	w10, #0x1                   	// #1
 348:	mov	x8, #0x0                   	// #0
 34c:	cmn	x6, #0x8
 350:	b.ne	568 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x568>  // b.any
 354:	cmp	x8, #0x0
 358:	ldr	w4, [x2, #8]
 35c:	csel	x8, x8, x7, ne  // ne = any
 360:	str	w4, [x8, #8]
 364:	str	x3, [x8]
 368:	ldr	w3, [x19, #16]
 36c:	add	w3, w3, #0x1
 370:	str	w3, [x19, #16]
 374:	b	2fc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2fc>
 378:	mov	x0, x23
 37c:	bl	0 <_ZdlPvm>
 380:	ldr	w3, [x19, #24]
 384:	ldr	x0, [x19, #8]
 388:	cbz	w3, 444 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x444>
 38c:	cmn	x20, #0x8
 390:	ccmn	x20, #0x10, #0x4, ne  // ne = any
 394:	b.eq	5a4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5a4>  // b.none
 398:	lsr	w1, w20, #9
 39c:	sub	w3, w3, #0x1
 3a0:	eor	w1, w1, w20, lsr #4
 3a4:	ldr	w2, [x19, #16]
 3a8:	and	w1, w1, w3
 3ac:	add	w2, w2, #0x1
 3b0:	lsl	w4, w1, #4
 3b4:	add	x26, x0, x4
 3b8:	ldr	x4, [x0, x4]
 3bc:	cmp	x20, x4
 3c0:	b.ne	3cc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3cc>  // b.any
 3c4:	str	w2, [x19, #16]
 3c8:	b	ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xec>
 3cc:	mov	w6, #0x1                   	// #1
 3d0:	mov	x5, #0x0                   	// #0
 3d4:	cmn	x4, #0x8
 3d8:	b.ne	5c4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5c4>  // b.any
 3dc:	cbz	x5, 524 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x524>
 3e0:	mov	x26, x5
 3e4:	ldr	x0, [x5]
 3e8:	b	e0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xe0>
 3ec:	mov	x0, x23
 3f0:	bl	0 <_ZdlPvm>
 3f4:	ldr	w3, [x19, #24]
 3f8:	ldr	x0, [x19, #8]
 3fc:	cbz	w3, 444 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x444>
 400:	sub	w3, w3, #0x1
 404:	ldr	w2, [x19, #16]
 408:	and	w22, w22, w3
 40c:	add	w2, w2, #0x1
 410:	lsl	w1, w22, #4
 414:	add	x26, x0, x1
 418:	ldr	x1, [x0, x1]
 41c:	cmp	x20, x1
 420:	b.eq	3c4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3c4>  // b.none
 424:	mov	w5, #0x1                   	// #1
 428:	mov	x4, #0x0                   	// #0
 42c:	cmn	x1, #0x8
 430:	b.ne	5fc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5fc>  // b.any
 434:	cbz	x4, 524 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x524>
 438:	mov	x26, x4
 43c:	ldr	x0, [x4]
 440:	b	e0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xe0>
 444:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 448:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 44c:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 450:	add	x3, x3, #0x0
 454:	add	x1, x1, #0x0
 458:	add	x0, x0, #0x0
 45c:	mov	w2, #0x22f                 	// #559
 460:	bl	0 <__assert_fail>
 464:	mov	w10, #0x1                   	// #1
 468:	mov	x8, #0x0                   	// #0
 46c:	cmn	x6, #0x8
 470:	b.ne	52c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x52c>  // b.any
 474:	cmp	x8, #0x0
 478:	ldr	w4, [x2, #8]
 47c:	csel	x8, x8, x7, ne  // ne = any
 480:	str	w4, [x8, #8]
 484:	str	x3, [x8]
 488:	ldr	w3, [x19, #16]
 48c:	add	w3, w3, #0x1
 490:	str	w3, [x19, #16]
 494:	b	20c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x20c>
 498:	cbnz	w2, 634 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x634>
 49c:	ubfiz	x2, x3, #4, #32
 4a0:	add	x2, x0, x2
 4a4:	cmp	x0, x2
 4a8:	b.eq	388 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x388>  // b.none
 4ac:	mov	x1, x0
 4b0:	mov	x4, #0xfffffffffffffff8    	// #-8
 4b4:	nop
 4b8:	str	x4, [x1], #16
 4bc:	cmp	x2, x1
 4c0:	b.ne	4b8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x4b8>  // b.any
 4c4:	b	388 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x388>
 4c8:	cbnz	w2, 634 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x634>
 4cc:	ubfiz	x2, x3, #4, #32
 4d0:	add	x2, x0, x2
 4d4:	cmp	x0, x2
 4d8:	b.eq	3fc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3fc>  // b.none
 4dc:	mov	x1, x0
 4e0:	str	x24, [x1], #16
 4e4:	cmp	x2, x1
 4e8:	b.ne	4e0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x4e0>  // b.any
 4ec:	b	3fc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3fc>
 4f0:	add	w2, w2, w0
 4f4:	cmp	x26, #0x0
 4f8:	and	w4, w1, w2
 4fc:	ccmn	x24, #0x10, #0x0, eq  // eq = none
 500:	csel	x26, x26, x3, ne  // ne = any
 504:	add	w0, w0, #0x1
 508:	lsl	x4, x4, #4
 50c:	and	w2, w1, w2
 510:	add	x3, x23, x4
 514:	ldr	x24, [x23, x4]
 518:	cmp	x20, x24
 51c:	b.eq	60 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x60>  // b.none
 520:	b	94 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x94>
 524:	str	w2, [x19, #16]
 528:	b	f8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf8>
 52c:	add	w4, w4, w10
 530:	cmp	x8, #0x0
 534:	and	w11, w5, w4
 538:	ccmn	x6, #0x10, #0x0, eq  // eq = none
 53c:	csel	x7, x7, x8, eq  // eq = none
 540:	add	w10, w10, #0x1
 544:	lsl	x6, x11, #4
 548:	and	w4, w5, w4
 54c:	add	x11, x0, x6
 550:	ldr	x6, [x0, x6]
 554:	cmp	x3, x6
 558:	b.eq	254 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x254>  // b.none
 55c:	mov	x8, x7
 560:	mov	x7, x11
 564:	b	46c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x46c>
 568:	add	w4, w10, w4
 56c:	cmp	x8, #0x0
 570:	and	w11, w5, w4
 574:	ccmn	x6, #0x10, #0x0, eq  // eq = none
 578:	csel	x7, x7, x8, eq  // eq = none
 57c:	add	w10, w10, #0x1
 580:	lsl	x6, x11, #4
 584:	and	w4, w5, w4
 588:	add	x11, x0, x6
 58c:	ldr	x6, [x0, x6]
 590:	cmp	x3, x6
 594:	b.eq	254 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x254>  // b.none
 598:	mov	x8, x7
 59c:	mov	x7, x11
 5a0:	b	34c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x34c>
 5a4:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 5a8:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 5ac:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 5b0:	add	x3, x3, #0x0
 5b4:	add	x1, x1, #0x0
 5b8:	add	x0, x0, #0x0
 5bc:	mov	w2, #0x250                 	// #592
 5c0:	bl	0 <__assert_fail>
 5c4:	add	w1, w1, w6
 5c8:	cmp	x5, #0x0
 5cc:	and	w7, w3, w1
 5d0:	ccmn	x4, #0x10, #0x0, eq  // eq = none
 5d4:	csel	x5, x5, x26, ne  // ne = any
 5d8:	add	w6, w6, #0x1
 5dc:	lsl	x4, x7, #4
 5e0:	and	w1, w3, w1
 5e4:	add	x26, x0, x7, lsl #4
 5e8:	ldr	x4, [x0, x4]
 5ec:	cmp	x20, x4
 5f0:	b.ne	3d4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3d4>  // b.any
 5f4:	str	w2, [x19, #16]
 5f8:	b	ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xec>
 5fc:	add	w22, w5, w22
 600:	cmp	x4, #0x0
 604:	and	w6, w3, w22
 608:	ccmn	x1, #0x10, #0x0, eq  // eq = none
 60c:	csel	x4, x4, x26, ne  // ne = any
 610:	add	w5, w5, #0x1
 614:	lsl	x1, x6, #4
 618:	and	w22, w3, w22
 61c:	add	x26, x0, x6, lsl #4
 620:	ldr	x1, [x0, x1]
 624:	cmp	x20, x1
 628:	b.ne	42c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x42c>  // b.any
 62c:	str	w2, [x19, #16]
 630:	b	ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xec>
 634:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 638:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 63c:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 640:	add	x3, x3, #0x0
 644:	add	x1, x1, #0x0
 648:	add	x0, x0, #0x0
 64c:	mov	w2, #0x15b                 	// #347
 650:	bl	0 <__assert_fail>
 654:	mov	x0, #0x0                   	// #0
 658:	str	x3, [x0]
 65c:	brk	#0x3e8
