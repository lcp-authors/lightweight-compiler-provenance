
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//preloadable_libintl.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001c38 <.init>:
    1c38:	stp	x29, x30, [sp, #-16]!
    1c3c:	mov	x29, sp
    1c40:	bl	2130 <libintl_ngettext@plt+0x10>
    1c44:	ldp	x29, x30, [sp], #16
    1c48:	ret

Disassembly of section .plt:

0000000000001c50 <memcpy@plt-0x20>:
    1c50:	stp	x16, x30, [sp, #-16]!
    1c54:	adrp	x16, 17000 <bind_textdomain_codeset@@Base+0x10004>
    1c58:	ldr	x17, [x16, #4088]
    1c5c:	add	x16, x16, #0xff8
    1c60:	br	x17
    1c64:	nop
    1c68:	nop
    1c6c:	nop

0000000000001c70 <memcpy@plt>:
    1c70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16]
    1c78:	add	x16, x16, #0x0
    1c7c:	br	x17

0000000000001c80 <libintl_dngettext@plt>:
    1c80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #8]
    1c88:	add	x16, x16, #0x8
    1c8c:	br	x17

0000000000001c90 <pthread_rwlockattr_init@plt>:
    1c90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #16]
    1c98:	add	x16, x16, #0x10
    1c9c:	br	x17

0000000000001ca0 <getcwd@plt>:
    1ca0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #24]
    1ca8:	add	x16, x16, #0x18
    1cac:	br	x17

0000000000001cb0 <strtoul@plt>:
    1cb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #32]
    1cb8:	add	x16, x16, #0x20
    1cbc:	br	x17

0000000000001cc0 <strlen@plt>:
    1cc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #40]
    1cc8:	add	x16, x16, #0x28
    1ccc:	br	x17

0000000000001cd0 <raise@plt>:
    1cd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #48]
    1cd8:	add	x16, x16, #0x30
    1cdc:	br	x17

0000000000001ce0 <pthread_mutexattr_settype@plt>:
    1ce0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #56]
    1ce8:	add	x16, x16, #0x38
    1cec:	br	x17

0000000000001cf0 <pthread_rwlock_rdlock@plt>:
    1cf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #64]
    1cf8:	add	x16, x16, #0x40
    1cfc:	br	x17

0000000000001d00 <getegid@plt>:
    1d00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #72]
    1d08:	add	x16, x16, #0x48
    1d0c:	br	x17

0000000000001d10 <geteuid@plt>:
    1d10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #80]
    1d18:	add	x16, x16, #0x50
    1d1c:	br	x17

0000000000001d20 <pthread_rwlock_init@plt>:
    1d20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #88]
    1d28:	add	x16, x16, #0x58
    1d2c:	br	x17

0000000000001d30 <pthread_rwlockattr_setkind_np@plt>:
    1d30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #96]
    1d38:	add	x16, x16, #0x60
    1d3c:	br	x17

0000000000001d40 <fgets_unlocked@plt>:
    1d40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #104]
    1d48:	add	x16, x16, #0x68
    1d4c:	br	x17

0000000000001d50 <__cxa_finalize@plt>:
    1d50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #112]
    1d58:	add	x16, x16, #0x70
    1d5c:	br	x17

0000000000001d60 <getuid@plt>:
    1d60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #120]
    1d68:	add	x16, x16, #0x78
    1d6c:	br	x17

0000000000001d70 <putc@plt>:
    1d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #128]
    1d78:	add	x16, x16, #0x80
    1d7c:	br	x17

0000000000001d80 <qsort@plt>:
    1d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #136]
    1d88:	add	x16, x16, #0x88
    1d8c:	br	x17

0000000000001d90 <libintl_textdomain@plt>:
    1d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #144]
    1d98:	add	x16, x16, #0x90
    1d9c:	br	x17

0000000000001da0 <libintl_dcgettext@plt>:
    1da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #152]
    1da8:	add	x16, x16, #0x98
    1dac:	br	x17

0000000000001db0 <__ctype_tolower_loc@plt>:
    1db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #160]
    1db8:	add	x16, x16, #0xa0
    1dbc:	br	x17

0000000000001dc0 <tfind@plt>:
    1dc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #168]
    1dc8:	add	x16, x16, #0xa8
    1dcc:	br	x17

0000000000001dd0 <stpcpy@plt>:
    1dd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #176]
    1dd8:	add	x16, x16, #0xb0
    1ddc:	br	x17

0000000000001de0 <fclose@plt>:
    1de0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #184]
    1de8:	add	x16, x16, #0xb8
    1dec:	br	x17

0000000000001df0 <nl_langinfo@plt>:
    1df0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #192]
    1df8:	add	x16, x16, #0xc0
    1dfc:	br	x17

0000000000001e00 <fopen@plt>:
    1e00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #200]
    1e08:	add	x16, x16, #0xc8
    1e0c:	br	x17

0000000000001e10 <malloc@plt>:
    1e10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #208]
    1e18:	add	x16, x16, #0xd0
    1e1c:	br	x17

0000000000001e20 <pthread_rwlock_destroy@plt>:
    1e20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #216]
    1e28:	add	x16, x16, #0xd8
    1e2c:	br	x17

0000000000001e30 <open@plt>:
    1e30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #224]
    1e38:	add	x16, x16, #0xe0
    1e3c:	br	x17

0000000000001e40 <strncmp@plt>:
    1e40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #232]
    1e48:	add	x16, x16, #0xe8
    1e4c:	br	x17

0000000000001e50 <_nl_expand_alias@plt>:
    1e50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #240]
    1e58:	add	x16, x16, #0xf0
    1e5c:	br	x17

0000000000001e60 <libintl_dcngettext@plt>:
    1e60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #248]
    1e68:	add	x16, x16, #0xf8
    1e6c:	br	x17

0000000000001e70 <tsearch@plt>:
    1e70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #256]
    1e78:	add	x16, x16, #0x100
    1e7c:	br	x17

0000000000001e80 <libintl_bind_textdomain_codeset@plt>:
    1e80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #264]
    1e88:	add	x16, x16, #0x108
    1e8c:	br	x17

0000000000001e90 <libintl_bindtextdomain@plt>:
    1e90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #272]
    1e98:	add	x16, x16, #0x110
    1e9c:	br	x17

0000000000001ea0 <calloc@plt>:
    1ea0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #280]
    1ea8:	add	x16, x16, #0x118
    1eac:	br	x17

0000000000001eb0 <argz_stringify@plt>:
    1eb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #288]
    1eb8:	add	x16, x16, #0x120
    1ebc:	br	x17

0000000000001ec0 <strcasecmp@plt>:
    1ec0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #296]
    1ec8:	add	x16, x16, #0x128
    1ecc:	br	x17

0000000000001ed0 <realloc@plt>:
    1ed0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #304]
    1ed8:	add	x16, x16, #0x130
    1edc:	br	x17

0000000000001ee0 <strdup@plt>:
    1ee0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #312]
    1ee8:	add	x16, x16, #0x138
    1eec:	br	x17

0000000000001ef0 <pthread_mutex_init@plt>:
    1ef0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #320]
    1ef8:	add	x16, x16, #0x140
    1efc:	br	x17

0000000000001f00 <close@plt>:
    1f00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #328]
    1f08:	add	x16, x16, #0x148
    1f0c:	br	x17

0000000000001f10 <__gmon_start__@plt>:
    1f10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #336]
    1f18:	add	x16, x16, #0x150
    1f1c:	br	x17

0000000000001f20 <abort@plt>:
    1f20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #344]
    1f28:	add	x16, x16, #0x158
    1f2c:	br	x17

0000000000001f30 <pthread_rwlock_wrlock@plt>:
    1f30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #352]
    1f38:	add	x16, x16, #0x160
    1f3c:	br	x17

0000000000001f40 <dcgettext@plt>:
    1f40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #360]
    1f48:	add	x16, x16, #0x168
    1f4c:	br	x17

0000000000001f50 <argz_count@plt>:
    1f50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #368]
    1f58:	add	x16, x16, #0x170
    1f5c:	br	x17

0000000000001f60 <strcmp@plt>:
    1f60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #376]
    1f68:	add	x16, x16, #0x178
    1f6c:	br	x17

0000000000001f70 <iconv@plt>:
    1f70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #384]
    1f78:	add	x16, x16, #0x180
    1f7c:	br	x17

0000000000001f80 <__ctype_b_loc@plt>:
    1f80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #392]
    1f88:	add	x16, x16, #0x188
    1f8c:	br	x17

0000000000001f90 <mmap@plt>:
    1f90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #400]
    1f98:	add	x16, x16, #0x190
    1f9c:	br	x17

0000000000001fa0 <uselocale@plt>:
    1fa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #408]
    1fa8:	add	x16, x16, #0x198
    1fac:	br	x17

0000000000001fb0 <free@plt>:
    1fb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #416]
    1fb8:	add	x16, x16, #0x1a0
    1fbc:	br	x17

0000000000001fc0 <getgid@plt>:
    1fc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #424]
    1fc8:	add	x16, x16, #0x1a8
    1fcc:	br	x17

0000000000001fd0 <pthread_rwlock_unlock@plt>:
    1fd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #432]
    1fd8:	add	x16, x16, #0x1b0
    1fdc:	br	x17

0000000000001fe0 <libintl_dgettext@plt>:
    1fe0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #440]
    1fe8:	add	x16, x16, #0x1b8
    1fec:	br	x17

0000000000001ff0 <strchr@plt>:
    1ff0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #448]
    1ff8:	add	x16, x16, #0x1c0
    1ffc:	br	x17

0000000000002000 <fwrite@plt>:
    2000:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #456]
    2008:	add	x16, x16, #0x1c8
    200c:	br	x17

0000000000002010 <munmap@plt>:
    2010:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #464]
    2018:	add	x16, x16, #0x1d0
    201c:	br	x17

0000000000002020 <strcpy@plt>:
    2020:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2024:	ldr	x17, [x16, #472]
    2028:	add	x16, x16, #0x1d8
    202c:	br	x17

0000000000002030 <iconv_open@plt>:
    2030:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2034:	ldr	x17, [x16, #480]
    2038:	add	x16, x16, #0x1e0
    203c:	br	x17

0000000000002040 <read@plt>:
    2040:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2044:	ldr	x17, [x16, #488]
    2048:	add	x16, x16, #0x1e8
    204c:	br	x17

0000000000002050 <pthread_mutexattr_init@plt>:
    2050:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2054:	ldr	x17, [x16, #496]
    2058:	add	x16, x16, #0x1f0
    205c:	br	x17

0000000000002060 <__fxstat@plt>:
    2060:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2064:	ldr	x17, [x16, #504]
    2068:	add	x16, x16, #0x1f8
    206c:	br	x17

0000000000002070 <pthread_mutexattr_destroy@plt>:
    2070:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2074:	ldr	x17, [x16, #512]
    2078:	add	x16, x16, #0x200
    207c:	br	x17

0000000000002080 <strstr@plt>:
    2080:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2084:	ldr	x17, [x16, #520]
    2088:	add	x16, x16, #0x208
    208c:	br	x17

0000000000002090 <pthread_rwlockattr_destroy@plt>:
    2090:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2094:	ldr	x17, [x16, #528]
    2098:	add	x16, x16, #0x210
    209c:	br	x17

00000000000020a0 <__fsetlocking@plt>:
    20a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16, #536]
    20a8:	add	x16, x16, #0x218
    20ac:	br	x17

00000000000020b0 <strcspn@plt>:
    20b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #544]
    20b8:	add	x16, x16, #0x220
    20bc:	br	x17

00000000000020c0 <__errno_location@plt>:
    20c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #552]
    20c8:	add	x16, x16, #0x228
    20cc:	br	x17

00000000000020d0 <getenv@plt>:
    20d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #560]
    20d8:	add	x16, x16, #0x230
    20dc:	br	x17

00000000000020e0 <pthread_mutex_lock@plt>:
    20e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #568]
    20e8:	add	x16, x16, #0x238
    20ec:	br	x17

00000000000020f0 <pthread_mutex_unlock@plt>:
    20f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #576]
    20f8:	add	x16, x16, #0x240
    20fc:	br	x17

0000000000002100 <libintl_gettext@plt>:
    2100:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #584]
    2108:	add	x16, x16, #0x248
    210c:	br	x17

0000000000002110 <setlocale@plt>:
    2110:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #592]
    2118:	add	x16, x16, #0x250
    211c:	br	x17

0000000000002120 <libintl_ngettext@plt>:
    2120:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #600]
    2128:	add	x16, x16, #0x258
    212c:	br	x17

Disassembly of section .text:

0000000000002130 <libintl_bindtextdomain@@Base-0xd4>:
    2130:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2134:	ldr	x0, [x0, #4016]
    2138:	cbz	x0, 2140 <libintl_ngettext@plt+0x20>
    213c:	b	1f10 <__gmon_start__@plt>
    2140:	ret
    2144:	nop
    2148:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    214c:	add	x0, x0, #0x350
    2150:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x11004>
    2154:	add	x1, x1, #0x350
    2158:	cmp	x1, x0
    215c:	b.eq	2174 <libintl_ngettext@plt+0x54>  // b.none
    2160:	adrp	x1, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2164:	ldr	x1, [x1, #3984]
    2168:	cbz	x1, 2174 <libintl_ngettext@plt+0x54>
    216c:	mov	x16, x1
    2170:	br	x16
    2174:	ret
    2178:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    217c:	add	x0, x0, #0x350
    2180:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x11004>
    2184:	add	x1, x1, #0x350
    2188:	sub	x1, x1, x0
    218c:	lsr	x2, x1, #63
    2190:	add	x1, x2, x1, asr #3
    2194:	cmp	xzr, x1, asr #1
    2198:	asr	x1, x1, #1
    219c:	b.eq	21b4 <libintl_ngettext@plt+0x94>  // b.none
    21a0:	adrp	x2, 17000 <bind_textdomain_codeset@@Base+0x10004>
    21a4:	ldr	x2, [x2, #4056]
    21a8:	cbz	x2, 21b4 <libintl_ngettext@plt+0x94>
    21ac:	mov	x16, x2
    21b0:	br	x16
    21b4:	ret
    21b8:	stp	x29, x30, [sp, #-32]!
    21bc:	mov	x29, sp
    21c0:	str	x19, [sp, #16]
    21c4:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x11004>
    21c8:	ldrb	w0, [x19, #848]
    21cc:	cbnz	w0, 21f4 <libintl_ngettext@plt+0xd4>
    21d0:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x10004>
    21d4:	ldr	x0, [x0, #3992]
    21d8:	cbz	x0, 21e8 <libintl_ngettext@plt+0xc8>
    21dc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    21e0:	ldr	x0, [x0, #608]
    21e4:	bl	1d50 <__cxa_finalize@plt>
    21e8:	bl	2148 <libintl_ngettext@plt+0x28>
    21ec:	mov	w0, #0x1                   	// #1
    21f0:	strb	w0, [x19, #848]
    21f4:	ldr	x19, [sp, #16]
    21f8:	ldp	x29, x30, [sp], #32
    21fc:	ret
    2200:	b	2178 <libintl_ngettext@plt+0x58>

0000000000002204 <libintl_bindtextdomain@@Base>:
    2204:	sub	sp, sp, #0x20
    2208:	str	x1, [sp, #8]
    220c:	add	x1, sp, #0x8
    2210:	mov	x2, xzr
    2214:	stp	x29, x30, [sp, #16]
    2218:	add	x29, sp, #0x10
    221c:	bl	2230 <libintl_bindtextdomain@@Base+0x2c>
    2220:	ldr	x0, [sp, #8]
    2224:	ldp	x29, x30, [sp, #16]
    2228:	add	sp, sp, #0x20
    222c:	ret
    2230:	stp	x29, x30, [sp, #-96]!
    2234:	stp	x20, x19, [sp, #80]
    2238:	mov	x19, x2
    223c:	mov	x20, x1
    2240:	stp	x28, x27, [sp, #16]
    2244:	stp	x26, x25, [sp, #32]
    2248:	stp	x24, x23, [sp, #48]
    224c:	stp	x22, x21, [sp, #64]
    2250:	mov	x29, sp
    2254:	cbz	x0, 22d8 <libintl_bindtextdomain@@Base+0xd4>
    2258:	ldrb	w8, [x0]
    225c:	mov	x21, x0
    2260:	cbz	w8, 22d8 <libintl_bindtextdomain@@Base+0xd4>
    2264:	adrp	x25, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2268:	ldr	x25, [x25, #4064]
    226c:	cbz	x25, 2280 <libintl_bindtextdomain@@Base+0x7c>
    2270:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2274:	ldr	x0, [x0, #4048]
    2278:	bl	1f30 <pthread_rwlock_wrlock@plt>
    227c:	cbnz	w0, 2564 <libintl_bindtextdomain@@Base+0x360>
    2280:	adrp	x26, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2284:	ldr	x26, [x26, #4000]
    2288:	ldr	x22, [x26]
    228c:	cbz	x22, 22c0 <libintl_bindtextdomain@@Base+0xbc>
    2290:	add	x1, x22, #0x18
    2294:	mov	x0, x21
    2298:	bl	1f60 <strcmp@plt>
    229c:	cmp	w0, #0x0
    22a0:	cset	w8, eq  // eq = none
    22a4:	cset	w9, lt  // lt = tstop
    22a8:	csel	x10, xzr, x22, lt  // lt = tstop
    22ac:	csel	x24, x22, x10, eq  // eq = none
    22b0:	cmp	w9, w8
    22b4:	b.ne	22ec <libintl_bindtextdomain@@Base+0xe8>  // b.any
    22b8:	ldr	x22, [x24]
    22bc:	cbnz	x22, 2290 <libintl_bindtextdomain@@Base+0x8c>
    22c0:	cbz	x20, 2340 <libintl_bindtextdomain@@Base+0x13c>
    22c4:	ldr	x8, [x20]
    22c8:	mov	w27, wzr
    22cc:	cbnz	x8, 2350 <libintl_bindtextdomain@@Base+0x14c>
    22d0:	cbnz	x19, 2348 <libintl_bindtextdomain@@Base+0x144>
    22d4:	b	23cc <libintl_bindtextdomain@@Base+0x1c8>
    22d8:	cbz	x20, 22e0 <libintl_bindtextdomain@@Base+0xdc>
    22dc:	str	xzr, [x20]
    22e0:	cbz	x19, 2548 <libintl_bindtextdomain@@Base+0x344>
    22e4:	str	xzr, [x19]
    22e8:	b	2548 <libintl_bindtextdomain@@Base+0x344>
    22ec:	cbz	x24, 23c0 <libintl_bindtextdomain@@Base+0x1bc>
    22f0:	cbz	x20, 2480 <libintl_bindtextdomain@@Base+0x27c>
    22f4:	ldr	x23, [x20]
    22f8:	ldr	x21, [x24, #8]
    22fc:	cbz	x23, 2478 <libintl_bindtextdomain@@Base+0x274>
    2300:	mov	x0, x23
    2304:	mov	x1, x21
    2308:	bl	1f60 <strcmp@plt>
    230c:	cbz	w0, 2478 <libintl_bindtextdomain@@Base+0x274>
    2310:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2314:	ldr	x22, [x22, #4040]
    2318:	mov	x0, x23
    231c:	mov	x1, x22
    2320:	bl	1f60 <strcmp@plt>
    2324:	cbz	w0, 24b4 <libintl_bindtextdomain@@Base+0x2b0>
    2328:	mov	x0, x23
    232c:	bl	1ee0 <strdup@plt>
    2330:	mov	x21, x0
    2334:	cbz	x0, 2478 <libintl_bindtextdomain@@Base+0x274>
    2338:	ldr	x0, [x24, #8]
    233c:	b	24bc <libintl_bindtextdomain@@Base+0x2b8>
    2340:	mov	w27, #0x1                   	// #1
    2344:	cbz	x19, 23cc <libintl_bindtextdomain@@Base+0x1c8>
    2348:	ldr	x8, [x19]
    234c:	cbz	x8, 23cc <libintl_bindtextdomain@@Base+0x1c8>
    2350:	mov	x0, x21
    2354:	bl	1cc0 <strlen@plt>
    2358:	mov	x23, x0
    235c:	add	x0, x0, #0x19
    2360:	bl	1e10 <malloc@plt>
    2364:	cbz	x0, 24a0 <libintl_bindtextdomain@@Base+0x29c>
    2368:	mov	x22, x0
    236c:	add	x2, x23, #0x1
    2370:	add	x0, x0, #0x18
    2374:	mov	x1, x21
    2378:	bl	1c70 <memcpy@plt>
    237c:	adrp	x28, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2380:	ldr	x28, [x28, #4040]
    2384:	mov	x23, x28
    2388:	tbnz	w27, #0, 23ec <libintl_bindtextdomain@@Base+0x1e8>
    238c:	ldr	x24, [x20]
    2390:	cbz	x24, 23e0 <libintl_bindtextdomain@@Base+0x1dc>
    2394:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2398:	ldr	x23, [x23, #4040]
    239c:	mov	x0, x24
    23a0:	mov	x1, x23
    23a4:	bl	1f60 <strcmp@plt>
    23a8:	cbz	w0, 23e8 <libintl_bindtextdomain@@Base+0x1e4>
    23ac:	mov	x0, x24
    23b0:	bl	1ee0 <strdup@plt>
    23b4:	mov	x23, x0
    23b8:	cbnz	x0, 23e8 <libintl_bindtextdomain@@Base+0x1e4>
    23bc:	b	2498 <libintl_bindtextdomain@@Base+0x294>
    23c0:	cbnz	x20, 22c4 <libintl_bindtextdomain@@Base+0xc0>
    23c4:	mov	w27, #0x1                   	// #1
    23c8:	cbnz	x19, 2348 <libintl_bindtextdomain@@Base+0x144>
    23cc:	tbnz	w27, #0, 24a8 <libintl_bindtextdomain@@Base+0x2a4>
    23d0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    23d4:	ldr	x8, [x8, #4040]
    23d8:	str	x8, [x20]
    23dc:	b	24a8 <libintl_bindtextdomain@@Base+0x2a4>
    23e0:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x10004>
    23e4:	ldr	x23, [x23, #4040]
    23e8:	str	x23, [x20]
    23ec:	str	x23, [x22, #8]
    23f0:	cbz	x19, 2418 <libintl_bindtextdomain@@Base+0x214>
    23f4:	ldr	x0, [x19]
    23f8:	cbz	x0, 2404 <libintl_bindtextdomain@@Base+0x200>
    23fc:	bl	1ee0 <strdup@plt>
    2400:	cbz	x0, 2488 <libintl_bindtextdomain@@Base+0x284>
    2404:	str	x0, [x19]
    2408:	ldr	x19, [x26]
    240c:	str	x0, [x22, #16]
    2410:	cbnz	x19, 2428 <libintl_bindtextdomain@@Base+0x224>
    2414:	b	2438 <libintl_bindtextdomain@@Base+0x234>
    2418:	mov	x0, xzr
    241c:	ldr	x19, [x26]
    2420:	str	x0, [x22, #16]
    2424:	cbz	x19, 2438 <libintl_bindtextdomain@@Base+0x234>
    2428:	add	x1, x19, #0x18
    242c:	mov	x0, x21
    2430:	bl	1f60 <strcmp@plt>
    2434:	tbz	w0, #31, 244c <libintl_bindtextdomain@@Base+0x248>
    2438:	str	x19, [x22]
    243c:	adrp	x20, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2440:	ldr	x20, [x20, #4000]
    2444:	str	x22, [x20]
    2448:	b	2520 <libintl_bindtextdomain@@Base+0x31c>
    244c:	mov	x20, x19
    2450:	ldr	x19, [x19]
    2454:	cbz	x19, 246c <libintl_bindtextdomain@@Base+0x268>
    2458:	add	x1, x19, #0x18
    245c:	mov	x0, x21
    2460:	bl	1f60 <strcmp@plt>
    2464:	cmp	w0, #0x0
    2468:	b.gt	244c <libintl_bindtextdomain@@Base+0x248>
    246c:	str	x19, [x22]
    2470:	str	x22, [x20]
    2474:	b	2520 <libintl_bindtextdomain@@Base+0x31c>
    2478:	mov	w22, wzr
    247c:	b	24d0 <libintl_bindtextdomain@@Base+0x2cc>
    2480:	mov	w22, wzr
    2484:	b	24d4 <libintl_bindtextdomain@@Base+0x2d0>
    2488:	ldr	x0, [x22, #8]
    248c:	cmp	x0, x28
    2490:	b.eq	2498 <libintl_bindtextdomain@@Base+0x294>  // b.none
    2494:	bl	1fb0 <free@plt>
    2498:	mov	x0, x22
    249c:	bl	1fb0 <free@plt>
    24a0:	tbnz	w27, #0, 24a8 <libintl_bindtextdomain@@Base+0x2a4>
    24a4:	str	xzr, [x20]
    24a8:	cbz	x19, 2534 <libintl_bindtextdomain@@Base+0x330>
    24ac:	str	xzr, [x19]
    24b0:	b	2534 <libintl_bindtextdomain@@Base+0x330>
    24b4:	mov	x0, x21
    24b8:	mov	x21, x22
    24bc:	cmp	x0, x22
    24c0:	b.eq	24c8 <libintl_bindtextdomain@@Base+0x2c4>  // b.none
    24c4:	bl	1fb0 <free@plt>
    24c8:	mov	w22, #0x1                   	// #1
    24cc:	str	x21, [x24, #8]
    24d0:	str	x21, [x20]
    24d4:	cbz	x19, 251c <libintl_bindtextdomain@@Base+0x318>
    24d8:	ldr	x21, [x19]
    24dc:	ldr	x20, [x24, #16]
    24e0:	cbz	x21, 2518 <libintl_bindtextdomain@@Base+0x314>
    24e4:	cbz	x20, 24f8 <libintl_bindtextdomain@@Base+0x2f4>
    24e8:	mov	x0, x21
    24ec:	mov	x1, x20
    24f0:	bl	1f60 <strcmp@plt>
    24f4:	cbz	w0, 2518 <libintl_bindtextdomain@@Base+0x314>
    24f8:	mov	x0, x21
    24fc:	bl	1ee0 <strdup@plt>
    2500:	mov	x20, x0
    2504:	cbz	x0, 2518 <libintl_bindtextdomain@@Base+0x314>
    2508:	ldr	x0, [x24, #16]
    250c:	bl	1fb0 <free@plt>
    2510:	mov	w22, #0x1                   	// #1
    2514:	str	x20, [x24, #16]
    2518:	str	x20, [x19]
    251c:	cbz	w22, 2534 <libintl_bindtextdomain@@Base+0x330>
    2520:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    2524:	ldr	x8, [x8, #4032]
    2528:	ldr	w9, [x8]
    252c:	add	w9, w9, #0x1
    2530:	str	w9, [x8]
    2534:	cbz	x25, 2548 <libintl_bindtextdomain@@Base+0x344>
    2538:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x10004>
    253c:	ldr	x0, [x0, #4048]
    2540:	bl	1fd0 <pthread_rwlock_unlock@plt>
    2544:	cbnz	w0, 2564 <libintl_bindtextdomain@@Base+0x360>
    2548:	ldp	x20, x19, [sp, #80]
    254c:	ldp	x22, x21, [sp, #64]
    2550:	ldp	x24, x23, [sp, #48]
    2554:	ldp	x26, x25, [sp, #32]
    2558:	ldp	x28, x27, [sp, #16]
    255c:	ldp	x29, x30, [sp], #96
    2560:	ret
    2564:	bl	1f20 <abort@plt>

0000000000002568 <libintl_bind_textdomain_codeset@@Base>:
    2568:	sub	sp, sp, #0x20
    256c:	str	x1, [sp, #8]
    2570:	add	x2, sp, #0x8
    2574:	mov	x1, xzr
    2578:	stp	x29, x30, [sp, #16]
    257c:	add	x29, sp, #0x10
    2580:	bl	2230 <libintl_bindtextdomain@@Base+0x2c>
    2584:	ldr	x0, [sp, #8]
    2588:	ldp	x29, x30, [sp, #16]
    258c:	add	sp, sp, #0x20
    2590:	ret

0000000000002594 <libintl_dcgettext@@Base>:
    2594:	mov	w5, w2
    2598:	mov	x2, xzr
    259c:	mov	w3, wzr
    25a0:	mov	x4, xzr
    25a4:	b	4a5c <libintl_textdomain@@Base+0x8c0>

00000000000025a8 <libintl_dgettext@@Base>:
    25a8:	mov	w2, #0x5                   	// #5
    25ac:	b	1da0 <libintl_dcgettext@plt>

00000000000025b0 <libintl_gettext@@Base>:
    25b0:	mov	w2, #0x5                   	// #5
    25b4:	mov	x1, x0
    25b8:	mov	x0, xzr
    25bc:	b	1da0 <libintl_dcgettext@plt>
    25c0:	sub	sp, sp, #0x90
    25c4:	stp	x29, x30, [sp, #64]
    25c8:	stp	x26, x25, [sp, #80]
    25cc:	stp	x24, x23, [sp, #96]
    25d0:	stp	x22, x21, [sp, #112]
    25d4:	stp	x20, x19, [sp, #128]
    25d8:	adrp	x26, 17000 <bind_textdomain_codeset@@Base+0x10004>
    25dc:	ldr	x26, [x26, #4064]
    25e0:	mov	x19, x3
    25e4:	mov	x22, x2
    25e8:	mov	x20, x1
    25ec:	mov	x23, x0
    25f0:	add	x29, sp, #0x40
    25f4:	cbz	x26, 2674 <libintl_gettext@@Base+0xc4>
    25f8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    25fc:	add	x0, x0, #0x268
    2600:	bl	1cf0 <pthread_rwlock_rdlock@plt>
    2604:	cbnz	w0, 2848 <libintl_gettext@@Base+0x298>
    2608:	mov	x0, x23
    260c:	bl	1cc0 <strlen@plt>
    2610:	add	x2, x0, #0x1
    2614:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    2618:	add	x0, x0, #0x358
    261c:	mov	x1, x23
    2620:	mov	w3, wzr
    2624:	mov	x4, x20
    2628:	mov	x5, xzr
    262c:	mov	x6, xzr
    2630:	mov	x7, xzr
    2634:	str	wzr, [sp, #16]
    2638:	stp	xzr, x22, [sp]
    263c:	bl	42c4 <libintl_textdomain@@Base+0x128>
    2640:	mov	x21, x0
    2644:	cbz	x26, 2658 <libintl_gettext@@Base+0xa8>
    2648:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    264c:	add	x0, x0, #0x268
    2650:	bl	1fd0 <pthread_rwlock_unlock@plt>
    2654:	cbnz	w0, 2848 <libintl_gettext@@Base+0x298>
    2658:	cbz	x21, 26b4 <libintl_gettext@@Base+0x104>
    265c:	ldr	w8, [x21, #8]
    2660:	cmp	w8, #0x0
    2664:	b.le	27a0 <libintl_gettext@@Base+0x1f0>
    2668:	ldr	x8, [x21, #16]
    266c:	cbnz	x8, 27f0 <libintl_gettext@@Base+0x240>
    2670:	b	27b4 <libintl_gettext@@Base+0x204>
    2674:	mov	x0, x23
    2678:	bl	1cc0 <strlen@plt>
    267c:	add	x2, x0, #0x1
    2680:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    2684:	add	x0, x0, #0x358
    2688:	mov	x1, x23
    268c:	mov	w3, wzr
    2690:	mov	x4, x20
    2694:	mov	x5, xzr
    2698:	mov	x6, xzr
    269c:	mov	x7, xzr
    26a0:	str	wzr, [sp, #16]
    26a4:	stp	xzr, x22, [sp]
    26a8:	bl	42c4 <libintl_textdomain@@Base+0x128>
    26ac:	mov	x21, x0
    26b0:	cbnz	x21, 265c <libintl_gettext@@Base+0xac>
    26b4:	mov	x0, x20
    26b8:	bl	1e50 <_nl_expand_alias@plt>
    26bc:	mov	x24, x0
    26c0:	cbz	x0, 26d4 <libintl_gettext@@Base+0x124>
    26c4:	mov	x0, x24
    26c8:	bl	1ee0 <strdup@plt>
    26cc:	mov	x20, x0
    26d0:	cbz	x0, 27ec <libintl_gettext@@Base+0x23c>
    26d4:	sub	x1, x29, #0x8
    26d8:	sub	x2, x29, #0x10
    26dc:	sub	x3, x29, #0x18
    26e0:	add	x4, sp, #0x20
    26e4:	add	x5, sp, #0x18
    26e8:	mov	x0, x20
    26ec:	bl	4848 <libintl_textdomain@@Base+0x6ac>
    26f0:	cmn	w0, #0x1
    26f4:	b.eq	27ec <libintl_gettext@@Base+0x23c>  // b.none
    26f8:	mov	w25, w0
    26fc:	cbz	x26, 2710 <libintl_gettext@@Base+0x160>
    2700:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    2704:	add	x0, x0, #0x268
    2708:	bl	1f30 <pthread_rwlock_wrlock@plt>
    270c:	cbnz	w0, 2848 <libintl_gettext@@Base+0x298>
    2710:	mov	x0, x23
    2714:	bl	1cc0 <strlen@plt>
    2718:	ldp	x8, x4, [x29, #-16]
    271c:	ldur	x5, [x29, #-24]
    2720:	ldp	x7, x6, [sp, #24]
    2724:	add	x2, x0, #0x1
    2728:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    272c:	mov	w9, #0x1                   	// #1
    2730:	add	x0, x0, #0x358
    2734:	mov	x1, x23
    2738:	mov	w3, w25
    273c:	str	w9, [sp, #16]
    2740:	stp	x8, x22, [sp]
    2744:	bl	42c4 <libintl_textdomain@@Base+0x128>
    2748:	mov	x21, x0
    274c:	cbz	x26, 2760 <libintl_gettext@@Base+0x1b0>
    2750:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    2754:	add	x0, x0, #0x268
    2758:	bl	1fd0 <pthread_rwlock_unlock@plt>
    275c:	cbnz	w0, 2848 <libintl_gettext@@Base+0x298>
    2760:	cbz	x21, 2790 <libintl_gettext@@Base+0x1e0>
    2764:	ldr	w8, [x21, #8]
    2768:	cmp	w8, #0x0
    276c:	b.gt	277c <libintl_gettext@@Base+0x1cc>
    2770:	mov	x0, x21
    2774:	mov	x1, x19
    2778:	bl	2890 <libintl_gettext@@Base+0x2e0>
    277c:	ldr	x8, [x21, #16]
    2780:	cbz	x8, 2810 <libintl_gettext@@Base+0x260>
    2784:	cbz	x24, 2790 <libintl_gettext@@Base+0x1e0>
    2788:	mov	x0, x20
    278c:	bl	1fb0 <free@plt>
    2790:	tbz	w25, #0, 27f0 <libintl_gettext@@Base+0x240>
    2794:	ldr	x0, [sp, #24]
    2798:	bl	1fb0 <free@plt>
    279c:	b	27f0 <libintl_gettext@@Base+0x240>
    27a0:	mov	x0, x21
    27a4:	mov	x1, x19
    27a8:	bl	2890 <libintl_gettext@@Base+0x2e0>
    27ac:	ldr	x8, [x21, #16]
    27b0:	cbnz	x8, 27f0 <libintl_gettext@@Base+0x240>
    27b4:	ldr	x0, [x21, #32]
    27b8:	cbz	x0, 27f0 <libintl_gettext@@Base+0x240>
    27bc:	add	x20, x21, #0x28
    27c0:	ldr	w8, [x0, #8]
    27c4:	cmp	w8, #0x0
    27c8:	b.gt	27d8 <libintl_gettext@@Base+0x228>
    27cc:	mov	x1, x19
    27d0:	bl	2890 <libintl_gettext@@Base+0x2e0>
    27d4:	ldur	x0, [x20, #-8]
    27d8:	ldr	x8, [x0, #16]
    27dc:	cbnz	x8, 27f0 <libintl_gettext@@Base+0x240>
    27e0:	ldr	x0, [x20], #8
    27e4:	cbnz	x0, 27c0 <libintl_gettext@@Base+0x210>
    27e8:	b	27f0 <libintl_gettext@@Base+0x240>
    27ec:	mov	x21, xzr
    27f0:	mov	x0, x21
    27f4:	ldp	x20, x19, [sp, #128]
    27f8:	ldp	x22, x21, [sp, #112]
    27fc:	ldp	x24, x23, [sp, #96]
    2800:	ldp	x26, x25, [sp, #80]
    2804:	ldp	x29, x30, [sp, #64]
    2808:	add	sp, sp, #0x90
    280c:	ret
    2810:	ldr	x0, [x21, #32]
    2814:	cbz	x0, 2784 <libintl_gettext@@Base+0x1d4>
    2818:	add	x22, x21, #0x28
    281c:	ldr	w8, [x0, #8]
    2820:	cmp	w8, #0x0
    2824:	b.gt	2834 <libintl_gettext@@Base+0x284>
    2828:	mov	x1, x19
    282c:	bl	2890 <libintl_gettext@@Base+0x2e0>
    2830:	ldur	x0, [x22, #-8]
    2834:	ldr	x8, [x0, #16]
    2838:	cbnz	x8, 2784 <libintl_gettext@@Base+0x1d4>
    283c:	ldr	x0, [x22], #8
    2840:	cbnz	x0, 281c <libintl_gettext@@Base+0x26c>
    2844:	b	2784 <libintl_gettext@@Base+0x1d4>
    2848:	bl	1f20 <abort@plt>
    284c:	ldrb	w9, [x0]
    2850:	cbz	w9, 2888 <libintl_gettext@@Base+0x2d8>
    2854:	mov	x8, x0
    2858:	mov	x0, xzr
    285c:	add	x8, x8, #0x1
    2860:	lsl	x10, x0, #4
    2864:	add	x10, x10, w9, uxtb
    2868:	ldrb	w9, [x8], #1
    286c:	and	x11, x10, #0xf0000000
    2870:	and	x12, x10, #0xffffffff0fffffff
    2874:	eor	x11, x12, x11, lsr #24
    2878:	tst	x10, #0xf0000000
    287c:	csel	x0, x10, x11, eq  // eq = none
    2880:	cbnz	w9, 2860 <libintl_gettext@@Base+0x2b0>
    2884:	ret
    2888:	mov	x0, xzr
    288c:	ret
    2890:	stp	x29, x30, [sp, #-96]!
    2894:	stp	x28, x27, [sp, #16]
    2898:	stp	x26, x25, [sp, #32]
    289c:	stp	x24, x23, [sp, #48]
    28a0:	stp	x22, x21, [sp, #64]
    28a4:	stp	x20, x19, [sp, #80]
    28a8:	mov	x29, sp
    28ac:	sub	sp, sp, #0x130
    28b0:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0x10004>
    28b4:	ldr	x24, [x24, #4064]
    28b8:	mov	x20, x1
    28bc:	mov	x19, x0
    28c0:	cbz	x24, 28d4 <libintl_gettext@@Base+0x324>
    28c4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    28c8:	add	x0, x0, #0x2a0
    28cc:	bl	20e0 <pthread_mutex_lock@plt>
    28d0:	cbnz	w0, 3bac <libintl_gettext@@Base+0x15fc>
    28d4:	ldr	w8, [x19, #8]
    28d8:	cbz	w8, 28e4 <libintl_gettext@@Base+0x334>
    28dc:	cbnz	x24, 3b2c <libintl_gettext@@Base+0x157c>
    28e0:	b	3b3c <libintl_gettext@@Base+0x158c>
    28e4:	ldr	x0, [x19]
    28e8:	mov	w8, #0xffffffff            	// #-1
    28ec:	str	w8, [x19, #8]
    28f0:	str	xzr, [x19, #16]
    28f4:	cbz	x0, 3b20 <libintl_gettext@@Base+0x1570>
    28f8:	mov	w1, wzr
    28fc:	bl	1e30 <open@plt>
    2900:	cmn	w0, #0x1
    2904:	b.eq	3b20 <libintl_gettext@@Base+0x1570>  // b.none
    2908:	mov	w23, w0
    290c:	sub	x2, x29, #0x88
    2910:	mov	w0, wzr
    2914:	mov	w1, w23
    2918:	bl	2060 <__fxstat@plt>
    291c:	cbnz	w0, 3954 <libintl_gettext@@Base+0x13a4>
    2920:	ldur	x21, [x29, #-88]
    2924:	cmp	x21, #0x30
    2928:	b.cc	3954 <libintl_gettext@@Base+0x13a4>  // b.lo, b.ul, b.last
    292c:	mov	w2, #0x1                   	// #1
    2930:	mov	w3, #0x2                   	// #2
    2934:	mov	x0, xzr
    2938:	mov	x1, x21
    293c:	mov	w4, w23
    2940:	mov	x5, xzr
    2944:	mov	w25, #0x1                   	// #1
    2948:	bl	1f90 <mmap@plt>
    294c:	cmn	x0, #0x1
    2950:	b.eq	38f4 <libintl_gettext@@Base+0x1344>  // b.none
    2954:	mov	x22, x0
    2958:	mov	w0, w23
    295c:	bl	1f00 <close@plt>
    2960:	ldr	w8, [x22]
    2964:	mov	w9, #0x12de                	// #4830
    2968:	movk	w9, #0x9504, lsl #16
    296c:	cmp	w8, w9
    2970:	b.eq	2984 <libintl_gettext@@Base+0x3d4>  // b.none
    2974:	mov	w9, #0x495                 	// #1173
    2978:	movk	w9, #0xde12, lsl #16
    297c:	cmp	w8, w9
    2980:	b.ne	2a38 <libintl_gettext@@Base+0x488>  // b.any
    2984:	mov	w0, #0xc8                  	// #200
    2988:	bl	1e10 <malloc@plt>
    298c:	cbz	x0, 2a38 <libintl_gettext@@Base+0x488>
    2990:	str	x0, [x19, #16]
    2994:	str	x22, [x0]
    2998:	str	w25, [x0, #8]
    299c:	str	x21, [x0, #16]
    29a0:	ldr	w9, [x22]
    29a4:	mov	w8, #0x12de                	// #4830
    29a8:	movk	w8, #0x9504, lsl #16
    29ac:	stur	w25, [x29, #-172]
    29b0:	cmp	w9, w8
    29b4:	stur	w9, [x29, #-160]
    29b8:	cset	w9, ne  // ne = any
    29bc:	stur	x21, [x29, #-192]
    29c0:	stur	w9, [x29, #-184]
    29c4:	str	w9, [x0, #24]
    29c8:	str	xzr, [x0, #32]
    29cc:	mov	x10, x22
    29d0:	ldr	w9, [x10, #4]!
    29d4:	mov	x23, x0
    29d8:	stur	x10, [x29, #-200]
    29dc:	rev	w10, w9
    29e0:	csel	w9, w10, w9, ne  // ne = any
    29e4:	asr	w10, w9, #16
    29e8:	cmp	w10, #0x1
    29ec:	b.hi	3aec <libintl_gettext@@Base+0x153c>  // b.pmore
    29f0:	ldur	w15, [x29, #-160]
    29f4:	ldr	w10, [x22, #8]
    29f8:	cmp	w15, w8
    29fc:	b.eq	2a58 <libintl_gettext@@Base+0x4a8>  // b.none
    2a00:	rev	w8, w10
    2a04:	mov	x13, x23
    2a08:	str	w8, [x13, #40]!
    2a0c:	ldr	w8, [x22, #12]
    2a10:	rev	w8, w8
    2a14:	add	x8, x22, x8
    2a18:	str	x8, [x13, #8]
    2a1c:	ldr	w8, [x22, #16]
    2a20:	rev	w8, w8
    2a24:	add	x8, x22, x8
    2a28:	str	x8, [x13, #16]
    2a2c:	ldr	w8, [x22, #20]
    2a30:	rev	w8, w8
    2a34:	b	2a7c <libintl_gettext@@Base+0x4cc>
    2a38:	cbz	w25, 2a4c <libintl_gettext@@Base+0x49c>
    2a3c:	mov	x0, x22
    2a40:	mov	x1, x21
    2a44:	bl	2010 <munmap@plt>
    2a48:	b	3b20 <libintl_gettext@@Base+0x1570>
    2a4c:	mov	x0, x22
    2a50:	bl	1fb0 <free@plt>
    2a54:	b	3b20 <libintl_gettext@@Base+0x1570>
    2a58:	mov	x13, x23
    2a5c:	str	w10, [x13, #40]!
    2a60:	ldr	w8, [x22, #12]
    2a64:	add	x8, x22, x8
    2a68:	str	x8, [x13, #8]
    2a6c:	ldr	w8, [x22, #16]
    2a70:	add	x8, x22, x8
    2a74:	str	x8, [x13, #16]
    2a78:	ldr	w8, [x22, #20]
    2a7c:	ldur	w14, [x29, #-184]
    2a80:	cmp	w8, #0x3
    2a84:	str	w8, [x23, #88]
    2a88:	b.cc	2aac <libintl_gettext@@Base+0x4fc>  // b.lo, b.ul, b.last
    2a8c:	ldr	w10, [x22, #24]
    2a90:	mov	w11, #0x12de                	// #4830
    2a94:	movk	w11, #0x9504, lsl #16
    2a98:	cmp	w15, w11
    2a9c:	rev	w12, w10
    2aa0:	csel	w10, w12, w10, ne  // ne = any
    2aa4:	add	x10, x22, x10
    2aa8:	b	2ab0 <libintl_gettext@@Base+0x500>
    2aac:	mov	x10, xzr
    2ab0:	tst	w9, #0xffff
    2ab4:	str	x10, [x23, #96]
    2ab8:	str	w14, [x23, #104]
    2abc:	b.eq	3470 <libintl_gettext@@Base+0xec0>  // b.none
    2ac0:	stur	x13, [x29, #-216]
    2ac4:	cbz	x10, 3aec <libintl_gettext@@Base+0x153c>
    2ac8:	ldr	w9, [x22, #36]
    2acc:	ldur	w21, [x29, #-160]
    2ad0:	mov	w11, #0x12de                	// #4830
    2ad4:	movk	w11, #0x9504, lsl #16
    2ad8:	rev	w10, w9
    2adc:	cmp	w21, w11
    2ae0:	csel	w9, w10, w9, ne  // ne = any
    2ae4:	cbz	w9, 3470 <libintl_gettext@@Base+0xec0>
    2ae8:	ldr	w10, [x22, #28]
    2aec:	cmp	w21, w11
    2af0:	b.eq	2b04 <libintl_gettext@@Base+0x554>  // b.none
    2af4:	ldr	w11, [x22, #32]
    2af8:	rev	w10, w10
    2afc:	rev	w11, w11
    2b00:	b	2b08 <libintl_gettext@@Base+0x558>
    2b04:	ldr	w11, [x22, #32]
    2b08:	mov	w13, w10
    2b0c:	stur	x13, [x29, #-168]
    2b10:	lsl	x13, x13, #3
    2b14:	add	x13, x13, #0xf
    2b18:	mov	x12, sp
    2b1c:	and	x13, x13, #0xffffffff0
    2b20:	sub	x12, x12, x13
    2b24:	stur	x12, [x29, #-152]
    2b28:	mov	sp, x12
    2b2c:	cbz	w10, 306c <libintl_gettext@@Base+0xabc>
    2b30:	ldur	x26, [x29, #-168]
    2b34:	ldur	x30, [x29, #-152]
    2b38:	mov	x14, #0x1001                	// #4097
    2b3c:	add	x10, x22, w11, uxtw
    2b40:	mov	w11, #0x12de                	// #4830
    2b44:	adrp	x12, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b48:	movk	x14, #0x2082, lsl #16
    2b4c:	adrp	x15, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b50:	adrp	x16, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b54:	adrp	x5, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b58:	adrp	x17, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b5c:	adrp	x18, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b60:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b64:	adrp	x2, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b68:	adrp	x3, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b6c:	adrp	x7, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b70:	adrp	x4, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b74:	adrp	x6, 7000 <bind_textdomain_codeset@@Base+0x4>
    2b78:	movk	w11, #0x9504, lsl #16
    2b7c:	add	x12, x12, #0x82e
    2b80:	mov	w13, #0x1                   	// #1
    2b84:	movk	x14, #0x1, lsl #32
    2b88:	add	x15, x15, #0x10
    2b8c:	add	x16, x16, #0x7d1
    2b90:	add	x5, x5, #0x3dc
    2b94:	add	x17, x17, #0x3e5
    2b98:	add	x18, x18, #0x3e8
    2b9c:	add	x0, x0, #0x39a
    2ba0:	add	x2, x2, #0x1c4
    2ba4:	add	x3, x3, #0x1cc
    2ba8:	add	x7, x7, #0x292
    2bac:	add	x4, x4, #0x72
    2bb0:	add	x6, x6, #0x30
    2bb4:	ldr	w1, [x10, #4]
    2bb8:	cmp	w21, w11
    2bbc:	b.eq	2bd0 <libintl_gettext@@Base+0x620>  // b.none
    2bc0:	ldr	w21, [x10]
    2bc4:	rev	w1, w1
    2bc8:	rev	w21, w21
    2bcc:	b	2bd4 <libintl_gettext@@Base+0x624>
    2bd0:	ldr	w21, [x10]
    2bd4:	cbz	w21, 3aec <libintl_gettext@@Base+0x153c>
    2bd8:	add	x1, x22, w1, uxtw
    2bdc:	sub	w21, w21, #0x1
    2be0:	ldrb	w21, [x1, w21, uxtw]
    2be4:	cbnz	w21, 3aec <libintl_gettext@@Base+0x153c>
    2be8:	ldrb	w21, [x1]
    2bec:	cmp	w21, #0x49
    2bf0:	b.eq	2c88 <libintl_gettext@@Base+0x6d8>  // b.none
    2bf4:	cmp	w21, #0x50
    2bf8:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2bfc:	ldrb	w21, [x1, #1]
    2c00:	cmp	w21, #0x52
    2c04:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2c08:	ldrb	w21, [x1, #2]
    2c0c:	cmp	w21, #0x49
    2c10:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2c14:	ldrb	w21, [x1, #3]
    2c18:	sub	w28, w21, #0x58
    2c1c:	cmp	w28, #0x20
    2c20:	b.hi	2c90 <libintl_gettext@@Base+0x6e0>  // b.pmore
    2c24:	lsl	x21, x13, x28
    2c28:	tst	x21, x14
    2c2c:	b.eq	2c90 <libintl_gettext@@Base+0x6e0>  // b.none
    2c30:	ldrb	w21, [x1, #4]
    2c34:	sub	w21, w21, #0x31
    2c38:	cmp	w21, #0x1f
    2c3c:	b.hi	2c90 <libintl_gettext@@Base+0x6e0>  // b.pmore
    2c40:	adr	x25, 2c50 <libintl_gettext@@Base+0x6a0>
    2c44:	ldrb	w27, [x15, x21]
    2c48:	add	x25, x25, x27, lsl #2
    2c4c:	br	x25
    2c50:	ldrb	w21, [x1, #5]
    2c54:	cmp	w21, #0x36
    2c58:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2c5c:	ldrb	w1, [x1, #6]
    2c60:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2c64:	cmp	w28, #0x20
    2c68:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2c6c:	adrp	x25, 7000 <bind_textdomain_codeset@@Base+0x4>
    2c70:	add	x25, x25, #0x358
    2c74:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2c78:	ldrh	w1, [x25, x28, lsl #1]
    2c7c:	add	x21, x21, x1, lsl #2
    2c80:	mov	x1, x16
    2c84:	br	x21
    2c88:	ldrb	w1, [x1, #1]
    2c8c:	cbz	w1, 2cac <libintl_gettext@@Base+0x6fc>
    2c90:	mov	x1, xzr
    2c94:	ldur	w21, [x29, #-160]
    2c98:	str	x1, [x30], #8
    2c9c:	subs	x26, x26, #0x1
    2ca0:	add	x10, x10, #0x8
    2ca4:	b.ne	2bb4 <libintl_gettext@@Base+0x604>  // b.any
    2ca8:	b	306c <libintl_gettext@@Base+0xabc>
    2cac:	mov	x1, x12
    2cb0:	b	2c94 <libintl_gettext@@Base+0x6e4>
    2cb4:	ldrb	w21, [x1, #5]
    2cb8:	cmp	w21, #0x32
    2cbc:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2cc0:	ldrb	w1, [x1, #6]
    2cc4:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2cc8:	cmp	w28, #0x20
    2ccc:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2cd0:	adrp	x25, 7000 <bind_textdomain_codeset@@Base+0x4>
    2cd4:	add	x25, x25, #0x316
    2cd8:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2cdc:	ldrh	w1, [x25, x28, lsl #1]
    2ce0:	add	x21, x21, x1, lsl #2
    2ce4:	mov	x1, x16
    2ce8:	br	x21
    2cec:	ldrb	w21, [x1, #5]
    2cf0:	cmp	w21, #0x34
    2cf4:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2cf8:	ldrb	w1, [x1, #6]
    2cfc:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2d00:	cmp	w28, #0x20
    2d04:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2d08:	adrp	x25, 7000 <bind_textdomain_codeset@@Base+0x4>
    2d0c:	add	x25, x25, #0x2d4
    2d10:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2d14:	ldrh	w1, [x25, x28, lsl #1]
    2d18:	add	x21, x21, x1, lsl #2
    2d1c:	mov	x1, x5
    2d20:	br	x21
    2d24:	ldrb	w1, [x1, #5]
    2d28:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2d2c:	cmp	w28, #0x20
    2d30:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2d34:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2d38:	ldrh	w1, [x0, x28, lsl #1]
    2d3c:	add	x21, x21, x1, lsl #2
    2d40:	mov	x1, x16
    2d44:	br	x21
    2d48:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    2d4c:	add	x1, x1, #0x426
    2d50:	b	2c94 <libintl_gettext@@Base+0x6e4>
    2d54:	ldrb	w21, [x1, #5]
    2d58:	cmp	w21, #0x41
    2d5c:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2d60:	ldrb	w21, [x1, #6]
    2d64:	cmp	w21, #0x53
    2d68:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2d6c:	ldrb	w21, [x1, #7]
    2d70:	cmp	w21, #0x54
    2d74:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2d78:	ldrb	w21, [x1, #8]
    2d7c:	sub	w21, w21, #0x31
    2d80:	cmp	w21, #0x7
    2d84:	b.hi	2c90 <libintl_gettext@@Base+0x6e0>  // b.pmore
    2d88:	adrp	x17, 7000 <bind_textdomain_codeset@@Base+0x4>
    2d8c:	add	x17, x17, #0xb4
    2d90:	adr	x25, 2c90 <libintl_gettext@@Base+0x6e0>
    2d94:	ldrb	w27, [x17, x21]
    2d98:	add	x25, x25, x27, lsl #2
    2d9c:	adrp	x17, 7000 <bind_textdomain_codeset@@Base+0x4>
    2da0:	add	x17, x17, #0x3e5
    2da4:	br	x25
    2da8:	ldrb	w21, [x1, #9]
    2dac:	cmp	w21, #0x36
    2db0:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2db4:	ldrb	w1, [x1, #10]
    2db8:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2dbc:	cmp	w28, #0x20
    2dc0:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2dc4:	adrp	x25, 7000 <bind_textdomain_codeset@@Base+0x4>
    2dc8:	add	x25, x25, #0x140
    2dcc:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2dd0:	ldrh	w1, [x25, x28, lsl #1]
    2dd4:	add	x21, x21, x1, lsl #2
    2dd8:	mov	x1, x5
    2ddc:	br	x21
    2de0:	ldrb	w21, [x1, #5]
    2de4:	cmp	w21, #0x45
    2de8:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2dec:	ldrb	w21, [x1, #6]
    2df0:	cmp	w21, #0x41
    2df4:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2df8:	ldrb	w21, [x1, #7]
    2dfc:	cmp	w21, #0x53
    2e00:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2e04:	ldrb	w21, [x1, #8]
    2e08:	cmp	w21, #0x54
    2e0c:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2e10:	ldrb	w21, [x1, #9]
    2e14:	sub	w21, w21, #0x31
    2e18:	cmp	w21, #0x7
    2e1c:	b.hi	2c90 <libintl_gettext@@Base+0x6e0>  // b.pmore
    2e20:	adr	x25, 2c90 <libintl_gettext@@Base+0x6e0>
    2e24:	ldrb	w27, [x2, x21]
    2e28:	add	x25, x25, x27, lsl #2
    2e2c:	br	x25
    2e30:	ldrb	w21, [x1, #10]
    2e34:	cmp	w21, #0x36
    2e38:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2e3c:	ldrb	w1, [x1, #11]
    2e40:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2e44:	cmp	w28, #0x20
    2e48:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2e4c:	adrp	x25, 7000 <bind_textdomain_codeset@@Base+0x4>
    2e50:	add	x25, x25, #0x250
    2e54:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2e58:	ldrh	w1, [x25, x28, lsl #1]
    2e5c:	add	x21, x21, x1, lsl #2
    2e60:	mov	x1, x16
    2e64:	br	x21
    2e68:	ldrb	w21, [x1, #5]
    2e6c:	cmp	w21, #0x41
    2e70:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2e74:	ldrb	w21, [x1, #6]
    2e78:	cmp	w21, #0x58
    2e7c:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2e80:	ldrb	w1, [x1, #7]
    2e84:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2e88:	cmp	w28, #0x20
    2e8c:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2e90:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2e94:	ldrh	w1, [x4, x28, lsl #1]
    2e98:	add	x21, x21, x1, lsl #2
    2e9c:	mov	x1, x5
    2ea0:	br	x21
    2ea4:	ldrb	w21, [x1, #5]
    2ea8:	cmp	w21, #0x54
    2eac:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2eb0:	ldrb	w21, [x1, #6]
    2eb4:	cmp	w21, #0x52
    2eb8:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2ebc:	ldrb	w1, [x1, #7]
    2ec0:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2ec4:	cmp	w28, #0x20
    2ec8:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2ecc:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2ed0:	ldrh	w1, [x6, x28, lsl #1]
    2ed4:	add	x21, x21, x1, lsl #2
    2ed8:	mov	x1, x5
    2edc:	br	x21
    2ee0:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    2ee4:	add	x1, x1, #0x3eb
    2ee8:	b	2c94 <libintl_gettext@@Base+0x6e4>
    2eec:	ldrb	w21, [x1, #9]
    2ef0:	cmp	w21, #0x32
    2ef4:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2ef8:	ldrb	w1, [x1, #10]
    2efc:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2f00:	cmp	w28, #0x20
    2f04:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2f08:	adrp	x25, 7000 <bind_textdomain_codeset@@Base+0x4>
    2f0c:	add	x25, x25, #0xfe
    2f10:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2f14:	ldrh	w1, [x25, x28, lsl #1]
    2f18:	add	x21, x21, x1, lsl #2
    2f1c:	mov	x1, x5
    2f20:	br	x21
    2f24:	ldrb	w21, [x1, #9]
    2f28:	cmp	w21, #0x34
    2f2c:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2f30:	ldrb	w1, [x1, #10]
    2f34:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2f38:	cmp	w28, #0x20
    2f3c:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2f40:	adrp	x25, 7000 <bind_textdomain_codeset@@Base+0x4>
    2f44:	add	x25, x25, #0xbc
    2f48:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2f4c:	ldrh	w1, [x25, x28, lsl #1]
    2f50:	add	x21, x21, x1, lsl #2
    2f54:	mov	x1, x5
    2f58:	br	x21
    2f5c:	ldrb	w1, [x1, #9]
    2f60:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2f64:	cmp	w28, #0x20
    2f68:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2f6c:	adrp	x25, 7000 <bind_textdomain_codeset@@Base+0x4>
    2f70:	add	x25, x25, #0x182
    2f74:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2f78:	ldrh	w1, [x25, x28, lsl #1]
    2f7c:	add	x21, x21, x1, lsl #2
    2f80:	mov	x1, x16
    2f84:	br	x21
    2f88:	ldrb	w21, [x1, #10]
    2f8c:	cmp	w21, #0x32
    2f90:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2f94:	ldrb	w1, [x1, #11]
    2f98:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2f9c:	cmp	w28, #0x20
    2fa0:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2fa4:	adrp	x25, 7000 <bind_textdomain_codeset@@Base+0x4>
    2fa8:	add	x25, x25, #0x20e
    2fac:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2fb0:	ldrh	w1, [x25, x28, lsl #1]
    2fb4:	add	x21, x21, x1, lsl #2
    2fb8:	mov	x1, x16
    2fbc:	br	x21
    2fc0:	ldrb	w21, [x1, #10]
    2fc4:	cmp	w21, #0x34
    2fc8:	b.ne	2c90 <libintl_gettext@@Base+0x6e0>  // b.any
    2fcc:	ldrb	w1, [x1, #11]
    2fd0:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    2fd4:	cmp	w28, #0x20
    2fd8:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    2fdc:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    2fe0:	ldrh	w1, [x3, x28, lsl #1]
    2fe4:	add	x21, x21, x1, lsl #2
    2fe8:	mov	x1, x5
    2fec:	br	x21
    2ff0:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    2ff4:	add	x1, x1, #0x3df
    2ff8:	b	2c94 <libintl_gettext@@Base+0x6e4>
    2ffc:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    3000:	add	x1, x1, #0x3e2
    3004:	b	2c94 <libintl_gettext@@Base+0x6e4>
    3008:	mov	x1, x17
    300c:	b	2c94 <libintl_gettext@@Base+0x6e4>
    3010:	mov	x1, x18
    3014:	b	2c94 <libintl_gettext@@Base+0x6e4>
    3018:	ldrb	w1, [x1, #10]
    301c:	cbnz	w1, 2c90 <libintl_gettext@@Base+0x6e0>
    3020:	cmp	w28, #0x20
    3024:	b.hi	3bac <libintl_gettext@@Base+0x15fc>  // b.pmore
    3028:	adr	x21, 2c94 <libintl_gettext@@Base+0x6e4>
    302c:	ldrh	w1, [x7, x28, lsl #1]
    3030:	add	x21, x21, x1, lsl #2
    3034:	mov	x1, x16
    3038:	br	x21
    303c:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    3040:	add	x1, x1, #0x3e0
    3044:	b	2c94 <libintl_gettext@@Base+0x6e4>
    3048:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    304c:	add	x1, x1, #0x3e3
    3050:	b	2c94 <libintl_gettext@@Base+0x6e4>
    3054:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    3058:	add	x1, x1, #0x3e6
    305c:	b	2c94 <libintl_gettext@@Base+0x6e4>
    3060:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    3064:	add	x1, x1, #0x3e9
    3068:	b	2c94 <libintl_gettext@@Base+0x6e4>
    306c:	ldr	w10, [x22, #40]
    3070:	mov	w11, #0x12de                	// #4830
    3074:	movk	w11, #0x9504, lsl #16
    3078:	cmp	w21, w11
    307c:	b.eq	3090 <libintl_gettext@@Base+0xae0>  // b.none
    3080:	ldr	w11, [x22, #44]
    3084:	rev	w10, w10
    3088:	rev	w11, w11
    308c:	b	3094 <libintl_gettext@@Base+0xae4>
    3090:	ldr	w11, [x22, #44]
    3094:	add	x11, x22, w11, uxtw
    3098:	mov	w8, w8
    309c:	stur	x11, [x29, #-232]
    30a0:	lsl	x11, x8, #2
    30a4:	mov	w8, w9
    30a8:	mov	w13, #0x12de                	// #4830
    30ac:	mov	x12, xzr
    30b0:	add	x10, x22, w10, uxtw
    30b4:	stur	x8, [x29, #-224]
    30b8:	movk	w13, #0x9504, lsl #16
    30bc:	sub	x8, x29, #0x8
    30c0:	stur	wzr, [x29, #-244]
    30c4:	stur	x11, [x8, #-256]
    30c8:	stur	x11, [x29, #-256]
    30cc:	stur	x10, [x29, #-240]
    30d0:	b	30f8 <libintl_gettext@@Base+0xb48>
    30d4:	ldur	x12, [x29, #-208]
    30d8:	ldur	x8, [x29, #-224]
    30dc:	ldur	w21, [x29, #-160]
    30e0:	ldur	x10, [x29, #-240]
    30e4:	mov	w13, #0x12de                	// #4830
    30e8:	add	x12, x12, #0x1
    30ec:	movk	w13, #0x9504, lsl #16
    30f0:	cmp	x12, x8
    30f4:	b.cs	33e0 <libintl_gettext@@Base+0xe30>  // b.hs, b.nlast
    30f8:	ldr	w8, [x10, x12, lsl #2]
    30fc:	cmp	w21, w13
    3100:	b.eq	3124 <libintl_gettext@@Base+0xb74>  // b.none
    3104:	rev	w8, w8
    3108:	add	x8, x22, x8
    310c:	ldr	w9, [x8]
    3110:	ldr	w11, [x8, #8]
    3114:	add	x10, x8, #0x4
    3118:	rev	w9, w9
    311c:	rev	w11, w11
    3120:	b	3134 <libintl_gettext@@Base+0xb84>
    3124:	add	x8, x22, x8
    3128:	ldr	w9, [x8]
    312c:	ldr	w11, [x8, #8]
    3130:	add	x10, x8, #0x4
    3134:	ldr	w8, [x10]
    3138:	cmn	w11, #0x1
    313c:	add	x27, x22, w9, uxtw
    3140:	stur	x12, [x29, #-208]
    3144:	b.eq	31b8 <libintl_gettext@@Base+0xc08>  // b.none
    3148:	cmp	w21, w13
    314c:	b.eq	31c4 <libintl_gettext@@Base+0xc14>  // b.none
    3150:	ldr	w9, [x10, #4]
    3154:	rev	w26, w8
    3158:	cmn	w9, #0x1
    315c:	b.eq	3228 <libintl_gettext@@Base+0xc78>  // b.none
    3160:	rev	w9, w9
    3164:	add	x21, x10, #0xc
    3168:	mov	w28, #0x1                   	// #1
    316c:	mov	x10, x26
    3170:	ldur	x8, [x29, #-168]
    3174:	cmp	w9, w8
    3178:	b.cs	3aec <libintl_gettext@@Base+0x153c>  // b.hs, b.nlast
    317c:	ldur	x8, [x29, #-152]
    3180:	add	x27, x27, x10
    3184:	ldr	x0, [x8, w9, uxtw #3]
    3188:	cmp	x0, #0x0
    318c:	csel	w28, wzr, w28, eq  // eq = none
    3190:	bl	1cc0 <strlen@plt>
    3194:	ldp	w8, w11, [x21, #-4]
    3198:	add	x12, x0, x26
    319c:	add	x21, x21, #0x8
    31a0:	rev	w10, w8
    31a4:	rev	w9, w11
    31a8:	cmn	w11, #0x1
    31ac:	add	x26, x12, x10
    31b0:	b.ne	3170 <libintl_gettext@@Base+0xbc0>  // b.any
    31b4:	b	3218 <libintl_gettext@@Base+0xc68>
    31b8:	mov	x26, xzr
    31bc:	mov	w28, #0x1                   	// #1
    31c0:	b	3238 <libintl_gettext@@Base+0xc88>
    31c4:	ldr	w9, [x10, #4]
    31c8:	cmn	w9, #0x1
    31cc:	b.eq	3230 <libintl_gettext@@Base+0xc80>  // b.none
    31d0:	add	x21, x10, #0xc
    31d4:	mov	w28, #0x1                   	// #1
    31d8:	mov	x26, x8
    31dc:	ldur	x10, [x29, #-168]
    31e0:	cmp	w9, w10
    31e4:	b.cs	3aec <libintl_gettext@@Base+0x153c>  // b.hs, b.nlast
    31e8:	ldur	x10, [x29, #-152]
    31ec:	add	x27, x27, x8
    31f0:	ldr	x0, [x10, w9, uxtw #3]
    31f4:	cmp	x0, #0x0
    31f8:	csel	w28, wzr, w28, eq  // eq = none
    31fc:	bl	1cc0 <strlen@plt>
    3200:	ldp	w8, w9, [x21, #-4]
    3204:	add	x10, x0, x26
    3208:	add	x21, x21, #0x8
    320c:	add	x26, x10, x8
    3210:	cmn	w9, #0x1
    3214:	b.ne	31dc <libintl_gettext@@Base+0xc2c>  // b.any
    3218:	ldur	w21, [x29, #-160]
    321c:	mov	w13, #0x12de                	// #4830
    3220:	movk	w13, #0x9504, lsl #16
    3224:	b	3238 <libintl_gettext@@Base+0xc88>
    3228:	mov	w28, #0x1                   	// #1
    322c:	b	3238 <libintl_gettext@@Base+0xc88>
    3230:	mov	w28, #0x1                   	// #1
    3234:	mov	x26, x8
    3238:	rev	w9, w8
    323c:	cmp	w21, w13
    3240:	csel	w8, w9, w8, ne  // ne = any
    3244:	cbz	w8, 3aec <libintl_gettext@@Base+0x153c>
    3248:	sub	w8, w8, #0x1
    324c:	ldrb	w8, [x27, w8, uxtw]
    3250:	cbnz	w8, 3aec <libintl_gettext@@Base+0x153c>
    3254:	cbz	w28, 30d4 <libintl_gettext@@Base+0xb24>
    3258:	ldur	x8, [x29, #-232]
    325c:	ldur	x9, [x29, #-208]
    3260:	ldur	w12, [x29, #-160]
    3264:	mov	w13, #0x12de                	// #4830
    3268:	movk	w13, #0x9504, lsl #16
    326c:	ldr	w8, [x8, x9, lsl #2]
    3270:	cmp	w12, w13
    3274:	b.eq	3298 <libintl_gettext@@Base+0xce8>  // b.none
    3278:	rev	w8, w8
    327c:	add	x8, x22, x8
    3280:	ldr	w9, [x8]
    3284:	ldr	w11, [x8, #8]
    3288:	add	x10, x8, #0x4
    328c:	rev	w9, w9
    3290:	rev	w11, w11
    3294:	b	32a8 <libintl_gettext@@Base+0xcf8>
    3298:	add	x8, x22, x8
    329c:	ldr	w9, [x8]
    32a0:	ldr	w11, [x8, #8]
    32a4:	add	x10, x8, #0x4
    32a8:	ldr	w8, [x10]
    32ac:	cmn	w11, #0x1
    32b0:	add	x27, x22, w9, uxtw
    32b4:	b.eq	3324 <libintl_gettext@@Base+0xd74>  // b.none
    32b8:	cmp	w12, w13
    32bc:	b.eq	3330 <libintl_gettext@@Base+0xd80>  // b.none
    32c0:	ldr	w9, [x10, #4]
    32c4:	rev	w25, w8
    32c8:	cmn	w9, #0x1
    32cc:	b.eq	3388 <libintl_gettext@@Base+0xdd8>  // b.none
    32d0:	rev	w9, w9
    32d4:	add	x21, x10, #0xc
    32d8:	mov	x10, x25
    32dc:	ldur	x8, [x29, #-168]
    32e0:	cmp	w9, w8
    32e4:	b.cs	3aec <libintl_gettext@@Base+0x153c>  // b.hs, b.nlast
    32e8:	ldur	x8, [x29, #-152]
    32ec:	add	x27, x27, x10
    32f0:	ldr	x0, [x8, w9, uxtw #3]
    32f4:	cmp	x0, #0x0
    32f8:	csel	w28, wzr, w28, eq  // eq = none
    32fc:	bl	1cc0 <strlen@plt>
    3300:	ldp	w8, w11, [x21, #-4]
    3304:	add	x12, x0, x25
    3308:	add	x21, x21, #0x8
    330c:	rev	w10, w8
    3310:	rev	w9, w11
    3314:	cmn	w11, #0x1
    3318:	add	x25, x12, x10
    331c:	b.ne	32dc <libintl_gettext@@Base+0xd2c>  // b.any
    3320:	b	3380 <libintl_gettext@@Base+0xdd0>
    3324:	mov	x25, xzr
    3328:	mov	w28, #0x1                   	// #1
    332c:	b	3398 <libintl_gettext@@Base+0xde8>
    3330:	ldr	w9, [x10, #4]
    3334:	cmn	w9, #0x1
    3338:	b.eq	3390 <libintl_gettext@@Base+0xde0>  // b.none
    333c:	add	x21, x10, #0xc
    3340:	mov	x25, x8
    3344:	ldur	x10, [x29, #-168]
    3348:	cmp	w9, w10
    334c:	b.cs	3aec <libintl_gettext@@Base+0x153c>  // b.hs, b.nlast
    3350:	ldur	x10, [x29, #-152]
    3354:	add	x27, x27, x8
    3358:	ldr	x0, [x10, w9, uxtw #3]
    335c:	cmp	x0, #0x0
    3360:	csel	w28, wzr, w28, eq  // eq = none
    3364:	bl	1cc0 <strlen@plt>
    3368:	ldp	w8, w9, [x21, #-4]
    336c:	add	x10, x0, x25
    3370:	add	x21, x21, #0x8
    3374:	add	x25, x10, x8
    3378:	cmn	w9, #0x1
    337c:	b.ne	3344 <libintl_gettext@@Base+0xd94>  // b.any
    3380:	ldur	w12, [x29, #-160]
    3384:	b	3398 <libintl_gettext@@Base+0xde8>
    3388:	mov	w28, #0x1                   	// #1
    338c:	b	3398 <libintl_gettext@@Base+0xde8>
    3390:	mov	w28, #0x1                   	// #1
    3394:	mov	x25, x8
    3398:	mov	w10, #0x12de                	// #4830
    339c:	movk	w10, #0x9504, lsl #16
    33a0:	rev	w9, w8
    33a4:	cmp	w12, w10
    33a8:	csel	w8, w9, w8, ne  // ne = any
    33ac:	cbz	w8, 3aec <libintl_gettext@@Base+0x153c>
    33b0:	sub	w8, w8, #0x1
    33b4:	ldrb	w8, [x27, w8, uxtw]
    33b8:	cbnz	w8, 3aec <libintl_gettext@@Base+0x153c>
    33bc:	cbz	w28, 30d4 <libintl_gettext@@Base+0xb24>
    33c0:	ldur	w8, [x29, #-244]
    33c4:	add	w8, w8, #0x1
    33c8:	stur	w8, [x29, #-244]
    33cc:	ldur	x8, [x29, #-256]
    33d0:	add	x8, x26, x8
    33d4:	add	x8, x8, x25
    33d8:	stur	x8, [x29, #-256]
    33dc:	b	30d4 <libintl_gettext@@Base+0xb24>
    33e0:	ldur	w8, [x29, #-244]
    33e4:	cbz	w8, 3470 <libintl_gettext@@Base+0xec0>
    33e8:	ldur	x9, [x29, #-256]
    33ec:	lsl	w8, w8, #1
    33f0:	add	x0, x9, w8, uxtw #4
    33f4:	bl	1e10 <malloc@plt>
    33f8:	cbz	x0, 3aec <libintl_gettext@@Base+0x153c>
    33fc:	ldur	w8, [x29, #-244]
    3400:	add	x9, x22, #0x10
    3404:	stur	x9, [x29, #-208]
    3408:	sub	x9, x29, #0x30
    340c:	mov	w8, w8
    3410:	stur	x8, [x9, #-256]
    3414:	lsl	x8, x8, #4
    3418:	sub	x9, x29, #0x18
    341c:	stur	x0, [x9, #-256]
    3420:	add	x9, x0, x8
    3424:	sub	x10, x29, #0x20
    3428:	stur	x9, [x10, #-256]
    342c:	add	x8, x9, x8
    3430:	sub	x9, x29, #0x28
    3434:	stur	x8, [x9, #-256]
    3438:	sub	x9, x29, #0x8
    343c:	ldur	x9, [x9, #-256]
    3440:	ldur	x12, [x29, #-200]
    3444:	ldur	w14, [x29, #-184]
    3448:	ldur	x15, [x29, #-240]
    344c:	mov	x17, xzr
    3450:	mov	w16, wzr
    3454:	add	x25, x8, x9
    3458:	add	x8, x22, #0x8
    345c:	str	x0, [x23, #32]
    3460:	stur	x8, [x29, #-256]
    3464:	ldr	w8, [x15, x17, lsl #2]
    3468:	cbnz	w14, 34cc <libintl_gettext@@Base+0xf1c>
    346c:	b	356c <libintl_gettext@@Base+0xfbc>
    3470:	str	wzr, [x23, #64]
    3474:	stp	xzr, xzr, [x23, #72]
    3478:	stp	xzr, xzr, [x23, #112]
    347c:	cbz	x24, 348c <libintl_gettext@@Base+0xedc>
    3480:	add	x0, x23, #0x80
    3484:	bl	6654 <libintl_ngettext@@Base+0x934>
    3488:	cbnz	w0, 3bac <libintl_gettext@@Base+0x15fc>
    348c:	adrp	x2, 7000 <bind_textdomain_codeset@@Base+0x4>
    3490:	add	x2, x2, #0x44d
    3494:	sub	x4, x29, #0x90
    3498:	mov	x0, x19
    349c:	mov	x1, x20
    34a0:	mov	w3, wzr
    34a4:	bl	5368 <libintl_textdomain@@Base+0x11cc>
    34a8:	cmn	x0, #0x1
    34ac:	b.eq	3adc <libintl_gettext@@Base+0x152c>  // b.none
    34b0:	add	x1, x23, #0xb8
    34b4:	add	x2, x23, #0xc0
    34b8:	bl	6520 <libintl_ngettext@@Base+0x800>
    34bc:	b	3b20 <libintl_gettext@@Base+0x1570>
    34c0:	ldr	w14, [x23, #24]
    34c4:	ldr	w8, [x15, x17, lsl #2]
    34c8:	cbz	w14, 356c <libintl_gettext@@Base+0xfbc>
    34cc:	rev	w9, w8
    34d0:	add	x10, x12, x9
    34d4:	ldr	w10, [x10, #4]
    34d8:	cmn	w10, #0x1
    34dc:	b.eq	3514 <libintl_gettext@@Base+0xf64>  // b.none
    34e0:	ldur	x11, [x29, #-208]
    34e4:	rev	w10, w10
    34e8:	add	x9, x11, x9
    34ec:	ldur	x11, [x29, #-152]
    34f0:	ldr	x10, [x11, w10, uxtw #3]
    34f4:	cbz	x10, 351c <libintl_gettext@@Base+0xf6c>
    34f8:	ldr	w10, [x9], #8
    34fc:	cmn	w10, #0x1
    3500:	rev	w10, w10
    3504:	b.ne	34ec <libintl_gettext@@Base+0xf3c>  // b.any
    3508:	mov	w9, #0x1                   	// #1
    350c:	cbnz	w9, 3524 <libintl_gettext@@Base+0xf74>
    3510:	b	3850 <libintl_gettext@@Base+0x12a0>
    3514:	mov	w9, #0x1                   	// #1
    3518:	b	3524 <libintl_gettext@@Base+0xf74>
    351c:	mov	w9, wzr
    3520:	cbz	wzr, 3850 <libintl_gettext@@Base+0x12a0>
    3524:	ldur	x10, [x29, #-232]
    3528:	ldr	w10, [x10, x17, lsl #2]
    352c:	rev	w10, w10
    3530:	add	x11, x12, x10
    3534:	ldr	w11, [x11, #4]
    3538:	cmn	w11, #0x1
    353c:	b.eq	35f4 <libintl_gettext@@Base+0x1044>  // b.none
    3540:	ldur	x13, [x29, #-208]
    3544:	rev	w11, w11
    3548:	add	x10, x13, x10
    354c:	ldur	x13, [x29, #-152]
    3550:	ldr	x11, [x13, w11, uxtw #3]
    3554:	cbz	x11, 35ec <libintl_gettext@@Base+0x103c>
    3558:	ldr	w11, [x10], #8
    355c:	cmn	w11, #0x1
    3560:	rev	w11, w11
    3564:	b.ne	354c <libintl_gettext@@Base+0xf9c>  // b.any
    3568:	b	35e4 <libintl_gettext@@Base+0x1034>
    356c:	add	x9, x12, x8
    3570:	ldr	w9, [x9, #4]
    3574:	cmn	w9, #0x1
    3578:	b.eq	35a8 <libintl_gettext@@Base+0xff8>  // b.none
    357c:	ldur	x10, [x29, #-208]
    3580:	add	x10, x10, x8
    3584:	ldur	x11, [x29, #-152]
    3588:	ldr	x9, [x11, w9, uxtw #3]
    358c:	cbz	x9, 35a0 <libintl_gettext@@Base+0xff0>
    3590:	ldr	w9, [x10], #8
    3594:	cmn	w9, #0x1
    3598:	b.ne	3584 <libintl_gettext@@Base+0xfd4>  // b.any
    359c:	mov	w9, #0x1                   	// #1
    35a0:	cbnz	w9, 35ac <libintl_gettext@@Base+0xffc>
    35a4:	b	3850 <libintl_gettext@@Base+0x12a0>
    35a8:	mov	w9, #0x1                   	// #1
    35ac:	ldur	x10, [x29, #-232]
    35b0:	ldr	w11, [x10, x17, lsl #2]
    35b4:	add	x10, x12, x11
    35b8:	ldr	w10, [x10, #4]
    35bc:	cmn	w10, #0x1
    35c0:	b.eq	35f4 <libintl_gettext@@Base+0x1044>  // b.none
    35c4:	ldur	x13, [x29, #-208]
    35c8:	add	x11, x13, x11
    35cc:	ldur	x13, [x29, #-152]
    35d0:	ldr	x10, [x13, w10, uxtw #3]
    35d4:	cbz	x10, 35ec <libintl_gettext@@Base+0x103c>
    35d8:	ldr	w10, [x11], #8
    35dc:	cmn	w10, #0x1
    35e0:	b.ne	35cc <libintl_gettext@@Base+0x101c>  // b.any
    35e4:	cbnz	w9, 35f4 <libintl_gettext@@Base+0x1044>
    35e8:	b	3850 <libintl_gettext@@Base+0x12a0>
    35ec:	mov	w9, wzr
    35f0:	cbz	wzr, 3850 <libintl_gettext@@Base+0x12a0>
    35f4:	mov	w13, w16
    35f8:	stur	x17, [x29, #-160]
    35fc:	stur	w16, [x29, #-168]
    3600:	cbz	w14, 3614 <libintl_gettext@@Base+0x1064>
    3604:	rev	w8, w8
    3608:	ldr	w9, [x22, x8]
    360c:	rev	w9, w9
    3610:	b	3618 <libintl_gettext@@Base+0x1068>
    3614:	ldr	w9, [x22, x8]
    3618:	add	x10, x12, x8
    361c:	ldr	w11, [x10, #4]
    3620:	add	x26, x22, w9, uxtw
    3624:	cmp	w14, #0x0
    3628:	rev	w9, w11
    362c:	csel	w9, w11, w9, eq  // eq = none
    3630:	cmn	w9, #0x1
    3634:	sub	x9, x29, #0x18
    3638:	ldur	x9, [x9, #-256]
    363c:	add	x11, x9, x13, lsl #4
    3640:	b.eq	3710 <libintl_gettext@@Base+0x1160>  // b.none
    3644:	sub	x9, x29, #0x8
    3648:	stur	x11, [x9, #-256]
    364c:	str	x25, [x11, #8]!
    3650:	sub	x9, x29, #0x10
    3654:	stur	x11, [x9, #-256]
    3658:	ldur	x9, [x29, #-256]
    365c:	stur	x13, [x29, #-184]
    3660:	add	x21, x9, x8
    3664:	ldur	w8, [x21, #-4]
    3668:	cbnz	w14, 36a8 <libintl_gettext@@Base+0x10f8>
    366c:	b	36b8 <libintl_gettext@@Base+0x1108>
    3670:	ldur	x8, [x29, #-152]
    3674:	ldr	x27, [x8, w28, uxtw #3]
    3678:	mov	x0, x27
    367c:	bl	1cc0 <strlen@plt>
    3680:	mov	x28, x0
    3684:	mov	x0, x25
    3688:	mov	x1, x27
    368c:	mov	x2, x28
    3690:	bl	1c70 <memcpy@plt>
    3694:	ldr	w14, [x23, #24]
    3698:	add	x25, x25, x28
    369c:	add	x21, x21, #0x8
    36a0:	ldur	w8, [x21, #-4]
    36a4:	cbz	w14, 36b8 <libintl_gettext@@Base+0x1108>
    36a8:	ldr	w9, [x21]
    36ac:	rev	w8, w8
    36b0:	rev	w28, w9
    36b4:	b	36bc <libintl_gettext@@Base+0x110c>
    36b8:	ldr	w28, [x21]
    36bc:	cbz	w8, 36dc <libintl_gettext@@Base+0x112c>
    36c0:	mov	w27, w8
    36c4:	mov	x0, x25
    36c8:	mov	x1, x26
    36cc:	mov	x2, x27
    36d0:	bl	1c70 <memcpy@plt>
    36d4:	add	x25, x25, x27
    36d8:	add	x26, x26, x27
    36dc:	cmn	w28, #0x1
    36e0:	b.ne	3670 <libintl_gettext@@Base+0x10c0>  // b.any
    36e4:	sub	x8, x29, #0x10
    36e8:	ldur	x8, [x8, #-256]
    36ec:	sub	x9, x29, #0x8
    36f0:	ldr	w14, [x23, #24]
    36f4:	ldur	x9, [x9, #-256]
    36f8:	ldr	x8, [x8]
    36fc:	ldur	x12, [x29, #-200]
    3700:	ldur	x13, [x29, #-184]
    3704:	sub	x8, x25, x8
    3708:	str	x8, [x9]
    370c:	b	3724 <libintl_gettext@@Base+0x1174>
    3710:	ldr	w8, [x10]
    3714:	cmp	w14, #0x0
    3718:	rev	w9, w8
    371c:	csel	w8, w8, w9, eq  // eq = none
    3720:	stp	x8, x26, [x11]
    3724:	ldur	x8, [x29, #-232]
    3728:	ldur	x17, [x29, #-160]
    372c:	ldr	w8, [x8, x17, lsl #2]
    3730:	cbz	w14, 3744 <libintl_gettext@@Base+0x1194>
    3734:	rev	w8, w8
    3738:	ldr	w9, [x22, x8]
    373c:	rev	w9, w9
    3740:	b	3748 <libintl_gettext@@Base+0x1198>
    3744:	ldr	w9, [x22, x8]
    3748:	add	x10, x12, x8
    374c:	ldr	w11, [x10, #4]
    3750:	add	x26, x22, w9, uxtw
    3754:	cmp	w14, #0x0
    3758:	rev	w9, w11
    375c:	csel	w9, w11, w9, eq  // eq = none
    3760:	cmn	w9, #0x1
    3764:	sub	x9, x29, #0x20
    3768:	ldur	x9, [x9, #-256]
    376c:	add	x11, x9, x13, lsl #4
    3770:	b.eq	3830 <libintl_gettext@@Base+0x1280>  // b.none
    3774:	stur	x11, [x29, #-184]
    3778:	str	x25, [x11, #8]!
    377c:	sub	x9, x29, #0x8
    3780:	stur	x11, [x9, #-256]
    3784:	ldur	x9, [x29, #-256]
    3788:	add	x21, x9, x8
    378c:	ldur	w8, [x21, #-4]
    3790:	cbnz	w14, 37d0 <libintl_gettext@@Base+0x1220>
    3794:	b	37e0 <libintl_gettext@@Base+0x1230>
    3798:	ldur	x8, [x29, #-152]
    379c:	ldr	x27, [x8, w28, uxtw #3]
    37a0:	mov	x0, x27
    37a4:	bl	1cc0 <strlen@plt>
    37a8:	mov	x28, x0
    37ac:	mov	x0, x25
    37b0:	mov	x1, x27
    37b4:	mov	x2, x28
    37b8:	bl	1c70 <memcpy@plt>
    37bc:	ldr	w14, [x23, #24]
    37c0:	add	x25, x25, x28
    37c4:	add	x21, x21, #0x8
    37c8:	ldur	w8, [x21, #-4]
    37cc:	cbz	w14, 37e0 <libintl_gettext@@Base+0x1230>
    37d0:	ldr	w9, [x21]
    37d4:	rev	w8, w8
    37d8:	rev	w28, w9
    37dc:	b	37e4 <libintl_gettext@@Base+0x1234>
    37e0:	ldr	w28, [x21]
    37e4:	cbz	w8, 3804 <libintl_gettext@@Base+0x1254>
    37e8:	mov	w27, w8
    37ec:	mov	x0, x25
    37f0:	mov	x1, x26
    37f4:	mov	x2, x27
    37f8:	bl	1c70 <memcpy@plt>
    37fc:	add	x25, x25, x27
    3800:	add	x26, x26, x27
    3804:	cmn	w28, #0x1
    3808:	b.ne	3798 <libintl_gettext@@Base+0x11e8>  // b.any
    380c:	sub	x8, x29, #0x8
    3810:	ldur	x8, [x8, #-256]
    3814:	ldur	x9, [x29, #-184]
    3818:	ldur	x12, [x29, #-200]
    381c:	ldur	x17, [x29, #-160]
    3820:	ldr	x8, [x8]
    3824:	sub	x8, x25, x8
    3828:	str	x8, [x9]
    382c:	b	3844 <libintl_gettext@@Base+0x1294>
    3830:	ldr	w8, [x10]
    3834:	cmp	w14, #0x0
    3838:	rev	w9, w8
    383c:	csel	w8, w8, w9, eq  // eq = none
    3840:	stp	x8, x26, [x11]
    3844:	ldur	w16, [x29, #-168]
    3848:	ldur	x15, [x29, #-240]
    384c:	add	w16, w16, #0x1
    3850:	ldur	x8, [x29, #-224]
    3854:	add	x17, x17, #0x1
    3858:	cmp	x17, x8
    385c:	b.cc	34c0 <libintl_gettext@@Base+0xf10>  // b.lo, b.ul, b.last
    3860:	ldur	w8, [x29, #-244]
    3864:	cmp	w16, w8
    3868:	b.ne	3bac <libintl_gettext@@Base+0x15fc>  // b.any
    386c:	sub	x9, x29, #0x28
    3870:	ldr	w8, [x23, #88]
    3874:	ldur	x28, [x9, #-256]
    3878:	cbz	w8, 39d0 <libintl_gettext@@Base+0x1420>
    387c:	ldr	w10, [x23, #104]
    3880:	ldr	x9, [x23, #96]
    3884:	cbz	w10, 396c <libintl_gettext@@Base+0x13bc>
    3888:	cmp	w8, #0x3
    388c:	b.ls	38c8 <libintl_gettext@@Base+0x1318>  // b.plast
    3890:	sub	x12, x29, #0x28
    3894:	ldur	x12, [x12, #-256]
    3898:	lsl	x10, x8, #2
    389c:	add	x11, x9, x10
    38a0:	cmp	x12, x11
    38a4:	b.cs	3a84 <libintl_gettext@@Base+0x14d4>  // b.hs, b.nlast
    38a8:	sub	x11, x29, #0x30
    38ac:	ldur	x11, [x11, #-256]
    38b0:	add	x10, x10, x11, lsl #5
    38b4:	sub	x11, x29, #0x18
    38b8:	ldur	x11, [x11, #-256]
    38bc:	add	x10, x11, x10
    38c0:	cmp	x10, x9
    38c4:	b.ls	3a84 <libintl_gettext@@Base+0x14d4>  // b.plast
    38c8:	sub	x11, x29, #0x28
    38cc:	ldur	x28, [x11, #-256]
    38d0:	mov	x10, xzr
    38d4:	lsl	x11, x10, #2
    38d8:	ldr	w12, [x9, x11]
    38dc:	add	x10, x10, #0x1
    38e0:	cmp	x10, x8
    38e4:	rev	w12, w12
    38e8:	str	w12, [x28, x11]
    38ec:	b.cc	38d4 <libintl_gettext@@Base+0x1324>  // b.lo, b.ul, b.last
    38f0:	b	39d0 <libintl_gettext@@Base+0x1420>
    38f4:	mov	x0, x21
    38f8:	bl	1e10 <malloc@plt>
    38fc:	cbz	x0, 3954 <libintl_gettext@@Base+0x13a4>
    3900:	mov	x22, x0
    3904:	mov	x26, x0
    3908:	mov	x27, x21
    390c:	b	391c <libintl_gettext@@Base+0x136c>
    3910:	add	x26, x26, x0
    3914:	sub	x21, x21, x0
    3918:	cbz	x21, 3960 <libintl_gettext@@Base+0x13b0>
    391c:	mov	w0, w23
    3920:	mov	x1, x26
    3924:	mov	x2, x21
    3928:	bl	2040 <read@plt>
    392c:	cmp	x0, #0x0
    3930:	b.gt	3910 <libintl_gettext@@Base+0x1360>
    3934:	cmn	x0, #0x1
    3938:	b.ne	394c <libintl_gettext@@Base+0x139c>  // b.any
    393c:	bl	20c0 <__errno_location@plt>
    3940:	ldr	w8, [x0]
    3944:	cmp	w8, #0x4
    3948:	b.eq	3918 <libintl_gettext@@Base+0x1368>  // b.none
    394c:	mov	x0, x22
    3950:	bl	1fb0 <free@plt>
    3954:	mov	w0, w23
    3958:	bl	1f00 <close@plt>
    395c:	b	3b20 <libintl_gettext@@Base+0x1570>
    3960:	mov	w25, wzr
    3964:	mov	x21, x27
    3968:	b	2958 <libintl_gettext@@Base+0x3a8>
    396c:	cmp	w8, #0x8
    3970:	b.cc	39ac <libintl_gettext@@Base+0x13fc>  // b.lo, b.ul, b.last
    3974:	sub	x12, x29, #0x28
    3978:	ldur	x12, [x12, #-256]
    397c:	lsl	x10, x8, #2
    3980:	add	x11, x9, x10
    3984:	cmp	x12, x11
    3988:	b.cs	3b5c <libintl_gettext@@Base+0x15ac>  // b.hs, b.nlast
    398c:	sub	x11, x29, #0x30
    3990:	ldur	x11, [x11, #-256]
    3994:	add	x10, x10, x11, lsl #5
    3998:	sub	x11, x29, #0x18
    399c:	ldur	x11, [x11, #-256]
    39a0:	add	x10, x11, x10
    39a4:	cmp	x10, x9
    39a8:	b.ls	3b5c <libintl_gettext@@Base+0x15ac>  // b.plast
    39ac:	sub	x11, x29, #0x28
    39b0:	ldur	x28, [x11, #-256]
    39b4:	mov	x10, xzr
    39b8:	lsl	x11, x10, #2
    39bc:	ldr	w12, [x9, x11]
    39c0:	add	x10, x10, #0x1
    39c4:	cmp	x10, x8
    39c8:	str	w12, [x28, x11]
    39cc:	b.cc	39b8 <libintl_gettext@@Base+0x1408>  // b.lo, b.ul, b.last
    39d0:	sub	x8, x29, #0x18
    39d4:	ldur	x26, [x8, #-256]
    39d8:	sub	x8, x29, #0x30
    39dc:	ldur	x25, [x29, #-216]
    39e0:	ldur	x27, [x8, #-256]
    39e4:	mov	x21, xzr
    39e8:	b	3a04 <libintl_gettext@@Base+0x1454>
    39ec:	ldr	w8, [x25]
    39f0:	add	x21, x21, #0x1
    39f4:	cmp	x21, x27
    39f8:	add	w8, w8, w21
    39fc:	str	w8, [x9]
    3a00:	b.cs	3a5c <libintl_gettext@@Base+0x14ac>  // b.hs, b.nlast
    3a04:	add	x8, x26, x21, lsl #4
    3a08:	ldr	x0, [x8, #8]
    3a0c:	bl	284c <libintl_gettext@@Base+0x29c>
    3a10:	ldr	w10, [x23, #88]
    3a14:	udiv	w8, w0, w10
    3a18:	msub	w8, w8, w10, w0
    3a1c:	add	x9, x28, w8, uxtw #2
    3a20:	ldr	w11, [x9]
    3a24:	cbz	w11, 39ec <libintl_gettext@@Base+0x143c>
    3a28:	sub	w9, w10, #0x2
    3a2c:	udiv	w11, w0, w9
    3a30:	msub	w9, w11, w9, w0
    3a34:	add	w9, w9, #0x1
    3a38:	sub	w10, w10, w9
    3a3c:	neg	w11, w10
    3a40:	cmp	w8, w10
    3a44:	csel	w12, w9, w11, cc  // cc = lo, ul, last
    3a48:	add	w8, w12, w8
    3a4c:	ldr	w12, [x28, w8, uxtw #2]
    3a50:	cbnz	w12, 3a40 <libintl_gettext@@Base+0x1490>
    3a54:	add	x9, x28, w8, uxtw #2
    3a58:	b	39ec <libintl_gettext@@Base+0x143c>
    3a5c:	ldur	w8, [x29, #-244]
    3a60:	str	x28, [x23, #96]
    3a64:	str	wzr, [x23, #104]
    3a68:	str	w8, [x23, #64]
    3a6c:	sub	x8, x29, #0x20
    3a70:	ldur	x8, [x8, #-256]
    3a74:	stp	x26, x8, [x23, #72]
    3a78:	stp	xzr, xzr, [x23, #112]
    3a7c:	cbnz	x24, 3480 <libintl_gettext@@Base+0xed0>
    3a80:	b	348c <libintl_gettext@@Base+0xedc>
    3a84:	sub	x12, x29, #0x18
    3a88:	sub	x13, x29, #0x30
    3a8c:	ldur	x12, [x12, #-256]
    3a90:	ldur	x13, [x13, #-256]
    3a94:	and	x10, x8, #0xfffffffc
    3a98:	add	x11, x9, #0x8
    3a9c:	add	x12, x12, x13, lsl #5
    3aa0:	add	x12, x12, #0x8
    3aa4:	mov	x13, x10
    3aa8:	ldp	d0, d1, [x11, #-8]
    3aac:	add	x11, x11, #0x10
    3ab0:	subs	x13, x13, #0x4
    3ab4:	rev32	v0.8b, v0.8b
    3ab8:	rev32	v1.8b, v1.8b
    3abc:	stp	d0, d1, [x12, #-8]
    3ac0:	add	x12, x12, #0x10
    3ac4:	b.ne	3aa8 <libintl_gettext@@Base+0x14f8>  // b.any
    3ac8:	sub	x11, x29, #0x28
    3acc:	ldur	x28, [x11, #-256]
    3ad0:	cmp	x10, x8
    3ad4:	b.ne	38d4 <libintl_gettext@@Base+0x1324>  // b.any
    3ad8:	b	39d0 <libintl_gettext@@Base+0x1420>
    3adc:	cbz	x24, 3aec <libintl_gettext@@Base+0x153c>
    3ae0:	add	x0, x23, #0x80
    3ae4:	bl	1e20 <pthread_rwlock_destroy@plt>
    3ae8:	cbnz	w0, 3bac <libintl_gettext@@Base+0x15fc>
    3aec:	ldr	x0, [x23, #32]
    3af0:	bl	1fb0 <free@plt>
    3af4:	ldur	w8, [x29, #-172]
    3af8:	cbz	w8, 3b0c <libintl_gettext@@Base+0x155c>
    3afc:	ldur	x1, [x29, #-192]
    3b00:	mov	x0, x22
    3b04:	bl	2010 <munmap@plt>
    3b08:	b	3b14 <libintl_gettext@@Base+0x1564>
    3b0c:	mov	x0, x22
    3b10:	bl	1fb0 <free@plt>
    3b14:	mov	x0, x23
    3b18:	bl	1fb0 <free@plt>
    3b1c:	str	xzr, [x19, #16]
    3b20:	mov	w8, #0x1                   	// #1
    3b24:	str	w8, [x19, #8]
    3b28:	cbz	x24, 3b3c <libintl_gettext@@Base+0x158c>
    3b2c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3b30:	add	x0, x0, #0x2a0
    3b34:	bl	20f0 <pthread_mutex_unlock@plt>
    3b38:	cbnz	w0, 3bac <libintl_gettext@@Base+0x15fc>
    3b3c:	mov	sp, x29
    3b40:	ldp	x20, x19, [sp, #80]
    3b44:	ldp	x22, x21, [sp, #64]
    3b48:	ldp	x24, x23, [sp, #48]
    3b4c:	ldp	x26, x25, [sp, #32]
    3b50:	ldp	x28, x27, [sp, #16]
    3b54:	ldp	x29, x30, [sp], #96
    3b58:	ret
    3b5c:	sub	x12, x29, #0x18
    3b60:	sub	x13, x29, #0x30
    3b64:	ldur	x12, [x12, #-256]
    3b68:	ldur	x13, [x13, #-256]
    3b6c:	and	x10, x8, #0xfffffff8
    3b70:	add	x11, x9, #0x10
    3b74:	add	x12, x12, x13, lsl #5
    3b78:	add	x12, x12, #0x10
    3b7c:	mov	x13, x10
    3b80:	ldp	q0, q1, [x11, #-16]
    3b84:	add	x11, x11, #0x20
    3b88:	subs	x13, x13, #0x8
    3b8c:	stp	q0, q1, [x12, #-16]
    3b90:	add	x12, x12, #0x20
    3b94:	b.ne	3b80 <libintl_gettext@@Base+0x15d0>  // b.any
    3b98:	sub	x11, x29, #0x28
    3b9c:	ldur	x28, [x11, #-256]
    3ba0:	cmp	x10, x8
    3ba4:	b.ne	39b8 <libintl_gettext@@Base+0x1408>  // b.any
    3ba8:	b	39d0 <libintl_gettext@@Base+0x1420>
    3bac:	bl	1f20 <abort@plt>

0000000000003bb0 <_nl_expand_alias@@Base>:
    3bb0:	stp	x29, x30, [sp, #-96]!
    3bb4:	stp	x28, x27, [sp, #16]
    3bb8:	stp	x26, x25, [sp, #32]
    3bbc:	stp	x24, x23, [sp, #48]
    3bc0:	stp	x22, x21, [sp, #64]
    3bc4:	stp	x20, x19, [sp, #80]
    3bc8:	adrp	x20, 17000 <bind_textdomain_codeset@@Base+0x10004>
    3bcc:	ldr	x20, [x20, #4064]
    3bd0:	mov	x19, x0
    3bd4:	mov	x29, sp
    3bd8:	cbz	x20, 3bec <_nl_expand_alias@@Base+0x3c>
    3bdc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3be0:	add	x0, x0, #0x398
    3be4:	bl	20e0 <pthread_mutex_lock@plt>
    3be8:	cbnz	w0, 3d0c <_nl_expand_alias@@Base+0x15c>
    3bec:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3bf0:	ldr	x8, [x21, #864]
    3bf4:	cbnz	x8, 3c04 <_nl_expand_alias@@Base+0x54>
    3bf8:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    3bfc:	add	x8, x8, #0x44d
    3c00:	str	x8, [x21, #864]
    3c04:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3c08:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3c0c:	ldr	x25, [x22, #872]
    3c10:	cbz	x25, 3c60 <_nl_expand_alias@@Base+0xb0>
    3c14:	ldr	x24, [x23, #880]
    3c18:	mov	x26, xzr
    3c1c:	b	3c34 <_nl_expand_alias@@Base+0x84>
    3c20:	add	x26, x27, #0x1
    3c24:	mov	x27, x25
    3c28:	cmp	x26, x27
    3c2c:	mov	x25, x27
    3c30:	b.cs	3c60 <_nl_expand_alias@@Base+0xb0>  // b.hs, b.nlast
    3c34:	add	x8, x25, x26
    3c38:	lsr	x27, x8, #1
    3c3c:	add	x28, x24, x27, lsl #4
    3c40:	ldr	x1, [x28]
    3c44:	mov	x0, x19
    3c48:	bl	1ec0 <strcasecmp@plt>
    3c4c:	tbnz	w0, #31, 3c28 <_nl_expand_alias@@Base+0x78>
    3c50:	cbnz	w0, 3c20 <_nl_expand_alias@@Base+0x70>
    3c54:	b	3cd4 <_nl_expand_alias@@Base+0x124>
    3c58:	mov	x0, xzr
    3c5c:	cbnz	xzr, 3c0c <_nl_expand_alias@@Base+0x5c>
    3c60:	ldr	x0, [x21, #864]
    3c64:	ldrb	w8, [x0]
    3c68:	cmp	w8, #0x3a
    3c6c:	b.eq	3c78 <_nl_expand_alias@@Base+0xc8>  // b.none
    3c70:	cbnz	w8, 3c88 <_nl_expand_alias@@Base+0xd8>
    3c74:	b	3cc8 <_nl_expand_alias@@Base+0x118>
    3c78:	ldrb	w8, [x0, #1]!
    3c7c:	cmp	w8, #0x3a
    3c80:	b.eq	3c78 <_nl_expand_alias@@Base+0xc8>  // b.none
    3c84:	str	x0, [x21, #864]
    3c88:	add	x9, x0, #0x1
    3c8c:	ands	w8, w8, #0xff
    3c90:	b.eq	3cac <_nl_expand_alias@@Base+0xfc>  // b.none
    3c94:	cmp	w8, #0x3a
    3c98:	b.eq	3cac <_nl_expand_alias@@Base+0xfc>  // b.none
    3c9c:	str	x9, [x21, #864]
    3ca0:	ldrb	w8, [x9], #1
    3ca4:	ands	w8, w8, #0xff
    3ca8:	b.ne	3c94 <_nl_expand_alias@@Base+0xe4>  // b.any
    3cac:	sub	x8, x9, #0x1
    3cb0:	cmp	x0, x8
    3cb4:	b.cs	3c58 <_nl_expand_alias@@Base+0xa8>  // b.hs, b.nlast
    3cb8:	sub	w1, w8, w0
    3cbc:	bl	3d1c <_nl_expand_alias@@Base+0x16c>
    3cc0:	cbz	x0, 3c60 <_nl_expand_alias@@Base+0xb0>
    3cc4:	b	3c0c <_nl_expand_alias@@Base+0x5c>
    3cc8:	mov	x19, xzr
    3ccc:	cbnz	x20, 3cdc <_nl_expand_alias@@Base+0x12c>
    3cd0:	b	3cec <_nl_expand_alias@@Base+0x13c>
    3cd4:	ldr	x19, [x28, #8]
    3cd8:	cbz	x20, 3cec <_nl_expand_alias@@Base+0x13c>
    3cdc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3ce0:	add	x0, x0, #0x398
    3ce4:	bl	20f0 <pthread_mutex_unlock@plt>
    3ce8:	cbnz	w0, 3d0c <_nl_expand_alias@@Base+0x15c>
    3cec:	mov	x0, x19
    3cf0:	ldp	x20, x19, [sp, #80]
    3cf4:	ldp	x22, x21, [sp, #64]
    3cf8:	ldp	x24, x23, [sp, #48]
    3cfc:	ldp	x26, x25, [sp, #32]
    3d00:	ldp	x28, x27, [sp, #16]
    3d04:	ldp	x29, x30, [sp], #96
    3d08:	ret
    3d0c:	bl	1f20 <abort@plt>
    3d10:	ldr	x0, [x0]
    3d14:	ldr	x1, [x1]
    3d18:	b	1ec0 <strcasecmp@plt>
    3d1c:	stp	x29, x30, [sp, #-96]!
    3d20:	stp	x28, x27, [sp, #16]
    3d24:	stp	x26, x25, [sp, #32]
    3d28:	stp	x24, x23, [sp, #48]
    3d2c:	stp	x22, x21, [sp, #64]
    3d30:	stp	x20, x19, [sp, #80]
    3d34:	mov	x29, sp
    3d38:	sub	sp, sp, #0x1d0
    3d3c:	sxtw	x20, w1
    3d40:	add	x9, x20, #0x1d
    3d44:	and	x9, x9, #0xfffffffffffffff0
    3d48:	mov	x10, sp
    3d4c:	sub	x21, x10, x9
    3d50:	mov	x19, sp
    3d54:	mov	x8, x0
    3d58:	mov	sp, x21
    3d5c:	mov	x0, x21
    3d60:	mov	x1, x8
    3d64:	mov	x2, x20
    3d68:	bl	1c70 <memcpy@plt>
    3d6c:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    3d70:	add	x8, x8, #0x3ee
    3d74:	ldr	x9, [x8]
    3d78:	ldur	x8, [x8, #6]
    3d7c:	add	x10, x21, x20
    3d80:	sub	x1, x29, #0x10
    3d84:	mov	x0, x21
    3d88:	str	x9, [x10]
    3d8c:	stur	x8, [x10, #6]
    3d90:	bl	68ec <libintl_set_relocation_prefix@@Base+0x19c>
    3d94:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    3d98:	add	x1, x1, #0x7c0
    3d9c:	bl	1e00 <fopen@plt>
    3da0:	ldur	x8, [x29, #-16]
    3da4:	mov	x21, x0
    3da8:	mov	x0, x8
    3dac:	bl	1fb0 <free@plt>
    3db0:	cbz	x21, 4134 <_nl_expand_alias@@Base+0x584>
    3db4:	mov	w1, #0x2                   	// #2
    3db8:	mov	x0, x21
    3dbc:	bl	20a0 <__fsetlocking@plt>
    3dc0:	ldrb	w8, [x21]
    3dc4:	tbnz	w8, #4, 413c <_nl_expand_alias@@Base+0x58c>
    3dc8:	add	x8, x19, #0x30
    3dcc:	sub	x20, x8, #0x1
    3dd0:	orr	x25, x8, #0x1
    3dd4:	str	xzr, [x19, #40]
    3dd8:	stp	x25, x20, [x19, #8]
    3ddc:	b	3e64 <_nl_expand_alias@@Base+0x2b4>
    3de0:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3de4:	add	x26, x26, #0x368
    3de8:	ldr	x0, [x26, #40]
    3dec:	ldr	x27, [x26]
    3df0:	add	x28, x0, x20
    3df4:	mov	x22, x0
    3df8:	mov	x0, x28
    3dfc:	mov	x1, x23
    3e00:	mov	x2, x25
    3e04:	bl	1c70 <memcpy@plt>
    3e08:	ldr	x8, [x26, #8]
    3e0c:	mov	x1, x24
    3e10:	ldr	x24, [x19, #24]
    3e14:	add	x20, x20, x25
    3e18:	add	x23, x22, x20
    3e1c:	add	x25, x8, x27, lsl #4
    3e20:	mov	x0, x23
    3e24:	mov	x2, x24
    3e28:	str	x28, [x25]
    3e2c:	str	x20, [x26, #24]
    3e30:	bl	1c70 <memcpy@plt>
    3e34:	str	x23, [x25, #8]
    3e38:	add	x8, x20, x24
    3e3c:	str	x8, [x26, #24]
    3e40:	ldp	x22, x8, [x19, #32]
    3e44:	ldp	x25, x20, [x19, #8]
    3e48:	add	x9, x27, #0x1
    3e4c:	str	x9, [x26]
    3e50:	add	x8, x8, #0x1
    3e54:	str	x8, [x19, #40]
    3e58:	cbz	x22, 3f64 <_nl_expand_alias@@Base+0x3b4>
    3e5c:	ldrb	w8, [x21]
    3e60:	tbnz	w8, #4, 414c <_nl_expand_alias@@Base+0x59c>
    3e64:	add	x0, x19, #0x30
    3e68:	mov	w1, #0x190                 	// #400
    3e6c:	mov	x2, x21
    3e70:	bl	1d40 <fgets_unlocked@plt>
    3e74:	cbz	x0, 414c <_nl_expand_alias@@Base+0x59c>
    3e78:	add	x0, x19, #0x30
    3e7c:	mov	w1, #0xa                   	// #10
    3e80:	bl	1ff0 <strchr@plt>
    3e84:	mov	x22, x0
    3e88:	bl	1f80 <__ctype_b_loc@plt>
    3e8c:	ldr	x8, [x0]
    3e90:	mov	x10, x25
    3e94:	mov	x23, x20
    3e98:	ldrb	w11, [x23, #1]!
    3e9c:	mov	x9, x10
    3ea0:	add	x10, x10, #0x1
    3ea4:	ldrh	w12, [x8, x11, lsl #1]
    3ea8:	tbnz	w12, #13, 3e98 <_nl_expand_alias@@Base+0x2e8>
    3eac:	cbz	w11, 3e58 <_nl_expand_alias@@Base+0x2a8>
    3eb0:	cmp	w11, #0x23
    3eb4:	b.eq	3e58 <_nl_expand_alias@@Base+0x2a8>  // b.none
    3eb8:	ldrb	w10, [x9]
    3ebc:	cbz	x10, 3ed4 <_nl_expand_alias@@Base+0x324>
    3ec0:	ldrh	w10, [x8, x10, lsl #1]
    3ec4:	add	x9, x9, #0x1
    3ec8:	tbz	w10, #13, 3eb8 <_nl_expand_alias@@Base+0x308>
    3ecc:	sturb	wzr, [x9, #-1]
    3ed0:	ldr	x8, [x0]
    3ed4:	adrp	x13, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3ed8:	sub	x24, x9, #0x1
    3edc:	add	x10, x9, #0x1
    3ee0:	add	x13, x13, #0x368
    3ee4:	ldrb	w11, [x24, #1]!
    3ee8:	mov	x9, x10
    3eec:	add	x10, x10, #0x1
    3ef0:	ldrh	w12, [x8, x11, lsl #1]
    3ef4:	tbnz	w12, #13, 3ee4 <_nl_expand_alias@@Base+0x334>
    3ef8:	cbz	w11, 3e58 <_nl_expand_alias@@Base+0x2a8>
    3efc:	ldrb	w10, [x9]
    3f00:	cbz	x10, 3f20 <_nl_expand_alias@@Base+0x370>
    3f04:	ldrh	w11, [x8, x10, lsl #1]
    3f08:	add	x9, x9, #0x1
    3f0c:	tbz	w11, #13, 3efc <_nl_expand_alias@@Base+0x34c>
    3f10:	cmp	w10, #0xa
    3f14:	b.ne	3f8c <_nl_expand_alias@@Base+0x3dc>  // b.any
    3f18:	mov	w8, #0xa00                 	// #2560
    3f1c:	sturh	w8, [x9, #-1]
    3f20:	ldr	x9, [x13]
    3f24:	ldr	x8, [x13, #16]
    3f28:	cmp	x9, x8
    3f2c:	b.cc	3fa0 <_nl_expand_alias@@Base+0x3f0>  // b.lo, b.ul, b.last
    3f30:	adrp	x10, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3f34:	ldr	x0, [x10, #880]
    3f38:	lsl	x9, x8, #1
    3f3c:	cmp	x8, #0x0
    3f40:	mov	w8, #0x64                  	// #100
    3f44:	csel	x20, x8, x9, eq  // eq = none
    3f48:	lsl	x1, x20, #4
    3f4c:	bl	1ed0 <realloc@plt>
    3f50:	cbz	x0, 414c <_nl_expand_alias@@Base+0x59c>
    3f54:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3f58:	add	x8, x8, #0x370
    3f5c:	stp	x0, x20, [x8]
    3f60:	b	3fa0 <_nl_expand_alias@@Base+0x3f0>
    3f64:	add	x0, x19, #0x30
    3f68:	mov	w1, #0x190                 	// #400
    3f6c:	mov	x2, x21
    3f70:	bl	1d40 <fgets_unlocked@plt>
    3f74:	cbz	x0, 3e5c <_nl_expand_alias@@Base+0x2ac>
    3f78:	add	x0, x19, #0x30
    3f7c:	mov	w1, #0xa                   	// #10
    3f80:	bl	1ff0 <strchr@plt>
    3f84:	cbz	x0, 3f64 <_nl_expand_alias@@Base+0x3b4>
    3f88:	b	3e5c <_nl_expand_alias@@Base+0x2ac>
    3f8c:	sturb	wzr, [x9, #-1]
    3f90:	ldr	x9, [x13]
    3f94:	ldr	x8, [x13, #16]
    3f98:	cmp	x9, x8
    3f9c:	b.cs	3f30 <_nl_expand_alias@@Base+0x380>  // b.hs, b.nlast
    3fa0:	mov	x0, x23
    3fa4:	bl	1cc0 <strlen@plt>
    3fa8:	add	x25, x0, #0x1
    3fac:	mov	x0, x24
    3fb0:	bl	1cc0 <strlen@plt>
    3fb4:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3fb8:	add	x8, x8, #0x380
    3fbc:	ldp	x20, x8, [x8]
    3fc0:	add	x26, x0, #0x1
    3fc4:	add	x9, x26, x25
    3fc8:	stp	x26, x22, [x19, #24]
    3fcc:	add	x10, x9, x20
    3fd0:	cmp	x10, x8
    3fd4:	b.ls	3de0 <_nl_expand_alias@@Base+0x230>  // b.plast
    3fd8:	adrp	x10, 18000 <bind_textdomain_codeset@@Base+0x11004>
    3fdc:	ldr	x0, [x10, #912]
    3fe0:	cmp	x9, #0x400
    3fe4:	mov	w10, #0x400                 	// #1024
    3fe8:	csel	x9, x9, x10, hi  // hi = pmore
    3fec:	add	x28, x9, x8
    3ff0:	mov	x1, x28
    3ff4:	bl	1ed0 <realloc@plt>
    3ff8:	cbz	x0, 414c <_nl_expand_alias@@Base+0x59c>
    3ffc:	adrp	x13, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4000:	add	x13, x13, #0x368
    4004:	ldr	x8, [x13, #40]
    4008:	ldr	x27, [x13]
    400c:	cmp	x8, x0
    4010:	b.eq	4018 <_nl_expand_alias@@Base+0x468>  // b.none
    4014:	cbnz	x27, 4030 <_nl_expand_alias@@Base+0x480>
    4018:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    401c:	add	x8, x8, #0x380
    4020:	ldr	x20, [x8]
    4024:	mov	x26, x13
    4028:	stp	x28, x0, [x8, #8]
    402c:	b	3df0 <_nl_expand_alias@@Base+0x240>
    4030:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4034:	ldr	x10, [x9, #880]
    4038:	cmp	x27, #0x4
    403c:	sub	x8, x0, x8
    4040:	b.cs	404c <_nl_expand_alias@@Base+0x49c>  // b.hs, b.nlast
    4044:	mov	x9, xzr
    4048:	b	4108 <_nl_expand_alias@@Base+0x558>
    404c:	sub	x9, x27, #0x1
    4050:	mvn	x13, x10
    4054:	cmp	xzr, x9, lsr #60
    4058:	lsl	x12, x9, #4
    405c:	mov	x18, x0
    4060:	mov	x16, x27
    4064:	cset	w11, ne  // ne = any
    4068:	cmp	x12, x13
    406c:	mov	x9, xzr
    4070:	b.hi	40f8 <_nl_expand_alias@@Base+0x548>  // b.pmore
    4074:	tbnz	w11, #0, 40f8 <_nl_expand_alias@@Base+0x548>
    4078:	add	x13, x10, #0x8
    407c:	mvn	x13, x13
    4080:	cmp	x12, x13
    4084:	b.hi	40f8 <_nl_expand_alias@@Base+0x548>  // b.pmore
    4088:	adrp	x13, 18000 <bind_textdomain_codeset@@Base+0x11004>
    408c:	add	x13, x13, #0x368
    4090:	mov	x27, x16
    4094:	mov	x0, x18
    4098:	tbnz	w11, #0, 4108 <_nl_expand_alias@@Base+0x558>
    409c:	and	x9, x27, #0xfffffffffffffffc
    40a0:	add	x11, x10, #0x20
    40a4:	mov	x12, x9
    40a8:	sub	x13, x11, #0x20
    40ac:	ld2	{v0.2d, v1.2d}, [x11]
    40b0:	ld2	{v2.2d, v3.2d}, [x13]
    40b4:	dup	v4.2d, x8
    40b8:	subs	x12, x12, #0x4
    40bc:	add	v5.2d, v0.2d, v4.2d
    40c0:	add	v16.2d, v2.2d, v4.2d
    40c4:	add	v6.2d, v1.2d, v4.2d
    40c8:	add	v17.2d, v3.2d, v4.2d
    40cc:	st2	{v16.2d, v17.2d}, [x13]
    40d0:	st2	{v5.2d, v6.2d}, [x11]
    40d4:	add	x11, x11, #0x40
    40d8:	b.ne	40a8 <_nl_expand_alias@@Base+0x4f8>  // b.any
    40dc:	adrp	x13, 18000 <bind_textdomain_codeset@@Base+0x11004>
    40e0:	mov	x27, x16
    40e4:	cmp	x16, x9
    40e8:	add	x13, x13, #0x368
    40ec:	mov	x0, x18
    40f0:	b.eq	4018 <_nl_expand_alias@@Base+0x468>  // b.none
    40f4:	b	4108 <_nl_expand_alias@@Base+0x558>
    40f8:	adrp	x13, 18000 <bind_textdomain_codeset@@Base+0x11004>
    40fc:	add	x13, x13, #0x368
    4100:	mov	x27, x16
    4104:	mov	x0, x18
    4108:	add	x10, x10, x9, lsl #4
    410c:	add	x10, x10, #0x8
    4110:	ldp	x11, x12, [x10, #-8]
    4114:	add	x9, x9, #0x1
    4118:	cmp	x9, x27
    411c:	add	x11, x11, x8
    4120:	add	x12, x12, x8
    4124:	stp	x11, x12, [x10, #-8]
    4128:	add	x10, x10, #0x10
    412c:	b.cc	4110 <_nl_expand_alias@@Base+0x560>  // b.lo, b.ul, b.last
    4130:	b	4018 <_nl_expand_alias@@Base+0x468>
    4134:	mov	x20, xzr
    4138:	b	4178 <_nl_expand_alias@@Base+0x5c8>
    413c:	mov	x0, x21
    4140:	bl	1de0 <fclose@plt>
    4144:	mov	x20, xzr
    4148:	b	4178 <_nl_expand_alias@@Base+0x5c8>
    414c:	mov	x0, x21
    4150:	bl	1de0 <fclose@plt>
    4154:	ldr	x20, [x19, #40]
    4158:	cbz	x20, 4178 <_nl_expand_alias@@Base+0x5c8>
    415c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4160:	add	x8, x8, #0x368
    4164:	ldp	x1, x0, [x8]
    4168:	adrp	x3, 3000 <libintl_gettext@@Base+0xa50>
    416c:	add	x3, x3, #0xd10
    4170:	mov	w2, #0x10                  	// #16
    4174:	bl	1d80 <qsort@plt>
    4178:	mov	x0, x20
    417c:	mov	sp, x29
    4180:	ldp	x20, x19, [sp, #80]
    4184:	ldp	x22, x21, [sp, #64]
    4188:	ldp	x24, x23, [sp, #48]
    418c:	ldp	x26, x25, [sp, #32]
    4190:	ldp	x28, x27, [sp, #16]
    4194:	ldp	x29, x30, [sp], #96
    4198:	ret

000000000000419c <libintl_textdomain@@Base>:
    419c:	stp	x29, x30, [sp, #-64]!
    41a0:	stp	x24, x23, [sp, #16]
    41a4:	stp	x22, x21, [sp, #32]
    41a8:	stp	x20, x19, [sp, #48]
    41ac:	mov	x29, sp
    41b0:	cbz	x0, 4230 <libintl_textdomain@@Base+0x94>
    41b4:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0x10004>
    41b8:	ldr	x22, [x22, #4064]
    41bc:	mov	x20, x0
    41c0:	cbz	x22, 41d4 <libintl_textdomain@@Base+0x38>
    41c4:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x10004>
    41c8:	ldr	x0, [x0, #4048]
    41cc:	bl	1f30 <pthread_rwlock_wrlock@plt>
    41d0:	cbnz	w0, 42c0 <libintl_textdomain@@Base+0x124>
    41d4:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x10004>
    41d8:	ldr	x23, [x23, #4008]
    41dc:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0x10004>
    41e0:	ldrb	w8, [x20]
    41e4:	ldr	x19, [x23]
    41e8:	ldr	x24, [x24, #4024]
    41ec:	cbz	w8, 4240 <libintl_textdomain@@Base+0xa4>
    41f0:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x10004>
    41f4:	ldr	x21, [x21, #4024]
    41f8:	mov	x0, x20
    41fc:	mov	x1, x21
    4200:	bl	1f60 <strcmp@plt>
    4204:	cbz	w0, 4244 <libintl_textdomain@@Base+0xa8>
    4208:	mov	x0, x20
    420c:	mov	x1, x19
    4210:	bl	1f60 <strcmp@plt>
    4214:	cbz	w0, 42a4 <libintl_textdomain@@Base+0x108>
    4218:	mov	x0, x20
    421c:	bl	1ee0 <strdup@plt>
    4220:	mov	x21, x0
    4224:	cbnz	x0, 4244 <libintl_textdomain@@Base+0xa8>
    4228:	mov	x19, xzr
    422c:	b	4278 <libintl_textdomain@@Base+0xdc>
    4230:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    4234:	ldr	x8, [x8, #4008]
    4238:	ldr	x19, [x8]
    423c:	b	428c <libintl_textdomain@@Base+0xf0>
    4240:	mov	x21, x24
    4244:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    4248:	ldr	x8, [x8, #4032]
    424c:	cmp	x19, x24
    4250:	str	x21, [x23]
    4254:	ldr	w9, [x8]
    4258:	add	w9, w9, #0x1
    425c:	str	w9, [x8]
    4260:	b.eq	4274 <libintl_textdomain@@Base+0xd8>  // b.none
    4264:	cmp	x19, x21
    4268:	b.eq	4274 <libintl_textdomain@@Base+0xd8>  // b.none
    426c:	mov	x0, x19
    4270:	bl	1fb0 <free@plt>
    4274:	mov	x19, x21
    4278:	cbz	x22, 428c <libintl_textdomain@@Base+0xf0>
    427c:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x10004>
    4280:	ldr	x0, [x0, #4048]
    4284:	bl	1fd0 <pthread_rwlock_unlock@plt>
    4288:	cbnz	w0, 42c0 <libintl_textdomain@@Base+0x124>
    428c:	mov	x0, x19
    4290:	ldp	x20, x19, [sp, #48]
    4294:	ldp	x22, x21, [sp, #32]
    4298:	ldp	x24, x23, [sp, #16]
    429c:	ldp	x29, x30, [sp], #64
    42a0:	ret
    42a4:	cbz	x19, 4278 <libintl_textdomain@@Base+0xdc>
    42a8:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    42ac:	ldr	x8, [x8, #4032]
    42b0:	ldr	w9, [x8]
    42b4:	add	w9, w9, #0x1
    42b8:	str	w9, [x8]
    42bc:	b	4278 <libintl_textdomain@@Base+0xdc>
    42c0:	bl	1f20 <abort@plt>
    42c4:	sub	sp, sp, #0xb0
    42c8:	stp	x29, x30, [sp, #80]
    42cc:	add	x29, sp, #0x50
    42d0:	stp	x28, x27, [sp, #96]
    42d4:	stp	x26, x25, [sp, #112]
    42d8:	stp	x24, x23, [sp, #128]
    42dc:	stp	x22, x21, [sp, #144]
    42e0:	stp	x20, x19, [sp, #160]
    42e4:	stp	x6, x7, [x29, #-24]
    42e8:	ldrb	w8, [x4]
    42ec:	mov	x25, x0
    42f0:	mov	x0, x4
    42f4:	stur	x5, [x29, #-32]
    42f8:	cmp	w8, #0x2f
    42fc:	csel	x8, xzr, x2, eq  // eq = none
    4300:	mov	w22, w3
    4304:	mov	x23, x1
    4308:	stp	x8, x4, [sp, #32]
    430c:	bl	1cc0 <strlen@plt>
    4310:	mov	x27, x0
    4314:	mov	x19, xzr
    4318:	tbz	w22, #2, 4328 <libintl_textdomain@@Base+0x18c>
    431c:	ldur	x0, [x29, #-32]
    4320:	bl	1cc0 <strlen@plt>
    4324:	add	x19, x0, #0x1
    4328:	tbz	w22, #1, 4358 <libintl_textdomain@@Base+0x1bc>
    432c:	ldur	x0, [x29, #-24]
    4330:	bl	1cc0 <strlen@plt>
    4334:	add	x20, x0, #0x1
    4338:	tbnz	w22, #0, 4360 <libintl_textdomain@@Base+0x1c4>
    433c:	mov	x21, xzr
    4340:	ldp	x24, x8, [x29, #96]
    4344:	stur	x8, [x29, #-8]
    4348:	tbnz	w22, #3, 4378 <libintl_textdomain@@Base+0x1dc>
    434c:	mov	w26, w22
    4350:	mov	x22, xzr
    4354:	b	4388 <libintl_textdomain@@Base+0x1ec>
    4358:	mov	x20, xzr
    435c:	tbz	w22, #0, 433c <libintl_textdomain@@Base+0x1a0>
    4360:	ldur	x0, [x29, #-16]
    4364:	bl	1cc0 <strlen@plt>
    4368:	add	x21, x0, #0x1
    436c:	ldp	x24, x8, [x29, #96]
    4370:	stur	x8, [x29, #-8]
    4374:	tbz	w22, #3, 434c <libintl_textdomain@@Base+0x1b0>
    4378:	mov	x0, x24
    437c:	mov	w26, w22
    4380:	bl	1cc0 <strlen@plt>
    4384:	add	x22, x0, #0x1
    4388:	ldur	x0, [x29, #-8]
    438c:	bl	1cc0 <strlen@plt>
    4390:	ldr	x9, [sp, #32]
    4394:	add	x8, x27, x9
    4398:	add	x8, x8, x19
    439c:	add	x8, x8, x20
    43a0:	add	x8, x8, x21
    43a4:	add	x8, x8, x22
    43a8:	add	x8, x8, x0
    43ac:	add	x0, x8, #0x2
    43b0:	mov	x27, x9
    43b4:	bl	1e10 <malloc@plt>
    43b8:	cbz	x0, 448c <libintl_textdomain@@Base+0x2f0>
    43bc:	mov	x28, x0
    43c0:	cbz	x27, 43f0 <libintl_textdomain@@Base+0x254>
    43c4:	mov	x0, x28
    43c8:	mov	x1, x23
    43cc:	mov	x2, x27
    43d0:	bl	1c70 <memcpy@plt>
    43d4:	mov	w2, #0x3a                  	// #58
    43d8:	mov	x0, x28
    43dc:	mov	x1, x27
    43e0:	bl	1eb0 <argz_stringify@plt>
    43e4:	add	x0, x28, x27
    43e8:	mov	w8, #0x2f                  	// #47
    43ec:	sturb	w8, [x0, #-1]
    43f0:	ldr	x1, [sp, #40]
    43f4:	bl	1dd0 <stpcpy@plt>
    43f8:	mov	w21, w26
    43fc:	tbnz	w26, #2, 4494 <libintl_textdomain@@Base+0x2f8>
    4400:	mov	x26, x25
    4404:	mov	x22, x24
    4408:	tbnz	w21, #1, 44b0 <libintl_textdomain@@Base+0x314>
    440c:	tbnz	w21, #0, 44c4 <libintl_textdomain@@Base+0x328>
    4410:	tbz	w21, #3, 4424 <libintl_textdomain@@Base+0x288>
    4414:	mov	w8, #0x40                  	// #64
    4418:	strb	w8, [x0], #1
    441c:	mov	x1, x22
    4420:	bl	1dd0 <stpcpy@plt>
    4424:	ldur	x1, [x29, #-8]
    4428:	ldr	w19, [x29, #112]
    442c:	mov	w8, #0x2f                  	// #47
    4430:	strb	w8, [x0], #1
    4434:	bl	1dd0 <stpcpy@plt>
    4438:	ldr	x27, [x26]
    443c:	cbz	x27, 44dc <libintl_textdomain@@Base+0x340>
    4440:	mov	x20, x26
    4444:	b	4450 <libintl_textdomain@@Base+0x2b4>
    4448:	ldr	x27, [x27, #24]
    444c:	cbz	x27, 4484 <libintl_textdomain@@Base+0x2e8>
    4450:	ldr	x0, [x27]
    4454:	cbz	x0, 4448 <libintl_textdomain@@Base+0x2ac>
    4458:	mov	x1, x28
    445c:	bl	1f60 <strcmp@plt>
    4460:	cmp	w0, #0x0
    4464:	add	x8, x27, #0x18
    4468:	cset	w9, eq  // eq = none
    446c:	cset	w10, lt  // lt = tstop
    4470:	csel	x11, xzr, x27, lt  // lt = tstop
    4474:	csel	x20, x8, x20, gt
    4478:	csel	x27, x27, x11, eq  // eq = none
    447c:	cmp	w10, w9
    4480:	b.eq	4448 <libintl_textdomain@@Base+0x2ac>  // b.none
    4484:	cbnz	w19, 44e4 <libintl_textdomain@@Base+0x348>
    4488:	b	4698 <libintl_textdomain@@Base+0x4fc>
    448c:	mov	x27, xzr
    4490:	b	46b0 <libintl_textdomain@@Base+0x514>
    4494:	ldur	x1, [x29, #-32]
    4498:	mov	w8, #0x5f                  	// #95
    449c:	strb	w8, [x0], #1
    44a0:	bl	1dd0 <stpcpy@plt>
    44a4:	mov	x26, x25
    44a8:	mov	x22, x24
    44ac:	tbz	w21, #1, 440c <libintl_textdomain@@Base+0x270>
    44b0:	ldur	x1, [x29, #-24]
    44b4:	mov	w8, #0x2e                  	// #46
    44b8:	strb	w8, [x0], #1
    44bc:	bl	1dd0 <stpcpy@plt>
    44c0:	tbz	w21, #0, 4410 <libintl_textdomain@@Base+0x274>
    44c4:	ldur	x1, [x29, #-16]
    44c8:	mov	w8, #0x2e                  	// #46
    44cc:	strb	w8, [x0], #1
    44d0:	bl	1dd0 <stpcpy@plt>
    44d4:	tbnz	w21, #3, 4414 <libintl_textdomain@@Base+0x278>
    44d8:	b	4424 <libintl_textdomain@@Base+0x288>
    44dc:	mov	x20, x26
    44e0:	cbz	w19, 4698 <libintl_textdomain@@Base+0x4fc>
    44e4:	cbnz	x27, 4698 <libintl_textdomain@@Base+0x4fc>
    44e8:	ldr	x1, [sp, #32]
    44ec:	cbz	x1, 4500 <libintl_textdomain@@Base+0x364>
    44f0:	mov	x0, x23
    44f4:	bl	1f50 <argz_count@plt>
    44f8:	mov	x19, x0
    44fc:	b	4504 <libintl_textdomain@@Base+0x368>
    4500:	mov	w19, #0x1                   	// #1
    4504:	mov	w8, #0xffffd555            	// #-10923
    4508:	mov	w9, #0x5555                	// #21845
    450c:	and	w8, w8, w21, asr #1
    4510:	and	w9, w21, w9
    4514:	mov	w10, #0xfffff333            	// #-3277
    4518:	add	w8, w8, w9
    451c:	mov	w9, #0x3333                	// #13107
    4520:	and	w10, w10, w8, asr #2
    4524:	and	w8, w8, w9
    4528:	add	w8, w10, w8
    452c:	mov	w9, #0xf0f                 	// #3855
    4530:	add	w8, w8, w8, lsr #4
    4534:	and	w8, w8, w9
    4538:	add	w8, w8, w8, lsr #8
    453c:	and	w8, w8, #0x1f
    4540:	lsl	x8, x19, x8
    4544:	cmp	x19, #0x1
    4548:	cinc	x8, x8, hi  // hi = pmore
    454c:	lsl	x8, x8, #3
    4550:	add	x0, x8, #0x28
    4554:	bl	1e10 <malloc@plt>
    4558:	mov	x27, x0
    455c:	cbz	x0, 4698 <libintl_textdomain@@Base+0x4fc>
    4560:	cmp	x19, #0x2
    4564:	mov	w8, #0x3                   	// #3
    4568:	cset	w9, cc  // cc = lo, ul, last
    456c:	cmp	x19, #0x1
    4570:	cset	w10, hi  // hi = pmore
    4574:	bics	wzr, w8, w21
    4578:	cset	w8, eq  // eq = none
    457c:	orr	w8, w8, w10
    4580:	str	x28, [x27]
    4584:	str	xzr, [x27, #16]
    4588:	str	w8, [x27, #8]
    458c:	ldr	x8, [x20]
    4590:	subs	w28, w21, w9
    4594:	str	x8, [x27, #24]
    4598:	str	x27, [x20]
    459c:	b.mi	46a4 <libintl_textdomain@@Base+0x508>  // b.first
    45a0:	ldr	x20, [sp, #32]
    45a4:	mvn	w25, w21
    45a8:	add	x21, x27, #0x20
    45ac:	mov	x24, xzr
    45b0:	cmp	x20, #0x0
    45b4:	cset	w8, eq  // eq = none
    45b8:	cmp	x23, #0x0
    45bc:	cset	w9, eq  // eq = none
    45c0:	cmp	x19, #0x1
    45c4:	b.ls	46d4 <libintl_textdomain@@Base+0x538>  // b.plast
    45c8:	add	x19, x23, x20
    45cc:	orr	w10, w9, w8
    45d0:	mov	w11, #0x3                   	// #3
    45d4:	stp	w25, w10, [sp, #28]
    45d8:	b	45f8 <libintl_textdomain@@Base+0x45c>
    45dc:	mov	x23, x26
    45e0:	mov	x26, x25
    45e4:	ldp	w25, w10, [sp, #28]
    45e8:	mov	w11, #0x3                   	// #3
    45ec:	cmp	w28, #0x0
    45f0:	sub	w28, w28, #0x1
    45f4:	b.le	46a8 <libintl_textdomain@@Base+0x50c>
    45f8:	tst	w28, w25
    45fc:	cset	w8, ne  // ne = any
    4600:	bics	wzr, w11, w28
    4604:	cset	w9, eq  // eq = none
    4608:	orr	w8, w8, w9
    460c:	orr	w8, w8, w10
    4610:	tbnz	w8, #0, 45ec <libintl_textdomain@@Base+0x450>
    4614:	mov	x25, x26
    4618:	mov	x20, xzr
    461c:	b	4674 <libintl_textdomain@@Base+0x4d8>
    4620:	cmp	x20, x19
    4624:	mov	x23, x20
    4628:	b.cs	45dc <libintl_textdomain@@Base+0x440>  // b.hs, b.nlast
    462c:	mov	x0, x23
    4630:	bl	1cc0 <strlen@plt>
    4634:	mov	w8, #0x1                   	// #1
    4638:	str	w8, [sp, #16]
    463c:	ldp	x7, x8, [x29, #-16]
    4640:	ldr	x4, [sp, #40]
    4644:	ldp	x5, x6, [x29, #-32]
    4648:	add	x2, x0, #0x1
    464c:	mov	x0, x25
    4650:	mov	x1, x23
    4654:	mov	w3, w28
    4658:	stp	x22, x8, [sp]
    465c:	bl	42c4 <libintl_textdomain@@Base+0x128>
    4660:	add	x8, x24, #0x1
    4664:	str	x0, [x21, x24, lsl #3]
    4668:	mov	x24, x8
    466c:	mov	x20, x23
    4670:	mov	x23, x26
    4674:	mov	x26, x23
    4678:	cbz	x20, 462c <libintl_textdomain@@Base+0x490>
    467c:	cmp	x19, x20
    4680:	b.ls	4620 <libintl_textdomain@@Base+0x484>  // b.plast
    4684:	mov	x0, x20
    4688:	bl	1cc0 <strlen@plt>
    468c:	add	x8, x20, x0
    4690:	add	x20, x8, #0x1
    4694:	b	4620 <libintl_textdomain@@Base+0x484>
    4698:	mov	x0, x28
    469c:	bl	1fb0 <free@plt>
    46a0:	b	46b0 <libintl_textdomain@@Base+0x514>
    46a4:	mov	x24, xzr
    46a8:	add	x8, x27, x24, lsl #3
    46ac:	str	xzr, [x8, #32]
    46b0:	mov	x0, x27
    46b4:	ldp	x20, x19, [sp, #160]
    46b8:	ldp	x22, x21, [sp, #144]
    46bc:	ldp	x24, x23, [sp, #128]
    46c0:	ldp	x26, x25, [sp, #112]
    46c4:	ldp	x28, x27, [sp, #96]
    46c8:	ldp	x29, x30, [sp, #80]
    46cc:	add	sp, sp, #0xb0
    46d0:	ret
    46d4:	mov	w19, #0x1                   	// #1
    46d8:	b	46e8 <libintl_textdomain@@Base+0x54c>
    46dc:	cmp	w28, #0x0
    46e0:	sub	w28, w28, #0x1
    46e4:	b.le	46a8 <libintl_textdomain@@Base+0x50c>
    46e8:	tst	w28, w25
    46ec:	b.ne	46dc <libintl_textdomain@@Base+0x540>  // b.any
    46f0:	and	w8, w28, #0x3
    46f4:	cmp	w8, #0x3
    46f8:	b.eq	46dc <libintl_textdomain@@Base+0x540>  // b.none
    46fc:	ldp	x7, x8, [x29, #-16]
    4700:	ldr	x4, [sp, #40]
    4704:	ldp	x5, x6, [x29, #-32]
    4708:	mov	x0, x26
    470c:	mov	x1, x23
    4710:	mov	x2, x20
    4714:	mov	w3, w28
    4718:	str	w19, [sp, #16]
    471c:	stp	x22, x8, [sp]
    4720:	bl	42c4 <libintl_textdomain@@Base+0x128>
    4724:	add	x8, x24, #0x1
    4728:	str	x0, [x21, x24, lsl #3]
    472c:	mov	x24, x8
    4730:	b	46dc <libintl_textdomain@@Base+0x540>
    4734:	stp	x29, x30, [sp, #-64]!
    4738:	stp	x20, x19, [sp, #48]
    473c:	mov	x19, x1
    4740:	mov	x20, x0
    4744:	stp	x24, x23, [sp, #16]
    4748:	stp	x22, x21, [sp, #32]
    474c:	mov	x29, sp
    4750:	cbz	x1, 47b4 <libintl_textdomain@@Base+0x618>
    4754:	bl	1f80 <__ctype_b_loc@plt>
    4758:	ldr	x10, [x0]
    475c:	mov	x9, xzr
    4760:	mov	w8, #0x1                   	// #1
    4764:	mov	w11, #0x408                 	// #1032
    4768:	mov	x12, x20
    476c:	mov	x13, x19
    4770:	ldrb	w14, [x12], #1
    4774:	ldrh	w14, [x10, x14, lsl #1]
    4778:	bics	wzr, w11, w14
    477c:	ubfx	x14, x14, #3, #1
    4780:	csel	w8, wzr, w8, eq  // eq = none
    4784:	subs	x13, x13, #0x1
    4788:	add	x9, x9, x14
    478c:	b.ne	4770 <libintl_textdomain@@Base+0x5d4>  // b.any
    4790:	add	x9, x9, #0x1
    4794:	cbnz	w8, 47b8 <libintl_textdomain@@Base+0x61c>
    4798:	mov	w22, wzr
    479c:	mov	x8, xzr
    47a0:	add	x0, x9, x8
    47a4:	bl	1e10 <malloc@plt>
    47a8:	mov	x21, x0
    47ac:	cbnz	x0, 47d0 <libintl_textdomain@@Base+0x634>
    47b0:	b	4830 <libintl_textdomain@@Base+0x694>
    47b4:	mov	w9, #0x1                   	// #1
    47b8:	mov	w22, #0x1                   	// #1
    47bc:	mov	w8, #0x3                   	// #3
    47c0:	add	x0, x9, x8
    47c4:	bl	1e10 <malloc@plt>
    47c8:	mov	x21, x0
    47cc:	cbz	x0, 4830 <libintl_textdomain@@Base+0x694>
    47d0:	mov	x23, x21
    47d4:	cbz	w22, 47e8 <libintl_textdomain@@Base+0x64c>
    47d8:	mov	w8, #0x7369                	// #29545
    47dc:	movk	w8, #0x6f, lsl #16
    47e0:	mov	x23, x21
    47e4:	str	w8, [x23], #3
    47e8:	cbz	x19, 482c <libintl_textdomain@@Base+0x690>
    47ec:	bl	1f80 <__ctype_b_loc@plt>
    47f0:	mov	x22, x0
    47f4:	b	4814 <libintl_textdomain@@Base+0x678>
    47f8:	bl	1db0 <__ctype_tolower_loc@plt>
    47fc:	ldr	x8, [x0]
    4800:	ldr	w24, [x8, x24, lsl #2]
    4804:	strb	w24, [x23], #1
    4808:	subs	x19, x19, #0x1
    480c:	add	x20, x20, #0x1
    4810:	b.eq	482c <libintl_textdomain@@Base+0x690>  // b.none
    4814:	ldr	x8, [x22]
    4818:	ldrb	w24, [x20]
    481c:	ldrh	w8, [x8, x24, lsl #1]
    4820:	tbnz	w8, #10, 47f8 <libintl_textdomain@@Base+0x65c>
    4824:	tbnz	w8, #11, 4804 <libintl_textdomain@@Base+0x668>
    4828:	b	4808 <libintl_textdomain@@Base+0x66c>
    482c:	strb	wzr, [x23]
    4830:	mov	x0, x21
    4834:	ldp	x20, x19, [sp, #48]
    4838:	ldp	x22, x21, [sp, #32]
    483c:	ldp	x24, x23, [sp, #16]
    4840:	ldp	x29, x30, [sp], #64
    4844:	ret
    4848:	stp	x29, x30, [sp, #-80]!
    484c:	mov	x11, #0x1                   	// #1
    4850:	movk	x11, #0x4, lsl #16
    4854:	stp	x24, x23, [sp, #32]
    4858:	stp	x22, x21, [sp, #48]
    485c:	stp	x20, x19, [sp, #64]
    4860:	mov	x22, x5
    4864:	mov	x19, x4
    4868:	mov	x20, x3
    486c:	mov	x21, x2
    4870:	mov	x24, x0
    4874:	mov	x9, xzr
    4878:	mov	w10, #0x1                   	// #1
    487c:	movk	x11, #0x2, lsl #48
    4880:	stp	x26, x25, [sp, #16]
    4884:	mov	x29, sp
    4888:	str	xzr, [x2]
    488c:	str	xzr, [x3]
    4890:	str	xzr, [x4]
    4894:	str	xzr, [x5]
    4898:	str	x0, [x1]
    489c:	ldrb	w8, [x24, x9]
    48a0:	sub	w12, w8, #0x2e
    48a4:	cmp	w12, #0x31
    48a8:	b.hi	48b8 <libintl_textdomain@@Base+0x71c>  // b.pmore
    48ac:	lsl	x12, x10, x12
    48b0:	tst	x12, x11
    48b4:	b.ne	48d4 <libintl_textdomain@@Base+0x738>  // b.any
    48b8:	cbz	w8, 48d4 <libintl_textdomain@@Base+0x738>
    48bc:	add	x9, x9, #0x1
    48c0:	ldrb	w8, [x24, x9]
    48c4:	sub	w12, w8, #0x2e
    48c8:	cmp	w12, #0x31
    48cc:	b.ls	48ac <libintl_textdomain@@Base+0x710>  // b.plast
    48d0:	b	48b8 <libintl_textdomain@@Base+0x71c>
    48d4:	cbz	x9, 492c <libintl_textdomain@@Base+0x790>
    48d8:	cmp	w8, #0x5f
    48dc:	b.ne	494c <libintl_textdomain@@Base+0x7b0>  // b.any
    48e0:	add	x25, x24, x9
    48e4:	strb	wzr, [x25], #1
    48e8:	str	x25, [x20]
    48ec:	ldrb	w8, [x25]
    48f0:	cbz	w8, 490c <libintl_textdomain@@Base+0x770>
    48f4:	cmp	w8, #0x2e
    48f8:	b.eq	490c <libintl_textdomain@@Base+0x770>  // b.none
    48fc:	cmp	w8, #0x40
    4900:	b.eq	490c <libintl_textdomain@@Base+0x770>  // b.none
    4904:	ldrb	w8, [x25, #1]!
    4908:	cbnz	w8, 48f4 <libintl_textdomain@@Base+0x758>
    490c:	mov	w26, #0x4                   	// #4
    4910:	cmp	w8, #0x2e
    4914:	b.eq	495c <libintl_textdomain@@Base+0x7c0>  // b.none
    4918:	mov	w23, w26
    491c:	ldrb	w8, [x25]
    4920:	cmp	w8, #0x40
    4924:	b.eq	49d8 <libintl_textdomain@@Base+0x83c>  // b.none
    4928:	b	49f0 <libintl_textdomain@@Base+0x854>
    492c:	mov	x0, x24
    4930:	bl	1cc0 <strlen@plt>
    4934:	mov	w23, wzr
    4938:	add	x25, x24, x0
    493c:	ldrb	w8, [x25]
    4940:	cmp	w8, #0x40
    4944:	b.eq	49d8 <libintl_textdomain@@Base+0x83c>  // b.none
    4948:	b	49f0 <libintl_textdomain@@Base+0x854>
    494c:	mov	w26, wzr
    4950:	add	x25, x24, x9
    4954:	cmp	w8, #0x2e
    4958:	b.ne	4918 <libintl_textdomain@@Base+0x77c>  // b.any
    495c:	mov	x0, x25
    4960:	mov	x1, xzr
    4964:	strb	wzr, [x0], #1
    4968:	str	x0, [x19]
    496c:	ldrb	w8, [x0, x1]
    4970:	orr	w8, w8, #0x40
    4974:	cmp	w8, #0x40
    4978:	b.eq	4990 <libintl_textdomain@@Base+0x7f4>  // b.none
    497c:	add	x1, x1, #0x1
    4980:	ldrb	w8, [x0, x1]
    4984:	orr	w8, w8, #0x40
    4988:	cmp	w8, #0x40
    498c:	b.ne	497c <libintl_textdomain@@Base+0x7e0>  // b.any
    4990:	add	x8, x25, x1
    4994:	add	x25, x8, #0x1
    4998:	orr	w23, w26, #0x2
    499c:	cbz	x1, 49cc <libintl_textdomain@@Base+0x830>
    49a0:	ldrb	w8, [x0]
    49a4:	cbz	w8, 49cc <libintl_textdomain@@Base+0x830>
    49a8:	bl	4734 <libintl_textdomain@@Base+0x598>
    49ac:	str	x0, [x22]
    49b0:	cbz	x0, 4a24 <libintl_textdomain@@Base+0x888>
    49b4:	mov	x24, x0
    49b8:	ldr	x0, [x19]
    49bc:	mov	x1, x24
    49c0:	bl	1f60 <strcmp@plt>
    49c4:	cbz	w0, 4a44 <libintl_textdomain@@Base+0x8a8>
    49c8:	orr	w23, w26, #0x3
    49cc:	ldrb	w8, [x25]
    49d0:	cmp	w8, #0x40
    49d4:	b.ne	49f0 <libintl_textdomain@@Base+0x854>  // b.any
    49d8:	strb	wzr, [x25], #1
    49dc:	str	x25, [x21]
    49e0:	ldrb	w8, [x25]
    49e4:	orr	w9, w23, #0x8
    49e8:	cmp	w8, #0x0
    49ec:	csel	w23, w23, w9, eq  // eq = none
    49f0:	ldr	x8, [x20]
    49f4:	cbz	x8, 4a08 <libintl_textdomain@@Base+0x86c>
    49f8:	ldrb	w8, [x8]
    49fc:	and	w9, w23, #0xfffffffb
    4a00:	cmp	w8, #0x0
    4a04:	csel	w23, w9, w23, eq  // eq = none
    4a08:	ldr	x8, [x19]
    4a0c:	cbz	x8, 4a28 <libintl_textdomain@@Base+0x88c>
    4a10:	ldrb	w8, [x8]
    4a14:	and	w9, w23, #0xfffffffd
    4a18:	cmp	w8, #0x0
    4a1c:	csel	w0, w9, w23, eq  // eq = none
    4a20:	b	4a2c <libintl_textdomain@@Base+0x890>
    4a24:	mov	w23, #0xffffffff            	// #-1
    4a28:	mov	w0, w23
    4a2c:	ldp	x20, x19, [sp, #64]
    4a30:	ldp	x22, x21, [sp, #48]
    4a34:	ldp	x24, x23, [sp, #32]
    4a38:	ldp	x26, x25, [sp, #16]
    4a3c:	ldp	x29, x30, [sp], #80
    4a40:	ret
    4a44:	mov	x0, x24
    4a48:	bl	1fb0 <free@plt>
    4a4c:	ldrb	w8, [x25]
    4a50:	cmp	w8, #0x40
    4a54:	b.eq	49d8 <libintl_textdomain@@Base+0x83c>  // b.none
    4a58:	b	49f0 <libintl_textdomain@@Base+0x854>
    4a5c:	stp	x29, x30, [sp, #-96]!
    4a60:	stp	x28, x27, [sp, #16]
    4a64:	stp	x26, x25, [sp, #32]
    4a68:	stp	x24, x23, [sp, #48]
    4a6c:	stp	x22, x21, [sp, #64]
    4a70:	stp	x20, x19, [sp, #80]
    4a74:	mov	x29, sp
    4a78:	sub	sp, sp, #0x90
    4a7c:	cbz	x1, 4af8 <libintl_textdomain@@Base+0x95c>
    4a80:	mov	w22, w5
    4a84:	mov	x23, x4
    4a88:	mov	w28, w3
    4a8c:	mov	x21, x1
    4a90:	mov	x19, x0
    4a94:	stur	x2, [x29, #-120]
    4a98:	bl	20c0 <__errno_location@plt>
    4a9c:	adrp	x27, 17000 <bind_textdomain_codeset@@Base+0x10004>
    4aa0:	ldr	w24, [x0]
    4aa4:	ldr	x27, [x27, #4064]
    4aa8:	mov	x26, x0
    4aac:	cbz	x27, 4ac0 <libintl_textdomain@@Base+0x924>
    4ab0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4ab4:	add	x0, x0, #0x2d8
    4ab8:	bl	1cf0 <pthread_rwlock_rdlock@plt>
    4abc:	cbnz	w0, 52d0 <libintl_textdomain@@Base+0x1134>
    4ac0:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4ac4:	ldr	x8, [x8, #720]
    4ac8:	cmp	x19, #0x0
    4acc:	stur	xzr, [x29, #-40]
    4ad0:	stur	x21, [x29, #-16]
    4ad4:	csel	x25, x8, x19, eq  // eq = none
    4ad8:	cmp	w22, #0x6
    4adc:	stur	x25, [x29, #-72]
    4ae0:	stur	w22, [x29, #-64]
    4ae4:	b.hi	4b00 <libintl_textdomain@@Base+0x964>  // b.pmore
    4ae8:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    4aec:	add	x8, x8, #0xd50
    4af0:	ldr	x20, [x8, w22, sxtw #3]
    4af4:	b	4b08 <libintl_textdomain@@Base+0x96c>
    4af8:	mov	x20, xzr
    4afc:	b	5264 <libintl_textdomain@@Base+0x10c8>
    4b00:	adrp	x20, 7000 <bind_textdomain_codeset@@Base+0x4>
    4b04:	add	x20, x20, #0x49f
    4b08:	mov	w0, w22
    4b0c:	mov	x1, x20
    4b10:	bl	6924 <libintl_set_relocation_prefix@@Base+0x1d4>
    4b14:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    4b18:	add	x8, x8, #0x44d
    4b1c:	cmp	x0, #0x0
    4b20:	csel	x19, x8, x0, eq  // eq = none
    4b24:	stur	x19, [x29, #-56]
    4b28:	cbz	x27, 4ba8 <libintl_textdomain@@Base+0xa0c>
    4b2c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4b30:	add	x0, x0, #0x310
    4b34:	bl	1cf0 <pthread_rwlock_rdlock@plt>
    4b38:	cbnz	w0, 52d0 <libintl_textdomain@@Base+0x1134>
    4b3c:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4b40:	adrp	x2, 5000 <libintl_textdomain@@Base+0xe64>
    4b44:	add	x1, x1, #0x3d0
    4b48:	add	x2, x2, #0x2d4
    4b4c:	sub	x0, x29, #0x48
    4b50:	bl	1dc0 <tfind@plt>
    4b54:	cbz	x27, 4ba0 <libintl_textdomain@@Base+0xa04>
    4b58:	mov	x27, x20
    4b5c:	mov	w20, w24
    4b60:	mov	w24, w28
    4b64:	mov	x28, x23
    4b68:	mov	w23, w22
    4b6c:	mov	x22, x0
    4b70:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4b74:	add	x0, x0, #0x310
    4b78:	bl	1fd0 <pthread_rwlock_unlock@plt>
    4b7c:	cbnz	w0, 52d0 <libintl_textdomain@@Base+0x1134>
    4b80:	mov	x0, x22
    4b84:	mov	w22, w23
    4b88:	mov	x23, x28
    4b8c:	mov	w28, w24
    4b90:	mov	w24, w20
    4b94:	mov	x20, x27
    4b98:	adrp	x27, 17000 <bind_textdomain_codeset@@Base+0x10004>
    4b9c:	ldr	x27, [x27, #4064]
    4ba0:	cbnz	x0, 4bc4 <libintl_textdomain@@Base+0xa28>
    4ba4:	b	4c40 <libintl_textdomain@@Base+0xaa4>
    4ba8:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4bac:	adrp	x2, 5000 <libintl_textdomain@@Base+0xe64>
    4bb0:	add	x1, x1, #0x3d0
    4bb4:	add	x2, x2, #0x2d4
    4bb8:	sub	x0, x29, #0x48
    4bbc:	bl	1dc0 <tfind@plt>
    4bc0:	cbz	x0, 4c40 <libintl_textdomain@@Base+0xaa4>
    4bc4:	adrp	x9, 17000 <bind_textdomain_codeset@@Base+0x10004>
    4bc8:	ldr	x8, [x0]
    4bcc:	ldr	x9, [x9, #4032]
    4bd0:	ldr	w10, [x8, #24]
    4bd4:	ldr	w9, [x9]
    4bd8:	cmp	w10, w9
    4bdc:	b.ne	4c40 <libintl_textdomain@@Base+0xaa4>  // b.any
    4be0:	cbz	w28, 4ddc <libintl_textdomain@@Base+0xc40>
    4be4:	ldp	x9, x19, [x8, #32]
    4be8:	ldr	x21, [x8, #48]
    4bec:	mov	x1, x23
    4bf0:	ldr	x20, [x9, #16]
    4bf4:	ldr	x0, [x20, #184]
    4bf8:	bl	5b34 <libintl_textdomain@@Base+0x1998>
    4bfc:	ldr	x8, [x20, #192]
    4c00:	add	x21, x19, x21
    4c04:	mov	x20, x19
    4c08:	cmp	x0, x8
    4c0c:	csel	x8, x0, xzr, cc  // cc = lo, ul, last
    4c10:	add	x22, x8, #0x1
    4c14:	subs	x22, x22, #0x1
    4c18:	b.eq	4c38 <libintl_textdomain@@Base+0xa9c>  // b.none
    4c1c:	mov	x0, x20
    4c20:	bl	1cc0 <strlen@plt>
    4c24:	add	x8, x20, x0
    4c28:	add	x20, x8, #0x1
    4c2c:	cmp	x20, x21
    4c30:	b.cc	4c14 <libintl_textdomain@@Base+0xa78>  // b.lo, b.ul, b.last
    4c34:	mov	x20, x19
    4c38:	cbnz	x27, 4de4 <libintl_textdomain@@Base+0xc48>
    4c3c:	b	4df4 <libintl_textdomain@@Base+0xc58>
    4c40:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4c44:	ldr	w8, [x8, #972]
    4c48:	stur	x19, [x29, #-128]
    4c4c:	stur	x0, [x29, #-104]
    4c50:	cbnz	w8, 4c90 <libintl_textdomain@@Base+0xaf4>
    4c54:	bl	1d60 <getuid@plt>
    4c58:	mov	w19, w0
    4c5c:	bl	1d10 <geteuid@plt>
    4c60:	cmp	w19, w0
    4c64:	b.ne	4c84 <libintl_textdomain@@Base+0xae8>  // b.any
    4c68:	bl	1fc0 <getgid@plt>
    4c6c:	mov	w19, w0
    4c70:	bl	1d00 <getegid@plt>
    4c74:	cmp	w19, w0
    4c78:	mov	w8, #0xffffffff            	// #-1
    4c7c:	cneg	w8, w8, ne  // ne = any
    4c80:	b	4c88 <libintl_textdomain@@Base+0xaec>
    4c84:	mov	w8, #0x1                   	// #1
    4c88:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4c8c:	str	w8, [x9, #972]
    4c90:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4c94:	ldr	x19, [x8, #3264]
    4c98:	mov	x27, x23
    4c9c:	stp	w28, w24, [x29, #-96]
    4ca0:	stp	x26, x21, [x29, #-88]
    4ca4:	stur	x23, [x29, #-112]
    4ca8:	stur	w22, [x29, #-132]
    4cac:	cbz	x19, 4d00 <libintl_textdomain@@Base+0xb64>
    4cb0:	adrp	x23, 7000 <bind_textdomain_codeset@@Base+0x4>
    4cb4:	add	x23, x23, #0x410
    4cb8:	add	x1, x19, #0x18
    4cbc:	mov	x0, x25
    4cc0:	bl	1f60 <strcmp@plt>
    4cc4:	cmp	w0, #0x0
    4cc8:	cset	w8, eq  // eq = none
    4ccc:	cset	w9, lt  // lt = tstop
    4cd0:	csel	x10, xzr, x19, lt  // lt = tstop
    4cd4:	csel	x24, x19, x10, eq  // eq = none
    4cd8:	cmp	w9, w8
    4cdc:	b.ne	4d0c <libintl_textdomain@@Base+0xb70>  // b.any
    4ce0:	ldr	x19, [x24]
    4ce4:	cbnz	x19, 4cb8 <libintl_textdomain@@Base+0xb1c>
    4ce8:	mov	x24, xzr
    4cec:	mov	w0, w22
    4cf0:	mov	x1, x20
    4cf4:	bl	6924 <libintl_set_relocation_prefix@@Base+0x1d4>
    4cf8:	cbnz	x0, 4e24 <libintl_textdomain@@Base+0xc88>
    4cfc:	b	4e14 <libintl_textdomain@@Base+0xc78>
    4d00:	adrp	x23, 7000 <bind_textdomain_codeset@@Base+0x4>
    4d04:	mov	x24, xzr
    4d08:	b	4e00 <libintl_textdomain@@Base+0xc64>
    4d0c:	cbz	x24, 4dfc <libintl_textdomain@@Base+0xc60>
    4d10:	ldr	x23, [x24, #8]
    4d14:	ldrb	w8, [x23]
    4d18:	cmp	w8, #0x2f
    4d1c:	b.eq	4dc8 <libintl_textdomain@@Base+0xc2c>  // b.none
    4d20:	mov	x0, x23
    4d24:	bl	1cc0 <strlen@plt>
    4d28:	mov	w8, #0x1012                	// #4114
    4d2c:	add	x8, x0, x8
    4d30:	and	x8, x8, #0xfffffffffffffff0
    4d34:	mov	x9, sp
    4d38:	mov	x21, x0
    4d3c:	sub	x19, x9, x8
    4d40:	mov	sp, x19
    4d44:	mov	w1, #0x1002                	// #4098
    4d48:	mov	x0, x19
    4d4c:	str	wzr, [x26]
    4d50:	bl	1ca0 <getcwd@plt>
    4d54:	cbnz	x0, 4da8 <libintl_textdomain@@Base+0xc0c>
    4d58:	add	x22, x21, #0x1
    4d5c:	mov	w21, #0x1002                	// #4098
    4d60:	ldr	w8, [x26]
    4d64:	cmp	w8, #0x22
    4d68:	b.ne	51e8 <libintl_textdomain@@Base+0x104c>  // b.any
    4d6c:	add	x8, x21, x21, lsr #1
    4d70:	add	x21, x8, #0x20
    4d74:	add	x8, x22, x21
    4d78:	add	x8, x8, #0xf
    4d7c:	and	x8, x8, #0xfffffffffffffff0
    4d80:	mov	x9, sp
    4d84:	sub	x19, x9, x8
    4d88:	mov	sp, x19
    4d8c:	ldur	x26, [x29, #-88]
    4d90:	mov	x0, x19
    4d94:	mov	x1, x21
    4d98:	str	wzr, [x26]
    4d9c:	bl	1ca0 <getcwd@plt>
    4da0:	cbz	x0, 4d60 <libintl_textdomain@@Base+0xbc4>
    4da4:	ldur	w22, [x29, #-132]
    4da8:	mov	x0, x19
    4dac:	bl	1cc0 <strlen@plt>
    4db0:	add	x0, x19, x0
    4db4:	mov	w8, #0x2f                  	// #47
    4db8:	strh	w8, [x0], #1
    4dbc:	mov	x1, x23
    4dc0:	bl	1dd0 <stpcpy@plt>
    4dc4:	mov	x23, x19
    4dc8:	mov	w0, w22
    4dcc:	mov	x1, x20
    4dd0:	bl	6924 <libintl_set_relocation_prefix@@Base+0x1d4>
    4dd4:	cbnz	x0, 4e24 <libintl_textdomain@@Base+0xc88>
    4dd8:	b	4e14 <libintl_textdomain@@Base+0xc78>
    4ddc:	ldr	x20, [x8, #40]
    4de0:	cbz	x27, 4df4 <libintl_textdomain@@Base+0xc58>
    4de4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4de8:	add	x0, x0, #0x2d8
    4dec:	bl	1fd0 <pthread_rwlock_unlock@plt>
    4df0:	cbnz	w0, 52d0 <libintl_textdomain@@Base+0x1134>
    4df4:	str	w24, [x26]
    4df8:	b	5264 <libintl_textdomain@@Base+0x10c8>
    4dfc:	adrp	x23, 7000 <bind_textdomain_codeset@@Base+0x4>
    4e00:	add	x23, x23, #0x410
    4e04:	mov	w0, w22
    4e08:	mov	x1, x20
    4e0c:	bl	6924 <libintl_set_relocation_prefix@@Base+0x1d4>
    4e10:	cbnz	x0, 4e24 <libintl_textdomain@@Base+0xc88>
    4e14:	mov	w0, w22
    4e18:	mov	x1, x20
    4e1c:	bl	6b28 <libintl_set_relocation_prefix@@Base+0x3d8>
    4e20:	cbz	x0, 5288 <libintl_textdomain@@Base+0x10ec>
    4e24:	mov	x19, x0
    4e28:	mov	w21, wzr
    4e2c:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    4e30:	add	x1, x1, #0x482
    4e34:	mov	x0, x19
    4e38:	bl	1f60 <strcmp@plt>
    4e3c:	cbz	w0, 4e6c <libintl_textdomain@@Base+0xcd0>
    4e40:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    4e44:	add	x0, x0, #0x4a6
    4e48:	bl	20d0 <getenv@plt>
    4e4c:	cbz	x0, 4e5c <libintl_textdomain@@Base+0xcc0>
    4e50:	ldrb	w8, [x0]
    4e54:	mov	x26, x0
    4e58:	cbnz	w8, 4e70 <libintl_textdomain@@Base+0xcd4>
    4e5c:	cbz	w21, 4e6c <libintl_textdomain@@Base+0xcd0>
    4e60:	bl	691c <libintl_set_relocation_prefix@@Base+0x1cc>
    4e64:	mov	x26, x0
    4e68:	cbnz	x0, 4e70 <libintl_textdomain@@Base+0xcd4>
    4e6c:	mov	x26, x19
    4e70:	mov	x0, x25
    4e74:	bl	1cc0 <strlen@plt>
    4e78:	mov	x21, x0
    4e7c:	mov	x0, x20
    4e80:	bl	1cc0 <strlen@plt>
    4e84:	add	x8, x21, x0
    4e88:	add	x8, x8, #0x14
    4e8c:	and	x8, x8, #0xfffffffffffffff0
    4e90:	mov	x9, sp
    4e94:	sub	x28, x9, x8
    4e98:	mov	sp, x28
    4e9c:	mov	x0, x28
    4ea0:	mov	x1, x20
    4ea4:	bl	1dd0 <stpcpy@plt>
    4ea8:	mov	x19, x0
    4eac:	mov	w8, #0x2f                  	// #47
    4eb0:	strh	w8, [x19], #1
    4eb4:	mov	x0, x19
    4eb8:	mov	x1, x25
    4ebc:	mov	x2, x21
    4ec0:	bl	1c70 <memcpy@plt>
    4ec4:	mov	w8, #0x6d2e                	// #27950
    4ec8:	movk	w8, #0x6f, lsl #16
    4ecc:	mov	x0, x26
    4ed0:	str	w8, [x19, x21]
    4ed4:	bl	1cc0 <strlen@plt>
    4ed8:	add	x9, x0, #0x10
    4edc:	mov	x8, sp
    4ee0:	and	x9, x9, #0xfffffffffffffff0
    4ee4:	sub	x27, x8, x9
    4ee8:	mov	sp, x27
    4eec:	b	4ef4 <libintl_textdomain@@Base+0xd58>
    4ef0:	add	x26, x26, #0x1
    4ef4:	ldrb	w8, [x26]
    4ef8:	cbz	w8, 4f5c <libintl_textdomain@@Base+0xdc0>
    4efc:	cmp	w8, #0x3a
    4f00:	b.eq	4ef0 <libintl_textdomain@@Base+0xd54>  // b.none
    4f04:	mov	x9, xzr
    4f08:	ands	w10, w8, #0xff
    4f0c:	b.eq	4f30 <libintl_textdomain@@Base+0xd94>  // b.none
    4f10:	cmp	w10, #0x3a
    4f14:	b.eq	4f30 <libintl_textdomain@@Base+0xd94>  // b.none
    4f18:	add	x10, x26, x9
    4f1c:	strb	w8, [x27, x9]
    4f20:	ldrb	w8, [x10, #1]
    4f24:	add	x9, x9, #0x1
    4f28:	ands	w10, w8, #0xff
    4f2c:	b.ne	4f10 <libintl_textdomain@@Base+0xd74>  // b.any
    4f30:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    4f34:	ldr	w8, [x8, #972]
    4f38:	add	x26, x26, x9
    4f3c:	strb	wzr, [x27, x9]
    4f40:	cmp	w8, #0x1
    4f44:	b.ne	4f64 <libintl_textdomain@@Base+0xdc8>  // b.any
    4f48:	mov	w1, #0x2f                  	// #47
    4f4c:	mov	x0, x27
    4f50:	bl	1ff0 <strchr@plt>
    4f54:	cbnz	x0, 4ef4 <libintl_textdomain@@Base+0xd58>
    4f58:	b	4f64 <libintl_textdomain@@Base+0xdc8>
    4f5c:	mov	w8, #0x43                  	// #67
    4f60:	strh	w8, [x27]
    4f64:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    4f68:	mov	x0, x27
    4f6c:	add	x1, x1, #0x482
    4f70:	mov	x22, x23
    4f74:	bl	1f60 <strcmp@plt>
    4f78:	cbz	w0, 51e8 <libintl_textdomain@@Base+0x104c>
    4f7c:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    4f80:	mov	x0, x27
    4f84:	add	x1, x1, #0x422
    4f88:	bl	1f60 <strcmp@plt>
    4f8c:	cbz	w0, 51e8 <libintl_textdomain@@Base+0x104c>
    4f90:	mov	x0, x22
    4f94:	mov	x1, x27
    4f98:	mov	x2, x28
    4f9c:	mov	x3, x24
    4fa0:	mov	x23, x22
    4fa4:	bl	25c0 <libintl_gettext@@Base+0x10>
    4fa8:	cbz	x0, 4ef4 <libintl_textdomain@@Base+0xd58>
    4fac:	ldur	x2, [x29, #-80]
    4fb0:	sub	x4, x29, #0x8
    4fb4:	mov	w3, #0x1                   	// #1
    4fb8:	mov	x1, x24
    4fbc:	mov	x19, x0
    4fc0:	bl	5368 <libintl_textdomain@@Base+0x11cc>
    4fc4:	cbz	x0, 4fd4 <libintl_textdomain@@Base+0xe38>
    4fc8:	mov	x20, x0
    4fcc:	cbnz	x20, 5034 <libintl_textdomain@@Base+0xe98>
    4fd0:	b	4ef4 <libintl_textdomain@@Base+0xd58>
    4fd4:	ldr	x0, [x19, #32]
    4fd8:	cbz	x0, 502c <libintl_textdomain@@Base+0xe90>
    4fdc:	add	x23, x19, #0x28
    4fe0:	ldur	x2, [x29, #-80]
    4fe4:	sub	x4, x29, #0x8
    4fe8:	mov	w3, #0x1                   	// #1
    4fec:	mov	x1, x24
    4ff0:	bl	5368 <libintl_textdomain@@Base+0x11cc>
    4ff4:	cbnz	x0, 5010 <libintl_textdomain@@Base+0xe74>
    4ff8:	ldr	x0, [x23], #8
    4ffc:	cbnz	x0, 4fe0 <libintl_textdomain@@Base+0xe44>
    5000:	mov	x20, xzr
    5004:	mov	x23, x22
    5008:	cbnz	x20, 5034 <libintl_textdomain@@Base+0xe98>
    500c:	b	4ef4 <libintl_textdomain@@Base+0xd58>
    5010:	mov	x20, x0
    5014:	cmn	x0, #0x1
    5018:	b.eq	51e8 <libintl_textdomain@@Base+0x104c>  // b.none
    501c:	ldur	x19, [x23, #-8]
    5020:	mov	x23, x22
    5024:	cbnz	x20, 5034 <libintl_textdomain@@Base+0xe98>
    5028:	b	4ef4 <libintl_textdomain@@Base+0xd58>
    502c:	mov	x20, xzr
    5030:	cbz	x20, 4ef4 <libintl_textdomain@@Base+0xd58>
    5034:	cmn	x20, #0x1
    5038:	b.eq	51e8 <libintl_textdomain@@Base+0x104c>  // b.none
    503c:	ldur	x10, [x29, #-104]
    5040:	cbz	x10, 50e0 <libintl_textdomain@@Base+0xf44>
    5044:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5048:	ldr	x8, [x8, #4032]
    504c:	ldr	x9, [x10]
    5050:	adrp	x28, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5054:	ldr	w8, [x8]
    5058:	str	x19, [x9, #32]
    505c:	str	w8, [x9, #24]
    5060:	ldr	x8, [x10]
    5064:	str	x20, [x8, #40]
    5068:	ldur	x8, [x29, #-8]
    506c:	ldr	x9, [x10]
    5070:	str	x8, [x9, #48]
    5074:	ldr	x28, [x28, #4064]
    5078:	ldur	x8, [x29, #-88]
    507c:	ldur	w9, [x29, #-92]
    5080:	str	w9, [x8]
    5084:	ldur	w8, [x29, #-96]
    5088:	cbz	w8, 50d8 <libintl_textdomain@@Base+0xf3c>
    508c:	ldr	x19, [x19, #16]
    5090:	ldur	x1, [x29, #-112]
    5094:	ldur	x21, [x29, #-8]
    5098:	ldr	x0, [x19, #184]
    509c:	bl	5b34 <libintl_textdomain@@Base+0x1998>
    50a0:	ldr	x8, [x19, #192]
    50a4:	add	x21, x20, x21
    50a8:	mov	x19, x20
    50ac:	cmp	x0, x8
    50b0:	csel	x8, x0, xzr, cc  // cc = lo, ul, last
    50b4:	add	x22, x8, #0x1
    50b8:	subs	x22, x22, #0x1
    50bc:	b.eq	51cc <libintl_textdomain@@Base+0x1030>  // b.none
    50c0:	mov	x0, x19
    50c4:	bl	1cc0 <strlen@plt>
    50c8:	add	x8, x19, x0
    50cc:	add	x19, x8, #0x1
    50d0:	cmp	x19, x21
    50d4:	b.cc	50b8 <libintl_textdomain@@Base+0xf1c>  // b.lo, b.ul, b.last
    50d8:	cbnz	x28, 51d4 <libintl_textdomain@@Base+0x1038>
    50dc:	b	5264 <libintl_textdomain@@Base+0x10c8>
    50e0:	ldur	x22, [x29, #-80]
    50e4:	mov	x0, x22
    50e8:	bl	1cc0 <strlen@plt>
    50ec:	ldur	x23, [x29, #-128]
    50f0:	mov	x26, x0
    50f4:	mov	x0, x23
    50f8:	bl	1cc0 <strlen@plt>
    50fc:	add	x8, x21, x26
    5100:	add	x8, x8, x0
    5104:	add	x0, x8, #0x3b
    5108:	bl	1e10 <malloc@plt>
    510c:	adrp	x28, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5110:	ldr	x28, [x28, #4064]
    5114:	cbz	x0, 5078 <libintl_textdomain@@Base+0xedc>
    5118:	add	x26, x26, #0x1
    511c:	add	x27, x0, #0x38
    5120:	mov	x24, x0
    5124:	mov	x0, x27
    5128:	mov	x1, x22
    512c:	mov	x2, x26
    5130:	bl	1c70 <memcpy@plt>
    5134:	add	x22, x27, x26
    5138:	add	x2, x21, #0x1
    513c:	mov	x0, x22
    5140:	mov	x1, x25
    5144:	bl	1c70 <memcpy@plt>
    5148:	add	x8, x22, x21
    514c:	add	x0, x8, #0x1
    5150:	mov	x1, x23
    5154:	bl	2020 <strcpy@plt>
    5158:	ldur	w8, [x29, #-132]
    515c:	str	x22, [x24]
    5160:	str	x0, [x24, #16]
    5164:	str	w8, [x24, #8]
    5168:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    516c:	ldr	x8, [x8, #4032]
    5170:	ldur	x9, [x29, #-8]
    5174:	stp	x19, x20, [x24, #32]
    5178:	ldr	w8, [x8]
    517c:	str	x9, [x24, #48]
    5180:	str	w8, [x24, #24]
    5184:	cbz	x28, 5298 <libintl_textdomain@@Base+0x10fc>
    5188:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    518c:	add	x0, x0, #0x310
    5190:	bl	1f30 <pthread_rwlock_wrlock@plt>
    5194:	cbnz	w0, 52d0 <libintl_textdomain@@Base+0x1134>
    5198:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x11004>
    519c:	adrp	x2, 5000 <libintl_textdomain@@Base+0xe64>
    51a0:	add	x1, x1, #0x3d0
    51a4:	add	x2, x2, #0x2d4
    51a8:	mov	x0, x24
    51ac:	bl	1e70 <tsearch@plt>
    51b0:	mov	x21, x0
    51b4:	cbz	x28, 52b4 <libintl_textdomain@@Base+0x1118>
    51b8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    51bc:	add	x0, x0, #0x310
    51c0:	bl	1fd0 <pthread_rwlock_unlock@plt>
    51c4:	cbz	w0, 52b4 <libintl_textdomain@@Base+0x1118>
    51c8:	b	52d0 <libintl_textdomain@@Base+0x1134>
    51cc:	mov	x20, x19
    51d0:	cbz	x28, 5264 <libintl_textdomain@@Base+0x10c8>
    51d4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    51d8:	add	x0, x0, #0x2d8
    51dc:	bl	1fd0 <pthread_rwlock_unlock@plt>
    51e0:	cbz	w0, 5264 <libintl_textdomain@@Base+0x10c8>
    51e4:	b	52d0 <libintl_textdomain@@Base+0x1134>
    51e8:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    51ec:	ldur	w20, [x29, #-92]
    51f0:	ldr	x8, [x8, #4064]
    51f4:	cbz	x8, 5208 <libintl_textdomain@@Base+0x106c>
    51f8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    51fc:	add	x0, x0, #0x2d8
    5200:	bl	1fd0 <pthread_rwlock_unlock@plt>
    5204:	cbnz	w0, 52d0 <libintl_textdomain@@Base+0x1134>
    5208:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    520c:	ldr	w8, [x8, #972]
    5210:	ldur	x19, [x29, #-88]
    5214:	ldp	x23, x21, [x29, #-120]
    5218:	ldur	w22, [x29, #-96]
    521c:	cmp	w8, #0x1
    5220:	b.eq	5250 <libintl_textdomain@@Base+0x10b4>  // b.none
    5224:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    5228:	add	x0, x0, #0x428
    522c:	bl	20d0 <getenv@plt>
    5230:	cbz	x0, 5250 <libintl_textdomain@@Base+0x10b4>
    5234:	ldrb	w8, [x0]
    5238:	cbz	w8, 5250 <libintl_textdomain@@Base+0x10b4>
    523c:	ldur	x2, [x29, #-80]
    5240:	mov	x1, x25
    5244:	mov	x3, x23
    5248:	mov	w4, w22
    524c:	bl	6bf8 <libintl_set_relocation_prefix@@Base+0x4a8>
    5250:	ldur	x8, [x29, #-80]
    5254:	cmp	x21, #0x1
    5258:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    525c:	str	w20, [x19]
    5260:	csel	x20, x8, x23, eq  // eq = none
    5264:	mov	x0, x20
    5268:	mov	sp, x29
    526c:	ldp	x20, x19, [sp, #80]
    5270:	ldp	x22, x21, [sp, #64]
    5274:	ldp	x24, x23, [sp, #48]
    5278:	ldp	x26, x25, [sp, #32]
    527c:	ldp	x28, x27, [sp, #16]
    5280:	ldp	x29, x30, [sp], #96
    5284:	ret
    5288:	mov	w21, #0x1                   	// #1
    528c:	bl	6ba0 <libintl_set_relocation_prefix@@Base+0x450>
    5290:	mov	x19, x0
    5294:	b	4e2c <libintl_textdomain@@Base+0xc90>
    5298:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x11004>
    529c:	adrp	x2, 5000 <libintl_textdomain@@Base+0xe64>
    52a0:	add	x1, x1, #0x3d0
    52a4:	add	x2, x2, #0x2d4
    52a8:	mov	x0, x24
    52ac:	bl	1e70 <tsearch@plt>
    52b0:	mov	x21, x0
    52b4:	cbz	x21, 52c4 <libintl_textdomain@@Base+0x1128>
    52b8:	ldr	x8, [x21]
    52bc:	cmp	x8, x24
    52c0:	b.eq	5078 <libintl_textdomain@@Base+0xedc>  // b.none
    52c4:	mov	x0, x24
    52c8:	bl	1fb0 <free@plt>
    52cc:	b	5078 <libintl_textdomain@@Base+0xedc>
    52d0:	bl	1f20 <abort@plt>
    52d4:	stp	x29, x30, [sp, #-32]!
    52d8:	stp	x20, x19, [sp, #16]
    52dc:	ldr	x8, [x0, #32]
    52e0:	mov	x19, x1
    52e4:	mov	x20, x0
    52e8:	add	x0, x0, #0x38
    52ec:	mov	x29, sp
    52f0:	cbz	x8, 5314 <libintl_textdomain@@Base+0x1178>
    52f4:	ldr	x8, [x19, #32]
    52f8:	add	x1, x19, #0x38
    52fc:	cbz	x8, 5324 <libintl_textdomain@@Base+0x1188>
    5300:	bl	1f60 <strcmp@plt>
    5304:	cbz	w0, 5330 <libintl_textdomain@@Base+0x1194>
    5308:	ldp	x20, x19, [sp, #16]
    530c:	ldp	x29, x30, [sp], #32
    5310:	ret
    5314:	ldr	x0, [x0]
    5318:	ldr	x8, [x19, #32]
    531c:	add	x1, x19, #0x38
    5320:	cbnz	x8, 5300 <libintl_textdomain@@Base+0x1164>
    5324:	ldr	x1, [x1]
    5328:	bl	1f60 <strcmp@plt>
    532c:	cbnz	w0, 5308 <libintl_textdomain@@Base+0x116c>
    5330:	ldr	x0, [x20]
    5334:	ldr	x1, [x19]
    5338:	bl	1f60 <strcmp@plt>
    533c:	cbnz	w0, 5308 <libintl_textdomain@@Base+0x116c>
    5340:	ldr	x0, [x20, #16]
    5344:	ldr	x1, [x19, #16]
    5348:	bl	1f60 <strcmp@plt>
    534c:	cbnz	w0, 5308 <libintl_textdomain@@Base+0x116c>
    5350:	ldr	w8, [x20, #8]
    5354:	ldr	w9, [x19, #8]
    5358:	sub	w0, w8, w9
    535c:	ldp	x20, x19, [sp, #16]
    5360:	ldp	x29, x30, [sp], #32
    5364:	ret
    5368:	stp	x29, x30, [sp, #-96]!
    536c:	stp	x28, x27, [sp, #16]
    5370:	stp	x26, x25, [sp, #32]
    5374:	stp	x24, x23, [sp, #48]
    5378:	stp	x22, x21, [sp, #64]
    537c:	stp	x20, x19, [sp, #80]
    5380:	mov	x29, sp
    5384:	sub	sp, sp, #0x50
    5388:	ldr	w8, [x0, #8]
    538c:	mov	x28, x4
    5390:	mov	w25, w3
    5394:	mov	x20, x2
    5398:	mov	x22, x0
    539c:	cmp	w8, #0x0
    53a0:	mov	x23, x1
    53a4:	b.le	53b4 <libintl_textdomain@@Base+0x1218>
    53a8:	ldr	x27, [x22, #16]
    53ac:	cbnz	x27, 53c8 <libintl_textdomain@@Base+0x122c>
    53b0:	b	5a6c <libintl_textdomain@@Base+0x18d0>
    53b4:	mov	x0, x22
    53b8:	mov	x1, x23
    53bc:	bl	2890 <libintl_gettext@@Base+0x2e0>
    53c0:	ldr	x27, [x22, #16]
    53c4:	cbz	x27, 5a6c <libintl_textdomain@@Base+0x18d0>
    53c8:	ldr	x8, [x27, #96]
    53cc:	ldr	w21, [x27, #40]
    53d0:	stur	x21, [x29, #-40]
    53d4:	cbz	x8, 54f0 <libintl_textdomain@@Base+0x1354>
    53d8:	mov	x0, x20
    53dc:	stur	w25, [x29, #-68]
    53e0:	bl	1cc0 <strlen@plt>
    53e4:	mov	x21, x0
    53e8:	mov	x0, x20
    53ec:	bl	284c <libintl_gettext@@Base+0x29c>
    53f0:	ldr	w9, [x27, #88]
    53f4:	ldr	x25, [x27, #96]
    53f8:	ldr	w19, [x27, #104]
    53fc:	udiv	w8, w0, w9
    5400:	msub	w26, w8, w9, w0
    5404:	ldr	w8, [x25, w26, uxtw #2]
    5408:	cmp	w19, #0x0
    540c:	rev	w10, w8
    5410:	csel	w8, w8, w10, eq  // eq = none
    5414:	cbz	w8, 5a6c <libintl_textdomain@@Base+0x18d0>
    5418:	sub	w10, w9, #0x2
    541c:	udiv	w11, w0, w10
    5420:	msub	w10, w11, w10, w0
    5424:	stp	x22, x23, [x29, #-64]
    5428:	add	w22, w10, #0x1
    542c:	stur	x21, [x29, #-48]
    5430:	and	x23, x21, #0xffffffff
    5434:	sub	w21, w9, w22
    5438:	stur	x28, [x29, #-80]
    543c:	neg	w28, w21
    5440:	b	5470 <libintl_textdomain@@Base+0x12d4>
    5444:	mov	x0, x20
    5448:	bl	1f60 <strcmp@plt>
    544c:	cbz	w0, 5584 <libintl_textdomain@@Base+0x13e8>
    5450:	cmp	w26, w21
    5454:	csel	w8, w22, w28, cc  // cc = lo, ul, last
    5458:	add	w26, w8, w26
    545c:	ldr	w8, [x25, w26, uxtw #2]
    5460:	cmp	w19, #0x0
    5464:	rev	w9, w8
    5468:	csel	w8, w8, w9, eq  // eq = none
    546c:	cbz	w8, 5a6c <libintl_textdomain@@Base+0x18d0>
    5470:	ldur	x9, [x29, #-40]
    5474:	sub	w24, w8, #0x1
    5478:	cmp	w24, w9
    547c:	b.cs	54cc <libintl_textdomain@@Base+0x1330>  // b.hs, b.nlast
    5480:	ldr	x8, [x27, #48]
    5484:	mov	w9, w24
    5488:	lsl	x10, x9, #3
    548c:	ldr	w11, [x8, x10]
    5490:	ldr	w10, [x27, #24]
    5494:	rev	w12, w11
    5498:	cmp	w10, #0x0
    549c:	csel	w11, w11, w12, eq  // eq = none
    54a0:	ldur	x12, [x29, #-48]
    54a4:	cmp	w11, w12
    54a8:	b.cc	5450 <libintl_textdomain@@Base+0x12b4>  // b.lo, b.ul, b.last
    54ac:	add	x8, x8, x9, lsl #3
    54b0:	ldr	w8, [x8, #4]
    54b4:	ldr	x9, [x27]
    54b8:	cmp	w10, #0x0
    54bc:	rev	w11, w8
    54c0:	csel	w8, w8, w11, eq  // eq = none
    54c4:	add	x1, x9, x8
    54c8:	b	5444 <libintl_textdomain@@Base+0x12a8>
    54cc:	ldr	x8, [x27, #72]
    54d0:	sub	w9, w24, w9
    54d4:	lsl	x10, x9, #4
    54d8:	ldr	x10, [x8, x10]
    54dc:	cmp	x10, x23
    54e0:	b.ls	5450 <libintl_textdomain@@Base+0x12b4>  // b.plast
    54e4:	add	x8, x8, x9, lsl #4
    54e8:	ldr	x1, [x8, #8]
    54ec:	b	5444 <libintl_textdomain@@Base+0x12a8>
    54f0:	mov	x19, xzr
    54f4:	cmp	x19, x21
    54f8:	b.cs	5a6c <libintl_textdomain@@Base+0x18d0>  // b.hs, b.nlast
    54fc:	ldr	x8, [x27, #48]
    5500:	add	x9, x19, x21
    5504:	lsr	x26, x9, #1
    5508:	ldr	w9, [x27, #24]
    550c:	add	x8, x8, x26, lsl #3
    5510:	ldr	w8, [x8, #4]
    5514:	ldr	x10, [x27]
    5518:	cmp	w9, #0x0
    551c:	mov	x0, x20
    5520:	rev	w11, w8
    5524:	csel	w8, w8, w11, eq  // eq = none
    5528:	add	x1, x10, x8
    552c:	bl	1f60 <strcmp@plt>
    5530:	cmp	w0, #0x0
    5534:	csel	x21, x26, x21, lt  // lt = tstop
    5538:	csinc	x19, x19, x26, le
    553c:	cbnz	w0, 54f4 <libintl_textdomain@@Base+0x1358>
    5540:	ldur	x8, [x29, #-40]
    5544:	subs	x8, x26, x8
    5548:	b.cs	55a0 <libintl_textdomain@@Base+0x1404>  // b.hs, b.nlast
    554c:	ldr	x10, [x27, #56]
    5550:	ldr	x8, [x27]
    5554:	ldr	w12, [x27, #24]
    5558:	lsl	x11, x26, #3
    555c:	add	x9, x10, x26, lsl #3
    5560:	ldr	w9, [x9, #4]
    5564:	cbz	w12, 55b4 <libintl_textdomain@@Base+0x1418>
    5568:	ldr	w10, [x10, x11]
    556c:	rev	w9, w9
    5570:	rev	w10, w10
    5574:	add	x20, x8, w9, uxtw
    5578:	add	w24, w10, #0x1
    557c:	cbnz	w25, 55c4 <libintl_textdomain@@Base+0x1428>
    5580:	b	58f4 <libintl_textdomain@@Base+0x1758>
    5584:	ldur	x28, [x29, #-80]
    5588:	ldp	x22, x23, [x29, #-64]
    558c:	ldur	w25, [x29, #-68]
    5590:	mov	w26, w24
    5594:	ldur	x8, [x29, #-40]
    5598:	subs	x8, x26, x8
    559c:	b.cc	554c <libintl_textdomain@@Base+0x13b0>  // b.lo, b.ul, b.last
    55a0:	ldr	x9, [x27, #80]
    55a4:	add	x8, x9, x8, lsl #4
    55a8:	ldp	x24, x20, [x8]
    55ac:	cbnz	w25, 55c4 <libintl_textdomain@@Base+0x1428>
    55b0:	b	58f4 <libintl_textdomain@@Base+0x1758>
    55b4:	ldr	w10, [x10, x11]
    55b8:	add	x20, x8, w9, uxtw
    55bc:	add	w24, w10, #0x1
    55c0:	cbz	w25, 58f4 <libintl_textdomain@@Base+0x1758>
    55c4:	stp	x22, x23, [x29, #-64]
    55c8:	cbz	x23, 55d8 <libintl_textdomain@@Base+0x143c>
    55cc:	ldur	x8, [x29, #-56]
    55d0:	ldr	x23, [x8, #16]
    55d4:	cbnz	x23, 564c <libintl_textdomain@@Base+0x14b0>
    55d8:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x11004>
    55dc:	ldrb	w8, [x19, #968]
    55e0:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x11004>
    55e4:	tbnz	w8, #0, 563c <libintl_textdomain@@Base+0x14a0>
    55e8:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    55ec:	add	x0, x0, #0x4af
    55f0:	bl	20d0 <getenv@plt>
    55f4:	cbz	x0, 5634 <libintl_textdomain@@Base+0x1498>
    55f8:	ldrb	w8, [x0]
    55fc:	mov	x23, x0
    5600:	cbz	w8, 5634 <libintl_textdomain@@Base+0x1498>
    5604:	mov	x0, x23
    5608:	bl	1cc0 <strlen@plt>
    560c:	add	x22, x0, #0x1
    5610:	mov	x0, x22
    5614:	bl	1e10 <malloc@plt>
    5618:	mov	x25, x0
    561c:	cbz	x0, 5630 <libintl_textdomain@@Base+0x1494>
    5620:	mov	x0, x25
    5624:	mov	x1, x23
    5628:	mov	x2, x22
    562c:	bl	1c70 <memcpy@plt>
    5630:	str	x25, [x21, #1000]
    5634:	mov	w8, #0x1                   	// #1
    5638:	strb	w8, [x19, #968]
    563c:	ldr	x23, [x21, #1000]
    5640:	cbnz	x23, 564c <libintl_textdomain@@Base+0x14b0>
    5644:	bl	6618 <libintl_ngettext@@Base+0x8f8>
    5648:	mov	x23, x0
    564c:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5650:	ldr	x8, [x8, #4064]
    5654:	cbz	x8, 5664 <libintl_textdomain@@Base+0x14c8>
    5658:	add	x0, x27, #0x80
    565c:	bl	1cf0 <pthread_rwlock_rdlock@plt>
    5660:	cbnz	w0, 5b30 <libintl_textdomain@@Base+0x1994>
    5664:	ldr	x8, [x27, #120]
    5668:	add	x19, x8, #0x1
    566c:	add	x8, x8, x8, lsl #1
    5670:	lsl	x8, x8, #3
    5674:	sub	x19, x19, #0x1
    5678:	cbz	x19, 56b0 <libintl_textdomain@@Base+0x1514>
    567c:	ldr	x21, [x27, #112]
    5680:	mov	x1, x23
    5684:	sub	x22, x8, #0x18
    5688:	add	x9, x21, x8
    568c:	ldur	x0, [x9, #-24]
    5690:	bl	1f60 <strcmp@plt>
    5694:	mov	x8, x22
    5698:	cbnz	w0, 5674 <libintl_textdomain@@Base+0x14d8>
    569c:	add	x25, x21, x22
    56a0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    56a4:	ldr	x8, [x8, #4064]
    56a8:	cbnz	x8, 56c0 <libintl_textdomain@@Base+0x1524>
    56ac:	b	56cc <libintl_textdomain@@Base+0x1530>
    56b0:	mov	x25, xzr
    56b4:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    56b8:	ldr	x8, [x8, #4064]
    56bc:	cbz	x8, 56cc <libintl_textdomain@@Base+0x1530>
    56c0:	add	x0, x27, #0x80
    56c4:	bl	1fd0 <pthread_rwlock_unlock@plt>
    56c8:	cbnz	w0, 5b30 <libintl_textdomain@@Base+0x1994>
    56cc:	cbnz	x25, 58c4 <libintl_textdomain@@Base+0x1728>
    56d0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    56d4:	ldr	x8, [x8, #4064]
    56d8:	cbz	x8, 56e8 <libintl_textdomain@@Base+0x154c>
    56dc:	add	x0, x27, #0x80
    56e0:	bl	1f30 <pthread_rwlock_wrlock@plt>
    56e4:	cbnz	w0, 5b30 <libintl_textdomain@@Base+0x1994>
    56e8:	ldr	x25, [x27, #120]
    56ec:	add	x8, x25, x25, lsl #1
    56f0:	add	x19, x25, #0x1
    56f4:	lsl	x8, x8, #3
    56f8:	sub	x19, x19, #0x1
    56fc:	cbz	x19, 5734 <libintl_textdomain@@Base+0x1598>
    5700:	ldr	x21, [x27, #112]
    5704:	mov	x1, x23
    5708:	sub	x22, x8, #0x18
    570c:	add	x9, x21, x8
    5710:	ldur	x0, [x9, #-24]
    5714:	bl	1f60 <strcmp@plt>
    5718:	mov	x8, x22
    571c:	cbnz	w0, 56f8 <libintl_textdomain@@Base+0x155c>
    5720:	add	x25, x21, x22
    5724:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5728:	ldr	x8, [x8, #4064]
    572c:	cbnz	x8, 58b8 <libintl_textdomain@@Base+0x171c>
    5730:	b	58c4 <libintl_textdomain@@Base+0x1728>
    5734:	ldr	x0, [x27, #112]
    5738:	cbz	x0, 5750 <libintl_textdomain@@Base+0x15b4>
    573c:	mov	w8, #0x18                  	// #24
    5740:	orr	x9, xzr, #0x18
    5744:	madd	x1, x25, x8, x9
    5748:	bl	1ed0 <realloc@plt>
    574c:	b	5760 <libintl_textdomain@@Base+0x15c4>
    5750:	mov	w8, #0x18                  	// #24
    5754:	orr	x9, xzr, #0x18
    5758:	madd	x0, x25, x8, x9
    575c:	bl	1e10 <malloc@plt>
    5760:	mov	x21, x0
    5764:	cbz	x0, 5b18 <libintl_textdomain@@Base+0x197c>
    5768:	mov	x0, x23
    576c:	str	x21, [x27, #112]
    5770:	bl	1ee0 <strdup@plt>
    5774:	cbz	x0, 5b18 <libintl_textdomain@@Base+0x197c>
    5778:	mov	w8, #0x18                  	// #24
    577c:	stur	x25, [x29, #-48]
    5780:	madd	x25, x25, x8, x21
    5784:	mov	x23, x0
    5788:	str	x0, [x25]
    578c:	ldp	x0, x1, [x29, #-64]
    5790:	adrp	x2, 7000 <bind_textdomain_codeset@@Base+0x4>
    5794:	mov	x8, #0xffffffffffffffff    	// #-1
    5798:	mov	x22, x25
    579c:	add	x2, x2, #0x44d
    57a0:	sub	x4, x29, #0x8
    57a4:	mov	w3, wzr
    57a8:	str	x8, [x22, #8]!
    57ac:	bl	5368 <libintl_textdomain@@Base+0x11cc>
    57b0:	cbz	x0, 5890 <libintl_textdomain@@Base+0x16f4>
    57b4:	cmn	x0, #0x1
    57b8:	b.eq	5b10 <libintl_textdomain@@Base+0x1974>  // b.none
    57bc:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    57c0:	add	x1, x1, #0x441
    57c4:	bl	2080 <strstr@plt>
    57c8:	cbz	x0, 5890 <libintl_textdomain@@Base+0x16f4>
    57cc:	stp	x22, x21, [x29, #-64]
    57d0:	add	x22, x0, #0x8
    57d4:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    57d8:	add	x1, x1, #0x44a
    57dc:	mov	x0, x22
    57e0:	bl	20b0 <strcspn@plt>
    57e4:	add	x8, x0, #0x10
    57e8:	and	x8, x8, #0xfffffffffffffff0
    57ec:	mov	x9, sp
    57f0:	sub	x21, x9, x8
    57f4:	mov	x19, x0
    57f8:	mov	sp, x21
    57fc:	mov	x0, x21
    5800:	mov	x1, x22
    5804:	mov	x2, x19
    5808:	bl	1c70 <memcpy@plt>
    580c:	mov	w1, #0x2f                  	// #47
    5810:	mov	x0, x23
    5814:	strb	wzr, [x21, x19]
    5818:	bl	1ff0 <strchr@plt>
    581c:	cbnz	x0, 587c <libintl_textdomain@@Base+0x16e0>
    5820:	mov	x0, x23
    5824:	bl	1cc0 <strlen@plt>
    5828:	add	x9, x0, #0x1a
    582c:	mov	x8, sp
    5830:	and	x9, x9, #0xfffffffffffffff0
    5834:	mov	x19, x21
    5838:	sub	x21, x8, x9
    583c:	mov	x22, x0
    5840:	mov	sp, x21
    5844:	mov	x0, x21
    5848:	mov	x1, x23
    584c:	mov	x2, x22
    5850:	bl	1c70 <memcpy@plt>
    5854:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    5858:	add	x8, x8, #0x44e
    585c:	ldr	x8, [x8]
    5860:	mov	w10, #0x494c                	// #18764
    5864:	add	x9, x21, x22
    5868:	movk	w10, #0x54, lsl #16
    586c:	mov	x23, x21
    5870:	mov	x21, x19
    5874:	stur	w10, [x9, #7]
    5878:	str	x8, [x9]
    587c:	mov	x0, x23
    5880:	mov	x1, x21
    5884:	bl	2030 <iconv_open@plt>
    5888:	ldp	x8, x21, [x29, #-64]
    588c:	str	x0, [x8]
    5890:	ldur	x9, [x29, #-48]
    5894:	mov	w8, #0x18                  	// #24
    5898:	madd	x8, x9, x8, x21
    589c:	str	xzr, [x8, #16]
    58a0:	ldr	x8, [x27, #120]
    58a4:	add	x8, x8, #0x1
    58a8:	str	x8, [x27, #120]
    58ac:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    58b0:	ldr	x8, [x8, #4064]
    58b4:	cbz	x8, 58c4 <libintl_textdomain@@Base+0x1728>
    58b8:	add	x0, x27, #0x80
    58bc:	bl	1fd0 <pthread_rwlock_unlock@plt>
    58c0:	cbnz	w0, 5b30 <libintl_textdomain@@Base+0x1994>
    58c4:	ldr	x8, [x25, #8]
    58c8:	cmn	x8, #0x1
    58cc:	b.eq	58f4 <libintl_textdomain@@Base+0x1758>  // b.none
    58d0:	ldr	x8, [x25, #16]
    58d4:	cbz	x8, 5a94 <libintl_textdomain@@Base+0x18f8>
    58d8:	cmn	x8, #0x1
    58dc:	b.eq	59e8 <libintl_textdomain@@Base+0x184c>  // b.none
    58e0:	ldr	x8, [x8, x26, lsl #3]
    58e4:	cbz	x8, 58fc <libintl_textdomain@@Base+0x1760>
    58e8:	ldr	x8, [x25, #16]
    58ec:	ldr	x20, [x8, x26, lsl #3]
    58f0:	ldr	x24, [x20], #8
    58f4:	str	x24, [x28]
    58f8:	b	5a70 <libintl_textdomain@@Base+0x18d4>
    58fc:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5900:	ldr	x8, [x8, #4064]
    5904:	cbz	x8, 5918 <libintl_textdomain@@Base+0x177c>
    5908:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    590c:	add	x0, x0, #0x3f0
    5910:	bl	20e0 <pthread_mutex_lock@plt>
    5914:	cbnz	w0, 5b30 <libintl_textdomain@@Base+0x1994>
    5918:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x11004>
    591c:	ldr	x0, [x22, #984]
    5920:	mov	w23, wzr
    5924:	mov	x21, xzr
    5928:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x11004>
    592c:	mov	w27, #0xff0                 	// #4080
    5930:	b	5950 <libintl_textdomain@@Base+0x17b4>
    5934:	mov	w0, #0xff0                 	// #4080
    5938:	str	x27, [x19, #992]
    593c:	bl	1e10 <malloc@plt>
    5940:	mov	w23, #0x1                   	// #1
    5944:	cbz	x0, 59c0 <libintl_textdomain@@Base+0x1824>
    5948:	str	x0, [x22, #984]
    594c:	mov	x21, x0
    5950:	ldr	x8, [x19, #992]
    5954:	add	x9, x0, #0x8
    5958:	stp	x24, x20, [x29, #-16]
    595c:	stur	x9, [x29, #-24]
    5960:	subs	x8, x8, #0x8
    5964:	b.cc	599c <libintl_textdomain@@Base+0x1800>  // b.lo, b.ul, b.last
    5968:	stur	x8, [x29, #-32]
    596c:	ldr	x0, [x25, #8]
    5970:	sub	x1, x29, #0x8
    5974:	sub	x2, x29, #0x10
    5978:	sub	x3, x29, #0x18
    597c:	sub	x4, x29, #0x20
    5980:	bl	1f70 <iconv@plt>
    5984:	cmn	x0, #0x1
    5988:	b.ne	59f0 <libintl_textdomain@@Base+0x1854>  // b.any
    598c:	bl	20c0 <__errno_location@plt>
    5990:	ldr	w8, [x0]
    5994:	cmp	w8, #0x7
    5998:	b.ne	5a50 <libintl_textdomain@@Base+0x18b4>  // b.any
    599c:	cmp	w23, #0x1
    59a0:	b.lt	5934 <libintl_textdomain@@Base+0x1798>  // b.tstop
    59a4:	add	w23, w23, #0x1
    59a8:	mul	w8, w23, w27
    59ac:	sxtw	x1, w8
    59b0:	mov	x0, x21
    59b4:	str	x1, [x19, #992]
    59b8:	bl	1ed0 <realloc@plt>
    59bc:	cbnz	x0, 5948 <libintl_textdomain@@Base+0x17ac>
    59c0:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    59c4:	add	x8, x8, #0x3d8
    59c8:	stp	xzr, xzr, [x8]
    59cc:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    59d0:	ldr	x8, [x8, #4064]
    59d4:	cbz	x8, 59e8 <libintl_textdomain@@Base+0x184c>
    59d8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    59dc:	add	x0, x0, #0x3f0
    59e0:	bl	20f0 <pthread_mutex_unlock@plt>
    59e4:	cbnz	w0, 5b30 <libintl_textdomain@@Base+0x1994>
    59e8:	mov	x20, #0xffffffffffffffff    	// #-1
    59ec:	b	5a70 <libintl_textdomain@@Base+0x18d4>
    59f0:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x11004>
    59f4:	add	x9, x9, #0x3d8
    59f8:	ldur	x8, [x29, #-24]
    59fc:	ldr	x10, [x9]
    5a00:	sub	x11, x8, x10
    5a04:	sub	x11, x11, #0x8
    5a08:	str	x11, [x10]
    5a0c:	ldr	x11, [x25, #16]
    5a10:	str	x10, [x11, x26, lsl #3]
    5a14:	ldp	x10, x11, [x9]
    5a18:	sub	x10, x10, x8
    5a1c:	add	x10, x11, x10
    5a20:	and	x11, x10, #0x7
    5a24:	and	x10, x10, #0xfffffffffffffff8
    5a28:	add	x8, x8, x11
    5a2c:	stp	x8, x10, [x9]
    5a30:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5a34:	ldr	x8, [x8, #4064]
    5a38:	cbz	x8, 58e8 <libintl_textdomain@@Base+0x174c>
    5a3c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    5a40:	add	x0, x0, #0x3f0
    5a44:	bl	20f0 <pthread_mutex_unlock@plt>
    5a48:	cbz	w0, 58e8 <libintl_textdomain@@Base+0x174c>
    5a4c:	b	5b30 <libintl_textdomain@@Base+0x1994>
    5a50:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5a54:	ldr	x8, [x8, #4064]
    5a58:	cbz	x8, 5a6c <libintl_textdomain@@Base+0x18d0>
    5a5c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    5a60:	add	x0, x0, #0x3f0
    5a64:	bl	20f0 <pthread_mutex_unlock@plt>
    5a68:	cbnz	w0, 5b30 <libintl_textdomain@@Base+0x1994>
    5a6c:	mov	x20, xzr
    5a70:	mov	x0, x20
    5a74:	mov	sp, x29
    5a78:	ldp	x20, x19, [sp, #80]
    5a7c:	ldp	x22, x21, [sp, #64]
    5a80:	ldp	x24, x23, [sp, #48]
    5a84:	ldp	x26, x25, [sp, #32]
    5a88:	ldp	x28, x27, [sp, #16]
    5a8c:	ldp	x29, x30, [sp], #96
    5a90:	ret
    5a94:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5a98:	ldr	x8, [x8, #4064]
    5a9c:	mov	x19, x28
    5aa0:	cbz	x8, 5abc <libintl_textdomain@@Base+0x1920>
    5aa4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    5aa8:	add	x0, x0, #0x3f0
    5aac:	bl	20e0 <pthread_mutex_lock@plt>
    5ab0:	cbnz	w0, 5b30 <libintl_textdomain@@Base+0x1994>
    5ab4:	ldr	x8, [x25, #16]
    5ab8:	cbnz	x8, 5ae4 <libintl_textdomain@@Base+0x1948>
    5abc:	ldr	w8, [x27, #64]
    5ac0:	ldur	x9, [x29, #-40]
    5ac4:	mov	w1, #0x8                   	// #8
    5ac8:	add	w0, w8, w9
    5acc:	bl	1ea0 <calloc@plt>
    5ad0:	mov	x28, x19
    5ad4:	str	x0, [x25, #16]
    5ad8:	cbnz	x0, 5918 <libintl_textdomain@@Base+0x177c>
    5adc:	mov	x8, #0xffffffffffffffff    	// #-1
    5ae0:	str	x8, [x25, #16]
    5ae4:	adrp	x9, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5ae8:	ldr	x9, [x9, #4064]
    5aec:	mov	x28, x19
    5af0:	cbz	x9, 58d8 <libintl_textdomain@@Base+0x173c>
    5af4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    5af8:	add	x0, x0, #0x3f0
    5afc:	bl	20f0 <pthread_mutex_unlock@plt>
    5b00:	cbnz	w0, 5b30 <libintl_textdomain@@Base+0x1994>
    5b04:	ldr	x8, [x25, #16]
    5b08:	mov	x28, x19
    5b0c:	b	58d8 <libintl_textdomain@@Base+0x173c>
    5b10:	mov	x0, x23
    5b14:	bl	1fb0 <free@plt>
    5b18:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    5b1c:	ldr	x8, [x8, #4064]
    5b20:	cbz	x8, 59e8 <libintl_textdomain@@Base+0x184c>
    5b24:	add	x0, x27, #0x80
    5b28:	bl	1fd0 <pthread_rwlock_unlock@plt>
    5b2c:	cbz	w0, 59e8 <libintl_textdomain@@Base+0x184c>
    5b30:	bl	1f20 <abort@plt>
    5b34:	stp	x29, x30, [sp, #-48]!
    5b38:	stp	x22, x21, [sp, #16]
    5b3c:	stp	x20, x19, [sp, #32]
    5b40:	mov	x19, x1
    5b44:	mov	x20, x0
    5b48:	mov	w21, #0x8                   	// #8
    5b4c:	mov	w22, #0x10                  	// #16
    5b50:	mov	x29, sp
    5b54:	ldr	w8, [x20]
    5b58:	cmp	w8, #0x3
    5b5c:	b.ne	5b84 <libintl_textdomain@@Base+0x19e8>  // b.any
    5b60:	ldr	x0, [x20, #8]!
    5b64:	mov	x1, x19
    5b68:	bl	5b34 <libintl_textdomain@@Base+0x1998>
    5b6c:	cmp	x0, #0x0
    5b70:	csel	x8, x22, x21, eq  // eq = none
    5b74:	ldr	x20, [x20, x8]
    5b78:	ldr	w8, [x20]
    5b7c:	cmp	w8, #0x3
    5b80:	b.eq	5b60 <libintl_textdomain@@Base+0x19c4>  // b.none
    5b84:	cmp	w8, #0x2
    5b88:	b.eq	5bb0 <libintl_textdomain@@Base+0x1a14>  // b.none
    5b8c:	cmp	w8, #0x1
    5b90:	b.eq	5be0 <libintl_textdomain@@Base+0x1a44>  // b.none
    5b94:	cbnz	w8, 5c6c <libintl_textdomain@@Base+0x1ad0>
    5b98:	ldr	w8, [x20, #4]
    5b9c:	cbz	w8, 5c70 <libintl_textdomain@@Base+0x1ad4>
    5ba0:	cmp	w8, #0x1
    5ba4:	b.ne	5c6c <libintl_textdomain@@Base+0x1ad0>  // b.any
    5ba8:	ldr	x19, [x20, #8]
    5bac:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5bb0:	ldr	x0, [x20, #8]
    5bb4:	mov	x1, x19
    5bb8:	bl	5b34 <libintl_textdomain@@Base+0x1998>
    5bbc:	ldr	w8, [x20, #4]
    5bc0:	mov	x21, x0
    5bc4:	cmp	w8, #0xe
    5bc8:	b.eq	5c04 <libintl_textdomain@@Base+0x1a68>  // b.none
    5bcc:	cmp	w8, #0xf
    5bd0:	b.ne	5c2c <libintl_textdomain@@Base+0x1a90>  // b.any
    5bd4:	cbz	x21, 5c08 <libintl_textdomain@@Base+0x1a6c>
    5bd8:	mov	w19, #0x1                   	// #1
    5bdc:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5be0:	ldr	x0, [x20, #8]
    5be4:	mov	x1, x19
    5be8:	bl	5b34 <libintl_textdomain@@Base+0x1998>
    5bec:	cmp	x0, #0x0
    5bf0:	cset	w0, eq  // eq = none
    5bf4:	ldp	x20, x19, [sp, #32]
    5bf8:	ldp	x22, x21, [sp, #16]
    5bfc:	ldp	x29, x30, [sp], #48
    5c00:	ret
    5c04:	cbz	x21, 5c6c <libintl_textdomain@@Base+0x1ad0>
    5c08:	ldr	x0, [x20, #16]
    5c0c:	mov	x1, x19
    5c10:	bl	5b34 <libintl_textdomain@@Base+0x1998>
    5c14:	cmp	x0, #0x0
    5c18:	cset	w0, ne  // ne = any
    5c1c:	ldp	x20, x19, [sp, #32]
    5c20:	ldp	x22, x21, [sp, #16]
    5c24:	ldp	x29, x30, [sp], #48
    5c28:	ret
    5c2c:	ldr	x0, [x20, #16]
    5c30:	mov	x1, x19
    5c34:	bl	5b34 <libintl_textdomain@@Base+0x1998>
    5c38:	ldr	w8, [x20, #4]
    5c3c:	sub	w8, w8, #0x3
    5c40:	cmp	w8, #0xa
    5c44:	b.hi	5c6c <libintl_textdomain@@Base+0x1ad0>  // b.pmore
    5c48:	adrp	x9, 7000 <bind_textdomain_codeset@@Base+0x4>
    5c4c:	add	x9, x9, #0x3fc
    5c50:	adr	x10, 5c64 <libintl_textdomain@@Base+0x1ac8>
    5c54:	ldrb	w11, [x9, x8]
    5c58:	add	x10, x10, x11, lsl #2
    5c5c:	mov	x19, x0
    5c60:	br	x10
    5c64:	mul	x19, x19, x21
    5c68:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5c6c:	mov	x19, xzr
    5c70:	mov	x0, x19
    5c74:	ldp	x20, x19, [sp, #32]
    5c78:	ldp	x22, x21, [sp, #16]
    5c7c:	ldp	x29, x30, [sp], #48
    5c80:	ret
    5c84:	cbnz	x19, 5c90 <libintl_textdomain@@Base+0x1af4>
    5c88:	mov	w0, #0x8                   	// #8
    5c8c:	bl	1cd0 <raise@plt>
    5c90:	udiv	x19, x21, x19
    5c94:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5c98:	cbnz	x19, 5ca4 <libintl_textdomain@@Base+0x1b08>
    5c9c:	mov	w0, #0x8                   	// #8
    5ca0:	bl	1cd0 <raise@plt>
    5ca4:	udiv	x8, x21, x19
    5ca8:	msub	x19, x8, x19, x21
    5cac:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5cb0:	add	x19, x19, x21
    5cb4:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5cb8:	sub	x19, x21, x19
    5cbc:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5cc0:	cmp	x21, x19
    5cc4:	cset	w19, cc  // cc = lo, ul, last
    5cc8:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5ccc:	cmp	x21, x19
    5cd0:	cset	w19, hi  // hi = pmore
    5cd4:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5cd8:	cmp	x21, x19
    5cdc:	cset	w19, ls  // ls = plast
    5ce0:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5ce4:	cmp	x21, x19
    5ce8:	cset	w19, cs  // cs = hs, nlast
    5cec:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5cf0:	cmp	x21, x19
    5cf4:	cset	w19, eq  // eq = none
    5cf8:	b	5c70 <libintl_textdomain@@Base+0x1ad4>
    5cfc:	cmp	x21, x19
    5d00:	cset	w19, ne  // ne = any
    5d04:	b	5c70 <libintl_textdomain@@Base+0x1ad4>

0000000000005d08 <libintl_dcngettext@@Base>:
    5d08:	mov	w5, w4
    5d0c:	mov	x4, x3
    5d10:	mov	w3, #0x1                   	// #1
    5d14:	b	4a5c <libintl_textdomain@@Base+0x8c0>

0000000000005d18 <libintl_dngettext@@Base>:
    5d18:	mov	w4, #0x5                   	// #5
    5d1c:	b	1e60 <libintl_dcngettext@plt>

0000000000005d20 <libintl_ngettext@@Base>:
    5d20:	mov	x3, x2
    5d24:	mov	x2, x1
    5d28:	mov	w4, #0x5                   	// #5
    5d2c:	mov	x1, x0
    5d30:	mov	x0, xzr
    5d34:	b	1e60 <libintl_dcngettext@plt>
    5d38:	str	d12, [sp, #-144]!
    5d3c:	stp	d11, d10, [sp, #16]
    5d40:	stp	d9, d8, [sp, #32]
    5d44:	stp	x29, x30, [sp, #48]
    5d48:	stp	x28, x27, [sp, #64]
    5d4c:	stp	x26, x25, [sp, #80]
    5d50:	stp	x24, x23, [sp, #96]
    5d54:	stp	x22, x21, [sp, #112]
    5d58:	stp	x20, x19, [sp, #128]
    5d5c:	mov	x29, sp
    5d60:	sub	sp, sp, #0x800
    5d64:	add	x8, sp, #0x28
    5d68:	str	x8, [x29, #8]
    5d6c:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    5d70:	ldr	d8, [x8, #1248]
    5d74:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    5d78:	ldr	d9, [x8, #1240]
    5d7c:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    5d80:	ldr	d10, [x8, #1232]
    5d84:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    5d88:	ldr	d11, [x8, #1224]
    5d8c:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    5d90:	ldr	d12, [x8, #1216]
    5d94:	mov	w27, #0x28c                 	// #652
    5d98:	adrp	x24, 7000 <bind_textdomain_codeset@@Base+0x4>
    5d9c:	mov	w19, #0x160                 	// #352
    5da0:	stp	xzr, x0, [sp, #16]
    5da4:	str	xzr, [sp, #8]
    5da8:	str	wzr, [sp, #36]
    5dac:	mov	w28, wzr
    5db0:	movk	w27, #0x102, lsl #16
    5db4:	mov	w22, #0xfffffffe            	// #-2
    5db8:	mov	w21, #0xc8                  	// #200
    5dbc:	add	x24, x24, #0x5da
    5dc0:	movk	w19, #0x4bc, lsl #16
    5dc4:	add	x23, sp, #0x668
    5dc8:	add	x26, sp, #0x28
    5dcc:	add	x20, sp, #0x668
    5dd0:	add	x8, x20, x21, lsl #1
    5dd4:	sub	x8, x8, #0x2
    5dd8:	cmp	x8, x23
    5ddc:	strh	w28, [x23]
    5de0:	b.hi	5e98 <libintl_ngettext@@Base+0x178>  // b.pmore
    5de4:	lsr	x8, x21, #4
    5de8:	cmp	x8, #0x270
    5dec:	b.hi	6490 <libintl_ngettext@@Base+0x770>  // b.pmore
    5df0:	ubfx	x9, x21, #3, #60
    5df4:	lsl	x8, x21, #1
    5df8:	cmp	x9, #0x271
    5dfc:	mov	w9, #0x2710                	// #10000
    5e00:	csel	x21, x8, x9, cc  // cc = lo, ul, last
    5e04:	mov	w8, #0xa                   	// #10
    5e08:	orr	x9, xzr, #0x7
    5e0c:	madd	x0, x21, x8, x9
    5e10:	mov	x19, x24
    5e14:	bl	1e10 <malloc@plt>
    5e18:	cbz	x0, 6490 <libintl_ngettext@@Base+0x770>
    5e1c:	sub	x8, x23, x20
    5e20:	asr	x26, x8, #1
    5e24:	add	x23, x26, #0x1
    5e28:	lsl	x2, x23, #1
    5e2c:	mov	x1, x20
    5e30:	mov	x24, x0
    5e34:	bl	1c70 <memcpy@plt>
    5e38:	lsl	x8, x21, #1
    5e3c:	add	x8, x8, #0x7
    5e40:	ldr	x1, [x29, #8]
    5e44:	and	x8, x8, #0xfffffffffffffff8
    5e48:	add	x25, x24, x8
    5e4c:	lsl	x2, x23, #3
    5e50:	mov	x0, x25
    5e54:	bl	1c70 <memcpy@plt>
    5e58:	add	x8, sp, #0x668
    5e5c:	cmp	x20, x8
    5e60:	b.eq	5e6c <libintl_ngettext@@Base+0x14c>  // b.none
    5e64:	mov	x0, x20
    5e68:	bl	1fb0 <free@plt>
    5e6c:	add	x8, x24, x21, lsl #1
    5e70:	add	x23, x24, x26, lsl #1
    5e74:	sub	x8, x8, #0x2
    5e78:	cmp	x8, x23
    5e7c:	b.ls	64b8 <libintl_ngettext@@Base+0x798>  // b.plast
    5e80:	mov	x20, x24
    5e84:	mov	x24, x19
    5e88:	mov	w19, #0x160                 	// #352
    5e8c:	add	x26, x25, x26, lsl #3
    5e90:	movk	w19, #0x4bc, lsl #16
    5e94:	str	x25, [x29, #8]
    5e98:	cmp	w28, #0x9
    5e9c:	b.eq	64b0 <libintl_ngettext@@Base+0x790>  // b.none
    5ea0:	lsr	x9, x27, x28
    5ea4:	sxtw	x8, w28
    5ea8:	tbnz	w9, #0, 5fd8 <libintl_ngettext@@Base+0x2b8>
    5eac:	cmn	w22, #0x2
    5eb0:	b.ne	5f4c <libintl_ngettext@@Base+0x22c>  // b.any
    5eb4:	ldr	x9, [sp, #24]
    5eb8:	ldr	x9, [x9]
    5ebc:	add	x9, x9, #0x1
    5ec0:	ldurb	w22, [x9, #-1]
    5ec4:	cmp	w22, #0x9
    5ec8:	b.eq	5ebc <libintl_ngettext@@Base+0x19c>  // b.none
    5ecc:	cmp	w22, #0x20
    5ed0:	b.eq	5ebc <libintl_ngettext@@Base+0x19c>  // b.none
    5ed4:	cbnz	w22, 5ee0 <libintl_ngettext@@Base+0x1c0>
    5ed8:	sub	x9, x9, #0x1
    5edc:	b	5f44 <libintl_ngettext@@Base+0x224>
    5ee0:	sub	w10, w22, #0xa
    5ee4:	cmp	w10, #0x72
    5ee8:	b.hi	634c <libintl_ngettext@@Base+0x62c>  // b.pmore
    5eec:	adrp	x13, 7000 <bind_textdomain_codeset@@Base+0x4>
    5ef0:	add	x13, x13, #0x4e8
    5ef4:	adr	x11, 5f04 <libintl_ngettext@@Base+0x1e4>
    5ef8:	ldrh	w12, [x13, x10, lsl #1]
    5efc:	add	x11, x11, x12, lsl #2
    5f00:	br	x11
    5f04:	ldrb	w10, [x9]
    5f08:	sub	w11, w10, #0x30
    5f0c:	cmp	w11, #0x9
    5f10:	sub	x11, x22, #0x30
    5f14:	b.hi	5f38 <libintl_ngettext@@Base+0x218>  // b.pmore
    5f18:	mov	w13, #0xa                   	// #10
    5f1c:	mul	x11, x11, x13
    5f20:	add	x11, x11, w10, uxtb
    5f24:	ldrb	w10, [x9, #1]!
    5f28:	sub	x11, x11, #0x30
    5f2c:	sub	w12, w10, #0x30
    5f30:	cmp	w12, #0xa
    5f34:	b.cc	5f1c <libintl_ngettext@@Base+0x1fc>  // b.lo, b.ul, b.last
    5f38:	lsr	x10, x11, #32
    5f3c:	stp	x10, x11, [sp, #8]
    5f40:	mov	w22, #0x106                 	// #262
    5f44:	ldr	x10, [sp, #24]
    5f48:	str	x9, [x10]
    5f4c:	ldrsb	w9, [x24, x8]
    5f50:	cmp	w22, #0x1
    5f54:	b.lt	5f7c <libintl_ngettext@@Base+0x25c>  // b.tstop
    5f58:	cmp	w22, #0x106
    5f5c:	b.hi	5f94 <libintl_ngettext@@Base+0x274>  // b.pmore
    5f60:	adrp	x10, 7000 <bind_textdomain_codeset@@Base+0x4>
    5f64:	add	x10, x10, #0x5f5
    5f68:	ldrb	w10, [x10, w22, uxtw]
    5f6c:	add	w9, w10, w9
    5f70:	cmp	w9, #0x36
    5f74:	b.ls	5fa4 <libintl_ngettext@@Base+0x284>  // b.plast
    5f78:	b	5fd8 <libintl_ngettext@@Base+0x2b8>
    5f7c:	mov	w10, wzr
    5f80:	mov	w22, wzr
    5f84:	add	w9, w10, w9
    5f88:	cmp	w9, #0x36
    5f8c:	b.ls	5fa4 <libintl_ngettext@@Base+0x284>  // b.plast
    5f90:	b	5fd8 <libintl_ngettext@@Base+0x2b8>
    5f94:	mov	w10, #0x2                   	// #2
    5f98:	add	w9, w10, w9
    5f9c:	cmp	w9, #0x36
    5fa0:	b.hi	5fd8 <libintl_ngettext@@Base+0x2b8>  // b.pmore
    5fa4:	adrp	x11, 7000 <bind_textdomain_codeset@@Base+0x4>
    5fa8:	add	x11, x11, #0x6fc
    5fac:	ldrsb	w11, [x11, x9]
    5fb0:	cmp	w10, w11
    5fb4:	b.ne	5fd8 <libintl_ngettext@@Base+0x2b8>  // b.any
    5fb8:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    5fbc:	add	x8, x8, #0x733
    5fc0:	ldrb	w28, [x8, x9]
    5fc4:	orr	x8, x9, #0x1
    5fc8:	cmp	x8, #0x25
    5fcc:	b.ne	60c8 <libintl_ngettext@@Base+0x3a8>  // b.any
    5fd0:	neg	w8, w28
    5fd4:	b	5ff4 <libintl_ngettext@@Base+0x2d4>
    5fd8:	mov	w9, #0xfd33                	// #64819
    5fdc:	movk	w9, #0x205, lsl #16
    5fe0:	lsr	x9, x9, x8
    5fe4:	tbnz	w9, #0, 6074 <libintl_ngettext@@Base+0x354>
    5fe8:	adrp	x9, 7000 <bind_textdomain_codeset@@Base+0x4>
    5fec:	add	x9, x9, #0x76a
    5ff0:	ldrb	w8, [x9, x8]
    5ff4:	adrp	x9, 7000 <bind_textdomain_codeset@@Base+0x4>
    5ff8:	sxtw	x25, w8
    5ffc:	add	x9, x9, #0x785
    6000:	ldrb	w28, [x9, x25]
    6004:	mov	w9, #0x1                   	// #1
    6008:	sub	w8, w8, #0x2
    600c:	cmp	w8, #0xb
    6010:	sub	x9, x9, x28
    6014:	ldr	x0, [x26, x9, lsl #3]
    6018:	b.hi	6228 <libintl_ngettext@@Base+0x508>  // b.pmore
    601c:	adrp	x11, 7000 <bind_textdomain_codeset@@Base+0x4>
    6020:	add	x11, x11, #0x5ce
    6024:	adr	x9, 6034 <libintl_ngettext@@Base+0x314>
    6028:	ldrb	w10, [x11, x8]
    602c:	add	x9, x9, x10, lsl #2
    6030:	br	x9
    6034:	ldur	x8, [x26, #-16]
    6038:	ldr	x24, [x26]
    603c:	mov	x19, x8
    6040:	cbz	x8, 6204 <libintl_ngettext@@Base+0x4e4>
    6044:	cbz	x24, 6204 <libintl_ngettext@@Base+0x4e4>
    6048:	ldur	w8, [x26, #-8]
    604c:	mov	w0, #0x20                  	// #32
    6050:	str	w8, [sp]
    6054:	bl	1e10 <malloc@plt>
    6058:	cbz	x0, 6204 <libintl_ngettext@@Base+0x4e4>
    605c:	mov	w8, #0x2                   	// #2
    6060:	str	w8, [x0]
    6064:	ldr	w8, [sp]
    6068:	str	w8, [x0, #4]
    606c:	stp	x19, x24, [x0, #8]
    6070:	b	6218 <libintl_ngettext@@Base+0x4f8>
    6074:	ldr	w8, [sp, #36]
    6078:	cmp	w8, #0x3
    607c:	b.eq	60ac <libintl_ngettext@@Base+0x38c>  // b.none
    6080:	cbnz	w8, 60f8 <libintl_ngettext@@Base+0x3d8>
    6084:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6088:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    608c:	mov	w2, #0x5                   	// #5
    6090:	add	x0, x0, #0x7a7
    6094:	add	x1, x1, #0x7b5
    6098:	bl	1f40 <dcgettext@plt>
    609c:	add	x26, x26, #0x8
    60a0:	lsr	x8, x27, x28
    60a4:	tbnz	w8, #0, 6128 <libintl_ngettext@@Base+0x408>
    60a8:	b	6104 <libintl_ngettext@@Base+0x3e4>
    60ac:	cmp	w22, #0x0
    60b0:	b.le	60f4 <libintl_ngettext@@Base+0x3d4>
    60b4:	mov	w22, #0xfffffffe            	// #-2
    60b8:	add	x26, x26, #0x8
    60bc:	lsr	x8, x27, x28
    60c0:	tbnz	w8, #0, 6128 <libintl_ngettext@@Base+0x408>
    60c4:	b	6104 <libintl_ngettext@@Base+0x3e4>
    60c8:	ldr	w9, [sp, #36]
    60cc:	mov	w22, #0xfffffffe            	// #-2
    60d0:	sub	w8, w9, #0x1
    60d4:	cmp	w9, #0x0
    60d8:	csel	w8, wzr, w8, eq  // eq = none
    60dc:	str	w8, [sp, #36]
    60e0:	ldp	x8, x9, [sp, #8]
    60e4:	mov	w9, w9
    60e8:	bfi	x9, x8, #32, #32
    60ec:	str	x9, [x26, #8]!
    60f0:	b	6294 <libintl_ngettext@@Base+0x574>
    60f4:	cbz	w22, 6448 <libintl_ngettext@@Base+0x728>
    60f8:	add	x26, x26, #0x8
    60fc:	lsr	x8, x27, x28
    6100:	tbnz	w8, #0, 6128 <libintl_ngettext@@Base+0x408>
    6104:	sxtw	x8, w28
    6108:	lsr	x9, x19, x8
    610c:	tbz	w9, #0, 6128 <libintl_ngettext@@Base+0x408>
    6110:	ldrsb	x8, [x24, x8]
    6114:	adds	x8, x8, #0x1
    6118:	b.ne	6128 <libintl_ngettext@@Base+0x408>  // b.any
    611c:	orr	x8, x8, #0x1
    6120:	cmp	x8, #0x25
    6124:	b.ne	6144 <libintl_ngettext@@Base+0x424>  // b.any
    6128:	cmp	x20, x23
    612c:	b.eq	6448 <libintl_ngettext@@Base+0x728>  // b.none
    6130:	ldrsh	w28, [x23, #-2]!
    6134:	sub	x26, x26, #0x8
    6138:	lsr	x8, x27, x28
    613c:	tbz	w8, #0, 6104 <libintl_ngettext@@Base+0x3e4>
    6140:	b	6128 <libintl_ngettext@@Base+0x408>
    6144:	ldp	x9, x8, [sp, #8]
    6148:	mov	w28, #0x7                   	// #7
    614c:	mov	w8, w8
    6150:	bfi	x8, x9, #32, #32
    6154:	str	x8, [x26]
    6158:	mov	w8, #0x3                   	// #3
    615c:	str	w8, [sp, #36]
    6160:	b	6294 <libintl_ngettext@@Base+0x574>
    6164:	ldr	x8, [x26]
    6168:	cbz	x8, 6448 <libintl_ngettext@@Base+0x728>
    616c:	ldr	x9, [sp, #24]
    6170:	str	x8, [x9, #8]
    6174:	b	6228 <libintl_ngettext@@Base+0x508>
    6178:	ldur	x8, [x26, #-32]
    617c:	ldur	x19, [x26, #-16]
    6180:	ldr	x24, [x26]
    6184:	str	x8, [sp]
    6188:	cbz	x8, 62f8 <libintl_ngettext@@Base+0x5d8>
    618c:	cbz	x19, 62f8 <libintl_ngettext@@Base+0x5d8>
    6190:	cbz	x24, 62f8 <libintl_ngettext@@Base+0x5d8>
    6194:	mov	w0, #0x20                  	// #32
    6198:	bl	1e10 <malloc@plt>
    619c:	cbz	x0, 62f8 <libintl_ngettext@@Base+0x5d8>
    61a0:	ldr	x8, [sp]
    61a4:	str	d8, [x0]
    61a8:	str	x24, [x0, #24]
    61ac:	stp	x8, x19, [x0, #8]
    61b0:	b	6218 <libintl_ngettext@@Base+0x4f8>
    61b4:	ldur	x8, [x26, #-16]
    61b8:	ldr	x24, [x26]
    61bc:	mov	x19, x8
    61c0:	cbz	x8, 6204 <libintl_ngettext@@Base+0x4e4>
    61c4:	cbz	x24, 6204 <libintl_ngettext@@Base+0x4e4>
    61c8:	mov	w0, #0x20                  	// #32
    61cc:	bl	1e10 <malloc@plt>
    61d0:	cbz	x0, 6204 <libintl_ngettext@@Base+0x4e4>
    61d4:	str	d9, [x0]
    61d8:	b	606c <libintl_ngettext@@Base+0x34c>
    61dc:	ldur	x8, [x26, #-16]
    61e0:	ldr	x24, [x26]
    61e4:	mov	x19, x8
    61e8:	cbz	x8, 6204 <libintl_ngettext@@Base+0x4e4>
    61ec:	cbz	x24, 6204 <libintl_ngettext@@Base+0x4e4>
    61f0:	mov	w0, #0x20                  	// #32
    61f4:	bl	1e10 <malloc@plt>
    61f8:	cbz	x0, 6204 <libintl_ngettext@@Base+0x4e4>
    61fc:	str	d10, [x0]
    6200:	b	606c <libintl_ngettext@@Base+0x34c>
    6204:	mov	x0, x24
    6208:	bl	64c4 <libintl_ngettext@@Base+0x7a4>
    620c:	mov	x0, x19
    6210:	bl	64c4 <libintl_ngettext@@Base+0x7a4>
    6214:	mov	x0, xzr
    6218:	adrp	x24, 7000 <bind_textdomain_codeset@@Base+0x4>
    621c:	mov	w19, #0x160                 	// #352
    6220:	add	x24, x24, #0x5da
    6224:	movk	w19, #0x4bc, lsl #16
    6228:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    622c:	add	x8, x8, #0x793
    6230:	ldrb	w8, [x8, x25]
    6234:	sub	x26, x26, x28, lsl #3
    6238:	adrp	x9, 7000 <bind_textdomain_codeset@@Base+0x4>
    623c:	sub	x23, x23, x28, lsl #1
    6240:	str	x0, [x26, #8]!
    6244:	sub	x8, x8, #0x10
    6248:	add	x9, x9, #0x7a1
    624c:	ldrsb	w9, [x9, x8]
    6250:	ldrsh	w10, [x23]
    6254:	add	w9, w10, w9
    6258:	cmp	w9, #0x36
    625c:	b.hi	6288 <libintl_ngettext@@Base+0x568>  // b.pmore
    6260:	adrp	x11, 7000 <bind_textdomain_codeset@@Base+0x4>
    6264:	add	x11, x11, #0x6fc
    6268:	ldrsb	w11, [x11, x9]
    626c:	and	w10, w10, #0xffff
    6270:	cmp	w10, w11, uxth
    6274:	b.ne	6288 <libintl_ngettext@@Base+0x568>  // b.any
    6278:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    627c:	add	x8, x8, #0x733
    6280:	ldrb	w28, [x8, x9]
    6284:	b	6294 <libintl_ngettext@@Base+0x574>
    6288:	adrp	x9, 7000 <bind_textdomain_codeset@@Base+0x4>
    628c:	add	x9, x9, #0x7a4
    6290:	ldrsb	w28, [x9, x8]
    6294:	add	x23, x23, #0x2
    6298:	b	5dd0 <libintl_ngettext@@Base+0xb0>
    629c:	mov	x19, x24
    62a0:	ldr	x24, [x26]
    62a4:	cbz	x24, 6310 <libintl_ngettext@@Base+0x5f0>
    62a8:	mov	w0, #0x20                  	// #32
    62ac:	bl	1e10 <malloc@plt>
    62b0:	cbz	x0, 6310 <libintl_ngettext@@Base+0x5f0>
    62b4:	str	d11, [x0]
    62b8:	str	x24, [x0, #8]
    62bc:	b	631c <libintl_ngettext@@Base+0x5fc>
    62c0:	mov	w0, #0x20                  	// #32
    62c4:	bl	1e10 <malloc@plt>
    62c8:	cbz	x0, 6228 <libintl_ngettext@@Base+0x508>
    62cc:	str	xzr, [x0]
    62d0:	b	6228 <libintl_ngettext@@Base+0x508>
    62d4:	mov	w0, #0x20                  	// #32
    62d8:	bl	1e10 <malloc@plt>
    62dc:	cbz	x0, 6228 <libintl_ngettext@@Base+0x508>
    62e0:	ldr	x8, [x26]
    62e4:	str	d12, [x0]
    62e8:	str	x8, [x0, #8]
    62ec:	b	6228 <libintl_ngettext@@Base+0x508>
    62f0:	ldur	x0, [x26, #-8]
    62f4:	b	6228 <libintl_ngettext@@Base+0x508>
    62f8:	mov	x0, x24
    62fc:	bl	64c4 <libintl_ngettext@@Base+0x7a4>
    6300:	mov	x0, x19
    6304:	bl	64c4 <libintl_ngettext@@Base+0x7a4>
    6308:	ldr	x0, [sp]
    630c:	b	6210 <libintl_ngettext@@Base+0x4f0>
    6310:	mov	x0, x24
    6314:	bl	64c4 <libintl_ngettext@@Base+0x7a4>
    6318:	mov	x0, xzr
    631c:	mov	x24, x19
    6320:	mov	w19, #0x160                 	// #352
    6324:	b	6224 <libintl_ngettext@@Base+0x504>
    6328:	mov	w22, wzr
    632c:	b	5ed8 <libintl_ngettext@@Base+0x1b8>
    6330:	mov	x10, x9
    6334:	ldrb	w11, [x10], #1
    6338:	cmp	w11, w22
    633c:	csel	x9, x10, x9, eq  // eq = none
    6340:	mov	w10, #0x100                 	// #256
    6344:	csel	w22, w22, w10, eq  // eq = none
    6348:	b	5f44 <libintl_ngettext@@Base+0x224>
    634c:	mov	w22, #0x100                 	// #256
    6350:	b	5f44 <libintl_ngettext@@Base+0x224>
    6354:	mov	x10, x9
    6358:	ldrb	w11, [x10], #1
    635c:	ldr	x12, [sp, #16]
    6360:	cmp	w11, #0x3d
    6364:	mov	w11, #0xd                   	// #13
    6368:	csel	w12, w11, w12, eq  // eq = none
    636c:	csel	x9, x10, x9, eq  // eq = none
    6370:	mov	w10, #0x21                  	// #33
    6374:	mov	w11, #0x102                 	// #258
    6378:	str	x12, [sp, #16]
    637c:	csel	w22, w11, w10, eq  // eq = none
    6380:	b	5f44 <libintl_ngettext@@Base+0x224>
    6384:	mov	w10, #0x5                   	// #5
    6388:	mov	w22, #0x105                 	// #261
    638c:	str	x10, [sp, #16]
    6390:	b	5f44 <libintl_ngettext@@Base+0x224>
    6394:	mov	w10, #0x3                   	// #3
    6398:	mov	w22, #0x105                 	// #261
    639c:	str	x10, [sp, #16]
    63a0:	b	5f44 <libintl_ngettext@@Base+0x224>
    63a4:	mov	w10, #0x6                   	// #6
    63a8:	mov	w22, #0x104                 	// #260
    63ac:	str	x10, [sp, #16]
    63b0:	b	5f44 <libintl_ngettext@@Base+0x224>
    63b4:	mov	w10, #0x7                   	// #7
    63b8:	mov	w22, #0x104                 	// #260
    63bc:	str	x10, [sp, #16]
    63c0:	b	5f44 <libintl_ngettext@@Base+0x224>
    63c4:	mov	w10, #0x4                   	// #4
    63c8:	mov	w22, #0x105                 	// #261
    63cc:	str	x10, [sp, #16]
    63d0:	b	5f44 <libintl_ngettext@@Base+0x224>
    63d4:	mov	x10, x9
    63d8:	ldrb	w11, [x10], #1
    63dc:	mov	w12, #0x8                   	// #8
    63e0:	cmp	w11, #0x3d
    63e4:	mov	w11, #0xa                   	// #10
    63e8:	csel	w11, w11, w12, eq  // eq = none
    63ec:	b	6438 <libintl_ngettext@@Base+0x718>
    63f0:	mov	x10, x9
    63f4:	ldrb	w11, [x10], #1
    63f8:	ldr	x12, [sp, #16]
    63fc:	cmp	w11, #0x3d
    6400:	mov	w11, #0xc                   	// #12
    6404:	csel	w12, w11, w12, eq  // eq = none
    6408:	csel	x9, x10, x9, eq  // eq = none
    640c:	mov	w10, #0x102                 	// #258
    6410:	mov	w11, #0x100                 	// #256
    6414:	str	x12, [sp, #16]
    6418:	csel	w22, w10, w11, eq  // eq = none
    641c:	b	5f44 <libintl_ngettext@@Base+0x224>
    6420:	mov	x10, x9
    6424:	ldrb	w11, [x10], #1
    6428:	mov	w12, #0xb                   	// #11
    642c:	cmp	w11, #0x3d
    6430:	mov	w11, #0x9                   	// #9
    6434:	csel	w11, w12, w11, eq  // eq = none
    6438:	str	x11, [sp, #16]
    643c:	csel	x9, x10, x9, eq  // eq = none
    6440:	mov	w22, #0x103                 	// #259
    6444:	b	5f44 <libintl_ngettext@@Base+0x224>
    6448:	mov	w19, #0x1                   	// #1
    644c:	add	x8, sp, #0x668
    6450:	cmp	x20, x8
    6454:	b.eq	6460 <libintl_ngettext@@Base+0x740>  // b.none
    6458:	mov	x0, x20
    645c:	bl	1fb0 <free@plt>
    6460:	mov	w0, w19
    6464:	add	sp, sp, #0x800
    6468:	ldp	x20, x19, [sp, #128]
    646c:	ldp	x22, x21, [sp, #112]
    6470:	ldp	x24, x23, [sp, #96]
    6474:	ldp	x26, x25, [sp, #80]
    6478:	ldp	x28, x27, [sp, #64]
    647c:	ldp	x29, x30, [sp, #48]
    6480:	ldp	d9, d8, [sp, #32]
    6484:	ldp	d11, d10, [sp, #16]
    6488:	ldr	d12, [sp], #144
    648c:	ret
    6490:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6494:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    6498:	add	x0, x0, #0x7a7
    649c:	add	x1, x1, #0x7c2
    64a0:	mov	w2, #0x5                   	// #5
    64a4:	bl	1f40 <dcgettext@plt>
    64a8:	mov	w19, #0x2                   	// #2
    64ac:	b	644c <libintl_ngettext@@Base+0x72c>
    64b0:	mov	w19, wzr
    64b4:	b	644c <libintl_ngettext@@Base+0x72c>
    64b8:	mov	w19, #0x1                   	// #1
    64bc:	mov	x20, x24
    64c0:	b	6458 <libintl_ngettext@@Base+0x738>
    64c4:	cbz	x0, 651c <libintl_ngettext@@Base+0x7fc>
    64c8:	stp	x29, x30, [sp, #-32]!
    64cc:	ldr	w8, [x0]
    64d0:	str	x19, [sp, #16]
    64d4:	mov	x19, x0
    64d8:	mov	x29, sp
    64dc:	cmp	w8, #0x1
    64e0:	b.eq	6504 <libintl_ngettext@@Base+0x7e4>  // b.none
    64e4:	cmp	w8, #0x2
    64e8:	b.eq	64fc <libintl_ngettext@@Base+0x7dc>  // b.none
    64ec:	cmp	w8, #0x3
    64f0:	b.ne	650c <libintl_ngettext@@Base+0x7ec>  // b.any
    64f4:	ldr	x0, [x19, #24]
    64f8:	bl	64c4 <libintl_ngettext@@Base+0x7a4>
    64fc:	ldr	x0, [x19, #16]
    6500:	bl	64c4 <libintl_ngettext@@Base+0x7a4>
    6504:	ldr	x0, [x19, #8]
    6508:	bl	64c4 <libintl_ngettext@@Base+0x7a4>
    650c:	mov	x0, x19
    6510:	ldr	x19, [sp, #16]
    6514:	ldp	x29, x30, [sp], #32
    6518:	b	1fb0 <free@plt>
    651c:	ret
    6520:	sub	sp, sp, #0x50
    6524:	stp	x20, x19, [sp, #64]
    6528:	mov	x19, x2
    652c:	mov	x20, x1
    6530:	stp	x29, x30, [sp, #16]
    6534:	str	x23, [sp, #32]
    6538:	stp	x22, x21, [sp, #48]
    653c:	add	x29, sp, #0x10
    6540:	cbz	x0, 65e0 <libintl_ngettext@@Base+0x8c0>
    6544:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    6548:	add	x1, x1, #0x818
    654c:	mov	x22, x0
    6550:	bl	2080 <strstr@plt>
    6554:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    6558:	mov	x21, x0
    655c:	add	x1, x1, #0x820
    6560:	mov	x0, x22
    6564:	bl	2080 <strstr@plt>
    6568:	cbz	x21, 65e0 <libintl_ngettext@@Base+0x8c0>
    656c:	mov	x22, x0
    6570:	cbz	x0, 65e0 <libintl_ngettext@@Base+0x8c0>
    6574:	ldrb	w23, [x22, #9]!
    6578:	cbz	w23, 65e0 <libintl_ngettext@@Base+0x8c0>
    657c:	bl	1f80 <__ctype_b_loc@plt>
    6580:	ldr	x8, [x0]
    6584:	and	x9, x23, #0xff
    6588:	ldrh	w9, [x8, x9, lsl #1]
    658c:	tbz	w9, #13, 659c <libintl_ngettext@@Base+0x87c>
    6590:	ldrb	w23, [x22, #1]!
    6594:	cbnz	w23, 6584 <libintl_ngettext@@Base+0x864>
    6598:	b	65e0 <libintl_ngettext@@Base+0x8c0>
    659c:	sub	w8, w23, #0x30
    65a0:	and	w8, w8, #0xff
    65a4:	cmp	w8, #0x9
    65a8:	b.hi	65e0 <libintl_ngettext@@Base+0x8c0>  // b.pmore
    65ac:	add	x1, x29, #0x18
    65b0:	mov	w2, #0xa                   	// #10
    65b4:	mov	x0, x22
    65b8:	bl	1cb0 <strtoul@plt>
    65bc:	ldr	x8, [x29, #24]
    65c0:	cmp	x8, x22
    65c4:	b.eq	65e0 <libintl_ngettext@@Base+0x8c0>  // b.none
    65c8:	str	x0, [x19]
    65cc:	add	x8, x21, #0x7
    65d0:	mov	x0, sp
    65d4:	str	x8, [sp]
    65d8:	bl	5d38 <libintl_ngettext@@Base+0x18>
    65dc:	cbz	w0, 660c <libintl_ngettext@@Base+0x8ec>
    65e0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x10004>
    65e4:	add	x8, x8, #0xd88
    65e8:	mov	w9, #0x2                   	// #2
    65ec:	str	x8, [x20]
    65f0:	str	x9, [x19]
    65f4:	ldp	x20, x19, [sp, #64]
    65f8:	ldp	x22, x21, [sp, #48]
    65fc:	ldr	x23, [sp, #32]
    6600:	ldp	x29, x30, [sp, #16]
    6604:	add	sp, sp, #0x50
    6608:	ret
    660c:	ldr	x8, [sp, #8]
    6610:	str	x8, [x20]
    6614:	b	65f4 <libintl_ngettext@@Base+0x8d4>
    6618:	stp	x29, x30, [sp, #-16]!
    661c:	mov	w0, #0xe                   	// #14
    6620:	mov	x29, sp
    6624:	bl	1df0 <nl_langinfo@plt>
    6628:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    662c:	add	x8, x8, #0x44d
    6630:	cmp	x0, #0x0
    6634:	csel	x8, x8, x0, eq  // eq = none
    6638:	ldrb	w9, [x8]
    663c:	adrp	x10, 7000 <bind_textdomain_codeset@@Base+0x4>
    6640:	add	x10, x10, #0x82a
    6644:	cmp	w9, #0x0
    6648:	csel	x0, x10, x8, eq  // eq = none
    664c:	ldp	x29, x30, [sp], #16
    6650:	ret
    6654:	sub	sp, sp, #0x30
    6658:	stp	x20, x19, [sp, #32]
    665c:	mov	x19, x0
    6660:	add	x0, sp, #0x8
    6664:	stp	x29, x30, [sp, #16]
    6668:	add	x29, sp, #0x10
    666c:	bl	1c90 <pthread_rwlockattr_init@plt>
    6670:	mov	w20, w0
    6674:	cbnz	w0, 66a4 <libintl_ngettext@@Base+0x984>
    6678:	add	x0, sp, #0x8
    667c:	mov	w1, #0x2                   	// #2
    6680:	bl	1d30 <pthread_rwlockattr_setkind_np@plt>
    6684:	mov	w20, w0
    6688:	cbnz	w0, 669c <libintl_ngettext@@Base+0x97c>
    668c:	add	x1, sp, #0x8
    6690:	mov	x0, x19
    6694:	bl	1d20 <pthread_rwlock_init@plt>
    6698:	mov	w20, w0
    669c:	add	x0, sp, #0x8
    66a0:	bl	2090 <pthread_rwlockattr_destroy@plt>
    66a4:	mov	w0, w20
    66a8:	ldp	x20, x19, [sp, #32]
    66ac:	ldp	x29, x30, [sp, #16]
    66b0:	add	sp, sp, #0x30
    66b4:	ret
    66b8:	sub	sp, sp, #0x30
    66bc:	stp	x20, x19, [sp, #32]
    66c0:	mov	x19, x0
    66c4:	add	x0, sp, #0x8
    66c8:	stp	x29, x30, [sp, #16]
    66cc:	add	x29, sp, #0x10
    66d0:	bl	2050 <pthread_mutexattr_init@plt>
    66d4:	mov	w20, w0
    66d8:	cbnz	w0, 671c <libintl_ngettext@@Base+0x9fc>
    66dc:	add	x0, sp, #0x8
    66e0:	mov	w1, #0x1                   	// #1
    66e4:	bl	1ce0 <pthread_mutexattr_settype@plt>
    66e8:	cbz	w0, 66fc <libintl_ngettext@@Base+0x9dc>
    66ec:	mov	w20, w0
    66f0:	add	x0, sp, #0x8
    66f4:	bl	2070 <pthread_mutexattr_destroy@plt>
    66f8:	b	671c <libintl_ngettext@@Base+0x9fc>
    66fc:	add	x1, sp, #0x8
    6700:	mov	x0, x19
    6704:	bl	1ef0 <pthread_mutex_init@plt>
    6708:	mov	w19, w0
    670c:	add	x0, sp, #0x8
    6710:	bl	2070 <pthread_mutexattr_destroy@plt>
    6714:	cmp	w19, #0x0
    6718:	csel	w20, w0, w19, eq  // eq = none
    671c:	mov	w0, w20
    6720:	ldp	x20, x19, [sp, #32]
    6724:	ldp	x29, x30, [sp, #16]
    6728:	add	sp, sp, #0x30
    672c:	ret
    6730:	ldrb	w8, [x0]
    6734:	cbz	w8, 6740 <libintl_ngettext@@Base+0xa20>
    6738:	mov	w0, wzr
    673c:	ret
    6740:	mov	w8, #0xff                  	// #255
    6744:	strb	w8, [x0]
    6748:	mov	w0, #0x1                   	// #1
    674c:	ret

0000000000006750 <libintl_set_relocation_prefix@@Base>:
    6750:	stp	x29, x30, [sp, #-64]!
    6754:	str	x23, [sp, #16]
    6758:	stp	x22, x21, [sp, #32]
    675c:	stp	x20, x19, [sp, #48]
    6760:	mov	x29, sp
    6764:	cbz	x0, 67e8 <libintl_set_relocation_prefix@@Base+0x98>
    6768:	mov	x19, x1
    676c:	cbz	x1, 67e8 <libintl_set_relocation_prefix@@Base+0x98>
    6770:	mov	x1, x19
    6774:	mov	x20, x0
    6778:	bl	1f60 <strcmp@plt>
    677c:	cbz	w0, 67e8 <libintl_set_relocation_prefix@@Base+0x98>
    6780:	mov	x0, x20
    6784:	bl	1cc0 <strlen@plt>
    6788:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x11004>
    678c:	add	x22, x22, #0x430
    6790:	mov	x21, x0
    6794:	str	x0, [x22]
    6798:	mov	x0, x19
    679c:	bl	1cc0 <strlen@plt>
    67a0:	str	x0, [x22, #8]
    67a4:	add	x22, x21, #0x1
    67a8:	add	x21, x0, #0x1
    67ac:	add	x0, x21, x22
    67b0:	bl	1e10 <malloc@plt>
    67b4:	cbz	x0, 67e8 <libintl_set_relocation_prefix@@Base+0x98>
    67b8:	mov	x1, x20
    67bc:	mov	x2, x22
    67c0:	mov	x23, x0
    67c4:	bl	1c70 <memcpy@plt>
    67c8:	add	x20, x23, x22
    67cc:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    67d0:	mov	x0, x20
    67d4:	mov	x1, x19
    67d8:	mov	x2, x21
    67dc:	str	x23, [x8, #1056]
    67e0:	bl	1c70 <memcpy@plt>
    67e4:	b	67f4 <libintl_set_relocation_prefix@@Base+0xa4>
    67e8:	mov	x20, xzr
    67ec:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    67f0:	str	xzr, [x8, #1056]
    67f4:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    67f8:	str	x20, [x8, #1064]
    67fc:	ldp	x20, x19, [sp, #48]
    6800:	ldp	x22, x21, [sp, #32]
    6804:	ldr	x23, [sp, #16]
    6808:	ldp	x29, x30, [sp], #64
    680c:	ret
    6810:	stp	x29, x30, [sp, #-64]!
    6814:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6818:	add	x8, x8, #0x420
    681c:	ldr	x1, [x8]
    6820:	stp	x20, x19, [sp, #48]
    6824:	mov	x19, x0
    6828:	str	x23, [sp, #16]
    682c:	stp	x22, x21, [sp, #32]
    6830:	mov	x29, sp
    6834:	cbz	x1, 6858 <libintl_set_relocation_prefix@@Base+0x108>
    6838:	ldr	x20, [x8, #8]
    683c:	cbz	x20, 6858 <libintl_set_relocation_prefix@@Base+0x108>
    6840:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6844:	ldr	x21, [x8, #1072]
    6848:	mov	x0, x19
    684c:	mov	x2, x21
    6850:	bl	1e40 <strncmp@plt>
    6854:	cbz	w0, 6870 <libintl_set_relocation_prefix@@Base+0x120>
    6858:	mov	x0, x19
    685c:	ldp	x20, x19, [sp, #48]
    6860:	ldp	x22, x21, [sp, #32]
    6864:	ldr	x23, [sp, #16]
    6868:	ldp	x29, x30, [sp], #64
    686c:	ret
    6870:	add	x21, x19, x21
    6874:	ldrb	w8, [x21]
    6878:	cmp	w8, #0x2f
    687c:	b.eq	68a8 <libintl_set_relocation_prefix@@Base+0x158>  // b.none
    6880:	cbnz	w8, 6858 <libintl_set_relocation_prefix@@Base+0x108>
    6884:	mov	x0, x20
    6888:	bl	1cc0 <strlen@plt>
    688c:	add	x0, x0, #0x1
    6890:	bl	1e10 <malloc@plt>
    6894:	cbz	x0, 6858 <libintl_set_relocation_prefix@@Base+0x108>
    6898:	mov	x1, x20
    689c:	bl	2020 <strcpy@plt>
    68a0:	mov	x19, x0
    68a4:	b	6858 <libintl_set_relocation_prefix@@Base+0x108>
    68a8:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    68ac:	ldr	x22, [x8, #1080]
    68b0:	mov	x0, x21
    68b4:	bl	1cc0 <strlen@plt>
    68b8:	add	x8, x22, x0
    68bc:	add	x0, x8, #0x1
    68c0:	bl	1e10 <malloc@plt>
    68c4:	cbz	x0, 6858 <libintl_set_relocation_prefix@@Base+0x108>
    68c8:	mov	x1, x20
    68cc:	mov	x2, x22
    68d0:	mov	x23, x0
    68d4:	bl	1c70 <memcpy@plt>
    68d8:	add	x0, x23, x22
    68dc:	mov	x1, x21
    68e0:	bl	2020 <strcpy@plt>
    68e4:	mov	x19, x23
    68e8:	b	6858 <libintl_set_relocation_prefix@@Base+0x108>
    68ec:	stp	x29, x30, [sp, #-32]!
    68f0:	stp	x20, x19, [sp, #16]
    68f4:	mov	x29, sp
    68f8:	mov	x19, x1
    68fc:	mov	x20, x0
    6900:	bl	6810 <libintl_set_relocation_prefix@@Base+0xc0>
    6904:	cmp	x0, x20
    6908:	csel	x8, xzr, x0, eq  // eq = none
    690c:	str	x8, [x19]
    6910:	ldp	x20, x19, [sp, #16]
    6914:	ldp	x29, x30, [sp], #32
    6918:	ret
    691c:	mov	x0, xzr
    6920:	ret
    6924:	stp	x29, x30, [sp, #-32]!
    6928:	stp	x20, x19, [sp, #16]
    692c:	mov	w19, w0
    6930:	mov	x0, xzr
    6934:	mov	x29, sp
    6938:	bl	1fa0 <uselocale@plt>
    693c:	cmn	x0, #0x1
    6940:	b.eq	6968 <libintl_set_relocation_prefix@@Base+0x218>  // b.none
    6944:	mov	x20, x0
    6948:	mov	w0, #0xffff                	// #65535
    694c:	bfi	w0, w19, #16, #16
    6950:	bl	1df0 <nl_langinfo@plt>
    6954:	ldrb	w8, [x0]
    6958:	cbz	w8, 6978 <libintl_set_relocation_prefix@@Base+0x228>
    695c:	ldp	x20, x19, [sp, #16]
    6960:	ldp	x29, x30, [sp], #32
    6964:	ret
    6968:	mov	x0, xzr
    696c:	ldp	x20, x19, [sp, #16]
    6970:	ldp	x29, x30, [sp], #32
    6974:	ret
    6978:	add	x8, x20, w19, sxtw #3
    697c:	ldr	x0, [x8, #128]
    6980:	ldp	x20, x19, [sp, #16]
    6984:	ldp	x29, x30, [sp], #32
    6988:	ret
    698c:	stp	x29, x30, [sp, #-64]!
    6990:	stp	x20, x19, [sp, #48]
    6994:	mov	w20, w0
    6998:	mov	x0, xzr
    699c:	str	x23, [sp, #16]
    69a0:	stp	x22, x21, [sp, #32]
    69a4:	mov	x29, sp
    69a8:	bl	1fa0 <uselocale@plt>
    69ac:	cmn	x0, #0x1
    69b0:	b.eq	6a1c <libintl_set_relocation_prefix@@Base+0x2cc>  // b.none
    69b4:	mov	x21, x0
    69b8:	mov	w0, #0xffff                	// #65535
    69bc:	bfi	w0, w20, #16, #16
    69c0:	bl	1df0 <nl_langinfo@plt>
    69c4:	ldrb	w8, [x0]
    69c8:	mov	x19, x0
    69cc:	cbz	w8, 6a10 <libintl_set_relocation_prefix@@Base+0x2c0>
    69d0:	cbz	x19, 6a1c <libintl_set_relocation_prefix@@Base+0x2cc>
    69d4:	ldrb	w9, [x19]
    69d8:	cbz	w9, 6a24 <libintl_set_relocation_prefix@@Base+0x2d4>
    69dc:	mov	x8, xzr
    69e0:	add	x10, x19, #0x1
    69e4:	ror	x8, x8, #55
    69e8:	add	x8, x8, w9, uxtb
    69ec:	ldrb	w9, [x10], #1
    69f0:	cbnz	w9, 69e4 <libintl_set_relocation_prefix@@Base+0x294>
    69f4:	mov	x9, #0xff00ff00ff00ff00    	// #-71777214294589696
    69f8:	movk	x9, #0xff01
    69fc:	umulh	x9, x8, x9
    6a00:	lsr	x9, x9, #8
    6a04:	add	x9, x9, x9, lsl #8
    6a08:	sub	x22, x8, x9
    6a0c:	b	6a28 <libintl_set_relocation_prefix@@Base+0x2d8>
    6a10:	add	x8, x21, w20, sxtw #3
    6a14:	ldr	x19, [x8, #128]
    6a18:	cbnz	x19, 69d4 <libintl_set_relocation_prefix@@Base+0x284>
    6a1c:	mov	x20, xzr
    6a20:	b	6b0c <libintl_set_relocation_prefix@@Base+0x3bc>
    6a24:	mov	x22, xzr
    6a28:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6a2c:	add	x23, x23, #0x440
    6a30:	add	x8, x23, x22, lsl #3
    6a34:	ldr	x21, [x8, #48]
    6a38:	cbz	x21, 6a58 <libintl_set_relocation_prefix@@Base+0x308>
    6a3c:	add	x20, x21, #0x8
    6a40:	mov	x0, x20
    6a44:	mov	x1, x19
    6a48:	bl	1f60 <strcmp@plt>
    6a4c:	cbz	w0, 6b0c <libintl_set_relocation_prefix@@Base+0x3bc>
    6a50:	ldr	x21, [x21]
    6a54:	cbnz	x21, 6a3c <libintl_set_relocation_prefix@@Base+0x2ec>
    6a58:	mov	x0, x19
    6a5c:	bl	1cc0 <strlen@plt>
    6a60:	add	x8, x0, #0x10
    6a64:	mov	x21, x0
    6a68:	and	x0, x8, #0xfffffffffffffff8
    6a6c:	bl	1e10 <malloc@plt>
    6a70:	cbz	x0, 6ae0 <libintl_set_relocation_prefix@@Base+0x390>
    6a74:	mov	x20, x0
    6a78:	add	x2, x21, #0x1
    6a7c:	add	x0, x0, #0x8
    6a80:	mov	x1, x19
    6a84:	bl	1c70 <memcpy@plt>
    6a88:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x10004>
    6a8c:	ldr	x21, [x21, #4064]
    6a90:	cbz	x21, 6aa4 <libintl_set_relocation_prefix@@Base+0x354>
    6a94:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6a98:	add	x0, x0, #0x440
    6a9c:	bl	20e0 <pthread_mutex_lock@plt>
    6aa0:	cbnz	w0, 6b24 <libintl_set_relocation_prefix@@Base+0x3d4>
    6aa4:	add	x23, x23, x22, lsl #3
    6aa8:	ldr	x22, [x23, #48]
    6aac:	cbz	x22, 6ac8 <libintl_set_relocation_prefix@@Base+0x378>
    6ab0:	add	x0, x22, #0x8
    6ab4:	mov	x1, x19
    6ab8:	bl	1f60 <strcmp@plt>
    6abc:	cbz	w0, 6aec <libintl_set_relocation_prefix@@Base+0x39c>
    6ac0:	ldr	x22, [x22]
    6ac4:	cbnz	x22, 6ab0 <libintl_set_relocation_prefix@@Base+0x360>
    6ac8:	ldr	x8, [x23, #48]
    6acc:	mov	x22, x20
    6ad0:	str	x8, [x20]
    6ad4:	str	x20, [x23, #48]
    6ad8:	cbnz	x21, 6af8 <libintl_set_relocation_prefix@@Base+0x3a8>
    6adc:	b	6b08 <libintl_set_relocation_prefix@@Base+0x3b8>
    6ae0:	adrp	x20, 7000 <bind_textdomain_codeset@@Base+0x4>
    6ae4:	add	x20, x20, #0x482
    6ae8:	b	6b0c <libintl_set_relocation_prefix@@Base+0x3bc>
    6aec:	mov	x0, x20
    6af0:	bl	1fb0 <free@plt>
    6af4:	cbz	x21, 6b08 <libintl_set_relocation_prefix@@Base+0x3b8>
    6af8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6afc:	add	x0, x0, #0x440
    6b00:	bl	20f0 <pthread_mutex_unlock@plt>
    6b04:	cbnz	w0, 6b24 <libintl_set_relocation_prefix@@Base+0x3d4>
    6b08:	add	x20, x22, #0x8
    6b0c:	mov	x0, x20
    6b10:	ldp	x20, x19, [sp, #48]
    6b14:	ldp	x22, x21, [sp, #32]
    6b18:	ldr	x23, [sp, #16]
    6b1c:	ldp	x29, x30, [sp], #64
    6b20:	ret
    6b24:	bl	1f20 <abort@plt>
    6b28:	mov	x1, xzr
    6b2c:	b	2110 <setlocale@plt>
    6b30:	stp	x29, x30, [sp, #-32]!
    6b34:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6b38:	add	x0, x0, #0x498
    6b3c:	str	x19, [sp, #16]
    6b40:	mov	x29, sp
    6b44:	mov	x19, x1
    6b48:	bl	20d0 <getenv@plt>
    6b4c:	cbz	x0, 6b64 <libintl_set_relocation_prefix@@Base+0x414>
    6b50:	ldrb	w8, [x0]
    6b54:	cbz	w8, 6b64 <libintl_set_relocation_prefix@@Base+0x414>
    6b58:	ldr	x19, [sp, #16]
    6b5c:	ldp	x29, x30, [sp], #32
    6b60:	ret
    6b64:	mov	x0, x19
    6b68:	bl	20d0 <getenv@plt>
    6b6c:	cbz	x0, 6b78 <libintl_set_relocation_prefix@@Base+0x428>
    6b70:	ldrb	w8, [x0]
    6b74:	cbnz	w8, 6b58 <libintl_set_relocation_prefix@@Base+0x408>
    6b78:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6b7c:	add	x0, x0, #0x830
    6b80:	bl	20d0 <getenv@plt>
    6b84:	cbz	x0, 6b90 <libintl_set_relocation_prefix@@Base+0x440>
    6b88:	ldrb	w8, [x0]
    6b8c:	cbnz	w8, 6b58 <libintl_set_relocation_prefix@@Base+0x408>
    6b90:	mov	x0, xzr
    6b94:	ldr	x19, [sp, #16]
    6b98:	ldp	x29, x30, [sp], #32
    6b9c:	ret
    6ba0:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6ba4:	add	x0, x0, #0x482
    6ba8:	ret
    6bac:	stp	x29, x30, [sp, #-32]!
    6bb0:	str	x19, [sp, #16]
    6bb4:	mov	x29, sp
    6bb8:	mov	w19, w0
    6bbc:	bl	698c <libintl_set_relocation_prefix@@Base+0x23c>
    6bc0:	cbz	x0, 6bd0 <libintl_set_relocation_prefix@@Base+0x480>
    6bc4:	ldr	x19, [sp, #16]
    6bc8:	ldp	x29, x30, [sp], #32
    6bcc:	ret
    6bd0:	mov	w0, w19
    6bd4:	mov	x1, xzr
    6bd8:	bl	2110 <setlocale@plt>
    6bdc:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4>
    6be0:	add	x8, x8, #0x482
    6be4:	cmp	x0, #0x0
    6be8:	csel	x0, x8, x0, eq  // eq = none
    6bec:	ldr	x19, [sp, #16]
    6bf0:	ldp	x29, x30, [sp], #32
    6bf4:	ret
    6bf8:	stp	x29, x30, [sp, #-64]!
    6bfc:	stp	x24, x23, [sp, #16]
    6c00:	stp	x22, x21, [sp, #32]
    6c04:	stp	x20, x19, [sp, #48]
    6c08:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0x10004>
    6c0c:	ldr	x24, [x24, #4064]
    6c10:	mov	w19, w4
    6c14:	mov	x20, x3
    6c18:	mov	x21, x2
    6c1c:	mov	x22, x1
    6c20:	mov	x23, x0
    6c24:	mov	x29, sp
    6c28:	cbz	x24, 6c7c <libintl_set_relocation_prefix@@Base+0x52c>
    6c2c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6c30:	add	x0, x0, #0xc78
    6c34:	bl	20e0 <pthread_mutex_lock@plt>
    6c38:	cbnz	w0, 6ca4 <libintl_set_relocation_prefix@@Base+0x554>
    6c3c:	mov	x0, x23
    6c40:	mov	x1, x22
    6c44:	mov	x2, x21
    6c48:	mov	x3, x20
    6c4c:	mov	w4, w19
    6c50:	bl	6ca8 <libintl_set_relocation_prefix@@Base+0x558>
    6c54:	cbz	x24, 6c68 <libintl_set_relocation_prefix@@Base+0x518>
    6c58:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6c5c:	add	x0, x0, #0xc78
    6c60:	bl	20f0 <pthread_mutex_unlock@plt>
    6c64:	cbnz	w0, 6ca4 <libintl_set_relocation_prefix@@Base+0x554>
    6c68:	ldp	x20, x19, [sp, #48]
    6c6c:	ldp	x22, x21, [sp, #32]
    6c70:	ldp	x24, x23, [sp, #16]
    6c74:	ldp	x29, x30, [sp], #64
    6c78:	ret
    6c7c:	mov	x0, x23
    6c80:	mov	x1, x22
    6c84:	mov	x2, x21
    6c88:	mov	x3, x20
    6c8c:	mov	w4, w19
    6c90:	ldp	x20, x19, [sp, #48]
    6c94:	ldp	x22, x21, [sp, #32]
    6c98:	ldp	x24, x23, [sp, #16]
    6c9c:	ldp	x29, x30, [sp], #64
    6ca0:	b	6ca8 <libintl_set_relocation_prefix@@Base+0x558>
    6ca4:	bl	1f20 <abort@plt>
    6ca8:	stp	x29, x30, [sp, #-96]!
    6cac:	str	x27, [sp, #16]
    6cb0:	stp	x26, x25, [sp, #32]
    6cb4:	stp	x24, x23, [sp, #48]
    6cb8:	stp	x22, x21, [sp, #64]
    6cbc:	stp	x20, x19, [sp, #80]
    6cc0:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6cc4:	ldr	x25, [x27, #3240]
    6cc8:	mov	w20, w4
    6ccc:	mov	x19, x3
    6cd0:	mov	x21, x2
    6cd4:	mov	x23, x1
    6cd8:	mov	x24, x0
    6cdc:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6ce0:	mov	x29, sp
    6ce4:	cbz	x25, 6d24 <libintl_set_relocation_prefix@@Base+0x5d4>
    6ce8:	mov	x0, x24
    6cec:	mov	x1, x25
    6cf0:	bl	1f60 <strcmp@plt>
    6cf4:	ldr	x22, [x26, #3248]
    6cf8:	cbz	w0, 6d60 <libintl_set_relocation_prefix@@Base+0x610>
    6cfc:	cbz	x22, 6d18 <libintl_set_relocation_prefix@@Base+0x5c8>
    6d00:	mov	x0, x22
    6d04:	bl	1de0 <fclose@plt>
    6d08:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x11004>
    6d0c:	add	x8, x8, #0xca8
    6d10:	ldr	x25, [x8]
    6d14:	str	xzr, [x8, #8]
    6d18:	mov	x0, x25
    6d1c:	bl	1fb0 <free@plt>
    6d20:	str	xzr, [x27, #3240]
    6d24:	mov	x0, x24
    6d28:	bl	1cc0 <strlen@plt>
    6d2c:	add	x0, x0, #0x1
    6d30:	bl	1e10 <malloc@plt>
    6d34:	str	x0, [x27, #3240]
    6d38:	cbz	x0, 6e44 <libintl_set_relocation_prefix@@Base+0x6f4>
    6d3c:	mov	x1, x24
    6d40:	bl	2020 <strcpy@plt>
    6d44:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4>
    6d48:	add	x1, x1, #0x835
    6d4c:	mov	x0, x24
    6d50:	bl	1e00 <fopen@plt>
    6d54:	mov	x22, x0
    6d58:	str	x0, [x26, #3248]
    6d5c:	cbz	x0, 6e44 <libintl_set_relocation_prefix@@Base+0x6f4>
    6d60:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6d64:	add	x0, x0, #0x837
    6d68:	mov	w1, #0x7                   	// #7
    6d6c:	mov	w2, #0x1                   	// #1
    6d70:	mov	x3, x22
    6d74:	bl	2000 <fwrite@plt>
    6d78:	mov	x0, x23
    6d7c:	bl	1cc0 <strlen@plt>
    6d80:	add	x2, x23, x0
    6d84:	mov	x0, x22
    6d88:	mov	x1, x23
    6d8c:	bl	6e9c <libintl_set_relocation_prefix@@Base+0x74c>
    6d90:	mov	w1, #0x4                   	// #4
    6d94:	mov	x0, x21
    6d98:	bl	1ff0 <strchr@plt>
    6d9c:	cbz	x0, 6dd0 <libintl_set_relocation_prefix@@Base+0x680>
    6da0:	mov	x23, x0
    6da4:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6da8:	add	x0, x0, #0x83f
    6dac:	mov	w1, #0x9                   	// #9
    6db0:	mov	w2, #0x1                   	// #1
    6db4:	mov	x3, x22
    6db8:	bl	2000 <fwrite@plt>
    6dbc:	mov	x0, x22
    6dc0:	mov	x1, x21
    6dc4:	mov	x2, x23
    6dc8:	bl	6e9c <libintl_set_relocation_prefix@@Base+0x74c>
    6dcc:	add	x21, x23, #0x1
    6dd0:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6dd4:	add	x0, x0, #0x849
    6dd8:	mov	w1, #0x7                   	// #7
    6ddc:	mov	w2, #0x1                   	// #1
    6de0:	mov	x3, x22
    6de4:	bl	2000 <fwrite@plt>
    6de8:	mov	x0, x21
    6dec:	bl	1cc0 <strlen@plt>
    6df0:	add	x2, x21, x0
    6df4:	mov	x0, x22
    6df8:	mov	x1, x21
    6dfc:	bl	6e9c <libintl_set_relocation_prefix@@Base+0x74c>
    6e00:	cbz	w20, 6e60 <libintl_set_relocation_prefix@@Base+0x710>
    6e04:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6e08:	add	x0, x0, #0x851
    6e0c:	mov	w1, #0xe                   	// #14
    6e10:	mov	w2, #0x1                   	// #1
    6e14:	mov	x3, x22
    6e18:	bl	2000 <fwrite@plt>
    6e1c:	mov	x0, x19
    6e20:	bl	1cc0 <strlen@plt>
    6e24:	add	x2, x19, x0
    6e28:	mov	x0, x22
    6e2c:	mov	x1, x19
    6e30:	bl	6e9c <libintl_set_relocation_prefix@@Base+0x74c>
    6e34:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6e38:	add	x0, x0, #0x860
    6e3c:	mov	w1, #0xe                   	// #14
    6e40:	b	6e6c <libintl_set_relocation_prefix@@Base+0x71c>
    6e44:	ldp	x20, x19, [sp, #80]
    6e48:	ldp	x22, x21, [sp, #64]
    6e4c:	ldp	x24, x23, [sp, #48]
    6e50:	ldp	x26, x25, [sp, #32]
    6e54:	ldr	x27, [sp, #16]
    6e58:	ldp	x29, x30, [sp], #96
    6e5c:	ret
    6e60:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4>
    6e64:	add	x0, x0, #0x86f
    6e68:	mov	w1, #0xb                   	// #11
    6e6c:	mov	w2, #0x1                   	// #1
    6e70:	mov	x3, x22
    6e74:	bl	2000 <fwrite@plt>
    6e78:	mov	x1, x22
    6e7c:	ldp	x20, x19, [sp, #80]
    6e80:	ldp	x22, x21, [sp, #64]
    6e84:	ldp	x24, x23, [sp, #48]
    6e88:	ldp	x26, x25, [sp, #32]
    6e8c:	ldr	x27, [sp, #16]
    6e90:	mov	w0, #0xa                   	// #10
    6e94:	ldp	x29, x30, [sp], #96
    6e98:	b	1d70 <putc@plt>
    6e9c:	stp	x29, x30, [sp, #-64]!
    6ea0:	stp	x20, x19, [sp, #48]
    6ea4:	mov	x19, x0
    6ea8:	stp	x22, x21, [sp, #32]
    6eac:	mov	x21, x1
    6eb0:	mov	w0, #0x22                  	// #34
    6eb4:	mov	x1, x19
    6eb8:	stp	x24, x23, [sp, #16]
    6ebc:	mov	x29, sp
    6ec0:	mov	x20, x2
    6ec4:	bl	1d70 <putc@plt>
    6ec8:	cmp	x21, x20
    6ecc:	b.eq	6f64 <libintl_set_relocation_prefix@@Base+0x814>  // b.none
    6ed0:	adrp	x22, 7000 <bind_textdomain_codeset@@Base+0x4>
    6ed4:	adrp	x23, 7000 <bind_textdomain_codeset@@Base+0x4>
    6ed8:	sub	x24, x20, #0x1
    6edc:	add	x22, x22, #0x87b
    6ee0:	add	x23, x23, #0x87f
    6ee4:	b	6f0c <libintl_set_relocation_prefix@@Base+0x7bc>
    6ee8:	mov	w0, #0x5c                  	// #92
    6eec:	mov	x1, x19
    6ef0:	bl	1d70 <putc@plt>
    6ef4:	ldrb	w0, [x21]
    6ef8:	mov	x1, x19
    6efc:	bl	1d70 <putc@plt>
    6f00:	add	x21, x21, #0x1
    6f04:	cmp	x20, x21
    6f08:	b.eq	6f64 <libintl_set_relocation_prefix@@Base+0x814>  // b.none
    6f0c:	ldrb	w0, [x21]
    6f10:	cmp	w0, #0x5c
    6f14:	b.eq	6ee8 <libintl_set_relocation_prefix@@Base+0x798>  // b.none
    6f18:	cmp	w0, #0x22
    6f1c:	b.eq	6ee8 <libintl_set_relocation_prefix@@Base+0x798>  // b.none
    6f20:	cmp	w0, #0xa
    6f24:	b.ne	6ef8 <libintl_set_relocation_prefix@@Base+0x7a8>  // b.any
    6f28:	mov	w1, #0x3                   	// #3
    6f2c:	mov	w2, #0x1                   	// #1
    6f30:	mov	x0, x22
    6f34:	mov	x3, x19
    6f38:	bl	2000 <fwrite@plt>
    6f3c:	cmp	x24, x21
    6f40:	b.eq	6f80 <libintl_set_relocation_prefix@@Base+0x830>  // b.none
    6f44:	mov	w1, #0x2                   	// #2
    6f48:	mov	w2, #0x1                   	// #1
    6f4c:	mov	x0, x23
    6f50:	mov	x3, x19
    6f54:	bl	2000 <fwrite@plt>
    6f58:	add	x21, x21, #0x1
    6f5c:	cmp	x20, x21
    6f60:	b.ne	6f0c <libintl_set_relocation_prefix@@Base+0x7bc>  // b.any
    6f64:	mov	x1, x19
    6f68:	ldp	x20, x19, [sp, #48]
    6f6c:	ldp	x22, x21, [sp, #32]
    6f70:	ldp	x24, x23, [sp, #16]
    6f74:	mov	w0, #0x22                  	// #34
    6f78:	ldp	x29, x30, [sp], #64
    6f7c:	b	1d70 <putc@plt>
    6f80:	ldp	x20, x19, [sp, #48]
    6f84:	ldp	x22, x21, [sp, #32]
    6f88:	ldp	x24, x23, [sp, #16]
    6f8c:	ldp	x29, x30, [sp], #64
    6f90:	ret
    6f94:	adds	x8, x0, x1
    6f98:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    6f9c:	ret
    6fa0:	adds	x8, x0, x1
    6fa4:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
    6fa8:	adds	x8, x8, x2
    6fac:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    6fb0:	ret
    6fb4:	adds	x8, x0, x1
    6fb8:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
    6fbc:	adds	x8, x8, x2
    6fc0:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
    6fc4:	adds	x8, x8, x3
    6fc8:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    6fcc:	ret
    6fd0:	cmp	x0, x1
    6fd4:	csel	x0, x1, x0, cc  // cc = lo, ul, last
    6fd8:	ret

0000000000006fdc <gettext@@Base>:
    6fdc:	b	2100 <libintl_gettext@plt>

0000000000006fe0 <dgettext@@Base>:
    6fe0:	b	1fe0 <libintl_dgettext@plt>

0000000000006fe4 <dcgettext@@Base>:
    6fe4:	b	1da0 <libintl_dcgettext@plt>

0000000000006fe8 <ngettext@@Base>:
    6fe8:	b	2120 <libintl_ngettext@plt>

0000000000006fec <dngettext@@Base>:
    6fec:	b	1c80 <libintl_dngettext@plt>

0000000000006ff0 <dcngettext@@Base>:
    6ff0:	b	1e60 <libintl_dcngettext@plt>

0000000000006ff4 <textdomain@@Base>:
    6ff4:	b	1d90 <libintl_textdomain@plt>

0000000000006ff8 <bindtextdomain@@Base>:
    6ff8:	b	1e90 <libintl_bindtextdomain@plt>

0000000000006ffc <bind_textdomain_codeset@@Base>:
    6ffc:	b	1e80 <libintl_bind_textdomain_codeset@plt>

Disassembly of section .fini:

0000000000007000 <.fini>:
    7000:	stp	x29, x30, [sp, #-16]!
    7004:	mov	x29, sp
    7008:	ldp	x29, x30, [sp], #16
    700c:	ret
