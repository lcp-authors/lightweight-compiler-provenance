
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ldm.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <check_ldm_partition>:
       0:	ldr	w3, [x1]
       4:	mov	w0, #0x1                   	// #1
       8:	cmp	w3, #0x3
       c:	b.gt	20 <check_ldm_partition+0x20>
      10:	ldrb	w1, [x1, #56]
      14:	mov	w0, #0x0                   	// #0
      18:	cmp	w1, #0x42
      1c:	b.eq	24 <check_ldm_partition+0x24>  // b.none
      20:	ret
      24:	mov	w1, #0x1                   	// #1
      28:	mov	w0, w1
      2c:	str	w1, [x2]
      30:	ret
      34:	nop

0000000000000038 <grub_ldm_detect>:
      38:	sub	sp, sp, #0x410
      3c:	adrp	x3, 0 <check_ldm_partition>
      40:	stp	x29, x30, [sp]
      44:	mov	x29, sp
      48:	stp	x19, x20, [sp, #16]
      4c:	mov	x20, x1
      50:	mov	x19, x0
      54:	ldr	x1, [x3]
      58:	stp	x21, x22, [sp, #32]
      5c:	mov	x22, x2
      60:	add	x2, sp, #0x210
      64:	stp	x23, x24, [sp, #48]
      68:	stp	x25, x26, [sp, #64]
      6c:	str	wzr, [sp, #528]
      70:	bl	0 <grub_partition_msdos_iterate>
      74:	cbnz	w0, 170 <grub_ldm_detect+0x138>
      78:	ldr	w23, [sp, #528]
      7c:	mov	w21, #0x1                   	// #1
      80:	adrp	x24, 0 <check_ldm_partition>
      84:	cmp	w21, #0x2
      88:	sub	w0, w21, #0x1
      8c:	adrp	x25, 0 <check_ldm_partition>
      90:	b.eq	100 <grub_ldm_detect+0xc8>  // b.none
      94:	cmp	w0, #0x2
      98:	b.eq	14c <grub_ldm_detect+0x114>  // b.none
      9c:	mov	x1, #0x6                   	// #6
      a0:	cbz	w23, e8 <grub_ldm_detect+0xb0>
      a4:	add	x4, sp, #0xd0
      a8:	mov	x0, x19
      ac:	mov	x3, #0x13b                 	// #315
      b0:	mov	x2, #0x0                   	// #0
      b4:	bl	0 <grub_disk_read>
      b8:	cbnz	w0, 128 <grub_ldm_detect+0xf0>
      bc:	ldr	x1, [x24]
      c0:	add	x0, sp, #0xd0
      c4:	mov	x2, #0x8                   	// #8
      c8:	bl	0 <grub_memcmp>
      cc:	cbnz	w0, e8 <grub_ldm_detect+0xb0>
      d0:	ldrh	w0, [sp, #220]
      d4:	lsr	w1, w0, #8
      d8:	orr	w0, w1, w0, lsl #8
      dc:	sxth	w0, w0
      e0:	cmp	w0, #0x2
      e4:	b.eq	194 <grub_ldm_detect+0x15c>  // b.none
      e8:	cmp	w21, #0x3
      ec:	b.eq	128 <grub_ldm_detect+0xf0>  // b.none
      f0:	add	w21, w21, #0x1
      f4:	cmp	w21, #0x2
      f8:	sub	w0, w21, #0x1
      fc:	b.ne	94 <grub_ldm_detect+0x5c>  // b.any
     100:	cbz	w23, f0 <grub_ldm_detect+0xb8>
     104:	ldr	x0, [x19, #40]
     108:	cbnz	x0, f0 <grub_ldm_detect+0xb8>
     10c:	mov	x0, x19
     110:	bl	0 <grub_disk_get_size>
     114:	cmn	x0, #0x1
     118:	b.eq	f0 <grub_ldm_detect+0xb8>  // b.none
     11c:	sub	x1, x0, #0x1
     120:	b	a4 <grub_ldm_detect+0x6c>
     124:	ldp	x27, x28, [sp, #80]
     128:	mov	x21, #0x0                   	// #0
     12c:	mov	x0, x21
     130:	ldp	x29, x30, [sp]
     134:	ldp	x19, x20, [sp, #16]
     138:	ldp	x21, x22, [sp, #32]
     13c:	ldp	x23, x24, [sp, #48]
     140:	ldp	x25, x26, [sp, #64]
     144:	add	sp, sp, #0x410
     148:	ret
     14c:	ldr	x1, [x25]
     150:	add	x2, sp, #0x210
     154:	mov	x0, x19
     158:	str	xzr, [sp, #528]
     15c:	bl	0 <grub_gpt_partition_map_iterate>
     160:	cbnz	w0, 184 <grub_ldm_detect+0x14c>
     164:	ldr	x1, [sp, #528]
     168:	cbnz	x1, a4 <grub_ldm_detect+0x6c>
     16c:	b	128 <grub_ldm_detect+0xf0>
     170:	adrp	x0, 0 <check_ldm_partition>
     174:	mov	w23, #0x0                   	// #0
     178:	ldr	x0, [x0]
     17c:	str	wzr, [x0]
     180:	b	7c <grub_ldm_detect+0x44>
     184:	adrp	x0, 0 <check_ldm_partition>
     188:	ldr	x0, [x0]
     18c:	str	wzr, [x0]
     190:	b	128 <grub_ldm_detect+0xf0>
     194:	ldrh	w0, [sp, #222]
     198:	lsr	w1, w0, #8
     19c:	orr	w0, w1, w0, lsl #8
     1a0:	sub	w0, w0, #0xb
     1a4:	and	w0, w0, #0xffff
     1a8:	cmp	w0, #0x1
     1ac:	b.hi	e8 <grub_ldm_detect+0xb0>  // b.pmore
     1b0:	mov	x0, #0x41                  	// #65
     1b4:	stp	x27, x28, [sp, #80]
     1b8:	bl	0 <grub_malloc>
     1bc:	str	x0, [x20]
     1c0:	cbz	x0, 124 <grub_ldm_detect+0xec>
     1c4:	add	x1, sp, #0x100
     1c8:	mov	x2, #0x40                  	// #64
     1cc:	bl	0 <grub_memmove>
     1d0:	ldr	x0, [x20]
     1d4:	strb	wzr, [x0, #64]
     1d8:	ldr	x0, [x20]
     1dc:	bl	0 <grub_strlen>
     1e0:	str	x0, [x20, #8]
     1e4:	add	x1, sp, #0x270
     1e8:	mov	x0, #0x0                   	// #0
     1ec:	ldur	x1, [x1, #-133]
     1f0:	rev	x1, x1
     1f4:	str	x1, [x22]
     1f8:	b	208 <grub_ldm_detect+0x1d0>
     1fc:	add	x0, x0, #0x1
     200:	cmp	x0, #0x40
     204:	b.eq	218 <grub_ldm_detect+0x1e0>  // b.none
     208:	add	x1, sp, #0xd0
     20c:	add	x1, x1, x0
     210:	ldrb	w1, [x1, #176]
     214:	cbnz	w1, 1fc <grub_ldm_detect+0x1c4>
     218:	add	x22, sp, #0x180
     21c:	mov	x1, x22
     220:	bl	0 <grub_diskfilter_get_vg_by_uuid>
     224:	mov	x21, x0
     228:	cbz	x0, 250 <grub_ldm_detect+0x218>
     22c:	mov	x0, x21
     230:	ldp	x29, x30, [sp]
     234:	ldp	x19, x20, [sp, #16]
     238:	ldp	x21, x22, [sp, #32]
     23c:	ldp	x23, x24, [sp, #48]
     240:	ldp	x25, x26, [sp, #64]
     244:	ldp	x27, x28, [sp, #80]
     248:	add	sp, sp, #0x410
     24c:	ret
     250:	mov	x0, #0x38                  	// #56
     254:	bl	0 <grub_malloc>
     258:	mov	x23, x0
     25c:	cbz	x0, 6d4 <grub_ldm_detect+0x69c>
     260:	mov	x0, #0x1                   	// #1
     264:	str	x0, [x23, #24]
     268:	mov	x0, #0x21                  	// #33
     26c:	bl	0 <grub_malloc>
     270:	str	x0, [x23, #16]
     274:	mov	x0, #0x41                  	// #65
     278:	bl	0 <grub_malloc>
     27c:	str	x0, [x23]
     280:	mov	x1, x0
     284:	cbz	x0, 8d4 <grub_ldm_detect+0x89c>
     288:	ldr	x2, [x23, #16]
     28c:	cbz	x2, 8d4 <grub_ldm_detect+0x89c>
     290:	mov	x1, x22
     294:	mov	x2, #0x40                  	// #64
     298:	bl	0 <grub_memmove>
     29c:	ldr	x0, [x23, #16]
     2a0:	add	x1, sp, #0x1c0
     2a4:	mov	x2, #0x20                  	// #32
     2a8:	bl	0 <grub_memmove>
     2ac:	ldr	x0, [x23, #16]
     2b0:	strb	wzr, [x0, #32]
     2b4:	ldr	x0, [x23]
     2b8:	strb	wzr, [x0, #64]
     2bc:	ldr	x0, [x23]
     2c0:	bl	0 <grub_strlen>
     2c4:	add	x1, sp, #0x270
     2c8:	ldur	x1, [x1, #-117]
     2cc:	str	x0, [x23, #8]
     2d0:	add	x0, sp, #0x270
     2d4:	ldur	x2, [x0, #-109]
     2d8:	rev	x0, x1
     2dc:	add	x3, x0, #0x12
     2e0:	stp	xzr, xzr, [x23, #32]
     2e4:	rev	x1, x2
     2e8:	add	x28, x0, x1
     2ec:	str	x28, [sp, #96]
     2f0:	str	x3, [sp, #128]
     2f4:	cmp	x28, x3
     2f8:	b.ls	520 <grub_ldm_detect+0x4e8>  // b.plast
     2fc:	mov	x24, x3
     300:	add	x25, sp, #0x410
     304:	stp	x21, x20, [sp, #104]
     308:	add	x4, sp, #0x210
     30c:	mov	x1, x24
     310:	mov	x0, x19
     314:	mov	x3, #0x200                 	// #512
     318:	mov	x2, #0x0                   	// #0
     31c:	bl	0 <grub_disk_read>
     320:	cbnz	w0, 8bc <grub_ldm_detect+0x884>
     324:	adrp	x0, 0 <check_ldm_partition>
     328:	add	x27, sp, #0x210
     32c:	ldr	x22, [x0]
     330:	mov	x1, x22
     334:	mov	x0, x27
     338:	mov	x2, #0x4                   	// #4
     33c:	bl	0 <grub_memcmp>
     340:	cbnz	w0, 538 <grub_ldm_detect+0x500>
     344:	ldrh	w0, [x27, #16]
     348:	lsr	w1, w0, #8
     34c:	orr	w0, w1, w0, lsl #8
     350:	and	w0, w0, #0xffff
     354:	cmp	w0, #0x1
     358:	b.hi	538 <grub_ldm_detect+0x500>  // b.pmore
     35c:	ldrb	w0, [x27, #19]
     360:	add	x26, x27, #0x80
     364:	cmp	w0, #0x34
     368:	b.eq	540 <grub_ldm_detect+0x508>  // b.none
     36c:	cmp	x25, x26
     370:	mov	x27, x26
     374:	b.ne	330 <grub_ldm_detect+0x2f8>  // b.any
     378:	add	x24, x24, #0x1
     37c:	cmp	x28, x24
     380:	b.hi	308 <grub_ldm_detect+0x2d0>  // b.pmore
     384:	ldr	x25, [sp, #128]
     388:	add	x4, sp, #0x210
     38c:	mov	x1, x25
     390:	mov	x0, x19
     394:	mov	x3, #0x200                 	// #512
     398:	mov	x2, #0x0                   	// #0
     39c:	bl	0 <grub_disk_read>
     3a0:	cbnz	w0, 8bc <grub_ldm_detect+0x884>
     3a4:	add	x28, sp, #0x210
     3a8:	add	x24, sp, #0x410
     3ac:	mov	x1, x22
     3b0:	mov	x0, x28
     3b4:	mov	x2, #0x4                   	// #4
     3b8:	bl	0 <grub_memcmp>
     3bc:	cbnz	w0, 608 <grub_ldm_detect+0x5d0>
     3c0:	ldrh	w0, [x28, #16]
     3c4:	lsr	w1, w0, #8
     3c8:	orr	w0, w1, w0, lsl #8
     3cc:	and	w0, w0, #0xffff
     3d0:	cmp	w0, #0x1
     3d4:	b.hi	608 <grub_ldm_detect+0x5d0>  // b.pmore
     3d8:	ldrb	w0, [x28, #19]
     3dc:	add	x21, x28, #0x80
     3e0:	cmp	w0, #0x51
     3e4:	b.eq	6ec <grub_ldm_detect+0x6b4>  // b.none
     3e8:	cmp	x24, x21
     3ec:	mov	x28, x21
     3f0:	b.ne	3ac <grub_ldm_detect+0x374>  // b.any
     3f4:	ldr	x0, [sp, #96]
     3f8:	add	x25, x25, #0x1
     3fc:	cmp	x0, x25
     400:	b.hi	388 <grub_ldm_detect+0x350>  // b.pmore
     404:	ldr	x25, [sp, #128]
     408:	ldp	x21, x20, [sp, #104]
     40c:	stp	x23, x21, [sp, #104]
     410:	str	x20, [sp, #120]
     414:	add	x4, sp, #0x210
     418:	mov	x1, x25
     41c:	mov	x0, x19
     420:	mov	x3, #0x200                 	// #512
     424:	mov	x2, #0x0                   	// #0
     428:	bl	0 <grub_disk_read>
     42c:	cbnz	w0, d7c <grub_ldm_detect+0xd44>
     430:	add	x28, sp, #0x210
     434:	add	x24, sp, #0x410
     438:	mov	x1, x22
     43c:	mov	x0, x28
     440:	mov	x2, #0x4                   	// #4
     444:	bl	0 <grub_memcmp>
     448:	cbnz	w0, 6e4 <grub_ldm_detect+0x6ac>
     44c:	ldrh	w0, [x28, #16]
     450:	lsr	w1, w0, #8
     454:	orr	w0, w1, w0, lsl #8
     458:	and	w0, w0, #0xffff
     45c:	cmp	w0, #0x1
     460:	b.hi	6e4 <grub_ldm_detect+0x6ac>  // b.pmore
     464:	ldrb	w0, [x28, #19]
     468:	add	x23, x28, #0x80
     46c:	cmp	w0, #0x32
     470:	b.eq	8fc <grub_ldm_detect+0x8c4>  // b.none
     474:	cmp	x24, x23
     478:	mov	x28, x23
     47c:	b.ne	438 <grub_ldm_detect+0x400>  // b.any
     480:	ldr	x0, [sp, #96]
     484:	add	x25, x25, #0x1
     488:	cmp	x0, x25
     48c:	b.hi	414 <grub_ldm_detect+0x3dc>  // b.pmore
     490:	str	x19, [sp, #176]
     494:	ldr	x1, [sp, #128]
     498:	add	x4, sp, #0x210
     49c:	ldr	x0, [sp, #176]
     4a0:	mov	x3, #0x200                 	// #512
     4a4:	mov	x2, #0x0                   	// #0
     4a8:	bl	0 <grub_disk_read>
     4ac:	cbnz	w0, d7c <grub_ldm_detect+0xd44>
     4b0:	add	x19, sp, #0x210
     4b4:	mov	x1, x22
     4b8:	mov	x0, x19
     4bc:	mov	x2, #0x4                   	// #4
     4c0:	bl	0 <grub_memcmp>
     4c4:	cbnz	w0, 8e8 <grub_ldm_detect+0x8b0>
     4c8:	ldrh	w0, [x19, #16]
     4cc:	lsr	w1, w0, #8
     4d0:	orr	w0, w1, w0, lsl #8
     4d4:	and	w0, w0, #0xffff
     4d8:	cmp	w0, #0x1
     4dc:	b.hi	8e8 <grub_ldm_detect+0x8b0>  // b.pmore
     4e0:	ldrb	w0, [x19, #19]
     4e4:	add	x21, x19, #0x80
     4e8:	cmp	w0, #0x33
     4ec:	b.eq	bb4 <grub_ldm_detect+0xb7c>  // b.none
     4f0:	add	x0, sp, #0x410
     4f4:	mov	x19, x21
     4f8:	cmp	x21, x0
     4fc:	b.ne	4b4 <grub_ldm_detect+0x47c>  // b.any
     500:	ldr	x0, [sp, #128]
     504:	ldr	x1, [sp, #96]
     508:	add	x0, x0, #0x1
     50c:	str	x0, [sp, #128]
     510:	cmp	x1, x0
     514:	b.hi	494 <grub_ldm_detect+0x45c>  // b.pmore
     518:	ldp	x23, x21, [sp, #104]
     51c:	ldr	x20, [sp, #120]
     520:	mov	x0, x23
     524:	bl	0 <grub_diskfilter_vg_register>
     528:	cbnz	w0, 62c <grub_ldm_detect+0x5f4>
     52c:	mov	x21, x23
     530:	ldp	x27, x28, [sp, #80]
     534:	b	12c <grub_ldm_detect+0xf4>
     538:	add	x26, x27, #0x80
     53c:	b	36c <grub_ldm_detect+0x334>
     540:	mov	x0, #0x48                  	// #72
     544:	bl	0 <grub_zalloc>
     548:	mov	x20, x0
     54c:	cbz	x0, 8bc <grub_ldm_detect+0x884>
     550:	str	xzr, [x0, #24]
     554:	add	x21, x27, #0x18
     558:	ldrb	w4, [x27, #24]
     55c:	and	x2, x4, #0xff
     560:	add	x2, x2, #0x1
     564:	add	x2, x21, x2
     568:	cmp	x26, x2
     56c:	b.ls	8f0 <grub_ldm_detect+0x8b8>  // b.plast
     570:	add	w0, w4, #0x2
     574:	sxtw	x0, w0
     578:	bl	0 <grub_malloc>
     57c:	str	x0, [x20, #64]
     580:	cbz	x0, 8c4 <grub_ldm_detect+0x88c>
     584:	ldrb	w2, [x27, #24]
     588:	mov	x1, x21
     58c:	add	x2, x2, #0x1
     590:	bl	0 <grub_memmove>
     594:	ldr	x0, [x20, #64]
     598:	ldrb	w2, [x27, #24]
     59c:	add	x0, x0, x2
     5a0:	strb	wzr, [x0, #1]
     5a4:	ldrb	w0, [x27, #24]
     5a8:	add	x0, x0, #0x1
     5ac:	add	x2, x21, x0
     5b0:	ldrb	w0, [x21, x0]
     5b4:	add	x0, x0, #0x1
     5b8:	add	x27, x2, x0
     5bc:	cmp	x27, x26
     5c0:	b.cs	8c4 <grub_ldm_detect+0x88c>  // b.hs, b.nlast
     5c4:	ldrb	w1, [x2, x0]
     5c8:	add	x0, x1, #0x1
     5cc:	add	x2, x27, x0
     5d0:	cmp	x26, x2
     5d4:	b.ls	8c4 <grub_ldm_detect+0x88c>  // b.plast
     5d8:	str	x1, [x20, #8]
     5dc:	bl	0 <grub_malloc>
     5e0:	str	x0, [x20]
     5e4:	ldr	x2, [x20, #8]
     5e8:	add	x1, x27, #0x1
     5ec:	bl	0 <grub_memmove>
     5f0:	ldp	x1, x0, [x20]
     5f4:	strb	wzr, [x1, x0]
     5f8:	ldr	x0, [x23, #32]
     5fc:	str	x0, [x20, #56]
     600:	str	x20, [x23, #32]
     604:	b	36c <grub_ldm_detect+0x334>
     608:	add	x21, x28, #0x80
     60c:	b	3e8 <grub_ldm_detect+0x3b0>
     610:	ldr	x0, [x20, #88]
     614:	mov	x28, x20
     618:	ldp	x23, x21, [sp, #104]
     61c:	ldr	x20, [sp, #120]
     620:	bl	0 <grub_free>
     624:	mov	x0, x28
     628:	bl	0 <grub_free>
     62c:	ldr	x22, [x23, #40]
     630:	mov	w24, #0x38                  	// #56
     634:	cbz	x22, 6a0 <grub_ldm_detect+0x668>
     638:	ldr	w0, [x22, #28]
     63c:	mov	w19, #0x0                   	// #0
     640:	cbz	w0, 668 <grub_ldm_detect+0x630>
     644:	nop
     648:	ldr	x0, [x22, #64]
     64c:	umaddl	x0, w19, w24, x0
     650:	add	w19, w19, #0x1
     654:	ldr	x0, [x0, #40]
     658:	bl	0 <grub_free>
     65c:	ldr	w0, [x22, #28]
     660:	cmp	w19, w0
     664:	b.cc	648 <grub_ldm_detect+0x610>  // b.lo, b.ul, b.last
     668:	ldr	x0, [x22, #64]
     66c:	ldr	x19, [x22, #80]
     670:	bl	0 <grub_free>
     674:	ldr	x0, [x22, #88]
     678:	bl	0 <grub_free>
     67c:	ldr	x0, [x22, #16]
     680:	bl	0 <grub_free>
     684:	ldr	x0, [x22]
     688:	bl	0 <grub_free>
     68c:	mov	x0, x22
     690:	bl	0 <grub_free>
     694:	cbz	x19, 6a0 <grub_ldm_detect+0x668>
     698:	mov	x22, x19
     69c:	b	638 <grub_ldm_detect+0x600>
     6a0:	ldr	x19, [x23, #32]
     6a4:	cbz	x19, 6c4 <grub_ldm_detect+0x68c>
     6a8:	mov	x22, x19
     6ac:	ldr	x19, [x19, #56]
     6b0:	ldr	x0, [x22]
     6b4:	bl	0 <grub_free>
     6b8:	mov	x0, x22
     6bc:	bl	0 <grub_free>
     6c0:	cbnz	x19, 6a8 <grub_ldm_detect+0x670>
     6c4:	ldr	x0, [x23]
     6c8:	bl	0 <grub_free>
     6cc:	mov	x0, x23
     6d0:	bl	0 <grub_free>
     6d4:	ldr	x0, [x20]
     6d8:	bl	0 <grub_free>
     6dc:	ldp	x27, x28, [sp, #80]
     6e0:	b	12c <grub_ldm_detect+0xf4>
     6e4:	add	x23, x28, #0x80
     6e8:	b	474 <grub_ldm_detect+0x43c>
     6ec:	mov	x0, #0x60                  	// #96
     6f0:	bl	0 <grub_zalloc>
     6f4:	mov	x20, x0
     6f8:	cbz	x0, 8bc <grub_ldm_detect+0x884>
     6fc:	mov	x1, #0x1                   	// #1
     700:	mov	w0, #0x1                   	// #1
     704:	str	w0, [x20, #28]
     708:	mov	x0, #0x38                  	// #56
     70c:	str	x1, [x20, #32]
     710:	str	w1, [x20, #56]
     714:	str	x23, [x20, #72]
     718:	bl	0 <grub_zalloc>
     71c:	str	x0, [x20, #64]
     720:	mov	x27, x0
     724:	cbz	x0, 8bc <grub_ldm_detect+0x884>
     728:	mov	x1, #0x800000000           	// #34359738368
     72c:	mov	w0, #0x1                   	// #1
     730:	str	xzr, [x27]
     734:	str	w0, [x27, #16]
     738:	mov	x0, #0x100                 	// #256
     73c:	str	x1, [x27, #32]
     740:	bl	0 <grub_zalloc>
     744:	ldr	x1, [x20, #64]
     748:	str	x0, [x27, #40]
     74c:	ldr	x0, [x1, #40]
     750:	cbz	x0, 8bc <grub_ldm_detect+0x884>
     754:	ldrb	w0, [x28, #24]
     758:	add	x27, x28, #0x18
     75c:	add	x1, x0, #0x1
     760:	add	x1, x27, x1
     764:	cmp	x21, x1
     768:	b.ls	d88 <grub_ldm_detect+0xd50>  // b.plast
     76c:	add	x0, x0, #0x2
     770:	bl	0 <grub_malloc>
     774:	str	x0, [x20, #88]
     778:	cbz	x0, d88 <grub_ldm_detect+0xd50>
     77c:	ldrb	w2, [x28, #24]
     780:	mov	x1, x27
     784:	add	x2, x2, #0x1
     788:	bl	0 <grub_memmove>
     78c:	ldr	x0, [x20, #88]
     790:	ldrb	w1, [x28, #24]
     794:	add	x0, x0, x1
     798:	strb	wzr, [x0, #1]
     79c:	ldrb	w28, [x28, #24]
     7a0:	add	x28, x28, #0x1
     7a4:	add	x26, x27, x28
     7a8:	ldrb	w1, [x27, x28]
     7ac:	and	x0, x1, #0xff
     7b0:	add	x0, x0, #0x1
     7b4:	add	x0, x26, x0
     7b8:	cmp	x21, x0
     7bc:	b.ls	d88 <grub_ldm_detect+0xd50>  // b.plast
     7c0:	add	w0, w1, #0x1
     7c4:	sxtw	x0, w0
     7c8:	bl	0 <grub_malloc>
     7cc:	str	x0, [x20, #16]
     7d0:	cbz	x0, dc0 <grub_ldm_detect+0xd88>
     7d4:	ldrb	w2, [x27, x28]
     7d8:	add	x1, x26, #0x1
     7dc:	bl	0 <grub_memmove>
     7e0:	ldrb	w1, [x27, x28]
     7e4:	adrp	x0, 0 <check_ldm_partition>
     7e8:	ldr	x2, [x20, #16]
     7ec:	ldr	x0, [x0]
     7f0:	strb	wzr, [x2, x1]
     7f4:	ldr	x1, [x23]
     7f8:	ldr	x2, [x20, #16]
     7fc:	bl	0 <grub_xasprintf>
     800:	str	x0, [x20]
     804:	cbz	x0, b90 <grub_ldm_detect+0xb58>
     808:	ldrb	w0, [x27, x28]
     80c:	add	x0, x0, #0x1
     810:	add	x2, x26, x0
     814:	ldrb	w1, [x26, x0]
     818:	add	x1, x1, #0x1
     81c:	add	x0, x2, x1
     820:	cmp	x0, x21
     824:	b.cs	b90 <grub_ldm_detect+0xb58>  // b.hs, b.nlast
     828:	ldrb	w1, [x2, x1]
     82c:	add	x1, x1, #0x1
     830:	add	x0, x0, x1
     834:	cmp	x0, x21
     838:	b.cs	b90 <grub_ldm_detect+0xb58>  // b.hs, b.nlast
     83c:	add	x1, x0, #0x15
     840:	cmp	x1, x21
     844:	b.cs	b90 <grub_ldm_detect+0xb58>  // b.hs, b.nlast
     848:	ldrb	w0, [x0, #21]
     84c:	add	x0, x0, #0x1
     850:	add	x1, x1, x0
     854:	cmp	x1, x21
     858:	b.cs	b90 <grub_ldm_detect+0xb58>  // b.hs, b.nlast
     85c:	add	x0, x1, #0x10
     860:	cmp	x0, x21
     864:	b.cs	b90 <grub_ldm_detect+0xb58>  // b.hs, b.nlast
     868:	ldrb	w5, [x1, #16]
     86c:	add	x2, x5, #0x1
     870:	add	x0, x0, x2
     874:	cmp	x21, x0
     878:	b.ls	b90 <grub_ldm_detect+0xb58>  // b.plast
     87c:	add	x1, x1, #0x11
     880:	mov	x0, #0x0                   	// #0
     884:	add	x5, x1, x5
     888:	cmp	x1, x5
     88c:	b.cs	8a0 <grub_ldm_detect+0x868>  // b.hs, b.nlast
     890:	ldrb	w2, [x1], #1
     894:	cmp	x1, x5
     898:	orr	x0, x2, x0, lsl #8
     89c:	b.ne	890 <grub_ldm_detect+0x858>  // b.any
     8a0:	ldr	x2, [x20, #64]
     8a4:	ldr	x1, [x23, #40]
     8a8:	str	x0, [x20, #40]
     8ac:	str	x0, [x2, #8]
     8b0:	str	x1, [x20, #80]
     8b4:	str	x20, [x23, #40]
     8b8:	b	3e8 <grub_ldm_detect+0x3b0>
     8bc:	ldp	x21, x20, [sp, #104]
     8c0:	b	62c <grub_ldm_detect+0x5f4>
     8c4:	mov	x0, x20
     8c8:	ldp	x21, x20, [sp, #104]
     8cc:	bl	0 <grub_free>
     8d0:	b	62c <grub_ldm_detect+0x5f4>
     8d4:	mov	x0, x1
     8d8:	bl	0 <grub_free>
     8dc:	ldr	x0, [x23, #16]
     8e0:	bl	0 <grub_free>
     8e4:	b	6d4 <grub_ldm_detect+0x69c>
     8e8:	add	x21, x19, #0x80
     8ec:	b	4f0 <grub_ldm_detect+0x4b8>
     8f0:	ldp	x21, x20, [sp, #104]
     8f4:	bl	0 <grub_free>
     8f8:	b	62c <grub_ldm_detect+0x5f4>
     8fc:	mov	x0, #0x60                  	// #96
     900:	bl	0 <grub_zalloc>
     904:	mov	x20, x0
     908:	cbz	x0, d7c <grub_ldm_detect+0xd44>
     90c:	str	xzr, [x0]
     910:	add	x26, x28, #0x18
     914:	str	xzr, [x0, #16]
     918:	str	wzr, [x0, #56]
     91c:	ldrb	w0, [x28, #24]
     920:	add	x1, x0, #0x1
     924:	add	x1, x26, x1
     928:	cmp	x23, x1
     92c:	b.ls	d7c <grub_ldm_detect+0xd44>  // b.plast
     930:	add	x0, x0, #0x2
     934:	bl	0 <grub_malloc>
     938:	str	x0, [x20, #88]
     93c:	cbz	x0, ef0 <grub_ldm_detect+0xeb8>
     940:	ldrb	w2, [x28, #24]
     944:	mov	x1, x26
     948:	add	x2, x2, #0x1
     94c:	bl	0 <grub_memmove>
     950:	ldr	x0, [x20, #88]
     954:	ldrb	w1, [x28, #24]
     958:	add	x0, x0, x1
     95c:	strb	wzr, [x0, #1]
     960:	ldrb	w0, [x28, #24]
     964:	add	x0, x0, #0x1
     968:	add	x1, x26, x0
     96c:	ldrb	w0, [x26, x0]
     970:	add	x0, x0, #0x1
     974:	add	x2, x1, x0
     978:	cmp	x2, x23
     97c:	b.cs	610 <grub_ldm_detect+0x5d8>  // b.hs, b.nlast
     980:	ldrb	w0, [x1, x0]
     984:	add	x0, x0, #0x1
     988:	add	x1, x2, x0
     98c:	cmp	x1, x23
     990:	b.cs	610 <grub_ldm_detect+0x5d8>  // b.hs, b.nlast
     994:	add	x7, x1, #0x5
     998:	ldrb	w26, [x2, x0]
     99c:	cmp	x7, x23
     9a0:	b.cs	610 <grub_ldm_detect+0x5d8>  // b.hs, b.nlast
     9a4:	ldrb	w0, [x1, #5]
     9a8:	add	x0, x0, #0x1
     9ac:	add	x27, x7, x0
     9b0:	cmp	x27, x23
     9b4:	b.cs	610 <grub_ldm_detect+0x5d8>  // b.hs, b.nlast
     9b8:	ldrb	w2, [x27, #16]
     9bc:	add	x1, x27, #0x10
     9c0:	str	x1, [sp, #144]
     9c4:	and	x0, x2, #0xff
     9c8:	add	x0, x0, #0x1
     9cc:	add	x0, x1, x0
     9d0:	cmp	x23, x0
     9d4:	b.ls	610 <grub_ldm_detect+0x5d8>  // b.plast
     9d8:	ldr	x0, [sp, #104]
     9dc:	ldr	x21, [x0, #40]
     9e0:	cbz	x21, b7c <grub_ldm_detect+0xb44>
     9e4:	add	x1, x27, #0x11
     9e8:	b	9f8 <grub_ldm_detect+0x9c0>
     9ec:	ldr	x21, [x21, #80]
     9f0:	cbz	x21, b7c <grub_ldm_detect+0xb44>
     9f4:	ldrb	w2, [x27, #16]
     9f8:	ldr	x0, [x21, #88]
     9fc:	ldrb	w6, [x0]
     a00:	cmp	w6, w2
     a04:	b.ne	9ec <grub_ldm_detect+0x9b4>  // b.any
     a08:	and	x2, x2, #0xff
     a0c:	add	x0, x0, #0x1
     a10:	str	x1, [sp, #136]
     a14:	bl	0 <grub_memcmp>
     a18:	ldr	x1, [sp, #136]
     a1c:	cbnz	w0, 9ec <grub_ldm_detect+0x9b4>
     a20:	ldr	x0, [x21, #40]
     a24:	str	x0, [x20, #40]
     a28:	cmp	w26, #0x2
     a2c:	b.eq	d98 <grub_ldm_detect+0xd60>  // b.none
     a30:	mov	x1, #0x1                   	// #1
     a34:	mov	w0, #0x1                   	// #1
     a38:	str	w0, [x20, #28]
     a3c:	mov	x0, #0x38                  	// #56
     a40:	str	x1, [x20, #32]
     a44:	bl	0 <grub_malloc>
     a48:	str	x0, [x20, #64]
     a4c:	mov	x1, x0
     a50:	cbz	x0, d7c <grub_ldm_detect+0xd44>
     a54:	ldr	x0, [x21, #40]
     a58:	stp	xzr, x0, [x1]
     a5c:	cmp	w26, #0x1
     a60:	str	wzr, [x1, #20]
     a64:	b.eq	ddc <grub_ldm_detect+0xda4>  // b.none
     a68:	cmp	w26, #0x3
     a6c:	b.ne	d7c <grub_ldm_detect+0xd44>  // b.any
     a70:	mov	x0, #0x5                   	// #5
     a74:	movk	x0, #0x2, lsl #32
     a78:	str	x0, [x1, #16]
     a7c:	ldrb	w0, [x27, #16]
     a80:	ldrb	w2, [x28, #18]
     a84:	ldr	x3, [sp, #144]
     a88:	add	x0, x0, #0x1
     a8c:	add	x27, x3, x0
     a90:	add	x8, x27, #0x1
     a94:	tbz	w2, #4, d7c <grub_ldm_detect+0xd44>
     a98:	cmp	x8, x23
     a9c:	b.cs	610 <grub_ldm_detect+0x5d8>  // b.hs, b.nlast
     aa0:	ldrb	w6, [x27, #1]
     aa4:	add	x0, x6, #0x1
     aa8:	add	x0, x8, x0
     aac:	cmp	x23, x0
     ab0:	b.ls	610 <grub_ldm_detect+0x5d8>  // b.plast
     ab4:	add	x0, x27, #0x2
     ab8:	mov	x2, #0x0                   	// #0
     abc:	add	x6, x0, x6
     ac0:	cmp	x6, x0
     ac4:	b.ls	ad8 <grub_ldm_detect+0xaa0>  // b.plast
     ac8:	ldrb	w7, [x0], #1
     acc:	cmp	x6, x0
     ad0:	orr	x2, x7, x2, lsl #8
     ad4:	b.ne	ac8 <grub_ldm_detect+0xa90>  // b.any
     ad8:	str	w2, [x1, #48]
     adc:	ldrb	w2, [x27, #1]
     ae0:	add	x2, x2, #0x1
     ae4:	add	x0, x8, x2
     ae8:	ldrb	w6, [x8, x2]
     aec:	add	x6, x6, #0x1
     af0:	add	x6, x0, x6
     af4:	cmp	x6, x23
     af8:	b.cs	610 <grub_ldm_detect+0x5d8>  // b.hs, b.nlast
     afc:	add	x0, x0, #0x1
     b00:	mov	x2, #0x0                   	// #0
     b04:	cmp	x6, x0
     b08:	b.ls	b1c <grub_ldm_detect+0xae4>  // b.plast
     b0c:	ldrb	w7, [x0], #1
     b10:	cmp	x6, x0
     b14:	orr	x2, x7, x2, lsl #8
     b18:	b.ne	b0c <grub_ldm_detect+0xad4>  // b.any
     b1c:	stp	w2, w2, [x1, #32]
     b20:	ubfiz	x0, x2, #5, #32
     b24:	str	x1, [sp, #136]
     b28:	bl	0 <grub_zalloc>
     b2c:	ldr	x1, [sp, #136]
     b30:	ldr	x2, [x21, #64]
     b34:	str	x0, [x1, #40]
     b38:	ldr	x0, [x2, #40]
     b3c:	cbz	x0, d7c <grub_ldm_detect+0xd44>
     b40:	ldp	w1, w6, [x2, #32]
     b44:	cmp	w6, w1
     b48:	b.eq	de4 <grub_ldm_detect+0xdac>  // b.none
     b4c:	ubfiz	x6, x1, #5, #32
     b50:	add	w1, w1, #0x1
     b54:	ldr	x4, [sp, #104]
     b58:	add	x3, x0, x6
     b5c:	ldr	x7, [x4, #40]
     b60:	str	xzr, [x3, #16]
     b64:	str	xzr, [x0, x6]
     b68:	str	w1, [x2, #32]
     b6c:	str	x20, [x3, #24]
     b70:	str	x7, [x20, #80]
     b74:	str	x20, [x4, #40]
     b78:	b	474 <grub_ldm_detect+0x43c>
     b7c:	ldr	x0, [x20, #88]
     b80:	bl	0 <grub_free>
     b84:	mov	x0, x20
     b88:	bl	0 <grub_free>
     b8c:	b	474 <grub_ldm_detect+0x43c>
     b90:	ldr	x0, [x20, #88]
     b94:	mov	x27, x20
     b98:	ldp	x21, x20, [sp, #104]
     b9c:	bl	0 <grub_free>
     ba0:	ldr	x0, [x27, #16]
     ba4:	bl	0 <grub_free>
     ba8:	mov	x0, x27
     bac:	bl	0 <grub_free>
     bb0:	b	62c <grub_ldm_detect+0x5f4>
     bb4:	ldrb	w1, [x19, #24]
     bb8:	add	x19, x19, #0x18
     bbc:	add	x1, x1, #0x1
     bc0:	add	x0, x19, x1
     bc4:	cmp	x0, x21
     bc8:	b.cs	d7c <grub_ldm_detect+0xd44>  // b.hs, b.nlast
     bcc:	ldrb	w1, [x19, x1]
     bd0:	add	x1, x1, #0x1
     bd4:	add	x0, x0, x1
     bd8:	cmp	x0, x21
     bdc:	b.cs	d7c <grub_ldm_detect+0xd44>  // b.hs, b.nlast
     be0:	add	x5, x0, #0x1c
     be4:	cmp	x5, x21
     be8:	b.cs	d7c <grub_ldm_detect+0xd44>  // b.hs, b.nlast
     bec:	ldrb	w2, [x0, #28]
     bf0:	add	x24, x2, #0x1
     bf4:	add	x20, x5, x24
     bf8:	cmp	x20, x21
     bfc:	b.cs	d7c <grub_ldm_detect+0xd44>  // b.hs, b.nlast
     c00:	add	x1, x0, #0x1d
     c04:	mov	x25, #0x0                   	// #0
     c08:	add	x2, x1, x2
     c0c:	cmp	x1, x2
     c10:	b.cs	c24 <grub_ldm_detect+0xbec>  // b.hs, b.nlast
     c14:	ldrb	w3, [x1], #1
     c18:	cmp	x1, x2
     c1c:	orr	x25, x3, x25, lsl #8
     c20:	b.ne	c14 <grub_ldm_detect+0xbdc>  // b.any
     c24:	ldr	x1, [sp, #104]
     c28:	ldrb	w2, [x5, x24]
     c2c:	ldr	x23, [x1, #40]
     c30:	and	x1, x2, #0xff
     c34:	add	x1, x1, #0x1
     c38:	add	x1, x20, x1
     c3c:	cmp	x21, x1
     c40:	b.ls	d7c <grub_ldm_detect+0xd44>  // b.plast
     c44:	cbz	x23, 4f0 <grub_ldm_detect+0x4b8>
     c48:	ldrb	w1, [x0, #19]
     c4c:	add	x9, x20, #0x1
     c50:	str	w1, [sp, #172]
     c54:	ldrb	w1, [x0, #24]
     c58:	str	w1, [sp, #144]
     c5c:	ldrb	w1, [x0, #25]
     c60:	ldr	w19, [x0, #12]
     c64:	str	w1, [sp, #160]
     c68:	ldrb	w1, [x0, #26]
     c6c:	ldrb	w28, [x0, #16]
     c70:	ldrb	w27, [x0, #17]
     c74:	ldrb	w26, [x0, #18]
     c78:	str	w1, [sp, #164]
     c7c:	ldrb	w1, [x0, #27]
     c80:	ldr	w0, [x0, #20]
     c84:	str	x21, [sp, #136]
     c88:	mov	x21, x5
     c8c:	str	w0, [sp, #156]
     c90:	str	w1, [sp, #168]
     c94:	str	x24, [sp, #184]
     c98:	mov	w24, w19
     c9c:	mov	x19, x9
     ca0:	b	cb0 <grub_ldm_detect+0xc78>
     ca4:	ldr	x23, [x23, #80]
     ca8:	cbz	x23, d74 <grub_ldm_detect+0xd3c>
     cac:	ldrb	w2, [x20]
     cb0:	ldr	x1, [x23, #88]
     cb4:	ldrb	w0, [x1]
     cb8:	cmp	w0, w2
     cbc:	b.ne	ca4 <grub_ldm_detect+0xc6c>  // b.any
     cc0:	and	x2, x2, #0xff
     cc4:	add	x1, x1, #0x1
     cc8:	mov	x0, x19
     ccc:	bl	0 <grub_memcmp>
     cd0:	cbnz	w0, ca4 <grub_ldm_detect+0xc6c>
     cd4:	mov	w19, w24
     cd8:	mov	x5, x21
     cdc:	ldr	x24, [sp, #184]
     ce0:	ldr	x21, [sp, #136]
     ce4:	ldrb	w9, [x5, x24]
     ce8:	add	x9, x9, #0x1
     cec:	add	x8, x20, x9
     cf0:	cmp	x8, x21
     cf4:	b.cs	d7c <grub_ldm_detect+0xd44>  // b.hs, b.nlast
     cf8:	ldr	x0, [sp, #104]
     cfc:	ldr	x24, [x0, #32]
     d00:	cbz	x24, e2c <grub_ldm_detect+0xdf4>
     d04:	add	x1, x8, #0x1
     d08:	mov	x10, #0x0                   	// #0
     d0c:	str	w27, [sp, #136]
     d10:	mov	w27, w19
     d14:	mov	x19, x10
     d18:	str	w26, [sp, #184]
     d1c:	mov	x26, x25
     d20:	mov	x25, x20
     d24:	mov	x20, x8
     d28:	str	x21, [sp, #192]
     d2c:	mov	x21, x1
     d30:	b	d3c <grub_ldm_detect+0xd04>
     d34:	ldr	x24, [x24, #56]
     d38:	cbz	x24, e08 <grub_ldm_detect+0xdd0>
     d3c:	ldr	x0, [x24, #64]
     d40:	ldrb	w3, [x20]
     d44:	ldrb	w2, [x0]
     d48:	cmp	w2, w3
     d4c:	b.ne	d34 <grub_ldm_detect+0xcfc>  // b.any
     d50:	and	x2, x2, #0xff
     d54:	add	x0, x0, #0x1
     d58:	mov	x1, x21
     d5c:	str	x9, [sp, #200]
     d60:	bl	0 <grub_memcmp>
     d64:	cmp	w0, #0x0
     d68:	csel	x19, x19, x24, ne  // ne = any
     d6c:	ldr	x9, [sp, #200]
     d70:	b	d34 <grub_ldm_detect+0xcfc>
     d74:	ldr	x21, [sp, #136]
     d78:	b	4f0 <grub_ldm_detect+0x4b8>
     d7c:	ldp	x23, x21, [sp, #104]
     d80:	ldr	x20, [sp, #120]
     d84:	b	62c <grub_ldm_detect+0x5f4>
     d88:	mov	x0, x20
     d8c:	ldp	x21, x20, [sp, #104]
     d90:	bl	0 <grub_free>
     d94:	b	62c <grub_ldm_detect+0x5f4>
     d98:	mov	x0, #0x8                   	// #8
     d9c:	str	wzr, [x20, #28]
     da0:	str	x0, [x20, #32]
     da4:	mov	x0, #0x1c0                 	// #448
     da8:	bl	0 <grub_malloc>
     dac:	str	x0, [x20, #64]
     db0:	cbz	x0, d7c <grub_ldm_detect+0xd44>
     db4:	ldr	x2, [x21, #64]
     db8:	ldr	x0, [x2, #40]
     dbc:	b	b40 <grub_ldm_detect+0xb08>
     dc0:	ldr	x0, [x20, #88]
     dc4:	mov	x27, x20
     dc8:	ldp	x21, x20, [sp, #104]
     dcc:	bl	0 <grub_free>
     dd0:	mov	x0, x27
     dd4:	bl	0 <grub_free>
     dd8:	b	62c <grub_ldm_detect+0x5f4>
     ddc:	str	wzr, [x1, #16]
     de0:	b	a7c <grub_ldm_detect+0xa44>
     de4:	lsl	w1, w1, #1
     de8:	str	w1, [x2, #36]
     dec:	lsl	x1, x1, #5
     df0:	bl	0 <grub_realloc>
     df4:	cbz	x0, d7c <grub_ldm_detect+0xd44>
     df8:	ldr	x2, [x21, #64]
     dfc:	ldr	w1, [x2, #32]
     e00:	str	x0, [x2, #40]
     e04:	b	b4c <grub_ldm_detect+0xb14>
     e08:	mov	x10, x19
     e0c:	mov	x8, x20
     e10:	mov	w19, w27
     e14:	mov	x20, x25
     e18:	ldr	w27, [sp, #136]
     e1c:	mov	x25, x26
     e20:	ldr	w26, [sp, #184]
     e24:	mov	x24, x10
     e28:	ldr	x21, [sp, #192]
     e2c:	rev	w19, w19
     e30:	and	x28, x28, #0xff
     e34:	and	x27, x27, #0xff
     e38:	orr	x19, x28, x19, lsl #8
     e3c:	ldrb	w1, [sp, #172]
     e40:	and	x26, x26, #0xff
     e44:	orr	x19, x27, x19, lsl #8
     e48:	ldr	x0, [x23, #32]
     e4c:	orr	x19, x26, x19, lsl #8
     e50:	cmp	x0, #0x1
     e54:	orr	x19, x1, x19, lsl #8
     e58:	b.eq	f28 <grub_ldm_detect+0xef0>  // b.none
     e5c:	ldr	w1, [x23, #28]
     e60:	cmp	x0, x1
     e64:	b.eq	f04 <grub_ldm_detect+0xecc>  // b.none
     e68:	ldr	w0, [sp, #156]
     e6c:	ldrb	w3, [sp, #160]
     e70:	rev	w1, w0
     e74:	ldrb	w0, [sp, #144]
     e78:	ldr	w2, [x23, #28]
     e7c:	ldr	x8, [x23, #64]
     e80:	orr	x1, x0, x1, lsl #8
     e84:	ldrb	w0, [sp, #164]
     e88:	orr	x1, x3, x1, lsl #8
     e8c:	mov	w3, #0x38                  	// #56
     e90:	ldrb	w7, [sp, #168]
     e94:	umull	x2, w2, w3
     e98:	orr	x1, x0, x1, lsl #8
     e9c:	mov	x0, #0x20                  	// #32
     ea0:	add	x20, x8, x2
     ea4:	orr	x1, x7, x1, lsl #8
     ea8:	str	x1, [x8, x2]
     eac:	mov	x1, #0x100000001           	// #4294967297
     eb0:	str	x25, [x20, #8]
     eb4:	str	wzr, [x20, #16]
     eb8:	str	x1, [x20, #32]
     ebc:	bl	0 <grub_malloc>
     ec0:	ldr	w1, [x23, #28]
     ec4:	ldr	x2, [x23, #64]
     ec8:	str	x0, [x20, #40]
     ecc:	mov	w0, #0x38                  	// #56
     ed0:	umaddl	x2, w1, w0, x2
     ed4:	ldr	x0, [x2, #40]
     ed8:	cbz	x0, d7c <grub_ldm_detect+0xd44>
     edc:	stp	x19, xzr, [x0]
     ee0:	add	w1, w1, #0x1
     ee4:	stp	x24, xzr, [x0, #16]
     ee8:	str	w1, [x23, #28]
     eec:	b	4f0 <grub_ldm_detect+0x4b8>
     ef0:	mov	x0, x20
     ef4:	ldp	x23, x21, [sp, #104]
     ef8:	ldr	x20, [sp, #120]
     efc:	bl	0 <grub_free>
     f00:	b	62c <grub_ldm_detect+0x5f4>
     f04:	mov	x1, #0x70                  	// #112
     f08:	lsl	x2, x0, #1
     f0c:	str	x2, [x23, #32]
     f10:	mul	x1, x0, x1
     f14:	ldr	x0, [x23, #64]
     f18:	bl	0 <grub_realloc>
     f1c:	cbz	x0, d7c <grub_ldm_detect+0xd44>
     f20:	str	x0, [x23, #64]
     f24:	b	e68 <grub_ldm_detect+0xe30>
     f28:	ldrb	w0, [x20, x9]
     f2c:	add	x0, x0, #0x1
     f30:	add	x1, x8, x0
     f34:	ldrb	w2, [x8, x0]
     f38:	add	x2, x2, #0x1
     f3c:	add	x2, x1, x2
     f40:	cmp	x2, x21
     f44:	b.cs	d7c <grub_ldm_detect+0xd44>  // b.hs, b.nlast
     f48:	add	x1, x1, #0x1
     f4c:	mov	x0, #0x0                   	// #0
     f50:	b	f5c <grub_ldm_detect+0xf24>
     f54:	ldrb	w3, [x1], #1
     f58:	orr	x0, x3, x0, lsl #8
     f5c:	cmp	x2, x1
     f60:	b.hi	f54 <grub_ldm_detect+0xf1c>  // b.pmore
     f64:	ldr	x1, [x23, #64]
     f68:	ldr	w2, [x1, #32]
     f6c:	cmp	w2, w0
     f70:	b.ls	4f0 <grub_ldm_detect+0x4b8>  // b.plast
     f74:	ldr	x2, [x1, #40]
     f78:	ubfiz	x0, x0, #5, #32
     f7c:	add	x1, x2, x0
     f80:	str	x19, [x2, x0]
     f84:	stp	xzr, x24, [x1, #8]
     f88:	str	xzr, [x1, #24]
     f8c:	b	4f0 <grub_ldm_detect+0x4b8>
	...

0000000000000fc0 <gpt_ldm_sector_iter>:
     fc0:	stp	x29, x30, [sp, #-176]!
     fc4:	mov	x3, #0x80                  	// #128
     fc8:	mov	x29, sp
     fcc:	stp	x19, x20, [sp, #16]
     fd0:	mov	x19, x1
     fd4:	mov	x20, x0
     fd8:	stp	x21, x22, [sp, #32]
     fdc:	mov	x21, x2
     fe0:	ldrsw	x2, [x1, #32]
     fe4:	ldr	x1, [x1, #24]
     fe8:	add	x4, sp, #0x30
     fec:	ldr	x5, [x19, #40]
     ff0:	ldr	x22, [x0, #40]
     ff4:	str	x5, [x0, #40]
     ff8:	bl	0 <grub_disk_read>
     ffc:	cbz	w0, 1018 <gpt_ldm_sector_iter+0x58>
    1000:	mov	w0, #0x0                   	// #0
    1004:	str	x22, [x20, #40]
    1008:	ldp	x19, x20, [sp, #16]
    100c:	ldp	x21, x22, [sp, #32]
    1010:	ldp	x29, x30, [sp], #176
    1014:	ret
    1018:	adrp	x1, 0 <check_ldm_partition>
    101c:	str	x22, [x20, #40]
    1020:	add	x0, sp, #0x30
    1024:	mov	x2, #0x10                  	// #16
    1028:	ldr	x1, [x1]
    102c:	bl	0 <grub_memcmp>
    1030:	mov	w1, w0
    1034:	mov	w0, #0x0                   	// #0
    1038:	cbnz	w1, 1008 <gpt_ldm_sector_iter+0x48>
    103c:	ldp	x1, x2, [x19, #8]
    1040:	mov	w0, #0x1                   	// #1
    1044:	ldp	x19, x20, [sp, #16]
    1048:	add	x1, x1, x2
    104c:	sub	x1, x1, #0x1
    1050:	str	x1, [x21]
    1054:	ldp	x21, x22, [sp, #32]
    1058:	ldp	x29, x30, [sp], #176
    105c:	ret
	...

0000000000001068 <grub_mod_init>:
    1068:	adrp	x0, 0 <check_ldm_partition>
    106c:	ldr	x1, [x0]
    1070:	ldr	x0, [x1]
    1074:	cbz	x0, 1084 <grub_mod_init+0x1c>
    1078:	mov	x1, x0
    107c:	ldr	x0, [x0]
    1080:	cbnz	x0, 1078 <grub_mod_init+0x10>
    1084:	adrp	x0, 0 <check_ldm_partition>
    1088:	ldr	x0, [x0]
    108c:	stp	xzr, x1, [x0]
    1090:	str	x0, [x1]
    1094:	ret
	...

00000000000010a8 <grub_mod_fini>:
    10a8:	adrp	x0, 0 <check_ldm_partition>
    10ac:	ldr	x0, [x0]
    10b0:	b	0 <grub_list_remove>
    10b4:	nop
	...
