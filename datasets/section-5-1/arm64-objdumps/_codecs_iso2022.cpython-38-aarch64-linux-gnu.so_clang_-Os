
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_iso2022.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001808 <.init>:
    1808:	stp	x29, x30, [sp, #-16]!
    180c:	mov	x29, sp
    1810:	bl	1940 <PyCapsule_GetPointer@plt+0x10>
    1814:	ldp	x29, x30, [sp], #16
    1818:	ret

Disassembly of section .plt:

0000000000001820 <PyObject_GetAttrString@plt-0x20>:
    1820:	stp	x16, x30, [sp, #-16]!
    1824:	adrp	x16, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1828:	ldr	x17, [x16, #4088]
    182c:	add	x16, x16, #0xff8
    1830:	br	x17
    1834:	nop
    1838:	nop
    183c:	nop

0000000000001840 <PyObject_GetAttrString@plt>:
    1840:	adrp	x16, 15000 <PyObject_GetAttrString>
    1844:	ldr	x17, [x16]
    1848:	add	x16, x16, #0x0
    184c:	br	x17

0000000000001850 <__cxa_finalize@plt>:
    1850:	adrp	x16, 15000 <PyObject_GetAttrString>
    1854:	ldr	x17, [x16, #8]
    1858:	add	x16, x16, #0x8
    185c:	br	x17

0000000000001860 <_Py_Dealloc@plt>:
    1860:	adrp	x16, 15000 <PyObject_GetAttrString>
    1864:	ldr	x17, [x16, #16]
    1868:	add	x16, x16, #0x10
    186c:	br	x17

0000000000001870 <PyErr_SetString@plt>:
    1870:	adrp	x16, 15000 <PyObject_GetAttrString>
    1874:	ldr	x17, [x16, #24]
    1878:	add	x16, x16, #0x18
    187c:	br	x17

0000000000001880 <PyCapsule_IsValid@plt>:
    1880:	adrp	x16, 15000 <PyObject_GetAttrString>
    1884:	ldr	x17, [x16, #32]
    1888:	add	x16, x16, #0x20
    188c:	br	x17

0000000000001890 <__gmon_start__@plt>:
    1890:	adrp	x16, 15000 <PyObject_GetAttrString>
    1894:	ldr	x17, [x16, #40]
    1898:	add	x16, x16, #0x28
    189c:	br	x17

00000000000018a0 <PyModule_Create2@plt>:
    18a0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18a4:	ldr	x17, [x16, #48]
    18a8:	add	x16, x16, #0x30
    18ac:	br	x17

00000000000018b0 <PyImport_ImportModule@plt>:
    18b0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18b4:	ldr	x17, [x16, #56]
    18b8:	add	x16, x16, #0x38
    18bc:	br	x17

00000000000018c0 <PyImport_ImportModuleNoBlock@plt>:
    18c0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18c4:	ldr	x17, [x16, #64]
    18c8:	add	x16, x16, #0x40
    18cc:	br	x17

00000000000018d0 <PyObject_CallFunctionObjArgs@plt>:
    18d0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18d4:	ldr	x17, [x16, #72]
    18d8:	add	x16, x16, #0x48
    18dc:	br	x17

00000000000018e0 <strcmp@plt>:
    18e0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18e4:	ldr	x17, [x16, #80]
    18e8:	add	x16, x16, #0x50
    18ec:	br	x17

00000000000018f0 <_PyUnicodeWriter_PrepareInternal@plt>:
    18f0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18f4:	ldr	x17, [x16, #88]
    18f8:	add	x16, x16, #0x58
    18fc:	br	x17

0000000000001900 <_PyUnicodeWriter_WriteChar@plt>:
    1900:	adrp	x16, 15000 <PyObject_GetAttrString>
    1904:	ldr	x17, [x16, #96]
    1908:	add	x16, x16, #0x60
    190c:	br	x17

0000000000001910 <PyUnicode_AsUTF8@plt>:
    1910:	adrp	x16, 15000 <PyObject_GetAttrString>
    1914:	ldr	x17, [x16, #104]
    1918:	add	x16, x16, #0x68
    191c:	br	x17

0000000000001920 <PyCapsule_New@plt>:
    1920:	adrp	x16, 15000 <PyObject_GetAttrString>
    1924:	ldr	x17, [x16, #112]
    1928:	add	x16, x16, #0x70
    192c:	br	x17

0000000000001930 <PyCapsule_GetPointer@plt>:
    1930:	adrp	x16, 15000 <PyObject_GetAttrString>
    1934:	ldr	x17, [x16, #120]
    1938:	add	x16, x16, #0x78
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__codecs_iso2022@@Base-0xd4>:
    1940:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1944:	ldr	x0, [x0, #4048]
    1948:	cbz	x0, 1950 <PyCapsule_GetPointer@plt+0x20>
    194c:	b	1890 <__gmon_start__@plt>
    1950:	ret
    1954:	nop
    1958:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    195c:	add	x0, x0, #0x130
    1960:	adrp	x1, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1964:	add	x1, x1, #0x130
    1968:	cmp	x1, x0
    196c:	b.eq	1984 <PyCapsule_GetPointer@plt+0x54>  // b.none
    1970:	adrp	x1, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1974:	ldr	x1, [x1, #4016]
    1978:	cbz	x1, 1984 <PyCapsule_GetPointer@plt+0x54>
    197c:	mov	x16, x1
    1980:	br	x16
    1984:	ret
    1988:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    198c:	add	x0, x0, #0x130
    1990:	adrp	x1, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1994:	add	x1, x1, #0x130
    1998:	sub	x1, x1, x0
    199c:	lsr	x2, x1, #63
    19a0:	add	x1, x2, x1, asr #3
    19a4:	cmp	xzr, x1, asr #1
    19a8:	asr	x1, x1, #1
    19ac:	b.eq	19c4 <PyCapsule_GetPointer@plt+0x94>  // b.none
    19b0:	adrp	x2, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    19b4:	ldr	x2, [x2, #4056]
    19b8:	cbz	x2, 19c4 <PyCapsule_GetPointer@plt+0x94>
    19bc:	mov	x16, x2
    19c0:	br	x16
    19c4:	ret
    19c8:	stp	x29, x30, [sp, #-32]!
    19cc:	mov	x29, sp
    19d0:	str	x19, [sp, #16]
    19d4:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    19d8:	ldrb	w0, [x19, #304]
    19dc:	cbnz	w0, 1a04 <PyCapsule_GetPointer@plt+0xd4>
    19e0:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    19e4:	ldr	x0, [x0, #4024]
    19e8:	cbz	x0, 19f8 <PyCapsule_GetPointer@plt+0xc8>
    19ec:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    19f0:	ldr	x0, [x0, #128]
    19f4:	bl	1850 <__cxa_finalize@plt>
    19f8:	bl	1958 <PyCapsule_GetPointer@plt+0x28>
    19fc:	mov	w0, #0x1                   	// #1
    1a00:	strb	w0, [x19, #304]
    1a04:	ldr	x19, [sp, #16]
    1a08:	ldp	x29, x30, [sp], #32
    1a0c:	ret
    1a10:	b	1988 <PyCapsule_GetPointer@plt+0x58>

0000000000001a14 <PyInit__codecs_iso2022@@Base>:
    1a14:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1a18:	add	x0, x0, #0x88
    1a1c:	mov	w1, #0x3f5                 	// #1013
    1a20:	b	18a0 <PyModule_Create2@plt>
    1a24:	stp	x29, x30, [sp, #-48]!
    1a28:	stp	x22, x21, [sp, #16]
    1a2c:	stp	x20, x19, [sp, #32]
    1a30:	mov	x29, sp
    1a34:	ldr	x8, [x1, #8]
    1a38:	ldrb	w8, [x8, #171]
    1a3c:	tbnz	w8, #4, 1a60 <PyInit__codecs_iso2022@@Base+0x4c>
    1a40:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1a44:	ldr	x8, [x8, #4040]
    1a48:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a4c:	add	x1, x1, #0x804
    1a50:	ldr	x0, [x8]
    1a54:	bl	1870 <PyErr_SetString@plt>
    1a58:	mov	x19, xzr
    1a5c:	b	1b00 <PyInit__codecs_iso2022@@Base+0xec>
    1a60:	mov	x0, x1
    1a64:	bl	1910 <PyUnicode_AsUTF8@plt>
    1a68:	mov	x19, x0
    1a6c:	cbz	x0, 1b00 <PyInit__codecs_iso2022@@Base+0xec>
    1a70:	adrp	x22, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1a74:	ldr	x20, [x22, #312]
    1a78:	cbz	x20, 1b14 <PyInit__codecs_iso2022@@Base+0x100>
    1a7c:	adrp	x21, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1a80:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a84:	add	x21, x21, #0x698
    1a88:	add	x0, x0, #0x876
    1a8c:	mov	x1, x19
    1a90:	bl	18e0 <strcmp@plt>
    1a94:	cbz	w0, 1ab8 <PyInit__codecs_iso2022@@Base+0xa4>
    1a98:	ldr	x0, [x21, #72]!
    1a9c:	ldrb	w8, [x0]
    1aa0:	cbnz	w8, 1a8c <PyInit__codecs_iso2022@@Base+0x78>
    1aa4:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1aa8:	ldr	x8, [x8, #4064]
    1aac:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1ab0:	add	x1, x1, #0x824
    1ab4:	b	1a50 <PyInit__codecs_iso2022@@Base+0x3c>
    1ab8:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1abc:	add	x1, x1, #0x840
    1ac0:	mov	x0, x21
    1ac4:	mov	x2, xzr
    1ac8:	bl	1920 <PyCapsule_New@plt>
    1acc:	cbz	x0, 1a58 <PyInit__codecs_iso2022@@Base+0x44>
    1ad0:	mov	x21, x0
    1ad4:	mov	x0, x20
    1ad8:	mov	x1, x21
    1adc:	mov	x2, xzr
    1ae0:	bl	18d0 <PyObject_CallFunctionObjArgs@plt>
    1ae4:	ldr	x8, [x21]
    1ae8:	mov	x19, x0
    1aec:	subs	x8, x8, #0x1
    1af0:	str	x8, [x21]
    1af4:	b.ne	1b00 <PyInit__codecs_iso2022@@Base+0xec>  // b.any
    1af8:	mov	x0, x21
    1afc:	bl	1860 <_Py_Dealloc@plt>
    1b00:	mov	x0, x19
    1b04:	ldp	x20, x19, [sp, #32]
    1b08:	ldp	x22, x21, [sp, #16]
    1b0c:	ldp	x29, x30, [sp], #48
    1b10:	ret
    1b14:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b18:	add	x0, x0, #0x857
    1b1c:	bl	18c0 <PyImport_ImportModuleNoBlock@plt>
    1b20:	cbz	x0, 1a58 <PyInit__codecs_iso2022@@Base+0x44>
    1b24:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b28:	add	x1, x1, #0x867
    1b2c:	mov	x21, x0
    1b30:	bl	1840 <PyObject_GetAttrString@plt>
    1b34:	str	x0, [x22, #312]
    1b38:	ldr	x8, [x21]
    1b3c:	mov	x20, x0
    1b40:	subs	x8, x8, #0x1
    1b44:	str	x8, [x21]
    1b48:	b.eq	1b54 <PyInit__codecs_iso2022@@Base+0x140>  // b.none
    1b4c:	cbnz	x20, 1a7c <PyInit__codecs_iso2022@@Base+0x68>
    1b50:	b	1a58 <PyInit__codecs_iso2022@@Base+0x44>
    1b54:	mov	x0, x21
    1b58:	bl	1860 <_Py_Dealloc@plt>
    1b5c:	ldr	x20, [x22, #312]
    1b60:	cbnz	x20, 1a7c <PyInit__codecs_iso2022@@Base+0x68>
    1b64:	b	1a58 <PyInit__codecs_iso2022@@Base+0x44>
    1b68:	stp	x29, x30, [sp, #-32]!
    1b6c:	str	x19, [sp, #16]
    1b70:	mov	x29, sp
    1b74:	ldr	x8, [x0, #8]
    1b78:	ldrb	w9, [x8]
    1b7c:	cbz	w9, 1b9c <PyInit__codecs_iso2022@@Base+0x188>
    1b80:	add	x19, x8, #0x20
    1b84:	ldur	x8, [x19, #-24]
    1b88:	cbz	x8, 1b94 <PyInit__codecs_iso2022@@Base+0x180>
    1b8c:	blr	x8
    1b90:	cbnz	w0, 1ba4 <PyInit__codecs_iso2022@@Base+0x190>
    1b94:	ldrb	w8, [x19], #32
    1b98:	cbnz	w8, 1b84 <PyInit__codecs_iso2022@@Base+0x170>
    1b9c:	mov	w0, wzr
    1ba0:	b	1ba8 <PyInit__codecs_iso2022@@Base+0x194>
    1ba4:	mov	w0, #0xffffffff            	// #-1
    1ba8:	ldr	x19, [sp, #16]
    1bac:	ldp	x29, x30, [sp], #32
    1bb0:	ret
    1bb4:	sub	sp, sp, #0x80
    1bb8:	stp	x29, x30, [sp, #32]
    1bbc:	stp	x28, x27, [sp, #48]
    1bc0:	stp	x26, x25, [sp, #64]
    1bc4:	stp	x24, x23, [sp, #80]
    1bc8:	stp	x22, x21, [sp, #96]
    1bcc:	stp	x20, x19, [sp, #112]
    1bd0:	add	x29, sp, #0x20
    1bd4:	ldr	x8, [x4]
    1bd8:	cmp	x8, x5
    1bdc:	b.ge	1fec <PyInit__codecs_iso2022@@Base+0x5d8>  // b.tcont
    1be0:	ldr	w9, [x29, #96]
    1be4:	mov	x20, x7
    1be8:	mov	x21, x6
    1bec:	mov	x22, x5
    1bf0:	mov	x23, x4
    1bf4:	mov	w25, w2
    1bf8:	mov	x27, x0
    1bfc:	mov	w19, #0x1                   	// #1
    1c00:	mov	w28, #0xffff                	// #65535
    1c04:	and	w26, w9, #0x1
    1c08:	stp	x1, x3, [sp]
    1c0c:	cmp	w25, #0x2
    1c10:	b.eq	1c24 <PyInit__codecs_iso2022@@Base+0x210>  // b.none
    1c14:	cmp	w25, #0x1
    1c18:	b.ne	1c2c <PyInit__codecs_iso2022@@Base+0x218>  // b.any
    1c1c:	ldrb	w8, [x3, x8]
    1c20:	b	1c30 <PyInit__codecs_iso2022@@Base+0x21c>
    1c24:	ldrh	w8, [x3, x8, lsl #1]
    1c28:	b	1c30 <PyInit__codecs_iso2022@@Base+0x21c>
    1c2c:	ldr	w8, [x3, x8, lsl #2]
    1c30:	cmp	w8, #0x7f
    1c34:	stur	w8, [x29, #-4]
    1c38:	b.hi	1ce8 <PyInit__codecs_iso2022@@Base+0x2d4>  // b.pmore
    1c3c:	ldrb	w8, [x27]
    1c40:	cmp	w8, #0x42
    1c44:	b.eq	1c84 <PyInit__codecs_iso2022@@Base+0x270>  // b.none
    1c48:	subs	x20, x20, #0x3
    1c4c:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1c50:	ldr	x8, [x21]
    1c54:	mov	w9, #0x1b                  	// #27
    1c58:	strb	w9, [x8]
    1c5c:	ldr	x8, [x21]
    1c60:	mov	w9, #0x28                  	// #40
    1c64:	strb	w9, [x8, #1]
    1c68:	ldr	x8, [x21]
    1c6c:	mov	w9, #0x42                  	// #66
    1c70:	strb	w9, [x8, #2]
    1c74:	strb	w9, [x27]
    1c78:	ldr	x8, [x21]
    1c7c:	add	x8, x8, #0x3
    1c80:	str	x8, [x21]
    1c84:	ldrb	w8, [x27, #4]
    1c88:	tbz	w8, #0, 1cb8 <PyInit__codecs_iso2022@@Base+0x2a4>
    1c8c:	subs	x20, x20, #0x1
    1c90:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1c94:	ldr	x8, [x21]
    1c98:	mov	w9, #0xf                   	// #15
    1c9c:	strb	w9, [x8]
    1ca0:	ldrb	w8, [x27, #4]
    1ca4:	and	w8, w8, #0xfe
    1ca8:	strb	w8, [x27, #4]
    1cac:	ldr	x8, [x21]
    1cb0:	add	x8, x8, #0x1
    1cb4:	str	x8, [x21]
    1cb8:	subs	x20, x20, #0x1
    1cbc:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1cc0:	ldur	w8, [x29, #-4]
    1cc4:	ldr	x9, [x21]
    1cc8:	strb	w8, [x9]
    1ccc:	ldr	x8, [x23]
    1cd0:	add	x8, x8, #0x1
    1cd4:	str	x8, [x23]
    1cd8:	ldr	x9, [x21]
    1cdc:	add	x9, x9, #0x1
    1ce0:	str	x9, [x21]
    1ce4:	b	1fe4 <PyInit__codecs_iso2022@@Base+0x5d0>
    1ce8:	ldr	x24, [x1, #8]
    1cec:	ldrb	w8, [x24]
    1cf0:	cbz	w8, 1ff0 <PyInit__codecs_iso2022@@Base+0x5dc>
    1cf4:	str	x19, [sp, #16]
    1cf8:	ldr	x8, [x24, #24]
    1cfc:	sub	x0, x29, #0x4
    1d00:	add	x1, sp, #0x10
    1d04:	blr	x8
    1d08:	and	w8, w0, #0xffff
    1d0c:	cmp	w8, w28
    1d10:	b.eq	1d60 <PyInit__codecs_iso2022@@Base+0x34c>  // b.none
    1d14:	mov	w9, #0xfffe                	// #65534
    1d18:	cmp	w8, w9
    1d1c:	b.ne	1d6c <PyInit__codecs_iso2022@@Base+0x358>  // b.any
    1d20:	ldr	x8, [x23]
    1d24:	sub	x8, x22, x8
    1d28:	cmp	x8, #0x1
    1d2c:	b.gt	1d34 <PyInit__codecs_iso2022@@Base+0x320>
    1d30:	cbz	w26, 2014 <PyInit__codecs_iso2022@@Base+0x600>
    1d34:	cmp	x8, #0x1
    1d38:	mov	w8, #0x2                   	// #2
    1d3c:	csinv	x8, x8, xzr, gt
    1d40:	str	x8, [sp, #16]
    1d44:	ldr	x8, [x24, #24]
    1d48:	sub	x0, x29, #0x4
    1d4c:	add	x1, sp, #0x10
    1d50:	blr	x8
    1d54:	mvn	w8, w0
    1d58:	tst	w8, #0xffff
    1d5c:	b.ne	1d78 <PyInit__codecs_iso2022@@Base+0x364>  // b.any
    1d60:	ldrb	w8, [x24, #32]!
    1d64:	cbnz	w8, 1cf4 <PyInit__codecs_iso2022@@Base+0x2e0>
    1d68:	b	1ff0 <PyInit__codecs_iso2022@@Base+0x5dc>
    1d6c:	ubfx	w9, w0, #8, #8
    1d70:	mov	w8, #0x1                   	// #1
    1d74:	b	1d80 <PyInit__codecs_iso2022@@Base+0x36c>
    1d78:	ldr	x8, [sp, #16]
    1d7c:	ubfx	w9, w0, #8, #8
    1d80:	ldrb	w10, [x24]
    1d84:	cbz	w10, 1ff0 <PyInit__codecs_iso2022@@Base+0x5dc>
    1d88:	ldrb	w11, [x24, #1]
    1d8c:	cmp	w11, #0x1
    1d90:	b.eq	1e08 <PyInit__codecs_iso2022@@Base+0x3f4>  // b.none
    1d94:	cbnz	w11, 2024 <PyInit__codecs_iso2022@@Base+0x610>
    1d98:	ldrb	w11, [x27, #4]
    1d9c:	tbz	w11, #0, 1dd0 <PyInit__codecs_iso2022@@Base+0x3bc>
    1da0:	subs	x20, x20, #0x1
    1da4:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1da8:	ldr	x10, [x21]
    1dac:	mov	w11, #0xf                   	// #15
    1db0:	strb	w11, [x10]
    1db4:	ldrb	w10, [x27, #4]
    1db8:	and	w10, w10, #0xfe
    1dbc:	strb	w10, [x27, #4]
    1dc0:	ldr	x10, [x21]
    1dc4:	add	x10, x10, #0x1
    1dc8:	str	x10, [x21]
    1dcc:	ldrb	w10, [x24]
    1dd0:	ldrb	w11, [x27]
    1dd4:	cmp	w11, w10
    1dd8:	b.eq	1f7c <PyInit__codecs_iso2022@@Base+0x568>  // b.none
    1ddc:	ldrb	w11, [x24, #2]
    1de0:	cmp	w11, #0x1
    1de4:	b.ne	1ee0 <PyInit__codecs_iso2022@@Base+0x4cc>  // b.any
    1de8:	subs	x20, x20, #0x3
    1dec:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1df0:	ldr	x10, [x21]
    1df4:	mov	w11, #0x1b                  	// #27
    1df8:	strb	w11, [x10]
    1dfc:	ldr	x10, [x21]
    1e00:	mov	w11, #0x28                  	// #40
    1e04:	b	1f04 <PyInit__codecs_iso2022@@Base+0x4f0>
    1e08:	ldrb	w11, [x27, #1]
    1e0c:	cmp	w11, w10
    1e10:	b.eq	1eac <PyInit__codecs_iso2022@@Base+0x498>  // b.none
    1e14:	ldrb	w10, [x24, #2]
    1e18:	cmp	w10, #0x1
    1e1c:	b.ne	1e48 <PyInit__codecs_iso2022@@Base+0x434>  // b.any
    1e20:	cmp	x20, #0x3
    1e24:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1e28:	ldr	x11, [x21]
    1e2c:	mov	w14, #0x1b                  	// #27
    1e30:	mov	x10, #0xfffffffffffffffd    	// #-3
    1e34:	mov	w13, #0x1                   	// #1
    1e38:	mov	w12, #0x2                   	// #2
    1e3c:	strb	w14, [x11]
    1e40:	mov	w11, #0x3                   	// #3
    1e44:	b	1e78 <PyInit__codecs_iso2022@@Base+0x464>
    1e48:	cmp	x20, #0x4
    1e4c:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1e50:	ldr	x10, [x21]
    1e54:	mov	w11, #0x1b                  	// #27
    1e58:	mov	w14, #0x24                  	// #36
    1e5c:	mov	w13, #0x2                   	// #2
    1e60:	strb	w11, [x10]
    1e64:	ldr	x11, [x21]
    1e68:	mov	x10, #0xfffffffffffffffc    	// #-4
    1e6c:	mov	w12, #0x3                   	// #3
    1e70:	strb	w14, [x11, #1]
    1e74:	mov	w11, #0x4                   	// #4
    1e78:	ldr	x14, [x21]
    1e7c:	mov	w15, #0x29                  	// #41
    1e80:	add	x20, x20, x10
    1e84:	strb	w15, [x14, x13]
    1e88:	ldrb	w13, [x24]
    1e8c:	ldr	x14, [x21]
    1e90:	and	w13, w13, #0x7f
    1e94:	strb	w13, [x14, x12]
    1e98:	ldrb	w12, [x24]
    1e9c:	strb	w12, [x27, #1]
    1ea0:	ldr	x12, [x21]
    1ea4:	add	x11, x12, x11
    1ea8:	str	x11, [x21]
    1eac:	ldrb	w10, [x27, #4]
    1eb0:	tbnz	w10, #0, 1f7c <PyInit__codecs_iso2022@@Base+0x568>
    1eb4:	subs	x20, x20, #0x1
    1eb8:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1ebc:	ldr	x10, [x21]
    1ec0:	mov	w11, #0xe                   	// #14
    1ec4:	strb	w11, [x10]
    1ec8:	ldrb	w10, [x27, #4]
    1ecc:	orr	w10, w10, #0x1
    1ed0:	strb	w10, [x27, #4]
    1ed4:	ldr	x10, [x21]
    1ed8:	add	x10, x10, #0x1
    1edc:	b	1f78 <PyInit__codecs_iso2022@@Base+0x564>
    1ee0:	cmp	w10, #0xc2
    1ee4:	b.ne	1f2c <PyInit__codecs_iso2022@@Base+0x518>  // b.any
    1ee8:	subs	x20, x20, #0x3
    1eec:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1ef0:	ldr	x10, [x21]
    1ef4:	mov	w11, #0x1b                  	// #27
    1ef8:	strb	w11, [x10]
    1efc:	ldr	x10, [x21]
    1f00:	mov	w11, #0x24                  	// #36
    1f04:	strb	w11, [x10, #1]
    1f08:	ldrb	w10, [x24]
    1f0c:	ldr	x11, [x21]
    1f10:	and	w10, w10, #0x7f
    1f14:	strb	w10, [x11, #2]
    1f18:	ldrb	w10, [x24]
    1f1c:	strb	w10, [x27]
    1f20:	ldr	x10, [x21]
    1f24:	add	x10, x10, #0x3
    1f28:	b	1f78 <PyInit__codecs_iso2022@@Base+0x564>
    1f2c:	subs	x20, x20, #0x4
    1f30:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1f34:	ldr	x10, [x21]
    1f38:	mov	w11, #0x1b                  	// #27
    1f3c:	strb	w11, [x10]
    1f40:	ldr	x10, [x21]
    1f44:	mov	w11, #0x24                  	// #36
    1f48:	strb	w11, [x10, #1]
    1f4c:	ldr	x10, [x21]
    1f50:	mov	w11, #0x28                  	// #40
    1f54:	strb	w11, [x10, #2]
    1f58:	ldrb	w10, [x24]
    1f5c:	ldr	x11, [x21]
    1f60:	and	w10, w10, #0x7f
    1f64:	strb	w10, [x11, #3]
    1f68:	ldrb	w10, [x24]
    1f6c:	strb	w10, [x27]
    1f70:	ldr	x10, [x21]
    1f74:	add	x10, x10, #0x4
    1f78:	str	x10, [x21]
    1f7c:	ldrb	w10, [x24, #2]
    1f80:	cmp	w10, #0x1
    1f84:	b.ne	1fa0 <PyInit__codecs_iso2022@@Base+0x58c>  // b.any
    1f88:	cmp	x20, #0x1
    1f8c:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1f90:	ldr	x10, [x21]
    1f94:	mov	x9, #0xffffffffffffffff    	// #-1
    1f98:	mov	w11, #0x1                   	// #1
    1f9c:	b	1fc0 <PyInit__codecs_iso2022@@Base+0x5ac>
    1fa0:	cmp	x20, #0x2
    1fa4:	b.lt	201c <PyInit__codecs_iso2022@@Base+0x608>  // b.tstop
    1fa8:	ldr	x10, [x21]
    1fac:	mov	w11, #0x2                   	// #2
    1fb0:	strb	w9, [x10]
    1fb4:	ldr	x10, [x21]
    1fb8:	mov	x9, #0xfffffffffffffffe    	// #-2
    1fbc:	add	x10, x10, #0x1
    1fc0:	strb	w0, [x10]
    1fc4:	ldr	x10, [x21]
    1fc8:	add	x20, x20, x9
    1fcc:	add	x10, x10, x11
    1fd0:	str	x10, [x21]
    1fd4:	ldr	x10, [x23]
    1fd8:	add	x8, x10, x8
    1fdc:	str	x8, [x23]
    1fe0:	ldp	x1, x3, [sp]
    1fe4:	cmp	x8, x22
    1fe8:	b.lt	1c0c <PyInit__codecs_iso2022@@Base+0x1f8>  // b.tstop
    1fec:	mov	x19, xzr
    1ff0:	mov	x0, x19
    1ff4:	ldp	x20, x19, [sp, #112]
    1ff8:	ldp	x22, x21, [sp, #96]
    1ffc:	ldp	x24, x23, [sp, #80]
    2000:	ldp	x26, x25, [sp, #64]
    2004:	ldp	x28, x27, [sp, #48]
    2008:	ldp	x29, x30, [sp, #32]
    200c:	add	sp, sp, #0x80
    2010:	ret
    2014:	mov	x19, #0xfffffffffffffffe    	// #-2
    2018:	b	1ff0 <PyInit__codecs_iso2022@@Base+0x5dc>
    201c:	mov	x19, #0xffffffffffffffff    	// #-1
    2020:	b	1ff0 <PyInit__codecs_iso2022@@Base+0x5dc>
    2024:	mov	x19, #0xfffffffffffffffd    	// #-3
    2028:	b	1ff0 <PyInit__codecs_iso2022@@Base+0x5dc>
    202c:	mov	w8, #0x4242                	// #16962
    2030:	strb	wzr, [x0, #4]
    2034:	strh	w8, [x0]
    2038:	mov	w0, wzr
    203c:	ret
    2040:	ldrb	w8, [x0, #4]
    2044:	tbz	w8, #0, 2074 <PyInit__codecs_iso2022@@Base+0x660>
    2048:	subs	x3, x3, #0x1
    204c:	b.lt	2090 <PyInit__codecs_iso2022@@Base+0x67c>  // b.tstop
    2050:	ldr	x8, [x2]
    2054:	mov	w9, #0xf                   	// #15
    2058:	strb	w9, [x8]
    205c:	ldr	x8, [x2]
    2060:	add	x8, x8, #0x1
    2064:	str	x8, [x2]
    2068:	ldrb	w8, [x0, #4]
    206c:	and	w8, w8, #0xfe
    2070:	strb	w8, [x0, #4]
    2074:	ldrb	w8, [x0]
    2078:	cmp	w8, #0x42
    207c:	b.ne	2088 <PyInit__codecs_iso2022@@Base+0x674>  // b.any
    2080:	mov	x8, xzr
    2084:	b	20d0 <PyInit__codecs_iso2022@@Base+0x6bc>
    2088:	cmp	x3, #0x3
    208c:	b.ge	2098 <PyInit__codecs_iso2022@@Base+0x684>  // b.tcont
    2090:	mov	x8, #0xffffffffffffffff    	// #-1
    2094:	b	20d0 <PyInit__codecs_iso2022@@Base+0x6bc>
    2098:	ldr	x9, [x2]
    209c:	mov	w10, #0x1b                  	// #27
    20a0:	mov	x8, xzr
    20a4:	strb	w10, [x9]
    20a8:	ldr	x9, [x2]
    20ac:	mov	w10, #0x28                  	// #40
    20b0:	strb	w10, [x9, #1]
    20b4:	ldr	x9, [x2]
    20b8:	mov	w10, #0x42                  	// #66
    20bc:	strb	w10, [x9, #2]
    20c0:	ldr	x9, [x2]
    20c4:	add	x9, x9, #0x3
    20c8:	str	x9, [x2]
    20cc:	strb	w10, [x0]
    20d0:	mov	x0, x8
    20d4:	ret
    20d8:	stp	x29, x30, [sp, #-96]!
    20dc:	stp	x28, x27, [sp, #16]
    20e0:	stp	x26, x25, [sp, #32]
    20e4:	stp	x24, x23, [sp, #48]
    20e8:	stp	x22, x21, [sp, #64]
    20ec:	stp	x20, x19, [sp, #80]
    20f0:	mov	x29, sp
    20f4:	cmp	x3, #0x1
    20f8:	b.lt	2654 <PyInit__codecs_iso2022@@Base+0xc40>  // b.tstop
    20fc:	mov	x19, x4
    2100:	mov	x20, x3
    2104:	mov	x21, x2
    2108:	mov	x22, x1
    210c:	mov	x23, x0
    2110:	mov	x26, xzr
    2114:	add	x25, x0, #0x1
    2118:	mov	w28, #0x1                   	// #1
    211c:	mov	w27, #0xffff                	// #65535
    2120:	ldr	x0, [x21]
    2124:	ldrb	w8, [x23, #4]
    2128:	ldrb	w24, [x0]
    212c:	tbnz	w8, #1, 2158 <PyInit__codecs_iso2022@@Base+0x744>
    2130:	cmp	w24, #0xe
    2134:	b.gt	21a0 <PyInit__codecs_iso2022@@Base+0x78c>
    2138:	cmp	w24, #0xa
    213c:	b.eq	221c <PyInit__codecs_iso2022@@Base+0x808>  // b.none
    2140:	cmp	w24, #0xe
    2144:	b.ne	2240 <PyInit__codecs_iso2022@@Base+0x82c>  // b.any
    2148:	ldrb	w9, [x22]
    214c:	tbnz	w9, #0, 2264 <PyInit__codecs_iso2022@@Base+0x850>
    2150:	orr	w8, w8, #0x1
    2154:	b	2290 <PyInit__codecs_iso2022@@Base+0x87c>
    2158:	mov	x0, x19
    215c:	mov	w1, w24
    2160:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2164:	tbnz	w0, #31, 265c <PyInit__codecs_iso2022@@Base+0xc48>
    2168:	ldr	x8, [x21]
    216c:	cmp	w24, #0x40
    2170:	sub	x20, x20, #0x1
    2174:	add	x8, x8, #0x1
    2178:	str	x8, [x21]
    217c:	b.eq	2190 <PyInit__codecs_iso2022@@Base+0x77c>  // b.none
    2180:	sub	w8, w24, #0x41
    2184:	and	w8, w8, #0xff
    2188:	cmp	w8, #0x19
    218c:	b.hi	22a4 <PyInit__codecs_iso2022@@Base+0x890>  // b.pmore
    2190:	ldrb	w8, [x23, #4]
    2194:	and	w8, w8, #0xfffffffd
    2198:	strb	w8, [x23, #4]
    219c:	b	22a4 <PyInit__codecs_iso2022@@Base+0x890>
    21a0:	cmp	w24, #0xf
    21a4:	b.eq	2230 <PyInit__codecs_iso2022@@Base+0x81c>  // b.none
    21a8:	cmp	w24, #0x1b
    21ac:	b.ne	2240 <PyInit__codecs_iso2022@@Base+0x82c>  // b.any
    21b0:	cmp	x20, #0x2
    21b4:	b.lt	2664 <PyInit__codecs_iso2022@@Base+0xc50>  // b.tstop
    21b8:	ldrb	w11, [x0, #1]
    21bc:	sub	w8, w11, #0x24
    21c0:	cmp	w8, #0xa
    21c4:	b.hi	21d4 <PyInit__codecs_iso2022@@Base+0x7c0>  // b.pmore
    21c8:	mov	w9, #0x435                 	// #1077
    21cc:	lsr	w8, w9, w8
    21d0:	tbnz	w8, #0, 22b0 <PyInit__codecs_iso2022@@Base+0x89c>
    21d4:	cmp	w11, #0x4e
    21d8:	b.ne	2278 <PyInit__codecs_iso2022@@Base+0x864>  // b.any
    21dc:	ldr	w8, [x22]
    21e0:	tbz	w8, #1, 2278 <PyInit__codecs_iso2022@@Base+0x864>
    21e4:	subs	x20, x20, #0x3
    21e8:	b.lt	2664 <PyInit__codecs_iso2022@@Base+0xc50>  // b.tstop
    21ec:	ldrb	w8, [x23, #2]
    21f0:	cmp	w8, #0x46
    21f4:	b.eq	2380 <PyInit__codecs_iso2022@@Base+0x96c>  // b.none
    21f8:	cmp	w8, #0x42
    21fc:	b.eq	23b8 <PyInit__codecs_iso2022@@Base+0x9a4>  // b.none
    2200:	cmp	w8, #0x41
    2204:	b.ne	2690 <PyInit__codecs_iso2022@@Base+0xc7c>  // b.any
    2208:	ldrsb	w8, [x0, #2]
    220c:	tbnz	w8, #31, 2698 <PyInit__codecs_iso2022@@Base+0xc84>
    2210:	and	w8, w8, #0xff
    2214:	add	w1, w8, #0x80
    2218:	b	23c0 <PyInit__codecs_iso2022@@Base+0x9ac>
    221c:	and	w8, w8, #0xfe
    2220:	strb	w8, [x23, #4]
    2224:	mov	w1, #0xa                   	// #10
    2228:	mov	x0, x19
    222c:	b	226c <PyInit__codecs_iso2022@@Base+0x858>
    2230:	ldrb	w9, [x22]
    2234:	tbnz	w9, #0, 2264 <PyInit__codecs_iso2022@@Base+0x850>
    2238:	and	w8, w8, #0xfe
    223c:	b	2290 <PyInit__codecs_iso2022@@Base+0x87c>
    2240:	cmp	w24, #0x20
    2244:	b.cc	2264 <PyInit__codecs_iso2022@@Base+0x850>  // b.lo, b.ul, b.last
    2248:	sxtb	w9, w24
    224c:	tbnz	w9, #31, 266c <PyInit__codecs_iso2022@@Base+0xc58>
    2250:	tst	w8, #0x1
    2254:	csel	x8, x23, x25, eq  // eq = none
    2258:	ldrb	w8, [x8]
    225c:	cmp	w8, #0x42
    2260:	b.ne	2314 <PyInit__codecs_iso2022@@Base+0x900>  // b.any
    2264:	mov	x0, x19
    2268:	mov	w1, w24
    226c:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2270:	tbz	w0, #31, 2294 <PyInit__codecs_iso2022@@Base+0x880>
    2274:	b	265c <PyInit__codecs_iso2022@@Base+0xc48>
    2278:	mov	w1, #0x1b                  	// #27
    227c:	mov	x0, x19
    2280:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2284:	tbnz	w0, #31, 265c <PyInit__codecs_iso2022@@Base+0xc48>
    2288:	ldrb	w8, [x23, #4]
    228c:	orr	w8, w8, #0x2
    2290:	strb	w8, [x23, #4]
    2294:	ldr	x8, [x21]
    2298:	sub	x20, x20, #0x1
    229c:	add	x8, x8, #0x1
    22a0:	str	x8, [x21]
    22a4:	cmp	x20, #0x0
    22a8:	b.gt	2120 <PyInit__codecs_iso2022@@Base+0x70c>
    22ac:	b	2654 <PyInit__codecs_iso2022@@Base+0xc40>
    22b0:	mov	w8, #0x1                   	// #1
    22b4:	cmp	x8, x20
    22b8:	b.ge	2664 <PyInit__codecs_iso2022@@Base+0xc50>  // b.tcont
    22bc:	ldrb	w9, [x0, x8]
    22c0:	cmp	w9, #0x40
    22c4:	b.eq	23d8 <PyInit__codecs_iso2022@@Base+0x9c4>  // b.none
    22c8:	sub	w10, w9, #0x41
    22cc:	and	w10, w10, #0xff
    22d0:	cmp	w10, #0x1a
    22d4:	b.cc	23d8 <PyInit__codecs_iso2022@@Base+0x9c4>  // b.lo, b.ul, b.last
    22d8:	ldrb	w10, [x22]
    22dc:	tbz	w10, #2, 2304 <PyInit__codecs_iso2022@@Base+0x8f0>
    22e0:	add	x10, x8, #0x1
    22e4:	cmp	x10, x20
    22e8:	b.ge	2304 <PyInit__codecs_iso2022@@Base+0x8f0>  // b.tcont
    22ec:	cmp	w9, #0x26
    22f0:	b.ne	2304 <PyInit__codecs_iso2022@@Base+0x8f0>  // b.any
    22f4:	ldrb	w9, [x0, x10]
    22f8:	add	x10, x8, #0x2
    22fc:	cmp	w9, #0x40
    2300:	csel	x8, x10, x8, eq  // eq = none
    2304:	cmp	x8, #0xf
    2308:	add	x8, x8, #0x1
    230c:	b.lt	22b4 <PyInit__codecs_iso2022@@Base+0x8a0>  // b.tstop
    2310:	b	266c <PyInit__codecs_iso2022@@Base+0xc58>
    2314:	cbz	x26, 2324 <PyInit__codecs_iso2022@@Base+0x910>
    2318:	ldrb	w9, [x26]
    231c:	cmp	w9, w8
    2320:	b.eq	2338 <PyInit__codecs_iso2022@@Base+0x924>  // b.none
    2324:	ldr	x9, [x22, #8]
    2328:	sub	x26, x9, #0x20
    232c:	ldrb	w9, [x26, #32]!
    2330:	cmp	w9, w8
    2334:	b.ne	232c <PyInit__codecs_iso2022@@Base+0x918>  // b.any
    2338:	ldrb	w8, [x26, #2]
    233c:	cmp	x20, x8
    2340:	b.lt	2664 <PyInit__codecs_iso2022@@Base+0xc50>  // b.tstop
    2344:	ldr	x8, [x26, #16]
    2348:	blr	x8
    234c:	cmp	w0, w27
    2350:	b.eq	26a0 <PyInit__codecs_iso2022@@Base+0xc8c>  // b.none
    2354:	mov	w24, w0
    2358:	lsr	w27, w0, #16
    235c:	cbz	w27, 2368 <PyInit__codecs_iso2022@@Base+0x954>
    2360:	cmp	w27, #0x2
    2364:	b.hi	2428 <PyInit__codecs_iso2022@@Base+0xa14>  // b.pmore
    2368:	mov	x0, x19
    236c:	mov	w1, w24
    2370:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2374:	mov	w27, #0xffff                	// #65535
    2378:	tbz	w0, #31, 25bc <PyInit__codecs_iso2022@@Base+0xba8>
    237c:	b	265c <PyInit__codecs_iso2022@@Base+0xc48>
    2380:	ldrb	w8, [x0, #2]
    2384:	eor	x1, x8, #0x80
    2388:	cmp	w1, #0x9f
    238c:	b.ls	23b0 <PyInit__codecs_iso2022@@Base+0x99c>  // b.plast
    2390:	cmp	w1, #0xbf
    2394:	b.hi	2488 <PyInit__codecs_iso2022@@Base+0xa74>  // b.pmore
    2398:	sub	w9, w1, #0xa0
    239c:	mov	w10, #0x3bc9                	// #15305
    23a0:	lsl	x9, x28, x9
    23a4:	movk	w10, #0x288f, lsl #16
    23a8:	tst	x9, x10
    23ac:	b.eq	2488 <PyInit__codecs_iso2022@@Base+0xa74>  // b.none
    23b0:	mov	x0, x19
    23b4:	b	23c4 <PyInit__codecs_iso2022@@Base+0x9b0>
    23b8:	ldrb	w1, [x0, #2]
    23bc:	tbnz	w1, #7, 2698 <PyInit__codecs_iso2022@@Base+0xc84>
    23c0:	mov	x0, x19
    23c4:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    23c8:	tbnz	w0, #31, 265c <PyInit__codecs_iso2022@@Base+0xc48>
    23cc:	ldr	x8, [x21]
    23d0:	add	x8, x8, #0x3
    23d4:	b	22a0 <PyInit__codecs_iso2022@@Base+0x88c>
    23d8:	add	x9, x8, #0x1
    23dc:	cmp	x9, #0x6
    23e0:	b.hi	2648 <PyInit__codecs_iso2022@@Base+0xc34>  // b.pmore
    23e4:	adrp	x12, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    23e8:	add	x12, x12, #0x7e4
    23ec:	adr	x10, 2400 <PyInit__codecs_iso2022@@Base+0x9ec>
    23f0:	ldrb	w8, [x12, x9]
    23f4:	add	x10, x10, x8, lsl #2
    23f8:	mov	w8, #0x1                   	// #1
    23fc:	br	x10
    2400:	ldrb	w10, [x0, #2]
    2404:	cmp	w11, #0x29
    2408:	b.eq	25ec <PyInit__codecs_iso2022@@Base+0xbd8>  // b.none
    240c:	cmp	w11, #0x28
    2410:	b.eq	25f4 <PyInit__codecs_iso2022@@Base+0xbe0>  // b.none
    2414:	cmp	w11, #0x24
    2418:	b.ne	25fc <PyInit__codecs_iso2022@@Base+0xbe8>  // b.any
    241c:	mov	x8, xzr
    2420:	orr	w10, w10, #0xffffff80
    2424:	b	261c <PyInit__codecs_iso2022@@Base+0xc08>
    2428:	ldr	w8, [x19, #20]
    242c:	and	w28, w24, #0xffff
    2430:	cmp	w27, w24, uxth
    2434:	csel	w2, w27, w28, hi  // hi = pmore
    2438:	cmp	w2, w8
    243c:	b.hi	2450 <PyInit__codecs_iso2022@@Base+0xa3c>  // b.pmore
    2440:	ldp	x8, x9, [x19, #24]
    2444:	sub	x8, x8, x9
    2448:	cmp	x8, #0x1
    244c:	b.gt	2460 <PyInit__codecs_iso2022@@Base+0xa4c>
    2450:	mov	w1, #0x2                   	// #2
    2454:	mov	x0, x19
    2458:	bl	18f0 <_PyUnicodeWriter_PrepareInternal@plt>
    245c:	tbnz	w0, #31, 265c <PyInit__codecs_iso2022@@Base+0xc48>
    2460:	ldr	w8, [x19, #16]
    2464:	cmp	w8, #0x2
    2468:	b.eq	2540 <PyInit__codecs_iso2022@@Base+0xb2c>  // b.none
    246c:	cmp	w8, #0x1
    2470:	b.ne	2554 <PyInit__codecs_iso2022@@Base+0xb40>  // b.any
    2474:	ldr	x8, [x19, #8]
    2478:	ldr	x9, [x19, #32]
    247c:	strb	w27, [x8, x9]
    2480:	ldr	w8, [x19, #16]
    2484:	b	2560 <PyInit__codecs_iso2022@@Base+0xb4c>
    2488:	sub	w8, w8, #0x34
    248c:	cmp	w8, #0x4a
    2490:	b.ls	2518 <PyInit__codecs_iso2022@@Base+0xb04>  // b.plast
    2494:	cmp	w1, #0xaf
    2498:	b.eq	25dc <PyInit__codecs_iso2022@@Base+0xbc8>  // b.none
    249c:	cmp	w1, #0xa2
    24a0:	b.eq	25e4 <PyInit__codecs_iso2022@@Base+0xbd0>  // b.none
    24a4:	cmp	w1, #0xa1
    24a8:	b.ne	2698 <PyInit__codecs_iso2022@@Base+0xc84>  // b.any
    24ac:	mov	w1, #0x2018                	// #8216
    24b0:	b	23c0 <PyInit__codecs_iso2022@@Base+0x9ac>
    24b4:	cmp	w11, #0x24
    24b8:	b.ne	26b0 <PyInit__codecs_iso2022@@Base+0xc9c>  // b.any
    24bc:	ldrb	w8, [x0, #2]
    24c0:	ldrb	w10, [x0, #3]
    24c4:	cmp	w8, #0x28
    24c8:	orr	w10, w10, #0xffffff80
    24cc:	b.eq	25d4 <PyInit__codecs_iso2022@@Base+0xbc0>  // b.none
    24d0:	cmp	w8, #0x29
    24d4:	b.ne	26b0 <PyInit__codecs_iso2022@@Base+0xc9c>  // b.any
    24d8:	mov	w8, #0x1                   	// #1
    24dc:	b	261c <PyInit__codecs_iso2022@@Base+0xc08>
    24e0:	ldrb	w8, [x22]
    24e4:	tbz	w8, #2, 26a8 <PyInit__codecs_iso2022@@Base+0xc94>
    24e8:	ldrb	w8, [x0, #3]
    24ec:	cmp	w8, #0x1b
    24f0:	b.ne	26a8 <PyInit__codecs_iso2022@@Base+0xc94>  // b.any
    24f4:	ldrb	w8, [x0, #4]
    24f8:	cmp	w8, #0x24
    24fc:	b.ne	26a8 <PyInit__codecs_iso2022@@Base+0xc94>  // b.any
    2500:	ldrb	w8, [x0, #5]
    2504:	cmp	w8, #0x42
    2508:	b.ne	26a8 <PyInit__codecs_iso2022@@Base+0xc94>  // b.any
    250c:	mov	x8, xzr
    2510:	mov	w10, #0xc2                  	// #194
    2514:	b	261c <PyInit__codecs_iso2022@@Base+0xc08>
    2518:	cmp	w1, #0xd3
    251c:	b.hi	2538 <PyInit__codecs_iso2022@@Base+0xb24>  // b.pmore
    2520:	sub	w8, w1, #0xb4
    2524:	mov	w9, #0xfd77                	// #64887
    2528:	lsl	x8, x28, x8
    252c:	movk	w9, #0xbfff, lsl #16
    2530:	tst	x8, x9
    2534:	b.eq	2494 <PyInit__codecs_iso2022@@Base+0xa80>  // b.none
    2538:	add	w1, w1, #0x2d0
    253c:	b	23c0 <PyInit__codecs_iso2022@@Base+0x9ac>
    2540:	ldr	x8, [x19, #8]
    2544:	ldr	x9, [x19, #32]
    2548:	strh	w27, [x8, x9, lsl #1]
    254c:	mov	w27, #0xffff                	// #65535
    2550:	b	258c <PyInit__codecs_iso2022@@Base+0xb78>
    2554:	ldr	x9, [x19, #8]
    2558:	ldr	x10, [x19, #32]
    255c:	str	w27, [x9, x10, lsl #2]
    2560:	cmp	w8, #0x2
    2564:	mov	w27, #0xffff                	// #65535
    2568:	b.eq	258c <PyInit__codecs_iso2022@@Base+0xb78>  // b.none
    256c:	cmp	w8, #0x1
    2570:	b.ne	25a0 <PyInit__codecs_iso2022@@Base+0xb8c>  // b.any
    2574:	ldr	x8, [x19, #8]
    2578:	ldr	x9, [x19, #32]
    257c:	add	x8, x9, x8
    2580:	strb	w24, [x8, #1]
    2584:	ldr	x8, [x19, #32]
    2588:	b	25b0 <PyInit__codecs_iso2022@@Base+0xb9c>
    258c:	ldr	x9, [x19, #8]
    2590:	ldr	x8, [x19, #32]
    2594:	add	x9, x9, x8, lsl #1
    2598:	strh	w24, [x9, #2]
    259c:	b	25b0 <PyInit__codecs_iso2022@@Base+0xb9c>
    25a0:	ldr	x9, [x19, #8]
    25a4:	ldr	x8, [x19, #32]
    25a8:	add	x9, x9, x8, lsl #2
    25ac:	str	w28, [x9, #4]
    25b0:	add	x8, x8, #0x2
    25b4:	mov	w28, #0x1                   	// #1
    25b8:	str	x8, [x19, #32]
    25bc:	ldrb	w8, [x26, #2]
    25c0:	ldr	x9, [x21]
    25c4:	sub	x20, x20, x8
    25c8:	add	x9, x9, x8
    25cc:	str	x9, [x21]
    25d0:	b	22a4 <PyInit__codecs_iso2022@@Base+0x890>
    25d4:	mov	x8, xzr
    25d8:	b	261c <PyInit__codecs_iso2022@@Base+0xc08>
    25dc:	mov	w1, #0x2015                	// #8213
    25e0:	b	23c0 <PyInit__codecs_iso2022@@Base+0x9ac>
    25e4:	mov	w1, #0x2019                	// #8217
    25e8:	b	23c0 <PyInit__codecs_iso2022@@Base+0x9ac>
    25ec:	mov	w8, #0x1                   	// #1
    25f0:	b	2614 <PyInit__codecs_iso2022@@Base+0xc00>
    25f4:	mov	x8, xzr
    25f8:	b	2614 <PyInit__codecs_iso2022@@Base+0xc00>
    25fc:	cmp	w11, #0x2e
    2600:	b.ne	2698 <PyInit__codecs_iso2022@@Base+0xc84>  // b.any
    2604:	ldr	w11, [x22]
    2608:	mov	w8, #0x3                   	// #3
    260c:	tbz	w11, #1, 2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    2610:	mov	w8, #0x2                   	// #2
    2614:	cmp	w10, #0x42
    2618:	b.eq	2634 <PyInit__codecs_iso2022@@Base+0xc20>  // b.none
    261c:	ldr	x11, [x22, #8]
    2620:	ldrb	w12, [x11], #32
    2624:	cbz	w12, 2630 <PyInit__codecs_iso2022@@Base+0xc1c>
    2628:	cmp	w12, w10, uxtb
    262c:	b.ne	2620 <PyInit__codecs_iso2022@@Base+0xc0c>  // b.any
    2630:	cbz	w12, 2648 <PyInit__codecs_iso2022@@Base+0xc34>
    2634:	strb	w10, [x23, x8]
    2638:	ldr	x8, [x21]
    263c:	sub	x20, x20, x9
    2640:	add	x8, x8, x9
    2644:	b	22a0 <PyInit__codecs_iso2022@@Base+0x88c>
    2648:	mov	x8, x9
    264c:	cbz	x9, 22a4 <PyInit__codecs_iso2022@@Base+0x890>
    2650:	b	2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    2654:	mov	x8, xzr
    2658:	b	2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    265c:	mov	x8, #0xfffffffffffffffc    	// #-4
    2660:	b	2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    2664:	mov	x8, #0xfffffffffffffffe    	// #-2
    2668:	b	2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    266c:	mov	w8, #0x1                   	// #1
    2670:	ldp	x20, x19, [sp, #80]
    2674:	ldp	x22, x21, [sp, #64]
    2678:	ldp	x24, x23, [sp, #48]
    267c:	ldp	x26, x25, [sp, #32]
    2680:	ldp	x28, x27, [sp, #16]
    2684:	mov	x0, x8
    2688:	ldp	x29, x30, [sp], #96
    268c:	ret
    2690:	mov	x8, #0xfffffffffffffffd    	// #-3
    2694:	b	2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    2698:	mov	w8, #0x3                   	// #3
    269c:	b	2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    26a0:	ldrb	w8, [x26, #2]
    26a4:	b	2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    26a8:	mov	w8, #0x6                   	// #6
    26ac:	b	2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    26b0:	mov	w8, #0x4                   	// #4
    26b4:	b	2670 <PyInit__codecs_iso2022@@Base+0xc5c>
    26b8:	mov	w8, #0x4242                	// #16962
    26bc:	mov	w9, #0x42                  	// #66
    26c0:	strb	wzr, [x0, #4]
    26c4:	strh	w8, [x0]
    26c8:	strb	w9, [x0, #2]
    26cc:	mov	w0, wzr
    26d0:	ret
    26d4:	ldrb	w8, [x0, #4]
    26d8:	mov	w9, #0x42                  	// #66
    26dc:	strb	w9, [x0]
    26e0:	and	w8, w8, #0xfe
    26e4:	strb	w8, [x0, #4]
    26e8:	mov	x0, xzr
    26ec:	ret
    26f0:	stp	x29, x30, [sp, #-32]!
    26f4:	str	x19, [sp, #16]
    26f8:	mov	x29, sp
    26fc:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2700:	ldrb	w8, [x19, #320]
    2704:	tbz	w8, #0, 2718 <PyInit__codecs_iso2022@@Base+0xd04>
    2708:	mov	w0, wzr
    270c:	mov	w8, #0x1                   	// #1
    2710:	strb	w8, [x19, #320]
    2714:	b	2764 <PyInit__codecs_iso2022@@Base+0xd50>
    2718:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    271c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2720:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2724:	add	x0, x0, #0x8d2
    2728:	add	x1, x1, #0x8dd
    272c:	add	x2, x2, #0x148
    2730:	mov	x3, xzr
    2734:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2738:	cbnz	w0, 2760 <PyInit__codecs_iso2022@@Base+0xd4c>
    273c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2740:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2744:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2748:	add	x0, x0, #0x8d2
    274c:	add	x1, x1, #0x8e9
    2750:	add	x3, x3, #0x150
    2754:	mov	x2, xzr
    2758:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    275c:	cbz	w0, 2708 <PyInit__codecs_iso2022@@Base+0xcf4>
    2760:	mov	w0, #0xffffffff            	// #-1
    2764:	ldr	x19, [sp, #16]
    2768:	ldp	x29, x30, [sp], #32
    276c:	ret
    2770:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2774:	ldrb	w10, [x0]
    2778:	ldr	x11, [x8, #336]
    277c:	lsl	x8, x10, #4
    2780:	ldr	x8, [x11, x8]
    2784:	cbz	x8, 27a8 <PyInit__codecs_iso2022@@Base+0xd94>
    2788:	add	x11, x11, x10, lsl #4
    278c:	ldrb	w9, [x0, #1]
    2790:	ldrb	w10, [x11, #8]
    2794:	cmp	w9, w10
    2798:	b.cc	27a8 <PyInit__codecs_iso2022@@Base+0xd94>  // b.lo, b.ul, b.last
    279c:	ldrb	w11, [x11, #9]
    27a0:	cmp	w9, w11
    27a4:	b.ls	27b0 <PyInit__codecs_iso2022@@Base+0xd9c>  // b.plast
    27a8:	mov	w0, #0xffff                	// #65535
    27ac:	ret
    27b0:	sub	x9, x9, x10
    27b4:	ldrh	w8, [x8, x9, lsl #1]
    27b8:	mov	w9, #0xfffe                	// #65534
    27bc:	cmp	w8, w9
    27c0:	csinv	w8, w8, wzr, ne  // ne = any
    27c4:	and	w0, w8, #0xffff
    27c8:	ret
    27cc:	ldr	w8, [x0]
    27d0:	ubfx	x9, x8, #16, #16
    27d4:	cbnz	w9, 2818 <PyInit__codecs_iso2022@@Base+0xe04>
    27d8:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    27dc:	ldr	x10, [x9, #328]
    27e0:	lsr	x11, x8, #8
    27e4:	lsl	x9, x11, #4
    27e8:	ldr	x9, [x10, x9]
    27ec:	cbz	x9, 2818 <PyInit__codecs_iso2022@@Base+0xe04>
    27f0:	add	x10, x10, x11, lsl #4
    27f4:	ldrb	w12, [x10, #8]
    27f8:	and	w11, w8, #0xff
    27fc:	subs	w8, w11, w12
    2800:	b.cc	2818 <PyInit__codecs_iso2022@@Base+0xe04>  // b.lo, b.ul, b.last
    2804:	ldrb	w10, [x10, #9]
    2808:	cmp	w11, w10
    280c:	b.hi	2818 <PyInit__codecs_iso2022@@Base+0xe04>  // b.pmore
    2810:	ldrsh	w0, [x9, w8, uxtw #1]
    2814:	tbz	w0, #31, 281c <PyInit__codecs_iso2022@@Base+0xe08>
    2818:	mov	w0, #0xffff                	// #65535
    281c:	ret
    2820:	stp	x29, x30, [sp, #-48]!
    2824:	stp	x22, x21, [sp, #16]
    2828:	stp	x20, x19, [sp, #32]
    282c:	mov	x29, sp
    2830:	mov	x20, x3
    2834:	mov	x21, x2
    2838:	mov	x22, x1
    283c:	bl	18b0 <PyImport_ImportModule@plt>
    2840:	cbz	x0, 28f8 <PyInit__codecs_iso2022@@Base+0xee4>
    2844:	mov	x1, x22
    2848:	mov	x19, x0
    284c:	bl	1840 <PyObject_GetAttrString@plt>
    2850:	cbz	x0, 28e0 <PyInit__codecs_iso2022@@Base+0xecc>
    2854:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2858:	add	x1, x1, #0x840
    285c:	mov	x22, x0
    2860:	bl	1880 <PyCapsule_IsValid@plt>
    2864:	cbz	w0, 28c8 <PyInit__codecs_iso2022@@Base+0xeb4>
    2868:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    286c:	add	x1, x1, #0x840
    2870:	mov	x0, x22
    2874:	bl	1930 <PyCapsule_GetPointer@plt>
    2878:	cbz	x21, 2884 <PyInit__codecs_iso2022@@Base+0xe70>
    287c:	ldr	x8, [x0, #8]
    2880:	str	x8, [x21]
    2884:	cbz	x20, 2890 <PyInit__codecs_iso2022@@Base+0xe7c>
    2888:	ldr	x8, [x0, #16]
    288c:	str	x8, [x20]
    2890:	ldr	x8, [x22]
    2894:	subs	x8, x8, #0x1
    2898:	str	x8, [x22]
    289c:	b.ne	28a8 <PyInit__codecs_iso2022@@Base+0xe94>  // b.any
    28a0:	mov	x0, x22
    28a4:	bl	1860 <_Py_Dealloc@plt>
    28a8:	ldr	x8, [x19]
    28ac:	subs	x8, x8, #0x1
    28b0:	str	x8, [x19]
    28b4:	b.ne	28c0 <PyInit__codecs_iso2022@@Base+0xeac>  // b.any
    28b8:	mov	x0, x19
    28bc:	bl	1860 <_Py_Dealloc@plt>
    28c0:	mov	w0, wzr
    28c4:	b	28fc <PyInit__codecs_iso2022@@Base+0xee8>
    28c8:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    28cc:	ldr	x8, [x8, #4032]
    28d0:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    28d4:	add	x1, x1, #0x8f7
    28d8:	ldr	x0, [x8]
    28dc:	bl	1870 <PyErr_SetString@plt>
    28e0:	ldr	x8, [x19]
    28e4:	subs	x8, x8, #0x1
    28e8:	str	x8, [x19]
    28ec:	b.ne	28f8 <PyInit__codecs_iso2022@@Base+0xee4>  // b.any
    28f0:	mov	x0, x19
    28f4:	bl	1860 <_Py_Dealloc@plt>
    28f8:	mov	w0, #0xffffffff            	// #-1
    28fc:	ldp	x20, x19, [sp, #32]
    2900:	ldp	x22, x21, [sp, #16]
    2904:	ldp	x29, x30, [sp], #48
    2908:	ret
    290c:	stp	x29, x30, [sp, #-32]!
    2910:	str	x19, [sp, #16]
    2914:	mov	x29, sp
    2918:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    291c:	ldrb	w8, [x19, #344]
    2920:	tbz	w8, #0, 2934 <PyInit__codecs_iso2022@@Base+0xf20>
    2924:	mov	w0, wzr
    2928:	mov	w8, #0x1                   	// #1
    292c:	strb	w8, [x19, #344]
    2930:	b	2980 <PyInit__codecs_iso2022@@Base+0xf6c>
    2934:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2938:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    293c:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2940:	add	x0, x0, #0x913
    2944:	add	x1, x1, #0x91e
    2948:	add	x2, x2, #0x160
    294c:	mov	x3, xzr
    2950:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2954:	cbnz	w0, 297c <PyInit__codecs_iso2022@@Base+0xf68>
    2958:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    295c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2960:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2964:	add	x0, x0, #0x913
    2968:	add	x1, x1, #0x92f
    296c:	add	x3, x3, #0x168
    2970:	mov	x2, xzr
    2974:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2978:	cbz	w0, 2924 <PyInit__codecs_iso2022@@Base+0xf10>
    297c:	mov	w0, #0xffffffff            	// #-1
    2980:	ldr	x19, [sp, #16]
    2984:	ldp	x29, x30, [sp], #32
    2988:	ret
    298c:	ldrb	w9, [x0]
    2990:	cmp	x9, #0x21
    2994:	b.ne	29ac <PyInit__codecs_iso2022@@Base+0xf98>  // b.any
    2998:	ldrb	w8, [x0, #1]
    299c:	cmp	w8, #0x40
    29a0:	b.ne	29ac <PyInit__codecs_iso2022@@Base+0xf98>  // b.any
    29a4:	mov	w0, #0xff3c                	// #65340
    29a8:	ret
    29ac:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    29b0:	ldr	x11, [x8, #360]
    29b4:	lsl	x8, x9, #4
    29b8:	ldr	x8, [x11, x8]
    29bc:	cbz	x8, 29e0 <PyInit__codecs_iso2022@@Base+0xfcc>
    29c0:	add	x11, x11, x9, lsl #4
    29c4:	ldrb	w10, [x0, #1]
    29c8:	ldrb	w9, [x11, #8]
    29cc:	cmp	w10, w9
    29d0:	b.cc	29e0 <PyInit__codecs_iso2022@@Base+0xfcc>  // b.lo, b.ul, b.last
    29d4:	ldrb	w11, [x11, #9]
    29d8:	cmp	w10, w11
    29dc:	b.ls	29e8 <PyInit__codecs_iso2022@@Base+0xfd4>  // b.plast
    29e0:	mov	w0, #0xffff                	// #65535
    29e4:	ret
    29e8:	sub	x9, x10, x9
    29ec:	ldrh	w8, [x8, x9, lsl #1]
    29f0:	mov	w9, #0xfffe                	// #65534
    29f4:	cmp	w8, w9
    29f8:	csinv	w8, w8, wzr, ne  // ne = any
    29fc:	and	w0, w8, #0xffff
    2a00:	ret
    2a04:	ldr	w8, [x0]
    2a08:	ubfx	x9, x8, #16, #16
    2a0c:	cbnz	w9, 2a64 <PyInit__codecs_iso2022@@Base+0x1050>
    2a10:	mov	w9, #0xff3c                	// #65340
    2a14:	cmp	w8, w9
    2a18:	b.ne	2a24 <PyInit__codecs_iso2022@@Base+0x1010>  // b.any
    2a1c:	mov	w0, #0x2140                	// #8512
    2a20:	ret
    2a24:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2a28:	ldr	x10, [x9, #352]
    2a2c:	lsr	x11, x8, #8
    2a30:	lsl	x9, x11, #4
    2a34:	ldr	x9, [x10, x9]
    2a38:	cbz	x9, 2a64 <PyInit__codecs_iso2022@@Base+0x1050>
    2a3c:	add	x10, x10, x11, lsl #4
    2a40:	ldrb	w12, [x10, #8]
    2a44:	and	w11, w8, #0xff
    2a48:	subs	w8, w11, w12
    2a4c:	b.cc	2a64 <PyInit__codecs_iso2022@@Base+0x1050>  // b.lo, b.ul, b.last
    2a50:	ldrb	w10, [x10, #9]
    2a54:	cmp	w11, w10
    2a58:	b.hi	2a64 <PyInit__codecs_iso2022@@Base+0x1050>  // b.pmore
    2a5c:	ldrsh	w0, [x9, w8, uxtw #1]
    2a60:	tbz	w0, #31, 2a68 <PyInit__codecs_iso2022@@Base+0x1054>
    2a64:	mov	w0, #0xffff                	// #65535
    2a68:	ret
    2a6c:	ldrb	w0, [x0]
    2a70:	cmp	w0, #0x5c
    2a74:	b.cc	2aa0 <PyInit__codecs_iso2022@@Base+0x108c>  // b.lo, b.ul, b.last
    2a78:	b.ne	2a84 <PyInit__codecs_iso2022@@Base+0x1070>  // b.any
    2a7c:	mov	w0, #0xa5                  	// #165
    2a80:	ret
    2a84:	cmp	w0, #0x7e
    2a88:	b.cc	2aa0 <PyInit__codecs_iso2022@@Base+0x108c>  // b.lo, b.ul, b.last
    2a8c:	cmp	w0, #0x7e
    2a90:	b.eq	2aa4 <PyInit__codecs_iso2022@@Base+0x1090>  // b.none
    2a94:	cmp	w0, #0x7f
    2a98:	b.eq	2aa0 <PyInit__codecs_iso2022@@Base+0x108c>  // b.none
    2a9c:	mov	w0, #0xffff                	// #65535
    2aa0:	ret
    2aa4:	mov	w0, #0x203e                	// #8254
    2aa8:	ret
    2aac:	ldr	w8, [x0]
    2ab0:	cmp	w8, #0x7f
    2ab4:	b.ls	2ad4 <PyInit__codecs_iso2022@@Base+0x10c0>  // b.plast
    2ab8:	cmp	w8, #0xa5
    2abc:	b.eq	2aec <PyInit__codecs_iso2022@@Base+0x10d8>  // b.none
    2ac0:	mov	w9, #0x203e                	// #8254
    2ac4:	cmp	w8, w9
    2ac8:	b.ne	2af4 <PyInit__codecs_iso2022@@Base+0x10e0>  // b.any
    2acc:	mov	w0, #0x7e                  	// #126
    2ad0:	b	2ae8 <PyInit__codecs_iso2022@@Base+0x10d4>
    2ad4:	cmp	w8, #0x5c
    2ad8:	mov	w0, #0xffff                	// #65535
    2adc:	b.eq	2ae8 <PyInit__codecs_iso2022@@Base+0x10d4>  // b.none
    2ae0:	cmp	w8, #0x7e
    2ae4:	b.ne	2afc <PyInit__codecs_iso2022@@Base+0x10e8>  // b.any
    2ae8:	ret
    2aec:	mov	w0, #0x5c                  	// #92
    2af0:	ret
    2af4:	mov	w0, #0xffff                	// #65535
    2af8:	ret
    2afc:	mov	w0, w8
    2b00:	ret
    2b04:	stp	x29, x30, [sp, #-32]!
    2b08:	str	x19, [sp, #16]
    2b0c:	mov	x29, sp
    2b10:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b14:	ldrb	w8, [x19, #368]
    2b18:	tbz	w8, #0, 2b2c <PyInit__codecs_iso2022@@Base+0x1118>
    2b1c:	mov	w0, wzr
    2b20:	mov	w8, #0x1                   	// #1
    2b24:	strb	w8, [x19, #368]
    2b28:	b	2b78 <PyInit__codecs_iso2022@@Base+0x1164>
    2b2c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b30:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b34:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b38:	add	x0, x0, #0x913
    2b3c:	add	x1, x1, #0x91e
    2b40:	add	x2, x2, #0x160
    2b44:	mov	x3, xzr
    2b48:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2b4c:	cbnz	w0, 2b74 <PyInit__codecs_iso2022@@Base+0x1160>
    2b50:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b54:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b58:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b5c:	add	x0, x0, #0x913
    2b60:	add	x1, x1, #0x93e
    2b64:	add	x3, x3, #0x178
    2b68:	mov	x2, xzr
    2b6c:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2b70:	cbz	w0, 2b1c <PyInit__codecs_iso2022@@Base+0x1108>
    2b74:	mov	w0, #0xffffffff            	// #-1
    2b78:	ldr	x19, [sp, #16]
    2b7c:	ldp	x29, x30, [sp], #32
    2b80:	ret
    2b84:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b88:	ldrb	w10, [x0]
    2b8c:	ldr	x11, [x8, #376]
    2b90:	lsl	x8, x10, #4
    2b94:	ldr	x8, [x11, x8]
    2b98:	cbz	x8, 2bbc <PyInit__codecs_iso2022@@Base+0x11a8>
    2b9c:	add	x11, x11, x10, lsl #4
    2ba0:	ldrb	w9, [x0, #1]
    2ba4:	ldrb	w10, [x11, #8]
    2ba8:	cmp	w9, w10
    2bac:	b.cc	2bbc <PyInit__codecs_iso2022@@Base+0x11a8>  // b.lo, b.ul, b.last
    2bb0:	ldrb	w11, [x11, #9]
    2bb4:	cmp	w9, w11
    2bb8:	b.ls	2bc4 <PyInit__codecs_iso2022@@Base+0x11b0>  // b.plast
    2bbc:	mov	w0, #0xffff                	// #65535
    2bc0:	ret
    2bc4:	sub	x9, x9, x10
    2bc8:	ldrh	w8, [x8, x9, lsl #1]
    2bcc:	mov	w9, #0xfffe                	// #65534
    2bd0:	cmp	w8, w9
    2bd4:	csinv	w8, w8, wzr, ne  // ne = any
    2bd8:	and	w0, w8, #0xffff
    2bdc:	ret
    2be0:	ldr	w8, [x0]
    2be4:	ubfx	x9, x8, #16, #16
    2be8:	cbnz	w9, 2c24 <PyInit__codecs_iso2022@@Base+0x1210>
    2bec:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2bf0:	ldr	x10, [x9, #352]
    2bf4:	lsr	x11, x8, #8
    2bf8:	lsl	x9, x11, #4
    2bfc:	ldr	x9, [x10, x9]
    2c00:	cbz	x9, 2c24 <PyInit__codecs_iso2022@@Base+0x1210>
    2c04:	add	x10, x10, x11, lsl #4
    2c08:	ldrb	w12, [x10, #8]
    2c0c:	and	w11, w8, #0xff
    2c10:	subs	w8, w11, w12
    2c14:	b.cc	2c24 <PyInit__codecs_iso2022@@Base+0x1210>  // b.lo, b.ul, b.last
    2c18:	ldrb	w10, [x10, #9]
    2c1c:	cmp	w11, w10
    2c20:	b.ls	2c2c <PyInit__codecs_iso2022@@Base+0x1218>  // b.plast
    2c24:	mov	w0, #0xffff                	// #65535
    2c28:	ret
    2c2c:	ldrsh	w8, [x9, w8, uxtw #1]
    2c30:	and	w9, w8, #0x7fff
    2c34:	cmn	w8, #0x1
    2c38:	csinv	w0, w9, wzr, lt  // lt = tstop
    2c3c:	ret
    2c40:	stp	x29, x30, [sp, #-32]!
    2c44:	str	x19, [sp, #16]
    2c48:	mov	x29, sp
    2c4c:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2c50:	ldrb	w8, [x19, #384]
    2c54:	tbz	w8, #0, 2c68 <PyInit__codecs_iso2022@@Base+0x1254>
    2c58:	mov	w0, wzr
    2c5c:	mov	w8, #0x1                   	// #1
    2c60:	strb	w8, [x19, #384]
    2c64:	b	2cb4 <PyInit__codecs_iso2022@@Base+0x12a0>
    2c68:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2c6c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2c70:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2c74:	add	x0, x0, #0x94d
    2c78:	add	x1, x1, #0x958
    2c7c:	add	x2, x2, #0x188
    2c80:	mov	x3, xzr
    2c84:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2c88:	cbnz	w0, 2cb0 <PyInit__codecs_iso2022@@Base+0x129c>
    2c8c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2c90:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2c94:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2c98:	add	x0, x0, #0x94d
    2c9c:	add	x1, x1, #0x967
    2ca0:	add	x3, x3, #0x190
    2ca4:	mov	x2, xzr
    2ca8:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2cac:	cbz	w0, 2c58 <PyInit__codecs_iso2022@@Base+0x1244>
    2cb0:	mov	w0, #0xffffffff            	// #-1
    2cb4:	ldr	x19, [sp, #16]
    2cb8:	ldp	x29, x30, [sp], #32
    2cbc:	ret
    2cc0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2cc4:	ldrb	w10, [x0]
    2cc8:	ldr	x11, [x8, #400]
    2ccc:	lsl	x8, x10, #4
    2cd0:	ldr	x8, [x11, x8]
    2cd4:	cbz	x8, 2cf8 <PyInit__codecs_iso2022@@Base+0x12e4>
    2cd8:	add	x11, x11, x10, lsl #4
    2cdc:	ldrb	w9, [x0, #1]
    2ce0:	ldrb	w10, [x11, #8]
    2ce4:	cmp	w9, w10
    2ce8:	b.cc	2cf8 <PyInit__codecs_iso2022@@Base+0x12e4>  // b.lo, b.ul, b.last
    2cec:	ldrb	w11, [x11, #9]
    2cf0:	cmp	w9, w11
    2cf4:	b.ls	2d00 <PyInit__codecs_iso2022@@Base+0x12ec>  // b.plast
    2cf8:	mov	w0, #0xffff                	// #65535
    2cfc:	ret
    2d00:	sub	x9, x9, x10
    2d04:	ldrh	w8, [x8, x9, lsl #1]
    2d08:	mov	w9, #0xfffe                	// #65534
    2d0c:	cmp	w8, w9
    2d10:	csinv	w8, w8, wzr, ne  // ne = any
    2d14:	and	w0, w8, #0xffff
    2d18:	ret
    2d1c:	ldr	w8, [x0]
    2d20:	ubfx	x9, x8, #16, #16
    2d24:	cbnz	w9, 2d68 <PyInit__codecs_iso2022@@Base+0x1354>
    2d28:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d2c:	ldr	x10, [x9, #392]
    2d30:	lsr	x11, x8, #8
    2d34:	lsl	x9, x11, #4
    2d38:	ldr	x9, [x10, x9]
    2d3c:	cbz	x9, 2d68 <PyInit__codecs_iso2022@@Base+0x1354>
    2d40:	add	x10, x10, x11, lsl #4
    2d44:	ldrb	w12, [x10, #8]
    2d48:	and	w11, w8, #0xff
    2d4c:	subs	w8, w11, w12
    2d50:	b.cc	2d68 <PyInit__codecs_iso2022@@Base+0x1354>  // b.lo, b.ul, b.last
    2d54:	ldrb	w10, [x10, #9]
    2d58:	cmp	w11, w10
    2d5c:	b.hi	2d68 <PyInit__codecs_iso2022@@Base+0x1354>  // b.pmore
    2d60:	ldrsh	w0, [x9, w8, uxtw #1]
    2d64:	tbz	w0, #31, 2d6c <PyInit__codecs_iso2022@@Base+0x1358>
    2d68:	mov	w0, #0xffff                	// #65535
    2d6c:	ret
    2d70:	mov	w0, #0xffff                	// #65535
    2d74:	ret
    2d78:	mov	w0, #0xffff                	// #65535
    2d7c:	ret
    2d80:	stp	x29, x30, [sp, #-32]!
    2d84:	str	x19, [sp, #16]
    2d88:	mov	x29, sp
    2d8c:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d90:	ldrb	w8, [x19, #408]
    2d94:	tbz	w8, #0, 2da8 <PyInit__codecs_iso2022@@Base+0x1394>
    2d98:	mov	w0, wzr
    2d9c:	mov	w8, #0x1                   	// #1
    2da0:	strb	w8, [x19, #408]
    2da4:	b	2eb4 <PyInit__codecs_iso2022@@Base+0x14a0>
    2da8:	bl	290c <PyInit__codecs_iso2022@@Base+0xef8>
    2dac:	cbnz	w0, 2eb0 <PyInit__codecs_iso2022@@Base+0x149c>
    2db0:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2db4:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2db8:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2dbc:	add	x0, x0, #0x913
    2dc0:	add	x1, x1, #0x974
    2dc4:	add	x2, x2, #0x1a0
    2dc8:	mov	x3, xzr
    2dcc:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2dd0:	cbnz	w0, 2eb0 <PyInit__codecs_iso2022@@Base+0x149c>
    2dd4:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2dd8:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2ddc:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2de0:	add	x0, x0, #0x913
    2de4:	add	x1, x1, #0x987
    2de8:	add	x3, x3, #0x1a8
    2dec:	mov	x2, xzr
    2df0:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2df4:	cbnz	w0, 2eb0 <PyInit__codecs_iso2022@@Base+0x149c>
    2df8:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2dfc:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e00:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e04:	add	x0, x0, #0x913
    2e08:	add	x1, x1, #0x99c
    2e0c:	add	x3, x3, #0x1b0
    2e10:	mov	x2, xzr
    2e14:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2e18:	cbnz	w0, 2eb0 <PyInit__codecs_iso2022@@Base+0x149c>
    2e1c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e20:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e24:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e28:	add	x0, x0, #0x913
    2e2c:	add	x1, x1, #0x9b1
    2e30:	add	x2, x2, #0x1b8
    2e34:	mov	x3, xzr
    2e38:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2e3c:	cbnz	w0, 2eb0 <PyInit__codecs_iso2022@@Base+0x149c>
    2e40:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e44:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e48:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e4c:	add	x0, x0, #0x913
    2e50:	add	x1, x1, #0x9c4
    2e54:	add	x3, x3, #0x1c0
    2e58:	mov	x2, xzr
    2e5c:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2e60:	cbnz	w0, 2eb0 <PyInit__codecs_iso2022@@Base+0x149c>
    2e64:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e68:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e6c:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e70:	add	x0, x0, #0x913
    2e74:	add	x1, x1, #0x9d9
    2e78:	add	x3, x3, #0x1c8
    2e7c:	mov	x2, xzr
    2e80:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2e84:	cbnz	w0, 2eb0 <PyInit__codecs_iso2022@@Base+0x149c>
    2e88:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e8c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e90:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e94:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e98:	add	x0, x0, #0x913
    2e9c:	add	x1, x1, #0x9ee
    2ea0:	add	x2, x2, #0x1d0
    2ea4:	add	x3, x3, #0x1d8
    2ea8:	bl	2820 <PyInit__codecs_iso2022@@Base+0xe0c>
    2eac:	cbz	w0, 2d98 <PyInit__codecs_iso2022@@Base+0x1384>
    2eb0:	mov	w0, #0xffffffff            	// #-1
    2eb4:	ldr	x19, [sp, #16]
    2eb8:	ldp	x29, x30, [sp], #32
    2ebc:	ret
    2ec0:	ldrb	w9, [x0]
    2ec4:	cmp	x9, #0x21
    2ec8:	b.ne	2ee0 <PyInit__codecs_iso2022@@Base+0x14cc>  // b.any
    2ecc:	ldrb	w8, [x0, #1]
    2ed0:	cmp	w8, #0x40
    2ed4:	b.ne	2ee0 <PyInit__codecs_iso2022@@Base+0x14cc>  // b.any
    2ed8:	mov	w8, #0xff3c                	// #65340
    2edc:	b	2ff8 <PyInit__codecs_iso2022@@Base+0x15e4>
    2ee0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2ee4:	ldr	x12, [x8, #360]
    2ee8:	lsl	x10, x9, #4
    2eec:	ldr	x8, [x12, x10]
    2ef0:	cbz	x8, 2f28 <PyInit__codecs_iso2022@@Base+0x1514>
    2ef4:	add	x13, x12, x9, lsl #4
    2ef8:	ldrb	w11, [x0, #1]
    2efc:	ldrb	w12, [x13, #8]
    2f00:	cmp	w11, w12
    2f04:	b.cc	2f28 <PyInit__codecs_iso2022@@Base+0x1514>  // b.lo, b.ul, b.last
    2f08:	ldrb	w13, [x13, #9]
    2f0c:	cmp	w11, w13
    2f10:	b.hi	2f28 <PyInit__codecs_iso2022@@Base+0x1514>  // b.pmore
    2f14:	sub	x11, x11, x12
    2f18:	ldrh	w8, [x8, x11, lsl #1]
    2f1c:	mov	w11, #0xfffe                	// #65534
    2f20:	cmp	w8, w11
    2f24:	b.ne	2ff8 <PyInit__codecs_iso2022@@Base+0x15e4>  // b.any
    2f28:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f2c:	ldr	x12, [x8, #424]
    2f30:	ldr	x8, [x12, x10]
    2f34:	cbz	x8, 2f6c <PyInit__codecs_iso2022@@Base+0x1558>
    2f38:	add	x13, x12, x9, lsl #4
    2f3c:	ldrb	w11, [x0, #1]
    2f40:	ldrb	w12, [x13, #8]
    2f44:	cmp	w11, w12
    2f48:	b.cc	2f6c <PyInit__codecs_iso2022@@Base+0x1558>  // b.lo, b.ul, b.last
    2f4c:	ldrb	w13, [x13, #9]
    2f50:	cmp	w11, w13
    2f54:	b.hi	2f6c <PyInit__codecs_iso2022@@Base+0x1558>  // b.pmore
    2f58:	sub	x11, x11, x12
    2f5c:	ldrh	w8, [x8, x11, lsl #1]
    2f60:	mov	w11, #0xfffe                	// #65534
    2f64:	cmp	w8, w11
    2f68:	b.ne	2ff8 <PyInit__codecs_iso2022@@Base+0x15e4>  // b.any
    2f6c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f70:	ldr	x12, [x8, #448]
    2f74:	ldr	x8, [x12, x10]
    2f78:	cbz	x8, 2fb0 <PyInit__codecs_iso2022@@Base+0x159c>
    2f7c:	add	x13, x12, x9, lsl #4
    2f80:	ldrb	w11, [x0, #1]
    2f84:	ldrb	w12, [x13, #8]
    2f88:	cmp	w11, w12
    2f8c:	b.cc	2fb0 <PyInit__codecs_iso2022@@Base+0x159c>  // b.lo, b.ul, b.last
    2f90:	ldrb	w13, [x13, #9]
    2f94:	cmp	w11, w13
    2f98:	b.hi	2fb0 <PyInit__codecs_iso2022@@Base+0x159c>  // b.pmore
    2f9c:	sub	x11, x11, x12
    2fa0:	ldrh	w8, [x8, x11, lsl #1]
    2fa4:	mov	w11, #0xfffe                	// #65534
    2fa8:	cmp	w8, w11
    2fac:	b.ne	3000 <PyInit__codecs_iso2022@@Base+0x15ec>  // b.any
    2fb0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2fb4:	ldr	x11, [x8, #472]
    2fb8:	ldr	x8, [x11, x10]
    2fbc:	cbz	x8, 2ff4 <PyInit__codecs_iso2022@@Base+0x15e0>
    2fc0:	add	x11, x11, x9, lsl #4
    2fc4:	ldrb	w10, [x0, #1]
    2fc8:	ldrb	w9, [x11, #8]
    2fcc:	cmp	w10, w9
    2fd0:	b.cc	2ff4 <PyInit__codecs_iso2022@@Base+0x15e0>  // b.lo, b.ul, b.last
    2fd4:	ldrb	w11, [x11, #9]
    2fd8:	cmp	w10, w11
    2fdc:	b.hi	2ff4 <PyInit__codecs_iso2022@@Base+0x15e0>  // b.pmore
    2fe0:	sub	x9, x10, x9
    2fe4:	ldr	w8, [x8, x9, lsl #2]
    2fe8:	mov	w9, #0xfffe                	// #65534
    2fec:	cmp	w8, w9
    2ff0:	b.ne	2ff8 <PyInit__codecs_iso2022@@Base+0x15e4>  // b.any
    2ff4:	mov	w8, #0xffff                	// #65535
    2ff8:	mov	w0, w8
    2ffc:	ret
    3000:	orr	w8, w8, #0x20000
    3004:	b	2ff8 <PyInit__codecs_iso2022@@Base+0x15e4>
    3008:	stp	x29, x30, [sp, #-32]!
    300c:	stp	x20, x19, [sp, #16]
    3010:	mov	x29, sp
    3014:	ldr	x20, [x1]
    3018:	mov	x2, xzr
    301c:	mov	x19, x1
    3020:	bl	3170 <PyInit__codecs_iso2022@@Base+0x175c>
    3024:	cmp	x20, #0x2
    3028:	b.eq	3048 <PyInit__codecs_iso2022@@Base+0x1634>  // b.none
    302c:	cmp	x20, #0x1
    3030:	b.ne	3058 <PyInit__codecs_iso2022@@Base+0x1644>  // b.any
    3034:	mov	w8, #0xfffe                	// #65534
    3038:	cmp	w8, w0, uxth
    303c:	mov	w8, #0xfffffffe            	// #-2
    3040:	cinc	w0, w8, ne  // ne = any
    3044:	b	305c <PyInit__codecs_iso2022@@Base+0x1648>
    3048:	ldr	x8, [x19]
    304c:	cmp	x8, #0x2
    3050:	csinv	w0, w0, wzr, eq  // eq = none
    3054:	b	305c <PyInit__codecs_iso2022@@Base+0x1648>
    3058:	mov	w0, #0xffff                	// #65535
    305c:	ldp	x20, x19, [sp, #16]
    3060:	ldp	x29, x30, [sp], #32
    3064:	ret
    3068:	stp	x29, x30, [sp, #-16]!
    306c:	mov	x29, sp
    3070:	mov	x2, xzr
    3074:	bl	3170 <PyInit__codecs_iso2022@@Base+0x175c>
    3078:	sxth	w9, w0
    307c:	and	w8, w0, #0xffff
    3080:	cmn	w9, #0x1
    3084:	mov	w9, #0xfffd                	// #65533
    3088:	ccmp	w8, w9, #0x2, le
    308c:	csinv	w0, w0, wzr, hi  // hi = pmore
    3090:	ldp	x29, x30, [sp], #16
    3094:	ret
    3098:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    309c:	ldrb	w9, [x0]
    30a0:	ldr	x12, [x8, #432]
    30a4:	lsl	x10, x9, #4
    30a8:	ldr	x8, [x12, x10]
    30ac:	cbz	x8, 30e4 <PyInit__codecs_iso2022@@Base+0x16d0>
    30b0:	add	x13, x12, x9, lsl #4
    30b4:	ldrb	w11, [x0, #1]
    30b8:	ldrb	w12, [x13, #8]
    30bc:	cmp	w11, w12
    30c0:	b.cc	30e4 <PyInit__codecs_iso2022@@Base+0x16d0>  // b.lo, b.ul, b.last
    30c4:	ldrb	w13, [x13, #9]
    30c8:	cmp	w11, w13
    30cc:	b.hi	30e4 <PyInit__codecs_iso2022@@Base+0x16d0>  // b.pmore
    30d0:	sub	x11, x11, x12
    30d4:	ldrh	w8, [x8, x11, lsl #1]
    30d8:	mov	w11, #0xfffe                	// #65534
    30dc:	cmp	w8, w11
    30e0:	b.ne	312c <PyInit__codecs_iso2022@@Base+0x1718>  // b.any
    30e4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    30e8:	ldr	x11, [x8, #456]
    30ec:	ldr	x8, [x11, x10]
    30f0:	cbz	x8, 3128 <PyInit__codecs_iso2022@@Base+0x1714>
    30f4:	add	x11, x11, x9, lsl #4
    30f8:	ldrb	w10, [x0, #1]
    30fc:	ldrb	w9, [x11, #8]
    3100:	cmp	w10, w9
    3104:	b.cc	3128 <PyInit__codecs_iso2022@@Base+0x1714>  // b.lo, b.ul, b.last
    3108:	ldrb	w11, [x11, #9]
    310c:	cmp	w10, w11
    3110:	b.hi	3128 <PyInit__codecs_iso2022@@Base+0x1714>  // b.pmore
    3114:	sub	x9, x10, x9
    3118:	ldrh	w8, [x8, x9, lsl #1]
    311c:	mov	w9, #0xfffe                	// #65534
    3120:	cmp	w8, w9
    3124:	b.ne	3134 <PyInit__codecs_iso2022@@Base+0x1720>  // b.any
    3128:	mov	w8, #0xffff                	// #65535
    312c:	mov	w0, w8
    3130:	ret
    3134:	orr	w8, w8, #0x20000
    3138:	b	312c <PyInit__codecs_iso2022@@Base+0x1718>
    313c:	stp	x29, x30, [sp, #-16]!
    3140:	mov	x29, sp
    3144:	mov	x2, xzr
    3148:	bl	3170 <PyInit__codecs_iso2022@@Base+0x175c>
    314c:	mov	w8, #0xfffd                	// #65533
    3150:	cmp	w8, w0, uxth
    3154:	b.cc	3168 <PyInit__codecs_iso2022@@Base+0x1754>  // b.lo, b.ul, b.last
    3158:	sxth	w8, w0
    315c:	and	w9, w0, #0x7fff
    3160:	cmp	w8, #0x0
    3164:	csinv	w0, w9, wzr, lt  // lt = tstop
    3168:	ldp	x29, x30, [sp], #16
    316c:	ret
    3170:	stp	x29, x30, [sp, #-48]!
    3174:	str	x21, [sp, #16]
    3178:	stp	x20, x19, [sp, #32]
    317c:	mov	x29, sp
    3180:	ldr	x8, [x1]
    3184:	mov	x19, x1
    3188:	cmp	x8, #0x2
    318c:	b.eq	31b0 <PyInit__codecs_iso2022@@Base+0x179c>  // b.none
    3190:	cmp	x8, #0x1
    3194:	b.eq	31fc <PyInit__codecs_iso2022@@Base+0x17e8>  // b.none
    3198:	cmn	x8, #0x1
    319c:	b.ne	330c <PyInit__codecs_iso2022@@Base+0x18f8>  // b.any
    31a0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    31a4:	ldr	w20, [x0]
    31a8:	ldr	x21, [x8, #464]
    31ac:	b	31d4 <PyInit__codecs_iso2022@@Base+0x17c0>
    31b0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    31b4:	ldp	w20, w1, [x0]
    31b8:	ldr	x21, [x8, #464]
    31bc:	mov	w0, w20
    31c0:	mov	x2, x21
    31c4:	bl	33d0 <PyInit__codecs_iso2022@@Base+0x19bc>
    31c8:	mov	w8, #0xfffd                	// #65533
    31cc:	cmp	w8, w0, uxth
    31d0:	b.ne	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.any
    31d4:	mov	w8, #0x1                   	// #1
    31d8:	mov	w0, w20
    31dc:	mov	w1, wzr
    31e0:	mov	x2, x21
    31e4:	str	x8, [x19]
    31e8:	bl	33d0 <PyInit__codecs_iso2022@@Base+0x19bc>
    31ec:	mov	w8, #0xfffd                	// #65533
    31f0:	cmp	w8, w0, uxth
    31f4:	csinv	w0, w0, wzr, ne  // ne = any
    31f8:	b	3310 <PyInit__codecs_iso2022@@Base+0x18fc>
    31fc:	ldr	w8, [x0]
    3200:	cmp	w8, #0x10, lsl #12
    3204:	b.cc	3278 <PyInit__codecs_iso2022@@Base+0x1864>  // b.lo, b.ul, b.last
    3208:	and	w9, w8, #0xffff0000
    320c:	cmp	w9, #0x20, lsl #12
    3210:	b.ne	330c <PyInit__codecs_iso2022@@Base+0x18f8>  // b.any
    3214:	cmp	x2, #0x7d0
    3218:	b.ne	322c <PyInit__codecs_iso2022@@Base+0x1818>  // b.any
    321c:	mov	w9, #0xb9f                 	// #2975
    3220:	movk	w9, #0x2, lsl #16
    3224:	cmp	w8, w9
    3228:	b.eq	330c <PyInit__codecs_iso2022@@Base+0x18f8>  // b.none
    322c:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3230:	ldr	x10, [x9, #440]
    3234:	ubfx	x11, x8, #8, #8
    3238:	lsl	x9, x11, #4
    323c:	ldr	x9, [x10, x9]
    3240:	cbz	x9, 330c <PyInit__codecs_iso2022@@Base+0x18f8>
    3244:	add	x10, x10, x11, lsl #4
    3248:	ldrb	w12, [x10, #8]
    324c:	and	w11, w8, #0xff
    3250:	subs	w8, w11, w12
    3254:	b.cc	330c <PyInit__codecs_iso2022@@Base+0x18f8>  // b.lo, b.ul, b.last
    3258:	ldrb	w10, [x10, #9]
    325c:	cmp	w11, w10
    3260:	b.hi	330c <PyInit__codecs_iso2022@@Base+0x18f8>  // b.pmore
    3264:	ldrh	w0, [x9, w8, uxtw #1]
    3268:	mov	w8, #0xffff                	// #65535
    326c:	cmp	w0, w8
    3270:	b.ne	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.any
    3274:	b	330c <PyInit__codecs_iso2022@@Base+0x18f8>
    3278:	cmp	x2, #0x7d0
    327c:	b.eq	3320 <PyInit__codecs_iso2022@@Base+0x190c>  // b.none
    3280:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3284:	ldr	x12, [x9, #416]
    3288:	lsr	x9, x8, #8
    328c:	lsl	x10, x9, #4
    3290:	ldr	x11, [x12, x10]
    3294:	cbz	x11, 32d4 <PyInit__codecs_iso2022@@Base+0x18c0>
    3298:	add	x13, x12, x9, lsl #4
    329c:	ldrb	w12, [x13, #8]
    32a0:	and	w14, w8, #0xff
    32a4:	subs	w12, w14, w12
    32a8:	b.cc	32d4 <PyInit__codecs_iso2022@@Base+0x18c0>  // b.lo, b.ul, b.last
    32ac:	ldrb	w13, [x13, #9]
    32b0:	cmp	w14, w13
    32b4:	b.hi	32d4 <PyInit__codecs_iso2022@@Base+0x18c0>  // b.pmore
    32b8:	ldrh	w0, [x11, w12, uxtw #1]
    32bc:	mov	w11, #0xfffe                	// #65534
    32c0:	cmp	w0, w11
    32c4:	b.eq	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.none
    32c8:	mov	w11, #0xffff                	// #65535
    32cc:	cmp	w0, w11
    32d0:	b.ne	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.any
    32d4:	adrp	x11, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    32d8:	ldr	x11, [x11, #352]
    32dc:	ldr	x10, [x11, x10]
    32e0:	cbz	x10, 330c <PyInit__codecs_iso2022@@Base+0x18f8>
    32e4:	add	x9, x11, x9, lsl #4
    32e8:	ldrb	w12, [x9, #8]
    32ec:	and	w11, w8, #0xff
    32f0:	subs	w8, w11, w12
    32f4:	b.cc	330c <PyInit__codecs_iso2022@@Base+0x18f8>  // b.lo, b.ul, b.last
    32f8:	ldrb	w9, [x9, #9]
    32fc:	cmp	w11, w9
    3300:	b.hi	330c <PyInit__codecs_iso2022@@Base+0x18f8>  // b.pmore
    3304:	ldrsh	w0, [x10, w8, uxtw #1]
    3308:	tbz	w0, #31, 3310 <PyInit__codecs_iso2022@@Base+0x18fc>
    330c:	mov	w0, #0xffff                	// #65535
    3310:	ldp	x20, x19, [sp, #32]
    3314:	ldr	x21, [sp, #16]
    3318:	ldp	x29, x30, [sp], #48
    331c:	ret
    3320:	mov	w9, #0x5c5a                	// #23642
    3324:	cmp	w8, w9
    3328:	mov	w0, #0xffff                	// #65535
    332c:	b.le	335c <PyInit__codecs_iso2022@@Base+0x1948>
    3330:	mov	w9, #0x7e6a                	// #32362
    3334:	cmp	w8, w9
    3338:	b.gt	3388 <PyInit__codecs_iso2022@@Base+0x1974>
    333c:	mov	w9, #0x5c5b                	// #23643
    3340:	cmp	w8, w9
    3344:	b.eq	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.none
    3348:	mov	w9, #0x5e77                	// #24183
    334c:	cmp	w8, w9
    3350:	b.eq	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.none
    3354:	mov	w9, #0x7626                	// #30246
    3358:	b	33c4 <PyInit__codecs_iso2022@@Base+0x19b0>
    335c:	mov	w9, #0x541d                	// #21533
    3360:	cmp	w8, w9
    3364:	b.le	33b4 <PyInit__codecs_iso2022@@Base+0x19a0>
    3368:	mov	w9, #0x541e                	// #21534
    336c:	cmp	w8, w9
    3370:	b.eq	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.none
    3374:	mov	w9, #0x5653                	// #22099
    3378:	cmp	w8, w9
    337c:	b.eq	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.none
    3380:	mov	w9, #0x59f8                	// #23032
    3384:	b	33c4 <PyInit__codecs_iso2022@@Base+0x19b0>
    3388:	mov	w9, #0x7e6b                	// #32363
    338c:	cmp	w8, w9
    3390:	b.eq	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.none
    3394:	mov	w9, #0x9b1c                	// #39708
    3398:	cmp	w8, w9
    339c:	b.eq	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.none
    33a0:	mov	w9, #0x9b1d                	// #39709
    33a4:	cmp	w8, w9
    33a8:	b.ne	3280 <PyInit__codecs_iso2022@@Base+0x186c>  // b.any
    33ac:	mov	w0, #0xfd3b                	// #64827
    33b0:	b	3310 <PyInit__codecs_iso2022@@Base+0x18fc>
    33b4:	mov	w9, #0x4ff1                	// #20465
    33b8:	cmp	w8, w9
    33bc:	b.eq	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.none
    33c0:	mov	w9, #0x525d                	// #21085
    33c4:	cmp	w8, w9
    33c8:	b.eq	3310 <PyInit__codecs_iso2022@@Base+0x18fc>  // b.none
    33cc:	b	3280 <PyInit__codecs_iso2022@@Base+0x186c>
    33d0:	mov	w9, wzr
    33d4:	mov	w8, #0x17                  	// #23
    33d8:	bfi	w1, w0, #16, #16
    33dc:	mov	w10, #0x2e                  	// #46
    33e0:	sbfiz	x11, x8, #3, #32
    33e4:	ldr	w11, [x2, x11]
    33e8:	cmp	w1, w11
    33ec:	b.cs	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.hs, b.nlast
    33f0:	cmp	w10, w8
    33f4:	mov	w11, w8
    33f8:	mov	w8, w10
    33fc:	b.ne	341c <PyInit__codecs_iso2022@@Base+0x1a08>  // b.any
    3400:	b	3430 <PyInit__codecs_iso2022@@Base+0x1a1c>
    3404:	cmp	w9, w8
    3408:	b.eq	3430 <PyInit__codecs_iso2022@@Base+0x1a1c>  // b.none
    340c:	cmp	w1, w11
    3410:	mov	w9, w8
    3414:	mov	w11, w10
    3418:	b.ls	3430 <PyInit__codecs_iso2022@@Base+0x1a1c>  // b.plast
    341c:	add	w8, w11, w9
    3420:	cmp	w9, w11
    3424:	asr	w8, w8, #1
    3428:	mov	w10, w11
    342c:	b.ne	33e0 <PyInit__codecs_iso2022@@Base+0x19cc>  // b.any
    3430:	sbfiz	x9, x8, #3, #32
    3434:	ldr	w9, [x2, x9]
    3438:	cmp	w1, w9
    343c:	b.ne	3450 <PyInit__codecs_iso2022@@Base+0x1a3c>  // b.any
    3440:	sxtw	x8, w8
    3444:	add	x8, x2, x8, lsl #3
    3448:	ldrh	w0, [x8, #4]
    344c:	ret
    3450:	mov	w0, #0xfffd                	// #65533
    3454:	ret
    3458:	ldrb	w9, [x0]
    345c:	cmp	w9, #0x4e
    3460:	b.gt	348c <PyInit__codecs_iso2022@@Base+0x1a78>
    3464:	cmp	w9, #0x21
    3468:	b.eq	34b8 <PyInit__codecs_iso2022@@Base+0x1aa4>  // b.none
    346c:	cmp	w9, #0x2e
    3470:	b.eq	34cc <PyInit__codecs_iso2022@@Base+0x1ab8>  // b.none
    3474:	cmp	w9, #0x2f
    3478:	b.ne	3504 <PyInit__codecs_iso2022@@Base+0x1af0>  // b.any
    347c:	ldrb	w8, [x0, #1]
    3480:	cmp	w8, #0x7e
    3484:	b.ne	3504 <PyInit__codecs_iso2022@@Base+0x1af0>  // b.any
    3488:	b	3618 <PyInit__codecs_iso2022@@Base+0x1c04>
    348c:	cmp	w9, #0x4f
    3490:	b.eq	34dc <PyInit__codecs_iso2022@@Base+0x1ac8>  // b.none
    3494:	cmp	w9, #0x74
    3498:	b.eq	34f8 <PyInit__codecs_iso2022@@Base+0x1ae4>  // b.none
    349c:	cmp	w9, #0x7e
    34a0:	b.ne	3504 <PyInit__codecs_iso2022@@Base+0x1af0>  // b.any
    34a4:	ldrb	w8, [x0, #1]
    34a8:	sub	w8, w8, #0x7a
    34ac:	cmp	w8, #0x5
    34b0:	b.cs	3504 <PyInit__codecs_iso2022@@Base+0x1af0>  // b.hs, b.nlast
    34b4:	b	3618 <PyInit__codecs_iso2022@@Base+0x1c04>
    34b8:	ldrb	w8, [x0, #1]
    34bc:	cmp	w8, #0x40
    34c0:	b.ne	3504 <PyInit__codecs_iso2022@@Base+0x1af0>  // b.any
    34c4:	mov	w8, #0xff3c                	// #65340
    34c8:	b	361c <PyInit__codecs_iso2022@@Base+0x1c08>
    34cc:	ldrb	w8, [x0, #1]
    34d0:	cmp	w8, #0x21
    34d4:	b.ne	3504 <PyInit__codecs_iso2022@@Base+0x1af0>  // b.any
    34d8:	b	3618 <PyInit__codecs_iso2022@@Base+0x1c04>
    34dc:	ldrb	w10, [x0, #1]
    34e0:	mov	w8, #0xffff                	// #65535
    34e4:	cmp	w10, #0x54
    34e8:	b.eq	361c <PyInit__codecs_iso2022@@Base+0x1c08>  // b.none
    34ec:	cmp	w10, #0x7e
    34f0:	b.eq	361c <PyInit__codecs_iso2022@@Base+0x1c08>  // b.none
    34f4:	b	3504 <PyInit__codecs_iso2022@@Base+0x1af0>
    34f8:	ldrb	w8, [x0, #1]
    34fc:	cmp	w8, #0x27
    3500:	b.eq	3618 <PyInit__codecs_iso2022@@Base+0x1c04>  // b.none
    3504:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3508:	ldr	x12, [x8, #360]
    350c:	lsl	x10, x9, #4
    3510:	ldr	x8, [x12, x10]
    3514:	cbz	x8, 354c <PyInit__codecs_iso2022@@Base+0x1b38>
    3518:	add	x13, x12, x9, lsl #4
    351c:	ldrb	w11, [x0, #1]
    3520:	ldrb	w12, [x13, #8]
    3524:	cmp	w11, w12
    3528:	b.cc	354c <PyInit__codecs_iso2022@@Base+0x1b38>  // b.lo, b.ul, b.last
    352c:	ldrb	w13, [x13, #9]
    3530:	cmp	w11, w13
    3534:	b.hi	354c <PyInit__codecs_iso2022@@Base+0x1b38>  // b.pmore
    3538:	sub	x11, x11, x12
    353c:	ldrh	w8, [x8, x11, lsl #1]
    3540:	mov	w11, #0xfffe                	// #65534
    3544:	cmp	w8, w11
    3548:	b.ne	361c <PyInit__codecs_iso2022@@Base+0x1c08>  // b.any
    354c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3550:	ldr	x12, [x8, #424]
    3554:	ldr	x8, [x12, x10]
    3558:	cbz	x8, 3590 <PyInit__codecs_iso2022@@Base+0x1b7c>
    355c:	add	x13, x12, x9, lsl #4
    3560:	ldrb	w11, [x0, #1]
    3564:	ldrb	w12, [x13, #8]
    3568:	cmp	w11, w12
    356c:	b.cc	3590 <PyInit__codecs_iso2022@@Base+0x1b7c>  // b.lo, b.ul, b.last
    3570:	ldrb	w13, [x13, #9]
    3574:	cmp	w11, w13
    3578:	b.hi	3590 <PyInit__codecs_iso2022@@Base+0x1b7c>  // b.pmore
    357c:	sub	x11, x11, x12
    3580:	ldrh	w8, [x8, x11, lsl #1]
    3584:	mov	w11, #0xfffe                	// #65534
    3588:	cmp	w8, w11
    358c:	b.ne	361c <PyInit__codecs_iso2022@@Base+0x1c08>  // b.any
    3590:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3594:	ldr	x12, [x8, #448]
    3598:	ldr	x8, [x12, x10]
    359c:	cbz	x8, 35d4 <PyInit__codecs_iso2022@@Base+0x1bc0>
    35a0:	add	x13, x12, x9, lsl #4
    35a4:	ldrb	w11, [x0, #1]
    35a8:	ldrb	w12, [x13, #8]
    35ac:	cmp	w11, w12
    35b0:	b.cc	35d4 <PyInit__codecs_iso2022@@Base+0x1bc0>  // b.lo, b.ul, b.last
    35b4:	ldrb	w13, [x13, #9]
    35b8:	cmp	w11, w13
    35bc:	b.hi	35d4 <PyInit__codecs_iso2022@@Base+0x1bc0>  // b.pmore
    35c0:	sub	x11, x11, x12
    35c4:	ldrh	w8, [x8, x11, lsl #1]
    35c8:	mov	w11, #0xfffe                	// #65534
    35cc:	cmp	w8, w11
    35d0:	b.ne	3624 <PyInit__codecs_iso2022@@Base+0x1c10>  // b.any
    35d4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    35d8:	ldr	x11, [x8, #472]
    35dc:	ldr	x8, [x11, x10]
    35e0:	cbz	x8, 3618 <PyInit__codecs_iso2022@@Base+0x1c04>
    35e4:	add	x11, x11, x9, lsl #4
    35e8:	ldrb	w10, [x0, #1]
    35ec:	ldrb	w9, [x11, #8]
    35f0:	cmp	w10, w9
    35f4:	b.cc	3618 <PyInit__codecs_iso2022@@Base+0x1c04>  // b.lo, b.ul, b.last
    35f8:	ldrb	w11, [x11, #9]
    35fc:	cmp	w10, w11
    3600:	b.hi	3618 <PyInit__codecs_iso2022@@Base+0x1c04>  // b.pmore
    3604:	sub	x9, x10, x9
    3608:	ldr	w8, [x8, x9, lsl #2]
    360c:	mov	w9, #0xfffe                	// #65534
    3610:	cmp	w8, w9
    3614:	b.ne	361c <PyInit__codecs_iso2022@@Base+0x1c08>  // b.any
    3618:	mov	w8, #0xffff                	// #65535
    361c:	mov	w0, w8
    3620:	ret
    3624:	orr	w8, w8, #0x20000
    3628:	b	361c <PyInit__codecs_iso2022@@Base+0x1c08>
    362c:	stp	x29, x30, [sp, #-32]!
    3630:	stp	x20, x19, [sp, #16]
    3634:	mov	x29, sp
    3638:	ldr	x20, [x1]
    363c:	mov	w2, #0x7d0                 	// #2000
    3640:	mov	x19, x1
    3644:	bl	3170 <PyInit__codecs_iso2022@@Base+0x175c>
    3648:	cmp	x20, #0x2
    364c:	b.eq	366c <PyInit__codecs_iso2022@@Base+0x1c58>  // b.none
    3650:	cmp	x20, #0x1
    3654:	b.ne	367c <PyInit__codecs_iso2022@@Base+0x1c68>  // b.any
    3658:	mov	w8, #0xfffe                	// #65534
    365c:	cmp	w8, w0, uxth
    3660:	mov	w8, #0xfffffffe            	// #-2
    3664:	cinc	w0, w8, ne  // ne = any
    3668:	b	3680 <PyInit__codecs_iso2022@@Base+0x1c6c>
    366c:	ldr	x8, [x19]
    3670:	cmp	x8, #0x2
    3674:	csinv	w0, w0, wzr, eq  // eq = none
    3678:	b	3680 <PyInit__codecs_iso2022@@Base+0x1c6c>
    367c:	mov	w0, #0xffff                	// #65535
    3680:	ldp	x20, x19, [sp, #16]
    3684:	ldp	x29, x30, [sp], #32
    3688:	ret
    368c:	stp	x29, x30, [sp, #-16]!
    3690:	mov	x29, sp
    3694:	mov	w2, #0x7d0                 	// #2000
    3698:	bl	3170 <PyInit__codecs_iso2022@@Base+0x175c>
    369c:	sxth	w9, w0
    36a0:	and	w8, w0, #0xffff
    36a4:	cmn	w9, #0x1
    36a8:	mov	w9, #0xfffd                	// #65533
    36ac:	ccmp	w8, w9, #0x2, le
    36b0:	csinv	w0, w0, wzr, hi  // hi = pmore
    36b4:	ldp	x29, x30, [sp], #16
    36b8:	ret
    36bc:	ldrb	w9, [x0]
    36c0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    36c4:	ldr	x12, [x8, #432]
    36c8:	lsl	x10, x9, #4
    36cc:	ldr	x8, [x12, x10]
    36d0:	cbz	x8, 3708 <PyInit__codecs_iso2022@@Base+0x1cf4>
    36d4:	add	x13, x12, x9, lsl #4
    36d8:	ldrb	w11, [x0, #1]
    36dc:	ldrb	w12, [x13, #8]
    36e0:	cmp	w11, w12
    36e4:	b.cc	3708 <PyInit__codecs_iso2022@@Base+0x1cf4>  // b.lo, b.ul, b.last
    36e8:	ldrb	w13, [x13, #9]
    36ec:	cmp	w11, w13
    36f0:	b.hi	3708 <PyInit__codecs_iso2022@@Base+0x1cf4>  // b.pmore
    36f4:	sub	x11, x11, x12
    36f8:	ldrh	w8, [x8, x11, lsl #1]
    36fc:	mov	w11, #0xfffe                	// #65534
    3700:	cmp	w8, w11
    3704:	b.ne	3750 <PyInit__codecs_iso2022@@Base+0x1d3c>  // b.any
    3708:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    370c:	ldr	x11, [x8, #456]
    3710:	ldr	x8, [x11, x10]
    3714:	cbz	x8, 374c <PyInit__codecs_iso2022@@Base+0x1d38>
    3718:	add	x11, x11, x9, lsl #4
    371c:	ldrb	w10, [x0, #1]
    3720:	ldrb	w9, [x11, #8]
    3724:	cmp	w10, w9
    3728:	b.cc	374c <PyInit__codecs_iso2022@@Base+0x1d38>  // b.lo, b.ul, b.last
    372c:	ldrb	w11, [x11, #9]
    3730:	cmp	w10, w11
    3734:	b.hi	374c <PyInit__codecs_iso2022@@Base+0x1d38>  // b.pmore
    3738:	sub	x9, x10, x9
    373c:	ldrh	w8, [x8, x9, lsl #1]
    3740:	mov	w9, #0xfffe                	// #65534
    3744:	cmp	w8, w9
    3748:	b.ne	3758 <PyInit__codecs_iso2022@@Base+0x1d44>  // b.any
    374c:	mov	w8, #0xffff                	// #65535
    3750:	mov	w0, w8
    3754:	ret
    3758:	orr	w8, w8, #0x20000
    375c:	b	3750 <PyInit__codecs_iso2022@@Base+0x1d3c>
    3760:	stp	x29, x30, [sp, #-16]!
    3764:	mov	x29, sp
    3768:	mov	w2, #0x7d0                 	// #2000
    376c:	bl	3170 <PyInit__codecs_iso2022@@Base+0x175c>
    3770:	mov	w8, #0xfffd                	// #65533
    3774:	cmp	w8, w0, uxth
    3778:	b.cc	378c <PyInit__codecs_iso2022@@Base+0x1d78>  // b.lo, b.ul, b.last
    377c:	sxth	w8, w0
    3780:	and	w9, w0, #0x7fff
    3784:	cmp	w8, #0x0
    3788:	csinv	w0, w9, wzr, lt  // lt = tstop
    378c:	ldp	x29, x30, [sp], #16
    3790:	ret
    3794:	ldrb	w8, [x0]
    3798:	mov	w9, #0xfec0                	// #65216
    379c:	eor	w10, w8, #0x80
    37a0:	sub	w8, w8, #0x21
    37a4:	add	w9, w10, w9
    37a8:	cmp	w8, #0x3f
    37ac:	mov	w8, #0xffff                	// #65535
    37b0:	csel	w0, w9, w8, cc  // cc = lo, ul, last
    37b4:	ret
    37b8:	ldr	w8, [x0]
    37bc:	mov	w9, #0xffff009f            	// #-65377
    37c0:	add	w9, w8, w9
    37c4:	add	w8, w8, #0xc0
    37c8:	cmp	w9, #0x3f
    37cc:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
    37d0:	ret

Disassembly of section .fini:

00000000000037d4 <.fini>:
    37d4:	stp	x29, x30, [sp, #-16]!
    37d8:	mov	x29, sp
    37dc:	ldp	x29, x30, [sp], #16
    37e0:	ret
