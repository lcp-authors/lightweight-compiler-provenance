
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//intdiv.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000818 <.init>:
 818:	stp	x29, x30, [sp, #-16]!
 81c:	mov	x29, sp
 820:	bl	920 <fprintf@plt+0x10>
 824:	ldp	x29, x30, [sp], #16
 828:	ret

Disassembly of section .plt:

0000000000000830 <exit@plt-0x20>:
 830:	stp	x16, x30, [sp, #-16]!
 834:	adrp	x16, 11000 <dl_load@@Base+0x1060c>
 838:	ldr	x17, [x16, #4088]
 83c:	add	x16, x16, #0xff8
 840:	br	x17
 844:	nop
 848:	nop
 84c:	nop

0000000000000850 <exit@plt>:
 850:	adrp	x16, 12000 <exit@GLIBC_2.17>
 854:	ldr	x17, [x16]
 858:	add	x16, x16, #0x0
 85c:	br	x17

0000000000000860 <__gmpz_tdiv_qr@plt>:
 860:	adrp	x16, 12000 <exit@GLIBC_2.17>
 864:	ldr	x17, [x16, #8]
 868:	add	x16, x16, #0x8
 86c:	br	x17

0000000000000870 <__cxa_finalize@plt>:
 870:	adrp	x16, 12000 <exit@GLIBC_2.17>
 874:	ldr	x17, [x16, #16]
 878:	add	x16, x16, #0x10
 87c:	br	x17

0000000000000880 <mpfr_get_z@plt>:
 880:	adrp	x16, 12000 <exit@GLIBC_2.17>
 884:	ldr	x17, [x16, #24]
 888:	add	x16, x16, #0x18
 88c:	br	x17

0000000000000890 <__gmpz_set_d@plt>:
 890:	adrp	x16, 12000 <exit@GLIBC_2.17>
 894:	ldr	x17, [x16, #32]
 898:	add	x16, x16, #0x20
 89c:	br	x17

00000000000008a0 <__gmon_start__@plt>:
 8a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #40]
 8a8:	add	x16, x16, #0x28
 8ac:	br	x17

00000000000008b0 <__gmpz_clear@plt>:
 8b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #48]
 8b8:	add	x16, x16, #0x30
 8bc:	br	x17

00000000000008c0 <fwrite@plt>:
 8c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #56]
 8c8:	add	x16, x16, #0x38
 8cc:	br	x17

00000000000008d0 <dcgettext@plt>:
 8d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #64]
 8d8:	add	x16, x16, #0x40
 8dc:	br	x17

00000000000008e0 <fmod@plt>:
 8e0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #72]
 8e8:	add	x16, x16, #0x48
 8ec:	br	x17

00000000000008f0 <__gmpz_init@plt>:
 8f0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #80]
 8f8:	add	x16, x16, #0x50
 8fc:	br	x17

0000000000000900 <mpfr_number_p@plt>:
 900:	adrp	x16, 12000 <exit@GLIBC_2.17>
 904:	ldr	x17, [x16, #88]
 908:	add	x16, x16, #0x58
 90c:	br	x17

0000000000000910 <fprintf@plt>:
 910:	adrp	x16, 12000 <exit@GLIBC_2.17>
 914:	ldr	x17, [x16, #96]
 918:	add	x16, x16, #0x60
 91c:	br	x17

Disassembly of section .text:

0000000000000920 <dl_load@@Base-0xd4>:
     920:	adrp	x0, 11000 <dl_load@@Base+0x1060c>
     924:	ldr	x0, [x0, #4056]
     928:	cbz	x0, 930 <fprintf@plt+0x20>
     92c:	b	8a0 <__gmon_start__@plt>
     930:	ret
     934:	nop
     938:	adrp	x0, 12000 <dl_load@@Base+0x1160c>
     93c:	add	x0, x0, #0xa0
     940:	adrp	x1, 12000 <dl_load@@Base+0x1160c>
     944:	add	x1, x1, #0xa0
     948:	cmp	x1, x0
     94c:	b.eq	964 <fprintf@plt+0x54>  // b.none
     950:	adrp	x1, 11000 <dl_load@@Base+0x1060c>
     954:	ldr	x1, [x1, #4032]
     958:	cbz	x1, 964 <fprintf@plt+0x54>
     95c:	mov	x16, x1
     960:	br	x16
     964:	ret
     968:	adrp	x0, 12000 <dl_load@@Base+0x1160c>
     96c:	add	x0, x0, #0xa0
     970:	adrp	x1, 12000 <dl_load@@Base+0x1160c>
     974:	add	x1, x1, #0xa0
     978:	sub	x1, x1, x0
     97c:	lsr	x2, x1, #63
     980:	add	x1, x2, x1, asr #3
     984:	cmp	xzr, x1, asr #1
     988:	asr	x1, x1, #1
     98c:	b.eq	9a4 <fprintf@plt+0x94>  // b.none
     990:	adrp	x2, 11000 <dl_load@@Base+0x1060c>
     994:	ldr	x2, [x2, #4064]
     998:	cbz	x2, 9a4 <fprintf@plt+0x94>
     99c:	mov	x16, x2
     9a0:	br	x16
     9a4:	ret
     9a8:	stp	x29, x30, [sp, #-32]!
     9ac:	mov	x29, sp
     9b0:	str	x19, [sp, #16]
     9b4:	adrp	x19, 12000 <dl_load@@Base+0x1160c>
     9b8:	ldrb	w0, [x19, #160]
     9bc:	cbnz	w0, 9e4 <fprintf@plt+0xd4>
     9c0:	adrp	x0, 11000 <dl_load@@Base+0x1060c>
     9c4:	ldr	x0, [x0, #4040]
     9c8:	cbz	x0, 9d8 <fprintf@plt+0xc8>
     9cc:	adrp	x0, 12000 <dl_load@@Base+0x1160c>
     9d0:	ldr	x0, [x0, #104]
     9d4:	bl	870 <__cxa_finalize@plt>
     9d8:	bl	938 <fprintf@plt+0x28>
     9dc:	mov	w0, #0x1                   	// #1
     9e0:	strb	w0, [x19, #160]
     9e4:	ldr	x19, [sp, #16]
     9e8:	ldp	x29, x30, [sp], #32
     9ec:	ret
     9f0:	b	968 <fprintf@plt+0x58>

00000000000009f4 <dl_load@@Base>:
     9f4:	stp	x29, x30, [sp, #-48]!
     9f8:	str	x21, [sp, #16]
     9fc:	stp	x20, x19, [sp, #32]
     a00:	adrp	x20, 12000 <dl_load@@Base+0x1160c>
     a04:	adrp	x21, 12000 <dl_load@@Base+0x1160c>
     a08:	str	x0, [x20, #168]
     a0c:	str	x1, [x21, #176]
     a10:	ldr	w8, [x0]
     a14:	mov	x29, sp
     a18:	cmp	w8, #0x2
     a1c:	b.ne	aac <dl_load@@Base+0xb8>  // b.any
     a20:	ldr	w8, [x0, #4]
     a24:	tbnz	w8, #31, aac <dl_load@@Base+0xb8>
     a28:	adrp	x19, 12000 <dl_load@@Base+0x1160c>
     a2c:	ldr	x8, [x19, #112]
     a30:	cbz	x8, a58 <dl_load@@Base+0x64>
     a34:	ldr	x9, [x0, #48]
     a38:	adrp	x8, 1000 <dl_load@@Base+0x60c>
     a3c:	add	x8, x8, #0x1c4
     a40:	adrp	x2, 12000 <dl_load@@Base+0x1160c>
     a44:	add	x2, x2, #0x70
     a48:	mov	x0, x1
     a4c:	mov	x1, x8
     a50:	blr	x9
     a54:	cbz	w0, a60 <dl_load@@Base+0x6c>
     a58:	mov	w19, #0x1                   	// #1
     a5c:	b	a80 <dl_load@@Base+0x8c>
     a60:	ldr	x8, [x20, #168]
     a64:	ldr	x0, [x21, #176]
     a68:	ldr	x2, [x19, #112]
     a6c:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     a70:	ldr	x8, [x8, #104]
     a74:	add	x1, x1, #0x1f8
     a78:	blr	x8
     a7c:	mov	w19, wzr
     a80:	ldr	x8, [x20, #168]
     a84:	ldr	x0, [x21, #176]
     a88:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     a8c:	add	x1, x1, #0x34c
     a90:	ldr	x8, [x8, #88]
     a94:	blr	x8
     a98:	mov	w0, w19
     a9c:	ldp	x20, x19, [sp, #32]
     aa0:	ldr	x21, [sp, #16]
     aa4:	ldp	x29, x30, [sp], #48
     aa8:	ret
     aac:	adrp	x19, 11000 <dl_load@@Base+0x1060c>
     ab0:	ldr	x19, [x19, #4048]
     ab4:	adrp	x0, 1000 <dl_load@@Base+0x60c>
     ab8:	add	x0, x0, #0x1a0
     abc:	mov	w1, #0x24                  	// #36
     ac0:	ldr	x3, [x19]
     ac4:	mov	w2, #0x1                   	// #1
     ac8:	bl	8c0 <fwrite@plt>
     acc:	ldr	x8, [x20, #168]
     ad0:	ldr	x0, [x19]
     ad4:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     ad8:	add	x1, x1, #0x1c5
     adc:	ldp	w4, w5, [x8]
     ae0:	mov	w2, #0x2                   	// #2
     ae4:	mov	w3, wzr
     ae8:	bl	910 <fprintf@plt>
     aec:	mov	w0, #0x1                   	// #1
     af0:	bl	850 <exit@plt>
     af4:	sub	sp, sp, #0x150
     af8:	stp	x28, x27, [sp, #256]
     afc:	adrp	x28, 12000 <dl_load@@Base+0x1160c>
     b00:	ldr	x8, [x28, #168]
     b04:	stp	d9, d8, [sp, #224]
     b08:	stp	x29, x30, [sp, #240]
     b0c:	stp	x26, x25, [sp, #272]
     b10:	stp	x24, x23, [sp, #288]
     b14:	stp	x22, x21, [sp, #304]
     b18:	stp	x20, x19, [sp, #320]
     b1c:	adrp	x27, 12000 <dl_load@@Base+0x1160c>
     b20:	ldr	x8, [x8, #152]
     b24:	ldr	x0, [x27, #176]
     b28:	mov	x19, x1
     b2c:	add	x3, sp, #0x70
     b30:	mov	w2, #0x1                   	// #1
     b34:	mov	x1, xzr
     b38:	add	x29, sp, #0xe0
     b3c:	mov	w21, #0x1                   	// #1
     b40:	blr	x8
     b44:	ldr	x8, [x28, #168]
     b48:	cbz	w0, d94 <dl_load@@Base+0x3a0>
     b4c:	ldr	x8, [x8, #152]
     b50:	ldr	x0, [x27, #176]
     b54:	add	x3, sp, #0x50
     b58:	mov	w1, #0x1                   	// #1
     b5c:	mov	w2, #0x1                   	// #1
     b60:	mov	w21, #0x1                   	// #1
     b64:	blr	x8
     b68:	ldr	x8, [x28, #168]
     b6c:	cbz	w0, dc4 <dl_load@@Base+0x3d0>
     b70:	ldr	x8, [x8, #152]
     b74:	ldr	x0, [x27, #176]
     b78:	add	x3, sp, #0x30
     b7c:	mov	w1, #0x2                   	// #2
     b80:	mov	w2, #0x5                   	// #5
     b84:	blr	x8
     b88:	cbz	w0, dfc <dl_load@@Base+0x408>
     b8c:	ldr	x8, [x28, #168]
     b90:	ldr	x20, [sp, #56]
     b94:	ldr	x0, [x27, #176]
     b98:	ldr	x8, [x8, #256]
     b9c:	mov	x1, x20
     ba0:	blr	x8
     ba4:	ldr	w8, [sp, #128]
     ba8:	cbnz	w8, bb4 <dl_load@@Base+0x1c0>
     bac:	ldr	w8, [sp, #96]
     bb0:	cbz	w8, ebc <dl_load@@Base+0x4c8>
     bb4:	add	x0, sp, #0x70
     bb8:	add	x1, sp, #0x20
     bbc:	bl	10b8 <dl_load@@Base+0x6c4>
     bc0:	cbz	x0, e1c <dl_load@@Base+0x428>
     bc4:	mov	x21, x0
     bc8:	add	x0, sp, #0x50
     bcc:	add	x1, sp, #0x10
     bd0:	bl	10b8 <dl_load@@Base+0x6c4>
     bd4:	cbz	x0, e80 <dl_load@@Base+0x48c>
     bd8:	ldr	w9, [x0, #4]
     bdc:	ldr	x8, [x28, #168]
     be0:	mov	x22, x0
     be4:	cbz	w9, f00 <dl_load@@Base+0x50c>
     be8:	ldr	x8, [x8, #320]
     bec:	ldr	x0, [x27, #176]
     bf0:	blr	x8
     bf4:	ldr	x8, [x28, #168]
     bf8:	mov	x24, x0
     bfc:	ldr	x9, [x8, #320]
     c00:	ldr	x8, [x27, #176]
     c04:	mov	x0, x8
     c08:	blr	x9
     c0c:	mov	x1, x0
     c10:	mov	x0, x24
     c14:	mov	x2, x21
     c18:	mov	x3, x22
     c1c:	str	x1, [sp, #8]
     c20:	bl	860 <__gmpz_tdiv_qr@plt>
     c24:	ldr	x23, [x28, #168]
     c28:	movi	v0.2d, #0x0
     c2c:	mov	w9, #0x2                   	// #2
     c30:	mov	w8, #0x8                   	// #8
     c34:	ldr	x10, [x23, #232]
     c38:	stp	q0, q0, [x29, #-48]
     c3c:	stur	w9, [x29, #-48]
     c40:	stur	x8, [x29, #-32]
     c44:	ldr	x8, [x23, #280]
     c48:	ldr	x25, [x27, #176]
     c4c:	mov	w0, #0x9                   	// #9
     c50:	str	x10, [sp]
     c54:	blr	x8
     c58:	mov	x26, x0
     c5c:	cbnz	x0, c80 <dl_load@@Base+0x28c>
     c60:	ldr	x8, [x23, #96]
     c64:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     c68:	adrp	x2, 1000 <dl_load@@Base+0x60c>
     c6c:	add	x1, x1, #0x2fe
     c70:	add	x2, x2, #0x31c
     c74:	mov	w3, #0x9                   	// #9
     c78:	mov	x0, x25
     c7c:	blr	x8
     c80:	mov	x8, #0x7571                	// #30065
     c84:	movk	x8, #0x746f, lsl #16
     c88:	movk	x8, #0x6569, lsl #32
     c8c:	movk	x8, #0x746e, lsl #48
     c90:	str	x8, [x26]
     c94:	ldr	x8, [sp]
     c98:	strb	wzr, [x26, #8]
     c9c:	mov	w9, #0x1                   	// #1
     ca0:	stur	x26, [x29, #-40]
     ca4:	mov	w26, #0x2                   	// #2
     ca8:	sub	x2, x29, #0x30
     cac:	sub	x3, x29, #0x50
     cb0:	mov	x0, x25
     cb4:	mov	x1, x20
     cb8:	stur	w9, [x29, #-80]
     cbc:	stur	w26, [x29, #-64]
     cc0:	stur	x24, [x29, #-56]
     cc4:	blr	x8
     cc8:	ldr	x23, [x28, #168]
     ccc:	mov	w8, #0x9                   	// #9
     cd0:	movi	v0.2d, #0x0
     cd4:	ldr	x24, [x27, #176]
     cd8:	ldr	x27, [x23, #232]
     cdc:	stp	q0, q0, [x29, #-48]
     ce0:	stur	w26, [x29, #-48]
     ce4:	stur	x8, [x29, #-32]
     ce8:	ldr	x8, [x23, #280]
     cec:	mov	w0, #0xa                   	// #10
     cf0:	blr	x8
     cf4:	mov	x25, x0
     cf8:	cbnz	x0, d1c <dl_load@@Base+0x328>
     cfc:	ldr	x8, [x23, #96]
     d00:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     d04:	adrp	x2, 1000 <dl_load@@Base+0x60c>
     d08:	add	x1, x1, #0x2fe
     d0c:	add	x2, x2, #0x31c
     d10:	mov	w3, #0xa                   	// #10
     d14:	mov	x0, x24
     d18:	blr	x8
     d1c:	adrp	x9, 1000 <dl_load@@Base+0x60c>
     d20:	add	x9, x9, #0x2b2
     d24:	ldr	x9, [x9]
     d28:	mov	w8, #0x72                  	// #114
     d2c:	strb	w8, [x25, #8]
     d30:	mov	w8, #0x1                   	// #1
     d34:	strb	wzr, [x25, #9]
     d38:	str	x9, [x25]
     d3c:	stur	w8, [x29, #-80]
     d40:	ldr	x8, [sp, #8]
     d44:	mov	w10, #0x2                   	// #2
     d48:	sub	x2, x29, #0x30
     d4c:	sub	x3, x29, #0x50
     d50:	mov	x0, x24
     d54:	mov	x1, x20
     d58:	stur	x25, [x29, #-40]
     d5c:	stur	w10, [x29, #-64]
     d60:	stur	x8, [x29, #-56]
     d64:	blr	x27
     d68:	add	x8, sp, #0x20
     d6c:	cmp	x21, x8
     d70:	b.ne	d7c <dl_load@@Base+0x388>  // b.any
     d74:	add	x0, sp, #0x20
     d78:	bl	8b0 <__gmpz_clear@plt>
     d7c:	add	x8, sp, #0x10
     d80:	cmp	x22, x8
     d84:	b.ne	10a8 <dl_load@@Base+0x6b4>  // b.any
     d88:	add	x0, sp, #0x10
     d8c:	bl	8b0 <__gmpz_clear@plt>
     d90:	b	10a8 <dl_load@@Base+0x6b4>
     d94:	ldr	x22, [x8, #104]
     d98:	ldr	x20, [x27, #176]
     d9c:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     da0:	add	x1, x1, #0x218
     da4:	mov	w2, #0x5                   	// #5
     da8:	mov	x0, xzr
     dac:	bl	8d0 <dcgettext@plt>
     db0:	mov	x1, x0
     db4:	mov	x0, x20
     db8:	blr	x22
     dbc:	str	w21, [x19]
     dc0:	b	df0 <dl_load@@Base+0x3fc>
     dc4:	ldr	x22, [x8, #104]
     dc8:	ldr	x20, [x27, #176]
     dcc:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     dd0:	add	x1, x1, #0x23f
     dd4:	mov	w2, #0x5                   	// #5
     dd8:	mov	x0, xzr
     ddc:	bl	8d0 <dcgettext@plt>
     de0:	mov	x1, x0
     de4:	mov	x0, x20
     de8:	blr	x22
     dec:	str	w21, [x19]
     df0:	mov	x8, #0xbff0000000000000    	// #-4616189618054758400
     df4:	str	x8, [x19, #8]
     df8:	b	e54 <dl_load@@Base+0x460>
     dfc:	ldr	x8, [x28, #168]
     e00:	ldr	x20, [x27, #176]
     e04:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     e08:	add	x1, x1, #0x267
     e0c:	ldr	x21, [x8, #104]
     e10:	mov	w2, #0x5                   	// #5
     e14:	mov	x0, xzr
     e18:	b	e34 <dl_load@@Base+0x440>
     e1c:	ldr	x8, [x28, #168]
     e20:	ldr	x20, [x27, #176]
     e24:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     e28:	add	x1, x1, #0x2bc
     e2c:	ldr	x21, [x8, #104]
     e30:	mov	w2, #0x5                   	// #5
     e34:	bl	8d0 <dcgettext@plt>
     e38:	mov	x1, x0
     e3c:	mov	x0, x20
     e40:	blr	x21
     e44:	mov	w8, #0x1                   	// #1
     e48:	mov	x9, #0xbff0000000000000    	// #-4616189618054758400
     e4c:	str	w8, [x19]
     e50:	str	x9, [x19, #8]
     e54:	str	wzr, [x19, #16]
     e58:	mov	x0, x19
     e5c:	ldp	x20, x19, [sp, #320]
     e60:	ldp	x22, x21, [sp, #304]
     e64:	ldp	x24, x23, [sp, #288]
     e68:	ldp	x26, x25, [sp, #272]
     e6c:	ldp	x28, x27, [sp, #256]
     e70:	ldp	x29, x30, [sp, #240]
     e74:	ldp	d9, d8, [sp, #224]
     e78:	add	sp, sp, #0x150
     e7c:	ret
     e80:	ldr	x8, [x28, #168]
     e84:	ldr	x20, [x27, #176]
     e88:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     e8c:	add	x1, x1, #0x2dc
     e90:	ldr	x22, [x8, #104]
     e94:	mov	w2, #0x5                   	// #5
     e98:	bl	8d0 <dcgettext@plt>
     e9c:	mov	x1, x0
     ea0:	mov	x0, x20
     ea4:	blr	x22
     ea8:	add	x8, sp, #0x20
     eac:	cmp	x21, x8
     eb0:	b.ne	e44 <dl_load@@Base+0x450>  // b.any
     eb4:	add	x0, sp, #0x20
     eb8:	b	f4c <dl_load@@Base+0x558>
     ebc:	ldr	d0, [sp, #120]
     ec0:	ldr	d1, [sp, #88]
     ec4:	frintm	d2, d0
     ec8:	frintp	d3, d0
     ecc:	fcmp	d0, #0.0
     ed0:	frintm	d4, d1
     ed4:	frintp	d5, d1
     ed8:	fcsel	d0, d3, d2, lt  // lt = tstop
     edc:	fcmp	d1, #0.0
     ee0:	fcsel	d1, d5, d4, lt  // lt = tstop
     ee4:	fcmp	d1, #0.0
     ee8:	b.ne	f54 <dl_load@@Base+0x560>  // b.any
     eec:	ldr	x8, [x28, #168]
     ef0:	ldr	x20, [x27, #176]
     ef4:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     ef8:	add	x1, x1, #0x28f
     efc:	b	e0c <dl_load@@Base+0x418>
     f00:	ldr	x23, [x8, #104]
     f04:	ldr	x20, [x27, #176]
     f08:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     f0c:	add	x1, x1, #0x28f
     f10:	mov	w2, #0x5                   	// #5
     f14:	mov	x0, xzr
     f18:	bl	8d0 <dcgettext@plt>
     f1c:	mov	x1, x0
     f20:	mov	x0, x20
     f24:	blr	x23
     f28:	add	x8, sp, #0x20
     f2c:	cmp	x21, x8
     f30:	b.ne	f3c <dl_load@@Base+0x548>  // b.any
     f34:	add	x0, sp, #0x20
     f38:	bl	8b0 <__gmpz_clear@plt>
     f3c:	add	x8, sp, #0x10
     f40:	cmp	x22, x8
     f44:	b.ne	e44 <dl_load@@Base+0x450>  // b.any
     f48:	add	x0, sp, #0x10
     f4c:	bl	8b0 <__gmpz_clear@plt>
     f50:	b	e44 <dl_load@@Base+0x450>
     f54:	fdiv	d2, d0, d1
     f58:	frintm	d3, d2
     f5c:	frintp	d4, d2
     f60:	fcmp	d2, #0.0
     f64:	fcsel	d9, d4, d3, lt  // lt = tstop
     f68:	bl	8e0 <fmod@plt>
     f6c:	ldr	x24, [x28, #168]
     f70:	movi	v2.2d, #0x0
     f74:	mov	w23, #0x2                   	// #2
     f78:	mov	w8, #0x8                   	// #8
     f7c:	ldr	x25, [x24, #232]
     f80:	stp	q2, q2, [x29, #-48]
     f84:	stur	w23, [x29, #-48]
     f88:	stur	x8, [x29, #-32]
     f8c:	ldr	x8, [x24, #280]
     f90:	ldr	x21, [x27, #176]
     f94:	frintm	d1, d0
     f98:	fcmp	d0, #0.0
     f9c:	frintp	d0, d0
     fa0:	mov	w0, #0x9                   	// #9
     fa4:	fcsel	d8, d0, d1, lt  // lt = tstop
     fa8:	blr	x8
     fac:	mov	x22, x0
     fb0:	cbnz	x0, fd4 <dl_load@@Base+0x5e0>
     fb4:	ldr	x8, [x24, #96]
     fb8:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     fbc:	adrp	x2, 1000 <dl_load@@Base+0x60c>
     fc0:	add	x1, x1, #0x2fe
     fc4:	add	x2, x2, #0x31c
     fc8:	mov	w3, #0x9                   	// #9
     fcc:	mov	x0, x21
     fd0:	blr	x8
     fd4:	mov	x8, #0x7571                	// #30065
     fd8:	movk	x8, #0x746f, lsl #16
     fdc:	movk	x8, #0x6569, lsl #32
     fe0:	movk	x8, #0x746e, lsl #48
     fe4:	mov	w24, #0x1                   	// #1
     fe8:	sub	x2, x29, #0x30
     fec:	sub	x3, x29, #0x50
     ff0:	mov	x0, x21
     ff4:	mov	x1, x20
     ff8:	strb	wzr, [x22, #8]
     ffc:	str	x8, [x22]
    1000:	stur	x22, [x29, #-40]
    1004:	stur	w24, [x29, #-80]
    1008:	stur	d9, [x29, #-72]
    100c:	stur	wzr, [x29, #-64]
    1010:	blr	x25
    1014:	ldr	x26, [x28, #168]
    1018:	mov	w8, #0x9                   	// #9
    101c:	movi	v0.2d, #0x0
    1020:	ldr	x21, [x27, #176]
    1024:	ldr	x25, [x26, #232]
    1028:	stp	q0, q0, [x29, #-48]
    102c:	stur	w23, [x29, #-48]
    1030:	stur	x8, [x29, #-32]
    1034:	ldr	x8, [x26, #280]
    1038:	mov	w0, #0xa                   	// #10
    103c:	blr	x8
    1040:	mov	x22, x0
    1044:	cbnz	x0, 1068 <dl_load@@Base+0x674>
    1048:	ldr	x8, [x26, #96]
    104c:	adrp	x1, 1000 <dl_load@@Base+0x60c>
    1050:	adrp	x2, 1000 <dl_load@@Base+0x60c>
    1054:	add	x1, x1, #0x2fe
    1058:	add	x2, x2, #0x31c
    105c:	mov	w3, #0xa                   	// #10
    1060:	mov	x0, x21
    1064:	blr	x8
    1068:	adrp	x8, 1000 <dl_load@@Base+0x60c>
    106c:	add	x8, x8, #0x2b2
    1070:	ldr	x8, [x8]
    1074:	mov	w9, #0x72                  	// #114
    1078:	sub	x2, x29, #0x30
    107c:	sub	x3, x29, #0x50
    1080:	mov	x0, x21
    1084:	mov	x1, x20
    1088:	strb	wzr, [x22, #9]
    108c:	strb	w9, [x22, #8]
    1090:	str	x8, [x22]
    1094:	stur	x22, [x29, #-40]
    1098:	stur	w24, [x29, #-80]
    109c:	stur	d8, [x29, #-72]
    10a0:	stur	wzr, [x29, #-64]
    10a4:	blr	x25
    10a8:	mov	w8, #0x1                   	// #1
    10ac:	str	xzr, [x19, #8]
    10b0:	str	w8, [x19]
    10b4:	b	e54 <dl_load@@Base+0x460>
    10b8:	stp	x29, x30, [sp, #-48]!
    10bc:	stp	x20, x19, [sp, #32]
    10c0:	ldr	w8, [x0, #16]
    10c4:	mov	x20, x0
    10c8:	mov	x19, x1
    10cc:	str	x21, [sp, #16]
    10d0:	mov	x29, sp
    10d4:	cbz	w8, 10f0 <dl_load@@Base+0x6fc>
    10d8:	cmp	w8, #0x1
    10dc:	b.eq	1118 <dl_load@@Base+0x724>  // b.none
    10e0:	cmp	w8, #0x2
    10e4:	b.ne	1140 <dl_load@@Base+0x74c>  // b.any
    10e8:	ldr	x19, [x20, #24]
    10ec:	b	117c <dl_load@@Base+0x788>
    10f0:	mov	x0, x19
    10f4:	bl	8f0 <__gmpz_init@plt>
    10f8:	ldr	d0, [x20, #8]
    10fc:	mov	x0, x19
    1100:	frintm	d1, d0
    1104:	frintp	d2, d0
    1108:	fcmp	d0, #0.0
    110c:	fcsel	d0, d2, d1, lt  // lt = tstop
    1110:	bl	890 <__gmpz_set_d@plt>
    1114:	b	117c <dl_load@@Base+0x788>
    1118:	ldr	x0, [x20, #24]
    111c:	bl	900 <mpfr_number_p@plt>
    1120:	cbz	w0, 1178 <dl_load@@Base+0x784>
    1124:	mov	x0, x19
    1128:	bl	8f0 <__gmpz_init@plt>
    112c:	ldr	x1, [x20, #24]
    1130:	mov	w2, #0x1                   	// #1
    1134:	mov	x0, x19
    1138:	bl	880 <mpfr_get_z@plt>
    113c:	b	117c <dl_load@@Base+0x788>
    1140:	adrp	x8, 12000 <dl_load@@Base+0x1160c>
    1144:	ldr	x8, [x8, #168]
    1148:	adrp	x9, 12000 <dl_load@@Base+0x1160c>
    114c:	ldr	x19, [x9, #176]
    1150:	adrp	x1, 1000 <dl_load@@Base+0x60c>
    1154:	ldr	x21, [x8, #96]
    1158:	add	x1, x1, #0x32a
    115c:	mov	w2, #0x5                   	// #5
    1160:	mov	x0, xzr
    1164:	bl	8d0 <dcgettext@plt>
    1168:	ldr	w2, [x20, #16]
    116c:	mov	x1, x0
    1170:	mov	x0, x19
    1174:	blr	x21
    1178:	mov	x19, xzr
    117c:	mov	x0, x19
    1180:	ldp	x20, x19, [sp, #32]
    1184:	ldr	x21, [sp, #16]
    1188:	ldp	x29, x30, [sp], #48
    118c:	ret

Disassembly of section .fini:

0000000000001190 <.fini>:
    1190:	stp	x29, x30, [sp, #-16]!
    1194:	mov	x29, sp
    1198:	ldp	x29, x30, [sp], #16
    119c:	ret
