
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fido_id_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400f20 <_init>:
  400f20:	stp	x29, x30, [sp, #-16]!
  400f24:	mov	x29, sp
  400f28:	bl	401180 <call_weak_fn>
  400f2c:	ldp	x29, x30, [sp], #16
  400f30:	ret

Disassembly of section .plt:

0000000000400f40 <.plt>:
  400f40:	stp	x16, x30, [sp, #-16]!
  400f44:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400f48:	ldr	x17, [x16, #3840]
  400f4c:	add	x16, x16, #0xf00
  400f50:	br	x17
  400f54:	nop
  400f58:	nop
  400f5c:	nop

0000000000400f60 <__libc_start_main@plt>:
  400f60:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400f64:	ldr	x17, [x16, #3848]
  400f68:	add	x16, x16, #0xf08
  400f6c:	br	x17

0000000000400f70 <__gmon_start__@plt>:
  400f70:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400f74:	ldr	x17, [x16, #3856]
  400f78:	add	x16, x16, #0xf10
  400f7c:	br	x17

0000000000400f80 <polkit_agent_close@plt>:
  400f80:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400f84:	ldr	x17, [x16, #3864]
  400f88:	add	x16, x16, #0xf18
  400f8c:	br	x17

0000000000400f90 <log_parse_environment_realm@plt>:
  400f90:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400f94:	ldr	x17, [x16, #3872]
  400f98:	add	x16, x16, #0xf20
  400f9c:	br	x17

0000000000400fa0 <safe_close@plt>:
  400fa0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400fa4:	ldr	x17, [x16, #3880]
  400fa8:	add	x16, x16, #0xf28
  400fac:	br	x17

0000000000400fb0 <sd_device_get_sysname@plt>:
  400fb0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400fb4:	ldr	x17, [x16, #3888]
  400fb8:	add	x16, x16, #0xf30
  400fbc:	br	x17

0000000000400fc0 <abort@plt>:
  400fc0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400fc4:	ldr	x17, [x16, #3896]
  400fc8:	add	x16, x16, #0xf38
  400fcc:	br	x17

0000000000400fd0 <device_new_from_strv@plt>:
  400fd0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400fd4:	ldr	x17, [x16, #3904]
  400fd8:	add	x16, x16, #0xf40
  400fdc:	br	x17

0000000000400fe0 <log_object_internal@plt>:
  400fe0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400fe4:	ldr	x17, [x16, #3912]
  400fe8:	add	x16, x16, #0xf48
  400fec:	br	x17

0000000000400ff0 <__errno_location@plt>:
  400ff0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  400ff4:	ldr	x17, [x16, #3920]
  400ff8:	add	x16, x16, #0xf50
  400ffc:	br	x17

0000000000401000 <log_set_target@plt>:
  401000:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401004:	ldr	x17, [x16, #3928]
  401008:	add	x16, x16, #0xf58
  40100c:	br	x17

0000000000401010 <read@plt>:
  401010:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401014:	ldr	x17, [x16, #3936]
  401018:	add	x16, x16, #0xf60
  40101c:	br	x17

0000000000401020 <__stack_chk_fail@plt>:
  401020:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401024:	ldr	x17, [x16, #3944]
  401028:	add	x16, x16, #0xf68
  40102c:	br	x17

0000000000401030 <path_join_internal@plt>:
  401030:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401034:	ldr	x17, [x16, #3952]
  401038:	add	x16, x16, #0xf70
  40103c:	br	x17

0000000000401040 <ask_password_agent_close@plt>:
  401040:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401044:	ldr	x17, [x16, #3960]
  401048:	add	x16, x16, #0xf78
  40104c:	br	x17

0000000000401050 <pager_close@plt>:
  401050:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401054:	ldr	x17, [x16, #3968]
  401058:	add	x16, x16, #0xf80
  40105c:	br	x17

0000000000401060 <udev_parse_config_full@plt>:
  401060:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401064:	ldr	x17, [x16, #3976]
  401068:	add	x16, x16, #0xf88
  40106c:	br	x17

0000000000401070 <log_internal_realm@plt>:
  401070:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401074:	ldr	x17, [x16, #3984]
  401078:	add	x16, x16, #0xf90
  40107c:	br	x17

0000000000401080 <free@plt>:
  401080:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401084:	ldr	x17, [x16, #3992]
  401088:	add	x16, x16, #0xf98
  40108c:	br	x17

0000000000401090 <puts@plt>:
  401090:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401094:	ldr	x17, [x16, #4000]
  401098:	add	x16, x16, #0xfa0
  40109c:	br	x17

00000000004010a0 <sd_device_unref@plt>:
  4010a0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  4010a4:	ldr	x17, [x16, #4008]
  4010a8:	add	x16, x16, #0xfa8
  4010ac:	br	x17

00000000004010b0 <mac_selinux_finish@plt>:
  4010b0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  4010b4:	ldr	x17, [x16, #4016]
  4010b8:	add	x16, x16, #0xfb0
  4010bc:	br	x17

00000000004010c0 <sd_device_new_from_syspath@plt>:
  4010c0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  4010c4:	ldr	x17, [x16, #4024]
  4010c8:	add	x16, x16, #0xfb8
  4010cc:	br	x17

00000000004010d0 <open64@plt>:
  4010d0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  4010d4:	ldr	x17, [x16, #4032]
  4010d8:	add	x16, x16, #0xfc0
  4010dc:	br	x17

00000000004010e0 <sd_device_get_syspath@plt>:
  4010e0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  4010e4:	ldr	x17, [x16, #4040]
  4010e8:	add	x16, x16, #0xfc8
  4010ec:	br	x17

00000000004010f0 <log_open@plt>:
  4010f0:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  4010f4:	ldr	x17, [x16, #4048]
  4010f8:	add	x16, x16, #0xfd0
  4010fc:	br	x17

0000000000401100 <log_oom_internal@plt>:
  401100:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401104:	ldr	x17, [x16, #4056]
  401108:	add	x16, x16, #0xfd8
  40110c:	br	x17

0000000000401110 <log_get_max_level_realm@plt>:
  401110:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401114:	ldr	x17, [x16, #4064]
  401118:	add	x16, x16, #0xfe0
  40111c:	br	x17

0000000000401120 <sd_device_get_parent@plt>:
  401120:	adrp	x16, 412000 <__FRAME_END__+0xfb00>
  401124:	ldr	x17, [x16, #4072]
  401128:	add	x16, x16, #0xfe8
  40112c:	br	x17

Disassembly of section .text:

0000000000401130 <_start>:
  401130:	mov	x29, #0x0                   	// #0
  401134:	mov	x30, #0x0                   	// #0
  401138:	mov	x5, x0
  40113c:	ldr	x1, [sp]
  401140:	add	x2, sp, #0x8
  401144:	mov	x6, sp
  401148:	movz	x0, #0x0, lsl #48
  40114c:	movk	x0, #0x0, lsl #32
  401150:	movk	x0, #0x40, lsl #16
  401154:	movk	x0, #0x1d30
  401158:	movz	x3, #0x0, lsl #48
  40115c:	movk	x3, #0x0, lsl #32
  401160:	movk	x3, #0x40, lsl #16
  401164:	movk	x3, #0x1fb8
  401168:	movz	x4, #0x0, lsl #48
  40116c:	movk	x4, #0x0, lsl #32
  401170:	movk	x4, #0x40, lsl #16
  401174:	movk	x4, #0x2038
  401178:	bl	400f60 <__libc_start_main@plt>
  40117c:	bl	400fc0 <abort@plt>

0000000000401180 <call_weak_fn>:
  401180:	adrp	x0, 412000 <__FRAME_END__+0xfb00>
  401184:	ldr	x0, [x0, #4088]
  401188:	cbz	x0, 401190 <call_weak_fn+0x10>
  40118c:	b	400f70 <__gmon_start__@plt>
  401190:	ret

0000000000401194 <deregister_tm_clones>:
  401194:	stp	x29, x30, [sp, #-32]!
  401198:	mov	x29, sp
  40119c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4011a0:	add	x0, x0, #0x0
  4011a4:	str	x0, [sp, #24]
  4011a8:	ldr	x0, [sp, #24]
  4011ac:	str	x0, [sp, #24]
  4011b0:	ldr	x1, [sp, #24]
  4011b4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4011b8:	add	x0, x0, #0x0
  4011bc:	cmp	x1, x0
  4011c0:	b.eq	4011fc <deregister_tm_clones+0x68>  // b.none
  4011c4:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4011c8:	add	x0, x0, #0x50
  4011cc:	ldr	x0, [x0]
  4011d0:	str	x0, [sp, #16]
  4011d4:	ldr	x0, [sp, #16]
  4011d8:	str	x0, [sp, #16]
  4011dc:	ldr	x0, [sp, #16]
  4011e0:	cmp	x0, #0x0
  4011e4:	b.eq	401200 <deregister_tm_clones+0x6c>  // b.none
  4011e8:	ldr	x1, [sp, #16]
  4011ec:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4011f0:	add	x0, x0, #0x0
  4011f4:	blr	x1
  4011f8:	b	401200 <deregister_tm_clones+0x6c>
  4011fc:	nop
  401200:	ldp	x29, x30, [sp], #32
  401204:	ret

0000000000401208 <register_tm_clones>:
  401208:	stp	x29, x30, [sp, #-48]!
  40120c:	mov	x29, sp
  401210:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401214:	add	x0, x0, #0x0
  401218:	str	x0, [sp, #40]
  40121c:	ldr	x0, [sp, #40]
  401220:	str	x0, [sp, #40]
  401224:	ldr	x1, [sp, #40]
  401228:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40122c:	add	x0, x0, #0x0
  401230:	sub	x0, x1, x0
  401234:	asr	x0, x0, #3
  401238:	lsr	x1, x0, #63
  40123c:	add	x0, x1, x0
  401240:	asr	x0, x0, #1
  401244:	str	x0, [sp, #32]
  401248:	ldr	x0, [sp, #32]
  40124c:	cmp	x0, #0x0
  401250:	b.eq	401290 <register_tm_clones+0x88>  // b.none
  401254:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401258:	add	x0, x0, #0x58
  40125c:	ldr	x0, [x0]
  401260:	str	x0, [sp, #24]
  401264:	ldr	x0, [sp, #24]
  401268:	str	x0, [sp, #24]
  40126c:	ldr	x0, [sp, #24]
  401270:	cmp	x0, #0x0
  401274:	b.eq	401294 <register_tm_clones+0x8c>  // b.none
  401278:	ldr	x2, [sp, #24]
  40127c:	ldr	x1, [sp, #32]
  401280:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401284:	add	x0, x0, #0x0
  401288:	blr	x2
  40128c:	b	401294 <register_tm_clones+0x8c>
  401290:	nop
  401294:	ldp	x29, x30, [sp], #48
  401298:	ret

000000000040129c <__do_global_dtors_aux>:
  40129c:	stp	x29, x30, [sp, #-16]!
  4012a0:	mov	x29, sp
  4012a4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4012a8:	add	x0, x0, #0x20
  4012ac:	ldrb	w0, [x0]
  4012b0:	and	x0, x0, #0xff
  4012b4:	cmp	x0, #0x0
  4012b8:	b.ne	4012d4 <__do_global_dtors_aux+0x38>  // b.any
  4012bc:	bl	401194 <deregister_tm_clones>
  4012c0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4012c4:	add	x0, x0, #0x20
  4012c8:	mov	w1, #0x1                   	// #1
  4012cc:	strb	w1, [x0]
  4012d0:	b	4012d8 <__do_global_dtors_aux+0x3c>
  4012d4:	nop
  4012d8:	ldp	x29, x30, [sp], #16
  4012dc:	ret

00000000004012e0 <frame_dummy>:
  4012e0:	stp	x29, x30, [sp, #-16]!
  4012e4:	mov	x29, sp
  4012e8:	bl	401208 <register_tm_clones>
  4012ec:	nop
  4012f0:	ldp	x29, x30, [sp], #16
  4012f4:	ret

00000000004012f8 <sd_device_unrefp>:
  4012f8:	stp	x29, x30, [sp, #-32]!
  4012fc:	mov	x29, sp
  401300:	str	x0, [sp, #24]
  401304:	ldr	x0, [sp, #24]
  401308:	ldr	x0, [x0]
  40130c:	cmp	x0, #0x0
  401310:	b.eq	401320 <sd_device_unrefp+0x28>  // b.none
  401314:	ldr	x0, [sp, #24]
  401318:	ldr	x0, [x0]
  40131c:	bl	4010a0 <sd_device_unref@plt>
  401320:	nop
  401324:	ldp	x29, x30, [sp], #32
  401328:	ret

000000000040132c <ALIGN_TO>:
  40132c:	sub	sp, sp, #0x10
  401330:	str	x0, [sp, #8]
  401334:	str	x1, [sp]
  401338:	ldr	x1, [sp, #8]
  40133c:	ldr	x0, [sp]
  401340:	add	x0, x1, x0
  401344:	sub	x1, x0, #0x1
  401348:	ldr	x0, [sp]
  40134c:	neg	x0, x0
  401350:	and	x0, x1, x0
  401354:	add	sp, sp, #0x10
  401358:	ret

000000000040135c <freep>:
  40135c:	stp	x29, x30, [sp, #-32]!
  401360:	mov	x29, sp
  401364:	str	x0, [sp, #24]
  401368:	ldr	x0, [sp, #24]
  40136c:	ldr	x0, [x0]
  401370:	bl	401080 <free@plt>
  401374:	nop
  401378:	ldp	x29, x30, [sp], #32
  40137c:	ret

0000000000401380 <save_argc_argv>:
  401380:	sub	sp, sp, #0x10
  401384:	str	w0, [sp, #12]
  401388:	str	x1, [sp]
  40138c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401390:	add	x0, x0, #0x10
  401394:	ldr	w1, [sp, #12]
  401398:	str	w1, [x0]
  40139c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4013a0:	add	x0, x0, #0x0
  4013a4:	ldr	x1, [sp]
  4013a8:	str	x1, [x0]
  4013ac:	nop
  4013b0:	add	sp, sp, #0x10
  4013b4:	ret

00000000004013b8 <closep>:
  4013b8:	stp	x29, x30, [sp, #-32]!
  4013bc:	mov	x29, sp
  4013c0:	str	x0, [sp, #24]
  4013c4:	ldr	x0, [sp, #24]
  4013c8:	ldr	w0, [x0]
  4013cc:	bl	400fa0 <safe_close@plt>
  4013d0:	nop
  4013d4:	ldp	x29, x30, [sp], #32
  4013d8:	ret

00000000004013dc <static_destruct>:
  4013dc:	stp	x29, x30, [sp, #-32]!
  4013e0:	mov	x29, sp
  4013e4:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4013e8:	add	x0, x0, #0x250
  4013ec:	ldr	x0, [x0]
  4013f0:	cmp	x0, #0x0
  4013f4:	b.eq	401458 <static_destruct+0x7c>  // b.none
  4013f8:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4013fc:	add	x0, x0, #0x250
  401400:	ldr	x0, [x0]
  401404:	mov	x1, #0x8                   	// #8
  401408:	bl	40132c <ALIGN_TO>
  40140c:	str	x0, [sp, #24]
  401410:	b	40143c <static_destruct+0x60>
  401414:	ldr	x0, [sp, #24]
  401418:	ldr	x1, [x0, #8]
  40141c:	ldr	x0, [sp, #24]
  401420:	ldr	x0, [x0]
  401424:	blr	x1
  401428:	ldr	x0, [sp, #24]
  40142c:	add	x0, x0, #0x10
  401430:	mov	x1, #0x8                   	// #8
  401434:	bl	40132c <ALIGN_TO>
  401438:	str	x0, [sp, #24]
  40143c:	ldr	x1, [sp, #24]
  401440:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401444:	add	x0, x0, #0x258
  401448:	ldr	x0, [x0]
  40144c:	cmp	x1, x0
  401450:	b.cc	401414 <static_destruct+0x38>  // b.lo, b.ul, b.last
  401454:	b	40145c <static_destruct+0x80>
  401458:	nop
  40145c:	ldp	x29, x30, [sp], #32
  401460:	ret

0000000000401464 <udev_parse_config>:
  401464:	stp	x29, x30, [sp, #-16]!
  401468:	mov	x29, sp
  40146c:	mov	x3, #0x0                   	// #0
  401470:	mov	x2, #0x0                   	// #0
  401474:	mov	x1, #0x0                   	// #0
  401478:	mov	x0, #0x0                   	// #0
  40147c:	bl	401060 <udev_parse_config_full@plt>
  401480:	ldp	x29, x30, [sp], #16
  401484:	ret

0000000000401488 <run>:
  401488:	mov	x12, #0x1120                	// #4384
  40148c:	sub	sp, sp, x12
  401490:	stp	x29, x30, [sp, #32]
  401494:	add	x29, sp, #0x20
  401498:	str	x19, [sp, #48]
  40149c:	str	w0, [sp, #76]
  4014a0:	str	x1, [sp, #64]
  4014a4:	adrp	x0, 412000 <__FRAME_END__+0xfb00>
  4014a8:	add	x0, x0, #0xcb8
  4014ac:	ldr	x1, [x0]
  4014b0:	str	x1, [sp, #4376]
  4014b4:	mov	x1, #0x0                   	// #0
  4014b8:	str	xzr, [sp, #184]
  4014bc:	str	xzr, [sp, #192]
  4014c0:	mov	w0, #0xffffffff            	// #-1
  4014c4:	str	w0, [sp, #92]
  4014c8:	mov	w0, #0x7                   	// #7
  4014cc:	bl	401000 <log_set_target@plt>
  4014d0:	bl	401464 <udev_parse_config>
  4014d4:	mov	w0, #0x1                   	// #1
  4014d8:	bl	400f90 <log_parse_environment_realm@plt>
  4014dc:	bl	4010f0 <log_open@plt>
  4014e0:	ldr	w0, [sp, #76]
  4014e4:	cmp	w0, #0x2
  4014e8:	b.le	401590 <run+0x108>
  4014ec:	mov	w0, #0x3                   	// #3
  4014f0:	str	w0, [sp, #172]
  4014f4:	mov	w0, #0x16                  	// #22
  4014f8:	movk	w0, #0x4000, lsl #16
  4014fc:	str	w0, [sp, #176]
  401500:	mov	w0, #0x1                   	// #1
  401504:	str	w0, [sp, #180]
  401508:	ldr	w0, [sp, #180]
  40150c:	bl	401110 <log_get_max_level_realm@plt>
  401510:	mov	w1, w0
  401514:	ldr	w0, [sp, #172]
  401518:	and	w0, w0, #0x7
  40151c:	cmp	w1, w0
  401520:	b.lt	401578 <run+0xf0>  // b.tstop
  401524:	ldr	w0, [sp, #180]
  401528:	lsl	w1, w0, #10
  40152c:	ldr	w0, [sp, #172]
  401530:	orr	w7, w1, w0
  401534:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401538:	add	x1, x0, #0x63
  40153c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401540:	add	x0, x0, #0x8
  401544:	ldr	x0, [x0]
  401548:	mov	x6, x0
  40154c:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401550:	add	x5, x0, #0x80
  401554:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401558:	add	x4, x0, #0x260
  40155c:	mov	w3, #0x2f                  	// #47
  401560:	mov	x2, x1
  401564:	ldr	w1, [sp, #176]
  401568:	mov	w0, w7
  40156c:	bl	401070 <log_internal_realm@plt>
  401570:	mov	w19, w0
  401574:	b	401cdc <run+0x854>
  401578:	ldr	w0, [sp, #176]
  40157c:	cmp	w0, #0x0
  401580:	cneg	w0, w0, lt  // lt = tstop
  401584:	and	w0, w0, #0xff
  401588:	neg	w19, w0
  40158c:	b	401cdc <run+0x854>
  401590:	ldr	w0, [sp, #76]
  401594:	cmp	w0, #0x1
  401598:	b.ne	401650 <run+0x1c8>  // b.any
  40159c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4015a0:	add	x0, x0, #0x18
  4015a4:	ldr	x1, [x0]
  4015a8:	add	x0, sp, #0xb8
  4015ac:	bl	400fd0 <device_new_from_strv@plt>
  4015b0:	str	w0, [sp, #96]
  4015b4:	ldr	w0, [sp, #96]
  4015b8:	cmp	w0, #0x0
  4015bc:	b.ge	401704 <run+0x27c>  // b.tcont
  4015c0:	mov	w0, #0x3                   	// #3
  4015c4:	str	w0, [sp, #112]
  4015c8:	ldr	w0, [sp, #96]
  4015cc:	str	w0, [sp, #116]
  4015d0:	mov	w0, #0x1                   	// #1
  4015d4:	str	w0, [sp, #120]
  4015d8:	ldr	w0, [sp, #120]
  4015dc:	bl	401110 <log_get_max_level_realm@plt>
  4015e0:	mov	w1, w0
  4015e4:	ldr	w0, [sp, #112]
  4015e8:	and	w0, w0, #0x7
  4015ec:	cmp	w1, w0
  4015f0:	b.lt	401638 <run+0x1b0>  // b.tstop
  4015f4:	ldr	w0, [sp, #120]
  4015f8:	lsl	w1, w0, #10
  4015fc:	ldr	w0, [sp, #112]
  401600:	orr	w6, w1, w0
  401604:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401608:	add	x1, x0, #0x63
  40160c:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401610:	add	x5, x0, #0x98
  401614:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401618:	add	x4, x0, #0x260
  40161c:	mov	w3, #0x34                  	// #52
  401620:	mov	x2, x1
  401624:	ldr	w1, [sp, #116]
  401628:	mov	w0, w6
  40162c:	bl	401070 <log_internal_realm@plt>
  401630:	mov	w19, w0
  401634:	b	401cdc <run+0x854>
  401638:	ldr	w0, [sp, #116]
  40163c:	cmp	w0, #0x0
  401640:	cneg	w0, w0, lt  // lt = tstop
  401644:	and	w0, w0, #0xff
  401648:	neg	w19, w0
  40164c:	b	401cdc <run+0x854>
  401650:	ldr	x0, [sp, #64]
  401654:	add	x0, x0, #0x8
  401658:	ldr	x1, [x0]
  40165c:	add	x0, sp, #0xb8
  401660:	bl	4010c0 <sd_device_new_from_syspath@plt>
  401664:	str	w0, [sp, #96]
  401668:	ldr	w0, [sp, #96]
  40166c:	cmp	w0, #0x0
  401670:	b.ge	401704 <run+0x27c>  // b.tcont
  401674:	mov	w0, #0x3                   	// #3
  401678:	str	w0, [sp, #100]
  40167c:	ldr	w0, [sp, #96]
  401680:	str	w0, [sp, #104]
  401684:	mov	w0, #0x1                   	// #1
  401688:	str	w0, [sp, #108]
  40168c:	ldr	w0, [sp, #108]
  401690:	bl	401110 <log_get_max_level_realm@plt>
  401694:	mov	w1, w0
  401698:	ldr	w0, [sp, #100]
  40169c:	and	w0, w0, #0x7
  4016a0:	cmp	w1, w0
  4016a4:	b.lt	4016ec <run+0x264>  // b.tstop
  4016a8:	ldr	w0, [sp, #108]
  4016ac:	lsl	w1, w0, #10
  4016b0:	ldr	w0, [sp, #100]
  4016b4:	orr	w6, w1, w0
  4016b8:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4016bc:	add	x1, x0, #0x63
  4016c0:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4016c4:	add	x5, x0, #0xd0
  4016c8:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4016cc:	add	x4, x0, #0x260
  4016d0:	mov	w3, #0x38                  	// #56
  4016d4:	mov	x2, x1
  4016d8:	ldr	w1, [sp, #104]
  4016dc:	mov	w0, w6
  4016e0:	bl	401070 <log_internal_realm@plt>
  4016e4:	mov	w19, w0
  4016e8:	b	401cdc <run+0x854>
  4016ec:	ldr	w0, [sp, #104]
  4016f0:	cmp	w0, #0x0
  4016f4:	cneg	w0, w0, lt  // lt = tstop
  4016f8:	and	w0, w0, #0xff
  4016fc:	neg	w19, w0
  401700:	b	401cdc <run+0x854>
  401704:	ldr	x0, [sp, #184]
  401708:	add	x1, sp, #0xc8
  40170c:	bl	401120 <sd_device_get_parent@plt>
  401710:	str	w0, [sp, #96]
  401714:	ldr	w0, [sp, #96]
  401718:	cmp	w0, #0x0
  40171c:	b.ge	4017e4 <run+0x35c>  // b.tcont
  401720:	str	xzr, [sp, #216]
  401724:	ldr	x0, [sp, #184]
  401728:	str	x0, [sp, #272]
  40172c:	mov	w0, #0x3                   	// #3
  401730:	str	w0, [sp, #164]
  401734:	ldr	w0, [sp, #96]
  401738:	str	w0, [sp, #168]
  40173c:	ldr	x0, [sp, #272]
  401740:	cmp	x0, #0x0
  401744:	b.eq	401780 <run+0x2f8>  // b.none
  401748:	mov	w0, #0x1                   	// #1
  40174c:	bl	401110 <log_get_max_level_realm@plt>
  401750:	mov	w1, w0
  401754:	ldr	w0, [sp, #164]
  401758:	cmp	w0, w1
  40175c:	cset	w0, le
  401760:	and	w0, w0, #0xff
  401764:	and	x0, x0, #0xff
  401768:	cmp	x0, #0x0
  40176c:	b.eq	401780 <run+0x2f8>  // b.none
  401770:	add	x0, sp, #0xd8
  401774:	mov	x1, x0
  401778:	ldr	x0, [sp, #272]
  40177c:	bl	400fb0 <sd_device_get_sysname@plt>
  401780:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401784:	add	x2, x0, #0x63
  401788:	ldr	x0, [sp, #216]
  40178c:	cmp	x0, #0x0
  401790:	b.eq	4017a0 <run+0x318>  // b.none
  401794:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401798:	add	x0, x0, #0xf8
  40179c:	b	4017a4 <run+0x31c>
  4017a0:	mov	x0, #0x0                   	// #0
  4017a4:	ldr	x3, [sp, #216]
  4017a8:	adrp	x1, 402000 <__libc_csu_init+0x48>
  4017ac:	add	x1, x1, #0x100
  4017b0:	str	x1, [sp, #8]
  4017b4:	str	xzr, [sp]
  4017b8:	mov	x7, #0x0                   	// #0
  4017bc:	mov	x6, x3
  4017c0:	mov	x5, x0
  4017c4:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4017c8:	add	x4, x0, #0x260
  4017cc:	mov	w3, #0x3d                  	// #61
  4017d0:	ldr	w1, [sp, #168]
  4017d4:	ldr	w0, [sp, #164]
  4017d8:	bl	400fe0 <log_object_internal@plt>
  4017dc:	mov	w19, w0
  4017e0:	b	401cdc <run+0x854>
  4017e4:	ldr	x0, [sp, #200]
  4017e8:	add	x1, sp, #0xd0
  4017ec:	bl	4010e0 <sd_device_get_syspath@plt>
  4017f0:	str	w0, [sp, #96]
  4017f4:	ldr	w0, [sp, #96]
  4017f8:	cmp	w0, #0x0
  4017fc:	b.ge	4018c4 <run+0x43c>  // b.tcont
  401800:	str	xzr, [sp, #216]
  401804:	ldr	x0, [sp, #200]
  401808:	str	x0, [sp, #264]
  40180c:	mov	w0, #0x3                   	// #3
  401810:	str	w0, [sp, #156]
  401814:	ldr	w0, [sp, #96]
  401818:	str	w0, [sp, #160]
  40181c:	ldr	x0, [sp, #264]
  401820:	cmp	x0, #0x0
  401824:	b.eq	401860 <run+0x3d8>  // b.none
  401828:	mov	w0, #0x1                   	// #1
  40182c:	bl	401110 <log_get_max_level_realm@plt>
  401830:	mov	w1, w0
  401834:	ldr	w0, [sp, #156]
  401838:	cmp	w0, w1
  40183c:	cset	w0, le
  401840:	and	w0, w0, #0xff
  401844:	and	x0, x0, #0xff
  401848:	cmp	x0, #0x0
  40184c:	b.eq	401860 <run+0x3d8>  // b.none
  401850:	add	x0, sp, #0xd8
  401854:	mov	x1, x0
  401858:	ldr	x0, [sp, #264]
  40185c:	bl	400fb0 <sd_device_get_sysname@plt>
  401860:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401864:	add	x2, x0, #0x63
  401868:	ldr	x0, [sp, #216]
  40186c:	cmp	x0, #0x0
  401870:	b.eq	401880 <run+0x3f8>  // b.none
  401874:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401878:	add	x0, x0, #0xf8
  40187c:	b	401884 <run+0x3fc>
  401880:	mov	x0, #0x0                   	// #0
  401884:	ldr	x3, [sp, #216]
  401888:	adrp	x1, 402000 <__libc_csu_init+0x48>
  40188c:	add	x1, x1, #0x128
  401890:	str	x1, [sp, #8]
  401894:	str	xzr, [sp]
  401898:	mov	x7, #0x0                   	// #0
  40189c:	mov	x6, x3
  4018a0:	mov	x5, x0
  4018a4:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4018a8:	add	x4, x0, #0x260
  4018ac:	mov	w3, #0x41                  	// #65
  4018b0:	ldr	w1, [sp, #160]
  4018b4:	ldr	w0, [sp, #156]
  4018b8:	bl	400fe0 <log_object_internal@plt>
  4018bc:	mov	w19, w0
  4018c0:	b	401cdc <run+0x854>
  4018c4:	ldr	x3, [sp, #208]
  4018c8:	mov	x2, #0xffffffffffffffff    	// #-1
  4018cc:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4018d0:	add	x1, x0, #0x158
  4018d4:	mov	x0, x3
  4018d8:	bl	401030 <path_join_internal@plt>
  4018dc:	str	x0, [sp, #192]
  4018e0:	ldr	x0, [sp, #192]
  4018e4:	cmp	x0, #0x0
  4018e8:	b.ne	401910 <run+0x488>  // b.any
  4018ec:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4018f0:	add	x1, x0, #0x63
  4018f4:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4018f8:	add	x3, x0, #0x260
  4018fc:	mov	w2, #0x45                  	// #69
  401900:	mov	w0, #0x1                   	// #1
  401904:	bl	401100 <log_oom_internal@plt>
  401908:	mov	w19, w0
  40190c:	b	401cdc <run+0x854>
  401910:	ldr	x0, [sp, #192]
  401914:	mov	w1, #0x8000                	// #32768
  401918:	movk	w1, #0x8, lsl #16
  40191c:	bl	4010d0 <open64@plt>
  401920:	str	w0, [sp, #92]
  401924:	ldr	w0, [sp, #92]
  401928:	cmp	w0, #0x0
  40192c:	b.ge	401a00 <run+0x578>  // b.tcont
  401930:	str	xzr, [sp, #216]
  401934:	ldr	x0, [sp, #200]
  401938:	str	x0, [sp, #256]
  40193c:	mov	w0, #0x3                   	// #3
  401940:	str	w0, [sp, #148]
  401944:	bl	400ff0 <__errno_location@plt>
  401948:	ldr	w0, [x0]
  40194c:	str	w0, [sp, #152]
  401950:	ldr	x0, [sp, #256]
  401954:	cmp	x0, #0x0
  401958:	b.eq	401994 <run+0x50c>  // b.none
  40195c:	mov	w0, #0x1                   	// #1
  401960:	bl	401110 <log_get_max_level_realm@plt>
  401964:	mov	w1, w0
  401968:	ldr	w0, [sp, #148]
  40196c:	cmp	w0, w1
  401970:	cset	w0, le
  401974:	and	w0, w0, #0xff
  401978:	and	x0, x0, #0xff
  40197c:	cmp	x0, #0x0
  401980:	b.eq	401994 <run+0x50c>  // b.none
  401984:	add	x0, sp, #0xd8
  401988:	mov	x1, x0
  40198c:	ldr	x0, [sp, #256]
  401990:	bl	400fb0 <sd_device_get_sysname@plt>
  401994:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401998:	add	x2, x0, #0x63
  40199c:	ldr	x0, [sp, #216]
  4019a0:	cmp	x0, #0x0
  4019a4:	b.eq	4019b4 <run+0x52c>  // b.none
  4019a8:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4019ac:	add	x0, x0, #0xf8
  4019b0:	b	4019b8 <run+0x530>
  4019b4:	mov	x0, #0x0                   	// #0
  4019b8:	ldr	x3, [sp, #216]
  4019bc:	ldr	x1, [sp, #192]
  4019c0:	str	x1, [sp, #16]
  4019c4:	adrp	x1, 402000 <__libc_csu_init+0x48>
  4019c8:	add	x1, x1, #0x170
  4019cc:	str	x1, [sp, #8]
  4019d0:	str	xzr, [sp]
  4019d4:	mov	x7, #0x0                   	// #0
  4019d8:	mov	x6, x3
  4019dc:	mov	x5, x0
  4019e0:	adrp	x0, 402000 <__libc_csu_init+0x48>
  4019e4:	add	x4, x0, #0x260
  4019e8:	mov	w3, #0x49                  	// #73
  4019ec:	ldr	w1, [sp, #152]
  4019f0:	ldr	w0, [sp, #148]
  4019f4:	bl	400fe0 <log_object_internal@plt>
  4019f8:	mov	w19, w0
  4019fc:	b	401cdc <run+0x854>
  401a00:	ldr	w0, [sp, #92]
  401a04:	add	x1, sp, #0x118
  401a08:	mov	x2, #0x1000                	// #4096
  401a0c:	bl	401010 <read@plt>
  401a10:	str	x0, [sp, #224]
  401a14:	ldr	x0, [sp, #224]
  401a18:	cmp	x0, #0x0
  401a1c:	b.ge	401af0 <run+0x668>  // b.tcont
  401a20:	str	xzr, [sp, #216]
  401a24:	ldr	x0, [sp, #200]
  401a28:	str	x0, [sp, #248]
  401a2c:	mov	w0, #0x3                   	// #3
  401a30:	str	w0, [sp, #140]
  401a34:	bl	400ff0 <__errno_location@plt>
  401a38:	ldr	w0, [x0]
  401a3c:	str	w0, [sp, #144]
  401a40:	ldr	x0, [sp, #248]
  401a44:	cmp	x0, #0x0
  401a48:	b.eq	401a84 <run+0x5fc>  // b.none
  401a4c:	mov	w0, #0x1                   	// #1
  401a50:	bl	401110 <log_get_max_level_realm@plt>
  401a54:	mov	w1, w0
  401a58:	ldr	w0, [sp, #140]
  401a5c:	cmp	w0, w1
  401a60:	cset	w0, le
  401a64:	and	w0, w0, #0xff
  401a68:	and	x0, x0, #0xff
  401a6c:	cmp	x0, #0x0
  401a70:	b.eq	401a84 <run+0x5fc>  // b.none
  401a74:	add	x0, sp, #0xd8
  401a78:	mov	x1, x0
  401a7c:	ldr	x0, [sp, #248]
  401a80:	bl	400fb0 <sd_device_get_sysname@plt>
  401a84:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401a88:	add	x2, x0, #0x63
  401a8c:	ldr	x0, [sp, #216]
  401a90:	cmp	x0, #0x0
  401a94:	b.eq	401aa4 <run+0x61c>  // b.none
  401a98:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401a9c:	add	x0, x0, #0xf8
  401aa0:	b	401aa8 <run+0x620>
  401aa4:	mov	x0, #0x0                   	// #0
  401aa8:	ldr	x3, [sp, #216]
  401aac:	ldr	x1, [sp, #192]
  401ab0:	str	x1, [sp, #16]
  401ab4:	adrp	x1, 402000 <__libc_csu_init+0x48>
  401ab8:	add	x1, x1, #0x1a0
  401abc:	str	x1, [sp, #8]
  401ac0:	str	xzr, [sp]
  401ac4:	mov	x7, #0x0                   	// #0
  401ac8:	mov	x6, x3
  401acc:	mov	x5, x0
  401ad0:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401ad4:	add	x4, x0, #0x260
  401ad8:	mov	w3, #0x4e                  	// #78
  401adc:	ldr	w1, [sp, #144]
  401ae0:	ldr	w0, [sp, #140]
  401ae4:	bl	400fe0 <log_object_internal@plt>
  401ae8:	mov	w19, w0
  401aec:	b	401cdc <run+0x854>
  401af0:	ldr	x0, [sp, #224]
  401af4:	cmp	x0, #0x0
  401af8:	b.ne	401bcc <run+0x744>  // b.any
  401afc:	str	xzr, [sp, #216]
  401b00:	ldr	x0, [sp, #200]
  401b04:	str	x0, [sp, #240]
  401b08:	mov	w0, #0x7                   	// #7
  401b0c:	str	w0, [sp, #132]
  401b10:	mov	w0, #0x16                  	// #22
  401b14:	movk	w0, #0x4000, lsl #16
  401b18:	str	w0, [sp, #136]
  401b1c:	ldr	x0, [sp, #240]
  401b20:	cmp	x0, #0x0
  401b24:	b.eq	401b60 <run+0x6d8>  // b.none
  401b28:	mov	w0, #0x1                   	// #1
  401b2c:	bl	401110 <log_get_max_level_realm@plt>
  401b30:	mov	w1, w0
  401b34:	ldr	w0, [sp, #132]
  401b38:	cmp	w0, w1
  401b3c:	cset	w0, le
  401b40:	and	w0, w0, #0xff
  401b44:	and	x0, x0, #0xff
  401b48:	cmp	x0, #0x0
  401b4c:	b.eq	401b60 <run+0x6d8>  // b.none
  401b50:	add	x0, sp, #0xd8
  401b54:	mov	x1, x0
  401b58:	ldr	x0, [sp, #240]
  401b5c:	bl	400fb0 <sd_device_get_sysname@plt>
  401b60:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401b64:	add	x2, x0, #0x63
  401b68:	ldr	x0, [sp, #216]
  401b6c:	cmp	x0, #0x0
  401b70:	b.eq	401b80 <run+0x6f8>  // b.none
  401b74:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401b78:	add	x0, x0, #0xf8
  401b7c:	b	401b84 <run+0x6fc>
  401b80:	mov	x0, #0x0                   	// #0
  401b84:	ldr	x3, [sp, #216]
  401b88:	ldr	x1, [sp, #192]
  401b8c:	str	x1, [sp, #16]
  401b90:	adrp	x1, 402000 <__libc_csu_init+0x48>
  401b94:	add	x1, x1, #0x1d0
  401b98:	str	x1, [sp, #8]
  401b9c:	str	xzr, [sp]
  401ba0:	mov	x7, #0x0                   	// #0
  401ba4:	mov	x6, x3
  401ba8:	mov	x5, x0
  401bac:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401bb0:	add	x4, x0, #0x260
  401bb4:	mov	w3, #0x51                  	// #81
  401bb8:	ldr	w1, [sp, #136]
  401bbc:	ldr	w0, [sp, #132]
  401bc0:	bl	400fe0 <log_object_internal@plt>
  401bc4:	mov	w19, w0
  401bc8:	b	401cdc <run+0x854>
  401bcc:	ldr	x1, [sp, #224]
  401bd0:	add	x0, sp, #0x118
  401bd4:	bl	401d80 <is_fido_security_token_desc>
  401bd8:	str	w0, [sp, #96]
  401bdc:	ldr	w0, [sp, #96]
  401be0:	cmp	w0, #0x0
  401be4:	b.ge	401cb4 <run+0x82c>  // b.tcont
  401be8:	str	xzr, [sp, #216]
  401bec:	ldr	x0, [sp, #200]
  401bf0:	str	x0, [sp, #232]
  401bf4:	mov	w0, #0x7                   	// #7
  401bf8:	str	w0, [sp, #124]
  401bfc:	ldr	w0, [sp, #96]
  401c00:	str	w0, [sp, #128]
  401c04:	ldr	x0, [sp, #232]
  401c08:	cmp	x0, #0x0
  401c0c:	b.eq	401c48 <run+0x7c0>  // b.none
  401c10:	mov	w0, #0x1                   	// #1
  401c14:	bl	401110 <log_get_max_level_realm@plt>
  401c18:	mov	w1, w0
  401c1c:	ldr	w0, [sp, #124]
  401c20:	cmp	w0, w1
  401c24:	cset	w0, le
  401c28:	and	w0, w0, #0xff
  401c2c:	and	x0, x0, #0xff
  401c30:	cmp	x0, #0x0
  401c34:	b.eq	401c48 <run+0x7c0>  // b.none
  401c38:	add	x0, sp, #0xd8
  401c3c:	mov	x1, x0
  401c40:	ldr	x0, [sp, #232]
  401c44:	bl	400fb0 <sd_device_get_sysname@plt>
  401c48:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401c4c:	add	x2, x0, #0x63
  401c50:	ldr	x0, [sp, #216]
  401c54:	cmp	x0, #0x0
  401c58:	b.eq	401c68 <run+0x7e0>  // b.none
  401c5c:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401c60:	add	x0, x0, #0xf8
  401c64:	b	401c6c <run+0x7e4>
  401c68:	mov	x0, #0x0                   	// #0
  401c6c:	ldr	x3, [sp, #216]
  401c70:	ldr	x1, [sp, #192]
  401c74:	str	x1, [sp, #16]
  401c78:	adrp	x1, 402000 <__libc_csu_init+0x48>
  401c7c:	add	x1, x1, #0x1f8
  401c80:	str	x1, [sp, #8]
  401c84:	str	xzr, [sp]
  401c88:	mov	x7, #0x0                   	// #0
  401c8c:	mov	x6, x3
  401c90:	mov	x5, x0
  401c94:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401c98:	add	x4, x0, #0x260
  401c9c:	mov	w3, #0x56                  	// #86
  401ca0:	ldr	w1, [sp, #128]
  401ca4:	ldr	w0, [sp, #124]
  401ca8:	bl	400fe0 <log_object_internal@plt>
  401cac:	mov	w19, w0
  401cb0:	b	401cdc <run+0x854>
  401cb4:	ldr	w0, [sp, #96]
  401cb8:	cmp	w0, #0x0
  401cbc:	b.le	401cd8 <run+0x850>
  401cc0:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401cc4:	add	x0, x0, #0x228
  401cc8:	bl	401090 <puts@plt>
  401ccc:	adrp	x0, 402000 <__libc_csu_init+0x48>
  401cd0:	add	x0, x0, #0x238
  401cd4:	bl	401090 <puts@plt>
  401cd8:	mov	w19, #0x0                   	// #0
  401cdc:	add	x0, sp, #0x5c
  401ce0:	bl	4013b8 <closep>
  401ce4:	add	x0, sp, #0xc0
  401ce8:	bl	40135c <freep>
  401cec:	add	x0, sp, #0xb8
  401cf0:	bl	4012f8 <sd_device_unrefp>
  401cf4:	mov	w1, w19
  401cf8:	adrp	x0, 412000 <__FRAME_END__+0xfb00>
  401cfc:	add	x0, x0, #0xcb8
  401d00:	ldr	x2, [sp, #4376]
  401d04:	ldr	x0, [x0]
  401d08:	eor	x0, x2, x0
  401d0c:	cmp	x0, #0x0
  401d10:	b.eq	401d18 <run+0x890>  // b.none
  401d14:	bl	401020 <__stack_chk_fail@plt>
  401d18:	mov	w0, w1
  401d1c:	ldr	x19, [sp, #48]
  401d20:	ldp	x29, x30, [sp, #32]
  401d24:	mov	x12, #0x1120                	// #4384
  401d28:	add	sp, sp, x12
  401d2c:	ret

0000000000401d30 <main>:
  401d30:	stp	x29, x30, [sp, #-48]!
  401d34:	mov	x29, sp
  401d38:	str	w0, [sp, #28]
  401d3c:	str	x1, [sp, #16]
  401d40:	ldr	x1, [sp, #16]
  401d44:	ldr	w0, [sp, #28]
  401d48:	bl	401380 <save_argc_argv>
  401d4c:	ldr	x1, [sp, #16]
  401d50:	ldr	w0, [sp, #28]
  401d54:	bl	401488 <run>
  401d58:	str	w0, [sp, #44]
  401d5c:	bl	401040 <ask_password_agent_close@plt>
  401d60:	bl	400f80 <polkit_agent_close@plt>
  401d64:	bl	401050 <pager_close@plt>
  401d68:	bl	4010b0 <mac_selinux_finish@plt>
  401d6c:	bl	4013dc <static_destruct>
  401d70:	ldr	w0, [sp, #44]
  401d74:	lsr	w0, w0, #31
  401d78:	ldp	x29, x30, [sp], #48
  401d7c:	ret

0000000000401d80 <is_fido_security_token_desc>:
  401d80:	sub	sp, sp, #0x40
  401d84:	str	x0, [sp, #8]
  401d88:	str	x1, [sp]
  401d8c:	str	wzr, [sp, #32]
  401d90:	str	xzr, [sp, #40]
  401d94:	b	401f98 <is_fido_security_token_desc+0x218>
  401d98:	ldr	x1, [sp, #8]
  401d9c:	ldr	x0, [sp, #40]
  401da0:	add	x0, x1, x0
  401da4:	ldrb	w0, [x0]
  401da8:	cmp	w0, #0xfe
  401dac:	b.ne	401df8 <is_fido_security_token_desc+0x78>  // b.any
  401db0:	ldr	x0, [sp, #40]
  401db4:	add	x0, x0, #0x1
  401db8:	ldr	x1, [sp]
  401dbc:	cmp	x1, x0
  401dc0:	b.hi	401dcc <is_fido_security_token_desc+0x4c>  // b.pmore
  401dc4:	mov	w0, #0xffffffea            	// #-22
  401dc8:	b	401fac <is_fido_security_token_desc+0x22c>
  401dcc:	ldr	x0, [sp, #40]
  401dd0:	add	x0, x0, #0x1
  401dd4:	ldr	x1, [sp, #8]
  401dd8:	add	x0, x1, x0
  401ddc:	ldrb	w0, [x0]
  401de0:	add	w0, w0, #0x3
  401de4:	sxtw	x0, w0
  401de8:	ldr	x1, [sp, #40]
  401dec:	add	x0, x1, x0
  401df0:	str	x0, [sp, #40]
  401df4:	b	401f98 <is_fido_security_token_desc+0x218>
  401df8:	ldr	x1, [sp, #8]
  401dfc:	ldr	x0, [sp, #40]
  401e00:	add	x0, x1, x0
  401e04:	ldrb	w0, [x0]
  401e08:	lsr	w0, w0, #4
  401e0c:	strb	w0, [sp, #29]
  401e10:	ldr	x1, [sp, #8]
  401e14:	ldr	x0, [sp, #40]
  401e18:	add	x0, x1, x0
  401e1c:	ldrb	w0, [x0]
  401e20:	lsr	w0, w0, #2
  401e24:	and	w0, w0, #0xff
  401e28:	and	w0, w0, #0x3
  401e2c:	strb	w0, [sp, #30]
  401e30:	ldr	x1, [sp, #8]
  401e34:	ldr	x0, [sp, #40]
  401e38:	add	x0, x1, x0
  401e3c:	ldrb	w0, [x0]
  401e40:	and	w0, w0, #0x3
  401e44:	strb	w0, [sp, #31]
  401e48:	ldrb	w0, [sp, #31]
  401e4c:	cmp	w0, #0x2
  401e50:	b.hi	401e5c <is_fido_security_token_desc+0xdc>  // b.pmore
  401e54:	ldrb	w0, [sp, #31]
  401e58:	b	401e60 <is_fido_security_token_desc+0xe0>
  401e5c:	mov	x0, #0x4                   	// #4
  401e60:	str	x0, [sp, #56]
  401e64:	ldr	x0, [sp, #40]
  401e68:	add	x0, x0, #0x1
  401e6c:	str	x0, [sp, #40]
  401e70:	ldr	x1, [sp, #40]
  401e74:	ldr	x0, [sp, #56]
  401e78:	add	x0, x1, x0
  401e7c:	ldr	x1, [sp]
  401e80:	cmp	x1, x0
  401e84:	b.cs	401e90 <is_fido_security_token_desc+0x110>  // b.hs, b.nlast
  401e88:	mov	w0, #0xffffffea            	// #-22
  401e8c:	b	401fac <is_fido_security_token_desc+0x22c>
  401e90:	str	wzr, [sp, #36]
  401e94:	str	xzr, [sp, #48]
  401e98:	b	401edc <is_fido_security_token_desc+0x15c>
  401e9c:	ldr	x1, [sp, #40]
  401ea0:	ldr	x0, [sp, #48]
  401ea4:	add	x0, x1, x0
  401ea8:	ldr	x1, [sp, #8]
  401eac:	add	x0, x1, x0
  401eb0:	ldrb	w0, [x0]
  401eb4:	mov	w1, w0
  401eb8:	ldr	x0, [sp, #48]
  401ebc:	lsl	w0, w0, #3
  401ec0:	lsl	w0, w1, w0
  401ec4:	ldr	w1, [sp, #36]
  401ec8:	orr	w0, w1, w0
  401ecc:	str	w0, [sp, #36]
  401ed0:	ldr	x0, [sp, #48]
  401ed4:	add	x0, x0, #0x1
  401ed8:	str	x0, [sp, #48]
  401edc:	ldr	x1, [sp, #48]
  401ee0:	ldr	x0, [sp, #56]
  401ee4:	cmp	x1, x0
  401ee8:	b.cc	401e9c <is_fido_security_token_desc+0x11c>  // b.lo, b.ul, b.last
  401eec:	ldr	x1, [sp, #40]
  401ef0:	ldr	x0, [sp, #56]
  401ef4:	add	x0, x1, x0
  401ef8:	str	x0, [sp, #40]
  401efc:	ldrb	w0, [sp, #30]
  401f00:	cmp	w0, #0x1
  401f04:	b.ne	401f34 <is_fido_security_token_desc+0x1b4>  // b.any
  401f08:	ldrb	w0, [sp, #29]
  401f0c:	cmp	w0, #0x0
  401f10:	b.ne	401f34 <is_fido_security_token_desc+0x1b4>  // b.any
  401f14:	ldr	x0, [sp, #56]
  401f18:	cmp	x0, #0x2
  401f1c:	b.ls	401f28 <is_fido_security_token_desc+0x1a8>  // b.plast
  401f20:	mov	w0, #0xffffffea            	// #-22
  401f24:	b	401fac <is_fido_security_token_desc+0x22c>
  401f28:	ldr	w0, [sp, #36]
  401f2c:	lsl	w0, w0, #16
  401f30:	str	w0, [sp, #32]
  401f34:	ldrb	w0, [sp, #30]
  401f38:	cmp	w0, #0x2
  401f3c:	b.ne	401f98 <is_fido_security_token_desc+0x218>  // b.any
  401f40:	ldrb	w0, [sp, #29]
  401f44:	cmp	w0, #0x0
  401f48:	b.ne	401f98 <is_fido_security_token_desc+0x218>  // b.any
  401f4c:	ldr	x0, [sp, #56]
  401f50:	cmp	x0, #0x4
  401f54:	b.ne	401f64 <is_fido_security_token_desc+0x1e4>  // b.any
  401f58:	ldr	w0, [sp, #36]
  401f5c:	str	w0, [sp, #32]
  401f60:	b	401f7c <is_fido_security_token_desc+0x1fc>
  401f64:	ldr	w0, [sp, #32]
  401f68:	and	w1, w0, #0xffff0000
  401f6c:	ldr	w0, [sp, #36]
  401f70:	and	w0, w0, #0xffff
  401f74:	orr	w0, w1, w0
  401f78:	str	w0, [sp, #32]
  401f7c:	ldr	w1, [sp, #32]
  401f80:	mov	w0, #0x1                   	// #1
  401f84:	movk	w0, #0xf1d0, lsl #16
  401f88:	cmp	w1, w0
  401f8c:	b.ne	401f98 <is_fido_security_token_desc+0x218>  // b.any
  401f90:	mov	w0, #0x1                   	// #1
  401f94:	b	401fac <is_fido_security_token_desc+0x22c>
  401f98:	ldr	x1, [sp, #40]
  401f9c:	ldr	x0, [sp]
  401fa0:	cmp	x1, x0
  401fa4:	b.cc	401d98 <is_fido_security_token_desc+0x18>  // b.lo, b.ul, b.last
  401fa8:	mov	w0, #0x0                   	// #0
  401fac:	add	sp, sp, #0x40
  401fb0:	ret
  401fb4:	nop

0000000000401fb8 <__libc_csu_init>:
  401fb8:	stp	x29, x30, [sp, #-64]!
  401fbc:	mov	x29, sp
  401fc0:	stp	x19, x20, [sp, #16]
  401fc4:	adrp	x20, 412000 <__FRAME_END__+0xfb00>
  401fc8:	add	x20, x20, #0xcb0
  401fcc:	stp	x21, x22, [sp, #32]
  401fd0:	adrp	x21, 412000 <__FRAME_END__+0xfb00>
  401fd4:	add	x21, x21, #0xca8
  401fd8:	sub	x20, x20, x21
  401fdc:	mov	w22, w0
  401fe0:	stp	x23, x24, [sp, #48]
  401fe4:	mov	x23, x1
  401fe8:	mov	x24, x2
  401fec:	bl	400f20 <_init>
  401ff0:	cmp	xzr, x20, asr #3
  401ff4:	b.eq	402020 <__libc_csu_init+0x68>  // b.none
  401ff8:	asr	x20, x20, #3
  401ffc:	mov	x19, #0x0                   	// #0
  402000:	ldr	x3, [x21, x19, lsl #3]
  402004:	mov	x2, x24
  402008:	add	x19, x19, #0x1
  40200c:	mov	x1, x23
  402010:	mov	w0, w22
  402014:	blr	x3
  402018:	cmp	x20, x19
  40201c:	b.ne	402000 <__libc_csu_init+0x48>  // b.any
  402020:	ldp	x19, x20, [sp, #16]
  402024:	ldp	x21, x22, [sp, #32]
  402028:	ldp	x23, x24, [sp, #48]
  40202c:	ldp	x29, x30, [sp], #64
  402030:	ret
  402034:	nop

0000000000402038 <__libc_csu_fini>:
  402038:	ret

Disassembly of section .fini:

000000000040203c <_fini>:
  40203c:	stp	x29, x30, [sp, #-16]!
  402040:	mov	x29, sp
  402044:	ldp	x29, x30, [sp], #16
  402048:	ret
