
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//offsetio.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_offset_close>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #80]
  14:	ldr	x0, [x0]
  18:	cbz	x0, 20 <grub_offset_close+0x20>
  1c:	bl	0 <grub_file_close>
  20:	str	xzr, [x19, #8]
  24:	mov	w0, #0x0                   	// #0
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

0000000000000034 <grub_offset_read>:
  34:	stp	x29, x30, [sp, #-48]!
  38:	mov	x29, sp
  3c:	stp	x19, x20, [sp, #16]
  40:	str	x21, [sp, #32]
  44:	mov	x20, x1
  48:	mov	x21, x2
  4c:	ldr	x19, [x0, #80]
  50:	ldr	x1, [x19, #8]
  54:	ldr	x0, [x0, #24]
  58:	add	x1, x1, x0
  5c:	ldr	x0, [x19]
  60:	bl	0 <grub_file_seek>
  64:	cmn	x0, #0x1
  68:	b.eq	8c <grub_offset_read+0x58>  // b.none
  6c:	mov	x2, x21
  70:	mov	x1, x20
  74:	ldr	x0, [x19]
  78:	bl	0 <grub_file_read>
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	mov	x0, #0xffffffffffffffff    	// #-1
  90:	b	7c <grub_offset_read+0x48>

0000000000000094 <grub_file_offset_close>:
  94:	stp	x29, x30, [sp, #-16]!
  98:	mov	x29, sp
  9c:	ldr	x1, [x0, #80]
  a0:	str	xzr, [x1]
  a4:	bl	0 <grub_file_close>
  a8:	ldp	x29, x30, [sp], #16
  ac:	ret

00000000000000b0 <grub_file_offset_open>:
  b0:	stp	x29, x30, [sp, #-64]!
  b4:	mov	x29, sp
  b8:	stp	x19, x20, [sp, #16]
  bc:	stp	x21, x22, [sp, #32]
  c0:	stp	x23, x24, [sp, #48]
  c4:	mov	x20, x0
  c8:	mov	w22, w1
  cc:	mov	x23, x2
  d0:	mov	x24, x3
  d4:	mov	x0, #0x68                  	// #104
  d8:	bl	0 <grub_zalloc>
  dc:	mov	x19, x0
  e0:	mov	x0, #0x10                  	// #16
  e4:	bl	0 <grub_zalloc>
  e8:	mov	x21, x0
  ec:	cmp	x19, #0x0
  f0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  f4:	b.eq	12c <grub_file_offset_open+0x7c>  // b.none
  f8:	str	x23, [x0, #8]
  fc:	str	x20, [x0]
 100:	ldr	x0, [x20, #8]
 104:	str	x0, [x19, #8]
 108:	str	x21, [x19, #80]
 10c:	adrp	x0, 0 <grub_offset_close>
 110:	ldr	x0, [x0]
 114:	str	x0, [x19, #16]
 118:	str	x24, [x19, #64]
 11c:	mov	x20, #0x2                   	// #2
 120:	mov	x1, #0x0                   	// #0
 124:	adrp	x23, 0 <grub_offset_close>
 128:	b	160 <grub_file_offset_open+0xb0>
 12c:	mov	x0, x19
 130:	bl	0 <grub_free>
 134:	mov	x0, x21
 138:	bl	0 <grub_free>
 13c:	mov	x19, #0x0                   	// #0
 140:	b	188 <grub_file_offset_open+0xd8>
 144:	cmp	x19, #0x0
 148:	cset	w3, ne  // ne = any
 14c:	cmp	w20, #0x3
 150:	cset	w2, ls  // ls = plast
 154:	add	x20, x20, #0x1
 158:	tst	w3, w2
 15c:	b.eq	184 <grub_file_offset_open+0xd4>  // b.none
 160:	ldr	x2, [x23]
 164:	ldr	x2, [x2, x20, lsl #3]
 168:	cbz	x2, 144 <grub_file_offset_open+0x94>
 16c:	mov	w1, w22
 170:	mov	x0, x19
 174:	blr	x2
 178:	mov	x1, x19
 17c:	mov	x19, x0
 180:	b	144 <grub_file_offset_open+0x94>
 184:	cbz	x19, 1a0 <grub_file_offset_open+0xf0>
 188:	mov	x0, x19
 18c:	ldp	x19, x20, [sp, #16]
 190:	ldp	x21, x22, [sp, #32]
 194:	ldp	x23, x24, [sp, #48]
 198:	ldp	x29, x30, [sp], #64
 19c:	ret
 1a0:	str	xzr, [x21]
 1a4:	mov	x0, x1
 1a8:	bl	0 <grub_file_close>
 1ac:	b	188 <grub_file_offset_open+0xd8>
	...
