
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-random-seed_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400fe8 <_init>:
  400fe8:	stp	x29, x30, [sp, #-16]!
  400fec:	mov	x29, sp
  400ff0:	bl	4012c0 <call_weak_fn>
  400ff4:	ldp	x29, x30, [sp], #16
  400ff8:	ret

Disassembly of section .plt:

0000000000401000 <__libc_start_main@plt-0x20>:
  401000:	stp	x16, x30, [sp, #-16]!
  401004:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401008:	ldr	x17, [x16, #3792]
  40100c:	add	x16, x16, #0xed0
  401010:	br	x17
  401014:	nop
  401018:	nop
  40101c:	nop

0000000000401020 <__libc_start_main@plt>:
  401020:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401024:	ldr	x17, [x16, #3800]
  401028:	add	x16, x16, #0xed8
  40102c:	br	x17

0000000000401030 <abort@plt>:
  401030:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401034:	ldr	x17, [x16, #3808]
  401038:	add	x16, x16, #0xee0
  40103c:	br	x17

0000000000401040 <__gmon_start__@plt>:
  401040:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401044:	ldr	x17, [x16, #3816]
  401048:	add	x16, x16, #0xee8
  40104c:	br	x17

0000000000401050 <log_setup_service@plt>:
  401050:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401054:	ldr	x17, [x16, #3824]
  401058:	add	x16, x16, #0xef0
  40105c:	br	x17

0000000000401060 <umask@plt>:
  401060:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401064:	ldr	x17, [x16, #3832]
  401068:	add	x16, x16, #0xef8
  40106c:	br	x17

0000000000401070 <random_pool_size@plt>:
  401070:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401074:	ldr	x17, [x16, #3840]
  401078:	add	x16, x16, #0xf00
  40107c:	br	x17

0000000000401080 <mkdir_parents@plt>:
  401080:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401084:	ldr	x17, [x16, #3848]
  401088:	add	x16, x16, #0xf08
  40108c:	br	x17

0000000000401090 <strcmp@plt>:
  401090:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401094:	ldr	x17, [x16, #3856]
  401098:	add	x16, x16, #0xf10
  40109c:	br	x17

00000000004010a0 <log_get_max_level_realm@plt>:
  4010a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4010a4:	ldr	x17, [x16, #3864]
  4010a8:	add	x16, x16, #0xf18
  4010ac:	br	x17

00000000004010b0 <log_internal_realm@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4010b4:	ldr	x17, [x16, #3872]
  4010b8:	add	x16, x16, #0xf20
  4010bc:	br	x17

00000000004010c0 <free@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4010c4:	ldr	x17, [x16, #3880]
  4010c8:	add	x16, x16, #0xf28
  4010cc:	br	x17

00000000004010d0 <safe_close@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4010d4:	ldr	x17, [x16, #3888]
  4010d8:	add	x16, x16, #0xf30
  4010dc:	br	x17

00000000004010e0 <ask_password_agent_close@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4010e4:	ldr	x17, [x16, #3896]
  4010e8:	add	x16, x16, #0xf38
  4010ec:	br	x17

00000000004010f0 <polkit_agent_close@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4010f4:	ldr	x17, [x16, #3904]
  4010f8:	add	x16, x16, #0xf40
  4010fc:	br	x17

0000000000401100 <pager_close@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401104:	ldr	x17, [x16, #3912]
  401108:	add	x16, x16, #0xf48
  40110c:	br	x17

0000000000401110 <mac_selinux_finish@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401114:	ldr	x17, [x16, #3920]
  401118:	add	x16, x16, #0xf50
  40111c:	br	x17

0000000000401120 <open64@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401124:	ldr	x17, [x16, #3928]
  401128:	add	x16, x16, #0xf58
  40112c:	br	x17

0000000000401130 <__errno_location@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401134:	ldr	x17, [x16, #3936]
  401138:	add	x16, x16, #0xf60
  40113c:	br	x17

0000000000401140 <malloc@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401144:	ldr	x17, [x16, #3944]
  401148:	add	x16, x16, #0xf68
  40114c:	br	x17

0000000000401150 <sd_id128_get_machine@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401154:	ldr	x17, [x16, #3952]
  401158:	add	x16, x16, #0xf70
  40115c:	br	x17

0000000000401160 <loop_write@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401164:	ldr	x17, [x16, #3960]
  401168:	add	x16, x16, #0xf78
  40116c:	br	x17

0000000000401170 <log_oom_internal@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401174:	ldr	x17, [x16, #3968]
  401178:	add	x16, x16, #0xf80
  40117c:	br	x17

0000000000401180 <loop_read@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401184:	ldr	x17, [x16, #3976]
  401188:	add	x16, x16, #0xf88
  40118c:	br	x17

0000000000401190 <lseek64@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401194:	ldr	x17, [x16, #3984]
  401198:	add	x16, x16, #0xf90
  40119c:	br	x17

00000000004011a0 <getenv@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4011a4:	ldr	x17, [x16, #3992]
  4011a8:	add	x16, x16, #0xf98
  4011ac:	br	x17

00000000004011b0 <parse_boolean@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4011b4:	ldr	x17, [x16, #4000]
  4011b8:	add	x16, x16, #0xfa0
  4011bc:	br	x17

00000000004011c0 <fgetxattr_malloc@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4011c4:	ldr	x17, [x16, #4008]
  4011c8:	add	x16, x16, #0xfa8
  4011cc:	br	x17

00000000004011d0 <access@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4011d4:	ldr	x17, [x16, #4016]
  4011d8:	add	x16, x16, #0xfb0
  4011dc:	br	x17

00000000004011e0 <fremovexattr@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4011e4:	ldr	x17, [x16, #4024]
  4011e8:	add	x16, x16, #0xfb8
  4011ec:	br	x17

00000000004011f0 <fsync_full@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  4011f4:	ldr	x17, [x16, #4032]
  4011f8:	add	x16, x16, #0xfc0
  4011fc:	br	x17

0000000000401200 <memcpy@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401204:	ldr	x17, [x16, #4040]
  401208:	add	x16, x16, #0xfc8
  40120c:	br	x17

0000000000401210 <ioctl@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401214:	ldr	x17, [x16, #4048]
  401218:	add	x16, x16, #0xfd0
  40121c:	br	x17

0000000000401220 <fchmod_and_chown@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401224:	ldr	x17, [x16, #4056]
  401228:	add	x16, x16, #0xfd8
  40122c:	br	x17

0000000000401230 <getrandom@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401234:	ldr	x17, [x16, #4064]
  401238:	add	x16, x16, #0xfe0
  40123c:	br	x17

0000000000401240 <ftruncate64@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401244:	ldr	x17, [x16, #4072]
  401248:	add	x16, x16, #0xfe8
  40124c:	br	x17

0000000000401250 <fsetxattr@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401254:	ldr	x17, [x16, #4080]
  401258:	add	x16, x16, #0xff0
  40125c:	br	x17

0000000000401260 <__fxstat64@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1c350>
  401264:	ldr	x17, [x16, #4088]
  401268:	add	x16, x16, #0xff8
  40126c:	br	x17

Disassembly of section .text:

0000000000401270 <_start>:
  401270:	mov	x29, #0x0                   	// #0
  401274:	mov	x30, #0x0                   	// #0
  401278:	mov	x5, x0
  40127c:	ldr	x1, [sp]
  401280:	add	x2, sp, #0x8
  401284:	mov	x6, sp
  401288:	movz	x0, #0x0, lsl #48
  40128c:	movk	x0, #0x0, lsl #32
  401290:	movk	x0, #0x40, lsl #16
  401294:	movk	x0, #0x139c
  401298:	movz	x3, #0x0, lsl #48
  40129c:	movk	x3, #0x0, lsl #32
  4012a0:	movk	x3, #0x40, lsl #16
  4012a4:	movk	x3, #0x2298
  4012a8:	movz	x4, #0x0, lsl #48
  4012ac:	movk	x4, #0x0, lsl #32
  4012b0:	movk	x4, #0x40, lsl #16
  4012b4:	movk	x4, #0x2318
  4012b8:	bl	401020 <__libc_start_main@plt>
  4012bc:	bl	401030 <abort@plt>

00000000004012c0 <call_weak_fn>:
  4012c0:	adrp	x0, 41f000 <__FRAME_END__+0x1c350>
  4012c4:	ldr	x0, [x0, #3752]
  4012c8:	cbz	x0, 4012d0 <call_weak_fn+0x10>
  4012cc:	b	401040 <__gmon_start__@plt>
  4012d0:	ret

00000000004012d4 <deregister_tm_clones>:
  4012d4:	adrp	x0, 420000 <completed.8445>
  4012d8:	add	x1, x0, #0x0
  4012dc:	adrp	x0, 420000 <completed.8445>
  4012e0:	add	x0, x0, #0x0
  4012e4:	cmp	x1, x0
  4012e8:	b.eq	401314 <deregister_tm_clones+0x40>  // b.none
  4012ec:	sub	sp, sp, #0x10
  4012f0:	adrp	x1, 402000 <main+0xc64>
  4012f4:	ldr	x1, [x1, #832]
  4012f8:	str	x1, [sp, #8]
  4012fc:	cbz	x1, 40130c <deregister_tm_clones+0x38>
  401300:	mov	x16, x1
  401304:	add	sp, sp, #0x10
  401308:	br	x16
  40130c:	add	sp, sp, #0x10
  401310:	ret
  401314:	ret

0000000000401318 <register_tm_clones>:
  401318:	adrp	x0, 420000 <completed.8445>
  40131c:	add	x1, x0, #0x0
  401320:	adrp	x0, 420000 <completed.8445>
  401324:	add	x0, x0, #0x0
  401328:	sub	x1, x1, x0
  40132c:	mov	x2, #0x2                   	// #2
  401330:	asr	x1, x1, #3
  401334:	sdiv	x1, x1, x2
  401338:	cbz	x1, 401364 <register_tm_clones+0x4c>
  40133c:	sub	sp, sp, #0x10
  401340:	adrp	x2, 402000 <main+0xc64>
  401344:	ldr	x2, [x2, #840]
  401348:	str	x2, [sp, #8]
  40134c:	cbz	x2, 40135c <register_tm_clones+0x44>
  401350:	mov	x16, x2
  401354:	add	sp, sp, #0x10
  401358:	br	x16
  40135c:	add	sp, sp, #0x10
  401360:	ret
  401364:	ret

0000000000401368 <__do_global_dtors_aux>:
  401368:	stp	x29, x30, [sp, #-32]!
  40136c:	mov	x29, sp
  401370:	str	x19, [sp, #16]
  401374:	adrp	x19, 420000 <completed.8445>
  401378:	ldrb	w0, [x19]
  40137c:	cbnz	w0, 40138c <__do_global_dtors_aux+0x24>
  401380:	bl	4012d4 <deregister_tm_clones>
  401384:	mov	w0, #0x1                   	// #1
  401388:	strb	w0, [x19]
  40138c:	ldr	x19, [sp, #16]
  401390:	ldp	x29, x30, [sp], #32
  401394:	ret

0000000000401398 <frame_dummy>:
  401398:	b	401318 <register_tm_clones>

000000000040139c <main>:
  40139c:	sub	sp, sp, #0xf0
  4013a0:	adrp	x8, 420000 <completed.8445>
  4013a4:	adrp	x9, 420000 <completed.8445>
  4013a8:	stp	x29, x30, [sp, #144]
  4013ac:	str	x27, [sp, #160]
  4013b0:	stp	x26, x25, [sp, #176]
  4013b4:	stp	x24, x23, [sp, #192]
  4013b8:	stp	x22, x21, [sp, #208]
  4013bc:	stp	x20, x19, [sp, #224]
  4013c0:	add	x29, sp, #0x90
  4013c4:	mov	x19, x1
  4013c8:	mov	w20, w0
  4013cc:	str	w0, [x8, #8]
  4013d0:	str	x1, [x9, #16]
  4013d4:	bl	401050 <log_setup_service@plt>
  4013d8:	cmp	w20, #0x2
  4013dc:	b.ne	401474 <main+0xd8>  // b.any
  4013e0:	mov	w0, #0x12                  	// #18
  4013e4:	bl	401060 <umask@plt>
  4013e8:	bl	401070 <random_pool_size@plt>
  4013ec:	mov	x21, x0
  4013f0:	adrp	x0, 402000 <main+0xc64>
  4013f4:	add	x0, x0, #0x399
  4013f8:	mov	w1, #0x1ed                 	// #493
  4013fc:	bl	401080 <mkdir_parents@plt>
  401400:	tbnz	w0, #31, 4014bc <main+0x120>
  401404:	ldr	x19, [x19, #8]
  401408:	adrp	x1, 402000 <main+0xc64>
  40140c:	add	x1, x1, #0x3e6
  401410:	mov	x0, x19
  401414:	bl	401090 <strcmp@plt>
  401418:	cbz	w0, 401594 <main+0x1f8>
  40141c:	adrp	x1, 402000 <main+0xc64>
  401420:	add	x1, x1, #0x490
  401424:	mov	x0, x19
  401428:	bl	401090 <strcmp@plt>
  40142c:	cbz	w0, 4015dc <main+0x240>
  401430:	mov	w0, wzr
  401434:	bl	4010a0 <log_get_max_level_realm@plt>
  401438:	cmp	w0, #0x3
  40143c:	b.lt	4014b0 <main+0x114>  // b.tstop
  401440:	adrp	x2, 402000 <main+0xc64>
  401444:	adrp	x4, 402000 <main+0xc64>
  401448:	adrp	x5, 402000 <main+0xc64>
  40144c:	mov	w1, #0x16                  	// #22
  401450:	add	x2, x2, #0x353
  401454:	add	x4, x4, #0x371
  401458:	add	x5, x5, #0x4c5
  40145c:	mov	w0, #0x3                   	// #3
  401460:	movk	w1, #0x4000, lsl #16
  401464:	mov	w3, #0xac                  	// #172
  401468:	mov	x6, x19
  40146c:	bl	4010b0 <log_internal_realm@plt>
  401470:	b	4014f8 <main+0x15c>
  401474:	mov	w0, wzr
  401478:	bl	4010a0 <log_get_max_level_realm@plt>
  40147c:	cmp	w0, #0x3
  401480:	b.lt	4014b0 <main+0x114>  // b.tstop
  401484:	adrp	x2, 402000 <main+0xc64>
  401488:	adrp	x4, 402000 <main+0xc64>
  40148c:	adrp	x5, 402000 <main+0xc64>
  401490:	mov	w1, #0x16                  	// #22
  401494:	add	x2, x2, #0x353
  401498:	add	x4, x4, #0x371
  40149c:	add	x5, x5, #0x375
  4014a0:	mov	w0, #0x3                   	// #3
  4014a4:	movk	w1, #0x4000, lsl #16
  4014a8:	mov	w3, #0x74                  	// #116
  4014ac:	b	4014f4 <main+0x158>
  4014b0:	mov	x21, xzr
  4014b4:	mov	w22, #0xffffffea            	// #-22
  4014b8:	b	401500 <main+0x164>
  4014bc:	mov	w20, w0
  4014c0:	mov	w0, wzr
  4014c4:	bl	4010a0 <log_get_max_level_realm@plt>
  4014c8:	cmp	w0, #0x3
  4014cc:	b.lt	4015c4 <main+0x228>  // b.tstop
  4014d0:	adrp	x2, 402000 <main+0xc64>
  4014d4:	adrp	x4, 402000 <main+0xc64>
  4014d8:	adrp	x5, 402000 <main+0xc64>
  4014dc:	add	x2, x2, #0x353
  4014e0:	add	x4, x4, #0x371
  4014e4:	add	x5, x5, #0x3b6
  4014e8:	mov	w0, #0x3                   	// #3
  4014ec:	mov	w3, #0x7c                  	// #124
  4014f0:	mov	w1, w20
  4014f4:	bl	4010b0 <log_internal_realm@plt>
  4014f8:	mov	w22, w0
  4014fc:	mov	x21, xzr
  401500:	mov	w19, #0xffffffff            	// #-1
  401504:	mov	w20, #0xffffffff            	// #-1
  401508:	mov	x0, x21
  40150c:	bl	4010c0 <free@plt>
  401510:	mov	w0, w20
  401514:	bl	4010d0 <safe_close@plt>
  401518:	mov	w0, w19
  40151c:	bl	4010d0 <safe_close@plt>
  401520:	bl	4010e0 <ask_password_agent_close@plt>
  401524:	bl	4010f0 <polkit_agent_close@plt>
  401528:	bl	401100 <pager_close@plt>
  40152c:	bl	401110 <mac_selinux_finish@plt>
  401530:	adrp	x8, 41f000 <__FRAME_END__+0x1c350>
  401534:	ldr	x8, [x8, #3760]
  401538:	adrp	x19, 41f000 <__FRAME_END__+0x1c350>
  40153c:	ldr	x19, [x19, #3768]
  401540:	add	x9, x8, #0x7
  401544:	and	x20, x9, #0xfffffffffffffff8
  401548:	cmp	x20, x19
  40154c:	cset	w9, cs  // cs = hs, nlast
  401550:	cmp	x8, #0x0
  401554:	cset	w8, eq  // eq = none
  401558:	orr	w8, w8, w9
  40155c:	tbnz	w8, #0, 401570 <main+0x1d4>
  401560:	ldp	x0, x8, [x20], #16
  401564:	blr	x8
  401568:	cmp	x20, x19
  40156c:	b.cc	401560 <main+0x1c4>  // b.lo, b.ul, b.last
  401570:	lsr	w0, w22, #31
  401574:	ldp	x20, x19, [sp, #224]
  401578:	ldp	x22, x21, [sp, #208]
  40157c:	ldp	x24, x23, [sp, #192]
  401580:	ldp	x26, x25, [sp, #176]
  401584:	ldr	x27, [sp, #160]
  401588:	ldp	x29, x30, [sp, #144]
  40158c:	add	sp, sp, #0xf0
  401590:	ret
  401594:	mov	w20, #0x100                 	// #256
  401598:	movk	w20, #0x8, lsl #16
  40159c:	mov	w8, #0x42                  	// #66
  4015a0:	adrp	x0, 402000 <main+0xc64>
  4015a4:	orr	w1, w20, w8
  4015a8:	add	x0, x0, #0x399
  4015ac:	mov	w2, #0x180                 	// #384
  4015b0:	bl	401120 <open64@plt>
  4015b4:	tbnz	w0, #31, 401628 <main+0x28c>
  4015b8:	mov	w19, w0
  4015bc:	mov	w27, #0x1                   	// #1
  4015c0:	b	401654 <main+0x2b8>
  4015c4:	mov	w8, wzr
  4015c8:	neg	w9, w20
  4015cc:	mov	x21, xzr
  4015d0:	mov	w19, #0xffffffff            	// #-1
  4015d4:	sub	w22, w8, w9, uxtb
  4015d8:	b	401504 <main+0x168>
  4015dc:	adrp	x0, 402000 <main+0xc64>
  4015e0:	mov	w1, #0x100                 	// #256
  4015e4:	mov	w19, #0x100                 	// #256
  4015e8:	add	x0, x0, #0x463
  4015ec:	movk	w1, #0x8, lsl #16
  4015f0:	movk	w19, #0x8, lsl #16
  4015f4:	bl	401120 <open64@plt>
  4015f8:	mov	w20, w0
  4015fc:	tbnz	w0, #31, 401784 <main+0x3e8>
  401600:	adrp	x0, 402000 <main+0xc64>
  401604:	add	w1, w19, #0x41
  401608:	add	x0, x0, #0x399
  40160c:	mov	w2, #0x180                 	// #384
  401610:	bl	401120 <open64@plt>
  401614:	mov	w19, w0
  401618:	tbnz	w0, #31, 4017ec <main+0x450>
  40161c:	mov	w26, wzr
  401620:	mov	w27, #0x1                   	// #1
  401624:	b	401674 <main+0x2d8>
  401628:	bl	401130 <__errno_location@plt>
  40162c:	ldr	w24, [x0]
  401630:	mov	x22, x0
  401634:	adrp	x0, 402000 <main+0xc64>
  401638:	mov	w1, #0x100                 	// #256
  40163c:	add	x0, x0, #0x399
  401640:	movk	w1, #0x8, lsl #16
  401644:	bl	401120 <open64@plt>
  401648:	mov	w19, w0
  40164c:	tbnz	w0, #31, 401850 <main+0x4b4>
  401650:	mov	w27, wzr
  401654:	adrp	x0, 402000 <main+0xc64>
  401658:	add	w1, w20, #0x2
  40165c:	add	x0, x0, #0x463
  401660:	mov	w2, #0x180                 	// #384
  401664:	bl	401120 <open64@plt>
  401668:	mov	w20, w0
  40166c:	tbnz	w0, #31, 40170c <main+0x370>
  401670:	mov	w26, #0x1                   	// #1
  401674:	add	x1, sp, #0x10
  401678:	mov	w0, w19
  40167c:	bl	402320 <fstat64>
  401680:	tbnz	w0, #31, 401748 <main+0x3ac>
  401684:	ldr	x8, [sp, #64]
  401688:	mov	w9, #0xa00000              	// #10485760
  40168c:	cmp	x8, #0xa00, lsl #12
  401690:	csel	x9, x8, x9, lt  // lt = tstop
  401694:	cmp	x8, x21
  401698:	csel	x22, x9, x21, hi  // hi = pmore
  40169c:	mov	x0, x22
  4016a0:	bl	401140 <malloc@plt>
  4016a4:	mov	x21, x0
  4016a8:	cbz	x0, 4017d0 <main+0x434>
  4016ac:	cbz	w26, 401e38 <main+0xa9c>
  4016b0:	mov	x0, sp
  4016b4:	bl	401150 <sd_id128_get_machine@plt>
  4016b8:	tbnz	w0, #31, 40191c <main+0x580>
  4016bc:	mov	x1, sp
  4016c0:	mov	w2, #0x10                  	// #16
  4016c4:	mov	w0, w20
  4016c8:	mov	w3, wzr
  4016cc:	bl	401160 <loop_write@plt>
  4016d0:	tbz	w0, #31, 401958 <main+0x5bc>
  4016d4:	mov	w23, w0
  4016d8:	mov	w0, wzr
  4016dc:	bl	4010a0 <log_get_max_level_realm@plt>
  4016e0:	cmp	w0, #0x7
  4016e4:	b.lt	401958 <main+0x5bc>  // b.tstop
  4016e8:	adrp	x2, 402000 <main+0xc64>
  4016ec:	adrp	x4, 402000 <main+0xc64>
  4016f0:	adrp	x5, 402000 <main+0xc64>
  4016f4:	add	x2, x2, #0x353
  4016f8:	add	x4, x4, #0x371
  4016fc:	add	x5, x5, #0x53b
  401700:	mov	w0, #0x7                   	// #7
  401704:	mov	w3, #0xc9                  	// #201
  401708:	b	401950 <main+0x5b4>
  40170c:	bl	401130 <__errno_location@plt>
  401710:	ldr	w22, [x0]
  401714:	mov	w0, wzr
  401718:	bl	4010a0 <log_get_max_level_realm@plt>
  40171c:	cmp	w0, #0x3
  401720:	b.lt	401838 <main+0x49c>  // b.tstop
  401724:	adrp	x2, 402000 <main+0xc64>
  401728:	adrp	x4, 402000 <main+0xc64>
  40172c:	adrp	x5, 402000 <main+0xc64>
  401730:	add	x2, x2, #0x353
  401734:	add	x4, x4, #0x371
  401738:	add	x5, x5, #0x470
  40173c:	mov	w0, #0x3                   	// #3
  401740:	mov	w3, #0x98                  	// #152
  401744:	b	401824 <main+0x488>
  401748:	bl	401130 <__errno_location@plt>
  40174c:	ldr	w22, [x0]
  401750:	mov	w0, wzr
  401754:	bl	4010a0 <log_get_max_level_realm@plt>
  401758:	cmp	w0, #0x3
  40175c:	b.lt	401838 <main+0x49c>  // b.tstop
  401760:	adrp	x2, 402000 <main+0xc64>
  401764:	adrp	x4, 402000 <main+0xc64>
  401768:	adrp	x5, 402000 <main+0xc64>
  40176c:	add	x2, x2, #0x353
  401770:	add	x4, x4, #0x371
  401774:	add	x5, x5, #0x4d8
  401778:	mov	w0, #0x3                   	// #3
  40177c:	mov	w3, #0xaf                  	// #175
  401780:	b	401824 <main+0x488>
  401784:	bl	401130 <__errno_location@plt>
  401788:	ldr	w19, [x0]
  40178c:	mov	w0, wzr
  401790:	bl	4010a0 <log_get_max_level_realm@plt>
  401794:	cmp	w0, #0x3
  401798:	b.lt	4018c8 <main+0x52c>  // b.tstop
  40179c:	adrp	x2, 402000 <main+0xc64>
  4017a0:	adrp	x4, 402000 <main+0xc64>
  4017a4:	adrp	x5, 402000 <main+0xc64>
  4017a8:	add	x2, x2, #0x353
  4017ac:	add	x4, x4, #0x371
  4017b0:	add	x5, x5, #0x470
  4017b4:	mov	w0, #0x3                   	// #3
  4017b8:	mov	w3, #0xa1                  	// #161
  4017bc:	mov	w1, w19
  4017c0:	bl	4010b0 <log_internal_realm@plt>
  4017c4:	mov	w22, w0
  4017c8:	mov	x21, xzr
  4017cc:	b	4018dc <main+0x540>
  4017d0:	adrp	x1, 402000 <main+0xc64>
  4017d4:	adrp	x3, 402000 <main+0xc64>
  4017d8:	add	x1, x1, #0x353
  4017dc:	add	x3, x3, #0x371
  4017e0:	mov	w2, #0xb7                  	// #183
  4017e4:	bl	401170 <log_oom_internal@plt>
  4017e8:	b	40218c <main+0xdf0>
  4017ec:	bl	401130 <__errno_location@plt>
  4017f0:	ldr	w22, [x0]
  4017f4:	mov	w0, wzr
  4017f8:	bl	4010a0 <log_get_max_level_realm@plt>
  4017fc:	cmp	w0, #0x3
  401800:	b.lt	401838 <main+0x49c>  // b.tstop
  401804:	adrp	x2, 402000 <main+0xc64>
  401808:	adrp	x4, 402000 <main+0xc64>
  40180c:	adrp	x5, 402000 <main+0xc64>
  401810:	add	x2, x2, #0x353
  401814:	add	x4, x4, #0x371
  401818:	add	x5, x5, #0x495
  40181c:	mov	w0, #0x3                   	// #3
  401820:	mov	w3, #0xa5                  	// #165
  401824:	mov	w1, w22
  401828:	bl	4010b0 <log_internal_realm@plt>
  40182c:	mov	w22, w0
  401830:	mov	x21, xzr
  401834:	b	401508 <main+0x16c>
  401838:	cmp	w22, #0x0
  40183c:	mov	w8, wzr
  401840:	cneg	w9, w22, mi  // mi = first
  401844:	mov	x21, xzr
  401848:	sub	w22, w8, w9, uxtb
  40184c:	b	401508 <main+0x16c>
  401850:	ldr	w23, [x22]
  401854:	mov	w8, #0x3                   	// #3
  401858:	mov	w9, #0x7                   	// #7
  40185c:	mov	w0, wzr
  401860:	cmp	w23, #0x2
  401864:	csel	w20, w9, w8, eq  // eq = none
  401868:	bl	4010a0 <log_get_max_level_realm@plt>
  40186c:	cmp	w0, w20
  401870:	mov	w21, w23
  401874:	b.lt	4018a4 <main+0x508>  // b.tstop
  401878:	adrp	x2, 402000 <main+0xc64>
  40187c:	adrp	x4, 402000 <main+0xc64>
  401880:	adrp	x5, 402000 <main+0xc64>
  401884:	neg	w1, w24
  401888:	add	x2, x2, #0x353
  40188c:	add	x4, x4, #0x371
  401890:	add	x5, x5, #0x3eb
  401894:	mov	w3, #0x8e                  	// #142
  401898:	mov	w0, w20
  40189c:	bl	4010b0 <log_internal_realm@plt>
  4018a0:	ldr	w21, [x22]
  4018a4:	mov	w0, wzr
  4018a8:	bl	4010a0 <log_get_max_level_realm@plt>
  4018ac:	cmp	w0, w20
  4018b0:	b.ge	4018e4 <main+0x548>  // b.tcont
  4018b4:	cmp	w21, #0x0
  4018b8:	mov	w8, wzr
  4018bc:	cneg	w9, w21, mi  // mi = first
  4018c0:	sub	w0, w8, w9, uxtb
  4018c4:	b	40190c <main+0x570>
  4018c8:	cmp	w19, #0x0
  4018cc:	mov	w8, wzr
  4018d0:	cneg	w9, w19, mi  // mi = first
  4018d4:	mov	x21, xzr
  4018d8:	sub	w22, w8, w9, uxtb
  4018dc:	mov	w19, #0xffffffff            	// #-1
  4018e0:	b	401508 <main+0x16c>
  4018e4:	adrp	x2, 402000 <main+0xc64>
  4018e8:	adrp	x4, 402000 <main+0xc64>
  4018ec:	adrp	x5, 402000 <main+0xc64>
  4018f0:	add	x2, x2, #0x353
  4018f4:	add	x4, x4, #0x371
  4018f8:	add	x5, x5, #0x427
  4018fc:	mov	w3, #0x90                  	// #144
  401900:	mov	w0, w20
  401904:	mov	w1, w21
  401908:	bl	4010b0 <log_internal_realm@plt>
  40190c:	cmp	w23, #0x2
  401910:	mov	x21, xzr
  401914:	csel	w22, wzr, w0, eq  // eq = none
  401918:	b	401504 <main+0x168>
  40191c:	mov	w23, w0
  401920:	mov	w0, wzr
  401924:	bl	4010a0 <log_get_max_level_realm@plt>
  401928:	cmp	w0, #0x7
  40192c:	b.lt	401958 <main+0x5bc>  // b.tstop
  401930:	adrp	x2, 402000 <main+0xc64>
  401934:	adrp	x4, 402000 <main+0xc64>
  401938:	adrp	x5, 402000 <main+0xc64>
  40193c:	add	x2, x2, #0x353
  401940:	add	x4, x4, #0x371
  401944:	add	x5, x5, #0x514
  401948:	mov	w0, #0x7                   	// #7
  40194c:	mov	w3, #0xc5                  	// #197
  401950:	mov	w1, w23
  401954:	bl	4010b0 <log_internal_realm@plt>
  401958:	mov	w0, w19
  40195c:	mov	x1, x21
  401960:	mov	x2, x22
  401964:	mov	w3, wzr
  401968:	bl	401180 <loop_read@plt>
  40196c:	mov	x23, x0
  401970:	tbnz	x0, #63, 401a38 <main+0x69c>
  401974:	cbz	x23, 401a70 <main+0x6d4>
  401978:	mov	w0, w19
  40197c:	mov	x1, xzr
  401980:	mov	w2, wzr
  401984:	bl	401190 <lseek64@plt>
  401988:	adrp	x0, 402000 <main+0xc64>
  40198c:	add	x0, x0, #0x8d8
  401990:	str	xzr, [x29, #24]
  401994:	bl	4011a0 <getenv@plt>
  401998:	cbz	x0, 401aa8 <main+0x70c>
  40199c:	adrp	x1, 402000 <main+0xc64>
  4019a0:	add	x1, x1, #0x93d
  4019a4:	mov	x24, x0
  4019a8:	bl	401090 <strcmp@plt>
  4019ac:	cbz	w0, 401ae0 <main+0x744>
  4019b0:	mov	x0, x24
  4019b4:	bl	4011b0 <parse_boolean@plt>
  4019b8:	cmp	w0, #0x0
  4019bc:	b.le	401b1c <main+0x780>
  4019c0:	adrp	x1, 402000 <main+0xc64>
  4019c4:	add	x1, x1, #0x5f6
  4019c8:	add	x2, x29, #0x18
  4019cc:	mov	w0, w19
  4019d0:	bl	4011c0 <fgetxattr_malloc@plt>
  4019d4:	tbnz	w0, #31, 401b58 <main+0x7bc>
  4019d8:	ldr	x24, [x29, #24]
  4019dc:	mov	x0, x24
  4019e0:	bl	4011b0 <parse_boolean@plt>
  4019e4:	cmp	w0, #0x0
  4019e8:	b.le	401bbc <main+0x820>
  4019ec:	adrp	x0, 402000 <main+0xc64>
  4019f0:	add	x0, x0, #0xb0d
  4019f4:	mov	w1, wzr
  4019f8:	bl	4011d0 <access@plt>
  4019fc:	tbnz	w0, #31, 401c24 <main+0x888>
  401a00:	mov	w0, wzr
  401a04:	bl	4010a0 <log_get_max_level_realm@plt>
  401a08:	cmp	w0, #0x7
  401a0c:	mov	w25, wzr
  401a10:	b.lt	401cec <main+0x950>  // b.tstop
  401a14:	adrp	x2, 402000 <main+0xc64>
  401a18:	adrp	x4, 402000 <main+0xc64>
  401a1c:	adrp	x5, 402000 <main+0xc64>
  401a20:	add	x2, x2, #0x353
  401a24:	add	x4, x4, #0x8f3
  401a28:	add	x5, x5, #0xb72
  401a2c:	mov	w0, #0x7                   	// #7
  401a30:	mov	w3, #0x60                  	// #96
  401a34:	b	401ad8 <main+0x73c>
  401a38:	mov	w0, wzr
  401a3c:	bl	4010a0 <log_get_max_level_realm@plt>
  401a40:	cmp	w0, #0x3
  401a44:	b.lt	401e38 <main+0xa9c>  // b.tstop
  401a48:	adrp	x2, 402000 <main+0xc64>
  401a4c:	adrp	x4, 402000 <main+0xc64>
  401a50:	adrp	x5, 402000 <main+0xc64>
  401a54:	add	x2, x2, #0x353
  401a58:	add	x4, x4, #0x371
  401a5c:	add	x5, x5, #0x574
  401a60:	mov	w0, #0x3                   	// #3
  401a64:	mov	w3, #0xce                  	// #206
  401a68:	mov	w1, w23
  401a6c:	b	401e34 <main+0xa98>
  401a70:	mov	w0, wzr
  401a74:	bl	4010a0 <log_get_max_level_realm@plt>
  401a78:	cmp	w0, #0x7
  401a7c:	b.lt	401e38 <main+0xa9c>  // b.tstop
  401a80:	adrp	x2, 402000 <main+0xc64>
  401a84:	adrp	x4, 402000 <main+0xc64>
  401a88:	adrp	x5, 402000 <main+0xc64>
  401a8c:	add	x2, x2, #0x353
  401a90:	add	x4, x4, #0x371
  401a94:	add	x5, x5, #0x5ae
  401a98:	mov	w0, #0x7                   	// #7
  401a9c:	mov	w3, #0xd0                  	// #208
  401aa0:	mov	w1, wzr
  401aa4:	b	401e34 <main+0xa98>
  401aa8:	bl	4010a0 <log_get_max_level_realm@plt>
  401aac:	cmp	w0, #0x7
  401ab0:	mov	w25, wzr
  401ab4:	b.lt	401cec <main+0x950>  // b.tstop
  401ab8:	adrp	x2, 402000 <main+0xc64>
  401abc:	adrp	x4, 402000 <main+0xc64>
  401ac0:	adrp	x5, 402000 <main+0xc64>
  401ac4:	add	x2, x2, #0x353
  401ac8:	add	x4, x4, #0x8f3
  401acc:	add	x5, x5, #0x8fe
  401ad0:	mov	w0, #0x7                   	// #7
  401ad4:	mov	w3, #0x2d                  	// #45
  401ad8:	mov	w1, wzr
  401adc:	b	401ce4 <main+0x948>
  401ae0:	bl	4010a0 <log_get_max_level_realm@plt>
  401ae4:	cmp	w0, #0x7
  401ae8:	b.lt	401b14 <main+0x778>  // b.tstop
  401aec:	adrp	x2, 402000 <main+0xc64>
  401af0:	adrp	x4, 402000 <main+0xc64>
  401af4:	adrp	x5, 402000 <main+0xc64>
  401af8:	add	x2, x2, #0x353
  401afc:	add	x4, x4, #0x8f3
  401b00:	add	x5, x5, #0x943
  401b04:	mov	w0, #0x7                   	// #7
  401b08:	mov	w3, #0x31                  	// #49
  401b0c:	mov	w1, wzr
  401b10:	bl	4010b0 <log_internal_realm@plt>
  401b14:	mov	w25, #0x2                   	// #2
  401b18:	b	401cec <main+0x950>
  401b1c:	mov	w24, w0
  401b20:	mov	w0, wzr
  401b24:	bl	4010a0 <log_get_max_level_realm@plt>
  401b28:	tbnz	w24, #31, 401bf8 <main+0x85c>
  401b2c:	cmp	w0, #0x7
  401b30:	b.lt	401ce8 <main+0x94c>  // b.tstop
  401b34:	adrp	x2, 402000 <main+0xc64>
  401b38:	adrp	x4, 402000 <main+0xc64>
  401b3c:	adrp	x5, 402000 <main+0xc64>
  401b40:	add	x2, x2, #0x353
  401b44:	add	x4, x4, #0x8f3
  401b48:	add	x5, x5, #0x9cc
  401b4c:	mov	w0, #0x7                   	// #7
  401b50:	mov	w3, #0x3a                  	// #58
  401b54:	b	401ad8 <main+0x73c>
  401b58:	add	w8, w0, #0x5f
  401b5c:	mov	w24, w0
  401b60:	cmp	w8, #0x39
  401b64:	b.hi	401c3c <main+0x8a0>  // b.pmore
  401b68:	mov	w9, #0x1                   	// #1
  401b6c:	lsl	x8, x9, x8
  401b70:	mov	x9, #0x1                   	// #1
  401b74:	movk	x9, #0x4, lsl #32
  401b78:	movk	x9, #0x200, lsl #48
  401b7c:	tst	x8, x9
  401b80:	b.eq	401c3c <main+0x8a0>  // b.none
  401b84:	mov	w0, wzr
  401b88:	bl	4010a0 <log_get_max_level_realm@plt>
  401b8c:	cmp	w0, #0x7
  401b90:	mov	w25, wzr
  401b94:	b.lt	401cec <main+0x950>  // b.tstop
  401b98:	adrp	x2, 402000 <main+0xc64>
  401b9c:	adrp	x4, 402000 <main+0xc64>
  401ba0:	adrp	x5, 402000 <main+0xc64>
  401ba4:	add	x2, x2, #0x353
  401ba8:	add	x4, x4, #0x8f3
  401bac:	add	x5, x5, #0xa24
  401bb0:	mov	w0, #0x7                   	// #7
  401bb4:	mov	w3, #0x43                  	// #67
  401bb8:	b	401ce0 <main+0x944>
  401bbc:	mov	w25, w0
  401bc0:	mov	w0, wzr
  401bc4:	bl	4010a0 <log_get_max_level_realm@plt>
  401bc8:	tbnz	w25, #31, 401c74 <main+0x8d8>
  401bcc:	cmp	w0, #0x7
  401bd0:	b.lt	401ce8 <main+0x94c>  // b.tstop
  401bd4:	adrp	x2, 402000 <main+0xc64>
  401bd8:	adrp	x4, 402000 <main+0xc64>
  401bdc:	adrp	x5, 402000 <main+0xc64>
  401be0:	add	x2, x2, #0x353
  401be4:	add	x4, x4, #0x8f3
  401be8:	add	x5, x5, #0xad7
  401bec:	mov	w0, #0x7                   	// #7
  401bf0:	mov	w3, #0x4f                  	// #79
  401bf4:	b	401ad8 <main+0x73c>
  401bf8:	cmp	w0, #0x4
  401bfc:	b.lt	401ce8 <main+0x94c>  // b.tstop
  401c00:	adrp	x2, 402000 <main+0xc64>
  401c04:	adrp	x4, 402000 <main+0xc64>
  401c08:	adrp	x5, 402000 <main+0xc64>
  401c0c:	add	x2, x2, #0x353
  401c10:	add	x4, x4, #0x8f3
  401c14:	add	x5, x5, #0x985
  401c18:	mov	w0, #0x4                   	// #4
  401c1c:	mov	w3, #0x38                  	// #56
  401c20:	b	401ce0 <main+0x944>
  401c24:	bl	401130 <__errno_location@plt>
  401c28:	ldr	w24, [x0]
  401c2c:	cmp	w24, #0x2
  401c30:	b.ne	401cac <main+0x910>  // b.any
  401c34:	mov	w25, #0x1                   	// #1
  401c38:	b	401cec <main+0x950>
  401c3c:	mov	w0, wzr
  401c40:	bl	4010a0 <log_get_max_level_realm@plt>
  401c44:	cmp	w0, #0x4
  401c48:	mov	w25, wzr
  401c4c:	b.lt	401cec <main+0x950>  // b.tstop
  401c50:	adrp	x2, 402000 <main+0xc64>
  401c54:	adrp	x4, 402000 <main+0xc64>
  401c58:	adrp	x5, 402000 <main+0xc64>
  401c5c:	add	x2, x2, #0x353
  401c60:	add	x4, x4, #0x8f3
  401c64:	add	x5, x5, #0xa5a
  401c68:	mov	w0, #0x4                   	// #4
  401c6c:	mov	w3, #0x45                  	// #69
  401c70:	b	401ce0 <main+0x944>
  401c74:	cmp	w0, #0x4
  401c78:	b.lt	401ce8 <main+0x94c>  // b.tstop
  401c7c:	adrp	x2, 402000 <main+0xc64>
  401c80:	adrp	x4, 402000 <main+0xc64>
  401c84:	adrp	x5, 402000 <main+0xc64>
  401c88:	add	x2, x2, #0x353
  401c8c:	add	x4, x4, #0x8f3
  401c90:	add	x5, x5, #0xa8a
  401c94:	mov	w0, #0x4                   	// #4
  401c98:	mov	w3, #0x4d                  	// #77
  401c9c:	mov	w1, w25
  401ca0:	mov	x6, x24
  401ca4:	bl	4010b0 <log_internal_realm@plt>
  401ca8:	b	401ce8 <main+0x94c>
  401cac:	mov	w0, wzr
  401cb0:	bl	4010a0 <log_get_max_level_realm@plt>
  401cb4:	cmp	w0, #0x4
  401cb8:	mov	w25, wzr
  401cbc:	b.lt	401cec <main+0x950>  // b.tstop
  401cc0:	adrp	x2, 402000 <main+0xc64>
  401cc4:	adrp	x4, 402000 <main+0xc64>
  401cc8:	adrp	x5, 402000 <main+0xc64>
  401ccc:	add	x2, x2, #0x353
  401cd0:	add	x4, x4, #0x8f3
  401cd4:	add	x5, x5, #0xb25
  401cd8:	mov	w0, #0x4                   	// #4
  401cdc:	mov	w3, #0x5a                  	// #90
  401ce0:	mov	w1, w24
  401ce4:	bl	4010b0 <log_internal_realm@plt>
  401ce8:	mov	w25, wzr
  401cec:	ldr	x0, [x29, #24]
  401cf0:	bl	4010c0 <free@plt>
  401cf4:	adrp	x1, 402000 <main+0xc64>
  401cf8:	add	x1, x1, #0x5f6
  401cfc:	mov	w0, w19
  401d00:	bl	4011e0 <fremovexattr@plt>
  401d04:	tbnz	w0, #31, 401d5c <main+0x9c0>
  401d08:	mov	w0, w19
  401d0c:	bl	4011f0 <fsync_full@plt>
  401d10:	tbz	w0, #31, 401d8c <main+0x9f0>
  401d14:	mov	w24, w0
  401d18:	mov	w0, wzr
  401d1c:	bl	4010a0 <log_get_max_level_realm@plt>
  401d20:	cmp	w0, #0x4
  401d24:	b.lt	401d50 <main+0x9b4>  // b.tstop
  401d28:	adrp	x2, 402000 <main+0xc64>
  401d2c:	adrp	x4, 402000 <main+0xc64>
  401d30:	adrp	x5, 402000 <main+0xc64>
  401d34:	add	x2, x2, #0x353
  401d38:	add	x4, x4, #0x371
  401d3c:	add	x5, x5, #0x644
  401d40:	mov	w0, #0x4                   	// #4
  401d44:	mov	w3, #0xe7                  	// #231
  401d48:	mov	w1, w24
  401d4c:	bl	4010b0 <log_internal_realm@plt>
  401d50:	cmp	w25, #0x1
  401d54:	csel	w25, wzr, w25, eq  // eq = none
  401d58:	b	401d8c <main+0x9f0>
  401d5c:	bl	401130 <__errno_location@plt>
  401d60:	ldr	w24, [x0]
  401d64:	sub	w8, w24, #0x26
  401d68:	cmp	w8, #0x39
  401d6c:	b.hi	402204 <main+0xe68>  // b.pmore
  401d70:	mov	w9, #0x1                   	// #1
  401d74:	lsl	x8, x9, x8
  401d78:	mov	x9, #0x1                   	// #1
  401d7c:	movk	x9, #0x80, lsl #16
  401d80:	movk	x9, #0x200, lsl #48
  401d84:	tst	x8, x9
  401d88:	b.eq	402204 <main+0xe68>  // b.none
  401d8c:	sub	w8, w25, #0x1
  401d90:	cmp	w8, #0x1
  401d94:	b.hi	401de4 <main+0xa48>  // b.pmore
  401d98:	add	x0, x23, #0x8
  401d9c:	bl	401140 <malloc@plt>
  401da0:	mov	x24, x0
  401da4:	cbz	x0, 402124 <main+0xd88>
  401da8:	lsl	w8, w23, #3
  401dac:	add	x0, x24, #0x8
  401db0:	mov	x1, x21
  401db4:	mov	x2, x23
  401db8:	stp	w8, w23, [x24]
  401dbc:	bl	401200 <memcpy@plt>
  401dc0:	mov	w1, #0x5203                	// #20995
  401dc4:	movk	w1, #0x4008, lsl #16
  401dc8:	mov	w0, w20
  401dcc:	mov	x2, x24
  401dd0:	bl	401210 <ioctl@plt>
  401dd4:	tbnz	w0, #31, 4021a0 <main+0xe04>
  401dd8:	mov	x0, x24
  401ddc:	bl	4010c0 <free@plt>
  401de0:	b	401e38 <main+0xa9c>
  401de4:	mov	w0, w20
  401de8:	mov	x1, x21
  401dec:	mov	x2, x23
  401df0:	mov	w3, wzr
  401df4:	bl	401160 <loop_write@plt>
  401df8:	tbz	w0, #31, 401e38 <main+0xa9c>
  401dfc:	mov	w23, w0
  401e00:	mov	w0, wzr
  401e04:	bl	4010a0 <log_get_max_level_realm@plt>
  401e08:	cmp	w0, #0x3
  401e0c:	b.lt	401e38 <main+0xa9c>  // b.tstop
  401e10:	adrp	x2, 402000 <main+0xc64>
  401e14:	adrp	x4, 402000 <main+0xc64>
  401e18:	adrp	x5, 402000 <main+0xc64>
  401e1c:	add	x2, x2, #0x353
  401e20:	add	x4, x4, #0x371
  401e24:	add	x5, x5, #0x6a9
  401e28:	mov	w0, #0x3                   	// #3
  401e2c:	mov	w3, #0xfe                  	// #254
  401e30:	mov	w1, w23
  401e34:	bl	4010b0 <log_internal_realm@plt>
  401e38:	cbz	w27, 402290 <main+0xef4>
  401e3c:	mov	w1, #0x180                 	// #384
  401e40:	mov	w0, w19
  401e44:	mov	w2, wzr
  401e48:	mov	w3, wzr
  401e4c:	bl	401220 <fchmod_and_chown@plt>
  401e50:	tbnz	w0, #31, 401eac <main+0xb10>
  401e54:	mov	w2, #0x1                   	// #1
  401e58:	mov	x0, x21
  401e5c:	mov	x1, x22
  401e60:	bl	401230 <getrandom@plt>
  401e64:	mov	x23, x0
  401e68:	tbnz	x0, #63, 401ee8 <main+0xb4c>
  401e6c:	cmp	x23, x22
  401e70:	b.cs	401fb4 <main+0xc18>  // b.hs, b.nlast
  401e74:	mov	w0, wzr
  401e78:	bl	4010a0 <log_get_max_level_realm@plt>
  401e7c:	cmp	w0, #0x7
  401e80:	b.lt	401f8c <main+0xbf0>  // b.tstop
  401e84:	adrp	x2, 402000 <main+0xc64>
  401e88:	adrp	x4, 402000 <main+0xc64>
  401e8c:	adrp	x5, 402000 <main+0xc64>
  401e90:	add	x2, x2, #0x353
  401e94:	add	x4, x4, #0x371
  401e98:	add	x5, x5, #0x797
  401e9c:	mov	w0, #0x7                   	// #7
  401ea0:	mov	w3, #0x116                 	// #278
  401ea4:	mov	w1, wzr
  401ea8:	b	401f88 <main+0xbec>
  401eac:	mov	w23, w0
  401eb0:	mov	w0, wzr
  401eb4:	bl	4010a0 <log_get_max_level_realm@plt>
  401eb8:	cmp	w0, #0x3
  401ebc:	b.lt	402038 <main+0xc9c>  // b.tstop
  401ec0:	adrp	x2, 402000 <main+0xc64>
  401ec4:	adrp	x4, 402000 <main+0xc64>
  401ec8:	adrp	x5, 402000 <main+0xc64>
  401ecc:	add	x2, x2, #0x353
  401ed0:	add	x4, x4, #0x371
  401ed4:	add	x5, x5, #0x6d2
  401ed8:	mov	w0, #0x3                   	// #3
  401edc:	mov	w3, #0x10a                 	// #266
  401ee0:	mov	w1, w23
  401ee4:	b	402188 <main+0xdec>
  401ee8:	bl	401130 <__errno_location@plt>
  401eec:	ldr	w8, [x0]
  401ef0:	mov	x24, x0
  401ef4:	cmp	w8, #0xb
  401ef8:	b.ne	401f54 <main+0xbb8>  // b.any
  401efc:	eor	w8, w26, #0x1
  401f00:	tbnz	w8, #0, 401f54 <main+0xbb8>
  401f04:	mov	w0, wzr
  401f08:	bl	4010a0 <log_get_max_level_realm@plt>
  401f0c:	cmp	w0, #0x5
  401f10:	b.lt	401f3c <main+0xba0>  // b.tstop
  401f14:	adrp	x2, 402000 <main+0xc64>
  401f18:	adrp	x4, 402000 <main+0xc64>
  401f1c:	adrp	x5, 402000 <main+0xc64>
  401f20:	add	x2, x2, #0x353
  401f24:	add	x4, x4, #0x371
  401f28:	add	x5, x5, #0x708
  401f2c:	mov	w0, #0x5                   	// #5
  401f30:	mov	w3, #0x110                 	// #272
  401f34:	mov	w1, wzr
  401f38:	bl	4010b0 <log_internal_realm@plt>
  401f3c:	mov	x0, x21
  401f40:	mov	x1, x22
  401f44:	mov	w2, wzr
  401f48:	bl	401230 <getrandom@plt>
  401f4c:	mov	x23, x0
  401f50:	tbz	x0, #63, 401e6c <main+0xad0>
  401f54:	mov	w0, wzr
  401f58:	bl	4010a0 <log_get_max_level_realm@plt>
  401f5c:	cmp	w0, #0x7
  401f60:	b.lt	401f8c <main+0xbf0>  // b.tstop
  401f64:	ldr	w1, [x24]
  401f68:	adrp	x2, 402000 <main+0xc64>
  401f6c:	adrp	x4, 402000 <main+0xc64>
  401f70:	adrp	x5, 402000 <main+0xc64>
  401f74:	add	x2, x2, #0x353
  401f78:	add	x4, x4, #0x371
  401f7c:	add	x5, x5, #0x749
  401f80:	mov	w0, #0x7                   	// #7
  401f84:	mov	w3, #0x114                 	// #276
  401f88:	bl	4010b0 <log_internal_realm@plt>
  401f8c:	mov	w0, w20
  401f90:	mov	x1, x21
  401f94:	mov	x2, x22
  401f98:	mov	w3, wzr
  401f9c:	bl	401180 <loop_read@plt>
  401fa0:	mov	x23, x0
  401fa4:	tbnz	x0, #63, 402044 <main+0xca8>
  401fa8:	cbz	x23, 4020b0 <main+0xd14>
  401fac:	mov	w24, wzr
  401fb0:	b	401fb8 <main+0xc1c>
  401fb4:	mov	w24, #0x1                   	// #1
  401fb8:	mov	w0, w19
  401fbc:	mov	x1, x21
  401fc0:	mov	x2, x23
  401fc4:	mov	w3, wzr
  401fc8:	bl	401160 <loop_write@plt>
  401fcc:	mov	w22, w0
  401fd0:	tbnz	w0, #31, 40207c <main+0xce0>
  401fd4:	mov	w0, w19
  401fd8:	mov	x1, x23
  401fdc:	bl	401240 <ftruncate64@plt>
  401fe0:	tbnz	w0, #31, 4020f0 <main+0xd54>
  401fe4:	mov	w0, w19
  401fe8:	bl	4011f0 <fsync_full@plt>
  401fec:	tbnz	w0, #31, 402150 <main+0xdb4>
  401ff0:	cbz	w24, 402290 <main+0xef4>
  401ff4:	adrp	x1, 402000 <main+0xc64>
  401ff8:	adrp	x2, 402000 <main+0xc64>
  401ffc:	add	x1, x1, #0x5f6
  402000:	add	x2, x2, #0x8a1
  402004:	mov	w3, #0x1                   	// #1
  402008:	mov	w0, w19
  40200c:	mov	w4, wzr
  402010:	bl	401250 <fsetxattr@plt>
  402014:	tbz	w0, #31, 402290 <main+0xef4>
  402018:	bl	401130 <__errno_location@plt>
  40201c:	ldr	w23, [x0]
  402020:	cmp	w23, #0x5f
  402024:	b.eq	402030 <main+0xc94>  // b.none
  402028:	cmp	w23, #0x26
  40202c:	b.ne	402254 <main+0xeb8>  // b.any
  402030:	mov	w24, #0x7                   	// #7
  402034:	b	402258 <main+0xebc>
  402038:	mov	w8, wzr
  40203c:	neg	w9, w23
  402040:	b	401848 <main+0x4ac>
  402044:	mov	w0, wzr
  402048:	bl	4010a0 <log_get_max_level_realm@plt>
  40204c:	cmp	w0, #0x3
  402050:	b.lt	402140 <main+0xda4>  // b.tstop
  402054:	adrp	x2, 402000 <main+0xc64>
  402058:	adrp	x4, 402000 <main+0xc64>
  40205c:	adrp	x5, 402000 <main+0xc64>
  402060:	add	x2, x2, #0x353
  402064:	add	x4, x4, #0x371
  402068:	add	x5, x5, #0x7d5
  40206c:	mov	w0, #0x3                   	// #3
  402070:	mov	w3, #0x11e                 	// #286
  402074:	mov	w1, w23
  402078:	b	402188 <main+0xdec>
  40207c:	mov	w0, wzr
  402080:	bl	4010a0 <log_get_max_level_realm@plt>
  402084:	cmp	w0, #0x3
  402088:	b.lt	402194 <main+0xdf8>  // b.tstop
  40208c:	adrp	x2, 402000 <main+0xc64>
  402090:	adrp	x4, 402000 <main+0xc64>
  402094:	adrp	x5, 402000 <main+0xc64>
  402098:	add	x2, x2, #0x353
  40209c:	add	x4, x4, #0x371
  4020a0:	add	x5, x5, #0x82c
  4020a4:	mov	w0, #0x3                   	// #3
  4020a8:	mov	w3, #0x126                 	// #294
  4020ac:	b	402184 <main+0xde8>
  4020b0:	mov	w0, wzr
  4020b4:	bl	4010a0 <log_get_max_level_realm@plt>
  4020b8:	cmp	w0, #0x3
  4020bc:	b.lt	4021f0 <main+0xe54>  // b.tstop
  4020c0:	mov	w8, #0x16                  	// #22
  4020c4:	movk	w8, #0x4000, lsl #16
  4020c8:	adrp	x2, 402000 <main+0xc64>
  4020cc:	adrp	x4, 402000 <main+0xc64>
  4020d0:	adrp	x5, 402000 <main+0xc64>
  4020d4:	sub	w1, w8, #0x11
  4020d8:	add	x2, x2, #0x353
  4020dc:	add	x4, x4, #0x371
  4020e0:	add	x5, x5, #0x803
  4020e4:	mov	w0, #0x3                   	// #3
  4020e8:	mov	w3, #0x121                 	// #289
  4020ec:	b	402188 <main+0xdec>
  4020f0:	mov	w0, wzr
  4020f4:	bl	4010a0 <log_get_max_level_realm@plt>
  4020f8:	cmp	w0, #0x3
  4020fc:	b.lt	4021f8 <main+0xe5c>  // b.tstop
  402100:	adrp	x2, 402000 <main+0xc64>
  402104:	adrp	x4, 402000 <main+0xc64>
  402108:	adrp	x5, 402000 <main+0xc64>
  40210c:	add	x2, x2, #0x353
  402110:	add	x4, x4, #0x371
  402114:	add	x5, x5, #0x855
  402118:	mov	w0, #0x3                   	// #3
  40211c:	mov	w3, #0x129                 	// #297
  402120:	b	402184 <main+0xde8>
  402124:	adrp	x1, 402000 <main+0xc64>
  402128:	adrp	x3, 402000 <main+0xc64>
  40212c:	add	x1, x1, #0x353
  402130:	add	x3, x3, #0x371
  402134:	mov	w2, #0xf3                  	// #243
  402138:	bl	401170 <log_oom_internal@plt>
  40213c:	b	4021e0 <main+0xe44>
  402140:	cmp	w23, #0x0
  402144:	mov	w8, wzr
  402148:	cneg	w9, w23, mi  // mi = first
  40214c:	b	401848 <main+0x4ac>
  402150:	mov	w22, w0
  402154:	mov	w0, wzr
  402158:	bl	4010a0 <log_get_max_level_realm@plt>
  40215c:	cmp	w0, #0x3
  402160:	b.lt	402194 <main+0xdf8>  // b.tstop
  402164:	adrp	x2, 402000 <main+0xc64>
  402168:	adrp	x4, 402000 <main+0xc64>
  40216c:	adrp	x5, 402000 <main+0xc64>
  402170:	add	x2, x2, #0x353
  402174:	add	x4, x4, #0x371
  402178:	add	x5, x5, #0x87d
  40217c:	mov	w0, #0x3                   	// #3
  402180:	mov	w3, #0x12d                 	// #301
  402184:	mov	w1, w22
  402188:	bl	4010b0 <log_internal_realm@plt>
  40218c:	mov	w22, w0
  402190:	b	401508 <main+0x16c>
  402194:	mov	w8, wzr
  402198:	neg	w9, w22
  40219c:	b	401848 <main+0x4ac>
  4021a0:	bl	401130 <__errno_location@plt>
  4021a4:	ldr	w22, [x0]
  4021a8:	mov	w0, wzr
  4021ac:	bl	4010a0 <log_get_max_level_realm@plt>
  4021b0:	cmp	w0, #0x4
  4021b4:	b.lt	402240 <main+0xea4>  // b.tstop
  4021b8:	adrp	x2, 402000 <main+0xc64>
  4021bc:	adrp	x4, 402000 <main+0xc64>
  4021c0:	adrp	x5, 402000 <main+0xc64>
  4021c4:	add	x2, x2, #0x353
  4021c8:	add	x4, x4, #0x371
  4021cc:	add	x5, x5, #0x682
  4021d0:	mov	w0, #0x4                   	// #4
  4021d4:	mov	w3, #0xfa                  	// #250
  4021d8:	mov	w1, w22
  4021dc:	bl	4010b0 <log_internal_realm@plt>
  4021e0:	mov	w22, w0
  4021e4:	mov	x0, x24
  4021e8:	bl	4010c0 <free@plt>
  4021ec:	b	401508 <main+0x16c>
  4021f0:	mov	w22, #0xfffffffb            	// #-5
  4021f4:	b	401508 <main+0x16c>
  4021f8:	mov	w8, wzr
  4021fc:	sub	w22, w8, w22, uxtb
  402200:	b	401508 <main+0x16c>
  402204:	mov	w0, wzr
  402208:	bl	4010a0 <log_get_max_level_realm@plt>
  40220c:	cmp	w0, #0x4
  402210:	b.lt	401d8c <main+0x9f0>  // b.tstop
  402214:	adrp	x2, 402000 <main+0xc64>
  402218:	adrp	x4, 402000 <main+0xc64>
  40221c:	adrp	x5, 402000 <main+0xc64>
  402220:	add	x2, x2, #0x353
  402224:	add	x4, x4, #0x371
  402228:	add	x5, x5, #0x612
  40222c:	mov	w0, #0x4                   	// #4
  402230:	mov	w3, #0xe1                  	// #225
  402234:	mov	w1, w24
  402238:	bl	4010b0 <log_internal_realm@plt>
  40223c:	b	401d8c <main+0x9f0>
  402240:	cmp	w22, #0x0
  402244:	mov	w8, wzr
  402248:	cneg	w9, w22, mi  // mi = first
  40224c:	sub	w22, w8, w9, uxtb
  402250:	b	4021e4 <main+0xe48>
  402254:	mov	w24, #0x4                   	// #4
  402258:	mov	w0, wzr
  40225c:	bl	4010a0 <log_get_max_level_realm@plt>
  402260:	cmp	w0, w24
  402264:	b.lt	402290 <main+0xef4>  // b.tstop
  402268:	adrp	x2, 402000 <main+0xc64>
  40226c:	adrp	x4, 402000 <main+0xc64>
  402270:	adrp	x5, 402000 <main+0xc64>
  402274:	add	x2, x2, #0x353
  402278:	add	x4, x4, #0x371
  40227c:	add	x5, x5, #0x8a3
  402280:	mov	w3, #0x134                 	// #308
  402284:	mov	w0, w24
  402288:	mov	w1, w23
  40228c:	bl	4010b0 <log_internal_realm@plt>
  402290:	mov	w22, wzr
  402294:	b	401508 <main+0x16c>

0000000000402298 <__libc_csu_init>:
  402298:	stp	x29, x30, [sp, #-64]!
  40229c:	mov	x29, sp
  4022a0:	stp	x19, x20, [sp, #16]
  4022a4:	adrp	x20, 41f000 <__FRAME_END__+0x1c350>
  4022a8:	add	x20, x20, #0xc80
  4022ac:	stp	x21, x22, [sp, #32]
  4022b0:	adrp	x21, 41f000 <__FRAME_END__+0x1c350>
  4022b4:	add	x21, x21, #0xc78
  4022b8:	sub	x20, x20, x21
  4022bc:	mov	w22, w0
  4022c0:	stp	x23, x24, [sp, #48]
  4022c4:	mov	x23, x1
  4022c8:	mov	x24, x2
  4022cc:	bl	400fe8 <_init>
  4022d0:	cmp	xzr, x20, asr #3
  4022d4:	b.eq	402300 <__libc_csu_init+0x68>  // b.none
  4022d8:	asr	x20, x20, #3
  4022dc:	mov	x19, #0x0                   	// #0
  4022e0:	ldr	x3, [x21, x19, lsl #3]
  4022e4:	mov	x2, x24
  4022e8:	add	x19, x19, #0x1
  4022ec:	mov	x1, x23
  4022f0:	mov	w0, w22
  4022f4:	blr	x3
  4022f8:	cmp	x20, x19
  4022fc:	b.ne	4022e0 <__libc_csu_init+0x48>  // b.any
  402300:	ldp	x19, x20, [sp, #16]
  402304:	ldp	x21, x22, [sp, #32]
  402308:	ldp	x23, x24, [sp, #48]
  40230c:	ldp	x29, x30, [sp], #64
  402310:	ret
  402314:	nop

0000000000402318 <__libc_csu_fini>:
  402318:	ret
  40231c:	udf	#0

0000000000402320 <fstat64>:
  402320:	mov	x2, x1
  402324:	mov	w1, w0
  402328:	mov	w0, #0x0                   	// #0
  40232c:	b	401260 <__fxstat64@plt>

Disassembly of section .fini:

0000000000402330 <_fini>:
  402330:	stp	x29, x30, [sp, #-16]!
  402334:	mov	x29, sp
  402338:	ldp	x29, x30, [sp], #16
  40233c:	ret
