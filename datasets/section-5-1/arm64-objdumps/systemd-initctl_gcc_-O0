
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-initctl_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400d98 <_init>:
  400d98:	stp	x29, x30, [sp, #-16]!
  400d9c:	mov	x29, sp
  400da0:	bl	401010 <call_weak_fn>
  400da4:	ldp	x29, x30, [sp], #16
  400da8:	ret

Disassembly of section .plt:

0000000000400db0 <.plt>:
  400db0:	stp	x16, x30, [sp, #-16]!
  400db4:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400db8:	ldr	x17, [x16, #3824]
  400dbc:	add	x16, x16, #0xef0
  400dc0:	br	x17
  400dc4:	nop
  400dc8:	nop
  400dcc:	nop

0000000000400dd0 <kill@plt>:
  400dd0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400dd4:	ldr	x17, [x16, #3832]
  400dd8:	add	x16, x16, #0xef8
  400ddc:	br	x17

0000000000400de0 <bus_error_message@plt>:
  400de0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400de4:	ldr	x17, [x16, #3840]
  400de8:	add	x16, x16, #0xf00
  400dec:	br	x17

0000000000400df0 <getppid@plt>:
  400df0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400df4:	ldr	x17, [x16, #3848]
  400df8:	add	x16, x16, #0xf08
  400dfc:	br	x17

0000000000400e00 <__libc_start_main@plt>:
  400e00:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e04:	ldr	x17, [x16, #3856]
  400e08:	add	x16, x16, #0xf10
  400e0c:	br	x17

0000000000400e10 <epoll_ctl@plt>:
  400e10:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e14:	ldr	x17, [x16, #3864]
  400e18:	add	x16, x16, #0xf18
  400e1c:	br	x17

0000000000400e20 <sd_is_fifo@plt>:
  400e20:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e24:	ldr	x17, [x16, #3872]
  400e28:	add	x16, x16, #0xf20
  400e2c:	br	x17

0000000000400e30 <__gmon_start__@plt>:
  400e30:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e34:	ldr	x17, [x16, #3880]
  400e38:	add	x16, x16, #0xf28
  400e3c:	br	x17

0000000000400e40 <getpid_cached@plt>:
  400e40:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e44:	ldr	x17, [x16, #3888]
  400e48:	add	x16, x16, #0xf30
  400e4c:	br	x17

0000000000400e50 <bus_connect_system_systemd@plt>:
  400e50:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e54:	ldr	x17, [x16, #3896]
  400e58:	add	x16, x16, #0xf38
  400e5c:	br	x17

0000000000400e60 <__ctype_b_loc@plt>:
  400e60:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e64:	ldr	x17, [x16, #3904]
  400e68:	add	x16, x16, #0xf40
  400e6c:	br	x17

0000000000400e70 <log_setup_service@plt>:
  400e70:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e74:	ldr	x17, [x16, #3912]
  400e78:	add	x16, x16, #0xf48
  400e7c:	br	x17

0000000000400e80 <safe_close@plt>:
  400e80:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e84:	ldr	x17, [x16, #3920]
  400e88:	add	x16, x16, #0xf50
  400e8c:	br	x17

0000000000400e90 <log_assert_failed_realm@plt>:
  400e90:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400e94:	ldr	x17, [x16, #3928]
  400e98:	add	x16, x16, #0xf58
  400e9c:	br	x17

0000000000400ea0 <sd_listen_fds@plt>:
  400ea0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400ea4:	ldr	x17, [x16, #3936]
  400ea8:	add	x16, x16, #0xf60
  400eac:	br	x17

0000000000400eb0 <umask@plt>:
  400eb0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400eb4:	ldr	x17, [x16, #3944]
  400eb8:	add	x16, x16, #0xf68
  400ebc:	br	x17

0000000000400ec0 <abort@plt>:
  400ec0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400ec4:	ldr	x17, [x16, #3952]
  400ec8:	add	x16, x16, #0xf70
  400ecc:	br	x17

0000000000400ed0 <__errno_location@plt>:
  400ed0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400ed4:	ldr	x17, [x16, #3960]
  400ed8:	add	x16, x16, #0xf78
  400edc:	br	x17

0000000000400ee0 <read@plt>:
  400ee0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400ee4:	ldr	x17, [x16, #3968]
  400ee8:	add	x16, x16, #0xf80
  400eec:	br	x17

0000000000400ef0 <__stack_chk_fail@plt>:
  400ef0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400ef4:	ldr	x17, [x16, #3976]
  400ef8:	add	x16, x16, #0xf88
  400efc:	br	x17

0000000000400f00 <sd_bus_error_free@plt>:
  400f00:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f04:	ldr	x17, [x16, #3984]
  400f08:	add	x16, x16, #0xf90
  400f0c:	br	x17

0000000000400f10 <sd_notify@plt>:
  400f10:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f14:	ldr	x17, [x16, #3992]
  400f18:	add	x16, x16, #0xf98
  400f1c:	br	x17

0000000000400f20 <log_internal_realm@plt>:
  400f20:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f24:	ldr	x17, [x16, #4000]
  400f28:	add	x16, x16, #0xfa0
  400f2c:	br	x17

0000000000400f30 <sd_bus_flush_close_unref@plt>:
  400f30:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f34:	ldr	x17, [x16, #4008]
  400f38:	add	x16, x16, #0xfa8
  400f3c:	br	x17

0000000000400f40 <epoll_create1@plt>:
  400f40:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f44:	ldr	x17, [x16, #4016]
  400f48:	add	x16, x16, #0xfb0
  400f4c:	br	x17

0000000000400f50 <calloc@plt>:
  400f50:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f54:	ldr	x17, [x16, #4024]
  400f58:	add	x16, x16, #0xfb8
  400f5c:	br	x17

0000000000400f60 <free@plt>:
  400f60:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f64:	ldr	x17, [x16, #4032]
  400f68:	add	x16, x16, #0xfc0
  400f6c:	br	x17

0000000000400f70 <epoll_wait@plt>:
  400f70:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f74:	ldr	x17, [x16, #4040]
  400f78:	add	x16, x16, #0xfc8
  400f7c:	br	x17

0000000000400f80 <sd_bus_call_method@plt>:
  400f80:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f84:	ldr	x17, [x16, #4048]
  400f88:	add	x16, x16, #0xfd0
  400f8c:	br	x17

0000000000400f90 <kexec_loaded@plt>:
  400f90:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400f94:	ldr	x17, [x16, #4056]
  400f98:	add	x16, x16, #0xfd8
  400f9c:	br	x17

0000000000400fa0 <memset@plt>:
  400fa0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400fa4:	ldr	x17, [x16, #4064]
  400fa8:	add	x16, x16, #0xfe0
  400fac:	br	x17

0000000000400fb0 <log_get_max_level_realm@plt>:
  400fb0:	adrp	x16, 413000 <__FRAME_END__+0xf780>
  400fb4:	ldr	x17, [x16, #4072]
  400fb8:	add	x16, x16, #0xfe8
  400fbc:	br	x17

Disassembly of section .text:

0000000000400fc0 <_start>:
  400fc0:	mov	x29, #0x0                   	// #0
  400fc4:	mov	x30, #0x0                   	// #0
  400fc8:	mov	x5, x0
  400fcc:	ldr	x1, [sp]
  400fd0:	add	x2, sp, #0x8
  400fd4:	mov	x6, sp
  400fd8:	movz	x0, #0x0, lsl #48
  400fdc:	movk	x0, #0x0, lsl #32
  400fe0:	movk	x0, #0x40, lsl #16
  400fe4:	movk	x0, #0x27fc
  400fe8:	movz	x3, #0x0, lsl #48
  400fec:	movk	x3, #0x0, lsl #32
  400ff0:	movk	x3, #0x40, lsl #16
  400ff4:	movk	x3, #0x2cf0
  400ff8:	movz	x4, #0x0, lsl #48
  400ffc:	movk	x4, #0x0, lsl #32
  401000:	movk	x4, #0x40, lsl #16
  401004:	movk	x4, #0x2d70
  401008:	bl	400e00 <__libc_start_main@plt>
  40100c:	bl	400ec0 <abort@plt>

0000000000401010 <call_weak_fn>:
  401010:	adrp	x0, 413000 <__FRAME_END__+0xf780>
  401014:	ldr	x0, [x0, #4088]
  401018:	cbz	x0, 401020 <call_weak_fn+0x10>
  40101c:	b	400e30 <__gmon_start__@plt>
  401020:	ret

0000000000401024 <deregister_tm_clones>:
  401024:	stp	x29, x30, [sp, #-32]!
  401028:	mov	x29, sp
  40102c:	adrp	x0, 414000 <__TMC_END__>
  401030:	add	x0, x0, #0x0
  401034:	str	x0, [sp, #24]
  401038:	ldr	x0, [sp, #24]
  40103c:	str	x0, [sp, #24]
  401040:	ldr	x1, [sp, #24]
  401044:	adrp	x0, 414000 <__TMC_END__>
  401048:	add	x0, x0, #0x0
  40104c:	cmp	x1, x0
  401050:	b.eq	40108c <deregister_tm_clones+0x68>  // b.none
  401054:	adrp	x0, 402000 <server_done+0x7c>
  401058:	add	x0, x0, #0xd88
  40105c:	ldr	x0, [x0]
  401060:	str	x0, [sp, #16]
  401064:	ldr	x0, [sp, #16]
  401068:	str	x0, [sp, #16]
  40106c:	ldr	x0, [sp, #16]
  401070:	cmp	x0, #0x0
  401074:	b.eq	401090 <deregister_tm_clones+0x6c>  // b.none
  401078:	ldr	x1, [sp, #16]
  40107c:	adrp	x0, 414000 <__TMC_END__>
  401080:	add	x0, x0, #0x0
  401084:	blr	x1
  401088:	b	401090 <deregister_tm_clones+0x6c>
  40108c:	nop
  401090:	ldp	x29, x30, [sp], #32
  401094:	ret

0000000000401098 <register_tm_clones>:
  401098:	stp	x29, x30, [sp, #-48]!
  40109c:	mov	x29, sp
  4010a0:	adrp	x0, 414000 <__TMC_END__>
  4010a4:	add	x0, x0, #0x0
  4010a8:	str	x0, [sp, #40]
  4010ac:	ldr	x0, [sp, #40]
  4010b0:	str	x0, [sp, #40]
  4010b4:	ldr	x1, [sp, #40]
  4010b8:	adrp	x0, 414000 <__TMC_END__>
  4010bc:	add	x0, x0, #0x0
  4010c0:	sub	x0, x1, x0
  4010c4:	asr	x0, x0, #3
  4010c8:	lsr	x1, x0, #63
  4010cc:	add	x0, x1, x0
  4010d0:	asr	x0, x0, #1
  4010d4:	str	x0, [sp, #32]
  4010d8:	ldr	x0, [sp, #32]
  4010dc:	cmp	x0, #0x0
  4010e0:	b.eq	401120 <register_tm_clones+0x88>  // b.none
  4010e4:	adrp	x0, 402000 <server_done+0x7c>
  4010e8:	add	x0, x0, #0xd90
  4010ec:	ldr	x0, [x0]
  4010f0:	str	x0, [sp, #24]
  4010f4:	ldr	x0, [sp, #24]
  4010f8:	str	x0, [sp, #24]
  4010fc:	ldr	x0, [sp, #24]
  401100:	cmp	x0, #0x0
  401104:	b.eq	401124 <register_tm_clones+0x8c>  // b.none
  401108:	ldr	x2, [sp, #24]
  40110c:	ldr	x1, [sp, #32]
  401110:	adrp	x0, 414000 <__TMC_END__>
  401114:	add	x0, x0, #0x0
  401118:	blr	x2
  40111c:	b	401124 <register_tm_clones+0x8c>
  401120:	nop
  401124:	ldp	x29, x30, [sp], #48
  401128:	ret

000000000040112c <__do_global_dtors_aux>:
  40112c:	stp	x29, x30, [sp, #-16]!
  401130:	mov	x29, sp
  401134:	adrp	x0, 414000 <__TMC_END__>
  401138:	add	x0, x0, #0x0
  40113c:	ldrb	w0, [x0]
  401140:	and	x0, x0, #0xff
  401144:	cmp	x0, #0x0
  401148:	b.ne	401164 <__do_global_dtors_aux+0x38>  // b.any
  40114c:	bl	401024 <deregister_tm_clones>
  401150:	adrp	x0, 414000 <__TMC_END__>
  401154:	add	x0, x0, #0x0
  401158:	mov	w1, #0x1                   	// #1
  40115c:	strb	w1, [x0]
  401160:	b	401168 <__do_global_dtors_aux+0x3c>
  401164:	nop
  401168:	ldp	x29, x30, [sp], #16
  40116c:	ret

0000000000401170 <frame_dummy>:
  401170:	stp	x29, x30, [sp, #-16]!
  401174:	mov	x29, sp
  401178:	bl	401098 <register_tm_clones>
  40117c:	nop
  401180:	ldp	x29, x30, [sp], #16
  401184:	ret

0000000000401188 <translate_runlevel>:
  401188:	stp	x29, x30, [sp, #-48]!
  40118c:	mov	x29, sp
  401190:	str	w0, [sp, #28]
  401194:	str	x1, [sp, #16]
  401198:	ldr	x0, [sp, #16]
  40119c:	cmp	x0, #0x0
  4011a0:	cset	w0, eq  // eq = none
  4011a4:	and	w0, w0, #0xff
  4011a8:	and	x0, x0, #0xff
  4011ac:	cmp	x0, #0x0
  4011b0:	b.eq	4011dc <translate_runlevel+0x54>  // b.none
  4011b4:	adrp	x0, 402000 <server_done+0x7c>
  4011b8:	add	x1, x0, #0xd9b
  4011bc:	adrp	x0, 403000 <_fini+0x28c>
  4011c0:	add	x4, x0, #0x430
  4011c4:	mov	w3, #0x49                  	// #73
  4011c8:	mov	x2, x1
  4011cc:	adrp	x0, 402000 <server_done+0x7c>
  4011d0:	add	x1, x0, #0xdb8
  4011d4:	mov	w0, #0x0                   	// #0
  4011d8:	bl	400e90 <log_assert_failed_realm@plt>
  4011dc:	str	wzr, [sp, #44]
  4011e0:	b	40129c <translate_runlevel+0x114>
  4011e4:	adrp	x0, 403000 <_fini+0x28c>
  4011e8:	add	x2, x0, #0x448
  4011ec:	ldr	w1, [sp, #44]
  4011f0:	mov	x0, x1
  4011f4:	lsl	x0, x0, #1
  4011f8:	add	x0, x0, x1
  4011fc:	lsl	x0, x0, #3
  401200:	add	x0, x2, x0
  401204:	ldr	w0, [x0]
  401208:	ldr	w1, [sp, #28]
  40120c:	cmp	w1, w0
  401210:	b.ne	401290 <translate_runlevel+0x108>  // b.any
  401214:	adrp	x0, 403000 <_fini+0x28c>
  401218:	add	x2, x0, #0x448
  40121c:	ldr	w1, [sp, #44]
  401220:	mov	x0, x1
  401224:	lsl	x0, x0, #1
  401228:	add	x0, x0, x1
  40122c:	lsl	x0, x0, #3
  401230:	add	x0, x2, x0
  401234:	ldrb	w1, [x0, #16]
  401238:	ldr	x0, [sp, #16]
  40123c:	strb	w1, [x0]
  401240:	ldr	w0, [sp, #28]
  401244:	cmp	w0, #0x36
  401248:	b.ne	401268 <translate_runlevel+0xe0>  // b.any
  40124c:	bl	400f90 <kexec_loaded@plt>
  401250:	and	w0, w0, #0xff
  401254:	cmp	w0, #0x0
  401258:	b.eq	401268 <translate_runlevel+0xe0>  // b.none
  40125c:	adrp	x0, 402000 <server_done+0x7c>
  401260:	add	x0, x0, #0xdc0
  401264:	b	4012ac <translate_runlevel+0x124>
  401268:	adrp	x0, 403000 <_fini+0x28c>
  40126c:	add	x2, x0, #0x448
  401270:	ldr	w1, [sp, #44]
  401274:	mov	x0, x1
  401278:	lsl	x0, x0, #1
  40127c:	add	x0, x0, x1
  401280:	lsl	x0, x0, #3
  401284:	add	x0, x2, x0
  401288:	ldr	x0, [x0, #8]
  40128c:	b	4012ac <translate_runlevel+0x124>
  401290:	ldr	w0, [sp, #44]
  401294:	add	w0, w0, #0x1
  401298:	str	w0, [sp, #44]
  40129c:	ldr	w0, [sp, #44]
  4012a0:	cmp	w0, #0x8
  4012a4:	b.ls	4011e4 <translate_runlevel+0x5c>  // b.plast
  4012a8:	mov	x0, #0x0                   	// #0
  4012ac:	ldp	x29, x30, [sp], #48
  4012b0:	ret

00000000004012b4 <change_runlevel>:
  4012b4:	sub	sp, sp, #0xa0
  4012b8:	stp	x29, x30, [sp, #16]
  4012bc:	add	x29, sp, #0x10
  4012c0:	stp	x19, x20, [sp, #32]
  4012c4:	str	x0, [sp, #56]
  4012c8:	str	w1, [sp, #52]
  4012cc:	adrp	x0, 413000 <__FRAME_END__+0xf780>
  4012d0:	add	x0, x0, #0xca8
  4012d4:	ldr	x1, [x0]
  4012d8:	str	x1, [sp, #152]
  4012dc:	mov	x1, #0x0                   	// #0
  4012e0:	str	xzr, [sp, #128]
  4012e4:	str	xzr, [sp, #136]
  4012e8:	str	wzr, [sp, #144]
  4012ec:	strb	wzr, [sp, #71]
  4012f0:	ldr	x0, [sp, #56]
  4012f4:	cmp	x0, #0x0
  4012f8:	cset	w0, eq  // eq = none
  4012fc:	and	w0, w0, #0xff
  401300:	and	x0, x0, #0xff
  401304:	cmp	x0, #0x0
  401308:	b.eq	401334 <change_runlevel+0x80>  // b.none
  40130c:	adrp	x0, 402000 <server_done+0x7c>
  401310:	add	x1, x0, #0xd9b
  401314:	adrp	x0, 403000 <_fini+0x28c>
  401318:	add	x4, x0, #0x520
  40131c:	mov	w3, #0x5d                  	// #93
  401320:	mov	x2, x1
  401324:	adrp	x0, 402000 <server_done+0x7c>
  401328:	add	x1, x0, #0xdd0
  40132c:	mov	w0, #0x0                   	// #0
  401330:	bl	400e90 <log_assert_failed_realm@plt>
  401334:	add	x0, sp, #0x47
  401338:	mov	x1, x0
  40133c:	ldr	w0, [sp, #52]
  401340:	bl	401188 <translate_runlevel>
  401344:	str	x0, [sp, #120]
  401348:	ldr	x0, [sp, #120]
  40134c:	cmp	x0, #0x0
  401350:	b.ne	4013d4 <change_runlevel+0x120>  // b.any
  401354:	mov	w0, #0x4                   	// #4
  401358:	str	w0, [sp, #100]
  40135c:	str	wzr, [sp, #104]
  401360:	str	wzr, [sp, #108]
  401364:	ldr	w0, [sp, #108]
  401368:	bl	400fb0 <log_get_max_level_realm@plt>
  40136c:	mov	w1, w0
  401370:	ldr	w0, [sp, #100]
  401374:	and	w0, w0, #0x7
  401378:	cmp	w1, w0
  40137c:	b.lt	4013c4 <change_runlevel+0x110>  // b.tstop
  401380:	ldr	w0, [sp, #108]
  401384:	lsl	w1, w0, #10
  401388:	ldr	w0, [sp, #100]
  40138c:	orr	w7, w1, w0
  401390:	adrp	x0, 402000 <server_done+0x7c>
  401394:	add	x1, x0, #0xd9b
  401398:	ldr	w6, [sp, #52]
  40139c:	adrp	x0, 402000 <server_done+0x7c>
  4013a0:	add	x5, x0, #0xdd8
  4013a4:	adrp	x0, 403000 <_fini+0x28c>
  4013a8:	add	x4, x0, #0x530
  4013ac:	mov	w3, #0x61                  	// #97
  4013b0:	mov	x2, x1
  4013b4:	ldr	w1, [sp, #104]
  4013b8:	mov	w0, w7
  4013bc:	bl	400f20 <log_internal_realm@plt>
  4013c0:	b	4013cc <change_runlevel+0x118>
  4013c4:	ldr	w0, [sp, #104]
  4013c8:	cmp	w0, #0x0
  4013cc:	mov	w19, #0x0                   	// #0
  4013d0:	b	401580 <change_runlevel+0x2cc>
  4013d4:	ldrb	w0, [sp, #71]
  4013d8:	cmp	w0, #0x0
  4013dc:	b.eq	4013f0 <change_runlevel+0x13c>  // b.none
  4013e0:	adrp	x0, 402000 <server_done+0x7c>
  4013e4:	add	x0, x0, #0xdb8
  4013e8:	str	x0, [sp, #112]
  4013ec:	b	4013fc <change_runlevel+0x148>
  4013f0:	adrp	x0, 402000 <server_done+0x7c>
  4013f4:	add	x0, x0, #0xe08
  4013f8:	str	x0, [sp, #112]
  4013fc:	mov	w0, #0x7                   	// #7
  401400:	str	w0, [sp, #72]
  401404:	str	wzr, [sp, #76]
  401408:	str	wzr, [sp, #80]
  40140c:	ldr	w0, [sp, #80]
  401410:	bl	400fb0 <log_get_max_level_realm@plt>
  401414:	mov	w1, w0
  401418:	ldr	w0, [sp, #72]
  40141c:	and	w0, w0, #0x7
  401420:	cmp	w1, w0
  401424:	b.lt	401470 <change_runlevel+0x1bc>  // b.tstop
  401428:	ldr	w0, [sp, #80]
  40142c:	lsl	w1, w0, #10
  401430:	ldr	w0, [sp, #72]
  401434:	orr	w8, w1, w0
  401438:	adrp	x0, 402000 <server_done+0x7c>
  40143c:	add	x1, x0, #0xd9b
  401440:	ldr	x7, [sp, #112]
  401444:	ldr	x6, [sp, #120]
  401448:	adrp	x0, 402000 <server_done+0x7c>
  40144c:	add	x5, x0, #0xe20
  401450:	adrp	x0, 403000 <_fini+0x28c>
  401454:	add	x4, x0, #0x530
  401458:	mov	w3, #0x6a                  	// #106
  40145c:	mov	x2, x1
  401460:	ldr	w1, [sp, #76]
  401464:	mov	w0, w8
  401468:	bl	400f20 <log_internal_realm@plt>
  40146c:	b	401478 <change_runlevel+0x1c4>
  401470:	ldr	w0, [sp, #76]
  401474:	cmp	w0, #0x0
  401478:	ldr	x0, [sp, #56]
  40147c:	ldr	x8, [x0, #24]
  401480:	add	x1, sp, #0x80
  401484:	ldr	x0, [sp, #112]
  401488:	str	x0, [sp, #8]
  40148c:	ldr	x0, [sp, #120]
  401490:	str	x0, [sp]
  401494:	adrp	x0, 402000 <server_done+0x7c>
  401498:	add	x7, x0, #0xe40
  40149c:	mov	x6, #0x0                   	// #0
  4014a0:	mov	x5, x1
  4014a4:	adrp	x0, 402000 <server_done+0x7c>
  4014a8:	add	x4, x0, #0xe48
  4014ac:	adrp	x0, 402000 <server_done+0x7c>
  4014b0:	add	x3, x0, #0xe58
  4014b4:	adrp	x0, 402000 <server_done+0x7c>
  4014b8:	add	x2, x0, #0xe80
  4014bc:	adrp	x0, 402000 <server_done+0x7c>
  4014c0:	add	x1, x0, #0xea0
  4014c4:	mov	x0, x8
  4014c8:	bl	400f80 <sd_bus_call_method@plt>
  4014cc:	str	w0, [sp, #84]
  4014d0:	ldr	w0, [sp, #84]
  4014d4:	cmp	w0, #0x0
  4014d8:	b.ge	40157c <change_runlevel+0x2c8>  // b.tcont
  4014dc:	mov	w0, #0x3                   	// #3
  4014e0:	str	w0, [sp, #88]
  4014e4:	ldr	w0, [sp, #84]
  4014e8:	str	w0, [sp, #92]
  4014ec:	str	wzr, [sp, #96]
  4014f0:	ldr	w0, [sp, #96]
  4014f4:	bl	400fb0 <log_get_max_level_realm@plt>
  4014f8:	mov	w1, w0
  4014fc:	ldr	w0, [sp, #88]
  401500:	and	w0, w0, #0x7
  401504:	cmp	w1, w0
  401508:	b.lt	401564 <change_runlevel+0x2b0>  // b.tstop
  40150c:	ldr	w0, [sp, #96]
  401510:	lsl	w1, w0, #10
  401514:	ldr	w0, [sp, #88]
  401518:	orr	w19, w1, w0
  40151c:	adrp	x0, 402000 <server_done+0x7c>
  401520:	add	x20, x0, #0xd9b
  401524:	ldr	w0, [sp, #84]
  401528:	neg	w1, w0
  40152c:	add	x0, sp, #0x80
  401530:	bl	400de0 <bus_error_message@plt>
  401534:	mov	x6, x0
  401538:	adrp	x0, 402000 <server_done+0x7c>
  40153c:	add	x5, x0, #0xec0
  401540:	adrp	x0, 403000 <_fini+0x28c>
  401544:	add	x4, x0, #0x530
  401548:	mov	w3, #0x76                  	// #118
  40154c:	mov	x2, x20
  401550:	ldr	w1, [sp, #92]
  401554:	mov	w0, w19
  401558:	bl	400f20 <log_internal_realm@plt>
  40155c:	mov	w19, w0
  401560:	b	401580 <change_runlevel+0x2cc>
  401564:	ldr	w0, [sp, #92]
  401568:	cmp	w0, #0x0
  40156c:	cneg	w0, w0, lt  // lt = tstop
  401570:	and	w0, w0, #0xff
  401574:	neg	w19, w0
  401578:	b	401580 <change_runlevel+0x2cc>
  40157c:	mov	w19, #0x0                   	// #0
  401580:	add	x0, sp, #0x80
  401584:	bl	400f00 <sd_bus_error_free@plt>
  401588:	mov	w1, w19
  40158c:	adrp	x0, 413000 <__FRAME_END__+0xf780>
  401590:	add	x0, x0, #0xca8
  401594:	ldr	x2, [sp, #152]
  401598:	ldr	x0, [x0]
  40159c:	eor	x0, x2, x0
  4015a0:	cmp	x0, #0x0
  4015a4:	b.eq	4015ac <change_runlevel+0x2f8>  // b.none
  4015a8:	bl	400ef0 <__stack_chk_fail@plt>
  4015ac:	mov	w0, w1
  4015b0:	ldp	x19, x20, [sp, #32]
  4015b4:	ldp	x29, x30, [sp, #16]
  4015b8:	add	sp, sp, #0xa0
  4015bc:	ret

00000000004015c0 <request_process>:
  4015c0:	stp	x29, x30, [sp, #-128]!
  4015c4:	mov	x29, sp
  4015c8:	str	x0, [sp, #24]
  4015cc:	str	x1, [sp, #16]
  4015d0:	ldr	x0, [sp, #24]
  4015d4:	cmp	x0, #0x0
  4015d8:	cset	w0, eq  // eq = none
  4015dc:	and	w0, w0, #0xff
  4015e0:	and	x0, x0, #0xff
  4015e4:	cmp	x0, #0x0
  4015e8:	b.eq	401614 <request_process+0x54>  // b.none
  4015ec:	adrp	x0, 402000 <server_done+0x7c>
  4015f0:	add	x1, x0, #0xd9b
  4015f4:	adrp	x0, 403000 <_fini+0x28c>
  4015f8:	add	x4, x0, #0x540
  4015fc:	mov	w3, #0x7c                  	// #124
  401600:	mov	x2, x1
  401604:	adrp	x0, 402000 <server_done+0x7c>
  401608:	add	x1, x0, #0xdd0
  40160c:	mov	w0, #0x0                   	// #0
  401610:	bl	400e90 <log_assert_failed_realm@plt>
  401614:	ldr	x0, [sp, #16]
  401618:	cmp	x0, #0x0
  40161c:	cset	w0, eq  // eq = none
  401620:	and	w0, w0, #0xff
  401624:	and	x0, x0, #0xff
  401628:	cmp	x0, #0x0
  40162c:	b.eq	401658 <request_process+0x98>  // b.none
  401630:	adrp	x0, 402000 <server_done+0x7c>
  401634:	add	x1, x0, #0xd9b
  401638:	adrp	x0, 403000 <_fini+0x28c>
  40163c:	add	x4, x0, #0x540
  401640:	mov	w3, #0x7d                  	// #125
  401644:	mov	x2, x1
  401648:	adrp	x0, 402000 <server_done+0x7c>
  40164c:	add	x1, x0, #0xee0
  401650:	mov	w0, #0x0                   	// #0
  401654:	bl	400e90 <log_assert_failed_realm@plt>
  401658:	ldr	x0, [sp, #16]
  40165c:	ldr	w1, [x0]
  401660:	mov	w0, #0x1969                	// #6505
  401664:	movk	w0, #0x309, lsl #16
  401668:	cmp	w1, w0
  40166c:	b.eq	4016e8 <request_process+0x128>  // b.none
  401670:	mov	w0, #0x3                   	// #3
  401674:	str	w0, [sp, #116]
  401678:	str	wzr, [sp, #120]
  40167c:	str	wzr, [sp, #124]
  401680:	ldr	w0, [sp, #124]
  401684:	bl	400fb0 <log_get_max_level_realm@plt>
  401688:	mov	w1, w0
  40168c:	ldr	w0, [sp, #116]
  401690:	and	w0, w0, #0x7
  401694:	cmp	w1, w0
  401698:	b.lt	4016dc <request_process+0x11c>  // b.tstop
  40169c:	ldr	w0, [sp, #124]
  4016a0:	lsl	w1, w0, #10
  4016a4:	ldr	w0, [sp, #116]
  4016a8:	orr	w6, w1, w0
  4016ac:	adrp	x0, 402000 <server_done+0x7c>
  4016b0:	add	x1, x0, #0xd9b
  4016b4:	adrp	x0, 402000 <server_done+0x7c>
  4016b8:	add	x5, x0, #0xee8
  4016bc:	adrp	x0, 403000 <_fini+0x28c>
  4016c0:	add	x4, x0, #0x550
  4016c4:	mov	w3, #0x80                  	// #128
  4016c8:	mov	x2, x1
  4016cc:	ldr	w1, [sp, #120]
  4016d0:	mov	w0, w6
  4016d4:	bl	400f20 <log_internal_realm@plt>
  4016d8:	b	401b48 <request_process+0x588>
  4016dc:	ldr	w0, [sp, #120]
  4016e0:	cmp	w0, #0x0
  4016e4:	b	401b48 <request_process+0x588>
  4016e8:	ldr	x0, [sp, #16]
  4016ec:	ldr	w0, [x0, #4]
  4016f0:	mov	w1, #0x3039                	// #12345
  4016f4:	cmp	w0, w1
  4016f8:	b.eq	4019e0 <request_process+0x420>  // b.none
  4016fc:	mov	w1, #0x3039                	// #12345
  401700:	cmp	w0, w1
  401704:	b.gt	401ad0 <request_process+0x510>
  401708:	cmp	w0, #0x7
  40170c:	b.gt	401ad0 <request_process+0x510>
  401710:	cmp	w0, #0x6
  401714:	b.ge	401a58 <request_process+0x498>  // b.tcont
  401718:	cmp	w0, #0x1
  40171c:	b.eq	401738 <request_process+0x178>  // b.none
  401720:	cmp	w0, #0x0
  401724:	b.le	401ad0 <request_process+0x510>
  401728:	sub	w0, w0, #0x2
  40172c:	cmp	w0, #0x2
  401730:	b.hi	401ad0 <request_process+0x510>  // b.pmore
  401734:	b	401968 <request_process+0x3a8>
  401738:	bl	400e60 <__ctype_b_loc@plt>
  40173c:	ldr	x1, [x0]
  401740:	ldr	x0, [sp, #16]
  401744:	ldr	w0, [x0, #8]
  401748:	sxtw	x0, w0
  40174c:	lsl	x0, x0, #1
  401750:	add	x0, x1, x0
  401754:	ldrh	w0, [x0]
  401758:	and	w0, w0, #0x4000
  40175c:	cmp	w0, #0x0
  401760:	b.ne	4017dc <request_process+0x21c>  // b.any
  401764:	mov	w0, #0x3                   	// #3
  401768:	str	w0, [sp, #92]
  40176c:	str	wzr, [sp, #96]
  401770:	str	wzr, [sp, #100]
  401774:	ldr	w0, [sp, #100]
  401778:	bl	400fb0 <log_get_max_level_realm@plt>
  40177c:	mov	w1, w0
  401780:	ldr	w0, [sp, #92]
  401784:	and	w0, w0, #0x7
  401788:	cmp	w1, w0
  40178c:	b.lt	4017d0 <request_process+0x210>  // b.tstop
  401790:	ldr	w0, [sp, #100]
  401794:	lsl	w1, w0, #10
  401798:	ldr	w0, [sp, #92]
  40179c:	orr	w6, w1, w0
  4017a0:	adrp	x0, 402000 <server_done+0x7c>
  4017a4:	add	x1, x0, #0xd9b
  4017a8:	adrp	x0, 402000 <server_done+0x7c>
  4017ac:	add	x5, x0, #0xf20
  4017b0:	adrp	x0, 403000 <_fini+0x28c>
  4017b4:	add	x4, x0, #0x550
  4017b8:	mov	w3, #0x88                  	// #136
  4017bc:	mov	x2, x1
  4017c0:	ldr	w1, [sp, #96]
  4017c4:	mov	w0, w6
  4017c8:	bl	400f20 <log_internal_realm@plt>
  4017cc:	b	401b48 <request_process+0x588>
  4017d0:	ldr	w0, [sp, #96]
  4017d4:	cmp	w0, #0x0
  4017d8:	b	401b48 <request_process+0x588>
  4017dc:	ldr	x0, [sp, #16]
  4017e0:	ldr	w0, [x0, #8]
  4017e4:	cmp	w0, #0x75
  4017e8:	b.eq	401814 <request_process+0x254>  // b.none
  4017ec:	cmp	w0, #0x75
  4017f0:	b.gt	401948 <request_process+0x388>
  4017f4:	cmp	w0, #0x71
  4017f8:	b.eq	4018b4 <request_process+0x2f4>  // b.none
  4017fc:	cmp	w0, #0x71
  401800:	b.gt	401948 <request_process+0x388>
  401804:	cmp	w0, #0x51
  401808:	b.eq	4018b4 <request_process+0x2f4>  // b.none
  40180c:	cmp	w0, #0x55
  401810:	b.ne	401948 <request_process+0x388>  // b.any
  401814:	mov	w1, #0xf                   	// #15
  401818:	mov	w0, #0x1                   	// #1
  40181c:	bl	400dd0 <kill@plt>
  401820:	cmp	w0, #0x0
  401824:	b.ge	4018a4 <request_process+0x2e4>  // b.tcont
  401828:	mov	w0, #0x3                   	// #3
  40182c:	str	w0, [sp, #68]
  401830:	bl	400ed0 <__errno_location@plt>
  401834:	ldr	w0, [x0]
  401838:	str	w0, [sp, #72]
  40183c:	str	wzr, [sp, #76]
  401840:	ldr	w0, [sp, #76]
  401844:	bl	400fb0 <log_get_max_level_realm@plt>
  401848:	mov	w1, w0
  40184c:	ldr	w0, [sp, #68]
  401850:	and	w0, w0, #0x7
  401854:	cmp	w1, w0
  401858:	b.lt	40189c <request_process+0x2dc>  // b.tstop
  40185c:	ldr	w0, [sp, #76]
  401860:	lsl	w1, w0, #10
  401864:	ldr	w0, [sp, #68]
  401868:	orr	w6, w1, w0
  40186c:	adrp	x0, 402000 <server_done+0x7c>
  401870:	add	x1, x0, #0xd9b
  401874:	adrp	x0, 402000 <server_done+0x7c>
  401878:	add	x5, x0, #0xf40
  40187c:	adrp	x0, 403000 <_fini+0x28c>
  401880:	add	x4, x0, #0x550
  401884:	mov	w3, #0x90                  	// #144
  401888:	mov	x2, x1
  40188c:	ldr	w1, [sp, #72]
  401890:	mov	w0, w6
  401894:	bl	400f20 <log_internal_realm@plt>
  401898:	b	4018a4 <request_process+0x2e4>
  40189c:	ldr	w0, [sp, #72]
  4018a0:	cmp	w0, #0x0
  4018a4:	ldr	x0, [sp, #24]
  4018a8:	mov	w1, #0x1                   	// #1
  4018ac:	strb	w1, [x0, #32]
  4018b0:	b	401964 <request_process+0x3a4>
  4018b4:	mov	w1, #0x1                   	// #1
  4018b8:	mov	w0, #0x1                   	// #1
  4018bc:	bl	400dd0 <kill@plt>
  4018c0:	cmp	w0, #0x0
  4018c4:	b.ge	401960 <request_process+0x3a0>  // b.tcont
  4018c8:	mov	w0, #0x3                   	// #3
  4018cc:	str	w0, [sp, #80]
  4018d0:	bl	400ed0 <__errno_location@plt>
  4018d4:	ldr	w0, [x0]
  4018d8:	str	w0, [sp, #84]
  4018dc:	str	wzr, [sp, #88]
  4018e0:	ldr	w0, [sp, #88]
  4018e4:	bl	400fb0 <log_get_max_level_realm@plt>
  4018e8:	mov	w1, w0
  4018ec:	ldr	w0, [sp, #80]
  4018f0:	and	w0, w0, #0x7
  4018f4:	cmp	w1, w0
  4018f8:	b.lt	40193c <request_process+0x37c>  // b.tstop
  4018fc:	ldr	w0, [sp, #88]
  401900:	lsl	w1, w0, #10
  401904:	ldr	w0, [sp, #80]
  401908:	orr	w6, w1, w0
  40190c:	adrp	x0, 402000 <server_done+0x7c>
  401910:	add	x1, x0, #0xd9b
  401914:	adrp	x0, 402000 <server_done+0x7c>
  401918:	add	x5, x0, #0xf40
  40191c:	adrp	x0, 403000 <_fini+0x28c>
  401920:	add	x4, x0, #0x550
  401924:	mov	w3, #0x9d                  	// #157
  401928:	mov	x2, x1
  40192c:	ldr	w1, [sp, #84]
  401930:	mov	w0, w6
  401934:	bl	400f20 <log_internal_realm@plt>
  401938:	b	401960 <request_process+0x3a0>
  40193c:	ldr	w0, [sp, #84]
  401940:	cmp	w0, #0x0
  401944:	b	401960 <request_process+0x3a0>
  401948:	ldr	x0, [sp, #16]
  40194c:	ldr	w0, [x0, #8]
  401950:	mov	w1, w0
  401954:	ldr	x0, [sp, #24]
  401958:	bl	4012b4 <change_runlevel>
  40195c:	b	401b48 <request_process+0x588>
  401960:	nop
  401964:	b	401b48 <request_process+0x588>
  401968:	mov	w0, #0x4                   	// #4
  40196c:	str	w0, [sp, #56]
  401970:	str	wzr, [sp, #60]
  401974:	str	wzr, [sp, #64]
  401978:	ldr	w0, [sp, #64]
  40197c:	bl	400fb0 <log_get_max_level_realm@plt>
  401980:	mov	w1, w0
  401984:	ldr	w0, [sp, #56]
  401988:	and	w0, w0, #0x7
  40198c:	cmp	w1, w0
  401990:	b.lt	4019d4 <request_process+0x414>  // b.tstop
  401994:	ldr	w0, [sp, #64]
  401998:	lsl	w1, w0, #10
  40199c:	ldr	w0, [sp, #56]
  4019a0:	orr	w6, w1, w0
  4019a4:	adrp	x0, 402000 <server_done+0x7c>
  4019a8:	add	x1, x0, #0xd9b
  4019ac:	adrp	x0, 402000 <server_done+0x7c>
  4019b0:	add	x5, x0, #0xf58
  4019b4:	adrp	x0, 403000 <_fini+0x28c>
  4019b8:	add	x4, x0, #0x550
  4019bc:	mov	w3, #0xa8                  	// #168
  4019c0:	mov	x2, x1
  4019c4:	ldr	w1, [sp, #60]
  4019c8:	mov	w0, w6
  4019cc:	bl	400f20 <log_internal_realm@plt>
  4019d0:	b	401b48 <request_process+0x588>
  4019d4:	ldr	w0, [sp, #60]
  4019d8:	cmp	w0, #0x0
  4019dc:	b	401b48 <request_process+0x588>
  4019e0:	mov	w0, #0x4                   	// #4
  4019e4:	str	w0, [sp, #32]
  4019e8:	str	wzr, [sp, #36]
  4019ec:	str	wzr, [sp, #40]
  4019f0:	ldr	w0, [sp, #40]
  4019f4:	bl	400fb0 <log_get_max_level_realm@plt>
  4019f8:	mov	w1, w0
  4019fc:	ldr	w0, [sp, #32]
  401a00:	and	w0, w0, #0x7
  401a04:	cmp	w1, w0
  401a08:	b.lt	401a4c <request_process+0x48c>  // b.tstop
  401a0c:	ldr	w0, [sp, #40]
  401a10:	lsl	w1, w0, #10
  401a14:	ldr	w0, [sp, #32]
  401a18:	orr	w6, w1, w0
  401a1c:	adrp	x0, 402000 <server_done+0x7c>
  401a20:	add	x1, x0, #0xd9b
  401a24:	adrp	x0, 402000 <server_done+0x7c>
  401a28:	add	x5, x0, #0xfc0
  401a2c:	adrp	x0, 403000 <_fini+0x28c>
  401a30:	add	x4, x0, #0x550
  401a34:	mov	w3, #0xac                  	// #172
  401a38:	mov	x2, x1
  401a3c:	ldr	w1, [sp, #36]
  401a40:	mov	w0, w6
  401a44:	bl	400f20 <log_internal_realm@plt>
  401a48:	b	401b48 <request_process+0x588>
  401a4c:	ldr	w0, [sp, #36]
  401a50:	cmp	w0, #0x0
  401a54:	b	401b48 <request_process+0x588>
  401a58:	mov	w0, #0x4                   	// #4
  401a5c:	str	w0, [sp, #44]
  401a60:	str	wzr, [sp, #48]
  401a64:	str	wzr, [sp, #52]
  401a68:	ldr	w0, [sp, #52]
  401a6c:	bl	400fb0 <log_get_max_level_realm@plt>
  401a70:	mov	w1, w0
  401a74:	ldr	w0, [sp, #44]
  401a78:	and	w0, w0, #0x7
  401a7c:	cmp	w1, w0
  401a80:	b.lt	401ac4 <request_process+0x504>  // b.tstop
  401a84:	ldr	w0, [sp, #52]
  401a88:	lsl	w1, w0, #10
  401a8c:	ldr	w0, [sp, #44]
  401a90:	orr	w6, w1, w0
  401a94:	adrp	x0, 402000 <server_done+0x7c>
  401a98:	add	x1, x0, #0xd9b
  401a9c:	adrp	x0, 403000 <_fini+0x28c>
  401aa0:	add	x5, x0, #0x10
  401aa4:	adrp	x0, 403000 <_fini+0x28c>
  401aa8:	add	x4, x0, #0x550
  401aac:	mov	w3, #0xb1                  	// #177
  401ab0:	mov	x2, x1
  401ab4:	ldr	w1, [sp, #48]
  401ab8:	mov	w0, w6
  401abc:	bl	400f20 <log_internal_realm@plt>
  401ac0:	b	401b48 <request_process+0x588>
  401ac4:	ldr	w0, [sp, #48]
  401ac8:	cmp	w0, #0x0
  401acc:	b	401b48 <request_process+0x588>
  401ad0:	mov	w0, #0x4                   	// #4
  401ad4:	str	w0, [sp, #104]
  401ad8:	str	wzr, [sp, #108]
  401adc:	str	wzr, [sp, #112]
  401ae0:	ldr	w0, [sp, #112]
  401ae4:	bl	400fb0 <log_get_max_level_realm@plt>
  401ae8:	mov	w1, w0
  401aec:	ldr	w0, [sp, #104]
  401af0:	and	w0, w0, #0x7
  401af4:	cmp	w1, w0
  401af8:	b.lt	401b3c <request_process+0x57c>  // b.tstop
  401afc:	ldr	w0, [sp, #112]
  401b00:	lsl	w1, w0, #10
  401b04:	ldr	w0, [sp, #104]
  401b08:	orr	w6, w1, w0
  401b0c:	adrp	x0, 402000 <server_done+0x7c>
  401b10:	add	x1, x0, #0xd9b
  401b14:	adrp	x0, 403000 <_fini+0x28c>
  401b18:	add	x5, x0, #0x60
  401b1c:	adrp	x0, 403000 <_fini+0x28c>
  401b20:	add	x4, x0, #0x550
  401b24:	mov	w3, #0xb5                  	// #181
  401b28:	mov	x2, x1
  401b2c:	ldr	w1, [sp, #108]
  401b30:	mov	w0, w6
  401b34:	bl	400f20 <log_internal_realm@plt>
  401b38:	b	401b44 <request_process+0x584>
  401b3c:	ldr	w0, [sp, #108]
  401b40:	cmp	w0, #0x0
  401b44:	nop
  401b48:	ldp	x29, x30, [sp], #128
  401b4c:	ret

0000000000401b50 <fifo_process>:
  401b50:	stp	x29, x30, [sp, #-64]!
  401b54:	mov	x29, sp
  401b58:	str	x0, [sp, #24]
  401b5c:	ldr	x0, [sp, #24]
  401b60:	cmp	x0, #0x0
  401b64:	cset	w0, eq  // eq = none
  401b68:	and	w0, w0, #0xff
  401b6c:	and	x0, x0, #0xff
  401b70:	cmp	x0, #0x0
  401b74:	b.eq	401ba0 <fifo_process+0x50>  // b.none
  401b78:	adrp	x0, 402000 <server_done+0x7c>
  401b7c:	add	x1, x0, #0xd9b
  401b80:	adrp	x0, 403000 <_fini+0x28c>
  401b84:	add	x4, x0, #0x560
  401b88:	mov	w3, #0xbd                  	// #189
  401b8c:	mov	x2, x1
  401b90:	adrp	x0, 403000 <_fini+0x28c>
  401b94:	add	x1, x0, #0x90
  401b98:	mov	w0, #0x0                   	// #0
  401b9c:	bl	400e90 <log_assert_failed_realm@plt>
  401ba0:	bl	400ed0 <__errno_location@plt>
  401ba4:	mov	x1, x0
  401ba8:	mov	w0, #0x5                   	// #5
  401bac:	str	w0, [x1]
  401bb0:	ldr	x0, [sp, #24]
  401bb4:	ldr	w3, [x0, #8]
  401bb8:	ldr	x0, [sp, #24]
  401bbc:	add	x1, x0, #0xc
  401bc0:	ldr	x0, [sp, #24]
  401bc4:	ldr	x0, [x0, #400]
  401bc8:	add	x4, x1, x0
  401bcc:	ldr	x0, [sp, #24]
  401bd0:	ldr	x0, [x0, #400]
  401bd4:	mov	x1, #0x180                 	// #384
  401bd8:	sub	x0, x1, x0
  401bdc:	mov	x2, x0
  401be0:	mov	x1, x4
  401be4:	mov	w0, w3
  401be8:	bl	400ee0 <read@plt>
  401bec:	str	x0, [sp, #56]
  401bf0:	ldr	x0, [sp, #56]
  401bf4:	cmp	x0, #0x0
  401bf8:	b.gt	401ca0 <fifo_process+0x150>
  401bfc:	bl	400ed0 <__errno_location@plt>
  401c00:	ldr	w0, [x0]
  401c04:	cmp	w0, #0xb
  401c08:	b.ne	401c14 <fifo_process+0xc4>  // b.any
  401c0c:	mov	w0, #0x0                   	// #0
  401c10:	b	401d38 <fifo_process+0x1e8>
  401c14:	mov	w0, #0x4                   	// #4
  401c18:	str	w0, [sp, #44]
  401c1c:	bl	400ed0 <__errno_location@plt>
  401c20:	ldr	w0, [x0]
  401c24:	str	w0, [sp, #48]
  401c28:	str	wzr, [sp, #52]
  401c2c:	ldr	w0, [sp, #52]
  401c30:	bl	400fb0 <log_get_max_level_realm@plt>
  401c34:	mov	w1, w0
  401c38:	ldr	w0, [sp, #44]
  401c3c:	and	w0, w0, #0x7
  401c40:	cmp	w1, w0
  401c44:	b.lt	401c88 <fifo_process+0x138>  // b.tstop
  401c48:	ldr	w0, [sp, #52]
  401c4c:	lsl	w1, w0, #10
  401c50:	ldr	w0, [sp, #44]
  401c54:	orr	w6, w1, w0
  401c58:	adrp	x0, 402000 <server_done+0x7c>
  401c5c:	add	x1, x0, #0xd9b
  401c60:	adrp	x0, 403000 <_fini+0x28c>
  401c64:	add	x5, x0, #0x98
  401c68:	adrp	x0, 403000 <_fini+0x28c>
  401c6c:	add	x4, x0, #0x570
  401c70:	mov	w3, #0xc7                  	// #199
  401c74:	mov	x2, x1
  401c78:	ldr	w1, [sp, #48]
  401c7c:	mov	w0, w6
  401c80:	bl	400f20 <log_internal_realm@plt>
  401c84:	b	401d38 <fifo_process+0x1e8>
  401c88:	ldr	w0, [sp, #48]
  401c8c:	cmp	w0, #0x0
  401c90:	cneg	w0, w0, lt  // lt = tstop
  401c94:	and	w0, w0, #0xff
  401c98:	neg	w0, w0
  401c9c:	b	401d38 <fifo_process+0x1e8>
  401ca0:	ldr	x0, [sp, #24]
  401ca4:	ldr	x1, [x0, #400]
  401ca8:	ldr	x0, [sp, #56]
  401cac:	add	x1, x1, x0
  401cb0:	ldr	x0, [sp, #24]
  401cb4:	str	x1, [x0, #400]
  401cb8:	ldr	x0, [sp, #24]
  401cbc:	ldr	x0, [x0, #400]
  401cc0:	cmp	x0, #0x180
  401cc4:	cset	w0, hi  // hi = pmore
  401cc8:	and	w0, w0, #0xff
  401ccc:	and	x0, x0, #0xff
  401cd0:	cmp	x0, #0x0
  401cd4:	b.eq	401d00 <fifo_process+0x1b0>  // b.none
  401cd8:	adrp	x0, 402000 <server_done+0x7c>
  401cdc:	add	x1, x0, #0xd9b
  401ce0:	adrp	x0, 403000 <_fini+0x28c>
  401ce4:	add	x4, x0, #0x560
  401ce8:	mov	w3, #0xcb                  	// #203
  401cec:	mov	x2, x1
  401cf0:	adrp	x0, 403000 <_fini+0x28c>
  401cf4:	add	x1, x0, #0xb8
  401cf8:	mov	w0, #0x0                   	// #0
  401cfc:	bl	400e90 <log_assert_failed_realm@plt>
  401d00:	ldr	x0, [sp, #24]
  401d04:	ldr	x0, [x0, #400]
  401d08:	cmp	x0, #0x180
  401d0c:	b.ne	401d34 <fifo_process+0x1e4>  // b.any
  401d10:	ldr	x0, [sp, #24]
  401d14:	ldr	x2, [x0]
  401d18:	ldr	x0, [sp, #24]
  401d1c:	add	x0, x0, #0xc
  401d20:	mov	x1, x0
  401d24:	mov	x0, x2
  401d28:	bl	4015c0 <request_process>
  401d2c:	ldr	x0, [sp, #24]
  401d30:	str	xzr, [x0, #400]
  401d34:	mov	w0, #0x0                   	// #0
  401d38:	ldp	x29, x30, [sp], #64
  401d3c:	ret

0000000000401d40 <fifo_free>:
  401d40:	stp	x29, x30, [sp, #-48]!
  401d44:	mov	x29, sp
  401d48:	str	x0, [sp, #24]
  401d4c:	ldr	x0, [sp, #24]
  401d50:	cmp	x0, #0x0
  401d54:	cset	w0, eq  // eq = none
  401d58:	and	w0, w0, #0xff
  401d5c:	and	x0, x0, #0xff
  401d60:	cmp	x0, #0x0
  401d64:	b.eq	401d90 <fifo_free+0x50>  // b.none
  401d68:	adrp	x0, 402000 <server_done+0x7c>
  401d6c:	add	x1, x0, #0xd9b
  401d70:	adrp	x0, 403000 <_fini+0x28c>
  401d74:	add	x4, x0, #0x580
  401d78:	mov	w3, #0xd6                  	// #214
  401d7c:	mov	x2, x1
  401d80:	adrp	x0, 403000 <_fini+0x28c>
  401d84:	add	x1, x0, #0x90
  401d88:	mov	w0, #0x0                   	// #0
  401d8c:	bl	400e90 <log_assert_failed_realm@plt>
  401d90:	ldr	x0, [sp, #24]
  401d94:	ldr	x0, [x0]
  401d98:	cmp	x0, #0x0
  401d9c:	b.eq	401f1c <fifo_free+0x1dc>  // b.none
  401da0:	ldr	x0, [sp, #24]
  401da4:	ldr	x0, [x0]
  401da8:	ldr	w0, [x0, #16]
  401dac:	cmp	w0, #0x0
  401db0:	cset	w0, eq  // eq = none
  401db4:	and	w0, w0, #0xff
  401db8:	and	x0, x0, #0xff
  401dbc:	cmp	x0, #0x0
  401dc0:	b.eq	401dec <fifo_free+0xac>  // b.none
  401dc4:	adrp	x0, 402000 <server_done+0x7c>
  401dc8:	add	x1, x0, #0xd9b
  401dcc:	adrp	x0, 403000 <_fini+0x28c>
  401dd0:	add	x4, x0, #0x580
  401dd4:	mov	w3, #0xd9                  	// #217
  401dd8:	mov	x2, x1
  401ddc:	adrp	x0, 403000 <_fini+0x28c>
  401de0:	add	x1, x0, #0xe0
  401de4:	mov	w0, #0x0                   	// #0
  401de8:	bl	400e90 <log_assert_failed_realm@plt>
  401dec:	ldr	x0, [sp, #24]
  401df0:	ldr	x0, [x0]
  401df4:	ldr	w1, [x0, #16]
  401df8:	sub	w1, w1, #0x1
  401dfc:	str	w1, [x0, #16]
  401e00:	ldr	x0, [sp, #24]
  401e04:	ldr	x0, [x0]
  401e08:	add	x0, x0, #0x8
  401e0c:	str	x0, [sp, #32]
  401e10:	ldr	x0, [sp, #24]
  401e14:	str	x0, [sp, #40]
  401e18:	ldr	x0, [sp, #40]
  401e1c:	cmp	x0, #0x0
  401e20:	cset	w0, eq  // eq = none
  401e24:	and	w0, w0, #0xff
  401e28:	and	x0, x0, #0xff
  401e2c:	cmp	x0, #0x0
  401e30:	b.eq	401e5c <fifo_free+0x11c>  // b.none
  401e34:	adrp	x0, 402000 <server_done+0x7c>
  401e38:	add	x1, x0, #0xd9b
  401e3c:	adrp	x0, 403000 <_fini+0x28c>
  401e40:	add	x4, x0, #0x580
  401e44:	mov	w3, #0xdb                  	// #219
  401e48:	mov	x2, x1
  401e4c:	adrp	x0, 403000 <_fini+0x28c>
  401e50:	add	x1, x0, #0xf8
  401e54:	mov	w0, #0x0                   	// #0
  401e58:	bl	400e90 <log_assert_failed_realm@plt>
  401e5c:	ldr	x0, [sp, #40]
  401e60:	ldr	x0, [x0, #408]
  401e64:	cmp	x0, #0x0
  401e68:	b.eq	401e80 <fifo_free+0x140>  // b.none
  401e6c:	ldr	x0, [sp, #40]
  401e70:	ldr	x0, [x0, #408]
  401e74:	ldr	x1, [sp, #40]
  401e78:	ldr	x1, [x1, #416]
  401e7c:	str	x1, [x0, #416]
  401e80:	ldr	x0, [sp, #40]
  401e84:	ldr	x0, [x0, #416]
  401e88:	cmp	x0, #0x0
  401e8c:	b.eq	401ea8 <fifo_free+0x168>  // b.none
  401e90:	ldr	x0, [sp, #40]
  401e94:	ldr	x0, [x0, #416]
  401e98:	ldr	x1, [sp, #40]
  401e9c:	ldr	x1, [x1, #408]
  401ea0:	str	x1, [x0, #408]
  401ea4:	b	401f04 <fifo_free+0x1c4>
  401ea8:	ldr	x0, [sp, #32]
  401eac:	ldr	x0, [x0]
  401eb0:	ldr	x1, [sp, #40]
  401eb4:	cmp	x1, x0
  401eb8:	cset	w0, ne  // ne = any
  401ebc:	and	w0, w0, #0xff
  401ec0:	and	x0, x0, #0xff
  401ec4:	cmp	x0, #0x0
  401ec8:	b.eq	401ef4 <fifo_free+0x1b4>  // b.none
  401ecc:	adrp	x0, 402000 <server_done+0x7c>
  401ed0:	add	x1, x0, #0xd9b
  401ed4:	adrp	x0, 403000 <_fini+0x28c>
  401ed8:	add	x4, x0, #0x580
  401edc:	mov	w3, #0xdb                  	// #219
  401ee0:	mov	x2, x1
  401ee4:	adrp	x0, 403000 <_fini+0x28c>
  401ee8:	add	x1, x0, #0x100
  401eec:	mov	w0, #0x0                   	// #0
  401ef0:	bl	400e90 <log_assert_failed_realm@plt>
  401ef4:	ldr	x0, [sp, #40]
  401ef8:	ldr	x1, [x0, #408]
  401efc:	ldr	x0, [sp, #32]
  401f00:	str	x1, [x0]
  401f04:	ldr	x0, [sp, #40]
  401f08:	str	xzr, [x0, #416]
  401f0c:	ldr	x0, [sp, #40]
  401f10:	ldr	x1, [x0, #416]
  401f14:	ldr	x0, [sp, #40]
  401f18:	str	x1, [x0, #408]
  401f1c:	ldr	x0, [sp, #24]
  401f20:	ldr	w0, [x0, #8]
  401f24:	cmp	w0, #0x0
  401f28:	b.lt	401f70 <fifo_free+0x230>  // b.tstop
  401f2c:	ldr	x0, [sp, #24]
  401f30:	ldr	x0, [x0]
  401f34:	cmp	x0, #0x0
  401f38:	b.eq	401f64 <fifo_free+0x224>  // b.none
  401f3c:	ldr	x0, [sp, #24]
  401f40:	ldr	x0, [x0]
  401f44:	ldr	w4, [x0]
  401f48:	ldr	x0, [sp, #24]
  401f4c:	ldr	w0, [x0, #8]
  401f50:	mov	x3, #0x0                   	// #0
  401f54:	mov	w2, w0
  401f58:	mov	w1, #0x2                   	// #2
  401f5c:	mov	w0, w4
  401f60:	bl	400e10 <epoll_ctl@plt>
  401f64:	ldr	x0, [sp, #24]
  401f68:	ldr	w0, [x0, #8]
  401f6c:	bl	400e80 <safe_close@plt>
  401f70:	ldr	x0, [sp, #24]
  401f74:	bl	400f60 <free@plt>
  401f78:	nop
  401f7c:	ldp	x29, x30, [sp], #48
  401f80:	ret

0000000000401f84 <server_done>:
  401f84:	stp	x29, x30, [sp, #-32]!
  401f88:	mov	x29, sp
  401f8c:	str	x0, [sp, #24]
  401f90:	ldr	x0, [sp, #24]
  401f94:	cmp	x0, #0x0
  401f98:	cset	w0, eq  // eq = none
  401f9c:	and	w0, w0, #0xff
  401fa0:	and	x0, x0, #0xff
  401fa4:	cmp	x0, #0x0
  401fa8:	b.eq	401fe0 <server_done+0x5c>  // b.none
  401fac:	adrp	x0, 402000 <server_done+0x7c>
  401fb0:	add	x1, x0, #0xd9b
  401fb4:	adrp	x0, 403000 <_fini+0x28c>
  401fb8:	add	x4, x0, #0x590
  401fbc:	mov	w3, #0xe9                  	// #233
  401fc0:	mov	x2, x1
  401fc4:	adrp	x0, 402000 <server_done+0x7c>
  401fc8:	add	x1, x0, #0xdd0
  401fcc:	mov	w0, #0x0                   	// #0
  401fd0:	bl	400e90 <log_assert_failed_realm@plt>
  401fd4:	ldr	x0, [sp, #24]
  401fd8:	ldr	x0, [x0, #8]
  401fdc:	bl	401d40 <fifo_free>
  401fe0:	ldr	x0, [sp, #24]
  401fe4:	ldr	x0, [x0, #8]
  401fe8:	cmp	x0, #0x0
  401fec:	b.ne	401fd4 <server_done+0x50>  // b.any
  401ff0:	ldr	x0, [sp, #24]
  401ff4:	ldr	w0, [x0]
  401ff8:	bl	400e80 <safe_close@plt>
  401ffc:	mov	w1, w0
  402000:	ldr	x0, [sp, #24]
  402004:	str	w1, [x0]
  402008:	ldr	x0, [sp, #24]
  40200c:	ldr	x0, [x0, #24]
  402010:	bl	400f30 <sd_bus_flush_close_unref@plt>
  402014:	mov	x1, x0
  402018:	ldr	x0, [sp, #24]
  40201c:	str	x1, [x0, #24]
  402020:	nop
  402024:	ldp	x29, x30, [sp], #32
  402028:	ret

000000000040202c <server_init>:
  40202c:	stp	x29, x30, [sp, #-192]!
  402030:	mov	x29, sp
  402034:	str	x0, [sp, #24]
  402038:	str	w1, [sp, #20]
  40203c:	adrp	x0, 413000 <__FRAME_END__+0xf780>
  402040:	add	x0, x0, #0xca8
  402044:	ldr	x1, [x0]
  402048:	str	x1, [sp, #184]
  40204c:	mov	x1, #0x0                   	// #0
  402050:	ldr	x0, [sp, #24]
  402054:	cmp	x0, #0x0
  402058:	cset	w0, eq  // eq = none
  40205c:	and	w0, w0, #0xff
  402060:	and	x0, x0, #0xff
  402064:	cmp	x0, #0x0
  402068:	b.eq	402094 <server_init+0x68>  // b.none
  40206c:	adrp	x0, 402000 <server_done+0x7c>
  402070:	add	x1, x0, #0xd9b
  402074:	adrp	x0, 403000 <_fini+0x28c>
  402078:	add	x4, x0, #0x5a0
  40207c:	mov	w3, #0xf6                  	// #246
  402080:	mov	x2, x1
  402084:	adrp	x0, 402000 <server_done+0x7c>
  402088:	add	x1, x0, #0xdd0
  40208c:	mov	w0, #0x0                   	// #0
  402090:	bl	400e90 <log_assert_failed_realm@plt>
  402094:	ldr	w0, [sp, #20]
  402098:	cmp	w0, #0x0
  40209c:	cset	w0, eq  // eq = none
  4020a0:	and	w0, w0, #0xff
  4020a4:	and	x0, x0, #0xff
  4020a8:	cmp	x0, #0x0
  4020ac:	b.eq	4020d8 <server_init+0xac>  // b.none
  4020b0:	adrp	x0, 402000 <server_done+0x7c>
  4020b4:	add	x1, x0, #0xd9b
  4020b8:	adrp	x0, 403000 <_fini+0x28c>
  4020bc:	add	x4, x0, #0x5a0
  4020c0:	mov	w3, #0xf7                  	// #247
  4020c4:	mov	x2, x1
  4020c8:	adrp	x0, 403000 <_fini+0x28c>
  4020cc:	add	x1, x0, #0x110
  4020d0:	mov	w0, #0x0                   	// #0
  4020d4:	bl	400e90 <log_assert_failed_realm@plt>
  4020d8:	mov	x0, #0x28                  	// #40
  4020dc:	str	x0, [sp, #128]
  4020e0:	ldr	x0, [sp, #128]
  4020e4:	cmp	x0, #0x0
  4020e8:	b.eq	4020fc <server_init+0xd0>  // b.none
  4020ec:	ldr	x2, [sp, #128]
  4020f0:	mov	w1, #0x0                   	// #0
  4020f4:	ldr	x0, [sp, #24]
  4020f8:	bl	400fa0 <memset@plt>
  4020fc:	mov	w0, #0x80000               	// #524288
  402100:	bl	400f40 <epoll_create1@plt>
  402104:	mov	w1, w0
  402108:	ldr	x0, [sp, #24]
  40210c:	str	w1, [x0]
  402110:	ldr	x0, [sp, #24]
  402114:	ldr	w0, [x0]
  402118:	cmp	w0, #0x0
  40211c:	b.ge	4021b0 <server_init+0x184>  // b.tcont
  402120:	mov	w0, #0x3                   	// #3
  402124:	str	w0, [sp, #116]
  402128:	bl	400ed0 <__errno_location@plt>
  40212c:	ldr	w0, [x0]
  402130:	str	w0, [sp, #120]
  402134:	str	wzr, [sp, #124]
  402138:	ldr	w0, [sp, #124]
  40213c:	bl	400fb0 <log_get_max_level_realm@plt>
  402140:	mov	w1, w0
  402144:	ldr	w0, [sp, #116]
  402148:	and	w0, w0, #0x7
  40214c:	cmp	w1, w0
  402150:	b.lt	402194 <server_init+0x168>  // b.tstop
  402154:	ldr	w0, [sp, #124]
  402158:	lsl	w1, w0, #10
  40215c:	ldr	w0, [sp, #116]
  402160:	orr	w6, w1, w0
  402164:	adrp	x0, 402000 <server_done+0x7c>
  402168:	add	x1, x0, #0xd9b
  40216c:	adrp	x0, 403000 <_fini+0x28c>
  402170:	add	x5, x0, #0x120
  402174:	adrp	x0, 403000 <_fini+0x28c>
  402178:	add	x4, x0, #0x5b0
  40217c:	mov	w3, #0xfd                  	// #253
  402180:	mov	x2, x1
  402184:	ldr	w1, [sp, #120]
  402188:	mov	w0, w6
  40218c:	bl	400f20 <log_internal_realm@plt>
  402190:	b	4021a8 <server_init+0x17c>
  402194:	ldr	w0, [sp, #120]
  402198:	cmp	w0, #0x0
  40219c:	cneg	w0, w0, lt  // lt = tstop
  4021a0:	and	w0, w0, #0xff
  4021a4:	neg	w0, w0
  4021a8:	str	w0, [sp, #44]
  4021ac:	b	402614 <server_init+0x5e8>
  4021b0:	str	wzr, [sp, #48]
  4021b4:	b	40255c <server_init+0x530>
  4021b8:	ldr	w0, [sp, #48]
  4021bc:	add	w0, w0, #0x3
  4021c0:	str	w0, [sp, #64]
  4021c4:	mov	x1, #0x0                   	// #0
  4021c8:	ldr	w0, [sp, #64]
  4021cc:	bl	400e20 <sd_is_fifo@plt>
  4021d0:	str	w0, [sp, #44]
  4021d4:	ldr	w0, [sp, #44]
  4021d8:	cmp	w0, #0x0
  4021dc:	b.ge	40225c <server_init+0x230>  // b.tcont
  4021e0:	mov	w0, #0x3                   	// #3
  4021e4:	str	w0, [sp, #104]
  4021e8:	ldr	w0, [sp, #44]
  4021ec:	str	w0, [sp, #108]
  4021f0:	str	wzr, [sp, #112]
  4021f4:	ldr	w0, [sp, #112]
  4021f8:	bl	400fb0 <log_get_max_level_realm@plt>
  4021fc:	mov	w1, w0
  402200:	ldr	w0, [sp, #104]
  402204:	and	w0, w0, #0x7
  402208:	cmp	w1, w0
  40220c:	b.lt	402250 <server_init+0x224>  // b.tstop
  402210:	ldr	w0, [sp, #112]
  402214:	lsl	w1, w0, #10
  402218:	ldr	w0, [sp, #104]
  40221c:	orr	w6, w1, w0
  402220:	adrp	x0, 402000 <server_done+0x7c>
  402224:	add	x1, x0, #0xd9b
  402228:	adrp	x0, 403000 <_fini+0x28c>
  40222c:	add	x5, x0, #0x148
  402230:	adrp	x0, 403000 <_fini+0x28c>
  402234:	add	x4, x0, #0x5b0
  402238:	mov	w3, #0x10b                 	// #267
  40223c:	mov	x2, x1
  402240:	ldr	w1, [sp, #108]
  402244:	mov	w0, w6
  402248:	bl	400f20 <log_internal_realm@plt>
  40224c:	b	402614 <server_init+0x5e8>
  402250:	ldr	w0, [sp, #108]
  402254:	cmp	w0, #0x0
  402258:	b	402614 <server_init+0x5e8>
  40225c:	ldr	w0, [sp, #44]
  402260:	cmp	w0, #0x0
  402264:	b.ne	4022e8 <server_init+0x2bc>  // b.any
  402268:	mov	w0, #0x3                   	// #3
  40226c:	str	w0, [sp, #92]
  402270:	str	wzr, [sp, #96]
  402274:	str	wzr, [sp, #100]
  402278:	ldr	w0, [sp, #100]
  40227c:	bl	400fb0 <log_get_max_level_realm@plt>
  402280:	mov	w1, w0
  402284:	ldr	w0, [sp, #92]
  402288:	and	w0, w0, #0x7
  40228c:	cmp	w1, w0
  402290:	b.lt	4022d4 <server_init+0x2a8>  // b.tstop
  402294:	ldr	w0, [sp, #100]
  402298:	lsl	w1, w0, #10
  40229c:	ldr	w0, [sp, #92]
  4022a0:	orr	w6, w1, w0
  4022a4:	adrp	x0, 402000 <server_done+0x7c>
  4022a8:	add	x1, x0, #0xd9b
  4022ac:	adrp	x0, 403000 <_fini+0x28c>
  4022b0:	add	x5, x0, #0x178
  4022b4:	adrp	x0, 403000 <_fini+0x28c>
  4022b8:	add	x4, x0, #0x5b0
  4022bc:	mov	w3, #0x110                 	// #272
  4022c0:	mov	x2, x1
  4022c4:	ldr	w1, [sp, #96]
  4022c8:	mov	w0, w6
  4022cc:	bl	400f20 <log_internal_realm@plt>
  4022d0:	b	4022dc <server_init+0x2b0>
  4022d4:	ldr	w0, [sp, #96]
  4022d8:	cmp	w0, #0x0
  4022dc:	mov	w0, #0xffffffea            	// #-22
  4022e0:	str	w0, [sp, #44]
  4022e4:	b	402614 <server_init+0x5e8>
  4022e8:	mov	x1, #0x1a8                 	// #424
  4022ec:	mov	x0, #0x1                   	// #1
  4022f0:	bl	400f50 <calloc@plt>
  4022f4:	str	x0, [sp, #136]
  4022f8:	ldr	x0, [sp, #136]
  4022fc:	cmp	x0, #0x0
  402300:	b.ne	40238c <server_init+0x360>  // b.any
  402304:	mov	w0, #0xfffffff4            	// #-12
  402308:	str	w0, [sp, #44]
  40230c:	mov	w0, #0x3                   	// #3
  402310:	str	w0, [sp, #80]
  402314:	bl	400ed0 <__errno_location@plt>
  402318:	ldr	w0, [x0]
  40231c:	str	w0, [sp, #84]
  402320:	str	wzr, [sp, #88]
  402324:	ldr	w0, [sp, #88]
  402328:	bl	400fb0 <log_get_max_level_realm@plt>
  40232c:	mov	w1, w0
  402330:	ldr	w0, [sp, #80]
  402334:	and	w0, w0, #0x7
  402338:	cmp	w1, w0
  40233c:	b.lt	402380 <server_init+0x354>  // b.tstop
  402340:	ldr	w0, [sp, #88]
  402344:	lsl	w1, w0, #10
  402348:	ldr	w0, [sp, #80]
  40234c:	orr	w6, w1, w0
  402350:	adrp	x0, 402000 <server_done+0x7c>
  402354:	add	x1, x0, #0xd9b
  402358:	adrp	x0, 403000 <_fini+0x28c>
  40235c:	add	x5, x0, #0x198
  402360:	adrp	x0, 403000 <_fini+0x28c>
  402364:	add	x4, x0, #0x5b0
  402368:	mov	w3, #0x118                 	// #280
  40236c:	mov	x2, x1
  402370:	ldr	w1, [sp, #84]
  402374:	mov	w0, w6
  402378:	bl	400f20 <log_internal_realm@plt>
  40237c:	b	402614 <server_init+0x5e8>
  402380:	ldr	w0, [sp, #84]
  402384:	cmp	w0, #0x0
  402388:	b	402614 <server_init+0x5e8>
  40238c:	ldr	x0, [sp, #136]
  402390:	mov	w1, #0xffffffff            	// #-1
  402394:	str	w1, [x0, #8]
  402398:	mov	x0, #0x10                  	// #16
  40239c:	str	x0, [sp, #144]
  4023a0:	ldr	x0, [sp, #144]
  4023a4:	cmp	x0, #0x0
  4023a8:	b.eq	4023bc <server_init+0x390>  // b.none
  4023ac:	add	x0, sp, #0xa8
  4023b0:	ldr	x2, [sp, #144]
  4023b4:	mov	w1, #0x0                   	// #0
  4023b8:	bl	400fa0 <memset@plt>
  4023bc:	mov	w0, #0x1                   	// #1
  4023c0:	str	w0, [sp, #168]
  4023c4:	ldr	x0, [sp, #136]
  4023c8:	str	x0, [sp, #176]
  4023cc:	ldr	x0, [sp, #24]
  4023d0:	ldr	w0, [x0]
  4023d4:	add	x1, sp, #0xa8
  4023d8:	mov	x3, x1
  4023dc:	ldr	w2, [sp, #64]
  4023e0:	mov	w1, #0x1                   	// #1
  4023e4:	bl	400e10 <epoll_ctl@plt>
  4023e8:	cmp	w0, #0x0
  4023ec:	b.ge	402488 <server_init+0x45c>  // b.tcont
  4023f0:	bl	400ed0 <__errno_location@plt>
  4023f4:	ldr	w0, [x0]
  4023f8:	neg	w0, w0
  4023fc:	str	w0, [sp, #44]
  402400:	ldr	x0, [sp, #136]
  402404:	bl	401d40 <fifo_free>
  402408:	mov	w0, #0x3                   	// #3
  40240c:	str	w0, [sp, #68]
  402410:	bl	400ed0 <__errno_location@plt>
  402414:	ldr	w0, [x0]
  402418:	str	w0, [sp, #72]
  40241c:	str	wzr, [sp, #76]
  402420:	ldr	w0, [sp, #76]
  402424:	bl	400fb0 <log_get_max_level_realm@plt>
  402428:	mov	w1, w0
  40242c:	ldr	w0, [sp, #68]
  402430:	and	w0, w0, #0x7
  402434:	cmp	w1, w0
  402438:	b.lt	40247c <server_init+0x450>  // b.tstop
  40243c:	ldr	w0, [sp, #76]
  402440:	lsl	w1, w0, #10
  402444:	ldr	w0, [sp, #68]
  402448:	orr	w6, w1, w0
  40244c:	adrp	x0, 402000 <server_done+0x7c>
  402450:	add	x1, x0, #0xd9b
  402454:	adrp	x0, 403000 <_fini+0x28c>
  402458:	add	x5, x0, #0x1c0
  40245c:	adrp	x0, 403000 <_fini+0x28c>
  402460:	add	x4, x0, #0x5b0
  402464:	mov	w3, #0x124                 	// #292
  402468:	mov	x2, x1
  40246c:	ldr	w1, [sp, #72]
  402470:	mov	w0, w6
  402474:	bl	400f20 <log_internal_realm@plt>
  402478:	b	402614 <server_init+0x5e8>
  40247c:	ldr	w0, [sp, #72]
  402480:	cmp	w0, #0x0
  402484:	b	402614 <server_init+0x5e8>
  402488:	ldr	x0, [sp, #136]
  40248c:	ldr	w1, [sp, #64]
  402490:	str	w1, [x0, #8]
  402494:	ldr	x0, [sp, #24]
  402498:	add	x0, x0, #0x8
  40249c:	str	x0, [sp, #152]
  4024a0:	ldr	x0, [sp, #136]
  4024a4:	str	x0, [sp, #160]
  4024a8:	ldr	x0, [sp, #160]
  4024ac:	cmp	x0, #0x0
  4024b0:	cset	w0, eq  // eq = none
  4024b4:	and	w0, w0, #0xff
  4024b8:	and	x0, x0, #0xff
  4024bc:	cmp	x0, #0x0
  4024c0:	b.eq	4024ec <server_init+0x4c0>  // b.none
  4024c4:	adrp	x0, 402000 <server_done+0x7c>
  4024c8:	add	x1, x0, #0xd9b
  4024cc:	adrp	x0, 403000 <_fini+0x28c>
  4024d0:	add	x4, x0, #0x5a0
  4024d4:	mov	w3, #0x129                 	// #297
  4024d8:	mov	x2, x1
  4024dc:	adrp	x0, 403000 <_fini+0x28c>
  4024e0:	add	x1, x0, #0xf8
  4024e4:	mov	w0, #0x0                   	// #0
  4024e8:	bl	400e90 <log_assert_failed_realm@plt>
  4024ec:	ldr	x0, [sp, #152]
  4024f0:	ldr	x1, [x0]
  4024f4:	ldr	x0, [sp, #160]
  4024f8:	str	x1, [x0, #408]
  4024fc:	ldr	x0, [sp, #160]
  402500:	ldr	x0, [x0, #408]
  402504:	cmp	x0, #0x0
  402508:	b.eq	40251c <server_init+0x4f0>  // b.none
  40250c:	ldr	x0, [sp, #160]
  402510:	ldr	x0, [x0, #408]
  402514:	ldr	x1, [sp, #160]
  402518:	str	x1, [x0, #416]
  40251c:	ldr	x0, [sp, #160]
  402520:	str	xzr, [x0, #416]
  402524:	ldr	x0, [sp, #152]
  402528:	ldr	x1, [sp, #160]
  40252c:	str	x1, [x0]
  402530:	ldr	x0, [sp, #136]
  402534:	ldr	x1, [sp, #24]
  402538:	str	x1, [x0]
  40253c:	ldr	x0, [sp, #24]
  402540:	ldr	w0, [x0, #16]
  402544:	add	w1, w0, #0x1
  402548:	ldr	x0, [sp, #24]
  40254c:	str	w1, [x0, #16]
  402550:	ldr	w0, [sp, #48]
  402554:	add	w0, w0, #0x1
  402558:	str	w0, [sp, #48]
  40255c:	ldr	w1, [sp, #48]
  402560:	ldr	w0, [sp, #20]
  402564:	cmp	w1, w0
  402568:	b.cc	4021b8 <server_init+0x18c>  // b.lo, b.ul, b.last
  40256c:	ldr	x0, [sp, #24]
  402570:	add	x0, x0, #0x18
  402574:	bl	400e50 <bus_connect_system_systemd@plt>
  402578:	str	w0, [sp, #44]
  40257c:	ldr	w0, [sp, #44]
  402580:	cmp	w0, #0x0
  402584:	b.ge	40260c <server_init+0x5e0>  // b.tcont
  402588:	mov	w0, #0x3                   	// #3
  40258c:	str	w0, [sp, #52]
  402590:	ldr	w0, [sp, #44]
  402594:	str	w0, [sp, #56]
  402598:	str	wzr, [sp, #60]
  40259c:	ldr	w0, [sp, #60]
  4025a0:	bl	400fb0 <log_get_max_level_realm@plt>
  4025a4:	mov	w1, w0
  4025a8:	ldr	w0, [sp, #52]
  4025ac:	and	w0, w0, #0x7
  4025b0:	cmp	w1, w0
  4025b4:	b.lt	4025f8 <server_init+0x5cc>  // b.tstop
  4025b8:	ldr	w0, [sp, #60]
  4025bc:	lsl	w1, w0, #10
  4025c0:	ldr	w0, [sp, #52]
  4025c4:	orr	w6, w1, w0
  4025c8:	adrp	x0, 402000 <server_done+0x7c>
  4025cc:	add	x1, x0, #0xd9b
  4025d0:	adrp	x0, 403000 <_fini+0x28c>
  4025d4:	add	x5, x0, #0x1f0
  4025d8:	adrp	x0, 403000 <_fini+0x28c>
  4025dc:	add	x4, x0, #0x5b0
  4025e0:	mov	w3, #0x130                 	// #304
  4025e4:	mov	x2, x1
  4025e8:	ldr	w1, [sp, #56]
  4025ec:	mov	w0, w6
  4025f0:	bl	400f20 <log_internal_realm@plt>
  4025f4:	b	402600 <server_init+0x5d4>
  4025f8:	ldr	w0, [sp, #56]
  4025fc:	cmp	w0, #0x0
  402600:	mov	w0, #0xfffffffb            	// #-5
  402604:	str	w0, [sp, #44]
  402608:	b	402614 <server_init+0x5e8>
  40260c:	mov	w0, #0x0                   	// #0
  402610:	b	402620 <server_init+0x5f4>
  402614:	ldr	x0, [sp, #24]
  402618:	bl	401f84 <server_done>
  40261c:	ldr	w0, [sp, #44]
  402620:	mov	w1, w0
  402624:	adrp	x0, 413000 <__FRAME_END__+0xf780>
  402628:	add	x0, x0, #0xca8
  40262c:	ldr	x2, [sp, #184]
  402630:	ldr	x0, [x0]
  402634:	eor	x0, x2, x0
  402638:	cmp	x0, #0x0
  40263c:	b.eq	402644 <server_init+0x618>  // b.none
  402640:	bl	400ef0 <__stack_chk_fail@plt>
  402644:	mov	w0, w1
  402648:	ldp	x29, x30, [sp], #192
  40264c:	ret

0000000000402650 <process_event>:
  402650:	stp	x29, x30, [sp, #-80]!
  402654:	mov	x29, sp
  402658:	str	x0, [sp, #24]
  40265c:	str	x1, [sp, #16]
  402660:	ldr	x0, [sp, #24]
  402664:	cmp	x0, #0x0
  402668:	cset	w0, eq  // eq = none
  40266c:	and	w0, w0, #0xff
  402670:	and	x0, x0, #0xff
  402674:	cmp	x0, #0x0
  402678:	b.eq	4026a4 <process_event+0x54>  // b.none
  40267c:	adrp	x0, 402000 <server_done+0x7c>
  402680:	add	x1, x0, #0xd9b
  402684:	adrp	x0, 403000 <_fini+0x28c>
  402688:	add	x4, x0, #0x5c0
  40268c:	mov	w3, #0x141                 	// #321
  402690:	mov	x2, x1
  402694:	adrp	x0, 402000 <server_done+0x7c>
  402698:	add	x1, x0, #0xdd0
  40269c:	mov	w0, #0x0                   	// #0
  4026a0:	bl	400e90 <log_assert_failed_realm@plt>
  4026a4:	ldr	x0, [sp, #16]
  4026a8:	ldr	w0, [x0]
  4026ac:	and	w0, w0, #0x1
  4026b0:	cmp	w0, #0x0
  4026b4:	b.ne	402744 <process_event+0xf4>  // b.any
  4026b8:	mov	w0, #0x6                   	// #6
  4026bc:	str	w0, [sp, #60]
  4026c0:	mov	w0, #0x5                   	// #5
  4026c4:	movk	w0, #0x4000, lsl #16
  4026c8:	str	w0, [sp, #64]
  4026cc:	str	wzr, [sp, #68]
  4026d0:	ldr	w0, [sp, #68]
  4026d4:	bl	400fb0 <log_get_max_level_realm@plt>
  4026d8:	mov	w1, w0
  4026dc:	ldr	w0, [sp, #60]
  4026e0:	and	w0, w0, #0x7
  4026e4:	cmp	w1, w0
  4026e8:	b.lt	40272c <process_event+0xdc>  // b.tstop
  4026ec:	ldr	w0, [sp, #68]
  4026f0:	lsl	w1, w0, #10
  4026f4:	ldr	w0, [sp, #60]
  4026f8:	orr	w6, w1, w0
  4026fc:	adrp	x0, 402000 <server_done+0x7c>
  402700:	add	x1, x0, #0xd9b
  402704:	adrp	x0, 403000 <_fini+0x28c>
  402708:	add	x5, x0, #0x218
  40270c:	adrp	x0, 403000 <_fini+0x28c>
  402710:	add	x4, x0, #0x5d0
  402714:	mov	w3, #0x144                 	// #324
  402718:	mov	x2, x1
  40271c:	ldr	w1, [sp, #64]
  402720:	mov	w0, w6
  402724:	bl	400f20 <log_internal_realm@plt>
  402728:	b	4027f4 <process_event+0x1a4>
  40272c:	ldr	w0, [sp, #64]
  402730:	cmp	w0, #0x0
  402734:	cneg	w0, w0, lt  // lt = tstop
  402738:	and	w0, w0, #0xff
  40273c:	neg	w0, w0
  402740:	b	4027f4 <process_event+0x1a4>
  402744:	ldr	x0, [sp, #16]
  402748:	ldr	x0, [x0, #8]
  40274c:	str	x0, [sp, #72]
  402750:	ldr	x0, [sp, #72]
  402754:	bl	401b50 <fifo_process>
  402758:	str	w0, [sp, #44]
  40275c:	ldr	w0, [sp, #44]
  402760:	cmp	w0, #0x0
  402764:	b.ge	4027f0 <process_event+0x1a0>  // b.tcont
  402768:	mov	w0, #0x6                   	// #6
  40276c:	str	w0, [sp, #48]
  402770:	ldr	w0, [sp, #44]
  402774:	str	w0, [sp, #52]
  402778:	str	wzr, [sp, #56]
  40277c:	ldr	w0, [sp, #56]
  402780:	bl	400fb0 <log_get_max_level_realm@plt>
  402784:	mov	w1, w0
  402788:	ldr	w0, [sp, #48]
  40278c:	and	w0, w0, #0x7
  402790:	cmp	w1, w0
  402794:	b.lt	4027d8 <process_event+0x188>  // b.tstop
  402798:	ldr	w0, [sp, #56]
  40279c:	lsl	w1, w0, #10
  4027a0:	ldr	w0, [sp, #48]
  4027a4:	orr	w6, w1, w0
  4027a8:	adrp	x0, 402000 <server_done+0x7c>
  4027ac:	add	x1, x0, #0xd9b
  4027b0:	adrp	x0, 403000 <_fini+0x28c>
  4027b4:	add	x5, x0, #0x240
  4027b8:	adrp	x0, 403000 <_fini+0x28c>
  4027bc:	add	x4, x0, #0x5d0
  4027c0:	mov	w3, #0x14a                 	// #330
  4027c4:	mov	x2, x1
  4027c8:	ldr	w1, [sp, #52]
  4027cc:	mov	w0, w6
  4027d0:	bl	400f20 <log_internal_realm@plt>
  4027d4:	b	4027e0 <process_event+0x190>
  4027d8:	ldr	w0, [sp, #52]
  4027dc:	cmp	w0, #0x0
  4027e0:	ldr	x0, [sp, #72]
  4027e4:	bl	401d40 <fifo_free>
  4027e8:	ldr	w0, [sp, #44]
  4027ec:	b	4027f4 <process_event+0x1a4>
  4027f0:	mov	w0, #0x0                   	// #0
  4027f4:	ldp	x29, x30, [sp], #80
  4027f8:	ret

00000000004027fc <main>:
  4027fc:	stp	x29, x30, [sp, #-208]!
  402800:	mov	x29, sp
  402804:	stp	x19, x20, [sp, #16]
  402808:	str	w0, [sp, #44]
  40280c:	str	x1, [sp, #32]
  402810:	adrp	x0, 413000 <__FRAME_END__+0xf780>
  402814:	add	x0, x0, #0xca8
  402818:	ldr	x1, [x0]
  40281c:	str	x1, [sp, #200]
  402820:	mov	x1, #0x0                   	// #0
  402824:	mov	w0, #0x1                   	// #1
  402828:	str	w0, [sp, #48]
  40282c:	bl	400df0 <getppid@plt>
  402830:	cmp	w0, #0x1
  402834:	b.eq	4028b4 <main+0xb8>  // b.none
  402838:	mov	w0, #0x3                   	// #3
  40283c:	str	w0, [sp, #132]
  402840:	str	wzr, [sp, #136]
  402844:	str	wzr, [sp, #140]
  402848:	ldr	w0, [sp, #140]
  40284c:	bl	400fb0 <log_get_max_level_realm@plt>
  402850:	mov	w1, w0
  402854:	ldr	w0, [sp, #132]
  402858:	and	w0, w0, #0x7
  40285c:	cmp	w1, w0
  402860:	b.lt	4028a4 <main+0xa8>  // b.tstop
  402864:	ldr	w0, [sp, #140]
  402868:	lsl	w1, w0, #10
  40286c:	ldr	w0, [sp, #132]
  402870:	orr	w6, w1, w0
  402874:	adrp	x0, 402000 <server_done+0x7c>
  402878:	add	x1, x0, #0xd9b
  40287c:	adrp	x0, 403000 <_fini+0x28c>
  402880:	add	x5, x0, #0x258
  402884:	adrp	x0, 403000 <_fini+0x28c>
  402888:	add	x4, x0, #0x5e0
  40288c:	mov	w3, #0x157                 	// #343
  402890:	mov	x2, x1
  402894:	ldr	w1, [sp, #136]
  402898:	mov	w0, w6
  40289c:	bl	400f20 <log_internal_realm@plt>
  4028a0:	b	4028ac <main+0xb0>
  4028a4:	ldr	w0, [sp, #136]
  4028a8:	cmp	w0, #0x0
  4028ac:	mov	w0, #0x1                   	// #1
  4028b0:	b	402cb8 <main+0x4bc>
  4028b4:	ldr	w0, [sp, #44]
  4028b8:	cmp	w0, #0x1
  4028bc:	b.le	40293c <main+0x140>
  4028c0:	mov	w0, #0x3                   	// #3
  4028c4:	str	w0, [sp, #120]
  4028c8:	str	wzr, [sp, #124]
  4028cc:	str	wzr, [sp, #128]
  4028d0:	ldr	w0, [sp, #128]
  4028d4:	bl	400fb0 <log_get_max_level_realm@plt>
  4028d8:	mov	w1, w0
  4028dc:	ldr	w0, [sp, #120]
  4028e0:	and	w0, w0, #0x7
  4028e4:	cmp	w1, w0
  4028e8:	b.lt	40292c <main+0x130>  // b.tstop
  4028ec:	ldr	w0, [sp, #128]
  4028f0:	lsl	w1, w0, #10
  4028f4:	ldr	w0, [sp, #120]
  4028f8:	orr	w6, w1, w0
  4028fc:	adrp	x0, 402000 <server_done+0x7c>
  402900:	add	x1, x0, #0xd9b
  402904:	adrp	x0, 403000 <_fini+0x28c>
  402908:	add	x5, x0, #0x288
  40290c:	adrp	x0, 403000 <_fini+0x28c>
  402910:	add	x4, x0, #0x5e0
  402914:	mov	w3, #0x15c                 	// #348
  402918:	mov	x2, x1
  40291c:	ldr	w1, [sp, #124]
  402920:	mov	w0, w6
  402924:	bl	400f20 <log_internal_realm@plt>
  402928:	b	402934 <main+0x138>
  40292c:	ldr	w0, [sp, #124]
  402930:	cmp	w0, #0x0
  402934:	mov	w0, #0x1                   	// #1
  402938:	b	402cb8 <main+0x4bc>
  40293c:	bl	400e70 <log_setup_service@plt>
  402940:	mov	w0, #0x12                  	// #18
  402944:	bl	400eb0 <umask@plt>
  402948:	mov	w0, #0x1                   	// #1
  40294c:	bl	400ea0 <sd_listen_fds@plt>
  402950:	str	w0, [sp, #52]
  402954:	ldr	w0, [sp, #52]
  402958:	cmp	w0, #0x0
  40295c:	b.ge	4029e0 <main+0x1e4>  // b.tcont
  402960:	mov	w0, #0x3                   	// #3
  402964:	str	w0, [sp, #108]
  402968:	ldr	w0, [sp, #48]
  40296c:	str	w0, [sp, #112]
  402970:	str	wzr, [sp, #116]
  402974:	ldr	w0, [sp, #116]
  402978:	bl	400fb0 <log_get_max_level_realm@plt>
  40297c:	mov	w1, w0
  402980:	ldr	w0, [sp, #108]
  402984:	and	w0, w0, #0x7
  402988:	cmp	w1, w0
  40298c:	b.lt	4029d0 <main+0x1d4>  // b.tstop
  402990:	ldr	w0, [sp, #116]
  402994:	lsl	w1, w0, #10
  402998:	ldr	w0, [sp, #108]
  40299c:	orr	w6, w1, w0
  4029a0:	adrp	x0, 402000 <server_done+0x7c>
  4029a4:	add	x1, x0, #0xd9b
  4029a8:	adrp	x0, 403000 <_fini+0x28c>
  4029ac:	add	x5, x0, #0x2b0
  4029b0:	adrp	x0, 403000 <_fini+0x28c>
  4029b4:	add	x4, x0, #0x5e0
  4029b8:	mov	w3, #0x166                 	// #358
  4029bc:	mov	x2, x1
  4029c0:	ldr	w1, [sp, #112]
  4029c4:	mov	w0, w6
  4029c8:	bl	400f20 <log_internal_realm@plt>
  4029cc:	b	4029d8 <main+0x1dc>
  4029d0:	ldr	w0, [sp, #112]
  4029d4:	cmp	w0, #0x0
  4029d8:	mov	w0, #0x1                   	// #1
  4029dc:	b	402cb8 <main+0x4bc>
  4029e0:	ldr	w0, [sp, #52]
  4029e4:	cmp	w0, #0x0
  4029e8:	b.le	4029f8 <main+0x1fc>
  4029ec:	ldr	w0, [sp, #52]
  4029f0:	cmp	w0, #0x10
  4029f4:	b.le	402a74 <main+0x278>
  4029f8:	mov	w0, #0x3                   	// #3
  4029fc:	str	w0, [sp, #96]
  402a00:	str	wzr, [sp, #100]
  402a04:	str	wzr, [sp, #104]
  402a08:	ldr	w0, [sp, #104]
  402a0c:	bl	400fb0 <log_get_max_level_realm@plt>
  402a10:	mov	w1, w0
  402a14:	ldr	w0, [sp, #96]
  402a18:	and	w0, w0, #0x7
  402a1c:	cmp	w1, w0
  402a20:	b.lt	402a64 <main+0x268>  // b.tstop
  402a24:	ldr	w0, [sp, #104]
  402a28:	lsl	w1, w0, #10
  402a2c:	ldr	w0, [sp, #96]
  402a30:	orr	w6, w1, w0
  402a34:	adrp	x0, 402000 <server_done+0x7c>
  402a38:	add	x1, x0, #0xd9b
  402a3c:	adrp	x0, 403000 <_fini+0x28c>
  402a40:	add	x5, x0, #0x2f0
  402a44:	adrp	x0, 403000 <_fini+0x28c>
  402a48:	add	x4, x0, #0x5e0
  402a4c:	mov	w3, #0x16b                 	// #363
  402a50:	mov	x2, x1
  402a54:	ldr	w1, [sp, #100]
  402a58:	mov	w0, w6
  402a5c:	bl	400f20 <log_internal_realm@plt>
  402a60:	b	402a6c <main+0x270>
  402a64:	ldr	w0, [sp, #100]
  402a68:	cmp	w0, #0x0
  402a6c:	mov	w0, #0x1                   	// #1
  402a70:	b	402cb8 <main+0x4bc>
  402a74:	ldr	w1, [sp, #52]
  402a78:	add	x0, sp, #0xa0
  402a7c:	bl	40202c <server_init>
  402a80:	cmp	w0, #0x0
  402a84:	b.ge	402a90 <main+0x294>  // b.tcont
  402a88:	mov	w0, #0x1                   	// #1
  402a8c:	b	402cb8 <main+0x4bc>
  402a90:	mov	w0, #0x7                   	// #7
  402a94:	str	w0, [sp, #56]
  402a98:	str	wzr, [sp, #60]
  402a9c:	str	wzr, [sp, #64]
  402aa0:	ldr	w0, [sp, #64]
  402aa4:	bl	400fb0 <log_get_max_level_realm@plt>
  402aa8:	mov	w1, w0
  402aac:	ldr	w0, [sp, #56]
  402ab0:	and	w0, w0, #0x7
  402ab4:	cmp	w1, w0
  402ab8:	b.lt	402b04 <main+0x308>  // b.tstop
  402abc:	ldr	w0, [sp, #64]
  402ac0:	lsl	w1, w0, #10
  402ac4:	ldr	w0, [sp, #56]
  402ac8:	orr	w19, w1, w0
  402acc:	adrp	x0, 402000 <server_done+0x7c>
  402ad0:	add	x20, x0, #0xd9b
  402ad4:	bl	400e40 <getpid_cached@plt>
  402ad8:	mov	w6, w0
  402adc:	adrp	x0, 403000 <_fini+0x28c>
  402ae0:	add	x5, x0, #0x318
  402ae4:	adrp	x0, 403000 <_fini+0x28c>
  402ae8:	add	x4, x0, #0x5e0
  402aec:	mov	w3, #0x172                 	// #370
  402af0:	mov	x2, x20
  402af4:	ldr	w1, [sp, #60]
  402af8:	mov	w0, w19
  402afc:	bl	400f20 <log_internal_realm@plt>
  402b00:	b	402b0c <main+0x310>
  402b04:	ldr	w0, [sp, #60]
  402b08:	cmp	w0, #0x0
  402b0c:	adrp	x0, 403000 <_fini+0x28c>
  402b10:	add	x1, x0, #0x340
  402b14:	mov	w0, #0x0                   	// #0
  402b18:	bl	400f10 <sd_notify@plt>
  402b1c:	b	402bf8 <main+0x3fc>
  402b20:	ldr	w0, [sp, #160]
  402b24:	add	x1, sp, #0x90
  402b28:	mov	w3, #0x7530                	// #30000
  402b2c:	mov	w2, #0x1                   	// #1
  402b30:	bl	400f70 <epoll_wait@plt>
  402b34:	str	w0, [sp, #68]
  402b38:	ldr	w0, [sp, #68]
  402b3c:	cmp	w0, #0x0
  402b40:	b.ge	402bd8 <main+0x3dc>  // b.tcont
  402b44:	bl	400ed0 <__errno_location@plt>
  402b48:	ldr	w0, [x0]
  402b4c:	cmp	w0, #0x4
  402b50:	b.ne	402b58 <main+0x35c>  // b.any
  402b54:	b	402bf8 <main+0x3fc>
  402b58:	mov	w0, #0x3                   	// #3
  402b5c:	str	w0, [sp, #72]
  402b60:	bl	400ed0 <__errno_location@plt>
  402b64:	ldr	w0, [x0]
  402b68:	str	w0, [sp, #76]
  402b6c:	str	wzr, [sp, #80]
  402b70:	ldr	w0, [sp, #80]
  402b74:	bl	400fb0 <log_get_max_level_realm@plt>
  402b78:	mov	w1, w0
  402b7c:	ldr	w0, [sp, #72]
  402b80:	and	w0, w0, #0x7
  402b84:	cmp	w1, w0
  402b88:	b.lt	402bcc <main+0x3d0>  // b.tstop
  402b8c:	ldr	w0, [sp, #80]
  402b90:	lsl	w1, w0, #10
  402b94:	ldr	w0, [sp, #72]
  402b98:	orr	w6, w1, w0
  402b9c:	adrp	x0, 402000 <server_done+0x7c>
  402ba0:	add	x1, x0, #0xd9b
  402ba4:	adrp	x0, 403000 <_fini+0x28c>
  402ba8:	add	x5, x0, #0x368
  402bac:	adrp	x0, 403000 <_fini+0x28c>
  402bb0:	add	x4, x0, #0x5e0
  402bb4:	mov	w3, #0x180                 	// #384
  402bb8:	mov	x2, x1
  402bbc:	ldr	w1, [sp, #76]
  402bc0:	mov	w0, w6
  402bc4:	bl	400f20 <log_internal_realm@plt>
  402bc8:	b	402c9c <main+0x4a0>
  402bcc:	ldr	w0, [sp, #76]
  402bd0:	cmp	w0, #0x0
  402bd4:	b	402c9c <main+0x4a0>
  402bd8:	ldr	w0, [sp, #68]
  402bdc:	cmp	w0, #0x0
  402be0:	b.le	402c10 <main+0x414>
  402be4:	add	x1, sp, #0x90
  402be8:	add	x0, sp, #0xa0
  402bec:	bl	402650 <process_event>
  402bf0:	cmp	w0, #0x0
  402bf4:	b.lt	402c98 <main+0x49c>  // b.tstop
  402bf8:	ldrb	w0, [sp, #192]
  402bfc:	eor	w0, w0, #0x1
  402c00:	and	w0, w0, #0xff
  402c04:	cmp	w0, #0x0
  402c08:	b.ne	402b20 <main+0x324>  // b.any
  402c0c:	b	402c14 <main+0x418>
  402c10:	nop
  402c14:	str	wzr, [sp, #48]
  402c18:	mov	w0, #0x7                   	// #7
  402c1c:	str	w0, [sp, #84]
  402c20:	str	wzr, [sp, #88]
  402c24:	str	wzr, [sp, #92]
  402c28:	ldr	w0, [sp, #92]
  402c2c:	bl	400fb0 <log_get_max_level_realm@plt>
  402c30:	mov	w1, w0
  402c34:	ldr	w0, [sp, #84]
  402c38:	and	w0, w0, #0x7
  402c3c:	cmp	w1, w0
  402c40:	b.lt	402c8c <main+0x490>  // b.tstop
  402c44:	ldr	w0, [sp, #92]
  402c48:	lsl	w1, w0, #10
  402c4c:	ldr	w0, [sp, #84]
  402c50:	orr	w19, w1, w0
  402c54:	adrp	x0, 402000 <server_done+0x7c>
  402c58:	add	x20, x0, #0xd9b
  402c5c:	bl	400e40 <getpid_cached@plt>
  402c60:	mov	w6, w0
  402c64:	adrp	x0, 403000 <_fini+0x28c>
  402c68:	add	x5, x0, #0x380
  402c6c:	adrp	x0, 403000 <_fini+0x28c>
  402c70:	add	x4, x0, #0x5e0
  402c74:	mov	w3, #0x18d                 	// #397
  402c78:	mov	x2, x20
  402c7c:	ldr	w1, [sp, #88]
  402c80:	mov	w0, w19
  402c84:	bl	400f20 <log_internal_realm@plt>
  402c88:	b	402c9c <main+0x4a0>
  402c8c:	ldr	w0, [sp, #88]
  402c90:	cmp	w0, #0x0
  402c94:	b	402c9c <main+0x4a0>
  402c98:	nop
  402c9c:	adrp	x0, 403000 <_fini+0x28c>
  402ca0:	add	x1, x0, #0x3a8
  402ca4:	mov	w0, #0x0                   	// #0
  402ca8:	bl	400f10 <sd_notify@plt>
  402cac:	add	x0, sp, #0xa0
  402cb0:	bl	401f84 <server_done>
  402cb4:	ldr	w0, [sp, #48]
  402cb8:	mov	w1, w0
  402cbc:	adrp	x0, 413000 <__FRAME_END__+0xf780>
  402cc0:	add	x0, x0, #0xca8
  402cc4:	ldr	x2, [sp, #200]
  402cc8:	ldr	x0, [x0]
  402ccc:	eor	x0, x2, x0
  402cd0:	cmp	x0, #0x0
  402cd4:	b.eq	402cdc <main+0x4e0>  // b.none
  402cd8:	bl	400ef0 <__stack_chk_fail@plt>
  402cdc:	mov	w0, w1
  402ce0:	ldp	x19, x20, [sp, #16]
  402ce4:	ldp	x29, x30, [sp], #208
  402ce8:	ret
  402cec:	nop

0000000000402cf0 <__libc_csu_init>:
  402cf0:	stp	x29, x30, [sp, #-64]!
  402cf4:	mov	x29, sp
  402cf8:	stp	x19, x20, [sp, #16]
  402cfc:	adrp	x20, 413000 <__FRAME_END__+0xf780>
  402d00:	add	x20, x20, #0xca0
  402d04:	stp	x21, x22, [sp, #32]
  402d08:	adrp	x21, 413000 <__FRAME_END__+0xf780>
  402d0c:	add	x21, x21, #0xc98
  402d10:	sub	x20, x20, x21
  402d14:	mov	w22, w0
  402d18:	stp	x23, x24, [sp, #48]
  402d1c:	mov	x23, x1
  402d20:	mov	x24, x2
  402d24:	bl	400d98 <_init>
  402d28:	cmp	xzr, x20, asr #3
  402d2c:	b.eq	402d58 <__libc_csu_init+0x68>  // b.none
  402d30:	asr	x20, x20, #3
  402d34:	mov	x19, #0x0                   	// #0
  402d38:	ldr	x3, [x21, x19, lsl #3]
  402d3c:	mov	x2, x24
  402d40:	add	x19, x19, #0x1
  402d44:	mov	x1, x23
  402d48:	mov	w0, w22
  402d4c:	blr	x3
  402d50:	cmp	x20, x19
  402d54:	b.ne	402d38 <__libc_csu_init+0x48>  // b.any
  402d58:	ldp	x19, x20, [sp, #16]
  402d5c:	ldp	x21, x22, [sp, #32]
  402d60:	ldp	x23, x24, [sp, #48]
  402d64:	ldp	x29, x30, [sp], #64
  402d68:	ret
  402d6c:	nop

0000000000402d70 <__libc_csu_fini>:
  402d70:	ret

Disassembly of section .fini:

0000000000402d74 <_fini>:
  402d74:	stp	x29, x30, [sp, #-16]!
  402d78:	mov	x29, sp
  402d7c:	ldp	x29, x30, [sp], #16
  402d80:	ret
