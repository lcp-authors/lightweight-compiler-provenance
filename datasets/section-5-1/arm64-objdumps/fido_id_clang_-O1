
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fido_id_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000211208 <_start>:
  211208:	mov	x29, #0x0                   	// #0
  21120c:	mov	x30, #0x0                   	// #0
  211210:	mov	x5, x0
  211214:	ldr	x1, [sp]
  211218:	add	x2, sp, #0x8
  21121c:	mov	x6, sp
  211220:	movz	x0, #0x0, lsl #48
  211224:	movk	x0, #0x0, lsl #32
  211228:	movk	x0, #0x21, lsl #16
  21122c:	movk	x0, #0x1358
  211230:	movz	x3, #0x0, lsl #48
  211234:	movk	x3, #0x0, lsl #32
  211238:	movk	x3, #0x21, lsl #16
  21123c:	movk	x3, #0x1ad8
  211240:	movz	x4, #0x0, lsl #48
  211244:	movk	x4, #0x0, lsl #32
  211248:	movk	x4, #0x21, lsl #16
  21124c:	movk	x4, #0x1b58
  211250:	bl	211ba0 <__libc_start_main@plt>
  211254:	bl	211bb0 <abort@plt>

0000000000211258 <call_weak_fn>:
  211258:	adrp	x0, 221000 <udev_parse_config_full@plt+0xf2b0>
  21125c:	ldr	x0, [x0, #3904]
  211260:	cbz	x0, 211268 <call_weak_fn+0x10>
  211264:	b	211bc0 <__gmon_start__@plt>
  211268:	ret

000000000021126c <deregister_tm_clones>:
  21126c:	adrp	x0, 232000 <_DYNAMIC+0x10290>
  211270:	add	x0, x0, #0x50
  211274:	adrp	x1, 232000 <_DYNAMIC+0x10290>
  211278:	add	x1, x1, #0x50
  21127c:	cmp	x0, x1
  211280:	b.eq	2112b4 <deregister_tm_clones+0x48>  // b.none
  211284:	stp	x29, x30, [sp, #-32]!
  211288:	mov	x29, sp
  21128c:	adrp	x0, 200000 <__FRAME_END__-0x1110>
  211290:	ldr	x0, [x0, #3840]
  211294:	str	x0, [sp, #24]
  211298:	mov	x1, x0
  21129c:	cbz	x1, 2112ac <deregister_tm_clones+0x40>
  2112a0:	adrp	x0, 232000 <_DYNAMIC+0x10290>
  2112a4:	add	x0, x0, #0x50
  2112a8:	blr	x1
  2112ac:	ldp	x29, x30, [sp], #32
  2112b0:	ret
  2112b4:	ret

00000000002112b8 <register_tm_clones>:
  2112b8:	adrp	x0, 232000 <_DYNAMIC+0x10290>
  2112bc:	add	x0, x0, #0x50
  2112c0:	adrp	x1, 232000 <_DYNAMIC+0x10290>
  2112c4:	add	x1, x1, #0x50
  2112c8:	sub	x0, x0, x1
  2112cc:	lsr	x1, x0, #63
  2112d0:	add	x0, x1, x0, asr #3
  2112d4:	cmp	xzr, x0, asr #1
  2112d8:	b.eq	211310 <register_tm_clones+0x58>  // b.none
  2112dc:	stp	x29, x30, [sp, #-32]!
  2112e0:	mov	x29, sp
  2112e4:	asr	x1, x0, #1
  2112e8:	adrp	x0, 200000 <__FRAME_END__-0x1110>
  2112ec:	ldr	x0, [x0, #3848]
  2112f0:	str	x0, [sp, #24]
  2112f4:	mov	x2, x0
  2112f8:	cbz	x2, 211308 <register_tm_clones+0x50>
  2112fc:	adrp	x0, 232000 <_DYNAMIC+0x10290>
  211300:	add	x0, x0, #0x50
  211304:	blr	x2
  211308:	ldp	x29, x30, [sp], #32
  21130c:	ret
  211310:	ret

0000000000211314 <__do_global_dtors_aux>:
  211314:	adrp	x0, 232000 <_DYNAMIC+0x10290>
  211318:	ldrb	w0, [x0, #80]
  21131c:	cbnz	w0, 211340 <__do_global_dtors_aux+0x2c>
  211320:	stp	x29, x30, [sp, #-16]!
  211324:	mov	x29, sp
  211328:	bl	21126c <deregister_tm_clones>
  21132c:	adrp	x0, 232000 <_DYNAMIC+0x10290>
  211330:	mov	w1, #0x1                   	// #1
  211334:	strb	w1, [x0, #80]
  211338:	ldp	x29, x30, [sp], #16
  21133c:	ret
  211340:	ret

0000000000211344 <frame_dummy>:
  211344:	stp	x29, x30, [sp, #-16]!
  211348:	mov	x29, sp
  21134c:	bl	2112b8 <register_tm_clones>
  211350:	ldp	x29, x30, [sp], #16
  211354:	ret

0000000000211358 <main>:
  211358:	stp	x29, x30, [sp, #-32]!
  21135c:	stp	x20, x19, [sp, #16]
  211360:	mov	x29, sp
  211364:	mov	x19, x1
  211368:	mov	w20, w0
  21136c:	bl	2113a4 <save_argc_argv>
  211370:	mov	w0, w20
  211374:	mov	x1, x19
  211378:	bl	2113b8 <run>
  21137c:	mov	w19, w0
  211380:	bl	211bd0 <ask_password_agent_close@plt>
  211384:	bl	211be0 <polkit_agent_close@plt>
  211388:	bl	211bf0 <pager_close@plt>
  21138c:	bl	211c00 <mac_selinux_finish@plt>
  211390:	bl	2118a8 <static_destruct>
  211394:	lsr	w0, w19, #31
  211398:	ldp	x20, x19, [sp, #16]
  21139c:	ldp	x29, x30, [sp], #32
  2113a0:	ret

00000000002113a4 <save_argc_argv>:
  2113a4:	adrp	x8, 232000 <_DYNAMIC+0x10290>
  2113a8:	adrp	x9, 232000 <_DYNAMIC+0x10290>
  2113ac:	str	w0, [x8, #88]
  2113b0:	str	x1, [x9, #96]
  2113b4:	ret

00000000002113b8 <run>:
  2113b8:	stp	x29, x30, [sp, #-48]!
  2113bc:	stp	x28, x21, [sp, #16]
  2113c0:	stp	x20, x19, [sp, #32]
  2113c4:	mov	x29, sp
  2113c8:	sub	sp, sp, #0x1, lsl #12
  2113cc:	sub	sp, sp, #0x50
  2113d0:	mov	w20, w0
  2113d4:	mov	w8, #0xffffffff            	// #-1
  2113d8:	mov	w0, #0x7                   	// #7
  2113dc:	mov	x19, x1
  2113e0:	stp	xzr, xzr, [x29, #-16]
  2113e4:	stur	w8, [x29, #-20]
  2113e8:	bl	211c10 <log_set_target@plt>
  2113ec:	bl	211954 <udev_parse_config>
  2113f0:	mov	w0, #0x1                   	// #1
  2113f4:	bl	211c20 <log_parse_environment_realm@plt>
  2113f8:	bl	211c30 <log_open@plt>
  2113fc:	cmp	w20, #0x3
  211400:	b.lt	21144c <run+0x94>  // b.tstop
  211404:	mov	w0, #0x1                   	// #1
  211408:	bl	211c40 <log_get_max_level_realm@plt>
  21140c:	cmp	w0, #0x3
  211410:	b.lt	2114a0 <run+0xe8>  // b.tstop
  211414:	adrp	x8, 232000 <_DYNAMIC+0x10290>
  211418:	ldr	x6, [x8, #104]
  21141c:	adrp	x2, 201000 <__FRAME_END__-0x110>
  211420:	adrp	x4, 201000 <__FRAME_END__-0x110>
  211424:	adrp	x5, 200000 <__FRAME_END__-0x1110>
  211428:	mov	w1, #0x16                  	// #22
  21142c:	add	x2, x2, #0x4f
  211430:	add	x4, x4, #0x48
  211434:	add	x5, x5, #0xf5a
  211438:	mov	w0, #0x403                 	// #1027
  21143c:	movk	w1, #0x4000, lsl #16
  211440:	mov	w3, #0x2f                  	// #47
  211444:	bl	211c50 <log_internal_realm@plt>
  211448:	b	211810 <run+0x458>
  21144c:	cmp	w20, #0x1
  211450:	b.ne	2114a8 <run+0xf0>  // b.any
  211454:	adrp	x8, 232000 <_DYNAMIC+0x10290>
  211458:	ldr	x1, [x8, #112]
  21145c:	sub	x0, x29, #0x8
  211460:	bl	211c60 <device_new_from_strv@plt>
  211464:	tbz	w0, #31, 2114b8 <run+0x100>
  211468:	mov	w19, w0
  21146c:	mov	w0, #0x1                   	// #1
  211470:	bl	211c40 <log_get_max_level_realm@plt>
  211474:	cmp	w0, #0x3
  211478:	b.lt	2115f4 <run+0x23c>  // b.tstop
  21147c:	adrp	x2, 201000 <__FRAME_END__-0x110>
  211480:	adrp	x4, 201000 <__FRAME_END__-0x110>
  211484:	adrp	x5, 201000 <__FRAME_END__-0x110>
  211488:	add	x2, x2, #0x4f
  21148c:	add	x4, x4, #0x48
  211490:	add	x5, x5, #0x6a
  211494:	mov	w0, #0x403                 	// #1027
  211498:	mov	w3, #0x34                  	// #52
  21149c:	b	2115e8 <run+0x230>
  2114a0:	mov	w19, #0xffffffea            	// #-22
  2114a4:	b	211814 <run+0x45c>
  2114a8:	ldr	x1, [x19, #8]
  2114ac:	sub	x0, x29, #0x8
  2114b0:	bl	211c70 <sd_device_new_from_syspath@plt>
  2114b4:	tbnz	w0, #31, 2115b4 <run+0x1fc>
  2114b8:	ldur	x0, [x29, #-8]
  2114bc:	sub	x1, x29, #0x20
  2114c0:	bl	211c80 <sd_device_get_parent@plt>
  2114c4:	tbnz	w0, #31, 211558 <run+0x1a0>
  2114c8:	ldur	x0, [x29, #-32]
  2114cc:	sub	x1, x29, #0x28
  2114d0:	bl	211c90 <sd_device_get_syspath@plt>
  2114d4:	tbnz	w0, #31, 211604 <run+0x24c>
  2114d8:	ldur	x0, [x29, #-40]
  2114dc:	adrp	x1, 201000 <__FRAME_END__-0x110>
  2114e0:	add	x1, x1, #0x9c
  2114e4:	mov	x2, #0xffffffffffffffff    	// #-1
  2114e8:	bl	211ca0 <path_join_internal@plt>
  2114ec:	stur	x0, [x29, #-16]
  2114f0:	cbz	x0, 211668 <run+0x2b0>
  2114f4:	mov	w1, #0x8000                	// #32768
  2114f8:	movk	w1, #0x8, lsl #16
  2114fc:	mov	x19, x0
  211500:	bl	211cb0 <open64@plt>
  211504:	stur	w0, [x29, #-20]
  211508:	tbnz	w0, #31, 211688 <run+0x2d0>
  21150c:	add	x1, sp, #0x28
  211510:	mov	w2, #0x1000                	// #4096
  211514:	bl	211cc0 <read@plt>
  211518:	tbnz	x0, #63, 2116e8 <run+0x330>
  21151c:	mov	x1, x0
  211520:	cbz	x0, 211748 <run+0x390>
  211524:	add	x0, sp, #0x28
  211528:	bl	211984 <is_fido_security_token_desc>
  21152c:	mov	w20, w0
  211530:	tbnz	w0, #31, 2117ac <run+0x3f4>
  211534:	cbz	w20, 211550 <run+0x198>
  211538:	adrp	x0, 200000 <__FRAME_END__-0x1110>
  21153c:	add	x0, x0, #0xf71
  211540:	bl	211cd0 <puts@plt>
  211544:	adrp	x0, 201000 <__FRAME_END__-0x110>
  211548:	add	x0, x0, #0x6
  21154c:	bl	211cd0 <puts@plt>
  211550:	mov	w19, wzr
  211554:	b	211814 <run+0x45c>
  211558:	ldur	x20, [x29, #-8]
  21155c:	mov	w19, w0
  211560:	str	xzr, [sp, #40]
  211564:	cbz	x20, 211578 <run+0x1c0>
  211568:	mov	w0, #0x1                   	// #1
  21156c:	bl	211c40 <log_get_max_level_realm@plt>
  211570:	cmp	w0, #0x3
  211574:	b.ge	211848 <run+0x490>  // b.tcont
  211578:	ldr	x6, [sp, #40]
  21157c:	adrp	x8, 201000 <__FRAME_END__-0x110>
  211580:	add	x8, x8, #0x40
  211584:	adrp	x2, 201000 <__FRAME_END__-0x110>
  211588:	cmp	x6, #0x0
  21158c:	csel	x5, xzr, x8, eq  // eq = none
  211590:	adrp	x8, 201000 <__FRAME_END__-0x110>
  211594:	adrp	x4, 201000 <__FRAME_END__-0x110>
  211598:	add	x8, x8, #0xae
  21159c:	add	x2, x2, #0x4f
  2115a0:	add	x4, x4, #0x48
  2115a4:	mov	w0, #0x3                   	// #3
  2115a8:	mov	w3, #0x3d                  	// #61
  2115ac:	str	x8, [sp, #8]
  2115b0:	b	21165c <run+0x2a4>
  2115b4:	mov	w19, w0
  2115b8:	mov	w0, #0x1                   	// #1
  2115bc:	bl	211c40 <log_get_max_level_realm@plt>
  2115c0:	cmp	w0, #0x3
  2115c4:	b.lt	2115f4 <run+0x23c>  // b.tstop
  2115c8:	adrp	x2, 201000 <__FRAME_END__-0x110>
  2115cc:	adrp	x4, 201000 <__FRAME_END__-0x110>
  2115d0:	adrp	x5, 201000 <__FRAME_END__-0x110>
  2115d4:	add	x2, x2, #0x4f
  2115d8:	add	x4, x4, #0x48
  2115dc:	add	x5, x5, #0x1a
  2115e0:	mov	w0, #0x403                 	// #1027
  2115e4:	mov	w3, #0x38                  	// #56
  2115e8:	mov	w1, w19
  2115ec:	bl	211c50 <log_internal_realm@plt>
  2115f0:	b	211810 <run+0x458>
  2115f4:	mov	w8, wzr
  2115f8:	neg	w9, w19
  2115fc:	sub	w19, w8, w9, uxtb
  211600:	b	211814 <run+0x45c>
  211604:	ldur	x20, [x29, #-32]
  211608:	mov	w19, w0
  21160c:	str	xzr, [sp, #40]
  211610:	cbz	x20, 211624 <run+0x26c>
  211614:	mov	w0, #0x1                   	// #1
  211618:	bl	211c40 <log_get_max_level_realm@plt>
  21161c:	cmp	w0, #0x3
  211620:	b.ge	211858 <run+0x4a0>  // b.tcont
  211624:	ldr	x6, [sp, #40]
  211628:	adrp	x8, 201000 <__FRAME_END__-0x110>
  21162c:	add	x8, x8, #0x40
  211630:	adrp	x2, 201000 <__FRAME_END__-0x110>
  211634:	cmp	x6, #0x0
  211638:	csel	x5, xzr, x8, eq  // eq = none
  21163c:	adrp	x8, 200000 <__FRAME_END__-0x1110>
  211640:	add	x8, x8, #0xf31
  211644:	adrp	x4, 201000 <__FRAME_END__-0x110>
  211648:	add	x2, x2, #0x4f
  21164c:	add	x4, x4, #0x48
  211650:	str	x8, [sp, #8]
  211654:	mov	w0, #0x3                   	// #3
  211658:	mov	w3, #0x41                  	// #65
  21165c:	mov	w1, w19
  211660:	str	xzr, [sp]
  211664:	b	211808 <run+0x450>
  211668:	adrp	x1, 201000 <__FRAME_END__-0x110>
  21166c:	adrp	x3, 201000 <__FRAME_END__-0x110>
  211670:	add	x1, x1, #0x4f
  211674:	add	x3, x3, #0x48
  211678:	mov	w0, #0x1                   	// #1
  21167c:	mov	w2, #0x45                  	// #69
  211680:	bl	211ce0 <log_oom_internal@plt>
  211684:	b	211810 <run+0x458>
  211688:	ldur	x21, [x29, #-32]
  21168c:	str	xzr, [sp, #40]
  211690:	bl	211cf0 <__errno_location@plt>
  211694:	ldr	w20, [x0]
  211698:	cbz	x21, 2116ac <run+0x2f4>
  21169c:	mov	w0, #0x1                   	// #1
  2116a0:	bl	211c40 <log_get_max_level_realm@plt>
  2116a4:	cmp	w0, #0x3
  2116a8:	b.ge	211868 <run+0x4b0>  // b.tcont
  2116ac:	ldr	x6, [sp, #40]
  2116b0:	adrp	x8, 201000 <__FRAME_END__-0x110>
  2116b4:	add	x8, x8, #0x40
  2116b8:	adrp	x2, 201000 <__FRAME_END__-0x110>
  2116bc:	cmp	x6, #0x0
  2116c0:	csel	x5, xzr, x8, eq  // eq = none
  2116c4:	adrp	x8, 200000 <__FRAME_END__-0x1110>
  2116c8:	adrp	x4, 201000 <__FRAME_END__-0x110>
  2116cc:	add	x8, x8, #0xf81
  2116d0:	add	x2, x2, #0x4f
  2116d4:	add	x4, x4, #0x48
  2116d8:	mov	w0, #0x3                   	// #3
  2116dc:	mov	w3, #0x4a                  	// #74
  2116e0:	stp	x8, x19, [sp, #8]
  2116e4:	b	211800 <run+0x448>
  2116e8:	ldur	x21, [x29, #-32]
  2116ec:	str	xzr, [sp, #32]
  2116f0:	bl	211cf0 <__errno_location@plt>
  2116f4:	ldr	w20, [x0]
  2116f8:	cbz	x21, 21170c <run+0x354>
  2116fc:	mov	w0, #0x1                   	// #1
  211700:	bl	211c40 <log_get_max_level_realm@plt>
  211704:	cmp	w0, #0x3
  211708:	b.ge	211878 <run+0x4c0>  // b.tcont
  21170c:	ldr	x6, [sp, #32]
  211710:	adrp	x8, 201000 <__FRAME_END__-0x110>
  211714:	add	x8, x8, #0x40
  211718:	adrp	x2, 201000 <__FRAME_END__-0x110>
  21171c:	cmp	x6, #0x0
  211720:	csel	x5, xzr, x8, eq  // eq = none
  211724:	adrp	x8, 200000 <__FRAME_END__-0x1110>
  211728:	add	x8, x8, #0xfd9
  21172c:	adrp	x4, 201000 <__FRAME_END__-0x110>
  211730:	add	x2, x2, #0x4f
  211734:	add	x4, x4, #0x48
  211738:	stp	x8, x19, [sp, #8]
  21173c:	mov	w0, #0x3                   	// #3
  211740:	mov	w3, #0x4f                  	// #79
  211744:	b	211800 <run+0x448>
  211748:	ldur	x20, [x29, #-32]
  21174c:	str	xzr, [sp, #32]
  211750:	cbz	x20, 211764 <run+0x3ac>
  211754:	mov	w0, #0x1                   	// #1
  211758:	bl	211c40 <log_get_max_level_realm@plt>
  21175c:	cmp	w0, #0x7
  211760:	b.ge	211888 <run+0x4d0>  // b.tcont
  211764:	ldr	x6, [sp, #32]
  211768:	adrp	x8, 201000 <__FRAME_END__-0x110>
  21176c:	add	x8, x8, #0x40
  211770:	adrp	x2, 201000 <__FRAME_END__-0x110>
  211774:	cmp	x6, #0x0
  211778:	csel	x5, xzr, x8, eq  // eq = none
  21177c:	adrp	x8, 200000 <__FRAME_END__-0x1110>
  211780:	add	x8, x8, #0xf10
  211784:	adrp	x4, 201000 <__FRAME_END__-0x110>
  211788:	mov	w1, #0x16                  	// #22
  21178c:	add	x2, x2, #0x4f
  211790:	add	x4, x4, #0x48
  211794:	stp	x8, x19, [sp, #8]
  211798:	mov	w0, #0x7                   	// #7
  21179c:	movk	w1, #0x4000, lsl #16
  2117a0:	mov	w3, #0x52                  	// #82
  2117a4:	str	xzr, [sp]
  2117a8:	b	211808 <run+0x450>
  2117ac:	ldur	x21, [x29, #-32]
  2117b0:	str	xzr, [sp, #32]
  2117b4:	cbz	x21, 2117c8 <run+0x410>
  2117b8:	mov	w0, #0x1                   	// #1
  2117bc:	bl	211c40 <log_get_max_level_realm@plt>
  2117c0:	cmp	w0, #0x7
  2117c4:	b.ge	211898 <run+0x4e0>  // b.tcont
  2117c8:	ldr	x6, [sp, #32]
  2117cc:	adrp	x8, 201000 <__FRAME_END__-0x110>
  2117d0:	add	x8, x8, #0x40
  2117d4:	adrp	x2, 201000 <__FRAME_END__-0x110>
  2117d8:	cmp	x6, #0x0
  2117dc:	csel	x5, xzr, x8, eq  // eq = none
  2117e0:	adrp	x8, 200000 <__FRAME_END__-0x1110>
  2117e4:	add	x8, x8, #0xfae
  2117e8:	adrp	x4, 201000 <__FRAME_END__-0x110>
  2117ec:	add	x2, x2, #0x4f
  2117f0:	add	x4, x4, #0x48
  2117f4:	stp	x8, x19, [sp, #8]
  2117f8:	mov	w0, #0x7                   	// #7
  2117fc:	mov	w3, #0x57                  	// #87
  211800:	str	xzr, [sp]
  211804:	mov	w1, w20
  211808:	mov	x7, xzr
  21180c:	bl	211d00 <log_object_internal@plt>
  211810:	mov	w19, w0
  211814:	sub	x0, x29, #0x14
  211818:	bl	21193c <closep>
  21181c:	sub	x0, x29, #0x10
  211820:	bl	211924 <freep>
  211824:	sub	x0, x29, #0x8
  211828:	bl	211908 <sd_device_unrefp>
  21182c:	mov	w0, w19
  211830:	add	sp, sp, #0x1, lsl #12
  211834:	add	sp, sp, #0x50
  211838:	ldp	x20, x19, [sp, #32]
  21183c:	ldp	x28, x21, [sp, #16]
  211840:	ldp	x29, x30, [sp], #48
  211844:	ret
  211848:	add	x1, sp, #0x28
  21184c:	mov	x0, x20
  211850:	bl	211d10 <sd_device_get_sysname@plt>
  211854:	b	211578 <run+0x1c0>
  211858:	add	x1, sp, #0x28
  21185c:	mov	x0, x20
  211860:	bl	211d10 <sd_device_get_sysname@plt>
  211864:	b	211624 <run+0x26c>
  211868:	add	x1, sp, #0x28
  21186c:	mov	x0, x21
  211870:	bl	211d10 <sd_device_get_sysname@plt>
  211874:	b	2116ac <run+0x2f4>
  211878:	add	x1, sp, #0x20
  21187c:	mov	x0, x21
  211880:	bl	211d10 <sd_device_get_sysname@plt>
  211884:	b	21170c <run+0x354>
  211888:	add	x1, sp, #0x20
  21188c:	mov	x0, x20
  211890:	bl	211d10 <sd_device_get_sysname@plt>
  211894:	b	211764 <run+0x3ac>
  211898:	add	x1, sp, #0x20
  21189c:	mov	x0, x21
  2118a0:	bl	211d10 <sd_device_get_sysname@plt>
  2118a4:	b	2117c8 <run+0x410>

00000000002118a8 <static_destruct>:
  2118a8:	stp	x29, x30, [sp, #-32]!
  2118ac:	stp	x20, x19, [sp, #16]
  2118b0:	adrp	x8, 221000 <udev_parse_config_full@plt+0xf2b0>
  2118b4:	ldr	x8, [x8, #3912]
  2118b8:	mov	x29, sp
  2118bc:	cbz	x8, 2118fc <static_destruct+0x54>
  2118c0:	adrp	x0, 221000 <udev_parse_config_full@plt+0xf2b0>
  2118c4:	ldr	x0, [x0, #3912]
  2118c8:	bl	211978 <ALIGN_TO>
  2118cc:	adrp	x20, 221000 <udev_parse_config_full@plt+0xf2b0>
  2118d0:	ldr	x20, [x20, #3920]
  2118d4:	cmp	x0, x20
  2118d8:	b.cs	2118fc <static_destruct+0x54>  // b.hs, b.nlast
  2118dc:	mov	x19, x0
  2118e0:	ldp	x0, x8, [x19]
  2118e4:	blr	x8
  2118e8:	add	x0, x19, #0x10
  2118ec:	bl	211978 <ALIGN_TO>
  2118f0:	mov	x19, x0
  2118f4:	cmp	x0, x20
  2118f8:	b.cc	2118e0 <static_destruct+0x38>  // b.lo, b.ul, b.last
  2118fc:	ldp	x20, x19, [sp, #16]
  211900:	ldp	x29, x30, [sp], #32
  211904:	ret

0000000000211908 <sd_device_unrefp>:
  211908:	stp	x29, x30, [sp, #-16]!
  21190c:	ldr	x0, [x0]
  211910:	mov	x29, sp
  211914:	cbz	x0, 21191c <sd_device_unrefp+0x14>
  211918:	bl	211d20 <sd_device_unref@plt>
  21191c:	ldp	x29, x30, [sp], #16
  211920:	ret

0000000000211924 <freep>:
  211924:	stp	x29, x30, [sp, #-16]!
  211928:	ldr	x0, [x0]
  21192c:	mov	x29, sp
  211930:	bl	211d30 <free@plt>
  211934:	ldp	x29, x30, [sp], #16
  211938:	ret

000000000021193c <closep>:
  21193c:	stp	x29, x30, [sp, #-16]!
  211940:	ldr	w0, [x0]
  211944:	mov	x29, sp
  211948:	bl	211d40 <safe_close@plt>
  21194c:	ldp	x29, x30, [sp], #16
  211950:	ret

0000000000211954 <udev_parse_config>:
  211954:	stp	x29, x30, [sp, #-16]!
  211958:	mov	x0, xzr
  21195c:	mov	x1, xzr
  211960:	mov	x2, xzr
  211964:	mov	x3, xzr
  211968:	mov	x29, sp
  21196c:	bl	211d50 <udev_parse_config_full@plt>
  211970:	ldp	x29, x30, [sp], #16
  211974:	ret

0000000000211978 <ALIGN_TO>:
  211978:	add	x8, x0, #0x7
  21197c:	and	x0, x8, #0xfffffffffffffff8
  211980:	ret

0000000000211984 <is_fido_security_token_desc>:
  211984:	cbz	x1, 211abc <is_fido_security_token_desc+0x138>
  211988:	mov	w12, #0x1                   	// #1
  21198c:	mov	w9, wzr
  211990:	mov	x18, xzr
  211994:	add	x8, x0, #0x1
  211998:	mov	w11, #0x4                   	// #4
  21199c:	movk	w12, #0xf1d0, lsl #16
  2119a0:	b	2119b0 <is_fido_security_token_desc+0x2c>
  2119a4:	cmp	x13, x1
  2119a8:	mov	x18, x13
  2119ac:	b.cs	211ac4 <is_fido_security_token_desc+0x140>  // b.hs, b.nlast
  2119b0:	ldrb	w15, [x0, x18]
  2119b4:	cmp	w15, #0xfe
  2119b8:	b.ne	2119dc <is_fido_security_token_desc+0x58>  // b.any
  2119bc:	add	x13, x18, #0x1
  2119c0:	cmp	x13, x1
  2119c4:	b.cs	211a08 <is_fido_security_token_desc+0x84>  // b.hs, b.nlast
  2119c8:	ldrb	w13, [x0, x13]
  2119cc:	mov	w14, #0x3                   	// #3
  2119d0:	add	x13, x18, x13
  2119d4:	add	x13, x13, #0x3
  2119d8:	b	211aac <is_fido_security_token_desc+0x128>
  2119dc:	and	w14, w15, #0x3
  2119e0:	cmp	w14, #0x3
  2119e4:	csel	w17, w11, w14, eq  // eq = none
  2119e8:	add	x16, x18, #0x1
  2119ec:	add	x13, x16, x17
  2119f0:	cmp	x13, x1
  2119f4:	b.ls	211a18 <is_fido_security_token_desc+0x94>  // b.plast
  2119f8:	mov	w10, #0xffffffea            	// #-22
  2119fc:	mov	w14, #0x1                   	// #1
  211a00:	mov	x13, x16
  211a04:	b	211aac <is_fido_security_token_desc+0x128>
  211a08:	mov	w10, #0xffffffea            	// #-22
  211a0c:	mov	w14, #0x1                   	// #1
  211a10:	mov	x13, x18
  211a14:	b	211aac <is_fido_security_token_desc+0x128>
  211a18:	cbz	w17, 211a48 <is_fido_security_token_desc+0xc4>
  211a1c:	mov	x2, xzr
  211a20:	mov	w16, wzr
  211a24:	lsl	x3, x17, #3
  211a28:	add	x18, x8, x18
  211a2c:	ldrb	w4, [x18], #1
  211a30:	lsl	w4, w4, w2
  211a34:	add	x2, x2, #0x8
  211a38:	cmp	x3, x2
  211a3c:	orr	w16, w4, w16
  211a40:	b.ne	211a2c <is_fido_security_token_desc+0xa8>  // b.any
  211a44:	b	211a4c <is_fido_security_token_desc+0xc8>
  211a48:	mov	w16, wzr
  211a4c:	cmp	w15, #0xf
  211a50:	ubfx	w18, w15, #2, #2
  211a54:	b.hi	211a78 <is_fido_security_token_desc+0xf4>  // b.pmore
  211a58:	cmp	w18, #0x1
  211a5c:	b.ne	211a78 <is_fido_security_token_desc+0xf4>  // b.any
  211a60:	cmp	w17, #0x2
  211a64:	b.ls	211a74 <is_fido_security_token_desc+0xf0>  // b.plast
  211a68:	mov	w10, #0xffffffea            	// #-22
  211a6c:	mov	w14, #0x1                   	// #1
  211a70:	b	211aac <is_fido_security_token_desc+0x128>
  211a74:	lsl	w9, w16, #16
  211a78:	cmp	w15, #0xf
  211a7c:	b.hi	211aa8 <is_fido_security_token_desc+0x124>  // b.pmore
  211a80:	cmp	w18, #0x2
  211a84:	b.ne	211aa8 <is_fido_security_token_desc+0x124>  // b.any
  211a88:	bfxil	w9, w16, #0, #16
  211a8c:	cmp	w14, #0x3
  211a90:	csel	w9, w16, w9, eq  // eq = none
  211a94:	cmp	w9, w12
  211a98:	b.ne	211aa8 <is_fido_security_token_desc+0x124>  // b.any
  211a9c:	mov	w14, #0x1                   	// #1
  211aa0:	mov	w10, #0x1                   	// #1
  211aa4:	b	211aac <is_fido_security_token_desc+0x128>
  211aa8:	mov	w14, wzr
  211aac:	cmp	w14, #0x3
  211ab0:	b.eq	2119a4 <is_fido_security_token_desc+0x20>  // b.none
  211ab4:	cbz	w14, 2119a4 <is_fido_security_token_desc+0x20>
  211ab8:	b	211ac8 <is_fido_security_token_desc+0x144>
  211abc:	mov	w14, #0x2                   	// #2
  211ac0:	b	211ac8 <is_fido_security_token_desc+0x144>
  211ac4:	mov	w14, #0x2                   	// #2
  211ac8:	cmp	w14, #0x2
  211acc:	csel	w0, wzr, w10, eq  // eq = none
  211ad0:	ret
  211ad4:	udf	#0

0000000000211ad8 <__libc_csu_init>:
  211ad8:	stp	x29, x30, [sp, #-64]!
  211adc:	mov	x29, sp
  211ae0:	stp	x19, x20, [sp, #16]
  211ae4:	adrp	x20, 221000 <udev_parse_config_full@plt+0xf2b0>
  211ae8:	add	x20, x20, #0xd70
  211aec:	stp	x21, x22, [sp, #32]
  211af0:	adrp	x21, 221000 <udev_parse_config_full@plt+0xf2b0>
  211af4:	add	x21, x21, #0xd68
  211af8:	sub	x20, x20, x21
  211afc:	mov	w22, w0
  211b00:	stp	x23, x24, [sp, #48]
  211b04:	mov	x23, x1
  211b08:	mov	x24, x2
  211b0c:	bl	211b5c <_init>
  211b10:	cmp	xzr, x20, asr #3
  211b14:	b.eq	211b40 <__libc_csu_init+0x68>  // b.none
  211b18:	asr	x20, x20, #3
  211b1c:	mov	x19, #0x0                   	// #0
  211b20:	ldr	x3, [x21, x19, lsl #3]
  211b24:	mov	x2, x24
  211b28:	add	x19, x19, #0x1
  211b2c:	mov	x1, x23
  211b30:	mov	w0, w22
  211b34:	blr	x3
  211b38:	cmp	x20, x19
  211b3c:	b.ne	211b20 <__libc_csu_init+0x48>  // b.any
  211b40:	ldp	x19, x20, [sp, #16]
  211b44:	ldp	x21, x22, [sp, #32]
  211b48:	ldp	x23, x24, [sp, #48]
  211b4c:	ldp	x29, x30, [sp], #64
  211b50:	ret
  211b54:	nop

0000000000211b58 <__libc_csu_fini>:
  211b58:	ret

Disassembly of section .init:

0000000000211b5c <_init>:
  211b5c:	stp	x29, x30, [sp, #-16]!
  211b60:	mov	x29, sp
  211b64:	bl	211258 <call_weak_fn>
  211b68:	ldp	x29, x30, [sp], #16
  211b6c:	ret

Disassembly of section .fini:

0000000000211b70 <_fini>:
  211b70:	stp	x29, x30, [sp, #-16]!
  211b74:	mov	x29, sp
  211b78:	ldp	x29, x30, [sp], #16
  211b7c:	ret

Disassembly of section .plt:

0000000000211b80 <__libc_start_main@plt-0x20>:
  211b80:	stp	x16, x30, [sp, #-16]!
  211b84:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211b88:	ldr	x17, [x16, #3944]
  211b8c:	add	x16, x16, #0xf68
  211b90:	br	x17
  211b94:	nop
  211b98:	nop
  211b9c:	nop

0000000000211ba0 <__libc_start_main@plt>:
  211ba0:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211ba4:	ldr	x17, [x16, #3952]
  211ba8:	add	x16, x16, #0xf70
  211bac:	br	x17

0000000000211bb0 <abort@plt>:
  211bb0:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211bb4:	ldr	x17, [x16, #3960]
  211bb8:	add	x16, x16, #0xf78
  211bbc:	br	x17

0000000000211bc0 <__gmon_start__@plt>:
  211bc0:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211bc4:	ldr	x17, [x16, #3968]
  211bc8:	add	x16, x16, #0xf80
  211bcc:	br	x17

0000000000211bd0 <ask_password_agent_close@plt>:
  211bd0:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211bd4:	ldr	x17, [x16, #3976]
  211bd8:	add	x16, x16, #0xf88
  211bdc:	br	x17

0000000000211be0 <polkit_agent_close@plt>:
  211be0:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211be4:	ldr	x17, [x16, #3984]
  211be8:	add	x16, x16, #0xf90
  211bec:	br	x17

0000000000211bf0 <pager_close@plt>:
  211bf0:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211bf4:	ldr	x17, [x16, #3992]
  211bf8:	add	x16, x16, #0xf98
  211bfc:	br	x17

0000000000211c00 <mac_selinux_finish@plt>:
  211c00:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c04:	ldr	x17, [x16, #4000]
  211c08:	add	x16, x16, #0xfa0
  211c0c:	br	x17

0000000000211c10 <log_set_target@plt>:
  211c10:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c14:	ldr	x17, [x16, #4008]
  211c18:	add	x16, x16, #0xfa8
  211c1c:	br	x17

0000000000211c20 <log_parse_environment_realm@plt>:
  211c20:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c24:	ldr	x17, [x16, #4016]
  211c28:	add	x16, x16, #0xfb0
  211c2c:	br	x17

0000000000211c30 <log_open@plt>:
  211c30:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c34:	ldr	x17, [x16, #4024]
  211c38:	add	x16, x16, #0xfb8
  211c3c:	br	x17

0000000000211c40 <log_get_max_level_realm@plt>:
  211c40:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c44:	ldr	x17, [x16, #4032]
  211c48:	add	x16, x16, #0xfc0
  211c4c:	br	x17

0000000000211c50 <log_internal_realm@plt>:
  211c50:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c54:	ldr	x17, [x16, #4040]
  211c58:	add	x16, x16, #0xfc8
  211c5c:	br	x17

0000000000211c60 <device_new_from_strv@plt>:
  211c60:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c64:	ldr	x17, [x16, #4048]
  211c68:	add	x16, x16, #0xfd0
  211c6c:	br	x17

0000000000211c70 <sd_device_new_from_syspath@plt>:
  211c70:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c74:	ldr	x17, [x16, #4056]
  211c78:	add	x16, x16, #0xfd8
  211c7c:	br	x17

0000000000211c80 <sd_device_get_parent@plt>:
  211c80:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c84:	ldr	x17, [x16, #4064]
  211c88:	add	x16, x16, #0xfe0
  211c8c:	br	x17

0000000000211c90 <sd_device_get_syspath@plt>:
  211c90:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211c94:	ldr	x17, [x16, #4072]
  211c98:	add	x16, x16, #0xfe8
  211c9c:	br	x17

0000000000211ca0 <path_join_internal@plt>:
  211ca0:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211ca4:	ldr	x17, [x16, #4080]
  211ca8:	add	x16, x16, #0xff0
  211cac:	br	x17

0000000000211cb0 <open64@plt>:
  211cb0:	adrp	x16, 221000 <udev_parse_config_full@plt+0xf2b0>
  211cb4:	ldr	x17, [x16, #4088]
  211cb8:	add	x16, x16, #0xff8
  211cbc:	br	x17

0000000000211cc0 <read@plt>:
  211cc0:	adrp	x16, 222000 <read@GLIBC_2.17>
  211cc4:	ldr	x17, [x16]
  211cc8:	add	x16, x16, #0x0
  211ccc:	br	x17

0000000000211cd0 <puts@plt>:
  211cd0:	adrp	x16, 222000 <read@GLIBC_2.17>
  211cd4:	ldr	x17, [x16, #8]
  211cd8:	add	x16, x16, #0x8
  211cdc:	br	x17

0000000000211ce0 <log_oom_internal@plt>:
  211ce0:	adrp	x16, 222000 <read@GLIBC_2.17>
  211ce4:	ldr	x17, [x16, #16]
  211ce8:	add	x16, x16, #0x10
  211cec:	br	x17

0000000000211cf0 <__errno_location@plt>:
  211cf0:	adrp	x16, 222000 <read@GLIBC_2.17>
  211cf4:	ldr	x17, [x16, #24]
  211cf8:	add	x16, x16, #0x18
  211cfc:	br	x17

0000000000211d00 <log_object_internal@plt>:
  211d00:	adrp	x16, 222000 <read@GLIBC_2.17>
  211d04:	ldr	x17, [x16, #32]
  211d08:	add	x16, x16, #0x20
  211d0c:	br	x17

0000000000211d10 <sd_device_get_sysname@plt>:
  211d10:	adrp	x16, 222000 <read@GLIBC_2.17>
  211d14:	ldr	x17, [x16, #40]
  211d18:	add	x16, x16, #0x28
  211d1c:	br	x17

0000000000211d20 <sd_device_unref@plt>:
  211d20:	adrp	x16, 222000 <read@GLIBC_2.17>
  211d24:	ldr	x17, [x16, #48]
  211d28:	add	x16, x16, #0x30
  211d2c:	br	x17

0000000000211d30 <free@plt>:
  211d30:	adrp	x16, 222000 <read@GLIBC_2.17>
  211d34:	ldr	x17, [x16, #56]
  211d38:	add	x16, x16, #0x38
  211d3c:	br	x17

0000000000211d40 <safe_close@plt>:
  211d40:	adrp	x16, 222000 <read@GLIBC_2.17>
  211d44:	ldr	x17, [x16, #64]
  211d48:	add	x16, x16, #0x40
  211d4c:	br	x17

0000000000211d50 <udev_parse_config_full@plt>:
  211d50:	adrp	x16, 222000 <read@GLIBC_2.17>
  211d54:	ldr	x17, [x16, #72]
  211d58:	add	x16, x16, #0x48
  211d5c:	br	x17
