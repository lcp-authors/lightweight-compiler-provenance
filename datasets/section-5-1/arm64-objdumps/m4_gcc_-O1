
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//m4_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402340 <.init>:
  402340:	stp	x29, x30, [sp, #-16]!
  402344:	mov	x29, sp
  402348:	bl	402a50 <ferror@plt+0x60>
  40234c:	ldp	x29, x30, [sp], #16
  402350:	ret

Disassembly of section .plt:

0000000000402360 <mbrtowc@plt-0x20>:
  402360:	stp	x16, x30, [sp, #-16]!
  402364:	adrp	x16, 42f000 <_obstack_memory_used@@Base+0x1806c>
  402368:	ldr	x17, [x16, #4088]
  40236c:	add	x16, x16, #0xff8
  402370:	br	x17
  402374:	nop
  402378:	nop
  40237c:	nop

0000000000402380 <mbrtowc@plt>:
  402380:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16]
  402388:	add	x16, x16, #0x0
  40238c:	br	x17

0000000000402390 <memcpy@plt>:
  402390:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #8]
  402398:	add	x16, x16, #0x8
  40239c:	br	x17

00000000004023a0 <sigaltstack@plt>:
  4023a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #16]
  4023a8:	add	x16, x16, #0x10
  4023ac:	br	x17

00000000004023b0 <_exit@plt>:
  4023b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #24]
  4023b8:	add	x16, x16, #0x18
  4023bc:	br	x17

00000000004023c0 <fwrite_unlocked@plt>:
  4023c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #32]
  4023c8:	add	x16, x16, #0x20
  4023cc:	br	x17

00000000004023d0 <strlen@plt>:
  4023d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #40]
  4023d8:	add	x16, x16, #0x28
  4023dc:	br	x17

00000000004023e0 <fputs@plt>:
  4023e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #48]
  4023e8:	add	x16, x16, #0x30
  4023ec:	br	x17

00000000004023f0 <__sprintf_chk@plt>:
  4023f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #56]
  4023f8:	add	x16, x16, #0x38
  4023fc:	br	x17

0000000000402400 <exit@plt>:
  402400:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #64]
  402408:	add	x16, x16, #0x40
  40240c:	br	x17

0000000000402410 <raise@plt>:
  402410:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #72]
  402418:	add	x16, x16, #0x48
  40241c:	br	x17

0000000000402420 <error@plt>:
  402420:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #80]
  402428:	add	x16, x16, #0x50
  40242c:	br	x17

0000000000402430 <sigprocmask@plt>:
  402430:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #88]
  402438:	add	x16, x16, #0x58
  40243c:	br	x17

0000000000402440 <strtod@plt>:
  402440:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #96]
  402448:	add	x16, x16, #0x60
  40244c:	br	x17

0000000000402450 <secure_getenv@plt>:
  402450:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #104]
  402458:	add	x16, x16, #0x68
  40245c:	br	x17

0000000000402460 <setbuf@plt>:
  402460:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #112]
  402468:	add	x16, x16, #0x70
  40246c:	br	x17

0000000000402470 <putc@plt>:
  402470:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #120]
  402478:	add	x16, x16, #0x78
  40247c:	br	x17

0000000000402480 <pipe@plt>:
  402480:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #128]
  402488:	add	x16, x16, #0x80
  40248c:	br	x17

0000000000402490 <__cxa_atexit@plt>:
  402490:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #136]
  402498:	add	x16, x16, #0x88
  40249c:	br	x17

00000000004024a0 <fputc@plt>:
  4024a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #144]
  4024a8:	add	x16, x16, #0x90
  4024ac:	br	x17

00000000004024b0 <qsort@plt>:
  4024b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #152]
  4024b8:	add	x16, x16, #0x98
  4024bc:	br	x17

00000000004024c0 <posix_spawn_file_actions_addopen@plt>:
  4024c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #160]
  4024c8:	add	x16, x16, #0xa0
  4024cc:	br	x17

00000000004024d0 <kill@plt>:
  4024d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #168]
  4024d8:	add	x16, x16, #0xa8
  4024dc:	br	x17

00000000004024e0 <lseek@plt>:
  4024e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #176]
  4024e8:	add	x16, x16, #0xb0
  4024ec:	br	x17

00000000004024f0 <__fpending@plt>:
  4024f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #184]
  4024f8:	add	x16, x16, #0xb8
  4024fc:	br	x17

0000000000402500 <fileno@plt>:
  402500:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #192]
  402508:	add	x16, x16, #0xc0
  40250c:	br	x17

0000000000402510 <posix_spawn_file_actions_adddup2@plt>:
  402510:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #200]
  402518:	add	x16, x16, #0xc8
  40251c:	br	x17

0000000000402520 <signal@plt>:
  402520:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #208]
  402528:	add	x16, x16, #0xd0
  40252c:	br	x17

0000000000402530 <fclose@plt>:
  402530:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #216]
  402538:	add	x16, x16, #0xd8
  40253c:	br	x17

0000000000402540 <getpid@plt>:
  402540:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #224]
  402548:	add	x16, x16, #0xe0
  40254c:	br	x17

0000000000402550 <nl_langinfo@plt>:
  402550:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #232]
  402558:	add	x16, x16, #0xe8
  40255c:	br	x17

0000000000402560 <fopen@plt>:
  402560:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #240]
  402568:	add	x16, x16, #0xf0
  40256c:	br	x17

0000000000402570 <malloc@plt>:
  402570:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #248]
  402578:	add	x16, x16, #0xf8
  40257c:	br	x17

0000000000402580 <open@plt>:
  402580:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #256]
  402588:	add	x16, x16, #0x100
  40258c:	br	x17

0000000000402590 <__vasprintf_chk@plt>:
  402590:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #264]
  402598:	add	x16, x16, #0x108
  40259c:	br	x17

00000000004025a0 <__isoc99_fscanf@plt>:
  4025a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #272]
  4025a8:	add	x16, x16, #0x110
  4025ac:	br	x17

00000000004025b0 <sigemptyset@plt>:
  4025b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #280]
  4025b8:	add	x16, x16, #0x118
  4025bc:	br	x17

00000000004025c0 <posix_spawnattr_destroy@plt>:
  4025c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #288]
  4025c8:	add	x16, x16, #0x120
  4025cc:	br	x17

00000000004025d0 <strncmp@plt>:
  4025d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #296]
  4025d8:	add	x16, x16, #0x128
  4025dc:	br	x17

00000000004025e0 <__libc_start_main@plt>:
  4025e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #304]
  4025e8:	add	x16, x16, #0x130
  4025ec:	br	x17

00000000004025f0 <strcat@plt>:
  4025f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #312]
  4025f8:	add	x16, x16, #0x138
  4025fc:	br	x17

0000000000402600 <__printf_chk@plt>:
  402600:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #320]
  402608:	add	x16, x16, #0x140
  40260c:	br	x17

0000000000402610 <memset@plt>:
  402610:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #328]
  402618:	add	x16, x16, #0x148
  40261c:	br	x17

0000000000402620 <fdopen@plt>:
  402620:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #336]
  402628:	add	x16, x16, #0x150
  40262c:	br	x17

0000000000402630 <re_set_registers@plt>:
  402630:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #344]
  402638:	add	x16, x16, #0x158
  40263c:	br	x17

0000000000402640 <__vfprintf_chk@plt>:
  402640:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #352]
  402648:	add	x16, x16, #0x160
  40264c:	br	x17

0000000000402650 <calloc@plt>:
  402650:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #360]
  402658:	add	x16, x16, #0x168
  40265c:	br	x17

0000000000402660 <posix_spawn_file_actions_destroy@plt>:
  402660:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #368]
  402668:	add	x16, x16, #0x170
  40266c:	br	x17

0000000000402670 <realloc@plt>:
  402670:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #376]
  402678:	add	x16, x16, #0x178
  40267c:	br	x17

0000000000402680 <re_search@plt>:
  402680:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #384]
  402688:	add	x16, x16, #0x180
  40268c:	br	x17

0000000000402690 <getc@plt>:
  402690:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #392]
  402698:	add	x16, x16, #0x188
  40269c:	br	x17

00000000004026a0 <posix_spawn_file_actions_addclose@plt>:
  4026a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #400]
  4026a8:	add	x16, x16, #0x190
  4026ac:	br	x17

00000000004026b0 <close@plt>:
  4026b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #408]
  4026b8:	add	x16, x16, #0x198
  4026bc:	br	x17

00000000004026c0 <sigaction@plt>:
  4026c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #416]
  4026c8:	add	x16, x16, #0x1a0
  4026cc:	br	x17

00000000004026d0 <strrchr@plt>:
  4026d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #424]
  4026d8:	add	x16, x16, #0x1a8
  4026dc:	br	x17

00000000004026e0 <__gmon_start__@plt>:
  4026e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #432]
  4026e8:	add	x16, x16, #0x1b0
  4026ec:	br	x17

00000000004026f0 <write@plt>:
  4026f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #440]
  4026f8:	add	x16, x16, #0x1b8
  4026fc:	br	x17

0000000000402700 <mkdtemp@plt>:
  402700:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #448]
  402708:	add	x16, x16, #0x1c0
  40270c:	br	x17

0000000000402710 <posix_spawnattr_setflags@plt>:
  402710:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #456]
  402718:	add	x16, x16, #0x1c8
  40271c:	br	x17

0000000000402720 <abort@plt>:
  402720:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #464]
  402728:	add	x16, x16, #0x1d0
  40272c:	br	x17

0000000000402730 <re_compile_pattern@plt>:
  402730:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #472]
  402738:	add	x16, x16, #0x1d8
  40273c:	br	x17

0000000000402740 <mbsinit@plt>:
  402740:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #480]
  402748:	add	x16, x16, #0x1e0
  40274c:	br	x17

0000000000402750 <posix_spawnattr_setsigmask@plt>:
  402750:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #488]
  402758:	add	x16, x16, #0x1e8
  40275c:	br	x17

0000000000402760 <puts@plt>:
  402760:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #496]
  402768:	add	x16, x16, #0x1f0
  40276c:	br	x17

0000000000402770 <posix_spawn_file_actions_init@plt>:
  402770:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #504]
  402778:	add	x16, x16, #0x1f8
  40277c:	br	x17

0000000000402780 <memcmp@plt>:
  402780:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #512]
  402788:	add	x16, x16, #0x200
  40278c:	br	x17

0000000000402790 <getopt_long@plt>:
  402790:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #520]
  402798:	add	x16, x16, #0x208
  40279c:	br	x17

00000000004027a0 <__fprintf_chk@plt>:
  4027a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #528]
  4027a8:	add	x16, x16, #0x210
  4027ac:	br	x17

00000000004027b0 <strcmp@plt>:
  4027b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #536]
  4027b8:	add	x16, x16, #0x218
  4027bc:	br	x17

00000000004027c0 <__ctype_b_loc@plt>:
  4027c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #544]
  4027c8:	add	x16, x16, #0x220
  4027cc:	br	x17

00000000004027d0 <rmdir@plt>:
  4027d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #552]
  4027d8:	add	x16, x16, #0x228
  4027dc:	br	x17

00000000004027e0 <strtol@plt>:
  4027e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #560]
  4027e8:	add	x16, x16, #0x230
  4027ec:	br	x17

00000000004027f0 <fseeko@plt>:
  4027f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #568]
  4027f8:	add	x16, x16, #0x238
  4027fc:	br	x17

0000000000402800 <fread@plt>:
  402800:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #576]
  402808:	add	x16, x16, #0x240
  40280c:	br	x17

0000000000402810 <free@plt>:
  402810:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #584]
  402818:	add	x16, x16, #0x248
  40281c:	br	x17

0000000000402820 <ungetc@plt>:
  402820:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #592]
  402828:	add	x16, x16, #0x250
  40282c:	br	x17

0000000000402830 <__ctype_get_mb_cur_max@plt>:
  402830:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #600]
  402838:	add	x16, x16, #0x258
  40283c:	br	x17

0000000000402840 <mempcpy@plt>:
  402840:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #608]
  402848:	add	x16, x16, #0x260
  40284c:	br	x17

0000000000402850 <posix_spawnp@plt>:
  402850:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #616]
  402858:	add	x16, x16, #0x268
  40285c:	br	x17

0000000000402860 <strchr@plt>:
  402860:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #624]
  402868:	add	x16, x16, #0x270
  40286c:	br	x17

0000000000402870 <rename@plt>:
  402870:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #632]
  402878:	add	x16, x16, #0x278
  40287c:	br	x17

0000000000402880 <fwrite@plt>:
  402880:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #640]
  402888:	add	x16, x16, #0x280
  40288c:	br	x17

0000000000402890 <fcntl@plt>:
  402890:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #648]
  402898:	add	x16, x16, #0x288
  40289c:	br	x17

00000000004028a0 <fflush@plt>:
  4028a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #656]
  4028a8:	add	x16, x16, #0x290
  4028ac:	br	x17

00000000004028b0 <strcpy@plt>:
  4028b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #664]
  4028b8:	add	x16, x16, #0x298
  4028bc:	br	x17

00000000004028c0 <posix_spawnattr_init@plt>:
  4028c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #672]
  4028c8:	add	x16, x16, #0x2a0
  4028cc:	br	x17

00000000004028d0 <memchr@plt>:
  4028d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #680]
  4028d8:	add	x16, x16, #0x2a8
  4028dc:	br	x17

00000000004028e0 <mkstemp@plt>:
  4028e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #688]
  4028e8:	add	x16, x16, #0x2b0
  4028ec:	br	x17

00000000004028f0 <__fxstat@plt>:
  4028f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #696]
  4028f8:	add	x16, x16, #0x2b8
  4028fc:	br	x17

0000000000402900 <strstr@plt>:
  402900:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #704]
  402908:	add	x16, x16, #0x2c0
  40290c:	br	x17

0000000000402910 <__freading@plt>:
  402910:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #712]
  402918:	add	x16, x16, #0x2c8
  40291c:	br	x17

0000000000402920 <regfree@plt>:
  402920:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #720]
  402928:	add	x16, x16, #0x2d0
  40292c:	br	x17

0000000000402930 <strsignal@plt>:
  402930:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #728]
  402938:	add	x16, x16, #0x2d8
  40293c:	br	x17

0000000000402940 <sigaddset@plt>:
  402940:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #736]
  402948:	add	x16, x16, #0x2e0
  40294c:	br	x17

0000000000402950 <iswprint@plt>:
  402950:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #744]
  402958:	add	x16, x16, #0x2e8
  40295c:	br	x17

0000000000402960 <__assert_fail@plt>:
  402960:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #752]
  402968:	add	x16, x16, #0x2f0
  40296c:	br	x17

0000000000402970 <__errno_location@plt>:
  402970:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #760]
  402978:	add	x16, x16, #0x2f8
  40297c:	br	x17

0000000000402980 <getenv@plt>:
  402980:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #768]
  402988:	add	x16, x16, #0x300
  40298c:	br	x17

0000000000402990 <__xstat@plt>:
  402990:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #776]
  402998:	add	x16, x16, #0x308
  40299c:	br	x17

00000000004029a0 <waitpid@plt>:
  4029a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #784]
  4029a8:	add	x16, x16, #0x310
  4029ac:	br	x17

00000000004029b0 <unlink@plt>:
  4029b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #792]
  4029b8:	add	x16, x16, #0x318
  4029bc:	br	x17

00000000004029c0 <error_at_line@plt>:
  4029c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #800]
  4029c8:	add	x16, x16, #0x320
  4029cc:	br	x17

00000000004029d0 <__uflow@plt>:
  4029d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #808]
  4029d8:	add	x16, x16, #0x328
  4029dc:	br	x17

00000000004029e0 <setlocale@plt>:
  4029e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #816]
  4029e8:	add	x16, x16, #0x330
  4029ec:	br	x17

00000000004029f0 <ferror@plt>:
  4029f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #824]
  4029f8:	add	x16, x16, #0x338
  4029fc:	br	x17

Disassembly of section .text:

0000000000402a00 <_obstack_begin@@Base-0x14370>:
  402a00:	mov	x29, #0x0                   	// #0
  402a04:	mov	x30, #0x0                   	// #0
  402a08:	mov	x5, x0
  402a0c:	ldr	x1, [sp]
  402a10:	add	x2, sp, #0x8
  402a14:	mov	x6, sp
  402a18:	movz	x0, #0x0, lsl #48
  402a1c:	movk	x0, #0x0, lsl #32
  402a20:	movk	x0, #0x40, lsl #16
  402a24:	movk	x0, #0x2de4
  402a28:	movz	x3, #0x0, lsl #48
  402a2c:	movk	x3, #0x0, lsl #32
  402a30:	movk	x3, #0x41, lsl #16
  402a34:	movk	x3, #0x7458
  402a38:	movz	x4, #0x0, lsl #48
  402a3c:	movk	x4, #0x0, lsl #32
  402a40:	movk	x4, #0x41, lsl #16
  402a44:	movk	x4, #0x74d8
  402a48:	bl	4025e0 <__libc_start_main@plt>
  402a4c:	bl	402720 <abort@plt>
  402a50:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1806c>
  402a54:	ldr	x0, [x0, #4064]
  402a58:	cbz	x0, 402a60 <ferror@plt+0x70>
  402a5c:	b	4026e0 <__gmon_start__@plt>
  402a60:	ret
  402a64:	nop
  402a68:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  402a6c:	add	x0, x0, #0x408
  402a70:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  402a74:	add	x1, x1, #0x408
  402a78:	cmp	x1, x0
  402a7c:	b.eq	402a94 <ferror@plt+0xa4>  // b.none
  402a80:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  402a84:	ldr	x1, [x1, #1288]
  402a88:	cbz	x1, 402a94 <ferror@plt+0xa4>
  402a8c:	mov	x16, x1
  402a90:	br	x16
  402a94:	ret
  402a98:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  402a9c:	add	x0, x0, #0x408
  402aa0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  402aa4:	add	x1, x1, #0x408
  402aa8:	sub	x1, x1, x0
  402aac:	lsr	x2, x1, #63
  402ab0:	add	x1, x2, x1, asr #3
  402ab4:	cmp	xzr, x1, asr #1
  402ab8:	asr	x1, x1, #1
  402abc:	b.eq	402ad4 <ferror@plt+0xe4>  // b.none
  402ac0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  402ac4:	ldr	x2, [x2, #1296]
  402ac8:	cbz	x2, 402ad4 <ferror@plt+0xe4>
  402acc:	mov	x16, x2
  402ad0:	br	x16
  402ad4:	ret
  402ad8:	stp	x29, x30, [sp, #-32]!
  402adc:	mov	x29, sp
  402ae0:	str	x19, [sp, #16]
  402ae4:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  402ae8:	ldrb	w0, [x19, #1104]
  402aec:	cbnz	w0, 402afc <ferror@plt+0x10c>
  402af0:	bl	402a68 <ferror@plt+0x78>
  402af4:	mov	w0, #0x1                   	// #1
  402af8:	strb	w0, [x19, #1104]
  402afc:	ldr	x19, [sp, #16]
  402b00:	ldp	x29, x30, [sp], #32
  402b04:	ret
  402b08:	b	402a98 <ferror@plt+0xa8>
  402b0c:	cbnz	w0, 402b14 <ferror@plt+0x124>
  402b10:	ret
  402b14:	stp	x29, x30, [sp, #-48]!
  402b18:	mov	x29, sp
  402b1c:	stp	x19, x20, [sp, #16]
  402b20:	str	x21, [sp, #32]
  402b24:	mov	w19, w0
  402b28:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402b2c:	ldr	x20, [x0, #2808]
  402b30:	mov	x0, x20
  402b34:	bl	4023d0 <strlen@plt>
  402b38:	mov	x2, x0
  402b3c:	mov	x1, x20
  402b40:	mov	w0, #0x2                   	// #2
  402b44:	bl	4026f0 <write@plt>
  402b48:	mov	x2, #0x2                   	// #2
  402b4c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  402b50:	add	x1, x1, #0x518
  402b54:	mov	w0, w2
  402b58:	bl	4026f0 <write@plt>
  402b5c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  402b60:	add	x20, x0, #0x458
  402b64:	ldr	x21, [x0, #1112]
  402b68:	ldr	x0, [x0, #1112]
  402b6c:	bl	4023d0 <strlen@plt>
  402b70:	mov	x2, x0
  402b74:	mov	x1, x21
  402b78:	mov	w0, #0x2                   	// #2
  402b7c:	bl	4026f0 <write@plt>
  402b80:	add	x20, x20, #0x8
  402b84:	sxtw	x0, w19
  402b88:	ldr	x0, [x20, x0, lsl #3]
  402b8c:	cbz	x0, 402bc8 <ferror@plt+0x1d8>
  402b90:	mov	x2, #0x2                   	// #2
  402b94:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  402b98:	add	x1, x1, #0x518
  402b9c:	mov	w0, w2
  402ba0:	bl	4026f0 <write@plt>
  402ba4:	mov	x0, x20
  402ba8:	sxtw	x19, w19
  402bac:	ldr	x20, [x20, x19, lsl #3]
  402bb0:	ldr	x0, [x0, x19, lsl #3]
  402bb4:	bl	4023d0 <strlen@plt>
  402bb8:	mov	x2, x0
  402bbc:	mov	x1, x20
  402bc0:	mov	w0, #0x2                   	// #2
  402bc4:	bl	4026f0 <write@plt>
  402bc8:	mov	x2, #0x1                   	// #1
  402bcc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  402bd0:	add	x1, x1, #0x810
  402bd4:	mov	w0, #0x2                   	// #2
  402bd8:	bl	4026f0 <write@plt>
  402bdc:	mov	w0, #0x2                   	// #2
  402be0:	bl	4023b0 <_exit@plt>
  402be4:	stp	x29, x30, [sp, #-48]!
  402be8:	mov	x29, sp
  402bec:	str	x19, [sp, #16]
  402bf0:	mov	x19, x0
  402bf4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  402bf8:	add	x1, x1, #0x520
  402bfc:	bl	4027b0 <strcmp@plt>
  402c00:	cbnz	w0, 402c2c <ferror@plt+0x23c>
  402c04:	mov	w2, #0x0                   	// #0
  402c08:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  402c0c:	add	x1, x1, #0x528
  402c10:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  402c14:	ldr	x0, [x0, #1080]
  402c18:	bl	40b3b8 <ferror@plt+0x89c8>
  402c1c:	bl	40d588 <ferror@plt+0xab98>
  402c20:	ldr	x19, [sp, #16]
  402c24:	ldp	x29, x30, [sp], #48
  402c28:	ret
  402c2c:	add	x1, sp, #0x28
  402c30:	mov	x0, x19
  402c34:	bl	40f4f8 <ferror@plt+0xcb08>
  402c38:	cbz	x0, 402c54 <ferror@plt+0x264>
  402c3c:	mov	w2, #0x1                   	// #1
  402c40:	ldr	x1, [sp, #40]
  402c44:	bl	40b3b8 <ferror@plt+0x89c8>
  402c48:	ldr	x0, [sp, #40]
  402c4c:	bl	402810 <free@plt>
  402c50:	b	402c1c <ferror@plt+0x22c>
  402c54:	bl	402970 <__errno_location@plt>
  402c58:	mov	x3, x19
  402c5c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  402c60:	add	x2, x2, #0x530
  402c64:	ldr	w1, [x0]
  402c68:	mov	w0, #0x0                   	// #0
  402c6c:	bl	402420 <error@plt>
  402c70:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402c74:	mov	w1, #0x1                   	// #1
  402c78:	str	w1, [x0, #3408]
  402c7c:	b	402c20 <ferror@plt+0x230>
  402c80:	stp	x29, x30, [sp, #-256]!
  402c84:	mov	x29, sp
  402c88:	str	x3, [sp, #216]
  402c8c:	str	x4, [sp, #224]
  402c90:	str	x5, [sp, #232]
  402c94:	str	x6, [sp, #240]
  402c98:	str	x7, [sp, #248]
  402c9c:	str	q0, [sp, #80]
  402ca0:	str	q1, [sp, #96]
  402ca4:	str	q2, [sp, #112]
  402ca8:	str	q3, [sp, #128]
  402cac:	str	q4, [sp, #144]
  402cb0:	str	q5, [sp, #160]
  402cb4:	str	q6, [sp, #176]
  402cb8:	str	q7, [sp, #192]
  402cbc:	add	x3, sp, #0x100
  402cc0:	str	x3, [sp, #48]
  402cc4:	str	x3, [sp, #56]
  402cc8:	add	x3, sp, #0xd0
  402ccc:	str	x3, [sp, #64]
  402cd0:	mov	w3, #0xffffffd8            	// #-40
  402cd4:	str	w3, [sp, #72]
  402cd8:	mov	w3, #0xffffff80            	// #-128
  402cdc:	str	w3, [sp, #76]
  402ce0:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402ce4:	ldr	w3, [x3, #3416]
  402ce8:	adrp	x4, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402cec:	ldr	x6, [x4, #3440]
  402cf0:	cmp	w3, #0x0
  402cf4:	ldp	x4, x5, [sp, #48]
  402cf8:	stp	x4, x5, [sp, #16]
  402cfc:	ldp	x4, x5, [sp, #64]
  402d00:	stp	x4, x5, [sp, #32]
  402d04:	add	x5, sp, #0x10
  402d08:	mov	x4, x2
  402d0c:	csel	x2, x6, xzr, ne  // ne = any
  402d10:	bl	415770 <ferror@plt+0x12d80>
  402d14:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  402d18:	ldrb	w0, [x0, #1640]
  402d1c:	cbz	w0, 402d38 <ferror@plt+0x348>
  402d20:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402d24:	ldr	w0, [x0, #3408]
  402d28:	cbnz	w0, 402d38 <ferror@plt+0x348>
  402d2c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402d30:	mov	w1, #0x1                   	// #1
  402d34:	str	w1, [x0, #3408]
  402d38:	ldp	x29, x30, [sp], #256
  402d3c:	ret
  402d40:	stp	x29, x30, [sp, #-240]!
  402d44:	mov	x29, sp
  402d48:	str	x5, [sp, #216]
  402d4c:	str	x6, [sp, #224]
  402d50:	str	x7, [sp, #232]
  402d54:	str	q0, [sp, #80]
  402d58:	str	q1, [sp, #96]
  402d5c:	str	q2, [sp, #112]
  402d60:	str	q3, [sp, #128]
  402d64:	str	q4, [sp, #144]
  402d68:	str	q5, [sp, #160]
  402d6c:	str	q6, [sp, #176]
  402d70:	str	q7, [sp, #192]
  402d74:	add	x5, sp, #0xf0
  402d78:	str	x5, [sp, #48]
  402d7c:	str	x5, [sp, #56]
  402d80:	add	x5, sp, #0xd0
  402d84:	str	x5, [sp, #64]
  402d88:	mov	w5, #0xffffffe8            	// #-24
  402d8c:	str	w5, [sp, #72]
  402d90:	mov	w5, #0xffffff80            	// #-128
  402d94:	str	w5, [sp, #76]
  402d98:	cmp	w3, #0x0
  402d9c:	ldp	x6, x7, [sp, #48]
  402da0:	stp	x6, x7, [sp, #16]
  402da4:	ldp	x6, x7, [sp, #64]
  402da8:	stp	x6, x7, [sp, #32]
  402dac:	add	x5, sp, #0x10
  402db0:	csel	x2, x2, xzr, ne  // ne = any
  402db4:	bl	415770 <ferror@plt+0x12d80>
  402db8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  402dbc:	ldrb	w0, [x0, #1640]
  402dc0:	cbz	w0, 402ddc <ferror@plt+0x3ec>
  402dc4:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402dc8:	ldr	w0, [x0, #3408]
  402dcc:	cbnz	w0, 402ddc <ferror@plt+0x3ec>
  402dd0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402dd4:	mov	w1, #0x1                   	// #1
  402dd8:	str	w1, [x0, #3408]
  402ddc:	ldp	x29, x30, [sp], #240
  402de0:	ret
  402de4:	stp	x29, x30, [sp, #-288]!
  402de8:	mov	x29, sp
  402dec:	stp	x19, x20, [sp, #16]
  402df0:	stp	x21, x22, [sp, #32]
  402df4:	stp	x23, x24, [sp, #48]
  402df8:	stp	x25, x26, [sp, #64]
  402dfc:	stp	x27, x28, [sp, #80]
  402e00:	mov	w22, w0
  402e04:	mov	x21, x1
  402e08:	ldr	x0, [x1]
  402e0c:	bl	413478 <ferror@plt+0x10a88>
  402e10:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402e14:	str	wzr, [x0, #3408]
  402e18:	adrp	x0, 411000 <ferror@plt+0xe610>
  402e1c:	add	x0, x0, #0x414
  402e20:	bl	4174e0 <_obstack_memory_used@@Base+0x54c>
  402e24:	bl	40f3b4 <ferror@plt+0xc9c4>
  402e28:	bl	408264 <ferror@plt+0x5874>
  402e2c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  402e30:	add	x1, x1, #0x560
  402e34:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  402e38:	add	x0, x0, #0x570
  402e3c:	bl	416764 <ferror@plt+0x13d74>
  402e40:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  402e44:	add	x19, x1, #0x458
  402e48:	str	x0, [x1, #1112]
  402e4c:	mov	w0, #0xb                   	// #11
  402e50:	bl	402930 <strsignal@plt>
  402e54:	bl	4162bc <ferror@plt+0x138cc>
  402e58:	str	x0, [x19, #96]
  402e5c:	mov	w0, #0x6                   	// #6
  402e60:	bl	402930 <strsignal@plt>
  402e64:	bl	4162bc <ferror@plt+0x138cc>
  402e68:	str	x0, [x19, #56]
  402e6c:	mov	w0, #0x4                   	// #4
  402e70:	bl	402930 <strsignal@plt>
  402e74:	bl	4162bc <ferror@plt+0x138cc>
  402e78:	str	x0, [x19, #40]
  402e7c:	mov	w0, #0x8                   	// #8
  402e80:	bl	402930 <strsignal@plt>
  402e84:	bl	4162bc <ferror@plt+0x138cc>
  402e88:	str	x0, [x19, #72]
  402e8c:	mov	w0, #0x7                   	// #7
  402e90:	bl	402930 <strsignal@plt>
  402e94:	bl	4162bc <ferror@plt+0x138cc>
  402e98:	str	x0, [x19, #64]
  402e9c:	add	x0, sp, #0x90
  402ea0:	bl	4025b0 <sigemptyset@plt>
  402ea4:	mov	w0, #0xc0000000            	// #-1073741824
  402ea8:	str	w0, [sp, #272]
  402eac:	adrp	x19, 402000 <mbrtowc@plt-0x380>
  402eb0:	add	x19, x19, #0xb0c
  402eb4:	str	x19, [sp, #136]
  402eb8:	mov	x2, #0x0                   	// #0
  402ebc:	add	x1, sp, #0x88
  402ec0:	mov	w0, #0xb                   	// #11
  402ec4:	bl	4026c0 <sigaction@plt>
  402ec8:	mov	x2, #0x0                   	// #0
  402ecc:	add	x1, sp, #0x88
  402ed0:	mov	w0, #0x6                   	// #6
  402ed4:	bl	4026c0 <sigaction@plt>
  402ed8:	mov	x2, #0x0                   	// #0
  402edc:	add	x1, sp, #0x88
  402ee0:	mov	w0, #0x4                   	// #4
  402ee4:	bl	4026c0 <sigaction@plt>
  402ee8:	mov	x2, #0x0                   	// #0
  402eec:	add	x1, sp, #0x88
  402ef0:	mov	w0, #0x8                   	// #8
  402ef4:	bl	4026c0 <sigaction@plt>
  402ef8:	mov	x2, #0x0                   	// #0
  402efc:	add	x1, sp, #0x88
  402f00:	mov	w0, #0x7                   	// #7
  402f04:	bl	4026c0 <sigaction@plt>
  402f08:	mov	x0, x19
  402f0c:	bl	41050c <ferror@plt+0xdb1c>
  402f10:	cbnz	w0, 402f1c <ferror@plt+0x52c>
  402f14:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  402f18:	str	wzr, [x0, #848]
  402f1c:	adrp	x27, 417000 <_obstack_memory_used@@Base+0x6c>
  402f20:	add	x27, x27, #0x6c0
  402f24:	str	xzr, [sp, #120]
  402f28:	str	xzr, [sp, #112]
  402f2c:	str	xzr, [sp, #96]
  402f30:	mov	w26, #0x0                   	// #0
  402f34:	str	xzr, [sp, #104]
  402f38:	mov	x20, #0x0                   	// #0
  402f3c:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x106c>
  402f40:	add	x25, x25, #0x488
  402f44:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x106c>
  402f48:	add	x24, x24, #0x138
  402f4c:	mov	x28, #0x18                  	// #24
  402f50:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x106c>
  402f54:	add	x23, x23, #0x300
  402f58:	mov	x4, #0x0                   	// #0
  402f5c:	mov	x3, x25
  402f60:	mov	x2, x24
  402f64:	mov	x1, x21
  402f68:	mov	w0, w22
  402f6c:	bl	402790 <getopt_long@plt>
  402f70:	mov	w19, w0
  402f74:	cmn	w0, #0x1
  402f78:	b.eq	40334c <ferror@plt+0x95c>  // b.none
  402f7c:	cmp	w19, #0x1
  402f80:	b.eq	403014 <ferror@plt+0x624>  // b.none
  402f84:	sub	w0, w19, #0x42
  402f88:	cmp	w0, #0xc2
  402f8c:	b.hi	402fa4 <ferror@plt+0x5b4>  // b.pmore
  402f90:	b.hi	402fa4 <ferror@plt+0x5b4>  // b.pmore
  402f94:	ldrh	w0, [x23, w0, uxtw #1]
  402f98:	adr	x1, 402fa4 <ferror@plt+0x5b4>
  402f9c:	add	x0, x1, w0, sxth #2
  402fa0:	br	x0
  402fa4:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  402fa8:	ldr	x2, [x0, #2808]
  402fac:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  402fb0:	add	x1, x1, #0x5a8
  402fb4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  402fb8:	ldr	x0, [x0, #1048]
  402fbc:	bl	4164c0 <ferror@plt+0x13ad0>
  402fc0:	mov	w0, #0x1                   	// #1
  402fc4:	bl	402400 <exit@plt>
  402fc8:	mov	w3, w19
  402fcc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  402fd0:	add	x2, x2, #0x5d0
  402fd4:	mov	w1, #0x0                   	// #0
  402fd8:	mov	w0, #0x0                   	// #0
  402fdc:	bl	402420 <error@plt>
  402fe0:	b	402f58 <ferror@plt+0x568>
  402fe4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  402fe8:	add	x0, x0, #0x550
  402fec:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  402ff0:	add	x3, x3, #0x548
  402ff4:	cmp	w19, #0x4e
  402ff8:	csel	x3, x3, x0, eq  // eq = none
  402ffc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  403000:	add	x2, x2, #0x608
  403004:	mov	w1, #0x0                   	// #0
  403008:	mov	w0, #0x0                   	// #0
  40300c:	bl	402420 <error@plt>
  403010:	b	402f58 <ferror@plt+0x568>
  403014:	mov	x0, x28
  403018:	bl	41607c <ferror@plt+0x1368c>
  40301c:	str	w19, [x0, #8]
  403020:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  403024:	ldr	x1, [x1, #1056]
  403028:	str	x1, [x0, #16]
  40302c:	str	xzr, [x0]
  403030:	cbz	x20, 403340 <ferror@plt+0x950>
  403034:	ldr	x1, [sp, #104]
  403038:	str	x0, [x1]
  40303c:	str	x0, [sp, #104]
  403040:	b	402f58 <ferror@plt+0x568>
  403044:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403048:	ldrb	w0, [x0, #1640]
  40304c:	cbnz	w0, 403060 <ferror@plt+0x670>
  403050:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403054:	mov	w1, #0x1                   	// #1
  403058:	strb	w1, [x0, #1640]
  40305c:	b	402f58 <ferror@plt+0x568>
  403060:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403064:	mov	w1, #0x1                   	// #1
  403068:	str	w1, [x0, #1644]
  40306c:	b	402f58 <ferror@plt+0x568>
  403070:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403074:	ldr	x0, [x0, #1056]
  403078:	str	x0, [sp, #120]
  40307c:	b	402f58 <ferror@plt+0x568>
  403080:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403084:	mov	w1, #0x1                   	// #1
  403088:	str	w1, [x0, #1648]
  40308c:	b	402f58 <ferror@plt+0x568>
  403090:	mov	w2, #0xa                   	// #10
  403094:	mov	x1, #0x0                   	// #0
  403098:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40309c:	ldr	x0, [x0, #1056]
  4030a0:	bl	4027e0 <strtol@plt>
  4030a4:	cbz	x0, 4030b4 <ferror@plt+0x6c4>
  4030a8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  4030ac:	str	x0, [x1, #856]
  4030b0:	b	402f58 <ferror@plt+0x568>
  4030b4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4030b8:	mov	x1, #0x1fd                 	// #509
  4030bc:	str	x1, [x0, #856]
  4030c0:	b	402f58 <ferror@plt+0x568>
  4030c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4030c8:	ldr	x0, [x0, #1056]
  4030cc:	bl	40f3cc <ferror@plt+0xc9dc>
  4030d0:	b	402f58 <ferror@plt+0x568>
  4030d4:	mov	w2, #0xa                   	// #10
  4030d8:	mov	x1, #0x0                   	// #0
  4030dc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4030e0:	ldr	x0, [x0, #1056]
  4030e4:	bl	4027e0 <strtol@plt>
  4030e8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  4030ec:	str	w0, [x1, #848]
  4030f0:	b	402f58 <ferror@plt+0x568>
  4030f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4030f8:	mov	w1, #0x1                   	// #1
  4030fc:	str	w1, [x0, #1652]
  403100:	b	402f58 <ferror@plt+0x568>
  403104:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403108:	mov	w1, #0x1                   	// #1
  40310c:	str	w1, [x0, #1656]
  403110:	b	402f58 <ferror@plt+0x568>
  403114:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403118:	ldr	x0, [x0, #1056]
  40311c:	str	x0, [sp, #112]
  403120:	b	402f58 <ferror@plt+0x568>
  403124:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403128:	ldr	x0, [x0, #1056]
  40312c:	bl	4082a8 <ferror@plt+0x58b8>
  403130:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  403134:	str	w0, [x1, #1660]
  403138:	tbz	w0, #31, 402f58 <ferror@plt+0x568>
  40313c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403140:	ldr	x3, [x0, #1056]
  403144:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  403148:	add	x2, x2, #0x628
  40314c:	mov	w1, #0x0                   	// #0
  403150:	mov	w0, #0x0                   	// #0
  403154:	bl	402420 <error@plt>
  403158:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40315c:	str	wzr, [x0, #1660]
  403160:	b	402f58 <ferror@plt+0x568>
  403164:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  403168:	add	x2, x2, #0x640
  40316c:	mov	w1, #0x0                   	// #0
  403170:	mov	w0, #0x0                   	// #0
  403174:	bl	402420 <error@plt>
  403178:	mov	w26, #0x1                   	// #1
  40317c:	b	402f58 <ferror@plt+0x568>
  403180:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403184:	str	wzr, [x0, #1648]
  403188:	b	402f58 <ferror@plt+0x568>
  40318c:	mov	w2, #0xa                   	// #10
  403190:	mov	x1, #0x0                   	// #0
  403194:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403198:	ldr	x0, [x0, #1056]
  40319c:	bl	4027e0 <strtol@plt>
  4031a0:	cmp	w0, #0x0
  4031a4:	b.le	4031b4 <ferror@plt+0x7c4>
  4031a8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  4031ac:	str	w0, [x1, #1664]
  4031b0:	b	402f58 <ferror@plt+0x568>
  4031b4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4031b8:	str	wzr, [x0, #1664]
  4031bc:	b	402f58 <ferror@plt+0x568>
  4031c0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4031c4:	ldr	x0, [x0, #1056]
  4031c8:	str	x0, [sp, #96]
  4031cc:	b	402f58 <ferror@plt+0x568>
  4031d0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4031d4:	ldr	x27, [x0, #1056]
  4031d8:	b	402f58 <ferror@plt+0x568>
  4031dc:	mov	x5, #0x0                   	// #0
  4031e0:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x6c>
  4031e4:	add	x4, x4, #0x678
  4031e8:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  4031ec:	add	x3, x3, #0x688
  4031f0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  4031f4:	add	x2, x2, #0x690
  4031f8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  4031fc:	add	x1, x1, #0x698
  403200:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403204:	ldr	x0, [x0, #1072]
  403208:	bl	415c20 <ferror@plt+0x13230>
  40320c:	mov	w0, #0x0                   	// #0
  403210:	bl	402400 <exit@plt>
  403214:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  403218:	ldr	x1, [x0, #2808]
  40321c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  403220:	add	x0, x0, #0x6a0
  403224:	bl	4163b8 <ferror@plt+0x139c8>
  403228:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40322c:	ldr	x3, [x19, #1072]
  403230:	mov	x2, #0x50                  	// #80
  403234:	mov	x1, #0x1                   	// #1
  403238:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  40323c:	add	x0, x0, #0x6c8
  403240:	bl	402880 <fwrite@plt>
  403244:	ldr	x3, [x19, #1072]
  403248:	mov	x2, #0xf1                  	// #241
  40324c:	mov	x1, #0x1                   	// #1
  403250:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  403254:	add	x0, x0, #0x720
  403258:	bl	402880 <fwrite@plt>
  40325c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  403260:	add	x1, x1, #0x818
  403264:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  403268:	add	x0, x0, #0x838
  40326c:	bl	4163b8 <ferror@plt+0x139c8>
  403270:	ldr	x3, [x19, #1072]
  403274:	mov	x2, #0x10b                 	// #267
  403278:	mov	x1, #0x1                   	// #1
  40327c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  403280:	add	x0, x0, #0xa20
  403284:	bl	402880 <fwrite@plt>
  403288:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x6c>
  40328c:	add	x20, x20, #0x6c0
  403290:	mov	x0, x20
  403294:	bl	402760 <puts@plt>
  403298:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40329c:	ldr	w1, [x0, #848]
  4032a0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  4032a4:	add	x0, x0, #0xb30
  4032a8:	bl	4163b8 <ferror@plt+0x139c8>
  4032ac:	mov	x0, x20
  4032b0:	bl	402760 <puts@plt>
  4032b4:	ldr	x3, [x19, #1072]
  4032b8:	mov	x2, #0xa1                  	// #161
  4032bc:	mov	x1, #0x1                   	// #1
  4032c0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  4032c4:	add	x0, x0, #0xc58
  4032c8:	bl	402880 <fwrite@plt>
  4032cc:	ldr	x3, [x19, #1072]
  4032d0:	mov	x2, #0x15e                 	// #350
  4032d4:	mov	x1, #0x1                   	// #1
  4032d8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  4032dc:	add	x0, x0, #0xd00
  4032e0:	bl	402880 <fwrite@plt>
  4032e4:	ldr	x3, [x19, #1072]
  4032e8:	mov	x2, #0x1ce                 	// #462
  4032ec:	mov	x1, #0x1                   	// #1
  4032f0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  4032f4:	add	x0, x0, #0xe60
  4032f8:	bl	402880 <fwrite@plt>
  4032fc:	ldr	x3, [x19, #1072]
  403300:	mov	x2, #0x7e                  	// #126
  403304:	mov	x1, #0x1                   	// #1
  403308:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  40330c:	add	x0, x0, #0x30
  403310:	bl	402880 <fwrite@plt>
  403314:	ldr	x3, [x19, #1072]
  403318:	mov	x2, #0x85                  	// #133
  40331c:	mov	x1, #0x1                   	// #1
  403320:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  403324:	add	x0, x0, #0xb0
  403328:	bl	402880 <fwrite@plt>
  40332c:	bl	415c9c <ferror@plt+0x132ac>
  403330:	mov	w0, #0x0                   	// #0
  403334:	bl	402400 <exit@plt>
  403338:	mov	w26, #0x1                   	// #1
  40333c:	b	402f58 <ferror@plt+0x568>
  403340:	str	x0, [sp, #104]
  403344:	mov	x20, x0
  403348:	b	402f58 <ferror@plt+0x568>
  40334c:	ldr	x0, [sp, #96]
  403350:	cbz	x0, 403360 <ferror@plt+0x970>
  403354:	bl	408500 <ferror@plt+0x5b10>
  403358:	and	w0, w0, #0xff
  40335c:	cbz	w0, 4033bc <ferror@plt+0x9cc>
  403360:	bl	40be28 <ferror@plt+0x9438>
  403364:	bl	40df0c <ferror@plt+0xb51c>
  403368:	bl	40f654 <ferror@plt+0xcc64>
  40336c:	mov	x0, x27
  403370:	bl	40688c <ferror@plt+0x3e9c>
  403374:	bl	40f470 <ferror@plt+0xca80>
  403378:	ldr	x0, [sp, #112]
  40337c:	cbz	x0, 4033e4 <ferror@plt+0x9f4>
  403380:	bl	40a7fc <ferror@plt+0x7e0c>
  403384:	cbnz	w26, 4033ec <ferror@plt+0x9fc>
  403388:	cbz	x20, 403518 <ferror@plt+0xb28>
  40338c:	ldr	x0, [sp, #96]
  403390:	cmp	x0, #0x0
  403394:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x106c>
  403398:	add	x24, x24, #0x188
  40339c:	csel	x24, x0, x24, ne  // ne = any
  4033a0:	mov	w25, #0x0                   	// #0
  4033a4:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1906c>
  4033a8:	add	x23, x23, #0x458
  4033ac:	mov	w19, #0x1                   	// #1
  4033b0:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x106c>
  4033b4:	add	x26, x26, #0x168
  4033b8:	b	4034ac <ferror@plt+0xabc>
  4033bc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4033c0:	ldr	w19, [x0, #1644]
  4033c4:	bl	402970 <__errno_location@plt>
  4033c8:	ldr	x3, [sp, #96]
  4033cc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4033d0:	add	x2, x2, #0x168
  4033d4:	ldr	w1, [x0]
  4033d8:	mov	w0, w19
  4033dc:	bl	402c80 <ferror@plt+0x290>
  4033e0:	b	403360 <ferror@plt+0x970>
  4033e4:	bl	406c74 <ferror@plt+0x4284>
  4033e8:	b	403384 <ferror@plt+0x994>
  4033ec:	mov	x1, #0x1                   	// #1
  4033f0:	mov	w0, #0x2                   	// #2
  4033f4:	bl	402520 <signal@plt>
  4033f8:	mov	x1, #0x0                   	// #0
  4033fc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403400:	ldr	x0, [x0, #1072]
  403404:	bl	402460 <setbuf@plt>
  403408:	b	403388 <ferror@plt+0x998>
  40340c:	cmp	w0, #0x1
  403410:	b.ne	403500 <ferror@plt+0xb10>  // b.any
  403414:	ldr	x0, [x20, #16]
  403418:	bl	402be4 <ferror@plt+0x1f4>
  40341c:	mov	w25, w19
  403420:	b	403498 <ferror@plt+0xaa8>
  403424:	cmp	w0, #0x74
  403428:	b.eq	4034dc <ferror@plt+0xaec>  // b.none
  40342c:	cmp	w0, #0x100
  403430:	b.ne	403500 <ferror@plt+0xb10>  // b.any
  403434:	ldr	x0, [x20, #16]
  403438:	bl	408500 <ferror@plt+0x5b10>
  40343c:	and	w0, w0, #0xff
  403440:	cbnz	w0, 403498 <ferror@plt+0xaa8>
  403444:	ldr	w27, [x23, #532]
  403448:	bl	402970 <__errno_location@plt>
  40344c:	mov	x3, x24
  403450:	mov	x2, x26
  403454:	ldr	w1, [x0]
  403458:	mov	w0, w27
  40345c:	bl	402c80 <ferror@plt+0x290>
  403460:	b	403498 <ferror@plt+0xaa8>
  403464:	ldr	x0, [x20, #16]
  403468:	bl	4162bc <ferror@plt+0x138cc>
  40346c:	mov	x27, x0
  403470:	mov	w1, #0x3d                  	// #61
  403474:	bl	402860 <strchr@plt>
  403478:	mov	x1, x0
  40347c:	cbz	x0, 403484 <ferror@plt+0xa94>
  403480:	strb	wzr, [x1], #1
  403484:	mov	w2, w19
  403488:	mov	x0, x27
  40348c:	bl	406958 <ferror@plt+0x3f68>
  403490:	mov	x0, x27
  403494:	bl	402810 <free@plt>
  403498:	ldr	x27, [x20]
  40349c:	mov	x0, x20
  4034a0:	bl	402810 <free@plt>
  4034a4:	cbz	x27, 40351c <ferror@plt+0xb2c>
  4034a8:	mov	x20, x27
  4034ac:	ldr	w0, [x20, #8]
  4034b0:	cmp	w0, #0x73
  4034b4:	b.eq	4034f8 <ferror@plt+0xb08>  // b.none
  4034b8:	b.gt	403424 <ferror@plt+0xa34>
  4034bc:	cmp	w0, #0x44
  4034c0:	b.eq	403464 <ferror@plt+0xa74>  // b.none
  4034c4:	cmp	w0, #0x55
  4034c8:	b.ne	40340c <ferror@plt+0xa1c>  // b.any
  4034cc:	mov	w1, #0x2                   	// #2
  4034d0:	ldr	x0, [x20, #16]
  4034d4:	bl	40f714 <ferror@plt+0xcd24>
  4034d8:	b	403498 <ferror@plt+0xaa8>
  4034dc:	mov	w1, w19
  4034e0:	ldr	x0, [x20, #16]
  4034e4:	bl	40f714 <ferror@plt+0xcd24>
  4034e8:	ldrb	w1, [x0, #8]
  4034ec:	orr	w1, w1, #0x1
  4034f0:	strb	w1, [x0, #8]
  4034f4:	b	403498 <ferror@plt+0xaa8>
  4034f8:	str	w19, [x23, #556]
  4034fc:	b	403498 <ferror@plt+0xaa8>
  403500:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  403504:	add	x2, x2, #0x190
  403508:	mov	w1, #0x0                   	// #0
  40350c:	mov	w0, #0x0                   	// #0
  403510:	bl	402c80 <ferror@plt+0x290>
  403514:	bl	402720 <abort@plt>
  403518:	mov	w25, #0x0                   	// #0
  40351c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403520:	ldr	w0, [x0, #1064]
  403524:	cmp	w25, #0x0
  403528:	ccmp	w0, w22, #0x0, eq  // eq = none
  40352c:	b.eq	403560 <ferror@plt+0xb70>  // b.none
  403530:	cmp	w0, w22
  403534:	b.ge	403574 <ferror@plt+0xb84>  // b.tcont
  403538:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40353c:	add	x19, x19, #0x428
  403540:	ldr	x0, [x21, w0, sxtw #3]
  403544:	bl	402be4 <ferror@plt+0x1f4>
  403548:	ldr	w0, [x19]
  40354c:	add	w0, w0, #0x1
  403550:	str	w0, [x19]
  403554:	cmp	w0, w22
  403558:	b.lt	403540 <ferror@plt+0xb50>  // b.tstop
  40355c:	b	403574 <ferror@plt+0xb84>
  403560:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  403564:	add	x0, x0, #0x520
  403568:	bl	402be4 <ferror@plt+0x1f4>
  40356c:	b	403574 <ferror@plt+0xb84>
  403570:	bl	40d588 <ferror@plt+0xab98>
  403574:	bl	40bc80 <ferror@plt+0x9290>
  403578:	and	w0, w0, #0xff
  40357c:	cbnz	w0, 403570 <ferror@plt+0xb80>
  403580:	mov	x0, #0x0                   	// #0
  403584:	bl	408500 <ferror@plt+0x5b10>
  403588:	ldr	x0, [sp, #120]
  40358c:	cbz	x0, 4035a8 <ferror@plt+0xbb8>
  403590:	bl	40a468 <ferror@plt+0x7a78>
  403594:	bl	40df84 <ferror@plt+0xb594>
  403598:	bl	406934 <ferror@plt+0x3f44>
  40359c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4035a0:	ldr	w0, [x0, #3408]
  4035a4:	bl	402400 <exit@plt>
  4035a8:	mov	w0, #0x0                   	// #0
  4035ac:	bl	40e998 <ferror@plt+0xbfa8>
  4035b0:	bl	40f0f0 <ferror@plt+0xc700>
  4035b4:	b	403594 <ferror@plt+0xba4>
  4035b8:	stp	x29, x30, [sp, #-16]!
  4035bc:	mov	x29, sp
  4035c0:	mov	x4, x0
  4035c4:	cmp	w1, #0x0
  4035c8:	csel	w0, w1, wzr, ge  // ge = tcont
  4035cc:	cmp	w0, w2
  4035d0:	b.ge	40360c <ferror@plt+0xc1c>  // b.tcont
  4035d4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4035d8:	ldr	w1, [x0, #1656]
  4035dc:	mov	w0, #0x1                   	// #1
  4035e0:	cbz	w1, 4035ec <ferror@plt+0xbfc>
  4035e4:	ldp	x29, x30, [sp], #16
  4035e8:	ret
  4035ec:	ldr	x3, [x4, #8]
  4035f0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4035f4:	add	x2, x2, #0x7a8
  4035f8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4035fc:	ldr	w0, [x0, #1644]
  403600:	bl	402c80 <ferror@plt+0x290>
  403604:	mov	w0, #0x1                   	// #1
  403608:	b	4035e4 <ferror@plt+0xbf4>
  40360c:	cmp	w3, #0x0
  403610:	cset	w2, gt
  403614:	cmp	w1, w3
  403618:	cset	w0, gt
  40361c:	ands	w0, w2, w0
  403620:	b.eq	4035e4 <ferror@plt+0xbf4>  // b.none
  403624:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403628:	ldr	w1, [x0, #1656]
  40362c:	mov	w0, #0x0                   	// #0
  403630:	cbnz	w1, 4035e4 <ferror@plt+0xbf4>
  403634:	ldr	x3, [x4, #8]
  403638:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  40363c:	add	x2, x2, #0x7d8
  403640:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403644:	ldr	w0, [x0, #1644]
  403648:	bl	402c80 <ferror@plt+0x290>
  40364c:	mov	w0, #0x0                   	// #0
  403650:	b	4035e4 <ferror@plt+0xbf4>
  403654:	stp	x29, x30, [sp, #-16]!
  403658:	mov	x29, sp
  40365c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403660:	ldr	w0, [x0, #1644]
  403664:	cmp	w1, #0x0
  403668:	b.le	40368c <ferror@plt+0xc9c>
  40366c:	ldr	x1, [x2]
  403670:	ldr	x3, [x1, #8]
  403674:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  403678:	add	x2, x2, #0x810
  40367c:	mov	w1, #0x0                   	// #0
  403680:	bl	402c80 <ferror@plt+0x290>
  403684:	ldp	x29, x30, [sp], #16
  403688:	ret
  40368c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  403690:	add	x3, x3, #0x6c0
  403694:	b	403674 <ferror@plt+0xc84>
  403698:	stp	x29, x30, [sp, #-80]!
  40369c:	mov	x29, sp
  4036a0:	cmp	w1, #0x1
  4036a4:	b.eq	4036e4 <ferror@plt+0xcf4>  // b.none
  4036a8:	stp	x21, x22, [sp, #32]
  4036ac:	mov	x21, x2
  4036b0:	b.le	4036dc <ferror@plt+0xcec>
  4036b4:	stp	x19, x20, [sp, #16]
  4036b8:	stp	x23, x24, [sp, #48]
  4036bc:	sub	w1, w1, #0x2
  4036c0:	add	x22, x1, #0x2
  4036c4:	mov	x19, #0x1                   	// #1
  4036c8:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1906c>
  4036cc:	add	x23, x23, #0x670
  4036d0:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1906c>
  4036d4:	add	x24, x24, #0x66c
  4036d8:	b	40371c <ferror@plt+0xd2c>
  4036dc:	ldp	x21, x22, [sp, #32]
  4036e0:	b	4037f0 <ferror@plt+0xe00>
  4036e4:	bl	40f0f0 <ferror@plt+0xc700>
  4036e8:	b	4037f0 <ferror@plt+0xe00>
  4036ec:	ldr	w0, [x23]
  4036f0:	cbz	w0, 403768 <ferror@plt+0xd78>
  4036f4:	ldr	x0, [x21]
  4036f8:	ldr	x3, [x0, #8]
  4036fc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  403700:	add	x2, x2, #0x848
  403704:	mov	w1, #0x0                   	// #0
  403708:	ldr	w0, [x24]
  40370c:	bl	402c80 <ferror@plt+0x290>
  403710:	add	x19, x19, #0x1
  403714:	cmp	x19, x22
  403718:	b.eq	4037e4 <ferror@plt+0xdf4>  // b.none
  40371c:	ldr	x0, [x21, x19, lsl #3]
  403720:	mov	w2, #0xa                   	// #10
  403724:	add	x1, sp, #0x48
  403728:	ldr	x0, [x0, #8]
  40372c:	bl	4027e0 <strtol@plt>
  403730:	mov	x20, x0
  403734:	ldr	x1, [sp, #72]
  403738:	ldrb	w1, [x1]
  40373c:	cbnz	w1, 4036ec <ferror@plt+0xcfc>
  403740:	bl	4027c0 <__ctype_b_loc@plt>
  403744:	ldr	x1, [x21, x19, lsl #3]
  403748:	ldr	x1, [x1, #8]
  40374c:	ldrb	w1, [x1]
  403750:	ldr	x0, [x0]
  403754:	ldrh	w0, [x0, x1, lsl #1]
  403758:	tbnz	w0, #13, 4036ec <ferror@plt+0xcfc>
  40375c:	mov	w0, w20
  403760:	bl	40f07c <ferror@plt+0xc68c>
  403764:	b	403710 <ferror@plt+0xd20>
  403768:	ldr	x0, [x21, x19, lsl #3]
  40376c:	mov	x1, #0x0                   	// #0
  403770:	ldr	x0, [x0, #8]
  403774:	bl	40f4f8 <ferror@plt+0xcb08>
  403778:	mov	x20, x0
  40377c:	cbz	x0, 4037bc <ferror@plt+0xdcc>
  403780:	bl	40ecac <ferror@plt+0xc2bc>
  403784:	mov	x0, x20
  403788:	bl	4167ec <ferror@plt+0x13dfc>
  40378c:	cmn	w0, #0x1
  403790:	b.ne	403710 <ferror@plt+0xd20>  // b.any
  403794:	ldr	w20, [x24]
  403798:	bl	402970 <__errno_location@plt>
  40379c:	ldr	x1, [x21, x19, lsl #3]
  4037a0:	ldr	x3, [x1, #8]
  4037a4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4037a8:	add	x2, x2, #0x870
  4037ac:	ldr	w1, [x0]
  4037b0:	mov	w0, w20
  4037b4:	bl	402c80 <ferror@plt+0x290>
  4037b8:	b	403710 <ferror@plt+0xd20>
  4037bc:	ldr	w20, [x24]
  4037c0:	bl	402970 <__errno_location@plt>
  4037c4:	ldr	x1, [x21, x19, lsl #3]
  4037c8:	ldr	x3, [x1, #8]
  4037cc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4037d0:	add	x2, x2, #0x888
  4037d4:	ldr	w1, [x0]
  4037d8:	mov	w0, w20
  4037dc:	bl	402c80 <ferror@plt+0x290>
  4037e0:	b	403710 <ferror@plt+0xd20>
  4037e4:	ldp	x19, x20, [sp, #16]
  4037e8:	ldp	x21, x22, [sp, #32]
  4037ec:	ldp	x23, x24, [sp, #48]
  4037f0:	ldp	x29, x30, [sp], #80
  4037f4:	ret
  4037f8:	stp	x29, x30, [sp, #-64]!
  4037fc:	mov	x29, sp
  403800:	stp	x19, x20, [sp, #16]
  403804:	stp	x21, x22, [sp, #32]
  403808:	mov	x22, x0
  40380c:	mov	x19, x1
  403810:	mov	x20, x2
  403814:	ldrb	w1, [x1]
  403818:	cbnz	w1, 40384c <ferror@plt+0xe5c>
  40381c:	str	wzr, [x2]
  403820:	ldr	x3, [x0, #8]
  403824:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  403828:	add	x2, x2, #0x8a0
  40382c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  403830:	ldr	w0, [x0, #1644]
  403834:	bl	402c80 <ferror@plt+0x290>
  403838:	mov	w0, #0x1                   	// #1
  40383c:	ldp	x19, x20, [sp, #16]
  403840:	ldp	x21, x22, [sp, #32]
  403844:	ldp	x29, x30, [sp], #64
  403848:	ret
  40384c:	bl	402970 <__errno_location@plt>
  403850:	mov	x21, x0
  403854:	str	wzr, [x0]
  403858:	mov	w2, #0xa                   	// #10
  40385c:	add	x1, sp, #0x38
  403860:	mov	x0, x19
  403864:	bl	4027e0 <strtol@plt>
  403868:	str	w0, [x20]
  40386c:	ldr	x0, [sp, #56]
  403870:	ldrb	w0, [x0]
  403874:	cbnz	w0, 4038c0 <ferror@plt+0xed0>
  403878:	bl	4027c0 <__ctype_b_loc@plt>
  40387c:	ldrb	w1, [x19]
  403880:	ldr	x0, [x0]
  403884:	ldrh	w0, [x0, x1, lsl #1]
  403888:	tbnz	w0, #13, 4038e4 <ferror@plt+0xef4>
  40388c:	ldr	w1, [x21]
  403890:	mov	w0, #0x1                   	// #1
  403894:	cmp	w1, #0x22
  403898:	b.ne	40383c <ferror@plt+0xe4c>  // b.any
  40389c:	ldr	x3, [x22, #8]
  4038a0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4038a4:	add	x2, x2, #0x900
  4038a8:	mov	w1, #0x0                   	// #0
  4038ac:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4038b0:	ldr	w0, [x0, #1644]
  4038b4:	bl	402c80 <ferror@plt+0x290>
  4038b8:	mov	w0, #0x1                   	// #1
  4038bc:	b	40383c <ferror@plt+0xe4c>
  4038c0:	ldr	x3, [x22, #8]
  4038c4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4038c8:	add	x2, x2, #0x848
  4038cc:	mov	w1, #0x0                   	// #0
  4038d0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4038d4:	ldr	w0, [x0, #1644]
  4038d8:	bl	402c80 <ferror@plt+0x290>
  4038dc:	mov	w0, #0x0                   	// #0
  4038e0:	b	40383c <ferror@plt+0xe4c>
  4038e4:	ldr	x3, [x22, #8]
  4038e8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4038ec:	add	x2, x2, #0x8d0
  4038f0:	mov	w1, #0x0                   	// #0
  4038f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4038f8:	ldr	w0, [x0, #1644]
  4038fc:	bl	402c80 <ferror@plt+0x290>
  403900:	mov	w0, #0x1                   	// #1
  403904:	b	40383c <ferror@plt+0xe4c>
  403908:	stp	x29, x30, [sp, #-48]!
  40390c:	mov	x29, sp
  403910:	stp	x19, x20, [sp, #16]
  403914:	str	x21, [sp, #32]
  403918:	mov	w21, w1
  40391c:	mov	x20, x2
  403920:	mov	w3, #0xffffffff            	// #-1
  403924:	mov	w2, #0x2                   	// #2
  403928:	ldr	x0, [x20]
  40392c:	bl	4035b8 <ferror@plt+0xbc8>
  403930:	and	w0, w0, #0xff
  403934:	cbnz	w0, 40396c <ferror@plt+0xf7c>
  403938:	cmp	w21, #0x1
  40393c:	b.le	40396c <ferror@plt+0xf7c>
  403940:	add	x19, x20, #0x8
  403944:	sub	w21, w21, #0x2
  403948:	add	x20, x20, #0x10
  40394c:	add	x20, x20, x21, lsl #3
  403950:	mov	w21, #0x2                   	// #2
  403954:	ldr	x0, [x19], #8
  403958:	mov	w1, w21
  40395c:	ldr	x0, [x0, #8]
  403960:	bl	40f714 <ferror@plt+0xcd24>
  403964:	cmp	x19, x20
  403968:	b.ne	403954 <ferror@plt+0xf64>  // b.any
  40396c:	ldp	x19, x20, [sp, #16]
  403970:	ldr	x21, [sp, #32]
  403974:	ldp	x29, x30, [sp], #48
  403978:	ret
  40397c:	cmp	x1, #0x0
  403980:	cset	w3, ne  // ne = any
  403984:	ldrb	w2, [x0, #8]
  403988:	bfxil	w2, w3, #0, #1
  40398c:	strb	w2, [x0, #8]
  403990:	ldr	w2, [x0, #24]
  403994:	cmp	w2, #0x0
  403998:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  40399c:	b.eq	4039a4 <ferror@plt+0xfb4>  // b.none
  4039a0:	ret
  4039a4:	stp	x29, x30, [sp, #-16]!
  4039a8:	mov	x29, sp
  4039ac:	mov	w1, #0x4                   	// #4
  4039b0:	ldr	x0, [x0, #16]
  4039b4:	bl	40f714 <ferror@plt+0xcd24>
  4039b8:	ldp	x29, x30, [sp], #16
  4039bc:	ret
  4039c0:	stp	x29, x30, [sp, #-48]!
  4039c4:	mov	x29, sp
  4039c8:	stp	x19, x20, [sp, #16]
  4039cc:	str	x21, [sp, #32]
  4039d0:	mov	w21, w1
  4039d4:	mov	x20, x2
  4039d8:	mov	w3, #0xffffffff            	// #-1
  4039dc:	mov	w2, #0x2                   	// #2
  4039e0:	ldr	x0, [x20]
  4039e4:	bl	4035b8 <ferror@plt+0xbc8>
  4039e8:	and	w0, w0, #0xff
  4039ec:	cbnz	w0, 403a24 <ferror@plt+0x1034>
  4039f0:	cmp	w21, #0x1
  4039f4:	b.le	403a24 <ferror@plt+0x1034>
  4039f8:	add	x19, x20, #0x8
  4039fc:	sub	w21, w21, #0x2
  403a00:	add	x20, x20, #0x10
  403a04:	add	x20, x20, x21, lsl #3
  403a08:	mov	w21, #0x4                   	// #4
  403a0c:	ldr	x0, [x19], #8
  403a10:	mov	w1, w21
  403a14:	ldr	x0, [x0, #8]
  403a18:	bl	40f714 <ferror@plt+0xcd24>
  403a1c:	cmp	x19, x20
  403a20:	b.ne	403a0c <ferror@plt+0x101c>  // b.any
  403a24:	ldp	x19, x20, [sp, #16]
  403a28:	ldr	x21, [sp, #32]
  403a2c:	ldp	x29, x30, [sp], #48
  403a30:	ret
  403a34:	stp	x29, x30, [sp, #-64]!
  403a38:	mov	x29, sp
  403a3c:	stp	x19, x20, [sp, #16]
  403a40:	mov	x20, x0
  403a44:	mov	x19, x1
  403a48:	ldrb	w0, [x0]
  403a4c:	cbz	w0, 403bc0 <ferror@plt+0x11d0>
  403a50:	stp	x21, x22, [sp, #32]
  403a54:	str	x23, [sp, #48]
  403a58:	mov	w1, #0x0                   	// #0
  403a5c:	mov	x22, #0x1                   	// #1
  403a60:	b	403b8c <ferror@plt+0x119c>
  403a64:	add	x21, x20, #0x1
  403a68:	ldrb	w23, [x20, #1]
  403a6c:	cbz	w23, 403a8c <ferror@plt+0x109c>
  403a70:	cmp	w23, w1
  403a74:	b.cs	403acc <ferror@plt+0x10dc>  // b.hs, b.nlast
  403a78:	sub	w1, w1, #0x1
  403a7c:	and	w20, w1, #0xff
  403a80:	cmp	w23, w1, uxtb
  403a84:	b.ls	403b44 <ferror@plt+0x1154>  // b.plast
  403a88:	b	403b7c <ferror@plt+0x118c>
  403a8c:	ldr	x1, [x19, #32]
  403a90:	ldr	x0, [x19, #24]
  403a94:	cmp	x1, x0
  403a98:	b.eq	403abc <ferror@plt+0x10cc>  // b.none
  403a9c:	ldr	x0, [x19, #24]
  403aa0:	add	x1, x0, #0x1
  403aa4:	str	x1, [x19, #24]
  403aa8:	mov	w1, #0x2d                  	// #45
  403aac:	strb	w1, [x0]
  403ab0:	ldp	x21, x22, [sp, #32]
  403ab4:	ldr	x23, [sp, #48]
  403ab8:	b	403bc0 <ferror@plt+0x11d0>
  403abc:	mov	x1, #0x1                   	// #1
  403ac0:	mov	x0, x19
  403ac4:	bl	416dc4 <_obstack_newchunk@@Base>
  403ac8:	b	403a9c <ferror@plt+0x10ac>
  403acc:	add	w20, w1, #0x1
  403ad0:	and	w20, w20, #0xff
  403ad4:	b.hi	403b00 <ferror@plt+0x1110>  // b.pmore
  403ad8:	b	403b7c <ferror@plt+0x118c>
  403adc:	ldr	x0, [x19, #24]
  403ae0:	add	x1, x0, #0x1
  403ae4:	str	x1, [x19, #24]
  403ae8:	strb	w20, [x0]
  403aec:	add	w0, w20, #0x1
  403af0:	and	w0, w0, #0xff
  403af4:	cmp	w23, w20
  403af8:	b.eq	403b7c <ferror@plt+0x118c>  // b.none
  403afc:	mov	w20, w0
  403b00:	ldr	x1, [x19, #32]
  403b04:	ldr	x0, [x19, #24]
  403b08:	cmp	x1, x0
  403b0c:	b.ne	403adc <ferror@plt+0x10ec>  // b.any
  403b10:	mov	x1, x22
  403b14:	mov	x0, x19
  403b18:	bl	416dc4 <_obstack_newchunk@@Base>
  403b1c:	b	403adc <ferror@plt+0x10ec>
  403b20:	ldr	x0, [x19, #24]
  403b24:	add	x1, x0, #0x1
  403b28:	str	x1, [x19, #24]
  403b2c:	strb	w20, [x0]
  403b30:	sub	w0, w20, #0x1
  403b34:	and	w0, w0, #0xff
  403b38:	cmp	w23, w20
  403b3c:	b.eq	403b7c <ferror@plt+0x118c>  // b.none
  403b40:	mov	w20, w0
  403b44:	ldr	x1, [x19, #32]
  403b48:	ldr	x0, [x19, #24]
  403b4c:	cmp	x1, x0
  403b50:	b.ne	403b20 <ferror@plt+0x1130>  // b.any
  403b54:	mov	x1, x22
  403b58:	mov	x0, x19
  403b5c:	bl	416dc4 <_obstack_newchunk@@Base>
  403b60:	b	403b20 <ferror@plt+0x1130>
  403b64:	ldr	x0, [x19, #24]
  403b68:	add	x1, x0, #0x1
  403b6c:	str	x1, [x19, #24]
  403b70:	ldrb	w1, [x20]
  403b74:	strb	w1, [x0]
  403b78:	mov	x21, x20
  403b7c:	mov	x20, x21
  403b80:	ldrb	w1, [x20], #1
  403b84:	ldrb	w0, [x21, #1]
  403b88:	cbz	w0, 403bb8 <ferror@plt+0x11c8>
  403b8c:	cmp	w0, #0x2d
  403b90:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  403b94:	b.ne	403a64 <ferror@plt+0x1074>  // b.any
  403b98:	ldr	x1, [x19, #32]
  403b9c:	ldr	x0, [x19, #24]
  403ba0:	cmp	x1, x0
  403ba4:	b.ne	403b64 <ferror@plt+0x1174>  // b.any
  403ba8:	mov	x1, x22
  403bac:	mov	x0, x19
  403bb0:	bl	416dc4 <_obstack_newchunk@@Base>
  403bb4:	b	403b64 <ferror@plt+0x1174>
  403bb8:	ldp	x21, x22, [sp, #32]
  403bbc:	ldr	x23, [sp, #48]
  403bc0:	ldr	x1, [x19, #32]
  403bc4:	ldr	x0, [x19, #24]
  403bc8:	cmp	x1, x0
  403bcc:	b.eq	403c28 <ferror@plt+0x1238>  // b.none
  403bd0:	ldr	x0, [x19, #24]
  403bd4:	add	x1, x0, #0x1
  403bd8:	str	x1, [x19, #24]
  403bdc:	strb	wzr, [x0]
  403be0:	ldr	x0, [x19, #16]
  403be4:	ldr	x2, [x19, #24]
  403be8:	cmp	x2, x0
  403bec:	b.eq	403c38 <ferror@plt+0x1248>  // b.none
  403bf0:	ldr	x1, [x19, #48]
  403bf4:	add	x2, x2, x1
  403bf8:	bic	x1, x2, x1
  403bfc:	ldr	x2, [x19, #8]
  403c00:	ldr	x3, [x19, #32]
  403c04:	sub	x4, x1, x2
  403c08:	sub	x2, x3, x2
  403c0c:	cmp	x4, x2
  403c10:	csel	x1, x1, x3, ls  // ls = plast
  403c14:	str	x1, [x19, #24]
  403c18:	str	x1, [x19, #16]
  403c1c:	ldp	x19, x20, [sp, #16]
  403c20:	ldp	x29, x30, [sp], #64
  403c24:	ret
  403c28:	mov	x1, #0x1                   	// #1
  403c2c:	mov	x0, x19
  403c30:	bl	416dc4 <_obstack_newchunk@@Base>
  403c34:	b	403bd0 <ferror@plt+0x11e0>
  403c38:	ldrb	w1, [x19, #80]
  403c3c:	orr	w1, w1, #0x2
  403c40:	strb	w1, [x19, #80]
  403c44:	b	403bf0 <ferror@plt+0x1200>
  403c48:	stp	x29, x30, [sp, #-48]!
  403c4c:	mov	x29, sp
  403c50:	stp	x19, x20, [sp, #16]
  403c54:	mov	x19, x0
  403c58:	ldrb	w0, [x0, #8]
  403c5c:	tbnz	w0, #1, 403cb4 <ferror@plt+0x12c4>
  403c60:	mov	x20, x1
  403c64:	ldr	w0, [x19, #24]
  403c68:	cbz	w0, 403cb4 <ferror@plt+0x12c4>
  403c6c:	str	x21, [sp, #32]
  403c70:	ldr	x21, [x1]
  403c74:	ldr	x0, [x21, #32]
  403c78:	ldr	x1, [x21, #24]
  403c7c:	sub	x0, x0, x1
  403c80:	cmp	x0, #0x7
  403c84:	b.ls	403cc0 <ferror@plt+0x12d0>  // b.plast
  403c88:	ldr	x0, [x21, #24]
  403c8c:	add	x0, x0, #0x8
  403c90:	str	x0, [x21, #24]
  403c94:	ldr	x0, [x20]
  403c98:	ldr	x0, [x0, #16]
  403c9c:	str	x0, [x20, #8]
  403ca0:	ldr	w1, [x20, #16]
  403ca4:	add	w2, w1, #0x1
  403ca8:	str	w2, [x20, #16]
  403cac:	str	x19, [x0, w1, sxtw #3]
  403cb0:	ldr	x21, [sp, #32]
  403cb4:	ldp	x19, x20, [sp, #16]
  403cb8:	ldp	x29, x30, [sp], #48
  403cbc:	ret
  403cc0:	mov	x1, #0x8                   	// #8
  403cc4:	mov	x0, x21
  403cc8:	bl	416dc4 <_obstack_newchunk@@Base>
  403ccc:	b	403c88 <ferror@plt+0x1298>
  403cd0:	stp	x29, x30, [sp, #-64]!
  403cd4:	mov	x29, sp
  403cd8:	stp	x19, x20, [sp, #16]
  403cdc:	stp	x21, x22, [sp, #32]
  403ce0:	mov	x22, x0
  403ce4:	mov	w21, w1
  403ce8:	mov	x19, x2
  403cec:	str	wzr, [sp, #60]
  403cf0:	mov	w3, #0x4                   	// #4
  403cf4:	mov	w2, #0x3                   	// #3
  403cf8:	ldr	x0, [x19]
  403cfc:	bl	4035b8 <ferror@plt+0xbc8>
  403d00:	and	w2, w0, #0xff
  403d04:	cbnz	w2, 403dc8 <ferror@plt+0x13d8>
  403d08:	cmp	w21, #0x1
  403d0c:	b.le	403e38 <ferror@plt+0x1448>
  403d10:	ldr	x0, [x19, #8]
  403d14:	ldr	x0, [x0, #8]
  403d18:	bl	4023d0 <strlen@plt>
  403d1c:	mov	x20, x0
  403d20:	str	w0, [sp, #56]
  403d24:	ldr	x0, [x19]
  403d28:	cmp	w21, #0x2
  403d2c:	b.le	403e44 <ferror@plt+0x1454>
  403d30:	ldr	x1, [x19, #16]
  403d34:	ldr	x1, [x1, #8]
  403d38:	add	x2, sp, #0x3c
  403d3c:	bl	4037f8 <ferror@plt+0xe08>
  403d40:	and	w2, w0, #0xff
  403d44:	cbz	w2, 403dd0 <ferror@plt+0x13e0>
  403d48:	cmp	w21, #0x3
  403d4c:	b.gt	403e50 <ferror@plt+0x1460>
  403d50:	ldr	w0, [sp, #60]
  403d54:	tbnz	w0, #31, 403dd0 <ferror@plt+0x13e0>
  403d58:	ldr	w1, [sp, #56]
  403d5c:	cmp	w1, #0x0
  403d60:	ccmp	w0, w20, #0x0, gt
  403d64:	b.ge	403dd0 <ferror@plt+0x13e0>  // b.tcont
  403d68:	add	w1, w0, w1
  403d6c:	cmp	w1, w20
  403d70:	b.le	403d7c <ferror@plt+0x138c>
  403d74:	sub	w20, w20, w0
  403d78:	str	w20, [sp, #56]
  403d7c:	ldrsw	x20, [sp, #56]
  403d80:	ldr	x0, [x22, #32]
  403d84:	ldr	x1, [x22, #24]
  403d88:	sub	x0, x0, x1
  403d8c:	cmp	x20, x0
  403d90:	b.hi	403e70 <ferror@plt+0x1480>  // b.pmore
  403d94:	ldr	x0, [x22, #24]
  403d98:	cmp	w21, #0x1
  403d9c:	b.le	403e80 <ferror@plt+0x1490>
  403da0:	ldr	x1, [x19, #8]
  403da4:	ldr	x1, [x1, #8]
  403da8:	ldrsw	x3, [sp, #60]
  403dac:	mov	x2, x20
  403db0:	add	x1, x1, x3
  403db4:	bl	402390 <memcpy@plt>
  403db8:	ldr	x0, [x22, #24]
  403dbc:	add	x20, x0, x20
  403dc0:	str	x20, [x22, #24]
  403dc4:	b	403dd0 <ferror@plt+0x13e0>
  403dc8:	cmp	w21, #0x2
  403dcc:	b.eq	403de0 <ferror@plt+0x13f0>  // b.none
  403dd0:	ldp	x19, x20, [sp, #16]
  403dd4:	ldp	x21, x22, [sp, #32]
  403dd8:	ldp	x29, x30, [sp], #64
  403ddc:	ret
  403de0:	ldr	x0, [x19, #8]
  403de4:	ldr	x0, [x0, #8]
  403de8:	bl	4023d0 <strlen@plt>
  403dec:	mov	x20, x0
  403df0:	ldr	x0, [x22, #32]
  403df4:	ldr	x1, [x22, #24]
  403df8:	sub	x0, x0, x1
  403dfc:	cmp	x20, x0
  403e00:	b.hi	403e28 <ferror@plt+0x1438>  // b.pmore
  403e04:	ldr	x0, [x19, #8]
  403e08:	mov	x2, x20
  403e0c:	ldr	x1, [x0, #8]
  403e10:	ldr	x0, [x22, #24]
  403e14:	bl	402390 <memcpy@plt>
  403e18:	ldr	x0, [x22, #24]
  403e1c:	add	x20, x0, x20
  403e20:	str	x20, [x22, #24]
  403e24:	b	403dd0 <ferror@plt+0x13e0>
  403e28:	mov	x1, x20
  403e2c:	mov	x0, x22
  403e30:	bl	416dc4 <_obstack_newchunk@@Base>
  403e34:	b	403e04 <ferror@plt+0x1414>
  403e38:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  403e3c:	add	x0, x0, #0x6c0
  403e40:	b	403d18 <ferror@plt+0x1328>
  403e44:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  403e48:	add	x1, x1, #0x6c0
  403e4c:	b	403d38 <ferror@plt+0x1348>
  403e50:	ldr	x0, [x19, #24]
  403e54:	add	x2, sp, #0x38
  403e58:	ldr	x1, [x0, #8]
  403e5c:	ldr	x0, [x19]
  403e60:	bl	4037f8 <ferror@plt+0xe08>
  403e64:	and	w0, w0, #0xff
  403e68:	cbnz	w0, 403d50 <ferror@plt+0x1360>
  403e6c:	b	403dd0 <ferror@plt+0x13e0>
  403e70:	mov	x1, x20
  403e74:	mov	x0, x22
  403e78:	bl	416dc4 <_obstack_newchunk@@Base>
  403e7c:	b	403d94 <ferror@plt+0x13a4>
  403e80:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  403e84:	add	x1, x1, #0x6c0
  403e88:	b	403da8 <ferror@plt+0x13b8>
  403e8c:	stp	x29, x30, [sp, #-96]!
  403e90:	mov	x29, sp
  403e94:	stp	x19, x20, [sp, #16]
  403e98:	stp	x23, x24, [sp, #48]
  403e9c:	stp	x25, x26, [sp, #64]
  403ea0:	stp	x27, x28, [sp, #80]
  403ea4:	mov	x19, x0
  403ea8:	mov	w25, w1
  403eac:	mov	x23, x2
  403eb0:	mov	x28, x3
  403eb4:	and	w24, w4, #0xff
  403eb8:	mov	x0, x3
  403ebc:	bl	4023d0 <strlen@plt>
  403ec0:	cmp	w25, #0x1
  403ec4:	b.le	40402c <ferror@plt+0x163c>
  403ec8:	stp	x21, x22, [sp, #32]
  403ecc:	mov	x22, x0
  403ed0:	sub	w25, w25, #0x2
  403ed4:	add	x25, x25, #0x2
  403ed8:	mov	x21, #0x2                   	// #2
  403edc:	adrp	x27, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  403ee0:	add	x27, x27, #0xd60
  403ee4:	sub	x23, x23, #0x8
  403ee8:	adrp	x26, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  403eec:	add	x26, x26, #0xd98
  403ef0:	b	403f90 <ferror@plt+0x15a0>
  403ef4:	mov	x1, x22
  403ef8:	mov	x0, x19
  403efc:	bl	416dc4 <_obstack_newchunk@@Base>
  403f00:	b	403f70 <ferror@plt+0x1580>
  403f04:	mov	x1, x20
  403f08:	mov	x0, x19
  403f0c:	bl	416dc4 <_obstack_newchunk@@Base>
  403f10:	b	403fac <ferror@plt+0x15bc>
  403f14:	mov	x1, x20
  403f18:	mov	x0, x19
  403f1c:	bl	416dc4 <_obstack_newchunk@@Base>
  403f20:	b	403fec <ferror@plt+0x15fc>
  403f24:	mov	x1, x20
  403f28:	mov	x0, x19
  403f2c:	bl	416dc4 <_obstack_newchunk@@Base>
  403f30:	mov	x2, x20
  403f34:	ldr	x1, [x26]
  403f38:	ldr	x0, [x19, #24]
  403f3c:	bl	402390 <memcpy@plt>
  403f40:	ldr	x0, [x19, #24]
  403f44:	add	x20, x0, x20
  403f48:	str	x20, [x19, #24]
  403f4c:	cmp	x21, x25
  403f50:	b.eq	404028 <ferror@plt+0x1638>  // b.none
  403f54:	cmp	w21, #0x1
  403f58:	b.le	403f8c <ferror@plt+0x159c>
  403f5c:	ldr	x0, [x19, #32]
  403f60:	ldr	x1, [x19, #24]
  403f64:	sub	x0, x0, x1
  403f68:	cmp	x22, x0
  403f6c:	b.hi	403ef4 <ferror@plt+0x1504>  // b.pmore
  403f70:	mov	x2, x22
  403f74:	mov	x1, x28
  403f78:	ldr	x0, [x19, #24]
  403f7c:	bl	402390 <memcpy@plt>
  403f80:	ldr	x0, [x19, #24]
  403f84:	add	x0, x0, x22
  403f88:	str	x0, [x19, #24]
  403f8c:	add	x21, x21, #0x1
  403f90:	cbz	w24, 403fc8 <ferror@plt+0x15d8>
  403f94:	ldr	x20, [x27, #8]
  403f98:	ldr	x0, [x19, #32]
  403f9c:	ldr	x1, [x19, #24]
  403fa0:	sub	x0, x0, x1
  403fa4:	cmp	x20, x0
  403fa8:	b.hi	403f04 <ferror@plt+0x1514>  // b.pmore
  403fac:	mov	x2, x20
  403fb0:	ldr	x1, [x27]
  403fb4:	ldr	x0, [x19, #24]
  403fb8:	bl	402390 <memcpy@plt>
  403fbc:	ldr	x0, [x19, #24]
  403fc0:	add	x20, x0, x20
  403fc4:	str	x20, [x19, #24]
  403fc8:	ldr	x0, [x23, x21, lsl #3]
  403fcc:	ldr	x0, [x0, #8]
  403fd0:	bl	4023d0 <strlen@plt>
  403fd4:	mov	x20, x0
  403fd8:	ldr	x0, [x19, #32]
  403fdc:	ldr	x1, [x19, #24]
  403fe0:	sub	x0, x0, x1
  403fe4:	cmp	x20, x0
  403fe8:	b.hi	403f14 <ferror@plt+0x1524>  // b.pmore
  403fec:	ldr	x0, [x23, x21, lsl #3]
  403ff0:	mov	x2, x20
  403ff4:	ldr	x1, [x0, #8]
  403ff8:	ldr	x0, [x19, #24]
  403ffc:	bl	402390 <memcpy@plt>
  404000:	ldr	x0, [x19, #24]
  404004:	add	x0, x0, x20
  404008:	str	x0, [x19, #24]
  40400c:	cbz	w24, 403f4c <ferror@plt+0x155c>
  404010:	ldr	x20, [x26, #8]
  404014:	ldr	x1, [x19, #32]
  404018:	sub	x0, x1, x0
  40401c:	cmp	x20, x0
  404020:	b.ls	403f30 <ferror@plt+0x1540>  // b.plast
  404024:	b	403f24 <ferror@plt+0x1534>
  404028:	ldp	x21, x22, [sp, #32]
  40402c:	ldp	x19, x20, [sp, #16]
  404030:	ldp	x23, x24, [sp, #48]
  404034:	ldp	x25, x26, [sp, #64]
  404038:	ldp	x27, x28, [sp, #80]
  40403c:	ldp	x29, x30, [sp], #96
  404040:	ret
  404044:	stp	x29, x30, [sp, #-48]!
  404048:	mov	x29, sp
  40404c:	stp	x19, x20, [sp, #16]
  404050:	str	x21, [sp, #32]
  404054:	mov	x20, x0
  404058:	mov	w21, w1
  40405c:	mov	x19, x2
  404060:	mov	w3, #0xffffffff            	// #-1
  404064:	mov	w2, #0x2                   	// #2
  404068:	ldr	x0, [x19]
  40406c:	bl	4035b8 <ferror@plt+0xbc8>
  404070:	and	w2, w0, #0xff
  404074:	cbz	w2, 404088 <ferror@plt+0x1698>
  404078:	ldp	x19, x20, [sp, #16]
  40407c:	ldr	x21, [sp, #32]
  404080:	ldp	x29, x30, [sp], #48
  404084:	ret
  404088:	mov	w4, #0x1                   	// #1
  40408c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x106c>
  404090:	add	x3, x3, #0x930
  404094:	add	x2, x19, #0x8
  404098:	sub	w1, w21, #0x1
  40409c:	mov	x0, x20
  4040a0:	bl	403e8c <ferror@plt+0x149c>
  4040a4:	b	404078 <ferror@plt+0x1688>
  4040a8:	stp	x29, x30, [sp, #-48]!
  4040ac:	mov	x29, sp
  4040b0:	stp	x19, x20, [sp, #16]
  4040b4:	str	x21, [sp, #32]
  4040b8:	mov	x20, x0
  4040bc:	mov	w21, w1
  4040c0:	mov	x19, x2
  4040c4:	mov	w3, #0x4                   	// #4
  4040c8:	mov	w2, #0x3                   	// #3
  4040cc:	ldr	x0, [x19]
  4040d0:	bl	4035b8 <ferror@plt+0xbc8>
  4040d4:	and	w2, w0, #0xff
  4040d8:	cbnz	w2, 40418c <ferror@plt+0x179c>
  4040dc:	cmp	w21, #0x1
  4040e0:	b.le	404114 <ferror@plt+0x1724>
  4040e4:	ldr	x0, [x19, #8]
  4040e8:	ldr	x0, [x0, #8]
  4040ec:	mov	w1, #0x0                   	// #0
  4040f0:	bl	40f714 <ferror@plt+0xcd24>
  4040f4:	cbz	x0, 404120 <ferror@plt+0x1730>
  4040f8:	ldr	w0, [x0, #24]
  4040fc:	cbz	w0, 404120 <ferror@plt+0x1730>
  404100:	cmp	w21, #0x2
  404104:	b.le	404164 <ferror@plt+0x1774>
  404108:	ldr	x0, [x19, #16]
  40410c:	ldr	x21, [x0, #8]
  404110:	b	404130 <ferror@plt+0x1740>
  404114:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  404118:	add	x0, x0, #0x6c0
  40411c:	b	4040ec <ferror@plt+0x16fc>
  404120:	cmp	w21, #0x3
  404124:	b.le	40418c <ferror@plt+0x179c>
  404128:	ldr	x0, [x19, #24]
  40412c:	ldr	x21, [x0, #8]
  404130:	cbz	x21, 40418c <ferror@plt+0x179c>
  404134:	mov	x0, x21
  404138:	bl	4023d0 <strlen@plt>
  40413c:	mov	x19, x0
  404140:	ldr	x0, [x20, #32]
  404144:	ldr	x1, [x20, #24]
  404148:	sub	x0, x0, x1
  40414c:	cmp	x19, x0
  404150:	b.ls	404170 <ferror@plt+0x1780>  // b.plast
  404154:	mov	x1, x19
  404158:	mov	x0, x20
  40415c:	bl	416dc4 <_obstack_newchunk@@Base>
  404160:	b	404170 <ferror@plt+0x1780>
  404164:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x6c>
  404168:	add	x21, x21, #0x6c0
  40416c:	mov	x19, #0x0                   	// #0
  404170:	mov	x2, x19
  404174:	mov	x1, x21
  404178:	ldr	x0, [x20, #24]
  40417c:	bl	402390 <memcpy@plt>
  404180:	ldr	x0, [x20, #24]
  404184:	add	x19, x0, x19
  404188:	str	x19, [x20, #24]
  40418c:	ldp	x19, x20, [sp, #16]
  404190:	ldr	x21, [sp, #32]
  404194:	ldp	x29, x30, [sp], #48
  404198:	ret
  40419c:	stp	x29, x30, [sp, #-48]!
  4041a0:	mov	x29, sp
  4041a4:	stp	x19, x20, [sp, #16]
  4041a8:	mov	x19, x0
  4041ac:	mov	x0, x2
  4041b0:	mov	w3, #0x1                   	// #1
  4041b4:	mov	w2, w3
  4041b8:	ldr	x0, [x0]
  4041bc:	bl	4035b8 <ferror@plt+0xbc8>
  4041c0:	and	w0, w0, #0xff
  4041c4:	cbnz	w0, 404284 <ferror@plt+0x1894>
  4041c8:	str	x21, [sp, #32]
  4041cc:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4041d0:	ldr	x20, [x0, #3432]
  4041d4:	ldr	x0, [x19, #32]
  4041d8:	ldr	x1, [x19, #24]
  4041dc:	sub	x0, x0, x1
  4041e0:	cmp	x20, x0
  4041e4:	b.hi	404290 <ferror@plt+0x18a0>  // b.pmore
  4041e8:	mov	x2, x20
  4041ec:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4041f0:	ldr	x1, [x0, #3424]
  4041f4:	ldr	x0, [x19, #24]
  4041f8:	bl	402390 <memcpy@plt>
  4041fc:	ldr	x21, [x19, #24]
  404200:	add	x21, x21, x20
  404204:	str	x21, [x19, #24]
  404208:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40420c:	ldr	x0, [x0, #2808]
  404210:	bl	4023d0 <strlen@plt>
  404214:	mov	x20, x0
  404218:	ldr	x0, [x19, #32]
  40421c:	sub	x21, x0, x21
  404220:	cmp	x20, x21
  404224:	b.hi	4042a0 <ferror@plt+0x18b0>  // b.pmore
  404228:	mov	x2, x20
  40422c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404230:	ldr	x1, [x0, #2808]
  404234:	ldr	x0, [x19, #24]
  404238:	bl	402390 <memcpy@plt>
  40423c:	ldr	x0, [x19, #24]
  404240:	add	x20, x0, x20
  404244:	str	x20, [x19, #24]
  404248:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40424c:	ldr	x21, [x0, #3488]
  404250:	ldr	x0, [x19, #32]
  404254:	sub	x20, x0, x20
  404258:	cmp	x21, x20
  40425c:	b.hi	4042b0 <ferror@plt+0x18c0>  // b.pmore
  404260:	mov	x2, x21
  404264:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404268:	ldr	x1, [x0, #3480]
  40426c:	ldr	x0, [x19, #24]
  404270:	bl	402390 <memcpy@plt>
  404274:	ldr	x0, [x19, #24]
  404278:	add	x21, x0, x21
  40427c:	str	x21, [x19, #24]
  404280:	ldr	x21, [sp, #32]
  404284:	ldp	x19, x20, [sp, #16]
  404288:	ldp	x29, x30, [sp], #48
  40428c:	ret
  404290:	mov	x1, x20
  404294:	mov	x0, x19
  404298:	bl	416dc4 <_obstack_newchunk@@Base>
  40429c:	b	4041e8 <ferror@plt+0x17f8>
  4042a0:	mov	x1, x20
  4042a4:	mov	x0, x19
  4042a8:	bl	416dc4 <_obstack_newchunk@@Base>
  4042ac:	b	404228 <ferror@plt+0x1838>
  4042b0:	mov	x1, x21
  4042b4:	mov	x0, x19
  4042b8:	bl	416dc4 <_obstack_newchunk@@Base>
  4042bc:	b	404260 <ferror@plt+0x1870>
  4042c0:	stp	x29, x30, [sp, #-48]!
  4042c4:	mov	x29, sp
  4042c8:	stp	x19, x20, [sp, #16]
  4042cc:	mov	x19, x0
  4042d0:	mov	x0, x2
  4042d4:	mov	w3, #0x1                   	// #1
  4042d8:	mov	w2, w3
  4042dc:	ldr	x0, [x0]
  4042e0:	bl	4035b8 <ferror@plt+0xbc8>
  4042e4:	and	w0, w0, #0xff
  4042e8:	cbnz	w0, 4043a8 <ferror@plt+0x19b8>
  4042ec:	str	x21, [sp, #32]
  4042f0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4042f4:	ldr	x20, [x0, #3432]
  4042f8:	ldr	x0, [x19, #32]
  4042fc:	ldr	x1, [x19, #24]
  404300:	sub	x0, x0, x1
  404304:	cmp	x20, x0
  404308:	b.hi	4043b4 <ferror@plt+0x19c4>  // b.pmore
  40430c:	mov	x2, x20
  404310:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404314:	ldr	x1, [x0, #3424]
  404318:	ldr	x0, [x19, #24]
  40431c:	bl	402390 <memcpy@plt>
  404320:	ldr	x21, [x19, #24]
  404324:	add	x21, x21, x20
  404328:	str	x21, [x19, #24]
  40432c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404330:	ldr	x0, [x0, #3440]
  404334:	bl	4023d0 <strlen@plt>
  404338:	mov	x20, x0
  40433c:	ldr	x0, [x19, #32]
  404340:	sub	x21, x0, x21
  404344:	cmp	x20, x21
  404348:	b.hi	4043c4 <ferror@plt+0x19d4>  // b.pmore
  40434c:	mov	x2, x20
  404350:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404354:	ldr	x1, [x0, #3440]
  404358:	ldr	x0, [x19, #24]
  40435c:	bl	402390 <memcpy@plt>
  404360:	ldr	x0, [x19, #24]
  404364:	add	x20, x0, x20
  404368:	str	x20, [x19, #24]
  40436c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404370:	ldr	x21, [x0, #3488]
  404374:	ldr	x0, [x19, #32]
  404378:	sub	x20, x0, x20
  40437c:	cmp	x21, x20
  404380:	b.hi	4043d4 <ferror@plt+0x19e4>  // b.pmore
  404384:	mov	x2, x21
  404388:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40438c:	ldr	x1, [x0, #3480]
  404390:	ldr	x0, [x19, #24]
  404394:	bl	402390 <memcpy@plt>
  404398:	ldr	x0, [x19, #24]
  40439c:	add	x21, x0, x21
  4043a0:	str	x21, [x19, #24]
  4043a4:	ldr	x21, [sp, #32]
  4043a8:	ldp	x19, x20, [sp, #16]
  4043ac:	ldp	x29, x30, [sp], #48
  4043b0:	ret
  4043b4:	mov	x1, x20
  4043b8:	mov	x0, x19
  4043bc:	bl	416dc4 <_obstack_newchunk@@Base>
  4043c0:	b	40430c <ferror@plt+0x191c>
  4043c4:	mov	x1, x20
  4043c8:	mov	x0, x19
  4043cc:	bl	416dc4 <_obstack_newchunk@@Base>
  4043d0:	b	40434c <ferror@plt+0x195c>
  4043d4:	mov	x1, x21
  4043d8:	mov	x0, x19
  4043dc:	bl	416dc4 <_obstack_newchunk@@Base>
  4043e0:	b	404384 <ferror@plt+0x1994>
  4043e4:	stp	x29, x30, [sp, #-96]!
  4043e8:	mov	x29, sp
  4043ec:	stp	x19, x20, [sp, #16]
  4043f0:	stp	x21, x22, [sp, #32]
  4043f4:	stp	x23, x24, [sp, #48]
  4043f8:	stp	x25, x26, [sp, #64]
  4043fc:	stp	x27, x28, [sp, #80]
  404400:	mov	x19, x0
  404404:	mov	x25, x1
  404408:	mov	x20, x2
  40440c:	mov	x23, x3
  404410:	mov	w24, #0x5c                  	// #92
  404414:	adrp	x26, 430000 <_obstack_memory_used@@Base+0x1906c>
  404418:	add	x26, x26, #0x688
  40441c:	adrp	x27, 418000 <_obstack_memory_used@@Base+0x106c>
  404420:	add	x27, x27, #0x938
  404424:	b	404568 <ferror@plt+0x1b78>
  404428:	mov	x0, x20
  40442c:	bl	4023d0 <strlen@plt>
  404430:	mov	x21, x0
  404434:	ldr	x0, [x19, #32]
  404438:	ldr	x1, [x19, #24]
  40443c:	sub	x0, x0, x1
  404440:	cmp	x21, x0
  404444:	b.hi	404468 <ferror@plt+0x1a78>  // b.pmore
  404448:	mov	x2, x21
  40444c:	mov	x1, x20
  404450:	ldr	x0, [x19, #24]
  404454:	bl	402390 <memcpy@plt>
  404458:	ldr	x0, [x19, #24]
  40445c:	add	x21, x0, x21
  404460:	str	x21, [x19, #24]
  404464:	b	404640 <ferror@plt+0x1c50>
  404468:	mov	x1, x21
  40446c:	mov	x0, x19
  404470:	bl	416dc4 <_obstack_newchunk@@Base>
  404474:	b	404448 <ferror@plt+0x1a58>
  404478:	mov	x1, x22
  40447c:	mov	x0, x19
  404480:	bl	416dc4 <_obstack_newchunk@@Base>
  404484:	b	404594 <ferror@plt+0x1ba4>
  404488:	sub	w0, w20, #0x31
  40448c:	and	w0, w0, #0xff
  404490:	cmp	w0, #0x8
  404494:	b.hi	40465c <ferror@plt+0x1c6c>  // b.pmore
  404498:	sub	w3, w20, #0x30
  40449c:	ldr	w0, [x23]
  4044a0:	sub	w0, w0, #0x1
  4044a4:	cmp	w0, w3
  4044a8:	b.ls	4045fc <ferror@plt+0x1c0c>  // b.plast
  4044ac:	sxtw	x20, w3
  4044b0:	ldr	x0, [x23, #16]
  4044b4:	ldr	w0, [x0, x20, lsl #2]
  4044b8:	cmp	w0, #0x0
  4044bc:	b.le	404504 <ferror@plt+0x1b14>
  4044c0:	ldr	x1, [x23, #8]
  4044c4:	ldr	w1, [x1, x20, lsl #2]
  4044c8:	sub	w0, w0, w1
  4044cc:	sxtw	x28, w0
  4044d0:	ldr	x1, [x19, #32]
  4044d4:	sub	x22, x1, x22
  4044d8:	cmp	x22, w0, sxtw
  4044dc:	b.cc	404618 <ferror@plt+0x1c28>  // b.lo, b.ul, b.last
  4044e0:	ldr	x0, [x23, #8]
  4044e4:	ldrsw	x1, [x0, x20, lsl #2]
  4044e8:	mov	x2, x28
  4044ec:	add	x1, x25, x1
  4044f0:	ldr	x0, [x19, #24]
  4044f4:	bl	402390 <memcpy@plt>
  4044f8:	ldr	x0, [x19, #24]
  4044fc:	add	x28, x0, x28
  404500:	str	x28, [x19, #24]
  404504:	add	x20, x21, #0x2
  404508:	b	404568 <ferror@plt+0x1b78>
  40450c:	ldr	w0, [x26]
  404510:	cbnz	w0, 4045cc <ferror@plt+0x1bdc>
  404514:	mov	x2, x27
  404518:	mov	w1, #0x0                   	// #0
  40451c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  404520:	ldr	w0, [x0, #1644]
  404524:	bl	402c80 <ferror@plt+0x290>
  404528:	mov	w0, #0x1                   	// #1
  40452c:	str	w0, [x26]
  404530:	b	4045cc <ferror@plt+0x1bdc>
  404534:	mov	x1, x20
  404538:	mov	x0, x19
  40453c:	bl	416dc4 <_obstack_newchunk@@Base>
  404540:	ldr	x0, [x23, #8]
  404544:	ldrsw	x1, [x0]
  404548:	mov	x2, x20
  40454c:	add	x1, x25, x1
  404550:	ldr	x0, [x19, #24]
  404554:	bl	402390 <memcpy@plt>
  404558:	ldr	x2, [x19, #24]
  40455c:	add	x2, x2, x20
  404560:	str	x2, [x19, #24]
  404564:	add	x20, x21, #0x2
  404568:	mov	w1, w24
  40456c:	mov	x0, x20
  404570:	bl	402860 <strchr@plt>
  404574:	mov	x21, x0
  404578:	cbz	x0, 404428 <ferror@plt+0x1a38>
  40457c:	sub	x22, x0, x20
  404580:	ldr	x0, [x19, #32]
  404584:	ldr	x1, [x19, #24]
  404588:	sub	x0, x0, x1
  40458c:	cmp	x22, x0
  404590:	b.hi	404478 <ferror@plt+0x1a88>  // b.pmore
  404594:	mov	x2, x22
  404598:	mov	x1, x20
  40459c:	ldr	x0, [x19, #24]
  4045a0:	bl	402390 <memcpy@plt>
  4045a4:	ldr	x0, [x19, #24]
  4045a8:	add	x22, x0, x22
  4045ac:	str	x22, [x19, #24]
  4045b0:	ldrb	w20, [x21, #1]
  4045b4:	cmp	w20, #0x30
  4045b8:	b.eq	40450c <ferror@plt+0x1b1c>  // b.none
  4045bc:	b.hi	404488 <ferror@plt+0x1a98>  // b.pmore
  4045c0:	cbz	w20, 404628 <ferror@plt+0x1c38>
  4045c4:	cmp	w20, #0x26
  4045c8:	b.ne	40465c <ferror@plt+0x1c6c>  // b.any
  4045cc:	ldr	x0, [x23, #16]
  4045d0:	ldr	x1, [x23, #8]
  4045d4:	ldr	w0, [x0]
  4045d8:	ldr	w1, [x1]
  4045dc:	sub	w0, w0, w1
  4045e0:	sxtw	x20, w0
  4045e4:	ldr	x1, [x19, #32]
  4045e8:	ldr	x2, [x19, #24]
  4045ec:	sub	x1, x1, x2
  4045f0:	cmp	x1, w0, sxtw
  4045f4:	b.cs	404540 <ferror@plt+0x1b50>  // b.hs, b.nlast
  4045f8:	b	404534 <ferror@plt+0x1b44>
  4045fc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  404600:	add	x2, x2, #0x978
  404604:	mov	w1, #0x0                   	// #0
  404608:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40460c:	ldr	w0, [x0, #1644]
  404610:	bl	402c80 <ferror@plt+0x290>
  404614:	b	404504 <ferror@plt+0x1b14>
  404618:	mov	x1, x28
  40461c:	mov	x0, x19
  404620:	bl	416dc4 <_obstack_newchunk@@Base>
  404624:	b	4044e0 <ferror@plt+0x1af0>
  404628:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  40462c:	add	x2, x2, #0x9a0
  404630:	mov	w1, #0x0                   	// #0
  404634:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  404638:	ldr	w0, [x0, #1644]
  40463c:	bl	402c80 <ferror@plt+0x290>
  404640:	ldp	x19, x20, [sp, #16]
  404644:	ldp	x21, x22, [sp, #32]
  404648:	ldp	x23, x24, [sp, #48]
  40464c:	ldp	x25, x26, [sp, #64]
  404650:	ldp	x27, x28, [sp, #80]
  404654:	ldp	x29, x30, [sp], #96
  404658:	ret
  40465c:	ldr	x0, [x19, #32]
  404660:	cmp	x22, x0
  404664:	b.eq	404680 <ferror@plt+0x1c90>  // b.none
  404668:	ldr	x0, [x19, #24]
  40466c:	add	x1, x0, #0x1
  404670:	str	x1, [x19, #24]
  404674:	strb	w20, [x0]
  404678:	add	x20, x21, #0x2
  40467c:	b	404568 <ferror@plt+0x1b78>
  404680:	mov	x1, #0x1                   	// #1
  404684:	mov	x0, x19
  404688:	bl	416dc4 <_obstack_newchunk@@Base>
  40468c:	b	404668 <ferror@plt+0x1c78>
  404690:	stp	x29, x30, [sp, #-48]!
  404694:	mov	x29, sp
  404698:	stp	x21, x22, [sp, #32]
  40469c:	mov	x21, x0
  4046a0:	cmp	w1, #0x1
  4046a4:	b.eq	4046c8 <ferror@plt+0x1cd8>  // b.none
  4046a8:	b.le	40471c <ferror@plt+0x1d2c>
  4046ac:	stp	x19, x20, [sp, #16]
  4046b0:	add	x19, x2, #0x8
  4046b4:	sub	w1, w1, #0x2
  4046b8:	add	x2, x2, #0x10
  4046bc:	add	x20, x2, x1, lsl #3
  4046c0:	mov	w22, #0x1                   	// #1
  4046c4:	b	4046f0 <ferror@plt+0x1d00>
  4046c8:	mov	x1, x0
  4046cc:	adrp	x0, 403000 <ferror@plt+0x610>
  4046d0:	add	x0, x0, #0x97c
  4046d4:	bl	40fa4c <ferror@plt+0xd05c>
  4046d8:	b	40471c <ferror@plt+0x1d2c>
  4046dc:	mov	x1, x21
  4046e0:	bl	40397c <ferror@plt+0xf8c>
  4046e4:	add	x19, x19, #0x8
  4046e8:	cmp	x19, x20
  4046ec:	b.eq	404718 <ferror@plt+0x1d28>  // b.none
  4046f0:	ldr	x2, [x19]
  4046f4:	mov	w1, #0x0                   	// #0
  4046f8:	ldr	x0, [x2, #8]
  4046fc:	bl	40f714 <ferror@plt+0xcd24>
  404700:	cbnz	x0, 4046dc <ferror@plt+0x1cec>
  404704:	ldr	x0, [x19]
  404708:	mov	w1, w22
  40470c:	ldr	x0, [x0, #8]
  404710:	bl	40f714 <ferror@plt+0xcd24>
  404714:	b	4046dc <ferror@plt+0x1cec>
  404718:	ldp	x19, x20, [sp, #16]
  40471c:	ldp	x21, x22, [sp, #32]
  404720:	ldp	x29, x30, [sp], #48
  404724:	ret
  404728:	stp	x29, x30, [sp, #-32]!
  40472c:	mov	x29, sp
  404730:	cmp	w1, #0x1
  404734:	b.eq	404754 <ferror@plt+0x1d64>  // b.none
  404738:	b.le	404798 <ferror@plt+0x1da8>
  40473c:	stp	x19, x20, [sp, #16]
  404740:	add	x19, x2, #0x8
  404744:	sub	w1, w1, #0x2
  404748:	add	x2, x2, #0x10
  40474c:	add	x20, x2, x1, lsl #3
  404750:	b	404774 <ferror@plt+0x1d84>
  404754:	mov	x1, #0x0                   	// #0
  404758:	adrp	x0, 403000 <ferror@plt+0x610>
  40475c:	add	x0, x0, #0x97c
  404760:	bl	40fa4c <ferror@plt+0xd05c>
  404764:	b	404798 <ferror@plt+0x1da8>
  404768:	add	x19, x19, #0x8
  40476c:	cmp	x19, x20
  404770:	b.eq	404794 <ferror@plt+0x1da4>  // b.none
  404774:	ldr	x0, [x19]
  404778:	mov	w1, #0x0                   	// #0
  40477c:	ldr	x0, [x0, #8]
  404780:	bl	40f714 <ferror@plt+0xcd24>
  404784:	cbz	x0, 404768 <ferror@plt+0x1d78>
  404788:	mov	x1, #0x0                   	// #0
  40478c:	bl	40397c <ferror@plt+0xf8c>
  404790:	b	404768 <ferror@plt+0x1d78>
  404794:	ldp	x19, x20, [sp, #16]
  404798:	ldp	x29, x30, [sp], #32
  40479c:	ret
  4047a0:	sub	sp, sp, #0x70
  4047a4:	stp	x29, x30, [sp, #16]
  4047a8:	add	x29, sp, #0x10
  4047ac:	stp	x19, x20, [sp, #32]
  4047b0:	mov	x19, x2
  4047b4:	cmp	w1, #0x1
  4047b8:	b.le	4048d4 <ferror@plt+0x1ee4>
  4047bc:	ldr	x0, [x2, #8]
  4047c0:	ldr	x20, [x0, #8]
  4047c4:	stp	xzr, xzr, [sp, #88]
  4047c8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4047cc:	add	x0, x0, #0x9d0
  4047d0:	str	x0, [sp, #72]
  4047d4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4047d8:	add	x0, x0, #0x9d8
  4047dc:	str	x0, [sp, #80]
  4047e0:	mov	w3, #0x2                   	// #2
  4047e4:	mov	w2, w3
  4047e8:	ldr	x0, [x19]
  4047ec:	bl	4035b8 <ferror@plt+0xbc8>
  4047f0:	and	w0, w0, #0xff
  4047f4:	cbnz	w0, 404900 <ferror@plt+0x1f10>
  4047f8:	ldrb	w0, [x20]
  4047fc:	cbz	w0, 404900 <ferror@plt+0x1f10>
  404800:	str	x21, [sp, #48]
  404804:	bl	40846c <ferror@plt+0x5a7c>
  404808:	str	x20, [sp, #88]
  40480c:	bl	402970 <__errno_location@plt>
  404810:	mov	x21, x0
  404814:	str	wzr, [x0]
  404818:	ldr	x0, [x19]
  40481c:	ldr	x0, [x0, #8]
  404820:	add	x1, sp, #0x6c
  404824:	str	x1, [sp, #8]
  404828:	strb	wzr, [sp]
  40482c:	mov	w7, #0x1                   	// #1
  404830:	mov	w6, #0x0                   	// #0
  404834:	mov	w5, #0x0                   	// #0
  404838:	mov	w4, #0x0                   	// #0
  40483c:	mov	w3, #0x0                   	// #0
  404840:	add	x2, sp, #0x48
  404844:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  404848:	add	x1, x1, #0x9e0
  40484c:	bl	4115dc <ferror@plt+0xebec>
  404850:	mov	w19, w0
  404854:	ldr	w0, [sp, #108]
  404858:	cbz	w0, 404898 <ferror@plt+0x1ea8>
  40485c:	cmp	w19, #0x7f
  404860:	b.ne	404878 <ferror@plt+0x1e88>  // b.any
  404864:	lsl	w0, w0, #8
  404868:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40486c:	str	w0, [x1, #1676]
  404870:	ldr	x21, [sp, #48]
  404874:	b	404908 <ferror@plt+0x1f18>
  404878:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x106c>
  40487c:	add	x3, x3, #0xfe8
  404880:	mov	w2, #0x3cf                 	// #975
  404884:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  404888:	add	x1, x1, #0x9e8
  40488c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  404890:	add	x0, x0, #0x9f8
  404894:	bl	402960 <__assert_fail@plt>
  404898:	cmp	w19, #0x7f
  40489c:	b.eq	4048b0 <ferror@plt+0x1ec0>  // b.none
  4048a0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4048a4:	str	w19, [x0, #1676]
  4048a8:	ldr	x21, [sp, #48]
  4048ac:	b	404908 <ferror@plt+0x1f18>
  4048b0:	ldr	w1, [x21]
  4048b4:	cbz	w1, 4048a0 <ferror@plt+0x1eb0>
  4048b8:	mov	x3, x20
  4048bc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4048c0:	add	x2, x2, #0xa08
  4048c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4048c8:	ldr	w0, [x0, #1644]
  4048cc:	bl	402c80 <ferror@plt+0x290>
  4048d0:	b	4048a0 <ferror@plt+0x1eb0>
  4048d4:	stp	xzr, xzr, [sp, #88]
  4048d8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4048dc:	add	x0, x0, #0x9d0
  4048e0:	str	x0, [sp, #72]
  4048e4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4048e8:	add	x0, x0, #0x9d8
  4048ec:	str	x0, [sp, #80]
  4048f0:	mov	w3, #0x2                   	// #2
  4048f4:	mov	w2, w3
  4048f8:	ldr	x0, [x19]
  4048fc:	bl	4035b8 <ferror@plt+0xbc8>
  404900:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  404904:	str	wzr, [x0, #1676]
  404908:	ldp	x19, x20, [sp, #32]
  40490c:	ldp	x29, x30, [sp, #16]
  404910:	add	sp, sp, #0x70
  404914:	ret
  404918:	stp	x29, x30, [sp, #-64]!
  40491c:	mov	x29, sp
  404920:	stp	x19, x20, [sp, #16]
  404924:	str	x21, [sp, #32]
  404928:	mov	w19, w0
  40492c:	mov	x20, x1
  404930:	and	w21, w2, #0xff
  404934:	mov	w3, #0x2                   	// #2
  404938:	mov	w2, w3
  40493c:	mov	w1, w0
  404940:	ldr	x0, [x20]
  404944:	bl	4035b8 <ferror@plt+0xbc8>
  404948:	and	w0, w0, #0xff
  40494c:	cbnz	w0, 404980 <ferror@plt+0x1f90>
  404950:	cmp	w19, #0x1
  404954:	b.le	404990 <ferror@plt+0x1fa0>
  404958:	ldr	x0, [x20, #8]
  40495c:	ldr	x0, [x0, #8]
  404960:	add	x1, sp, #0x38
  404964:	bl	40f4f8 <ferror@plt+0xcb08>
  404968:	cbz	x0, 40499c <ferror@plt+0x1fac>
  40496c:	mov	w2, #0x1                   	// #1
  404970:	ldr	x1, [sp, #56]
  404974:	bl	40b3b8 <ferror@plt+0x89c8>
  404978:	ldr	x0, [sp, #56]
  40497c:	bl	402810 <free@plt>
  404980:	ldp	x19, x20, [sp, #16]
  404984:	ldr	x21, [sp, #32]
  404988:	ldp	x29, x30, [sp], #64
  40498c:	ret
  404990:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  404994:	add	x0, x0, #0x6c0
  404998:	b	404960 <ferror@plt+0x1f70>
  40499c:	cbnz	w21, 404980 <ferror@plt+0x1f90>
  4049a0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4049a4:	ldr	w21, [x0, #1644]
  4049a8:	bl	402970 <__errno_location@plt>
  4049ac:	ldr	w1, [x0]
  4049b0:	cmp	w19, #0x1
  4049b4:	b.le	4049e0 <ferror@plt+0x1ff0>
  4049b8:	ldr	x0, [x20, #8]
  4049bc:	ldr	x3, [x0, #8]
  4049c0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  4049c4:	add	x2, x2, #0x530
  4049c8:	mov	w0, w21
  4049cc:	bl	402c80 <ferror@plt+0x290>
  4049d0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4049d4:	mov	w1, #0x1                   	// #1
  4049d8:	str	w1, [x0, #3408]
  4049dc:	b	404980 <ferror@plt+0x1f90>
  4049e0:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  4049e4:	add	x3, x3, #0x6c0
  4049e8:	b	4049c0 <ferror@plt+0x1fd0>
  4049ec:	stp	x29, x30, [sp, #-16]!
  4049f0:	mov	x29, sp
  4049f4:	mov	w0, w1
  4049f8:	mov	x1, x2
  4049fc:	mov	w2, #0x1                   	// #1
  404a00:	bl	404918 <ferror@plt+0x1f28>
  404a04:	ldp	x29, x30, [sp], #16
  404a08:	ret
  404a0c:	stp	x29, x30, [sp, #-16]!
  404a10:	mov	x29, sp
  404a14:	mov	w0, w1
  404a18:	mov	x1, x2
  404a1c:	mov	w2, #0x0                   	// #0
  404a20:	bl	404918 <ferror@plt+0x1f28>
  404a24:	ldp	x29, x30, [sp], #16
  404a28:	ret
  404a2c:	stp	x29, x30, [sp, #-32]!
  404a30:	mov	x29, sp
  404a34:	str	x19, [sp, #16]
  404a38:	mov	x19, x1
  404a3c:	bl	402920 <regfree@plt>
  404a40:	ldr	x0, [x19, #8]
  404a44:	bl	402810 <free@plt>
  404a48:	ldr	x0, [x19, #16]
  404a4c:	bl	402810 <free@plt>
  404a50:	ldr	x19, [sp, #16]
  404a54:	ldp	x29, x30, [sp], #32
  404a58:	ret
  404a5c:	stp	x29, x30, [sp, #-64]!
  404a60:	mov	x29, sp
  404a64:	stp	x19, x20, [sp, #16]
  404a68:	stp	x21, x22, [sp, #32]
  404a6c:	str	x23, [sp, #48]
  404a70:	mov	x19, x0
  404a74:	mov	x22, x1
  404a78:	mov	x21, x2
  404a7c:	mov	x20, x3
  404a80:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404a84:	ldr	x23, [x0, #3432]
  404a88:	ldr	x0, [x19, #32]
  404a8c:	ldr	x1, [x19, #24]
  404a90:	sub	x0, x0, x1
  404a94:	cmp	x23, x0
  404a98:	b.hi	404bdc <ferror@plt+0x21ec>  // b.pmore
  404a9c:	mov	x2, x23
  404aa0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404aa4:	ldr	x1, [x0, #3424]
  404aa8:	ldr	x0, [x19, #24]
  404aac:	bl	402390 <memcpy@plt>
  404ab0:	ldr	x0, [x19, #24]
  404ab4:	add	x0, x0, x23
  404ab8:	str	x0, [x19, #24]
  404abc:	ldr	x1, [x19, #32]
  404ac0:	sub	x1, x1, x0
  404ac4:	cmp	x20, x1
  404ac8:	b.hi	404bec <ferror@plt+0x21fc>  // b.pmore
  404acc:	mov	x2, x20
  404ad0:	mov	x1, x21
  404ad4:	bl	402390 <memcpy@plt>
  404ad8:	ldr	x2, [x19, #24]
  404adc:	add	x2, x2, x20
  404ae0:	str	x2, [x19, #24]
  404ae4:	cbz	x20, 404c18 <ferror@plt+0x2228>
  404ae8:	mov	x4, #0x0                   	// #0
  404aec:	sub	x3, x20, #0x1
  404af0:	add	x3, x21, x3
  404af4:	neg	x0, x4
  404af8:	ldrb	w0, [x3, x0]
  404afc:	cmp	w0, #0x58
  404b00:	b.ne	404b10 <ferror@plt+0x2120>  // b.any
  404b04:	add	x4, x4, #0x1
  404b08:	cmp	x4, #0x6
  404b0c:	b.ne	404af4 <ferror@plt+0x2104>  // b.any
  404b10:	mov	x20, #0x6                   	// #6
  404b14:	sub	x20, x20, x4
  404b18:	mov	x1, #0x7                   	// #7
  404b1c:	sub	x1, x1, x4
  404b20:	ldr	x0, [x19, #32]
  404b24:	sub	x2, x0, x2
  404b28:	cmp	x1, x2
  404b2c:	b.hi	404c20 <ferror@plt+0x2230>  // b.pmore
  404b30:	mov	x2, x20
  404b34:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  404b38:	add	x1, x1, #0xa20
  404b3c:	ldr	x0, [x19, #24]
  404b40:	bl	402390 <memcpy@plt>
  404b44:	ldr	x1, [x19, #24]
  404b48:	add	x0, x1, x20
  404b4c:	add	x0, x0, #0x1
  404b50:	str	x0, [x19, #24]
  404b54:	strb	wzr, [x1, x20]
  404b58:	ldr	x23, [x19, #16]
  404b5c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404b60:	ldr	x0, [x0, #3432]
  404b64:	add	x23, x23, x0
  404b68:	bl	402970 <__errno_location@plt>
  404b6c:	mov	x20, x0
  404b70:	str	wzr, [x0]
  404b74:	mov	x0, x23
  404b78:	bl	415478 <ferror@plt+0x12a88>
  404b7c:	tbnz	w0, #31, 404c2c <ferror@plt+0x223c>
  404b80:	bl	4026b0 <close@plt>
  404b84:	ldr	x0, [x19, #24]
  404b88:	sub	x0, x0, #0x1
  404b8c:	str	x0, [x19, #24]
  404b90:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404b94:	ldr	x20, [x1, #3488]
  404b98:	ldr	x1, [x19, #32]
  404b9c:	sub	x0, x1, x0
  404ba0:	cmp	x20, x0
  404ba4:	b.hi	404cb8 <ferror@plt+0x22c8>  // b.pmore
  404ba8:	mov	x2, x20
  404bac:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404bb0:	ldr	x1, [x0, #3480]
  404bb4:	ldr	x0, [x19, #24]
  404bb8:	bl	402390 <memcpy@plt>
  404bbc:	ldr	x0, [x19, #24]
  404bc0:	add	x20, x0, x20
  404bc4:	str	x20, [x19, #24]
  404bc8:	ldp	x19, x20, [sp, #16]
  404bcc:	ldp	x21, x22, [sp, #32]
  404bd0:	ldr	x23, [sp, #48]
  404bd4:	ldp	x29, x30, [sp], #64
  404bd8:	ret
  404bdc:	mov	x1, x23
  404be0:	mov	x0, x19
  404be4:	bl	416dc4 <_obstack_newchunk@@Base>
  404be8:	b	404a9c <ferror@plt+0x20ac>
  404bec:	mov	x1, x20
  404bf0:	mov	x0, x19
  404bf4:	bl	416dc4 <_obstack_newchunk@@Base>
  404bf8:	mov	x2, x20
  404bfc:	mov	x1, x21
  404c00:	ldr	x0, [x19, #24]
  404c04:	bl	402390 <memcpy@plt>
  404c08:	ldr	x2, [x19, #24]
  404c0c:	add	x2, x2, x20
  404c10:	str	x2, [x19, #24]
  404c14:	b	404ae8 <ferror@plt+0x20f8>
  404c18:	mov	x4, x20
  404c1c:	b	404b10 <ferror@plt+0x2120>
  404c20:	mov	x0, x19
  404c24:	bl	416dc4 <_obstack_newchunk@@Base>
  404c28:	b	404b30 <ferror@plt+0x2140>
  404c2c:	mov	x4, x21
  404c30:	mov	x3, x22
  404c34:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  404c38:	add	x2, x2, #0xa28
  404c3c:	ldr	w1, [x20]
  404c40:	mov	w0, #0x0                   	// #0
  404c44:	bl	402c80 <ferror@plt+0x290>
  404c48:	ldr	x1, [x19, #16]
  404c4c:	ldr	x2, [x19, #24]
  404c50:	cmp	x2, x1
  404c54:	b.eq	404c9c <ferror@plt+0x22ac>  // b.none
  404c58:	ldr	x0, [x19, #48]
  404c5c:	add	x2, x2, x0
  404c60:	bic	x0, x2, x0
  404c64:	ldr	x2, [x19, #8]
  404c68:	ldr	x3, [x19, #32]
  404c6c:	sub	x5, x0, x2
  404c70:	sub	x4, x3, x2
  404c74:	cmp	x5, x4
  404c78:	csel	x0, x0, x3, ls  // ls = plast
  404c7c:	str	x0, [x19, #24]
  404c80:	str	x0, [x19, #16]
  404c84:	cmp	x3, x1
  404c88:	ccmp	x2, x1, #0x2, hi  // hi = pmore
  404c8c:	b.cc	404cac <ferror@plt+0x22bc>  // b.lo, b.ul, b.last
  404c90:	mov	x0, x19
  404c94:	bl	416f14 <_obstack_free@@Base>
  404c98:	b	404bc8 <ferror@plt+0x21d8>
  404c9c:	ldrb	w0, [x19, #80]
  404ca0:	orr	w0, w0, #0x2
  404ca4:	strb	w0, [x19, #80]
  404ca8:	b	404c58 <ferror@plt+0x2268>
  404cac:	str	x1, [x19, #16]
  404cb0:	str	x1, [x19, #24]
  404cb4:	b	404bc8 <ferror@plt+0x21d8>
  404cb8:	mov	x1, x20
  404cbc:	mov	x0, x19
  404cc0:	bl	416dc4 <_obstack_newchunk@@Base>
  404cc4:	b	404ba8 <ferror@plt+0x21b8>
  404cc8:	stp	x29, x30, [sp, #-48]!
  404ccc:	mov	x29, sp
  404cd0:	stp	x19, x20, [sp, #16]
  404cd4:	stp	x21, x22, [sp, #32]
  404cd8:	mov	x21, x0
  404cdc:	mov	w20, w1
  404ce0:	mov	x19, x2
  404ce4:	mov	w3, #0x2                   	// #2
  404ce8:	mov	w2, w3
  404cec:	ldr	x0, [x19]
  404cf0:	bl	4035b8 <ferror@plt+0xbc8>
  404cf4:	and	w1, w0, #0xff
  404cf8:	cbnz	w1, 404d38 <ferror@plt+0x2348>
  404cfc:	cmp	w20, #0x0
  404d00:	b.le	404d48 <ferror@plt+0x2358>
  404d04:	ldr	x0, [x19]
  404d08:	ldr	x22, [x0, #8]
  404d0c:	cmp	w20, #0x1
  404d10:	b.le	404d54 <ferror@plt+0x2364>
  404d14:	ldr	x0, [x19, #8]
  404d18:	ldr	x19, [x0, #8]
  404d1c:	mov	x0, x19
  404d20:	bl	4023d0 <strlen@plt>
  404d24:	mov	x3, x0
  404d28:	mov	x2, x19
  404d2c:	mov	x1, x22
  404d30:	mov	x0, x21
  404d34:	bl	404a5c <ferror@plt+0x206c>
  404d38:	ldp	x19, x20, [sp, #16]
  404d3c:	ldp	x21, x22, [sp, #32]
  404d40:	ldp	x29, x30, [sp], #48
  404d44:	ret
  404d48:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x6c>
  404d4c:	add	x22, x22, #0x6c0
  404d50:	b	404d0c <ferror@plt+0x231c>
  404d54:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x6c>
  404d58:	add	x19, x19, #0x6c0
  404d5c:	b	404d1c <ferror@plt+0x232c>
  404d60:	stp	x29, x30, [sp, #-48]!
  404d64:	mov	x29, sp
  404d68:	stp	x19, x20, [sp, #16]
  404d6c:	str	x21, [sp, #32]
  404d70:	mov	x19, x0
  404d74:	mov	w21, w1
  404d78:	mov	x20, x2
  404d7c:	mov	w3, #0xffffffff            	// #-1
  404d80:	mov	w2, #0x2                   	// #2
  404d84:	ldr	x0, [x20]
  404d88:	bl	4035b8 <ferror@plt+0xbc8>
  404d8c:	and	w0, w0, #0xff
  404d90:	cbnz	w0, 404e58 <ferror@plt+0x2468>
  404d94:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  404d98:	ldr	w0, [x0, #1648]
  404d9c:	cbz	w0, 404e68 <ferror@plt+0x2478>
  404da0:	cmp	w21, #0x1
  404da4:	b.le	404ea8 <ferror@plt+0x24b8>
  404da8:	ldr	x0, [x20, #8]
  404dac:	ldr	x0, [x0, #8]
  404db0:	bl	4023d0 <strlen@plt>
  404db4:	mov	x21, x0
  404db8:	ldr	x0, [x19, #24]
  404dbc:	ldr	x1, [x19, #32]
  404dc0:	sub	x1, x1, x0
  404dc4:	cmp	x21, x1
  404dc8:	b.ls	404ddc <ferror@plt+0x23ec>  // b.plast
  404dcc:	mov	x1, x21
  404dd0:	mov	x0, x19
  404dd4:	bl	416dc4 <_obstack_newchunk@@Base>
  404dd8:	ldr	x0, [x19, #24]
  404ddc:	ldr	x1, [x20, #8]
  404de0:	ldr	x1, [x1, #8]
  404de4:	mov	x2, x21
  404de8:	bl	402390 <memcpy@plt>
  404dec:	ldr	x0, [x19, #24]
  404df0:	add	x21, x0, x21
  404df4:	str	x21, [x19, #24]
  404df8:	ldr	x1, [x19, #32]
  404dfc:	ldr	x0, [x19, #24]
  404e00:	cmp	x1, x0
  404e04:	b.eq	404e88 <ferror@plt+0x2498>  // b.none
  404e08:	ldr	x0, [x19, #24]
  404e0c:	add	x1, x0, #0x1
  404e10:	str	x1, [x19, #24]
  404e14:	strb	wzr, [x0]
  404e18:	ldr	x0, [x19, #16]
  404e1c:	ldr	x2, [x19, #24]
  404e20:	cmp	x2, x0
  404e24:	b.eq	404e98 <ferror@plt+0x24a8>  // b.none
  404e28:	ldr	x1, [x19, #48]
  404e2c:	add	x2, x2, x1
  404e30:	bic	x1, x2, x1
  404e34:	ldr	x2, [x19, #8]
  404e38:	ldr	x3, [x19, #32]
  404e3c:	sub	x4, x1, x2
  404e40:	sub	x2, x3, x2
  404e44:	cmp	x4, x2
  404e48:	csel	x1, x1, x3, ls  // ls = plast
  404e4c:	str	x1, [x19, #24]
  404e50:	str	x1, [x19, #16]
  404e54:	bl	40bb00 <ferror@plt+0x9110>
  404e58:	ldp	x19, x20, [sp, #16]
  404e5c:	ldr	x21, [sp, #32]
  404e60:	ldp	x29, x30, [sp], #48
  404e64:	ret
  404e68:	mov	w4, #0x0                   	// #0
  404e6c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x106c>
  404e70:	add	x3, x3, #0xa48
  404e74:	mov	x2, x20
  404e78:	mov	w1, w21
  404e7c:	mov	x0, x19
  404e80:	bl	403e8c <ferror@plt+0x149c>
  404e84:	b	404df8 <ferror@plt+0x2408>
  404e88:	mov	x1, #0x1                   	// #1
  404e8c:	mov	x0, x19
  404e90:	bl	416dc4 <_obstack_newchunk@@Base>
  404e94:	b	404e08 <ferror@plt+0x2418>
  404e98:	ldrb	w1, [x19, #80]
  404e9c:	orr	w1, w1, #0x2
  404ea0:	strb	w1, [x19, #80]
  404ea4:	b	404e28 <ferror@plt+0x2438>
  404ea8:	ldr	x0, [x19, #24]
  404eac:	mov	x21, #0x0                   	// #0
  404eb0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  404eb4:	add	x1, x1, #0x6c0
  404eb8:	b	404de4 <ferror@plt+0x23f4>
  404ebc:	stp	x29, x30, [sp, #-32]!
  404ec0:	mov	x29, sp
  404ec4:	stp	x19, x20, [sp, #16]
  404ec8:	mov	w20, w1
  404ecc:	mov	x19, x2
  404ed0:	mov	w3, #0x2                   	// #2
  404ed4:	mov	w2, #0x1                   	// #1
  404ed8:	ldr	x0, [x19]
  404edc:	bl	4035b8 <ferror@plt+0xbc8>
  404ee0:	and	w0, w0, #0xff
  404ee4:	cbnz	w0, 404f30 <ferror@plt+0x2540>
  404ee8:	cmp	w20, #0x1
  404eec:	b.eq	404f3c <ferror@plt+0x254c>  // b.none
  404ef0:	b.le	404f48 <ferror@plt+0x2558>
  404ef4:	ldr	x0, [x19, #8]
  404ef8:	ldr	x0, [x0, #8]
  404efc:	bl	408500 <ferror@plt+0x5b10>
  404f00:	and	w0, w0, #0xff
  404f04:	cbnz	w0, 404f30 <ferror@plt+0x2540>
  404f08:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  404f0c:	ldr	w20, [x0, #1644]
  404f10:	bl	402970 <__errno_location@plt>
  404f14:	ldr	w1, [x0]
  404f18:	ldr	x0, [x19, #8]
  404f1c:	ldr	x3, [x0, #8]
  404f20:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  404f24:	add	x2, x2, #0x168
  404f28:	mov	w0, w20
  404f2c:	bl	402c80 <ferror@plt+0x290>
  404f30:	ldp	x19, x20, [sp, #16]
  404f34:	ldp	x29, x30, [sp], #32
  404f38:	ret
  404f3c:	mov	x0, #0x0                   	// #0
  404f40:	bl	408500 <ferror@plt+0x5b10>
  404f44:	b	404f30 <ferror@plt+0x2540>
  404f48:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  404f4c:	add	x0, x0, #0x6c0
  404f50:	bl	408500 <ferror@plt+0x5b10>
  404f54:	and	w0, w0, #0xff
  404f58:	cbnz	w0, 404f30 <ferror@plt+0x2540>
  404f5c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  404f60:	ldr	w20, [x0, #1644]
  404f64:	bl	402970 <__errno_location@plt>
  404f68:	ldr	w1, [x0]
  404f6c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  404f70:	add	x3, x3, #0x6c0
  404f74:	b	404f20 <ferror@plt+0x2530>
  404f78:	stp	x29, x30, [sp, #-48]!
  404f7c:	mov	x29, sp
  404f80:	stp	x19, x20, [sp, #16]
  404f84:	mov	w20, w1
  404f88:	mov	x19, x2
  404f8c:	str	wzr, [sp, #44]
  404f90:	mov	w3, #0x2                   	// #2
  404f94:	mov	w2, #0x1                   	// #1
  404f98:	ldr	x0, [x19]
  404f9c:	bl	4035b8 <ferror@plt+0xbc8>
  404fa0:	cmp	w20, #0x1
  404fa4:	b.gt	404fe8 <ferror@plt+0x25f8>
  404fa8:	ldr	w3, [sp, #44]
  404fac:	cmp	w3, #0xff
  404fb0:	b.hi	405010 <ferror@plt+0x2620>  // b.pmore
  404fb4:	mov	x0, #0x0                   	// #0
  404fb8:	bl	408500 <ferror@plt+0x5b10>
  404fbc:	bl	40846c <ferror@plt+0x5a7c>
  404fc0:	ldr	w0, [sp, #44]
  404fc4:	cbnz	w0, 404fd8 <ferror@plt+0x25e8>
  404fc8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  404fcc:	ldr	w0, [x0, #3408]
  404fd0:	cbz	w0, 404fe4 <ferror@plt+0x25f4>
  404fd4:	str	w0, [sp, #44]
  404fd8:	ldr	w0, [sp, #44]
  404fdc:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  404fe0:	str	w0, [x1, #868]
  404fe4:	bl	402400 <exit@plt>
  404fe8:	ldr	x0, [x19, #8]
  404fec:	add	x2, sp, #0x2c
  404ff0:	ldr	x1, [x0, #8]
  404ff4:	ldr	x0, [x19]
  404ff8:	bl	4037f8 <ferror@plt+0xe08>
  404ffc:	and	w0, w0, #0xff
  405000:	cbnz	w0, 404fa8 <ferror@plt+0x25b8>
  405004:	mov	w0, #0x1                   	// #1
  405008:	str	w0, [sp, #44]
  40500c:	b	404fb4 <ferror@plt+0x25c4>
  405010:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  405014:	add	x2, x2, #0xa50
  405018:	mov	w1, #0x0                   	// #0
  40501c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405020:	ldr	w0, [x0, #1644]
  405024:	bl	402c80 <ferror@plt+0x290>
  405028:	mov	w0, #0x1                   	// #1
  40502c:	str	w0, [sp, #44]
  405030:	b	404fb4 <ferror@plt+0x25c4>
  405034:	stp	x29, x30, [sp, #-48]!
  405038:	mov	x29, sp
  40503c:	stp	x19, x20, [sp, #16]
  405040:	stp	x21, x22, [sp, #32]
  405044:	mov	x21, x0
  405048:	mov	w20, w1
  40504c:	mov	x19, x2
  405050:	mov	w3, #0xffffffff            	// #-1
  405054:	mov	w2, #0x2                   	// #2
  405058:	ldr	x0, [x19]
  40505c:	bl	4035b8 <ferror@plt+0xbc8>
  405060:	and	w2, w0, #0xff
  405064:	cbnz	w2, 4050a0 <ferror@plt+0x26b0>
  405068:	ldr	x0, [x19, #8]
  40506c:	ldr	w1, [x0]
  405070:	cmp	w1, #0x1
  405074:	b.eq	4050bc <ferror@plt+0x26cc>  // b.none
  405078:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40507c:	ldr	w0, [x0, #1644]
  405080:	cmp	w20, #0x0
  405084:	b.le	4050b0 <ferror@plt+0x26c0>
  405088:	ldr	x1, [x19]
  40508c:	ldr	x3, [x1, #8]
  405090:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  405094:	add	x2, x2, #0xa70
  405098:	mov	w1, #0x0                   	// #0
  40509c:	bl	402c80 <ferror@plt+0x290>
  4050a0:	ldp	x19, x20, [sp, #16]
  4050a4:	ldp	x21, x22, [sp, #32]
  4050a8:	ldp	x29, x30, [sp], #48
  4050ac:	ret
  4050b0:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  4050b4:	add	x3, x3, #0x6c0
  4050b8:	b	405090 <ferror@plt+0x26a0>
  4050bc:	cmp	w20, #0x1
  4050c0:	b.le	405100 <ferror@plt+0x2710>
  4050c4:	ldr	x22, [x0, #8]
  4050c8:	mov	w1, #0x0                   	// #0
  4050cc:	mov	x0, x22
  4050d0:	bl	40f714 <ferror@plt+0xcd24>
  4050d4:	cbz	x0, 4050e0 <ferror@plt+0x26f0>
  4050d8:	ldr	w1, [x0, #24]
  4050dc:	cbnz	w1, 40510c <ferror@plt+0x271c>
  4050e0:	mov	x3, x22
  4050e4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4050e8:	add	x2, x2, #0xa98
  4050ec:	mov	w1, #0x0                   	// #0
  4050f0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4050f4:	ldr	w0, [x0, #1644]
  4050f8:	bl	402c80 <ferror@plt+0x290>
  4050fc:	b	4050a0 <ferror@plt+0x26b0>
  405100:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x6c>
  405104:	add	x22, x22, #0x6c0
  405108:	b	4050c8 <ferror@plt+0x26d8>
  40510c:	ldrb	w1, [x0, #8]
  405110:	tbnz	w1, #2, 40515c <ferror@plt+0x276c>
  405114:	cmp	w20, #0x2
  405118:	b.le	40515c <ferror@plt+0x276c>
  40511c:	mov	x2, #0x2                   	// #2
  405120:	mov	w5, #0x1                   	// #1
  405124:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x6c>
  405128:	add	x4, x4, #0x6c0
  40512c:	b	405148 <ferror@plt+0x2758>
  405130:	str	w5, [x1]
  405134:	ldr	x1, [x19, x2, lsl #3]
  405138:	str	x4, [x1, #8]
  40513c:	add	x2, x2, #0x1
  405140:	cmp	w20, w2
  405144:	b.le	40515c <ferror@plt+0x276c>
  405148:	ldr	x1, [x19, x2, lsl #3]
  40514c:	ldr	w3, [x1]
  405150:	cmp	w3, #0x1
  405154:	b.ne	405130 <ferror@plt+0x2740>  // b.any
  405158:	b	40513c <ferror@plt+0x274c>
  40515c:	mov	x3, x21
  405160:	add	x2, x19, #0x8
  405164:	sub	w1, w20, #0x1
  405168:	bl	40cd38 <ferror@plt+0xa348>
  40516c:	b	4050a0 <ferror@plt+0x26b0>
  405170:	cmp	w1, #0x2
  405174:	b.eq	4052f4 <ferror@plt+0x2904>  // b.none
  405178:	stp	x29, x30, [sp, #-64]!
  40517c:	mov	x29, sp
  405180:	stp	x19, x20, [sp, #16]
  405184:	stp	x21, x22, [sp, #32]
  405188:	mov	x21, x0
  40518c:	mov	w19, w1
  405190:	mov	x22, x2
  405194:	ldr	x20, [x2]
  405198:	mov	w3, #0xffffffff            	// #-1
  40519c:	mov	w2, #0x4                   	// #4
  4051a0:	mov	x0, x20
  4051a4:	bl	4035b8 <ferror@plt+0xbc8>
  4051a8:	and	w0, w0, #0xff
  4051ac:	cbz	w0, 4051c0 <ferror@plt+0x27d0>
  4051b0:	ldp	x19, x20, [sp, #16]
  4051b4:	ldp	x21, x22, [sp, #32]
  4051b8:	ldp	x29, x30, [sp], #64
  4051bc:	ret
  4051c0:	str	x23, [sp, #48]
  4051c4:	add	w0, w19, #0x2
  4051c8:	mov	w3, #0x5556                	// #21846
  4051cc:	movk	w3, #0x5555, lsl #16
  4051d0:	smull	x3, w0, w3
  4051d4:	lsr	x3, x3, #32
  4051d8:	sub	w3, w3, w0, asr #31
  4051dc:	add	w1, w3, w3, lsl #1
  4051e0:	mov	w3, #0x1                   	// #1
  4051e4:	mov	w2, #0xffffffff            	// #-1
  4051e8:	sub	w1, w0, w1
  4051ec:	mov	x0, x20
  4051f0:	bl	4035b8 <ferror@plt+0xbc8>
  4051f4:	add	x22, x22, #0x8
  4051f8:	sub	w19, w19, #0x1
  4051fc:	adrp	x23, 417000 <_obstack_memory_used@@Base+0x6c>
  405200:	add	x23, x23, #0x6c0
  405204:	b	40521c <ferror@plt+0x282c>
  405208:	cmp	w19, #0x2
  40520c:	b.le	4052ac <ferror@plt+0x28bc>
  405210:	ldr	x0, [x22, #16]
  405214:	ldr	x20, [x0, #8]
  405218:	cbnz	x20, 40527c <ferror@plt+0x288c>
  40521c:	cmp	w19, #0x0
  405220:	b.le	405208 <ferror@plt+0x2818>
  405224:	ldr	x0, [x22]
  405228:	ldr	x0, [x0, #8]
  40522c:	mov	x1, x23
  405230:	cmp	w19, #0x1
  405234:	b.le	405240 <ferror@plt+0x2850>
  405238:	ldr	x1, [x22, #8]
  40523c:	ldr	x1, [x1, #8]
  405240:	bl	4027b0 <strcmp@plt>
  405244:	cbz	w0, 405208 <ferror@plt+0x2818>
  405248:	cmp	w19, #0x3
  40524c:	b.eq	4052ec <ferror@plt+0x28fc>  // b.none
  405250:	sub	w0, w19, #0x4
  405254:	cmp	w0, #0x1
  405258:	b.hi	405270 <ferror@plt+0x2880>  // b.pmore
  40525c:	cmp	w19, #0x3
  405260:	b.le	4052dc <ferror@plt+0x28ec>
  405264:	ldr	x0, [x22, #24]
  405268:	ldr	x20, [x0, #8]
  40526c:	b	405218 <ferror@plt+0x2828>
  405270:	sub	w19, w19, #0x3
  405274:	add	x22, x22, #0x18
  405278:	b	40521c <ferror@plt+0x282c>
  40527c:	mov	x0, x20
  405280:	bl	4023d0 <strlen@plt>
  405284:	mov	x19, x0
  405288:	ldr	x0, [x21, #32]
  40528c:	ldr	x1, [x21, #24]
  405290:	sub	x0, x0, x1
  405294:	cmp	x19, x0
  405298:	b.ls	4052b8 <ferror@plt+0x28c8>  // b.plast
  40529c:	mov	x1, x19
  4052a0:	mov	x0, x21
  4052a4:	bl	416dc4 <_obstack_newchunk@@Base>
  4052a8:	b	4052b8 <ferror@plt+0x28c8>
  4052ac:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x6c>
  4052b0:	add	x20, x20, #0x6c0
  4052b4:	mov	x19, #0x0                   	// #0
  4052b8:	mov	x2, x19
  4052bc:	mov	x1, x20
  4052c0:	ldr	x0, [x21, #24]
  4052c4:	bl	402390 <memcpy@plt>
  4052c8:	ldr	x0, [x21, #24]
  4052cc:	add	x19, x0, x19
  4052d0:	str	x19, [x21, #24]
  4052d4:	ldr	x23, [sp, #48]
  4052d8:	b	4051b0 <ferror@plt+0x27c0>
  4052dc:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x6c>
  4052e0:	add	x20, x20, #0x6c0
  4052e4:	mov	x19, #0x0                   	// #0
  4052e8:	b	4052b8 <ferror@plt+0x28c8>
  4052ec:	ldr	x23, [sp, #48]
  4052f0:	b	4051b0 <ferror@plt+0x27c0>
  4052f4:	ret
  4052f8:	stp	x29, x30, [sp, #-16]!
  4052fc:	mov	x29, sp
  405300:	ldr	x1, [x1]
  405304:	ldr	x0, [x0]
  405308:	ldr	x1, [x1, #16]
  40530c:	ldr	x0, [x0, #16]
  405310:	bl	4027b0 <strcmp@plt>
  405314:	ldp	x29, x30, [sp], #16
  405318:	ret
  40531c:	stp	x29, x30, [sp, #-48]!
  405320:	mov	x29, sp
  405324:	stp	x19, x20, [sp, #16]
  405328:	str	x21, [sp, #32]
  40532c:	mov	x20, x0
  405330:	mov	w21, w1
  405334:	mov	x19, x2
  405338:	mov	w3, #0xffffffff            	// #-1
  40533c:	mov	w2, #0x2                   	// #2
  405340:	ldr	x0, [x19]
  405344:	bl	4035b8 <ferror@plt+0xbc8>
  405348:	and	w2, w0, #0xff
  40534c:	cbz	w2, 405360 <ferror@plt+0x2970>
  405350:	ldp	x19, x20, [sp, #16]
  405354:	ldr	x21, [sp, #32]
  405358:	ldp	x29, x30, [sp], #48
  40535c:	ret
  405360:	add	x2, x19, #0x8
  405364:	sub	w1, w21, #0x1
  405368:	mov	x0, x20
  40536c:	bl	409a34 <ferror@plt+0x7044>
  405370:	b	405350 <ferror@plt+0x2960>
  405374:	stp	x29, x30, [sp, #-128]!
  405378:	mov	x29, sp
  40537c:	stp	x19, x20, [sp, #16]
  405380:	mov	x20, x2
  405384:	cmp	w1, #0x1
  405388:	b.le	405630 <ferror@plt+0x2c40>
  40538c:	stp	x23, x24, [sp, #48]
  405390:	mov	x19, x0
  405394:	ldr	x0, [x2, #8]
  405398:	ldr	x24, [x0, #8]
  40539c:	stp	xzr, xzr, [sp, #112]
  4053a0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4053a4:	add	x0, x0, #0x9d0
  4053a8:	str	x0, [sp, #96]
  4053ac:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4053b0:	add	x0, x0, #0x9d8
  4053b4:	str	x0, [sp, #104]
  4053b8:	mov	w3, #0x2                   	// #2
  4053bc:	mov	w2, w3
  4053c0:	ldr	x0, [x20]
  4053c4:	bl	4035b8 <ferror@plt+0xbc8>
  4053c8:	and	w0, w0, #0xff
  4053cc:	cbnz	w0, 405480 <ferror@plt+0x2a90>
  4053d0:	ldrb	w0, [x24]
  4053d4:	cbz	w0, 405478 <ferror@plt+0x2a88>
  4053d8:	stp	x21, x22, [sp, #32]
  4053dc:	bl	40846c <ferror@plt+0x5a7c>
  4053e0:	str	x24, [sp, #112]
  4053e4:	bl	402970 <__errno_location@plt>
  4053e8:	mov	x22, x0
  4053ec:	str	wzr, [x0]
  4053f0:	ldr	x0, [x20]
  4053f4:	add	x7, sp, #0x5c
  4053f8:	mov	w6, #0x0                   	// #0
  4053fc:	mov	w5, #0x1                   	// #1
  405400:	mov	w4, #0x0                   	// #0
  405404:	mov	x3, #0x0                   	// #0
  405408:	add	x2, sp, #0x60
  40540c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  405410:	add	x1, x1, #0x9e0
  405414:	ldr	x0, [x0, #8]
  405418:	bl	4153c0 <ferror@plt+0x129d0>
  40541c:	mov	w23, w0
  405420:	cmn	w0, #0x1
  405424:	b.eq	405488 <ferror@plt+0x2a98>  // b.none
  405428:	stp	x25, x26, [sp, #64]
  40542c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  405430:	add	x1, x1, #0xab0
  405434:	ldr	w0, [sp, #92]
  405438:	bl	402620 <fdopen@plt>
  40543c:	mov	x21, x0
  405440:	mov	x25, #0x1                   	// #1
  405444:	cbz	x0, 4054bc <ferror@plt+0x2acc>
  405448:	ldr	x0, [x19, #24]
  40544c:	ldr	x1, [x19, #32]
  405450:	subs	x2, x1, x0
  405454:	b.eq	4054fc <ferror@plt+0x2b0c>  // b.none
  405458:	mov	x3, x21
  40545c:	mov	x1, x25
  405460:	bl	402800 <fread@plt>
  405464:	cbz	x0, 405510 <ferror@plt+0x2b20>
  405468:	ldr	x1, [x19, #24]
  40546c:	add	x0, x1, x0
  405470:	str	x0, [x19, #24]
  405474:	b	405448 <ferror@plt+0x2a58>
  405478:	ldp	x23, x24, [sp, #48]
  40547c:	b	40565c <ferror@plt+0x2c6c>
  405480:	ldp	x23, x24, [sp, #48]
  405484:	b	40565c <ferror@plt+0x2c6c>
  405488:	mov	x3, x24
  40548c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  405490:	add	x2, x2, #0xa08
  405494:	ldr	w1, [x22]
  405498:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40549c:	ldr	w0, [x0, #1644]
  4054a0:	bl	402c80 <ferror@plt+0x290>
  4054a4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4054a8:	mov	w1, #0x7f                  	// #127
  4054ac:	str	w1, [x0, #1676]
  4054b0:	ldp	x21, x22, [sp, #32]
  4054b4:	ldp	x23, x24, [sp, #48]
  4054b8:	b	405664 <ferror@plt+0x2c74>
  4054bc:	mov	x3, x24
  4054c0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4054c4:	add	x2, x2, #0xa08
  4054c8:	ldr	w1, [x22]
  4054cc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4054d0:	ldr	w0, [x0, #1644]
  4054d4:	bl	402c80 <ferror@plt+0x290>
  4054d8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4054dc:	mov	w1, #0x7f                  	// #127
  4054e0:	str	w1, [x0, #1676]
  4054e4:	ldr	w0, [sp, #92]
  4054e8:	bl	4026b0 <close@plt>
  4054ec:	ldp	x21, x22, [sp, #32]
  4054f0:	ldp	x23, x24, [sp, #48]
  4054f4:	ldp	x25, x26, [sp, #64]
  4054f8:	b	405664 <ferror@plt+0x2c74>
  4054fc:	mov	x0, x21
  405500:	bl	402690 <getc@plt>
  405504:	mov	w26, w0
  405508:	cmn	w0, #0x1
  40550c:	b.ne	405594 <ferror@plt+0x2ba4>  // b.any
  405510:	mov	x0, x21
  405514:	bl	4029f0 <ferror@plt>
  405518:	cbnz	w0, 405528 <ferror@plt+0x2b38>
  40551c:	mov	x0, x21
  405520:	bl	4167ec <ferror@plt+0x13dfc>
  405524:	cbz	w0, 40553c <ferror@plt+0x2b4c>
  405528:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  40552c:	add	x2, x2, #0xab8
  405530:	ldr	w1, [x22]
  405534:	mov	w0, #0x1                   	// #1
  405538:	bl	402c80 <ferror@plt+0x290>
  40553c:	str	wzr, [x22]
  405540:	ldr	x0, [x20]
  405544:	add	x6, sp, #0x58
  405548:	mov	w5, #0x0                   	// #0
  40554c:	mov	w4, #0x1                   	// #1
  405550:	mov	w3, w4
  405554:	mov	w2, #0x0                   	// #0
  405558:	ldr	x1, [x0, #8]
  40555c:	mov	w0, w23
  405560:	bl	415ec4 <ferror@plt+0x134d4>
  405564:	mov	w19, w0
  405568:	ldr	w0, [sp, #88]
  40556c:	cbz	w0, 4055ec <ferror@plt+0x2bfc>
  405570:	cmp	w19, #0x7f
  405574:	b.ne	4055c8 <ferror@plt+0x2bd8>  // b.any
  405578:	lsl	w0, w0, #8
  40557c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  405580:	str	w0, [x1, #1676]
  405584:	ldp	x21, x22, [sp, #32]
  405588:	ldp	x23, x24, [sp, #48]
  40558c:	ldp	x25, x26, [sp, #64]
  405590:	b	405664 <ferror@plt+0x2c74>
  405594:	ldr	x1, [x19, #32]
  405598:	ldr	x0, [x19, #24]
  40559c:	cmp	x1, x0
  4055a0:	b.eq	4055b8 <ferror@plt+0x2bc8>  // b.none
  4055a4:	ldr	x0, [x19, #24]
  4055a8:	add	x1, x0, #0x1
  4055ac:	str	x1, [x19, #24]
  4055b0:	strb	w26, [x0]
  4055b4:	b	405448 <ferror@plt+0x2a58>
  4055b8:	mov	x1, x25
  4055bc:	mov	x0, x19
  4055c0:	bl	416dc4 <_obstack_newchunk@@Base>
  4055c4:	b	4055a4 <ferror@plt+0x2bb4>
  4055c8:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x106c>
  4055cc:	add	x3, x3, #0xfe8
  4055d0:	add	x3, x3, #0x10
  4055d4:	mov	w2, #0x424                 	// #1060
  4055d8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  4055dc:	add	x1, x1, #0x9e8
  4055e0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4055e4:	add	x0, x0, #0x9f8
  4055e8:	bl	402960 <__assert_fail@plt>
  4055ec:	cmp	w19, #0x7f
  4055f0:	b.eq	40560c <ferror@plt+0x2c1c>  // b.none
  4055f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4055f8:	str	w19, [x0, #1676]
  4055fc:	ldp	x21, x22, [sp, #32]
  405600:	ldp	x23, x24, [sp, #48]
  405604:	ldp	x25, x26, [sp, #64]
  405608:	b	405664 <ferror@plt+0x2c74>
  40560c:	ldr	w1, [x22]
  405610:	cbz	w1, 4055f4 <ferror@plt+0x2c04>
  405614:	mov	x3, x24
  405618:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  40561c:	add	x2, x2, #0xa08
  405620:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405624:	ldr	w0, [x0, #1644]
  405628:	bl	402c80 <ferror@plt+0x290>
  40562c:	b	4055f4 <ferror@plt+0x2c04>
  405630:	stp	xzr, xzr, [sp, #112]
  405634:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  405638:	add	x0, x0, #0x9d0
  40563c:	str	x0, [sp, #96]
  405640:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  405644:	add	x0, x0, #0x9d8
  405648:	str	x0, [sp, #104]
  40564c:	mov	w3, #0x2                   	// #2
  405650:	mov	w2, w3
  405654:	ldr	x0, [x20]
  405658:	bl	4035b8 <ferror@plt+0xbc8>
  40565c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405660:	str	wzr, [x0, #1676]
  405664:	ldp	x19, x20, [sp, #16]
  405668:	ldp	x29, x30, [sp], #128
  40566c:	ret
  405670:	stp	x29, x30, [sp, #-48]!
  405674:	mov	x29, sp
  405678:	stp	x19, x20, [sp, #16]
  40567c:	str	x21, [sp, #32]
  405680:	mov	x19, x0
  405684:	mov	w21, w1
  405688:	mov	x20, x2
  40568c:	mov	w3, #0xffffffff            	// #-1
  405690:	mov	w2, #0x2                   	// #2
  405694:	ldr	x0, [x20]
  405698:	bl	4035b8 <ferror@plt+0xbc8>
  40569c:	and	w0, w0, #0xff
  4056a0:	cbz	w0, 4056b4 <ferror@plt+0x2cc4>
  4056a4:	ldp	x19, x20, [sp, #16]
  4056a8:	ldr	x21, [sp, #32]
  4056ac:	ldp	x29, x30, [sp], #48
  4056b0:	ret
  4056b4:	mov	w4, #0x0                   	// #0
  4056b8:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x106c>
  4056bc:	add	x3, x3, #0xa48
  4056c0:	mov	x2, x20
  4056c4:	mov	w1, w21
  4056c8:	mov	x0, x19
  4056cc:	bl	403e8c <ferror@plt+0x149c>
  4056d0:	ldr	x1, [x19, #32]
  4056d4:	ldr	x0, [x19, #24]
  4056d8:	cmp	x1, x0
  4056dc:	b.eq	405754 <ferror@plt+0x2d64>  // b.none
  4056e0:	ldr	x0, [x19, #24]
  4056e4:	add	x1, x0, #0x1
  4056e8:	str	x1, [x19, #24]
  4056ec:	strb	wzr, [x0]
  4056f0:	bl	40846c <ferror@plt+0x5a7c>
  4056f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4056f8:	ldr	x0, [x0, #1048]
  4056fc:	ldr	x2, [x19, #16]
  405700:	ldr	x3, [x19, #24]
  405704:	cmp	x3, x2
  405708:	b.eq	405764 <ferror@plt+0x2d74>  // b.none
  40570c:	ldr	x1, [x19, #48]
  405710:	add	x3, x3, x1
  405714:	bic	x1, x3, x1
  405718:	ldr	x3, [x19, #8]
  40571c:	ldr	x4, [x19, #32]
  405720:	sub	x5, x1, x3
  405724:	sub	x3, x4, x3
  405728:	cmp	x5, x3
  40572c:	csel	x1, x1, x4, ls  // ls = plast
  405730:	str	x1, [x19, #24]
  405734:	str	x1, [x19, #16]
  405738:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40573c:	add	x1, x1, #0x740
  405740:	bl	4164c0 <ferror@plt+0x13ad0>
  405744:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405748:	ldr	x0, [x0, #1048]
  40574c:	bl	416a7c <ferror@plt+0x1408c>
  405750:	b	4056a4 <ferror@plt+0x2cb4>
  405754:	mov	x1, #0x1                   	// #1
  405758:	mov	x0, x19
  40575c:	bl	416dc4 <_obstack_newchunk@@Base>
  405760:	b	4056e0 <ferror@plt+0x2cf0>
  405764:	ldrb	w1, [x19, #80]
  405768:	orr	w1, w1, #0x2
  40576c:	strb	w1, [x19, #80]
  405770:	b	40570c <ferror@plt+0x2d1c>
  405774:	stp	x29, x30, [sp, #-16]!
  405778:	mov	x29, sp
  40577c:	mov	x0, x2
  405780:	mov	w3, #0x1                   	// #1
  405784:	mov	w2, w3
  405788:	ldr	x0, [x0]
  40578c:	bl	4035b8 <ferror@plt+0xbc8>
  405790:	and	w0, w0, #0xff
  405794:	cbz	w0, 4057a0 <ferror@plt+0x2db0>
  405798:	ldp	x29, x30, [sp], #16
  40579c:	ret
  4057a0:	bl	40bd4c <ferror@plt+0x935c>
  4057a4:	b	405798 <ferror@plt+0x2da8>
  4057a8:	stp	x29, x30, [sp, #-48]!
  4057ac:	mov	x29, sp
  4057b0:	stp	x19, x20, [sp, #16]
  4057b4:	mov	w20, w1
  4057b8:	mov	x19, x2
  4057bc:	str	wzr, [sp, #44]
  4057c0:	mov	w3, #0x2                   	// #2
  4057c4:	mov	w2, #0x1                   	// #1
  4057c8:	ldr	x0, [x19]
  4057cc:	bl	4035b8 <ferror@plt+0xbc8>
  4057d0:	and	w0, w0, #0xff
  4057d4:	cbnz	w0, 405804 <ferror@plt+0x2e14>
  4057d8:	cmp	w20, #0x1
  4057dc:	b.le	4057fc <ferror@plt+0x2e0c>
  4057e0:	ldr	x0, [x19, #8]
  4057e4:	add	x2, sp, #0x2c
  4057e8:	ldr	x1, [x0, #8]
  4057ec:	ldr	x0, [x19]
  4057f0:	bl	4037f8 <ferror@plt+0xe08>
  4057f4:	and	w0, w0, #0xff
  4057f8:	cbz	w0, 405804 <ferror@plt+0x2e14>
  4057fc:	ldr	w0, [sp, #44]
  405800:	bl	40e998 <ferror@plt+0xbfa8>
  405804:	ldp	x19, x20, [sp, #16]
  405808:	ldp	x29, x30, [sp], #48
  40580c:	ret
  405810:	stp	x29, x30, [sp, #-112]!
  405814:	mov	x29, sp
  405818:	stp	x21, x22, [sp, #32]
  40581c:	stp	x23, x24, [sp, #48]
  405820:	stp	x25, x26, [sp, #64]
  405824:	mov	x21, x0
  405828:	mov	w23, w1
  40582c:	mov	x26, x2
  405830:	mov	w3, #0xffffffff            	// #-1
  405834:	mov	w2, #0x2                   	// #2
  405838:	ldr	x0, [x26]
  40583c:	bl	4035b8 <ferror@plt+0xbc8>
  405840:	and	w0, w0, #0xff
  405844:	cbnz	w0, 405a54 <ferror@plt+0x3064>
  405848:	cmp	w23, #0x0
  40584c:	b.le	405884 <ferror@plt+0x2e94>
  405850:	stp	x19, x20, [sp, #16]
  405854:	mov	w25, w23
  405858:	mov	w20, #0x1                   	// #1
  40585c:	cmp	w23, w20
  405860:	b.ls	405a68 <ferror@plt+0x3078>  // b.plast
  405864:	stp	x27, x28, [sp, #80]
  405868:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  40586c:	add	x0, x0, #0x6c0
  405870:	str	x0, [sp, #104]
  405874:	adrp	x27, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  405878:	add	x27, x27, #0xd60
  40587c:	adrp	x28, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  405880:	b	40595c <ferror@plt+0x2f6c>
  405884:	stp	x19, x20, [sp, #16]
  405888:	stp	x27, x28, [sp, #80]
  40588c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x106c>
  405890:	add	x3, x3, #0xfe8
  405894:	add	x3, x3, #0x20
  405898:	mov	w2, #0x382                 	// #898
  40589c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  4058a0:	add	x1, x1, #0x9e8
  4058a4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4058a8:	add	x0, x0, #0xad0
  4058ac:	bl	402960 <__assert_fail@plt>
  4058b0:	ldr	x22, [x27, #8]
  4058b4:	ldr	x0, [x21, #32]
  4058b8:	ldr	x1, [x21, #24]
  4058bc:	sub	x0, x0, x1
  4058c0:	cmp	x22, x0
  4058c4:	b.hi	4059b8 <ferror@plt+0x2fc8>  // b.pmore
  4058c8:	mov	x2, x22
  4058cc:	ldr	x1, [x27]
  4058d0:	ldr	x0, [x21, #24]
  4058d4:	bl	402390 <memcpy@plt>
  4058d8:	ldr	x24, [x21, #24]
  4058dc:	add	x24, x24, x22
  4058e0:	str	x24, [x21, #24]
  4058e4:	ldr	x0, [x19, #32]
  4058e8:	bl	4023d0 <strlen@plt>
  4058ec:	mov	x22, x0
  4058f0:	ldr	x0, [x21, #32]
  4058f4:	sub	x24, x0, x24
  4058f8:	cmp	x22, x24
  4058fc:	b.hi	4059c8 <ferror@plt+0x2fd8>  // b.pmore
  405900:	mov	x2, x22
  405904:	ldr	x1, [x19, #32]
  405908:	ldr	x0, [x21, #24]
  40590c:	bl	402390 <memcpy@plt>
  405910:	ldr	x0, [x21, #24]
  405914:	add	x22, x0, x22
  405918:	str	x22, [x21, #24]
  40591c:	add	x0, x28, #0xd98
  405920:	ldr	x19, [x0, #8]
  405924:	ldr	x0, [x21, #32]
  405928:	sub	x22, x0, x22
  40592c:	cmp	x19, x22
  405930:	b.hi	4059d8 <ferror@plt+0x2fe8>  // b.pmore
  405934:	mov	x2, x19
  405938:	ldr	x1, [x28, #3480]
  40593c:	ldr	x0, [x21, #24]
  405940:	bl	402390 <memcpy@plt>
  405944:	ldr	x0, [x21, #24]
  405948:	add	x19, x0, x19
  40594c:	str	x19, [x21, #24]
  405950:	add	w20, w20, #0x1
  405954:	cmp	w20, w25
  405958:	b.eq	405a4c <ferror@plt+0x305c>  // b.none
  40595c:	ldr	x22, [sp, #104]
  405960:	cmp	w20, w23
  405964:	b.ge	405970 <ferror@plt+0x2f80>  // b.tcont
  405968:	ldr	x0, [x26, w20, sxtw #3]
  40596c:	ldr	x22, [x0, #8]
  405970:	mov	w1, #0x0                   	// #0
  405974:	mov	x0, x22
  405978:	bl	40f714 <ferror@plt+0xcd24>
  40597c:	mov	x19, x0
  405980:	cbz	x0, 405950 <ferror@plt+0x2f60>
  405984:	ldr	w0, [x0, #24]
  405988:	cmp	w0, #0x1
  40598c:	b.eq	4058b0 <ferror@plt+0x2ec0>  // b.none
  405990:	cmp	w0, #0x2
  405994:	b.eq	4059e8 <ferror@plt+0x2ff8>  // b.none
  405998:	cbz	w0, 405950 <ferror@plt+0x2f60>
  40599c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4059a0:	add	x2, x2, #0xb10
  4059a4:	mov	w1, #0x0                   	// #0
  4059a8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4059ac:	ldr	w0, [x0, #1644]
  4059b0:	bl	402c80 <ferror@plt+0x290>
  4059b4:	bl	402720 <abort@plt>
  4059b8:	mov	x1, x22
  4059bc:	mov	x0, x21
  4059c0:	bl	416dc4 <_obstack_newchunk@@Base>
  4059c4:	b	4058c8 <ferror@plt+0x2ed8>
  4059c8:	mov	x1, x22
  4059cc:	mov	x0, x21
  4059d0:	bl	416dc4 <_obstack_newchunk@@Base>
  4059d4:	b	405900 <ferror@plt+0x2f10>
  4059d8:	mov	x1, x19
  4059dc:	mov	x0, x21
  4059e0:	bl	416dc4 <_obstack_newchunk@@Base>
  4059e4:	b	405934 <ferror@plt+0x2f44>
  4059e8:	ldr	x0, [x19, #32]
  4059ec:	adrp	x1, 403000 <ferror@plt+0x610>
  4059f0:	add	x1, x1, #0x654
  4059f4:	cmp	x0, x1
  4059f8:	b.eq	405a24 <ferror@plt+0x3034>  // b.none
  4059fc:	cmp	w23, #0x2
  405a00:	b.eq	405a44 <ferror@plt+0x3054>  // b.none
  405a04:	mov	x3, x22
  405a08:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  405a0c:	add	x2, x2, #0xae0
  405a10:	mov	w1, #0x0                   	// #0
  405a14:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405a18:	ldr	w0, [x0, #1644]
  405a1c:	bl	402c80 <ferror@plt+0x290>
  405a20:	b	405950 <ferror@plt+0x2f60>
  405a24:	mov	x3, x22
  405a28:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  405a2c:	add	x2, x2, #0x810
  405a30:	mov	w1, #0x0                   	// #0
  405a34:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405a38:	ldr	w0, [x0, #1644]
  405a3c:	bl	402c80 <ferror@plt+0x290>
  405a40:	b	405950 <ferror@plt+0x2f60>
  405a44:	bl	40b618 <ferror@plt+0x8c28>
  405a48:	b	405950 <ferror@plt+0x2f60>
  405a4c:	ldp	x19, x20, [sp, #16]
  405a50:	ldp	x27, x28, [sp, #80]
  405a54:	ldp	x21, x22, [sp, #32]
  405a58:	ldp	x23, x24, [sp, #48]
  405a5c:	ldp	x25, x26, [sp, #64]
  405a60:	ldp	x29, x30, [sp], #112
  405a64:	ret
  405a68:	ldp	x19, x20, [sp, #16]
  405a6c:	b	405a54 <ferror@plt+0x3064>
  405a70:	stp	x29, x30, [sp, #-32]!
  405a74:	mov	x29, sp
  405a78:	stp	x19, x20, [sp, #16]
  405a7c:	mov	w20, w1
  405a80:	mov	x19, x2
  405a84:	mov	w3, #0x2                   	// #2
  405a88:	mov	w2, #0x1                   	// #1
  405a8c:	ldr	x0, [x19]
  405a90:	bl	4035b8 <ferror@plt+0xbc8>
  405a94:	and	w0, w0, #0xff
  405a98:	cbnz	w0, 405afc <ferror@plt+0x310c>
  405a9c:	cmp	w20, #0x1
  405aa0:	b.eq	405af4 <ferror@plt+0x3104>  // b.none
  405aa4:	b.le	405b88 <ferror@plt+0x3198>
  405aa8:	ldr	x0, [x19, #8]
  405aac:	ldr	x0, [x0, #8]
  405ab0:	ldrb	w20, [x0]
  405ab4:	sub	w1, w20, #0x2b
  405ab8:	and	w1, w1, #0xfffffffd
  405abc:	tst	w1, #0xff
  405ac0:	b.ne	405b60 <ferror@plt+0x3170>  // b.any
  405ac4:	add	x0, x0, #0x1
  405ac8:	bl	4082a8 <ferror@plt+0x58b8>
  405acc:	tbnz	w0, #31, 405b3c <ferror@plt+0x314c>
  405ad0:	cmp	w20, #0x2b
  405ad4:	b.eq	405b28 <ferror@plt+0x3138>  // b.none
  405ad8:	cmp	w20, #0x2d
  405adc:	b.ne	405b08 <ferror@plt+0x3118>  // b.any
  405ae0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  405ae4:	ldr	w2, [x1, #1660]
  405ae8:	bic	w0, w2, w0
  405aec:	str	w0, [x1, #1660]
  405af0:	b	405afc <ferror@plt+0x310c>
  405af4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405af8:	str	wzr, [x0, #1660]
  405afc:	ldp	x19, x20, [sp, #16]
  405b00:	ldp	x29, x30, [sp], #32
  405b04:	ret
  405b08:	cbz	w20, 405b98 <ferror@plt+0x31a8>
  405b0c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  405b10:	add	x2, x2, #0xb68
  405b14:	mov	w1, #0x0                   	// #0
  405b18:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405b1c:	ldr	w0, [x0, #1644]
  405b20:	bl	402c80 <ferror@plt+0x290>
  405b24:	bl	402720 <abort@plt>
  405b28:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  405b2c:	ldr	w1, [x2, #1660]
  405b30:	orr	w0, w1, w0
  405b34:	str	w0, [x2, #1660]
  405b38:	b	405afc <ferror@plt+0x310c>
  405b3c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405b40:	ldr	w0, [x0, #1644]
  405b44:	ldr	x1, [x19, #8]
  405b48:	ldr	x3, [x1, #8]
  405b4c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  405b50:	add	x2, x2, #0xb40
  405b54:	mov	w1, #0x0                   	// #0
  405b58:	bl	402c80 <ferror@plt+0x290>
  405b5c:	b	405afc <ferror@plt+0x310c>
  405b60:	bl	4082a8 <ferror@plt+0x58b8>
  405b64:	tbz	w0, #31, 405b98 <ferror@plt+0x31a8>
  405b68:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405b6c:	ldr	w0, [x0, #1644]
  405b70:	b	405b44 <ferror@plt+0x3154>
  405b74:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  405b78:	ldr	w0, [x0, #1644]
  405b7c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  405b80:	add	x3, x3, #0x6c0
  405b84:	b	405b4c <ferror@plt+0x315c>
  405b88:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  405b8c:	add	x0, x0, #0x6c0
  405b90:	bl	4082a8 <ferror@plt+0x58b8>
  405b94:	tbnz	w0, #31, 405b74 <ferror@plt+0x3184>
  405b98:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  405b9c:	str	w0, [x1, #1660]
  405ba0:	b	405afc <ferror@plt+0x310c>
  405ba4:	stp	x29, x30, [sp, #-32]!
  405ba8:	mov	x29, sp
  405bac:	stp	x19, x20, [sp, #16]
  405bb0:	mov	w20, w1
  405bb4:	mov	x19, x2
  405bb8:	mov	w3, #0x3                   	// #3
  405bbc:	mov	w2, #0x1                   	// #1
  405bc0:	ldr	x0, [x19]
  405bc4:	bl	4035b8 <ferror@plt+0xbc8>
  405bc8:	and	w0, w0, #0xff
  405bcc:	cbnz	w0, 405bfc <ferror@plt+0x320c>
  405bd0:	mov	x0, #0x0                   	// #0
  405bd4:	cmp	w20, #0x1
  405bd8:	b.le	405be4 <ferror@plt+0x31f4>
  405bdc:	ldr	x0, [x19, #8]
  405be0:	ldr	x0, [x0, #8]
  405be4:	mov	x1, #0x0                   	// #0
  405be8:	cmp	w20, #0x2
  405bec:	b.le	405bf8 <ferror@plt+0x3208>
  405bf0:	ldr	x1, [x19, #16]
  405bf4:	ldr	x1, [x1, #8]
  405bf8:	bl	40c024 <ferror@plt+0x9634>
  405bfc:	ldp	x19, x20, [sp, #16]
  405c00:	ldp	x29, x30, [sp], #32
  405c04:	ret
  405c08:	stp	x29, x30, [sp, #-32]!
  405c0c:	mov	x29, sp
  405c10:	stp	x19, x20, [sp, #16]
  405c14:	mov	w20, w1
  405c18:	mov	x19, x2
  405c1c:	mov	w3, #0x3                   	// #3
  405c20:	mov	w2, #0x1                   	// #1
  405c24:	ldr	x0, [x19]
  405c28:	bl	4035b8 <ferror@plt+0xbc8>
  405c2c:	and	w0, w0, #0xff
  405c30:	cbnz	w0, 405c60 <ferror@plt+0x3270>
  405c34:	mov	x0, #0x0                   	// #0
  405c38:	cmp	w20, #0x1
  405c3c:	b.le	405c48 <ferror@plt+0x3258>
  405c40:	ldr	x0, [x19, #8]
  405c44:	ldr	x0, [x0, #8]
  405c48:	mov	x1, #0x0                   	// #0
  405c4c:	cmp	w20, #0x2
  405c50:	b.le	405c5c <ferror@plt+0x326c>
  405c54:	ldr	x1, [x19, #16]
  405c58:	ldr	x1, [x1, #8]
  405c5c:	bl	40c0d8 <ferror@plt+0x96e8>
  405c60:	ldp	x19, x20, [sp, #16]
  405c64:	ldp	x29, x30, [sp], #32
  405c68:	ret
  405c6c:	sub	sp, sp, #0x250
  405c70:	stp	x29, x30, [sp]
  405c74:	mov	x29, sp
  405c78:	stp	x19, x20, [sp, #16]
  405c7c:	stp	x21, x22, [sp, #32]
  405c80:	mov	x19, x0
  405c84:	mov	w20, w1
  405c88:	mov	x22, x2
  405c8c:	cmp	w1, #0x1
  405c90:	b.le	405d40 <ferror@plt+0x3350>
  405c94:	ldr	x0, [x2, #8]
  405c98:	ldr	x21, [x0, #8]
  405c9c:	cmp	w20, #0x2
  405ca0:	b.le	405da0 <ferror@plt+0x33b0>
  405ca4:	stp	x23, x24, [sp, #48]
  405ca8:	ldr	x0, [x22, #16]
  405cac:	ldr	x23, [x0, #8]
  405cb0:	mov	w3, #0x4                   	// #4
  405cb4:	mov	w2, #0x3                   	// #3
  405cb8:	mov	w1, w20
  405cbc:	ldr	x0, [x22]
  405cc0:	bl	4035b8 <ferror@plt+0xbc8>
  405cc4:	and	w0, w0, #0xff
  405cc8:	cbnz	w0, 405d4c <ferror@plt+0x335c>
  405ccc:	ldrb	w0, [x21]
  405cd0:	cbz	w0, 4060c4 <ferror@plt+0x36d4>
  405cd4:	ldrb	w0, [x23]
  405cd8:	cbz	w0, 405dc0 <ferror@plt+0x33d0>
  405cdc:	stp	x25, x26, [sp, #64]
  405ce0:	cmp	w20, #0x3
  405ce4:	b.le	405dfc <ferror@plt+0x340c>
  405ce8:	ldr	x0, [x22, #24]
  405cec:	ldr	x25, [x0, #8]
  405cf0:	mov	w1, #0x2d                  	// #45
  405cf4:	mov	x0, x25
  405cf8:	bl	402860 <strchr@plt>
  405cfc:	cbz	x0, 405d1c <ferror@plt+0x332c>
  405d00:	mov	x1, x19
  405d04:	mov	x0, x25
  405d08:	bl	403a34 <ferror@plt+0x1044>
  405d0c:	mov	x25, x0
  405d10:	cbz	x0, 405dd8 <ferror@plt+0x33e8>
  405d14:	ldrb	w0, [x0]
  405d18:	cbz	w0, 405dd8 <ferror@plt+0x33e8>
  405d1c:	ldrb	w0, [x23, #1]
  405d20:	cbz	w0, 405d2c <ferror@plt+0x333c>
  405d24:	ldrb	w0, [x23, #2]
  405d28:	cbnz	w0, 405f5c <ferror@plt+0x356c>
  405d2c:	mov	x0, x21
  405d30:	bl	4023d0 <strlen@plt>
  405d34:	mov	x24, x0
  405d38:	mov	x26, #0x1                   	// #1
  405d3c:	b	405e40 <ferror@plt+0x3450>
  405d40:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x6c>
  405d44:	add	x21, x21, #0x6c0
  405d48:	b	405c9c <ferror@plt+0x32ac>
  405d4c:	ldp	x23, x24, [sp, #48]
  405d50:	mov	x0, x21
  405d54:	bl	4023d0 <strlen@plt>
  405d58:	mov	x20, x0
  405d5c:	ldr	x0, [x19, #32]
  405d60:	ldr	x1, [x19, #24]
  405d64:	sub	x0, x0, x1
  405d68:	cmp	x20, x0
  405d6c:	b.hi	405dc8 <ferror@plt+0x33d8>  // b.pmore
  405d70:	mov	x2, x20
  405d74:	mov	x1, x21
  405d78:	ldr	x0, [x19, #24]
  405d7c:	bl	402390 <memcpy@plt>
  405d80:	ldr	x0, [x19, #24]
  405d84:	add	x20, x0, x20
  405d88:	str	x20, [x19, #24]
  405d8c:	ldp	x19, x20, [sp, #16]
  405d90:	ldp	x21, x22, [sp, #32]
  405d94:	ldp	x29, x30, [sp]
  405d98:	add	sp, sp, #0x250
  405d9c:	ret
  405da0:	mov	w3, #0x4                   	// #4
  405da4:	mov	w2, #0x3                   	// #3
  405da8:	mov	w1, w20
  405dac:	ldr	x0, [x22]
  405db0:	bl	4035b8 <ferror@plt+0xbc8>
  405db4:	cmp	w20, #0x1
  405db8:	b.le	405d8c <ferror@plt+0x339c>
  405dbc:	b	405d50 <ferror@plt+0x3360>
  405dc0:	ldp	x23, x24, [sp, #48]
  405dc4:	b	405db4 <ferror@plt+0x33c4>
  405dc8:	mov	x1, x20
  405dcc:	mov	x0, x19
  405dd0:	bl	416dc4 <_obstack_newchunk@@Base>
  405dd4:	b	405d70 <ferror@plt+0x3380>
  405dd8:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x106c>
  405ddc:	add	x3, x3, #0xfe8
  405de0:	add	x3, x3, #0x28
  405de4:	mov	w2, #0x752                 	// #1874
  405de8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  405dec:	add	x1, x1, #0x9e8
  405df0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  405df4:	add	x0, x0, #0xb98
  405df8:	bl	402960 <__assert_fail@plt>
  405dfc:	adrp	x25, 417000 <_obstack_memory_used@@Base+0x6c>
  405e00:	add	x25, x25, #0x6c0
  405e04:	b	405d1c <ferror@plt+0x332c>
  405e08:	mov	x1, x20
  405e0c:	mov	x0, x19
  405e10:	bl	416dc4 <_obstack_newchunk@@Base>
  405e14:	b	405e74 <ferror@plt+0x3484>
  405e18:	ldrb	w0, [x25]
  405e1c:	cbz	w0, 405e40 <ferror@plt+0x3450>
  405e20:	ldr	x0, [x19, #32]
  405e24:	cmp	x1, x0
  405e28:	b.eq	405ef0 <ferror@plt+0x3500>  // b.none
  405e2c:	ldr	x0, [x19, #24]
  405e30:	add	x1, x0, #0x1
  405e34:	str	x1, [x19, #24]
  405e38:	ldrb	w1, [x25]
  405e3c:	strb	w1, [x0]
  405e40:	mov	x3, x24
  405e44:	ldrb	w2, [x23, #1]
  405e48:	ldrb	w1, [x23]
  405e4c:	mov	x0, x21
  405e50:	bl	41334c <ferror@plt+0x1095c>
  405e54:	mov	x22, x0
  405e58:	cbz	x0, 405f10 <ferror@plt+0x3520>
  405e5c:	sub	x20, x22, x21
  405e60:	ldr	x0, [x19, #32]
  405e64:	ldr	x1, [x19, #24]
  405e68:	sub	x0, x0, x1
  405e6c:	cmp	x20, x0
  405e70:	b.hi	405e08 <ferror@plt+0x3418>  // b.pmore
  405e74:	mov	x2, x20
  405e78:	mov	x1, x21
  405e7c:	ldr	x0, [x19, #24]
  405e80:	bl	402390 <memcpy@plt>
  405e84:	ldr	x1, [x19, #24]
  405e88:	add	x1, x1, x20
  405e8c:	str	x1, [x19, #24]
  405e90:	subs	x20, x24, x20
  405e94:	b.eq	4060cc <ferror@plt+0x36dc>  // b.none
  405e98:	mov	x21, x22
  405e9c:	sub	x24, x20, #0x1
  405ea0:	ldrb	w0, [x21], #1
  405ea4:	ldrb	w2, [x23]
  405ea8:	cmp	w2, w0
  405eac:	b.eq	405e18 <ferror@plt+0x3428>  // b.none
  405eb0:	ldrb	w2, [x23, #1]
  405eb4:	cmp	w2, w0
  405eb8:	b.ne	405e40 <ferror@plt+0x3450>  // b.any
  405ebc:	ldrb	w0, [x25]
  405ec0:	cbz	w0, 405e40 <ferror@plt+0x3450>
  405ec4:	ldrb	w0, [x25, #1]
  405ec8:	cbz	w0, 405e40 <ferror@plt+0x3450>
  405ecc:	ldr	x0, [x19, #32]
  405ed0:	cmp	x1, x0
  405ed4:	b.eq	405f00 <ferror@plt+0x3510>  // b.none
  405ed8:	ldr	x0, [x19, #24]
  405edc:	add	x1, x0, #0x1
  405ee0:	str	x1, [x19, #24]
  405ee4:	ldrb	w1, [x25, #1]
  405ee8:	strb	w1, [x0]
  405eec:	b	405e40 <ferror@plt+0x3450>
  405ef0:	mov	x1, x26
  405ef4:	mov	x0, x19
  405ef8:	bl	416dc4 <_obstack_newchunk@@Base>
  405efc:	b	405e2c <ferror@plt+0x343c>
  405f00:	mov	x1, x26
  405f04:	mov	x0, x19
  405f08:	bl	416dc4 <_obstack_newchunk@@Base>
  405f0c:	b	405ed8 <ferror@plt+0x34e8>
  405f10:	ldr	x0, [x19, #32]
  405f14:	ldr	x1, [x19, #24]
  405f18:	sub	x0, x0, x1
  405f1c:	cmp	x24, x0
  405f20:	b.hi	405f4c <ferror@plt+0x355c>  // b.pmore
  405f24:	mov	x2, x24
  405f28:	mov	x1, x21
  405f2c:	ldr	x0, [x19, #24]
  405f30:	bl	402390 <memcpy@plt>
  405f34:	ldr	x20, [x19, #24]
  405f38:	add	x20, x20, x24
  405f3c:	str	x20, [x19, #24]
  405f40:	ldp	x23, x24, [sp, #48]
  405f44:	ldp	x25, x26, [sp, #64]
  405f48:	b	405d8c <ferror@plt+0x339c>
  405f4c:	mov	x1, x24
  405f50:	mov	x0, x19
  405f54:	bl	416dc4 <_obstack_newchunk@@Base>
  405f58:	b	405f24 <ferror@plt+0x3534>
  405f5c:	mov	w1, #0x2d                  	// #45
  405f60:	mov	x0, x23
  405f64:	bl	402860 <strchr@plt>
  405f68:	cbz	x0, 405f88 <ferror@plt+0x3598>
  405f6c:	mov	x1, x19
  405f70:	mov	x0, x23
  405f74:	bl	403a34 <ferror@plt+0x1044>
  405f78:	mov	x23, x0
  405f7c:	cbz	x0, 405fc4 <ferror@plt+0x35d4>
  405f80:	ldrb	w0, [x0]
  405f84:	cbz	w0, 405fc4 <ferror@plt+0x35d4>
  405f88:	mov	x21, #0x100                 	// #256
  405f8c:	mov	x2, x21
  405f90:	mov	w1, #0x0                   	// #0
  405f94:	add	x0, sp, #0x150
  405f98:	bl	402610 <memset@plt>
  405f9c:	mov	x2, x21
  405fa0:	mov	w1, #0x0                   	// #0
  405fa4:	add	x0, sp, #0x50
  405fa8:	bl	402610 <memset@plt>
  405fac:	ldrb	w0, [x23]
  405fb0:	cbz	w0, 406014 <ferror@plt+0x3624>
  405fb4:	add	x2, sp, #0x50
  405fb8:	mov	w4, #0x1                   	// #1
  405fbc:	add	x3, sp, #0x150
  405fc0:	b	405ffc <ferror@plt+0x360c>
  405fc4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x106c>
  405fc8:	add	x3, x3, #0xfe8
  405fcc:	add	x3, x3, #0x28
  405fd0:	mov	w2, #0x770                 	// #1904
  405fd4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  405fd8:	add	x1, x1, #0x9e8
  405fdc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  405fe0:	add	x0, x0, #0xba8
  405fe4:	bl	402960 <__assert_fail@plt>
  405fe8:	ldrb	w0, [x25]
  405fec:	cmp	w0, #0x0
  405ff0:	cinc	x25, x25, ne  // ne = any
  405ff4:	ldrb	w0, [x23, #1]!
  405ff8:	cbz	w0, 406014 <ferror@plt+0x3624>
  405ffc:	ldrb	w1, [x2, w0, sxtw]
  406000:	cbnz	w1, 405fe8 <ferror@plt+0x35f8>
  406004:	strb	w4, [x2, w0, sxtw]
  406008:	ldrb	w1, [x25]
  40600c:	strb	w1, [x3, w0, sxtw]
  406010:	b	405fe8 <ferror@plt+0x35f8>
  406014:	cmp	w20, #0x1
  406018:	b.le	4060d8 <ferror@plt+0x36e8>
  40601c:	ldr	x0, [x22, #8]
  406020:	ldr	x21, [x0, #8]
  406024:	ldrb	w20, [x21]
  406028:	cbz	w20, 4060e4 <ferror@plt+0x36f4>
  40602c:	add	x22, sp, #0x50
  406030:	add	x23, sp, #0x150
  406034:	mov	x24, #0x1                   	// #1
  406038:	b	406054 <ferror@plt+0x3664>
  40603c:	ldr	x0, [x19, #24]
  406040:	add	x1, x0, #0x1
  406044:	str	x1, [x19, #24]
  406048:	strb	w20, [x0]
  40604c:	ldrb	w20, [x21, #1]!
  406050:	cbz	w20, 4060b8 <ferror@plt+0x36c8>
  406054:	ldrb	w0, [x22, w20, sxtw]
  406058:	cbnz	w0, 40607c <ferror@plt+0x368c>
  40605c:	ldr	x1, [x19, #32]
  406060:	ldr	x0, [x19, #24]
  406064:	cmp	x1, x0
  406068:	b.ne	40603c <ferror@plt+0x364c>  // b.any
  40606c:	mov	x1, x24
  406070:	mov	x0, x19
  406074:	bl	416dc4 <_obstack_newchunk@@Base>
  406078:	b	40603c <ferror@plt+0x364c>
  40607c:	ldrb	w20, [x23, w20, sxtw]
  406080:	cbz	w20, 40604c <ferror@plt+0x365c>
  406084:	ldr	x1, [x19, #32]
  406088:	ldr	x0, [x19, #24]
  40608c:	cmp	x1, x0
  406090:	b.eq	4060a8 <ferror@plt+0x36b8>  // b.none
  406094:	ldr	x0, [x19, #24]
  406098:	add	x1, x0, #0x1
  40609c:	str	x1, [x19, #24]
  4060a0:	strb	w20, [x0]
  4060a4:	b	40604c <ferror@plt+0x365c>
  4060a8:	mov	x1, x24
  4060ac:	mov	x0, x19
  4060b0:	bl	416dc4 <_obstack_newchunk@@Base>
  4060b4:	b	406094 <ferror@plt+0x36a4>
  4060b8:	ldp	x23, x24, [sp, #48]
  4060bc:	ldp	x25, x26, [sp, #64]
  4060c0:	b	405d8c <ferror@plt+0x339c>
  4060c4:	ldp	x23, x24, [sp, #48]
  4060c8:	b	405d50 <ferror@plt+0x3360>
  4060cc:	ldp	x23, x24, [sp, #48]
  4060d0:	ldp	x25, x26, [sp, #64]
  4060d4:	b	405d8c <ferror@plt+0x339c>
  4060d8:	ldp	x23, x24, [sp, #48]
  4060dc:	ldp	x25, x26, [sp, #64]
  4060e0:	b	405d8c <ferror@plt+0x339c>
  4060e4:	ldp	x23, x24, [sp, #48]
  4060e8:	ldp	x25, x26, [sp, #64]
  4060ec:	b	405d8c <ferror@plt+0x339c>
  4060f0:	stp	x29, x30, [sp, #-208]!
  4060f4:	mov	x29, sp
  4060f8:	stp	x19, x20, [sp, #16]
  4060fc:	stp	x23, x24, [sp, #48]
  406100:	stp	x25, x26, [sp, #64]
  406104:	mov	x20, x0
  406108:	mov	w24, w1
  40610c:	mov	x25, x2
  406110:	mov	w3, #0x4                   	// #4
  406114:	mov	w2, #0x3                   	// #3
  406118:	ldr	x0, [x25]
  40611c:	bl	4035b8 <ferror@plt+0xbc8>
  406120:	and	w0, w0, #0xff
  406124:	cbz	w0, 40619c <ferror@plt+0x37ac>
  406128:	cmp	w24, #0x2
  40612c:	b.eq	406144 <ferror@plt+0x3754>  // b.none
  406130:	ldp	x19, x20, [sp, #16]
  406134:	ldp	x23, x24, [sp, #48]
  406138:	ldp	x25, x26, [sp, #64]
  40613c:	ldp	x29, x30, [sp], #208
  406140:	ret
  406144:	ldr	x0, [x25, #8]
  406148:	ldr	x0, [x0, #8]
  40614c:	bl	4023d0 <strlen@plt>
  406150:	mov	x19, x0
  406154:	ldr	x0, [x20, #32]
  406158:	ldr	x1, [x20, #24]
  40615c:	sub	x0, x0, x1
  406160:	cmp	x19, x0
  406164:	b.hi	40618c <ferror@plt+0x379c>  // b.pmore
  406168:	ldr	x0, [x25, #8]
  40616c:	mov	x2, x19
  406170:	ldr	x1, [x0, #8]
  406174:	ldr	x0, [x20, #24]
  406178:	bl	402390 <memcpy@plt>
  40617c:	ldr	x0, [x20, #24]
  406180:	add	x19, x0, x19
  406184:	str	x19, [x20, #24]
  406188:	b	406130 <ferror@plt+0x3740>
  40618c:	mov	x1, x19
  406190:	mov	x0, x20
  406194:	bl	416dc4 <_obstack_newchunk@@Base>
  406198:	b	406168 <ferror@plt+0x3778>
  40619c:	stp	x27, x28, [sp, #80]
  4061a0:	ldr	x0, [x25, #16]
  4061a4:	ldr	x27, [x0, #8]
  4061a8:	str	xzr, [sp, #184]
  4061ac:	str	xzr, [sp, #176]
  4061b0:	str	xzr, [sp, #144]
  4061b4:	str	xzr, [sp, #152]
  4061b8:	str	xzr, [sp, #128]
  4061bc:	str	xzr, [sp, #136]
  4061c0:	mov	x0, x27
  4061c4:	bl	4023d0 <strlen@plt>
  4061c8:	add	x2, sp, #0x90
  4061cc:	mov	x1, x0
  4061d0:	mov	x0, x27
  4061d4:	bl	402730 <re_compile_pattern@plt>
  4061d8:	cbnz	x0, 406208 <ferror@plt+0x3818>
  4061dc:	stp	x21, x22, [sp, #32]
  4061e0:	ldr	x0, [x25, #8]
  4061e4:	ldr	x22, [x0, #8]
  4061e8:	mov	x0, x22
  4061ec:	bl	4023d0 <strlen@plt>
  4061f0:	str	x0, [sp, #104]
  4061f4:	mov	w21, w0
  4061f8:	mov	w19, #0x0                   	// #0
  4061fc:	adrp	x28, 417000 <_obstack_memory_used@@Base+0x6c>
  406200:	add	x26, x28, #0x6c0
  406204:	b	40634c <ferror@plt+0x395c>
  406208:	mov	x4, x0
  40620c:	mov	x3, x27
  406210:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  406214:	add	x2, x2, #0xbb8
  406218:	mov	w1, #0x0                   	// #0
  40621c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406220:	ldr	w0, [x0, #1644]
  406224:	bl	402c80 <ferror@plt+0x290>
  406228:	ldr	x0, [sp, #144]
  40622c:	bl	402810 <free@plt>
  406230:	ldp	x27, x28, [sp, #80]
  406234:	b	406130 <ferror@plt+0x3740>
  406238:	cmn	w0, #0x2
  40623c:	b.eq	4062b8 <ferror@plt+0x38c8>  // b.none
  406240:	ldr	w0, [sp, #104]
  406244:	cmp	w19, w0
  406248:	b.ge	406280 <ferror@plt+0x3890>  // b.tcont
  40624c:	sxtw	x21, w23
  406250:	ldr	x0, [x20, #32]
  406254:	ldr	x1, [x20, #24]
  406258:	sub	x0, x0, x1
  40625c:	cmp	x0, w23, sxtw
  406260:	b.cc	4062d8 <ferror@plt+0x38e8>  // b.lo, b.ul, b.last
  406264:	mov	x2, x21
  406268:	add	x1, x22, w19, sxtw
  40626c:	ldr	x0, [x20, #24]
  406270:	bl	402390 <memcpy@plt>
  406274:	ldr	x0, [x20, #24]
  406278:	add	x0, x0, x21
  40627c:	str	x0, [x20, #24]
  406280:	ldr	x1, [x20, #32]
  406284:	ldr	x0, [x20, #24]
  406288:	cmp	x1, x0
  40628c:	b.eq	4063dc <ferror@plt+0x39ec>  // b.none
  406290:	ldr	x0, [x20, #24]
  406294:	add	x1, x0, #0x1
  406298:	str	x1, [x20, #24]
  40629c:	strb	wzr, [x0]
  4062a0:	add	x1, sp, #0x78
  4062a4:	add	x0, sp, #0x90
  4062a8:	bl	404a2c <ferror@plt+0x203c>
  4062ac:	ldp	x21, x22, [sp, #32]
  4062b0:	ldp	x27, x28, [sp, #80]
  4062b4:	b	406130 <ferror@plt+0x3740>
  4062b8:	mov	x3, x27
  4062bc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4062c0:	add	x2, x2, #0xbd8
  4062c4:	mov	w1, #0x0                   	// #0
  4062c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4062cc:	ldr	w0, [x0, #1644]
  4062d0:	bl	402c80 <ferror@plt+0x290>
  4062d4:	b	406280 <ferror@plt+0x3890>
  4062d8:	mov	x1, x21
  4062dc:	mov	x0, x20
  4062e0:	bl	416dc4 <_obstack_newchunk@@Base>
  4062e4:	b	406264 <ferror@plt+0x3874>
  4062e8:	mov	x1, x23
  4062ec:	mov	x0, x20
  4062f0:	bl	416dc4 <_obstack_newchunk@@Base>
  4062f4:	mov	x2, x23
  4062f8:	add	x1, x22, w19, sxtw
  4062fc:	ldr	x0, [x20, #24]
  406300:	bl	402390 <memcpy@plt>
  406304:	ldr	x0, [x20, #24]
  406308:	add	x23, x0, x23
  40630c:	str	x23, [x20, #24]
  406310:	mov	x2, x26
  406314:	cmp	w24, #0x3
  406318:	b.le	406324 <ferror@plt+0x3934>
  40631c:	ldr	x0, [x25, #24]
  406320:	ldr	x2, [x0, #8]
  406324:	add	x3, sp, #0x78
  406328:	mov	x1, x22
  40632c:	mov	x0, x20
  406330:	bl	4043e4 <ferror@plt+0x19f4>
  406334:	ldr	x0, [sp, #136]
  406338:	ldr	w19, [x0]
  40633c:	ldr	x0, [sp, #128]
  406340:	ldr	w0, [x0]
  406344:	cmp	w0, w19
  406348:	b.eq	4063a0 <ferror@plt+0x39b0>  // b.none
  40634c:	cmp	w19, w21
  406350:	b.gt	406280 <ferror@plt+0x3890>
  406354:	sub	w23, w21, w19
  406358:	add	x5, sp, #0x78
  40635c:	mov	w4, w23
  406360:	mov	w3, w19
  406364:	mov	w2, w21
  406368:	mov	x1, x22
  40636c:	add	x0, sp, #0x90
  406370:	bl	402680 <re_search@plt>
  406374:	tbnz	w0, #31, 406238 <ferror@plt+0x3848>
  406378:	cmp	w19, w0
  40637c:	b.ge	406310 <ferror@plt+0x3920>  // b.tcont
  406380:	sub	w0, w0, w19
  406384:	sxtw	x23, w0
  406388:	ldr	x1, [x20, #32]
  40638c:	ldr	x2, [x20, #24]
  406390:	sub	x1, x1, x2
  406394:	cmp	x1, w0, sxtw
  406398:	b.cs	4062f4 <ferror@plt+0x3904>  // b.hs, b.nlast
  40639c:	b	4062e8 <ferror@plt+0x38f8>
  4063a0:	ldr	x1, [x20, #32]
  4063a4:	ldr	x0, [x20, #24]
  4063a8:	cmp	x1, x0
  4063ac:	b.eq	4063cc <ferror@plt+0x39dc>  // b.none
  4063b0:	ldr	x0, [x20, #24]
  4063b4:	add	x1, x0, #0x1
  4063b8:	str	x1, [x20, #24]
  4063bc:	ldrb	w1, [x22, w19, sxtw]
  4063c0:	strb	w1, [x0]
  4063c4:	add	w19, w19, #0x1
  4063c8:	b	406200 <ferror@plt+0x3810>
  4063cc:	mov	x1, #0x1                   	// #1
  4063d0:	mov	x0, x20
  4063d4:	bl	416dc4 <_obstack_newchunk@@Base>
  4063d8:	b	4063b0 <ferror@plt+0x39c0>
  4063dc:	mov	x1, #0x1                   	// #1
  4063e0:	mov	x0, x20
  4063e4:	bl	416dc4 <_obstack_newchunk@@Base>
  4063e8:	b	406290 <ferror@plt+0x38a0>
  4063ec:	mov	x3, x0
  4063f0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  4063f4:	add	x1, x1, #0xfe8
  4063f8:	add	x0, x1, #0x38
  4063fc:	b	406404 <ferror@plt+0x3a14>
  406400:	mov	x0, x1
  406404:	ldr	x1, [x0, #16]
  406408:	cmp	x1, x3
  40640c:	b.eq	406430 <ferror@plt+0x3a40>  // b.none
  406410:	add	x1, x0, #0x18
  406414:	ldr	x2, [x0, #24]
  406418:	cbnz	x2, 406400 <ferror@plt+0x3a10>
  40641c:	add	x1, x0, #0x30
  406420:	adrp	x0, 403000 <ferror@plt+0x610>
  406424:	add	x0, x0, #0x654
  406428:	cmp	x3, x0
  40642c:	csel	x0, x1, x2, eq  // eq = none
  406430:	ret
  406434:	stp	x29, x30, [sp, #-96]!
  406438:	mov	x29, sp
  40643c:	stp	x19, x20, [sp, #16]
  406440:	stp	x21, x22, [sp, #32]
  406444:	mov	x21, x0
  406448:	str	x0, [sp, #72]
  40644c:	ldr	x0, [x0, #16]
  406450:	str	x0, [sp, #80]
  406454:	str	wzr, [sp, #88]
  406458:	cmp	w1, #0x1
  40645c:	b.eq	40648c <ferror@plt+0x3a9c>  // b.none
  406460:	b.le	4064f4 <ferror@plt+0x3b04>
  406464:	stp	x23, x24, [sp, #48]
  406468:	add	x19, x2, #0x8
  40646c:	sub	w1, w1, #0x2
  406470:	add	x2, x2, #0x10
  406474:	add	x20, x2, x1, lsl #3
  406478:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x106c>
  40647c:	add	x24, x24, #0xa98
  406480:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1906c>
  406484:	add	x23, x23, #0x66c
  406488:	b	4064c4 <ferror@plt+0x3ad4>
  40648c:	add	x1, sp, #0x48
  406490:	adrp	x0, 403000 <ferror@plt+0x610>
  406494:	add	x0, x0, #0xc48
  406498:	bl	40fa4c <ferror@plt+0xd05c>
  40649c:	b	4064f4 <ferror@plt+0x3b04>
  4064a0:	ldr	x0, [x22]
  4064a4:	ldr	x3, [x0, #8]
  4064a8:	mov	x2, x24
  4064ac:	mov	w1, #0x0                   	// #0
  4064b0:	ldr	w0, [x23]
  4064b4:	bl	402c80 <ferror@plt+0x290>
  4064b8:	add	x19, x19, #0x8
  4064bc:	cmp	x19, x20
  4064c0:	b.eq	4064f0 <ferror@plt+0x3b00>  // b.none
  4064c4:	mov	x22, x19
  4064c8:	ldr	x2, [x19]
  4064cc:	mov	w1, #0x0                   	// #0
  4064d0:	ldr	x0, [x2, #8]
  4064d4:	bl	40f714 <ferror@plt+0xcd24>
  4064d8:	cbz	x0, 4064a0 <ferror@plt+0x3ab0>
  4064dc:	ldr	w1, [x0, #24]
  4064e0:	cbz	w1, 4064a0 <ferror@plt+0x3ab0>
  4064e4:	add	x1, sp, #0x48
  4064e8:	bl	403c48 <ferror@plt+0x1258>
  4064ec:	b	4064b8 <ferror@plt+0x3ac8>
  4064f0:	ldp	x23, x24, [sp, #48]
  4064f4:	ldr	x1, [x21, #24]
  4064f8:	ldr	x0, [x21, #16]
  4064fc:	cmp	x1, x0
  406500:	b.eq	40656c <ferror@plt+0x3b7c>  // b.none
  406504:	ldr	x0, [x21, #48]
  406508:	add	x1, x1, x0
  40650c:	bic	x0, x1, x0
  406510:	ldr	x1, [x21, #8]
  406514:	ldr	x2, [x21, #32]
  406518:	sub	x3, x0, x1
  40651c:	sub	x1, x2, x1
  406520:	cmp	x3, x1
  406524:	csel	x0, x0, x2, ls  // ls = plast
  406528:	str	x0, [x21, #24]
  40652c:	str	x0, [x21, #16]
  406530:	adrp	x3, 405000 <ferror@plt+0x2610>
  406534:	add	x3, x3, #0x2f8
  406538:	mov	x2, #0x8                   	// #8
  40653c:	ldrsw	x1, [sp, #88]
  406540:	ldr	x0, [sp, #80]
  406544:	bl	4024b0 <qsort@plt>
  406548:	ldr	w0, [sp, #88]
  40654c:	cmp	w0, #0x0
  406550:	b.le	406688 <ferror@plt+0x3c98>
  406554:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  406558:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x106c>
  40655c:	add	x20, x20, #0xc00
  406560:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1906c>
  406564:	add	x21, x21, #0x67c
  406568:	b	4065ec <ferror@plt+0x3bfc>
  40656c:	ldrb	w0, [x21, #80]
  406570:	orr	w0, w0, #0x2
  406574:	strb	w0, [x21, #80]
  406578:	b	406504 <ferror@plt+0x3b14>
  40657c:	stp	x23, x24, [sp, #48]
  406580:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  406584:	add	x2, x2, #0xc50
  406588:	mov	w1, #0x0                   	// #0
  40658c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406590:	ldr	w0, [x0, #1644]
  406594:	bl	402c80 <ferror@plt+0x290>
  406598:	bl	402720 <abort@plt>
  40659c:	ldr	w0, [x21]
  4065a0:	tbz	w0, #2, 406650 <ferror@plt+0x3c60>
  4065a4:	ldr	x0, [x19, #2032]
  4065a8:	cbz	x0, 4065cc <ferror@plt+0x3bdc>
  4065ac:	adrp	x2, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4065b0:	ldr	x4, [x2, #3480]
  4065b4:	ldr	x3, [x1, #32]
  4065b8:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4065bc:	ldr	x2, [x1, #3424]
  4065c0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  4065c4:	add	x1, x1, #0xc08
  4065c8:	bl	4164c0 <ferror@plt+0x13ad0>
  4065cc:	ldr	w0, [sp, #88]
  4065d0:	sub	w0, w0, #0x1
  4065d4:	str	w0, [sp, #88]
  4065d8:	ldr	x1, [sp, #80]
  4065dc:	add	x1, x1, #0x8
  4065e0:	str	x1, [sp, #80]
  4065e4:	cmp	w0, #0x0
  4065e8:	b.le	406688 <ferror@plt+0x3c98>
  4065ec:	ldr	x0, [x19, #2032]
  4065f0:	cbz	x0, 406608 <ferror@plt+0x3c18>
  4065f4:	ldr	x1, [sp, #80]
  4065f8:	ldr	x1, [x1]
  4065fc:	ldr	x2, [x1, #16]
  406600:	mov	x1, x20
  406604:	bl	4164c0 <ferror@plt+0x13ad0>
  406608:	ldr	x0, [sp, #80]
  40660c:	ldr	x1, [x0]
  406610:	ldr	w0, [x1, #24]
  406614:	cmp	w0, #0x1
  406618:	b.eq	40659c <ferror@plt+0x3bac>  // b.none
  40661c:	cmp	w0, #0x2
  406620:	b.ne	40657c <ferror@plt+0x3b8c>  // b.any
  406624:	ldr	x0, [x1, #32]
  406628:	bl	4063ec <ferror@plt+0x39fc>
  40662c:	mov	x1, x0
  406630:	cbz	x0, 40666c <ferror@plt+0x3c7c>
  406634:	ldr	x0, [x19, #2032]
  406638:	cbz	x0, 4065cc <ferror@plt+0x3bdc>
  40663c:	ldr	x2, [x1]
  406640:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  406644:	add	x1, x1, #0xc48
  406648:	bl	4164c0 <ferror@plt+0x13ad0>
  40664c:	b	4065cc <ferror@plt+0x3bdc>
  406650:	ldr	x0, [x19, #2032]
  406654:	cbz	x0, 4065cc <ferror@plt+0x3bdc>
  406658:	ldr	x2, [x1, #32]
  40665c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x406c>
  406660:	add	x1, x1, #0x38
  406664:	bl	4164c0 <ferror@plt+0x13ad0>
  406668:	b	4065cc <ferror@plt+0x3bdc>
  40666c:	stp	x23, x24, [sp, #48]
  406670:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  406674:	add	x2, x2, #0xc10
  406678:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40667c:	ldr	w0, [x0, #1644]
  406680:	bl	402c80 <ferror@plt+0x290>
  406684:	bl	402720 <abort@plt>
  406688:	ldp	x19, x20, [sp, #16]
  40668c:	ldp	x21, x22, [sp, #32]
  406690:	ldp	x29, x30, [sp], #96
  406694:	ret
  406698:	stp	x29, x30, [sp, #-32]!
  40669c:	mov	x29, sp
  4066a0:	stp	x19, x20, [sp, #16]
  4066a4:	mov	x20, x0
  4066a8:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x106c>
  4066ac:	add	x19, x19, #0xfe8
  4066b0:	add	x19, x19, #0x38
  4066b4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  4066b8:	add	x0, x1, #0xc88
  4066bc:	b	4066c4 <ferror@plt+0x3cd4>
  4066c0:	mov	x19, x1
  4066c4:	mov	x1, x20
  4066c8:	bl	4027b0 <strcmp@plt>
  4066cc:	cbz	w0, 4066e0 <ferror@plt+0x3cf0>
  4066d0:	add	x1, x19, #0x18
  4066d4:	ldr	x0, [x19, #24]
  4066d8:	cbnz	x0, 4066c0 <ferror@plt+0x3cd0>
  4066dc:	add	x19, x19, #0x30
  4066e0:	mov	x0, x19
  4066e4:	ldp	x19, x20, [sp, #16]
  4066e8:	ldp	x29, x30, [sp], #32
  4066ec:	ret
  4066f0:	stp	x29, x30, [sp, #-48]!
  4066f4:	mov	x29, sp
  4066f8:	stp	x19, x20, [sp, #16]
  4066fc:	stp	x21, x22, [sp, #32]
  406700:	mov	x21, x0
  406704:	mov	w20, w1
  406708:	mov	x19, x2
  40670c:	mov	w3, #0xffffffff            	// #-1
  406710:	mov	w2, #0x2                   	// #2
  406714:	ldr	x0, [x19]
  406718:	bl	4035b8 <ferror@plt+0xbc8>
  40671c:	and	w2, w0, #0xff
  406720:	cbnz	w2, 40675c <ferror@plt+0x3d6c>
  406724:	ldr	x0, [x19, #8]
  406728:	ldr	w1, [x0]
  40672c:	cmp	w1, #0x1
  406730:	b.eq	406778 <ferror@plt+0x3d88>  // b.none
  406734:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406738:	ldr	w0, [x0, #1644]
  40673c:	cmp	w20, #0x0
  406740:	b.le	40676c <ferror@plt+0x3d7c>
  406744:	ldr	x1, [x19]
  406748:	ldr	x3, [x1, #8]
  40674c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  406750:	add	x2, x2, #0xa70
  406754:	mov	w1, #0x0                   	// #0
  406758:	bl	402c80 <ferror@plt+0x290>
  40675c:	ldp	x19, x20, [sp, #16]
  406760:	ldp	x21, x22, [sp, #32]
  406764:	ldp	x29, x30, [sp], #48
  406768:	ret
  40676c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  406770:	add	x3, x3, #0x6c0
  406774:	b	40674c <ferror@plt+0x3d5c>
  406778:	cmp	w20, #0x1
  40677c:	b.le	4067c4 <ferror@plt+0x3dd4>
  406780:	ldr	x22, [x0, #8]
  406784:	mov	x0, x22
  406788:	bl	406698 <ferror@plt+0x3ca8>
  40678c:	ldr	x2, [x0, #16]
  406790:	adrp	x1, 403000 <ferror@plt+0x610>
  406794:	add	x1, x1, #0x654
  406798:	cmp	x2, x1
  40679c:	b.eq	4067d0 <ferror@plt+0x3de0>  // b.none
  4067a0:	ldrb	w1, [x0, #8]
  4067a4:	tbnz	w1, #1, 40681c <ferror@plt+0x3e2c>
  4067a8:	cmp	w20, #0x2
  4067ac:	b.le	40681c <ferror@plt+0x3e2c>
  4067b0:	mov	x2, #0x2                   	// #2
  4067b4:	mov	w6, #0x1                   	// #1
  4067b8:	adrp	x5, 417000 <_obstack_memory_used@@Base+0x6c>
  4067bc:	add	x5, x5, #0x6c0
  4067c0:	b	406808 <ferror@plt+0x3e18>
  4067c4:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x6c>
  4067c8:	add	x22, x22, #0x6c0
  4067cc:	b	406784 <ferror@plt+0x3d94>
  4067d0:	mov	x3, x22
  4067d4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4067d8:	add	x2, x2, #0xc98
  4067dc:	mov	w1, #0x0                   	// #0
  4067e0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4067e4:	ldr	w0, [x0, #1644]
  4067e8:	bl	402c80 <ferror@plt+0x290>
  4067ec:	b	40675c <ferror@plt+0x3d6c>
  4067f0:	str	w6, [x3]
  4067f4:	ldr	x1, [x19, x2, lsl #3]
  4067f8:	str	x5, [x1, #8]
  4067fc:	add	x2, x2, #0x1
  406800:	cmp	w20, w2
  406804:	b.le	40681c <ferror@plt+0x3e2c>
  406808:	ldr	x3, [x19, x2, lsl #3]
  40680c:	ldr	w4, [x3]
  406810:	cmp	w4, #0x1
  406814:	b.ne	4067f0 <ferror@plt+0x3e00>  // b.any
  406818:	b	4067fc <ferror@plt+0x3e0c>
  40681c:	ldr	x3, [x0, #16]
  406820:	add	x2, x19, #0x8
  406824:	sub	w1, w20, #0x1
  406828:	mov	x0, x21
  40682c:	blr	x3
  406830:	b	40675c <ferror@plt+0x3d6c>
  406834:	stp	x29, x30, [sp, #-32]!
  406838:	mov	x29, sp
  40683c:	str	x19, [sp, #16]
  406840:	mov	x19, x1
  406844:	mov	w1, w2
  406848:	bl	40f714 <ferror@plt+0xcd24>
  40684c:	mov	w1, #0x2                   	// #2
  406850:	str	w1, [x0, #24]
  406854:	ldrb	w1, [x19, #8]
  406858:	ubfx	x1, x1, #1, #1
  40685c:	ldrb	w2, [x0, #8]
  406860:	bfi	w2, w1, #2, #1
  406864:	strb	w2, [x0, #8]
  406868:	ldrb	w1, [x19, #8]
  40686c:	ubfx	x1, x1, #2, #1
  406870:	bfi	w2, w1, #3, #1
  406874:	strb	w2, [x0, #8]
  406878:	ldr	x1, [x19, #16]
  40687c:	str	x1, [x0, #32]
  406880:	ldr	x19, [sp, #16]
  406884:	ldp	x29, x30, [sp], #32
  406888:	ret
  40688c:	stp	x29, x30, [sp, #-32]!
  406890:	mov	x29, sp
  406894:	str	x19, [sp, #16]
  406898:	cbz	x0, 406928 <ferror@plt+0x3f38>
  40689c:	mov	x19, x0
  4068a0:	ldrb	w0, [x0]
  4068a4:	cbz	w0, 40691c <ferror@plt+0x3f2c>
  4068a8:	mov	x0, x19
  4068ac:	bl	4023d0 <strlen@plt>
  4068b0:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  4068b4:	add	x2, x2, #0x688
  4068b8:	add	x2, x2, #0x10
  4068bc:	mov	x1, x0
  4068c0:	mov	x0, x19
  4068c4:	bl	402730 <re_compile_pattern@plt>
  4068c8:	mov	x4, x0
  4068cc:	cbz	x0, 4068e8 <ferror@plt+0x3ef8>
  4068d0:	mov	x3, x19
  4068d4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4068d8:	add	x2, x2, #0xcb0
  4068dc:	mov	w1, #0x0                   	// #0
  4068e0:	mov	w0, #0x1                   	// #1
  4068e4:	bl	402c80 <ferror@plt+0x290>
  4068e8:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  4068ec:	add	x19, x19, #0x688
  4068f0:	add	x1, x19, #0x50
  4068f4:	ldr	x4, [x1, #16]
  4068f8:	ldr	x3, [x1, #8]
  4068fc:	ldr	w2, [x19, #80]
  406900:	add	x0, x19, #0x10
  406904:	bl	402630 <re_set_registers@plt>
  406908:	mov	w0, #0x1                   	// #1
  40690c:	strb	w0, [x19, #8]
  406910:	ldr	x19, [sp, #16]
  406914:	ldp	x29, x30, [sp], #32
  406918:	ret
  40691c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406920:	strb	wzr, [x0, #1680]
  406924:	b	406910 <ferror@plt+0x3f20>
  406928:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x6c>
  40692c:	add	x19, x19, #0x818
  406930:	b	4068a8 <ferror@plt+0x3eb8>
  406934:	stp	x29, x30, [sp, #-16]!
  406938:	mov	x29, sp
  40693c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406940:	add	x0, x0, #0x688
  406944:	add	x1, x0, #0x50
  406948:	add	x0, x0, #0x10
  40694c:	bl	404a2c <ferror@plt+0x203c>
  406950:	ldp	x29, x30, [sp], #16
  406954:	ret
  406958:	stp	x29, x30, [sp, #-80]!
  40695c:	mov	x29, sp
  406960:	stp	x19, x20, [sp, #16]
  406964:	stp	x21, x22, [sp, #32]
  406968:	stp	x23, x24, [sp, #48]
  40696c:	mov	x23, x0
  406970:	mov	x21, x1
  406974:	mov	w19, w2
  406978:	cbz	x1, 406ab8 <ferror@plt+0x40c8>
  40697c:	mov	x0, x1
  406980:	bl	4162bc <ferror@plt+0x138cc>
  406984:	mov	x20, x0
  406988:	mov	w1, w19
  40698c:	mov	x0, x23
  406990:	bl	40f714 <ferror@plt+0xcd24>
  406994:	mov	x19, x0
  406998:	ldr	w0, [x0, #24]
  40699c:	cmp	w0, #0x1
  4069a0:	b.eq	4069dc <ferror@plt+0x3fec>  // b.none
  4069a4:	mov	w0, #0x1                   	// #1
  4069a8:	str	w0, [x19, #24]
  4069ac:	str	x20, [x19, #32]
  4069b0:	cmp	x21, #0x0
  4069b4:	cset	w1, ne  // ne = any
  4069b8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4069bc:	ldrb	w0, [x0, #1680]
  4069c0:	tst	w1, w0
  4069c4:	b.ne	4069e8 <ferror@plt+0x3ff8>  // b.any
  4069c8:	ldp	x19, x20, [sp, #16]
  4069cc:	ldp	x21, x22, [sp, #32]
  4069d0:	ldp	x23, x24, [sp, #48]
  4069d4:	ldp	x29, x30, [sp], #80
  4069d8:	ret
  4069dc:	ldr	x0, [x19, #32]
  4069e0:	bl	402810 <free@plt>
  4069e4:	b	4069a4 <ferror@plt+0x3fb4>
  4069e8:	stp	x25, x26, [sp, #64]
  4069ec:	mov	x0, x20
  4069f0:	bl	4023d0 <strlen@plt>
  4069f4:	mov	x22, x0
  4069f8:	mov	w19, #0x0                   	// #0
  4069fc:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1906c>
  406a00:	add	x24, x24, #0x688
  406a04:	add	x21, x24, #0x50
  406a08:	add	x24, x24, #0x10
  406a0c:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x106c>
  406a10:	add	x25, x25, #0xce8
  406a14:	b	406a44 <ferror@plt+0x4054>
  406a18:	ldrb	w26, [x20, w19, sxtw]
  406a1c:	strb	wzr, [x20, w19, sxtw]
  406a20:	ldrsw	x4, [x1]
  406a24:	add	x4, x20, x4
  406a28:	mov	x3, x23
  406a2c:	mov	x2, x25
  406a30:	mov	w1, #0x0                   	// #0
  406a34:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406a38:	ldr	w0, [x0, #1644]
  406a3c:	bl	402c80 <ferror@plt+0x290>
  406a40:	strb	w26, [x20, w19, sxtw]
  406a44:	mov	x5, x21
  406a48:	sub	w4, w22, w19
  406a4c:	mov	w3, w19
  406a50:	mov	w2, w22
  406a54:	mov	x1, x20
  406a58:	mov	x0, x24
  406a5c:	bl	402680 <re_search@plt>
  406a60:	tbnz	w0, #31, 406a84 <ferror@plt+0x4094>
  406a64:	ldr	x1, [x21, #8]
  406a68:	ldr	x2, [x21, #16]
  406a6c:	ldr	w19, [x2]
  406a70:	ldr	w2, [x1]
  406a74:	cmp	w2, w19
  406a78:	b.ne	406a18 <ferror@plt+0x4028>  // b.any
  406a7c:	add	w19, w0, #0x1
  406a80:	b	406a44 <ferror@plt+0x4054>
  406a84:	cmn	w0, #0x2
  406a88:	b.eq	406a94 <ferror@plt+0x40a4>  // b.none
  406a8c:	ldp	x25, x26, [sp, #64]
  406a90:	b	4069c8 <ferror@plt+0x3fd8>
  406a94:	mov	x3, x23
  406a98:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  406a9c:	add	x2, x2, #0xd20
  406aa0:	mov	w1, #0x0                   	// #0
  406aa4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406aa8:	ldr	w0, [x0, #1644]
  406aac:	bl	402c80 <ferror@plt+0x290>
  406ab0:	ldp	x25, x26, [sp, #64]
  406ab4:	b	4069c8 <ferror@plt+0x3fd8>
  406ab8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  406abc:	add	x0, x0, #0x6c0
  406ac0:	bl	4162bc <ferror@plt+0x138cc>
  406ac4:	mov	x20, x0
  406ac8:	mov	w1, w19
  406acc:	mov	x0, x23
  406ad0:	bl	40f714 <ferror@plt+0xcd24>
  406ad4:	mov	x19, x0
  406ad8:	ldr	w0, [x0, #24]
  406adc:	cmp	w0, #0x1
  406ae0:	b.eq	4069dc <ferror@plt+0x3fec>  // b.none
  406ae4:	mov	w0, #0x1                   	// #1
  406ae8:	str	w0, [x19, #24]
  406aec:	str	x20, [x19, #32]
  406af0:	b	4069c8 <ferror@plt+0x3fd8>
  406af4:	stp	x29, x30, [sp, #-48]!
  406af8:	mov	x29, sp
  406afc:	stp	x19, x20, [sp, #16]
  406b00:	stp	x21, x22, [sp, #32]
  406b04:	mov	w20, w0
  406b08:	mov	x19, x1
  406b0c:	mov	w21, w2
  406b10:	mov	w3, #0x3                   	// #3
  406b14:	mov	w2, #0x2                   	// #2
  406b18:	mov	w1, w0
  406b1c:	ldr	x0, [x19]
  406b20:	bl	4035b8 <ferror@plt+0xbc8>
  406b24:	and	w0, w0, #0xff
  406b28:	cbnz	w0, 406b64 <ferror@plt+0x4174>
  406b2c:	ldr	x22, [x19, #8]
  406b30:	ldr	w0, [x22]
  406b34:	cmp	w0, #0x1
  406b38:	b.eq	406b80 <ferror@plt+0x4190>  // b.none
  406b3c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406b40:	ldr	w0, [x0, #1644]
  406b44:	cmp	w20, #0x0
  406b48:	b.le	406b74 <ferror@plt+0x4184>
  406b4c:	ldr	x1, [x19]
  406b50:	ldr	x3, [x1, #8]
  406b54:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  406b58:	add	x2, x2, #0xa70
  406b5c:	mov	w1, #0x0                   	// #0
  406b60:	bl	402c80 <ferror@plt+0x290>
  406b64:	ldp	x19, x20, [sp, #16]
  406b68:	ldp	x21, x22, [sp, #32]
  406b6c:	ldp	x29, x30, [sp], #48
  406b70:	ret
  406b74:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  406b78:	add	x3, x3, #0x6c0
  406b7c:	b	406b54 <ferror@plt+0x4164>
  406b80:	cmp	w20, #0x2
  406b84:	b.eq	406bc8 <ferror@plt+0x41d8>  // b.none
  406b88:	ldr	x1, [x19, #16]
  406b8c:	ldr	w0, [x1]
  406b90:	cmp	w0, #0x1
  406b94:	b.eq	406be0 <ferror@plt+0x41f0>  // b.none
  406b98:	cmp	w0, #0x2
  406b9c:	b.ne	406c18 <ferror@plt+0x4228>  // b.any
  406ba0:	ldr	x0, [x1, #8]
  406ba4:	bl	4063ec <ferror@plt+0x39fc>
  406ba8:	mov	x1, x0
  406bac:	cbz	x0, 406b64 <ferror@plt+0x4174>
  406bb0:	cmp	w20, #0x1
  406bb4:	b.le	406c0c <ferror@plt+0x421c>
  406bb8:	ldr	x0, [x22, #8]
  406bbc:	mov	w2, w21
  406bc0:	bl	406834 <ferror@plt+0x3e44>
  406bc4:	b	406b64 <ferror@plt+0x4174>
  406bc8:	mov	w2, w21
  406bcc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  406bd0:	add	x1, x1, #0x6c0
  406bd4:	ldr	x0, [x22, #8]
  406bd8:	bl	406958 <ferror@plt+0x3f68>
  406bdc:	b	406b64 <ferror@plt+0x4174>
  406be0:	cmp	w20, #0x1
  406be4:	b.le	406bfc <ferror@plt+0x420c>
  406be8:	ldr	x0, [x22, #8]
  406bec:	ldr	x1, [x1, #8]
  406bf0:	mov	w2, w21
  406bf4:	bl	406958 <ferror@plt+0x3f68>
  406bf8:	b	406b64 <ferror@plt+0x4174>
  406bfc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  406c00:	add	x0, x0, #0x6c0
  406c04:	mov	x1, x0
  406c08:	b	406bf0 <ferror@plt+0x4200>
  406c0c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  406c10:	add	x0, x0, #0x6c0
  406c14:	b	406bbc <ferror@plt+0x41cc>
  406c18:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  406c1c:	add	x2, x2, #0xd58
  406c20:	mov	w1, #0x0                   	// #0
  406c24:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406c28:	ldr	w0, [x0, #1644]
  406c2c:	bl	402c80 <ferror@plt+0x290>
  406c30:	bl	402720 <abort@plt>
  406c34:	stp	x29, x30, [sp, #-16]!
  406c38:	mov	x29, sp
  406c3c:	mov	w0, w1
  406c40:	mov	x1, x2
  406c44:	mov	w2, #0x3                   	// #3
  406c48:	bl	406af4 <ferror@plt+0x4104>
  406c4c:	ldp	x29, x30, [sp], #16
  406c50:	ret
  406c54:	stp	x29, x30, [sp, #-16]!
  406c58:	mov	x29, sp
  406c5c:	mov	w0, w1
  406c60:	mov	x1, x2
  406c64:	mov	w2, #0x1                   	// #1
  406c68:	bl	406af4 <ferror@plt+0x4104>
  406c6c:	ldp	x29, x30, [sp], #16
  406c70:	ret
  406c74:	stp	x29, x30, [sp, #-64]!
  406c78:	mov	x29, sp
  406c7c:	stp	x19, x20, [sp, #16]
  406c80:	stp	x21, x22, [sp, #32]
  406c84:	stp	x23, x24, [sp, #48]
  406c88:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x106c>
  406c8c:	add	x19, x19, #0xfe8
  406c90:	add	x19, x19, #0x38
  406c94:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  406c98:	add	x0, x0, #0xc88
  406c9c:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1906c>
  406ca0:	add	x21, x21, #0x670
  406ca4:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  406ca8:	add	x22, x22, #0x674
  406cac:	mov	w23, #0x1                   	// #1
  406cb0:	mov	w24, #0x346d                	// #13421
  406cb4:	movk	w24, #0x5f, lsl #16
  406cb8:	b	406d00 <ferror@plt+0x4310>
  406cbc:	ldr	w1, [x22]
  406cc0:	cbz	w1, 406d14 <ferror@plt+0x4324>
  406cc4:	bl	4023d0 <strlen@plt>
  406cc8:	add	x0, x0, #0x4
  406ccc:	bl	41607c <ferror@plt+0x1368c>
  406cd0:	mov	x20, x0
  406cd4:	str	w24, [x0]
  406cd8:	ldr	x1, [x19]
  406cdc:	bl	4025f0 <strcat@plt>
  406ce0:	mov	w2, w23
  406ce4:	mov	x1, x19
  406ce8:	mov	x0, x20
  406cec:	bl	406834 <ferror@plt+0x3e44>
  406cf0:	mov	x0, x20
  406cf4:	bl	402810 <free@plt>
  406cf8:	ldr	x0, [x19, #24]!
  406cfc:	cbz	x0, 406d24 <ferror@plt+0x4334>
  406d00:	ldr	w1, [x21]
  406d04:	cbz	w1, 406cbc <ferror@plt+0x42cc>
  406d08:	ldrb	w1, [x19, #8]
  406d0c:	tbnz	w1, #0, 406cf8 <ferror@plt+0x4308>
  406d10:	b	406cbc <ferror@plt+0x42cc>
  406d14:	mov	w2, w23
  406d18:	mov	x1, x19
  406d1c:	bl	406834 <ferror@plt+0x3e44>
  406d20:	b	406cf8 <ferror@plt+0x4308>
  406d24:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x106c>
  406d28:	add	x19, x19, #0xfe8
  406d2c:	add	x19, x19, #0x488
  406d30:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  406d34:	add	x1, x1, #0x6c0
  406d38:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  406d3c:	add	x20, x20, #0x670
  406d40:	mov	w21, #0x1                   	// #1
  406d44:	b	406d64 <ferror@plt+0x4374>
  406d48:	ldr	x0, [x19, #8]
  406d4c:	cbz	x0, 406d58 <ferror@plt+0x4368>
  406d50:	mov	w2, w21
  406d54:	bl	406958 <ferror@plt+0x3f68>
  406d58:	add	x19, x19, #0x18
  406d5c:	ldr	x1, [x19, #16]
  406d60:	cbz	x1, 406d80 <ferror@plt+0x4390>
  406d64:	ldr	w0, [x20]
  406d68:	cbz	w0, 406d48 <ferror@plt+0x4358>
  406d6c:	ldr	x0, [x19]
  406d70:	cbz	x0, 406d58 <ferror@plt+0x4368>
  406d74:	mov	w2, w21
  406d78:	bl	406958 <ferror@plt+0x3f68>
  406d7c:	b	406d58 <ferror@plt+0x4368>
  406d80:	ldp	x19, x20, [sp, #16]
  406d84:	ldp	x21, x22, [sp, #32]
  406d88:	ldp	x23, x24, [sp, #48]
  406d8c:	ldp	x29, x30, [sp], #64
  406d90:	ret
  406d94:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  406d98:	strb	wzr, [x2, #2031]
  406d9c:	mov	w2, w0
  406da0:	mov	w7, #0x0                   	// #0
  406da4:	tbnz	w0, #31, 406df8 <ferror@plt+0x4408>
  406da8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  406dac:	add	x0, x0, #0x688
  406db0:	add	x0, x0, #0x167
  406db4:	adrp	x5, 418000 <_obstack_memory_used@@Base+0x106c>
  406db8:	add	x5, x5, #0xfe8
  406dbc:	add	x5, x5, #0x4d0
  406dc0:	mov	x6, x0
  406dc4:	udiv	w3, w2, w1
  406dc8:	msub	w4, w3, w1, w2
  406dcc:	ldrb	w4, [x5, w4, uxtw]
  406dd0:	strb	w4, [x0, #-1]!
  406dd4:	mov	w4, w2
  406dd8:	mov	w2, w3
  406ddc:	cmp	w1, w4
  406de0:	b.ls	406dc0 <ferror@plt+0x43d0>  // b.plast
  406de4:	cbz	w7, 406df4 <ferror@plt+0x4404>
  406de8:	mov	w1, #0x2d                  	// #45
  406dec:	sturb	w1, [x0, #-1]
  406df0:	sub	x0, x6, #0x2
  406df4:	ret
  406df8:	neg	w2, w0
  406dfc:	mov	w7, #0x1                   	// #1
  406e00:	b	406da8 <ferror@plt+0x43b8>
  406e04:	stp	x29, x30, [sp, #-48]!
  406e08:	mov	x29, sp
  406e0c:	stp	x19, x20, [sp, #16]
  406e10:	str	x21, [sp, #32]
  406e14:	mov	x19, x0
  406e18:	mov	w0, w1
  406e1c:	mov	w1, #0xa                   	// #10
  406e20:	bl	406d94 <ferror@plt+0x43a4>
  406e24:	mov	x21, x0
  406e28:	bl	4023d0 <strlen@plt>
  406e2c:	mov	x20, x0
  406e30:	ldr	x0, [x19, #32]
  406e34:	ldr	x1, [x19, #24]
  406e38:	sub	x0, x0, x1
  406e3c:	cmp	x20, x0
  406e40:	b.hi	406e70 <ferror@plt+0x4480>  // b.pmore
  406e44:	mov	x2, x20
  406e48:	mov	x1, x21
  406e4c:	ldr	x0, [x19, #24]
  406e50:	bl	402390 <memcpy@plt>
  406e54:	ldr	x0, [x19, #24]
  406e58:	add	x20, x0, x20
  406e5c:	str	x20, [x19, #24]
  406e60:	ldp	x19, x20, [sp, #16]
  406e64:	ldr	x21, [sp, #32]
  406e68:	ldp	x29, x30, [sp], #48
  406e6c:	ret
  406e70:	mov	x1, x20
  406e74:	mov	x0, x19
  406e78:	bl	416dc4 <_obstack_newchunk@@Base>
  406e7c:	b	406e44 <ferror@plt+0x4454>
  406e80:	stp	x29, x30, [sp, #-16]!
  406e84:	mov	x29, sp
  406e88:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  406e8c:	ldr	w1, [x1, #1676]
  406e90:	bl	406e04 <ferror@plt+0x4414>
  406e94:	ldp	x29, x30, [sp], #16
  406e98:	ret
  406e9c:	stp	x29, x30, [sp, #-48]!
  406ea0:	mov	x29, sp
  406ea4:	stp	x19, x20, [sp, #16]
  406ea8:	str	x21, [sp, #32]
  406eac:	mov	x21, x0
  406eb0:	mov	w20, w1
  406eb4:	mov	x19, x2
  406eb8:	mov	w3, #0x2                   	// #2
  406ebc:	mov	w2, w3
  406ec0:	ldr	x0, [x19]
  406ec4:	bl	4035b8 <ferror@plt+0xbc8>
  406ec8:	and	w2, w0, #0xff
  406ecc:	cbnz	w2, 406ef0 <ferror@plt+0x4500>
  406ed0:	cmp	w20, #0x1
  406ed4:	b.le	406f00 <ferror@plt+0x4510>
  406ed8:	ldr	x0, [x19, #8]
  406edc:	ldr	x0, [x0, #8]
  406ee0:	bl	4023d0 <strlen@plt>
  406ee4:	mov	w1, w0
  406ee8:	mov	x0, x21
  406eec:	bl	406e04 <ferror@plt+0x4414>
  406ef0:	ldp	x19, x20, [sp, #16]
  406ef4:	ldr	x21, [sp, #32]
  406ef8:	ldp	x29, x30, [sp], #48
  406efc:	ret
  406f00:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  406f04:	add	x0, x0, #0x6c0
  406f08:	b	406ee0 <ferror@plt+0x44f0>
  406f0c:	stp	x29, x30, [sp, #-48]!
  406f10:	mov	x29, sp
  406f14:	stp	x19, x20, [sp, #16]
  406f18:	stp	x21, x22, [sp, #32]
  406f1c:	mov	x22, x0
  406f20:	mov	w20, w1
  406f24:	mov	x19, x2
  406f28:	mov	w3, #0x3                   	// #3
  406f2c:	mov	w2, w3
  406f30:	ldr	x0, [x19]
  406f34:	bl	4035b8 <ferror@plt+0xbc8>
  406f38:	and	w1, w0, #0xff
  406f3c:	cbnz	w1, 406f64 <ferror@plt+0x4574>
  406f40:	cmp	w20, #0x1
  406f44:	b.le	406f7c <ferror@plt+0x458c>
  406f48:	ldr	x0, [x19, #8]
  406f4c:	ldr	x21, [x0, #8]
  406f50:	cmp	w20, #0x2
  406f54:	b.le	406f88 <ferror@plt+0x4598>
  406f58:	ldr	x0, [x19, #16]
  406f5c:	ldr	x1, [x0, #8]
  406f60:	b	406f90 <ferror@plt+0x45a0>
  406f64:	cmp	w20, #0x2
  406f68:	b.ne	406fac <ferror@plt+0x45bc>  // b.any
  406f6c:	mov	w1, #0x0                   	// #0
  406f70:	mov	x0, x22
  406f74:	bl	406e04 <ferror@plt+0x4414>
  406f78:	b	406fac <ferror@plt+0x45bc>
  406f7c:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x6c>
  406f80:	add	x21, x21, #0x6c0
  406f84:	b	406f50 <ferror@plt+0x4560>
  406f88:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  406f8c:	add	x1, x1, #0x6c0
  406f90:	mov	x0, x21
  406f94:	bl	402900 <strstr@plt>
  406f98:	sub	x1, x0, x21
  406f9c:	cmp	x0, #0x0
  406fa0:	csinv	w1, w1, wzr, ne  // ne = any
  406fa4:	mov	x0, x22
  406fa8:	bl	406e04 <ferror@plt+0x4414>
  406fac:	ldp	x19, x20, [sp, #16]
  406fb0:	ldp	x21, x22, [sp, #32]
  406fb4:	ldp	x29, x30, [sp], #48
  406fb8:	ret
  406fbc:	stp	x29, x30, [sp, #-64]!
  406fc0:	mov	x29, sp
  406fc4:	stp	x19, x20, [sp, #16]
  406fc8:	str	x21, [sp, #32]
  406fcc:	mov	x21, x0
  406fd0:	mov	w20, w1
  406fd4:	mov	x19, x2
  406fd8:	mov	w3, #0x2                   	// #2
  406fdc:	mov	w2, w3
  406fe0:	ldr	x0, [x19]
  406fe4:	bl	4035b8 <ferror@plt+0xbc8>
  406fe8:	and	w2, w0, #0xff
  406fec:	cbnz	w2, 407014 <ferror@plt+0x4624>
  406ff0:	ldr	x0, [x19]
  406ff4:	cmp	w20, #0x1
  406ff8:	b.le	407024 <ferror@plt+0x4634>
  406ffc:	ldr	x1, [x19, #8]
  407000:	ldr	x1, [x1, #8]
  407004:	add	x2, sp, #0x3c
  407008:	bl	4037f8 <ferror@plt+0xe08>
  40700c:	and	w1, w0, #0xff
  407010:	cbnz	w1, 407030 <ferror@plt+0x4640>
  407014:	ldp	x19, x20, [sp, #16]
  407018:	ldr	x21, [sp, #32]
  40701c:	ldp	x29, x30, [sp], #64
  407020:	ret
  407024:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  407028:	add	x1, x1, #0x6c0
  40702c:	b	407004 <ferror@plt+0x4614>
  407030:	ldr	w1, [sp, #60]
  407034:	add	w1, w1, #0x1
  407038:	mov	x0, x21
  40703c:	bl	406e04 <ferror@plt+0x4414>
  407040:	b	407014 <ferror@plt+0x4624>
  407044:	stp	x29, x30, [sp, #-32]!
  407048:	mov	x29, sp
  40704c:	str	x19, [sp, #16]
  407050:	mov	x19, x0
  407054:	mov	x0, x2
  407058:	mov	w3, #0x1                   	// #1
  40705c:	mov	w2, w3
  407060:	ldr	x0, [x0]
  407064:	bl	4035b8 <ferror@plt+0xbc8>
  407068:	and	w1, w0, #0xff
  40706c:	cbz	w1, 40707c <ferror@plt+0x468c>
  407070:	ldr	x19, [sp, #16]
  407074:	ldp	x29, x30, [sp], #32
  407078:	ret
  40707c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  407080:	ldr	w1, [x0, #3500]
  407084:	mov	x0, x19
  407088:	bl	406e04 <ferror@plt+0x4414>
  40708c:	b	407070 <ferror@plt+0x4680>
  407090:	stp	x29, x30, [sp, #-64]!
  407094:	mov	x29, sp
  407098:	stp	x19, x20, [sp, #16]
  40709c:	str	x21, [sp, #32]
  4070a0:	mov	x21, x0
  4070a4:	mov	w20, w1
  4070a8:	mov	x19, x2
  4070ac:	mov	w3, #0x2                   	// #2
  4070b0:	mov	w2, w3
  4070b4:	ldr	x0, [x19]
  4070b8:	bl	4035b8 <ferror@plt+0xbc8>
  4070bc:	and	w2, w0, #0xff
  4070c0:	cbnz	w2, 4070e8 <ferror@plt+0x46f8>
  4070c4:	ldr	x0, [x19]
  4070c8:	cmp	w20, #0x1
  4070cc:	b.le	4070f8 <ferror@plt+0x4708>
  4070d0:	ldr	x1, [x19, #8]
  4070d4:	ldr	x1, [x1, #8]
  4070d8:	add	x2, sp, #0x3c
  4070dc:	bl	4037f8 <ferror@plt+0xe08>
  4070e0:	and	w1, w0, #0xff
  4070e4:	cbnz	w1, 407104 <ferror@plt+0x4714>
  4070e8:	ldp	x19, x20, [sp, #16]
  4070ec:	ldr	x21, [sp, #32]
  4070f0:	ldp	x29, x30, [sp], #64
  4070f4:	ret
  4070f8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  4070fc:	add	x1, x1, #0x6c0
  407100:	b	4070d8 <ferror@plt+0x46e8>
  407104:	ldr	w1, [sp, #60]
  407108:	sub	w1, w1, #0x1
  40710c:	mov	x0, x21
  407110:	bl	406e04 <ferror@plt+0x4414>
  407114:	b	4070e8 <ferror@plt+0x46f8>
  407118:	stp	x29, x30, [sp, #-32]!
  40711c:	mov	x29, sp
  407120:	str	x19, [sp, #16]
  407124:	mov	x19, x0
  407128:	mov	x0, x2
  40712c:	mov	w3, #0x1                   	// #1
  407130:	mov	w2, w3
  407134:	ldr	x0, [x0]
  407138:	bl	4035b8 <ferror@plt+0xbc8>
  40713c:	and	w1, w0, #0xff
  407140:	cbz	w1, 407150 <ferror@plt+0x4760>
  407144:	ldr	x19, [sp, #16]
  407148:	ldp	x29, x30, [sp], #32
  40714c:	ret
  407150:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  407154:	ldr	w1, [x0, #3416]
  407158:	mov	x0, x19
  40715c:	bl	406e04 <ferror@plt+0x4414>
  407160:	b	407144 <ferror@plt+0x4754>
  407164:	stp	x29, x30, [sp, #-160]!
  407168:	mov	x29, sp
  40716c:	stp	x19, x20, [sp, #16]
  407170:	stp	x21, x22, [sp, #32]
  407174:	mov	x21, x0
  407178:	mov	w20, w1
  40717c:	mov	x19, x2
  407180:	mov	w3, #0x4                   	// #4
  407184:	mov	w2, #0x3                   	// #3
  407188:	ldr	x0, [x19]
  40718c:	bl	4035b8 <ferror@plt+0xbc8>
  407190:	and	w2, w0, #0xff
  407194:	cbz	w2, 4071c0 <ferror@plt+0x47d0>
  407198:	cmp	w20, #0x2
  40719c:	b.eq	4071b0 <ferror@plt+0x47c0>  // b.none
  4071a0:	ldp	x19, x20, [sp, #16]
  4071a4:	ldp	x21, x22, [sp, #32]
  4071a8:	ldp	x29, x30, [sp], #160
  4071ac:	ret
  4071b0:	mov	w1, #0x0                   	// #0
  4071b4:	mov	x0, x21
  4071b8:	bl	406e04 <ferror@plt+0x4414>
  4071bc:	b	4071a0 <ferror@plt+0x47b0>
  4071c0:	str	x23, [sp, #48]
  4071c4:	ldr	x0, [x19, #8]
  4071c8:	ldr	x23, [x0, #8]
  4071cc:	ldr	x0, [x19, #16]
  4071d0:	ldr	x22, [x0, #8]
  4071d4:	str	xzr, [sp, #136]
  4071d8:	str	xzr, [sp, #128]
  4071dc:	str	xzr, [sp, #96]
  4071e0:	str	xzr, [sp, #104]
  4071e4:	str	xzr, [sp, #80]
  4071e8:	str	xzr, [sp, #88]
  4071ec:	mov	x0, x22
  4071f0:	bl	4023d0 <strlen@plt>
  4071f4:	add	x2, sp, #0x60
  4071f8:	mov	x1, x0
  4071fc:	mov	x0, x22
  407200:	bl	402730 <re_compile_pattern@plt>
  407204:	cbnz	x0, 407254 <ferror@plt+0x4864>
  407208:	mov	x0, x23
  40720c:	bl	4023d0 <strlen@plt>
  407210:	cmp	w20, #0x3
  407214:	b.eq	4072b4 <ferror@plt+0x48c4>  // b.none
  407218:	add	x5, sp, #0x48
  40721c:	mov	w4, w0
  407220:	mov	w3, #0x0                   	// #0
  407224:	mov	w2, w0
  407228:	mov	x1, x23
  40722c:	add	x0, sp, #0x60
  407230:	bl	402680 <re_search@plt>
  407234:	cmn	w0, #0x2
  407238:	b.eq	4072d8 <ferror@plt+0x48e8>  // b.none
  40723c:	tbz	w0, #31, 407298 <ferror@plt+0x48a8>
  407240:	add	x1, sp, #0x48
  407244:	add	x0, sp, #0x60
  407248:	bl	404a2c <ferror@plt+0x203c>
  40724c:	ldr	x23, [sp, #48]
  407250:	b	4071a0 <ferror@plt+0x47b0>
  407254:	mov	x4, x0
  407258:	mov	x3, x22
  40725c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  407260:	add	x2, x2, #0xd90
  407264:	mov	w1, #0x0                   	// #0
  407268:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40726c:	ldr	w0, [x0, #1644]
  407270:	bl	402c80 <ferror@plt+0x290>
  407274:	add	x1, sp, #0x48
  407278:	add	x0, sp, #0x60
  40727c:	bl	404a2c <ferror@plt+0x203c>
  407280:	ldr	x23, [sp, #48]
  407284:	b	4071a0 <ferror@plt+0x47b0>
  407288:	mov	w1, w0
  40728c:	mov	x0, x21
  407290:	bl	406e04 <ferror@plt+0x4414>
  407294:	b	407240 <ferror@plt+0x4850>
  407298:	ldr	x0, [x19, #24]
  40729c:	add	x3, sp, #0x48
  4072a0:	ldr	x2, [x0, #8]
  4072a4:	mov	x1, x23
  4072a8:	mov	x0, x21
  4072ac:	bl	4043e4 <ferror@plt+0x19f4>
  4072b0:	b	407240 <ferror@plt+0x4850>
  4072b4:	mov	x5, #0x0                   	// #0
  4072b8:	mov	w4, w0
  4072bc:	mov	w3, #0x0                   	// #0
  4072c0:	mov	w2, w0
  4072c4:	mov	x1, x23
  4072c8:	add	x0, sp, #0x60
  4072cc:	bl	402680 <re_search@plt>
  4072d0:	cmn	w0, #0x2
  4072d4:	b.ne	407288 <ferror@plt+0x4898>  // b.any
  4072d8:	mov	x3, x22
  4072dc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  4072e0:	add	x2, x2, #0xbd8
  4072e4:	mov	w1, #0x0                   	// #0
  4072e8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4072ec:	ldr	w0, [x0, #1644]
  4072f0:	bl	402c80 <ferror@plt+0x290>
  4072f4:	b	407240 <ferror@plt+0x4850>
  4072f8:	stp	x29, x30, [sp, #-80]!
  4072fc:	mov	x29, sp
  407300:	stp	x19, x20, [sp, #16]
  407304:	stp	x21, x22, [sp, #32]
  407308:	mov	x20, x0
  40730c:	mov	w21, w1
  407310:	mov	x19, x2
  407314:	mov	w3, #0x2                   	// #2
  407318:	mov	w2, w3
  40731c:	ldr	x0, [x19]
  407320:	bl	4035b8 <ferror@plt+0xbc8>
  407324:	and	w0, w0, #0xff
  407328:	cbnz	w0, 40755c <ferror@plt+0x4b6c>
  40732c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407330:	ldr	w0, [x0, #1648]
  407334:	cbz	w0, 407520 <ferror@plt+0x4b30>
  407338:	stp	x23, x24, [sp, #48]
  40733c:	stp	x25, x26, [sp, #64]
  407340:	cmp	w21, #0x1
  407344:	b.le	407584 <ferror@plt+0x4b94>
  407348:	ldr	x0, [x19, #8]
  40734c:	ldr	x21, [x0, #8]
  407350:	mov	x0, x21
  407354:	bl	4023d0 <strlen@plt>
  407358:	mov	x19, x0
  40735c:	mov	w23, w0
  407360:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  407364:	add	x2, x2, #0xdb8
  407368:	mov	w1, #0x0                   	// #0
  40736c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407370:	ldr	w0, [x0, #1644]
  407374:	bl	402c80 <ferror@plt+0x290>
  407378:	cmp	w19, #0x1
  40737c:	b.le	4073a8 <ferror@plt+0x49b8>
  407380:	sxtw	x1, w19
  407384:	sub	x2, x21, #0x1
  407388:	mov	w19, w1
  40738c:	ldrb	w0, [x2, x1]
  407390:	cmp	w0, #0x58
  407394:	b.ne	4073a8 <ferror@plt+0x49b8>  // b.any
  407398:	sub	w19, w1, #0x1
  40739c:	sub	x1, x1, #0x1
  4073a0:	cmp	w1, #0x1
  4073a4:	b.gt	407388 <ferror@plt+0x4998>
  4073a8:	sxtw	x22, w19
  4073ac:	ldr	x0, [x20, #32]
  4073b0:	ldr	x1, [x20, #24]
  4073b4:	sub	x0, x0, x1
  4073b8:	cmp	x0, w19, sxtw
  4073bc:	b.cc	407468 <ferror@plt+0x4a78>  // b.lo, b.ul, b.last
  4073c0:	mov	x2, x22
  4073c4:	mov	x1, x21
  4073c8:	ldr	x0, [x20, #24]
  4073cc:	bl	402390 <memcpy@plt>
  4073d0:	ldr	x0, [x20, #24]
  4073d4:	add	x0, x0, x22
  4073d8:	str	x0, [x20, #24]
  4073dc:	bl	402540 <getpid@plt>
  4073e0:	mov	w1, #0xa                   	// #10
  4073e4:	bl	406d94 <ferror@plt+0x43a4>
  4073e8:	mov	x25, x0
  4073ec:	bl	4023d0 <strlen@plt>
  4073f0:	mov	x22, x0
  4073f4:	sub	w21, w23, w19
  4073f8:	cmp	w21, w0
  4073fc:	b.lt	407478 <ferror@plt+0x4a88>  // b.tstop
  407400:	add	w21, w19, #0x1
  407404:	sub	w0, w23, w0
  407408:	add	w24, w0, #0x1
  40740c:	mov	x26, #0x1                   	// #1
  407410:	mov	w23, #0x30                  	// #48
  407414:	cmp	w0, w19
  407418:	b.gt	4074f4 <ferror@plt+0x4b04>
  40741c:	sxtw	x22, w22
  407420:	add	x1, x22, #0x1
  407424:	ldr	x0, [x20, #32]
  407428:	ldr	x2, [x20, #24]
  40742c:	sub	x0, x0, x2
  407430:	cmp	x1, x0
  407434:	b.hi	407514 <ferror@plt+0x4b24>  // b.pmore
  407438:	mov	x2, x22
  40743c:	mov	x1, x25
  407440:	ldr	x0, [x20, #24]
  407444:	bl	402390 <memcpy@plt>
  407448:	ldr	x1, [x20, #24]
  40744c:	add	x0, x1, x22
  407450:	add	x0, x0, #0x1
  407454:	str	x0, [x20, #24]
  407458:	strb	wzr, [x1, x22]
  40745c:	ldp	x23, x24, [sp, #48]
  407460:	ldp	x25, x26, [sp, #64]
  407464:	b	40755c <ferror@plt+0x4b6c>
  407468:	mov	x1, x22
  40746c:	mov	x0, x20
  407470:	bl	416dc4 <_obstack_newchunk@@Base>
  407474:	b	4073c0 <ferror@plt+0x49d0>
  407478:	sxtw	x19, w21
  40747c:	add	x1, x19, #0x1
  407480:	ldr	x0, [x20, #32]
  407484:	ldr	x2, [x20, #24]
  407488:	sub	x0, x0, x2
  40748c:	cmp	x1, x0
  407490:	b.hi	4074cc <ferror@plt+0x4adc>  // b.pmore
  407494:	sxtw	x1, w22
  407498:	sub	x1, x1, x19
  40749c:	mov	x2, x19
  4074a0:	add	x1, x25, x1
  4074a4:	ldr	x0, [x20, #24]
  4074a8:	bl	402390 <memcpy@plt>
  4074ac:	ldr	x0, [x20, #24]
  4074b0:	add	x19, x0, x19
  4074b4:	add	x19, x19, #0x1
  4074b8:	str	x19, [x20, #24]
  4074bc:	strb	wzr, [x0, w21, sxtw]
  4074c0:	ldp	x23, x24, [sp, #48]
  4074c4:	ldp	x25, x26, [sp, #64]
  4074c8:	b	40755c <ferror@plt+0x4b6c>
  4074cc:	mov	x0, x20
  4074d0:	bl	416dc4 <_obstack_newchunk@@Base>
  4074d4:	b	407494 <ferror@plt+0x4aa4>
  4074d8:	ldr	x1, [x20, #24]
  4074dc:	add	x2, x1, #0x1
  4074e0:	str	x2, [x20, #24]
  4074e4:	strb	w23, [x1]
  4074e8:	add	w21, w21, #0x1
  4074ec:	cmp	w24, w21
  4074f0:	b.eq	40741c <ferror@plt+0x4a2c>  // b.none
  4074f4:	ldr	x1, [x20, #32]
  4074f8:	ldr	x0, [x20, #24]
  4074fc:	cmp	x1, x0
  407500:	b.ne	4074d8 <ferror@plt+0x4ae8>  // b.any
  407504:	mov	x1, x26
  407508:	mov	x0, x20
  40750c:	bl	416dc4 <_obstack_newchunk@@Base>
  407510:	b	4074d8 <ferror@plt+0x4ae8>
  407514:	mov	x0, x20
  407518:	bl	416dc4 <_obstack_newchunk@@Base>
  40751c:	b	407438 <ferror@plt+0x4a48>
  407520:	cmp	w21, #0x0
  407524:	b.le	40756c <ferror@plt+0x4b7c>
  407528:	ldr	x0, [x19]
  40752c:	ldr	x22, [x0, #8]
  407530:	cmp	w21, #0x1
  407534:	b.le	407578 <ferror@plt+0x4b88>
  407538:	ldr	x0, [x19, #8]
  40753c:	ldr	x19, [x0, #8]
  407540:	mov	x0, x19
  407544:	bl	4023d0 <strlen@plt>
  407548:	mov	x3, x0
  40754c:	mov	x2, x19
  407550:	mov	x1, x22
  407554:	mov	x0, x20
  407558:	bl	404a5c <ferror@plt+0x206c>
  40755c:	ldp	x19, x20, [sp, #16]
  407560:	ldp	x21, x22, [sp, #32]
  407564:	ldp	x29, x30, [sp], #80
  407568:	ret
  40756c:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x6c>
  407570:	add	x22, x22, #0x6c0
  407574:	b	407530 <ferror@plt+0x4b40>
  407578:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x6c>
  40757c:	add	x19, x19, #0x6c0
  407580:	b	407540 <ferror@plt+0x4b50>
  407584:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  407588:	add	x2, x2, #0xdb8
  40758c:	mov	w1, #0x0                   	// #0
  407590:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407594:	ldr	w0, [x0, #1644]
  407598:	bl	402c80 <ferror@plt+0x290>
  40759c:	mov	w23, #0x0                   	// #0
  4075a0:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x6c>
  4075a4:	add	x21, x21, #0x6c0
  4075a8:	mov	w19, #0x0                   	// #0
  4075ac:	mov	x22, #0x0                   	// #0
  4075b0:	b	4073c0 <ferror@plt+0x49d0>
  4075b4:	stp	x29, x30, [sp, #-64]!
  4075b8:	mov	x29, sp
  4075bc:	stp	x19, x20, [sp, #16]
  4075c0:	stp	x21, x22, [sp, #32]
  4075c4:	mov	x19, x0
  4075c8:	mov	w21, w1
  4075cc:	mov	x20, x2
  4075d0:	str	wzr, [sp, #60]
  4075d4:	mov	w0, #0xa                   	// #10
  4075d8:	str	w0, [sp, #56]
  4075dc:	mov	w0, #0x1                   	// #1
  4075e0:	str	w0, [sp, #52]
  4075e4:	mov	w3, #0x4                   	// #4
  4075e8:	mov	w2, #0x2                   	// #2
  4075ec:	ldr	x0, [x20]
  4075f0:	bl	4035b8 <ferror@plt+0xbc8>
  4075f4:	and	w0, w0, #0xff
  4075f8:	cbnz	w0, 407658 <ferror@plt+0x4c68>
  4075fc:	cmp	w21, #0x2
  407600:	b.le	407668 <ferror@plt+0x4c78>
  407604:	ldr	x0, [x20, #16]
  407608:	ldr	x1, [x0, #8]
  40760c:	ldrb	w0, [x1]
  407610:	cbz	w0, 407628 <ferror@plt+0x4c38>
  407614:	add	x2, sp, #0x38
  407618:	ldr	x0, [x20]
  40761c:	bl	4037f8 <ferror@plt+0xe08>
  407620:	and	w0, w0, #0xff
  407624:	cbz	w0, 407658 <ferror@plt+0x4c68>
  407628:	ldr	w3, [sp, #56]
  40762c:	sub	w0, w3, #0x1
  407630:	cmp	w0, #0x23
  407634:	b.ls	407678 <ferror@plt+0x4c88>  // b.plast
  407638:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40763c:	ldr	w0, [x0, #1644]
  407640:	ldr	x1, [x20]
  407644:	ldr	x4, [x1, #8]
  407648:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  40764c:	add	x2, x2, #0xdd8
  407650:	mov	w1, #0x0                   	// #0
  407654:	bl	402c80 <ferror@plt+0x290>
  407658:	ldp	x19, x20, [sp, #16]
  40765c:	ldp	x21, x22, [sp, #32]
  407660:	ldp	x29, x30, [sp], #64
  407664:	ret
  407668:	ldr	w3, [sp, #56]
  40766c:	sub	w0, w3, #0x1
  407670:	cmp	w0, #0x23
  407674:	b.hi	4076a8 <ferror@plt+0x4cb8>  // b.pmore
  407678:	cmp	w21, #0x3
  40767c:	b.gt	4076c4 <ferror@plt+0x4cd4>
  407680:	ldr	w0, [sp, #52]
  407684:	tbnz	w0, #31, 40770c <ferror@plt+0x4d1c>
  407688:	cmp	w21, #0x1
  40768c:	b.gt	4076e8 <ferror@plt+0x4cf8>
  407690:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407694:	ldr	w0, [x0, #1644]
  407698:	b.eq	407964 <ferror@plt+0x4f74>  // b.none
  40769c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  4076a0:	add	x3, x3, #0x6c0
  4076a4:	b	40796c <ferror@plt+0x4f7c>
  4076a8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4076ac:	ldr	w0, [x0, #1644]
  4076b0:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x6c>
  4076b4:	add	x4, x4, #0x6c0
  4076b8:	cmp	w21, #0x0
  4076bc:	b.le	407648 <ferror@plt+0x4c58>
  4076c0:	b	407640 <ferror@plt+0x4c50>
  4076c4:	ldr	x0, [x20, #24]
  4076c8:	add	x2, sp, #0x34
  4076cc:	ldr	x1, [x0, #8]
  4076d0:	ldr	x0, [x20]
  4076d4:	bl	4037f8 <ferror@plt+0xe08>
  4076d8:	and	w0, w0, #0xff
  4076dc:	cbz	w0, 407658 <ferror@plt+0x4c68>
  4076e0:	ldr	w0, [sp, #52]
  4076e4:	tbnz	w0, #31, 4079c8 <ferror@plt+0x4fd8>
  4076e8:	ldr	x0, [x20, #8]
  4076ec:	ldr	x0, [x0, #8]
  4076f0:	ldrb	w1, [x0]
  4076f4:	cbz	w1, 40795c <ferror@plt+0x4f6c>
  4076f8:	add	x1, sp, #0x3c
  4076fc:	bl	40973c <ferror@plt+0x6d4c>
  407700:	and	w0, w0, #0xff
  407704:	cbz	w0, 40797c <ferror@plt+0x4f8c>
  407708:	b	407658 <ferror@plt+0x4c68>
  40770c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407710:	ldr	w0, [x0, #1644]
  407714:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  407718:	add	x3, x3, #0x6c0
  40771c:	cmp	w21, #0x0
  407720:	b.le	40772c <ferror@plt+0x4d3c>
  407724:	ldr	x1, [x20]
  407728:	ldr	x3, [x1, #8]
  40772c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  407730:	add	x2, x2, #0xe00
  407734:	mov	w1, #0x0                   	// #0
  407738:	bl	402c80 <ferror@plt+0x290>
  40773c:	b	407658 <ferror@plt+0x4c68>
  407740:	ldr	w0, [sp, #60]
  407744:	tbnz	w0, #31, 407770 <ferror@plt+0x4d80>
  407748:	ldr	w0, [sp, #52]
  40774c:	sub	w1, w0, #0x1
  407750:	str	w1, [sp, #52]
  407754:	ldr	w1, [sp, #60]
  407758:	sub	w0, w0, w1
  40775c:	cmp	w0, #0x0
  407760:	b.le	407800 <ferror@plt+0x4e10>
  407764:	mov	x21, #0x1                   	// #1
  407768:	mov	w20, #0x30                  	// #48
  40776c:	b	4077e0 <ferror@plt+0x4df0>
  407770:	ldr	x1, [x19, #32]
  407774:	ldr	x0, [x19, #24]
  407778:	cmp	x1, x0
  40777c:	b.eq	4077a4 <ferror@plt+0x4db4>  // b.none
  407780:	ldr	x0, [x19, #24]
  407784:	add	x1, x0, #0x1
  407788:	str	x1, [x19, #24]
  40778c:	mov	w1, #0x2d                  	// #45
  407790:	strb	w1, [x0]
  407794:	ldr	w0, [sp, #60]
  407798:	neg	w0, w0
  40779c:	str	w0, [sp, #60]
  4077a0:	b	407748 <ferror@plt+0x4d58>
  4077a4:	mov	x1, #0x1                   	// #1
  4077a8:	mov	x0, x19
  4077ac:	bl	416dc4 <_obstack_newchunk@@Base>
  4077b0:	b	407780 <ferror@plt+0x4d90>
  4077b4:	ldr	x0, [x19, #24]
  4077b8:	add	x1, x0, #0x1
  4077bc:	str	x1, [x19, #24]
  4077c0:	strb	w20, [x0]
  4077c4:	ldr	w0, [sp, #52]
  4077c8:	sub	w1, w0, #0x1
  4077cc:	str	w1, [sp, #52]
  4077d0:	ldr	w1, [sp, #60]
  4077d4:	sub	w0, w0, w1
  4077d8:	cmp	w0, #0x0
  4077dc:	b.le	407800 <ferror@plt+0x4e10>
  4077e0:	ldr	x1, [x19, #32]
  4077e4:	ldr	x0, [x19, #24]
  4077e8:	cmp	x1, x0
  4077ec:	b.ne	4077b4 <ferror@plt+0x4dc4>  // b.any
  4077f0:	mov	x1, x21
  4077f4:	mov	x0, x19
  4077f8:	bl	416dc4 <_obstack_newchunk@@Base>
  4077fc:	b	4077b4 <ferror@plt+0x4dc4>
  407800:	ldr	w0, [sp, #60]
  407804:	sub	w1, w0, #0x1
  407808:	str	w1, [sp, #60]
  40780c:	cbz	w0, 40785c <ferror@plt+0x4e6c>
  407810:	mov	x21, #0x1                   	// #1
  407814:	mov	w20, #0x31                  	// #49
  407818:	b	40783c <ferror@plt+0x4e4c>
  40781c:	ldr	x0, [x19, #24]
  407820:	add	x1, x0, #0x1
  407824:	str	x1, [x19, #24]
  407828:	strb	w20, [x0]
  40782c:	ldr	w0, [sp, #60]
  407830:	sub	w1, w0, #0x1
  407834:	str	w1, [sp, #60]
  407838:	cbz	w0, 40785c <ferror@plt+0x4e6c>
  40783c:	ldr	x1, [x19, #32]
  407840:	ldr	x0, [x19, #24]
  407844:	cmp	x1, x0
  407848:	b.ne	40781c <ferror@plt+0x4e2c>  // b.any
  40784c:	mov	x1, x21
  407850:	mov	x0, x19
  407854:	bl	416dc4 <_obstack_newchunk@@Base>
  407858:	b	40781c <ferror@plt+0x4e2c>
  40785c:	ldr	x1, [x19, #32]
  407860:	ldr	x0, [x19, #24]
  407864:	cmp	x1, x0
  407868:	b.eq	407880 <ferror@plt+0x4e90>  // b.none
  40786c:	ldr	x0, [x19, #24]
  407870:	add	x1, x0, #0x1
  407874:	str	x1, [x19, #24]
  407878:	strb	wzr, [x0]
  40787c:	b	407658 <ferror@plt+0x4c68>
  407880:	mov	x1, #0x1                   	// #1
  407884:	mov	x0, x19
  407888:	bl	416dc4 <_obstack_newchunk@@Base>
  40788c:	b	40786c <ferror@plt+0x4e7c>
  407890:	ldr	x1, [x19, #32]
  407894:	ldr	x0, [x19, #24]
  407898:	cmp	x1, x0
  40789c:	b.eq	4078bc <ferror@plt+0x4ecc>  // b.none
  4078a0:	ldr	x0, [x19, #24]
  4078a4:	add	x1, x0, #0x1
  4078a8:	str	x1, [x19, #24]
  4078ac:	mov	w1, #0x2d                  	// #45
  4078b0:	strb	w1, [x0]
  4078b4:	add	x21, x21, #0x1
  4078b8:	b	4079a0 <ferror@plt+0x4fb0>
  4078bc:	mov	x1, #0x1                   	// #1
  4078c0:	mov	x0, x19
  4078c4:	bl	416dc4 <_obstack_newchunk@@Base>
  4078c8:	b	4078a0 <ferror@plt+0x4eb0>
  4078cc:	ldr	x1, [x19, #24]
  4078d0:	add	x2, x1, #0x1
  4078d4:	str	x2, [x19, #24]
  4078d8:	strb	w20, [x1]
  4078dc:	ldr	w1, [sp, #52]
  4078e0:	sub	w1, w1, #0x1
  4078e4:	str	w1, [sp, #52]
  4078e8:	tbnz	w1, #31, 40790c <ferror@plt+0x4f1c>
  4078ec:	ldr	x2, [x19, #32]
  4078f0:	ldr	x1, [x19, #24]
  4078f4:	cmp	x2, x1
  4078f8:	b.ne	4078cc <ferror@plt+0x4edc>  // b.any
  4078fc:	mov	x1, x22
  407900:	mov	x0, x19
  407904:	bl	416dc4 <_obstack_newchunk@@Base>
  407908:	b	4078cc <ferror@plt+0x4edc>
  40790c:	mov	x0, x21
  407910:	bl	4023d0 <strlen@plt>
  407914:	mov	x20, x0
  407918:	ldr	x0, [x19, #32]
  40791c:	ldr	x1, [x19, #24]
  407920:	sub	x0, x0, x1
  407924:	cmp	x20, x0
  407928:	b.hi	40794c <ferror@plt+0x4f5c>  // b.pmore
  40792c:	mov	x2, x20
  407930:	mov	x1, x21
  407934:	ldr	x0, [x19, #24]
  407938:	bl	402390 <memcpy@plt>
  40793c:	ldr	x0, [x19, #24]
  407940:	add	x20, x0, x20
  407944:	str	x20, [x19, #24]
  407948:	b	407658 <ferror@plt+0x4c68>
  40794c:	mov	x1, x20
  407950:	mov	x0, x19
  407954:	bl	416dc4 <_obstack_newchunk@@Base>
  407958:	b	40792c <ferror@plt+0x4f3c>
  40795c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407960:	ldr	w0, [x0, #1644]
  407964:	ldr	x1, [x20]
  407968:	ldr	x3, [x1, #8]
  40796c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x106c>
  407970:	add	x2, x2, #0x8a0
  407974:	mov	w1, #0x0                   	// #0
  407978:	bl	402c80 <ferror@plt+0x290>
  40797c:	ldr	w1, [sp, #56]
  407980:	cmp	w1, #0x1
  407984:	b.eq	407740 <ferror@plt+0x4d50>  // b.none
  407988:	ldr	w0, [sp, #60]
  40798c:	bl	406d94 <ferror@plt+0x43a4>
  407990:	mov	x21, x0
  407994:	ldrb	w0, [x0]
  407998:	cmp	w0, #0x2d
  40799c:	b.eq	407890 <ferror@plt+0x4ea0>  // b.none
  4079a0:	mov	x0, x21
  4079a4:	bl	4023d0 <strlen@plt>
  4079a8:	ldr	w1, [sp, #52]
  4079ac:	sub	w0, w1, w0
  4079b0:	sub	w0, w0, #0x1
  4079b4:	str	w0, [sp, #52]
  4079b8:	tbnz	w0, #31, 40790c <ferror@plt+0x4f1c>
  4079bc:	mov	x22, #0x1                   	// #1
  4079c0:	mov	w20, #0x30                  	// #48
  4079c4:	b	4078ec <ferror@plt+0x4efc>
  4079c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4079cc:	ldr	w0, [x0, #1644]
  4079d0:	b	407724 <ferror@plt+0x4d34>
  4079d4:	str	xzr, [x0, #40]
  4079d8:	str	xzr, [x0, #32]
  4079dc:	str	xzr, [x0]
  4079e0:	str	xzr, [x0, #8]
  4079e4:	cbz	x1, 4079f0 <ferror@plt+0x5000>
  4079e8:	str	xzr, [x1, #8]
  4079ec:	str	xzr, [x1, #16]
  4079f0:	ret
  4079f4:	stp	x29, x30, [sp, #-96]!
  4079f8:	mov	x29, sp
  4079fc:	stp	x19, x20, [sp, #16]
  407a00:	stp	x21, x22, [sp, #32]
  407a04:	stp	x23, x24, [sp, #48]
  407a08:	stp	x25, x26, [sp, #64]
  407a0c:	stp	x27, x28, [sp, #80]
  407a10:	mov	x19, x0
  407a14:	mov	w24, w2
  407a18:	mov	x25, x3
  407a1c:	ldr	x21, [x1, #32]
  407a20:	adrp	x27, 418000 <_obstack_memory_used@@Base+0x106c>
  407a24:	add	x27, x27, #0x930
  407a28:	adrp	x26, 430000 <_obstack_memory_used@@Base+0x1906c>
  407a2c:	add	x26, x26, #0x670
  407a30:	sub	w28, w2, #0x1
  407a34:	b	407b88 <ferror@plt+0x5198>
  407a38:	mov	x0, x21
  407a3c:	bl	4023d0 <strlen@plt>
  407a40:	mov	x20, x0
  407a44:	ldr	x0, [x19, #32]
  407a48:	ldr	x1, [x19, #24]
  407a4c:	sub	x0, x0, x1
  407a50:	cmp	x20, x0
  407a54:	b.hi	407a90 <ferror@plt+0x50a0>  // b.pmore
  407a58:	mov	x2, x20
  407a5c:	mov	x1, x21
  407a60:	ldr	x0, [x19, #24]
  407a64:	bl	402390 <memcpy@plt>
  407a68:	ldr	x0, [x19, #24]
  407a6c:	add	x20, x0, x20
  407a70:	str	x20, [x19, #24]
  407a74:	ldp	x19, x20, [sp, #16]
  407a78:	ldp	x21, x22, [sp, #32]
  407a7c:	ldp	x23, x24, [sp, #48]
  407a80:	ldp	x25, x26, [sp, #64]
  407a84:	ldp	x27, x28, [sp, #80]
  407a88:	ldp	x29, x30, [sp], #96
  407a8c:	ret
  407a90:	mov	x1, x20
  407a94:	mov	x0, x19
  407a98:	bl	416dc4 <_obstack_newchunk@@Base>
  407a9c:	b	407a58 <ferror@plt+0x5068>
  407aa0:	mov	x1, x22
  407aa4:	mov	x0, x19
  407aa8:	bl	416dc4 <_obstack_newchunk@@Base>
  407aac:	b	407bb4 <ferror@plt+0x51c4>
  407ab0:	cmp	w0, #0x40
  407ab4:	b.eq	407bf8 <ferror@plt+0x5208>  // b.none
  407ab8:	ldr	x0, [x19, #32]
  407abc:	cmp	x22, x0
  407ac0:	b.eq	407c1c <ferror@plt+0x522c>  // b.none
  407ac4:	ldr	x0, [x19, #24]
  407ac8:	add	x1, x0, #0x1
  407acc:	str	x1, [x19, #24]
  407ad0:	mov	w1, #0x24                  	// #36
  407ad4:	strb	w1, [x0]
  407ad8:	b	407b88 <ferror@plt+0x5198>
  407adc:	ldr	w23, [x26]
  407ae0:	cbz	w23, 407b3c <ferror@plt+0x514c>
  407ae4:	add	x21, x20, #0x2
  407ae8:	sub	w23, w0, #0x30
  407aec:	cmp	w23, w24
  407af0:	b.ge	407b88 <ferror@plt+0x5198>  // b.tcont
  407af4:	sxtw	x23, w23
  407af8:	ldr	x0, [x25, x23, lsl #3]
  407afc:	ldr	x0, [x0, #8]
  407b00:	bl	4023d0 <strlen@plt>
  407b04:	mov	x20, x0
  407b08:	ldr	x0, [x19, #32]
  407b0c:	sub	x22, x0, x22
  407b10:	cmp	x20, x22
  407b14:	b.hi	407b68 <ferror@plt+0x5178>  // b.pmore
  407b18:	ldr	x0, [x25, x23, lsl #3]
  407b1c:	mov	x2, x20
  407b20:	ldr	x1, [x0, #8]
  407b24:	ldr	x0, [x19, #24]
  407b28:	bl	402390 <memcpy@plt>
  407b2c:	ldr	x0, [x19, #24]
  407b30:	add	x20, x0, x20
  407b34:	str	x20, [x19, #24]
  407b38:	b	407b88 <ferror@plt+0x5198>
  407b3c:	bl	4027c0 <__ctype_b_loc@plt>
  407b40:	ldr	x2, [x0]
  407b44:	ldrb	w0, [x21]
  407b48:	and	x1, x0, #0xff
  407b4c:	ldrh	w1, [x2, x1, lsl #1]
  407b50:	tbz	w1, #11, 407aec <ferror@plt+0x50fc>
  407b54:	add	w23, w23, w23, lsl #2
  407b58:	sub	w0, w0, #0x30
  407b5c:	add	w23, w0, w23, lsl #1
  407b60:	add	x21, x21, #0x1
  407b64:	b	407b44 <ferror@plt+0x5154>
  407b68:	mov	x1, x20
  407b6c:	mov	x0, x19
  407b70:	bl	416dc4 <_obstack_newchunk@@Base>
  407b74:	b	407b18 <ferror@plt+0x5128>
  407b78:	mov	w1, w28
  407b7c:	mov	x0, x19
  407b80:	bl	406e04 <ferror@plt+0x4414>
  407b84:	add	x21, x20, #0x2
  407b88:	mov	w1, #0x24                  	// #36
  407b8c:	mov	x0, x21
  407b90:	bl	402860 <strchr@plt>
  407b94:	mov	x20, x0
  407b98:	cbz	x0, 407a38 <ferror@plt+0x5048>
  407b9c:	sub	x22, x0, x21
  407ba0:	ldr	x0, [x19, #32]
  407ba4:	ldr	x1, [x19, #24]
  407ba8:	sub	x0, x0, x1
  407bac:	cmp	x22, x0
  407bb0:	b.hi	407aa0 <ferror@plt+0x50b0>  // b.pmore
  407bb4:	mov	x2, x22
  407bb8:	mov	x1, x21
  407bbc:	ldr	x0, [x19, #24]
  407bc0:	bl	402390 <memcpy@plt>
  407bc4:	ldr	x0, [x19, #24]
  407bc8:	add	x22, x0, x22
  407bcc:	str	x22, [x19, #24]
  407bd0:	add	x21, x20, #0x1
  407bd4:	ldrb	w0, [x20, #1]
  407bd8:	cmp	w0, #0x39
  407bdc:	b.hi	407ab0 <ferror@plt+0x50c0>  // b.pmore
  407be0:	cmp	w0, #0x2f
  407be4:	b.hi	407adc <ferror@plt+0x50ec>  // b.pmore
  407be8:	cmp	w0, #0x23
  407bec:	b.eq	407b78 <ferror@plt+0x5188>  // b.none
  407bf0:	cmp	w0, #0x2a
  407bf4:	b.ne	407ab8 <ferror@plt+0x50c8>  // b.any
  407bf8:	cmp	w0, #0x40
  407bfc:	cset	w4, eq  // eq = none
  407c00:	mov	x3, x27
  407c04:	mov	x2, x25
  407c08:	mov	w1, w24
  407c0c:	mov	x0, x19
  407c10:	bl	403e8c <ferror@plt+0x149c>
  407c14:	add	x21, x20, #0x2
  407c18:	b	407b88 <ferror@plt+0x5198>
  407c1c:	mov	x1, #0x1                   	// #1
  407c20:	mov	x0, x19
  407c24:	bl	416dc4 <_obstack_newchunk@@Base>
  407c28:	b	407ac4 <ferror@plt+0x50d4>
  407c2c:	stp	x29, x30, [sp, #-288]!
  407c30:	mov	x29, sp
  407c34:	stp	x19, x20, [sp, #16]
  407c38:	mov	x19, x0
  407c3c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407c40:	ldr	x0, [x0, #2032]
  407c44:	cbz	x0, 407c70 <ferror@plt+0x5280>
  407c48:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  407c4c:	ldr	x1, [x1, #1048]
  407c50:	cmp	x0, x1
  407c54:	b.eq	407c70 <ferror@plt+0x5280>  // b.none
  407c58:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  407c5c:	ldr	x1, [x1, #1072]
  407c60:	cmp	x0, x1
  407c64:	b.eq	407c70 <ferror@plt+0x5280>  // b.none
  407c68:	bl	41138c <ferror@plt+0xe99c>
  407c6c:	cbnz	w0, 407cdc <ferror@plt+0x52ec>
  407c70:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407c74:	str	x19, [x0, #2032]
  407c78:	cbz	x19, 407cd0 <ferror@plt+0x52e0>
  407c7c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407c80:	ldr	x0, [x0, #1072]
  407c84:	cmp	x0, x19
  407c88:	b.eq	407cd0 <ferror@plt+0x52e0>  // b.none
  407c8c:	add	x2, sp, #0xa0
  407c90:	mov	w1, #0x1                   	// #1
  407c94:	mov	w0, #0x0                   	// #0
  407c98:	bl	4028f0 <__fxstat@plt>
  407c9c:	tbnz	w0, #31, 407cd0 <ferror@plt+0x52e0>
  407ca0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407ca4:	ldr	x0, [x0, #2032]
  407ca8:	bl	402500 <fileno@plt>
  407cac:	add	x2, sp, #0x20
  407cb0:	mov	w1, w0
  407cb4:	mov	w0, #0x0                   	// #0
  407cb8:	bl	4028f0 <__fxstat@plt>
  407cbc:	tbnz	w0, #31, 407cd0 <ferror@plt+0x52e0>
  407cc0:	ldr	x0, [sp, #168]
  407cc4:	ldr	x1, [sp, #40]
  407cc8:	cmp	x0, x1
  407ccc:	b.eq	407d0c <ferror@plt+0x531c>  // b.none
  407cd0:	ldp	x19, x20, [sp, #16]
  407cd4:	ldp	x29, x30, [sp], #288
  407cd8:	ret
  407cdc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407ce0:	ldr	w20, [x0, #1644]
  407ce4:	bl	402970 <__errno_location@plt>
  407ce8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  407cec:	add	x2, x2, #0x4e0
  407cf0:	ldr	w1, [x0]
  407cf4:	mov	w0, w20
  407cf8:	bl	402c80 <ferror@plt+0x290>
  407cfc:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  407d00:	mov	w1, #0x1                   	// #1
  407d04:	str	w1, [x0, #3408]
  407d08:	b	407c70 <ferror@plt+0x5280>
  407d0c:	cmp	x0, #0x0
  407d10:	ldr	x1, [sp, #160]
  407d14:	ldr	x0, [sp, #32]
  407d18:	ccmp	x1, x0, #0x0, ne  // ne = any
  407d1c:	b.ne	407cd0 <ferror@plt+0x52e0>  // b.any
  407d20:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407d24:	ldr	x0, [x0, #2032]
  407d28:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  407d2c:	ldr	x1, [x1, #1048]
  407d30:	cmp	x0, x1
  407d34:	b.eq	407d40 <ferror@plt+0x5350>  // b.none
  407d38:	bl	41138c <ferror@plt+0xe99c>
  407d3c:	cbnz	w0, 407d54 <ferror@plt+0x5364>
  407d40:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407d44:	ldr	x1, [x0, #1072]
  407d48:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407d4c:	str	x1, [x0, #2032]
  407d50:	b	407cd0 <ferror@plt+0x52e0>
  407d54:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407d58:	ldr	w19, [x0, #1644]
  407d5c:	bl	402970 <__errno_location@plt>
  407d60:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  407d64:	add	x2, x2, #0x4e0
  407d68:	ldr	w1, [x0]
  407d6c:	mov	w0, w19
  407d70:	bl	402c80 <ferror@plt+0x290>
  407d74:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  407d78:	mov	w1, #0x1                   	// #1
  407d7c:	str	w1, [x0, #3408]
  407d80:	b	407d40 <ferror@plt+0x5350>
  407d84:	stp	x29, x30, [sp, #-32]!
  407d88:	mov	x29, sp
  407d8c:	str	x19, [sp, #16]
  407d90:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407d94:	add	x0, x0, #0x7f0
  407d98:	ldr	x1, [x0, #40]
  407d9c:	add	x0, x0, #0x8
  407da0:	ldr	x0, [x0, #24]
  407da4:	cmp	x1, x0
  407da8:	b.eq	407e6c <ferror@plt+0x547c>  // b.none
  407dac:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407db0:	add	x0, x0, #0x7f0
  407db4:	ldr	x1, [x0, #32]
  407db8:	add	x2, x1, #0x1
  407dbc:	str	x2, [x0, #32]
  407dc0:	strb	wzr, [x1]
  407dc4:	ldr	x19, [x0, #24]
  407dc8:	ldr	x2, [x0, #32]
  407dcc:	cmp	x2, x19
  407dd0:	b.eq	407e84 <ferror@plt+0x5494>  // b.none
  407dd4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407dd8:	add	x0, x0, #0x7f0
  407ddc:	ldr	x1, [x0, #56]
  407de0:	add	x2, x2, x1
  407de4:	bic	x1, x2, x1
  407de8:	str	x1, [x0, #32]
  407dec:	ldr	x2, [x0, #16]
  407df0:	add	x0, x0, #0x8
  407df4:	ldr	x0, [x0, #32]
  407df8:	sub	x1, x1, x2
  407dfc:	sub	x2, x0, x2
  407e00:	cmp	x1, x2
  407e04:	b.ls	407e10 <ferror@plt+0x5420>  // b.plast
  407e08:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  407e0c:	str	x0, [x1, #2064]
  407e10:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  407e14:	add	x0, x1, #0x7f0
  407e18:	ldr	x2, [x0, #32]
  407e1c:	str	x2, [x0, #24]
  407e20:	ldr	x0, [x1, #2032]
  407e24:	cbz	x0, 407e38 <ferror@plt+0x5448>
  407e28:	mov	x2, x19
  407e2c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x406c>
  407e30:	add	x1, x1, #0x38
  407e34:	bl	4164c0 <ferror@plt+0x13ad0>
  407e38:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407e3c:	ldr	x0, [x0, #2048]
  407e40:	cmp	x0, x19
  407e44:	b.cs	407e9c <ferror@plt+0x54ac>  // b.hs, b.nlast
  407e48:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407e4c:	ldr	x0, [x0, #2072]
  407e50:	cmp	x0, x19
  407e54:	b.ls	407e9c <ferror@plt+0x54ac>  // b.plast
  407e58:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407e5c:	add	x0, x0, #0x7f0
  407e60:	str	x19, [x0, #24]
  407e64:	str	x19, [x0, #32]
  407e68:	b	407eb0 <ferror@plt+0x54c0>
  407e6c:	mov	x1, #0x1                   	// #1
  407e70:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407e74:	add	x0, x0, #0x7f0
  407e78:	add	x0, x0, #0x8
  407e7c:	bl	416dc4 <_obstack_newchunk@@Base>
  407e80:	b	407dac <ferror@plt+0x53bc>
  407e84:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407e88:	add	x0, x0, #0x7f0
  407e8c:	ldrb	w1, [x0, #88]
  407e90:	orr	w1, w1, #0x2
  407e94:	strb	w1, [x0, #88]
  407e98:	b	407dd4 <ferror@plt+0x53e4>
  407e9c:	mov	x1, x19
  407ea0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  407ea4:	add	x0, x0, #0x7f0
  407ea8:	add	x0, x0, #0x8
  407eac:	bl	416f14 <_obstack_free@@Base>
  407eb0:	ldr	x19, [sp, #16]
  407eb4:	ldp	x29, x30, [sp], #32
  407eb8:	ret
  407ebc:	stp	x29, x30, [sp, #-176]!
  407ec0:	mov	x29, sp
  407ec4:	stp	x19, x20, [sp, #16]
  407ec8:	stp	x21, x22, [sp, #32]
  407ecc:	stp	x23, x24, [sp, #48]
  407ed0:	str	x25, [sp, #64]
  407ed4:	mov	x20, x0
  407ed8:	str	x1, [sp, #120]
  407edc:	str	x2, [sp, #128]
  407ee0:	str	x3, [sp, #136]
  407ee4:	str	x4, [sp, #144]
  407ee8:	str	x5, [sp, #152]
  407eec:	str	x6, [sp, #160]
  407ef0:	str	x7, [sp, #168]
  407ef4:	add	x0, sp, #0xb0
  407ef8:	str	x0, [sp, #80]
  407efc:	str	x0, [sp, #88]
  407f00:	add	x0, sp, #0x70
  407f04:	str	x0, [sp, #96]
  407f08:	mov	w0, #0xffffffc8            	// #-56
  407f0c:	str	w0, [sp, #104]
  407f10:	str	wzr, [sp, #108]
  407f14:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1906c>
  407f18:	add	x21, x21, #0x7f0
  407f1c:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  407f20:	add	x22, x22, #0x67c
  407f24:	adrp	x23, 417000 <_obstack_memory_used@@Base+0x6c>
  407f28:	b	407f50 <ferror@plt+0x5560>
  407f2c:	ldr	x1, [x21, #40]
  407f30:	ldr	x0, [x21, #32]
  407f34:	cmp	x1, x0
  407f38:	b.eq	408034 <ferror@plt+0x5644>  // b.none
  407f3c:	add	x20, x20, #0x1
  407f40:	ldr	x0, [x21, #32]
  407f44:	add	x2, x0, #0x1
  407f48:	str	x2, [x21, #32]
  407f4c:	strb	w19, [x0]
  407f50:	ldrb	w19, [x20]
  407f54:	cmp	w19, #0x25
  407f58:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  407f5c:	b.ne	407f2c <ferror@plt+0x553c>  // b.any
  407f60:	cbz	w19, 40819c <ferror@plt+0x57ac>
  407f64:	add	x24, x20, #0x2
  407f68:	ldrb	w0, [x20, #1]
  407f6c:	cmp	w0, #0x6c
  407f70:	b.eq	408110 <ferror@plt+0x5720>  // b.none
  407f74:	b.ls	408044 <ferror@plt+0x5654>  // b.plast
  407f78:	cmp	w0, #0x72
  407f7c:	b.eq	408128 <ferror@plt+0x5738>  // b.none
  407f80:	mov	w20, #0x0                   	// #0
  407f84:	cmp	w0, #0x73
  407f88:	b.ne	4080cc <ferror@plt+0x56dc>  // b.any
  407f8c:	ldr	w1, [sp, #104]
  407f90:	ldr	x0, [sp, #80]
  407f94:	tbnz	w1, #31, 4080e4 <ferror@plt+0x56f4>
  407f98:	add	x1, x0, #0xf
  407f9c:	and	x1, x1, #0xfffffffffffffff8
  407fa0:	str	x1, [sp, #80]
  407fa4:	ldr	x19, [x0]
  407fa8:	mov	x0, x19
  407fac:	bl	4023d0 <strlen@plt>
  407fb0:	cmp	w20, #0x0
  407fb4:	ccmp	w20, w0, #0x0, ne  // ne = any
  407fb8:	b.gt	408084 <ferror@plt+0x5694>
  407fbc:	sxtw	x25, w20
  407fc0:	ldr	x0, [x21, #40]
  407fc4:	ldr	x1, [x21, #32]
  407fc8:	sub	x0, x0, x1
  407fcc:	cmp	x0, w20, sxtw
  407fd0:	b.cc	40817c <ferror@plt+0x578c>  // b.lo, b.ul, b.last
  407fd4:	add	x20, x21, #0x8
  407fd8:	mov	x2, x25
  407fdc:	mov	x1, x19
  407fe0:	ldr	x0, [x21, #32]
  407fe4:	bl	402390 <memcpy@plt>
  407fe8:	ldr	x2, [x21, #32]
  407fec:	add	x2, x2, x25
  407ff0:	str	x2, [x21, #32]
  407ff4:	ldr	x0, [x21, #40]
  407ff8:	sub	x2, x0, x2
  407ffc:	cmp	x2, #0x2
  408000:	b.ls	40818c <ferror@plt+0x579c>  // b.plast
  408004:	ldr	x2, [x21, #32]
  408008:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40800c:	add	x0, x0, #0x500
  408010:	ldrh	w3, [x0]
  408014:	strh	w3, [x2]
  408018:	ldrb	w0, [x0, #2]
  40801c:	strb	w0, [x2, #2]
  408020:	ldr	x0, [x21, #32]
  408024:	add	x0, x0, #0x3
  408028:	str	x0, [x21, #32]
  40802c:	mov	x20, x24
  408030:	b	407f50 <ferror@plt+0x5560>
  408034:	mov	x1, #0x1                   	// #1
  408038:	add	x0, x21, #0x8
  40803c:	bl	416dc4 <_obstack_newchunk@@Base>
  408040:	b	407f3c <ferror@plt+0x554c>
  408044:	cmp	w0, #0x53
  408048:	b.eq	4080d8 <ferror@plt+0x56e8>  // b.none
  40804c:	cmp	w0, #0x64
  408050:	b.ne	4080c0 <ferror@plt+0x56d0>  // b.any
  408054:	ldr	w1, [sp, #104]
  408058:	ldr	x0, [sp, #80]
  40805c:	tbnz	w1, #31, 408140 <ferror@plt+0x5750>
  408060:	add	x1, x0, #0xb
  408064:	and	x1, x1, #0xfffffffffffffff8
  408068:	str	x1, [sp, #80]
  40806c:	mov	w1, #0xa                   	// #10
  408070:	ldr	w0, [x0]
  408074:	bl	406d94 <ferror@plt+0x43a4>
  408078:	mov	x19, x0
  40807c:	mov	x0, x19
  408080:	bl	4023d0 <strlen@plt>
  408084:	sxtw	x25, w0
  408088:	ldr	x1, [x21, #40]
  40808c:	ldr	x2, [x21, #32]
  408090:	sub	x1, x1, x2
  408094:	cmp	x1, w0, sxtw
  408098:	b.cc	40816c <ferror@plt+0x577c>  // b.lo, b.ul, b.last
  40809c:	mov	x2, x25
  4080a0:	mov	x1, x19
  4080a4:	ldr	x0, [x21, #32]
  4080a8:	bl	402390 <memcpy@plt>
  4080ac:	ldr	x2, [x21, #32]
  4080b0:	add	x2, x2, x25
  4080b4:	str	x2, [x21, #32]
  4080b8:	mov	x20, x24
  4080bc:	b	407f50 <ferror@plt+0x5560>
  4080c0:	mov	w0, #0x0                   	// #0
  4080c4:	add	x19, x23, #0x6c0
  4080c8:	b	408084 <ferror@plt+0x5694>
  4080cc:	mov	w0, #0x0                   	// #0
  4080d0:	add	x19, x23, #0x6c0
  4080d4:	b	408084 <ferror@plt+0x5694>
  4080d8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4080dc:	ldr	w20, [x0, #1664]
  4080e0:	b	407f8c <ferror@plt+0x559c>
  4080e4:	add	w2, w1, #0x8
  4080e8:	str	w2, [sp, #104]
  4080ec:	cmp	w2, #0x0
  4080f0:	b.le	408104 <ferror@plt+0x5714>
  4080f4:	add	x1, x0, #0xf
  4080f8:	and	x1, x1, #0xfffffffffffffff8
  4080fc:	str	x1, [sp, #80]
  408100:	b	407fa4 <ferror@plt+0x55b4>
  408104:	ldr	x0, [sp, #88]
  408108:	add	x0, x0, w1, sxtw
  40810c:	b	407fa4 <ferror@plt+0x55b4>
  408110:	ldr	w0, [x22]
  408114:	add	x19, x23, #0x6c0
  408118:	tbz	w0, #2, 40807c <ferror@plt+0x568c>
  40811c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  408120:	ldr	x19, [x0, #3424]
  408124:	b	40807c <ferror@plt+0x568c>
  408128:	ldr	w0, [x22]
  40812c:	add	x19, x23, #0x6c0
  408130:	tbz	w0, #2, 40807c <ferror@plt+0x568c>
  408134:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  408138:	ldr	x19, [x0, #3480]
  40813c:	b	40807c <ferror@plt+0x568c>
  408140:	add	w2, w1, #0x8
  408144:	str	w2, [sp, #104]
  408148:	cmp	w2, #0x0
  40814c:	b.le	408160 <ferror@plt+0x5770>
  408150:	add	x1, x0, #0xb
  408154:	and	x1, x1, #0xfffffffffffffff8
  408158:	str	x1, [sp, #80]
  40815c:	b	40806c <ferror@plt+0x567c>
  408160:	ldr	x0, [sp, #88]
  408164:	add	x0, x0, w1, sxtw
  408168:	b	40806c <ferror@plt+0x567c>
  40816c:	mov	x1, x25
  408170:	add	x0, x21, #0x8
  408174:	bl	416dc4 <_obstack_newchunk@@Base>
  408178:	b	40809c <ferror@plt+0x56ac>
  40817c:	mov	x1, x25
  408180:	add	x0, x21, #0x8
  408184:	bl	416dc4 <_obstack_newchunk@@Base>
  408188:	b	407fd4 <ferror@plt+0x55e4>
  40818c:	mov	x1, #0x3                   	// #3
  408190:	mov	x0, x20
  408194:	bl	416dc4 <_obstack_newchunk@@Base>
  408198:	b	408004 <ferror@plt+0x5614>
  40819c:	ldp	x19, x20, [sp, #16]
  4081a0:	ldp	x21, x22, [sp, #32]
  4081a4:	ldp	x23, x24, [sp, #48]
  4081a8:	ldr	x25, [sp, #64]
  4081ac:	ldp	x29, x30, [sp], #176
  4081b0:	ret
  4081b4:	stp	x29, x30, [sp, #-32]!
  4081b8:	mov	x29, sp
  4081bc:	str	x19, [sp, #16]
  4081c0:	mov	w19, w0
  4081c4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  4081c8:	add	x0, x0, #0x508
  4081cc:	bl	407ebc <ferror@plt+0x54cc>
  4081d0:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4081d4:	ldr	w1, [x1, #3416]
  4081d8:	cbz	w1, 4081f4 <ferror@plt+0x5804>
  4081dc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4081e0:	ldr	w0, [x0, #1660]
  4081e4:	tbnz	w0, #5, 408220 <ferror@plt+0x5830>
  4081e8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4081ec:	ldr	w0, [x0, #1660]
  4081f0:	tbnz	w0, #4, 408238 <ferror@plt+0x5848>
  4081f4:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  4081f8:	ldr	w1, [x1, #2472]
  4081fc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  408200:	add	x0, x0, #0x528
  408204:	bl	407ebc <ferror@plt+0x54cc>
  408208:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40820c:	ldr	w1, [x1, #1660]
  408210:	tbnz	w1, #9, 408250 <ferror@plt+0x5860>
  408214:	ldr	x19, [sp, #16]
  408218:	ldp	x29, x30, [sp], #32
  40821c:	ret
  408220:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  408224:	ldr	x1, [x0, #3440]
  408228:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40822c:	add	x0, x0, #0x518
  408230:	bl	407ebc <ferror@plt+0x54cc>
  408234:	b	4081e8 <ferror@plt+0x57f8>
  408238:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40823c:	ldr	w1, [x0, #3416]
  408240:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  408244:	add	x0, x0, #0x520
  408248:	bl	407ebc <ferror@plt+0x54cc>
  40824c:	b	4081f4 <ferror@plt+0x5804>
  408250:	mov	w1, w19
  408254:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  408258:	add	x0, x0, #0x530
  40825c:	bl	407ebc <ferror@plt+0x54cc>
  408260:	b	408214 <ferror@plt+0x5824>
  408264:	stp	x29, x30, [sp, #-16]!
  408268:	mov	x29, sp
  40826c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408270:	ldr	x0, [x0, #1048]
  408274:	bl	407c2c <ferror@plt+0x523c>
  408278:	adrp	x4, 402000 <mbrtowc@plt-0x380>
  40827c:	add	x4, x4, #0x810
  408280:	adrp	x3, 416000 <ferror@plt+0x13610>
  408284:	add	x3, x3, #0x7c
  408288:	mov	x2, #0x0                   	// #0
  40828c:	mov	x1, #0x0                   	// #0
  408290:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408294:	add	x0, x0, #0x7f0
  408298:	add	x0, x0, #0x8
  40829c:	bl	416d70 <_obstack_begin@@Base>
  4082a0:	ldp	x29, x30, [sp], #16
  4082a4:	ret
  4082a8:	stp	x29, x30, [sp, #-32]!
  4082ac:	mov	x29, sp
  4082b0:	str	x19, [sp, #16]
  4082b4:	cbz	x0, 4083a8 <ferror@plt+0x59b8>
  4082b8:	ldrb	w1, [x0]
  4082bc:	cbz	w1, 4083b0 <ferror@plt+0x59c0>
  4082c0:	mov	w19, #0x0                   	// #0
  4082c4:	b	408378 <ferror@plt+0x5988>
  4082c8:	cmp	w1, #0x63
  4082cc:	b.eq	40835c <ferror@plt+0x596c>  // b.none
  4082d0:	b.ls	4082ec <ferror@plt+0x58fc>  // b.plast
  4082d4:	cmp	w1, #0x65
  4082d8:	b.eq	40833c <ferror@plt+0x594c>  // b.none
  4082dc:	cmp	w1, #0x66
  4082e0:	b.ne	40830c <ferror@plt+0x591c>  // b.any
  4082e4:	orr	w19, w19, #0x20
  4082e8:	b	408370 <ferror@plt+0x5980>
  4082ec:	cmp	w1, #0x56
  4082f0:	b.eq	40836c <ferror@plt+0x597c>  // b.none
  4082f4:	cmp	w1, #0x61
  4082f8:	b.ne	408304 <ferror@plt+0x5914>  // b.any
  4082fc:	orr	w19, w19, #0x1
  408300:	b	408370 <ferror@plt+0x5980>
  408304:	mov	w19, #0xffffffff            	// #-1
  408308:	b	408430 <ferror@plt+0x5a40>
  40830c:	mov	w19, #0xffffffff            	// #-1
  408310:	b	408430 <ferror@plt+0x5a40>
  408314:	cmp	w1, #0x6c
  408318:	b.eq	408354 <ferror@plt+0x5964>  // b.none
  40831c:	cmp	w1, #0x70
  408320:	b.ne	40832c <ferror@plt+0x593c>  // b.any
  408324:	orr	w19, w19, #0x40
  408328:	b	408370 <ferror@plt+0x5980>
  40832c:	mov	w19, #0xffffffff            	// #-1
  408330:	b	408430 <ferror@plt+0x5a40>
  408334:	mov	w19, #0xffffffff            	// #-1
  408338:	b	408430 <ferror@plt+0x5a40>
  40833c:	orr	w19, w19, #0x2
  408340:	b	408370 <ferror@plt+0x5980>
  408344:	orr	w19, w19, #0x4
  408348:	b	408370 <ferror@plt+0x5980>
  40834c:	orr	w19, w19, #0x8
  408350:	b	408370 <ferror@plt+0x5980>
  408354:	orr	w19, w19, #0x10
  408358:	b	408370 <ferror@plt+0x5980>
  40835c:	orr	w19, w19, #0x80
  408360:	b	408370 <ferror@plt+0x5980>
  408364:	orr	w19, w19, #0x100
  408368:	b	408370 <ferror@plt+0x5980>
  40836c:	mov	w19, #0x3ff                 	// #1023
  408370:	ldrb	w1, [x0, #1]!
  408374:	cbz	w1, 4083b4 <ferror@plt+0x59c4>
  408378:	cmp	w1, #0x69
  40837c:	b.eq	408364 <ferror@plt+0x5974>  // b.none
  408380:	b.ls	4082c8 <ferror@plt+0x58d8>  // b.plast
  408384:	cmp	w1, #0x71
  408388:	b.eq	408344 <ferror@plt+0x5954>  // b.none
  40838c:	b.ls	408314 <ferror@plt+0x5924>  // b.plast
  408390:	cmp	w1, #0x74
  408394:	b.eq	40834c <ferror@plt+0x595c>  // b.none
  408398:	cmp	w1, #0x78
  40839c:	b.ne	408334 <ferror@plt+0x5944>  // b.any
  4083a0:	orr	w19, w19, #0x200
  4083a4:	b	408370 <ferror@plt+0x5980>
  4083a8:	mov	w19, #0x7                   	// #7
  4083ac:	b	4083b4 <ferror@plt+0x59c4>
  4083b0:	mov	w19, #0x7                   	// #7
  4083b4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4083b8:	add	x0, x0, #0x7f0
  4083bc:	ldr	x1, [x0, #24]
  4083c0:	ldr	x3, [x0, #32]
  4083c4:	cmp	x3, x1
  4083c8:	b.eq	408440 <ferror@plt+0x5a50>  // b.none
  4083cc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4083d0:	add	x0, x0, #0x7f0
  4083d4:	ldr	x2, [x0, #56]
  4083d8:	add	x3, x3, x2
  4083dc:	bic	x2, x3, x2
  4083e0:	str	x2, [x0, #32]
  4083e4:	ldr	x3, [x0, #16]
  4083e8:	ldr	x4, [x0, #40]
  4083ec:	sub	x2, x2, x3
  4083f0:	sub	x0, x4, x3
  4083f4:	cmp	x2, x0
  4083f8:	b.ls	408404 <ferror@plt+0x5a14>  // b.plast
  4083fc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408400:	str	x4, [x0, #2064]
  408404:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408408:	add	x0, x0, #0x7f0
  40840c:	ldr	x2, [x0, #32]
  408410:	str	x2, [x0, #24]
  408414:	cmp	x4, x1
  408418:	ccmp	x3, x1, #0x2, hi  // hi = pmore
  40841c:	b.cc	408458 <ferror@plt+0x5a68>  // b.lo, b.ul, b.last
  408420:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408424:	add	x0, x0, #0x7f0
  408428:	add	x0, x0, #0x8
  40842c:	bl	416f14 <_obstack_free@@Base>
  408430:	mov	w0, w19
  408434:	ldr	x19, [sp, #16]
  408438:	ldp	x29, x30, [sp], #32
  40843c:	ret
  408440:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408444:	add	x0, x0, #0x7f0
  408448:	ldrb	w2, [x0, #88]
  40844c:	orr	w2, w2, #0x2
  408450:	strb	w2, [x0, #88]
  408454:	b	4083cc <ferror@plt+0x59dc>
  408458:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40845c:	add	x0, x0, #0x7f0
  408460:	str	x1, [x0, #24]
  408464:	str	x1, [x0, #32]
  408468:	b	408430 <ferror@plt+0x5a40>
  40846c:	stp	x29, x30, [sp, #-16]!
  408470:	mov	x29, sp
  408474:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408478:	ldr	x0, [x0, #1072]
  40847c:	bl	416a7c <ferror@plt+0x1408c>
  408480:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408484:	ldr	x0, [x0, #1048]
  408488:	bl	416a7c <ferror@plt+0x1408c>
  40848c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408490:	ldr	x0, [x0, #2032]
  408494:	cbz	x0, 4084bc <ferror@plt+0x5acc>
  408498:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40849c:	ldr	x1, [x1, #1072]
  4084a0:	cmp	x0, x1
  4084a4:	b.eq	4084bc <ferror@plt+0x5acc>  // b.none
  4084a8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  4084ac:	ldr	x1, [x1, #1048]
  4084b0:	cmp	x0, x1
  4084b4:	b.eq	4084bc <ferror@plt+0x5acc>  // b.none
  4084b8:	bl	416a7c <ferror@plt+0x1408c>
  4084bc:	mov	w2, #0x1                   	// #1
  4084c0:	mov	x1, #0x0                   	// #0
  4084c4:	mov	w0, #0x0                   	// #0
  4084c8:	bl	4024e0 <lseek@plt>
  4084cc:	tbz	x0, #63, 4084d8 <ferror@plt+0x5ae8>
  4084d0:	ldp	x29, x30, [sp], #16
  4084d4:	ret
  4084d8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4084dc:	ldr	x0, [x0, #1080]
  4084e0:	bl	416a7c <ferror@plt+0x1408c>
  4084e4:	cbnz	w0, 4084d0 <ferror@plt+0x5ae0>
  4084e8:	mov	w2, #0x1                   	// #1
  4084ec:	mov	x1, #0x0                   	// #0
  4084f0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4084f4:	ldr	x0, [x0, #1080]
  4084f8:	bl	416b18 <ferror@plt+0x14128>
  4084fc:	b	4084d0 <ferror@plt+0x5ae0>
  408500:	stp	x29, x30, [sp, #-32]!
  408504:	mov	x29, sp
  408508:	cbz	x0, 408528 <ferror@plt+0x5b38>
  40850c:	ldrb	w1, [x0]
  408510:	cbnz	w1, 40853c <ferror@plt+0x5b4c>
  408514:	mov	x0, #0x0                   	// #0
  408518:	bl	407c2c <ferror@plt+0x523c>
  40851c:	mov	w0, #0x1                   	// #1
  408520:	ldp	x29, x30, [sp], #32
  408524:	ret
  408528:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40852c:	ldr	x0, [x0, #1048]
  408530:	bl	407c2c <ferror@plt+0x523c>
  408534:	mov	w0, #0x1                   	// #1
  408538:	b	408520 <ferror@plt+0x5b30>
  40853c:	stp	x19, x20, [sp, #16]
  408540:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  408544:	add	x1, x1, #0x538
  408548:	bl	411d38 <ferror@plt+0xf348>
  40854c:	mov	x19, x0
  408550:	mov	w0, #0x0                   	// #0
  408554:	cbz	x19, 4085a4 <ferror@plt+0x5bb4>
  408558:	mov	x0, x19
  40855c:	bl	402500 <fileno@plt>
  408560:	mov	w1, #0x1                   	// #1
  408564:	bl	411304 <ferror@plt+0xe914>
  408568:	cbnz	w0, 408580 <ferror@plt+0x5b90>
  40856c:	mov	x0, x19
  408570:	bl	407c2c <ferror@plt+0x523c>
  408574:	mov	w0, #0x1                   	// #1
  408578:	ldp	x19, x20, [sp, #16]
  40857c:	b	408520 <ferror@plt+0x5b30>
  408580:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408584:	ldr	w20, [x0, #1644]
  408588:	bl	402970 <__errno_location@plt>
  40858c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  408590:	add	x2, x2, #0x540
  408594:	ldr	w1, [x0]
  408598:	mov	w0, w20
  40859c:	bl	402c80 <ferror@plt+0x290>
  4085a0:	b	40856c <ferror@plt+0x5b7c>
  4085a4:	ldp	x19, x20, [sp, #16]
  4085a8:	b	408520 <ferror@plt+0x5b30>
  4085ac:	stp	x29, x30, [sp, #-16]!
  4085b0:	mov	x29, sp
  4085b4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  4085b8:	add	x1, x1, #0x570
  4085bc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4085c0:	ldr	x0, [x0, #2032]
  4085c4:	bl	4164c0 <ferror@plt+0x13ad0>
  4085c8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4085cc:	ldr	w0, [x0, #3416]
  4085d0:	cbz	w0, 4085ec <ferror@plt+0x5bfc>
  4085d4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4085d8:	ldr	w0, [x0, #1660]
  4085dc:	tbnz	w0, #5, 408604 <ferror@plt+0x5c14>
  4085e0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4085e4:	ldr	w0, [x0, #1660]
  4085e8:	tbnz	w0, #4, 408624 <ferror@plt+0x5c34>
  4085ec:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4085f0:	ldr	x1, [x0, #2032]
  4085f4:	mov	w0, #0x20                  	// #32
  4085f8:	bl	402470 <putc@plt>
  4085fc:	ldp	x29, x30, [sp], #16
  408600:	ret
  408604:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  408608:	ldr	x2, [x0, #3440]
  40860c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  408610:	add	x1, x1, #0x518
  408614:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408618:	ldr	x0, [x0, #2032]
  40861c:	bl	4164c0 <ferror@plt+0x13ad0>
  408620:	b	4085e0 <ferror@plt+0x5bf0>
  408624:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  408628:	ldr	w2, [x0, #3416]
  40862c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  408630:	add	x1, x1, #0x520
  408634:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408638:	ldr	x0, [x0, #2032]
  40863c:	bl	4164c0 <ferror@plt+0x13ad0>
  408640:	b	4085ec <ferror@plt+0x5bfc>
  408644:	stp	x29, x30, [sp, #-32]!
  408648:	mov	x29, sp
  40864c:	str	x19, [sp, #16]
  408650:	mov	x19, x0
  408654:	mov	w0, w1
  408658:	bl	4081b4 <ferror@plt+0x57c4>
  40865c:	mov	x1, x19
  408660:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  408664:	add	x0, x0, #0x580
  408668:	bl	407ebc <ferror@plt+0x54cc>
  40866c:	bl	407d84 <ferror@plt+0x5394>
  408670:	ldr	x19, [sp, #16]
  408674:	ldp	x29, x30, [sp], #32
  408678:	ret
  40867c:	stp	x29, x30, [sp, #-64]!
  408680:	mov	x29, sp
  408684:	stp	x19, x20, [sp, #16]
  408688:	stp	x21, x22, [sp, #32]
  40868c:	mov	x19, x0
  408690:	mov	w0, w1
  408694:	mov	w20, w2
  408698:	mov	x21, x3
  40869c:	bl	4081b4 <ferror@plt+0x57c4>
  4086a0:	mov	x1, x19
  4086a4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  4086a8:	add	x0, x0, #0x740
  4086ac:	bl	407ebc <ferror@plt+0x54cc>
  4086b0:	cmp	w20, #0x1
  4086b4:	b.le	4086c4 <ferror@plt+0x5cd4>
  4086b8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4086bc:	ldr	w0, [x0, #1660]
  4086c0:	tbnz	w0, #0, 4086e0 <ferror@plt+0x5cf0>
  4086c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4086c8:	ldr	w0, [x0, #1660]
  4086cc:	tbnz	w0, #7, 4087c0 <ferror@plt+0x5dd0>
  4086d0:	ldp	x19, x20, [sp, #16]
  4086d4:	ldp	x21, x22, [sp, #32]
  4086d8:	ldp	x29, x30, [sp], #64
  4086dc:	ret
  4086e0:	str	x23, [sp, #48]
  4086e4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  4086e8:	add	x0, x0, #0x588
  4086ec:	bl	407ebc <ferror@plt+0x54cc>
  4086f0:	sub	w20, w20, #0x2
  4086f4:	add	x20, x20, #0x2
  4086f8:	mov	x19, #0x2                   	// #2
  4086fc:	sub	x21, x21, #0x8
  408700:	adrp	x23, 419000 <_obstack_memory_used@@Base+0x206c>
  408704:	add	x23, x23, #0x598
  408708:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x206c>
  40870c:	add	x22, x22, #0x5e8
  408710:	b	408740 <ferror@plt+0x5d50>
  408714:	ldr	x1, [x1, #8]
  408718:	mov	x0, x23
  40871c:	bl	407ebc <ferror@plt+0x54cc>
  408720:	cmp	x19, x20
  408724:	b.eq	4087ac <ferror@plt+0x5dbc>  // b.none
  408728:	cmp	w19, #0x1
  40872c:	b.eq	40873c <ferror@plt+0x5d4c>  // b.none
  408730:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  408734:	add	x0, x0, #0x590
  408738:	bl	407ebc <ferror@plt+0x54cc>
  40873c:	add	x19, x19, #0x1
  408740:	ldr	x1, [x21, x19, lsl #3]
  408744:	ldr	w0, [x1]
  408748:	cmp	w0, #0x1
  40874c:	b.eq	408714 <ferror@plt+0x5d24>  // b.none
  408750:	cmp	w0, #0x2
  408754:	b.ne	408790 <ferror@plt+0x5da0>  // b.any
  408758:	ldr	x0, [x1, #8]
  40875c:	bl	4063ec <ferror@plt+0x39fc>
  408760:	cbz	x0, 408774 <ferror@plt+0x5d84>
  408764:	ldr	x1, [x0]
  408768:	mov	x0, x22
  40876c:	bl	407ebc <ferror@plt+0x54cc>
  408770:	b	408720 <ferror@plt+0x5d30>
  408774:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  408778:	add	x2, x2, #0x5a0
  40877c:	mov	w1, #0x0                   	// #0
  408780:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408784:	ldr	w0, [x0, #1644]
  408788:	bl	402c80 <ferror@plt+0x290>
  40878c:	bl	402720 <abort@plt>
  408790:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  408794:	add	x2, x2, #0x5f0
  408798:	mov	w1, #0x0                   	// #0
  40879c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4087a0:	ldr	w0, [x0, #1644]
  4087a4:	bl	402c80 <ferror@plt+0x290>
  4087a8:	bl	402720 <abort@plt>
  4087ac:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  4087b0:	add	x0, x0, #0xe80
  4087b4:	bl	407ebc <ferror@plt+0x54cc>
  4087b8:	ldr	x23, [sp, #48]
  4087bc:	b	4086c4 <ferror@plt+0x5cd4>
  4087c0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  4087c4:	add	x0, x0, #0x628
  4087c8:	bl	407ebc <ferror@plt+0x54cc>
  4087cc:	bl	407d84 <ferror@plt+0x5394>
  4087d0:	b	4086d0 <ferror@plt+0x5ce0>
  4087d4:	stp	x29, x30, [sp, #-48]!
  4087d8:	mov	x29, sp
  4087dc:	stp	x19, x20, [sp, #16]
  4087e0:	mov	x19, x3
  4087e4:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1906c>
  4087e8:	ldr	w3, [x3, #1660]
  4087ec:	tbnz	w3, #7, 408810 <ferror@plt+0x5e20>
  4087f0:	cbz	x19, 408800 <ferror@plt+0x5e10>
  4087f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4087f8:	ldr	w0, [x0, #1660]
  4087fc:	tbnz	w0, #1, 408854 <ferror@plt+0x5e64>
  408800:	bl	407d84 <ferror@plt+0x5394>
  408804:	ldp	x19, x20, [sp, #16]
  408808:	ldp	x29, x30, [sp], #48
  40880c:	ret
  408810:	str	x21, [sp, #32]
  408814:	mov	x21, x0
  408818:	mov	w20, w2
  40881c:	mov	w0, w1
  408820:	bl	4081b4 <ferror@plt+0x57c4>
  408824:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  408828:	add	x0, x0, #0x6c0
  40882c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  408830:	add	x2, x2, #0x630
  408834:	cmp	w20, #0x1
  408838:	csel	x2, x2, x0, gt
  40883c:	mov	x1, x21
  408840:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  408844:	add	x0, x0, #0x638
  408848:	bl	407ebc <ferror@plt+0x54cc>
  40884c:	ldr	x21, [sp, #32]
  408850:	b	4087f0 <ferror@plt+0x5e00>
  408854:	mov	x1, x19
  408858:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40885c:	add	x0, x0, #0x640
  408860:	bl	407ebc <ferror@plt+0x54cc>
  408864:	b	408800 <ferror@plt+0x5e10>
  408868:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40886c:	add	x1, x0, #0x850
  408870:	ldr	x1, [x1, #8]
  408874:	str	x1, [x0, #2128]
  408878:	ret
  40887c:	stp	x29, x30, [sp, #-32]!
  408880:	mov	x29, sp
  408884:	str	x19, [sp, #16]
  408888:	mov	x19, x0
  40888c:	bl	4027c0 <__ctype_b_loc@plt>
  408890:	mov	x7, x0
  408894:	ldr	x8, [x0]
  408898:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40889c:	ldr	x1, [x0, #2128]
  4088a0:	mov	w5, #0x0                   	// #0
  4088a4:	mov	w6, #0x1                   	// #1
  4088a8:	b	4088b0 <ferror@plt+0x5ec0>
  4088ac:	mov	w5, w6
  4088b0:	mov	x4, x1
  4088b4:	ldrb	w2, [x1], #1
  4088b8:	and	x3, x2, #0xff
  4088bc:	ldrh	w3, [x8, x3, lsl #1]
  4088c0:	tbnz	w3, #13, 4088ac <ferror@plt+0x5ebc>
  4088c4:	cbz	w5, 4088d0 <ferror@plt+0x5ee0>
  4088c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4088cc:	str	x4, [x0, #2128]
  4088d0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4088d4:	str	x4, [x0, #2136]
  4088d8:	mov	w0, #0x1b                  	// #27
  4088dc:	cbz	w2, 408b98 <ferror@plt+0x61a8>
  4088e0:	tbz	w3, #11, 408ae0 <ferror@plt+0x60f0>
  4088e4:	cmp	w2, #0x30
  4088e8:	b.ne	4089d4 <ferror@plt+0x5fe4>  // b.any
  4088ec:	add	x0, x4, #0x1
  4088f0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  4088f4:	str	x0, [x1, #2128]
  4088f8:	ldrb	w1, [x4, #1]
  4088fc:	sub	w1, w1, #0x42
  408900:	and	w2, w1, #0xff
  408904:	cmp	w2, #0x36
  408908:	b.hi	4089fc <ferror@plt+0x600c>  // b.pmore
  40890c:	mov	x1, #0x1                   	// #1
  408910:	lsl	x1, x1, x2
  408914:	tst	x1, #0x1000000010000
  408918:	b.ne	408958 <ferror@plt+0x5f68>  // b.any
  40891c:	tst	x1, #0x100000001
  408920:	b.ne	408944 <ferror@plt+0x5f54>  // b.any
  408924:	mov	w2, #0x8                   	// #8
  408928:	tst	x1, #0x40000000400000
  40892c:	b.eq	4089d8 <ferror@plt+0x5fe8>  // b.none
  408930:	add	x4, x4, #0x2
  408934:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408938:	str	x4, [x0, #2128]
  40893c:	mov	w2, #0x10                  	// #16
  408940:	b	4089d8 <ferror@plt+0x5fe8>
  408944:	add	x4, x4, #0x2
  408948:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40894c:	str	x4, [x0, #2128]
  408950:	mov	w2, #0x2                   	// #2
  408954:	b	4089d8 <ferror@plt+0x5fe8>
  408958:	add	x0, x4, #0x2
  40895c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  408960:	str	x0, [x1, #2128]
  408964:	ldrb	w3, [x4, #2]
  408968:	and	x1, x3, #0xff
  40896c:	ldrh	w1, [x8, x1, lsl #1]
  408970:	tbz	w1, #11, 408d74 <ferror@plt+0x6384>
  408974:	mov	w2, #0x0                   	// #0
  408978:	mov	x4, x0
  40897c:	add	w2, w2, w2, lsl #2
  408980:	add	w2, w3, w2, lsl #1
  408984:	sub	w2, w2, #0x30
  408988:	ldrb	w3, [x0, #1]!
  40898c:	and	x1, x3, #0xff
  408990:	ldrh	w1, [x8, x1, lsl #1]
  408994:	and	w1, w1, #0x800
  408998:	cmp	w2, #0x24
  40899c:	ccmp	w1, #0x0, #0x4, le
  4089a0:	b.ne	408978 <ferror@plt+0x5f88>  // b.any
  4089a4:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  4089a8:	str	x0, [x1, #2128]
  4089ac:	cmp	w2, #0x24
  4089b0:	ccmp	w2, #0x0, #0x4, le
  4089b4:	mov	w0, #0x0                   	// #0
  4089b8:	mov	w1, #0x3a                  	// #58
  4089bc:	ccmp	w3, w1, #0x0, ne  // ne = any
  4089c0:	b.ne	408b98 <ferror@plt+0x61a8>  // b.any
  4089c4:	add	x4, x4, #0x2
  4089c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4089cc:	str	x4, [x0, #2128]
  4089d0:	b	4089d8 <ferror@plt+0x5fe8>
  4089d4:	mov	w2, #0xa                   	// #10
  4089d8:	str	wzr, [x19]
  4089dc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4089e0:	ldr	x6, [x0, #2128]
  4089e4:	ldrb	w1, [x6]
  4089e8:	cbz	w1, 408d7c <ferror@plt+0x638c>
  4089ec:	add	x4, x6, #0x1
  4089f0:	mov	w0, #0x0                   	// #0
  4089f4:	mov	w8, #0x1                   	// #1
  4089f8:	b	408a38 <ferror@plt+0x6048>
  4089fc:	mov	w2, #0x8                   	// #8
  408a00:	b	4089d8 <ferror@plt+0x5fe8>
  408a04:	tbz	w3, #9, 408a50 <ferror@plt+0x6060>
  408a08:	sub	w1, w1, #0x57
  408a0c:	cmp	w2, #0x1
  408a10:	b.eq	408a70 <ferror@plt+0x6080>  // b.none
  408a14:	cmp	w2, w1
  408a18:	b.le	408abc <ferror@plt+0x60cc>
  408a1c:	ldr	w3, [x19]
  408a20:	madd	w1, w2, w3, w1
  408a24:	str	w1, [x19]
  408a28:	mov	x6, x4
  408a2c:	ldrb	w1, [x4], #1
  408a30:	mov	w0, w8
  408a34:	cbz	w1, 408ad0 <ferror@plt+0x60e0>
  408a38:	and	x3, x1, #0xff
  408a3c:	ldr	x5, [x7]
  408a40:	ldrh	w3, [x5, x3, lsl #1]
  408a44:	tbz	w3, #11, 408a04 <ferror@plt+0x6014>
  408a48:	sub	w1, w1, #0x30
  408a4c:	b	408a0c <ferror@plt+0x601c>
  408a50:	tbz	w3, #8, 408a5c <ferror@plt+0x606c>
  408a54:	sub	w1, w1, #0x37
  408a58:	b	408a0c <ferror@plt+0x601c>
  408a5c:	cbz	w0, 408a68 <ferror@plt+0x6078>
  408a60:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408a64:	str	x6, [x0, #2128]
  408a68:	mov	w0, #0x1a                  	// #26
  408a6c:	b	408b98 <ferror@plt+0x61a8>
  408a70:	cmp	w1, #0x1
  408a74:	b.eq	408a98 <ferror@plt+0x60a8>  // b.none
  408a78:	cbnz	w1, 408aa8 <ferror@plt+0x60b8>
  408a7c:	ldr	w1, [x19]
  408a80:	cbz	w1, 408a28 <ferror@plt+0x6038>
  408a84:	cbz	w0, 408a90 <ferror@plt+0x60a0>
  408a88:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408a8c:	str	x6, [x0, #2128]
  408a90:	mov	w0, #0x1a                  	// #26
  408a94:	b	408b98 <ferror@plt+0x61a8>
  408a98:	ldr	w0, [x19]
  408a9c:	add	w0, w0, #0x1
  408aa0:	str	w0, [x19]
  408aa4:	b	408a28 <ferror@plt+0x6038>
  408aa8:	cbz	w0, 408ab4 <ferror@plt+0x60c4>
  408aac:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408ab0:	str	x6, [x0, #2128]
  408ab4:	mov	w0, #0x1a                  	// #26
  408ab8:	b	408b98 <ferror@plt+0x61a8>
  408abc:	cbz	w0, 408ac8 <ferror@plt+0x60d8>
  408ac0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408ac4:	str	x6, [x0, #2128]
  408ac8:	mov	w0, #0x1a                  	// #26
  408acc:	b	408b98 <ferror@plt+0x61a8>
  408ad0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408ad4:	str	x6, [x0, #2128]
  408ad8:	mov	w0, #0x1a                  	// #26
  408adc:	b	408b98 <ferror@plt+0x61a8>
  408ae0:	add	x0, x4, #0x1
  408ae4:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  408ae8:	str	x0, [x1, #2128]
  408aec:	cmp	w2, #0x2d
  408af0:	b.eq	408c38 <ferror@plt+0x6248>  // b.none
  408af4:	b.hi	408ba4 <ferror@plt+0x61b4>  // b.pmore
  408af8:	cmp	w2, #0x28
  408afc:	b.eq	408d84 <ferror@plt+0x6394>  // b.none
  408b00:	b.ls	408b30 <ferror@plt+0x6140>  // b.plast
  408b04:	cmp	w2, #0x2a
  408b08:	b.eq	408c54 <ferror@plt+0x6264>  // b.none
  408b0c:	cmp	w2, #0x2b
  408b10:	b.ne	408b8c <ferror@plt+0x619c>  // b.any
  408b14:	ldrb	w0, [x4, #1]
  408b18:	cmp	w0, #0x2b
  408b1c:	mov	w1, #0x3d                  	// #61
  408b20:	ccmp	w0, w1, #0x4, ne  // ne = any
  408b24:	cset	w0, ne  // ne = any
  408b28:	add	w0, w0, #0x1
  408b2c:	b	408b98 <ferror@plt+0x61a8>
  408b30:	cmp	w2, #0x25
  408b34:	b.eq	408c84 <ferror@plt+0x6294>  // b.none
  408b38:	cmp	w2, #0x26
  408b3c:	b.ne	408b5c <ferror@plt+0x616c>  // b.any
  408b40:	ldrb	w0, [x4, #1]
  408b44:	cmp	w0, #0x26
  408b48:	b.eq	408d30 <ferror@plt+0x6340>  // b.none
  408b4c:	cmp	w0, #0x3d
  408b50:	mov	w0, #0x15                  	// #21
  408b54:	csinc	w0, w0, wzr, ne  // ne = any
  408b58:	b	408b98 <ferror@plt+0x61a8>
  408b5c:	mov	w0, #0x0                   	// #0
  408b60:	cmp	w2, #0x21
  408b64:	b.ne	408b98 <ferror@plt+0x61a8>  // b.any
  408b68:	ldrb	w1, [x4, #1]
  408b6c:	mov	w0, #0x11                  	// #17
  408b70:	cmp	w1, #0x3d
  408b74:	b.ne	408b98 <ferror@plt+0x61a8>  // b.any
  408b78:	add	x4, x4, #0x2
  408b7c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408b80:	str	x4, [x0, #2128]
  408b84:	mov	w0, #0xa                   	// #10
  408b88:	b	408b98 <ferror@plt+0x61a8>
  408b8c:	cmp	w2, #0x29
  408b90:	mov	w0, #0x19                  	// #25
  408b94:	csel	w0, w0, wzr, eq  // eq = none
  408b98:	ldr	x19, [sp, #16]
  408b9c:	ldp	x29, x30, [sp], #32
  408ba0:	ret
  408ba4:	cmp	w2, #0x3e
  408ba8:	b.eq	408c98 <ferror@plt+0x62a8>  // b.none
  408bac:	b.ls	408be4 <ferror@plt+0x61f4>  // b.plast
  408bb0:	cmp	w2, #0x7c
  408bb4:	b.eq	408d44 <ferror@plt+0x6354>  // b.none
  408bb8:	mov	w0, #0x14                  	// #20
  408bbc:	cmp	w2, #0x7e
  408bc0:	b.eq	408b98 <ferror@plt+0x61a8>  // b.none
  408bc4:	mov	w0, #0x0                   	// #0
  408bc8:	cmp	w2, #0x5e
  408bcc:	b.ne	408b98 <ferror@plt+0x61a8>  // b.any
  408bd0:	ldrb	w0, [x4, #1]
  408bd4:	cmp	w0, #0x3d
  408bd8:	mov	w0, #0x17                  	// #23
  408bdc:	csinc	w0, w0, wzr, ne  // ne = any
  408be0:	b	408b98 <ferror@plt+0x61a8>
  408be4:	cmp	w2, #0x3c
  408be8:	b.eq	408ce4 <ferror@plt+0x62f4>  // b.none
  408bec:	cmp	w2, #0x3d
  408bf0:	b.ne	408c18 <ferror@plt+0x6228>  // b.any
  408bf4:	ldrb	w1, [x4, #1]
  408bf8:	mov	w0, #0x8                   	// #8
  408bfc:	cmp	w1, #0x3d
  408c00:	b.ne	408b98 <ferror@plt+0x61a8>  // b.any
  408c04:	add	x4, x4, #0x2
  408c08:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408c0c:	str	x4, [x0, #2128]
  408c10:	mov	w0, #0x9                   	// #9
  408c14:	b	408b98 <ferror@plt+0x61a8>
  408c18:	mov	w0, #0x0                   	// #0
  408c1c:	cmp	w2, #0x2f
  408c20:	b.ne	408b98 <ferror@plt+0x61a8>  // b.any
  408c24:	ldrb	w0, [x4, #1]
  408c28:	cmp	w0, #0x3d
  408c2c:	mov	w0, #0x6                   	// #6
  408c30:	csinc	w0, w0, wzr, ne  // ne = any
  408c34:	b	408b98 <ferror@plt+0x61a8>
  408c38:	ldrb	w0, [x4, #1]
  408c3c:	and	w0, w0, #0xffffffef
  408c40:	and	w0, w0, #0xff
  408c44:	cmp	w0, #0x2d
  408c48:	mov	w0, #0x3                   	// #3
  408c4c:	csinc	w0, w0, wzr, ne  // ne = any
  408c50:	b	408b98 <ferror@plt+0x61a8>
  408c54:	ldrb	w0, [x4, #1]
  408c58:	cmp	w0, #0x2a
  408c5c:	b.eq	408c70 <ferror@plt+0x6280>  // b.none
  408c60:	cmp	w0, #0x3d
  408c64:	mov	w0, #0x5                   	// #5
  408c68:	csinc	w0, w0, wzr, ne  // ne = any
  408c6c:	b	408b98 <ferror@plt+0x61a8>
  408c70:	add	x4, x4, #0x2
  408c74:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408c78:	str	x4, [x0, #2128]
  408c7c:	mov	w0, #0x4                   	// #4
  408c80:	b	408b98 <ferror@plt+0x61a8>
  408c84:	ldrb	w0, [x4, #1]
  408c88:	cmp	w0, #0x3d
  408c8c:	mov	w0, #0x7                   	// #7
  408c90:	csinc	w0, w0, wzr, ne  // ne = any
  408c94:	b	408b98 <ferror@plt+0x61a8>
  408c98:	ldrb	w1, [x4, #1]
  408c9c:	cmp	w1, #0x3d
  408ca0:	b.eq	408cd0 <ferror@plt+0x62e0>  // b.none
  408ca4:	mov	w0, #0xb                   	// #11
  408ca8:	cmp	w1, #0x3e
  408cac:	b.ne	408b98 <ferror@plt+0x61a8>  // b.any
  408cb0:	add	x1, x4, #0x2
  408cb4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408cb8:	str	x1, [x0, #2128]
  408cbc:	ldrb	w0, [x4, #2]
  408cc0:	cmp	w0, #0x3d
  408cc4:	mov	w0, #0x10                  	// #16
  408cc8:	csinc	w0, w0, wzr, ne  // ne = any
  408ccc:	b	408b98 <ferror@plt+0x61a8>
  408cd0:	add	x4, x4, #0x2
  408cd4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408cd8:	str	x4, [x0, #2128]
  408cdc:	mov	w0, #0xc                   	// #12
  408ce0:	b	408b98 <ferror@plt+0x61a8>
  408ce4:	ldrb	w1, [x4, #1]
  408ce8:	cmp	w1, #0x3d
  408cec:	b.eq	408d1c <ferror@plt+0x632c>  // b.none
  408cf0:	mov	w0, #0xd                   	// #13
  408cf4:	cmp	w1, #0x3c
  408cf8:	b.ne	408b98 <ferror@plt+0x61a8>  // b.any
  408cfc:	add	x1, x4, #0x2
  408d00:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408d04:	str	x1, [x0, #2128]
  408d08:	ldrb	w0, [x4, #2]
  408d0c:	cmp	w0, #0x3d
  408d10:	mov	w0, #0xf                   	// #15
  408d14:	csinc	w0, w0, wzr, ne  // ne = any
  408d18:	b	408b98 <ferror@plt+0x61a8>
  408d1c:	add	x4, x4, #0x2
  408d20:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408d24:	str	x4, [x0, #2128]
  408d28:	mov	w0, #0xe                   	// #14
  408d2c:	b	408b98 <ferror@plt+0x61a8>
  408d30:	add	x4, x4, #0x2
  408d34:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408d38:	str	x4, [x0, #2128]
  408d3c:	mov	w0, #0x12                  	// #18
  408d40:	b	408b98 <ferror@plt+0x61a8>
  408d44:	ldrb	w0, [x4, #1]
  408d48:	cmp	w0, #0x7c
  408d4c:	b.eq	408d60 <ferror@plt+0x6370>  // b.none
  408d50:	cmp	w0, #0x3d
  408d54:	mov	w0, #0x16                  	// #22
  408d58:	csinc	w0, w0, wzr, ne  // ne = any
  408d5c:	b	408b98 <ferror@plt+0x61a8>
  408d60:	add	x4, x4, #0x2
  408d64:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  408d68:	str	x4, [x0, #2128]
  408d6c:	mov	w0, #0x13                  	// #19
  408d70:	b	408b98 <ferror@plt+0x61a8>
  408d74:	mov	w0, #0x0                   	// #0
  408d78:	b	408b98 <ferror@plt+0x61a8>
  408d7c:	mov	w0, #0x1a                  	// #26
  408d80:	b	408b98 <ferror@plt+0x61a8>
  408d84:	mov	w0, #0x18                  	// #24
  408d88:	b	408b98 <ferror@plt+0x61a8>
  408d8c:	stp	x29, x30, [sp, #-48]!
  408d90:	mov	x29, sp
  408d94:	stp	x19, x20, [sp, #16]
  408d98:	mov	x19, x1
  408d9c:	bl	4096b4 <ferror@plt+0x6cc4>
  408da0:	mov	w20, w0
  408da4:	cbz	w0, 408dbc <ferror@plt+0x63cc>
  408da8:	mov	w0, w20
  408dac:	ldp	x19, x20, [sp, #16]
  408db0:	ldp	x29, x30, [sp], #48
  408db4:	ret
  408db8:	str	w1, [x19]
  408dbc:	add	x0, sp, #0x2c
  408dc0:	bl	40887c <ferror@plt+0x5e8c>
  408dc4:	cmp	w0, #0x12
  408dc8:	b.ne	408e14 <ferror@plt+0x6424>  // b.any
  408dcc:	add	x0, sp, #0x2c
  408dd0:	bl	40887c <ferror@plt+0x5e8c>
  408dd4:	cbz	w0, 408e20 <ferror@plt+0x6430>
  408dd8:	add	x1, sp, #0x2c
  408ddc:	bl	4096b4 <ferror@plt+0x6cc4>
  408de0:	cbnz	w0, 408dfc <ferror@plt+0x640c>
  408de4:	ldr	w1, [x19]
  408de8:	cbz	w1, 408db8 <ferror@plt+0x63c8>
  408dec:	ldr	w0, [sp, #44]
  408df0:	cmp	w0, #0x0
  408df4:	cset	w1, ne  // ne = any
  408df8:	b	408db8 <ferror@plt+0x63c8>
  408dfc:	ldr	w1, [x19]
  408e00:	cmp	w1, #0x0
  408e04:	ccmp	w0, #0x3, #0x2, eq  // eq = none
  408e08:	b.ls	408dbc <ferror@plt+0x63cc>  // b.plast
  408e0c:	mov	w20, w0
  408e10:	b	408da8 <ferror@plt+0x63b8>
  408e14:	cbz	w0, 408e28 <ferror@plt+0x6438>
  408e18:	bl	408868 <ferror@plt+0x5e78>
  408e1c:	b	408da8 <ferror@plt+0x63b8>
  408e20:	mov	w20, #0x6                   	// #6
  408e24:	b	408da8 <ferror@plt+0x63b8>
  408e28:	mov	w20, #0x6                   	// #6
  408e2c:	b	408da8 <ferror@plt+0x63b8>
  408e30:	stp	x29, x30, [sp, #-64]!
  408e34:	mov	x29, sp
  408e38:	stp	x19, x20, [sp, #16]
  408e3c:	mov	x19, x1
  408e40:	bl	408d8c <ferror@plt+0x639c>
  408e44:	mov	w20, w0
  408e48:	cbnz	w0, 408ec8 <ferror@plt+0x64d8>
  408e4c:	str	x21, [sp, #32]
  408e50:	mov	w21, #0x1                   	// #1
  408e54:	b	408e6c <ferror@plt+0x647c>
  408e58:	ldr	w1, [x19]
  408e5c:	cmp	w1, #0x0
  408e60:	ccmp	w0, #0x3, #0x2, ne  // ne = any
  408e64:	b.hi	408ed8 <ferror@plt+0x64e8>  // b.pmore
  408e68:	str	w21, [x19]
  408e6c:	add	x0, sp, #0x3c
  408e70:	bl	40887c <ferror@plt+0x5e8c>
  408e74:	cmp	w0, #0x13
  408e78:	b.ne	408eb0 <ferror@plt+0x64c0>  // b.any
  408e7c:	add	x0, sp, #0x3c
  408e80:	bl	40887c <ferror@plt+0x5e8c>
  408e84:	cbz	w0, 408ec0 <ferror@plt+0x64d0>
  408e88:	add	x1, sp, #0x3c
  408e8c:	bl	408d8c <ferror@plt+0x639c>
  408e90:	cbnz	w0, 408e58 <ferror@plt+0x6468>
  408e94:	ldr	w1, [x19]
  408e98:	ldr	w0, [sp, #60]
  408e9c:	orr	w1, w1, w0
  408ea0:	cmp	w1, #0x0
  408ea4:	cset	w0, ne  // ne = any
  408ea8:	str	w0, [x19]
  408eac:	b	408e6c <ferror@plt+0x647c>
  408eb0:	cbz	w0, 408ee4 <ferror@plt+0x64f4>
  408eb4:	bl	408868 <ferror@plt+0x5e78>
  408eb8:	ldr	x21, [sp, #32]
  408ebc:	b	408ec8 <ferror@plt+0x64d8>
  408ec0:	mov	w20, #0x6                   	// #6
  408ec4:	ldr	x21, [sp, #32]
  408ec8:	mov	w0, w20
  408ecc:	ldp	x19, x20, [sp, #16]
  408ed0:	ldp	x29, x30, [sp], #64
  408ed4:	ret
  408ed8:	mov	w20, w0
  408edc:	ldr	x21, [sp, #32]
  408ee0:	b	408ec8 <ferror@plt+0x64d8>
  408ee4:	mov	w20, #0x6                   	// #6
  408ee8:	ldr	x21, [sp, #32]
  408eec:	b	408ec8 <ferror@plt+0x64d8>
  408ef0:	stp	x29, x30, [sp, #-64]!
  408ef4:	mov	x29, sp
  408ef8:	stp	x19, x20, [sp, #16]
  408efc:	str	x21, [sp, #32]
  408f00:	mov	w19, w0
  408f04:	mov	x21, x1
  408f08:	sub	w0, w0, #0x2
  408f0c:	cmp	w19, #0x14
  408f10:	ccmp	w19, #0x11, #0x4, ne  // ne = any
  408f14:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  408f18:	b.hi	408f88 <ferror@plt+0x6598>  // b.pmore
  408f1c:	mov	x0, x1
  408f20:	bl	40887c <ferror@plt+0x5e8c>
  408f24:	mov	w20, #0x6                   	// #6
  408f28:	cbz	w0, 408fac <ferror@plt+0x65bc>
  408f2c:	mov	x1, x21
  408f30:	bl	408ef0 <ferror@plt+0x6500>
  408f34:	mov	w20, w0
  408f38:	cbnz	w0, 408fac <ferror@plt+0x65bc>
  408f3c:	cmp	w19, #0x3
  408f40:	b.eq	408f68 <ferror@plt+0x6578>  // b.none
  408f44:	cmp	w19, #0x14
  408f48:	b.eq	408f78 <ferror@plt+0x6588>  // b.none
  408f4c:	cmp	w19, #0x11
  408f50:	b.ne	408fac <ferror@plt+0x65bc>  // b.any
  408f54:	ldr	w0, [x21]
  408f58:	cmp	w0, #0x0
  408f5c:	cset	w0, eq  // eq = none
  408f60:	str	w0, [x21]
  408f64:	b	408fac <ferror@plt+0x65bc>
  408f68:	ldr	w0, [x21]
  408f6c:	neg	w0, w0
  408f70:	str	w0, [x21]
  408f74:	b	408fac <ferror@plt+0x65bc>
  408f78:	ldr	w0, [x21]
  408f7c:	mvn	w0, w0
  408f80:	str	w0, [x21]
  408f84:	b	408fac <ferror@plt+0x65bc>
  408f88:	cmp	w19, #0x18
  408f8c:	b.eq	408fc0 <ferror@plt+0x65d0>  // b.none
  408f90:	mov	w20, #0x0                   	// #0
  408f94:	cmp	w19, #0x1a
  408f98:	b.eq	408fac <ferror@plt+0x65bc>  // b.none
  408f9c:	cmp	w19, #0x1
  408fa0:	mov	w20, #0x4                   	// #4
  408fa4:	mov	w0, #0x8                   	// #8
  408fa8:	csel	w20, w20, w0, ne  // ne = any
  408fac:	mov	w0, w20
  408fb0:	ldp	x19, x20, [sp, #16]
  408fb4:	ldr	x21, [sp, #32]
  408fb8:	ldp	x29, x30, [sp], #64
  408fbc:	ret
  408fc0:	mov	x0, x1
  408fc4:	bl	40887c <ferror@plt+0x5e8c>
  408fc8:	mov	w20, #0x6                   	// #6
  408fcc:	cbz	w0, 408fac <ferror@plt+0x65bc>
  408fd0:	mov	x1, x21
  408fd4:	bl	408e30 <ferror@plt+0x6440>
  408fd8:	mov	w20, w0
  408fdc:	cbnz	w0, 408fac <ferror@plt+0x65bc>
  408fe0:	add	x0, sp, #0x3c
  408fe4:	bl	40887c <ferror@plt+0x5e8c>
  408fe8:	cbz	w0, 408ffc <ferror@plt+0x660c>
  408fec:	cmp	w0, #0x19
  408ff0:	mov	w0, #0x5                   	// #5
  408ff4:	csel	w20, w20, w0, eq  // eq = none
  408ff8:	b	408fac <ferror@plt+0x65bc>
  408ffc:	mov	w20, #0x6                   	// #6
  409000:	b	408fac <ferror@plt+0x65bc>
  409004:	stp	x29, x30, [sp, #-48]!
  409008:	mov	x29, sp
  40900c:	stp	x19, x20, [sp, #16]
  409010:	mov	x19, x1
  409014:	bl	408ef0 <ferror@plt+0x6500>
  409018:	mov	w20, w0
  40901c:	cbz	w0, 409038 <ferror@plt+0x6648>
  409020:	mov	w0, w20
  409024:	ldp	x19, x20, [sp, #16]
  409028:	ldp	x29, x30, [sp], #48
  40902c:	ret
  409030:	mov	w4, #0x1                   	// #1
  409034:	str	w4, [x19]
  409038:	add	x0, sp, #0x2c
  40903c:	bl	40887c <ferror@plt+0x5e8c>
  409040:	cmp	w0, #0x4
  409044:	b.ne	4090b4 <ferror@plt+0x66c4>  // b.any
  409048:	add	x0, sp, #0x2c
  40904c:	bl	40887c <ferror@plt+0x5e8c>
  409050:	cbz	w0, 4090c0 <ferror@plt+0x66d0>
  409054:	add	x1, sp, #0x2c
  409058:	bl	409004 <ferror@plt+0x6614>
  40905c:	cbnz	w0, 4090c8 <ferror@plt+0x66d8>
  409060:	ldr	w6, [sp, #44]
  409064:	tbnz	w6, #31, 4090d0 <ferror@plt+0x66e0>
  409068:	ldr	w5, [x19]
  40906c:	orr	w0, w6, w5
  409070:	cbz	w0, 4090d8 <ferror@plt+0x66e8>
  409074:	sub	w0, w6, #0x1
  409078:	str	w0, [sp, #44]
  40907c:	cmp	w6, #0x0
  409080:	b.le	409030 <ferror@plt+0x6640>
  409084:	mov	w3, w0
  409088:	mov	w4, #0x1                   	// #1
  40908c:	mul	w4, w4, w5
  409090:	cmp	w3, #0x0
  409094:	sub	w3, w3, #0x1
  409098:	b.gt	40908c <ferror@plt+0x669c>
  40909c:	sub	w6, w6, #0x2
  4090a0:	cmp	w0, #0x0
  4090a4:	csel	w0, w0, wzr, ge  // ge = tcont
  4090a8:	sub	w6, w6, w0
  4090ac:	str	w6, [sp, #44]
  4090b0:	b	409034 <ferror@plt+0x6644>
  4090b4:	cbz	w0, 4090e0 <ferror@plt+0x66f0>
  4090b8:	bl	408868 <ferror@plt+0x5e78>
  4090bc:	b	409020 <ferror@plt+0x6630>
  4090c0:	mov	w20, #0x6                   	// #6
  4090c4:	b	409020 <ferror@plt+0x6630>
  4090c8:	mov	w20, w0
  4090cc:	b	409020 <ferror@plt+0x6630>
  4090d0:	mov	w20, #0x3                   	// #3
  4090d4:	b	409020 <ferror@plt+0x6630>
  4090d8:	mov	w20, #0x1                   	// #1
  4090dc:	b	409020 <ferror@plt+0x6630>
  4090e0:	mov	w20, #0x6                   	// #6
  4090e4:	b	409020 <ferror@plt+0x6630>
  4090e8:	stp	x29, x30, [sp, #-64]!
  4090ec:	mov	x29, sp
  4090f0:	stp	x19, x20, [sp, #16]
  4090f4:	str	x21, [sp, #32]
  4090f8:	mov	x20, x1
  4090fc:	bl	409004 <ferror@plt+0x6614>
  409100:	mov	w21, w0
  409104:	cbz	w0, 409168 <ferror@plt+0x6778>
  409108:	b	40920c <ferror@plt+0x681c>
  40910c:	add	x0, sp, #0x3c
  409110:	bl	40887c <ferror@plt+0x5e8c>
  409114:	cbz	w0, 4091e8 <ferror@plt+0x67f8>
  409118:	add	x1, sp, #0x3c
  40911c:	bl	409004 <ferror@plt+0x6614>
  409120:	cbnz	w0, 4091f0 <ferror@plt+0x6800>
  409124:	cmp	w19, #0x6
  409128:	b.eq	40918c <ferror@plt+0x679c>  // b.none
  40912c:	cmp	w19, #0x7
  409130:	b.eq	4091bc <ferror@plt+0x67cc>  // b.none
  409134:	cmp	w19, #0x5
  409138:	b.eq	409158 <ferror@plt+0x6768>  // b.none
  40913c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  409140:	add	x2, x2, #0x650
  409144:	mov	w1, #0x0                   	// #0
  409148:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40914c:	ldr	w0, [x0, #1644]
  409150:	bl	402c80 <ferror@plt+0x290>
  409154:	bl	402720 <abort@plt>
  409158:	ldr	w0, [x20]
  40915c:	ldr	w1, [sp, #60]
  409160:	mul	w0, w0, w1
  409164:	str	w0, [x20]
  409168:	add	x0, sp, #0x3c
  40916c:	bl	40887c <ferror@plt+0x5e8c>
  409170:	mov	w19, w0
  409174:	sub	w1, w0, #0x5
  409178:	cmp	w1, #0x2
  40917c:	b.ls	40910c <ferror@plt+0x671c>  // b.plast
  409180:	cbz	w0, 409208 <ferror@plt+0x6818>
  409184:	bl	408868 <ferror@plt+0x5e78>
  409188:	b	40920c <ferror@plt+0x681c>
  40918c:	ldr	w0, [sp, #60]
  409190:	cbz	w0, 4091f8 <ferror@plt+0x6808>
  409194:	cmn	w0, #0x1
  409198:	b.eq	4091ac <ferror@plt+0x67bc>  // b.none
  40919c:	ldr	w1, [x20]
  4091a0:	sdiv	w0, w1, w0
  4091a4:	str	w0, [x20]
  4091a8:	b	409168 <ferror@plt+0x6778>
  4091ac:	ldr	w0, [x20]
  4091b0:	neg	w0, w0
  4091b4:	str	w0, [x20]
  4091b8:	b	409168 <ferror@plt+0x6778>
  4091bc:	ldr	w1, [sp, #60]
  4091c0:	cbz	w1, 409200 <ferror@plt+0x6810>
  4091c4:	cmn	w1, #0x1
  4091c8:	b.eq	4091e0 <ferror@plt+0x67f0>  // b.none
  4091cc:	ldr	w2, [x20]
  4091d0:	sdiv	w0, w2, w1
  4091d4:	msub	w1, w0, w1, w2
  4091d8:	str	w1, [x20]
  4091dc:	b	409168 <ferror@plt+0x6778>
  4091e0:	str	wzr, [x20]
  4091e4:	b	409168 <ferror@plt+0x6778>
  4091e8:	mov	w21, #0x6                   	// #6
  4091ec:	b	40920c <ferror@plt+0x681c>
  4091f0:	mov	w21, w0
  4091f4:	b	40920c <ferror@plt+0x681c>
  4091f8:	mov	w21, #0x1                   	// #1
  4091fc:	b	40920c <ferror@plt+0x681c>
  409200:	mov	w21, #0x2                   	// #2
  409204:	b	40920c <ferror@plt+0x681c>
  409208:	mov	w21, #0x6                   	// #6
  40920c:	mov	w0, w21
  409210:	ldp	x19, x20, [sp, #16]
  409214:	ldr	x21, [sp, #32]
  409218:	ldp	x29, x30, [sp], #64
  40921c:	ret
  409220:	stp	x29, x30, [sp, #-64]!
  409224:	mov	x29, sp
  409228:	stp	x19, x20, [sp, #16]
  40922c:	str	x21, [sp, #32]
  409230:	mov	x20, x1
  409234:	bl	4090e8 <ferror@plt+0x66f8>
  409238:	mov	w21, w0
  40923c:	cbz	w0, 409264 <ferror@plt+0x6874>
  409240:	mov	w0, w21
  409244:	ldp	x19, x20, [sp, #16]
  409248:	ldr	x21, [sp, #32]
  40924c:	ldp	x29, x30, [sp], #64
  409250:	ret
  409254:	ldr	w2, [x20]
  409258:	ldr	w0, [sp, #60]
  40925c:	sub	w2, w2, w0
  409260:	str	w2, [x20]
  409264:	add	x0, sp, #0x3c
  409268:	bl	40887c <ferror@plt+0x5e8c>
  40926c:	mov	w19, w0
  409270:	sub	w0, w0, #0x2
  409274:	cmp	w0, #0x1
  409278:	b.hi	4092ac <ferror@plt+0x68bc>  // b.pmore
  40927c:	add	x0, sp, #0x3c
  409280:	bl	40887c <ferror@plt+0x5e8c>
  409284:	cbz	w0, 4092b8 <ferror@plt+0x68c8>
  409288:	add	x1, sp, #0x3c
  40928c:	bl	4090e8 <ferror@plt+0x66f8>
  409290:	cbnz	w0, 4092c0 <ferror@plt+0x68d0>
  409294:	cmp	w19, #0x2
  409298:	b.ne	409254 <ferror@plt+0x6864>  // b.any
  40929c:	ldr	w2, [x20]
  4092a0:	ldr	w0, [sp, #60]
  4092a4:	add	w2, w2, w0
  4092a8:	b	409260 <ferror@plt+0x6870>
  4092ac:	cbz	w19, 4092c8 <ferror@plt+0x68d8>
  4092b0:	bl	408868 <ferror@plt+0x5e78>
  4092b4:	b	409240 <ferror@plt+0x6850>
  4092b8:	mov	w21, #0x6                   	// #6
  4092bc:	b	409240 <ferror@plt+0x6850>
  4092c0:	mov	w21, w0
  4092c4:	b	409240 <ferror@plt+0x6850>
  4092c8:	mov	w21, #0x6                   	// #6
  4092cc:	b	409240 <ferror@plt+0x6850>
  4092d0:	stp	x29, x30, [sp, #-64]!
  4092d4:	mov	x29, sp
  4092d8:	stp	x19, x20, [sp, #16]
  4092dc:	str	x21, [sp, #32]
  4092e0:	mov	x20, x1
  4092e4:	bl	409220 <ferror@plt+0x6830>
  4092e8:	mov	w21, w0
  4092ec:	cbz	w0, 409314 <ferror@plt+0x6924>
  4092f0:	mov	w0, w21
  4092f4:	ldp	x19, x20, [sp, #16]
  4092f8:	ldr	x21, [sp, #32]
  4092fc:	ldp	x29, x30, [sp], #64
  409300:	ret
  409304:	ldr	w0, [x20]
  409308:	ldr	w1, [sp, #60]
  40930c:	lsl	w0, w0, w1
  409310:	str	w0, [x20]
  409314:	add	x0, sp, #0x3c
  409318:	bl	40887c <ferror@plt+0x5e8c>
  40931c:	mov	w19, w0
  409320:	sub	w0, w0, #0xf
  409324:	cmp	w0, #0x1
  409328:	b.hi	409378 <ferror@plt+0x6988>  // b.pmore
  40932c:	add	x0, sp, #0x3c
  409330:	bl	40887c <ferror@plt+0x5e8c>
  409334:	cbz	w0, 409384 <ferror@plt+0x6994>
  409338:	add	x1, sp, #0x3c
  40933c:	bl	409220 <ferror@plt+0x6830>
  409340:	cbnz	w0, 40938c <ferror@plt+0x699c>
  409344:	cmp	w19, #0xf
  409348:	b.eq	409304 <ferror@plt+0x6914>  // b.none
  40934c:	ldr	w2, [x20]
  409350:	tbnz	w2, #31, 409364 <ferror@plt+0x6974>
  409354:	ldr	w0, [sp, #60]
  409358:	lsr	w2, w2, w0
  40935c:	str	w2, [x20]
  409360:	b	409314 <ferror@plt+0x6924>
  409364:	mvn	w2, w2
  409368:	ldr	w0, [sp, #60]
  40936c:	lsr	w2, w2, w0
  409370:	mvn	w2, w2
  409374:	b	40935c <ferror@plt+0x696c>
  409378:	cbz	w19, 409394 <ferror@plt+0x69a4>
  40937c:	bl	408868 <ferror@plt+0x5e78>
  409380:	b	4092f0 <ferror@plt+0x6900>
  409384:	mov	w21, #0x6                   	// #6
  409388:	b	4092f0 <ferror@plt+0x6900>
  40938c:	mov	w21, w0
  409390:	b	4092f0 <ferror@plt+0x6900>
  409394:	mov	w21, #0x6                   	// #6
  409398:	b	4092f0 <ferror@plt+0x6900>
  40939c:	stp	x29, x30, [sp, #-64]!
  4093a0:	mov	x29, sp
  4093a4:	stp	x19, x20, [sp, #16]
  4093a8:	str	x21, [sp, #32]
  4093ac:	mov	x20, x1
  4093b0:	bl	4092d0 <ferror@plt+0x68e0>
  4093b4:	mov	w21, w0
  4093b8:	cbz	w0, 409420 <ferror@plt+0x6a30>
  4093bc:	b	4094a4 <ferror@plt+0x6ab4>
  4093c0:	add	x0, sp, #0x3c
  4093c4:	bl	40887c <ferror@plt+0x5e8c>
  4093c8:	cbz	w0, 409490 <ferror@plt+0x6aa0>
  4093cc:	add	x1, sp, #0x3c
  4093d0:	bl	4092d0 <ferror@plt+0x68e0>
  4093d4:	cbnz	w0, 409498 <ferror@plt+0x6aa8>
  4093d8:	cmp	w19, #0xd
  4093dc:	b.eq	409444 <ferror@plt+0x6a54>  // b.none
  4093e0:	b.hi	40945c <ferror@plt+0x6a6c>  // b.pmore
  4093e4:	cmp	w19, #0xb
  4093e8:	b.eq	40940c <ferror@plt+0x6a1c>  // b.none
  4093ec:	cmp	w19, #0xc
  4093f0:	b.ne	409474 <ferror@plt+0x6a84>  // b.any
  4093f4:	ldr	w1, [x20]
  4093f8:	ldr	w0, [sp, #60]
  4093fc:	cmp	w1, w0
  409400:	cset	w0, ge  // ge = tcont
  409404:	str	w0, [x20]
  409408:	b	409420 <ferror@plt+0x6a30>
  40940c:	ldr	w1, [x20]
  409410:	ldr	w0, [sp, #60]
  409414:	cmp	w1, w0
  409418:	cset	w0, gt
  40941c:	str	w0, [x20]
  409420:	add	x0, sp, #0x3c
  409424:	bl	40887c <ferror@plt+0x5e8c>
  409428:	mov	w19, w0
  40942c:	sub	w1, w0, #0xb
  409430:	cmp	w1, #0x3
  409434:	b.ls	4093c0 <ferror@plt+0x69d0>  // b.plast
  409438:	cbz	w0, 4094a0 <ferror@plt+0x6ab0>
  40943c:	bl	408868 <ferror@plt+0x5e78>
  409440:	b	4094a4 <ferror@plt+0x6ab4>
  409444:	ldr	w1, [x20]
  409448:	ldr	w0, [sp, #60]
  40944c:	cmp	w1, w0
  409450:	cset	w0, lt  // lt = tstop
  409454:	str	w0, [x20]
  409458:	b	409420 <ferror@plt+0x6a30>
  40945c:	ldr	w1, [x20]
  409460:	ldr	w0, [sp, #60]
  409464:	cmp	w1, w0
  409468:	cset	w0, le
  40946c:	str	w0, [x20]
  409470:	b	409420 <ferror@plt+0x6a30>
  409474:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  409478:	add	x2, x2, #0x680
  40947c:	mov	w1, #0x0                   	// #0
  409480:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  409484:	ldr	w0, [x0, #1644]
  409488:	bl	402c80 <ferror@plt+0x290>
  40948c:	bl	402720 <abort@plt>
  409490:	mov	w21, #0x6                   	// #6
  409494:	b	4094a4 <ferror@plt+0x6ab4>
  409498:	mov	w21, w0
  40949c:	b	4094a4 <ferror@plt+0x6ab4>
  4094a0:	mov	w21, #0x6                   	// #6
  4094a4:	mov	w0, w21
  4094a8:	ldp	x19, x20, [sp, #16]
  4094ac:	ldr	x21, [sp, #32]
  4094b0:	ldp	x29, x30, [sp], #64
  4094b4:	ret
  4094b8:	stp	x29, x30, [sp, #-80]!
  4094bc:	mov	x29, sp
  4094c0:	stp	x19, x20, [sp, #16]
  4094c4:	stp	x21, x22, [sp, #32]
  4094c8:	mov	x20, x1
  4094cc:	bl	40939c <ferror@plt+0x69ac>
  4094d0:	mov	w21, w0
  4094d4:	cbnz	w0, 409578 <ferror@plt+0x6b88>
  4094d8:	str	x23, [sp, #48]
  4094dc:	adrp	x23, 419000 <_obstack_memory_used@@Base+0x206c>
  4094e0:	add	x23, x23, #0x6b8
  4094e4:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  4094e8:	add	x22, x22, #0x66c
  4094ec:	b	409524 <ferror@plt+0x6b34>
  4094f0:	mov	x2, x23
  4094f4:	mov	w1, #0x0                   	// #0
  4094f8:	ldr	w0, [x22]
  4094fc:	bl	402c80 <ferror@plt+0x290>
  409500:	mov	w19, #0x9                   	// #9
  409504:	ldr	w1, [x20]
  409508:	ldr	w0, [sp, #76]
  40950c:	cmp	w1, w0
  409510:	cset	w2, eq  // eq = none
  409514:	cmp	w19, #0x9
  409518:	cset	w0, ne  // ne = any
  40951c:	eor	w2, w2, w0
  409520:	str	w2, [x20]
  409524:	add	x0, sp, #0x4c
  409528:	bl	40887c <ferror@plt+0x5e8c>
  40952c:	mov	w19, w0
  409530:	sub	w0, w0, #0x8
  409534:	cmp	w0, #0x2
  409538:	b.hi	409560 <ferror@plt+0x6b70>  // b.pmore
  40953c:	add	x0, sp, #0x4c
  409540:	bl	40887c <ferror@plt+0x5e8c>
  409544:	cbz	w0, 409570 <ferror@plt+0x6b80>
  409548:	add	x1, sp, #0x4c
  40954c:	bl	40939c <ferror@plt+0x69ac>
  409550:	cbnz	w0, 40958c <ferror@plt+0x6b9c>
  409554:	cmp	w19, #0x8
  409558:	b.ne	409504 <ferror@plt+0x6b14>  // b.any
  40955c:	b	4094f0 <ferror@plt+0x6b00>
  409560:	cbz	w19, 409598 <ferror@plt+0x6ba8>
  409564:	bl	408868 <ferror@plt+0x5e78>
  409568:	ldr	x23, [sp, #48]
  40956c:	b	409578 <ferror@plt+0x6b88>
  409570:	mov	w21, #0x6                   	// #6
  409574:	ldr	x23, [sp, #48]
  409578:	mov	w0, w21
  40957c:	ldp	x19, x20, [sp, #16]
  409580:	ldp	x21, x22, [sp, #32]
  409584:	ldp	x29, x30, [sp], #80
  409588:	ret
  40958c:	mov	w21, w0
  409590:	ldr	x23, [sp, #48]
  409594:	b	409578 <ferror@plt+0x6b88>
  409598:	mov	w21, #0x6                   	// #6
  40959c:	ldr	x23, [sp, #48]
  4095a0:	b	409578 <ferror@plt+0x6b88>
  4095a4:	stp	x29, x30, [sp, #-48]!
  4095a8:	mov	x29, sp
  4095ac:	stp	x19, x20, [sp, #16]
  4095b0:	mov	x19, x1
  4095b4:	bl	4094b8 <ferror@plt+0x6ac8>
  4095b8:	mov	w20, w0
  4095bc:	cbz	w0, 4095e0 <ferror@plt+0x6bf0>
  4095c0:	mov	w0, w20
  4095c4:	ldp	x19, x20, [sp, #16]
  4095c8:	ldp	x29, x30, [sp], #48
  4095cc:	ret
  4095d0:	ldr	w2, [x19]
  4095d4:	ldr	w0, [sp, #44]
  4095d8:	and	w2, w2, w0
  4095dc:	str	w2, [x19]
  4095e0:	add	x0, sp, #0x2c
  4095e4:	bl	40887c <ferror@plt+0x5e8c>
  4095e8:	cmp	w0, #0x15
  4095ec:	b.ne	409610 <ferror@plt+0x6c20>  // b.any
  4095f0:	add	x0, sp, #0x2c
  4095f4:	bl	40887c <ferror@plt+0x5e8c>
  4095f8:	cbz	w0, 40961c <ferror@plt+0x6c2c>
  4095fc:	add	x1, sp, #0x2c
  409600:	bl	4094b8 <ferror@plt+0x6ac8>
  409604:	cbz	w0, 4095d0 <ferror@plt+0x6be0>
  409608:	mov	w20, w0
  40960c:	b	4095c0 <ferror@plt+0x6bd0>
  409610:	cbz	w0, 409624 <ferror@plt+0x6c34>
  409614:	bl	408868 <ferror@plt+0x5e78>
  409618:	b	4095c0 <ferror@plt+0x6bd0>
  40961c:	mov	w20, #0x6                   	// #6
  409620:	b	4095c0 <ferror@plt+0x6bd0>
  409624:	mov	w20, #0x6                   	// #6
  409628:	b	4095c0 <ferror@plt+0x6bd0>
  40962c:	stp	x29, x30, [sp, #-48]!
  409630:	mov	x29, sp
  409634:	stp	x19, x20, [sp, #16]
  409638:	mov	x19, x1
  40963c:	bl	4095a4 <ferror@plt+0x6bb4>
  409640:	mov	w20, w0
  409644:	cbz	w0, 409668 <ferror@plt+0x6c78>
  409648:	mov	w0, w20
  40964c:	ldp	x19, x20, [sp, #16]
  409650:	ldp	x29, x30, [sp], #48
  409654:	ret
  409658:	ldr	w2, [x19]
  40965c:	ldr	w0, [sp, #44]
  409660:	eor	w2, w2, w0
  409664:	str	w2, [x19]
  409668:	add	x0, sp, #0x2c
  40966c:	bl	40887c <ferror@plt+0x5e8c>
  409670:	cmp	w0, #0x17
  409674:	b.ne	409698 <ferror@plt+0x6ca8>  // b.any
  409678:	add	x0, sp, #0x2c
  40967c:	bl	40887c <ferror@plt+0x5e8c>
  409680:	cbz	w0, 4096a4 <ferror@plt+0x6cb4>
  409684:	add	x1, sp, #0x2c
  409688:	bl	4095a4 <ferror@plt+0x6bb4>
  40968c:	cbz	w0, 409658 <ferror@plt+0x6c68>
  409690:	mov	w20, w0
  409694:	b	409648 <ferror@plt+0x6c58>
  409698:	cbz	w0, 4096ac <ferror@plt+0x6cbc>
  40969c:	bl	408868 <ferror@plt+0x5e78>
  4096a0:	b	409648 <ferror@plt+0x6c58>
  4096a4:	mov	w20, #0x6                   	// #6
  4096a8:	b	409648 <ferror@plt+0x6c58>
  4096ac:	mov	w20, #0x6                   	// #6
  4096b0:	b	409648 <ferror@plt+0x6c58>
  4096b4:	stp	x29, x30, [sp, #-48]!
  4096b8:	mov	x29, sp
  4096bc:	stp	x19, x20, [sp, #16]
  4096c0:	mov	x19, x1
  4096c4:	bl	40962c <ferror@plt+0x6c3c>
  4096c8:	mov	w20, w0
  4096cc:	cbz	w0, 4096f0 <ferror@plt+0x6d00>
  4096d0:	mov	w0, w20
  4096d4:	ldp	x19, x20, [sp, #16]
  4096d8:	ldp	x29, x30, [sp], #48
  4096dc:	ret
  4096e0:	ldr	w2, [x19]
  4096e4:	ldr	w0, [sp, #44]
  4096e8:	orr	w2, w2, w0
  4096ec:	str	w2, [x19]
  4096f0:	add	x0, sp, #0x2c
  4096f4:	bl	40887c <ferror@plt+0x5e8c>
  4096f8:	cmp	w0, #0x16
  4096fc:	b.ne	409720 <ferror@plt+0x6d30>  // b.any
  409700:	add	x0, sp, #0x2c
  409704:	bl	40887c <ferror@plt+0x5e8c>
  409708:	cbz	w0, 40972c <ferror@plt+0x6d3c>
  40970c:	add	x1, sp, #0x2c
  409710:	bl	40962c <ferror@plt+0x6c3c>
  409714:	cbz	w0, 4096e0 <ferror@plt+0x6cf0>
  409718:	mov	w20, w0
  40971c:	b	4096d0 <ferror@plt+0x6ce0>
  409720:	cbz	w0, 409734 <ferror@plt+0x6d44>
  409724:	bl	408868 <ferror@plt+0x5e78>
  409728:	b	4096d0 <ferror@plt+0x6ce0>
  40972c:	mov	w20, #0x6                   	// #6
  409730:	b	4096d0 <ferror@plt+0x6ce0>
  409734:	mov	w20, #0x6                   	// #6
  409738:	b	4096d0 <ferror@plt+0x6ce0>
  40973c:	stp	x29, x30, [sp, #-48]!
  409740:	mov	x29, sp
  409744:	stp	x19, x20, [sp, #16]
  409748:	str	x21, [sp, #32]
  40974c:	mov	x21, x0
  409750:	mov	x20, x1
  409754:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  409758:	add	x0, x1, #0x850
  40975c:	str	x21, [x1, #2128]
  409760:	str	xzr, [x0, #8]
  409764:	mov	x0, x20
  409768:	bl	40887c <ferror@plt+0x5e8c>
  40976c:	mov	x1, x20
  409770:	bl	408e30 <ferror@plt+0x6440>
  409774:	mov	w19, w0
  409778:	cbnz	w0, 4097d8 <ferror@plt+0x6de8>
  40977c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  409780:	ldr	x0, [x0, #2128]
  409784:	ldrb	w0, [x0]
  409788:	cbnz	w0, 4097a4 <ferror@plt+0x6db4>
  40978c:	cmp	w19, #0x0
  409790:	cset	w0, ne  // ne = any
  409794:	ldp	x19, x20, [sp, #16]
  409798:	ldr	x21, [sp, #32]
  40979c:	ldp	x29, x30, [sp], #48
  4097a0:	ret
  4097a4:	mov	x0, x20
  4097a8:	bl	40887c <ferror@plt+0x5e8c>
  4097ac:	cmp	w0, #0x1
  4097b0:	b.eq	40987c <ferror@plt+0x6e8c>  // b.none
  4097b4:	mov	x3, x21
  4097b8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  4097bc:	add	x2, x2, #0x770
  4097c0:	mov	w1, #0x0                   	// #0
  4097c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4097c8:	ldr	w0, [x0, #1644]
  4097cc:	bl	402c80 <ferror@plt+0x290>
  4097d0:	mov	w19, #0x7                   	// #7
  4097d4:	b	40978c <ferror@plt+0x6d9c>
  4097d8:	cmp	w0, #0x5
  4097dc:	b.eq	4098d4 <ferror@plt+0x6ee4>  // b.none
  4097e0:	b.hi	40986c <ferror@plt+0x6e7c>  // b.pmore
  4097e4:	cmp	w0, #0x3
  4097e8:	b.eq	409914 <ferror@plt+0x6f24>  // b.none
  4097ec:	b.ls	409818 <ferror@plt+0x6e28>  // b.plast
  4097f0:	cmp	w0, #0x4
  4097f4:	b.ne	409828 <ferror@plt+0x6e38>  // b.any
  4097f8:	mov	x3, x21
  4097fc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  409800:	add	x2, x2, #0x728
  409804:	mov	w1, #0x0                   	// #0
  409808:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40980c:	ldr	w0, [x0, #1644]
  409810:	bl	402c80 <ferror@plt+0x290>
  409814:	b	40978c <ferror@plt+0x6d9c>
  409818:	cmp	w0, #0x2
  40981c:	b.eq	4098f4 <ferror@plt+0x6f04>  // b.none
  409820:	cmp	w0, #0x3
  409824:	b.ne	409844 <ferror@plt+0x6e54>  // b.any
  409828:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40982c:	add	x2, x2, #0x820
  409830:	mov	w1, #0x0                   	// #0
  409834:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  409838:	ldr	w0, [x0, #1644]
  40983c:	bl	402c80 <ferror@plt+0x290>
  409840:	bl	402720 <abort@plt>
  409844:	cmp	w0, #0x1
  409848:	b.ne	409828 <ferror@plt+0x6e38>  // b.any
  40984c:	mov	x3, x21
  409850:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  409854:	add	x2, x2, #0x7c0
  409858:	mov	w1, #0x0                   	// #0
  40985c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  409860:	ldr	w0, [x0, #1644]
  409864:	bl	402c80 <ferror@plt+0x290>
  409868:	b	40978c <ferror@plt+0x6d9c>
  40986c:	cmp	w0, #0x7
  409870:	b.eq	4097b4 <ferror@plt+0x6dc4>  // b.none
  409874:	cmp	w0, #0x8
  409878:	b.ne	4098ac <ferror@plt+0x6ebc>  // b.any
  40987c:	mov	x3, x21
  409880:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  409884:	add	x2, x2, #0x7a0
  409888:	mov	w1, #0x0                   	// #0
  40988c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  409890:	ldr	w0, [x0, #1644]
  409894:	bl	402c80 <ferror@plt+0x290>
  409898:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40989c:	mov	w1, #0x1                   	// #1
  4098a0:	str	w1, [x0, #3408]
  4098a4:	mov	w19, #0x8                   	// #8
  4098a8:	b	40978c <ferror@plt+0x6d9c>
  4098ac:	cmp	w0, #0x6
  4098b0:	b.ne	409828 <ferror@plt+0x6e38>  // b.any
  4098b4:	mov	x3, x21
  4098b8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  4098bc:	add	x2, x2, #0x748
  4098c0:	mov	w1, #0x0                   	// #0
  4098c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4098c8:	ldr	w0, [x0, #1644]
  4098cc:	bl	402c80 <ferror@plt+0x290>
  4098d0:	b	40978c <ferror@plt+0x6d9c>
  4098d4:	mov	x3, x21
  4098d8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  4098dc:	add	x2, x2, #0x6f0
  4098e0:	mov	w1, #0x0                   	// #0
  4098e4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4098e8:	ldr	w0, [x0, #1644]
  4098ec:	bl	402c80 <ferror@plt+0x290>
  4098f0:	b	40978c <ferror@plt+0x6d9c>
  4098f4:	mov	x3, x21
  4098f8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  4098fc:	add	x2, x2, #0x7e0
  409900:	mov	w1, #0x0                   	// #0
  409904:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  409908:	ldr	w0, [x0, #1644]
  40990c:	bl	402c80 <ferror@plt+0x290>
  409910:	b	40978c <ferror@plt+0x6d9c>
  409914:	mov	x3, x21
  409918:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40991c:	add	x2, x2, #0x800
  409920:	mov	w1, #0x0                   	// #0
  409924:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  409928:	ldr	w0, [x0, #1644]
  40992c:	bl	402c80 <ferror@plt+0x290>
  409930:	b	40978c <ferror@plt+0x6d9c>
  409934:	stp	x29, x30, [sp, #-64]!
  409938:	mov	x29, sp
  40993c:	stp	x19, x20, [sp, #16]
  409940:	mov	x19, x0
  409944:	bl	4023d0 <strlen@plt>
  409948:	cbz	x0, 4099c8 <ferror@plt+0x6fd8>
  40994c:	stp	x21, x22, [sp, #32]
  409950:	mov	x20, x0
  409954:	bl	402970 <__errno_location@plt>
  409958:	mov	x22, x0
  40995c:	str	wzr, [x0]
  409960:	mov	w2, #0xa                   	// #10
  409964:	add	x1, sp, #0x38
  409968:	mov	x0, x19
  40996c:	bl	4027e0 <strtol@plt>
  409970:	mov	x21, x0
  409974:	ldr	x1, [sp, #56]
  409978:	sub	x1, x1, x19
  40997c:	cmp	x1, x20
  409980:	b.ne	4099e8 <ferror@plt+0x6ff8>  // b.any
  409984:	bl	4027c0 <__ctype_b_loc@plt>
  409988:	ldrb	w1, [x19]
  40998c:	ldr	x0, [x0]
  409990:	ldrh	w0, [x0, x1, lsl #1]
  409994:	tbnz	w0, #13, 409a18 <ferror@plt+0x7028>
  409998:	ldr	w0, [x22]
  40999c:	cmp	w0, #0x22
  4099a0:	b.eq	4099ac <ferror@plt+0x6fbc>  // b.none
  4099a4:	cmp	x21, w21, sxtw
  4099a8:	b.eq	409a04 <ferror@plt+0x7014>  // b.none
  4099ac:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  4099b0:	add	x2, x2, #0x8a8
  4099b4:	mov	w1, #0x0                   	// #0
  4099b8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4099bc:	ldr	w0, [x0, #1644]
  4099c0:	bl	402c80 <ferror@plt+0x290>
  4099c4:	b	409a04 <ferror@plt+0x7014>
  4099c8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  4099cc:	add	x2, x2, #0x850
  4099d0:	mov	w1, #0x0                   	// #0
  4099d4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4099d8:	ldr	w0, [x0, #1644]
  4099dc:	bl	402c80 <ferror@plt+0x290>
  4099e0:	mov	w0, #0x0                   	// #0
  4099e4:	b	409a0c <ferror@plt+0x701c>
  4099e8:	mov	x3, x19
  4099ec:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  4099f0:	add	x2, x2, #0x870
  4099f4:	mov	w1, #0x0                   	// #0
  4099f8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4099fc:	ldr	w0, [x0, #1644]
  409a00:	bl	402c80 <ferror@plt+0x290>
  409a04:	mov	w0, w21
  409a08:	ldp	x21, x22, [sp, #32]
  409a0c:	ldp	x19, x20, [sp, #16]
  409a10:	ldp	x29, x30, [sp], #64
  409a14:	ret
  409a18:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  409a1c:	add	x2, x2, #0x888
  409a20:	mov	w1, #0x0                   	// #0
  409a24:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  409a28:	ldr	w0, [x0, #1644]
  409a2c:	bl	402c80 <ferror@plt+0x290>
  409a30:	b	409a04 <ferror@plt+0x7014>
  409a34:	stp	x29, x30, [sp, #-320]!
  409a38:	mov	x29, sp
  409a3c:	stp	x19, x20, [sp, #16]
  409a40:	stp	x21, x22, [sp, #32]
  409a44:	stp	x23, x24, [sp, #48]
  409a48:	stp	x25, x26, [sp, #64]
  409a4c:	stp	x27, x28, [sp, #80]
  409a50:	str	d8, [sp, #96]
  409a54:	mov	x21, x0
  409a58:	mov	w27, w1
  409a5c:	mov	x26, x2
  409a60:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  409a64:	add	x0, x0, #0x8f0
  409a68:	ldr	x1, [x0]
  409a6c:	str	x1, [sp, #304]
  409a70:	ldur	x0, [x0, #6]
  409a74:	add	x1, sp, #0x230
  409a78:	stur	x0, [x1, #-250]
  409a7c:	cbz	w27, 409ac8 <ferror@plt+0x70d8>
  409a80:	sub	w27, w27, #0x1
  409a84:	ldr	x0, [x26], #8
  409a88:	ldr	x0, [x0, #8]
  409a8c:	str	x0, [sp, #152]
  409a90:	stp	xzr, xzr, [sp, #176]
  409a94:	stp	xzr, xzr, [sp, #192]
  409a98:	stp	xzr, xzr, [sp, #208]
  409a9c:	stp	xzr, xzr, [sp, #224]
  409aa0:	stp	xzr, xzr, [sp, #240]
  409aa4:	stp	xzr, xzr, [sp, #256]
  409aa8:	stp	xzr, xzr, [sp, #272]
  409aac:	stp	xzr, xzr, [sp, #288]
  409ab0:	ldr	x23, [sp, #152]
  409ab4:	mov	w28, #0x1                   	// #1
  409ab8:	add	x0, sp, #0x131
  409abc:	str	x0, [sp, #144]
  409ac0:	mov	w20, w28
  409ac4:	b	409b78 <ferror@plt+0x7188>
  409ac8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  409acc:	add	x0, x0, #0x6c0
  409ad0:	str	x0, [sp, #152]
  409ad4:	b	409a90 <ferror@plt+0x70a0>
  409ad8:	mov	x0, x23
  409adc:	bl	4023d0 <strlen@plt>
  409ae0:	mov	x19, x0
  409ae4:	ldr	x0, [x21, #32]
  409ae8:	ldr	x1, [x21, #24]
  409aec:	sub	x0, x0, x1
  409af0:	cmp	x19, x0
  409af4:	b.hi	409b34 <ferror@plt+0x7144>  // b.pmore
  409af8:	mov	x2, x19
  409afc:	mov	x1, x23
  409b00:	ldr	x0, [x21, #24]
  409b04:	bl	402390 <memcpy@plt>
  409b08:	ldr	x0, [x21, #24]
  409b0c:	add	x19, x0, x19
  409b10:	str	x19, [x21, #24]
  409b14:	ldp	x19, x20, [sp, #16]
  409b18:	ldp	x21, x22, [sp, #32]
  409b1c:	ldp	x23, x24, [sp, #48]
  409b20:	ldp	x25, x26, [sp, #64]
  409b24:	ldp	x27, x28, [sp, #80]
  409b28:	ldr	d8, [sp, #96]
  409b2c:	ldp	x29, x30, [sp], #320
  409b30:	ret
  409b34:	mov	x1, x19
  409b38:	mov	x0, x21
  409b3c:	bl	416dc4 <_obstack_newchunk@@Base>
  409b40:	b	409af8 <ferror@plt+0x7108>
  409b44:	mov	x1, x19
  409b48:	mov	x0, x21
  409b4c:	bl	416dc4 <_obstack_newchunk@@Base>
  409b50:	b	409ba4 <ferror@plt+0x71b4>
  409b54:	ldr	x0, [x21, #32]
  409b58:	cmp	x2, x0
  409b5c:	b.eq	409c84 <ferror@plt+0x7294>  // b.none
  409b60:	ldr	x0, [x21, #24]
  409b64:	add	x1, x0, #0x1
  409b68:	str	x1, [x21, #24]
  409b6c:	mov	w1, #0x25                  	// #37
  409b70:	strb	w1, [x0]
  409b74:	add	x23, x24, #0x2
  409b78:	mov	w1, #0x25                  	// #37
  409b7c:	mov	x0, x23
  409b80:	bl	402860 <strchr@plt>
  409b84:	mov	x24, x0
  409b88:	cbz	x0, 409ad8 <ferror@plt+0x70e8>
  409b8c:	sub	x19, x0, x23
  409b90:	ldr	x0, [x21, #32]
  409b94:	ldr	x1, [x21, #24]
  409b98:	sub	x0, x0, x1
  409b9c:	cmp	x19, x0
  409ba0:	b.hi	409b44 <ferror@plt+0x7154>  // b.pmore
  409ba4:	mov	x2, x19
  409ba8:	mov	x1, x23
  409bac:	ldr	x0, [x21, #24]
  409bb0:	bl	402390 <memcpy@plt>
  409bb4:	ldr	x2, [x21, #24]
  409bb8:	add	x2, x2, x19
  409bbc:	str	x2, [x21, #24]
  409bc0:	ldrb	w0, [x24, #1]
  409bc4:	cmp	w0, #0x25
  409bc8:	b.eq	409b54 <ferror@plt+0x7164>  // b.none
  409bcc:	add	x24, x24, #0x1
  409bd0:	mov	w0, #0x1                   	// #1
  409bd4:	strb	w0, [sp, #264]
  409bd8:	strb	w0, [sp, #296]
  409bdc:	strb	w0, [sp, #293]
  409be0:	strb	w0, [sp, #291]
  409be4:	strb	w0, [sp, #287]
  409be8:	strb	w0, [sp, #281]
  409bec:	strb	w0, [sp, #247]
  409bf0:	strb	w0, [sp, #279]
  409bf4:	strb	w0, [sp, #246]
  409bf8:	strb	w0, [sp, #278]
  409bfc:	strb	w0, [sp, #245]
  409c00:	strb	w0, [sp, #277]
  409c04:	strb	w0, [sp, #276]
  409c08:	strb	w0, [sp, #275]
  409c0c:	strb	w0, [sp, #241]
  409c10:	strb	w0, [sp, #273]
  409c14:	str	wzr, [sp, #140]
  409c18:	mov	w0, #0x1                   	// #1
  409c1c:	str	w0, [sp, #128]
  409c20:	str	wzr, [sp, #120]
  409c24:	mov	w30, w28
  409c28:	mov	w13, #0x0                   	// #0
  409c2c:	mov	w14, w28
  409c30:	mov	w22, #0x0                   	// #0
  409c34:	mov	w25, w28
  409c38:	mov	w19, #0x0                   	// #0
  409c3c:	mov	w23, w28
  409c40:	mov	w5, #0x0                   	// #0
  409c44:	mov	w6, w28
  409c48:	mov	w16, #0x0                   	// #0
  409c4c:	mov	w18, w28
  409c50:	mov	w15, #0x0                   	// #0
  409c54:	mov	w17, w28
  409c58:	mov	w11, #0x0                   	// #0
  409c5c:	mov	w12, w28
  409c60:	mov	w3, #0x0                   	// #0
  409c64:	mov	w4, w28
  409c68:	mov	w8, #0x0                   	// #0
  409c6c:	mov	w10, w28
  409c70:	mov	w7, #0x0                   	// #0
  409c74:	mov	w9, w28
  409c78:	mov	w2, #0x0                   	// #0
  409c7c:	mov	w1, #0x0                   	// #0
  409c80:	b	409d38 <ferror@plt+0x7348>
  409c84:	mov	x1, #0x1                   	// #1
  409c88:	mov	x0, x21
  409c8c:	bl	416dc4 <_obstack_newchunk@@Base>
  409c90:	b	409b60 <ferror@plt+0x7170>
  409c94:	cmp	w0, #0x20
  409c98:	b.ne	409de0 <ferror@plt+0x73f0>  // b.any
  409c9c:	orr	w2, w2, #0x8
  409ca0:	mov	w13, w28
  409ca4:	mov	w14, w1
  409ca8:	mov	w5, w20
  409cac:	mov	w6, w1
  409cb0:	mov	w11, w20
  409cb4:	mov	w12, w1
  409cb8:	mov	w3, w20
  409cbc:	mov	w4, w1
  409cc0:	mov	w8, w20
  409cc4:	mov	w10, w1
  409cc8:	mov	w7, w20
  409ccc:	mov	w9, w1
  409cd0:	b	409d30 <ferror@plt+0x7340>
  409cd4:	cmp	w0, #0x2d
  409cd8:	b.eq	409dd8 <ferror@plt+0x73e8>  // b.none
  409cdc:	cmp	w0, #0x30
  409ce0:	b.ne	409de0 <ferror@plt+0x73f0>  // b.any
  409ce4:	orr	w2, w2, #0x10
  409ce8:	mov	w5, w28
  409cec:	mov	w6, w1
  409cf0:	mov	w3, w20
  409cf4:	mov	w4, w1
  409cf8:	b	409d30 <ferror@plt+0x7340>
  409cfc:	orr	w2, w2, #0x2
  409d00:	mov	w13, w28
  409d04:	mov	w14, w1
  409d08:	mov	w5, w20
  409d0c:	mov	w6, w1
  409d10:	mov	w11, w20
  409d14:	mov	w12, w1
  409d18:	mov	w3, w20
  409d1c:	mov	w4, w1
  409d20:	mov	w8, w20
  409d24:	mov	w10, w1
  409d28:	mov	w7, w20
  409d2c:	mov	w9, w1
  409d30:	tbnz	w2, #6, 409de8 <ferror@plt+0x73f8>
  409d34:	add	x24, x24, #0x1
  409d38:	ldrb	w0, [x24]
  409d3c:	cmp	w0, #0x2b
  409d40:	b.eq	409cfc <ferror@plt+0x730c>  // b.none
  409d44:	b.hi	409cd4 <ferror@plt+0x72e4>  // b.pmore
  409d48:	cmp	w0, #0x23
  409d4c:	b.eq	409da8 <ferror@plt+0x73b8>  // b.none
  409d50:	cmp	w0, #0x27
  409d54:	b.ne	409c94 <ferror@plt+0x72a4>  // b.any
  409d58:	orr	w2, w2, #0x1
  409d5c:	mov	w22, w28
  409d60:	mov	w25, w1
  409d64:	mov	w19, w20
  409d68:	mov	w23, w1
  409d6c:	mov	w5, w20
  409d70:	mov	w6, w1
  409d74:	mov	w16, w20
  409d78:	mov	w18, w1
  409d7c:	mov	w15, w20
  409d80:	mov	w17, w1
  409d84:	mov	w11, w20
  409d88:	mov	w12, w1
  409d8c:	mov	w3, w20
  409d90:	mov	w4, w1
  409d94:	mov	w8, w20
  409d98:	mov	w10, w1
  409d9c:	mov	w7, w20
  409da0:	mov	w9, w1
  409da4:	b	409d30 <ferror@plt+0x7340>
  409da8:	orr	w2, w2, #0x20
  409dac:	str	w28, [sp, #140]
  409db0:	str	w1, [sp, #128]
  409db4:	str	w20, [sp, #120]
  409db8:	mov	w30, w1
  409dbc:	mov	w13, w20
  409dc0:	mov	w14, w1
  409dc4:	mov	w5, w20
  409dc8:	mov	w6, w1
  409dcc:	mov	w3, w20
  409dd0:	mov	w4, w1
  409dd4:	b	409d30 <ferror@plt+0x7340>
  409dd8:	orr	w2, w2, #0x4
  409ddc:	b	409d30 <ferror@plt+0x7340>
  409de0:	orr	w2, w2, #0x40
  409de4:	b	409d30 <ferror@plt+0x7340>
  409de8:	cbz	w7, 409df0 <ferror@plt+0x7400>
  409dec:	strb	w9, [sp, #264]
  409df0:	cbz	w8, 409df8 <ferror@plt+0x7408>
  409df4:	strb	w10, [sp, #296]
  409df8:	cbz	w3, 409e00 <ferror@plt+0x7410>
  409dfc:	strb	w4, [sp, #291]
  409e00:	cbz	w11, 409e08 <ferror@plt+0x7418>
  409e04:	strb	w12, [sp, #287]
  409e08:	cbz	w15, 409e10 <ferror@plt+0x7420>
  409e0c:	strb	w17, [sp, #245]
  409e10:	cbz	w16, 409e18 <ferror@plt+0x7428>
  409e14:	strb	w18, [sp, #277]
  409e18:	cbz	w5, 409e20 <ferror@plt+0x7430>
  409e1c:	strb	w6, [sp, #275]
  409e20:	cbz	w19, 409e28 <ferror@plt+0x7438>
  409e24:	strb	w23, [sp, #241]
  409e28:	cbz	w22, 409e30 <ferror@plt+0x7440>
  409e2c:	strb	w25, [sp, #273]
  409e30:	cbz	w13, 409e38 <ferror@plt+0x7448>
  409e34:	strb	w14, [sp, #293]
  409e38:	ldr	w0, [sp, #120]
  409e3c:	cbz	w0, 409e44 <ferror@plt+0x7454>
  409e40:	strb	w30, [sp, #281]
  409e44:	ldr	w0, [sp, #140]
  409e48:	cbz	w0, 409e54 <ferror@plt+0x7464>
  409e4c:	ldrb	w0, [sp, #128]
  409e50:	strb	w0, [sp, #276]
  409e54:	ldr	x23, [sp, #144]
  409e58:	tbz	w2, #0, 409e68 <ferror@plt+0x7478>
  409e5c:	mov	w0, #0x27                  	// #39
  409e60:	strb	w0, [sp, #305]
  409e64:	add	x23, sp, #0x132
  409e68:	tbz	w2, #1, 409e74 <ferror@plt+0x7484>
  409e6c:	mov	w0, #0x2b                  	// #43
  409e70:	strb	w0, [x23], #1
  409e74:	tbz	w2, #2, 409e80 <ferror@plt+0x7490>
  409e78:	mov	w0, #0x2d                  	// #45
  409e7c:	strb	w0, [x23], #1
  409e80:	tbz	w2, #3, 409e8c <ferror@plt+0x749c>
  409e84:	mov	w0, #0x20                  	// #32
  409e88:	strb	w0, [x23], #1
  409e8c:	tbz	w2, #4, 409e98 <ferror@plt+0x74a8>
  409e90:	mov	w0, #0x30                  	// #48
  409e94:	strb	w0, [x23], #1
  409e98:	tbz	w2, #5, 409ea4 <ferror@plt+0x74b4>
  409e9c:	mov	w0, #0x23                  	// #35
  409ea0:	strb	w0, [x23], #1
  409ea4:	mov	w0, #0x2a                  	// #42
  409ea8:	strb	w0, [x23]
  409eac:	ldrb	w0, [x24]
  409eb0:	cmp	w0, #0x2a
  409eb4:	b.ne	409f7c <ferror@plt+0x758c>  // b.any
  409eb8:	mov	w19, w27
  409ebc:	cbnz	w27, 409f8c <ferror@plt+0x759c>
  409ec0:	add	x24, x24, #0x1
  409ec4:	mov	w0, #0x2e                  	// #46
  409ec8:	strb	w0, [x23, #1]
  409ecc:	mov	w0, #0x2a                  	// #42
  409ed0:	strb	w0, [x23, #2]
  409ed4:	ldrb	w0, [x24]
  409ed8:	mov	w22, #0xffffffff            	// #-1
  409edc:	cmp	w0, #0x2e
  409ee0:	b.eq	409fc8 <ferror@plt+0x75d8>  // b.none
  409ee4:	ldrb	w0, [x24]
  409ee8:	cmp	w0, #0x6c
  409eec:	b.eq	40a038 <ferror@plt+0x7648>  // b.none
  409ef0:	cmp	w0, #0x68
  409ef4:	b.eq	40a054 <ferror@plt+0x7664>  // b.none
  409ef8:	add	x2, x23, #0x3
  409efc:	mov	w3, #0x0                   	// #0
  409f00:	mov	x23, x24
  409f04:	ldrb	w25, [x23], #1
  409f08:	tbnz	w25, #7, 40a0b4 <ferror@plt+0x76c4>
  409f0c:	add	x0, sp, #0xb0
  409f10:	ldrb	w0, [x0, w25, sxtw]
  409f14:	cbz	w0, 40a0b4 <ferror@plt+0x76c4>
  409f18:	cmp	w25, #0x78
  409f1c:	b.hi	40a1a4 <ferror@plt+0x77b4>  // b.pmore
  409f20:	cmp	w25, #0x63
  409f24:	b.ls	40a0dc <ferror@plt+0x76ec>  // b.plast
  409f28:	sub	w0, w25, #0x64
  409f2c:	mov	x1, #0x1                   	// #1
  409f30:	lsl	x0, x1, x0
  409f34:	mov	x1, #0x821                 	// #2081
  409f38:	movk	x1, #0x12, lsl #16
  409f3c:	tst	x0, x1
  409f40:	b.ne	40a1a8 <ferror@plt+0x77b8>  // b.any
  409f44:	tst	x0, #0xe
  409f48:	b.ne	40a168 <ferror@plt+0x7778>  // b.any
  409f4c:	tbz	w0, #15, 40a1a4 <ferror@plt+0x77b4>
  409f50:	strb	w25, [x2]
  409f54:	strb	wzr, [x2, #1]
  409f58:	cbnz	w27, 40a3d4 <ferror@plt+0x79e4>
  409f5c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x6c>
  409f60:	add	x3, x3, #0x6c0
  409f64:	mov	w2, w22
  409f68:	mov	w1, w19
  409f6c:	add	x0, sp, #0x130
  409f70:	bl	416764 <ferror@plt+0x13d74>
  409f74:	mov	x19, x0
  409f78:	b	40a104 <ferror@plt+0x7714>
  409f7c:	bl	4027c0 <__ctype_b_loc@plt>
  409f80:	ldr	x2, [x0]
  409f84:	mov	w19, #0x0                   	// #0
  409f88:	b	409fb4 <ferror@plt+0x75c4>
  409f8c:	sub	w27, w27, #0x1
  409f90:	ldr	x0, [x26], #8
  409f94:	ldr	x0, [x0, #8]
  409f98:	bl	409934 <ferror@plt+0x6f44>
  409f9c:	mov	w19, w0
  409fa0:	b	409ec0 <ferror@plt+0x74d0>
  409fa4:	add	w19, w19, w19, lsl #2
  409fa8:	add	w19, w0, w19, lsl #1
  409fac:	sub	w19, w19, #0x30
  409fb0:	add	x24, x24, #0x1
  409fb4:	ldrb	w0, [x24]
  409fb8:	and	x1, x0, #0xff
  409fbc:	ldrh	w1, [x2, x1, lsl #1]
  409fc0:	tbnz	w1, #11, 409fa4 <ferror@plt+0x75b4>
  409fc4:	b	409ec4 <ferror@plt+0x74d4>
  409fc8:	strb	wzr, [sp, #275]
  409fcc:	ldrb	w0, [x24, #1]
  409fd0:	cmp	w0, #0x2a
  409fd4:	b.ne	409fe8 <ferror@plt+0x75f8>  // b.any
  409fd8:	mov	w22, w27
  409fdc:	cbnz	w27, 409ffc <ferror@plt+0x760c>
  409fe0:	add	x24, x24, #0x2
  409fe4:	b	409ee4 <ferror@plt+0x74f4>
  409fe8:	add	x24, x24, #0x1
  409fec:	bl	4027c0 <__ctype_b_loc@plt>
  409ff0:	ldr	x2, [x0]
  409ff4:	mov	w22, #0x0                   	// #0
  409ff8:	b	40a024 <ferror@plt+0x7634>
  409ffc:	sub	w27, w27, #0x1
  40a000:	ldr	x0, [x26], #8
  40a004:	ldr	x0, [x0, #8]
  40a008:	bl	409934 <ferror@plt+0x6f44>
  40a00c:	mov	w22, w0
  40a010:	b	409fe0 <ferror@plt+0x75f0>
  40a014:	add	w22, w22, w22, lsl #2
  40a018:	add	w22, w0, w22, lsl #1
  40a01c:	sub	w22, w22, #0x30
  40a020:	add	x24, x24, #0x1
  40a024:	ldrb	w0, [x24]
  40a028:	and	x1, x0, #0xff
  40a02c:	ldrh	w1, [x2, x1, lsl #1]
  40a030:	tbnz	w1, #11, 40a014 <ferror@plt+0x7624>
  40a034:	b	409ee4 <ferror@plt+0x74f4>
  40a038:	add	x2, x23, #0x4
  40a03c:	strb	w0, [x23, #3]
  40a040:	add	x24, x24, #0x1
  40a044:	strb	wzr, [sp, #291]
  40a048:	strb	wzr, [sp, #275]
  40a04c:	mov	w3, #0x1                   	// #1
  40a050:	b	409f00 <ferror@plt+0x7510>
  40a054:	mov	w0, #0x68                  	// #104
  40a058:	strb	w0, [x23, #3]
  40a05c:	ldrb	w0, [x24, #1]
  40a060:	cmp	w0, #0x68
  40a064:	b.eq	40a0a0 <ferror@plt+0x76b0>  // b.none
  40a068:	add	x2, x23, #0x4
  40a06c:	add	x24, x24, #0x1
  40a070:	strb	wzr, [sp, #291]
  40a074:	strb	wzr, [sp, #247]
  40a078:	strb	wzr, [sp, #279]
  40a07c:	strb	wzr, [sp, #246]
  40a080:	strb	wzr, [sp, #278]
  40a084:	strb	wzr, [sp, #245]
  40a088:	strb	wzr, [sp, #277]
  40a08c:	strb	wzr, [sp, #275]
  40a090:	strb	wzr, [sp, #241]
  40a094:	strb	wzr, [sp, #273]
  40a098:	mov	w3, #0x0                   	// #0
  40a09c:	b	409f00 <ferror@plt+0x7510>
  40a0a0:	add	x2, x23, #0x5
  40a0a4:	mov	w0, #0x68                  	// #104
  40a0a8:	strb	w0, [x23, #4]
  40a0ac:	add	x24, x24, #0x2
  40a0b0:	b	40a070 <ferror@plt+0x7680>
  40a0b4:	ldr	x3, [sp, #152]
  40a0b8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a0bc:	add	x2, x2, #0x8c8
  40a0c0:	mov	w1, #0x0                   	// #0
  40a0c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a0c8:	ldr	w0, [x0, #1644]
  40a0cc:	bl	402c80 <ferror@plt+0x290>
  40a0d0:	cmp	w25, #0x0
  40a0d4:	csel	x23, x23, x24, ne  // ne = any
  40a0d8:	b	409b78 <ferror@plt+0x7188>
  40a0dc:	b.ne	40a150 <ferror@plt+0x7760>  // b.any
  40a0e0:	mov	w0, #0x63                  	// #99
  40a0e4:	sturb	w0, [x2, #-2]
  40a0e8:	sturb	wzr, [x2, #-1]
  40a0ec:	mov	w2, w27
  40a0f0:	cbnz	w27, 40a1d4 <ferror@plt+0x77e4>
  40a0f4:	mov	w1, w19
  40a0f8:	add	x0, sp, #0x130
  40a0fc:	bl	416764 <ferror@plt+0x13d74>
  40a100:	mov	x19, x0
  40a104:	cbz	x19, 409b78 <ferror@plt+0x7188>
  40a108:	mov	x0, x19
  40a10c:	bl	4023d0 <strlen@plt>
  40a110:	mov	x22, x0
  40a114:	ldr	x0, [x21, #32]
  40a118:	ldr	x1, [x21, #24]
  40a11c:	sub	x0, x0, x1
  40a120:	cmp	x22, x0
  40a124:	b.hi	40a3e4 <ferror@plt+0x79f4>  // b.pmore
  40a128:	mov	x2, x22
  40a12c:	mov	x1, x19
  40a130:	ldr	x0, [x21, #24]
  40a134:	bl	402390 <memcpy@plt>
  40a138:	ldr	x0, [x21, #24]
  40a13c:	add	x22, x0, x22
  40a140:	str	x22, [x21, #24]
  40a144:	mov	x0, x19
  40a148:	bl	402810 <free@plt>
  40a14c:	b	409b78 <ferror@plt+0x7188>
  40a150:	cmp	w25, #0x47
  40a154:	b.hi	40a194 <ferror@plt+0x77a4>  // b.pmore
  40a158:	cmp	w25, #0x44
  40a15c:	b.hi	40a168 <ferror@plt+0x7778>  // b.pmore
  40a160:	cmp	w25, #0x41
  40a164:	b.ne	40a1a4 <ferror@plt+0x77b4>  // b.any
  40a168:	strb	w25, [x2]
  40a16c:	strb	wzr, [x2, #1]
  40a170:	movi	d8, #0x0
  40a174:	cbnz	w27, 40a2f0 <ferror@plt+0x7900>
  40a178:	fmov	d0, d8
  40a17c:	mov	w2, w22
  40a180:	mov	w1, w19
  40a184:	add	x0, sp, #0x130
  40a188:	bl	416764 <ferror@plt+0x13d74>
  40a18c:	mov	x19, x0
  40a190:	b	40a104 <ferror@plt+0x7714>
  40a194:	cmp	w25, #0x58
  40a198:	b.eq	40a1a8 <ferror@plt+0x77b8>  // b.none
  40a19c:	cmp	w25, #0x61
  40a1a0:	b.eq	40a168 <ferror@plt+0x7778>  // b.none
  40a1a4:	bl	402720 <abort@plt>
  40a1a8:	cbnz	w3, 40a3f4 <ferror@plt+0x7a04>
  40a1ac:	strb	w25, [x2]
  40a1b0:	strb	wzr, [x2, #1]
  40a1b4:	mov	w3, w27
  40a1b8:	cbnz	w27, 40a1ec <ferror@plt+0x77fc>
  40a1bc:	mov	w2, w22
  40a1c0:	mov	w1, w19
  40a1c4:	add	x0, sp, #0x130
  40a1c8:	bl	416764 <ferror@plt+0x13d74>
  40a1cc:	mov	x19, x0
  40a1d0:	b	40a104 <ferror@plt+0x7714>
  40a1d4:	sub	w27, w27, #0x1
  40a1d8:	ldr	x0, [x26], #8
  40a1dc:	ldr	x0, [x0, #8]
  40a1e0:	bl	409934 <ferror@plt+0x6f44>
  40a1e4:	mov	w2, w0
  40a1e8:	b	40a0f4 <ferror@plt+0x7704>
  40a1ec:	sub	w27, w27, #0x1
  40a1f0:	ldr	x0, [x26], #8
  40a1f4:	ldr	x0, [x0, #8]
  40a1f8:	bl	409934 <ferror@plt+0x6f44>
  40a1fc:	mov	w3, w0
  40a200:	b	40a1bc <ferror@plt+0x77cc>
  40a204:	sub	w27, w27, #0x1
  40a208:	ldr	x0, [x26], #8
  40a20c:	ldr	x25, [x0, #8]
  40a210:	mov	x0, x25
  40a214:	bl	4023d0 <strlen@plt>
  40a218:	str	x0, [sp, #120]
  40a21c:	cbz	x0, 40a294 <ferror@plt+0x78a4>
  40a220:	bl	402970 <__errno_location@plt>
  40a224:	str	x0, [sp, #128]
  40a228:	str	wzr, [x0]
  40a22c:	mov	w2, #0xa                   	// #10
  40a230:	add	x1, sp, #0xa8
  40a234:	mov	x0, x25
  40a238:	bl	4027e0 <strtol@plt>
  40a23c:	mov	x24, x0
  40a240:	ldr	x0, [sp, #168]
  40a244:	sub	x0, x0, x25
  40a248:	ldr	x1, [sp, #120]
  40a24c:	cmp	x0, x1
  40a250:	b.ne	40a2b4 <ferror@plt+0x78c4>  // b.any
  40a254:	bl	4027c0 <__ctype_b_loc@plt>
  40a258:	ldrb	w1, [x25]
  40a25c:	ldr	x0, [x0]
  40a260:	ldrh	w0, [x0, x1, lsl #1]
  40a264:	tbnz	w0, #13, 40a2d4 <ferror@plt+0x78e4>
  40a268:	ldr	x0, [sp, #128]
  40a26c:	ldr	w0, [x0]
  40a270:	cmp	w0, #0x22
  40a274:	b.ne	40a404 <ferror@plt+0x7a14>  // b.any
  40a278:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a27c:	add	x2, x2, #0x8a8
  40a280:	mov	w1, #0x0                   	// #0
  40a284:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a288:	ldr	w0, [x0, #1644]
  40a28c:	bl	402c80 <ferror@plt+0x290>
  40a290:	b	40a404 <ferror@plt+0x7a14>
  40a294:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a298:	add	x2, x2, #0x850
  40a29c:	mov	w1, #0x0                   	// #0
  40a2a0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a2a4:	ldr	w0, [x0, #1644]
  40a2a8:	bl	402c80 <ferror@plt+0x290>
  40a2ac:	mov	x24, #0x0                   	// #0
  40a2b0:	b	40a404 <ferror@plt+0x7a14>
  40a2b4:	mov	x3, x25
  40a2b8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a2bc:	add	x2, x2, #0x870
  40a2c0:	mov	w1, #0x0                   	// #0
  40a2c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a2c8:	ldr	w0, [x0, #1644]
  40a2cc:	bl	402c80 <ferror@plt+0x290>
  40a2d0:	b	40a404 <ferror@plt+0x7a14>
  40a2d4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a2d8:	add	x2, x2, #0x888
  40a2dc:	mov	w1, #0x0                   	// #0
  40a2e0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a2e4:	ldr	w0, [x0, #1644]
  40a2e8:	bl	402c80 <ferror@plt+0x290>
  40a2ec:	b	40a404 <ferror@plt+0x7a14>
  40a2f0:	sub	w27, w27, #0x1
  40a2f4:	ldr	x0, [x26], #8
  40a2f8:	ldr	x25, [x0, #8]
  40a2fc:	mov	x0, x25
  40a300:	bl	4023d0 <strlen@plt>
  40a304:	mov	x24, x0
  40a308:	cbz	x0, 40a378 <ferror@plt+0x7988>
  40a30c:	bl	402970 <__errno_location@plt>
  40a310:	str	x0, [sp, #120]
  40a314:	str	wzr, [x0]
  40a318:	add	x1, sp, #0xa8
  40a31c:	mov	x0, x25
  40a320:	bl	402440 <strtod@plt>
  40a324:	fmov	d8, d0
  40a328:	ldr	x0, [sp, #168]
  40a32c:	sub	x0, x0, x25
  40a330:	cmp	x0, x24
  40a334:	b.ne	40a398 <ferror@plt+0x79a8>  // b.any
  40a338:	bl	4027c0 <__ctype_b_loc@plt>
  40a33c:	ldrb	w1, [x25]
  40a340:	ldr	x0, [x0]
  40a344:	ldrh	w0, [x0, x1, lsl #1]
  40a348:	tbnz	w0, #13, 40a3b8 <ferror@plt+0x79c8>
  40a34c:	ldr	x0, [sp, #120]
  40a350:	ldr	w0, [x0]
  40a354:	cmp	w0, #0x22
  40a358:	b.ne	40a178 <ferror@plt+0x7788>  // b.any
  40a35c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a360:	add	x2, x2, #0x8a8
  40a364:	mov	w1, #0x0                   	// #0
  40a368:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a36c:	ldr	w0, [x0, #1644]
  40a370:	bl	402c80 <ferror@plt+0x290>
  40a374:	b	40a178 <ferror@plt+0x7788>
  40a378:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a37c:	add	x2, x2, #0x850
  40a380:	mov	w1, #0x0                   	// #0
  40a384:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a388:	ldr	w0, [x0, #1644]
  40a38c:	bl	402c80 <ferror@plt+0x290>
  40a390:	movi	d8, #0x0
  40a394:	b	40a178 <ferror@plt+0x7788>
  40a398:	mov	x3, x25
  40a39c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a3a0:	add	x2, x2, #0x870
  40a3a4:	mov	w1, #0x0                   	// #0
  40a3a8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a3ac:	ldr	w0, [x0, #1644]
  40a3b0:	bl	402c80 <ferror@plt+0x290>
  40a3b4:	b	40a178 <ferror@plt+0x7788>
  40a3b8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a3bc:	add	x2, x2, #0x888
  40a3c0:	mov	w1, #0x0                   	// #0
  40a3c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a3c8:	ldr	w0, [x0, #1644]
  40a3cc:	bl	402c80 <ferror@plt+0x290>
  40a3d0:	b	40a178 <ferror@plt+0x7788>
  40a3d4:	sub	w27, w27, #0x1
  40a3d8:	ldr	x0, [x26], #8
  40a3dc:	ldr	x3, [x0, #8]
  40a3e0:	b	409f64 <ferror@plt+0x7574>
  40a3e4:	mov	x1, x22
  40a3e8:	mov	x0, x21
  40a3ec:	bl	416dc4 <_obstack_newchunk@@Base>
  40a3f0:	b	40a128 <ferror@plt+0x7738>
  40a3f4:	strb	w25, [x2]
  40a3f8:	strb	wzr, [x2, #1]
  40a3fc:	mov	x24, #0x0                   	// #0
  40a400:	cbnz	w27, 40a204 <ferror@plt+0x7814>
  40a404:	mov	x3, x24
  40a408:	mov	w2, w22
  40a40c:	mov	w1, w19
  40a410:	add	x0, sp, #0x130
  40a414:	bl	416764 <ferror@plt+0x13d74>
  40a418:	mov	x19, x0
  40a41c:	b	40a104 <ferror@plt+0x7714>
  40a420:	stp	x29, x30, [sp, #-16]!
  40a424:	mov	x29, sp
  40a428:	cmp	w0, #0xa
  40a42c:	b.eq	40a450 <ferror@plt+0x7a60>  // b.none
  40a430:	mov	w3, w0
  40a434:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a438:	add	x2, x2, #0x928
  40a43c:	mov	w1, #0x0                   	// #0
  40a440:	mov	w0, #0x1                   	// #1
  40a444:	bl	402c80 <ferror@plt+0x290>
  40a448:	ldp	x29, x30, [sp], #16
  40a44c:	ret
  40a450:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a454:	add	x2, x2, #0x900
  40a458:	mov	w1, #0x0                   	// #0
  40a45c:	mov	w0, #0x1                   	// #1
  40a460:	bl	402c80 <ferror@plt+0x290>
  40a464:	b	40a448 <ferror@plt+0x7a58>
  40a468:	stp	x29, x30, [sp, #-96]!
  40a46c:	mov	x29, sp
  40a470:	stp	x19, x20, [sp, #16]
  40a474:	mov	x19, x0
  40a478:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40a47c:	add	x1, x1, #0x950
  40a480:	bl	411d38 <ferror@plt+0xf348>
  40a484:	cbz	x0, 40a5d8 <ferror@plt+0x7be8>
  40a488:	stp	x21, x22, [sp, #32]
  40a48c:	mov	x20, x0
  40a490:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a494:	add	x2, x2, #0x958
  40a498:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40a49c:	add	x1, x1, #0x968
  40a4a0:	bl	4164c0 <ferror@plt+0x13ad0>
  40a4a4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40a4a8:	add	x1, x1, #0x998
  40a4ac:	mov	x0, x20
  40a4b0:	bl	4164c0 <ferror@plt+0x13ad0>
  40a4b4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40a4b8:	add	x1, x1, #0x9a0
  40a4bc:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a4c0:	ldr	x0, [x0, #3424]
  40a4c4:	bl	4027b0 <strcmp@plt>
  40a4c8:	cbnz	w0, 40a4e4 <ferror@plt+0x7af4>
  40a4cc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  40a4d0:	add	x1, x1, #0x8c8
  40a4d4:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a4d8:	ldr	x0, [x0, #3480]
  40a4dc:	bl	4027b0 <strcmp@plt>
  40a4e0:	cbz	w0, 40a530 <ferror@plt+0x7b40>
  40a4e4:	adrp	x19, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a4e8:	add	x1, x19, #0xd98
  40a4ec:	adrp	x21, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a4f0:	add	x0, x21, #0xd60
  40a4f4:	ldr	w3, [x1, #8]
  40a4f8:	ldr	w2, [x0, #8]
  40a4fc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40a500:	add	x1, x1, #0x9a8
  40a504:	mov	x0, x20
  40a508:	bl	4164c0 <ferror@plt+0x13ad0>
  40a50c:	mov	x1, x20
  40a510:	ldr	x0, [x21, #3424]
  40a514:	bl	4023e0 <fputs@plt>
  40a518:	mov	x1, x20
  40a51c:	ldr	x0, [x19, #3480]
  40a520:	bl	4023e0 <fputs@plt>
  40a524:	mov	x1, x20
  40a528:	mov	w0, #0xa                   	// #10
  40a52c:	bl	4024a0 <fputc@plt>
  40a530:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40a534:	add	x1, x1, #0x9b0
  40a538:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a53c:	ldr	x0, [x0, #3448]
  40a540:	bl	4027b0 <strcmp@plt>
  40a544:	cbnz	w0, 40a560 <ferror@plt+0x7b70>
  40a548:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  40a54c:	add	x1, x1, #0x810
  40a550:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a554:	ldr	x0, [x0, #3464]
  40a558:	bl	4027b0 <strcmp@plt>
  40a55c:	cbz	w0, 40a5ac <ferror@plt+0x7bbc>
  40a560:	adrp	x19, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a564:	add	x1, x19, #0xd88
  40a568:	adrp	x21, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a56c:	add	x0, x21, #0xd78
  40a570:	ldr	w3, [x1, #8]
  40a574:	ldr	w2, [x0, #8]
  40a578:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40a57c:	add	x1, x1, #0x9b8
  40a580:	mov	x0, x20
  40a584:	bl	4164c0 <ferror@plt+0x13ad0>
  40a588:	mov	x1, x20
  40a58c:	ldr	x0, [x21, #3448]
  40a590:	bl	4023e0 <fputs@plt>
  40a594:	mov	x1, x20
  40a598:	ldr	x0, [x19, #3464]
  40a59c:	bl	4023e0 <fputs@plt>
  40a5a0:	mov	x1, x20
  40a5a4:	mov	w0, #0xa                   	// #10
  40a5a8:	bl	4024a0 <fputc@plt>
  40a5ac:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a5b0:	ldr	x0, [x0, #856]
  40a5b4:	cbz	x0, 40a7a0 <ferror@plt+0x7db0>
  40a5b8:	stp	x23, x24, [sp, #48]
  40a5bc:	stp	x25, x26, [sp, #64]
  40a5c0:	stp	x27, x28, [sp, #80]
  40a5c4:	mov	x27, #0x0                   	// #0
  40a5c8:	adrp	x28, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a5cc:	adrp	x25, 419000 <_obstack_memory_used@@Base+0x206c>
  40a5d0:	add	x25, x25, #0x9c0
  40a5d4:	b	40a774 <ferror@plt+0x7d84>
  40a5d8:	bl	402970 <__errno_location@plt>
  40a5dc:	mov	x3, x19
  40a5e0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  40a5e4:	add	x2, x2, #0x530
  40a5e8:	ldr	w1, [x0]
  40a5ec:	mov	w0, #0x1                   	// #1
  40a5f0:	bl	402c80 <ferror@plt+0x290>
  40a5f4:	b	40a7d0 <ferror@plt+0x7de0>
  40a5f8:	mov	x0, x1
  40a5fc:	ldr	x1, [x0]
  40a600:	str	x2, [x0]
  40a604:	mov	x2, x0
  40a608:	cbnz	x1, 40a5f8 <ferror@plt+0x7c08>
  40a60c:	str	x0, [x3, x26]
  40a610:	ldr	x0, [x28, #3504]
  40a614:	add	x2, x0, x26
  40a618:	ldr	x19, [x0, x26]
  40a61c:	cbz	x19, 40a78c <ferror@plt+0x7d9c>
  40a620:	mov	w23, #0xa                   	// #10
  40a624:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x206c>
  40a628:	add	x24, x24, #0xa00
  40a62c:	b	40a684 <ferror@plt+0x7c94>
  40a630:	ldr	x0, [x19, #16]
  40a634:	bl	4023d0 <strlen@plt>
  40a638:	mov	x21, x0
  40a63c:	ldr	x0, [x19, #32]
  40a640:	bl	4023d0 <strlen@plt>
  40a644:	mov	w3, w0
  40a648:	mov	w2, w21
  40a64c:	mov	x1, x25
  40a650:	mov	x0, x20
  40a654:	bl	4164c0 <ferror@plt+0x13ad0>
  40a658:	mov	x1, x20
  40a65c:	ldr	x0, [x19, #16]
  40a660:	bl	4023e0 <fputs@plt>
  40a664:	mov	x1, x20
  40a668:	ldr	x0, [x19, #32]
  40a66c:	bl	4023e0 <fputs@plt>
  40a670:	mov	x1, x20
  40a674:	mov	w0, w23
  40a678:	bl	4024a0 <fputc@plt>
  40a67c:	ldr	x19, [x19]
  40a680:	cbz	x19, 40a734 <ferror@plt+0x7d44>
  40a684:	ldr	w0, [x19, #24]
  40a688:	cmp	w0, #0x1
  40a68c:	b.eq	40a630 <ferror@plt+0x7c40>  // b.none
  40a690:	cmp	w0, #0x2
  40a694:	b.eq	40a6b8 <ferror@plt+0x7cc8>  // b.none
  40a698:	cbz	w0, 40a67c <ferror@plt+0x7c8c>
  40a69c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a6a0:	add	x2, x2, #0xa08
  40a6a4:	mov	w1, #0x0                   	// #0
  40a6a8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a6ac:	ldr	w0, [x0, #1644]
  40a6b0:	bl	402c80 <ferror@plt+0x290>
  40a6b4:	bl	402720 <abort@plt>
  40a6b8:	ldr	x0, [x19, #32]
  40a6bc:	bl	4063ec <ferror@plt+0x39fc>
  40a6c0:	mov	x21, x0
  40a6c4:	cbz	x0, 40a718 <ferror@plt+0x7d28>
  40a6c8:	ldr	x0, [x19, #16]
  40a6cc:	bl	4023d0 <strlen@plt>
  40a6d0:	mov	x22, x0
  40a6d4:	ldr	x0, [x21]
  40a6d8:	bl	4023d0 <strlen@plt>
  40a6dc:	mov	w3, w0
  40a6e0:	mov	w2, w22
  40a6e4:	mov	x1, x24
  40a6e8:	mov	x0, x20
  40a6ec:	bl	4164c0 <ferror@plt+0x13ad0>
  40a6f0:	mov	x1, x20
  40a6f4:	ldr	x0, [x19, #16]
  40a6f8:	bl	4023e0 <fputs@plt>
  40a6fc:	mov	x1, x20
  40a700:	ldr	x0, [x21]
  40a704:	bl	4023e0 <fputs@plt>
  40a708:	mov	x1, x20
  40a70c:	mov	w0, w23
  40a710:	bl	4024a0 <fputc@plt>
  40a714:	b	40a67c <ferror@plt+0x7c8c>
  40a718:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a71c:	add	x2, x2, #0x9c8
  40a720:	mov	w1, #0x0                   	// #0
  40a724:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a728:	ldr	w0, [x0, #1644]
  40a72c:	bl	402c80 <ferror@plt+0x290>
  40a730:	bl	402720 <abort@plt>
  40a734:	ldr	x0, [x28, #3504]
  40a738:	add	x2, x0, x26
  40a73c:	ldr	x0, [x0, x26]
  40a740:	cbnz	x0, 40a74c <ferror@plt+0x7d5c>
  40a744:	b	40a75c <ferror@plt+0x7d6c>
  40a748:	mov	x0, x1
  40a74c:	ldr	x1, [x0]
  40a750:	str	x19, [x0]
  40a754:	mov	x19, x0
  40a758:	cbnz	x1, 40a748 <ferror@plt+0x7d58>
  40a75c:	str	x0, [x2]
  40a760:	add	x27, x27, #0x1
  40a764:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40a768:	ldr	x0, [x0, #856]
  40a76c:	cmp	x0, x27
  40a770:	b.ls	40a794 <ferror@plt+0x7da4>  // b.plast
  40a774:	lsl	x26, x27, #3
  40a778:	ldr	x3, [x28, #3504]
  40a77c:	ldr	x0, [x3, x27, lsl #3]
  40a780:	cbz	x0, 40a60c <ferror@plt+0x7c1c>
  40a784:	mov	x2, #0x0                   	// #0
  40a788:	b	40a5fc <ferror@plt+0x7c0c>
  40a78c:	mov	x0, x19
  40a790:	b	40a75c <ferror@plt+0x7d6c>
  40a794:	ldp	x23, x24, [sp, #48]
  40a798:	ldp	x25, x26, [sp, #64]
  40a79c:	ldp	x27, x28, [sp, #80]
  40a7a0:	mov	x0, x20
  40a7a4:	bl	40f170 <ferror@plt+0xc780>
  40a7a8:	mov	x3, x20
  40a7ac:	mov	x2, #0x1b                  	// #27
  40a7b0:	mov	x1, #0x1                   	// #1
  40a7b4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40a7b8:	add	x0, x0, #0xa48
  40a7bc:	bl	402880 <fwrite@plt>
  40a7c0:	mov	x0, x20
  40a7c4:	bl	41138c <ferror@plt+0xe99c>
  40a7c8:	cbnz	w0, 40a7dc <ferror@plt+0x7dec>
  40a7cc:	ldp	x21, x22, [sp, #32]
  40a7d0:	ldp	x19, x20, [sp, #16]
  40a7d4:	ldp	x29, x30, [sp], #96
  40a7d8:	ret
  40a7dc:	bl	402970 <__errno_location@plt>
  40a7e0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a7e4:	add	x2, x2, #0xa68
  40a7e8:	ldr	w1, [x0]
  40a7ec:	mov	w0, #0x1                   	// #1
  40a7f0:	bl	402c80 <ferror@plt+0x290>
  40a7f4:	ldp	x21, x22, [sp, #32]
  40a7f8:	b	40a7d0 <ferror@plt+0x7de0>
  40a7fc:	stp	x29, x30, [sp, #-128]!
  40a800:	mov	x29, sp
  40a804:	stp	x19, x20, [sp, #16]
  40a808:	stp	x21, x22, [sp, #32]
  40a80c:	stp	x23, x24, [sp, #48]
  40a810:	stp	x25, x26, [sp, #64]
  40a814:	mov	x19, x0
  40a818:	mov	x1, #0x0                   	// #0
  40a81c:	bl	40f4f8 <ferror@plt+0xcb08>
  40a820:	mov	x23, x0
  40a824:	cbz	x0, 40a854 <ferror@plt+0x7e64>
  40a828:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a82c:	str	x19, [x0, #3440]
  40a830:	mov	x0, #0x64                  	// #100
  40a834:	bl	41607c <ferror@plt+0x1368c>
  40a838:	str	x0, [sp, #104]
  40a83c:	mov	x0, #0x64                  	// #100
  40a840:	bl	41607c <ferror@plt+0x1368c>
  40a844:	mov	x26, x0
  40a848:	adrp	x19, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a84c:	add	x19, x19, #0xd58
  40a850:	b	40a88c <ferror@plt+0x7e9c>
  40a854:	bl	402970 <__errno_location@plt>
  40a858:	mov	x3, x19
  40a85c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a860:	add	x2, x2, #0xa88
  40a864:	ldr	w1, [x0]
  40a868:	mov	w0, #0x1                   	// #1
  40a86c:	bl	402c80 <ferror@plt+0x290>
  40a870:	b	40a828 <ferror@plt+0x7e38>
  40a874:	cmn	w0, #0x1
  40a878:	b.eq	40a8bc <ferror@plt+0x7ecc>  // b.none
  40a87c:	mov	x0, x23
  40a880:	bl	402690 <getc@plt>
  40a884:	cmp	w0, #0xa
  40a888:	b.ne	40a874 <ferror@plt+0x7e84>  // b.any
  40a88c:	ldr	w0, [x19]
  40a890:	add	w0, w0, #0x1
  40a894:	str	w0, [x19]
  40a898:	mov	x0, x23
  40a89c:	bl	402690 <getc@plt>
  40a8a0:	cmp	w0, #0xa
  40a8a4:	b.eq	40a88c <ferror@plt+0x7e9c>  // b.none
  40a8a8:	cmp	w0, #0x23
  40a8ac:	b.eq	40a87c <ferror@plt+0x7e8c>  // b.none
  40a8b0:	cmp	w0, #0x56
  40a8b4:	b.eq	40a8cc <ferror@plt+0x7edc>  // b.none
  40a8b8:	b	40a8c4 <ferror@plt+0x7ed4>
  40a8bc:	mov	w0, #0xa                   	// #10
  40a8c0:	bl	40a420 <ferror@plt+0x7a30>
  40a8c4:	mov	w0, #0x56                  	// #86
  40a8c8:	bl	40a420 <ferror@plt+0x7a30>
  40a8cc:	mov	x0, x23
  40a8d0:	bl	402690 <getc@plt>
  40a8d4:	mov	w20, w0
  40a8d8:	cmp	w0, #0xa
  40a8dc:	cset	w21, eq  // eq = none
  40a8e0:	bl	4027c0 <__ctype_b_loc@plt>
  40a8e4:	mov	x24, x0
  40a8e8:	mov	w19, #0x0                   	// #0
  40a8ec:	mov	w25, #0xcccc                	// #52428
  40a8f0:	movk	w25, #0xccc, lsl #16
  40a8f4:	adrp	x22, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a8f8:	add	x22, x22, #0xd58
  40a8fc:	b	40a914 <ferror@plt+0x7f24>
  40a900:	mov	x0, x23
  40a904:	bl	402690 <getc@plt>
  40a908:	mov	w20, w0
  40a90c:	cmp	w0, #0xa
  40a910:	cset	w21, eq  // eq = none
  40a914:	ldr	x0, [x24]
  40a918:	ldrh	w0, [x0, w20, sxtw #1]
  40a91c:	ubfx	x0, x0, #11, #1
  40a920:	cmp	w19, w25
  40a924:	cset	w1, ls  // ls = plast
  40a928:	ands	w1, w0, w1
  40a92c:	str	w1, [sp, #116]
  40a930:	b.eq	40a954 <ferror@plt+0x7f64>  // b.none
  40a934:	add	w19, w19, w19, lsl #2
  40a938:	add	w19, w20, w19, lsl #1
  40a93c:	sub	w19, w19, #0x30
  40a940:	cbz	w21, 40a900 <ferror@plt+0x7f10>
  40a944:	ldr	w0, [x22]
  40a948:	add	w0, w0, #0x1
  40a94c:	str	w0, [x22]
  40a950:	b	40a900 <ferror@plt+0x7f10>
  40a954:	mov	w22, w19
  40a958:	cmp	w19, #0x0
  40a95c:	ccmp	w0, #0x0, #0x0, ge  // ge = tcont
  40a960:	b.eq	40a978 <ferror@plt+0x7f88>  // b.none
  40a964:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a968:	add	x2, x2, #0xa98
  40a96c:	mov	w1, #0x0                   	// #0
  40a970:	mov	w0, #0x1                   	// #1
  40a974:	bl	402c80 <ferror@plt+0x290>
  40a978:	cmp	w22, #0x1
  40a97c:	b.gt	40a9a0 <ferror@plt+0x7fb0>
  40a980:	cmp	w22, #0x0
  40a984:	b.le	40a9bc <ferror@plt+0x7fcc>
  40a988:	cmp	w20, #0xa
  40a98c:	b.ne	40a9d4 <ferror@plt+0x7fe4>  // b.any
  40a990:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40a994:	add	x20, x20, #0xd58
  40a998:	mov	w22, #0x1                   	// #1
  40a99c:	b	40aa00 <ferror@plt+0x8010>
  40a9a0:	mov	w3, w22
  40a9a4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a9a8:	add	x2, x2, #0xab8
  40a9ac:	mov	w1, #0x0                   	// #0
  40a9b0:	mov	w0, #0x3f                  	// #63
  40a9b4:	bl	402c80 <ferror@plt+0x290>
  40a9b8:	b	40a988 <ferror@plt+0x7f98>
  40a9bc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40a9c0:	add	x2, x2, #0xaf0
  40a9c4:	mov	w1, #0x0                   	// #0
  40a9c8:	mov	w0, #0x1                   	// #1
  40a9cc:	bl	402c80 <ferror@plt+0x290>
  40a9d0:	b	40a988 <ferror@plt+0x7f98>
  40a9d4:	mov	w0, #0xa                   	// #10
  40a9d8:	bl	40a420 <ferror@plt+0x7a30>
  40a9dc:	b	40a990 <ferror@plt+0x7fa0>
  40a9e0:	cmn	w0, #0x1
  40a9e4:	b.eq	40aa60 <ferror@plt+0x8070>  // b.none
  40a9e8:	mov	x0, x23
  40a9ec:	bl	402690 <getc@plt>
  40a9f0:	mov	w19, w0
  40a9f4:	cmp	w0, #0xa
  40a9f8:	b.ne	40a9e0 <ferror@plt+0x7ff0>  // b.any
  40a9fc:	mov	w21, w22
  40aa00:	cbz	w21, 40aa10 <ferror@plt+0x8020>
  40aa04:	ldr	w0, [x20]
  40aa08:	add	w0, w0, #0x1
  40aa0c:	str	w0, [x20]
  40aa10:	mov	x0, x23
  40aa14:	bl	402690 <getc@plt>
  40aa18:	mov	w19, w0
  40aa1c:	cmp	w0, #0xa
  40aa20:	b.eq	40a9fc <ferror@plt+0x800c>  // b.none
  40aa24:	cmp	w0, #0x23
  40aa28:	b.eq	40a9e8 <ferror@plt+0x7ff8>  // b.none
  40aa2c:	cmn	w19, #0x1
  40aa30:	b.eq	40af78 <ferror@plt+0x8588>  // b.none
  40aa34:	stp	x27, x28, [sp, #80]
  40aa38:	mov	w0, #0x64                  	// #100
  40aa3c:	str	w0, [sp, #120]
  40aa40:	str	w0, [sp, #124]
  40aa44:	mov	x27, #0x400b                	// #16395
  40aa48:	movk	x27, #0x2, lsl #16
  40aa4c:	adrp	x22, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40aa50:	add	x22, x22, #0xd58
  40aa54:	mov	w0, #0x1                   	// #1
  40aa58:	str	w0, [sp, #100]
  40aa5c:	b	40aef0 <ferror@plt+0x8500>
  40aa60:	mov	w0, #0xa                   	// #10
  40aa64:	bl	40a420 <ferror@plt+0x7a30>
  40aa68:	b	40aa2c <ferror@plt+0x803c>
  40aa6c:	mov	w25, #0x1                   	// #1
  40aa70:	b	40af48 <ferror@plt+0x8558>
  40aa74:	mov	x0, x23
  40aa78:	bl	402690 <getc@plt>
  40aa7c:	mov	w20, w0
  40aa80:	cmp	w0, #0xa
  40aa84:	cset	w25, eq  // eq = none
  40aa88:	ldr	x0, [x24]
  40aa8c:	ldrh	w0, [x0, w20, sxtw #1]
  40aa90:	tbz	w0, #11, 40ab64 <ferror@plt+0x8174>
  40aa94:	mov	w21, #0x0                   	// #0
  40aa98:	mov	w28, #0xcccc                	// #52428
  40aa9c:	movk	w28, #0xccc, lsl #16
  40aaa0:	b	40aad0 <ferror@plt+0x80e0>
  40aaa4:	mov	x0, x23
  40aaa8:	bl	402690 <getc@plt>
  40aaac:	mov	w20, w0
  40aab0:	cmp	w0, #0xa
  40aab4:	cset	w25, eq  // eq = none
  40aab8:	ldr	x0, [x24]
  40aabc:	ldrh	w0, [x0, w20, sxtw #1]
  40aac0:	ubfx	x0, x0, #11, #1
  40aac4:	cmp	w0, #0x0
  40aac8:	ccmp	w21, w28, #0x2, ne  // ne = any
  40aacc:	b.hi	40aaf0 <ferror@plt+0x8100>  // b.pmore
  40aad0:	add	w21, w21, w21, lsl #2
  40aad4:	add	w20, w20, w21, lsl #1
  40aad8:	sub	w21, w20, #0x30
  40aadc:	cbz	w25, 40aaa4 <ferror@plt+0x80b4>
  40aae0:	ldr	w0, [x22]
  40aae4:	add	w0, w0, #0x1
  40aae8:	str	w0, [x22]
  40aaec:	b	40aaa4 <ferror@plt+0x80b4>
  40aaf0:	cmp	w0, #0x0
  40aaf4:	mov	w0, #0x80000000            	// #-2147483648
  40aaf8:	ccmp	w21, w0, #0x2, eq  // eq = none
  40aafc:	b.ls	40ab14 <ferror@plt+0x8124>  // b.plast
  40ab00:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40ab04:	add	x2, x2, #0xa98
  40ab08:	mov	w1, #0x0                   	// #0
  40ab0c:	mov	w0, #0x1                   	// #1
  40ab10:	bl	402c80 <ferror@plt+0x290>
  40ab14:	neg	w0, w21
  40ab18:	str	w0, [sp, #112]
  40ab1c:	cmp	w20, #0x2c
  40ab20:	b.ne	40abe0 <ferror@plt+0x81f0>  // b.any
  40ab24:	cbz	w25, 40ab34 <ferror@plt+0x8144>
  40ab28:	ldr	w0, [x22]
  40ab2c:	add	w0, w0, #0x1
  40ab30:	str	w0, [x22]
  40ab34:	mov	x0, x23
  40ab38:	bl	402690 <getc@plt>
  40ab3c:	mov	w21, w0
  40ab40:	cmp	w0, #0xa
  40ab44:	cset	w25, eq  // eq = none
  40ab48:	ldr	x0, [x24]
  40ab4c:	ldrh	w0, [x0, w21, sxtw #1]
  40ab50:	tbz	w0, #11, 40acac <ferror@plt+0x82bc>
  40ab54:	mov	w20, #0x0                   	// #0
  40ab58:	mov	w28, #0xcccc                	// #52428
  40ab5c:	movk	w28, #0xccc, lsl #16
  40ab60:	b	40ac18 <ferror@plt+0x8228>
  40ab64:	mov	w21, #0x0                   	// #0
  40ab68:	b	40ab14 <ferror@plt+0x8124>
  40ab6c:	mov	x0, x23
  40ab70:	bl	402690 <getc@plt>
  40ab74:	mov	w20, w0
  40ab78:	cmp	w0, #0xa
  40ab7c:	cset	w25, eq  // eq = none
  40ab80:	ldr	x0, [x24]
  40ab84:	ldrh	w0, [x0, w20, sxtw #1]
  40ab88:	ubfx	x0, x0, #11, #1
  40ab8c:	cmp	w0, #0x0
  40ab90:	ccmp	w21, w28, #0x2, ne  // ne = any
  40ab94:	b.hi	40abb8 <ferror@plt+0x81c8>  // b.pmore
  40ab98:	add	w21, w21, w21, lsl #2
  40ab9c:	add	w20, w20, w21, lsl #1
  40aba0:	sub	w21, w20, #0x30
  40aba4:	cbz	w25, 40ab6c <ferror@plt+0x817c>
  40aba8:	ldr	w0, [x22]
  40abac:	add	w0, w0, #0x1
  40abb0:	str	w0, [x22]
  40abb4:	b	40ab6c <ferror@plt+0x817c>
  40abb8:	str	w21, [sp, #112]
  40abbc:	cmp	w21, #0x0
  40abc0:	ccmp	w0, #0x0, #0x0, ge  // ge = tcont
  40abc4:	b.eq	40ab1c <ferror@plt+0x812c>  // b.none
  40abc8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40abcc:	add	x2, x2, #0xa98
  40abd0:	mov	w1, #0x0                   	// #0
  40abd4:	mov	w0, #0x1                   	// #1
  40abd8:	bl	402c80 <ferror@plt+0x290>
  40abdc:	b	40ab1c <ferror@plt+0x812c>
  40abe0:	mov	w0, #0x2c                  	// #44
  40abe4:	bl	40a420 <ferror@plt+0x7a30>
  40abe8:	b	40ab24 <ferror@plt+0x8134>
  40abec:	mov	x0, x23
  40abf0:	bl	402690 <getc@plt>
  40abf4:	mov	w21, w0
  40abf8:	cmp	w0, #0xa
  40abfc:	cset	w25, eq  // eq = none
  40ac00:	ldr	x0, [x24]
  40ac04:	ldrh	w0, [x0, w21, sxtw #1]
  40ac08:	ubfx	x0, x0, #11, #1
  40ac0c:	cmp	w0, #0x0
  40ac10:	ccmp	w20, w28, #0x2, ne  // ne = any
  40ac14:	b.hi	40ac38 <ferror@plt+0x8248>  // b.pmore
  40ac18:	add	w20, w20, w20, lsl #2
  40ac1c:	add	w20, w21, w20, lsl #1
  40ac20:	sub	w20, w20, #0x30
  40ac24:	cbz	w25, 40abec <ferror@plt+0x81fc>
  40ac28:	ldr	w0, [x22]
  40ac2c:	add	w0, w0, #0x1
  40ac30:	str	w0, [x22]
  40ac34:	b	40abec <ferror@plt+0x81fc>
  40ac38:	mov	w28, w20
  40ac3c:	cmp	w20, #0x0
  40ac40:	ccmp	w0, #0x0, #0x0, ge  // ge = tcont
  40ac44:	b.eq	40ac5c <ferror@plt+0x826c>  // b.none
  40ac48:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40ac4c:	add	x2, x2, #0xa98
  40ac50:	mov	w1, #0x0                   	// #0
  40ac54:	mov	w0, #0x1                   	// #1
  40ac58:	bl	402c80 <ferror@plt+0x290>
  40ac5c:	cmp	w21, #0xa
  40ac60:	b.ne	40acb4 <ferror@plt+0x82c4>  // b.any
  40ac64:	cmp	w19, #0x44
  40ac68:	b.ne	40acc0 <ferror@plt+0x82d0>  // b.any
  40ac6c:	ldr	w0, [sp, #120]
  40ac70:	cmp	w0, w28
  40ac74:	b.le	40ad70 <ferror@plt+0x8380>
  40ac78:	cmp	w28, #0x0
  40ac7c:	b.le	40ac98 <ferror@plt+0x82a8>
  40ac80:	mov	x3, x23
  40ac84:	mov	x2, #0x1                   	// #1
  40ac88:	sxtw	x1, w28
  40ac8c:	mov	x0, x26
  40ac90:	bl	402800 <fread@plt>
  40ac94:	cbz	x0, 40ad90 <ferror@plt+0x83a0>
  40ac98:	strb	wzr, [x26, w28, sxtw]
  40ac9c:	mov	x0, x26
  40aca0:	sxtw	x21, w28
  40aca4:	mov	w20, #0xa                   	// #10
  40aca8:	b	40adb8 <ferror@plt+0x83c8>
  40acac:	mov	w28, #0x0                   	// #0
  40acb0:	b	40ac5c <ferror@plt+0x826c>
  40acb4:	mov	w0, #0xa                   	// #10
  40acb8:	bl	40a420 <ferror@plt+0x7a30>
  40acbc:	b	40ac64 <ferror@plt+0x8274>
  40acc0:	ldr	w0, [sp, #112]
  40acc4:	ldr	w1, [sp, #124]
  40acc8:	cmp	w0, w1
  40accc:	b.ge	40ad34 <ferror@plt+0x8344>  // b.tcont
  40acd0:	ldr	w0, [sp, #112]
  40acd4:	cmp	w0, #0x0
  40acd8:	b.le	40acf4 <ferror@plt+0x8304>
  40acdc:	mov	x3, x23
  40ace0:	mov	x2, #0x1                   	// #1
  40ace4:	sxtw	x1, w0
  40ace8:	ldr	x0, [sp, #104]
  40acec:	bl	402800 <fread@plt>
  40acf0:	cbz	x0, 40ad58 <ferror@plt+0x8368>
  40acf4:	ldr	x0, [sp, #104]
  40acf8:	ldr	w1, [sp, #112]
  40acfc:	strb	wzr, [x0, w1, sxtw]
  40ad00:	sxtw	x20, w1
  40ad04:	mov	w21, #0xa                   	// #10
  40ad08:	ldr	x1, [sp, #104]
  40ad0c:	sub	x2, x0, x1
  40ad10:	sub	x2, x20, x2
  40ad14:	mov	w1, w21
  40ad18:	bl	4028d0 <memchr@plt>
  40ad1c:	cbz	x0, 40ac6c <ferror@plt+0x827c>
  40ad20:	ldr	w1, [x22]
  40ad24:	add	w1, w1, #0x1
  40ad28:	str	w1, [x22]
  40ad2c:	add	x0, x0, #0x1
  40ad30:	b	40ad08 <ferror@plt+0x8318>
  40ad34:	ldr	x0, [sp, #104]
  40ad38:	bl	402810 <free@plt>
  40ad3c:	ldr	w0, [sp, #112]
  40ad40:	add	w0, w0, #0x1
  40ad44:	str	w0, [sp, #124]
  40ad48:	sxtw	x0, w0
  40ad4c:	bl	41607c <ferror@plt+0x1368c>
  40ad50:	str	x0, [sp, #104]
  40ad54:	b	40acd0 <ferror@plt+0x82e0>
  40ad58:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40ad5c:	add	x2, x2, #0xb40
  40ad60:	mov	w1, #0x0                   	// #0
  40ad64:	mov	w0, #0x1                   	// #1
  40ad68:	bl	402c80 <ferror@plt+0x290>
  40ad6c:	b	40acf4 <ferror@plt+0x8304>
  40ad70:	mov	x0, x26
  40ad74:	bl	402810 <free@plt>
  40ad78:	add	w0, w28, #0x1
  40ad7c:	str	w0, [sp, #120]
  40ad80:	sxtw	x0, w0
  40ad84:	bl	41607c <ferror@plt+0x1368c>
  40ad88:	mov	x26, x0
  40ad8c:	b	40ac78 <ferror@plt+0x8288>
  40ad90:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40ad94:	add	x2, x2, #0xb40
  40ad98:	mov	w1, #0x0                   	// #0
  40ad9c:	mov	w0, #0x1                   	// #1
  40ada0:	bl	402c80 <ferror@plt+0x290>
  40ada4:	b	40ac98 <ferror@plt+0x82a8>
  40ada8:	ldr	w1, [x22]
  40adac:	add	w1, w1, #0x1
  40adb0:	str	w1, [x22]
  40adb4:	add	x0, x0, #0x1
  40adb8:	sub	x2, x0, x26
  40adbc:	sub	x2, x21, x2
  40adc0:	mov	w1, w20
  40adc4:	bl	4028d0 <memchr@plt>
  40adc8:	cbnz	x0, 40ada8 <ferror@plt+0x83b8>
  40adcc:	cbz	w25, 40addc <ferror@plt+0x83ec>
  40add0:	ldr	w0, [x22]
  40add4:	add	w0, w0, #0x1
  40add8:	str	w0, [x22]
  40addc:	mov	x0, x23
  40ade0:	bl	402690 <getc@plt>
  40ade4:	cmp	w0, #0xa
  40ade8:	b.eq	40ae28 <ferror@plt+0x8438>  // b.none
  40adec:	mov	w0, #0xa                   	// #10
  40adf0:	bl	40a420 <ferror@plt+0x7a30>
  40adf4:	ldr	w20, [sp, #116]
  40adf8:	cmp	w19, #0x46
  40adfc:	b.eq	40ae70 <ferror@plt+0x8480>  // b.none
  40ae00:	b.le	40ae30 <ferror@plt+0x8440>
  40ae04:	cmp	w19, #0x51
  40ae08:	b.eq	40ae8c <ferror@plt+0x849c>  // b.none
  40ae0c:	cmp	w19, #0x54
  40ae10:	b.ne	40aebc <ferror@plt+0x84cc>  // b.any
  40ae14:	mov	w2, #0x3                   	// #3
  40ae18:	mov	x1, x26
  40ae1c:	ldr	x0, [sp, #104]
  40ae20:	bl	406958 <ferror@plt+0x3f68>
  40ae24:	b	40aebc <ferror@plt+0x84cc>
  40ae28:	mov	w20, #0x1                   	// #1
  40ae2c:	b	40adf8 <ferror@plt+0x8408>
  40ae30:	cmp	w19, #0x43
  40ae34:	b.eq	40ae60 <ferror@plt+0x8470>  // b.none
  40ae38:	cmp	w19, #0x44
  40ae3c:	b.ne	40aebc <ferror@plt+0x84cc>  // b.any
  40ae40:	ldr	w0, [sp, #112]
  40ae44:	bl	40e998 <ferror@plt+0xbfa8>
  40ae48:	cmp	w28, #0x0
  40ae4c:	b.le	40aebc <ferror@plt+0x84cc>
  40ae50:	mov	w1, w28
  40ae54:	mov	x0, x26
  40ae58:	bl	40dff4 <ferror@plt+0xb604>
  40ae5c:	b	40aebc <ferror@plt+0x84cc>
  40ae60:	mov	x1, x26
  40ae64:	ldr	x0, [sp, #104]
  40ae68:	bl	40c0d8 <ferror@plt+0x96e8>
  40ae6c:	b	40aebc <ferror@plt+0x84cc>
  40ae70:	mov	x0, x26
  40ae74:	bl	406698 <ferror@plt+0x3ca8>
  40ae78:	mov	w2, #0x3                   	// #3
  40ae7c:	mov	x1, x0
  40ae80:	ldr	x0, [sp, #104]
  40ae84:	bl	406834 <ferror@plt+0x3e44>
  40ae88:	b	40aebc <ferror@plt+0x84cc>
  40ae8c:	mov	x1, x26
  40ae90:	ldr	x0, [sp, #104]
  40ae94:	bl	40c024 <ferror@plt+0x9634>
  40ae98:	b	40aebc <ferror@plt+0x84cc>
  40ae9c:	cmn	w0, #0x1
  40aea0:	b.eq	40af68 <ferror@plt+0x8578>  // b.none
  40aea4:	mov	x0, x23
  40aea8:	bl	402690 <getc@plt>
  40aeac:	mov	w19, w0
  40aeb0:	cmp	w0, #0xa
  40aeb4:	b.ne	40ae9c <ferror@plt+0x84ac>  // b.any
  40aeb8:	ldr	w20, [sp, #100]
  40aebc:	cbz	w20, 40aecc <ferror@plt+0x84dc>
  40aec0:	ldr	w0, [x22]
  40aec4:	add	w0, w0, #0x1
  40aec8:	str	w0, [x22]
  40aecc:	mov	x0, x23
  40aed0:	bl	402690 <getc@plt>
  40aed4:	mov	w19, w0
  40aed8:	cmp	w0, #0xa
  40aedc:	b.eq	40aeb8 <ferror@plt+0x84c8>  // b.none
  40aee0:	cmp	w0, #0x23
  40aee4:	b.eq	40aea4 <ferror@plt+0x84b4>  // b.none
  40aee8:	cmn	w19, #0x1
  40aeec:	b.eq	40af74 <ferror@plt+0x8584>  // b.none
  40aef0:	sub	w1, w19, #0x43
  40aef4:	cmp	w1, #0x11
  40aef8:	b.hi	40af0c <ferror@plt+0x851c>  // b.pmore
  40aefc:	mov	x0, #0x1                   	// #1
  40af00:	lsl	x0, x0, x1
  40af04:	tst	x0, x27
  40af08:	b.ne	40af20 <ferror@plt+0x8530>  // b.any
  40af0c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40af10:	add	x2, x2, #0xb28
  40af14:	mov	w1, #0x0                   	// #0
  40af18:	mov	w0, #0x1                   	// #1
  40af1c:	bl	402c80 <ferror@plt+0x290>
  40af20:	mov	x0, x23
  40af24:	bl	402690 <getc@plt>
  40af28:	mov	w20, w0
  40af2c:	cmp	w0, #0xa
  40af30:	b.eq	40aa6c <ferror@plt+0x807c>  // b.none
  40af34:	cmp	w19, #0x44
  40af38:	cset	w25, eq  // eq = none
  40af3c:	cmp	w0, #0x2d
  40af40:	csel	w25, w25, wzr, eq  // eq = none
  40af44:	cbnz	w25, 40aa74 <ferror@plt+0x8084>
  40af48:	ldr	x0, [x24]
  40af4c:	ldrh	w0, [x0, w20, sxtw #1]
  40af50:	mov	w21, #0x0                   	// #0
  40af54:	mov	w28, #0xcccc                	// #52428
  40af58:	movk	w28, #0xccc, lsl #16
  40af5c:	tbnz	w0, #11, 40ab98 <ferror@plt+0x81a8>
  40af60:	str	wzr, [sp, #112]
  40af64:	b	40ab1c <ferror@plt+0x812c>
  40af68:	mov	w0, #0xa                   	// #10
  40af6c:	bl	40a420 <ferror@plt+0x7a30>
  40af70:	b	40aee8 <ferror@plt+0x84f8>
  40af74:	ldp	x27, x28, [sp, #80]
  40af78:	ldr	x0, [sp, #104]
  40af7c:	bl	402810 <free@plt>
  40af80:	mov	x0, x26
  40af84:	bl	402810 <free@plt>
  40af88:	mov	x0, x23
  40af8c:	bl	41138c <ferror@plt+0xe99c>
  40af90:	cbnz	w0, 40afbc <ferror@plt+0x85cc>
  40af94:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40af98:	str	xzr, [x0, #3440]
  40af9c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40afa0:	str	wzr, [x0, #3416]
  40afa4:	ldp	x19, x20, [sp, #16]
  40afa8:	ldp	x21, x22, [sp, #32]
  40afac:	ldp	x23, x24, [sp, #48]
  40afb0:	ldp	x25, x26, [sp, #64]
  40afb4:	ldp	x29, x30, [sp], #128
  40afb8:	ret
  40afbc:	bl	402970 <__errno_location@plt>
  40afc0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40afc4:	add	x2, x2, #0xb60
  40afc8:	ldr	w1, [x0]
  40afcc:	mov	w0, #0x1                   	// #1
  40afd0:	bl	402c80 <ferror@plt+0x290>
  40afd4:	b	40af94 <ferror@plt+0x85a4>
  40afd8:	stp	x29, x30, [sp, #-32]!
  40afdc:	mov	x29, sp
  40afe0:	stp	x19, x20, [sp, #16]
  40afe4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40afe8:	ldr	x0, [x0, #2144]
  40afec:	ldr	x19, [x0]
  40aff0:	ldr	w0, [x0, #8]
  40aff4:	cmp	w0, #0x1
  40aff8:	b.eq	40b020 <ferror@plt+0x8630>  // b.none
  40affc:	tst	w0, #0xfffffffd
  40b000:	b.eq	40b0a8 <ferror@plt+0x86b8>  // b.none
  40b004:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40b008:	add	x2, x2, #0xbd8
  40b00c:	mov	w1, #0x0                   	// #0
  40b010:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b014:	ldr	w0, [x0, #1644]
  40b018:	bl	402c80 <ferror@plt+0x290>
  40b01c:	bl	402720 <abort@plt>
  40b020:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b024:	ldr	w0, [x0, #1660]
  40b028:	tbz	w0, #8, 40b068 <ferror@plt+0x8678>
  40b02c:	cbz	x19, 40b0dc <ferror@plt+0x86ec>
  40b030:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b034:	ldr	x0, [x0, #2032]
  40b038:	cbz	x0, 40b068 <ferror@plt+0x8678>
  40b03c:	bl	4085ac <ferror@plt+0x5bbc>
  40b040:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b044:	ldr	w3, [x19, #24]
  40b048:	ldr	x2, [x19, #16]
  40b04c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40b050:	add	x1, x1, #0xb80
  40b054:	ldr	x0, [x20, #2032]
  40b058:	bl	4164c0 <ferror@plt+0x13ad0>
  40b05c:	ldr	x1, [x20, #2032]
  40b060:	mov	w0, #0xa                   	// #10
  40b064:	bl	402470 <putc@plt>
  40b068:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b06c:	ldr	x20, [x0, #2144]
  40b070:	ldr	x0, [x20, #32]
  40b074:	bl	4029f0 <ferror@plt>
  40b078:	cbnz	w0, 40b110 <ferror@plt+0x8720>
  40b07c:	ldrb	w0, [x20, #40]
  40b080:	tbnz	w0, #1, 40b154 <ferror@plt+0x8764>
  40b084:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b088:	add	x1, x0, #0x860
  40b08c:	ldr	x0, [x0, #2144]
  40b090:	ldrb	w0, [x0, #40]
  40b094:	ubfx	x0, x0, #2, #1
  40b098:	strb	w0, [x1, #8]
  40b09c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b0a0:	mov	w1, #0xffffffff            	// #-1
  40b0a4:	str	w1, [x0, #3496]
  40b0a8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b0ac:	add	x0, x1, #0x860
  40b0b0:	ldr	x0, [x0, #16]
  40b0b4:	ldr	x1, [x1, #2144]
  40b0b8:	ldr	x2, [x0, #8]
  40b0bc:	cmp	x2, x1
  40b0c0:	b.cs	40b194 <ferror@plt+0x87a4>  // b.hs, b.nlast
  40b0c4:	ldr	x2, [x0, #32]
  40b0c8:	cmp	x2, x1
  40b0cc:	b.ls	40b194 <ferror@plt+0x87a4>  // b.plast
  40b0d0:	str	x1, [x0, #16]
  40b0d4:	str	x1, [x0, #24]
  40b0d8:	b	40b198 <ferror@plt+0x87a8>
  40b0dc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b0e0:	ldr	x0, [x0, #2032]
  40b0e4:	cbz	x0, 40b068 <ferror@plt+0x8678>
  40b0e8:	bl	4085ac <ferror@plt+0x5bbc>
  40b0ec:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b0f0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40b0f4:	add	x1, x1, #0xba0
  40b0f8:	ldr	x0, [x20, #2032]
  40b0fc:	bl	4164c0 <ferror@plt+0x13ad0>
  40b100:	ldr	x1, [x20, #2032]
  40b104:	mov	w0, #0xa                   	// #10
  40b108:	bl	402470 <putc@plt>
  40b10c:	b	40b068 <ferror@plt+0x8678>
  40b110:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40b114:	add	x2, x2, #0xbb0
  40b118:	mov	w1, #0x0                   	// #0
  40b11c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b120:	ldr	w0, [x0, #1644]
  40b124:	bl	402c80 <ferror@plt+0x290>
  40b128:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b12c:	ldr	x0, [x0, #2144]
  40b130:	ldrb	w1, [x0, #40]
  40b134:	tbnz	w1, #1, 40b148 <ferror@plt+0x8758>
  40b138:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b13c:	mov	w1, #0x1                   	// #1
  40b140:	str	w1, [x0, #3408]
  40b144:	b	40b084 <ferror@plt+0x8694>
  40b148:	ldr	x0, [x0, #32]
  40b14c:	bl	4167ec <ferror@plt+0x13dfc>
  40b150:	b	40b138 <ferror@plt+0x8748>
  40b154:	ldr	x0, [x20, #32]
  40b158:	bl	4167ec <ferror@plt+0x13dfc>
  40b15c:	cmn	w0, #0x1
  40b160:	b.ne	40b084 <ferror@plt+0x8694>  // b.any
  40b164:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b168:	ldr	w20, [x0, #1644]
  40b16c:	bl	402970 <__errno_location@plt>
  40b170:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40b174:	add	x2, x2, #0xbc0
  40b178:	ldr	w1, [x0]
  40b17c:	mov	w0, w20
  40b180:	bl	402c80 <ferror@plt+0x290>
  40b184:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b188:	mov	w1, #0x1                   	// #1
  40b18c:	str	w1, [x0, #3408]
  40b190:	b	40b084 <ferror@plt+0x8694>
  40b194:	bl	416f14 <_obstack_free@@Base>
  40b198:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b19c:	add	x0, x1, #0x860
  40b1a0:	str	xzr, [x0, #24]
  40b1a4:	str	x19, [x1, #2144]
  40b1a8:	mov	w1, #0x1                   	// #1
  40b1ac:	strb	w1, [x0, #32]
  40b1b0:	ldp	x19, x20, [sp, #16]
  40b1b4:	ldp	x29, x30, [sp], #32
  40b1b8:	ret
  40b1bc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b1c0:	ldr	x0, [x0, #2144]
  40b1c4:	cbz	x0, 40b2e4 <ferror@plt+0x88f4>
  40b1c8:	stp	x29, x30, [sp, #-48]!
  40b1cc:	mov	x29, sp
  40b1d0:	stp	x19, x20, [sp, #16]
  40b1d4:	str	x21, [sp, #32]
  40b1d8:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b1dc:	add	x19, x19, #0x860
  40b1e0:	adrp	x21, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b1e4:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b1e8:	add	x20, x20, #0xd58
  40b1ec:	b	40b230 <ferror@plt+0x8840>
  40b1f0:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b1f4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  40b1f8:	add	x0, x0, #0x6c0
  40b1fc:	str	x0, [x1, #3440]
  40b200:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b204:	str	wzr, [x0, #3416]
  40b208:	mov	w0, #0x100                 	// #256
  40b20c:	b	40b2d4 <ferror@plt+0x88e4>
  40b210:	ldr	x1, [x0, #32]
  40b214:	add	x2, x1, #0x1
  40b218:	str	x2, [x0, #32]
  40b21c:	ldrb	w0, [x1]
  40b220:	cbnz	w0, 40b2d4 <ferror@plt+0x88e4>
  40b224:	bl	40afd8 <ferror@plt+0x85e8>
  40b228:	ldr	x0, [x19]
  40b22c:	cbz	x0, 40b1f0 <ferror@plt+0x8800>
  40b230:	ldrb	w1, [x19, #32]
  40b234:	cbz	w1, 40b24c <ferror@plt+0x885c>
  40b238:	ldr	x1, [x0, #16]
  40b23c:	str	x1, [x21, #3440]
  40b240:	ldr	w1, [x0, #24]
  40b244:	str	w1, [x20]
  40b248:	strb	wzr, [x19, #32]
  40b24c:	ldr	w1, [x0, #8]
  40b250:	cmp	w1, #0x1
  40b254:	b.eq	40b280 <ferror@plt+0x8890>  // b.none
  40b258:	cmp	w1, #0x2
  40b25c:	b.eq	40b2cc <ferror@plt+0x88dc>  // b.none
  40b260:	cbz	w1, 40b210 <ferror@plt+0x8820>
  40b264:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40b268:	add	x2, x2, #0xc10
  40b26c:	mov	w1, #0x0                   	// #0
  40b270:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b274:	ldr	w0, [x0, #1644]
  40b278:	bl	402c80 <ferror@plt+0x290>
  40b27c:	bl	402720 <abort@plt>
  40b280:	ldrb	w1, [x19, #8]
  40b284:	cbz	w1, 40b29c <ferror@plt+0x88ac>
  40b288:	strb	wzr, [x19, #8]
  40b28c:	ldr	w1, [x0, #24]
  40b290:	add	w1, w1, #0x1
  40b294:	str	w1, [x0, #24]
  40b298:	str	w1, [x20]
  40b29c:	ldrb	w1, [x0, #40]
  40b2a0:	tbnz	w1, #0, 40b224 <ferror@plt+0x8834>
  40b2a4:	ldr	x0, [x0, #32]
  40b2a8:	bl	402690 <getc@plt>
  40b2ac:	cmn	w0, #0x1
  40b2b0:	b.eq	40b224 <ferror@plt+0x8834>  // b.none
  40b2b4:	cmp	w0, #0xa
  40b2b8:	b.ne	40b2d4 <ferror@plt+0x88e4>  // b.any
  40b2bc:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b2c0:	mov	w2, #0x1                   	// #1
  40b2c4:	strb	w2, [x1, #2152]
  40b2c8:	b	40b2d4 <ferror@plt+0x88e4>
  40b2cc:	bl	40afd8 <ferror@plt+0x85e8>
  40b2d0:	mov	w0, #0x101                 	// #257
  40b2d4:	ldp	x19, x20, [sp, #16]
  40b2d8:	ldr	x21, [sp, #32]
  40b2dc:	ldp	x29, x30, [sp], #48
  40b2e0:	ret
  40b2e4:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b2e8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  40b2ec:	add	x0, x0, #0x6c0
  40b2f0:	str	x0, [x1, #3440]
  40b2f4:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b2f8:	str	wzr, [x0, #3416]
  40b2fc:	mov	w0, #0x100                 	// #256
  40b300:	ret
  40b304:	stp	x29, x30, [sp, #-32]!
  40b308:	mov	x29, sp
  40b30c:	stp	x19, x20, [sp, #16]
  40b310:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b314:	ldr	x19, [x0, #2144]
  40b318:	cbnz	x19, 40b338 <ferror@plt+0x8948>
  40b31c:	mov	w20, #0x100                 	// #256
  40b320:	b	40b3a8 <ferror@plt+0x89b8>
  40b324:	ldr	x0, [x19, #32]
  40b328:	ldrb	w20, [x0]
  40b32c:	cbnz	w20, 40b3a8 <ferror@plt+0x89b8>
  40b330:	ldr	x19, [x19]
  40b334:	cbz	x19, 40b39c <ferror@plt+0x89ac>
  40b338:	ldr	w0, [x19, #8]
  40b33c:	cmp	w0, #0x1
  40b340:	b.eq	40b36c <ferror@plt+0x897c>  // b.none
  40b344:	cmp	w0, #0x2
  40b348:	b.eq	40b3a4 <ferror@plt+0x89b4>  // b.none
  40b34c:	cbz	w0, 40b324 <ferror@plt+0x8934>
  40b350:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40b354:	add	x2, x2, #0xc48
  40b358:	mov	w1, #0x0                   	// #0
  40b35c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b360:	ldr	w0, [x0, #1644]
  40b364:	bl	402c80 <ferror@plt+0x290>
  40b368:	bl	402720 <abort@plt>
  40b36c:	ldr	x0, [x19, #32]
  40b370:	bl	402690 <getc@plt>
  40b374:	mov	w20, w0
  40b378:	cmn	w0, #0x1
  40b37c:	b.ne	40b390 <ferror@plt+0x89a0>  // b.any
  40b380:	ldrb	w0, [x19, #40]
  40b384:	orr	w0, w0, #0x1
  40b388:	strb	w0, [x19, #40]
  40b38c:	b	40b330 <ferror@plt+0x8940>
  40b390:	ldr	x1, [x19, #32]
  40b394:	bl	402820 <ungetc@plt>
  40b398:	b	40b3a8 <ferror@plt+0x89b8>
  40b39c:	mov	w20, #0x100                 	// #256
  40b3a0:	b	40b3a8 <ferror@plt+0x89b8>
  40b3a4:	mov	w20, #0x101                 	// #257
  40b3a8:	mov	w0, w20
  40b3ac:	ldp	x19, x20, [sp, #16]
  40b3b0:	ldp	x29, x30, [sp], #32
  40b3b4:	ret
  40b3b8:	stp	x29, x30, [sp, #-64]!
  40b3bc:	mov	x29, sp
  40b3c0:	stp	x19, x20, [sp, #16]
  40b3c4:	stp	x21, x22, [sp, #32]
  40b3c8:	stp	x23, x24, [sp, #48]
  40b3cc:	mov	x21, x0
  40b3d0:	mov	x23, x1
  40b3d4:	and	w22, w2, #0xff
  40b3d8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b3dc:	ldr	x1, [x0, #2168]
  40b3e0:	cbz	x1, 40b41c <ferror@plt+0x8a2c>
  40b3e4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b3e8:	ldr	x0, [x0, #2160]
  40b3ec:	ldr	x2, [x0, #8]
  40b3f0:	cmp	x1, x2
  40b3f4:	b.ls	40b410 <ferror@plt+0x8a20>  // b.plast
  40b3f8:	ldr	x2, [x0, #32]
  40b3fc:	cmp	x1, x2
  40b400:	b.cs	40b410 <ferror@plt+0x8a20>  // b.hs, b.nlast
  40b404:	str	x1, [x0, #16]
  40b408:	str	x1, [x0, #24]
  40b40c:	b	40b414 <ferror@plt+0x8a24>
  40b410:	bl	416f14 <_obstack_free@@Base>
  40b414:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b418:	str	xzr, [x0, #2168]
  40b41c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b420:	ldr	w0, [x0, #1660]
  40b424:	tbz	w0, #8, 40b45c <ferror@plt+0x8a6c>
  40b428:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b42c:	ldr	x0, [x0, #2032]
  40b430:	cbz	x0, 40b45c <ferror@plt+0x8a6c>
  40b434:	bl	4085ac <ferror@plt+0x5bbc>
  40b438:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b43c:	mov	x2, x23
  40b440:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40b444:	add	x1, x1, #0xc80
  40b448:	ldr	x0, [x19, #2032]
  40b44c:	bl	4164c0 <ferror@plt+0x13ad0>
  40b450:	ldr	x1, [x19, #2032]
  40b454:	mov	w0, #0xa                   	// #10
  40b458:	bl	402470 <putc@plt>
  40b45c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b460:	ldr	x19, [x0, #2160]
  40b464:	ldr	x0, [x19, #32]
  40b468:	ldr	x1, [x19, #24]
  40b46c:	sub	x0, x0, x1
  40b470:	cmp	x0, #0x2f
  40b474:	b.ls	40b5d4 <ferror@plt+0x8be4>  // b.plast
  40b478:	ldr	x1, [x19, #24]
  40b47c:	add	x1, x1, #0x30
  40b480:	ldr	x20, [x19, #16]
  40b484:	cmp	x1, x20
  40b488:	b.eq	40b5e4 <ferror@plt+0x8bf4>  // b.none
  40b48c:	ldr	x0, [x19, #48]
  40b490:	add	x1, x1, x0
  40b494:	bic	x0, x1, x0
  40b498:	ldr	x1, [x19, #8]
  40b49c:	ldr	x2, [x19, #32]
  40b4a0:	sub	x3, x0, x1
  40b4a4:	sub	x1, x2, x1
  40b4a8:	cmp	x3, x1
  40b4ac:	csel	x0, x0, x2, ls  // ls = plast
  40b4b0:	str	x0, [x19, #24]
  40b4b4:	str	x0, [x19, #16]
  40b4b8:	mov	w0, #0x1                   	// #1
  40b4bc:	str	w0, [x20, #8]
  40b4c0:	mov	x0, x23
  40b4c4:	bl	4023d0 <strlen@plt>
  40b4c8:	mov	x24, x0
  40b4cc:	add	x1, x0, #0x1
  40b4d0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b4d4:	add	x0, x0, #0x860
  40b4d8:	ldr	x2, [x0, #72]
  40b4dc:	add	x0, x0, #0x28
  40b4e0:	ldr	x0, [x0, #24]
  40b4e4:	sub	x0, x2, x0
  40b4e8:	cmp	x1, x0
  40b4ec:	b.hi	40b5f4 <ferror@plt+0x8c04>  // b.pmore
  40b4f0:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b4f4:	add	x19, x19, #0x860
  40b4f8:	mov	x2, x24
  40b4fc:	mov	x1, x23
  40b500:	ldr	x0, [x19, #64]
  40b504:	bl	402390 <memcpy@plt>
  40b508:	ldr	x1, [x19, #64]
  40b50c:	add	x0, x1, x24
  40b510:	add	x0, x0, #0x1
  40b514:	str	x0, [x19, #64]
  40b518:	strb	wzr, [x1, x24]
  40b51c:	ldr	x3, [x19, #56]
  40b520:	ldr	x2, [x19, #64]
  40b524:	add	x19, x19, #0x28
  40b528:	cmp	x2, x3
  40b52c:	b.eq	40b608 <ferror@plt+0x8c18>  // b.none
  40b530:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b534:	add	x1, x1, #0x860
  40b538:	ldr	x0, [x1, #88]
  40b53c:	add	x2, x2, x0
  40b540:	bic	x0, x2, x0
  40b544:	str	x0, [x1, #64]
  40b548:	ldr	x2, [x1, #48]
  40b54c:	add	x1, x1, #0x28
  40b550:	ldr	x1, [x1, #32]
  40b554:	sub	x0, x0, x2
  40b558:	sub	x2, x1, x2
  40b55c:	cmp	x0, x2
  40b560:	b.ls	40b56c <ferror@plt+0x8b7c>  // b.plast
  40b564:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b568:	str	x1, [x0, #2208]
  40b56c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b570:	add	x2, x1, #0x860
  40b574:	ldr	x4, [x2, #64]
  40b578:	str	x4, [x2, #56]
  40b57c:	str	x3, [x20, #16]
  40b580:	mov	w0, #0x1                   	// #1
  40b584:	str	w0, [x20, #24]
  40b588:	strb	w0, [x2, #32]
  40b58c:	str	x21, [x20, #32]
  40b590:	ldrb	w0, [x20, #40]
  40b594:	and	w0, w0, #0xfe
  40b598:	bfi	w0, w22, #1, #1
  40b59c:	ldrb	w2, [x2, #8]
  40b5a0:	bfi	w0, w2, #2, #1
  40b5a4:	strb	w0, [x20, #40]
  40b5a8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b5ac:	mov	w2, #0xffffffff            	// #-1
  40b5b0:	str	w2, [x0, #3496]
  40b5b4:	ldr	x0, [x1, #2144]
  40b5b8:	str	x0, [x20]
  40b5bc:	str	x20, [x1, #2144]
  40b5c0:	ldp	x19, x20, [sp, #16]
  40b5c4:	ldp	x21, x22, [sp, #32]
  40b5c8:	ldp	x23, x24, [sp, #48]
  40b5cc:	ldp	x29, x30, [sp], #64
  40b5d0:	ret
  40b5d4:	mov	x1, #0x30                  	// #48
  40b5d8:	mov	x0, x19
  40b5dc:	bl	416dc4 <_obstack_newchunk@@Base>
  40b5e0:	b	40b478 <ferror@plt+0x8a88>
  40b5e4:	ldrb	w0, [x19, #80]
  40b5e8:	orr	w0, w0, #0x2
  40b5ec:	strb	w0, [x19, #80]
  40b5f0:	b	40b48c <ferror@plt+0x8a9c>
  40b5f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b5f8:	add	x0, x0, #0x860
  40b5fc:	add	x0, x0, #0x28
  40b600:	bl	416dc4 <_obstack_newchunk@@Base>
  40b604:	b	40b4f0 <ferror@plt+0x8b00>
  40b608:	ldrb	w1, [x19, #80]
  40b60c:	orr	w1, w1, #0x2
  40b610:	strb	w1, [x19, #80]
  40b614:	b	40b530 <ferror@plt+0x8b40>
  40b618:	stp	x29, x30, [sp, #-32]!
  40b61c:	mov	x29, sp
  40b620:	stp	x19, x20, [sp, #16]
  40b624:	mov	x20, x0
  40b628:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b62c:	ldr	x1, [x0, #2168]
  40b630:	cbz	x1, 40b66c <ferror@plt+0x8c7c>
  40b634:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b638:	ldr	x0, [x0, #2160]
  40b63c:	ldr	x2, [x0, #8]
  40b640:	cmp	x1, x2
  40b644:	b.ls	40b660 <ferror@plt+0x8c70>  // b.plast
  40b648:	ldr	x2, [x0, #32]
  40b64c:	cmp	x1, x2
  40b650:	b.cs	40b660 <ferror@plt+0x8c70>  // b.hs, b.nlast
  40b654:	str	x1, [x0, #16]
  40b658:	str	x1, [x0, #24]
  40b65c:	b	40b664 <ferror@plt+0x8c74>
  40b660:	bl	416f14 <_obstack_free@@Base>
  40b664:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b668:	str	xzr, [x0, #2168]
  40b66c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b670:	ldr	x19, [x0, #2160]
  40b674:	ldr	x0, [x19, #32]
  40b678:	ldr	x1, [x19, #24]
  40b67c:	sub	x0, x0, x1
  40b680:	cmp	x0, #0x2f
  40b684:	b.ls	40b714 <ferror@plt+0x8d24>  // b.plast
  40b688:	ldr	x3, [x19, #24]
  40b68c:	add	x3, x3, #0x30
  40b690:	ldr	x2, [x19, #16]
  40b694:	cmp	x3, x2
  40b698:	b.eq	40b724 <ferror@plt+0x8d34>  // b.none
  40b69c:	ldr	x1, [x19, #48]
  40b6a0:	add	x3, x3, x1
  40b6a4:	bic	x1, x3, x1
  40b6a8:	ldr	x3, [x19, #8]
  40b6ac:	ldr	x0, [x19, #32]
  40b6b0:	sub	x4, x1, x3
  40b6b4:	sub	x3, x0, x3
  40b6b8:	cmp	x4, x3
  40b6bc:	csel	x1, x1, x0, ls  // ls = plast
  40b6c0:	str	x1, [x19, #24]
  40b6c4:	str	x1, [x19, #16]
  40b6c8:	mov	w0, #0x2                   	// #2
  40b6cc:	str	w0, [x2, #8]
  40b6d0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b6d4:	ldr	x0, [x0, #3440]
  40b6d8:	str	x0, [x2, #16]
  40b6dc:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b6e0:	ldr	w0, [x0, #3416]
  40b6e4:	str	w0, [x2, #24]
  40b6e8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b6ec:	add	x1, x0, #0x860
  40b6f0:	mov	w3, #0x1                   	// #1
  40b6f4:	strb	w3, [x1, #32]
  40b6f8:	str	x20, [x2, #32]
  40b6fc:	ldr	x1, [x0, #2144]
  40b700:	str	x1, [x2]
  40b704:	str	x2, [x0, #2144]
  40b708:	ldp	x19, x20, [sp, #16]
  40b70c:	ldp	x29, x30, [sp], #32
  40b710:	ret
  40b714:	mov	x1, #0x30                  	// #48
  40b718:	mov	x0, x19
  40b71c:	bl	416dc4 <_obstack_newchunk@@Base>
  40b720:	b	40b688 <ferror@plt+0x8c98>
  40b724:	ldrb	w0, [x19, #80]
  40b728:	orr	w0, w0, #0x2
  40b72c:	strb	w0, [x19, #80]
  40b730:	b	40b69c <ferror@plt+0x8cac>
  40b734:	stp	x29, x30, [sp, #-32]!
  40b738:	mov	x29, sp
  40b73c:	str	x19, [sp, #16]
  40b740:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b744:	ldr	x0, [x0, #2168]
  40b748:	cbnz	x0, 40b7e0 <ferror@plt+0x8df0>
  40b74c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b750:	ldr	x19, [x0, #2160]
  40b754:	ldr	x0, [x19, #32]
  40b758:	ldr	x1, [x19, #24]
  40b75c:	sub	x0, x0, x1
  40b760:	cmp	x0, #0x2f
  40b764:	b.ls	40b7fc <ferror@plt+0x8e0c>  // b.plast
  40b768:	ldr	x1, [x19, #24]
  40b76c:	add	x1, x1, #0x30
  40b770:	ldr	x2, [x19, #16]
  40b774:	cmp	x1, x2
  40b778:	b.eq	40b80c <ferror@plt+0x8e1c>  // b.none
  40b77c:	ldr	x0, [x19, #48]
  40b780:	add	x1, x1, x0
  40b784:	bic	x0, x1, x0
  40b788:	ldr	x1, [x19, #8]
  40b78c:	ldr	x3, [x19, #32]
  40b790:	sub	x4, x0, x1
  40b794:	sub	x1, x3, x1
  40b798:	cmp	x4, x1
  40b79c:	csel	x0, x0, x3, ls  // ls = plast
  40b7a0:	str	x0, [x19, #24]
  40b7a4:	str	x0, [x19, #16]
  40b7a8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b7ac:	add	x0, x0, #0x860
  40b7b0:	str	x2, [x0, #24]
  40b7b4:	str	wzr, [x2, #8]
  40b7b8:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b7bc:	ldr	x1, [x1, #3440]
  40b7c0:	str	x1, [x2, #16]
  40b7c4:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40b7c8:	ldr	w1, [x1, #3416]
  40b7cc:	str	w1, [x2, #24]
  40b7d0:	ldr	x0, [x0, #16]
  40b7d4:	ldr	x19, [sp, #16]
  40b7d8:	ldp	x29, x30, [sp], #32
  40b7dc:	ret
  40b7e0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40b7e4:	add	x2, x2, #0xc98
  40b7e8:	mov	w1, #0x0                   	// #0
  40b7ec:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b7f0:	ldr	w0, [x0, #1644]
  40b7f4:	bl	402c80 <ferror@plt+0x290>
  40b7f8:	bl	402720 <abort@plt>
  40b7fc:	mov	x1, #0x30                  	// #48
  40b800:	mov	x0, x19
  40b804:	bl	416dc4 <_obstack_newchunk@@Base>
  40b808:	b	40b768 <ferror@plt+0x8d78>
  40b80c:	ldrb	w0, [x19, #80]
  40b810:	orr	w0, w0, #0x2
  40b814:	strb	w0, [x19, #80]
  40b818:	b	40b77c <ferror@plt+0x8d8c>
  40b81c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b820:	ldr	x0, [x0, #2168]
  40b824:	cbz	x0, 40b954 <ferror@plt+0x8f64>
  40b828:	stp	x29, x30, [sp, #-48]!
  40b82c:	mov	x29, sp
  40b830:	stp	x19, x20, [sp, #16]
  40b834:	str	x21, [sp, #32]
  40b838:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b83c:	ldr	x20, [x1, #2160]
  40b840:	ldr	x19, [x20, #24]
  40b844:	ldr	x21, [x20, #16]
  40b848:	cmp	x19, x21
  40b84c:	b.eq	40b918 <ferror@plt+0x8f28>  // b.none
  40b850:	ldr	x0, [x20, #32]
  40b854:	cmp	x19, x0
  40b858:	b.eq	40b8f8 <ferror@plt+0x8f08>  // b.none
  40b85c:	ldr	x0, [x20, #24]
  40b860:	add	x1, x0, #0x1
  40b864:	str	x1, [x20, #24]
  40b868:	strb	wzr, [x0]
  40b86c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b870:	ldr	x2, [x0, #2160]
  40b874:	ldr	x0, [x2, #16]
  40b878:	ldr	x3, [x2, #24]
  40b87c:	cmp	x3, x0
  40b880:	b.eq	40b908 <ferror@plt+0x8f18>  // b.none
  40b884:	ldr	x1, [x2, #48]
  40b888:	add	x3, x3, x1
  40b88c:	bic	x1, x3, x1
  40b890:	ldr	x3, [x2, #8]
  40b894:	ldr	x4, [x2, #32]
  40b898:	sub	x5, x1, x3
  40b89c:	sub	x3, x4, x3
  40b8a0:	cmp	x5, x3
  40b8a4:	csel	x1, x1, x4, ls  // ls = plast
  40b8a8:	str	x1, [x2, #24]
  40b8ac:	str	x1, [x2, #16]
  40b8b0:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b8b4:	add	x3, x2, #0x860
  40b8b8:	ldr	x1, [x3, #24]
  40b8bc:	str	x0, [x1, #32]
  40b8c0:	sub	x19, x19, x21
  40b8c4:	add	x19, x0, x19
  40b8c8:	str	x19, [x1, #40]
  40b8cc:	ldr	x4, [x2, #2144]
  40b8d0:	str	x4, [x1]
  40b8d4:	str	x1, [x2, #2144]
  40b8d8:	mov	w1, #0x1                   	// #1
  40b8dc:	strb	w1, [x3, #32]
  40b8e0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b8e4:	str	xzr, [x1, #2168]
  40b8e8:	ldp	x19, x20, [sp, #16]
  40b8ec:	ldr	x21, [sp, #32]
  40b8f0:	ldp	x29, x30, [sp], #48
  40b8f4:	ret
  40b8f8:	mov	x1, #0x1                   	// #1
  40b8fc:	mov	x0, x20
  40b900:	bl	416dc4 <_obstack_newchunk@@Base>
  40b904:	b	40b85c <ferror@plt+0x8e6c>
  40b908:	ldrb	w1, [x2, #80]
  40b90c:	orr	w1, w1, #0x2
  40b910:	strb	w1, [x2, #80]
  40b914:	b	40b884 <ferror@plt+0x8e94>
  40b918:	ldr	x1, [x20, #8]
  40b91c:	cmp	x0, x1
  40b920:	b.ls	40b940 <ferror@plt+0x8f50>  // b.plast
  40b924:	ldr	x1, [x20, #32]
  40b928:	cmp	x0, x1
  40b92c:	b.cs	40b940 <ferror@plt+0x8f50>  // b.hs, b.nlast
  40b930:	str	x0, [x20, #16]
  40b934:	str	x0, [x20, #24]
  40b938:	mov	x0, #0x0                   	// #0
  40b93c:	b	40b8e0 <ferror@plt+0x8ef0>
  40b940:	mov	x1, x0
  40b944:	mov	x0, x20
  40b948:	bl	416f14 <_obstack_free@@Base>
  40b94c:	mov	x0, #0x0                   	// #0
  40b950:	b	40b8e0 <ferror@plt+0x8ef0>
  40b954:	ret
  40b958:	stp	x29, x30, [sp, #-64]!
  40b95c:	mov	x29, sp
  40b960:	stp	x21, x22, [sp, #32]
  40b964:	str	x23, [sp, #48]
  40b968:	mov	x21, x0
  40b96c:	and	w23, w1, #0xff
  40b970:	bl	40b304 <ferror@plt+0x8914>
  40b974:	ldrb	w1, [x21]
  40b978:	cmp	w1, w0
  40b97c:	b.ne	40bad8 <ferror@plt+0x90e8>  // b.any
  40b980:	ldrb	w0, [x21, #1]
  40b984:	cbz	w0, 40b9c4 <ferror@plt+0x8fd4>
  40b988:	stp	x19, x20, [sp, #16]
  40b98c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b990:	ldr	x0, [x0, #2144]
  40b994:	cbz	x0, 40ba08 <ferror@plt+0x9018>
  40b998:	ldr	w1, [x0, #8]
  40b99c:	cbnz	w1, 40ba08 <ferror@plt+0x9018>
  40b9a0:	ldr	x1, [x0, #32]
  40b9a4:	ldrb	w2, [x1]
  40b9a8:	cbz	w2, 40ba08 <ferror@plt+0x9018>
  40b9ac:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b9b0:	ldrb	w2, [x2, #2176]
  40b9b4:	cbnz	w2, 40ba08 <ferror@plt+0x9018>
  40b9b8:	add	x1, x1, #0x1
  40b9bc:	str	x1, [x0, #32]
  40b9c0:	b	40ba0c <ferror@plt+0x901c>
  40b9c4:	cbz	w23, 40baf0 <ferror@plt+0x9100>
  40b9c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b9cc:	ldr	x0, [x0, #2144]
  40b9d0:	cbz	x0, 40ba00 <ferror@plt+0x9010>
  40b9d4:	ldr	w1, [x0, #8]
  40b9d8:	cbnz	w1, 40ba00 <ferror@plt+0x9010>
  40b9dc:	ldr	x1, [x0, #32]
  40b9e0:	ldrb	w2, [x1]
  40b9e4:	cbz	w2, 40ba00 <ferror@plt+0x9010>
  40b9e8:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  40b9ec:	ldrb	w2, [x2, #2176]
  40b9f0:	cbnz	w2, 40ba00 <ferror@plt+0x9010>
  40b9f4:	add	x1, x1, #0x1
  40b9f8:	str	x1, [x0, #32]
  40b9fc:	b	40badc <ferror@plt+0x90ec>
  40ba00:	bl	40b1bc <ferror@plt+0x87cc>
  40ba04:	b	40badc <ferror@plt+0x90ec>
  40ba08:	bl	40b1bc <ferror@plt+0x87cc>
  40ba0c:	add	x19, x21, #0x1
  40ba10:	mov	w20, #0x1                   	// #1
  40ba14:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ba18:	b	40ba2c <ferror@plt+0x903c>
  40ba1c:	bl	40b1bc <ferror@plt+0x87cc>
  40ba20:	add	w20, w20, #0x1
  40ba24:	ldrb	w1, [x19]
  40ba28:	cbz	w1, 40ba70 <ferror@plt+0x9080>
  40ba2c:	bl	40b304 <ferror@plt+0x8914>
  40ba30:	ldrb	w1, [x19], #1
  40ba34:	cmp	w0, w1
  40ba38:	b.ne	40ba7c <ferror@plt+0x908c>  // b.any
  40ba3c:	ldr	x1, [x22, #2144]
  40ba40:	cbz	x1, 40ba1c <ferror@plt+0x902c>
  40ba44:	ldr	w0, [x1, #8]
  40ba48:	cbnz	w0, 40ba1c <ferror@plt+0x902c>
  40ba4c:	ldr	x0, [x1, #32]
  40ba50:	ldrb	w2, [x0]
  40ba54:	cbz	w2, 40ba1c <ferror@plt+0x902c>
  40ba58:	add	x2, x22, #0x860
  40ba5c:	ldrb	w2, [x2, #32]
  40ba60:	cbnz	w2, 40ba1c <ferror@plt+0x902c>
  40ba64:	add	x0, x0, #0x1
  40ba68:	str	x0, [x1, #32]
  40ba6c:	b	40ba20 <ferror@plt+0x9030>
  40ba70:	cbnz	w23, 40baf8 <ferror@plt+0x9108>
  40ba74:	mov	w23, #0x1                   	// #1
  40ba78:	b	40ba80 <ferror@plt+0x9090>
  40ba7c:	mov	w23, #0x0                   	// #0
  40ba80:	bl	40b734 <ferror@plt+0x8d44>
  40ba84:	mov	x19, x0
  40ba88:	sxtw	x22, w20
  40ba8c:	ldr	x0, [x0, #32]
  40ba90:	ldr	x1, [x19, #24]
  40ba94:	sub	x0, x0, x1
  40ba98:	cmp	x0, w20, sxtw
  40ba9c:	b.cc	40bac8 <ferror@plt+0x90d8>  // b.lo, b.ul, b.last
  40baa0:	mov	x2, x22
  40baa4:	mov	x1, x21
  40baa8:	ldr	x0, [x19, #24]
  40baac:	bl	402390 <memcpy@plt>
  40bab0:	ldr	x0, [x19, #24]
  40bab4:	add	x0, x0, x22
  40bab8:	str	x0, [x19, #24]
  40babc:	bl	40b81c <ferror@plt+0x8e2c>
  40bac0:	ldp	x19, x20, [sp, #16]
  40bac4:	b	40badc <ferror@plt+0x90ec>
  40bac8:	mov	x1, x22
  40bacc:	mov	x0, x19
  40bad0:	bl	416dc4 <_obstack_newchunk@@Base>
  40bad4:	b	40baa0 <ferror@plt+0x90b0>
  40bad8:	mov	w23, #0x0                   	// #0
  40badc:	mov	w0, w23
  40bae0:	ldp	x21, x22, [sp, #32]
  40bae4:	ldr	x23, [sp, #48]
  40bae8:	ldp	x29, x30, [sp], #64
  40baec:	ret
  40baf0:	mov	w23, #0x1                   	// #1
  40baf4:	b	40badc <ferror@plt+0x90ec>
  40baf8:	ldp	x19, x20, [sp, #16]
  40bafc:	b	40badc <ferror@plt+0x90ec>
  40bb00:	stp	x29, x30, [sp, #-48]!
  40bb04:	mov	x29, sp
  40bb08:	stp	x19, x20, [sp, #16]
  40bb0c:	stp	x21, x22, [sp, #32]
  40bb10:	mov	x22, x0
  40bb14:	bl	4023d0 <strlen@plt>
  40bb18:	mov	x21, x0
  40bb1c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bb20:	ldr	x19, [x0, #2272]
  40bb24:	ldr	x0, [x19, #32]
  40bb28:	ldr	x1, [x19, #24]
  40bb2c:	sub	x0, x0, x1
  40bb30:	cmp	x0, #0x2f
  40bb34:	b.ls	40bc44 <ferror@plt+0x9254>  // b.plast
  40bb38:	ldr	x2, [x19, #24]
  40bb3c:	add	x2, x2, #0x30
  40bb40:	ldr	x20, [x19, #16]
  40bb44:	cmp	x2, x20
  40bb48:	b.eq	40bc54 <ferror@plt+0x9264>  // b.none
  40bb4c:	ldr	x1, [x19, #48]
  40bb50:	add	x2, x2, x1
  40bb54:	bic	x1, x2, x1
  40bb58:	ldr	x0, [x19, #8]
  40bb5c:	ldr	x2, [x19, #32]
  40bb60:	sub	x3, x1, x0
  40bb64:	sub	x0, x2, x0
  40bb68:	cmp	x3, x0
  40bb6c:	csel	x1, x1, x2, ls  // ls = plast
  40bb70:	str	x1, [x19, #24]
  40bb74:	str	x1, [x19, #16]
  40bb78:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bb7c:	add	x0, x0, #0x860
  40bb80:	ldr	x1, [x0, #136]
  40bb84:	str	x1, [x20]
  40bb88:	str	wzr, [x20, #8]
  40bb8c:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40bb90:	ldr	x1, [x1, #3440]
  40bb94:	str	x1, [x20, #16]
  40bb98:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40bb9c:	ldr	w1, [x1, #3416]
  40bba0:	str	w1, [x20, #24]
  40bba4:	ldr	x19, [x0, #128]
  40bba8:	add	x1, x21, #0x1
  40bbac:	ldr	x0, [x19, #32]
  40bbb0:	ldr	x2, [x19, #24]
  40bbb4:	sub	x0, x0, x2
  40bbb8:	cmp	x1, x0
  40bbbc:	b.hi	40bc64 <ferror@plt+0x9274>  // b.pmore
  40bbc0:	mov	x2, x21
  40bbc4:	mov	x1, x22
  40bbc8:	ldr	x0, [x19, #24]
  40bbcc:	bl	402390 <memcpy@plt>
  40bbd0:	ldr	x1, [x19, #24]
  40bbd4:	add	x0, x1, x21
  40bbd8:	add	x0, x0, #0x1
  40bbdc:	str	x0, [x19, #24]
  40bbe0:	strb	wzr, [x1, x21]
  40bbe4:	ldr	x0, [x19, #16]
  40bbe8:	ldr	x2, [x19, #24]
  40bbec:	cmp	x2, x0
  40bbf0:	b.eq	40bc70 <ferror@plt+0x9280>  // b.none
  40bbf4:	ldr	x1, [x19, #48]
  40bbf8:	add	x2, x2, x1
  40bbfc:	bic	x1, x2, x1
  40bc00:	ldr	x2, [x19, #8]
  40bc04:	ldr	x3, [x19, #32]
  40bc08:	sub	x4, x1, x2
  40bc0c:	sub	x2, x3, x2
  40bc10:	cmp	x4, x2
  40bc14:	csel	x1, x1, x3, ls  // ls = plast
  40bc18:	str	x1, [x19, #24]
  40bc1c:	str	x1, [x19, #16]
  40bc20:	str	x0, [x20, #32]
  40bc24:	add	x0, x0, x21
  40bc28:	str	x0, [x20, #40]
  40bc2c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bc30:	str	x20, [x0, #2280]
  40bc34:	ldp	x19, x20, [sp, #16]
  40bc38:	ldp	x21, x22, [sp, #32]
  40bc3c:	ldp	x29, x30, [sp], #48
  40bc40:	ret
  40bc44:	mov	x1, #0x30                  	// #48
  40bc48:	mov	x0, x19
  40bc4c:	bl	416dc4 <_obstack_newchunk@@Base>
  40bc50:	b	40bb38 <ferror@plt+0x9148>
  40bc54:	ldrb	w0, [x19, #80]
  40bc58:	orr	w0, w0, #0x2
  40bc5c:	strb	w0, [x19, #80]
  40bc60:	b	40bb4c <ferror@plt+0x915c>
  40bc64:	mov	x0, x19
  40bc68:	bl	416dc4 <_obstack_newchunk@@Base>
  40bc6c:	b	40bbc0 <ferror@plt+0x91d0>
  40bc70:	ldrb	w1, [x19, #80]
  40bc74:	orr	w1, w1, #0x2
  40bc78:	strb	w1, [x19, #80]
  40bc7c:	b	40bbf4 <ferror@plt+0x9204>
  40bc80:	stp	x29, x30, [sp, #-32]!
  40bc84:	mov	x29, sp
  40bc88:	stp	x19, x20, [sp, #16]
  40bc8c:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bc90:	add	x19, x19, #0x860
  40bc94:	str	xzr, [x19, #24]
  40bc98:	mov	x1, #0x0                   	// #0
  40bc9c:	ldr	x0, [x19, #16]
  40bca0:	bl	416f14 <_obstack_free@@Base>
  40bca4:	ldr	x0, [x19, #16]
  40bca8:	bl	402810 <free@plt>
  40bcac:	ldr	x0, [x19, #136]
  40bcb0:	cbz	x0, 40bd10 <ferror@plt+0x9320>
  40bcb4:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bcb8:	add	x19, x20, #0x860
  40bcbc:	ldr	x0, [x19, #128]
  40bcc0:	str	x0, [x19, #16]
  40bcc4:	mov	x0, #0x58                  	// #88
  40bcc8:	bl	41607c <ferror@plt+0x1368c>
  40bccc:	str	x0, [x19, #128]
  40bcd0:	adrp	x4, 402000 <mbrtowc@plt-0x380>
  40bcd4:	add	x4, x4, #0x810
  40bcd8:	adrp	x3, 416000 <ferror@plt+0x13610>
  40bcdc:	add	x3, x3, #0x7c
  40bce0:	mov	x2, #0x0                   	// #0
  40bce4:	mov	x1, #0x0                   	// #0
  40bce8:	bl	416d70 <_obstack_begin@@Base>
  40bcec:	ldr	x0, [x19, #136]
  40bcf0:	str	x0, [x20, #2144]
  40bcf4:	str	xzr, [x19, #136]
  40bcf8:	mov	w0, #0x1                   	// #1
  40bcfc:	strb	w0, [x19, #32]
  40bd00:	mov	w0, #0x1                   	// #1
  40bd04:	ldp	x19, x20, [sp, #16]
  40bd08:	ldp	x29, x30, [sp], #32
  40bd0c:	ret
  40bd10:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bd14:	add	x19, x19, #0x860
  40bd18:	mov	x1, #0x0                   	// #0
  40bd1c:	add	x0, x19, #0x90
  40bd20:	bl	416f14 <_obstack_free@@Base>
  40bd24:	mov	x1, #0x0                   	// #0
  40bd28:	add	x0, x19, #0x28
  40bd2c:	bl	416f14 <_obstack_free@@Base>
  40bd30:	mov	x1, #0x0                   	// #0
  40bd34:	ldr	x0, [x19, #128]
  40bd38:	bl	416f14 <_obstack_free@@Base>
  40bd3c:	ldr	x0, [x19, #128]
  40bd40:	bl	402810 <free@plt>
  40bd44:	mov	w0, #0x0                   	// #0
  40bd48:	b	40bd04 <ferror@plt+0x9314>
  40bd4c:	stp	x29, x30, [sp, #-48]!
  40bd50:	mov	x29, sp
  40bd54:	stp	x19, x20, [sp, #16]
  40bd58:	str	x21, [sp, #32]
  40bd5c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40bd60:	ldr	x20, [x0, #3440]
  40bd64:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40bd68:	ldr	w21, [x0, #3416]
  40bd6c:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bd70:	b	40bd84 <ferror@plt+0x9394>
  40bd74:	bl	40b1bc <ferror@plt+0x87cc>
  40bd78:	cmp	w0, #0x100
  40bd7c:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  40bd80:	b.eq	40bdbc <ferror@plt+0x93cc>  // b.none
  40bd84:	ldr	x0, [x19, #2144]
  40bd88:	cbz	x0, 40bd74 <ferror@plt+0x9384>
  40bd8c:	ldr	w1, [x0, #8]
  40bd90:	cbnz	w1, 40bd74 <ferror@plt+0x9384>
  40bd94:	ldr	x1, [x0, #32]
  40bd98:	ldrb	w2, [x1]
  40bd9c:	cbz	w2, 40bd74 <ferror@plt+0x9384>
  40bda0:	add	x2, x19, #0x860
  40bda4:	ldrb	w2, [x2, #32]
  40bda8:	cbnz	w2, 40bd74 <ferror@plt+0x9384>
  40bdac:	add	x2, x1, #0x1
  40bdb0:	str	x2, [x0, #32]
  40bdb4:	ldrb	w0, [x1]
  40bdb8:	b	40bd78 <ferror@plt+0x9388>
  40bdbc:	cmp	w0, #0x100
  40bdc0:	b.eq	40bdf0 <ferror@plt+0x9400>  // b.none
  40bdc4:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40bdc8:	ldr	x0, [x0, #3440]
  40bdcc:	cmp	x0, x20
  40bdd0:	b.eq	40be14 <ferror@plt+0x9424>  // b.none
  40bdd4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bdd8:	mov	w1, #0x1                   	// #1
  40bddc:	strb	w1, [x0, #2176]
  40bde0:	ldp	x19, x20, [sp, #16]
  40bde4:	ldr	x21, [sp, #32]
  40bde8:	ldp	x29, x30, [sp], #48
  40bdec:	ret
  40bdf0:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x206c>
  40bdf4:	add	x4, x4, #0xcc0
  40bdf8:	mov	w3, w21
  40bdfc:	mov	x2, x20
  40be00:	mov	w1, #0x0                   	// #0
  40be04:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40be08:	ldr	w0, [x0, #1644]
  40be0c:	bl	402d40 <ferror@plt+0x350>
  40be10:	b	40bdc4 <ferror@plt+0x93d4>
  40be14:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40be18:	ldr	w0, [x0, #3416]
  40be1c:	cmp	w0, w21
  40be20:	b.ne	40bdd4 <ferror@plt+0x93e4>  // b.any
  40be24:	b	40bde0 <ferror@plt+0x93f0>
  40be28:	stp	x29, x30, [sp, #-48]!
  40be2c:	mov	x29, sp
  40be30:	stp	x19, x20, [sp, #16]
  40be34:	str	x21, [sp, #32]
  40be38:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40be3c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  40be40:	add	x0, x0, #0x6c0
  40be44:	str	x0, [x1, #3440]
  40be48:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40be4c:	str	wzr, [x0, #3416]
  40be50:	mov	x0, #0x58                  	// #88
  40be54:	bl	41607c <ferror@plt+0x1368c>
  40be58:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40be5c:	add	x19, x19, #0x860
  40be60:	str	x0, [x19, #16]
  40be64:	adrp	x21, 402000 <mbrtowc@plt-0x380>
  40be68:	add	x21, x21, #0x810
  40be6c:	adrp	x20, 416000 <ferror@plt+0x13610>
  40be70:	add	x20, x20, #0x7c
  40be74:	mov	x4, x21
  40be78:	mov	x3, x20
  40be7c:	mov	x2, #0x0                   	// #0
  40be80:	mov	x1, #0x0                   	// #0
  40be84:	bl	416d70 <_obstack_begin@@Base>
  40be88:	mov	x0, #0x58                  	// #88
  40be8c:	bl	41607c <ferror@plt+0x1368c>
  40be90:	str	x0, [x19, #128]
  40be94:	mov	x4, x21
  40be98:	mov	x3, x20
  40be9c:	mov	x2, #0x0                   	// #0
  40bea0:	mov	x1, #0x0                   	// #0
  40bea4:	bl	416d70 <_obstack_begin@@Base>
  40bea8:	mov	x4, x21
  40beac:	mov	x3, x20
  40beb0:	mov	x2, #0x0                   	// #0
  40beb4:	mov	x1, #0x0                   	// #0
  40beb8:	add	x0, x19, #0x28
  40bebc:	bl	416d70 <_obstack_begin@@Base>
  40bec0:	add	x19, x19, #0x90
  40bec4:	mov	x4, x21
  40bec8:	mov	x3, x20
  40becc:	mov	x2, #0x0                   	// #0
  40bed0:	mov	x1, #0x0                   	// #0
  40bed4:	mov	x0, x19
  40bed8:	bl	416d70 <_obstack_begin@@Base>
  40bedc:	ldr	x1, [x19, #32]
  40bee0:	ldr	x0, [x19, #24]
  40bee4:	cmp	x1, x0
  40bee8:	b.eq	40bffc <ferror@plt+0x960c>  // b.none
  40beec:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bef0:	add	x0, x0, #0x860
  40bef4:	ldr	x2, [x0, #168]
  40bef8:	add	x0, x0, #0x90
  40befc:	add	x2, x2, #0x1
  40bf00:	ldr	x0, [x0, #16]
  40bf04:	cmp	x2, x0
  40bf08:	b.eq	40c00c <ferror@plt+0x961c>  // b.none
  40bf0c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bf10:	add	x0, x0, #0x860
  40bf14:	ldr	x1, [x0, #192]
  40bf18:	add	x2, x2, x1
  40bf1c:	bic	x1, x2, x1
  40bf20:	str	x1, [x0, #168]
  40bf24:	ldr	x2, [x0, #152]
  40bf28:	add	x0, x0, #0x90
  40bf2c:	ldr	x0, [x0, #32]
  40bf30:	sub	x1, x1, x2
  40bf34:	sub	x2, x0, x2
  40bf38:	cmp	x1, x2
  40bf3c:	b.ls	40bf48 <ferror@plt+0x9558>  // b.plast
  40bf40:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bf44:	str	x0, [x1, #2312]
  40bf48:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40bf4c:	add	x0, x1, #0x860
  40bf50:	ldr	x2, [x0, #168]
  40bf54:	str	x2, [x0, #160]
  40bf58:	str	x2, [x0, #232]
  40bf5c:	str	xzr, [x1, #2144]
  40bf60:	str	xzr, [x0, #136]
  40bf64:	str	xzr, [x0, #24]
  40bf68:	strb	wzr, [x0, #8]
  40bf6c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40bf70:	add	x0, x0, #0x9a0
  40bf74:	bl	4162bc <ferror@plt+0x138cc>
  40bf78:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40bf7c:	add	x19, x1, #0xd60
  40bf80:	str	x0, [x1, #3424]
  40bf84:	bl	4023d0 <strlen@plt>
  40bf88:	str	x0, [x19, #8]
  40bf8c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  40bf90:	add	x0, x0, #0x8c8
  40bf94:	bl	4162bc <ferror@plt+0x138cc>
  40bf98:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40bf9c:	add	x19, x1, #0xd98
  40bfa0:	str	x0, [x1, #3480]
  40bfa4:	bl	4023d0 <strlen@plt>
  40bfa8:	str	x0, [x19, #8]
  40bfac:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40bfb0:	add	x0, x0, #0x9b0
  40bfb4:	bl	4162bc <ferror@plt+0x138cc>
  40bfb8:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40bfbc:	add	x19, x1, #0xd78
  40bfc0:	str	x0, [x1, #3448]
  40bfc4:	bl	4023d0 <strlen@plt>
  40bfc8:	str	x0, [x19, #8]
  40bfcc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  40bfd0:	add	x0, x0, #0x810
  40bfd4:	bl	4162bc <ferror@plt+0x138cc>
  40bfd8:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40bfdc:	add	x19, x1, #0xd88
  40bfe0:	str	x0, [x1, #3464]
  40bfe4:	bl	4023d0 <strlen@plt>
  40bfe8:	str	x0, [x19, #8]
  40bfec:	ldp	x19, x20, [sp, #16]
  40bff0:	ldr	x21, [sp, #32]
  40bff4:	ldp	x29, x30, [sp], #48
  40bff8:	ret
  40bffc:	mov	x1, #0x1                   	// #1
  40c000:	mov	x0, x19
  40c004:	bl	416dc4 <_obstack_newchunk@@Base>
  40c008:	b	40beec <ferror@plt+0x94fc>
  40c00c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c010:	add	x0, x0, #0x860
  40c014:	ldrb	w1, [x0, #224]
  40c018:	orr	w1, w1, #0x2
  40c01c:	strb	w1, [x0, #224]
  40c020:	b	40bf0c <ferror@plt+0x951c>
  40c024:	stp	x29, x30, [sp, #-32]!
  40c028:	mov	x29, sp
  40c02c:	stp	x19, x20, [sp, #16]
  40c030:	mov	x20, x0
  40c034:	mov	x19, x1
  40c038:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c03c:	ldr	x0, [x0, #3424]
  40c040:	bl	402810 <free@plt>
  40c044:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c048:	ldr	x0, [x0, #3480]
  40c04c:	bl	402810 <free@plt>
  40c050:	cbz	x20, 40c078 <ferror@plt+0x9688>
  40c054:	cbz	x19, 40c0cc <ferror@plt+0x96dc>
  40c058:	ldrb	w0, [x20]
  40c05c:	cbz	w0, 40c088 <ferror@plt+0x9698>
  40c060:	ldrb	w1, [x19]
  40c064:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  40c068:	add	x0, x0, #0x8c8
  40c06c:	cmp	w1, #0x0
  40c070:	csel	x19, x0, x19, eq  // eq = none
  40c074:	b	40c088 <ferror@plt+0x9698>
  40c078:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x106c>
  40c07c:	add	x19, x19, #0x8c8
  40c080:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x206c>
  40c084:	add	x20, x20, #0x9a0
  40c088:	mov	x0, x20
  40c08c:	bl	4162bc <ferror@plt+0x138cc>
  40c090:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c094:	add	x20, x1, #0xd60
  40c098:	str	x0, [x1, #3424]
  40c09c:	bl	4023d0 <strlen@plt>
  40c0a0:	str	x0, [x20, #8]
  40c0a4:	mov	x0, x19
  40c0a8:	bl	4162bc <ferror@plt+0x138cc>
  40c0ac:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c0b0:	add	x19, x1, #0xd98
  40c0b4:	str	x0, [x1, #3480]
  40c0b8:	bl	4023d0 <strlen@plt>
  40c0bc:	str	x0, [x19, #8]
  40c0c0:	ldp	x19, x20, [sp, #16]
  40c0c4:	ldp	x29, x30, [sp], #32
  40c0c8:	ret
  40c0cc:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x106c>
  40c0d0:	add	x19, x19, #0x8c8
  40c0d4:	b	40c088 <ferror@plt+0x9698>
  40c0d8:	stp	x29, x30, [sp, #-32]!
  40c0dc:	mov	x29, sp
  40c0e0:	stp	x19, x20, [sp, #16]
  40c0e4:	mov	x20, x0
  40c0e8:	mov	x19, x1
  40c0ec:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c0f0:	ldr	x0, [x0, #3448]
  40c0f4:	bl	402810 <free@plt>
  40c0f8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c0fc:	ldr	x0, [x0, #3464]
  40c100:	bl	402810 <free@plt>
  40c104:	cbz	x20, 40c12c <ferror@plt+0x973c>
  40c108:	cbz	x19, 40c17c <ferror@plt+0x978c>
  40c10c:	ldrb	w0, [x20]
  40c110:	cbz	w0, 40c138 <ferror@plt+0x9748>
  40c114:	ldrb	w1, [x19]
  40c118:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  40c11c:	add	x0, x0, #0x810
  40c120:	cmp	w1, #0x0
  40c124:	csel	x19, x0, x19, eq  // eq = none
  40c128:	b	40c138 <ferror@plt+0x9748>
  40c12c:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x6c>
  40c130:	add	x19, x19, #0x6c0
  40c134:	mov	x20, x19
  40c138:	mov	x0, x20
  40c13c:	bl	4162bc <ferror@plt+0x138cc>
  40c140:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c144:	add	x20, x1, #0xd78
  40c148:	str	x0, [x1, #3448]
  40c14c:	bl	4023d0 <strlen@plt>
  40c150:	str	x0, [x20, #8]
  40c154:	mov	x0, x19
  40c158:	bl	4162bc <ferror@plt+0x138cc>
  40c15c:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c160:	add	x19, x1, #0xd88
  40c164:	str	x0, [x1, #3464]
  40c168:	bl	4023d0 <strlen@plt>
  40c16c:	str	x0, [x19, #8]
  40c170:	ldp	x19, x20, [sp, #16]
  40c174:	ldp	x29, x30, [sp], #32
  40c178:	ret
  40c17c:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x6c>
  40c180:	add	x19, x19, #0x810
  40c184:	b	40c138 <ferror@plt+0x9748>
  40c188:	stp	x29, x30, [sp, #-144]!
  40c18c:	mov	x29, sp
  40c190:	stp	x19, x20, [sp, #16]
  40c194:	stp	x21, x22, [sp, #32]
  40c198:	str	x0, [sp, #104]
  40c19c:	mov	x22, x1
  40c1a0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c1a4:	add	x0, x0, #0x860
  40c1a8:	ldr	x1, [x0, #232]
  40c1ac:	ldr	x0, [x0, #152]
  40c1b0:	cmp	x0, x1
  40c1b4:	b.cs	40c1dc <ferror@plt+0x97ec>  // b.hs, b.nlast
  40c1b8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c1bc:	ldr	x0, [x0, #2320]
  40c1c0:	cmp	x0, x1
  40c1c4:	b.ls	40c1dc <ferror@plt+0x97ec>  // b.plast
  40c1c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c1cc:	add	x0, x0, #0x860
  40c1d0:	str	x1, [x0, #160]
  40c1d4:	str	x1, [x0, #168]
  40c1d8:	b	40c1ec <ferror@plt+0x97fc>
  40c1dc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c1e0:	add	x0, x0, #0x860
  40c1e4:	add	x0, x0, #0x90
  40c1e8:	bl	416f14 <_obstack_free@@Base>
  40c1ec:	cmp	x22, #0x0
  40c1f0:	add	x0, sp, #0x8c
  40c1f4:	csel	x22, x0, x22, eq  // eq = none
  40c1f8:	bl	40b304 <ferror@plt+0x8914>
  40c1fc:	mov	w19, w0
  40c200:	cmp	w0, #0x100
  40c204:	b.eq	40c248 <ferror@plt+0x9858>  // b.none
  40c208:	cmp	w0, #0x101
  40c20c:	b.eq	40c28c <ferror@plt+0x989c>  // b.none
  40c210:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c214:	ldr	x0, [x0, #2144]
  40c218:	cbz	x0, 40c318 <ferror@plt+0x9928>
  40c21c:	ldr	w1, [x0, #8]
  40c220:	cbnz	w1, 40c318 <ferror@plt+0x9928>
  40c224:	ldr	x1, [x0, #32]
  40c228:	ldrb	w2, [x1]
  40c22c:	cbz	w2, 40c318 <ferror@plt+0x9928>
  40c230:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c234:	ldrb	w2, [x2, #2176]
  40c238:	cbnz	w2, 40c318 <ferror@plt+0x9928>
  40c23c:	add	x1, x1, #0x1
  40c240:	str	x1, [x0, #32]
  40c244:	b	40c31c <ferror@plt+0x992c>
  40c248:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c24c:	ldr	x0, [x0, #2144]
  40c250:	cbz	x0, 40c280 <ferror@plt+0x9890>
  40c254:	ldr	w20, [x0, #8]
  40c258:	cbnz	w20, 40c280 <ferror@plt+0x9890>
  40c25c:	ldr	x1, [x0, #32]
  40c260:	ldrb	w2, [x1]
  40c264:	cbz	w2, 40c280 <ferror@plt+0x9890>
  40c268:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c26c:	ldrb	w2, [x2, #2176]
  40c270:	cbnz	w2, 40c280 <ferror@plt+0x9890>
  40c274:	add	x1, x1, #0x1
  40c278:	str	x1, [x0, #32]
  40c27c:	b	40caf0 <ferror@plt+0xa100>
  40c280:	bl	40b1bc <ferror@plt+0x87cc>
  40c284:	mov	w20, #0x0                   	// #0
  40c288:	b	40caf0 <ferror@plt+0xa100>
  40c28c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c290:	ldr	x0, [x0, #2144]
  40c294:	ldr	w1, [x0, #8]
  40c298:	cmp	w1, #0x2
  40c29c:	b.ne	40c2e4 <ferror@plt+0x98f4>  // b.any
  40c2a0:	mov	w1, #0x2                   	// #2
  40c2a4:	ldr	x2, [sp, #104]
  40c2a8:	str	w1, [x2]
  40c2ac:	ldr	x1, [x0, #32]
  40c2b0:	str	x1, [x2, #8]
  40c2b4:	ldr	w1, [x0, #8]
  40c2b8:	cbnz	w1, 40c30c <ferror@plt+0x991c>
  40c2bc:	ldr	x1, [x0, #32]
  40c2c0:	ldrb	w2, [x1]
  40c2c4:	cbz	w2, 40c30c <ferror@plt+0x991c>
  40c2c8:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c2cc:	ldrb	w2, [x2, #2176]
  40c2d0:	cbnz	w2, 40c30c <ferror@plt+0x991c>
  40c2d4:	add	x1, x1, #0x1
  40c2d8:	str	x1, [x0, #32]
  40c2dc:	mov	w20, #0x7                   	// #7
  40c2e0:	b	40caf0 <ferror@plt+0xa100>
  40c2e4:	stp	x23, x24, [sp, #48]
  40c2e8:	stp	x25, x26, [sp, #64]
  40c2ec:	stp	x27, x28, [sp, #80]
  40c2f0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40c2f4:	add	x2, x2, #0xce8
  40c2f8:	mov	w1, #0x0                   	// #0
  40c2fc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c300:	ldr	w0, [x0, #1644]
  40c304:	bl	402c80 <ferror@plt+0x290>
  40c308:	bl	402720 <abort@plt>
  40c30c:	bl	40b1bc <ferror@plt+0x87cc>
  40c310:	mov	w20, #0x7                   	// #7
  40c314:	b	40caf0 <ferror@plt+0xa100>
  40c318:	bl	40b1bc <ferror@plt+0x87cc>
  40c31c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c320:	ldr	x0, [x0, #3440]
  40c324:	str	x0, [sp, #112]
  40c328:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c32c:	ldr	w0, [x0, #3416]
  40c330:	str	w0, [x22]
  40c334:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c338:	ldr	x0, [x0, #3448]
  40c33c:	ldrb	w1, [x0]
  40c340:	cmp	w19, #0x0
  40c344:	ccmp	w1, w19, #0x0, ne  // ne = any
  40c348:	b.eq	40c3b0 <ferror@plt+0x99c0>  // b.none
  40c34c:	bl	4027c0 <__ctype_b_loc@plt>
  40c350:	mov	x21, x0
  40c354:	ldr	x0, [x0]
  40c358:	ldrh	w0, [x0, w19, sxtw #1]
  40c35c:	and	w0, w0, #0x400
  40c360:	cmp	w19, #0x5f
  40c364:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40c368:	b.eq	40c628 <ferror@plt+0x9c38>  // b.none
  40c36c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c370:	add	x0, x0, #0x860
  40c374:	ldr	x1, [x0, #176]
  40c378:	add	x0, x0, #0x90
  40c37c:	ldr	x0, [x0, #24]
  40c380:	cmp	x1, x0
  40c384:	b.eq	40c57c <ferror@plt+0x9b8c>  // b.none
  40c388:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c38c:	add	x0, x0, #0x860
  40c390:	ldr	x1, [x0, #168]
  40c394:	add	x2, x1, #0x1
  40c398:	str	x2, [x0, #168]
  40c39c:	strb	w19, [x1]
  40c3a0:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c3a4:	add	x20, x20, #0x860
  40c3a8:	mov	x22, #0x1                   	// #1
  40c3ac:	b	40c5a8 <ferror@plt+0x9bb8>
  40c3b0:	ldrb	w1, [x0, #1]
  40c3b4:	cbnz	w1, 40c420 <ferror@plt+0x9a30>
  40c3b8:	stp	x23, x24, [sp, #48]
  40c3bc:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c3c0:	ldr	x20, [x0, #3456]
  40c3c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c3c8:	add	x0, x0, #0x860
  40c3cc:	ldr	x1, [x0, #176]
  40c3d0:	add	x0, x0, #0x90
  40c3d4:	ldr	x0, [x0, #24]
  40c3d8:	sub	x0, x1, x0
  40c3dc:	cmp	x20, x0
  40c3e0:	b.hi	40c438 <ferror@plt+0x9a48>  // b.pmore
  40c3e4:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c3e8:	add	x19, x19, #0x860
  40c3ec:	mov	x2, x20
  40c3f0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c3f4:	ldr	x1, [x0, #3448]
  40c3f8:	ldr	x0, [x19, #168]
  40c3fc:	bl	402390 <memcpy@plt>
  40c400:	ldr	x0, [x19, #168]
  40c404:	add	x20, x0, x20
  40c408:	str	x20, [x19, #168]
  40c40c:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c410:	adrp	x21, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c414:	mov	w24, #0x1                   	// #1
  40c418:	mov	x23, #0x1                   	// #1
  40c41c:	b	40c4b4 <ferror@plt+0x9ac4>
  40c420:	mov	w1, #0x1                   	// #1
  40c424:	add	x0, x0, #0x1
  40c428:	bl	40b958 <ferror@plt+0x8f68>
  40c42c:	and	w0, w0, #0xff
  40c430:	cbz	w0, 40c34c <ferror@plt+0x995c>
  40c434:	b	40c3b8 <ferror@plt+0x99c8>
  40c438:	mov	x1, x20
  40c43c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c440:	add	x0, x0, #0x860
  40c444:	add	x0, x0, #0x90
  40c448:	bl	416dc4 <_obstack_newchunk@@Base>
  40c44c:	b	40c3e4 <ferror@plt+0x99f4>
  40c450:	add	x0, x20, #0x860
  40c454:	mov	x1, x23
  40c458:	add	x0, x0, #0x90
  40c45c:	bl	416dc4 <_obstack_newchunk@@Base>
  40c460:	b	40c4a0 <ferror@plt+0x9ab0>
  40c464:	bl	40b1bc <ferror@plt+0x87cc>
  40c468:	mov	w19, w0
  40c46c:	cmp	w0, #0x100
  40c470:	b.eq	40cb48 <ferror@plt+0xa158>  // b.none
  40c474:	ldr	x0, [x21, #3464]
  40c478:	ldrb	w1, [x0]
  40c47c:	cmp	w19, #0x0
  40c480:	ccmp	w1, w19, #0x0, ne  // ne = any
  40c484:	b.eq	40c4ec <ferror@plt+0x9afc>  // b.none
  40c488:	add	x0, x20, #0x860
  40c48c:	ldr	x1, [x0, #176]
  40c490:	add	x0, x0, #0x90
  40c494:	ldr	x0, [x0, #24]
  40c498:	cmp	x1, x0
  40c49c:	b.eq	40c450 <ferror@plt+0x9a60>  // b.none
  40c4a0:	add	x0, x20, #0x860
  40c4a4:	ldr	x1, [x0, #168]
  40c4a8:	add	x2, x1, #0x1
  40c4ac:	str	x2, [x0, #168]
  40c4b0:	strb	w19, [x1]
  40c4b4:	ldr	x0, [x20, #2144]
  40c4b8:	cbz	x0, 40c464 <ferror@plt+0x9a74>
  40c4bc:	ldr	w1, [x0, #8]
  40c4c0:	cbnz	w1, 40c464 <ferror@plt+0x9a74>
  40c4c4:	ldr	x1, [x0, #32]
  40c4c8:	ldrb	w2, [x1]
  40c4cc:	cbz	w2, 40c464 <ferror@plt+0x9a74>
  40c4d0:	add	x2, x20, #0x860
  40c4d4:	ldrb	w2, [x2, #32]
  40c4d8:	cbnz	w2, 40c464 <ferror@plt+0x9a74>
  40c4dc:	add	x2, x1, #0x1
  40c4e0:	str	x2, [x0, #32]
  40c4e4:	ldrb	w19, [x1]
  40c4e8:	b	40c474 <ferror@plt+0x9a84>
  40c4ec:	ldrb	w1, [x0, #1]
  40c4f0:	cbz	w1, 40c508 <ferror@plt+0x9b18>
  40c4f4:	mov	w1, w24
  40c4f8:	add	x0, x0, #0x1
  40c4fc:	bl	40b958 <ferror@plt+0x8f68>
  40c500:	and	w0, w0, #0xff
  40c504:	cbz	w0, 40c488 <ferror@plt+0x9a98>
  40c508:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c50c:	ldr	x20, [x0, #3472]
  40c510:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c514:	add	x0, x0, #0x860
  40c518:	ldr	x1, [x0, #176]
  40c51c:	add	x0, x0, #0x90
  40c520:	ldr	x0, [x0, #24]
  40c524:	sub	x0, x1, x0
  40c528:	cmp	x20, x0
  40c52c:	b.hi	40c564 <ferror@plt+0x9b74>  // b.pmore
  40c530:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c534:	add	x19, x19, #0x860
  40c538:	mov	x2, x20
  40c53c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c540:	ldr	x1, [x0, #3464]
  40c544:	ldr	x0, [x19, #168]
  40c548:	bl	402390 <memcpy@plt>
  40c54c:	ldr	x0, [x19, #168]
  40c550:	add	x20, x0, x20
  40c554:	str	x20, [x19, #168]
  40c558:	mov	w20, #0x1                   	// #1
  40c55c:	ldp	x23, x24, [sp, #48]
  40c560:	b	40ca4c <ferror@plt+0xa05c>
  40c564:	mov	x1, x20
  40c568:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c56c:	add	x0, x0, #0x860
  40c570:	add	x0, x0, #0x90
  40c574:	bl	416dc4 <_obstack_newchunk@@Base>
  40c578:	b	40c530 <ferror@plt+0x9b40>
  40c57c:	mov	x1, #0x1                   	// #1
  40c580:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c584:	add	x0, x0, #0x860
  40c588:	add	x0, x0, #0x90
  40c58c:	bl	416dc4 <_obstack_newchunk@@Base>
  40c590:	b	40c388 <ferror@plt+0x9998>
  40c594:	mov	x1, x22
  40c598:	add	x0, x20, #0x90
  40c59c:	bl	416dc4 <_obstack_newchunk@@Base>
  40c5a0:	b	40c5e0 <ferror@plt+0x9bf0>
  40c5a4:	bl	40b1bc <ferror@plt+0x87cc>
  40c5a8:	bl	40b304 <ferror@plt+0x8914>
  40c5ac:	mov	w19, w0
  40c5b0:	cmp	w0, #0x100
  40c5b4:	b.eq	40ca48 <ferror@plt+0xa058>  // b.none
  40c5b8:	ldr	x0, [x21]
  40c5bc:	ldrh	w1, [x0, w19, sxtw #1]
  40c5c0:	and	w1, w1, #0x8
  40c5c4:	cmp	w19, #0x5f
  40c5c8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40c5cc:	b.eq	40c620 <ferror@plt+0x9c30>  // b.none
  40c5d0:	ldr	x1, [x20, #176]
  40c5d4:	ldr	x0, [x20, #168]
  40c5d8:	cmp	x1, x0
  40c5dc:	b.eq	40c594 <ferror@plt+0x9ba4>  // b.none
  40c5e0:	ldr	x1, [x20, #168]
  40c5e4:	add	x2, x1, #0x1
  40c5e8:	str	x2, [x20, #168]
  40c5ec:	strb	w19, [x1]
  40c5f0:	ldr	x1, [x20]
  40c5f4:	cbz	x1, 40c5a4 <ferror@plt+0x9bb4>
  40c5f8:	ldr	w0, [x1, #8]
  40c5fc:	cbnz	w0, 40c5a4 <ferror@plt+0x9bb4>
  40c600:	ldr	x0, [x1, #32]
  40c604:	ldrb	w2, [x0]
  40c608:	cbz	w2, 40c5a4 <ferror@plt+0x9bb4>
  40c60c:	ldrb	w2, [x20, #32]
  40c610:	cbnz	w2, 40c5a4 <ferror@plt+0x9bb4>
  40c614:	add	x0, x0, #0x1
  40c618:	str	x0, [x1, #32]
  40c61c:	b	40c5a8 <ferror@plt+0x9bb8>
  40c620:	mov	w20, #0x2                   	// #2
  40c624:	b	40ca4c <ferror@plt+0xa05c>
  40c628:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c62c:	ldr	x0, [x0, #3424]
  40c630:	ldrb	w1, [x0]
  40c634:	cmp	w19, #0x0
  40c638:	ccmp	w1, w19, #0x0, ne  // ne = any
  40c63c:	b.eq	40c6a0 <ferror@plt+0x9cb0>  // b.none
  40c640:	mov	w20, #0x5                   	// #5
  40c644:	cmp	w19, #0x29
  40c648:	b.eq	40c668 <ferror@plt+0x9c78>  // b.none
  40c64c:	mov	w20, #0x4                   	// #4
  40c650:	cmp	w19, #0x2c
  40c654:	b.eq	40c668 <ferror@plt+0x9c78>  // b.none
  40c658:	cmp	w19, #0x28
  40c65c:	mov	w20, #0x6                   	// #6
  40c660:	mov	w0, #0x3                   	// #3
  40c664:	csel	w20, w20, w0, ne  // ne = any
  40c668:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c66c:	add	x0, x0, #0x860
  40c670:	ldr	x1, [x0, #176]
  40c674:	add	x0, x0, #0x90
  40c678:	ldr	x0, [x0, #24]
  40c67c:	cmp	x1, x0
  40c680:	b.eq	40c6fc <ferror@plt+0x9d0c>  // b.none
  40c684:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c688:	add	x0, x0, #0x860
  40c68c:	ldr	x1, [x0, #168]
  40c690:	add	x2, x1, #0x1
  40c694:	str	x2, [x0, #168]
  40c698:	strb	w19, [x1]
  40c69c:	b	40ca4c <ferror@plt+0xa05c>
  40c6a0:	ldrb	w1, [x0, #1]
  40c6a4:	cbnz	w1, 40c6e4 <ferror@plt+0x9cf4>
  40c6a8:	stp	x23, x24, [sp, #48]
  40c6ac:	stp	x25, x26, [sp, #64]
  40c6b0:	stp	x27, x28, [sp, #80]
  40c6b4:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c6b8:	ldr	x0, [x0, #3432]
  40c6bc:	mov	w26, #0x0                   	// #0
  40c6c0:	cmp	x0, #0x1
  40c6c4:	b.eq	40c714 <ferror@plt+0x9d24>  // b.none
  40c6c8:	mov	w21, #0x1                   	// #1
  40c6cc:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c6d0:	adrp	x24, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c6d4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40c6d8:	add	x0, x0, #0xd30
  40c6dc:	str	x0, [sp, #120]
  40c6e0:	b	40cbec <ferror@plt+0xa1fc>
  40c6e4:	mov	w1, #0x1                   	// #1
  40c6e8:	add	x0, x0, #0x1
  40c6ec:	bl	40b958 <ferror@plt+0x8f68>
  40c6f0:	and	w0, w0, #0xff
  40c6f4:	cbnz	w0, 40c6a8 <ferror@plt+0x9cb8>
  40c6f8:	b	40c640 <ferror@plt+0x9c50>
  40c6fc:	mov	x1, #0x1                   	// #1
  40c700:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c704:	add	x0, x0, #0x860
  40c708:	add	x0, x0, #0x90
  40c70c:	bl	416dc4 <_obstack_newchunk@@Base>
  40c710:	b	40c684 <ferror@plt+0x9c94>
  40c714:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c718:	ldr	x0, [x0, #3488]
  40c71c:	cmp	x0, #0x1
  40c720:	cset	w26, eq  // eq = none
  40c724:	b	40c6c8 <ferror@plt+0x9cd8>
  40c728:	cbz	x0, 40c888 <ferror@plt+0x9e98>
  40c72c:	cbnz	w26, 40c7c8 <ferror@plt+0x9dd8>
  40c730:	sub	x27, x0, x23
  40c734:	add	x0, x20, #0x860
  40c738:	ldr	x1, [x0, #176]
  40c73c:	add	x0, x0, #0x90
  40c740:	ldr	x0, [x0, #24]
  40c744:	sub	x0, x1, x0
  40c748:	cmp	x27, x0
  40c74c:	b.hi	40c874 <ferror@plt+0x9e84>  // b.pmore
  40c750:	add	x25, x20, #0x860
  40c754:	mov	x2, x27
  40c758:	mov	x1, x23
  40c75c:	ldr	x0, [x25, #168]
  40c760:	bl	402390 <memcpy@plt>
  40c764:	ldr	x0, [x25, #168]
  40c768:	add	x0, x0, x27
  40c76c:	str	x0, [x25, #168]
  40c770:	ldrb	w19, [x19]
  40c774:	ldr	x1, [x20, #2144]
  40c778:	add	x27, x27, #0x1
  40c77c:	ldr	x0, [x1, #32]
  40c780:	add	x27, x0, x27
  40c784:	str	x27, [x1, #32]
  40c788:	b	40cb8c <ferror@plt+0xa19c>
  40c78c:	subs	w21, w21, #0x1
  40c790:	b.eq	40c7c8 <ferror@plt+0x9dd8>  // b.none
  40c794:	sub	x3, x27, x0
  40c798:	ldr	w2, [sp, #100]
  40c79c:	mov	w1, w28
  40c7a0:	bl	41334c <ferror@plt+0x1095c>
  40c7a4:	mov	x19, x0
  40c7a8:	cmp	x0, #0x0
  40c7ac:	ccmp	w26, #0x0, #0x4, ne  // ne = any
  40c7b0:	b.eq	40c728 <ferror@plt+0x9d38>  // b.none
  40c7b4:	ldrb	w1, [x0], #1
  40c7b8:	cmp	w1, w25
  40c7bc:	b.eq	40c78c <ferror@plt+0x9d9c>  // b.none
  40c7c0:	adds	w21, w21, #0x1
  40c7c4:	b.ne	40c794 <ferror@plt+0x9da4>  // b.any
  40c7c8:	cbnz	w21, 40c83c <ferror@plt+0x9e4c>
  40c7cc:	sub	x19, x0, x23
  40c7d0:	sub	x21, x19, #0x1
  40c7d4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c7d8:	add	x0, x0, #0x860
  40c7dc:	ldr	x1, [x0, #176]
  40c7e0:	add	x0, x0, #0x90
  40c7e4:	ldr	x0, [x0, #24]
  40c7e8:	sub	x0, x1, x0
  40c7ec:	cmp	x21, x0
  40c7f0:	b.hi	40c85c <ferror@plt+0x9e6c>  // b.pmore
  40c7f4:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c7f8:	add	x20, x22, #0x860
  40c7fc:	mov	x2, x21
  40c800:	mov	x1, x23
  40c804:	ldr	x0, [x20, #168]
  40c808:	bl	402390 <memcpy@plt>
  40c80c:	ldr	x0, [x20, #168]
  40c810:	add	x21, x0, x21
  40c814:	str	x21, [x20, #168]
  40c818:	ldr	x1, [x22, #2144]
  40c81c:	ldr	x0, [x1, #32]
  40c820:	add	x0, x0, x19
  40c824:	str	x0, [x1, #32]
  40c828:	mov	w20, #0x1                   	// #1
  40c82c:	ldp	x23, x24, [sp, #48]
  40c830:	ldp	x25, x26, [sp, #64]
  40c834:	ldp	x27, x28, [sp, #80]
  40c838:	b	40ca4c <ferror@plt+0xa05c>
  40c83c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x206c>
  40c840:	add	x3, x3, #0xd70
  40c844:	mov	w2, #0x3cd                 	// #973
  40c848:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40c84c:	add	x1, x1, #0xd18
  40c850:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40c854:	add	x0, x0, #0xd20
  40c858:	bl	402960 <__assert_fail@plt>
  40c85c:	mov	x1, x21
  40c860:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40c864:	add	x0, x0, #0x860
  40c868:	add	x0, x0, #0x90
  40c86c:	bl	416dc4 <_obstack_newchunk@@Base>
  40c870:	b	40c7f4 <ferror@plt+0x9e04>
  40c874:	add	x0, x20, #0x860
  40c878:	mov	x1, x27
  40c87c:	add	x0, x0, #0x90
  40c880:	bl	416dc4 <_obstack_newchunk@@Base>
  40c884:	b	40c750 <ferror@plt+0x9d60>
  40c888:	sub	x27, x27, x23
  40c88c:	add	x0, x20, #0x860
  40c890:	ldr	x1, [x0, #176]
  40c894:	add	x0, x0, #0x90
  40c898:	ldr	x0, [x0, #24]
  40c89c:	sub	x0, x1, x0
  40c8a0:	cmp	x27, x0
  40c8a4:	b.hi	40c8dc <ferror@plt+0x9eec>  // b.pmore
  40c8a8:	add	x19, x20, #0x860
  40c8ac:	mov	x2, x27
  40c8b0:	mov	x1, x23
  40c8b4:	ldr	x0, [x19, #168]
  40c8b8:	bl	402390 <memcpy@plt>
  40c8bc:	ldr	x0, [x19, #168]
  40c8c0:	add	x0, x0, x27
  40c8c4:	str	x0, [x19, #168]
  40c8c8:	ldr	x1, [x20, #2144]
  40c8cc:	ldr	x0, [x1, #32]
  40c8d0:	add	x27, x0, x27
  40c8d4:	str	x27, [x1, #32]
  40c8d8:	b	40cbec <ferror@plt+0xa1fc>
  40c8dc:	add	x0, x20, #0x860
  40c8e0:	mov	x1, x27
  40c8e4:	add	x0, x0, #0x90
  40c8e8:	bl	416dc4 <_obstack_newchunk@@Base>
  40c8ec:	b	40c8a8 <ferror@plt+0x9eb8>
  40c8f0:	add	x2, x20, #0x860
  40c8f4:	ldrb	w2, [x2, #32]
  40c8f8:	cbnz	w2, 40cb7c <ferror@plt+0xa18c>
  40c8fc:	add	x2, x1, #0x1
  40c900:	str	x2, [x0, #32]
  40c904:	ldrb	w19, [x1]
  40c908:	b	40cb8c <ferror@plt+0xa19c>
  40c90c:	ldr	x4, [sp, #120]
  40c910:	ldr	w3, [x22]
  40c914:	ldr	x2, [sp, #112]
  40c918:	mov	w1, #0x0                   	// #0
  40c91c:	mov	w0, #0x1                   	// #1
  40c920:	bl	402d40 <ferror@plt+0x350>
  40c924:	b	40cbc0 <ferror@plt+0xa1d0>
  40c928:	ldrb	w1, [x0, #1]
  40c92c:	cbnz	w1, 40c980 <ferror@plt+0x9f90>
  40c930:	subs	w21, w21, #0x1
  40c934:	b.eq	40cb04 <ferror@plt+0xa114>  // b.none
  40c938:	add	x0, x24, #0xd98
  40c93c:	ldr	x23, [x0, #8]
  40c940:	add	x0, x20, #0x860
  40c944:	ldr	x1, [x0, #176]
  40c948:	add	x0, x0, #0x90
  40c94c:	ldr	x0, [x0, #24]
  40c950:	sub	x0, x1, x0
  40c954:	cmp	x23, x0
  40c958:	b.hi	40c99c <ferror@plt+0x9fac>  // b.pmore
  40c95c:	add	x19, x20, #0x860
  40c960:	mov	x2, x23
  40c964:	ldr	x1, [x24, #3480]
  40c968:	ldr	x0, [x19, #168]
  40c96c:	bl	402390 <memcpy@plt>
  40c970:	ldr	x0, [x19, #168]
  40c974:	add	x23, x0, x23
  40c978:	str	x23, [x19, #168]
  40c97c:	b	40cbec <ferror@plt+0xa1fc>
  40c980:	mov	w1, #0x1                   	// #1
  40c984:	add	x0, x0, #0x1
  40c988:	bl	40b958 <ferror@plt+0x8f68>
  40c98c:	and	w0, w0, #0xff
  40c990:	cbnz	w0, 40c930 <ferror@plt+0x9f40>
  40c994:	mov	w1, w23
  40c998:	b	40cba8 <ferror@plt+0xa1b8>
  40c99c:	add	x0, x20, #0x860
  40c9a0:	mov	x1, x23
  40c9a4:	add	x0, x0, #0x90
  40c9a8:	bl	416dc4 <_obstack_newchunk@@Base>
  40c9ac:	b	40c95c <ferror@plt+0x9f6c>
  40c9b0:	ldrb	w1, [x0, #1]
  40c9b4:	cbnz	w1, 40ca08 <ferror@plt+0xa018>
  40c9b8:	add	w21, w21, #0x1
  40c9bc:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c9c0:	ldr	x23, [x0, #3432]
  40c9c4:	add	x0, x20, #0x860
  40c9c8:	ldr	x1, [x0, #176]
  40c9cc:	add	x0, x0, #0x90
  40c9d0:	ldr	x0, [x0, #24]
  40c9d4:	sub	x0, x1, x0
  40c9d8:	cmp	x23, x0
  40c9dc:	b.hi	40ca20 <ferror@plt+0xa030>  // b.pmore
  40c9e0:	add	x19, x20, #0x860
  40c9e4:	mov	x2, x23
  40c9e8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40c9ec:	ldr	x1, [x0, #3424]
  40c9f0:	ldr	x0, [x19, #168]
  40c9f4:	bl	402390 <memcpy@plt>
  40c9f8:	ldr	x0, [x19, #168]
  40c9fc:	add	x23, x0, x23
  40ca00:	str	x23, [x19, #168]
  40ca04:	b	40cbec <ferror@plt+0xa1fc>
  40ca08:	mov	w1, #0x1                   	// #1
  40ca0c:	add	x0, x0, #0x1
  40ca10:	bl	40b958 <ferror@plt+0x8f68>
  40ca14:	and	w0, w0, #0xff
  40ca18:	cbz	w0, 40cbc0 <ferror@plt+0xa1d0>
  40ca1c:	b	40c9b8 <ferror@plt+0x9fc8>
  40ca20:	add	x0, x20, #0x860
  40ca24:	mov	x1, x23
  40ca28:	add	x0, x0, #0x90
  40ca2c:	bl	416dc4 <_obstack_newchunk@@Base>
  40ca30:	b	40c9e0 <ferror@plt+0x9ff0>
  40ca34:	add	x0, x20, #0x860
  40ca38:	mov	x1, #0x1                   	// #1
  40ca3c:	add	x0, x0, #0x90
  40ca40:	bl	416dc4 <_obstack_newchunk@@Base>
  40ca44:	b	40cbd8 <ferror@plt+0xa1e8>
  40ca48:	mov	w20, #0x2                   	// #2
  40ca4c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ca50:	add	x0, x0, #0x860
  40ca54:	ldr	x1, [x0, #176]
  40ca58:	add	x0, x0, #0x90
  40ca5c:	ldr	x0, [x0, #24]
  40ca60:	cmp	x1, x0
  40ca64:	b.eq	40cb18 <ferror@plt+0xa128>  // b.none
  40ca68:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ca6c:	add	x0, x0, #0x860
  40ca70:	ldr	x1, [x0, #168]
  40ca74:	add	x2, x1, #0x1
  40ca78:	str	x2, [x0, #168]
  40ca7c:	strb	wzr, [x1]
  40ca80:	mov	w1, #0x1                   	// #1
  40ca84:	ldr	x2, [sp, #104]
  40ca88:	str	w1, [x2]
  40ca8c:	ldr	x3, [x0, #160]
  40ca90:	ldr	x2, [x0, #168]
  40ca94:	cmp	x2, x3
  40ca98:	b.eq	40cb30 <ferror@plt+0xa140>  // b.none
  40ca9c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40caa0:	add	x0, x0, #0x860
  40caa4:	ldr	x1, [x0, #192]
  40caa8:	add	x2, x2, x1
  40caac:	bic	x1, x2, x1
  40cab0:	str	x1, [x0, #168]
  40cab4:	ldr	x2, [x0, #152]
  40cab8:	add	x0, x0, #0x90
  40cabc:	ldr	x0, [x0, #32]
  40cac0:	sub	x1, x1, x2
  40cac4:	sub	x2, x0, x2
  40cac8:	cmp	x1, x2
  40cacc:	b.ls	40cad8 <ferror@plt+0xa0e8>  // b.plast
  40cad0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40cad4:	str	x0, [x1, #2312]
  40cad8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40cadc:	add	x0, x0, #0x860
  40cae0:	ldr	x1, [x0, #168]
  40cae4:	str	x1, [x0, #160]
  40cae8:	ldr	x0, [sp, #104]
  40caec:	str	x3, [x0, #8]
  40caf0:	mov	w0, w20
  40caf4:	ldp	x19, x20, [sp, #16]
  40caf8:	ldp	x21, x22, [sp, #32]
  40cafc:	ldp	x29, x30, [sp], #144
  40cb00:	ret
  40cb04:	mov	w20, #0x1                   	// #1
  40cb08:	ldp	x23, x24, [sp, #48]
  40cb0c:	ldp	x25, x26, [sp, #64]
  40cb10:	ldp	x27, x28, [sp, #80]
  40cb14:	b	40ca4c <ferror@plt+0xa05c>
  40cb18:	mov	x1, #0x1                   	// #1
  40cb1c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40cb20:	add	x0, x0, #0x860
  40cb24:	add	x0, x0, #0x90
  40cb28:	bl	416dc4 <_obstack_newchunk@@Base>
  40cb2c:	b	40ca68 <ferror@plt+0xa078>
  40cb30:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40cb34:	add	x0, x0, #0x860
  40cb38:	ldrb	w1, [x0, #224]
  40cb3c:	orr	w1, w1, #0x2
  40cb40:	strb	w1, [x0, #224]
  40cb44:	b	40ca9c <ferror@plt+0xa0ac>
  40cb48:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x206c>
  40cb4c:	add	x4, x4, #0xd50
  40cb50:	ldr	w3, [x22]
  40cb54:	ldr	x2, [sp, #112]
  40cb58:	mov	w1, #0x0                   	// #0
  40cb5c:	mov	w0, #0x1                   	// #1
  40cb60:	bl	402d40 <ferror@plt+0x350>
  40cb64:	mov	w20, #0x1                   	// #1
  40cb68:	ldp	x23, x24, [sp, #48]
  40cb6c:	b	40ca4c <ferror@plt+0xa05c>
  40cb70:	ldr	x1, [x0, #32]
  40cb74:	ldrb	w2, [x1]
  40cb78:	cbnz	w2, 40c8f0 <ferror@plt+0x9f00>
  40cb7c:	bl	40b1bc <ferror@plt+0x87cc>
  40cb80:	mov	w19, w0
  40cb84:	cmp	w0, #0x100
  40cb88:	b.eq	40c90c <ferror@plt+0x9f1c>  // b.none
  40cb8c:	ldr	x0, [x24, #3480]
  40cb90:	cmp	w19, #0x0
  40cb94:	cset	w1, ne  // ne = any
  40cb98:	ldrb	w2, [x0]
  40cb9c:	cmp	w2, w19
  40cba0:	csel	w23, w1, wzr, eq  // eq = none
  40cba4:	cbnz	w23, 40c928 <ferror@plt+0x9f38>
  40cba8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40cbac:	ldr	x0, [x0, #3424]
  40cbb0:	ldrb	w2, [x0]
  40cbb4:	cmp	w1, #0x0
  40cbb8:	ccmp	w2, w19, #0x0, ne  // ne = any
  40cbbc:	b.eq	40c9b0 <ferror@plt+0x9fc0>  // b.none
  40cbc0:	add	x0, x20, #0x860
  40cbc4:	ldr	x1, [x0, #176]
  40cbc8:	add	x0, x0, #0x90
  40cbcc:	ldr	x0, [x0, #24]
  40cbd0:	cmp	x1, x0
  40cbd4:	b.eq	40ca34 <ferror@plt+0xa044>  // b.none
  40cbd8:	add	x0, x20, #0x860
  40cbdc:	ldr	x1, [x0, #168]
  40cbe0:	add	x2, x1, #0x1
  40cbe4:	str	x2, [x0, #168]
  40cbe8:	strb	w19, [x1]
  40cbec:	ldr	x0, [x20, #2144]
  40cbf0:	cbz	x0, 40cb7c <ferror@plt+0xa18c>
  40cbf4:	ldr	w1, [x0, #8]
  40cbf8:	cbnz	w1, 40cb7c <ferror@plt+0xa18c>
  40cbfc:	ldr	x23, [x0, #32]
  40cc00:	cbz	x23, 40cb70 <ferror@plt+0xa180>
  40cc04:	ldrb	w1, [x23]
  40cc08:	cbz	w1, 40cb70 <ferror@plt+0xa180>
  40cc0c:	ldr	x27, [x0, #40]
  40cc10:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40cc14:	ldr	x0, [x0, #3424]
  40cc18:	ldrb	w28, [x0]
  40cc1c:	ldr	x0, [x24, #3480]
  40cc20:	ldrb	w25, [x0]
  40cc24:	str	w25, [sp, #100]
  40cc28:	mov	x0, x23
  40cc2c:	b	40c794 <ferror@plt+0x9da4>
  40cc30:	stp	x29, x30, [sp, #-32]!
  40cc34:	mov	x29, sp
  40cc38:	stp	x19, x20, [sp, #16]
  40cc3c:	bl	40b304 <ferror@plt+0x8914>
  40cc40:	mov	w19, w0
  40cc44:	mov	w0, #0x0                   	// #0
  40cc48:	cmp	w19, #0x100
  40cc4c:	b.eq	40ccdc <ferror@plt+0xa2ec>  // b.none
  40cc50:	mov	w0, #0x7                   	// #7
  40cc54:	cmp	w19, #0x101
  40cc58:	b.eq	40ccdc <ferror@plt+0xa2ec>  // b.none
  40cc5c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40cc60:	ldr	x2, [x0, #3448]
  40cc64:	cmp	w19, #0x0
  40cc68:	cset	w20, ne  // ne = any
  40cc6c:	ldrb	w0, [x2]
  40cc70:	cmp	w20, #0x0
  40cc74:	ccmp	w0, w19, #0x0, ne  // ne = any
  40cc78:	b.eq	40cce8 <ferror@plt+0xa2f8>  // b.none
  40cc7c:	bl	4027c0 <__ctype_b_loc@plt>
  40cc80:	ldr	x0, [x0]
  40cc84:	ldrh	w1, [x0, w19, sxtw #1]
  40cc88:	and	w1, w1, #0x400
  40cc8c:	cmp	w19, #0x5f
  40cc90:	mov	w0, #0x2                   	// #2
  40cc94:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40cc98:	b.ne	40ccdc <ferror@plt+0xa2ec>  // b.any
  40cc9c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40cca0:	ldr	x2, [x0, #3424]
  40cca4:	ldrb	w0, [x2]
  40cca8:	cmp	w20, #0x0
  40ccac:	ccmp	w0, w19, #0x0, ne  // ne = any
  40ccb0:	b.eq	40cd10 <ferror@plt+0xa320>  // b.none
  40ccb4:	mov	w0, #0x5                   	// #5
  40ccb8:	cmp	w19, #0x29
  40ccbc:	b.eq	40ccdc <ferror@plt+0xa2ec>  // b.none
  40ccc0:	mov	w0, #0x4                   	// #4
  40ccc4:	cmp	w19, #0x2c
  40ccc8:	b.eq	40ccdc <ferror@plt+0xa2ec>  // b.none
  40cccc:	cmp	w19, #0x28
  40ccd0:	mov	w0, #0x6                   	// #6
  40ccd4:	mov	w1, #0x3                   	// #3
  40ccd8:	csel	w0, w0, w1, ne  // ne = any
  40ccdc:	ldp	x19, x20, [sp, #16]
  40cce0:	ldp	x29, x30, [sp], #32
  40cce4:	ret
  40cce8:	ldrb	w1, [x2, #1]
  40ccec:	mov	w0, #0x1                   	// #1
  40ccf0:	cbz	w1, 40ccdc <ferror@plt+0xa2ec>
  40ccf4:	mov	w1, #0x0                   	// #0
  40ccf8:	mov	x0, x2
  40ccfc:	bl	40b958 <ferror@plt+0x8f68>
  40cd00:	and	w1, w0, #0xff
  40cd04:	mov	w0, #0x1                   	// #1
  40cd08:	cbnz	w1, 40ccdc <ferror@plt+0xa2ec>
  40cd0c:	b	40cc7c <ferror@plt+0xa28c>
  40cd10:	ldrb	w1, [x2, #1]
  40cd14:	mov	w0, #0x1                   	// #1
  40cd18:	cbz	w1, 40ccdc <ferror@plt+0xa2ec>
  40cd1c:	mov	w1, #0x0                   	// #0
  40cd20:	mov	x0, x2
  40cd24:	bl	40b958 <ferror@plt+0x8f68>
  40cd28:	and	w1, w0, #0xff
  40cd2c:	mov	w0, #0x1                   	// #1
  40cd30:	cbnz	w1, 40ccdc <ferror@plt+0xa2ec>
  40cd34:	b	40ccb4 <ferror@plt+0xa2c4>
  40cd38:	stp	x29, x30, [sp, #-16]!
  40cd3c:	mov	x29, sp
  40cd40:	mov	x4, x0
  40cd44:	mov	x0, x3
  40cd48:	ldr	w3, [x4, #24]
  40cd4c:	cmp	w3, #0x1
  40cd50:	b.eq	40cd6c <ferror@plt+0xa37c>  // b.none
  40cd54:	cmp	w3, #0x2
  40cd58:	b.ne	40cd80 <ferror@plt+0xa390>  // b.any
  40cd5c:	ldr	x3, [x4, #32]
  40cd60:	blr	x3
  40cd64:	ldp	x29, x30, [sp], #16
  40cd68:	ret
  40cd6c:	mov	x3, x2
  40cd70:	mov	w2, w1
  40cd74:	mov	x1, x4
  40cd78:	bl	4079f4 <ferror@plt+0x5004>
  40cd7c:	b	40cd64 <ferror@plt+0xa374>
  40cd80:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40cd84:	add	x2, x2, #0xd80
  40cd88:	mov	w1, #0x0                   	// #0
  40cd8c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40cd90:	ldr	w0, [x0, #1644]
  40cd94:	bl	402c80 <ferror@plt+0x290>
  40cd98:	bl	402720 <abort@plt>
  40cd9c:	stp	x29, x30, [sp, #-272]!
  40cda0:	mov	x29, sp
  40cda4:	stp	x19, x20, [sp, #16]
  40cda8:	stp	x21, x22, [sp, #32]
  40cdac:	mov	x21, x0
  40cdb0:	mov	x19, x2
  40cdb4:	mov	w20, w3
  40cdb8:	cmp	w1, #0x2
  40cdbc:	b.eq	40ce34 <ferror@plt+0xa444>  // b.none
  40cdc0:	b.hi	40cdec <ferror@plt+0xa3fc>  // b.pmore
  40cdc4:	cbz	w1, 40cdfc <ferror@plt+0xa40c>
  40cdc8:	ldr	x19, [x19, #8]
  40cdcc:	mov	x0, x19
  40cdd0:	bl	4023d0 <strlen@plt>
  40cdd4:	mov	w3, w20
  40cdd8:	mov	w2, w0
  40cddc:	mov	x1, x19
  40cde0:	mov	x0, x21
  40cde4:	bl	40e0d8 <ferror@plt+0xb6e8>
  40cde8:	b	40cdfc <ferror@plt+0xa40c>
  40cdec:	cmp	w1, #0x6
  40cdf0:	b.ls	40cdc8 <ferror@plt+0xa3d8>  // b.plast
  40cdf4:	cmp	w1, #0x7
  40cdf8:	b.ne	40ce0c <ferror@plt+0xa41c>  // b.any
  40cdfc:	ldp	x19, x20, [sp, #16]
  40ce00:	ldp	x21, x22, [sp, #32]
  40ce04:	ldp	x29, x30, [sp], #272
  40ce08:	ret
  40ce0c:	stp	x23, x24, [sp, #48]
  40ce10:	stp	x25, x26, [sp, #64]
  40ce14:	stp	x27, x28, [sp, #80]
  40ce18:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40ce1c:	add	x2, x2, #0xe50
  40ce20:	mov	w1, #0x0                   	// #0
  40ce24:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ce28:	ldr	w0, [x0, #1644]
  40ce2c:	bl	402c80 <ferror@plt+0x290>
  40ce30:	bl	402720 <abort@plt>
  40ce34:	stp	x23, x24, [sp, #48]
  40ce38:	mov	w1, #0x0                   	// #0
  40ce3c:	ldr	x0, [x2, #8]
  40ce40:	bl	40f714 <ferror@plt+0xcd24>
  40ce44:	mov	x23, x0
  40ce48:	cbz	x0, 40d0ec <ferror@plt+0xa6fc>
  40ce4c:	ldr	w0, [x0, #24]
  40ce50:	cbz	w0, 40d0ec <ferror@plt+0xa6fc>
  40ce54:	cmp	w0, #0x2
  40ce58:	b.ne	40ce64 <ferror@plt+0xa474>  // b.any
  40ce5c:	ldrb	w0, [x23, #8]
  40ce60:	tbnz	w0, #3, 40d0e0 <ferror@plt+0xa6f0>
  40ce64:	stp	x27, x28, [sp, #80]
  40ce68:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40ce6c:	ldr	x0, [x0, #3440]
  40ce70:	str	x0, [sp, #120]
  40ce74:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40ce78:	ldr	w0, [x0, #3416]
  40ce7c:	str	w0, [sp, #136]
  40ce80:	ldr	w0, [x23, #12]
  40ce84:	add	w0, w0, #0x1
  40ce88:	str	w0, [x23, #12]
  40ce8c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ce90:	add	x1, x1, #0x950
  40ce94:	ldr	w0, [x1, #88]
  40ce98:	add	w0, w0, #0x1
  40ce9c:	str	w0, [x1, #88]
  40cea0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40cea4:	ldr	w3, [x1, #848]
  40cea8:	cmp	w3, #0x0
  40ceac:	ccmp	w0, w3, #0x4, gt
  40ceb0:	b.gt	40d114 <ferror@plt+0xa724>
  40ceb4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ceb8:	add	x0, x0, #0x950
  40cebc:	ldr	w1, [x0, #92]
  40cec0:	add	w1, w1, #0x1
  40cec4:	str	w1, [sp, #140]
  40cec8:	str	w1, [x0, #92]
  40cecc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ced0:	ldr	w1, [x0, #1660]
  40ced4:	mov	w0, #0x1                   	// #1
  40ced8:	tbnz	w1, #3, 40cee4 <ferror@plt+0xa4f4>
  40cedc:	ldrb	w0, [x23, #8]
  40cee0:	and	w0, w0, #0x1
  40cee4:	mov	w19, w0
  40cee8:	str	w0, [sp, #112]
  40ceec:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40cef0:	add	x0, x0, #0x950
  40cef4:	ldr	x28, [x0, #120]
  40cef8:	ldr	x1, [x0, #112]
  40cefc:	sub	x28, x28, x1
  40cf00:	ldr	x1, [x0, #24]
  40cf04:	ldr	x0, [x0, #16]
  40cf08:	cmp	x1, x0
  40cf0c:	b.eq	40d538 <ferror@plt+0xab48>  // b.none
  40cf10:	adrp	x4, 402000 <mbrtowc@plt-0x380>
  40cf14:	add	x4, x4, #0x810
  40cf18:	adrp	x3, 416000 <ferror@plt+0x13610>
  40cf1c:	add	x3, x3, #0x7c
  40cf20:	mov	x2, #0x0                   	// #0
  40cf24:	mov	x1, #0x0                   	// #0
  40cf28:	add	x0, sp, #0xb8
  40cf2c:	bl	416d70 <_obstack_begin@@Base>
  40cf30:	cbnz	w19, 40d570 <ferror@plt+0xab80>
  40cf34:	str	w19, [sp, #116]
  40cf38:	add	x20, sp, #0xb8
  40cf3c:	ldrb	w0, [x23, #8]
  40cf40:	ubfx	x0, x0, #2, #1
  40cf44:	str	x0, [sp, #104]
  40cf48:	mov	w0, #0x1                   	// #1
  40cf4c:	str	w0, [sp, #152]
  40cf50:	ldr	x0, [x23, #16]
  40cf54:	str	x0, [sp, #160]
  40cf58:	ldr	x0, [x20, #32]
  40cf5c:	ldr	x1, [x20, #24]
  40cf60:	sub	x0, x0, x1
  40cf64:	cmp	x0, #0xf
  40cf68:	b.ls	40d164 <ferror@plt+0xa774>  // b.plast
  40cf6c:	ldr	x0, [x20, #24]
  40cf70:	ldp	x2, x3, [sp, #152]
  40cf74:	stp	x2, x3, [x0]
  40cf78:	ldr	x1, [x20, #24]
  40cf7c:	add	x1, x1, #0x10
  40cf80:	ldr	x19, [x20, #16]
  40cf84:	cmp	x1, x19
  40cf88:	b.eq	40d174 <ferror@plt+0xa784>  // b.none
  40cf8c:	ldr	x0, [x20, #48]
  40cf90:	add	x1, x1, x0
  40cf94:	bic	x0, x1, x0
  40cf98:	ldr	x1, [x20, #8]
  40cf9c:	ldr	x2, [x20, #32]
  40cfa0:	sub	x3, x0, x1
  40cfa4:	sub	x1, x2, x1
  40cfa8:	cmp	x3, x1
  40cfac:	csel	x0, x0, x2, ls  // ls = plast
  40cfb0:	str	x0, [x20, #24]
  40cfb4:	str	x0, [x20, #16]
  40cfb8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40cfbc:	add	x0, x0, #0x950
  40cfc0:	ldr	x1, [x0, #128]
  40cfc4:	add	x0, x0, #0x60
  40cfc8:	ldr	x0, [x0, #24]
  40cfcc:	sub	x0, x1, x0
  40cfd0:	cmp	x0, #0x7
  40cfd4:	b.ls	40d184 <ferror@plt+0xa794>  // b.plast
  40cfd8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40cfdc:	add	x0, x0, #0x950
  40cfe0:	ldr	x1, [x0, #120]
  40cfe4:	str	x19, [x1]
  40cfe8:	ldr	x1, [x0, #120]
  40cfec:	add	x1, x1, #0x8
  40cff0:	str	x1, [x0, #120]
  40cff4:	bl	40cc30 <ferror@plt+0xa240>
  40cff8:	cmp	w0, #0x3
  40cffc:	b.eq	40d19c <ferror@plt+0xa7ac>  // b.none
  40d000:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d004:	add	x0, x0, #0x950
  40d008:	ldr	x20, [x0, #112]
  40d00c:	and	x24, x28, #0xffffffff
  40d010:	ldr	x19, [x0, #120]
  40d014:	sub	x19, x19, x20
  40d018:	sub	x19, x19, w28, uxtw
  40d01c:	lsr	x19, x19, #3
  40d020:	add	x28, x20, w28, uxtw
  40d024:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40d028:	ldr	x21, [x1, #3440]
  40d02c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40d030:	ldr	w22, [x0, #3416]
  40d034:	ldr	x2, [sp, #120]
  40d038:	str	x2, [x1, #3440]
  40d03c:	ldr	w1, [sp, #136]
  40d040:	str	w1, [x0, #3416]
  40d044:	ldr	w0, [sp, #112]
  40d048:	cbnz	w0, 40d498 <ferror@plt+0xaaa8>
  40d04c:	bl	40b734 <ferror@plt+0x8d44>
  40d050:	mov	x3, x0
  40d054:	mov	x2, x28
  40d058:	mov	w1, w19
  40d05c:	mov	x0, x23
  40d060:	bl	40cd38 <ferror@plt+0xa348>
  40d064:	bl	40b81c <ferror@plt+0x8e2c>
  40d068:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40d06c:	str	x21, [x0, #3440]
  40d070:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40d074:	str	w22, [x0, #3416]
  40d078:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d07c:	add	x0, x0, #0x950
  40d080:	ldr	w1, [x0, #88]
  40d084:	sub	w1, w1, #0x1
  40d088:	str	w1, [x0, #88]
  40d08c:	ldr	w0, [x23, #12]
  40d090:	sub	w0, w0, #0x1
  40d094:	str	w0, [x23, #12]
  40d098:	ldrb	w0, [x23, #8]
  40d09c:	tbnz	w0, #4, 40d4ec <ferror@plt+0xaafc>
  40d0a0:	ldr	w0, [sp, #116]
  40d0a4:	cbz	w0, 40d528 <ferror@plt+0xab38>
  40d0a8:	ldr	x1, [x20, x24]
  40d0ac:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d0b0:	ldr	x0, [x0, #2392]
  40d0b4:	cmp	x1, x0
  40d0b8:	b.ls	40d4f8 <ferror@plt+0xab08>  // b.plast
  40d0bc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d0c0:	ldr	x0, [x0, #2416]
  40d0c4:	cmp	x1, x0
  40d0c8:	b.cs	40d4f8 <ferror@plt+0xab08>  // b.hs, b.nlast
  40d0cc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d0d0:	add	x0, x0, #0x950
  40d0d4:	str	x1, [x0, #16]
  40d0d8:	str	x1, [x0, #24]
  40d0dc:	b	40d504 <ferror@plt+0xab14>
  40d0e0:	bl	40cc30 <ferror@plt+0xa240>
  40d0e4:	cmp	w0, #0x3
  40d0e8:	b.eq	40ce64 <ferror@plt+0xa474>  // b.none
  40d0ec:	ldr	x19, [x19, #8]
  40d0f0:	mov	x0, x19
  40d0f4:	bl	4023d0 <strlen@plt>
  40d0f8:	mov	w3, w20
  40d0fc:	mov	w2, w0
  40d100:	mov	x1, x19
  40d104:	mov	x0, x21
  40d108:	bl	40e0d8 <ferror@plt+0xb6e8>
  40d10c:	ldp	x23, x24, [sp, #48]
  40d110:	b	40cdfc <ferror@plt+0xa40c>
  40d114:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40d118:	add	x2, x2, #0xdb8
  40d11c:	mov	w1, #0x0                   	// #0
  40d120:	mov	w0, #0x1                   	// #1
  40d124:	bl	402c80 <ferror@plt+0x290>
  40d128:	b	40ceb4 <ferror@plt+0xa4c4>
  40d12c:	ldr	w0, [sp, #112]
  40d130:	str	w0, [sp, #116]
  40d134:	b	40d13c <ferror@plt+0xa74c>
  40d138:	str	wzr, [sp, #116]
  40d13c:	ldr	w1, [sp, #140]
  40d140:	ldr	x0, [x23, #16]
  40d144:	bl	408644 <ferror@plt+0x5c54>
  40d148:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d14c:	add	x20, x20, #0x950
  40d150:	ldr	w0, [sp, #116]
  40d154:	cmp	w0, #0x0
  40d158:	add	x0, sp, #0xb8
  40d15c:	csel	x20, x20, x0, ne  // ne = any
  40d160:	b	40cf3c <ferror@plt+0xa54c>
  40d164:	mov	x1, #0x10                  	// #16
  40d168:	mov	x0, x20
  40d16c:	bl	416dc4 <_obstack_newchunk@@Base>
  40d170:	b	40cf6c <ferror@plt+0xa57c>
  40d174:	ldrb	w0, [x20, #80]
  40d178:	orr	w0, w0, #0x2
  40d17c:	strb	w0, [x20, #80]
  40d180:	b	40cf8c <ferror@plt+0xa59c>
  40d184:	mov	x1, #0x8                   	// #8
  40d188:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d18c:	add	x0, x0, #0x950
  40d190:	add	x0, x0, #0x60
  40d194:	bl	416dc4 <_obstack_newchunk@@Base>
  40d198:	b	40cfd8 <ferror@plt+0xa5e8>
  40d19c:	stp	x25, x26, [sp, #64]
  40d1a0:	mov	x1, #0x0                   	// #0
  40d1a4:	add	x0, sp, #0x98
  40d1a8:	bl	40c188 <ferror@plt+0x9798>
  40d1ac:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40d1b0:	add	x0, x0, #0xd58
  40d1b4:	str	x0, [sp, #128]
  40d1b8:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x206c>
  40d1bc:	add	x26, x26, #0xdf0
  40d1c0:	b	40d390 <ferror@plt+0xa9a0>
  40d1c4:	cmp	w19, #0x6
  40d1c8:	b.eq	40d1f8 <ferror@plt+0xa808>  // b.none
  40d1cc:	cmp	w19, #0x7
  40d1d0:	b.ne	40d424 <ferror@plt+0xaa34>  // b.any
  40d1d4:	ldr	x1, [x20, #24]
  40d1d8:	ldr	x0, [x20, #16]
  40d1dc:	cmp	x1, x0
  40d1e0:	b.ne	40d228 <ferror@plt+0xa838>  // b.any
  40d1e4:	str	w27, [sp, #152]
  40d1e8:	ldr	x0, [sp, #176]
  40d1ec:	str	x0, [sp, #160]
  40d1f0:	b	40d228 <ferror@plt+0xa838>
  40d1f4:	cbz	w21, 40d270 <ferror@plt+0xa880>
  40d1f8:	ldr	x0, [sp, #176]
  40d1fc:	ldrb	w0, [x0]
  40d200:	cmp	w0, #0x28
  40d204:	b.eq	40d404 <ferror@plt+0xaa14>  // b.none
  40d208:	cmp	w0, #0x29
  40d20c:	cset	w0, eq  // eq = none
  40d210:	sub	w21, w21, w0
  40d214:	mov	w3, w22
  40d218:	add	x2, sp, #0xa8
  40d21c:	mov	w1, w19
  40d220:	mov	x0, x20
  40d224:	bl	40cd9c <ferror@plt+0xa3ac>
  40d228:	mov	x1, #0x0                   	// #0
  40d22c:	add	x0, sp, #0xa8
  40d230:	bl	40c188 <ferror@plt+0x9798>
  40d234:	mov	w19, w0
  40d238:	cmp	w19, #0x5
  40d23c:	b.hi	40d1c4 <ferror@plt+0xa7d4>  // b.pmore
  40d240:	cmp	w19, #0x3
  40d244:	b.hi	40d1f4 <ferror@plt+0xa804>  // b.pmore
  40d248:	cmp	w19, #0x2
  40d24c:	b.hi	40d1f8 <ferror@plt+0xa808>  // b.pmore
  40d250:	cbnz	w19, 40d40c <ferror@plt+0xaa1c>
  40d254:	mov	x4, x26
  40d258:	mov	w3, w22
  40d25c:	mov	x2, x25
  40d260:	mov	w1, #0x0                   	// #0
  40d264:	mov	w0, w24
  40d268:	bl	402d40 <ferror@plt+0x350>
  40d26c:	b	40d228 <ferror@plt+0xa838>
  40d270:	ldr	x1, [x20, #32]
  40d274:	ldr	x0, [x20, #24]
  40d278:	cmp	x1, x0
  40d27c:	b.eq	40d3e4 <ferror@plt+0xa9f4>  // b.none
  40d280:	ldr	x0, [x20, #24]
  40d284:	add	x1, x0, #0x1
  40d288:	str	x1, [x20, #24]
  40d28c:	strb	wzr, [x0]
  40d290:	ldr	x3, [x20, #16]
  40d294:	ldr	x1, [x20, #24]
  40d298:	cmp	x3, x1
  40d29c:	b.eq	40d3f4 <ferror@plt+0xaa04>  // b.none
  40d2a0:	ldr	x0, [x20, #48]
  40d2a4:	add	x1, x1, x0
  40d2a8:	bic	x0, x1, x0
  40d2ac:	ldr	x2, [x20, #8]
  40d2b0:	ldr	x1, [x20, #32]
  40d2b4:	sub	x4, x0, x2
  40d2b8:	sub	x2, x1, x2
  40d2bc:	cmp	x4, x2
  40d2c0:	csel	x0, x0, x1, ls  // ls = plast
  40d2c4:	str	x0, [x20, #24]
  40d2c8:	str	x0, [x20, #16]
  40d2cc:	ldr	w2, [sp, #152]
  40d2d0:	cbnz	w2, 40d2e0 <ferror@plt+0xa8f0>
  40d2d4:	mov	w2, #0x1                   	// #1
  40d2d8:	str	w2, [sp, #152]
  40d2dc:	str	x3, [sp, #160]
  40d2e0:	ldr	w2, [sp, #104]
  40d2e4:	cbnz	w2, 40d2f4 <ferror@plt+0xa904>
  40d2e8:	ldr	w2, [sp, #152]
  40d2ec:	cmp	w2, #0x2
  40d2f0:	b.eq	40d440 <ferror@plt+0xaa50>  // b.none
  40d2f4:	sub	x0, x1, x0
  40d2f8:	cmp	x0, #0xf
  40d2fc:	b.ls	40d458 <ferror@plt+0xaa68>  // b.plast
  40d300:	ldr	x0, [x20, #24]
  40d304:	ldp	x2, x3, [sp, #152]
  40d308:	stp	x2, x3, [x0]
  40d30c:	ldr	x1, [x20, #24]
  40d310:	add	x1, x1, #0x10
  40d314:	ldr	x21, [x20, #16]
  40d318:	cmp	x1, x21
  40d31c:	b.eq	40d468 <ferror@plt+0xaa78>  // b.none
  40d320:	ldr	x0, [x20, #48]
  40d324:	add	x1, x1, x0
  40d328:	bic	x0, x1, x0
  40d32c:	ldr	x1, [x20, #8]
  40d330:	ldr	x2, [x20, #32]
  40d334:	sub	x3, x0, x1
  40d338:	sub	x1, x2, x1
  40d33c:	cmp	x3, x1
  40d340:	csel	x0, x0, x2, ls  // ls = plast
  40d344:	str	x0, [x20, #24]
  40d348:	str	x0, [x20, #16]
  40d34c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d350:	add	x0, x0, #0x950
  40d354:	ldr	x1, [x0, #128]
  40d358:	add	x0, x0, #0x60
  40d35c:	ldr	x0, [x0, #24]
  40d360:	sub	x0, x1, x0
  40d364:	cmp	x0, #0x7
  40d368:	b.ls	40d478 <ferror@plt+0xaa88>  // b.plast
  40d36c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d370:	add	x0, x0, #0x950
  40d374:	ldr	x1, [x0, #120]
  40d378:	str	x21, [x1]
  40d37c:	ldr	x1, [x0, #120]
  40d380:	add	x1, x1, #0x8
  40d384:	str	x1, [x0, #120]
  40d388:	cmp	w19, #0x4
  40d38c:	b.ne	40d490 <ferror@plt+0xaaa0>  // b.any
  40d390:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40d394:	ldr	x25, [x0, #3440]
  40d398:	ldr	x0, [sp, #128]
  40d39c:	ldr	w22, [x0]
  40d3a0:	str	wzr, [sp, #152]
  40d3a4:	mov	x1, #0x0                   	// #0
  40d3a8:	add	x0, sp, #0xa8
  40d3ac:	bl	40c188 <ferror@plt+0x9798>
  40d3b0:	mov	w19, w0
  40d3b4:	cmp	w0, #0x6
  40d3b8:	b.ne	40d3d4 <ferror@plt+0xa9e4>  // b.any
  40d3bc:	bl	4027c0 <__ctype_b_loc@plt>
  40d3c0:	ldr	x1, [sp, #176]
  40d3c4:	ldrb	w1, [x1]
  40d3c8:	ldr	x0, [x0]
  40d3cc:	ldrh	w0, [x0, x1, lsl #1]
  40d3d0:	tbnz	w0, #13, 40d3a4 <ferror@plt+0xa9b4>
  40d3d4:	mov	w21, #0x0                   	// #0
  40d3d8:	mov	w27, #0x2                   	// #2
  40d3dc:	mov	w24, #0x1                   	// #1
  40d3e0:	b	40d238 <ferror@plt+0xa848>
  40d3e4:	mov	x1, #0x1                   	// #1
  40d3e8:	mov	x0, x20
  40d3ec:	bl	416dc4 <_obstack_newchunk@@Base>
  40d3f0:	b	40d280 <ferror@plt+0xa890>
  40d3f4:	ldrb	w0, [x20, #80]
  40d3f8:	orr	w0, w0, #0x2
  40d3fc:	strb	w0, [x20, #80]
  40d400:	b	40d2a0 <ferror@plt+0xa8b0>
  40d404:	add	w21, w21, #0x1
  40d408:	b	40d214 <ferror@plt+0xa824>
  40d40c:	mov	w3, w22
  40d410:	add	x2, sp, #0xa8
  40d414:	mov	w1, w19
  40d418:	mov	x0, x20
  40d41c:	bl	40cd9c <ferror@plt+0xa3ac>
  40d420:	b	40d228 <ferror@plt+0xa838>
  40d424:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40d428:	add	x2, x2, #0xe18
  40d42c:	mov	w1, #0x0                   	// #0
  40d430:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d434:	ldr	w0, [x0, #1644]
  40d438:	bl	402c80 <ferror@plt+0x290>
  40d43c:	bl	402720 <abort@plt>
  40d440:	mov	w2, #0x1                   	// #1
  40d444:	str	w2, [sp, #152]
  40d448:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  40d44c:	add	x2, x2, #0x6c0
  40d450:	str	x2, [sp, #160]
  40d454:	b	40d2f4 <ferror@plt+0xa904>
  40d458:	mov	x1, #0x10                  	// #16
  40d45c:	mov	x0, x20
  40d460:	bl	416dc4 <_obstack_newchunk@@Base>
  40d464:	b	40d300 <ferror@plt+0xa910>
  40d468:	ldrb	w0, [x20, #80]
  40d46c:	orr	w0, w0, #0x2
  40d470:	strb	w0, [x20, #80]
  40d474:	b	40d320 <ferror@plt+0xa930>
  40d478:	mov	x1, #0x8                   	// #8
  40d47c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d480:	add	x0, x0, #0x950
  40d484:	add	x0, x0, #0x60
  40d488:	bl	416dc4 <_obstack_newchunk@@Base>
  40d48c:	b	40d36c <ferror@plt+0xa97c>
  40d490:	ldp	x25, x26, [sp, #64]
  40d494:	b	40d000 <ferror@plt+0xa610>
  40d498:	stp	x25, x26, [sp, #64]
  40d49c:	mov	x3, x28
  40d4a0:	mov	w2, w19
  40d4a4:	ldr	w25, [sp, #140]
  40d4a8:	mov	w1, w25
  40d4ac:	ldr	x0, [x23, #16]
  40d4b0:	bl	40867c <ferror@plt+0x5c8c>
  40d4b4:	bl	40b734 <ferror@plt+0x8d44>
  40d4b8:	mov	x3, x0
  40d4bc:	mov	x2, x28
  40d4c0:	mov	w1, w19
  40d4c4:	mov	x0, x23
  40d4c8:	bl	40cd38 <ferror@plt+0xa348>
  40d4cc:	bl	40b81c <ferror@plt+0x8e2c>
  40d4d0:	mov	x3, x0
  40d4d4:	mov	w2, w19
  40d4d8:	mov	w1, w25
  40d4dc:	ldr	x0, [x23, #16]
  40d4e0:	bl	4087d4 <ferror@plt+0x5de4>
  40d4e4:	ldp	x25, x26, [sp, #64]
  40d4e8:	b	40d068 <ferror@plt+0xa678>
  40d4ec:	mov	x0, x23
  40d4f0:	bl	40f6b4 <ferror@plt+0xccc4>
  40d4f4:	b	40d0a0 <ferror@plt+0xa6b0>
  40d4f8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d4fc:	add	x0, x0, #0x950
  40d500:	bl	416f14 <_obstack_free@@Base>
  40d504:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d508:	add	x0, x0, #0x950
  40d50c:	neg	w19, w19
  40d510:	ldr	x1, [x0, #120]
  40d514:	add	x19, x1, w19, sxtw #3
  40d518:	str	x19, [x0, #120]
  40d51c:	ldp	x23, x24, [sp, #48]
  40d520:	ldp	x27, x28, [sp, #80]
  40d524:	b	40cdfc <ferror@plt+0xa40c>
  40d528:	mov	x1, #0x0                   	// #0
  40d52c:	add	x0, sp, #0xb8
  40d530:	bl	416f14 <_obstack_free@@Base>
  40d534:	b	40d504 <ferror@plt+0xab14>
  40d538:	ldr	w1, [sp, #112]
  40d53c:	cbnz	w1, 40d554 <ferror@plt+0xab64>
  40d540:	mov	w0, #0x1                   	// #1
  40d544:	str	w0, [sp, #116]
  40d548:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d54c:	add	x20, x20, #0x950
  40d550:	b	40cf3c <ferror@plt+0xa54c>
  40d554:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d558:	ldr	w0, [x0, #1660]
  40d55c:	tbnz	w0, #7, 40d12c <ferror@plt+0xa73c>
  40d560:	str	w1, [sp, #116]
  40d564:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d568:	add	x20, x20, #0x950
  40d56c:	b	40cf3c <ferror@plt+0xa54c>
  40d570:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d574:	ldr	w0, [x0, #1660]
  40d578:	tbnz	w0, #7, 40d138 <ferror@plt+0xa748>
  40d57c:	str	wzr, [sp, #116]
  40d580:	add	x20, sp, #0xb8
  40d584:	b	40cf3c <ferror@plt+0xa54c>
  40d588:	stp	x29, x30, [sp, #-80]!
  40d58c:	mov	x29, sp
  40d590:	stp	x19, x20, [sp, #16]
  40d594:	str	x21, [sp, #32]
  40d598:	adrp	x21, 402000 <mbrtowc@plt-0x380>
  40d59c:	add	x21, x21, #0x810
  40d5a0:	adrp	x20, 416000 <ferror@plt+0x13610>
  40d5a4:	add	x20, x20, #0x7c
  40d5a8:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d5ac:	add	x19, x19, #0x950
  40d5b0:	mov	x4, x21
  40d5b4:	mov	x3, x20
  40d5b8:	mov	x2, #0x0                   	// #0
  40d5bc:	mov	x1, #0x0                   	// #0
  40d5c0:	mov	x0, x19
  40d5c4:	bl	416d70 <_obstack_begin@@Base>
  40d5c8:	mov	x4, x21
  40d5cc:	mov	x3, x20
  40d5d0:	mov	x2, #0x0                   	// #0
  40d5d4:	mov	x1, #0x0                   	// #0
  40d5d8:	add	x0, x19, #0x60
  40d5dc:	bl	416d70 <_obstack_begin@@Base>
  40d5e0:	add	x1, sp, #0x3c
  40d5e4:	add	x0, sp, #0x40
  40d5e8:	bl	40c188 <ferror@plt+0x9798>
  40d5ec:	mov	w1, w0
  40d5f0:	cbz	w0, 40d608 <ferror@plt+0xac18>
  40d5f4:	ldr	w3, [sp, #60]
  40d5f8:	add	x2, sp, #0x40
  40d5fc:	mov	x0, #0x0                   	// #0
  40d600:	bl	40cd9c <ferror@plt+0xa3ac>
  40d604:	b	40d5e0 <ferror@plt+0xabf0>
  40d608:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d60c:	add	x19, x19, #0x950
  40d610:	mov	x1, #0x0                   	// #0
  40d614:	mov	x0, x19
  40d618:	bl	416f14 <_obstack_free@@Base>
  40d61c:	mov	x1, #0x0                   	// #0
  40d620:	add	x0, x19, #0x60
  40d624:	bl	416f14 <_obstack_free@@Base>
  40d628:	ldp	x19, x20, [sp, #16]
  40d62c:	ldr	x21, [sp, #32]
  40d630:	ldp	x29, x30, [sp], #80
  40d634:	ret
  40d638:	ldr	w2, [x0, #8]
  40d63c:	ldr	w0, [x1, #8]
  40d640:	sub	w0, w2, w0
  40d644:	ret
  40d648:	ldr	w2, [x0, #8]
  40d64c:	ldr	w0, [x1]
  40d650:	cmp	w2, w0
  40d654:	cset	w0, ge  // ge = tcont
  40d658:	ret
  40d65c:	stp	x29, x30, [sp, #-32]!
  40d660:	mov	x29, sp
  40d664:	stp	x19, x20, [sp, #16]
  40d668:	mov	w19, w1
  40d66c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d670:	ldr	w1, [x1, #2568]
  40d674:	cmp	w1, w19
  40d678:	b.eq	40d6f4 <ferror@plt+0xad04>  // b.none
  40d67c:	mov	x20, x0
  40d680:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d684:	ldr	w0, [x0, #2572]
  40d688:	cmp	w0, w19
  40d68c:	b.eq	40d704 <ferror@plt+0xad14>  // b.none
  40d690:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d694:	ldrb	w2, [x2, #2576]
  40d698:	cbz	w2, 40d6cc <ferror@plt+0xacdc>
  40d69c:	cbnz	w1, 40d6b8 <ferror@plt+0xacc8>
  40d6a0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d6a4:	add	x2, x0, #0xa08
  40d6a8:	str	x20, [x2, #16]
  40d6ac:	str	w19, [x0, #2568]
  40d6b0:	mov	w0, w1
  40d6b4:	b	40d6f8 <ferror@plt+0xad08>
  40d6b8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d6bc:	ldr	x0, [x0, #2584]
  40d6c0:	bl	4112b0 <ferror@plt+0xe8c0>
  40d6c4:	mov	w1, w0
  40d6c8:	b	40d6a0 <ferror@plt+0xacb0>
  40d6cc:	cbnz	w0, 40d6e4 <ferror@plt+0xacf4>
  40d6d0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d6d4:	add	x1, x1, #0xa08
  40d6d8:	str	x20, [x1, #24]
  40d6dc:	str	w19, [x1, #4]
  40d6e0:	b	40d6f8 <ferror@plt+0xad08>
  40d6e4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d6e8:	ldr	x0, [x0, #2592]
  40d6ec:	bl	4112b0 <ferror@plt+0xe8c0>
  40d6f0:	b	40d6d0 <ferror@plt+0xace0>
  40d6f4:	mov	w0, #0x0                   	// #0
  40d6f8:	ldp	x19, x20, [sp, #16]
  40d6fc:	ldp	x29, x30, [sp], #32
  40d700:	ret
  40d704:	mov	w0, #0x0                   	// #0
  40d708:	b	40d6f8 <ferror@plt+0xad08>
  40d70c:	stp	x29, x30, [sp, #-48]!
  40d710:	mov	x29, sp
  40d714:	stp	x19, x20, [sp, #16]
  40d718:	mov	w19, w0
  40d71c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d720:	ldr	x0, [x0, #2600]
  40d724:	cbz	x0, 40d764 <ferror@plt+0xad74>
  40d728:	cmp	w19, #0x0
  40d72c:	b.le	40d884 <ferror@plt+0xae94>
  40d730:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d734:	add	x20, x20, #0xa08
  40d738:	mov	w4, w19
  40d73c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x206c>
  40d740:	add	x3, x3, #0xeb8
  40d744:	mov	x2, #0xffffffffffffffff    	// #-1
  40d748:	mov	w1, #0x1                   	// #1
  40d74c:	ldr	x0, [x20, #48]
  40d750:	bl	4023f0 <__sprintf_chk@plt>
  40d754:	ldr	x0, [x20, #32]
  40d758:	ldp	x19, x20, [sp, #16]
  40d75c:	ldp	x29, x30, [sp], #48
  40d760:	ret
  40d764:	stp	x21, x22, [sp, #32]
  40d768:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d76c:	add	x20, x20, #0xa08
  40d770:	ldr	x0, [x20, #40]
  40d774:	mov	w2, #0x7fffffff            	// #2147483647
  40d778:	ldr	x1, [x0]
  40d77c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40d780:	add	x0, x0, #0xe88
  40d784:	bl	416764 <ferror@plt+0x13d74>
  40d788:	str	x0, [x20, #48]
  40d78c:	bl	4023d0 <strlen@plt>
  40d790:	mov	x22, x0
  40d794:	add	x1, x0, #0x1
  40d798:	ldr	x0, [x20, #88]
  40d79c:	ldr	x2, [x20, #80]
  40d7a0:	add	x20, x20, #0x38
  40d7a4:	sub	x0, x0, x2
  40d7a8:	cmp	x1, x0
  40d7ac:	b.hi	40d868 <ferror@plt+0xae78>  // b.pmore
  40d7b0:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d7b4:	add	x20, x20, #0xa08
  40d7b8:	ldr	x21, [x20, #48]
  40d7bc:	mov	x2, x22
  40d7c0:	mov	x1, x21
  40d7c4:	ldr	x0, [x20, #80]
  40d7c8:	bl	402390 <memcpy@plt>
  40d7cc:	ldr	x1, [x20, #80]
  40d7d0:	add	x0, x1, x22
  40d7d4:	add	x0, x0, #0x1
  40d7d8:	str	x0, [x20, #80]
  40d7dc:	strb	wzr, [x1, x22]
  40d7e0:	ldr	x22, [x20, #72]
  40d7e4:	ldr	x2, [x20, #80]
  40d7e8:	add	x20, x20, #0x38
  40d7ec:	cmp	x2, x22
  40d7f0:	b.eq	40d874 <ferror@plt+0xae84>  // b.none
  40d7f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d7f8:	add	x0, x0, #0xa08
  40d7fc:	ldr	x1, [x0, #104]
  40d800:	add	x2, x2, x1
  40d804:	bic	x1, x2, x1
  40d808:	str	x1, [x0, #80]
  40d80c:	ldr	x2, [x0, #64]
  40d810:	add	x0, x0, #0x38
  40d814:	ldr	x0, [x0, #32]
  40d818:	sub	x1, x1, x2
  40d81c:	sub	x2, x0, x2
  40d820:	cmp	x1, x2
  40d824:	b.ls	40d830 <ferror@plt+0xae40>  // b.plast
  40d828:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d82c:	str	x0, [x1, #2648]
  40d830:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d834:	add	x20, x20, #0xa08
  40d838:	ldr	x1, [x20, #80]
  40d83c:	str	x1, [x20, #72]
  40d840:	str	x22, [x20, #32]
  40d844:	mov	x0, x21
  40d848:	bl	402810 <free@plt>
  40d84c:	mov	w1, #0x2d                  	// #45
  40d850:	mov	x0, x22
  40d854:	bl	4026d0 <strrchr@plt>
  40d858:	add	x0, x0, #0x1
  40d85c:	str	x0, [x20, #48]
  40d860:	ldp	x21, x22, [sp, #32]
  40d864:	b	40d728 <ferror@plt+0xad38>
  40d868:	mov	x0, x20
  40d86c:	bl	416dc4 <_obstack_newchunk@@Base>
  40d870:	b	40d7b0 <ferror@plt+0xadc0>
  40d874:	ldrb	w1, [x20, #80]
  40d878:	orr	w1, w1, #0x2
  40d87c:	strb	w1, [x20, #80]
  40d880:	b	40d7f4 <ferror@plt+0xae04>
  40d884:	stp	x21, x22, [sp, #32]
  40d888:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x306c>
  40d88c:	add	x3, x3, #0x108
  40d890:	mov	w2, #0xc8                  	// #200
  40d894:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40d898:	add	x1, x1, #0xe98
  40d89c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40d8a0:	add	x0, x0, #0xea8
  40d8a4:	bl	402960 <__assert_fail@plt>
  40d8a8:	stp	x29, x30, [sp, #-32]!
  40d8ac:	mov	x29, sp
  40d8b0:	stp	x19, x20, [sp, #16]
  40d8b4:	mov	w19, w0
  40d8b8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d8bc:	ldr	w0, [x0, #2568]
  40d8c0:	cmp	w0, w19
  40d8c4:	b.eq	40d900 <ferror@plt+0xaf10>  // b.none
  40d8c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d8cc:	ldr	w0, [x0, #2572]
  40d8d0:	cmp	w0, w19
  40d8d4:	b.eq	40d91c <ferror@plt+0xaf2c>  // b.none
  40d8d8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d8dc:	ldr	x20, [x0, #2608]
  40d8e0:	mov	w0, w19
  40d8e4:	bl	40d70c <ferror@plt+0xad1c>
  40d8e8:	mov	x1, x0
  40d8ec:	mov	x0, x20
  40d8f0:	bl	410e34 <ferror@plt+0xe444>
  40d8f4:	ldp	x19, x20, [sp, #16]
  40d8f8:	ldp	x29, x30, [sp], #32
  40d8fc:	ret
  40d900:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d904:	ldr	x0, [x0, #2584]
  40d908:	bl	4112b0 <ferror@plt+0xe8c0>
  40d90c:	cbnz	w0, 40d8f4 <ferror@plt+0xaf04>
  40d910:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d914:	str	wzr, [x0, #2568]
  40d918:	b	40d8d8 <ferror@plt+0xaee8>
  40d91c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d920:	ldr	x0, [x0, #2592]
  40d924:	bl	4112b0 <ferror@plt+0xe8c0>
  40d928:	cbnz	w0, 40d8f4 <ferror@plt+0xaf04>
  40d92c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d930:	str	wzr, [x0, #2572]
  40d934:	b	40d8d8 <ferror@plt+0xaee8>
  40d938:	stp	x29, x30, [sp, #-176]!
  40d93c:	mov	x29, sp
  40d940:	stp	x19, x20, [sp, #16]
  40d944:	stp	x21, x22, [sp, #32]
  40d948:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d94c:	add	x1, x1, #0xa08
  40d950:	ldr	x21, [x1, #144]
  40d954:	ldr	w3, [x21, #12]
  40d958:	ldr	w20, [x1, #152]
  40d95c:	sub	w20, w3, w20
  40d960:	str	w20, [x21, #16]
  40d964:	mov	w19, w3
  40d968:	add	w20, w20, w0
  40d96c:	mov	w2, #0x200                 	// #512
  40d970:	b	40d980 <ferror@plt+0xaf90>
  40d974:	lsl	w0, w19, #1
  40d978:	cmp	w19, #0x0
  40d97c:	csel	w19, w0, w2, ne  // ne = any
  40d980:	cmp	w20, w19
  40d984:	b.gt	40d974 <ferror@plt+0xaf84>
  40d988:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d98c:	ldr	w0, [x0, #2724]
  40d990:	sub	w0, w0, w3
  40d994:	add	w0, w0, w19
  40d998:	cmp	w0, #0x80, lsl #12
  40d99c:	b.le	40dae0 <ferror@plt+0xb0f0>
  40d9a0:	str	x23, [sp, #48]
  40d9a4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40d9a8:	ldr	x0, [x0, #2728]
  40d9ac:	ldr	x1, [x0]
  40d9b0:	add	x8, sp, #0x78
  40d9b4:	ldr	x1, [x1, #56]
  40d9b8:	blr	x1
  40d9bc:	ldp	x0, x1, [sp, #120]
  40d9c0:	stp	x0, x1, [sp, #64]
  40d9c4:	ldp	x0, x1, [sp, #136]
  40d9c8:	stp	x0, x1, [sp, #80]
  40d9cc:	ldp	x0, x1, [sp, #152]
  40d9d0:	stp	x0, x1, [sp, #96]
  40d9d4:	ldr	x0, [sp, #168]
  40d9d8:	str	x0, [sp, #112]
  40d9dc:	b	40d9f8 <ferror@plt+0xb008>
  40d9e0:	ldr	x1, [sp, #120]
  40d9e4:	ldr	w0, [x1, #16]
  40d9e8:	cmp	w0, w20
  40d9ec:	csel	w2, w20, w0, le
  40d9f0:	mov	w20, w2
  40d9f4:	csel	x21, x21, x1, le
  40d9f8:	ldr	x0, [sp, #64]
  40d9fc:	ldr	x2, [x0, #64]
  40da00:	add	x1, sp, #0x78
  40da04:	add	x0, sp, #0x40
  40da08:	blr	x2
  40da0c:	and	w0, w0, #0xff
  40da10:	cbnz	w0, 40d9e0 <ferror@plt+0xaff0>
  40da14:	ldr	x0, [sp, #64]
  40da18:	ldr	x1, [x0, #72]
  40da1c:	add	x0, sp, #0x40
  40da20:	blr	x1
  40da24:	ldr	x23, [x21]
  40da28:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40da2c:	add	x0, x0, #0xa08
  40da30:	ldr	w1, [x0, #156]
  40da34:	ldr	w2, [x21, #12]
  40da38:	sub	w1, w1, w2
  40da3c:	str	w1, [x0, #156]
  40da40:	str	wzr, [x21, #12]
  40da44:	str	xzr, [x21]
  40da48:	ldr	w20, [x21, #8]
  40da4c:	ldr	x0, [x0, #40]
  40da50:	cbz	x0, 40db58 <ferror@plt+0xb168>
  40da54:	mov	w0, w20
  40da58:	bl	40d70c <ferror@plt+0xad1c>
  40da5c:	mov	x22, x0
  40da60:	mov	x1, x0
  40da64:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40da68:	ldr	x0, [x0, #2608]
  40da6c:	bl	410c0c <ferror@plt+0xe21c>
  40da70:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40da74:	add	x1, x1, #0xef8
  40da78:	mov	x0, x22
  40da7c:	bl	411198 <ferror@plt+0xe7a8>
  40da80:	mov	x20, x0
  40da84:	cbz	x0, 40dba4 <ferror@plt+0xb1b4>
  40da88:	bl	402500 <fileno@plt>
  40da8c:	mov	w1, #0x1                   	// #1
  40da90:	bl	411304 <ferror@plt+0xe914>
  40da94:	cbnz	w0, 40dbd0 <ferror@plt+0xb1e0>
  40da98:	str	x20, [x21]
  40da9c:	ldr	w1, [x21, #16]
  40daa0:	cmp	w1, #0x0
  40daa4:	b.gt	40dbf4 <ferror@plt+0xb204>
  40daa8:	mov	x0, x23
  40daac:	bl	402810 <free@plt>
  40dab0:	mov	w0, #0x1                   	// #1
  40dab4:	str	w0, [x21, #16]
  40dab8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dabc:	ldr	x0, [x0, #2712]
  40dac0:	cmp	x21, x0
  40dac4:	b.eq	40dc2c <ferror@plt+0xb23c>  // b.none
  40dac8:	ldr	x0, [x21]
  40dacc:	str	xzr, [x21]
  40dad0:	ldr	w1, [x21, #8]
  40dad4:	bl	40d65c <ferror@plt+0xac6c>
  40dad8:	cbnz	w0, 40dc4c <ferror@plt+0xb25c>
  40dadc:	ldr	x23, [sp, #48]
  40dae0:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dae4:	add	x20, x20, #0xa08
  40dae8:	ldr	x21, [x20, #144]
  40daec:	ldr	x22, [x21]
  40daf0:	sxtw	x0, w19
  40daf4:	bl	41607c <ferror@plt+0x1368c>
  40daf8:	str	x0, [x21]
  40dafc:	ldr	x21, [x20, #144]
  40db00:	ldrsw	x2, [x21, #16]
  40db04:	mov	x1, x22
  40db08:	ldr	x0, [x21]
  40db0c:	bl	402390 <memcpy@plt>
  40db10:	mov	x0, x22
  40db14:	bl	402810 <free@plt>
  40db18:	ldr	w0, [x21, #12]
  40db1c:	sub	w0, w19, w0
  40db20:	ldr	w1, [x20, #156]
  40db24:	add	w0, w0, w1
  40db28:	str	w0, [x20, #156]
  40db2c:	str	w19, [x21, #12]
  40db30:	ldr	w1, [x21, #16]
  40db34:	ldr	x0, [x21]
  40db38:	add	x0, x0, w1, sxtw
  40db3c:	str	x0, [x20, #176]
  40db40:	sub	w19, w19, w1
  40db44:	str	w19, [x20, #152]
  40db48:	ldp	x19, x20, [sp, #16]
  40db4c:	ldp	x21, x22, [sp, #32]
  40db50:	ldp	x29, x30, [sp], #176
  40db54:	ret
  40db58:	mov	w2, #0x1                   	// #1
  40db5c:	mov	x1, #0x0                   	// #0
  40db60:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  40db64:	add	x0, x0, #0xec0
  40db68:	bl	41097c <ferror@plt+0xdf8c>
  40db6c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40db70:	str	x0, [x1, #2608]
  40db74:	cbz	x0, 40db88 <ferror@plt+0xb198>
  40db78:	adrp	x0, 40d000 <ferror@plt+0xa610>
  40db7c:	add	x0, x0, #0xc6c
  40db80:	bl	4174e0 <_obstack_memory_used@@Base+0x54c>
  40db84:	b	40da54 <ferror@plt+0xb064>
  40db88:	bl	402970 <__errno_location@plt>
  40db8c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40db90:	add	x2, x2, #0xec8
  40db94:	ldr	w1, [x0]
  40db98:	mov	w0, #0x1                   	// #1
  40db9c:	bl	402c80 <ferror@plt+0x290>
  40dba0:	b	40db78 <ferror@plt+0xb188>
  40dba4:	mov	x1, x22
  40dba8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dbac:	ldr	x0, [x0, #2608]
  40dbb0:	bl	410c90 <ferror@plt+0xe2a0>
  40dbb4:	bl	402970 <__errno_location@plt>
  40dbb8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40dbbc:	add	x2, x2, #0xec8
  40dbc0:	ldr	w1, [x0]
  40dbc4:	mov	w0, #0x1                   	// #1
  40dbc8:	bl	402c80 <ferror@plt+0x290>
  40dbcc:	b	40da98 <ferror@plt+0xb0a8>
  40dbd0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dbd4:	ldr	w22, [x0, #1644]
  40dbd8:	bl	402970 <__errno_location@plt>
  40dbdc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40dbe0:	add	x2, x2, #0xf00
  40dbe4:	ldr	w1, [x0]
  40dbe8:	mov	w0, w22
  40dbec:	bl	402c80 <ferror@plt+0x290>
  40dbf0:	b	40da98 <ferror@plt+0xb0a8>
  40dbf4:	mov	x3, x20
  40dbf8:	mov	x2, #0x1                   	// #1
  40dbfc:	sxtw	x1, w1
  40dc00:	mov	x0, x23
  40dc04:	bl	402880 <fwrite@plt>
  40dc08:	cmp	w0, #0x1
  40dc0c:	b.eq	40daa8 <ferror@plt+0xb0b8>  // b.none
  40dc10:	bl	402970 <__errno_location@plt>
  40dc14:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40dc18:	add	x2, x2, #0xf30
  40dc1c:	ldr	w1, [x0]
  40dc20:	mov	w0, #0x1                   	// #1
  40dc24:	bl	402c80 <ferror@plt+0x290>
  40dc28:	b	40daa8 <ferror@plt+0xb0b8>
  40dc2c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dc30:	add	x0, x0, #0xa08
  40dc34:	ldr	x1, [x21]
  40dc38:	str	x1, [x0, #168]
  40dc3c:	str	xzr, [x0, #176]
  40dc40:	str	wzr, [x0, #152]
  40dc44:	ldr	x23, [sp, #48]
  40dc48:	b	40db48 <ferror@plt+0xb158>
  40dc4c:	bl	402970 <__errno_location@plt>
  40dc50:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40dc54:	add	x2, x2, #0xf60
  40dc58:	ldr	w1, [x0]
  40dc5c:	mov	w0, #0x0                   	// #0
  40dc60:	bl	402c80 <ferror@plt+0x290>
  40dc64:	ldr	x23, [sp, #48]
  40dc68:	b	40dae0 <ferror@plt+0xb0f0>
  40dc6c:	stp	x29, x30, [sp, #-112]!
  40dc70:	mov	x29, sp
  40dc74:	stp	x19, x20, [sp, #16]
  40dc78:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dc7c:	ldr	x0, [x0, #2728]
  40dc80:	mov	w20, #0x0                   	// #0
  40dc84:	cbz	x0, 40dd0c <ferror@plt+0xb31c>
  40dc88:	str	x21, [sp, #32]
  40dc8c:	ldr	x1, [x0]
  40dc90:	add	x8, sp, #0x38
  40dc94:	ldr	x1, [x1, #56]
  40dc98:	blr	x1
  40dc9c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40dca0:	add	x21, x2, #0xf90
  40dca4:	ldr	x0, [sp, #56]
  40dca8:	ldr	x2, [x0, #64]
  40dcac:	add	x1, sp, #0x30
  40dcb0:	add	x0, sp, #0x38
  40dcb4:	blr	x2
  40dcb8:	ands	w19, w0, #0xff
  40dcbc:	b.eq	40dcf8 <ferror@plt+0xb308>  // b.none
  40dcc0:	ldr	x0, [sp, #48]
  40dcc4:	ldr	w1, [x0, #12]
  40dcc8:	cbnz	w1, 40dca4 <ferror@plt+0xb2b4>
  40dccc:	ldr	x0, [x0]
  40dcd0:	cbz	x0, 40dca4 <ferror@plt+0xb2b4>
  40dcd4:	bl	4112b0 <ferror@plt+0xe8c0>
  40dcd8:	cbz	w0, 40dca4 <ferror@plt+0xb2b4>
  40dcdc:	bl	402970 <__errno_location@plt>
  40dce0:	mov	x2, x21
  40dce4:	ldr	w1, [x0]
  40dce8:	mov	w0, #0x0                   	// #0
  40dcec:	bl	402c80 <ferror@plt+0x290>
  40dcf0:	mov	w20, w19
  40dcf4:	b	40dca4 <ferror@plt+0xb2b4>
  40dcf8:	ldr	x0, [sp, #56]
  40dcfc:	ldr	x1, [x0, #72]
  40dd00:	add	x0, sp, #0x38
  40dd04:	blr	x1
  40dd08:	ldr	x21, [sp, #32]
  40dd0c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dd10:	ldr	x0, [x0, #2608]
  40dd14:	bl	411018 <ferror@plt+0xe628>
  40dd18:	cmp	w0, #0x0
  40dd1c:	ccmp	w20, #0x0, #0x0, eq  // eq = none
  40dd20:	b.ne	40dd30 <ferror@plt+0xb340>  // b.any
  40dd24:	ldp	x19, x20, [sp, #16]
  40dd28:	ldp	x29, x30, [sp], #112
  40dd2c:	ret
  40dd30:	str	x21, [sp, #32]
  40dd34:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dd38:	ldr	w0, [x0, #868]
  40dd3c:	bl	4023b0 <_exit@plt>
  40dd40:	stp	x29, x30, [sp, #-32]!
  40dd44:	mov	x29, sp
  40dd48:	str	x19, [sp, #16]
  40dd4c:	mov	w19, w0
  40dd50:	mov	w0, #0x1                   	// #1
  40dd54:	bl	40d938 <ferror@plt+0xaf48>
  40dd58:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dd5c:	ldr	x1, [x0, #2736]
  40dd60:	cbz	x1, 40dd78 <ferror@plt+0xb388>
  40dd64:	mov	w0, w19
  40dd68:	bl	402470 <putc@plt>
  40dd6c:	ldr	x19, [sp, #16]
  40dd70:	ldp	x29, x30, [sp], #32
  40dd74:	ret
  40dd78:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dd7c:	add	x0, x0, #0xa08
  40dd80:	ldr	x1, [x0, #176]
  40dd84:	add	x2, x1, #0x1
  40dd88:	str	x2, [x0, #176]
  40dd8c:	strb	w19, [x1]
  40dd90:	ldr	w1, [x0, #152]
  40dd94:	sub	w1, w1, #0x1
  40dd98:	str	w1, [x0, #152]
  40dd9c:	b	40dd6c <ferror@plt+0xb37c>
  40dda0:	stp	x29, x30, [sp, #-32]!
  40dda4:	mov	x29, sp
  40dda8:	stp	x19, x20, [sp, #16]
  40ddac:	and	w20, w1, #0xff
  40ddb0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ddb4:	ldr	w1, [x1, #2568]
  40ddb8:	cmp	w1, w0
  40ddbc:	b.eq	40de2c <ferror@plt+0xb43c>  // b.none
  40ddc0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ddc4:	ldr	w1, [x1, #2572]
  40ddc8:	cmp	w1, w0
  40ddcc:	b.eq	40de78 <ferror@plt+0xb488>  // b.none
  40ddd0:	bl	40d70c <ferror@plt+0xad1c>
  40ddd4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40ddd8:	add	x1, x1, #0xfe0
  40dddc:	bl	411198 <ferror@plt+0xe7a8>
  40dde0:	mov	x19, x0
  40dde4:	cbz	x0, 40ded4 <ferror@plt+0xb4e4>
  40dde8:	bl	402500 <fileno@plt>
  40ddec:	mov	w1, #0x1                   	// #1
  40ddf0:	bl	411304 <ferror@plt+0xe914>
  40ddf4:	cbnz	w0, 40def0 <ferror@plt+0xb500>
  40ddf8:	cbnz	w20, 40de90 <ferror@plt+0xb4a0>
  40ddfc:	mov	w2, #0x2                   	// #2
  40de00:	mov	x1, #0x0                   	// #0
  40de04:	mov	x0, x19
  40de08:	bl	416b18 <ferror@plt+0x14128>
  40de0c:	cbz	w0, 40de90 <ferror@plt+0xb4a0>
  40de10:	bl	402970 <__errno_location@plt>
  40de14:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40de18:	add	x2, x2, #0xfc0
  40de1c:	ldr	w1, [x0]
  40de20:	mov	w0, #0x1                   	// #1
  40de24:	bl	402c80 <ferror@plt+0x290>
  40de28:	b	40de90 <ferror@plt+0xb4a0>
  40de2c:	cbnz	w20, 40de44 <ferror@plt+0xb454>
  40de30:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40de34:	add	x0, x0, #0xa08
  40de38:	strb	wzr, [x0, #8]
  40de3c:	ldr	x19, [x0, #16]
  40de40:	b	40de90 <ferror@plt+0xb4a0>
  40de44:	mov	w2, #0x0                   	// #0
  40de48:	mov	x1, #0x0                   	// #0
  40de4c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40de50:	ldr	x0, [x0, #2584]
  40de54:	bl	416b18 <ferror@plt+0x14128>
  40de58:	cbz	w0, 40de30 <ferror@plt+0xb440>
  40de5c:	bl	402970 <__errno_location@plt>
  40de60:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40de64:	add	x2, x2, #0xfc0
  40de68:	ldr	w1, [x0]
  40de6c:	mov	w0, #0x1                   	// #1
  40de70:	bl	402c80 <ferror@plt+0x290>
  40de74:	b	40de30 <ferror@plt+0xb440>
  40de78:	cbnz	w20, 40dea0 <ferror@plt+0xb4b0>
  40de7c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40de80:	add	x0, x0, #0xa08
  40de84:	mov	w1, #0x1                   	// #1
  40de88:	strb	w1, [x0, #8]
  40de8c:	ldr	x19, [x0, #24]
  40de90:	mov	x0, x19
  40de94:	ldp	x19, x20, [sp, #16]
  40de98:	ldp	x29, x30, [sp], #32
  40de9c:	ret
  40dea0:	mov	w2, #0x0                   	// #0
  40dea4:	mov	x1, #0x0                   	// #0
  40dea8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40deac:	ldr	x0, [x0, #2592]
  40deb0:	bl	416b18 <ferror@plt+0x14128>
  40deb4:	cbz	w0, 40de7c <ferror@plt+0xb48c>
  40deb8:	bl	402970 <__errno_location@plt>
  40debc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40dec0:	add	x2, x2, #0xfc0
  40dec4:	ldr	w1, [x0]
  40dec8:	mov	w0, #0x1                   	// #1
  40decc:	bl	402c80 <ferror@plt+0x290>
  40ded0:	b	40de7c <ferror@plt+0xb48c>
  40ded4:	bl	402970 <__errno_location@plt>
  40ded8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40dedc:	add	x2, x2, #0xec8
  40dee0:	ldr	w1, [x0]
  40dee4:	mov	w0, #0x1                   	// #1
  40dee8:	bl	402c80 <ferror@plt+0x290>
  40deec:	b	40de90 <ferror@plt+0xb4a0>
  40def0:	bl	402970 <__errno_location@plt>
  40def4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40def8:	add	x2, x2, #0xfe8
  40defc:	ldr	w1, [x0]
  40df00:	mov	w0, #0x0                   	// #0
  40df04:	bl	402c80 <ferror@plt+0x290>
  40df08:	b	40de90 <ferror@plt+0xb4a0>
  40df0c:	stp	x29, x30, [sp, #-16]!
  40df10:	mov	x29, sp
  40df14:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  40df18:	ldr	x3, [x0, #472]
  40df1c:	mov	x2, #0x0                   	// #0
  40df20:	adrp	x1, 40d000 <ferror@plt+0xa610>
  40df24:	add	x1, x1, #0x638
  40df28:	add	x0, x0, #0x1d8
  40df2c:	blr	x3
  40df30:	cbz	x0, 40df80 <ferror@plt+0xb590>
  40df34:	adrp	x5, 430000 <_obstack_memory_used@@Base+0x1906c>
  40df38:	add	x5, x5, #0xa08
  40df3c:	str	x0, [x5, #160]
  40df40:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40df44:	ldr	x0, [x0, #1072]
  40df48:	add	x1, x5, #0xb8
  40df4c:	str	x0, [x5, #184]
  40df50:	str	x1, [x5, #144]
  40df54:	str	x0, [x5, #168]
  40df58:	adrp	x4, 402000 <mbrtowc@plt-0x380>
  40df5c:	add	x4, x4, #0x810
  40df60:	adrp	x3, 416000 <ferror@plt+0x13610>
  40df64:	add	x3, x3, #0x7c
  40df68:	mov	x2, #0x0                   	// #0
  40df6c:	mov	x1, #0x0                   	// #0
  40df70:	add	x0, x5, #0x38
  40df74:	bl	416d70 <_obstack_begin@@Base>
  40df78:	ldp	x29, x30, [sp], #16
  40df7c:	ret
  40df80:	bl	4162e8 <ferror@plt+0x138f8>
  40df84:	stp	x29, x30, [sp, #-32]!
  40df88:	mov	x29, sp
  40df8c:	stp	x19, x20, [sp, #16]
  40df90:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40df94:	add	x1, x0, #0xa08
  40df98:	ldr	x20, [x1, #160]
  40df9c:	ldr	w0, [x0, #2568]
  40dfa0:	cbnz	w0, 40dfe4 <ferror@plt+0xb5f4>
  40dfa4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dfa8:	ldr	w0, [x0, #2572]
  40dfac:	cbnz	w0, 40dfec <ferror@plt+0xb5fc>
  40dfb0:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40dfb4:	add	x19, x19, #0xa08
  40dfb8:	str	xzr, [x19, #160]
  40dfbc:	ldr	x0, [x20]
  40dfc0:	ldr	x1, [x0, #48]
  40dfc4:	mov	x0, x20
  40dfc8:	blr	x1
  40dfcc:	mov	x1, #0x0                   	// #0
  40dfd0:	add	x0, x19, #0x38
  40dfd4:	bl	416f14 <_obstack_free@@Base>
  40dfd8:	ldp	x19, x20, [sp, #16]
  40dfdc:	ldp	x29, x30, [sp], #32
  40dfe0:	ret
  40dfe4:	bl	40d8a8 <ferror@plt+0xaeb8>
  40dfe8:	b	40dfa4 <ferror@plt+0xb5b4>
  40dfec:	bl	40d8a8 <ferror@plt+0xaeb8>
  40dff0:	b	40dfb0 <ferror@plt+0xb5c0>
  40dff4:	stp	x29, x30, [sp, #-64]!
  40dff8:	mov	x29, sp
  40dffc:	stp	x19, x20, [sp, #16]
  40e000:	mov	w19, w1
  40e004:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e008:	ldr	x1, [x1, #2712]
  40e00c:	cmp	x1, #0x0
  40e010:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  40e014:	b.eq	40e040 <ferror@plt+0xb650>  // b.none
  40e018:	mov	x20, x0
  40e01c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e020:	ldr	x3, [x0, #2736]
  40e024:	cbz	x3, 40e04c <ferror@plt+0xb65c>
  40e028:	mov	x2, #0x1                   	// #1
  40e02c:	sxtw	x1, w19
  40e030:	mov	x0, x20
  40e034:	bl	402880 <fwrite@plt>
  40e038:	cmp	w0, #0x1
  40e03c:	b.ne	40e0bc <ferror@plt+0xb6cc>  // b.any
  40e040:	ldp	x19, x20, [sp, #16]
  40e044:	ldp	x29, x30, [sp], #64
  40e048:	ret
  40e04c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e050:	ldr	w0, [x0, #2720]
  40e054:	cmp	w0, w19
  40e058:	b.lt	40e0a4 <ferror@plt+0xb6b4>  // b.tstop
  40e05c:	stp	x21, x22, [sp, #32]
  40e060:	str	x23, [sp, #48]
  40e064:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e068:	add	x21, x21, #0xa08
  40e06c:	ldr	x22, [x21, #176]
  40e070:	sxtw	x23, w19
  40e074:	mov	x2, x23
  40e078:	mov	x1, x20
  40e07c:	mov	x0, x22
  40e080:	bl	402390 <memcpy@plt>
  40e084:	add	x22, x22, x23
  40e088:	str	x22, [x21, #176]
  40e08c:	ldr	w1, [x21, #152]
  40e090:	sub	w19, w1, w19
  40e094:	str	w19, [x21, #152]
  40e098:	ldp	x21, x22, [sp, #32]
  40e09c:	ldr	x23, [sp, #48]
  40e0a0:	b	40e040 <ferror@plt+0xb650>
  40e0a4:	mov	w0, w19
  40e0a8:	bl	40d938 <ferror@plt+0xaf48>
  40e0ac:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e0b0:	ldr	x3, [x0, #2736]
  40e0b4:	cbz	x3, 40e05c <ferror@plt+0xb66c>
  40e0b8:	b	40e028 <ferror@plt+0xb638>
  40e0bc:	bl	402970 <__errno_location@plt>
  40e0c0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  40e0c4:	add	x2, x2, #0x10
  40e0c8:	ldr	w1, [x0]
  40e0cc:	mov	w0, #0x1                   	// #1
  40e0d0:	bl	402c80 <ferror@plt+0x290>
  40e0d4:	b	40e040 <ferror@plt+0xb650>
  40e0d8:	stp	x29, x30, [sp, #-64]!
  40e0dc:	mov	x29, sp
  40e0e0:	stp	x19, x20, [sp, #16]
  40e0e4:	stp	x21, x22, [sp, #32]
  40e0e8:	mov	x19, x1
  40e0ec:	mov	w20, w2
  40e0f0:	cbz	x0, 40e14c <ferror@plt+0xb75c>
  40e0f4:	mov	x22, x0
  40e0f8:	sxtw	x21, w2
  40e0fc:	ldr	x1, [x0, #32]
  40e100:	ldr	x0, [x0, #24]
  40e104:	sub	x1, x1, x0
  40e108:	cmp	x1, w2, sxtw
  40e10c:	b.cc	40e13c <ferror@plt+0xb74c>  // b.lo, b.ul, b.last
  40e110:	mov	x2, x21
  40e114:	mov	x1, x19
  40e118:	ldr	x0, [x22, #24]
  40e11c:	bl	402390 <memcpy@plt>
  40e120:	ldr	x2, [x22, #24]
  40e124:	add	x2, x2, x21
  40e128:	str	x2, [x22, #24]
  40e12c:	ldp	x19, x20, [sp, #16]
  40e130:	ldp	x21, x22, [sp, #32]
  40e134:	ldp	x29, x30, [sp], #64
  40e138:	ret
  40e13c:	mov	x1, x21
  40e140:	mov	x0, x22
  40e144:	bl	416dc4 <_obstack_newchunk@@Base>
  40e148:	b	40e110 <ferror@plt+0xb720>
  40e14c:	mov	w21, w3
  40e150:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e154:	ldr	x0, [x0, #2712]
  40e158:	cbz	x0, 40e12c <ferror@plt+0xb73c>
  40e15c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e160:	ldr	w0, [x0, #1668]
  40e164:	cbnz	w0, 40e48c <ferror@plt+0xba9c>
  40e168:	cmp	w2, #0x4
  40e16c:	b.eq	40e260 <ferror@plt+0xb870>  // b.none
  40e170:	b.le	40e1bc <ferror@plt+0xb7cc>
  40e174:	cmp	w2, #0x7
  40e178:	b.eq	40e1a0 <ferror@plt+0xb7b0>  // b.none
  40e17c:	b.le	40e220 <ferror@plt+0xb830>
  40e180:	cmp	w2, #0x8
  40e184:	b.ne	40e47c <ferror@plt+0xba8c>  // b.any
  40e188:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e18c:	ldr	x1, [x0, #2736]
  40e190:	cbz	x1, 40e27c <ferror@plt+0xb88c>
  40e194:	ldrb	w0, [x19]
  40e198:	bl	402470 <putc@plt>
  40e19c:	add	x19, x19, #0x1
  40e1a0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e1a4:	ldr	x1, [x0, #2736]
  40e1a8:	cbz	x1, 40e2bc <ferror@plt+0xb8cc>
  40e1ac:	ldrb	w0, [x19]
  40e1b0:	bl	402470 <putc@plt>
  40e1b4:	add	x19, x19, #0x1
  40e1b8:	b	40e230 <ferror@plt+0xb840>
  40e1bc:	cmp	w2, #0x2
  40e1c0:	b.eq	40e1e0 <ferror@plt+0xb7f0>  // b.none
  40e1c4:	b.le	40e1fc <ferror@plt+0xb80c>
  40e1c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e1cc:	ldr	x1, [x0, #2736]
  40e1d0:	cbz	x1, 40e3bc <ferror@plt+0xb9cc>
  40e1d4:	ldrb	w0, [x19]
  40e1d8:	bl	402470 <putc@plt>
  40e1dc:	add	x19, x19, #0x1
  40e1e0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e1e4:	ldr	x1, [x0, #2736]
  40e1e8:	cbz	x1, 40e3fc <ferror@plt+0xba0c>
  40e1ec:	ldrb	w0, [x19]
  40e1f0:	bl	402470 <putc@plt>
  40e1f4:	add	x19, x19, #0x1
  40e1f8:	b	40e208 <ferror@plt+0xb818>
  40e1fc:	cbz	w2, 40e12c <ferror@plt+0xb73c>
  40e200:	cmp	w2, #0x1
  40e204:	b.ne	40e47c <ferror@plt+0xba8c>  // b.any
  40e208:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e20c:	ldr	x1, [x0, #2736]
  40e210:	cbz	x1, 40e43c <ferror@plt+0xba4c>
  40e214:	ldrb	w0, [x19]
  40e218:	bl	402470 <putc@plt>
  40e21c:	b	40e12c <ferror@plt+0xb73c>
  40e220:	cmp	w2, #0x5
  40e224:	b.eq	40e248 <ferror@plt+0xb858>  // b.none
  40e228:	cmp	w2, #0x6
  40e22c:	b.ne	40e47c <ferror@plt+0xba8c>  // b.any
  40e230:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e234:	ldr	x1, [x0, #2736]
  40e238:	cbz	x1, 40e2fc <ferror@plt+0xb90c>
  40e23c:	ldrb	w0, [x19]
  40e240:	bl	402470 <putc@plt>
  40e244:	add	x19, x19, #0x1
  40e248:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e24c:	ldr	x1, [x0, #2736]
  40e250:	cbz	x1, 40e33c <ferror@plt+0xb94c>
  40e254:	ldrb	w0, [x19]
  40e258:	bl	402470 <putc@plt>
  40e25c:	add	x19, x19, #0x1
  40e260:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e264:	ldr	x1, [x0, #2736]
  40e268:	cbz	x1, 40e37c <ferror@plt+0xb98c>
  40e26c:	ldrb	w0, [x19]
  40e270:	bl	402470 <putc@plt>
  40e274:	add	x19, x19, #0x1
  40e278:	b	40e1c8 <ferror@plt+0xb7d8>
  40e27c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e280:	ldr	w0, [x0, #2720]
  40e284:	cbz	w0, 40e2b0 <ferror@plt+0xb8c0>
  40e288:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e28c:	add	x1, x1, #0xa08
  40e290:	sub	w0, w0, #0x1
  40e294:	str	w0, [x1, #152]
  40e298:	ldr	x0, [x1, #176]
  40e29c:	add	x2, x0, #0x1
  40e2a0:	str	x2, [x1, #176]
  40e2a4:	ldrb	w1, [x19]
  40e2a8:	strb	w1, [x0]
  40e2ac:	b	40e19c <ferror@plt+0xb7ac>
  40e2b0:	ldrb	w0, [x19]
  40e2b4:	bl	40dd40 <ferror@plt+0xb350>
  40e2b8:	b	40e19c <ferror@plt+0xb7ac>
  40e2bc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e2c0:	ldr	w0, [x0, #2720]
  40e2c4:	cbz	w0, 40e2f0 <ferror@plt+0xb900>
  40e2c8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e2cc:	add	x1, x1, #0xa08
  40e2d0:	sub	w0, w0, #0x1
  40e2d4:	str	w0, [x1, #152]
  40e2d8:	ldr	x0, [x1, #176]
  40e2dc:	add	x2, x0, #0x1
  40e2e0:	str	x2, [x1, #176]
  40e2e4:	ldrb	w1, [x19]
  40e2e8:	strb	w1, [x0]
  40e2ec:	b	40e1b4 <ferror@plt+0xb7c4>
  40e2f0:	ldrb	w0, [x19]
  40e2f4:	bl	40dd40 <ferror@plt+0xb350>
  40e2f8:	b	40e1b4 <ferror@plt+0xb7c4>
  40e2fc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e300:	ldr	w1, [x0, #2720]
  40e304:	cbz	w1, 40e330 <ferror@plt+0xb940>
  40e308:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e30c:	add	x0, x0, #0xa08
  40e310:	sub	w1, w1, #0x1
  40e314:	str	w1, [x0, #152]
  40e318:	ldr	x1, [x0, #176]
  40e31c:	add	x2, x1, #0x1
  40e320:	str	x2, [x0, #176]
  40e324:	ldrb	w0, [x19]
  40e328:	strb	w0, [x1]
  40e32c:	b	40e244 <ferror@plt+0xb854>
  40e330:	ldrb	w0, [x19]
  40e334:	bl	40dd40 <ferror@plt+0xb350>
  40e338:	b	40e244 <ferror@plt+0xb854>
  40e33c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e340:	ldr	w0, [x0, #2720]
  40e344:	cbz	w0, 40e370 <ferror@plt+0xb980>
  40e348:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e34c:	add	x1, x1, #0xa08
  40e350:	sub	w0, w0, #0x1
  40e354:	str	w0, [x1, #152]
  40e358:	ldr	x0, [x1, #176]
  40e35c:	add	x2, x0, #0x1
  40e360:	str	x2, [x1, #176]
  40e364:	ldrb	w1, [x19]
  40e368:	strb	w1, [x0]
  40e36c:	b	40e25c <ferror@plt+0xb86c>
  40e370:	ldrb	w0, [x19]
  40e374:	bl	40dd40 <ferror@plt+0xb350>
  40e378:	b	40e25c <ferror@plt+0xb86c>
  40e37c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e380:	ldr	w1, [x0, #2720]
  40e384:	cbz	w1, 40e3b0 <ferror@plt+0xb9c0>
  40e388:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e38c:	add	x0, x0, #0xa08
  40e390:	sub	w1, w1, #0x1
  40e394:	str	w1, [x0, #152]
  40e398:	ldr	x1, [x0, #176]
  40e39c:	add	x2, x1, #0x1
  40e3a0:	str	x2, [x0, #176]
  40e3a4:	ldrb	w0, [x19]
  40e3a8:	strb	w0, [x1]
  40e3ac:	b	40e274 <ferror@plt+0xb884>
  40e3b0:	ldrb	w0, [x19]
  40e3b4:	bl	40dd40 <ferror@plt+0xb350>
  40e3b8:	b	40e274 <ferror@plt+0xb884>
  40e3bc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e3c0:	ldr	w1, [x0, #2720]
  40e3c4:	cbz	w1, 40e3f0 <ferror@plt+0xba00>
  40e3c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e3cc:	add	x0, x0, #0xa08
  40e3d0:	sub	w1, w1, #0x1
  40e3d4:	str	w1, [x0, #152]
  40e3d8:	ldr	x1, [x0, #176]
  40e3dc:	add	x2, x1, #0x1
  40e3e0:	str	x2, [x0, #176]
  40e3e4:	ldrb	w0, [x19]
  40e3e8:	strb	w0, [x1]
  40e3ec:	b	40e1dc <ferror@plt+0xb7ec>
  40e3f0:	ldrb	w0, [x19]
  40e3f4:	bl	40dd40 <ferror@plt+0xb350>
  40e3f8:	b	40e1dc <ferror@plt+0xb7ec>
  40e3fc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e400:	ldr	w1, [x0, #2720]
  40e404:	cbz	w1, 40e430 <ferror@plt+0xba40>
  40e408:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e40c:	add	x0, x0, #0xa08
  40e410:	sub	w1, w1, #0x1
  40e414:	str	w1, [x0, #152]
  40e418:	ldr	x1, [x0, #176]
  40e41c:	add	x2, x1, #0x1
  40e420:	str	x2, [x0, #176]
  40e424:	ldrb	w0, [x19]
  40e428:	strb	w0, [x1]
  40e42c:	b	40e1f4 <ferror@plt+0xb804>
  40e430:	ldrb	w0, [x19]
  40e434:	bl	40dd40 <ferror@plt+0xb350>
  40e438:	b	40e1f4 <ferror@plt+0xb804>
  40e43c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e440:	ldr	w1, [x0, #2720]
  40e444:	cbz	w1, 40e470 <ferror@plt+0xba80>
  40e448:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e44c:	add	x0, x0, #0xa08
  40e450:	sub	w1, w1, #0x1
  40e454:	str	w1, [x0, #152]
  40e458:	ldr	x1, [x0, #176]
  40e45c:	add	x2, x1, #0x1
  40e460:	str	x2, [x0, #176]
  40e464:	ldrb	w0, [x19]
  40e468:	strb	w0, [x1]
  40e46c:	b	40e12c <ferror@plt+0xb73c>
  40e470:	ldrb	w0, [x19]
  40e474:	bl	40dd40 <ferror@plt+0xb350>
  40e478:	b	40e12c <ferror@plt+0xb73c>
  40e47c:	mov	w1, w20
  40e480:	mov	x0, x19
  40e484:	bl	40dff4 <ferror@plt+0xb604>
  40e488:	b	40e12c <ferror@plt+0xb73c>
  40e48c:	stp	x23, x24, [sp, #48]
  40e490:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e494:	ldrb	w0, [x0, #864]
  40e498:	cbz	w0, 40e730 <ferror@plt+0xbd40>
  40e49c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e4a0:	strb	wzr, [x0, #864]
  40e4a4:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40e4a8:	ldr	w0, [x1, #3496]
  40e4ac:	add	w0, w0, #0x1
  40e4b0:	str	w0, [x1, #3496]
  40e4b4:	cmp	w0, w3
  40e4b8:	b.eq	40e730 <ferror@plt+0xbd40>  // b.none
  40e4bc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e4c0:	ldr	x1, [x0, #2736]
  40e4c4:	cbz	x1, 40e558 <ferror@plt+0xbb68>
  40e4c8:	mov	w0, #0x23                  	// #35
  40e4cc:	bl	402470 <putc@plt>
  40e4d0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e4d4:	ldr	x1, [x0, #2736]
  40e4d8:	cbz	x1, 40e588 <ferror@plt+0xbb98>
  40e4dc:	mov	w0, #0x6c                  	// #108
  40e4e0:	bl	402470 <putc@plt>
  40e4e4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e4e8:	ldr	x1, [x0, #2736]
  40e4ec:	cbz	x1, 40e5b8 <ferror@plt+0xbbc8>
  40e4f0:	mov	w0, #0x69                  	// #105
  40e4f4:	bl	402470 <putc@plt>
  40e4f8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e4fc:	ldr	x1, [x0, #2736]
  40e500:	cbz	x1, 40e5e8 <ferror@plt+0xbbf8>
  40e504:	mov	w0, #0x6e                  	// #110
  40e508:	bl	402470 <putc@plt>
  40e50c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e510:	ldr	x1, [x0, #2736]
  40e514:	cbz	x1, 40e618 <ferror@plt+0xbc28>
  40e518:	mov	w0, #0x65                  	// #101
  40e51c:	bl	402470 <putc@plt>
  40e520:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e524:	ldr	x1, [x0, #2736]
  40e528:	cbz	x1, 40e648 <ferror@plt+0xbc58>
  40e52c:	mov	w0, #0x20                  	// #32
  40e530:	bl	402470 <putc@plt>
  40e534:	mov	w1, #0xa                   	// #10
  40e538:	mov	w0, w21
  40e53c:	bl	406d94 <ferror@plt+0x43a4>
  40e540:	mov	x23, x0
  40e544:	ldrb	w0, [x0]
  40e548:	cbz	w0, 40e704 <ferror@plt+0xbd14>
  40e54c:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e550:	add	x22, x22, #0xa08
  40e554:	b	40e6ec <ferror@plt+0xbcfc>
  40e558:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e55c:	ldr	w1, [x0, #2720]
  40e560:	cbz	w1, 40e67c <ferror@plt+0xbc8c>
  40e564:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e568:	add	x0, x0, #0xa08
  40e56c:	sub	w1, w1, #0x1
  40e570:	str	w1, [x0, #152]
  40e574:	ldr	x1, [x0, #176]
  40e578:	add	x2, x1, #0x1
  40e57c:	str	x2, [x0, #176]
  40e580:	mov	w0, #0x23                  	// #35
  40e584:	strb	w0, [x1]
  40e588:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e58c:	ldr	w1, [x0, #2720]
  40e590:	cbz	w1, 40e688 <ferror@plt+0xbc98>
  40e594:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e598:	add	x0, x0, #0xa08
  40e59c:	sub	w1, w1, #0x1
  40e5a0:	str	w1, [x0, #152]
  40e5a4:	ldr	x1, [x0, #176]
  40e5a8:	add	x2, x1, #0x1
  40e5ac:	str	x2, [x0, #176]
  40e5b0:	mov	w0, #0x6c                  	// #108
  40e5b4:	strb	w0, [x1]
  40e5b8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e5bc:	ldr	w1, [x0, #2720]
  40e5c0:	cbz	w1, 40e694 <ferror@plt+0xbca4>
  40e5c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e5c8:	add	x0, x0, #0xa08
  40e5cc:	sub	w1, w1, #0x1
  40e5d0:	str	w1, [x0, #152]
  40e5d4:	ldr	x1, [x0, #176]
  40e5d8:	add	x2, x1, #0x1
  40e5dc:	str	x2, [x0, #176]
  40e5e0:	mov	w0, #0x69                  	// #105
  40e5e4:	strb	w0, [x1]
  40e5e8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e5ec:	ldr	w1, [x0, #2720]
  40e5f0:	cbz	w1, 40e6a0 <ferror@plt+0xbcb0>
  40e5f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e5f8:	add	x0, x0, #0xa08
  40e5fc:	sub	w1, w1, #0x1
  40e600:	str	w1, [x0, #152]
  40e604:	ldr	x1, [x0, #176]
  40e608:	add	x2, x1, #0x1
  40e60c:	str	x2, [x0, #176]
  40e610:	mov	w0, #0x6e                  	// #110
  40e614:	strb	w0, [x1]
  40e618:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e61c:	ldr	w1, [x0, #2720]
  40e620:	cbz	w1, 40e6ac <ferror@plt+0xbcbc>
  40e624:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e628:	add	x0, x0, #0xa08
  40e62c:	sub	w1, w1, #0x1
  40e630:	str	w1, [x0, #152]
  40e634:	ldr	x1, [x0, #176]
  40e638:	add	x2, x1, #0x1
  40e63c:	str	x2, [x0, #176]
  40e640:	mov	w0, #0x65                  	// #101
  40e644:	strb	w0, [x1]
  40e648:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e64c:	ldr	w1, [x0, #2720]
  40e650:	cbz	w1, 40e6b8 <ferror@plt+0xbcc8>
  40e654:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e658:	add	x0, x0, #0xa08
  40e65c:	sub	w1, w1, #0x1
  40e660:	str	w1, [x0, #152]
  40e664:	ldr	x1, [x0, #176]
  40e668:	add	x2, x1, #0x1
  40e66c:	str	x2, [x0, #176]
  40e670:	mov	w0, #0x20                  	// #32
  40e674:	strb	w0, [x1]
  40e678:	b	40e534 <ferror@plt+0xbb44>
  40e67c:	mov	w0, #0x23                  	// #35
  40e680:	bl	40dd40 <ferror@plt+0xb350>
  40e684:	b	40e4d0 <ferror@plt+0xbae0>
  40e688:	mov	w0, #0x6c                  	// #108
  40e68c:	bl	40dd40 <ferror@plt+0xb350>
  40e690:	b	40e4e4 <ferror@plt+0xbaf4>
  40e694:	mov	w0, #0x69                  	// #105
  40e698:	bl	40dd40 <ferror@plt+0xb350>
  40e69c:	b	40e4f8 <ferror@plt+0xbb08>
  40e6a0:	mov	w0, #0x6e                  	// #110
  40e6a4:	bl	40dd40 <ferror@plt+0xb350>
  40e6a8:	b	40e50c <ferror@plt+0xbb1c>
  40e6ac:	mov	w0, #0x65                  	// #101
  40e6b0:	bl	40dd40 <ferror@plt+0xb350>
  40e6b4:	b	40e520 <ferror@plt+0xbb30>
  40e6b8:	mov	w0, #0x20                  	// #32
  40e6bc:	bl	40dd40 <ferror@plt+0xb350>
  40e6c0:	b	40e534 <ferror@plt+0xbb44>
  40e6c4:	ldr	w1, [x22, #152]
  40e6c8:	cbz	w1, 40e6fc <ferror@plt+0xbd0c>
  40e6cc:	sub	w1, w1, #0x1
  40e6d0:	str	w1, [x22, #152]
  40e6d4:	ldr	x1, [x22, #176]
  40e6d8:	add	x2, x1, #0x1
  40e6dc:	str	x2, [x22, #176]
  40e6e0:	strb	w0, [x1]
  40e6e4:	ldrb	w0, [x23, #1]!
  40e6e8:	cbz	w0, 40e704 <ferror@plt+0xbd14>
  40e6ec:	ldr	x1, [x22, #168]
  40e6f0:	cbz	x1, 40e6c4 <ferror@plt+0xbcd4>
  40e6f4:	bl	402470 <putc@plt>
  40e6f8:	b	40e6e4 <ferror@plt+0xbcf4>
  40e6fc:	bl	40dd40 <ferror@plt+0xb350>
  40e700:	b	40e6e4 <ferror@plt+0xbcf4>
  40e704:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40e708:	ldr	w0, [x0, #3496]
  40e70c:	cmp	w0, #0x0
  40e710:	b.le	40e764 <ferror@plt+0xbd74>
  40e714:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e718:	ldr	x1, [x0, #2736]
  40e71c:	cbz	x1, 40e8bc <ferror@plt+0xbecc>
  40e720:	mov	w0, #0xa                   	// #10
  40e724:	bl	402470 <putc@plt>
  40e728:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40e72c:	str	w21, [x0, #3496]
  40e730:	cmp	w20, #0x0
  40e734:	b.le	40e990 <ferror@plt+0xbfa0>
  40e738:	sub	w20, w20, #0x1
  40e73c:	add	x20, x20, #0x1
  40e740:	add	x20, x19, x20
  40e744:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e748:	add	x22, x22, #0x360
  40e74c:	adrp	x23, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40e750:	add	x23, x23, #0xda8
  40e754:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e758:	add	x21, x21, #0xa08
  40e75c:	mov	w24, #0x1                   	// #1
  40e760:	b	40e930 <ferror@plt+0xbf40>
  40e764:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40e768:	ldr	x0, [x0, #3440]
  40e76c:	ldrb	w0, [x0]
  40e770:	cbz	w0, 40e714 <ferror@plt+0xbd24>
  40e774:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e778:	ldr	x1, [x0, #2736]
  40e77c:	cbz	x1, 40e7b8 <ferror@plt+0xbdc8>
  40e780:	mov	w0, #0x20                  	// #32
  40e784:	bl	402470 <putc@plt>
  40e788:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e78c:	ldr	x1, [x0, #2736]
  40e790:	cbz	x1, 40e7e8 <ferror@plt+0xbdf8>
  40e794:	mov	w0, #0x22                  	// #34
  40e798:	bl	402470 <putc@plt>
  40e79c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40e7a0:	ldr	x23, [x0, #3440]
  40e7a4:	ldrb	w0, [x23]
  40e7a8:	cbz	w0, 40e874 <ferror@plt+0xbe84>
  40e7ac:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e7b0:	add	x22, x22, #0xa08
  40e7b4:	b	40e840 <ferror@plt+0xbe50>
  40e7b8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e7bc:	ldr	w1, [x0, #2720]
  40e7c0:	cbz	w1, 40e81c <ferror@plt+0xbe2c>
  40e7c4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e7c8:	add	x0, x0, #0xa08
  40e7cc:	sub	w1, w1, #0x1
  40e7d0:	str	w1, [x0, #152]
  40e7d4:	ldr	x1, [x0, #176]
  40e7d8:	add	x2, x1, #0x1
  40e7dc:	str	x2, [x0, #176]
  40e7e0:	mov	w0, #0x20                  	// #32
  40e7e4:	strb	w0, [x1]
  40e7e8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e7ec:	ldr	w1, [x0, #2720]
  40e7f0:	cbz	w1, 40e828 <ferror@plt+0xbe38>
  40e7f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e7f8:	add	x0, x0, #0xa08
  40e7fc:	sub	w1, w1, #0x1
  40e800:	str	w1, [x0, #152]
  40e804:	ldr	x1, [x0, #176]
  40e808:	add	x2, x1, #0x1
  40e80c:	str	x2, [x0, #176]
  40e810:	mov	w0, #0x22                  	// #34
  40e814:	strb	w0, [x1]
  40e818:	b	40e79c <ferror@plt+0xbdac>
  40e81c:	mov	w0, #0x20                  	// #32
  40e820:	bl	40dd40 <ferror@plt+0xb350>
  40e824:	b	40e788 <ferror@plt+0xbd98>
  40e828:	mov	w0, #0x22                  	// #34
  40e82c:	bl	40dd40 <ferror@plt+0xb350>
  40e830:	b	40e79c <ferror@plt+0xbdac>
  40e834:	bl	402470 <putc@plt>
  40e838:	ldrb	w0, [x23, #1]!
  40e83c:	cbz	w0, 40e874 <ferror@plt+0xbe84>
  40e840:	ldr	x1, [x22, #168]
  40e844:	cbnz	x1, 40e834 <ferror@plt+0xbe44>
  40e848:	ldr	w1, [x22, #152]
  40e84c:	cbz	w1, 40e86c <ferror@plt+0xbe7c>
  40e850:	sub	w1, w1, #0x1
  40e854:	str	w1, [x22, #152]
  40e858:	ldr	x1, [x22, #176]
  40e85c:	add	x2, x1, #0x1
  40e860:	str	x2, [x22, #176]
  40e864:	strb	w0, [x1]
  40e868:	b	40e838 <ferror@plt+0xbe48>
  40e86c:	bl	40dd40 <ferror@plt+0xb350>
  40e870:	b	40e838 <ferror@plt+0xbe48>
  40e874:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e878:	ldr	x1, [x0, #2736]
  40e87c:	cbz	x1, 40e88c <ferror@plt+0xbe9c>
  40e880:	mov	w0, #0x22                  	// #34
  40e884:	bl	402470 <putc@plt>
  40e888:	b	40e714 <ferror@plt+0xbd24>
  40e88c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e890:	ldr	w1, [x0, #2720]
  40e894:	cbz	w1, 40e8f0 <ferror@plt+0xbf00>
  40e898:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e89c:	add	x0, x0, #0xa08
  40e8a0:	sub	w1, w1, #0x1
  40e8a4:	str	w1, [x0, #152]
  40e8a8:	ldr	x1, [x0, #176]
  40e8ac:	add	x2, x1, #0x1
  40e8b0:	str	x2, [x0, #176]
  40e8b4:	mov	w0, #0x22                  	// #34
  40e8b8:	strb	w0, [x1]
  40e8bc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e8c0:	ldr	w1, [x0, #2720]
  40e8c4:	cbz	w1, 40e8fc <ferror@plt+0xbf0c>
  40e8c8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e8cc:	add	x0, x0, #0xa08
  40e8d0:	sub	w1, w1, #0x1
  40e8d4:	str	w1, [x0, #152]
  40e8d8:	ldr	x1, [x0, #176]
  40e8dc:	add	x2, x1, #0x1
  40e8e0:	str	x2, [x0, #176]
  40e8e4:	mov	w0, #0xa                   	// #10
  40e8e8:	strb	w0, [x1]
  40e8ec:	b	40e728 <ferror@plt+0xbd38>
  40e8f0:	mov	w0, #0x22                  	// #34
  40e8f4:	bl	40dd40 <ferror@plt+0xb350>
  40e8f8:	b	40e714 <ferror@plt+0xbd24>
  40e8fc:	mov	w0, #0xa                   	// #10
  40e900:	bl	40dd40 <ferror@plt+0xb350>
  40e904:	b	40e728 <ferror@plt+0xbd38>
  40e908:	ldr	x1, [x21, #168]
  40e90c:	cbz	x1, 40e94c <ferror@plt+0xbf5c>
  40e910:	ldrb	w0, [x19]
  40e914:	bl	402470 <putc@plt>
  40e918:	ldrb	w0, [x19]
  40e91c:	cmp	w0, #0xa
  40e920:	b.eq	40e980 <ferror@plt+0xbf90>  // b.none
  40e924:	add	x19, x19, #0x1
  40e928:	cmp	x19, x20
  40e92c:	b.eq	40e988 <ferror@plt+0xbf98>  // b.none
  40e930:	ldrb	w0, [x22]
  40e934:	cbz	w0, 40e908 <ferror@plt+0xbf18>
  40e938:	strb	wzr, [x22]
  40e93c:	ldr	w0, [x23]
  40e940:	add	w0, w0, #0x1
  40e944:	str	w0, [x23]
  40e948:	b	40e908 <ferror@plt+0xbf18>
  40e94c:	ldr	w0, [x21, #152]
  40e950:	cbz	w0, 40e974 <ferror@plt+0xbf84>
  40e954:	sub	w0, w0, #0x1
  40e958:	str	w0, [x21, #152]
  40e95c:	ldr	x0, [x21, #176]
  40e960:	add	x1, x0, #0x1
  40e964:	str	x1, [x21, #176]
  40e968:	ldrb	w1, [x19]
  40e96c:	strb	w1, [x0]
  40e970:	b	40e918 <ferror@plt+0xbf28>
  40e974:	ldrb	w0, [x19]
  40e978:	bl	40dd40 <ferror@plt+0xb350>
  40e97c:	b	40e918 <ferror@plt+0xbf28>
  40e980:	strb	w24, [x22]
  40e984:	b	40e924 <ferror@plt+0xbf34>
  40e988:	ldp	x23, x24, [sp, #48]
  40e98c:	b	40e12c <ferror@plt+0xb73c>
  40e990:	ldp	x23, x24, [sp, #48]
  40e994:	b	40e12c <ferror@plt+0xb73c>
  40e998:	stp	x29, x30, [sp, #-64]!
  40e99c:	mov	x29, sp
  40e9a0:	str	w0, [sp, #44]
  40e9a4:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40e9a8:	ldr	w1, [x1, #3500]
  40e9ac:	cmp	w1, w0
  40e9b0:	b.eq	40eb90 <ferror@plt+0xc1a0>  // b.none
  40e9b4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40e9b8:	ldr	x1, [x0, #2712]
  40e9bc:	cbz	x1, 40eabc <ferror@plt+0xc0cc>
  40e9c0:	ldr	w0, [x1, #12]
  40e9c4:	cbnz	w0, 40ea94 <ferror@plt+0xc0a4>
  40e9c8:	ldr	x0, [x1]
  40e9cc:	cbz	x0, 40ea04 <ferror@plt+0xc014>
  40e9d0:	ldr	w2, [x1, #16]
  40e9d4:	cbz	w2, 40eaa4 <ferror@plt+0xc0b4>
  40e9d8:	str	xzr, [x1]
  40e9dc:	ldr	w1, [x1, #8]
  40e9e0:	bl	40d65c <ferror@plt+0xac6c>
  40e9e4:	cbz	w0, 40eaa4 <ferror@plt+0xc0b4>
  40e9e8:	bl	402970 <__errno_location@plt>
  40e9ec:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40e9f0:	add	x2, x2, #0xf60
  40e9f4:	ldr	w1, [x0]
  40e9f8:	mov	w0, #0x0                   	// #0
  40e9fc:	bl	402c80 <ferror@plt+0x290>
  40ea00:	b	40eaa4 <ferror@plt+0xc0b4>
  40ea04:	ldr	w0, [x1, #16]
  40ea08:	cbnz	w0, 40ea44 <ferror@plt+0xc054>
  40ea0c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ea10:	ldr	x0, [x0, #2728]
  40ea14:	ldr	x2, [x0]
  40ea18:	ldr	x2, [x2, #40]
  40ea1c:	blr	x2
  40ea20:	and	w0, w0, #0xff
  40ea24:	cbz	w0, 40ea6c <ferror@plt+0xc07c>
  40ea28:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ea2c:	add	x0, x0, #0xa08
  40ea30:	ldr	x1, [x0, #144]
  40ea34:	ldr	x2, [x0, #208]
  40ea38:	str	x2, [x1]
  40ea3c:	str	x1, [x0, #208]
  40ea40:	b	40eaa4 <ferror@plt+0xc0b4>
  40ea44:	str	x19, [sp, #16]
  40ea48:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x306c>
  40ea4c:	add	x3, x3, #0x108
  40ea50:	add	x3, x3, #0x10
  40ea54:	mov	w2, #0x2dd                 	// #733
  40ea58:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40ea5c:	add	x1, x1, #0xe98
  40ea60:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  40ea64:	add	x0, x0, #0x30
  40ea68:	bl	402960 <__assert_fail@plt>
  40ea6c:	str	x19, [sp, #16]
  40ea70:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x306c>
  40ea74:	add	x3, x3, #0x108
  40ea78:	add	x3, x3, #0x10
  40ea7c:	mov	w2, #0x2df                 	// #735
  40ea80:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40ea84:	add	x1, x1, #0xe98
  40ea88:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  40ea8c:	add	x0, x0, #0x48
  40ea90:	bl	402960 <__assert_fail@plt>
  40ea94:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ea98:	ldr	w2, [x2, #2720]
  40ea9c:	sub	w0, w0, w2
  40eaa0:	str	w0, [x1, #16]
  40eaa4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eaa8:	add	x0, x0, #0xa08
  40eaac:	str	xzr, [x0, #144]
  40eab0:	str	xzr, [x0, #168]
  40eab4:	str	xzr, [x0, #176]
  40eab8:	str	wzr, [x0, #152]
  40eabc:	ldr	w0, [sp, #44]
  40eac0:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40eac4:	str	w0, [x1, #3500]
  40eac8:	tbnz	w0, #31, 40eb90 <ferror@plt+0xc1a0>
  40eacc:	str	x19, [sp, #16]
  40ead0:	cbz	w0, 40ec9c <ferror@plt+0xc2ac>
  40ead4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ead8:	ldr	x0, [x0, #2728]
  40eadc:	ldr	x1, [x0]
  40eae0:	ldr	x4, [x1, #24]
  40eae4:	add	x3, sp, #0x38
  40eae8:	add	x2, sp, #0x2c
  40eaec:	adrp	x1, 40d000 <ferror@plt+0xa610>
  40eaf0:	add	x1, x1, #0x648
  40eaf4:	blr	x4
  40eaf8:	and	w0, w0, #0xff
  40eafc:	cbz	w0, 40eb14 <ferror@plt+0xc124>
  40eb00:	ldr	x19, [sp, #56]
  40eb04:	ldr	w1, [x19, #8]
  40eb08:	ldr	w0, [sp, #44]
  40eb0c:	cmp	w1, w0
  40eb10:	b.eq	40eb50 <ferror@plt+0xc160>  // b.none
  40eb14:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eb18:	ldr	x19, [x0, #2776]
  40eb1c:	cbz	x19, 40eb98 <ferror@plt+0xc1a8>
  40eb20:	ldr	x1, [x19]
  40eb24:	str	x1, [x0, #2776]
  40eb28:	str	xzr, [x19]
  40eb2c:	ldr	w0, [sp, #44]
  40eb30:	str	w0, [x19, #8]
  40eb34:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eb38:	ldr	x0, [x0, #2728]
  40eb3c:	ldr	x1, [x0]
  40eb40:	ldr	x2, [x1, #32]
  40eb44:	mov	x1, x19
  40eb48:	blr	x2
  40eb4c:	tbnz	w0, #31, 40ec5c <ferror@plt+0xc26c>
  40eb50:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eb54:	str	x19, [x0, #2712]
  40eb58:	ldr	w0, [x19, #12]
  40eb5c:	cbz	w0, 40ec60 <ferror@plt+0xc270>
  40eb60:	ldr	w3, [x19, #16]
  40eb64:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eb68:	add	x1, x1, #0xa08
  40eb6c:	ldr	x2, [x19]
  40eb70:	add	x2, x2, w3, sxtw
  40eb74:	str	x2, [x1, #176]
  40eb78:	sub	w0, w0, w3
  40eb7c:	str	w0, [x1, #152]
  40eb80:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40eb84:	mov	w1, #0xffffffff            	// #-1
  40eb88:	str	w1, [x0, #3496]
  40eb8c:	ldr	x19, [sp, #16]
  40eb90:	ldp	x29, x30, [sp], #64
  40eb94:	ret
  40eb98:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eb9c:	add	x0, x0, #0xa08
  40eba0:	ldr	x1, [x0, #88]
  40eba4:	add	x0, x0, #0x38
  40eba8:	ldr	x0, [x0, #24]
  40ebac:	sub	x0, x1, x0
  40ebb0:	cmp	x0, #0x17
  40ebb4:	b.ls	40ec2c <ferror@plt+0xc23c>  // b.plast
  40ebb8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ebbc:	add	x0, x0, #0xa08
  40ebc0:	ldr	x2, [x0, #80]
  40ebc4:	add	x2, x2, #0x18
  40ebc8:	ldr	x19, [x0, #72]
  40ebcc:	cmp	x2, x19
  40ebd0:	b.eq	40ec44 <ferror@plt+0xc254>  // b.none
  40ebd4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ebd8:	add	x0, x0, #0xa08
  40ebdc:	ldr	x1, [x0, #104]
  40ebe0:	add	x2, x2, x1
  40ebe4:	bic	x1, x2, x1
  40ebe8:	str	x1, [x0, #80]
  40ebec:	ldr	x2, [x0, #64]
  40ebf0:	add	x0, x0, #0x38
  40ebf4:	ldr	x0, [x0, #32]
  40ebf8:	sub	x1, x1, x2
  40ebfc:	sub	x2, x0, x2
  40ec00:	cmp	x1, x2
  40ec04:	b.ls	40ec10 <ferror@plt+0xc220>  // b.plast
  40ec08:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ec0c:	str	x0, [x1, #2648]
  40ec10:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ec14:	add	x0, x0, #0xa08
  40ec18:	ldr	x1, [x0, #80]
  40ec1c:	str	x1, [x0, #72]
  40ec20:	str	wzr, [x19, #12]
  40ec24:	str	wzr, [x19, #16]
  40ec28:	b	40eb28 <ferror@plt+0xc138>
  40ec2c:	mov	x1, #0x18                  	// #24
  40ec30:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ec34:	add	x0, x0, #0xa08
  40ec38:	add	x0, x0, #0x38
  40ec3c:	bl	416dc4 <_obstack_newchunk@@Base>
  40ec40:	b	40ebb8 <ferror@plt+0xc1c8>
  40ec44:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ec48:	add	x0, x0, #0xa08
  40ec4c:	ldrb	w1, [x0, #136]
  40ec50:	orr	w1, w1, #0x2
  40ec54:	strb	w1, [x0, #136]
  40ec58:	b	40ebd4 <ferror@plt+0xc1e4>
  40ec5c:	bl	4162e8 <ferror@plt+0x138f8>
  40ec60:	ldr	x0, [x19]
  40ec64:	cbz	x0, 40ec80 <ferror@plt+0xc290>
  40ec68:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ec6c:	add	x0, x0, #0xa08
  40ec70:	ldr	x1, [x0, #144]
  40ec74:	ldr	x1, [x1]
  40ec78:	str	x1, [x0, #168]
  40ec7c:	b	40eb80 <ferror@plt+0xc190>
  40ec80:	ldr	w0, [x19, #16]
  40ec84:	cbz	w0, 40ec68 <ferror@plt+0xc278>
  40ec88:	mov	w1, #0x0                   	// #0
  40ec8c:	ldr	w0, [x19, #8]
  40ec90:	bl	40dda0 <ferror@plt+0xb3b0>
  40ec94:	str	x0, [x19]
  40ec98:	b	40ec68 <ferror@plt+0xc278>
  40ec9c:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eca0:	add	x19, x19, #0xa08
  40eca4:	add	x19, x19, #0xb8
  40eca8:	b	40eb50 <ferror@plt+0xc160>
  40ecac:	stp	x29, x30, [sp, #-64]!
  40ecb0:	mov	x29, sp
  40ecb4:	stp	x19, x20, [sp, #16]
  40ecb8:	mov	x20, x0
  40ecbc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ecc0:	ldr	x0, [x0, #2712]
  40ecc4:	cbz	x0, 40ed40 <ferror@plt+0xc350>
  40ecc8:	stp	x21, x22, [sp, #32]
  40eccc:	stp	x23, x24, [sp, #48]
  40ecd0:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ecd4:	add	x21, x21, #0xae0
  40ecd8:	mov	x23, #0x4000                	// #16384
  40ecdc:	mov	x22, #0x1                   	// #1
  40ece0:	adrp	x24, 41a000 <_obstack_memory_used@@Base+0x306c>
  40ece4:	add	x24, x24, #0x50
  40ece8:	b	40ed10 <ferror@plt+0xc320>
  40ecec:	bl	402970 <__errno_location@plt>
  40ecf0:	mov	x2, x24
  40ecf4:	ldr	w1, [x0]
  40ecf8:	mov	w0, #0x1                   	// #1
  40ecfc:	bl	402c80 <ferror@plt+0x290>
  40ed00:	cbz	x19, 40ed38 <ferror@plt+0xc348>
  40ed04:	mov	w1, w19
  40ed08:	mov	x0, x21
  40ed0c:	bl	40dff4 <ferror@plt+0xb604>
  40ed10:	mov	x3, x20
  40ed14:	mov	x2, x23
  40ed18:	mov	x1, x22
  40ed1c:	mov	x0, x21
  40ed20:	bl	402800 <fread@plt>
  40ed24:	mov	x19, x0
  40ed28:	mov	x0, x20
  40ed2c:	bl	4029f0 <ferror@plt>
  40ed30:	cbz	w0, 40ed00 <ferror@plt+0xc310>
  40ed34:	b	40ecec <ferror@plt+0xc2fc>
  40ed38:	ldp	x21, x22, [sp, #32]
  40ed3c:	ldp	x23, x24, [sp, #48]
  40ed40:	ldp	x19, x20, [sp, #16]
  40ed44:	ldp	x29, x30, [sp], #64
  40ed48:	ret
  40ed4c:	stp	x29, x30, [sp, #-80]!
  40ed50:	mov	x29, sp
  40ed54:	stp	x19, x20, [sp, #16]
  40ed58:	mov	x19, x0
  40ed5c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ed60:	ldr	x20, [x0, #2712]
  40ed64:	cbz	x20, 40f034 <ferror@plt+0xc644>
  40ed68:	ldr	w0, [x19, #12]
  40ed6c:	cbz	w0, 40ee2c <ferror@plt+0xc43c>
  40ed70:	ldr	x1, [x20]
  40ed74:	cbz	x1, 40ed9c <ferror@plt+0xc3ac>
  40ed78:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ed7c:	add	x1, x1, #0xa08
  40ed80:	ldr	w2, [x1, #156]
  40ed84:	sub	w0, w2, w0
  40ed88:	str	w0, [x1, #156]
  40ed8c:	ldr	w1, [x19, #16]
  40ed90:	ldr	x0, [x19]
  40ed94:	bl	40dff4 <ferror@plt+0xb604>
  40ed98:	b	40ee44 <ferror@plt+0xc454>
  40ed9c:	ldr	w1, [x20, #16]
  40eda0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eda4:	add	x0, x0, #0xa08
  40eda8:	cmp	w1, #0x0
  40edac:	add	x0, x0, #0xb8
  40edb0:	ccmp	x20, x0, #0x4, eq  // eq = none
  40edb4:	b.eq	40edfc <ferror@plt+0xc40c>  // b.none
  40edb8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40edbc:	ldr	x0, [x0, #2736]
  40edc0:	cbnz	x0, 40edfc <ferror@plt+0xc40c>
  40edc4:	ldr	x0, [x19]
  40edc8:	str	x0, [x20]
  40edcc:	ldr	w1, [x19, #12]
  40edd0:	str	w1, [x20, #12]
  40edd4:	ldr	w3, [x19, #16]
  40edd8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eddc:	add	x0, x0, #0xa08
  40ede0:	ldr	x2, [x19]
  40ede4:	add	x2, x2, w3, sxtw
  40ede8:	str	x2, [x0, #176]
  40edec:	sub	w1, w1, w3
  40edf0:	str	w1, [x0, #152]
  40edf4:	str	xzr, [x19]
  40edf8:	b	40ee44 <ferror@plt+0xc454>
  40edfc:	stp	x21, x22, [sp, #32]
  40ee00:	stp	x23, x24, [sp, #48]
  40ee04:	str	x25, [sp, #64]
  40ee08:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x306c>
  40ee0c:	add	x3, x3, #0x108
  40ee10:	add	x3, x3, #0x20
  40ee14:	mov	w2, #0x358                 	// #856
  40ee18:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40ee1c:	add	x1, x1, #0xe98
  40ee20:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  40ee24:	add	x0, x0, #0x70
  40ee28:	bl	402960 <__assert_fail@plt>
  40ee2c:	ldr	x0, [x20]
  40ee30:	cbz	x0, 40eea8 <ferror@plt+0xc4b8>
  40ee34:	ldr	x0, [x19]
  40ee38:	cbz	x0, 40efec <ferror@plt+0xc5fc>
  40ee3c:	ldr	x0, [x19]
  40ee40:	bl	40ecac <ferror@plt+0xc2bc>
  40ee44:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40ee48:	mov	w1, #0xffffffff            	// #-1
  40ee4c:	str	w1, [x0, #3496]
  40ee50:	ldr	w0, [x19, #12]
  40ee54:	cbz	w0, 40f03c <ferror@plt+0xc64c>
  40ee58:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ee5c:	ldr	x1, [x1, #2712]
  40ee60:	cbz	x1, 40f000 <ferror@plt+0xc610>
  40ee64:	ldr	x0, [x19]
  40ee68:	bl	402810 <free@plt>
  40ee6c:	str	wzr, [x19, #12]
  40ee70:	str	wzr, [x19, #16]
  40ee74:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ee78:	add	x20, x20, #0xa08
  40ee7c:	ldr	x0, [x20, #160]
  40ee80:	ldr	x1, [x0]
  40ee84:	ldr	x2, [x1, #40]
  40ee88:	mov	x1, x19
  40ee8c:	blr	x2
  40ee90:	ldr	x0, [x20, #208]
  40ee94:	str	x0, [x19]
  40ee98:	str	x19, [x20, #208]
  40ee9c:	ldp	x19, x20, [sp, #16]
  40eea0:	ldp	x29, x30, [sp], #80
  40eea4:	ret
  40eea8:	stp	x21, x22, [sp, #32]
  40eeac:	stp	x23, x24, [sp, #48]
  40eeb0:	str	x25, [sp, #64]
  40eeb4:	ldr	w1, [x20, #16]
  40eeb8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eebc:	add	x0, x0, #0xa08
  40eec0:	cmp	w1, #0x0
  40eec4:	add	x0, x0, #0xb8
  40eec8:	ccmp	x20, x0, #0x4, eq  // eq = none
  40eecc:	b.eq	40ef98 <ferror@plt+0xc5a8>  // b.none
  40eed0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40eed4:	ldr	x0, [x0, #2736]
  40eed8:	cbnz	x0, 40ef98 <ferror@plt+0xc5a8>
  40eedc:	ldr	w25, [x19, #8]
  40eee0:	ldr	w23, [x20, #8]
  40eee4:	mov	w0, w25
  40eee8:	bl	40d70c <ferror@plt+0xad1c>
  40eeec:	bl	4162bc <ferror@plt+0x138cc>
  40eef0:	mov	x22, x0
  40eef4:	mov	w0, w23
  40eef8:	bl	40d70c <ferror@plt+0xad1c>
  40eefc:	mov	x21, x0
  40ef00:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ef04:	add	x0, x24, #0xa08
  40ef08:	mov	x1, x21
  40ef0c:	ldr	x0, [x0, #40]
  40ef10:	bl	410c0c <ferror@plt+0xe21c>
  40ef14:	ldr	w0, [x24, #2568]
  40ef18:	cmp	w25, w0
  40ef1c:	b.eq	40efbc <ferror@plt+0xc5cc>  // b.none
  40ef20:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ef24:	ldr	w0, [x0, #2572]
  40ef28:	cmp	w25, w0
  40ef2c:	b.eq	40efc4 <ferror@plt+0xc5d4>  // b.none
  40ef30:	mov	x1, x21
  40ef34:	mov	x0, x22
  40ef38:	bl	402870 <rename@plt>
  40ef3c:	cbnz	w0, 40efd0 <ferror@plt+0xc5e0>
  40ef40:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1906c>
  40ef44:	add	x21, x21, #0xa08
  40ef48:	mov	x1, x22
  40ef4c:	ldr	x0, [x21, #40]
  40ef50:	bl	410c90 <ferror@plt+0xe2a0>
  40ef54:	mov	x0, x22
  40ef58:	bl	402810 <free@plt>
  40ef5c:	mov	w1, #0x0                   	// #0
  40ef60:	mov	w0, w23
  40ef64:	bl	40dda0 <ferror@plt+0xb3b0>
  40ef68:	str	x0, [x20]
  40ef6c:	ldr	x1, [x21, #144]
  40ef70:	mov	w0, #0x1                   	// #1
  40ef74:	str	w0, [x1, #16]
  40ef78:	ldr	x1, [x1]
  40ef7c:	str	x1, [x21, #168]
  40ef80:	str	xzr, [x19]
  40ef84:	str	w0, [x19, #12]
  40ef88:	ldp	x21, x22, [sp, #32]
  40ef8c:	ldp	x23, x24, [sp, #48]
  40ef90:	ldr	x25, [sp, #64]
  40ef94:	b	40ee44 <ferror@plt+0xc454>
  40ef98:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x306c>
  40ef9c:	add	x3, x3, #0x108
  40efa0:	add	x3, x3, #0x20
  40efa4:	mov	w2, #0x36d                 	// #877
  40efa8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x206c>
  40efac:	add	x1, x1, #0xe98
  40efb0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  40efb4:	add	x0, x0, #0x70
  40efb8:	bl	402960 <__assert_fail@plt>
  40efbc:	str	w23, [x24, #2568]
  40efc0:	b	40ef30 <ferror@plt+0xc540>
  40efc4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40efc8:	str	w23, [x0, #2572]
  40efcc:	b	40ef30 <ferror@plt+0xc540>
  40efd0:	bl	402970 <__errno_location@plt>
  40efd4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40efd8:	add	x2, x2, #0xec8
  40efdc:	ldr	w1, [x0]
  40efe0:	mov	w0, #0x1                   	// #1
  40efe4:	bl	402c80 <ferror@plt+0x290>
  40efe8:	b	40ef40 <ferror@plt+0xc550>
  40efec:	mov	w1, #0x1                   	// #1
  40eff0:	ldr	w0, [x19, #8]
  40eff4:	bl	40dda0 <ferror@plt+0xb3b0>
  40eff8:	str	x0, [x19]
  40effc:	b	40ee3c <ferror@plt+0xc44c>
  40f000:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f004:	add	x1, x1, #0xa08
  40f008:	ldr	w2, [x1, #156]
  40f00c:	sub	w0, w2, w0
  40f010:	str	w0, [x1, #156]
  40f014:	b	40ee64 <ferror@plt+0xc474>
  40f018:	bl	402970 <__errno_location@plt>
  40f01c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40f020:	add	x2, x2, #0xf90
  40f024:	ldr	w1, [x0]
  40f028:	mov	w0, #0x0                   	// #0
  40f02c:	bl	402c80 <ferror@plt+0x290>
  40f030:	b	40f054 <ferror@plt+0xc664>
  40f034:	ldr	w0, [x19, #12]
  40f038:	cbnz	w0, 40f000 <ferror@plt+0xc610>
  40f03c:	ldr	x0, [x19]
  40f040:	cbz	x0, 40f054 <ferror@plt+0xc664>
  40f044:	str	xzr, [x19]
  40f048:	ldr	w1, [x19, #8]
  40f04c:	bl	40d65c <ferror@plt+0xac6c>
  40f050:	cbnz	w0, 40f018 <ferror@plt+0xc628>
  40f054:	ldr	w0, [x19, #8]
  40f058:	bl	40d8a8 <ferror@plt+0xaeb8>
  40f05c:	cbz	w0, 40ee70 <ferror@plt+0xc480>
  40f060:	bl	402970 <__errno_location@plt>
  40f064:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  40f068:	add	x2, x2, #0xf90
  40f06c:	ldr	w1, [x0]
  40f070:	mov	w0, #0x0                   	// #0
  40f074:	bl	402c80 <ferror@plt+0x290>
  40f078:	b	40ee70 <ferror@plt+0xc480>
  40f07c:	stp	x29, x30, [sp, #-48]!
  40f080:	mov	x29, sp
  40f084:	str	w0, [sp, #28]
  40f088:	cmp	w0, #0x0
  40f08c:	b.le	40f0e0 <ferror@plt+0xc6f0>
  40f090:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40f094:	ldr	w1, [x1, #3500]
  40f098:	cmp	w0, w1
  40f09c:	b.eq	40f0e0 <ferror@plt+0xc6f0>  // b.none
  40f0a0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f0a4:	ldr	x0, [x0, #2728]
  40f0a8:	ldr	x1, [x0]
  40f0ac:	ldr	x4, [x1, #24]
  40f0b0:	add	x3, sp, #0x28
  40f0b4:	add	x2, sp, #0x1c
  40f0b8:	adrp	x1, 40d000 <ferror@plt+0xa610>
  40f0bc:	add	x1, x1, #0x648
  40f0c0:	blr	x4
  40f0c4:	and	w0, w0, #0xff
  40f0c8:	cbz	w0, 40f0e0 <ferror@plt+0xc6f0>
  40f0cc:	ldr	x0, [sp, #40]
  40f0d0:	ldr	w2, [x0, #8]
  40f0d4:	ldr	w1, [sp, #28]
  40f0d8:	cmp	w2, w1
  40f0dc:	b.eq	40f0e8 <ferror@plt+0xc6f8>  // b.none
  40f0e0:	ldp	x29, x30, [sp], #48
  40f0e4:	ret
  40f0e8:	bl	40ed4c <ferror@plt+0xc35c>
  40f0ec:	b	40f0e0 <ferror@plt+0xc6f0>
  40f0f0:	stp	x29, x30, [sp, #-96]!
  40f0f4:	mov	x29, sp
  40f0f8:	str	x19, [sp, #16]
  40f0fc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f100:	ldr	x0, [x0, #2728]
  40f104:	ldr	x1, [x0]
  40f108:	add	x8, sp, #0x20
  40f10c:	ldr	x1, [x1, #56]
  40f110:	blr	x1
  40f114:	adrp	x19, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40f118:	add	x19, x19, #0xdac
  40f11c:	ldr	x0, [sp, #32]
  40f120:	ldr	x2, [x0, #64]
  40f124:	add	x1, sp, #0x58
  40f128:	add	x0, sp, #0x20
  40f12c:	blr	x2
  40f130:	and	w0, w0, #0xff
  40f134:	cbz	w0, 40f154 <ferror@plt+0xc764>
  40f138:	ldr	x0, [sp, #88]
  40f13c:	ldr	w2, [x0, #8]
  40f140:	ldr	w1, [x19]
  40f144:	cmp	w2, w1
  40f148:	b.eq	40f11c <ferror@plt+0xc72c>  // b.none
  40f14c:	bl	40ed4c <ferror@plt+0xc35c>
  40f150:	b	40f11c <ferror@plt+0xc72c>
  40f154:	ldr	x0, [sp, #32]
  40f158:	ldr	x1, [x0, #72]
  40f15c:	add	x0, sp, #0x20
  40f160:	blr	x1
  40f164:	ldr	x19, [sp, #16]
  40f168:	ldp	x29, x30, [sp], #96
  40f16c:	ret
  40f170:	stp	x29, x30, [sp, #-256]!
  40f174:	mov	x29, sp
  40f178:	stp	x19, x20, [sp, #16]
  40f17c:	stp	x21, x22, [sp, #32]
  40f180:	str	x23, [sp, #48]
  40f184:	mov	x20, x0
  40f188:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40f18c:	ldr	w23, [x0, #3500]
  40f190:	mov	w0, #0x0                   	// #0
  40f194:	bl	40e998 <ferror@plt+0xbfa8>
  40f198:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f19c:	add	x0, x0, #0xa08
  40f1a0:	str	x20, [x0, #168]
  40f1a4:	ldr	x0, [x0, #160]
  40f1a8:	ldr	x1, [x0]
  40f1ac:	add	x8, sp, #0x40
  40f1b0:	ldr	x1, [x1, #56]
  40f1b4:	blr	x1
  40f1b8:	ldp	x0, x1, [sp, #64]
  40f1bc:	stp	x0, x1, [sp, #200]
  40f1c0:	ldp	x0, x1, [sp, #80]
  40f1c4:	stp	x0, x1, [sp, #216]
  40f1c8:	ldp	x0, x1, [sp, #96]
  40f1cc:	stp	x0, x1, [sp, #232]
  40f1d0:	ldr	x0, [sp, #112]
  40f1d4:	str	x0, [sp, #248]
  40f1d8:	mov	w21, #0x0                   	// #0
  40f1dc:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f1e0:	add	x22, x22, #0xb8
  40f1e4:	b	40f214 <ferror@plt+0xc824>
  40f1e8:	ldr	w3, [x19, #16]
  40f1ec:	ldr	w2, [x19, #8]
  40f1f0:	mov	x1, x22
  40f1f4:	mov	x0, x20
  40f1f8:	bl	4164c0 <ferror@plt+0x13ad0>
  40f1fc:	mov	x0, x19
  40f200:	bl	40ed4c <ferror@plt+0xc35c>
  40f204:	mov	x1, x20
  40f208:	mov	w0, #0xa                   	// #10
  40f20c:	bl	402470 <putc@plt>
  40f210:	ldr	w21, [x19, #8]
  40f214:	ldr	x1, [sp, #200]
  40f218:	ldr	x2, [x1, #64]
  40f21c:	add	x1, sp, #0xc0
  40f220:	add	x0, sp, #0xc8
  40f224:	blr	x2
  40f228:	and	w0, w0, #0xff
  40f22c:	cbz	w0, 40f2c4 <ferror@plt+0xc8d4>
  40f230:	ldr	x19, [sp, #192]
  40f234:	ldr	w0, [x19, #12]
  40f238:	cbnz	w0, 40f1e8 <ferror@plt+0xc7f8>
  40f23c:	ldr	w0, [x19, #16]
  40f240:	cbz	w0, 40f214 <ferror@plt+0xc824>
  40f244:	mov	w1, #0x1                   	// #1
  40f248:	ldr	w0, [x19, #8]
  40f24c:	bl	40dda0 <ferror@plt+0xb3b0>
  40f250:	str	x0, [x19]
  40f254:	bl	402500 <fileno@plt>
  40f258:	add	x2, sp, #0x40
  40f25c:	mov	w1, w0
  40f260:	mov	w0, #0x0                   	// #0
  40f264:	bl	4028f0 <__fxstat@plt>
  40f268:	tbnz	w0, #31, 40f290 <ferror@plt+0xc8a0>
  40f26c:	ldr	x0, [sp, #112]
  40f270:	tbnz	x0, #63, 40f2ac <ferror@plt+0xc8bc>
  40f274:	ldr	x3, [sp, #112]
  40f278:	ldr	w2, [x19, #8]
  40f27c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f280:	add	x1, x1, #0xf0
  40f284:	mov	x0, x20
  40f288:	bl	4164c0 <ferror@plt+0x13ad0>
  40f28c:	b	40f1fc <ferror@plt+0xc80c>
  40f290:	bl	402970 <__errno_location@plt>
  40f294:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f298:	add	x2, x2, #0xc0
  40f29c:	ldr	w1, [x0]
  40f2a0:	mov	w0, #0x1                   	// #1
  40f2a4:	bl	402c80 <ferror@plt+0x290>
  40f2a8:	b	40f26c <ferror@plt+0xc87c>
  40f2ac:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f2b0:	add	x2, x2, #0xd8
  40f2b4:	mov	w1, #0x0                   	// #0
  40f2b8:	mov	w0, #0x1                   	// #1
  40f2bc:	bl	402c80 <ferror@plt+0x290>
  40f2c0:	b	40f274 <ferror@plt+0xc884>
  40f2c4:	ldr	x0, [sp, #200]
  40f2c8:	ldr	x1, [x0, #72]
  40f2cc:	add	x0, sp, #0xc8
  40f2d0:	blr	x1
  40f2d4:	cmp	w21, w23
  40f2d8:	b.ne	40f2f0 <ferror@plt+0xc900>  // b.any
  40f2dc:	ldp	x19, x20, [sp, #16]
  40f2e0:	ldp	x21, x22, [sp, #32]
  40f2e4:	ldr	x23, [sp, #48]
  40f2e8:	ldp	x29, x30, [sp], #256
  40f2ec:	ret
  40f2f0:	mov	w2, w23
  40f2f4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f2f8:	add	x1, x1, #0x100
  40f2fc:	mov	x0, x20
  40f300:	bl	4164c0 <ferror@plt+0x13ad0>
  40f304:	b	40f2dc <ferror@plt+0xc8ec>
  40f308:	stp	x29, x30, [sp, #-160]!
  40f30c:	mov	x29, sp
  40f310:	stp	x19, x20, [sp, #16]
  40f314:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  40f318:	add	x1, x1, #0xab0
  40f31c:	bl	411d38 <ferror@plt+0xf348>
  40f320:	mov	x19, x0
  40f324:	cbz	x0, 40f364 <ferror@plt+0xc974>
  40f328:	bl	402500 <fileno@plt>
  40f32c:	mov	w20, w0
  40f330:	add	x2, sp, #0x20
  40f334:	mov	w1, w0
  40f338:	mov	w0, #0x0                   	// #0
  40f33c:	bl	4028f0 <__fxstat@plt>
  40f340:	cbnz	w0, 40f354 <ferror@plt+0xc964>
  40f344:	ldr	w0, [sp, #48]
  40f348:	and	w0, w0, #0xf000
  40f34c:	cmp	w0, #0x4, lsl #12
  40f350:	b.eq	40f374 <ferror@plt+0xc984>  // b.none
  40f354:	mov	w1, #0x1                   	// #1
  40f358:	mov	w0, w20
  40f35c:	bl	411304 <ferror@plt+0xe914>
  40f360:	cbnz	w0, 40f390 <ferror@plt+0xc9a0>
  40f364:	mov	x0, x19
  40f368:	ldp	x19, x20, [sp, #16]
  40f36c:	ldp	x29, x30, [sp], #160
  40f370:	ret
  40f374:	mov	x0, x19
  40f378:	bl	4167ec <ferror@plt+0x13dfc>
  40f37c:	bl	402970 <__errno_location@plt>
  40f380:	mov	w1, #0x15                  	// #21
  40f384:	str	w1, [x0]
  40f388:	mov	x19, #0x0                   	// #0
  40f38c:	b	40f364 <ferror@plt+0xc974>
  40f390:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f394:	ldr	w20, [x0, #1644]
  40f398:	bl	402970 <__errno_location@plt>
  40f39c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f3a0:	add	x2, x2, #0x140
  40f3a4:	ldr	w1, [x0]
  40f3a8:	mov	w0, w20
  40f3ac:	bl	402c80 <ferror@plt+0x290>
  40f3b0:	b	40f364 <ferror@plt+0xc974>
  40f3b4:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  40f3b8:	add	x0, x1, #0xae0
  40f3bc:	str	xzr, [x1, #2784]
  40f3c0:	str	xzr, [x0, #8]
  40f3c4:	str	wzr, [x0, #16]
  40f3c8:	ret
  40f3cc:	stp	x29, x30, [sp, #-32]!
  40f3d0:	mov	x29, sp
  40f3d4:	stp	x19, x20, [sp, #16]
  40f3d8:	mov	x19, x0
  40f3dc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f3e0:	ldr	w0, [x0, #1648]
  40f3e4:	cbnz	w0, 40f458 <ferror@plt+0xca68>
  40f3e8:	ldrb	w1, [x19]
  40f3ec:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f3f0:	add	x0, x0, #0x170
  40f3f4:	cmp	w1, #0x0
  40f3f8:	csel	x19, x0, x19, eq  // eq = none
  40f3fc:	mov	x0, #0x18                  	// #24
  40f400:	bl	41607c <ferror@plt+0x1368c>
  40f404:	mov	x20, x0
  40f408:	str	xzr, [x0]
  40f40c:	mov	x0, x19
  40f410:	bl	4023d0 <strlen@plt>
  40f414:	str	w0, [x20, #16]
  40f418:	mov	x0, x19
  40f41c:	bl	4162bc <ferror@plt+0x138cc>
  40f420:	str	x0, [x20, #8]
  40f424:	ldr	w0, [x20, #16]
  40f428:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  40f42c:	ldr	w1, [x1, #2800]
  40f430:	cmp	w0, w1
  40f434:	b.le	40f440 <ferror@plt+0xca50>
  40f438:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  40f43c:	str	w0, [x1, #2800]
  40f440:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  40f444:	ldr	x0, [x0, #2792]
  40f448:	cbz	x0, 40f464 <ferror@plt+0xca74>
  40f44c:	str	x20, [x0]
  40f450:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  40f454:	str	x20, [x0, #2792]
  40f458:	ldp	x19, x20, [sp, #16]
  40f45c:	ldp	x29, x30, [sp], #32
  40f460:	ret
  40f464:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  40f468:	str	x20, [x0, #2784]
  40f46c:	b	40f450 <ferror@plt+0xca60>
  40f470:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f474:	ldr	w0, [x0, #1648]
  40f478:	cbz	w0, 40f480 <ferror@plt+0xca90>
  40f47c:	ret
  40f480:	stp	x29, x30, [sp, #-48]!
  40f484:	mov	x29, sp
  40f488:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f48c:	add	x0, x0, #0x178
  40f490:	bl	402980 <getenv@plt>
  40f494:	cbz	x0, 40f4f0 <ferror@plt+0xcb00>
  40f498:	stp	x19, x20, [sp, #16]
  40f49c:	stp	x21, x22, [sp, #32]
  40f4a0:	bl	4162bc <ferror@plt+0x138cc>
  40f4a4:	mov	x22, x0
  40f4a8:	mov	x20, x0
  40f4ac:	mov	w21, #0x3a                  	// #58
  40f4b0:	mov	w1, w21
  40f4b4:	mov	x0, x20
  40f4b8:	bl	402860 <strchr@plt>
  40f4bc:	mov	x19, x0
  40f4c0:	cbz	x0, 40f4d8 <ferror@plt+0xcae8>
  40f4c4:	strb	wzr, [x0]
  40f4c8:	mov	x0, x20
  40f4cc:	bl	40f3cc <ferror@plt+0xc9dc>
  40f4d0:	add	x20, x19, #0x1
  40f4d4:	b	40f4b0 <ferror@plt+0xcac0>
  40f4d8:	mov	x0, x20
  40f4dc:	bl	40f3cc <ferror@plt+0xc9dc>
  40f4e0:	mov	x0, x22
  40f4e4:	bl	402810 <free@plt>
  40f4e8:	ldp	x19, x20, [sp, #16]
  40f4ec:	ldp	x21, x22, [sp, #32]
  40f4f0:	ldp	x29, x30, [sp], #48
  40f4f4:	ret
  40f4f8:	stp	x29, x30, [sp, #-80]!
  40f4fc:	mov	x29, sp
  40f500:	stp	x21, x22, [sp, #32]
  40f504:	stp	x23, x24, [sp, #48]
  40f508:	mov	x22, x0
  40f50c:	mov	x23, x1
  40f510:	cbz	x1, 40f518 <ferror@plt+0xcb28>
  40f514:	str	xzr, [x1]
  40f518:	ldrb	w0, [x22]
  40f51c:	cbz	w0, 40f544 <ferror@plt+0xcb54>
  40f520:	mov	x0, x22
  40f524:	bl	40f308 <ferror@plt+0xc918>
  40f528:	mov	x24, x0
  40f52c:	cbz	x0, 40f568 <ferror@plt+0xcb78>
  40f530:	cbz	x23, 40f554 <ferror@plt+0xcb64>
  40f534:	mov	x0, x22
  40f538:	bl	4162bc <ferror@plt+0x138cc>
  40f53c:	str	x0, [x23]
  40f540:	b	40f554 <ferror@plt+0xcb64>
  40f544:	bl	402970 <__errno_location@plt>
  40f548:	mov	w1, #0x2                   	// #2
  40f54c:	str	w1, [x0]
  40f550:	mov	x24, #0x0                   	// #0
  40f554:	mov	x0, x24
  40f558:	ldp	x21, x22, [sp, #32]
  40f55c:	ldp	x23, x24, [sp, #48]
  40f560:	ldp	x29, x30, [sp], #80
  40f564:	ret
  40f568:	ldrb	w0, [x22]
  40f56c:	cmp	w0, #0x2f
  40f570:	b.eq	40f554 <ferror@plt+0xcb64>  // b.none
  40f574:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f578:	ldr	w0, [x0, #1648]
  40f57c:	cbnz	w0, 40f554 <ferror@plt+0xcb64>
  40f580:	stp	x19, x20, [sp, #16]
  40f584:	stp	x25, x26, [sp, #64]
  40f588:	bl	402970 <__errno_location@plt>
  40f58c:	mov	x25, x0
  40f590:	ldr	w26, [x0]
  40f594:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  40f598:	ldr	x19, [x0, #2784]
  40f59c:	cbz	x19, 40f5d0 <ferror@plt+0xcbe0>
  40f5a0:	mov	x2, #0x0                   	// #0
  40f5a4:	mov	x1, x22
  40f5a8:	ldr	x0, [x19, #8]
  40f5ac:	bl	411c28 <ferror@plt+0xf238>
  40f5b0:	mov	x21, x0
  40f5b4:	bl	40f308 <ferror@plt+0xc918>
  40f5b8:	mov	x20, x0
  40f5bc:	cbnz	x0, 40f5e0 <ferror@plt+0xcbf0>
  40f5c0:	mov	x0, x21
  40f5c4:	bl	402810 <free@plt>
  40f5c8:	ldr	x19, [x19]
  40f5cc:	cbnz	x19, 40f5a0 <ferror@plt+0xcbb0>
  40f5d0:	str	w26, [x25]
  40f5d4:	ldp	x19, x20, [sp, #16]
  40f5d8:	ldp	x25, x26, [sp, #64]
  40f5dc:	b	40f554 <ferror@plt+0xcb64>
  40f5e0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f5e4:	ldr	w0, [x0, #1660]
  40f5e8:	tbz	w0, #6, 40f624 <ferror@plt+0xcc34>
  40f5ec:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f5f0:	ldr	x0, [x0, #2032]
  40f5f4:	cbz	x0, 40f624 <ferror@plt+0xcc34>
  40f5f8:	bl	4085ac <ferror@plt+0x5bbc>
  40f5fc:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f600:	mov	x3, x21
  40f604:	mov	x2, x22
  40f608:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f60c:	add	x1, x1, #0x180
  40f610:	ldr	x0, [x19, #2032]
  40f614:	bl	4164c0 <ferror@plt+0x13ad0>
  40f618:	ldr	x1, [x19, #2032]
  40f61c:	mov	w0, #0xa                   	// #10
  40f620:	bl	402470 <putc@plt>
  40f624:	cbz	x23, 40f63c <ferror@plt+0xcc4c>
  40f628:	str	x21, [x23]
  40f62c:	mov	x24, x20
  40f630:	ldp	x19, x20, [sp, #16]
  40f634:	ldp	x25, x26, [sp, #64]
  40f638:	b	40f554 <ferror@plt+0xcb64>
  40f63c:	mov	x0, x21
  40f640:	bl	402810 <free@plt>
  40f644:	mov	x24, x20
  40f648:	ldp	x19, x20, [sp, #16]
  40f64c:	ldp	x25, x26, [sp, #64]
  40f650:	b	40f554 <ferror@plt+0xcb64>
  40f654:	stp	x29, x30, [sp, #-16]!
  40f658:	mov	x29, sp
  40f65c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f660:	ldr	x0, [x0, #856]
  40f664:	cmp	xzr, x0, lsr #61
  40f668:	cset	x1, ne  // ne = any
  40f66c:	tst	x0, #0x1000000000000000
  40f670:	csinc	w1, w1, wzr, eq  // eq = none
  40f674:	cbnz	w1, 40f6b0 <ferror@plt+0xccc0>
  40f678:	lsl	x0, x0, #3
  40f67c:	bl	41607c <ferror@plt+0x1368c>
  40f680:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40f684:	str	x0, [x1, #3504]
  40f688:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f68c:	ldr	x2, [x1, #856]
  40f690:	cbz	x2, 40f6a8 <ferror@plt+0xccb8>
  40f694:	mov	x1, x0
  40f698:	add	x0, x0, x2, lsl #3
  40f69c:	str	xzr, [x1], #8
  40f6a0:	cmp	x1, x0
  40f6a4:	b.ne	40f69c <ferror@plt+0xccac>  // b.any
  40f6a8:	ldp	x29, x30, [sp], #16
  40f6ac:	ret
  40f6b0:	bl	4162e8 <ferror@plt+0x138f8>
  40f6b4:	stp	x29, x30, [sp, #-32]!
  40f6b8:	mov	x29, sp
  40f6bc:	str	x19, [sp, #16]
  40f6c0:	mov	x19, x0
  40f6c4:	ldr	w0, [x0, #12]
  40f6c8:	cmp	w0, #0x0
  40f6cc:	b.le	40f6e8 <ferror@plt+0xccf8>
  40f6d0:	ldrb	w0, [x19, #8]
  40f6d4:	orr	w0, w0, #0x10
  40f6d8:	strb	w0, [x19, #8]
  40f6dc:	ldr	x19, [sp, #16]
  40f6e0:	ldp	x29, x30, [sp], #32
  40f6e4:	ret
  40f6e8:	ldr	x0, [x19, #16]
  40f6ec:	bl	402810 <free@plt>
  40f6f0:	ldr	w0, [x19, #24]
  40f6f4:	cmp	w0, #0x1
  40f6f8:	b.eq	40f708 <ferror@plt+0xcd18>  // b.none
  40f6fc:	mov	x0, x19
  40f700:	bl	402810 <free@plt>
  40f704:	b	40f6dc <ferror@plt+0xccec>
  40f708:	ldr	x0, [x19, #32]
  40f70c:	bl	402810 <free@plt>
  40f710:	b	40f6fc <ferror@plt+0xcd0c>
  40f714:	stp	x29, x30, [sp, #-80]!
  40f718:	mov	x29, sp
  40f71c:	stp	x19, x20, [sp, #16]
  40f720:	stp	x21, x22, [sp, #32]
  40f724:	stp	x23, x24, [sp, #48]
  40f728:	str	x25, [sp, #64]
  40f72c:	mov	x22, x0
  40f730:	mov	w23, w1
  40f734:	mov	x4, x0
  40f738:	ldrb	w3, [x4], #1
  40f73c:	cbz	w3, 40f780 <ferror@plt+0xcd90>
  40f740:	mov	x2, #0x0                   	// #0
  40f744:	ror	x2, x2, #57
  40f748:	add	x2, x2, w3, uxtb
  40f74c:	ldrb	w3, [x4], #1
  40f750:	cbnz	w3, 40f744 <ferror@plt+0xcd54>
  40f754:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f758:	ldr	x1, [x0, #856]
  40f75c:	udiv	x0, x2, x1
  40f760:	msub	x2, x0, x1, x2
  40f764:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40f768:	ldr	x0, [x0, #3504]
  40f76c:	add	x25, x0, x2, lsl #3
  40f770:	ldr	x20, [x0, x2, lsl #3]
  40f774:	cbz	x20, 40fa3c <ferror@plt+0xd04c>
  40f778:	mov	x24, #0x0                   	// #0
  40f77c:	b	40f78c <ferror@plt+0xcd9c>
  40f780:	mov	x2, #0x0                   	// #0
  40f784:	b	40f754 <ferror@plt+0xcd64>
  40f788:	mov	x20, x19
  40f78c:	mov	x1, x22
  40f790:	ldr	x0, [x20, #16]
  40f794:	bl	4027b0 <strcmp@plt>
  40f798:	mov	w21, w0
  40f79c:	tbz	w0, #31, 40f81c <ferror@plt+0xce2c>
  40f7a0:	ldr	x19, [x20]
  40f7a4:	mov	x24, x20
  40f7a8:	cbnz	x19, 40f788 <ferror@plt+0xcd98>
  40f7ac:	cbz	w23, 40f9ec <ferror@plt+0xcffc>
  40f7b0:	mov	x25, x20
  40f7b4:	cmp	w23, #0x3
  40f7b8:	b.eq	40f980 <ferror@plt+0xcf90>  // b.none
  40f7bc:	b.hi	40f8f0 <ferror@plt+0xcf00>  // b.pmore
  40f7c0:	cmp	w23, #0x1
  40f7c4:	b.ne	40f838 <ferror@plt+0xce48>  // b.any
  40f7c8:	cmp	w21, #0x0
  40f7cc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40f7d0:	b.ne	40f914 <ferror@plt+0xcf24>  // b.any
  40f7d4:	mov	x0, #0x28                  	// #40
  40f7d8:	bl	41607c <ferror@plt+0x1368c>
  40f7dc:	mov	x19, x0
  40f7e0:	str	wzr, [x0, #24]
  40f7e4:	ldrb	w0, [x0, #8]
  40f7e8:	and	w0, w0, #0xfffffffe
  40f7ec:	strb	w0, [x19, #8]
  40f7f0:	mov	x0, x22
  40f7f4:	bl	4162bc <ferror@plt+0x138cc>
  40f7f8:	str	x0, [x19, #16]
  40f7fc:	ldrb	w0, [x19, #8]
  40f800:	and	w0, w0, #0xffffffe1
  40f804:	strb	w0, [x19, #8]
  40f808:	str	wzr, [x19, #12]
  40f80c:	ldr	x0, [x25]
  40f810:	str	x0, [x19]
  40f814:	str	x19, [x25]
  40f818:	b	40f9ec <ferror@plt+0xcffc>
  40f81c:	cmp	w0, #0x0
  40f820:	csel	x19, x20, xzr, eq  // eq = none
  40f824:	cbz	w23, 40f9ec <ferror@plt+0xcffc>
  40f828:	mov	x19, x20
  40f82c:	cbz	x24, 40f7b4 <ferror@plt+0xcdc4>
  40f830:	mov	x20, x24
  40f834:	b	40f7b0 <ferror@plt+0xcdc0>
  40f838:	cmp	w23, #0x2
  40f83c:	b.ne	40f8f8 <ferror@plt+0xcf08>  // b.any
  40f840:	cmp	w21, #0x0
  40f844:	cset	w20, ne  // ne = any
  40f848:	cmp	x19, #0x0
  40f84c:	csinc	w20, w20, wzr, ne  // ne = any
  40f850:	cbnz	w20, 40fa2c <ferror@plt+0xd03c>
  40f854:	ldr	x0, [x19]
  40f858:	cbz	x0, 40f86c <ferror@plt+0xce7c>
  40f85c:	ldrb	w1, [x0, #8]
  40f860:	tst	x1, #0x2
  40f864:	ccmp	w23, #0x4, #0x0, ne  // ne = any
  40f868:	b.eq	40fa08 <ferror@plt+0xd018>  // b.none
  40f86c:	ldrb	w20, [x19, #8]
  40f870:	and	w20, w20, #0x1
  40f874:	ldr	x0, [x19]
  40f878:	str	x0, [x25]
  40f87c:	mov	x0, x19
  40f880:	bl	40f6b4 <ferror@plt+0xccc4>
  40f884:	ldr	x19, [x25]
  40f888:	cbz	x19, 40f89c <ferror@plt+0xceac>
  40f88c:	ldrb	w0, [x19, #8]
  40f890:	tst	x0, #0x2
  40f894:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  40f898:	b.eq	40f874 <ferror@plt+0xce84>  // b.none
  40f89c:	mov	x19, #0x0                   	// #0
  40f8a0:	cbz	w20, 40f9ec <ferror@plt+0xcffc>
  40f8a4:	mov	x0, #0x28                  	// #40
  40f8a8:	bl	41607c <ferror@plt+0x1368c>
  40f8ac:	mov	x19, x0
  40f8b0:	str	wzr, [x0, #24]
  40f8b4:	ldrb	w0, [x0, #8]
  40f8b8:	orr	w0, w0, #0x1
  40f8bc:	strb	w0, [x19, #8]
  40f8c0:	mov	x0, x22
  40f8c4:	bl	4162bc <ferror@plt+0x138cc>
  40f8c8:	str	x0, [x19, #16]
  40f8cc:	ldrb	w0, [x19, #8]
  40f8d0:	and	w0, w0, #0xffffffe1
  40f8d4:	strb	w0, [x19, #8]
  40f8d8:	str	wzr, [x19, #12]
  40f8dc:	ldr	x0, [x25]
  40f8e0:	str	x0, [x19]
  40f8e4:	str	x19, [x25]
  40f8e8:	mov	x19, #0x0                   	// #0
  40f8ec:	b	40f9ec <ferror@plt+0xcffc>
  40f8f0:	cmp	w23, #0x4
  40f8f4:	b.eq	40f840 <ferror@plt+0xce50>  // b.none
  40f8f8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  40f8fc:	add	x2, x2, #0x1a0
  40f900:	mov	w1, #0x0                   	// #0
  40f904:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40f908:	ldr	w0, [x0, #1644]
  40f90c:	bl	402c80 <ferror@plt+0x290>
  40f910:	bl	402720 <abort@plt>
  40f914:	ldr	w0, [x19, #12]
  40f918:	cmp	w0, #0x0
  40f91c:	b.le	40f9ec <ferror@plt+0xcffc>
  40f920:	ldrb	w0, [x19, #8]
  40f924:	orr	w0, w0, #0x10
  40f928:	strb	w0, [x19, #8]
  40f92c:	mov	x0, #0x28                  	// #40
  40f930:	bl	41607c <ferror@plt+0x1368c>
  40f934:	mov	x20, x0
  40f938:	str	wzr, [x0, #24]
  40f93c:	ldrb	w1, [x19, #8]
  40f940:	ldrb	w0, [x0, #8]
  40f944:	bfxil	w0, w1, #0, #1
  40f948:	strb	w0, [x20, #8]
  40f94c:	mov	x0, x22
  40f950:	bl	4162bc <ferror@plt+0x138cc>
  40f954:	str	x0, [x20, #16]
  40f958:	ldrb	w0, [x20, #8]
  40f95c:	and	w0, w0, #0xffffffe1
  40f960:	strb	w0, [x20, #8]
  40f964:	str	wzr, [x20, #12]
  40f968:	ldr	x0, [x19]
  40f96c:	str	x0, [x20]
  40f970:	str	xzr, [x19]
  40f974:	str	x20, [x25]
  40f978:	mov	x19, x20
  40f97c:	b	40f9ec <ferror@plt+0xcffc>
  40f980:	mov	x0, #0x28                  	// #40
  40f984:	bl	41607c <ferror@plt+0x1368c>
  40f988:	mov	x19, x0
  40f98c:	str	wzr, [x0, #24]
  40f990:	ldrb	w0, [x0, #8]
  40f994:	and	w0, w0, #0xfffffffe
  40f998:	strb	w0, [x19, #8]
  40f99c:	mov	x0, x22
  40f9a0:	bl	4162bc <ferror@plt+0x138cc>
  40f9a4:	str	x0, [x19, #16]
  40f9a8:	ldrb	w0, [x19, #8]
  40f9ac:	and	w0, w0, #0xffffffe1
  40f9b0:	strb	w0, [x19, #8]
  40f9b4:	str	wzr, [x19, #12]
  40f9b8:	ldr	x0, [x25]
  40f9bc:	str	x0, [x19]
  40f9c0:	str	x19, [x25]
  40f9c4:	cbnz	w21, 40f9ec <ferror@plt+0xcffc>
  40f9c8:	ldr	x1, [x19]
  40f9cc:	ldrb	w0, [x1, #8]
  40f9d0:	orr	w0, w0, #0x2
  40f9d4:	strb	w0, [x1, #8]
  40f9d8:	ldr	x0, [x19]
  40f9dc:	ldrb	w1, [x0, #8]
  40f9e0:	ldrb	w0, [x19, #8]
  40f9e4:	bfxil	w0, w1, #0, #1
  40f9e8:	strb	w0, [x19, #8]
  40f9ec:	mov	x0, x19
  40f9f0:	ldp	x19, x20, [sp, #16]
  40f9f4:	ldp	x21, x22, [sp, #32]
  40f9f8:	ldp	x23, x24, [sp, #48]
  40f9fc:	ldr	x25, [sp, #64]
  40fa00:	ldp	x29, x30, [sp], #80
  40fa04:	ret
  40fa08:	ldrb	w1, [x0, #8]
  40fa0c:	and	w1, w1, #0xfffffffd
  40fa10:	strb	w1, [x0, #8]
  40fa14:	ldr	x0, [x19]
  40fa18:	ldrb	w2, [x19, #8]
  40fa1c:	ldrb	w1, [x0, #8]
  40fa20:	bfxil	w1, w2, #0, #1
  40fa24:	strb	w1, [x0, #8]
  40fa28:	b	40f874 <ferror@plt+0xce84>
  40fa2c:	mov	x19, #0x0                   	// #0
  40fa30:	b	40f9ec <ferror@plt+0xcffc>
  40fa34:	mov	x19, x20
  40fa38:	b	40f9ec <ferror@plt+0xcffc>
  40fa3c:	cbz	w23, 40fa34 <ferror@plt+0xd044>
  40fa40:	mov	x19, x20
  40fa44:	mov	w21, #0x1                   	// #1
  40fa48:	b	40f7b4 <ferror@plt+0xcdc4>
  40fa4c:	stp	x29, x30, [sp, #-64]!
  40fa50:	mov	x29, sp
  40fa54:	stp	x19, x20, [sp, #16]
  40fa58:	mov	x20, x0
  40fa5c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  40fa60:	ldr	x0, [x0, #856]
  40fa64:	cbz	x0, 40fac0 <ferror@plt+0xd0d0>
  40fa68:	stp	x21, x22, [sp, #32]
  40fa6c:	stp	x23, x24, [sp, #48]
  40fa70:	mov	x21, x1
  40fa74:	mov	x22, #0x0                   	// #0
  40fa78:	adrp	x24, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  40fa7c:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1906c>
  40fa80:	b	40fa94 <ferror@plt+0xd0a4>
  40fa84:	add	x22, x22, #0x1
  40fa88:	ldr	x0, [x23, #856]
  40fa8c:	cmp	x0, x22
  40fa90:	b.ls	40fab8 <ferror@plt+0xd0c8>  // b.plast
  40fa94:	ldr	x0, [x24, #3504]
  40fa98:	ldr	x19, [x0, x22, lsl #3]
  40fa9c:	cbz	x19, 40fa84 <ferror@plt+0xd094>
  40faa0:	mov	x0, x19
  40faa4:	ldr	x19, [x19]
  40faa8:	mov	x1, x21
  40faac:	blr	x20
  40fab0:	cbnz	x19, 40faa0 <ferror@plt+0xd0b0>
  40fab4:	b	40fa84 <ferror@plt+0xd094>
  40fab8:	ldp	x21, x22, [sp, #32]
  40fabc:	ldp	x23, x24, [sp, #48]
  40fac0:	ldp	x19, x20, [sp, #16]
  40fac4:	ldp	x29, x30, [sp], #64
  40fac8:	ret
  40facc:	ldr	x0, [x0, #32]
  40fad0:	ret
  40fad4:	stp	x29, x30, [sp, #-48]!
  40fad8:	mov	x29, sp
  40fadc:	stp	x19, x20, [sp, #16]
  40fae0:	str	x21, [sp, #32]
  40fae4:	mov	x21, x1
  40fae8:	ldr	x20, [x0, #8]
  40faec:	ldr	x19, [x0, #24]
  40faf0:	cbnz	x19, 40fb24 <ferror@plt+0xd134>
  40faf4:	mov	w0, #0x0                   	// #0
  40faf8:	b	40fb44 <ferror@plt+0xd154>
  40fafc:	ldr	x0, [x19, #32]
  40fb00:	cmp	x0, x21
  40fb04:	b.hi	40fb1c <ferror@plt+0xd12c>  // b.pmore
  40fb08:	b.cc	40fb38 <ferror@plt+0xd148>  // b.lo, b.ul, b.last
  40fb0c:	mov	w0, #0x1                   	// #1
  40fb10:	b	40fb44 <ferror@plt+0xd154>
  40fb14:	cmp	w0, #0x0
  40fb18:	b.le	40fb54 <ferror@plt+0xd164>
  40fb1c:	ldr	x19, [x19]
  40fb20:	cbz	x19, 40fb40 <ferror@plt+0xd150>
  40fb24:	cbz	x20, 40fafc <ferror@plt+0xd10c>
  40fb28:	mov	x1, x21
  40fb2c:	ldr	x0, [x19, #32]
  40fb30:	blr	x20
  40fb34:	tbz	w0, #31, 40fb14 <ferror@plt+0xd124>
  40fb38:	ldr	x19, [x19, #8]
  40fb3c:	b	40fb20 <ferror@plt+0xd130>
  40fb40:	mov	w0, #0x0                   	// #0
  40fb44:	ldp	x19, x20, [sp, #16]
  40fb48:	ldr	x21, [sp, #32]
  40fb4c:	ldp	x29, x30, [sp], #48
  40fb50:	ret
  40fb54:	mov	w0, #0x1                   	// #1
  40fb58:	b	40fb44 <ferror@plt+0xd154>
  40fb5c:	stp	x29, x30, [sp, #-64]!
  40fb60:	mov	x29, sp
  40fb64:	stp	x19, x20, [sp, #16]
  40fb68:	stp	x21, x22, [sp, #32]
  40fb6c:	stp	x23, x24, [sp, #48]
  40fb70:	mov	x22, x1
  40fb74:	mov	x23, x2
  40fb78:	mov	x24, x3
  40fb7c:	ldr	x19, [x0, #24]
  40fb80:	cbz	x19, 40fbf4 <ferror@plt+0xd204>
  40fb84:	mov	x1, x23
  40fb88:	ldr	x0, [x19, #32]
  40fb8c:	blr	x22
  40fb90:	ands	w20, w0, #0xff
  40fb94:	b.ne	40fba4 <ferror@plt+0xd1b4>  // b.any
  40fb98:	ldr	x19, [x19, #8]
  40fb9c:	cbnz	x19, 40fb84 <ferror@plt+0xd194>
  40fba0:	b	40fbb4 <ferror@plt+0xd1c4>
  40fba4:	ldr	x21, [x19]
  40fba8:	cbnz	x21, 40fbd8 <ferror@plt+0xd1e8>
  40fbac:	ldr	x0, [x19, #32]
  40fbb0:	str	x0, [x24]
  40fbb4:	mov	w0, w20
  40fbb8:	ldp	x19, x20, [sp, #16]
  40fbbc:	ldp	x21, x22, [sp, #32]
  40fbc0:	ldp	x23, x24, [sp, #48]
  40fbc4:	ldp	x29, x30, [sp], #64
  40fbc8:	ret
  40fbcc:	mov	x19, x21
  40fbd0:	ldr	x21, [x21]
  40fbd4:	cbz	x21, 40fbac <ferror@plt+0xd1bc>
  40fbd8:	mov	x1, x23
  40fbdc:	ldr	x0, [x21, #32]
  40fbe0:	blr	x22
  40fbe4:	and	w0, w0, #0xff
  40fbe8:	cbnz	w0, 40fbcc <ferror@plt+0xd1dc>
  40fbec:	ldr	x21, [x21, #8]
  40fbf0:	b	40fbd4 <ferror@plt+0xd1e4>
  40fbf4:	mov	w20, #0x0                   	// #0
  40fbf8:	b	40fbb4 <ferror@plt+0xd1c4>
  40fbfc:	ldr	x3, [x0]
  40fc00:	ldr	x1, [x0, #24]
  40fc04:	mov	x2, x1
  40fc08:	cbz	x1, 40fc18 <ferror@plt+0xd228>
  40fc0c:	mov	x2, x1
  40fc10:	ldr	x1, [x1]
  40fc14:	cbnz	x1, 40fc0c <ferror@plt+0xd21c>
  40fc18:	str	x3, [x8]
  40fc1c:	str	x0, [x8, #8]
  40fc20:	str	x2, [x8, #24]
  40fc24:	str	xzr, [x8, #32]
  40fc28:	ret
  40fc2c:	ldr	x2, [x0, #24]
  40fc30:	ldr	x3, [x0, #32]
  40fc34:	cmp	x2, x3
  40fc38:	b.eq	40fc80 <ferror@plt+0xd290>  // b.none
  40fc3c:	ldr	x3, [x2, #32]
  40fc40:	str	x3, [x1]
  40fc44:	ldr	x1, [x2, #8]
  40fc48:	cbz	x1, 40fc64 <ferror@plt+0xd274>
  40fc4c:	mov	x2, x1
  40fc50:	ldr	x1, [x1]
  40fc54:	cbnz	x1, 40fc4c <ferror@plt+0xd25c>
  40fc58:	str	x2, [x0, #24]
  40fc5c:	mov	w0, #0x1                   	// #1
  40fc60:	ret
  40fc64:	mov	x1, x2
  40fc68:	ldr	x2, [x2, #16]
  40fc6c:	cbz	x2, 40fc58 <ferror@plt+0xd268>
  40fc70:	ldr	x3, [x2, #8]
  40fc74:	cmp	x3, x1
  40fc78:	b.eq	40fc64 <ferror@plt+0xd274>  // b.none
  40fc7c:	b	40fc58 <ferror@plt+0xd268>
  40fc80:	mov	w0, #0x0                   	// #0
  40fc84:	b	40fc60 <ferror@plt+0xd270>
  40fc88:	ret
  40fc8c:	stp	x29, x30, [sp, #-48]!
  40fc90:	mov	x29, sp
  40fc94:	stp	x19, x20, [sp, #16]
  40fc98:	stp	x21, x22, [sp, #32]
  40fc9c:	mov	x19, x0
  40fca0:	mov	x22, x1
  40fca4:	mov	x21, x2
  40fca8:	ldr	x0, [x0]
  40fcac:	mov	w20, #0x0                   	// #0
  40fcb0:	cbz	x0, 40fcc0 <ferror@plt+0xd2d0>
  40fcb4:	mov	x1, x19
  40fcb8:	bl	40fc8c <ferror@plt+0xd29c>
  40fcbc:	mov	w20, w0
  40fcc0:	ldr	x0, [x19, #8]
  40fcc4:	mov	w2, #0x0                   	// #0
  40fcc8:	cbz	x0, 40fcdc <ferror@plt+0xd2ec>
  40fccc:	mov	x2, x21
  40fcd0:	mov	x1, x19
  40fcd4:	bl	40fc8c <ferror@plt+0xd29c>
  40fcd8:	mov	w2, w0
  40fcdc:	sub	w0, w2, w20
  40fce0:	ldr	x1, [x19, #16]
  40fce4:	cmp	x1, x22
  40fce8:	b.ne	40fd2c <ferror@plt+0xd33c>  // b.any
  40fcec:	add	w1, w0, #0x1
  40fcf0:	cmp	w1, #0x2
  40fcf4:	b.hi	40fd30 <ferror@plt+0xd340>  // b.pmore
  40fcf8:	ldr	w1, [x19, #24]
  40fcfc:	cmp	w1, w0
  40fd00:	b.ne	40fd34 <ferror@plt+0xd344>  // b.any
  40fd04:	ldr	x0, [x21]
  40fd08:	add	x0, x0, #0x1
  40fd0c:	str	x0, [x21]
  40fd10:	cmp	w20, w2
  40fd14:	csel	w0, w20, w2, cs  // cs = hs, nlast
  40fd18:	add	w0, w0, #0x1
  40fd1c:	ldp	x19, x20, [sp, #16]
  40fd20:	ldp	x21, x22, [sp, #32]
  40fd24:	ldp	x29, x30, [sp], #48
  40fd28:	ret
  40fd2c:	bl	402720 <abort@plt>
  40fd30:	bl	402720 <abort@plt>
  40fd34:	bl	402720 <abort@plt>
  40fd38:	mov	w8, #0x1                   	// #1
  40fd3c:	add	x0, x0, #0x18
  40fd40:	b	40fe68 <ferror@plt+0xd478>
  40fd44:	ldr	x7, [x3, #8]
  40fd48:	neg	w5, w4
  40fd4c:	cbnz	x7, 40fe74 <ferror@plt+0xd484>
  40fd50:	b	40fe80 <ferror@plt+0xd490>
  40fd54:	ldr	x1, [x3, #16]
  40fd58:	mov	x5, x0
  40fd5c:	cbz	x1, 40fd7c <ferror@plt+0xd38c>
  40fd60:	ldr	x5, [x1]
  40fd64:	cmp	x5, x3
  40fd68:	b.eq	40fdd4 <ferror@plt+0xd3e4>  // b.none
  40fd6c:	ldr	x5, [x1, #8]
  40fd70:	cmp	x5, x3
  40fd74:	b.ne	40fddc <ferror@plt+0xd3ec>  // b.any
  40fd78:	add	x5, x1, #0x8
  40fd7c:	tbnz	w4, #31, 40fde8 <ferror@plt+0xd3f8>
  40fd80:	ldr	x1, [x3, #8]
  40fd84:	ldr	x4, [x1]
  40fd88:	ldr	w6, [x1, #24]
  40fd8c:	tbnz	w6, #31, 40fefc <ferror@plt+0xd50c>
  40fd90:	str	x4, [x3, #8]
  40fd94:	str	x3, [x1]
  40fd98:	ldr	x6, [x3, #16]
  40fd9c:	str	x6, [x1, #16]
  40fda0:	str	x1, [x3, #16]
  40fda4:	cbz	x4, 40fdac <ferror@plt+0xd3bc>
  40fda8:	str	x3, [x4, #16]
  40fdac:	ldr	w4, [x1, #24]
  40fdb0:	sub	w6, w4, #0x1
  40fdb4:	str	w6, [x1, #24]
  40fdb8:	sub	w4, w8, w4
  40fdbc:	str	w4, [x3, #24]
  40fdc0:	str	x1, [x5]
  40fdc4:	tbnz	w2, #31, 40fef0 <ferror@plt+0xd500>
  40fdc8:	ldr	w2, [x1, #24]
  40fdcc:	neg	w2, w2
  40fdd0:	b	40fe58 <ferror@plt+0xd468>
  40fdd4:	mov	x5, x1
  40fdd8:	b	40fd7c <ferror@plt+0xd38c>
  40fddc:	stp	x29, x30, [sp, #-16]!
  40fde0:	mov	x29, sp
  40fde4:	bl	402720 <abort@plt>
  40fde8:	ldr	x1, [x6, #8]
  40fdec:	ldr	w4, [x6, #24]
  40fdf0:	cmp	w4, #0x0
  40fdf4:	b.le	40fea4 <ferror@plt+0xd4b4>
  40fdf8:	ldr	x7, [x1]
  40fdfc:	str	x7, [x6, #8]
  40fe00:	ldr	x4, [x1, #8]
  40fe04:	str	x4, [x3]
  40fe08:	str	x6, [x1]
  40fe0c:	str	x3, [x1, #8]
  40fe10:	ldr	x9, [x3, #16]
  40fe14:	str	x9, [x1, #16]
  40fe18:	cbz	x7, 40fe20 <ferror@plt+0xd430>
  40fe1c:	str	x6, [x7, #16]
  40fe20:	cbz	x4, 40fe28 <ferror@plt+0xd438>
  40fe24:	str	x3, [x4, #16]
  40fe28:	str	x1, [x6, #16]
  40fe2c:	str	x1, [x3, #16]
  40fe30:	ldr	w4, [x1, #24]
  40fe34:	cmp	w4, #0x0
  40fe38:	csetm	w4, gt
  40fe3c:	str	w4, [x6, #24]
  40fe40:	ldr	w4, [x1, #24]
  40fe44:	lsr	w4, w4, #31
  40fe48:	str	w4, [x3, #24]
  40fe4c:	str	wzr, [x1, #24]
  40fe50:	str	x1, [x5]
  40fe54:	asr	w2, w2, #31
  40fe58:	ldr	x1, [x5]
  40fe5c:	cbz	w2, 40ff70 <ferror@plt+0xd580>
  40fe60:	ldr	x3, [x1, #16]
  40fe64:	cbz	x3, 40ff70 <ferror@plt+0xd580>
  40fe68:	ldr	w4, [x3, #24]
  40fe6c:	ldr	x6, [x3]
  40fe70:	cbz	x6, 40fd44 <ferror@plt+0xd354>
  40fe74:	ldr	x5, [x3, #8]
  40fe78:	cmp	x5, x1
  40fe7c:	cneg	w5, w2, ne  // ne = any
  40fe80:	add	w1, w5, w4
  40fe84:	str	w1, [x3, #24]
  40fe88:	cmp	w5, w4
  40fe8c:	b.eq	40fd54 <ferror@plt+0xd364>  // b.none
  40fe90:	tbnz	w2, #31, 40ff60 <ferror@plt+0xd570>
  40fe94:	cmp	w1, #0x0
  40fe98:	cset	w2, ne  // ne = any
  40fe9c:	mov	x1, x3
  40fea0:	b	40fe5c <ferror@plt+0xd46c>
  40fea4:	str	x1, [x3]
  40fea8:	str	x3, [x6, #8]
  40feac:	ldr	x4, [x3, #16]
  40feb0:	str	x4, [x6, #16]
  40feb4:	str	x6, [x3, #16]
  40feb8:	cbz	x1, 40fec0 <ferror@plt+0xd4d0>
  40febc:	str	x3, [x1, #16]
  40fec0:	ldr	w1, [x6, #24]
  40fec4:	add	w4, w1, #0x1
  40fec8:	str	w4, [x6, #24]
  40fecc:	mvn	w1, w1
  40fed0:	str	w1, [x3, #24]
  40fed4:	str	x6, [x5]
  40fed8:	tbnz	w2, #31, 40fee4 <ferror@plt+0xd4f4>
  40fedc:	ldr	w2, [x6, #24]
  40fee0:	b	40fe58 <ferror@plt+0xd468>
  40fee4:	ldr	w2, [x6, #24]
  40fee8:	sub	w2, w2, #0x1
  40feec:	b	40fe58 <ferror@plt+0xd468>
  40fef0:	ldr	w2, [x1, #24]
  40fef4:	mvn	w2, w2
  40fef8:	b	40fe58 <ferror@plt+0xd468>
  40fefc:	ldr	x7, [x4]
  40ff00:	str	x7, [x3, #8]
  40ff04:	ldr	x6, [x4, #8]
  40ff08:	str	x6, [x1]
  40ff0c:	str	x3, [x4]
  40ff10:	str	x1, [x4, #8]
  40ff14:	ldr	x9, [x3, #16]
  40ff18:	str	x9, [x4, #16]
  40ff1c:	cbz	x7, 40ff24 <ferror@plt+0xd534>
  40ff20:	str	x3, [x7, #16]
  40ff24:	cbz	x6, 40ff2c <ferror@plt+0xd53c>
  40ff28:	str	x1, [x6, #16]
  40ff2c:	str	x4, [x3, #16]
  40ff30:	str	x4, [x1, #16]
  40ff34:	ldr	w6, [x4, #24]
  40ff38:	cmp	w6, #0x0
  40ff3c:	csetm	w6, gt
  40ff40:	str	w6, [x3, #24]
  40ff44:	ldr	w3, [x4, #24]
  40ff48:	lsr	w3, w3, #31
  40ff4c:	str	w3, [x1, #24]
  40ff50:	str	wzr, [x4, #24]
  40ff54:	str	x4, [x5]
  40ff58:	asr	w2, w2, #31
  40ff5c:	b	40fe58 <ferror@plt+0xd468>
  40ff60:	cmp	w4, #0x0
  40ff64:	csetm	w2, ne  // ne = any
  40ff68:	mov	x1, x3
  40ff6c:	b	40fe5c <ferror@plt+0xd46c>
  40ff70:	ret
  40ff74:	sub	sp, sp, #0x570
  40ff78:	stp	x29, x30, [sp]
  40ff7c:	mov	x29, sp
  40ff80:	stp	x19, x20, [sp, #16]
  40ff84:	stp	x21, x22, [sp, #32]
  40ff88:	str	x23, [sp, #48]
  40ff8c:	mov	x21, x0
  40ff90:	ldr	x1, [x0, #24]
  40ff94:	add	x19, sp, #0x40
  40ff98:	mov	x22, x19
  40ff9c:	mov	w23, #0x1                   	// #1
  40ffa0:	cbz	x1, 40ffb8 <ferror@plt+0xd5c8>
  40ffa4:	str	x1, [x19]
  40ffa8:	strb	wzr, [x19, #8]
  40ffac:	ldr	x1, [x1]
  40ffb0:	add	x19, x19, #0x10
  40ffb4:	b	40ffa0 <ferror@plt+0xd5b0>
  40ffb8:	cmp	x19, x22
  40ffbc:	b.ne	40fff0 <ferror@plt+0xd600>  // b.any
  40ffc0:	mov	x0, x21
  40ffc4:	bl	402810 <free@plt>
  40ffc8:	ldp	x19, x20, [sp, #16]
  40ffcc:	ldp	x21, x22, [sp, #32]
  40ffd0:	ldr	x23, [sp, #48]
  40ffd4:	ldp	x29, x30, [sp]
  40ffd8:	add	sp, sp, #0x570
  40ffdc:	ret
  40ffe0:	mov	x0, x20
  40ffe4:	bl	402810 <free@plt>
  40ffe8:	cmp	x19, x22
  40ffec:	b.eq	40ffc0 <ferror@plt+0xd5d0>  // b.none
  40fff0:	mov	x0, x19
  40fff4:	ldr	x20, [x19, #-16]!
  40fff8:	ldrb	w1, [x19, #8]
  40fffc:	cbz	w1, 410014 <ferror@plt+0xd624>
  410000:	ldr	x1, [x21, #16]
  410004:	cbz	x1, 40ffe0 <ferror@plt+0xd5f0>
  410008:	ldr	x0, [x20, #32]
  41000c:	blr	x1
  410010:	b	40ffe0 <ferror@plt+0xd5f0>
  410014:	strb	w23, [x19, #8]
  410018:	ldr	x1, [x20, #8]
  41001c:	mov	x19, x0
  410020:	b	40ffa0 <ferror@plt+0xd5b0>
  410024:	stp	x29, x30, [sp, #-48]!
  410028:	mov	x29, sp
  41002c:	stp	x19, x20, [sp, #16]
  410030:	stp	x21, x22, [sp, #32]
  410034:	mov	x20, x0
  410038:	mov	x21, x1
  41003c:	ldr	x22, [x0, #8]
  410040:	ldr	x19, [x0, #24]
  410044:	cbnz	x19, 410130 <ferror@plt+0xd740>
  410048:	mov	w0, #0x0                   	// #0
  41004c:	b	410110 <ferror@plt+0xd720>
  410050:	ldr	x0, [x19, #32]
  410054:	cmp	x21, x0
  410058:	b.cc	410128 <ferror@plt+0xd738>  // b.lo, b.ul, b.last
  41005c:	b.hi	410144 <ferror@plt+0xd754>  // b.pmore
  410060:	ldr	x3, [x19, #16]
  410064:	ldr	x1, [x19]
  410068:	cbz	x1, 41014c <ferror@plt+0xd75c>
  41006c:	ldr	x0, [x19, #8]
  410070:	cbz	x0, 41018c <ferror@plt+0xd79c>
  410074:	mov	x0, x1
  410078:	ldr	x1, [x1, #8]
  41007c:	cbnz	x1, 410074 <ferror@plt+0xd684>
  410080:	ldr	x2, [x0, #16]
  410084:	ldr	x1, [x0]
  410088:	cmp	x2, x19
  41008c:	b.eq	4100a8 <ferror@plt+0xd6b8>  // b.none
  410090:	cbz	x1, 410098 <ferror@plt+0xd6a8>
  410094:	str	x2, [x1, #16]
  410098:	str	x1, [x2, #8]
  41009c:	ldr	x4, [x19]
  4100a0:	str	x4, [x0]
  4100a4:	str	x0, [x4, #16]
  4100a8:	ldr	x4, [x19, #8]
  4100ac:	str	x4, [x0, #8]
  4100b0:	str	x0, [x4, #16]
  4100b4:	ldr	w4, [x19, #24]
  4100b8:	str	w4, [x0, #24]
  4100bc:	str	x3, [x0, #16]
  4100c0:	cbz	x3, 4101c4 <ferror@plt+0xd7d4>
  4100c4:	ldr	x4, [x3]
  4100c8:	cmp	x4, x19
  4100cc:	b.eq	4101cc <ferror@plt+0xd7dc>  // b.none
  4100d0:	str	x0, [x3, #8]
  4100d4:	cmp	x2, x19
  4100d8:	csel	x3, x2, x0, ne  // ne = any
  4100dc:	mov	w2, #0xffffffff            	// #-1
  4100e0:	mov	x0, x20
  4100e4:	bl	40fd38 <ferror@plt+0xd348>
  4100e8:	ldr	x0, [x20, #32]
  4100ec:	sub	x0, x0, #0x1
  4100f0:	str	x0, [x20, #32]
  4100f4:	ldr	x1, [x20, #16]
  4100f8:	cbz	x1, 410104 <ferror@plt+0xd714>
  4100fc:	ldr	x0, [x19, #32]
  410100:	blr	x1
  410104:	mov	x0, x19
  410108:	bl	402810 <free@plt>
  41010c:	mov	w0, #0x1                   	// #1
  410110:	ldp	x19, x20, [sp, #16]
  410114:	ldp	x21, x22, [sp, #32]
  410118:	ldp	x29, x30, [sp], #48
  41011c:	ret
  410120:	cmp	w0, #0x0
  410124:	b.le	410060 <ferror@plt+0xd670>
  410128:	ldr	x19, [x19]
  41012c:	cbz	x19, 410048 <ferror@plt+0xd658>
  410130:	cbz	x22, 410050 <ferror@plt+0xd660>
  410134:	mov	x1, x21
  410138:	ldr	x0, [x19, #32]
  41013c:	blr	x22
  410140:	tbz	w0, #31, 410120 <ferror@plt+0xd730>
  410144:	ldr	x19, [x19, #8]
  410148:	b	41012c <ferror@plt+0xd73c>
  41014c:	ldr	x1, [x19, #8]
  410150:	cbz	x1, 410158 <ferror@plt+0xd768>
  410154:	str	x3, [x1, #16]
  410158:	cbz	x3, 41017c <ferror@plt+0xd78c>
  41015c:	ldr	x0, [x3]
  410160:	cmp	x0, x19
  410164:	b.eq	410184 <ferror@plt+0xd794>  // b.none
  410168:	str	x1, [x3, #8]
  41016c:	mov	w2, #0xffffffff            	// #-1
  410170:	mov	x0, x20
  410174:	bl	40fd38 <ferror@plt+0xd348>
  410178:	b	4100e8 <ferror@plt+0xd6f8>
  41017c:	str	x1, [x20, #24]
  410180:	b	4100e8 <ferror@plt+0xd6f8>
  410184:	str	x1, [x3]
  410188:	b	41016c <ferror@plt+0xd77c>
  41018c:	str	x3, [x1, #16]
  410190:	cbz	x3, 4101b4 <ferror@plt+0xd7c4>
  410194:	ldr	x0, [x3]
  410198:	cmp	x0, x19
  41019c:	b.eq	4101bc <ferror@plt+0xd7cc>  // b.none
  4101a0:	str	x1, [x3, #8]
  4101a4:	mov	w2, #0xffffffff            	// #-1
  4101a8:	mov	x0, x20
  4101ac:	bl	40fd38 <ferror@plt+0xd348>
  4101b0:	b	4100e8 <ferror@plt+0xd6f8>
  4101b4:	str	x1, [x20, #24]
  4101b8:	b	4100e8 <ferror@plt+0xd6f8>
  4101bc:	str	x1, [x3]
  4101c0:	b	4101a4 <ferror@plt+0xd7b4>
  4101c4:	str	x0, [x20, #24]
  4101c8:	b	4100d4 <ferror@plt+0xd6e4>
  4101cc:	str	x0, [x3]
  4101d0:	b	4100d4 <ferror@plt+0xd6e4>
  4101d4:	stp	x29, x30, [sp, #-48]!
  4101d8:	mov	x29, sp
  4101dc:	stp	x19, x20, [sp, #16]
  4101e0:	stp	x21, x22, [sp, #32]
  4101e4:	mov	x22, x0
  4101e8:	mov	x21, x1
  4101ec:	ldr	x19, [x0, #24]
  4101f0:	cbz	x19, 4101fc <ferror@plt+0xd80c>
  4101f4:	ldr	x20, [x0, #8]
  4101f8:	b	41028c <ferror@plt+0xd89c>
  4101fc:	mov	x0, #0x28                  	// #40
  410200:	bl	402570 <malloc@plt>
  410204:	cbz	x0, 4103c8 <ferror@plt+0xd9d8>
  410208:	str	xzr, [x0]
  41020c:	str	xzr, [x0, #8]
  410210:	str	wzr, [x0, #24]
  410214:	str	x21, [x0, #32]
  410218:	str	x0, [x22, #24]
  41021c:	str	xzr, [x0, #16]
  410220:	ldr	x0, [x22, #32]
  410224:	add	x0, x0, #0x1
  410228:	str	x0, [x22, #32]
  41022c:	mov	w0, #0x1                   	// #1
  410230:	b	410248 <ferror@plt+0xd858>
  410234:	ldr	x1, [x19, #32]
  410238:	cmp	x1, x21
  41023c:	b.hi	410280 <ferror@plt+0xd890>  // b.pmore
  410240:	b.cc	4102a0 <ferror@plt+0xd8b0>  // b.lo, b.ul, b.last
  410244:	mov	w0, #0x0                   	// #0
  410248:	ldp	x19, x20, [sp, #16]
  41024c:	ldp	x21, x22, [sp, #32]
  410250:	ldp	x29, x30, [sp], #48
  410254:	ret
  410258:	str	x0, [x19, #8]
  41025c:	ldr	w1, [x19, #24]
  410260:	add	w1, w1, #0x1
  410264:	str	w1, [x19, #24]
  410268:	ldr	x1, [x19]
  41026c:	cmp	x1, #0x0
  410270:	cset	w1, eq  // eq = none
  410274:	b	4102f4 <ferror@plt+0xd904>
  410278:	cmp	w0, #0x0
  41027c:	b.le	4103d8 <ferror@plt+0xd9e8>
  410280:	ldr	x2, [x19]
  410284:	cbz	x2, 410328 <ferror@plt+0xd938>
  410288:	mov	x19, x2
  41028c:	cbz	x20, 410234 <ferror@plt+0xd844>
  410290:	mov	x1, x21
  410294:	ldr	x0, [x19, #32]
  410298:	blr	x20
  41029c:	tbz	w0, #31, 410278 <ferror@plt+0xd888>
  4102a0:	ldr	x2, [x19, #8]
  4102a4:	cbnz	x2, 410288 <ferror@plt+0xd898>
  4102a8:	mov	x0, #0x28                  	// #40
  4102ac:	bl	402570 <malloc@plt>
  4102b0:	cbz	x0, 4103d0 <ferror@plt+0xd9e0>
  4102b4:	str	xzr, [x0]
  4102b8:	str	xzr, [x0, #8]
  4102bc:	str	wzr, [x0, #24]
  4102c0:	str	x21, [x0, #32]
  4102c4:	ldr	x1, [x19, #8]
  4102c8:	cbz	x1, 410258 <ferror@plt+0xd868>
  4102cc:	mov	x19, x1
  4102d0:	ldr	x1, [x1]
  4102d4:	cbnz	x1, 4102cc <ferror@plt+0xd8dc>
  4102d8:	str	x0, [x19]
  4102dc:	ldr	w1, [x19, #24]
  4102e0:	sub	w1, w1, #0x1
  4102e4:	str	w1, [x19, #24]
  4102e8:	ldr	x1, [x19, #8]
  4102ec:	cmp	x1, #0x0
  4102f0:	cset	w1, eq  // eq = none
  4102f4:	str	x19, [x0, #16]
  4102f8:	cbz	w1, 410314 <ferror@plt+0xd924>
  4102fc:	ldr	x3, [x19, #16]
  410300:	cbz	x3, 410314 <ferror@plt+0xd924>
  410304:	mov	w2, #0x1                   	// #1
  410308:	mov	x1, x19
  41030c:	mov	x0, x22
  410310:	bl	40fd38 <ferror@plt+0xd348>
  410314:	ldr	x0, [x22, #32]
  410318:	add	x0, x0, #0x1
  41031c:	str	x0, [x22, #32]
  410320:	mov	w0, #0x1                   	// #1
  410324:	b	410248 <ferror@plt+0xd858>
  410328:	mov	x0, #0x28                  	// #40
  41032c:	bl	402570 <malloc@plt>
  410330:	cbz	x0, 4103e0 <ferror@plt+0xd9f0>
  410334:	str	xzr, [x0]
  410338:	str	xzr, [x0, #8]
  41033c:	str	wzr, [x0, #24]
  410340:	str	x21, [x0, #32]
  410344:	ldr	x1, [x19]
  410348:	cbz	x1, 4103a8 <ferror@plt+0xd9b8>
  41034c:	mov	x19, x1
  410350:	ldr	x1, [x1, #8]
  410354:	cbnz	x1, 41034c <ferror@plt+0xd95c>
  410358:	str	x0, [x19, #8]
  41035c:	ldr	w1, [x19, #24]
  410360:	add	w1, w1, #0x1
  410364:	str	w1, [x19, #24]
  410368:	ldr	x1, [x19]
  41036c:	cmp	x1, #0x0
  410370:	cset	w1, eq  // eq = none
  410374:	str	x19, [x0, #16]
  410378:	cbz	w1, 410394 <ferror@plt+0xd9a4>
  41037c:	ldr	x3, [x19, #16]
  410380:	cbz	x3, 410394 <ferror@plt+0xd9a4>
  410384:	mov	w2, #0x1                   	// #1
  410388:	mov	x1, x19
  41038c:	mov	x0, x22
  410390:	bl	40fd38 <ferror@plt+0xd348>
  410394:	ldr	x0, [x22, #32]
  410398:	add	x0, x0, #0x1
  41039c:	str	x0, [x22, #32]
  4103a0:	mov	w0, #0x1                   	// #1
  4103a4:	b	410248 <ferror@plt+0xd858>
  4103a8:	str	x0, [x19]
  4103ac:	ldr	w1, [x19, #24]
  4103b0:	sub	w1, w1, #0x1
  4103b4:	str	w1, [x19, #24]
  4103b8:	ldr	x1, [x19, #8]
  4103bc:	cmp	x1, #0x0
  4103c0:	cset	w1, eq  // eq = none
  4103c4:	b	410374 <ferror@plt+0xd984>
  4103c8:	mov	w0, #0xffffffff            	// #-1
  4103cc:	b	410248 <ferror@plt+0xd858>
  4103d0:	mov	w0, #0xffffffff            	// #-1
  4103d4:	b	410248 <ferror@plt+0xd858>
  4103d8:	mov	w0, #0x0                   	// #0
  4103dc:	b	410248 <ferror@plt+0xd858>
  4103e0:	mov	w0, #0xffffffff            	// #-1
  4103e4:	b	410248 <ferror@plt+0xd858>
  4103e8:	stp	x29, x30, [sp, #-48]!
  4103ec:	mov	x29, sp
  4103f0:	stp	x19, x20, [sp, #16]
  4103f4:	str	x21, [sp, #32]
  4103f8:	mov	x21, x0
  4103fc:	mov	x20, x1
  410400:	mov	x19, x2
  410404:	mov	x0, #0x28                  	// #40
  410408:	bl	402570 <malloc@plt>
  41040c:	cbz	x0, 410424 <ferror@plt+0xda34>
  410410:	str	x21, [x0]
  410414:	str	x20, [x0, #8]
  410418:	str	x19, [x0, #16]
  41041c:	str	xzr, [x0, #24]
  410420:	str	xzr, [x0, #32]
  410424:	ldp	x19, x20, [sp, #16]
  410428:	ldr	x21, [sp, #32]
  41042c:	ldp	x29, x30, [sp], #48
  410430:	ret
  410434:	stp	x29, x30, [sp, #-48]!
  410438:	mov	x29, sp
  41043c:	str	x19, [sp, #16]
  410440:	mov	x19, x0
  410444:	str	xzr, [sp, #40]
  410448:	ldr	x0, [x0, #24]
  41044c:	cbz	x0, 41045c <ferror@plt+0xda6c>
  410450:	add	x2, sp, #0x28
  410454:	mov	x1, #0x0                   	// #0
  410458:	bl	40fc8c <ferror@plt+0xd29c>
  41045c:	ldr	x1, [x19, #32]
  410460:	ldr	x0, [sp, #40]
  410464:	cmp	x1, x0
  410468:	b.ne	410478 <ferror@plt+0xda88>  // b.any
  41046c:	ldr	x19, [sp, #16]
  410470:	ldp	x29, x30, [sp], #48
  410474:	ret
  410478:	bl	402720 <abort@plt>
  41047c:	ret
  410480:	stp	x29, x30, [sp, #-32]!
  410484:	mov	x29, sp
  410488:	stp	x19, x20, [sp, #16]
  41048c:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  410490:	add	x19, x0, #0xb00
  410494:	ldr	x1, [x0, #2816]
  410498:	mov	w0, #0x0                   	// #0
  41049c:	blr	x1
  4104a0:	ldr	x20, [x19, #8]
  4104a4:	bl	411df0 <ferror@plt+0xf400>
  4104a8:	mov	x19, x0
  4104ac:	bl	4023d0 <strlen@plt>
  4104b0:	mov	x2, x0
  4104b4:	mov	x1, x19
  4104b8:	mov	w0, #0x2                   	// #2
  4104bc:	bl	4026f0 <write@plt>
  4104c0:	mov	x2, #0x2                   	// #2
  4104c4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  4104c8:	add	x1, x1, #0x518
  4104cc:	mov	w0, w2
  4104d0:	bl	4026f0 <write@plt>
  4104d4:	mov	x0, x20
  4104d8:	bl	4023d0 <strlen@plt>
  4104dc:	mov	x2, x0
  4104e0:	mov	x1, x20
  4104e4:	mov	w0, #0x2                   	// #2
  4104e8:	bl	4026f0 <write@plt>
  4104ec:	mov	x2, #0x1                   	// #1
  4104f0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x6c>
  4104f4:	add	x1, x1, #0x810
  4104f8:	mov	w0, #0x2                   	// #2
  4104fc:	bl	4026f0 <write@plt>
  410500:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  410504:	ldr	w0, [x0, #868]
  410508:	bl	4023b0 <_exit@plt>
  41050c:	stp	x29, x30, [sp, #-208]!
  410510:	mov	x29, sp
  410514:	str	x19, [sp, #16]
  410518:	mov	x19, x0
  41051c:	str	wzr, [sp, #192]
  410520:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  410524:	add	x0, x0, #0xb20
  410528:	str	x0, [sp, #184]
  41052c:	mov	x0, #0x4000                	// #16384
  410530:	str	x0, [sp, #200]
  410534:	mov	x1, #0x0                   	// #0
  410538:	add	x0, sp, #0xb8
  41053c:	bl	4023a0 <sigaltstack@plt>
  410540:	cbnz	w0, 4105a8 <ferror@plt+0xdbb8>
  410544:	adrp	x0, 410000 <ferror@plt+0xd610>
  410548:	add	x0, x0, #0x47c
  41054c:	cmp	x19, #0x0
  410550:	csel	x19, x0, x19, eq  // eq = none
  410554:	adrp	x0, 434000 <__progname@@GLIBC_2.17+0x3bb8>
  410558:	add	x1, x0, #0xb00
  41055c:	str	x19, [x0, #2816]
  410560:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  410564:	add	x0, x0, #0x228
  410568:	str	x0, [x1, #16]
  41056c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  410570:	add	x0, x0, #0x238
  410574:	str	x0, [x1, #8]
  410578:	add	x0, sp, #0x28
  41057c:	bl	4025b0 <sigemptyset@plt>
  410580:	mov	w0, #0x4                   	// #4
  410584:	movk	w0, #0xc800, lsl #16
  410588:	str	w0, [sp, #168]
  41058c:	adrp	x0, 410000 <ferror@plt+0xd610>
  410590:	add	x0, x0, #0x480
  410594:	str	x0, [sp, #32]
  410598:	mov	x2, #0x0                   	// #0
  41059c:	add	x1, sp, #0x20
  4105a0:	mov	w0, #0xb                   	// #11
  4105a4:	bl	4026c0 <sigaction@plt>
  4105a8:	ldr	x19, [sp, #16]
  4105ac:	ldp	x29, x30, [sp], #208
  4105b0:	ret
  4105b4:	mov	x2, x0
  4105b8:	ldrb	w1, [x0]
  4105bc:	cbz	w1, 4105d8 <ferror@plt+0xdbe8>
  4105c0:	mov	x0, #0x0                   	// #0
  4105c4:	ror	x0, x0, #55
  4105c8:	add	x0, x0, w1, uxtb
  4105cc:	ldrb	w1, [x2, #1]!
  4105d0:	cbnz	w1, 4105c4 <ferror@plt+0xdbd4>
  4105d4:	ret
  4105d8:	mov	x0, #0x0                   	// #0
  4105dc:	b	4105d4 <ferror@plt+0xdbe4>
  4105e0:	stp	x29, x30, [sp, #-16]!
  4105e4:	mov	x29, sp
  4105e8:	bl	4027b0 <strcmp@plt>
  4105ec:	cmp	w0, #0x0
  4105f0:	cset	w0, eq  // eq = none
  4105f4:	ldp	x29, x30, [sp], #16
  4105f8:	ret
  4105fc:	stp	x29, x30, [sp, #-32]!
  410600:	mov	x29, sp
  410604:	stp	x19, x20, [sp, #16]
  410608:	mov	x20, x0
  41060c:	mov	x19, x1
  410610:	mov	x0, x1
  410614:	bl	4029b0 <unlink@plt>
  410618:	tbnz	w0, #31, 41062c <ferror@plt+0xdc3c>
  41061c:	mov	w0, #0x0                   	// #0
  410620:	ldp	x19, x20, [sp, #16]
  410624:	ldp	x29, x30, [sp], #32
  410628:	ret
  41062c:	ldrb	w1, [x20, #8]
  410630:	mov	w0, #0x0                   	// #0
  410634:	cbz	w1, 410620 <ferror@plt+0xdc30>
  410638:	bl	402970 <__errno_location@plt>
  41063c:	ldr	w1, [x0]
  410640:	mov	w0, #0x0                   	// #0
  410644:	cmp	w1, #0x2
  410648:	b.eq	410620 <ferror@plt+0xdc30>  // b.none
  41064c:	mov	x3, x19
  410650:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  410654:	add	x2, x2, #0x248
  410658:	bl	402420 <error@plt>
  41065c:	mov	w0, #0xffffffff            	// #-1
  410660:	b	410620 <ferror@plt+0xdc30>
  410664:	stp	x29, x30, [sp, #-176]!
  410668:	mov	x29, sp
  41066c:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  410670:	ldr	x0, [x0, #2848]
  410674:	cbz	x0, 4106e4 <ferror@plt+0xdcf4>
  410678:	ldr	x1, [x0]
  41067c:	add	x8, sp, #0x78
  410680:	ldr	x1, [x1, #160]
  410684:	blr	x1
  410688:	ldp	x0, x1, [sp, #120]
  41068c:	stp	x0, x1, [sp, #64]
  410690:	ldp	x0, x1, [sp, #136]
  410694:	stp	x0, x1, [sp, #80]
  410698:	ldp	x0, x1, [sp, #152]
  41069c:	stp	x0, x1, [sp, #96]
  4106a0:	ldr	x0, [sp, #168]
  4106a4:	str	x0, [sp, #112]
  4106a8:	b	4106b4 <ferror@plt+0xdcc4>
  4106ac:	ldr	w0, [sp, #120]
  4106b0:	bl	4026b0 <close@plt>
  4106b4:	ldr	x0, [sp, #64]
  4106b8:	ldr	x3, [x0, #176]
  4106bc:	mov	x2, #0x0                   	// #0
  4106c0:	add	x1, sp, #0x78
  4106c4:	add	x0, sp, #0x40
  4106c8:	blr	x3
  4106cc:	and	w0, w0, #0xff
  4106d0:	cbnz	w0, 4106ac <ferror@plt+0xdcbc>
  4106d4:	ldr	x0, [sp, #64]
  4106d8:	ldr	x1, [x0, #184]
  4106dc:	add	x0, sp, #0x40
  4106e0:	blr	x1
  4106e4:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4106e8:	add	x0, x0, #0xb20
  4106ec:	add	x0, x0, #0x8
  4106f0:	ldr	x0, [x0, #8]
  4106f4:	cbz	x0, 41081c <ferror@plt+0xde2c>
  4106f8:	stp	x19, x20, [sp, #16]
  4106fc:	str	x21, [sp, #32]
  410700:	mov	x19, #0x0                   	// #0
  410704:	adrp	x21, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  410708:	add	x21, x21, #0xb20
  41070c:	b	4107a8 <ferror@plt+0xddb8>
  410710:	ldr	x0, [sp, #64]
  410714:	ldr	x1, [x0, #184]
  410718:	add	x0, sp, #0x40
  41071c:	blr	x1
  410720:	ldr	x0, [x20, #16]
  410724:	ldr	x1, [x0]
  410728:	add	x8, sp, #0x78
  41072c:	ldr	x1, [x1, #160]
  410730:	blr	x1
  410734:	ldp	x0, x1, [sp, #120]
  410738:	stp	x0, x1, [sp, #64]
  41073c:	ldp	x0, x1, [sp, #136]
  410740:	stp	x0, x1, [sp, #80]
  410744:	ldp	x0, x1, [sp, #152]
  410748:	stp	x0, x1, [sp, #96]
  41074c:	ldr	x0, [sp, #168]
  410750:	str	x0, [sp, #112]
  410754:	b	410760 <ferror@plt+0xdd70>
  410758:	ldr	x0, [sp, #56]
  41075c:	bl	4027d0 <rmdir@plt>
  410760:	ldr	x0, [sp, #64]
  410764:	ldr	x3, [x0, #176]
  410768:	mov	x2, #0x0                   	// #0
  41076c:	add	x1, sp, #0x38
  410770:	add	x0, sp, #0x40
  410774:	blr	x3
  410778:	and	w0, w0, #0xff
  41077c:	cbnz	w0, 410758 <ferror@plt+0xdd68>
  410780:	ldr	x0, [sp, #64]
  410784:	ldr	x1, [x0, #184]
  410788:	add	x0, sp, #0x40
  41078c:	blr	x1
  410790:	ldr	x0, [x20]
  410794:	bl	4027d0 <rmdir@plt>
  410798:	add	x19, x19, #0x1
  41079c:	ldr	x0, [x21, #16]
  4107a0:	cmp	x0, x19
  4107a4:	b.ls	410814 <ferror@plt+0xde24>  // b.plast
  4107a8:	ldr	x0, [x21, #8]
  4107ac:	ldr	x20, [x0, x19, lsl #3]
  4107b0:	cbz	x20, 410798 <ferror@plt+0xdda8>
  4107b4:	ldr	x0, [x20, #24]
  4107b8:	ldr	x1, [x0]
  4107bc:	add	x8, sp, #0x78
  4107c0:	ldr	x1, [x1, #160]
  4107c4:	blr	x1
  4107c8:	ldp	x0, x1, [sp, #120]
  4107cc:	stp	x0, x1, [sp, #64]
  4107d0:	ldp	x0, x1, [sp, #136]
  4107d4:	stp	x0, x1, [sp, #80]
  4107d8:	ldp	x0, x1, [sp, #152]
  4107dc:	stp	x0, x1, [sp, #96]
  4107e0:	ldr	x0, [sp, #168]
  4107e4:	str	x0, [sp, #112]
  4107e8:	ldr	x0, [sp, #64]
  4107ec:	ldr	x3, [x0, #176]
  4107f0:	mov	x2, #0x0                   	// #0
  4107f4:	add	x1, sp, #0x38
  4107f8:	add	x0, sp, #0x40
  4107fc:	blr	x3
  410800:	and	w0, w0, #0xff
  410804:	cbz	w0, 410710 <ferror@plt+0xdd20>
  410808:	ldr	x0, [sp, #56]
  41080c:	bl	4029b0 <unlink@plt>
  410810:	b	4107e8 <ferror@plt+0xddf8>
  410814:	ldp	x19, x20, [sp, #16]
  410818:	ldr	x21, [sp, #32]
  41081c:	ldp	x29, x30, [sp], #176
  410820:	ret
  410824:	stp	x29, x30, [sp, #-32]!
  410828:	mov	x29, sp
  41082c:	stp	x19, x20, [sp, #16]
  410830:	mov	x20, x0
  410834:	mov	x19, x1
  410838:	mov	x0, x1
  41083c:	bl	4027d0 <rmdir@plt>
  410840:	tbnz	w0, #31, 410854 <ferror@plt+0xde64>
  410844:	mov	w0, #0x0                   	// #0
  410848:	ldp	x19, x20, [sp, #16]
  41084c:	ldp	x29, x30, [sp], #32
  410850:	ret
  410854:	ldrb	w1, [x20, #8]
  410858:	mov	w0, #0x0                   	// #0
  41085c:	cbz	w1, 410848 <ferror@plt+0xde58>
  410860:	bl	402970 <__errno_location@plt>
  410864:	ldr	w1, [x0]
  410868:	mov	w0, #0x0                   	// #0
  41086c:	cmp	w1, #0x2
  410870:	b.eq	410848 <ferror@plt+0xde58>  // b.none
  410874:	mov	x3, x19
  410878:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  41087c:	add	x2, x2, #0x268
  410880:	bl	402420 <error@plt>
  410884:	mov	w0, #0xffffffff            	// #-1
  410888:	b	410848 <ferror@plt+0xde58>
  41088c:	stp	x29, x30, [sp, #-32]!
  410890:	mov	x29, sp
  410894:	stp	x19, x20, [sp, #16]
  410898:	mov	w20, w0
  41089c:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4108a0:	ldr	x19, [x0, #2848]
  4108a4:	cbz	x19, 4108f8 <ferror@plt+0xdf08>
  4108a8:	ldr	x0, [x19]
  4108ac:	ldr	x1, [x0, #16]
  4108b0:	mov	x0, x19
  4108b4:	blr	x1
  4108b8:	ldr	x1, [x19]
  4108bc:	ldr	x4, [x1, #72]
  4108c0:	sxtw	x3, w20
  4108c4:	mov	x2, x0
  4108c8:	mov	x1, #0x0                   	// #0
  4108cc:	mov	x0, x19
  4108d0:	blr	x4
  4108d4:	mov	x1, x0
  4108d8:	cbz	x0, 4108fc <ferror@plt+0xdf0c>
  4108dc:	ldr	x0, [x19]
  4108e0:	ldr	x2, [x0, #128]
  4108e4:	mov	x0, x19
  4108e8:	blr	x2
  4108ec:	ldp	x19, x20, [sp, #16]
  4108f0:	ldp	x29, x30, [sp], #32
  4108f4:	ret
  4108f8:	bl	402720 <abort@plt>
  4108fc:	bl	402720 <abort@plt>
  410900:	stp	x29, x30, [sp, #-32]!
  410904:	mov	x29, sp
  410908:	str	x19, [sp, #16]
  41090c:	mov	w19, w0
  410910:	adrp	x1, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  410914:	ldr	x1, [x1, #2848]
  410918:	cbz	x1, 410944 <ferror@plt+0xdf54>
  41091c:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  410920:	ldr	x0, [x0, #2848]
  410924:	ldr	x1, [x0]
  410928:	ldr	x2, [x1, #88]
  41092c:	sxtw	x1, w19
  410930:	blr	x2
  410934:	cbz	x0, 410978 <ferror@plt+0xdf88>
  410938:	ldr	x19, [sp, #16]
  41093c:	ldp	x29, x30, [sp], #32
  410940:	ret
  410944:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  410948:	ldr	x5, [x0, #2712]
  41094c:	mov	w4, #0x0                   	// #0
  410950:	mov	x3, #0x0                   	// #0
  410954:	mov	x2, #0x0                   	// #0
  410958:	add	x0, x0, #0xa98
  41095c:	blr	x5
  410960:	mov	x1, x0
  410964:	cbz	x0, 410974 <ferror@plt+0xdf84>
  410968:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  41096c:	str	x1, [x0, #2848]
  410970:	b	41091c <ferror@plt+0xdf2c>
  410974:	bl	4162e8 <ferror@plt+0x138f8>
  410978:	bl	4162e8 <ferror@plt+0x138f8>
  41097c:	stp	x29, x30, [sp, #-80]!
  410980:	mov	x29, sp
  410984:	stp	x19, x20, [sp, #16]
  410988:	stp	x21, x22, [sp, #32]
  41098c:	stp	x23, x24, [sp, #48]
  410990:	mov	x20, x0
  410994:	mov	x19, x1
  410998:	and	w21, w2, #0xff
  41099c:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4109a0:	add	x0, x0, #0xb20
  4109a4:	add	x0, x0, #0x8
  4109a8:	ldr	x0, [x0, #8]
  4109ac:	cbz	x0, 4109dc <ferror@plt+0xdfec>
  4109b0:	mov	x2, #0x0                   	// #0
  4109b4:	adrp	x3, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4109b8:	add	x3, x3, #0xb20
  4109bc:	ldr	x4, [x3, #8]
  4109c0:	lsl	x0, x2, #3
  4109c4:	ldr	x4, [x4, x2, lsl #3]
  4109c8:	cbz	x4, 410a20 <ferror@plt+0xe030>
  4109cc:	add	x2, x2, #0x1
  4109d0:	ldr	x4, [x3, #16]
  4109d4:	cmp	x4, x2
  4109d8:	b.hi	4109bc <ferror@plt+0xdfcc>  // b.pmore
  4109dc:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4109e0:	add	x0, x0, #0xb20
  4109e4:	ldr	x1, [x0, #16]
  4109e8:	ldr	x22, [x0, #24]
  4109ec:	cmp	x1, x22
  4109f0:	b.eq	410b18 <ferror@plt+0xe128>  // b.none
  4109f4:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4109f8:	add	x0, x0, #0xb20
  4109fc:	add	x1, x0, #0x8
  410a00:	ldr	x0, [x0, #8]
  410a04:	ldr	x2, [x1, #8]
  410a08:	add	x23, x0, x2, lsl #3
  410a0c:	str	xzr, [x0, x2, lsl #3]
  410a10:	ldr	x0, [x1, #8]
  410a14:	add	x0, x0, #0x1
  410a18:	str	x0, [x1, #8]
  410a1c:	b	410a34 <ferror@plt+0xe044>
  410a20:	adrp	x1, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  410a24:	add	x1, x1, #0xb20
  410a28:	ldr	x23, [x1, #8]
  410a2c:	adds	x23, x23, x0
  410a30:	b.eq	4109dc <ferror@plt+0xdfec>  // b.none
  410a34:	mov	x0, #0x20                  	// #32
  410a38:	bl	41607c <ferror@plt+0x1368c>
  410a3c:	mov	x22, x0
  410a40:	str	xzr, [x0]
  410a44:	strb	w21, [x0, #8]
  410a48:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  410a4c:	ldr	x21, [x0, #2712]
  410a50:	mov	w4, #0x0                   	// #0
  410a54:	mov	x3, #0x0                   	// #0
  410a58:	adrp	x2, 410000 <ferror@plt+0xd610>
  410a5c:	add	x2, x2, #0x5b4
  410a60:	adrp	x1, 410000 <ferror@plt+0xd610>
  410a64:	add	x1, x1, #0x5e0
  410a68:	add	x0, x0, #0xa98
  410a6c:	blr	x21
  410a70:	cbz	x0, 410bb0 <ferror@plt+0xe1c0>
  410a74:	str	x0, [x22, #16]
  410a78:	mov	w4, #0x0                   	// #0
  410a7c:	mov	x3, #0x0                   	// #0
  410a80:	adrp	x2, 410000 <ferror@plt+0xd610>
  410a84:	add	x2, x2, #0x5b4
  410a88:	adrp	x1, 410000 <ferror@plt+0xd610>
  410a8c:	add	x1, x1, #0x5e0
  410a90:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  410a94:	add	x0, x0, #0xa98
  410a98:	blr	x21
  410a9c:	cbz	x0, 410bb8 <ferror@plt+0xe1c8>
  410aa0:	str	x0, [x22, #24]
  410aa4:	mov	x0, #0x1000                	// #4096
  410aa8:	bl	416314 <ferror@plt+0x13924>
  410aac:	mov	x21, x0
  410ab0:	cmp	x19, #0x0
  410ab4:	cset	w4, eq  // eq = none
  410ab8:	mov	x3, x20
  410abc:	mov	x2, x19
  410ac0:	mov	x1, #0x1000                	// #4096
  410ac4:	bl	4154cc <ferror@plt+0x12adc>
  410ac8:	cbnz	w0, 410bc0 <ferror@plt+0xe1d0>
  410acc:	bl	411bd0 <ferror@plt+0xf1e0>
  410ad0:	mov	x0, x21
  410ad4:	bl	402700 <mkdtemp@plt>
  410ad8:	mov	x19, x0
  410adc:	cbz	x0, 410be8 <ferror@plt+0xe1f8>
  410ae0:	str	x0, [x22]
  410ae4:	str	x22, [x23]
  410ae8:	bl	411bfc <ferror@plt+0xf20c>
  410aec:	mov	x0, x19
  410af0:	bl	4162bc <ferror@plt+0x138cc>
  410af4:	str	x0, [x22]
  410af8:	mov	x0, x21
  410afc:	bl	4132b4 <ferror@plt+0x108c4>
  410b00:	mov	x0, x22
  410b04:	ldp	x19, x20, [sp, #16]
  410b08:	ldp	x21, x22, [sp, #32]
  410b0c:	ldp	x23, x24, [sp, #48]
  410b10:	ldp	x29, x30, [sp], #80
  410b14:	ret
  410b18:	str	x25, [sp, #64]
  410b1c:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  410b20:	add	x0, x0, #0xb20
  410b24:	ldr	x24, [x0, #8]
  410b28:	lsl	x1, x22, #1
  410b2c:	add	x25, x1, #0x1
  410b30:	cmp	xzr, x1, lsr #61
  410b34:	cset	x0, ne  // ne = any
  410b38:	tst	x1, #0x1000000000000000
  410b3c:	csinc	w0, w0, wzr, eq  // eq = none
  410b40:	cbnz	w0, 410b94 <ferror@plt+0xe1a4>
  410b44:	lsl	x0, x25, #3
  410b48:	bl	41607c <ferror@plt+0x1368c>
  410b4c:	mov	x23, x0
  410b50:	cbz	x22, 410b98 <ferror@plt+0xe1a8>
  410b54:	mov	x1, x24
  410b58:	mov	x3, x0
  410b5c:	add	x2, x24, x22, lsl #3
  410b60:	ldr	x0, [x1], #8
  410b64:	str	x0, [x3], #8
  410b68:	cmp	x1, x2
  410b6c:	b.ne	410b60 <ferror@plt+0xe170>  // b.any
  410b70:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  410b74:	add	x0, x0, #0xb20
  410b78:	str	x23, [x0, #8]
  410b7c:	str	x25, [x0, #24]
  410b80:	cbz	x24, 410ba8 <ferror@plt+0xe1b8>
  410b84:	mov	x0, x24
  410b88:	bl	402810 <free@plt>
  410b8c:	ldr	x25, [sp, #64]
  410b90:	b	4109f4 <ferror@plt+0xe004>
  410b94:	bl	4162e8 <ferror@plt+0x138f8>
  410b98:	adrp	x0, 410000 <ferror@plt+0xd610>
  410b9c:	add	x0, x0, #0x664
  410ba0:	bl	411a44 <ferror@plt+0xf054>
  410ba4:	b	410b70 <ferror@plt+0xe180>
  410ba8:	ldr	x25, [sp, #64]
  410bac:	b	4109f4 <ferror@plt+0xe004>
  410bb0:	str	x25, [sp, #64]
  410bb4:	bl	4162e8 <ferror@plt+0x138f8>
  410bb8:	str	x25, [sp, #64]
  410bbc:	bl	4162e8 <ferror@plt+0x138f8>
  410bc0:	bl	402970 <__errno_location@plt>
  410bc4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  410bc8:	add	x2, x2, #0x290
  410bcc:	ldr	w1, [x0]
  410bd0:	mov	w0, #0x0                   	// #0
  410bd4:	bl	402420 <error@plt>
  410bd8:	mov	x0, x21
  410bdc:	bl	4132b4 <ferror@plt+0x108c4>
  410be0:	mov	x22, #0x0                   	// #0
  410be4:	b	410b00 <ferror@plt+0xe110>
  410be8:	bl	411bfc <ferror@plt+0xf20c>
  410bec:	bl	402970 <__errno_location@plt>
  410bf0:	mov	x3, x21
  410bf4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  410bf8:	add	x2, x2, #0x2c8
  410bfc:	ldr	w1, [x0]
  410c00:	mov	w0, #0x0                   	// #0
  410c04:	bl	402420 <error@plt>
  410c08:	b	410bd8 <ferror@plt+0xe1e8>
  410c0c:	stp	x29, x30, [sp, #-48]!
  410c10:	mov	x29, sp
  410c14:	stp	x19, x20, [sp, #16]
  410c18:	str	x21, [sp, #32]
  410c1c:	mov	x21, x0
  410c20:	mov	x20, x1
  410c24:	ldr	x19, [x0, #24]
  410c28:	ldr	x0, [x19]
  410c2c:	ldr	x1, [x0, #16]
  410c30:	mov	x0, x19
  410c34:	blr	x1
  410c38:	ldr	x1, [x19]
  410c3c:	ldr	x4, [x1, #72]
  410c40:	mov	x3, x20
  410c44:	mov	x2, x0
  410c48:	mov	x1, #0x0                   	// #0
  410c4c:	mov	x0, x19
  410c50:	blr	x4
  410c54:	cbz	x0, 410c68 <ferror@plt+0xe278>
  410c58:	ldp	x19, x20, [sp, #16]
  410c5c:	ldr	x21, [sp, #32]
  410c60:	ldp	x29, x30, [sp], #48
  410c64:	ret
  410c68:	ldr	x19, [x21, #24]
  410c6c:	mov	x0, x20
  410c70:	bl	4162bc <ferror@plt+0x138cc>
  410c74:	ldr	x1, [x19]
  410c78:	ldr	x2, [x1, #88]
  410c7c:	mov	x1, x0
  410c80:	mov	x0, x19
  410c84:	blr	x2
  410c88:	cbnz	x0, 410c58 <ferror@plt+0xe268>
  410c8c:	bl	4162e8 <ferror@plt+0x138f8>
  410c90:	stp	x29, x30, [sp, #-48]!
  410c94:	mov	x29, sp
  410c98:	stp	x19, x20, [sp, #16]
  410c9c:	mov	x20, x1
  410ca0:	ldr	x19, [x0, #24]
  410ca4:	ldr	x0, [x19]
  410ca8:	ldr	x1, [x0, #16]
  410cac:	mov	x0, x19
  410cb0:	blr	x1
  410cb4:	ldr	x1, [x19]
  410cb8:	ldr	x4, [x1, #72]
  410cbc:	mov	x3, x20
  410cc0:	mov	x2, x0
  410cc4:	mov	x1, #0x0                   	// #0
  410cc8:	mov	x0, x19
  410ccc:	blr	x4
  410cd0:	cbz	x0, 410d14 <ferror@plt+0xe324>
  410cd4:	str	x21, [sp, #32]
  410cd8:	mov	x20, x0
  410cdc:	ldr	x0, [x19]
  410ce0:	ldr	x2, [x0, #24]
  410ce4:	mov	x1, x20
  410ce8:	mov	x0, x19
  410cec:	blr	x2
  410cf0:	mov	x21, x0
  410cf4:	ldr	x0, [x19]
  410cf8:	ldr	x2, [x0, #128]
  410cfc:	mov	x1, x20
  410d00:	mov	x0, x19
  410d04:	blr	x2
  410d08:	mov	x0, x21
  410d0c:	bl	402810 <free@plt>
  410d10:	ldr	x21, [sp, #32]
  410d14:	ldp	x19, x20, [sp, #16]
  410d18:	ldp	x29, x30, [sp], #48
  410d1c:	ret
  410d20:	stp	x29, x30, [sp, #-48]!
  410d24:	mov	x29, sp
  410d28:	stp	x19, x20, [sp, #16]
  410d2c:	str	x21, [sp, #32]
  410d30:	mov	x21, x0
  410d34:	mov	x20, x1
  410d38:	ldr	x19, [x0, #16]
  410d3c:	ldr	x0, [x19]
  410d40:	ldr	x1, [x0, #16]
  410d44:	mov	x0, x19
  410d48:	blr	x1
  410d4c:	ldr	x1, [x19]
  410d50:	ldr	x4, [x1, #72]
  410d54:	mov	x3, x20
  410d58:	mov	x2, x0
  410d5c:	mov	x1, #0x0                   	// #0
  410d60:	mov	x0, x19
  410d64:	blr	x4
  410d68:	cbz	x0, 410d7c <ferror@plt+0xe38c>
  410d6c:	ldp	x19, x20, [sp, #16]
  410d70:	ldr	x21, [sp, #32]
  410d74:	ldp	x29, x30, [sp], #48
  410d78:	ret
  410d7c:	ldr	x19, [x21, #16]
  410d80:	mov	x0, x20
  410d84:	bl	4162bc <ferror@plt+0x138cc>
  410d88:	ldr	x1, [x19]
  410d8c:	ldr	x2, [x1, #88]
  410d90:	mov	x1, x0
  410d94:	mov	x0, x19
  410d98:	blr	x2
  410d9c:	cbnz	x0, 410d6c <ferror@plt+0xe37c>
  410da0:	bl	4162e8 <ferror@plt+0x138f8>
  410da4:	stp	x29, x30, [sp, #-48]!
  410da8:	mov	x29, sp
  410dac:	stp	x19, x20, [sp, #16]
  410db0:	mov	x20, x1
  410db4:	ldr	x19, [x0, #16]
  410db8:	ldr	x0, [x19]
  410dbc:	ldr	x1, [x0, #16]
  410dc0:	mov	x0, x19
  410dc4:	blr	x1
  410dc8:	ldr	x1, [x19]
  410dcc:	ldr	x4, [x1, #72]
  410dd0:	mov	x3, x20
  410dd4:	mov	x2, x0
  410dd8:	mov	x1, #0x0                   	// #0
  410ddc:	mov	x0, x19
  410de0:	blr	x4
  410de4:	cbz	x0, 410e28 <ferror@plt+0xe438>
  410de8:	str	x21, [sp, #32]
  410dec:	mov	x20, x0
  410df0:	ldr	x0, [x19]
  410df4:	ldr	x2, [x0, #24]
  410df8:	mov	x1, x20
  410dfc:	mov	x0, x19
  410e00:	blr	x2
  410e04:	mov	x21, x0
  410e08:	ldr	x0, [x19]
  410e0c:	ldr	x2, [x0, #128]
  410e10:	mov	x1, x20
  410e14:	mov	x0, x19
  410e18:	blr	x2
  410e1c:	mov	x0, x21
  410e20:	bl	402810 <free@plt>
  410e24:	ldr	x21, [sp, #32]
  410e28:	ldp	x19, x20, [sp, #16]
  410e2c:	ldp	x29, x30, [sp], #48
  410e30:	ret
  410e34:	stp	x29, x30, [sp, #-48]!
  410e38:	mov	x29, sp
  410e3c:	stp	x19, x20, [sp, #16]
  410e40:	str	x21, [sp, #32]
  410e44:	mov	x20, x0
  410e48:	mov	x21, x1
  410e4c:	bl	4105fc <ferror@plt+0xdc0c>
  410e50:	mov	w19, w0
  410e54:	mov	x1, x21
  410e58:	mov	x0, x20
  410e5c:	bl	410c90 <ferror@plt+0xe2a0>
  410e60:	mov	w0, w19
  410e64:	ldp	x19, x20, [sp, #16]
  410e68:	ldr	x21, [sp, #32]
  410e6c:	ldp	x29, x30, [sp], #48
  410e70:	ret
  410e74:	stp	x29, x30, [sp, #-48]!
  410e78:	mov	x29, sp
  410e7c:	stp	x19, x20, [sp, #16]
  410e80:	str	x21, [sp, #32]
  410e84:	mov	x20, x0
  410e88:	mov	x21, x1
  410e8c:	bl	410824 <ferror@plt+0xde34>
  410e90:	mov	w19, w0
  410e94:	mov	x1, x21
  410e98:	mov	x0, x20
  410e9c:	bl	410da4 <ferror@plt+0xe3b4>
  410ea0:	mov	w0, w19
  410ea4:	ldp	x19, x20, [sp, #16]
  410ea8:	ldr	x21, [sp, #32]
  410eac:	ldp	x29, x30, [sp], #48
  410eb0:	ret
  410eb4:	stp	x29, x30, [sp, #-176]!
  410eb8:	mov	x29, sp
  410ebc:	stp	x19, x20, [sp, #16]
  410ec0:	stp	x21, x22, [sp, #32]
  410ec4:	mov	x21, x0
  410ec8:	ldr	x22, [x0, #24]
  410ecc:	ldr	x0, [x22]
  410ed0:	add	x8, sp, #0x30
  410ed4:	ldr	x1, [x0, #160]
  410ed8:	mov	x0, x22
  410edc:	blr	x1
  410ee0:	ldp	x0, x1, [sp, #48]
  410ee4:	stp	x0, x1, [sp, #120]
  410ee8:	ldp	x0, x1, [sp, #64]
  410eec:	stp	x0, x1, [sp, #136]
  410ef0:	ldp	x0, x1, [sp, #80]
  410ef4:	stp	x0, x1, [sp, #152]
  410ef8:	ldr	x0, [sp, #96]
  410efc:	str	x0, [sp, #168]
  410f00:	mov	w19, #0x0                   	// #0
  410f04:	ldr	x0, [sp, #120]
  410f08:	ldr	x3, [x0, #176]
  410f0c:	add	x2, sp, #0x68
  410f10:	add	x1, sp, #0x70
  410f14:	add	x0, sp, #0x78
  410f18:	blr	x3
  410f1c:	and	w0, w0, #0xff
  410f20:	cbz	w0, 410f58 <ferror@plt+0xe568>
  410f24:	ldr	x20, [sp, #112]
  410f28:	mov	x1, x20
  410f2c:	mov	x0, x21
  410f30:	bl	4105fc <ferror@plt+0xdc0c>
  410f34:	orr	w19, w19, w0
  410f38:	ldr	x0, [x22]
  410f3c:	ldr	x2, [x0, #128]
  410f40:	ldr	x1, [sp, #104]
  410f44:	mov	x0, x22
  410f48:	blr	x2
  410f4c:	mov	x0, x20
  410f50:	bl	402810 <free@plt>
  410f54:	b	410f04 <ferror@plt+0xe514>
  410f58:	ldr	x0, [sp, #120]
  410f5c:	ldr	x1, [x0, #184]
  410f60:	add	x0, sp, #0x78
  410f64:	blr	x1
  410f68:	ldr	x22, [x21, #16]
  410f6c:	ldr	x0, [x22]
  410f70:	add	x8, sp, #0x30
  410f74:	ldr	x1, [x0, #160]
  410f78:	mov	x0, x22
  410f7c:	blr	x1
  410f80:	ldp	x0, x1, [sp, #48]
  410f84:	stp	x0, x1, [sp, #120]
  410f88:	ldp	x0, x1, [sp, #64]
  410f8c:	stp	x0, x1, [sp, #136]
  410f90:	ldp	x0, x1, [sp, #80]
  410f94:	stp	x0, x1, [sp, #152]
  410f98:	ldr	x0, [sp, #96]
  410f9c:	str	x0, [sp, #168]
  410fa0:	b	410fd4 <ferror@plt+0xe5e4>
  410fa4:	ldr	x20, [sp, #112]
  410fa8:	mov	x1, x20
  410fac:	mov	x0, x21
  410fb0:	bl	410824 <ferror@plt+0xde34>
  410fb4:	orr	w19, w19, w0
  410fb8:	ldr	x0, [x22]
  410fbc:	ldr	x2, [x0, #128]
  410fc0:	ldr	x1, [sp, #104]
  410fc4:	mov	x0, x22
  410fc8:	blr	x2
  410fcc:	mov	x0, x20
  410fd0:	bl	402810 <free@plt>
  410fd4:	ldr	x0, [sp, #120]
  410fd8:	ldr	x3, [x0, #176]
  410fdc:	add	x2, sp, #0x68
  410fe0:	add	x1, sp, #0x70
  410fe4:	add	x0, sp, #0x78
  410fe8:	blr	x3
  410fec:	and	w0, w0, #0xff
  410ff0:	cbnz	w0, 410fa4 <ferror@plt+0xe5b4>
  410ff4:	ldr	x0, [sp, #120]
  410ff8:	ldr	x1, [x0, #184]
  410ffc:	add	x0, sp, #0x78
  411000:	blr	x1
  411004:	mov	w0, w19
  411008:	ldp	x19, x20, [sp, #16]
  41100c:	ldp	x21, x22, [sp, #32]
  411010:	ldp	x29, x30, [sp], #176
  411014:	ret
  411018:	stp	x29, x30, [sp, #-32]!
  41101c:	mov	x29, sp
  411020:	stp	x19, x20, [sp, #16]
  411024:	mov	x19, x0
  411028:	bl	410eb4 <ferror@plt+0xe4c4>
  41102c:	mov	w20, w0
  411030:	ldr	x1, [x19]
  411034:	mov	x0, x19
  411038:	bl	410824 <ferror@plt+0xde34>
  41103c:	orr	w20, w20, w0
  411040:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411044:	add	x0, x0, #0xb20
  411048:	add	x0, x0, #0x8
  41104c:	ldr	x0, [x0, #8]
  411050:	cbz	x0, 411084 <ferror@plt+0xe694>
  411054:	mov	x1, #0x0                   	// #0
  411058:	adrp	x2, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  41105c:	add	x2, x2, #0xb20
  411060:	ldr	x4, [x2, #8]
  411064:	lsl	x3, x1, #3
  411068:	ldr	x4, [x4, x1, lsl #3]
  41106c:	cmp	x4, x19
  411070:	b.eq	411088 <ferror@plt+0xe698>  // b.none
  411074:	add	x1, x1, #0x1
  411078:	ldr	x3, [x2, #16]
  41107c:	cmp	x3, x1
  411080:	b.hi	411060 <ferror@plt+0xe670>  // b.pmore
  411084:	bl	402720 <abort@plt>
  411088:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  41108c:	add	x0, x0, #0xb20
  411090:	add	x0, x0, #0x8
  411094:	ldr	x0, [x0, #8]
  411098:	add	x2, x1, #0x1
  41109c:	cmp	x2, x0
  4110a0:	b.eq	4110f4 <ferror@plt+0xe704>  // b.none
  4110a4:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4110a8:	add	x0, x0, #0xb20
  4110ac:	ldr	x0, [x0, #8]
  4110b0:	str	xzr, [x0, x3]
  4110b4:	ldr	x0, [x19, #24]
  4110b8:	ldr	x1, [x0]
  4110bc:	ldr	x1, [x1, #152]
  4110c0:	blr	x1
  4110c4:	ldr	x0, [x19, #16]
  4110c8:	ldr	x1, [x0]
  4110cc:	ldr	x1, [x1, #152]
  4110d0:	blr	x1
  4110d4:	ldr	x0, [x19]
  4110d8:	bl	402810 <free@plt>
  4110dc:	mov	x0, x19
  4110e0:	bl	402810 <free@plt>
  4110e4:	mov	w0, w20
  4110e8:	ldp	x19, x20, [sp, #16]
  4110ec:	ldp	x29, x30, [sp], #32
  4110f0:	ret
  4110f4:	cbz	x1, 41111c <ferror@plt+0xe72c>
  4110f8:	sub	x3, x3, #0x8
  4110fc:	adrp	x2, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411100:	add	x2, x2, #0xb20
  411104:	ldr	x0, [x2, #8]
  411108:	ldr	x0, [x0, x3]
  41110c:	cbnz	x0, 41111c <ferror@plt+0xe72c>
  411110:	sub	x3, x3, #0x8
  411114:	subs	x1, x1, #0x1
  411118:	b.ne	411104 <ferror@plt+0xe714>  // b.any
  41111c:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411120:	add	x0, x0, #0xb20
  411124:	str	x1, [x0, #16]
  411128:	b	4110b4 <ferror@plt+0xe6c4>
  41112c:	stp	x29, x30, [sp, #-48]!
  411130:	mov	x29, sp
  411134:	stp	x19, x20, [sp, #16]
  411138:	str	x21, [sp, #32]
  41113c:	mov	x19, x0
  411140:	mov	w20, w1
  411144:	mov	w21, w2
  411148:	bl	411bd0 <ferror@plt+0xf1e0>
  41114c:	mov	w2, w21
  411150:	mov	w1, w20
  411154:	mov	x0, x19
  411158:	bl	402580 <open@plt>
  41115c:	mov	w19, w0
  411160:	bl	402970 <__errno_location@plt>
  411164:	mov	x20, x0
  411168:	ldr	w21, [x0]
  41116c:	tbz	w19, #31, 41118c <ferror@plt+0xe79c>
  411170:	bl	411bfc <ferror@plt+0xf20c>
  411174:	str	w21, [x20]
  411178:	mov	w0, w19
  41117c:	ldp	x19, x20, [sp, #16]
  411180:	ldr	x21, [sp, #32]
  411184:	ldp	x29, x30, [sp], #48
  411188:	ret
  41118c:	mov	w0, w19
  411190:	bl	410900 <ferror@plt+0xdf10>
  411194:	b	411170 <ferror@plt+0xe780>
  411198:	stp	x29, x30, [sp, #-48]!
  41119c:	mov	x29, sp
  4111a0:	stp	x19, x20, [sp, #16]
  4111a4:	str	x21, [sp, #32]
  4111a8:	mov	x19, x0
  4111ac:	mov	x20, x1
  4111b0:	bl	411bd0 <ferror@plt+0xf1e0>
  4111b4:	mov	x1, x20
  4111b8:	mov	x0, x19
  4111bc:	bl	411d38 <ferror@plt+0xf348>
  4111c0:	mov	x19, x0
  4111c4:	bl	402970 <__errno_location@plt>
  4111c8:	mov	x20, x0
  4111cc:	ldr	w21, [x0]
  4111d0:	cbz	x19, 4111e4 <ferror@plt+0xe7f4>
  4111d4:	mov	x0, x19
  4111d8:	bl	402500 <fileno@plt>
  4111dc:	tbnz	w0, #31, 411200 <ferror@plt+0xe810>
  4111e0:	bl	410900 <ferror@plt+0xdf10>
  4111e4:	bl	411bfc <ferror@plt+0xf20c>
  4111e8:	str	w21, [x20]
  4111ec:	mov	x0, x19
  4111f0:	ldp	x19, x20, [sp, #16]
  4111f4:	ldr	x21, [sp, #32]
  4111f8:	ldp	x29, x30, [sp], #48
  4111fc:	ret
  411200:	bl	402720 <abort@plt>
  411204:	stp	x29, x30, [sp, #-48]!
  411208:	mov	x29, sp
  41120c:	stp	x19, x20, [sp, #16]
  411210:	mov	w19, w0
  411214:	tbnz	w0, #31, 411250 <ferror@plt+0xe860>
  411218:	stp	x21, x22, [sp, #32]
  41121c:	bl	4026b0 <close@plt>
  411220:	mov	w20, w0
  411224:	bl	402970 <__errno_location@plt>
  411228:	mov	x21, x0
  41122c:	ldr	w22, [x0]
  411230:	mov	w0, w19
  411234:	bl	41088c <ferror@plt+0xde9c>
  411238:	str	w22, [x21]
  41123c:	ldp	x21, x22, [sp, #32]
  411240:	mov	w0, w20
  411244:	ldp	x19, x20, [sp, #16]
  411248:	ldp	x29, x30, [sp], #48
  41124c:	ret
  411250:	bl	4026b0 <close@plt>
  411254:	mov	w20, w0
  411258:	b	411240 <ferror@plt+0xe850>
  41125c:	stp	x29, x30, [sp, #-48]!
  411260:	mov	x29, sp
  411264:	stp	x19, x20, [sp, #16]
  411268:	stp	x21, x22, [sp, #32]
  41126c:	mov	x19, x0
  411270:	bl	402500 <fileno@plt>
  411274:	mov	w21, w0
  411278:	mov	x0, x19
  41127c:	bl	4167ec <ferror@plt+0x13dfc>
  411280:	mov	w20, w0
  411284:	bl	402970 <__errno_location@plt>
  411288:	mov	x19, x0
  41128c:	ldr	w22, [x0]
  411290:	mov	w0, w21
  411294:	bl	41088c <ferror@plt+0xde9c>
  411298:	str	w22, [x19]
  41129c:	mov	w0, w20
  4112a0:	ldp	x19, x20, [sp, #16]
  4112a4:	ldp	x21, x22, [sp, #32]
  4112a8:	ldp	x29, x30, [sp], #48
  4112ac:	ret
  4112b0:	stp	x29, x30, [sp, #-48]!
  4112b4:	mov	x29, sp
  4112b8:	stp	x19, x20, [sp, #16]
  4112bc:	stp	x21, x22, [sp, #32]
  4112c0:	mov	x19, x0
  4112c4:	bl	402500 <fileno@plt>
  4112c8:	mov	w21, w0
  4112cc:	mov	x0, x19
  4112d0:	bl	41138c <ferror@plt+0xe99c>
  4112d4:	mov	w20, w0
  4112d8:	bl	402970 <__errno_location@plt>
  4112dc:	mov	x19, x0
  4112e0:	ldr	w22, [x0]
  4112e4:	mov	w0, w21
  4112e8:	bl	41088c <ferror@plt+0xde9c>
  4112ec:	str	w22, [x19]
  4112f0:	mov	w0, w20
  4112f4:	ldp	x19, x20, [sp, #16]
  4112f8:	ldp	x21, x22, [sp, #32]
  4112fc:	ldp	x29, x30, [sp], #48
  411300:	ret
  411304:	stp	x29, x30, [sp, #-32]!
  411308:	mov	x29, sp
  41130c:	stp	x19, x20, [sp, #16]
  411310:	mov	w19, w0
  411314:	and	w20, w1, #0xff
  411318:	mov	w2, #0x0                   	// #0
  41131c:	mov	w1, #0x1                   	// #1
  411320:	bl	41688c <ferror@plt+0x13e9c>
  411324:	tbnz	w0, #31, 411368 <ferror@plt+0xe978>
  411328:	mov	w1, w0
  41132c:	orr	w0, w0, #0x1
  411330:	and	w2, w1, #0xfffffffe
  411334:	cmp	w20, #0x0
  411338:	csel	w2, w2, w0, eq  // eq = none
  41133c:	mov	w0, #0x0                   	// #0
  411340:	cmp	w2, w1
  411344:	b.eq	41135c <ferror@plt+0xe96c>  // b.none
  411348:	mov	w1, #0x2                   	// #2
  41134c:	mov	w0, w19
  411350:	bl	41688c <ferror@plt+0x13e9c>
  411354:	cmn	w0, #0x1
  411358:	csetm	w0, eq  // eq = none
  41135c:	ldp	x19, x20, [sp, #16]
  411360:	ldp	x29, x30, [sp], #32
  411364:	ret
  411368:	mov	w0, #0xffffffff            	// #-1
  41136c:	b	41135c <ferror@plt+0xe96c>
  411370:	stp	x29, x30, [sp, #-16]!
  411374:	mov	x29, sp
  411378:	mov	w2, #0x0                   	// #0
  41137c:	mov	w1, #0x406                 	// #1030
  411380:	bl	41688c <ferror@plt+0x13e9c>
  411384:	ldp	x29, x30, [sp], #16
  411388:	ret
  41138c:	stp	x29, x30, [sp, #-48]!
  411390:	mov	x29, sp
  411394:	stp	x19, x20, [sp, #16]
  411398:	str	x21, [sp, #32]
  41139c:	mov	x19, x0
  4113a0:	bl	4024f0 <__fpending@plt>
  4113a4:	mov	x21, x0
  4113a8:	ldr	w20, [x19]
  4113ac:	and	w20, w20, #0x20
  4113b0:	mov	x0, x19
  4113b4:	bl	4167ec <ferror@plt+0x13dfc>
  4113b8:	cbnz	w20, 4113e4 <ferror@plt+0xe9f4>
  4113bc:	cbz	w0, 4113d4 <ferror@plt+0xe9e4>
  4113c0:	cbnz	x21, 4113f8 <ferror@plt+0xea08>
  4113c4:	bl	402970 <__errno_location@plt>
  4113c8:	ldr	w0, [x0]
  4113cc:	cmp	w0, #0x9
  4113d0:	csetm	w0, ne  // ne = any
  4113d4:	ldp	x19, x20, [sp, #16]
  4113d8:	ldr	x21, [sp, #32]
  4113dc:	ldp	x29, x30, [sp], #48
  4113e0:	ret
  4113e4:	cbnz	w0, 411400 <ferror@plt+0xea10>
  4113e8:	bl	402970 <__errno_location@plt>
  4113ec:	str	wzr, [x0]
  4113f0:	mov	w0, #0xffffffff            	// #-1
  4113f4:	b	4113d4 <ferror@plt+0xe9e4>
  4113f8:	mov	w0, #0xffffffff            	// #-1
  4113fc:	b	4113d4 <ferror@plt+0xe9e4>
  411400:	mov	w0, #0xffffffff            	// #-1
  411404:	b	4113d4 <ferror@plt+0xe9e4>
  411408:	adrp	x1, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  41140c:	str	x0, [x1, #2880]
  411410:	ret
  411414:	stp	x29, x30, [sp, #-32]!
  411418:	mov	x29, sp
  41141c:	stp	x19, x20, [sp, #16]
  411420:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  411424:	ldr	x19, [x0, #1080]
  411428:	mov	x0, x19
  41142c:	bl	416ad4 <ferror@plt+0x140e4>
  411430:	cbnz	x0, 411490 <ferror@plt+0xeaa0>
  411434:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  411438:	ldr	x0, [x0, #1080]
  41143c:	bl	41138c <ferror@plt+0xe99c>
  411440:	cbz	w0, 4114c4 <ferror@plt+0xead4>
  411444:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411448:	ldr	x19, [x0, #2880]
  41144c:	cbz	x19, 4114d4 <ferror@plt+0xeae4>
  411450:	bl	402970 <__errno_location@plt>
  411454:	ldr	w20, [x0]
  411458:	mov	x0, x19
  41145c:	bl	414d34 <ferror@plt+0x12344>
  411460:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x306c>
  411464:	add	x4, x4, #0x300
  411468:	mov	x3, x0
  41146c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  411470:	add	x2, x2, #0x318
  411474:	mov	w1, w20
  411478:	mov	w0, #0x0                   	// #0
  41147c:	bl	402420 <error@plt>
  411480:	bl	411510 <ferror@plt+0xeb20>
  411484:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  411488:	ldr	w0, [x0, #868]
  41148c:	bl	4023b0 <_exit@plt>
  411490:	mov	w2, #0x1                   	// #1
  411494:	mov	x1, #0x0                   	// #0
  411498:	mov	x0, x19
  41149c:	bl	416b18 <ferror@plt+0x14128>
  4114a0:	cbnz	w0, 411434 <ferror@plt+0xea44>
  4114a4:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  4114a8:	ldr	x0, [x20, #1080]
  4114ac:	bl	416a7c <ferror@plt+0x1408c>
  4114b0:	mov	w19, w0
  4114b4:	ldr	x0, [x20, #1080]
  4114b8:	bl	41138c <ferror@plt+0xe99c>
  4114bc:	cbnz	w0, 411444 <ferror@plt+0xea54>
  4114c0:	cbnz	w19, 411444 <ferror@plt+0xea54>
  4114c4:	bl	411510 <ferror@plt+0xeb20>
  4114c8:	ldp	x19, x20, [sp, #16]
  4114cc:	ldp	x29, x30, [sp], #32
  4114d0:	ret
  4114d4:	bl	402970 <__errno_location@plt>
  4114d8:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x306c>
  4114dc:	add	x3, x3, #0x300
  4114e0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  4114e4:	add	x2, x2, #0x740
  4114e8:	ldr	w1, [x0]
  4114ec:	mov	w0, #0x0                   	// #0
  4114f0:	bl	402420 <error@plt>
  4114f4:	b	411480 <ferror@plt+0xea90>
  4114f8:	adrp	x1, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4114fc:	str	x0, [x1, #2888]
  411500:	ret
  411504:	adrp	x1, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411508:	strb	w0, [x1, #2896]
  41150c:	ret
  411510:	stp	x29, x30, [sp, #-32]!
  411514:	mov	x29, sp
  411518:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  41151c:	ldr	x0, [x0, #1072]
  411520:	bl	41138c <ferror@plt+0xe99c>
  411524:	cbz	w0, 411544 <ferror@plt+0xeb54>
  411528:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  41152c:	ldrb	w0, [x0, #2896]
  411530:	cbz	w0, 41155c <ferror@plt+0xeb6c>
  411534:	bl	402970 <__errno_location@plt>
  411538:	ldr	w0, [x0]
  41153c:	cmp	w0, #0x20
  411540:	b.ne	41155c <ferror@plt+0xeb6c>  // b.any
  411544:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  411548:	ldr	x0, [x0, #1048]
  41154c:	bl	41138c <ferror@plt+0xe99c>
  411550:	cbnz	w0, 4115cc <ferror@plt+0xebdc>
  411554:	ldp	x29, x30, [sp], #32
  411558:	ret
  41155c:	stp	x19, x20, [sp, #16]
  411560:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411564:	ldr	x19, [x0, #2888]
  411568:	cbz	x19, 4115a8 <ferror@plt+0xebb8>
  41156c:	bl	402970 <__errno_location@plt>
  411570:	ldr	w20, [x0]
  411574:	mov	x0, x19
  411578:	bl	414d34 <ferror@plt+0x12344>
  41157c:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x306c>
  411580:	add	x4, x4, #0x320
  411584:	mov	x3, x0
  411588:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  41158c:	add	x2, x2, #0x318
  411590:	mov	w1, w20
  411594:	mov	w0, #0x0                   	// #0
  411598:	bl	402420 <error@plt>
  41159c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4115a0:	ldr	w0, [x0, #868]
  4115a4:	bl	4023b0 <_exit@plt>
  4115a8:	bl	402970 <__errno_location@plt>
  4115ac:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x306c>
  4115b0:	add	x3, x3, #0x320
  4115b4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  4115b8:	add	x2, x2, #0x740
  4115bc:	ldr	w1, [x0]
  4115c0:	mov	w0, #0x0                   	// #0
  4115c4:	bl	402420 <error@plt>
  4115c8:	b	41159c <ferror@plt+0xebac>
  4115cc:	stp	x19, x20, [sp, #16]
  4115d0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4115d4:	ldr	w0, [x0, #868]
  4115d8:	bl	4023b0 <_exit@plt>
  4115dc:	sub	sp, sp, #0x290
  4115e0:	stp	x29, x30, [sp]
  4115e4:	mov	x29, sp
  4115e8:	stp	x19, x20, [sp, #16]
  4115ec:	stp	x21, x22, [sp, #32]
  4115f0:	stp	x23, x24, [sp, #48]
  4115f4:	stp	x25, x26, [sp, #64]
  4115f8:	stp	x27, x28, [sp, #80]
  4115fc:	mov	x21, x0
  411600:	mov	x22, x1
  411604:	mov	x23, x2
  411608:	and	w28, w3, #0xff
  41160c:	and	w26, w4, #0xff
  411610:	and	w27, w5, #0xff
  411614:	and	w20, w6, #0xff
  411618:	ldrb	w25, [sp, #656]
  41161c:	ands	w24, w7, #0xff
  411620:	b.ne	4116ac <ferror@plt+0xecbc>  // b.any
  411624:	add	x0, sp, #0x1c0
  411628:	bl	402770 <posix_spawn_file_actions_init@plt>
  41162c:	mov	w19, w0
  411630:	cbnz	w0, 41166c <ferror@plt+0xec7c>
  411634:	cbnz	w26, 4116c4 <ferror@plt+0xecd4>
  411638:	cbnz	w27, 4116f0 <ferror@plt+0xed00>
  41163c:	cbnz	w20, 41171c <ferror@plt+0xed2c>
  411640:	cbz	w24, 4117d8 <ferror@plt+0xede8>
  411644:	add	x0, sp, #0x70
  411648:	bl	4028c0 <posix_spawnattr_init@plt>
  41164c:	mov	w19, w0
  411650:	mov	w26, #0x0                   	// #0
  411654:	cbz	w0, 411748 <ferror@plt+0xed58>
  411658:	add	x0, sp, #0x1c0
  41165c:	bl	402660 <posix_spawn_file_actions_destroy@plt>
  411660:	cbz	w26, 41166c <ferror@plt+0xec7c>
  411664:	add	x0, sp, #0x70
  411668:	bl	4025c0 <posix_spawnattr_destroy@plt>
  41166c:	cbnz	w24, 4117b0 <ferror@plt+0xedc0>
  411670:	ldr	x0, [sp, #664]
  411674:	cbz	x0, 41167c <ferror@plt+0xec8c>
  411678:	str	wzr, [x0]
  41167c:	eor	w20, w20, #0x1
  411680:	orr	w20, w25, w20
  411684:	mov	w0, #0x7f                  	// #127
  411688:	cbz	w20, 41182c <ferror@plt+0xee3c>
  41168c:	mov	x3, x21
  411690:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  411694:	add	x2, x2, #0x340
  411698:	mov	w1, w19
  41169c:	mov	w0, w25
  4116a0:	bl	402420 <error@plt>
  4116a4:	mov	w0, #0x7f                  	// #127
  4116a8:	b	41182c <ferror@plt+0xee3c>
  4116ac:	add	x2, sp, #0x210
  4116b0:	mov	x1, #0x0                   	// #0
  4116b4:	mov	w0, #0x2                   	// #2
  4116b8:	bl	402430 <sigprocmask@plt>
  4116bc:	bl	411bd0 <ferror@plt+0xf1e0>
  4116c0:	b	411624 <ferror@plt+0xec34>
  4116c4:	mov	w4, #0x0                   	// #0
  4116c8:	mov	w3, #0x0                   	// #0
  4116cc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  4116d0:	add	x2, x2, #0x330
  4116d4:	mov	w1, #0x0                   	// #0
  4116d8:	add	x0, sp, #0x1c0
  4116dc:	bl	4024c0 <posix_spawn_file_actions_addopen@plt>
  4116e0:	mov	w19, w0
  4116e4:	cbz	w0, 411638 <ferror@plt+0xec48>
  4116e8:	mov	w26, #0x0                   	// #0
  4116ec:	b	411658 <ferror@plt+0xec68>
  4116f0:	mov	w4, #0x0                   	// #0
  4116f4:	mov	w3, #0x2                   	// #2
  4116f8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  4116fc:	add	x2, x2, #0x330
  411700:	mov	w1, #0x1                   	// #1
  411704:	add	x0, sp, #0x1c0
  411708:	bl	4024c0 <posix_spawn_file_actions_addopen@plt>
  41170c:	mov	w19, w0
  411710:	cbz	w0, 41163c <ferror@plt+0xec4c>
  411714:	mov	w26, #0x0                   	// #0
  411718:	b	411658 <ferror@plt+0xec68>
  41171c:	mov	w4, #0x0                   	// #0
  411720:	mov	w3, #0x2                   	// #2
  411724:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  411728:	add	x2, x2, #0x330
  41172c:	mov	w1, w3
  411730:	add	x0, sp, #0x1c0
  411734:	bl	4024c0 <posix_spawn_file_actions_addopen@plt>
  411738:	mov	w19, w0
  41173c:	cbz	w0, 411640 <ferror@plt+0xec50>
  411740:	mov	w26, #0x0                   	// #0
  411744:	b	411658 <ferror@plt+0xec68>
  411748:	add	x1, sp, #0x210
  41174c:	add	x0, sp, #0x70
  411750:	bl	402750 <posix_spawnattr_setsigmask@plt>
  411754:	mov	w19, w0
  411758:	mov	w26, w24
  41175c:	cbnz	w0, 411658 <ferror@plt+0xec68>
  411760:	mov	w1, #0x8                   	// #8
  411764:	add	x0, sp, #0x70
  411768:	bl	402710 <posix_spawnattr_setflags@plt>
  41176c:	mov	w19, w0
  411770:	cbnz	w0, 411658 <ferror@plt+0xec68>
  411774:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  411778:	ldr	x5, [x0, #1088]
  41177c:	mov	x4, x23
  411780:	add	x3, sp, #0x70
  411784:	add	x2, sp, #0x1c0
  411788:	mov	x1, x22
  41178c:	add	x0, sp, #0x6c
  411790:	bl	402850 <posix_spawnp@plt>
  411794:	mov	w19, w0
  411798:	cbnz	w0, 4117c8 <ferror@plt+0xedd8>
  41179c:	add	x0, sp, #0x1c0
  4117a0:	bl	402660 <posix_spawn_file_actions_destroy@plt>
  4117a4:	add	x0, sp, #0x70
  4117a8:	bl	4025c0 <posix_spawnattr_destroy@plt>
  4117ac:	b	411808 <ferror@plt+0xee18>
  4117b0:	bl	411bfc <ferror@plt+0xf20c>
  4117b4:	b	411670 <ferror@plt+0xec80>
  4117b8:	ldr	w0, [sp, #108]
  4117bc:	bl	415d60 <ferror@plt+0x13370>
  4117c0:	bl	411bfc <ferror@plt+0xf20c>
  4117c4:	b	41180c <ferror@plt+0xee1c>
  4117c8:	mov	w26, w24
  4117cc:	b	411658 <ferror@plt+0xec68>
  4117d0:	mov	w26, w24
  4117d4:	b	411658 <ferror@plt+0xec68>
  4117d8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4117dc:	ldr	x5, [x0, #1088]
  4117e0:	mov	x4, x23
  4117e4:	mov	x3, #0x0                   	// #0
  4117e8:	add	x2, sp, #0x1c0
  4117ec:	mov	x1, x22
  4117f0:	add	x0, sp, #0x6c
  4117f4:	bl	402850 <posix_spawnp@plt>
  4117f8:	mov	w19, w0
  4117fc:	cbnz	w0, 4117d0 <ferror@plt+0xede0>
  411800:	add	x0, sp, #0x1c0
  411804:	bl	402660 <posix_spawn_file_actions_destroy@plt>
  411808:	cbnz	w24, 4117b8 <ferror@plt+0xedc8>
  41180c:	ldr	x6, [sp, #664]
  411810:	mov	w5, w25
  411814:	mov	w4, w24
  411818:	mov	w3, w20
  41181c:	mov	w2, w28
  411820:	mov	x1, x21
  411824:	ldr	w0, [sp, #108]
  411828:	bl	415ec4 <ferror@plt+0x134d4>
  41182c:	ldp	x19, x20, [sp, #16]
  411830:	ldp	x21, x22, [sp, #32]
  411834:	ldp	x23, x24, [sp, #48]
  411838:	ldp	x25, x26, [sp, #64]
  41183c:	ldp	x27, x28, [sp, #80]
  411840:	ldp	x29, x30, [sp]
  411844:	add	sp, sp, #0x290
  411848:	ret
  41184c:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411850:	ldrb	w0, [x0, #2904]
  411854:	cbnz	w0, 4118cc <ferror@plt+0xeedc>
  411858:	stp	x29, x30, [sp, #-208]!
  41185c:	mov	x29, sp
  411860:	stp	x19, x20, [sp, #16]
  411864:	stp	x21, x22, [sp, #32]
  411868:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1906c>
  41186c:	add	x19, x19, #0x368
  411870:	add	x21, x19, #0x18
  411874:	mov	w22, #0xffffffff            	// #-1
  411878:	b	41188c <ferror@plt+0xee9c>
  41187c:	str	w22, [x19]
  411880:	add	x19, x19, #0x4
  411884:	cmp	x19, x21
  411888:	b.eq	4118b0 <ferror@plt+0xeec0>  // b.none
  41188c:	add	x2, sp, #0x38
  411890:	mov	x1, #0x0                   	// #0
  411894:	ldr	w0, [x19]
  411898:	bl	4026c0 <sigaction@plt>
  41189c:	tbnz	w0, #31, 411880 <ferror@plt+0xee90>
  4118a0:	ldr	x0, [sp, #56]
  4118a4:	cmp	x0, #0x1
  4118a8:	b.ne	411880 <ferror@plt+0xee90>  // b.any
  4118ac:	b	41187c <ferror@plt+0xee8c>
  4118b0:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4118b4:	mov	w1, #0x1                   	// #1
  4118b8:	strb	w1, [x0, #2904]
  4118bc:	ldp	x19, x20, [sp, #16]
  4118c0:	ldp	x21, x22, [sp, #32]
  4118c4:	ldp	x29, x30, [sp], #208
  4118c8:	ret
  4118cc:	ret
  4118d0:	stp	x29, x30, [sp, #-48]!
  4118d4:	mov	x29, sp
  4118d8:	stp	x19, x20, [sp, #16]
  4118dc:	stp	x21, x22, [sp, #32]
  4118e0:	mov	w20, w0
  4118e4:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4118e8:	add	x0, x0, #0xb58
  4118ec:	ldr	w0, [x0, #4]
  4118f0:	cbz	w0, 411928 <ferror@plt+0xef38>
  4118f4:	sxtw	x1, w0
  4118f8:	adrp	x19, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4118fc:	add	x19, x19, #0xb58
  411900:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1906c>
  411904:	add	x21, x21, #0x368
  411908:	sub	x1, x1, #0x1
  41190c:	str	w1, [x19, #4]
  411910:	ldr	x0, [x21, #32]
  411914:	ldr	x0, [x0, x1, lsl #3]
  411918:	blr	x0
  41191c:	ldr	w2, [x19, #4]
  411920:	sxtw	x1, w2
  411924:	cbnz	w2, 411908 <ferror@plt+0xef18>
  411928:	mov	x19, #0x0                   	// #0
  41192c:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  411930:	add	x22, x22, #0x368
  411934:	adrp	x21, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411938:	add	x21, x21, #0xcf0
  41193c:	b	411978 <ferror@plt+0xef88>
  411940:	add	x1, x2, w0, sxtw #2
  411944:	lsl	x1, x1, #2
  411948:	sub	x1, x1, x2
  41194c:	str	xzr, [x21, x1, lsl #3]
  411950:	sxtw	x2, w0
  411954:	add	x1, x2, w0, sxtw #2
  411958:	lsl	x1, x1, #2
  41195c:	sub	x1, x1, x2
  411960:	mov	x2, #0x0                   	// #0
  411964:	add	x1, x21, x1, lsl #3
  411968:	bl	4026c0 <sigaction@plt>
  41196c:	add	x19, x19, #0x1
  411970:	cmp	x19, #0x6
  411974:	b.eq	4119a0 <ferror@plt+0xefb0>  // b.none
  411978:	ldr	w0, [x22, x19, lsl #2]
  41197c:	tbnz	w0, #31, 41196c <ferror@plt+0xef7c>
  411980:	sxtw	x2, w0
  411984:	add	x1, x2, w0, sxtw #2
  411988:	lsl	x1, x1, #2
  41198c:	sub	x1, x1, x2
  411990:	ldr	x1, [x21, x1, lsl #3]
  411994:	cmp	x1, #0x1
  411998:	b.ne	411950 <ferror@plt+0xef60>  // b.any
  41199c:	b	411940 <ferror@plt+0xef50>
  4119a0:	mov	w0, w20
  4119a4:	bl	402410 <raise@plt>
  4119a8:	ldp	x19, x20, [sp, #16]
  4119ac:	ldp	x21, x22, [sp, #32]
  4119b0:	ldp	x29, x30, [sp], #48
  4119b4:	ret
  4119b8:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4119bc:	ldrb	w0, [x0, #2912]
  4119c0:	cbz	w0, 4119c8 <ferror@plt+0xefd8>
  4119c4:	ret
  4119c8:	stp	x29, x30, [sp, #-48]!
  4119cc:	mov	x29, sp
  4119d0:	stp	x19, x20, [sp, #16]
  4119d4:	str	x21, [sp, #32]
  4119d8:	bl	41184c <ferror@plt+0xee5c>
  4119dc:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4119e0:	add	x0, x0, #0xb58
  4119e4:	add	x0, x0, #0x10
  4119e8:	bl	4025b0 <sigemptyset@plt>
  4119ec:	mov	x19, #0x0                   	// #0
  4119f0:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  4119f4:	add	x20, x20, #0x368
  4119f8:	adrp	x21, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  4119fc:	add	x21, x21, #0xb58
  411a00:	add	x21, x21, #0x10
  411a04:	b	411a14 <ferror@plt+0xf024>
  411a08:	add	x19, x19, #0x1
  411a0c:	cmp	x19, #0x6
  411a10:	b.eq	411a28 <ferror@plt+0xf038>  // b.none
  411a14:	ldr	w1, [x20, x19, lsl #2]
  411a18:	tbnz	w1, #31, 411a08 <ferror@plt+0xf018>
  411a1c:	mov	x0, x21
  411a20:	bl	402940 <sigaddset@plt>
  411a24:	b	411a08 <ferror@plt+0xf018>
  411a28:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411a2c:	mov	w1, #0x1                   	// #1
  411a30:	strb	w1, [x0, #2912]
  411a34:	ldp	x19, x20, [sp, #16]
  411a38:	ldr	x21, [sp, #32]
  411a3c:	ldp	x29, x30, [sp], #48
  411a40:	ret
  411a44:	stp	x29, x30, [sp, #-208]!
  411a48:	mov	x29, sp
  411a4c:	stp	x19, x20, [sp, #16]
  411a50:	mov	x20, x0
  411a54:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411a58:	ldrb	w0, [x0, #3048]
  411a5c:	cbz	w0, 411ab4 <ferror@plt+0xf0c4>
  411a60:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411a64:	add	x0, x0, #0xb58
  411a68:	ldr	w0, [x0, #4]
  411a6c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  411a70:	ldr	x19, [x1, #912]
  411a74:	cmp	x19, w0, sxtw
  411a78:	b.eq	411b44 <ferror@plt+0xf154>  // b.none
  411a7c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  411a80:	add	x0, x0, #0x368
  411a84:	ldr	x2, [x0, #32]
  411a88:	adrp	x1, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411a8c:	add	x1, x1, #0xb58
  411a90:	ldr	w0, [x1, #4]
  411a94:	sxtw	x0, w0
  411a98:	str	x20, [x2, x0, lsl #3]
  411a9c:	ldr	w0, [x1, #4]
  411aa0:	add	w0, w0, #0x1
  411aa4:	str	w0, [x1, #4]
  411aa8:	ldp	x19, x20, [sp, #16]
  411aac:	ldp	x29, x30, [sp], #208
  411ab0:	ret
  411ab4:	stp	x21, x22, [sp, #32]
  411ab8:	bl	41184c <ferror@plt+0xee5c>
  411abc:	adrp	x0, 411000 <ferror@plt+0xe610>
  411ac0:	add	x0, x0, #0x8d0
  411ac4:	str	x0, [sp, #56]
  411ac8:	mov	w0, #0x40000000            	// #1073741824
  411acc:	str	w0, [sp, #192]
  411ad0:	add	x0, sp, #0x40
  411ad4:	bl	4025b0 <sigemptyset@plt>
  411ad8:	mov	x19, #0x0                   	// #0
  411adc:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1906c>
  411ae0:	add	x21, x21, #0x368
  411ae4:	adrp	x22, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411ae8:	add	x22, x22, #0xcf0
  411aec:	b	411b00 <ferror@plt+0xf110>
  411af0:	bl	402720 <abort@plt>
  411af4:	add	x19, x19, #0x1
  411af8:	cmp	x19, #0x6
  411afc:	b.eq	411b30 <ferror@plt+0xf140>  // b.none
  411b00:	ldr	w0, [x21, x19, lsl #2]
  411b04:	tbnz	w0, #31, 411af4 <ferror@plt+0xf104>
  411b08:	cmp	w0, #0x3f
  411b0c:	b.hi	411af0 <ferror@plt+0xf100>  // b.pmore
  411b10:	sxtw	x1, w0
  411b14:	add	x2, x1, w0, sxtw #2
  411b18:	lsl	x2, x2, #2
  411b1c:	sub	x2, x2, x1
  411b20:	add	x2, x22, x2, lsl #3
  411b24:	add	x1, sp, #0x38
  411b28:	bl	4026c0 <sigaction@plt>
  411b2c:	b	411af4 <ferror@plt+0xf104>
  411b30:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411b34:	mov	w1, #0x1                   	// #1
  411b38:	strb	w1, [x0, #3048]
  411b3c:	ldp	x21, x22, [sp, #32]
  411b40:	b	411a60 <ferror@plt+0xf070>
  411b44:	stp	x21, x22, [sp, #32]
  411b48:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  411b4c:	add	x0, x0, #0x368
  411b50:	ldr	x21, [x0, #32]
  411b54:	lsl	x22, x19, #1
  411b58:	tst	x19, #0x7000000000000000
  411b5c:	cset	x0, ne  // ne = any
  411b60:	tst	x19, #0x800000000000000
  411b64:	csinc	w0, w0, wzr, eq  // eq = none
  411b68:	cbnz	w0, 411bc4 <ferror@plt+0xf1d4>
  411b6c:	lsl	x0, x19, #4
  411b70:	bl	41607c <ferror@plt+0x1368c>
  411b74:	cbz	x19, 411b90 <ferror@plt+0xf1a0>
  411b78:	mov	x1, #0x0                   	// #0
  411b7c:	ldr	x2, [x21, x1, lsl #3]
  411b80:	str	x2, [x0, x1, lsl #3]
  411b84:	add	x1, x1, #0x1
  411b88:	cmp	x19, x1
  411b8c:	b.ne	411b7c <ferror@plt+0xf18c>  // b.any
  411b90:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  411b94:	add	x1, x1, #0x368
  411b98:	str	x0, [x1, #32]
  411b9c:	str	x22, [x1, #40]
  411ba0:	adrp	x0, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411ba4:	add	x0, x0, #0xb58
  411ba8:	add	x0, x0, #0x98
  411bac:	cmp	x21, x0
  411bb0:	b.eq	411bc8 <ferror@plt+0xf1d8>  // b.none
  411bb4:	mov	x0, x21
  411bb8:	bl	402810 <free@plt>
  411bbc:	ldp	x21, x22, [sp, #32]
  411bc0:	b	411a7c <ferror@plt+0xf08c>
  411bc4:	bl	4162e8 <ferror@plt+0x138f8>
  411bc8:	ldp	x21, x22, [sp, #32]
  411bcc:	b	411a7c <ferror@plt+0xf08c>
  411bd0:	stp	x29, x30, [sp, #-16]!
  411bd4:	mov	x29, sp
  411bd8:	bl	4119b8 <ferror@plt+0xefc8>
  411bdc:	mov	x2, #0x0                   	// #0
  411be0:	adrp	x1, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411be4:	add	x1, x1, #0xb58
  411be8:	add	x1, x1, #0x10
  411bec:	mov	w0, #0x0                   	// #0
  411bf0:	bl	402430 <sigprocmask@plt>
  411bf4:	ldp	x29, x30, [sp], #16
  411bf8:	ret
  411bfc:	stp	x29, x30, [sp, #-16]!
  411c00:	mov	x29, sp
  411c04:	bl	4119b8 <ferror@plt+0xefc8>
  411c08:	mov	x2, #0x0                   	// #0
  411c0c:	adrp	x1, 438000 <__progname@@GLIBC_2.17+0x7bb8>
  411c10:	add	x1, x1, #0xb58
  411c14:	add	x1, x1, #0x10
  411c18:	mov	w0, #0x1                   	// #1
  411c1c:	bl	402430 <sigprocmask@plt>
  411c20:	ldp	x29, x30, [sp], #16
  411c24:	ret
  411c28:	stp	x29, x30, [sp, #-16]!
  411c2c:	mov	x29, sp
  411c30:	bl	411c44 <ferror@plt+0xf254>
  411c34:	cbz	x0, 411c40 <ferror@plt+0xf250>
  411c38:	ldp	x29, x30, [sp], #16
  411c3c:	ret
  411c40:	bl	4162e8 <ferror@plt+0x138f8>
  411c44:	stp	x29, x30, [sp, #-96]!
  411c48:	mov	x29, sp
  411c4c:	stp	x19, x20, [sp, #16]
  411c50:	stp	x21, x22, [sp, #32]
  411c54:	stp	x23, x24, [sp, #48]
  411c58:	stp	x25, x26, [sp, #64]
  411c5c:	str	x27, [sp, #80]
  411c60:	mov	x24, x0
  411c64:	mov	x19, x1
  411c68:	mov	x22, x2
  411c6c:	bl	416fc0 <_obstack_memory_used@@Base+0x2c>
  411c70:	mov	x20, x0
  411c74:	bl	41701c <_obstack_memory_used@@Base+0x88>
  411c78:	sub	x26, x20, x24
  411c7c:	add	x26, x26, x0
  411c80:	add	x27, x26, #0x1
  411c84:	mov	w21, #0x0                   	// #0
  411c88:	cbz	x0, 411c9c <ferror@plt+0xf2ac>
  411c8c:	add	x20, x20, x0
  411c90:	ldurb	w0, [x20, #-1]
  411c94:	cmp	w0, #0x2f
  411c98:	cset	w21, ne  // ne = any
  411c9c:	sxtw	x21, w21
  411ca0:	ldrb	w25, [x19]
  411ca4:	cmp	w25, #0x2f
  411ca8:	b.eq	411d28 <ferror@plt+0xf338>  // b.none
  411cac:	mov	x0, x19
  411cb0:	bl	4023d0 <strlen@plt>
  411cb4:	mov	x23, x0
  411cb8:	add	x0, x21, x0
  411cbc:	add	x0, x0, x27
  411cc0:	bl	402570 <malloc@plt>
  411cc4:	mov	x20, x0
  411cc8:	cbz	x0, 411d08 <ferror@plt+0xf318>
  411ccc:	mov	x2, x26
  411cd0:	mov	x1, x24
  411cd4:	bl	402840 <mempcpy@plt>
  411cd8:	mov	w1, #0x2f                  	// #47
  411cdc:	strb	w1, [x0]
  411ce0:	add	x0, x0, x21
  411ce4:	cbz	x22, 411cf8 <ferror@plt+0xf308>
  411ce8:	cmp	w25, #0x2f
  411cec:	cset	x1, eq  // eq = none
  411cf0:	sub	x1, x0, x1
  411cf4:	str	x1, [x22]
  411cf8:	mov	x2, x23
  411cfc:	mov	x1, x19
  411d00:	bl	402840 <mempcpy@plt>
  411d04:	strb	wzr, [x0]
  411d08:	mov	x0, x20
  411d0c:	ldp	x19, x20, [sp, #16]
  411d10:	ldp	x21, x22, [sp, #32]
  411d14:	ldp	x23, x24, [sp, #48]
  411d18:	ldp	x25, x26, [sp, #64]
  411d1c:	ldr	x27, [sp, #80]
  411d20:	ldp	x29, x30, [sp], #96
  411d24:	ret
  411d28:	ldrb	w0, [x19, #1]!
  411d2c:	cmp	w0, #0x2f
  411d30:	b.ne	411cac <ferror@plt+0xf2bc>  // b.any
  411d34:	b	411d28 <ferror@plt+0xf338>
  411d38:	stp	x29, x30, [sp, #-48]!
  411d3c:	mov	x29, sp
  411d40:	stp	x19, x20, [sp, #16]
  411d44:	mov	x20, x1
  411d48:	bl	402560 <fopen@plt>
  411d4c:	mov	x19, x0
  411d50:	cbz	x0, 411d60 <ferror@plt+0xf370>
  411d54:	bl	402500 <fileno@plt>
  411d58:	cmp	w0, #0x2
  411d5c:	b.ls	411d70 <ferror@plt+0xf380>  // b.plast
  411d60:	mov	x0, x19
  411d64:	ldp	x19, x20, [sp, #16]
  411d68:	ldp	x29, x30, [sp], #48
  411d6c:	ret
  411d70:	str	x21, [sp, #32]
  411d74:	bl	41566c <ferror@plt+0x12c7c>
  411d78:	mov	w21, w0
  411d7c:	tbnz	w0, #31, 411da8 <ferror@plt+0xf3b8>
  411d80:	mov	x0, x19
  411d84:	bl	4167ec <ferror@plt+0x13dfc>
  411d88:	cbnz	w0, 411dcc <ferror@plt+0xf3dc>
  411d8c:	mov	x1, x20
  411d90:	mov	w0, w21
  411d94:	bl	402620 <fdopen@plt>
  411d98:	mov	x19, x0
  411d9c:	cbz	x0, 411dcc <ferror@plt+0xf3dc>
  411da0:	ldr	x21, [sp, #32]
  411da4:	b	411d60 <ferror@plt+0xf370>
  411da8:	bl	402970 <__errno_location@plt>
  411dac:	mov	x20, x0
  411db0:	ldr	w21, [x0]
  411db4:	mov	x0, x19
  411db8:	bl	4167ec <ferror@plt+0x13dfc>
  411dbc:	str	w21, [x20]
  411dc0:	mov	x19, #0x0                   	// #0
  411dc4:	ldr	x21, [sp, #32]
  411dc8:	b	411d60 <ferror@plt+0xf370>
  411dcc:	bl	402970 <__errno_location@plt>
  411dd0:	mov	x19, x0
  411dd4:	ldr	w20, [x0]
  411dd8:	mov	w0, w21
  411ddc:	bl	4026b0 <close@plt>
  411de0:	str	w20, [x19]
  411de4:	mov	x19, #0x0                   	// #0
  411de8:	ldr	x21, [sp, #32]
  411dec:	b	411d60 <ferror@plt+0xf370>
  411df0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  411df4:	ldr	x0, [x0, #1096]
  411df8:	ret
  411dfc:	ldr	x4, [x1, #8]
  411e00:	ldr	x3, [x0, #48]
  411e04:	udiv	x2, x4, x3
  411e08:	msub	x2, x2, x3, x4
  411e0c:	ldr	x3, [x0, #40]
  411e10:	ldr	x3, [x3, x2, lsl #3]
  411e14:	str	x3, [x1]
  411e18:	ldr	x0, [x0, #40]
  411e1c:	str	x1, [x0, x2, lsl #3]
  411e20:	ret
  411e24:	ldr	x0, [x0, #96]
  411e28:	ret
  411e2c:	ldr	x0, [x1, #32]
  411e30:	ret
  411e34:	ldr	x1, [x1, #16]
  411e38:	add	x0, x0, #0x38
  411e3c:	cmp	x1, x0
  411e40:	csel	x0, x1, xzr, ne  // ne = any
  411e44:	ret
  411e48:	ldr	x1, [x1, #24]
  411e4c:	add	x0, x0, #0x38
  411e50:	cmp	x1, x0
  411e54:	csel	x0, x1, xzr, ne  // ne = any
  411e58:	ret
  411e5c:	ldr	x1, [x0, #72]
  411e60:	ldr	x2, [x0]
  411e64:	str	x2, [x8]
  411e68:	str	x0, [x8, #8]
  411e6c:	str	x1, [x8, #24]
  411e70:	add	x0, x0, #0x38
  411e74:	str	x0, [x8, #32]
  411e78:	ret
  411e7c:	ldr	x3, [x0, #24]
  411e80:	ldr	x4, [x0, #32]
  411e84:	cmp	x3, x4
  411e88:	b.eq	411eac <ferror@plt+0xf4bc>  // b.none
  411e8c:	ldr	x4, [x3, #32]
  411e90:	str	x4, [x1]
  411e94:	cbz	x2, 411e9c <ferror@plt+0xf4ac>
  411e98:	str	x3, [x2]
  411e9c:	ldr	x1, [x3, #16]
  411ea0:	str	x1, [x0, #24]
  411ea4:	mov	w0, #0x1                   	// #1
  411ea8:	ret
  411eac:	mov	w0, #0x0                   	// #0
  411eb0:	b	411ea8 <ferror@plt+0xf4b8>
  411eb4:	ret
  411eb8:	stp	x29, x30, [sp, #-48]!
  411ebc:	mov	x29, sp
  411ec0:	stp	x19, x20, [sp, #16]
  411ec4:	stp	x21, x22, [sp, #32]
  411ec8:	mov	x22, x1
  411ecc:	mov	x21, x2
  411ed0:	ldr	x19, [x0, #72]
  411ed4:	add	x20, x0, #0x38
  411ed8:	cmp	x19, x20
  411edc:	b.eq	411f0c <ferror@plt+0xf51c>  // b.none
  411ee0:	mov	x1, x21
  411ee4:	ldr	x0, [x19, #32]
  411ee8:	blr	x22
  411eec:	cmp	w0, #0x0
  411ef0:	b.gt	411f14 <ferror@plt+0xf524>
  411ef4:	cbz	w0, 411f18 <ferror@plt+0xf528>
  411ef8:	ldr	x19, [x19, #16]
  411efc:	cmp	x19, x20
  411f00:	b.ne	411ee0 <ferror@plt+0xf4f0>  // b.any
  411f04:	mov	x19, #0x0                   	// #0
  411f08:	b	411f18 <ferror@plt+0xf528>
  411f0c:	mov	x19, #0x0                   	// #0
  411f10:	b	411f18 <ferror@plt+0xf528>
  411f14:	mov	x19, #0x0                   	// #0
  411f18:	mov	x0, x19
  411f1c:	ldp	x19, x20, [sp, #16]
  411f20:	ldp	x21, x22, [sp, #32]
  411f24:	ldp	x29, x30, [sp], #48
  411f28:	ret
  411f2c:	stp	x29, x30, [sp, #-64]!
  411f30:	mov	x29, sp
  411f34:	stp	x19, x20, [sp, #16]
  411f38:	stp	x21, x22, [sp, #32]
  411f3c:	ldr	x19, [x0, #72]
  411f40:	add	x21, x0, #0x38
  411f44:	cmp	x19, x21
  411f48:	b.eq	411f90 <ferror@plt+0xf5a0>  // b.none
  411f4c:	str	x23, [sp, #48]
  411f50:	mov	x22, x1
  411f54:	mov	x23, x2
  411f58:	mov	x20, #0x0                   	// #0
  411f5c:	mov	x1, x23
  411f60:	ldr	x0, [x19, #32]
  411f64:	blr	x22
  411f68:	cmp	w0, #0x0
  411f6c:	b.gt	411f98 <ferror@plt+0xf5a8>
  411f70:	cbz	w0, 411fb4 <ferror@plt+0xf5c4>
  411f74:	ldr	x19, [x19, #16]
  411f78:	add	x20, x20, #0x1
  411f7c:	cmp	x19, x21
  411f80:	b.ne	411f5c <ferror@plt+0xf56c>  // b.any
  411f84:	mov	x20, #0xffffffffffffffff    	// #-1
  411f88:	ldr	x23, [sp, #48]
  411f8c:	b	411fa0 <ferror@plt+0xf5b0>
  411f90:	mov	x20, #0xffffffffffffffff    	// #-1
  411f94:	b	411fa0 <ferror@plt+0xf5b0>
  411f98:	mov	x20, #0xffffffffffffffff    	// #-1
  411f9c:	ldr	x23, [sp, #48]
  411fa0:	mov	x0, x20
  411fa4:	ldp	x19, x20, [sp, #16]
  411fa8:	ldp	x21, x22, [sp, #32]
  411fac:	ldp	x29, x30, [sp], #64
  411fb0:	ret
  411fb4:	ldr	x23, [sp, #48]
  411fb8:	b	411fa0 <ferror@plt+0xf5b0>
  411fbc:	stp	x29, x30, [sp, #-64]!
  411fc0:	mov	x29, sp
  411fc4:	stp	x19, x20, [sp, #16]
  411fc8:	stp	x21, x22, [sp, #32]
  411fcc:	str	x23, [sp, #48]
  411fd0:	mov	x22, x1
  411fd4:	ldr	x1, [x0, #96]
  411fd8:	cmp	x1, x3
  411fdc:	ccmp	x2, x3, #0x2, cs  // cs = hs, nlast
  411fe0:	b.hi	412054 <ferror@plt+0xf664>  // b.pmore
  411fe4:	mov	x5, x0
  411fe8:	mov	x20, x2
  411fec:	mov	x23, x4
  411ff0:	mov	x0, #0xffffffffffffffff    	// #-1
  411ff4:	subs	x3, x3, x2
  411ff8:	b.eq	41207c <ferror@plt+0xf68c>  // b.none
  411ffc:	add	x0, x1, x0
  412000:	cmp	x2, x0, lsr #1
  412004:	b.hi	412058 <ferror@plt+0xf668>  // b.pmore
  412008:	ldr	x19, [x5, #72]
  41200c:	cbz	x2, 412020 <ferror@plt+0xf630>
  412010:	mov	x0, x2
  412014:	ldr	x19, [x19, #16]
  412018:	subs	x0, x0, #0x1
  41201c:	b.ne	412014 <ferror@plt+0xf624>  // b.any
  412020:	add	x21, x3, x20
  412024:	mov	x1, x23
  412028:	ldr	x0, [x19, #32]
  41202c:	blr	x22
  412030:	cmp	w0, #0x0
  412034:	b.gt	412078 <ferror@plt+0xf688>
  412038:	cbz	w0, 412090 <ferror@plt+0xf6a0>
  41203c:	ldr	x19, [x19, #16]
  412040:	add	x20, x20, #0x1
  412044:	cmp	x21, x20
  412048:	b.ne	412024 <ferror@plt+0xf634>  // b.any
  41204c:	mov	x0, #0xffffffffffffffff    	// #-1
  412050:	b	41207c <ferror@plt+0xf68c>
  412054:	bl	402720 <abort@plt>
  412058:	mvn	x0, x2
  41205c:	ldr	x19, [x5, #80]
  412060:	adds	x0, x0, x1
  412064:	b.eq	412020 <ferror@plt+0xf630>  // b.none
  412068:	ldr	x19, [x19, #24]
  41206c:	subs	x0, x0, #0x1
  412070:	b.ne	412068 <ferror@plt+0xf678>  // b.any
  412074:	b	412020 <ferror@plt+0xf630>
  412078:	mov	x0, #0xffffffffffffffff    	// #-1
  41207c:	ldp	x19, x20, [sp, #16]
  412080:	ldp	x21, x22, [sp, #32]
  412084:	ldr	x23, [sp, #48]
  412088:	ldp	x29, x30, [sp], #64
  41208c:	ret
  412090:	mov	x0, x20
  412094:	b	41207c <ferror@plt+0xf68c>
  412098:	stp	x29, x30, [sp, #-48]!
  41209c:	mov	x29, sp
  4120a0:	stp	x19, x20, [sp, #16]
  4120a4:	stp	x21, x22, [sp, #32]
  4120a8:	mov	x21, x1
  4120ac:	ldr	x1, [x0, #96]
  4120b0:	cmp	x1, x3
  4120b4:	ccmp	x2, x3, #0x2, cs  // cs = hs, nlast
  4120b8:	b.hi	412118 <ferror@plt+0xf728>  // b.pmore
  4120bc:	mov	x22, x4
  4120c0:	mov	x19, #0x0                   	// #0
  4120c4:	subs	x20, x3, x2
  4120c8:	b.eq	412140 <ferror@plt+0xf750>  // b.none
  4120cc:	sub	x3, x1, #0x1
  4120d0:	cmp	x2, x3, lsr #1
  4120d4:	b.hi	41211c <ferror@plt+0xf72c>  // b.pmore
  4120d8:	ldr	x19, [x0, #72]
  4120dc:	cbz	x2, 4120ec <ferror@plt+0xf6fc>
  4120e0:	ldr	x19, [x19, #16]
  4120e4:	subs	x2, x2, #0x1
  4120e8:	b.ne	4120e0 <ferror@plt+0xf6f0>  // b.any
  4120ec:	mov	x1, x22
  4120f0:	ldr	x0, [x19, #32]
  4120f4:	blr	x21
  4120f8:	cmp	w0, #0x0
  4120fc:	b.gt	41213c <ferror@plt+0xf74c>
  412100:	cbz	w0, 412140 <ferror@plt+0xf750>
  412104:	ldr	x19, [x19, #16]
  412108:	subs	x20, x20, #0x1
  41210c:	b.ne	4120ec <ferror@plt+0xf6fc>  // b.any
  412110:	mov	x19, #0x0                   	// #0
  412114:	b	412140 <ferror@plt+0xf750>
  412118:	bl	402720 <abort@plt>
  41211c:	mvn	x2, x2
  412120:	ldr	x19, [x0, #80]
  412124:	adds	x2, x2, x1
  412128:	b.eq	4120ec <ferror@plt+0xf6fc>  // b.none
  41212c:	ldr	x19, [x19, #24]
  412130:	subs	x2, x2, #0x1
  412134:	b.ne	41212c <ferror@plt+0xf73c>  // b.any
  412138:	b	4120ec <ferror@plt+0xf6fc>
  41213c:	mov	x19, #0x0                   	// #0
  412140:	mov	x0, x19
  412144:	ldp	x19, x20, [sp, #16]
  412148:	ldp	x21, x22, [sp, #32]
  41214c:	ldp	x29, x30, [sp], #48
  412150:	ret
  412154:	cmp	x1, x2
  412158:	b.hi	4121c0 <ferror@plt+0xf7d0>  // b.pmore
  41215c:	ldr	x3, [x0, #96]
  412160:	cmp	x3, x2
  412164:	b.cc	4121c0 <ferror@plt+0xf7d0>  // b.lo, b.ul, b.last
  412168:	ldr	x5, [x0]
  41216c:	sub	x4, x2, x1
  412170:	sub	x2, x3, x2
  412174:	cmp	x4, x2
  412178:	csel	x3, x4, x2, cs  // cs = hs, nlast
  41217c:	cmp	x1, x3
  412180:	b.ls	4121cc <ferror@plt+0xf7dc>  // b.plast
  412184:	add	x1, x0, #0x38
  412188:	cbz	x2, 412198 <ferror@plt+0xf7a8>
  41218c:	ldr	x1, [x1, #24]
  412190:	subs	x2, x2, #0x1
  412194:	b.ne	41218c <ferror@plt+0xf79c>  // b.any
  412198:	cbz	x4, 41222c <ferror@plt+0xf83c>
  41219c:	mov	x3, x1
  4121a0:	ldr	x3, [x3, #24]
  4121a4:	subs	x4, x4, #0x1
  4121a8:	b.ne	4121a0 <ferror@plt+0xf7b0>  // b.any
  4121ac:	str	x5, [x8]
  4121b0:	str	x0, [x8, #8]
  4121b4:	str	x3, [x8, #24]
  4121b8:	str	x1, [x8, #32]
  4121bc:	ret
  4121c0:	stp	x29, x30, [sp, #-16]!
  4121c4:	mov	x29, sp
  4121c8:	bl	402720 <abort@plt>
  4121cc:	cmp	x4, x2
  4121d0:	b.ls	412200 <ferror@plt+0xf810>  // b.plast
  4121d4:	ldr	x3, [x0, #72]
  4121d8:	cbz	x1, 4121e8 <ferror@plt+0xf7f8>
  4121dc:	ldr	x3, [x3, #16]
  4121e0:	subs	x1, x1, #0x1
  4121e4:	b.ne	4121dc <ferror@plt+0xf7ec>  // b.any
  4121e8:	add	x1, x0, #0x38
  4121ec:	cbz	x2, 4121ac <ferror@plt+0xf7bc>
  4121f0:	ldr	x1, [x1, #24]
  4121f4:	subs	x2, x2, #0x1
  4121f8:	b.ne	4121f0 <ferror@plt+0xf800>  // b.any
  4121fc:	b	4121ac <ferror@plt+0xf7bc>
  412200:	ldr	x3, [x0, #72]
  412204:	cbz	x1, 412214 <ferror@plt+0xf824>
  412208:	ldr	x3, [x3, #16]
  41220c:	subs	x1, x1, #0x1
  412210:	b.ne	412208 <ferror@plt+0xf818>  // b.any
  412214:	cbz	x4, 412234 <ferror@plt+0xf844>
  412218:	mov	x1, x3
  41221c:	ldr	x1, [x1, #16]
  412220:	subs	x4, x4, #0x1
  412224:	b.ne	41221c <ferror@plt+0xf82c>  // b.any
  412228:	b	4121ac <ferror@plt+0xf7bc>
  41222c:	mov	x3, x1
  412230:	b	4121ac <ferror@plt+0xf7bc>
  412234:	mov	x1, x3
  412238:	b	4121ac <ferror@plt+0xf7bc>
  41223c:	ldr	x4, [x1, #8]
  412240:	ldr	x3, [x0, #48]
  412244:	udiv	x2, x4, x3
  412248:	msub	x2, x2, x3, x4
  41224c:	ldr	x0, [x0, #40]
  412250:	add	x4, x0, x2, lsl #3
  412254:	ldr	x0, [x0, x2, lsl #3]
  412258:	mov	x3, x1
  41225c:	cmp	x0, x1
  412260:	b.ne	41226c <ferror@plt+0xf87c>  // b.any
  412264:	b	412280 <ferror@plt+0xf890>
  412268:	mov	x0, x2
  41226c:	cbz	x0, 41228c <ferror@plt+0xf89c>
  412270:	ldr	x2, [x0]
  412274:	cmp	x2, x3
  412278:	b.ne	412268 <ferror@plt+0xf878>  // b.any
  41227c:	mov	x4, x0
  412280:	ldr	x0, [x1]
  412284:	str	x0, [x4]
  412288:	ret
  41228c:	stp	x29, x30, [sp, #-16]!
  412290:	mov	x29, sp
  412294:	bl	402720 <abort@plt>
  412298:	stp	x29, x30, [sp, #-48]!
  41229c:	mov	x29, sp
  4122a0:	stp	x21, x22, [sp, #32]
  4122a4:	mov	x21, x0
  4122a8:	ldr	x0, [x1, #32]
  4122ac:	cmp	x0, x2
  4122b0:	b.eq	4122ec <ferror@plt+0xf8fc>  // b.none
  4122b4:	stp	x19, x20, [sp, #16]
  4122b8:	mov	x19, x1
  4122bc:	mov	x20, x2
  4122c0:	ldr	x1, [x21, #16]
  4122c4:	mov	x22, x2
  4122c8:	cbz	x1, 4122d8 <ferror@plt+0xf8e8>
  4122cc:	mov	x0, x2
  4122d0:	blr	x1
  4122d4:	mov	x22, x0
  4122d8:	ldr	x0, [x19, #8]
  4122dc:	cmp	x0, x22
  4122e0:	b.ne	4122fc <ferror@plt+0xf90c>  // b.any
  4122e4:	str	x20, [x19, #32]
  4122e8:	ldp	x19, x20, [sp, #16]
  4122ec:	mov	w0, #0x0                   	// #0
  4122f0:	ldp	x21, x22, [sp, #32]
  4122f4:	ldp	x29, x30, [sp], #48
  4122f8:	ret
  4122fc:	mov	x1, x19
  412300:	mov	x0, x21
  412304:	bl	41223c <ferror@plt+0xf84c>
  412308:	str	x20, [x19, #32]
  41230c:	str	x22, [x19, #8]
  412310:	mov	x1, x19
  412314:	mov	x0, x21
  412318:	bl	411dfc <ferror@plt+0xf40c>
  41231c:	ldp	x19, x20, [sp, #16]
  412320:	b	4122ec <ferror@plt+0xf8fc>
  412324:	stp	x29, x30, [sp, #-80]!
  412328:	mov	x29, sp
  41232c:	stp	x19, x20, [sp, #16]
  412330:	stp	x21, x22, [sp, #32]
  412334:	stp	x23, x24, [sp, #48]
  412338:	stp	x25, x26, [sp, #64]
  41233c:	mov	x22, x0
  412340:	ldr	x0, [x0, #96]
  412344:	cmp	x0, x2
  412348:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
  41234c:	b.hi	4123a0 <ferror@plt+0xf9b0>  // b.pmore
  412350:	mov	x23, x1
  412354:	mov	x24, x2
  412358:	mov	x26, x3
  41235c:	ldr	x1, [x22, #16]
  412360:	mov	x21, x3
  412364:	cbz	x1, 412374 <ferror@plt+0xf984>
  412368:	mov	x0, x3
  41236c:	blr	x1
  412370:	mov	x21, x0
  412374:	ldr	x1, [x22, #48]
  412378:	udiv	x0, x21, x1
  41237c:	msub	x0, x0, x1, x21
  412380:	ldr	x25, [x22, #8]
  412384:	ldrb	w1, [x22, #32]
  412388:	cbnz	w1, 4123e0 <ferror@plt+0xf9f0>
  41238c:	ldr	x1, [x22, #40]
  412390:	ldr	x20, [x1, x0, lsl #3]
  412394:	cbnz	x20, 4123bc <ferror@plt+0xf9cc>
  412398:	mov	x0, #0xffffffffffffffff    	// #-1
  41239c:	b	412470 <ferror@plt+0xfa80>
  4123a0:	bl	402720 <abort@plt>
  4123a4:	ldr	x0, [x20, #32]
  4123a8:	cmp	x0, x26
  4123ac:	cset	w0, eq  // eq = none
  4123b0:	cbnz	w0, 412440 <ferror@plt+0xfa50>
  4123b4:	ldr	x20, [x20]
  4123b8:	cbz	x20, 412398 <ferror@plt+0xf9a8>
  4123bc:	ldr	x0, [x20, #8]
  4123c0:	cmp	x0, x21
  4123c4:	b.ne	4123b4 <ferror@plt+0xf9c4>  // b.any
  4123c8:	cbz	x25, 4123a4 <ferror@plt+0xf9b4>
  4123cc:	ldr	x1, [x20, #32]
  4123d0:	mov	x0, x26
  4123d4:	blr	x25
  4123d8:	and	w0, w0, #0xff
  4123dc:	b	4123b0 <ferror@plt+0xf9c0>
  4123e0:	ldr	x1, [x22, #40]
  4123e4:	ldr	x19, [x1, x0, lsl #3]
  4123e8:	cbz	x19, 4124dc <ferror@plt+0xfaec>
  4123ec:	mov	x20, #0x0                   	// #0
  4123f0:	b	41240c <ferror@plt+0xfa1c>
  4123f4:	ldr	x0, [x19, #32]
  4123f8:	cmp	x0, x26
  4123fc:	cset	w0, eq  // eq = none
  412400:	b	41242c <ferror@plt+0xfa3c>
  412404:	ldr	x19, [x19]
  412408:	cbz	x19, 41243c <ferror@plt+0xfa4c>
  41240c:	ldr	x0, [x19, #8]
  412410:	cmp	x0, x21
  412414:	b.ne	412404 <ferror@plt+0xfa14>  // b.any
  412418:	cbz	x25, 4123f4 <ferror@plt+0xfa04>
  41241c:	ldr	x1, [x19, #32]
  412420:	mov	x0, x26
  412424:	blr	x25
  412428:	and	w0, w0, #0xff
  41242c:	cbz	w0, 412404 <ferror@plt+0xfa14>
  412430:	cbnz	x20, 4124f4 <ferror@plt+0xfb04>
  412434:	mov	x20, x19
  412438:	b	412404 <ferror@plt+0xfa14>
  41243c:	cbz	x20, 4124e4 <ferror@plt+0xfaf4>
  412440:	ldr	x3, [x20, #24]
  412444:	add	x22, x22, #0x38
  412448:	cmp	x3, x22
  41244c:	b.eq	4124d4 <ferror@plt+0xfae4>  // b.none
  412450:	mov	x0, #0x0                   	// #0
  412454:	add	x0, x0, #0x1
  412458:	ldr	x3, [x3, #24]
  41245c:	cmp	x3, x22
  412460:	b.ne	412454 <ferror@plt+0xfa64>  // b.any
  412464:	cmp	x23, x0
  412468:	ccmp	x24, x0, #0x0, ls  // ls = plast
  41246c:	csinv	x0, x0, xzr, hi  // hi = pmore
  412470:	ldp	x19, x20, [sp, #16]
  412474:	ldp	x21, x22, [sp, #32]
  412478:	ldp	x23, x24, [sp, #48]
  41247c:	ldp	x25, x26, [sp, #64]
  412480:	ldp	x29, x30, [sp], #80
  412484:	ret
  412488:	ldr	x0, [x19, #32]
  41248c:	cmp	x0, x26
  412490:	cset	w0, eq  // eq = none
  412494:	cbnz	w0, 4124ec <ferror@plt+0xfafc>
  412498:	ldr	x19, [x19, #16]
  41249c:	add	x23, x23, #0x1
  4124a0:	cmp	x24, x23
  4124a4:	b.eq	4124cc <ferror@plt+0xfadc>  // b.none
  4124a8:	ldr	x0, [x19, #8]
  4124ac:	cmp	x0, x21
  4124b0:	b.ne	412498 <ferror@plt+0xfaa8>  // b.any
  4124b4:	cbz	x25, 412488 <ferror@plt+0xfa98>
  4124b8:	ldr	x1, [x19, #32]
  4124bc:	mov	x0, x26
  4124c0:	blr	x25
  4124c4:	and	w0, w0, #0xff
  4124c8:	b	412494 <ferror@plt+0xfaa4>
  4124cc:	mov	x0, #0xffffffffffffffff    	// #-1
  4124d0:	b	412470 <ferror@plt+0xfa80>
  4124d4:	mov	x0, #0x0                   	// #0
  4124d8:	b	412464 <ferror@plt+0xfa74>
  4124dc:	mov	x0, #0xffffffffffffffff    	// #-1
  4124e0:	b	412470 <ferror@plt+0xfa80>
  4124e4:	mov	x0, #0xffffffffffffffff    	// #-1
  4124e8:	b	412470 <ferror@plt+0xfa80>
  4124ec:	mov	x0, x23
  4124f0:	b	412470 <ferror@plt+0xfa80>
  4124f4:	ldr	x19, [x22, #72]
  4124f8:	mov	x0, x23
  4124fc:	cbz	x23, 41250c <ferror@plt+0xfb1c>
  412500:	ldr	x19, [x19, #16]
  412504:	subs	x0, x0, #0x1
  412508:	b.ne	412500 <ferror@plt+0xfb10>  // b.any
  41250c:	cmp	x23, x24
  412510:	b.cc	4124a8 <ferror@plt+0xfab8>  // b.lo, b.ul, b.last
  412514:	mov	x0, #0xffffffffffffffff    	// #-1
  412518:	b	412470 <ferror@plt+0xfa80>
  41251c:	stp	x29, x30, [sp, #-80]!
  412520:	mov	x29, sp
  412524:	stp	x19, x20, [sp, #16]
  412528:	stp	x21, x22, [sp, #32]
  41252c:	stp	x23, x24, [sp, #48]
  412530:	stp	x25, x26, [sp, #64]
  412534:	ldr	x20, [x0, #96]
  412538:	cmp	x1, x2
  41253c:	ccmp	x20, x2, #0x0, ls  // ls = plast
  412540:	b.cc	4125f4 <ferror@plt+0xfc04>  // b.lo, b.ul, b.last
  412544:	mov	x25, x0
  412548:	mov	x22, x1
  41254c:	mov	x26, x2
  412550:	mov	x24, x3
  412554:	ldr	x1, [x0, #16]
  412558:	mov	x21, x3
  41255c:	cbz	x1, 41256c <ferror@plt+0xfb7c>
  412560:	mov	x0, x3
  412564:	blr	x1
  412568:	mov	x21, x0
  41256c:	ldr	x1, [x25, #48]
  412570:	udiv	x0, x21, x1
  412574:	msub	x0, x0, x1, x21
  412578:	ldr	x23, [x25, #8]
  41257c:	ldrb	w1, [x25, #32]
  412580:	cbnz	w1, 412634 <ferror@plt+0xfc44>
  412584:	ldr	x1, [x25, #40]
  412588:	ldr	x19, [x1, x0, lsl #3]
  41258c:	cbnz	x19, 412610 <ferror@plt+0xfc20>
  412590:	cbz	x22, 4125bc <ferror@plt+0xfbcc>
  412594:	ldr	x0, [x25, #72]
  412598:	cmp	x19, x0
  41259c:	b.eq	412738 <ferror@plt+0xfd48>  // b.none
  4125a0:	subs	x22, x22, #0x1
  4125a4:	b.eq	4125bc <ferror@plt+0xfbcc>  // b.none
  4125a8:	ldr	x0, [x0, #16]
  4125ac:	cmp	x19, x0
  4125b0:	b.eq	412740 <ferror@plt+0xfd50>  // b.none
  4125b4:	subs	x22, x22, #0x1
  4125b8:	b.ne	4125a8 <ferror@plt+0xfbb8>  // b.any
  4125bc:	cmp	x20, x26
  4125c0:	b.ls	4126d4 <ferror@plt+0xfce4>  // b.plast
  4125c4:	mvn	x26, x26
  4125c8:	ldr	x0, [x25, #80]
  4125cc:	cmp	x19, x0
  4125d0:	b.eq	412748 <ferror@plt+0xfd58>  // b.none
  4125d4:	adds	x20, x26, x20
  4125d8:	b.eq	4126d4 <ferror@plt+0xfce4>  // b.none
  4125dc:	ldr	x0, [x0, #24]
  4125e0:	cmp	x19, x0
  4125e4:	b.eq	412750 <ferror@plt+0xfd60>  // b.none
  4125e8:	subs	x20, x20, #0x1
  4125ec:	b.ne	4125dc <ferror@plt+0xfbec>  // b.any
  4125f0:	b	4126d4 <ferror@plt+0xfce4>
  4125f4:	bl	402720 <abort@plt>
  4125f8:	ldr	x0, [x19, #32]
  4125fc:	cmp	x0, x24
  412600:	cset	w0, eq  // eq = none
  412604:	cbnz	w0, 412590 <ferror@plt+0xfba0>
  412608:	ldr	x19, [x19]
  41260c:	cbz	x19, 412590 <ferror@plt+0xfba0>
  412610:	ldr	x4, [x19, #8]
  412614:	cmp	x4, x21
  412618:	b.ne	412608 <ferror@plt+0xfc18>  // b.any
  41261c:	cbz	x23, 4125f8 <ferror@plt+0xfc08>
  412620:	ldr	x1, [x19, #32]
  412624:	mov	x0, x24
  412628:	blr	x23
  41262c:	and	w0, w0, #0xff
  412630:	b	412604 <ferror@plt+0xfc14>
  412634:	ldr	x1, [x25, #40]
  412638:	ldr	x20, [x1, x0, lsl #3]
  41263c:	cbz	x20, 412770 <ferror@plt+0xfd80>
  412640:	mov	x19, #0x0                   	// #0
  412644:	b	412660 <ferror@plt+0xfc70>
  412648:	ldr	x0, [x20, #32]
  41264c:	cmp	x0, x24
  412650:	cset	w0, eq  // eq = none
  412654:	b	412680 <ferror@plt+0xfc90>
  412658:	ldr	x20, [x20]
  41265c:	cbz	x20, 412774 <ferror@plt+0xfd84>
  412660:	ldr	x4, [x20, #8]
  412664:	cmp	x4, x21
  412668:	b.ne	412658 <ferror@plt+0xfc68>  // b.any
  41266c:	cbz	x23, 412648 <ferror@plt+0xfc58>
  412670:	ldr	x1, [x20, #32]
  412674:	mov	x0, x24
  412678:	blr	x23
  41267c:	and	w0, w0, #0xff
  412680:	cbz	w0, 412658 <ferror@plt+0xfc68>
  412684:	cbnz	x19, 4127b4 <ferror@plt+0xfdc4>
  412688:	mov	x19, x20
  41268c:	b	412658 <ferror@plt+0xfc68>
  412690:	ldr	x0, [x19, #32]
  412694:	cmp	x0, x24
  412698:	cset	w0, eq  // eq = none
  41269c:	cbnz	w0, 4126d4 <ferror@plt+0xfce4>
  4126a0:	ldr	x19, [x19, #16]
  4126a4:	subs	x26, x26, #0x1
  4126a8:	b.eq	4126d0 <ferror@plt+0xfce0>  // b.none
  4126ac:	ldr	x0, [x19, #8]
  4126b0:	cmp	x0, x21
  4126b4:	b.ne	4126a0 <ferror@plt+0xfcb0>  // b.any
  4126b8:	cbz	x23, 412690 <ferror@plt+0xfca0>
  4126bc:	ldr	x1, [x19, #32]
  4126c0:	mov	x0, x24
  4126c4:	blr	x23
  4126c8:	and	w0, w0, #0xff
  4126cc:	b	41269c <ferror@plt+0xfcac>
  4126d0:	mov	x19, #0x0                   	// #0
  4126d4:	mov	x0, x19
  4126d8:	ldp	x19, x20, [sp, #16]
  4126dc:	ldp	x21, x22, [sp, #32]
  4126e0:	ldp	x23, x24, [sp, #48]
  4126e4:	ldp	x25, x26, [sp, #64]
  4126e8:	ldp	x29, x30, [sp], #80
  4126ec:	ret
  4126f0:	ldr	x0, [x25, #72]
  4126f4:	add	x1, x25, #0x38
  4126f8:	cmp	x0, x1
  4126fc:	b.eq	412778 <ferror@plt+0xfd88>  // b.none
  412700:	cmp	x0, x19
  412704:	b.eq	412758 <ferror@plt+0xfd68>  // b.none
  412708:	subs	x22, x22, #0x1
  41270c:	b.eq	412778 <ferror@plt+0xfd88>  // b.none
  412710:	ldr	x0, [x0, #16]
  412714:	cmp	x0, x1
  412718:	b.eq	412778 <ferror@plt+0xfd88>  // b.none
  41271c:	cmp	x0, x19
  412720:	b.eq	412760 <ferror@plt+0xfd70>  // b.none
  412724:	subs	x22, x22, #0x1
  412728:	b.ne	412710 <ferror@plt+0xfd20>  // b.any
  41272c:	b	412778 <ferror@plt+0xfd88>
  412730:	mov	x19, #0x0                   	// #0
  412734:	b	4126d4 <ferror@plt+0xfce4>
  412738:	mov	x19, #0x0                   	// #0
  41273c:	b	4126d4 <ferror@plt+0xfce4>
  412740:	mov	x19, #0x0                   	// #0
  412744:	b	4126d4 <ferror@plt+0xfce4>
  412748:	mov	x19, #0x0                   	// #0
  41274c:	b	4126d4 <ferror@plt+0xfce4>
  412750:	mov	x19, #0x0                   	// #0
  412754:	b	4126d4 <ferror@plt+0xfce4>
  412758:	mov	x19, #0x0                   	// #0
  41275c:	b	4126d4 <ferror@plt+0xfce4>
  412760:	mov	x19, #0x0                   	// #0
  412764:	b	4126d4 <ferror@plt+0xfce4>
  412768:	mov	x19, #0x0                   	// #0
  41276c:	b	4126d4 <ferror@plt+0xfce4>
  412770:	mov	x19, x20
  412774:	cbnz	x22, 4126f0 <ferror@plt+0xfd00>
  412778:	ldr	x0, [x25, #96]
  41277c:	cmp	x0, x26
  412780:	b.ls	4126d4 <ferror@plt+0xfce4>  // b.plast
  412784:	mvn	x20, x26
  412788:	ldr	x1, [x25, #80]
  41278c:	cmp	x1, x19
  412790:	b.eq	412768 <ferror@plt+0xfd78>  // b.none
  412794:	adds	x0, x0, x20
  412798:	b.eq	4126d4 <ferror@plt+0xfce4>  // b.none
  41279c:	ldr	x1, [x1, #24]
  4127a0:	cmp	x1, x19
  4127a4:	b.eq	412730 <ferror@plt+0xfd40>  // b.none
  4127a8:	subs	x0, x0, #0x1
  4127ac:	b.ne	41279c <ferror@plt+0xfdac>  // b.any
  4127b0:	b	4126d4 <ferror@plt+0xfce4>
  4127b4:	sub	x26, x26, x22
  4127b8:	ldr	x19, [x25, #72]
  4127bc:	cbz	x22, 4127cc <ferror@plt+0xfddc>
  4127c0:	ldr	x19, [x19, #16]
  4127c4:	subs	x22, x22, #0x1
  4127c8:	b.ne	4127c0 <ferror@plt+0xfdd0>  // b.any
  4127cc:	cbnz	x26, 4126ac <ferror@plt+0xfcbc>
  4127d0:	mov	x19, #0x0                   	// #0
  4127d4:	b	4126d4 <ferror@plt+0xfce4>
  4127d8:	stp	x29, x30, [sp, #-48]!
  4127dc:	mov	x29, sp
  4127e0:	stp	x19, x20, [sp, #16]
  4127e4:	stp	x21, x22, [sp, #32]
  4127e8:	mov	x20, x0
  4127ec:	ldr	x0, [x0, #96]
  4127f0:	cmp	x0, x1
  4127f4:	b.ls	412864 <ferror@plt+0xfe74>  // b.plast
  4127f8:	mov	x21, x2
  4127fc:	sub	x2, x0, #0x1
  412800:	cmp	x1, x2, lsr #1
  412804:	b.hi	412868 <ferror@plt+0xfe78>  // b.pmore
  412808:	ldr	x19, [x20, #72]
  41280c:	cbz	x1, 41281c <ferror@plt+0xfe2c>
  412810:	ldr	x19, [x19, #16]
  412814:	subs	x1, x1, #0x1
  412818:	b.ne	412810 <ferror@plt+0xfe20>  // b.any
  41281c:	ldr	x0, [x19, #32]
  412820:	cmp	x0, x21
  412824:	b.eq	412850 <ferror@plt+0xfe60>  // b.none
  412828:	ldr	x1, [x20, #16]
  41282c:	mov	x22, x21
  412830:	cbz	x1, 412840 <ferror@plt+0xfe50>
  412834:	mov	x0, x21
  412838:	blr	x1
  41283c:	mov	x22, x0
  412840:	ldr	x0, [x19, #8]
  412844:	cmp	x0, x22
  412848:	b.ne	412888 <ferror@plt+0xfe98>  // b.any
  41284c:	str	x21, [x19, #32]
  412850:	mov	x0, x19
  412854:	ldp	x19, x20, [sp, #16]
  412858:	ldp	x21, x22, [sp, #32]
  41285c:	ldp	x29, x30, [sp], #48
  412860:	ret
  412864:	bl	402720 <abort@plt>
  412868:	mvn	x1, x1
  41286c:	ldr	x19, [x20, #80]
  412870:	adds	x1, x1, x0
  412874:	b.eq	41281c <ferror@plt+0xfe2c>  // b.none
  412878:	ldr	x19, [x19, #24]
  41287c:	subs	x1, x1, #0x1
  412880:	b.ne	412878 <ferror@plt+0xfe88>  // b.any
  412884:	b	41281c <ferror@plt+0xfe2c>
  412888:	mov	x1, x19
  41288c:	mov	x0, x20
  412890:	bl	41223c <ferror@plt+0xf84c>
  412894:	str	x21, [x19, #32]
  412898:	str	x22, [x19, #8]
  41289c:	mov	x1, x19
  4128a0:	mov	x0, x20
  4128a4:	bl	411dfc <ferror@plt+0xf40c>
  4128a8:	b	412850 <ferror@plt+0xfe60>
  4128ac:	ldr	x2, [x0, #96]
  4128b0:	cmp	x2, x1
  4128b4:	b.ls	4128e0 <ferror@plt+0xfef0>  // b.plast
  4128b8:	sub	x3, x2, #0x1
  4128bc:	cmp	x1, x3, lsr #1
  4128c0:	b.hi	4128ec <ferror@plt+0xfefc>  // b.pmore
  4128c4:	ldr	x0, [x0, #72]
  4128c8:	cbz	x1, 4128d8 <ferror@plt+0xfee8>
  4128cc:	ldr	x0, [x0, #16]
  4128d0:	subs	x1, x1, #0x1
  4128d4:	b.ne	4128cc <ferror@plt+0xfedc>  // b.any
  4128d8:	ldr	x0, [x0, #32]
  4128dc:	ret
  4128e0:	stp	x29, x30, [sp, #-16]!
  4128e4:	mov	x29, sp
  4128e8:	bl	402720 <abort@plt>
  4128ec:	mvn	x1, x1
  4128f0:	ldr	x0, [x0, #80]
  4128f4:	adds	x1, x1, x2
  4128f8:	b.eq	4128d8 <ferror@plt+0xfee8>  // b.none
  4128fc:	ldr	x0, [x0, #24]
  412900:	subs	x1, x1, #0x1
  412904:	b.ne	4128fc <ferror@plt+0xff0c>  // b.any
  412908:	b	4128d8 <ferror@plt+0xfee8>
  41290c:	stp	x29, x30, [sp, #-64]!
  412910:	mov	x29, sp
  412914:	stp	x19, x20, [sp, #16]
  412918:	stp	x21, x22, [sp, #32]
  41291c:	str	x23, [sp, #48]
  412920:	mov	x23, x0
  412924:	ldr	x21, [x0, #24]
  412928:	ldr	x19, [x0, #72]
  41292c:	add	x22, x0, #0x38
  412930:	cmp	x19, x22
  412934:	b.ne	41296c <ferror@plt+0xff7c>  // b.any
  412938:	ldr	x0, [x23, #40]
  41293c:	bl	402810 <free@plt>
  412940:	mov	x0, x23
  412944:	bl	402810 <free@plt>
  412948:	ldp	x19, x20, [sp, #16]
  41294c:	ldp	x21, x22, [sp, #32]
  412950:	ldr	x23, [sp, #48]
  412954:	ldp	x29, x30, [sp], #64
  412958:	ret
  41295c:	mov	x0, x20
  412960:	bl	402810 <free@plt>
  412964:	cmp	x19, x22
  412968:	b.eq	412938 <ferror@plt+0xff48>  // b.none
  41296c:	mov	x20, x19
  412970:	ldr	x19, [x19, #16]
  412974:	cbz	x21, 41295c <ferror@plt+0xff6c>
  412978:	ldr	x0, [x20, #32]
  41297c:	blr	x21
  412980:	b	41295c <ferror@plt+0xff6c>
  412984:	stp	x29, x30, [sp, #-32]!
  412988:	mov	x29, sp
  41298c:	stp	x19, x20, [sp, #16]
  412990:	mov	x19, x0
  412994:	ldr	x0, [x0, #96]
  412998:	cmp	x0, x1
  41299c:	b.ls	412a10 <ferror@plt+0x10020>  // b.plast
  4129a0:	sub	x2, x0, #0x1
  4129a4:	cmp	x1, x2, lsr #1
  4129a8:	b.hi	412a14 <ferror@plt+0x10024>  // b.pmore
  4129ac:	add	x2, x19, #0x38
  4129b0:	cbz	x1, 4129c0 <ferror@plt+0xffd0>
  4129b4:	ldr	x2, [x2, #16]
  4129b8:	subs	x1, x1, #0x1
  4129bc:	b.ne	4129b4 <ferror@plt+0xffc4>  // b.any
  4129c0:	ldr	x20, [x2, #16]
  4129c4:	ldr	x0, [x20, #16]
  4129c8:	str	x0, [x2, #16]
  4129cc:	str	x2, [x0, #24]
  4129d0:	mov	x1, x20
  4129d4:	mov	x0, x19
  4129d8:	bl	41223c <ferror@plt+0xf84c>
  4129dc:	ldr	x0, [x19, #96]
  4129e0:	sub	x0, x0, #0x1
  4129e4:	str	x0, [x19, #96]
  4129e8:	ldr	x1, [x19, #24]
  4129ec:	cbz	x1, 4129f8 <ferror@plt+0x10008>
  4129f0:	ldr	x0, [x20, #32]
  4129f4:	blr	x1
  4129f8:	mov	x0, x20
  4129fc:	bl	402810 <free@plt>
  412a00:	mov	w0, #0x1                   	// #1
  412a04:	ldp	x19, x20, [sp, #16]
  412a08:	ldp	x29, x30, [sp], #32
  412a0c:	ret
  412a10:	bl	402720 <abort@plt>
  412a14:	mvn	x1, x1
  412a18:	add	x2, x19, #0x38
  412a1c:	adds	x1, x1, x0
  412a20:	b.eq	412a30 <ferror@plt+0x10040>  // b.none
  412a24:	ldr	x2, [x2, #24]
  412a28:	subs	x1, x1, #0x1
  412a2c:	b.ne	412a24 <ferror@plt+0x10034>  // b.any
  412a30:	ldr	x20, [x2, #24]
  412a34:	ldr	x0, [x20, #24]
  412a38:	str	x0, [x2, #24]
  412a3c:	str	x2, [x0, #16]
  412a40:	b	4129d0 <ferror@plt+0xffe0>
  412a44:	stp	x29, x30, [sp, #-32]!
  412a48:	mov	x29, sp
  412a4c:	stp	x19, x20, [sp, #16]
  412a50:	mov	x20, x0
  412a54:	mov	x19, x1
  412a58:	bl	41223c <ferror@plt+0xf84c>
  412a5c:	ldr	x1, [x19, #24]
  412a60:	ldr	x0, [x19, #16]
  412a64:	str	x0, [x1, #16]
  412a68:	str	x1, [x0, #24]
  412a6c:	ldr	x0, [x20, #96]
  412a70:	sub	x0, x0, #0x1
  412a74:	str	x0, [x20, #96]
  412a78:	ldr	x1, [x20, #24]
  412a7c:	cbz	x1, 412a88 <ferror@plt+0x10098>
  412a80:	ldr	x0, [x19, #32]
  412a84:	blr	x1
  412a88:	mov	x0, x19
  412a8c:	bl	402810 <free@plt>
  412a90:	mov	w0, #0x1                   	// #1
  412a94:	ldp	x19, x20, [sp, #16]
  412a98:	ldp	x29, x30, [sp], #32
  412a9c:	ret
  412aa0:	stp	x29, x30, [sp, #-64]!
  412aa4:	mov	x29, sp
  412aa8:	stp	x19, x20, [sp, #16]
  412aac:	stp	x21, x22, [sp, #32]
  412ab0:	str	x23, [sp, #48]
  412ab4:	mov	x23, x0
  412ab8:	mov	x21, x1
  412abc:	mov	x20, x2
  412ac0:	ldr	x19, [x0, #72]
  412ac4:	add	x22, x0, #0x38
  412ac8:	cmp	x19, x22
  412acc:	b.eq	412b10 <ferror@plt+0x10120>  // b.none
  412ad0:	mov	x1, x20
  412ad4:	ldr	x0, [x19, #32]
  412ad8:	blr	x21
  412adc:	cmp	w0, #0x0
  412ae0:	b.gt	412b18 <ferror@plt+0x10128>
  412ae4:	cbz	w0, 412afc <ferror@plt+0x1010c>
  412ae8:	ldr	x19, [x19, #16]
  412aec:	cmp	x19, x22
  412af0:	b.ne	412ad0 <ferror@plt+0x100e0>  // b.any
  412af4:	mov	w0, #0x0                   	// #0
  412af8:	b	412b1c <ferror@plt+0x1012c>
  412afc:	mov	x1, x19
  412b00:	mov	x0, x23
  412b04:	bl	412a44 <ferror@plt+0x10054>
  412b08:	and	w0, w0, #0xff
  412b0c:	b	412b1c <ferror@plt+0x1012c>
  412b10:	mov	w0, #0x0                   	// #0
  412b14:	b	412b1c <ferror@plt+0x1012c>
  412b18:	mov	w0, #0x0                   	// #0
  412b1c:	ldp	x19, x20, [sp, #16]
  412b20:	ldp	x21, x22, [sp, #32]
  412b24:	ldr	x23, [sp, #48]
  412b28:	ldp	x29, x30, [sp], #64
  412b2c:	ret
  412b30:	stp	x29, x30, [sp, #-32]!
  412b34:	mov	x29, sp
  412b38:	str	x19, [sp, #16]
  412b3c:	mov	x19, x0
  412b40:	mov	x3, x1
  412b44:	ldr	x2, [x0, #96]
  412b48:	mov	x1, #0x0                   	// #0
  412b4c:	bl	41251c <ferror@plt+0xfb2c>
  412b50:	cbz	x0, 412b70 <ferror@plt+0x10180>
  412b54:	mov	x1, x0
  412b58:	mov	x0, x19
  412b5c:	bl	412a44 <ferror@plt+0x10054>
  412b60:	and	w0, w0, #0xff
  412b64:	ldr	x19, [sp, #16]
  412b68:	ldp	x29, x30, [sp], #32
  412b6c:	ret
  412b70:	mov	w0, #0x0                   	// #0
  412b74:	b	412b64 <ferror@plt+0x10174>
  412b78:	stp	x29, x30, [sp, #-48]!
  412b7c:	mov	x29, sp
  412b80:	stp	x19, x20, [sp, #16]
  412b84:	mov	x19, x0
  412b88:	ldr	x0, [x0, #96]
  412b8c:	add	x1, x0, x0, lsr #1
  412b90:	cmp	x0, x1
  412b94:	csinv	x1, x1, xzr, ls  // ls = plast
  412b98:	ldr	x20, [x19, #48]
  412b9c:	cmp	x20, x1
  412ba0:	b.cc	412bb0 <ferror@plt+0x101c0>  // b.lo, b.ul, b.last
  412ba4:	ldp	x19, x20, [sp, #16]
  412ba8:	ldp	x29, x30, [sp], #48
  412bac:	ret
  412bb0:	stp	x21, x22, [sp, #32]
  412bb4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  412bb8:	add	x2, x2, #0x358
  412bbc:	add	x0, x2, #0x740
  412bc0:	ldr	x21, [x2]
  412bc4:	cmp	x1, x21
  412bc8:	b.ls	412be0 <ferror@plt+0x101f0>  // b.plast
  412bcc:	add	x2, x2, #0x8
  412bd0:	cmp	x0, x2
  412bd4:	b.ne	412bc0 <ferror@plt+0x101d0>  // b.any
  412bd8:	ldp	x21, x22, [sp, #32]
  412bdc:	b	412ba4 <ferror@plt+0x101b4>
  412be0:	cmp	x20, x21
  412be4:	b.cc	412bf0 <ferror@plt+0x10200>  // b.lo, b.ul, b.last
  412be8:	ldp	x21, x22, [sp, #32]
  412bec:	b	412ba4 <ferror@plt+0x101b4>
  412bf0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  412bf4:	cmp	x21, x0
  412bf8:	b.hi	412c64 <ferror@plt+0x10274>  // b.pmore
  412bfc:	ldr	x22, [x19, #40]
  412c00:	mov	x1, #0x8                   	// #8
  412c04:	mov	x0, x21
  412c08:	bl	402650 <calloc@plt>
  412c0c:	cbz	x0, 412c6c <ferror@plt+0x1027c>
  412c10:	cbnz	x20, 412c54 <ferror@plt+0x10264>
  412c14:	str	x0, [x19, #40]
  412c18:	str	x21, [x19, #48]
  412c1c:	mov	x0, x22
  412c20:	bl	402810 <free@plt>
  412c24:	ldp	x21, x22, [sp, #32]
  412c28:	b	412ba4 <ferror@plt+0x101b4>
  412c2c:	mov	x3, x1
  412c30:	ldr	x1, [x1]
  412c34:	ldr	x4, [x3, #8]
  412c38:	udiv	x2, x4, x21
  412c3c:	msub	x2, x2, x21, x4
  412c40:	ldr	x4, [x0, x2, lsl #3]
  412c44:	str	x4, [x3]
  412c48:	str	x3, [x0, x2, lsl #3]
  412c4c:	cbnz	x1, 412c2c <ferror@plt+0x1023c>
  412c50:	cbz	x20, 412c14 <ferror@plt+0x10224>
  412c54:	sub	x20, x20, #0x1
  412c58:	ldr	x1, [x22, x20, lsl #3]
  412c5c:	cbnz	x1, 412c2c <ferror@plt+0x1023c>
  412c60:	b	412c50 <ferror@plt+0x10260>
  412c64:	ldp	x21, x22, [sp, #32]
  412c68:	b	412ba4 <ferror@plt+0x101b4>
  412c6c:	ldp	x21, x22, [sp, #32]
  412c70:	b	412ba4 <ferror@plt+0x101b4>
  412c74:	stp	x29, x30, [sp, #-64]!
  412c78:	mov	x29, sp
  412c7c:	stp	x19, x20, [sp, #16]
  412c80:	stp	x21, x22, [sp, #32]
  412c84:	str	x23, [sp, #48]
  412c88:	ldr	x20, [x0, #96]
  412c8c:	cmp	x20, x1
  412c90:	b.cc	412d34 <ferror@plt+0x10344>  // b.lo, b.ul, b.last
  412c94:	mov	x22, x0
  412c98:	mov	x19, x1
  412c9c:	mov	x23, x2
  412ca0:	mov	x0, #0x28                  	// #40
  412ca4:	bl	402570 <malloc@plt>
  412ca8:	mov	x21, x0
  412cac:	cbz	x0, 412d1c <ferror@plt+0x1032c>
  412cb0:	str	x23, [x0, #32]
  412cb4:	ldr	x1, [x22, #16]
  412cb8:	mov	x0, x23
  412cbc:	cbz	x1, 412cc4 <ferror@plt+0x102d4>
  412cc0:	blr	x1
  412cc4:	str	x0, [x21, #8]
  412cc8:	mov	x1, x21
  412ccc:	mov	x0, x22
  412cd0:	bl	411dfc <ferror@plt+0xf40c>
  412cd4:	cmp	x19, x20, lsr #1
  412cd8:	b.hi	412d38 <ferror@plt+0x10348>  // b.pmore
  412cdc:	add	x1, x22, #0x38
  412ce0:	cbz	x19, 412cf0 <ferror@plt+0x10300>
  412ce4:	ldr	x1, [x1, #16]
  412ce8:	subs	x19, x19, #0x1
  412cec:	b.ne	412ce4 <ferror@plt+0x102f4>  // b.any
  412cf0:	str	x1, [x21, #24]
  412cf4:	ldr	x0, [x1, #16]
  412cf8:	str	x0, [x21, #16]
  412cfc:	ldr	x0, [x21, #16]
  412d00:	str	x21, [x0, #24]
  412d04:	str	x21, [x1, #16]
  412d08:	ldr	x0, [x22, #96]
  412d0c:	add	x0, x0, #0x1
  412d10:	str	x0, [x22, #96]
  412d14:	mov	x0, x22
  412d18:	bl	412b78 <ferror@plt+0x10188>
  412d1c:	mov	x0, x21
  412d20:	ldp	x19, x20, [sp, #16]
  412d24:	ldp	x21, x22, [sp, #32]
  412d28:	ldr	x23, [sp, #48]
  412d2c:	ldp	x29, x30, [sp], #64
  412d30:	ret
  412d34:	bl	402720 <abort@plt>
  412d38:	add	x1, x22, #0x38
  412d3c:	subs	x19, x20, x19
  412d40:	b.eq	412d50 <ferror@plt+0x10360>  // b.none
  412d44:	ldr	x1, [x1, #24]
  412d48:	subs	x19, x19, #0x1
  412d4c:	b.ne	412d44 <ferror@plt+0x10354>  // b.any
  412d50:	str	x1, [x21, #16]
  412d54:	ldr	x0, [x1, #24]
  412d58:	str	x0, [x21, #24]
  412d5c:	str	x21, [x0, #16]
  412d60:	str	x21, [x1, #24]
  412d64:	b	412d08 <ferror@plt+0x10318>
  412d68:	stp	x29, x30, [sp, #-48]!
  412d6c:	mov	x29, sp
  412d70:	stp	x19, x20, [sp, #16]
  412d74:	stp	x21, x22, [sp, #32]
  412d78:	mov	x21, x0
  412d7c:	mov	x22, x1
  412d80:	mov	x20, x2
  412d84:	mov	x0, #0x28                  	// #40
  412d88:	bl	402570 <malloc@plt>
  412d8c:	mov	x19, x0
  412d90:	cbz	x0, 412de4 <ferror@plt+0x103f4>
  412d94:	str	x20, [x0, #32]
  412d98:	ldr	x2, [x21, #16]
  412d9c:	mov	x0, x20
  412da0:	cbz	x2, 412da8 <ferror@plt+0x103b8>
  412da4:	blr	x2
  412da8:	str	x0, [x19, #8]
  412dac:	mov	x1, x19
  412db0:	mov	x0, x21
  412db4:	bl	411dfc <ferror@plt+0xf40c>
  412db8:	str	x22, [x19, #24]
  412dbc:	ldr	x0, [x22, #16]
  412dc0:	str	x0, [x19, #16]
  412dc4:	ldr	x0, [x19, #16]
  412dc8:	str	x19, [x0, #24]
  412dcc:	str	x19, [x22, #16]
  412dd0:	ldr	x1, [x21, #96]
  412dd4:	add	x1, x1, #0x1
  412dd8:	str	x1, [x21, #96]
  412ddc:	mov	x0, x21
  412de0:	bl	412b78 <ferror@plt+0x10188>
  412de4:	mov	x0, x19
  412de8:	ldp	x19, x20, [sp, #16]
  412dec:	ldp	x21, x22, [sp, #32]
  412df0:	ldp	x29, x30, [sp], #48
  412df4:	ret
  412df8:	stp	x29, x30, [sp, #-48]!
  412dfc:	mov	x29, sp
  412e00:	stp	x19, x20, [sp, #16]
  412e04:	stp	x21, x22, [sp, #32]
  412e08:	mov	x20, x0
  412e0c:	mov	x21, x1
  412e10:	mov	x22, x2
  412e14:	mov	x0, #0x28                  	// #40
  412e18:	bl	402570 <malloc@plt>
  412e1c:	mov	x19, x0
  412e20:	cbz	x0, 412e70 <ferror@plt+0x10480>
  412e24:	str	x22, [x0, #32]
  412e28:	ldr	x1, [x20, #16]
  412e2c:	mov	x0, x22
  412e30:	cbz	x1, 412e38 <ferror@plt+0x10448>
  412e34:	blr	x1
  412e38:	str	x0, [x19, #8]
  412e3c:	mov	x1, x19
  412e40:	mov	x0, x20
  412e44:	bl	411dfc <ferror@plt+0xf40c>
  412e48:	str	x21, [x19, #16]
  412e4c:	ldr	x0, [x21, #24]
  412e50:	str	x0, [x19, #24]
  412e54:	str	x19, [x0, #16]
  412e58:	str	x19, [x21, #24]
  412e5c:	ldr	x0, [x20, #96]
  412e60:	add	x0, x0, #0x1
  412e64:	str	x0, [x20, #96]
  412e68:	mov	x0, x20
  412e6c:	bl	412b78 <ferror@plt+0x10188>
  412e70:	mov	x0, x19
  412e74:	ldp	x19, x20, [sp, #16]
  412e78:	ldp	x21, x22, [sp, #32]
  412e7c:	ldp	x29, x30, [sp], #48
  412e80:	ret
  412e84:	stp	x29, x30, [sp, #-48]!
  412e88:	mov	x29, sp
  412e8c:	stp	x19, x20, [sp, #16]
  412e90:	str	x21, [sp, #32]
  412e94:	mov	x20, x0
  412e98:	mov	x21, x1
  412e9c:	mov	x0, #0x28                  	// #40
  412ea0:	bl	402570 <malloc@plt>
  412ea4:	mov	x19, x0
  412ea8:	cbz	x0, 412efc <ferror@plt+0x1050c>
  412eac:	str	x21, [x0, #32]
  412eb0:	ldr	x1, [x20, #16]
  412eb4:	mov	x0, x21
  412eb8:	cbz	x1, 412ec0 <ferror@plt+0x104d0>
  412ebc:	blr	x1
  412ec0:	str	x0, [x19, #8]
  412ec4:	mov	x1, x19
  412ec8:	mov	x0, x20
  412ecc:	bl	411dfc <ferror@plt+0xf40c>
  412ed0:	add	x0, x20, #0x38
  412ed4:	str	x0, [x19, #16]
  412ed8:	ldr	x0, [x20, #80]
  412edc:	str	x0, [x19, #24]
  412ee0:	str	x19, [x0, #16]
  412ee4:	str	x19, [x20, #80]
  412ee8:	ldr	x0, [x20, #96]
  412eec:	add	x0, x0, #0x1
  412ef0:	str	x0, [x20, #96]
  412ef4:	mov	x0, x20
  412ef8:	bl	412b78 <ferror@plt+0x10188>
  412efc:	mov	x0, x19
  412f00:	ldp	x19, x20, [sp, #16]
  412f04:	ldr	x21, [sp, #32]
  412f08:	ldp	x29, x30, [sp], #48
  412f0c:	ret
  412f10:	stp	x29, x30, [sp, #-64]!
  412f14:	mov	x29, sp
  412f18:	stp	x19, x20, [sp, #16]
  412f1c:	stp	x21, x22, [sp, #32]
  412f20:	str	x23, [sp, #48]
  412f24:	mov	x23, x0
  412f28:	mov	x21, x1
  412f2c:	mov	x20, x2
  412f30:	ldr	x19, [x0, #72]
  412f34:	add	x22, x0, #0x38
  412f38:	cmp	x19, x22
  412f3c:	b.eq	412f5c <ferror@plt+0x1056c>  // b.none
  412f40:	mov	x1, x20
  412f44:	ldr	x0, [x19, #32]
  412f48:	blr	x21
  412f4c:	tbz	w0, #31, 412f7c <ferror@plt+0x1058c>
  412f50:	ldr	x19, [x19, #16]
  412f54:	cmp	x19, x22
  412f58:	b.ne	412f40 <ferror@plt+0x10550>  // b.any
  412f5c:	mov	x1, x20
  412f60:	mov	x0, x23
  412f64:	bl	412e84 <ferror@plt+0x10494>
  412f68:	ldp	x19, x20, [sp, #16]
  412f6c:	ldp	x21, x22, [sp, #32]
  412f70:	ldr	x23, [sp, #48]
  412f74:	ldp	x29, x30, [sp], #64
  412f78:	ret
  412f7c:	mov	x2, x20
  412f80:	mov	x1, x19
  412f84:	mov	x0, x23
  412f88:	bl	412df8 <ferror@plt+0x10408>
  412f8c:	b	412f68 <ferror@plt+0x10578>
  412f90:	stp	x29, x30, [sp, #-48]!
  412f94:	mov	x29, sp
  412f98:	stp	x19, x20, [sp, #16]
  412f9c:	str	x21, [sp, #32]
  412fa0:	mov	x21, x0
  412fa4:	mov	x20, x1
  412fa8:	mov	x0, #0x28                  	// #40
  412fac:	bl	402570 <malloc@plt>
  412fb0:	mov	x19, x0
  412fb4:	cbz	x0, 41300c <ferror@plt+0x1061c>
  412fb8:	str	x20, [x0, #32]
  412fbc:	ldr	x1, [x21, #16]
  412fc0:	mov	x0, x20
  412fc4:	cbz	x1, 412fcc <ferror@plt+0x105dc>
  412fc8:	blr	x1
  412fcc:	str	x0, [x19, #8]
  412fd0:	mov	x1, x19
  412fd4:	mov	x0, x21
  412fd8:	bl	411dfc <ferror@plt+0xf40c>
  412fdc:	add	x0, x21, #0x38
  412fe0:	str	x0, [x19, #24]
  412fe4:	ldr	x0, [x21, #72]
  412fe8:	str	x0, [x19, #16]
  412fec:	ldr	x0, [x19, #16]
  412ff0:	str	x19, [x0, #24]
  412ff4:	str	x19, [x21, #72]
  412ff8:	ldr	x1, [x21, #96]
  412ffc:	add	x1, x1, #0x1
  413000:	str	x1, [x21, #96]
  413004:	mov	x0, x21
  413008:	bl	412b78 <ferror@plt+0x10188>
  41300c:	mov	x0, x19
  413010:	ldp	x19, x20, [sp, #16]
  413014:	ldr	x21, [sp, #32]
  413018:	ldp	x29, x30, [sp], #48
  41301c:	ret
  413020:	stp	x29, x30, [sp, #-64]!
  413024:	mov	x29, sp
  413028:	stp	x19, x20, [sp, #16]
  41302c:	stp	x21, x22, [sp, #32]
  413030:	stp	x23, x24, [sp, #48]
  413034:	mov	x23, x0
  413038:	mov	x22, x1
  41303c:	mov	x21, x2
  413040:	mov	x20, x3
  413044:	and	w24, w4, #0xff
  413048:	mov	x0, #0x68                  	// #104
  41304c:	bl	402570 <malloc@plt>
  413050:	mov	x19, x0
  413054:	cbz	x0, 413098 <ferror@plt+0x106a8>
  413058:	str	x23, [x0]
  41305c:	str	x22, [x0, #8]
  413060:	str	x21, [x0, #16]
  413064:	str	x20, [x0, #24]
  413068:	strb	w24, [x0, #32]
  41306c:	mov	x0, #0xb                   	// #11
  413070:	str	x0, [x19, #48]
  413074:	mov	x1, #0x8                   	// #8
  413078:	bl	402650 <calloc@plt>
  41307c:	mov	x20, x0
  413080:	str	x0, [x19, #40]
  413084:	cbz	x0, 4130b0 <ferror@plt+0x106c0>
  413088:	add	x0, x19, #0x38
  41308c:	str	x0, [x19, #72]
  413090:	str	x0, [x19, #80]
  413094:	str	xzr, [x19, #96]
  413098:	mov	x0, x19
  41309c:	ldp	x19, x20, [sp, #16]
  4130a0:	ldp	x21, x22, [sp, #32]
  4130a4:	ldp	x23, x24, [sp, #48]
  4130a8:	ldp	x29, x30, [sp], #64
  4130ac:	ret
  4130b0:	mov	x0, x19
  4130b4:	bl	402810 <free@plt>
  4130b8:	mov	x19, x20
  4130bc:	b	413098 <ferror@plt+0x106a8>
  4130c0:	stp	x29, x30, [sp, #-80]!
  4130c4:	mov	x29, sp
  4130c8:	stp	x19, x20, [sp, #16]
  4130cc:	stp	x21, x22, [sp, #32]
  4130d0:	stp	x23, x24, [sp, #48]
  4130d4:	stp	x25, x26, [sp, #64]
  4130d8:	mov	x25, x0
  4130dc:	mov	x22, x1
  4130e0:	mov	x20, x2
  4130e4:	mov	x19, x3
  4130e8:	and	w26, w4, #0xff
  4130ec:	mov	x23, x5
  4130f0:	mov	x24, x6
  4130f4:	mov	x0, #0x68                  	// #104
  4130f8:	bl	402570 <malloc@plt>
  4130fc:	mov	x21, x0
  413100:	cbz	x0, 413230 <ferror@plt+0x10840>
  413104:	str	x25, [x0]
  413108:	str	x22, [x0, #8]
  41310c:	str	x20, [x0, #16]
  413110:	str	x19, [x0, #24]
  413114:	strb	w26, [x0, #32]
  413118:	add	x0, x23, x23, lsr #1
  41311c:	mov	x2, #0xffffffffffffffff    	// #-1
  413120:	cmp	x23, x0
  413124:	b.hi	413134 <ferror@plt+0x10744>  // b.pmore
  413128:	cmp	x0, #0xa
  41312c:	mov	x2, #0xa                   	// #10
  413130:	csel	x2, x0, x2, cs  // cs = hs, nlast
  413134:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x306c>
  413138:	add	x1, x1, #0x358
  41313c:	add	x3, x1, #0x740
  413140:	ldr	x0, [x1]
  413144:	cmp	x2, x0
  413148:	b.ls	413168 <ferror@plt+0x10778>  // b.plast
  41314c:	add	x1, x1, #0x8
  413150:	cmp	x1, x3
  413154:	b.ne	413140 <ferror@plt+0x10750>  // b.any
  413158:	mov	x0, x21
  41315c:	bl	402810 <free@plt>
  413160:	mov	x21, #0x0                   	// #0
  413164:	b	413230 <ferror@plt+0x10840>
  413168:	str	x0, [x21, #48]
  41316c:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
  413170:	cmp	x0, x1
  413174:	b.hi	413158 <ferror@plt+0x10768>  // b.pmore
  413178:	mov	x1, #0x8                   	// #8
  41317c:	bl	402650 <calloc@plt>
  413180:	str	x0, [x21, #40]
  413184:	cbz	x0, 413158 <ferror@plt+0x10768>
  413188:	str	x23, [x21, #96]
  41318c:	add	x26, x21, #0x38
  413190:	cbz	x23, 413224 <ferror@plt+0x10834>
  413194:	mov	x19, x26
  413198:	mov	x20, #0x0                   	// #0
  41319c:	mov	x25, #0x28                  	// #40
  4131a0:	b	4131f0 <ferror@plt+0x10800>
  4131a4:	cmp	x26, x22
  4131a8:	b.eq	4131c0 <ferror@plt+0x107d0>  // b.none
  4131ac:	mov	x0, x22
  4131b0:	ldr	x22, [x22, #24]
  4131b4:	bl	402810 <free@plt>
  4131b8:	cmp	x26, x22
  4131bc:	b.ne	4131ac <ferror@plt+0x107bc>  // b.any
  4131c0:	ldr	x0, [x21, #40]
  4131c4:	bl	402810 <free@plt>
  4131c8:	b	413158 <ferror@plt+0x10768>
  4131cc:	str	x1, [x19, #8]
  4131d0:	mov	x1, x19
  4131d4:	mov	x0, x21
  4131d8:	bl	411dfc <ferror@plt+0xf40c>
  4131dc:	str	x22, [x19, #24]
  4131e0:	str	x19, [x22, #16]
  4131e4:	add	x20, x20, #0x1
  4131e8:	cmp	x20, x23
  4131ec:	b.eq	413228 <ferror@plt+0x10838>  // b.none
  4131f0:	mov	x22, x19
  4131f4:	mov	x0, x25
  4131f8:	bl	402570 <malloc@plt>
  4131fc:	mov	x19, x0
  413200:	cbz	x0, 4131a4 <ferror@plt+0x107b4>
  413204:	ldr	x0, [x24, x20, lsl #3]
  413208:	str	x0, [x19, #32]
  41320c:	ldr	x2, [x21, #16]
  413210:	mov	x1, x0
  413214:	cbz	x2, 4131cc <ferror@plt+0x107dc>
  413218:	blr	x2
  41321c:	mov	x1, x0
  413220:	b	4131cc <ferror@plt+0x107dc>
  413224:	mov	x19, x26
  413228:	str	x26, [x19, #16]
  41322c:	str	x19, [x21, #80]
  413230:	mov	x0, x21
  413234:	ldp	x19, x20, [sp, #16]
  413238:	ldp	x21, x22, [sp, #32]
  41323c:	ldp	x23, x24, [sp, #48]
  413240:	ldp	x25, x26, [sp, #64]
  413244:	ldp	x29, x30, [sp], #80
  413248:	ret
  41324c:	adds	x0, x0, #0x10
  413250:	b.cs	4132ac <ferror@plt+0x108bc>  // b.hs, b.nlast
  413254:	stp	x29, x30, [sp, #-16]!
  413258:	mov	x29, sp
  41325c:	bl	402570 <malloc@plt>
  413260:	mov	x2, x0
  413264:	cbz	x0, 4132a4 <ferror@plt+0x108b4>
  413268:	add	x0, x0, #0x10
  41326c:	mov	w1, #0xfb4a                	// #64330
  413270:	movk	w1, #0x1415, lsl #16
  413274:	str	w1, [x2, #12]
  413278:	mov	x1, #0xff00ff00ff00ff00    	// #-71777214294589696
  41327c:	movk	x1, #0xff01
  413280:	umulh	x1, x0, x1
  413284:	and	x3, x1, #0xffffffffffffff00
  413288:	add	x1, x3, x1, lsr #8
  41328c:	sub	x1, x0, x1
  413290:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  413294:	add	x3, x3, #0x2f0
  413298:	ldr	x4, [x3, x1, lsl #3]
  41329c:	str	x4, [x2]
  4132a0:	str	x0, [x3, x1, lsl #3]
  4132a4:	ldp	x29, x30, [sp], #16
  4132a8:	ret
  4132ac:	mov	x0, #0x0                   	// #0
  4132b0:	ret
  4132b4:	cbz	x0, 4132cc <ferror@plt+0x108dc>
  4132b8:	ldur	w2, [x0, #-4]
  4132bc:	mov	w1, #0xfb4a                	// #64330
  4132c0:	movk	w1, #0x1415, lsl #16
  4132c4:	cmp	w2, w1
  4132c8:	b.eq	4132d0 <ferror@plt+0x108e0>  // b.none
  4132cc:	ret
  4132d0:	mov	x1, #0xff00ff00ff00ff00    	// #-71777214294589696
  4132d4:	movk	x1, #0xff01
  4132d8:	umulh	x1, x0, x1
  4132dc:	and	x2, x1, #0xffffffffffffff00
  4132e0:	add	x1, x2, x1, lsr #8
  4132e4:	sub	x2, x0, x1
  4132e8:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4132ec:	add	x1, x1, #0x2f0
  4132f0:	ldr	x1, [x1, x2, lsl #3]
  4132f4:	cbz	x1, 4132cc <ferror@plt+0x108dc>
  4132f8:	cmp	x0, x1
  4132fc:	b.eq	413338 <ferror@plt+0x10948>  // b.none
  413300:	mov	x2, x1
  413304:	ldur	x1, [x1, #-16]
  413308:	cbz	x1, 413348 <ferror@plt+0x10958>
  41330c:	cmp	x0, x1
  413310:	b.ne	413300 <ferror@plt+0x10910>  // b.any
  413314:	sub	x2, x2, #0x10
  413318:	stp	x29, x30, [sp, #-16]!
  41331c:	mov	x29, sp
  413320:	ldur	x1, [x0, #-16]
  413324:	str	x1, [x2]
  413328:	sub	x0, x0, #0x10
  41332c:	bl	402810 <free@plt>
  413330:	ldp	x29, x30, [sp], #16
  413334:	ret
  413338:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  41333c:	add	x1, x1, #0x2f0
  413340:	add	x2, x1, x2, lsl #3
  413344:	b	413318 <ferror@plt+0x10928>
  413348:	ret
  41334c:	and	w4, w2, #0xff
  413350:	cmp	w4, w1, uxtb
  413354:	b.eq	41339c <ferror@plt+0x109ac>  // b.none
  413358:	and	w5, w1, #0xff
  41335c:	cbz	x3, 4133c0 <ferror@plt+0x109d0>
  413360:	add	x7, x0, x3
  413364:	mov	x6, x7
  413368:	tst	x0, #0x7
  41336c:	b.eq	4133c0 <ferror@plt+0x109d0>  // b.none
  413370:	ldrb	w3, [x0]
  413374:	cmp	w3, w5
  413378:	ccmp	w3, w4, #0x4, ne  // ne = any
  41337c:	b.eq	413474 <ferror@plt+0x10a84>  // b.none
  413380:	add	x0, x0, #0x1
  413384:	sub	x3, x6, x0
  413388:	cmp	x0, x7
  41338c:	b.eq	4133b8 <ferror@plt+0x109c8>  // b.none
  413390:	tst	x0, #0x7
  413394:	b.ne	413370 <ferror@plt+0x10980>  // b.any
  413398:	b	4133c0 <ferror@plt+0x109d0>
  41339c:	stp	x29, x30, [sp, #-16]!
  4133a0:	mov	x29, sp
  4133a4:	mov	x2, x3
  4133a8:	and	w1, w1, #0xff
  4133ac:	bl	4028d0 <memchr@plt>
  4133b0:	ldp	x29, x30, [sp], #16
  4133b4:	ret
  4133b8:	mov	x0, x7
  4133bc:	mov	x3, #0x0                   	// #0
  4133c0:	ubfiz	w6, w1, #8, #8
  4133c4:	and	w1, w1, #0xff
  4133c8:	orr	w1, w6, w1
  4133cc:	sxtw	x9, w1
  4133d0:	ubfiz	w7, w2, #8, #8
  4133d4:	and	w2, w2, #0xff
  4133d8:	orr	w2, w7, w2
  4133dc:	sxtw	x8, w2
  4133e0:	sbfiz	x6, x1, #16, #32
  4133e4:	orr	x6, x6, x9
  4133e8:	sbfiz	x7, x2, #16, #32
  4133ec:	orr	x7, x7, x8
  4133f0:	orr	x6, x6, x6, lsl #32
  4133f4:	orr	x7, x7, x7, lsl #32
  4133f8:	cmp	x3, #0x7
  4133fc:	b.ls	413440 <ferror@plt+0x10a50>  // b.plast
  413400:	mov	x8, #0xfefefefefefefefe    	// #-72340172838076674
  413404:	movk	x8, #0xfeff
  413408:	ldr	x1, [x0]
  41340c:	eor	x2, x1, x6
  413410:	eor	x1, x1, x7
  413414:	add	x9, x2, x8
  413418:	bic	x2, x9, x2
  41341c:	add	x9, x1, x8
  413420:	bic	x1, x9, x1
  413424:	orr	x1, x2, x1
  413428:	tst	x1, #0x8080808080808080
  41342c:	b.ne	413440 <ferror@plt+0x10a50>  // b.any
  413430:	add	x0, x0, #0x8
  413434:	sub	x3, x3, #0x8
  413438:	cmp	x3, #0x7
  41343c:	b.hi	413408 <ferror@plt+0x10a18>  // b.pmore
  413440:	add	x2, x0, x3
  413444:	cbz	x3, 41346c <ferror@plt+0x10a7c>
  413448:	ldrb	w1, [x0]
  41344c:	cmp	w1, w4
  413450:	ccmp	w1, w5, #0x4, ne  // ne = any
  413454:	b.eq	413474 <ferror@plt+0x10a84>  // b.none
  413458:	add	x0, x0, #0x1
  41345c:	cmp	x2, x0
  413460:	b.ne	413448 <ferror@plt+0x10a58>  // b.any
  413464:	mov	x0, #0x0                   	// #0
  413468:	ret
  41346c:	mov	x0, #0x0                   	// #0
  413470:	ret
  413474:	ret
  413478:	stp	x29, x30, [sp, #-48]!
  41347c:	mov	x29, sp
  413480:	cbz	x0, 4134f8 <ferror@plt+0x10b08>
  413484:	stp	x19, x20, [sp, #16]
  413488:	mov	x19, x0
  41348c:	mov	w1, #0x2f                  	// #47
  413490:	bl	4026d0 <strrchr@plt>
  413494:	mov	x20, x0
  413498:	cbz	x0, 41352c <ferror@plt+0x10b3c>
  41349c:	str	x21, [sp, #32]
  4134a0:	add	x21, x0, #0x1
  4134a4:	sub	x0, x21, x19
  4134a8:	cmp	x0, #0x6
  4134ac:	b.le	413520 <ferror@plt+0x10b30>
  4134b0:	mov	x2, #0x7                   	// #7
  4134b4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x306c>
  4134b8:	add	x1, x1, #0xbc0
  4134bc:	sub	x0, x20, #0x6
  4134c0:	bl	4025d0 <strncmp@plt>
  4134c4:	cbnz	w0, 413528 <ferror@plt+0x10b38>
  4134c8:	mov	x2, #0x3                   	// #3
  4134cc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x306c>
  4134d0:	add	x1, x1, #0xbc8
  4134d4:	mov	x0, x21
  4134d8:	bl	4025d0 <strncmp@plt>
  4134dc:	mov	x19, x21
  4134e0:	cbnz	w0, 413548 <ferror@plt+0x10b58>
  4134e4:	add	x19, x20, #0x4
  4134e8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4134ec:	str	x19, [x0, #1096]
  4134f0:	ldr	x21, [sp, #32]
  4134f4:	b	41352c <ferror@plt+0x10b3c>
  4134f8:	stp	x19, x20, [sp, #16]
  4134fc:	str	x21, [sp, #32]
  413500:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  413504:	ldr	x3, [x0, #1048]
  413508:	mov	x2, #0x37                  	// #55
  41350c:	mov	x1, #0x1                   	// #1
  413510:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  413514:	add	x0, x0, #0xb88
  413518:	bl	402880 <fwrite@plt>
  41351c:	bl	402720 <abort@plt>
  413520:	ldr	x21, [sp, #32]
  413524:	b	41352c <ferror@plt+0x10b3c>
  413528:	ldr	x21, [sp, #32]
  41352c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  413530:	str	x19, [x0, #2808]
  413534:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  413538:	str	x19, [x0, #1040]
  41353c:	ldp	x19, x20, [sp, #16]
  413540:	ldp	x29, x30, [sp], #48
  413544:	ret
  413548:	ldr	x21, [sp, #32]
  41354c:	b	41352c <ferror@plt+0x10b3c>
  413550:	stp	xzr, xzr, [x8]
  413554:	stp	xzr, xzr, [x8, #16]
  413558:	stp	xzr, xzr, [x8, #32]
  41355c:	str	xzr, [x8, #48]
  413560:	cmp	w0, #0xa
  413564:	b.eq	413570 <ferror@plt+0x10b80>  // b.none
  413568:	str	w0, [x8]
  41356c:	ret
  413570:	stp	x29, x30, [sp, #-16]!
  413574:	mov	x29, sp
  413578:	bl	402720 <abort@plt>
  41357c:	stp	x29, x30, [sp, #-32]!
  413580:	mov	x29, sp
  413584:	stp	x19, x20, [sp, #16]
  413588:	mov	x20, x0
  41358c:	mov	w19, w1
  413590:	bl	4170c0 <_obstack_memory_used@@Base+0x12c>
  413594:	ldrb	w2, [x0]
  413598:	and	w2, w2, #0xffffffdf
  41359c:	cmp	w2, #0x55
  4135a0:	b.ne	413628 <ferror@plt+0x10c38>  // b.any
  4135a4:	ldrb	w1, [x0, #1]
  4135a8:	and	w1, w1, #0xffffffdf
  4135ac:	cmp	w1, #0x54
  4135b0:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  4135b4:	ldrb	w1, [x0, #2]
  4135b8:	and	w1, w1, #0xffffffdf
  4135bc:	cmp	w1, #0x46
  4135c0:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  4135c4:	ldrb	w1, [x0, #3]
  4135c8:	cmp	w1, #0x2d
  4135cc:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  4135d0:	ldrb	w1, [x0, #4]
  4135d4:	cmp	w1, #0x38
  4135d8:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  4135dc:	ldrb	w0, [x0, #5]
  4135e0:	cbz	w0, 413608 <ferror@plt+0x10c18>
  4135e4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4135e8:	add	x1, x0, #0x8c8
  4135ec:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  4135f0:	add	x0, x0, #0xbd8
  4135f4:	cmp	w19, #0x9
  4135f8:	csel	x0, x0, x1, eq  // eq = none
  4135fc:	ldp	x19, x20, [sp, #16]
  413600:	ldp	x29, x30, [sp], #32
  413604:	ret
  413608:	ldrb	w2, [x20]
  41360c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  413610:	add	x1, x0, #0xbe0
  413614:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  413618:	add	x0, x0, #0xbf0
  41361c:	cmp	w2, #0x60
  413620:	csel	x0, x0, x1, eq  // eq = none
  413624:	b	4135fc <ferror@plt+0x10c0c>
  413628:	cmp	w2, #0x47
  41362c:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  413630:	ldrb	w1, [x0, #1]
  413634:	and	w1, w1, #0xffffffdf
  413638:	cmp	w1, #0x42
  41363c:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  413640:	ldrb	w1, [x0, #2]
  413644:	cmp	w1, #0x31
  413648:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  41364c:	ldrb	w1, [x0, #3]
  413650:	cmp	w1, #0x38
  413654:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  413658:	ldrb	w1, [x0, #4]
  41365c:	cmp	w1, #0x30
  413660:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  413664:	ldrb	w1, [x0, #5]
  413668:	cmp	w1, #0x33
  41366c:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  413670:	ldrb	w1, [x0, #6]
  413674:	cmp	w1, #0x30
  413678:	b.ne	4135e4 <ferror@plt+0x10bf4>  // b.any
  41367c:	ldrb	w0, [x0, #7]
  413680:	cbnz	w0, 4135e4 <ferror@plt+0x10bf4>
  413684:	ldrb	w2, [x20]
  413688:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  41368c:	add	x1, x0, #0xbd0
  413690:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  413694:	add	x0, x0, #0xbe8
  413698:	cmp	w2, #0x60
  41369c:	csel	x0, x0, x1, eq  // eq = none
  4136a0:	b	4135fc <ferror@plt+0x10c0c>
  4136a4:	sub	sp, sp, #0xf0
  4136a8:	stp	x29, x30, [sp, #16]
  4136ac:	add	x29, sp, #0x10
  4136b0:	stp	x19, x20, [sp, #32]
  4136b4:	stp	x21, x22, [sp, #48]
  4136b8:	stp	x23, x24, [sp, #64]
  4136bc:	stp	x25, x26, [sp, #80]
  4136c0:	stp	x27, x28, [sp, #96]
  4136c4:	mov	x28, x0
  4136c8:	mov	x26, x1
  4136cc:	str	x2, [sp, #136]
  4136d0:	mov	x24, x3
  4136d4:	mov	w25, w4
  4136d8:	mov	w19, w5
  4136dc:	str	w5, [sp, #184]
  4136e0:	str	x6, [sp, #152]
  4136e4:	str	x7, [sp, #200]
  4136e8:	bl	402830 <__ctype_get_mb_cur_max@plt>
  4136ec:	str	x0, [sp, #168]
  4136f0:	mov	x0, x19
  4136f4:	ubfx	x0, x0, #1, #1
  4136f8:	str	x0, [sp, #112]
  4136fc:	mov	w0, #0x1                   	// #1
  413700:	str	w0, [sp, #128]
  413704:	str	wzr, [sp, #180]
  413708:	str	wzr, [sp, #124]
  41370c:	str	wzr, [sp, #132]
  413710:	str	xzr, [sp, #144]
  413714:	str	xzr, [sp, #160]
  413718:	str	xzr, [sp, #192]
  41371c:	mov	w23, w25
  413720:	mov	x25, x24
  413724:	cmp	w23, #0x4
  413728:	b.eq	413898 <ferror@plt+0x10ea8>  // b.none
  41372c:	b.ls	41377c <ferror@plt+0x10d8c>  // b.plast
  413730:	cmp	w23, #0x7
  413734:	b.eq	413908 <ferror@plt+0x10f18>  // b.none
  413738:	b.ls	4137c8 <ferror@plt+0x10dd8>  // b.plast
  41373c:	sub	w0, w23, #0x8
  413740:	cmp	w0, #0x2
  413744:	b.hi	4138f8 <ferror@plt+0x10f08>  // b.pmore
  413748:	cmp	w23, #0xa
  41374c:	b.ne	41383c <ferror@plt+0x10e4c>  // b.any
  413750:	mov	x27, #0x0                   	// #0
  413754:	ldr	w0, [sp, #112]
  413758:	cbz	w0, 413868 <ferror@plt+0x10e78>
  41375c:	ldr	x0, [sp, #240]
  413760:	bl	4023d0 <strlen@plt>
  413764:	str	x0, [sp, #144]
  413768:	ldr	x0, [sp, #240]
  41376c:	str	x0, [sp, #160]
  413770:	mov	w0, #0x1                   	// #1
  413774:	str	w0, [sp, #132]
  413778:	b	413800 <ferror@plt+0x10e10>
  41377c:	cmp	w23, #0x2
  413780:	b.eq	4138d4 <ferror@plt+0x10ee4>  // b.none
  413784:	b.ls	413794 <ferror@plt+0x10da4>  // b.plast
  413788:	mov	w0, #0x1                   	// #1
  41378c:	str	w0, [sp, #132]
  413790:	b	4137a0 <ferror@plt+0x10db0>
  413794:	cbz	w23, 4138fc <ferror@plt+0x10f0c>
  413798:	cmp	w23, #0x1
  41379c:	b.ne	4138f8 <ferror@plt+0x10f08>  // b.any
  4137a0:	mov	w0, #0x1                   	// #1
  4137a4:	str	w0, [sp, #112]
  4137a8:	mov	x0, #0x1                   	// #1
  4137ac:	str	x0, [sp, #144]
  4137b0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4137b4:	add	x0, x0, #0x8c8
  4137b8:	str	x0, [sp, #160]
  4137bc:	mov	x27, #0x0                   	// #0
  4137c0:	mov	w23, #0x2                   	// #2
  4137c4:	b	413800 <ferror@plt+0x10e10>
  4137c8:	cmp	w23, #0x5
  4137cc:	b.eq	413808 <ferror@plt+0x10e18>  // b.none
  4137d0:	cmp	w23, #0x6
  4137d4:	b.ne	4138f8 <ferror@plt+0x10f08>  // b.any
  4137d8:	mov	w0, #0x1                   	// #1
  4137dc:	str	w0, [sp, #112]
  4137e0:	str	w0, [sp, #132]
  4137e4:	mov	x0, #0x1                   	// #1
  4137e8:	str	x0, [sp, #144]
  4137ec:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  4137f0:	add	x0, x0, #0xbd8
  4137f4:	str	x0, [sp, #160]
  4137f8:	mov	x27, #0x0                   	// #0
  4137fc:	mov	w23, #0x5                   	// #5
  413800:	mov	x24, #0x0                   	// #0
  413804:	b	4142f4 <ferror@plt+0x11904>
  413808:	ldr	w0, [sp, #112]
  41380c:	cbnz	w0, 41391c <ferror@plt+0x10f2c>
  413810:	cbz	x26, 413940 <ferror@plt+0x10f50>
  413814:	mov	w0, #0x22                  	// #34
  413818:	strb	w0, [x28]
  41381c:	mov	w0, #0x1                   	// #1
  413820:	str	w0, [sp, #132]
  413824:	mov	x27, #0x1                   	// #1
  413828:	str	x27, [sp, #144]
  41382c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  413830:	add	x0, x0, #0xbd8
  413834:	str	x0, [sp, #160]
  413838:	b	413800 <ferror@plt+0x10e10>
  41383c:	mov	w1, w23
  413840:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x206c>
  413844:	add	x0, x0, #0x9a0
  413848:	bl	41357c <ferror@plt+0x10b8c>
  41384c:	str	x0, [sp, #200]
  413850:	mov	w1, w23
  413854:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  413858:	add	x0, x0, #0x8c8
  41385c:	bl	41357c <ferror@plt+0x10b8c>
  413860:	str	x0, [sp, #240]
  413864:	b	413750 <ferror@plt+0x10d60>
  413868:	ldr	x1, [sp, #200]
  41386c:	ldrb	w0, [x1]
  413870:	cbnz	w0, 413888 <ferror@plt+0x10e98>
  413874:	mov	x27, #0x0                   	// #0
  413878:	b	41375c <ferror@plt+0x10d6c>
  41387c:	add	x27, x27, #0x1
  413880:	ldrb	w0, [x1, x27]
  413884:	cbz	w0, 41375c <ferror@plt+0x10d6c>
  413888:	cmp	x26, x27
  41388c:	b.ls	41387c <ferror@plt+0x10e8c>  // b.plast
  413890:	strb	w0, [x28, x27]
  413894:	b	41387c <ferror@plt+0x10e8c>
  413898:	ldr	w0, [sp, #112]
  41389c:	cbnz	w0, 4137a0 <ferror@plt+0x10db0>
  4138a0:	mov	w0, #0x1                   	// #1
  4138a4:	str	w0, [sp, #132]
  4138a8:	cbz	x26, 413960 <ferror@plt+0x10f70>
  4138ac:	mov	w0, #0x27                  	// #39
  4138b0:	strb	w0, [x28]
  4138b4:	str	wzr, [sp, #112]
  4138b8:	mov	x27, #0x1                   	// #1
  4138bc:	str	x27, [sp, #144]
  4138c0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4138c4:	add	x0, x0, #0x8c8
  4138c8:	str	x0, [sp, #160]
  4138cc:	mov	w23, #0x2                   	// #2
  4138d0:	b	413800 <ferror@plt+0x10e10>
  4138d4:	ldr	w0, [sp, #112]
  4138d8:	cbz	w0, 4138a8 <ferror@plt+0x10eb8>
  4138dc:	mov	x0, #0x1                   	// #1
  4138e0:	str	x0, [sp, #144]
  4138e4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  4138e8:	add	x0, x0, #0x8c8
  4138ec:	str	x0, [sp, #160]
  4138f0:	mov	x27, #0x0                   	// #0
  4138f4:	b	413800 <ferror@plt+0x10e10>
  4138f8:	bl	402720 <abort@plt>
  4138fc:	str	wzr, [sp, #112]
  413900:	mov	x27, #0x0                   	// #0
  413904:	b	413800 <ferror@plt+0x10e10>
  413908:	str	wzr, [sp, #112]
  41390c:	mov	w0, #0x1                   	// #1
  413910:	str	w0, [sp, #132]
  413914:	mov	x27, #0x0                   	// #0
  413918:	b	413800 <ferror@plt+0x10e10>
  41391c:	ldr	w0, [sp, #112]
  413920:	str	w0, [sp, #132]
  413924:	mov	x0, #0x1                   	// #1
  413928:	str	x0, [sp, #144]
  41392c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  413930:	add	x0, x0, #0xbd8
  413934:	str	x0, [sp, #160]
  413938:	mov	x27, #0x0                   	// #0
  41393c:	b	413800 <ferror@plt+0x10e10>
  413940:	mov	w0, #0x1                   	// #1
  413944:	str	w0, [sp, #132]
  413948:	mov	x27, #0x1                   	// #1
  41394c:	str	x27, [sp, #144]
  413950:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  413954:	add	x0, x0, #0xbd8
  413958:	str	x0, [sp, #160]
  41395c:	b	413800 <ferror@plt+0x10e10>
  413960:	str	wzr, [sp, #112]
  413964:	mov	x27, #0x1                   	// #1
  413968:	str	x27, [sp, #144]
  41396c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x106c>
  413970:	add	x0, x0, #0x8c8
  413974:	str	x0, [sp, #160]
  413978:	mov	w23, #0x2                   	// #2
  41397c:	b	413800 <ferror@plt+0x10e10>
  413980:	ldr	x0, [sp, #144]
  413984:	add	x20, x24, x0
  413988:	cmp	x0, #0x1
  41398c:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  413990:	b.ne	4139a0 <ferror@plt+0x10fb0>  // b.any
  413994:	ldr	x0, [sp, #136]
  413998:	bl	4023d0 <strlen@plt>
  41399c:	mov	x25, x0
  4139a0:	cmp	x20, x25
  4139a4:	b.hi	4145d0 <ferror@plt+0x11be0>  // b.pmore
  4139a8:	ldr	x0, [sp, #136]
  4139ac:	add	x20, x0, x24
  4139b0:	ldr	x2, [sp, #144]
  4139b4:	ldr	x1, [sp, #160]
  4139b8:	mov	x0, x20
  4139bc:	bl	402780 <memcmp@plt>
  4139c0:	cbnz	w0, 4145d0 <ferror@plt+0x11be0>
  4139c4:	ldr	w0, [sp, #112]
  4139c8:	cbnz	w0, 4139f0 <ferror@plt+0x11000>
  4139cc:	ldrb	w20, [x20]
  4139d0:	cmp	w20, #0x7e
  4139d4:	b.hi	413ebc <ferror@plt+0x114cc>  // b.pmore
  4139d8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  4139dc:	add	x0, x0, #0xc60
  4139e0:	ldrh	w0, [x0, w20, uxtw #1]
  4139e4:	adr	x1, 4139f0 <ferror@plt+0x11000>
  4139e8:	add	x0, x1, w0, sxth #2
  4139ec:	br	x0
  4139f0:	mov	x24, x25
  4139f4:	mov	w25, w23
  4139f8:	b	414558 <ferror@plt+0x11b68>
  4139fc:	ldr	w0, [sp, #132]
  413a00:	cbnz	w0, 413a1c <ferror@plt+0x1102c>
  413a04:	ldr	x0, [sp, #184]
  413a08:	tbnz	w0, #0, 4142f0 <ferror@plt+0x11900>
  413a0c:	ldr	w0, [sp, #132]
  413a10:	mov	w22, w0
  413a14:	mov	w19, w0
  413a18:	b	414230 <ferror@plt+0x11840>
  413a1c:	ldr	w0, [sp, #112]
  413a20:	cbnz	w0, 41450c <ferror@plt+0x11b1c>
  413a24:	mov	w22, w0
  413a28:	cmp	w23, #0x2
  413a2c:	cset	w1, eq  // eq = none
  413a30:	ldr	w0, [sp, #124]
  413a34:	eor	w0, w0, #0x1
  413a38:	ands	w0, w1, w0
  413a3c:	b.eq	413aa0 <ferror@plt+0x110b0>  // b.none
  413a40:	cmp	x26, x27
  413a44:	b.ls	413a50 <ferror@plt+0x11060>  // b.plast
  413a48:	mov	w1, #0x27                  	// #39
  413a4c:	strb	w1, [x28, x27]
  413a50:	add	x1, x27, #0x1
  413a54:	cmp	x26, x1
  413a58:	b.ls	413a64 <ferror@plt+0x11074>  // b.plast
  413a5c:	mov	w2, #0x24                  	// #36
  413a60:	strb	w2, [x28, x1]
  413a64:	add	x1, x27, #0x2
  413a68:	cmp	x26, x1
  413a6c:	b.ls	413a78 <ferror@plt+0x11088>  // b.plast
  413a70:	mov	w2, #0x27                  	// #39
  413a74:	strb	w2, [x28, x1]
  413a78:	add	x1, x27, #0x3
  413a7c:	cmp	x26, x1
  413a80:	b.ls	4145bc <ferror@plt+0x11bcc>  // b.plast
  413a84:	mov	w2, #0x5c                  	// #92
  413a88:	strb	w2, [x28, x1]
  413a8c:	add	x27, x27, #0x4
  413a90:	str	w0, [sp, #124]
  413a94:	mov	w19, #0x0                   	// #0
  413a98:	mov	w20, #0x30                  	// #48
  413a9c:	b	414258 <ferror@plt+0x11868>
  413aa0:	cmp	x26, x27
  413aa4:	b.hi	413ac4 <ferror@plt+0x110d4>  // b.pmore
  413aa8:	add	x2, x27, #0x1
  413aac:	cbnz	w21, 413ad4 <ferror@plt+0x110e4>
  413ab0:	mov	w0, w19
  413ab4:	mov	w19, w21
  413ab8:	mov	x27, x2
  413abc:	mov	w20, #0x30                  	// #48
  413ac0:	b	414230 <ferror@plt+0x11840>
  413ac4:	mov	w1, #0x5c                  	// #92
  413ac8:	strb	w1, [x28, x27]
  413acc:	add	x2, x27, #0x1
  413ad0:	cbz	w21, 413b10 <ferror@plt+0x11120>
  413ad4:	add	x1, x24, #0x1
  413ad8:	cmp	x1, x25
  413adc:	b.cs	413af8 <ferror@plt+0x11108>  // b.hs, b.nlast
  413ae0:	ldr	x3, [sp, #136]
  413ae4:	ldrb	w1, [x3, x1]
  413ae8:	sub	w1, w1, #0x30
  413aec:	and	w1, w1, #0xff
  413af0:	cmp	w1, #0x9
  413af4:	b.ls	413b24 <ferror@plt+0x11134>  // b.plast
  413af8:	mov	w1, w0
  413afc:	mov	w0, w19
  413b00:	mov	w19, w1
  413b04:	mov	x27, x2
  413b08:	mov	w20, #0x30                  	// #48
  413b0c:	b	414240 <ferror@plt+0x11850>
  413b10:	mov	w0, w19
  413b14:	mov	w19, w21
  413b18:	mov	x27, x2
  413b1c:	mov	w20, #0x30                  	// #48
  413b20:	b	414258 <ferror@plt+0x11868>
  413b24:	cmp	x26, x2
  413b28:	b.ls	413b34 <ferror@plt+0x11144>  // b.plast
  413b2c:	mov	w1, #0x30                  	// #48
  413b30:	strb	w1, [x28, x2]
  413b34:	add	x1, x27, #0x2
  413b38:	cmp	x26, x1
  413b3c:	b.ls	413b48 <ferror@plt+0x11158>  // b.plast
  413b40:	mov	w2, #0x30                  	// #48
  413b44:	strb	w2, [x28, x1]
  413b48:	add	x2, x27, #0x3
  413b4c:	b	413af8 <ferror@plt+0x11108>
  413b50:	mov	w22, #0x0                   	// #0
  413b54:	cmp	w23, #0x2
  413b58:	b.eq	413b74 <ferror@plt+0x11184>  // b.none
  413b5c:	cmp	w23, #0x5
  413b60:	b.eq	413b88 <ferror@plt+0x11198>  // b.none
  413b64:	mov	w19, #0x0                   	// #0
  413b68:	mov	w0, #0x0                   	// #0
  413b6c:	mov	w20, #0x3f                  	// #63
  413b70:	b	414230 <ferror@plt+0x11840>
  413b74:	ldr	w0, [sp, #112]
  413b78:	cbnz	w0, 414518 <ferror@plt+0x11b28>
  413b7c:	mov	w19, w0
  413b80:	mov	w20, #0x3f                  	// #63
  413b84:	b	413ea4 <ferror@plt+0x114b4>
  413b88:	ldr	x0, [sp, #184]
  413b8c:	tbz	w0, #2, 414358 <ferror@plt+0x11968>
  413b90:	add	x4, x24, #0x2
  413b94:	cmp	x4, x25
  413b98:	b.cs	414368 <ferror@plt+0x11978>  // b.hs, b.nlast
  413b9c:	ldr	x0, [sp, #136]
  413ba0:	add	x0, x0, x24
  413ba4:	ldrb	w20, [x0, #1]
  413ba8:	cmp	w20, #0x3f
  413bac:	b.eq	413bc0 <ferror@plt+0x111d0>  // b.none
  413bb0:	mov	w19, #0x0                   	// #0
  413bb4:	mov	w0, #0x0                   	// #0
  413bb8:	mov	w20, #0x3f                  	// #63
  413bbc:	b	414230 <ferror@plt+0x11840>
  413bc0:	ldr	x0, [sp, #136]
  413bc4:	ldrb	w3, [x0, x4]
  413bc8:	cmp	w3, #0x3e
  413bcc:	b.hi	414378 <ferror@plt+0x11988>  // b.pmore
  413bd0:	mov	x1, #0x1                   	// #1
  413bd4:	lsl	x1, x1, x3
  413bd8:	mov	w19, #0x0                   	// #0
  413bdc:	mov	w0, #0x0                   	// #0
  413be0:	mov	x2, #0xa38200000000        	// #179778741075968
  413be4:	movk	x2, #0x7000, lsl #48
  413be8:	tst	x1, x2
  413bec:	b.eq	414230 <ferror@plt+0x11840>  // b.none
  413bf0:	ldr	w0, [sp, #112]
  413bf4:	cbnz	w0, 4145b0 <ferror@plt+0x11bc0>
  413bf8:	cmp	x26, x27
  413bfc:	b.ls	413c08 <ferror@plt+0x11218>  // b.plast
  413c00:	mov	w0, #0x3f                  	// #63
  413c04:	strb	w0, [x28, x27]
  413c08:	add	x0, x27, #0x1
  413c0c:	cmp	x26, x0
  413c10:	b.ls	413c1c <ferror@plt+0x1122c>  // b.plast
  413c14:	mov	w1, #0x22                  	// #34
  413c18:	strb	w1, [x28, x0]
  413c1c:	add	x0, x27, #0x2
  413c20:	cmp	x26, x0
  413c24:	b.ls	413c30 <ferror@plt+0x11240>  // b.plast
  413c28:	mov	w1, #0x22                  	// #34
  413c2c:	strb	w1, [x28, x0]
  413c30:	add	x0, x27, #0x3
  413c34:	cmp	x26, x0
  413c38:	b.ls	413c44 <ferror@plt+0x11254>  // b.plast
  413c3c:	mov	w1, #0x3f                  	// #63
  413c40:	strb	w1, [x28, x0]
  413c44:	add	x27, x27, #0x4
  413c48:	ldr	w0, [sp, #112]
  413c4c:	mov	w19, w0
  413c50:	mov	w20, w3
  413c54:	mov	x24, x4
  413c58:	b	414230 <ferror@plt+0x11840>
  413c5c:	mov	w22, #0x0                   	// #0
  413c60:	mov	w20, #0x8                   	// #8
  413c64:	mov	w0, #0x62                  	// #98
  413c68:	b	413c98 <ferror@plt+0x112a8>
  413c6c:	mov	w22, #0x0                   	// #0
  413c70:	mov	w20, #0xc                   	// #12
  413c74:	mov	w0, #0x66                  	// #102
  413c78:	b	413c98 <ferror@plt+0x112a8>
  413c7c:	mov	w22, #0x0                   	// #0
  413c80:	mov	w20, #0xd                   	// #13
  413c84:	mov	w0, #0x72                  	// #114
  413c88:	ldr	w1, [sp, #112]
  413c8c:	cmp	w1, #0x0
  413c90:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  413c94:	b.eq	413d70 <ferror@plt+0x11380>  // b.none
  413c98:	ldr	w1, [sp, #132]
  413c9c:	cbnz	w1, 4143ac <ferror@plt+0x119bc>
  413ca0:	mov	w19, w1
  413ca4:	mov	w0, w1
  413ca8:	b	414230 <ferror@plt+0x11840>
  413cac:	mov	w22, #0x0                   	// #0
  413cb0:	mov	w20, #0x9                   	// #9
  413cb4:	mov	w0, #0x74                  	// #116
  413cb8:	b	413c88 <ferror@plt+0x11298>
  413cbc:	mov	w22, #0x0                   	// #0
  413cc0:	mov	w20, #0xb                   	// #11
  413cc4:	mov	w0, #0x76                  	// #118
  413cc8:	b	413c98 <ferror@plt+0x112a8>
  413ccc:	mov	w22, #0x0                   	// #0
  413cd0:	cmp	w23, #0x2
  413cd4:	b.eq	413d00 <ferror@plt+0x11310>  // b.none
  413cd8:	ldr	w0, [sp, #132]
  413cdc:	cmp	w0, #0x0
  413ce0:	ldr	w0, [sp, #112]
  413ce4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  413ce8:	ldr	w0, [sp, #176]
  413cec:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  413cf0:	b.ne	4143c4 <ferror@plt+0x119d4>  // b.any
  413cf4:	mov	w20, #0x5c                  	// #92
  413cf8:	mov	w0, w20
  413cfc:	b	413c98 <ferror@plt+0x112a8>
  413d00:	ldr	w0, [sp, #112]
  413d04:	cbnz	w0, 414524 <ferror@plt+0x11b34>
  413d08:	mov	w19, w0
  413d0c:	mov	w20, #0x5c                  	// #92
  413d10:	eor	w0, w0, #0x1
  413d14:	ldr	w1, [sp, #124]
  413d18:	and	w0, w1, w0
  413d1c:	tst	w0, #0xff
  413d20:	b.eq	4142d0 <ferror@plt+0x118e0>  // b.none
  413d24:	cmp	x26, x27
  413d28:	b.ls	413d34 <ferror@plt+0x11344>  // b.plast
  413d2c:	mov	w0, #0x27                  	// #39
  413d30:	strb	w0, [x28, x27]
  413d34:	add	x0, x27, #0x1
  413d38:	cmp	x26, x0
  413d3c:	b.ls	413d48 <ferror@plt+0x11358>  // b.plast
  413d40:	mov	w1, #0x27                  	// #39
  413d44:	strb	w1, [x28, x0]
  413d48:	add	x27, x27, #0x2
  413d4c:	str	wzr, [sp, #124]
  413d50:	b	4142d0 <ferror@plt+0x118e0>
  413d54:	mov	w0, #0x6e                  	// #110
  413d58:	b	413c88 <ferror@plt+0x11298>
  413d5c:	mov	w0, #0x6e                  	// #110
  413d60:	b	413c88 <ferror@plt+0x11298>
  413d64:	mov	w22, #0x0                   	// #0
  413d68:	mov	w0, #0x6e                  	// #110
  413d6c:	b	413c88 <ferror@plt+0x11298>
  413d70:	mov	x24, x25
  413d74:	mov	w25, #0x2                   	// #2
  413d78:	b	414544 <ferror@plt+0x11b54>
  413d7c:	mov	w0, #0x61                  	// #97
  413d80:	b	413c98 <ferror@plt+0x112a8>
  413d84:	mov	w0, #0x61                  	// #97
  413d88:	b	413c98 <ferror@plt+0x112a8>
  413d8c:	mov	w22, #0x0                   	// #0
  413d90:	cmp	x25, #0x1
  413d94:	cset	w0, ne  // ne = any
  413d98:	cmn	x25, #0x1
  413d9c:	b.eq	413db4 <ferror@plt+0x113c4>  // b.none
  413da0:	cbnz	w0, 414384 <ferror@plt+0x11994>
  413da4:	cbz	x24, 413ddc <ferror@plt+0x113ec>
  413da8:	mov	w19, #0x0                   	// #0
  413dac:	mov	w0, #0x0                   	// #0
  413db0:	b	414230 <ferror@plt+0x11840>
  413db4:	ldr	x0, [sp, #136]
  413db8:	ldrb	w0, [x0, #1]
  413dbc:	cmp	w0, #0x0
  413dc0:	cset	w0, ne  // ne = any
  413dc4:	b	413da0 <ferror@plt+0x113b0>
  413dc8:	mov	w22, #0x0                   	// #0
  413dcc:	b	413da4 <ferror@plt+0x113b4>
  413dd0:	mov	w22, #0x0                   	// #0
  413dd4:	b	413ddc <ferror@plt+0x113ec>
  413dd8:	mov	w19, w22
  413ddc:	cmp	w23, #0x2
  413de0:	cset	w0, eq  // eq = none
  413de4:	ldr	w1, [sp, #112]
  413de8:	ands	w0, w1, w0
  413dec:	b.eq	414230 <ferror@plt+0x11840>  // b.none
  413df0:	mov	x24, x25
  413df4:	mov	w25, #0x2                   	// #2
  413df8:	b	414544 <ferror@plt+0x11b54>
  413dfc:	ldr	w19, [sp, #112]
  413e00:	b	413ddc <ferror@plt+0x113ec>
  413e04:	mov	w22, #0x0                   	// #0
  413e08:	mov	w19, #0x0                   	// #0
  413e0c:	b	413ddc <ferror@plt+0x113ec>
  413e10:	mov	w22, #0x0                   	// #0
  413e14:	cmp	w23, #0x2
  413e18:	b.eq	413e2c <ferror@plt+0x1143c>  // b.none
  413e1c:	str	w19, [sp, #180]
  413e20:	mov	w0, #0x0                   	// #0
  413e24:	mov	w20, #0x27                  	// #39
  413e28:	b	414230 <ferror@plt+0x11840>
  413e2c:	ldr	w0, [sp, #112]
  413e30:	cbnz	w0, 414530 <ferror@plt+0x11b40>
  413e34:	cmp	x26, #0x0
  413e38:	mov	x0, #0x0                   	// #0
  413e3c:	ldr	x1, [sp, #192]
  413e40:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  413e44:	b.eq	413e74 <ferror@plt+0x11484>  // b.none
  413e48:	cmp	x26, x27
  413e4c:	b.ls	413e58 <ferror@plt+0x11468>  // b.plast
  413e50:	mov	w0, #0x27                  	// #39
  413e54:	strb	w0, [x28, x27]
  413e58:	add	x0, x27, #0x1
  413e5c:	cmp	x26, x0
  413e60:	b.ls	413eac <ferror@plt+0x114bc>  // b.plast
  413e64:	mov	w1, #0x5c                  	// #92
  413e68:	strb	w1, [x28, x0]
  413e6c:	mov	x0, x26
  413e70:	ldr	x26, [sp, #192]
  413e74:	add	x1, x27, #0x2
  413e78:	cmp	x1, x0
  413e7c:	b.cs	413e88 <ferror@plt+0x11498>  // b.hs, b.nlast
  413e80:	mov	w2, #0x27                  	// #39
  413e84:	strb	w2, [x28, x1]
  413e88:	add	x27, x27, #0x3
  413e8c:	str	w19, [sp, #180]
  413e90:	ldr	w1, [sp, #112]
  413e94:	str	w1, [sp, #124]
  413e98:	str	x26, [sp, #192]
  413e9c:	mov	x26, x0
  413ea0:	mov	w20, #0x27                  	// #39
  413ea4:	mov	w0, #0x0                   	// #0
  413ea8:	b	414258 <ferror@plt+0x11868>
  413eac:	mov	x0, x26
  413eb0:	ldr	x26, [sp, #192]
  413eb4:	b	413e74 <ferror@plt+0x11484>
  413eb8:	mov	w22, #0x0                   	// #0
  413ebc:	ldr	x0, [sp, #168]
  413ec0:	cmp	x0, #0x1
  413ec4:	b.ne	413f00 <ferror@plt+0x11510>  // b.any
  413ec8:	bl	4027c0 <__ctype_b_loc@plt>
  413ecc:	and	x1, x20, #0xff
  413ed0:	ldr	x0, [x0]
  413ed4:	ldrh	w19, [x0, x1, lsl #1]
  413ed8:	ubfx	x19, x19, #14, #1
  413edc:	ldr	x0, [sp, #168]
  413ee0:	mov	x2, x0
  413ee4:	eor	w0, w19, #0x1
  413ee8:	ldr	w1, [sp, #132]
  413eec:	and	w0, w1, w0
  413ef0:	ands	w0, w0, #0xff
  413ef4:	b.eq	414230 <ferror@plt+0x11840>  // b.none
  413ef8:	mov	w19, #0x0                   	// #0
  413efc:	b	4140ac <ferror@plt+0x116bc>
  413f00:	str	xzr, [sp, #232]
  413f04:	cmn	x25, #0x1
  413f08:	b.eq	413f2c <ferror@plt+0x1153c>  // b.none
  413f0c:	mov	x0, #0x0                   	// #0
  413f10:	str	w21, [sp, #176]
  413f14:	str	w20, [sp, #208]
  413f18:	str	w22, [sp, #212]
  413f1c:	mov	x22, x0
  413f20:	str	x27, [sp, #216]
  413f24:	ldr	w27, [sp, #112]
  413f28:	b	413ffc <ferror@plt+0x1160c>
  413f2c:	ldr	x0, [sp, #136]
  413f30:	bl	4023d0 <strlen@plt>
  413f34:	mov	x25, x0
  413f38:	b	413f0c <ferror@plt+0x1151c>
  413f3c:	ldr	w20, [sp, #208]
  413f40:	mov	x2, x22
  413f44:	mov	x0, x21
  413f48:	ldr	w21, [sp, #176]
  413f4c:	ldr	w22, [sp, #212]
  413f50:	ldr	x27, [sp, #216]
  413f54:	mov	w19, #0x0                   	// #0
  413f58:	cmp	x0, x25
  413f5c:	b.cs	4140a4 <ferror@plt+0x116b4>  // b.hs, b.nlast
  413f60:	mov	x1, x2
  413f64:	ldr	x2, [sp, #136]
  413f68:	ldrb	w0, [x2, x0]
  413f6c:	cbz	w0, 413f8c <ferror@plt+0x1159c>
  413f70:	add	x1, x1, #0x1
  413f74:	add	x0, x24, x1
  413f78:	cmp	x25, x0
  413f7c:	b.hi	413f68 <ferror@plt+0x11578>  // b.pmore
  413f80:	mov	x2, x1
  413f84:	mov	w19, #0x0                   	// #0
  413f88:	b	4140a4 <ferror@plt+0x116b4>
  413f8c:	mov	x2, x1
  413f90:	mov	w19, #0x0                   	// #0
  413f94:	b	4140a4 <ferror@plt+0x116b4>
  413f98:	add	x1, x1, #0x1
  413f9c:	cmp	x1, x21
  413fa0:	b.eq	413fdc <ferror@plt+0x115ec>  // b.none
  413fa4:	ldrb	w0, [x1]
  413fa8:	sub	w0, w0, #0x5b
  413fac:	and	w0, w0, #0xff
  413fb0:	cmp	w0, #0x21
  413fb4:	b.hi	413f98 <ferror@plt+0x115a8>  // b.pmore
  413fb8:	mov	x2, #0x1                   	// #1
  413fbc:	lsl	x0, x2, x0
  413fc0:	mov	x2, #0x2b                  	// #43
  413fc4:	movk	x2, #0x2, lsl #32
  413fc8:	tst	x0, x2
  413fcc:	b.eq	413f98 <ferror@plt+0x115a8>  // b.none
  413fd0:	mov	x24, x25
  413fd4:	mov	w25, #0x2                   	// #2
  413fd8:	b	414544 <ferror@plt+0x11b54>
  413fdc:	ldr	w0, [sp, #228]
  413fe0:	bl	402950 <iswprint@plt>
  413fe4:	cmp	w0, #0x0
  413fe8:	csel	w19, w19, wzr, ne  // ne = any
  413fec:	add	x22, x22, x20
  413ff0:	add	x0, sp, #0xe8
  413ff4:	bl	402740 <mbsinit@plt>
  413ff8:	cbnz	w0, 41405c <ferror@plt+0x1166c>
  413ffc:	add	x21, x24, x22
  414000:	add	x3, sp, #0xe8
  414004:	sub	x2, x25, x21
  414008:	ldr	x0, [sp, #136]
  41400c:	add	x1, x0, x21
  414010:	add	x0, sp, #0xe4
  414014:	bl	416bb8 <ferror@plt+0x141c8>
  414018:	mov	x20, x0
  41401c:	cbz	x0, 414090 <ferror@plt+0x116a0>
  414020:	cmn	x0, #0x1
  414024:	b.eq	414074 <ferror@plt+0x11684>  // b.none
  414028:	cmn	x0, #0x2
  41402c:	b.eq	413f3c <ferror@plt+0x1154c>  // b.none
  414030:	cmp	w27, #0x0
  414034:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  414038:	b.ne	413fdc <ferror@plt+0x115ec>  // b.any
  41403c:	cmp	x0, #0x1
  414040:	b.ls	413fdc <ferror@plt+0x115ec>  // b.plast
  414044:	add	x1, x21, #0x1
  414048:	ldr	x0, [sp, #136]
  41404c:	add	x1, x0, x1
  414050:	add	x0, x0, x20
  414054:	add	x21, x0, x21
  414058:	b	413fa4 <ferror@plt+0x115b4>
  41405c:	ldr	w21, [sp, #176]
  414060:	ldr	w20, [sp, #208]
  414064:	mov	x2, x22
  414068:	ldr	w22, [sp, #212]
  41406c:	ldr	x27, [sp, #216]
  414070:	b	4140a4 <ferror@plt+0x116b4>
  414074:	ldr	w21, [sp, #176]
  414078:	ldr	w20, [sp, #208]
  41407c:	mov	x2, x22
  414080:	ldr	w22, [sp, #212]
  414084:	ldr	x27, [sp, #216]
  414088:	mov	w19, #0x0                   	// #0
  41408c:	b	4140a4 <ferror@plt+0x116b4>
  414090:	ldr	w21, [sp, #176]
  414094:	ldr	w20, [sp, #208]
  414098:	mov	x2, x22
  41409c:	ldr	w22, [sp, #212]
  4140a0:	ldr	x27, [sp, #216]
  4140a4:	cmp	x2, #0x1
  4140a8:	b.ls	413ee4 <ferror@plt+0x114f4>  // b.plast
  4140ac:	add	x5, x24, x2
  4140b0:	mov	w0, #0x0                   	// #0
  4140b4:	eor	w1, w19, #0x1
  4140b8:	ldr	w2, [sp, #132]
  4140bc:	and	w1, w2, w1
  4140c0:	and	w1, w1, #0xff
  4140c4:	mov	w3, w1
  4140c8:	mov	w6, #0x5c                  	// #92
  4140cc:	mov	w7, #0x24                  	// #36
  4140d0:	ldr	w9, [sp, #112]
  4140d4:	ldr	w4, [sp, #124]
  4140d8:	ldr	x8, [sp, #136]
  4140dc:	b	414158 <ferror@plt+0x11768>
  4140e0:	cbz	w22, 4140f4 <ferror@plt+0x11704>
  4140e4:	cmp	x26, x27
  4140e8:	b.ls	4140f0 <ferror@plt+0x11700>  // b.plast
  4140ec:	strb	w6, [x28, x27]
  4140f0:	add	x27, x27, #0x1
  4140f4:	add	x2, x24, #0x1
  4140f8:	cmp	x2, x5
  4140fc:	b.cs	414210 <ferror@plt+0x11820>  // b.hs, b.nlast
  414100:	eor	w22, w0, #0x1
  414104:	and	w22, w4, w22
  414108:	ands	w22, w22, #0xff
  41410c:	b.eq	414224 <ferror@plt+0x11834>  // b.none
  414110:	cmp	x26, x27
  414114:	b.ls	414120 <ferror@plt+0x11730>  // b.plast
  414118:	mov	w4, #0x27                  	// #39
  41411c:	strb	w4, [x28, x27]
  414120:	add	x4, x27, #0x1
  414124:	cmp	x26, x4
  414128:	b.ls	414134 <ferror@plt+0x11744>  // b.plast
  41412c:	mov	w10, #0x27                  	// #39
  414130:	strb	w10, [x28, x4]
  414134:	add	x27, x27, #0x2
  414138:	mov	w22, w3
  41413c:	mov	x24, x2
  414140:	mov	w4, w3
  414144:	cmp	x26, x27
  414148:	b.ls	414150 <ferror@plt+0x11760>  // b.plast
  41414c:	strb	w20, [x28, x27]
  414150:	add	x27, x27, #0x1
  414154:	ldrb	w20, [x8, x24]
  414158:	cbz	w1, 4140e0 <ferror@plt+0x116f0>
  41415c:	cbnz	w9, 4144ec <ferror@plt+0x11afc>
  414160:	cmp	w23, #0x2
  414164:	cset	w0, eq  // eq = none
  414168:	eor	w2, w4, #0x1
  41416c:	ands	w0, w0, w2
  414170:	b.eq	4141b0 <ferror@plt+0x117c0>  // b.none
  414174:	cmp	x26, x27
  414178:	b.ls	414184 <ferror@plt+0x11794>  // b.plast
  41417c:	mov	w2, #0x27                  	// #39
  414180:	strb	w2, [x28, x27]
  414184:	add	x2, x27, #0x1
  414188:	cmp	x26, x2
  41418c:	b.ls	414194 <ferror@plt+0x117a4>  // b.plast
  414190:	strb	w7, [x28, x2]
  414194:	add	x2, x27, #0x2
  414198:	cmp	x26, x2
  41419c:	b.ls	4141a8 <ferror@plt+0x117b8>  // b.plast
  4141a0:	mov	w4, #0x27                  	// #39
  4141a4:	strb	w4, [x28, x2]
  4141a8:	add	x27, x27, #0x3
  4141ac:	mov	w4, w0
  4141b0:	cmp	x26, x27
  4141b4:	b.ls	4141bc <ferror@plt+0x117cc>  // b.plast
  4141b8:	strb	w6, [x28, x27]
  4141bc:	add	x0, x27, #0x1
  4141c0:	cmp	x26, x0
  4141c4:	b.ls	4141d4 <ferror@plt+0x117e4>  // b.plast
  4141c8:	lsr	w2, w20, #6
  4141cc:	add	w2, w2, #0x30
  4141d0:	strb	w2, [x28, x0]
  4141d4:	add	x0, x27, #0x2
  4141d8:	cmp	x26, x0
  4141dc:	b.ls	4141ec <ferror@plt+0x117fc>  // b.plast
  4141e0:	ubfx	x2, x20, #3, #3
  4141e4:	add	w2, w2, #0x30
  4141e8:	strb	w2, [x28, x0]
  4141ec:	add	x27, x27, #0x3
  4141f0:	and	w20, w20, #0x7
  4141f4:	add	w20, w20, #0x30
  4141f8:	add	x2, x24, #0x1
  4141fc:	cmp	x5, x2
  414200:	b.ls	414218 <ferror@plt+0x11828>  // b.plast
  414204:	mov	w0, w3
  414208:	mov	x24, x2
  41420c:	b	414144 <ferror@plt+0x11754>
  414210:	str	w4, [sp, #124]
  414214:	b	413d10 <ferror@plt+0x11320>
  414218:	str	w4, [sp, #124]
  41421c:	mov	w0, w1
  414220:	b	413d10 <ferror@plt+0x11320>
  414224:	mov	x24, x2
  414228:	b	414144 <ferror@plt+0x11754>
  41422c:	mov	w0, w22
  414230:	cmp	w21, #0x0
  414234:	ldr	w1, [sp, #112]
  414238:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  41423c:	b.eq	414258 <ferror@plt+0x11868>  // b.none
  414240:	ldr	x2, [sp, #152]
  414244:	cbz	x2, 414258 <ferror@plt+0x11868>
  414248:	ubfx	x1, x20, #5, #8
  41424c:	ldr	w1, [x2, x1, lsl #2]
  414250:	lsr	w1, w1, w20
  414254:	tbnz	w1, #0, 41425c <ferror@plt+0x1186c>
  414258:	cbz	w22, 413d10 <ferror@plt+0x11320>
  41425c:	ldr	w0, [sp, #112]
  414260:	cbnz	w0, 41453c <ferror@plt+0x11b4c>
  414264:	cmp	w23, #0x2
  414268:	cset	w0, eq  // eq = none
  41426c:	ldr	w1, [sp, #124]
  414270:	eor	w1, w1, #0x1
  414274:	ands	w0, w0, w1
  414278:	b.eq	4142bc <ferror@plt+0x118cc>  // b.none
  41427c:	cmp	x26, x27
  414280:	b.ls	41428c <ferror@plt+0x1189c>  // b.plast
  414284:	mov	w1, #0x27                  	// #39
  414288:	strb	w1, [x28, x27]
  41428c:	add	x1, x27, #0x1
  414290:	cmp	x26, x1
  414294:	b.ls	4142a0 <ferror@plt+0x118b0>  // b.plast
  414298:	mov	w2, #0x24                  	// #36
  41429c:	strb	w2, [x28, x1]
  4142a0:	add	x1, x27, #0x2
  4142a4:	cmp	x26, x1
  4142a8:	b.ls	4142b4 <ferror@plt+0x118c4>  // b.plast
  4142ac:	mov	w2, #0x27                  	// #39
  4142b0:	strb	w2, [x28, x1]
  4142b4:	add	x27, x27, #0x3
  4142b8:	str	w0, [sp, #124]
  4142bc:	cmp	x26, x27
  4142c0:	b.ls	4142cc <ferror@plt+0x118dc>  // b.plast
  4142c4:	mov	w0, #0x5c                  	// #92
  4142c8:	strb	w0, [x28, x27]
  4142cc:	add	x27, x27, #0x1
  4142d0:	cmp	x27, x26
  4142d4:	b.cs	4142dc <ferror@plt+0x118ec>  // b.hs, b.nlast
  4142d8:	strb	w20, [x28, x27]
  4142dc:	add	x27, x27, #0x1
  4142e0:	cmp	w19, #0x0
  4142e4:	ldr	w0, [sp, #128]
  4142e8:	csel	w0, w0, w19, ne  // ne = any
  4142ec:	str	w0, [sp, #128]
  4142f0:	add	x24, x24, #0x1
  4142f4:	cmp	x25, x24
  4142f8:	cset	w19, ne  // ne = any
  4142fc:	cmn	x25, #0x1
  414300:	b.eq	4143d4 <ferror@plt+0x119e4>  // b.none
  414304:	cbz	w19, 4143e8 <ferror@plt+0x119f8>
  414308:	cmp	w23, #0x2
  41430c:	cset	w21, ne  // ne = any
  414310:	ldr	w0, [sp, #132]
  414314:	and	w21, w0, w21
  414318:	ldr	x0, [sp, #144]
  41431c:	cmp	x0, #0x0
  414320:	cset	w0, ne  // ne = any
  414324:	str	w0, [sp, #176]
  414328:	csel	w22, w21, wzr, ne  // ne = any
  41432c:	cbnz	w22, 413980 <ferror@plt+0x10f90>
  414330:	ldr	x0, [sp, #136]
  414334:	ldrb	w20, [x0, x24]
  414338:	cmp	w20, #0x7e
  41433c:	b.hi	413ebc <ferror@plt+0x114cc>  // b.pmore
  414340:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  414344:	add	x0, x0, #0xd60
  414348:	ldrh	w0, [x0, w20, uxtw #1]
  41434c:	adr	x1, 414358 <ferror@plt+0x11968>
  414350:	add	x0, x1, w0, sxth #2
  414354:	br	x0
  414358:	mov	w19, #0x0                   	// #0
  41435c:	mov	w0, #0x0                   	// #0
  414360:	mov	w20, #0x3f                  	// #63
  414364:	b	414230 <ferror@plt+0x11840>
  414368:	mov	w19, #0x0                   	// #0
  41436c:	mov	w0, #0x0                   	// #0
  414370:	mov	w20, #0x3f                  	// #63
  414374:	b	414230 <ferror@plt+0x11840>
  414378:	mov	w19, #0x0                   	// #0
  41437c:	mov	w0, #0x0                   	// #0
  414380:	b	414230 <ferror@plt+0x11840>
  414384:	mov	w19, #0x0                   	// #0
  414388:	mov	w0, #0x0                   	// #0
  41438c:	b	414230 <ferror@plt+0x11840>
  414390:	mov	w19, w22
  414394:	ldr	w0, [sp, #112]
  414398:	b	414230 <ferror@plt+0x11840>
  41439c:	mov	w19, w22
  4143a0:	mov	w22, #0x0                   	// #0
  4143a4:	mov	w0, #0x0                   	// #0
  4143a8:	b	414230 <ferror@plt+0x11840>
  4143ac:	mov	w20, w0
  4143b0:	mov	w19, #0x0                   	// #0
  4143b4:	b	41425c <ferror@plt+0x1186c>
  4143b8:	mov	w19, #0x0                   	// #0
  4143bc:	mov	w20, #0x61                  	// #97
  4143c0:	b	41425c <ferror@plt+0x1186c>
  4143c4:	mov	w19, #0x0                   	// #0
  4143c8:	mov	w0, #0x0                   	// #0
  4143cc:	mov	w20, #0x5c                  	// #92
  4143d0:	b	413d10 <ferror@plt+0x11320>
  4143d4:	ldr	x0, [sp, #136]
  4143d8:	ldrb	w0, [x0, x24]
  4143dc:	cmp	w0, #0x0
  4143e0:	cset	w19, ne  // ne = any
  4143e4:	b	414304 <ferror@plt+0x11914>
  4143e8:	cmp	w23, #0x2
  4143ec:	cset	w1, eq  // eq = none
  4143f0:	cmp	w1, #0x0
  4143f4:	ldr	w0, [sp, #112]
  4143f8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4143fc:	ccmp	x27, #0x0, #0x0, ne  // ne = any
  414400:	b.eq	414500 <ferror@plt+0x11b10>  // b.none
  414404:	eor	w0, w0, #0x1
  414408:	and	w0, w0, #0xff
  41440c:	cmp	w1, #0x0
  414410:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  414414:	cset	w1, ne  // ne = any
  414418:	ldr	w2, [sp, #180]
  41441c:	ands	w1, w2, w1
  414420:	b.eq	414494 <ferror@plt+0x11aa4>  // b.none
  414424:	ldr	w0, [sp, #128]
  414428:	cbnz	w0, 41445c <ferror@plt+0x11a6c>
  41442c:	cmp	x26, #0x0
  414430:	cset	w0, eq  // eq = none
  414434:	ldr	x2, [sp, #192]
  414438:	cmp	x2, #0x0
  41443c:	csel	w0, w0, wzr, ne  // ne = any
  414440:	str	w0, [sp, #180]
  414444:	mov	w23, #0x2                   	// #2
  414448:	cbz	w0, 414490 <ferror@plt+0x11aa0>
  41444c:	ldr	w0, [sp, #128]
  414450:	str	w0, [sp, #112]
  414454:	ldr	x26, [sp, #192]
  414458:	b	413724 <ferror@plt+0x10d34>
  41445c:	ldr	x0, [sp, #240]
  414460:	str	x0, [sp]
  414464:	ldr	x7, [sp, #200]
  414468:	ldr	x6, [sp, #152]
  41446c:	ldr	w5, [sp, #184]
  414470:	mov	w4, #0x5                   	// #5
  414474:	mov	x3, x25
  414478:	ldr	x2, [sp, #136]
  41447c:	ldr	x1, [sp, #192]
  414480:	mov	x0, x28
  414484:	bl	4136a4 <ferror@plt+0x10cb4>
  414488:	mov	x27, x0
  41448c:	b	41458c <ferror@plt+0x11b9c>
  414490:	mov	w0, w1
  414494:	ldr	x1, [sp, #160]
  414498:	cmp	x1, #0x0
  41449c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4144a0:	b.eq	4144dc <ferror@plt+0x11aec>  // b.none
  4144a4:	mov	x0, x1
  4144a8:	ldrb	w2, [x1]
  4144ac:	cbz	w2, 4144dc <ferror@plt+0x11aec>
  4144b0:	mov	x1, x27
  4144b4:	sub	x0, x0, x27
  4144b8:	b	4144c8 <ferror@plt+0x11ad8>
  4144bc:	add	x1, x1, #0x1
  4144c0:	ldrb	w2, [x0, x1]
  4144c4:	cbz	w2, 4144d8 <ferror@plt+0x11ae8>
  4144c8:	cmp	x26, x1
  4144cc:	b.ls	4144bc <ferror@plt+0x11acc>  // b.plast
  4144d0:	strb	w2, [x28, x1]
  4144d4:	b	4144bc <ferror@plt+0x11acc>
  4144d8:	mov	x27, x1
  4144dc:	cmp	x26, x27
  4144e0:	b.ls	41458c <ferror@plt+0x11b9c>  // b.plast
  4144e4:	strb	wzr, [x28, x27]
  4144e8:	b	41458c <ferror@plt+0x11b9c>
  4144ec:	mov	x24, x25
  4144f0:	mov	w25, w23
  4144f4:	ldr	w0, [sp, #112]
  4144f8:	str	w0, [sp, #132]
  4144fc:	b	414544 <ferror@plt+0x11b54>
  414500:	mov	x24, x25
  414504:	mov	w25, #0x2                   	// #2
  414508:	b	414544 <ferror@plt+0x11b54>
  41450c:	mov	x24, x25
  414510:	mov	w25, w23
  414514:	b	414544 <ferror@plt+0x11b54>
  414518:	mov	x24, x25
  41451c:	mov	w25, w23
  414520:	b	414544 <ferror@plt+0x11b54>
  414524:	mov	x24, x25
  414528:	mov	w25, w23
  41452c:	b	414544 <ferror@plt+0x11b54>
  414530:	mov	x24, x25
  414534:	mov	w25, w23
  414538:	b	414544 <ferror@plt+0x11b54>
  41453c:	mov	x24, x25
  414540:	mov	w25, w23
  414544:	ldr	w0, [sp, #132]
  414548:	cmp	w0, #0x0
  41454c:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  414550:	mov	w0, #0x4                   	// #4
  414554:	csel	w25, w25, w0, ne  // ne = any
  414558:	ldr	x0, [sp, #240]
  41455c:	str	x0, [sp]
  414560:	ldr	x7, [sp, #200]
  414564:	mov	x6, #0x0                   	// #0
  414568:	ldr	w0, [sp, #184]
  41456c:	and	w5, w0, #0xfffffffd
  414570:	mov	w4, w25
  414574:	mov	x3, x24
  414578:	ldr	x2, [sp, #136]
  41457c:	mov	x1, x26
  414580:	mov	x0, x28
  414584:	bl	4136a4 <ferror@plt+0x10cb4>
  414588:	mov	x27, x0
  41458c:	mov	x0, x27
  414590:	ldp	x19, x20, [sp, #32]
  414594:	ldp	x21, x22, [sp, #48]
  414598:	ldp	x23, x24, [sp, #64]
  41459c:	ldp	x25, x26, [sp, #80]
  4145a0:	ldp	x27, x28, [sp, #96]
  4145a4:	ldp	x29, x30, [sp, #16]
  4145a8:	add	sp, sp, #0xf0
  4145ac:	ret
  4145b0:	mov	x24, x25
  4145b4:	mov	w25, w23
  4145b8:	b	414558 <ferror@plt+0x11b68>
  4145bc:	add	x27, x27, #0x4
  4145c0:	str	w0, [sp, #124]
  4145c4:	mov	w19, #0x0                   	// #0
  4145c8:	mov	w20, #0x30                  	// #48
  4145cc:	b	414230 <ferror@plt+0x11840>
  4145d0:	ldr	x0, [sp, #136]
  4145d4:	ldrb	w20, [x0, x24]
  4145d8:	cmp	w20, #0x7e
  4145dc:	b.hi	413eb8 <ferror@plt+0x114c8>  // b.pmore
  4145e0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  4145e4:	add	x0, x0, #0xe60
  4145e8:	ldrh	w0, [x0, w20, uxtw #1]
  4145ec:	adr	x1, 4145f8 <ferror@plt+0x11c08>
  4145f0:	add	x0, x1, w0, sxth #2
  4145f4:	br	x0
  4145f8:	sub	sp, sp, #0x80
  4145fc:	stp	x29, x30, [sp, #16]
  414600:	add	x29, sp, #0x10
  414604:	stp	x19, x20, [sp, #32]
  414608:	stp	x21, x22, [sp, #48]
  41460c:	stp	x23, x24, [sp, #64]
  414610:	stp	x25, x26, [sp, #80]
  414614:	stp	x27, x28, [sp, #96]
  414618:	mov	w19, w0
  41461c:	str	x1, [sp, #112]
  414620:	str	x2, [sp, #120]
  414624:	mov	x20, x3
  414628:	bl	402970 <__errno_location@plt>
  41462c:	mov	x23, x0
  414630:	ldr	w28, [x0]
  414634:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  414638:	ldr	x21, [x0, #920]
  41463c:	tbnz	w19, #31, 414780 <ferror@plt+0x11d90>
  414640:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  414644:	ldr	w0, [x0, #928]
  414648:	cmp	w0, w19
  41464c:	b.gt	4146b0 <ferror@plt+0x11cc0>
  414650:	mov	w0, #0x7ffffffe            	// #2147483646
  414654:	cmp	w19, w0
  414658:	b.hi	414784 <ferror@plt+0x11d94>  // b.pmore
  41465c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  414660:	add	x0, x0, #0x398
  414664:	add	x0, x0, #0x10
  414668:	cmp	x21, x0
  41466c:	b.eq	414788 <ferror@plt+0x11d98>  // b.none
  414670:	add	w24, w19, #0x1
  414674:	sbfiz	x1, x24, #4, #32
  414678:	mov	x0, x21
  41467c:	bl	4160f8 <ferror@plt+0x13708>
  414680:	mov	x21, x0
  414684:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  414688:	str	x21, [x0, #920]
  41468c:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1906c>
  414690:	add	x22, x22, #0x398
  414694:	ldr	w0, [x22, #8]
  414698:	sub	w2, w24, w0
  41469c:	sbfiz	x2, x2, #4, #32
  4146a0:	mov	w1, #0x0                   	// #0
  4146a4:	add	x0, x21, w0, sxtw #4
  4146a8:	bl	402610 <memset@plt>
  4146ac:	str	w24, [x22, #8]
  4146b0:	sbfiz	x19, x19, #4, #32
  4146b4:	add	x27, x21, x19
  4146b8:	ldr	x25, [x21, x19]
  4146bc:	ldr	x22, [x27, #8]
  4146c0:	ldr	w24, [x20, #4]
  4146c4:	orr	w24, w24, #0x1
  4146c8:	add	x26, x20, #0x8
  4146cc:	ldr	x0, [x20, #48]
  4146d0:	str	x0, [sp]
  4146d4:	ldr	x7, [x20, #40]
  4146d8:	mov	x6, x26
  4146dc:	mov	w5, w24
  4146e0:	ldr	w4, [x20]
  4146e4:	ldr	x3, [sp, #120]
  4146e8:	ldr	x2, [sp, #112]
  4146ec:	mov	x1, x25
  4146f0:	mov	x0, x22
  4146f4:	bl	4136a4 <ferror@plt+0x10cb4>
  4146f8:	cmp	x25, x0
  4146fc:	b.hi	414758 <ferror@plt+0x11d68>  // b.pmore
  414700:	add	x25, x0, #0x1
  414704:	str	x25, [x21, x19]
  414708:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  41470c:	add	x0, x0, #0xb00
  414710:	cmp	x22, x0
  414714:	b.eq	414720 <ferror@plt+0x11d30>  // b.none
  414718:	mov	x0, x22
  41471c:	bl	402810 <free@plt>
  414720:	mov	x0, x25
  414724:	bl	41607c <ferror@plt+0x1368c>
  414728:	mov	x22, x0
  41472c:	str	x0, [x27, #8]
  414730:	ldr	x1, [x20, #48]
  414734:	str	x1, [sp]
  414738:	ldr	x7, [x20, #40]
  41473c:	mov	x6, x26
  414740:	mov	w5, w24
  414744:	ldr	w4, [x20]
  414748:	ldr	x3, [sp, #120]
  41474c:	ldr	x2, [sp, #112]
  414750:	mov	x1, x25
  414754:	bl	4136a4 <ferror@plt+0x10cb4>
  414758:	str	w28, [x23]
  41475c:	mov	x0, x22
  414760:	ldp	x19, x20, [sp, #32]
  414764:	ldp	x21, x22, [sp, #48]
  414768:	ldp	x23, x24, [sp, #64]
  41476c:	ldp	x25, x26, [sp, #80]
  414770:	ldp	x27, x28, [sp, #96]
  414774:	ldp	x29, x30, [sp, #16]
  414778:	add	sp, sp, #0x80
  41477c:	ret
  414780:	bl	402720 <abort@plt>
  414784:	bl	4162e8 <ferror@plt+0x138f8>
  414788:	add	w24, w19, #0x1
  41478c:	sbfiz	x1, x24, #4, #32
  414790:	mov	x0, #0x0                   	// #0
  414794:	bl	4160f8 <ferror@plt+0x13708>
  414798:	mov	x21, x0
  41479c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4147a0:	add	x1, x0, #0x398
  4147a4:	str	x21, [x0, #920]
  4147a8:	ldp	x0, x1, [x1, #16]
  4147ac:	stp	x0, x1, [x21]
  4147b0:	b	41468c <ferror@plt+0x11c9c>
  4147b4:	stp	x29, x30, [sp, #-48]!
  4147b8:	mov	x29, sp
  4147bc:	stp	x19, x20, [sp, #16]
  4147c0:	str	x21, [sp, #32]
  4147c4:	mov	x20, x0
  4147c8:	bl	402970 <__errno_location@plt>
  4147cc:	mov	x19, x0
  4147d0:	ldr	w21, [x0]
  4147d4:	adrp	x2, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4147d8:	add	x2, x2, #0xb00
  4147dc:	add	x2, x2, #0x100
  4147e0:	cmp	x20, #0x0
  4147e4:	mov	x1, #0x38                  	// #56
  4147e8:	csel	x0, x2, x20, eq  // eq = none
  4147ec:	bl	416288 <ferror@plt+0x13898>
  4147f0:	str	w21, [x19]
  4147f4:	ldp	x19, x20, [sp, #16]
  4147f8:	ldr	x21, [sp, #32]
  4147fc:	ldp	x29, x30, [sp], #48
  414800:	ret
  414804:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414808:	add	x1, x1, #0xb00
  41480c:	add	x1, x1, #0x100
  414810:	cmp	x0, #0x0
  414814:	csel	x0, x1, x0, eq  // eq = none
  414818:	ldr	w0, [x0]
  41481c:	ret
  414820:	adrp	x2, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414824:	add	x2, x2, #0xb00
  414828:	add	x2, x2, #0x100
  41482c:	cmp	x0, #0x0
  414830:	csel	x0, x2, x0, eq  // eq = none
  414834:	str	w1, [x0]
  414838:	ret
  41483c:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414840:	add	x3, x3, #0xb00
  414844:	add	x3, x3, #0x100
  414848:	cmp	x0, #0x0
  41484c:	csel	x0, x3, x0, eq  // eq = none
  414850:	add	x0, x0, #0x8
  414854:	ubfx	x4, x1, #5, #3
  414858:	and	w1, w1, #0x1f
  41485c:	ldr	w5, [x0, x4, lsl #2]
  414860:	lsr	w3, w5, w1
  414864:	eor	w2, w3, w2
  414868:	and	w2, w2, #0x1
  41486c:	lsl	w2, w2, w1
  414870:	eor	w2, w2, w5
  414874:	str	w2, [x0, x4, lsl #2]
  414878:	and	w0, w3, #0x1
  41487c:	ret
  414880:	mov	x2, x0
  414884:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414888:	add	x0, x0, #0xb00
  41488c:	add	x0, x0, #0x100
  414890:	cmp	x2, #0x0
  414894:	csel	x2, x0, x2, eq  // eq = none
  414898:	ldr	w0, [x2, #4]
  41489c:	str	w1, [x2, #4]
  4148a0:	ret
  4148a4:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4148a8:	add	x3, x3, #0xb00
  4148ac:	add	x3, x3, #0x100
  4148b0:	cmp	x0, #0x0
  4148b4:	csel	x0, x3, x0, eq  // eq = none
  4148b8:	mov	w3, #0xa                   	// #10
  4148bc:	str	w3, [x0]
  4148c0:	cmp	x1, #0x0
  4148c4:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  4148c8:	b.eq	4148d8 <ferror@plt+0x11ee8>  // b.none
  4148cc:	str	x1, [x0, #40]
  4148d0:	str	x2, [x0, #48]
  4148d4:	ret
  4148d8:	stp	x29, x30, [sp, #-16]!
  4148dc:	mov	x29, sp
  4148e0:	bl	402720 <abort@plt>
  4148e4:	sub	sp, sp, #0x60
  4148e8:	stp	x29, x30, [sp, #16]
  4148ec:	add	x29, sp, #0x10
  4148f0:	stp	x19, x20, [sp, #32]
  4148f4:	stp	x21, x22, [sp, #48]
  4148f8:	stp	x23, x24, [sp, #64]
  4148fc:	str	x25, [sp, #80]
  414900:	mov	x21, x0
  414904:	mov	x22, x1
  414908:	mov	x23, x2
  41490c:	mov	x24, x3
  414910:	mov	x19, x4
  414914:	adrp	x4, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414918:	add	x4, x4, #0xb00
  41491c:	add	x4, x4, #0x100
  414920:	cmp	x19, #0x0
  414924:	csel	x19, x4, x19, eq  // eq = none
  414928:	bl	402970 <__errno_location@plt>
  41492c:	mov	x20, x0
  414930:	ldr	w25, [x0]
  414934:	ldr	x7, [x19, #40]
  414938:	ldr	w5, [x19, #4]
  41493c:	ldr	w4, [x19]
  414940:	ldr	x0, [x19, #48]
  414944:	str	x0, [sp]
  414948:	add	x6, x19, #0x8
  41494c:	mov	x3, x24
  414950:	mov	x2, x23
  414954:	mov	x1, x22
  414958:	mov	x0, x21
  41495c:	bl	4136a4 <ferror@plt+0x10cb4>
  414960:	str	w25, [x20]
  414964:	ldp	x19, x20, [sp, #32]
  414968:	ldp	x21, x22, [sp, #48]
  41496c:	ldp	x23, x24, [sp, #64]
  414970:	ldr	x25, [sp, #80]
  414974:	ldp	x29, x30, [sp, #16]
  414978:	add	sp, sp, #0x60
  41497c:	ret
  414980:	sub	sp, sp, #0x80
  414984:	stp	x29, x30, [sp, #16]
  414988:	add	x29, sp, #0x10
  41498c:	stp	x19, x20, [sp, #32]
  414990:	stp	x21, x22, [sp, #48]
  414994:	stp	x23, x24, [sp, #64]
  414998:	stp	x25, x26, [sp, #80]
  41499c:	stp	x27, x28, [sp, #96]
  4149a0:	mov	x22, x0
  4149a4:	mov	x23, x1
  4149a8:	mov	x20, x2
  4149ac:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4149b0:	add	x0, x0, #0xb00
  4149b4:	add	x0, x0, #0x100
  4149b8:	cmp	x3, #0x0
  4149bc:	csel	x19, x0, x3, eq  // eq = none
  4149c0:	bl	402970 <__errno_location@plt>
  4149c4:	mov	x21, x0
  4149c8:	ldr	w28, [x0]
  4149cc:	cmp	x20, #0x0
  4149d0:	cset	w24, eq  // eq = none
  4149d4:	ldr	w0, [x19, #4]
  4149d8:	orr	w24, w24, w0
  4149dc:	add	x27, x19, #0x8
  4149e0:	ldr	x7, [x19, #40]
  4149e4:	ldr	w4, [x19]
  4149e8:	ldr	x0, [x19, #48]
  4149ec:	str	x0, [sp]
  4149f0:	mov	x6, x27
  4149f4:	mov	w5, w24
  4149f8:	mov	x3, x23
  4149fc:	mov	x2, x22
  414a00:	mov	x1, #0x0                   	// #0
  414a04:	mov	x0, #0x0                   	// #0
  414a08:	bl	4136a4 <ferror@plt+0x10cb4>
  414a0c:	mov	x25, x0
  414a10:	add	x26, x0, #0x1
  414a14:	mov	x0, x26
  414a18:	bl	41607c <ferror@plt+0x1368c>
  414a1c:	str	x0, [sp, #120]
  414a20:	ldr	x7, [x19, #40]
  414a24:	ldr	w4, [x19]
  414a28:	ldr	x1, [x19, #48]
  414a2c:	str	x1, [sp]
  414a30:	mov	x6, x27
  414a34:	mov	w5, w24
  414a38:	mov	x3, x23
  414a3c:	mov	x2, x22
  414a40:	mov	x1, x26
  414a44:	bl	4136a4 <ferror@plt+0x10cb4>
  414a48:	str	w28, [x21]
  414a4c:	cbz	x20, 414a54 <ferror@plt+0x12064>
  414a50:	str	x25, [x20]
  414a54:	ldr	x0, [sp, #120]
  414a58:	ldp	x19, x20, [sp, #32]
  414a5c:	ldp	x21, x22, [sp, #48]
  414a60:	ldp	x23, x24, [sp, #64]
  414a64:	ldp	x25, x26, [sp, #80]
  414a68:	ldp	x27, x28, [sp, #96]
  414a6c:	ldp	x29, x30, [sp, #16]
  414a70:	add	sp, sp, #0x80
  414a74:	ret
  414a78:	stp	x29, x30, [sp, #-16]!
  414a7c:	mov	x29, sp
  414a80:	mov	x3, x2
  414a84:	mov	x2, #0x0                   	// #0
  414a88:	bl	414980 <ferror@plt+0x11f90>
  414a8c:	ldp	x29, x30, [sp], #16
  414a90:	ret
  414a94:	stp	x29, x30, [sp, #-48]!
  414a98:	mov	x29, sp
  414a9c:	stp	x19, x20, [sp, #16]
  414aa0:	str	x21, [sp, #32]
  414aa4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  414aa8:	add	x1, x0, #0x398
  414aac:	ldr	x21, [x0, #920]
  414ab0:	ldr	w20, [x1, #8]
  414ab4:	cmp	w20, #0x1
  414ab8:	b.le	414adc <ferror@plt+0x120ec>
  414abc:	add	x19, x21, #0x18
  414ac0:	sub	w20, w20, #0x2
  414ac4:	add	x0, x21, #0x28
  414ac8:	add	x20, x0, x20, lsl #4
  414acc:	ldr	x0, [x19], #16
  414ad0:	bl	402810 <free@plt>
  414ad4:	cmp	x19, x20
  414ad8:	b.ne	414acc <ferror@plt+0x120dc>  // b.any
  414adc:	ldr	x0, [x21, #8]
  414ae0:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414ae4:	add	x1, x1, #0xb00
  414ae8:	cmp	x0, x1
  414aec:	b.eq	414b10 <ferror@plt+0x12120>  // b.none
  414af0:	bl	402810 <free@plt>
  414af4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  414af8:	add	x0, x0, #0x398
  414afc:	mov	x1, #0x100                 	// #256
  414b00:	str	x1, [x0, #16]
  414b04:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414b08:	add	x1, x1, #0xb00
  414b0c:	str	x1, [x0, #24]
  414b10:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  414b14:	add	x0, x0, #0x398
  414b18:	add	x0, x0, #0x10
  414b1c:	cmp	x21, x0
  414b20:	b.eq	414b3c <ferror@plt+0x1214c>  // b.none
  414b24:	mov	x0, x21
  414b28:	bl	402810 <free@plt>
  414b2c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  414b30:	add	x0, x1, #0x398
  414b34:	add	x0, x0, #0x10
  414b38:	str	x0, [x1, #920]
  414b3c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  414b40:	mov	w1, #0x1                   	// #1
  414b44:	str	w1, [x0, #928]
  414b48:	ldp	x19, x20, [sp, #16]
  414b4c:	ldr	x21, [sp, #32]
  414b50:	ldp	x29, x30, [sp], #48
  414b54:	ret
  414b58:	stp	x29, x30, [sp, #-16]!
  414b5c:	mov	x29, sp
  414b60:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414b64:	add	x3, x3, #0xb00
  414b68:	add	x3, x3, #0x100
  414b6c:	mov	x2, #0xffffffffffffffff    	// #-1
  414b70:	bl	4145f8 <ferror@plt+0x11c08>
  414b74:	ldp	x29, x30, [sp], #16
  414b78:	ret
  414b7c:	stp	x29, x30, [sp, #-16]!
  414b80:	mov	x29, sp
  414b84:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414b88:	add	x3, x3, #0xb00
  414b8c:	add	x3, x3, #0x100
  414b90:	bl	4145f8 <ferror@plt+0x11c08>
  414b94:	ldp	x29, x30, [sp], #16
  414b98:	ret
  414b9c:	stp	x29, x30, [sp, #-16]!
  414ba0:	mov	x29, sp
  414ba4:	mov	x1, x0
  414ba8:	mov	w0, #0x0                   	// #0
  414bac:	bl	414b58 <ferror@plt+0x12168>
  414bb0:	ldp	x29, x30, [sp], #16
  414bb4:	ret
  414bb8:	stp	x29, x30, [sp, #-16]!
  414bbc:	mov	x29, sp
  414bc0:	mov	x2, x1
  414bc4:	mov	x1, x0
  414bc8:	mov	w0, #0x0                   	// #0
  414bcc:	bl	414b7c <ferror@plt+0x1218c>
  414bd0:	ldp	x29, x30, [sp], #16
  414bd4:	ret
  414bd8:	stp	x29, x30, [sp, #-96]!
  414bdc:	mov	x29, sp
  414be0:	stp	x19, x20, [sp, #16]
  414be4:	mov	w19, w0
  414be8:	mov	w0, w1
  414bec:	mov	x20, x2
  414bf0:	add	x8, sp, #0x28
  414bf4:	bl	413550 <ferror@plt+0x10b60>
  414bf8:	add	x3, sp, #0x28
  414bfc:	mov	x2, #0xffffffffffffffff    	// #-1
  414c00:	mov	x1, x20
  414c04:	mov	w0, w19
  414c08:	bl	4145f8 <ferror@plt+0x11c08>
  414c0c:	ldp	x19, x20, [sp, #16]
  414c10:	ldp	x29, x30, [sp], #96
  414c14:	ret
  414c18:	stp	x29, x30, [sp, #-112]!
  414c1c:	mov	x29, sp
  414c20:	stp	x19, x20, [sp, #16]
  414c24:	str	x21, [sp, #32]
  414c28:	mov	w19, w0
  414c2c:	mov	w0, w1
  414c30:	mov	x20, x2
  414c34:	mov	x21, x3
  414c38:	add	x8, sp, #0x38
  414c3c:	bl	413550 <ferror@plt+0x10b60>
  414c40:	add	x3, sp, #0x38
  414c44:	mov	x2, x21
  414c48:	mov	x1, x20
  414c4c:	mov	w0, w19
  414c50:	bl	4145f8 <ferror@plt+0x11c08>
  414c54:	ldp	x19, x20, [sp, #16]
  414c58:	ldr	x21, [sp, #32]
  414c5c:	ldp	x29, x30, [sp], #112
  414c60:	ret
  414c64:	stp	x29, x30, [sp, #-16]!
  414c68:	mov	x29, sp
  414c6c:	mov	x2, x1
  414c70:	mov	w1, w0
  414c74:	mov	w0, #0x0                   	// #0
  414c78:	bl	414bd8 <ferror@plt+0x121e8>
  414c7c:	ldp	x29, x30, [sp], #16
  414c80:	ret
  414c84:	stp	x29, x30, [sp, #-16]!
  414c88:	mov	x29, sp
  414c8c:	mov	x3, x2
  414c90:	mov	x2, x1
  414c94:	mov	w1, w0
  414c98:	mov	w0, #0x0                   	// #0
  414c9c:	bl	414c18 <ferror@plt+0x12228>
  414ca0:	ldp	x29, x30, [sp], #16
  414ca4:	ret
  414ca8:	stp	x29, x30, [sp, #-96]!
  414cac:	mov	x29, sp
  414cb0:	stp	x19, x20, [sp, #16]
  414cb4:	mov	x19, x0
  414cb8:	mov	x20, x1
  414cbc:	and	w1, w2, #0xff
  414cc0:	adrp	x2, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414cc4:	add	x2, x2, #0xb00
  414cc8:	add	x0, x2, #0x100
  414ccc:	ldp	x2, x3, [x2, #256]
  414cd0:	stp	x2, x3, [sp, #40]
  414cd4:	ldp	x2, x3, [x0, #16]
  414cd8:	stp	x2, x3, [sp, #56]
  414cdc:	ldp	x2, x3, [x0, #32]
  414ce0:	stp	x2, x3, [sp, #72]
  414ce4:	ldr	x0, [x0, #48]
  414ce8:	str	x0, [sp, #88]
  414cec:	mov	w2, #0x1                   	// #1
  414cf0:	add	x0, sp, #0x28
  414cf4:	bl	41483c <ferror@plt+0x11e4c>
  414cf8:	add	x3, sp, #0x28
  414cfc:	mov	x2, x20
  414d00:	mov	x1, x19
  414d04:	mov	w0, #0x0                   	// #0
  414d08:	bl	4145f8 <ferror@plt+0x11c08>
  414d0c:	ldp	x19, x20, [sp, #16]
  414d10:	ldp	x29, x30, [sp], #96
  414d14:	ret
  414d18:	stp	x29, x30, [sp, #-16]!
  414d1c:	mov	x29, sp
  414d20:	mov	w2, w1
  414d24:	mov	x1, #0xffffffffffffffff    	// #-1
  414d28:	bl	414ca8 <ferror@plt+0x122b8>
  414d2c:	ldp	x29, x30, [sp], #16
  414d30:	ret
  414d34:	stp	x29, x30, [sp, #-16]!
  414d38:	mov	x29, sp
  414d3c:	mov	w1, #0x3a                  	// #58
  414d40:	bl	414d18 <ferror@plt+0x12328>
  414d44:	ldp	x29, x30, [sp], #16
  414d48:	ret
  414d4c:	stp	x29, x30, [sp, #-16]!
  414d50:	mov	x29, sp
  414d54:	mov	w2, #0x3a                  	// #58
  414d58:	bl	414ca8 <ferror@plt+0x122b8>
  414d5c:	ldp	x29, x30, [sp], #16
  414d60:	ret
  414d64:	stp	x29, x30, [sp, #-160]!
  414d68:	mov	x29, sp
  414d6c:	stp	x19, x20, [sp, #16]
  414d70:	mov	w19, w0
  414d74:	mov	w0, w1
  414d78:	mov	x20, x2
  414d7c:	add	x8, sp, #0x20
  414d80:	bl	413550 <ferror@plt+0x10b60>
  414d84:	ldp	x0, x1, [sp, #32]
  414d88:	stp	x0, x1, [sp, #104]
  414d8c:	ldp	x0, x1, [sp, #48]
  414d90:	stp	x0, x1, [sp, #120]
  414d94:	ldp	x0, x1, [sp, #64]
  414d98:	stp	x0, x1, [sp, #136]
  414d9c:	ldr	x0, [sp, #80]
  414da0:	str	x0, [sp, #152]
  414da4:	mov	w2, #0x1                   	// #1
  414da8:	mov	w1, #0x3a                  	// #58
  414dac:	add	x0, sp, #0x68
  414db0:	bl	41483c <ferror@plt+0x11e4c>
  414db4:	add	x3, sp, #0x68
  414db8:	mov	x2, #0xffffffffffffffff    	// #-1
  414dbc:	mov	x1, x20
  414dc0:	mov	w0, w19
  414dc4:	bl	4145f8 <ferror@plt+0x11c08>
  414dc8:	ldp	x19, x20, [sp, #16]
  414dcc:	ldp	x29, x30, [sp], #160
  414dd0:	ret
  414dd4:	stp	x29, x30, [sp, #-112]!
  414dd8:	mov	x29, sp
  414ddc:	stp	x19, x20, [sp, #16]
  414de0:	str	x21, [sp, #32]
  414de4:	mov	w19, w0
  414de8:	mov	x20, x3
  414dec:	mov	x21, x4
  414df0:	adrp	x5, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  414df4:	add	x5, x5, #0xb00
  414df8:	add	x0, x5, #0x100
  414dfc:	ldp	x4, x5, [x5, #256]
  414e00:	stp	x4, x5, [sp, #56]
  414e04:	ldp	x4, x5, [x0, #16]
  414e08:	stp	x4, x5, [sp, #72]
  414e0c:	ldp	x4, x5, [x0, #32]
  414e10:	stp	x4, x5, [sp, #88]
  414e14:	ldr	x0, [x0, #48]
  414e18:	str	x0, [sp, #104]
  414e1c:	add	x0, sp, #0x38
  414e20:	bl	4148a4 <ferror@plt+0x11eb4>
  414e24:	add	x3, sp, #0x38
  414e28:	mov	x2, x21
  414e2c:	mov	x1, x20
  414e30:	mov	w0, w19
  414e34:	bl	4145f8 <ferror@plt+0x11c08>
  414e38:	ldp	x19, x20, [sp, #16]
  414e3c:	ldr	x21, [sp, #32]
  414e40:	ldp	x29, x30, [sp], #112
  414e44:	ret
  414e48:	stp	x29, x30, [sp, #-16]!
  414e4c:	mov	x29, sp
  414e50:	mov	x4, #0xffffffffffffffff    	// #-1
  414e54:	bl	414dd4 <ferror@plt+0x123e4>
  414e58:	ldp	x29, x30, [sp], #16
  414e5c:	ret
  414e60:	stp	x29, x30, [sp, #-16]!
  414e64:	mov	x29, sp
  414e68:	mov	x3, x2
  414e6c:	mov	x2, x1
  414e70:	mov	x1, x0
  414e74:	mov	w0, #0x0                   	// #0
  414e78:	bl	414e48 <ferror@plt+0x12458>
  414e7c:	ldp	x29, x30, [sp], #16
  414e80:	ret
  414e84:	stp	x29, x30, [sp, #-16]!
  414e88:	mov	x29, sp
  414e8c:	mov	x4, x3
  414e90:	mov	x3, x2
  414e94:	mov	x2, x1
  414e98:	mov	x1, x0
  414e9c:	mov	w0, #0x0                   	// #0
  414ea0:	bl	414dd4 <ferror@plt+0x123e4>
  414ea4:	ldp	x29, x30, [sp], #16
  414ea8:	ret
  414eac:	stp	x29, x30, [sp, #-16]!
  414eb0:	mov	x29, sp
  414eb4:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1906c>
  414eb8:	add	x3, x3, #0x398
  414ebc:	add	x3, x3, #0x20
  414ec0:	bl	4145f8 <ferror@plt+0x11c08>
  414ec4:	ldp	x29, x30, [sp], #16
  414ec8:	ret
  414ecc:	stp	x29, x30, [sp, #-16]!
  414ed0:	mov	x29, sp
  414ed4:	mov	x2, x1
  414ed8:	mov	x1, x0
  414edc:	mov	w0, #0x0                   	// #0
  414ee0:	bl	414eac <ferror@plt+0x124bc>
  414ee4:	ldp	x29, x30, [sp], #16
  414ee8:	ret
  414eec:	stp	x29, x30, [sp, #-16]!
  414ef0:	mov	x29, sp
  414ef4:	mov	x2, #0xffffffffffffffff    	// #-1
  414ef8:	bl	414eac <ferror@plt+0x124bc>
  414efc:	ldp	x29, x30, [sp], #16
  414f00:	ret
  414f04:	stp	x29, x30, [sp, #-16]!
  414f08:	mov	x29, sp
  414f0c:	mov	x1, x0
  414f10:	mov	w0, #0x0                   	// #0
  414f14:	bl	414eec <ferror@plt+0x124fc>
  414f18:	ldp	x29, x30, [sp], #16
  414f1c:	ret
  414f20:	stp	x29, x30, [sp, #-32]!
  414f24:	mov	x29, sp
  414f28:	stp	x19, x20, [sp, #16]
  414f2c:	mov	w20, w0
  414f30:	mov	w0, w20
  414f34:	bl	4026b0 <close@plt>
  414f38:	mov	w19, w0
  414f3c:	tbz	w0, #31, 414f50 <ferror@plt+0x12560>
  414f40:	bl	402970 <__errno_location@plt>
  414f44:	ldr	w1, [x0]
  414f48:	cmp	w1, #0x4
  414f4c:	b.eq	414f30 <ferror@plt+0x12540>  // b.none
  414f50:	mov	w0, w19
  414f54:	ldp	x19, x20, [sp, #16]
  414f58:	ldp	x29, x30, [sp], #32
  414f5c:	ret
  414f60:	sub	sp, sp, #0x2b0
  414f64:	stp	x29, x30, [sp]
  414f68:	mov	x29, sp
  414f6c:	stp	x19, x20, [sp, #16]
  414f70:	stp	x21, x22, [sp, #32]
  414f74:	stp	x23, x24, [sp, #48]
  414f78:	stp	x25, x26, [sp, #64]
  414f7c:	stp	x27, x28, [sp, #80]
  414f80:	str	x0, [sp, #96]
  414f84:	mov	x28, x1
  414f88:	mov	x25, x2
  414f8c:	and	w20, w3, #0xff
  414f90:	mov	x22, x5
  414f94:	mov	x23, x6
  414f98:	and	w26, w7, #0xff
  414f9c:	ldrb	w24, [sp, #688]
  414fa0:	ldrb	w27, [sp, #696]
  414fa4:	ands	w21, w4, #0xff
  414fa8:	b.ne	4150d0 <ferror@plt+0x126e0>  // b.any
  414fac:	cbnz	w20, 4150f8 <ferror@plt+0x12708>
  414fb0:	cbnz	w24, 415120 <ferror@plt+0x12730>
  414fb4:	add	x0, sp, #0x1d0
  414fb8:	bl	402770 <posix_spawn_file_actions_init@plt>
  414fbc:	mov	w19, w0
  414fc0:	cbnz	w0, 415164 <ferror@plt+0x12774>
  414fc4:	cbnz	w20, 415138 <ferror@plt+0x12748>
  414fc8:	cbnz	w21, 41518c <ferror@plt+0x1279c>
  414fcc:	cbnz	w20, 4151ac <ferror@plt+0x127bc>
  414fd0:	cbnz	w21, 4151e4 <ferror@plt+0x127f4>
  414fd4:	cbnz	w26, 415218 <ferror@plt+0x12828>
  414fd8:	eor	w0, w20, #0x1
  414fdc:	cmp	x22, #0x0
  414fe0:	cset	w1, ne  // ne = any
  414fe4:	tst	w1, w0
  414fe8:	b.ne	415244 <ferror@plt+0x12854>  // b.any
  414fec:	eor	w0, w21, #0x1
  414ff0:	cmp	x23, #0x0
  414ff4:	cset	w1, ne  // ne = any
  414ff8:	tst	w1, w0
  414ffc:	b.ne	41526c <ferror@plt+0x1287c>  // b.any
  415000:	cbz	w24, 415334 <ferror@plt+0x12944>
  415004:	add	x0, sp, #0x80
  415008:	bl	4028c0 <posix_spawnattr_init@plt>
  41500c:	mov	w19, w0
  415010:	str	wzr, [sp, #108]
  415014:	cbnz	w0, 415154 <ferror@plt+0x12764>
  415018:	add	x1, sp, #0x220
  41501c:	add	x0, sp, #0x80
  415020:	bl	402750 <posix_spawnattr_setsigmask@plt>
  415024:	mov	w19, w0
  415028:	str	w24, [sp, #108]
  41502c:	cbnz	w0, 415154 <ferror@plt+0x12764>
  415030:	mov	w1, #0x8                   	// #8
  415034:	add	x0, sp, #0x80
  415038:	bl	402710 <posix_spawnattr_setflags@plt>
  41503c:	mov	w19, w0
  415040:	cbnz	w0, 41532c <ferror@plt+0x1293c>
  415044:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  415048:	ldr	x5, [x0, #1088]
  41504c:	mov	x4, x25
  415050:	add	x3, sp, #0x80
  415054:	add	x2, sp, #0x1d0
  415058:	mov	x1, x28
  41505c:	add	x0, sp, #0x7c
  415060:	bl	402850 <posix_spawnp@plt>
  415064:	mov	w19, w0
  415068:	cbnz	w0, 41530c <ferror@plt+0x1291c>
  41506c:	add	x0, sp, #0x1d0
  415070:	bl	402660 <posix_spawn_file_actions_destroy@plt>
  415074:	add	x0, sp, #0x80
  415078:	bl	4025c0 <posix_spawnattr_destroy@plt>
  41507c:	cbnz	w24, 4152ec <ferror@plt+0x128fc>
  415080:	cbnz	w20, 4152fc <ferror@plt+0x1290c>
  415084:	cbz	w21, 4150ac <ferror@plt+0x126bc>
  415088:	ldr	w0, [sp, #684]
  41508c:	bl	414f20 <ferror@plt+0x12530>
  415090:	ldr	w0, [sp, #680]
  415094:	ldr	x1, [sp, #704]
  415098:	str	w0, [x1]
  41509c:	cbz	w20, 4150ac <ferror@plt+0x126bc>
  4150a0:	ldr	w0, [sp, #676]
  4150a4:	ldr	x1, [sp, #704]
  4150a8:	str	w0, [x1, #4]
  4150ac:	ldr	w0, [sp, #124]
  4150b0:	ldp	x19, x20, [sp, #16]
  4150b4:	ldp	x21, x22, [sp, #32]
  4150b8:	ldp	x23, x24, [sp, #48]
  4150bc:	ldp	x25, x26, [sp, #64]
  4150c0:	ldp	x27, x28, [sp, #80]
  4150c4:	ldp	x29, x30, [sp]
  4150c8:	add	sp, sp, #0x2b0
  4150cc:	ret
  4150d0:	add	x0, sp, #0x2a8
  4150d4:	bl	4156e0 <ferror@plt+0x12cf0>
  4150d8:	tbz	w0, #31, 414fac <ferror@plt+0x125bc>
  4150dc:	bl	402970 <__errno_location@plt>
  4150e0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  4150e4:	add	x2, x2, #0xfe0
  4150e8:	ldr	w1, [x0]
  4150ec:	mov	w0, #0x1                   	// #1
  4150f0:	bl	402420 <error@plt>
  4150f4:	b	414fac <ferror@plt+0x125bc>
  4150f8:	add	x0, sp, #0x2a0
  4150fc:	bl	4156e0 <ferror@plt+0x12cf0>
  415100:	tbz	w0, #31, 414fb0 <ferror@plt+0x125c0>
  415104:	bl	402970 <__errno_location@plt>
  415108:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  41510c:	add	x2, x2, #0xfe0
  415110:	ldr	w1, [x0]
  415114:	mov	w0, #0x1                   	// #1
  415118:	bl	402420 <error@plt>
  41511c:	b	414fb0 <ferror@plt+0x125c0>
  415120:	add	x2, sp, #0x220
  415124:	mov	x1, #0x0                   	// #0
  415128:	mov	w0, #0x2                   	// #2
  41512c:	bl	402430 <sigprocmask@plt>
  415130:	bl	411bd0 <ferror@plt+0xf1e0>
  415134:	b	414fb4 <ferror@plt+0x125c4>
  415138:	mov	w2, #0x0                   	// #0
  41513c:	ldr	w1, [sp, #672]
  415140:	add	x0, sp, #0x1d0
  415144:	bl	402510 <posix_spawn_file_actions_adddup2@plt>
  415148:	mov	w19, w0
  41514c:	cbz	w0, 414fc8 <ferror@plt+0x125d8>
  415150:	str	wzr, [sp, #108]
  415154:	add	x0, sp, #0x1d0
  415158:	bl	402660 <posix_spawn_file_actions_destroy@plt>
  41515c:	ldr	w0, [sp, #108]
  415160:	cbnz	w0, 415294 <ferror@plt+0x128a4>
  415164:	cbnz	w24, 4152a0 <ferror@plt+0x128b0>
  415168:	eor	w0, w26, #0x1
  41516c:	orr	w0, w27, w0
  415170:	cbnz	w0, 4152a8 <ferror@plt+0x128b8>
  415174:	cbnz	w21, 4152c4 <ferror@plt+0x128d4>
  415178:	cbnz	w20, 4152d8 <ferror@plt+0x128e8>
  41517c:	bl	402970 <__errno_location@plt>
  415180:	str	w19, [x0]
  415184:	mov	w0, #0xffffffff            	// #-1
  415188:	b	4150b0 <ferror@plt+0x126c0>
  41518c:	mov	w2, #0x1                   	// #1
  415190:	ldr	w1, [sp, #684]
  415194:	add	x0, sp, #0x1d0
  415198:	bl	402510 <posix_spawn_file_actions_adddup2@plt>
  41519c:	mov	w19, w0
  4151a0:	cbz	w0, 414fcc <ferror@plt+0x125dc>
  4151a4:	str	wzr, [sp, #108]
  4151a8:	b	415154 <ferror@plt+0x12764>
  4151ac:	ldr	w1, [sp, #672]
  4151b0:	add	x0, sp, #0x1d0
  4151b4:	bl	4026a0 <posix_spawn_file_actions_addclose@plt>
  4151b8:	mov	w19, w0
  4151bc:	cbnz	w0, 41531c <ferror@plt+0x1292c>
  4151c0:	cbnz	w21, 4151e4 <ferror@plt+0x127f4>
  4151c4:	cbz	w20, 414fd4 <ferror@plt+0x125e4>
  4151c8:	ldr	w1, [sp, #676]
  4151cc:	add	x0, sp, #0x1d0
  4151d0:	bl	4026a0 <posix_spawn_file_actions_addclose@plt>
  4151d4:	mov	w19, w0
  4151d8:	str	w21, [sp, #108]
  4151dc:	cbnz	w0, 415154 <ferror@plt+0x12764>
  4151e0:	b	414fd4 <ferror@plt+0x125e4>
  4151e4:	ldr	w1, [sp, #684]
  4151e8:	add	x0, sp, #0x1d0
  4151ec:	bl	4026a0 <posix_spawn_file_actions_addclose@plt>
  4151f0:	mov	w19, w0
  4151f4:	cbnz	w0, 415324 <ferror@plt+0x12934>
  4151f8:	cbnz	w20, 415368 <ferror@plt+0x12978>
  4151fc:	ldr	w1, [sp, #680]
  415200:	add	x0, sp, #0x1d0
  415204:	bl	4026a0 <posix_spawn_file_actions_addclose@plt>
  415208:	mov	w19, w0
  41520c:	cbz	w0, 414fd4 <ferror@plt+0x125e4>
  415210:	str	wzr, [sp, #108]
  415214:	b	415154 <ferror@plt+0x12764>
  415218:	mov	w4, #0x0                   	// #0
  41521c:	mov	w3, #0x2                   	// #2
  415220:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  415224:	add	x2, x2, #0x330
  415228:	mov	w1, w3
  41522c:	add	x0, sp, #0x1d0
  415230:	bl	4024c0 <posix_spawn_file_actions_addopen@plt>
  415234:	mov	w19, w0
  415238:	cbz	w0, 414fd8 <ferror@plt+0x125e8>
  41523c:	str	wzr, [sp, #108]
  415240:	b	415154 <ferror@plt+0x12764>
  415244:	mov	w4, #0x0                   	// #0
  415248:	mov	w3, #0x0                   	// #0
  41524c:	mov	x2, x22
  415250:	mov	w1, #0x0                   	// #0
  415254:	add	x0, sp, #0x1d0
  415258:	bl	4024c0 <posix_spawn_file_actions_addopen@plt>
  41525c:	mov	w19, w0
  415260:	cbz	w0, 414fec <ferror@plt+0x125fc>
  415264:	str	wzr, [sp, #108]
  415268:	b	415154 <ferror@plt+0x12764>
  41526c:	mov	w4, #0x0                   	// #0
  415270:	mov	w3, #0x1                   	// #1
  415274:	mov	x2, x23
  415278:	mov	w1, w3
  41527c:	add	x0, sp, #0x1d0
  415280:	bl	4024c0 <posix_spawn_file_actions_addopen@plt>
  415284:	mov	w19, w0
  415288:	cbz	w0, 415000 <ferror@plt+0x12610>
  41528c:	str	wzr, [sp, #108]
  415290:	b	415154 <ferror@plt+0x12764>
  415294:	add	x0, sp, #0x80
  415298:	bl	4025c0 <posix_spawnattr_destroy@plt>
  41529c:	b	415164 <ferror@plt+0x12774>
  4152a0:	bl	411bfc <ferror@plt+0xf20c>
  4152a4:	b	415168 <ferror@plt+0x12778>
  4152a8:	ldr	x3, [sp, #96]
  4152ac:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  4152b0:	add	x2, x2, #0x340
  4152b4:	mov	w1, w19
  4152b8:	mov	w0, w27
  4152bc:	bl	402420 <error@plt>
  4152c0:	b	415174 <ferror@plt+0x12784>
  4152c4:	ldr	w0, [sp, #680]
  4152c8:	bl	414f20 <ferror@plt+0x12530>
  4152cc:	ldr	w0, [sp, #684]
  4152d0:	bl	414f20 <ferror@plt+0x12530>
  4152d4:	b	415178 <ferror@plt+0x12788>
  4152d8:	ldr	w0, [sp, #672]
  4152dc:	bl	414f20 <ferror@plt+0x12530>
  4152e0:	ldr	w0, [sp, #676]
  4152e4:	bl	414f20 <ferror@plt+0x12530>
  4152e8:	b	41517c <ferror@plt+0x1278c>
  4152ec:	ldr	w0, [sp, #124]
  4152f0:	bl	415d60 <ferror@plt+0x13370>
  4152f4:	bl	411bfc <ferror@plt+0xf20c>
  4152f8:	b	415080 <ferror@plt+0x12690>
  4152fc:	ldr	w0, [sp, #672]
  415300:	bl	414f20 <ferror@plt+0x12530>
  415304:	cbz	w21, 4150a0 <ferror@plt+0x126b0>
  415308:	b	415088 <ferror@plt+0x12698>
  41530c:	str	w24, [sp, #108]
  415310:	b	415154 <ferror@plt+0x12764>
  415314:	str	w24, [sp, #108]
  415318:	b	415154 <ferror@plt+0x12764>
  41531c:	str	wzr, [sp, #108]
  415320:	b	415154 <ferror@plt+0x12764>
  415324:	str	wzr, [sp, #108]
  415328:	b	415154 <ferror@plt+0x12764>
  41532c:	str	w24, [sp, #108]
  415330:	b	415154 <ferror@plt+0x12764>
  415334:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  415338:	ldr	x5, [x0, #1088]
  41533c:	mov	x4, x25
  415340:	mov	x3, #0x0                   	// #0
  415344:	add	x2, sp, #0x1d0
  415348:	mov	x1, x28
  41534c:	add	x0, sp, #0x7c
  415350:	bl	402850 <posix_spawnp@plt>
  415354:	mov	w19, w0
  415358:	cbnz	w0, 415314 <ferror@plt+0x12924>
  41535c:	add	x0, sp, #0x1d0
  415360:	bl	402660 <posix_spawn_file_actions_destroy@plt>
  415364:	b	41507c <ferror@plt+0x1268c>
  415368:	ldr	w1, [sp, #676]
  41536c:	add	x0, sp, #0x1d0
  415370:	bl	4026a0 <posix_spawn_file_actions_addclose@plt>
  415374:	mov	w19, w0
  415378:	cbz	w0, 4151fc <ferror@plt+0x1280c>
  41537c:	str	wzr, [sp, #108]
  415380:	b	415154 <ferror@plt+0x12764>
  415384:	sub	sp, sp, #0x30
  415388:	stp	x29, x30, [sp, #32]
  41538c:	add	x29, sp, #0x20
  415390:	str	x6, [sp, #16]
  415394:	strb	w5, [sp, #8]
  415398:	strb	w4, [sp]
  41539c:	mov	w7, w3
  4153a0:	mov	x6, #0x0                   	// #0
  4153a4:	mov	x5, #0x0                   	// #0
  4153a8:	mov	w4, #0x1                   	// #1
  4153ac:	mov	w3, w4
  4153b0:	bl	414f60 <ferror@plt+0x12570>
  4153b4:	ldp	x29, x30, [sp, #32]
  4153b8:	add	sp, sp, #0x30
  4153bc:	ret
  4153c0:	sub	sp, sp, #0x50
  4153c4:	stp	x29, x30, [sp, #32]
  4153c8:	add	x29, sp, #0x20
  4153cc:	str	x19, [sp, #48]
  4153d0:	mov	x19, x7
  4153d4:	add	x7, sp, #0x48
  4153d8:	str	x7, [sp, #16]
  4153dc:	strb	w6, [sp, #8]
  4153e0:	strb	w5, [sp]
  4153e4:	mov	w7, w4
  4153e8:	mov	x6, #0x0                   	// #0
  4153ec:	mov	x5, x3
  4153f0:	mov	w4, #0x1                   	// #1
  4153f4:	mov	w3, #0x0                   	// #0
  4153f8:	bl	414f60 <ferror@plt+0x12570>
  4153fc:	cmn	w0, #0x1
  415400:	b.eq	41540c <ferror@plt+0x12a1c>  // b.none
  415404:	ldr	w1, [sp, #72]
  415408:	str	w1, [x19]
  41540c:	ldr	x19, [sp, #48]
  415410:	ldp	x29, x30, [sp, #32]
  415414:	add	sp, sp, #0x50
  415418:	ret
  41541c:	sub	sp, sp, #0x50
  415420:	stp	x29, x30, [sp, #32]
  415424:	add	x29, sp, #0x20
  415428:	str	x19, [sp, #48]
  41542c:	mov	x19, x7
  415430:	add	x7, sp, #0x48
  415434:	str	x7, [sp, #16]
  415438:	strb	w6, [sp, #8]
  41543c:	strb	w5, [sp]
  415440:	mov	w7, w4
  415444:	mov	x6, x3
  415448:	mov	x5, #0x0                   	// #0
  41544c:	mov	w4, #0x0                   	// #0
  415450:	mov	w3, #0x1                   	// #1
  415454:	bl	414f60 <ferror@plt+0x12570>
  415458:	cmn	w0, #0x1
  41545c:	b.eq	415468 <ferror@plt+0x12a78>  // b.none
  415460:	ldr	w1, [sp, #76]
  415464:	str	w1, [x19]
  415468:	ldr	x19, [sp, #48]
  41546c:	ldp	x29, x30, [sp, #32]
  415470:	add	sp, sp, #0x50
  415474:	ret
  415478:	stp	x29, x30, [sp, #-16]!
  41547c:	mov	x29, sp
  415480:	bl	4028e0 <mkstemp@plt>
  415484:	bl	415688 <ferror@plt+0x12c98>
  415488:	ldp	x29, x30, [sp], #16
  41548c:	ret
  415490:	stp	x29, x30, [sp, #-144]!
  415494:	mov	x29, sp
  415498:	add	x2, sp, #0x10
  41549c:	mov	x1, x0
  4154a0:	mov	w0, #0x0                   	// #0
  4154a4:	bl	402990 <__xstat@plt>
  4154a8:	cbnz	w0, 4154c4 <ferror@plt+0x12ad4>
  4154ac:	ldr	w0, [sp, #32]
  4154b0:	and	w0, w0, #0xf000
  4154b4:	cmp	w0, #0x4, lsl #12
  4154b8:	cset	w0, eq  // eq = none
  4154bc:	ldp	x29, x30, [sp], #144
  4154c0:	ret
  4154c4:	mov	w0, #0x0                   	// #0
  4154c8:	b	4154bc <ferror@plt+0x12acc>
  4154cc:	stp	x29, x30, [sp, #-80]!
  4154d0:	mov	x29, sp
  4154d4:	stp	x19, x20, [sp, #16]
  4154d8:	stp	x21, x22, [sp, #32]
  4154dc:	stp	x23, x24, [sp, #48]
  4154e0:	stp	x25, x26, [sp, #64]
  4154e4:	mov	x23, x0
  4154e8:	mov	x25, x1
  4154ec:	mov	x21, x2
  4154f0:	and	w19, w4, #0xff
  4154f4:	cbz	x3, 41551c <ferror@plt+0x12b2c>
  4154f8:	mov	x20, x3
  4154fc:	ldrb	w0, [x3]
  415500:	cbz	w0, 41552c <ferror@plt+0x12b3c>
  415504:	mov	x0, x3
  415508:	bl	4023d0 <strlen@plt>
  41550c:	cmp	x0, #0x5
  415510:	mov	x24, #0x5                   	// #5
  415514:	csel	x24, x0, x24, ls  // ls = plast
  415518:	b	415538 <ferror@plt+0x12b48>
  41551c:	mov	x24, #0x4                   	// #4
  415520:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x306c>
  415524:	add	x20, x20, #0x28
  415528:	b	415538 <ferror@plt+0x12b48>
  41552c:	mov	x24, #0x4                   	// #4
  415530:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x306c>
  415534:	add	x20, x20, #0x28
  415538:	add	x26, x24, #0x7
  41553c:	cbnz	w19, 4155c4 <ferror@plt+0x12bd4>
  415540:	cbz	x21, 4155f8 <ferror@plt+0x12c08>
  415544:	mov	x0, x21
  415548:	bl	4023d0 <strlen@plt>
  41554c:	mov	x22, x0
  415550:	cbnz	x0, 415634 <ferror@plt+0x12c44>
  415554:	mov	w19, #0x0                   	// #0
  415558:	and	x2, x19, #0xff
  41555c:	add	x2, x2, x22
  415560:	add	x2, x2, x26
  415564:	cmp	x2, x25
  415568:	b.hi	41564c <ferror@plt+0x12c5c>  // b.pmore
  41556c:	mov	x2, x22
  415570:	mov	x1, x21
  415574:	mov	x0, x23
  415578:	bl	402390 <memcpy@plt>
  41557c:	eor	w19, w19, #0x1
  415580:	and	x19, x19, #0xff
  415584:	mov	x5, x20
  415588:	mov	w4, w24
  41558c:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x406c>
  415590:	add	x3, x3, #0x0
  415594:	add	x3, x3, x19
  415598:	mov	x2, #0xffffffffffffffff    	// #-1
  41559c:	mov	w1, #0x1                   	// #1
  4155a0:	add	x0, x23, x22
  4155a4:	bl	4023f0 <__sprintf_chk@plt>
  4155a8:	mov	w0, #0x0                   	// #0
  4155ac:	ldp	x19, x20, [sp, #16]
  4155b0:	ldp	x21, x22, [sp, #32]
  4155b4:	ldp	x23, x24, [sp, #48]
  4155b8:	ldp	x25, x26, [sp, #64]
  4155bc:	ldp	x29, x30, [sp], #80
  4155c0:	ret
  4155c4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  4155c8:	add	x0, x0, #0x2c0
  4155cc:	bl	402450 <secure_getenv@plt>
  4155d0:	mov	x19, x0
  4155d4:	cbz	x0, 4155e4 <ferror@plt+0x12bf4>
  4155d8:	bl	415490 <ferror@plt+0x12aa0>
  4155dc:	and	w0, w0, #0xff
  4155e0:	cbnz	w0, 415664 <ferror@plt+0x12c74>
  4155e4:	cbz	x21, 4155f8 <ferror@plt+0x12c08>
  4155e8:	mov	x0, x21
  4155ec:	bl	415490 <ferror@plt+0x12aa0>
  4155f0:	and	w0, w0, #0xff
  4155f4:	cbnz	w0, 415660 <ferror@plt+0x12c70>
  4155f8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x306c>
  4155fc:	add	x0, x0, #0xff8
  415600:	bl	415490 <ferror@plt+0x12aa0>
  415604:	and	w0, w0, #0xff
  415608:	cbz	w0, 415620 <ferror@plt+0x12c30>
  41560c:	mov	x22, #0x4                   	// #4
  415610:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x306c>
  415614:	add	x21, x21, #0xff8
  415618:	mov	w19, #0x1                   	// #1
  41561c:	b	415558 <ferror@plt+0x12b68>
  415620:	bl	402970 <__errno_location@plt>
  415624:	mov	w1, #0x2                   	// #2
  415628:	str	w1, [x0]
  41562c:	mov	w0, #0xffffffff            	// #-1
  415630:	b	4155ac <ferror@plt+0x12bbc>
  415634:	add	x0, x21, x0
  415638:	ldurb	w0, [x0, #-1]
  41563c:	cmp	w0, #0x2f
  415640:	b.eq	415554 <ferror@plt+0x12b64>  // b.none
  415644:	mov	w19, #0x1                   	// #1
  415648:	b	415558 <ferror@plt+0x12b68>
  41564c:	bl	402970 <__errno_location@plt>
  415650:	mov	w1, #0x16                  	// #22
  415654:	str	w1, [x0]
  415658:	mov	w0, #0xffffffff            	// #-1
  41565c:	b	4155ac <ferror@plt+0x12bbc>
  415660:	mov	x19, x21
  415664:	mov	x21, x19
  415668:	b	415544 <ferror@plt+0x12b54>
  41566c:	stp	x29, x30, [sp, #-16]!
  415670:	mov	x29, sp
  415674:	mov	w2, #0x3                   	// #3
  415678:	mov	w1, #0x0                   	// #0
  41567c:	bl	41688c <ferror@plt+0x13e9c>
  415680:	ldp	x29, x30, [sp], #16
  415684:	ret
  415688:	stp	x29, x30, [sp, #-48]!
  41568c:	mov	x29, sp
  415690:	stp	x19, x20, [sp, #16]
  415694:	mov	w19, w0
  415698:	cmp	w0, #0x2
  41569c:	b.ls	4156b0 <ferror@plt+0x12cc0>  // b.plast
  4156a0:	mov	w0, w19
  4156a4:	ldp	x19, x20, [sp, #16]
  4156a8:	ldp	x29, x30, [sp], #48
  4156ac:	ret
  4156b0:	stp	x21, x22, [sp, #32]
  4156b4:	bl	41566c <ferror@plt+0x12c7c>
  4156b8:	mov	w21, w0
  4156bc:	bl	402970 <__errno_location@plt>
  4156c0:	mov	x20, x0
  4156c4:	ldr	w22, [x0]
  4156c8:	mov	w0, w19
  4156cc:	bl	4026b0 <close@plt>
  4156d0:	str	w22, [x20]
  4156d4:	mov	w19, w21
  4156d8:	ldp	x21, x22, [sp, #32]
  4156dc:	b	4156a0 <ferror@plt+0x12cb0>
  4156e0:	stp	x29, x30, [sp, #-48]!
  4156e4:	mov	x29, sp
  4156e8:	stp	x19, x20, [sp, #16]
  4156ec:	mov	x19, x0
  4156f0:	bl	402480 <pipe@plt>
  4156f4:	cbnz	w0, 415768 <ferror@plt+0x12d78>
  4156f8:	mov	w20, w0
  4156fc:	ldr	w0, [x19]
  415700:	bl	415688 <ferror@plt+0x12c98>
  415704:	str	w0, [x19]
  415708:	tbnz	w0, #31, 415738 <ferror@plt+0x12d48>
  41570c:	ldr	w0, [x19, #4]
  415710:	bl	415688 <ferror@plt+0x12c98>
  415714:	str	w0, [x19, #4]
  415718:	tbnz	w0, #31, 41572c <ferror@plt+0x12d3c>
  41571c:	mov	w0, w20
  415720:	ldp	x19, x20, [sp, #16]
  415724:	ldp	x29, x30, [sp], #48
  415728:	ret
  41572c:	stp	x21, x22, [sp, #32]
  415730:	mov	w20, #0x1                   	// #1
  415734:	b	41573c <ferror@plt+0x12d4c>
  415738:	stp	x21, x22, [sp, #32]
  41573c:	bl	402970 <__errno_location@plt>
  415740:	mov	x21, x0
  415744:	ldr	w22, [x0]
  415748:	mov	w0, #0x1                   	// #1
  41574c:	sub	w20, w0, w20
  415750:	ldr	w0, [x19, w20, sxtw #2]
  415754:	bl	4026b0 <close@plt>
  415758:	str	w22, [x21]
  41575c:	mov	w20, #0xffffffff            	// #-1
  415760:	ldp	x21, x22, [sp, #32]
  415764:	b	41571c <ferror@plt+0x12d2c>
  415768:	mov	w20, #0xffffffff            	// #-1
  41576c:	b	41571c <ferror@plt+0x12d2c>
  415770:	stp	x29, x30, [sp, #-96]!
  415774:	mov	x29, sp
  415778:	stp	x19, x20, [sp, #16]
  41577c:	stp	x21, x22, [sp, #32]
  415780:	str	x23, [sp, #48]
  415784:	mov	w21, w0
  415788:	mov	w22, w1
  41578c:	mov	x20, x2
  415790:	mov	w23, w3
  415794:	mov	x0, x4
  415798:	ldp	x2, x3, [x5]
  41579c:	stp	x2, x3, [sp, #64]
  4157a0:	ldp	x2, x3, [x5, #16]
  4157a4:	stp	x2, x3, [sp, #80]
  4157a8:	add	x1, sp, #0x40
  4157ac:	bl	4166bc <ferror@plt+0x13ccc>
  4157b0:	cbz	x0, 415814 <ferror@plt+0x12e24>
  4157b4:	mov	x19, x0
  4157b8:	cbz	x20, 4157f8 <ferror@plt+0x12e08>
  4157bc:	mov	x5, x0
  4157c0:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x206c>
  4157c4:	add	x4, x4, #0x740
  4157c8:	mov	w3, w23
  4157cc:	mov	x2, x20
  4157d0:	mov	w1, w22
  4157d4:	mov	w0, w21
  4157d8:	bl	4029c0 <error_at_line@plt>
  4157dc:	mov	x0, x19
  4157e0:	bl	402810 <free@plt>
  4157e4:	ldp	x19, x20, [sp, #16]
  4157e8:	ldp	x21, x22, [sp, #32]
  4157ec:	ldr	x23, [sp, #48]
  4157f0:	ldp	x29, x30, [sp], #96
  4157f4:	ret
  4157f8:	mov	x3, x0
  4157fc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  415800:	add	x2, x2, #0x740
  415804:	mov	w1, w22
  415808:	mov	w0, w21
  41580c:	bl	402420 <error@plt>
  415810:	b	4157dc <ferror@plt+0x12dec>
  415814:	bl	402970 <__errno_location@plt>
  415818:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  41581c:	add	x2, x2, #0x10
  415820:	ldr	w1, [x0]
  415824:	mov	w0, #0x0                   	// #0
  415828:	bl	402420 <error@plt>
  41582c:	bl	402720 <abort@plt>
  415830:	stp	x29, x30, [sp, #-48]!
  415834:	mov	x29, sp
  415838:	ldp	x4, x5, [x3]
  41583c:	stp	x4, x5, [sp, #16]
  415840:	ldp	x4, x5, [x3, #16]
  415844:	stp	x4, x5, [sp, #32]
  415848:	add	x5, sp, #0x10
  41584c:	mov	x4, x2
  415850:	mov	w3, #0x0                   	// #0
  415854:	mov	x2, #0x0                   	// #0
  415858:	bl	415770 <ferror@plt+0x12d80>
  41585c:	ldp	x29, x30, [sp], #48
  415860:	ret
  415864:	sub	sp, sp, #0x50
  415868:	stp	x29, x30, [sp, #32]
  41586c:	add	x29, sp, #0x20
  415870:	stp	x19, x20, [sp, #48]
  415874:	str	x21, [sp, #64]
  415878:	mov	x20, x0
  41587c:	mov	x21, x4
  415880:	mov	x19, x5
  415884:	cbz	x1, 415948 <ferror@plt+0x12f58>
  415888:	mov	x5, x3
  41588c:	mov	x4, x2
  415890:	mov	x3, x1
  415894:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415898:	add	x2, x2, #0x30
  41589c:	mov	w1, #0x1                   	// #1
  4158a0:	bl	4027a0 <__fprintf_chk@plt>
  4158a4:	mov	w4, #0x7e0                 	// #2016
  4158a8:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x406c>
  4158ac:	add	x3, x3, #0x48
  4158b0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  4158b4:	add	x2, x2, #0x340
  4158b8:	mov	w1, #0x1                   	// #1
  4158bc:	mov	x0, x20
  4158c0:	bl	4027a0 <__fprintf_chk@plt>
  4158c4:	mov	x3, x20
  4158c8:	mov	x2, #0xca                  	// #202
  4158cc:	mov	x1, #0x1                   	// #1
  4158d0:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x406c>
  4158d4:	add	x0, x0, #0x50
  4158d8:	bl	4023c0 <fwrite_unlocked@plt>
  4158dc:	cmp	x19, #0x5
  4158e0:	b.eq	415a74 <ferror@plt+0x13084>  // b.none
  4158e4:	b.ls	415964 <ferror@plt+0x12f74>  // b.plast
  4158e8:	cmp	x19, #0x8
  4158ec:	b.eq	415ad4 <ferror@plt+0x130e4>  // b.none
  4158f0:	b.ls	4159e0 <ferror@plt+0x12ff0>  // b.plast
  4158f4:	cmp	x19, #0x9
  4158f8:	b.ne	415b18 <ferror@plt+0x13128>  // b.any
  4158fc:	ldr	x0, [x21, #64]
  415900:	str	x0, [sp, #24]
  415904:	ldr	x0, [x21, #56]
  415908:	str	x0, [sp, #16]
  41590c:	ldr	x0, [x21, #48]
  415910:	str	x0, [sp, #8]
  415914:	ldr	x0, [x21, #40]
  415918:	str	x0, [sp]
  41591c:	ldr	x7, [x21, #32]
  415920:	ldr	x6, [x21, #24]
  415924:	ldr	x5, [x21, #16]
  415928:	ldr	x4, [x21, #8]
  41592c:	ldr	x3, [x21]
  415930:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415934:	add	x2, x2, #0x238
  415938:	mov	w1, #0x1                   	// #1
  41593c:	mov	x0, x20
  415940:	bl	4027a0 <__fprintf_chk@plt>
  415944:	b	4159cc <ferror@plt+0x12fdc>
  415948:	mov	x4, x3
  41594c:	mov	x3, x2
  415950:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415954:	add	x2, x2, #0x40
  415958:	mov	w1, #0x1                   	// #1
  41595c:	bl	4027a0 <__fprintf_chk@plt>
  415960:	b	4158a4 <ferror@plt+0x12eb4>
  415964:	cmp	x19, #0x3
  415968:	b.eq	415a50 <ferror@plt+0x13060>  // b.none
  41596c:	b.ls	415998 <ferror@plt+0x12fa8>  // b.plast
  415970:	ldr	x6, [x21, #24]
  415974:	ldr	x5, [x21, #16]
  415978:	ldr	x4, [x21, #8]
  41597c:	ldr	x3, [x21]
  415980:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415984:	add	x2, x2, #0x168
  415988:	mov	w1, #0x1                   	// #1
  41598c:	mov	x0, x20
  415990:	bl	4027a0 <__fprintf_chk@plt>
  415994:	b	4159cc <ferror@plt+0x12fdc>
  415998:	cmp	x19, #0x2
  41599c:	b.eq	415a30 <ferror@plt+0x13040>  // b.none
  4159a0:	cmp	x19, #0x3
  4159a4:	b.eq	415b18 <ferror@plt+0x13128>  // b.none
  4159a8:	cbz	x19, 415a2c <ferror@plt+0x1303c>
  4159ac:	cmp	x19, #0x1
  4159b0:	b.ne	415b18 <ferror@plt+0x13128>  // b.any
  4159b4:	ldr	x3, [x21]
  4159b8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  4159bc:	add	x2, x2, #0x120
  4159c0:	mov	w1, #0x1                   	// #1
  4159c4:	mov	x0, x20
  4159c8:	bl	4027a0 <__fprintf_chk@plt>
  4159cc:	ldp	x19, x20, [sp, #48]
  4159d0:	ldr	x21, [sp, #64]
  4159d4:	ldp	x29, x30, [sp, #32]
  4159d8:	add	sp, sp, #0x50
  4159dc:	ret
  4159e0:	cmp	x19, #0x6
  4159e4:	b.eq	415aa0 <ferror@plt+0x130b0>  // b.none
  4159e8:	cmp	x19, #0x7
  4159ec:	b.ne	415b18 <ferror@plt+0x13128>  // b.any
  4159f0:	ldr	x0, [x21, #48]
  4159f4:	str	x0, [sp, #8]
  4159f8:	ldr	x0, [x21, #40]
  4159fc:	str	x0, [sp]
  415a00:	ldr	x7, [x21, #32]
  415a04:	ldr	x6, [x21, #24]
  415a08:	ldr	x5, [x21, #16]
  415a0c:	ldr	x4, [x21, #8]
  415a10:	ldr	x3, [x21]
  415a14:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415a18:	add	x2, x2, #0x1d8
  415a1c:	mov	w1, #0x1                   	// #1
  415a20:	mov	x0, x20
  415a24:	bl	4027a0 <__fprintf_chk@plt>
  415a28:	b	4159cc <ferror@plt+0x12fdc>
  415a2c:	bl	402720 <abort@plt>
  415a30:	ldr	x4, [x21, #8]
  415a34:	ldr	x3, [x21]
  415a38:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415a3c:	add	x2, x2, #0x130
  415a40:	mov	w1, #0x1                   	// #1
  415a44:	mov	x0, x20
  415a48:	bl	4027a0 <__fprintf_chk@plt>
  415a4c:	b	4159cc <ferror@plt+0x12fdc>
  415a50:	ldr	x5, [x21, #16]
  415a54:	ldr	x4, [x21, #8]
  415a58:	ldr	x3, [x21]
  415a5c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415a60:	add	x2, x2, #0x148
  415a64:	mov	w1, #0x1                   	// #1
  415a68:	mov	x0, x20
  415a6c:	bl	4027a0 <__fprintf_chk@plt>
  415a70:	b	4159cc <ferror@plt+0x12fdc>
  415a74:	ldr	x7, [x21, #32]
  415a78:	ldr	x6, [x21, #24]
  415a7c:	ldr	x5, [x21, #16]
  415a80:	ldr	x4, [x21, #8]
  415a84:	ldr	x3, [x21]
  415a88:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415a8c:	add	x2, x2, #0x188
  415a90:	mov	w1, #0x1                   	// #1
  415a94:	mov	x0, x20
  415a98:	bl	4027a0 <__fprintf_chk@plt>
  415a9c:	b	4159cc <ferror@plt+0x12fdc>
  415aa0:	ldr	x0, [x21, #40]
  415aa4:	str	x0, [sp]
  415aa8:	ldr	x7, [x21, #32]
  415aac:	ldr	x6, [x21, #24]
  415ab0:	ldr	x5, [x21, #16]
  415ab4:	ldr	x4, [x21, #8]
  415ab8:	ldr	x3, [x21]
  415abc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415ac0:	add	x2, x2, #0x1b0
  415ac4:	mov	w1, #0x1                   	// #1
  415ac8:	mov	x0, x20
  415acc:	bl	4027a0 <__fprintf_chk@plt>
  415ad0:	b	4159cc <ferror@plt+0x12fdc>
  415ad4:	ldr	x0, [x21, #56]
  415ad8:	str	x0, [sp, #16]
  415adc:	ldr	x0, [x21, #48]
  415ae0:	str	x0, [sp, #8]
  415ae4:	ldr	x0, [x21, #40]
  415ae8:	str	x0, [sp]
  415aec:	ldr	x7, [x21, #32]
  415af0:	ldr	x6, [x21, #24]
  415af4:	ldr	x5, [x21, #16]
  415af8:	ldr	x4, [x21, #8]
  415afc:	ldr	x3, [x21]
  415b00:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415b04:	add	x2, x2, #0x208
  415b08:	mov	w1, #0x1                   	// #1
  415b0c:	mov	x0, x20
  415b10:	bl	4027a0 <__fprintf_chk@plt>
  415b14:	b	4159cc <ferror@plt+0x12fdc>
  415b18:	ldr	x0, [x21, #64]
  415b1c:	str	x0, [sp, #24]
  415b20:	ldr	x0, [x21, #56]
  415b24:	str	x0, [sp, #16]
  415b28:	ldr	x0, [x21, #48]
  415b2c:	str	x0, [sp, #8]
  415b30:	ldr	x0, [x21, #40]
  415b34:	str	x0, [sp]
  415b38:	ldr	x7, [x21, #32]
  415b3c:	ldr	x6, [x21, #24]
  415b40:	ldr	x5, [x21, #16]
  415b44:	ldr	x4, [x21, #8]
  415b48:	ldr	x3, [x21]
  415b4c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415b50:	add	x2, x2, #0x270
  415b54:	mov	w1, #0x1                   	// #1
  415b58:	mov	x0, x20
  415b5c:	bl	4027a0 <__fprintf_chk@plt>
  415b60:	b	4159cc <ferror@plt+0x12fdc>
  415b64:	stp	x29, x30, [sp, #-16]!
  415b68:	mov	x29, sp
  415b6c:	ldr	x5, [x4]
  415b70:	cbz	x5, 415b90 <ferror@plt+0x131a0>
  415b74:	mov	x5, #0x0                   	// #0
  415b78:	add	x5, x5, #0x1
  415b7c:	ldr	x6, [x4, x5, lsl #3]
  415b80:	cbnz	x6, 415b78 <ferror@plt+0x13188>
  415b84:	bl	415864 <ferror@plt+0x12e74>
  415b88:	ldp	x29, x30, [sp], #16
  415b8c:	ret
  415b90:	mov	x5, #0x0                   	// #0
  415b94:	b	415b84 <ferror@plt+0x13194>
  415b98:	stp	x29, x30, [sp, #-96]!
  415b9c:	mov	x29, sp
  415ba0:	ldr	x7, [x4]
  415ba4:	ldr	w8, [x4, #24]
  415ba8:	ldr	x11, [x4, #8]
  415bac:	add	x4, sp, #0x10
  415bb0:	mov	x5, #0x0                   	// #0
  415bb4:	b	415bf0 <ferror@plt+0x13200>
  415bb8:	add	w9, w8, #0x8
  415bbc:	cmp	w9, #0x0
  415bc0:	b.le	415c04 <ferror@plt+0x13214>
  415bc4:	add	x10, x7, #0xf
  415bc8:	mov	w8, w9
  415bcc:	mov	x6, x7
  415bd0:	and	x7, x10, #0xfffffffffffffff8
  415bd4:	ldr	x6, [x6]
  415bd8:	str	x6, [x4]
  415bdc:	cbz	x6, 415c10 <ferror@plt+0x13220>
  415be0:	add	x5, x5, #0x1
  415be4:	add	x4, x4, #0x8
  415be8:	cmp	x5, #0xa
  415bec:	b.eq	415c10 <ferror@plt+0x13220>  // b.none
  415bf0:	tbnz	w8, #31, 415bb8 <ferror@plt+0x131c8>
  415bf4:	add	x9, x7, #0xf
  415bf8:	mov	x6, x7
  415bfc:	and	x7, x9, #0xfffffffffffffff8
  415c00:	b	415bd4 <ferror@plt+0x131e4>
  415c04:	add	x6, x11, w8, sxtw
  415c08:	mov	w8, w9
  415c0c:	b	415bd4 <ferror@plt+0x131e4>
  415c10:	add	x4, sp, #0x10
  415c14:	bl	415864 <ferror@plt+0x12e74>
  415c18:	ldp	x29, x30, [sp], #96
  415c1c:	ret
  415c20:	stp	x29, x30, [sp, #-240]!
  415c24:	mov	x29, sp
  415c28:	str	x4, [sp, #208]
  415c2c:	str	x5, [sp, #216]
  415c30:	str	x6, [sp, #224]
  415c34:	str	x7, [sp, #232]
  415c38:	str	q0, [sp, #80]
  415c3c:	str	q1, [sp, #96]
  415c40:	str	q2, [sp, #112]
  415c44:	str	q3, [sp, #128]
  415c48:	str	q4, [sp, #144]
  415c4c:	str	q5, [sp, #160]
  415c50:	str	q6, [sp, #176]
  415c54:	str	q7, [sp, #192]
  415c58:	add	x4, sp, #0xf0
  415c5c:	str	x4, [sp, #48]
  415c60:	str	x4, [sp, #56]
  415c64:	add	x4, sp, #0xd0
  415c68:	str	x4, [sp, #64]
  415c6c:	mov	w4, #0xffffffe0            	// #-32
  415c70:	str	w4, [sp, #72]
  415c74:	mov	w4, #0xffffff80            	// #-128
  415c78:	str	w4, [sp, #76]
  415c7c:	ldp	x4, x5, [sp, #48]
  415c80:	stp	x4, x5, [sp, #16]
  415c84:	ldp	x4, x5, [sp, #64]
  415c88:	stp	x4, x5, [sp, #32]
  415c8c:	add	x4, sp, #0x10
  415c90:	bl	415b98 <ferror@plt+0x131a8>
  415c94:	ldp	x29, x30, [sp], #240
  415c98:	ret
  415c9c:	stp	x29, x30, [sp, #-16]!
  415ca0:	mov	x29, sp
  415ca4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  415ca8:	add	x2, x2, #0x560
  415cac:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x406c>
  415cb0:	add	x1, x1, #0x2b0
  415cb4:	mov	w0, #0x1                   	// #1
  415cb8:	bl	402600 <__printf_chk@plt>
  415cbc:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x406c>
  415cc0:	add	x3, x3, #0x2c8
  415cc4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x6c>
  415cc8:	add	x2, x2, #0x690
  415ccc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x406c>
  415cd0:	add	x1, x1, #0x2e8
  415cd4:	mov	w0, #0x1                   	// #1
  415cd8:	bl	402600 <__printf_chk@plt>
  415cdc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  415ce0:	ldr	x3, [x0, #1072]
  415ce4:	mov	x2, #0x3f                  	// #63
  415ce8:	mov	x1, #0x1                   	// #1
  415cec:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x406c>
  415cf0:	add	x0, x0, #0x300
  415cf4:	bl	4023c0 <fwrite_unlocked@plt>
  415cf8:	ldp	x29, x30, [sp], #16
  415cfc:	ret
  415d00:	stp	x29, x30, [sp, #-32]!
  415d04:	mov	x29, sp
  415d08:	stp	x19, x20, [sp, #16]
  415d0c:	adrp	x19, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  415d10:	add	x19, x19, #0xc38
  415d14:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1906c>
  415d18:	ldr	w1, [x19]
  415d1c:	sxtw	x0, w1
  415d20:	cbz	w1, 415d54 <ferror@plt+0x13364>
  415d24:	sub	x0, x0, #0x1
  415d28:	str	w0, [x19]
  415d2c:	ldr	x1, [x20, #1008]
  415d30:	lsl	x0, x0, #3
  415d34:	ldr	w1, [x1, x0]
  415d38:	cbz	w1, 415d18 <ferror@plt+0x13328>
  415d3c:	ldr	x1, [x20, #1008]
  415d40:	add	x0, x1, x0
  415d44:	ldr	w0, [x0, #4]
  415d48:	mov	w1, #0x1                   	// #1
  415d4c:	bl	4024d0 <kill@plt>
  415d50:	b	415d18 <ferror@plt+0x13328>
  415d54:	ldp	x19, x20, [sp, #16]
  415d58:	ldp	x29, x30, [sp], #32
  415d5c:	ret
  415d60:	stp	x29, x30, [sp, #-64]!
  415d64:	mov	x29, sp
  415d68:	stp	x19, x20, [sp, #16]
  415d6c:	mov	w19, w0
  415d70:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  415d74:	ldrb	w0, [x0, #3132]
  415d78:	cbz	w0, 415e08 <ferror@plt+0x13418>
  415d7c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  415d80:	ldr	x1, [x0, #1008]
  415d84:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  415d88:	ldr	w3, [x0, #3128]
  415d8c:	add	x3, x1, w3, sxtw #3
  415d90:	cmp	x1, x3
  415d94:	b.cs	415dac <ferror@plt+0x133bc>  // b.hs, b.nlast
  415d98:	ldr	w2, [x1]
  415d9c:	cbz	w2, 415e30 <ferror@plt+0x13440>
  415da0:	add	x1, x1, #0x8
  415da4:	cmp	x3, x1
  415da8:	b.hi	415d98 <ferror@plt+0x133a8>  // b.pmore
  415dac:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  415db0:	ldr	w0, [x0, #3128]
  415db4:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1906c>
  415db8:	ldr	x20, [x1, #1016]
  415dbc:	cmp	x20, w0, sxtw
  415dc0:	b.eq	415e40 <ferror@plt+0x13450>  // b.none
  415dc4:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  415dc8:	ldr	x3, [x2, #1008]
  415dcc:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  415dd0:	ldr	w1, [x0, #3128]
  415dd4:	add	x1, x3, w1, sxtw #3
  415dd8:	str	w19, [x1, #4]
  415ddc:	ldr	x2, [x2, #1008]
  415de0:	ldr	w1, [x0, #3128]
  415de4:	sbfiz	x1, x1, #3, #32
  415de8:	mov	w3, #0x1                   	// #1
  415dec:	str	w3, [x2, x1]
  415df0:	ldr	w1, [x0, #3128]
  415df4:	add	w1, w1, w3
  415df8:	str	w1, [x0, #3128]
  415dfc:	ldp	x19, x20, [sp, #16]
  415e00:	ldp	x29, x30, [sp], #64
  415e04:	ret
  415e08:	adrp	x20, 415000 <ferror@plt+0x12610>
  415e0c:	add	x20, x20, #0xd00
  415e10:	mov	x0, x20
  415e14:	bl	4174e0 <_obstack_memory_used@@Base+0x54c>
  415e18:	mov	x0, x20
  415e1c:	bl	411a44 <ferror@plt+0xf054>
  415e20:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  415e24:	mov	w1, #0x1                   	// #1
  415e28:	strb	w1, [x0, #3132]
  415e2c:	b	415d7c <ferror@plt+0x1338c>
  415e30:	str	w19, [x1, #4]
  415e34:	mov	w0, #0x1                   	// #1
  415e38:	str	w0, [x1]
  415e3c:	b	415dfc <ferror@plt+0x1340c>
  415e40:	stp	x21, x22, [sp, #32]
  415e44:	str	x23, [sp, #48]
  415e48:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  415e4c:	ldr	x22, [x0, #1008]
  415e50:	lsl	x23, x20, #1
  415e54:	lsl	x0, x20, #4
  415e58:	bl	402570 <malloc@plt>
  415e5c:	mov	x21, x0
  415e60:	cbz	x0, 415ea8 <ferror@plt+0x134b8>
  415e64:	lsl	x2, x20, #3
  415e68:	mov	x1, x22
  415e6c:	bl	402390 <memcpy@plt>
  415e70:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  415e74:	add	x1, x0, #0x3f0
  415e78:	str	x21, [x0, #1008]
  415e7c:	str	x23, [x1, #8]
  415e80:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  415e84:	add	x0, x0, #0xc38
  415e88:	add	x0, x0, #0x8
  415e8c:	cmp	x22, x0
  415e90:	b.eq	415eb8 <ferror@plt+0x134c8>  // b.none
  415e94:	mov	x0, x22
  415e98:	bl	402810 <free@plt>
  415e9c:	ldp	x21, x22, [sp, #32]
  415ea0:	ldr	x23, [sp, #48]
  415ea4:	b	415dc4 <ferror@plt+0x133d4>
  415ea8:	mov	w1, #0x1                   	// #1
  415eac:	mov	w0, w19
  415eb0:	bl	4024d0 <kill@plt>
  415eb4:	bl	4162e8 <ferror@plt+0x138f8>
  415eb8:	ldp	x21, x22, [sp, #32]
  415ebc:	ldr	x23, [sp, #48]
  415ec0:	b	415dc4 <ferror@plt+0x133d4>
  415ec4:	stp	x29, x30, [sp, #-96]!
  415ec8:	mov	x29, sp
  415ecc:	stp	x19, x20, [sp, #16]
  415ed0:	stp	x21, x22, [sp, #32]
  415ed4:	stp	x23, x24, [sp, #48]
  415ed8:	str	x25, [sp, #64]
  415edc:	mov	w19, w0
  415ee0:	mov	x22, x1
  415ee4:	and	w25, w2, #0xff
  415ee8:	and	w20, w3, #0xff
  415eec:	and	w24, w4, #0xff
  415ef0:	and	w23, w5, #0xff
  415ef4:	mov	x21, x6
  415ef8:	cbz	x6, 415f00 <ferror@plt+0x13510>
  415efc:	str	wzr, [x6]
  415f00:	str	wzr, [sp, #92]
  415f04:	mov	w2, #0x0                   	// #0
  415f08:	add	x1, sp, #0x5c
  415f0c:	mov	w0, w19
  415f10:	bl	4029a0 <waitpid@plt>
  415f14:	cmp	w19, w0
  415f18:	b.eq	415f70 <ferror@plt+0x13580>  // b.none
  415f1c:	bl	402970 <__errno_location@plt>
  415f20:	ldr	w1, [x0]
  415f24:	cmp	w1, #0x4
  415f28:	b.eq	415f04 <ferror@plt+0x13514>  // b.none
  415f2c:	eor	w20, w20, #0x1
  415f30:	orr	w20, w23, w20
  415f34:	mov	w19, #0x7f                  	// #127
  415f38:	cbnz	w20, 415f58 <ferror@plt+0x13568>
  415f3c:	mov	w0, w19
  415f40:	ldp	x19, x20, [sp, #16]
  415f44:	ldp	x21, x22, [sp, #32]
  415f48:	ldp	x23, x24, [sp, #48]
  415f4c:	ldr	x25, [sp, #64]
  415f50:	ldp	x29, x30, [sp], #96
  415f54:	ret
  415f58:	mov	x3, x22
  415f5c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415f60:	add	x2, x2, #0x370
  415f64:	mov	w0, w23
  415f68:	bl	402420 <error@plt>
  415f6c:	b	415f3c <ferror@plt+0x1354c>
  415f70:	ldrb	w0, [sp, #92]
  415f74:	cmp	w0, #0x7f
  415f78:	b.eq	415f04 <ferror@plt+0x13514>  // b.none
  415f7c:	cbnz	w24, 415ff4 <ferror@plt+0x13604>
  415f80:	ldr	w19, [sp, #92]
  415f84:	and	w0, w19, #0x7f
  415f88:	add	w0, w0, #0x1
  415f8c:	sbfx	x0, x0, #1, #7
  415f90:	cmp	w0, #0x0
  415f94:	b.le	41603c <ferror@plt+0x1364c>
  415f98:	cbz	x21, 415fa4 <ferror@plt+0x135b4>
  415f9c:	and	w0, w19, #0x7f
  415fa0:	str	w0, [x21]
  415fa4:	and	w4, w19, #0x7f
  415fa8:	cmp	w25, #0x0
  415fac:	mov	w19, #0x0                   	// #0
  415fb0:	ccmp	w4, #0xd, #0x0, ne  // ne = any
  415fb4:	b.eq	415f3c <ferror@plt+0x1354c>  // b.none
  415fb8:	cbnz	w23, 415fd4 <ferror@plt+0x135e4>
  415fbc:	eor	w20, w20, #0x1
  415fc0:	cmp	x21, #0x0
  415fc4:	cset	w0, eq  // eq = none
  415fc8:	mov	w19, #0x7f                  	// #127
  415fcc:	tst	w0, w20
  415fd0:	b.eq	415f3c <ferror@plt+0x1354c>  // b.none
  415fd4:	mov	x3, x22
  415fd8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  415fdc:	add	x2, x2, #0x380
  415fe0:	mov	w1, #0x0                   	// #0
  415fe4:	mov	w0, w23
  415fe8:	bl	402420 <error@plt>
  415fec:	mov	w19, #0x7f                  	// #127
  415ff0:	b	415f3c <ferror@plt+0x1354c>
  415ff4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  415ff8:	ldr	x0, [x0, #1008]
  415ffc:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  416000:	ldr	w2, [x1, #3128]
  416004:	add	x2, x0, w2, sxtw #3
  416008:	cmp	x0, x2
  41600c:	b.cc	416020 <ferror@plt+0x13630>  // b.lo, b.ul, b.last
  416010:	b	415f80 <ferror@plt+0x13590>
  416014:	add	x0, x0, #0x8
  416018:	cmp	x2, x0
  41601c:	b.ls	415f80 <ferror@plt+0x13590>  // b.plast
  416020:	ldr	w1, [x0]
  416024:	cbz	w1, 416014 <ferror@plt+0x13624>
  416028:	ldr	w1, [x0, #4]
  41602c:	cmp	w19, w1
  416030:	b.ne	416014 <ferror@plt+0x13624>  // b.any
  416034:	str	wzr, [x0]
  416038:	b	416014 <ferror@plt+0x13624>
  41603c:	tst	x19, #0x7f
  416040:	b.ne	416078 <ferror@plt+0x13688>  // b.any
  416044:	ubfx	x19, x19, #8, #8
  416048:	cmp	w19, #0x7f
  41604c:	b.ne	415f3c <ferror@plt+0x1354c>  // b.any
  416050:	eor	w0, w20, #0x1
  416054:	orr	w0, w23, w0
  416058:	cbz	w0, 415f3c <ferror@plt+0x1354c>
  41605c:	mov	x3, x22
  416060:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x306c>
  416064:	add	x2, x2, #0x340
  416068:	mov	w1, #0x0                   	// #0
  41606c:	mov	w0, w23
  416070:	bl	402420 <error@plt>
  416074:	b	415f3c <ferror@plt+0x1354c>
  416078:	bl	402720 <abort@plt>
  41607c:	stp	x29, x30, [sp, #-32]!
  416080:	mov	x29, sp
  416084:	str	x19, [sp, #16]
  416088:	mov	x19, x0
  41608c:	bl	402570 <malloc@plt>
  416090:	cmp	x0, #0x0
  416094:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  416098:	b.ne	4160a8 <ferror@plt+0x136b8>  // b.any
  41609c:	ldr	x19, [sp, #16]
  4160a0:	ldp	x29, x30, [sp], #32
  4160a4:	ret
  4160a8:	bl	4162e8 <ferror@plt+0x138f8>
  4160ac:	stp	x29, x30, [sp, #-16]!
  4160b0:	mov	x29, sp
  4160b4:	mul	x3, x0, x1
  4160b8:	umulh	x2, x0, x1
  4160bc:	cmp	x2, #0x0
  4160c0:	cset	x2, ne  // ne = any
  4160c4:	cmp	x3, #0x0
  4160c8:	csinc	x2, x2, xzr, ge  // ge = tcont
  4160cc:	cbnz	w2, 4160e0 <ferror@plt+0x136f0>
  4160d0:	mul	x0, x0, x1
  4160d4:	bl	41607c <ferror@plt+0x1368c>
  4160d8:	ldp	x29, x30, [sp], #16
  4160dc:	ret
  4160e0:	bl	4162e8 <ferror@plt+0x138f8>
  4160e4:	stp	x29, x30, [sp, #-16]!
  4160e8:	mov	x29, sp
  4160ec:	bl	41607c <ferror@plt+0x1368c>
  4160f0:	ldp	x29, x30, [sp], #16
  4160f4:	ret
  4160f8:	stp	x29, x30, [sp, #-32]!
  4160fc:	mov	x29, sp
  416100:	cmp	x1, #0x0
  416104:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  416108:	b.ne	416130 <ferror@plt+0x13740>  // b.any
  41610c:	str	x19, [sp, #16]
  416110:	mov	x19, x1
  416114:	bl	402670 <realloc@plt>
  416118:	cmp	x0, #0x0
  41611c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  416120:	b.ne	41613c <ferror@plt+0x1374c>  // b.any
  416124:	ldr	x19, [sp, #16]
  416128:	ldp	x29, x30, [sp], #32
  41612c:	ret
  416130:	bl	402810 <free@plt>
  416134:	mov	x0, #0x0                   	// #0
  416138:	b	416128 <ferror@plt+0x13738>
  41613c:	bl	4162e8 <ferror@plt+0x138f8>
  416140:	stp	x29, x30, [sp, #-16]!
  416144:	mov	x29, sp
  416148:	mul	x4, x1, x2
  41614c:	umulh	x3, x1, x2
  416150:	cmp	x3, #0x0
  416154:	cset	x3, ne  // ne = any
  416158:	cmp	x4, #0x0
  41615c:	csinc	x3, x3, xzr, ge  // ge = tcont
  416160:	cbnz	w3, 416174 <ferror@plt+0x13784>
  416164:	mul	x1, x1, x2
  416168:	bl	4160f8 <ferror@plt+0x13708>
  41616c:	ldp	x29, x30, [sp], #16
  416170:	ret
  416174:	bl	4162e8 <ferror@plt+0x138f8>
  416178:	stp	x29, x30, [sp, #-16]!
  41617c:	mov	x29, sp
  416180:	ldr	x3, [x1]
  416184:	cbz	x0, 4161b8 <ferror@plt+0x137c8>
  416188:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  41618c:	movk	x4, #0x5554
  416190:	udiv	x4, x4, x2
  416194:	cmp	x4, x3
  416198:	b.ls	4161d0 <ferror@plt+0x137e0>  // b.plast
  41619c:	add	x4, x3, #0x1
  4161a0:	add	x3, x4, x3, lsr #1
  4161a4:	str	x3, [x1]
  4161a8:	mul	x1, x3, x2
  4161ac:	bl	4160f8 <ferror@plt+0x13708>
  4161b0:	ldp	x29, x30, [sp], #16
  4161b4:	ret
  4161b8:	cbnz	x3, 4161a4 <ferror@plt+0x137b4>
  4161bc:	mov	x3, #0x80                  	// #128
  4161c0:	udiv	x3, x3, x2
  4161c4:	cmp	x2, #0x80
  4161c8:	cinc	x3, x3, hi  // hi = pmore
  4161cc:	b	4161a4 <ferror@plt+0x137b4>
  4161d0:	bl	4162e8 <ferror@plt+0x138f8>
  4161d4:	stp	x29, x30, [sp, #-16]!
  4161d8:	mov	x29, sp
  4161dc:	mov	x2, x1
  4161e0:	ldr	x1, [x1]
  4161e4:	cbz	x0, 416210 <ferror@plt+0x13820>
  4161e8:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  4161ec:	movk	x3, #0x5553
  4161f0:	cmp	x1, x3
  4161f4:	b.hi	416220 <ferror@plt+0x13830>  // b.pmore
  4161f8:	add	x3, x1, #0x1
  4161fc:	add	x1, x3, x1, lsr #1
  416200:	str	x1, [x2]
  416204:	bl	4160f8 <ferror@plt+0x13708>
  416208:	ldp	x29, x30, [sp], #16
  41620c:	ret
  416210:	cmp	x1, #0x0
  416214:	mov	x3, #0x80                  	// #128
  416218:	csel	x1, x1, x3, ne  // ne = any
  41621c:	b	416200 <ferror@plt+0x13810>
  416220:	bl	4162e8 <ferror@plt+0x138f8>
  416224:	stp	x29, x30, [sp, #-32]!
  416228:	mov	x29, sp
  41622c:	str	x19, [sp, #16]
  416230:	mov	x19, x0
  416234:	bl	41607c <ferror@plt+0x1368c>
  416238:	mov	x2, x19
  41623c:	mov	w1, #0x0                   	// #0
  416240:	bl	402610 <memset@plt>
  416244:	ldr	x19, [sp, #16]
  416248:	ldp	x29, x30, [sp], #32
  41624c:	ret
  416250:	stp	x29, x30, [sp, #-16]!
  416254:	mov	x29, sp
  416258:	mul	x3, x0, x1
  41625c:	umulh	x2, x0, x1
  416260:	cmp	x2, #0x0
  416264:	cset	x2, ne  // ne = any
  416268:	cmp	x3, #0x0
  41626c:	csinc	x2, x2, xzr, ge  // ge = tcont
  416270:	cbnz	w2, 416284 <ferror@plt+0x13894>
  416274:	bl	402650 <calloc@plt>
  416278:	cbz	x0, 416284 <ferror@plt+0x13894>
  41627c:	ldp	x29, x30, [sp], #16
  416280:	ret
  416284:	bl	4162e8 <ferror@plt+0x138f8>
  416288:	stp	x29, x30, [sp, #-32]!
  41628c:	mov	x29, sp
  416290:	stp	x19, x20, [sp, #16]
  416294:	mov	x20, x0
  416298:	mov	x19, x1
  41629c:	mov	x0, x1
  4162a0:	bl	41607c <ferror@plt+0x1368c>
  4162a4:	mov	x2, x19
  4162a8:	mov	x1, x20
  4162ac:	bl	402390 <memcpy@plt>
  4162b0:	ldp	x19, x20, [sp, #16]
  4162b4:	ldp	x29, x30, [sp], #32
  4162b8:	ret
  4162bc:	stp	x29, x30, [sp, #-32]!
  4162c0:	mov	x29, sp
  4162c4:	str	x19, [sp, #16]
  4162c8:	mov	x19, x0
  4162cc:	bl	4023d0 <strlen@plt>
  4162d0:	add	x1, x0, #0x1
  4162d4:	mov	x0, x19
  4162d8:	bl	416288 <ferror@plt+0x13898>
  4162dc:	ldr	x19, [sp, #16]
  4162e0:	ldp	x29, x30, [sp], #32
  4162e4:	ret
  4162e8:	stp	x29, x30, [sp, #-16]!
  4162ec:	mov	x29, sp
  4162f0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4162f4:	ldr	w0, [x0, #868]
  4162f8:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x406c>
  4162fc:	add	x3, x3, #0x3a8
  416300:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x206c>
  416304:	add	x2, x2, #0x740
  416308:	mov	w1, #0x0                   	// #0
  41630c:	bl	402420 <error@plt>
  416310:	bl	402720 <abort@plt>
  416314:	stp	x29, x30, [sp, #-16]!
  416318:	mov	x29, sp
  41631c:	bl	41324c <ferror@plt+0x1085c>
  416320:	cbz	x0, 41632c <ferror@plt+0x1393c>
  416324:	ldp	x29, x30, [sp], #16
  416328:	ret
  41632c:	bl	4162e8 <ferror@plt+0x138f8>
  416330:	stp	x29, x30, [sp, #-96]!
  416334:	mov	x29, sp
  416338:	stp	x19, x20, [sp, #16]
  41633c:	ldp	x6, x7, [x1]
  416340:	stp	x6, x7, [sp, #64]
  416344:	ldp	x4, x5, [x1, #16]
  416348:	stp	x4, x5, [sp, #80]
  41634c:	stp	x6, x7, [sp, #32]
  416350:	stp	x4, x5, [sp, #48]
  416354:	add	x3, sp, #0x20
  416358:	mov	x2, x0
  41635c:	mov	w1, #0x1                   	// #1
  416360:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  416364:	ldr	x0, [x0, #1072]
  416368:	bl	402640 <__vfprintf_chk@plt>
  41636c:	mov	w19, w0
  416370:	tbnz	w0, #31, 416384 <ferror@plt+0x13994>
  416374:	mov	w0, w19
  416378:	ldp	x19, x20, [sp, #16]
  41637c:	ldp	x29, x30, [sp], #96
  416380:	ret
  416384:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  416388:	ldr	x0, [x0, #1072]
  41638c:	bl	4029f0 <ferror@plt>
  416390:	cbnz	w0, 416374 <ferror@plt+0x13984>
  416394:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  416398:	ldr	w20, [x0, #868]
  41639c:	bl	402970 <__errno_location@plt>
  4163a0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  4163a4:	add	x2, x2, #0x3c0
  4163a8:	ldr	w1, [x0]
  4163ac:	mov	w0, w20
  4163b0:	bl	402420 <error@plt>
  4163b4:	b	416374 <ferror@plt+0x13984>
  4163b8:	stp	x29, x30, [sp, #-272]!
  4163bc:	mov	x29, sp
  4163c0:	str	x1, [sp, #216]
  4163c4:	str	x2, [sp, #224]
  4163c8:	str	x3, [sp, #232]
  4163cc:	str	x4, [sp, #240]
  4163d0:	str	x5, [sp, #248]
  4163d4:	str	x6, [sp, #256]
  4163d8:	str	x7, [sp, #264]
  4163dc:	str	q0, [sp, #80]
  4163e0:	str	q1, [sp, #96]
  4163e4:	str	q2, [sp, #112]
  4163e8:	str	q3, [sp, #128]
  4163ec:	str	q4, [sp, #144]
  4163f0:	str	q5, [sp, #160]
  4163f4:	str	q6, [sp, #176]
  4163f8:	str	q7, [sp, #192]
  4163fc:	add	x1, sp, #0x110
  416400:	str	x1, [sp, #48]
  416404:	str	x1, [sp, #56]
  416408:	add	x1, sp, #0xd0
  41640c:	str	x1, [sp, #64]
  416410:	mov	w1, #0xffffffc8            	// #-56
  416414:	str	w1, [sp, #72]
  416418:	mov	w1, #0xffffff80            	// #-128
  41641c:	str	w1, [sp, #76]
  416420:	ldp	x2, x3, [sp, #48]
  416424:	stp	x2, x3, [sp, #16]
  416428:	ldp	x2, x3, [sp, #64]
  41642c:	stp	x2, x3, [sp, #32]
  416430:	add	x1, sp, #0x10
  416434:	bl	416330 <ferror@plt+0x13940>
  416438:	ldp	x29, x30, [sp], #272
  41643c:	ret
  416440:	stp	x29, x30, [sp, #-96]!
  416444:	mov	x29, sp
  416448:	stp	x19, x20, [sp, #16]
  41644c:	mov	x20, x0
  416450:	ldp	x4, x5, [x2]
  416454:	stp	x4, x5, [sp, #64]
  416458:	ldp	x2, x3, [x2, #16]
  41645c:	stp	x2, x3, [sp, #80]
  416460:	stp	x4, x5, [sp, #32]
  416464:	stp	x2, x3, [sp, #48]
  416468:	add	x3, sp, #0x20
  41646c:	mov	x2, x1
  416470:	mov	w1, #0x1                   	// #1
  416474:	bl	402640 <__vfprintf_chk@plt>
  416478:	mov	w19, w0
  41647c:	tbnz	w0, #31, 416490 <ferror@plt+0x13aa0>
  416480:	mov	w0, w19
  416484:	ldp	x19, x20, [sp, #16]
  416488:	ldp	x29, x30, [sp], #96
  41648c:	ret
  416490:	mov	x0, x20
  416494:	bl	4029f0 <ferror@plt>
  416498:	cbnz	w0, 416480 <ferror@plt+0x13a90>
  41649c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  4164a0:	ldr	w20, [x0, #868]
  4164a4:	bl	402970 <__errno_location@plt>
  4164a8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  4164ac:	add	x2, x2, #0x3c0
  4164b0:	ldr	w1, [x0]
  4164b4:	mov	w0, w20
  4164b8:	bl	402420 <error@plt>
  4164bc:	b	416480 <ferror@plt+0x13a90>
  4164c0:	stp	x29, x30, [sp, #-256]!
  4164c4:	mov	x29, sp
  4164c8:	str	x2, [sp, #208]
  4164cc:	str	x3, [sp, #216]
  4164d0:	str	x4, [sp, #224]
  4164d4:	str	x5, [sp, #232]
  4164d8:	str	x6, [sp, #240]
  4164dc:	str	x7, [sp, #248]
  4164e0:	str	q0, [sp, #80]
  4164e4:	str	q1, [sp, #96]
  4164e8:	str	q2, [sp, #112]
  4164ec:	str	q3, [sp, #128]
  4164f0:	str	q4, [sp, #144]
  4164f4:	str	q5, [sp, #160]
  4164f8:	str	q6, [sp, #176]
  4164fc:	str	q7, [sp, #192]
  416500:	add	x2, sp, #0x100
  416504:	str	x2, [sp, #48]
  416508:	str	x2, [sp, #56]
  41650c:	add	x2, sp, #0xd0
  416510:	str	x2, [sp, #64]
  416514:	mov	w2, #0xffffffd0            	// #-48
  416518:	str	w2, [sp, #72]
  41651c:	mov	w2, #0xffffff80            	// #-128
  416520:	str	w2, [sp, #76]
  416524:	ldp	x2, x3, [sp, #48]
  416528:	stp	x2, x3, [sp, #16]
  41652c:	ldp	x2, x3, [sp, #64]
  416530:	stp	x2, x3, [sp, #32]
  416534:	add	x2, sp, #0x10
  416538:	bl	416440 <ferror@plt+0x13a50>
  41653c:	ldp	x29, x30, [sp], #256
  416540:	ret
  416544:	stp	x29, x30, [sp, #-112]!
  416548:	mov	x29, sp
  41654c:	stp	x19, x20, [sp, #16]
  416550:	stp	x21, x22, [sp, #32]
  416554:	stp	x23, x24, [sp, #48]
  416558:	stp	x25, x26, [sp, #64]
  41655c:	mov	x21, x0
  416560:	mov	x24, x1
  416564:	ldr	x22, [x1]
  416568:	ldr	w23, [x1, #24]
  41656c:	ldp	x0, x1, [x1]
  416570:	stp	x0, x1, [sp, #80]
  416574:	ldp	x0, x1, [x24, #16]
  416578:	stp	x0, x1, [sp, #96]
  41657c:	cbz	x21, 41666c <ferror@plt+0x13c7c>
  416580:	ldr	x26, [sp, #88]
  416584:	mov	x20, x21
  416588:	mov	x19, #0x0                   	// #0
  41658c:	mov	x25, #0xffffffffffffffff    	// #-1
  416590:	b	4165c8 <ferror@plt+0x13bd8>
  416594:	add	w2, w1, #0x8
  416598:	str	w2, [sp, #104]
  41659c:	cmp	w2, #0x0
  4165a0:	b.le	4165e4 <ferror@plt+0x13bf4>
  4165a4:	add	x1, x0, #0xf
  4165a8:	and	x1, x1, #0xfffffffffffffff8
  4165ac:	str	x1, [sp, #80]
  4165b0:	ldr	x0, [x0]
  4165b4:	bl	4023d0 <strlen@plt>
  4165b8:	adds	x0, x0, x19
  4165bc:	csel	x19, x0, x25, cc  // cc = lo, ul, last
  4165c0:	subs	x20, x20, #0x1
  4165c4:	b.eq	41669c <ferror@plt+0x13cac>  // b.none
  4165c8:	ldr	w1, [sp, #104]
  4165cc:	ldr	x0, [sp, #80]
  4165d0:	tbnz	w1, #31, 416594 <ferror@plt+0x13ba4>
  4165d4:	add	x1, x0, #0xf
  4165d8:	and	x1, x1, #0xfffffffffffffff8
  4165dc:	str	x1, [sp, #80]
  4165e0:	b	4165b0 <ferror@plt+0x13bc0>
  4165e4:	add	x0, x26, w1, sxtw
  4165e8:	b	4165b0 <ferror@plt+0x13bc0>
  4165ec:	bl	402970 <__errno_location@plt>
  4165f0:	mov	w1, #0x4b                  	// #75
  4165f4:	str	w1, [x0]
  4165f8:	mov	x26, #0x0                   	// #0
  4165fc:	b	416680 <ferror@plt+0x13c90>
  416600:	add	w0, w23, #0x8
  416604:	cmp	w0, #0x0
  416608:	b.le	41665c <ferror@plt+0x13c6c>
  41660c:	add	x2, x22, #0xf
  416610:	mov	w23, w0
  416614:	mov	x1, x22
  416618:	and	x22, x2, #0xfffffffffffffff8
  41661c:	ldr	x25, [x1]
  416620:	mov	x0, x25
  416624:	bl	4023d0 <strlen@plt>
  416628:	mov	x19, x0
  41662c:	mov	x2, x0
  416630:	mov	x1, x25
  416634:	mov	x0, x20
  416638:	bl	402390 <memcpy@plt>
  41663c:	add	x20, x20, x19
  416640:	subs	x21, x21, #0x1
  416644:	b.eq	41667c <ferror@plt+0x13c8c>  // b.none
  416648:	tbnz	w23, #31, 416600 <ferror@plt+0x13c10>
  41664c:	add	x0, x22, #0xf
  416650:	mov	x1, x22
  416654:	and	x22, x0, #0xfffffffffffffff8
  416658:	b	41661c <ferror@plt+0x13c2c>
  41665c:	ldr	x1, [x24, #8]
  416660:	add	x1, x1, w23, sxtw
  416664:	mov	w23, w0
  416668:	b	41661c <ferror@plt+0x13c2c>
  41666c:	mov	x0, #0x1                   	// #1
  416670:	bl	41607c <ferror@plt+0x1368c>
  416674:	mov	x20, x0
  416678:	mov	x26, x0
  41667c:	strb	wzr, [x20]
  416680:	mov	x0, x26
  416684:	ldp	x19, x20, [sp, #16]
  416688:	ldp	x21, x22, [sp, #32]
  41668c:	ldp	x23, x24, [sp, #48]
  416690:	ldp	x25, x26, [sp, #64]
  416694:	ldp	x29, x30, [sp], #112
  416698:	ret
  41669c:	mov	x0, #0x7fffffff            	// #2147483647
  4166a0:	cmp	x19, x0
  4166a4:	b.hi	4165ec <ferror@plt+0x13bfc>  // b.pmore
  4166a8:	add	x0, x19, #0x1
  4166ac:	bl	41607c <ferror@plt+0x1368c>
  4166b0:	mov	x26, x0
  4166b4:	mov	x20, x0
  4166b8:	b	416648 <ferror@plt+0x13c58>
  4166bc:	stp	x29, x30, [sp, #-96]!
  4166c0:	mov	x29, sp
  4166c4:	mov	x2, x0
  4166c8:	ldrb	w3, [x0]
  4166cc:	mov	x4, x0
  4166d0:	mov	x0, #0x0                   	// #0
  4166d4:	cbz	w3, 4166f8 <ferror@plt+0x13d08>
  4166d8:	cmp	w3, #0x25
  4166dc:	b.ne	416714 <ferror@plt+0x13d24>  // b.any
  4166e0:	ldrb	w3, [x4, #1]
  4166e4:	cmp	w3, #0x73
  4166e8:	b.ne	416714 <ferror@plt+0x13d24>  // b.any
  4166ec:	add	x0, x0, #0x1
  4166f0:	ldrb	w3, [x4, #2]!
  4166f4:	cbnz	w3, 4166d8 <ferror@plt+0x13ce8>
  4166f8:	ldp	x2, x3, [x1]
  4166fc:	stp	x2, x3, [sp, #16]
  416700:	ldp	x2, x3, [x1, #16]
  416704:	stp	x2, x3, [sp, #32]
  416708:	add	x1, sp, #0x10
  41670c:	bl	416544 <ferror@plt+0x13b54>
  416710:	b	416744 <ferror@plt+0x13d54>
  416714:	ldp	x4, x5, [x1]
  416718:	stp	x4, x5, [sp, #56]
  41671c:	ldp	x0, x1, [x1, #16]
  416720:	stp	x0, x1, [sp, #72]
  416724:	stp	x4, x5, [sp, #16]
  416728:	stp	x0, x1, [sp, #32]
  41672c:	add	x3, sp, #0x10
  416730:	mov	w1, #0x1                   	// #1
  416734:	add	x0, sp, #0x58
  416738:	bl	402590 <__vasprintf_chk@plt>
  41673c:	tbnz	w0, #31, 41674c <ferror@plt+0x13d5c>
  416740:	ldr	x0, [sp, #88]
  416744:	ldp	x29, x30, [sp], #96
  416748:	ret
  41674c:	bl	402970 <__errno_location@plt>
  416750:	ldr	w1, [x0]
  416754:	mov	x0, #0x0                   	// #0
  416758:	cmp	w1, #0xc
  41675c:	b.ne	416744 <ferror@plt+0x13d54>  // b.any
  416760:	bl	4162e8 <ferror@plt+0x138f8>
  416764:	stp	x29, x30, [sp, #-272]!
  416768:	mov	x29, sp
  41676c:	str	x1, [sp, #216]
  416770:	str	x2, [sp, #224]
  416774:	str	x3, [sp, #232]
  416778:	str	x4, [sp, #240]
  41677c:	str	x5, [sp, #248]
  416780:	str	x6, [sp, #256]
  416784:	str	x7, [sp, #264]
  416788:	str	q0, [sp, #80]
  41678c:	str	q1, [sp, #96]
  416790:	str	q2, [sp, #112]
  416794:	str	q3, [sp, #128]
  416798:	str	q4, [sp, #144]
  41679c:	str	q5, [sp, #160]
  4167a0:	str	q6, [sp, #176]
  4167a4:	str	q7, [sp, #192]
  4167a8:	add	x1, sp, #0x110
  4167ac:	str	x1, [sp, #48]
  4167b0:	str	x1, [sp, #56]
  4167b4:	add	x1, sp, #0xd0
  4167b8:	str	x1, [sp, #64]
  4167bc:	mov	w1, #0xffffffc8            	// #-56
  4167c0:	str	w1, [sp, #72]
  4167c4:	mov	w1, #0xffffff80            	// #-128
  4167c8:	str	w1, [sp, #76]
  4167cc:	ldp	x2, x3, [sp, #48]
  4167d0:	stp	x2, x3, [sp, #16]
  4167d4:	ldp	x2, x3, [sp, #64]
  4167d8:	stp	x2, x3, [sp, #32]
  4167dc:	add	x1, sp, #0x10
  4167e0:	bl	4166bc <ferror@plt+0x13ccc>
  4167e4:	ldp	x29, x30, [sp], #272
  4167e8:	ret
  4167ec:	stp	x29, x30, [sp, #-48]!
  4167f0:	mov	x29, sp
  4167f4:	stp	x19, x20, [sp, #16]
  4167f8:	mov	x19, x0
  4167fc:	bl	402500 <fileno@plt>
  416800:	tbnz	w0, #31, 41685c <ferror@plt+0x13e6c>
  416804:	mov	x0, x19
  416808:	bl	402910 <__freading@plt>
  41680c:	cbz	w0, 41682c <ferror@plt+0x13e3c>
  416810:	mov	x0, x19
  416814:	bl	402500 <fileno@plt>
  416818:	mov	w2, #0x1                   	// #1
  41681c:	mov	x1, #0x0                   	// #0
  416820:	bl	4024e0 <lseek@plt>
  416824:	cmn	x0, #0x1
  416828:	b.eq	416878 <ferror@plt+0x13e88>  // b.none
  41682c:	mov	x0, x19
  416830:	bl	416a7c <ferror@plt+0x1408c>
  416834:	cbz	w0, 416878 <ferror@plt+0x13e88>
  416838:	str	x21, [sp, #32]
  41683c:	bl	402970 <__errno_location@plt>
  416840:	mov	x20, x0
  416844:	ldr	w21, [x0]
  416848:	mov	x0, x19
  41684c:	bl	402530 <fclose@plt>
  416850:	cbnz	w21, 416868 <ferror@plt+0x13e78>
  416854:	ldr	x21, [sp, #32]
  416858:	b	416880 <ferror@plt+0x13e90>
  41685c:	mov	x0, x19
  416860:	bl	402530 <fclose@plt>
  416864:	b	416880 <ferror@plt+0x13e90>
  416868:	str	w21, [x20]
  41686c:	mov	w0, #0xffffffff            	// #-1
  416870:	ldr	x21, [sp, #32]
  416874:	b	416880 <ferror@plt+0x13e90>
  416878:	mov	x0, x19
  41687c:	bl	402530 <fclose@plt>
  416880:	ldp	x19, x20, [sp, #16]
  416884:	ldp	x29, x30, [sp], #48
  416888:	ret
  41688c:	stp	x29, x30, [sp, #-96]!
  416890:	mov	x29, sp
  416894:	stp	x19, x20, [sp, #16]
  416898:	mov	w20, w0
  41689c:	str	x2, [sp, #80]
  4168a0:	str	x3, [sp, #88]
  4168a4:	add	x0, sp, #0x60
  4168a8:	str	x0, [sp, #48]
  4168ac:	str	x0, [sp, #56]
  4168b0:	add	x0, sp, #0x50
  4168b4:	str	x0, [sp, #64]
  4168b8:	mov	w0, #0xfffffff0            	// #-16
  4168bc:	str	w0, [sp, #72]
  4168c0:	str	wzr, [sp, #76]
  4168c4:	cmp	w1, #0x406
  4168c8:	b.ne	416a08 <ferror@plt+0x14018>  // b.any
  4168cc:	str	x21, [sp, #32]
  4168d0:	mov	w1, w0
  4168d4:	ldr	x0, [sp, #48]
  4168d8:	tbnz	w1, #31, 416924 <ferror@plt+0x13f34>
  4168dc:	add	x1, x0, #0xb
  4168e0:	and	x1, x1, #0xfffffffffffffff8
  4168e4:	str	x1, [sp, #48]
  4168e8:	ldr	w21, [x0]
  4168ec:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4168f0:	ldr	w0, [x0, #3392]
  4168f4:	tbnz	w0, #31, 4169b4 <ferror@plt+0x13fc4>
  4168f8:	mov	w2, w21
  4168fc:	mov	w1, #0x406                 	// #1030
  416900:	mov	w0, w20
  416904:	bl	402890 <fcntl@plt>
  416908:	mov	w19, w0
  41690c:	tbnz	w0, #31, 416950 <ferror@plt+0x13f60>
  416910:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  416914:	mov	w1, #0x1                   	// #1
  416918:	str	w1, [x0, #3392]
  41691c:	ldr	x21, [sp, #32]
  416920:	b	416a30 <ferror@plt+0x14040>
  416924:	add	w2, w1, #0x8
  416928:	str	w2, [sp, #72]
  41692c:	cmp	w2, #0x0
  416930:	b.le	416944 <ferror@plt+0x13f54>
  416934:	add	x1, x0, #0xb
  416938:	and	x1, x1, #0xfffffffffffffff8
  41693c:	str	x1, [sp, #48]
  416940:	b	4168e8 <ferror@plt+0x13ef8>
  416944:	ldr	x0, [sp, #56]
  416948:	add	x0, x0, w1, sxtw
  41694c:	b	4168e8 <ferror@plt+0x13ef8>
  416950:	bl	402970 <__errno_location@plt>
  416954:	ldr	w0, [x0]
  416958:	cmp	w0, #0x16
  41695c:	b.ne	416910 <ferror@plt+0x13f20>  // b.any
  416960:	mov	w2, w21
  416964:	mov	w1, #0x0                   	// #0
  416968:	mov	w0, w20
  41696c:	bl	41688c <ferror@plt+0x13e9c>
  416970:	mov	w19, w0
  416974:	tbnz	w0, #31, 416a6c <ferror@plt+0x1407c>
  416978:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  41697c:	mov	w1, #0xffffffff            	// #-1
  416980:	str	w1, [x0, #3392]
  416984:	mov	w1, #0x1                   	// #1
  416988:	mov	w0, w19
  41698c:	bl	402890 <fcntl@plt>
  416990:	tbnz	w0, #31, 4169e4 <ferror@plt+0x13ff4>
  416994:	orr	w2, w0, #0x1
  416998:	mov	w1, #0x2                   	// #2
  41699c:	mov	w0, w19
  4169a0:	bl	402890 <fcntl@plt>
  4169a4:	cmn	w0, #0x1
  4169a8:	b.eq	4169e4 <ferror@plt+0x13ff4>  // b.none
  4169ac:	ldr	x21, [sp, #32]
  4169b0:	b	416a30 <ferror@plt+0x14040>
  4169b4:	mov	w2, w21
  4169b8:	mov	w1, #0x0                   	// #0
  4169bc:	mov	w0, w20
  4169c0:	bl	41688c <ferror@plt+0x13e9c>
  4169c4:	mov	w19, w0
  4169c8:	tbnz	w0, #31, 416a74 <ferror@plt+0x14084>
  4169cc:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4169d0:	ldr	w0, [x0, #3392]
  4169d4:	cmn	w0, #0x1
  4169d8:	b.eq	416984 <ferror@plt+0x13f94>  // b.none
  4169dc:	ldr	x21, [sp, #32]
  4169e0:	b	416a30 <ferror@plt+0x14040>
  4169e4:	bl	402970 <__errno_location@plt>
  4169e8:	mov	x20, x0
  4169ec:	ldr	w21, [x0]
  4169f0:	mov	w0, w19
  4169f4:	bl	4026b0 <close@plt>
  4169f8:	str	w21, [x20]
  4169fc:	mov	w19, #0xffffffff            	// #-1
  416a00:	ldr	x21, [sp, #32]
  416a04:	b	416a30 <ferror@plt+0x14040>
  416a08:	ldr	w2, [sp, #72]
  416a0c:	ldr	x0, [sp, #48]
  416a10:	tbnz	w2, #31, 416a40 <ferror@plt+0x14050>
  416a14:	add	x2, x0, #0xf
  416a18:	and	x2, x2, #0xfffffffffffffff8
  416a1c:	str	x2, [sp, #48]
  416a20:	ldr	x2, [x0]
  416a24:	mov	w0, w20
  416a28:	bl	402890 <fcntl@plt>
  416a2c:	mov	w19, w0
  416a30:	mov	w0, w19
  416a34:	ldp	x19, x20, [sp, #16]
  416a38:	ldp	x29, x30, [sp], #96
  416a3c:	ret
  416a40:	add	w3, w2, #0x8
  416a44:	str	w3, [sp, #72]
  416a48:	cmp	w3, #0x0
  416a4c:	b.le	416a60 <ferror@plt+0x14070>
  416a50:	add	x2, x0, #0xf
  416a54:	and	x2, x2, #0xfffffffffffffff8
  416a58:	str	x2, [sp, #48]
  416a5c:	b	416a20 <ferror@plt+0x14030>
  416a60:	ldr	x0, [sp, #56]
  416a64:	add	x0, x0, w2, sxtw
  416a68:	b	416a20 <ferror@plt+0x14030>
  416a6c:	ldr	x21, [sp, #32]
  416a70:	b	416a30 <ferror@plt+0x14040>
  416a74:	ldr	x21, [sp, #32]
  416a78:	b	416a30 <ferror@plt+0x14040>
  416a7c:	stp	x29, x30, [sp, #-32]!
  416a80:	mov	x29, sp
  416a84:	str	x19, [sp, #16]
  416a88:	mov	x19, x0
  416a8c:	cbz	x0, 416a98 <ferror@plt+0x140a8>
  416a90:	bl	402910 <__freading@plt>
  416a94:	cbnz	w0, 416aac <ferror@plt+0x140bc>
  416a98:	mov	x0, x19
  416a9c:	bl	4028a0 <fflush@plt>
  416aa0:	ldr	x19, [sp, #16]
  416aa4:	ldp	x29, x30, [sp], #32
  416aa8:	ret
  416aac:	ldr	w0, [x19]
  416ab0:	tbnz	w0, #8, 416ac0 <ferror@plt+0x140d0>
  416ab4:	mov	x0, x19
  416ab8:	bl	4028a0 <fflush@plt>
  416abc:	b	416aa0 <ferror@plt+0x140b0>
  416ac0:	mov	w2, #0x1                   	// #1
  416ac4:	mov	x1, #0x0                   	// #0
  416ac8:	mov	x0, x19
  416acc:	bl	416b18 <ferror@plt+0x14128>
  416ad0:	b	416ab4 <ferror@plt+0x140c4>
  416ad4:	ldr	x2, [x0, #40]
  416ad8:	ldr	x1, [x0, #32]
  416adc:	cmp	x2, x1
  416ae0:	b.hi	416b10 <ferror@plt+0x14120>  // b.pmore
  416ae4:	ldr	x1, [x0, #16]
  416ae8:	ldr	x2, [x0, #8]
  416aec:	sub	x1, x1, x2
  416af0:	ldr	w3, [x0]
  416af4:	mov	x2, #0x0                   	// #0
  416af8:	tbz	w3, #8, 416b08 <ferror@plt+0x14118>
  416afc:	ldr	x2, [x0, #88]
  416b00:	ldr	x0, [x0, #72]
  416b04:	sub	x2, x2, x0
  416b08:	add	x0, x1, x2
  416b0c:	ret
  416b10:	mov	x0, #0x0                   	// #0
  416b14:	b	416b0c <ferror@plt+0x1411c>
  416b18:	stp	x29, x30, [sp, #-48]!
  416b1c:	mov	x29, sp
  416b20:	stp	x19, x20, [sp, #16]
  416b24:	str	x21, [sp, #32]
  416b28:	mov	x19, x0
  416b2c:	mov	x20, x1
  416b30:	mov	w21, w2
  416b34:	ldr	x1, [x0, #16]
  416b38:	ldr	x0, [x0, #8]
  416b3c:	cmp	x1, x0
  416b40:	b.eq	416b64 <ferror@plt+0x14174>  // b.none
  416b44:	mov	w2, w21
  416b48:	mov	x1, x20
  416b4c:	mov	x0, x19
  416b50:	bl	4027f0 <fseeko@plt>
  416b54:	ldp	x19, x20, [sp, #16]
  416b58:	ldr	x21, [sp, #32]
  416b5c:	ldp	x29, x30, [sp], #48
  416b60:	ret
  416b64:	ldr	x1, [x19, #40]
  416b68:	ldr	x0, [x19, #32]
  416b6c:	cmp	x1, x0
  416b70:	b.ne	416b44 <ferror@plt+0x14154>  // b.any
  416b74:	ldr	x0, [x19, #72]
  416b78:	cbnz	x0, 416b44 <ferror@plt+0x14154>
  416b7c:	mov	x0, x19
  416b80:	bl	402500 <fileno@plt>
  416b84:	mov	w2, w21
  416b88:	mov	x1, x20
  416b8c:	bl	4024e0 <lseek@plt>
  416b90:	cmn	x0, #0x1
  416b94:	b.eq	416bb0 <ferror@plt+0x141c0>  // b.none
  416b98:	ldr	w1, [x19]
  416b9c:	and	w1, w1, #0xffffffef
  416ba0:	str	w1, [x19]
  416ba4:	str	x0, [x19, #144]
  416ba8:	mov	w0, #0x0                   	// #0
  416bac:	b	416b54 <ferror@plt+0x14164>
  416bb0:	mov	w0, #0xffffffff            	// #-1
  416bb4:	b	416b54 <ferror@plt+0x14164>
  416bb8:	stp	x29, x30, [sp, #-64]!
  416bbc:	mov	x29, sp
  416bc0:	stp	x19, x20, [sp, #16]
  416bc4:	stp	x21, x22, [sp, #32]
  416bc8:	mov	x19, x0
  416bcc:	mov	x22, x1
  416bd0:	mov	x21, x2
  416bd4:	cmp	x0, #0x0
  416bd8:	add	x0, sp, #0x3c
  416bdc:	csel	x19, x0, x19, eq  // eq = none
  416be0:	mov	x0, x19
  416be4:	bl	402380 <mbrtowc@plt>
  416be8:	mov	x20, x0
  416bec:	cmp	x21, #0x0
  416bf0:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  416bf4:	b.hi	416c0c <ferror@plt+0x1421c>  // b.pmore
  416bf8:	mov	x0, x20
  416bfc:	ldp	x19, x20, [sp, #16]
  416c00:	ldp	x21, x22, [sp, #32]
  416c04:	ldp	x29, x30, [sp], #64
  416c08:	ret
  416c0c:	mov	w0, #0x0                   	// #0
  416c10:	bl	41705c <_obstack_memory_used@@Base+0xc8>
  416c14:	and	w0, w0, #0xff
  416c18:	cbnz	w0, 416bf8 <ferror@plt+0x14208>
  416c1c:	ldrb	w0, [x22]
  416c20:	str	w0, [x19]
  416c24:	mov	x20, #0x1                   	// #1
  416c28:	b	416bf8 <ferror@plt+0x14208>
  416c2c:	stp	x29, x30, [sp, #-16]!
  416c30:	mov	x29, sp
  416c34:	mov	x2, x0
  416c38:	ldrb	w0, [x0, #80]
  416c3c:	tbz	w0, #0, 416c54 <ferror@plt+0x14264>
  416c40:	ldr	x3, [x2, #56]
  416c44:	ldr	x0, [x2, #72]
  416c48:	blr	x3
  416c4c:	ldp	x29, x30, [sp], #16
  416c50:	ret
  416c54:	ldr	x2, [x2, #56]
  416c58:	mov	x0, x1
  416c5c:	blr	x2
  416c60:	b	416c4c <ferror@plt+0x1425c>
  416c64:	stp	x29, x30, [sp, #-16]!
  416c68:	mov	x29, sp
  416c6c:	mov	x2, x0
  416c70:	ldrb	w0, [x0, #80]
  416c74:	tbz	w0, #0, 416c8c <ferror@plt+0x1429c>
  416c78:	ldr	x3, [x2, #64]
  416c7c:	ldr	x0, [x2, #72]
  416c80:	blr	x3
  416c84:	ldp	x29, x30, [sp], #16
  416c88:	ret
  416c8c:	ldr	x2, [x2, #64]
  416c90:	mov	x0, x1
  416c94:	blr	x2
  416c98:	b	416c84 <ferror@plt+0x14294>
  416c9c:	stp	x29, x30, [sp, #-48]!
  416ca0:	mov	x29, sp
  416ca4:	stp	x19, x20, [sp, #16]
  416ca8:	str	x21, [sp, #32]
  416cac:	mov	x19, x0
  416cb0:	cmp	x2, #0x0
  416cb4:	mov	x0, #0x10                  	// #16
  416cb8:	csel	x20, x2, x0, ne  // ne = any
  416cbc:	cmp	x1, #0x0
  416cc0:	mov	x0, #0xfe0                 	// #4064
  416cc4:	csel	x1, x1, x0, ne  // ne = any
  416cc8:	str	x1, [x19]
  416ccc:	sub	x21, x20, #0x1
  416cd0:	str	x21, [x19, #48]
  416cd4:	mov	x0, x19
  416cd8:	bl	416c2c <ferror@plt+0x1423c>
  416cdc:	str	x0, [x19, #8]
  416ce0:	cbz	x0, 416d30 <ferror@plt+0x14340>
  416ce4:	add	x2, x0, #0x10
  416ce8:	add	x2, x2, x21
  416cec:	neg	x20, x20
  416cf0:	and	x20, x2, x20
  416cf4:	str	x20, [x19, #16]
  416cf8:	str	x20, [x19, #24]
  416cfc:	ldr	x1, [x19]
  416d00:	add	x1, x0, x1
  416d04:	str	x1, [x0]
  416d08:	str	x1, [x19, #32]
  416d0c:	str	xzr, [x0, #8]
  416d10:	ldrb	w0, [x19, #80]
  416d14:	and	w0, w0, #0xfffffff9
  416d18:	strb	w0, [x19, #80]
  416d1c:	mov	w0, #0x1                   	// #1
  416d20:	ldp	x19, x20, [sp, #16]
  416d24:	ldr	x21, [sp, #32]
  416d28:	ldp	x29, x30, [sp], #48
  416d2c:	ret
  416d30:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  416d34:	ldr	x0, [x0, #1024]
  416d38:	blr	x0
  416d3c:	stp	x29, x30, [sp, #-16]!
  416d40:	mov	x29, sp
  416d44:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x406c>
  416d48:	add	x3, x3, #0x3a8
  416d4c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x406c>
  416d50:	add	x2, x2, #0x38
  416d54:	mov	w1, #0x1                   	// #1
  416d58:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  416d5c:	ldr	x0, [x0, #1048]
  416d60:	bl	4027a0 <__fprintf_chk@plt>
  416d64:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  416d68:	ldr	w0, [x0, #868]
  416d6c:	bl	402400 <exit@plt>

0000000000416d70 <_obstack_begin@@Base>:
  416d70:	stp	x29, x30, [sp, #-16]!
  416d74:	mov	x29, sp
  416d78:	str	x3, [x0, #56]
  416d7c:	str	x4, [x0, #64]
  416d80:	ldrb	w3, [x0, #80]
  416d84:	and	w3, w3, #0xfffffffe
  416d88:	strb	w3, [x0, #80]
  416d8c:	bl	416c9c <ferror@plt+0x142ac>
  416d90:	ldp	x29, x30, [sp], #16
  416d94:	ret

0000000000416d98 <_obstack_begin_1@@Base>:
  416d98:	stp	x29, x30, [sp, #-16]!
  416d9c:	mov	x29, sp
  416da0:	str	x3, [x0, #56]
  416da4:	str	x4, [x0, #64]
  416da8:	str	x5, [x0, #72]
  416dac:	ldrb	w3, [x0, #80]
  416db0:	orr	w3, w3, #0x1
  416db4:	strb	w3, [x0, #80]
  416db8:	bl	416c9c <ferror@plt+0x142ac>
  416dbc:	ldp	x29, x30, [sp], #16
  416dc0:	ret

0000000000416dc4 <_obstack_newchunk@@Base>:
  416dc4:	stp	x29, x30, [sp, #-64]!
  416dc8:	mov	x29, sp
  416dcc:	stp	x19, x20, [sp, #16]
  416dd0:	stp	x21, x22, [sp, #32]
  416dd4:	str	x23, [sp, #48]
  416dd8:	mov	x19, x0
  416ddc:	ldr	x22, [x0, #8]
  416de0:	ldr	x21, [x0, #24]
  416de4:	ldr	x0, [x0, #16]
  416de8:	sub	x21, x21, x0
  416dec:	add	x1, x21, x1
  416df0:	ldr	x0, [x19, #48]
  416df4:	add	x0, x1, x0
  416df8:	lsr	x20, x21, #3
  416dfc:	add	x20, x20, #0x64
  416e00:	add	x20, x20, x0
  416e04:	ldr	x2, [x19]
  416e08:	cmp	x2, x0
  416e0c:	csel	x2, x2, x0, cs  // cs = hs, nlast
  416e10:	cmp	x2, x20
  416e14:	csel	x20, x2, x20, cs  // cs = hs, nlast
  416e18:	cmp	x21, x1
  416e1c:	ccmp	x1, x0, #0x2, ls  // ls = plast
  416e20:	b.hi	416ebc <_obstack_newchunk@@Base+0xf8>  // b.pmore
  416e24:	mov	x1, x20
  416e28:	mov	x0, x19
  416e2c:	bl	416c2c <ferror@plt+0x1423c>
  416e30:	mov	x23, x0
  416e34:	cbz	x0, 416ebc <_obstack_newchunk@@Base+0xf8>
  416e38:	str	x0, [x19, #8]
  416e3c:	str	x22, [x0, #8]
  416e40:	add	x2, x0, x20
  416e44:	str	x2, [x19, #32]
  416e48:	mov	x1, x0
  416e4c:	str	x2, [x1], #16
  416e50:	ldr	x20, [x19, #48]
  416e54:	add	x1, x1, x20
  416e58:	bic	x20, x1, x20
  416e5c:	mov	x2, x21
  416e60:	ldr	x1, [x19, #16]
  416e64:	mov	x0, x20
  416e68:	bl	402390 <memcpy@plt>
  416e6c:	ldrb	w0, [x19, #80]
  416e70:	tbnz	w0, #1, 416e90 <_obstack_newchunk@@Base+0xcc>
  416e74:	ldr	x0, [x19, #48]
  416e78:	add	x1, x22, #0x10
  416e7c:	add	x1, x1, x0
  416e80:	bic	x0, x1, x0
  416e84:	ldr	x1, [x19, #16]
  416e88:	cmp	x1, x0
  416e8c:	b.eq	416ec8 <_obstack_newchunk@@Base+0x104>  // b.none
  416e90:	str	x20, [x19, #16]
  416e94:	add	x20, x20, x21
  416e98:	str	x20, [x19, #24]
  416e9c:	ldrb	w0, [x19, #80]
  416ea0:	and	w0, w0, #0xfffffffd
  416ea4:	strb	w0, [x19, #80]
  416ea8:	ldp	x19, x20, [sp, #16]
  416eac:	ldp	x21, x22, [sp, #32]
  416eb0:	ldr	x23, [sp, #48]
  416eb4:	ldp	x29, x30, [sp], #64
  416eb8:	ret
  416ebc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1906c>
  416ec0:	ldr	x0, [x0, #1024]
  416ec4:	blr	x0
  416ec8:	ldr	x0, [x22, #8]
  416ecc:	str	x0, [x23, #8]
  416ed0:	mov	x1, x22
  416ed4:	mov	x0, x19
  416ed8:	bl	416c64 <ferror@plt+0x14274>
  416edc:	b	416e90 <_obstack_newchunk@@Base+0xcc>

0000000000416ee0 <_obstack_allocated_p@@Base>:
  416ee0:	ldr	x0, [x0, #8]
  416ee4:	cbnz	x0, 416ef4 <_obstack_allocated_p@@Base+0x14>
  416ee8:	b	416f08 <_obstack_allocated_p@@Base+0x28>
  416eec:	ldr	x0, [x0, #8]
  416ef0:	cbz	x0, 416f08 <_obstack_allocated_p@@Base+0x28>
  416ef4:	cmp	x1, x0
  416ef8:	b.ls	416eec <_obstack_allocated_p@@Base+0xc>  // b.plast
  416efc:	ldr	x2, [x0]
  416f00:	cmp	x2, x1
  416f04:	b.cc	416eec <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  416f08:	cmp	x0, #0x0
  416f0c:	cset	w0, ne  // ne = any
  416f10:	ret

0000000000416f14 <_obstack_free@@Base>:
  416f14:	stp	x29, x30, [sp, #-48]!
  416f18:	mov	x29, sp
  416f1c:	stp	x19, x20, [sp, #16]
  416f20:	str	x21, [sp, #32]
  416f24:	mov	x19, x0
  416f28:	mov	x21, x1
  416f2c:	ldr	x1, [x0, #8]
  416f30:	cbnz	x1, 416f5c <_obstack_free@@Base+0x48>
  416f34:	cbz	x21, 416f84 <_obstack_free@@Base+0x70>
  416f38:	bl	402720 <abort@plt>
  416f3c:	ldr	x20, [x1, #8]
  416f40:	mov	x0, x19
  416f44:	bl	416c64 <ferror@plt+0x14274>
  416f48:	ldrb	w2, [x19, #80]
  416f4c:	orr	w2, w2, #0x2
  416f50:	strb	w2, [x19, #80]
  416f54:	cbz	x20, 416f34 <_obstack_free@@Base+0x20>
  416f58:	mov	x1, x20
  416f5c:	cmp	x21, x1
  416f60:	b.ls	416f3c <_obstack_free@@Base+0x28>  // b.plast
  416f64:	ldr	x0, [x1]
  416f68:	cmp	x0, x21
  416f6c:	b.cc	416f3c <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  416f70:	str	x21, [x19, #24]
  416f74:	str	x21, [x19, #16]
  416f78:	ldr	x0, [x1]
  416f7c:	str	x0, [x19, #32]
  416f80:	str	x1, [x19, #8]
  416f84:	ldp	x19, x20, [sp, #16]
  416f88:	ldr	x21, [sp, #32]
  416f8c:	ldp	x29, x30, [sp], #48
  416f90:	ret

0000000000416f94 <_obstack_memory_used@@Base>:
  416f94:	ldr	x1, [x0, #8]
  416f98:	cbz	x1, 416fb8 <_obstack_memory_used@@Base+0x24>
  416f9c:	mov	x0, #0x0                   	// #0
  416fa0:	ldr	x2, [x1]
  416fa4:	sub	x2, x2, x1
  416fa8:	add	x0, x0, x2
  416fac:	ldr	x1, [x1, #8]
  416fb0:	cbnz	x1, 416fa0 <_obstack_memory_used@@Base+0xc>
  416fb4:	ret
  416fb8:	mov	x0, #0x0                   	// #0
  416fbc:	b	416fb4 <_obstack_memory_used@@Base+0x20>
  416fc0:	ldrb	w1, [x0]
  416fc4:	cmp	w1, #0x2f
  416fc8:	b.ne	416fd8 <_obstack_memory_used@@Base+0x44>  // b.any
  416fcc:	ldrb	w1, [x0, #1]!
  416fd0:	cmp	w1, #0x2f
  416fd4:	b.eq	416fcc <_obstack_memory_used@@Base+0x38>  // b.none
  416fd8:	ldrb	w2, [x0]
  416fdc:	cbz	w2, 417018 <_obstack_memory_used@@Base+0x84>
  416fe0:	mov	x3, x0
  416fe4:	mov	w1, #0x0                   	// #0
  416fe8:	mov	w5, #0x1                   	// #1
  416fec:	mov	w4, #0x0                   	// #0
  416ff0:	b	417008 <_obstack_memory_used@@Base+0x74>
  416ff4:	cmp	w1, #0x0
  416ff8:	csel	x0, x0, x3, eq  // eq = none
  416ffc:	csel	w1, w1, w4, eq  // eq = none
  417000:	ldrb	w2, [x3, #1]!
  417004:	cbz	w2, 417018 <_obstack_memory_used@@Base+0x84>
  417008:	cmp	w2, #0x2f
  41700c:	b.ne	416ff4 <_obstack_memory_used@@Base+0x60>  // b.any
  417010:	mov	w1, w5
  417014:	b	417000 <_obstack_memory_used@@Base+0x6c>
  417018:	ret
  41701c:	stp	x29, x30, [sp, #-32]!
  417020:	mov	x29, sp
  417024:	str	x19, [sp, #16]
  417028:	mov	x19, x0
  41702c:	bl	4023d0 <strlen@plt>
  417030:	cmp	x0, #0x1
  417034:	b.ls	417048 <_obstack_memory_used@@Base+0xb4>  // b.plast
  417038:	sub	x1, x0, #0x1
  41703c:	ldrb	w2, [x19, x1]
  417040:	cmp	w2, #0x2f
  417044:	b.eq	417054 <_obstack_memory_used@@Base+0xc0>  // b.none
  417048:	ldr	x19, [sp, #16]
  41704c:	ldp	x29, x30, [sp], #32
  417050:	ret
  417054:	mov	x0, x1
  417058:	b	417030 <_obstack_memory_used@@Base+0x9c>
  41705c:	stp	x29, x30, [sp, #-32]!
  417060:	mov	x29, sp
  417064:	mov	x1, #0x0                   	// #0
  417068:	bl	4029e0 <setlocale@plt>
  41706c:	mov	w1, #0x1                   	// #1
  417070:	cbz	x0, 4170ac <_obstack_memory_used@@Base+0x118>
  417074:	str	x19, [sp, #16]
  417078:	mov	x19, x0
  41707c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x406c>
  417080:	add	x1, x1, #0x3e0
  417084:	bl	4027b0 <strcmp@plt>
  417088:	mov	w1, #0x0                   	// #0
  41708c:	cbz	w0, 4170b8 <_obstack_memory_used@@Base+0x124>
  417090:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x406c>
  417094:	add	x1, x1, #0x3e8
  417098:	mov	x0, x19
  41709c:	bl	4027b0 <strcmp@plt>
  4170a0:	cmp	w0, #0x0
  4170a4:	cset	w1, ne  // ne = any
  4170a8:	ldr	x19, [sp, #16]
  4170ac:	mov	w0, w1
  4170b0:	ldp	x29, x30, [sp], #32
  4170b4:	ret
  4170b8:	ldr	x19, [sp, #16]
  4170bc:	b	4170ac <_obstack_memory_used@@Base+0x118>
  4170c0:	stp	x29, x30, [sp, #-208]!
  4170c4:	mov	x29, sp
  4170c8:	stp	x19, x20, [sp, #16]
  4170cc:	stp	x21, x22, [sp, #32]
  4170d0:	mov	w0, #0xe                   	// #14
  4170d4:	bl	402550 <nl_langinfo@plt>
  4170d8:	mov	x21, x0
  4170dc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x6c>
  4170e0:	add	x0, x0, #0x6c0
  4170e4:	cmp	x21, #0x0
  4170e8:	csel	x21, x0, x21, eq  // eq = none
  4170ec:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  4170f0:	ldr	x20, [x0, #3400]
  4170f4:	cbz	x20, 417104 <_obstack_memory_used@@Base+0x170>
  4170f8:	ldrb	w19, [x20]
  4170fc:	cbnz	w19, 417358 <_obstack_memory_used@@Base+0x3c4>
  417100:	b	417388 <_obstack_memory_used@@Base+0x3f4>
  417104:	stp	x23, x24, [sp, #48]
  417108:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x406c>
  41710c:	add	x0, x0, #0x408
  417110:	bl	402980 <getenv@plt>
  417114:	mov	x19, x0
  417118:	cbz	x0, 4173bc <_obstack_memory_used@@Base+0x428>
  41711c:	ldrb	w0, [x0]
  417120:	cbz	w0, 4173cc <_obstack_memory_used@@Base+0x438>
  417124:	mov	x0, x19
  417128:	bl	4023d0 <strlen@plt>
  41712c:	mov	x24, x0
  417130:	cbnz	x0, 417154 <_obstack_memory_used@@Base+0x1c0>
  417134:	add	x0, x24, #0xe
  417138:	bl	402570 <malloc@plt>
  41713c:	mov	x22, x0
  417140:	cbz	x0, 4173b0 <_obstack_memory_used@@Base+0x41c>
  417144:	mov	x2, x24
  417148:	mov	x1, x19
  41714c:	bl	402390 <memcpy@plt>
  417150:	b	417404 <_obstack_memory_used@@Base+0x470>
  417154:	add	x0, x19, x0
  417158:	ldurb	w0, [x0, #-1]
  41715c:	cmp	w0, #0x2f
  417160:	b.eq	417134 <_obstack_memory_used@@Base+0x1a0>  // b.none
  417164:	mov	x23, x24
  417168:	b	4173d8 <_obstack_memory_used@@Base+0x444>
  41716c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x106c>
  417170:	add	x1, x1, #0xab0
  417174:	bl	402620 <fdopen@plt>
  417178:	mov	x19, x0
  41717c:	mov	x23, #0x0                   	// #0
  417180:	cbz	x0, 41719c <_obstack_memory_used@@Base+0x208>
  417184:	stp	x25, x26, [sp, #64]
  417188:	stp	x27, x28, [sp, #80]
  41718c:	adrp	x24, 41b000 <_obstack_memory_used@@Base+0x406c>
  417190:	add	x24, x24, #0x428
  417194:	mov	x25, #0xfffffffffffffffe    	// #-2
  417198:	b	41726c <_obstack_memory_used@@Base+0x2d8>
  41719c:	mov	w0, w24
  4171a0:	bl	4026b0 <close@plt>
  4171a4:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x6c>
  4171a8:	add	x20, x20, #0x6c0
  4171ac:	b	41743c <_obstack_memory_used@@Base+0x4a8>
  4171b0:	mov	x0, x19
  4171b4:	bl	4029d0 <__uflow@plt>
  4171b8:	cmn	w0, #0x1
  4171bc:	b.ne	417288 <_obstack_memory_used@@Base+0x2f4>  // b.any
  4171c0:	b	4171f4 <_obstack_memory_used@@Base+0x260>
  4171c4:	ldr	x1, [x19, #8]
  4171c8:	ldr	x0, [x19, #16]
  4171cc:	cmp	x1, x0
  4171d0:	b.cs	417210 <_obstack_memory_used@@Base+0x27c>  // b.hs, b.nlast
  4171d4:	add	x0, x1, #0x1
  4171d8:	str	x0, [x19, #8]
  4171dc:	ldrb	w1, [x1]
  4171e0:	cmp	w1, #0xa
  4171e4:	ccmn	w1, #0x1, #0x4, ne  // ne = any
  4171e8:	b.ne	4171c4 <_obstack_memory_used@@Base+0x230>  // b.any
  4171ec:	cmn	w1, #0x1
  4171f0:	b.ne	41726c <_obstack_memory_used@@Base+0x2d8>  // b.any
  4171f4:	mov	x0, x19
  4171f8:	bl	4167ec <ferror@plt+0x13dfc>
  4171fc:	cbz	x23, 41731c <_obstack_memory_used@@Base+0x388>
  417200:	strb	wzr, [x20, x23]
  417204:	ldp	x25, x26, [sp, #64]
  417208:	ldp	x27, x28, [sp, #80]
  41720c:	b	41743c <_obstack_memory_used@@Base+0x4a8>
  417210:	mov	x0, x19
  417214:	bl	4029d0 <__uflow@plt>
  417218:	mov	w1, w0
  41721c:	b	4171e0 <_obstack_memory_used@@Base+0x24c>
  417220:	add	x1, x26, x0
  417224:	add	x1, x1, x23
  417228:	add	x23, x1, #0x2
  41722c:	add	x1, x1, #0x3
  417230:	mov	x0, x20
  417234:	bl	402670 <realloc@plt>
  417238:	mov	x27, x0
  41723c:	cbz	x27, 4172f8 <_obstack_memory_used@@Base+0x364>
  417240:	sub	x28, x23, x28
  417244:	sub	x0, x25, x26
  417248:	add	x0, x0, x28
  41724c:	add	x1, sp, #0x60
  417250:	add	x0, x27, x0
  417254:	bl	4028b0 <strcpy@plt>
  417258:	sub	x0, x28, #0x1
  41725c:	add	x1, sp, #0x98
  417260:	add	x0, x27, x0
  417264:	bl	4028b0 <strcpy@plt>
  417268:	mov	x20, x27
  41726c:	ldr	x0, [x19, #8]
  417270:	ldr	x1, [x19, #16]
  417274:	cmp	x0, x1
  417278:	b.cs	4171b0 <_obstack_memory_used@@Base+0x21c>  // b.hs, b.nlast
  41727c:	add	x1, x0, #0x1
  417280:	str	x1, [x19, #8]
  417284:	ldrb	w0, [x0]
  417288:	sub	w1, w0, #0x9
  41728c:	cmp	w0, #0x20
  417290:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  417294:	b.ls	41726c <_obstack_memory_used@@Base+0x2d8>  // b.plast
  417298:	cmp	w0, #0x23
  41729c:	b.eq	4171c4 <_obstack_memory_used@@Base+0x230>  // b.none
  4172a0:	mov	x1, x19
  4172a4:	bl	402820 <ungetc@plt>
  4172a8:	add	x3, sp, #0x98
  4172ac:	add	x2, sp, #0x60
  4172b0:	mov	x1, x24
  4172b4:	mov	x0, x19
  4172b8:	bl	4025a0 <__isoc99_fscanf@plt>
  4172bc:	cmp	w0, #0x1
  4172c0:	b.le	4171f4 <_obstack_memory_used@@Base+0x260>
  4172c4:	add	x0, sp, #0x60
  4172c8:	bl	4023d0 <strlen@plt>
  4172cc:	mov	x26, x0
  4172d0:	add	x0, sp, #0x98
  4172d4:	bl	4023d0 <strlen@plt>
  4172d8:	mov	x28, x0
  4172dc:	cbnz	x23, 417220 <_obstack_memory_used@@Base+0x28c>
  4172e0:	add	x0, x26, x0
  4172e4:	add	x23, x0, #0x2
  4172e8:	add	x0, x0, #0x3
  4172ec:	bl	402570 <malloc@plt>
  4172f0:	mov	x27, x0
  4172f4:	b	41723c <_obstack_memory_used@@Base+0x2a8>
  4172f8:	mov	x0, x20
  4172fc:	bl	402810 <free@plt>
  417300:	mov	x0, x19
  417304:	bl	4167ec <ferror@plt+0x13dfc>
  417308:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x6c>
  41730c:	add	x20, x20, #0x6c0
  417310:	ldp	x25, x26, [sp, #64]
  417314:	ldp	x27, x28, [sp, #80]
  417318:	b	41743c <_obstack_memory_used@@Base+0x4a8>
  41731c:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x6c>
  417320:	add	x20, x20, #0x6c0
  417324:	ldp	x25, x26, [sp, #64]
  417328:	ldp	x27, x28, [sp, #80]
  41732c:	b	41743c <_obstack_memory_used@@Base+0x4a8>
  417330:	mov	x0, x20
  417334:	bl	4023d0 <strlen@plt>
  417338:	add	x19, x0, #0x1
  41733c:	add	x19, x20, x19
  417340:	mov	x0, x19
  417344:	bl	4023d0 <strlen@plt>
  417348:	add	x0, x0, #0x1
  41734c:	add	x20, x19, x0
  417350:	ldrb	w19, [x19, x0]
  417354:	cbz	w19, 417388 <_obstack_memory_used@@Base+0x3f4>
  417358:	mov	x1, x20
  41735c:	mov	x0, x21
  417360:	bl	4027b0 <strcmp@plt>
  417364:	cbz	w0, 417378 <_obstack_memory_used@@Base+0x3e4>
  417368:	cmp	w19, #0x2a
  41736c:	b.ne	417330 <_obstack_memory_used@@Base+0x39c>  // b.any
  417370:	ldrb	w0, [x20, #1]
  417374:	cbnz	w0, 417330 <_obstack_memory_used@@Base+0x39c>
  417378:	mov	x0, x20
  41737c:	bl	4023d0 <strlen@plt>
  417380:	add	x21, x0, #0x1
  417384:	add	x21, x20, x21
  417388:	ldrb	w1, [x21]
  41738c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x406c>
  417390:	add	x0, x0, #0x3f0
  417394:	cmp	w1, #0x0
  417398:	csel	x21, x0, x21, eq  // eq = none
  41739c:	mov	x0, x21
  4173a0:	ldp	x19, x20, [sp, #16]
  4173a4:	ldp	x21, x22, [sp, #32]
  4173a8:	ldp	x29, x30, [sp], #208
  4173ac:	ret
  4173b0:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x6c>
  4173b4:	add	x20, x20, #0x6c0
  4173b8:	b	417444 <_obstack_memory_used@@Base+0x4b0>
  4173bc:	mov	x23, #0x8                   	// #8
  4173c0:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x406c>
  4173c4:	add	x19, x19, #0x3f8
  4173c8:	b	4173d8 <_obstack_memory_used@@Base+0x444>
  4173cc:	mov	x23, #0x8                   	// #8
  4173d0:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x406c>
  4173d4:	add	x19, x19, #0x3f8
  4173d8:	add	x24, x23, #0x1
  4173dc:	add	x0, x23, #0xf
  4173e0:	bl	402570 <malloc@plt>
  4173e4:	mov	x22, x0
  4173e8:	cbz	x0, 4173b0 <_obstack_memory_used@@Base+0x41c>
  4173ec:	mov	x2, x23
  4173f0:	mov	x1, x19
  4173f4:	mov	x0, x22
  4173f8:	bl	402390 <memcpy@plt>
  4173fc:	mov	w0, #0x2f                  	// #47
  417400:	strb	w0, [x22, x23]
  417404:	add	x2, x22, x24
  417408:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x406c>
  41740c:	add	x1, x1, #0x418
  417410:	ldr	x3, [x1]
  417414:	str	x3, [x22, x24]
  417418:	ldur	x0, [x1, #6]
  41741c:	stur	x0, [x2, #6]
  417420:	mov	w1, #0x8000                	// #32768
  417424:	mov	x0, x22
  417428:	bl	402580 <open@plt>
  41742c:	mov	w24, w0
  417430:	tbz	w0, #31, 41716c <_obstack_memory_used@@Base+0x1d8>
  417434:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x6c>
  417438:	add	x20, x20, #0x6c0
  41743c:	mov	x0, x22
  417440:	bl	402810 <free@plt>
  417444:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0xabb8>
  417448:	str	x20, [x0, #3400]
  41744c:	ldp	x23, x24, [sp, #48]
  417450:	b	4170f8 <_obstack_memory_used@@Base+0x164>
  417454:	nop
  417458:	stp	x29, x30, [sp, #-64]!
  41745c:	mov	x29, sp
  417460:	stp	x19, x20, [sp, #16]
  417464:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1806c>
  417468:	add	x20, x20, #0xdf0
  41746c:	stp	x21, x22, [sp, #32]
  417470:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1806c>
  417474:	add	x21, x21, #0xde8
  417478:	sub	x20, x20, x21
  41747c:	mov	w22, w0
  417480:	stp	x23, x24, [sp, #48]
  417484:	mov	x23, x1
  417488:	mov	x24, x2
  41748c:	bl	402340 <mbrtowc@plt-0x40>
  417490:	cmp	xzr, x20, asr #3
  417494:	b.eq	4174c0 <_obstack_memory_used@@Base+0x52c>  // b.none
  417498:	asr	x20, x20, #3
  41749c:	mov	x19, #0x0                   	// #0
  4174a0:	ldr	x3, [x21, x19, lsl #3]
  4174a4:	mov	x2, x24
  4174a8:	add	x19, x19, #0x1
  4174ac:	mov	x1, x23
  4174b0:	mov	w0, w22
  4174b4:	blr	x3
  4174b8:	cmp	x20, x19
  4174bc:	b.ne	4174a0 <_obstack_memory_used@@Base+0x50c>  // b.any
  4174c0:	ldp	x19, x20, [sp, #16]
  4174c4:	ldp	x21, x22, [sp, #32]
  4174c8:	ldp	x23, x24, [sp, #48]
  4174cc:	ldp	x29, x30, [sp], #64
  4174d0:	ret
  4174d4:	nop
  4174d8:	ret
  4174dc:	nop
  4174e0:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1906c>
  4174e4:	mov	x1, #0x0                   	// #0
  4174e8:	ldr	x2, [x2, #840]
  4174ec:	b	402490 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004174f0 <.fini>:
  4174f0:	stp	x29, x30, [sp, #-16]!
  4174f4:	mov	x29, sp
  4174f8:	ldp	x29, x30, [sp], #16
  4174fc:	ret
