
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ln_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000a38 <_init>:
 a38:	stp	x29, x30, [sp, #-16]!
 a3c:	mov	x29, sp
 a40:	bl	b80 <call_weak_fn>
 a44:	ldp	x29, x30, [sp], #16
 a48:	ret

Disassembly of section .plt:

0000000000000a50 <.plt>:
 a50:	stp	x16, x30, [sp, #-16]!
 a54:	adrp	x16, 11000 <__FRAME_END__+0xfbd8>
 a58:	ldr	x17, [x16, #4088]
 a5c:	add	x16, x16, #0xff8
 a60:	br	x17
 a64:	nop
 a68:	nop
 a6c:	nop

0000000000000a70 <strlen@plt>:
 a70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a74:	ldr	x17, [x16]
 a78:	add	x16, x16, #0x0
 a7c:	br	x17

0000000000000a80 <builtin_error@plt>:
 a80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a84:	ldr	x17, [x16, #8]
 a88:	add	x16, x16, #0x8
 a8c:	br	x17

0000000000000a90 <__cxa_finalize@plt>:
 a90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a94:	ldr	x17, [x16, #16]
 a98:	add	x16, x16, #0x10
 a9c:	br	x17

0000000000000aa0 <builtin_help@plt>:
 aa0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 aa4:	ldr	x17, [x16, #24]
 aa8:	add	x16, x16, #0x18
 aac:	br	x17

0000000000000ab0 <xmalloc@plt>:
 ab0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ab4:	ldr	x17, [x16, #32]
 ab8:	add	x16, x16, #0x20
 abc:	br	x17

0000000000000ac0 <builtin_usage@plt>:
 ac0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ac4:	ldr	x17, [x16, #40]
 ac8:	add	x16, x16, #0x28
 acc:	br	x17

0000000000000ad0 <strerror@plt>:
 ad0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ad4:	ldr	x17, [x16, #48]
 ad8:	add	x16, x16, #0x30
 adc:	br	x17

0000000000000ae0 <strrchr@plt>:
 ae0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ae4:	ldr	x17, [x16, #56]
 ae8:	add	x16, x16, #0x38
 aec:	br	x17

0000000000000af0 <__gmon_start__@plt>:
 af0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 af4:	ldr	x17, [x16, #64]
 af8:	add	x16, x16, #0x40
 afc:	br	x17

0000000000000b00 <free@plt>:
 b00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b04:	ldr	x17, [x16, #72]
 b08:	add	x16, x16, #0x48
 b0c:	br	x17

0000000000000b10 <internal_getopt@plt>:
 b10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b14:	ldr	x17, [x16, #80]
 b18:	add	x16, x16, #0x50
 b1c:	br	x17

0000000000000b20 <reset_internal_getopt@plt>:
 b20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b24:	ldr	x17, [x16, #88]
 b28:	add	x16, x16, #0x58
 b2c:	br	x17

0000000000000b30 <strcpy@plt>:
 b30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b34:	ldr	x17, [x16, #96]
 b38:	add	x16, x16, #0x60
 b3c:	br	x17

0000000000000b40 <__lxstat@plt>:
 b40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b44:	ldr	x17, [x16, #104]
 b48:	add	x16, x16, #0x68
 b4c:	br	x17

0000000000000b50 <__errno_location@plt>:
 b50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b54:	ldr	x17, [x16, #112]
 b58:	add	x16, x16, #0x70
 b5c:	br	x17

0000000000000b60 <__xstat@plt>:
 b60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b64:	ldr	x17, [x16, #120]
 b68:	add	x16, x16, #0x78
 b6c:	br	x17

0000000000000b70 <unlink@plt>:
 b70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b74:	ldr	x17, [x16, #128]
 b78:	add	x16, x16, #0x80
 b7c:	br	x17

Disassembly of section .text:

0000000000000b80 <call_weak_fn>:
     b80:	adrp	x0, 11000 <__FRAME_END__+0xfbd8>
     b84:	ldr	x0, [x0, #4032]
     b88:	cbz	x0, b90 <call_weak_fn+0x10>
     b8c:	b	af0 <__gmon_start__@plt>
     b90:	ret

0000000000000b94 <deregister_tm_clones>:
     b94:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     b98:	add	x0, x0, #0x100
     b9c:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     ba0:	add	x1, x1, #0x100
     ba4:	cmp	x0, x1
     ba8:	b.eq	bd4 <deregister_tm_clones+0x40>  // b.none
     bac:	adrp	x1, 11000 <__FRAME_END__+0xfbd8>
     bb0:	ldr	x1, [x1, #4016]
     bb4:	cbz	x1, bd4 <deregister_tm_clones+0x40>
     bb8:	stp	x29, x30, [sp, #-16]!
     bbc:	mov	x29, sp
     bc0:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     bc4:	add	x0, x0, #0x100
     bc8:	blr	x1
     bcc:	ldp	x29, x30, [sp], #16
     bd0:	ret
     bd4:	ret

0000000000000bd8 <register_tm_clones>:
     bd8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     bdc:	add	x0, x0, #0x100
     be0:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     be4:	add	x1, x1, #0x100
     be8:	sub	x0, x0, x1
     bec:	lsr	x1, x0, #63
     bf0:	add	x0, x1, x0, asr #3
     bf4:	cmp	xzr, x0, asr #1
     bf8:	b.eq	c28 <register_tm_clones+0x50>  // b.none
     bfc:	asr	x1, x0, #1
     c00:	adrp	x2, 11000 <__FRAME_END__+0xfbd8>
     c04:	ldr	x2, [x2, #4064]
     c08:	cbz	x2, c28 <register_tm_clones+0x50>
     c0c:	stp	x29, x30, [sp, #-16]!
     c10:	mov	x29, sp
     c14:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     c18:	add	x0, x0, #0x100
     c1c:	blr	x2
     c20:	ldp	x29, x30, [sp], #16
     c24:	ret
     c28:	ret

0000000000000c2c <__do_global_dtors_aux>:
     c2c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     c30:	ldrb	w0, [x0, #256]
     c34:	cbnz	w0, c70 <__do_global_dtors_aux+0x44>
     c38:	stp	x29, x30, [sp, #-16]!
     c3c:	mov	x29, sp
     c40:	adrp	x0, 11000 <__FRAME_END__+0xfbd8>
     c44:	ldr	x0, [x0, #4024]
     c48:	cbz	x0, c58 <__do_global_dtors_aux+0x2c>
     c4c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     c50:	ldr	x0, [x0, #136]
     c54:	bl	a90 <__cxa_finalize@plt>
     c58:	bl	b94 <deregister_tm_clones>
     c5c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     c60:	mov	w1, #0x1                   	// #1
     c64:	strb	w1, [x0, #256]
     c68:	ldp	x29, x30, [sp], #16
     c6c:	ret
     c70:	ret

0000000000000c74 <frame_dummy>:
     c74:	stp	x29, x30, [sp, #-16]!
     c78:	mov	x29, sp
     c7c:	bl	bd8 <register_tm_clones>
     c80:	ldp	x29, x30, [sp], #16
     c84:	ret

0000000000000c88 <dolink>:
     c88:	stp	x29, x30, [sp, #-336]!
     c8c:	mov	x29, sp
     c90:	stp	x19, x20, [sp, #16]
     c94:	stp	x21, x22, [sp, #32]
     c98:	mov	x22, x0
     c9c:	mov	x19, x1
     ca0:	mov	w20, w2
     ca4:	tbz	w20, #0, d34 <dolink+0xac>
     ca8:	tbz	w20, #2, db0 <dolink+0x128>
     cac:	add	x2, sp, #0x50
     cb0:	mov	x1, x19
     cb4:	mov	w0, #0x0                   	// #0
     cb8:	bl	b40 <__lxstat@plt>
     cbc:	cmp	w0, #0x0
     cc0:	cset	w0, eq  // eq = none
     cc4:	mov	x21, #0x0                   	// #0
     cc8:	cbz	w0, cdc <dolink+0x54>
     ccc:	ldr	w0, [sp, #96]
     cd0:	and	w0, w0, #0xf000
     cd4:	cmp	w0, #0x4, lsl #12
     cd8:	b.eq	dcc <dolink+0x144>  // b.none
     cdc:	add	x2, sp, #0x50
     ce0:	mov	x1, x19
     ce4:	mov	w0, #0x0                   	// #0
     ce8:	bl	b40 <__lxstat@plt>
     cec:	tst	x20, #0x2
     cf0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     cf4:	b.eq	e58 <dolink+0x1d0>  // b.none
     cf8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     cfc:	ldr	x2, [x0, #264]
     d00:	mov	x1, x19
     d04:	mov	x0, x22
     d08:	blr	x2
     d0c:	mov	w20, w0
     d10:	cbnz	w0, e98 <dolink+0x210>
     d14:	cbz	x21, d20 <dolink+0x98>
     d18:	mov	x0, x21
     d1c:	bl	b00 <free@plt>
     d20:	mov	w0, w20
     d24:	ldp	x19, x20, [sp, #16]
     d28:	ldp	x21, x22, [sp, #32]
     d2c:	ldp	x29, x30, [sp], #336
     d30:	ret
     d34:	add	x2, sp, #0xd0
     d38:	mov	x1, x0
     d3c:	mov	w0, #0x0                   	// #0
     d40:	bl	b60 <__xstat@plt>
     d44:	cbnz	w0, d88 <dolink+0x100>
     d48:	ldr	w0, [sp, #224]
     d4c:	and	w0, w0, #0xf000
     d50:	cmp	w0, #0x4, lsl #12
     d54:	b.ne	ca8 <dolink+0x20>  // b.any
     d58:	bl	b50 <__errno_location@plt>
     d5c:	mov	x1, x0
     d60:	mov	w0, #0x15                  	// #21
     d64:	str	w0, [x1]
     d68:	bl	ad0 <strerror@plt>
     d6c:	mov	x2, x0
     d70:	mov	x1, x22
     d74:	adrp	x0, 1000 <ln_builtin+0x130>
     d78:	add	x0, x0, #0xc0
     d7c:	bl	a80 <builtin_error@plt>
     d80:	mov	w20, #0x1                   	// #1
     d84:	b	d20 <dolink+0x98>
     d88:	bl	b50 <__errno_location@plt>
     d8c:	ldr	w0, [x0]
     d90:	bl	ad0 <strerror@plt>
     d94:	mov	x2, x0
     d98:	mov	x1, x22
     d9c:	adrp	x0, 1000 <ln_builtin+0x130>
     da0:	add	x0, x0, #0xc0
     da4:	bl	a80 <builtin_error@plt>
     da8:	mov	w20, #0x1                   	// #1
     dac:	b	d20 <dolink+0x98>
     db0:	add	x2, sp, #0x50
     db4:	mov	x1, x19
     db8:	mov	w0, #0x0                   	// #0
     dbc:	bl	b60 <__xstat@plt>
     dc0:	cmp	w0, #0x0
     dc4:	cset	w0, eq  // eq = none
     dc8:	b	cc4 <dolink+0x3c>
     dcc:	stp	x23, x24, [sp, #48]
     dd0:	str	x25, [sp, #64]
     dd4:	mov	w1, #0x2f                  	// #47
     dd8:	mov	x0, x22
     ddc:	bl	ae0 <strrchr@plt>
     de0:	cmp	x0, #0x0
     de4:	csinc	x23, x22, x0, eq  // eq = none
     de8:	mov	x0, x19
     dec:	bl	a70 <strlen@plt>
     df0:	mov	x24, x0
     df4:	mov	w25, w0
     df8:	mov	x0, x23
     dfc:	bl	a70 <strlen@plt>
     e00:	add	w1, w24, #0x2
     e04:	add	w0, w1, w0
     e08:	sxtw	x0, w0
     e0c:	bl	ab0 <xmalloc@plt>
     e10:	mov	x21, x0
     e14:	mov	x1, x19
     e18:	bl	b30 <strcpy@plt>
     e1c:	sxtw	x1, w24
     e20:	add	x0, x21, w24, sxtw
     e24:	ldurb	w0, [x0, #-1]
     e28:	cmp	w0, #0x2f
     e2c:	b.eq	e3c <dolink+0x1b4>  // b.none
     e30:	add	w25, w24, #0x1
     e34:	mov	w0, #0x2f                  	// #47
     e38:	strb	w0, [x21, x1]
     e3c:	mov	x1, x23
     e40:	add	x0, x21, w25, sxtw
     e44:	bl	b30 <strcpy@plt>
     e48:	mov	x19, x21
     e4c:	ldp	x23, x24, [sp, #48]
     e50:	ldr	x25, [sp, #64]
     e54:	b	cdc <dolink+0x54>
     e58:	mov	x0, x19
     e5c:	bl	b70 <unlink@plt>
     e60:	cbz	w0, cf8 <dolink+0x70>
     e64:	bl	b50 <__errno_location@plt>
     e68:	ldr	w0, [x0]
     e6c:	bl	ad0 <strerror@plt>
     e70:	mov	x2, x0
     e74:	mov	x1, x19
     e78:	adrp	x0, 1000 <ln_builtin+0x130>
     e7c:	add	x0, x0, #0xc8
     e80:	bl	a80 <builtin_error@plt>
     e84:	mov	w20, #0x1                   	// #1
     e88:	cbz	x21, d20 <dolink+0x98>
     e8c:	mov	x0, x21
     e90:	bl	b00 <free@plt>
     e94:	b	d20 <dolink+0x98>
     e98:	bl	b50 <__errno_location@plt>
     e9c:	ldr	w0, [x0]
     ea0:	bl	ad0 <strerror@plt>
     ea4:	mov	x3, x0
     ea8:	mov	x2, x22
     eac:	mov	x1, x19
     eb0:	adrp	x0, 1000 <ln_builtin+0x130>
     eb4:	add	x0, x0, #0xe0
     eb8:	bl	a80 <builtin_error@plt>
     ebc:	mov	w20, #0x1                   	// #1
     ec0:	cbz	x21, d20 <dolink+0x98>
     ec4:	mov	x0, x21
     ec8:	bl	b00 <free@plt>
     ecc:	b	d20 <dolink+0x98>

0000000000000ed0 <ln_builtin>:
     ed0:	stp	x29, x30, [sp, #-192]!
     ed4:	mov	x29, sp
     ed8:	stp	x19, x20, [sp, #16]
     edc:	stp	x21, x22, [sp, #32]
     ee0:	mov	x20, x0
     ee4:	bl	b20 <reset_internal_getopt@plt>
     ee8:	mov	w21, #0x0                   	// #0
     eec:	adrp	x19, 1000 <ln_builtin+0x130>
     ef0:	add	x19, x19, #0x100
     ef4:	mov	x1, x19
     ef8:	mov	x0, x20
     efc:	bl	b10 <internal_getopt@plt>
     f00:	cmn	w0, #0x1
     f04:	b.eq	f74 <ln_builtin+0xa4>  // b.none
     f08:	cmp	w0, #0x68
     f0c:	b.eq	f44 <ln_builtin+0x74>  // b.none
     f10:	b.gt	f2c <ln_builtin+0x5c>
     f14:	cmn	w0, #0x63
     f18:	b.eq	f4c <ln_builtin+0x7c>  // b.none
     f1c:	cmp	w0, #0x66
     f20:	b.ne	f68 <ln_builtin+0x98>  // b.any
     f24:	orr	w21, w21, #0x2
     f28:	b	ef4 <ln_builtin+0x24>
     f2c:	cmp	w0, #0x6e
     f30:	b.eq	f44 <ln_builtin+0x74>  // b.none
     f34:	cmp	w0, #0x73
     f38:	b.ne	f68 <ln_builtin+0x98>  // b.any
     f3c:	orr	w21, w21, #0x1
     f40:	b	ef4 <ln_builtin+0x24>
     f44:	orr	w21, w21, #0x4
     f48:	b	ef4 <ln_builtin+0x24>
     f4c:	bl	aa0 <builtin_help@plt>
     f50:	mov	w19, #0x102                 	// #258
     f54:	mov	w0, w19
     f58:	ldp	x19, x20, [sp, #16]
     f5c:	ldp	x21, x22, [sp, #32]
     f60:	ldp	x29, x30, [sp], #192
     f64:	ret
     f68:	bl	ac0 <builtin_usage@plt>
     f6c:	mov	w19, #0x102                 	// #258
     f70:	b	f54 <ln_builtin+0x84>
     f74:	adrp	x0, 11000 <__FRAME_END__+0xfbd8>
     f78:	ldr	x0, [x0, #4048]
     f7c:	ldr	x20, [x0]
     f80:	cbz	x20, 102c <ln_builtin+0x15c>
     f84:	adrp	x0, 11000 <__FRAME_END__+0xfbd8>
     f88:	ldr	x1, [x0, #4056]
     f8c:	adrp	x0, 11000 <__FRAME_END__+0xfbd8>
     f90:	ldr	x0, [x0, #4040]
     f94:	tst	x21, #0x1
     f98:	csel	x0, x0, x1, ne  // ne = any
     f9c:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     fa0:	str	x0, [x1, #264]
     fa4:	ldr	x1, [x20]
     fa8:	cbz	x1, 1038 <ln_builtin+0x168>
     fac:	ldr	x2, [x1]
     fb0:	mov	x0, x20
     fb4:	cbz	x2, 1058 <ln_builtin+0x188>
     fb8:	str	x23, [sp, #48]
     fbc:	mov	x22, x0
     fc0:	ldr	x0, [x0]
     fc4:	cbnz	x0, fbc <ln_builtin+0xec>
     fc8:	ldr	x0, [x22, #8]
     fcc:	ldr	x23, [x0]
     fd0:	add	x2, sp, #0x40
     fd4:	mov	x1, x23
     fd8:	mov	w0, #0x0                   	// #0
     fdc:	bl	b60 <__xstat@plt>
     fe0:	tbnz	w0, #31, 1078 <ln_builtin+0x1a8>
     fe4:	ldr	w0, [sp, #80]
     fe8:	and	w0, w0, #0xf000
     fec:	cmp	w0, #0x4, lsl #12
     ff0:	b.ne	109c <ln_builtin+0x1cc>  // b.any
     ff4:	mov	w19, #0x0                   	// #0
     ff8:	cmp	x22, x20
     ffc:	b.eq	1094 <ln_builtin+0x1c4>  // b.none
    1000:	ldr	x0, [x20, #8]
    1004:	mov	w2, w21
    1008:	mov	x1, x23
    100c:	ldr	x0, [x0]
    1010:	bl	c88 <dolink>
    1014:	add	w19, w19, w0
    1018:	ldr	x20, [x20]
    101c:	cmp	x22, x20
    1020:	b.ne	1000 <ln_builtin+0x130>  // b.any
    1024:	ldr	x23, [sp, #48]
    1028:	b	f54 <ln_builtin+0x84>
    102c:	bl	ac0 <builtin_usage@plt>
    1030:	mov	w19, #0x102                 	// #258
    1034:	b	f54 <ln_builtin+0x84>
    1038:	ldr	x0, [x20, #8]
    103c:	mov	w2, w21
    1040:	adrp	x1, 1000 <ln_builtin+0x130>
    1044:	add	x1, x1, #0x108
    1048:	ldr	x0, [x0]
    104c:	bl	c88 <dolink>
    1050:	mov	w19, w0
    1054:	b	f54 <ln_builtin+0x84>
    1058:	ldr	x1, [x1, #8]
    105c:	ldr	x0, [x20, #8]
    1060:	mov	w2, w21
    1064:	ldr	x1, [x1]
    1068:	ldr	x0, [x0]
    106c:	bl	c88 <dolink>
    1070:	mov	w19, w0
    1074:	b	f54 <ln_builtin+0x84>
    1078:	mov	x1, x23
    107c:	adrp	x0, 1000 <ln_builtin+0x130>
    1080:	add	x0, x0, #0x110
    1084:	bl	a80 <builtin_error@plt>
    1088:	mov	w19, #0x1                   	// #1
    108c:	ldr	x23, [sp, #48]
    1090:	b	f54 <ln_builtin+0x84>
    1094:	ldr	x23, [sp, #48]
    1098:	b	f54 <ln_builtin+0x84>
    109c:	bl	ac0 <builtin_usage@plt>
    10a0:	mov	w19, #0x102                 	// #258
    10a4:	ldr	x23, [sp, #48]
    10a8:	b	f54 <ln_builtin+0x84>

Disassembly of section .fini:

00000000000010ac <_fini>:
    10ac:	stp	x29, x30, [sp, #-16]!
    10b0:	mov	x29, sp
    10b4:	ldp	x29, x30, [sp], #16
    10b8:	ret
