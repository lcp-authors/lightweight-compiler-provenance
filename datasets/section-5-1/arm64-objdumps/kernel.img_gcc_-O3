
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//kernel.img_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_start>:
       0:	ldr	x2, 28 <_start+0x28>
       4:	str	x0, [x2]
       8:	ldr	x2, 20 <_start+0x20>
       c:	str	x1, [x2]
      10:	ldr	x2, 18 <_start+0x18>
      14:	br	x2
	...
      30:	mrs	x1, cntvct_el0
      34:	adrp	x0, 0 <_start>
      38:	ldr	x0, [x0]
      3c:	ldr	x0, [x0]
      40:	udiv	x0, x1, x0
      44:	ret
	...

0000000000000050 <grub_machine_init>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	mov	x29, sp
      58:	bl	3a08 <grub_efi_init>
      5c:	mrs	x1, cntfrq_el0
      60:	mov	x3, #0xf7cf                	// #63439
      64:	lsr	x1, x1, #3
      68:	movk	x3, #0xe353, lsl #16
      6c:	adrp	x2, 0 <_start>
      70:	movk	x3, #0x9ba5, lsl #32
      74:	adrp	x0, 0 <_start>
      78:	movk	x3, #0x20c4, lsl #48
      7c:	ldr	x2, [x2]
      80:	umulh	x1, x1, x3
      84:	ldr	x0, [x0]
      88:	lsr	x1, x1, #4
      8c:	str	x1, [x2]
      90:	ldp	x29, x30, [sp], #16
      94:	b	6360 <grub_install_get_time_ms>
	...

00000000000000a8 <grub_machine_fini>:
      a8:	tbnz	w0, #0, b0 <grub_machine_fini+0x8>
      ac:	ret
      b0:	b	3b18 <grub_efi_fini>
      b4:	nop

00000000000000b8 <grub_efi_get_firmware_fdt>:
      b8:	stp	x29, x30, [sp, #-64]!
      bc:	adrp	x1, 0 <_start>
      c0:	mov	x0, #0xb83                 	// #2947
      c4:	mov	x29, sp
      c8:	stp	x21, x22, [sp, #32]
      cc:	mov	x2, #0x21d5                	// #8661
      d0:	movk	x0, #0x15d9, lsl #16
      d4:	ldr	x21, [x1]
      d8:	movk	x2, #0xb1b6, lsl #16
      dc:	movk	x0, #0x692c, lsl #32
      e0:	movk	x2, #0xf19c, lsl #32
      e4:	movk	x0, #0xe0aa, lsl #48
      e8:	movk	x2, #0x41a5, lsl #48
      ec:	stp	x2, x0, [sp, #48]
      f0:	ldr	x0, [x21]
      f4:	stp	x19, x20, [sp, #16]
      f8:	ldp	x1, x22, [x0, #104]
      fc:	cbz	x1, 17c <grub_efi_get_firmware_fdt+0xc4>
     100:	mov	w20, #0x0                   	// #0
     104:	mov	x0, #0x0                   	// #0
     108:	b	120 <grub_efi_get_firmware_fdt+0x68>
     10c:	ldr	x1, [x21]
     110:	mov	w0, w20
     114:	ldr	x1, [x1, #104]
     118:	cmp	x1, w20, uxtw
     11c:	b.ls	17c <grub_efi_get_firmware_fdt+0xc4>  // b.plast
     120:	add	x0, x0, x0, lsl #1
     124:	add	w20, w20, #0x1
     128:	add	x1, sp, #0x30
     12c:	mov	x2, #0x10                  	// #16
     130:	add	x19, x22, x0, lsl #3
     134:	mov	x0, x19
     138:	bl	c450 <grub_memcmp>
     13c:	cbnz	w0, 10c <grub_efi_get_firmware_fdt+0x54>
     140:	adrp	x3, 0 <_start>
     144:	adrp	x2, 0 <_start>
     148:	adrp	x0, 0 <_start>
     14c:	mov	w1, #0x26                  	// #38
     150:	ldr	x3, [x3]
     154:	ldr	x2, [x2]
     158:	ldr	x0, [x0]
     15c:	ldr	x19, [x19, #16]
     160:	mov	x4, x19
     164:	bl	c708 <grub_real_dprintf>
     168:	mov	x0, x19
     16c:	ldp	x19, x20, [sp, #16]
     170:	ldp	x21, x22, [sp, #32]
     174:	ldp	x29, x30, [sp], #64
     178:	ret
     17c:	mov	x19, #0x0                   	// #0
     180:	mov	x0, x19
     184:	ldp	x19, x20, [sp, #16]
     188:	ldp	x21, x22, [sp, #32]
     18c:	ldp	x29, x30, [sp], #64
     190:	ret
     194:	nop
	...

00000000000001b8 <grub_arch_sync_caches>:
     1b8:	stp	x29, x30, [sp, #-64]!
     1bc:	adrp	x2, 0 <_start>
     1c0:	mov	x29, sp
     1c4:	stp	x21, x22, [sp, #32]
     1c8:	sub	x21, x1, #0x1
     1cc:	ldr	x22, [x2]
     1d0:	stp	x19, x20, [sp, #16]
     1d4:	mov	x19, x0
     1d8:	ldr	x2, [x22]
     1dc:	cbz	x2, 228 <grub_arch_sync_caches+0x70>
     1e0:	ldr	x3, [x22, #8]
     1e4:	cmp	x3, x2
     1e8:	csel	x3, x3, x2, ge  // ge = tcont
     1ec:	add	x20, x19, x3
     1f0:	neg	x3, x3
     1f4:	add	x20, x20, x21
     1f8:	and	x19, x3, x19
     1fc:	and	x20, x20, x3
     200:	mov	x0, x19
     204:	mov	x1, x20
     208:	bl	2e0 <grub_arch_clean_dcache_range>
     20c:	mov	x1, x20
     210:	mov	x0, x19
     214:	ldr	x2, [x22, #8]
     218:	ldp	x19, x20, [sp, #16]
     21c:	ldp	x21, x22, [sp, #32]
     220:	ldp	x29, x30, [sp], #64
     224:	b	300 <grub_arch_invalidate_icache_range>
     228:	str	x23, [sp, #48]
     22c:	mrs	x5, ctr_el0
     230:	adrp	x1, 0 <_start>
     234:	and	w6, w5, #0xf
     238:	ubfx	w4, w5, #16, #4
     23c:	adrp	x2, 0 <_start>
     240:	adrp	x0, 0 <_start>
     244:	mov	w5, #0x4                   	// #4
     248:	ldr	x3, [x1]
     24c:	lsl	w4, w5, w4
     250:	lsl	w5, w5, w6
     254:	sxtw	x4, w4
     258:	ldr	x23, [x2]
     25c:	sxtw	x5, w5
     260:	ldr	x20, [x0]
     264:	mov	x2, x23
     268:	mov	w1, #0x2a                  	// #42
     26c:	stp	x4, x5, [x22]
     270:	mov	x0, x20
     274:	bl	c708 <grub_real_dprintf>
     278:	adrp	x1, 0 <_start>
     27c:	mov	x2, x23
     280:	ldr	x4, [x22, #8]
     284:	mov	x0, x20
     288:	ldr	x3, [x1]
     28c:	mov	w1, #0x2b                  	// #43
     290:	bl	c708 <grub_real_dprintf>
     294:	ldr	x2, [x22]
     298:	cbz	x2, 2a4 <grub_arch_sync_caches+0xec>
     29c:	ldr	x23, [sp, #48]
     2a0:	b	1e0 <grub_arch_sync_caches+0x28>
     2a4:	adrp	x0, 0 <_start>
     2a8:	ldr	x0, [x0]
     2ac:	bl	d1c0 <grub_fatal>
	...

00000000000002e0 <grub_arch_clean_dcache_range>:
     2e0:	cmp	x0, x1
     2e4:	b.ge	2f4 <grub_arch_clean_dcache_range+0x14>  // b.tcont
     2e8:	dc	cvau, x0
     2ec:	add	x0, x0, x2
     2f0:	b	2e0 <grub_arch_clean_dcache_range>
     2f4:	dsb	ish
     2f8:	isb
     2fc:	ret

0000000000000300 <grub_arch_invalidate_icache_range>:
     300:	cmp	x0, x1
     304:	b.ge	314 <grub_arch_invalidate_icache_range+0x14>  // b.tcont
     308:	ic	ivau, x0
     30c:	add	x0, x0, x2
     310:	b	300 <grub_arch_invalidate_icache_range>
     314:	dsb	ish
     318:	isb
     31c:	ret

0000000000000320 <grub_arch_dl_check_header>:
     320:	ldrh	w1, [x0, #4]
     324:	cmp	w1, #0x102
     328:	b.ne	338 <grub_arch_dl_check_header+0x18>  // b.any
     32c:	ldrh	w0, [x0, #18]
     330:	cmp	w0, #0xb7
     334:	b.eq	348 <grub_arch_dl_check_header+0x28>  // b.none
     338:	adrp	x1, 0 <_start>
     33c:	mov	w0, #0x15                  	// #21
     340:	ldr	x1, [x1]
     344:	b	9bc8 <grub_error>
     348:	mov	w0, #0x0                   	// #0
     34c:	ret
	...

0000000000000358 <grub_arch_dl_relocate_symbols>:
     358:	stp	x29, x30, [sp, #-112]!
     35c:	mov	x29, sp
     360:	stp	x25, x26, [sp, #64]
     364:	stp	x27, x28, [sp, #80]
     368:	mov	x28, x0
     36c:	ldp	x0, x26, [x2, #24]
     370:	stp	x19, x20, [sp, #16]
     374:	add	x20, x1, x0
     378:	add	x26, x20, x26
     37c:	cmp	x20, x26
     380:	b.cs	494 <grub_arch_dl_relocate_symbols+0x13c>  // b.hs, b.nlast
     384:	mov	x25, x2
     388:	stp	x21, x22, [sp, #32]
     38c:	mov	w21, #0x0                   	// #0
     390:	stp	x23, x24, [sp, #48]
     394:	mov	x24, x3
     398:	adrp	x23, 0 <_start>
     39c:	b	408 <grub_arch_dl_relocate_symbols+0xb0>
     3a0:	cmp	x2, #0x101
     3a4:	b.eq	64c <grub_arch_dl_relocate_symbols+0x2f4>  // b.none
     3a8:	cmp	x2, #0x105
     3ac:	b.ne	624 <grub_arch_dl_relocate_symbols+0x2cc>  // b.any
     3b0:	ldrsw	x0, [x6, x27]
     3b4:	sub	x0, x0, x22
     3b8:	add	x0, x0, x19
     3bc:	cmp	x0, w0, sxtw
     3c0:	sxtw	x9, w0
     3c4:	b.ne	6f0 <grub_arch_dl_relocate_symbols+0x398>  // b.any
     3c8:	adrp	x0, 0 <_start>
     3cc:	mov	x5, x19
     3d0:	ldr	x2, [x23]
     3d4:	mov	x4, x22
     3d8:	ldr	x3, [x0]
     3dc:	adrp	x0, 0 <_start>
     3e0:	mov	w1, #0x83                  	// #131
     3e4:	stp	x6, x9, [sp, #96]
     3e8:	ldr	x0, [x0]
     3ec:	bl	c708 <grub_real_dprintf>
     3f0:	ldp	x6, x9, [sp, #96]
     3f4:	str	w9, [x6, x27]
     3f8:	ldr	x0, [x25, #56]
     3fc:	add	x20, x20, x0
     400:	cmp	x26, x20
     404:	b.ls	48c <grub_arch_dl_relocate_symbols+0x134>  // b.plast
     408:	ldr	x27, [x20]
     40c:	ldr	x0, [x24, #16]
     410:	cmp	x27, x0
     414:	b.cs	6a8 <grub_arch_dl_relocate_symbols+0x350>  // b.hs, b.nlast
     418:	ldr	x2, [x20, #8]
     41c:	ldp	x3, x4, [x28, #32]
     420:	lsr	x1, x2, #32
     424:	ldr	w0, [x25, #4]
     428:	cmp	w0, #0x4
     42c:	madd	x1, x1, x4, x3
     430:	ldr	x19, [x1, #8]
     434:	b.ne	440 <grub_arch_dl_relocate_symbols+0xe8>  // b.any
     438:	ldr	x0, [x20, #16]
     43c:	add	x19, x19, x0
     440:	ldr	x6, [x24, #8]
     444:	cmp	w2, #0x11b
     448:	and	x2, x2, #0xffffffff
     44c:	add	x22, x6, x27
     450:	b.hi	4ac <grub_arch_dl_relocate_symbols+0x154>  // b.pmore
     454:	cmp	x2, #0x119
     458:	b.hi	5f8 <grub_arch_dl_relocate_symbols+0x2a0>  // b.pmore
     45c:	cmp	x2, #0x113
     460:	b.eq	5d0 <grub_arch_dl_relocate_symbols+0x278>  // b.none
     464:	b.ls	3a0 <grub_arch_dl_relocate_symbols+0x48>  // b.plast
     468:	cmp	x2, #0x115
     46c:	b.ne	624 <grub_arch_dl_relocate_symbols+0x2cc>  // b.any
     470:	mov	x0, x22
     474:	mov	x1, x19
     478:	bl	860 <grub_arm64_set_abs_lo12>
     47c:	ldr	x0, [x25, #56]
     480:	add	x20, x20, x0
     484:	cmp	x26, x20
     488:	b.hi	408 <grub_arch_dl_relocate_symbols+0xb0>  // b.pmore
     48c:	ldp	x21, x22, [sp, #32]
     490:	ldp	x23, x24, [sp, #48]
     494:	mov	w0, #0x0                   	// #0
     498:	ldp	x19, x20, [sp, #16]
     49c:	ldp	x25, x26, [sp, #64]
     4a0:	ldp	x27, x28, [sp, #80]
     4a4:	ldp	x29, x30, [sp], #112
     4a8:	ret
     4ac:	cmp	x2, #0x137
     4b0:	b.eq	4e0 <grub_arch_dl_relocate_symbols+0x188>  // b.none
     4b4:	cmp	x2, #0x138
     4b8:	b.ne	4c8 <grub_arch_dl_relocate_symbols+0x170>  // b.any
     4bc:	cbz	w21, 6e0 <grub_arch_dl_relocate_symbols+0x388>
     4c0:	sub	w21, w21, #0x1
     4c4:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     4c8:	cmp	x2, #0x11e
     4cc:	b.ne	624 <grub_arch_dl_relocate_symbols+0x2cc>  // b.any
     4d0:	mov	x1, x19
     4d4:	mov	x0, x22
     4d8:	bl	870 <grub_arm64_set_abs_lo12_ldst64>
     4dc:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     4e0:	ldr	x27, [x28, #72]
     4e4:	adrp	x0, 0 <_start>
     4e8:	ldr	x2, [x23]
     4ec:	mov	x9, x27
     4f0:	ldr	x3, [x0]
     4f4:	adrp	x0, 0 <_start>
     4f8:	str	x19, [x9], #8
     4fc:	mov	x5, x19
     500:	ldr	x0, [x0]
     504:	str	x9, [x28, #72]
     508:	and	x9, x27, #0xfffffffffffff000
     50c:	mov	x4, x22
     510:	mov	x6, x27
     514:	and	x19, x22, #0xfffffffffffff000
     518:	mov	w1, #0x90                  	// #144
     51c:	sub	x19, x9, x19
     520:	bl	c708 <grub_real_dprintf>
     524:	add	w21, w21, #0x1
     528:	mov	x0, x19
     52c:	bl	820 <grub_arm64_check_hi21_signed>
     530:	cbz	w0, 6d0 <grub_arch_dl_relocate_symbols+0x378>
     534:	mov	x1, x19
     538:	mov	x0, x22
     53c:	bl	830 <grub_arm64_set_hi21>
     540:	ldr	x0, [x25, #56]
     544:	add	x19, x20, x0
     548:	cmp	x26, x19
     54c:	b.ls	5a8 <grub_arch_dl_relocate_symbols+0x250>  // b.plast
     550:	ldr	w2, [x20, #12]
     554:	b	564 <grub_arch_dl_relocate_symbols+0x20c>
     558:	add	x19, x19, x0
     55c:	cmp	x26, x19
     560:	b.ls	5a8 <grub_arch_dl_relocate_symbols+0x250>  // b.plast
     564:	ldr	x1, [x19, #8]
     568:	cmp	x2, x1, lsr #32
     56c:	b.ne	558 <grub_arch_dl_relocate_symbols+0x200>  // b.any
     570:	ldr	x3, [x19, #16]
     574:	ldr	x4, [x20, #16]
     578:	cmp	x4, x3
     57c:	b.ne	558 <grub_arch_dl_relocate_symbols+0x200>  // b.any
     580:	cmp	w1, #0x138
     584:	b.ne	558 <grub_arch_dl_relocate_symbols+0x200>  // b.any
     588:	ldr	x2, [x24, #8]
     58c:	mov	x1, x27
     590:	ldr	x0, [x19]
     594:	add	x0, x2, x0
     598:	bl	870 <grub_arm64_set_abs_lo12_ldst64>
     59c:	cmp	x26, x19
     5a0:	b.hi	3f8 <grub_arch_dl_relocate_symbols+0xa0>  // b.pmore
     5a4:	nop
     5a8:	adrp	x1, 0 <_start>
     5ac:	mov	w0, #0x2                   	// #2
     5b0:	ldr	x1, [x1]
     5b4:	ldp	x19, x20, [sp, #16]
     5b8:	ldp	x21, x22, [sp, #32]
     5bc:	ldp	x23, x24, [sp, #48]
     5c0:	ldp	x25, x26, [sp, #64]
     5c4:	ldp	x27, x28, [sp, #80]
     5c8:	ldp	x29, x30, [sp], #112
     5cc:	b	9bc8 <grub_error>
     5d0:	and	x1, x22, #0xfffffffffffff000
     5d4:	and	x19, x19, #0xfffffffffffff000
     5d8:	sub	x19, x19, x1
     5dc:	mov	x0, x19
     5e0:	bl	820 <grub_arm64_check_hi21_signed>
     5e4:	cbz	w0, 6d0 <grub_arch_dl_relocate_symbols+0x378>
     5e8:	mov	x1, x19
     5ec:	mov	x0, x22
     5f0:	bl	830 <grub_arm64_set_hi21>
     5f4:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     5f8:	sub	x27, x19, x22
     5fc:	mov	x0, x27
     600:	bl	770 <grub_arm_64_check_xxxx26_offset>
     604:	cbz	w0, 680 <grub_arch_dl_relocate_symbols+0x328>
     608:	mov	x0, x27
     60c:	bl	770 <grub_arm_64_check_xxxx26_offset>
     610:	cbz	w0, 700 <grub_arch_dl_relocate_symbols+0x3a8>
     614:	mov	x1, x27
     618:	mov	x0, x22
     61c:	bl	788 <grub_arm64_set_xxxx26_offset>
     620:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     624:	adrp	x1, 0 <_start>
     628:	mov	w0, #0x18                  	// #24
     62c:	ldp	x19, x20, [sp, #16]
     630:	ldr	x1, [x1]
     634:	ldp	x21, x22, [sp, #32]
     638:	ldp	x23, x24, [sp, #48]
     63c:	ldp	x25, x26, [sp, #64]
     640:	ldp	x27, x28, [sp, #80]
     644:	ldp	x29, x30, [sp], #112
     648:	b	9bc8 <grub_error>
     64c:	adrp	x0, 0 <_start>
     650:	mov	x4, x22
     654:	ldr	x2, [x23]
     658:	mov	x5, x19
     65c:	ldr	x3, [x0]
     660:	adrp	x0, 0 <_start>
     664:	mov	w1, #0x59                  	// #89
     668:	str	x6, [sp, #96]
     66c:	ldr	x0, [x0]
     670:	bl	c708 <grub_real_dprintf>
     674:	ldr	x6, [sp, #96]
     678:	str	x19, [x6, x27]
     67c:	b	3f8 <grub_arch_dl_relocate_symbols+0xa0>
     680:	ldr	x0, [x28, #88]
     684:	add	x1, x0, #0x10
     688:	str	x1, [x28, #88]
     68c:	mov	x1, #0x50                  	// #80
     690:	sub	x27, x0, x22
     694:	movk	x1, #0x5800, lsl #16
     698:	movk	x1, #0x200, lsl #32
     69c:	movk	x1, #0xd61f, lsl #48
     6a0:	stp	x1, x19, [x0]
     6a4:	b	608 <grub_arch_dl_relocate_symbols+0x2b0>
     6a8:	adrp	x1, 0 <_start>
     6ac:	mov	w0, #0x2                   	// #2
     6b0:	ldp	x19, x20, [sp, #16]
     6b4:	ldr	x1, [x1]
     6b8:	ldp	x21, x22, [sp, #32]
     6bc:	ldp	x23, x24, [sp, #48]
     6c0:	ldp	x25, x26, [sp, #64]
     6c4:	ldp	x27, x28, [sp, #80]
     6c8:	ldp	x29, x30, [sp], #112
     6cc:	b	9bc8 <grub_error>
     6d0:	adrp	x1, 0 <_start>
     6d4:	mov	w0, #0x2                   	// #2
     6d8:	ldr	x1, [x1]
     6dc:	b	5b4 <grub_arch_dl_relocate_symbols+0x25c>
     6e0:	adrp	x1, 0 <_start>
     6e4:	mov	w0, #0x2                   	// #2
     6e8:	ldr	x1, [x1]
     6ec:	b	5b4 <grub_arch_dl_relocate_symbols+0x25c>
     6f0:	adrp	x1, 0 <_start>
     6f4:	mov	w0, #0x2                   	// #2
     6f8:	ldr	x1, [x1]
     6fc:	b	5b4 <grub_arch_dl_relocate_symbols+0x25c>
     700:	adrp	x1, 0 <_start>
     704:	mov	w0, #0x2                   	// #2
     708:	ldr	x1, [x1]
     70c:	b	5b4 <grub_arch_dl_relocate_symbols+0x25c>
	...

0000000000000770 <grub_arm_64_check_xxxx26_offset>:
     770:	mov	x1, #0x8000000             	// #134217728
     774:	add	x0, x0, x1
     778:	mov	x1, #0xfffffff             	// #268435455
     77c:	cmp	x0, x1
     780:	cset	w0, ls  // ls = plast
     784:	ret

0000000000000788 <grub_arm64_set_xxxx26_offset>:
     788:	stp	x29, x30, [sp, #-32]!
     78c:	cmp	x1, #0x0
     790:	mov	x6, x1
     794:	mov	x29, sp
     798:	stp	x19, x20, [sp, #16]
     79c:	mov	w5, #0x2b                  	// #43
     7a0:	mov	x19, x1
     7a4:	mov	x20, x0
     7a8:	b.le	7f0 <grub_arm64_set_xxxx26_offset+0x68>
     7ac:	adrp	x2, 0 <_start>
     7b0:	adrp	x1, 0 <_start>
     7b4:	adrp	x0, 0 <_start>
     7b8:	mov	x4, x20
     7bc:	ldr	x3, [x2]
     7c0:	ubfx	w19, w19, #2, #26
     7c4:	ldr	x2, [x1]
     7c8:	mov	w1, #0x31                  	// #49
     7cc:	ldr	x0, [x0]
     7d0:	bl	c708 <grub_real_dprintf>
     7d4:	ldr	w1, [x20]
     7d8:	and	w1, w1, #0xfc000000
     7dc:	orr	w19, w1, w19
     7e0:	str	w19, [x20]
     7e4:	ldp	x19, x20, [sp, #16]
     7e8:	ldp	x29, x30, [sp], #32
     7ec:	ret
     7f0:	b.eq	800 <grub_arm64_set_xxxx26_offset+0x78>  // b.none
     7f4:	neg	x6, x1
     7f8:	mov	w5, #0x2d                  	// #45
     7fc:	b	7ac <grub_arm64_set_xxxx26_offset+0x24>
     800:	mov	w5, #0x2d                  	// #45
     804:	b	7ac <grub_arm64_set_xxxx26_offset+0x24>
	...

0000000000000820 <grub_arm64_check_hi21_signed>:
     820:	cmp	x0, w0, sxtw
     824:	cset	w0, eq  // eq = none
     828:	ret
     82c:	nop

0000000000000830 <grub_arm64_set_hi21>:
     830:	asr	x2, x1, #12
     834:	asr	x1, x1, #14
     838:	ldr	w3, [x0]
     83c:	mov	w4, #0x1f                  	// #31
     840:	ubfiz	w2, w2, #29, #2
     844:	ubfiz	w1, w1, #5, #19
     848:	orr	w1, w2, w1
     84c:	movk	w4, #0x9f00, lsl #16
     850:	and	w2, w3, w4
     854:	orr	w1, w1, w2
     858:	str	w1, [x0]
     85c:	ret

0000000000000860 <grub_arm64_set_abs_lo12>:
     860:	ldr	w2, [x0]
     864:	bfi	w2, w1, #10, #12
     868:	str	w2, [x0]
     86c:	ret

0000000000000870 <grub_arm64_set_abs_lo12_ldst64>:
     870:	lsl	w1, w1, #7
     874:	and	w2, w1, #0x7fc00
     878:	ldr	w1, [x0]
     87c:	and	w1, w1, #0xfff803ff
     880:	orr	w1, w1, w2
     884:	str	w1, [x0]
     888:	ret
     88c:	nop

0000000000000890 <grub_arm64_dl_get_tramp_got_size>:
     890:	ldrh	w8, [x0, #60]
     894:	str	xzr, [x1]
     898:	str	xzr, [x2]
     89c:	ldr	x5, [x0, #40]
     8a0:	add	x5, x0, x5
     8a4:	cbz	w8, 934 <grub_arm64_dl_get_tramp_got_size+0xa4>
     8a8:	ldrh	w9, [x0, #58]
     8ac:	mov	w7, #0x0                   	// #0
     8b0:	b	8c4 <grub_arm64_dl_get_tramp_got_size+0x34>
     8b4:	add	w7, w7, #0x1
     8b8:	add	x5, x5, x9
     8bc:	cmp	w7, w8
     8c0:	b.eq	934 <grub_arm64_dl_get_tramp_got_size+0xa4>  // b.none
     8c4:	ldr	w3, [x5, #4]
     8c8:	cmp	w3, #0x9
     8cc:	ccmp	w3, #0x4, #0x4, ne  // ne = any
     8d0:	b.ne	8b4 <grub_arm64_dl_get_tramp_got_size+0x24>  // b.any
     8d4:	ldp	x3, x6, [x5, #24]
     8d8:	add	x3, x0, x3
     8dc:	add	x6, x3, x6
     8e0:	cmp	x3, x6
     8e4:	b.cc	910 <grub_arm64_dl_get_tramp_got_size+0x80>  // b.lo, b.ul, b.last
     8e8:	b	8b4 <grub_arm64_dl_get_tramp_got_size+0x24>
     8ec:	cmp	x4, #0x119
     8f0:	b.ls	900 <grub_arm64_dl_get_tramp_got_size+0x70>  // b.plast
     8f4:	ldr	x4, [x1]
     8f8:	add	x4, x4, #0x10
     8fc:	str	x4, [x1]
     900:	ldr	x4, [x5, #56]
     904:	add	x3, x3, x4
     908:	cmp	x6, x3
     90c:	b.ls	8b4 <grub_arm64_dl_get_tramp_got_size+0x24>  // b.plast
     910:	ldr	w4, [x3, #8]
     914:	cmp	x4, #0x11b
     918:	b.ls	8ec <grub_arm64_dl_get_tramp_got_size+0x5c>  // b.plast
     91c:	cmp	x4, #0x137
     920:	b.ne	900 <grub_arm64_dl_get_tramp_got_size+0x70>  // b.any
     924:	ldr	x4, [x2]
     928:	add	x4, x4, #0x8
     92c:	str	x4, [x2]
     930:	b	900 <grub_arm64_dl_get_tramp_got_size+0x70>
     934:	mov	w0, #0x0                   	// #0
     938:	ret
     93c:	nop
     940:	mov	x4, x0
     944:	adrp	x1, 0 <_start>
     948:	adrp	x2, 0 <_start>
     94c:	adrp	x0, 0 <_start>
     950:	ldr	x3, [x1]
     954:	mov	w1, #0x21c                 	// #540
     958:	ldr	x2, [x2]
     95c:	ldr	x0, [x0]
     960:	ldr	x4, [x4]
     964:	b	c708 <grub_real_dprintf>
	...

0000000000000980 <grub_efidisk_fini>:
     980:	stp	x29, x30, [sp, #-32]!
     984:	adrp	x0, 0 <_start>
     988:	mov	x29, sp
     98c:	stp	x19, x20, [sp, #16]
     990:	ldr	x20, [x0]
     994:	ldr	x19, [x20]
     998:	cbz	x19, 9b0 <grub_efidisk_fini+0x30>
     99c:	nop
     9a0:	mov	x0, x19
     9a4:	ldr	x19, [x19, #32]
     9a8:	bl	6260 <grub_free>
     9ac:	cbnz	x19, 9a0 <grub_efidisk_fini+0x20>
     9b0:	ldr	x19, [x20, #8]
     9b4:	cbz	x19, 9c8 <grub_efidisk_fini+0x48>
     9b8:	mov	x0, x19
     9bc:	ldr	x19, [x19, #32]
     9c0:	bl	6260 <grub_free>
     9c4:	cbnz	x19, 9b8 <grub_efidisk_fini+0x38>
     9c8:	ldr	x19, [x20, #16]
     9cc:	cbz	x19, 9e0 <grub_efidisk_fini+0x60>
     9d0:	mov	x0, x19
     9d4:	ldr	x19, [x19, #32]
     9d8:	bl	6260 <grub_free>
     9dc:	cbnz	x19, 9d0 <grub_efidisk_fini+0x50>
     9e0:	stp	xzr, xzr, [x20]
     9e4:	adrp	x0, 0 <_start>
     9e8:	str	xzr, [x20, #16]
     9ec:	ldp	x19, x20, [sp, #16]
     9f0:	ldp	x29, x30, [sp], #32
     9f4:	ldr	x0, [x0]
     9f8:	b	6ee8 <grub_disk_dev_unregister>
     9fc:	nop
	...
     a10:	stp	x29, x30, [sp, #-80]!
     a14:	adrp	x3, 0 <_start>
     a18:	adrp	x4, 0 <_start>
     a1c:	adrp	x2, 0 <_start>
     a20:	mov	x29, sp
     a24:	ldr	x3, [x3]
     a28:	stp	x21, x22, [sp, #32]
     a2c:	mov	x21, x1
     a30:	ldr	x22, [x2]
     a34:	stp	x23, x24, [sp, #48]
     a38:	mov	w1, #0x1e2                 	// #482
     a3c:	ldr	x23, [x4]
     a40:	stp	x19, x20, [sp, #16]
     a44:	mov	x20, x0
     a48:	mov	x4, x0
     a4c:	mov	x2, x23
     a50:	mov	x0, x22
     a54:	bl	c708 <grub_real_dprintf>
     a58:	ldrb	w1, [x20]
     a5c:	sub	w0, w1, #0x66
     a60:	cmp	w1, #0x63
     a64:	and	w0, w0, #0xfffffffd
     a68:	and	w0, w0, #0xff
     a6c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     a70:	b.ne	c8c <grub_efidisk_fini+0x30c>  // b.any
     a74:	ldrb	w0, [x20, #1]
     a78:	cmp	w0, #0x64
     a7c:	b.ne	c8c <grub_efidisk_fini+0x30c>  // b.any
     a80:	mov	x1, #0x0                   	// #0
     a84:	add	x0, x20, #0x2
     a88:	mov	w2, #0xa                   	// #10
     a8c:	bl	c9c8 <grub_strtoul>
     a90:	adrp	x1, 0 <_start>
     a94:	ldr	x19, [x1]
     a98:	ldr	w24, [x19]
     a9c:	cbnz	w24, c94 <grub_efidisk_fini+0x314>
     aa0:	tbnz	w0, #31, be4 <grub_efidisk_fini+0x264>
     aa4:	ldrb	w2, [x20]
     aa8:	cmp	w2, #0x66
     aac:	b.eq	c30 <grub_efidisk_fini+0x2b0>  // b.none
     ab0:	cmp	w2, #0x68
     ab4:	b.eq	ae0 <grub_efidisk_fini+0x160>  // b.none
     ab8:	cmp	w2, #0x63
     abc:	b.eq	bfc <grub_efidisk_fini+0x27c>  // b.none
     ac0:	adrp	x1, 0 <_start>
     ac4:	mov	w0, #0xc                   	// #12
     ac8:	ldp	x19, x20, [sp, #16]
     acc:	ldp	x21, x22, [sp, #32]
     ad0:	ldp	x23, x24, [sp, #48]
     ad4:	ldp	x29, x30, [sp], #80
     ad8:	ldr	x1, [x1]
     adc:	b	9bc8 <grub_error>
     ae0:	adrp	x1, 0 <_start>
     ae4:	cmp	w0, #0x0
     ae8:	ldr	x1, [x1]
     aec:	ldr	x19, [x1, #8]
     af0:	mov	w1, w0
     af4:	ccmp	x19, #0x0, #0x4, ne  // ne = any
     af8:	b.eq	b14 <grub_efidisk_fini+0x194>  // b.none
     afc:	nop
     b00:	ldr	x19, [x19, #32]
     b04:	sub	w1, w1, #0x1
     b08:	cmp	x19, #0x0
     b0c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     b10:	b.ne	b00 <grub_efidisk_fini+0x180>  // b.any
     b14:	cbnz	w1, ac0 <grub_efidisk_fini+0x140>
     b18:	cbz	x19, ac0 <grub_efidisk_fini+0x140>
     b1c:	ldr	x1, [x19, #24]
     b20:	str	x25, [sp, #64]
     b24:	adrp	x3, 0 <_start>
     b28:	orr	w0, w2, w0, lsl #8
     b2c:	mov	x2, x23
     b30:	ldr	x25, [x1, #8]
     b34:	sxtw	x0, w0
     b38:	ldr	x3, [x3]
     b3c:	mov	x4, x25
     b40:	ldp	w6, w7, [x25, #12]
     b44:	mov	w1, #0x1ff                 	// #511
     b48:	ldr	x5, [x25, #24]
     b4c:	str	x0, [x21, #32]
     b50:	mov	x0, x22
     b54:	bl	c708 <grub_real_dprintf>
     b58:	ldr	w2, [x25, #16]
     b5c:	sub	w24, w2, #0x1
     b60:	ands	w24, w24, w2
     b64:	b.ne	cac <grub_efidisk_fini+0x32c>  // b.any
     b68:	ldr	x0, [x25, #24]
     b6c:	mov	w1, #0x14                  	// #20
     b70:	ldr	w2, [x25, #12]
     b74:	add	x0, x0, #0x1
     b78:	str	x0, [x21, #16]
     b7c:	sub	w0, w2, #0x1
     b80:	str	w1, [x21, #28]
     b84:	tst	w0, w2
     b88:	ccmp	w2, #0x0, #0x4, eq  // eq = none
     b8c:	b.eq	c68 <grub_efidisk_fini+0x2e8>  // b.none
     b90:	str	wzr, [x21, #24]
     b94:	cmp	w2, #0x1
     b98:	b.ls	bc0 <grub_efidisk_fini+0x240>  // b.plast
     b9c:	mov	w0, #0x1                   	// #1
     ba0:	mov	w4, w0
     ba4:	nop
     ba8:	lsl	w1, w4, w0
     bac:	mov	w3, w0
     bb0:	cmp	w2, w1
     bb4:	add	w0, w0, #0x1
     bb8:	b.hi	ba8 <grub_efidisk_fini+0x228>  // b.pmore
     bbc:	str	w3, [x21, #24]
     bc0:	adrp	x0, 0 <_start>
     bc4:	str	x19, [x21, #64]
     bc8:	mov	x4, x20
     bcc:	mov	x2, x23
     bd0:	ldr	x3, [x0]
     bd4:	mov	w1, #0x213                 	// #531
     bd8:	mov	x0, x22
     bdc:	bl	c708 <grub_real_dprintf>
     be0:	ldr	x25, [sp, #64]
     be4:	mov	w0, w24
     be8:	ldp	x19, x20, [sp, #16]
     bec:	ldp	x21, x22, [sp, #32]
     bf0:	ldp	x23, x24, [sp, #48]
     bf4:	ldp	x29, x30, [sp], #80
     bf8:	ret
     bfc:	adrp	x1, 0 <_start>
     c00:	cmp	w0, #0x0
     c04:	ldr	x1, [x1]
     c08:	ldr	x19, [x1, #16]
     c0c:	mov	w1, w0
     c10:	ccmp	x19, #0x0, #0x4, ne  // ne = any
     c14:	b.eq	b14 <grub_efidisk_fini+0x194>  // b.none
     c18:	ldr	x19, [x19, #32]
     c1c:	sub	w1, w1, #0x1
     c20:	cmp	x19, #0x0
     c24:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     c28:	b.ne	c18 <grub_efidisk_fini+0x298>  // b.any
     c2c:	b	b14 <grub_efidisk_fini+0x194>
     c30:	adrp	x1, 0 <_start>
     c34:	ldr	x1, [x1]
     c38:	ldr	x19, [x1]
     c3c:	mov	w1, w0
     c40:	cmp	x19, #0x0
     c44:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     c48:	b.eq	b14 <grub_efidisk_fini+0x194>  // b.none
     c4c:	nop
     c50:	ldr	x19, [x19, #32]
     c54:	sub	w1, w1, #0x1
     c58:	cmp	x19, #0x0
     c5c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     c60:	b.ne	c50 <grub_efidisk_fini+0x2d0>  // b.any
     c64:	b	b14 <grub_efidisk_fini+0x194>
     c68:	adrp	x1, 0 <_start>
     c6c:	mov	w0, #0x1d                  	// #29
     c70:	ldr	x1, [x1]
     c74:	ldp	x19, x20, [sp, #16]
     c78:	ldp	x21, x22, [sp, #32]
     c7c:	ldp	x23, x24, [sp, #48]
     c80:	ldr	x25, [sp, #64]
     c84:	ldp	x29, x30, [sp], #80
     c88:	b	9bc8 <grub_error>
     c8c:	adrp	x0, 0 <_start>
     c90:	ldr	x19, [x0]
     c94:	adrp	x1, 0 <_start>
     c98:	mov	w0, #0xc                   	// #12
     c9c:	ldr	x1, [x1]
     ca0:	bl	9bc8 <grub_error>
     ca4:	ldr	w24, [x19]
     ca8:	b	be4 <grub_efidisk_fini+0x264>
     cac:	adrp	x1, 0 <_start>
     cb0:	mov	w0, #0x1d                  	// #29
     cb4:	ldr	x1, [x1]
     cb8:	b	c74 <grub_efidisk_fini+0x2f4>
     cbc:	nop
	...
     d18:	stp	x29, x30, [sp, #-96]!
     d1c:	adrp	x1, 0 <_start>
     d20:	mov	x2, #0x0                   	// #0
     d24:	mov	x29, sp
     d28:	stp	x23, x24, [sp, #48]
     d2c:	add	x3, sp, #0x58
     d30:	mov	w0, #0x2                   	// #2
     d34:	ldr	x23, [x1]
     d38:	stp	x21, x22, [sp, #32]
     d3c:	add	x23, x23, #0x40
     d40:	mov	x1, x23
     d44:	bl	1f98 <grub_efi_locate_handle>
     d48:	cbz	x0, e38 <grub_efidisk_fini+0x4b8>
     d4c:	mov	x24, x0
     d50:	ldr	x0, [sp, #88]
     d54:	sub	x1, x0, #0x1
     d58:	str	x1, [sp, #88]
     d5c:	cbz	x0, e74 <grub_efidisk_fini+0x4f4>
     d60:	stp	x25, x26, [sp, #64]
     d64:	mov	w25, #0x5845                	// #22597
     d68:	mov	x22, #0x0                   	// #0
     d6c:	movk	w25, #0x6950, lsl #16
     d70:	stp	x19, x20, [sp, #16]
     d74:	mov	x20, x24
     d78:	b	db0 <grub_efidisk_fini+0x430>
     d7c:	bl	6210 <grub_malloc>
     d80:	mov	x2, x0
     d84:	cbz	x0, e14 <grub_efidisk_fini+0x494>
     d88:	ldr	x0, [x20]
     d8c:	str	x22, [x2, #32]
     d90:	mov	x22, x2
     d94:	stp	x0, x19, [x2]
     d98:	stp	x21, x26, [x2, #16]
     d9c:	add	x20, x20, #0x8
     da0:	ldr	x0, [sp, #88]
     da4:	sub	x1, x0, #0x1
     da8:	str	x1, [sp, #88]
     dac:	cbz	x0, e50 <grub_efidisk_fini+0x4d0>
     db0:	ldr	x0, [x20]
     db4:	bl	2d58 <grub_efi_get_device_path>
     db8:	mov	x19, x0
     dbc:	cbz	x0, d9c <grub_efidisk_fini+0x41c>
     dc0:	bl	2dc8 <grub_efi_find_last_device_path>
     dc4:	mov	x21, x0
     dc8:	mov	x1, x23
     dcc:	mov	w2, #0x2                   	// #2
     dd0:	cbz	x0, d9c <grub_efidisk_fini+0x41c>
     dd4:	ldr	x0, [x20]
     dd8:	bl	2090 <grub_efi_open_protocol>
     ddc:	mov	x26, x0
     de0:	mov	x0, #0x28                  	// #40
     de4:	cbz	x26, d9c <grub_efidisk_fini+0x41c>
     de8:	ldr	x1, [x26, #8]
     dec:	cbz	x1, d7c <grub_efidisk_fini+0x3fc>
     df0:	ldr	w2, [x1]
     df4:	cmp	w2, w25
     df8:	b.ne	d7c <grub_efidisk_fini+0x3fc>  // b.any
     dfc:	ldr	w1, [x1, #12]
     e00:	cmp	w1, #0x1
     e04:	b.eq	d9c <grub_efidisk_fini+0x41c>  // b.none
     e08:	bl	6210 <grub_malloc>
     e0c:	mov	x2, x0
     e10:	cbnz	x0, d88 <grub_efidisk_fini+0x408>
     e14:	mov	x0, x24
     e18:	bl	6260 <grub_free>
     e1c:	cbz	x22, e30 <grub_efidisk_fini+0x4b0>
     e20:	mov	x0, x22
     e24:	ldr	x22, [x22, #32]
     e28:	bl	6260 <grub_free>
     e2c:	cbnz	x22, e20 <grub_efidisk_fini+0x4a0>
     e30:	ldp	x19, x20, [sp, #16]
     e34:	ldp	x25, x26, [sp, #64]
     e38:	mov	x22, #0x0                   	// #0
     e3c:	mov	x0, x22
     e40:	ldp	x21, x22, [sp, #32]
     e44:	ldp	x23, x24, [sp, #48]
     e48:	ldp	x29, x30, [sp], #96
     e4c:	ret
     e50:	ldp	x19, x20, [sp, #16]
     e54:	ldp	x25, x26, [sp, #64]
     e58:	mov	x0, x24
     e5c:	bl	6260 <grub_free>
     e60:	mov	x0, x22
     e64:	ldp	x21, x22, [sp, #32]
     e68:	ldp	x23, x24, [sp, #48]
     e6c:	ldp	x29, x30, [sp], #96
     e70:	ret
     e74:	mov	x22, #0x0                   	// #0
     e78:	b	e58 <grub_efidisk_fini+0x4d8>
     e7c:	nop
	...
     e88:	stp	x29, x30, [sp, #-48]!
     e8c:	mov	x29, sp
     e90:	ldr	x2, [x0]
     e94:	stp	x19, x20, [sp, #16]
     e98:	mov	x20, x0
     e9c:	str	x21, [sp, #32]
     ea0:	mov	x21, x1
     ea4:	cbnz	x2, ec4 <grub_efidisk_fini+0x544>
     ea8:	b	f0c <grub_efidisk_fini+0x58c>
     eac:	cmp	w0, #0x0
     eb0:	b.gt	f0c <grub_efidisk_fini+0x58c>
     eb4:	ldr	x2, [x20]
     eb8:	add	x20, x2, #0x20
     ebc:	ldr	x2, [x2, #32]
     ec0:	cbz	x2, f0c <grub_efidisk_fini+0x58c>
     ec4:	ldr	x0, [x2, #8]
     ec8:	bl	2dc8 <grub_efi_find_last_device_path>
     ecc:	mov	x19, x0
     ed0:	ldr	x0, [x21, #8]
     ed4:	bl	2dc8 <grub_efi_find_last_device_path>
     ed8:	mov	x1, x0
     edc:	mov	x0, x19
     ee0:	bl	3900 <grub_efi_compare_device_paths>
     ee4:	cbnz	w0, eac <grub_efidisk_fini+0x52c>
     ee8:	ldr	x0, [x20]
     eec:	ldr	x1, [x21, #8]
     ef0:	ldr	x0, [x0, #8]
     ef4:	bl	3900 <grub_efi_compare_device_paths>
     ef8:	cbnz	w0, eac <grub_efidisk_fini+0x52c>
     efc:	ldp	x19, x20, [sp, #16]
     f00:	ldr	x21, [sp, #32]
     f04:	ldp	x29, x30, [sp], #48
     f08:	ret
     f0c:	mov	x0, #0x28                  	// #40
     f10:	bl	6210 <grub_malloc>
     f14:	mov	x19, x0
     f18:	cbz	x0, efc <grub_efidisk_fini+0x57c>
     f1c:	mov	x1, x21
     f20:	mov	x2, #0x28                  	// #40
     f24:	bl	bf40 <grub_memmove>
     f28:	ldr	x0, [x20]
     f2c:	str	x0, [x19, #32]
     f30:	str	x19, [x20]
     f34:	ldp	x19, x20, [sp, #16]
     f38:	ldr	x21, [sp, #32]
     f3c:	ldp	x29, x30, [sp], #48
     f40:	ret
     f44:	nop
     f48:	mov	x6, x0
     f4c:	cbz	x1, fcc <grub_efidisk_fini+0x64c>
     f50:	mov	x3, x1
     f54:	mov	x4, #0x0                   	// #0
     f58:	ldr	x5, [x3, #8]
     f5c:	ldr	x3, [x3, #40]
     f60:	add	x4, x4, x5
     f64:	cbnz	x3, f58 <grub_efidisk_fini+0x5d8>
     f68:	ldr	x7, [x2, #8]
     f6c:	mov	w0, #0x0                   	// #0
     f70:	ldr	w3, [x6, #24]
     f74:	ldr	x5, [x7, #8]
     f78:	sub	w3, w3, #0x9
     f7c:	lsl	x5, x5, x3
     f80:	cmp	x5, x4
     f84:	b.eq	f8c <grub_efidisk_fini+0x60c>  // b.none
     f88:	ret
     f8c:	ldr	x4, [x7, #16]
     f90:	ldr	x5, [x1, #16]
     f94:	lsl	x3, x4, x3
     f98:	cmp	x3, x5
     f9c:	b.ne	f88 <grub_efidisk_fini+0x608>  // b.any
     fa0:	stp	x29, x30, [sp, #-32]!
     fa4:	mov	x0, x1
     fa8:	mov	x29, sp
     fac:	str	x2, [sp, #24]
     fb0:	bl	dab8 <grub_partition_get_name>
     fb4:	ldr	x2, [sp, #24]
     fb8:	mov	x1, x0
     fbc:	mov	w0, #0x1                   	// #1
     fc0:	str	x1, [x2]
     fc4:	ldp	x29, x30, [sp], #32
     fc8:	ret
     fcc:	ldr	x7, [x2, #8]
     fd0:	mov	x4, #0x0                   	// #0
     fd4:	ldr	w3, [x6, #24]
     fd8:	mov	w0, #0x0                   	// #0
     fdc:	ldr	x5, [x7, #8]
     fe0:	sub	w3, w3, #0x9
     fe4:	lsl	x5, x5, x3
     fe8:	cmp	x5, x4
     fec:	b.ne	f88 <grub_efidisk_fini+0x608>  // b.any
     ff0:	b	f8c <grub_efidisk_fini+0x60c>
     ff4:	nop
     ff8:	stp	x29, x30, [sp, #-112]!
     ffc:	mov	x29, sp
    1000:	stp	x19, x20, [sp, #16]
    1004:	mov	x20, x0
    1008:	stp	x21, x22, [sp, #32]
    100c:	mov	x21, x1
    1010:	cbz	w2, 10ec <grub_efidisk_fini+0x76c>
    1014:	cmp	w2, #0x1
    1018:	b.ne	10d8 <grub_efidisk_fini+0x758>  // b.any
    101c:	adrp	x0, 0 <_start>
    1020:	stp	x27, x28, [sp, #80]
    1024:	ldr	x28, [x0]
    1028:	stp	x23, x24, [sp, #48]
    102c:	stp	x25, x26, [sp, #64]
    1030:	ldr	x22, [x28]
    1034:	cbz	x22, 1190 <grub_efidisk_fini+0x810>
    1038:	adrp	x2, 0 <_start>
    103c:	adrp	x1, 0 <_start>
    1040:	adrp	x0, 0 <_start>
    1044:	adrp	x3, 0 <_start>
    1048:	ldr	x26, [x2]
    104c:	add	x19, sp, #0x60
    1050:	ldr	x25, [x1]
    1054:	mov	w23, #0x0                   	// #0
    1058:	ldr	x24, [x0]
    105c:	ldr	x27, [x3]
    1060:	b	1070 <grub_efidisk_fini+0x6f0>
    1064:	ldr	x22, [x22, #32]
    1068:	add	w23, w23, #0x1
    106c:	cbz	x22, 1190 <grub_efidisk_fini+0x810>
    1070:	mov	w3, w23
    1074:	mov	x2, x27
    1078:	mov	x1, #0x10                  	// #16
    107c:	mov	x0, x19
    1080:	bl	cf68 <grub_snprintf>
    1084:	mov	x4, x19
    1088:	mov	x3, x26
    108c:	mov	x2, x25
    1090:	mov	x0, x24
    1094:	mov	w1, #0x1a6                 	// #422
    1098:	bl	c708 <grub_real_dprintf>
    109c:	mov	x1, x21
    10a0:	mov	x0, x19
    10a4:	blr	x20
    10a8:	cbz	w0, 1064 <grub_efidisk_fini+0x6e4>
    10ac:	ldp	x23, x24, [sp, #48]
    10b0:	mov	w0, #0x1                   	// #1
    10b4:	ldp	x25, x26, [sp, #64]
    10b8:	ldp	x27, x28, [sp, #80]
    10bc:	ldp	x19, x20, [sp, #16]
    10c0:	ldp	x21, x22, [sp, #32]
    10c4:	ldp	x29, x30, [sp], #112
    10c8:	ret
    10cc:	ldp	x23, x24, [sp, #48]
    10d0:	ldp	x25, x26, [sp, #64]
    10d4:	ldp	x27, x28, [sp, #80]
    10d8:	mov	w0, #0x0                   	// #0
    10dc:	ldp	x19, x20, [sp, #16]
    10e0:	ldp	x21, x22, [sp, #32]
    10e4:	ldp	x29, x30, [sp], #112
    10e8:	ret
    10ec:	adrp	x0, 0 <_start>
    10f0:	ldr	x0, [x0]
    10f4:	ldr	x22, [x0, #8]
    10f8:	cbz	x22, 10d8 <grub_efidisk_fini+0x758>
    10fc:	adrp	x3, 0 <_start>
    1100:	adrp	x2, 0 <_start>
    1104:	adrp	x1, 0 <_start>
    1108:	adrp	x0, 0 <_start>
    110c:	add	x19, sp, #0x60
    1110:	stp	x23, x24, [sp, #48]
    1114:	mov	w23, #0x0                   	// #0
    1118:	ldr	x24, [x0]
    111c:	stp	x25, x26, [sp, #64]
    1120:	ldr	x26, [x2]
    1124:	stp	x27, x28, [sp, #80]
    1128:	ldr	x25, [x1]
    112c:	ldr	x27, [x3]
    1130:	b	1140 <grub_efidisk_fini+0x7c0>
    1134:	ldr	x22, [x22, #32]
    1138:	add	w23, w23, #0x1
    113c:	cbz	x22, 10cc <grub_efidisk_fini+0x74c>
    1140:	mov	w3, w23
    1144:	mov	x2, x27
    1148:	mov	x1, #0x10                  	// #16
    114c:	mov	x0, x19
    1150:	bl	cf68 <grub_snprintf>
    1154:	mov	x4, x19
    1158:	mov	x3, x26
    115c:	mov	x2, x25
    1160:	mov	x0, x24
    1164:	mov	w1, #0x19d                 	// #413
    1168:	bl	c708 <grub_real_dprintf>
    116c:	mov	x1, x21
    1170:	mov	x0, x19
    1174:	blr	x20
    1178:	cbz	w0, 1134 <grub_efidisk_fini+0x7b4>
    117c:	mov	w0, #0x1                   	// #1
    1180:	ldp	x23, x24, [sp, #48]
    1184:	ldp	x25, x26, [sp, #64]
    1188:	ldp	x27, x28, [sp, #80]
    118c:	b	10bc <grub_efidisk_fini+0x73c>
    1190:	ldr	x22, [x28, #16]
    1194:	cbz	x22, 1210 <grub_efidisk_fini+0x890>
    1198:	adrp	x2, 0 <_start>
    119c:	adrp	x1, 0 <_start>
    11a0:	adrp	x0, 0 <_start>
    11a4:	adrp	x3, 0 <_start>
    11a8:	ldr	x26, [x2]
    11ac:	add	x19, sp, #0x60
    11b0:	ldr	x25, [x1]
    11b4:	mov	w23, #0x0                   	// #0
    11b8:	ldr	x24, [x0]
    11bc:	ldr	x27, [x3]
    11c0:	b	11d0 <grub_efidisk_fini+0x850>
    11c4:	ldr	x22, [x22, #32]
    11c8:	add	w23, w23, #0x1
    11cc:	cbz	x22, 1210 <grub_efidisk_fini+0x890>
    11d0:	mov	w3, w23
    11d4:	mov	x2, x27
    11d8:	mov	x1, #0x10                  	// #16
    11dc:	mov	x0, x19
    11e0:	bl	cf68 <grub_snprintf>
    11e4:	mov	x4, x19
    11e8:	mov	x3, x26
    11ec:	mov	x2, x25
    11f0:	mov	x0, x24
    11f4:	mov	w1, #0x1ae                 	// #430
    11f8:	bl	c708 <grub_real_dprintf>
    11fc:	mov	x1, x21
    1200:	mov	x0, x19
    1204:	blr	x20
    1208:	cbz	w0, 11c4 <grub_efidisk_fini+0x844>
    120c:	b	10ac <grub_efidisk_fini+0x72c>
    1210:	mov	w0, #0x0                   	// #0
    1214:	ldp	x23, x24, [sp, #48]
    1218:	ldp	x25, x26, [sp, #64]
    121c:	ldp	x27, x28, [sp, #80]
    1220:	b	10dc <grub_efidisk_fini+0x75c>
    1224:	nop
	...
    1260:	stp	x29, x30, [sp, #-64]!
    1264:	adrp	x5, 0 <_start>
    1268:	adrp	x4, 0 <_start>
    126c:	mov	x29, sp
    1270:	stp	x19, x20, [sp, #16]
    1274:	mov	x20, x0
    1278:	adrp	x0, 0 <_start>
    127c:	mov	x19, x2
    1280:	stp	x21, x22, [sp, #32]
    1284:	mov	x22, x3
    1288:	ldr	x2, [x4]
    128c:	mov	x21, x1
    1290:	ldr	x3, [x5]
    1294:	mov	x4, x19
    1298:	ldr	x0, [x0]
    129c:	mov	x5, x1
    12a0:	ldr	x6, [x20]
    12a4:	mov	w1, #0x268                 	// #616
    12a8:	stp	x23, x24, [sp, #48]
    12ac:	bl	c708 <grub_real_dprintf>
    12b0:	ldr	x0, [x20, #64]
    12b4:	ldr	w2, [x20, #24]
    12b8:	ldr	x23, [x0, #24]
    12bc:	lsl	x19, x19, x2
    12c0:	ldr	x1, [x23, #8]
    12c4:	ldr	w0, [x1, #16]
    12c8:	cmp	w0, #0x0
    12cc:	csinc	w0, w0, wzr, ne  // ne = any
    12d0:	sub	x2, x0, #0x1
    12d4:	tst	x22, x2
    12d8:	b.ne	1328 <grub_efidisk_fini+0x9a8>  // b.any
    12dc:	ldr	w1, [x1]
    12e0:	mov	x3, x19
    12e4:	ldr	x5, [x23, #32]
    12e8:	mov	x4, x22
    12ec:	mov	x0, x23
    12f0:	mov	x2, x21
    12f4:	blr	x5
    12f8:	mov	x19, x0
    12fc:	mov	x0, #0xc                   	// #12
    1300:	movk	x0, #0x8000, lsl #48
    1304:	cmp	x19, x0
    1308:	b.eq	1380 <grub_efidisk_fini+0xa00>  // b.none
    130c:	cbnz	x19, 13a4 <grub_efidisk_fini+0xa24>
    1310:	mov	w0, #0x0                   	// #0
    1314:	ldp	x19, x20, [sp, #16]
    1318:	ldp	x21, x22, [sp, #32]
    131c:	ldp	x23, x24, [sp, #48]
    1320:	ldp	x29, x30, [sp], #64
    1324:	ret
    1328:	mov	x1, x19
    132c:	bl	5fc0 <grub_memalign>
    1330:	mov	x24, x0
    1334:	cbz	x0, 13a4 <grub_efidisk_fini+0xa24>
    1338:	mov	x2, x19
    133c:	mov	x1, x22
    1340:	bl	bf40 <grub_memmove>
    1344:	ldr	x0, [x23, #8]
    1348:	mov	x3, x19
    134c:	ldr	x5, [x23, #32]
    1350:	mov	x4, x24
    1354:	ldr	w1, [x0]
    1358:	mov	x2, x21
    135c:	mov	x0, x23
    1360:	blr	x5
    1364:	mov	x19, x0
    1368:	mov	x0, x24
    136c:	bl	6260 <grub_free>
    1370:	mov	x0, #0xc                   	// #12
    1374:	movk	x0, #0x8000, lsl #48
    1378:	cmp	x19, x0
    137c:	b.ne	130c <grub_efidisk_fini+0x98c>  // b.any
    1380:	adrp	x1, 0 <_start>
    1384:	mov	w0, #0xb                   	// #11
    1388:	ldr	x2, [x20]
    138c:	ldp	x19, x20, [sp, #16]
    1390:	ldp	x21, x22, [sp, #32]
    1394:	ldp	x23, x24, [sp, #48]
    1398:	ldp	x29, x30, [sp], #64
    139c:	ldr	x1, [x1]
    13a0:	b	9bc8 <grub_error>
    13a4:	mov	x2, x21
    13a8:	adrp	x1, 0 <_start>
    13ac:	ldr	x3, [x20]
    13b0:	mov	w0, #0xf                   	// #15
    13b4:	ldp	x19, x20, [sp, #16]
    13b8:	ldp	x21, x22, [sp, #32]
    13bc:	ldp	x23, x24, [sp, #48]
    13c0:	ldp	x29, x30, [sp], #64
    13c4:	ldr	x1, [x1]
    13c8:	b	9bc8 <grub_error>
    13cc:	nop
	...
    13f8:	stp	x29, x30, [sp, #-64]!
    13fc:	adrp	x5, 0 <_start>
    1400:	adrp	x4, 0 <_start>
    1404:	mov	x29, sp
    1408:	stp	x19, x20, [sp, #16]
    140c:	mov	x20, x0
    1410:	adrp	x0, 0 <_start>
    1414:	mov	x19, x2
    1418:	stp	x21, x22, [sp, #32]
    141c:	mov	x22, x3
    1420:	ldr	x2, [x4]
    1424:	mov	x21, x1
    1428:	ldr	x3, [x5]
    142c:	mov	x4, x19
    1430:	ldr	x0, [x0]
    1434:	mov	x5, x1
    1438:	ldr	x6, [x20]
    143c:	mov	w1, #0x251                 	// #593
    1440:	stp	x23, x24, [sp, #48]
    1444:	bl	c708 <grub_real_dprintf>
    1448:	ldr	x0, [x20, #64]
    144c:	ldr	w4, [x20, #24]
    1450:	ldr	x23, [x0, #24]
    1454:	lsl	x19, x19, x4
    1458:	ldr	x1, [x23, #8]
    145c:	ldr	w0, [x1, #16]
    1460:	cmp	w0, #0x0
    1464:	csinc	w0, w0, wzr, ne  // ne = any
    1468:	sub	x2, x0, #0x1
    146c:	tst	x22, x2
    1470:	b.ne	14c0 <grub_efidisk_fini+0xb40>  // b.any
    1474:	ldr	w1, [x1]
    1478:	mov	x3, x19
    147c:	ldr	x5, [x23, #24]
    1480:	mov	x4, x22
    1484:	mov	x0, x23
    1488:	mov	x2, x21
    148c:	blr	x5
    1490:	mov	x19, x0
    1494:	mov	x0, #0xc                   	// #12
    1498:	movk	x0, #0x8000, lsl #48
    149c:	cmp	x19, x0
    14a0:	b.eq	151c <grub_efidisk_fini+0xb9c>  // b.none
    14a4:	cbnz	x19, 1540 <grub_efidisk_fini+0xbc0>
    14a8:	mov	w0, #0x0                   	// #0
    14ac:	ldp	x19, x20, [sp, #16]
    14b0:	ldp	x21, x22, [sp, #32]
    14b4:	ldp	x23, x24, [sp, #48]
    14b8:	ldp	x29, x30, [sp], #64
    14bc:	ret
    14c0:	mov	x1, x19
    14c4:	bl	5fc0 <grub_memalign>
    14c8:	mov	x24, x0
    14cc:	cbz	x0, 1540 <grub_efidisk_fini+0xbc0>
    14d0:	ldr	x1, [x23, #8]
    14d4:	mov	x3, x19
    14d8:	ldr	x5, [x23, #24]
    14dc:	mov	x4, x24
    14e0:	ldr	w1, [x1]
    14e4:	mov	x2, x21
    14e8:	mov	x0, x23
    14ec:	blr	x5
    14f0:	mov	x2, x19
    14f4:	mov	x1, x24
    14f8:	mov	x19, x0
    14fc:	mov	x0, x22
    1500:	bl	bf40 <grub_memmove>
    1504:	mov	x0, x24
    1508:	bl	6260 <grub_free>
    150c:	mov	x0, #0xc                   	// #12
    1510:	movk	x0, #0x8000, lsl #48
    1514:	cmp	x19, x0
    1518:	b.ne	14a4 <grub_efidisk_fini+0xb24>  // b.any
    151c:	adrp	x1, 0 <_start>
    1520:	mov	w0, #0xb                   	// #11
    1524:	ldr	x2, [x20]
    1528:	ldp	x19, x20, [sp, #16]
    152c:	ldp	x21, x22, [sp, #32]
    1530:	ldp	x23, x24, [sp, #48]
    1534:	ldp	x29, x30, [sp], #64
    1538:	ldr	x1, [x1]
    153c:	b	9bc8 <grub_error>
    1540:	mov	x2, x21
    1544:	adrp	x1, 0 <_start>
    1548:	ldr	x3, [x20]
    154c:	mov	w0, #0xe                   	// #14
    1550:	ldp	x19, x20, [sp, #16]
    1554:	ldp	x21, x22, [sp, #32]
    1558:	ldp	x23, x24, [sp, #48]
    155c:	ldp	x29, x30, [sp], #64
    1560:	ldr	x1, [x1]
    1564:	b	9bc8 <grub_error>
	...

0000000000001590 <grub_efidisk_init>:
    1590:	stp	x29, x30, [sp, #-112]!
    1594:	adrp	x0, 0 <_start>
    1598:	adrp	x1, 0 <_start>
    159c:	mov	x29, sp
    15a0:	ldr	x0, [x0]
    15a4:	ldr	x1, [x1]
    15a8:	str	x1, [x0]
    15ac:	bl	d18 <grub_efidisk_fini+0x398>
    15b0:	cbz	x0, 1748 <grub_efidisk_init+0x1b8>
    15b4:	stp	x23, x24, [sp, #48]
    15b8:	mov	w24, #0xff7f                	// #65407
    15bc:	movk	w24, #0x4, lsl #16
    15c0:	stp	x19, x20, [sp, #16]
    15c4:	mov	x19, x0
    15c8:	stp	x21, x22, [sp, #32]
    15cc:	mov	x21, x0
    15d0:	stp	x25, x26, [sp, #64]
    15d4:	adrp	x25, 0 <_start>
    15d8:	stp	x27, x28, [sp, #80]
    15dc:	b	15e8 <grub_efidisk_init+0x58>
    15e0:	ldr	x21, [x21, #32]
    15e4:	cbz	x21, 1668 <grub_efidisk_init+0xd8>
    15e8:	ldr	x0, [x21, #16]
    15ec:	cbz	x0, 15e0 <grub_efidisk_init+0x50>
    15f0:	ldrb	w1, [x0]
    15f4:	and	w1, w1, #0x7f
    15f8:	cmp	w1, #0x4
    15fc:	b.ne	15e0 <grub_efidisk_init+0x50>  // b.any
    1600:	ldrb	w23, [x0, #1]
    1604:	cmp	w23, #0x1
    1608:	b.eq	1618 <grub_efidisk_init+0x88>  // b.none
    160c:	cmp	w23, #0x2
    1610:	b.ne	15e0 <grub_efidisk_init+0x50>  // b.any
    1614:	mov	w23, #0x0                   	// #0
    1618:	ldr	x0, [x21, #8]
    161c:	bl	2e20 <grub_efi_duplicate_device_path>
    1620:	mov	x22, x0
    1624:	cbz	x0, 15e0 <grub_efidisk_init+0x50>
    1628:	bl	2dc8 <grub_efi_find_last_device_path>
    162c:	cbz	x0, 15e0 <grub_efidisk_init+0x50>
    1630:	mov	x20, x19
    1634:	str	w24, [x0]
    1638:	cmp	x21, x20
    163c:	b.eq	1650 <grub_efidisk_init+0xc0>  // b.none
    1640:	ldr	x0, [x20, #8]
    1644:	mov	x1, x22
    1648:	bl	3900 <grub_efi_compare_device_paths>
    164c:	cbz	w0, 1774 <grub_efidisk_init+0x1e4>
    1650:	ldr	x20, [x20, #32]
    1654:	cbnz	x20, 1638 <grub_efidisk_init+0xa8>
    1658:	mov	x0, x22
    165c:	bl	6260 <grub_free>
    1660:	ldr	x21, [x21, #32]
    1664:	cbnz	x21, 15e8 <grub_efidisk_init+0x58>
    1668:	mov	x23, #0x85eb                	// #34283
    166c:	mov	x22, #0x8c8b                	// #35979
    1670:	movk	x23, #0x2b05, lsl #16
    1674:	movk	x22, #0x1be2, lsl #16
    1678:	mov	w26, #0x41d0                	// #16848
    167c:	mov	w25, #0x41d0                	// #16848
    1680:	mov	w24, #0x41d1                	// #16849
    1684:	movk	x23, #0xd8b8, lsl #32
    1688:	movk	x22, #0xae01, lsl #32
    168c:	mov	x20, x19
    1690:	movk	w26, #0x604, lsl #16
    1694:	movk	w25, #0x700, lsl #16
    1698:	movk	w24, #0x701, lsl #16
    169c:	movk	x23, #0x49a9, lsl #48
    16a0:	movk	x22, #0xb7f2, lsl #48
    16a4:	b	16f4 <grub_efidisk_init+0x164>
    16a8:	ldr	x1, [x20, #24]
    16ac:	cmp	w0, #0x2
    16b0:	ldr	x0, [x1, #8]
    16b4:	b.ne	16c4 <grub_efidisk_init+0x134>  // b.any
    16b8:	ldrb	w1, [x21, #1]
    16bc:	cmp	w1, #0x1
    16c0:	b.eq	1820 <grub_efidisk_init+0x290>  // b.none
    16c4:	ldrb	w1, [x0, #7]
    16c8:	cbz	w1, 16d8 <grub_efidisk_init+0x148>
    16cc:	ldr	w0, [x0, #12]
    16d0:	cmp	w0, #0x200
    16d4:	b.hi	175c <grub_efidisk_init+0x1cc>  // b.pmore
    16d8:	adrp	x0, 0 <_start>
    16dc:	mov	x1, x20
    16e0:	ldr	x0, [x0]
    16e4:	add	x0, x0, #0x8
    16e8:	bl	e88 <grub_efidisk_fini+0x508>
    16ec:	ldr	x20, [x20, #32]
    16f0:	cbz	x20, 1724 <grub_efidisk_init+0x194>
    16f4:	ldr	x21, [x20, #16]
    16f8:	cbz	x21, 16ec <grub_efidisk_init+0x15c>
    16fc:	ldrb	w0, [x21]
    1700:	and	w0, w0, #0x7f
    1704:	cmp	w0, #0x4
    1708:	b.ne	16a8 <grub_efidisk_init+0x118>  // b.any
    170c:	ldrb	w0, [x21, #1]
    1710:	cmp	w0, #0x3
    1714:	b.eq	17f0 <grub_efidisk_init+0x260>  // b.none
    1718:	ldr	x0, [x20, #24]
    171c:	ldr	x0, [x0, #8]
    1720:	b	16c4 <grub_efidisk_init+0x134>
    1724:	mov	x0, x19
    1728:	ldr	x19, [x19, #32]
    172c:	bl	6260 <grub_free>
    1730:	cbnz	x19, 1724 <grub_efidisk_init+0x194>
    1734:	ldp	x19, x20, [sp, #16]
    1738:	ldp	x21, x22, [sp, #32]
    173c:	ldp	x23, x24, [sp, #48]
    1740:	ldp	x25, x26, [sp, #64]
    1744:	ldp	x27, x28, [sp, #80]
    1748:	adrp	x0, 0 <_start>
    174c:	ldr	x0, [x0]
    1750:	bl	6ec8 <grub_disk_dev_register>
    1754:	ldp	x29, x30, [sp], #112
    1758:	ret
    175c:	adrp	x0, 0 <_start>
    1760:	mov	x1, x20
    1764:	ldr	x0, [x0]
    1768:	add	x0, x0, #0x10
    176c:	bl	e88 <grub_efidisk_fini+0x508>
    1770:	b	16ec <grub_efidisk_init+0x15c>
    1774:	mov	x0, x22
    1778:	bl	6260 <grub_free>
    177c:	ldr	x0, [x20, #8]
    1780:	bl	2e20 <grub_efi_duplicate_device_path>
    1784:	mov	x26, x0
    1788:	cbz	x0, 17c8 <grub_efidisk_init+0x238>
    178c:	bl	2dc8 <grub_efi_find_last_device_path>
    1790:	cbz	x0, 17c8 <grub_efidisk_init+0x238>
    1794:	mov	x22, x19
    1798:	str	w24, [x0]
    179c:	nop
    17a0:	cmp	x20, x22
    17a4:	b.eq	17b8 <grub_efidisk_init+0x228>  // b.none
    17a8:	ldr	x0, [x22, #8]
    17ac:	mov	x1, x26
    17b0:	bl	3900 <grub_efi_compare_device_paths>
    17b4:	cbz	w0, 1848 <grub_efidisk_init+0x2b8>
    17b8:	ldr	x22, [x22, #32]
    17bc:	cbnz	x22, 17a0 <grub_efidisk_init+0x210>
    17c0:	mov	x0, x26
    17c4:	bl	6260 <grub_free>
    17c8:	ldr	x0, [x20, #16]
    17cc:	cbz	x0, 17e8 <grub_efidisk_init+0x258>
    17d0:	ldr	x0, [x25]
    17d4:	mov	x1, x20
    17d8:	cbz	w23, 1858 <grub_efidisk_init+0x2c8>
    17dc:	add	x0, x0, #0x8
    17e0:	bl	e88 <grub_efidisk_fini+0x508>
    17e4:	str	xzr, [x20, #16]
    17e8:	str	xzr, [x21, #16]
    17ec:	b	15e0 <grub_efidisk_init+0x50>
    17f0:	stp	x23, x22, [sp, #96]
    17f4:	ldrh	w0, [x21, #2]
    17f8:	cmp	w0, #0x14
    17fc:	b.ne	1718 <grub_efidisk_init+0x188>  // b.any
    1800:	add	x1, sp, #0x60
    1804:	add	x0, x21, #0x4
    1808:	mov	x2, #0x10                  	// #16
    180c:	bl	c450 <grub_memcmp>
    1810:	cbz	w0, 1868 <grub_efidisk_init+0x2d8>
    1814:	ldrb	w0, [x21]
    1818:	and	w0, w0, #0x7f
    181c:	b	16a8 <grub_efidisk_init+0x118>
    1820:	ldr	w1, [x21, #4]
    1824:	cmp	w1, w26
    1828:	ccmp	w1, w25, #0x4, ne  // ne = any
    182c:	ccmp	w1, w24, #0x4, ne  // ne = any
    1830:	b.ne	16c4 <grub_efidisk_init+0x134>  // b.any
    1834:	adrp	x0, 0 <_start>
    1838:	mov	x1, x20
    183c:	ldr	x0, [x0]
    1840:	bl	e88 <grub_efidisk_fini+0x508>
    1844:	b	16ec <grub_efidisk_init+0x15c>
    1848:	mov	x0, x26
    184c:	bl	6260 <grub_free>
    1850:	str	xzr, [x21, #16]
    1854:	b	15e0 <grub_efidisk_init+0x50>
    1858:	add	x0, x0, #0x10
    185c:	bl	e88 <grub_efidisk_fini+0x508>
    1860:	str	xzr, [x20, #16]
    1864:	b	17e8 <grub_efidisk_init+0x258>
    1868:	ldr	x0, [x20, #8]
    186c:	bl	2e20 <grub_efi_duplicate_device_path>
    1870:	mov	x28, x0
    1874:	cbz	x0, 1814 <grub_efidisk_init+0x284>
    1878:	bl	2dc8 <grub_efi_find_last_device_path>
    187c:	cbz	x0, 1814 <grub_efidisk_init+0x284>
    1880:	mov	w1, #0xff7f                	// #65407
    1884:	mov	x27, x19
    1888:	movk	w1, #0x4, lsl #16
    188c:	str	w1, [x0]
    1890:	cmp	x20, x27
    1894:	b.eq	18a8 <grub_efidisk_init+0x318>  // b.none
    1898:	ldr	x0, [x27, #8]
    189c:	mov	x1, x28
    18a0:	bl	3900 <grub_efi_compare_device_paths>
    18a4:	cbz	w0, 18bc <grub_efidisk_init+0x32c>
    18a8:	ldr	x27, [x27, #32]
    18ac:	cbnz	x27, 1890 <grub_efidisk_init+0x300>
    18b0:	mov	x0, x28
    18b4:	bl	6260 <grub_free>
    18b8:	b	1814 <grub_efidisk_init+0x284>
    18bc:	mov	x0, x28
    18c0:	bl	6260 <grub_free>
    18c4:	b	16ec <grub_efidisk_init+0x15c>
	...

00000000000018e8 <grub_efidisk_get_device_handle>:
    18e8:	stp	x29, x30, [sp, #-80]!
    18ec:	mov	x29, sp
    18f0:	stp	x21, x22, [sp, #32]
    18f4:	mov	x21, x0
    18f8:	ldr	x0, [x0, #8]
    18fc:	stp	x19, x20, [sp, #16]
    1900:	mov	x19, #0x0                   	// #0
    1904:	ldr	w0, [x0, #8]
    1908:	cmp	w0, #0x3
    190c:	b.ne	1940 <grub_efidisk_get_device_handle+0x58>  // b.any
    1910:	ldr	x0, [x21]
    1914:	stp	x23, x24, [sp, #48]
    1918:	ldr	x23, [x21, #64]
    191c:	ldrb	w0, [x0]
    1920:	cmp	w0, #0x66
    1924:	b.eq	1954 <grub_efidisk_get_device_handle+0x6c>  // b.none
    1928:	cmp	w0, #0x68
    192c:	b.eq	1970 <grub_efidisk_get_device_handle+0x88>  // b.none
    1930:	cmp	w0, #0x63
    1934:	mov	x19, #0x0                   	// #0
    1938:	b.eq	1954 <grub_efidisk_get_device_handle+0x6c>  // b.none
    193c:	ldp	x23, x24, [sp, #48]
    1940:	mov	x0, x19
    1944:	ldp	x19, x20, [sp, #16]
    1948:	ldp	x21, x22, [sp, #32]
    194c:	ldp	x29, x30, [sp], #80
    1950:	ret
    1954:	ldr	x19, [x23]
    1958:	ldp	x21, x22, [sp, #32]
    195c:	mov	x0, x19
    1960:	ldp	x19, x20, [sp, #16]
    1964:	ldp	x23, x24, [sp, #48]
    1968:	ldp	x29, x30, [sp], #80
    196c:	ret
    1970:	ldr	x0, [x21, #40]
    1974:	cbz	x0, 1954 <grub_efidisk_get_device_handle+0x6c>
    1978:	bl	d18 <grub_efidisk_fini+0x398>
    197c:	mov	x22, x0
    1980:	cbz	x0, 1a74 <grub_efidisk_get_device_handle+0x18c>
    1984:	mov	w24, #0xff7f                	// #65407
    1988:	mov	x19, x0
    198c:	movk	w24, #0x4, lsl #16
    1990:	str	x25, [sp, #64]
    1994:	b	19a0 <grub_efidisk_get_device_handle+0xb8>
    1998:	ldr	x19, [x19, #32]
    199c:	cbz	x19, 1a48 <grub_efidisk_get_device_handle+0x160>
    19a0:	ldr	x0, [x19, #8]
    19a4:	bl	2e20 <grub_efi_duplicate_device_path>
    19a8:	mov	x20, x0
    19ac:	cbz	x0, 1998 <grub_efidisk_get_device_handle+0xb0>
    19b0:	bl	2dc8 <grub_efi_find_last_device_path>
    19b4:	cbz	x0, 1998 <grub_efidisk_get_device_handle+0xb0>
    19b8:	str	w24, [x0]
    19bc:	mov	x0, x20
    19c0:	ldr	x1, [x23, #8]
    19c4:	bl	3900 <grub_efi_compare_device_paths>
    19c8:	mov	w25, w0
    19cc:	mov	x0, x20
    19d0:	bl	6260 <grub_free>
    19d4:	cbnz	w25, 1998 <grub_efidisk_get_device_handle+0xb0>
    19d8:	ldr	x1, [x19, #16]
    19dc:	ldrb	w0, [x1]
    19e0:	and	w0, w0, #0x7f
    19e4:	cmp	w0, #0x4
    19e8:	b.ne	1998 <grub_efidisk_get_device_handle+0xb0>  // b.any
    19ec:	ldrb	w0, [x1, #1]
    19f0:	cmp	w0, #0x1
    19f4:	b.ne	1998 <grub_efidisk_get_device_handle+0xb0>  // b.any
    19f8:	ldr	x4, [x21, #40]
    19fc:	cbz	x4, 1a80 <grub_efidisk_get_device_handle+0x198>
    1a00:	mov	x0, x4
    1a04:	mov	x2, #0x0                   	// #0
    1a08:	ldr	x3, [x0, #8]
    1a0c:	ldr	x0, [x0, #40]
    1a10:	add	x2, x2, x3
    1a14:	cbnz	x0, 1a08 <grub_efidisk_get_device_handle+0x120>
    1a18:	ldr	w0, [x21, #24]
    1a1c:	ldr	x3, [x1, #8]
    1a20:	sub	w0, w0, #0x9
    1a24:	lsl	x3, x3, x0
    1a28:	cmp	x3, x2
    1a2c:	b.ne	1998 <grub_efidisk_get_device_handle+0xb0>  // b.any
    1a30:	ldr	x1, [x1, #16]
    1a34:	ldr	x2, [x4, #16]
    1a38:	lsl	x0, x1, x0
    1a3c:	cmp	x0, x2
    1a40:	b.ne	1998 <grub_efidisk_get_device_handle+0xb0>  // b.any
    1a44:	ldr	x19, [x19]
    1a48:	mov	x0, x22
    1a4c:	ldr	x22, [x22, #32]
    1a50:	bl	6260 <grub_free>
    1a54:	cbnz	x22, 1a48 <grub_efidisk_get_device_handle+0x160>
    1a58:	mov	x0, x19
    1a5c:	ldp	x19, x20, [sp, #16]
    1a60:	ldp	x21, x22, [sp, #32]
    1a64:	ldp	x23, x24, [sp, #48]
    1a68:	ldr	x25, [sp, #64]
    1a6c:	ldp	x29, x30, [sp], #80
    1a70:	ret
    1a74:	mov	x19, #0x0                   	// #0
    1a78:	ldp	x23, x24, [sp, #48]
    1a7c:	b	1940 <grub_efidisk_get_device_handle+0x58>
    1a80:	mov	x2, #0x0                   	// #0
    1a84:	b	1a18 <grub_efidisk_get_device_handle+0x130>

0000000000001a88 <grub_efidisk_get_device_name>:
    1a88:	stp	x29, x30, [sp, #-96]!
    1a8c:	mov	x29, sp
    1a90:	stp	x19, x20, [sp, #16]
    1a94:	bl	2d58 <grub_efi_get_device_path>
    1a98:	cbz	x0, 1ba4 <grub_efidisk_get_device_name+0x11c>
    1a9c:	mov	x19, x0
    1aa0:	bl	2dc8 <grub_efi_find_last_device_path>
    1aa4:	mov	x20, x0
    1aa8:	cbz	x0, 1ba4 <grub_efidisk_get_device_name+0x11c>
    1aac:	stp	x21, x22, [sp, #32]
    1ab0:	ldrb	w0, [x0]
    1ab4:	and	w0, w0, #0x7f
    1ab8:	cmp	w0, #0x4
    1abc:	b.ne	1ad4 <grub_efidisk_get_device_name+0x4c>  // b.any
    1ac0:	ldrb	w0, [x20, #1]
    1ac4:	sub	w0, w0, #0x1
    1ac8:	and	w0, w0, #0xff
    1acc:	cmp	w0, #0x1
    1ad0:	b.ls	1bb8 <grub_efidisk_get_device_name+0x130>  // b.plast
    1ad4:	adrp	x0, 0 <_start>
    1ad8:	ldr	x22, [x0]
    1adc:	ldr	x20, [x22, #8]
    1ae0:	cbz	x20, 1b4c <grub_efidisk_get_device_name+0xc4>
    1ae4:	mov	w21, #0x0                   	// #0
    1ae8:	b	1af8 <grub_efidisk_get_device_name+0x70>
    1aec:	ldr	x20, [x20, #32]
    1af0:	add	w21, w21, #0x1
    1af4:	cbz	x20, 1b4c <grub_efidisk_get_device_name+0xc4>
    1af8:	ldr	x0, [x20, #8]
    1afc:	mov	x1, x19
    1b00:	bl	3900 <grub_efi_compare_device_paths>
    1b04:	cbnz	w0, 1aec <grub_efidisk_get_device_name+0x64>
    1b08:	adrp	x1, 0 <_start>
    1b0c:	add	x19, sp, #0x40
    1b10:	mov	w3, w21
    1b14:	add	x0, x19, #0x1
    1b18:	ldr	x2, [x1]
    1b1c:	mov	x1, #0xc                   	// #12
    1b20:	bl	cf68 <grub_snprintf>
    1b24:	mov	w0, #0x68                  	// #104
    1b28:	strb	w0, [sp, #64]
    1b2c:	mov	x0, x19
    1b30:	bl	c9d0 <grub_strdup>
    1b34:	ldp	x21, x22, [sp, #32]
    1b38:	mov	x19, x0
    1b3c:	mov	x0, x19
    1b40:	ldp	x19, x20, [sp, #16]
    1b44:	ldp	x29, x30, [sp], #96
    1b48:	ret
    1b4c:	ldr	x20, [x22]
    1b50:	cbz	x20, 1cf8 <grub_efidisk_get_device_name+0x270>
    1b54:	mov	w21, #0x0                   	// #0
    1b58:	b	1b68 <grub_efidisk_get_device_name+0xe0>
    1b5c:	ldr	x20, [x20, #32]
    1b60:	add	w21, w21, #0x1
    1b64:	cbz	x20, 1cf8 <grub_efidisk_get_device_name+0x270>
    1b68:	ldr	x0, [x20, #8]
    1b6c:	mov	x1, x19
    1b70:	bl	3900 <grub_efi_compare_device_paths>
    1b74:	cbnz	w0, 1b5c <grub_efidisk_get_device_name+0xd4>
    1b78:	adrp	x1, 0 <_start>
    1b7c:	add	x19, sp, #0x40
    1b80:	mov	w3, w21
    1b84:	add	x0, x19, #0x1
    1b88:	ldr	x2, [x1]
    1b8c:	mov	x1, #0xc                   	// #12
    1b90:	bl	cf68 <grub_snprintf>
    1b94:	mov	w0, #0x66                  	// #102
    1b98:	strb	w0, [sp, #64]
    1b9c:	b	1b2c <grub_efidisk_get_device_name+0xa4>
    1ba0:	ldp	x21, x22, [sp, #32]
    1ba4:	mov	x19, #0x0                   	// #0
    1ba8:	mov	x0, x19
    1bac:	ldp	x19, x20, [sp, #16]
    1bb0:	ldp	x29, x30, [sp], #96
    1bb4:	ret
    1bb8:	mov	x0, x19
    1bbc:	mov	w19, #0xff7f                	// #65407
    1bc0:	bl	2e20 <grub_efi_duplicate_device_path>
    1bc4:	movk	w19, #0x4, lsl #16
    1bc8:	mov	x21, x0
    1bcc:	cbz	x0, 1da4 <grub_efidisk_get_device_name+0x31c>
    1bd0:	str	x23, [sp, #48]
    1bd4:	b	1c00 <grub_efidisk_get_device_name+0x178>
    1bd8:	ldrb	w1, [x0]
    1bdc:	and	w1, w1, #0x7f
    1be0:	cmp	w1, #0x4
    1be4:	b.ne	1c0c <grub_efidisk_get_device_name+0x184>  // b.any
    1be8:	ldrb	w1, [x0, #1]
    1bec:	sub	w1, w1, #0x1
    1bf0:	and	w1, w1, #0xff
    1bf4:	cmp	w1, #0x1
    1bf8:	b.hi	1c0c <grub_efidisk_get_device_name+0x184>  // b.pmore
    1bfc:	str	w19, [x0]
    1c00:	mov	x0, x21
    1c04:	bl	2dc8 <grub_efi_find_last_device_path>
    1c08:	cbnz	x0, 1bd8 <grub_efidisk_get_device_name+0x150>
    1c0c:	adrp	x0, 0 <_start>
    1c10:	ldr	x22, [x0]
    1c14:	ldr	x19, [x22, #8]
    1c18:	cbz	x19, 1d4c <grub_efidisk_get_device_name+0x2c4>
    1c1c:	mov	w23, #0x0                   	// #0
    1c20:	b	1c30 <grub_efidisk_get_device_name+0x1a8>
    1c24:	ldr	x19, [x19, #32]
    1c28:	add	w23, w23, #0x1
    1c2c:	cbz	x19, 1d4c <grub_efidisk_get_device_name+0x2c4>
    1c30:	ldr	x0, [x19, #8]
    1c34:	mov	x1, x21
    1c38:	bl	3900 <grub_efi_compare_device_paths>
    1c3c:	cbnz	w0, 1c24 <grub_efidisk_get_device_name+0x19c>
    1c40:	adrp	x1, 0 <_start>
    1c44:	add	x19, sp, #0x40
    1c48:	mov	w3, w23
    1c4c:	add	x0, x19, #0x1
    1c50:	ldr	x2, [x1]
    1c54:	mov	x1, #0xc                   	// #12
    1c58:	bl	cf68 <grub_snprintf>
    1c5c:	mov	w0, #0x68                  	// #104
    1c60:	strb	w0, [sp, #64]
    1c64:	mov	x0, x19
    1c68:	bl	6f38 <grub_disk_open>
    1c6c:	mov	x1, x0
    1c70:	mov	x0, x21
    1c74:	mov	x21, x1
    1c78:	bl	6260 <grub_free>
    1c7c:	cbz	x21, 1da0 <grub_efidisk_get_device_name+0x318>
    1c80:	ldr	x0, [x20, #8]
    1c84:	stp	xzr, x20, [sp, #80]
    1c88:	cbnz	x0, 1cac <grub_efidisk_get_device_name+0x224>
    1c8c:	ldr	w1, [x21, #24]
    1c90:	mov	x0, x21
    1c94:	ldr	x20, [x20, #16]
    1c98:	sub	w1, w1, #0x9
    1c9c:	lsl	x20, x20, x1
    1ca0:	bl	7f98 <grub_disk_get_size>
    1ca4:	cmp	x20, x0
    1ca8:	b.eq	1e3c <grub_efidisk_get_device_name+0x3b4>  // b.none
    1cac:	adrp	x1, 0 <_start>
    1cb0:	add	x2, sp, #0x50
    1cb4:	mov	x0, x21
    1cb8:	ldr	x1, [x1]
    1cbc:	bl	da18 <grub_partition_iterate>
    1cc0:	ldr	x2, [sp, #80]
    1cc4:	cbz	x2, 1e1c <grub_efidisk_get_device_name+0x394>
    1cc8:	adrp	x0, 0 <_start>
    1ccc:	ldr	x1, [x21]
    1cd0:	ldr	x0, [x0]
    1cd4:	bl	d0e0 <grub_xasprintf>
    1cd8:	mov	x19, x0
    1cdc:	ldr	x0, [sp, #80]
    1ce0:	bl	6260 <grub_free>
    1ce4:	mov	x0, x21
    1ce8:	bl	72c8 <grub_disk_close>
    1cec:	ldp	x21, x22, [sp, #32]
    1cf0:	ldr	x23, [sp, #48]
    1cf4:	b	1b3c <grub_efidisk_get_device_name+0xb4>
    1cf8:	ldr	x20, [x22, #16]
    1cfc:	cbz	x20, 1ba0 <grub_efidisk_get_device_name+0x118>
    1d00:	mov	w21, #0x0                   	// #0
    1d04:	b	1d14 <grub_efidisk_get_device_name+0x28c>
    1d08:	ldr	x20, [x20, #32]
    1d0c:	add	w21, w21, #0x1
    1d10:	cbz	x20, 1ba0 <grub_efidisk_get_device_name+0x118>
    1d14:	ldr	x0, [x20, #8]
    1d18:	mov	x1, x19
    1d1c:	bl	3900 <grub_efi_compare_device_paths>
    1d20:	cbnz	w0, 1d08 <grub_efidisk_get_device_name+0x280>
    1d24:	adrp	x1, 0 <_start>
    1d28:	add	x19, sp, #0x40
    1d2c:	mov	w3, w21
    1d30:	add	x0, x19, #0x1
    1d34:	ldr	x2, [x1]
    1d38:	mov	x1, #0xc                   	// #12
    1d3c:	bl	cf68 <grub_snprintf>
    1d40:	mov	w0, #0x63                  	// #99
    1d44:	strb	w0, [sp, #64]
    1d48:	b	1b2c <grub_efidisk_get_device_name+0xa4>
    1d4c:	ldr	x19, [x22]
    1d50:	cbz	x19, 1db0 <grub_efidisk_get_device_name+0x328>
    1d54:	mov	w23, #0x0                   	// #0
    1d58:	b	1d68 <grub_efidisk_get_device_name+0x2e0>
    1d5c:	ldr	x19, [x19, #32]
    1d60:	add	w23, w23, #0x1
    1d64:	cbz	x19, 1db0 <grub_efidisk_get_device_name+0x328>
    1d68:	ldr	x0, [x19, #8]
    1d6c:	mov	x1, x21
    1d70:	bl	3900 <grub_efi_compare_device_paths>
    1d74:	cbnz	w0, 1d5c <grub_efidisk_get_device_name+0x2d4>
    1d78:	adrp	x1, 0 <_start>
    1d7c:	add	x19, sp, #0x40
    1d80:	mov	w3, w23
    1d84:	add	x0, x19, #0x1
    1d88:	ldr	x2, [x1]
    1d8c:	mov	x1, #0xc                   	// #12
    1d90:	bl	cf68 <grub_snprintf>
    1d94:	mov	w0, #0x66                  	// #102
    1d98:	strb	w0, [sp, #64]
    1d9c:	b	1c64 <grub_efidisk_get_device_name+0x1dc>
    1da0:	ldr	x23, [sp, #48]
    1da4:	mov	x19, #0x0                   	// #0
    1da8:	ldp	x21, x22, [sp, #32]
    1dac:	b	1b3c <grub_efidisk_get_device_name+0xb4>
    1db0:	ldr	x19, [x22, #16]
    1db4:	cbz	x19, 1e04 <grub_efidisk_get_device_name+0x37c>
    1db8:	mov	w22, #0x0                   	// #0
    1dbc:	b	1dcc <grub_efidisk_get_device_name+0x344>
    1dc0:	ldr	x19, [x19, #32]
    1dc4:	add	w22, w22, #0x1
    1dc8:	cbz	x19, 1e04 <grub_efidisk_get_device_name+0x37c>
    1dcc:	ldr	x0, [x19, #8]
    1dd0:	mov	x1, x21
    1dd4:	bl	3900 <grub_efi_compare_device_paths>
    1dd8:	cbnz	w0, 1dc0 <grub_efidisk_get_device_name+0x338>
    1ddc:	adrp	x1, 0 <_start>
    1de0:	add	x19, sp, #0x40
    1de4:	mov	w3, w22
    1de8:	add	x0, x19, #0x1
    1dec:	ldr	x2, [x1]
    1df0:	mov	x1, #0xc                   	// #12
    1df4:	bl	cf68 <grub_snprintf>
    1df8:	mov	w0, #0x63                  	// #99
    1dfc:	strb	w0, [sp, #64]
    1e00:	b	1c64 <grub_efidisk_get_device_name+0x1dc>
    1e04:	mov	x0, x21
    1e08:	mov	x19, #0x0                   	// #0
    1e0c:	bl	6260 <grub_free>
    1e10:	ldp	x21, x22, [sp, #32]
    1e14:	ldr	x23, [sp, #48]
    1e18:	b	1b3c <grub_efidisk_get_device_name+0xb4>
    1e1c:	mov	x0, x21
    1e20:	bl	72c8 <grub_disk_close>
    1e24:	mov	x0, x19
    1e28:	bl	c9d0 <grub_strdup>
    1e2c:	mov	x19, x0
    1e30:	ldp	x21, x22, [sp, #32]
    1e34:	ldr	x23, [sp, #48]
    1e38:	b	1b3c <grub_efidisk_get_device_name+0xb4>
    1e3c:	ldr	x0, [x21]
    1e40:	bl	c9d0 <grub_strdup>
    1e44:	mov	x19, x0
    1e48:	b	1ce4 <grub_efidisk_get_device_name+0x25c>
    1e4c:	nop
	...
    1e70:	sub	sp, sp, #0x60
    1e74:	adrp	x2, 0 <_start>
    1e78:	stp	x29, x30, [sp, #48]
    1e7c:	add	x29, sp, #0x30
    1e80:	stp	x19, x20, [sp, #64]
    1e84:	mov	x19, x1
    1e88:	mov	x1, x0
    1e8c:	ldr	x0, [x2]
    1e90:	ldrh	w20, [x19, #2]
    1e94:	ldrh	w4, [x19, #10]
    1e98:	ldrh	w3, [x19, #8]
    1e9c:	ldr	w2, [x19, #4]
    1ea0:	str	x21, [sp, #80]
    1ea4:	sub	w21, w20, #0x14
    1ea8:	ldrb	w7, [x19, #14]
    1eac:	ldrb	w6, [x19, #13]
    1eb0:	ldrb	w5, [x19, #12]
    1eb4:	ldrb	w8, [x19, #19]
    1eb8:	ldrb	w9, [x19, #18]
    1ebc:	ldrb	w10, [x19, #17]
    1ec0:	ldrb	w11, [x19, #16]
    1ec4:	ldrb	w12, [x19, #15]
    1ec8:	str	w12, [sp]
    1ecc:	str	w11, [sp, #8]
    1ed0:	str	w10, [sp, #16]
    1ed4:	str	w9, [sp, #24]
    1ed8:	str	w8, [sp, #32]
    1edc:	str	w21, [sp, #40]
    1ee0:	bl	c078 <grub_err_printf>
    1ee4:	ldrh	w0, [x19, #2]
    1ee8:	cmp	w0, #0x14
    1eec:	b.ls	1f24 <grub_efidisk_get_device_name+0x49c>  // b.plast
    1ef0:	cbz	w21, 1f24 <grub_efidisk_get_device_name+0x49c>
    1ef4:	adrp	x1, 0 <_start>
    1ef8:	sub	w0, w20, #0x15
    1efc:	add	x20, x19, #0x15
    1f00:	add	x19, x19, #0x14
    1f04:	ldr	x21, [x1]
    1f08:	add	x20, x20, x0
    1f0c:	nop
    1f10:	ldrb	w1, [x19], #1
    1f14:	mov	x0, x21
    1f18:	bl	c078 <grub_err_printf>
    1f1c:	cmp	x19, x20
    1f20:	b.ne	1f10 <grub_efidisk_get_device_name+0x488>  // b.any
    1f24:	adrp	x0, 0 <_start>
    1f28:	ldp	x29, x30, [sp, #48]
    1f2c:	ldp	x19, x20, [sp, #64]
    1f30:	ldr	x0, [x0]
    1f34:	ldr	x21, [sp, #80]
    1f38:	add	sp, sp, #0x60
    1f3c:	b	c078 <grub_err_printf>
	...

0000000000001f58 <grub_efi_locate_protocol>:
    1f58:	stp	x29, x30, [sp, #-32]!
    1f5c:	adrp	x3, 0 <_start>
    1f60:	mov	x29, sp
    1f64:	ldr	x3, [x3]
    1f68:	add	x2, sp, #0x18
    1f6c:	ldr	x3, [x3]
    1f70:	ldr	x3, [x3, #96]
    1f74:	ldr	x3, [x3, #320]
    1f78:	blr	x3
    1f7c:	cmp	x0, #0x0
    1f80:	ldr	x1, [sp, #24]
    1f84:	ldp	x29, x30, [sp], #32
    1f88:	csel	x0, x1, xzr, eq  // eq = none
    1f8c:	ret
	...

0000000000001f98 <grub_efi_locate_handle>:
    1f98:	stp	x29, x30, [sp, #-80]!
    1f9c:	mov	x29, sp
    1fa0:	stp	x19, x20, [sp, #16]
    1fa4:	mov	w20, w0
    1fa8:	mov	x0, #0x40                  	// #64
    1fac:	stp	x21, x22, [sp, #32]
    1fb0:	mov	x21, x1
    1fb4:	mov	x22, x2
    1fb8:	stp	x23, x24, [sp, #48]
    1fbc:	mov	x23, x3
    1fc0:	str	x0, [sp, #72]
    1fc4:	bl	6210 <grub_malloc>
    1fc8:	cbz	x0, 206c <grub_efi_locate_handle+0xd4>
    1fcc:	mov	x19, x0
    1fd0:	adrp	x0, 0 <_start>
    1fd4:	mov	x1, x21
    1fd8:	add	x3, sp, #0x48
    1fdc:	ldr	x5, [x0]
    1fe0:	mov	x4, x19
    1fe4:	mov	x2, x22
    1fe8:	mov	w0, w20
    1fec:	ldr	x5, [x5]
    1ff0:	ldr	x24, [x5, #96]
    1ff4:	ldr	x5, [x24, #176]
    1ff8:	blr	x5
    1ffc:	mov	x1, #0x5                   	// #5
    2000:	movk	x1, #0x8000, lsl #48
    2004:	cmp	x0, x1
    2008:	b.eq	2034 <grub_efi_locate_handle+0x9c>  // b.none
    200c:	cbnz	x0, 2074 <grub_efi_locate_handle+0xdc>
    2010:	ldr	x0, [sp, #72]
    2014:	lsr	x0, x0, #3
    2018:	str	x0, [x23]
    201c:	mov	x0, x19
    2020:	ldp	x19, x20, [sp, #16]
    2024:	ldp	x21, x22, [sp, #32]
    2028:	ldp	x23, x24, [sp, #48]
    202c:	ldp	x29, x30, [sp], #80
    2030:	ret
    2034:	mov	x0, x19
    2038:	bl	6260 <grub_free>
    203c:	ldr	x0, [sp, #72]
    2040:	bl	6210 <grub_malloc>
    2044:	mov	x19, x0
    2048:	cbz	x0, 206c <grub_efi_locate_handle+0xd4>
    204c:	ldr	x5, [x24, #176]
    2050:	add	x3, sp, #0x48
    2054:	mov	x2, x22
    2058:	mov	x1, x21
    205c:	mov	w0, w20
    2060:	mov	x4, x19
    2064:	blr	x5
    2068:	b	200c <grub_efi_locate_handle+0x74>
    206c:	mov	x19, #0x0                   	// #0
    2070:	b	201c <grub_efi_locate_handle+0x84>
    2074:	mov	x0, x19
    2078:	mov	x19, #0x0                   	// #0
    207c:	bl	6260 <grub_free>
    2080:	b	201c <grub_efi_locate_handle+0x84>
    2084:	nop
	...

0000000000002090 <grub_efi_open_protocol>:
    2090:	stp	x29, x30, [sp, #-32]!
    2094:	adrp	x5, 0 <_start>
    2098:	adrp	x3, 0 <_start>
    209c:	mov	x29, sp
    20a0:	ldr	x6, [x5]
    20a4:	mov	x4, #0x0                   	// #0
    20a8:	ldr	x3, [x3]
    20ac:	mov	w5, w2
    20b0:	ldr	x6, [x6]
    20b4:	add	x2, sp, #0x18
    20b8:	ldr	x3, [x3]
    20bc:	ldr	x6, [x6, #96]
    20c0:	ldr	x6, [x6, #280]
    20c4:	blr	x6
    20c8:	cmp	x0, #0x0
    20cc:	ldr	x1, [sp, #24]
    20d0:	ldp	x29, x30, [sp], #32
    20d4:	csel	x0, x1, xzr, eq  // eq = none
    20d8:	ret
    20dc:	nop
	...

00000000000020f0 <grub_efi_set_text_mode>:
    20f0:	stp	x29, x30, [sp, #-48]!
    20f4:	adrp	x1, 0 <_start>
    20f8:	adrp	x2, 0 <_start>
    20fc:	mov	x29, sp
    2100:	ldr	x1, [x1]
    2104:	stp	x19, x20, [sp, #16]
    2108:	mov	w20, w0
    210c:	ldr	x0, [x2]
    2110:	add	x2, sp, #0x28
    2114:	ldr	x3, [x1]
    2118:	mov	x1, #0x0                   	// #0
    211c:	ldr	x3, [x3, #96]
    2120:	ldr	x3, [x3, #320]
    2124:	blr	x3
    2128:	cbnz	x0, 218c <grub_efi_set_text_mode+0x9c>
    212c:	ldr	x19, [sp, #40]
    2130:	cbz	x19, 218c <grub_efi_set_text_mode+0x9c>
    2134:	ldr	x4, [x19]
    2138:	add	x1, sp, #0x28
    213c:	mov	x0, x19
    2140:	mov	x3, #0x0                   	// #0
    2144:	mov	x2, #0x0                   	// #0
    2148:	blr	x4
    214c:	mov	x1, x0
    2150:	mov	w0, #0x0                   	// #0
    2154:	cbnz	x1, 2180 <grub_efi_set_text_mode+0x90>
    2158:	cmp	w20, #0x0
    215c:	ldr	w0, [sp, #40]
    2160:	cset	w1, eq  // eq = none
    2164:	cmp	w0, w1
    2168:	b.eq	218c <grub_efi_set_text_mode+0x9c>  // b.none
    216c:	ldr	x2, [x19, #8]
    2170:	mov	x0, x19
    2174:	blr	x2
    2178:	cmp	x0, #0x0
    217c:	cset	w0, eq  // eq = none
    2180:	ldp	x19, x20, [sp, #16]
    2184:	ldp	x29, x30, [sp], #48
    2188:	ret
    218c:	mov	w0, #0x1                   	// #1
    2190:	ldp	x19, x20, [sp, #16]
    2194:	ldp	x29, x30, [sp], #48
    2198:	ret
    219c:	nop
	...

00000000000021b0 <grub_efi_stall>:
    21b0:	adrp	x1, 0 <_start>
    21b4:	ldr	x1, [x1]
    21b8:	ldr	x1, [x1]
    21bc:	ldr	x1, [x1, #96]
    21c0:	ldr	x1, [x1, #248]
    21c4:	mov	x16, x1
    21c8:	br	x16
    21cc:	nop
	...

00000000000021d8 <grub_efi_get_loaded_image>:
    21d8:	stp	x29, x30, [sp, #-32]!
    21dc:	adrp	x3, 0 <_start>
    21e0:	adrp	x2, 0 <_start>
    21e4:	mov	x29, sp
    21e8:	ldr	x6, [x3]
    21ec:	adrp	x1, 0 <_start>
    21f0:	ldr	x3, [x2]
    21f4:	mov	w5, #0x2                   	// #2
    21f8:	ldr	x6, [x6]
    21fc:	add	x2, sp, #0x18
    2200:	ldr	x3, [x3]
    2204:	mov	x4, #0x0                   	// #0
    2208:	ldr	x6, [x6, #96]
    220c:	ldr	x1, [x1]
    2210:	ldr	x6, [x6, #280]
    2214:	add	x1, x1, #0x10
    2218:	blr	x6
    221c:	cmp	x0, #0x0
    2220:	ldr	x1, [sp, #24]
    2224:	ldp	x29, x30, [sp], #32
    2228:	csel	x0, x1, xzr, eq  // eq = none
    222c:	ret
	...

0000000000002248 <grub_reboot>:
    2248:	stp	x29, x30, [sp, #-16]!
    224c:	mov	w0, #0x1                   	// #1
    2250:	mov	x29, sp
    2254:	bl	a8 <grub_machine_fini>
    2258:	adrp	x0, 0 <_start>
    225c:	mov	x3, #0x0                   	// #0
    2260:	mov	x2, #0x0                   	// #0
    2264:	mov	x1, #0x0                   	// #0
    2268:	ldr	x4, [x0]
    226c:	mov	w0, #0x0                   	// #0
    2270:	ldr	x4, [x4]
    2274:	ldr	x4, [x4, #88]
    2278:	ldr	x4, [x4, #104]
    227c:	blr	x4
    2280:	b	2280 <grub_reboot+0x38>
    2284:	nop
	...

0000000000002290 <grub_exit>:
    2290:	stp	x29, x30, [sp, #-16]!
    2294:	mov	w0, #0x1                   	// #1
    2298:	mov	x29, sp
    229c:	bl	a8 <grub_machine_fini>
    22a0:	adrp	x1, 0 <_start>
    22a4:	adrp	x0, 0 <_start>
    22a8:	mov	x3, #0x0                   	// #0
    22ac:	mov	x2, #0x0                   	// #0
    22b0:	ldr	x4, [x1]
    22b4:	mov	x1, #0x0                   	// #0
    22b8:	ldr	x0, [x0]
    22bc:	ldr	x4, [x4]
    22c0:	ldr	x0, [x0]
    22c4:	ldr	x4, [x4, #96]
    22c8:	ldr	x4, [x4, #216]
    22cc:	blr	x4
	...

00000000000022e0 <grub_efi_set_virtual_address_map>:
    22e0:	stp	x29, x30, [sp, #-16]!
    22e4:	adrp	x4, 0 <_start>
    22e8:	mov	x29, sp
    22ec:	ldr	x4, [x4]
    22f0:	ldr	x4, [x4]
    22f4:	ldr	x4, [x4, #88]
    22f8:	ldr	x4, [x4, #56]
    22fc:	blr	x4
    2300:	cbnz	x0, 2310 <grub_efi_set_virtual_address_map+0x30>
    2304:	mov	w0, #0x0                   	// #0
    2308:	ldp	x29, x30, [sp], #16
    230c:	ret
    2310:	ldp	x29, x30, [sp], #16
    2314:	adrp	x1, 0 <_start>
    2318:	mov	w0, #0x1d                  	// #29
    231c:	ldr	x1, [x1]
    2320:	b	9bc8 <grub_error>
    2324:	nop
	...

0000000000002338 <grub_efi_set_variable>:
    2338:	stp	x29, x30, [sp, #-64]!
    233c:	mov	x29, sp
    2340:	stp	x19, x20, [sp, #16]
    2344:	mov	x19, x0
    2348:	stp	x21, x22, [sp, #32]
    234c:	mov	x22, x1
    2350:	stp	x23, x24, [sp, #48]
    2354:	mov	x24, x2
    2358:	mov	x23, x3
    235c:	bl	ce30 <grub_strlen>
    2360:	mov	x20, x0
    2364:	add	x0, x0, #0x1
    2368:	lsl	x0, x0, #1
    236c:	bl	6210 <grub_malloc>
    2370:	cbz	x0, 2564 <grub_efi_set_variable+0x22c>
    2374:	mov	x21, x0
    2378:	mov	x7, x0
    237c:	cbz	x20, 24a8 <grub_efi_set_variable+0x170>
    2380:	mov	x10, x20
    2384:	mov	x11, x19
    2388:	mov	w5, #0x0                   	// #0
    238c:	mov	w6, #0x0                   	// #0
    2390:	mov	w3, #0xffff                	// #65535
    2394:	mov	w2, #0xffffd800            	// #-10240
    2398:	mov	w1, #0xffffdc00            	// #-9216
    239c:	b	23f8 <grub_efi_set_variable+0xc0>
    23a0:	and	w0, w8, #0xc0
    23a4:	cmp	w0, #0x80
    23a8:	b.ne	23d0 <grub_efi_set_variable+0x98>  // b.any
    23ac:	sub	w6, w6, #0x1
    23b0:	bfi	w8, w5, #6, #26
    23b4:	mov	w5, w8
    23b8:	cmp	w6, #0x1
    23bc:	b.eq	2520 <grub_efi_set_variable+0x1e8>  // b.none
    23c0:	cmp	w6, #0x2
    23c4:	b.ne	2500 <grub_efi_set_variable+0x1c8>  // b.any
    23c8:	cmp	w8, #0xf
    23cc:	b.hi	23e8 <grub_efi_set_variable+0xb0>  // b.pmore
    23d0:	mov	w5, #0x3f                  	// #63
    23d4:	mov	w8, w5
    23d8:	sub	x10, x10, #0x1
    23dc:	mov	x9, x11
    23e0:	mov	w6, #0x0                   	// #0
    23e4:	strh	w8, [x7], #2
    23e8:	cmp	x20, #0x0
    23ec:	ccmp	x10, #0x0, #0x4, ne  // ne = any
    23f0:	b.eq	24a8 <grub_efi_set_variable+0x170>  // b.none
    23f4:	mov	x11, x9
    23f8:	mov	x9, x11
    23fc:	cmn	x20, #0x1
    2400:	cset	x0, ne  // ne = any
    2404:	sub	x20, x20, x0
    2408:	ldrb	w8, [x9], #1
    240c:	cbnz	w6, 23a0 <grub_efi_set_variable+0x68>
    2410:	mov	w5, w8
    2414:	tbz	w8, #7, 2454 <grub_efi_set_variable+0x11c>
    2418:	and	w0, w8, #0xe0
    241c:	cmp	w0, #0xc0
    2420:	b.eq	250c <grub_efi_set_variable+0x1d4>  // b.none
    2424:	and	w0, w8, #0xf0
    2428:	and	w5, w8, #0xf
    242c:	cmp	w0, #0xe0
    2430:	mov	w6, #0x2                   	// #2
    2434:	b.eq	23e8 <grub_efi_set_variable+0xb0>  // b.none
    2438:	and	w0, w8, #0xf8
    243c:	and	w5, w8, #0x7
    2440:	cmp	w0, #0xf0
    2444:	mov	w6, #0x3                   	// #3
    2448:	b.eq	23e8 <grub_efi_set_variable+0xb0>  // b.none
    244c:	mov	x11, x9
    2450:	b	23d0 <grub_efi_set_variable+0x98>
    2454:	cbz	w5, 24a8 <grub_efi_set_variable+0x170>
    2458:	cmp	x10, #0x1
    245c:	b.ls	252c <grub_efi_set_variable+0x1f4>  // b.plast
    2460:	mov	x11, x9
    2464:	cmp	w5, w3
    2468:	and	w8, w5, #0xffff
    246c:	b.ls	23d8 <grub_efi_set_variable+0xa0>  // b.plast
    2470:	mov	x11, x7
    2474:	sub	w6, w5, #0x10, lsl #12
    2478:	and	w8, w8, #0x3ff
    247c:	sub	x10, x10, #0x2
    2480:	ubfx	x6, x6, #10, #10
    2484:	orr	w8, w8, w1
    2488:	orr	w6, w6, w2
    248c:	strh	w6, [x11], #4
    2490:	strh	w8, [x7, #2]
    2494:	cmp	x20, #0x0
    2498:	mov	x7, x11
    249c:	ccmp	x10, #0x0, #0x4, ne  // ne = any
    24a0:	mov	w6, #0x0                   	// #0
    24a4:	b.ne	23f4 <grub_efi_set_variable+0xbc>  // b.any
    24a8:	adrp	x0, 0 <_start>
    24ac:	mov	x4, x24
    24b0:	mov	x3, x23
    24b4:	mov	x1, x22
    24b8:	ldr	x5, [x0]
    24bc:	strh	wzr, [x7]
    24c0:	mov	w2, #0x7                   	// #7
    24c4:	mov	x0, x21
    24c8:	ldr	x5, [x5]
    24cc:	ldr	x5, [x5, #88]
    24d0:	ldr	x5, [x5, #88]
    24d4:	blr	x5
    24d8:	mov	x20, x0
    24dc:	mov	x0, x21
    24e0:	bl	6260 <grub_free>
    24e4:	mov	w0, #0x0                   	// #0
    24e8:	cbnz	x20, 2540 <grub_efi_set_variable+0x208>
    24ec:	ldp	x19, x20, [sp, #16]
    24f0:	ldp	x21, x22, [sp, #32]
    24f4:	ldp	x23, x24, [sp, #48]
    24f8:	ldp	x29, x30, [sp], #64
    24fc:	ret
    2500:	cbz	w6, 2454 <grub_efi_set_variable+0x11c>
    2504:	mov	w6, #0x1                   	// #1
    2508:	b	23e8 <grub_efi_set_variable+0xb0>
    250c:	tst	w8, #0x1e
    2510:	b.eq	244c <grub_efi_set_variable+0x114>  // b.none
    2514:	and	w5, w8, #0x1f
    2518:	mov	w6, #0x1                   	// #1
    251c:	b	23e8 <grub_efi_set_variable+0xb0>
    2520:	cmp	w8, #0x1f
    2524:	b.hi	23e8 <grub_efi_set_variable+0xb0>  // b.pmore
    2528:	b	23d0 <grub_efi_set_variable+0x98>
    252c:	cmp	w5, w3
    2530:	b.hi	24a8 <grub_efi_set_variable+0x170>  // b.pmore
    2534:	mov	x11, x9
    2538:	and	w8, w5, #0xffff
    253c:	b	23d8 <grub_efi_set_variable+0xa0>
    2540:	mov	x2, x19
    2544:	adrp	x1, 0 <_start>
    2548:	ldp	x19, x20, [sp, #16]
    254c:	mov	w0, #0x1d                  	// #29
    2550:	ldp	x21, x22, [sp, #32]
    2554:	ldp	x23, x24, [sp, #48]
    2558:	ldp	x29, x30, [sp], #64
    255c:	ldr	x1, [x1]
    2560:	b	9bc8 <grub_error>
    2564:	adrp	x0, 0 <_start>
    2568:	ldp	x19, x20, [sp, #16]
    256c:	ldr	x0, [x0]
    2570:	ldp	x21, x22, [sp, #32]
    2574:	ldr	w0, [x0]
    2578:	ldp	x23, x24, [sp, #48]
    257c:	ldp	x29, x30, [sp], #64
    2580:	ret
    2584:	nop
	...

00000000000025a0 <grub_efi_get_variable>:
    25a0:	stp	x29, x30, [sp, #-96]!
    25a4:	mov	x29, sp
    25a8:	stp	x19, x20, [sp, #16]
    25ac:	mov	x19, x2
    25b0:	mov	x20, x1
    25b4:	stp	x21, x22, [sp, #32]
    25b8:	mov	x22, x0
    25bc:	str	xzr, [x2]
    25c0:	str	xzr, [sp, #88]
    25c4:	bl	ce30 <grub_strlen>
    25c8:	mov	x21, x0
    25cc:	add	x0, x0, #0x1
    25d0:	lsl	x0, x0, #1
    25d4:	bl	6210 <grub_malloc>
    25d8:	cbz	x0, 2818 <grub_efi_get_variable+0x278>
    25dc:	str	x23, [sp, #48]
    25e0:	mov	x5, x0
    25e4:	mov	x23, x0
    25e8:	cbz	x21, 26d8 <grub_efi_get_variable+0x138>
    25ec:	mov	x2, x21
    25f0:	mov	w3, #0x0                   	// #0
    25f4:	mov	w4, #0x0                   	// #0
    25f8:	mov	w8, #0xffff                	// #65535
    25fc:	mov	w10, #0xffffd800            	// #-10240
    2600:	mov	w9, #0xffffdc00            	// #-9216
    2604:	b	2660 <grub_efi_get_variable+0xc0>
    2608:	and	w1, w6, #0xc0
    260c:	cmp	w1, #0x80
    2610:	b.ne	2638 <grub_efi_get_variable+0x98>  // b.any
    2614:	sub	w4, w4, #0x1
    2618:	bfi	w6, w3, #6, #26
    261c:	mov	w3, w6
    2620:	cmp	w4, #0x1
    2624:	b.eq	27d4 <grub_efi_get_variable+0x234>  // b.none
    2628:	cmp	w4, #0x2
    262c:	b.ne	27c8 <grub_efi_get_variable+0x228>  // b.any
    2630:	cmp	w6, #0xf
    2634:	b.hi	2650 <grub_efi_get_variable+0xb0>  // b.pmore
    2638:	mov	w3, #0x3f                  	// #63
    263c:	mov	w6, w3
    2640:	sub	x2, x2, #0x1
    2644:	mov	x0, x22
    2648:	mov	w4, #0x0                   	// #0
    264c:	strh	w6, [x5], #2
    2650:	cmp	x21, #0x0
    2654:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    2658:	b.eq	26d8 <grub_efi_get_variable+0x138>  // b.none
    265c:	mov	x22, x0
    2660:	mov	x0, x22
    2664:	cmn	x21, #0x1
    2668:	cset	x1, ne  // ne = any
    266c:	sub	x21, x21, x1
    2670:	ldrb	w6, [x0], #1
    2674:	cbnz	w4, 2608 <grub_efi_get_variable+0x68>
    2678:	mov	w3, w6
    267c:	tbz	w6, #7, 277c <grub_efi_get_variable+0x1dc>
    2680:	and	w1, w6, #0xe0
    2684:	cmp	w1, #0xc0
    2688:	b.eq	26bc <grub_efi_get_variable+0x11c>  // b.none
    268c:	and	w1, w6, #0xf0
    2690:	and	w3, w6, #0xf
    2694:	cmp	w1, #0xe0
    2698:	mov	w4, #0x2                   	// #2
    269c:	b.eq	2650 <grub_efi_get_variable+0xb0>  // b.none
    26a0:	and	w1, w6, #0xf8
    26a4:	and	w3, w6, #0x7
    26a8:	cmp	w1, #0xf0
    26ac:	mov	w4, #0x3                   	// #3
    26b0:	b.eq	2650 <grub_efi_get_variable+0xb0>  // b.none
    26b4:	mov	x22, x0
    26b8:	b	2638 <grub_efi_get_variable+0x98>
    26bc:	tst	w6, #0x1e
    26c0:	b.eq	26b4 <grub_efi_get_variable+0x114>  // b.none
    26c4:	cmp	x21, #0x0
    26c8:	and	w3, w6, #0x1f
    26cc:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    26d0:	mov	w4, #0x1                   	// #1
    26d4:	b.ne	265c <grub_efi_get_variable+0xbc>  // b.any
    26d8:	adrp	x0, 0 <_start>
    26dc:	strh	wzr, [x5]
    26e0:	mov	x1, x20
    26e4:	add	x3, sp, #0x58
    26e8:	ldr	x5, [x0]
    26ec:	mov	x4, #0x0                   	// #0
    26f0:	mov	x0, x23
    26f4:	mov	x2, #0x0                   	// #0
    26f8:	ldr	x5, [x5]
    26fc:	ldr	x22, [x5, #88]
    2700:	ldr	x5, [x22, #72]
    2704:	blr	x5
    2708:	mov	x1, #0x5                   	// #5
    270c:	movk	x1, #0x8000, lsl #48
    2710:	cmp	x0, x1
    2714:	b.ne	27f4 <grub_efi_get_variable+0x254>  // b.any
    2718:	ldr	x0, [sp, #88]
    271c:	cbz	x0, 27f4 <grub_efi_get_variable+0x254>
    2720:	bl	6210 <grub_malloc>
    2724:	mov	x21, x0
    2728:	cbz	x0, 2854 <grub_efi_get_variable+0x2b4>
    272c:	ldr	x5, [x22, #72]
    2730:	mov	x1, x20
    2734:	mov	x4, x0
    2738:	add	x3, sp, #0x58
    273c:	mov	x2, #0x0                   	// #0
    2740:	mov	x0, x23
    2744:	blr	x5
    2748:	mov	x20, x0
    274c:	str	x0, [sp, #72]
    2750:	mov	x0, x23
    2754:	bl	6260 <grub_free>
    2758:	cbnz	x20, 2830 <grub_efi_get_variable+0x290>
    275c:	ldr	x0, [sp, #88]
    2760:	ldr	x23, [sp, #48]
    2764:	str	x0, [x19]
    2768:	mov	x0, x21
    276c:	ldp	x19, x20, [sp, #16]
    2770:	ldp	x21, x22, [sp, #32]
    2774:	ldp	x29, x30, [sp], #96
    2778:	ret
    277c:	cbz	w3, 26d8 <grub_efi_get_variable+0x138>
    2780:	cmp	x2, #0x1
    2784:	b.ls	27e0 <grub_efi_get_variable+0x240>  // b.plast
    2788:	mov	x22, x0
    278c:	cmp	w3, w8
    2790:	and	w6, w3, #0xffff
    2794:	b.ls	2640 <grub_efi_get_variable+0xa0>  // b.plast
    2798:	mov	x7, x5
    279c:	sub	w1, w3, #0x10, lsl #12
    27a0:	and	w6, w6, #0x3ff
    27a4:	sub	x2, x2, #0x2
    27a8:	ubfx	x1, x1, #10, #10
    27ac:	orr	w6, w6, w9
    27b0:	orr	w1, w1, w10
    27b4:	strh	w1, [x7], #4
    27b8:	mov	w4, #0x0                   	// #0
    27bc:	strh	w6, [x5, #2]
    27c0:	mov	x5, x7
    27c4:	b	2650 <grub_efi_get_variable+0xb0>
    27c8:	cbz	w4, 277c <grub_efi_get_variable+0x1dc>
    27cc:	mov	w4, #0x1                   	// #1
    27d0:	b	2650 <grub_efi_get_variable+0xb0>
    27d4:	cmp	w6, #0x1f
    27d8:	b.hi	2650 <grub_efi_get_variable+0xb0>  // b.pmore
    27dc:	b	2638 <grub_efi_get_variable+0x98>
    27e0:	cmp	w3, w8
    27e4:	b.hi	26d8 <grub_efi_get_variable+0x138>  // b.pmore
    27e8:	mov	x22, x0
    27ec:	and	w6, w3, #0xffff
    27f0:	b	2640 <grub_efi_get_variable+0xa0>
    27f4:	mov	x0, x23
    27f8:	mov	x21, #0x0                   	// #0
    27fc:	bl	6260 <grub_free>
    2800:	mov	x0, x21
    2804:	ldp	x19, x20, [sp, #16]
    2808:	ldp	x21, x22, [sp, #32]
    280c:	ldr	x23, [sp, #48]
    2810:	ldp	x29, x30, [sp], #96
    2814:	ret
    2818:	mov	x21, #0x0                   	// #0
    281c:	mov	x0, x21
    2820:	ldp	x19, x20, [sp, #16]
    2824:	ldp	x21, x22, [sp, #32]
    2828:	ldp	x29, x30, [sp], #96
    282c:	ret
    2830:	mov	x0, x21
    2834:	mov	x21, #0x0                   	// #0
    2838:	bl	6260 <grub_free>
    283c:	mov	x0, x21
    2840:	ldp	x19, x20, [sp, #16]
    2844:	ldp	x21, x22, [sp, #32]
    2848:	ldr	x23, [sp, #48]
    284c:	ldp	x29, x30, [sp], #96
    2850:	ret
    2854:	mov	x0, x23
    2858:	bl	6260 <grub_free>
    285c:	ldr	x23, [sp, #48]
    2860:	b	2768 <grub_efi_get_variable+0x1c8>
    2864:	nop
	...

0000000000002870 <grub_efi_modules_addr>:
    2870:	stp	x29, x30, [sp, #-80]!
    2874:	adrp	x0, 0 <_start>
    2878:	adrp	x2, 0 <_start>
    287c:	mov	x29, sp
    2880:	ldr	x0, [x0]
    2884:	adrp	x1, 0 <_start>
    2888:	ldr	x3, [x2]
    288c:	mov	w5, #0x2                   	// #2
    2890:	ldr	x0, [x0]
    2894:	add	x2, sp, #0x48
    2898:	ldr	x3, [x3]
    289c:	mov	x4, #0x0                   	// #0
    28a0:	ldr	x0, [x0, #96]
    28a4:	ldr	x1, [x1]
    28a8:	ldr	x6, [x0, #280]
    28ac:	add	x1, x1, #0x10
    28b0:	mov	x0, x3
    28b4:	blr	x6
    28b8:	cbnz	x0, 297c <grub_efi_modules_addr+0x10c>
    28bc:	str	x23, [sp, #48]
    28c0:	ldr	x23, [sp, #72]
    28c4:	cbz	x23, 2958 <grub_efi_modules_addr+0xe8>
    28c8:	ldr	x0, [x23, #64]
    28cc:	stp	x21, x22, [sp, #32]
    28d0:	add	x21, x0, #0x84
    28d4:	stp	x19, x20, [sp, #16]
    28d8:	ldrh	w19, [x0, #148]
    28dc:	ldrh	w0, [x21, #2]
    28e0:	add	x19, x19, #0x14
    28e4:	add	x19, x21, x19
    28e8:	cbz	w0, 2950 <grub_efi_modules_addr+0xe0>
    28ec:	adrp	x0, 0 <_start>
    28f0:	mov	w20, #0x0                   	// #0
    28f4:	ldr	x22, [x0]
    28f8:	b	2910 <grub_efi_modules_addr+0xa0>
    28fc:	ldrh	w0, [x21, #2]
    2900:	add	x19, x19, #0x28
    2904:	and	w20, w1, #0xffff
    2908:	cmp	w0, w1, uxth
    290c:	b.ls	2928 <grub_efi_modules_addr+0xb8>  // b.plast
    2910:	mov	x1, x22
    2914:	mov	x0, x19
    2918:	bl	c488 <grub_strcmp>
    291c:	add	w1, w20, #0x1
    2920:	cbnz	w0, 28fc <grub_efi_modules_addr+0x8c>
    2924:	ldrh	w0, [x21, #2]
    2928:	cmp	w20, w0
    292c:	b.eq	2950 <grub_efi_modules_addr+0xe0>  // b.none
    2930:	ldr	w1, [x19, #12]
    2934:	mov	w3, #0x696d                	// #26989
    2938:	ldr	x2, [x23, #64]
    293c:	movk	w3, #0x676d, lsl #16
    2940:	add	x0, x2, x1
    2944:	ldr	w1, [x2, x1]
    2948:	cmp	w1, w3
    294c:	b.eq	2968 <grub_efi_modules_addr+0xf8>  // b.none
    2950:	ldp	x19, x20, [sp, #16]
    2954:	ldp	x21, x22, [sp, #32]
    2958:	mov	x0, #0x0                   	// #0
    295c:	ldr	x23, [sp, #48]
    2960:	ldp	x29, x30, [sp], #80
    2964:	ret
    2968:	ldp	x19, x20, [sp, #16]
    296c:	ldp	x21, x22, [sp, #32]
    2970:	ldr	x23, [sp, #48]
    2974:	ldp	x29, x30, [sp], #80
    2978:	ret
    297c:	mov	x0, #0x0                   	// #0
    2980:	ldp	x29, x30, [sp], #80
    2984:	ret
	...

00000000000029a8 <grub_efi_get_filename>:
    29a8:	stp	x29, x30, [sp, #-96]!
    29ac:	mov	x29, sp
    29b0:	stp	x19, x20, [sp, #16]
    29b4:	cbz	x0, 2d1c <grub_efi_get_filename+0x374>
    29b8:	stp	x25, x26, [sp, #64]
    29bc:	mov	x25, x0
    29c0:	ldrb	w1, [x0]
    29c4:	ldrb	w3, [x0, #1]
    29c8:	and	w1, w1, #0x7f
    29cc:	cmp	w1, #0x7f
    29d0:	b.eq	2d18 <grub_efi_get_filename+0x370>  // b.none
    29d4:	mov	x2, x0
    29d8:	mov	x0, #0x0                   	// #0
    29dc:	nop
    29e0:	cmp	w3, #0x4
    29e4:	ldrh	w3, [x2, #2]
    29e8:	ccmp	w1, #0x4, #0x0, eq  // eq = none
    29ec:	b.ne	2a04 <grub_efi_get_filename+0x5c>  // b.any
    29f0:	sub	w1, w3, #0x4
    29f4:	ubfx	x1, x1, #1, #16
    29f8:	lsl	w1, w1, #2
    29fc:	add	w1, w1, #0x2
    2a00:	add	x0, x0, w1, sxtw
    2a04:	add	x2, x2, w3, uxth
    2a08:	ldrb	w1, [x2]
    2a0c:	ldrb	w3, [x2, #1]
    2a10:	and	w1, w1, #0x7f
    2a14:	cmp	w1, #0x7f
    2a18:	b.ne	29e0 <grub_efi_get_filename+0x38>  // b.any
    2a1c:	cbz	x0, 2d18 <grub_efi_get_filename+0x370>
    2a20:	bl	6210 <grub_malloc>
    2a24:	mov	x20, x0
    2a28:	cbz	x0, 2d18 <grub_efi_get_filename+0x370>
    2a2c:	stp	x23, x24, [sp, #48]
    2a30:	ldrb	w0, [x25]
    2a34:	ldrb	w1, [x25, #1]
    2a38:	and	w0, w0, #0x7f
    2a3c:	cmp	w0, #0x7f
    2a40:	b.eq	2d50 <grub_efi_get_filename+0x3a8>  // b.none
    2a44:	mov	x24, x20
    2a48:	mov	w19, #0xffff2400            	// #-56320
    2a4c:	stp	x21, x22, [sp, #32]
    2a50:	mov	w22, #0x2f                  	// #47
    2a54:	mov	w21, #0xffff2800            	// #-55296
    2a58:	str	x27, [sp, #80]
    2a5c:	b	2a7c <grub_efi_get_filename+0xd4>
    2a60:	ldrh	w0, [x25, #2]
    2a64:	add	x25, x25, x0
    2a68:	ldrb	w0, [x25]
    2a6c:	ldrb	w1, [x25, #1]
    2a70:	and	w0, w0, #0x7f
    2a74:	cmp	w0, #0x7f
    2a78:	b.eq	2bb4 <grub_efi_get_filename+0x20c>  // b.none
    2a7c:	cmp	w0, #0x4
    2a80:	ccmp	w1, #0x4, #0x0, eq  // eq = none
    2a84:	b.ne	2a60 <grub_efi_get_filename+0xb8>  // b.any
    2a88:	strb	w22, [x24], #1
    2a8c:	ldrh	w1, [x25, #2]
    2a90:	sub	w1, w1, #0x4
    2a94:	sxtw	x1, w1
    2a98:	tst	w1, #0x1fffe
    2a9c:	lsr	x2, x1, #1
    2aa0:	ubfx	w1, w1, #1, #16
    2aa4:	b.eq	2c74 <grub_efi_get_filename+0x2cc>  // b.none
    2aa8:	ubfiz	x2, x2, #1, #16
    2aac:	add	x2, x2, #0x2
    2ab0:	add	x2, x25, x2
    2ab4:	b	2ac0 <grub_efi_get_filename+0x118>
    2ab8:	ands	w1, w3, #0xffff
    2abc:	b.eq	2c74 <grub_efi_get_filename+0x2cc>  // b.none
    2ac0:	ldrh	w0, [x2]
    2ac4:	sub	w3, w1, #0x1
    2ac8:	sub	x2, x2, #0x2
    2acc:	cbz	w0, 2ab8 <grub_efi_get_filename+0x110>
    2ad0:	ubfiz	x27, x1, #1, #16
    2ad4:	and	x23, x1, #0xffff
    2ad8:	mov	x0, x27
    2adc:	bl	6210 <grub_malloc>
    2ae0:	mov	x26, x0
    2ae4:	cbz	x0, 2c84 <grub_efi_get_filename+0x2dc>
    2ae8:	add	x1, x25, #0x4
    2aec:	mov	x2, x27
    2af0:	bl	bf40 <grub_memmove>
    2af4:	sub	x1, x23, #0x1
    2af8:	mov	w5, #0x0                   	// #0
    2afc:	mov	w6, #0x3f                  	// #63
    2b00:	mov	w7, #0x2400                	// #9216
    2b04:	b	2b68 <grub_efi_get_filename+0x1c0>
    2b08:	add	w4, w2, w19
    2b0c:	cmp	w4, #0x3ff
    2b10:	b.hi	2c14 <grub_efi_get_filename+0x26c>  // b.pmore
    2b14:	add	w4, w5, w21
    2b18:	mov	x0, x3
    2b1c:	add	x24, x24, #0x4
    2b20:	mov	w5, #0x0                   	// #0
    2b24:	add	w2, w2, w4, lsl #10
    2b28:	add	w2, w2, w7
    2b2c:	and	w3, w2, #0x3f
    2b30:	lsr	w8, w2, #18
    2b34:	ubfx	x4, x2, #12, #6
    2b38:	ubfx	x2, x2, #6, #6
    2b3c:	orr	w8, w8, #0xfffffff0
    2b40:	orr	w4, w4, #0xffffff80
    2b44:	orr	w2, w2, #0xffffff80
    2b48:	orr	w3, w3, #0xffffff80
    2b4c:	sturb	w8, [x24, #-4]
    2b50:	sturb	w4, [x24, #-3]
    2b54:	sturb	w2, [x24, #-2]
    2b58:	sturb	w3, [x24, #-1]
    2b5c:	sub	x1, x1, #0x1
    2b60:	cmn	x1, #0x1
    2b64:	b.eq	2b90 <grub_efi_get_filename+0x1e8>  // b.none
    2b68:	mov	x3, x0
    2b6c:	ldrh	w2, [x3], #2
    2b70:	cbnz	w5, 2b08 <grub_efi_get_filename+0x160>
    2b74:	cmp	w2, #0x7f
    2b78:	b.hi	2c20 <grub_efi_get_filename+0x278>  // b.pmore
    2b7c:	strb	w2, [x24], #1
    2b80:	sub	x1, x1, #0x1
    2b84:	mov	x0, x3
    2b88:	cmn	x1, #0x1
    2b8c:	b.ne	2b68 <grub_efi_get_filename+0x1c0>  // b.any
    2b90:	mov	x0, x26
    2b94:	bl	6260 <grub_free>
    2b98:	ldrh	w0, [x25, #2]
    2b9c:	add	x25, x25, x0
    2ba0:	ldrb	w0, [x25]
    2ba4:	ldrb	w1, [x25, #1]
    2ba8:	and	w0, w0, #0x7f
    2bac:	cmp	w0, #0x7f
    2bb0:	b.ne	2a7c <grub_efi_get_filename+0xd4>  // b.any
    2bb4:	ldp	x21, x22, [sp, #32]
    2bb8:	ldr	x27, [sp, #80]
    2bbc:	strb	wzr, [x24]
    2bc0:	ldrb	w0, [x20]
    2bc4:	cbz	w0, 2d48 <grub_efi_get_filename+0x3a0>
    2bc8:	mov	x1, x20
    2bcc:	mov	x2, x20
    2bd0:	mov	w3, #0x2f                  	// #47
    2bd4:	nop
    2bd8:	cmp	w0, #0x5c
    2bdc:	add	x2, x2, #0x1
    2be0:	ccmp	w0, w3, #0x4, ne  // ne = any
    2be4:	b.eq	2cec <grub_efi_get_filename+0x344>  // b.none
    2be8:	sturb	w0, [x2, #-1]
    2bec:	add	x1, x1, #0x1
    2bf0:	ldrb	w0, [x1]
    2bf4:	cbnz	w0, 2bd8 <grub_efi_get_filename+0x230>
    2bf8:	strb	wzr, [x2]
    2bfc:	mov	x0, x20
    2c00:	ldp	x19, x20, [sp, #16]
    2c04:	ldp	x23, x24, [sp, #48]
    2c08:	ldp	x25, x26, [sp, #64]
    2c0c:	ldp	x29, x30, [sp], #96
    2c10:	ret
    2c14:	mov	w5, #0x0                   	// #0
    2c18:	strb	w6, [x24], #1
    2c1c:	b	2b5c <grub_efi_get_filename+0x1b4>
    2c20:	cmp	w2, #0x7ff
    2c24:	b.hi	2c50 <grub_efi_get_filename+0x2a8>  // b.pmore
    2c28:	mov	x4, x24
    2c2c:	lsr	w8, w2, #6
    2c30:	orr	w8, w8, #0xffffffc0
    2c34:	and	w2, w2, #0x3f
    2c38:	orr	w2, w2, #0xffffff80
    2c3c:	mov	x0, x3
    2c40:	strb	w8, [x4], #2
    2c44:	strb	w2, [x24, #1]
    2c48:	mov	x24, x4
    2c4c:	b	2b5c <grub_efi_get_filename+0x1b4>
    2c50:	add	w0, w2, w21
    2c54:	cmp	w0, #0x3ff
    2c58:	b.ls	2ce0 <grub_efi_get_filename+0x338>  // b.plast
    2c5c:	add	w0, w2, w19
    2c60:	cmp	w0, #0x3ff
    2c64:	b.hi	2cb0 <grub_efi_get_filename+0x308>  // b.pmore
    2c68:	mov	x0, x3
    2c6c:	strb	w6, [x24], #1
    2c70:	b	2b5c <grub_efi_get_filename+0x1b4>
    2c74:	mov	x0, #0x0                   	// #0
    2c78:	bl	6210 <grub_malloc>
    2c7c:	mov	x26, x0
    2c80:	cbnz	x0, 2d30 <grub_efi_get_filename+0x388>
    2c84:	mov	x0, x20
    2c88:	mov	x20, #0x0                   	// #0
    2c8c:	bl	6260 <grub_free>
    2c90:	mov	x0, x20
    2c94:	ldp	x19, x20, [sp, #16]
    2c98:	ldp	x21, x22, [sp, #32]
    2c9c:	ldp	x23, x24, [sp, #48]
    2ca0:	ldp	x25, x26, [sp, #64]
    2ca4:	ldr	x27, [sp, #80]
    2ca8:	ldp	x29, x30, [sp], #96
    2cac:	ret
    2cb0:	lsr	w8, w2, #12
    2cb4:	ubfx	x4, x2, #6, #6
    2cb8:	and	w2, w2, #0x3f
    2cbc:	mov	x0, x3
    2cc0:	orr	w8, w8, #0xffffffe0
    2cc4:	orr	w3, w4, #0xffffff80
    2cc8:	orr	w2, w2, #0xffffff80
    2ccc:	add	x24, x24, #0x3
    2cd0:	sturb	w8, [x24, #-3]
    2cd4:	sturb	w3, [x24, #-2]
    2cd8:	sturb	w2, [x24, #-1]
    2cdc:	b	2b5c <grub_efi_get_filename+0x1b4>
    2ce0:	mov	w5, w2
    2ce4:	mov	x0, x3
    2ce8:	b	2b5c <grub_efi_get_filename+0x1b4>
    2cec:	sturb	w3, [x2, #-1]
    2cf0:	ldrb	w0, [x1]
    2cf4:	cmp	w0, #0x5c
    2cf8:	ccmp	w0, w3, #0x4, ne  // ne = any
    2cfc:	b.ne	2bf4 <grub_efi_get_filename+0x24c>  // b.any
    2d00:	ldrb	w0, [x1, #1]!
    2d04:	cmp	w0, #0x5c
    2d08:	ccmp	w0, w3, #0x4, ne  // ne = any
    2d0c:	b.eq	2d00 <grub_efi_get_filename+0x358>  // b.none
    2d10:	cbnz	w0, 2bd8 <grub_efi_get_filename+0x230>
    2d14:	b	2bf8 <grub_efi_get_filename+0x250>
    2d18:	ldp	x25, x26, [sp, #64]
    2d1c:	mov	x20, #0x0                   	// #0
    2d20:	mov	x0, x20
    2d24:	ldp	x19, x20, [sp, #16]
    2d28:	ldp	x29, x30, [sp], #96
    2d2c:	ret
    2d30:	add	x1, x25, #0x4
    2d34:	mov	x2, #0x0                   	// #0
    2d38:	bl	bf40 <grub_memmove>
    2d3c:	mov	x0, x26
    2d40:	bl	6260 <grub_free>
    2d44:	b	2b98 <grub_efi_get_filename+0x1f0>
    2d48:	mov	x2, x20
    2d4c:	b	2bf8 <grub_efi_get_filename+0x250>
    2d50:	mov	x24, x20
    2d54:	b	2bbc <grub_efi_get_filename+0x214>

0000000000002d58 <grub_efi_get_device_path>:
    2d58:	stp	x29, x30, [sp, #-32]!
    2d5c:	adrp	x3, 0 <_start>
    2d60:	adrp	x2, 0 <_start>
    2d64:	mov	x29, sp
    2d68:	ldr	x6, [x3]
    2d6c:	adrp	x1, 0 <_start>
    2d70:	ldr	x3, [x2]
    2d74:	mov	w5, #0x2                   	// #2
    2d78:	ldr	x6, [x6]
    2d7c:	add	x2, sp, #0x18
    2d80:	ldr	x3, [x3]
    2d84:	mov	x4, #0x0                   	// #0
    2d88:	ldr	x6, [x6, #96]
    2d8c:	ldr	x1, [x1]
    2d90:	ldr	x6, [x6, #280]
    2d94:	add	x1, x1, #0x20
    2d98:	blr	x6
    2d9c:	cmp	x0, #0x0
    2da0:	ldr	x1, [sp, #24]
    2da4:	ldp	x29, x30, [sp], #32
    2da8:	csel	x0, x1, xzr, eq  // eq = none
    2dac:	ret
	...

0000000000002dc8 <grub_efi_find_last_device_path>:
    2dc8:	mov	x1, x0
    2dcc:	ldrb	w0, [x0]
    2dd0:	and	w0, w0, #0x7f
    2dd4:	cmp	w0, #0x7f
    2dd8:	b.eq	2e0c <grub_efi_find_last_device_path+0x44>  // b.none
    2ddc:	nop
    2de0:	ldrh	w2, [x1, #2]
    2de4:	mov	x0, x1
    2de8:	add	x1, x1, x2
    2dec:	ldrb	w2, [x1]
    2df0:	and	w2, w2, #0x7f
    2df4:	cmp	w2, #0x7f
    2df8:	b.ne	2de0 <grub_efi_find_last_device_path+0x18>  // b.any
    2dfc:	ldrb	w2, [x1, #1]
    2e00:	cmp	w2, #0xff
    2e04:	b.ne	2de0 <grub_efi_find_last_device_path+0x18>  // b.any
    2e08:	ret
    2e0c:	ldrb	w0, [x1, #1]
    2e10:	cmp	w0, #0xff
    2e14:	b.ne	2de0 <grub_efi_find_last_device_path+0x18>  // b.any
    2e18:	mov	x0, #0x0                   	// #0
    2e1c:	ret

0000000000002e20 <grub_efi_duplicate_device_path>:
    2e20:	stp	x29, x30, [sp, #-48]!
    2e24:	mov	x3, x0
    2e28:	mov	x29, sp
    2e2c:	stp	x19, x20, [sp, #16]
    2e30:	mov	x19, #0x0                   	// #0
    2e34:	ldrh	w5, [x3, #2]
    2e38:	str	x21, [sp, #32]
    2e3c:	mov	x21, x0
    2e40:	add	x19, x19, x5
    2e44:	ldrb	w4, [x3]
    2e48:	and	w4, w4, #0x7f
    2e4c:	cmp	w4, #0x7f
    2e50:	b.eq	2e74 <grub_efi_duplicate_device_path+0x54>  // b.none
    2e54:	nop
    2e58:	add	x3, x3, x5
    2e5c:	ldrb	w4, [x3]
    2e60:	ldrh	w5, [x3, #2]
    2e64:	and	w4, w4, #0x7f
    2e68:	cmp	w4, #0x7f
    2e6c:	add	x19, x19, x5
    2e70:	b.ne	2e58 <grub_efi_duplicate_device_path+0x38>  // b.any
    2e74:	ldrb	w2, [x3, #1]
    2e78:	cmp	w2, #0xff
    2e7c:	b.ne	2e58 <grub_efi_duplicate_device_path+0x38>  // b.any
    2e80:	mov	x0, x19
    2e84:	bl	6210 <grub_malloc>
    2e88:	mov	x20, x0
    2e8c:	cbz	x0, 2e9c <grub_efi_duplicate_device_path+0x7c>
    2e90:	mov	x2, x19
    2e94:	mov	x1, x21
    2e98:	bl	bf40 <grub_memmove>
    2e9c:	mov	x0, x20
    2ea0:	ldp	x19, x20, [sp, #16]
    2ea4:	ldr	x21, [sp, #32]
    2ea8:	ldp	x29, x30, [sp], #48
    2eac:	ret

0000000000002eb0 <grub_efi_print_device_path>:
    2eb0:	sub	sp, sp, #0xc0
    2eb4:	stp	x29, x30, [sp, #112]
    2eb8:	add	x29, sp, #0x70
    2ebc:	stp	x19, x20, [sp, #128]
    2ec0:	mov	x19, x0
    2ec4:	stp	x21, x22, [sp, #144]
    2ec8:	mov	w22, #0xffff2800            	// #-55296
    2ecc:	ldrh	w20, [x19, #2]
    2ed0:	stp	x23, x24, [sp, #160]
    2ed4:	mov	w21, #0xffff2400            	// #-56320
    2ed8:	adrp	x23, 0 <_start>
    2edc:	ldrb	w3, [x19]
    2ee0:	ldrb	w1, [x19, #1]
    2ee4:	and	w3, w3, #0x7f
    2ee8:	cmp	w3, #0x4
    2eec:	b.eq	2f74 <grub_efi_print_device_path+0xc4>  // b.none
    2ef0:	b.hi	3144 <grub_efi_print_device_path+0x294>  // b.pmore
    2ef4:	cmp	w3, #0x2
    2ef8:	b.eq	3230 <grub_efi_print_device_path+0x380>  // b.none
    2efc:	cmp	w3, #0x3
    2f00:	b.ne	30e8 <grub_efi_print_device_path+0x238>  // b.any
    2f04:	cmp	w1, #0xa
    2f08:	b.eq	3700 <grub_efi_print_device_path+0x850>  // b.none
    2f0c:	b.hi	300c <grub_efi_print_device_path+0x15c>  // b.pmore
    2f10:	cmp	w1, #0x4
    2f14:	b.eq	364c <grub_efi_print_device_path+0x79c>  // b.none
    2f18:	b.ls	3174 <grub_efi_print_device_path+0x2c4>  // b.plast
    2f1c:	cmp	w1, #0x6
    2f20:	b.eq	3638 <grub_efi_print_device_path+0x788>  // b.none
    2f24:	cmp	w1, #0x9
    2f28:	b.ne	3250 <grub_efi_print_device_path+0x3a0>  // b.any
    2f2c:	adrp	x0, 0 <_start>
    2f30:	ldrb	w1, [x19, #8]
    2f34:	ldp	x2, x3, [x19, #24]
    2f38:	ldr	x0, [x0]
    2f3c:	ldr	x4, [x19, #40]
    2f40:	bl	c078 <grub_err_printf>
    2f44:	nop
    2f48:	ldrb	w0, [x19]
    2f4c:	and	w0, w0, #0x7f
    2f50:	cmp	w0, #0x7f
    2f54:	b.eq	2fe8 <grub_efi_print_device_path+0x138>  // b.none
    2f58:	add	x19, x19, w20, uxth
    2f5c:	ldrb	w3, [x19]
    2f60:	ldrb	w1, [x19, #1]
    2f64:	and	w3, w3, #0x7f
    2f68:	ldrh	w20, [x19, #2]
    2f6c:	cmp	w3, #0x4
    2f70:	b.ne	2ef0 <grub_efi_print_device_path+0x40>  // b.any
    2f74:	cmp	w1, #0x3
    2f78:	b.eq	35a0 <grub_efi_print_device_path+0x6f0>  // b.none
    2f7c:	b.ls	3270 <grub_efi_print_device_path+0x3c0>  // b.plast
    2f80:	cmp	w1, #0x4
    2f84:	b.eq	345c <grub_efi_print_device_path+0x5ac>  // b.none
    2f88:	cmp	w1, #0x5
    2f8c:	b.ne	353c <grub_efi_print_device_path+0x68c>  // b.any
    2f90:	adrp	x0, 0 <_start>
    2f94:	ldrb	w7, [x19, #15]
    2f98:	ldrb	w6, [x19, #14]
    2f9c:	ldrb	w5, [x19, #13]
    2fa0:	ldrb	w4, [x19, #12]
    2fa4:	ldrh	w3, [x19, #10]
    2fa8:	ldrh	w2, [x19, #8]
    2fac:	ldrb	w8, [x19, #19]
    2fb0:	ldrb	w9, [x19, #18]
    2fb4:	ldrb	w10, [x19, #17]
    2fb8:	ldrb	w11, [x19, #16]
    2fbc:	ldr	w1, [x19, #4]
    2fc0:	ldr	x0, [x0]
    2fc4:	str	w11, [sp]
    2fc8:	str	w10, [sp, #8]
    2fcc:	str	w9, [sp, #16]
    2fd0:	str	w8, [sp, #24]
    2fd4:	bl	c078 <grub_err_printf>
    2fd8:	ldrb	w0, [x19]
    2fdc:	and	w0, w0, #0x7f
    2fe0:	cmp	w0, #0x7f
    2fe4:	b.ne	2f58 <grub_efi_print_device_path+0xa8>  // b.any
    2fe8:	ldrb	w0, [x19, #1]
    2fec:	cmp	w0, #0xff
    2ff0:	b.ne	2f58 <grub_efi_print_device_path+0xa8>  // b.any
    2ff4:	ldp	x29, x30, [sp, #112]
    2ff8:	ldp	x19, x20, [sp, #128]
    2ffc:	ldp	x21, x22, [sp, #144]
    3000:	ldp	x23, x24, [sp, #160]
    3004:	add	sp, sp, #0xc0
    3008:	ret
    300c:	cmp	w1, #0xe
    3010:	b.eq	3618 <grub_efi_print_device_path+0x768>  // b.none
    3014:	b.ls	3044 <grub_efi_print_device_path+0x194>  // b.plast
    3018:	cmp	w1, #0xf
    301c:	b.eq	3678 <grub_efi_print_device_path+0x7c8>  // b.none
    3020:	cmp	w1, #0x12
    3024:	b.ne	369c <grub_efi_print_device_path+0x7ec>  // b.any
    3028:	adrp	x0, 0 <_start>
    302c:	ldrh	w3, [x19, #8]
    3030:	ldrh	w2, [x19, #6]
    3034:	ldrh	w1, [x19, #4]
    3038:	ldr	x0, [x0]
    303c:	bl	c078 <grub_err_printf>
    3040:	b	2f48 <grub_efi_print_device_path+0x98>
    3044:	cmp	w1, #0xc
    3048:	b.eq	36ac <grub_efi_print_device_path+0x7fc>  // b.none
    304c:	cmp	w1, #0xd
    3050:	b.ne	3198 <grub_efi_print_device_path+0x2e8>  // b.any
    3054:	ldrh	w6, [x19, #18]
    3058:	adrp	x0, 0 <_start>
    305c:	ldrh	w2, [x19, #26]
    3060:	ldrh	w3, [x19, #24]
    3064:	ldrh	w4, [x19, #22]
    3068:	ldrh	w5, [x19, #20]
    306c:	ldrb	w1, [x19, #42]
    3070:	ldrh	w8, [x19, #40]
    3074:	ldrh	w9, [x19, #38]
    3078:	ldrh	w10, [x19, #36]
    307c:	ldrh	w11, [x19, #34]
    3080:	ldrh	w12, [x19, #32]
    3084:	ldrh	w13, [x19, #30]
    3088:	ldrh	w14, [x19, #28]
    308c:	ldrh	w7, [x19, #16]
    3090:	str	w6, [sp]
    3094:	ldrh	w6, [x19, #14]
    3098:	str	w5, [sp, #8]
    309c:	ldrh	w5, [x19, #12]
    30a0:	str	w4, [sp, #16]
    30a4:	ldrh	w4, [x19, #10]
    30a8:	str	w3, [sp, #24]
    30ac:	ldrh	w3, [x19, #8]
    30b0:	str	w2, [sp, #32]
    30b4:	ldrh	w2, [x19, #6]
    30b8:	str	w14, [sp, #40]
    30bc:	str	w13, [sp, #48]
    30c0:	str	w12, [sp, #56]
    30c4:	str	w11, [sp, #64]
    30c8:	str	w10, [sp, #72]
    30cc:	str	w9, [sp, #80]
    30d0:	str	w8, [sp, #88]
    30d4:	str	w1, [sp, #96]
    30d8:	ldrh	w1, [x19, #4]
    30dc:	ldr	x0, [x0]
    30e0:	bl	c078 <grub_err_printf>
    30e4:	b	2f48 <grub_efi_print_device_path+0x98>
    30e8:	cmp	w3, #0x1
    30ec:	b.ne	3208 <grub_efi_print_device_path+0x358>  // b.any
    30f0:	cmp	w1, #0x3
    30f4:	b.eq	354c <grub_efi_print_device_path+0x69c>  // b.none
    30f8:	b.ls	3120 <grub_efi_print_device_path+0x270>  // b.plast
    30fc:	cmp	w1, #0x4
    3100:	b.eq	3564 <grub_efi_print_device_path+0x6b4>  // b.none
    3104:	cmp	w1, #0x5
    3108:	b.ne	3578 <grub_efi_print_device_path+0x6c8>  // b.any
    310c:	adrp	x0, 0 <_start>
    3110:	ldr	w1, [x19, #4]
    3114:	ldr	x0, [x0]
    3118:	bl	c078 <grub_err_printf>
    311c:	b	2f48 <grub_efi_print_device_path+0x98>
    3120:	cmp	w1, #0x1
    3124:	b.eq	3588 <grub_efi_print_device_path+0x6d8>  // b.none
    3128:	cmp	w1, #0x2
    312c:	b.ne	3578 <grub_efi_print_device_path+0x6c8>  // b.any
    3130:	adrp	x0, 0 <_start>
    3134:	ldrb	w1, [x19, #4]
    3138:	ldr	x0, [x0]
    313c:	bl	c078 <grub_err_printf>
    3140:	b	2f48 <grub_efi_print_device_path+0x98>
    3144:	cmp	w3, #0x5
    3148:	b.eq	31cc <grub_efi_print_device_path+0x31c>  // b.none
    314c:	cmp	w3, #0x7f
    3150:	b.ne	3208 <grub_efi_print_device_path+0x358>  // b.any
    3154:	cmp	w1, #0x1
    3158:	b.eq	3370 <grub_efi_print_device_path+0x4c0>  // b.none
    315c:	cmp	w1, #0xff
    3160:	b.eq	3330 <grub_efi_print_device_path+0x480>  // b.none
    3164:	adrp	x0, 0 <_start>
    3168:	ldr	x0, [x0]
    316c:	bl	c078 <grub_err_printf>
    3170:	b	2f48 <grub_efi_print_device_path+0x98>
    3174:	cmp	w1, #0x2
    3178:	b.eq	3660 <grub_efi_print_device_path+0x7b0>  // b.none
    317c:	cmp	w1, #0x3
    3180:	b.ne	31e4 <grub_efi_print_device_path+0x334>  // b.any
    3184:	adrp	x0, 0 <_start>
    3188:	ldp	x1, x2, [x19, #8]
    318c:	ldr	x0, [x0]
    3190:	bl	c078 <grub_err_printf>
    3194:	b	2f48 <grub_efi_print_device_path+0x98>
    3198:	cmp	w1, #0xb
    319c:	b.ne	369c <grub_efi_print_device_path+0x7ec>  // b.any
    31a0:	adrp	x0, 0 <_start>
    31a4:	ldrb	w7, [x19, #36]
    31a8:	ldrb	w6, [x19, #9]
    31ac:	ldrb	w5, [x19, #8]
    31b0:	ldrb	w4, [x19, #7]
    31b4:	ldrb	w3, [x19, #6]
    31b8:	ldrb	w2, [x19, #5]
    31bc:	ldrb	w1, [x19, #4]
    31c0:	ldr	x0, [x0]
    31c4:	bl	c078 <grub_err_printf>
    31c8:	b	2f48 <grub_efi_print_device_path+0x98>
    31cc:	cmp	w1, #0x1
    31d0:	b.eq	3340 <grub_efi_print_device_path+0x490>  // b.none
    31d4:	adrp	x0, 0 <_start>
    31d8:	ldr	x0, [x0]
    31dc:	bl	c078 <grub_err_printf>
    31e0:	b	2f48 <grub_efi_print_device_path+0x98>
    31e4:	cmp	w1, #0x1
    31e8:	b.ne	369c <grub_efi_print_device_path+0x7ec>  // b.any
    31ec:	adrp	x0, 0 <_start>
    31f0:	ldrh	w3, [x19, #6]
    31f4:	ldrb	w2, [x19, #5]
    31f8:	ldrb	w1, [x19, #4]
    31fc:	ldr	x0, [x0]
    3200:	bl	c078 <grub_err_printf>
    3204:	b	2f48 <grub_efi_print_device_path+0x98>
    3208:	adrp	x0, 0 <_start>
    320c:	mov	w2, w1
    3210:	ldp	x29, x30, [sp, #112]
    3214:	mov	w1, w3
    3218:	ldp	x19, x20, [sp, #128]
    321c:	ldp	x21, x22, [sp, #144]
    3220:	ldp	x23, x24, [sp, #160]
    3224:	add	sp, sp, #0xc0
    3228:	ldr	x0, [x0]
    322c:	b	c078 <grub_err_printf>
    3230:	cmp	w1, #0x1
    3234:	b.eq	335c <grub_efi_print_device_path+0x4ac>  // b.none
    3238:	cmp	w1, #0x2
    323c:	b.eq	3298 <grub_efi_print_device_path+0x3e8>  // b.none
    3240:	adrp	x0, 0 <_start>
    3244:	ldr	x0, [x0]
    3248:	bl	c078 <grub_err_printf>
    324c:	b	2f48 <grub_efi_print_device_path+0x98>
    3250:	cmp	w1, #0x5
    3254:	b.ne	369c <grub_efi_print_device_path+0x7ec>  // b.any
    3258:	adrp	x0, 0 <_start>
    325c:	ldrb	w2, [x19, #5]
    3260:	ldrb	w1, [x19, #4]
    3264:	ldr	x0, [x0]
    3268:	bl	c078 <grub_err_printf>
    326c:	b	2f48 <grub_efi_print_device_path+0x98>
    3270:	cmp	w1, #0x1
    3274:	b.eq	3404 <grub_efi_print_device_path+0x554>  // b.none
    3278:	cmp	w1, #0x2
    327c:	b.ne	353c <grub_efi_print_device_path+0x68c>  // b.any
    3280:	adrp	x0, 0 <_start>
    3284:	ldr	w1, [x19, #4]
    3288:	ldp	x2, x3, [x19, #8]
    328c:	ldr	x0, [x0]
    3290:	bl	c078 <grub_err_printf>
    3294:	b	2f48 <grub_efi_print_device_path+0x98>
    3298:	adrp	x0, 0 <_start>
    329c:	stp	x25, x26, [sp, #176]
    32a0:	add	x24, x19, #0x10
    32a4:	ldr	x0, [x0]
    32a8:	bl	c078 <grub_err_printf>
    32ac:	ldrb	w0, [x19, #16]
    32b0:	cbz	w0, 3380 <grub_efi_print_device_path+0x4d0>
    32b4:	adrp	x0, 0 <_start>
    32b8:	mov	x1, x24
    32bc:	ldr	x0, [x0]
    32c0:	bl	c078 <grub_err_printf>
    32c4:	mov	x0, x24
    32c8:	bl	ce30 <grub_strlen>
    32cc:	add	x0, x24, x0
    32d0:	ldrb	w0, [x0, #1]
    32d4:	cbnz	w0, 33a4 <grub_efi_print_device_path+0x4f4>
    32d8:	adrp	x0, 0 <_start>
    32dc:	ldr	w1, [x19, #8]
    32e0:	ldr	x0, [x0]
    32e4:	bl	c078 <grub_err_printf>
    32e8:	mov	x0, x24
    32ec:	bl	ce30 <grub_strlen>
    32f0:	mov	x25, x0
    32f4:	mov	x0, x24
    32f8:	add	x25, x24, x25
    32fc:	bl	ce30 <grub_strlen>
    3300:	add	x0, x0, #0x1
    3304:	add	x0, x24, x0
    3308:	bl	ce30 <grub_strlen>
    330c:	add	x25, x25, x0
    3310:	ldrb	w0, [x25, #2]
    3314:	cbnz	w0, 33c4 <grub_efi_print_device_path+0x514>
    3318:	adrp	x0, 0 <_start>
    331c:	ldr	w1, [x19, #12]
    3320:	ldr	x0, [x0]
    3324:	bl	c078 <grub_err_printf>
    3328:	ldp	x25, x26, [sp, #176]
    332c:	b	2f48 <grub_efi_print_device_path+0x98>
    3330:	adrp	x0, 0 <_start>
    3334:	ldr	x0, [x0]
    3338:	bl	c078 <grub_err_printf>
    333c:	b	2f48 <grub_efi_print_device_path+0x98>
    3340:	adrp	x0, 0 <_start>
    3344:	ldrh	w2, [x19, #6]
    3348:	ldrh	w1, [x19, #4]
    334c:	add	x3, x19, #0x4
    3350:	ldr	x0, [x0]
    3354:	bl	c078 <grub_err_printf>
    3358:	b	2f48 <grub_efi_print_device_path+0x98>
    335c:	adrp	x0, 0 <_start>
    3360:	ldp	w1, w2, [x19, #4]
    3364:	ldr	x0, [x0]
    3368:	bl	c078 <grub_err_printf>
    336c:	b	2f48 <grub_efi_print_device_path+0x98>
    3370:	adrp	x0, 0 <_start>
    3374:	ldr	x0, [x0]
    3378:	bl	c078 <grub_err_printf>
    337c:	b	2f48 <grub_efi_print_device_path+0x98>
    3380:	adrp	x0, 0 <_start>
    3384:	ldr	w1, [x19, #4]
    3388:	ldr	x0, [x0]
    338c:	bl	c078 <grub_err_printf>
    3390:	mov	x0, x24
    3394:	bl	ce30 <grub_strlen>
    3398:	add	x0, x24, x0
    339c:	ldrb	w0, [x0, #1]
    33a0:	cbz	w0, 32d8 <grub_efi_print_device_path+0x428>
    33a4:	mov	x0, x24
    33a8:	bl	ce30 <grub_strlen>
    33ac:	adrp	x2, 0 <_start>
    33b0:	add	x1, x0, #0x1
    33b4:	add	x1, x24, x1
    33b8:	ldr	x0, [x2]
    33bc:	bl	c078 <grub_err_printf>
    33c0:	b	32e8 <grub_efi_print_device_path+0x438>
    33c4:	mov	x0, x24
    33c8:	bl	ce30 <grub_strlen>
    33cc:	mov	x25, x0
    33d0:	mov	x0, x24
    33d4:	bl	ce30 <grub_strlen>
    33d8:	add	x0, x0, #0x1
    33dc:	add	x0, x24, x0
    33e0:	bl	ce30 <grub_strlen>
    33e4:	adrp	x2, 0 <_start>
    33e8:	add	x1, x25, x0
    33ec:	add	x1, x1, #0x2
    33f0:	ldr	x0, [x2]
    33f4:	add	x1, x24, x1
    33f8:	bl	c078 <grub_err_printf>
    33fc:	ldp	x25, x26, [sp, #176]
    3400:	b	2f48 <grub_efi_print_device_path+0x98>
    3404:	adrp	x0, 0 <_start>
    3408:	ldrb	w7, [x19, #27]
    340c:	ldp	x2, x3, [x19, #8]
    3410:	ldrb	w6, [x19, #26]
    3414:	ldrb	w5, [x19, #25]
    3418:	ldrb	w4, [x19, #24]
    341c:	ldrb	w8, [x19, #41]
    3420:	ldrb	w9, [x19, #40]
    3424:	ldrb	w10, [x19, #31]
    3428:	ldrb	w11, [x19, #30]
    342c:	ldrb	w12, [x19, #29]
    3430:	ldrb	w13, [x19, #28]
    3434:	ldr	w1, [x19, #4]
    3438:	ldr	x0, [x0]
    343c:	str	w13, [sp]
    3440:	str	w12, [sp, #8]
    3444:	str	w11, [sp, #16]
    3448:	str	w10, [sp, #24]
    344c:	str	w9, [sp, #32]
    3450:	str	w8, [sp, #40]
    3454:	bl	c078 <grub_err_printf>
    3458:	b	2f48 <grub_efi_print_device_path+0x98>
    345c:	sub	w24, w20, #0x4
    3460:	stp	x25, x26, [sp, #176]
    3464:	lsl	w0, w24, #1
    3468:	add	w0, w0, #0x1
    346c:	sxtw	x0, w0
    3470:	bl	6210 <grub_malloc>
    3474:	mov	x25, x0
    3478:	cbz	x0, 35ec <grub_efi_print_device_path+0x73c>
    347c:	sxtw	x24, w24
    3480:	mov	x0, x24
    3484:	bl	6210 <grub_malloc>
    3488:	mov	x26, x0
    348c:	cbz	x0, 3754 <grub_efi_print_device_path+0x8a4>
    3490:	mov	x2, x24
    3494:	add	x1, x19, #0x4
    3498:	lsr	x24, x24, #1
    349c:	bl	bf40 <grub_memmove>
    34a0:	sub	x5, x24, #0x1
    34a4:	mov	x1, x25
    34a8:	cbz	x24, 3738 <grub_efi_print_device_path+0x888>
    34ac:	mov	w6, #0x0                   	// #0
    34b0:	mov	w7, #0x3f                  	// #63
    34b4:	mov	w8, #0x2400                	// #9216
    34b8:	b	351c <grub_efi_print_device_path+0x66c>
    34bc:	add	w4, w2, w21
    34c0:	cmp	w4, #0x3ff
    34c4:	b.hi	35b0 <grub_efi_print_device_path+0x700>  // b.pmore
    34c8:	add	w4, w6, w22
    34cc:	mov	x0, x3
    34d0:	add	x1, x1, #0x4
    34d4:	mov	w6, #0x0                   	// #0
    34d8:	add	w2, w2, w4, lsl #10
    34dc:	add	w2, w2, w8
    34e0:	and	w3, w2, #0x3f
    34e4:	lsr	w9, w2, #18
    34e8:	ubfx	x4, x2, #12, #6
    34ec:	ubfx	x2, x2, #6, #6
    34f0:	orr	w9, w9, #0xfffffff0
    34f4:	orr	w4, w4, #0xffffff80
    34f8:	orr	w2, w2, #0xffffff80
    34fc:	orr	w3, w3, #0xffffff80
    3500:	sturb	w9, [x1, #-4]
    3504:	sturb	w4, [x1, #-3]
    3508:	sturb	w2, [x1, #-2]
    350c:	sturb	w3, [x1, #-1]
    3510:	sub	x5, x5, #0x1
    3514:	cmn	x5, #0x1
    3518:	b.eq	3738 <grub_efi_print_device_path+0x888>  // b.none
    351c:	mov	x3, x0
    3520:	ldrh	w2, [x3], #2
    3524:	cbnz	w6, 34bc <grub_efi_print_device_path+0x60c>
    3528:	cmp	w2, #0x7f
    352c:	b.hi	35bc <grub_efi_print_device_path+0x70c>  // b.pmore
    3530:	mov	x0, x3
    3534:	strb	w2, [x1], #1
    3538:	b	3510 <grub_efi_print_device_path+0x660>
    353c:	adrp	x0, 0 <_start>
    3540:	ldr	x0, [x0]
    3544:	bl	c078 <grub_err_printf>
    3548:	b	2f48 <grub_efi_print_device_path+0x98>
    354c:	adrp	x0, 0 <_start>
    3550:	ldr	w1, [x19, #4]
    3554:	ldp	x2, x3, [x19, #8]
    3558:	ldr	x0, [x0]
    355c:	bl	c078 <grub_err_printf>
    3560:	b	2f48 <grub_efi_print_device_path+0x98>
    3564:	adrp	x0, 0 <_start>
    3568:	mov	x1, x19
    356c:	ldr	x0, [x0]
    3570:	bl	1e70 <grub_efidisk_get_device_name+0x3e8>
    3574:	b	2f48 <grub_efi_print_device_path+0x98>
    3578:	adrp	x0, 0 <_start>
    357c:	ldr	x0, [x0]
    3580:	bl	c078 <grub_err_printf>
    3584:	b	2f48 <grub_efi_print_device_path+0x98>
    3588:	adrp	x0, 0 <_start>
    358c:	ldrb	w2, [x19, #5]
    3590:	ldrb	w1, [x19, #4]
    3594:	ldr	x0, [x0]
    3598:	bl	c078 <grub_err_printf>
    359c:	b	2f48 <grub_efi_print_device_path+0x98>
    35a0:	ldr	x0, [x23]
    35a4:	mov	x1, x19
    35a8:	bl	1e70 <grub_efidisk_get_device_name+0x3e8>
    35ac:	b	2f48 <grub_efi_print_device_path+0x98>
    35b0:	mov	w6, #0x0                   	// #0
    35b4:	strb	w7, [x1], #1
    35b8:	b	3510 <grub_efi_print_device_path+0x660>
    35bc:	cmp	w2, #0x7ff
    35c0:	b.hi	3714 <grub_efi_print_device_path+0x864>  // b.pmore
    35c4:	mov	x4, x1
    35c8:	lsr	w9, w2, #6
    35cc:	orr	w9, w9, #0xffffffc0
    35d0:	and	w2, w2, #0x3f
    35d4:	orr	w2, w2, #0xffffff80
    35d8:	mov	x0, x3
    35dc:	strb	w9, [x4], #2
    35e0:	strb	w2, [x1, #1]
    35e4:	mov	x1, x4
    35e8:	b	3510 <grub_efi_print_device_path+0x660>
    35ec:	adrp	x0, 0 <_start>
    35f0:	ldr	x0, [x0]
    35f4:	str	wzr, [x0]
    35f8:	adrp	x0, 0 <_start>
    35fc:	mov	x1, x25
    3600:	ldr	x0, [x0]
    3604:	bl	c078 <grub_err_printf>
    3608:	mov	x0, x25
    360c:	bl	6260 <grub_free>
    3610:	ldp	x25, x26, [sp, #176]
    3614:	b	2f48 <grub_efi_print_device_path+0x98>
    3618:	adrp	x0, 0 <_start>
    361c:	ldrb	w4, [x19, #18]
    3620:	ldrb	w3, [x19, #17]
    3624:	ldrb	w2, [x19, #16]
    3628:	ldr	x0, [x0]
    362c:	ldr	x1, [x19, #8]
    3630:	bl	c078 <grub_err_printf>
    3634:	b	2f48 <grub_efi_print_device_path+0x98>
    3638:	adrp	x0, 0 <_start>
    363c:	ldr	w1, [x19, #4]
    3640:	ldr	x0, [x0]
    3644:	bl	c078 <grub_err_printf>
    3648:	b	2f48 <grub_efi_print_device_path+0x98>
    364c:	adrp	x0, 0 <_start>
    3650:	ldr	x1, [x19, #8]
    3654:	ldr	x0, [x0]
    3658:	bl	c078 <grub_err_printf>
    365c:	b	2f48 <grub_efi_print_device_path+0x98>
    3660:	adrp	x0, 0 <_start>
    3664:	ldrh	w2, [x19, #6]
    3668:	ldrh	w1, [x19, #4]
    366c:	ldr	x0, [x0]
    3670:	bl	c078 <grub_err_printf>
    3674:	b	2f48 <grub_efi_print_device_path+0x98>
    3678:	adrp	x0, 0 <_start>
    367c:	ldrb	w5, [x19, #10]
    3680:	ldrb	w4, [x19, #9]
    3684:	ldrb	w3, [x19, #8]
    3688:	ldrh	w2, [x19, #6]
    368c:	ldrh	w1, [x19, #4]
    3690:	ldr	x0, [x0]
    3694:	bl	c078 <grub_err_printf>
    3698:	b	2f48 <grub_efi_print_device_path+0x98>
    369c:	adrp	x0, 0 <_start>
    36a0:	ldr	x0, [x0]
    36a4:	bl	c078 <grub_err_printf>
    36a8:	b	2f48 <grub_efi_print_device_path+0x98>
    36ac:	adrp	x0, 0 <_start>
    36b0:	ldrb	w7, [x19, #10]
    36b4:	ldrb	w6, [x19, #9]
    36b8:	ldrb	w5, [x19, #8]
    36bc:	ldrb	w4, [x19, #7]
    36c0:	ldrb	w3, [x19, #6]
    36c4:	ldrb	w2, [x19, #5]
    36c8:	ldrb	w1, [x19, #4]
    36cc:	ldrb	w8, [x19, #18]
    36d0:	ldrh	w9, [x19, #16]
    36d4:	ldrh	w10, [x19, #14]
    36d8:	ldrh	w11, [x19, #12]
    36dc:	ldrb	w12, [x19, #11]
    36e0:	ldr	x0, [x0]
    36e4:	str	w12, [sp]
    36e8:	str	w11, [sp, #8]
    36ec:	str	w10, [sp, #16]
    36f0:	str	w9, [sp, #24]
    36f4:	str	w8, [sp, #32]
    36f8:	bl	c078 <grub_err_printf>
    36fc:	b	2f48 <grub_efi_print_device_path+0x98>
    3700:	adrp	x0, 0 <_start>
    3704:	mov	x1, x19
    3708:	ldr	x0, [x0]
    370c:	bl	1e70 <grub_efidisk_get_device_name+0x3e8>
    3710:	b	2f48 <grub_efi_print_device_path+0x98>
    3714:	add	w0, w2, w22
    3718:	cmp	w0, #0x3ff
    371c:	b.ls	3748 <grub_efi_print_device_path+0x898>  // b.plast
    3720:	add	w0, w2, w21
    3724:	cmp	w0, #0x3ff
    3728:	b.hi	377c <grub_efi_print_device_path+0x8cc>  // b.pmore
    372c:	mov	x0, x3
    3730:	strb	w7, [x1], #1
    3734:	b	3510 <grub_efi_print_device_path+0x660>
    3738:	strb	wzr, [x1]
    373c:	mov	x0, x26
    3740:	bl	6260 <grub_free>
    3744:	b	35f8 <grub_efi_print_device_path+0x748>
    3748:	mov	w6, w2
    374c:	mov	x0, x3
    3750:	b	3510 <grub_efi_print_device_path+0x660>
    3754:	adrp	x1, 0 <_start>
    3758:	adrp	x0, 0 <_start>
    375c:	ldr	x1, [x1]
    3760:	ldr	x0, [x0]
    3764:	str	wzr, [x1]
    3768:	bl	c078 <grub_err_printf>
    376c:	mov	x0, x25
    3770:	bl	6260 <grub_free>
    3774:	ldp	x25, x26, [sp, #176]
    3778:	b	2f48 <grub_efi_print_device_path+0x98>
    377c:	lsr	w9, w2, #12
    3780:	ubfx	x4, x2, #6, #6
    3784:	and	w2, w2, #0x3f
    3788:	mov	x0, x3
    378c:	orr	w9, w9, #0xffffffe0
    3790:	orr	w3, w4, #0xffffff80
    3794:	orr	w2, w2, #0xffffff80
    3798:	add	x1, x1, #0x3
    379c:	sturb	w9, [x1, #-3]
    37a0:	sturb	w3, [x1, #-2]
    37a4:	sturb	w2, [x1, #-1]
    37a8:	b	3510 <grub_efi_print_device_path+0x660>
    37ac:	nop
	...

0000000000003900 <grub_efi_compare_device_paths>:
    3900:	cmp	x0, #0x0
    3904:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    3908:	b.eq	39c4 <grub_efi_compare_device_paths+0xc4>  // b.none
    390c:	stp	x29, x30, [sp, #-48]!
    3910:	mov	x29, sp
    3914:	stp	x19, x20, [sp, #16]
    3918:	mov	x19, x0
    391c:	mov	x20, x1
    3920:	ldrb	w0, [x0]
    3924:	ldrb	w2, [x1]
    3928:	and	w0, w0, #0x7f
    392c:	and	w2, w2, #0x7f
    3930:	cmp	w0, w2
    3934:	b.ne	39d0 <grub_efi_compare_device_paths+0xd0>  // b.any
    3938:	str	x21, [sp, #32]
    393c:	b	395c <grub_efi_compare_device_paths+0x5c>
    3940:	add	x19, x19, x21
    3944:	ldrb	w2, [x20]
    3948:	and	w2, w2, #0x7f
    394c:	ldrb	w0, [x19]
    3950:	and	w0, w0, #0x7f
    3954:	cmp	w0, w2
    3958:	b.ne	39cc <grub_efi_compare_device_paths+0xcc>  // b.any
    395c:	ldrb	w3, [x19, #1]
    3960:	mov	x1, x20
    3964:	ldrb	w2, [x20, #1]
    3968:	mov	x0, x19
    396c:	cmp	w3, w2
    3970:	b.ne	39e0 <grub_efi_compare_device_paths+0xe0>  // b.any
    3974:	ldrh	w3, [x19, #2]
    3978:	ldrh	w4, [x20, #2]
    397c:	and	x21, x3, #0xffff
    3980:	add	x20, x20, x21
    3984:	mov	x2, x21
    3988:	cmp	w3, w4
    398c:	b.ne	39f4 <grub_efi_compare_device_paths+0xf4>  // b.any
    3990:	bl	c450 <grub_memcmp>
    3994:	cbnz	w0, 39b4 <grub_efi_compare_device_paths+0xb4>
    3998:	ldrb	w1, [x19]
    399c:	and	w1, w1, #0x7f
    39a0:	cmp	w1, #0x7f
    39a4:	b.ne	3940 <grub_efi_compare_device_paths+0x40>  // b.any
    39a8:	ldrb	w1, [x19, #1]
    39ac:	cmp	w1, #0xff
    39b0:	b.ne	3940 <grub_efi_compare_device_paths+0x40>  // b.any
    39b4:	ldp	x19, x20, [sp, #16]
    39b8:	ldr	x21, [sp, #32]
    39bc:	ldp	x29, x30, [sp], #48
    39c0:	ret
    39c4:	mov	w0, #0x1                   	// #1
    39c8:	ret
    39cc:	ldr	x21, [sp, #32]
    39d0:	sub	w0, w2, w0
    39d4:	ldp	x19, x20, [sp, #16]
    39d8:	ldp	x29, x30, [sp], #48
    39dc:	ret
    39e0:	sub	w0, w3, w2
    39e4:	ldp	x19, x20, [sp, #16]
    39e8:	ldr	x21, [sp, #32]
    39ec:	ldp	x29, x30, [sp], #48
    39f0:	ret
    39f4:	sub	w0, w3, w4
    39f8:	ldp	x19, x20, [sp, #16]
    39fc:	ldr	x21, [sp, #32]
    3a00:	ldp	x29, x30, [sp], #48
    3a04:	ret

0000000000003a08 <grub_efi_init>:
    3a08:	stp	x29, x30, [sp, #-16]!
    3a0c:	mov	x29, sp
    3a10:	bl	2870 <grub_efi_modules_addr>
    3a14:	adrp	x1, 0 <_start>
    3a18:	ldr	x1, [x1]
    3a1c:	str	x0, [x1]
    3a20:	bl	5458 <grub_console_init>
    3a24:	bl	4730 <grub_efi_mm_init>
    3a28:	adrp	x0, 0 <_start>
    3a2c:	mov	x3, #0x0                   	// #0
    3a30:	mov	x2, #0x0                   	// #0
    3a34:	mov	x1, #0x0                   	// #0
    3a38:	ldr	x4, [x0]
    3a3c:	mov	x0, #0x0                   	// #0
    3a40:	ldr	x4, [x4]
    3a44:	ldr	x4, [x4, #96]
    3a48:	ldr	x4, [x4, #256]
    3a4c:	blr	x4
    3a50:	ldp	x29, x30, [sp], #16
    3a54:	b	1590 <grub_efidisk_init>
	...

0000000000003a68 <grub_machine_get_bootlocation>:
    3a68:	stp	x29, x30, [sp, #-48]!
    3a6c:	adrp	x2, 0 <_start>
    3a70:	mov	x29, sp
    3a74:	ldr	x3, [x2]
    3a78:	str	x21, [sp, #32]
    3a7c:	mov	x21, x0
    3a80:	stp	x19, x20, [sp, #16]
    3a84:	mov	x20, x1
    3a88:	ldr	x0, [x3]
    3a8c:	bl	21d8 <grub_efi_get_loaded_image>
    3a90:	cbz	x0, 3ac8 <grub_machine_get_bootlocation+0x60>
    3a94:	mov	x19, x0
    3a98:	ldr	x0, [x0, #24]
    3a9c:	bl	1a88 <grub_efidisk_get_device_name>
    3aa0:	str	x0, [x21]
    3aa4:	cbz	x0, 3ad8 <grub_machine_get_bootlocation+0x70>
    3aa8:	ldr	x0, [x19, #32]
    3aac:	bl	29a8 <grub_efi_get_filename>
    3ab0:	str	x0, [x20]
    3ab4:	cbz	x0, 3ac8 <grub_machine_get_bootlocation+0x60>
    3ab8:	mov	w1, #0x2f                  	// #47
    3abc:	bl	c548 <grub_strrchr>
    3ac0:	cbz	x0, 3ac8 <grub_machine_get_bootlocation+0x60>
    3ac4:	strb	wzr, [x0]
    3ac8:	ldp	x19, x20, [sp, #16]
    3acc:	ldr	x21, [sp, #32]
    3ad0:	ldp	x29, x30, [sp], #48
    3ad4:	ret
    3ad8:	adrp	x0, 0 <_start>
    3adc:	ldr	x0, [x0]
    3ae0:	ldr	x3, [x0]
    3ae4:	cbz	x3, 3aa8 <grub_machine_get_bootlocation+0x40>
    3ae8:	mov	x2, x20
    3aec:	mov	x1, x21
    3af0:	ldr	x0, [x19, #24]
    3af4:	mov	x16, x3
    3af8:	ldp	x19, x20, [sp, #16]
    3afc:	ldr	x21, [sp, #32]
    3b00:	ldp	x29, x30, [sp], #48
    3b04:	br	x16
	...

0000000000003b18 <grub_efi_fini>:
    3b18:	stp	x29, x30, [sp, #-16]!
    3b1c:	mov	x29, sp
    3b20:	bl	980 <grub_efidisk_fini>
    3b24:	bl	5570 <grub_console_fini>
    3b28:	ldp	x29, x30, [sp], #16
    3b2c:	b	4660 <grub_efi_memory_fini>
    3b30:	stp	x29, x30, [sp, #-32]!
    3b34:	adrp	x2, 0 <_start>
    3b38:	mov	x29, sp
    3b3c:	str	x19, [sp, #16]
    3b40:	ldr	x19, [x2]
    3b44:	ldr	w2, [x19]
    3b48:	cbnz	w2, 3bb0 <grub_efi_fini+0x98>
    3b4c:	mov	x1, x0
    3b50:	adrp	x0, 0 <_start>
    3b54:	add	x2, x19, #0x28
    3b58:	add	x4, x19, #0x18
    3b5c:	ldr	x5, [x0]
    3b60:	add	x3, x19, #0x20
    3b64:	add	x0, x19, #0x8
    3b68:	ldr	x5, [x5]
    3b6c:	ldr	x5, [x5, #96]
    3b70:	ldr	x5, [x5, #56]
    3b74:	blr	x5
    3b78:	mov	x1, x0
    3b7c:	ldr	x2, [x19, #32]
    3b80:	cbnz	x2, 3b8c <grub_efi_fini+0x74>
    3b84:	mov	x0, #0x28                  	// #40
    3b88:	str	x0, [x19, #32]
    3b8c:	mov	w0, #0x1                   	// #1
    3b90:	cbz	x1, 3ba4 <grub_efi_fini+0x8c>
    3b94:	mov	x0, #0x5                   	// #5
    3b98:	movk	x0, #0x8000, lsl #48
    3b9c:	cmp	x1, x0
    3ba0:	csetm	w0, ne  // ne = any
    3ba4:	ldr	x19, [sp, #16]
    3ba8:	ldp	x29, x30, [sp], #32
    3bac:	ret
    3bb0:	ldp	x2, x1, [x19, #8]
    3bb4:	bl	bf40 <grub_memmove>
    3bb8:	mov	w0, #0x1                   	// #1
    3bbc:	ldr	x19, [sp, #16]
    3bc0:	ldp	x29, x30, [sp], #32
    3bc4:	ret
	...

0000000000003bd8 <grub_efi_allocate_pages_real>:
    3bd8:	stp	x29, x30, [sp, #-112]!
    3bdc:	mov	x29, sp
    3be0:	stp	x23, x24, [sp, #48]
    3be4:	mov	x23, #0xffffffffffff        	// #281474976710655
    3be8:	cmp	x0, x23
    3bec:	str	x0, [sp, #88]
    3bf0:	b.hi	3d3c <grub_efi_allocate_pages_real+0x164>  // b.pmore
    3bf4:	adrp	x0, 0 <_start>
    3bf8:	stp	x21, x22, [sp, #32]
    3bfc:	mov	w21, w3
    3c00:	ldr	x22, [x0]
    3c04:	stp	x19, x20, [sp, #16]
    3c08:	mov	w20, w2
    3c0c:	mov	x19, x1
    3c10:	mov	x2, x1
    3c14:	ldr	x4, [x22]
    3c18:	str	x25, [sp, #64]
    3c1c:	add	x3, sp, #0x58
    3c20:	mov	w1, w21
    3c24:	mov	w0, w20
    3c28:	ldr	x25, [x4, #96]
    3c2c:	ldr	x4, [x25, #40]
    3c30:	blr	x4
    3c34:	cbnz	x0, 3d30 <grub_efi_allocate_pages_real+0x158>
    3c38:	ldr	x24, [sp, #88]
    3c3c:	cbnz	x24, 3cc4 <grub_efi_allocate_pages_real+0xec>
    3c40:	ldr	x4, [x25, #40]
    3c44:	str	x23, [sp, #88]
    3c48:	add	x3, sp, #0x58
    3c4c:	mov	w1, w21
    3c50:	mov	w0, w20
    3c54:	mov	x2, x19
    3c58:	blr	x4
    3c5c:	mov	x20, x0
    3c60:	ldr	x2, [x22]
    3c64:	mov	x1, x19
    3c68:	mov	x0, #0x0                   	// #0
    3c6c:	ldr	x2, [x2, #96]
    3c70:	ldr	x2, [x2, #48]
    3c74:	blr	x2
    3c78:	adrp	x0, 0 <_start>
    3c7c:	ldr	x3, [x0]
    3c80:	ldr	x0, [x3, #48]
    3c84:	cbz	x0, 3cbc <grub_efi_allocate_pages_real+0xe4>
    3c88:	mov	x2, #0x0                   	// #0
    3c8c:	ldr	x1, [x0]
    3c90:	cbnz	x1, 3d1c <grub_efi_allocate_pages_real+0x144>
    3c94:	ldr	x1, [x0, #8]
    3c98:	cmp	x19, x1
    3c9c:	b.ne	3d1c <grub_efi_allocate_pages_real+0x144>  // b.any
    3ca0:	ldr	x1, [x22]
    3ca4:	ldr	x4, [x0, #16]
    3ca8:	ldr	x1, [x1, #96]
    3cac:	cbz	x2, 3d5c <grub_efi_allocate_pages_real+0x184>
    3cb0:	str	x4, [x2, #16]
    3cb4:	ldr	x1, [x1, #72]
    3cb8:	blr	x1
    3cbc:	cbnz	x20, 3d30 <grub_efi_allocate_pages_real+0x158>
    3cc0:	ldr	x24, [sp, #88]
    3cc4:	add	x2, sp, #0x68
    3cc8:	ldr	x3, [x22]
    3ccc:	mov	x1, #0x18                  	// #24
    3cd0:	mov	w0, #0x2                   	// #2
    3cd4:	ldr	x3, [x3, #96]
    3cd8:	ldr	x3, [x3, #64]
    3cdc:	blr	x3
    3ce0:	cbnz	x0, 3d4c <grub_efi_allocate_pages_real+0x174>
    3ce4:	adrp	x1, 0 <_start>
    3ce8:	ldr	x0, [sp, #104]
    3cec:	ldr	x1, [x1]
    3cf0:	stp	x24, x19, [x0]
    3cf4:	ldr	x2, [x1, #48]
    3cf8:	str	x2, [x0, #16]
    3cfc:	str	x0, [x1, #48]
    3d00:	ldp	x19, x20, [sp, #16]
    3d04:	ldp	x21, x22, [sp, #32]
    3d08:	ldp	x23, x24, [sp, #48]
    3d0c:	ldr	x25, [sp, #64]
    3d10:	ldr	x0, [sp, #88]
    3d14:	ldp	x29, x30, [sp], #112
    3d18:	ret
    3d1c:	ldr	x1, [x0, #16]
    3d20:	mov	x2, x0
    3d24:	mov	x0, x1
    3d28:	cbnz	x1, 3c8c <grub_efi_allocate_pages_real+0xb4>
    3d2c:	b	3cbc <grub_efi_allocate_pages_real+0xe4>
    3d30:	ldp	x19, x20, [sp, #16]
    3d34:	ldp	x21, x22, [sp, #32]
    3d38:	ldr	x25, [sp, #64]
    3d3c:	mov	x0, #0x0                   	// #0
    3d40:	ldp	x23, x24, [sp, #48]
    3d44:	ldp	x29, x30, [sp], #112
    3d48:	ret
    3d4c:	adrp	x0, 0 <_start>
    3d50:	ldr	x0, [x0]
    3d54:	bl	c078 <grub_err_printf>
    3d58:	b	3d00 <grub_efi_allocate_pages_real+0x128>
    3d5c:	str	x4, [x3, #48]
    3d60:	b	3cb4 <grub_efi_allocate_pages_real+0xdc>
    3d64:	nop
	...

0000000000003d80 <grub_efi_allocate_any_pages>:
    3d80:	stp	x29, x30, [sp, #-80]!
    3d84:	adrp	x1, 0 <_start>
    3d88:	mov	x2, x0
    3d8c:	mov	x29, sp
    3d90:	stp	x19, x20, [sp, #16]
    3d94:	add	x3, sp, #0x40
    3d98:	mov	x19, x0
    3d9c:	ldr	x20, [x1]
    3da0:	stp	x21, x22, [sp, #32]
    3da4:	mov	x21, #0xffffffffffff        	// #281474976710655
    3da8:	str	x21, [sp, #64]
    3dac:	mov	w1, #0x2                   	// #2
    3db0:	ldr	x4, [x20]
    3db4:	mov	w0, #0x1                   	// #1
    3db8:	ldr	x22, [x4, #96]
    3dbc:	ldr	x4, [x22, #40]
    3dc0:	blr	x4
    3dc4:	cbnz	x0, 3ec4 <grub_efi_allocate_any_pages+0x144>
    3dc8:	str	x23, [sp, #48]
    3dcc:	ldr	x23, [sp, #64]
    3dd0:	cbnz	x23, 3e58 <grub_efi_allocate_any_pages+0xd8>
    3dd4:	ldr	x4, [x22, #40]
    3dd8:	str	x21, [sp, #64]
    3ddc:	add	x3, sp, #0x40
    3de0:	mov	x2, x19
    3de4:	mov	w1, #0x2                   	// #2
    3de8:	mov	w0, #0x1                   	// #1
    3dec:	blr	x4
    3df0:	mov	x21, x0
    3df4:	ldr	x2, [x20]
    3df8:	mov	x1, x19
    3dfc:	mov	x0, #0x0                   	// #0
    3e00:	ldr	x2, [x2, #96]
    3e04:	ldr	x2, [x2, #48]
    3e08:	blr	x2
    3e0c:	adrp	x0, 0 <_start>
    3e10:	ldr	x3, [x0]
    3e14:	ldr	x0, [x3, #48]
    3e18:	cbz	x0, 3e50 <grub_efi_allocate_any_pages+0xd0>
    3e1c:	mov	x2, #0x0                   	// #0
    3e20:	ldr	x1, [x0]
    3e24:	cbnz	x1, 3eac <grub_efi_allocate_any_pages+0x12c>
    3e28:	ldr	x1, [x0, #8]
    3e2c:	cmp	x19, x1
    3e30:	b.ne	3eac <grub_efi_allocate_any_pages+0x12c>  // b.any
    3e34:	ldr	x1, [x20]
    3e38:	ldr	x4, [x0, #16]
    3e3c:	ldr	x1, [x1, #96]
    3e40:	cbz	x2, 3ee8 <grub_efi_allocate_any_pages+0x168>
    3e44:	str	x4, [x2, #16]
    3e48:	ldr	x1, [x1, #72]
    3e4c:	blr	x1
    3e50:	cbnz	x21, 3ec0 <grub_efi_allocate_any_pages+0x140>
    3e54:	ldr	x23, [sp, #64]
    3e58:	add	x2, sp, #0x48
    3e5c:	ldr	x3, [x20]
    3e60:	mov	x1, #0x18                  	// #24
    3e64:	mov	w0, #0x2                   	// #2
    3e68:	ldr	x3, [x3, #96]
    3e6c:	ldr	x3, [x3, #64]
    3e70:	blr	x3
    3e74:	cbnz	x0, 3ed8 <grub_efi_allocate_any_pages+0x158>
    3e78:	adrp	x1, 0 <_start>
    3e7c:	ldr	x0, [sp, #72]
    3e80:	ldr	x1, [x1]
    3e84:	stp	x23, x19, [x0]
    3e88:	ldr	x2, [x1, #48]
    3e8c:	str	x2, [x0, #16]
    3e90:	str	x0, [x1, #48]
    3e94:	ldp	x19, x20, [sp, #16]
    3e98:	ldp	x21, x22, [sp, #32]
    3e9c:	ldr	x23, [sp, #48]
    3ea0:	ldr	x0, [sp, #64]
    3ea4:	ldp	x29, x30, [sp], #80
    3ea8:	ret
    3eac:	ldr	x1, [x0, #16]
    3eb0:	mov	x2, x0
    3eb4:	mov	x0, x1
    3eb8:	cbnz	x1, 3e20 <grub_efi_allocate_any_pages+0xa0>
    3ebc:	b	3e50 <grub_efi_allocate_any_pages+0xd0>
    3ec0:	ldr	x23, [sp, #48]
    3ec4:	mov	x0, #0x0                   	// #0
    3ec8:	ldp	x19, x20, [sp, #16]
    3ecc:	ldp	x21, x22, [sp, #32]
    3ed0:	ldp	x29, x30, [sp], #80
    3ed4:	ret
    3ed8:	adrp	x0, 0 <_start>
    3edc:	ldr	x0, [x0]
    3ee0:	bl	c078 <grub_err_printf>
    3ee4:	b	3e94 <grub_efi_allocate_any_pages+0x114>
    3ee8:	str	x4, [x3, #48]
    3eec:	b	3e48 <grub_efi_allocate_any_pages+0xc8>
	...

0000000000003f08 <grub_efi_allocate_fixed>:
    3f08:	stp	x29, x30, [sp, #-80]!
    3f0c:	mov	x29, sp
    3f10:	stp	x21, x22, [sp, #32]
    3f14:	mov	x21, #0xffffffffffff        	// #281474976710655
    3f18:	cmp	x0, x21
    3f1c:	str	x0, [sp, #64]
    3f20:	b.hi	4058 <grub_efi_allocate_fixed+0x150>  // b.pmore
    3f24:	adrp	x0, 0 <_start>
    3f28:	stp	x19, x20, [sp, #16]
    3f2c:	mov	x19, x1
    3f30:	ldr	x20, [x0]
    3f34:	mov	w1, #0x2                   	// #2
    3f38:	add	x3, sp, #0x40
    3f3c:	mov	w0, w1
    3f40:	mov	x2, x19
    3f44:	ldr	x4, [x20]
    3f48:	str	x23, [sp, #48]
    3f4c:	ldr	x23, [x4, #96]
    3f50:	ldr	x4, [x23, #40]
    3f54:	blr	x4
    3f58:	cbnz	x0, 4050 <grub_efi_allocate_fixed+0x148>
    3f5c:	ldr	x22, [sp, #64]
    3f60:	cbnz	x22, 3fe8 <grub_efi_allocate_fixed+0xe0>
    3f64:	ldr	x4, [x23, #40]
    3f68:	str	x21, [sp, #64]
    3f6c:	add	x3, sp, #0x40
    3f70:	mov	w1, #0x2                   	// #2
    3f74:	mov	x2, x19
    3f78:	mov	w0, w1
    3f7c:	blr	x4
    3f80:	mov	x21, x0
    3f84:	ldr	x2, [x20]
    3f88:	mov	x1, x19
    3f8c:	mov	x0, #0x0                   	// #0
    3f90:	ldr	x2, [x2, #96]
    3f94:	ldr	x2, [x2, #48]
    3f98:	blr	x2
    3f9c:	adrp	x0, 0 <_start>
    3fa0:	ldr	x3, [x0]
    3fa4:	ldr	x0, [x3, #48]
    3fa8:	cbz	x0, 3fe0 <grub_efi_allocate_fixed+0xd8>
    3fac:	mov	x2, #0x0                   	// #0
    3fb0:	ldr	x1, [x0]
    3fb4:	cbnz	x1, 403c <grub_efi_allocate_fixed+0x134>
    3fb8:	ldr	x1, [x0, #8]
    3fbc:	cmp	x19, x1
    3fc0:	b.ne	403c <grub_efi_allocate_fixed+0x134>  // b.any
    3fc4:	ldr	x1, [x20]
    3fc8:	ldr	x4, [x0, #16]
    3fcc:	ldr	x1, [x1, #96]
    3fd0:	cbz	x2, 4078 <grub_efi_allocate_fixed+0x170>
    3fd4:	str	x4, [x2, #16]
    3fd8:	ldr	x1, [x1, #72]
    3fdc:	blr	x1
    3fe0:	cbnz	x21, 4050 <grub_efi_allocate_fixed+0x148>
    3fe4:	ldr	x22, [sp, #64]
    3fe8:	add	x2, sp, #0x48
    3fec:	ldr	x3, [x20]
    3ff0:	mov	x1, #0x18                  	// #24
    3ff4:	mov	w0, #0x2                   	// #2
    3ff8:	ldr	x3, [x3, #96]
    3ffc:	ldr	x3, [x3, #64]
    4000:	blr	x3
    4004:	cbnz	x0, 4068 <grub_efi_allocate_fixed+0x160>
    4008:	adrp	x1, 0 <_start>
    400c:	ldr	x0, [sp, #72]
    4010:	ldr	x1, [x1]
    4014:	stp	x22, x19, [x0]
    4018:	ldr	x2, [x1, #48]
    401c:	str	x2, [x0, #16]
    4020:	str	x0, [x1, #48]
    4024:	ldp	x19, x20, [sp, #16]
    4028:	ldp	x21, x22, [sp, #32]
    402c:	ldr	x23, [sp, #48]
    4030:	ldr	x0, [sp, #64]
    4034:	ldp	x29, x30, [sp], #80
    4038:	ret
    403c:	ldr	x1, [x0, #16]
    4040:	mov	x2, x0
    4044:	mov	x0, x1
    4048:	cbnz	x1, 3fb0 <grub_efi_allocate_fixed+0xa8>
    404c:	b	3fe0 <grub_efi_allocate_fixed+0xd8>
    4050:	ldp	x19, x20, [sp, #16]
    4054:	ldr	x23, [sp, #48]
    4058:	mov	x0, #0x0                   	// #0
    405c:	ldp	x21, x22, [sp, #32]
    4060:	ldp	x29, x30, [sp], #80
    4064:	ret
    4068:	adrp	x0, 0 <_start>
    406c:	ldr	x0, [x0]
    4070:	bl	c078 <grub_err_printf>
    4074:	b	4024 <grub_efi_allocate_fixed+0x11c>
    4078:	str	x4, [x3, #48]
    407c:	b	3fd8 <grub_efi_allocate_fixed+0xd0>
	...

0000000000004098 <grub_efi_free_pages>:
    4098:	stp	x29, x30, [sp, #-48]!
    409c:	adrp	x2, 0 <_start>
    40a0:	mov	x29, sp
    40a4:	str	x21, [sp, #32]
    40a8:	ldr	x21, [x2]
    40ac:	stp	x19, x20, [sp, #16]
    40b0:	mov	x19, x0
    40b4:	mov	x20, x1
    40b8:	ldr	x2, [x21]
    40bc:	ldr	x2, [x2, #96]
    40c0:	ldr	x2, [x2, #48]
    40c4:	blr	x2
    40c8:	adrp	x0, 0 <_start>
    40cc:	ldr	x3, [x0]
    40d0:	ldr	x0, [x3, #48]
    40d4:	cbz	x0, 4130 <grub_efi_free_pages+0x98>
    40d8:	mov	x1, #0x0                   	// #0
    40dc:	ldr	x2, [x0]
    40e0:	cmp	x19, x2
    40e4:	b.ne	4120 <grub_efi_free_pages+0x88>  // b.any
    40e8:	ldr	x2, [x0, #8]
    40ec:	cmp	x20, x2
    40f0:	b.ne	4120 <grub_efi_free_pages+0x88>  // b.any
    40f4:	ldr	x2, [x21]
    40f8:	ldr	x4, [x0, #16]
    40fc:	ldr	x2, [x2, #96]
    4100:	cbz	x1, 4140 <grub_efi_free_pages+0xa8>
    4104:	str	x4, [x1, #16]
    4108:	ldp	x19, x20, [sp, #16]
    410c:	ldr	x21, [sp, #32]
    4110:	ldp	x29, x30, [sp], #48
    4114:	ldr	x1, [x2, #72]
    4118:	mov	x16, x1
    411c:	br	x16
    4120:	ldr	x2, [x0, #16]
    4124:	mov	x1, x0
    4128:	mov	x0, x2
    412c:	cbnz	x2, 40dc <grub_efi_free_pages+0x44>
    4130:	ldp	x19, x20, [sp, #16]
    4134:	ldr	x21, [sp, #32]
    4138:	ldp	x29, x30, [sp], #48
    413c:	ret
    4140:	str	x4, [x3, #48]
    4144:	ldp	x19, x20, [sp, #16]
    4148:	ldr	x21, [sp, #32]
    414c:	ldp	x29, x30, [sp], #48
    4150:	ldr	x1, [x2, #72]
    4154:	mov	x16, x1
    4158:	br	x16
    415c:	nop
	...

0000000000004170 <grub_efi_finish_boot_services>:
    4170:	stp	x29, x30, [sp, #-96]!
    4174:	mov	x29, sp
    4178:	stp	x19, x20, [sp, #16]
    417c:	mov	x20, x0
    4180:	stp	x21, x22, [sp, #32]
    4184:	stp	x23, x24, [sp, #48]
    4188:	stp	x25, x26, [sp, #64]
    418c:	mov	x26, x2
    4190:	stp	x27, x28, [sp, #80]
    4194:	mov	x27, x3
    4198:	mov	x28, x4
    419c:	cbz	x1, 425c <grub_efi_finish_boot_services+0xec>
    41a0:	adrp	x0, 0 <_start>
    41a4:	mov	x23, #0x2                   	// #2
    41a8:	mov	x25, x1
    41ac:	adrp	x22, 0 <_start>
    41b0:	ldr	x19, [x0]
    41b4:	adrp	x21, 0 <_start>
    41b8:	movk	x23, #0x8000, lsl #48
    41bc:	adrp	x24, 0 <_start>
    41c0:	b	4228 <grub_efi_finish_boot_services+0xb8>
    41c4:	ldr	x1, [x20]
    41c8:	ldr	x0, [x19, #8]
    41cc:	cmp	x1, x0
    41d0:	b.cc	4344 <grub_efi_finish_boot_services+0x1d4>  // b.lo, b.ul, b.last
    41d4:	bl	6210 <grub_malloc>
    41d8:	str	x0, [x19, #16]
    41dc:	cbz	x0, 42e4 <grub_efi_finish_boot_services+0x174>
    41e0:	bl	3b30 <grub_efi_fini+0x18>
    41e4:	cmp	w0, #0x0
    41e8:	b.le	430c <grub_efi_finish_boot_services+0x19c>
    41ec:	ldr	x1, [x21]
    41f0:	ldr	x0, [x22]
    41f4:	ldr	x1, [x1]
    41f8:	ldr	x0, [x0]
    41fc:	ldr	x2, [x1, #96]
    4200:	ldr	x1, [x19, #40]
    4204:	ldr	x2, [x2, #232]
    4208:	blr	x2
    420c:	cbz	x0, 436c <grub_efi_finish_boot_services+0x1fc>
    4210:	cmp	x0, x23
    4214:	ldr	x0, [x19, #16]
    4218:	b.ne	4318 <grub_efi_finish_boot_services+0x1a8>  // b.any
    421c:	bl	6260 <grub_free>
    4220:	ldr	x0, [x24]
    4224:	bl	c078 <grub_err_printf>
    4228:	ldr	x0, [x19, #16]
    422c:	bl	3b30 <grub_efi_fini+0x18>
    4230:	tbz	w0, #31, 41c4 <grub_efi_finish_boot_services+0x54>
    4234:	adrp	x1, 0 <_start>
    4238:	mov	w0, #0x1d                  	// #29
    423c:	ldp	x19, x20, [sp, #16]
    4240:	ldp	x21, x22, [sp, #32]
    4244:	ldp	x23, x24, [sp, #48]
    4248:	ldp	x25, x26, [sp, #64]
    424c:	ldp	x27, x28, [sp, #80]
    4250:	ldp	x29, x30, [sp], #96
    4254:	ldr	x1, [x1]
    4258:	b	9bc8 <grub_error>
    425c:	adrp	x0, 0 <_start>
    4260:	mov	x23, #0x2                   	// #2
    4264:	adrp	x22, 0 <_start>
    4268:	adrp	x21, 0 <_start>
    426c:	ldr	x19, [x0]
    4270:	movk	x23, #0x8000, lsl #48
    4274:	adrp	x24, 0 <_start>
    4278:	b	42d4 <grub_efi_finish_boot_services+0x164>
    427c:	ldr	x0, [x19, #8]
    4280:	bl	6210 <grub_malloc>
    4284:	str	x0, [x19, #16]
    4288:	cbz	x0, 42e4 <grub_efi_finish_boot_services+0x174>
    428c:	bl	3b30 <grub_efi_fini+0x18>
    4290:	cmp	w0, #0x0
    4294:	b.le	430c <grub_efi_finish_boot_services+0x19c>
    4298:	ldr	x1, [x21]
    429c:	ldr	x0, [x22]
    42a0:	ldr	x1, [x1]
    42a4:	ldr	x0, [x0]
    42a8:	ldr	x2, [x1, #96]
    42ac:	ldr	x1, [x19, #40]
    42b0:	ldr	x2, [x2, #232]
    42b4:	blr	x2
    42b8:	cbz	x0, 43d0 <grub_efi_finish_boot_services+0x260>
    42bc:	cmp	x0, x23
    42c0:	ldr	x0, [x19, #16]
    42c4:	b.ne	4318 <grub_efi_finish_boot_services+0x1a8>  // b.any
    42c8:	bl	6260 <grub_free>
    42cc:	ldr	x0, [x24]
    42d0:	bl	c078 <grub_err_printf>
    42d4:	ldr	x0, [x19, #16]
    42d8:	bl	3b30 <grub_efi_fini+0x18>
    42dc:	tbz	w0, #31, 427c <grub_efi_finish_boot_services+0x10c>
    42e0:	b	4234 <grub_efi_finish_boot_services+0xc4>
    42e4:	adrp	x0, 0 <_start>
    42e8:	ldr	x0, [x0]
    42ec:	ldr	w0, [x0]
    42f0:	ldp	x19, x20, [sp, #16]
    42f4:	ldp	x21, x22, [sp, #32]
    42f8:	ldp	x23, x24, [sp, #48]
    42fc:	ldp	x25, x26, [sp, #64]
    4300:	ldp	x27, x28, [sp, #80]
    4304:	ldp	x29, x30, [sp], #96
    4308:	ret
    430c:	ldr	x0, [x19, #16]
    4310:	bl	6260 <grub_free>
    4314:	b	4234 <grub_efi_finish_boot_services+0xc4>
    4318:	bl	6260 <grub_free>
    431c:	adrp	x1, 0 <_start>
    4320:	mov	w0, #0x1d                  	// #29
    4324:	ldp	x19, x20, [sp, #16]
    4328:	ldp	x21, x22, [sp, #32]
    432c:	ldp	x23, x24, [sp, #48]
    4330:	ldp	x25, x26, [sp, #64]
    4334:	ldp	x27, x28, [sp, #80]
    4338:	ldp	x29, x30, [sp], #96
    433c:	ldr	x1, [x1]
    4340:	b	9bc8 <grub_error>
    4344:	adrp	x1, 0 <_start>
    4348:	mov	w0, #0x1d                  	// #29
    434c:	ldp	x19, x20, [sp, #16]
    4350:	ldp	x21, x22, [sp, #32]
    4354:	ldp	x23, x24, [sp, #48]
    4358:	ldp	x25, x26, [sp, #64]
    435c:	ldp	x27, x28, [sp, #80]
    4360:	ldp	x29, x30, [sp], #96
    4364:	ldr	x1, [x1]
    4368:	b	9bc8 <grub_error>
    436c:	mov	w0, #0x1                   	// #1
    4370:	str	w0, [x19]
    4374:	ldr	x0, [x19, #8]
    4378:	str	x0, [x20]
    437c:	ldr	x1, [x19, #16]
    4380:	mov	x0, x25
    4384:	ldr	x2, [x19, #8]
    4388:	bl	bf40 <grub_memmove>
    438c:	cbz	x26, 4398 <grub_efi_finish_boot_services+0x228>
    4390:	ldr	x0, [x19, #40]
    4394:	str	x0, [x26]
    4398:	cbz	x27, 43a4 <grub_efi_finish_boot_services+0x234>
    439c:	ldr	x0, [x19, #32]
    43a0:	str	x0, [x27]
    43a4:	mov	w0, #0x0                   	// #0
    43a8:	cbz	x28, 42f0 <grub_efi_finish_boot_services+0x180>
    43ac:	ldr	w1, [x19, #24]
    43b0:	str	w1, [x28]
    43b4:	ldp	x19, x20, [sp, #16]
    43b8:	ldp	x21, x22, [sp, #32]
    43bc:	ldp	x23, x24, [sp, #48]
    43c0:	ldp	x25, x26, [sp, #64]
    43c4:	ldp	x27, x28, [sp, #80]
    43c8:	ldp	x29, x30, [sp], #96
    43cc:	ret
    43d0:	mov	w0, #0x1                   	// #1
    43d4:	str	w0, [x19]
    43d8:	cbz	x20, 438c <grub_efi_finish_boot_services+0x21c>
    43dc:	ldr	x0, [x19, #8]
    43e0:	str	x0, [x20]
    43e4:	b	438c <grub_efi_finish_boot_services+0x21c>
	...

0000000000004428 <grub_efi_find_mmap_size>:
    4428:	stp	x29, x30, [sp, #-64]!
    442c:	adrp	x0, 0 <_start>
    4430:	mov	x29, sp
    4434:	str	x19, [sp, #16]
    4438:	ldr	x19, [x0]
    443c:	str	xzr, [sp, #40]
    4440:	ldr	w0, [x19]
    4444:	cbnz	w0, 44d4 <grub_efi_find_mmap_size+0xac>
    4448:	adrp	x0, 0 <_start>
    444c:	mov	x1, #0x0                   	// #0
    4450:	add	x4, sp, #0x24
    4454:	add	x3, sp, #0x30
    4458:	ldr	x5, [x0]
    445c:	add	x2, sp, #0x38
    4460:	add	x0, sp, #0x28
    4464:	ldr	x5, [x5]
    4468:	ldr	x5, [x5, #96]
    446c:	ldr	x5, [x5, #56]
    4470:	blr	x5
    4474:	ldr	x1, [sp, #48]
    4478:	cbnz	x1, 4484 <grub_efi_find_mmap_size+0x5c>
    447c:	mov	x1, #0x28                  	// #40
    4480:	str	x1, [sp, #48]
    4484:	cbz	x0, 44b8 <grub_efi_find_mmap_size+0x90>
    4488:	mov	x1, #0x5                   	// #5
    448c:	movk	x1, #0x8000, lsl #48
    4490:	cmp	x0, x1
    4494:	b.eq	44b8 <grub_efi_find_mmap_size+0x90>  // b.none
    4498:	adrp	x1, 0 <_start>
    449c:	mov	w0, #0x1d                  	// #29
    44a0:	ldr	x1, [x1]
    44a4:	bl	9bc8 <grub_error>
    44a8:	mov	x0, #0x0                   	// #0
    44ac:	ldr	x19, [sp, #16]
    44b0:	ldp	x29, x30, [sp], #64
    44b4:	ret
    44b8:	ldr	x0, [sp, #40]
    44bc:	mov	x1, #0x1fff                	// #8191
    44c0:	add	x0, x0, x1
    44c4:	and	x0, x0, #0xfffffffffffff000
    44c8:	ldr	x19, [sp, #16]
    44cc:	ldp	x29, x30, [sp], #64
    44d0:	ret
    44d4:	ldr	x1, [x19, #16]
    44d8:	mov	x2, #0x0                   	// #0
    44dc:	mov	x0, #0x0                   	// #0
    44e0:	bl	bf40 <grub_memmove>
    44e4:	ldr	x0, [x19, #8]
    44e8:	b	44bc <grub_efi_find_mmap_size+0x94>
    44ec:	nop
	...

0000000000004508 <grub_efi_get_memory_map>:
    4508:	stp	x29, x30, [sp, #-96]!
    450c:	adrp	x5, 0 <_start>
    4510:	mov	x29, sp
    4514:	stp	x21, x22, [sp, #32]
    4518:	mov	x21, x2
    451c:	ldr	x22, [x5]
    4520:	stp	x19, x20, [sp, #16]
    4524:	mov	x19, x3
    4528:	mov	x20, x4
    452c:	ldr	w2, [x22]
    4530:	cbnz	w2, 45b8 <grub_efi_get_memory_map+0xb0>
    4534:	adrp	x3, 0 <_start>
    4538:	cmp	x21, #0x0
    453c:	add	x2, sp, #0x50
    4540:	add	x4, sp, #0x4c
    4544:	ldr	x3, [x3]
    4548:	csel	x21, x2, x21, eq  // eq = none
    454c:	cmp	x20, #0x0
    4550:	add	x2, sp, #0x58
    4554:	csel	x20, x4, x20, eq  // eq = none
    4558:	cmp	x19, #0x0
    455c:	ldr	x5, [x3]
    4560:	csel	x19, x2, x19, eq  // eq = none
    4564:	mov	x4, x20
    4568:	mov	x2, x21
    456c:	mov	x3, x19
    4570:	ldr	x5, [x5, #96]
    4574:	ldr	x5, [x5, #56]
    4578:	blr	x5
    457c:	mov	x1, x0
    4580:	ldr	x2, [x19]
    4584:	cbnz	x2, 4590 <grub_efi_get_memory_map+0x88>
    4588:	mov	x0, #0x28                  	// #40
    458c:	str	x0, [x19]
    4590:	mov	w0, #0x1                   	// #1
    4594:	cbz	x1, 45a8 <grub_efi_get_memory_map+0xa0>
    4598:	mov	x0, #0x5                   	// #5
    459c:	movk	x0, #0x8000, lsl #48
    45a0:	cmp	x1, x0
    45a4:	csetm	w0, ne  // ne = any
    45a8:	ldp	x19, x20, [sp, #16]
    45ac:	ldp	x21, x22, [sp, #32]
    45b0:	ldp	x29, x30, [sp], #96
    45b4:	ret
    45b8:	mov	x3, x1
    45bc:	ldr	x1, [x22, #16]
    45c0:	str	x23, [sp, #48]
    45c4:	mov	x23, x0
    45c8:	ldr	x0, [x22, #8]
    45cc:	ldr	x2, [x23]
    45d0:	cmp	x2, x0
    45d4:	b.cc	4628 <grub_efi_get_memory_map+0x120>  // b.lo, b.ul, b.last
    45d8:	mov	x2, x0
    45dc:	mov	x0, x3
    45e0:	bl	bf40 <grub_memmove>
    45e4:	mov	w0, #0x1                   	// #1
    45e8:	ldr	x1, [x22, #8]
    45ec:	str	x1, [x23]
    45f0:	cbz	x21, 45fc <grub_efi_get_memory_map+0xf4>
    45f4:	ldr	x1, [x22, #40]
    45f8:	str	x1, [x21]
    45fc:	cbz	x19, 4608 <grub_efi_get_memory_map+0x100>
    4600:	ldr	x1, [x22, #32]
    4604:	str	x1, [x19]
    4608:	cbz	x20, 4638 <grub_efi_get_memory_map+0x130>
    460c:	ldr	w1, [x22, #24]
    4610:	ldr	x23, [sp, #48]
    4614:	str	w1, [x20]
    4618:	ldp	x19, x20, [sp, #16]
    461c:	ldp	x21, x22, [sp, #32]
    4620:	ldp	x29, x30, [sp], #96
    4624:	ret
    4628:	mov	x0, x3
    462c:	bl	bf40 <grub_memmove>
    4630:	mov	w0, #0x0                   	// #0
    4634:	b	45e8 <grub_efi_get_memory_map+0xe0>
    4638:	ldp	x19, x20, [sp, #16]
    463c:	ldp	x21, x22, [sp, #32]
    4640:	ldr	x23, [sp, #48]
    4644:	ldp	x29, x30, [sp], #96
    4648:	ret
    464c:	nop
	...

0000000000004660 <grub_efi_memory_fini>:
    4660:	stp	x29, x30, [sp, #-64]!
    4664:	adrp	x0, 0 <_start>
    4668:	mov	x29, sp
    466c:	stp	x19, x20, [sp, #16]
    4670:	stp	x21, x22, [sp, #32]
    4674:	ldr	x22, [x0]
    4678:	str	x23, [sp, #48]
    467c:	adrp	x23, 0 <_start>
    4680:	b	46a4 <grub_efi_memory_fini+0x44>
    4684:	ldr	x1, [x0, #8]
    4688:	cmp	x20, x1
    468c:	b.ne	46f0 <grub_efi_memory_fini+0x90>  // b.any
    4690:	ldr	x1, [x0, #16]
    4694:	cbz	x4, 4704 <grub_efi_memory_fini+0xa4>
    4698:	str	x1, [x4, #16]
    469c:	ldr	x1, [x3, #72]
    46a0:	blr	x1
    46a4:	ldr	x2, [x22, #48]
    46a8:	cbz	x2, 470c <grub_efi_memory_fini+0xac>
    46ac:	ldr	x21, [x23]
    46b0:	ldr	x0, [x21]
    46b4:	ldr	x3, [x0, #96]
    46b8:	ldp	x19, x20, [x2]
    46bc:	ldr	x3, [x3, #48]
    46c0:	mov	x0, x19
    46c4:	mov	x1, x20
    46c8:	blr	x3
    46cc:	ldr	x0, [x21]
    46d0:	ldr	x2, [x22, #48]
    46d4:	ldr	x3, [x0, #96]
    46d8:	cbz	x2, 470c <grub_efi_memory_fini+0xac>
    46dc:	mov	x0, x2
    46e0:	mov	x4, #0x0                   	// #0
    46e4:	ldr	x1, [x0]
    46e8:	cmp	x19, x1
    46ec:	b.eq	4684 <grub_efi_memory_fini+0x24>  // b.none
    46f0:	ldr	x5, [x0, #16]
    46f4:	mov	x4, x0
    46f8:	mov	x0, x5
    46fc:	cbnz	x5, 46e4 <grub_efi_memory_fini+0x84>
    4700:	b	46b8 <grub_efi_memory_fini+0x58>
    4704:	str	x1, [x22, #48]
    4708:	b	469c <grub_efi_memory_fini+0x3c>
    470c:	ldp	x19, x20, [sp, #16]
    4710:	ldp	x21, x22, [sp, #32]
    4714:	ldr	x23, [sp, #48]
    4718:	ldp	x29, x30, [sp], #64
    471c:	ret
	...

0000000000004730 <grub_efi_mm_init>:
    4730:	stp	x29, x30, [sp, #-160]!
    4734:	mov	w3, #0x2                   	// #2
    4738:	mov	w2, #0x1                   	// #1
    473c:	mov	x29, sp
    4740:	mov	x1, #0x6                   	// #6
    4744:	mov	x0, #0xffffffffffff        	// #281474976710655
    4748:	stp	x19, x20, [sp, #16]
    474c:	stp	x21, x22, [sp, #32]
    4750:	stp	x23, x24, [sp, #48]
    4754:	stp	x25, x26, [sp, #64]
    4758:	stp	x27, x28, [sp, #80]
    475c:	bl	3bd8 <grub_efi_allocate_pages_real>
    4760:	cbz	x0, 4b44 <grub_efi_mm_init+0x414>
    4764:	mov	x5, #0x3000                	// #12288
    4768:	mov	x21, x0
    476c:	add	x3, sp, #0x70
    4770:	add	x0, sp, #0x68
    4774:	mov	x1, x21
    4778:	mov	x4, #0x0                   	// #0
    477c:	mov	x2, #0x0                   	// #0
    4780:	str	x5, [sp, #104]
    4784:	bl	4508 <grub_efi_get_memory_map>
    4788:	cbz	w0, 4a6c <grub_efi_mm_init+0x33c>
    478c:	tbnz	w0, #31, 4b58 <grub_efi_mm_init+0x428>
    4790:	ldp	x23, x20, [sp, #104]
    4794:	add	x23, x21, x23
    4798:	cmp	x21, x23
    479c:	b.cs	49c0 <grub_efi_mm_init+0x290>  // b.hs, b.nlast
    47a0:	mov	x28, #0xfff                 	// #4095
    47a4:	mov	x25, x23
    47a8:	mov	x19, x21
    47ac:	mov	x22, #0xffffffffffff        	// #281474976710655
    47b0:	mov	x26, #0xfffff               	// #1048575
    47b4:	mov	x24, #0xfffffffff           	// #68719476735
    47b8:	movk	x28, #0x10, lsl #16
    47bc:	mov	x27, #0x100000              	// #1048576
    47c0:	b	47d0 <grub_efi_mm_init+0xa0>
    47c4:	add	x19, x19, x20
    47c8:	cmp	x23, x19
    47cc:	b.ls	4868 <grub_efi_mm_init+0x138>  // b.plast
    47d0:	ldr	w0, [x19]
    47d4:	cmp	w0, #0x7
    47d8:	b.ne	47c4 <grub_efi_mm_init+0x94>  // b.any
    47dc:	ldr	x0, [x19, #8]
    47e0:	cmp	x0, x22
    47e4:	b.hi	47c4 <grub_efi_mm_init+0x94>  // b.pmore
    47e8:	ldr	x1, [x19, #24]
    47ec:	add	x0, x0, x1, lsl #12
    47f0:	cmp	x0, #0x100, lsl #12
    47f4:	ccmp	x1, #0x0, #0x4, hi  // hi = pmore
    47f8:	b.eq	47c4 <grub_efi_mm_init+0x94>  // b.none
    47fc:	mov	x2, x20
    4800:	mov	x1, x19
    4804:	mov	x0, x25
    4808:	bl	bf40 <grub_memmove>
    480c:	ldr	x0, [x19, #8]
    4810:	cmp	x0, x26
    4814:	b.hi	482c <grub_efi_mm_init+0xfc>  // b.pmore
    4818:	ldr	x1, [x19, #24]
    481c:	sub	x0, x28, x0
    4820:	str	x27, [x19, #8]
    4824:	sub	x0, x1, x0, lsr #12
    4828:	str	x0, [x19, #24]
    482c:	ldr	x0, [x25, #8]
    4830:	ldr	x1, [x25, #24]
    4834:	add	x0, x0, #0xfff
    4838:	lsr	x0, x0, #12
    483c:	add	x2, x0, x1
    4840:	cmp	x2, x24
    4844:	b.ls	4850 <grub_efi_mm_init+0x120>  // b.plast
    4848:	sub	x1, x24, x0
    484c:	str	x1, [x25, #24]
    4850:	cmp	x1, #0x0
    4854:	add	x0, x25, x20
    4858:	add	x19, x19, x20
    485c:	csel	x25, x0, x25, ne  // ne = any
    4860:	cmp	x23, x19
    4864:	b.hi	47d0 <grub_efi_mm_init+0xa0>  // b.pmore
    4868:	cmp	x23, x25
    486c:	ldr	x24, [sp, #112]
    4870:	b.cs	49c0 <grub_efi_mm_init+0x290>  // b.hs, b.nlast
    4874:	mov	x0, x23
    4878:	mov	x19, #0x0                   	// #0
    487c:	nop
    4880:	ldr	x1, [x0, #24]
    4884:	add	x0, x0, x24
    4888:	cmp	x0, x25
    488c:	add	x19, x19, x1
    4890:	b.cc	4880 <grub_efi_mm_init+0x150>  // b.lo, b.ul, b.last
    4894:	lsr	x19, x19, #2
    4898:	mov	x1, #0x4000                	// #16384
    489c:	movk	x1, #0x6, lsl #16
    48a0:	cmp	x19, x1
    48a4:	csel	x19, x19, x1, ls  // ls = plast
    48a8:	mov	x0, #0x100                 	// #256
    48ac:	mov	x1, x23
    48b0:	cmp	x19, x0
    48b4:	csel	x19, x19, x0, cs  // cs = hs, nlast
    48b8:	add	x0, x1, x24
    48bc:	mov	x2, x23
    48c0:	cmp	x25, x0
    48c4:	b.ls	4948 <grub_efi_mm_init+0x218>  // b.plast
    48c8:	ldr	x4, [x2, #24]
    48cc:	mov	x3, x0
    48d0:	ldr	x5, [x3, #24]
    48d4:	cmp	x5, x4
    48d8:	csel	x6, x4, x5, ls  // ls = plast
    48dc:	csel	x1, x1, x3, ls  // ls = plast
    48e0:	add	x3, x3, x24
    48e4:	mov	x4, x6
    48e8:	cmp	x25, x3
    48ec:	b.hi	48d0 <grub_efi_mm_init+0x1a0>  // b.pmore
    48f0:	cmp	x1, x2
    48f4:	b.eq	4934 <grub_efi_mm_init+0x204>  // b.none
    48f8:	ldp	x4, x5, [x1]
    48fc:	ldp	x8, x9, [x2]
    4900:	stp	x4, x5, [x2]
    4904:	ldp	x4, x5, [x1, #16]
    4908:	stp	x8, x9, [sp, #120]
    490c:	ldp	x6, x7, [x2, #16]
    4910:	stp	x4, x5, [x2, #16]
    4914:	ldr	x4, [x1, #32]
    4918:	stp	x6, x7, [sp, #136]
    491c:	ldr	x3, [x2, #32]
    4920:	str	x4, [x2, #32]
    4924:	stp	x8, x9, [x1]
    4928:	stp	x6, x7, [x1, #16]
    492c:	str	x3, [x1, #32]
    4930:	str	x3, [sp, #152]
    4934:	mov	x1, x0
    4938:	add	x2, x2, x24
    493c:	add	x0, x1, x24
    4940:	cmp	x25, x0
    4944:	b.hi	48c8 <grub_efi_mm_init+0x198>  // b.pmore
    4948:	ldr	x20, [x23, #24]
    494c:	ldr	x22, [x23, #8]
    4950:	cmp	x20, x19
    4954:	b.ls	498c <grub_efi_mm_init+0x25c>  // b.plast
    4958:	sub	x20, x20, x19
    495c:	mov	x1, x19
    4960:	mov	w3, #0x1                   	// #1
    4964:	mov	w2, #0x2                   	// #2
    4968:	add	x22, x22, x20, lsl #12
    496c:	mov	x0, x22
    4970:	bl	3bd8 <grub_efi_allocate_pages_real>
    4974:	cbnz	x0, 49cc <grub_efi_mm_init+0x29c>
    4978:	adrp	x0, 0 <_start>
    497c:	mov	w2, w19
    4980:	mov	x1, x22
    4984:	ldr	x0, [x0]
    4988:	bl	d1c0 <grub_fatal>
    498c:	mov	x1, x20
    4990:	mov	x0, x22
    4994:	mov	w3, #0x1                   	// #1
    4998:	mov	w2, #0x2                   	// #2
    499c:	bl	3bd8 <grub_efi_allocate_pages_real>
    49a0:	cbz	x0, 4b50 <grub_efi_mm_init+0x420>
    49a4:	lsl	x1, x20, #12
    49a8:	bl	5e58 <grub_mm_init_region>
    49ac:	subs	x19, x19, x20
    49b0:	b.eq	49d4 <grub_efi_mm_init+0x2a4>  // b.none
    49b4:	add	x23, x23, x24
    49b8:	cmp	x25, x23
    49bc:	b.hi	4948 <grub_efi_mm_init+0x218>  // b.pmore
    49c0:	adrp	x0, 0 <_start>
    49c4:	ldr	x0, [x0]
    49c8:	bl	d1c0 <grub_fatal>
    49cc:	lsl	x1, x19, #12
    49d0:	bl	5e58 <grub_mm_init_region>
    49d4:	adrp	x2, 0 <_start>
    49d8:	mov	x0, x21
    49dc:	mov	x1, #0x6                   	// #6
    49e0:	ldr	x19, [x2]
    49e4:	ldr	x2, [x19]
    49e8:	ldr	x2, [x2, #96]
    49ec:	ldr	x2, [x2, #48]
    49f0:	blr	x2
    49f4:	adrp	x0, 0 <_start>
    49f8:	ldr	x3, [x0]
    49fc:	ldr	x0, [x3, #48]
    4a00:	cbz	x0, 4a3c <grub_efi_mm_init+0x30c>
    4a04:	mov	x2, #0x0                   	// #0
    4a08:	ldr	x1, [x0]
    4a0c:	cmp	x21, x1
    4a10:	b.ne	4a58 <grub_efi_mm_init+0x328>  // b.any
    4a14:	ldr	x1, [x0, #8]
    4a18:	cmp	x1, #0x6
    4a1c:	b.ne	4a58 <grub_efi_mm_init+0x328>  // b.any
    4a20:	ldr	x1, [x19]
    4a24:	ldr	x4, [x0, #16]
    4a28:	ldr	x1, [x1, #96]
    4a2c:	cbz	x2, 4b34 <grub_efi_mm_init+0x404>
    4a30:	str	x4, [x2, #16]
    4a34:	ldr	x1, [x1, #72]
    4a38:	blr	x1
    4a3c:	ldp	x19, x20, [sp, #16]
    4a40:	ldp	x21, x22, [sp, #32]
    4a44:	ldp	x23, x24, [sp, #48]
    4a48:	ldp	x25, x26, [sp, #64]
    4a4c:	ldp	x27, x28, [sp, #80]
    4a50:	ldp	x29, x30, [sp], #160
    4a54:	ret
    4a58:	ldr	x1, [x0, #16]
    4a5c:	mov	x2, x0
    4a60:	cbz	x1, 4a3c <grub_efi_mm_init+0x30c>
    4a64:	mov	x0, x1
    4a68:	b	4a08 <grub_efi_mm_init+0x2d8>
    4a6c:	adrp	x2, 0 <_start>
    4a70:	mov	x0, x21
    4a74:	mov	x1, #0x6                   	// #6
    4a78:	ldr	x19, [x2]
    4a7c:	ldr	x2, [x19]
    4a80:	ldr	x2, [x2, #96]
    4a84:	ldr	x2, [x2, #48]
    4a88:	blr	x2
    4a8c:	adrp	x0, 0 <_start>
    4a90:	ldr	x3, [x0]
    4a94:	ldr	x0, [x3, #48]
    4a98:	cbz	x0, 4ad4 <grub_efi_mm_init+0x3a4>
    4a9c:	mov	x2, #0x0                   	// #0
    4aa0:	ldr	x1, [x0]
    4aa4:	cmp	x21, x1
    4aa8:	b.ne	4b20 <grub_efi_mm_init+0x3f0>  // b.any
    4aac:	ldr	x1, [x0, #8]
    4ab0:	cmp	x1, #0x6
    4ab4:	b.ne	4b20 <grub_efi_mm_init+0x3f0>  // b.any
    4ab8:	ldr	x1, [x19]
    4abc:	ldr	x4, [x0, #16]
    4ac0:	ldr	x1, [x1, #96]
    4ac4:	cbz	x2, 4b3c <grub_efi_mm_init+0x40c>
    4ac8:	str	x4, [x2, #16]
    4acc:	ldr	x1, [x1, #72]
    4ad0:	blr	x1
    4ad4:	ldp	x4, x1, [sp, #104]
    4ad8:	mov	w3, #0x2                   	// #2
    4adc:	mov	w2, #0x1                   	// #1
    4ae0:	mov	x0, #0xffffffffffff        	// #281474976710655
    4ae4:	add	x1, x4, x1, lsl #5
    4ae8:	str	x1, [sp, #104]
    4aec:	add	x1, x1, #0xfff
    4af0:	lsr	x1, x1, #12
    4af4:	lsl	x1, x1, #1
    4af8:	bl	3bd8 <grub_efi_allocate_pages_real>
    4afc:	mov	x21, x0
    4b00:	cbz	x0, 4b44 <grub_efi_mm_init+0x414>
    4b04:	add	x3, sp, #0x70
    4b08:	add	x0, sp, #0x68
    4b0c:	mov	x1, x21
    4b10:	mov	x4, #0x0                   	// #0
    4b14:	mov	x2, #0x0                   	// #0
    4b18:	bl	4508 <grub_efi_get_memory_map>
    4b1c:	b	478c <grub_efi_mm_init+0x5c>
    4b20:	ldr	x1, [x0, #16]
    4b24:	mov	x2, x0
    4b28:	cbz	x1, 4ad4 <grub_efi_mm_init+0x3a4>
    4b2c:	mov	x0, x1
    4b30:	b	4aa0 <grub_efi_mm_init+0x370>
    4b34:	str	x4, [x3, #48]
    4b38:	b	4a34 <grub_efi_mm_init+0x304>
    4b3c:	str	x4, [x3, #48]
    4b40:	b	4acc <grub_efi_mm_init+0x39c>
    4b44:	adrp	x0, 0 <_start>
    4b48:	ldr	x0, [x0]
    4b4c:	bl	d1c0 <grub_fatal>
    4b50:	mov	x19, x20
    4b54:	b	4978 <grub_efi_mm_init+0x248>
    4b58:	adrp	x0, 0 <_start>
    4b5c:	ldr	x0, [x0]
    4b60:	bl	d1c0 <grub_fatal>
    4b64:	nop
	...

0000000000004b98 <grub_efi_get_ram_base>:
    4b98:	stp	x29, x30, [sp, #-48]!
    4b9c:	mov	x4, #0x0                   	// #0
    4ba0:	mov	x2, #0x0                   	// #0
    4ba4:	mov	x29, sp
    4ba8:	add	x3, sp, #0x28
    4bac:	mov	x1, #0x0                   	// #0
    4bb0:	stp	x19, x20, [sp, #16]
    4bb4:	mov	x19, x0
    4bb8:	add	x0, sp, #0x20
    4bbc:	str	xzr, [sp, #32]
    4bc0:	bl	4508 <grub_efi_get_memory_map>
    4bc4:	tbnz	w0, #31, 4c78 <grub_efi_get_ram_base+0xe0>
    4bc8:	ldr	x0, [sp, #32]
    4bcc:	mov	x1, #0x1fff                	// #8191
    4bd0:	add	x0, x0, x1
    4bd4:	and	x0, x0, #0xfffffffffffff000
    4bd8:	str	x0, [sp, #32]
    4bdc:	bl	6210 <grub_malloc>
    4be0:	mov	x20, x0
    4be4:	cbz	x0, 4c68 <grub_efi_get_ram_base+0xd0>
    4be8:	add	x3, sp, #0x28
    4bec:	add	x0, sp, #0x20
    4bf0:	mov	x1, x20
    4bf4:	mov	x4, #0x0                   	// #0
    4bf8:	mov	x2, #0x0                   	// #0
    4bfc:	bl	4508 <grub_efi_get_memory_map>
    4c00:	cmp	w0, #0x0
    4c04:	b.le	4c90 <grub_efi_get_ram_base+0xf8>
    4c08:	ldr	x5, [sp, #32]
    4c0c:	mov	x0, #0xffffffffffff        	// #281474976710655
    4c10:	str	x0, [x19]
    4c14:	add	x5, x20, x5
    4c18:	cmp	x20, x5
    4c1c:	b.cs	4c50 <grub_efi_get_ram_base+0xb8>  // b.hs, b.nlast
    4c20:	ldr	x0, [sp, #40]
    4c24:	mov	x2, x20
    4c28:	ldr	x3, [x2, #32]
    4c2c:	tbz	w3, #3, 4c44 <grub_efi_get_ram_base+0xac>
    4c30:	ldr	x4, [x19]
    4c34:	ldr	x3, [x2, #8]
    4c38:	cmp	x3, x4
    4c3c:	csel	x3, x3, x4, ls  // ls = plast
    4c40:	str	x3, [x19]
    4c44:	add	x2, x2, x0
    4c48:	cmp	x2, x5
    4c4c:	b.cc	4c28 <grub_efi_get_ram_base+0x90>  // b.lo, b.ul, b.last
    4c50:	mov	x0, x20
    4c54:	bl	6260 <grub_free>
    4c58:	mov	w0, #0x0                   	// #0
    4c5c:	ldp	x19, x20, [sp, #16]
    4c60:	ldp	x29, x30, [sp], #48
    4c64:	ret
    4c68:	mov	w0, #0x3                   	// #3
    4c6c:	ldp	x19, x20, [sp, #16]
    4c70:	ldp	x29, x30, [sp], #48
    4c74:	ret
    4c78:	adrp	x1, 0 <_start>
    4c7c:	mov	w0, #0x1d                  	// #29
    4c80:	ldr	x1, [x1]
    4c84:	bl	9bc8 <grub_error>
    4c88:	mov	x0, #0x0                   	// #0
    4c8c:	b	4bd8 <grub_efi_get_ram_base+0x40>
    4c90:	mov	w0, #0x26                  	// #38
    4c94:	ldp	x19, x20, [sp, #16]
    4c98:	ldp	x29, x30, [sp], #48
    4c9c:	ret
	...
    4ca8:	adrp	x2, 0 <_start>
    4cac:	mov	x0, x1
    4cb0:	ldr	x1, [x2]
    4cb4:	ldr	w1, [x1]
    4cb8:	cbnz	w1, 4e14 <grub_efi_get_ram_base+0x27c>
    4cbc:	stp	x29, x30, [sp, #-96]!
    4cc0:	adrp	x1, 0 <_start>
    4cc4:	mov	w2, #0xffff                	// #65535
    4cc8:	mov	x29, sp
    4ccc:	ldr	x1, [x1]
    4cd0:	stp	x19, x20, [sp, #16]
    4cd4:	ldr	w7, [x0]
    4cd8:	ldrh	w8, [x0, #6]
    4cdc:	ldr	x1, [x1]
    4ce0:	ubfx	x7, x7, #0, #23
    4ce4:	ubfx	x3, x8, #3, #8
    4ce8:	cmp	w7, w2
    4cec:	ldr	x20, [x1, #64]
    4cf0:	b.ls	4d34 <grub_efi_get_ram_base+0x19c>  // b.plast
    4cf4:	mov	w0, #0x3f                  	// #63
    4cf8:	strh	w0, [sp, #32]
    4cfc:	add	x19, sp, #0x20
    4d00:	strh	wzr, [sp, #34]
    4d04:	ldr	x2, [x20, #16]
    4d08:	mov	x1, x19
    4d0c:	mov	x0, x20
    4d10:	blr	x2
    4d14:	cbnz	x0, 4d28 <grub_efi_get_ram_base+0x190>
    4d18:	ldr	x2, [x20, #8]
    4d1c:	mov	x1, x19
    4d20:	mov	x0, x20
    4d24:	blr	x2
    4d28:	ldp	x19, x20, [sp, #16]
    4d2c:	ldp	x29, x30, [sp], #96
    4d30:	ret
    4d34:	mov	w1, #0x2503                	// #9475
    4d38:	cmp	w7, w1
    4d3c:	b.eq	4ed4 <grub_efi_get_ram_base+0x33c>  // b.none
    4d40:	b.hi	4ddc <grub_efi_get_ram_base+0x244>  // b.pmore
    4d44:	mov	w1, #0x2192                	// #8594
    4d48:	cmp	w7, w1
    4d4c:	b.eq	4ec4 <grub_efi_get_ram_base+0x32c>  // b.none
    4d50:	b.ls	4e18 <grub_efi_get_ram_base+0x280>  // b.plast
    4d54:	mov	w1, #0x2193                	// #8595
    4d58:	cmp	w7, w1
    4d5c:	b.eq	4e68 <grub_efi_get_ram_base+0x2d0>  // b.none
    4d60:	mov	w2, #0x2501                	// #9473
    4d64:	mov	w1, #0x2500                	// #9472
    4d68:	cmp	w7, w2
    4d6c:	b.ne	4dfc <grub_efi_get_ram_base+0x264>  // b.any
    4d70:	strh	w1, [sp, #32]
    4d74:	cbz	w3, 4edc <grub_efi_get_ram_base+0x344>
    4d78:	cmp	w3, #0x2
    4d7c:	b.hi	4e70 <grub_efi_get_ram_base+0x2d8>  // b.pmore
    4d80:	ldrh	w1, [x0, #6]
    4d84:	add	x6, x0, #0x18
    4d88:	add	x19, sp, #0x20
    4d8c:	mov	x0, #0x0                   	// #0
    4d90:	tst	w1, #0x7f8
    4d94:	csel	x6, x6, xzr, ne  // ne = any
    4d98:	b	4da4 <grub_efi_get_ram_base+0x20c>
    4d9c:	cmp	x0, #0x1e
    4da0:	b.eq	4dc4 <grub_efi_get_ram_base+0x22c>  // b.none
    4da4:	add	x2, x19, x0, lsl #1
    4da8:	ldr	w1, [x6, x0, lsl #2]
    4dac:	add	w4, w0, #0x1
    4db0:	add	w5, w0, #0x2
    4db4:	cmp	w3, w4
    4db8:	add	x0, x0, #0x1
    4dbc:	strh	w1, [x2, #2]
    4dc0:	b.hi	4d9c <grub_efi_get_ram_base+0x204>  // b.pmore
    4dc4:	strh	wzr, [x19, w5, uxtw #1]
    4dc8:	cmp	w7, #0x7f
    4dcc:	b.hi	4d04 <grub_efi_get_ram_base+0x16c>  // b.pmore
    4dd0:	tst	w8, #0x7f8
    4dd4:	b.ne	4d04 <grub_efi_get_ram_base+0x16c>  // b.any
    4dd8:	b	4d18 <grub_efi_get_ram_base+0x180>
    4ddc:	mov	w1, #0x2517                	// #9495
    4de0:	cmp	w7, w1
    4de4:	b.eq	4ebc <grub_efi_get_ram_base+0x324>  // b.none
    4de8:	b.ls	4e38 <grub_efi_get_ram_base+0x2a0>  // b.plast
    4dec:	mov	w2, #0x251b                	// #9499
    4df0:	mov	w1, #0x2518                	// #9496
    4df4:	cmp	w7, w2
    4df8:	b.eq	4d70 <grub_efi_get_ram_base+0x1d8>  // b.none
    4dfc:	strh	w7, [sp, #32]
    4e00:	cbz	w3, 4edc <grub_efi_get_ram_base+0x344>
    4e04:	mov	w1, #0xffff                	// #65535
    4e08:	cmp	w7, w1
    4e0c:	b.ne	4d78 <grub_efi_get_ram_base+0x1e0>  // b.any
    4e10:	b	4cfc <grub_efi_get_ram_base+0x164>
    4e14:	ret
    4e18:	mov	w1, #0x2190                	// #8592
    4e1c:	cmp	w7, w1
    4e20:	b.eq	4e60 <grub_efi_get_ram_base+0x2c8>  // b.none
    4e24:	mov	w2, #0x2191                	// #8593
    4e28:	mov	w1, #0x25b2                	// #9650
    4e2c:	cmp	w7, w2
    4e30:	b.eq	4d70 <grub_efi_get_ram_base+0x1d8>  // b.none
    4e34:	b	4dfc <grub_efi_get_ram_base+0x264>
    4e38:	mov	w1, #0x250f                	// #9487
    4e3c:	cmp	w7, w1
    4e40:	b.eq	4e58 <grub_efi_get_ram_base+0x2c0>  // b.none
    4e44:	mov	w2, #0x2513                	// #9491
    4e48:	mov	w1, #0x2510                	// #9488
    4e4c:	cmp	w7, w2
    4e50:	b.eq	4d70 <grub_efi_get_ram_base+0x1d8>  // b.none
    4e54:	b	4dfc <grub_efi_get_ram_base+0x264>
    4e58:	mov	w1, #0x250c                	// #9484
    4e5c:	b	4d70 <grub_efi_get_ram_base+0x1d8>
    4e60:	mov	w1, #0x25c4                	// #9668
    4e64:	b	4d70 <grub_efi_get_ram_base+0x1d8>
    4e68:	mov	w1, #0x25bc                	// #9660
    4e6c:	b	4d70 <grub_efi_get_ram_base+0x1d8>
    4e70:	ldrh	w6, [x0, #6]
    4e74:	sub	w3, w3, #0x1
    4e78:	add	x19, sp, #0x20
    4e7c:	mov	x2, #0x0                   	// #0
    4e80:	and	w6, w6, #0x7f8
    4e84:	b	4eac <grub_efi_get_ram_base+0x314>
    4e88:	ldr	x4, [x0, #24]
    4e8c:	add	x1, x19, x2, lsl #1
    4e90:	ldr	w4, [x4, x2, lsl #2]
    4e94:	cmp	x3, x2
    4e98:	add	x2, x2, #0x1
    4e9c:	strh	w4, [x1, #2]
    4ea0:	b.eq	4dc4 <grub_efi_get_ram_base+0x22c>  // b.none
    4ea4:	cmp	x2, #0x1e
    4ea8:	b.eq	4dc4 <grub_efi_get_ram_base+0x22c>  // b.none
    4eac:	add	w5, w2, #0x2
    4eb0:	cbnz	w6, 4e88 <grub_efi_get_ram_base+0x2f0>
    4eb4:	mov	x4, #0x0                   	// #0
    4eb8:	b	4e8c <grub_efi_get_ram_base+0x2f4>
    4ebc:	mov	w1, #0x2514                	// #9492
    4ec0:	b	4d70 <grub_efi_get_ram_base+0x1d8>
    4ec4:	mov	w1, #0x25ba                	// #9658
    4ec8:	strh	w1, [sp, #32]
    4ecc:	cbnz	w3, 4e04 <grub_efi_get_ram_base+0x26c>
    4ed0:	b	4cfc <grub_efi_get_ram_base+0x164>
    4ed4:	mov	w1, #0x2502                	// #9474
    4ed8:	b	4ec8 <grub_efi_get_ram_base+0x330>
    4edc:	add	x19, sp, #0x20
    4ee0:	mov	w5, #0x1                   	// #1
    4ee4:	b	4dc4 <grub_efi_get_ram_base+0x22c>
	...
    4ef8:	ands	w1, w0, #0xffff
    4efc:	lsr	w0, w0, #16
    4f00:	b.ne	4f30 <grub_efi_get_ram_base+0x398>  // b.any
    4f04:	sub	w1, w0, #0x1
    4f08:	sub	w2, w0, #0x8
    4f0c:	and	w1, w1, #0xffff
    4f10:	and	w2, w2, #0xffff
    4f14:	cmp	w1, #0x1e
    4f18:	add	w1, w0, #0x60
    4f1c:	ccmp	w2, #0x2, #0x0, ls  // ls = plast
    4f20:	orr	w1, w1, #0x2000000
    4f24:	ccmp	w0, #0xd, #0x4, hi  // hi = pmore
    4f28:	csel	w0, w1, w0, ne  // ne = any
    4f2c:	ret
    4f30:	cmp	w0, #0xd
    4f34:	cset	w2, eq  // eq = none
    4f38:	cmp	w2, #0x0
    4f3c:	ccmp	w1, #0xd, #0x0, ne  // ne = any
    4f40:	b.eq	4f80 <grub_efi_get_ram_base+0x3e8>  // b.none
    4f44:	cmp	w1, #0x17
    4f48:	b.ls	4f70 <grub_efi_get_ram_base+0x3d8>  // b.plast
    4f4c:	sub	w3, w0, #0x20
    4f50:	sub	w1, w0, #0x8
    4f54:	and	w3, w3, #0xffff
    4f58:	and	w1, w1, #0xffff
    4f5c:	cmp	w3, #0x5f
    4f60:	ccmp	w1, #0x2, #0x0, hi  // hi = pmore
    4f64:	ccmp	w2, #0x0, #0x0, hi  // hi = pmore
    4f68:	csel	w0, w0, wzr, ne  // ne = any
    4f6c:	ret
    4f70:	adrp	x0, 0 <_start>
    4f74:	ldr	x0, [x0]
    4f78:	ldr	w0, [x0, w1, sxtw #2]
    4f7c:	ret
    4f80:	mov	w0, #0xd                   	// #13
    4f84:	ret
	...
    4f90:	adrp	x0, 0 <_start>
    4f94:	ldr	x0, [x0]
    4f98:	ldr	w0, [x0]
    4f9c:	cbz	w0, 4fb0 <grub_efi_get_ram_base+0x418>
    4fa0:	mov	w1, #0x19                  	// #25
    4fa4:	mov	w0, #0x50                  	// #80
    4fa8:	orr	w0, w0, w1, lsl #16
    4fac:	ret
    4fb0:	stp	x29, x30, [sp, #-32]!
    4fb4:	adrp	x0, 0 <_start>
    4fb8:	mov	x29, sp
    4fbc:	ldr	x0, [x0]
    4fc0:	add	x3, sp, #0x18
    4fc4:	add	x2, sp, #0x10
    4fc8:	ldr	x0, [x0]
    4fcc:	ldr	x0, [x0, #64]
    4fd0:	ldr	x1, [x0, #72]
    4fd4:	ldr	x4, [x0, #24]
    4fd8:	ldrsw	x1, [x1, #4]
    4fdc:	blr	x4
    4fe0:	cbz	x0, 4ff8 <grub_efi_get_ram_base+0x460>
    4fe4:	mov	w1, #0x19                  	// #25
    4fe8:	mov	w0, #0x50                  	// #80
    4fec:	orr	w0, w0, w1, lsl #16
    4ff0:	ldp	x29, x30, [sp], #32
    4ff4:	ret
    4ff8:	ldrh	w0, [sp, #16]
    4ffc:	ldrh	w1, [sp, #24]
    5000:	ldp	x29, x30, [sp], #32
    5004:	orr	w0, w0, w1, lsl #16
    5008:	ret
    500c:	nop
	...
    5020:	adrp	x0, 0 <_start>
    5024:	ldr	x0, [x0]
    5028:	ldr	w0, [x0]
    502c:	cbnz	w0, 5054 <grub_efi_get_ram_base+0x4bc>
    5030:	adrp	x0, 0 <_start>
    5034:	lsr	w2, w1, #16
    5038:	and	x1, x1, #0xffff
    503c:	ldr	x0, [x0]
    5040:	ldr	x0, [x0]
    5044:	ldr	x0, [x0, #64]
    5048:	ldr	x3, [x0, #56]
    504c:	mov	x16, x3
    5050:	br	x16
    5054:	ret
	...
    5068:	stp	x29, x30, [sp, #-48]!
    506c:	adrp	x1, 0 <_start>
    5070:	mov	x3, #0x7534                	// #30004
    5074:	mov	x29, sp
    5078:	ldr	x1, [x1]
    507c:	mov	x2, #0x148c                	// #5260
    5080:	movk	x3, #0xdd9e, lsl #16
    5084:	movk	x2, #0x85f5, lsl #16
    5088:	str	x19, [sp, #16]
    508c:	mov	x19, x0
    5090:	ldr	w0, [x1]
    5094:	movk	x3, #0x7762, lsl #32
    5098:	movk	x2, #0xa617, lsl #32
    509c:	movk	x3, #0x4698, lsl #48
    50a0:	movk	x2, #0xaa25, lsl #48
    50a4:	stp	x3, x2, [sp, #32]
    50a8:	cbnz	w0, 50b4 <grub_efi_get_ram_base+0x51c>
    50ac:	ldr	x0, [x19, #56]
    50b0:	cbz	x0, 50c4 <grub_efi_get_ram_base+0x52c>
    50b4:	mov	w0, #0x0                   	// #0
    50b8:	ldr	x19, [sp, #16]
    50bc:	ldp	x29, x30, [sp], #48
    50c0:	ret
    50c4:	adrp	x0, 0 <_start>
    50c8:	add	x1, sp, #0x20
    50cc:	mov	w2, #0x2                   	// #2
    50d0:	ldr	x0, [x0]
    50d4:	ldr	x0, [x0]
    50d8:	ldr	x0, [x0, #40]
    50dc:	bl	2090 <grub_efi_open_protocol>
    50e0:	str	x0, [x19, #56]
    50e4:	mov	w0, #0x0                   	// #0
    50e8:	ldr	x19, [sp, #16]
    50ec:	ldp	x29, x30, [sp], #48
    50f0:	ret
    50f4:	nop
	...
    5108:	stp	x29, x30, [sp, #-48]!
    510c:	adrp	x1, 0 <_start>
    5110:	mov	x29, sp
    5114:	ldr	x1, [x1]
    5118:	str	x19, [sp, #16]
    511c:	ldr	w19, [x1]
    5120:	cbnz	w19, 5160 <grub_efi_get_ram_base+0x5c8>
    5124:	ldr	x0, [x0, #56]
    5128:	cbz	x0, 5174 <grub_efi_get_ram_base+0x5dc>
    512c:	ldr	x2, [x0, #8]
    5130:	add	x1, sp, #0x20
    5134:	blr	x2
    5138:	cbnz	x0, 5150 <grub_efi_get_ram_base+0x5b8>
    513c:	ldp	w0, w4, [sp, #32]
    5140:	bl	4ef8 <grub_efi_get_ram_base+0x360>
    5144:	mov	w19, w0
    5148:	cbz	w0, 5150 <grub_efi_get_ram_base+0x5b8>
    514c:	tbnz	w4, #31, 51b0 <grub_efi_get_ram_base+0x618>
    5150:	mov	w0, w19
    5154:	ldr	x19, [sp, #16]
    5158:	ldp	x29, x30, [sp], #48
    515c:	ret
    5160:	mov	w19, #0x0                   	// #0
    5164:	mov	w0, w19
    5168:	ldr	x19, [sp, #16]
    516c:	ldp	x29, x30, [sp], #48
    5170:	ret
    5174:	adrp	x0, 0 <_start>
    5178:	add	x1, sp, #0x20
    517c:	ldr	x0, [x0]
    5180:	ldr	x0, [x0]
    5184:	ldr	x0, [x0, #48]
    5188:	ldr	x2, [x0, #8]
    518c:	blr	x2
    5190:	cbnz	x0, 5150 <grub_efi_get_ram_base+0x5b8>
    5194:	ldr	w0, [sp, #32]
    5198:	bl	4ef8 <grub_efi_get_ram_base+0x360>
    519c:	mov	w19, w0
    51a0:	mov	w0, w19
    51a4:	ldr	x19, [sp, #16]
    51a8:	ldp	x29, x30, [sp], #48
    51ac:	ret
    51b0:	tst	x4, #0x3
    51b4:	b.eq	51c4 <grub_efi_get_ram_base+0x62c>  // b.none
    51b8:	tst	x19, #0x800000
    51bc:	orr	w0, w0, #0x1000000
    51c0:	csel	w19, w0, w19, ne  // ne = any
    51c4:	tst	w4, #0x30
    51c8:	orr	w0, w19, #0x4000000
    51cc:	csel	w19, w0, w19, ne  // ne = any
    51d0:	tst	w4, #0xc
    51d4:	orr	w0, w19, #0x2000000
    51d8:	csel	w19, w0, w19, ne  // ne = any
    51dc:	b	5150 <grub_efi_get_ram_base+0x5b8>
	...
    51f0:	adrp	x0, 0 <_start>
    51f4:	ldr	x0, [x0]
    51f8:	ldr	w0, [x0]
    51fc:	cbnz	w0, 522c <grub_efi_get_ram_base+0x694>
    5200:	adrp	x1, 0 <_start>
    5204:	mov	w0, #0x0                   	// #0
    5208:	ldr	x1, [x1]
    520c:	ldr	x1, [x1]
    5210:	ldr	x1, [x1, #64]
    5214:	ldr	x1, [x1, #72]
    5218:	ldr	w2, [x1, #12]
    521c:	ldrh	w1, [x1, #16]
    5220:	bfxil	w0, w2, #0, #16
    5224:	bfi	w0, w1, #16, #16
    5228:	ret
    522c:	mov	w0, #0x0                   	// #0
    5230:	ret
    5234:	nop
	...
    5248:	adrp	x0, 0 <_start>
    524c:	ldr	x0, [x0]
    5250:	ldr	w0, [x0]
    5254:	cbnz	w0, 52b4 <grub_efi_get_ram_base+0x71c>
    5258:	stp	x29, x30, [sp, #-32]!
    525c:	adrp	x0, 0 <_start>
    5260:	mov	x1, #0x0                   	// #0
    5264:	mov	x29, sp
    5268:	ldr	x0, [x0]
    526c:	stp	x19, x20, [sp, #16]
    5270:	ldr	x0, [x0]
    5274:	ldr	x19, [x0, #64]
    5278:	mov	x0, x19
    527c:	ldr	x2, [x19, #40]
    5280:	ldr	x3, [x19, #72]
    5284:	ldr	w20, [x3, #8]
    5288:	blr	x2
    528c:	ldr	x1, [x19, #48]
    5290:	mov	x0, x19
    5294:	blr	x1
    5298:	sxtw	x1, w20
    529c:	mov	x0, x19
    52a0:	ldr	x2, [x19, #40]
    52a4:	ldp	x19, x20, [sp, #16]
    52a8:	mov	x16, x2
    52ac:	ldp	x29, x30, [sp], #32
    52b0:	br	x16
    52b4:	ret
	...
    52c8:	adrp	x0, 0 <_start>
    52cc:	ldr	x0, [x0]
    52d0:	ldr	w0, [x0]
    52d4:	cbnz	w0, 52fc <grub_efi_get_ram_base+0x764>
    52d8:	adrp	x0, 0 <_start>
    52dc:	cmp	w1, #0x1
    52e0:	ldr	x0, [x0]
    52e4:	ldr	x0, [x0]
    52e8:	ldr	x0, [x0, #64]
    52ec:	b.eq	532c <grub_efi_get_ram_base+0x794>  // b.none
    52f0:	cmp	w1, #0x2
    52f4:	b.eq	5310 <grub_efi_get_ram_base+0x778>  // b.none
    52f8:	cbz	w1, 5300 <grub_efi_get_ram_base+0x768>
    52fc:	ret
    5300:	ldr	x2, [x0, #40]
    5304:	mov	x1, #0x7                   	// #7
    5308:	mov	x16, x2
    530c:	br	x16
    5310:	adrp	x1, 0 <_start>
    5314:	ldr	x2, [x0, #40]
    5318:	ldr	x1, [x1]
    531c:	mov	x16, x2
    5320:	ldrb	w1, [x1]
    5324:	and	x1, x1, #0x7f
    5328:	br	x16
    532c:	adrp	x1, 0 <_start>
    5330:	ldr	x2, [x0, #40]
    5334:	ldr	x1, [x1]
    5338:	mov	x16, x2
    533c:	ldrb	w1, [x1]
    5340:	and	x1, x1, #0x7f
    5344:	br	x16
	...
    5368:	stp	x29, x30, [sp, #-16]!
    536c:	mov	w0, #0x1                   	// #1
    5370:	mov	x29, sp
    5374:	bl	20f0 <grub_efi_set_text_mode>
    5378:	adrp	x0, 0 <_start>
    537c:	ldr	x0, [x0]
    5380:	ldr	w0, [x0]
    5384:	cbnz	w0, 53a4 <grub_efi_get_ram_base+0x80c>
    5388:	adrp	x0, 0 <_start>
    538c:	mov	w1, #0x1                   	// #1
    5390:	ldr	x0, [x0]
    5394:	ldr	x0, [x0]
    5398:	ldr	x0, [x0, #64]
    539c:	ldr	x2, [x0, #64]
    53a0:	blr	x2
    53a4:	mov	w0, #0x0                   	// #0
    53a8:	ldp	x29, x30, [sp], #16
    53ac:	ret
	...
    53c0:	adrp	x0, 0 <_start>
    53c4:	ldr	x0, [x0]
    53c8:	ldr	w0, [x0]
    53cc:	cbnz	w0, 53ec <grub_efi_get_ram_base+0x854>
    53d0:	adrp	x0, 0 <_start>
    53d4:	ldr	x0, [x0]
    53d8:	ldr	x0, [x0]
    53dc:	ldr	x0, [x0, #64]
    53e0:	ldr	x2, [x0, #64]
    53e4:	mov	x16, x2
    53e8:	br	x16
    53ec:	ret
	...
    5400:	stp	x29, x30, [sp, #-16]!
    5404:	adrp	x0, 0 <_start>
    5408:	mov	x29, sp
    540c:	ldr	x0, [x0]
    5410:	ldr	w0, [x0]
    5414:	cbnz	w0, 5434 <grub_efi_get_ram_base+0x89c>
    5418:	adrp	x0, 0 <_start>
    541c:	mov	w1, #0x0                   	// #0
    5420:	ldr	x0, [x0]
    5424:	ldr	x0, [x0]
    5428:	ldr	x0, [x0, #64]
    542c:	ldr	x2, [x0, #64]
    5430:	blr	x2
    5434:	mov	w0, #0x0                   	// #0
    5438:	bl	20f0 <grub_efi_set_text_mode>
    543c:	mov	w0, #0x0                   	// #0
    5440:	ldp	x29, x30, [sp], #16
    5444:	ret
	...

0000000000005458 <grub_console_init>:
    5458:	stp	x29, x30, [sp, #-32]!
    545c:	mov	w0, #0x1                   	// #1
    5460:	mov	x29, sp
    5464:	bl	20f0 <grub_efi_set_text_mode>
    5468:	cbz	w0, 5520 <grub_console_init+0xc8>
    546c:	adrp	x0, 0 <_start>
    5470:	stp	x19, x20, [sp, #16]
    5474:	ldr	x20, [x0]
    5478:	ldr	x0, [x20]
    547c:	cbz	x0, 54c0 <grub_console_init+0x68>
    5480:	adrp	x0, 0 <_start>
    5484:	adrp	x1, 0 <_start>
    5488:	ldr	x0, [x0]
    548c:	ldr	x19, [x1]
    5490:	mov	x1, x19
    5494:	bl	aa18 <grub_list_push>
    5498:	adrp	x0, 0 <_start>
    549c:	ldr	x20, [x0]
    54a0:	ldr	x0, [x20]
    54a4:	cbz	x0, 54f8 <grub_console_init+0xa0>
    54a8:	add	x1, x19, #0x90
    54ac:	adrp	x0, 0 <_start>
    54b0:	ldp	x19, x20, [sp, #16]
    54b4:	ldp	x29, x30, [sp], #32
    54b8:	ldr	x0, [x0]
    54bc:	b	aa18 <grub_list_push>
    54c0:	adrp	x1, 0 <_start>
    54c4:	ldr	x19, [x1]
    54c8:	ldr	x1, [x19, #24]
    54cc:	cbz	x1, 54dc <grub_console_init+0x84>
    54d0:	mov	x0, x19
    54d4:	blr	x1
    54d8:	cbnz	w0, 5498 <grub_console_init+0x40>
    54dc:	mov	x0, x20
    54e0:	mov	x1, x19
    54e4:	bl	aa18 <grub_list_push>
    54e8:	adrp	x0, 0 <_start>
    54ec:	ldr	x20, [x0]
    54f0:	ldr	x0, [x20]
    54f4:	cbnz	x0, 54a8 <grub_console_init+0x50>
    54f8:	ldr	x1, [x19, #168]
    54fc:	add	x0, x19, #0x90
    5500:	cbz	x1, 550c <grub_console_init+0xb4>
    5504:	blr	x1
    5508:	cbnz	w0, 5534 <grub_console_init+0xdc>
    550c:	add	x1, x19, #0x90
    5510:	mov	x0, x20
    5514:	ldp	x19, x20, [sp, #16]
    5518:	ldp	x29, x30, [sp], #32
    551c:	b	aa18 <grub_list_push>
    5520:	ldp	x29, x30, [sp], #32
    5524:	adrp	x1, 0 <_start>
    5528:	mov	w0, #0xd                   	// #13
    552c:	ldr	x1, [x1]
    5530:	b	9bc8 <grub_error>
    5534:	ldp	x19, x20, [sp, #16]
    5538:	ldp	x29, x30, [sp], #32
    553c:	ret
	...

0000000000005570 <grub_console_fini>:
    5570:	stp	x29, x30, [sp, #-32]!
    5574:	adrp	x0, 0 <_start>
    5578:	mov	x29, sp
    557c:	stp	x19, x20, [sp, #16]
    5580:	ldr	x19, [x0]
    5584:	add	x20, x19, #0x90
    5588:	mov	x0, x20
    558c:	bl	aa38 <grub_list_remove>
    5590:	mov	x0, x20
    5594:	bl	aa38 <grub_list_remove>
    5598:	mov	x0, x19
    559c:	bl	aa38 <grub_list_remove>
    55a0:	mov	x0, x19
    55a4:	ldp	x19, x20, [sp, #16]
    55a8:	ldp	x29, x30, [sp], #32
    55ac:	b	aa38 <grub_list_remove>
	...

00000000000055b8 <grub_byte_checksum>:
    55b8:	add	x8, x0, x1
    55bc:	mov	x3, x0
    55c0:	cmp	x0, x8
    55c4:	b.cs	5890 <grub_byte_checksum+0x2d8>  // b.hs, b.nlast
    55c8:	neg	x2, x0
    55cc:	sub	x0, x1, #0x1
    55d0:	and	x2, x2, #0x7
    55d4:	cmp	x0, #0x10
    55d8:	b.ls	58a0 <grub_byte_checksum+0x2e8>  // b.plast
    55dc:	mov	x9, x3
    55e0:	cbz	x2, 5898 <grub_byte_checksum+0x2e0>
    55e4:	ldrb	w4, [x9], #1
    55e8:	cmp	x2, #0x1
    55ec:	b.eq	5678 <grub_byte_checksum+0xc0>  // b.none
    55f0:	ldrb	w0, [x3, #1]
    55f4:	cmp	x2, #0x2
    55f8:	add	x9, x3, #0x2
    55fc:	add	w4, w4, w0
    5600:	and	w4, w4, #0xff
    5604:	b.eq	5678 <grub_byte_checksum+0xc0>  // b.none
    5608:	ldrb	w0, [x3, #2]
    560c:	cmp	x2, #0x3
    5610:	add	x9, x3, #0x3
    5614:	add	w4, w4, w0
    5618:	and	w4, w4, #0xff
    561c:	b.eq	5678 <grub_byte_checksum+0xc0>  // b.none
    5620:	ldrb	w0, [x3, #3]
    5624:	cmp	x2, #0x4
    5628:	add	x9, x3, #0x4
    562c:	add	w4, w4, w0
    5630:	and	w4, w4, #0xff
    5634:	b.eq	5678 <grub_byte_checksum+0xc0>  // b.none
    5638:	ldrb	w0, [x3, #4]
    563c:	cmp	x2, #0x5
    5640:	add	x9, x3, #0x5
    5644:	add	w4, w4, w0
    5648:	and	w4, w4, #0xff
    564c:	b.eq	5678 <grub_byte_checksum+0xc0>  // b.none
    5650:	ldrb	w0, [x3, #5]
    5654:	cmp	x2, #0x7
    5658:	add	x9, x3, #0x6
    565c:	add	w4, w4, w0
    5660:	and	w4, w4, #0xff
    5664:	b.ne	5678 <grub_byte_checksum+0xc0>  // b.any
    5668:	ldrb	w0, [x3, #6]
    566c:	add	x9, x3, #0x7
    5670:	add	w4, w4, w0
    5674:	and	w4, w4, #0xff
    5678:	sub	x7, x1, x2
    567c:	add	x1, x3, x2
    5680:	and	x6, x7, #0xfffffffffffffff8
    5684:	mov	x2, #0x0                   	// #0
    5688:	add	x6, x6, x1
    568c:	nop
    5690:	ldr	x0, [x1], #8
    5694:	and	x3, x2, #0x7f7f7f7f7f7f7f7f
    5698:	and	x5, x0, #0x7f7f7f7f7f7f7f7f
    569c:	eor	x0, x0, x2
    56a0:	and	x0, x0, #0x8080808080808080
    56a4:	add	x2, x3, x5
    56a8:	cmp	x1, x6
    56ac:	eor	x2, x2, x0
    56b0:	b.ne	5690 <grub_byte_checksum+0xd8>  // b.any
    56b4:	ubfx	w1, w2, #8, #8
    56b8:	ubfx	x0, x2, #16, #8
    56bc:	add	w0, w0, w2, lsr #24
    56c0:	ubfx	x3, x2, #40, #8
    56c4:	add	w1, w1, w2
    56c8:	ubfx	x5, x2, #32, #8
    56cc:	add	w1, w1, w0
    56d0:	add	w5, w5, w3
    56d4:	lsr	x0, x2, #56
    56d8:	ubfx	x3, x2, #48, #8
    56dc:	add	w1, w1, w5
    56e0:	add	w0, w3, w0
    56e4:	add	w0, w1, w0
    56e8:	and	x1, x7, #0xfffffffffffffff8
    56ec:	add	w0, w4, w0
    56f0:	add	x3, x9, x1
    56f4:	and	w0, w0, #0xff
    56f8:	cmp	x7, x1
    56fc:	b.eq	588c <grub_byte_checksum+0x2d4>  // b.none
    5700:	mov	x2, x3
    5704:	ldrb	w1, [x2], #1
    5708:	add	w0, w0, w1
    570c:	cmp	x8, x2
    5710:	and	w0, w0, #0xff
    5714:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5718:	ldrb	w1, [x3, #1]
    571c:	add	x2, x3, #0x2
    5720:	cmp	x8, x2
    5724:	add	w0, w0, w1
    5728:	and	w0, w0, #0xff
    572c:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5730:	ldrb	w1, [x3, #2]
    5734:	add	x2, x3, #0x3
    5738:	cmp	x8, x2
    573c:	add	w0, w0, w1
    5740:	and	w0, w0, #0xff
    5744:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5748:	ldrb	w1, [x3, #3]
    574c:	add	x2, x3, #0x4
    5750:	cmp	x8, x2
    5754:	add	w0, w0, w1
    5758:	and	w0, w0, #0xff
    575c:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5760:	ldrb	w1, [x3, #4]
    5764:	add	x2, x3, #0x5
    5768:	cmp	x8, x2
    576c:	add	w0, w0, w1
    5770:	and	w0, w0, #0xff
    5774:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5778:	ldrb	w1, [x3, #5]
    577c:	add	x2, x3, #0x6
    5780:	cmp	x8, x2
    5784:	add	w0, w0, w1
    5788:	and	w0, w0, #0xff
    578c:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5790:	ldrb	w1, [x3, #6]
    5794:	add	x2, x3, #0x7
    5798:	cmp	x8, x2
    579c:	add	w0, w0, w1
    57a0:	and	w0, w0, #0xff
    57a4:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    57a8:	ldrb	w1, [x3, #7]
    57ac:	add	x2, x3, #0x8
    57b0:	cmp	x8, x2
    57b4:	add	w0, w0, w1
    57b8:	and	w0, w0, #0xff
    57bc:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    57c0:	ldrb	w1, [x3, #8]
    57c4:	add	x2, x3, #0x9
    57c8:	cmp	x8, x2
    57cc:	add	w0, w0, w1
    57d0:	and	w0, w0, #0xff
    57d4:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    57d8:	ldrb	w1, [x3, #9]
    57dc:	add	x2, x3, #0xa
    57e0:	cmp	x8, x2
    57e4:	add	w0, w0, w1
    57e8:	and	w0, w0, #0xff
    57ec:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    57f0:	ldrb	w1, [x3, #10]
    57f4:	add	x2, x3, #0xb
    57f8:	cmp	x8, x2
    57fc:	add	w0, w0, w1
    5800:	and	w0, w0, #0xff
    5804:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5808:	ldrb	w1, [x3, #11]
    580c:	add	x2, x3, #0xc
    5810:	cmp	x8, x2
    5814:	add	w0, w0, w1
    5818:	and	w0, w0, #0xff
    581c:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5820:	ldrb	w1, [x3, #12]
    5824:	add	x2, x3, #0xd
    5828:	cmp	x8, x2
    582c:	add	w0, w0, w1
    5830:	and	w0, w0, #0xff
    5834:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5838:	ldrb	w1, [x3, #13]
    583c:	add	x2, x3, #0xe
    5840:	cmp	x8, x2
    5844:	add	w0, w0, w1
    5848:	and	w0, w0, #0xff
    584c:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5850:	ldrb	w1, [x3, #14]
    5854:	add	x2, x3, #0xf
    5858:	cmp	x8, x2
    585c:	add	w0, w0, w1
    5860:	and	w0, w0, #0xff
    5864:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5868:	ldrb	w1, [x3, #15]
    586c:	add	x2, x3, #0x10
    5870:	cmp	x8, x2
    5874:	add	w0, w0, w1
    5878:	and	w0, w0, #0xff
    587c:	b.ls	588c <grub_byte_checksum+0x2d4>  // b.plast
    5880:	ldrb	w1, [x3, #16]
    5884:	add	w0, w0, w1
    5888:	and	w0, w0, #0xff
    588c:	ret
    5890:	mov	w0, #0x0                   	// #0
    5894:	ret
    5898:	mov	w4, #0x0                   	// #0
    589c:	b	5678 <grub_byte_checksum+0xc0>
    58a0:	mov	w0, #0x0                   	// #0
    58a4:	b	5700 <grub_byte_checksum+0x148>

00000000000058a8 <grub_acpi_find_fadt>:
    58a8:	stp	x29, x30, [sp, #-64]!
    58ac:	mov	x29, sp
    58b0:	stp	x19, x20, [sp, #16]
    58b4:	stp	x21, x22, [sp, #32]
    58b8:	bl	5a80 <grub_machine_acpi_get_rsdpv1>
    58bc:	cbz	x0, 5958 <grub_acpi_find_fadt+0xb0>
    58c0:	ldr	w0, [x0, #16]
    58c4:	mov	w20, w0
    58c8:	cbz	w0, 5958 <grub_acpi_find_fadt+0xb0>
    58cc:	adrp	x1, 0 <_start>
    58d0:	mov	x0, x20
    58d4:	mov	x2, #0x4                   	// #4
    58d8:	ldr	x1, [x1]
    58dc:	bl	c450 <grub_memcmp>
    58e0:	cbnz	w0, 5958 <grub_acpi_find_fadt+0xb0>
    58e4:	ldr	w0, [x20, #4]
    58e8:	add	x20, x20, #0x24
    58ec:	sub	x0, x0, #0x24
    58f0:	cmp	xzr, x0, lsr #2
    58f4:	lsr	x0, x0, #2
    58f8:	b.eq	5958 <grub_acpi_find_fadt+0xb0>  // b.none
    58fc:	adrp	x1, 0 <_start>
    5900:	add	x21, x20, x0, lsl #2
    5904:	stp	x23, x24, [sp, #48]
    5908:	ldr	x22, [x1]
    590c:	b	5918 <grub_acpi_find_fadt+0x70>
    5910:	cmp	x20, x21
    5914:	b.eq	5954 <grub_acpi_find_fadt+0xac>  // b.none
    5918:	ldr	w23, [x20]
    591c:	mov	x1, x22
    5920:	add	x20, x20, #0x4
    5924:	mov	x2, #0x4                   	// #4
    5928:	mov	w19, w23
    592c:	mov	x0, x19
    5930:	bl	c450 <grub_memcmp>
    5934:	cbnz	w0, 5910 <grub_acpi_find_fadt+0x68>
    5938:	cbz	w23, 5954 <grub_acpi_find_fadt+0xac>
    593c:	mov	x0, x19
    5940:	ldp	x19, x20, [sp, #16]
    5944:	ldp	x21, x22, [sp, #32]
    5948:	ldp	x23, x24, [sp, #48]
    594c:	ldp	x29, x30, [sp], #64
    5950:	ret
    5954:	ldp	x23, x24, [sp, #48]
    5958:	bl	5b38 <grub_machine_acpi_get_rsdpv2>
    595c:	mov	x21, x0
    5960:	cbz	x0, 5a50 <grub_acpi_find_fadt+0x1a8>
    5964:	ldr	w0, [x0, #16]
    5968:	mov	w20, w0
    596c:	cbz	w0, 59e4 <grub_acpi_find_fadt+0x13c>
    5970:	adrp	x1, 0 <_start>
    5974:	mov	x0, x20
    5978:	mov	x2, #0x4                   	// #4
    597c:	ldr	x1, [x1]
    5980:	bl	c450 <grub_memcmp>
    5984:	cbnz	w0, 59e4 <grub_acpi_find_fadt+0x13c>
    5988:	stp	x23, x24, [sp, #48]
    598c:	add	x20, x20, #0x24
    5990:	ldur	w23, [x20, #-32]
    5994:	sub	x23, x23, #0x24
    5998:	cmp	xzr, x23, lsr #2
    599c:	lsr	x23, x23, #2
    59a0:	b.eq	59e0 <grub_acpi_find_fadt+0x138>  // b.none
    59a4:	adrp	x1, 0 <_start>
    59a8:	add	x23, x20, x23, lsl #2
    59ac:	ldr	x22, [x1]
    59b0:	b	59bc <grub_acpi_find_fadt+0x114>
    59b4:	cmp	x20, x23
    59b8:	b.eq	59e0 <grub_acpi_find_fadt+0x138>  // b.none
    59bc:	ldr	w24, [x20]
    59c0:	mov	x1, x22
    59c4:	add	x20, x20, #0x4
    59c8:	mov	x2, #0x4                   	// #4
    59cc:	mov	w19, w24
    59d0:	mov	x0, x19
    59d4:	bl	c450 <grub_memcmp>
    59d8:	cbnz	w0, 59b4 <grub_acpi_find_fadt+0x10c>
    59dc:	cbnz	w24, 593c <grub_acpi_find_fadt+0x94>
    59e0:	ldp	x23, x24, [sp, #48]
    59e4:	ldr	x20, [x21, #24]
    59e8:	cbz	x20, 5a50 <grub_acpi_find_fadt+0x1a8>
    59ec:	adrp	x1, 0 <_start>
    59f0:	mov	x0, x20
    59f4:	mov	x2, #0x4                   	// #4
    59f8:	ldr	x1, [x1]
    59fc:	bl	c450 <grub_memcmp>
    5a00:	cbnz	w0, 5a50 <grub_acpi_find_fadt+0x1a8>
    5a04:	ldr	w21, [x20, #4]
    5a08:	add	x20, x20, #0x24
    5a0c:	sub	x21, x21, #0x24
    5a10:	cmp	xzr, x21, lsr #2
    5a14:	lsr	x21, x21, #2
    5a18:	b.eq	5a50 <grub_acpi_find_fadt+0x1a8>  // b.none
    5a1c:	adrp	x1, 0 <_start>
    5a20:	ldr	x22, [x1]
    5a24:	nop
    5a28:	mov	x1, x22
    5a2c:	ldr	x19, [x20]
    5a30:	mov	x2, #0x4                   	// #4
    5a34:	add	x20, x20, #0x8
    5a38:	mov	x0, x19
    5a3c:	bl	c450 <grub_memcmp>
    5a40:	cbz	w0, 5a54 <grub_acpi_find_fadt+0x1ac>
    5a44:	subs	x21, x21, #0x1
    5a48:	b.ne	5a28 <grub_acpi_find_fadt+0x180>  // b.any
    5a4c:	nop
    5a50:	mov	x19, #0x0                   	// #0
    5a54:	mov	x0, x19
    5a58:	ldp	x19, x20, [sp, #16]
    5a5c:	ldp	x21, x22, [sp, #32]
    5a60:	ldp	x29, x30, [sp], #64
    5a64:	ret
	...

0000000000005a80 <grub_machine_acpi_get_rsdpv1>:
    5a80:	stp	x29, x30, [sp, #-48]!
    5a84:	adrp	x0, 0 <_start>
    5a88:	mov	x29, sp
    5a8c:	stp	x21, x22, [sp, #32]
    5a90:	ldr	x21, [x0]
    5a94:	ldr	x1, [x21]
    5a98:	ldr	x0, [x1, #104]
    5a9c:	cbz	x0, 5b14 <grub_machine_acpi_get_rsdpv1+0x94>
    5aa0:	adrp	x2, 0 <_start>
    5aa4:	mov	x0, #0x0                   	// #0
    5aa8:	stp	x19, x20, [sp, #16]
    5aac:	mov	w20, #0x0                   	// #0
    5ab0:	ldr	x22, [x2]
    5ab4:	b	5acc <grub_machine_acpi_get_rsdpv1+0x4c>
    5ab8:	ldr	x1, [x21]
    5abc:	mov	w0, w20
    5ac0:	ldr	x2, [x1, #104]
    5ac4:	cmp	x2, w20, uxtw
    5ac8:	b.ls	5b10 <grub_machine_acpi_get_rsdpv1+0x90>  // b.plast
    5acc:	ldr	x3, [x1, #112]
    5ad0:	add	x0, x0, x0, lsl #1
    5ad4:	add	w20, w20, #0x1
    5ad8:	mov	x1, x22
    5adc:	lsl	x19, x0, #3
    5ae0:	mov	x2, #0x10                  	// #16
    5ae4:	add	x0, x3, x19
    5ae8:	bl	c450 <grub_memcmp>
    5aec:	cbnz	w0, 5ab8 <grub_machine_acpi_get_rsdpv1+0x38>
    5af0:	ldr	x0, [x21]
    5af4:	ldp	x21, x22, [sp, #32]
    5af8:	ldr	x0, [x0, #112]
    5afc:	add	x19, x0, x19
    5b00:	ldr	x0, [x19, #16]
    5b04:	ldp	x19, x20, [sp, #16]
    5b08:	ldp	x29, x30, [sp], #48
    5b0c:	ret
    5b10:	ldp	x19, x20, [sp, #16]
    5b14:	mov	x0, #0x0                   	// #0
    5b18:	ldp	x21, x22, [sp, #32]
    5b1c:	ldp	x29, x30, [sp], #48
    5b20:	ret
    5b24:	nop
	...

0000000000005b38 <grub_machine_acpi_get_rsdpv2>:
    5b38:	stp	x29, x30, [sp, #-48]!
    5b3c:	adrp	x0, 0 <_start>
    5b40:	mov	x29, sp
    5b44:	stp	x21, x22, [sp, #32]
    5b48:	ldr	x22, [x0]
    5b4c:	ldr	x2, [x22]
    5b50:	ldr	x0, [x2, #104]
    5b54:	cbz	x0, 5bd0 <grub_machine_acpi_get_rsdpv2+0x98>
    5b58:	adrp	x1, 0 <_start>
    5b5c:	mov	x0, #0x0                   	// #0
    5b60:	stp	x19, x20, [sp, #16]
    5b64:	mov	w20, #0x0                   	// #0
    5b68:	ldr	x21, [x1]
    5b6c:	add	x21, x21, #0x10
    5b70:	b	5b88 <grub_machine_acpi_get_rsdpv2+0x50>
    5b74:	ldr	x2, [x22]
    5b78:	mov	w0, w20
    5b7c:	ldr	x3, [x2, #104]
    5b80:	cmp	x3, w20, uxtw
    5b84:	b.ls	5bcc <grub_machine_acpi_get_rsdpv2+0x94>  // b.plast
    5b88:	ldr	x3, [x2, #112]
    5b8c:	add	x0, x0, x0, lsl #1
    5b90:	add	w20, w20, #0x1
    5b94:	mov	x1, x21
    5b98:	lsl	x19, x0, #3
    5b9c:	mov	x2, #0x10                  	// #16
    5ba0:	add	x0, x3, x19
    5ba4:	bl	c450 <grub_memcmp>
    5ba8:	cbnz	w0, 5b74 <grub_machine_acpi_get_rsdpv2+0x3c>
    5bac:	ldr	x0, [x22]
    5bb0:	ldp	x21, x22, [sp, #32]
    5bb4:	ldr	x0, [x0, #112]
    5bb8:	add	x19, x0, x19
    5bbc:	ldr	x0, [x19, #16]
    5bc0:	ldp	x19, x20, [sp, #16]
    5bc4:	ldp	x29, x30, [sp], #48
    5bc8:	ret
    5bcc:	ldp	x19, x20, [sp, #16]
    5bd0:	mov	x0, #0x0                   	// #0
    5bd4:	ldp	x21, x22, [sp, #32]
    5bd8:	ldp	x29, x30, [sp], #48
    5bdc:	ret
	...

0000000000005bf0 <memcpy>:
    5bf0:	b	bf40 <grub_memmove>
    5bf4:	nop

0000000000005bf8 <memmove>:
    5bf8:	b	bf40 <grub_memmove>
    5bfc:	nop

0000000000005c00 <memcmp>:
    5c00:	b	c450 <grub_memcmp>
    5c04:	nop

0000000000005c08 <memset>:
    5c08:	b	ccd0 <grub_memset>
    5c0c:	nop
    5c10:	stp	x29, x30, [sp, #-16]!
    5c14:	tst	x0, #0x1f
    5c18:	mov	x29, sp
    5c1c:	b.ne	5ca8 <memset+0xa0>  // b.any
    5c20:	adrp	x3, 0 <_start>
    5c24:	ldr	x3, [x3]
    5c28:	ldr	x3, [x3]
    5c2c:	str	x3, [x2]
    5c30:	cbz	x3, 5c64 <memset+0x5c>
    5c34:	nop
    5c38:	add	x4, x3, #0x20
    5c3c:	cmp	x0, x4
    5c40:	b.ls	5c58 <memset+0x50>  // b.plast
    5c44:	ldr	x4, [x3, #24]
    5c48:	add	x4, x3, x4
    5c4c:	add	x4, x4, #0x20
    5c50:	cmp	x0, x4
    5c54:	b.ls	5c74 <memset+0x6c>  // b.plast
    5c58:	ldr	x3, [x3, #8]
    5c5c:	str	x3, [x2]
    5c60:	cbnz	x3, 5c38 <memset+0x30>
    5c64:	adrp	x2, 0 <_start>
    5c68:	mov	x1, x0
    5c6c:	ldr	x0, [x2]
    5c70:	bl	d1c0 <grub_fatal>
    5c74:	ldur	x2, [x0, #-16]
    5c78:	sub	x0, x0, #0x20
    5c7c:	str	x0, [x1]
    5c80:	mov	x1, #0x2808                	// #10248
    5c84:	movk	x1, #0x2d3c, lsl #16
    5c88:	cmp	x2, x1
    5c8c:	b.eq	5cc8 <memset+0xc0>  // b.none
    5c90:	mov	x1, #0x8fa4                	// #36772
    5c94:	movk	x1, #0x6db0, lsl #16
    5c98:	cmp	x2, x1
    5c9c:	b.ne	5cb8 <memset+0xb0>  // b.any
    5ca0:	ldp	x29, x30, [sp], #16
    5ca4:	ret
    5ca8:	adrp	x2, 0 <_start>
    5cac:	mov	x1, x0
    5cb0:	ldr	x0, [x2]
    5cb4:	bl	d1c0 <grub_fatal>
    5cb8:	adrp	x3, 0 <_start>
    5cbc:	mov	x1, x0
    5cc0:	ldr	x0, [x3]
    5cc4:	bl	d1c0 <grub_fatal>
    5cc8:	adrp	x2, 0 <_start>
    5ccc:	mov	x1, x0
    5cd0:	ldr	x0, [x2]
    5cd4:	bl	d1c0 <grub_fatal>
	...
    5d00:	stp	x29, x30, [sp, #-32]!
    5d04:	mov	x29, sp
    5d08:	add	x1, sp, #0x10
    5d0c:	add	x2, sp, #0x18
    5d10:	bl	5c10 <memset+0x8>
    5d14:	ldr	x6, [sp, #24]
    5d18:	mov	x0, #0x8fa4                	// #36772
    5d1c:	movk	x0, #0x6db0, lsl #16
    5d20:	ldr	x4, [x6]
    5d24:	ldr	x1, [x4, #16]
    5d28:	cmp	x1, x0
    5d2c:	b.eq	5dcc <memset+0x1c4>  // b.none
    5d30:	mov	x5, #0x2808                	// #10248
    5d34:	movk	x5, #0x2d3c, lsl #16
    5d38:	ldr	x1, [x4]
    5d3c:	ldr	x3, [sp, #16]
    5d40:	b	5d4c <memset+0x144>
    5d44:	mov	x4, x1
    5d48:	mov	x1, x0
    5d4c:	cmp	x1, x3
    5d50:	b.ls	5d60 <memset+0x158>  // b.plast
    5d54:	ldr	x0, [x1]
    5d58:	cmp	x3, x0
    5d5c:	b.hi	5d84 <memset+0x17c>  // b.pmore
    5d60:	ldr	x2, [x1, #16]
    5d64:	cmp	x2, x5
    5d68:	b.ne	5e40 <memset+0x238>  // b.any
    5d6c:	ldr	x0, [x1]
    5d70:	cmp	x1, x0
    5d74:	b.hi	5d44 <memset+0x13c>  // b.pmore
    5d78:	cmp	x1, x3
    5d7c:	ccmp	x0, x3, #0x0, ls  // ls = plast
    5d80:	b.cs	5d44 <memset+0x13c>  // b.hs, b.nlast
    5d84:	mov	x2, #0x2808                	// #10248
    5d88:	str	x0, [x3]
    5d8c:	movk	x2, #0x2d3c, lsl #16
    5d90:	str	x2, [x3, #16]
    5d94:	ldr	x2, [x3, #8]
    5d98:	str	x3, [x1]
    5d9c:	ldr	x0, [x3]
    5da0:	ldr	x5, [x0, #8]
    5da4:	add	x7, x0, x5, lsl #5
    5da8:	cmp	x3, x7
    5dac:	b.eq	5e10 <memset+0x208>  // b.none
    5db0:	str	x1, [x6]
    5db4:	add	x0, x3, x2, lsl #5
    5db8:	cmp	x1, x0
    5dbc:	b.eq	5dec <memset+0x1e4>  // b.none
    5dc0:	str	x1, [x6]
    5dc4:	ldp	x29, x30, [sp], #32
    5dc8:	ret
    5dcc:	ldr	x0, [sp, #16]
    5dd0:	mov	x1, #0x2808                	// #10248
    5dd4:	movk	x1, #0x2d3c, lsl #16
    5dd8:	str	x0, [x0]
    5ddc:	str	x1, [x0, #16]
    5de0:	str	x0, [x6]
    5de4:	ldp	x29, x30, [sp], #32
    5de8:	ret
    5dec:	cmp	x1, x4
    5df0:	str	xzr, [x1, #16]
    5df4:	ldr	x0, [x1, #8]
    5df8:	csel	x4, x4, x3, ne  // ne = any
    5dfc:	mov	x1, x4
    5e00:	add	x2, x0, x2
    5e04:	str	x2, [x3, #8]
    5e08:	str	x3, [x4]
    5e0c:	b	5dc0 <memset+0x1b8>
    5e10:	str	xzr, [x3, #16]
    5e14:	add	x2, x5, x2
    5e18:	str	x2, [x0, #8]
    5e1c:	str	x0, [x1]
    5e20:	ldr	x3, [x3]
    5e24:	str	x3, [sp, #16]
    5e28:	ldr	x2, [x3, #8]
    5e2c:	str	x1, [x6]
    5e30:	add	x0, x3, x2, lsl #5
    5e34:	cmp	x1, x0
    5e38:	b.ne	5dc0 <memset+0x1b8>  // b.any
    5e3c:	b	5dec <memset+0x1e4>
    5e40:	adrp	x0, 0 <_start>
    5e44:	ldr	x0, [x0]
    5e48:	bl	d1c0 <grub_fatal>
    5e4c:	nop
	...

0000000000005e58 <grub_mm_init_region>:
    5e58:	mov	x2, #0xffffffffffffefff    	// #-4097
    5e5c:	cmp	x0, x2
    5e60:	b.hi	5efc <grub_mm_init_region+0xa4>  // b.pmore
    5e64:	stp	x29, x30, [sp, #-32]!
    5e68:	adrp	x5, 0 <_start>
    5e6c:	mvn	x4, x1
    5e70:	mov	x29, sp
    5e74:	ldr	x6, [x5]
    5e78:	add	x3, x0, #0x1, lsl #12
    5e7c:	cmp	x3, x4
    5e80:	mov	x2, #0xfffffffffffff000    	// #-4096
    5e84:	sub	x2, x2, x0
    5e88:	ldr	x4, [x6]
    5e8c:	csel	x1, x2, x1, hi  // hi = pmore
    5e90:	cbz	x4, 5f04 <grub_mm_init_region+0xac>
    5e94:	mov	x2, x4
    5e98:	stp	x19, x20, [sp, #16]
    5e9c:	mov	x20, x6
    5ea0:	b	5eb0 <grub_mm_init_region+0x58>
    5ea4:	add	x20, x2, #0x8
    5ea8:	ldr	x2, [x2, #8]
    5eac:	cbz	x2, 5f00 <grub_mm_init_region+0xa8>
    5eb0:	ldr	x3, [x2, #16]
    5eb4:	add	x3, x1, x3
    5eb8:	add	x5, x0, x3
    5ebc:	cmp	x2, x5
    5ec0:	b.ne	5ea4 <grub_mm_init_region+0x4c>  // b.any
    5ec4:	add	x0, x0, #0x1f
    5ec8:	cmp	xzr, x3, lsr #5
    5ecc:	and	x19, x0, #0xffffffffffffffe0
    5ed0:	lsr	x4, x3, #5
    5ed4:	ldp	x0, x1, [x2]
    5ed8:	stp	x0, x1, [x19]
    5edc:	ldp	x0, x1, [x2, #16]
    5ee0:	stp	x0, x1, [x19, #16]
    5ee4:	str	x3, [x19, #16]
    5ee8:	b.ne	5f88 <grub_mm_init_region+0x130>  // b.any
    5eec:	str	x19, [x20]
    5ef0:	ldp	x19, x20, [sp, #16]
    5ef4:	ldp	x29, x30, [sp], #32
    5ef8:	ret
    5efc:	ret
    5f00:	ldp	x19, x20, [sp, #16]
    5f04:	add	x2, x0, #0x1f
    5f08:	and	x2, x2, #0xffffffffffffffe0
    5f0c:	add	x5, x2, #0x20
    5f10:	sub	x3, x5, x0
    5f14:	add	x3, x3, #0x20
    5f18:	cmp	x3, x1
    5f1c:	b.hi	5ef4 <grub_mm_init_region+0x9c>  // b.pmore
    5f20:	sub	x0, x2, x0
    5f24:	mov	x3, #0x2808                	// #10248
    5f28:	sub	x1, x1, x0
    5f2c:	movk	x3, #0x2d3c, lsl #16
    5f30:	sub	x1, x1, #0x20
    5f34:	str	x5, [x2]
    5f38:	str	x0, [x2, #16]
    5f3c:	mov	x0, x6
    5f40:	str	x5, [x2, #32]
    5f44:	str	x3, [x2, #48]
    5f48:	and	x3, x1, #0xffffffffffffffe0
    5f4c:	lsr	x1, x1, #5
    5f50:	str	x3, [x2, #24]
    5f54:	str	x1, [x2, #40]
    5f58:	cbnz	x4, 5f6c <grub_mm_init_region+0x114>
    5f5c:	b	5f78 <grub_mm_init_region+0x120>
    5f60:	add	x0, x4, #0x8
    5f64:	ldr	x4, [x4, #8]
    5f68:	cbz	x4, 5f78 <grub_mm_init_region+0x120>
    5f6c:	ldr	x1, [x4, #24]
    5f70:	cmp	x3, x1
    5f74:	b.cs	5f60 <grub_mm_init_region+0x108>  // b.hs, b.nlast
    5f78:	str	x2, [x0]
    5f7c:	str	x4, [x2, #8]
    5f80:	ldp	x29, x30, [sp], #32
    5f84:	ret
    5f88:	ldr	x1, [x19, #24]
    5f8c:	and	x2, x3, #0xffffffffffffffe0
    5f90:	mov	x5, #0x8fa4                	// #36772
    5f94:	and	x3, x3, #0x1f
    5f98:	add	x1, x1, x2
    5f9c:	movk	x5, #0x6db0, lsl #16
    5fa0:	stp	x3, x1, [x19, #16]
    5fa4:	add	x0, x19, #0x40
    5fa8:	stp	x4, x5, [x19, #40]
    5fac:	str	x19, [x20]
    5fb0:	bl	5d00 <memset+0xf8>
    5fb4:	b	5eec <grub_mm_init_region+0x94>
	...

0000000000005fc0 <grub_memalign>:
    5fc0:	stp	x29, x30, [sp, #-80]!
    5fc4:	adrp	x2, 0 <_start>
    5fc8:	mov	x29, sp
    5fcc:	stp	x21, x22, [sp, #32]
    5fd0:	ldr	x21, [x2]
    5fd4:	ldr	x5, [x21]
    5fd8:	cbz	x5, 6154 <grub_memalign+0x194>
    5fdc:	mvn	x2, x0
    5fe0:	cmp	x2, x1
    5fe4:	b.cc	6154 <grub_memalign+0x194>  // b.lo, b.ul, b.last
    5fe8:	add	x3, x1, x0
    5fec:	mov	x2, #0xffffffffffefffff    	// #-1048577
    5ff0:	cmp	x3, x2
    5ff4:	b.hi	6154 <grub_memalign+0x194>  // b.pmore
    5ff8:	lsr	x22, x0, #5
    5ffc:	stp	x19, x20, [sp, #16]
    6000:	add	x19, x1, #0x1f
    6004:	cmp	x22, #0x0
    6008:	stp	x23, x24, [sp, #48]
    600c:	lsr	x19, x19, #5
    6010:	csinc	x20, x22, xzr, ne  // ne = any
    6014:	mov	x23, #0x2808                	// #10248
    6018:	add	x19, x19, #0x1
    601c:	sub	x24, x20, #0x1
    6020:	str	x25, [sp, #64]
    6024:	mov	x25, #0x8fa4                	// #36772
    6028:	mov	w8, #0x2                   	// #2
    602c:	movk	x23, #0x2d3c, lsl #16
    6030:	movk	x25, #0x6db0, lsl #16
    6034:	nop
    6038:	ldr	x4, [x5]
    603c:	ldr	x0, [x4, #16]
    6040:	cmp	x0, x25
    6044:	b.eq	6128 <grub_memalign+0x168>  // b.none
    6048:	mov	x6, x4
    604c:	ldr	x1, [x4]
    6050:	b	6064 <grub_memalign+0xa4>
    6054:	cmp	x4, x1
    6058:	b.eq	6128 <grub_memalign+0x168>  // b.none
    605c:	mov	x6, x1
    6060:	ldr	x1, [x1]
    6064:	add	x0, x1, #0x20
    6068:	ands	x3, x24, x0, lsr #5
    606c:	sub	x2, x20, x3
    6070:	csel	x3, x2, x3, ne  // ne = any
    6074:	cbz	x1, 61d8 <grub_memalign+0x218>
    6078:	ldr	x2, [x1, #16]
    607c:	cmp	x2, x23
    6080:	b.ne	61e4 <grub_memalign+0x224>  // b.any
    6084:	ldr	x2, [x1, #8]
    6088:	add	x7, x19, x3
    608c:	cmp	x2, x7
    6090:	b.cc	6054 <grub_memalign+0x94>  // b.lo, b.ul, b.last
    6094:	sub	x7, x2, x19
    6098:	neg	x20, x20
    609c:	sub	x4, x7, x3
    60a0:	and	x20, x4, x20
    60a4:	adds	x3, x3, x20
    60a8:	ccmp	x19, x2, #0x0, eq  // eq = none
    60ac:	b.eq	61c0 <grub_memalign+0x200>  // b.none
    60b0:	cmp	x22, #0x1
    60b4:	b.ls	6190 <grub_memalign+0x1d0>  // b.plast
    60b8:	add	x4, x19, x3
    60bc:	cmp	x2, x4
    60c0:	b.eq	6190 <grub_memalign+0x1d0>  // b.none
    60c4:	lsl	x9, x4, #5
    60c8:	add	x8, x1, x9
    60cc:	cbnz	x3, 61a0 <grub_memalign+0x1e0>
    60d0:	sub	x2, x2, x4
    60d4:	stp	x2, x23, [x8, #8]
    60d8:	cmp	x1, x6
    60dc:	ldr	x2, [x1]
    60e0:	str	x2, [x1, x9]
    60e4:	str	x8, [x6]
    60e8:	b.eq	61cc <grub_memalign+0x20c>  // b.none
    60ec:	nop
    60f0:	mov	x2, #0x8fa4                	// #36772
    60f4:	cmp	x19, #0x3ff
    60f8:	movk	x2, #0x6db0, lsl #16
    60fc:	stp	x19, x2, [x1, #8]
    6100:	b.ls	6174 <grub_memalign+0x1b4>  // b.plast
    6104:	ldr	x2, [x5]
    6108:	cmp	x1, x2
    610c:	b.eq	6174 <grub_memalign+0x1b4>  // b.none
    6110:	ldp	x19, x20, [sp, #16]
    6114:	ldp	x21, x22, [sp, #32]
    6118:	ldp	x23, x24, [sp, #48]
    611c:	ldr	x25, [sp, #64]
    6120:	ldp	x29, x30, [sp], #80
    6124:	ret
    6128:	ldr	x5, [x5, #8]
    612c:	cbnz	x5, 6038 <grub_memalign+0x78>
    6130:	cmp	w8, #0x1
    6134:	b.eq	6148 <grub_memalign+0x188>  // b.none
    6138:	bl	6e60 <grub_disk_cache_invalidate_all>
    613c:	ldr	x5, [x21]
    6140:	mov	w8, #0x1                   	// #1
    6144:	cbnz	x5, 6038 <grub_memalign+0x78>
    6148:	ldp	x19, x20, [sp, #16]
    614c:	ldp	x23, x24, [sp, #48]
    6150:	ldr	x25, [sp, #64]
    6154:	adrp	x1, 0 <_start>
    6158:	mov	w0, #0x3                   	// #3
    615c:	ldr	x1, [x1]
    6160:	bl	9bc8 <grub_error>
    6164:	mov	x0, #0x0                   	// #0
    6168:	ldp	x21, x22, [sp, #32]
    616c:	ldp	x29, x30, [sp], #80
    6170:	ret
    6174:	ldp	x19, x20, [sp, #16]
    6178:	ldp	x23, x24, [sp, #48]
    617c:	ldr	x25, [sp, #64]
    6180:	str	x6, [x5]
    6184:	ldp	x21, x22, [sp, #32]
    6188:	ldp	x29, x30, [sp], #80
    618c:	ret
    6190:	str	x7, [x1, #8]
    6194:	add	x1, x1, x7, lsl #5
    6198:	add	x0, x1, #0x20
    619c:	b	60f0 <grub_memalign+0x130>
    61a0:	sub	x7, x7, x3
    61a4:	stp	x7, x23, [x8, #8]
    61a8:	str	x1, [x1, x9]
    61ac:	str	x3, [x1, #8]
    61b0:	add	x1, x1, x3, lsl #5
    61b4:	add	x0, x1, #0x20
    61b8:	str	x8, [x6]
    61bc:	b	60f0 <grub_memalign+0x130>
    61c0:	ldr	x2, [x1]
    61c4:	str	x2, [x6]
    61c8:	b	60f0 <grub_memalign+0x130>
    61cc:	mov	x6, x8
    61d0:	str	x8, [x8]
    61d4:	b	60f0 <grub_memalign+0x130>
    61d8:	adrp	x0, 0 <_start>
    61dc:	ldr	x0, [x0]
    61e0:	bl	d1c0 <grub_fatal>
    61e4:	adrp	x0, 0 <_start>
    61e8:	ldr	x0, [x0]
    61ec:	bl	d1c0 <grub_fatal>
	...

0000000000006210 <grub_malloc>:
    6210:	mov	x1, x0
    6214:	mov	x0, #0x0                   	// #0
    6218:	b	5fc0 <grub_memalign>
    621c:	nop

0000000000006220 <grub_zalloc>:
    6220:	stp	x29, x30, [sp, #-32]!
    6224:	mov	x29, sp
    6228:	stp	x19, x20, [sp, #16]
    622c:	mov	x20, x0
    6230:	mov	x1, x20
    6234:	mov	x0, #0x0                   	// #0
    6238:	bl	5fc0 <grub_memalign>
    623c:	mov	x19, x0
    6240:	cbz	x0, 6250 <grub_zalloc+0x30>
    6244:	mov	x2, x20
    6248:	mov	w1, #0x0                   	// #0
    624c:	bl	ccd0 <grub_memset>
    6250:	mov	x0, x19
    6254:	ldp	x19, x20, [sp, #16]
    6258:	ldp	x29, x30, [sp], #32
    625c:	ret

0000000000006260 <grub_free>:
    6260:	cbz	x0, 6268 <grub_free+0x8>
    6264:	b	5d00 <memset+0xf8>
    6268:	ret
    626c:	nop

0000000000006270 <grub_realloc>:
    6270:	stp	x29, x30, [sp, #-64]!
    6274:	mov	x29, sp
    6278:	str	x21, [sp, #32]
    627c:	cbz	x0, 6330 <grub_realloc+0xc0>
    6280:	stp	x19, x20, [sp, #16]
    6284:	mov	x20, x1
    6288:	cbz	x1, 6314 <grub_realloc+0xa4>
    628c:	mov	x19, x0
    6290:	add	x2, sp, #0x38
    6294:	add	x1, sp, #0x30
    6298:	bl	5c10 <memset+0x8>
    629c:	ldr	x0, [sp, #48]
    62a0:	add	x2, x20, #0x1f
    62a4:	mov	x21, x19
    62a8:	lsr	x2, x2, #5
    62ac:	ldr	x0, [x0, #8]
    62b0:	add	x2, x2, #0x1
    62b4:	cmp	x0, x2
    62b8:	b.cc	62d0 <grub_realloc+0x60>  // b.lo, b.ul, b.last
    62bc:	ldp	x19, x20, [sp, #16]
    62c0:	mov	x0, x21
    62c4:	ldr	x21, [sp, #32]
    62c8:	ldp	x29, x30, [sp], #64
    62cc:	ret
    62d0:	mov	x1, x20
    62d4:	mov	x0, #0x0                   	// #0
    62d8:	bl	5fc0 <grub_memalign>
    62dc:	mov	x21, x0
    62e0:	cbz	x0, 62bc <grub_realloc+0x4c>
    62e4:	ldr	x2, [sp, #48]
    62e8:	mov	x1, x19
    62ec:	ldr	x2, [x2, #8]
    62f0:	lsl	x2, x2, #5
    62f4:	bl	bf40 <grub_memmove>
    62f8:	mov	x0, x19
    62fc:	bl	5d00 <memset+0xf8>
    6300:	mov	x0, x21
    6304:	ldp	x19, x20, [sp, #16]
    6308:	ldr	x21, [sp, #32]
    630c:	ldp	x29, x30, [sp], #64
    6310:	ret
    6314:	bl	5d00 <memset+0xf8>
    6318:	mov	x21, #0x0                   	// #0
    631c:	mov	x0, x21
    6320:	ldp	x19, x20, [sp, #16]
    6324:	ldr	x21, [sp, #32]
    6328:	ldp	x29, x30, [sp], #64
    632c:	ret
    6330:	bl	5fc0 <grub_memalign>
    6334:	mov	x21, x0
    6338:	b	62c0 <grub_realloc+0x50>
    633c:	nop

0000000000006340 <grub_get_time_ms>:
    6340:	adrp	x0, 0 <_start>
    6344:	ldr	x0, [x0]
    6348:	ldr	x0, [x0]
    634c:	mov	x16, x0
    6350:	br	x16
    6354:	nop
	...

0000000000006360 <grub_install_get_time_ms>:
    6360:	adrp	x1, 0 <_start>
    6364:	ldr	x1, [x1]
    6368:	str	x0, [x1]
    636c:	ret
	...

0000000000006378 <grub_millisleep>:
    6378:	stp	x29, x30, [sp, #-32]!
    637c:	mov	x29, sp
    6380:	stp	x19, x20, [sp, #16]
    6384:	mov	w19, w0
    6388:	bl	6340 <grub_get_time_ms>
    638c:	mov	x20, x0
    6390:	bl	6340 <grub_get_time_ms>
    6394:	sub	x0, x0, x20
    6398:	cmp	x0, x19
    639c:	b.cc	6390 <grub_millisleep+0x18>  // b.lo, b.ul, b.last
    63a0:	ldp	x19, x20, [sp, #16]
    63a4:	ldp	x29, x30, [sp], #32
    63a8:	ret
    63ac:	nop

00000000000063b0 <grub_register_command_prio>:
    63b0:	stp	x29, x30, [sp, #-80]!
    63b4:	mov	x29, sp
    63b8:	stp	x19, x20, [sp, #16]
    63bc:	mov	x19, x1
    63c0:	stp	x21, x22, [sp, #32]
    63c4:	mov	x21, x0
    63c8:	mov	x0, #0x48                  	// #72
    63cc:	stp	x23, x24, [sp, #48]
    63d0:	mov	x23, x2
    63d4:	mov	w24, w4
    63d8:	str	x25, [sp, #64]
    63dc:	mov	x25, x3
    63e0:	bl	6220 <grub_zalloc>
    63e4:	mov	x20, x0
    63e8:	cbz	x0, 647c <grub_register_command_prio+0xcc>
    63ec:	adrp	x1, 0 <_start>
    63f0:	adrp	x0, 0 <_start>
    63f4:	str	x19, [x20, #32]
    63f8:	cmp	x23, #0x0
    63fc:	ldr	x22, [x1]
    6400:	str	x21, [x20, #16]
    6404:	ldr	x0, [x0]
    6408:	str	w24, [x20, #24]
    640c:	ldr	x19, [x22]
    6410:	csel	x23, x23, x0, ne  // ne = any
    6414:	str	wzr, [x20, #40]
    6418:	stp	x23, x25, [x20, #48]
    641c:	cbz	x19, 64d8 <grub_register_command_prio+0x128>
    6420:	mov	w23, #0x0                   	// #0
    6424:	b	6454 <grub_register_command_prio+0xa4>
    6428:	b.ne	6440 <grub_register_command_prio+0x90>  // b.any
    642c:	ldr	w0, [x19, #24]
    6430:	ldr	w1, [x20, #24]
    6434:	cmp	w1, w0, uxtb
    6438:	b.ge	64cc <grub_register_command_prio+0x11c>  // b.tcont
    643c:	mov	w23, #0x1                   	// #1
    6440:	ldr	x0, [x19]
    6444:	mov	x22, x19
    6448:	mov	x19, x0
    644c:	cbz	x0, 64c0 <grub_register_command_prio+0x110>
    6450:	ldr	x21, [x20, #16]
    6454:	mov	x0, x21
    6458:	ldr	x1, [x19, #16]
    645c:	bl	c488 <grub_strcmp>
    6460:	cmp	w0, #0x0
    6464:	b.ge	6428 <grub_register_command_prio+0x78>  // b.tcont
    6468:	str	x20, [x22]
    646c:	str	x19, [x20]
    6470:	str	x20, [x19, #8]
    6474:	str	x22, [x20, #8]
    6478:	cbz	w23, 6498 <grub_register_command_prio+0xe8>
    647c:	mov	x0, x20
    6480:	ldp	x19, x20, [sp, #16]
    6484:	ldp	x21, x22, [sp, #32]
    6488:	ldp	x23, x24, [sp, #48]
    648c:	ldr	x25, [sp, #64]
    6490:	ldp	x29, x30, [sp], #80
    6494:	ret
    6498:	ldr	w24, [x20, #24]
    649c:	orr	w24, w24, #0x100
    64a0:	str	w24, [x20, #24]
    64a4:	mov	x0, x20
    64a8:	ldp	x19, x20, [sp, #16]
    64ac:	ldp	x21, x22, [sp, #32]
    64b0:	ldp	x23, x24, [sp, #48]
    64b4:	ldr	x25, [sp, #64]
    64b8:	ldp	x29, x30, [sp], #80
    64bc:	ret
    64c0:	str	x20, [x22]
    64c4:	str	xzr, [x20]
    64c8:	b	6474 <grub_register_command_prio+0xc4>
    64cc:	and	w0, w0, #0xfffffeff
    64d0:	str	w0, [x19, #24]
    64d4:	b	6468 <grub_register_command_prio+0xb8>
    64d8:	str	x20, [x22]
    64dc:	str	xzr, [x20]
    64e0:	str	x22, [x20, #8]
    64e4:	b	649c <grub_register_command_prio+0xec>
	...

00000000000064f8 <grub_unregister_command>:
    64f8:	stp	x29, x30, [sp, #-32]!
    64fc:	mov	x29, sp
    6500:	str	x19, [sp, #16]
    6504:	mov	x19, x0
    6508:	ldr	w0, [x0, #24]
    650c:	tbz	w0, #8, 6524 <grub_unregister_command+0x2c>
    6510:	ldr	x0, [x19]
    6514:	cbz	x0, 6524 <grub_unregister_command+0x2c>
    6518:	ldr	w1, [x0, #24]
    651c:	orr	w1, w1, #0x100
    6520:	str	w1, [x0, #24]
    6524:	mov	x0, x19
    6528:	bl	aa38 <grub_list_remove>
    652c:	mov	x0, x19
    6530:	ldr	x19, [sp, #16]
    6534:	ldp	x29, x30, [sp], #32
    6538:	b	6260 <grub_free>
    653c:	nop
    6540:	stp	x29, x30, [sp, #-16]!
    6544:	mov	x29, sp
    6548:	ldrb	w1, [x1]
    654c:	tbnz	w1, #0, 6574 <grub_unregister_command+0x7c>
    6550:	adrp	x3, 0 <_start>
    6554:	adrp	x1, 0 <_start>
    6558:	ldr	x2, [x1]
    655c:	mov	x1, x0
    6560:	ldr	x0, [x3]
    6564:	bl	c078 <grub_err_printf>
    6568:	mov	w0, #0x0                   	// #0
    656c:	ldp	x29, x30, [sp], #16
    6570:	ret
    6574:	adrp	x3, 0 <_start>
    6578:	adrp	x1, 0 <_start>
    657c:	ldr	x2, [x1]
    6580:	mov	x1, x0
    6584:	ldr	x0, [x3]
    6588:	bl	c078 <grub_err_printf>
    658c:	mov	w0, #0x0                   	// #0
    6590:	ldp	x29, x30, [sp], #16
    6594:	ret
	...
    65b0:	stp	x29, x30, [sp, #-16]!
    65b4:	adrp	x2, 0 <_start>
    65b8:	mov	x1, x0
    65bc:	mov	x29, sp
    65c0:	ldr	x0, [x2]
    65c4:	bl	c078 <grub_err_printf>
    65c8:	mov	w0, #0x0                   	// #0
    65cc:	ldp	x29, x30, [sp], #16
    65d0:	ret
    65d4:	nop
	...
    65e0:	stp	x29, x30, [sp, #-64]!
    65e4:	cmp	w1, #0x0
    65e8:	mov	x29, sp
    65ec:	stp	x19, x20, [sp, #16]
    65f0:	b.le	66a0 <grub_unregister_command+0x1a8>
    65f4:	ldr	x0, [x2]
    65f8:	stp	x21, x22, [sp, #32]
    65fc:	mov	x21, x2
    6600:	bl	9f00 <grub_file_get_device_name>
    6604:	mov	x20, x0
    6608:	adrp	x1, 0 <_start>
    660c:	ldr	x19, [x1]
    6610:	ldr	w1, [x19]
    6614:	cbz	w1, 6634 <grub_unregister_command+0x13c>
    6618:	mov	x0, x20
    661c:	bl	6260 <grub_free>
    6620:	ldr	w0, [x19]
    6624:	ldp	x19, x20, [sp, #16]
    6628:	ldp	x21, x22, [sp, #32]
    662c:	ldp	x29, x30, [sp], #64
    6630:	ret
    6634:	bl	6b08 <grub_device_open>
    6638:	mov	x22, x0
    663c:	cbz	x0, 6618 <grub_unregister_command+0x120>
    6640:	str	x23, [sp, #48]
    6644:	bl	a740 <grub_fs_probe>
    6648:	mov	x23, x0
    664c:	mov	w1, #0x29                  	// #41
    6650:	ldr	x0, [x21]
    6654:	bl	c528 <grub_strchr>
    6658:	add	x1, x0, #0x1
    665c:	cbz	x0, 6720 <grub_unregister_command+0x228>
    6660:	ldrb	w0, [x1]
    6664:	cbnz	w0, 66e4 <grub_unregister_command+0x1ec>
    6668:	cbz	x20, 673c <grub_unregister_command+0x244>
    666c:	ldr	w0, [x19]
    6670:	cmp	w0, #0x8
    6674:	b.eq	6728 <grub_unregister_command+0x230>  // b.none
    6678:	cbz	x23, 6730 <grub_unregister_command+0x238>
    667c:	ldr	x2, [x23, #16]
    6680:	adrp	x0, 0 <_start>
    6684:	mov	x1, x20
    6688:	ldr	x0, [x0]
    668c:	bl	c078 <grub_err_printf>
    6690:	mov	x0, x22
    6694:	bl	6d60 <grub_device_close>
    6698:	ldr	x23, [sp, #48]
    669c:	b	6618 <grub_unregister_command+0x120>
    66a0:	adrp	x0, 0 <_start>
    66a4:	mov	x1, #0x0                   	// #0
    66a8:	ldr	x0, [x0]
    66ac:	bl	6dc0 <grub_device_iterate>
    66b0:	adrp	x1, 0 <_start>
    66b4:	adrp	x0, 0 <_start>
    66b8:	ldr	x1, [x1]
    66bc:	ldr	x0, [x0]
    66c0:	ldr	x1, [x1]
    66c4:	blr	x1
    66c8:	bl	e590 <grub_refresh>
    66cc:	adrp	x0, 0 <_start>
    66d0:	ldr	x19, [x0]
    66d4:	ldr	w0, [x19]
    66d8:	ldp	x19, x20, [sp, #16]
    66dc:	ldp	x29, x30, [sp], #64
    66e0:	ret
    66e4:	cbz	x23, 6690 <grub_unregister_command+0x198>
    66e8:	adrp	x0, 0 <_start>
    66ec:	mov	x3, #0x0                   	// #0
    66f0:	ldr	x4, [x23, #24]
    66f4:	ldr	x2, [x0]
    66f8:	mov	x0, x22
    66fc:	blr	x4
    6700:	adrp	x1, 0 <_start>
    6704:	adrp	x0, 0 <_start>
    6708:	ldr	x1, [x1]
    670c:	ldr	x0, [x0]
    6710:	ldr	x1, [x1]
    6714:	blr	x1
    6718:	bl	e590 <grub_refresh>
    671c:	b	6690 <grub_unregister_command+0x198>
    6720:	ldr	x1, [x21]
    6724:	b	6660 <grub_unregister_command+0x168>
    6728:	str	wzr, [x19]
    672c:	b	6678 <grub_unregister_command+0x180>
    6730:	adrp	x0, 0 <_start>
    6734:	ldr	x2, [x0]
    6738:	b	6680 <grub_unregister_command+0x188>
    673c:	adrp	x1, 0 <_start>
    6740:	mov	w0, #0x12                  	// #18
    6744:	ldr	x1, [x1]
    6748:	bl	9bc8 <grub_error>
    674c:	b	6690 <grub_unregister_command+0x198>
	...
    6790:	cbz	w1, 67dc <grub_unregister_command+0x2e4>
    6794:	stp	x29, x30, [sp, #-16]!
    6798:	mov	x29, sp
    679c:	ldr	x0, [x2]
    67a0:	mov	w2, #0x28                  	// #40
    67a4:	ldrb	w1, [x0]
    67a8:	and	w3, w1, #0xfffffffb
    67ac:	cmp	w3, #0x2b
    67b0:	ccmp	w1, w2, #0x4, ne  // ne = any
    67b4:	b.ne	67d0 <grub_unregister_command+0x2d8>  // b.any
    67b8:	bl	91b8 <grub_dl_load_file>
    67bc:	cbz	x0, 67c4 <grub_unregister_command+0x2cc>
    67c0:	bl	82a8 <grub_dl_ref>
    67c4:	mov	w0, #0x0                   	// #0
    67c8:	ldp	x29, x30, [sp], #16
    67cc:	ret
    67d0:	bl	8348 <grub_dl_load>
    67d4:	cbnz	x0, 67c0 <grub_unregister_command+0x2c8>
    67d8:	b	67c4 <grub_unregister_command+0x2cc>
    67dc:	adrp	x1, 0 <_start>
    67e0:	mov	w0, #0x12                  	// #18
    67e4:	ldr	x1, [x1]
    67e8:	b	9bc8 <grub_error>
    67ec:	nop
	...
    67f8:	stp	x29, x30, [sp, #-48]!
    67fc:	cmp	w1, #0x0
    6800:	mov	x29, sp
    6804:	stp	x19, x20, [sp, #16]
    6808:	b.le	684c <grub_unregister_command+0x354>
    680c:	ldr	x20, [x2]
    6810:	mov	w1, #0x3d                  	// #61
    6814:	mov	x0, x20
    6818:	bl	c528 <grub_strchr>
    681c:	mov	x19, x0
    6820:	cbz	x0, 68a0 <grub_unregister_command+0x3a8>
    6824:	mov	x1, x0
    6828:	mov	x0, x20
    682c:	strb	wzr, [x1], #1
    6830:	bl	9508 <grub_env_set>
    6834:	mov	w0, #0x3d                  	// #61
    6838:	strb	w0, [x19]
    683c:	mov	w0, #0x0                   	// #0
    6840:	ldp	x19, x20, [sp, #16]
    6844:	ldp	x29, x30, [sp], #48
    6848:	ret
    684c:	bl	9898 <grub_env_update_get_sorted>
    6850:	mov	x19, x0
    6854:	cbz	x0, 683c <grub_unregister_command+0x344>
    6858:	adrp	x0, 0 <_start>
    685c:	str	x21, [sp, #32]
    6860:	ldr	x21, [x0]
    6864:	nop
    6868:	ldr	x20, [x19]
    686c:	mov	x0, x20
    6870:	bl	96e8 <grub_env_get>
    6874:	mov	x1, x20
    6878:	mov	x2, x0
    687c:	mov	x0, x21
    6880:	bl	c078 <grub_err_printf>
    6884:	ldr	x19, [x19, #48]
    6888:	cbnz	x19, 6868 <grub_unregister_command+0x370>
    688c:	mov	w0, #0x0                   	// #0
    6890:	ldp	x19, x20, [sp, #16]
    6894:	ldr	x21, [sp, #32]
    6898:	ldp	x29, x30, [sp], #48
    689c:	ret
    68a0:	adrp	x1, 0 <_start>
    68a4:	mov	w0, #0x12                  	// #18
    68a8:	ldp	x19, x20, [sp, #16]
    68ac:	ldp	x29, x30, [sp], #48
    68b0:	ldr	x1, [x1]
    68b4:	b	9bc8 <grub_error>
	...
    68c8:	cmp	w1, #0x0
    68cc:	b.le	68ec <grub_unregister_command+0x3f4>
    68d0:	stp	x29, x30, [sp, #-16]!
    68d4:	mov	x29, sp
    68d8:	ldr	x0, [x2]
    68dc:	bl	97a0 <grub_env_unset>
    68e0:	mov	w0, #0x0                   	// #0
    68e4:	ldp	x29, x30, [sp], #16
    68e8:	ret
    68ec:	adrp	x1, 0 <_start>
    68f0:	mov	w0, #0x12                  	// #18
    68f4:	ldr	x1, [x1]
    68f8:	b	9bc8 <grub_error>
    68fc:	nop
	...

0000000000006908 <grub_register_core_commands>:
    6908:	stp	x29, x30, [sp, #-16]!
    690c:	adrp	x3, 0 <_start>
    6910:	adrp	x2, 0 <_start>
    6914:	adrp	x1, 0 <_start>
    6918:	adrp	x0, 0 <_start>
    691c:	mov	x29, sp
    6920:	ldr	x3, [x3]
    6924:	mov	w4, #0x0                   	// #0
    6928:	ldr	x2, [x2]
    692c:	ldr	x1, [x1]
    6930:	ldr	x0, [x0]
    6934:	bl	63b0 <grub_register_command_prio>
    6938:	cbz	x0, 6948 <grub_register_core_commands+0x40>
    693c:	ldr	w1, [x0, #40]
    6940:	orr	w1, w1, #0x200
    6944:	str	w1, [x0, #40]
    6948:	adrp	x3, 0 <_start>
    694c:	adrp	x2, 0 <_start>
    6950:	adrp	x1, 0 <_start>
    6954:	adrp	x0, 0 <_start>
    6958:	ldr	x3, [x3]
    695c:	mov	w4, #0x0                   	// #0
    6960:	ldr	x2, [x2]
    6964:	ldr	x1, [x1]
    6968:	ldr	x0, [x0]
    696c:	bl	63b0 <grub_register_command_prio>
    6970:	adrp	x3, 0 <_start>
    6974:	adrp	x2, 0 <_start>
    6978:	adrp	x1, 0 <_start>
    697c:	adrp	x0, 0 <_start>
    6980:	ldr	x3, [x3]
    6984:	mov	w4, #0x0                   	// #0
    6988:	ldr	x2, [x2]
    698c:	ldr	x1, [x1]
    6990:	ldr	x0, [x0]
    6994:	bl	63b0 <grub_register_command_prio>
    6998:	ldp	x29, x30, [sp], #16
    699c:	adrp	x3, 0 <_start>
    69a0:	adrp	x2, 0 <_start>
    69a4:	adrp	x1, 0 <_start>
    69a8:	adrp	x0, 0 <_start>
    69ac:	mov	w4, #0x0                   	// #0
    69b0:	ldr	x3, [x3]
    69b4:	ldr	x2, [x2]
    69b8:	ldr	x1, [x1]
    69bc:	ldr	x0, [x0]
    69c0:	b	63b0 <grub_register_command_prio>
    69c4:	nop
	...
    6a48:	stp	x29, x30, [sp, #-48]!
    6a4c:	mov	x29, sp
    6a50:	stp	x19, x20, [sp, #16]
    6a54:	mov	x20, x2
    6a58:	stp	x21, x22, [sp, #32]
    6a5c:	mov	x22, x0
    6a60:	mov	x21, x1
    6a64:	mov	x0, #0x10                  	// #16
    6a68:	bl	6210 <grub_malloc>
    6a6c:	cbz	x0, 6acc <grub_register_core_commands+0x1c4>
    6a70:	mov	x19, x0
    6a74:	mov	x0, x21
    6a78:	bl	dab8 <grub_partition_get_name>
    6a7c:	mov	x21, x0
    6a80:	cbz	x0, 6ae0 <grub_register_core_commands+0x1d8>
    6a84:	adrp	x0, 0 <_start>
    6a88:	mov	x2, x21
    6a8c:	ldr	x1, [x22]
    6a90:	ldr	x0, [x0]
    6a94:	bl	d0e0 <grub_xasprintf>
    6a98:	str	x0, [x19, #8]
    6a9c:	mov	x0, x21
    6aa0:	bl	6260 <grub_free>
    6aa4:	ldr	x0, [x19, #8]
    6aa8:	cbz	x0, 6ae0 <grub_register_core_commands+0x1d8>
    6aac:	ldr	x0, [x20, #16]
    6ab0:	str	x0, [x19]
    6ab4:	str	x19, [x20, #16]
    6ab8:	mov	w0, #0x0                   	// #0
    6abc:	ldp	x19, x20, [sp, #16]
    6ac0:	ldp	x21, x22, [sp, #32]
    6ac4:	ldp	x29, x30, [sp], #48
    6ac8:	ret
    6acc:	mov	w0, #0x1                   	// #1
    6ad0:	ldp	x19, x20, [sp, #16]
    6ad4:	ldp	x21, x22, [sp, #32]
    6ad8:	ldp	x29, x30, [sp], #48
    6adc:	ret
    6ae0:	mov	x0, x19
    6ae4:	bl	6260 <grub_free>
    6ae8:	mov	w0, #0x1                   	// #1
    6aec:	ldp	x19, x20, [sp, #16]
    6af0:	ldp	x21, x22, [sp, #32]
    6af4:	ldp	x29, x30, [sp], #48
    6af8:	ret
    6afc:	nop
	...

0000000000006b08 <grub_device_open>:
    6b08:	stp	x29, x30, [sp, #-32]!
    6b0c:	mov	x29, sp
    6b10:	stp	x19, x20, [sp, #16]
    6b14:	mov	x20, x0
    6b18:	cbz	x0, 6b98 <grub_device_open+0x90>
    6b1c:	mov	x0, #0x10                  	// #16
    6b20:	bl	6210 <grub_malloc>
    6b24:	mov	x19, x0
    6b28:	cbz	x0, 6b7c <grub_device_open+0x74>
    6b2c:	str	xzr, [x19, #8]
    6b30:	mov	x0, x20
    6b34:	bl	6f38 <grub_disk_open>
    6b38:	str	x0, [x19]
    6b3c:	cbz	x0, 6b50 <grub_device_open+0x48>
    6b40:	mov	x0, x19
    6b44:	ldp	x19, x20, [sp, #16]
    6b48:	ldp	x29, x30, [sp], #32
    6b4c:	ret
    6b50:	adrp	x0, 0 <_start>
    6b54:	ldr	x0, [x0]
    6b58:	ldr	x1, [x0]
    6b5c:	cbz	x1, 6b74 <grub_device_open+0x6c>
    6b60:	adrp	x0, 0 <_start>
    6b64:	ldr	x0, [x0]
    6b68:	ldr	w2, [x0]
    6b6c:	cmp	w2, #0xc
    6b70:	b.eq	6bd4 <grub_device_open+0xcc>  // b.none
    6b74:	ldr	x0, [x19, #8]
    6b78:	cbnz	x0, 6b40 <grub_device_open+0x38>
    6b7c:	mov	x0, x19
    6b80:	mov	x19, #0x0                   	// #0
    6b84:	bl	6260 <grub_free>
    6b88:	mov	x0, x19
    6b8c:	ldp	x19, x20, [sp, #16]
    6b90:	ldp	x29, x30, [sp], #32
    6b94:	ret
    6b98:	adrp	x0, 0 <_start>
    6b9c:	ldr	x19, [x0]
    6ba0:	mov	x0, x19
    6ba4:	bl	96e8 <grub_env_get>
    6ba8:	mov	x20, x0
    6bac:	cbz	x0, 6bb8 <grub_device_open+0xb0>
    6bb0:	ldrb	w0, [x0]
    6bb4:	cbnz	w0, 6b1c <grub_device_open+0x14>
    6bb8:	adrp	x1, 0 <_start>
    6bbc:	mov	x2, x19
    6bc0:	mov	w0, #0xd                   	// #13
    6bc4:	mov	x19, #0x0                   	// #0
    6bc8:	ldr	x1, [x1]
    6bcc:	bl	9bc8 <grub_error>
    6bd0:	b	6b7c <grub_device_open+0x74>
    6bd4:	str	wzr, [x0]
    6bd8:	mov	x0, x20
    6bdc:	blr	x1
    6be0:	str	x0, [x19, #8]
    6be4:	cbnz	x0, 6b40 <grub_device_open+0x38>
    6be8:	b	6b7c <grub_device_open+0x74>
    6bec:	nop
	...
    6c10:	stp	x29, x30, [sp, #-48]!
    6c14:	mov	x29, sp
    6c18:	stp	x21, x22, [sp, #32]
    6c1c:	mov	x21, x1
    6c20:	ldp	x2, x1, [x1]
    6c24:	stp	x19, x20, [sp, #16]
    6c28:	mov	x20, x0
    6c2c:	mov	w19, #0x1                   	// #1
    6c30:	blr	x2
    6c34:	cbz	w0, 6c4c <grub_device_open+0x144>
    6c38:	mov	w0, w19
    6c3c:	ldp	x19, x20, [sp, #16]
    6c40:	ldp	x21, x22, [sp, #32]
    6c44:	ldp	x29, x30, [sp], #48
    6c48:	ret
    6c4c:	mov	w19, w0
    6c50:	mov	x0, x20
    6c54:	bl	6b08 <grub_device_open>
    6c58:	mov	x20, x0
    6c5c:	cbz	x0, 6d40 <grub_device_open+0x238>
    6c60:	ldr	x0, [x0]
    6c64:	cbz	x0, 6d0c <grub_device_open+0x204>
    6c68:	adrp	x1, 0 <_start>
    6c6c:	str	xzr, [x21, #16]
    6c70:	mov	x2, x21
    6c74:	ldr	x1, [x1]
    6c78:	bl	da18 <grub_partition_iterate>
    6c7c:	ldr	x0, [x20]
    6c80:	cbz	x0, 6c88 <grub_device_open+0x180>
    6c84:	bl	72c8 <grub_disk_close>
    6c88:	ldr	x0, [x20, #8]
    6c8c:	cbz	x0, 6ca0 <grub_device_open+0x198>
    6c90:	ldr	x0, [x0]
    6c94:	bl	6260 <grub_free>
    6c98:	ldr	x0, [x20, #8]
    6c9c:	bl	6260 <grub_free>
    6ca0:	mov	x0, x20
    6ca4:	bl	6260 <grub_free>
    6ca8:	adrp	x0, 0 <_start>
    6cac:	ldr	x20, [x21, #16]
    6cb0:	ldr	x0, [x0]
    6cb4:	str	wzr, [x0]
    6cb8:	cbz	x20, 6c38 <grub_device_open+0x130>
    6cbc:	ldp	x22, x0, [x20]
    6cc0:	cbnz	w19, 6cf4 <grub_device_open+0x1ec>
    6cc4:	nop
    6cc8:	ldp	x2, x1, [x21]
    6ccc:	blr	x2
    6cd0:	mov	w19, w0
    6cd4:	ldr	x0, [x20, #8]
    6cd8:	bl	6260 <grub_free>
    6cdc:	mov	x0, x20
    6ce0:	bl	6260 <grub_free>
    6ce4:	cbz	x22, 6c38 <grub_device_open+0x130>
    6ce8:	mov	x20, x22
    6cec:	ldp	x22, x0, [x20]
    6cf0:	cbz	w19, 6cc8 <grub_device_open+0x1c0>
    6cf4:	bl	6260 <grub_free>
    6cf8:	mov	x0, x20
    6cfc:	bl	6260 <grub_free>
    6d00:	cbz	x22, 6c38 <grub_device_open+0x130>
    6d04:	mov	x20, x22
    6d08:	b	6cec <grub_device_open+0x1e4>
    6d0c:	ldr	x0, [x20, #8]
    6d10:	cbz	x0, 6d24 <grub_device_open+0x21c>
    6d14:	ldr	x0, [x0]
    6d18:	bl	6260 <grub_free>
    6d1c:	ldr	x0, [x20, #8]
    6d20:	bl	6260 <grub_free>
    6d24:	mov	x0, x20
    6d28:	bl	6260 <grub_free>
    6d2c:	mov	w0, w19
    6d30:	ldp	x19, x20, [sp, #16]
    6d34:	ldp	x21, x22, [sp, #32]
    6d38:	ldp	x29, x30, [sp], #48
    6d3c:	ret
    6d40:	adrp	x0, 0 <_start>
    6d44:	ldr	x0, [x0]
    6d48:	str	wzr, [x0]
    6d4c:	b	6c38 <grub_device_open+0x130>
	...

0000000000006d60 <grub_device_close>:
    6d60:	stp	x29, x30, [sp, #-32]!
    6d64:	mov	x29, sp
    6d68:	str	x19, [sp, #16]
    6d6c:	mov	x19, x0
    6d70:	ldr	x0, [x0]
    6d74:	cbz	x0, 6d7c <grub_device_close+0x1c>
    6d78:	bl	72c8 <grub_disk_close>
    6d7c:	ldr	x0, [x19, #8]
    6d80:	cbz	x0, 6d94 <grub_device_close+0x34>
    6d84:	ldr	x0, [x0]
    6d88:	bl	6260 <grub_free>
    6d8c:	ldr	x0, [x19, #8]
    6d90:	bl	6260 <grub_free>
    6d94:	mov	x0, x19
    6d98:	bl	6260 <grub_free>
    6d9c:	adrp	x0, 0 <_start>
    6da0:	ldr	x19, [sp, #16]
    6da4:	ldr	x0, [x0]
    6da8:	ldp	x29, x30, [sp], #32
    6dac:	ldr	w0, [x0]
    6db0:	ret
    6db4:	nop
	...

0000000000006dc0 <grub_device_iterate>:
    6dc0:	stp	x29, x30, [sp, #-80]!
    6dc4:	adrp	x2, 0 <_start>
    6dc8:	mov	x29, sp
    6dcc:	ldr	x2, [x2]
    6dd0:	stp	x21, x22, [sp, #32]
    6dd4:	adrp	x21, 0 <_start>
    6dd8:	mov	x22, x2
    6ddc:	stp	x19, x20, [sp, #16]
    6de0:	mov	w20, #0x0                   	// #0
    6de4:	stp	x0, x1, [sp, #56]
    6de8:	str	xzr, [sp, #72]
    6dec:	ldr	x19, [x22]
    6df0:	cbz	x19, 6e1c <grub_device_iterate+0x5c>
    6df4:	nop
    6df8:	ldr	x3, [x19, #16]
    6dfc:	mov	w2, w20
    6e00:	add	x1, sp, #0x38
    6e04:	cbz	x3, 6e14 <grub_device_iterate+0x54>
    6e08:	ldr	x0, [x21]
    6e0c:	blr	x3
    6e10:	cbnz	w0, 6e3c <grub_device_iterate+0x7c>
    6e14:	ldr	x19, [x19, #56]
    6e18:	cbnz	x19, 6df8 <grub_device_iterate+0x38>
    6e1c:	add	w20, w20, #0x1
    6e20:	cmp	w20, #0x3
    6e24:	b.ne	6dec <grub_device_iterate+0x2c>  // b.any
    6e28:	mov	w0, #0x0                   	// #0
    6e2c:	ldp	x19, x20, [sp, #16]
    6e30:	ldp	x21, x22, [sp, #32]
    6e34:	ldp	x29, x30, [sp], #80
    6e38:	ret
    6e3c:	mov	w0, #0x1                   	// #1
    6e40:	ldp	x19, x20, [sp, #16]
    6e44:	ldp	x21, x22, [sp, #32]
    6e48:	ldp	x29, x30, [sp], #80
    6e4c:	ret
	...

0000000000006e60 <grub_disk_cache_invalidate_all>:
    6e60:	stp	x29, x30, [sp, #-32]!
    6e64:	adrp	x0, 0 <_start>
    6e68:	mov	x29, sp
    6e6c:	stp	x19, x20, [sp, #16]
    6e70:	ldr	x19, [x0]
    6e74:	mov	x0, #0x9f88                	// #40840
    6e78:	add	x20, x19, x0
    6e7c:	b	6e8c <grub_disk_cache_invalidate_all+0x2c>
    6e80:	add	x19, x19, #0x28
    6e84:	cmp	x19, x20
    6e88:	b.eq	6eb0 <grub_disk_cache_invalidate_all+0x50>  // b.none
    6e8c:	ldr	x0, [x19]
    6e90:	cbz	x0, 6e80 <grub_disk_cache_invalidate_all+0x20>
    6e94:	ldr	w1, [x19, #8]
    6e98:	cbnz	w1, 6e80 <grub_disk_cache_invalidate_all+0x20>
    6e9c:	bl	6260 <grub_free>
    6ea0:	str	xzr, [x19]
    6ea4:	add	x19, x19, #0x28
    6ea8:	cmp	x19, x20
    6eac:	b.ne	6e8c <grub_disk_cache_invalidate_all+0x2c>  // b.any
    6eb0:	ldp	x19, x20, [sp, #16]
    6eb4:	ldp	x29, x30, [sp], #32
    6eb8:	ret
    6ebc:	nop
	...

0000000000006ec8 <grub_disk_dev_register>:
    6ec8:	adrp	x1, 0 <_start>
    6ecc:	ldr	x1, [x1]
    6ed0:	ldr	x2, [x1]
    6ed4:	str	x0, [x1]
    6ed8:	str	x2, [x0, #56]
    6edc:	ret
	...

0000000000006ee8 <grub_disk_dev_unregister>:
    6ee8:	adrp	x1, 0 <_start>
    6eec:	ldr	x2, [x1]
    6ef0:	ldr	x1, [x2]
    6ef4:	cbz	x1, 6f18 <grub_disk_dev_unregister+0x30>
    6ef8:	cmp	x1, x0
    6efc:	b.ne	6f08 <grub_disk_dev_unregister+0x20>  // b.any
    6f00:	b	6f20 <grub_disk_dev_unregister+0x38>
    6f04:	b.eq	6f1c <grub_disk_dev_unregister+0x34>  // b.none
    6f08:	mov	x2, x1
    6f0c:	ldr	x1, [x1, #56]
    6f10:	cmp	x0, x1
    6f14:	cbnz	x1, 6f04 <grub_disk_dev_unregister+0x1c>
    6f18:	ret
    6f1c:	add	x2, x2, #0x38
    6f20:	ldr	x0, [x1, #56]
    6f24:	str	x0, [x2]
    6f28:	ret
    6f2c:	nop
	...

0000000000006f38 <grub_disk_open>:
    6f38:	stp	x29, x30, [sp, #-112]!
    6f3c:	adrp	x3, 0 <_start>
    6f40:	adrp	x2, 0 <_start>
    6f44:	mov	x29, sp
    6f48:	adrp	x1, 0 <_start>
    6f4c:	stp	x23, x24, [sp, #48]
    6f50:	mov	x4, x0
    6f54:	ldr	x23, [x3]
    6f58:	stp	x21, x22, [sp, #32]
    6f5c:	mov	x22, x0
    6f60:	ldr	x3, [x2]
    6f64:	mov	x2, x23
    6f68:	ldr	x24, [x1]
    6f6c:	mov	w1, #0xc4                  	// #196
    6f70:	mov	x0, x24
    6f74:	bl	c708 <grub_real_dprintf>
    6f78:	mov	x0, #0x48                  	// #72
    6f7c:	bl	6220 <grub_zalloc>
    6f80:	mov	x21, x0
    6f84:	cbz	x0, 7040 <grub_disk_open+0x108>
    6f88:	mov	x1, x22
    6f8c:	mov	x0, #0x9                   	// #9
    6f90:	stp	x19, x20, [sp, #16]
    6f94:	movk	x0, #0x20, lsl #32
    6f98:	stp	x25, x26, [sp, #64]
    6f9c:	stp	x27, x28, [sp, #80]
    6fa0:	str	x0, [x21, #24]
    6fa4:	ldrb	w2, [x1], #1
    6fa8:	cbz	w2, 6ff0 <grub_disk_open+0xb8>
    6fac:	mov	x19, x22
    6fb0:	b	6fcc <grub_disk_open+0x94>
    6fb4:	cmp	w2, #0x2c
    6fb8:	b.eq	7010 <grub_disk_open+0xd8>  // b.none
    6fbc:	mov	x19, x1
    6fc0:	mov	x1, x19
    6fc4:	ldrb	w2, [x1], #1
    6fc8:	cbz	w2, 6ff0 <grub_disk_open+0xb8>
    6fcc:	cmp	w2, #0x5c
    6fd0:	b.ne	6fb4 <grub_disk_open+0x7c>  // b.any
    6fd4:	ldrb	w0, [x19, #1]
    6fd8:	add	x19, x19, #0x2
    6fdc:	cmp	w0, #0x2c
    6fe0:	csel	x19, x19, x1, eq  // eq = none
    6fe4:	mov	x1, x19
    6fe8:	ldrb	w2, [x1], #1
    6fec:	cbnz	w2, 6fcc <grub_disk_open+0x94>
    6ff0:	mov	x0, x22
    6ff4:	bl	c9d0 <grub_strdup>
    6ff8:	str	x0, [x21]
    6ffc:	cbz	x0, 7024 <grub_disk_open+0xec>
    7000:	mov	x25, x22
    7004:	mov	w26, #0x0                   	// #0
    7008:	mov	x19, #0x0                   	// #0
    700c:	b	707c <grub_disk_open+0x144>
    7010:	sub	x20, x19, x22
    7014:	add	x0, x20, #0x1
    7018:	bl	6210 <grub_malloc>
    701c:	mov	x25, x0
    7020:	cbnz	x0, 7054 <grub_disk_open+0x11c>
    7024:	adrp	x0, 0 <_start>
    7028:	ldr	x28, [x0]
    702c:	ldr	w0, [x28]
    7030:	cbnz	w0, 7180 <grub_disk_open+0x248>
    7034:	ldp	x19, x20, [sp, #16]
    7038:	ldp	x25, x26, [sp, #64]
    703c:	ldp	x27, x28, [sp, #80]
    7040:	mov	x0, x21
    7044:	ldp	x21, x22, [sp, #32]
    7048:	ldp	x23, x24, [sp, #48]
    704c:	ldp	x29, x30, [sp], #112
    7050:	ret
    7054:	mov	x2, x20
    7058:	mov	x1, x22
    705c:	bl	bf40 <grub_memmove>
    7060:	strb	wzr, [x25, x20]
    7064:	mov	x0, x25
    7068:	bl	c9d0 <grub_strdup>
    706c:	str	x0, [x21]
    7070:	cmp	x22, x25
    7074:	cset	w26, ne  // ne = any
    7078:	cbz	x0, 7228 <grub_disk_open+0x2f0>
    707c:	adrp	x0, 0 <_start>
    7080:	ldr	x0, [x0]
    7084:	ldr	x20, [x0]
    7088:	adrp	x0, 0 <_start>
    708c:	ldr	x28, [x0]
    7090:	cbnz	x20, 70b0 <grub_disk_open+0x178>
    7094:	b	712c <grub_disk_open+0x1f4>
    7098:	ldr	w0, [x28]
    709c:	cmp	w0, #0xc
    70a0:	b.ne	711c <grub_disk_open+0x1e4>  // b.any
    70a4:	ldr	x20, [x20, #56]
    70a8:	str	wzr, [x28]
    70ac:	cbz	x20, 712c <grub_disk_open+0x1f4>
    70b0:	ldr	x2, [x20, #24]
    70b4:	mov	x1, x21
    70b8:	mov	x0, x25
    70bc:	blr	x2
    70c0:	cbnz	w0, 7098 <grub_disk_open+0x160>
    70c4:	ldr	w0, [x21, #24]
    70c8:	sub	w1, w0, #0x9
    70cc:	cmp	w1, #0x6
    70d0:	b.hi	7234 <grub_disk_open+0x2fc>  // b.pmore
    70d4:	str	x20, [x21, #8]
    70d8:	cbz	x19, 70f0 <grub_disk_open+0x1b8>
    70dc:	add	x1, x19, #0x1
    70e0:	mov	x0, x21
    70e4:	bl	d7f0 <grub_partition_probe>
    70e8:	str	x0, [x21, #40]
    70ec:	cbz	x0, 7250 <grub_disk_open+0x318>
    70f0:	bl	6340 <grub_get_time_ms>
    70f4:	mov	x20, x0
    70f8:	adrp	x1, 0 <_start>
    70fc:	ldr	x0, [x1]
    7100:	str	x0, [sp, #104]
    7104:	ldr	x0, [x0]
    7108:	add	x0, x0, #0x7d0
    710c:	cmp	x0, x20
    7110:	b.cc	7144 <grub_disk_open+0x20c>  // b.lo, b.ul, b.last
    7114:	ldr	x0, [sp, #104]
    7118:	str	x20, [x0]
    711c:	cbz	w26, 702c <grub_disk_open+0xf4>
    7120:	mov	x0, x25
    7124:	bl	6260 <grub_free>
    7128:	b	702c <grub_disk_open+0xf4>
    712c:	adrp	x1, 0 <_start>
    7130:	mov	x2, x22
    7134:	mov	w0, #0xc                   	// #12
    7138:	ldr	x1, [x1]
    713c:	bl	9bc8 <grub_error>
    7140:	b	711c <grub_disk_open+0x1e4>
    7144:	adrp	x0, 0 <_start>
    7148:	ldr	x19, [x0]
    714c:	mov	x0, #0x9f88                	// #40840
    7150:	add	x27, x19, x0
    7154:	b	7164 <grub_disk_open+0x22c>
    7158:	add	x19, x19, #0x28
    715c:	cmp	x27, x19
    7160:	b.eq	7114 <grub_disk_open+0x1dc>  // b.none
    7164:	ldr	x0, [x19]
    7168:	cbz	x0, 7158 <grub_disk_open+0x220>
    716c:	ldr	w1, [x19, #8]
    7170:	cbnz	w1, 7158 <grub_disk_open+0x220>
    7174:	bl	6260 <grub_free>
    7178:	str	xzr, [x19]
    717c:	b	7158 <grub_disk_open+0x220>
    7180:	bl	9c70 <grub_error_push>
    7184:	adrp	x0, 0 <_start>
    7188:	mov	x4, x22
    718c:	mov	x2, x23
    7190:	mov	w1, #0x119                 	// #281
    7194:	ldr	x3, [x0]
    7198:	mov	x0, x24
    719c:	bl	c708 <grub_real_dprintf>
    71a0:	bl	9d20 <grub_error_pop>
    71a4:	adrp	x0, 0 <_start>
    71a8:	mov	x2, x23
    71ac:	ldr	x4, [x21]
    71b0:	mov	w1, #0x127                 	// #295
    71b4:	ldr	x3, [x0]
    71b8:	mov	x0, x24
    71bc:	bl	c708 <grub_real_dprintf>
    71c0:	ldr	x0, [x21, #8]
    71c4:	cbz	x0, 71d8 <grub_disk_open+0x2a0>
    71c8:	ldr	x1, [x0, #32]
    71cc:	cbz	x1, 71d8 <grub_disk_open+0x2a0>
    71d0:	mov	x0, x21
    71d4:	blr	x1
    71d8:	bl	6340 <grub_get_time_ms>
    71dc:	adrp	x1, 0 <_start>
    71e0:	ldr	x19, [x21, #40]
    71e4:	ldr	x1, [x1]
    71e8:	str	x0, [x1]
    71ec:	cbz	x19, 7204 <grub_disk_open+0x2cc>
    71f0:	mov	x0, x19
    71f4:	ldr	x19, [x19, #40]
    71f8:	bl	6260 <grub_free>
    71fc:	str	x19, [x21, #40]
    7200:	cbnz	x19, 71f0 <grub_disk_open+0x2b8>
    7204:	ldr	x0, [x21]
    7208:	bl	6260 <grub_free>
    720c:	mov	x0, x21
    7210:	mov	x21, #0x0                   	// #0
    7214:	bl	6260 <grub_free>
    7218:	ldp	x19, x20, [sp, #16]
    721c:	ldp	x25, x26, [sp, #64]
    7220:	ldp	x27, x28, [sp, #80]
    7224:	b	7040 <grub_disk_open+0x108>
    7228:	adrp	x0, 0 <_start>
    722c:	ldr	x28, [x0]
    7230:	b	711c <grub_disk_open+0x1e4>
    7234:	adrp	x1, 0 <_start>
    7238:	mov	w2, #0x1                   	// #1
    723c:	lsl	w2, w2, w0
    7240:	mov	w0, #0x18                  	// #24
    7244:	ldr	x1, [x1]
    7248:	bl	9bc8 <grub_error>
    724c:	b	711c <grub_disk_open+0x1e4>
    7250:	adrp	x1, 0 <_start>
    7254:	mov	w0, #0xc                   	// #12
    7258:	ldr	x1, [x1]
    725c:	bl	9bc8 <grub_error>
    7260:	b	711c <grub_disk_open+0x1e4>
    7264:	nop
	...

00000000000072c8 <grub_disk_close>:
    72c8:	stp	x29, x30, [sp, #-32]!
    72cc:	adrp	x3, 0 <_start>
    72d0:	adrp	x2, 0 <_start>
    72d4:	mov	x29, sp
    72d8:	stp	x19, x20, [sp, #16]
    72dc:	mov	x20, x0
    72e0:	adrp	x0, 0 <_start>
    72e4:	ldr	x3, [x3]
    72e8:	mov	w1, #0x127                 	// #295
    72ec:	ldr	x0, [x0]
    72f0:	ldr	x2, [x2]
    72f4:	ldr	x4, [x20]
    72f8:	bl	c708 <grub_real_dprintf>
    72fc:	ldr	x0, [x20, #8]
    7300:	cbz	x0, 7314 <grub_disk_close+0x4c>
    7304:	ldr	x1, [x0, #32]
    7308:	cbz	x1, 7314 <grub_disk_close+0x4c>
    730c:	mov	x0, x20
    7310:	blr	x1
    7314:	bl	6340 <grub_get_time_ms>
    7318:	adrp	x1, 0 <_start>
    731c:	ldr	x19, [x20, #40]
    7320:	ldr	x1, [x1]
    7324:	str	x0, [x1]
    7328:	cbz	x19, 7344 <grub_disk_close+0x7c>
    732c:	nop
    7330:	mov	x0, x19
    7334:	ldr	x19, [x19, #40]
    7338:	bl	6260 <grub_free>
    733c:	str	x19, [x20, #40]
    7340:	cbnz	x19, 7330 <grub_disk_close+0x68>
    7344:	ldr	x0, [x20]
    7348:	bl	6260 <grub_free>
    734c:	mov	x0, x20
    7350:	ldp	x19, x20, [sp, #16]
    7354:	ldp	x29, x30, [sp], #32
    7358:	b	6260 <grub_free>
    735c:	nop
	...

0000000000007380 <grub_disk_read>:
    7380:	stp	x29, x30, [sp, #-144]!
    7384:	mov	x29, sp
    7388:	stp	x21, x22, [sp, #32]
    738c:	mov	x21, x0
    7390:	add	x0, x1, x2, lsr #9
    7394:	stp	x0, x4, [sp, #96]
    7398:	and	x22, x2, #0x1ff
    739c:	ldr	x0, [x21, #40]
    73a0:	str	x3, [sp, #136]
    73a4:	cbz	x0, 79e8 <grub_disk_read+0x668>
    73a8:	add	x4, x22, #0x1ff
    73ac:	add	x4, x4, x3
    73b0:	lsr	x4, x4, #9
    73b4:	b	73d0 <grub_disk_read+0x50>
    73b8:	cmp	x2, x4
    73bc:	b.cc	73e0 <grub_disk_read+0x60>  // b.lo, b.ul, b.last
    73c0:	ldr	x0, [x0, #40]
    73c4:	add	x1, x5, x3
    73c8:	str	x1, [sp, #96]
    73cc:	cbz	x0, 79e8 <grub_disk_read+0x668>
    73d0:	ldp	x3, x1, [x0, #8]
    73d4:	ldr	x5, [sp, #96]
    73d8:	subs	x2, x1, x5
    73dc:	b.hi	73b8 <grub_disk_read+0x38>  // b.pmore
    73e0:	adrp	x1, 0 <_start>
    73e4:	mov	w0, #0xb                   	// #11
    73e8:	ldr	x1, [x1]
    73ec:	bl	9bc8 <grub_error>
    73f0:	cbnz	w0, 7a40 <grub_disk_read+0x6c0>
    73f4:	ldr	x2, [sp, #96]
    73f8:	stp	x23, x24, [sp, #48]
    73fc:	stp	x25, x26, [sp, #64]
    7400:	and	x24, x2, #0x3f
    7404:	orr	x0, x24, x22
    7408:	stp	x27, x28, [sp, #80]
    740c:	cbnz	x0, 76ac <grub_disk_read+0x32c>
    7410:	stp	x19, x20, [sp, #16]
    7414:	mov	x27, #0xedb3                	// #60851
    7418:	movk	x27, #0x513c, lsl #16
    741c:	mov	x28, #0xc57b                	// #50555
    7420:	movk	x27, #0x906c, lsl #32
    7424:	movk	x28, #0x27, lsl #16
    7428:	movk	x27, #0xc0, lsl #48
    742c:	ldr	x1, [sp, #136]
    7430:	mov	x0, #0x7fff                	// #32767
    7434:	cmp	x1, x0
    7438:	b.ls	79b8 <grub_disk_read+0x638>  // b.plast
    743c:	ldr	w8, [x21, #28]
    7440:	lsr	x9, x1, #15
    7444:	ldr	x3, [x21, #8]
    7448:	adrp	x25, 0 <_start>
    744c:	nop
    7450:	mov	x22, #0x0                   	// #0
    7454:	mov	w10, #0x1                   	// #1
    7458:	ldr	x23, [sp, #96]
    745c:	b	7470 <grub_disk_read+0xf0>
    7460:	add	x22, x22, #0x1
    7464:	add	x23, x23, #0x40
    7468:	cmp	x22, x9
    746c:	b.eq	79b0 <grub_disk_read+0x630>  // b.none
    7470:	ubfx	x24, x23, #6, #32
    7474:	cmp	x8, x22
    7478:	b.eq	79a8 <grub_disk_read+0x628>  // b.none
    747c:	ldr	w7, [x3, #8]
    7480:	ldr	x11, [x21, #32]
    7484:	lsl	x1, x7, #19
    7488:	sub	x1, x1, x7
    748c:	ldr	x26, [x25]
    7490:	madd	x1, x11, x28, x1
    7494:	add	x1, x1, x24
    7498:	umulh	x0, x1, x27
    749c:	sub	x2, x1, x0
    74a0:	add	x2, x0, x2, lsr #1
    74a4:	lsr	x2, x2, #9
    74a8:	lsl	x0, x2, #8
    74ac:	sub	x0, x0, x2
    74b0:	add	x2, x2, x0, lsl #2
    74b4:	sub	x1, x1, x2
    74b8:	add	x1, x1, x1, lsl #2
    74bc:	lsl	x1, x1, #3
    74c0:	add	x0, x26, x1
    74c4:	ldr	w1, [x26, x1]
    74c8:	cmp	x7, x1
    74cc:	b.ne	7460 <grub_disk_read+0xe0>  // b.any
    74d0:	ldr	x1, [x0, #8]
    74d4:	cmp	x11, x1
    74d8:	b.ne	7460 <grub_disk_read+0xe0>  // b.any
    74dc:	ldr	x1, [x0, #16]
    74e0:	cmp	x1, x23
    74e4:	b.ne	7460 <grub_disk_read+0xe0>  // b.any
    74e8:	ldr	x1, [x0, #24]
    74ec:	str	w10, [x0, #32]
    74f0:	str	x1, [sp, #128]
    74f4:	cbz	x1, 7460 <grub_disk_read+0xe0>
    74f8:	ldr	x0, [sp, #104]
    74fc:	mov	x2, #0x8000                	// #32768
    7500:	add	x0, x0, x22, lsl #15
    7504:	bl	bf40 <grub_memmove>
    7508:	ldr	x3, [x21, #8]
    750c:	ldr	x7, [x21, #32]
    7510:	ldr	w2, [x3, #8]
    7514:	lsl	x0, x2, #19
    7518:	sub	x0, x0, x2
    751c:	madd	x0, x7, x28, x0
    7520:	add	x24, x0, x24
    7524:	umulh	x1, x24, x27
    7528:	sub	x0, x24, x1
    752c:	add	x0, x1, x0, lsr #1
    7530:	lsr	x0, x0, #9
    7534:	lsl	x1, x0, #8
    7538:	sub	x1, x1, x0
    753c:	add	x0, x0, x1, lsl #2
    7540:	sub	x24, x24, x0
    7544:	add	x24, x24, x24, lsl #2
    7548:	lsl	x0, x24, #3
    754c:	add	x1, x26, x0
    7550:	ldr	w0, [x26, x0]
    7554:	cmp	x2, x0
    7558:	b.eq	7820 <grub_disk_read+0x4a0>  // b.none
    755c:	cbz	x22, 7840 <grub_disk_read+0x4c0>
    7560:	ldr	x4, [x3, #40]
    7564:	mov	w2, #0xf                   	// #15
    7568:	ldp	x24, x3, [sp, #96]
    756c:	ldr	w0, [x21, #24]
    7570:	sub	w2, w2, w0
    7574:	sub	w1, w0, #0x9
    7578:	mov	x0, x21
    757c:	lsl	x2, x22, x2
    7580:	lsr	x1, x24, x1
    7584:	blr	x4
    7588:	cbnz	w0, 7c58 <grub_disk_read+0x8d8>
    758c:	ldr	x26, [x25]
    7590:	mov	x20, #0x0                   	// #0
    7594:	nop
    7598:	ldr	x0, [x21, #8]
    759c:	ubfx	x23, x24, #6, #32
    75a0:	ldr	x1, [x21, #32]
    75a4:	str	x1, [sp, #112]
    75a8:	ldr	w19, [x0, #8]
    75ac:	mov	w2, #0x1                   	// #1
    75b0:	ubfiz	x0, x19, #19, #32
    75b4:	sub	x0, x0, w19, uxtw
    75b8:	madd	x0, x1, x28, x0
    75bc:	add	x23, x0, x23
    75c0:	umulh	x1, x23, x27
    75c4:	sub	x0, x23, x1
    75c8:	add	x0, x1, x0, lsr #1
    75cc:	lsr	x0, x0, #9
    75d0:	lsl	x1, x0, #8
    75d4:	sub	x1, x1, x0
    75d8:	add	x0, x0, x1, lsl #2
    75dc:	sub	x23, x23, x0
    75e0:	add	x23, x23, x23, lsl #2
    75e4:	lsl	x0, x23, #3
    75e8:	str	x0, [sp, #120]
    75ec:	add	x23, x26, x0
    75f0:	ldr	x0, [x23, #24]
    75f4:	str	w2, [x23, #32]
    75f8:	bl	6260 <grub_free>
    75fc:	str	xzr, [x23, #24]
    7600:	str	wzr, [x23, #32]
    7604:	mov	x0, #0x8000                	// #32768
    7608:	bl	6210 <grub_malloc>
    760c:	str	x0, [x23, #24]
    7610:	ldr	x2, [sp, #104]
    7614:	add	x1, x2, x20, lsl #15
    7618:	add	x20, x20, #0x1
    761c:	mov	x2, #0x8000                	// #32768
    7620:	cbz	x0, 7634 <grub_disk_read+0x2b4>
    7624:	bl	bf40 <grub_memmove>
    7628:	ldp	x1, x0, [sp, #112]
    762c:	str	w19, [x26, x0]
    7630:	stp	x1, x24, [x23, #8]
    7634:	add	x24, x24, #0x40
    7638:	cmp	x20, x22
    763c:	b.cc	7598 <grub_disk_read+0x218>  // b.lo, b.ul, b.last
    7640:	ldr	x4, [x21, #48]
    7644:	cbz	x4, 765c <grub_disk_read+0x2dc>
    7648:	ldr	x3, [x21, #56]
    764c:	lsl	w2, w22, #15
    7650:	ldr	x0, [sp, #96]
    7654:	mov	w1, #0x0                   	// #0
    7658:	blr	x4
    765c:	ldr	x1, [sp, #96]
    7660:	lsl	x0, x22, #15
    7664:	add	x1, x1, x22, lsl #6
    7668:	str	x1, [sp, #96]
    766c:	ldr	x1, [sp, #136]
    7670:	sub	x1, x1, x0
    7674:	str	x1, [sp, #136]
    7678:	ldr	x1, [sp, #104]
    767c:	add	x0, x1, x0
    7680:	str	x0, [sp, #104]
    7684:	ldr	x0, [sp, #128]
    7688:	cbnz	x0, 7840 <grub_disk_read+0x4c0>
    768c:	ldr	x1, [sp, #136]
    7690:	mov	x0, #0x7fff                	// #32767
    7694:	cmp	x1, x0
    7698:	b.ls	79b8 <grub_disk_read+0x638>  // b.plast
    769c:	ldr	w8, [x21, #28]
    76a0:	lsr	x9, x1, #15
    76a4:	ldr	x3, [x21, #8]
    76a8:	b	7450 <grub_disk_read+0xd0>
    76ac:	ldr	x0, [x21, #8]
    76b0:	mov	x27, #0xc57b                	// #50555
    76b4:	ldr	x6, [x21, #32]
    76b8:	movk	x27, #0x27, lsl #16
    76bc:	ldr	w3, [x0, #8]
    76c0:	mov	x28, #0xedb3                	// #60851
    76c4:	ubfx	x25, x2, #6, #32
    76c8:	movk	x28, #0x513c, lsl #16
    76cc:	ldr	x4, [sp, #136]
    76d0:	lsl	x0, x3, #19
    76d4:	sub	x0, x0, x3
    76d8:	add	x24, x22, x24, lsl #9
    76dc:	movk	x28, #0x906c, lsl #32
    76e0:	mov	x23, #0x8000                	// #32768
    76e4:	movk	x28, #0xc0, lsl #48
    76e8:	sub	x23, x23, x24
    76ec:	madd	x0, x6, x27, x0
    76f0:	cmp	x4, x23
    76f4:	csel	x23, x4, x23, ls  // ls = plast
    76f8:	adrp	x1, 0 <_start>
    76fc:	add	x0, x0, x25
    7700:	and	x4, x2, #0xffffffffffffffc0
    7704:	ldr	x26, [x1]
    7708:	str	x4, [sp, #112]
    770c:	umulh	x2, x0, x28
    7710:	sub	x1, x0, x2
    7714:	add	x1, x2, x1, lsr #1
    7718:	lsr	x1, x1, #9
    771c:	lsl	x2, x1, #8
    7720:	sub	x2, x2, x1
    7724:	add	x1, x1, x2, lsl #2
    7728:	sub	x0, x0, x1
    772c:	add	x0, x0, x0, lsl #2
    7730:	lsl	x0, x0, #3
    7734:	add	x2, x26, x0
    7738:	ldr	w0, [x26, x0]
    773c:	cmp	x3, x0
    7740:	b.ne	7884 <grub_disk_read+0x504>  // b.any
    7744:	ldr	x0, [x2, #8]
    7748:	cmp	x6, x0
    774c:	b.ne	7884 <grub_disk_read+0x504>  // b.any
    7750:	ldr	x0, [x2, #16]
    7754:	cmp	x4, x0
    7758:	b.ne	7884 <grub_disk_read+0x504>  // b.any
    775c:	ldr	x1, [x2, #24]
    7760:	mov	w0, #0x1                   	// #1
    7764:	str	w0, [x2, #32]
    7768:	cbz	x1, 7884 <grub_disk_read+0x504>
    776c:	ldr	x0, [sp, #104]
    7770:	add	x1, x1, x24
    7774:	mov	x2, x23
    7778:	stp	x19, x20, [sp, #16]
    777c:	bl	bf40 <grub_memmove>
    7780:	ldr	x3, [x21, #8]
    7784:	ldr	x6, [x21, #32]
    7788:	ldr	w2, [x3, #8]
    778c:	lsl	x0, x2, #19
    7790:	sub	x0, x0, x2
    7794:	madd	x27, x6, x27, x0
    7798:	add	x25, x27, x25
    779c:	umulh	x28, x25, x28
    77a0:	sub	x0, x25, x28
    77a4:	add	x0, x28, x0, lsr #1
    77a8:	lsr	x0, x0, #9
    77ac:	lsl	x1, x0, #8
    77b0:	sub	x1, x1, x0
    77b4:	add	x0, x0, x1, lsl #2
    77b8:	sub	x25, x25, x0
    77bc:	add	x25, x25, x25, lsl #2
    77c0:	lsl	x0, x25, #3
    77c4:	add	x1, x26, x0
    77c8:	ldr	w0, [x26, x0]
    77cc:	cmp	x2, x0
    77d0:	b.eq	7c74 <grub_disk_read+0x8f4>  // b.none
    77d4:	ldr	x4, [x21, #48]
    77d8:	cbz	x4, 77f4 <grub_disk_read+0x474>
    77dc:	ldr	x3, [x21, #56]
    77e0:	and	w1, w24, #0x1ff
    77e4:	ldr	x0, [sp, #112]
    77e8:	mov	w2, w23
    77ec:	add	x0, x0, x24, lsr #9
    77f0:	blr	x4
    77f4:	ldr	x0, [sp, #104]
    77f8:	add	x22, x23, x22
    77fc:	add	x0, x0, x23
    7800:	str	x0, [sp, #104]
    7804:	ldr	x0, [sp, #136]
    7808:	sub	x0, x0, x23
    780c:	str	x0, [sp, #136]
    7810:	ldr	x0, [sp, #96]
    7814:	add	x0, x0, x22, lsr #9
    7818:	str	x0, [sp, #96]
    781c:	b	7414 <grub_disk_read+0x94>
    7820:	ldr	x0, [x1, #8]
    7824:	cmp	x7, x0
    7828:	b.ne	755c <grub_disk_read+0x1dc>  // b.any
    782c:	ldr	x0, [x1, #16]
    7830:	cmp	x0, x23
    7834:	b.ne	755c <grub_disk_read+0x1dc>  // b.any
    7838:	str	wzr, [x1, #32]
    783c:	cbnz	x22, 7560 <grub_disk_read+0x1e0>
    7840:	ldr	x4, [x21, #48]
    7844:	cbz	x4, 785c <grub_disk_read+0x4dc>
    7848:	ldr	x3, [x21, #56]
    784c:	mov	w2, #0x8000                	// #32768
    7850:	ldr	x0, [sp, #96]
    7854:	mov	w1, #0x0                   	// #0
    7858:	blr	x4
    785c:	ldr	x0, [sp, #96]
    7860:	add	x0, x0, #0x40
    7864:	str	x0, [sp, #96]
    7868:	ldr	x0, [sp, #104]
    786c:	add	x0, x0, #0x8, lsl #12
    7870:	str	x0, [sp, #104]
    7874:	ldr	x0, [sp, #136]
    7878:	sub	x0, x0, #0x8, lsl #12
    787c:	str	x0, [sp, #136]
    7880:	b	742c <grub_disk_read+0xac>
    7884:	mov	x0, #0x8000                	// #32768
    7888:	bl	6210 <grub_malloc>
    788c:	mov	x27, x0
    7890:	cbz	x0, 7d84 <grub_disk_read+0xa04>
    7894:	ldr	x0, [x21, #16]
    7898:	ldr	w6, [x21, #24]
    789c:	cmn	x0, #0x1
    78a0:	sub	w1, w6, #0x9
    78a4:	b.eq	78bc <grub_disk_read+0x53c>  // b.none
    78a8:	ldr	x2, [sp, #112]
    78ac:	lsl	x0, x0, x1
    78b0:	add	x2, x2, #0x40
    78b4:	cmp	x2, x0
    78b8:	b.cs	78f4 <grub_disk_read+0x574>  // b.hs, b.nlast
    78bc:	ldr	x0, [x21, #8]
    78c0:	mov	w2, #0xf                   	// #15
    78c4:	sub	w2, w2, w6
    78c8:	stp	x19, x20, [sp, #16]
    78cc:	mov	w20, #0x1                   	// #1
    78d0:	ldr	x6, [x0, #40]
    78d4:	lsl	w2, w20, w2
    78d8:	ldr	x3, [sp, #112]
    78dc:	mov	x0, x21
    78e0:	lsr	x1, x3, x1
    78e4:	mov	x3, x27
    78e8:	blr	x6
    78ec:	cbz	w0, 7d94 <grub_disk_read+0xa14>
    78f0:	ldp	x19, x20, [sp, #16]
    78f4:	mov	x0, x27
    78f8:	bl	6260 <grub_free>
    78fc:	ldr	w0, [x21, #24]
    7900:	mov	x1, #0x1                   	// #1
    7904:	ldr	x2, [sp, #112]
    7908:	sub	w6, w0, #0x9
    790c:	lsl	x28, x1, x0
    7910:	and	x4, x24, #0x1ff
    7914:	lsl	x1, x1, x6
    7918:	neg	x1, x1
    791c:	add	x3, x2, x24, lsr #9
    7920:	adrp	x2, 0 <_start>
    7924:	bic	x27, x3, x1
    7928:	sub	x28, x28, #0x1
    792c:	ldr	x25, [x2]
    7930:	add	x27, x4, x27, lsl #9
    7934:	add	x2, x23, x27
    7938:	and	x1, x1, x3
    793c:	add	x28, x28, x2
    7940:	str	x1, [sp, #120]
    7944:	str	wzr, [x25]
    7948:	lsr	x28, x28, x0
    794c:	lsl	w0, w28, w0
    7950:	bl	6210 <grub_malloc>
    7954:	mov	x26, x0
    7958:	ldr	x1, [sp, #120]
    795c:	cbz	x0, 7ccc <grub_disk_read+0x94c>
    7960:	ldr	x7, [x21, #8]
    7964:	mov	x3, x0
    7968:	ldr	w4, [x21, #24]
    796c:	mov	w2, w28
    7970:	mov	x0, x21
    7974:	ldr	x7, [x7, #40]
    7978:	sub	w4, w4, #0x9
    797c:	lsr	x1, x1, x4
    7980:	blr	x7
    7984:	cbnz	w0, 7c98 <grub_disk_read+0x918>
    7988:	ldr	x0, [sp, #104]
    798c:	add	x1, x26, x27
    7990:	mov	x2, x23
    7994:	stp	x19, x20, [sp, #16]
    7998:	bl	bf40 <grub_memmove>
    799c:	mov	x0, x26
    79a0:	bl	6260 <grub_free>
    79a4:	b	77d4 <grub_disk_read+0x454>
    79a8:	cbz	x22, 7450 <grub_disk_read+0xd0>
    79ac:	nop
    79b0:	str	xzr, [sp, #128]
    79b4:	b	7560 <grub_disk_read+0x1e0>
    79b8:	ldr	x0, [sp, #136]
    79bc:	cbnz	x0, 7a8c <grub_disk_read+0x70c>
    79c0:	adrp	x0, 0 <_start>
    79c4:	ldr	x25, [x0]
    79c8:	ldr	w0, [x25]
    79cc:	ldp	x19, x20, [sp, #16]
    79d0:	ldp	x21, x22, [sp, #32]
    79d4:	ldp	x23, x24, [sp, #48]
    79d8:	ldp	x25, x26, [sp, #64]
    79dc:	ldp	x27, x28, [sp, #80]
    79e0:	ldp	x29, x30, [sp], #144
    79e4:	ret
    79e8:	ldr	w1, [x21, #24]
    79ec:	mov	x2, #0x8000000000000       	// #2251799813685248
    79f0:	ldr	x0, [x21, #16]
    79f4:	sub	w1, w1, #0x9
    79f8:	lsl	x0, x0, x1
    79fc:	cmp	x0, x2
    7a00:	csel	x0, x0, x2, ls  // ls = plast
    7a04:	ldr	x2, [sp, #96]
    7a08:	cmp	x2, x0
    7a0c:	b.cs	7a28 <grub_disk_read+0x6a8>  // b.hs, b.nlast
    7a10:	sub	x0, x0, x2
    7a14:	add	x1, x22, #0x1ff
    7a18:	ldr	x2, [sp, #136]
    7a1c:	add	x1, x1, x2
    7a20:	cmp	x0, x1, lsr #9
    7a24:	b.cs	73f4 <grub_disk_read+0x74>  // b.hs, b.nlast
    7a28:	adrp	x1, 0 <_start>
    7a2c:	mov	w0, #0xb                   	// #11
    7a30:	ldr	x2, [x21]
    7a34:	ldr	x1, [x1]
    7a38:	bl	9bc8 <grub_error>
    7a3c:	cbz	w0, 73f4 <grub_disk_read+0x74>
    7a40:	bl	9c70 <grub_error_push>
    7a44:	adrp	x1, 0 <_start>
    7a48:	adrp	x3, 0 <_start>
    7a4c:	adrp	x2, 0 <_start>
    7a50:	adrp	x0, 0 <_start>
    7a54:	ldr	x5, [x1]
    7a58:	mov	w1, #0x1a4                 	// #420
    7a5c:	ldr	x3, [x3]
    7a60:	ldr	x2, [x2]
    7a64:	ldr	x0, [x0]
    7a68:	ldr	x4, [sp, #96]
    7a6c:	bl	c708 <grub_real_dprintf>
    7a70:	bl	9d20 <grub_error_pop>
    7a74:	adrp	x0, 0 <_start>
    7a78:	ldp	x21, x22, [sp, #32]
    7a7c:	ldr	x0, [x0]
    7a80:	ldr	w0, [x0]
    7a84:	ldp	x29, x30, [sp], #144
    7a88:	ret
    7a8c:	ldr	x0, [x21, #8]
    7a90:	mov	x23, #0xc57b                	// #50555
    7a94:	ldr	x6, [x21, #32]
    7a98:	movk	x23, #0x27, lsl #16
    7a9c:	ldr	w3, [x0, #8]
    7aa0:	mov	x24, #0xedb3                	// #60851
    7aa4:	ldr	x4, [sp, #96]
    7aa8:	movk	x24, #0x513c, lsl #16
    7aac:	lsl	x0, x3, #19
    7ab0:	movk	x24, #0x906c, lsl #32
    7ab4:	sub	x0, x0, x3
    7ab8:	movk	x24, #0xc0, lsl #48
    7abc:	ubfx	x22, x4, #6, #32
    7ac0:	adrp	x1, 0 <_start>
    7ac4:	madd	x0, x6, x23, x0
    7ac8:	ldr	x26, [x1]
    7acc:	add	x0, x0, x22
    7ad0:	umulh	x2, x0, x24
    7ad4:	sub	x1, x0, x2
    7ad8:	add	x1, x2, x1, lsr #1
    7adc:	lsr	x1, x1, #9
    7ae0:	lsl	x2, x1, #8
    7ae4:	sub	x2, x2, x1
    7ae8:	add	x1, x1, x2, lsl #2
    7aec:	sub	x0, x0, x1
    7af0:	add	x0, x0, x0, lsl #2
    7af4:	lsl	x0, x0, #3
    7af8:	add	x2, x26, x0
    7afc:	ldr	w0, [x26, x0]
    7b00:	cmp	x3, x0
    7b04:	b.ne	7b20 <grub_disk_read+0x7a0>  // b.any
    7b08:	ldr	x0, [x2, #8]
    7b0c:	cmp	x6, x0
    7b10:	b.ne	7b20 <grub_disk_read+0x7a0>  // b.any
    7b14:	ldr	x0, [x2, #16]
    7b18:	cmp	x0, x4
    7b1c:	b.eq	7cdc <grub_disk_read+0x95c>  // b.none
    7b20:	mov	x0, #0x8000                	// #32768
    7b24:	bl	6210 <grub_malloc>
    7b28:	mov	x25, x0
    7b2c:	cbz	x0, 7c48 <grub_disk_read+0x8c8>
    7b30:	ldr	x0, [x21, #16]
    7b34:	ldr	w3, [x21, #24]
    7b38:	cmn	x0, #0x1
    7b3c:	sub	w1, w3, #0x9
    7b40:	b.eq	7b58 <grub_disk_read+0x7d8>  // b.none
    7b44:	ldr	x2, [sp, #96]
    7b48:	lsl	x0, x0, x1
    7b4c:	add	x2, x2, #0x40
    7b50:	cmp	x2, x0
    7b54:	b.cs	7b88 <grub_disk_read+0x808>  // b.hs, b.nlast
    7b58:	ldr	x0, [x21, #8]
    7b5c:	mov	w2, #0xf                   	// #15
    7b60:	sub	w2, w2, w3
    7b64:	mov	w23, #0x1                   	// #1
    7b68:	ldr	x3, [sp, #96]
    7b6c:	lsl	w2, w23, w2
    7b70:	ldr	x6, [x0, #40]
    7b74:	mov	x0, x21
    7b78:	lsr	x1, x3, x1
    7b7c:	mov	x3, x25
    7b80:	blr	x6
    7b84:	cbz	w0, 7e94 <grub_disk_read+0xb14>
    7b88:	mov	x0, x25
    7b8c:	bl	6260 <grub_free>
    7b90:	ldr	w0, [x21, #24]
    7b94:	mov	x1, #0x1                   	// #1
    7b98:	adrp	x2, 0 <_start>
    7b9c:	sub	w3, w0, #0x9
    7ba0:	lsl	x23, x1, x0
    7ba4:	sub	x23, x23, #0x1
    7ba8:	lsl	x1, x1, x3
    7bac:	neg	x1, x1
    7bb0:	ldr	x3, [sp, #96]
    7bb4:	ldr	x25, [x2]
    7bb8:	bic	x24, x3, x1
    7bbc:	and	x22, x1, x3
    7bc0:	ldr	x1, [sp, #136]
    7bc4:	lsl	x24, x24, #9
    7bc8:	str	wzr, [x25]
    7bcc:	add	x1, x24, x1
    7bd0:	add	x23, x23, x1
    7bd4:	lsr	x23, x23, x0
    7bd8:	lsl	w0, w23, w0
    7bdc:	bl	6210 <grub_malloc>
    7be0:	mov	x26, x0
    7be4:	cbz	x0, 7e88 <grub_disk_read+0xb08>
    7be8:	ldr	x4, [x21, #8]
    7bec:	mov	x3, x0
    7bf0:	ldr	w1, [x21, #24]
    7bf4:	mov	w2, w23
    7bf8:	mov	x0, x21
    7bfc:	ldr	x4, [x4, #40]
    7c00:	sub	w1, w1, #0x9
    7c04:	lsr	x1, x22, x1
    7c08:	blr	x4
    7c0c:	cbnz	w0, 7e54 <grub_disk_read+0xad4>
    7c10:	ldr	x0, [sp, #104]
    7c14:	add	x1, x26, x24
    7c18:	ldr	x2, [sp, #136]
    7c1c:	bl	bf40 <grub_memmove>
    7c20:	mov	x0, x26
    7c24:	bl	6260 <grub_free>
    7c28:	ldr	x4, [x21, #48]
    7c2c:	cbz	x4, 79c8 <grub_disk_read+0x648>
    7c30:	ldr	w2, [sp, #136]
    7c34:	mov	w1, #0x0                   	// #0
    7c38:	ldr	x3, [x21, #56]
    7c3c:	ldr	x0, [sp, #96]
    7c40:	blr	x4
    7c44:	b	79c8 <grub_disk_read+0x648>
    7c48:	adrp	x2, 0 <_start>
    7c4c:	ldr	x25, [x2]
    7c50:	ldr	w0, [x25]
    7c54:	cbz	w0, 7c28 <grub_disk_read+0x8a8>
    7c58:	ldp	x19, x20, [sp, #16]
    7c5c:	ldp	x21, x22, [sp, #32]
    7c60:	ldp	x23, x24, [sp, #48]
    7c64:	ldp	x25, x26, [sp, #64]
    7c68:	ldp	x27, x28, [sp, #80]
    7c6c:	ldp	x29, x30, [sp], #144
    7c70:	ret
    7c74:	ldr	x0, [x1, #8]
    7c78:	cmp	x6, x0
    7c7c:	b.ne	77d4 <grub_disk_read+0x454>  // b.any
    7c80:	ldr	x0, [x1, #16]
    7c84:	ldr	x2, [sp, #112]
    7c88:	cmp	x2, x0
    7c8c:	b.ne	77d4 <grub_disk_read+0x454>  // b.any
    7c90:	str	wzr, [x1, #32]
    7c94:	b	77d4 <grub_disk_read+0x454>
    7c98:	bl	9c70 <grub_error_push>
    7c9c:	adrp	x1, 0 <_start>
    7ca0:	adrp	x2, 0 <_start>
    7ca4:	adrp	x0, 0 <_start>
    7ca8:	ldr	x3, [x1]
    7cac:	mov	w1, #0x180                 	// #384
    7cb0:	ldr	x2, [x2]
    7cb4:	ldr	x0, [x0]
    7cb8:	ldr	x4, [x21]
    7cbc:	bl	c708 <grub_real_dprintf>
    7cc0:	bl	9d20 <grub_error_pop>
    7cc4:	mov	x0, x26
    7cc8:	bl	6260 <grub_free>
    7ccc:	ldr	w0, [x25]
    7cd0:	cbnz	w0, 7c5c <grub_disk_read+0x8dc>
    7cd4:	stp	x19, x20, [sp, #16]
    7cd8:	b	77d4 <grub_disk_read+0x454>
    7cdc:	ldr	x1, [x2, #24]
    7ce0:	mov	w0, #0x1                   	// #1
    7ce4:	str	w0, [x2, #32]
    7ce8:	cbz	x1, 7b20 <grub_disk_read+0x7a0>
    7cec:	ldr	x0, [sp, #104]
    7cf0:	ldr	x2, [sp, #136]
    7cf4:	bl	bf40 <grub_memmove>
    7cf8:	ldr	x0, [x21, #8]
    7cfc:	ldr	x3, [x21, #32]
    7d00:	ldr	w2, [x0, #8]
    7d04:	lsl	x0, x2, #19
    7d08:	sub	x0, x0, x2
    7d0c:	madd	x23, x3, x23, x0
    7d10:	add	x22, x23, x22
    7d14:	umulh	x24, x22, x24
    7d18:	sub	x0, x22, x24
    7d1c:	add	x0, x24, x0, lsr #1
    7d20:	lsr	x0, x0, #9
    7d24:	lsl	x1, x0, #8
    7d28:	sub	x1, x1, x0
    7d2c:	add	x0, x0, x1, lsl #2
    7d30:	sub	x22, x22, x0
    7d34:	add	x22, x22, x22, lsl #2
    7d38:	lsl	x0, x22, #3
    7d3c:	add	x1, x26, x0
    7d40:	ldr	w0, [x26, x0]
    7d44:	cmp	x2, x0
    7d48:	b.eq	7d58 <grub_disk_read+0x9d8>  // b.none
    7d4c:	adrp	x0, 0 <_start>
    7d50:	ldr	x25, [x0]
    7d54:	b	7c28 <grub_disk_read+0x8a8>
    7d58:	ldr	x0, [x1, #8]
    7d5c:	cmp	x3, x0
    7d60:	b.ne	7d4c <grub_disk_read+0x9cc>  // b.any
    7d64:	ldr	x0, [x1, #16]
    7d68:	ldr	x2, [sp, #96]
    7d6c:	cmp	x0, x2
    7d70:	adrp	x0, 0 <_start>
    7d74:	b.ne	7d50 <grub_disk_read+0x9d0>  // b.any
    7d78:	ldr	x25, [x0]
    7d7c:	str	wzr, [x1, #32]
    7d80:	b	7c28 <grub_disk_read+0x8a8>
    7d84:	adrp	x2, 0 <_start>
    7d88:	ldr	x25, [x2]
    7d8c:	ldr	w0, [x25]
    7d90:	b	7cd0 <grub_disk_read+0x950>
    7d94:	ldr	x0, [sp, #104]
    7d98:	mov	x2, x23
    7d9c:	add	x1, x27, x24
    7da0:	bl	bf40 <grub_memmove>
    7da4:	ldr	x2, [x21, #8]
    7da8:	mov	x0, #0xc57b                	// #50555
    7dac:	ldr	x19, [x21, #32]
    7db0:	movk	x0, #0x27, lsl #16
    7db4:	ldr	w7, [x2, #8]
    7db8:	mov	x1, #0xedb3                	// #60851
    7dbc:	movk	x1, #0x513c, lsl #16
    7dc0:	str	w7, [sp, #120]
    7dc4:	movk	x1, #0x906c, lsl #32
    7dc8:	ubfiz	x2, x7, #19, #32
    7dcc:	movk	x1, #0xc0, lsl #48
    7dd0:	sub	x2, x2, w7, uxtw
    7dd4:	madd	x0, x19, x0, x2
    7dd8:	add	x25, x0, x25
    7ddc:	umulh	x1, x25, x1
    7de0:	sub	x0, x25, x1
    7de4:	add	x0, x1, x0, lsr #1
    7de8:	lsr	x0, x0, #9
    7dec:	lsl	x1, x0, #8
    7df0:	sub	x1, x1, x0
    7df4:	add	x0, x0, x1, lsl #2
    7df8:	sub	x25, x25, x0
    7dfc:	add	x25, x25, x25, lsl #2
    7e00:	lsl	x25, x25, #3
    7e04:	add	x28, x26, x25
    7e08:	ldr	x0, [x28, #24]
    7e0c:	str	w20, [x28, #32]
    7e10:	bl	6260 <grub_free>
    7e14:	str	xzr, [x28, #24]
    7e18:	str	wzr, [x28, #32]
    7e1c:	mov	x0, #0x8000                	// #32768
    7e20:	bl	6210 <grub_malloc>
    7e24:	str	x0, [x28, #24]
    7e28:	cbz	x0, 7e48 <grub_disk_read+0xac8>
    7e2c:	mov	x1, x27
    7e30:	mov	x2, #0x8000                	// #32768
    7e34:	bl	bf40 <grub_memmove>
    7e38:	ldr	w7, [sp, #120]
    7e3c:	str	w7, [x26, x25]
    7e40:	ldr	x0, [sp, #112]
    7e44:	stp	x19, x0, [x28, #8]
    7e48:	mov	x0, x27
    7e4c:	bl	6260 <grub_free>
    7e50:	b	77d4 <grub_disk_read+0x454>
    7e54:	bl	9c70 <grub_error_push>
    7e58:	adrp	x1, 0 <_start>
    7e5c:	adrp	x2, 0 <_start>
    7e60:	adrp	x0, 0 <_start>
    7e64:	ldr	x3, [x1]
    7e68:	mov	w1, #0x180                 	// #384
    7e6c:	ldr	x2, [x2]
    7e70:	ldr	x0, [x0]
    7e74:	ldr	x4, [x21]
    7e78:	bl	c708 <grub_real_dprintf>
    7e7c:	bl	9d20 <grub_error_pop>
    7e80:	mov	x0, x26
    7e84:	bl	6260 <grub_free>
    7e88:	ldr	w0, [x25]
    7e8c:	cbz	w0, 7c28 <grub_disk_read+0x8a8>
    7e90:	b	7c58 <grub_disk_read+0x8d8>
    7e94:	ldr	x0, [sp, #104]
    7e98:	mov	x1, x25
    7e9c:	ldr	x2, [sp, #136]
    7ea0:	bl	bf40 <grub_memmove>
    7ea4:	ldr	x2, [x21, #8]
    7ea8:	mov	x0, #0xc57b                	// #50555
    7eac:	ldr	x24, [x21, #32]
    7eb0:	movk	x0, #0x27, lsl #16
    7eb4:	ldr	w19, [x2, #8]
    7eb8:	mov	x1, #0xedb3                	// #60851
    7ebc:	movk	x1, #0x513c, lsl #16
    7ec0:	movk	x1, #0x906c, lsl #32
    7ec4:	ubfiz	x2, x19, #19, #32
    7ec8:	movk	x1, #0xc0, lsl #48
    7ecc:	sub	x2, x2, w19, uxtw
    7ed0:	madd	x0, x24, x0, x2
    7ed4:	add	x22, x0, x22
    7ed8:	umulh	x1, x22, x1
    7edc:	sub	x0, x22, x1
    7ee0:	add	x0, x1, x0, lsr #1
    7ee4:	lsr	x0, x0, #9
    7ee8:	lsl	x1, x0, #8
    7eec:	sub	x1, x1, x0
    7ef0:	add	x0, x0, x1, lsl #2
    7ef4:	sub	x22, x22, x0
    7ef8:	add	x22, x22, x22, lsl #2
    7efc:	lsl	x20, x22, #3
    7f00:	add	x22, x26, x20
    7f04:	ldr	x0, [x22, #24]
    7f08:	str	w23, [x22, #32]
    7f0c:	bl	6260 <grub_free>
    7f10:	str	xzr, [x22, #24]
    7f14:	str	wzr, [x22, #32]
    7f18:	mov	x0, #0x8000                	// #32768
    7f1c:	bl	6210 <grub_malloc>
    7f20:	str	x0, [x22, #24]
    7f24:	cbz	x0, 7f40 <grub_disk_read+0xbc0>
    7f28:	mov	x1, x25
    7f2c:	mov	x2, #0x8000                	// #32768
    7f30:	bl	bf40 <grub_memmove>
    7f34:	str	w19, [x26, x20]
    7f38:	ldr	x0, [sp, #96]
    7f3c:	stp	x24, x0, [x22, #8]
    7f40:	mov	x0, x25
    7f44:	bl	6260 <grub_free>
    7f48:	adrp	x0, 0 <_start>
    7f4c:	b	7d50 <grub_disk_read+0x9d0>
	...

0000000000007f98 <grub_disk_get_size>:
    7f98:	mov	x1, x0
    7f9c:	ldr	x0, [x0, #40]
    7fa0:	cbz	x0, 7fac <grub_disk_get_size+0x14>
    7fa4:	ldr	x0, [x0, #16]
    7fa8:	ret
    7fac:	ldr	x0, [x1, #16]
    7fb0:	cmn	x0, #0x1
    7fb4:	b.eq	7fa8 <grub_disk_get_size+0x10>  // b.none
    7fb8:	ldr	w1, [x1, #24]
    7fbc:	sub	w1, w1, #0x9
    7fc0:	lsl	x0, x0, x1
    7fc4:	ret
    7fc8:	stp	x29, x30, [sp, #-64]!
    7fcc:	adrp	x1, 0 <_start>
    7fd0:	mov	x29, sp
    7fd4:	stp	x23, x24, [sp, #48]
    7fd8:	mov	x23, x0
    7fdc:	ldr	x24, [x1]
    7fe0:	stp	x19, x20, [sp, #16]
    7fe4:	stp	x21, x22, [sp, #32]
    7fe8:	ldr	x1, [x24]
    7fec:	cbz	x1, 8010 <grub_disk_get_size+0x78>
    7ff0:	cmp	x1, x0
    7ff4:	b.ne	8004 <grub_disk_get_size+0x6c>  // b.any
    7ff8:	b	80ec <grub_disk_get_size+0x154>
    7ffc:	cmp	x23, x1
    8000:	b.eq	80dc <grub_disk_get_size+0x144>  // b.none
    8004:	mov	x0, x1
    8008:	ldr	x1, [x1, #112]
    800c:	cbnz	x1, 7ffc <grub_disk_get_size+0x64>
    8010:	cbz	x23, 80f4 <grub_disk_get_size+0x15c>
    8014:	add	x20, x24, #0x8
    8018:	add	x24, x24, #0xff0
    801c:	nop
    8020:	ldr	x19, [x20]
    8024:	mov	x22, x20
    8028:	cbz	x19, 8048 <grub_disk_get_size+0xb0>
    802c:	mov	x21, x19
    8030:	ldr	x19, [x19]
    8034:	ldr	x0, [x21, #32]
    8038:	cmp	x23, x0
    803c:	b.eq	80c4 <grub_disk_get_size+0x12c>  // b.none
    8040:	mov	x22, x21
    8044:	cbnz	x19, 802c <grub_disk_get_size+0x94>
    8048:	add	x20, x20, #0x8
    804c:	cmp	x24, x20
    8050:	b.ne	8020 <grub_disk_get_size+0x88>  // b.any
    8054:	ldr	x19, [x23, #16]
    8058:	cbz	x19, 8094 <grub_disk_get_size+0xfc>
    805c:	mov	x21, x19
    8060:	ldr	x19, [x19]
    8064:	ldr	x20, [x21, #8]
    8068:	ldr	w0, [x20, #8]
    806c:	cmp	w0, #0x0
    8070:	b.gt	8088 <grub_disk_get_size+0xf0>
    8074:	ldr	x0, [x20, #56]
    8078:	cbz	x0, 8080 <grub_disk_get_size+0xe8>
    807c:	blr	x0
    8080:	mov	x0, x20
    8084:	bl	7fc8 <grub_disk_get_size+0x30>
    8088:	mov	x0, x21
    808c:	bl	6260 <grub_free>
    8090:	cbnz	x19, 805c <grub_disk_get_size+0xc4>
    8094:	ldr	x0, [x23, #96]
    8098:	bl	6260 <grub_free>
    809c:	ldr	x0, [x23]
    80a0:	bl	6260 <grub_free>
    80a4:	mov	x0, x23
    80a8:	bl	6260 <grub_free>
    80ac:	mov	w0, #0x1                   	// #1
    80b0:	ldp	x19, x20, [sp, #16]
    80b4:	ldp	x21, x22, [sp, #32]
    80b8:	ldp	x23, x24, [sp, #48]
    80bc:	ldp	x29, x30, [sp], #64
    80c0:	ret
    80c4:	ldr	x0, [x21, #8]
    80c8:	str	x19, [x22]
    80cc:	bl	6260 <grub_free>
    80d0:	mov	x0, x21
    80d4:	bl	6260 <grub_free>
    80d8:	b	8028 <grub_disk_get_size+0x90>
    80dc:	add	x0, x0, #0x70
    80e0:	ldr	x1, [x1, #112]
    80e4:	str	x1, [x0]
    80e8:	b	8014 <grub_disk_get_size+0x7c>
    80ec:	mov	x0, x24
    80f0:	b	80e0 <grub_disk_get_size+0x148>
    80f4:	adrp	x0, 0 <_start>
    80f8:	ldr	x0, [x0]
    80fc:	bl	d1c0 <grub_fatal>
	...

0000000000008110 <grub_dl_add>:
    8110:	stp	x29, x30, [sp, #-48]!
    8114:	adrp	x1, 0 <_start>
    8118:	mov	x29, sp
    811c:	stp	x19, x20, [sp, #16]
    8120:	mov	x20, x0
    8124:	ldr	x0, [x1]
    8128:	ldr	x19, [x0]
    812c:	str	x21, [sp, #32]
    8130:	ldr	x21, [x20]
    8134:	cbnz	x19, 8144 <grub_dl_add+0x34>
    8138:	b	8174 <grub_dl_add+0x64>
    813c:	ldr	x19, [x19, #112]
    8140:	cbz	x19, 8174 <grub_dl_add+0x64>
    8144:	ldr	x1, [x19]
    8148:	mov	x0, x21
    814c:	bl	c488 <grub_strcmp>
    8150:	cbnz	w0, 813c <grub_dl_add+0x2c>
    8154:	adrp	x1, 0 <_start>
    8158:	mov	w0, #0x2                   	// #2
    815c:	ldr	x2, [x20]
    8160:	ldp	x19, x20, [sp, #16]
    8164:	ldr	x21, [sp, #32]
    8168:	ldp	x29, x30, [sp], #48
    816c:	ldr	x1, [x1]
    8170:	b	9bc8 <grub_error>
    8174:	mov	w0, #0x0                   	// #0
    8178:	ldp	x19, x20, [sp, #16]
    817c:	ldr	x21, [sp, #32]
    8180:	ldp	x29, x30, [sp], #48
    8184:	ret
	...

0000000000008198 <grub_dl_register_symbol>:
    8198:	stp	x29, x30, [sp, #-64]!
    819c:	mov	x29, sp
    81a0:	stp	x19, x20, [sp, #16]
    81a4:	mov	x19, x0
    81a8:	mov	x0, #0x28                  	// #40
    81ac:	stp	x21, x22, [sp, #32]
    81b0:	mov	w22, w2
    81b4:	mov	x21, x3
    81b8:	str	x23, [sp, #48]
    81bc:	mov	x23, x1
    81c0:	bl	6210 <grub_malloc>
    81c4:	cbz	x0, 826c <grub_dl_register_symbol+0xd4>
    81c8:	mov	x20, x0
    81cc:	cbz	x21, 825c <grub_dl_register_symbol+0xc4>
    81d0:	mov	x0, x19
    81d4:	bl	c9d0 <grub_strdup>
    81d8:	str	x0, [x20, #8]
    81dc:	cbz	x0, 8264 <grub_dl_register_symbol+0xcc>
    81e0:	str	x23, [x20, #16]
    81e4:	str	w22, [x20, #24]
    81e8:	str	x21, [x20, #32]
    81ec:	ldrb	w3, [x19]
    81f0:	cbz	w3, 828c <grub_dl_register_symbol+0xf4>
    81f4:	mov	w1, #0x0                   	// #0
    81f8:	add	w2, w1, w1, lsl #10
    81fc:	add	w2, w3, w2, lsl #6
    8200:	ldrb	w3, [x19, #1]!
    8204:	sub	w1, w2, w1
    8208:	cbnz	w3, 81f8 <grub_dl_register_symbol+0x60>
    820c:	add	w1, w1, w1, lsr #5
    8210:	mov	w0, #0x21b3                	// #8627
    8214:	movk	w0, #0x80c1, lsl #16
    8218:	mov	w2, #0x1fd                 	// #509
    821c:	umull	x0, w1, w0
    8220:	lsr	x0, x0, #40
    8224:	msub	w0, w0, w2, w1
    8228:	adrp	x2, 0 <_start>
    822c:	mov	w1, w0
    8230:	mov	w0, #0x0                   	// #0
    8234:	ldr	x2, [x2]
    8238:	ldp	x21, x22, [sp, #32]
    823c:	add	x2, x2, #0x8
    8240:	ldr	x23, [sp, #48]
    8244:	ldr	x3, [x2, x1, lsl #3]
    8248:	str	x3, [x20]
    824c:	str	x20, [x2, x1, lsl #3]
    8250:	ldp	x19, x20, [sp, #16]
    8254:	ldp	x29, x30, [sp], #64
    8258:	ret
    825c:	str	x19, [x0, #8]
    8260:	b	81e0 <grub_dl_register_symbol+0x48>
    8264:	mov	x0, x20
    8268:	bl	6260 <grub_free>
    826c:	adrp	x0, 0 <_start>
    8270:	ldp	x19, x20, [sp, #16]
    8274:	ldr	x0, [x0]
    8278:	ldp	x21, x22, [sp, #32]
    827c:	ldr	w0, [x0]
    8280:	ldr	x23, [sp, #48]
    8284:	ldp	x29, x30, [sp], #64
    8288:	ret
    828c:	mov	w0, #0x0                   	// #0
    8290:	b	8228 <grub_dl_register_symbol+0x90>
    8294:	nop
	...

00000000000082a8 <grub_dl_ref>:
    82a8:	cbz	x0, 82ec <grub_dl_ref+0x44>
    82ac:	stp	x29, x30, [sp, #-32]!
    82b0:	mov	x29, sp
    82b4:	stp	x19, x20, [sp, #16]
    82b8:	mov	x20, x0
    82bc:	ldr	x19, [x0, #16]
    82c0:	cbz	x19, 82d4 <grub_dl_ref+0x2c>
    82c4:	ldr	x0, [x19, #8]
    82c8:	bl	82a8 <grub_dl_ref>
    82cc:	ldr	x19, [x19]
    82d0:	cbnz	x19, 82c4 <grub_dl_ref+0x1c>
    82d4:	ldr	w0, [x20, #8]
    82d8:	add	w0, w0, #0x1
    82dc:	str	w0, [x20, #8]
    82e0:	ldp	x19, x20, [sp, #16]
    82e4:	ldp	x29, x30, [sp], #32
    82e8:	ret
    82ec:	mov	w0, #0x0                   	// #0
    82f0:	ret
    82f4:	nop

00000000000082f8 <grub_dl_unref>:
    82f8:	cbz	x0, 833c <grub_dl_unref+0x44>
    82fc:	stp	x29, x30, [sp, #-32]!
    8300:	mov	x29, sp
    8304:	stp	x19, x20, [sp, #16]
    8308:	mov	x20, x0
    830c:	ldr	x19, [x0, #16]
    8310:	cbz	x19, 8324 <grub_dl_unref+0x2c>
    8314:	ldr	x0, [x19, #8]
    8318:	bl	82f8 <grub_dl_unref>
    831c:	ldr	x19, [x19]
    8320:	cbnz	x19, 8314 <grub_dl_unref+0x1c>
    8324:	ldr	w0, [x20, #8]
    8328:	sub	w0, w0, #0x1
    832c:	str	w0, [x20, #8]
    8330:	ldp	x19, x20, [sp, #16]
    8334:	ldp	x29, x30, [sp], #32
    8338:	ret
    833c:	mov	w0, #0x0                   	// #0
    8340:	ret
    8344:	nop

0000000000008348 <grub_dl_load>:
    8348:	stp	x29, x30, [sp, #-48]!
    834c:	adrp	x1, 0 <_start>
    8350:	mov	x29, sp
    8354:	stp	x21, x22, [sp, #32]
    8358:	ldr	x22, [x1]
    835c:	stp	x19, x20, [sp, #16]
    8360:	mov	x20, x0
    8364:	mov	x0, x22
    8368:	bl	96e8 <grub_env_get>
    836c:	adrp	x1, 0 <_start>
    8370:	mov	x21, x0
    8374:	ldr	x0, [x1]
    8378:	ldr	x19, [x0]
    837c:	cbnz	x19, 838c <grub_dl_load+0x44>
    8380:	b	83b0 <grub_dl_load+0x68>
    8384:	ldr	x19, [x19, #112]
    8388:	cbz	x19, 83b0 <grub_dl_load+0x68>
    838c:	ldr	x1, [x19]
    8390:	mov	x0, x20
    8394:	bl	c488 <grub_strcmp>
    8398:	cbnz	w0, 8384 <grub_dl_load+0x3c>
    839c:	mov	x0, x19
    83a0:	ldp	x19, x20, [sp, #16]
    83a4:	ldp	x21, x22, [sp, #32]
    83a8:	ldp	x29, x30, [sp], #48
    83ac:	ret
    83b0:	cbz	x21, 8420 <grub_dl_load+0xd8>
    83b4:	adrp	x0, 0 <_start>
    83b8:	mov	x1, x21
    83bc:	mov	x2, x20
    83c0:	ldr	x0, [x0]
    83c4:	bl	d0e0 <grub_xasprintf>
    83c8:	mov	x21, x0
    83cc:	cbz	x0, 8408 <grub_dl_load+0xc0>
    83d0:	bl	91b8 <grub_dl_load_file>
    83d4:	mov	x19, x0
    83d8:	mov	x0, x21
    83dc:	bl	6260 <grub_free>
    83e0:	cbz	x19, 8408 <grub_dl_load+0xc0>
    83e4:	ldr	x0, [x19]
    83e8:	mov	x1, x20
    83ec:	bl	c488 <grub_strcmp>
    83f0:	cbz	w0, 839c <grub_dl_load+0x54>
    83f4:	adrp	x1, 0 <_start>
    83f8:	mov	w0, #0x2                   	// #2
    83fc:	ldr	x1, [x1]
    8400:	bl	9bc8 <grub_error>
    8404:	b	839c <grub_dl_load+0x54>
    8408:	mov	x19, #0x0                   	// #0
    840c:	mov	x0, x19
    8410:	ldp	x19, x20, [sp, #16]
    8414:	ldp	x21, x22, [sp, #32]
    8418:	ldp	x29, x30, [sp], #48
    841c:	ret
    8420:	adrp	x1, 0 <_start>
    8424:	mov	x2, x22
    8428:	mov	x19, #0x0                   	// #0
    842c:	mov	w0, #0x5                   	// #5
    8430:	ldr	x1, [x1]
    8434:	bl	9bc8 <grub_error>
    8438:	b	839c <grub_dl_load+0x54>
    843c:	nop
	...
    8468:	stp	x29, x30, [sp, #-160]!
    846c:	mov	x29, sp
    8470:	stp	x19, x20, [sp, #16]
    8474:	stp	x27, x28, [sp, #80]
    8478:	mov	x28, x0
    847c:	mov	x0, #0x78                  	// #120
    8480:	bl	6220 <grub_zalloc>
    8484:	cbz	x0, 87c8 <grub_dl_load+0x480>
    8488:	adrp	x3, 0 <_start>
    848c:	mov	x19, x0
    8490:	adrp	x1, 0 <_start>
    8494:	adrp	x0, 0 <_start>
    8498:	ldr	x3, [x3]
    849c:	stp	x21, x22, [sp, #32]
    84a0:	mov	w2, #0x1                   	// #1
    84a4:	ldr	x21, [x1]
    84a8:	stp	x23, x24, [sp, #48]
    84ac:	mov	w1, #0x272                 	// #626
    84b0:	ldr	x22, [x0]
    84b4:	stp	x25, x26, [sp, #64]
    84b8:	mov	x4, x19
    84bc:	str	w2, [x19, #8]
    84c0:	mov	x0, x22
    84c4:	mov	x2, x21
    84c8:	bl	c708 <grub_real_dprintf>
    84cc:	ldrh	w0, [x28, #62]
    84d0:	ldrh	w3, [x28, #58]
    84d4:	ldr	x1, [x28, #40]
    84d8:	ldrh	w2, [x28, #60]
    84dc:	mul	w0, w0, w3
    84e0:	add	x1, x28, x1
    84e4:	mov	x20, x1
    84e8:	add	x0, x1, w0, sxtw
    84ec:	ldr	x24, [x0, #24]
    84f0:	cbz	w2, 8798 <grub_dl_load+0x450>
    84f4:	adrp	x0, 0 <_start>
    84f8:	mov	w23, #0x0                   	// #0
    84fc:	ldr	x25, [x0]
    8500:	b	8518 <grub_dl_load+0x1d0>
    8504:	ldrh	w1, [x28, #58]
    8508:	ldrh	w0, [x28, #60]
    850c:	add	x20, x20, x1
    8510:	cmp	w23, w0
    8514:	b.cs	8798 <grub_dl_load+0x450>  // b.hs, b.nlast
    8518:	ldr	w0, [x20]
    851c:	add	w23, w23, #0x1
    8520:	mov	x1, x25
    8524:	add	x0, x0, x24
    8528:	add	x0, x28, x0
    852c:	bl	c488 <grub_strcmp>
    8530:	cbnz	w0, 8504 <grub_dl_load+0x1bc>
    8534:	adrp	x1, 0 <_start>
    8538:	ldr	x0, [x20, #24]
    853c:	ldr	x1, [x1]
    8540:	add	x0, x28, x0
    8544:	bl	c488 <grub_strcmp>
    8548:	cbnz	w0, 8764 <grub_dl_load+0x41c>
    854c:	ldrh	w0, [x28, #62]
    8550:	ldrh	w3, [x28, #58]
    8554:	ldr	x1, [x28, #40]
    8558:	ldrh	w2, [x28, #60]
    855c:	mul	w0, w0, w3
    8560:	add	x1, x28, x1
    8564:	mov	x20, x1
    8568:	add	x0, x1, w0, sxtw
    856c:	ldr	x24, [x0, #24]
    8570:	cbz	w2, 87e0 <grub_dl_load+0x498>
    8574:	adrp	x0, 0 <_start>
    8578:	mov	w23, #0x0                   	// #0
    857c:	ldr	x25, [x0]
    8580:	b	8598 <grub_dl_load+0x250>
    8584:	ldrh	w1, [x28, #58]
    8588:	ldrh	w0, [x28, #60]
    858c:	add	x20, x20, x1
    8590:	cmp	w23, w0
    8594:	b.cs	87e0 <grub_dl_load+0x498>  // b.hs, b.nlast
    8598:	ldr	w0, [x20]
    859c:	add	w23, w23, #0x1
    85a0:	mov	x1, x25
    85a4:	add	x0, x0, x24
    85a8:	add	x0, x28, x0
    85ac:	bl	c488 <grub_strcmp>
    85b0:	cbnz	w0, 8584 <grub_dl_load+0x23c>
    85b4:	ldr	x0, [x20, #24]
    85b8:	add	x0, x28, x0
    85bc:	bl	c9d0 <grub_strdup>
    85c0:	str	x0, [x19]
    85c4:	cbz	x0, 88f4 <grub_dl_load+0x5ac>
    85c8:	ldrh	w0, [x28, #62]
    85cc:	ldrh	w3, [x28, #58]
    85d0:	ldr	x1, [x28, #40]
    85d4:	ldrh	w2, [x28, #60]
    85d8:	mul	w0, w0, w3
    85dc:	add	x1, x28, x1
    85e0:	mov	x23, x1
    85e4:	add	x0, x1, w0, sxtw
    85e8:	ldr	x20, [x0, #24]
    85ec:	cbz	w2, 8f14 <grub_dl_load+0xbcc>
    85f0:	adrp	x0, 0 <_start>
    85f4:	mov	w25, #0x0                   	// #0
    85f8:	ldr	x24, [x0]
    85fc:	b	8614 <grub_dl_load+0x2cc>
    8600:	ldrh	w0, [x28, #58]
    8604:	ldrh	w3, [x28, #60]
    8608:	add	x23, x23, x0
    860c:	cmp	w25, w3
    8610:	b.cs	86bc <grub_dl_load+0x374>  // b.hs, b.nlast
    8614:	ldr	w0, [x23]
    8618:	add	w25, w25, #0x1
    861c:	mov	x1, x24
    8620:	add	x0, x0, x20
    8624:	add	x0, x28, x0
    8628:	bl	c488 <grub_strcmp>
    862c:	cbnz	w0, 8600 <grub_dl_load+0x2b8>
    8630:	ldp	x20, x24, [x23, #24]
    8634:	add	x20, x28, x20
    8638:	add	x24, x20, x24
    863c:	cmp	x20, x24
    8640:	b.cs	86b8 <grub_dl_load+0x370>  // b.hs, b.nlast
    8644:	nop
    8648:	ldrb	w0, [x20]
    864c:	cbz	w0, 86b8 <grub_dl_load+0x370>
    8650:	mov	x0, x20
    8654:	bl	8348 <grub_dl_load>
    8658:	mov	x23, x0
    865c:	cbz	x0, 8910 <grub_dl_load+0x5c8>
    8660:	ldr	x1, [x0, #16]
    8664:	cbz	x1, 8678 <grub_dl_load+0x330>
    8668:	ldr	x0, [x1, #8]
    866c:	bl	82a8 <grub_dl_ref>
    8670:	ldr	x1, [x1]
    8674:	cbnz	x1, 8668 <grub_dl_load+0x320>
    8678:	ldr	w1, [x23, #8]
    867c:	mov	x0, #0x10                  	// #16
    8680:	add	w1, w1, #0x1
    8684:	str	w1, [x23, #8]
    8688:	bl	6210 <grub_malloc>
    868c:	mov	x1, x0
    8690:	cbz	x0, 8910 <grub_dl_load+0x5c8>
    8694:	ldr	x0, [x19, #16]
    8698:	stp	x0, x23, [x1]
    869c:	mov	x0, x20
    86a0:	str	x1, [x19, #16]
    86a4:	bl	ce30 <grub_strlen>
    86a8:	add	x0, x0, #0x1
    86ac:	add	x20, x20, x0
    86b0:	cmp	x24, x20
    86b4:	b.hi	8648 <grub_dl_load+0x300>  // b.pmore
    86b8:	ldrh	w3, [x28, #60]
    86bc:	ldr	x2, [x28, #40]
    86c0:	add	x2, x28, x2
    86c4:	cbz	w3, 8f14 <grub_dl_load+0xbcc>
    86c8:	ldrh	w8, [x28, #58]
    86cc:	mov	w4, #0x0                   	// #0
    86d0:	mov	x23, #0x1                   	// #1
    86d4:	mov	x24, #0x0                   	// #0
    86d8:	ldr	x0, [x2, #48]
    86dc:	add	w4, w4, #0x1
    86e0:	ldr	x6, [x2, #32]
    86e4:	sub	x1, x0, #0x1
    86e8:	add	x1, x1, x24
    86ec:	neg	x7, x0
    86f0:	cmp	x23, x0
    86f4:	and	x1, x1, x7
    86f8:	csel	x23, x23, x0, cs  // cs = hs, nlast
    86fc:	add	x24, x1, x6
    8700:	cmp	w4, w3
    8704:	add	x2, x2, x8
    8708:	b.ne	86d8 <grub_dl_load+0x390>  // b.any
    870c:	add	x2, sp, #0x98
    8710:	add	x1, sp, #0x90
    8714:	mov	x0, x28
    8718:	bl	890 <grub_arm64_dl_get_tramp_got_size>
    871c:	mov	w20, w0
    8720:	cbz	w0, 8808 <grub_dl_load+0x4c0>
    8724:	ldr	w0, [x19, #8]
    8728:	str	xzr, [x19, #56]
    872c:	cmp	w0, #0x0
    8730:	b.gt	87bc <grub_dl_load+0x474>
    8734:	nop
    8738:	mov	x0, x19
    873c:	bl	7fc8 <grub_disk_get_size+0x30>
    8740:	ldp	x21, x22, [sp, #32]
    8744:	mov	x19, #0x0                   	// #0
    8748:	ldp	x23, x24, [sp, #48]
    874c:	ldp	x25, x26, [sp, #64]
    8750:	mov	x0, x19
    8754:	ldp	x19, x20, [sp, #16]
    8758:	ldp	x27, x28, [sp, #80]
    875c:	ldp	x29, x30, [sp], #160
    8760:	ret
    8764:	adrp	x1, 0 <_start>
    8768:	ldr	x0, [x20, #24]
    876c:	ldr	x1, [x1]
    8770:	add	x0, x28, x0
    8774:	bl	c488 <grub_strcmp>
    8778:	cbz	w0, 854c <grub_dl_load+0x204>
    877c:	adrp	x1, 0 <_start>
    8780:	ldr	x0, [x20, #24]
    8784:	ldr	x1, [x1]
    8788:	add	x0, x28, x0
    878c:	bl	c488 <grub_strcmp>
    8790:	cbz	w0, 854c <grub_dl_load+0x204>
    8794:	nop
    8798:	adrp	x1, 0 <_start>
    879c:	mov	w0, #0x2                   	// #2
    87a0:	ldr	x1, [x1]
    87a4:	bl	9bc8 <grub_error>
    87a8:	cbz	w0, 854c <grub_dl_load+0x204>
    87ac:	ldr	w0, [x19, #8]
    87b0:	str	xzr, [x19, #56]
    87b4:	cmp	w0, #0x0
    87b8:	b.le	8738 <grub_dl_load+0x3f0>
    87bc:	ldp	x21, x22, [sp, #32]
    87c0:	ldp	x23, x24, [sp, #48]
    87c4:	ldp	x25, x26, [sp, #64]
    87c8:	mov	x19, #0x0                   	// #0
    87cc:	mov	x0, x19
    87d0:	ldp	x19, x20, [sp, #16]
    87d4:	ldp	x27, x28, [sp, #80]
    87d8:	ldp	x29, x30, [sp], #160
    87dc:	ret
    87e0:	adrp	x1, 0 <_start>
    87e4:	mov	w0, #0x2                   	// #2
    87e8:	ldr	x1, [x1]
    87ec:	bl	9bc8 <grub_error>
    87f0:	cbz	w0, 85c8 <grub_dl_load+0x280>
    87f4:	ldr	w0, [x19, #8]
    87f8:	str	xzr, [x19, #56]
    87fc:	cmp	w0, #0x0
    8800:	b.le	8738 <grub_dl_load+0x3f0>
    8804:	b	87bc <grub_dl_load+0x474>
    8808:	ldp	x1, x2, [sp, #144]
    880c:	cmp	x23, #0x8
    8810:	mov	x0, #0x8                   	// #8
    8814:	csel	x0, x23, x0, cs  // cs = hs, nlast
    8818:	add	x2, x2, #0x7
    881c:	add	x1, x1, #0x7
    8820:	and	x23, x2, #0xfffffffffffffff8
    8824:	and	x1, x1, #0xfffffffffffffff8
    8828:	add	x1, x1, x23
    882c:	add	x23, x1, x24
    8830:	mov	x1, x23
    8834:	bl	5fc0 <grub_memalign>
    8838:	str	x0, [x19, #96]
    883c:	mov	x24, x0
    8840:	cbz	x0, 8df0 <grub_dl_load+0xaa8>
    8844:	ldrh	w4, [x28, #60]
    8848:	ldr	x8, [x28, #40]
    884c:	str	x23, [x19, #104]
    8850:	add	x25, x28, x8
    8854:	cbz	w4, 8f68 <grub_dl_load+0xc20>
    8858:	mov	w26, #0x0                   	// #0
    885c:	b	8878 <grub_dl_load+0x530>
    8860:	ldrh	w0, [x28, #58]
    8864:	add	w26, w26, #0x1
    8868:	cmp	w26, w4
    886c:	mov	w2, w4
    8870:	add	x25, x25, x0
    8874:	b.cs	8934 <grub_dl_load+0x5ec>  // b.hs, b.nlast
    8878:	ldr	x0, [x25, #8]
    887c:	tbz	w0, #1, 8860 <grub_dl_load+0x518>
    8880:	mov	x0, #0x20                  	// #32
    8884:	bl	6210 <grub_malloc>
    8888:	mov	x23, x0
    888c:	cbz	x0, 8df0 <grub_dl_load+0xaa8>
    8890:	ldr	x2, [x25, #32]
    8894:	cbz	x2, 8908 <grub_dl_load+0x5c0>
    8898:	ldr	x0, [x25, #48]
    889c:	ldr	w1, [x25, #4]
    88a0:	add	x27, x24, x0
    88a4:	neg	x0, x0
    88a8:	sub	x27, x27, #0x1
    88ac:	cmp	w1, #0x1
    88b0:	and	x27, x27, x0
    88b4:	add	x24, x27, x2
    88b8:	b.eq	8dc0 <grub_dl_load+0xa78>  // b.none
    88bc:	cmp	w1, #0x8
    88c0:	b.ne	88d4 <grub_dl_load+0x58c>  // b.any
    88c4:	mov	x0, x27
    88c8:	mov	w1, #0x0                   	// #0
    88cc:	bl	ccd0 <grub_memset>
    88d0:	ldr	x2, [x25, #32]
    88d4:	str	x27, [x23, #8]
    88d8:	ldr	x0, [x19, #24]
    88dc:	ldrh	w4, [x28, #60]
    88e0:	str	x0, [x23]
    88e4:	str	x2, [x23, #16]
    88e8:	str	w26, [x23, #24]
    88ec:	str	x23, [x19, #24]
    88f0:	b	8860 <grub_dl_load+0x518>
    88f4:	adrp	x0, 0 <_start>
    88f8:	ldr	x0, [x0]
    88fc:	ldr	w0, [x0]
    8900:	cbnz	w0, 87f4 <grub_dl_load+0x4ac>
    8904:	b	85c8 <grub_dl_load+0x280>
    8908:	str	xzr, [x0, #8]
    890c:	b	88d8 <grub_dl_load+0x590>
    8910:	adrp	x0, 0 <_start>
    8914:	ldr	x0, [x0]
    8918:	ldr	w0, [x0]
    891c:	cbz	w0, 86b8 <grub_dl_load+0x370>
    8920:	ldr	w0, [x19, #8]
    8924:	str	xzr, [x19, #56]
    8928:	cmp	w0, #0x0
    892c:	b.le	8738 <grub_dl_load+0x3f0>
    8930:	b	87bc <grub_dl_load+0x474>
    8934:	ldr	x8, [x28, #40]
    8938:	add	x25, x28, x8
    893c:	ldr	x0, [sp, #144]
    8940:	add	x24, x24, #0x7
    8944:	and	x24, x24, #0xfffffffffffffff8
    8948:	stp	x24, x24, [x19, #80]
    894c:	add	x0, x24, x0
    8950:	add	x0, x0, #0x7
    8954:	and	x0, x0, #0xfffffffffffffff8
    8958:	stp	x0, x0, [x19, #64]
    895c:	cbz	w2, 8ac4 <grub_dl_load+0x77c>
    8960:	ldrh	w6, [x28, #58]
    8964:	mov	x0, x25
    8968:	mov	w1, #0x0                   	// #0
    896c:	and	x7, x6, #0xffff
    8970:	b	8980 <grub_dl_load+0x638>
    8974:	add	x0, x0, x7
    8978:	cmp	w1, w2
    897c:	b.eq	8be4 <grub_dl_load+0x89c>  // b.none
    8980:	ldr	w3, [x0, #4]
    8984:	add	w1, w1, #0x1
    8988:	cmp	w3, #0x2
    898c:	b.ne	8974 <grub_dl_load+0x62c>  // b.any
    8990:	ldr	w1, [x0, #40]
    8994:	ldp	x3, x24, [x0, #24]
    8998:	ldr	x23, [x0, #56]
    899c:	mul	w6, w6, w1
    89a0:	add	x6, x6, x8
    89a4:	udiv	w0, w24, w23
    89a8:	add	x6, x28, x6
    89ac:	add	x26, x28, x3
    89b0:	stp	x26, x23, [x19, #32]
    89b4:	cmp	w24, w23
    89b8:	str	w0, [sp, #124]
    89bc:	ldr	x0, [x6, #24]
    89c0:	str	x0, [sp, #112]
    89c4:	b.cc	8ac4 <grub_dl_load+0x77c>  // b.lo, b.ul, b.last
    89c8:	mov	w24, #0x0                   	// #0
    89cc:	ldrb	w0, [x26, #4]
    89d0:	ldr	x2, [sp, #112]
    89d4:	ldr	w1, [x26]
    89d8:	lsr	w3, w0, #4
    89dc:	str	w3, [sp, #104]
    89e0:	add	x4, x2, w1, uxtw
    89e4:	and	w2, w0, #0xf
    89e8:	add	x27, x28, x4
    89ec:	cmp	w2, #0x3
    89f0:	b.eq	8d54 <grub_dl_load+0xa0c>  // b.none
    89f4:	tst	w0, #0xc
    89f8:	b.ne	8d14 <grub_dl_load+0x9cc>  // b.any
    89fc:	tst	w0, #0xe
    8a00:	b.ne	8bf8 <grub_dl_load+0x8b0>  // b.any
    8a04:	ldrh	w2, [x26, #6]
    8a08:	cbz	w1, 8d98 <grub_dl_load+0xa50>
    8a0c:	cbnz	w2, 8d98 <grub_dl_load+0xa50>
    8a10:	ldrb	w2, [x28, x4]
    8a14:	cbz	w2, 8f60 <grub_dl_load+0xc18>
    8a18:	mov	x4, x27
    8a1c:	mov	w0, #0x0                   	// #0
    8a20:	add	w1, w0, w0, lsl #10
    8a24:	add	w1, w2, w1, lsl #6
    8a28:	ldrb	w2, [x4, #1]!
    8a2c:	sub	w0, w1, w0
    8a30:	cbnz	w2, 8a20 <grub_dl_load+0x6d8>
    8a34:	add	w0, w0, w0, lsr #5
    8a38:	mov	w1, #0x21b3                	// #8627
    8a3c:	movk	w1, #0x80c1, lsl #16
    8a40:	mov	w2, #0x1fd                 	// #509
    8a44:	umull	x1, w0, w1
    8a48:	lsr	x1, x1, #40
    8a4c:	msub	w1, w1, w2, w0
    8a50:	adrp	x0, 0 <_start>
    8a54:	ldr	x0, [x0]
    8a58:	add	x0, x0, #0x8
    8a5c:	ldr	x25, [x0, w1, uxtw #3]
    8a60:	cbnz	x25, 8a70 <grub_dl_load+0x728>
    8a64:	b	8f20 <grub_dl_load+0xbd8>
    8a68:	ldr	x25, [x25]
    8a6c:	cbz	x25, 8f20 <grub_dl_load+0xbd8>
    8a70:	ldr	x0, [x25, #8]
    8a74:	mov	x1, x27
    8a78:	bl	c488 <grub_strcmp>
    8a7c:	cbnz	w0, 8a68 <grub_dl_load+0x720>
    8a80:	ldr	w0, [x25, #24]
    8a84:	ldr	x1, [x25, #16]
    8a88:	str	x1, [x26, #8]
    8a8c:	cbz	w0, 8aa0 <grub_dl_load+0x758>
    8a90:	ldrb	w0, [sp, #104]
    8a94:	ubfiz	w25, w0, #4, #4
    8a98:	add	w25, w25, #0x2
    8a9c:	strb	w25, [x26, #4]
    8aa0:	ldr	w0, [sp, #124]
    8aa4:	add	w24, w24, #0x1
    8aa8:	add	x26, x26, w23, uxtw
    8aac:	cmp	w24, w0
    8ab0:	b.cc	89cc <grub_dl_load+0x684>  // b.lo, b.ul, b.last
    8ab4:	nop
    8ab8:	ldr	x25, [x28, #40]
    8abc:	ldrh	w4, [x28, #60]
    8ac0:	add	x25, x28, x25
    8ac4:	cbnz	w4, 8be4 <grub_dl_load+0x89c>
    8ac8:	adrp	x0, 0 <_start>
    8acc:	mov	x2, x21
    8ad0:	ldp	x5, x4, [x19, #96]
    8ad4:	mov	w1, #0x22b                 	// #555
    8ad8:	ldr	x3, [x0]
    8adc:	mov	x0, x22
    8ae0:	bl	c708 <grub_real_dprintf>
    8ae4:	ldp	x0, x1, [x19, #96]
    8ae8:	bl	1b8 <grub_arch_sync_caches>
    8aec:	adrp	x0, 0 <_start>
    8af0:	mov	x2, x21
    8af4:	ldr	x4, [x19]
    8af8:	mov	w1, #0x289                 	// #649
    8afc:	ldr	x3, [x0]
    8b00:	mov	x0, x22
    8b04:	bl	c708 <grub_real_dprintf>
    8b08:	adrp	x0, 0 <_start>
    8b0c:	mov	x2, x21
    8b10:	ldr	x4, [x19, #48]
    8b14:	mov	w1, #0x28a                 	// #650
    8b18:	ldr	x3, [x0]
    8b1c:	mov	x0, x22
    8b20:	bl	c708 <grub_real_dprintf>
    8b24:	adrp	x0, 0 <_start>
    8b28:	ldr	x21, [x19]
    8b2c:	ldr	x0, [x0]
    8b30:	ldr	x20, [x0]
    8b34:	cbnz	x20, 8b44 <grub_dl_load+0x7fc>
    8b38:	b	8dd8 <grub_dl_load+0xa90>
    8b3c:	ldr	x20, [x20, #112]
    8b40:	cbz	x20, 8dd8 <grub_dl_load+0xa90>
    8b44:	ldr	x1, [x20]
    8b48:	mov	x0, x21
    8b4c:	bl	c488 <grub_strcmp>
    8b50:	cbnz	w0, 8b3c <grub_dl_load+0x7f4>
    8b54:	adrp	x1, 0 <_start>
    8b58:	mov	w0, #0x2                   	// #2
    8b5c:	ldr	x2, [x19]
    8b60:	ldr	x1, [x1]
    8b64:	bl	9bc8 <grub_error>
    8b68:	cbz	w0, 8dd8 <grub_dl_load+0xa90>
    8b6c:	ldr	w0, [x19, #8]
    8b70:	cmp	w0, #0x0
    8b74:	b.gt	87bc <grub_dl_load+0x474>
    8b78:	ldr	x0, [x19, #56]
    8b7c:	cbz	x0, 8738 <grub_dl_load+0x3f0>
    8b80:	blr	x0
    8b84:	b	8738 <grub_dl_load+0x3f0>
    8b88:	ldr	x3, [x19, #24]
    8b8c:	cbz	x3, 8bd0 <grub_dl_load+0x888>
    8b90:	ldr	w1, [x25, #44]
    8b94:	b	8ba0 <grub_dl_load+0x858>
    8b98:	ldr	x3, [x3]
    8b9c:	cbz	x3, 8bd0 <grub_dl_load+0x888>
    8ba0:	ldr	w0, [x3, #24]
    8ba4:	cmp	w0, w1
    8ba8:	b.ne	8b98 <grub_dl_load+0x850>  // b.any
    8bac:	ldr	x0, [x19, #32]
    8bb0:	cbz	x0, 8f3c <grub_dl_load+0xbf4>
    8bb4:	mov	x2, x25
    8bb8:	mov	x1, x28
    8bbc:	mov	x0, x19
    8bc0:	bl	358 <grub_arch_dl_relocate_symbols>
    8bc4:	cbnz	w0, 8724 <grub_dl_load+0x3dc>
    8bc8:	ldrh	w4, [x28, #60]
    8bcc:	nop
    8bd0:	ldrh	w0, [x28, #58]
    8bd4:	add	w20, w20, #0x1
    8bd8:	cmp	w20, w4
    8bdc:	add	x25, x25, x0
    8be0:	b.cs	8ac8 <grub_dl_load+0x780>  // b.hs, b.nlast
    8be4:	ldr	w0, [x25, #4]
    8be8:	cmp	w0, #0x9
    8bec:	ccmp	w0, #0x4, #0x4, ne  // ne = any
    8bf0:	b.ne	8bd0 <grub_dl_load+0x888>  // b.any
    8bf4:	b	8b88 <grub_dl_load+0x840>
    8bf8:	cmp	w2, #0x2
    8bfc:	b.ne	8d38 <grub_dl_load+0x9f0>  // b.any
    8c00:	ldr	x0, [x19, #24]
    8c04:	ldrh	w2, [x26, #6]
    8c08:	cbnz	x0, 8c18 <grub_dl_load+0x8d0>
    8c0c:	b	8de8 <grub_dl_load+0xaa0>
    8c10:	ldr	x0, [x0]
    8c14:	cbz	x0, 8de8 <grub_dl_load+0xaa0>
    8c18:	ldr	w1, [x0, #24]
    8c1c:	cmp	w2, w1
    8c20:	b.ne	8c10 <grub_dl_load+0x8c8>  // b.any
    8c24:	ldr	x1, [x0, #8]
    8c28:	ldr	x0, [x26, #8]
    8c2c:	add	x1, x1, x0
    8c30:	ldr	w0, [sp, #104]
    8c34:	str	x1, [x26, #8]
    8c38:	stp	x1, x4, [sp, #128]
    8c3c:	cbz	w0, 8ce0 <grub_dl_load+0x998>
    8c40:	mov	x0, #0x28                  	// #40
    8c44:	bl	6210 <grub_malloc>
    8c48:	mov	x25, x0
    8c4c:	ldp	x1, x4, [sp, #128]
    8c50:	cbz	x0, 8f00 <grub_dl_load+0xbb8>
    8c54:	mov	x0, x27
    8c58:	str	x1, [sp, #104]
    8c5c:	str	x4, [sp, #128]
    8c60:	bl	c9d0 <grub_strdup>
    8c64:	str	x0, [x25, #8]
    8c68:	ldr	x1, [sp, #104]
    8c6c:	ldr	x4, [sp, #128]
    8c70:	cbz	x0, 8ef4 <grub_dl_load+0xbac>
    8c74:	mov	w0, #0x1                   	// #1
    8c78:	str	x1, [x25, #16]
    8c7c:	str	w0, [x25, #24]
    8c80:	str	x19, [x25, #32]
    8c84:	ldrb	w4, [x28, x4]
    8c88:	cbz	w4, 8f94 <grub_dl_load+0xc4c>
    8c8c:	mov	x8, x27
    8c90:	mov	w1, #0x0                   	// #0
    8c94:	nop
    8c98:	add	w2, w1, w1, lsl #10
    8c9c:	add	w2, w4, w2, lsl #6
    8ca0:	ldrb	w4, [x8, #1]!
    8ca4:	sub	w1, w2, w1
    8ca8:	cbnz	w4, 8c98 <grub_dl_load+0x950>
    8cac:	add	w1, w1, w1, lsr #5
    8cb0:	mov	w0, #0x21b3                	// #8627
    8cb4:	movk	w0, #0x80c1, lsl #16
    8cb8:	mov	w2, #0x1fd                 	// #509
    8cbc:	umull	x0, w1, w0
    8cc0:	lsr	x0, x0, #40
    8cc4:	msub	w0, w0, w2, w1
    8cc8:	adrp	x1, 0 <_start>
    8ccc:	ldr	x1, [x1]
    8cd0:	add	x1, x1, #0x8
    8cd4:	ldr	x2, [x1, x0, lsl #3]
    8cd8:	str	x2, [x25]
    8cdc:	str	x25, [x1, x0, lsl #3]
    8ce0:	adrp	x1, 0 <_start>
    8ce4:	mov	x0, x27
    8ce8:	ldr	x1, [x1]
    8cec:	bl	c488 <grub_strcmp>
    8cf0:	cbnz	w0, 8e14 <grub_dl_load+0xacc>
    8cf4:	ldr	x0, [x26, #8]
    8cf8:	str	x0, [x19, #48]
    8cfc:	ldr	w0, [sp, #124]
    8d00:	add	w24, w24, #0x1
    8d04:	add	x26, x26, w23, uxtw
    8d08:	cmp	w24, w0
    8d0c:	b.cc	89cc <grub_dl_load+0x684>  // b.lo, b.ul, b.last
    8d10:	b	8ab8 <grub_dl_load+0x770>
    8d14:	cmp	w2, #0x4
    8d18:	b.ne	8d3c <grub_dl_load+0x9f4>  // b.any
    8d1c:	ldr	w0, [sp, #124]
    8d20:	add	w24, w24, #0x1
    8d24:	str	xzr, [x26, #8]
    8d28:	add	x26, x26, w23, uxtw
    8d2c:	cmp	w24, w0
    8d30:	b.cc	89cc <grub_dl_load+0x684>  // b.lo, b.ul, b.last
    8d34:	b	8ab8 <grub_dl_load+0x770>
    8d38:	mov	w2, #0x3                   	// #3
    8d3c:	adrp	x1, 0 <_start>
    8d40:	mov	w0, #0x2                   	// #2
    8d44:	ldr	x1, [x1]
    8d48:	bl	9bc8 <grub_error>
    8d4c:	cbz	w0, 8ab8 <grub_dl_load+0x770>
    8d50:	b	8724 <grub_dl_load+0x3dc>
    8d54:	ldr	x0, [x19, #24]
    8d58:	ldrh	w2, [x26, #6]
    8d5c:	cbnz	x0, 8d6c <grub_dl_load+0xa24>
    8d60:	b	8f54 <grub_dl_load+0xc0c>
    8d64:	ldr	x0, [x0]
    8d68:	cbz	x0, 8d7c <grub_dl_load+0xa34>
    8d6c:	ldr	w1, [x0, #24]
    8d70:	cmp	w2, w1
    8d74:	b.ne	8d64 <grub_dl_load+0xa1c>  // b.any
    8d78:	ldr	x0, [x0, #8]
    8d7c:	str	x0, [x26, #8]
    8d80:	ldr	w0, [sp, #124]
    8d84:	add	w24, w24, #0x1
    8d88:	add	x26, x26, w23, uxtw
    8d8c:	cmp	w24, w0
    8d90:	b.cc	89cc <grub_dl_load+0x684>  // b.lo, b.ul, b.last
    8d94:	b	8ab8 <grub_dl_load+0x770>
    8d98:	ldr	x0, [x19, #24]
    8d9c:	cbnz	x0, 8dac <grub_dl_load+0xa64>
    8da0:	b	8e34 <grub_dl_load+0xaec>
    8da4:	ldr	x0, [x0]
    8da8:	cbz	x0, 8e34 <grub_dl_load+0xaec>
    8dac:	ldr	w1, [x0, #24]
    8db0:	cmp	w2, w1
    8db4:	b.ne	8da4 <grub_dl_load+0xa5c>  // b.any
    8db8:	ldr	x1, [x0, #8]
    8dbc:	b	8e38 <grub_dl_load+0xaf0>
    8dc0:	ldr	x1, [x25, #24]
    8dc4:	mov	x0, x27
    8dc8:	add	x1, x28, x1
    8dcc:	bl	bf40 <grub_memmove>
    8dd0:	ldr	x2, [x25, #32]
    8dd4:	b	88d4 <grub_dl_load+0x58c>
    8dd8:	ldp	x21, x22, [sp, #32]
    8ddc:	ldp	x23, x24, [sp, #48]
    8de0:	ldp	x25, x26, [sp, #64]
    8de4:	b	8750 <grub_dl_load+0x408>
    8de8:	mov	x1, #0x0                   	// #0
    8dec:	b	8c28 <grub_dl_load+0x8e0>
    8df0:	adrp	x0, 0 <_start>
    8df4:	ldr	x0, [x0]
    8df8:	ldr	w0, [x0]
    8dfc:	cbnz	w0, 8724 <grub_dl_load+0x3dc>
    8e00:	ldr	x8, [x28, #40]
    8e04:	ldrh	w4, [x28, #60]
    8e08:	add	x25, x28, x8
    8e0c:	mov	w2, w4
    8e10:	b	895c <grub_dl_load+0x614>
    8e14:	adrp	x1, 0 <_start>
    8e18:	mov	x0, x27
    8e1c:	ldr	x1, [x1]
    8e20:	bl	c488 <grub_strcmp>
    8e24:	cbnz	w0, 8aa0 <grub_dl_load+0x758>
    8e28:	ldr	x0, [x26, #8]
    8e2c:	str	x0, [x19, #56]
    8e30:	b	8aa0 <grub_dl_load+0x758>
    8e34:	mov	x1, #0x0                   	// #0
    8e38:	ldr	x0, [x26, #8]
    8e3c:	add	x1, x1, x0
    8e40:	ldr	w0, [sp, #104]
    8e44:	str	x1, [x26, #8]
    8e48:	cbz	w0, 8aa0 <grub_dl_load+0x758>
    8e4c:	mov	x0, #0x28                  	// #40
    8e50:	str	x1, [sp, #104]
    8e54:	str	x4, [sp, #128]
    8e58:	bl	6210 <grub_malloc>
    8e5c:	mov	x25, x0
    8e60:	ldr	x1, [sp, #104]
    8e64:	ldr	x4, [sp, #128]
    8e68:	cbz	x0, 8f78 <grub_dl_load+0xc30>
    8e6c:	mov	x0, x27
    8e70:	str	x1, [sp, #104]
    8e74:	str	x4, [sp, #128]
    8e78:	bl	c9d0 <grub_strdup>
    8e7c:	str	x0, [x25, #8]
    8e80:	ldr	x1, [sp, #104]
    8e84:	ldr	x4, [sp, #128]
    8e88:	cbz	x0, 8f70 <grub_dl_load+0xc28>
    8e8c:	str	x1, [x25, #16]
    8e90:	str	wzr, [x25, #24]
    8e94:	str	x19, [x25, #32]
    8e98:	ldrb	w4, [x28, x4]
    8e9c:	cbz	w4, 8f9c <grub_dl_load+0xc54>
    8ea0:	mov	w1, #0x0                   	// #0
    8ea4:	nop
    8ea8:	add	w2, w1, w1, lsl #10
    8eac:	add	w2, w4, w2, lsl #6
    8eb0:	ldrb	w4, [x27, #1]!
    8eb4:	sub	w1, w2, w1
    8eb8:	cbnz	w4, 8ea8 <grub_dl_load+0xb60>
    8ebc:	add	w1, w1, w1, lsr #5
    8ec0:	mov	w0, #0x21b3                	// #8627
    8ec4:	movk	w0, #0x80c1, lsl #16
    8ec8:	mov	w2, #0x1fd                 	// #509
    8ecc:	umull	x0, w1, w0
    8ed0:	lsr	x0, x0, #40
    8ed4:	msub	w0, w0, w2, w1
    8ed8:	adrp	x1, 0 <_start>
    8edc:	ldr	x1, [x1]
    8ee0:	add	x1, x1, #0x8
    8ee4:	ldr	x2, [x1, x0, lsl #3]
    8ee8:	str	x2, [x25]
    8eec:	str	x25, [x1, x0, lsl #3]
    8ef0:	b	8aa0 <grub_dl_load+0x758>
    8ef4:	mov	x0, x25
    8ef8:	bl	6260 <grub_free>
    8efc:	nop
    8f00:	adrp	x0, 0 <_start>
    8f04:	ldr	x0, [x0]
    8f08:	ldr	w0, [x0]
    8f0c:	cbz	w0, 8ce0 <grub_dl_load+0x998>
    8f10:	b	8724 <grub_dl_load+0x3dc>
    8f14:	mov	x23, #0x1                   	// #1
    8f18:	mov	x24, #0x0                   	// #0
    8f1c:	b	870c <grub_dl_load+0x3c4>
    8f20:	adrp	x1, 0 <_start>
    8f24:	mov	x2, x27
    8f28:	mov	w0, #0x2                   	// #2
    8f2c:	ldr	x1, [x1]
    8f30:	bl	9bc8 <grub_error>
    8f34:	cbz	w0, 8ab8 <grub_dl_load+0x770>
    8f38:	b	8724 <grub_dl_load+0x3dc>
    8f3c:	adrp	x1, 0 <_start>
    8f40:	mov	w0, #0x2                   	// #2
    8f44:	ldr	x1, [x1]
    8f48:	bl	9bc8 <grub_error>
    8f4c:	cbnz	w0, 8724 <grub_dl_load+0x3dc>
    8f50:	b	8ac8 <grub_dl_load+0x780>
    8f54:	mov	x0, #0x0                   	// #0
    8f58:	str	x0, [x26, #8]
    8f5c:	b	8d80 <grub_dl_load+0xa38>
    8f60:	mov	w1, #0x0                   	// #0
    8f64:	b	8a50 <grub_dl_load+0x708>
    8f68:	mov	w2, #0x0                   	// #0
    8f6c:	b	893c <grub_dl_load+0x5f4>
    8f70:	mov	x0, x25
    8f74:	bl	6260 <grub_free>
    8f78:	adrp	x0, 0 <_start>
    8f7c:	ldr	x0, [x0]
    8f80:	ldr	w1, [x0]
    8f84:	cbz	w1, 8aa0 <grub_dl_load+0x758>
    8f88:	ldr	w0, [x0]
    8f8c:	cbz	w0, 8ab8 <grub_dl_load+0x770>
    8f90:	b	8724 <grub_dl_load+0x3dc>
    8f94:	mov	x0, #0x0                   	// #0
    8f98:	b	8cc8 <grub_dl_load+0x980>
    8f9c:	mov	x0, #0x0                   	// #0
    8fa0:	b	8ed8 <grub_dl_load+0xb90>
    8fa4:	nop
	...

0000000000009058 <grub_dl_load_core_noinit>:
    9058:	stp	x29, x30, [sp, #-32]!
    905c:	adrp	x4, 0 <_start>
    9060:	adrp	x3, 0 <_start>
    9064:	adrp	x2, 0 <_start>
    9068:	mov	x29, sp
    906c:	ldr	x3, [x3]
    9070:	stp	x19, x20, [sp, #16]
    9074:	mov	x19, x0
    9078:	ldr	x2, [x2]
    907c:	mov	x20, x1
    9080:	ldr	x0, [x4]
    9084:	mov	x5, x1
    9088:	mov	x4, x19
    908c:	mov	w1, #0x259                 	// #601
    9090:	bl	c708 <grub_real_dprintf>
    9094:	cmp	x20, #0x3f
    9098:	b.ls	912c <grub_dl_load_core_noinit+0xd4>  // b.plast
    909c:	ldr	w1, [x19]
    90a0:	mov	w0, #0x457f                	// #17791
    90a4:	movk	w0, #0x464c, lsl #16
    90a8:	cmp	w1, w0
    90ac:	b.ne	90bc <grub_dl_load_core_noinit+0x64>  // b.any
    90b0:	ldrb	w0, [x19, #6]
    90b4:	cmp	w0, #0x1
    90b8:	b.eq	9104 <grub_dl_load_core_noinit+0xac>  // b.none
    90bc:	adrp	x1, 0 <_start>
    90c0:	mov	w0, #0x15                  	// #21
    90c4:	ldr	x1, [x1]
    90c8:	bl	9bc8 <grub_error>
    90cc:	cbnz	w0, 911c <grub_dl_load_core_noinit+0xc4>
    90d0:	ldrh	w0, [x19, #16]
    90d4:	cmp	w0, #0x1
    90d8:	b.ne	9140 <grub_dl_load_core_noinit+0xe8>  // b.any
    90dc:	ldrh	w0, [x19, #58]
    90e0:	ldrh	w2, [x19, #60]
    90e4:	ldr	x1, [x19, #40]
    90e8:	umaddl	x0, w0, w2, x1
    90ec:	cmp	x0, x20
    90f0:	b.hi	9160 <grub_dl_load_core_noinit+0x108>  // b.pmore
    90f4:	mov	x0, x19
    90f8:	ldp	x19, x20, [sp, #16]
    90fc:	ldp	x29, x30, [sp], #32
    9100:	b	8468 <grub_dl_load+0x120>
    9104:	ldr	w0, [x19, #20]
    9108:	cmp	w0, #0x1
    910c:	b.ne	90bc <grub_dl_load_core_noinit+0x64>  // b.any
    9110:	mov	x0, x19
    9114:	bl	320 <grub_arch_dl_check_header>
    9118:	cbz	w0, 90d0 <grub_dl_load_core_noinit+0x78>
    911c:	mov	x0, #0x0                   	// #0
    9120:	ldp	x19, x20, [sp, #16]
    9124:	ldp	x29, x30, [sp], #32
    9128:	ret
    912c:	adrp	x1, 0 <_start>
    9130:	mov	w0, #0x15                  	// #21
    9134:	ldr	x1, [x1]
    9138:	bl	9bc8 <grub_error>
    913c:	b	90cc <grub_dl_load_core_noinit+0x74>
    9140:	adrp	x1, 0 <_start>
    9144:	mov	w0, #0x2                   	// #2
    9148:	ldr	x1, [x1]
    914c:	bl	9bc8 <grub_error>
    9150:	mov	x0, #0x0                   	// #0
    9154:	ldp	x19, x20, [sp, #16]
    9158:	ldp	x29, x30, [sp], #32
    915c:	ret
    9160:	adrp	x1, 0 <_start>
    9164:	mov	w0, #0x15                  	// #21
    9168:	ldr	x1, [x1]
    916c:	bl	9bc8 <grub_error>
    9170:	mov	x0, #0x0                   	// #0
    9174:	ldp	x19, x20, [sp, #16]
    9178:	ldp	x29, x30, [sp], #32
    917c:	ret
	...

00000000000091b8 <grub_dl_load_file>:
    91b8:	stp	x29, x30, [sp, #-48]!
    91bc:	mov	w1, #0x1                   	// #1
    91c0:	mov	x29, sp
    91c4:	stp	x19, x20, [sp, #16]
    91c8:	bl	9fa8 <grub_file_open>
    91cc:	mov	x19, x0
    91d0:	cbz	x0, 9258 <grub_dl_load_file+0xa0>
    91d4:	str	x21, [sp, #32]
    91d8:	ldr	x21, [x0, #64]
    91dc:	mov	x0, x21
    91e0:	bl	6210 <grub_malloc>
    91e4:	mov	x20, x0
    91e8:	cbz	x0, 928c <grub_dl_load_file+0xd4>
    91ec:	mov	x1, x0
    91f0:	mov	x2, x21
    91f4:	mov	x0, x19
    91f8:	bl	a248 <grub_file_read>
    91fc:	cmp	x0, w21, sxtw
    9200:	mov	x0, x19
    9204:	b.ne	9268 <grub_dl_load_file+0xb0>  // b.any
    9208:	bl	a350 <grub_file_close>
    920c:	mov	x1, x21
    9210:	mov	x0, x20
    9214:	bl	9058 <grub_dl_load_core_noinit>
    9218:	mov	x19, x0
    921c:	cbz	x0, 92a0 <grub_dl_load_file+0xe8>
    9220:	ldr	x1, [x0, #48]
    9224:	cbz	x1, 922c <grub_dl_load_file+0x74>
    9228:	blr	x1
    922c:	adrp	x1, 0 <_start>
    9230:	mov	x0, x20
    9234:	ldr	x1, [x1]
    9238:	ldr	x2, [x1]
    923c:	str	x2, [x19, #112]
    9240:	str	x19, [x1]
    9244:	bl	6260 <grub_free>
    9248:	ldr	w0, [x19, #8]
    924c:	ldr	x21, [sp, #32]
    9250:	sub	w0, w0, #0x1
    9254:	str	w0, [x19, #8]
    9258:	mov	x0, x19
    925c:	ldp	x19, x20, [sp, #16]
    9260:	ldp	x29, x30, [sp], #48
    9264:	ret
    9268:	bl	a350 <grub_file_close>
    926c:	mov	x19, #0x0                   	// #0
    9270:	mov	x0, x20
    9274:	bl	6260 <grub_free>
    9278:	mov	x0, x19
    927c:	ldp	x19, x20, [sp, #16]
    9280:	ldr	x21, [sp, #32]
    9284:	ldp	x29, x30, [sp], #48
    9288:	ret
    928c:	mov	x0, x19
    9290:	mov	x19, #0x0                   	// #0
    9294:	bl	a350 <grub_file_close>
    9298:	ldr	x21, [sp, #32]
    929c:	b	9258 <grub_dl_load_file+0xa0>
    92a0:	mov	x0, x20
    92a4:	bl	6260 <grub_free>
    92a8:	ldr	x21, [sp, #32]
    92ac:	b	9258 <grub_dl_load_file+0xa0>
	...

00000000000092b8 <grub_dl_load_core>:
    92b8:	stp	x29, x30, [sp, #-32]!
    92bc:	adrp	x4, 0 <_start>
    92c0:	adrp	x3, 0 <_start>
    92c4:	adrp	x2, 0 <_start>
    92c8:	mov	x29, sp
    92cc:	ldr	x3, [x3]
    92d0:	stp	x19, x20, [sp, #16]
    92d4:	mov	x19, x0
    92d8:	ldr	x2, [x2]
    92dc:	mov	x20, x1
    92e0:	ldr	x0, [x4]
    92e4:	mov	x5, x1
    92e8:	mov	x4, x19
    92ec:	mov	w1, #0x259                 	// #601
    92f0:	bl	c708 <grub_real_dprintf>
    92f4:	cmp	x20, #0x3f
    92f8:	b.ls	93c0 <grub_dl_load_core+0x108>  // b.plast
    92fc:	ldr	w1, [x19]
    9300:	mov	w0, #0x457f                	// #17791
    9304:	movk	w0, #0x464c, lsl #16
    9308:	cmp	w1, w0
    930c:	b.ne	931c <grub_dl_load_core+0x64>  // b.any
    9310:	ldrb	w0, [x19, #6]
    9314:	cmp	w0, #0x1
    9318:	b.eq	9394 <grub_dl_load_core+0xdc>  // b.none
    931c:	adrp	x1, 0 <_start>
    9320:	mov	w0, #0x15                  	// #21
    9324:	ldr	x1, [x1]
    9328:	bl	9bc8 <grub_error>
    932c:	cbnz	w0, 93ac <grub_dl_load_core+0xf4>
    9330:	ldrh	w0, [x19, #16]
    9334:	cmp	w0, #0x1
    9338:	b.ne	93d4 <grub_dl_load_core+0x11c>  // b.any
    933c:	ldrh	w0, [x19, #58]
    9340:	ldrh	w2, [x19, #60]
    9344:	ldr	x1, [x19, #40]
    9348:	umaddl	x0, w0, w2, x1
    934c:	cmp	x20, x0
    9350:	b.cc	93f8 <grub_dl_load_core+0x140>  // b.lo, b.ul, b.last
    9354:	mov	x0, x19
    9358:	bl	8468 <grub_dl_load+0x120>
    935c:	mov	x19, x0
    9360:	cbz	x0, 93ac <grub_dl_load_core+0xf4>
    9364:	ldr	x1, [x0, #48]
    9368:	cbz	x1, 9370 <grub_dl_load_core+0xb8>
    936c:	blr	x1
    9370:	adrp	x0, 0 <_start>
    9374:	ldr	x0, [x0]
    9378:	ldr	x1, [x0]
    937c:	str	x19, [x0]
    9380:	str	x1, [x19, #112]
    9384:	mov	x0, x19
    9388:	ldp	x19, x20, [sp, #16]
    938c:	ldp	x29, x30, [sp], #32
    9390:	ret
    9394:	ldr	w0, [x19, #20]
    9398:	cmp	w0, #0x1
    939c:	b.ne	931c <grub_dl_load_core+0x64>  // b.any
    93a0:	mov	x0, x19
    93a4:	bl	320 <grub_arch_dl_check_header>
    93a8:	cbz	w0, 9330 <grub_dl_load_core+0x78>
    93ac:	mov	x19, #0x0                   	// #0
    93b0:	mov	x0, x19
    93b4:	ldp	x19, x20, [sp, #16]
    93b8:	ldp	x29, x30, [sp], #32
    93bc:	ret
    93c0:	adrp	x1, 0 <_start>
    93c4:	mov	w0, #0x15                  	// #21
    93c8:	ldr	x1, [x1]
    93cc:	bl	9bc8 <grub_error>
    93d0:	b	932c <grub_dl_load_core+0x74>
    93d4:	adrp	x1, 0 <_start>
    93d8:	mov	x19, #0x0                   	// #0
    93dc:	mov	w0, #0x2                   	// #2
    93e0:	ldr	x1, [x1]
    93e4:	bl	9bc8 <grub_error>
    93e8:	mov	x0, x19
    93ec:	ldp	x19, x20, [sp, #16]
    93f0:	ldp	x29, x30, [sp], #32
    93f4:	ret
    93f8:	adrp	x1, 0 <_start>
    93fc:	mov	x19, #0x0                   	// #0
    9400:	mov	w0, #0x15                  	// #21
    9404:	ldr	x1, [x1]
    9408:	bl	9bc8 <grub_error>
    940c:	mov	x0, x19
    9410:	ldp	x19, x20, [sp, #16]
    9414:	ldp	x29, x30, [sp], #32
    9418:	ret
    941c:	nop
	...

0000000000009460 <grub_dl_unload>:
    9460:	stp	x29, x30, [sp, #-32]!
    9464:	mov	x29, sp
    9468:	str	x19, [sp, #16]
    946c:	mov	x19, x0
    9470:	ldr	w0, [x0, #8]
    9474:	cmp	w0, #0x0
    9478:	b.gt	9498 <grub_dl_unload+0x38>
    947c:	ldr	x0, [x19, #56]
    9480:	cbz	x0, 9488 <grub_dl_unload+0x28>
    9484:	blr	x0
    9488:	mov	x0, x19
    948c:	ldr	x19, [sp, #16]
    9490:	ldp	x29, x30, [sp], #32
    9494:	b	7fc8 <grub_disk_get_size+0x30>
    9498:	mov	w0, #0x0                   	// #0
    949c:	ldr	x19, [sp, #16]
    94a0:	ldp	x29, x30, [sp], #32
    94a4:	ret

00000000000094a8 <grub_dl_unload_unneeded>:
    94a8:	stp	x29, x30, [sp, #-32]!
    94ac:	adrp	x0, 0 <_start>
    94b0:	mov	x29, sp
    94b4:	stp	x19, x20, [sp, #16]
    94b8:	ldr	x20, [x0]
    94bc:	ldr	x19, [x20]
    94c0:	cbz	x19, 94f0 <grub_dl_unload_unneeded+0x48>
    94c4:	ldr	w0, [x19, #8]
    94c8:	cmp	w0, #0x0
    94cc:	b.gt	94e8 <grub_dl_unload_unneeded+0x40>
    94d0:	ldr	x0, [x19, #56]
    94d4:	cbz	x0, 94dc <grub_dl_unload_unneeded+0x34>
    94d8:	blr	x0
    94dc:	mov	x0, x19
    94e0:	bl	7fc8 <grub_disk_get_size+0x30>
    94e4:	cbnz	w0, 94bc <grub_dl_unload_unneeded+0x14>
    94e8:	ldr	x19, [x19, #112]
    94ec:	cbnz	x19, 94c4 <grub_dl_unload_unneeded+0x1c>
    94f0:	ldp	x19, x20, [sp, #16]
    94f4:	ldp	x29, x30, [sp], #32
    94f8:	ret
    94fc:	nop
	...

0000000000009508 <grub_env_set>:
    9508:	stp	x29, x30, [sp, #-48]!
    950c:	mov	x29, sp
    9510:	stp	x19, x20, [sp, #16]
    9514:	mov	x20, x0
    9518:	stp	x21, x22, [sp, #32]
    951c:	mov	x21, x1
    9520:	ldrb	w0, [x0]
    9524:	cbz	w0, 96c4 <grub_env_set+0x1bc>
    9528:	mov	x1, x20
    952c:	mov	w3, #0x0                   	// #0
    9530:	add	w2, w0, w0, lsl #2
    9534:	ldrb	w0, [x1, #1]!
    9538:	add	w3, w3, w2
    953c:	cbnz	w0, 9530 <grub_env_set+0x28>
    9540:	mov	w2, #0xec4f                	// #60495
    9544:	mov	w0, #0xd                   	// #13
    9548:	movk	w2, #0x4ec4, lsl #16
    954c:	umull	x2, w3, w2
    9550:	lsr	x2, x2, #34
    9554:	msub	w2, w2, w0, w3
    9558:	adrp	x0, 0 <_start>
    955c:	ldr	x22, [x0]
    9560:	ldr	x0, [x22]
    9564:	ldr	x19, [x0, w2, sxtw #3]
    9568:	cbnz	x19, 9578 <grub_env_set+0x70>
    956c:	b	95c4 <grub_env_set+0xbc>
    9570:	ldr	x19, [x19, #32]
    9574:	cbz	x19, 95c4 <grub_env_set+0xbc>
    9578:	ldr	x0, [x19]
    957c:	mov	x1, x20
    9580:	bl	c488 <grub_strcmp>
    9584:	cbnz	w0, 9570 <grub_env_set+0x68>
    9588:	ldr	x2, [x19, #24]
    958c:	ldr	x20, [x19, #8]
    9590:	cbz	x2, 96b0 <grub_env_set+0x1a8>
    9594:	mov	x1, x21
    9598:	mov	x0, x19
    959c:	blr	x2
    95a0:	str	x0, [x19, #8]
    95a4:	cbz	x0, 965c <grub_env_set+0x154>
    95a8:	mov	x0, x20
    95ac:	bl	6260 <grub_free>
    95b0:	mov	w0, #0x0                   	// #0
    95b4:	ldp	x19, x20, [sp, #16]
    95b8:	ldp	x21, x22, [sp, #32]
    95bc:	ldp	x29, x30, [sp], #48
    95c0:	ret
    95c4:	mov	x0, #0x40                  	// #64
    95c8:	bl	6220 <grub_zalloc>
    95cc:	mov	x19, x0
    95d0:	cbz	x0, 9694 <grub_env_set+0x18c>
    95d4:	mov	x0, x20
    95d8:	bl	c9d0 <grub_strdup>
    95dc:	str	x0, [x19]
    95e0:	cbz	x0, 9680 <grub_env_set+0x178>
    95e4:	mov	x0, x21
    95e8:	bl	c9d0 <grub_strdup>
    95ec:	str	x0, [x19, #8]
    95f0:	cbz	x0, 967c <grub_env_set+0x174>
    95f4:	ldr	x2, [x19]
    95f8:	ldr	x4, [x22]
    95fc:	ldrb	w0, [x2]
    9600:	cbz	w0, 96cc <grub_env_set+0x1c4>
    9604:	mov	w1, #0x0                   	// #0
    9608:	add	w3, w0, w0, lsl #2
    960c:	ldrb	w0, [x2, #1]!
    9610:	add	w1, w1, w3
    9614:	cbnz	w0, 9608 <grub_env_set+0x100>
    9618:	mov	w0, #0xec4f                	// #60495
    961c:	mov	w2, #0xd                   	// #13
    9620:	movk	w0, #0x4ec4, lsl #16
    9624:	umull	x0, w1, w0
    9628:	lsr	x0, x0, #34
    962c:	msub	w1, w0, w2, w1
    9630:	add	x0, x4, w1, uxtw #3
    9634:	sxtw	x1, w1
    9638:	str	x0, [x19, #40]
    963c:	ldr	x0, [x4, x1, lsl #3]
    9640:	str	x0, [x19, #32]
    9644:	cbz	x0, 9650 <grub_env_set+0x148>
    9648:	add	x2, x19, #0x20
    964c:	str	x2, [x0, #40]
    9650:	mov	w0, #0x0                   	// #0
    9654:	str	x19, [x4, x1, lsl #3]
    9658:	b	95b4 <grub_env_set+0xac>
    965c:	adrp	x0, 0 <_start>
    9660:	str	x20, [x19, #8]
    9664:	ldp	x19, x20, [sp, #16]
    9668:	ldr	x0, [x0]
    966c:	ldp	x21, x22, [sp, #32]
    9670:	ldr	w0, [x0]
    9674:	ldp	x29, x30, [sp], #48
    9678:	ret
    967c:	ldr	x0, [x19]
    9680:	bl	6260 <grub_free>
    9684:	ldr	x0, [x19, #8]
    9688:	bl	6260 <grub_free>
    968c:	mov	x0, x19
    9690:	bl	6260 <grub_free>
    9694:	adrp	x0, 0 <_start>
    9698:	ldp	x19, x20, [sp, #16]
    969c:	ldr	x0, [x0]
    96a0:	ldp	x21, x22, [sp, #32]
    96a4:	ldr	w0, [x0]
    96a8:	ldp	x29, x30, [sp], #48
    96ac:	ret
    96b0:	mov	x0, x21
    96b4:	bl	c9d0 <grub_strdup>
    96b8:	str	x0, [x19, #8]
    96bc:	cbnz	x0, 95a8 <grub_env_set+0xa0>
    96c0:	b	965c <grub_env_set+0x154>
    96c4:	mov	w2, #0x0                   	// #0
    96c8:	b	9558 <grub_env_set+0x50>
    96cc:	mov	x0, x4
    96d0:	mov	w1, #0x0                   	// #0
    96d4:	b	9634 <grub_env_set+0x12c>
	...

00000000000096e8 <grub_env_get>:
    96e8:	stp	x29, x30, [sp, #-32]!
    96ec:	mov	x29, sp
    96f0:	stp	x19, x20, [sp, #16]
    96f4:	mov	x20, x0
    96f8:	ldrb	w2, [x0]
    96fc:	cbz	w2, 9790 <grub_env_get+0xa8>
    9700:	mov	x1, x0
    9704:	mov	w0, #0x0                   	// #0
    9708:	add	w3, w2, w2, lsl #2
    970c:	ldrb	w2, [x1, #1]!
    9710:	add	w0, w0, w3
    9714:	cbnz	w2, 9708 <grub_env_get+0x20>
    9718:	mov	w2, #0xec4f                	// #60495
    971c:	mov	w1, #0xd                   	// #13
    9720:	movk	w2, #0x4ec4, lsl #16
    9724:	umull	x2, w0, w2
    9728:	lsr	x2, x2, #34
    972c:	msub	w2, w2, w1, w0
    9730:	adrp	x0, 0 <_start>
    9734:	ldr	x0, [x0]
    9738:	ldr	x0, [x0]
    973c:	ldr	x19, [x0, w2, sxtw #3]
    9740:	cbnz	x19, 9750 <grub_env_get+0x68>
    9744:	b	977c <grub_env_get+0x94>
    9748:	ldr	x19, [x19, #32]
    974c:	cbz	x19, 977c <grub_env_get+0x94>
    9750:	ldr	x0, [x19]
    9754:	mov	x1, x20
    9758:	bl	c488 <grub_strcmp>
    975c:	cbnz	w0, 9748 <grub_env_get+0x60>
    9760:	ldp	x1, x2, [x19, #8]
    9764:	cbz	x2, 9780 <grub_env_get+0x98>
    9768:	mov	x0, x19
    976c:	mov	x16, x2
    9770:	ldp	x19, x20, [sp, #16]
    9774:	ldp	x29, x30, [sp], #32
    9778:	br	x16
    977c:	mov	x1, #0x0                   	// #0
    9780:	mov	x0, x1
    9784:	ldp	x19, x20, [sp, #16]
    9788:	ldp	x29, x30, [sp], #32
    978c:	ret
    9790:	mov	w2, #0x0                   	// #0
    9794:	b	9730 <grub_env_get+0x48>
	...

00000000000097a0 <grub_env_unset>:
    97a0:	stp	x29, x30, [sp, #-32]!
    97a4:	mov	x29, sp
    97a8:	stp	x19, x20, [sp, #16]
    97ac:	mov	x20, x0
    97b0:	ldrb	w0, [x0]
    97b4:	cbz	w0, 987c <grub_env_unset+0xdc>
    97b8:	mov	x2, x20
    97bc:	mov	w1, #0x0                   	// #0
    97c0:	add	w3, w0, w0, lsl #2
    97c4:	ldrb	w0, [x2, #1]!
    97c8:	add	w1, w1, w3
    97cc:	cbnz	w0, 97c0 <grub_env_unset+0x20>
    97d0:	mov	w2, #0xec4f                	// #60495
    97d4:	mov	w0, #0xd                   	// #13
    97d8:	movk	w2, #0x4ec4, lsl #16
    97dc:	umull	x2, w1, w2
    97e0:	lsr	x2, x2, #34
    97e4:	msub	w2, w2, w0, w1
    97e8:	adrp	x0, 0 <_start>
    97ec:	ldr	x0, [x0]
    97f0:	ldr	x0, [x0]
    97f4:	ldr	x19, [x0, w2, sxtw #3]
    97f8:	cbnz	x19, 9808 <grub_env_unset+0x68>
    97fc:	b	9870 <grub_env_unset+0xd0>
    9800:	ldr	x19, [x19, #32]
    9804:	cbz	x19, 9870 <grub_env_unset+0xd0>
    9808:	ldr	x0, [x19]
    980c:	mov	x1, x20
    9810:	bl	c488 <grub_strcmp>
    9814:	cbnz	w0, 9800 <grub_env_unset+0x60>
    9818:	ldr	x0, [x19, #16]
    981c:	cbnz	x0, 9828 <grub_env_unset+0x88>
    9820:	ldr	x0, [x19, #24]
    9824:	cbz	x0, 9840 <grub_env_unset+0xa0>
    9828:	mov	x0, x20
    982c:	adrp	x1, 0 <_start>
    9830:	ldp	x19, x20, [sp, #16]
    9834:	ldp	x29, x30, [sp], #32
    9838:	ldr	x1, [x1]
    983c:	b	9508 <grub_env_set>
    9840:	ldp	x0, x1, [x19, #32]
    9844:	str	x0, [x1]
    9848:	cbz	x0, 9850 <grub_env_unset+0xb0>
    984c:	str	x1, [x0, #40]
    9850:	ldr	x0, [x19]
    9854:	bl	6260 <grub_free>
    9858:	ldr	x0, [x19, #8]
    985c:	bl	6260 <grub_free>
    9860:	mov	x0, x19
    9864:	ldp	x19, x20, [sp, #16]
    9868:	ldp	x29, x30, [sp], #32
    986c:	b	6260 <grub_free>
    9870:	ldp	x19, x20, [sp, #16]
    9874:	ldp	x29, x30, [sp], #32
    9878:	ret
    987c:	mov	w2, #0x0                   	// #0
    9880:	b	97e8 <grub_env_unset+0x48>
    9884:	nop
	...

0000000000009898 <grub_env_update_get_sorted>:
    9898:	stp	x29, x30, [sp, #-64]!
    989c:	adrp	x1, 0 <_start>
    98a0:	mov	x0, #0x0                   	// #0
    98a4:	mov	x29, sp
    98a8:	stp	x21, x22, [sp, #32]
    98ac:	mov	w21, #0x0                   	// #0
    98b0:	ldr	x22, [x1]
    98b4:	stp	x19, x20, [sp, #16]
    98b8:	str	xzr, [sp, #56]
    98bc:	nop
    98c0:	ldr	x1, [x22]
    98c4:	ldr	x20, [x1, w21, sxtw #3]
    98c8:	cbz	x20, 9914 <grub_env_update_get_sorted+0x7c>
    98cc:	nop
    98d0:	add	x19, sp, #0x38
    98d4:	cbnz	x0, 98e8 <grub_env_update_get_sorted+0x50>
    98d8:	b	9900 <grub_env_update_get_sorted+0x68>
    98dc:	add	x19, x0, #0x30
    98e0:	ldr	x0, [x0, #48]
    98e4:	cbz	x0, 9900 <grub_env_update_get_sorted+0x68>
    98e8:	ldr	x0, [x0]
    98ec:	ldr	x1, [x20]
    98f0:	bl	c488 <grub_strcmp>
    98f4:	cmp	w0, #0x0
    98f8:	ldr	x0, [x19]
    98fc:	b.le	98dc <grub_env_update_get_sorted+0x44>
    9900:	str	x0, [x20, #48]
    9904:	str	x20, [x19]
    9908:	ldr	x20, [x20, #32]
    990c:	ldr	x0, [sp, #56]
    9910:	cbnz	x20, 98d0 <grub_env_update_get_sorted+0x38>
    9914:	add	w21, w21, #0x1
    9918:	cmp	w21, #0xd
    991c:	b.ne	98c0 <grub_env_update_get_sorted+0x28>  // b.any
    9920:	ldp	x19, x20, [sp, #16]
    9924:	ldp	x21, x22, [sp, #32]
    9928:	ldp	x29, x30, [sp], #64
    992c:	ret
	...

0000000000009938 <grub_register_variable_hook>:
    9938:	stp	x29, x30, [sp, #-64]!
    993c:	mov	x29, sp
    9940:	stp	x19, x20, [sp, #16]
    9944:	mov	x20, x0
    9948:	stp	x21, x22, [sp, #32]
    994c:	mov	x21, x1
    9950:	mov	x22, x2
    9954:	str	x23, [sp, #48]
    9958:	ldrb	w0, [x0]
    995c:	cbz	w0, 9a64 <grub_register_variable_hook+0x12c>
    9960:	mov	x1, x20
    9964:	mov	w4, #0x0                   	// #0
    9968:	add	w2, w0, w0, lsl #2
    996c:	ldrb	w0, [x1, #1]!
    9970:	add	w4, w4, w2
    9974:	cbnz	w0, 9968 <grub_register_variable_hook+0x30>
    9978:	mov	w3, #0xec4f                	// #60495
    997c:	mov	w0, #0xd                   	// #13
    9980:	movk	w3, #0x4ec4, lsl #16
    9984:	umull	x3, w4, w3
    9988:	lsr	x3, x3, #34
    998c:	msub	w3, w3, w0, w4
    9990:	adrp	x0, 0 <_start>
    9994:	ldr	x23, [x0]
    9998:	ldr	x0, [x23]
    999c:	ldr	x19, [x0, w3, sxtw #3]
    99a0:	cbnz	x19, 99b0 <grub_register_variable_hook+0x78>
    99a4:	b	99dc <grub_register_variable_hook+0xa4>
    99a8:	ldr	x19, [x19, #32]
    99ac:	cbz	x19, 99dc <grub_register_variable_hook+0xa4>
    99b0:	ldr	x0, [x19]
    99b4:	mov	x1, x20
    99b8:	bl	c488 <grub_strcmp>
    99bc:	cbnz	w0, 99a8 <grub_register_variable_hook+0x70>
    99c0:	mov	w0, #0x0                   	// #0
    99c4:	stp	x21, x22, [x19, #16]
    99c8:	ldp	x19, x20, [sp, #16]
    99cc:	ldp	x21, x22, [sp, #32]
    99d0:	ldr	x23, [sp, #48]
    99d4:	ldp	x29, x30, [sp], #64
    99d8:	ret
    99dc:	adrp	x1, 0 <_start>
    99e0:	mov	x0, x20
    99e4:	ldr	x1, [x1]
    99e8:	bl	9508 <grub_env_set>
    99ec:	cbz	w0, 9a00 <grub_register_variable_hook+0xc8>
    99f0:	adrp	x0, 0 <_start>
    99f4:	ldr	x0, [x0]
    99f8:	ldr	w0, [x0]
    99fc:	b	99c8 <grub_register_variable_hook+0x90>
    9a00:	ldrb	w1, [x20]
    9a04:	mov	x2, x20
    9a08:	cbz	w1, 9a38 <grub_register_variable_hook+0x100>
    9a0c:	nop
    9a10:	add	w3, w1, w1, lsl #2
    9a14:	ldrb	w1, [x2, #1]!
    9a18:	add	w0, w0, w3
    9a1c:	cbnz	w1, 9a10 <grub_register_variable_hook+0xd8>
    9a20:	mov	w1, #0xec4f                	// #60495
    9a24:	mov	w2, #0xd                   	// #13
    9a28:	movk	w1, #0x4ec4, lsl #16
    9a2c:	umull	x1, w0, w1
    9a30:	lsr	x1, x1, #34
    9a34:	msub	w1, w1, w2, w0
    9a38:	ldr	x0, [x23]
    9a3c:	ldr	x19, [x0, w1, sxtw #3]
    9a40:	cbnz	x19, 9a50 <grub_register_variable_hook+0x118>
    9a44:	b	9a6c <grub_register_variable_hook+0x134>
    9a48:	ldr	x19, [x19, #32]
    9a4c:	cbz	x19, 9a6c <grub_register_variable_hook+0x134>
    9a50:	ldr	x0, [x19]
    9a54:	mov	x1, x20
    9a58:	bl	c488 <grub_strcmp>
    9a5c:	cbnz	w0, 9a48 <grub_register_variable_hook+0x110>
    9a60:	b	99c0 <grub_register_variable_hook+0x88>
    9a64:	mov	w3, #0x0                   	// #0
    9a68:	b	9990 <grub_register_variable_hook+0x58>
    9a6c:	mov	x0, #0x0                   	// #0
    9a70:	str	x21, [x0, #16]
    9a74:	brk	#0x3e8
	...

0000000000009a90 <grub_env_export>:
    9a90:	stp	x29, x30, [sp, #-48]!
    9a94:	mov	x29, sp
    9a98:	stp	x19, x20, [sp, #16]
    9a9c:	mov	x20, x0
    9aa0:	str	x21, [sp, #32]
    9aa4:	ldrb	w0, [x0]
    9aa8:	cbz	w0, 9ba4 <grub_env_export+0x114>
    9aac:	mov	x1, x20
    9ab0:	mov	w2, #0x0                   	// #0
    9ab4:	nop
    9ab8:	add	w3, w0, w0, lsl #2
    9abc:	ldrb	w0, [x1, #1]!
    9ac0:	add	w2, w2, w3
    9ac4:	cbnz	w0, 9ab8 <grub_env_export+0x28>
    9ac8:	mov	w1, #0xec4f                	// #60495
    9acc:	mov	w0, #0xd                   	// #13
    9ad0:	movk	w1, #0x4ec4, lsl #16
    9ad4:	umull	x1, w2, w1
    9ad8:	lsr	x1, x1, #34
    9adc:	msub	w1, w1, w0, w2
    9ae0:	adrp	x0, 0 <_start>
    9ae4:	ldr	x21, [x0]
    9ae8:	ldr	x0, [x21]
    9aec:	ldr	x19, [x0, w1, sxtw #3]
    9af0:	cbnz	x19, 9b00 <grub_env_export+0x70>
    9af4:	b	9b2c <grub_env_export+0x9c>
    9af8:	ldr	x19, [x19, #32]
    9afc:	cbz	x19, 9b2c <grub_env_export+0x9c>
    9b00:	ldr	x0, [x19]
    9b04:	mov	x1, x20
    9b08:	bl	c488 <grub_strcmp>
    9b0c:	cbnz	w0, 9af8 <grub_env_export+0x68>
    9b10:	mov	w1, #0x1                   	// #1
    9b14:	mov	w0, #0x0                   	// #0
    9b18:	str	w1, [x19, #56]
    9b1c:	ldp	x19, x20, [sp, #16]
    9b20:	ldr	x21, [sp, #32]
    9b24:	ldp	x29, x30, [sp], #48
    9b28:	ret
    9b2c:	adrp	x1, 0 <_start>
    9b30:	mov	x0, x20
    9b34:	ldr	x1, [x1]
    9b38:	bl	9508 <grub_env_set>
    9b3c:	cbnz	w0, 9b1c <grub_env_export+0x8c>
    9b40:	ldrb	w1, [x20]
    9b44:	mov	x2, x20
    9b48:	cbz	w1, 9b78 <grub_env_export+0xe8>
    9b4c:	nop
    9b50:	add	w3, w1, w1, lsl #2
    9b54:	ldrb	w1, [x2, #1]!
    9b58:	add	w0, w0, w3
    9b5c:	cbnz	w1, 9b50 <grub_env_export+0xc0>
    9b60:	mov	w1, #0xec4f                	// #60495
    9b64:	mov	w2, #0xd                   	// #13
    9b68:	movk	w1, #0x4ec4, lsl #16
    9b6c:	umull	x1, w0, w1
    9b70:	lsr	x1, x1, #34
    9b74:	msub	w1, w1, w2, w0
    9b78:	ldr	x0, [x21]
    9b7c:	ldr	x19, [x0, w1, sxtw #3]
    9b80:	cbnz	x19, 9b90 <grub_env_export+0x100>
    9b84:	b	9bac <grub_env_export+0x11c>
    9b88:	ldr	x19, [x19, #32]
    9b8c:	cbz	x19, 9bac <grub_env_export+0x11c>
    9b90:	ldr	x0, [x19]
    9b94:	mov	x1, x20
    9b98:	bl	c488 <grub_strcmp>
    9b9c:	cbnz	w0, 9b88 <grub_env_export+0xf8>
    9ba0:	b	9b10 <grub_env_export+0x80>
    9ba4:	mov	w1, #0x0                   	// #0
    9ba8:	b	9ae0 <grub_env_export+0x50>
    9bac:	mov	x0, #0x0                   	// #0
    9bb0:	str	wzr, [x0, #56]
    9bb4:	brk	#0x3e8
	...

0000000000009bc8 <grub_error>:
    9bc8:	stp	x29, x30, [sp, #-144]!
    9bcc:	adrp	x9, 0 <_start>
    9bd0:	adrp	x8, 0 <_start>
    9bd4:	mov	x29, sp
    9bd8:	stp	x2, x3, [sp, #96]
    9bdc:	add	x3, sp, #0x60
    9be0:	ldr	x2, [x9]
    9be4:	str	x19, [sp, #16]
    9be8:	ldr	x8, [x8]
    9bec:	mov	w19, w0
    9bf0:	ldr	x2, [x2]
    9bf4:	stp	x4, x5, [sp, #112]
    9bf8:	add	x4, sp, #0x90
    9bfc:	stp	x6, x7, [sp, #128]
    9c00:	mov	x0, x1
    9c04:	mov	w1, #0xffffffd0            	// #-48
    9c08:	str	w19, [x8]
    9c0c:	stp	x4, x4, [sp, #64]
    9c10:	str	x3, [sp, #80]
    9c14:	str	w1, [sp, #88]
    9c18:	str	wzr, [sp, #92]
    9c1c:	blr	x2
    9c20:	adrp	x1, 0 <_start>
    9c24:	mov	x2, x0
    9c28:	ldp	x6, x7, [sp, #64]
    9c2c:	add	x3, sp, #0x20
    9c30:	ldp	x4, x5, [sp, #80]
    9c34:	stp	x6, x7, [sp, #32]
    9c38:	ldr	x0, [x1]
    9c3c:	mov	x1, #0x100                 	// #256
    9c40:	stp	x4, x5, [sp, #48]
    9c44:	bl	ced0 <grub_vsnprintf>
    9c48:	mov	w0, w19
    9c4c:	ldr	x19, [sp, #16]
    9c50:	ldp	x29, x30, [sp], #144
    9c54:	ret
	...

0000000000009c70 <grub_error_push>:
    9c70:	stp	x29, x30, [sp, #-32]!
    9c74:	adrp	x0, 0 <_start>
    9c78:	mov	x29, sp
    9c7c:	stp	x19, x20, [sp, #16]
    9c80:	ldr	x19, [x0]
    9c84:	ldr	w0, [x19]
    9c88:	cmp	w0, #0x9
    9c8c:	b.le	9cb0 <grub_error_push+0x40>
    9c90:	adrp	x0, 0 <_start>
    9c94:	mov	w1, #0x1                   	// #1
    9c98:	str	w1, [x19, #2608]
    9c9c:	ldr	x20, [x0]
    9ca0:	str	wzr, [x20]
    9ca4:	ldp	x19, x20, [sp, #16]
    9ca8:	ldp	x29, x30, [sp], #32
    9cac:	ret
    9cb0:	adrp	x2, 0 <_start>
    9cb4:	sbfiz	x3, x0, #6, #32
    9cb8:	adrp	x1, 0 <_start>
    9cbc:	add	x4, x19, #0x8
    9cc0:	ldr	x20, [x2]
    9cc4:	add	x3, x3, w0, sxtw
    9cc8:	ldr	x1, [x1]
    9ccc:	mov	w2, #0x104                 	// #260
    9cd0:	ldr	w5, [x20]
    9cd4:	smaddl	x0, w0, w2, x4
    9cd8:	str	w5, [x4, x3, lsl #2]
    9cdc:	mov	x2, #0x100                 	// #256
    9ce0:	add	x0, x0, #0x4
    9ce4:	bl	bf40 <grub_memmove>
    9ce8:	str	wzr, [x20]
    9cec:	ldr	w0, [x19]
    9cf0:	add	w0, w0, #0x1
    9cf4:	str	w0, [x19]
    9cf8:	ldp	x19, x20, [sp, #16]
    9cfc:	ldp	x29, x30, [sp], #32
    9d00:	ret
    9d04:	nop
	...

0000000000009d20 <grub_error_pop>:
    9d20:	adrp	x0, 0 <_start>
    9d24:	ldr	x0, [x0]
    9d28:	ldr	w1, [x0]
    9d2c:	cmp	w1, #0x0
    9d30:	b.gt	9d48 <grub_error_pop+0x28>
    9d34:	adrp	x1, 0 <_start>
    9d38:	mov	w0, #0x0                   	// #0
    9d3c:	ldr	x1, [x1]
    9d40:	str	wzr, [x1]
    9d44:	ret
    9d48:	sub	w1, w1, #0x1
    9d4c:	stp	x29, x30, [sp, #-16]!
    9d50:	mov	x2, x0
    9d54:	sbfiz	x3, x1, #6, #32
    9d58:	mov	x29, sp
    9d5c:	add	x3, x3, w1, sxtw
    9d60:	adrp	x4, 0 <_start>
    9d64:	adrp	x0, 0 <_start>
    9d68:	str	w1, [x2], #8
    9d6c:	mov	w5, #0x104                 	// #260
    9d70:	ldr	x4, [x4]
    9d74:	smaddl	x1, w1, w5, x2
    9d78:	ldr	w3, [x2, x3, lsl #2]
    9d7c:	mov	x2, #0x100                 	// #256
    9d80:	ldr	x0, [x0]
    9d84:	add	x1, x1, #0x4
    9d88:	str	w3, [x4]
    9d8c:	bl	bf40 <grub_memmove>
    9d90:	mov	w0, #0x1                   	// #1
    9d94:	ldp	x29, x30, [sp], #16
    9d98:	ret
    9d9c:	nop
	...

0000000000009db8 <grub_print_error>:
    9db8:	stp	x29, x30, [sp, #-80]!
    9dbc:	adrp	x1, 0 <_start>
    9dc0:	adrp	x0, 0 <_start>
    9dc4:	mov	x29, sp
    9dc8:	stp	x19, x20, [sp, #16]
    9dcc:	ldr	x19, [x1]
    9dd0:	stp	x21, x22, [sp, #32]
    9dd4:	adrp	x22, 0 <_start>
    9dd8:	ldr	x20, [x0]
    9ddc:	add	x21, x19, #0x8
    9de0:	stp	x23, x24, [sp, #48]
    9de4:	adrp	x24, 0 <_start>
    9de8:	adrp	x23, 0 <_start>
    9dec:	stp	x25, x26, [sp, #64]
    9df0:	adrp	x25, 0 <_start>
    9df4:	ldr	w0, [x20]
    9df8:	cbz	w0, 9e58 <grub_print_error+0xa0>
    9dfc:	ldr	x1, [x24]
    9e00:	ldr	x0, [x25]
    9e04:	ldr	x1, [x1]
    9e08:	blr	x1
    9e0c:	ldr	x26, [x22]
    9e10:	mov	x1, x26
    9e14:	bl	c078 <grub_err_printf>
    9e18:	ldr	x1, [x23]
    9e1c:	ldr	w0, [x19]
    9e20:	ldr	w2, [x1]
    9e24:	cmp	w0, #0x0
    9e28:	add	w2, w2, #0x1
    9e2c:	str	w2, [x1]
    9e30:	b.gt	9e68 <grub_print_error+0xb0>
    9e34:	ldr	w0, [x19, #2608]
    9e38:	str	wzr, [x20]
    9e3c:	cbnz	w0, 9e9c <grub_print_error+0xe4>
    9e40:	ldp	x19, x20, [sp, #16]
    9e44:	ldp	x21, x22, [sp, #32]
    9e48:	ldp	x23, x24, [sp, #48]
    9e4c:	ldp	x25, x26, [sp, #64]
    9e50:	ldp	x29, x30, [sp], #80
    9e54:	ret
    9e58:	ldr	w0, [x19]
    9e5c:	cmp	w0, #0x0
    9e60:	b.le	9e34 <grub_print_error+0x7c>
    9e64:	ldr	x26, [x22]
    9e68:	sub	w3, w0, #0x1
    9e6c:	mov	w5, #0x104                 	// #260
    9e70:	str	w3, [x19]
    9e74:	sbfiz	x4, x3, #6, #32
    9e78:	mov	x0, x26
    9e7c:	add	x4, x4, w3, sxtw
    9e80:	smaddl	x1, w3, w5, x21
    9e84:	mov	x2, #0x100                 	// #256
    9e88:	add	x1, x1, #0x4
    9e8c:	ldr	w3, [x21, x4, lsl #2]
    9e90:	str	w3, [x20]
    9e94:	bl	bf40 <grub_memmove>
    9e98:	b	9df4 <grub_print_error+0x3c>
    9e9c:	adrp	x0, 0 <_start>
    9ea0:	ldr	x0, [x0]
    9ea4:	bl	c078 <grub_err_printf>
    9ea8:	str	wzr, [x19, #2608]
    9eac:	ldp	x19, x20, [sp, #16]
    9eb0:	ldp	x21, x22, [sp, #32]
    9eb4:	ldp	x23, x24, [sp, #48]
    9eb8:	ldp	x25, x26, [sp, #64]
    9ebc:	ldp	x29, x30, [sp], #80
    9ec0:	ret
    9ec4:	nop
	...

0000000000009f00 <grub_file_get_device_name>:
    9f00:	stp	x29, x30, [sp, #-48]!
    9f04:	mov	x29, sp
    9f08:	stp	x19, x20, [sp, #16]
    9f0c:	mov	x19, #0x0                   	// #0
    9f10:	ldrb	w1, [x0]
    9f14:	cmp	w1, #0x28
    9f18:	b.eq	9f2c <grub_file_get_device_name+0x2c>  // b.none
    9f1c:	mov	x0, x19
    9f20:	ldp	x19, x20, [sp, #16]
    9f24:	ldp	x29, x30, [sp], #48
    9f28:	ret
    9f2c:	mov	x20, x0
    9f30:	mov	w1, #0x29                  	// #41
    9f34:	bl	c528 <grub_strchr>
    9f38:	mov	x19, x0
    9f3c:	cbz	x0, 9f88 <grub_file_get_device_name+0x88>
    9f40:	str	x21, [sp, #32]
    9f44:	sub	x21, x0, x20
    9f48:	mov	x0, x21
    9f4c:	bl	6210 <grub_malloc>
    9f50:	mov	x19, x0
    9f54:	cbz	x0, 9f80 <grub_file_get_device_name+0x80>
    9f58:	sub	x2, x21, #0x1
    9f5c:	add	x21, x19, x21
    9f60:	add	x1, x20, #0x1
    9f64:	bl	bf40 <grub_memmove>
    9f68:	mov	x0, x19
    9f6c:	sturb	wzr, [x21, #-1]
    9f70:	ldp	x19, x20, [sp, #16]
    9f74:	ldr	x21, [sp, #32]
    9f78:	ldp	x29, x30, [sp], #48
    9f7c:	ret
    9f80:	ldr	x21, [sp, #32]
    9f84:	b	9f1c <grub_file_get_device_name+0x1c>
    9f88:	adrp	x1, 0 <_start>
    9f8c:	mov	w2, #0x29                  	// #41
    9f90:	mov	w0, #0x7                   	// #7
    9f94:	ldr	x1, [x1]
    9f98:	bl	9bc8 <grub_error>
    9f9c:	b	9f1c <grub_file_get_device_name+0x1c>
	...

0000000000009fa8 <grub_file_open>:
    9fa8:	stp	x29, x30, [sp, #-96]!
    9fac:	mov	x29, sp
    9fb0:	stp	x19, x20, [sp, #16]
    9fb4:	stp	x21, x22, [sp, #32]
    9fb8:	mov	x22, x0
    9fbc:	stp	x23, x24, [sp, #48]
    9fc0:	mov	w23, w1
    9fc4:	ldrb	w1, [x0]
    9fc8:	cmp	w1, #0x28
    9fcc:	b.eq	a140 <grub_file_open+0x198>  // b.none
    9fd0:	adrp	x0, 0 <_start>
    9fd4:	ldr	x24, [x0]
    9fd8:	ldr	w0, [x24]
    9fdc:	cbnz	w0, a1c8 <grub_file_open+0x220>
    9fe0:	mov	x20, x22
    9fe4:	mov	x19, #0x0                   	// #0
    9fe8:	mov	x0, x19
    9fec:	bl	6b08 <grub_device_open>
    9ff0:	mov	x21, x0
    9ff4:	mov	x0, x19
    9ff8:	bl	6260 <grub_free>
    9ffc:	cbz	x21, a1c8 <grub_file_open+0x220>
    a000:	mov	x0, #0x68                  	// #104
    a004:	bl	6220 <grub_zalloc>
    a008:	mov	x19, x0
    a00c:	cbz	x0, a0f0 <grub_file_open+0x148>
    a010:	ldr	x0, [x21]
    a014:	str	x21, [x19, #8]
    a018:	cbz	x0, a0dc <grub_file_open+0x134>
    a01c:	ldrb	w0, [x20]
    a020:	cmp	w0, #0x2f
    a024:	b.eq	a0dc <grub_file_open+0x134>  // b.none
    a028:	adrp	x0, 0 <_start>
    a02c:	ldr	x1, [x0]
    a030:	str	x1, [x19, #16]
    a034:	ldr	x2, [x1, #32]
    a038:	mov	x0, x19
    a03c:	mov	x1, x20
    a040:	blr	x2
    a044:	cbnz	w0, a0f0 <grub_file_open+0x148>
    a048:	mov	x0, x22
    a04c:	stp	x25, x26, [sp, #64]
    a050:	mov	x21, #0x1                   	// #1
    a054:	str	x27, [sp, #80]
    a058:	bl	c9d0 <grub_strdup>
    a05c:	adrp	x1, 0 <_start>
    a060:	str	x0, [x19]
    a064:	mov	x27, #0x0                   	// #0
    a068:	str	wzr, [x24]
    a06c:	ldr	x25, [x1]
    a070:	mov	w1, w23
    a074:	ldr	x2, [x25, x21, lsl #3]
    a078:	mov	x0, x19
    a07c:	cbz	x2, a11c <grub_file_open+0x174>
    a080:	blr	x2
    a084:	mov	x20, x0
    a088:	cmp	x0, #0x0
    a08c:	mov	x27, x19
    a090:	cset	w0, ne  // ne = any
    a094:	cmp	x20, x19
    a098:	csel	w26, w0, wzr, ne  // ne = any
    a09c:	mov	x19, x20
    a0a0:	cbnz	w26, a128 <grub_file_open+0x180>
    a0a4:	cmp	w21, #0x3
    a0a8:	add	x21, x21, #0x1
    a0ac:	cset	w1, ls  // ls = plast
    a0b0:	tst	w0, w1
    a0b4:	b.ne	a070 <grub_file_open+0xc8>  // b.any
    a0b8:	cbz	x19, a1d0 <grub_file_open+0x228>
    a0bc:	ldp	x25, x26, [sp, #64]
    a0c0:	ldr	x27, [sp, #80]
    a0c4:	mov	x0, x19
    a0c8:	ldp	x19, x20, [sp, #16]
    a0cc:	ldp	x21, x22, [sp, #32]
    a0d0:	ldp	x23, x24, [sp, #48]
    a0d4:	ldp	x29, x30, [sp], #96
    a0d8:	ret
    a0dc:	mov	x0, x21
    a0e0:	bl	a740 <grub_fs_probe>
    a0e4:	str	x0, [x19, #16]
    a0e8:	mov	x1, x0
    a0ec:	cbnz	x0, a034 <grub_file_open+0x8c>
    a0f0:	mov	x0, x21
    a0f4:	bl	6d60 <grub_device_close>
    a0f8:	mov	x0, x19
    a0fc:	mov	x19, #0x0                   	// #0
    a100:	bl	6260 <grub_free>
    a104:	mov	x0, x19
    a108:	ldp	x19, x20, [sp, #16]
    a10c:	ldp	x21, x22, [sp, #32]
    a110:	ldp	x23, x24, [sp, #48]
    a114:	ldp	x29, x30, [sp], #96
    a118:	ret
    a11c:	cmp	x19, #0x0
    a120:	cset	w0, ne  // ne = any
    a124:	b	a0a4 <grub_file_open+0xfc>
    a128:	mov	x0, x22
    a12c:	bl	c9d0 <grub_strdup>
    a130:	str	x0, [x20]
    a134:	mov	w0, w26
    a138:	str	wzr, [x24]
    a13c:	b	a0a4 <grub_file_open+0xfc>
    a140:	mov	w1, #0x29                  	// #41
    a144:	bl	c528 <grub_strchr>
    a148:	mov	x19, x0
    a14c:	cbz	x0, a20c <grub_file_open+0x264>
    a150:	sub	x20, x0, x22
    a154:	mov	x0, x20
    a158:	bl	6210 <grub_malloc>
    a15c:	mov	x19, x0
    a160:	cbz	x0, a178 <grub_file_open+0x1d0>
    a164:	sub	x2, x20, #0x1
    a168:	add	x20, x19, x20
    a16c:	add	x1, x22, #0x1
    a170:	bl	bf40 <grub_memmove>
    a174:	sturb	wzr, [x20, #-1]
    a178:	adrp	x0, 0 <_start>
    a17c:	ldr	x24, [x0]
    a180:	ldr	w0, [x24]
    a184:	cbnz	w0, a1c8 <grub_file_open+0x220>
    a188:	ldrb	w0, [x22]
    a18c:	mov	x20, x22
    a190:	cmp	w0, #0x28
    a194:	b.ne	9fe8 <grub_file_open+0x40>  // b.any
    a198:	mov	w1, #0x29                  	// #41
    a19c:	mov	x0, x22
    a1a0:	bl	c528 <grub_strchr>
    a1a4:	cmp	x0, #0x0
    a1a8:	csinc	x20, x22, x0, eq  // eq = none
    a1ac:	mov	x0, x19
    a1b0:	bl	6b08 <grub_device_open>
    a1b4:	mov	x21, x0
    a1b8:	mov	x0, x19
    a1bc:	bl	6260 <grub_free>
    a1c0:	cbnz	x21, a000 <grub_file_open+0x58>
    a1c4:	nop
    a1c8:	mov	x19, #0x0                   	// #0
    a1cc:	b	a0f8 <grub_file_open+0x150>
    a1d0:	ldr	x0, [x27, #16]
    a1d4:	ldr	x1, [x0, #48]
    a1d8:	cbz	x1, a1e4 <grub_file_open+0x23c>
    a1dc:	mov	x0, x27
    a1e0:	blr	x1
    a1e4:	ldr	x0, [x27, #8]
    a1e8:	cbz	x0, a1f0 <grub_file_open+0x248>
    a1ec:	bl	6d60 <grub_device_close>
    a1f0:	ldr	x0, [x27]
    a1f4:	bl	6260 <grub_free>
    a1f8:	mov	x0, x27
    a1fc:	bl	6260 <grub_free>
    a200:	ldp	x25, x26, [sp, #64]
    a204:	ldr	x27, [sp, #80]
    a208:	b	a0c4 <grub_file_open+0x11c>
    a20c:	adrp	x1, 0 <_start>
    a210:	mov	w2, #0x29                  	// #41
    a214:	mov	w0, #0x7                   	// #7
    a218:	ldr	x1, [x1]
    a21c:	bl	9bc8 <grub_error>
    a220:	b	a178 <grub_file_open+0x1d0>
    a224:	nop
	...

000000000000a248 <grub_file_read>:
    a248:	stp	x29, x30, [sp, #-48]!
    a24c:	mov	x29, sp
    a250:	ldr	x4, [x0, #24]
    a254:	ldr	x3, [x0, #64]
    a258:	cmp	x4, x3
    a25c:	b.hi	a328 <grub_file_read+0xe0>  // b.pmore
    a260:	stp	x19, x20, [sp, #16]
    a264:	mov	x19, x0
    a268:	mov	x0, #0x0                   	// #0
    a26c:	cbz	x2, a288 <grub_file_read+0x40>
    a270:	sub	x3, x3, x4
    a274:	cmp	x3, x2
    a278:	csel	x2, x3, x2, ls  // ls = plast
    a27c:	cmp	x2, #0x0
    a280:	b.lt	a294 <grub_file_read+0x4c>  // b.tstop
    a284:	b.ne	a2dc <grub_file_read+0x94>  // b.any
    a288:	ldp	x19, x20, [sp, #16]
    a28c:	ldp	x29, x30, [sp], #48
    a290:	ret
    a294:	str	x21, [sp, #32]
    a298:	lsr	x2, x2, #1
    a29c:	ldp	x20, x21, [x19, #88]
    a2a0:	cbz	x20, a2e8 <grub_file_read+0xa0>
    a2a4:	ldr	x3, [x19, #16]
    a2a8:	mov	x0, x19
    a2ac:	ldr	x3, [x3, #40]
    a2b0:	blr	x3
    a2b4:	stp	x20, x21, [x19, #88]
    a2b8:	cmp	x0, #0x0
    a2bc:	b.le	a318 <grub_file_read+0xd0>
    a2c0:	ldr	x1, [x19, #24]
    a2c4:	ldr	x21, [sp, #32]
    a2c8:	add	x1, x1, x0
    a2cc:	str	x1, [x19, #24]
    a2d0:	ldp	x19, x20, [sp, #16]
    a2d4:	ldp	x29, x30, [sp], #48
    a2d8:	ret
    a2dc:	str	x21, [sp, #32]
    a2e0:	ldp	x20, x21, [x19, #88]
    a2e4:	cbnz	x20, a2a4 <grub_file_read+0x5c>
    a2e8:	adrp	x0, 0 <_start>
    a2ec:	str	x4, [x19, #32]
    a2f0:	ldr	x3, [x19, #16]
    a2f4:	ldr	x0, [x0]
    a2f8:	ldr	x3, [x3, #40]
    a2fc:	ldr	x0, [x0]
    a300:	stp	x0, x19, [x19, #88]
    a304:	mov	x0, x19
    a308:	blr	x3
    a30c:	stp	x20, x21, [x19, #88]
    a310:	cmp	x0, #0x0
    a314:	b.gt	a2c0 <grub_file_read+0x78>
    a318:	ldp	x19, x20, [sp, #16]
    a31c:	ldr	x21, [sp, #32]
    a320:	ldp	x29, x30, [sp], #48
    a324:	ret
    a328:	adrp	x1, 0 <_start>
    a32c:	mov	w0, #0xb                   	// #11
    a330:	ldr	x1, [x1]
    a334:	bl	9bc8 <grub_error>
    a338:	mov	x0, #0xffffffffffffffff    	// #-1
    a33c:	b	a28c <grub_file_read+0x44>
	...

000000000000a350 <grub_file_close>:
    a350:	stp	x29, x30, [sp, #-32]!
    a354:	mov	x29, sp
    a358:	ldr	x1, [x0, #16]
    a35c:	ldr	x1, [x1, #48]
    a360:	str	x19, [sp, #16]
    a364:	mov	x19, x0
    a368:	cbz	x1, a370 <grub_file_close+0x20>
    a36c:	blr	x1
    a370:	ldr	x0, [x19, #8]
    a374:	cbz	x0, a37c <grub_file_close+0x2c>
    a378:	bl	6d60 <grub_device_close>
    a37c:	ldr	x0, [x19]
    a380:	bl	6260 <grub_free>
    a384:	mov	x0, x19
    a388:	bl	6260 <grub_free>
    a38c:	adrp	x0, 0 <_start>
    a390:	ldr	x19, [sp, #16]
    a394:	ldr	x0, [x0]
    a398:	ldp	x29, x30, [sp], #32
    a39c:	ldr	w0, [x0]
    a3a0:	ret
    a3a4:	nop
	...

000000000000a3b0 <grub_file_seek>:
    a3b0:	mov	x2, x0
    a3b4:	ldr	x0, [x0, #64]
    a3b8:	cmp	x0, x1
    a3bc:	b.cc	a3cc <grub_file_seek+0x1c>  // b.lo, b.ul, b.last
    a3c0:	ldr	x0, [x2, #24]
    a3c4:	str	x1, [x2, #24]
    a3c8:	ret
    a3cc:	stp	x29, x30, [sp, #-16]!
    a3d0:	adrp	x1, 0 <_start>
    a3d4:	mov	w0, #0xb                   	// #11
    a3d8:	mov	x29, sp
    a3dc:	ldr	x1, [x1]
    a3e0:	bl	9bc8 <grub_error>
    a3e4:	mov	x0, #0xffffffffffffffff    	// #-1
    a3e8:	ldp	x29, x30, [sp], #16
    a3ec:	ret
	...
    a3f8:	mov	w0, #0x1                   	// #1
    a3fc:	ret
    a400:	stp	x29, x30, [sp, #-80]!
    a404:	mov	x29, sp
    a408:	stp	x19, x20, [sp, #16]
    a40c:	stp	x21, x22, [sp, #32]
    a410:	ldr	x19, [x0, #24]
    a414:	stp	x23, x24, [sp, #48]
    a418:	ldr	x20, [x0, #64]
    a41c:	str	x25, [sp, #64]
    a420:	ldr	x21, [x0, #80]
    a424:	sub	x20, x20, x19
    a428:	cmp	x20, x2
    a42c:	mov	x25, x0
    a430:	csel	x20, x20, x2, ls  // ls = plast
    a434:	ldr	x3, [x21, #8]
    a438:	cmp	x20, #0x0
    a43c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    a440:	b.eq	a514 <grub_file_seek+0x164>  // b.none
    a444:	and	x2, x19, #0x1ff
    a448:	mov	x23, x1
    a44c:	lsr	x19, x19, #9
    a450:	mov	x24, #0x0                   	// #0
    a454:	b	a4ac <grub_file_seek+0xfc>
    a458:	cmp	x5, x1, lsr #9
    a45c:	mov	x3, x20
    a460:	b.cs	a46c <grub_file_seek+0xbc>  // b.hs, b.nlast
    a464:	lsl	x22, x5, #9
    a468:	sub	x3, x22, x2
    a46c:	ldr	x0, [x25, #8]
    a470:	mov	x4, x23
    a474:	ldr	x1, [x21]
    a478:	add	x24, x24, x3
    a47c:	ldr	x0, [x0]
    a480:	add	x1, x19, x1
    a484:	sub	x20, x20, x3
    a488:	sub	x19, x19, x22, lsr #9
    a48c:	bl	7380 <grub_disk_read>
    a490:	cbnz	w0, a4f4 <grub_file_seek+0x144>
    a494:	ldr	x3, [x21, #24]
    a498:	cmp	x20, #0x0
    a49c:	add	x21, x21, #0x10
    a4a0:	and	x2, x22, #0x1ff
    a4a4:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    a4a8:	b.eq	a4d8 <grub_file_seek+0x128>  // b.none
    a4ac:	add	x22, x20, x2
    a4b0:	sub	x5, x3, x19
    a4b4:	add	x1, x22, #0x1ff
    a4b8:	cmp	x3, x19
    a4bc:	b.hi	a458 <grub_file_seek+0xa8>  // b.pmore
    a4c0:	add	x21, x21, #0x10
    a4c4:	sub	x19, x19, x3
    a4c8:	cmp	x20, #0x0
    a4cc:	ldr	x3, [x21, #8]
    a4d0:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    a4d4:	b.ne	a4ac <grub_file_seek+0xfc>  // b.any
    a4d8:	mov	x0, x24
    a4dc:	ldp	x19, x20, [sp, #16]
    a4e0:	ldp	x21, x22, [sp, #32]
    a4e4:	ldp	x23, x24, [sp, #48]
    a4e8:	ldr	x25, [sp, #64]
    a4ec:	ldp	x29, x30, [sp], #80
    a4f0:	ret
    a4f4:	mov	x24, #0xffffffffffffffff    	// #-1
    a4f8:	mov	x0, x24
    a4fc:	ldp	x19, x20, [sp, #16]
    a500:	ldp	x21, x22, [sp, #32]
    a504:	ldp	x23, x24, [sp, #48]
    a508:	ldr	x25, [sp, #64]
    a50c:	ldp	x29, x30, [sp], #80
    a510:	ret
    a514:	mov	x24, #0x0                   	// #0
    a518:	b	a4d8 <grub_file_seek+0x128>
    a51c:	nop
    a520:	stp	x29, x30, [sp, #-96]!
    a524:	mov	x29, sp
    a528:	stp	x19, x20, [sp, #16]
    a52c:	mov	x20, x0
    a530:	mov	x0, x1
    a534:	stp	x23, x24, [sp, #48]
    a538:	mov	x23, x1
    a53c:	mov	w19, #0x0                   	// #0
    a540:	ldr	x1, [x20, #8]
    a544:	stp	x21, x22, [sp, #32]
    a548:	add	w21, w19, #0x1
    a54c:	ldr	x22, [x1]
    a550:	mov	w1, #0x2c                  	// #44
    a554:	str	x23, [sp, #88]
    a558:	bl	c528 <grub_strchr>
    a55c:	mov	x1, x0
    a560:	str	x1, [sp, #88]
    a564:	add	x0, x0, #0x1
    a568:	cbz	x1, a594 <grub_file_seek+0x1e4>
    a56c:	nop
    a570:	mov	w1, #0x2c                  	// #44
    a574:	str	x0, [sp, #88]
    a578:	bl	c528 <grub_strchr>
    a57c:	mov	x1, x0
    a580:	str	x1, [sp, #88]
    a584:	mov	w19, w21
    a588:	add	w21, w19, #0x1
    a58c:	add	x0, x0, #0x1
    a590:	cbnz	x1, a570 <grub_file_seek+0x1c0>
    a594:	add	w0, w19, #0x2
    a598:	lsl	x0, x0, #4
    a59c:	bl	6220 <grub_zalloc>
    a5a0:	mov	x24, x0
    a5a4:	cbz	x0, a6f0 <grub_file_seek+0x340>
    a5a8:	str	xzr, [x20, #64]
    a5ac:	str	x23, [sp, #88]
    a5b0:	cbz	w21, a70c <grub_file_seek+0x35c>
    a5b4:	adrp	x0, 0 <_start>
    a5b8:	add	x1, x24, #0x10
    a5bc:	add	x19, x1, w19, uxtw #4
    a5c0:	str	x25, [sp, #64]
    a5c4:	ldr	x21, [x0]
    a5c8:	mov	x25, x24
    a5cc:	mov	x0, x23
    a5d0:	b	a60c <grub_file_seek+0x25c>
    a5d4:	ldr	x0, [x25]
    a5d8:	add	x25, x25, #0x10
    a5dc:	ldr	x1, [x22, #16]
    a5e0:	add	x0, x3, x0
    a5e4:	cmp	x1, x0
    a5e8:	b.cc	a6a4 <grub_file_seek+0x2f4>  // b.lo, b.ul, b.last
    a5ec:	ldr	x0, [x20, #64]
    a5f0:	cmp	x19, x25
    a5f4:	ldr	x2, [sp, #88]
    a5f8:	add	x3, x0, x3, lsl #9
    a5fc:	str	x3, [x20, #64]
    a600:	add	x0, x2, #0x1
    a604:	str	x0, [sp, #88]
    a608:	b.eq	a708 <grub_file_seek+0x358>  // b.none
    a60c:	ldrb	w3, [x0]
    a610:	add	x1, sp, #0x58
    a614:	mov	w2, #0x0                   	// #0
    a618:	cmp	w3, #0x2b
    a61c:	b.eq	a640 <grub_file_seek+0x290>  // b.none
    a620:	bl	c810 <grub_strtoull>
    a624:	ldr	w1, [x21]
    a628:	str	x0, [x25]
    a62c:	cbnz	w1, a6b8 <grub_file_seek+0x308>
    a630:	ldr	x0, [sp, #88]
    a634:	ldrb	w1, [x0]
    a638:	cmp	w1, #0x2b
    a63c:	b.ne	a6b8 <grub_file_seek+0x308>  // b.any
    a640:	add	x0, x0, #0x1
    a644:	add	x1, sp, #0x58
    a648:	mov	w2, #0x0                   	// #0
    a64c:	str	x0, [sp, #88]
    a650:	bl	c9c8 <grub_strtoul>
    a654:	mov	x3, x0
    a658:	ldr	w1, [x21]
    a65c:	str	x0, [x25, #8]
    a660:	cmp	w1, #0x0
    a664:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    a668:	b.eq	a6b8 <grub_file_seek+0x308>  // b.none
    a66c:	ldr	x0, [sp, #88]
    a670:	ldrb	w0, [x0]
    a674:	cmp	w0, #0x2c
    a678:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    a67c:	b.eq	a5d4 <grub_file_seek+0x224>  // b.none
    a680:	bl	c7e8 <grub_isspace>
    a684:	cbz	w0, a6b8 <grub_file_seek+0x308>
    a688:	ldr	x0, [x25]
    a68c:	add	x25, x25, #0x10
    a690:	ldur	x3, [x25, #-8]
    a694:	ldr	x1, [x22, #16]
    a698:	add	x0, x3, x0
    a69c:	cmp	x1, x0
    a6a0:	b.cs	a5ec <grub_file_seek+0x23c>  // b.hs, b.nlast
    a6a4:	adrp	x1, 0 <_start>
    a6a8:	mov	w0, #0x7                   	// #7
    a6ac:	ldr	x1, [x1]
    a6b0:	bl	9bc8 <grub_error>
    a6b4:	b	a6cc <grub_file_seek+0x31c>
    a6b8:	adrp	x1, 0 <_start>
    a6bc:	mov	x2, x23
    a6c0:	mov	w0, #0x7                   	// #7
    a6c4:	ldr	x1, [x1]
    a6c8:	bl	9bc8 <grub_error>
    a6cc:	mov	x0, x24
    a6d0:	bl	6260 <grub_free>
    a6d4:	ldr	w0, [x21]
    a6d8:	ldp	x19, x20, [sp, #16]
    a6dc:	ldp	x21, x22, [sp, #32]
    a6e0:	ldp	x23, x24, [sp, #48]
    a6e4:	ldr	x25, [sp, #64]
    a6e8:	ldp	x29, x30, [sp], #96
    a6ec:	ret
    a6f0:	mov	w0, #0x0                   	// #0
    a6f4:	ldp	x19, x20, [sp, #16]
    a6f8:	ldp	x21, x22, [sp, #32]
    a6fc:	ldp	x23, x24, [sp, #48]
    a700:	ldp	x29, x30, [sp], #96
    a704:	ret
    a708:	ldr	x25, [sp, #64]
    a70c:	str	x24, [x20, #80]
    a710:	mov	w0, #0x0                   	// #0
    a714:	ldp	x19, x20, [sp, #16]
    a718:	ldp	x21, x22, [sp, #32]
    a71c:	ldp	x23, x24, [sp, #48]
    a720:	ldp	x29, x30, [sp], #96
    a724:	ret
	...

000000000000a740 <grub_fs_probe>:
    a740:	stp	x29, x30, [sp, #-96]!
    a744:	mov	x29, sp
    a748:	stp	x21, x22, [sp, #32]
    a74c:	mov	x22, x0
    a750:	ldr	x0, [x0]
    a754:	stp	x19, x20, [sp, #16]
    a758:	cbz	x0, a844 <grub_fs_probe+0x104>
    a75c:	adrp	x0, 0 <_start>
    a760:	stp	x27, x28, [sp, #80]
    a764:	ldr	x27, [x0]
    a768:	stp	x23, x24, [sp, #48]
    a76c:	ldr	x19, [x27]
    a770:	cbz	x19, a880 <grub_fs_probe+0x140>
    a774:	adrp	x5, 0 <_start>
    a778:	adrp	x4, 0 <_start>
    a77c:	adrp	x3, 0 <_start>
    a780:	adrp	x2, 0 <_start>
    a784:	adrp	x1, 0 <_start>
    a788:	adrp	x0, 0 <_start>
    a78c:	ldr	x21, [x4]
    a790:	stp	x25, x26, [sp, #64]
    a794:	adrp	x26, 0 <_start>
    a798:	ldr	x25, [x5]
    a79c:	ldr	x20, [x3]
    a7a0:	ldr	x24, [x2]
    a7a4:	ldr	x23, [x1]
    a7a8:	ldr	x28, [x0]
    a7ac:	b	a7ec <grub_fs_probe+0xac>
    a7b0:	bl	9c70 <grub_error_push>
    a7b4:	ldr	x3, [x26]
    a7b8:	mov	x2, x21
    a7bc:	ldr	x4, [x19, #16]
    a7c0:	mov	x0, x20
    a7c4:	mov	w1, #0x4e                  	// #78
    a7c8:	bl	c708 <grub_real_dprintf>
    a7cc:	bl	9d20 <grub_error_pop>
    a7d0:	ldr	w1, [x28]
    a7d4:	and	w1, w1, #0xfffffffd
    a7d8:	cmp	w1, #0x9
    a7dc:	b.ne	a908 <grub_fs_probe+0x1c8>  // b.any
    a7e0:	ldr	x19, [x19]
    a7e4:	str	wzr, [x28]
    a7e8:	cbz	x19, a87c <grub_fs_probe+0x13c>
    a7ec:	ldr	x4, [x19, #16]
    a7f0:	mov	x3, x25
    a7f4:	mov	x2, x21
    a7f8:	mov	x0, x20
    a7fc:	mov	w1, #0x38                  	// #56
    a800:	bl	c708 <grub_real_dprintf>
    a804:	ldr	x4, [x19, #24]
    a808:	mov	x2, x24
    a80c:	mov	x1, x23
    a810:	mov	x0, x22
    a814:	mov	x3, #0x0                   	// #0
    a818:	blr	x4
    a81c:	ldr	w0, [x28]
    a820:	cbnz	w0, a7b0 <grub_fs_probe+0x70>
    a824:	ldp	x23, x24, [sp, #48]
    a828:	ldp	x25, x26, [sp, #64]
    a82c:	ldp	x27, x28, [sp, #80]
    a830:	mov	x0, x19
    a834:	ldp	x19, x20, [sp, #16]
    a838:	ldp	x21, x22, [sp, #32]
    a83c:	ldp	x29, x30, [sp], #96
    a840:	ret
    a844:	ldr	x0, [x22, #8]
    a848:	cbz	x0, a854 <grub_fs_probe+0x114>
    a84c:	ldr	x19, [x0, #56]
    a850:	cbnz	x19, a830 <grub_fs_probe+0xf0>
    a854:	adrp	x1, 0 <_start>
    a858:	mov	x19, #0x0                   	// #0
    a85c:	mov	w0, #0x8                   	// #8
    a860:	ldr	x1, [x1]
    a864:	bl	9bc8 <grub_error>
    a868:	mov	x0, x19
    a86c:	ldp	x19, x20, [sp, #16]
    a870:	ldp	x21, x22, [sp, #32]
    a874:	ldp	x29, x30, [sp], #96
    a878:	ret
    a87c:	ldp	x25, x26, [sp, #64]
    a880:	ldr	x0, [x27, #8]
    a884:	cbz	x0, a92c <grub_fs_probe+0x1ec>
    a888:	ldr	w1, [x27, #16]
    a88c:	cbnz	w1, a92c <grub_fs_probe+0x1ec>
    a890:	mov	w1, #0x1                   	// #1
    a894:	adrp	x23, 0 <_start>
    a898:	adrp	x21, 0 <_start>
    a89c:	adrp	x20, 0 <_start>
    a8a0:	str	w1, [x27, #16]
    a8a4:	b	a8dc <grub_fs_probe+0x19c>
    a8a8:	ldr	x19, [x27]
    a8ac:	ldr	x2, [x23]
    a8b0:	ldr	x1, [x21]
    a8b4:	ldr	x4, [x19, #24]
    a8b8:	blr	x4
    a8bc:	ldr	x1, [x20]
    a8c0:	ldr	w0, [x1]
    a8c4:	and	w2, w0, #0xfffffffd
    a8c8:	cmp	w2, #0x9
    a8cc:	cbz	w0, a938 <grub_fs_probe+0x1f8>
    a8d0:	b.ne	a950 <grub_fs_probe+0x210>  // b.any
    a8d4:	ldr	x0, [x27, #8]
    a8d8:	str	wzr, [x1]
    a8dc:	blr	x0
    a8e0:	mov	w1, w0
    a8e4:	mov	x3, #0x0                   	// #0
    a8e8:	mov	x0, x22
    a8ec:	cbnz	w1, a8a8 <grub_fs_probe+0x168>
    a8f0:	ldr	w0, [x27, #16]
    a8f4:	ldp	x23, x24, [sp, #48]
    a8f8:	sub	w0, w0, #0x1
    a8fc:	str	w0, [x27, #16]
    a900:	ldp	x27, x28, [sp, #80]
    a904:	b	a854 <grub_fs_probe+0x114>
    a908:	mov	x19, #0x0                   	// #0
    a90c:	mov	x0, x19
    a910:	ldp	x19, x20, [sp, #16]
    a914:	ldp	x21, x22, [sp, #32]
    a918:	ldp	x23, x24, [sp, #48]
    a91c:	ldp	x25, x26, [sp, #64]
    a920:	ldp	x27, x28, [sp, #80]
    a924:	ldp	x29, x30, [sp], #96
    a928:	ret
    a92c:	ldp	x23, x24, [sp, #48]
    a930:	ldp	x27, x28, [sp, #80]
    a934:	b	a854 <grub_fs_probe+0x114>
    a938:	ldr	w0, [x27, #16]
    a93c:	ldp	x23, x24, [sp, #48]
    a940:	sub	w0, w0, #0x1
    a944:	str	w0, [x27, #16]
    a948:	ldp	x27, x28, [sp, #80]
    a94c:	b	a830 <grub_fs_probe+0xf0>
    a950:	ldr	w0, [x27, #16]
    a954:	mov	x19, #0x0                   	// #0
    a958:	ldp	x23, x24, [sp, #48]
    a95c:	sub	w0, w0, #0x1
    a960:	str	w0, [x27, #16]
    a964:	ldp	x27, x28, [sp, #80]
    a968:	b	a830 <grub_fs_probe+0xf0>
    a96c:	nop
	...

000000000000a9b8 <grub_named_list_find>:
    a9b8:	cbz	x0, aa0c <grub_named_list_find+0x54>
    a9bc:	stp	x29, x30, [sp, #-32]!
    a9c0:	mov	x29, sp
    a9c4:	stp	x19, x20, [sp, #16]
    a9c8:	mov	x19, x0
    a9cc:	mov	x20, x1
    a9d0:	b	a9dc <grub_named_list_find+0x24>
    a9d4:	ldr	x19, [x19]
    a9d8:	cbz	x19, a9fc <grub_named_list_find+0x44>
    a9dc:	ldr	x0, [x19, #16]
    a9e0:	mov	x1, x20
    a9e4:	bl	c488 <grub_strcmp>
    a9e8:	cbnz	w0, a9d4 <grub_named_list_find+0x1c>
    a9ec:	mov	x0, x19
    a9f0:	ldp	x19, x20, [sp, #16]
    a9f4:	ldp	x29, x30, [sp], #32
    a9f8:	ret
    a9fc:	mov	x0, #0x0                   	// #0
    aa00:	ldp	x19, x20, [sp, #16]
    aa04:	ldp	x29, x30, [sp], #32
    aa08:	ret
    aa0c:	mov	x0, #0x0                   	// #0
    aa10:	ret
    aa14:	nop

000000000000aa18 <grub_list_push>:
    aa18:	ldr	x2, [x0]
    aa1c:	str	x0, [x1, #8]
    aa20:	cbz	x2, aa28 <grub_list_push+0x10>
    aa24:	str	x1, [x2, #8]
    aa28:	str	x2, [x1]
    aa2c:	str	x1, [x0]
    aa30:	ret
    aa34:	nop

000000000000aa38 <grub_list_remove>:
    aa38:	ldp	x1, x2, [x0]
    aa3c:	cbz	x2, aa48 <grub_list_remove+0x10>
    aa40:	str	x1, [x2]
    aa44:	ldr	x1, [x0]
    aa48:	cbz	x1, aa50 <grub_list_remove+0x18>
    aa4c:	str	x2, [x1, #8]
    aa50:	stp	xzr, xzr, [x0]
    aa54:	ret
    aa58:	stp	x29, x30, [sp, #-32]!
    aa5c:	mov	x0, x1
    aa60:	mov	x29, sp
    aa64:	str	x19, [sp, #16]
    aa68:	mov	x19, x1
    aa6c:	bl	ce30 <grub_strlen>
    aa70:	ldrb	w1, [x19]
    aa74:	cmp	w1, #0x28
    aa78:	b.ne	aa8c <grub_list_remove+0x54>  // b.any
    aa7c:	add	x1, x19, x0
    aa80:	ldurb	w1, [x1, #-1]
    aa84:	cmp	w1, #0x29
    aa88:	b.eq	aa9c <grub_list_remove+0x64>  // b.none
    aa8c:	mov	x0, x19
    aa90:	ldr	x19, [sp, #16]
    aa94:	ldp	x29, x30, [sp], #32
    aa98:	b	c9d0 <grub_strdup>
    aa9c:	sub	x1, x0, #0x2
    aaa0:	add	x0, x19, #0x1
    aaa4:	ldr	x19, [sp, #16]
    aaa8:	ldp	x29, x30, [sp], #32
    aaac:	b	cb58 <grub_strndup>

000000000000aab0 <grub_modules_get_end>:
    aab0:	adrp	x0, 0 <_start>
    aab4:	ldr	x0, [x0]
    aab8:	ldr	x0, [x0]
    aabc:	cbz	x0, aad4 <grub_modules_get_end+0x24>
    aac0:	ldr	w2, [x0]
    aac4:	mov	w1, #0x696d                	// #26989
    aac8:	movk	w1, #0x676d, lsl #16
    aacc:	cmp	w2, w1
    aad0:	b.eq	aad8 <grub_modules_get_end+0x28>  // b.none
    aad4:	ret
    aad8:	ldr	x1, [x0, #16]
    aadc:	add	x0, x0, x1
    aae0:	ret
    aae4:	nop
	...

000000000000aaf0 <grub_main>:
    aaf0:	stp	x29, x30, [sp, #-80]!
    aaf4:	mov	x29, sp
    aaf8:	stp	x19, x20, [sp, #16]
    aafc:	stp	x21, x22, [sp, #32]
    ab00:	stp	x23, x24, [sp, #48]
    ab04:	bl	50 <grub_machine_init>
    ab08:	adrp	x0, 0 <_start>
    ab0c:	ldr	x20, [x0]
    ab10:	ldr	x19, [x20]
    ab14:	cbz	x19, ab34 <grub_main+0x44>
    ab18:	ldr	x2, [x19, #88]
    ab1c:	cbz	x2, adfc <grub_main+0x30c>
    ab20:	mov	x0, x19
    ab24:	mov	w1, #0x2                   	// #2
    ab28:	blr	x2
    ab2c:	ldr	x19, [x19]
    ab30:	cbnz	x19, ab18 <grub_main+0x28>
    ab34:	adrp	x0, 0 <_start>
    ab38:	ldr	x0, [x0]
    ab3c:	bl	c078 <grub_err_printf>
    ab40:	ldr	x19, [x20]
    ab44:	cbz	x19, ab64 <grub_main+0x74>
    ab48:	ldr	x2, [x19, #88]
    ab4c:	cbz	x2, ae08 <grub_main+0x318>
    ab50:	mov	x0, x19
    ab54:	mov	w1, #0x0                   	// #0
    ab58:	blr	x2
    ab5c:	ldr	x19, [x19]
    ab60:	cbnz	x19, ab48 <grub_main+0x58>
    ab64:	adrp	x0, 0 <_start>
    ab68:	ldr	x20, [x0]
    ab6c:	ldr	x0, [x20]
    ab70:	cbz	x0, ab88 <grub_main+0x98>
    ab74:	ldr	w2, [x0]
    ab78:	mov	w1, #0x696d                	// #26989
    ab7c:	movk	w1, #0x676d, lsl #16
    ab80:	cmp	w2, w1
    ab84:	b.eq	aef4 <grub_main+0x404>  // b.none
    ab88:	bl	e5f0 <grub_register_exported_symbols>
    ab8c:	ldr	x0, [x20]
    ab90:	cbz	x0, aba8 <grub_main+0xb8>
    ab94:	ldr	w2, [x0]
    ab98:	mov	w1, #0x696d                	// #26989
    ab9c:	movk	w1, #0x676d, lsl #16
    aba0:	cmp	w2, w1
    aba4:	b.eq	ae28 <grub_main+0x338>  // b.none
    aba8:	ldr	x4, [x20]
    abac:	stp	xzr, xzr, [sp, #64]
    abb0:	cbz	x4, abc8 <grub_main+0xd8>
    abb4:	ldr	w1, [x4]
    abb8:	mov	w0, #0x696d                	// #26989
    abbc:	movk	w0, #0x676d, lsl #16
    abc0:	cmp	w1, w0
    abc4:	b.eq	aea4 <grub_main+0x3b4>  // b.none
    abc8:	mov	x19, #0x0                   	// #0
    abcc:	adrp	x2, 0 <_start>
    abd0:	adrp	x0, 0 <_start>
    abd4:	mov	x1, #0x0                   	// #0
    abd8:	ldr	x2, [x2]
    abdc:	ldr	x21, [x0]
    abe0:	mov	x0, x21
    abe4:	bl	9938 <grub_register_variable_hook>
    abe8:	add	x0, sp, #0x40
    abec:	add	x1, sp, #0x48
    abf0:	bl	3a68 <grub_machine_get_bootlocation>
    abf4:	ldr	x0, [sp, #64]
    abf8:	cbz	x0, ac48 <grub_main+0x158>
    abfc:	adrp	x4, 0 <_start>
    ac00:	adrp	x3, 0 <_start>
    ac04:	ldr	x2, [sp, #72]
    ac08:	mov	x1, x0
    ac0c:	ldr	x3, [x3]
    ac10:	cmp	x2, #0x0
    ac14:	ldr	x0, [x4]
    ac18:	csel	x2, x2, x3, ne  // ne = any
    ac1c:	bl	d0e0 <grub_xasprintf>
    ac20:	mov	x22, x0
    ac24:	cbz	x0, ac48 <grub_main+0x158>
    ac28:	adrp	x23, 0 <_start>
    ac2c:	mov	x1, x0
    ac30:	ldr	x0, [x23]
    ac34:	bl	9508 <grub_env_set>
    ac38:	ldr	x0, [x23]
    ac3c:	bl	9a90 <grub_env_export>
    ac40:	mov	x0, x22
    ac44:	bl	6260 <grub_free>
    ac48:	cbz	x19, addc <grub_main+0x2ec>
    ac4c:	ldrb	w0, [x19]
    ac50:	cmp	w0, #0x28
    ac54:	b.eq	b00c <grub_main+0x51c>  // b.none
    ac58:	cbz	w0, addc <grub_main+0x2ec>
    ac5c:	mov	x22, #0x0                   	// #0
    ac60:	mov	x0, x19
    ac64:	mov	x23, x22
    ac68:	bl	c9d0 <grub_strdup>
    ac6c:	mov	x19, x0
    ac70:	ldr	x0, [sp, #64]
    ac74:	cbz	x23, ade4 <grub_main+0x2f4>
    ac78:	cbz	x0, adf0 <grub_main+0x300>
    ac7c:	ldrb	w1, [x23]
    ac80:	cmp	w1, #0x2c
    ac84:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    ac88:	b.ne	adf0 <grub_main+0x300>  // b.any
    ac8c:	ldrb	w3, [x0]
    ac90:	cbz	w3, acb4 <grub_main+0x1c4>
    ac94:	mov	x1, x0
    ac98:	cmp	w3, #0x5c
    ac9c:	b.eq	ae14 <grub_main+0x324>  // b.none
    aca0:	cmp	w3, #0x2c
    aca4:	b.eq	af68 <grub_main+0x478>  // b.none
    aca8:	add	x1, x1, #0x1
    acac:	ldrb	w3, [x1]
    acb0:	cbnz	w3, ac98 <grub_main+0x1a8>
    acb4:	adrp	x3, 0 <_start>
    acb8:	mov	x1, x0
    acbc:	mov	x2, x23
    acc0:	ldr	x0, [x3]
    acc4:	bl	d0e0 <grub_xasprintf>
    acc8:	mov	x22, x0
    accc:	ldr	x0, [sp, #64]
    acd0:	bl	6260 <grub_free>
    acd4:	mov	x0, x23
    acd8:	bl	6260 <grub_free>
    acdc:	ldr	x0, [sp, #72]
    ace0:	cmp	x19, #0x0
    ace4:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    ace8:	b.ne	afa0 <grub_main+0x4b0>  // b.any
    acec:	bl	6260 <grub_free>
    acf0:	adrp	x24, 0 <_start>
    acf4:	cbz	x22, ad40 <grub_main+0x250>
    acf8:	adrp	x0, 0 <_start>
    acfc:	adrp	x2, 0 <_start>
    ad00:	cmp	x19, #0x0
    ad04:	mov	x1, x22
    ad08:	ldr	x0, [x0]
    ad0c:	ldr	x2, [x2]
    ad10:	csel	x2, x19, x2, ne  // ne = any
    ad14:	bl	d0e0 <grub_xasprintf>
    ad18:	mov	x23, x0
    ad1c:	cbz	x0, ad34 <grub_main+0x244>
    ad20:	ldr	x0, [x24]
    ad24:	mov	x1, x23
    ad28:	bl	9508 <grub_env_set>
    ad2c:	mov	x0, x23
    ad30:	bl	6260 <grub_free>
    ad34:	mov	x1, x22
    ad38:	mov	x0, x21
    ad3c:	bl	9508 <grub_env_set>
    ad40:	mov	x0, x22
    ad44:	bl	6260 <grub_free>
    ad48:	mov	x0, x19
    ad4c:	bl	6260 <grub_free>
    ad50:	bl	9db8 <grub_print_error>
    ad54:	mov	x0, x21
    ad58:	bl	9a90 <grub_env_export>
    ad5c:	ldr	x0, [x24]
    ad60:	bl	9a90 <grub_env_export>
    ad64:	ldr	x0, [x20]
    ad68:	cbz	x0, ad70 <grub_main+0x280>
    ad6c:	str	xzr, [x20]
    ad70:	bl	6908 <grub_register_core_commands>
    ad74:	adrp	x0, 0 <_start>
    ad78:	ldr	x0, [x0]
    ad7c:	ldr	x0, [x0]
    ad80:	cbz	x0, ad88 <grub_main+0x298>
    ad84:	bl	d728 <grub_parser_execute>
    ad88:	adrp	x0, 0 <_start>
    ad8c:	ldr	x19, [x0]
    ad90:	mov	x0, x19
    ad94:	bl	8348 <grub_dl_load>
    ad98:	bl	9db8 <grub_print_error>
    ad9c:	adrp	x0, 0 <_start>
    ada0:	adrp	x2, 0 <_start>
    ada4:	mov	x1, x19
    ada8:	ldr	x0, [x0]
    adac:	ldr	x2, [x2]
    adb0:	ldr	x0, [x0]
    adb4:	str	wzr, [x2]
    adb8:	bl	a9b8 <grub_named_list_find>
    adbc:	cbz	x0, add0 <grub_main+0x2e0>
    adc0:	ldr	x3, [x0, #32]
    adc4:	mov	x2, #0x0                   	// #0
    adc8:	mov	w1, #0x0                   	// #0
    adcc:	blr	x3
    add0:	bl	e170 <grub_rescue_run>
    add4:	ldrb	w0, [x19]
    add8:	cbnz	w0, ac60 <grub_main+0x170>
    addc:	ldr	x0, [sp, #64]
    ade0:	mov	x19, #0x0                   	// #0
    ade4:	mov	x22, x0
    ade8:	cbnz	x0, acdc <grub_main+0x1ec>
    adec:	mov	x23, #0x0                   	// #0
    adf0:	mov	x22, x23
    adf4:	bl	6260 <grub_free>
    adf8:	b	acdc <grub_main+0x1ec>
    adfc:	ldr	x19, [x19]
    ae00:	cbnz	x19, ab18 <grub_main+0x28>
    ae04:	b	ab34 <grub_main+0x44>
    ae08:	ldr	x19, [x19]
    ae0c:	cbnz	x19, ab48 <grub_main+0x58>
    ae10:	b	ab64 <grub_main+0x74>
    ae14:	ldrb	w2, [x1, #1]
    ae18:	cmp	w2, #0x2c
    ae1c:	b.ne	aca8 <grub_main+0x1b8>  // b.any
    ae20:	add	x1, x1, #0x2
    ae24:	b	acac <grub_main+0x1bc>
    ae28:	ldr	x19, [x0, #8]
    ae2c:	adds	x19, x0, x19
    ae30:	b.eq	aba8 <grub_main+0xb8>  // b.none
    ae34:	ldr	x2, [x0, #16]
    ae38:	adrp	x21, 0 <_start>
    ae3c:	add	x0, x0, x2
    ae40:	b	ae60 <grub_main+0x370>
    ae44:	ldr	x0, [x20]
    ae48:	ldr	w1, [x19, #4]
    ae4c:	ldr	x2, [x0, #16]
    ae50:	add	x0, x0, x2
    ae54:	add	x1, x1, #0x7
    ae58:	and	x1, x1, #0xfffffffffffffff8
    ae5c:	add	x19, x19, x1
    ae60:	cmp	x19, x0
    ae64:	b.cs	aba8 <grub_main+0xb8>  // b.hs, b.nlast
    ae68:	ldp	w2, w1, [x19]
    ae6c:	cbnz	w2, ae54 <grub_main+0x364>
    ae70:	sub	x1, x1, #0x8
    ae74:	add	x0, x19, #0x8
    ae78:	bl	92b8 <grub_dl_load_core>
    ae7c:	cbz	x0, b04c <grub_main+0x55c>
    ae80:	ldr	x0, [x21]
    ae84:	ldr	w0, [x0]
    ae88:	cbz	w0, ae44 <grub_main+0x354>
    ae8c:	bl	9db8 <grub_print_error>
    ae90:	ldr	x0, [x20]
    ae94:	ldr	w1, [x19, #4]
    ae98:	ldr	x2, [x0, #16]
    ae9c:	add	x0, x0, x2
    aea0:	b	ae54 <grub_main+0x364>
    aea4:	ldr	x1, [x4, #8]
    aea8:	adds	x1, x4, x1
    aeac:	b.eq	abc8 <grub_main+0xd8>  // b.none
    aeb0:	ldr	x0, [x4, #16]
    aeb4:	mov	x19, #0x0                   	// #0
    aeb8:	add	x4, x4, x0
    aebc:	cmp	x1, x4
    aec0:	b.cs	abcc <grub_main+0xdc>  // b.hs, b.nlast
    aec4:	nop
    aec8:	mov	x2, x1
    aecc:	ldr	w0, [x1, #4]
    aed0:	add	x0, x0, #0x7
    aed4:	ldr	w3, [x2], #8
    aed8:	and	x0, x0, #0xfffffffffffffff8
    aedc:	add	x1, x1, x0
    aee0:	cmp	w3, #0x3
    aee4:	csel	x19, x2, x19, eq  // eq = none
    aee8:	cmp	x1, x4
    aeec:	b.cc	aec8 <grub_main+0x3d8>  // b.lo, b.ul, b.last
    aef0:	b	abcc <grub_main+0xdc>
    aef4:	ldr	x19, [x0, #8]
    aef8:	adds	x19, x0, x19
    aefc:	b.eq	ab88 <grub_main+0x98>  // b.none
    af00:	ldr	x1, [x0, #16]
    af04:	add	x1, x0, x1
    af08:	b	af18 <grub_main+0x428>
    af0c:	add	x0, x0, #0x7
    af10:	and	x0, x0, #0xfffffffffffffff8
    af14:	add	x19, x19, x0
    af18:	cmp	x19, x1
    af1c:	b.cs	ab88 <grub_main+0x98>  // b.hs, b.nlast
    af20:	ldp	w2, w0, [x19]
    af24:	cmp	w2, #0x2
    af28:	b.ne	af0c <grub_main+0x41c>  // b.any
    af2c:	sub	x0, x0, #0x7
    af30:	bl	6210 <grub_malloc>
    af34:	adrp	x2, 0 <_start>
    af38:	ldr	x21, [x2]
    af3c:	str	x0, [x21]
    af40:	cbz	x0, af98 <grub_main+0x4a8>
    af44:	ldr	w2, [x19, #4]
    af48:	add	x1, x19, #0x8
    af4c:	sub	x2, x2, #0x8
    af50:	bl	bf40 <grub_memmove>
    af54:	ldr	x0, [x21]
    af58:	ldr	w1, [x19, #4]
    af5c:	add	x0, x0, x1
    af60:	sturb	wzr, [x0, #-8]
    af64:	b	ab88 <grub_main+0x98>
    af68:	sub	x1, x1, x0
    af6c:	bl	cb58 <grub_strndup>
    af70:	adrp	x3, 0 <_start>
    af74:	mov	x24, x0
    af78:	mov	x1, x0
    af7c:	mov	x2, x23
    af80:	ldr	x0, [x3]
    af84:	bl	d0e0 <grub_xasprintf>
    af88:	mov	x22, x0
    af8c:	mov	x0, x24
    af90:	bl	6260 <grub_free>
    af94:	b	accc <grub_main+0x1dc>
    af98:	bl	9db8 <grub_print_error>
    af9c:	b	ab88 <grub_main+0x98>
    afa0:	bl	ce30 <grub_strlen>
    afa4:	mov	x1, x0
    afa8:	cmp	x0, #0x1
    afac:	b.hi	afc0 <grub_main+0x4d0>  // b.pmore
    afb0:	b	b004 <grub_main+0x514>
    afb4:	strb	wzr, [x19, x1]
    afb8:	cmp	x1, #0x1
    afbc:	b.eq	b004 <grub_main+0x514>  // b.none
    afc0:	ldr	x19, [sp, #72]
    afc4:	mov	x2, x1
    afc8:	sub	x1, x1, #0x1
    afcc:	ldrb	w0, [x19, x1]
    afd0:	cmp	w0, #0x2f
    afd4:	b.eq	afb4 <grub_main+0x4c4>  // b.none
    afd8:	cmp	x2, #0x8
    afdc:	b.ls	acf0 <grub_main+0x200>  // b.plast
    afe0:	adrp	x1, 0 <_start>
    afe4:	sub	x23, x2, #0x9
    afe8:	add	x0, x19, x23
    afec:	mov	x2, #0x9                   	// #9
    aff0:	ldr	x1, [x1]
    aff4:	bl	c450 <grub_memcmp>
    aff8:	cbnz	w0, b004 <grub_main+0x514>
    affc:	ldr	x0, [sp, #72]
    b000:	strb	wzr, [x0, x23]
    b004:	ldr	x19, [sp, #72]
    b008:	b	acf0 <grub_main+0x200>
    b00c:	mov	x0, x19
    b010:	mov	w1, #0x29                  	// #41
    b014:	bl	c548 <grub_strrchr>
    b018:	mov	x22, x0
    b01c:	cbz	x0, add4 <grub_main+0x2e4>
    b020:	sub	x1, x0, x19
    b024:	add	x0, x19, #0x1
    b028:	sub	x1, x1, #0x1
    b02c:	bl	cb58 <grub_strndup>
    b030:	ldrb	w1, [x22, #1]
    b034:	mov	x23, x0
    b038:	mov	x19, #0x0                   	// #0
    b03c:	cbz	w1, ac70 <grub_main+0x180>
    b040:	add	x19, x22, #0x1
    b044:	mov	x22, x0
    b048:	b	ac60 <grub_main+0x170>
    b04c:	adrp	x1, 0 <_start>
    b050:	adrp	x0, 0 <_start>
    b054:	ldr	x1, [x1]
    b058:	ldr	x0, [x0]
    b05c:	bl	d1c0 <grub_fatal>
	...
    b0e8:	ret
    b0ec:	nop
    b0f0:	mov	x4, x0
    b0f4:	stp	x29, x30, [sp, #-16]!
    b0f8:	mov	x29, sp
    b0fc:	nop
    b100:	ldrb	w2, [x4]
    b104:	sub	w0, w2, #0x9
    b108:	cmp	w2, #0xd
    b10c:	and	w0, w0, #0xff
    b110:	b.eq	b1b8 <grub_main+0x6c8>  // b.none
    b114:	cmp	w2, #0x20
    b118:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    b11c:	b.ls	b1b8 <grub_main+0x6c8>  // b.plast
    b120:	cbz	w2, b1c4 <grub_main+0x6d4>
    b124:	mov	w5, #0x0                   	// #0
    b128:	mov	x0, #0x0                   	// #0
    b12c:	sub	w3, w2, #0x41
    b130:	cmp	w3, #0x19
    b134:	b.ls	b1c0 <grub_main+0x6d0>  // b.plast
    b138:	sub	w2, w2, #0x30
    b13c:	sxtw	x8, w2
    b140:	cmp	x8, #0x9
    b144:	b.hi	b1c0 <grub_main+0x6d0>  // b.pmore
    b148:	mvn	x6, x8
    b14c:	mov	w5, #0x40                  	// #64
    b150:	mov	x3, #0x0                   	// #0
    b154:	mov	x2, #0x0                   	// #0
    b158:	lsl	x2, x2, #1
    b15c:	cmp	x6, #0x0
    b160:	orr	x7, x2, #0x1
    b164:	lsl	x3, x3, #1
    b168:	csel	x2, x7, x2, lt  // lt = tstop
    b16c:	lsl	x6, x6, #1
    b170:	cmp	x2, #0x9
    b174:	b.ls	b180 <grub_main+0x690>  // b.plast
    b178:	orr	x3, x3, #0x1
    b17c:	sub	x2, x2, #0xa
    b180:	subs	w5, w5, #0x1
    b184:	b.ne	b158 <grub_main+0x668>  // b.any
    b188:	cmp	x0, x3
    b18c:	b.hi	b1e0 <grub_main+0x6f0>  // b.pmore
    b190:	ldrb	w2, [x4, #1]!
    b194:	add	x0, x0, x0, lsl #2
    b198:	mov	w5, #0x1                   	// #1
    b19c:	add	x0, x8, x0, lsl #1
    b1a0:	cbnz	w2, b12c <grub_main+0x63c>
    b1a4:	nop
    b1a8:	cbz	x1, b1b0 <grub_main+0x6c0>
    b1ac:	str	x4, [x1]
    b1b0:	ldp	x29, x30, [sp], #16
    b1b4:	ret
    b1b8:	add	x4, x4, #0x1
    b1bc:	b	b100 <grub_main+0x610>
    b1c0:	cbnz	w5, b1a8 <grub_main+0x6b8>
    b1c4:	adrp	x1, 0 <_start>
    b1c8:	mov	w0, #0xa                   	// #10
    b1cc:	ldr	x1, [x1]
    b1d0:	bl	9bc8 <grub_error>
    b1d4:	mov	x0, #0x0                   	// #0
    b1d8:	ldp	x29, x30, [sp], #16
    b1dc:	ret
    b1e0:	adrp	x1, 0 <_start>
    b1e4:	mov	w0, #0xb                   	// #11
    b1e8:	ldr	x1, [x1]
    b1ec:	bl	9bc8 <grub_error>
    b1f0:	mov	x0, #0xffffffffffffffff    	// #-1
    b1f4:	ldp	x29, x30, [sp], #16
    b1f8:	ret
    b1fc:	nop
	...
    b210:	stp	x29, x30, [sp, #-160]!
    b214:	add	x5, x2, #0x1
    b218:	mov	x29, sp
    b21c:	stp	x21, x22, [sp, #32]
    b220:	mov	x22, x1
    b224:	stp	x23, x24, [sp, #48]
    b228:	mov	x24, x0
    b22c:	stp	x27, x28, [sp, #80]
    b230:	ldrb	w2, [x2]
    b234:	stp	x4, x3, [sp, #96]
    b238:	str	x5, [sp, #120]
    b23c:	cbz	w2, b7f0 <grub_main+0xd00>
    b240:	mov	x28, #0x0                   	// #0
    b244:	stp	x19, x20, [sp, #16]
    b248:	stp	x25, x26, [sp, #64]
    b24c:	mov	x25, #0x0                   	// #0
    b250:	b	b278 <grub_main+0x788>
    b254:	cmp	x22, x28
    b258:	b.ls	b260 <grub_main+0x770>  // b.plast
    b25c:	strb	w2, [x24, x28]
    b260:	add	x28, x28, #0x1
    b264:	mov	x0, x5
    b268:	add	x5, x0, #0x1
    b26c:	str	x5, [sp, #120]
    b270:	ldrb	w2, [x0]
    b274:	cbz	w2, b410 <grub_main+0x920>
    b278:	cmp	w2, #0x25
    b27c:	b.ne	b254 <grub_main+0x764>  // b.any
    b280:	mov	x0, x5
    b284:	add	x26, x25, #0x1
    b288:	mov	x21, x25
    b28c:	mov	w23, #0x20                  	// #32
    b290:	b	b2f8 <grub_main+0x808>
    b294:	cmp	w1, #0x30
    b298:	mov	w19, #0x30                  	// #48
    b29c:	add	x1, sp, #0x78
    b2a0:	csel	w19, w19, w23, eq  // eq = none
    b2a4:	bl	b0f0 <grub_main+0x600>
    b2a8:	mov	w27, w0
    b2ac:	ldr	x2, [sp, #120]
    b2b0:	ldrb	w1, [x2]
    b2b4:	cmp	w1, #0x2e
    b2b8:	b.eq	b340 <grub_main+0x850>  // b.none
    b2bc:	sub	w3, w1, #0x30
    b2c0:	mov	w4, #0xffffffff            	// #-1
    b2c4:	cmp	w3, #0x9
    b2c8:	b.hi	b2e4 <grub_main+0x7f4>  // b.pmore
    b2cc:	mov	x0, x2
    b2d0:	add	x1, sp, #0x78
    b2d4:	bl	b0f0 <grub_main+0x600>
    b2d8:	mov	w4, w0
    b2dc:	ldr	x2, [sp, #120]
    b2e0:	ldrb	w1, [x2]
    b2e4:	cmp	w1, #0x24
    b2e8:	add	x0, x2, #0x1
    b2ec:	b.ne	b354 <grub_main+0x864>  // b.any
    b2f0:	sub	w21, w27, #0x1
    b2f4:	str	x0, [sp, #120]
    b2f8:	ldrb	w1, [x0]
    b2fc:	mov	w20, #0x0                   	// #0
    b300:	cmp	w1, #0x2d
    b304:	b.ne	b31c <grub_main+0x82c>  // b.any
    b308:	add	x2, x0, #0x1
    b30c:	str	x2, [sp, #120]
    b310:	mov	w20, #0x1                   	// #1
    b314:	ldrb	w1, [x0, #1]
    b318:	mov	x0, x2
    b31c:	sub	w2, w1, #0x30
    b320:	cmp	w2, #0x9
    b324:	b.ls	b294 <grub_main+0x7a4>  // b.plast
    b328:	mov	x2, x0
    b32c:	cmp	w1, #0x2e
    b330:	mov	w19, #0x20                  	// #32
    b334:	mov	w27, #0x0                   	// #0
    b338:	mov	w4, #0xffffffff            	// #-1
    b33c:	b.ne	b2e4 <grub_main+0x7f4>  // b.any
    b340:	add	x0, x2, #0x1
    b344:	str	x0, [sp, #120]
    b348:	ldrb	w1, [x2, #1]
    b34c:	mov	x2, x0
    b350:	b	b2bc <grub_main+0x7cc>
    b354:	str	x0, [sp, #120]
    b358:	ldrb	w1, [x2]
    b35c:	cmp	w1, #0x6c
    b360:	b.eq	b51c <grub_main+0xa2c>  // b.none
    b364:	cmp	w1, #0x25
    b368:	b.eq	b544 <grub_main+0xa54>  // b.none
    b36c:	ldr	x2, [sp, #96]
    b370:	mov	x25, x26
    b374:	ldr	x2, [x2]
    b378:	cmp	x2, x21
    b37c:	b.ls	b268 <grub_main+0x778>  // b.plast
    b380:	ldr	x2, [sp, #104]
    b384:	cmp	w1, #0x70
    b388:	ldr	x2, [x2]
    b38c:	ldr	x3, [x2, x21, lsl #3]
    b390:	b.eq	b588 <grub_main+0xa98>  // b.none
    b394:	b.hi	b3d8 <grub_main+0x8e8>  // b.pmore
    b398:	cmp	w1, #0x63
    b39c:	b.eq	b570 <grub_main+0xa80>  // b.none
    b3a0:	cmp	w1, #0x64
    b3a4:	b.eq	b684 <grub_main+0xb94>  // b.none
    b3a8:	cmp	w1, #0x43
    b3ac:	b.ne	b3e8 <grub_main+0x8f8>  // b.any
    b3b0:	cmp	w3, #0x7f
    b3b4:	b.hi	b778 <grub_main+0xc88>  // b.pmore
    b3b8:	and	w3, w3, #0xff
    b3bc:	cmp	x22, x28
    b3c0:	add	x1, x28, #0x1
    b3c4:	b.ls	b7d0 <grub_main+0xce0>  // b.plast
    b3c8:	mov	x25, x26
    b3cc:	strb	w3, [x24, x28]
    b3d0:	mov	x28, x1
    b3d4:	b	b268 <grub_main+0x778>
    b3d8:	cmp	w1, #0x73
    b3dc:	b.eq	b5b4 <grub_main+0xac4>  // b.none
    b3e0:	cmp	w1, #0x72
    b3e4:	b.hi	b43c <grub_main+0x94c>  // b.pmore
    b3e8:	cmp	x22, x28
    b3ec:	b.ls	b3f4 <grub_main+0x904>  // b.plast
    b3f0:	strb	w1, [x24, x28]
    b3f4:	add	x28, x28, #0x1
    b3f8:	mov	x25, x26
    b3fc:	add	x5, x0, #0x1
    b400:	str	x5, [sp, #120]
    b404:	ldrb	w2, [x0]
    b408:	cbnz	w2, b278 <grub_main+0x788>
    b40c:	nop
    b410:	ldp	x19, x20, [sp, #16]
    b414:	mov	w0, w28
    b418:	ldp	x25, x26, [sp, #64]
    b41c:	cmp	x22, x28
    b420:	b.ls	b558 <grub_main+0xa68>  // b.plast
    b424:	strb	wzr, [x24, x28]
    b428:	ldp	x21, x22, [sp, #32]
    b42c:	ldp	x23, x24, [sp, #48]
    b430:	ldp	x27, x28, [sp, #80]
    b434:	ldp	x29, x30, [sp], #160
    b438:	ret
    b43c:	cmp	w1, #0x75
    b440:	b.eq	b80c <grub_main+0xd1c>  // b.none
    b444:	cmp	w1, #0x78
    b448:	b.ne	b3e8 <grub_main+0x8f8>  // b.any
    b44c:	add	x9, sp, #0x80
    b450:	and	w1, w3, #0xf
    b454:	lsr	x3, x3, #4
    b458:	mov	w2, w1
    b45c:	cmp	w1, #0xa
    b460:	add	w2, w2, #0x30
    b464:	add	w1, w1, #0x57
    b468:	csel	w2, w2, w1, cc  // cc = lo, ul, last
    b46c:	strb	w2, [x9], #1
    b470:	cbnz	x3, b450 <grub_main+0x960>
    b474:	strb	wzr, [x9]
    b478:	add	x8, sp, #0x80
    b47c:	ldrb	w2, [sp, #128]
    b480:	cbz	w2, b70c <grub_main+0xc1c>
    b484:	mov	x1, x8
    b488:	ldrb	w2, [x1, #1]!
    b48c:	cbnz	w2, b488 <grub_main+0x998>
    b490:	sub	x1, x1, x8
    b494:	sub	x1, x1, #0x1
    b498:	add	x1, x8, x1
    b49c:	cmp	x1, x8
    b4a0:	b.ls	b4c0 <grub_main+0x9d0>  // b.plast
    b4a4:	nop
    b4a8:	ldrb	w3, [x1]
    b4ac:	ldrb	w2, [x8]
    b4b0:	strb	w3, [x8], #1
    b4b4:	strb	w2, [x1], #-1
    b4b8:	cmp	x8, x1
    b4bc:	b.cc	b4a8 <grub_main+0x9b8>  // b.lo, b.ul, b.last
    b4c0:	add	x1, sp, #0x80
    b4c4:	ldrb	w2, [sp, #128]
    b4c8:	sub	x1, x9, x1
    b4cc:	mov	w3, w27
    b4d0:	cmp	x1, w27, uxtw
    b4d4:	b.cc	b71c <grub_main+0xc2c>  // b.lo, b.ul, b.last
    b4d8:	cbz	w20, b814 <grub_main+0xd24>
    b4dc:	mov	x1, x28
    b4e0:	mov	x3, #0x0                   	// #0
    b4e4:	cbz	w2, b514 <grub_main+0xa24>
    b4e8:	mov	x28, x1
    b4ec:	add	x1, sp, #0x80
    b4f0:	sub	x1, x1, x28
    b4f4:	nop
    b4f8:	cmp	x22, x28
    b4fc:	b.ls	b7dc <grub_main+0xcec>  // b.plast
    b500:	strb	w2, [x24, x28]
    b504:	add	x28, x28, #0x1
    b508:	ldrb	w2, [x1, x28]
    b50c:	cbnz	w2, b4f8 <grub_main+0xa08>
    b510:	cbnz	w20, b7a0 <grub_main+0xcb0>
    b514:	mov	x25, x26
    b518:	b	b268 <grub_main+0x778>
    b51c:	add	x0, x2, #0x2
    b520:	str	x0, [sp, #120]
    b524:	ldrb	w1, [x2, #1]
    b528:	cmp	w1, #0x6c
    b52c:	b.ne	b364 <grub_main+0x874>  // b.any
    b530:	add	x0, x2, #0x3
    b534:	str	x0, [sp, #120]
    b538:	ldrb	w1, [x2, #2]
    b53c:	cmp	w1, #0x25
    b540:	b.ne	b36c <grub_main+0x87c>  // b.any
    b544:	cmp	x22, x28
    b548:	b.ls	b550 <grub_main+0xa60>  // b.plast
    b54c:	strb	w1, [x24, x28]
    b550:	add	x28, x28, #0x1
    b554:	b	b268 <grub_main+0x778>
    b558:	strb	wzr, [x24, x22]
    b55c:	ldp	x21, x22, [sp, #32]
    b560:	ldp	x23, x24, [sp, #48]
    b564:	ldp	x27, x28, [sp, #80]
    b568:	ldp	x29, x30, [sp], #160
    b56c:	ret
    b570:	cmp	x22, x28
    b574:	b.ls	b3f4 <grub_main+0x904>  // b.plast
    b578:	mov	x25, x26
    b57c:	strb	w3, [x24, x28]
    b580:	add	x28, x28, #0x1
    b584:	b	b3fc <grub_main+0x90c>
    b588:	cmp	x22, x28
    b58c:	b.ls	b598 <grub_main+0xaa8>  // b.plast
    b590:	mov	w1, #0x30                  	// #48
    b594:	strb	w1, [x24, x28]
    b598:	add	x1, x28, #0x1
    b59c:	cmp	x22, x1
    b5a0:	b.ls	b5ac <grub_main+0xabc>  // b.plast
    b5a4:	mov	w2, #0x78                  	// #120
    b5a8:	strb	w2, [x24, x1]
    b5ac:	add	x28, x28, #0x2
    b5b0:	b	b44c <grub_main+0x95c>
    b5b4:	adrp	x1, 0 <_start>
    b5b8:	cmp	x3, #0x0
    b5bc:	mov	w8, w4
    b5c0:	ldr	x7, [x1]
    b5c4:	mov	x1, #0x0                   	// #0
    b5c8:	csel	x7, x3, x7, ne  // ne = any
    b5cc:	cbnz	w4, b614 <grub_main+0xb24>
    b5d0:	mov	w4, w27
    b5d4:	cbz	w27, b268 <grub_main+0x778>
    b5d8:	cbz	w20, b820 <grub_main+0xd30>
    b5dc:	mov	x1, x28
    b5e0:	add	x28, x4, x28
    b5e4:	nop
    b5e8:	cmp	x22, x1
    b5ec:	b.ls	b5f4 <grub_main+0xb04>  // b.plast
    b5f0:	strb	w19, [x24, x1]
    b5f4:	add	x1, x1, #0x1
    b5f8:	cmp	x1, x28
    b5fc:	b.ne	b5e8 <grub_main+0xaf8>  // b.any
    b600:	mov	x25, x26
    b604:	b	b268 <grub_main+0x778>
    b608:	add	x1, x1, #0x1
    b60c:	cmp	x1, x8
    b610:	b.eq	b61c <grub_main+0xb2c>  // b.none
    b614:	ldrb	w2, [x7, x1]
    b618:	cbnz	w2, b608 <grub_main+0xb18>
    b61c:	cmp	x1, w27, uxtw
    b620:	mov	w2, w27
    b624:	b.cc	b7fc <grub_main+0xd0c>  // b.lo, b.ul, b.last
    b628:	cbz	w20, b840 <grub_main+0xd50>
    b62c:	mov	x4, #0x0                   	// #0
    b630:	cbz	x1, b514 <grub_main+0xa24>
    b634:	add	x5, x24, x28
    b638:	mov	x2, #0x0                   	// #0
    b63c:	nop
    b640:	add	x3, x28, x2
    b644:	cmp	x22, x3
    b648:	b.ls	b654 <grub_main+0xb64>  // b.plast
    b64c:	ldrb	w3, [x7, x2]
    b650:	strb	w3, [x5, x2]
    b654:	add	x2, x2, #0x1
    b658:	cmp	x2, x1
    b65c:	b.cc	b640 <grub_main+0xb50>  // b.lo, b.ul, b.last
    b660:	cmp	x1, #0x0
    b664:	mov	x25, x26
    b668:	csinc	x1, x1, xzr, ne  // ne = any
    b66c:	add	x28, x28, x1
    b670:	cbz	w20, b268 <grub_main+0x778>
    b674:	mov	x1, x28
    b678:	cbnz	x4, b5e0 <grub_main+0xaf0>
    b67c:	mov	x25, x26
    b680:	b	b268 <grub_main+0x778>
    b684:	tbz	x3, #63, b80c <grub_main+0xd1c>
    b688:	neg	x3, x3
    b68c:	add	x8, sp, #0x81
    b690:	mov	w1, #0x2d                  	// #45
    b694:	strb	w1, [sp, #128]
    b698:	mov	x9, x8
    b69c:	mov	x10, #0xfffffffe            	// #4294967294
    b6a0:	cmp	x3, x10
    b6a4:	b.ls	b758 <grub_main+0xc68>  // b.plast
    b6a8:	mov	w4, #0x40                  	// #64
    b6ac:	mov	x2, #0x0                   	// #0
    b6b0:	mov	x1, #0x0                   	// #0
    b6b4:	nop
    b6b8:	lsl	x1, x1, #1
    b6bc:	cmp	x3, #0x0
    b6c0:	orr	x7, x1, #0x1
    b6c4:	lsl	x2, x2, #1
    b6c8:	csel	x1, x7, x1, lt  // lt = tstop
    b6cc:	lsl	x3, x3, #1
    b6d0:	cmp	x1, #0x9
    b6d4:	b.ls	b6e0 <grub_main+0xbf0>  // b.plast
    b6d8:	orr	x2, x2, #0x1
    b6dc:	sub	x1, x1, #0xa
    b6e0:	subs	w4, w4, #0x1
    b6e4:	b.ne	b6b8 <grub_main+0xbc8>  // b.any
    b6e8:	mov	x3, x2
    b6ec:	add	w1, w1, #0x30
    b6f0:	strb	w1, [x9], #1
    b6f4:	cbnz	x3, b6a0 <grub_main+0xbb0>
    b6f8:	strb	wzr, [x9]
    b6fc:	ldrb	w1, [x8]
    b700:	cbnz	w1, b484 <grub_main+0x994>
    b704:	mov	x1, #0xffffffffffffffff    	// #-1
    b708:	b	b498 <grub_main+0x9a8>
    b70c:	sub	x1, x9, x8
    b710:	mov	w3, w27
    b714:	cmp	x1, w27, uxtw
    b718:	b.cs	b514 <grub_main+0xa24>  // b.hs, b.nlast
    b71c:	sub	x3, x3, x1
    b720:	cbz	w20, b7a8 <grub_main+0xcb8>
    b724:	mov	x1, x28
    b728:	cbnz	w2, b4e8 <grub_main+0x9f8>
    b72c:	cbz	x3, b514 <grub_main+0xa24>
    b730:	add	x28, x3, x28
    b734:	nop
    b738:	cmp	x22, x1
    b73c:	b.ls	b744 <grub_main+0xc54>  // b.plast
    b740:	strb	w19, [x24, x1]
    b744:	add	x1, x1, #0x1
    b748:	cmp	x1, x28
    b74c:	b.ne	b738 <grub_main+0xc48>  // b.any
    b750:	mov	x25, x26
    b754:	b	b268 <grub_main+0x778>
    b758:	mov	w1, #0xcccd                	// #52429
    b75c:	movk	w1, #0xcccc, lsl #16
    b760:	umull	x2, w3, w1
    b764:	lsr	x2, x2, #35
    b768:	add	w1, w2, w2, lsl #2
    b76c:	sub	w1, w3, w1, lsl #1
    b770:	mov	w3, w2
    b774:	b	b6ec <grub_main+0xbfc>
    b778:	cmp	w3, #0x7ff
    b77c:	b.ls	b850 <grub_main+0xd60>  // b.plast
    b780:	mov	w1, #0xffff                	// #65535
    b784:	cmp	w3, w1
    b788:	b.ls	b8dc <grub_main+0xdec>  // b.plast
    b78c:	mov	w1, #0x10ffff              	// #1114111
    b790:	cmp	w3, w1
    b794:	b.ls	b8f8 <grub_main+0xe08>  // b.plast
    b798:	mov	w3, #0x3f                  	// #63
    b79c:	b	b3bc <grub_main+0x8cc>
    b7a0:	mov	x1, x28
    b7a4:	b	b72c <grub_main+0xc3c>
    b7a8:	cbz	x3, b814 <grub_main+0xd24>
    b7ac:	add	x1, x3, x28
    b7b0:	cmp	x22, x28
    b7b4:	b.ls	b7bc <grub_main+0xccc>  // b.plast
    b7b8:	strb	w19, [x24, x28]
    b7bc:	add	x28, x28, #0x1
    b7c0:	cmp	x28, x1
    b7c4:	b.ne	b7b0 <grub_main+0xcc0>  // b.any
    b7c8:	mov	x3, #0xffffffffffffffff    	// #-1
    b7cc:	cbnz	w2, b4e8 <grub_main+0x9f8>
    b7d0:	mov	x28, x1
    b7d4:	mov	x25, x26
    b7d8:	b	b268 <grub_main+0x778>
    b7dc:	add	x28, x28, #0x1
    b7e0:	ldrb	w2, [x1, x28]
    b7e4:	cbnz	w2, b4f8 <grub_main+0xa08>
    b7e8:	cbz	w20, b514 <grub_main+0xa24>
    b7ec:	b	b7a0 <grub_main+0xcb0>
    b7f0:	mov	w0, #0x0                   	// #0
    b7f4:	mov	x28, #0x0                   	// #0
    b7f8:	b	b41c <grub_main+0x92c>
    b7fc:	sub	x4, x2, x1
    b800:	cbz	w20, b81c <grub_main+0xd2c>
    b804:	cbnz	x1, b634 <grub_main+0xb44>
    b808:	b	b674 <grub_main+0xb84>
    b80c:	add	x8, sp, #0x80
    b810:	b	b698 <grub_main+0xba8>
    b814:	mov	x1, x28
    b818:	b	b7c8 <grub_main+0xcd8>
    b81c:	cbz	x4, b840 <grub_main+0xd50>
    b820:	add	x2, x28, x4
    b824:	nop
    b828:	cmp	x22, x28
    b82c:	b.ls	b834 <grub_main+0xd44>  // b.plast
    b830:	strb	w19, [x24, x28]
    b834:	add	x28, x28, #0x1
    b838:	cmp	x28, x2
    b83c:	b.ne	b828 <grub_main+0xd38>  // b.any
    b840:	mov	x4, #0xffffffffffffffff    	// #-1
    b844:	cbnz	x1, b634 <grub_main+0xb44>
    b848:	mov	x25, x26
    b84c:	b	b268 <grub_main+0x778>
    b850:	mov	w5, #0xc0                  	// #192
    b854:	mov	w1, #0x0                   	// #0
    b858:	mov	w2, #0x6                   	// #6
    b85c:	cmp	x22, x28
    b860:	add	x4, x28, #0x1
    b864:	b.ls	b874 <grub_main+0xd84>  // b.plast
    b868:	lsr	w2, w3, w2
    b86c:	orr	w2, w5, w2
    b870:	strb	w2, [x24, x28]
    b874:	cmp	x22, x4
    b878:	b.ls	b88c <grub_main+0xd9c>  // b.plast
    b87c:	lsr	w2, w3, w1
    b880:	and	w2, w2, #0x3f
    b884:	orr	w2, w2, #0xffffff80
    b888:	strb	w2, [x24, x4]
    b88c:	add	x4, x28, #0x2
    b890:	subs	w2, w1, #0x6
    b894:	b.mi	b8ec <grub_main+0xdfc>  // b.first
    b898:	cmp	x22, x4
    b89c:	b.ls	b8b0 <grub_main+0xdc0>  // b.plast
    b8a0:	lsr	w2, w3, w2
    b8a4:	and	w2, w2, #0x3f
    b8a8:	orr	w2, w2, #0xffffff80
    b8ac:	strb	w2, [x24, x4]
    b8b0:	cmp	w1, #0xc
    b8b4:	add	x1, x28, #0x3
    b8b8:	b.ne	b7d0 <grub_main+0xce0>  // b.any
    b8bc:	cmp	x22, x1
    b8c0:	b.ls	b8d0 <grub_main+0xde0>  // b.plast
    b8c4:	and	w3, w3, #0x3f
    b8c8:	orr	w2, w3, #0xffffff80
    b8cc:	strb	w2, [x24, x1]
    b8d0:	add	x28, x28, #0x4
    b8d4:	mov	x25, x26
    b8d8:	b	b268 <grub_main+0x778>
    b8dc:	mov	w5, #0xe0                  	// #224
    b8e0:	mov	w1, #0x6                   	// #6
    b8e4:	mov	w2, #0xc                   	// #12
    b8e8:	b	b85c <grub_main+0xd6c>
    b8ec:	mov	x28, x4
    b8f0:	mov	x25, x26
    b8f4:	b	b268 <grub_main+0x778>
    b8f8:	mov	w5, #0xf0                  	// #240
    b8fc:	mov	w1, #0xc                   	// #12
    b900:	mov	w2, #0x12                  	// #18
    b904:	b	b85c <grub_main+0xd6c>
	...
    b910:	stp	x29, x30, [sp, #-96]!
    b914:	mov	x5, #0x1                   	// #1
    b918:	movk	x5, #0x2003, lsl #32
    b91c:	mov	x29, sp
    b920:	stp	x21, x22, [sp, #32]
    b924:	mov	x3, x0
    b928:	mov	x21, x0
    b92c:	stp	x23, x24, [sp, #48]
    b930:	mov	x6, #0x1                   	// #1
    b934:	ldr	w23, [x2, #24]
    b938:	ldp	x22, x24, [x2]
    b93c:	stp	x25, x26, [sp, #64]
    b940:	mov	x25, x1
    b944:	stp	x19, x20, [sp, #16]
    b948:	mov	x1, #0x0                   	// #0
    b94c:	movk	x5, #0x25, lsl #48
    b950:	stp	x27, x28, [sp, #80]
    b954:	str	xzr, [x25, #264]
    b958:	mov	x4, x3
    b95c:	ldrb	w0, [x3], #1
    b960:	cbz	w0, ba50 <grub_main+0xf60>
    b964:	cmp	w0, #0x25
    b968:	b.ne	b958 <grub_main+0xe68>  // b.any
    b96c:	ldrb	w2, [x4, #1]
    b970:	cmp	w2, #0x2d
    b974:	b.ne	b988 <grub_main+0xe98>  // b.any
    b978:	ldrb	w2, [x4, #2]
    b97c:	add	x3, x4, #0x2
    b980:	b	b988 <grub_main+0xe98>
    b984:	ldrb	w2, [x3, #1]!
    b988:	sub	w0, w2, #0x30
    b98c:	cmp	w0, #0x9
    b990:	b.ls	b984 <grub_main+0xe94>  // b.plast
    b994:	cmp	w2, #0x24
    b998:	add	x4, x3, #0x1
    b99c:	b.ne	b9b0 <grub_main+0xec0>  // b.any
    b9a0:	add	x0, x3, #0x2
    b9a4:	ldrb	w2, [x3, #1]
    b9a8:	mov	x3, x4
    b9ac:	mov	x4, x0
    b9b0:	cmp	w2, #0x2d
    b9b4:	b.ne	b9c4 <grub_main+0xed4>  // b.any
    b9b8:	ldrb	w2, [x3, #1]
    b9bc:	mov	x3, x4
    b9c0:	add	x4, x4, #0x1
    b9c4:	sub	w0, w2, #0x30
    b9c8:	cmp	w0, #0x9
    b9cc:	b.hi	b9e8 <grub_main+0xef8>  // b.pmore
    b9d0:	mov	x4, x3
    b9d4:	ldrb	w2, [x3, #1]!
    b9d8:	sub	w0, w2, #0x30
    b9dc:	cmp	w0, #0x9
    b9e0:	b.ls	b9d0 <grub_main+0xee0>  // b.plast
    b9e4:	add	x4, x4, #0x2
    b9e8:	cmp	w2, #0x2e
    b9ec:	b.ne	becc <grub_main+0x13dc>  // b.any
    b9f0:	ldrb	w2, [x3, #1]
    b9f4:	sub	w0, w2, #0x30
    b9f8:	cmp	w0, #0x9
    b9fc:	b.hi	bf1c <grub_main+0x142c>  // b.pmore
    ba00:	mov	x3, x4
    ba04:	ldrb	w2, [x4, #1]!
    ba08:	sub	w0, w2, #0x30
    ba0c:	cmp	w0, #0x9
    ba10:	b.ls	ba00 <grub_main+0xf10>  // b.plast
    ba14:	add	x3, x3, #0x2
    ba18:	cmp	w2, #0x6c
    ba1c:	b.eq	bdcc <grub_main+0x12dc>  // b.none
    ba20:	sub	w2, w2, #0x43
    ba24:	and	w2, w2, #0xff
    ba28:	cmp	w2, #0x35
    ba2c:	b.hi	b958 <grub_main+0xe68>  // b.pmore
    ba30:	lsl	x2, x6, x2
    ba34:	tst	x2, x5
    ba38:	b.eq	b958 <grub_main+0xe68>  // b.none
    ba3c:	add	x1, x1, #0x1
    ba40:	str	x1, [x25, #264]
    ba44:	mov	x4, x3
    ba48:	ldrb	w0, [x3], #1
    ba4c:	cbnz	w0, b964 <grub_main+0xe74>
    ba50:	cmp	x1, #0x20
    ba54:	lsl	x0, x1, #3
    ba58:	b.hi	beb0 <grub_main+0x13c0>  // b.pmore
    ba5c:	mov	x2, x25
    ba60:	str	x25, [x25, #256]
    ba64:	cmp	x0, #0x17
    ba68:	b.hi	bc48 <grub_main+0x1158>  // b.pmore
    ba6c:	cbz	x0, ba84 <grub_main+0xf94>
    ba70:	add	x0, x2, x0
    ba74:	nop
    ba78:	strb	wzr, [x2], #1
    ba7c:	cmp	x2, x0
    ba80:	b.ne	ba78 <grub_main+0xf88>  // b.any
    ba84:	mov	x26, #0x0                   	// #0
    ba88:	mov	w28, #0x5                   	// #5
    ba8c:	nop
    ba90:	mov	x1, x21
    ba94:	ldrb	w0, [x21], #1
    ba98:	cbz	w0, bbb0 <grub_main+0x10c0>
    ba9c:	cmp	w0, #0x25
    baa0:	b.ne	ba90 <grub_main+0xfa0>  // b.any
    baa4:	ldrb	w2, [x1, #1]
    baa8:	add	x27, x26, #0x1
    baac:	cmp	w2, #0x2d
    bab0:	b.ne	babc <grub_main+0xfcc>  // b.any
    bab4:	ldrb	w2, [x1, #2]
    bab8:	add	x21, x1, #0x2
    babc:	sub	w0, w2, #0x30
    bac0:	mov	x19, x21
    bac4:	cmp	w0, #0x9
    bac8:	b.hi	bae0 <grub_main+0xff0>  // b.pmore
    bacc:	nop
    bad0:	ldrb	w2, [x19, #1]!
    bad4:	sub	w0, w2, #0x30
    bad8:	cmp	w0, #0x9
    badc:	b.ls	bad0 <grub_main+0xfe0>  // b.plast
    bae0:	cmp	w2, #0x24
    bae4:	add	x20, x19, #0x1
    bae8:	mov	x1, x26
    baec:	b.eq	be8c <grub_main+0x139c>  // b.none
    baf0:	cmp	w2, #0x2d
    baf4:	b.ne	bb04 <grub_main+0x1014>  // b.any
    baf8:	ldrb	w2, [x19, #1]
    bafc:	mov	x19, x20
    bb00:	add	x20, x20, #0x1
    bb04:	sub	w0, w2, #0x30
    bb08:	cmp	w0, #0x9
    bb0c:	b.hi	bb28 <grub_main+0x1038>  // b.pmore
    bb10:	mov	x20, x19
    bb14:	ldrb	w2, [x19, #1]!
    bb18:	sub	w0, w2, #0x30
    bb1c:	cmp	w0, #0x9
    bb20:	b.ls	bb10 <grub_main+0x1020>  // b.plast
    bb24:	add	x20, x20, #0x2
    bb28:	cmp	w2, #0x2e
    bb2c:	b.ne	bedc <grub_main+0x13ec>  // b.any
    bb30:	ldrb	w2, [x19, #1]
    bb34:	sub	w0, w2, #0x30
    bb38:	cmp	w0, #0x9
    bb3c:	b.hi	bf14 <grub_main+0x1424>  // b.pmore
    bb40:	mov	x21, x20
    bb44:	ldrb	w2, [x20, #1]!
    bb48:	sub	w3, w2, #0x30
    bb4c:	cmp	w3, #0x9
    bb50:	b.ls	bb40 <grub_main+0x1050>  // b.plast
    bb54:	add	x21, x21, #0x2
    bb58:	cmp	w2, #0x25
    bb5c:	b.eq	be80 <grub_main+0x1390>  // b.none
    bb60:	cmp	w2, #0x6c
    bb64:	mov	w3, #0x0                   	// #0
    bb68:	mov	w4, #0x3                   	// #3
    bb6c:	b.eq	bdf4 <grub_main+0x1304>  // b.none
    bb70:	ldr	x0, [x25, #264]
    bb74:	cmp	x0, x1
    bb78:	b.ls	bba0 <grub_main+0x10b0>  // b.plast
    bb7c:	cmp	w2, #0x70
    bb80:	b.eq	bd50 <grub_main+0x1260>  // b.none
    bb84:	b.hi	bd24 <grub_main+0x1234>  // b.pmore
    bb88:	cmp	w2, #0x64
    bb8c:	b.eq	bee8 <grub_main+0x13f8>  // b.none
    bb90:	b.hi	bba0 <grub_main+0x10b0>  // b.pmore
    bb94:	and	w2, w2, #0xffffffdf
    bb98:	cmp	w2, #0x43
    bb9c:	b.eq	be54 <grub_main+0x1364>  // b.none
    bba0:	mov	x26, x27
    bba4:	mov	x1, x21
    bba8:	ldrb	w0, [x21], #1
    bbac:	cbnz	w0, ba9c <grub_main+0xfac>
    bbb0:	ldr	x2, [x25, #264]
    bbb4:	cbz	x2, bc0c <grub_main+0x111c>
    bbb8:	ldr	x1, [x25, #256]
    bbbc:	add	x2, x1, x2, lsl #3
    bbc0:	ldr	w0, [x1]
    bbc4:	cmp	w0, #0x3
    bbc8:	b.eq	bdb0 <grub_main+0x12c0>  // b.none
    bbcc:	b.hi	bd64 <grub_main+0x1274>  // b.pmore
    bbd0:	cmp	w0, #0x1
    bbd4:	b.eq	bd74 <grub_main+0x1284>  // b.none
    bbd8:	cmp	w0, #0x2
    bbdc:	b.eq	bd74 <grub_main+0x1284>  // b.none
    bbe0:	cbnz	w0, bc00 <grub_main+0x1110>
    bbe4:	tbnz	w23, #31, be14 <grub_main+0x1324>
    bbe8:	add	x3, x22, #0xb
    bbec:	mov	x0, x22
    bbf0:	and	x22, x3, #0xfffffffffffffff8
    bbf4:	ldrsw	x0, [x0]
    bbf8:	str	x0, [x1]
    bbfc:	nop
    bc00:	add	x1, x1, #0x8
    bc04:	cmp	x2, x1
    bc08:	b.ne	bbc0 <grub_main+0x10d0>  // b.any
    bc0c:	ldp	x19, x20, [sp, #16]
    bc10:	ldp	x21, x22, [sp, #32]
    bc14:	ldp	x23, x24, [sp, #48]
    bc18:	ldp	x25, x26, [sp, #64]
    bc1c:	ldp	x27, x28, [sp, #80]
    bc20:	ldp	x29, x30, [sp], #96
    bc24:	ret
    bc28:	adrp	x1, 0 <_start>
    bc2c:	mov	x2, x25
    bc30:	mov	x3, #0x20                  	// #32
    bc34:	mov	x0, #0x100                 	// #256
    bc38:	ldr	x1, [x1]
    bc3c:	stp	x25, x3, [x25, #256]
    bc40:	str	wzr, [x1]
    bc44:	nop
    bc48:	tst	x2, #0x7
    bc4c:	b.eq	bc64 <grub_main+0x1174>  // b.none
    bc50:	strb	wzr, [x2], #1
    bc54:	subs	x0, x0, #0x1
    bc58:	b.eq	ba84 <grub_main+0xf94>  // b.none
    bc5c:	tst	x2, #0x7
    bc60:	b.ne	bc50 <grub_main+0x1160>  // b.any
    bc64:	cmp	x0, #0x7
    bc68:	b.ls	ba70 <grub_main+0xf80>  // b.plast
    bc6c:	sub	x6, x0, #0x8
    bc70:	ubfx	x1, x2, #3, #1
    bc74:	cmp	x6, #0x2f
    bc78:	lsr	x5, x6, #3
    bc7c:	add	x5, x5, #0x1
    bc80:	b.ls	bf08 <grub_main+0x1418>  // b.plast
    bc84:	cbz	x1, befc <grub_main+0x140c>
    bc88:	mov	x4, x2
    bc8c:	str	xzr, [x4], #8
    bc90:	sub	x7, x5, x1
    bc94:	add	x1, x2, x1, lsl #3
    bc98:	lsr	x3, x7, #1
    bc9c:	add	x3, x1, x3, lsl #4
    bca0:	stp	xzr, xzr, [x1], #16
    bca4:	cmp	x3, x1
    bca8:	b.ne	bca0 <grub_main+0x11b0>  // b.any
    bcac:	and	x1, x7, #0xfffffffffffffffe
    bcb0:	cmp	x1, x7
    bcb4:	add	x3, x4, x1, lsl #3
    bcb8:	sub	x1, x6, x1, lsl #3
    bcbc:	b.eq	bd14 <grub_main+0x1224>  // b.none
    bcc0:	str	xzr, [x3]
    bcc4:	sub	x4, x1, #0x8
    bcc8:	cmp	x4, #0x7
    bccc:	b.ls	bd14 <grub_main+0x1224>  // b.plast
    bcd0:	str	xzr, [x3, #8]
    bcd4:	sub	x4, x1, #0x10
    bcd8:	cmp	x4, #0x7
    bcdc:	b.ls	bd14 <grub_main+0x1224>  // b.plast
    bce0:	str	xzr, [x3, #16]
    bce4:	sub	x4, x1, #0x18
    bce8:	cmp	x4, #0x7
    bcec:	b.ls	bd14 <grub_main+0x1224>  // b.plast
    bcf0:	str	xzr, [x3, #24]
    bcf4:	sub	x4, x1, #0x20
    bcf8:	cmp	x4, #0x7
    bcfc:	b.ls	bd14 <grub_main+0x1224>  // b.plast
    bd00:	str	xzr, [x3, #32]
    bd04:	sub	x1, x1, #0x28
    bd08:	cmp	x1, #0x7
    bd0c:	b.ls	bd14 <grub_main+0x1224>  // b.plast
    bd10:	str	xzr, [x3, #40]
    bd14:	and	x0, x0, #0x7
    bd18:	add	x2, x2, x5, lsl #3
    bd1c:	cbnz	x0, ba70 <grub_main+0xf80>
    bd20:	b	ba84 <grub_main+0xf94>
    bd24:	cmp	w2, #0x75
    bd28:	b.eq	bd34 <grub_main+0x1244>  // b.none
    bd2c:	cmp	w2, #0x78
    bd30:	b.ne	bd48 <grub_main+0x1258>  // b.any
    bd34:	ldr	x0, [x25, #256]
    bd38:	lsl	x1, x1, #3
    bd3c:	mov	x26, x27
    bd40:	str	w4, [x0, x1]
    bd44:	b	bba4 <grub_main+0x10b4>
    bd48:	cmp	w2, #0x73
    bd4c:	b.ne	bba0 <grub_main+0x10b0>  // b.any
    bd50:	ldr	x0, [x25, #256]
    bd54:	lsl	x1, x1, #3
    bd58:	mov	x26, x27
    bd5c:	str	w28, [x0, x1]
    bd60:	b	bba4 <grub_main+0x10b4>
    bd64:	cmp	w0, #0x4
    bd68:	b.eq	bd74 <grub_main+0x1284>  // b.none
    bd6c:	cmp	w0, #0x5
    bd70:	b.ne	bc00 <grub_main+0x1110>  // b.any
    bd74:	tbnz	w23, #31, bd90 <grub_main+0x12a0>
    bd78:	add	x3, x22, #0xf
    bd7c:	mov	x0, x22
    bd80:	and	x22, x3, #0xfffffffffffffff8
    bd84:	ldr	x0, [x0]
    bd88:	str	x0, [x1]
    bd8c:	b	bc00 <grub_main+0x1110>
    bd90:	add	w3, w23, #0x8
    bd94:	cmp	w3, #0x0
    bd98:	b.le	bde8 <grub_main+0x12f8>
    bd9c:	add	x4, x22, #0xf
    bda0:	mov	x0, x22
    bda4:	mov	w23, w3
    bda8:	and	x22, x4, #0xfffffffffffffff8
    bdac:	b	bd84 <grub_main+0x1294>
    bdb0:	tbnz	w23, #31, be34 <grub_main+0x1344>
    bdb4:	add	x3, x22, #0xb
    bdb8:	mov	x0, x22
    bdbc:	and	x22, x3, #0xfffffffffffffff8
    bdc0:	ldr	w0, [x0]
    bdc4:	str	x0, [x1]
    bdc8:	b	bc00 <grub_main+0x1110>
    bdcc:	ldrb	w2, [x4, #1]
    bdd0:	add	x3, x4, #0x2
    bdd4:	cmp	w2, #0x6c
    bdd8:	b.ne	ba20 <grub_main+0xf30>  // b.any
    bddc:	ldrb	w2, [x4, #2]
    bde0:	add	x3, x4, #0x3
    bde4:	b	ba20 <grub_main+0xf30>
    bde8:	add	x0, x24, w23, sxtw
    bdec:	mov	w23, w3
    bdf0:	b	bd84 <grub_main+0x1294>
    bdf4:	ldrb	w2, [x20, #1]
    bdf8:	cmp	w2, #0x6c
    bdfc:	b.ne	bf24 <grub_main+0x1434>  // b.any
    be00:	ldrb	w2, [x20, #2]
    be04:	add	x21, x20, #0x3
    be08:	mov	w3, #0x2                   	// #2
    be0c:	mov	w4, #0x5                   	// #5
    be10:	b	bb70 <grub_main+0x1080>
    be14:	add	w3, w23, #0x8
    be18:	cmp	w3, #0x0
    be1c:	b.le	be68 <grub_main+0x1378>
    be20:	add	x4, x22, #0xb
    be24:	mov	x0, x22
    be28:	mov	w23, w3
    be2c:	and	x22, x4, #0xfffffffffffffff8
    be30:	b	bbf4 <grub_main+0x1104>
    be34:	add	w3, w23, #0x8
    be38:	cmp	w3, #0x0
    be3c:	b.le	be74 <grub_main+0x1384>
    be40:	add	x4, x22, #0xb
    be44:	mov	x0, x22
    be48:	mov	w23, w3
    be4c:	and	x22, x4, #0xfffffffffffffff8
    be50:	b	bdc0 <grub_main+0x12d0>
    be54:	ldr	x0, [x25, #256]
    be58:	lsl	x1, x1, #3
    be5c:	mov	x26, x27
    be60:	str	wzr, [x0, x1]
    be64:	b	bba4 <grub_main+0x10b4>
    be68:	add	x0, x24, w23, sxtw
    be6c:	mov	w23, w3
    be70:	b	bbf4 <grub_main+0x1104>
    be74:	add	x0, x24, w23, sxtw
    be78:	mov	w23, w3
    be7c:	b	bdc0 <grub_main+0x12d0>
    be80:	mov	x27, x26
    be84:	mov	x26, x27
    be88:	b	bba4 <grub_main+0x10b4>
    be8c:	mov	x1, #0x0                   	// #0
    be90:	mov	x0, x21
    be94:	bl	b0f0 <grub_main+0x600>
    be98:	sub	x1, x0, #0x1
    be9c:	add	x3, x19, #0x2
    bea0:	ldrb	w2, [x19, #1]
    bea4:	mov	x19, x20
    bea8:	mov	x20, x3
    beac:	b	baf0 <grub_main+0x1000>
    beb0:	bl	6210 <grub_malloc>
    beb4:	str	x0, [x25, #256]
    beb8:	mov	x2, x0
    bebc:	cbz	x0, bc28 <grub_main+0x1138>
    bec0:	ldr	x0, [x25, #264]
    bec4:	lsl	x0, x0, #3
    bec8:	b	ba64 <grub_main+0xf74>
    becc:	mov	x0, x4
    bed0:	mov	x4, x3
    bed4:	mov	x3, x0
    bed8:	b	ba18 <grub_main+0xf28>
    bedc:	mov	x21, x20
    bee0:	mov	x20, x19
    bee4:	b	bb58 <grub_main+0x1068>
    bee8:	ldr	x0, [x25, #256]
    beec:	lsl	x1, x1, #3
    bef0:	mov	x26, x27
    bef4:	str	w3, [x0, x1]
    bef8:	b	bba4 <grub_main+0x10b4>
    befc:	mov	x6, x0
    bf00:	mov	x4, x2
    bf04:	b	bc90 <grub_main+0x11a0>
    bf08:	mov	x1, x0
    bf0c:	mov	x3, x2
    bf10:	b	bcc0 <grub_main+0x11d0>
    bf14:	add	x21, x20, #0x1
    bf18:	b	bb58 <grub_main+0x1068>
    bf1c:	add	x3, x4, #0x1
    bf20:	b	ba18 <grub_main+0xf28>
    bf24:	add	x21, x20, #0x2
    bf28:	mov	w3, #0x1                   	// #1
    bf2c:	mov	w4, #0x4                   	// #4
    bf30:	b	bb70 <grub_main+0x1080>
    bf34:	nop
	...

000000000000bf40 <grub_memmove>:
    bf40:	cmp	x0, x1
    bf44:	sub	x3, x2, #0x1
    bf48:	b.cs	c00c <grub_memmove+0xcc>  // b.hs, b.nlast
    bf4c:	cbz	x2, c008 <grub_memmove+0xc8>
    bf50:	orr	x5, x0, x1
    bf54:	add	x4, x0, #0x7
    bf58:	sub	x4, x4, x1
    bf5c:	tst	x5, #0x7
    bf60:	ccmp	x4, #0xe, #0x0, eq  // eq = none
    bf64:	ccmp	x3, #0x9, #0x0, hi  // hi = pmore
    bf68:	b.ls	c03c <grub_memmove+0xfc>  // b.plast
    bf6c:	and	x6, x2, #0xfffffffffffffff8
    bf70:	mov	x4, #0x0                   	// #0
    bf74:	nop
    bf78:	ldr	x5, [x1, x4]
    bf7c:	str	x5, [x0, x4]
    bf80:	add	x4, x4, #0x8
    bf84:	cmp	x4, x6
    bf88:	b.ne	bf78 <grub_memmove+0x38>  // b.any
    bf8c:	and	x4, x2, #0xfffffffffffffff8
    bf90:	cmp	x2, x4
    bf94:	sub	x3, x3, x4
    bf98:	add	x2, x0, x4
    bf9c:	add	x5, x1, x4
    bfa0:	b.eq	c008 <grub_memmove+0xc8>  // b.none
    bfa4:	ldrb	w1, [x1, x4]
    bfa8:	strb	w1, [x0, x4]
    bfac:	cbz	x3, c008 <grub_memmove+0xc8>
    bfb0:	ldrb	w1, [x5, #1]
    bfb4:	cmp	x3, #0x1
    bfb8:	strb	w1, [x2, #1]
    bfbc:	b.eq	c008 <grub_memmove+0xc8>  // b.none
    bfc0:	ldrb	w1, [x5, #2]
    bfc4:	cmp	x3, #0x2
    bfc8:	strb	w1, [x2, #2]
    bfcc:	b.eq	c008 <grub_memmove+0xc8>  // b.none
    bfd0:	ldrb	w1, [x5, #3]
    bfd4:	cmp	x3, #0x3
    bfd8:	strb	w1, [x2, #3]
    bfdc:	b.eq	c008 <grub_memmove+0xc8>  // b.none
    bfe0:	ldrb	w1, [x5, #4]
    bfe4:	cmp	x3, #0x4
    bfe8:	strb	w1, [x2, #4]
    bfec:	b.eq	c008 <grub_memmove+0xc8>  // b.none
    bff0:	ldrb	w1, [x5, #5]
    bff4:	cmp	x3, #0x5
    bff8:	strb	w1, [x2, #5]
    bffc:	b.eq	c008 <grub_memmove+0xc8>  // b.none
    c000:	ldrb	w1, [x5, #6]
    c004:	strb	w1, [x2, #6]
    c008:	ret
    c00c:	cbz	x2, c008 <grub_memmove+0xc8>
    c010:	ldrb	w2, [x1, x3]
    c014:	strb	w2, [x0, x3]
    c018:	sub	x3, x3, #0x1
    c01c:	cmn	x3, #0x1
    c020:	b.eq	c008 <grub_memmove+0xc8>  // b.none
    c024:	ldrb	w2, [x1, x3]
    c028:	strb	w2, [x0, x3]
    c02c:	sub	x3, x3, #0x1
    c030:	cmn	x3, #0x1
    c034:	b.ne	c010 <grub_memmove+0xd0>  // b.any
    c038:	b	c008 <grub_memmove+0xc8>
    c03c:	mov	x3, #0x0                   	// #0
    c040:	ldrb	w4, [x1, x3]
    c044:	strb	w4, [x0, x3]
    c048:	add	x3, x3, #0x1
    c04c:	cmp	x2, x3
    c050:	b.ne	c040 <grub_memmove+0x100>  // b.any
    c054:	ret

000000000000c058 <grub_strcpy>:
    c058:	mov	x2, #0x0                   	// #0
    c05c:	nop
    c060:	ldrb	w3, [x1, x2]
    c064:	strb	w3, [x0, x2]
    c068:	add	x2, x2, #0x1
    c06c:	cbnz	w3, c060 <grub_strcpy+0x8>
    c070:	ret
    c074:	nop

000000000000c078 <grub_err_printf>:
    c078:	sub	sp, sp, #0x200
    c07c:	mov	w8, #0xffffffc8            	// #-56
    c080:	add	x9, sp, #0x1c0
    c084:	add	x10, sp, #0x200
    c088:	stp	x29, x30, [sp]
    c08c:	mov	x29, sp
    c090:	stp	x10, x10, [sp, #112]
    c094:	str	x9, [sp, #128]
    c098:	stp	w8, wzr, [sp, #136]
    c09c:	ldp	x10, x11, [sp, #112]
    c0a0:	stp	x19, x20, [sp, #16]
    c0a4:	add	x20, sp, #0xb0
    c0a8:	ldp	x8, x9, [sp, #128]
    c0ac:	stp	x21, x22, [sp, #32]
    c0b0:	mov	x21, x0
    c0b4:	stp	x23, x24, [sp, #48]
    c0b8:	add	x24, x20, #0x100
    c0bc:	stp	x25, x26, [sp, #64]
    c0c0:	add	x25, x20, #0x108
    c0c4:	stp	x10, x11, [sp, #80]
    c0c8:	stp	x8, x9, [sp, #96]
    c0cc:	stp	x10, x11, [sp, #144]
    c0d0:	stp	x8, x9, [sp, #160]
    c0d4:	stp	x1, x2, [sp, #456]
    c0d8:	mov	x1, x20
    c0dc:	add	x2, sp, #0x50
    c0e0:	stp	x3, x4, [sp, #472]
    c0e4:	stp	x5, x6, [sp, #488]
    c0e8:	str	x7, [sp, #504]
    c0ec:	bl	b910 <grub_main+0xe20>
    c0f0:	adrp	x0, 0 <_start>
    c0f4:	mov	x2, x21
    c0f8:	mov	x4, x25
    c0fc:	mov	x3, x24
    c100:	ldr	x22, [x0]
    c104:	mov	x1, #0xff                  	// #255
    c108:	mov	x0, x22
    c10c:	bl	b210 <grub_main+0x720>
    c110:	sxtw	x26, w0
    c114:	mov	x19, x26
    c118:	cmp	x26, #0xff
    c11c:	b.hi	c1ac <grub_err_printf+0x134>  // b.pmore
    c120:	ldr	x0, [sp, #432]
    c124:	mov	x23, x22
    c128:	cmp	x0, x20
    c12c:	b.eq	c178 <grub_err_printf+0x100>  // b.none
    c130:	bl	6260 <grub_free>
    c134:	adrp	x1, 0 <_start>
    c138:	mov	x0, x23
    c13c:	ldr	x1, [x1]
    c140:	ldr	x1, [x1]
    c144:	blr	x1
    c148:	cmp	x23, x22
    c14c:	b.eq	c158 <grub_err_printf+0xe0>  // b.none
    c150:	mov	x0, x23
    c154:	bl	6260 <grub_free>
    c158:	mov	w0, w19
    c15c:	ldp	x29, x30, [sp]
    c160:	ldp	x19, x20, [sp, #16]
    c164:	ldp	x21, x22, [sp, #32]
    c168:	ldp	x23, x24, [sp, #48]
    c16c:	ldp	x25, x26, [sp, #64]
    c170:	add	sp, sp, #0x200
    c174:	ret
    c178:	adrp	x1, 0 <_start>
    c17c:	mov	x0, x22
    c180:	ldr	x1, [x1]
    c184:	ldr	x1, [x1]
    c188:	blr	x1
    c18c:	mov	w0, w19
    c190:	ldp	x29, x30, [sp]
    c194:	ldp	x19, x20, [sp, #16]
    c198:	ldp	x21, x22, [sp, #32]
    c19c:	ldp	x23, x24, [sp, #48]
    c1a0:	ldp	x25, x26, [sp, #64]
    c1a4:	add	sp, sp, #0x200
    c1a8:	ret
    c1ac:	add	x0, x26, #0x1
    c1b0:	bl	6210 <grub_malloc>
    c1b4:	mov	x23, x0
    c1b8:	cbz	x0, c1e4 <grub_err_printf+0x16c>
    c1bc:	mov	x4, x25
    c1c0:	mov	x3, x24
    c1c4:	mov	x2, x21
    c1c8:	mov	x1, x26
    c1cc:	bl	b210 <grub_main+0x720>
    c1d0:	mov	w19, w0
    c1d4:	ldr	x0, [sp, #432]
    c1d8:	cmp	x0, x20
    c1dc:	b.ne	c130 <grub_err_printf+0xb8>  // b.any
    c1e0:	b	c134 <grub_err_printf+0xbc>
    c1e4:	adrp	x0, 0 <_start>
    c1e8:	mov	w1, #0x2e2e                	// #11822
    c1ec:	movk	w1, #0x2e, lsl #16
    c1f0:	str	w1, [x22, #252]
    c1f4:	ldr	x0, [x0]
    c1f8:	str	wzr, [x0]
    c1fc:	b	c120 <grub_err_printf+0xa8>
	...

000000000000c218 <grub_puts_>:
    c218:	stp	x29, x30, [sp, #-48]!
    c21c:	adrp	x1, 0 <_start>
    c220:	mov	x29, sp
    c224:	ldr	x1, [x1]
    c228:	ldr	x1, [x1]
    c22c:	str	x19, [sp, #16]
    c230:	blr	x1
    c234:	adrp	x1, 0 <_start>
    c238:	mov	w2, #0xa                   	// #10
    c23c:	strh	w2, [sp, #40]
    c240:	ldr	x19, [x1]
    c244:	ldr	x1, [x19]
    c248:	blr	x1
    c24c:	ldr	x1, [x19]
    c250:	add	x0, sp, #0x28
    c254:	blr	x1
    c258:	mov	w0, #0x1                   	// #1
    c25c:	ldr	x19, [sp, #16]
    c260:	ldp	x29, x30, [sp], #48
    c264:	ret
	...

000000000000c278 <grub_vprintf>:
    c278:	mov	x3, x1
    c27c:	stp	x29, x30, [sp, #-384]!
    c280:	mov	x29, sp
    c284:	ldp	x4, x5, [x3]
    c288:	stp	x4, x5, [sp, #80]
    c28c:	add	x2, sp, #0x50
    c290:	ldp	x4, x5, [x3, #16]
    c294:	stp	x19, x20, [sp, #16]
    c298:	add	x20, sp, #0x70
    c29c:	mov	x1, x20
    c2a0:	stp	x21, x22, [sp, #32]
    c2a4:	mov	x21, x0
    c2a8:	stp	x23, x24, [sp, #48]
    c2ac:	stp	x25, x26, [sp, #64]
    c2b0:	add	x26, x20, #0x108
    c2b4:	add	x25, x20, #0x100
    c2b8:	stp	x4, x5, [sp, #96]
    c2bc:	bl	b910 <grub_main+0xe20>
    c2c0:	adrp	x0, 0 <_start>
    c2c4:	mov	x2, x21
    c2c8:	mov	x4, x26
    c2cc:	ldr	x22, [x0]
    c2d0:	mov	x3, x25
    c2d4:	mov	x1, #0xff                  	// #255
    c2d8:	mov	x0, x22
    c2dc:	bl	b210 <grub_main+0x720>
    c2e0:	sxtw	x24, w0
    c2e4:	mov	x19, x24
    c2e8:	cmp	x24, #0xff
    c2ec:	b.hi	c374 <grub_vprintf+0xfc>  // b.pmore
    c2f0:	ldr	x0, [sp, #368]
    c2f4:	mov	x23, x22
    c2f8:	cmp	x0, x20
    c2fc:	b.eq	c344 <grub_vprintf+0xcc>  // b.none
    c300:	bl	6260 <grub_free>
    c304:	adrp	x1, 0 <_start>
    c308:	mov	x0, x23
    c30c:	ldr	x1, [x1]
    c310:	ldr	x1, [x1]
    c314:	blr	x1
    c318:	cmp	x23, x22
    c31c:	b.eq	c328 <grub_vprintf+0xb0>  // b.none
    c320:	mov	x0, x23
    c324:	bl	6260 <grub_free>
    c328:	mov	w0, w19
    c32c:	ldp	x19, x20, [sp, #16]
    c330:	ldp	x21, x22, [sp, #32]
    c334:	ldp	x23, x24, [sp, #48]
    c338:	ldp	x25, x26, [sp, #64]
    c33c:	ldp	x29, x30, [sp], #384
    c340:	ret
    c344:	adrp	x1, 0 <_start>
    c348:	mov	x0, x22
    c34c:	ldr	x1, [x1]
    c350:	ldr	x1, [x1]
    c354:	blr	x1
    c358:	mov	w0, w19
    c35c:	ldp	x19, x20, [sp, #16]
    c360:	ldp	x21, x22, [sp, #32]
    c364:	ldp	x23, x24, [sp, #48]
    c368:	ldp	x25, x26, [sp, #64]
    c36c:	ldp	x29, x30, [sp], #384
    c370:	ret
    c374:	add	x0, x24, #0x1
    c378:	bl	6210 <grub_malloc>
    c37c:	mov	x23, x0
    c380:	cbz	x0, c3ac <grub_vprintf+0x134>
    c384:	mov	x4, x26
    c388:	mov	x3, x25
    c38c:	mov	x2, x21
    c390:	mov	x1, x24
    c394:	bl	b210 <grub_main+0x720>
    c398:	mov	w19, w0
    c39c:	ldr	x0, [sp, #368]
    c3a0:	cmp	x0, x20
    c3a4:	b.ne	c300 <grub_vprintf+0x88>  // b.any
    c3a8:	b	c304 <grub_vprintf+0x8c>
    c3ac:	adrp	x0, 0 <_start>
    c3b0:	mov	w1, #0x2e2e                	// #11822
    c3b4:	movk	w1, #0x2e, lsl #16
    c3b8:	str	w1, [x22, #252]
    c3bc:	ldr	x0, [x0]
    c3c0:	str	wzr, [x0]
    c3c4:	b	c2f0 <grub_vprintf+0x78>
	...

000000000000c3e0 <grub_printf_>:
    c3e0:	stp	x29, x30, [sp, #-144]!
    c3e4:	adrp	x9, 0 <_start>
    c3e8:	mov	x29, sp
    c3ec:	stp	x1, x2, [sp, #88]
    c3f0:	add	x8, sp, #0x50
    c3f4:	mov	w2, #0xffffffc8            	// #-56
    c3f8:	ldr	x1, [x9]
    c3fc:	stp	x3, x4, [sp, #104]
    c400:	add	x3, sp, #0x90
    c404:	str	x5, [sp, #120]
    c408:	stp	x3, x3, [sp, #48]
    c40c:	ldr	x1, [x1]
    c410:	stp	x6, x7, [sp, #128]
    c414:	str	x8, [sp, #64]
    c418:	str	w2, [sp, #72]
    c41c:	str	wzr, [sp, #76]
    c420:	blr	x1
    c424:	ldp	x4, x5, [sp, #48]
    c428:	add	x1, sp, #0x10
    c42c:	ldp	x2, x3, [sp, #64]
    c430:	stp	x4, x5, [sp, #16]
    c434:	stp	x2, x3, [sp, #32]
    c438:	bl	c278 <grub_vprintf>
    c43c:	ldp	x29, x30, [sp], #144
    c440:	ret
    c444:	nop
	...

000000000000c450 <grub_memcmp>:
    c450:	cbz	x2, c480 <grub_memcmp+0x30>
    c454:	mov	x3, #0x0                   	// #0
    c458:	b	c464 <grub_memcmp+0x14>
    c45c:	cmp	x3, x2
    c460:	b.eq	c480 <grub_memcmp+0x30>  // b.none
    c464:	ldrb	w4, [x0, x3]
    c468:	ldrb	w5, [x1, x3]
    c46c:	add	x3, x3, #0x1
    c470:	cmp	w4, w5
    c474:	b.eq	c45c <grub_memcmp+0xc>  // b.none
    c478:	sub	w0, w4, w5
    c47c:	ret
    c480:	mov	w0, #0x0                   	// #0
    c484:	ret

000000000000c488 <grub_strcmp>:
    c488:	ldrb	w4, [x0]
    c48c:	mov	x2, #0x1                   	// #1
    c490:	ldrb	w3, [x1], #-1
    c494:	cbnz	w4, c4ac <grub_strcmp+0x24>
    c498:	b	c4bc <grub_strcmp+0x34>
    c49c:	ldrb	w4, [x0, x2]
    c4a0:	add	x2, x2, #0x1
    c4a4:	ldrb	w3, [x1, x2]
    c4a8:	cbz	w4, c4c4 <grub_strcmp+0x3c>
    c4ac:	ldrb	w3, [x1, x2]
    c4b0:	cmp	w3, #0x0
    c4b4:	ccmp	w3, w4, #0x0, ne  // ne = any
    c4b8:	b.eq	c49c <grub_strcmp+0x14>  // b.none
    c4bc:	sub	w0, w4, w3
    c4c0:	ret
    c4c4:	mov	w4, #0x0                   	// #0
    c4c8:	sub	w0, w4, w3
    c4cc:	ret

000000000000c4d0 <grub_strncmp>:
    c4d0:	cbz	x2, c514 <grub_strncmp+0x44>
    c4d4:	ldrb	w5, [x0]
    c4d8:	mov	x3, #0x1                   	// #1
    c4dc:	ldrb	w4, [x1], #-1
    c4e0:	cbnz	w5, c4f8 <grub_strncmp+0x28>
    c4e4:	b	c50c <grub_strncmp+0x3c>
    c4e8:	ldrb	w5, [x0, x3]
    c4ec:	add	x3, x3, #0x1
    c4f0:	ldrb	w4, [x1, x3]
    c4f4:	cbz	w5, c51c <grub_strncmp+0x4c>
    c4f8:	ldrb	w4, [x1, x3]
    c4fc:	cmp	w4, w5
    c500:	ccmp	x2, x3, #0x4, eq  // eq = none
    c504:	cbz	w4, c50c <grub_strncmp+0x3c>
    c508:	b.ne	c4e8 <grub_strncmp+0x18>  // b.any
    c50c:	sub	w0, w5, w4
    c510:	ret
    c514:	mov	w0, #0x0                   	// #0
    c518:	ret
    c51c:	mov	w5, #0x0                   	// #0
    c520:	sub	w0, w5, w4
    c524:	b	c510 <grub_strncmp+0x40>

000000000000c528 <grub_strchr>:
    c528:	ldrb	w2, [x0]
    c52c:	cmp	w2, w1
    c530:	b.eq	c540 <grub_strchr+0x18>  // b.none
    c534:	add	x0, x0, #0x1
    c538:	cbnz	w2, c528 <grub_strchr>
    c53c:	mov	x0, #0x0                   	// #0
    c540:	ret
    c544:	nop

000000000000c548 <grub_strrchr>:
    c548:	mov	x2, x0
    c54c:	mov	x0, #0x0                   	// #0
    c550:	ldrb	w3, [x2]
    c554:	cmp	w1, w3
    c558:	csel	x0, x0, x2, ne  // ne = any
    c55c:	add	x2, x2, #0x1
    c560:	cbnz	w3, c550 <grub_strrchr+0x8>
    c564:	ret

000000000000c568 <grub_strword>:
    c568:	mov	w4, #0x3b                  	// #59
    c56c:	mov	w5, #0x26                  	// #38
    c570:	ldrb	w2, [x0]
    c574:	sub	w3, w2, #0x9
    c578:	cmp	w2, #0xd
    c57c:	and	w3, w3, #0xff
    c580:	b.eq	c6f8 <grub_strword+0x190>  // b.none
    c584:	cmp	w2, #0x20
    c588:	ccmp	w3, #0x1, #0x0, ne  // ne = any
    c58c:	b.ls	c6f8 <grub_strword+0x190>  // b.plast
    c590:	cmp	w2, #0x2c
    c594:	ccmp	w2, w4, #0x4, ne  // ne = any
    c598:	b.eq	c6f8 <grub_strword+0x190>  // b.none
    c59c:	cmp	w2, #0x7c
    c5a0:	ccmp	w2, w5, #0x4, ne  // ne = any
    c5a4:	b.eq	c6f8 <grub_strword+0x190>  // b.none
    c5a8:	mov	w5, #0x3b                  	// #59
    c5ac:	mov	w6, #0x26                  	// #38
    c5b0:	cbz	w2, c6c0 <grub_strword+0x158>
    c5b4:	nop
    c5b8:	mov	x3, x1
    c5bc:	nop
    c5c0:	cmp	w2, #0xa
    c5c4:	ccmp	w2, #0xd, #0x4, ne  // ne = any
    c5c8:	b.ne	c610 <grub_strword+0xa8>  // b.any
    c5cc:	ldrb	w2, [x3]
    c5d0:	cbz	w2, c608 <grub_strword+0xa0>
    c5d4:	cmp	w2, #0xd
    c5d8:	b.eq	c608 <grub_strword+0xa0>  // b.none
    c5dc:	sub	w3, w2, #0x9
    c5e0:	cmp	w2, #0x20
    c5e4:	and	w3, w3, #0xff
    c5e8:	ccmp	w3, #0x1, #0x0, ne  // ne = any
    c5ec:	b.ls	c608 <grub_strword+0xa0>  // b.plast
    c5f0:	cmp	w2, #0x2c
    c5f4:	ccmp	w2, w5, #0x4, ne  // ne = any
    c5f8:	b.eq	c608 <grub_strword+0xa0>  // b.none
    c5fc:	cmp	w2, #0x7c
    c600:	ccmp	w2, w6, #0x4, ne  // ne = any
    c604:	b.ne	c700 <grub_strword+0x198>  // b.any
    c608:	mov	w0, #0x1                   	// #1
    c60c:	ret
    c610:	cmp	w2, #0x20
    c614:	ccmp	w2, #0x9, #0x4, ne  // ne = any
    c618:	b.eq	c5cc <grub_strword+0x64>  // b.none
    c61c:	cmp	w2, #0x2c
    c620:	ccmp	w2, w5, #0x4, ne  // ne = any
    c624:	b.ne	c6d0 <grub_strword+0x168>  // b.any
    c628:	cmp	w2, #0x2c
    c62c:	ccmp	w2, w5, #0x4, ne  // ne = any
    c630:	b.eq	c5cc <grub_strword+0x64>  // b.none
    c634:	cmp	w2, #0x7c
    c638:	ccmp	w2, w6, #0x4, ne  // ne = any
    c63c:	b.eq	c5cc <grub_strword+0x64>  // b.none
    c640:	cbnz	w2, c674 <grub_strword+0x10c>
    c644:	b	c684 <grub_strword+0x11c>
    c648:	cmp	w2, #0x20
    c64c:	ccmp	w3, #0x1, #0x0, ne  // ne = any
    c650:	b.ls	c684 <grub_strword+0x11c>  // b.plast
    c654:	cmp	w2, #0x2c
    c658:	ccmp	w2, w5, #0x4, ne  // ne = any
    c65c:	b.eq	c684 <grub_strword+0x11c>  // b.none
    c660:	cmp	w2, #0x7c
    c664:	ccmp	w2, w6, #0x4, ne  // ne = any
    c668:	b.eq	c684 <grub_strword+0x11c>  // b.none
    c66c:	ldrb	w2, [x0, #1]!
    c670:	cbz	w2, c684 <grub_strword+0x11c>
    c674:	sub	w3, w2, #0x9
    c678:	cmp	w2, #0xd
    c67c:	and	w3, w3, #0xff
    c680:	b.ne	c648 <grub_strword+0xe0>  // b.any
    c684:	ldrb	w2, [x0]
    c688:	sub	w3, w2, #0x9
    c68c:	cmp	w2, #0xd
    c690:	and	w3, w3, #0xff
    c694:	b.eq	c6c8 <grub_strword+0x160>  // b.none
    c698:	cmp	w2, #0x20
    c69c:	ccmp	w3, #0x1, #0x0, ne  // ne = any
    c6a0:	b.ls	c6c8 <grub_strword+0x160>  // b.plast
    c6a4:	cmp	w2, #0x2c
    c6a8:	ccmp	w2, w5, #0x4, ne  // ne = any
    c6ac:	b.eq	c6c8 <grub_strword+0x160>  // b.none
    c6b0:	cmp	w2, #0x7c
    c6b4:	ccmp	w2, w6, #0x4, ne  // ne = any
    c6b8:	b.eq	c6c8 <grub_strword+0x160>  // b.none
    c6bc:	cbnz	w2, c5b8 <grub_strword+0x50>
    c6c0:	mov	w0, #0x0                   	// #0
    c6c4:	ret
    c6c8:	add	x0, x0, #0x1
    c6cc:	b	c684 <grub_strword+0x11c>
    c6d0:	cmp	w2, #0x7c
    c6d4:	ccmp	w2, w6, #0x4, ne  // ne = any
    c6d8:	b.eq	c628 <grub_strword+0xc0>  // b.none
    c6dc:	ldrb	w4, [x3]
    c6e0:	cmp	w4, w2
    c6e4:	b.ne	c628 <grub_strword+0xc0>  // b.any
    c6e8:	ldrb	w2, [x0, #1]!
    c6ec:	add	x3, x3, #0x1
    c6f0:	cbnz	w2, c5c0 <grub_strword+0x58>
    c6f4:	b	c5cc <grub_strword+0x64>
    c6f8:	add	x0, x0, #0x1
    c6fc:	b	c570 <grub_strword+0x8>
    c700:	ldrb	w2, [x0]
    c704:	b	c640 <grub_strword+0xd8>

000000000000c708 <grub_real_dprintf>:
    c708:	stp	x29, x30, [sp, #-144]!
    c70c:	adrp	x9, 0 <_start>
    c710:	mov	x29, sp
    c714:	stp	x21, x22, [sp, #32]
    c718:	mov	x22, x0
    c71c:	mov	w21, w1
    c720:	ldr	x0, [x9]
    c724:	stp	x19, x20, [sp, #16]
    c728:	mov	x19, x2
    c72c:	mov	x20, x3
    c730:	stp	x4, x5, [sp, #112]
    c734:	stp	x6, x7, [sp, #128]
    c738:	bl	96e8 <grub_env_get>
    c73c:	cbz	x0, c7a0 <grub_real_dprintf+0x98>
    c740:	adrp	x1, 0 <_start>
    c744:	mov	x7, x0
    c748:	ldr	x1, [x1]
    c74c:	bl	c568 <grub_strword>
    c750:	cbz	w0, c7b0 <grub_real_dprintf+0xa8>
    c754:	adrp	x0, 0 <_start>
    c758:	mov	w2, w21
    c75c:	mov	x1, x22
    c760:	ldr	x0, [x0]
    c764:	bl	c078 <grub_err_printf>
    c768:	add	x1, sp, #0x90
    c76c:	stp	x1, x1, [sp, #80]
    c770:	add	x0, sp, #0x70
    c774:	mov	w2, #0xffffffe0            	// #-32
    c778:	str	x0, [sp, #96]
    c77c:	stp	w2, wzr, [sp, #104]
    c780:	add	x1, sp, #0x30
    c784:	ldp	x2, x3, [sp, #80]
    c788:	stp	x2, x3, [sp, #48]
    c78c:	mov	x0, x20
    c790:	ldp	x2, x3, [sp, #96]
    c794:	stp	x2, x3, [sp, #64]
    c798:	bl	c278 <grub_vprintf>
    c79c:	bl	e590 <grub_refresh>
    c7a0:	ldp	x19, x20, [sp, #16]
    c7a4:	ldp	x21, x22, [sp, #32]
    c7a8:	ldp	x29, x30, [sp], #144
    c7ac:	ret
    c7b0:	mov	x1, x19
    c7b4:	mov	x0, x7
    c7b8:	bl	c568 <grub_strword>
    c7bc:	cbnz	w0, c754 <grub_real_dprintf+0x4c>
    c7c0:	ldp	x19, x20, [sp, #16]
    c7c4:	ldp	x21, x22, [sp, #32]
    c7c8:	ldp	x29, x30, [sp], #144
    c7cc:	ret
	...

000000000000c7e8 <grub_isspace>:
    c7e8:	cmp	w0, #0xd
    c7ec:	b.eq	c804 <grub_isspace+0x1c>  // b.none
    c7f0:	cmp	w0, #0x20
    c7f4:	sub	w0, w0, #0x9
    c7f8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    c7fc:	cset	w0, ls  // ls = plast
    c800:	ret
    c804:	mov	w0, #0x1                   	// #1
    c808:	ret
    c80c:	nop

000000000000c810 <grub_strtoull>:
    c810:	mov	x5, x0
    c814:	stp	x29, x30, [sp, #-16]!
    c818:	mov	x29, sp
    c81c:	nop
    c820:	ldrb	w3, [x5]
    c824:	sub	w0, w3, #0x9
    c828:	cmp	w3, #0xd
    c82c:	and	w0, w0, #0xff
    c830:	b.eq	c900 <grub_strtoull+0xf0>  // b.none
    c834:	cmp	w3, #0x20
    c838:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    c83c:	b.ls	c900 <grub_strtoull+0xf0>  // b.plast
    c840:	cmp	w3, #0x30
    c844:	b.eq	c974 <grub_strtoull+0x164>  // b.none
    c848:	cmp	w2, #0x0
    c84c:	mov	w0, #0xa                   	// #10
    c850:	csel	w2, w2, w0, ne  // ne = any
    c854:	cbz	w3, c958 <grub_strtoull+0x148>
    c858:	sxtw	x7, w2
    c85c:	mov	w4, #0x0                   	// #0
    c860:	mov	x0, #0x0                   	// #0
    c864:	mov	x10, #0xfffffffe            	// #4294967294
    c868:	sub	w2, w3, #0x41
    c86c:	cmp	w2, #0x19
    c870:	b.ls	c908 <grub_strtoull+0xf8>  // b.plast
    c874:	sub	w3, w3, #0x30
    c878:	sxtw	x8, w3
    c87c:	cmp	x8, #0x30
    c880:	b.hi	c910 <grub_strtoull+0x100>  // b.pmore
    c884:	cmp	x8, #0x9
    c888:	b.hi	c954 <grub_strtoull+0x144>  // b.pmore
    c88c:	cmp	x8, x7
    c890:	b.cs	c954 <grub_strtoull+0x144>  // b.hs, b.nlast
    c894:	mvn	x6, x8
    c898:	mov	w3, #0x40                  	// #64
    c89c:	mov	x4, #0x0                   	// #0
    c8a0:	mov	x2, #0x0                   	// #0
    c8a4:	nop
    c8a8:	lsl	x2, x2, #1
    c8ac:	cmp	x6, #0x0
    c8b0:	orr	x9, x2, #0x1
    c8b4:	lsl	x4, x4, #1
    c8b8:	csel	x2, x9, x2, lt  // lt = tstop
    c8bc:	lsl	x6, x6, #1
    c8c0:	cmp	x7, x2
    c8c4:	b.hi	c8d0 <grub_strtoull+0xc0>  // b.pmore
    c8c8:	orr	x4, x4, #0x1
    c8cc:	sub	x2, x2, x7
    c8d0:	subs	w3, w3, #0x1
    c8d4:	b.ne	c8a8 <grub_strtoull+0x98>  // b.any
    c8d8:	cmp	x4, x0
    c8dc:	b.cc	c938 <grub_strtoull+0x128>  // b.lo, b.ul, b.last
    c8e0:	ldrb	w3, [x5, #1]!
    c8e4:	madd	x0, x7, x0, x8
    c8e8:	mov	w4, #0x1                   	// #1
    c8ec:	cbnz	w3, c868 <grub_strtoull+0x58>
    c8f0:	cbz	x1, c8f8 <grub_strtoull+0xe8>
    c8f4:	str	x5, [x1]
    c8f8:	ldp	x29, x30, [sp], #16
    c8fc:	ret
    c900:	add	x5, x5, #0x1
    c904:	b	c820 <grub_strtoull+0x10>
    c908:	sub	w3, w3, #0x10
    c90c:	sxtw	x8, w3
    c910:	sub	x8, x8, #0x27
    c914:	cmp	x7, x8
    c918:	b.ls	c954 <grub_strtoull+0x144>  // b.plast
    c91c:	mvn	x6, x8
    c920:	cmp	x6, x10
    c924:	ccmp	x7, x10, #0x2, ls  // ls = plast
    c928:	b.hi	c898 <grub_strtoull+0x88>  // b.pmore
    c92c:	udiv	w4, w6, w7
    c930:	cmp	x4, x0
    c934:	b.cs	c8e0 <grub_strtoull+0xd0>  // b.hs, b.nlast
    c938:	adrp	x1, 0 <_start>
    c93c:	mov	w0, #0xb                   	// #11
    c940:	ldr	x1, [x1]
    c944:	bl	9bc8 <grub_error>
    c948:	mov	x0, #0xffffffffffffffff    	// #-1
    c94c:	ldp	x29, x30, [sp], #16
    c950:	ret
    c954:	cbnz	w4, c8f0 <grub_strtoull+0xe0>
    c958:	adrp	x1, 0 <_start>
    c95c:	mov	w0, #0xa                   	// #10
    c960:	ldr	x1, [x1]
    c964:	bl	9bc8 <grub_error>
    c968:	mov	x0, #0x0                   	// #0
    c96c:	ldp	x29, x30, [sp], #16
    c970:	ret
    c974:	ldrb	w0, [x5, #1]
    c978:	cmp	w0, #0x78
    c97c:	b.eq	c9a0 <grub_strtoull+0x190>  // b.none
    c980:	cbnz	w2, c858 <grub_strtoull+0x48>
    c984:	sub	w0, w0, #0x30
    c988:	mov	w2, #0x8                   	// #8
    c98c:	and	w0, w0, #0xff
    c990:	mov	w7, #0xa                   	// #10
    c994:	cmp	w0, w2
    c998:	csel	w2, w2, w7, cc  // cc = lo, ul, last
    c99c:	b	c858 <grub_strtoull+0x48>
    c9a0:	tst	w2, #0xffffffef
    c9a4:	b.ne	c858 <grub_strtoull+0x48>  // b.any
    c9a8:	ldrb	w3, [x5, #2]
    c9ac:	mov	w2, #0x10                  	// #16
    c9b0:	add	x5, x5, #0x2
    c9b4:	b	c854 <grub_strtoull+0x44>
	...

000000000000c9c8 <grub_strtoul>:
    c9c8:	b	c810 <grub_strtoull>
    c9cc:	nop

000000000000c9d0 <grub_strdup>:
    c9d0:	stp	x29, x30, [sp, #-48]!
    c9d4:	mov	x29, sp
    c9d8:	stp	x19, x20, [sp, #16]
    c9dc:	mov	x20, x0
    c9e0:	str	x21, [sp, #32]
    c9e4:	ldrb	w0, [x0]
    c9e8:	cbz	w0, cb2c <grub_strdup+0x15c>
    c9ec:	mov	x1, x20
    c9f0:	ldrb	w2, [x1, #1]!
    c9f4:	cbnz	w2, c9f0 <grub_strdup+0x20>
    c9f8:	sub	x19, x1, x20
    c9fc:	add	x21, x19, #0x1
    ca00:	mov	x0, x21
    ca04:	bl	6210 <grub_malloc>
    ca08:	cbz	x0, cae0 <grub_strdup+0x110>
    ca0c:	cmp	x20, x0
    ca10:	b.ls	caf0 <grub_strdup+0x120>  // b.plast
    ca14:	cbz	x21, cae0 <grub_strdup+0x110>
    ca18:	add	x2, x20, #0x7
    ca1c:	orr	x1, x20, x0
    ca20:	sub	x2, x2, x0
    ca24:	and	x1, x1, #0x7
    ca28:	cmp	x2, #0xe
    ca2c:	ccmp	x19, #0x9, #0x0, hi  // hi = pmore
    ca30:	ccmp	x1, #0x0, #0x0, hi  // hi = pmore
    ca34:	b.ne	cb38 <grub_strdup+0x168>  // b.any
    ca38:	sub	x2, x19, #0x7
    ca3c:	add	x4, x19, #0x1
    ca40:	mov	x1, #0x0                   	// #0
    ca44:	lsr	x2, x2, #3
    ca48:	add	x2, x2, #0x1
    ca4c:	nop
    ca50:	ldr	x3, [x20, x1, lsl #3]
    ca54:	str	x3, [x0, x1, lsl #3]
    ca58:	add	x1, x1, #0x1
    ca5c:	cmp	x2, x1
    ca60:	b.hi	ca50 <grub_strdup+0x80>  // b.pmore
    ca64:	lsl	x2, x2, #3
    ca68:	cmp	x4, x2
    ca6c:	sub	x1, x19, x2
    ca70:	add	x4, x20, x2
    ca74:	add	x3, x0, x2
    ca78:	b.eq	cae0 <grub_strdup+0x110>  // b.none
    ca7c:	ldrb	w5, [x20, x2]
    ca80:	strb	w5, [x0, x2]
    ca84:	cbz	x1, cae0 <grub_strdup+0x110>
    ca88:	ldrb	w2, [x4, #1]
    ca8c:	cmp	x1, #0x1
    ca90:	strb	w2, [x3, #1]
    ca94:	b.eq	cae0 <grub_strdup+0x110>  // b.none
    ca98:	ldrb	w2, [x4, #2]
    ca9c:	cmp	x1, #0x2
    caa0:	strb	w2, [x3, #2]
    caa4:	b.eq	cae0 <grub_strdup+0x110>  // b.none
    caa8:	ldrb	w2, [x4, #3]
    caac:	cmp	x1, #0x3
    cab0:	strb	w2, [x3, #3]
    cab4:	b.eq	cae0 <grub_strdup+0x110>  // b.none
    cab8:	ldrb	w2, [x4, #4]
    cabc:	cmp	x1, #0x4
    cac0:	strb	w2, [x3, #4]
    cac4:	b.eq	cae0 <grub_strdup+0x110>  // b.none
    cac8:	ldrb	w2, [x4, #5]
    cacc:	cmp	x1, #0x5
    cad0:	strb	w2, [x3, #5]
    cad4:	b.eq	cae0 <grub_strdup+0x110>  // b.none
    cad8:	ldrb	w1, [x4, #6]
    cadc:	strb	w1, [x3, #6]
    cae0:	ldp	x19, x20, [sp, #16]
    cae4:	ldr	x21, [sp, #32]
    cae8:	ldp	x29, x30, [sp], #48
    caec:	ret
    caf0:	cbz	x21, cae0 <grub_strdup+0x110>
    caf4:	sub	x2, x21, x19
    caf8:	mov	x1, x19
    cafc:	sub	x2, x2, #0x1
    cb00:	add	x20, x20, x2
    cb04:	add	x2, x0, x2
    cb08:	ldrb	w3, [x20, x1]
    cb0c:	strb	w3, [x2, x1]
    cb10:	sub	x1, x1, #0x1
    cb14:	cmn	x1, #0x1
    cb18:	b.ne	cb08 <grub_strdup+0x138>  // b.any
    cb1c:	ldp	x19, x20, [sp, #16]
    cb20:	ldr	x21, [sp, #32]
    cb24:	ldp	x29, x30, [sp], #48
    cb28:	ret
    cb2c:	mov	x19, #0x0                   	// #0
    cb30:	mov	x21, #0x1                   	// #1
    cb34:	b	ca00 <grub_strdup+0x30>
    cb38:	mov	x1, #0x0                   	// #0
    cb3c:	nop
    cb40:	ldrb	w3, [x20, x1]
    cb44:	cmp	x19, x1
    cb48:	strb	w3, [x0, x1]
    cb4c:	add	x1, x1, #0x1
    cb50:	b.ne	cb40 <grub_strdup+0x170>  // b.any
    cb54:	b	cae0 <grub_strdup+0x110>

000000000000cb58 <grub_strndup>:
    cb58:	stp	x29, x30, [sp, #-32]!
    cb5c:	mov	x29, sp
    cb60:	stp	x19, x20, [sp, #16]
    cb64:	mov	x20, x0
    cb68:	ldrb	w0, [x0]
    cb6c:	cbz	w0, cc9c <grub_strndup+0x144>
    cb70:	mov	x2, x20
    cb74:	nop
    cb78:	ldrb	w3, [x2, #1]!
    cb7c:	cbnz	w3, cb78 <grub_strndup+0x20>
    cb80:	sub	x2, x2, x20
    cb84:	cmp	x2, x1
    cb88:	csel	x19, x2, x1, ls  // ls = plast
    cb8c:	add	x0, x19, #0x1
    cb90:	bl	6210 <grub_malloc>
    cb94:	cbz	x0, cc6c <grub_strndup+0x114>
    cb98:	cmp	x20, x0
    cb9c:	add	x5, x0, x19
    cba0:	sub	x1, x19, #0x1
    cba4:	b.ls	cc78 <grub_strndup+0x120>  // b.plast
    cba8:	cbz	x19, cc68 <grub_strndup+0x110>
    cbac:	add	x3, x20, #0x7
    cbb0:	orr	x2, x0, x20
    cbb4:	sub	x3, x3, x0
    cbb8:	and	x2, x2, #0x7
    cbbc:	cmp	x3, #0xe
    cbc0:	ccmp	x1, #0x9, #0x0, hi  // hi = pmore
    cbc4:	ccmp	x2, #0x0, #0x0, hi  // hi = pmore
    cbc8:	b.ne	cca8 <grub_strndup+0x150>  // b.any
    cbcc:	and	x4, x19, #0xfffffffffffffff8
    cbd0:	mov	x2, #0x0                   	// #0
    cbd4:	nop
    cbd8:	ldr	x3, [x20, x2]
    cbdc:	str	x3, [x0, x2]
    cbe0:	add	x2, x2, #0x8
    cbe4:	cmp	x2, x4
    cbe8:	b.ne	cbd8 <grub_strndup+0x80>  // b.any
    cbec:	and	x2, x19, #0xfffffffffffffff8
    cbf0:	sub	x1, x1, x2
    cbf4:	cmp	x19, x2
    cbf8:	add	x4, x20, x2
    cbfc:	add	x3, x0, x2
    cc00:	b.eq	cc68 <grub_strndup+0x110>  // b.none
    cc04:	ldrb	w6, [x20, x2]
    cc08:	strb	w6, [x0, x2]
    cc0c:	cbz	x1, cc68 <grub_strndup+0x110>
    cc10:	ldrb	w2, [x4, #1]
    cc14:	cmp	x1, #0x1
    cc18:	strb	w2, [x3, #1]
    cc1c:	b.eq	cc68 <grub_strndup+0x110>  // b.none
    cc20:	ldrb	w2, [x4, #2]
    cc24:	cmp	x1, #0x2
    cc28:	strb	w2, [x3, #2]
    cc2c:	b.eq	cc68 <grub_strndup+0x110>  // b.none
    cc30:	ldrb	w2, [x4, #3]
    cc34:	cmp	x1, #0x3
    cc38:	strb	w2, [x3, #3]
    cc3c:	b.eq	cc68 <grub_strndup+0x110>  // b.none
    cc40:	ldrb	w2, [x4, #4]
    cc44:	cmp	x1, #0x4
    cc48:	strb	w2, [x3, #4]
    cc4c:	b.eq	cc68 <grub_strndup+0x110>  // b.none
    cc50:	ldrb	w2, [x4, #5]
    cc54:	cmp	x1, #0x5
    cc58:	strb	w2, [x3, #5]
    cc5c:	b.eq	cc68 <grub_strndup+0x110>  // b.none
    cc60:	ldrb	w1, [x4, #6]
    cc64:	strb	w1, [x3, #6]
    cc68:	strb	wzr, [x5]
    cc6c:	ldp	x19, x20, [sp, #16]
    cc70:	ldp	x29, x30, [sp], #32
    cc74:	ret
    cc78:	cbz	x19, cc68 <grub_strndup+0x110>
    cc7c:	nop
    cc80:	ldrb	w2, [x20, x1]
    cc84:	strb	w2, [x0, x1]
    cc88:	sub	x1, x1, #0x1
    cc8c:	cmn	x1, #0x1
    cc90:	b.ne	cc80 <grub_strndup+0x128>  // b.any
    cc94:	strb	wzr, [x5]
    cc98:	b	cc6c <grub_strndup+0x114>
    cc9c:	mov	x19, #0x0                   	// #0
    cca0:	mov	x0, #0x1                   	// #1
    cca4:	b	cb90 <grub_strndup+0x38>
    cca8:	mov	x1, #0x0                   	// #0
    ccac:	nop
    ccb0:	ldrb	w2, [x20, x1]
    ccb4:	strb	w2, [x0, x1]
    ccb8:	add	x1, x1, #0x1
    ccbc:	cmp	x19, x1
    ccc0:	b.ne	ccb0 <grub_strndup+0x158>  // b.any
    ccc4:	strb	wzr, [x5]
    ccc8:	b	cc6c <grub_strndup+0x114>
    cccc:	nop

000000000000ccd0 <grub_memset>:
    ccd0:	cmp	x2, #0x17
    ccd4:	and	w1, w1, #0xff
    ccd8:	b.ls	cd30 <grub_memset+0x60>  // b.plast
    ccdc:	lsl	w6, w1, #24
    cce0:	ubfiz	x5, x1, #8, #8
    cce4:	ubfiz	x7, x1, #16, #8
    cce8:	and	x4, x1, #0xff
    ccec:	orr	x3, x6, x1, lsl #32
    ccf0:	orr	x5, x5, x7
    ccf4:	orr	x5, x5, x3
    ccf8:	mov	x3, x4
    ccfc:	orr	x6, x4, x1, lsl #48
    cd00:	lsl	x4, x4, #40
    cd04:	orr	x4, x4, x3, lsl #56
    cd08:	orr	x5, x5, x6
    cd0c:	mov	x3, x0
    cd10:	orr	x5, x5, x4
    cd14:	nop
    cd18:	tst	x3, #0x7
    cd1c:	b.eq	cd50 <grub_memset+0x80>  // b.none
    cd20:	strb	w1, [x3], #1
    cd24:	subs	x2, x2, #0x1
    cd28:	b.ne	cd18 <grub_memset+0x48>  // b.any
    cd2c:	ret
    cd30:	mov	x3, x0
    cd34:	cbz	x2, cd2c <grub_memset+0x5c>
    cd38:	add	x2, x3, x2
    cd3c:	nop
    cd40:	strb	w1, [x3], #1
    cd44:	cmp	x3, x2
    cd48:	b.ne	cd40 <grub_memset+0x70>  // b.any
    cd4c:	ret
    cd50:	cmp	x2, #0x7
    cd54:	b.ls	cd38 <grub_memset+0x68>  // b.plast
    cd58:	sub	x7, x2, #0x8
    cd5c:	ubfx	x4, x3, #3, #1
    cd60:	cmp	x7, #0x2f
    cd64:	lsr	x8, x7, #3
    cd68:	add	x8, x8, #0x1
    cd6c:	b.ls	ce20 <grub_memset+0x150>  // b.plast
    cd70:	mov	x10, x3
    cd74:	cbz	x4, ce18 <grub_memset+0x148>
    cd78:	str	x5, [x10], #8
    cd7c:	sub	x9, x8, x4
    cd80:	add	x4, x3, x4, lsl #3
    cd84:	lsr	x6, x9, #1
    cd88:	add	x6, x4, x6, lsl #4
    cd8c:	nop
    cd90:	stp	x5, x5, [x4]
    cd94:	add	x4, x4, #0x10
    cd98:	cmp	x4, x6
    cd9c:	b.ne	cd90 <grub_memset+0xc0>  // b.any
    cda0:	and	x4, x9, #0xfffffffffffffffe
    cda4:	cmp	x9, x4
    cda8:	sub	x7, x7, x4, lsl #3
    cdac:	add	x4, x10, x4, lsl #3
    cdb0:	b.eq	ce08 <grub_memset+0x138>  // b.none
    cdb4:	str	x5, [x4]
    cdb8:	sub	x6, x7, #0x8
    cdbc:	cmp	x6, #0x7
    cdc0:	b.ls	ce08 <grub_memset+0x138>  // b.plast
    cdc4:	str	x5, [x4, #8]
    cdc8:	sub	x6, x7, #0x10
    cdcc:	cmp	x6, #0x7
    cdd0:	b.ls	ce08 <grub_memset+0x138>  // b.plast
    cdd4:	str	x5, [x4, #16]
    cdd8:	sub	x6, x7, #0x18
    cddc:	cmp	x6, #0x7
    cde0:	b.ls	ce08 <grub_memset+0x138>  // b.plast
    cde4:	str	x5, [x4, #24]
    cde8:	sub	x6, x7, #0x20
    cdec:	cmp	x6, #0x7
    cdf0:	b.ls	ce08 <grub_memset+0x138>  // b.plast
    cdf4:	str	x5, [x4, #32]
    cdf8:	sub	x7, x7, #0x28
    cdfc:	cmp	x7, #0x7
    ce00:	b.ls	ce08 <grub_memset+0x138>  // b.plast
    ce04:	str	x5, [x4, #40]
    ce08:	add	x3, x3, x8, lsl #3
    ce0c:	and	x2, x2, #0x7
    ce10:	cbnz	x2, cd38 <grub_memset+0x68>
    ce14:	b	cd2c <grub_memset+0x5c>
    ce18:	mov	x7, x2
    ce1c:	b	cd7c <grub_memset+0xac>
    ce20:	mov	x4, x3
    ce24:	mov	x7, x2
    ce28:	b	cdb4 <grub_memset+0xe4>
    ce2c:	nop

000000000000ce30 <grub_strlen>:
    ce30:	ldrb	w1, [x0]
    ce34:	cbz	w1, ce50 <grub_strlen+0x20>
    ce38:	mov	x1, x0
    ce3c:	nop
    ce40:	ldrb	w2, [x1, #1]!
    ce44:	cbnz	w2, ce40 <grub_strlen+0x10>
    ce48:	sub	x0, x1, x0
    ce4c:	ret
    ce50:	mov	x0, #0x0                   	// #0
    ce54:	ret

000000000000ce58 <grub_divmod64>:
    ce58:	mov	x4, x0
    ce5c:	mov	x0, #0xfffffffe            	// #4294967294
    ce60:	cmp	x4, x0
    ce64:	ccmp	x1, x0, #0x2, ls  // ls = plast
    ce68:	b.ls	ceb4 <grub_divmod64+0x5c>  // b.plast
    ce6c:	mov	w5, #0x40                  	// #64
    ce70:	mov	x0, #0x0                   	// #0
    ce74:	mov	x3, #0x0                   	// #0
    ce78:	lsl	x3, x3, #1
    ce7c:	cmp	x4, #0x0
    ce80:	orr	x6, x3, #0x1
    ce84:	lsl	x0, x0, #1
    ce88:	csel	x3, x6, x3, lt  // lt = tstop
    ce8c:	lsl	x4, x4, #1
    ce90:	cmp	x1, x3
    ce94:	b.hi	cea0 <grub_divmod64+0x48>  // b.pmore
    ce98:	orr	x0, x0, #0x1
    ce9c:	sub	x3, x3, x1
    cea0:	subs	w5, w5, #0x1
    cea4:	b.ne	ce78 <grub_divmod64+0x20>  // b.any
    cea8:	cbz	x2, ceb0 <grub_divmod64+0x58>
    ceac:	str	x3, [x2]
    ceb0:	ret
    ceb4:	mov	w0, w4
    ceb8:	cbz	x2, cec8 <grub_divmod64+0x70>
    cebc:	udiv	w3, w4, w1
    cec0:	msub	w4, w3, w1, w4
    cec4:	str	x4, [x2]
    cec8:	udiv	w0, w0, w1
    cecc:	ret

000000000000ced0 <grub_vsnprintf>:
    ced0:	cbnz	x1, cedc <grub_vsnprintf+0xc>
    ced4:	mov	w0, #0x0                   	// #0
    ced8:	ret
    cedc:	stp	x29, x30, [sp, #-352]!
    cee0:	mov	x29, sp
    cee4:	ldp	x6, x7, [x3]
    cee8:	stp	x19, x20, [sp, #16]
    ceec:	mov	x19, x2
    cef0:	ldp	x4, x5, [x3, #16]
    cef4:	stp	x21, x22, [sp, #32]
    cef8:	add	x22, sp, #0x50
    cefc:	mov	x21, x0
    cf00:	sub	x20, x1, #0x1
    cf04:	mov	x0, x19
    cf08:	mov	x1, x22
    cf0c:	add	x2, sp, #0x30
    cf10:	stp	x6, x7, [sp, #48]
    cf14:	stp	x4, x5, [sp, #64]
    cf18:	bl	b910 <grub_main+0xe20>
    cf1c:	mov	x2, x19
    cf20:	mov	x1, x20
    cf24:	mov	x0, x21
    cf28:	add	x4, x22, #0x108
    cf2c:	add	x3, x22, #0x100
    cf30:	bl	b210 <grub_main+0x720>
    cf34:	sxtw	x19, w0
    cf38:	ldr	x1, [sp, #336]
    cf3c:	cmp	x1, x22
    cf40:	b.eq	cf4c <grub_vsnprintf+0x7c>  // b.none
    cf44:	mov	x0, x1
    cf48:	bl	6260 <grub_free>
    cf4c:	cmp	x20, x19
    cf50:	csel	x0, x20, x19, ls  // ls = plast
    cf54:	ldp	x19, x20, [sp, #16]
    cf58:	ldp	x21, x22, [sp, #32]
    cf5c:	ldp	x29, x30, [sp], #352
    cf60:	ret
    cf64:	nop

000000000000cf68 <grub_snprintf>:
    cf68:	stp	x29, x30, [sp, #-464]!
    cf6c:	mov	w8, #0xffffffd8            	// #-40
    cf70:	mov	x29, sp
    cf74:	add	x9, sp, #0x1a0
    cf78:	add	x10, sp, #0x1d0
    cf7c:	stp	x10, x10, [sp, #80]
    cf80:	str	x9, [sp, #96]
    cf84:	stp	w8, wzr, [sp, #104]
    cf88:	ldp	x10, x11, [sp, #80]
    cf8c:	stp	x10, x11, [sp, #112]
    cf90:	ldp	x8, x9, [sp, #96]
    cf94:	stp	x8, x9, [sp, #128]
    cf98:	stp	x3, x4, [sp, #424]
    cf9c:	stp	x5, x6, [sp, #440]
    cfa0:	str	x7, [sp, #456]
    cfa4:	cbnz	x1, cfb4 <grub_snprintf+0x4c>
    cfa8:	mov	w0, #0x0                   	// #0
    cfac:	ldp	x29, x30, [sp], #464
    cfb0:	ret
    cfb4:	stp	x19, x20, [sp, #16]
    cfb8:	mov	x19, x2
    cfbc:	sub	x20, x1, #0x1
    cfc0:	stp	x21, x22, [sp, #32]
    cfc4:	add	x22, sp, #0x90
    cfc8:	mov	x21, x0
    cfcc:	mov	x1, x22
    cfd0:	mov	x0, x19
    cfd4:	add	x2, sp, #0x30
    cfd8:	stp	x10, x11, [sp, #48]
    cfdc:	stp	x8, x9, [sp, #64]
    cfe0:	bl	b910 <grub_main+0xe20>
    cfe4:	mov	x2, x19
    cfe8:	mov	x1, x20
    cfec:	mov	x0, x21
    cff0:	add	x4, x22, #0x108
    cff4:	add	x3, x22, #0x100
    cff8:	bl	b210 <grub_main+0x720>
    cffc:	sxtw	x19, w0
    d000:	ldr	x1, [sp, #400]
    d004:	cmp	x1, x22
    d008:	b.eq	d014 <grub_snprintf+0xac>  // b.none
    d00c:	mov	x0, x1
    d010:	bl	6260 <grub_free>
    d014:	cmp	x20, x19
    d018:	csel	x0, x20, x19, ls  // ls = plast
    d01c:	ldp	x19, x20, [sp, #16]
    d020:	ldp	x21, x22, [sp, #32]
    d024:	ldp	x29, x30, [sp], #464
    d028:	ret
    d02c:	nop

000000000000d030 <grub_xvasprintf>:
    d030:	mov	x2, x1
    d034:	stp	x29, x30, [sp, #-368]!
    d038:	mov	x29, sp
    d03c:	ldp	x6, x7, [x2]
    d040:	stp	x23, x24, [sp, #48]
    d044:	add	x24, sp, #0x60
    d048:	ldp	x4, x5, [x2, #16]
    d04c:	add	x23, x24, #0x108
    d050:	mov	x1, x24
    d054:	add	x2, sp, #0x40
    d058:	stp	x19, x20, [sp, #16]
    d05c:	mov	x20, #0xff                  	// #255
    d060:	stp	x21, x22, [sp, #32]
    d064:	add	x22, x24, #0x100
    d068:	mov	x21, x0
    d06c:	stp	x6, x7, [sp, #64]
    d070:	stp	x4, x5, [sp, #80]
    d074:	bl	b910 <grub_main+0xe20>
    d078:	b	d098 <grub_xvasprintf+0x68>
    d07c:	bl	b210 <grub_main+0x720>
    d080:	sxtw	x1, w0
    d084:	mov	x0, x19
    d088:	cmp	x20, w1, sxtw
    d08c:	b.cs	d0b8 <grub_xvasprintf+0x88>  // b.hs, b.nlast
    d090:	mov	x20, x1
    d094:	bl	6260 <grub_free>
    d098:	add	x0, x20, #0x1
    d09c:	bl	6210 <grub_malloc>
    d0a0:	mov	x1, x20
    d0a4:	mov	x4, x23
    d0a8:	mov	x3, x22
    d0ac:	mov	x2, x21
    d0b0:	mov	x19, x0
    d0b4:	cbnz	x0, d07c <grub_xvasprintf+0x4c>
    d0b8:	ldr	x0, [sp, #352]
    d0bc:	cmp	x0, x24
    d0c0:	b.eq	d0c8 <grub_xvasprintf+0x98>  // b.none
    d0c4:	bl	6260 <grub_free>
    d0c8:	mov	x0, x19
    d0cc:	ldp	x19, x20, [sp, #16]
    d0d0:	ldp	x21, x22, [sp, #32]
    d0d4:	ldp	x23, x24, [sp, #48]
    d0d8:	ldp	x29, x30, [sp], #368
    d0dc:	ret

000000000000d0e0 <grub_xasprintf>:
    d0e0:	stp	x29, x30, [sp, #-496]!
    d0e4:	mov	w8, #0xffffffc8            	// #-56
    d0e8:	mov	x29, sp
    d0ec:	add	x9, sp, #0x1b0
    d0f0:	add	x10, sp, #0x1f0
    d0f4:	stp	x10, x10, [sp, #96]
    d0f8:	str	x9, [sp, #112]
    d0fc:	stp	w8, wzr, [sp, #120]
    d100:	ldp	x10, x11, [sp, #96]
    d104:	stp	x21, x22, [sp, #32]
    d108:	add	x21, sp, #0xa0
    d10c:	ldp	x8, x9, [sp, #112]
    d110:	mov	x22, x0
    d114:	stp	x19, x20, [sp, #16]
    d118:	mov	x20, #0xff                  	// #255
    d11c:	stp	x23, x24, [sp, #48]
    d120:	add	x24, x21, #0x108
    d124:	add	x23, x21, #0x100
    d128:	stp	x10, x11, [sp, #64]
    d12c:	stp	x8, x9, [sp, #80]
    d130:	stp	x10, x11, [sp, #128]
    d134:	stp	x8, x9, [sp, #144]
    d138:	stp	x1, x2, [sp, #440]
    d13c:	mov	x1, x21
    d140:	add	x2, sp, #0x40
    d144:	stp	x3, x4, [sp, #456]
    d148:	stp	x5, x6, [sp, #472]
    d14c:	str	x7, [sp, #488]
    d150:	bl	b910 <grub_main+0xe20>
    d154:	b	d174 <grub_xasprintf+0x94>
    d158:	bl	b210 <grub_main+0x720>
    d15c:	mov	w1, w0
    d160:	mov	x0, x19
    d164:	cmp	x20, w1, sxtw
    d168:	sxtw	x20, w1
    d16c:	b.cs	d194 <grub_xasprintf+0xb4>  // b.hs, b.nlast
    d170:	bl	6260 <grub_free>
    d174:	add	x0, x20, #0x1
    d178:	bl	6210 <grub_malloc>
    d17c:	mov	x1, x20
    d180:	mov	x4, x24
    d184:	mov	x3, x23
    d188:	mov	x2, x22
    d18c:	mov	x19, x0
    d190:	cbnz	x0, d158 <grub_xasprintf+0x78>
    d194:	ldr	x0, [sp, #416]
    d198:	cmp	x0, x21
    d19c:	b.eq	d1a4 <grub_xasprintf+0xc4>  // b.none
    d1a0:	bl	6260 <grub_free>
    d1a4:	mov	x0, x19
    d1a8:	ldp	x19, x20, [sp, #16]
    d1ac:	ldp	x21, x22, [sp, #32]
    d1b0:	ldp	x23, x24, [sp, #48]
    d1b4:	ldp	x29, x30, [sp], #496
    d1b8:	ret
    d1bc:	nop

000000000000d1c0 <grub_fatal>:
    d1c0:	stp	x29, x30, [sp, #-144]!
    d1c4:	adrp	x9, 0 <_start>
    d1c8:	mov	x29, sp
    d1cc:	stp	x1, x2, [sp, #88]
    d1d0:	add	x8, sp, #0x50
    d1d4:	mov	w2, #0xffffffc8            	// #-56
    d1d8:	ldr	x1, [x9]
    d1dc:	stp	x3, x4, [sp, #104]
    d1e0:	add	x3, sp, #0x90
    d1e4:	str	x5, [sp, #120]
    d1e8:	stp	x3, x3, [sp, #48]
    d1ec:	ldr	x1, [x1]
    d1f0:	stp	x6, x7, [sp, #128]
    d1f4:	str	x8, [sp, #64]
    d1f8:	str	w2, [sp, #72]
    d1fc:	str	wzr, [sp, #76]
    d200:	blr	x1
    d204:	ldp	x2, x3, [sp, #48]
    d208:	stp	x2, x3, [sp, #16]
    d20c:	add	x1, sp, #0x10
    d210:	ldp	x2, x3, [sp, #64]
    d214:	stp	x2, x3, [sp, #32]
    d218:	bl	c278 <grub_vprintf>
    d21c:	bl	e590 <grub_refresh>
    d220:	adrp	x0, 0 <_start>
    d224:	ldr	x0, [x0]
    d228:	bl	c078 <grub_err_printf>
    d22c:	adrp	x0, 0 <_start>
    d230:	ldr	x0, [x0]
    d234:	ldr	x0, [x0]
    d238:	cbz	x0, d24c <grub_fatal+0x8c>
    d23c:	adrp	x0, 0 <_start>
    d240:	ldr	x0, [x0]
    d244:	bl	c078 <grub_err_printf>
    d248:	bl	e4d0 <grub_getkey>
    d24c:	bl	2290 <grub_exit>
	...
    d270:	stp	x29, x30, [sp, #-48]!
    d274:	mov	x29, sp
    d278:	str	x21, [sp, #32]
    d27c:	mov	x21, x0
    d280:	ldr	x0, [x2]
    d284:	cbz	x0, d2d8 <grub_fatal+0x118>
    d288:	stp	x19, x20, [sp, #16]
    d28c:	mov	x19, x2
    d290:	mov	w1, #0xa                   	// #10
    d294:	bl	c528 <grub_strchr>
    d298:	mov	x20, x0
    d29c:	ldr	x0, [x19]
    d2a0:	cbz	x20, d2cc <grub_fatal+0x10c>
    d2a4:	sub	x1, x20, x0
    d2a8:	add	x20, x20, #0x1
    d2ac:	bl	cb58 <grub_strndup>
    d2b0:	str	x0, [x21]
    d2b4:	str	x20, [x19]
    d2b8:	mov	w0, #0x0                   	// #0
    d2bc:	ldp	x19, x20, [sp, #16]
    d2c0:	ldr	x21, [sp, #32]
    d2c4:	ldp	x29, x30, [sp], #48
    d2c8:	ret
    d2cc:	bl	c9d0 <grub_strdup>
    d2d0:	str	x0, [x21]
    d2d4:	b	d2b4 <grub_fatal+0xf4>
    d2d8:	str	xzr, [x21]
    d2dc:	mov	w0, #0x0                   	// #0
    d2e0:	ldr	x21, [sp, #32]
    d2e4:	ldp	x29, x30, [sp], #48
    d2e8:	ret
    d2ec:	nop

000000000000d2f0 <grub_parser_cmdline_state>:
    d2f0:	stp	x29, x30, [sp, #-64]!
    d2f4:	adrp	x3, 0 <_start>
    d2f8:	mov	x29, sp
    d2fc:	stp	x19, x20, [sp, #16]
    d300:	mov	w20, w0
    d304:	mov	w0, #0x1                   	// #1
    d308:	ldr	x19, [x3]
    d30c:	stp	x21, x22, [sp, #32]
    d310:	and	w21, w1, #0xff
    d314:	str	w20, [sp, #52]
    d318:	mov	x22, x2
    d31c:	ldr	w1, [x19]
    d320:	str	w0, [sp, #60]
    d324:	cbz	w1, d378 <grub_parser_cmdline_state+0x88>
    d328:	and	w0, w21, #0xffffffdf
    d32c:	cmp	w21, #0x5f
    d330:	sub	w2, w21, #0x30
    d334:	sub	w0, w0, #0x41
    d338:	ccmp	w2, #0x9, #0x0, ne  // ne = any
    d33c:	and	w0, w0, #0xff
    d340:	b.hi	d3c0 <grub_parser_cmdline_state+0xd0>  // b.pmore
    d344:	cmp	w0, #0x19
    d348:	b.ls	d394 <grub_parser_cmdline_state+0xa4>  // b.plast
    d34c:	nop
    d350:	cmp	w20, w1
    d354:	b.ne	d370 <grub_parser_cmdline_state+0x80>  // b.any
    d358:	ldrb	w0, [x19, #8]
    d35c:	cmp	w21, w0
    d360:	b.eq	d400 <grub_parser_cmdline_state+0x110>  // b.none
    d364:	bl	c7e8 <grub_isspace>
    d368:	ldrb	w0, [x19, #8]
    d36c:	cbz	w0, d3f8 <grub_parser_cmdline_state+0x108>
    d370:	ldr	w1, [x19, #16]!
    d374:	cbnz	w1, d350 <grub_parser_cmdline_state+0x60>
    d378:	add	x19, sp, #0x30
    d37c:	strb	w21, [x22]
    d380:	ldp	x21, x22, [sp, #32]
    d384:	ldr	w0, [x19, #4]
    d388:	ldp	x19, x20, [sp, #16]
    d38c:	ldp	x29, x30, [sp], #64
    d390:	ret
    d394:	cmp	w20, w1
    d398:	b.ne	d3b4 <grub_parser_cmdline_state+0xc4>  // b.any
    d39c:	ldrb	w0, [x19, #8]
    d3a0:	cmp	w21, w0
    d3a4:	b.eq	d400 <grub_parser_cmdline_state+0x110>  // b.none
    d3a8:	bl	c7e8 <grub_isspace>
    d3ac:	ldrb	w0, [x19, #8]
    d3b0:	cbz	w0, d3f8 <grub_parser_cmdline_state+0x108>
    d3b4:	ldr	w1, [x19, #16]!
    d3b8:	cbnz	w1, d394 <grub_parser_cmdline_state+0xa4>
    d3bc:	b	d378 <grub_parser_cmdline_state+0x88>
    d3c0:	cmp	w0, #0x19
    d3c4:	b.ls	d424 <grub_parser_cmdline_state+0x134>  // b.plast
    d3c8:	b	d3dc <grub_parser_cmdline_state+0xec>
    d3cc:	ldrb	w0, [x19, #8]
    d3d0:	cbz	w0, d3f8 <grub_parser_cmdline_state+0x108>
    d3d4:	ldr	w1, [x19, #16]!
    d3d8:	cbz	w1, d378 <grub_parser_cmdline_state+0x88>
    d3dc:	cmp	w20, w1
    d3e0:	b.ne	d3d4 <grub_parser_cmdline_state+0xe4>  // b.any
    d3e4:	ldrb	w0, [x19, #8]
    d3e8:	cmp	w21, w0
    d3ec:	b.eq	d400 <grub_parser_cmdline_state+0x110>  // b.none
    d3f0:	bl	c7e8 <grub_isspace>
    d3f4:	cbz	w0, d3cc <grub_parser_cmdline_state+0xdc>
    d3f8:	ldr	w0, [x19]
    d3fc:	cbz	w0, d378 <grub_parser_cmdline_state+0x88>
    d400:	ldr	w0, [x19, #12]
    d404:	cmp	w0, #0x0
    d408:	csel	w21, w21, wzr, ne  // ne = any
    d40c:	strb	w21, [x22]
    d410:	ldr	w0, [x19, #4]
    d414:	ldp	x19, x20, [sp, #16]
    d418:	ldp	x21, x22, [sp, #32]
    d41c:	ldp	x29, x30, [sp], #64
    d420:	ret
    d424:	cmp	w20, w1
    d428:	b.ne	d444 <grub_parser_cmdline_state+0x154>  // b.any
    d42c:	ldrb	w0, [x19, #8]
    d430:	cmp	w0, w21
    d434:	b.eq	d400 <grub_parser_cmdline_state+0x110>  // b.none
    d438:	bl	c7e8 <grub_isspace>
    d43c:	ldrb	w0, [x19, #8]
    d440:	cbz	w0, d3f8 <grub_parser_cmdline_state+0x108>
    d444:	ldr	w1, [x19, #16]!
    d448:	cbnz	w1, d424 <grub_parser_cmdline_state+0x134>
    d44c:	b	d378 <grub_parser_cmdline_state+0x88>
	...

000000000000d458 <grub_parser_split_cmdline>:
    d458:	sub	sp, sp, #0x540
    d45c:	stp	x29, x30, [sp]
    d460:	mov	x29, sp
    d464:	stp	x21, x22, [sp, #32]
    d468:	add	x21, sp, #0x140
    d46c:	mov	x22, x4
    d470:	stp	x19, x20, [sp, #16]
    d474:	mov	x20, x3
    d478:	mov	w19, #0x1                   	// #1
    d47c:	stp	x23, x24, [sp, #48]
    d480:	mov	x23, x1
    d484:	mov	x24, x2
    d488:	stp	x25, x26, [sp, #64]
    d48c:	add	x25, sp, #0x78
    d490:	str	x27, [sp, #80]
    d494:	mov	x27, x21
    d498:	str	wzr, [x3]
    d49c:	str	x0, [sp, #112]
    d4a0:	cbz	x0, d4ac <grub_parser_split_cmdline+0x54>
    d4a4:	ldrb	w1, [x0]
    d4a8:	cbnz	w1, d5e8 <grub_parser_split_cmdline+0x190>
    d4ac:	cbz	x23, d70c <grub_parser_split_cmdline+0x2b4>
    d4b0:	mov	x2, x24
    d4b4:	add	x0, sp, #0x70
    d4b8:	mov	w1, #0x1                   	// #1
    d4bc:	blr	x23
    d4c0:	ldr	x0, [sp, #112]
    d4c4:	cbz	x0, d70c <grub_parser_split_cmdline+0x2b4>
    d4c8:	ldrb	w1, [x0]
    d4cc:	cbnz	w1, d5e8 <grub_parser_split_cmdline+0x190>
    d4d0:	cmp	w19, #0x1
    d4d4:	b.eq	d514 <grub_parser_split_cmdline+0xbc>  // b.none
    d4d8:	sub	w2, w19, #0x9
    d4dc:	sub	w1, w19, #0x6
    d4e0:	cmp	w2, #0x1
    d4e4:	ccmp	w1, #0x1, #0x0, hi  // hi = pmore
    d4e8:	b.hi	d4a0 <grub_parser_split_cmdline+0x48>  // b.pmore
    d4ec:	add	x0, sp, #0x78
    d4f0:	strb	wzr, [x25]
    d4f4:	bl	96e8 <grub_env_get>
    d4f8:	cbz	x0, d514 <grub_parser_split_cmdline+0xbc>
    d4fc:	ldrb	w1, [x0]
    d500:	cbz	w1, d514 <grub_parser_split_cmdline+0xbc>
    d504:	nop
    d508:	strb	w1, [x27], #1
    d50c:	ldrb	w1, [x0, #1]!
    d510:	cbnz	w1, d508 <grub_parser_split_cmdline+0xb0>
    d514:	cmp	x27, x21
    d518:	mov	x23, #0x0                   	// #0
    d51c:	b.eq	d52c <grub_parser_split_cmdline+0xd4>  // b.none
    d520:	ldurb	w0, [x27, #-1]
    d524:	cbnz	w0, d6c4 <grub_parser_split_cmdline+0x26c>
    d528:	sub	x23, x27, x21
    d52c:	mov	x0, x23
    d530:	bl	6210 <grub_malloc>
    d534:	mov	x19, x0
    d538:	cbz	x0, d6e0 <grub_parser_split_cmdline+0x288>
    d53c:	mov	x2, x23
    d540:	mov	x1, x21
    d544:	bl	bf40 <grub_memmove>
    d548:	ldr	w0, [x20]
    d54c:	add	w0, w0, #0x1
    d550:	sbfiz	x0, x0, #3, #32
    d554:	bl	6210 <grub_malloc>
    d558:	str	x0, [x22]
    d55c:	cbz	x0, d6d8 <grub_parser_split_cmdline+0x280>
    d560:	ldr	w3, [x20]
    d564:	mov	x2, #0x0                   	// #0
    d568:	cmp	w3, #0x0
    d56c:	b.le	d598 <grub_parser_split_cmdline+0x140>
    d570:	str	x19, [x0, x2, lsl #3]
    d574:	ldrb	w1, [x19]
    d578:	cbz	w1, d588 <grub_parser_split_cmdline+0x130>
    d57c:	nop
    d580:	ldrb	w1, [x19, #1]!
    d584:	cbnz	w1, d580 <grub_parser_split_cmdline+0x128>
    d588:	add	x2, x2, #0x1
    d58c:	add	x19, x19, #0x1
    d590:	cmp	w3, w2
    d594:	b.gt	d570 <grub_parser_split_cmdline+0x118>
    d598:	mov	w0, #0x0                   	// #0
    d59c:	ldp	x29, x30, [sp]
    d5a0:	ldp	x19, x20, [sp, #16]
    d5a4:	ldp	x21, x22, [sp, #32]
    d5a8:	ldp	x23, x24, [sp, #48]
    d5ac:	ldp	x25, x26, [sp, #64]
    d5b0:	ldr	x27, [sp, #80]
    d5b4:	add	sp, sp, #0x540
    d5b8:	ret
    d5bc:	cmp	w1, #0x1
    d5c0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    d5c4:	b.hi	d650 <grub_parser_split_cmdline+0x1f8>  // b.pmore
    d5c8:	ldrb	w0, [sp, #111]
    d5cc:	cbz	w0, d5d4 <grub_parser_split_cmdline+0x17c>
    d5d0:	strb	w0, [x25], #1
    d5d4:	ldr	x1, [sp, #112]
    d5d8:	add	x0, x1, #0x1
    d5dc:	str	x0, [sp, #112]
    d5e0:	ldrb	w1, [x1, #1]
    d5e4:	cbz	w1, d4d0 <grub_parser_split_cmdline+0x78>
    d5e8:	mov	w0, w19
    d5ec:	add	x2, sp, #0x6f
    d5f0:	bl	d2f0 <grub_parser_cmdline_state>
    d5f4:	mov	w26, w19
    d5f8:	sub	w1, w19, #0x6
    d5fc:	sub	w5, w19, #0x9
    d600:	cmp	w1, #0x1
    d604:	mov	w19, w0
    d608:	sub	w1, w0, #0x6
    d60c:	ccmp	w5, #0x1, #0x0, hi  // hi = pmore
    d610:	sub	w0, w0, #0x9
    d614:	b.ls	d5bc <grub_parser_split_cmdline+0x164>  // b.plast
    d618:	cmp	w1, #0x1
    d61c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    d620:	b.ls	d5c8 <grub_parser_split_cmdline+0x170>  // b.plast
    d624:	cmp	w19, #0x1
    d628:	ldrb	w0, [sp, #111]
    d62c:	ccmp	w26, #0x2, #0x4, eq  // eq = none
    d630:	b.ne	d640 <grub_parser_split_cmdline+0x1e8>  // b.any
    d634:	cbz	w0, d5d4 <grub_parser_split_cmdline+0x17c>
    d638:	strb	w0, [x27], #1
    d63c:	b	d5d4 <grub_parser_split_cmdline+0x17c>
    d640:	bl	c7e8 <grub_isspace>
    d644:	cbnz	w0, d68c <grub_parser_split_cmdline+0x234>
    d648:	ldrb	w0, [sp, #111]
    d64c:	b	d634 <grub_parser_split_cmdline+0x1dc>
    d650:	add	x0, sp, #0x78
    d654:	strb	wzr, [x25]
    d658:	bl	96e8 <grub_env_get>
    d65c:	cbz	x0, d674 <grub_parser_split_cmdline+0x21c>
    d660:	ldrb	w5, [x0]
    d664:	cbz	w5, d674 <grub_parser_split_cmdline+0x21c>
    d668:	strb	w5, [x27], #1
    d66c:	ldrb	w5, [x0, #1]!
    d670:	cbnz	w5, d668 <grub_parser_split_cmdline+0x210>
    d674:	cmp	w19, #0x1
    d678:	ldrb	w0, [sp, #111]
    d67c:	add	x25, sp, #0x78
    d680:	ccmp	w26, #0x2, #0x4, eq  // eq = none
    d684:	b.eq	d634 <grub_parser_split_cmdline+0x1dc>  // b.none
    d688:	b	d640 <grub_parser_split_cmdline+0x1e8>
    d68c:	cmp	x27, x21
    d690:	b.eq	d6ac <grub_parser_split_cmdline+0x254>  // b.none
    d694:	ldurb	w0, [x27, #-1]
    d698:	cbz	w0, d6ac <grub_parser_split_cmdline+0x254>
    d69c:	ldr	w0, [x20]
    d6a0:	strb	wzr, [x27], #1
    d6a4:	add	w0, w0, #0x1
    d6a8:	str	w0, [x20]
    d6ac:	ldr	x0, [sp, #112]
    d6b0:	add	x1, x0, #0x1
    d6b4:	str	x1, [sp, #112]
    d6b8:	ldrb	w1, [x0, #1]
    d6bc:	cbnz	w1, d5e8 <grub_parser_split_cmdline+0x190>
    d6c0:	b	d514 <grub_parser_split_cmdline+0xbc>
    d6c4:	ldr	w0, [x20]
    d6c8:	strb	wzr, [x27], #1
    d6cc:	add	w0, w0, #0x1
    d6d0:	str	w0, [x20]
    d6d4:	b	d528 <grub_parser_split_cmdline+0xd0>
    d6d8:	mov	x0, x19
    d6dc:	bl	6260 <grub_free>
    d6e0:	adrp	x0, 0 <_start>
    d6e4:	ldp	x29, x30, [sp]
    d6e8:	ldr	x0, [x0]
    d6ec:	ldp	x19, x20, [sp, #16]
    d6f0:	ldr	w0, [x0]
    d6f4:	ldp	x21, x22, [sp, #32]
    d6f8:	ldp	x23, x24, [sp, #48]
    d6fc:	ldp	x25, x26, [sp, #64]
    d700:	ldr	x27, [sp, #80]
    d704:	add	sp, sp, #0x540
    d708:	ret
    d70c:	sub	w19, w19, #0x6
    d710:	cmp	w19, #0x1
    d714:	b.ls	d4ec <grub_parser_split_cmdline+0x94>  // b.plast
    d718:	b	d514 <grub_parser_split_cmdline+0xbc>
    d71c:	nop
	...

000000000000d728 <grub_parser_execute>:
    d728:	stp	x29, x30, [sp, #-64]!
    d72c:	mov	x29, sp
    d730:	str	x0, [sp, #56]
    d734:	cbz	x0, d7c8 <grub_parser_execute+0xa0>
    d738:	adrp	x1, 0 <_start>
    d73c:	stp	x19, x20, [sp, #16]
    d740:	str	x21, [sp, #32]
    d744:	ldr	x21, [x1]
    d748:	b	d780 <grub_parser_execute+0x58>
    d74c:	sub	x1, x19, x0
    d750:	bl	cb58 <grub_strndup>
    d754:	add	x2, sp, #0x38
    d758:	mov	x1, x21
    d75c:	mov	x20, x0
    d760:	add	x19, x19, #0x1
    d764:	str	x19, [sp, #56]
    d768:	bl	de98 <grub_rescue_parse_line>
    d76c:	mov	x0, x20
    d770:	bl	6260 <grub_free>
    d774:	bl	9db8 <grub_print_error>
    d778:	ldr	x0, [sp, #56]
    d77c:	cbz	x0, d7c0 <grub_parser_execute+0x98>
    d780:	mov	w1, #0xa                   	// #10
    d784:	bl	c528 <grub_strchr>
    d788:	mov	x19, x0
    d78c:	ldr	x0, [sp, #56]
    d790:	cbnz	x19, d74c <grub_parser_execute+0x24>
    d794:	bl	c9d0 <grub_strdup>
    d798:	mov	x19, x0
    d79c:	add	x2, sp, #0x38
    d7a0:	mov	x1, x21
    d7a4:	str	xzr, [sp, #56]
    d7a8:	bl	de98 <grub_rescue_parse_line>
    d7ac:	mov	x0, x19
    d7b0:	bl	6260 <grub_free>
    d7b4:	bl	9db8 <grub_print_error>
    d7b8:	ldr	x0, [sp, #56]
    d7bc:	cbnz	x0, d780 <grub_parser_execute+0x58>
    d7c0:	ldp	x19, x20, [sp, #16]
    d7c4:	ldr	x21, [sp, #32]
    d7c8:	adrp	x0, 0 <_start>
    d7cc:	ldr	x0, [x0]
    d7d0:	ldr	w0, [x0]
    d7d4:	ldp	x29, x30, [sp], #64
    d7d8:	ret
    d7dc:	nop
	...

000000000000d7f0 <grub_partition_probe>:
    d7f0:	stp	x29, x30, [sp, #-144]!
    d7f4:	mov	x29, sp
    d7f8:	stp	x21, x22, [sp, #32]
    d7fc:	ldrb	w3, [x1]
    d800:	str	x1, [sp, #120]
    d804:	ldr	x22, [x0, #40]
    d808:	cbz	w3, d9f4 <grub_partition_probe+0x204>
    d80c:	stp	x19, x20, [sp, #16]
    d810:	mov	x19, x0
    d814:	adrp	x0, 0 <_start>
    d818:	mov	x21, x1
    d81c:	mov	x20, x22
    d820:	ldr	x0, [x0]
    d824:	stp	x23, x24, [sp, #48]
    d828:	adrp	x24, 0 <_start>
    d82c:	adrp	x23, 0 <_start>
    d830:	stp	x25, x26, [sp, #64]
    d834:	stp	x27, x28, [sp, #80]
    d838:	str	x0, [sp, #104]
    d83c:	nop
    d840:	mov	x26, x21
    d844:	b	d858 <grub_partition_probe+0x68>
    d848:	add	x26, x26, #0x1
    d84c:	str	x26, [sp, #120]
    d850:	ldrb	w3, [x26]
    d854:	cbz	w3, d86c <grub_partition_probe+0x7c>
    d858:	and	w3, w3, #0xffffffdf
    d85c:	sub	w3, w3, #0x41
    d860:	and	w3, w3, #0xff
    d864:	cmp	w3, #0x19
    d868:	b.ls	d848 <grub_partition_probe+0x58>  // b.plast
    d86c:	add	x1, sp, #0x78
    d870:	mov	x0, x26
    d874:	mov	w2, #0x0                   	// #0
    d878:	bl	c9c8 <grub_strtoul>
    d87c:	ldr	x1, [sp, #104]
    d880:	sub	w27, w0, #0x1
    d884:	ldr	x28, [x1]
    d888:	cbz	x28, d8f0 <grub_partition_probe+0x100>
    d88c:	subs	x26, x26, x21
    d890:	b.eq	d980 <grub_partition_probe+0x190>  // b.none
    d894:	ldr	x0, [x28, #16]
    d898:	mov	x2, x26
    d89c:	mov	x1, x21
    d8a0:	bl	c4d0 <grub_strncmp>
    d8a4:	mov	w1, w0
    d8a8:	add	x2, sp, #0x80
    d8ac:	mov	x0, x19
    d8b0:	cbnz	w1, d974 <grub_partition_probe+0x184>
    d8b4:	ldr	x1, [x28, #16]
    d8b8:	ldrb	w1, [x1, x26]
    d8bc:	cbnz	w1, d974 <grub_partition_probe+0x184>
    d8c0:	ldr	x1, [x24]
    d8c4:	str	w27, [sp, #128]
    d8c8:	ldr	x3, [x28, #24]
    d8cc:	str	x20, [x19, #40]
    d8d0:	str	xzr, [sp, #136]
    d8d4:	blr	x3
    d8d8:	ldr	x25, [x23]
    d8dc:	ldr	w0, [x25]
    d8e0:	cbnz	w0, d958 <grub_partition_probe+0x168>
    d8e4:	ldr	x0, [sp, #136]
    d8e8:	str	x22, [x19, #40]
    d8ec:	cbnz	x0, d928 <grub_partition_probe+0x138>
    d8f0:	cbz	x20, d908 <grub_partition_probe+0x118>
    d8f4:	mov	x0, x20
    d8f8:	ldr	x20, [x20, #40]
    d8fc:	bl	6260 <grub_free>
    d900:	cbnz	x20, d8f4 <grub_partition_probe+0x104>
    d904:	nop
    d908:	ldp	x19, x20, [sp, #16]
    d90c:	mov	x0, #0x0                   	// #0
    d910:	ldp	x23, x24, [sp, #48]
    d914:	ldp	x25, x26, [sp, #64]
    d918:	ldp	x27, x28, [sp, #80]
    d91c:	ldp	x21, x22, [sp, #32]
    d920:	ldp	x29, x30, [sp], #144
    d924:	ret
    d928:	ldr	x1, [sp, #120]
    d92c:	str	x20, [x0, #40]
    d930:	cbz	x1, d9d8 <grub_partition_probe+0x1e8>
    d934:	ldrb	w2, [x1]
    d938:	cmp	w2, #0x2c
    d93c:	b.ne	d9d8 <grub_partition_probe+0x1e8>  // b.any
    d940:	add	x21, x1, #0x1
    d944:	str	x21, [sp, #120]
    d948:	ldrb	w3, [x1, #1]
    d94c:	cbz	w3, d9d8 <grub_partition_probe+0x1e8>
    d950:	mov	x20, x0
    d954:	b	d840 <grub_partition_probe+0x50>
    d958:	ldr	x0, [sp, #136]
    d95c:	bl	6260 <grub_free>
    d960:	str	x22, [x19, #40]
    d964:	ldr	w0, [x25]
    d968:	cmp	w0, #0x13
    d96c:	b.ne	d8f0 <grub_partition_probe+0x100>  // b.any
    d970:	str	wzr, [x25]
    d974:	ldr	x28, [x28]
    d978:	cbnz	x28, d894 <grub_partition_probe+0xa4>
    d97c:	b	d8f0 <grub_partition_probe+0x100>
    d980:	ldr	x21, [x24]
    d984:	ldr	x25, [x23]
    d988:	str	w27, [sp, #128]
    d98c:	ldr	x4, [x28, #24]
    d990:	str	x20, [x19, #40]
    d994:	str	xzr, [sp, #136]
    d998:	add	x2, sp, #0x80
    d99c:	mov	x1, x21
    d9a0:	mov	x0, x19
    d9a4:	blr	x4
    d9a8:	ldr	w0, [x25]
    d9ac:	cbz	w0, d8e4 <grub_partition_probe+0xf4>
    d9b0:	ldr	x0, [sp, #136]
    d9b4:	bl	6260 <grub_free>
    d9b8:	str	x22, [x19, #40]
    d9bc:	ldr	w0, [x25]
    d9c0:	cmp	w0, #0x13
    d9c4:	b.ne	d8f0 <grub_partition_probe+0x100>  // b.any
    d9c8:	ldr	x28, [x28]
    d9cc:	str	wzr, [x25]
    d9d0:	cbnz	x28, d988 <grub_partition_probe+0x198>
    d9d4:	b	d8f0 <grub_partition_probe+0x100>
    d9d8:	ldp	x19, x20, [sp, #16]
    d9dc:	ldp	x21, x22, [sp, #32]
    d9e0:	ldp	x23, x24, [sp, #48]
    d9e4:	ldp	x25, x26, [sp, #64]
    d9e8:	ldp	x27, x28, [sp, #80]
    d9ec:	ldp	x29, x30, [sp], #144
    d9f0:	ret
    d9f4:	mov	x0, x22
    d9f8:	b	d91c <grub_partition_probe+0x12c>
    d9fc:	nop
	...

000000000000da18 <grub_partition_iterate>:
    da18:	stp	x29, x30, [sp, #-80]!
    da1c:	adrp	x3, 0 <_start>
    da20:	mov	x29, sp
    da24:	ldr	x3, [x3]
    da28:	stp	x19, x20, [sp, #16]
    da2c:	str	wzr, [sp, #56]
    da30:	ldr	x19, [x3]
    da34:	stp	x1, x2, [sp, #64]
    da38:	cbz	x19, da94 <grub_partition_iterate+0x7c>
    da3c:	mov	x20, x0
    da40:	adrp	x0, 0 <_start>
    da44:	stp	x21, x22, [sp, #32]
    da48:	adrp	x22, 0 <_start>
    da4c:	ldr	x21, [x0]
    da50:	b	da5c <grub_partition_iterate+0x44>
    da54:	ldr	x19, [x19]
    da58:	cbz	x19, da84 <grub_partition_iterate+0x6c>
    da5c:	ldr	x3, [x19, #24]
    da60:	add	x2, sp, #0x38
    da64:	mov	x1, x21
    da68:	mov	x0, x20
    da6c:	blr	x3
    da70:	cbz	w0, da7c <grub_partition_iterate+0x64>
    da74:	ldr	x0, [x22]
    da78:	str	wzr, [x0]
    da7c:	ldr	w0, [sp, #56]
    da80:	cbz	w0, da54 <grub_partition_iterate+0x3c>
    da84:	ldp	x21, x22, [sp, #32]
    da88:	ldp	x19, x20, [sp, #16]
    da8c:	ldp	x29, x30, [sp], #80
    da90:	ret
    da94:	mov	w0, #0x0                   	// #0
    da98:	b	da88 <grub_partition_iterate+0x70>
    da9c:	nop
	...

000000000000dab8 <grub_partition_get_name>:
    dab8:	stp	x29, x30, [sp, #-112]!
    dabc:	mov	x29, sp
    dac0:	stp	x23, x24, [sp, #48]
    dac4:	cbz	x0, dbbc <grub_partition_get_name+0x104>
    dac8:	stp	x19, x20, [sp, #16]
    dacc:	mov	x20, x0
    dad0:	mov	x19, x0
    dad4:	stp	x25, x26, [sp, #64]
    dad8:	mov	x25, #0x0                   	// #0
    dadc:	nop
    dae0:	ldr	x0, [x19, #48]
    dae4:	ldr	x0, [x0, #16]
    dae8:	bl	ce30 <grub_strlen>
    daec:	add	x0, x0, #0x1c
    daf0:	ldr	x19, [x19, #40]
    daf4:	add	x25, x25, x0
    daf8:	cbnz	x19, dae0 <grub_partition_get_name+0x28>
    dafc:	add	x0, x25, #0x1
    db00:	bl	6210 <grub_malloc>
    db04:	mov	x23, x0
    db08:	cbz	x0, dbd0 <grub_partition_get_name+0x118>
    db0c:	adrp	x0, 0 <_start>
    db10:	add	x24, x23, x25
    db14:	stp	x21, x22, [sp, #32]
    db18:	mov	x26, x24
    db1c:	mov	w21, #0x2c                  	// #44
    db20:	ldr	x22, [x0]
    db24:	strb	wzr, [x23, x25]
    db28:	ldr	w3, [x20]
    db2c:	mov	x2, x22
    db30:	mov	x1, #0x1b                  	// #27
    db34:	add	x0, sp, #0x50
    db38:	add	w3, w3, #0x1
    db3c:	bl	cf68 <grub_snprintf>
    db40:	add	x0, sp, #0x50
    db44:	bl	ce30 <grub_strlen>
    db48:	sub	x19, x26, x0
    db4c:	mov	x2, x0
    db50:	add	x1, sp, #0x50
    db54:	mov	x0, x19
    db58:	bl	bf40 <grub_memmove>
    db5c:	ldr	x0, [x20, #48]
    db60:	ldr	x0, [x0, #16]
    db64:	bl	ce30 <grub_strlen>
    db68:	sub	x19, x19, x0
    db6c:	ldr	x1, [x20, #48]
    db70:	mov	x2, x0
    db74:	mov	x0, x19
    db78:	sub	x26, x19, #0x1
    db7c:	ldr	x1, [x1, #16]
    db80:	bl	bf40 <grub_memmove>
    db84:	sturb	w21, [x19, #-1]
    db88:	ldr	x20, [x20, #40]
    db8c:	cbnz	x20, db28 <grub_partition_get_name+0x70>
    db90:	sub	x2, x24, x26
    db94:	mov	x1, x19
    db98:	mov	x0, x23
    db9c:	bl	bf40 <grub_memmove>
    dba0:	ldp	x19, x20, [sp, #16]
    dba4:	ldp	x21, x22, [sp, #32]
    dba8:	ldp	x25, x26, [sp, #64]
    dbac:	mov	x0, x23
    dbb0:	ldp	x23, x24, [sp, #48]
    dbb4:	ldp	x29, x30, [sp], #112
    dbb8:	ret
    dbbc:	adrp	x0, 0 <_start>
    dbc0:	ldr	x0, [x0]
    dbc4:	bl	c9d0 <grub_strdup>
    dbc8:	mov	x23, x0
    dbcc:	b	dbac <grub_partition_get_name+0xf4>
    dbd0:	ldp	x19, x20, [sp, #16]
    dbd4:	ldp	x25, x26, [sp, #64]
    dbd8:	b	dbac <grub_partition_get_name+0xf4>
    dbdc:	nop
	...
    dbf0:	stp	x29, x30, [sp, #-48]!
    dbf4:	mov	x29, sp
    dbf8:	stp	x19, x20, [sp, #16]
    dbfc:	mov	x19, x1
    dc00:	ldr	w1, [x2]
    dc04:	stp	x21, x22, [sp, #32]
    dc08:	mov	x21, x0
    dc0c:	ldr	w0, [x19]
    dc10:	mov	w22, #0x0                   	// #0
    dc14:	cmp	w1, w0
    dc18:	b.eq	dc30 <grub_partition_get_name+0x178>  // b.none
    dc1c:	mov	w0, w22
    dc20:	ldp	x19, x20, [sp, #16]
    dc24:	ldp	x21, x22, [sp, #32]
    dc28:	ldp	x29, x30, [sp], #48
    dc2c:	ret
    dc30:	ldr	x0, [x21, #40]
    dc34:	mov	x20, x2
    dc38:	cbz	x0, dc50 <grub_partition_get_name+0x198>
    dc3c:	ldp	x1, x3, [x19, #8]
    dc40:	ldr	x2, [x0, #16]
    dc44:	add	x1, x1, x3
    dc48:	cmp	x1, x2
    dc4c:	b.hi	dc84 <grub_partition_get_name+0x1cc>  // b.pmore
    dc50:	mov	x0, #0x40                  	// #64
    dc54:	bl	6210 <grub_malloc>
    dc58:	str	x0, [x20, #8]
    dc5c:	mov	w22, #0x1                   	// #1
    dc60:	cbz	x0, dc1c <grub_partition_get_name+0x164>
    dc64:	mov	x1, x19
    dc68:	mov	x2, #0x40                  	// #64
    dc6c:	bl	bf40 <grub_memmove>
    dc70:	mov	w0, w22
    dc74:	ldp	x19, x20, [sp, #16]
    dc78:	ldp	x21, x22, [sp, #32]
    dc7c:	ldp	x29, x30, [sp], #48
    dc80:	ret
    dc84:	bl	dab8 <grub_partition_get_name>
    dc88:	mov	x7, x0
    dc8c:	ldr	x4, [x19, #48]
    dc90:	adrp	x6, 0 <_start>
    dc94:	adrp	x3, 0 <_start>
    dc98:	adrp	x2, 0 <_start>
    dc9c:	ldr	w5, [x19]
    dca0:	mov	x19, x0
    dca4:	ldr	x3, [x3]
    dca8:	add	w5, w5, #0x1
    dcac:	ldr	x0, [x6]
    dcb0:	mov	w1, #0x30                  	// #48
    dcb4:	ldr	x2, [x2]
    dcb8:	mov	w22, #0x0                   	// #0
    dcbc:	ldr	x6, [x21]
    dcc0:	ldr	x4, [x4, #16]
    dcc4:	bl	c708 <grub_real_dprintf>
    dcc8:	mov	x0, x19
    dccc:	bl	6260 <grub_free>
    dcd0:	b	dc1c <grub_partition_get_name+0x164>
    dcd4:	nop
	...
    dcf0:	stp	x29, x30, [sp, #-128]!
    dcf4:	mov	x29, sp
    dcf8:	stp	x19, x20, [sp, #16]
    dcfc:	mov	x20, x2
    dd00:	ldp	x2, x3, [x1]
    dd04:	stp	x2, x3, [sp, #64]
    dd08:	ldp	x2, x3, [x1, #16]
    dd0c:	stp	x21, x22, [sp, #32]
    dd10:	mov	x22, x0
    dd14:	stp	x2, x3, [sp, #80]
    dd18:	ldp	x2, x3, [x1, #32]
    dd1c:	stp	x2, x3, [sp, #96]
    dd20:	ldr	x0, [x0, #40]
    dd24:	ldp	x2, x3, [x1, #48]
    dd28:	stp	x2, x3, [sp, #112]
    dd2c:	cbz	x0, dd48 <grub_partition_get_name+0x290>
    dd30:	mov	x19, x1
    dd34:	ldp	x1, x3, [x1, #8]
    dd38:	ldr	x2, [x0, #16]
    dd3c:	add	x1, x1, x3
    dd40:	cmp	x1, x2
    dd44:	b.hi	de08 <grub_partition_get_name+0x350>  // b.pmore
    dd48:	ldp	x3, x2, [x20, #8]
    dd4c:	str	xzr, [x22, #40]
    dd50:	str	x0, [sp, #104]
    dd54:	add	x1, sp, #0x40
    dd58:	mov	x0, x22
    dd5c:	blr	x3
    dd60:	cbnz	w0, dde4 <grub_partition_get_name+0x32c>
    dd64:	ldr	x0, [sp, #72]
    dd68:	cbz	x0, de00 <grub_partition_get_name+0x348>
    dd6c:	adrp	x0, 0 <_start>
    dd70:	add	x1, sp, #0x40
    dd74:	str	x1, [x22, #40]
    dd78:	ldr	x0, [x0]
    dd7c:	ldr	x19, [x0]
    dd80:	cbz	x19, de00 <grub_partition_get_name+0x348>
    dd84:	adrp	x0, 0 <_start>
    dd88:	str	x23, [sp, #48]
    dd8c:	adrp	x23, 0 <_start>
    dd90:	ldr	x21, [x0]
    dd94:	b	dda0 <grub_partition_get_name+0x2e8>
    dd98:	ldr	x19, [x19]
    dd9c:	cbz	x19, ddc8 <grub_partition_get_name+0x310>
    dda0:	ldr	x3, [x19, #24]
    dda4:	mov	x2, x20
    dda8:	mov	x1, x21
    ddac:	mov	x0, x22
    ddb0:	blr	x3
    ddb4:	cbz	w0, ddc0 <grub_partition_get_name+0x308>
    ddb8:	ldr	x0, [x23]
    ddbc:	str	wzr, [x0]
    ddc0:	ldr	w0, [x20]
    ddc4:	cbz	w0, dd98 <grub_partition_get_name+0x2e0>
    ddc8:	ldr	x23, [sp, #48]
    ddcc:	ldr	x1, [sp, #104]
    ddd0:	str	x1, [x22, #40]
    ddd4:	ldp	x19, x20, [sp, #16]
    ddd8:	ldp	x21, x22, [sp, #32]
    dddc:	ldp	x29, x30, [sp], #128
    dde0:	ret
    dde4:	mov	w1, #0x1                   	// #1
    dde8:	str	w1, [x20]
    ddec:	mov	w0, w1
    ddf0:	ldp	x19, x20, [sp, #16]
    ddf4:	ldp	x21, x22, [sp, #32]
    ddf8:	ldp	x29, x30, [sp], #128
    ddfc:	ret
    de00:	ldr	w0, [x20]
    de04:	b	ddcc <grub_partition_get_name+0x314>
    de08:	bl	dab8 <grub_partition_get_name>
    de0c:	mov	x7, x0
    de10:	ldr	x4, [x19, #48]
    de14:	adrp	x6, 0 <_start>
    de18:	adrp	x3, 0 <_start>
    de1c:	adrp	x2, 0 <_start>
    de20:	ldr	w5, [x19]
    de24:	mov	x19, x0
    de28:	ldr	x3, [x3]
    de2c:	add	w5, w5, #0x1
    de30:	ldr	x2, [x2]
    de34:	mov	w1, #0x30                  	// #48
    de38:	ldr	x0, [x6]
    de3c:	ldr	x6, [x22]
    de40:	ldr	x4, [x4, #16]
    de44:	bl	c708 <grub_real_dprintf>
    de48:	mov	x0, x19
    de4c:	bl	6260 <grub_free>
    de50:	mov	w0, #0x0                   	// #0
    de54:	ldp	x19, x20, [sp, #16]
    de58:	ldp	x21, x22, [sp, #32]
    de5c:	ldp	x29, x30, [sp], #128
    de60:	ret
    de64:	nop
	...

000000000000de98 <grub_rescue_parse_line>:
    de98:	stp	x29, x30, [sp, #-48]!
    de9c:	mov	x29, sp
    dea0:	add	x4, sp, #0x28
    dea4:	add	x3, sp, #0x24
    dea8:	bl	d458 <grub_parser_split_cmdline>
    deac:	cbnz	w0, df04 <grub_rescue_parse_line+0x6c>
    deb0:	ldr	w1, [sp, #36]
    deb4:	cmp	w1, #0x0
    deb8:	b.lt	df04 <grub_rescue_parse_line+0x6c>  // b.tstop
    debc:	b.eq	df10 <grub_rescue_parse_line+0x78>  // b.none
    dec0:	ldr	x0, [sp, #40]
    dec4:	stp	x19, x20, [sp, #16]
    dec8:	cmp	w1, #0x1
    decc:	ldr	x19, [x0]
    ded0:	b.eq	df74 <grub_rescue_parse_line+0xdc>  // b.none
    ded4:	ldrb	w0, [x19]
    ded8:	cbnz	w0, df18 <grub_rescue_parse_line+0x80>
    dedc:	mov	x0, x19
    dee0:	bl	6260 <grub_free>
    dee4:	ldr	x0, [sp, #40]
    dee8:	bl	6260 <grub_free>
    deec:	adrp	x0, 0 <_start>
    def0:	ldp	x19, x20, [sp, #16]
    def4:	ldr	x0, [x0]
    def8:	ldr	w0, [x0]
    defc:	ldp	x29, x30, [sp], #48
    df00:	ret
    df04:	adrp	x0, 0 <_start>
    df08:	ldr	x0, [x0]
    df0c:	ldr	w0, [x0]
    df10:	ldp	x29, x30, [sp], #48
    df14:	ret
    df18:	adrp	x0, 0 <_start>
    df1c:	mov	x1, x19
    df20:	ldr	x20, [x0]
    df24:	ldr	x0, [x20]
    df28:	bl	a9b8 <grub_named_list_find>
    df2c:	cbz	x0, dfbc <grub_rescue_parse_line+0x124>
    df30:	ldr	x3, [x0, #32]
    df34:	ldr	x2, [sp, #40]
    df38:	ldr	w1, [sp, #36]
    df3c:	add	x2, x2, #0x8
    df40:	sub	w1, w1, #0x1
    df44:	blr	x3
    df48:	ldr	x0, [sp, #40]
    df4c:	ldr	x19, [x0]
    df50:	mov	x0, x19
    df54:	bl	6260 <grub_free>
    df58:	ldr	x0, [sp, #40]
    df5c:	bl	6260 <grub_free>
    df60:	adrp	x0, 0 <_start>
    df64:	ldp	x19, x20, [sp, #16]
    df68:	ldr	x0, [x0]
    df6c:	ldr	w0, [x0]
    df70:	b	defc <grub_rescue_parse_line+0x64>
    df74:	mov	x0, x19
    df78:	mov	w1, #0x3d                  	// #61
    df7c:	bl	c528 <grub_strchr>
    df80:	mov	x19, x0
    df84:	cbnz	x0, df94 <grub_rescue_parse_line+0xfc>
    df88:	ldr	x0, [sp, #40]
    df8c:	ldr	x19, [x0]
    df90:	b	ded4 <grub_rescue_parse_line+0x3c>
    df94:	mov	x1, x0
    df98:	strb	wzr, [x1], #1
    df9c:	ldr	x0, [sp, #40]
    dfa0:	ldr	x0, [x0]
    dfa4:	bl	9508 <grub_env_set>
    dfa8:	mov	w0, #0x3d                  	// #61
    dfac:	strb	w0, [x19]
    dfb0:	ldr	x0, [sp, #40]
    dfb4:	ldr	x19, [x0]
    dfb8:	b	dedc <grub_rescue_parse_line+0x44>
    dfbc:	adrp	x0, 0 <_start>
    dfc0:	mov	x1, x19
    dfc4:	ldr	x0, [x0]
    dfc8:	bl	c3e0 <grub_printf_>
    dfcc:	adrp	x1, 0 <_start>
    dfd0:	ldr	x0, [x20]
    dfd4:	ldr	x1, [x1]
    dfd8:	bl	a9b8 <grub_named_list_find>
    dfdc:	cbz	x0, dfec <grub_rescue_parse_line+0x154>
    dfe0:	adrp	x0, 0 <_start>
    dfe4:	ldr	x0, [x0]
    dfe8:	bl	c078 <grub_err_printf>
    dfec:	ldr	x0, [sp, #40]
    dff0:	ldr	x19, [x0]
    dff4:	b	dedc <grub_rescue_parse_line+0x44>
	...
    e020:	stp	x29, x30, [sp, #-80]!
    e024:	mov	x29, sp
    e028:	stp	x19, x20, [sp, #16]
    e02c:	stp	x21, x22, [sp, #32]
    e030:	mov	x22, x0
    e034:	str	x23, [sp, #48]
    e038:	cbnz	w1, e13c <grub_rescue_parse_line+0x2a4>
    e03c:	adrp	x0, 0 <_start>
    e040:	ldr	x0, [x0]
    e044:	bl	c078 <grub_err_printf>
    e048:	adrp	x0, 0 <_start>
    e04c:	mov	w1, #0x0                   	// #0
    e050:	mov	x2, #0x100                 	// #256
    e054:	mov	w23, #0x2008                	// #8200
    e058:	ldr	x20, [x0]
    e05c:	mov	w19, #0x0                   	// #0
    e060:	movk	w23, #0x8, lsl #16
    e064:	mov	x0, x20
    e068:	bl	ccd0 <grub_memset>
    e06c:	adrp	x0, 0 <_start>
    e070:	ldr	x21, [x0]
    e074:	bl	e4d0 <grub_getkey>
    e078:	cmp	w0, #0xa
    e07c:	sub	w1, w0, #0x20
    e080:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    e084:	b.eq	e0d4 <grub_rescue_parse_line+0x23c>  // b.none
    e088:	cmp	w1, #0x5e
    e08c:	b.hi	e110 <grub_rescue_parse_line+0x278>  // b.pmore
    e090:	and	w1, w0, #0xff
    e094:	add	w2, w19, #0x1
    e098:	cmp	w19, #0xfe
    e09c:	b.gt	e0bc <grub_rescue_parse_line+0x224>
    e0a0:	ldr	x3, [x21]
    e0a4:	strb	w1, [x20, w19, sxtw]
    e0a8:	strb	w1, [sp, #72]
    e0ac:	add	x0, sp, #0x48
    e0b0:	strb	wzr, [sp, #73]
    e0b4:	mov	w19, w2
    e0b8:	blr	x3
    e0bc:	bl	e590 <grub_refresh>
    e0c0:	bl	e4d0 <grub_getkey>
    e0c4:	cmp	w0, #0xa
    e0c8:	sub	w1, w0, #0x20
    e0cc:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    e0d0:	b.ne	e088 <grub_rescue_parse_line+0x1f0>  // b.any
    e0d4:	adrp	x0, 0 <_start>
    e0d8:	ldr	x1, [x21]
    e0dc:	ldr	x0, [x0]
    e0e0:	blr	x1
    e0e4:	bl	e590 <grub_refresh>
    e0e8:	mov	x0, x20
    e0ec:	bl	c9d0 <grub_strdup>
    e0f0:	mov	x1, x0
    e0f4:	mov	w0, #0x0                   	// #0
    e0f8:	ldp	x19, x20, [sp, #16]
    e0fc:	ldr	x23, [sp, #48]
    e100:	str	x1, [x22]
    e104:	ldp	x21, x22, [sp, #32]
    e108:	ldp	x29, x30, [sp], #80
    e10c:	ret
    e110:	cmp	w0, #0x8
    e114:	b.ne	e0bc <grub_rescue_parse_line+0x224>  // b.any
    e118:	cbz	w19, e0bc <grub_rescue_parse_line+0x224>
    e11c:	sub	w19, w19, #0x1
    e120:	add	x0, sp, #0x48
    e124:	ldr	x1, [x21]
    e128:	str	w23, [sp, #72]
    e12c:	strb	wzr, [x20, w19, sxtw]
    e130:	blr	x1
    e134:	bl	e590 <grub_refresh>
    e138:	b	e0c0 <grub_rescue_parse_line+0x228>
    e13c:	adrp	x0, 0 <_start>
    e140:	ldr	x0, [x0]
    e144:	b	e044 <grub_rescue_parse_line+0x1ac>
	...

000000000000e170 <grub_rescue_run>:
    e170:	stp	x29, x30, [sp, #-96]!
    e174:	adrp	x0, 0 <_start>
    e178:	mov	x29, sp
    e17c:	ldr	x0, [x0]
    e180:	stp	x19, x20, [sp, #16]
    e184:	stp	x21, x22, [sp, #32]
    e188:	stp	x23, x24, [sp, #48]
    e18c:	stp	x25, x26, [sp, #64]
    e190:	bl	c078 <grub_err_printf>
    e194:	adrp	x5, 0 <_start>
    e198:	adrp	x4, 0 <_start>
    e19c:	adrp	x3, 0 <_start>
    e1a0:	adrp	x2, 0 <_start>
    e1a4:	adrp	x1, 0 <_start>
    e1a8:	adrp	x0, 0 <_start>
    e1ac:	mov	w25, #0x2008                	// #8200
    e1b0:	ldr	x24, [x5]
    e1b4:	movk	w25, #0x8, lsl #16
    e1b8:	ldr	x23, [x4]
    e1bc:	ldr	x20, [x3]
    e1c0:	ldr	x21, [x2]
    e1c4:	ldr	x22, [x1]
    e1c8:	ldr	x26, [x0]
    e1cc:	nop
    e1d0:	bl	9db8 <grub_print_error>
    e1d4:	mov	x0, x23
    e1d8:	str	wzr, [x24]
    e1dc:	bl	c078 <grub_err_printf>
    e1e0:	mov	w19, #0x0                   	// #0
    e1e4:	mov	w1, #0x0                   	// #0
    e1e8:	mov	x2, #0x100                 	// #256
    e1ec:	mov	x0, x20
    e1f0:	bl	ccd0 <grub_memset>
    e1f4:	bl	e4d0 <grub_getkey>
    e1f8:	cmp	w0, #0xa
    e1fc:	sub	w1, w0, #0x20
    e200:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    e204:	b.eq	e254 <grub_rescue_run+0xe4>  // b.none
    e208:	cmp	w1, #0x5e
    e20c:	b.hi	e294 <grub_rescue_run+0x124>  // b.pmore
    e210:	and	w1, w0, #0xff
    e214:	add	w3, w19, #0x1
    e218:	cmp	w19, #0xfe
    e21c:	b.gt	e23c <grub_rescue_run+0xcc>
    e220:	ldr	x2, [x21]
    e224:	strb	w1, [x20, w19, sxtw]
    e228:	strb	w1, [sp, #88]
    e22c:	add	x0, sp, #0x58
    e230:	strb	wzr, [sp, #89]
    e234:	mov	w19, w3
    e238:	blr	x2
    e23c:	bl	e590 <grub_refresh>
    e240:	bl	e4d0 <grub_getkey>
    e244:	cmp	w0, #0xa
    e248:	sub	w1, w0, #0x20
    e24c:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    e250:	b.ne	e208 <grub_rescue_run+0x98>  // b.any
    e254:	ldr	x1, [x21]
    e258:	mov	x0, x22
    e25c:	blr	x1
    e260:	bl	e590 <grub_refresh>
    e264:	mov	x0, x20
    e268:	bl	c9d0 <grub_strdup>
    e26c:	mov	x19, x0
    e270:	cbz	x0, e1d0 <grub_rescue_run+0x60>
    e274:	ldrb	w1, [x0]
    e278:	cbz	w1, e1d0 <grub_rescue_run+0x60>
    e27c:	mov	x1, x26
    e280:	mov	x2, #0x0                   	// #0
    e284:	bl	de98 <grub_rescue_parse_line>
    e288:	mov	x0, x19
    e28c:	bl	6260 <grub_free>
    e290:	b	e1d0 <grub_rescue_run+0x60>
    e294:	cmp	w0, #0x8
    e298:	b.ne	e23c <grub_rescue_run+0xcc>  // b.any
    e29c:	cbz	w19, e23c <grub_rescue_run+0xcc>
    e2a0:	sub	w19, w19, #0x1
    e2a4:	add	x0, sp, #0x58
    e2a8:	ldr	x1, [x21]
    e2ac:	str	w25, [sp, #88]
    e2b0:	strb	wzr, [x20, w19, sxtw]
    e2b4:	blr	x1
    e2b8:	bl	e590 <grub_refresh>
    e2bc:	b	e240 <grub_rescue_run+0xd0>
	...
    e2f8:	stp	x29, x30, [sp, #-176]!
    e2fc:	mov	x29, sp
    e300:	stp	x21, x22, [sp, #32]
    e304:	ldrb	w22, [x0]
    e308:	cbz	w22, e3f8 <grub_rescue_run+0x288>
    e30c:	stp	x25, x26, [sp, #64]
    e310:	mov	x25, x0
    e314:	adrp	x0, 0 <_start>
    e318:	stp	x19, x20, [sp, #16]
    e31c:	ldr	x0, [x0]
    e320:	stp	x23, x24, [sp, #48]
    e324:	stp	x27, x28, [sp, #80]
    e328:	mov	w27, #0x3f                  	// #63
    e32c:	str	x0, [sp, #104]
    e330:	ldr	x0, [sp, #104]
    e334:	cmp	w22, #0x80
    e338:	csel	w21, w22, w27, cc  // cc = lo, ul, last
    e33c:	mov	w20, #0x1                   	// #1
    e340:	mov	w22, w21
    e344:	mov	w26, #0xd                   	// #13
    e348:	ldr	x19, [x0]
    e34c:	mov	w24, #0x7                   	// #7
    e350:	cbnz	x19, e378 <grub_rescue_run+0x208>
    e354:	b	e3e0 <grub_rescue_run+0x270>
    e358:	ldr	x2, [x19, #40]
    e35c:	add	x1, sp, #0x70
    e360:	mov	x0, x19
    e364:	blr	x2
    e368:	cmp	w21, #0xa
    e36c:	b.eq	e404 <grub_rescue_run+0x294>  // b.none
    e370:	ldr	x19, [x19]
    e374:	cbz	x19, e3e0 <grub_rescue_run+0x270>
    e378:	stp	xzr, xzr, [sp, #112]
    e37c:	cmp	w21, #0x9
    e380:	str	w22, [sp, #112]
    e384:	strb	w20, [sp, #120]
    e388:	stp	xzr, xzr, [sp, #128]
    e38c:	b.ne	e358 <grub_rescue_run+0x1e8>  // b.any
    e390:	ldr	x1, [x19, #64]
    e394:	cbz	x1, e428 <grub_rescue_run+0x2b8>
    e398:	mov	x0, x19
    e39c:	blr	x1
    e3a0:	and	w2, w0, #0x7
    e3a4:	mov	w23, #0x20                  	// #32
    e3a8:	sub	w28, w24, w2
    e3ac:	stp	xzr, xzr, [sp, #144]
    e3b0:	sub	w28, w28, #0x1
    e3b4:	add	x1, sp, #0x90
    e3b8:	str	w23, [sp, #144]
    e3bc:	mov	x0, x19
    e3c0:	strb	w20, [sp, #152]
    e3c4:	ldr	x3, [x19, #40]
    e3c8:	stp	xzr, xzr, [sp, #160]
    e3cc:	blr	x3
    e3d0:	cmn	w28, #0x1
    e3d4:	b.ne	e3ac <grub_rescue_run+0x23c>  // b.any
    e3d8:	ldr	x19, [x19]
    e3dc:	cbnz	x19, e378 <grub_rescue_run+0x208>
    e3e0:	ldrb	w22, [x25, #1]!
    e3e4:	cbnz	w22, e330 <grub_rescue_run+0x1c0>
    e3e8:	ldp	x19, x20, [sp, #16]
    e3ec:	ldp	x23, x24, [sp, #48]
    e3f0:	ldp	x25, x26, [sp, #64]
    e3f4:	ldp	x27, x28, [sp, #80]
    e3f8:	ldp	x21, x22, [sp, #32]
    e3fc:	ldp	x29, x30, [sp], #176
    e400:	ret
    e404:	stp	xzr, xzr, [sp, #144]
    e408:	add	x1, sp, #0x90
    e40c:	mov	x0, x19
    e410:	str	w26, [sp, #144]
    e414:	strb	w20, [sp, #152]
    e418:	ldr	x2, [x19, #40]
    e41c:	stp	xzr, xzr, [sp, #160]
    e420:	blr	x2
    e424:	b	e370 <grub_rescue_run+0x200>
    e428:	ldr	x2, [x19, #40]
    e42c:	add	x1, sp, #0x70
    e430:	mov	x0, x19
    e434:	blr	x2
    e438:	b	e370 <grub_rescue_run+0x200>
    e43c:	nop
	...

000000000000e448 <grub_getkey_noblock>:
    e448:	stp	x29, x30, [sp, #-32]!
    e44c:	adrp	x0, 0 <_start>
    e450:	mov	x29, sp
    e454:	str	x19, [sp, #16]
    e458:	ldr	x19, [x0]
    e45c:	ldr	x1, [x19]
    e460:	cbz	x1, e46c <grub_getkey_noblock+0x24>
    e464:	mov	w0, #0x0                   	// #0
    e468:	blr	x1
    e46c:	ldr	x0, [x19, #8]
    e470:	cbz	x0, e478 <grub_getkey_noblock+0x30>
    e474:	blr	x0
    e478:	adrp	x0, 0 <_start>
    e47c:	ldr	x0, [x0]
    e480:	ldr	x19, [x0]
    e484:	cbnz	x19, e494 <grub_getkey_noblock+0x4c>
    e488:	b	e4b0 <grub_getkey_noblock+0x68>
    e48c:	ldr	x19, [x19]
    e490:	cbz	x19, e4b0 <grub_getkey_noblock+0x68>
    e494:	ldr	x1, [x19, #40]
    e498:	mov	x0, x19
    e49c:	blr	x1
    e4a0:	cbz	w0, e48c <grub_getkey_noblock+0x44>
    e4a4:	ldr	x19, [sp, #16]
    e4a8:	ldp	x29, x30, [sp], #32
    e4ac:	ret
    e4b0:	mov	w0, #0x0                   	// #0
    e4b4:	ldr	x19, [sp, #16]
    e4b8:	ldp	x29, x30, [sp], #32
    e4bc:	ret
	...

000000000000e4d0 <grub_getkey>:
    e4d0:	stp	x29, x30, [sp, #-48]!
    e4d4:	adrp	x0, 0 <_start>
    e4d8:	mov	x29, sp
    e4dc:	ldr	x0, [x0]
    e4e0:	stp	x19, x20, [sp, #16]
    e4e4:	ldr	x19, [x0]
    e4e8:	str	x21, [sp, #32]
    e4ec:	cbz	x19, e508 <grub_getkey+0x38>
    e4f0:	ldr	x1, [x19, #104]
    e4f4:	mov	x0, x19
    e4f8:	cbz	x1, e568 <grub_getkey+0x98>
    e4fc:	blr	x1
    e500:	ldr	x19, [x19]
    e504:	cbnz	x19, e4f0 <grub_getkey+0x20>
    e508:	adrp	x1, 0 <_start>
    e50c:	adrp	x0, 0 <_start>
    e510:	ldr	x20, [x1]
    e514:	ldr	x21, [x0]
    e518:	ldr	x1, [x20]
    e51c:	cbz	x1, e528 <grub_getkey+0x58>
    e520:	mov	w0, #0x0                   	// #0
    e524:	blr	x1
    e528:	ldr	x0, [x20, #8]
    e52c:	cbz	x0, e534 <grub_getkey+0x64>
    e530:	blr	x0
    e534:	ldr	x19, [x21]
    e538:	cbnz	x19, e548 <grub_getkey+0x78>
    e53c:	b	e518 <grub_getkey+0x48>
    e540:	ldr	x19, [x19]
    e544:	cbz	x19, e518 <grub_getkey+0x48>
    e548:	ldr	x1, [x19, #40]
    e54c:	mov	x0, x19
    e550:	blr	x1
    e554:	cbz	w0, e540 <grub_getkey+0x70>
    e558:	ldp	x19, x20, [sp, #16]
    e55c:	ldr	x21, [sp, #32]
    e560:	ldp	x29, x30, [sp], #48
    e564:	ret
    e568:	ldr	x19, [x19]
    e56c:	cbnz	x19, e4f0 <grub_getkey+0x20>
    e570:	b	e508 <grub_getkey+0x38>
    e574:	nop
	...

000000000000e590 <grub_refresh>:
    e590:	stp	x29, x30, [sp, #-32]!
    e594:	adrp	x0, 0 <_start>
    e598:	mov	x29, sp
    e59c:	ldr	x0, [x0]
    e5a0:	str	x19, [sp, #16]
    e5a4:	ldr	x19, [x0]
    e5a8:	cbz	x19, e5c8 <grub_refresh+0x38>
    e5ac:	nop
    e5b0:	ldr	x1, [x19, #104]
    e5b4:	mov	x0, x19
    e5b8:	cbz	x1, e5d4 <grub_refresh+0x44>
    e5bc:	blr	x1
    e5c0:	ldr	x19, [x19]
    e5c4:	cbnz	x19, e5b0 <grub_refresh+0x20>
    e5c8:	ldr	x19, [sp, #16]
    e5cc:	ldp	x29, x30, [sp], #32
    e5d0:	ret
    e5d4:	ldr	x19, [x19]
    e5d8:	cbnz	x19, e5b0 <grub_refresh+0x20>
    e5dc:	ldr	x19, [sp, #16]
    e5e0:	ldp	x29, x30, [sp], #32
    e5e4:	ret
	...

000000000000e5f0 <grub_register_exported_symbols>:
    e5f0:	stp	x29, x30, [sp, #-32]!
    e5f4:	adrp	x0, 0 <_start>
    e5f8:	mov	x29, sp
    e5fc:	str	x19, [sp, #16]
    e600:	ldr	x19, [x0]
    e604:	ldr	x0, [x19]
    e608:	cbz	x0, e628 <grub_register_exported_symbols+0x38>
    e60c:	nop
    e610:	ldr	w2, [x19, #16]
    e614:	mov	x3, #0x0                   	// #0
    e618:	ldr	x1, [x19, #8]
    e61c:	bl	8198 <grub_dl_register_symbol>
    e620:	ldr	x0, [x19, #24]!
    e624:	cbnz	x0, e610 <grub_register_exported_symbols+0x20>
    e628:	ldr	x19, [sp, #16]
    e62c:	ldp	x29, x30, [sp], #32
    e630:	ret
    e634:	nop
	...
