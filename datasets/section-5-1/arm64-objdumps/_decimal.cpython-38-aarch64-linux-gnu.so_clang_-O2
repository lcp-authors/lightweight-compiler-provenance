
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_decimal.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006388 <.init>:
    6388:	stp	x29, x30, [sp, #-16]!
    638c:	mov	x29, sp
    6390:	bl	69e0 <PyFloat_FromString@plt+0x10>
    6394:	ldp	x29, x30, [sp], #16
    6398:	ret

Disassembly of section .plt:

00000000000063a0 <memcpy@plt-0x20>:
    63a0:	stp	x16, x30, [sp, #-16]!
    63a4:	adrp	x16, 50000 <PyInit__decimal@@Base+0x4954c>
    63a8:	ldr	x17, [x16, #4088]
    63ac:	add	x16, x16, #0xff8
    63b0:	br	x17
    63b4:	nop
    63b8:	nop
    63bc:	nop

00000000000063c0 <memcpy@plt>:
    63c0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    63c4:	ldr	x17, [x16]
    63c8:	add	x16, x16, #0x0
    63cc:	br	x17

00000000000063d0 <PyUnicode_FromFormat@plt>:
    63d0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    63d4:	ldr	x17, [x16, #8]
    63d8:	add	x16, x16, #0x8
    63dc:	br	x17

00000000000063e0 <memmove@plt>:
    63e0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    63e4:	ldr	x17, [x16, #16]
    63e8:	add	x16, x16, #0x10
    63ec:	br	x17

00000000000063f0 <PyList_New@plt>:
    63f0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    63f4:	ldr	x17, [x16, #24]
    63f8:	add	x16, x16, #0x18
    63fc:	br	x17

0000000000006400 <_PyUnicode_Ready@plt>:
    6400:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6404:	ldr	x17, [x16, #32]
    6408:	add	x16, x16, #0x20
    640c:	br	x17

0000000000006410 <PyDict_SetItemString@plt>:
    6410:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6414:	ldr	x17, [x16, #40]
    6418:	add	x16, x16, #0x28
    641c:	br	x17

0000000000006420 <strlen@plt>:
    6420:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6424:	ldr	x17, [x16, #48]
    6428:	add	x16, x16, #0x30
    642c:	br	x17

0000000000006430 <PyDict_Size@plt>:
    6430:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6434:	ldr	x17, [x16, #56]
    6438:	add	x16, x16, #0x38
    643c:	br	x17

0000000000006440 <mbstowcs@plt>:
    6440:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6444:	ldr	x17, [x16, #64]
    6448:	add	x16, x16, #0x40
    644c:	br	x17

0000000000006450 <raise@plt>:
    6450:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6454:	ldr	x17, [x16, #72]
    6458:	add	x16, x16, #0x48
    645c:	br	x17

0000000000006460 <PyArg_ParseTupleAndKeywords@plt>:
    6460:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6464:	ldr	x17, [x16, #80]
    6468:	add	x16, x16, #0x50
    646c:	br	x17

0000000000006470 <PyList_AsTuple@plt>:
    6470:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6474:	ldr	x17, [x16, #88]
    6478:	add	x16, x16, #0x58
    647c:	br	x17

0000000000006480 <strtoll@plt>:
    6480:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6484:	ldr	x17, [x16, #96]
    6488:	add	x16, x16, #0x60
    648c:	br	x17

0000000000006490 <PyObject_CallMethod@plt>:
    6490:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6494:	ldr	x17, [x16, #104]
    6498:	add	x16, x16, #0x68
    649c:	br	x17

00000000000064a0 <PyMem_Free@plt>:
    64a0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    64a4:	ldr	x17, [x16, #112]
    64a8:	add	x16, x16, #0x70
    64ac:	br	x17

00000000000064b0 <PyUnicode_FromWideChar@plt>:
    64b0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    64b4:	ldr	x17, [x16, #120]
    64b8:	add	x16, x16, #0x78
    64bc:	br	x17

00000000000064c0 <PyObject_GetAttrString@plt>:
    64c0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    64c4:	ldr	x17, [x16, #128]
    64c8:	add	x16, x16, #0x80
    64cc:	br	x17

00000000000064d0 <__cxa_finalize@plt>:
    64d0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    64d4:	ldr	x17, [x16, #136]
    64d8:	add	x16, x16, #0x88
    64dc:	br	x17

00000000000064e0 <_PyLong_New@plt>:
    64e0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    64e4:	ldr	x17, [x16, #144]
    64e8:	add	x16, x16, #0x90
    64ec:	br	x17

00000000000064f0 <fputc@plt>:
    64f0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    64f4:	ldr	x17, [x16, #152]
    64f8:	add	x16, x16, #0x98
    64fc:	br	x17

0000000000006500 <PyUnicode_AsUTF8String@plt>:
    6500:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6504:	ldr	x17, [x16, #160]
    6508:	add	x16, x16, #0xa0
    650c:	br	x17

0000000000006510 <_Py_Dealloc@plt>:
    6510:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6514:	ldr	x17, [x16, #168]
    6518:	add	x16, x16, #0xa8
    651c:	br	x17

0000000000006520 <PyErr_NoMemory@plt>:
    6520:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6524:	ldr	x17, [x16, #176]
    6528:	add	x16, x16, #0xb0
    652c:	br	x17

0000000000006530 <PyErr_SetObject@plt>:
    6530:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6534:	ldr	x17, [x16, #184]
    6538:	add	x16, x16, #0xb8
    653c:	br	x17

0000000000006540 <__ctype_tolower_loc@plt>:
    6540:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6544:	ldr	x17, [x16, #192]
    6548:	add	x16, x16, #0xc0
    654c:	br	x17

0000000000006550 <snprintf@plt>:
    6550:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6554:	ldr	x17, [x16, #200]
    6558:	add	x16, x16, #0xc8
    655c:	br	x17

0000000000006560 <log10@plt>:
    6560:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6564:	ldr	x17, [x16, #208]
    6568:	add	x16, x16, #0xd0
    656c:	br	x17

0000000000006570 <localeconv@plt>:
    6570:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6574:	ldr	x17, [x16, #216]
    6578:	add	x16, x16, #0xd8
    657c:	br	x17

0000000000006580 <malloc@plt>:
    6580:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6584:	ldr	x17, [x16, #224]
    6588:	add	x16, x16, #0xe0
    658c:	br	x17

0000000000006590 <PyErr_SetString@plt>:
    6590:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6594:	ldr	x17, [x16, #232]
    6598:	add	x16, x16, #0xe8
    659c:	br	x17

00000000000065a0 <PyObject_IsInstance@plt>:
    65a0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    65a4:	ldr	x17, [x16, #240]
    65a8:	add	x16, x16, #0xf0
    65ac:	br	x17

00000000000065b0 <memset@plt>:
    65b0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    65b4:	ldr	x17, [x16, #248]
    65b8:	add	x16, x16, #0xf8
    65bc:	br	x17

00000000000065c0 <PyContextVar_Set@plt>:
    65c0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    65c4:	ldr	x17, [x16, #256]
    65c8:	add	x16, x16, #0x100
    65cc:	br	x17

00000000000065d0 <PyObject_Free@plt>:
    65d0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    65d4:	ldr	x17, [x16, #264]
    65d8:	add	x16, x16, #0x108
    65dc:	br	x17

00000000000065e0 <PyLong_FromSsize_t@plt>:
    65e0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    65e4:	ldr	x17, [x16, #272]
    65e8:	add	x16, x16, #0x110
    65ec:	br	x17

00000000000065f0 <PyFloat_FromDouble@plt>:
    65f0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    65f4:	ldr	x17, [x16, #280]
    65f8:	add	x16, x16, #0x118
    65fc:	br	x17

0000000000006600 <PyType_Ready@plt>:
    6600:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6604:	ldr	x17, [x16, #288]
    6608:	add	x16, x16, #0x120
    660c:	br	x17

0000000000006610 <calloc@plt>:
    6610:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6614:	ldr	x17, [x16, #296]
    6618:	add	x16, x16, #0x128
    661c:	br	x17

0000000000006620 <PyLong_FromLong@plt>:
    6620:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6624:	ldr	x17, [x16, #304]
    6628:	add	x16, x16, #0x130
    662c:	br	x17

0000000000006630 <PyLong_AsSsize_t@plt>:
    6630:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6634:	ldr	x17, [x16, #312]
    6638:	add	x16, x16, #0x138
    663c:	br	x17

0000000000006640 <_PyLong_GCD@plt>:
    6640:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6644:	ldr	x17, [x16, #320]
    6648:	add	x16, x16, #0x140
    664c:	br	x17

0000000000006650 <PyErr_NewException@plt>:
    6650:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6654:	ldr	x17, [x16, #328]
    6658:	add	x16, x16, #0x148
    665c:	br	x17

0000000000006660 <realloc@plt>:
    6660:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6664:	ldr	x17, [x16, #336]
    6668:	add	x16, x16, #0x150
    666c:	br	x17

0000000000006670 <PyErr_Clear@plt>:
    6670:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6674:	ldr	x17, [x16, #344]
    6678:	add	x16, x16, #0x158
    667c:	br	x17

0000000000006680 <PyContextVar_Get@plt>:
    6680:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6684:	ldr	x17, [x16, #352]
    6688:	add	x16, x16, #0x160
    668c:	br	x17

0000000000006690 <PyBool_FromLong@plt>:
    6690:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6694:	ldr	x17, [x16, #360]
    6698:	add	x16, x16, #0x168
    669c:	br	x17

00000000000066a0 <PyContextVar_New@plt>:
    66a0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    66a4:	ldr	x17, [x16, #368]
    66a8:	add	x16, x16, #0x170
    66ac:	br	x17

00000000000066b0 <PyList_Append@plt>:
    66b0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    66b4:	ldr	x17, [x16, #376]
    66b8:	add	x16, x16, #0x178
    66bc:	br	x17

00000000000066c0 <__gmon_start__@plt>:
    66c0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    66c4:	ldr	x17, [x16, #384]
    66c8:	add	x16, x16, #0x180
    66cc:	br	x17

00000000000066d0 <PyObject_CallFunction@plt>:
    66d0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    66d4:	ldr	x17, [x16, #392]
    66d8:	add	x16, x16, #0x188
    66dc:	br	x17

00000000000066e0 <PyTuple_New@plt>:
    66e0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    66e4:	ldr	x17, [x16, #400]
    66e8:	add	x16, x16, #0x190
    66ec:	br	x17

00000000000066f0 <PyObject_GenericGetAttr@plt>:
    66f0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    66f4:	ldr	x17, [x16, #408]
    66f8:	add	x16, x16, #0x198
    66fc:	br	x17

0000000000006700 <abort@plt>:
    6700:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6704:	ldr	x17, [x16, #416]
    6708:	add	x16, x16, #0x1a0
    670c:	br	x17

0000000000006710 <Py_BuildValue@plt>:
    6710:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6714:	ldr	x17, [x16, #424]
    6718:	add	x16, x16, #0x1a8
    671c:	br	x17

0000000000006720 <PyErr_Occurred@plt>:
    6720:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6724:	ldr	x17, [x16, #432]
    6728:	add	x16, x16, #0x1b0
    672c:	br	x17

0000000000006730 <PyModule_Create2@plt>:
    6730:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6734:	ldr	x17, [x16, #440]
    6738:	add	x16, x16, #0x1b8
    673c:	br	x17

0000000000006740 <_PyUnicode_IsWhitespace@plt>:
    6740:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6744:	ldr	x17, [x16, #448]
    6748:	add	x16, x16, #0x1c0
    674c:	br	x17

0000000000006750 <puts@plt>:
    6750:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6754:	ldr	x17, [x16, #456]
    6758:	add	x16, x16, #0x1c8
    675c:	br	x17

0000000000006760 <PyLong_AsLong@plt>:
    6760:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6764:	ldr	x17, [x16, #464]
    6768:	add	x16, x16, #0x1d0
    676c:	br	x17

0000000000006770 <PyImport_ImportModule@plt>:
    6770:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6774:	ldr	x17, [x16, #472]
    6778:	add	x16, x16, #0x1d8
    677c:	br	x17

0000000000006780 <PyObject_CallObject@plt>:
    6780:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6784:	ldr	x17, [x16, #480]
    6788:	add	x16, x16, #0x1e0
    678c:	br	x17

0000000000006790 <PyObject_CallFunctionObjArgs@plt>:
    6790:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6794:	ldr	x17, [x16, #488]
    6798:	add	x16, x16, #0x1e8
    679c:	br	x17

00000000000067a0 <strcmp@plt>:
    67a0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    67a4:	ldr	x17, [x16, #496]
    67a8:	add	x16, x16, #0x1f0
    67ac:	br	x17

00000000000067b0 <PyDict_GetItemString@plt>:
    67b0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    67b4:	ldr	x17, [x16, #504]
    67b8:	add	x16, x16, #0x1f8
    67bc:	br	x17

00000000000067c0 <__ctype_b_loc@plt>:
    67c0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    67c4:	ldr	x17, [x16, #512]
    67c8:	add	x16, x16, #0x200
    67cc:	br	x17

00000000000067d0 <PyUnicode_CompareWithASCIIString@plt>:
    67d0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    67d4:	ldr	x17, [x16, #520]
    67d8:	add	x16, x16, #0x208
    67dc:	br	x17

00000000000067e0 <PyUnicode_DecodeUTF8@plt>:
    67e0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    67e4:	ldr	x17, [x16, #528]
    67e8:	add	x16, x16, #0x210
    67ec:	br	x17

00000000000067f0 <_PyUnicode_ToDecimalDigit@plt>:
    67f0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    67f4:	ldr	x17, [x16, #536]
    67f8:	add	x16, x16, #0x218
    67fc:	br	x17

0000000000006800 <PyFloat_AsDouble@plt>:
    6800:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6804:	ldr	x17, [x16, #544]
    6808:	add	x16, x16, #0x220
    680c:	br	x17

0000000000006810 <PyObject_IsTrue@plt>:
    6810:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6814:	ldr	x17, [x16, #552]
    6818:	add	x16, x16, #0x228
    681c:	br	x17

0000000000006820 <PyArg_ParseTuple@plt>:
    6820:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6824:	ldr	x17, [x16, #560]
    6828:	add	x16, x16, #0x230
    682c:	br	x17

0000000000006830 <free@plt>:
    6830:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6834:	ldr	x17, [x16, #568]
    6838:	add	x16, x16, #0x238
    683c:	br	x17

0000000000006840 <PyUnicode_Compare@plt>:
    6840:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6844:	ldr	x17, [x16, #576]
    6848:	add	x16, x16, #0x240
    684c:	br	x17

0000000000006850 <PyList_Size@plt>:
    6850:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6854:	ldr	x17, [x16, #584]
    6858:	add	x16, x16, #0x248
    685c:	br	x17

0000000000006860 <PyDict_New@plt>:
    6860:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6864:	ldr	x17, [x16, #592]
    6868:	add	x16, x16, #0x250
    686c:	br	x17

0000000000006870 <fwrite@plt>:
    6870:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6874:	ldr	x17, [x16, #600]
    6878:	add	x16, x16, #0x258
    687c:	br	x17

0000000000006880 <PyLong_FromUnsignedLong@plt>:
    6880:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6884:	ldr	x17, [x16, #608]
    6888:	add	x16, x16, #0x260
    688c:	br	x17

0000000000006890 <_PyObject_New@plt>:
    6890:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6894:	ldr	x17, [x16, #616]
    6898:	add	x16, x16, #0x268
    689c:	br	x17

00000000000068a0 <PyUnicode_FromString@plt>:
    68a0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    68a4:	ldr	x17, [x16, #624]
    68a8:	add	x16, x16, #0x270
    68ac:	br	x17

00000000000068b0 <PyModule_AddStringConstant@plt>:
    68b0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    68b4:	ldr	x17, [x16, #632]
    68b8:	add	x16, x16, #0x278
    68bc:	br	x17

00000000000068c0 <PyUnicode_InternFromString@plt>:
    68c0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    68c4:	ldr	x17, [x16, #640]
    68c8:	add	x16, x16, #0x280
    68cc:	br	x17

00000000000068d0 <PyModule_AddObject@plt>:
    68d0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    68d4:	ldr	x17, [x16, #648]
    68d8:	add	x16, x16, #0x288
    68dc:	br	x17

00000000000068e0 <PyDict_SetItem@plt>:
    68e0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    68e4:	ldr	x17, [x16, #656]
    68e8:	add	x16, x16, #0x290
    68ec:	br	x17

00000000000068f0 <PyObject_GenericSetAttr@plt>:
    68f0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    68f4:	ldr	x17, [x16, #664]
    68f8:	add	x16, x16, #0x298
    68fc:	br	x17

0000000000006900 <PyType_IsSubtype@plt>:
    6900:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6904:	ldr	x17, [x16, #672]
    6908:	add	x16, x16, #0x2a0
    690c:	br	x17

0000000000006910 <PyUnicode_AsUTF8AndSize@plt>:
    6910:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6914:	ldr	x17, [x16, #680]
    6918:	add	x16, x16, #0x2a8
    691c:	br	x17

0000000000006920 <PyTuple_Size@plt>:
    6920:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6924:	ldr	x17, [x16, #688]
    6928:	add	x16, x16, #0x2b0
    692c:	br	x17

0000000000006930 <PyComplex_AsCComplex@plt>:
    6930:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6934:	ldr	x17, [x16, #696]
    6938:	add	x16, x16, #0x2b8
    693c:	br	x17

0000000000006940 <PyComplex_FromDoubles@plt>:
    6940:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6944:	ldr	x17, [x16, #704]
    6948:	add	x16, x16, #0x2c0
    694c:	br	x17

0000000000006950 <PyErr_Format@plt>:
    6950:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6954:	ldr	x17, [x16, #712]
    6958:	add	x16, x16, #0x2c8
    695c:	br	x17

0000000000006960 <__errno_location@plt>:
    6960:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6964:	ldr	x17, [x16, #720]
    6968:	add	x16, x16, #0x2d0
    696c:	br	x17

0000000000006970 <PyList_GetItem@plt>:
    6970:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6974:	ldr	x17, [x16, #728]
    6978:	add	x16, x16, #0x2d8
    697c:	br	x17

0000000000006980 <PyMem_Malloc@plt>:
    6980:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6984:	ldr	x17, [x16, #736]
    6988:	add	x16, x16, #0x2e0
    698c:	br	x17

0000000000006990 <PyUnicode_New@plt>:
    6990:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    6994:	ldr	x17, [x16, #744]
    6998:	add	x16, x16, #0x2e8
    699c:	br	x17

00000000000069a0 <PyTuple_Pack@plt>:
    69a0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    69a4:	ldr	x17, [x16, #752]
    69a8:	add	x16, x16, #0x2f0
    69ac:	br	x17

00000000000069b0 <fprintf@plt>:
    69b0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    69b4:	ldr	x17, [x16, #760]
    69b8:	add	x16, x16, #0x2f8
    69bc:	br	x17

00000000000069c0 <PyDict_GetItemWithError@plt>:
    69c0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    69c4:	ldr	x17, [x16, #768]
    69c8:	add	x16, x16, #0x300
    69cc:	br	x17

00000000000069d0 <PyFloat_FromString@plt>:
    69d0:	adrp	x16, 51000 <memcpy@GLIBC_2.17>
    69d4:	ldr	x17, [x16, #776]
    69d8:	add	x16, x16, #0x308
    69dc:	br	x17

Disassembly of section .text:

00000000000069e0 <PyInit__decimal@@Base-0xd4>:
    69e0:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
    69e4:	ldr	x0, [x0, #3984]
    69e8:	cbz	x0, 69f0 <PyFloat_FromString@plt+0x20>
    69ec:	b	66c0 <__gmon_start__@plt>
    69f0:	ret
    69f4:	nop
    69f8:	adrp	x0, 53000 <PyInit__decimal@@Base+0x4c54c>
    69fc:	add	x0, x0, #0x570
    6a00:	adrp	x1, 53000 <PyInit__decimal@@Base+0x4c54c>
    6a04:	add	x1, x1, #0x570
    6a08:	cmp	x1, x0
    6a0c:	b.eq	6a24 <PyFloat_FromString@plt+0x54>  // b.none
    6a10:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
    6a14:	ldr	x1, [x1, #3856]
    6a18:	cbz	x1, 6a24 <PyFloat_FromString@plt+0x54>
    6a1c:	mov	x16, x1
    6a20:	br	x16
    6a24:	ret
    6a28:	adrp	x0, 53000 <PyInit__decimal@@Base+0x4c54c>
    6a2c:	add	x0, x0, #0x570
    6a30:	adrp	x1, 53000 <PyInit__decimal@@Base+0x4c54c>
    6a34:	add	x1, x1, #0x570
    6a38:	sub	x1, x1, x0
    6a3c:	lsr	x2, x1, #63
    6a40:	add	x1, x2, x1, asr #3
    6a44:	cmp	xzr, x1, asr #1
    6a48:	asr	x1, x1, #1
    6a4c:	b.eq	6a64 <PyFloat_FromString@plt+0x94>  // b.none
    6a50:	adrp	x2, 50000 <PyInit__decimal@@Base+0x4954c>
    6a54:	ldr	x2, [x2, #4056]
    6a58:	cbz	x2, 6a64 <PyFloat_FromString@plt+0x94>
    6a5c:	mov	x16, x2
    6a60:	br	x16
    6a64:	ret
    6a68:	stp	x29, x30, [sp, #-32]!
    6a6c:	mov	x29, sp
    6a70:	str	x19, [sp, #16]
    6a74:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
    6a78:	ldrb	w0, [x19, #1392]
    6a7c:	cbnz	w0, 6aa4 <PyFloat_FromString@plt+0xd4>
    6a80:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
    6a84:	ldr	x0, [x0, #3896]
    6a88:	cbz	x0, 6a98 <PyFloat_FromString@plt+0xc8>
    6a8c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    6a90:	ldr	x0, [x0, #784]
    6a94:	bl	64d0 <__cxa_finalize@plt>
    6a98:	bl	69f8 <PyFloat_FromString@plt+0x28>
    6a9c:	mov	w0, #0x1                   	// #1
    6aa0:	strb	w0, [x19, #1392]
    6aa4:	ldr	x19, [sp, #16]
    6aa8:	ldp	x29, x30, [sp], #32
    6aac:	ret
    6ab0:	b	6a28 <PyFloat_FromString@plt+0x58>

0000000000006ab4 <PyInit__decimal@@Base>:
    6ab4:	sub	sp, sp, #0x80
    6ab8:	stp	x29, x30, [sp, #32]
    6abc:	stp	x28, x27, [sp, #48]
    6ac0:	stp	x26, x25, [sp, #64]
    6ac4:	stp	x24, x23, [sp, #80]
    6ac8:	stp	x22, x21, [sp, #96]
    6acc:	stp	x20, x19, [sp, #112]
    6ad0:	add	x29, sp, #0x20
    6ad4:	adrp	x11, 50000 <PyInit__decimal@@Base+0x4954c>
    6ad8:	adrp	x13, 50000 <PyInit__decimal@@Base+0x4954c>
    6adc:	adrp	x17, 50000 <PyInit__decimal@@Base+0x4954c>
    6ae0:	ldr	x11, [x11, #4064]
    6ae4:	ldr	x13, [x13, #3944]
    6ae8:	ldr	x17, [x17, #3888]
    6aec:	adrp	x9, 7000 <PyInit__decimal@@Base+0x54c>
    6af0:	adrp	x15, 20000 <PyInit__decimal@@Base+0x1954c>
    6af4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    6af8:	add	x9, x9, #0x7c0
    6afc:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b00:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b04:	adrp	x14, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b08:	add	x15, x15, #0x2b4
    6b0c:	adrp	x16, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b10:	mov	w0, #0x4                   	// #4
    6b14:	str	x9, [x8, #1336]
    6b18:	str	x11, [x10, #1352]
    6b1c:	str	x13, [x12, #1360]
    6b20:	str	x15, [x14, #1368]
    6b24:	str	x17, [x16, #1376]
    6b28:	bl	1c624 <PyInit__decimal@@Base+0x15b70>
    6b2c:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    6b30:	add	x0, x0, #0xdc
    6b34:	mov	x1, xzr
    6b38:	bl	66a0 <PyContextVar_New@plt>
    6b3c:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b40:	adrp	x24, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b44:	adrp	x28, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b48:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b4c:	adrp	x27, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b50:	adrp	x26, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b54:	adrp	x25, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b58:	str	x0, [x23, #1400]
    6b5c:	cbz	x0, 7298 <PyInit__decimal@@Base+0x7e4>
    6b60:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    6b64:	ldr	x20, [x20, #4040]
    6b68:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b6c:	adrp	x11, 50000 <PyInit__decimal@@Base+0x4954c>
    6b70:	mov	x27, x26
    6b74:	ldr	x8, [x20, #96]
    6b78:	mov	x26, x25
    6b7c:	adrp	x25, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b80:	ldr	x9, [x8, #16]
    6b84:	str	x9, [x10, #1408]
    6b88:	ldr	x9, [x8, #232]
    6b8c:	ldr	x11, [x11, #3864]
    6b90:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
    6b94:	str	x9, [x10, #1416]
    6b98:	ldr	x8, [x8, #40]
    6b9c:	ldr	x9, [x11, #96]
    6ba0:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
    6ba4:	str	x8, [x10, #1424]
    6ba8:	ldr	x9, [x9, #64]
    6bac:	ldr	x8, [x11, #232]
    6bb0:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
    6bb4:	str	x9, [x10, #1432]
    6bb8:	cbz	x8, 6bf4 <PyInit__decimal@@Base+0x140>
    6bbc:	ldr	x1, [x8]
    6bc0:	cbz	x1, 6bf4 <PyInit__decimal@@Base+0x140>
    6bc4:	adrp	x19, 3e000 <PyInit__decimal@@Base+0x3754c>
    6bc8:	add	x21, x8, #0x10
    6bcc:	add	x19, x19, #0xec
    6bd0:	mov	x0, x19
    6bd4:	bl	67a0 <strcmp@plt>
    6bd8:	cbz	w0, 6bec <PyInit__decimal@@Base+0x138>
    6bdc:	ldr	x1, [x21, #16]
    6be0:	add	x21, x21, #0x20
    6be4:	cbnz	x1, 6bd0 <PyInit__decimal@@Base+0x11c>
    6be8:	b	6bf4 <PyInit__decimal@@Base+0x140>
    6bec:	ldrb	w8, [x21]
    6bf0:	tbnz	w8, #2, 6c44 <PyInit__decimal@@Base+0x190>
    6bf4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    6bf8:	ldr	x8, [x8, #3920]
    6bfc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6c00:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    6c04:	add	x1, x1, #0x21c
    6c08:	ldr	x0, [x8]
    6c0c:	add	x2, x2, #0xec
    6c10:	mov	x19, x22
    6c14:	bl	6950 <PyErr_Format@plt>
    6c18:	mov	x20, xzr
    6c1c:	mov	x21, xzr
    6c20:	mov	x22, xzr
    6c24:	stur	xzr, [x29, #-8]
    6c28:	str	xzr, [x25, #1440]
    6c2c:	mov	x25, x26
    6c30:	mov	x26, x27
    6c34:	adrp	x27, 53000 <PyInit__decimal@@Base+0x4c54c>
    6c38:	ldr	x0, [x24, #1456]
    6c3c:	cbnz	x0, 72b4 <PyInit__decimal@@Base+0x800>
    6c40:	b	72cc <PyInit__decimal@@Base+0x818>
    6c44:	ldur	x8, [x21, #-8]
    6c48:	str	x8, [x25, #1440]
    6c4c:	cbz	x8, 6c94 <PyInit__decimal@@Base+0x1e0>
    6c50:	ldr	x8, [x20, #232]
    6c54:	mov	x25, x26
    6c58:	mov	x26, x27
    6c5c:	adrp	x27, 53000 <PyInit__decimal@@Base+0x4c54c>
    6c60:	cbz	x8, 6cb4 <PyInit__decimal@@Base+0x200>
    6c64:	ldr	x1, [x8]
    6c68:	cbz	x1, 6cb4 <PyInit__decimal@@Base+0x200>
    6c6c:	adrp	x19, 3e000 <PyInit__decimal@@Base+0x3754c>
    6c70:	add	x20, x8, #0x10
    6c74:	add	x19, x19, #0xfd
    6c78:	mov	x0, x19
    6c7c:	bl	67a0 <strcmp@plt>
    6c80:	cbz	w0, 6cac <PyInit__decimal@@Base+0x1f8>
    6c84:	ldr	x1, [x20, #16]
    6c88:	add	x20, x20, #0x20
    6c8c:	cbnz	x1, 6c78 <PyInit__decimal@@Base+0x1c4>
    6c90:	b	6cb4 <PyInit__decimal@@Base+0x200>
    6c94:	mov	x19, x22
    6c98:	stur	xzr, [x29, #-8]
    6c9c:	mov	x20, xzr
    6ca0:	mov	x21, xzr
    6ca4:	mov	x22, xzr
    6ca8:	b	6c2c <PyInit__decimal@@Base+0x178>
    6cac:	ldrb	w8, [x20]
    6cb0:	tbnz	w8, #2, 6cfc <PyInit__decimal@@Base+0x248>
    6cb4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    6cb8:	ldr	x8, [x8, #3920]
    6cbc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6cc0:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    6cc4:	add	x1, x1, #0x21c
    6cc8:	ldr	x0, [x8]
    6ccc:	add	x2, x2, #0xfd
    6cd0:	mov	x19, x22
    6cd4:	bl	6950 <PyErr_Format@plt>
    6cd8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    6cdc:	stur	xzr, [x29, #-8]
    6ce0:	mov	x20, xzr
    6ce4:	mov	x21, xzr
    6ce8:	mov	x22, xzr
    6cec:	str	xzr, [x8, #1448]
    6cf0:	ldr	x0, [x24, #1456]
    6cf4:	cbnz	x0, 72b4 <PyInit__decimal@@Base+0x800>
    6cf8:	b	72cc <PyInit__decimal@@Base+0x818>
    6cfc:	ldur	x8, [x20, #-8]
    6d00:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
    6d04:	str	x8, [x9, #1448]
    6d08:	cbz	x8, 7298 <PyInit__decimal@@Base+0x7e4>
    6d0c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    6d10:	ldr	x8, [x8, #4032]
    6d14:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    6d18:	add	x0, x0, #0x318
    6d1c:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
    6d20:	adrp	x10, 51000 <PyInit__decimal@@Base+0x4a54c>
    6d24:	adrp	x11, 51000 <PyInit__decimal@@Base+0x4a54c>
    6d28:	str	x8, [x0, #256]
    6d2c:	str	x8, [x9, #1464]
    6d30:	str	x8, [x10, #1880]
    6d34:	str	x8, [x11, #2296]
    6d38:	bl	6600 <PyType_Ready@plt>
    6d3c:	tbnz	w0, #31, 7298 <PyInit__decimal@@Base+0x7e4>
    6d40:	adrp	x19, 51000 <PyInit__decimal@@Base+0x4a54c>
    6d44:	add	x19, x19, #0x4b8
    6d48:	mov	x0, x19
    6d4c:	bl	6600 <PyType_Ready@plt>
    6d50:	tbnz	w0, #31, 7298 <PyInit__decimal@@Base+0x7e4>
    6d54:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    6d58:	add	x0, x0, #0x7f8
    6d5c:	bl	6600 <PyType_Ready@plt>
    6d60:	tbnz	w0, #31, 7298 <PyInit__decimal@@Base+0x7e4>
    6d64:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    6d68:	add	x0, x0, #0x658
    6d6c:	bl	6600 <PyType_Ready@plt>
    6d70:	tbnz	w0, #31, 7298 <PyInit__decimal@@Base+0x7e4>
    6d74:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    6d78:	add	x0, x0, #0x88c
    6d7c:	bl	68a0 <PyUnicode_FromString@plt>
    6d80:	mov	x21, x0
    6d84:	cbz	x0, 744c <PyInit__decimal@@Base+0x998>
    6d88:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    6d8c:	ldr	x0, [x8, #1056]
    6d90:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6d94:	add	x1, x1, #0x108
    6d98:	mov	x2, x21
    6d9c:	bl	6410 <PyDict_SetItemString@plt>
    6da0:	tbnz	w0, #31, 7424 <PyInit__decimal@@Base+0x970>
    6da4:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    6da8:	ldr	x0, [x8, #1472]
    6dac:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6db0:	add	x1, x1, #0x108
    6db4:	mov	x2, x21
    6db8:	bl	6410 <PyDict_SetItemString@plt>
    6dbc:	tbnz	w0, #31, 7424 <PyInit__decimal@@Base+0x970>
    6dc0:	ldr	x8, [x21]
    6dc4:	mov	x24, x19
    6dc8:	subs	x8, x8, #0x1
    6dcc:	str	x8, [x21]
    6dd0:	b.ne	6ddc <PyInit__decimal@@Base+0x328>  // b.any
    6dd4:	mov	x0, x21
    6dd8:	bl	6510 <_Py_Dealloc@plt>
    6ddc:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    6de0:	add	x0, x0, #0x113
    6de4:	bl	6770 <PyImport_ImportModule@plt>
    6de8:	mov	x20, x0
    6dec:	cbz	x0, 749c <PyInit__decimal@@Base+0x9e8>
    6df0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6df4:	add	x1, x1, #0x11b
    6df8:	mov	x0, x20
    6dfc:	bl	64c0 <PyObject_GetAttrString@plt>
    6e00:	mov	x19, x0
    6e04:	cbz	x0, 745c <PyInit__decimal@@Base+0x9a8>
    6e08:	adrp	x23, 51000 <PyInit__decimal@@Base+0x4a54c>
    6e0c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6e10:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    6e14:	add	x23, x23, #0x318
    6e18:	add	x1, x1, #0x122
    6e1c:	add	x2, x2, #0x8e1
    6e20:	mov	x0, x19
    6e24:	mov	x3, x23
    6e28:	bl	6490 <PyObject_CallMethod@plt>
    6e2c:	cbz	x0, 745c <PyInit__decimal@@Base+0x9a8>
    6e30:	ldr	x8, [x0]
    6e34:	subs	x8, x8, #0x1
    6e38:	str	x8, [x0]
    6e3c:	b.ne	6e44 <PyInit__decimal@@Base+0x390>  // b.any
    6e40:	bl	6510 <_Py_Dealloc@plt>
    6e44:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6e48:	add	x1, x1, #0x12b
    6e4c:	mov	x0, x20
    6e50:	bl	64c0 <PyObject_GetAttrString@plt>
    6e54:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    6e58:	str	x0, [x8, #1456]
    6e5c:	cbz	x0, 745c <PyInit__decimal@@Base+0x9a8>
    6e60:	ldr	x8, [x20]
    6e64:	subs	x8, x8, #0x1
    6e68:	str	x8, [x20]
    6e6c:	b.ne	6e78 <PyInit__decimal@@Base+0x3c4>  // b.any
    6e70:	mov	x0, x20
    6e74:	bl	6510 <_Py_Dealloc@plt>
    6e78:	ldr	x8, [x19]
    6e7c:	subs	x8, x8, #0x1
    6e80:	str	x8, [x19]
    6e84:	b.ne	6e90 <PyInit__decimal@@Base+0x3dc>  // b.any
    6e88:	mov	x0, x19
    6e8c:	bl	6510 <_Py_Dealloc@plt>
    6e90:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    6e94:	add	x0, x0, #0x134
    6e98:	bl	6770 <PyImport_ImportModule@plt>
    6e9c:	mov	x20, x0
    6ea0:	cbz	x0, 749c <PyInit__decimal@@Base+0x9e8>
    6ea4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6ea8:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    6eac:	adrp	x3, 3e000 <PyInit__decimal@@Base+0x3754c>
    6eb0:	adrp	x4, 3e000 <PyInit__decimal@@Base+0x3754c>
    6eb4:	add	x1, x1, #0x140
    6eb8:	add	x2, x2, #0x14b
    6ebc:	add	x3, x3, #0x150
    6ec0:	add	x4, x4, #0x15d
    6ec4:	mov	x0, x20
    6ec8:	bl	6490 <PyObject_CallMethod@plt>
    6ecc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    6ed0:	str	x0, [x8, #1464]
    6ed4:	cbz	x0, 749c <PyInit__decimal@@Base+0x9e8>
    6ed8:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    6edc:	add	x0, x0, #0x88c
    6ee0:	bl	68a0 <PyUnicode_FromString@plt>
    6ee4:	mov	x21, x0
    6ee8:	cbz	x0, 74d0 <PyInit__decimal@@Base+0xa1c>
    6eec:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    6ef0:	ldr	x8, [x8, #1464]
    6ef4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6ef8:	add	x1, x1, #0x108
    6efc:	mov	x2, x21
    6f00:	ldr	x0, [x8, #264]
    6f04:	bl	6410 <PyDict_SetItemString@plt>
    6f08:	tbnz	w0, #31, 74d8 <PyInit__decimal@@Base+0xa24>
    6f0c:	ldr	x8, [x21]
    6f10:	subs	x8, x8, #0x1
    6f14:	str	x8, [x21]
    6f18:	b.ne	6f24 <PyInit__decimal@@Base+0x470>  // b.any
    6f1c:	mov	x0, x21
    6f20:	bl	6510 <_Py_Dealloc@plt>
    6f24:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    6f28:	add	x0, x0, #0x172
    6f2c:	bl	6770 <PyImport_ImportModule@plt>
    6f30:	mov	x21, x0
    6f34:	cbz	x0, 74d0 <PyInit__decimal@@Base+0xa1c>
    6f38:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6f3c:	add	x1, x1, #0x182
    6f40:	mov	x0, x21
    6f44:	bl	64c0 <PyObject_GetAttrString@plt>
    6f48:	mov	x22, x0
    6f4c:	cbz	x0, 74fc <PyInit__decimal@@Base+0xa48>
    6f50:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
    6f54:	ldr	x0, [x0, #4000]
    6f58:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6f5c:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    6f60:	adrp	x3, 51000 <PyInit__decimal@@Base+0x4a54c>
    6f64:	add	x1, x1, #0x191
    6f68:	add	x2, x2, #0x199
    6f6c:	add	x3, x3, #0x7f8
    6f70:	mov	x4, x22
    6f74:	bl	66d0 <PyObject_CallFunction@plt>
    6f78:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    6f7c:	str	x0, [x8, #1472]
    6f80:	cbz	x0, 74fc <PyInit__decimal@@Base+0xa48>
    6f84:	ldr	x8, [x20]
    6f88:	subs	x8, x8, #0x1
    6f8c:	str	x8, [x20]
    6f90:	b.ne	6f9c <PyInit__decimal@@Base+0x4e8>  // b.any
    6f94:	mov	x0, x20
    6f98:	bl	6510 <_Py_Dealloc@plt>
    6f9c:	ldr	x8, [x21]
    6fa0:	subs	x8, x8, #0x1
    6fa4:	str	x8, [x21]
    6fa8:	b.ne	6fb4 <PyInit__decimal@@Base+0x500>  // b.any
    6fac:	mov	x0, x21
    6fb0:	bl	6510 <_Py_Dealloc@plt>
    6fb4:	ldr	x8, [x22]
    6fb8:	subs	x8, x8, #0x1
    6fbc:	str	x8, [x22]
    6fc0:	b.ne	6fcc <PyInit__decimal@@Base+0x518>  // b.any
    6fc4:	mov	x0, x22
    6fc8:	bl	6510 <_Py_Dealloc@plt>
    6fcc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    6fd0:	add	x0, x0, #0x998
    6fd4:	mov	w1, #0x3f5                 	// #1013
    6fd8:	bl	6730 <PyModule_Create2@plt>
    6fdc:	stur	x0, [x29, #-8]
    6fe0:	cbz	x0, 7490 <PyInit__decimal@@Base+0x9dc>
    6fe4:	ldr	x8, [x23]
    6fe8:	ldur	x0, [x29, #-8]
    6fec:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    6ff0:	add	x1, x1, #0xc37
    6ff4:	add	x8, x8, #0x1
    6ff8:	mov	x2, x23
    6ffc:	str	x8, [x23]
    7000:	bl	68d0 <PyModule_AddObject@plt>
    7004:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    7008:	ldr	x8, [x24]
    700c:	ldur	x0, [x29, #-8]
    7010:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    7014:	mov	x2, x24
    7018:	add	x8, x8, #0x1
    701c:	add	x1, x1, #0xa3d
    7020:	str	x8, [x24]
    7024:	bl	68d0 <PyModule_AddObject@plt>
    7028:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    702c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7030:	ldr	x2, [x8, #1464]
    7034:	ldur	x0, [x29, #-8]
    7038:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    703c:	add	x1, x1, #0x150
    7040:	ldr	x8, [x2]
    7044:	add	x8, x8, #0x1
    7048:	str	x8, [x2]
    704c:	bl	68d0 <PyModule_AddObject@plt>
    7050:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    7054:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    7058:	ldr	x8, [x8, #3960]
    705c:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    7060:	add	x0, x0, #0x1a4
    7064:	mov	x2, xzr
    7068:	ldr	x1, [x8]
    706c:	bl	6650 <PyErr_NewException@plt>
    7070:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    7074:	str	x0, [x22, #1480]
    7078:	cbz	x0, 7494 <PyInit__decimal@@Base+0x9e0>
    707c:	ldr	x8, [x0]
    7080:	mov	x2, x0
    7084:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    7088:	add	x1, x1, #0x1ac
    708c:	add	x8, x8, #0x1
    7090:	str	x8, [x0]
    7094:	ldur	x0, [x29, #-8]
    7098:	bl	68d0 <PyModule_AddObject@plt>
    709c:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    70a0:	mov	w0, #0x9                   	// #9
    70a4:	bl	66e0 <PyTuple_New@plt>
    70a8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    70ac:	str	x0, [x8, #1488]
    70b0:	cbz	x0, 7494 <PyInit__decimal@@Base+0x9e0>
    70b4:	adrp	x21, 50000 <PyInit__decimal@@Base+0x4954c>
    70b8:	adrp	x25, 50000 <PyInit__decimal@@Base+0x4954c>
    70bc:	ldr	x21, [x21, #4016]
    70c0:	ldr	x25, [x25, #3936]
    70c4:	adrp	x23, 51000 <PyInit__decimal@@Base+0x4a54c>
    70c8:	adrp	x26, 51000 <PyInit__decimal@@Base+0x4a54c>
    70cc:	adrp	x27, 51000 <PyInit__decimal@@Base+0x4a54c>
    70d0:	add	x23, x23, #0xb18
    70d4:	mov	w24, #0x58                  	// #88
    70d8:	add	x26, x26, #0xad8
    70dc:	add	x27, x27, #0xab8
    70e0:	ldur	w8, [x23, #-8]
    70e4:	cmp	w8, #0x7ff
    70e8:	b.gt	7108 <PyInit__decimal@@Base+0x654>
    70ec:	cmp	w8, #0x4
    70f0:	b.eq	7130 <PyInit__decimal@@Base+0x67c>  // b.none
    70f4:	cmp	w8, #0x400
    70f8:	b.ne	7150 <PyInit__decimal@@Base+0x69c>  // b.any
    70fc:	ldr	x1, [x22, #1480]
    7100:	ldr	x2, [x25]
    7104:	b	7144 <PyInit__decimal@@Base+0x690>
    7108:	cmp	w8, #0x800
    710c:	b.eq	713c <PyInit__decimal@@Base+0x688>  // b.none
    7110:	cmp	w8, #0x4, lsl #12
    7114:	b.ne	7150 <PyInit__decimal@@Base+0x69c>  // b.any
    7118:	ldr	x1, [x27, #32]
    711c:	ldr	x2, [x27, #64]
    7120:	ldr	x3, [x27]
    7124:	mov	w0, #0x3                   	// #3
    7128:	bl	69a0 <PyTuple_Pack@plt>
    712c:	b	715c <PyInit__decimal@@Base+0x6a8>
    7130:	ldr	x1, [x22, #1480]
    7134:	ldr	x2, [x21]
    7138:	b	7144 <PyInit__decimal@@Base+0x690>
    713c:	ldr	x1, [x26]
    7140:	ldr	x2, [x26, #32]
    7144:	mov	w0, #0x2                   	// #2
    7148:	bl	69a0 <PyTuple_Pack@plt>
    714c:	b	715c <PyInit__decimal@@Base+0x6a8>
    7150:	ldr	x1, [x22, #1480]
    7154:	mov	w0, #0x1                   	// #1
    7158:	bl	69a0 <PyTuple_Pack@plt>
    715c:	mov	x20, x0
    7160:	cbz	x0, 74a0 <PyInit__decimal@@Base+0x9ec>
    7164:	ldur	x0, [x23, #-16]
    7168:	mov	x1, x20
    716c:	mov	x2, xzr
    7170:	bl	6650 <PyErr_NewException@plt>
    7174:	str	x0, [x23]
    7178:	cbz	x0, 7494 <PyInit__decimal@@Base+0x9e0>
    717c:	ldr	x8, [x20]
    7180:	mov	x2, x0
    7184:	subs	x8, x8, #0x1
    7188:	str	x8, [x20]
    718c:	b.ne	719c <PyInit__decimal@@Base+0x6e8>  // b.any
    7190:	mov	x0, x20
    7194:	bl	6510 <_Py_Dealloc@plt>
    7198:	ldr	x2, [x23]
    719c:	ldr	x8, [x2]
    71a0:	ldur	x0, [x29, #-8]
    71a4:	add	x8, x8, #0x1
    71a8:	str	x8, [x2]
    71ac:	ldur	x1, [x23, #-24]
    71b0:	bl	68d0 <PyModule_AddObject@plt>
    71b4:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    71b8:	ldr	x9, [x23], #-32
    71bc:	ldr	x8, [x9]
    71c0:	add	x8, x8, #0x1
    71c4:	str	x8, [x9]
    71c8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    71cc:	ldr	x8, [x8, #1488]
    71d0:	str	x9, [x8, x24]
    71d4:	sub	x24, x24, #0x8
    71d8:	cmp	x24, #0x10
    71dc:	b.ne	70e0 <PyInit__decimal@@Base+0x62c>  // b.any
    71e0:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    71e4:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    71e8:	add	x8, x8, #0xb58
    71ec:	ldr	x1, [x22, #2584]
    71f0:	ldr	x9, [x8, #8]
    71f4:	str	x1, [x8]
    71f8:	cbz	x9, 7504 <PyInit__decimal@@Base+0xa50>
    71fc:	adrp	x23, 51000 <PyInit__decimal@@Base+0x4a54c>
    7200:	add	x23, x23, #0xb80
    7204:	ldur	w8, [x23, #-16]
    7208:	cmp	w8, #0x10
    720c:	b.ne	7220 <PyInit__decimal@@Base+0x76c>  // b.any
    7210:	ldr	x2, [x21]
    7214:	mov	w0, #0x2                   	// #2
    7218:	bl	69a0 <PyTuple_Pack@plt>
    721c:	b	7228 <PyInit__decimal@@Base+0x774>
    7220:	mov	w0, #0x1                   	// #1
    7224:	bl	69a0 <PyTuple_Pack@plt>
    7228:	mov	x20, x0
    722c:	cbz	x0, 74a0 <PyInit__decimal@@Base+0x9ec>
    7230:	ldur	x0, [x23, #-24]
    7234:	mov	x1, x20
    7238:	mov	x2, xzr
    723c:	bl	6650 <PyErr_NewException@plt>
    7240:	stur	x0, [x23, #-8]
    7244:	cbz	x0, 7494 <PyInit__decimal@@Base+0x9e0>
    7248:	ldr	x8, [x20]
    724c:	mov	x2, x0
    7250:	subs	x8, x8, #0x1
    7254:	str	x8, [x20]
    7258:	b.ne	7268 <PyInit__decimal@@Base+0x7b4>  // b.any
    725c:	mov	x0, x20
    7260:	bl	6510 <_Py_Dealloc@plt>
    7264:	ldur	x2, [x23, #-8]
    7268:	ldr	x8, [x2]
    726c:	ldur	x0, [x29, #-8]
    7270:	add	x8, x8, #0x1
    7274:	str	x8, [x2]
    7278:	ldur	x1, [x23, #-32]
    727c:	bl	68d0 <PyModule_AddObject@plt>
    7280:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    7284:	ldr	x8, [x23]
    7288:	cbz	x8, 7504 <PyInit__decimal@@Base+0xa50>
    728c:	ldr	x1, [x22, #2584]
    7290:	add	x23, x23, #0x20
    7294:	b	7204 <PyInit__decimal@@Base+0x750>
    7298:	mov	x19, x22
    729c:	stur	xzr, [x29, #-8]
    72a0:	mov	x20, xzr
    72a4:	mov	x21, xzr
    72a8:	mov	x22, xzr
    72ac:	ldr	x0, [x24, #1456]
    72b0:	cbz	x0, 72cc <PyInit__decimal@@Base+0x818>
    72b4:	str	xzr, [x24, #1456]
    72b8:	ldr	x8, [x0]
    72bc:	subs	x8, x8, #0x1
    72c0:	str	x8, [x0]
    72c4:	b.ne	72cc <PyInit__decimal@@Base+0x818>  // b.any
    72c8:	bl	6510 <_Py_Dealloc@plt>
    72cc:	cbz	x20, 72e8 <PyInit__decimal@@Base+0x834>
    72d0:	ldr	x8, [x20]
    72d4:	subs	x8, x8, #0x1
    72d8:	str	x8, [x20]
    72dc:	b.ne	72e8 <PyInit__decimal@@Base+0x834>  // b.any
    72e0:	mov	x0, x20
    72e4:	bl	6510 <_Py_Dealloc@plt>
    72e8:	cbz	x21, 7304 <PyInit__decimal@@Base+0x850>
    72ec:	ldr	x8, [x21]
    72f0:	subs	x8, x8, #0x1
    72f4:	str	x8, [x21]
    72f8:	b.ne	7304 <PyInit__decimal@@Base+0x850>  // b.any
    72fc:	mov	x0, x21
    7300:	bl	6510 <_Py_Dealloc@plt>
    7304:	cbz	x22, 7320 <PyInit__decimal@@Base+0x86c>
    7308:	ldr	x8, [x22]
    730c:	subs	x8, x8, #0x1
    7310:	str	x8, [x22]
    7314:	b.ne	7320 <PyInit__decimal@@Base+0x86c>  // b.any
    7318:	mov	x0, x22
    731c:	bl	6510 <_Py_Dealloc@plt>
    7320:	ldr	x0, [x28, #1488]
    7324:	cbz	x0, 7340 <PyInit__decimal@@Base+0x88c>
    7328:	str	xzr, [x28, #1488]
    732c:	ldr	x8, [x0]
    7330:	subs	x8, x8, #0x1
    7334:	str	x8, [x0]
    7338:	b.ne	7340 <PyInit__decimal@@Base+0x88c>  // b.any
    733c:	bl	6510 <_Py_Dealloc@plt>
    7340:	ldr	x0, [x19, #1464]
    7344:	cbz	x0, 7360 <PyInit__decimal@@Base+0x8ac>
    7348:	str	xzr, [x19, #1464]
    734c:	ldr	x8, [x0]
    7350:	subs	x8, x8, #0x1
    7354:	str	x8, [x0]
    7358:	b.ne	7360 <PyInit__decimal@@Base+0x8ac>  // b.any
    735c:	bl	6510 <_Py_Dealloc@plt>
    7360:	ldr	x0, [x27, #1496]
    7364:	cbz	x0, 7380 <PyInit__decimal@@Base+0x8cc>
    7368:	str	xzr, [x27, #1496]
    736c:	ldr	x8, [x0]
    7370:	subs	x8, x8, #0x1
    7374:	str	x8, [x0]
    7378:	b.ne	7380 <PyInit__decimal@@Base+0x8cc>  // b.any
    737c:	bl	6510 <_Py_Dealloc@plt>
    7380:	ldr	x0, [x26, #1504]
    7384:	ldur	x19, [x29, #-8]
    7388:	cbz	x0, 73a4 <PyInit__decimal@@Base+0x8f0>
    738c:	str	xzr, [x26, #1504]
    7390:	ldr	x8, [x0]
    7394:	subs	x8, x8, #0x1
    7398:	str	x8, [x0]
    739c:	b.ne	73a4 <PyInit__decimal@@Base+0x8f0>  // b.any
    73a0:	bl	6510 <_Py_Dealloc@plt>
    73a4:	ldr	x0, [x25, #1512]
    73a8:	cbz	x0, 73c4 <PyInit__decimal@@Base+0x910>
    73ac:	str	xzr, [x25, #1512]
    73b0:	ldr	x8, [x0]
    73b4:	subs	x8, x8, #0x1
    73b8:	str	x8, [x0]
    73bc:	b.ne	73c4 <PyInit__decimal@@Base+0x910>  // b.any
    73c0:	bl	6510 <_Py_Dealloc@plt>
    73c4:	ldr	x0, [x23, #1400]
    73c8:	cbz	x0, 73e4 <PyInit__decimal@@Base+0x930>
    73cc:	str	xzr, [x23, #1400]
    73d0:	ldr	x8, [x0]
    73d4:	subs	x8, x8, #0x1
    73d8:	str	x8, [x0]
    73dc:	b.ne	73e4 <PyInit__decimal@@Base+0x930>  // b.any
    73e0:	bl	6510 <_Py_Dealloc@plt>
    73e4:	cbz	x19, 7400 <PyInit__decimal@@Base+0x94c>
    73e8:	ldr	x8, [x19]
    73ec:	subs	x8, x8, #0x1
    73f0:	str	x8, [x19]
    73f4:	b.ne	7400 <PyInit__decimal@@Base+0x94c>  // b.any
    73f8:	mov	x0, x19
    73fc:	bl	6510 <_Py_Dealloc@plt>
    7400:	mov	x0, xzr
    7404:	ldp	x20, x19, [sp, #112]
    7408:	ldp	x22, x21, [sp, #96]
    740c:	ldp	x24, x23, [sp, #80]
    7410:	ldp	x26, x25, [sp, #64]
    7414:	ldp	x28, x27, [sp, #48]
    7418:	ldp	x29, x30, [sp, #32]
    741c:	add	sp, sp, #0x80
    7420:	ret
    7424:	mov	x20, xzr
    7428:	stur	xzr, [x29, #-8]
    742c:	ldr	x8, [x21]
    7430:	mov	x19, x22
    7434:	subs	x8, x8, #0x1
    7438:	str	x8, [x21]
    743c:	b.ne	72a4 <PyInit__decimal@@Base+0x7f0>  // b.any
    7440:	mov	x0, x21
    7444:	bl	6510 <_Py_Dealloc@plt>
    7448:	b	72a4 <PyInit__decimal@@Base+0x7f0>
    744c:	mov	x19, x22
    7450:	stur	xzr, [x29, #-8]
    7454:	mov	x20, xzr
    7458:	b	72a8 <PyInit__decimal@@Base+0x7f4>
    745c:	ldr	x8, [x20]
    7460:	subs	x8, x8, #0x1
    7464:	str	x8, [x20]
    7468:	b.ne	7474 <PyInit__decimal@@Base+0x9c0>  // b.any
    746c:	mov	x0, x20
    7470:	bl	6510 <_Py_Dealloc@plt>
    7474:	cbz	x19, 7490 <PyInit__decimal@@Base+0x9dc>
    7478:	ldr	x8, [x19]
    747c:	subs	x8, x8, #0x1
    7480:	str	x8, [x19]
    7484:	b.ne	7490 <PyInit__decimal@@Base+0x9dc>  // b.any
    7488:	mov	x0, x19
    748c:	bl	6510 <_Py_Dealloc@plt>
    7490:	stur	xzr, [x29, #-8]
    7494:	mov	x20, xzr
    7498:	b	74a0 <PyInit__decimal@@Base+0x9ec>
    749c:	stur	xzr, [x29, #-8]
    74a0:	mov	x21, xzr
    74a4:	mov	x22, xzr
    74a8:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
    74ac:	adrp	x25, 53000 <PyInit__decimal@@Base+0x4c54c>
    74b0:	adrp	x26, 53000 <PyInit__decimal@@Base+0x4c54c>
    74b4:	adrp	x27, 53000 <PyInit__decimal@@Base+0x4c54c>
    74b8:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
    74bc:	adrp	x28, 53000 <PyInit__decimal@@Base+0x4c54c>
    74c0:	adrp	x24, 53000 <PyInit__decimal@@Base+0x4c54c>
    74c4:	ldr	x0, [x24, #1456]
    74c8:	cbnz	x0, 72b4 <PyInit__decimal@@Base+0x800>
    74cc:	b	72cc <PyInit__decimal@@Base+0x818>
    74d0:	stur	xzr, [x29, #-8]
    74d4:	b	74a4 <PyInit__decimal@@Base+0x9f0>
    74d8:	stur	xzr, [x29, #-8]
    74dc:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
    74e0:	adrp	x25, 53000 <PyInit__decimal@@Base+0x4c54c>
    74e4:	adrp	x26, 53000 <PyInit__decimal@@Base+0x4c54c>
    74e8:	adrp	x27, 53000 <PyInit__decimal@@Base+0x4c54c>
    74ec:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    74f0:	adrp	x28, 53000 <PyInit__decimal@@Base+0x4c54c>
    74f4:	adrp	x24, 53000 <PyInit__decimal@@Base+0x4c54c>
    74f8:	b	742c <PyInit__decimal@@Base+0x978>
    74fc:	stur	xzr, [x29, #-8]
    7500:	b	74a8 <PyInit__decimal@@Base+0x9f4>
    7504:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    7508:	add	x0, x0, #0x4b8
    750c:	mov	x1, xzr
    7510:	bl	6780 <PyObject_CallObject@plt>
    7514:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7518:	str	x0, [x8, #1496]
    751c:	cbz	x0, 7494 <PyInit__decimal@@Base+0x9e0>
    7520:	ldr	x8, [x0]
    7524:	mov	x2, x0
    7528:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    752c:	add	x1, x1, #0x1bd
    7530:	add	x8, x8, #0x1
    7534:	str	x8, [x0]
    7538:	ldur	x0, [x29, #-8]
    753c:	bl	68d0 <PyModule_AddObject@plt>
    7540:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    7544:	adrp	x2, 50000 <PyInit__decimal@@Base+0x4954c>
    7548:	ldr	x2, [x2, #4024]
    754c:	ldur	x0, [x29, #-8]
    7550:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    7554:	add	x1, x1, #0x1cc
    7558:	ldr	x8, [x2]
    755c:	add	x8, x8, #0x1
    7560:	str	x8, [x2]
    7564:	bl	68d0 <PyModule_AddObject@plt>
    7568:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    756c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    7570:	add	x0, x0, #0x4b8
    7574:	mov	x1, xzr
    7578:	bl	6780 <PyObject_CallObject@plt>
    757c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7580:	str	x0, [x8, #1504]
    7584:	cbz	x0, 7494 <PyInit__decimal@@Base+0x9e0>
    7588:	mov	w9, #0x4bbf                	// #19391
    758c:	adrp	x20, 3d000 <PyInit__decimal@@Base+0x3654c>
    7590:	str	w9, [x0, #40]
    7594:	mov	x9, #0x100000000           	// #4294967296
    7598:	add	x20, x20, #0xef0
    759c:	str	x9, [x0, #56]
    75a0:	ldr	x9, [x0]
    75a4:	mov	w8, #0x9                   	// #9
    75a8:	ldr	q0, [x20]
    75ac:	str	x8, [x0, #16]
    75b0:	mov	w8, #0x4                   	// #4
    75b4:	str	w8, [x0, #52]
    75b8:	mov	w8, #0x1                   	// #1
    75bc:	str	w8, [x0, #80]
    75c0:	add	x8, x9, #0x1
    75c4:	mov	x2, x0
    75c8:	stur	xzr, [x0, #44]
    75cc:	stur	q0, [x0, #24]
    75d0:	str	x8, [x0]
    75d4:	ldur	x0, [x29, #-8]
    75d8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    75dc:	add	x1, x1, #0x1d9
    75e0:	str	q0, [sp]
    75e4:	bl	68d0 <PyModule_AddObject@plt>
    75e8:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    75ec:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    75f0:	add	x0, x0, #0x4b8
    75f4:	mov	x1, xzr
    75f8:	bl	6780 <PyObject_CallObject@plt>
    75fc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7600:	str	x0, [x8, #1512]
    7604:	cbz	x0, 7494 <PyInit__decimal@@Base+0x9e0>
    7608:	ldr	q0, [sp]
    760c:	ldr	x11, [x0]
    7610:	ldr	w9, [x20, #36]
    7614:	mov	w8, #0x9                   	// #9
    7618:	stur	q0, [x0, #24]
    761c:	ldur	q0, [x20, #20]
    7620:	mov	w10, #0x1                   	// #1
    7624:	str	x8, [x0, #16]
    7628:	add	x8, x11, #0x1
    762c:	mov	x2, x0
    7630:	str	wzr, [x0, #40]
    7634:	str	w10, [x0, #80]
    7638:	str	w9, [x0, #60]
    763c:	stur	q0, [x0, #44]
    7640:	str	x8, [x0]
    7644:	ldur	x0, [x29, #-8]
    7648:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    764c:	add	x1, x1, #0x1e6
    7650:	bl	68d0 <PyModule_AddObject@plt>
    7654:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    7658:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
    765c:	movk	x0, #0xb6b3, lsl #32
    7660:	movk	x0, #0xde0, lsl #48
    7664:	bl	65e0 <PyLong_FromSsize_t@plt>
    7668:	mov	x21, x0
    766c:	cbz	x0, 77b0 <PyInit__decimal@@Base+0xcfc>
    7670:	ldur	x0, [x29, #-8]
    7674:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
    7678:	add	x1, x1, #0x71
    767c:	mov	x2, x21
    7680:	bl	68d0 <PyModule_AddObject@plt>
    7684:	tbnz	w0, #31, 77b8 <PyInit__decimal@@Base+0xd04>
    7688:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
    768c:	movk	x0, #0xb6b3, lsl #32
    7690:	movk	x0, #0xde0, lsl #48
    7694:	bl	65e0 <PyLong_FromSsize_t@plt>
    7698:	mov	x21, x0
    769c:	cbz	x0, 77b0 <PyInit__decimal@@Base+0xcfc>
    76a0:	ldur	x0, [x29, #-8]
    76a4:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
    76a8:	add	x1, x1, #0x7a
    76ac:	mov	x2, x21
    76b0:	bl	68d0 <PyModule_AddObject@plt>
    76b4:	tbnz	w0, #31, 77b8 <PyInit__decimal@@Base+0xd04>
    76b8:	mov	x0, #0x1                   	// #1
    76bc:	movk	x0, #0x589c, lsl #16
    76c0:	movk	x0, #0x494c, lsl #32
    76c4:	movk	x0, #0xf21f, lsl #48
    76c8:	bl	65e0 <PyLong_FromSsize_t@plt>
    76cc:	mov	x21, x0
    76d0:	cbz	x0, 77b0 <PyInit__decimal@@Base+0xcfc>
    76d4:	ldur	x0, [x29, #-8]
    76d8:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
    76dc:	add	x1, x1, #0x83
    76e0:	mov	x2, x21
    76e4:	bl	68d0 <PyModule_AddObject@plt>
    76e8:	tbnz	w0, #31, 77b8 <PyInit__decimal@@Base+0xd04>
    76ec:	mov	x0, #0x3                   	// #3
    76f0:	movk	x0, #0xb138, lsl #16
    76f4:	movk	x0, #0x9298, lsl #32
    76f8:	movk	x0, #0xe43e, lsl #48
    76fc:	bl	65e0 <PyLong_FromSsize_t@plt>
    7700:	mov	x21, x0
    7704:	cbz	x0, 77b0 <PyInit__decimal@@Base+0xcfc>
    7708:	ldur	x0, [x29, #-8]
    770c:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
    7710:	add	x1, x1, #0x8c
    7714:	mov	x2, x21
    7718:	bl	68d0 <PyModule_AddObject@plt>
    771c:	tbnz	w0, #31, 77b8 <PyInit__decimal@@Base+0xd04>
    7720:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    7724:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    7728:	mov	x20, xzr
    772c:	add	x21, x21, #0x4e0
    7730:	add	x22, x22, #0x5f0
    7734:	ldr	x0, [x21, x20]
    7738:	bl	68c0 <PyUnicode_InternFromString@plt>
    773c:	str	x0, [x22, x20]
    7740:	cbz	x0, 7494 <PyInit__decimal@@Base+0x9e0>
    7744:	ldr	x8, [x0]
    7748:	mov	x2, x0
    774c:	add	x8, x8, #0x1
    7750:	str	x8, [x0]
    7754:	ldr	x1, [x21, x20]
    7758:	ldur	x0, [x29, #-8]
    775c:	bl	68d0 <PyModule_AddObject@plt>
    7760:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    7764:	add	x20, x20, #0x8
    7768:	cmp	x20, #0x40
    776c:	b.ne	7734 <PyInit__decimal@@Base+0xc80>  // b.any
    7770:	ldur	x0, [x29, #-8]
    7774:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    7778:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    777c:	add	x1, x1, #0x1f6
    7780:	add	x2, x2, #0x202
    7784:	bl	68b0 <PyModule_AddStringConstant@plt>
    7788:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    778c:	bl	20764 <PyInit__decimal@@Base+0x19cb0>
    7790:	mov	x2, x0
    7794:	ldur	x0, [x29, #-8]
    7798:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    779c:	add	x1, x1, #0x207
    77a0:	bl	68b0 <PyModule_AddStringConstant@plt>
    77a4:	tbnz	w0, #31, 7494 <PyInit__decimal@@Base+0x9e0>
    77a8:	ldur	x0, [x29, #-8]
    77ac:	b	7404 <PyInit__decimal@@Base+0x950>
    77b0:	mov	x20, xzr
    77b4:	b	74a4 <PyInit__decimal@@Base+0x9f0>
    77b8:	mov	x20, xzr
    77bc:	b	74dc <PyInit__decimal@@Base+0xa28>
    77c0:	ret
    77c4:	stp	x29, x30, [sp, #-32]!
    77c8:	str	x19, [sp, #16]
    77cc:	mov	x29, sp
    77d0:	mov	x19, x0
    77d4:	add	x0, x0, #0x18
    77d8:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    77dc:	ldr	x8, [x19, #8]
    77e0:	mov	x0, x19
    77e4:	ldr	x19, [sp, #16]
    77e8:	ldr	x1, [x8, #320]
    77ec:	ldp	x29, x30, [sp], #32
    77f0:	br	x1
    77f4:	sub	sp, sp, #0x40
    77f8:	stp	x29, x30, [sp, #16]
    77fc:	stp	x22, x21, [sp, #32]
    7800:	stp	x20, x19, [sp, #48]
    7804:	add	x29, sp, #0x10
    7808:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    780c:	ldr	x8, [x21, #1400]
    7810:	mov	x19, x0
    7814:	add	x2, sp, #0x8
    7818:	mov	x1, xzr
    781c:	mov	x0, x8
    7820:	bl	6680 <PyContextVar_Get@plt>
    7824:	tbnz	w0, #31, 78ec <PyInit__decimal@@Base+0xe38>
    7828:	ldr	x20, [sp, #8]
    782c:	cbz	x20, 7884 <PyInit__decimal@@Base+0xdd0>
    7830:	ldr	x8, [x20]
    7834:	subs	x8, x8, #0x1
    7838:	str	x8, [x20]
    783c:	b.ne	7848 <PyInit__decimal@@Base+0xd94>  // b.any
    7840:	mov	x0, x20
    7844:	bl	6510 <_Py_Dealloc@plt>
    7848:	ldr	w1, [x20, #80]
    784c:	add	x0, x19, #0x18
    7850:	bl	1e4d4 <PyInit__decimal@@Base+0x17a20>
    7854:	cbz	x0, 78e8 <PyInit__decimal@@Base+0xe34>
    7858:	mov	x19, x0
    785c:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    7860:	add	x0, x0, #0x255
    7864:	mov	x1, x19
    7868:	bl	63d0 <PyUnicode_FromFormat@plt>
    786c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7870:	ldr	x8, [x8, #1376]
    7874:	mov	x20, x0
    7878:	mov	x0, x19
    787c:	blr	x8
    7880:	b	78f0 <PyInit__decimal@@Base+0xe3c>
    7884:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7888:	ldr	x22, [x8, #1496]
    788c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    7890:	add	x0, x0, #0x4b8
    7894:	mov	x1, xzr
    7898:	bl	6780 <PyObject_CallObject@plt>
    789c:	cbz	x0, 78ec <PyInit__decimal@@Base+0xe38>
    78a0:	ldp	q1, q0, [x22, #32]
    78a4:	ldr	q2, [x22, #16]
    78a8:	mov	x20, x0
    78ac:	mov	x1, x20
    78b0:	stp	q1, q0, [x0, #32]
    78b4:	str	q2, [x0, #16]
    78b8:	ldr	w8, [x22, #80]
    78bc:	stp	wzr, wzr, [x0, #44]
    78c0:	str	w8, [x0, #80]
    78c4:	ldr	x0, [x21, #1400]
    78c8:	bl	65c0 <PyContextVar_Set@plt>
    78cc:	cbz	x0, 7908 <PyInit__decimal@@Base+0xe54>
    78d0:	ldr	x8, [x0]
    78d4:	subs	x8, x8, #0x1
    78d8:	str	x8, [x0]
    78dc:	b.ne	7830 <PyInit__decimal@@Base+0xd7c>  // b.any
    78e0:	bl	6510 <_Py_Dealloc@plt>
    78e4:	b	7830 <PyInit__decimal@@Base+0xd7c>
    78e8:	bl	6520 <PyErr_NoMemory@plt>
    78ec:	mov	x20, xzr
    78f0:	mov	x0, x20
    78f4:	ldp	x20, x19, [sp, #48]
    78f8:	ldp	x22, x21, [sp, #32]
    78fc:	ldp	x29, x30, [sp, #16]
    7900:	add	sp, sp, #0x40
    7904:	ret
    7908:	ldr	x8, [x20]
    790c:	subs	x8, x8, #0x1
    7910:	str	x8, [x20]
    7914:	b.ne	78ec <PyInit__decimal@@Base+0xe38>  // b.any
    7918:	mov	x0, x20
    791c:	bl	6510 <_Py_Dealloc@plt>
    7920:	b	78ec <PyInit__decimal@@Base+0xe38>
    7924:	sub	sp, sp, #0x120
    7928:	stp	x29, x30, [sp, #224]
    792c:	stp	x28, x23, [sp, #240]
    7930:	stp	x22, x21, [sp, #256]
    7934:	stp	x20, x19, [sp, #272]
    7938:	add	x29, sp, #0xe0
    793c:	ldr	x22, [x0, #16]
    7940:	cmn	x22, #0x1
    7944:	b.ne	7c10 <PyInit__decimal@@Base+0x115c>  // b.any
    7948:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
    794c:	mov	w10, #0x90                  	// #144
    7950:	stur	x9, [x29, #-8]
    7954:	mov	w9, #0x1                   	// #1
    7958:	dup	v0.2d, x9
    795c:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3154c>
    7960:	sturb	w10, [x29, #-56]
    7964:	strb	w10, [sp, #112]
    7968:	strb	w10, [sp, #56]
    796c:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3154c>
    7970:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    7974:	mov	x19, x0
    7978:	ldr	q1, [x9, #3248]
    797c:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
    7980:	ldr	q2, [x10, #3264]
    7984:	ldr	x0, [x21, #1400]
    7988:	movk	x9, #0x1ccc, lsl #48
    798c:	stur	x9, [x29, #-64]
    7990:	mov	w9, #0xa                   	// #10
    7994:	add	x10, sp, #0x68
    7998:	add	x8, sp, #0x70
    799c:	str	x9, [sp, #104]
    79a0:	sub	x9, x29, #0x8
    79a4:	str	x10, [sp, #96]
    79a8:	sub	x10, x29, #0x40
    79ac:	mov	x2, sp
    79b0:	mov	x1, xzr
    79b4:	stur	q0, [x8, #24]
    79b8:	str	x10, [sp, #152]
    79bc:	stp	q2, q0, [sp, #64]
    79c0:	stp	q1, q0, [x8, #64]
    79c4:	stur	x9, [x29, #-16]
    79c8:	stur	q1, [sp, #120]
    79cc:	str	wzr, [sp, #52]
    79d0:	bl	6680 <PyContextVar_Get@plt>
    79d4:	tbnz	w0, #31, 7c08 <PyInit__decimal@@Base+0x1154>
    79d8:	ldr	x20, [sp]
    79dc:	cbz	x20, 7a30 <PyInit__decimal@@Base+0xf7c>
    79e0:	ldr	x8, [x20]
    79e4:	subs	x8, x8, #0x1
    79e8:	str	x8, [x20]
    79ec:	b.ne	79f8 <PyInit__decimal@@Base+0xf44>  // b.any
    79f0:	mov	x0, x20
    79f4:	bl	6510 <_Py_Dealloc@plt>
    79f8:	add	x22, x19, #0x18
    79fc:	mov	x0, x22
    7a00:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
    7a04:	cbz	w0, 7a94 <PyInit__decimal@@Base+0xfe0>
    7a08:	mov	x0, x22
    7a0c:	bl	20c24 <PyInit__decimal@@Base+0x1a170>
    7a10:	cbz	w0, 7bc4 <PyInit__decimal@@Base+0x1110>
    7a14:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    7a18:	ldr	x8, [x8, #3936]
    7a1c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    7a20:	add	x1, x1, #0x344
    7a24:	ldr	x0, [x8]
    7a28:	bl	6590 <PyErr_SetString@plt>
    7a2c:	b	7c08 <PyInit__decimal@@Base+0x1154>
    7a30:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7a34:	ldr	x22, [x8, #1496]
    7a38:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    7a3c:	add	x0, x0, #0x4b8
    7a40:	mov	x1, xzr
    7a44:	bl	6780 <PyObject_CallObject@plt>
    7a48:	cbz	x0, 7c08 <PyInit__decimal@@Base+0x1154>
    7a4c:	ldp	q1, q0, [x22, #32]
    7a50:	ldr	q2, [x22, #16]
    7a54:	mov	x20, x0
    7a58:	mov	x1, x20
    7a5c:	stp	q1, q0, [x0, #32]
    7a60:	str	q2, [x0, #16]
    7a64:	ldr	w8, [x22, #80]
    7a68:	stp	wzr, wzr, [x0, #44]
    7a6c:	str	w8, [x0, #80]
    7a70:	ldr	x0, [x21, #1400]
    7a74:	bl	65c0 <PyContextVar_Set@plt>
    7a78:	cbz	x0, 7be0 <PyInit__decimal@@Base+0x112c>
    7a7c:	ldr	x8, [x0]
    7a80:	subs	x8, x8, #0x1
    7a84:	str	x8, [x0]
    7a88:	b.ne	79e0 <PyInit__decimal@@Base+0xf2c>  // b.any
    7a8c:	bl	6510 <_Py_Dealloc@plt>
    7a90:	b	79e0 <PyInit__decimal@@Base+0xf2c>
    7a94:	mov	x0, sp
    7a98:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
    7a9c:	bl	20460 <PyInit__decimal@@Base+0x199ac>
    7aa0:	cbz	x0, 7bd8 <PyInit__decimal@@Base+0x1124>
    7aa4:	mov	x20, x0
    7aa8:	bl	20460 <PyInit__decimal@@Base+0x199ac>
    7aac:	cbz	x0, 7bfc <PyInit__decimal@@Base+0x1148>
    7ab0:	ldr	x8, [x19, #32]
    7ab4:	add	x9, sp, #0x70
    7ab8:	add	x10, sp, #0x38
    7abc:	mov	x2, sp
    7ac0:	cmp	x8, #0x0
    7ac4:	cneg	x1, x8, mi  // mi = first
    7ac8:	add	x3, sp, #0x34
    7acc:	mov	x21, x0
    7ad0:	csel	x23, x10, x9, ge  // ge = tcont
    7ad4:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
    7ad8:	sub	x3, x29, #0x38
    7adc:	mov	x4, sp
    7ae0:	add	x5, sp, #0x34
    7ae4:	mov	x0, x20
    7ae8:	mov	x1, x23
    7aec:	mov	x2, x21
    7af0:	bl	303d0 <PyInit__decimal@@Base+0x2991c>
    7af4:	add	x2, sp, #0x34
    7af8:	mov	x0, x21
    7afc:	mov	x1, x22
    7b00:	bl	22898 <PyInit__decimal@@Base+0x1bde4>
    7b04:	cbz	w0, 7c44 <PyInit__decimal@@Base+0x1190>
    7b08:	mov	x0, x21
    7b0c:	str	xzr, [x21, #8]
    7b10:	bl	21228 <PyInit__decimal@@Base+0x1a774>
    7b14:	mov	x8, #0x14                  	// #20
    7b18:	movk	x8, #0xa764, lsl #16
    7b1c:	mov	x9, #0xffec                	// #65516
    7b20:	movk	x8, #0xb6b3, lsl #32
    7b24:	movk	x9, #0x589b, lsl #16
    7b28:	movk	x8, #0xde0, lsl #48
    7b2c:	movk	x9, #0x494c, lsl #32
    7b30:	movk	x9, #0xf21f, lsl #48
    7b34:	dup	v0.2d, x8
    7b38:	mov	x3, sp
    7b3c:	add	x4, sp, #0x34
    7b40:	mov	x0, x21
    7b44:	mov	x1, x21
    7b48:	mov	x2, x20
    7b4c:	str	q0, [sp]
    7b50:	str	x9, [sp, #16]
    7b54:	bl	2c080 <PyInit__decimal@@Base+0x255cc>
    7b58:	sub	x2, x29, #0x38
    7b5c:	mov	x3, sp
    7b60:	add	x4, sp, #0x34
    7b64:	mov	x0, x21
    7b68:	mov	x1, x21
    7b6c:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
    7b70:	add	x1, sp, #0x34
    7b74:	mov	x0, x21
    7b78:	bl	225d4 <PyInit__decimal@@Base+0x1bb20>
    7b7c:	mov	x23, x0
    7b80:	mov	x0, x22
    7b84:	bl	20bfc <PyInit__decimal@@Base+0x1a148>
    7b88:	cmp	w0, #0x0
    7b8c:	ldr	w8, [sp, #52]
    7b90:	cneg	x9, x23, eq  // eq = none
    7b94:	cmn	x9, #0x1
    7b98:	mov	x10, #0xfffffffffffffffe    	// #-2
    7b9c:	csel	x22, x10, x9, eq  // eq = none
    7ba0:	cbz	w8, 7c4c <PyInit__decimal@@Base+0x1198>
    7ba4:	tbnz	w8, #9, 7c44 <PyInit__decimal@@Base+0x1190>
    7ba8:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    7bac:	ldr	x8, [x8, #3920]
    7bb0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    7bb4:	add	x1, x1, #0x366
    7bb8:	ldr	x0, [x8]
    7bbc:	bl	6590 <PyErr_SetString@plt>
    7bc0:	b	7c48 <PyInit__decimal@@Base+0x1194>
    7bc4:	mov	x0, x22
    7bc8:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
    7bcc:	cbz	w0, 7c2c <PyInit__decimal@@Base+0x1178>
    7bd0:	mov	x22, xzr
    7bd4:	b	7c0c <PyInit__decimal@@Base+0x1158>
    7bd8:	bl	6520 <PyErr_NoMemory@plt>
    7bdc:	b	7c08 <PyInit__decimal@@Base+0x1154>
    7be0:	ldr	x8, [x20]
    7be4:	subs	x8, x8, #0x1
    7be8:	str	x8, [x20]
    7bec:	b.ne	7c08 <PyInit__decimal@@Base+0x1154>  // b.any
    7bf0:	mov	x0, x20
    7bf4:	bl	6510 <_Py_Dealloc@plt>
    7bf8:	b	7c08 <PyInit__decimal@@Base+0x1154>
    7bfc:	bl	6520 <PyErr_NoMemory@plt>
    7c00:	mov	x0, x20
    7c04:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    7c08:	mov	x22, #0xffffffffffffffff    	// #-1
    7c0c:	str	x22, [x19, #16]
    7c10:	mov	x0, x22
    7c14:	ldp	x20, x19, [sp, #272]
    7c18:	ldp	x22, x21, [sp, #256]
    7c1c:	ldp	x28, x23, [sp, #240]
    7c20:	ldp	x29, x30, [sp, #224]
    7c24:	add	sp, sp, #0x120
    7c28:	ret
    7c2c:	mov	x0, x22
    7c30:	bl	20d34 <PyInit__decimal@@Base+0x1a280>
    7c34:	mov	w8, #0xcb2f                	// #52015
    7c38:	movk	w8, #0x4, lsl #16
    7c3c:	smull	x22, w0, w8
    7c40:	b	7c0c <PyInit__decimal@@Base+0x1158>
    7c44:	bl	6520 <PyErr_NoMemory@plt>
    7c48:	mov	x22, #0xffffffffffffffff    	// #-1
    7c4c:	mov	x0, x20
    7c50:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    7c54:	mov	x0, x21
    7c58:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    7c5c:	b	7c0c <PyInit__decimal@@Base+0x1158>
    7c60:	sub	sp, sp, #0x40
    7c64:	stp	x29, x30, [sp, #16]
    7c68:	stp	x22, x21, [sp, #32]
    7c6c:	stp	x20, x19, [sp, #48]
    7c70:	add	x29, sp, #0x10
    7c74:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    7c78:	ldr	x8, [x21, #1400]
    7c7c:	mov	x19, x0
    7c80:	add	x2, sp, #0x8
    7c84:	mov	x1, xzr
    7c88:	mov	x0, x8
    7c8c:	bl	6680 <PyContextVar_Get@plt>
    7c90:	tbnz	w0, #31, 7d58 <PyInit__decimal@@Base+0x12a4>
    7c94:	ldr	x20, [sp, #8]
    7c98:	cbz	x20, 7cf0 <PyInit__decimal@@Base+0x123c>
    7c9c:	ldr	x8, [x20]
    7ca0:	subs	x8, x8, #0x1
    7ca4:	str	x8, [x20]
    7ca8:	b.ne	7cb4 <PyInit__decimal@@Base+0x1200>  // b.any
    7cac:	mov	x0, x20
    7cb0:	bl	6510 <_Py_Dealloc@plt>
    7cb4:	ldr	w2, [x20, #80]
    7cb8:	add	x1, x19, #0x18
    7cbc:	add	x0, sp, #0x8
    7cc0:	bl	1ea34 <PyInit__decimal@@Base+0x17f80>
    7cc4:	tbnz	x0, #63, 7d54 <PyInit__decimal@@Base+0x12a0>
    7cc8:	ldr	x21, [sp, #8]
    7ccc:	mov	w1, #0x7f                  	// #127
    7cd0:	mov	x20, x0
    7cd4:	bl	6990 <PyUnicode_New@plt>
    7cd8:	mov	x19, x0
    7cdc:	cbz	x0, 7d7c <PyInit__decimal@@Base+0x12c8>
    7ce0:	ldr	w8, [x19, #32]
    7ce4:	tbnz	w8, #5, 7d60 <PyInit__decimal@@Base+0x12ac>
    7ce8:	ldr	x0, [x19, #72]
    7cec:	b	7d70 <PyInit__decimal@@Base+0x12bc>
    7cf0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7cf4:	ldr	x22, [x8, #1496]
    7cf8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    7cfc:	add	x0, x0, #0x4b8
    7d00:	mov	x1, xzr
    7d04:	bl	6780 <PyObject_CallObject@plt>
    7d08:	cbz	x0, 7d58 <PyInit__decimal@@Base+0x12a4>
    7d0c:	ldp	q1, q0, [x22, #32]
    7d10:	ldr	q2, [x22, #16]
    7d14:	mov	x20, x0
    7d18:	mov	x1, x20
    7d1c:	stp	q1, q0, [x0, #32]
    7d20:	str	q2, [x0, #16]
    7d24:	ldr	w8, [x22, #80]
    7d28:	stp	wzr, wzr, [x0, #44]
    7d2c:	str	w8, [x0, #80]
    7d30:	ldr	x0, [x21, #1400]
    7d34:	bl	65c0 <PyContextVar_Set@plt>
    7d38:	cbz	x0, 7da4 <PyInit__decimal@@Base+0x12f0>
    7d3c:	ldr	x8, [x0]
    7d40:	subs	x8, x8, #0x1
    7d44:	str	x8, [x0]
    7d48:	b.ne	7c9c <PyInit__decimal@@Base+0x11e8>  // b.any
    7d4c:	bl	6510 <_Py_Dealloc@plt>
    7d50:	b	7c9c <PyInit__decimal@@Base+0x11e8>
    7d54:	bl	6520 <PyErr_NoMemory@plt>
    7d58:	mov	x19, xzr
    7d5c:	b	7d8c <PyInit__decimal@@Base+0x12d8>
    7d60:	add	x9, x19, #0x30
    7d64:	add	x10, x19, #0x48
    7d68:	tst	w8, #0x40
    7d6c:	csel	x0, x10, x9, eq  // eq = none
    7d70:	mov	x1, x21
    7d74:	mov	x2, x20
    7d78:	bl	63c0 <memcpy@plt>
    7d7c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7d80:	ldr	x8, [x8, #1376]
    7d84:	ldr	x0, [sp, #8]
    7d88:	blr	x8
    7d8c:	mov	x0, x19
    7d90:	ldp	x20, x19, [sp, #48]
    7d94:	ldp	x22, x21, [sp, #32]
    7d98:	ldp	x29, x30, [sp, #16]
    7d9c:	add	sp, sp, #0x40
    7da0:	ret
    7da4:	ldr	x8, [x20]
    7da8:	subs	x8, x8, #0x1
    7dac:	str	x8, [x20]
    7db0:	b.ne	7d58 <PyInit__decimal@@Base+0x12a4>  // b.any
    7db4:	mov	x0, x20
    7db8:	bl	6510 <_Py_Dealloc@plt>
    7dbc:	b	7d58 <PyInit__decimal@@Base+0x12a4>
    7dc0:	sub	sp, sp, #0xa0
    7dc4:	stp	d9, d8, [sp, #48]
    7dc8:	stp	x29, x30, [sp, #64]
    7dcc:	str	x27, [sp, #80]
    7dd0:	stp	x26, x25, [sp, #96]
    7dd4:	stp	x24, x23, [sp, #112]
    7dd8:	stp	x22, x21, [sp, #128]
    7ddc:	stp	x20, x19, [sp, #144]
    7de0:	add	x29, sp, #0x30
    7de4:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
    7de8:	mov	x21, x0
    7dec:	ldr	x0, [x23, #1400]
    7df0:	mov	w19, w2
    7df4:	mov	x22, x1
    7df8:	mov	x2, sp
    7dfc:	mov	x1, xzr
    7e00:	str	wzr, [x29, #40]
    7e04:	bl	6680 <PyContextVar_Get@plt>
    7e08:	tbnz	w0, #31, 8064 <PyInit__decimal@@Base+0x15b0>
    7e0c:	ldr	x20, [sp]
    7e10:	cbz	x20, 7f30 <PyInit__decimal@@Base+0x147c>
    7e14:	ldr	x8, [x20]
    7e18:	subs	x8, x8, #0x1
    7e1c:	str	x8, [x20]
    7e20:	b.ne	7e2c <PyInit__decimal@@Base+0x1378>  // b.any
    7e24:	mov	x0, x20
    7e28:	bl	6510 <_Py_Dealloc@plt>
    7e2c:	ldr	x0, [x22, #8]
    7e30:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    7e34:	add	x8, x8, #0x318
    7e38:	cmp	x0, x8
    7e3c:	b.eq	7e50 <PyInit__decimal@@Base+0x139c>  // b.none
    7e40:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    7e44:	add	x1, x1, #0x318
    7e48:	bl	6900 <PyType_IsSubtype@plt>
    7e4c:	cbz	w0, 7fc0 <PyInit__decimal@@Base+0x150c>
    7e50:	ldr	x8, [x22]
    7e54:	mov	x24, x21
    7e58:	add	x8, x8, #0x1
    7e5c:	str	x8, [x22]
    7e60:	cbz	x22, 8068 <PyInit__decimal@@Base+0x15b4>
    7e64:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    7e68:	ldr	x8, [x8, #3912]
    7e6c:	cmp	x22, x8
    7e70:	b.eq	8068 <PyInit__decimal@@Base+0x15b4>  // b.none
    7e74:	cmp	x24, x21
    7e78:	b.ne	7e88 <PyInit__decimal@@Base+0x13d4>  // b.any
    7e7c:	ldr	x8, [x21]
    7e80:	add	x8, x8, #0x1
    7e84:	str	x8, [x21]
    7e88:	add	x21, x24, #0x18
    7e8c:	mov	x0, x21
    7e90:	bl	20c24 <PyInit__decimal@@Base+0x1a170>
    7e94:	add	x26, x22, #0x18
    7e98:	mov	w23, w0
    7e9c:	mov	x0, x26
    7ea0:	bl	20c24 <PyInit__decimal@@Base+0x1a170>
    7ea4:	mov	w25, w0
    7ea8:	add	x2, x29, #0x28
    7eac:	mov	x0, x21
    7eb0:	mov	x1, x26
    7eb4:	bl	23650 <PyInit__decimal@@Base+0x1cb9c>
    7eb8:	ldr	x8, [x24]
    7ebc:	mov	w21, w0
    7ec0:	subs	x8, x8, #0x1
    7ec4:	str	x8, [x24]
    7ec8:	b.ne	7ed4 <PyInit__decimal@@Base+0x1420>  // b.any
    7ecc:	mov	x0, x24
    7ed0:	bl	6510 <_Py_Dealloc@plt>
    7ed4:	ldr	x8, [x22]
    7ed8:	subs	x8, x8, #0x1
    7edc:	str	x8, [x22]
    7ee0:	b.ne	7eec <PyInit__decimal@@Base+0x1438>  // b.any
    7ee4:	mov	x0, x22
    7ee8:	bl	6510 <_Py_Dealloc@plt>
    7eec:	mov	w8, #0x7fffffff            	// #2147483647
    7ef0:	cmp	w21, w8
    7ef4:	b.ne	7f94 <PyInit__decimal@@Base+0x14e0>  // b.any
    7ef8:	orr	w8, w19, #0x1
    7efc:	cmp	w8, #0x3
    7f00:	b.ne	7f0c <PyInit__decimal@@Base+0x1458>  // b.any
    7f04:	orr	w8, w25, w23
    7f08:	cbz	w8, 7f1c <PyInit__decimal@@Base+0x1468>
    7f0c:	ldr	w1, [x29, #40]
    7f10:	mov	x0, x20
    7f14:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    7f18:	cbnz	w0, 8064 <PyInit__decimal@@Base+0x15b0>
    7f1c:	cmp	w19, #0x3
    7f20:	b.ne	8090 <PyInit__decimal@@Base+0x15dc>  // b.any
    7f24:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    7f28:	ldr	x22, [x22, #4024]
    7f2c:	b	8098 <PyInit__decimal@@Base+0x15e4>
    7f30:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    7f34:	ldr	x24, [x8, #1496]
    7f38:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    7f3c:	add	x0, x0, #0x4b8
    7f40:	mov	x1, xzr
    7f44:	bl	6780 <PyObject_CallObject@plt>
    7f48:	cbz	x0, 8064 <PyInit__decimal@@Base+0x15b0>
    7f4c:	ldp	q1, q0, [x24, #32]
    7f50:	ldr	q2, [x24, #16]
    7f54:	mov	x20, x0
    7f58:	mov	x1, x20
    7f5c:	stp	q1, q0, [x0, #32]
    7f60:	str	q2, [x0, #16]
    7f64:	ldr	w8, [x24, #80]
    7f68:	stp	wzr, wzr, [x0, #44]
    7f6c:	str	w8, [x0, #80]
    7f70:	ldr	x0, [x23, #1400]
    7f74:	bl	65c0 <PyContextVar_Set@plt>
    7f78:	cbz	x0, 804c <PyInit__decimal@@Base+0x1598>
    7f7c:	ldr	x8, [x0]
    7f80:	subs	x8, x8, #0x1
    7f84:	str	x8, [x0]
    7f88:	b.ne	7e14 <PyInit__decimal@@Base+0x1360>  // b.any
    7f8c:	bl	6510 <_Py_Dealloc@plt>
    7f90:	b	7e14 <PyInit__decimal@@Base+0x1360>
    7f94:	cmp	w19, #0x5
    7f98:	b.hi	80dc <PyInit__decimal@@Base+0x1628>  // b.pmore
    7f9c:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3154c>
    7fa0:	mov	w8, w19
    7fa4:	add	x9, x9, #0xcf0
    7fa8:	adr	x10, 7fb8 <PyInit__decimal@@Base+0x1504>
    7fac:	ldrb	w11, [x9, x8]
    7fb0:	add	x10, x10, x11, lsl #2
    7fb4:	br	x10
    7fb8:	cmn	w21, #0x1
    7fbc:	b	80cc <PyInit__decimal@@Base+0x1618>
    7fc0:	ldr	x0, [x22, #8]
    7fc4:	ldrb	w8, [x0, #171]
    7fc8:	tbnz	w8, #0, 802c <PyInit__decimal@@Base+0x1578>
    7fcc:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    7fd0:	ldr	x8, [x8, #3864]
    7fd4:	cmp	x0, x8
    7fd8:	b.eq	7fec <PyInit__decimal@@Base+0x1538>  // b.none
    7fdc:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
    7fe0:	ldr	x1, [x1, #3864]
    7fe4:	bl	6900 <PyType_IsSubtype@plt>
    7fe8:	cbz	w0, 80ec <PyInit__decimal@@Base+0x1638>
    7fec:	orr	w8, w19, #0x1
    7ff0:	cmp	w8, #0x3
    7ff4:	b.eq	8008 <PyInit__decimal@@Base+0x1554>  // b.none
    7ff8:	mov	w1, #0x400                 	// #1024
    7ffc:	mov	x0, x20
    8000:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    8004:	cbnz	w0, 8064 <PyInit__decimal@@Base+0x15b0>
    8008:	ldr	w8, [x20, #44]
    800c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8010:	add	x0, x0, #0x318
    8014:	mov	x1, x22
    8018:	orr	w8, w8, #0x400
    801c:	mov	x2, x20
    8020:	str	w8, [x20, #44]
    8024:	bl	ab54 <PyInit__decimal@@Base+0x40a0>
    8028:	b	8040 <PyInit__decimal@@Base+0x158c>
    802c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8030:	add	x0, x0, #0x318
    8034:	mov	x1, x22
    8038:	mov	x2, x20
    803c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    8040:	mov	x22, x0
    8044:	mov	x24, x21
    8048:	b	7e60 <PyInit__decimal@@Base+0x13ac>
    804c:	ldr	x8, [x20]
    8050:	subs	x8, x8, #0x1
    8054:	str	x8, [x20]
    8058:	b.ne	8064 <PyInit__decimal@@Base+0x15b0>  // b.any
    805c:	mov	x0, x20
    8060:	bl	6510 <_Py_Dealloc@plt>
    8064:	mov	x22, xzr
    8068:	mov	x0, x22
    806c:	ldp	x20, x19, [sp, #144]
    8070:	ldp	x22, x21, [sp, #128]
    8074:	ldp	x24, x23, [sp, #112]
    8078:	ldp	x26, x25, [sp, #96]
    807c:	ldr	x27, [sp, #80]
    8080:	ldp	x29, x30, [sp, #64]
    8084:	ldp	d9, d8, [sp, #48]
    8088:	add	sp, sp, #0xa0
    808c:	ret
    8090:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    8094:	ldr	x22, [x22, #3976]
    8098:	ldr	x8, [x22]
    809c:	add	x8, x8, #0x1
    80a0:	str	x8, [x22]
    80a4:	b	8068 <PyInit__decimal@@Base+0x15b4>
    80a8:	cmp	w21, #0x1
    80ac:	cset	w21, lt  // lt = tstop
    80b0:	b	80dc <PyInit__decimal@@Base+0x1628>
    80b4:	cmp	w21, #0x0
    80b8:	b	80cc <PyInit__decimal@@Base+0x1618>
    80bc:	cmp	w21, #0x0
    80c0:	cset	w21, ne  // ne = any
    80c4:	b	80dc <PyInit__decimal@@Base+0x1628>
    80c8:	cmp	w21, #0x1
    80cc:	cset	w21, eq  // eq = none
    80d0:	b	80dc <PyInit__decimal@@Base+0x1628>
    80d4:	mvn	w8, w21
    80d8:	lsr	w21, w8, #31
    80dc:	sxtw	x0, w21
    80e0:	bl	6690 <PyBool_FromLong@plt>
    80e4:	mov	x22, x0
    80e8:	b	8068 <PyInit__decimal@@Base+0x15b4>
    80ec:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    80f0:	ldr	x0, [x22, #8]
    80f4:	ldr	x8, [x8, #3952]
    80f8:	cmp	x0, x8
    80fc:	b.eq	8110 <PyInit__decimal@@Base+0x165c>  // b.none
    8100:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
    8104:	ldr	x1, [x1, #3952]
    8108:	bl	6900 <PyType_IsSubtype@plt>
    810c:	cbz	w0, 819c <PyInit__decimal@@Base+0x16e8>
    8110:	orr	w8, w19, #0x1
    8114:	cmp	w8, #0x3
    8118:	b.ne	819c <PyInit__decimal@@Base+0x16e8>  // b.any
    811c:	mov	x0, x22
    8120:	bl	6930 <PyComplex_AsCComplex@plt>
    8124:	mov	v8.16b, v0.16b
    8128:	fmov	d0, #-1.000000000000000000e+00
    812c:	fcmp	d8, d0
    8130:	mov	v9.16b, v1.16b
    8134:	b.ne	8140 <PyInit__decimal@@Base+0x168c>  // b.any
    8138:	bl	6720 <PyErr_Occurred@plt>
    813c:	cbnz	x0, 8064 <PyInit__decimal@@Base+0x15b0>
    8140:	fcmp	d9, #0.0
    8144:	b.ne	821c <PyInit__decimal@@Base+0x1768>  // b.any
    8148:	mov	v0.16b, v8.16b
    814c:	bl	65f0 <PyFloat_FromDouble@plt>
    8150:	cbz	x0, 8064 <PyInit__decimal@@Base+0x15b0>
    8154:	ldr	w8, [x20, #44]
    8158:	mov	x23, x0
    815c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8160:	add	x0, x0, #0x318
    8164:	orr	w8, w8, #0x400
    8168:	mov	x1, x23
    816c:	mov	x2, x20
    8170:	str	w8, [x20, #44]
    8174:	bl	ab54 <PyInit__decimal@@Base+0x40a0>
    8178:	ldr	x8, [x23]
    817c:	mov	x22, x0
    8180:	subs	x8, x8, #0x1
    8184:	str	x8, [x23]
    8188:	b.ne	8194 <PyInit__decimal@@Base+0x16e0>  // b.any
    818c:	mov	x0, x23
    8190:	bl	6510 <_Py_Dealloc@plt>
    8194:	mov	x24, x21
    8198:	b	7e60 <PyInit__decimal@@Base+0x13ac>
    819c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    81a0:	ldr	x1, [x8, #1456]
    81a4:	mov	x0, x22
    81a8:	bl	65a0 <PyObject_IsInstance@plt>
    81ac:	tbnz	w0, #31, 8064 <PyInit__decimal@@Base+0x15b0>
    81b0:	cbz	w0, 821c <PyInit__decimal@@Base+0x1768>
    81b4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    81b8:	add	x1, x1, #0x3ac
    81bc:	mov	x0, x22
    81c0:	bl	64c0 <PyObject_GetAttrString@plt>
    81c4:	cbz	x0, 8064 <PyInit__decimal@@Base+0x15b0>
    81c8:	mov	x24, x0
    81cc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    81d0:	add	x0, x0, #0x318
    81d4:	mov	x1, x24
    81d8:	mov	x2, x20
    81dc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    81e0:	ldr	x8, [x24]
    81e4:	mov	x23, x0
    81e8:	subs	x8, x8, #0x1
    81ec:	str	x8, [x24]
    81f0:	b.ne	81fc <PyInit__decimal@@Base+0x1748>  // b.any
    81f4:	mov	x0, x24
    81f8:	bl	6510 <_Py_Dealloc@plt>
    81fc:	cbz	x23, 8064 <PyInit__decimal@@Base+0x15b0>
    8200:	add	x24, x21, #0x18
    8204:	mov	x0, x24
    8208:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
    820c:	cbz	w0, 8228 <PyInit__decimal@@Base+0x1774>
    8210:	mov	x24, x21
    8214:	mov	x22, x23
    8218:	b	7e60 <PyInit__decimal@@Base+0x13ac>
    821c:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    8220:	ldr	x22, [x22, #3912]
    8224:	b	8098 <PyInit__decimal@@Base+0x15e4>
    8228:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    822c:	add	x1, x1, #0x3b6
    8230:	mov	x0, x22
    8234:	str	wzr, [x29, #44]
    8238:	bl	64c0 <PyObject_GetAttrString@plt>
    823c:	cbz	x0, 838c <PyInit__decimal@@Base+0x18d8>
    8240:	mov	x25, x0
    8244:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8248:	add	x0, x0, #0x318
    824c:	mov	x1, x25
    8250:	mov	x2, x20
    8254:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    8258:	ldr	x8, [x25]
    825c:	mov	x22, x0
    8260:	subs	x8, x8, #0x1
    8264:	str	x8, [x25]
    8268:	b.ne	8274 <PyInit__decimal@@Base+0x17c0>  // b.any
    826c:	mov	x0, x25
    8270:	bl	6510 <_Py_Dealloc@plt>
    8274:	cbz	x22, 838c <PyInit__decimal@@Base+0x18d8>
    8278:	mov	x0, x24
    827c:	bl	233a8 <PyInit__decimal@@Base+0x1c8f4>
    8280:	cbz	x0, 834c <PyInit__decimal@@Base+0x1898>
    8284:	mov	x25, x0
    8288:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    828c:	add	x0, x0, #0x318
    8290:	bl	6890 <_PyObject_New@plt>
    8294:	cbz	x0, 836c <PyInit__decimal@@Base+0x18b8>
    8298:	mov	w8, #0x30                  	// #48
    829c:	mov	x26, x0
    82a0:	strb	w8, [x26, #24]!
    82a4:	mov	x24, x0
    82a8:	mov	x9, #0xffffffffffffffff    	// #-1
    82ac:	mov	w10, #0x4                   	// #4
    82b0:	add	x8, x26, #0x30
    82b4:	mov	x0, sp
    82b8:	stur	x9, [x26, #-8]
    82bc:	stp	xzr, xzr, [x26, #8]
    82c0:	stp	xzr, x10, [x26, #24]
    82c4:	str	x8, [x26, #40]
    82c8:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
    82cc:	ldr	x27, [x25, #8]
    82d0:	add	x2, x22, #0x18
    82d4:	mov	x3, sp
    82d8:	add	x4, x29, #0x2c
    82dc:	mov	x0, x26
    82e0:	mov	x1, x25
    82e4:	str	xzr, [x25, #8]
    82e8:	bl	2c080 <PyInit__decimal@@Base+0x255cc>
    82ec:	str	x27, [x26, #8]
    82f0:	ldr	x8, [x22]
    82f4:	subs	x8, x8, #0x1
    82f8:	str	x8, [x22]
    82fc:	b.ne	8308 <PyInit__decimal@@Base+0x1854>  // b.any
    8300:	mov	x0, x22
    8304:	bl	6510 <_Py_Dealloc@plt>
    8308:	mov	x0, x25
    830c:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    8310:	ldr	w8, [x29, #44]
    8314:	cbz	w8, 8214 <PyInit__decimal@@Base+0x1760>
    8318:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    831c:	ldr	x8, [x8, #3928]
    8320:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    8324:	add	x1, x1, #0x3c2
    8328:	ldr	x0, [x8]
    832c:	bl	6590 <PyErr_SetString@plt>
    8330:	ldr	x8, [x24]
    8334:	subs	x8, x8, #0x1
    8338:	str	x8, [x24]
    833c:	b.ne	838c <PyInit__decimal@@Base+0x18d8>  // b.any
    8340:	mov	x0, x24
    8344:	bl	6510 <_Py_Dealloc@plt>
    8348:	b	838c <PyInit__decimal@@Base+0x18d8>
    834c:	ldr	x8, [x22]
    8350:	subs	x8, x8, #0x1
    8354:	str	x8, [x22]
    8358:	b.ne	8364 <PyInit__decimal@@Base+0x18b0>  // b.any
    835c:	mov	x0, x22
    8360:	bl	6510 <_Py_Dealloc@plt>
    8364:	bl	6520 <PyErr_NoMemory@plt>
    8368:	b	838c <PyInit__decimal@@Base+0x18d8>
    836c:	ldr	x8, [x22]
    8370:	subs	x8, x8, #0x1
    8374:	str	x8, [x22]
    8378:	b.ne	8384 <PyInit__decimal@@Base+0x18d0>  // b.any
    837c:	mov	x0, x22
    8380:	bl	6510 <_Py_Dealloc@plt>
    8384:	mov	x0, x25
    8388:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    838c:	ldr	x8, [x23]
    8390:	subs	x8, x8, #0x1
    8394:	str	x8, [x23]
    8398:	b.ne	8064 <PyInit__decimal@@Base+0x15b0>  // b.any
    839c:	mov	x0, x23
    83a0:	b	8060 <PyInit__decimal@@Base+0x15ac>
    83a4:	sub	sp, sp, #0x80
    83a8:	stp	x29, x30, [sp, #80]
    83ac:	stp	x22, x21, [sp, #96]
    83b0:	stp	x20, x19, [sp, #112]
    83b4:	add	x29, sp, #0x50
    83b8:	str	xzr, [sp, #16]
    83bc:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
    83c0:	ldr	x19, [x19, #4008]
    83c4:	mov	x8, x2
    83c8:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    83cc:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    83d0:	mov	x20, x0
    83d4:	add	x2, x2, #0x74c
    83d8:	add	x3, x3, #0x888
    83dc:	add	x4, sp, #0x10
    83e0:	add	x5, sp, #0x8
    83e4:	mov	x0, x1
    83e8:	mov	x1, x8
    83ec:	str	x19, [sp, #8]
    83f0:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    83f4:	cbz	w0, 87d8 <PyInit__decimal@@Base+0x1d24>
    83f8:	ldr	x8, [sp, #8]
    83fc:	cmp	x8, x19
    8400:	b.eq	8444 <PyInit__decimal@@Base+0x1990>  // b.none
    8404:	ldr	x0, [x8, #8]
    8408:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    840c:	add	x8, x8, #0x4b8
    8410:	cmp	x0, x8
    8414:	b.eq	8480 <PyInit__decimal@@Base+0x19cc>  // b.none
    8418:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    841c:	add	x1, x1, #0x4b8
    8420:	bl	6900 <PyType_IsSubtype@plt>
    8424:	cbnz	w0, 8480 <PyInit__decimal@@Base+0x19cc>
    8428:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    842c:	ldr	x8, [x8, #3936]
    8430:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    8434:	add	x1, x1, #0x631
    8438:	ldr	x0, [x8]
    843c:	bl	6590 <PyErr_SetString@plt>
    8440:	b	87d8 <PyInit__decimal@@Base+0x1d24>
    8444:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    8448:	ldr	x0, [x21, #1400]
    844c:	add	x2, sp, #0x18
    8450:	mov	x1, xzr
    8454:	bl	6680 <PyContextVar_Get@plt>
    8458:	tbnz	w0, #31, 8718 <PyInit__decimal@@Base+0x1c64>
    845c:	ldr	x19, [sp, #24]
    8460:	cbz	x19, 8634 <PyInit__decimal@@Base+0x1b80>
    8464:	str	x19, [sp, #8]
    8468:	ldr	x8, [x19]
    846c:	subs	x8, x8, #0x1
    8470:	str	x8, [x19]
    8474:	b.ne	8480 <PyInit__decimal@@Base+0x19cc>  // b.any
    8478:	mov	x0, x19
    847c:	bl	6510 <_Py_Dealloc@plt>
    8480:	ldp	x21, x19, [sp, #8]
    8484:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    8488:	add	x22, x22, #0x318
    848c:	cbz	x19, 84d4 <PyInit__decimal@@Base+0x1a20>
    8490:	ldr	x0, [x19, #8]
    8494:	cmp	x0, x22
    8498:	b.eq	84ac <PyInit__decimal@@Base+0x19f8>  // b.none
    849c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    84a0:	add	x1, x1, #0x318
    84a4:	bl	6900 <PyType_IsSubtype@plt>
    84a8:	cbz	w0, 857c <PyInit__decimal@@Base+0x1ac8>
    84ac:	cmp	x20, x22
    84b0:	str	wzr, [sp, #24]
    84b4:	b.eq	84fc <PyInit__decimal@@Base+0x1a48>  // b.none
    84b8:	ldr	x8, [x20, #304]
    84bc:	mov	x0, x20
    84c0:	mov	x1, xzr
    84c4:	blr	x8
    84c8:	mov	x20, x0
    84cc:	cbnz	x0, 851c <PyInit__decimal@@Base+0x1a68>
    84d0:	b	87d8 <PyInit__decimal@@Base+0x1d24>
    84d4:	cmp	x20, x22
    84d8:	stur	wzr, [x29, #-4]
    84dc:	b.eq	85b0 <PyInit__decimal@@Base+0x1afc>  // b.none
    84e0:	ldr	x8, [x20, #304]
    84e4:	mov	x0, x20
    84e8:	mov	x1, xzr
    84ec:	blr	x8
    84f0:	mov	x19, x0
    84f4:	cbnz	x0, 85c4 <PyInit__decimal@@Base+0x1b10>
    84f8:	b	87dc <PyInit__decimal@@Base+0x1d28>
    84fc:	ldr	x8, [x19, #8]
    8500:	cmp	x8, x22
    8504:	b.eq	86d8 <PyInit__decimal@@Base+0x1c24>  // b.none
    8508:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    850c:	add	x0, x0, #0x318
    8510:	bl	6890 <_PyObject_New@plt>
    8514:	mov	x20, x0
    8518:	cbz	x0, 87d8 <PyInit__decimal@@Base+0x1d24>
    851c:	mov	w8, #0x30                  	// #48
    8520:	mov	x0, x20
    8524:	strb	w8, [x0, #24]!
    8528:	mov	x9, #0xffffffffffffffff    	// #-1
    852c:	mov	w10, #0x4                   	// #4
    8530:	add	x8, x0, #0x30
    8534:	add	x1, x19, #0x18
    8538:	add	x2, sp, #0x18
    853c:	stur	x9, [x0, #-8]
    8540:	stp	xzr, xzr, [x0, #8]
    8544:	stp	xzr, x10, [x0, #24]
    8548:	str	x8, [x0, #40]
    854c:	bl	22898 <PyInit__decimal@@Base+0x1bde4>
    8550:	ldr	w1, [sp, #24]
    8554:	mov	x0, x21
    8558:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    855c:	cbz	w0, 8698 <PyInit__decimal@@Base+0x1be4>
    8560:	ldr	x8, [x20]
    8564:	subs	x8, x8, #0x1
    8568:	str	x8, [x20]
    856c:	b.ne	87d8 <PyInit__decimal@@Base+0x1d24>  // b.any
    8570:	mov	x0, x20
    8574:	bl	6510 <_Py_Dealloc@plt>
    8578:	b	87d8 <PyInit__decimal@@Base+0x1d24>
    857c:	ldr	x0, [x19, #8]
    8580:	ldr	x8, [x0, #168]
    8584:	tbnz	w8, #28, 86a0 <PyInit__decimal@@Base+0x1bec>
    8588:	tbnz	w8, #24, 86e8 <PyInit__decimal@@Base+0x1c34>
    858c:	tst	x8, #0x6000000
    8590:	b.eq	8724 <PyInit__decimal@@Base+0x1c70>  // b.none
    8594:	tbnz	w8, #26, 876c <PyInit__decimal@@Base+0x1cb8>
    8598:	tbnz	w8, #25, 877c <PyInit__decimal@@Base+0x1cc8>
    859c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    85a0:	ldr	x8, [x8, #3936]
    85a4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    85a8:	add	x1, x1, #0x90f
    85ac:	b	8438 <PyInit__decimal@@Base+0x1984>
    85b0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    85b4:	add	x0, x0, #0x318
    85b8:	bl	6890 <_PyObject_New@plt>
    85bc:	mov	x19, x0
    85c0:	cbz	x0, 87dc <PyInit__decimal@@Base+0x1d28>
    85c4:	mov	w8, #0x30                  	// #48
    85c8:	mov	x20, x19
    85cc:	strb	w8, [x20, #24]!
    85d0:	mov	x9, #0xffffffffffffffff    	// #-1
    85d4:	mov	w10, #0x4                   	// #4
    85d8:	add	x8, x20, #0x30
    85dc:	add	x0, sp, #0x18
    85e0:	stur	x9, [x20, #-8]
    85e4:	stp	xzr, xzr, [x20, #8]
    85e8:	stp	xzr, x10, [x20, #24]
    85ec:	str	x8, [x20, #40]
    85f0:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
    85f4:	add	x2, sp, #0x18
    85f8:	sub	x3, x29, #0x4
    85fc:	mov	x0, x20
    8600:	mov	x1, xzr
    8604:	bl	21e44 <PyInit__decimal@@Base+0x1b390>
    8608:	ldur	w1, [x29, #-4]
    860c:	mov	x0, x21
    8610:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    8614:	cbz	w0, 87dc <PyInit__decimal@@Base+0x1d28>
    8618:	ldr	x8, [x19]
    861c:	subs	x8, x8, #0x1
    8620:	str	x8, [x19]
    8624:	b.ne	87d8 <PyInit__decimal@@Base+0x1d24>  // b.any
    8628:	mov	x0, x19
    862c:	bl	6510 <_Py_Dealloc@plt>
    8630:	b	87d8 <PyInit__decimal@@Base+0x1d24>
    8634:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    8638:	ldr	x22, [x8, #1496]
    863c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8640:	add	x0, x0, #0x4b8
    8644:	mov	x1, xzr
    8648:	bl	6780 <PyObject_CallObject@plt>
    864c:	cbz	x0, 8718 <PyInit__decimal@@Base+0x1c64>
    8650:	ldp	q1, q0, [x22, #32]
    8654:	ldr	q2, [x22, #16]
    8658:	mov	x19, x0
    865c:	mov	x1, x19
    8660:	stp	q1, q0, [x0, #32]
    8664:	str	q2, [x0, #16]
    8668:	ldr	w8, [x22, #80]
    866c:	stp	wzr, wzr, [x0, #44]
    8670:	str	w8, [x0, #80]
    8674:	ldr	x0, [x21, #1400]
    8678:	bl	65c0 <PyContextVar_Set@plt>
    867c:	cbz	x0, 8700 <PyInit__decimal@@Base+0x1c4c>
    8680:	ldr	x8, [x0]
    8684:	subs	x8, x8, #0x1
    8688:	str	x8, [x0]
    868c:	b.ne	8464 <PyInit__decimal@@Base+0x19b0>  // b.any
    8690:	bl	6510 <_Py_Dealloc@plt>
    8694:	b	8464 <PyInit__decimal@@Base+0x19b0>
    8698:	mov	x19, x20
    869c:	b	87dc <PyInit__decimal@@Base+0x1d28>
    86a0:	mov	w1, #0x1                   	// #1
    86a4:	mov	w2, #0x1                   	// #1
    86a8:	mov	x0, x19
    86ac:	bl	129b8 <PyInit__decimal@@Base+0xbf04>
    86b0:	cbz	x0, 87d8 <PyInit__decimal@@Base+0x1d24>
    86b4:	mov	x22, x0
    86b8:	mov	x0, x20
    86bc:	mov	x1, x22
    86c0:	mov	x2, x21
    86c4:	bl	12bf4 <PyInit__decimal@@Base+0xc140>
    86c8:	mov	x19, x0
    86cc:	mov	x0, x22
    86d0:	bl	64a0 <PyMem_Free@plt>
    86d4:	b	87dc <PyInit__decimal@@Base+0x1d28>
    86d8:	ldr	x8, [x19]
    86dc:	add	x8, x8, #0x1
    86e0:	str	x8, [x19]
    86e4:	b	87dc <PyInit__decimal@@Base+0x1d28>
    86e8:	mov	x0, x20
    86ec:	mov	x1, x19
    86f0:	mov	x2, x21
    86f4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    86f8:	mov	x19, x0
    86fc:	b	87dc <PyInit__decimal@@Base+0x1d28>
    8700:	ldr	x8, [x19]
    8704:	subs	x8, x8, #0x1
    8708:	str	x8, [x19]
    870c:	b.ne	8718 <PyInit__decimal@@Base+0x1c64>  // b.any
    8710:	mov	x0, x19
    8714:	bl	6510 <_Py_Dealloc@plt>
    8718:	mov	x19, xzr
    871c:	str	xzr, [sp, #8]
    8720:	b	87dc <PyInit__decimal@@Base+0x1d28>
    8724:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    8728:	ldr	x8, [x8, #3864]
    872c:	cmp	x0, x8
    8730:	b.eq	8744 <PyInit__decimal@@Base+0x1c90>  // b.none
    8734:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
    8738:	ldr	x1, [x1, #3864]
    873c:	bl	6900 <PyType_IsSubtype@plt>
    8740:	cbz	w0, 87b8 <PyInit__decimal@@Base+0x1d04>
    8744:	mov	w1, #0x400                 	// #1024
    8748:	mov	x0, x21
    874c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    8750:	cbnz	w0, 87d8 <PyInit__decimal@@Base+0x1d24>
    8754:	mov	x0, x20
    8758:	mov	x1, x19
    875c:	mov	x2, x21
    8760:	bl	ab54 <PyInit__decimal@@Base+0x40a0>
    8764:	mov	x19, x0
    8768:	b	87dc <PyInit__decimal@@Base+0x1d28>
    876c:	ldr	x8, [x19]
    8770:	add	x8, x8, #0x1
    8774:	str	x8, [x19]
    8778:	b	878c <PyInit__decimal@@Base+0x1cd8>
    877c:	mov	x0, x19
    8780:	bl	6470 <PyList_AsTuple@plt>
    8784:	mov	x19, x0
    8788:	cbz	x0, 87dc <PyInit__decimal@@Base+0x1d28>
    878c:	mov	x0, x19
    8790:	bl	12d04 <PyInit__decimal@@Base+0xc250>
    8794:	ldr	x8, [x19]
    8798:	mov	x22, x0
    879c:	subs	x8, x8, #0x1
    87a0:	str	x8, [x19]
    87a4:	b.ne	87b0 <PyInit__decimal@@Base+0x1cfc>  // b.any
    87a8:	mov	x0, x19
    87ac:	bl	6510 <_Py_Dealloc@plt>
    87b0:	cbnz	x22, 86b8 <PyInit__decimal@@Base+0x1c04>
    87b4:	b	87d8 <PyInit__decimal@@Base+0x1d24>
    87b8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    87bc:	ldr	x8, [x19, #8]
    87c0:	ldr	x9, [x9, #3936]
    87c4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    87c8:	add	x1, x1, #0x263
    87cc:	ldr	x2, [x8, #24]
    87d0:	ldr	x0, [x9]
    87d4:	bl	6950 <PyErr_Format@plt>
    87d8:	mov	x19, xzr
    87dc:	mov	x0, x19
    87e0:	ldp	x20, x19, [sp, #112]
    87e4:	ldp	x22, x21, [sp, #96]
    87e8:	ldp	x29, x30, [sp, #80]
    87ec:	add	sp, sp, #0x80
    87f0:	ret
    87f4:	stp	x29, x30, [sp, #-32]!
    87f8:	str	x19, [sp, #16]
    87fc:	mov	x29, sp
    8800:	mov	x19, x0
    8804:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8808:	add	x0, x0, #0x4b8
    880c:	mov	x1, xzr
    8810:	bl	6780 <PyObject_CallObject@plt>
    8814:	cbz	x0, 8834 <PyInit__decimal@@Base+0x1d80>
    8818:	ldp	q1, q0, [x19, #32]
    881c:	ldr	q2, [x19, #16]
    8820:	stp	q1, q0, [x0, #32]
    8824:	str	q2, [x0, #16]
    8828:	str	wzr, [x0, #48]
    882c:	ldr	w8, [x19, #80]
    8830:	str	w8, [x0, #80]
    8834:	ldr	x19, [sp, #16]
    8838:	ldp	x29, x30, [sp], #32
    883c:	ret
    8840:	sub	sp, sp, #0x50
    8844:	stp	x29, x30, [sp, #16]
    8848:	str	x23, [sp, #32]
    884c:	stp	x22, x21, [sp, #48]
    8850:	stp	x20, x19, [sp, #64]
    8854:	add	x29, sp, #0x10
    8858:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    885c:	mov	x20, x0
    8860:	ldr	x0, [x22, #1400]
    8864:	mov	x19, x1
    8868:	add	x2, x29, #0x18
    886c:	mov	x1, xzr
    8870:	stur	wzr, [x29, #-4]
    8874:	bl	6680 <PyContextVar_Get@plt>
    8878:	tbnz	w0, #31, 8aac <PyInit__decimal@@Base+0x1ff8>
    887c:	ldr	x21, [x29, #24]
    8880:	cbz	x21, 8998 <PyInit__decimal@@Base+0x1ee4>
    8884:	ldr	x8, [x21]
    8888:	subs	x8, x8, #0x1
    888c:	str	x8, [x21]
    8890:	b.ne	889c <PyInit__decimal@@Base+0x1de8>  // b.any
    8894:	mov	x0, x21
    8898:	bl	6510 <_Py_Dealloc@plt>
    889c:	ldr	x0, [x20, #8]
    88a0:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    88a4:	add	x22, x22, #0x318
    88a8:	cmp	x0, x22
    88ac:	b.eq	88c0 <PyInit__decimal@@Base+0x1e0c>  // b.none
    88b0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    88b4:	add	x1, x1, #0x318
    88b8:	bl	6900 <PyType_IsSubtype@plt>
    88bc:	cbz	w0, 8a2c <PyInit__decimal@@Base+0x1f78>
    88c0:	ldr	x8, [x20]
    88c4:	add	x8, x8, #0x1
    88c8:	str	x8, [x20]
    88cc:	ldr	x0, [x19, #8]
    88d0:	cmp	x0, x22
    88d4:	b.eq	88e8 <PyInit__decimal@@Base+0x1e34>  // b.none
    88d8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    88dc:	add	x1, x1, #0x318
    88e0:	bl	6900 <PyType_IsSubtype@plt>
    88e4:	cbz	w0, 8a50 <PyInit__decimal@@Base+0x1f9c>
    88e8:	ldr	x8, [x19]
    88ec:	add	x8, x8, #0x1
    88f0:	str	x8, [x19]
    88f4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    88f8:	add	x0, x0, #0x318
    88fc:	bl	6890 <_PyObject_New@plt>
    8900:	cbz	x0, 89fc <PyInit__decimal@@Base+0x1f48>
    8904:	mov	w8, #0x30                  	// #48
    8908:	mov	x22, x0
    890c:	strb	w8, [x0, #24]!
    8910:	mov	x9, #0xffffffffffffffff    	// #-1
    8914:	mov	w10, #0x4                   	// #4
    8918:	add	x1, x20, #0x18
    891c:	add	x2, x19, #0x18
    8920:	add	x8, x0, #0x30
    8924:	add	x3, x21, #0x10
    8928:	sub	x4, x29, #0x4
    892c:	stur	x9, [x0, #-8]
    8930:	stp	xzr, xzr, [x0, #8]
    8934:	stp	xzr, x10, [x0, #24]
    8938:	str	x8, [x0, #40]
    893c:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
    8940:	ldr	x8, [x20]
    8944:	subs	x8, x8, #0x1
    8948:	str	x8, [x20]
    894c:	b.ne	8958 <PyInit__decimal@@Base+0x1ea4>  // b.any
    8950:	mov	x0, x20
    8954:	bl	6510 <_Py_Dealloc@plt>
    8958:	ldr	x8, [x19]
    895c:	subs	x8, x8, #0x1
    8960:	str	x8, [x19]
    8964:	b.ne	8970 <PyInit__decimal@@Base+0x1ebc>  // b.any
    8968:	mov	x0, x19
    896c:	bl	6510 <_Py_Dealloc@plt>
    8970:	ldur	w1, [x29, #-4]
    8974:	mov	x0, x21
    8978:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    897c:	cbz	w0, 8ab0 <PyInit__decimal@@Base+0x1ffc>
    8980:	ldr	x8, [x22]
    8984:	subs	x8, x8, #0x1
    8988:	str	x8, [x22]
    898c:	b.ne	8aac <PyInit__decimal@@Base+0x1ff8>  // b.any
    8990:	mov	x0, x22
    8994:	b	8aa8 <PyInit__decimal@@Base+0x1ff4>
    8998:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    899c:	ldr	x23, [x8, #1496]
    89a0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    89a4:	add	x0, x0, #0x4b8
    89a8:	mov	x1, xzr
    89ac:	bl	6780 <PyObject_CallObject@plt>
    89b0:	cbz	x0, 8aac <PyInit__decimal@@Base+0x1ff8>
    89b4:	ldp	q1, q0, [x23, #32]
    89b8:	ldr	q2, [x23, #16]
    89bc:	mov	x21, x0
    89c0:	mov	x1, x21
    89c4:	stp	q1, q0, [x0, #32]
    89c8:	str	q2, [x0, #16]
    89cc:	ldr	w8, [x23, #80]
    89d0:	stp	wzr, wzr, [x0, #44]
    89d4:	str	w8, [x0, #80]
    89d8:	ldr	x0, [x22, #1400]
    89dc:	bl	65c0 <PyContextVar_Set@plt>
    89e0:	cbz	x0, 8a94 <PyInit__decimal@@Base+0x1fe0>
    89e4:	ldr	x8, [x0]
    89e8:	subs	x8, x8, #0x1
    89ec:	str	x8, [x0]
    89f0:	b.ne	8884 <PyInit__decimal@@Base+0x1dd0>  // b.any
    89f4:	bl	6510 <_Py_Dealloc@plt>
    89f8:	b	8884 <PyInit__decimal@@Base+0x1dd0>
    89fc:	ldr	x8, [x20]
    8a00:	subs	x8, x8, #0x1
    8a04:	str	x8, [x20]
    8a08:	b.ne	8a14 <PyInit__decimal@@Base+0x1f60>  // b.any
    8a0c:	mov	x0, x20
    8a10:	bl	6510 <_Py_Dealloc@plt>
    8a14:	ldr	x8, [x19]
    8a18:	subs	x8, x8, #0x1
    8a1c:	str	x8, [x19]
    8a20:	b.ne	8aac <PyInit__decimal@@Base+0x1ff8>  // b.any
    8a24:	mov	x0, x19
    8a28:	b	8aa8 <PyInit__decimal@@Base+0x1ff4>
    8a2c:	ldr	x8, [x20, #8]
    8a30:	ldrb	w8, [x8, #171]
    8a34:	tbnz	w8, #0, 8a74 <PyInit__decimal@@Base+0x1fc0>
    8a38:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    8a3c:	ldr	x22, [x22, #3912]
    8a40:	ldr	x8, [x22]
    8a44:	add	x8, x8, #0x1
    8a48:	str	x8, [x22]
    8a4c:	b	8ab0 <PyInit__decimal@@Base+0x1ffc>
    8a50:	ldr	x8, [x19, #8]
    8a54:	ldrb	w8, [x8, #171]
    8a58:	tbnz	w8, #0, 8acc <PyInit__decimal@@Base+0x2018>
    8a5c:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    8a60:	ldr	x22, [x22, #3912]
    8a64:	ldr	x8, [x22]
    8a68:	add	x8, x8, #0x1
    8a6c:	str	x8, [x22]
    8a70:	b	8aec <PyInit__decimal@@Base+0x2038>
    8a74:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8a78:	add	x0, x0, #0x318
    8a7c:	mov	x1, x20
    8a80:	mov	x2, x21
    8a84:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    8a88:	mov	x20, x0
    8a8c:	cbnz	x0, 88cc <PyInit__decimal@@Base+0x1e18>
    8a90:	b	8aac <PyInit__decimal@@Base+0x1ff8>
    8a94:	ldr	x8, [x21]
    8a98:	subs	x8, x8, #0x1
    8a9c:	str	x8, [x21]
    8aa0:	b.ne	8aac <PyInit__decimal@@Base+0x1ff8>  // b.any
    8aa4:	mov	x0, x21
    8aa8:	bl	6510 <_Py_Dealloc@plt>
    8aac:	mov	x22, xzr
    8ab0:	mov	x0, x22
    8ab4:	ldp	x20, x19, [sp, #64]
    8ab8:	ldp	x22, x21, [sp, #48]
    8abc:	ldr	x23, [sp, #32]
    8ac0:	ldp	x29, x30, [sp, #16]
    8ac4:	add	sp, sp, #0x50
    8ac8:	ret
    8acc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8ad0:	add	x0, x0, #0x318
    8ad4:	mov	x1, x19
    8ad8:	mov	x2, x21
    8adc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    8ae0:	mov	x19, x0
    8ae4:	cbnz	x0, 88f4 <PyInit__decimal@@Base+0x1e40>
    8ae8:	mov	x22, xzr
    8aec:	ldr	x8, [x20]
    8af0:	subs	x8, x8, #0x1
    8af4:	str	x8, [x20]
    8af8:	b.ne	8ab0 <PyInit__decimal@@Base+0x1ffc>  // b.any
    8afc:	mov	x0, x20
    8b00:	bl	6510 <_Py_Dealloc@plt>
    8b04:	b	8ab0 <PyInit__decimal@@Base+0x1ffc>
    8b08:	sub	sp, sp, #0x50
    8b0c:	stp	x29, x30, [sp, #16]
    8b10:	str	x23, [sp, #32]
    8b14:	stp	x22, x21, [sp, #48]
    8b18:	stp	x20, x19, [sp, #64]
    8b1c:	add	x29, sp, #0x10
    8b20:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    8b24:	mov	x20, x0
    8b28:	ldr	x0, [x22, #1400]
    8b2c:	mov	x19, x1
    8b30:	add	x2, x29, #0x18
    8b34:	mov	x1, xzr
    8b38:	stur	wzr, [x29, #-4]
    8b3c:	bl	6680 <PyContextVar_Get@plt>
    8b40:	tbnz	w0, #31, 8d74 <PyInit__decimal@@Base+0x22c0>
    8b44:	ldr	x21, [x29, #24]
    8b48:	cbz	x21, 8c60 <PyInit__decimal@@Base+0x21ac>
    8b4c:	ldr	x8, [x21]
    8b50:	subs	x8, x8, #0x1
    8b54:	str	x8, [x21]
    8b58:	b.ne	8b64 <PyInit__decimal@@Base+0x20b0>  // b.any
    8b5c:	mov	x0, x21
    8b60:	bl	6510 <_Py_Dealloc@plt>
    8b64:	ldr	x0, [x20, #8]
    8b68:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    8b6c:	add	x22, x22, #0x318
    8b70:	cmp	x0, x22
    8b74:	b.eq	8b88 <PyInit__decimal@@Base+0x20d4>  // b.none
    8b78:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    8b7c:	add	x1, x1, #0x318
    8b80:	bl	6900 <PyType_IsSubtype@plt>
    8b84:	cbz	w0, 8cf4 <PyInit__decimal@@Base+0x2240>
    8b88:	ldr	x8, [x20]
    8b8c:	add	x8, x8, #0x1
    8b90:	str	x8, [x20]
    8b94:	ldr	x0, [x19, #8]
    8b98:	cmp	x0, x22
    8b9c:	b.eq	8bb0 <PyInit__decimal@@Base+0x20fc>  // b.none
    8ba0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    8ba4:	add	x1, x1, #0x318
    8ba8:	bl	6900 <PyType_IsSubtype@plt>
    8bac:	cbz	w0, 8d18 <PyInit__decimal@@Base+0x2264>
    8bb0:	ldr	x8, [x19]
    8bb4:	add	x8, x8, #0x1
    8bb8:	str	x8, [x19]
    8bbc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8bc0:	add	x0, x0, #0x318
    8bc4:	bl	6890 <_PyObject_New@plt>
    8bc8:	cbz	x0, 8cc4 <PyInit__decimal@@Base+0x2210>
    8bcc:	mov	w8, #0x30                  	// #48
    8bd0:	mov	x22, x0
    8bd4:	strb	w8, [x0, #24]!
    8bd8:	mov	x9, #0xffffffffffffffff    	// #-1
    8bdc:	mov	w10, #0x4                   	// #4
    8be0:	add	x1, x20, #0x18
    8be4:	add	x2, x19, #0x18
    8be8:	add	x8, x0, #0x30
    8bec:	add	x3, x21, #0x10
    8bf0:	sub	x4, x29, #0x4
    8bf4:	stur	x9, [x0, #-8]
    8bf8:	stp	xzr, xzr, [x0, #8]
    8bfc:	stp	xzr, x10, [x0, #24]
    8c00:	str	x8, [x0, #40]
    8c04:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
    8c08:	ldr	x8, [x20]
    8c0c:	subs	x8, x8, #0x1
    8c10:	str	x8, [x20]
    8c14:	b.ne	8c20 <PyInit__decimal@@Base+0x216c>  // b.any
    8c18:	mov	x0, x20
    8c1c:	bl	6510 <_Py_Dealloc@plt>
    8c20:	ldr	x8, [x19]
    8c24:	subs	x8, x8, #0x1
    8c28:	str	x8, [x19]
    8c2c:	b.ne	8c38 <PyInit__decimal@@Base+0x2184>  // b.any
    8c30:	mov	x0, x19
    8c34:	bl	6510 <_Py_Dealloc@plt>
    8c38:	ldur	w1, [x29, #-4]
    8c3c:	mov	x0, x21
    8c40:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    8c44:	cbz	w0, 8d78 <PyInit__decimal@@Base+0x22c4>
    8c48:	ldr	x8, [x22]
    8c4c:	subs	x8, x8, #0x1
    8c50:	str	x8, [x22]
    8c54:	b.ne	8d74 <PyInit__decimal@@Base+0x22c0>  // b.any
    8c58:	mov	x0, x22
    8c5c:	b	8d70 <PyInit__decimal@@Base+0x22bc>
    8c60:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    8c64:	ldr	x23, [x8, #1496]
    8c68:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8c6c:	add	x0, x0, #0x4b8
    8c70:	mov	x1, xzr
    8c74:	bl	6780 <PyObject_CallObject@plt>
    8c78:	cbz	x0, 8d74 <PyInit__decimal@@Base+0x22c0>
    8c7c:	ldp	q1, q0, [x23, #32]
    8c80:	ldr	q2, [x23, #16]
    8c84:	mov	x21, x0
    8c88:	mov	x1, x21
    8c8c:	stp	q1, q0, [x0, #32]
    8c90:	str	q2, [x0, #16]
    8c94:	ldr	w8, [x23, #80]
    8c98:	stp	wzr, wzr, [x0, #44]
    8c9c:	str	w8, [x0, #80]
    8ca0:	ldr	x0, [x22, #1400]
    8ca4:	bl	65c0 <PyContextVar_Set@plt>
    8ca8:	cbz	x0, 8d5c <PyInit__decimal@@Base+0x22a8>
    8cac:	ldr	x8, [x0]
    8cb0:	subs	x8, x8, #0x1
    8cb4:	str	x8, [x0]
    8cb8:	b.ne	8b4c <PyInit__decimal@@Base+0x2098>  // b.any
    8cbc:	bl	6510 <_Py_Dealloc@plt>
    8cc0:	b	8b4c <PyInit__decimal@@Base+0x2098>
    8cc4:	ldr	x8, [x20]
    8cc8:	subs	x8, x8, #0x1
    8ccc:	str	x8, [x20]
    8cd0:	b.ne	8cdc <PyInit__decimal@@Base+0x2228>  // b.any
    8cd4:	mov	x0, x20
    8cd8:	bl	6510 <_Py_Dealloc@plt>
    8cdc:	ldr	x8, [x19]
    8ce0:	subs	x8, x8, #0x1
    8ce4:	str	x8, [x19]
    8ce8:	b.ne	8d74 <PyInit__decimal@@Base+0x22c0>  // b.any
    8cec:	mov	x0, x19
    8cf0:	b	8d70 <PyInit__decimal@@Base+0x22bc>
    8cf4:	ldr	x8, [x20, #8]
    8cf8:	ldrb	w8, [x8, #171]
    8cfc:	tbnz	w8, #0, 8d3c <PyInit__decimal@@Base+0x2288>
    8d00:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    8d04:	ldr	x22, [x22, #3912]
    8d08:	ldr	x8, [x22]
    8d0c:	add	x8, x8, #0x1
    8d10:	str	x8, [x22]
    8d14:	b	8d78 <PyInit__decimal@@Base+0x22c4>
    8d18:	ldr	x8, [x19, #8]
    8d1c:	ldrb	w8, [x8, #171]
    8d20:	tbnz	w8, #0, 8d94 <PyInit__decimal@@Base+0x22e0>
    8d24:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    8d28:	ldr	x22, [x22, #3912]
    8d2c:	ldr	x8, [x22]
    8d30:	add	x8, x8, #0x1
    8d34:	str	x8, [x22]
    8d38:	b	8db4 <PyInit__decimal@@Base+0x2300>
    8d3c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8d40:	add	x0, x0, #0x318
    8d44:	mov	x1, x20
    8d48:	mov	x2, x21
    8d4c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    8d50:	mov	x20, x0
    8d54:	cbnz	x0, 8b94 <PyInit__decimal@@Base+0x20e0>
    8d58:	b	8d74 <PyInit__decimal@@Base+0x22c0>
    8d5c:	ldr	x8, [x21]
    8d60:	subs	x8, x8, #0x1
    8d64:	str	x8, [x21]
    8d68:	b.ne	8d74 <PyInit__decimal@@Base+0x22c0>  // b.any
    8d6c:	mov	x0, x21
    8d70:	bl	6510 <_Py_Dealloc@plt>
    8d74:	mov	x22, xzr
    8d78:	mov	x0, x22
    8d7c:	ldp	x20, x19, [sp, #64]
    8d80:	ldp	x22, x21, [sp, #48]
    8d84:	ldr	x23, [sp, #32]
    8d88:	ldp	x29, x30, [sp, #16]
    8d8c:	add	sp, sp, #0x50
    8d90:	ret
    8d94:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8d98:	add	x0, x0, #0x318
    8d9c:	mov	x1, x19
    8da0:	mov	x2, x21
    8da4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    8da8:	mov	x19, x0
    8dac:	cbnz	x0, 8bbc <PyInit__decimal@@Base+0x2108>
    8db0:	mov	x22, xzr
    8db4:	ldr	x8, [x20]
    8db8:	subs	x8, x8, #0x1
    8dbc:	str	x8, [x20]
    8dc0:	b.ne	8d78 <PyInit__decimal@@Base+0x22c4>  // b.any
    8dc4:	mov	x0, x20
    8dc8:	bl	6510 <_Py_Dealloc@plt>
    8dcc:	b	8d78 <PyInit__decimal@@Base+0x22c4>
    8dd0:	sub	sp, sp, #0x50
    8dd4:	stp	x29, x30, [sp, #16]
    8dd8:	str	x23, [sp, #32]
    8ddc:	stp	x22, x21, [sp, #48]
    8de0:	stp	x20, x19, [sp, #64]
    8de4:	add	x29, sp, #0x10
    8de8:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    8dec:	mov	x20, x0
    8df0:	ldr	x0, [x22, #1400]
    8df4:	mov	x19, x1
    8df8:	add	x2, x29, #0x18
    8dfc:	mov	x1, xzr
    8e00:	stur	wzr, [x29, #-4]
    8e04:	bl	6680 <PyContextVar_Get@plt>
    8e08:	tbnz	w0, #31, 903c <PyInit__decimal@@Base+0x2588>
    8e0c:	ldr	x21, [x29, #24]
    8e10:	cbz	x21, 8f28 <PyInit__decimal@@Base+0x2474>
    8e14:	ldr	x8, [x21]
    8e18:	subs	x8, x8, #0x1
    8e1c:	str	x8, [x21]
    8e20:	b.ne	8e2c <PyInit__decimal@@Base+0x2378>  // b.any
    8e24:	mov	x0, x21
    8e28:	bl	6510 <_Py_Dealloc@plt>
    8e2c:	ldr	x0, [x20, #8]
    8e30:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    8e34:	add	x22, x22, #0x318
    8e38:	cmp	x0, x22
    8e3c:	b.eq	8e50 <PyInit__decimal@@Base+0x239c>  // b.none
    8e40:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    8e44:	add	x1, x1, #0x318
    8e48:	bl	6900 <PyType_IsSubtype@plt>
    8e4c:	cbz	w0, 8fbc <PyInit__decimal@@Base+0x2508>
    8e50:	ldr	x8, [x20]
    8e54:	add	x8, x8, #0x1
    8e58:	str	x8, [x20]
    8e5c:	ldr	x0, [x19, #8]
    8e60:	cmp	x0, x22
    8e64:	b.eq	8e78 <PyInit__decimal@@Base+0x23c4>  // b.none
    8e68:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    8e6c:	add	x1, x1, #0x318
    8e70:	bl	6900 <PyType_IsSubtype@plt>
    8e74:	cbz	w0, 8fe0 <PyInit__decimal@@Base+0x252c>
    8e78:	ldr	x8, [x19]
    8e7c:	add	x8, x8, #0x1
    8e80:	str	x8, [x19]
    8e84:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8e88:	add	x0, x0, #0x318
    8e8c:	bl	6890 <_PyObject_New@plt>
    8e90:	cbz	x0, 8f8c <PyInit__decimal@@Base+0x24d8>
    8e94:	mov	w8, #0x30                  	// #48
    8e98:	mov	x22, x0
    8e9c:	strb	w8, [x0, #24]!
    8ea0:	mov	x9, #0xffffffffffffffff    	// #-1
    8ea4:	mov	w10, #0x4                   	// #4
    8ea8:	add	x1, x20, #0x18
    8eac:	add	x2, x19, #0x18
    8eb0:	add	x8, x0, #0x30
    8eb4:	add	x3, x21, #0x10
    8eb8:	sub	x4, x29, #0x4
    8ebc:	stur	x9, [x0, #-8]
    8ec0:	stp	xzr, xzr, [x0, #8]
    8ec4:	stp	xzr, x10, [x0, #24]
    8ec8:	str	x8, [x0, #40]
    8ecc:	bl	2c080 <PyInit__decimal@@Base+0x255cc>
    8ed0:	ldr	x8, [x20]
    8ed4:	subs	x8, x8, #0x1
    8ed8:	str	x8, [x20]
    8edc:	b.ne	8ee8 <PyInit__decimal@@Base+0x2434>  // b.any
    8ee0:	mov	x0, x20
    8ee4:	bl	6510 <_Py_Dealloc@plt>
    8ee8:	ldr	x8, [x19]
    8eec:	subs	x8, x8, #0x1
    8ef0:	str	x8, [x19]
    8ef4:	b.ne	8f00 <PyInit__decimal@@Base+0x244c>  // b.any
    8ef8:	mov	x0, x19
    8efc:	bl	6510 <_Py_Dealloc@plt>
    8f00:	ldur	w1, [x29, #-4]
    8f04:	mov	x0, x21
    8f08:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    8f0c:	cbz	w0, 9040 <PyInit__decimal@@Base+0x258c>
    8f10:	ldr	x8, [x22]
    8f14:	subs	x8, x8, #0x1
    8f18:	str	x8, [x22]
    8f1c:	b.ne	903c <PyInit__decimal@@Base+0x2588>  // b.any
    8f20:	mov	x0, x22
    8f24:	b	9038 <PyInit__decimal@@Base+0x2584>
    8f28:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    8f2c:	ldr	x23, [x8, #1496]
    8f30:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    8f34:	add	x0, x0, #0x4b8
    8f38:	mov	x1, xzr
    8f3c:	bl	6780 <PyObject_CallObject@plt>
    8f40:	cbz	x0, 903c <PyInit__decimal@@Base+0x2588>
    8f44:	ldp	q1, q0, [x23, #32]
    8f48:	ldr	q2, [x23, #16]
    8f4c:	mov	x21, x0
    8f50:	mov	x1, x21
    8f54:	stp	q1, q0, [x0, #32]
    8f58:	str	q2, [x0, #16]
    8f5c:	ldr	w8, [x23, #80]
    8f60:	stp	wzr, wzr, [x0, #44]
    8f64:	str	w8, [x0, #80]
    8f68:	ldr	x0, [x22, #1400]
    8f6c:	bl	65c0 <PyContextVar_Set@plt>
    8f70:	cbz	x0, 9024 <PyInit__decimal@@Base+0x2570>
    8f74:	ldr	x8, [x0]
    8f78:	subs	x8, x8, #0x1
    8f7c:	str	x8, [x0]
    8f80:	b.ne	8e14 <PyInit__decimal@@Base+0x2360>  // b.any
    8f84:	bl	6510 <_Py_Dealloc@plt>
    8f88:	b	8e14 <PyInit__decimal@@Base+0x2360>
    8f8c:	ldr	x8, [x20]
    8f90:	subs	x8, x8, #0x1
    8f94:	str	x8, [x20]
    8f98:	b.ne	8fa4 <PyInit__decimal@@Base+0x24f0>  // b.any
    8f9c:	mov	x0, x20
    8fa0:	bl	6510 <_Py_Dealloc@plt>
    8fa4:	ldr	x8, [x19]
    8fa8:	subs	x8, x8, #0x1
    8fac:	str	x8, [x19]
    8fb0:	b.ne	903c <PyInit__decimal@@Base+0x2588>  // b.any
    8fb4:	mov	x0, x19
    8fb8:	b	9038 <PyInit__decimal@@Base+0x2584>
    8fbc:	ldr	x8, [x20, #8]
    8fc0:	ldrb	w8, [x8, #171]
    8fc4:	tbnz	w8, #0, 9004 <PyInit__decimal@@Base+0x2550>
    8fc8:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    8fcc:	ldr	x22, [x22, #3912]
    8fd0:	ldr	x8, [x22]
    8fd4:	add	x8, x8, #0x1
    8fd8:	str	x8, [x22]
    8fdc:	b	9040 <PyInit__decimal@@Base+0x258c>
    8fe0:	ldr	x8, [x19, #8]
    8fe4:	ldrb	w8, [x8, #171]
    8fe8:	tbnz	w8, #0, 905c <PyInit__decimal@@Base+0x25a8>
    8fec:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    8ff0:	ldr	x22, [x22, #3912]
    8ff4:	ldr	x8, [x22]
    8ff8:	add	x8, x8, #0x1
    8ffc:	str	x8, [x22]
    9000:	b	907c <PyInit__decimal@@Base+0x25c8>
    9004:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9008:	add	x0, x0, #0x318
    900c:	mov	x1, x20
    9010:	mov	x2, x21
    9014:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    9018:	mov	x20, x0
    901c:	cbnz	x0, 8e5c <PyInit__decimal@@Base+0x23a8>
    9020:	b	903c <PyInit__decimal@@Base+0x2588>
    9024:	ldr	x8, [x21]
    9028:	subs	x8, x8, #0x1
    902c:	str	x8, [x21]
    9030:	b.ne	903c <PyInit__decimal@@Base+0x2588>  // b.any
    9034:	mov	x0, x21
    9038:	bl	6510 <_Py_Dealloc@plt>
    903c:	mov	x22, xzr
    9040:	mov	x0, x22
    9044:	ldp	x20, x19, [sp, #64]
    9048:	ldp	x22, x21, [sp, #48]
    904c:	ldr	x23, [sp, #32]
    9050:	ldp	x29, x30, [sp, #16]
    9054:	add	sp, sp, #0x50
    9058:	ret
    905c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9060:	add	x0, x0, #0x318
    9064:	mov	x1, x19
    9068:	mov	x2, x21
    906c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    9070:	mov	x19, x0
    9074:	cbnz	x0, 8e84 <PyInit__decimal@@Base+0x23d0>
    9078:	mov	x22, xzr
    907c:	ldr	x8, [x20]
    9080:	subs	x8, x8, #0x1
    9084:	str	x8, [x20]
    9088:	b.ne	9040 <PyInit__decimal@@Base+0x258c>  // b.any
    908c:	mov	x0, x20
    9090:	bl	6510 <_Py_Dealloc@plt>
    9094:	b	9040 <PyInit__decimal@@Base+0x258c>
    9098:	sub	sp, sp, #0x50
    909c:	stp	x29, x30, [sp, #16]
    90a0:	str	x23, [sp, #32]
    90a4:	stp	x22, x21, [sp, #48]
    90a8:	stp	x20, x19, [sp, #64]
    90ac:	add	x29, sp, #0x10
    90b0:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    90b4:	mov	x20, x0
    90b8:	ldr	x0, [x22, #1400]
    90bc:	mov	x19, x1
    90c0:	add	x2, x29, #0x18
    90c4:	mov	x1, xzr
    90c8:	stur	wzr, [x29, #-4]
    90cc:	bl	6680 <PyContextVar_Get@plt>
    90d0:	tbnz	w0, #31, 9304 <PyInit__decimal@@Base+0x2850>
    90d4:	ldr	x21, [x29, #24]
    90d8:	cbz	x21, 91f0 <PyInit__decimal@@Base+0x273c>
    90dc:	ldr	x8, [x21]
    90e0:	subs	x8, x8, #0x1
    90e4:	str	x8, [x21]
    90e8:	b.ne	90f4 <PyInit__decimal@@Base+0x2640>  // b.any
    90ec:	mov	x0, x21
    90f0:	bl	6510 <_Py_Dealloc@plt>
    90f4:	ldr	x0, [x20, #8]
    90f8:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    90fc:	add	x22, x22, #0x318
    9100:	cmp	x0, x22
    9104:	b.eq	9118 <PyInit__decimal@@Base+0x2664>  // b.none
    9108:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    910c:	add	x1, x1, #0x318
    9110:	bl	6900 <PyType_IsSubtype@plt>
    9114:	cbz	w0, 9284 <PyInit__decimal@@Base+0x27d0>
    9118:	ldr	x8, [x20]
    911c:	add	x8, x8, #0x1
    9120:	str	x8, [x20]
    9124:	ldr	x0, [x19, #8]
    9128:	cmp	x0, x22
    912c:	b.eq	9140 <PyInit__decimal@@Base+0x268c>  // b.none
    9130:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    9134:	add	x1, x1, #0x318
    9138:	bl	6900 <PyType_IsSubtype@plt>
    913c:	cbz	w0, 92a8 <PyInit__decimal@@Base+0x27f4>
    9140:	ldr	x8, [x19]
    9144:	add	x8, x8, #0x1
    9148:	str	x8, [x19]
    914c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9150:	add	x0, x0, #0x318
    9154:	bl	6890 <_PyObject_New@plt>
    9158:	cbz	x0, 9254 <PyInit__decimal@@Base+0x27a0>
    915c:	mov	w8, #0x30                  	// #48
    9160:	mov	x22, x0
    9164:	strb	w8, [x0, #24]!
    9168:	mov	x9, #0xffffffffffffffff    	// #-1
    916c:	mov	w10, #0x4                   	// #4
    9170:	add	x1, x20, #0x18
    9174:	add	x2, x19, #0x18
    9178:	add	x8, x0, #0x30
    917c:	add	x3, x21, #0x10
    9180:	sub	x4, x29, #0x4
    9184:	stur	x9, [x0, #-8]
    9188:	stp	xzr, xzr, [x0, #8]
    918c:	stp	xzr, x10, [x0, #24]
    9190:	str	x8, [x0, #40]
    9194:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
    9198:	ldr	x8, [x20]
    919c:	subs	x8, x8, #0x1
    91a0:	str	x8, [x20]
    91a4:	b.ne	91b0 <PyInit__decimal@@Base+0x26fc>  // b.any
    91a8:	mov	x0, x20
    91ac:	bl	6510 <_Py_Dealloc@plt>
    91b0:	ldr	x8, [x19]
    91b4:	subs	x8, x8, #0x1
    91b8:	str	x8, [x19]
    91bc:	b.ne	91c8 <PyInit__decimal@@Base+0x2714>  // b.any
    91c0:	mov	x0, x19
    91c4:	bl	6510 <_Py_Dealloc@plt>
    91c8:	ldur	w1, [x29, #-4]
    91cc:	mov	x0, x21
    91d0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    91d4:	cbz	w0, 9308 <PyInit__decimal@@Base+0x2854>
    91d8:	ldr	x8, [x22]
    91dc:	subs	x8, x8, #0x1
    91e0:	str	x8, [x22]
    91e4:	b.ne	9304 <PyInit__decimal@@Base+0x2850>  // b.any
    91e8:	mov	x0, x22
    91ec:	b	9300 <PyInit__decimal@@Base+0x284c>
    91f0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    91f4:	ldr	x23, [x8, #1496]
    91f8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    91fc:	add	x0, x0, #0x4b8
    9200:	mov	x1, xzr
    9204:	bl	6780 <PyObject_CallObject@plt>
    9208:	cbz	x0, 9304 <PyInit__decimal@@Base+0x2850>
    920c:	ldp	q1, q0, [x23, #32]
    9210:	ldr	q2, [x23, #16]
    9214:	mov	x21, x0
    9218:	mov	x1, x21
    921c:	stp	q1, q0, [x0, #32]
    9220:	str	q2, [x0, #16]
    9224:	ldr	w8, [x23, #80]
    9228:	stp	wzr, wzr, [x0, #44]
    922c:	str	w8, [x0, #80]
    9230:	ldr	x0, [x22, #1400]
    9234:	bl	65c0 <PyContextVar_Set@plt>
    9238:	cbz	x0, 92ec <PyInit__decimal@@Base+0x2838>
    923c:	ldr	x8, [x0]
    9240:	subs	x8, x8, #0x1
    9244:	str	x8, [x0]
    9248:	b.ne	90dc <PyInit__decimal@@Base+0x2628>  // b.any
    924c:	bl	6510 <_Py_Dealloc@plt>
    9250:	b	90dc <PyInit__decimal@@Base+0x2628>
    9254:	ldr	x8, [x20]
    9258:	subs	x8, x8, #0x1
    925c:	str	x8, [x20]
    9260:	b.ne	926c <PyInit__decimal@@Base+0x27b8>  // b.any
    9264:	mov	x0, x20
    9268:	bl	6510 <_Py_Dealloc@plt>
    926c:	ldr	x8, [x19]
    9270:	subs	x8, x8, #0x1
    9274:	str	x8, [x19]
    9278:	b.ne	9304 <PyInit__decimal@@Base+0x2850>  // b.any
    927c:	mov	x0, x19
    9280:	b	9300 <PyInit__decimal@@Base+0x284c>
    9284:	ldr	x8, [x20, #8]
    9288:	ldrb	w8, [x8, #171]
    928c:	tbnz	w8, #0, 92cc <PyInit__decimal@@Base+0x2818>
    9290:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    9294:	ldr	x22, [x22, #3912]
    9298:	ldr	x8, [x22]
    929c:	add	x8, x8, #0x1
    92a0:	str	x8, [x22]
    92a4:	b	9308 <PyInit__decimal@@Base+0x2854>
    92a8:	ldr	x8, [x19, #8]
    92ac:	ldrb	w8, [x8, #171]
    92b0:	tbnz	w8, #0, 9324 <PyInit__decimal@@Base+0x2870>
    92b4:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    92b8:	ldr	x22, [x22, #3912]
    92bc:	ldr	x8, [x22]
    92c0:	add	x8, x8, #0x1
    92c4:	str	x8, [x22]
    92c8:	b	9344 <PyInit__decimal@@Base+0x2890>
    92cc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    92d0:	add	x0, x0, #0x318
    92d4:	mov	x1, x20
    92d8:	mov	x2, x21
    92dc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    92e0:	mov	x20, x0
    92e4:	cbnz	x0, 9124 <PyInit__decimal@@Base+0x2670>
    92e8:	b	9304 <PyInit__decimal@@Base+0x2850>
    92ec:	ldr	x8, [x21]
    92f0:	subs	x8, x8, #0x1
    92f4:	str	x8, [x21]
    92f8:	b.ne	9304 <PyInit__decimal@@Base+0x2850>  // b.any
    92fc:	mov	x0, x21
    9300:	bl	6510 <_Py_Dealloc@plt>
    9304:	mov	x22, xzr
    9308:	mov	x0, x22
    930c:	ldp	x20, x19, [sp, #64]
    9310:	ldp	x22, x21, [sp, #48]
    9314:	ldr	x23, [sp, #32]
    9318:	ldp	x29, x30, [sp, #16]
    931c:	add	sp, sp, #0x50
    9320:	ret
    9324:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9328:	add	x0, x0, #0x318
    932c:	mov	x1, x19
    9330:	mov	x2, x21
    9334:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    9338:	mov	x19, x0
    933c:	cbnz	x0, 914c <PyInit__decimal@@Base+0x2698>
    9340:	mov	x22, xzr
    9344:	ldr	x8, [x20]
    9348:	subs	x8, x8, #0x1
    934c:	str	x8, [x20]
    9350:	b.ne	9308 <PyInit__decimal@@Base+0x2854>  // b.any
    9354:	mov	x0, x20
    9358:	bl	6510 <_Py_Dealloc@plt>
    935c:	b	9308 <PyInit__decimal@@Base+0x2854>
    9360:	sub	sp, sp, #0x60
    9364:	stp	x29, x30, [sp, #16]
    9368:	stp	x26, x25, [sp, #32]
    936c:	stp	x24, x23, [sp, #48]
    9370:	stp	x22, x21, [sp, #64]
    9374:	stp	x20, x19, [sp, #80]
    9378:	add	x29, sp, #0x10
    937c:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    9380:	mov	x20, x0
    9384:	ldr	x0, [x22, #1400]
    9388:	mov	x19, x1
    938c:	add	x2, sp, #0x8
    9390:	mov	x1, xzr
    9394:	str	wzr, [sp, #4]
    9398:	bl	6680 <PyContextVar_Get@plt>
    939c:	tbnz	w0, #31, 9654 <PyInit__decimal@@Base+0x2ba0>
    93a0:	ldr	x21, [sp, #8]
    93a4:	cbz	x21, 94f8 <PyInit__decimal@@Base+0x2a44>
    93a8:	ldr	x8, [x21]
    93ac:	subs	x8, x8, #0x1
    93b0:	str	x8, [x21]
    93b4:	b.ne	93c0 <PyInit__decimal@@Base+0x290c>  // b.any
    93b8:	mov	x0, x21
    93bc:	bl	6510 <_Py_Dealloc@plt>
    93c0:	ldr	x0, [x20, #8]
    93c4:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    93c8:	add	x22, x22, #0x318
    93cc:	cmp	x0, x22
    93d0:	b.eq	93e4 <PyInit__decimal@@Base+0x2930>  // b.none
    93d4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    93d8:	add	x1, x1, #0x318
    93dc:	bl	6900 <PyType_IsSubtype@plt>
    93e0:	cbz	w0, 958c <PyInit__decimal@@Base+0x2ad8>
    93e4:	ldr	x8, [x20]
    93e8:	add	x8, x8, #0x1
    93ec:	str	x8, [x20]
    93f0:	ldr	x0, [x19, #8]
    93f4:	cmp	x0, x22
    93f8:	b.eq	940c <PyInit__decimal@@Base+0x2958>  // b.none
    93fc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    9400:	add	x1, x1, #0x318
    9404:	bl	6900 <PyType_IsSubtype@plt>
    9408:	cbz	w0, 95b0 <PyInit__decimal@@Base+0x2afc>
    940c:	ldr	x8, [x19]
    9410:	add	x8, x8, #0x1
    9414:	str	x8, [x19]
    9418:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    941c:	add	x0, x0, #0x318
    9420:	bl	6890 <_PyObject_New@plt>
    9424:	cbz	x0, 955c <PyInit__decimal@@Base+0x2aa8>
    9428:	mov	w25, #0x30                  	// #48
    942c:	mov	x24, x0
    9430:	mov	x22, x0
    9434:	mov	w8, #0x4                   	// #4
    9438:	strb	w25, [x24, #24]!
    943c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9440:	mov	x26, #0xffffffffffffffff    	// #-1
    9444:	stp	xzr, x8, [x24, #24]
    9448:	add	x8, x24, #0x30
    944c:	add	x0, x0, #0x318
    9450:	stur	x26, [x24, #-8]
    9454:	stp	xzr, xzr, [x24, #8]
    9458:	str	x8, [x24, #40]
    945c:	bl	6890 <_PyObject_New@plt>
    9460:	cbz	x0, 95d4 <PyInit__decimal@@Base+0x2b20>
    9464:	mov	x1, x0
    9468:	mov	w8, #0x4                   	// #4
    946c:	strb	w25, [x1, #24]!
    9470:	mov	x23, x0
    9474:	add	x2, x20, #0x18
    9478:	add	x3, x19, #0x18
    947c:	stp	xzr, x8, [x1, #24]
    9480:	add	x8, x1, #0x30
    9484:	add	x4, x21, #0x10
    9488:	add	x5, sp, #0x4
    948c:	mov	x0, x24
    9490:	stur	x26, [x1, #-8]
    9494:	stp	xzr, xzr, [x1, #8]
    9498:	str	x8, [x1, #40]
    949c:	bl	28aa8 <PyInit__decimal@@Base+0x21ff4>
    94a0:	ldr	x8, [x20]
    94a4:	subs	x8, x8, #0x1
    94a8:	str	x8, [x20]
    94ac:	b.ne	94b8 <PyInit__decimal@@Base+0x2a04>  // b.any
    94b0:	mov	x0, x20
    94b4:	bl	6510 <_Py_Dealloc@plt>
    94b8:	ldr	x8, [x19]
    94bc:	subs	x8, x8, #0x1
    94c0:	str	x8, [x19]
    94c4:	b.ne	94d0 <PyInit__decimal@@Base+0x2a1c>  // b.any
    94c8:	mov	x0, x19
    94cc:	bl	6510 <_Py_Dealloc@plt>
    94d0:	ldr	w1, [sp, #4]
    94d4:	mov	x0, x21
    94d8:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    94dc:	cbz	w0, 9678 <PyInit__decimal@@Base+0x2bc4>
    94e0:	ldr	x8, [x23]
    94e4:	subs	x8, x8, #0x1
    94e8:	str	x8, [x23]
    94ec:	b.ne	9604 <PyInit__decimal@@Base+0x2b50>  // b.any
    94f0:	mov	x0, x23
    94f4:	b	9600 <PyInit__decimal@@Base+0x2b4c>
    94f8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    94fc:	ldr	x23, [x8, #1496]
    9500:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9504:	add	x0, x0, #0x4b8
    9508:	mov	x1, xzr
    950c:	bl	6780 <PyObject_CallObject@plt>
    9510:	cbz	x0, 9654 <PyInit__decimal@@Base+0x2ba0>
    9514:	ldp	q1, q0, [x23, #32]
    9518:	ldr	q2, [x23, #16]
    951c:	mov	x21, x0
    9520:	mov	x1, x21
    9524:	stp	q1, q0, [x0, #32]
    9528:	str	q2, [x0, #16]
    952c:	ldr	w8, [x23, #80]
    9530:	stp	wzr, wzr, [x0, #44]
    9534:	str	w8, [x0, #80]
    9538:	ldr	x0, [x22, #1400]
    953c:	bl	65c0 <PyContextVar_Set@plt>
    9540:	cbz	x0, 963c <PyInit__decimal@@Base+0x2b88>
    9544:	ldr	x8, [x0]
    9548:	subs	x8, x8, #0x1
    954c:	str	x8, [x0]
    9550:	b.ne	93a8 <PyInit__decimal@@Base+0x28f4>  // b.any
    9554:	bl	6510 <_Py_Dealloc@plt>
    9558:	b	93a8 <PyInit__decimal@@Base+0x28f4>
    955c:	ldr	x8, [x20]
    9560:	subs	x8, x8, #0x1
    9564:	str	x8, [x20]
    9568:	b.ne	9574 <PyInit__decimal@@Base+0x2ac0>  // b.any
    956c:	mov	x0, x20
    9570:	bl	6510 <_Py_Dealloc@plt>
    9574:	ldr	x8, [x19]
    9578:	subs	x8, x8, #0x1
    957c:	str	x8, [x19]
    9580:	b.ne	9654 <PyInit__decimal@@Base+0x2ba0>  // b.any
    9584:	mov	x0, x19
    9588:	b	9650 <PyInit__decimal@@Base+0x2b9c>
    958c:	ldr	x8, [x20, #8]
    9590:	ldrb	w8, [x8, #171]
    9594:	tbnz	w8, #0, 961c <PyInit__decimal@@Base+0x2b68>
    9598:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
    959c:	ldr	x19, [x19, #3912]
    95a0:	ldr	x8, [x19]
    95a4:	add	x8, x8, #0x1
    95a8:	str	x8, [x19]
    95ac:	b	9658 <PyInit__decimal@@Base+0x2ba4>
    95b0:	ldr	x8, [x19, #8]
    95b4:	ldrb	w8, [x8, #171]
    95b8:	tbnz	w8, #0, 96c0 <PyInit__decimal@@Base+0x2c0c>
    95bc:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
    95c0:	ldr	x19, [x19, #3912]
    95c4:	ldr	x8, [x19]
    95c8:	add	x8, x8, #0x1
    95cc:	str	x8, [x19]
    95d0:	b	96dc <PyInit__decimal@@Base+0x2c28>
    95d4:	ldr	x8, [x20]
    95d8:	subs	x8, x8, #0x1
    95dc:	str	x8, [x20]
    95e0:	b.ne	95ec <PyInit__decimal@@Base+0x2b38>  // b.any
    95e4:	mov	x0, x20
    95e8:	bl	6510 <_Py_Dealloc@plt>
    95ec:	ldr	x8, [x19]
    95f0:	subs	x8, x8, #0x1
    95f4:	str	x8, [x19]
    95f8:	b.ne	9604 <PyInit__decimal@@Base+0x2b50>  // b.any
    95fc:	mov	x0, x19
    9600:	bl	6510 <_Py_Dealloc@plt>
    9604:	ldr	x8, [x22]
    9608:	subs	x8, x8, #0x1
    960c:	str	x8, [x22]
    9610:	b.ne	9654 <PyInit__decimal@@Base+0x2ba0>  // b.any
    9614:	mov	x0, x22
    9618:	b	9650 <PyInit__decimal@@Base+0x2b9c>
    961c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9620:	add	x0, x0, #0x318
    9624:	mov	x1, x20
    9628:	mov	x2, x21
    962c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    9630:	mov	x20, x0
    9634:	cbnz	x0, 93f0 <PyInit__decimal@@Base+0x293c>
    9638:	b	9654 <PyInit__decimal@@Base+0x2ba0>
    963c:	ldr	x8, [x21]
    9640:	subs	x8, x8, #0x1
    9644:	str	x8, [x21]
    9648:	b.ne	9654 <PyInit__decimal@@Base+0x2ba0>  // b.any
    964c:	mov	x0, x21
    9650:	bl	6510 <_Py_Dealloc@plt>
    9654:	mov	x19, xzr
    9658:	mov	x0, x19
    965c:	ldp	x20, x19, [sp, #80]
    9660:	ldp	x22, x21, [sp, #64]
    9664:	ldp	x24, x23, [sp, #48]
    9668:	ldp	x26, x25, [sp, #32]
    966c:	ldp	x29, x30, [sp, #16]
    9670:	add	sp, sp, #0x60
    9674:	ret
    9678:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    967c:	add	x0, x0, #0x2d3
    9680:	mov	x1, x22
    9684:	mov	x2, x23
    9688:	bl	6710 <Py_BuildValue@plt>
    968c:	ldr	x8, [x23]
    9690:	mov	x19, x0
    9694:	subs	x8, x8, #0x1
    9698:	str	x8, [x23]
    969c:	b.ne	96a8 <PyInit__decimal@@Base+0x2bf4>  // b.any
    96a0:	mov	x0, x23
    96a4:	bl	6510 <_Py_Dealloc@plt>
    96a8:	ldr	x8, [x22]
    96ac:	subs	x8, x8, #0x1
    96b0:	str	x8, [x22]
    96b4:	b.ne	9658 <PyInit__decimal@@Base+0x2ba4>  // b.any
    96b8:	mov	x0, x22
    96bc:	b	96f0 <PyInit__decimal@@Base+0x2c3c>
    96c0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    96c4:	add	x0, x0, #0x318
    96c8:	mov	x1, x19
    96cc:	mov	x2, x21
    96d0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    96d4:	mov	x19, x0
    96d8:	cbnz	x0, 9418 <PyInit__decimal@@Base+0x2964>
    96dc:	ldr	x8, [x20]
    96e0:	subs	x8, x8, #0x1
    96e4:	str	x8, [x20]
    96e8:	b.ne	9658 <PyInit__decimal@@Base+0x2ba4>  // b.any
    96ec:	mov	x0, x20
    96f0:	bl	6510 <_Py_Dealloc@plt>
    96f4:	b	9658 <PyInit__decimal@@Base+0x2ba4>
    96f8:	sub	sp, sp, #0x50
    96fc:	stp	x29, x30, [sp, #16]
    9700:	stp	x24, x23, [sp, #32]
    9704:	stp	x22, x21, [sp, #48]
    9708:	stp	x20, x19, [sp, #64]
    970c:	add	x29, sp, #0x10
    9710:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
    9714:	mov	x20, x0
    9718:	ldr	x0, [x23, #1400]
    971c:	mov	x21, x2
    9720:	mov	x19, x1
    9724:	add	x2, sp, #0x8
    9728:	mov	x1, xzr
    972c:	str	wzr, [sp, #4]
    9730:	bl	6680 <PyContextVar_Get@plt>
    9734:	tbnz	w0, #31, 99f4 <PyInit__decimal@@Base+0x2f40>
    9738:	ldr	x22, [sp, #8]
    973c:	cbz	x22, 97ec <PyInit__decimal@@Base+0x2d38>
    9740:	ldr	x8, [x22]
    9744:	subs	x8, x8, #0x1
    9748:	str	x8, [x22]
    974c:	b.ne	9758 <PyInit__decimal@@Base+0x2ca4>  // b.any
    9750:	mov	x0, x22
    9754:	bl	6510 <_Py_Dealloc@plt>
    9758:	ldr	x0, [x20, #8]
    975c:	adrp	x23, 51000 <PyInit__decimal@@Base+0x4a54c>
    9760:	add	x23, x23, #0x318
    9764:	cmp	x0, x23
    9768:	b.eq	977c <PyInit__decimal@@Base+0x2cc8>  // b.none
    976c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    9770:	add	x1, x1, #0x318
    9774:	bl	6900 <PyType_IsSubtype@plt>
    9778:	cbz	w0, 9910 <PyInit__decimal@@Base+0x2e5c>
    977c:	ldr	x8, [x20]
    9780:	add	x8, x8, #0x1
    9784:	str	x8, [x20]
    9788:	ldr	x0, [x19, #8]
    978c:	cmp	x0, x23
    9790:	b.eq	97a4 <PyInit__decimal@@Base+0x2cf0>  // b.none
    9794:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    9798:	add	x1, x1, #0x318
    979c:	bl	6900 <PyType_IsSubtype@plt>
    97a0:	cbz	w0, 9934 <PyInit__decimal@@Base+0x2e80>
    97a4:	ldr	x8, [x19]
    97a8:	add	x8, x8, #0x1
    97ac:	str	x8, [x19]
    97b0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    97b4:	ldr	x8, [x8, #4008]
    97b8:	cmp	x21, x8
    97bc:	b.eq	9850 <PyInit__decimal@@Base+0x2d9c>  // b.none
    97c0:	ldr	x0, [x21, #8]
    97c4:	cmp	x0, x23
    97c8:	b.eq	97dc <PyInit__decimal@@Base+0x2d28>  // b.none
    97cc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    97d0:	add	x1, x1, #0x318
    97d4:	bl	6900 <PyType_IsSubtype@plt>
    97d8:	cbz	w0, 9a14 <PyInit__decimal@@Base+0x2f60>
    97dc:	ldr	x8, [x21]
    97e0:	add	x8, x8, #0x1
    97e4:	str	x8, [x21]
    97e8:	b	9854 <PyInit__decimal@@Base+0x2da0>
    97ec:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    97f0:	ldr	x24, [x8, #1496]
    97f4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    97f8:	add	x0, x0, #0x4b8
    97fc:	mov	x1, xzr
    9800:	bl	6780 <PyObject_CallObject@plt>
    9804:	cbz	x0, 99f4 <PyInit__decimal@@Base+0x2f40>
    9808:	ldp	q1, q0, [x24, #32]
    980c:	ldr	q2, [x24, #16]
    9810:	mov	x22, x0
    9814:	mov	x1, x22
    9818:	stp	q1, q0, [x0, #32]
    981c:	str	q2, [x0, #16]
    9820:	ldr	w8, [x24, #80]
    9824:	stp	wzr, wzr, [x0, #44]
    9828:	str	w8, [x0, #80]
    982c:	ldr	x0, [x23, #1400]
    9830:	bl	65c0 <PyContextVar_Set@plt>
    9834:	cbz	x0, 99dc <PyInit__decimal@@Base+0x2f28>
    9838:	ldr	x8, [x0]
    983c:	subs	x8, x8, #0x1
    9840:	str	x8, [x0]
    9844:	b.ne	9740 <PyInit__decimal@@Base+0x2c8c>  // b.any
    9848:	bl	6510 <_Py_Dealloc@plt>
    984c:	b	9740 <PyInit__decimal@@Base+0x2c8c>
    9850:	mov	x21, xzr
    9854:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9858:	add	x0, x0, #0x318
    985c:	bl	6890 <_PyObject_New@plt>
    9860:	cbz	x0, 98c4 <PyInit__decimal@@Base+0x2e10>
    9864:	mov	w8, #0x30                  	// #48
    9868:	mov	x23, x0
    986c:	strb	w8, [x0, #24]!
    9870:	mov	x9, #0xffffffffffffffff    	// #-1
    9874:	mov	w10, #0x4                   	// #4
    9878:	add	x1, x20, #0x18
    987c:	add	x8, x0, #0x30
    9880:	add	x2, x19, #0x18
    9884:	stur	x9, [x0, #-8]
    9888:	stp	xzr, xzr, [x0, #8]
    988c:	stp	xzr, x10, [x0, #24]
    9890:	str	x8, [x0, #40]
    9894:	cbz	x21, 9958 <PyInit__decimal@@Base+0x2ea4>
    9898:	add	x3, x21, #0x18
    989c:	add	x4, x22, #0x10
    98a0:	add	x5, sp, #0x4
    98a4:	bl	303d0 <PyInit__decimal@@Base+0x2991c>
    98a8:	ldr	x8, [x21]
    98ac:	subs	x8, x8, #0x1
    98b0:	str	x8, [x21]
    98b4:	b.ne	9964 <PyInit__decimal@@Base+0x2eb0>  // b.any
    98b8:	mov	x0, x21
    98bc:	bl	6510 <_Py_Dealloc@plt>
    98c0:	b	9964 <PyInit__decimal@@Base+0x2eb0>
    98c4:	ldr	x8, [x20]
    98c8:	subs	x8, x8, #0x1
    98cc:	str	x8, [x20]
    98d0:	b.ne	98dc <PyInit__decimal@@Base+0x2e28>  // b.any
    98d4:	mov	x0, x20
    98d8:	bl	6510 <_Py_Dealloc@plt>
    98dc:	ldr	x8, [x19]
    98e0:	subs	x8, x8, #0x1
    98e4:	str	x8, [x19]
    98e8:	b.ne	98f4 <PyInit__decimal@@Base+0x2e40>  // b.any
    98ec:	mov	x0, x19
    98f0:	bl	6510 <_Py_Dealloc@plt>
    98f4:	cbz	x21, 99f4 <PyInit__decimal@@Base+0x2f40>
    98f8:	ldr	x8, [x21]
    98fc:	subs	x8, x8, #0x1
    9900:	str	x8, [x21]
    9904:	b.ne	99f4 <PyInit__decimal@@Base+0x2f40>  // b.any
    9908:	mov	x0, x21
    990c:	b	99f0 <PyInit__decimal@@Base+0x2f3c>
    9910:	ldr	x8, [x20, #8]
    9914:	ldrb	w8, [x8, #171]
    9918:	tbnz	w8, #0, 99bc <PyInit__decimal@@Base+0x2f08>
    991c:	adrp	x23, 50000 <PyInit__decimal@@Base+0x4954c>
    9920:	ldr	x23, [x23, #3912]
    9924:	ldr	x8, [x23]
    9928:	add	x8, x8, #0x1
    992c:	str	x8, [x23]
    9930:	b	99f8 <PyInit__decimal@@Base+0x2f44>
    9934:	ldr	x8, [x19, #8]
    9938:	ldrb	w8, [x8, #171]
    993c:	tbnz	w8, #0, 9a38 <PyInit__decimal@@Base+0x2f84>
    9940:	adrp	x23, 50000 <PyInit__decimal@@Base+0x4954c>
    9944:	ldr	x23, [x23, #3912]
    9948:	ldr	x8, [x23]
    994c:	add	x8, x8, #0x1
    9950:	str	x8, [x23]
    9954:	b	9a58 <PyInit__decimal@@Base+0x2fa4>
    9958:	add	x3, x22, #0x10
    995c:	add	x4, sp, #0x4
    9960:	bl	2ef54 <PyInit__decimal@@Base+0x284a0>
    9964:	ldr	x8, [x20]
    9968:	subs	x8, x8, #0x1
    996c:	str	x8, [x20]
    9970:	b.ne	997c <PyInit__decimal@@Base+0x2ec8>  // b.any
    9974:	mov	x0, x20
    9978:	bl	6510 <_Py_Dealloc@plt>
    997c:	ldr	x8, [x19]
    9980:	subs	x8, x8, #0x1
    9984:	str	x8, [x19]
    9988:	b.ne	9994 <PyInit__decimal@@Base+0x2ee0>  // b.any
    998c:	mov	x0, x19
    9990:	bl	6510 <_Py_Dealloc@plt>
    9994:	ldr	w1, [sp, #4]
    9998:	mov	x0, x22
    999c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    99a0:	cbz	w0, 99f8 <PyInit__decimal@@Base+0x2f44>
    99a4:	ldr	x8, [x23]
    99a8:	subs	x8, x8, #0x1
    99ac:	str	x8, [x23]
    99b0:	b.ne	99f4 <PyInit__decimal@@Base+0x2f40>  // b.any
    99b4:	mov	x0, x23
    99b8:	b	99f0 <PyInit__decimal@@Base+0x2f3c>
    99bc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    99c0:	add	x0, x0, #0x318
    99c4:	mov	x1, x20
    99c8:	mov	x2, x22
    99cc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    99d0:	mov	x20, x0
    99d4:	cbnz	x0, 9788 <PyInit__decimal@@Base+0x2cd4>
    99d8:	b	99f4 <PyInit__decimal@@Base+0x2f40>
    99dc:	ldr	x8, [x22]
    99e0:	subs	x8, x8, #0x1
    99e4:	str	x8, [x22]
    99e8:	b.ne	99f4 <PyInit__decimal@@Base+0x2f40>  // b.any
    99ec:	mov	x0, x22
    99f0:	bl	6510 <_Py_Dealloc@plt>
    99f4:	mov	x23, xzr
    99f8:	mov	x0, x23
    99fc:	ldp	x20, x19, [sp, #64]
    9a00:	ldp	x22, x21, [sp, #48]
    9a04:	ldp	x24, x23, [sp, #32]
    9a08:	ldp	x29, x30, [sp, #16]
    9a0c:	add	sp, sp, #0x50
    9a10:	ret
    9a14:	ldr	x8, [x21, #8]
    9a18:	ldrb	w8, [x8, #171]
    9a1c:	tbnz	w8, #0, 9a74 <PyInit__decimal@@Base+0x2fc0>
    9a20:	adrp	x23, 50000 <PyInit__decimal@@Base+0x4954c>
    9a24:	ldr	x23, [x23, #3912]
    9a28:	ldr	x8, [x23]
    9a2c:	add	x8, x8, #0x1
    9a30:	str	x8, [x23]
    9a34:	b	9a94 <PyInit__decimal@@Base+0x2fe0>
    9a38:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9a3c:	add	x0, x0, #0x318
    9a40:	mov	x1, x19
    9a44:	mov	x2, x22
    9a48:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    9a4c:	mov	x19, x0
    9a50:	cbnz	x0, 97b0 <PyInit__decimal@@Base+0x2cfc>
    9a54:	mov	x23, xzr
    9a58:	ldr	x8, [x20]
    9a5c:	subs	x8, x8, #0x1
    9a60:	str	x8, [x20]
    9a64:	b.ne	99f8 <PyInit__decimal@@Base+0x2f44>  // b.any
    9a68:	mov	x0, x20
    9a6c:	bl	6510 <_Py_Dealloc@plt>
    9a70:	b	99f8 <PyInit__decimal@@Base+0x2f44>
    9a74:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9a78:	add	x0, x0, #0x318
    9a7c:	mov	x1, x21
    9a80:	mov	x2, x22
    9a84:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    9a88:	mov	x21, x0
    9a8c:	cbnz	x0, 9854 <PyInit__decimal@@Base+0x2da0>
    9a90:	mov	x23, xzr
    9a94:	ldr	x8, [x20]
    9a98:	subs	x8, x8, #0x1
    9a9c:	str	x8, [x20]
    9aa0:	b.ne	9aac <PyInit__decimal@@Base+0x2ff8>  // b.any
    9aa4:	mov	x0, x20
    9aa8:	bl	6510 <_Py_Dealloc@plt>
    9aac:	ldr	x8, [x19]
    9ab0:	subs	x8, x8, #0x1
    9ab4:	str	x8, [x19]
    9ab8:	b.ne	99f8 <PyInit__decimal@@Base+0x2f44>  // b.any
    9abc:	mov	x0, x19
    9ac0:	bl	6510 <_Py_Dealloc@plt>
    9ac4:	b	99f8 <PyInit__decimal@@Base+0x2f44>
    9ac8:	sub	sp, sp, #0x40
    9acc:	stp	x29, x30, [sp, #16]
    9ad0:	stp	x22, x21, [sp, #32]
    9ad4:	stp	x20, x19, [sp, #48]
    9ad8:	add	x29, sp, #0x10
    9adc:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    9ae0:	mov	x19, x0
    9ae4:	ldr	x0, [x21, #1400]
    9ae8:	add	x2, sp, #0x8
    9aec:	mov	x1, xzr
    9af0:	str	wzr, [sp, #4]
    9af4:	bl	6680 <PyContextVar_Get@plt>
    9af8:	tbnz	w0, #31, 9c0c <PyInit__decimal@@Base+0x3158>
    9afc:	ldr	x20, [sp, #8]
    9b00:	cbz	x20, 9b90 <PyInit__decimal@@Base+0x30dc>
    9b04:	ldr	x8, [x20]
    9b08:	subs	x8, x8, #0x1
    9b0c:	str	x8, [x20]
    9b10:	b.ne	9b1c <PyInit__decimal@@Base+0x3068>  // b.any
    9b14:	mov	x0, x20
    9b18:	bl	6510 <_Py_Dealloc@plt>
    9b1c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9b20:	add	x0, x0, #0x318
    9b24:	bl	6890 <_PyObject_New@plt>
    9b28:	mov	x21, x0
    9b2c:	cbz	x0, 9c10 <PyInit__decimal@@Base+0x315c>
    9b30:	mov	w8, #0x30                  	// #48
    9b34:	mov	x0, x21
    9b38:	strb	w8, [x0, #24]!
    9b3c:	mov	x9, #0xffffffffffffffff    	// #-1
    9b40:	mov	w10, #0x4                   	// #4
    9b44:	add	x1, x19, #0x18
    9b48:	add	x8, x0, #0x30
    9b4c:	add	x2, x20, #0x10
    9b50:	add	x3, sp, #0x4
    9b54:	stur	x9, [x0, #-8]
    9b58:	stp	xzr, xzr, [x0, #8]
    9b5c:	stp	xzr, x10, [x0, #24]
    9b60:	str	x8, [x0, #40]
    9b64:	bl	26db4 <PyInit__decimal@@Base+0x20300>
    9b68:	ldr	w1, [sp, #4]
    9b6c:	mov	x0, x20
    9b70:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    9b74:	cbz	w0, 9c10 <PyInit__decimal@@Base+0x315c>
    9b78:	ldr	x8, [x21]
    9b7c:	subs	x8, x8, #0x1
    9b80:	str	x8, [x21]
    9b84:	b.ne	9c0c <PyInit__decimal@@Base+0x3158>  // b.any
    9b88:	mov	x0, x21
    9b8c:	b	9c08 <PyInit__decimal@@Base+0x3154>
    9b90:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    9b94:	ldr	x22, [x8, #1496]
    9b98:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9b9c:	add	x0, x0, #0x4b8
    9ba0:	mov	x1, xzr
    9ba4:	bl	6780 <PyObject_CallObject@plt>
    9ba8:	cbz	x0, 9c0c <PyInit__decimal@@Base+0x3158>
    9bac:	ldp	q1, q0, [x22, #32]
    9bb0:	ldr	q2, [x22, #16]
    9bb4:	mov	x20, x0
    9bb8:	mov	x1, x20
    9bbc:	stp	q1, q0, [x0, #32]
    9bc0:	str	q2, [x0, #16]
    9bc4:	ldr	w8, [x22, #80]
    9bc8:	stp	wzr, wzr, [x0, #44]
    9bcc:	str	w8, [x0, #80]
    9bd0:	ldr	x0, [x21, #1400]
    9bd4:	bl	65c0 <PyContextVar_Set@plt>
    9bd8:	cbz	x0, 9bf4 <PyInit__decimal@@Base+0x3140>
    9bdc:	ldr	x8, [x0]
    9be0:	subs	x8, x8, #0x1
    9be4:	str	x8, [x0]
    9be8:	b.ne	9b04 <PyInit__decimal@@Base+0x3050>  // b.any
    9bec:	bl	6510 <_Py_Dealloc@plt>
    9bf0:	b	9b04 <PyInit__decimal@@Base+0x3050>
    9bf4:	ldr	x8, [x20]
    9bf8:	subs	x8, x8, #0x1
    9bfc:	str	x8, [x20]
    9c00:	b.ne	9c0c <PyInit__decimal@@Base+0x3158>  // b.any
    9c04:	mov	x0, x20
    9c08:	bl	6510 <_Py_Dealloc@plt>
    9c0c:	mov	x21, xzr
    9c10:	mov	x0, x21
    9c14:	ldp	x20, x19, [sp, #48]
    9c18:	ldp	x22, x21, [sp, #32]
    9c1c:	ldp	x29, x30, [sp, #16]
    9c20:	add	sp, sp, #0x40
    9c24:	ret
    9c28:	sub	sp, sp, #0x40
    9c2c:	stp	x29, x30, [sp, #16]
    9c30:	stp	x22, x21, [sp, #32]
    9c34:	stp	x20, x19, [sp, #48]
    9c38:	add	x29, sp, #0x10
    9c3c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    9c40:	mov	x19, x0
    9c44:	ldr	x0, [x21, #1400]
    9c48:	add	x2, sp, #0x8
    9c4c:	mov	x1, xzr
    9c50:	str	wzr, [sp, #4]
    9c54:	bl	6680 <PyContextVar_Get@plt>
    9c58:	tbnz	w0, #31, 9d6c <PyInit__decimal@@Base+0x32b8>
    9c5c:	ldr	x20, [sp, #8]
    9c60:	cbz	x20, 9cf0 <PyInit__decimal@@Base+0x323c>
    9c64:	ldr	x8, [x20]
    9c68:	subs	x8, x8, #0x1
    9c6c:	str	x8, [x20]
    9c70:	b.ne	9c7c <PyInit__decimal@@Base+0x31c8>  // b.any
    9c74:	mov	x0, x20
    9c78:	bl	6510 <_Py_Dealloc@plt>
    9c7c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9c80:	add	x0, x0, #0x318
    9c84:	bl	6890 <_PyObject_New@plt>
    9c88:	mov	x21, x0
    9c8c:	cbz	x0, 9d70 <PyInit__decimal@@Base+0x32bc>
    9c90:	mov	w8, #0x30                  	// #48
    9c94:	mov	x0, x21
    9c98:	strb	w8, [x0, #24]!
    9c9c:	mov	x9, #0xffffffffffffffff    	// #-1
    9ca0:	mov	w10, #0x4                   	// #4
    9ca4:	add	x1, x19, #0x18
    9ca8:	add	x8, x0, #0x30
    9cac:	add	x2, x20, #0x10
    9cb0:	add	x3, sp, #0x4
    9cb4:	stur	x9, [x0, #-8]
    9cb8:	stp	xzr, xzr, [x0, #8]
    9cbc:	stp	xzr, x10, [x0, #24]
    9cc0:	str	x8, [x0, #40]
    9cc4:	bl	26e74 <PyInit__decimal@@Base+0x203c0>
    9cc8:	ldr	w1, [sp, #4]
    9ccc:	mov	x0, x20
    9cd0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    9cd4:	cbz	w0, 9d70 <PyInit__decimal@@Base+0x32bc>
    9cd8:	ldr	x8, [x21]
    9cdc:	subs	x8, x8, #0x1
    9ce0:	str	x8, [x21]
    9ce4:	b.ne	9d6c <PyInit__decimal@@Base+0x32b8>  // b.any
    9ce8:	mov	x0, x21
    9cec:	b	9d68 <PyInit__decimal@@Base+0x32b4>
    9cf0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    9cf4:	ldr	x22, [x8, #1496]
    9cf8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9cfc:	add	x0, x0, #0x4b8
    9d00:	mov	x1, xzr
    9d04:	bl	6780 <PyObject_CallObject@plt>
    9d08:	cbz	x0, 9d6c <PyInit__decimal@@Base+0x32b8>
    9d0c:	ldp	q1, q0, [x22, #32]
    9d10:	ldr	q2, [x22, #16]
    9d14:	mov	x20, x0
    9d18:	mov	x1, x20
    9d1c:	stp	q1, q0, [x0, #32]
    9d20:	str	q2, [x0, #16]
    9d24:	ldr	w8, [x22, #80]
    9d28:	stp	wzr, wzr, [x0, #44]
    9d2c:	str	w8, [x0, #80]
    9d30:	ldr	x0, [x21, #1400]
    9d34:	bl	65c0 <PyContextVar_Set@plt>
    9d38:	cbz	x0, 9d54 <PyInit__decimal@@Base+0x32a0>
    9d3c:	ldr	x8, [x0]
    9d40:	subs	x8, x8, #0x1
    9d44:	str	x8, [x0]
    9d48:	b.ne	9c64 <PyInit__decimal@@Base+0x31b0>  // b.any
    9d4c:	bl	6510 <_Py_Dealloc@plt>
    9d50:	b	9c64 <PyInit__decimal@@Base+0x31b0>
    9d54:	ldr	x8, [x20]
    9d58:	subs	x8, x8, #0x1
    9d5c:	str	x8, [x20]
    9d60:	b.ne	9d6c <PyInit__decimal@@Base+0x32b8>  // b.any
    9d64:	mov	x0, x20
    9d68:	bl	6510 <_Py_Dealloc@plt>
    9d6c:	mov	x21, xzr
    9d70:	mov	x0, x21
    9d74:	ldp	x20, x19, [sp, #48]
    9d78:	ldp	x22, x21, [sp, #32]
    9d7c:	ldp	x29, x30, [sp, #16]
    9d80:	add	sp, sp, #0x40
    9d84:	ret
    9d88:	sub	sp, sp, #0x40
    9d8c:	stp	x29, x30, [sp, #16]
    9d90:	stp	x22, x21, [sp, #32]
    9d94:	stp	x20, x19, [sp, #48]
    9d98:	add	x29, sp, #0x10
    9d9c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    9da0:	mov	x19, x0
    9da4:	ldr	x0, [x21, #1400]
    9da8:	add	x2, sp, #0x8
    9dac:	mov	x1, xzr
    9db0:	str	wzr, [sp, #4]
    9db4:	bl	6680 <PyContextVar_Get@plt>
    9db8:	tbnz	w0, #31, 9ecc <PyInit__decimal@@Base+0x3418>
    9dbc:	ldr	x20, [sp, #8]
    9dc0:	cbz	x20, 9e50 <PyInit__decimal@@Base+0x339c>
    9dc4:	ldr	x8, [x20]
    9dc8:	subs	x8, x8, #0x1
    9dcc:	str	x8, [x20]
    9dd0:	b.ne	9ddc <PyInit__decimal@@Base+0x3328>  // b.any
    9dd4:	mov	x0, x20
    9dd8:	bl	6510 <_Py_Dealloc@plt>
    9ddc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9de0:	add	x0, x0, #0x318
    9de4:	bl	6890 <_PyObject_New@plt>
    9de8:	mov	x21, x0
    9dec:	cbz	x0, 9ed0 <PyInit__decimal@@Base+0x341c>
    9df0:	mov	w8, #0x30                  	// #48
    9df4:	mov	x0, x21
    9df8:	strb	w8, [x0, #24]!
    9dfc:	mov	x9, #0xffffffffffffffff    	// #-1
    9e00:	mov	w10, #0x4                   	// #4
    9e04:	add	x1, x19, #0x18
    9e08:	add	x8, x0, #0x30
    9e0c:	add	x2, x20, #0x10
    9e10:	add	x3, sp, #0x4
    9e14:	stur	x9, [x0, #-8]
    9e18:	stp	xzr, xzr, [x0, #8]
    9e1c:	stp	xzr, x10, [x0, #24]
    9e20:	str	x8, [x0, #40]
    9e24:	bl	26d28 <PyInit__decimal@@Base+0x20274>
    9e28:	ldr	w1, [sp, #4]
    9e2c:	mov	x0, x20
    9e30:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    9e34:	cbz	w0, 9ed0 <PyInit__decimal@@Base+0x341c>
    9e38:	ldr	x8, [x21]
    9e3c:	subs	x8, x8, #0x1
    9e40:	str	x8, [x21]
    9e44:	b.ne	9ecc <PyInit__decimal@@Base+0x3418>  // b.any
    9e48:	mov	x0, x21
    9e4c:	b	9ec8 <PyInit__decimal@@Base+0x3414>
    9e50:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    9e54:	ldr	x22, [x8, #1496]
    9e58:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9e5c:	add	x0, x0, #0x4b8
    9e60:	mov	x1, xzr
    9e64:	bl	6780 <PyObject_CallObject@plt>
    9e68:	cbz	x0, 9ecc <PyInit__decimal@@Base+0x3418>
    9e6c:	ldp	q1, q0, [x22, #32]
    9e70:	ldr	q2, [x22, #16]
    9e74:	mov	x20, x0
    9e78:	mov	x1, x20
    9e7c:	stp	q1, q0, [x0, #32]
    9e80:	str	q2, [x0, #16]
    9e84:	ldr	w8, [x22, #80]
    9e88:	stp	wzr, wzr, [x0, #44]
    9e8c:	str	w8, [x0, #80]
    9e90:	ldr	x0, [x21, #1400]
    9e94:	bl	65c0 <PyContextVar_Set@plt>
    9e98:	cbz	x0, 9eb4 <PyInit__decimal@@Base+0x3400>
    9e9c:	ldr	x8, [x0]
    9ea0:	subs	x8, x8, #0x1
    9ea4:	str	x8, [x0]
    9ea8:	b.ne	9dc4 <PyInit__decimal@@Base+0x3310>  // b.any
    9eac:	bl	6510 <_Py_Dealloc@plt>
    9eb0:	b	9dc4 <PyInit__decimal@@Base+0x3310>
    9eb4:	ldr	x8, [x20]
    9eb8:	subs	x8, x8, #0x1
    9ebc:	str	x8, [x20]
    9ec0:	b.ne	9ecc <PyInit__decimal@@Base+0x3418>  // b.any
    9ec4:	mov	x0, x20
    9ec8:	bl	6510 <_Py_Dealloc@plt>
    9ecc:	mov	x21, xzr
    9ed0:	mov	x0, x21
    9ed4:	ldp	x20, x19, [sp, #48]
    9ed8:	ldp	x22, x21, [sp, #32]
    9edc:	ldp	x29, x30, [sp, #16]
    9ee0:	add	sp, sp, #0x40
    9ee4:	ret
    9ee8:	stp	x29, x30, [sp, #-16]!
    9eec:	mov	x29, sp
    9ef0:	add	x0, x0, #0x18
    9ef4:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
    9ef8:	cmp	w0, #0x0
    9efc:	cset	w0, eq  // eq = none
    9f00:	ldp	x29, x30, [sp], #16
    9f04:	ret
    9f08:	sub	sp, sp, #0x40
    9f0c:	stp	x29, x30, [sp, #16]
    9f10:	stp	x22, x21, [sp, #32]
    9f14:	stp	x20, x19, [sp, #48]
    9f18:	add	x29, sp, #0x10
    9f1c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    9f20:	ldr	x8, [x21, #1400]
    9f24:	mov	x19, x0
    9f28:	add	x2, sp, #0x8
    9f2c:	mov	x1, xzr
    9f30:	mov	x0, x8
    9f34:	bl	6680 <PyContextVar_Get@plt>
    9f38:	tbnz	w0, #31, 9fec <PyInit__decimal@@Base+0x3538>
    9f3c:	ldr	x20, [sp, #8]
    9f40:	cbz	x20, 9f70 <PyInit__decimal@@Base+0x34bc>
    9f44:	ldr	x8, [x20]
    9f48:	subs	x8, x8, #0x1
    9f4c:	str	x8, [x20]
    9f50:	b.ne	9f5c <PyInit__decimal@@Base+0x34a8>  // b.any
    9f54:	mov	x0, x20
    9f58:	bl	6510 <_Py_Dealloc@plt>
    9f5c:	mov	w2, #0x1                   	// #1
    9f60:	mov	x0, x19
    9f64:	mov	x1, x20
    9f68:	bl	a9bc <PyInit__decimal@@Base+0x3f08>
    9f6c:	b	9ff0 <PyInit__decimal@@Base+0x353c>
    9f70:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    9f74:	ldr	x22, [x8, #1496]
    9f78:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    9f7c:	add	x0, x0, #0x4b8
    9f80:	mov	x1, xzr
    9f84:	bl	6780 <PyObject_CallObject@plt>
    9f88:	cbz	x0, 9fec <PyInit__decimal@@Base+0x3538>
    9f8c:	ldp	q1, q0, [x22, #32]
    9f90:	ldr	q2, [x22, #16]
    9f94:	mov	x20, x0
    9f98:	mov	x1, x20
    9f9c:	stp	q1, q0, [x0, #32]
    9fa0:	str	q2, [x0, #16]
    9fa4:	ldr	w8, [x22, #80]
    9fa8:	stp	wzr, wzr, [x0, #44]
    9fac:	str	w8, [x0, #80]
    9fb0:	ldr	x0, [x21, #1400]
    9fb4:	bl	65c0 <PyContextVar_Set@plt>
    9fb8:	cbz	x0, 9fd4 <PyInit__decimal@@Base+0x3520>
    9fbc:	ldr	x8, [x0]
    9fc0:	subs	x8, x8, #0x1
    9fc4:	str	x8, [x0]
    9fc8:	b.ne	9f44 <PyInit__decimal@@Base+0x3490>  // b.any
    9fcc:	bl	6510 <_Py_Dealloc@plt>
    9fd0:	b	9f44 <PyInit__decimal@@Base+0x3490>
    9fd4:	ldr	x8, [x20]
    9fd8:	subs	x8, x8, #0x1
    9fdc:	str	x8, [x20]
    9fe0:	b.ne	9fec <PyInit__decimal@@Base+0x3538>  // b.any
    9fe4:	mov	x0, x20
    9fe8:	bl	6510 <_Py_Dealloc@plt>
    9fec:	mov	x0, xzr
    9ff0:	ldp	x20, x19, [sp, #48]
    9ff4:	ldp	x22, x21, [sp, #32]
    9ff8:	ldp	x29, x30, [sp, #16]
    9ffc:	add	sp, sp, #0x40
    a000:	ret
    a004:	stp	x29, x30, [sp, #-32]!
    a008:	stp	x20, x19, [sp, #16]
    a00c:	mov	x29, sp
    a010:	add	x19, x0, #0x18
    a014:	mov	x20, x0
    a018:	mov	x0, x19
    a01c:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
    a020:	cbz	w0, a04c <PyInit__decimal@@Base+0x3598>
    a024:	mov	x0, x19
    a028:	bl	20c24 <PyInit__decimal@@Base+0x1a170>
    a02c:	cbz	w0, a084 <PyInit__decimal@@Base+0x35d0>
    a030:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    a034:	ldr	x8, [x8, #3928]
    a038:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    a03c:	add	x1, x1, #0x319
    a040:	ldr	x0, [x8]
    a044:	bl	6590 <PyErr_SetString@plt>
    a048:	b	a0b0 <PyInit__decimal@@Base+0x35fc>
    a04c:	mov	x0, x20
    a050:	bl	7c60 <PyInit__decimal@@Base+0x11ac>
    a054:	mov	x19, x0
    a058:	cbz	x0, a0b0 <PyInit__decimal@@Base+0x35fc>
    a05c:	mov	x0, x19
    a060:	bl	69d0 <PyFloat_FromString@plt>
    a064:	ldr	x8, [x19]
    a068:	mov	x20, x0
    a06c:	subs	x8, x8, #0x1
    a070:	str	x8, [x19]
    a074:	b.ne	a0b4 <PyInit__decimal@@Base+0x3600>  // b.any
    a078:	mov	x0, x19
    a07c:	bl	6510 <_Py_Dealloc@plt>
    a080:	b	a0b4 <PyInit__decimal@@Base+0x3600>
    a084:	mov	x0, x19
    a088:	bl	20bf0 <PyInit__decimal@@Base+0x1a13c>
    a08c:	cbz	w0, a09c <PyInit__decimal@@Base+0x35e8>
    a090:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    a094:	add	x0, x0, #0x33f
    a098:	b	a0a4 <PyInit__decimal@@Base+0x35f0>
    a09c:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
    a0a0:	add	x0, x0, #0x340
    a0a4:	bl	68a0 <PyUnicode_FromString@plt>
    a0a8:	mov	x19, x0
    a0ac:	cbnz	x0, a05c <PyInit__decimal@@Base+0x35a8>
    a0b0:	mov	x20, xzr
    a0b4:	mov	x0, x20
    a0b8:	ldp	x20, x19, [sp, #16]
    a0bc:	ldp	x29, x30, [sp], #32
    a0c0:	ret
    a0c4:	sub	sp, sp, #0x50
    a0c8:	stp	x29, x30, [sp, #16]
    a0cc:	str	x23, [sp, #32]
    a0d0:	stp	x22, x21, [sp, #48]
    a0d4:	stp	x20, x19, [sp, #64]
    a0d8:	add	x29, sp, #0x10
    a0dc:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    a0e0:	mov	x20, x0
    a0e4:	ldr	x0, [x22, #1400]
    a0e8:	mov	x19, x1
    a0ec:	add	x2, x29, #0x18
    a0f0:	mov	x1, xzr
    a0f4:	stur	wzr, [x29, #-4]
    a0f8:	bl	6680 <PyContextVar_Get@plt>
    a0fc:	tbnz	w0, #31, a330 <PyInit__decimal@@Base+0x387c>
    a100:	ldr	x21, [x29, #24]
    a104:	cbz	x21, a21c <PyInit__decimal@@Base+0x3768>
    a108:	ldr	x8, [x21]
    a10c:	subs	x8, x8, #0x1
    a110:	str	x8, [x21]
    a114:	b.ne	a120 <PyInit__decimal@@Base+0x366c>  // b.any
    a118:	mov	x0, x21
    a11c:	bl	6510 <_Py_Dealloc@plt>
    a120:	ldr	x0, [x20, #8]
    a124:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    a128:	add	x22, x22, #0x318
    a12c:	cmp	x0, x22
    a130:	b.eq	a144 <PyInit__decimal@@Base+0x3690>  // b.none
    a134:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    a138:	add	x1, x1, #0x318
    a13c:	bl	6900 <PyType_IsSubtype@plt>
    a140:	cbz	w0, a2b0 <PyInit__decimal@@Base+0x37fc>
    a144:	ldr	x8, [x20]
    a148:	add	x8, x8, #0x1
    a14c:	str	x8, [x20]
    a150:	ldr	x0, [x19, #8]
    a154:	cmp	x0, x22
    a158:	b.eq	a16c <PyInit__decimal@@Base+0x36b8>  // b.none
    a15c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    a160:	add	x1, x1, #0x318
    a164:	bl	6900 <PyType_IsSubtype@plt>
    a168:	cbz	w0, a2d4 <PyInit__decimal@@Base+0x3820>
    a16c:	ldr	x8, [x19]
    a170:	add	x8, x8, #0x1
    a174:	str	x8, [x19]
    a178:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    a17c:	add	x0, x0, #0x318
    a180:	bl	6890 <_PyObject_New@plt>
    a184:	cbz	x0, a280 <PyInit__decimal@@Base+0x37cc>
    a188:	mov	w8, #0x30                  	// #48
    a18c:	mov	x22, x0
    a190:	strb	w8, [x0, #24]!
    a194:	mov	x9, #0xffffffffffffffff    	// #-1
    a198:	mov	w10, #0x4                   	// #4
    a19c:	add	x1, x20, #0x18
    a1a0:	add	x2, x19, #0x18
    a1a4:	add	x8, x0, #0x30
    a1a8:	add	x3, x21, #0x10
    a1ac:	sub	x4, x29, #0x4
    a1b0:	stur	x9, [x0, #-8]
    a1b4:	stp	xzr, xzr, [x0, #8]
    a1b8:	stp	xzr, x10, [x0, #24]
    a1bc:	str	x8, [x0, #40]
    a1c0:	bl	298f4 <PyInit__decimal@@Base+0x22e40>
    a1c4:	ldr	x8, [x20]
    a1c8:	subs	x8, x8, #0x1
    a1cc:	str	x8, [x20]
    a1d0:	b.ne	a1dc <PyInit__decimal@@Base+0x3728>  // b.any
    a1d4:	mov	x0, x20
    a1d8:	bl	6510 <_Py_Dealloc@plt>
    a1dc:	ldr	x8, [x19]
    a1e0:	subs	x8, x8, #0x1
    a1e4:	str	x8, [x19]
    a1e8:	b.ne	a1f4 <PyInit__decimal@@Base+0x3740>  // b.any
    a1ec:	mov	x0, x19
    a1f0:	bl	6510 <_Py_Dealloc@plt>
    a1f4:	ldur	w1, [x29, #-4]
    a1f8:	mov	x0, x21
    a1fc:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    a200:	cbz	w0, a334 <PyInit__decimal@@Base+0x3880>
    a204:	ldr	x8, [x22]
    a208:	subs	x8, x8, #0x1
    a20c:	str	x8, [x22]
    a210:	b.ne	a330 <PyInit__decimal@@Base+0x387c>  // b.any
    a214:	mov	x0, x22
    a218:	b	a32c <PyInit__decimal@@Base+0x3878>
    a21c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    a220:	ldr	x23, [x8, #1496]
    a224:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    a228:	add	x0, x0, #0x4b8
    a22c:	mov	x1, xzr
    a230:	bl	6780 <PyObject_CallObject@plt>
    a234:	cbz	x0, a330 <PyInit__decimal@@Base+0x387c>
    a238:	ldp	q1, q0, [x23, #32]
    a23c:	ldr	q2, [x23, #16]
    a240:	mov	x21, x0
    a244:	mov	x1, x21
    a248:	stp	q1, q0, [x0, #32]
    a24c:	str	q2, [x0, #16]
    a250:	ldr	w8, [x23, #80]
    a254:	stp	wzr, wzr, [x0, #44]
    a258:	str	w8, [x0, #80]
    a25c:	ldr	x0, [x22, #1400]
    a260:	bl	65c0 <PyContextVar_Set@plt>
    a264:	cbz	x0, a318 <PyInit__decimal@@Base+0x3864>
    a268:	ldr	x8, [x0]
    a26c:	subs	x8, x8, #0x1
    a270:	str	x8, [x0]
    a274:	b.ne	a108 <PyInit__decimal@@Base+0x3654>  // b.any
    a278:	bl	6510 <_Py_Dealloc@plt>
    a27c:	b	a108 <PyInit__decimal@@Base+0x3654>
    a280:	ldr	x8, [x20]
    a284:	subs	x8, x8, #0x1
    a288:	str	x8, [x20]
    a28c:	b.ne	a298 <PyInit__decimal@@Base+0x37e4>  // b.any
    a290:	mov	x0, x20
    a294:	bl	6510 <_Py_Dealloc@plt>
    a298:	ldr	x8, [x19]
    a29c:	subs	x8, x8, #0x1
    a2a0:	str	x8, [x19]
    a2a4:	b.ne	a330 <PyInit__decimal@@Base+0x387c>  // b.any
    a2a8:	mov	x0, x19
    a2ac:	b	a32c <PyInit__decimal@@Base+0x3878>
    a2b0:	ldr	x8, [x20, #8]
    a2b4:	ldrb	w8, [x8, #171]
    a2b8:	tbnz	w8, #0, a2f8 <PyInit__decimal@@Base+0x3844>
    a2bc:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    a2c0:	ldr	x22, [x22, #3912]
    a2c4:	ldr	x8, [x22]
    a2c8:	add	x8, x8, #0x1
    a2cc:	str	x8, [x22]
    a2d0:	b	a334 <PyInit__decimal@@Base+0x3880>
    a2d4:	ldr	x8, [x19, #8]
    a2d8:	ldrb	w8, [x8, #171]
    a2dc:	tbnz	w8, #0, a350 <PyInit__decimal@@Base+0x389c>
    a2e0:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    a2e4:	ldr	x22, [x22, #3912]
    a2e8:	ldr	x8, [x22]
    a2ec:	add	x8, x8, #0x1
    a2f0:	str	x8, [x22]
    a2f4:	b	a370 <PyInit__decimal@@Base+0x38bc>
    a2f8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    a2fc:	add	x0, x0, #0x318
    a300:	mov	x1, x20
    a304:	mov	x2, x21
    a308:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    a30c:	mov	x20, x0
    a310:	cbnz	x0, a150 <PyInit__decimal@@Base+0x369c>
    a314:	b	a330 <PyInit__decimal@@Base+0x387c>
    a318:	ldr	x8, [x21]
    a31c:	subs	x8, x8, #0x1
    a320:	str	x8, [x21]
    a324:	b.ne	a330 <PyInit__decimal@@Base+0x387c>  // b.any
    a328:	mov	x0, x21
    a32c:	bl	6510 <_Py_Dealloc@plt>
    a330:	mov	x22, xzr
    a334:	mov	x0, x22
    a338:	ldp	x20, x19, [sp, #64]
    a33c:	ldp	x22, x21, [sp, #48]
    a340:	ldr	x23, [sp, #32]
    a344:	ldp	x29, x30, [sp, #16]
    a348:	add	sp, sp, #0x50
    a34c:	ret
    a350:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    a354:	add	x0, x0, #0x318
    a358:	mov	x1, x19
    a35c:	mov	x2, x21
    a360:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    a364:	mov	x19, x0
    a368:	cbnz	x0, a178 <PyInit__decimal@@Base+0x36c4>
    a36c:	mov	x22, xzr
    a370:	ldr	x8, [x20]
    a374:	subs	x8, x8, #0x1
    a378:	str	x8, [x20]
    a37c:	b.ne	a334 <PyInit__decimal@@Base+0x3880>  // b.any
    a380:	mov	x0, x20
    a384:	bl	6510 <_Py_Dealloc@plt>
    a388:	b	a334 <PyInit__decimal@@Base+0x3880>
    a38c:	sub	sp, sp, #0x50
    a390:	stp	x29, x30, [sp, #16]
    a394:	str	x23, [sp, #32]
    a398:	stp	x22, x21, [sp, #48]
    a39c:	stp	x20, x19, [sp, #64]
    a3a0:	add	x29, sp, #0x10
    a3a4:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    a3a8:	mov	x20, x0
    a3ac:	ldr	x0, [x22, #1400]
    a3b0:	mov	x19, x1
    a3b4:	add	x2, x29, #0x18
    a3b8:	mov	x1, xzr
    a3bc:	stur	wzr, [x29, #-4]
    a3c0:	bl	6680 <PyContextVar_Get@plt>
    a3c4:	tbnz	w0, #31, a5f8 <PyInit__decimal@@Base+0x3b44>
    a3c8:	ldr	x21, [x29, #24]
    a3cc:	cbz	x21, a4e4 <PyInit__decimal@@Base+0x3a30>
    a3d0:	ldr	x8, [x21]
    a3d4:	subs	x8, x8, #0x1
    a3d8:	str	x8, [x21]
    a3dc:	b.ne	a3e8 <PyInit__decimal@@Base+0x3934>  // b.any
    a3e0:	mov	x0, x21
    a3e4:	bl	6510 <_Py_Dealloc@plt>
    a3e8:	ldr	x0, [x20, #8]
    a3ec:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    a3f0:	add	x22, x22, #0x318
    a3f4:	cmp	x0, x22
    a3f8:	b.eq	a40c <PyInit__decimal@@Base+0x3958>  // b.none
    a3fc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    a400:	add	x1, x1, #0x318
    a404:	bl	6900 <PyType_IsSubtype@plt>
    a408:	cbz	w0, a578 <PyInit__decimal@@Base+0x3ac4>
    a40c:	ldr	x8, [x20]
    a410:	add	x8, x8, #0x1
    a414:	str	x8, [x20]
    a418:	ldr	x0, [x19, #8]
    a41c:	cmp	x0, x22
    a420:	b.eq	a434 <PyInit__decimal@@Base+0x3980>  // b.none
    a424:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    a428:	add	x1, x1, #0x318
    a42c:	bl	6900 <PyType_IsSubtype@plt>
    a430:	cbz	w0, a59c <PyInit__decimal@@Base+0x3ae8>
    a434:	ldr	x8, [x19]
    a438:	add	x8, x8, #0x1
    a43c:	str	x8, [x19]
    a440:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    a444:	add	x0, x0, #0x318
    a448:	bl	6890 <_PyObject_New@plt>
    a44c:	cbz	x0, a548 <PyInit__decimal@@Base+0x3a94>
    a450:	mov	w8, #0x30                  	// #48
    a454:	mov	x22, x0
    a458:	strb	w8, [x0, #24]!
    a45c:	mov	x9, #0xffffffffffffffff    	// #-1
    a460:	mov	w10, #0x4                   	// #4
    a464:	add	x1, x20, #0x18
    a468:	add	x2, x19, #0x18
    a46c:	add	x8, x0, #0x30
    a470:	add	x3, x21, #0x10
    a474:	sub	x4, x29, #0x4
    a478:	stur	x9, [x0, #-8]
    a47c:	stp	xzr, xzr, [x0, #8]
    a480:	stp	xzr, x10, [x0, #24]
    a484:	str	x8, [x0, #40]
    a488:	bl	281a4 <PyInit__decimal@@Base+0x216f0>
    a48c:	ldr	x8, [x20]
    a490:	subs	x8, x8, #0x1
    a494:	str	x8, [x20]
    a498:	b.ne	a4a4 <PyInit__decimal@@Base+0x39f0>  // b.any
    a49c:	mov	x0, x20
    a4a0:	bl	6510 <_Py_Dealloc@plt>
    a4a4:	ldr	x8, [x19]
    a4a8:	subs	x8, x8, #0x1
    a4ac:	str	x8, [x19]
    a4b0:	b.ne	a4bc <PyInit__decimal@@Base+0x3a08>  // b.any
    a4b4:	mov	x0, x19
    a4b8:	bl	6510 <_Py_Dealloc@plt>
    a4bc:	ldur	w1, [x29, #-4]
    a4c0:	mov	x0, x21
    a4c4:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    a4c8:	cbz	w0, a5fc <PyInit__decimal@@Base+0x3b48>
    a4cc:	ldr	x8, [x22]
    a4d0:	subs	x8, x8, #0x1
    a4d4:	str	x8, [x22]
    a4d8:	b.ne	a5f8 <PyInit__decimal@@Base+0x3b44>  // b.any
    a4dc:	mov	x0, x22
    a4e0:	b	a5f4 <PyInit__decimal@@Base+0x3b40>
    a4e4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    a4e8:	ldr	x23, [x8, #1496]
    a4ec:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    a4f0:	add	x0, x0, #0x4b8
    a4f4:	mov	x1, xzr
    a4f8:	bl	6780 <PyObject_CallObject@plt>
    a4fc:	cbz	x0, a5f8 <PyInit__decimal@@Base+0x3b44>
    a500:	ldp	q1, q0, [x23, #32]
    a504:	ldr	q2, [x23, #16]
    a508:	mov	x21, x0
    a50c:	mov	x1, x21
    a510:	stp	q1, q0, [x0, #32]
    a514:	str	q2, [x0, #16]
    a518:	ldr	w8, [x23, #80]
    a51c:	stp	wzr, wzr, [x0, #44]
    a520:	str	w8, [x0, #80]
    a524:	ldr	x0, [x22, #1400]
    a528:	bl	65c0 <PyContextVar_Set@plt>
    a52c:	cbz	x0, a5e0 <PyInit__decimal@@Base+0x3b2c>
    a530:	ldr	x8, [x0]
    a534:	subs	x8, x8, #0x1
    a538:	str	x8, [x0]
    a53c:	b.ne	a3d0 <PyInit__decimal@@Base+0x391c>  // b.any
    a540:	bl	6510 <_Py_Dealloc@plt>
    a544:	b	a3d0 <PyInit__decimal@@Base+0x391c>
    a548:	ldr	x8, [x20]
    a54c:	subs	x8, x8, #0x1
    a550:	str	x8, [x20]
    a554:	b.ne	a560 <PyInit__decimal@@Base+0x3aac>  // b.any
    a558:	mov	x0, x20
    a55c:	bl	6510 <_Py_Dealloc@plt>
    a560:	ldr	x8, [x19]
    a564:	subs	x8, x8, #0x1
    a568:	str	x8, [x19]
    a56c:	b.ne	a5f8 <PyInit__decimal@@Base+0x3b44>  // b.any
    a570:	mov	x0, x19
    a574:	b	a5f4 <PyInit__decimal@@Base+0x3b40>
    a578:	ldr	x8, [x20, #8]
    a57c:	ldrb	w8, [x8, #171]
    a580:	tbnz	w8, #0, a5c0 <PyInit__decimal@@Base+0x3b0c>
    a584:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    a588:	ldr	x22, [x22, #3912]
    a58c:	ldr	x8, [x22]
    a590:	add	x8, x8, #0x1
    a594:	str	x8, [x22]
    a598:	b	a5fc <PyInit__decimal@@Base+0x3b48>
    a59c:	ldr	x8, [x19, #8]
    a5a0:	ldrb	w8, [x8, #171]
    a5a4:	tbnz	w8, #0, a618 <PyInit__decimal@@Base+0x3b64>
    a5a8:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
    a5ac:	ldr	x22, [x22, #3912]
    a5b0:	ldr	x8, [x22]
    a5b4:	add	x8, x8, #0x1
    a5b8:	str	x8, [x22]
    a5bc:	b	a638 <PyInit__decimal@@Base+0x3b84>
    a5c0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    a5c4:	add	x0, x0, #0x318
    a5c8:	mov	x1, x20
    a5cc:	mov	x2, x21
    a5d0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    a5d4:	mov	x20, x0
    a5d8:	cbnz	x0, a418 <PyInit__decimal@@Base+0x3964>
    a5dc:	b	a5f8 <PyInit__decimal@@Base+0x3b44>
    a5e0:	ldr	x8, [x21]
    a5e4:	subs	x8, x8, #0x1
    a5e8:	str	x8, [x21]
    a5ec:	b.ne	a5f8 <PyInit__decimal@@Base+0x3b44>  // b.any
    a5f0:	mov	x0, x21
    a5f4:	bl	6510 <_Py_Dealloc@plt>
    a5f8:	mov	x22, xzr
    a5fc:	mov	x0, x22
    a600:	ldp	x20, x19, [sp, #64]
    a604:	ldp	x22, x21, [sp, #48]
    a608:	ldr	x23, [sp, #32]
    a60c:	ldp	x29, x30, [sp, #16]
    a610:	add	sp, sp, #0x50
    a614:	ret
    a618:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    a61c:	add	x0, x0, #0x318
    a620:	mov	x1, x19
    a624:	mov	x2, x21
    a628:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    a62c:	mov	x19, x0
    a630:	cbnz	x0, a440 <PyInit__decimal@@Base+0x398c>
    a634:	mov	x22, xzr
    a638:	ldr	x8, [x20]
    a63c:	subs	x8, x8, #0x1
    a640:	str	x8, [x20]
    a644:	b.ne	a5fc <PyInit__decimal@@Base+0x3b48>  // b.any
    a648:	mov	x0, x20
    a64c:	bl	6510 <_Py_Dealloc@plt>
    a650:	b	a5fc <PyInit__decimal@@Base+0x3b48>
    a654:	stp	x29, x30, [sp, #-48]!
    a658:	stp	x22, x21, [sp, #16]
    a65c:	stp	x20, x19, [sp, #32]
    a660:	mov	x29, sp
    a664:	ldp	w8, w9, [x0, #40]
    a668:	orr	w10, w8, #0x200
    a66c:	orr	w9, w9, w1
    a670:	tst	w10, w1
    a674:	str	w9, [x0, #44]
    a678:	b.eq	a6c8 <PyInit__decimal@@Base+0x3c14>  // b.none
    a67c:	tbnz	w1, #9, a6d0 <PyInit__decimal@@Base+0x3c1c>
    a680:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
    a684:	ldr	x9, [x9, #2560]
    a688:	cbz	x9, a6ac <PyInit__decimal@@Base+0x3bf8>
    a68c:	and	w21, w8, w1
    a690:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    a694:	add	x8, x8, #0xa20
    a698:	ldur	w9, [x8, #-16]
    a69c:	tst	w21, w9
    a6a0:	b.ne	a6e8 <PyInit__decimal@@Base+0x3c34>  // b.any
    a6a4:	ldr	x9, [x8], #32
    a6a8:	cbnz	x9, a698 <PyInit__decimal@@Base+0x3be4>
    a6ac:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    a6b0:	ldr	x8, [x8, #3920]
    a6b4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    a6b8:	add	x1, x1, #0x2ae
    a6bc:	ldr	x0, [x8]
    a6c0:	bl	6590 <PyErr_SetString@plt>
    a6c4:	b	a6d4 <PyInit__decimal@@Base+0x3c20>
    a6c8:	mov	w0, wzr
    a6cc:	b	a6d8 <PyInit__decimal@@Base+0x3c24>
    a6d0:	bl	6520 <PyErr_NoMemory@plt>
    a6d4:	mov	w0, #0x1                   	// #1
    a6d8:	ldp	x20, x19, [sp, #32]
    a6dc:	ldp	x22, x21, [sp, #16]
    a6e0:	ldp	x29, x30, [sp], #48
    a6e4:	ret
    a6e8:	ldur	x20, [x8, #-8]
    a6ec:	cbz	x20, a6d4 <PyInit__decimal@@Base+0x3c20>
    a6f0:	mov	x0, xzr
    a6f4:	bl	63f0 <PyList_New@plt>
    a6f8:	cbz	x0, a6d4 <PyInit__decimal@@Base+0x3c20>
    a6fc:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    a700:	ldr	x8, [x8, #2880]
    a704:	mov	x19, x0
    a708:	cbz	x8, a740 <PyInit__decimal@@Base+0x3c8c>
    a70c:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    a710:	add	x22, x22, #0xb60
    a714:	b	a720 <PyInit__decimal@@Base+0x3c6c>
    a718:	ldr	x8, [x22], #32
    a71c:	cbz	x8, a740 <PyInit__decimal@@Base+0x3c8c>
    a720:	ldur	w8, [x22, #-16]
    a724:	tst	w8, w21
    a728:	b.eq	a718 <PyInit__decimal@@Base+0x3c64>  // b.none
    a72c:	ldur	x1, [x22, #-8]
    a730:	mov	x0, x19
    a734:	bl	66b0 <PyList_Append@plt>
    a738:	tbz	w0, #31, a718 <PyInit__decimal@@Base+0x3c64>
    a73c:	b	a78c <PyInit__decimal@@Base+0x3cd8>
    a740:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    a744:	ldr	x8, [x8, #2592]
    a748:	cbz	x8, a780 <PyInit__decimal@@Base+0x3ccc>
    a74c:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    a750:	add	x22, x22, #0xa40
    a754:	b	a760 <PyInit__decimal@@Base+0x3cac>
    a758:	ldr	x8, [x22], #32
    a75c:	cbz	x8, a780 <PyInit__decimal@@Base+0x3ccc>
    a760:	ldur	w8, [x22, #-16]
    a764:	tst	w8, w21
    a768:	b.eq	a758 <PyInit__decimal@@Base+0x3ca4>  // b.none
    a76c:	ldur	x1, [x22, #-8]
    a770:	mov	x0, x19
    a774:	bl	66b0 <PyList_Append@plt>
    a778:	tbz	w0, #31, a758 <PyInit__decimal@@Base+0x3ca4>
    a77c:	b	a78c <PyInit__decimal@@Base+0x3cd8>
    a780:	mov	x0, x20
    a784:	mov	x1, x19
    a788:	bl	6530 <PyErr_SetObject@plt>
    a78c:	ldr	x8, [x19]
    a790:	subs	x8, x8, #0x1
    a794:	str	x8, [x19]
    a798:	b.ne	a6d4 <PyInit__decimal@@Base+0x3c20>  // b.any
    a79c:	mov	x0, x19
    a7a0:	bl	6510 <_Py_Dealloc@plt>
    a7a4:	b	a6d4 <PyInit__decimal@@Base+0x3c20>
    a7a8:	sub	sp, sp, #0x60
    a7ac:	stp	x29, x30, [sp, #48]
    a7b0:	str	x21, [sp, #64]
    a7b4:	stp	x20, x19, [sp, #80]
    a7b8:	add	x29, sp, #0x30
    a7bc:	str	wzr, [x29, #28]
    a7c0:	ldr	x8, [x1, #8]
    a7c4:	ldrb	w8, [x8, #171]
    a7c8:	tbnz	w8, #0, a7e8 <PyInit__decimal@@Base+0x3d34>
    a7cc:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    a7d0:	ldr	x8, [x8, #3936]
    a7d4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    a7d8:	add	x1, x1, #0x292
    a7dc:	ldr	x0, [x8]
    a7e0:	bl	6590 <PyErr_SetString@plt>
    a7e4:	b	a86c <PyInit__decimal@@Base+0x3db8>
    a7e8:	mov	x21, x0
    a7ec:	mov	x0, sp
    a7f0:	mov	x20, x2
    a7f4:	mov	x19, x1
    a7f8:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
    a7fc:	mov	x2, sp
    a800:	add	x3, x29, #0x1c
    a804:	mov	x0, x21
    a808:	mov	x1, x19
    a80c:	bl	a888 <PyInit__decimal@@Base+0x3dd4>
    a810:	mov	x19, x0
    a814:	cbz	x0, a870 <PyInit__decimal@@Base+0x3dbc>
    a818:	ldr	w8, [x29, #28]
    a81c:	mov	w9, #0x1041                	// #4161
    a820:	tst	w8, w9
    a824:	b.eq	a83c <PyInit__decimal@@Base+0x3d88>  // b.none
    a828:	add	x0, x19, #0x18
    a82c:	add	x2, x29, #0x1c
    a830:	mov	w1, #0x100                 	// #256
    a834:	bl	21760 <PyInit__decimal@@Base+0x1acac>
    a838:	ldr	w8, [x29, #28]
    a83c:	mov	w9, #0x3be                 	// #958
    a840:	and	w1, w8, w9
    a844:	mov	x0, x20
    a848:	str	w1, [x29, #28]
    a84c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    a850:	cbz	w0, a870 <PyInit__decimal@@Base+0x3dbc>
    a854:	ldr	x8, [x19]
    a858:	subs	x8, x8, #0x1
    a85c:	str	x8, [x19]
    a860:	b.ne	a86c <PyInit__decimal@@Base+0x3db8>  // b.any
    a864:	mov	x0, x19
    a868:	bl	6510 <_Py_Dealloc@plt>
    a86c:	mov	x19, xzr
    a870:	mov	x0, x19
    a874:	ldp	x20, x19, [sp, #80]
    a878:	ldr	x21, [sp, #64]
    a87c:	ldp	x29, x30, [sp, #48]
    a880:	add	sp, sp, #0x60
    a884:	ret
    a888:	stp	x29, x30, [sp, #-64]!
    a88c:	str	x23, [sp, #16]
    a890:	stp	x22, x21, [sp, #32]
    a894:	stp	x20, x19, [sp, #48]
    a898:	mov	x29, sp
    a89c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    a8a0:	add	x8, x8, #0x318
    a8a4:	mov	x20, x3
    a8a8:	mov	x21, x2
    a8ac:	cmp	x0, x8
    a8b0:	mov	x23, x1
    a8b4:	b.eq	a8d0 <PyInit__decimal@@Base+0x3e1c>  // b.none
    a8b8:	ldr	x8, [x0, #304]
    a8bc:	mov	x1, xzr
    a8c0:	blr	x8
    a8c4:	mov	x19, x0
    a8c8:	cbnz	x0, a8e4 <PyInit__decimal@@Base+0x3e30>
    a8cc:	b	a9a4 <PyInit__decimal@@Base+0x3ef0>
    a8d0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    a8d4:	add	x0, x0, #0x318
    a8d8:	bl	6890 <_PyObject_New@plt>
    a8dc:	mov	x19, x0
    a8e0:	cbz	x0, a9a4 <PyInit__decimal@@Base+0x3ef0>
    a8e4:	mov	w8, #0x30                  	// #48
    a8e8:	mov	x22, x19
    a8ec:	strb	w8, [x22, #24]!
    a8f0:	mov	x9, #0xffffffffffffffff    	// #-1
    a8f4:	mov	w10, #0x4                   	// #4
    a8f8:	add	x8, x22, #0x30
    a8fc:	stur	x9, [x22, #-8]
    a900:	stp	xzr, xzr, [x22, #8]
    a904:	stp	xzr, x10, [x22, #24]
    a908:	str	x8, [x22, #40]
    a90c:	ldr	x9, [x23, #16]
    a910:	cbz	x9, a964 <PyInit__decimal@@Base+0x3eb0>
    a914:	cmp	x9, #0x0
    a918:	cneg	x2, x9, mi  // mi = first
    a91c:	cmp	x2, #0x1
    a920:	lsr	x3, x9, #63
    a924:	b.ne	a98c <PyInit__decimal@@Base+0x3ed8>  // b.any
    a928:	ldr	w9, [x23, #24]
    a92c:	mov	w10, #0x1                   	// #1
    a930:	mov	x0, x22
    a934:	mov	w1, w3
    a938:	str	x9, [x8]
    a93c:	str	x10, [x22, #24]
    a940:	bl	212b4 <PyInit__decimal@@Base+0x1a800>
    a944:	mov	x0, x22
    a948:	str	xzr, [x22, #8]
    a94c:	bl	21070 <PyInit__decimal@@Base+0x1a5bc>
    a950:	mov	x0, x22
    a954:	mov	x1, x21
    a958:	mov	x2, x20
    a95c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
    a960:	b	a9a4 <PyInit__decimal@@Base+0x3ef0>
    a964:	str	xzr, [x8]
    a968:	mov	w8, #0x1                   	// #1
    a96c:	mov	x0, x22
    a970:	mov	w1, wzr
    a974:	str	x8, [x22, #24]
    a978:	bl	212b4 <PyInit__decimal@@Base+0x1a800>
    a97c:	mov	x0, x22
    a980:	str	xzr, [x22, #8]
    a984:	bl	21070 <PyInit__decimal@@Base+0x1a5bc>
    a988:	b	a9a4 <PyInit__decimal@@Base+0x3ef0>
    a98c:	add	x1, x23, #0x18
    a990:	mov	w4, #0x40000000            	// #1073741824
    a994:	mov	x0, x22
    a998:	mov	x5, x21
    a99c:	mov	x6, x20
    a9a0:	bl	35030 <PyInit__decimal@@Base+0x2e57c>
    a9a4:	mov	x0, x19
    a9a8:	ldp	x20, x19, [sp, #48]
    a9ac:	ldp	x22, x21, [sp, #32]
    a9b0:	ldr	x23, [sp, #16]
    a9b4:	ldp	x29, x30, [sp], #64
    a9b8:	ret
    a9bc:	sub	sp, sp, #0x80
    a9c0:	stp	x29, x30, [sp, #80]
    a9c4:	stp	x22, x21, [sp, #96]
    a9c8:	stp	x20, x19, [sp, #112]
    a9cc:	add	x29, sp, #0x50
    a9d0:	add	x21, x0, #0x18
    a9d4:	mov	x0, x21
    a9d8:	mov	w22, w2
    a9dc:	mov	x20, x1
    a9e0:	str	wzr, [sp, #12]
    a9e4:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
    a9e8:	cbz	w0, aa0c <PyInit__decimal@@Base+0x3f58>
    a9ec:	mov	x0, x21
    a9f0:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
    a9f4:	cbz	w0, aa58 <PyInit__decimal@@Base+0x3fa4>
    a9f8:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    a9fc:	ldr	x8, [x8, #3928]
    aa00:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    aa04:	add	x1, x1, #0x2d8
    aa08:	b	aa68 <PyInit__decimal@@Base+0x3fb4>
    aa0c:	bl	20460 <PyInit__decimal@@Base+0x199ac>
    aa10:	cbz	x0, aa8c <PyInit__decimal@@Base+0x3fd8>
    aa14:	ldp	q1, q0, [x20, #32]
    aa18:	ldr	q2, [x20, #16]
    aa1c:	add	x2, sp, #0x10
    aa20:	add	x3, sp, #0xc
    aa24:	mov	x1, x21
    aa28:	mov	x19, x0
    aa2c:	stp	q1, q0, [sp, #32]
    aa30:	str	q2, [sp, #16]
    aa34:	str	w22, [sp, #52]
    aa38:	bl	31280 <PyInit__decimal@@Base+0x2a7cc>
    aa3c:	ldr	w1, [sp, #12]
    aa40:	mov	x0, x20
    aa44:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    aa48:	cbz	w0, aa94 <PyInit__decimal@@Base+0x3fe0>
    aa4c:	mov	x0, x19
    aa50:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    aa54:	b	aa70 <PyInit__decimal@@Base+0x3fbc>
    aa58:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    aa5c:	ldr	x8, [x8, #3992]
    aa60:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    aa64:	add	x1, x1, #0x2f6
    aa68:	ldr	x0, [x8]
    aa6c:	bl	6590 <PyErr_SetString@plt>
    aa70:	mov	x20, xzr
    aa74:	mov	x0, x20
    aa78:	ldp	x20, x19, [sp, #112]
    aa7c:	ldp	x22, x21, [sp, #96]
    aa80:	ldp	x29, x30, [sp, #80]
    aa84:	add	sp, sp, #0x80
    aa88:	ret
    aa8c:	bl	6520 <PyErr_NoMemory@plt>
    aa90:	b	aa70 <PyInit__decimal@@Base+0x3fbc>
    aa94:	sub	x0, x29, #0x8
    aa98:	add	x4, sp, #0xc
    aa9c:	mov	w2, #0x40000000            	// #1073741824
    aaa0:	mov	x1, xzr
    aaa4:	mov	x3, x19
    aaa8:	str	wzr, [sp, #12]
    aaac:	stur	xzr, [x29, #-8]
    aab0:	bl	3475c <PyInit__decimal@@Base+0x2dca8>
    aab4:	cmn	x0, #0x1
    aab8:	b.eq	ab30 <PyInit__decimal@@Base+0x407c>  // b.none
    aabc:	mov	x21, x0
    aac0:	bl	64e0 <_PyLong_New@plt>
    aac4:	mov	x20, x0
    aac8:	cbz	x0, ab38 <PyInit__decimal@@Base+0x4084>
    aacc:	ldur	x22, [x29, #-8]
    aad0:	add	x0, x20, #0x18
    aad4:	lsl	x2, x21, #2
    aad8:	mov	x1, x22
    aadc:	bl	63c0 <memcpy@plt>
    aae0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    aae4:	ldr	x8, [x8, #1376]
    aae8:	mov	x0, x22
    aaec:	blr	x8
    aaf0:	add	x8, x20, #0x14
    aaf4:	mov	x22, x21
    aaf8:	subs	x21, x21, #0x1
    aafc:	b.lt	ab08 <PyInit__decimal@@Base+0x4054>  // b.tstop
    ab00:	ldr	w9, [x8, x22, lsl #2]
    ab04:	cbz	w9, aaf4 <PyInit__decimal@@Base+0x4040>
    ab08:	mov	x0, x19
    ab0c:	str	x22, [x20, #16]
    ab10:	bl	20bf0 <PyInit__decimal@@Base+0x1a13c>
    ab14:	cbz	w0, ab48 <PyInit__decimal@@Base+0x4094>
    ab18:	mov	x0, x19
    ab1c:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
    ab20:	cbnz	w0, ab48 <PyInit__decimal@@Base+0x4094>
    ab24:	neg	x8, x22
    ab28:	str	x8, [x20, #16]
    ab2c:	b	ab48 <PyInit__decimal@@Base+0x4094>
    ab30:	bl	6520 <PyErr_NoMemory@plt>
    ab34:	b	aa4c <PyInit__decimal@@Base+0x3f98>
    ab38:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    ab3c:	ldr	x8, [x8, #1376]
    ab40:	ldur	x0, [x29, #-8]
    ab44:	blr	x8
    ab48:	mov	x0, x19
    ab4c:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    ab50:	b	aa74 <PyInit__decimal@@Base+0x3fc0>
    ab54:	sub	sp, sp, #0xa0
    ab58:	stp	x29, x30, [sp, #96]
    ab5c:	stp	x24, x23, [sp, #112]
    ab60:	stp	x22, x21, [sp, #128]
    ab64:	stp	x20, x19, [sp, #144]
    ab68:	add	x29, sp, #0x60
    ab6c:	stur	wzr, [x29, #-4]
    ab70:	ldr	x8, [x1, #8]
    ab74:	mov	x20, x2
    ab78:	mov	x21, x1
    ab7c:	mov	x19, x0
    ab80:	ldrb	w9, [x8, #171]
    ab84:	tbnz	w9, #0, ad44 <PyInit__decimal@@Base+0x4290>
    ab88:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    ab8c:	ldr	x9, [x9, #3864]
    ab90:	cmp	x8, x9
    ab94:	b.eq	abac <PyInit__decimal@@Base+0x40f8>  // b.none
    ab98:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
    ab9c:	ldr	x1, [x1, #3864]
    aba0:	mov	x0, x8
    aba4:	bl	6900 <PyType_IsSubtype@plt>
    aba8:	cbz	w0, ad5c <PyInit__decimal@@Base+0x42a8>
    abac:	mov	x0, x21
    abb0:	bl	6800 <PyFloat_AsDouble@plt>
    abb4:	fmov	d1, #-1.000000000000000000e+00
    abb8:	fcmp	d0, d1
    abbc:	str	q0, [sp, #16]
    abc0:	b.ne	abd0 <PyInit__decimal@@Base+0x411c>  // b.any
    abc4:	bl	6720 <PyErr_Occurred@plt>
    abc8:	ldr	q0, [sp, #16]
    abcc:	cbnz	x0, ae1c <PyInit__decimal@@Base+0x4368>
    abd0:	movi	v2.2d, #0x0
    abd4:	fmov	d1, #1.000000000000000000e+00
    abd8:	fneg	v2.2d, v2.2d
    abdc:	fcmp	d0, d0
    abe0:	bit	v1.16b, v0.16b, v2.16b
    abe4:	str	q1, [sp]
    abe8:	b.vs	ad7c <PyInit__decimal@@Base+0x42c8>
    abec:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
    abf0:	fabs	d2, d0
    abf4:	fmov	d1, x8
    abf8:	fcmp	d2, d1
    abfc:	b.eq	ad7c <PyInit__decimal@@Base+0x42c8>  // b.none
    ac00:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    ac04:	ldr	x8, [x8, #1432]
    ac08:	mov	x0, x21
    ac0c:	blr	x8
    ac10:	cbz	x0, ae1c <PyInit__decimal@@Base+0x4368>
    ac14:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    ac18:	ldr	x8, [x8, #1440]
    ac1c:	mov	x1, xzr
    ac20:	mov	x21, x0
    ac24:	blr	x8
    ac28:	ldr	x8, [x21]
    ac2c:	mov	x22, x0
    ac30:	subs	x8, x8, #0x1
    ac34:	str	x8, [x21]
    ac38:	b.ne	ac44 <PyInit__decimal@@Base+0x4190>  // b.any
    ac3c:	mov	x0, x21
    ac40:	bl	6510 <_Py_Dealloc@plt>
    ac44:	cbz	x22, ae1c <PyInit__decimal@@Base+0x4368>
    ac48:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    ac4c:	ldp	x23, x0, [x22, #24]
    ac50:	ldr	x8, [x8, #1448]
    ac54:	mov	x1, xzr
    ac58:	blr	x8
    ac5c:	cbz	x0, ae0c <PyInit__decimal@@Base+0x4358>
    ac60:	mov	x24, x0
    ac64:	bl	6630 <PyLong_AsSsize_t@plt>
    ac68:	ldr	x8, [x24]
    ac6c:	mov	x21, x0
    ac70:	subs	x8, x8, #0x1
    ac74:	str	x8, [x24]
    ac78:	b.ne	ac84 <PyInit__decimal@@Base+0x41d0>  // b.any
    ac7c:	mov	x0, x24
    ac80:	bl	6510 <_Py_Dealloc@plt>
    ac84:	cmn	x21, #0x1
    ac88:	b.eq	ae04 <PyInit__decimal@@Base+0x4350>  // b.none
    ac8c:	mov	x0, x19
    ac90:	mov	x1, x23
    ac94:	mov	x2, x20
    ac98:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    ac9c:	ldr	x8, [x22]
    aca0:	mov	x19, x0
    aca4:	subs	x8, x8, #0x1
    aca8:	str	x8, [x22]
    acac:	b.ne	acb8 <PyInit__decimal@@Base+0x4204>  // b.any
    acb0:	mov	x0, x22
    acb4:	bl	6510 <_Py_Dealloc@plt>
    acb8:	cbz	x19, ae20 <PyInit__decimal@@Base+0x436c>
    acbc:	bl	20460 <PyInit__decimal@@Base+0x199ac>
    acc0:	cbz	x0, ae54 <PyInit__decimal@@Base+0x43a0>
    acc4:	mov	x22, x0
    acc8:	bl	20460 <PyInit__decimal@@Base+0x199ac>
    accc:	cbz	x0, ae4c <PyInit__decimal@@Base+0x4398>
    acd0:	mov	x23, x0
    acd4:	add	x0, sp, #0x28
    acd8:	sub	x24, x21, #0x1
    acdc:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
    ace0:	add	x2, sp, #0x28
    ace4:	sub	x3, x29, #0x4
    ace8:	mov	w1, #0x5                   	// #5
    acec:	mov	x0, x22
    acf0:	bl	21ed4 <PyInit__decimal@@Base+0x1b420>
    acf4:	add	x2, sp, #0x28
    acf8:	sub	x3, x29, #0x4
    acfc:	mov	x0, x23
    ad00:	mov	x1, x24
    ad04:	bl	21e44 <PyInit__decimal@@Base+0x1b390>
    ad08:	add	x3, sp, #0x28
    ad0c:	sub	x4, x29, #0x4
    ad10:	mov	x0, x22
    ad14:	mov	x1, x22
    ad18:	mov	x2, x23
    ad1c:	bl	2ef54 <PyInit__decimal@@Base+0x284a0>
    ad20:	ldur	w1, [x29, #-4]
    ad24:	mov	x0, x20
    ad28:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    ad2c:	cbz	w0, ae78 <PyInit__decimal@@Base+0x43c4>
    ad30:	mov	x0, x22
    ad34:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    ad38:	mov	x0, x23
    ad3c:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    ad40:	b	aeb4 <PyInit__decimal@@Base+0x4400>
    ad44:	mov	x0, x19
    ad48:	mov	x1, x21
    ad4c:	mov	x2, x20
    ad50:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    ad54:	mov	x19, x0
    ad58:	b	ae20 <PyInit__decimal@@Base+0x436c>
    ad5c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    ad60:	ldr	x8, [x8, #3936]
    ad64:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    ad68:	add	x1, x1, #0x38e
    ad6c:	ldr	x0, [x8]
    ad70:	bl	6590 <PyErr_SetString@plt>
    ad74:	mov	x19, xzr
    ad78:	b	ae20 <PyInit__decimal@@Base+0x436c>
    ad7c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    ad80:	add	x8, x8, #0x318
    ad84:	cmp	x19, x8
    ad88:	b.eq	ada0 <PyInit__decimal@@Base+0x42ec>  // b.none
    ad8c:	ldr	x8, [x19, #304]
    ad90:	mov	x0, x19
    ad94:	mov	x1, xzr
    ad98:	blr	x8
    ad9c:	b	adac <PyInit__decimal@@Base+0x42f8>
    ada0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ada4:	add	x0, x0, #0x318
    ada8:	bl	6890 <_PyObject_New@plt>
    adac:	ldr	q0, [sp, #16]
    adb0:	mov	x19, x0
    adb4:	cbz	x0, ae20 <PyInit__decimal@@Base+0x436c>
    adb8:	mov	w8, #0x30                  	// #48
    adbc:	mov	x0, x19
    adc0:	strb	w8, [x0, #24]!
    adc4:	mov	x9, #0xffffffffffffffff    	// #-1
    adc8:	mov	w10, #0x4                   	// #4
    adcc:	add	x8, x0, #0x30
    add0:	fcmp	d0, d0
    add4:	stur	x9, [x0, #-8]
    add8:	stp	xzr, xzr, [x0, #8]
    addc:	stp	xzr, x10, [x0, #24]
    ade0:	str	x8, [x0, #40]
    ade4:	b.vs	aef4 <PyInit__decimal@@Base+0x4440>
    ade8:	ldr	q1, [sp]
    adec:	fmov	d0, #1.000000000000000000e+00
    adf0:	mov	w2, #0x2                   	// #2
    adf4:	fcmp	d1, d0
    adf8:	cset	w1, ne  // ne = any
    adfc:	bl	216cc <PyInit__decimal@@Base+0x1ac18>
    ae00:	b	ae20 <PyInit__decimal@@Base+0x436c>
    ae04:	bl	6720 <PyErr_Occurred@plt>
    ae08:	cbz	x0, ac8c <PyInit__decimal@@Base+0x41d8>
    ae0c:	ldr	x8, [x22]
    ae10:	subs	x8, x8, #0x1
    ae14:	str	x8, [x22]
    ae18:	b.eq	ae3c <PyInit__decimal@@Base+0x4388>  // b.none
    ae1c:	mov	x19, xzr
    ae20:	mov	x0, x19
    ae24:	ldp	x20, x19, [sp, #144]
    ae28:	ldp	x22, x21, [sp, #128]
    ae2c:	ldp	x24, x23, [sp, #112]
    ae30:	ldp	x29, x30, [sp, #96]
    ae34:	add	sp, sp, #0xa0
    ae38:	ret
    ae3c:	mov	x0, x22
    ae40:	bl	6510 <_Py_Dealloc@plt>
    ae44:	mov	x19, xzr
    ae48:	b	ae20 <PyInit__decimal@@Base+0x436c>
    ae4c:	mov	x0, x22
    ae50:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    ae54:	ldr	x8, [x19]
    ae58:	subs	x8, x8, #0x1
    ae5c:	str	x8, [x19]
    ae60:	b.ne	ae6c <PyInit__decimal@@Base+0x43b8>  // b.any
    ae64:	mov	x0, x19
    ae68:	bl	6510 <_Py_Dealloc@plt>
    ae6c:	bl	6520 <PyErr_NoMemory@plt>
    ae70:	mov	x19, xzr
    ae74:	b	ae20 <PyInit__decimal@@Base+0x436c>
    ae78:	add	x24, x19, #0x18
    ae7c:	add	x3, sp, #0x28
    ae80:	sub	x4, x29, #0x4
    ae84:	mov	x0, x24
    ae88:	mov	x1, x24
    ae8c:	mov	x2, x22
    ae90:	bl	2c080 <PyInit__decimal@@Base+0x255cc>
    ae94:	mov	x0, x22
    ae98:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    ae9c:	mov	x0, x23
    aea0:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
    aea4:	ldur	w1, [x29, #-4]
    aea8:	mov	x0, x20
    aeac:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    aeb0:	cbz	w0, aecc <PyInit__decimal@@Base+0x4418>
    aeb4:	ldr	x8, [x19]
    aeb8:	subs	x8, x8, #0x1
    aebc:	str	x8, [x19]
    aec0:	b.ne	ae1c <PyInit__decimal@@Base+0x4368>  // b.any
    aec4:	mov	x0, x19
    aec8:	b	ae40 <PyInit__decimal@@Base+0x438c>
    aecc:	ldr	q1, [sp]
    aed0:	fmov	d0, #1.000000000000000000e+00
    aed4:	mov	x0, x24
    aed8:	fcmp	d1, d0
    aedc:	cset	w1, ne  // ne = any
    aee0:	bl	211b4 <PyInit__decimal@@Base+0x1a700>
    aee4:	mov	w8, #0x1                   	// #1
    aee8:	sub	x8, x8, x21
    aeec:	str	x8, [x24, #8]
    aef0:	b	ae20 <PyInit__decimal@@Base+0x436c>
    aef4:	mov	w2, #0x4                   	// #4
    aef8:	mov	w1, wzr
    aefc:	bl	216cc <PyInit__decimal@@Base+0x1ac18>
    af00:	b	ae20 <PyInit__decimal@@Base+0x436c>
    af04:	sub	sp, sp, #0x50
    af08:	stp	x29, x30, [sp, #32]
    af0c:	stp	x22, x21, [sp, #48]
    af10:	stp	x20, x19, [sp, #64]
    af14:	add	x29, sp, #0x20
    af18:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    af1c:	ldr	x20, [x20, #4008]
    af20:	mov	x8, x2
    af24:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    af28:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    af2c:	mov	x19, x0
    af30:	add	x2, x2, #0x77c
    af34:	add	x3, x3, #0x598
    af38:	add	x4, sp, #0x10
    af3c:	mov	x0, x1
    af40:	mov	x1, x8
    af44:	str	x20, [sp, #16]
    af48:	str	wzr, [sp, #12]
    af4c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    af50:	cbz	w0, b054 <PyInit__decimal@@Base+0x45a0>
    af54:	ldr	x8, [sp, #16]
    af58:	cmp	x8, x20
    af5c:	b.eq	afa0 <PyInit__decimal@@Base+0x44ec>  // b.none
    af60:	ldr	x0, [x8, #8]
    af64:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    af68:	add	x8, x8, #0x4b8
    af6c:	cmp	x0, x8
    af70:	b.eq	afdc <PyInit__decimal@@Base+0x4528>  // b.none
    af74:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    af78:	add	x1, x1, #0x4b8
    af7c:	bl	6900 <PyType_IsSubtype@plt>
    af80:	cbnz	w0, afdc <PyInit__decimal@@Base+0x4528>
    af84:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    af88:	ldr	x8, [x8, #3936]
    af8c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    af90:	add	x1, x1, #0x631
    af94:	ldr	x0, [x8]
    af98:	bl	6590 <PyErr_SetString@plt>
    af9c:	b	b054 <PyInit__decimal@@Base+0x45a0>
    afa0:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    afa4:	ldr	x0, [x21, #1400]
    afa8:	sub	x2, x29, #0x8
    afac:	mov	x1, xzr
    afb0:	bl	6680 <PyContextVar_Get@plt>
    afb4:	tbnz	w0, #31, b0ec <PyInit__decimal@@Base+0x4638>
    afb8:	ldur	x20, [x29, #-8]
    afbc:	cbz	x20, b070 <PyInit__decimal@@Base+0x45bc>
    afc0:	str	x20, [sp, #16]
    afc4:	ldr	x8, [x20]
    afc8:	subs	x8, x8, #0x1
    afcc:	str	x8, [x20]
    afd0:	b.ne	afdc <PyInit__decimal@@Base+0x4528>  // b.any
    afd4:	mov	x0, x20
    afd8:	bl	6510 <_Py_Dealloc@plt>
    afdc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    afe0:	add	x0, x0, #0x318
    afe4:	bl	6890 <_PyObject_New@plt>
    afe8:	mov	x20, x0
    afec:	cbz	x0, b058 <PyInit__decimal@@Base+0x45a4>
    aff0:	mov	w8, #0x30                  	// #48
    aff4:	mov	x0, x20
    aff8:	strb	w8, [x0, #24]!
    affc:	mov	x9, #0xffffffffffffffff    	// #-1
    b000:	mov	w10, #0x4                   	// #4
    b004:	add	x8, x0, #0x30
    b008:	stur	x9, [x0, #-8]
    b00c:	stp	xzr, xzr, [x0, #8]
    b010:	stp	xzr, x10, [x0, #24]
    b014:	str	x8, [x0, #40]
    b018:	ldr	x8, [sp, #16]
    b01c:	add	x1, x19, #0x18
    b020:	add	x3, sp, #0xc
    b024:	add	x2, x8, #0x10
    b028:	bl	2a098 <PyInit__decimal@@Base+0x235e4>
    b02c:	ldr	x0, [sp, #16]
    b030:	ldr	w1, [sp, #12]
    b034:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    b038:	cbz	w0, b058 <PyInit__decimal@@Base+0x45a4>
    b03c:	ldr	x8, [x20]
    b040:	subs	x8, x8, #0x1
    b044:	str	x8, [x20]
    b048:	b.ne	b054 <PyInit__decimal@@Base+0x45a0>  // b.any
    b04c:	mov	x0, x20
    b050:	bl	6510 <_Py_Dealloc@plt>
    b054:	mov	x20, xzr
    b058:	mov	x0, x20
    b05c:	ldp	x20, x19, [sp, #64]
    b060:	ldp	x22, x21, [sp, #48]
    b064:	ldp	x29, x30, [sp, #32]
    b068:	add	sp, sp, #0x50
    b06c:	ret
    b070:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    b074:	ldr	x22, [x8, #1496]
    b078:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b07c:	add	x0, x0, #0x4b8
    b080:	mov	x1, xzr
    b084:	bl	6780 <PyObject_CallObject@plt>
    b088:	cbz	x0, b0ec <PyInit__decimal@@Base+0x4638>
    b08c:	ldp	q1, q0, [x22, #32]
    b090:	ldr	q2, [x22, #16]
    b094:	mov	x20, x0
    b098:	mov	x1, x20
    b09c:	stp	q1, q0, [x0, #32]
    b0a0:	str	q2, [x0, #16]
    b0a4:	ldr	w8, [x22, #80]
    b0a8:	stp	wzr, wzr, [x0, #44]
    b0ac:	str	w8, [x0, #80]
    b0b0:	ldr	x0, [x21, #1400]
    b0b4:	bl	65c0 <PyContextVar_Set@plt>
    b0b8:	cbz	x0, b0d4 <PyInit__decimal@@Base+0x4620>
    b0bc:	ldr	x8, [x0]
    b0c0:	subs	x8, x8, #0x1
    b0c4:	str	x8, [x0]
    b0c8:	b.ne	afc0 <PyInit__decimal@@Base+0x450c>  // b.any
    b0cc:	bl	6510 <_Py_Dealloc@plt>
    b0d0:	b	afc0 <PyInit__decimal@@Base+0x450c>
    b0d4:	ldr	x8, [x20]
    b0d8:	subs	x8, x8, #0x1
    b0dc:	str	x8, [x20]
    b0e0:	b.ne	b0ec <PyInit__decimal@@Base+0x4638>  // b.any
    b0e4:	mov	x0, x20
    b0e8:	bl	6510 <_Py_Dealloc@plt>
    b0ec:	mov	x20, xzr
    b0f0:	str	xzr, [sp, #16]
    b0f4:	b	b058 <PyInit__decimal@@Base+0x45a4>
    b0f8:	sub	sp, sp, #0x50
    b0fc:	stp	x29, x30, [sp, #32]
    b100:	stp	x22, x21, [sp, #48]
    b104:	stp	x20, x19, [sp, #64]
    b108:	add	x29, sp, #0x20
    b10c:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    b110:	ldr	x20, [x20, #4008]
    b114:	mov	x8, x2
    b118:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    b11c:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    b120:	mov	x19, x0
    b124:	add	x2, x2, #0x77c
    b128:	add	x3, x3, #0x5a8
    b12c:	add	x4, sp, #0x10
    b130:	mov	x0, x1
    b134:	mov	x1, x8
    b138:	str	x20, [sp, #16]
    b13c:	str	wzr, [sp, #12]
    b140:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    b144:	cbz	w0, b248 <PyInit__decimal@@Base+0x4794>
    b148:	ldr	x8, [sp, #16]
    b14c:	cmp	x8, x20
    b150:	b.eq	b194 <PyInit__decimal@@Base+0x46e0>  // b.none
    b154:	ldr	x0, [x8, #8]
    b158:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    b15c:	add	x8, x8, #0x4b8
    b160:	cmp	x0, x8
    b164:	b.eq	b1d0 <PyInit__decimal@@Base+0x471c>  // b.none
    b168:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    b16c:	add	x1, x1, #0x4b8
    b170:	bl	6900 <PyType_IsSubtype@plt>
    b174:	cbnz	w0, b1d0 <PyInit__decimal@@Base+0x471c>
    b178:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    b17c:	ldr	x8, [x8, #3936]
    b180:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    b184:	add	x1, x1, #0x631
    b188:	ldr	x0, [x8]
    b18c:	bl	6590 <PyErr_SetString@plt>
    b190:	b	b248 <PyInit__decimal@@Base+0x4794>
    b194:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    b198:	ldr	x0, [x21, #1400]
    b19c:	sub	x2, x29, #0x8
    b1a0:	mov	x1, xzr
    b1a4:	bl	6680 <PyContextVar_Get@plt>
    b1a8:	tbnz	w0, #31, b2e0 <PyInit__decimal@@Base+0x482c>
    b1ac:	ldur	x20, [x29, #-8]
    b1b0:	cbz	x20, b264 <PyInit__decimal@@Base+0x47b0>
    b1b4:	str	x20, [sp, #16]
    b1b8:	ldr	x8, [x20]
    b1bc:	subs	x8, x8, #0x1
    b1c0:	str	x8, [x20]
    b1c4:	b.ne	b1d0 <PyInit__decimal@@Base+0x471c>  // b.any
    b1c8:	mov	x0, x20
    b1cc:	bl	6510 <_Py_Dealloc@plt>
    b1d0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b1d4:	add	x0, x0, #0x318
    b1d8:	bl	6890 <_PyObject_New@plt>
    b1dc:	mov	x20, x0
    b1e0:	cbz	x0, b24c <PyInit__decimal@@Base+0x4798>
    b1e4:	mov	w8, #0x30                  	// #48
    b1e8:	mov	x0, x20
    b1ec:	strb	w8, [x0, #24]!
    b1f0:	mov	x9, #0xffffffffffffffff    	// #-1
    b1f4:	mov	w10, #0x4                   	// #4
    b1f8:	add	x8, x0, #0x30
    b1fc:	stur	x9, [x0, #-8]
    b200:	stp	xzr, xzr, [x0, #8]
    b204:	stp	xzr, x10, [x0, #24]
    b208:	str	x8, [x0, #40]
    b20c:	ldr	x8, [sp, #16]
    b210:	add	x1, x19, #0x18
    b214:	add	x3, sp, #0xc
    b218:	add	x2, x8, #0x10
    b21c:	bl	2c0bc <PyInit__decimal@@Base+0x25608>
    b220:	ldr	x0, [sp, #16]
    b224:	ldr	w1, [sp, #12]
    b228:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    b22c:	cbz	w0, b24c <PyInit__decimal@@Base+0x4798>
    b230:	ldr	x8, [x20]
    b234:	subs	x8, x8, #0x1
    b238:	str	x8, [x20]
    b23c:	b.ne	b248 <PyInit__decimal@@Base+0x4794>  // b.any
    b240:	mov	x0, x20
    b244:	bl	6510 <_Py_Dealloc@plt>
    b248:	mov	x20, xzr
    b24c:	mov	x0, x20
    b250:	ldp	x20, x19, [sp, #64]
    b254:	ldp	x22, x21, [sp, #48]
    b258:	ldp	x29, x30, [sp, #32]
    b25c:	add	sp, sp, #0x50
    b260:	ret
    b264:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    b268:	ldr	x22, [x8, #1496]
    b26c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b270:	add	x0, x0, #0x4b8
    b274:	mov	x1, xzr
    b278:	bl	6780 <PyObject_CallObject@plt>
    b27c:	cbz	x0, b2e0 <PyInit__decimal@@Base+0x482c>
    b280:	ldp	q1, q0, [x22, #32]
    b284:	ldr	q2, [x22, #16]
    b288:	mov	x20, x0
    b28c:	mov	x1, x20
    b290:	stp	q1, q0, [x0, #32]
    b294:	str	q2, [x0, #16]
    b298:	ldr	w8, [x22, #80]
    b29c:	stp	wzr, wzr, [x0, #44]
    b2a0:	str	w8, [x0, #80]
    b2a4:	ldr	x0, [x21, #1400]
    b2a8:	bl	65c0 <PyContextVar_Set@plt>
    b2ac:	cbz	x0, b2c8 <PyInit__decimal@@Base+0x4814>
    b2b0:	ldr	x8, [x0]
    b2b4:	subs	x8, x8, #0x1
    b2b8:	str	x8, [x0]
    b2bc:	b.ne	b1b4 <PyInit__decimal@@Base+0x4700>  // b.any
    b2c0:	bl	6510 <_Py_Dealloc@plt>
    b2c4:	b	b1b4 <PyInit__decimal@@Base+0x4700>
    b2c8:	ldr	x8, [x20]
    b2cc:	subs	x8, x8, #0x1
    b2d0:	str	x8, [x20]
    b2d4:	b.ne	b2e0 <PyInit__decimal@@Base+0x482c>  // b.any
    b2d8:	mov	x0, x20
    b2dc:	bl	6510 <_Py_Dealloc@plt>
    b2e0:	mov	x20, xzr
    b2e4:	str	xzr, [sp, #16]
    b2e8:	b	b24c <PyInit__decimal@@Base+0x4798>
    b2ec:	sub	sp, sp, #0x50
    b2f0:	stp	x29, x30, [sp, #32]
    b2f4:	stp	x22, x21, [sp, #48]
    b2f8:	stp	x20, x19, [sp, #64]
    b2fc:	add	x29, sp, #0x20
    b300:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    b304:	ldr	x20, [x20, #4008]
    b308:	mov	x8, x2
    b30c:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    b310:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    b314:	mov	x19, x0
    b318:	add	x2, x2, #0x77c
    b31c:	add	x3, x3, #0x5b8
    b320:	add	x4, sp, #0x10
    b324:	mov	x0, x1
    b328:	mov	x1, x8
    b32c:	str	x20, [sp, #16]
    b330:	str	wzr, [sp, #12]
    b334:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    b338:	cbz	w0, b43c <PyInit__decimal@@Base+0x4988>
    b33c:	ldr	x8, [sp, #16]
    b340:	cmp	x8, x20
    b344:	b.eq	b388 <PyInit__decimal@@Base+0x48d4>  // b.none
    b348:	ldr	x0, [x8, #8]
    b34c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    b350:	add	x8, x8, #0x4b8
    b354:	cmp	x0, x8
    b358:	b.eq	b3c4 <PyInit__decimal@@Base+0x4910>  // b.none
    b35c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    b360:	add	x1, x1, #0x4b8
    b364:	bl	6900 <PyType_IsSubtype@plt>
    b368:	cbnz	w0, b3c4 <PyInit__decimal@@Base+0x4910>
    b36c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    b370:	ldr	x8, [x8, #3936]
    b374:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    b378:	add	x1, x1, #0x631
    b37c:	ldr	x0, [x8]
    b380:	bl	6590 <PyErr_SetString@plt>
    b384:	b	b43c <PyInit__decimal@@Base+0x4988>
    b388:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    b38c:	ldr	x0, [x21, #1400]
    b390:	sub	x2, x29, #0x8
    b394:	mov	x1, xzr
    b398:	bl	6680 <PyContextVar_Get@plt>
    b39c:	tbnz	w0, #31, b4d4 <PyInit__decimal@@Base+0x4a20>
    b3a0:	ldur	x20, [x29, #-8]
    b3a4:	cbz	x20, b458 <PyInit__decimal@@Base+0x49a4>
    b3a8:	str	x20, [sp, #16]
    b3ac:	ldr	x8, [x20]
    b3b0:	subs	x8, x8, #0x1
    b3b4:	str	x8, [x20]
    b3b8:	b.ne	b3c4 <PyInit__decimal@@Base+0x4910>  // b.any
    b3bc:	mov	x0, x20
    b3c0:	bl	6510 <_Py_Dealloc@plt>
    b3c4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b3c8:	add	x0, x0, #0x318
    b3cc:	bl	6890 <_PyObject_New@plt>
    b3d0:	mov	x20, x0
    b3d4:	cbz	x0, b440 <PyInit__decimal@@Base+0x498c>
    b3d8:	mov	w8, #0x30                  	// #48
    b3dc:	mov	x0, x20
    b3e0:	strb	w8, [x0, #24]!
    b3e4:	mov	x9, #0xffffffffffffffff    	// #-1
    b3e8:	mov	w10, #0x4                   	// #4
    b3ec:	add	x8, x0, #0x30
    b3f0:	stur	x9, [x0, #-8]
    b3f4:	stp	xzr, xzr, [x0, #8]
    b3f8:	stp	xzr, x10, [x0, #24]
    b3fc:	str	x8, [x0, #40]
    b400:	ldr	x8, [sp, #16]
    b404:	add	x1, x19, #0x18
    b408:	add	x3, sp, #0xc
    b40c:	add	x2, x8, #0x10
    b410:	bl	2d130 <PyInit__decimal@@Base+0x2667c>
    b414:	ldr	x0, [sp, #16]
    b418:	ldr	w1, [sp, #12]
    b41c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    b420:	cbz	w0, b440 <PyInit__decimal@@Base+0x498c>
    b424:	ldr	x8, [x20]
    b428:	subs	x8, x8, #0x1
    b42c:	str	x8, [x20]
    b430:	b.ne	b43c <PyInit__decimal@@Base+0x4988>  // b.any
    b434:	mov	x0, x20
    b438:	bl	6510 <_Py_Dealloc@plt>
    b43c:	mov	x20, xzr
    b440:	mov	x0, x20
    b444:	ldp	x20, x19, [sp, #64]
    b448:	ldp	x22, x21, [sp, #48]
    b44c:	ldp	x29, x30, [sp, #32]
    b450:	add	sp, sp, #0x50
    b454:	ret
    b458:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    b45c:	ldr	x22, [x8, #1496]
    b460:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b464:	add	x0, x0, #0x4b8
    b468:	mov	x1, xzr
    b46c:	bl	6780 <PyObject_CallObject@plt>
    b470:	cbz	x0, b4d4 <PyInit__decimal@@Base+0x4a20>
    b474:	ldp	q1, q0, [x22, #32]
    b478:	ldr	q2, [x22, #16]
    b47c:	mov	x20, x0
    b480:	mov	x1, x20
    b484:	stp	q1, q0, [x0, #32]
    b488:	str	q2, [x0, #16]
    b48c:	ldr	w8, [x22, #80]
    b490:	stp	wzr, wzr, [x0, #44]
    b494:	str	w8, [x0, #80]
    b498:	ldr	x0, [x21, #1400]
    b49c:	bl	65c0 <PyContextVar_Set@plt>
    b4a0:	cbz	x0, b4bc <PyInit__decimal@@Base+0x4a08>
    b4a4:	ldr	x8, [x0]
    b4a8:	subs	x8, x8, #0x1
    b4ac:	str	x8, [x0]
    b4b0:	b.ne	b3a8 <PyInit__decimal@@Base+0x48f4>  // b.any
    b4b4:	bl	6510 <_Py_Dealloc@plt>
    b4b8:	b	b3a8 <PyInit__decimal@@Base+0x48f4>
    b4bc:	ldr	x8, [x20]
    b4c0:	subs	x8, x8, #0x1
    b4c4:	str	x8, [x20]
    b4c8:	b.ne	b4d4 <PyInit__decimal@@Base+0x4a20>  // b.any
    b4cc:	mov	x0, x20
    b4d0:	bl	6510 <_Py_Dealloc@plt>
    b4d4:	mov	x20, xzr
    b4d8:	str	xzr, [sp, #16]
    b4dc:	b	b440 <PyInit__decimal@@Base+0x498c>
    b4e0:	sub	sp, sp, #0x50
    b4e4:	stp	x29, x30, [sp, #32]
    b4e8:	stp	x22, x21, [sp, #48]
    b4ec:	stp	x20, x19, [sp, #64]
    b4f0:	add	x29, sp, #0x20
    b4f4:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    b4f8:	ldr	x20, [x20, #4008]
    b4fc:	mov	x8, x2
    b500:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    b504:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    b508:	mov	x19, x0
    b50c:	add	x2, x2, #0x77c
    b510:	add	x3, x3, #0x5c8
    b514:	add	x4, sp, #0x10
    b518:	mov	x0, x1
    b51c:	mov	x1, x8
    b520:	str	x20, [sp, #16]
    b524:	str	wzr, [sp, #12]
    b528:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    b52c:	cbz	w0, b630 <PyInit__decimal@@Base+0x4b7c>
    b530:	ldr	x8, [sp, #16]
    b534:	cmp	x8, x20
    b538:	b.eq	b57c <PyInit__decimal@@Base+0x4ac8>  // b.none
    b53c:	ldr	x0, [x8, #8]
    b540:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    b544:	add	x8, x8, #0x4b8
    b548:	cmp	x0, x8
    b54c:	b.eq	b5b8 <PyInit__decimal@@Base+0x4b04>  // b.none
    b550:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    b554:	add	x1, x1, #0x4b8
    b558:	bl	6900 <PyType_IsSubtype@plt>
    b55c:	cbnz	w0, b5b8 <PyInit__decimal@@Base+0x4b04>
    b560:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    b564:	ldr	x8, [x8, #3936]
    b568:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    b56c:	add	x1, x1, #0x631
    b570:	ldr	x0, [x8]
    b574:	bl	6590 <PyErr_SetString@plt>
    b578:	b	b630 <PyInit__decimal@@Base+0x4b7c>
    b57c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    b580:	ldr	x0, [x21, #1400]
    b584:	sub	x2, x29, #0x8
    b588:	mov	x1, xzr
    b58c:	bl	6680 <PyContextVar_Get@plt>
    b590:	tbnz	w0, #31, b6c8 <PyInit__decimal@@Base+0x4c14>
    b594:	ldur	x20, [x29, #-8]
    b598:	cbz	x20, b64c <PyInit__decimal@@Base+0x4b98>
    b59c:	str	x20, [sp, #16]
    b5a0:	ldr	x8, [x20]
    b5a4:	subs	x8, x8, #0x1
    b5a8:	str	x8, [x20]
    b5ac:	b.ne	b5b8 <PyInit__decimal@@Base+0x4b04>  // b.any
    b5b0:	mov	x0, x20
    b5b4:	bl	6510 <_Py_Dealloc@plt>
    b5b8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b5bc:	add	x0, x0, #0x318
    b5c0:	bl	6890 <_PyObject_New@plt>
    b5c4:	mov	x20, x0
    b5c8:	cbz	x0, b634 <PyInit__decimal@@Base+0x4b80>
    b5cc:	mov	w8, #0x30                  	// #48
    b5d0:	mov	x0, x20
    b5d4:	strb	w8, [x0, #24]!
    b5d8:	mov	x9, #0xffffffffffffffff    	// #-1
    b5dc:	mov	w10, #0x4                   	// #4
    b5e0:	add	x8, x0, #0x30
    b5e4:	stur	x9, [x0, #-8]
    b5e8:	stp	xzr, xzr, [x0, #8]
    b5ec:	stp	xzr, x10, [x0, #24]
    b5f0:	str	x8, [x0, #40]
    b5f4:	ldr	x8, [sp, #16]
    b5f8:	add	x1, x19, #0x18
    b5fc:	add	x3, sp, #0xc
    b600:	add	x2, x8, #0x10
    b604:	bl	2e958 <PyInit__decimal@@Base+0x27ea4>
    b608:	ldr	x0, [sp, #16]
    b60c:	ldr	w1, [sp, #12]
    b610:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    b614:	cbz	w0, b634 <PyInit__decimal@@Base+0x4b80>
    b618:	ldr	x8, [x20]
    b61c:	subs	x8, x8, #0x1
    b620:	str	x8, [x20]
    b624:	b.ne	b630 <PyInit__decimal@@Base+0x4b7c>  // b.any
    b628:	mov	x0, x20
    b62c:	bl	6510 <_Py_Dealloc@plt>
    b630:	mov	x20, xzr
    b634:	mov	x0, x20
    b638:	ldp	x20, x19, [sp, #64]
    b63c:	ldp	x22, x21, [sp, #48]
    b640:	ldp	x29, x30, [sp, #32]
    b644:	add	sp, sp, #0x50
    b648:	ret
    b64c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    b650:	ldr	x22, [x8, #1496]
    b654:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b658:	add	x0, x0, #0x4b8
    b65c:	mov	x1, xzr
    b660:	bl	6780 <PyObject_CallObject@plt>
    b664:	cbz	x0, b6c8 <PyInit__decimal@@Base+0x4c14>
    b668:	ldp	q1, q0, [x22, #32]
    b66c:	ldr	q2, [x22, #16]
    b670:	mov	x20, x0
    b674:	mov	x1, x20
    b678:	stp	q1, q0, [x0, #32]
    b67c:	str	q2, [x0, #16]
    b680:	ldr	w8, [x22, #80]
    b684:	stp	wzr, wzr, [x0, #44]
    b688:	str	w8, [x0, #80]
    b68c:	ldr	x0, [x21, #1400]
    b690:	bl	65c0 <PyContextVar_Set@plt>
    b694:	cbz	x0, b6b0 <PyInit__decimal@@Base+0x4bfc>
    b698:	ldr	x8, [x0]
    b69c:	subs	x8, x8, #0x1
    b6a0:	str	x8, [x0]
    b6a4:	b.ne	b59c <PyInit__decimal@@Base+0x4ae8>  // b.any
    b6a8:	bl	6510 <_Py_Dealloc@plt>
    b6ac:	b	b59c <PyInit__decimal@@Base+0x4ae8>
    b6b0:	ldr	x8, [x20]
    b6b4:	subs	x8, x8, #0x1
    b6b8:	str	x8, [x20]
    b6bc:	b.ne	b6c8 <PyInit__decimal@@Base+0x4c14>  // b.any
    b6c0:	mov	x0, x20
    b6c4:	bl	6510 <_Py_Dealloc@plt>
    b6c8:	mov	x20, xzr
    b6cc:	str	xzr, [sp, #16]
    b6d0:	b	b634 <PyInit__decimal@@Base+0x4b80>
    b6d4:	sub	sp, sp, #0x50
    b6d8:	stp	x29, x30, [sp, #32]
    b6dc:	stp	x22, x21, [sp, #48]
    b6e0:	stp	x20, x19, [sp, #64]
    b6e4:	add	x29, sp, #0x20
    b6e8:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    b6ec:	ldr	x20, [x20, #4008]
    b6f0:	mov	x8, x2
    b6f4:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    b6f8:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    b6fc:	mov	x19, x0
    b700:	add	x2, x2, #0x77c
    b704:	add	x3, x3, #0x5d8
    b708:	add	x4, sp, #0x10
    b70c:	mov	x0, x1
    b710:	mov	x1, x8
    b714:	str	x20, [sp, #16]
    b718:	str	wzr, [sp, #12]
    b71c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    b720:	cbz	w0, b824 <PyInit__decimal@@Base+0x4d70>
    b724:	ldr	x8, [sp, #16]
    b728:	cmp	x8, x20
    b72c:	b.eq	b770 <PyInit__decimal@@Base+0x4cbc>  // b.none
    b730:	ldr	x0, [x8, #8]
    b734:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    b738:	add	x8, x8, #0x4b8
    b73c:	cmp	x0, x8
    b740:	b.eq	b7ac <PyInit__decimal@@Base+0x4cf8>  // b.none
    b744:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    b748:	add	x1, x1, #0x4b8
    b74c:	bl	6900 <PyType_IsSubtype@plt>
    b750:	cbnz	w0, b7ac <PyInit__decimal@@Base+0x4cf8>
    b754:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    b758:	ldr	x8, [x8, #3936]
    b75c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    b760:	add	x1, x1, #0x631
    b764:	ldr	x0, [x8]
    b768:	bl	6590 <PyErr_SetString@plt>
    b76c:	b	b824 <PyInit__decimal@@Base+0x4d70>
    b770:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    b774:	ldr	x0, [x21, #1400]
    b778:	sub	x2, x29, #0x8
    b77c:	mov	x1, xzr
    b780:	bl	6680 <PyContextVar_Get@plt>
    b784:	tbnz	w0, #31, b8bc <PyInit__decimal@@Base+0x4e08>
    b788:	ldur	x20, [x29, #-8]
    b78c:	cbz	x20, b840 <PyInit__decimal@@Base+0x4d8c>
    b790:	str	x20, [sp, #16]
    b794:	ldr	x8, [x20]
    b798:	subs	x8, x8, #0x1
    b79c:	str	x8, [x20]
    b7a0:	b.ne	b7ac <PyInit__decimal@@Base+0x4cf8>  // b.any
    b7a4:	mov	x0, x20
    b7a8:	bl	6510 <_Py_Dealloc@plt>
    b7ac:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b7b0:	add	x0, x0, #0x318
    b7b4:	bl	6890 <_PyObject_New@plt>
    b7b8:	mov	x20, x0
    b7bc:	cbz	x0, b828 <PyInit__decimal@@Base+0x4d74>
    b7c0:	mov	w8, #0x30                  	// #48
    b7c4:	mov	x0, x20
    b7c8:	strb	w8, [x0, #24]!
    b7cc:	mov	x9, #0xffffffffffffffff    	// #-1
    b7d0:	mov	w10, #0x4                   	// #4
    b7d4:	add	x8, x0, #0x30
    b7d8:	stur	x9, [x0, #-8]
    b7dc:	stp	xzr, xzr, [x0, #8]
    b7e0:	stp	xzr, x10, [x0, #24]
    b7e4:	str	x8, [x0, #40]
    b7e8:	ldr	x8, [sp, #16]
    b7ec:	add	x1, x19, #0x18
    b7f0:	add	x3, sp, #0xc
    b7f4:	add	x2, x8, #0x10
    b7f8:	bl	2ebc4 <PyInit__decimal@@Base+0x28110>
    b7fc:	ldr	x0, [sp, #16]
    b800:	ldr	w1, [sp, #12]
    b804:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    b808:	cbz	w0, b828 <PyInit__decimal@@Base+0x4d74>
    b80c:	ldr	x8, [x20]
    b810:	subs	x8, x8, #0x1
    b814:	str	x8, [x20]
    b818:	b.ne	b824 <PyInit__decimal@@Base+0x4d70>  // b.any
    b81c:	mov	x0, x20
    b820:	bl	6510 <_Py_Dealloc@plt>
    b824:	mov	x20, xzr
    b828:	mov	x0, x20
    b82c:	ldp	x20, x19, [sp, #64]
    b830:	ldp	x22, x21, [sp, #48]
    b834:	ldp	x29, x30, [sp, #32]
    b838:	add	sp, sp, #0x50
    b83c:	ret
    b840:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    b844:	ldr	x22, [x8, #1496]
    b848:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b84c:	add	x0, x0, #0x4b8
    b850:	mov	x1, xzr
    b854:	bl	6780 <PyObject_CallObject@plt>
    b858:	cbz	x0, b8bc <PyInit__decimal@@Base+0x4e08>
    b85c:	ldp	q1, q0, [x22, #32]
    b860:	ldr	q2, [x22, #16]
    b864:	mov	x20, x0
    b868:	mov	x1, x20
    b86c:	stp	q1, q0, [x0, #32]
    b870:	str	q2, [x0, #16]
    b874:	ldr	w8, [x22, #80]
    b878:	stp	wzr, wzr, [x0, #44]
    b87c:	str	w8, [x0, #80]
    b880:	ldr	x0, [x21, #1400]
    b884:	bl	65c0 <PyContextVar_Set@plt>
    b888:	cbz	x0, b8a4 <PyInit__decimal@@Base+0x4df0>
    b88c:	ldr	x8, [x0]
    b890:	subs	x8, x8, #0x1
    b894:	str	x8, [x0]
    b898:	b.ne	b790 <PyInit__decimal@@Base+0x4cdc>  // b.any
    b89c:	bl	6510 <_Py_Dealloc@plt>
    b8a0:	b	b790 <PyInit__decimal@@Base+0x4cdc>
    b8a4:	ldr	x8, [x20]
    b8a8:	subs	x8, x8, #0x1
    b8ac:	str	x8, [x20]
    b8b0:	b.ne	b8bc <PyInit__decimal@@Base+0x4e08>  // b.any
    b8b4:	mov	x0, x20
    b8b8:	bl	6510 <_Py_Dealloc@plt>
    b8bc:	mov	x20, xzr
    b8c0:	str	xzr, [sp, #16]
    b8c4:	b	b828 <PyInit__decimal@@Base+0x4d74>
    b8c8:	sub	sp, sp, #0x50
    b8cc:	stp	x29, x30, [sp, #32]
    b8d0:	stp	x22, x21, [sp, #48]
    b8d4:	stp	x20, x19, [sp, #64]
    b8d8:	add	x29, sp, #0x20
    b8dc:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    b8e0:	ldr	x20, [x20, #4008]
    b8e4:	mov	x8, x2
    b8e8:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    b8ec:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    b8f0:	mov	x19, x0
    b8f4:	add	x2, x2, #0x77c
    b8f8:	add	x3, x3, #0x5e8
    b8fc:	add	x4, sp, #0x10
    b900:	mov	x0, x1
    b904:	mov	x1, x8
    b908:	str	x20, [sp, #16]
    b90c:	str	wzr, [sp, #12]
    b910:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    b914:	cbz	w0, ba18 <PyInit__decimal@@Base+0x4f64>
    b918:	ldr	x8, [sp, #16]
    b91c:	cmp	x8, x20
    b920:	b.eq	b964 <PyInit__decimal@@Base+0x4eb0>  // b.none
    b924:	ldr	x0, [x8, #8]
    b928:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    b92c:	add	x8, x8, #0x4b8
    b930:	cmp	x0, x8
    b934:	b.eq	b9a0 <PyInit__decimal@@Base+0x4eec>  // b.none
    b938:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    b93c:	add	x1, x1, #0x4b8
    b940:	bl	6900 <PyType_IsSubtype@plt>
    b944:	cbnz	w0, b9a0 <PyInit__decimal@@Base+0x4eec>
    b948:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    b94c:	ldr	x8, [x8, #3936]
    b950:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    b954:	add	x1, x1, #0x631
    b958:	ldr	x0, [x8]
    b95c:	bl	6590 <PyErr_SetString@plt>
    b960:	b	ba18 <PyInit__decimal@@Base+0x4f64>
    b964:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    b968:	ldr	x0, [x21, #1400]
    b96c:	sub	x2, x29, #0x8
    b970:	mov	x1, xzr
    b974:	bl	6680 <PyContextVar_Get@plt>
    b978:	tbnz	w0, #31, bab0 <PyInit__decimal@@Base+0x4ffc>
    b97c:	ldur	x20, [x29, #-8]
    b980:	cbz	x20, ba34 <PyInit__decimal@@Base+0x4f80>
    b984:	str	x20, [sp, #16]
    b988:	ldr	x8, [x20]
    b98c:	subs	x8, x8, #0x1
    b990:	str	x8, [x20]
    b994:	b.ne	b9a0 <PyInit__decimal@@Base+0x4eec>  // b.any
    b998:	mov	x0, x20
    b99c:	bl	6510 <_Py_Dealloc@plt>
    b9a0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    b9a4:	add	x0, x0, #0x318
    b9a8:	bl	6890 <_PyObject_New@plt>
    b9ac:	mov	x20, x0
    b9b0:	cbz	x0, ba1c <PyInit__decimal@@Base+0x4f68>
    b9b4:	mov	w8, #0x30                  	// #48
    b9b8:	mov	x0, x20
    b9bc:	strb	w8, [x0, #24]!
    b9c0:	mov	x9, #0xffffffffffffffff    	// #-1
    b9c4:	mov	w10, #0x4                   	// #4
    b9c8:	add	x8, x0, #0x30
    b9cc:	stur	x9, [x0, #-8]
    b9d0:	stp	xzr, xzr, [x0, #8]
    b9d4:	stp	xzr, x10, [x0, #24]
    b9d8:	str	x8, [x0, #40]
    b9dc:	ldr	x8, [sp, #16]
    b9e0:	add	x1, x19, #0x18
    b9e4:	add	x3, sp, #0xc
    b9e8:	add	x2, x8, #0x10
    b9ec:	bl	31bd0 <PyInit__decimal@@Base+0x2b11c>
    b9f0:	ldr	x0, [sp, #16]
    b9f4:	ldr	w1, [sp, #12]
    b9f8:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    b9fc:	cbz	w0, ba1c <PyInit__decimal@@Base+0x4f68>
    ba00:	ldr	x8, [x20]
    ba04:	subs	x8, x8, #0x1
    ba08:	str	x8, [x20]
    ba0c:	b.ne	ba18 <PyInit__decimal@@Base+0x4f64>  // b.any
    ba10:	mov	x0, x20
    ba14:	bl	6510 <_Py_Dealloc@plt>
    ba18:	mov	x20, xzr
    ba1c:	mov	x0, x20
    ba20:	ldp	x20, x19, [sp, #64]
    ba24:	ldp	x22, x21, [sp, #48]
    ba28:	ldp	x29, x30, [sp, #32]
    ba2c:	add	sp, sp, #0x50
    ba30:	ret
    ba34:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    ba38:	ldr	x22, [x8, #1496]
    ba3c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ba40:	add	x0, x0, #0x4b8
    ba44:	mov	x1, xzr
    ba48:	bl	6780 <PyObject_CallObject@plt>
    ba4c:	cbz	x0, bab0 <PyInit__decimal@@Base+0x4ffc>
    ba50:	ldp	q1, q0, [x22, #32]
    ba54:	ldr	q2, [x22, #16]
    ba58:	mov	x20, x0
    ba5c:	mov	x1, x20
    ba60:	stp	q1, q0, [x0, #32]
    ba64:	str	q2, [x0, #16]
    ba68:	ldr	w8, [x22, #80]
    ba6c:	stp	wzr, wzr, [x0, #44]
    ba70:	str	w8, [x0, #80]
    ba74:	ldr	x0, [x21, #1400]
    ba78:	bl	65c0 <PyContextVar_Set@plt>
    ba7c:	cbz	x0, ba98 <PyInit__decimal@@Base+0x4fe4>
    ba80:	ldr	x8, [x0]
    ba84:	subs	x8, x8, #0x1
    ba88:	str	x8, [x0]
    ba8c:	b.ne	b984 <PyInit__decimal@@Base+0x4ed0>  // b.any
    ba90:	bl	6510 <_Py_Dealloc@plt>
    ba94:	b	b984 <PyInit__decimal@@Base+0x4ed0>
    ba98:	ldr	x8, [x20]
    ba9c:	subs	x8, x8, #0x1
    baa0:	str	x8, [x20]
    baa4:	b.ne	bab0 <PyInit__decimal@@Base+0x4ffc>  // b.any
    baa8:	mov	x0, x20
    baac:	bl	6510 <_Py_Dealloc@plt>
    bab0:	mov	x20, xzr
    bab4:	str	xzr, [sp, #16]
    bab8:	b	ba1c <PyInit__decimal@@Base+0x4f68>
    babc:	sub	sp, sp, #0x80
    bac0:	stp	x29, x30, [sp, #64]
    bac4:	str	x23, [sp, #80]
    bac8:	stp	x22, x21, [sp, #96]
    bacc:	stp	x20, x19, [sp, #112]
    bad0:	add	x29, sp, #0x40
    bad4:	adrp	x21, 50000 <PyInit__decimal@@Base+0x4954c>
    bad8:	ldr	x21, [x21, #4008]
    badc:	mov	x8, x2
    bae0:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    bae4:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    bae8:	mov	x19, x0
    baec:	add	x2, x2, #0x74c
    baf0:	add	x3, x3, #0x5f8
    baf4:	add	x4, x29, #0x18
    baf8:	sub	x5, x29, #0x8
    bafc:	mov	x0, x1
    bb00:	mov	x1, x8
    bb04:	str	x21, [x29, #24]
    bb08:	stur	x21, [x29, #-8]
    bb0c:	stur	wzr, [x29, #-12]
    bb10:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    bb14:	cbz	w0, bc60 <PyInit__decimal@@Base+0x51ac>
    bb18:	ldur	x8, [x29, #-8]
    bb1c:	cmp	x8, x21
    bb20:	b.eq	bb5c <PyInit__decimal@@Base+0x50a8>  // b.none
    bb24:	ldr	x0, [x8, #8]
    bb28:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    bb2c:	add	x8, x8, #0x4b8
    bb30:	cmp	x0, x8
    bb34:	b.eq	bb98 <PyInit__decimal@@Base+0x50e4>  // b.none
    bb38:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    bb3c:	add	x1, x1, #0x4b8
    bb40:	bl	6900 <PyType_IsSubtype@plt>
    bb44:	cbnz	w0, bb98 <PyInit__decimal@@Base+0x50e4>
    bb48:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    bb4c:	ldr	x8, [x8, #3936]
    bb50:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    bb54:	add	x1, x1, #0x631
    bb58:	b	bc58 <PyInit__decimal@@Base+0x51a4>
    bb5c:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    bb60:	ldr	x0, [x22, #1400]
    bb64:	mov	x2, sp
    bb68:	mov	x1, xzr
    bb6c:	bl	6680 <PyContextVar_Get@plt>
    bb70:	tbnz	w0, #31, bcfc <PyInit__decimal@@Base+0x5248>
    bb74:	ldr	x20, [sp]
    bb78:	cbz	x20, bc80 <PyInit__decimal@@Base+0x51cc>
    bb7c:	stur	x20, [x29, #-8]
    bb80:	ldr	x8, [x20]
    bb84:	subs	x8, x8, #0x1
    bb88:	str	x8, [x20]
    bb8c:	b.ne	bb98 <PyInit__decimal@@Base+0x50e4>  // b.any
    bb90:	mov	x0, x20
    bb94:	bl	6510 <_Py_Dealloc@plt>
    bb98:	ldur	x8, [x29, #-8]
    bb9c:	ldr	x0, [x29, #24]
    bba0:	ldp	q0, q1, [x8, #16]
    bba4:	ldr	q2, [x8, #48]
    bba8:	cmp	x0, x21
    bbac:	stp	q0, q1, [sp]
    bbb0:	str	q2, [sp, #32]
    bbb4:	b.eq	bbd0 <PyInit__decimal@@Base+0x511c>  // b.none
    bbb8:	bl	12790 <PyInit__decimal@@Base+0xbcdc>
    bbbc:	tbnz	w0, #31, bc60 <PyInit__decimal@@Base+0x51ac>
    bbc0:	mov	w1, w0
    bbc4:	mov	x0, sp
    bbc8:	bl	1c9d8 <PyInit__decimal@@Base+0x15f24>
    bbcc:	cbz	w0, bc48 <PyInit__decimal@@Base+0x5194>
    bbd0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    bbd4:	add	x0, x0, #0x318
    bbd8:	bl	6890 <_PyObject_New@plt>
    bbdc:	mov	x20, x0
    bbe0:	cbz	x0, bc64 <PyInit__decimal@@Base+0x51b0>
    bbe4:	mov	w8, #0x30                  	// #48
    bbe8:	mov	x0, x20
    bbec:	strb	w8, [x0, #24]!
    bbf0:	mov	x9, #0xffffffffffffffff    	// #-1
    bbf4:	mov	w10, #0x4                   	// #4
    bbf8:	add	x8, x0, #0x30
    bbfc:	add	x1, x19, #0x18
    bc00:	mov	x2, sp
    bc04:	sub	x3, x29, #0xc
    bc08:	stur	x9, [x0, #-8]
    bc0c:	stp	xzr, xzr, [x0, #8]
    bc10:	stp	xzr, x10, [x0, #24]
    bc14:	str	x8, [x0, #40]
    bc18:	bl	31280 <PyInit__decimal@@Base+0x2a7cc>
    bc1c:	ldur	x0, [x29, #-8]
    bc20:	ldur	w1, [x29, #-12]
    bc24:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    bc28:	cbz	w0, bc64 <PyInit__decimal@@Base+0x51b0>
    bc2c:	ldr	x8, [x20]
    bc30:	subs	x8, x8, #0x1
    bc34:	str	x8, [x20]
    bc38:	b.ne	bc60 <PyInit__decimal@@Base+0x51ac>  // b.any
    bc3c:	mov	x0, x20
    bc40:	bl	6510 <_Py_Dealloc@plt>
    bc44:	b	bc60 <PyInit__decimal@@Base+0x51ac>
    bc48:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    bc4c:	ldr	x8, [x8, #3920]
    bc50:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    bc54:	add	x1, x1, #0x65e
    bc58:	ldr	x0, [x8]
    bc5c:	bl	6590 <PyErr_SetString@plt>
    bc60:	mov	x20, xzr
    bc64:	mov	x0, x20
    bc68:	ldp	x20, x19, [sp, #112]
    bc6c:	ldp	x22, x21, [sp, #96]
    bc70:	ldr	x23, [sp, #80]
    bc74:	ldp	x29, x30, [sp, #64]
    bc78:	add	sp, sp, #0x80
    bc7c:	ret
    bc80:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    bc84:	ldr	x23, [x8, #1496]
    bc88:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    bc8c:	add	x0, x0, #0x4b8
    bc90:	mov	x1, xzr
    bc94:	bl	6780 <PyObject_CallObject@plt>
    bc98:	cbz	x0, bcfc <PyInit__decimal@@Base+0x5248>
    bc9c:	ldp	q1, q0, [x23, #32]
    bca0:	ldr	q2, [x23, #16]
    bca4:	mov	x20, x0
    bca8:	mov	x1, x20
    bcac:	stp	q1, q0, [x0, #32]
    bcb0:	str	q2, [x0, #16]
    bcb4:	ldr	w8, [x23, #80]
    bcb8:	stp	wzr, wzr, [x0, #44]
    bcbc:	str	w8, [x0, #80]
    bcc0:	ldr	x0, [x22, #1400]
    bcc4:	bl	65c0 <PyContextVar_Set@plt>
    bcc8:	cbz	x0, bce4 <PyInit__decimal@@Base+0x5230>
    bccc:	ldr	x8, [x0]
    bcd0:	subs	x8, x8, #0x1
    bcd4:	str	x8, [x0]
    bcd8:	b.ne	bb7c <PyInit__decimal@@Base+0x50c8>  // b.any
    bcdc:	bl	6510 <_Py_Dealloc@plt>
    bce0:	b	bb7c <PyInit__decimal@@Base+0x50c8>
    bce4:	ldr	x8, [x20]
    bce8:	subs	x8, x8, #0x1
    bcec:	str	x8, [x20]
    bcf0:	b.ne	bcfc <PyInit__decimal@@Base+0x5248>  // b.any
    bcf4:	mov	x0, x20
    bcf8:	bl	6510 <_Py_Dealloc@plt>
    bcfc:	mov	x20, xzr
    bd00:	stur	xzr, [x29, #-8]
    bd04:	b	bc64 <PyInit__decimal@@Base+0x51b0>
    bd08:	sub	sp, sp, #0x80
    bd0c:	stp	x29, x30, [sp, #64]
    bd10:	str	x23, [sp, #80]
    bd14:	stp	x22, x21, [sp, #96]
    bd18:	stp	x20, x19, [sp, #112]
    bd1c:	add	x29, sp, #0x40
    bd20:	adrp	x21, 50000 <PyInit__decimal@@Base+0x4954c>
    bd24:	ldr	x21, [x21, #4008]
    bd28:	mov	x8, x2
    bd2c:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    bd30:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    bd34:	mov	x19, x0
    bd38:	add	x2, x2, #0x74c
    bd3c:	add	x3, x3, #0x610
    bd40:	add	x4, x29, #0x18
    bd44:	sub	x5, x29, #0x8
    bd48:	mov	x0, x1
    bd4c:	mov	x1, x8
    bd50:	str	x21, [x29, #24]
    bd54:	stur	x21, [x29, #-8]
    bd58:	stur	wzr, [x29, #-12]
    bd5c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    bd60:	cbz	w0, beac <PyInit__decimal@@Base+0x53f8>
    bd64:	ldur	x8, [x29, #-8]
    bd68:	cmp	x8, x21
    bd6c:	b.eq	bda8 <PyInit__decimal@@Base+0x52f4>  // b.none
    bd70:	ldr	x0, [x8, #8]
    bd74:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    bd78:	add	x8, x8, #0x4b8
    bd7c:	cmp	x0, x8
    bd80:	b.eq	bde4 <PyInit__decimal@@Base+0x5330>  // b.none
    bd84:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    bd88:	add	x1, x1, #0x4b8
    bd8c:	bl	6900 <PyType_IsSubtype@plt>
    bd90:	cbnz	w0, bde4 <PyInit__decimal@@Base+0x5330>
    bd94:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    bd98:	ldr	x8, [x8, #3936]
    bd9c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    bda0:	add	x1, x1, #0x631
    bda4:	b	bea4 <PyInit__decimal@@Base+0x53f0>
    bda8:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    bdac:	ldr	x0, [x22, #1400]
    bdb0:	mov	x2, sp
    bdb4:	mov	x1, xzr
    bdb8:	bl	6680 <PyContextVar_Get@plt>
    bdbc:	tbnz	w0, #31, bf48 <PyInit__decimal@@Base+0x5494>
    bdc0:	ldr	x20, [sp]
    bdc4:	cbz	x20, becc <PyInit__decimal@@Base+0x5418>
    bdc8:	stur	x20, [x29, #-8]
    bdcc:	ldr	x8, [x20]
    bdd0:	subs	x8, x8, #0x1
    bdd4:	str	x8, [x20]
    bdd8:	b.ne	bde4 <PyInit__decimal@@Base+0x5330>  // b.any
    bddc:	mov	x0, x20
    bde0:	bl	6510 <_Py_Dealloc@plt>
    bde4:	ldur	x8, [x29, #-8]
    bde8:	ldr	x0, [x29, #24]
    bdec:	ldp	q0, q1, [x8, #16]
    bdf0:	ldr	q2, [x8, #48]
    bdf4:	cmp	x0, x21
    bdf8:	stp	q0, q1, [sp]
    bdfc:	str	q2, [sp, #32]
    be00:	b.eq	be1c <PyInit__decimal@@Base+0x5368>  // b.none
    be04:	bl	12790 <PyInit__decimal@@Base+0xbcdc>
    be08:	tbnz	w0, #31, beac <PyInit__decimal@@Base+0x53f8>
    be0c:	mov	w1, w0
    be10:	mov	x0, sp
    be14:	bl	1c9d8 <PyInit__decimal@@Base+0x15f24>
    be18:	cbz	w0, be94 <PyInit__decimal@@Base+0x53e0>
    be1c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    be20:	add	x0, x0, #0x318
    be24:	bl	6890 <_PyObject_New@plt>
    be28:	mov	x20, x0
    be2c:	cbz	x0, beb0 <PyInit__decimal@@Base+0x53fc>
    be30:	mov	w8, #0x30                  	// #48
    be34:	mov	x0, x20
    be38:	strb	w8, [x0, #24]!
    be3c:	mov	x9, #0xffffffffffffffff    	// #-1
    be40:	mov	w10, #0x4                   	// #4
    be44:	add	x8, x0, #0x30
    be48:	add	x1, x19, #0x18
    be4c:	mov	x2, sp
    be50:	sub	x3, x29, #0xc
    be54:	stur	x9, [x0, #-8]
    be58:	stp	xzr, xzr, [x0, #8]
    be5c:	stp	xzr, x10, [x0, #24]
    be60:	str	x8, [x0, #40]
    be64:	bl	32c1c <PyInit__decimal@@Base+0x2c168>
    be68:	ldur	x0, [x29, #-8]
    be6c:	ldur	w1, [x29, #-12]
    be70:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    be74:	cbz	w0, beb0 <PyInit__decimal@@Base+0x53fc>
    be78:	ldr	x8, [x20]
    be7c:	subs	x8, x8, #0x1
    be80:	str	x8, [x20]
    be84:	b.ne	beac <PyInit__decimal@@Base+0x53f8>  // b.any
    be88:	mov	x0, x20
    be8c:	bl	6510 <_Py_Dealloc@plt>
    be90:	b	beac <PyInit__decimal@@Base+0x53f8>
    be94:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    be98:	ldr	x8, [x8, #3920]
    be9c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    bea0:	add	x1, x1, #0x71d
    bea4:	ldr	x0, [x8]
    bea8:	bl	6590 <PyErr_SetString@plt>
    beac:	mov	x20, xzr
    beb0:	mov	x0, x20
    beb4:	ldp	x20, x19, [sp, #112]
    beb8:	ldp	x22, x21, [sp, #96]
    bebc:	ldr	x23, [sp, #80]
    bec0:	ldp	x29, x30, [sp, #64]
    bec4:	add	sp, sp, #0x80
    bec8:	ret
    becc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    bed0:	ldr	x23, [x8, #1496]
    bed4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    bed8:	add	x0, x0, #0x4b8
    bedc:	mov	x1, xzr
    bee0:	bl	6780 <PyObject_CallObject@plt>
    bee4:	cbz	x0, bf48 <PyInit__decimal@@Base+0x5494>
    bee8:	ldp	q1, q0, [x23, #32]
    beec:	ldr	q2, [x23, #16]
    bef0:	mov	x20, x0
    bef4:	mov	x1, x20
    bef8:	stp	q1, q0, [x0, #32]
    befc:	str	q2, [x0, #16]
    bf00:	ldr	w8, [x23, #80]
    bf04:	stp	wzr, wzr, [x0, #44]
    bf08:	str	w8, [x0, #80]
    bf0c:	ldr	x0, [x22, #1400]
    bf10:	bl	65c0 <PyContextVar_Set@plt>
    bf14:	cbz	x0, bf30 <PyInit__decimal@@Base+0x547c>
    bf18:	ldr	x8, [x0]
    bf1c:	subs	x8, x8, #0x1
    bf20:	str	x8, [x0]
    bf24:	b.ne	bdc8 <PyInit__decimal@@Base+0x5314>  // b.any
    bf28:	bl	6510 <_Py_Dealloc@plt>
    bf2c:	b	bdc8 <PyInit__decimal@@Base+0x5314>
    bf30:	ldr	x8, [x20]
    bf34:	subs	x8, x8, #0x1
    bf38:	str	x8, [x20]
    bf3c:	b.ne	bf48 <PyInit__decimal@@Base+0x5494>  // b.any
    bf40:	mov	x0, x20
    bf44:	bl	6510 <_Py_Dealloc@plt>
    bf48:	mov	x20, xzr
    bf4c:	stur	xzr, [x29, #-8]
    bf50:	b	beb0 <PyInit__decimal@@Base+0x53fc>
    bf54:	sub	sp, sp, #0x50
    bf58:	stp	x29, x30, [sp, #32]
    bf5c:	stp	x22, x21, [sp, #48]
    bf60:	stp	x20, x19, [sp, #64]
    bf64:	add	x29, sp, #0x20
    bf68:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    bf6c:	ldr	x20, [x20, #4008]
    bf70:	mov	x8, x2
    bf74:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    bf78:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    bf7c:	mov	x19, x0
    bf80:	add	x2, x2, #0x77c
    bf84:	add	x3, x3, #0x628
    bf88:	add	x4, sp, #0x10
    bf8c:	mov	x0, x1
    bf90:	mov	x1, x8
    bf94:	str	x20, [sp, #16]
    bf98:	str	wzr, [sp, #12]
    bf9c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    bfa0:	cbz	w0, c0a4 <PyInit__decimal@@Base+0x55f0>
    bfa4:	ldr	x8, [sp, #16]
    bfa8:	cmp	x8, x20
    bfac:	b.eq	bff0 <PyInit__decimal@@Base+0x553c>  // b.none
    bfb0:	ldr	x0, [x8, #8]
    bfb4:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    bfb8:	add	x8, x8, #0x4b8
    bfbc:	cmp	x0, x8
    bfc0:	b.eq	c02c <PyInit__decimal@@Base+0x5578>  // b.none
    bfc4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    bfc8:	add	x1, x1, #0x4b8
    bfcc:	bl	6900 <PyType_IsSubtype@plt>
    bfd0:	cbnz	w0, c02c <PyInit__decimal@@Base+0x5578>
    bfd4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    bfd8:	ldr	x8, [x8, #3936]
    bfdc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    bfe0:	add	x1, x1, #0x631
    bfe4:	ldr	x0, [x8]
    bfe8:	bl	6590 <PyErr_SetString@plt>
    bfec:	b	c0a4 <PyInit__decimal@@Base+0x55f0>
    bff0:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    bff4:	ldr	x0, [x21, #1400]
    bff8:	sub	x2, x29, #0x8
    bffc:	mov	x1, xzr
    c000:	bl	6680 <PyContextVar_Get@plt>
    c004:	tbnz	w0, #31, c13c <PyInit__decimal@@Base+0x5688>
    c008:	ldur	x20, [x29, #-8]
    c00c:	cbz	x20, c0c0 <PyInit__decimal@@Base+0x560c>
    c010:	str	x20, [sp, #16]
    c014:	ldr	x8, [x20]
    c018:	subs	x8, x8, #0x1
    c01c:	str	x8, [x20]
    c020:	b.ne	c02c <PyInit__decimal@@Base+0x5578>  // b.any
    c024:	mov	x0, x20
    c028:	bl	6510 <_Py_Dealloc@plt>
    c02c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c030:	add	x0, x0, #0x318
    c034:	bl	6890 <_PyObject_New@plt>
    c038:	mov	x20, x0
    c03c:	cbz	x0, c0a8 <PyInit__decimal@@Base+0x55f4>
    c040:	mov	w8, #0x30                  	// #48
    c044:	mov	x0, x20
    c048:	strb	w8, [x0, #24]!
    c04c:	mov	x9, #0xffffffffffffffff    	// #-1
    c050:	mov	w10, #0x4                   	// #4
    c054:	add	x8, x0, #0x30
    c058:	stur	x9, [x0, #-8]
    c05c:	stp	xzr, xzr, [x0, #8]
    c060:	stp	xzr, x10, [x0, #24]
    c064:	str	x8, [x0, #40]
    c068:	ldr	x8, [sp, #16]
    c06c:	add	x1, x19, #0x18
    c070:	add	x3, sp, #0xc
    c074:	add	x2, x8, #0x10
    c078:	bl	33b54 <PyInit__decimal@@Base+0x2d0a0>
    c07c:	ldr	x0, [sp, #16]
    c080:	ldr	w1, [sp, #12]
    c084:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    c088:	cbz	w0, c0a8 <PyInit__decimal@@Base+0x55f4>
    c08c:	ldr	x8, [x20]
    c090:	subs	x8, x8, #0x1
    c094:	str	x8, [x20]
    c098:	b.ne	c0a4 <PyInit__decimal@@Base+0x55f0>  // b.any
    c09c:	mov	x0, x20
    c0a0:	bl	6510 <_Py_Dealloc@plt>
    c0a4:	mov	x20, xzr
    c0a8:	mov	x0, x20
    c0ac:	ldp	x20, x19, [sp, #64]
    c0b0:	ldp	x22, x21, [sp, #48]
    c0b4:	ldp	x29, x30, [sp, #32]
    c0b8:	add	sp, sp, #0x50
    c0bc:	ret
    c0c0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    c0c4:	ldr	x22, [x8, #1496]
    c0c8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c0cc:	add	x0, x0, #0x4b8
    c0d0:	mov	x1, xzr
    c0d4:	bl	6780 <PyObject_CallObject@plt>
    c0d8:	cbz	x0, c13c <PyInit__decimal@@Base+0x5688>
    c0dc:	ldp	q1, q0, [x22, #32]
    c0e0:	ldr	q2, [x22, #16]
    c0e4:	mov	x20, x0
    c0e8:	mov	x1, x20
    c0ec:	stp	q1, q0, [x0, #32]
    c0f0:	str	q2, [x0, #16]
    c0f4:	ldr	w8, [x22, #80]
    c0f8:	stp	wzr, wzr, [x0, #44]
    c0fc:	str	w8, [x0, #80]
    c100:	ldr	x0, [x21, #1400]
    c104:	bl	65c0 <PyContextVar_Set@plt>
    c108:	cbz	x0, c124 <PyInit__decimal@@Base+0x5670>
    c10c:	ldr	x8, [x0]
    c110:	subs	x8, x8, #0x1
    c114:	str	x8, [x0]
    c118:	b.ne	c010 <PyInit__decimal@@Base+0x555c>  // b.any
    c11c:	bl	6510 <_Py_Dealloc@plt>
    c120:	b	c010 <PyInit__decimal@@Base+0x555c>
    c124:	ldr	x8, [x20]
    c128:	subs	x8, x8, #0x1
    c12c:	str	x8, [x20]
    c130:	b.ne	c13c <PyInit__decimal@@Base+0x5688>  // b.any
    c134:	mov	x0, x20
    c138:	bl	6510 <_Py_Dealloc@plt>
    c13c:	mov	x20, xzr
    c140:	str	xzr, [sp, #16]
    c144:	b	c0a8 <PyInit__decimal@@Base+0x55f4>
    c148:	sub	sp, sp, #0x50
    c14c:	stp	x29, x30, [sp, #32]
    c150:	stp	x22, x21, [sp, #48]
    c154:	stp	x20, x19, [sp, #64]
    c158:	add	x29, sp, #0x20
    c15c:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    c160:	ldr	x20, [x20, #4008]
    c164:	mov	x8, x2
    c168:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    c16c:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    c170:	mov	x19, x0
    c174:	add	x2, x2, #0x77b
    c178:	add	x3, x3, #0x638
    c17c:	add	x4, sp, #0x10
    c180:	add	x5, sp, #0x8
    c184:	mov	x0, x1
    c188:	mov	x1, x8
    c18c:	str	x20, [sp, #8]
    c190:	str	wzr, [sp, #4]
    c194:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    c198:	cbz	w0, c470 <PyInit__decimal@@Base+0x59bc>
    c19c:	ldr	x8, [sp, #8]
    c1a0:	cmp	x8, x20
    c1a4:	b.eq	c1e8 <PyInit__decimal@@Base+0x5734>  // b.none
    c1a8:	ldr	x0, [x8, #8]
    c1ac:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    c1b0:	add	x8, x8, #0x4b8
    c1b4:	cmp	x0, x8
    c1b8:	b.eq	c224 <PyInit__decimal@@Base+0x5770>  // b.none
    c1bc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    c1c0:	add	x1, x1, #0x4b8
    c1c4:	bl	6900 <PyType_IsSubtype@plt>
    c1c8:	cbnz	w0, c224 <PyInit__decimal@@Base+0x5770>
    c1cc:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    c1d0:	ldr	x8, [x8, #3936]
    c1d4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    c1d8:	add	x1, x1, #0x631
    c1dc:	ldr	x0, [x8]
    c1e0:	bl	6590 <PyErr_SetString@plt>
    c1e4:	b	c470 <PyInit__decimal@@Base+0x59bc>
    c1e8:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    c1ec:	ldr	x0, [x21, #1400]
    c1f0:	sub	x2, x29, #0x8
    c1f4:	mov	x1, xzr
    c1f8:	bl	6680 <PyContextVar_Get@plt>
    c1fc:	tbnz	w0, #31, c4a4 <PyInit__decimal@@Base+0x59f0>
    c200:	ldur	x20, [x29, #-8]
    c204:	cbz	x20, c3b8 <PyInit__decimal@@Base+0x5904>
    c208:	str	x20, [sp, #8]
    c20c:	ldr	x8, [x20]
    c210:	subs	x8, x8, #0x1
    c214:	str	x8, [x20]
    c218:	b.ne	c224 <PyInit__decimal@@Base+0x5770>  // b.any
    c21c:	mov	x0, x20
    c220:	bl	6510 <_Py_Dealloc@plt>
    c224:	ldr	x0, [x19, #8]
    c228:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    c22c:	add	x21, x21, #0x318
    c230:	cmp	x0, x21
    c234:	b.eq	c24c <PyInit__decimal@@Base+0x5798>  // b.none
    c238:	ldr	x20, [sp, #8]
    c23c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    c240:	add	x1, x1, #0x318
    c244:	bl	6900 <PyType_IsSubtype@plt>
    c248:	cbz	w0, c360 <PyInit__decimal@@Base+0x58ac>
    c24c:	ldr	x8, [x19]
    c250:	add	x8, x8, #0x1
    c254:	str	x8, [x19]
    c258:	ldr	x20, [sp, #16]
    c25c:	ldr	x0, [x20, #8]
    c260:	cmp	x0, x21
    c264:	b.eq	c27c <PyInit__decimal@@Base+0x57c8>  // b.none
    c268:	ldr	x21, [sp, #8]
    c26c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    c270:	add	x1, x1, #0x318
    c274:	bl	6900 <PyType_IsSubtype@plt>
    c278:	cbz	w0, c38c <PyInit__decimal@@Base+0x58d8>
    c27c:	ldr	x8, [x20]
    c280:	add	x8, x8, #0x1
    c284:	str	x8, [x20]
    c288:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c28c:	add	x0, x0, #0x318
    c290:	bl	6890 <_PyObject_New@plt>
    c294:	cbz	x0, c330 <PyInit__decimal@@Base+0x587c>
    c298:	mov	w8, #0x30                  	// #48
    c29c:	mov	x21, x0
    c2a0:	strb	w8, [x0, #24]!
    c2a4:	mov	x9, #0xffffffffffffffff    	// #-1
    c2a8:	mov	w10, #0x4                   	// #4
    c2ac:	add	x8, x0, #0x30
    c2b0:	stur	x9, [x0, #-8]
    c2b4:	stp	xzr, xzr, [x0, #8]
    c2b8:	stp	xzr, x10, [x0, #24]
    c2bc:	str	x8, [x0, #40]
    c2c0:	ldr	x8, [sp, #8]
    c2c4:	add	x1, x19, #0x18
    c2c8:	add	x2, x20, #0x18
    c2cc:	add	x4, sp, #0x4
    c2d0:	add	x3, x8, #0x10
    c2d4:	bl	23808 <PyInit__decimal@@Base+0x1cd54>
    c2d8:	ldr	x8, [x19]
    c2dc:	subs	x8, x8, #0x1
    c2e0:	str	x8, [x19]
    c2e4:	b.ne	c2f0 <PyInit__decimal@@Base+0x583c>  // b.any
    c2e8:	mov	x0, x19
    c2ec:	bl	6510 <_Py_Dealloc@plt>
    c2f0:	ldr	x8, [x20]
    c2f4:	subs	x8, x8, #0x1
    c2f8:	str	x8, [x20]
    c2fc:	b.ne	c308 <PyInit__decimal@@Base+0x5854>  // b.any
    c300:	mov	x0, x20
    c304:	bl	6510 <_Py_Dealloc@plt>
    c308:	ldr	x0, [sp, #8]
    c30c:	ldr	w1, [sp, #4]
    c310:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    c314:	cbz	w0, c474 <PyInit__decimal@@Base+0x59c0>
    c318:	ldr	x8, [x21]
    c31c:	subs	x8, x8, #0x1
    c320:	str	x8, [x21]
    c324:	b.ne	c470 <PyInit__decimal@@Base+0x59bc>  // b.any
    c328:	mov	x0, x21
    c32c:	b	c46c <PyInit__decimal@@Base+0x59b8>
    c330:	ldr	x8, [x19]
    c334:	subs	x8, x8, #0x1
    c338:	str	x8, [x19]
    c33c:	b.ne	c348 <PyInit__decimal@@Base+0x5894>  // b.any
    c340:	mov	x0, x19
    c344:	bl	6510 <_Py_Dealloc@plt>
    c348:	ldr	x8, [x20]
    c34c:	subs	x8, x8, #0x1
    c350:	str	x8, [x20]
    c354:	b.ne	c470 <PyInit__decimal@@Base+0x59bc>  // b.any
    c358:	mov	x0, x20
    c35c:	b	c46c <PyInit__decimal@@Base+0x59b8>
    c360:	ldr	x8, [x19, #8]
    c364:	ldrb	w9, [x8, #171]
    c368:	tbnz	w9, #0, c41c <PyInit__decimal@@Base+0x5968>
    c36c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    c370:	ldr	x9, [x9, #3936]
    c374:	ldr	x2, [x8, #24]
    c378:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    c37c:	add	x1, x1, #0x263
    c380:	ldr	x0, [x9]
    c384:	bl	6950 <PyErr_Format@plt>
    c388:	b	c470 <PyInit__decimal@@Base+0x59bc>
    c38c:	ldr	x8, [x20, #8]
    c390:	ldrb	w9, [x8, #171]
    c394:	tbnz	w9, #0, c43c <PyInit__decimal@@Base+0x5988>
    c398:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    c39c:	ldr	x9, [x9, #3936]
    c3a0:	ldr	x2, [x8, #24]
    c3a4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    c3a8:	add	x1, x1, #0x263
    c3ac:	ldr	x0, [x9]
    c3b0:	bl	6950 <PyErr_Format@plt>
    c3b4:	b	c458 <PyInit__decimal@@Base+0x59a4>
    c3b8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    c3bc:	ldr	x22, [x8, #1496]
    c3c0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c3c4:	add	x0, x0, #0x4b8
    c3c8:	mov	x1, xzr
    c3cc:	bl	6780 <PyObject_CallObject@plt>
    c3d0:	cbz	x0, c4a4 <PyInit__decimal@@Base+0x59f0>
    c3d4:	ldp	q1, q0, [x22, #32]
    c3d8:	ldr	q2, [x22, #16]
    c3dc:	mov	x20, x0
    c3e0:	mov	x1, x20
    c3e4:	stp	q1, q0, [x0, #32]
    c3e8:	str	q2, [x0, #16]
    c3ec:	ldr	w8, [x22, #80]
    c3f0:	stp	wzr, wzr, [x0, #44]
    c3f4:	str	w8, [x0, #80]
    c3f8:	ldr	x0, [x21, #1400]
    c3fc:	bl	65c0 <PyContextVar_Set@plt>
    c400:	cbz	x0, c48c <PyInit__decimal@@Base+0x59d8>
    c404:	ldr	x8, [x0]
    c408:	subs	x8, x8, #0x1
    c40c:	str	x8, [x0]
    c410:	b.ne	c208 <PyInit__decimal@@Base+0x5754>  // b.any
    c414:	bl	6510 <_Py_Dealloc@plt>
    c418:	b	c208 <PyInit__decimal@@Base+0x5754>
    c41c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c420:	add	x0, x0, #0x318
    c424:	mov	x1, x19
    c428:	mov	x2, x20
    c42c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    c430:	mov	x19, x0
    c434:	cbnz	x0, c258 <PyInit__decimal@@Base+0x57a4>
    c438:	b	c470 <PyInit__decimal@@Base+0x59bc>
    c43c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c440:	add	x0, x0, #0x318
    c444:	mov	x1, x20
    c448:	mov	x2, x21
    c44c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    c450:	mov	x20, x0
    c454:	cbnz	x0, c288 <PyInit__decimal@@Base+0x57d4>
    c458:	ldr	x8, [x19]
    c45c:	subs	x8, x8, #0x1
    c460:	str	x8, [x19]
    c464:	b.ne	c470 <PyInit__decimal@@Base+0x59bc>  // b.any
    c468:	mov	x0, x19
    c46c:	bl	6510 <_Py_Dealloc@plt>
    c470:	mov	x21, xzr
    c474:	mov	x0, x21
    c478:	ldp	x20, x19, [sp, #64]
    c47c:	ldp	x22, x21, [sp, #48]
    c480:	ldp	x29, x30, [sp, #32]
    c484:	add	sp, sp, #0x50
    c488:	ret
    c48c:	ldr	x8, [x20]
    c490:	subs	x8, x8, #0x1
    c494:	str	x8, [x20]
    c498:	b.ne	c4a4 <PyInit__decimal@@Base+0x59f0>  // b.any
    c49c:	mov	x0, x20
    c4a0:	bl	6510 <_Py_Dealloc@plt>
    c4a4:	mov	x21, xzr
    c4a8:	str	xzr, [sp, #8]
    c4ac:	b	c474 <PyInit__decimal@@Base+0x59c0>
    c4b0:	sub	sp, sp, #0x50
    c4b4:	stp	x29, x30, [sp, #32]
    c4b8:	stp	x22, x21, [sp, #48]
    c4bc:	stp	x20, x19, [sp, #64]
    c4c0:	add	x29, sp, #0x20
    c4c4:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    c4c8:	ldr	x20, [x20, #4008]
    c4cc:	mov	x8, x2
    c4d0:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    c4d4:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    c4d8:	mov	x19, x0
    c4dc:	add	x2, x2, #0x77b
    c4e0:	add	x3, x3, #0x650
    c4e4:	add	x4, sp, #0x10
    c4e8:	add	x5, sp, #0x8
    c4ec:	mov	x0, x1
    c4f0:	mov	x1, x8
    c4f4:	str	x20, [sp, #8]
    c4f8:	str	wzr, [sp, #4]
    c4fc:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    c500:	cbz	w0, c7d8 <PyInit__decimal@@Base+0x5d24>
    c504:	ldr	x8, [sp, #8]
    c508:	cmp	x8, x20
    c50c:	b.eq	c550 <PyInit__decimal@@Base+0x5a9c>  // b.none
    c510:	ldr	x0, [x8, #8]
    c514:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    c518:	add	x8, x8, #0x4b8
    c51c:	cmp	x0, x8
    c520:	b.eq	c58c <PyInit__decimal@@Base+0x5ad8>  // b.none
    c524:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    c528:	add	x1, x1, #0x4b8
    c52c:	bl	6900 <PyType_IsSubtype@plt>
    c530:	cbnz	w0, c58c <PyInit__decimal@@Base+0x5ad8>
    c534:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    c538:	ldr	x8, [x8, #3936]
    c53c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    c540:	add	x1, x1, #0x631
    c544:	ldr	x0, [x8]
    c548:	bl	6590 <PyErr_SetString@plt>
    c54c:	b	c7d8 <PyInit__decimal@@Base+0x5d24>
    c550:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    c554:	ldr	x0, [x21, #1400]
    c558:	sub	x2, x29, #0x8
    c55c:	mov	x1, xzr
    c560:	bl	6680 <PyContextVar_Get@plt>
    c564:	tbnz	w0, #31, c80c <PyInit__decimal@@Base+0x5d58>
    c568:	ldur	x20, [x29, #-8]
    c56c:	cbz	x20, c720 <PyInit__decimal@@Base+0x5c6c>
    c570:	str	x20, [sp, #8]
    c574:	ldr	x8, [x20]
    c578:	subs	x8, x8, #0x1
    c57c:	str	x8, [x20]
    c580:	b.ne	c58c <PyInit__decimal@@Base+0x5ad8>  // b.any
    c584:	mov	x0, x20
    c588:	bl	6510 <_Py_Dealloc@plt>
    c58c:	ldr	x0, [x19, #8]
    c590:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    c594:	add	x21, x21, #0x318
    c598:	cmp	x0, x21
    c59c:	b.eq	c5b4 <PyInit__decimal@@Base+0x5b00>  // b.none
    c5a0:	ldr	x20, [sp, #8]
    c5a4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    c5a8:	add	x1, x1, #0x318
    c5ac:	bl	6900 <PyType_IsSubtype@plt>
    c5b0:	cbz	w0, c6c8 <PyInit__decimal@@Base+0x5c14>
    c5b4:	ldr	x8, [x19]
    c5b8:	add	x8, x8, #0x1
    c5bc:	str	x8, [x19]
    c5c0:	ldr	x20, [sp, #16]
    c5c4:	ldr	x0, [x20, #8]
    c5c8:	cmp	x0, x21
    c5cc:	b.eq	c5e4 <PyInit__decimal@@Base+0x5b30>  // b.none
    c5d0:	ldr	x21, [sp, #8]
    c5d4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    c5d8:	add	x1, x1, #0x318
    c5dc:	bl	6900 <PyType_IsSubtype@plt>
    c5e0:	cbz	w0, c6f4 <PyInit__decimal@@Base+0x5c40>
    c5e4:	ldr	x8, [x20]
    c5e8:	add	x8, x8, #0x1
    c5ec:	str	x8, [x20]
    c5f0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c5f4:	add	x0, x0, #0x318
    c5f8:	bl	6890 <_PyObject_New@plt>
    c5fc:	cbz	x0, c698 <PyInit__decimal@@Base+0x5be4>
    c600:	mov	w8, #0x30                  	// #48
    c604:	mov	x21, x0
    c608:	strb	w8, [x0, #24]!
    c60c:	mov	x9, #0xffffffffffffffff    	// #-1
    c610:	mov	w10, #0x4                   	// #4
    c614:	add	x8, x0, #0x30
    c618:	stur	x9, [x0, #-8]
    c61c:	stp	xzr, xzr, [x0, #8]
    c620:	stp	xzr, x10, [x0, #24]
    c624:	str	x8, [x0, #40]
    c628:	ldr	x8, [sp, #8]
    c62c:	add	x1, x19, #0x18
    c630:	add	x2, x20, #0x18
    c634:	add	x4, sp, #0x4
    c638:	add	x3, x8, #0x10
    c63c:	bl	23894 <PyInit__decimal@@Base+0x1cde0>
    c640:	ldr	x8, [x19]
    c644:	subs	x8, x8, #0x1
    c648:	str	x8, [x19]
    c64c:	b.ne	c658 <PyInit__decimal@@Base+0x5ba4>  // b.any
    c650:	mov	x0, x19
    c654:	bl	6510 <_Py_Dealloc@plt>
    c658:	ldr	x8, [x20]
    c65c:	subs	x8, x8, #0x1
    c660:	str	x8, [x20]
    c664:	b.ne	c670 <PyInit__decimal@@Base+0x5bbc>  // b.any
    c668:	mov	x0, x20
    c66c:	bl	6510 <_Py_Dealloc@plt>
    c670:	ldr	x0, [sp, #8]
    c674:	ldr	w1, [sp, #4]
    c678:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    c67c:	cbz	w0, c7dc <PyInit__decimal@@Base+0x5d28>
    c680:	ldr	x8, [x21]
    c684:	subs	x8, x8, #0x1
    c688:	str	x8, [x21]
    c68c:	b.ne	c7d8 <PyInit__decimal@@Base+0x5d24>  // b.any
    c690:	mov	x0, x21
    c694:	b	c7d4 <PyInit__decimal@@Base+0x5d20>
    c698:	ldr	x8, [x19]
    c69c:	subs	x8, x8, #0x1
    c6a0:	str	x8, [x19]
    c6a4:	b.ne	c6b0 <PyInit__decimal@@Base+0x5bfc>  // b.any
    c6a8:	mov	x0, x19
    c6ac:	bl	6510 <_Py_Dealloc@plt>
    c6b0:	ldr	x8, [x20]
    c6b4:	subs	x8, x8, #0x1
    c6b8:	str	x8, [x20]
    c6bc:	b.ne	c7d8 <PyInit__decimal@@Base+0x5d24>  // b.any
    c6c0:	mov	x0, x20
    c6c4:	b	c7d4 <PyInit__decimal@@Base+0x5d20>
    c6c8:	ldr	x8, [x19, #8]
    c6cc:	ldrb	w9, [x8, #171]
    c6d0:	tbnz	w9, #0, c784 <PyInit__decimal@@Base+0x5cd0>
    c6d4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    c6d8:	ldr	x9, [x9, #3936]
    c6dc:	ldr	x2, [x8, #24]
    c6e0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    c6e4:	add	x1, x1, #0x263
    c6e8:	ldr	x0, [x9]
    c6ec:	bl	6950 <PyErr_Format@plt>
    c6f0:	b	c7d8 <PyInit__decimal@@Base+0x5d24>
    c6f4:	ldr	x8, [x20, #8]
    c6f8:	ldrb	w9, [x8, #171]
    c6fc:	tbnz	w9, #0, c7a4 <PyInit__decimal@@Base+0x5cf0>
    c700:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    c704:	ldr	x9, [x9, #3936]
    c708:	ldr	x2, [x8, #24]
    c70c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    c710:	add	x1, x1, #0x263
    c714:	ldr	x0, [x9]
    c718:	bl	6950 <PyErr_Format@plt>
    c71c:	b	c7c0 <PyInit__decimal@@Base+0x5d0c>
    c720:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    c724:	ldr	x22, [x8, #1496]
    c728:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c72c:	add	x0, x0, #0x4b8
    c730:	mov	x1, xzr
    c734:	bl	6780 <PyObject_CallObject@plt>
    c738:	cbz	x0, c80c <PyInit__decimal@@Base+0x5d58>
    c73c:	ldp	q1, q0, [x22, #32]
    c740:	ldr	q2, [x22, #16]
    c744:	mov	x20, x0
    c748:	mov	x1, x20
    c74c:	stp	q1, q0, [x0, #32]
    c750:	str	q2, [x0, #16]
    c754:	ldr	w8, [x22, #80]
    c758:	stp	wzr, wzr, [x0, #44]
    c75c:	str	w8, [x0, #80]
    c760:	ldr	x0, [x21, #1400]
    c764:	bl	65c0 <PyContextVar_Set@plt>
    c768:	cbz	x0, c7f4 <PyInit__decimal@@Base+0x5d40>
    c76c:	ldr	x8, [x0]
    c770:	subs	x8, x8, #0x1
    c774:	str	x8, [x0]
    c778:	b.ne	c570 <PyInit__decimal@@Base+0x5abc>  // b.any
    c77c:	bl	6510 <_Py_Dealloc@plt>
    c780:	b	c570 <PyInit__decimal@@Base+0x5abc>
    c784:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c788:	add	x0, x0, #0x318
    c78c:	mov	x1, x19
    c790:	mov	x2, x20
    c794:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    c798:	mov	x19, x0
    c79c:	cbnz	x0, c5c0 <PyInit__decimal@@Base+0x5b0c>
    c7a0:	b	c7d8 <PyInit__decimal@@Base+0x5d24>
    c7a4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c7a8:	add	x0, x0, #0x318
    c7ac:	mov	x1, x20
    c7b0:	mov	x2, x21
    c7b4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    c7b8:	mov	x20, x0
    c7bc:	cbnz	x0, c5f0 <PyInit__decimal@@Base+0x5b3c>
    c7c0:	ldr	x8, [x19]
    c7c4:	subs	x8, x8, #0x1
    c7c8:	str	x8, [x19]
    c7cc:	b.ne	c7d8 <PyInit__decimal@@Base+0x5d24>  // b.any
    c7d0:	mov	x0, x19
    c7d4:	bl	6510 <_Py_Dealloc@plt>
    c7d8:	mov	x21, xzr
    c7dc:	mov	x0, x21
    c7e0:	ldp	x20, x19, [sp, #64]
    c7e4:	ldp	x22, x21, [sp, #48]
    c7e8:	ldp	x29, x30, [sp, #32]
    c7ec:	add	sp, sp, #0x50
    c7f0:	ret
    c7f4:	ldr	x8, [x20]
    c7f8:	subs	x8, x8, #0x1
    c7fc:	str	x8, [x20]
    c800:	b.ne	c80c <PyInit__decimal@@Base+0x5d58>  // b.any
    c804:	mov	x0, x20
    c808:	bl	6510 <_Py_Dealloc@plt>
    c80c:	mov	x21, xzr
    c810:	str	xzr, [sp, #8]
    c814:	b	c7dc <PyInit__decimal@@Base+0x5d28>
    c818:	sub	sp, sp, #0x50
    c81c:	stp	x29, x30, [sp, #32]
    c820:	stp	x22, x21, [sp, #48]
    c824:	stp	x20, x19, [sp, #64]
    c828:	add	x29, sp, #0x20
    c82c:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    c830:	ldr	x20, [x20, #4008]
    c834:	mov	x8, x2
    c838:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    c83c:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    c840:	mov	x19, x0
    c844:	add	x2, x2, #0x77b
    c848:	add	x3, x3, #0x668
    c84c:	add	x4, sp, #0x10
    c850:	add	x5, sp, #0x8
    c854:	mov	x0, x1
    c858:	mov	x1, x8
    c85c:	str	x20, [sp, #8]
    c860:	str	wzr, [sp, #4]
    c864:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    c868:	cbz	w0, cb40 <PyInit__decimal@@Base+0x608c>
    c86c:	ldr	x8, [sp, #8]
    c870:	cmp	x8, x20
    c874:	b.eq	c8b8 <PyInit__decimal@@Base+0x5e04>  // b.none
    c878:	ldr	x0, [x8, #8]
    c87c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    c880:	add	x8, x8, #0x4b8
    c884:	cmp	x0, x8
    c888:	b.eq	c8f4 <PyInit__decimal@@Base+0x5e40>  // b.none
    c88c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    c890:	add	x1, x1, #0x4b8
    c894:	bl	6900 <PyType_IsSubtype@plt>
    c898:	cbnz	w0, c8f4 <PyInit__decimal@@Base+0x5e40>
    c89c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    c8a0:	ldr	x8, [x8, #3936]
    c8a4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    c8a8:	add	x1, x1, #0x631
    c8ac:	ldr	x0, [x8]
    c8b0:	bl	6590 <PyErr_SetString@plt>
    c8b4:	b	cb40 <PyInit__decimal@@Base+0x608c>
    c8b8:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    c8bc:	ldr	x0, [x21, #1400]
    c8c0:	sub	x2, x29, #0x8
    c8c4:	mov	x1, xzr
    c8c8:	bl	6680 <PyContextVar_Get@plt>
    c8cc:	tbnz	w0, #31, cb74 <PyInit__decimal@@Base+0x60c0>
    c8d0:	ldur	x20, [x29, #-8]
    c8d4:	cbz	x20, ca88 <PyInit__decimal@@Base+0x5fd4>
    c8d8:	str	x20, [sp, #8]
    c8dc:	ldr	x8, [x20]
    c8e0:	subs	x8, x8, #0x1
    c8e4:	str	x8, [x20]
    c8e8:	b.ne	c8f4 <PyInit__decimal@@Base+0x5e40>  // b.any
    c8ec:	mov	x0, x20
    c8f0:	bl	6510 <_Py_Dealloc@plt>
    c8f4:	ldr	x0, [x19, #8]
    c8f8:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    c8fc:	add	x21, x21, #0x318
    c900:	cmp	x0, x21
    c904:	b.eq	c91c <PyInit__decimal@@Base+0x5e68>  // b.none
    c908:	ldr	x20, [sp, #8]
    c90c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    c910:	add	x1, x1, #0x318
    c914:	bl	6900 <PyType_IsSubtype@plt>
    c918:	cbz	w0, ca30 <PyInit__decimal@@Base+0x5f7c>
    c91c:	ldr	x8, [x19]
    c920:	add	x8, x8, #0x1
    c924:	str	x8, [x19]
    c928:	ldr	x20, [sp, #16]
    c92c:	ldr	x0, [x20, #8]
    c930:	cmp	x0, x21
    c934:	b.eq	c94c <PyInit__decimal@@Base+0x5e98>  // b.none
    c938:	ldr	x21, [sp, #8]
    c93c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    c940:	add	x1, x1, #0x318
    c944:	bl	6900 <PyType_IsSubtype@plt>
    c948:	cbz	w0, ca5c <PyInit__decimal@@Base+0x5fa8>
    c94c:	ldr	x8, [x20]
    c950:	add	x8, x8, #0x1
    c954:	str	x8, [x20]
    c958:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    c95c:	add	x0, x0, #0x318
    c960:	bl	6890 <_PyObject_New@plt>
    c964:	cbz	x0, ca00 <PyInit__decimal@@Base+0x5f4c>
    c968:	mov	w8, #0x30                  	// #48
    c96c:	mov	x21, x0
    c970:	strb	w8, [x0, #24]!
    c974:	mov	x9, #0xffffffffffffffff    	// #-1
    c978:	mov	w10, #0x4                   	// #4
    c97c:	add	x8, x0, #0x30
    c980:	stur	x9, [x0, #-8]
    c984:	stp	xzr, xzr, [x0, #8]
    c988:	stp	xzr, x10, [x0, #24]
    c98c:	str	x8, [x0, #40]
    c990:	ldr	x8, [sp, #8]
    c994:	add	x1, x19, #0x18
    c998:	add	x2, x20, #0x18
    c99c:	add	x4, sp, #0x4
    c9a0:	add	x3, x8, #0x10
    c9a4:	bl	2dc88 <PyInit__decimal@@Base+0x271d4>
    c9a8:	ldr	x8, [x19]
    c9ac:	subs	x8, x8, #0x1
    c9b0:	str	x8, [x19]
    c9b4:	b.ne	c9c0 <PyInit__decimal@@Base+0x5f0c>  // b.any
    c9b8:	mov	x0, x19
    c9bc:	bl	6510 <_Py_Dealloc@plt>
    c9c0:	ldr	x8, [x20]
    c9c4:	subs	x8, x8, #0x1
    c9c8:	str	x8, [x20]
    c9cc:	b.ne	c9d8 <PyInit__decimal@@Base+0x5f24>  // b.any
    c9d0:	mov	x0, x20
    c9d4:	bl	6510 <_Py_Dealloc@plt>
    c9d8:	ldr	x0, [sp, #8]
    c9dc:	ldr	w1, [sp, #4]
    c9e0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    c9e4:	cbz	w0, cb44 <PyInit__decimal@@Base+0x6090>
    c9e8:	ldr	x8, [x21]
    c9ec:	subs	x8, x8, #0x1
    c9f0:	str	x8, [x21]
    c9f4:	b.ne	cb40 <PyInit__decimal@@Base+0x608c>  // b.any
    c9f8:	mov	x0, x21
    c9fc:	b	cb3c <PyInit__decimal@@Base+0x6088>
    ca00:	ldr	x8, [x19]
    ca04:	subs	x8, x8, #0x1
    ca08:	str	x8, [x19]
    ca0c:	b.ne	ca18 <PyInit__decimal@@Base+0x5f64>  // b.any
    ca10:	mov	x0, x19
    ca14:	bl	6510 <_Py_Dealloc@plt>
    ca18:	ldr	x8, [x20]
    ca1c:	subs	x8, x8, #0x1
    ca20:	str	x8, [x20]
    ca24:	b.ne	cb40 <PyInit__decimal@@Base+0x608c>  // b.any
    ca28:	mov	x0, x20
    ca2c:	b	cb3c <PyInit__decimal@@Base+0x6088>
    ca30:	ldr	x8, [x19, #8]
    ca34:	ldrb	w9, [x8, #171]
    ca38:	tbnz	w9, #0, caec <PyInit__decimal@@Base+0x6038>
    ca3c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    ca40:	ldr	x9, [x9, #3936]
    ca44:	ldr	x2, [x8, #24]
    ca48:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    ca4c:	add	x1, x1, #0x263
    ca50:	ldr	x0, [x9]
    ca54:	bl	6950 <PyErr_Format@plt>
    ca58:	b	cb40 <PyInit__decimal@@Base+0x608c>
    ca5c:	ldr	x8, [x20, #8]
    ca60:	ldrb	w9, [x8, #171]
    ca64:	tbnz	w9, #0, cb0c <PyInit__decimal@@Base+0x6058>
    ca68:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    ca6c:	ldr	x9, [x9, #3936]
    ca70:	ldr	x2, [x8, #24]
    ca74:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    ca78:	add	x1, x1, #0x263
    ca7c:	ldr	x0, [x9]
    ca80:	bl	6950 <PyErr_Format@plt>
    ca84:	b	cb28 <PyInit__decimal@@Base+0x6074>
    ca88:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    ca8c:	ldr	x22, [x8, #1496]
    ca90:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ca94:	add	x0, x0, #0x4b8
    ca98:	mov	x1, xzr
    ca9c:	bl	6780 <PyObject_CallObject@plt>
    caa0:	cbz	x0, cb74 <PyInit__decimal@@Base+0x60c0>
    caa4:	ldp	q1, q0, [x22, #32]
    caa8:	ldr	q2, [x22, #16]
    caac:	mov	x20, x0
    cab0:	mov	x1, x20
    cab4:	stp	q1, q0, [x0, #32]
    cab8:	str	q2, [x0, #16]
    cabc:	ldr	w8, [x22, #80]
    cac0:	stp	wzr, wzr, [x0, #44]
    cac4:	str	w8, [x0, #80]
    cac8:	ldr	x0, [x21, #1400]
    cacc:	bl	65c0 <PyContextVar_Set@plt>
    cad0:	cbz	x0, cb5c <PyInit__decimal@@Base+0x60a8>
    cad4:	ldr	x8, [x0]
    cad8:	subs	x8, x8, #0x1
    cadc:	str	x8, [x0]
    cae0:	b.ne	c8d8 <PyInit__decimal@@Base+0x5e24>  // b.any
    cae4:	bl	6510 <_Py_Dealloc@plt>
    cae8:	b	c8d8 <PyInit__decimal@@Base+0x5e24>
    caec:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    caf0:	add	x0, x0, #0x318
    caf4:	mov	x1, x19
    caf8:	mov	x2, x20
    cafc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    cb00:	mov	x19, x0
    cb04:	cbnz	x0, c928 <PyInit__decimal@@Base+0x5e74>
    cb08:	b	cb40 <PyInit__decimal@@Base+0x608c>
    cb0c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    cb10:	add	x0, x0, #0x318
    cb14:	mov	x1, x20
    cb18:	mov	x2, x21
    cb1c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    cb20:	mov	x20, x0
    cb24:	cbnz	x0, c958 <PyInit__decimal@@Base+0x5ea4>
    cb28:	ldr	x8, [x19]
    cb2c:	subs	x8, x8, #0x1
    cb30:	str	x8, [x19]
    cb34:	b.ne	cb40 <PyInit__decimal@@Base+0x608c>  // b.any
    cb38:	mov	x0, x19
    cb3c:	bl	6510 <_Py_Dealloc@plt>
    cb40:	mov	x21, xzr
    cb44:	mov	x0, x21
    cb48:	ldp	x20, x19, [sp, #64]
    cb4c:	ldp	x22, x21, [sp, #48]
    cb50:	ldp	x29, x30, [sp, #32]
    cb54:	add	sp, sp, #0x50
    cb58:	ret
    cb5c:	ldr	x8, [x20]
    cb60:	subs	x8, x8, #0x1
    cb64:	str	x8, [x20]
    cb68:	b.ne	cb74 <PyInit__decimal@@Base+0x60c0>  // b.any
    cb6c:	mov	x0, x20
    cb70:	bl	6510 <_Py_Dealloc@plt>
    cb74:	mov	x21, xzr
    cb78:	str	xzr, [sp, #8]
    cb7c:	b	cb44 <PyInit__decimal@@Base+0x6090>
    cb80:	sub	sp, sp, #0x50
    cb84:	stp	x29, x30, [sp, #32]
    cb88:	stp	x22, x21, [sp, #48]
    cb8c:	stp	x20, x19, [sp, #64]
    cb90:	add	x29, sp, #0x20
    cb94:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    cb98:	ldr	x20, [x20, #4008]
    cb9c:	mov	x8, x2
    cba0:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    cba4:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    cba8:	mov	x19, x0
    cbac:	add	x2, x2, #0x77b
    cbb0:	add	x3, x3, #0x680
    cbb4:	add	x4, sp, #0x10
    cbb8:	add	x5, sp, #0x8
    cbbc:	mov	x0, x1
    cbc0:	mov	x1, x8
    cbc4:	str	x20, [sp, #8]
    cbc8:	str	wzr, [sp, #4]
    cbcc:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    cbd0:	cbz	w0, cea8 <PyInit__decimal@@Base+0x63f4>
    cbd4:	ldr	x8, [sp, #8]
    cbd8:	cmp	x8, x20
    cbdc:	b.eq	cc20 <PyInit__decimal@@Base+0x616c>  // b.none
    cbe0:	ldr	x0, [x8, #8]
    cbe4:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    cbe8:	add	x8, x8, #0x4b8
    cbec:	cmp	x0, x8
    cbf0:	b.eq	cc5c <PyInit__decimal@@Base+0x61a8>  // b.none
    cbf4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    cbf8:	add	x1, x1, #0x4b8
    cbfc:	bl	6900 <PyType_IsSubtype@plt>
    cc00:	cbnz	w0, cc5c <PyInit__decimal@@Base+0x61a8>
    cc04:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    cc08:	ldr	x8, [x8, #3936]
    cc0c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    cc10:	add	x1, x1, #0x631
    cc14:	ldr	x0, [x8]
    cc18:	bl	6590 <PyErr_SetString@plt>
    cc1c:	b	cea8 <PyInit__decimal@@Base+0x63f4>
    cc20:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    cc24:	ldr	x0, [x21, #1400]
    cc28:	sub	x2, x29, #0x8
    cc2c:	mov	x1, xzr
    cc30:	bl	6680 <PyContextVar_Get@plt>
    cc34:	tbnz	w0, #31, cedc <PyInit__decimal@@Base+0x6428>
    cc38:	ldur	x20, [x29, #-8]
    cc3c:	cbz	x20, cdf0 <PyInit__decimal@@Base+0x633c>
    cc40:	str	x20, [sp, #8]
    cc44:	ldr	x8, [x20]
    cc48:	subs	x8, x8, #0x1
    cc4c:	str	x8, [x20]
    cc50:	b.ne	cc5c <PyInit__decimal@@Base+0x61a8>  // b.any
    cc54:	mov	x0, x20
    cc58:	bl	6510 <_Py_Dealloc@plt>
    cc5c:	ldr	x0, [x19, #8]
    cc60:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    cc64:	add	x21, x21, #0x318
    cc68:	cmp	x0, x21
    cc6c:	b.eq	cc84 <PyInit__decimal@@Base+0x61d0>  // b.none
    cc70:	ldr	x20, [sp, #8]
    cc74:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    cc78:	add	x1, x1, #0x318
    cc7c:	bl	6900 <PyType_IsSubtype@plt>
    cc80:	cbz	w0, cd98 <PyInit__decimal@@Base+0x62e4>
    cc84:	ldr	x8, [x19]
    cc88:	add	x8, x8, #0x1
    cc8c:	str	x8, [x19]
    cc90:	ldr	x20, [sp, #16]
    cc94:	ldr	x0, [x20, #8]
    cc98:	cmp	x0, x21
    cc9c:	b.eq	ccb4 <PyInit__decimal@@Base+0x6200>  // b.none
    cca0:	ldr	x21, [sp, #8]
    cca4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    cca8:	add	x1, x1, #0x318
    ccac:	bl	6900 <PyType_IsSubtype@plt>
    ccb0:	cbz	w0, cdc4 <PyInit__decimal@@Base+0x6310>
    ccb4:	ldr	x8, [x20]
    ccb8:	add	x8, x8, #0x1
    ccbc:	str	x8, [x20]
    ccc0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ccc4:	add	x0, x0, #0x318
    ccc8:	bl	6890 <_PyObject_New@plt>
    cccc:	cbz	x0, cd68 <PyInit__decimal@@Base+0x62b4>
    ccd0:	mov	w8, #0x30                  	// #48
    ccd4:	mov	x21, x0
    ccd8:	strb	w8, [x0, #24]!
    ccdc:	mov	x9, #0xffffffffffffffff    	// #-1
    cce0:	mov	w10, #0x4                   	// #4
    cce4:	add	x8, x0, #0x30
    cce8:	stur	x9, [x0, #-8]
    ccec:	stp	xzr, xzr, [x0, #8]
    ccf0:	stp	xzr, x10, [x0, #24]
    ccf4:	str	x8, [x0, #40]
    ccf8:	ldr	x8, [sp, #8]
    ccfc:	add	x1, x19, #0x18
    cd00:	add	x2, x20, #0x18
    cd04:	add	x4, sp, #0x4
    cd08:	add	x3, x8, #0x10
    cd0c:	bl	2df3c <PyInit__decimal@@Base+0x27488>
    cd10:	ldr	x8, [x19]
    cd14:	subs	x8, x8, #0x1
    cd18:	str	x8, [x19]
    cd1c:	b.ne	cd28 <PyInit__decimal@@Base+0x6274>  // b.any
    cd20:	mov	x0, x19
    cd24:	bl	6510 <_Py_Dealloc@plt>
    cd28:	ldr	x8, [x20]
    cd2c:	subs	x8, x8, #0x1
    cd30:	str	x8, [x20]
    cd34:	b.ne	cd40 <PyInit__decimal@@Base+0x628c>  // b.any
    cd38:	mov	x0, x20
    cd3c:	bl	6510 <_Py_Dealloc@plt>
    cd40:	ldr	x0, [sp, #8]
    cd44:	ldr	w1, [sp, #4]
    cd48:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    cd4c:	cbz	w0, ceac <PyInit__decimal@@Base+0x63f8>
    cd50:	ldr	x8, [x21]
    cd54:	subs	x8, x8, #0x1
    cd58:	str	x8, [x21]
    cd5c:	b.ne	cea8 <PyInit__decimal@@Base+0x63f4>  // b.any
    cd60:	mov	x0, x21
    cd64:	b	cea4 <PyInit__decimal@@Base+0x63f0>
    cd68:	ldr	x8, [x19]
    cd6c:	subs	x8, x8, #0x1
    cd70:	str	x8, [x19]
    cd74:	b.ne	cd80 <PyInit__decimal@@Base+0x62cc>  // b.any
    cd78:	mov	x0, x19
    cd7c:	bl	6510 <_Py_Dealloc@plt>
    cd80:	ldr	x8, [x20]
    cd84:	subs	x8, x8, #0x1
    cd88:	str	x8, [x20]
    cd8c:	b.ne	cea8 <PyInit__decimal@@Base+0x63f4>  // b.any
    cd90:	mov	x0, x20
    cd94:	b	cea4 <PyInit__decimal@@Base+0x63f0>
    cd98:	ldr	x8, [x19, #8]
    cd9c:	ldrb	w9, [x8, #171]
    cda0:	tbnz	w9, #0, ce54 <PyInit__decimal@@Base+0x63a0>
    cda4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    cda8:	ldr	x9, [x9, #3936]
    cdac:	ldr	x2, [x8, #24]
    cdb0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    cdb4:	add	x1, x1, #0x263
    cdb8:	ldr	x0, [x9]
    cdbc:	bl	6950 <PyErr_Format@plt>
    cdc0:	b	cea8 <PyInit__decimal@@Base+0x63f4>
    cdc4:	ldr	x8, [x20, #8]
    cdc8:	ldrb	w9, [x8, #171]
    cdcc:	tbnz	w9, #0, ce74 <PyInit__decimal@@Base+0x63c0>
    cdd0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    cdd4:	ldr	x9, [x9, #3936]
    cdd8:	ldr	x2, [x8, #24]
    cddc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    cde0:	add	x1, x1, #0x263
    cde4:	ldr	x0, [x9]
    cde8:	bl	6950 <PyErr_Format@plt>
    cdec:	b	ce90 <PyInit__decimal@@Base+0x63dc>
    cdf0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    cdf4:	ldr	x22, [x8, #1496]
    cdf8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    cdfc:	add	x0, x0, #0x4b8
    ce00:	mov	x1, xzr
    ce04:	bl	6780 <PyObject_CallObject@plt>
    ce08:	cbz	x0, cedc <PyInit__decimal@@Base+0x6428>
    ce0c:	ldp	q1, q0, [x22, #32]
    ce10:	ldr	q2, [x22, #16]
    ce14:	mov	x20, x0
    ce18:	mov	x1, x20
    ce1c:	stp	q1, q0, [x0, #32]
    ce20:	str	q2, [x0, #16]
    ce24:	ldr	w8, [x22, #80]
    ce28:	stp	wzr, wzr, [x0, #44]
    ce2c:	str	w8, [x0, #80]
    ce30:	ldr	x0, [x21, #1400]
    ce34:	bl	65c0 <PyContextVar_Set@plt>
    ce38:	cbz	x0, cec4 <PyInit__decimal@@Base+0x6410>
    ce3c:	ldr	x8, [x0]
    ce40:	subs	x8, x8, #0x1
    ce44:	str	x8, [x0]
    ce48:	b.ne	cc40 <PyInit__decimal@@Base+0x618c>  // b.any
    ce4c:	bl	6510 <_Py_Dealloc@plt>
    ce50:	b	cc40 <PyInit__decimal@@Base+0x618c>
    ce54:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ce58:	add	x0, x0, #0x318
    ce5c:	mov	x1, x19
    ce60:	mov	x2, x20
    ce64:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    ce68:	mov	x19, x0
    ce6c:	cbnz	x0, cc90 <PyInit__decimal@@Base+0x61dc>
    ce70:	b	cea8 <PyInit__decimal@@Base+0x63f4>
    ce74:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ce78:	add	x0, x0, #0x318
    ce7c:	mov	x1, x20
    ce80:	mov	x2, x21
    ce84:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    ce88:	mov	x20, x0
    ce8c:	cbnz	x0, ccc0 <PyInit__decimal@@Base+0x620c>
    ce90:	ldr	x8, [x19]
    ce94:	subs	x8, x8, #0x1
    ce98:	str	x8, [x19]
    ce9c:	b.ne	cea8 <PyInit__decimal@@Base+0x63f4>  // b.any
    cea0:	mov	x0, x19
    cea4:	bl	6510 <_Py_Dealloc@plt>
    cea8:	mov	x21, xzr
    ceac:	mov	x0, x21
    ceb0:	ldp	x20, x19, [sp, #64]
    ceb4:	ldp	x22, x21, [sp, #48]
    ceb8:	ldp	x29, x30, [sp, #32]
    cebc:	add	sp, sp, #0x50
    cec0:	ret
    cec4:	ldr	x8, [x20]
    cec8:	subs	x8, x8, #0x1
    cecc:	str	x8, [x20]
    ced0:	b.ne	cedc <PyInit__decimal@@Base+0x6428>  // b.any
    ced4:	mov	x0, x20
    ced8:	bl	6510 <_Py_Dealloc@plt>
    cedc:	mov	x21, xzr
    cee0:	str	xzr, [sp, #8]
    cee4:	b	ceac <PyInit__decimal@@Base+0x63f8>
    cee8:	sub	sp, sp, #0x50
    ceec:	stp	x29, x30, [sp, #32]
    cef0:	stp	x22, x21, [sp, #48]
    cef4:	stp	x20, x19, [sp, #64]
    cef8:	add	x29, sp, #0x20
    cefc:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    cf00:	ldr	x20, [x20, #4008]
    cf04:	mov	x8, x2
    cf08:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    cf0c:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    cf10:	mov	x19, x0
    cf14:	add	x2, x2, #0x77b
    cf18:	add	x3, x3, #0x698
    cf1c:	add	x4, sp, #0x10
    cf20:	add	x5, sp, #0x8
    cf24:	mov	x0, x1
    cf28:	mov	x1, x8
    cf2c:	str	x20, [sp, #8]
    cf30:	str	wzr, [sp, #4]
    cf34:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    cf38:	cbz	w0, d210 <PyInit__decimal@@Base+0x675c>
    cf3c:	ldr	x8, [sp, #8]
    cf40:	cmp	x8, x20
    cf44:	b.eq	cf88 <PyInit__decimal@@Base+0x64d4>  // b.none
    cf48:	ldr	x0, [x8, #8]
    cf4c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    cf50:	add	x8, x8, #0x4b8
    cf54:	cmp	x0, x8
    cf58:	b.eq	cfc4 <PyInit__decimal@@Base+0x6510>  // b.none
    cf5c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    cf60:	add	x1, x1, #0x4b8
    cf64:	bl	6900 <PyType_IsSubtype@plt>
    cf68:	cbnz	w0, cfc4 <PyInit__decimal@@Base+0x6510>
    cf6c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    cf70:	ldr	x8, [x8, #3936]
    cf74:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    cf78:	add	x1, x1, #0x631
    cf7c:	ldr	x0, [x8]
    cf80:	bl	6590 <PyErr_SetString@plt>
    cf84:	b	d210 <PyInit__decimal@@Base+0x675c>
    cf88:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    cf8c:	ldr	x0, [x21, #1400]
    cf90:	sub	x2, x29, #0x8
    cf94:	mov	x1, xzr
    cf98:	bl	6680 <PyContextVar_Get@plt>
    cf9c:	tbnz	w0, #31, d244 <PyInit__decimal@@Base+0x6790>
    cfa0:	ldur	x20, [x29, #-8]
    cfa4:	cbz	x20, d158 <PyInit__decimal@@Base+0x66a4>
    cfa8:	str	x20, [sp, #8]
    cfac:	ldr	x8, [x20]
    cfb0:	subs	x8, x8, #0x1
    cfb4:	str	x8, [x20]
    cfb8:	b.ne	cfc4 <PyInit__decimal@@Base+0x6510>  // b.any
    cfbc:	mov	x0, x20
    cfc0:	bl	6510 <_Py_Dealloc@plt>
    cfc4:	ldr	x0, [x19, #8]
    cfc8:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    cfcc:	add	x21, x21, #0x318
    cfd0:	cmp	x0, x21
    cfd4:	b.eq	cfec <PyInit__decimal@@Base+0x6538>  // b.none
    cfd8:	ldr	x20, [sp, #8]
    cfdc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    cfe0:	add	x1, x1, #0x318
    cfe4:	bl	6900 <PyType_IsSubtype@plt>
    cfe8:	cbz	w0, d100 <PyInit__decimal@@Base+0x664c>
    cfec:	ldr	x8, [x19]
    cff0:	add	x8, x8, #0x1
    cff4:	str	x8, [x19]
    cff8:	ldr	x20, [sp, #16]
    cffc:	ldr	x0, [x20, #8]
    d000:	cmp	x0, x21
    d004:	b.eq	d01c <PyInit__decimal@@Base+0x6568>  // b.none
    d008:	ldr	x21, [sp, #8]
    d00c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    d010:	add	x1, x1, #0x318
    d014:	bl	6900 <PyType_IsSubtype@plt>
    d018:	cbz	w0, d12c <PyInit__decimal@@Base+0x6678>
    d01c:	ldr	x8, [x20]
    d020:	add	x8, x8, #0x1
    d024:	str	x8, [x20]
    d028:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d02c:	add	x0, x0, #0x318
    d030:	bl	6890 <_PyObject_New@plt>
    d034:	cbz	x0, d0d0 <PyInit__decimal@@Base+0x661c>
    d038:	mov	w8, #0x30                  	// #48
    d03c:	mov	x21, x0
    d040:	strb	w8, [x0, #24]!
    d044:	mov	x9, #0xffffffffffffffff    	// #-1
    d048:	mov	w10, #0x4                   	// #4
    d04c:	add	x8, x0, #0x30
    d050:	stur	x9, [x0, #-8]
    d054:	stp	xzr, xzr, [x0, #8]
    d058:	stp	xzr, x10, [x0, #24]
    d05c:	str	x8, [x0, #40]
    d060:	ldr	x8, [sp, #8]
    d064:	add	x1, x19, #0x18
    d068:	add	x2, x20, #0x18
    d06c:	add	x4, sp, #0x4
    d070:	add	x3, x8, #0x10
    d074:	bl	2e1f0 <PyInit__decimal@@Base+0x2773c>
    d078:	ldr	x8, [x19]
    d07c:	subs	x8, x8, #0x1
    d080:	str	x8, [x19]
    d084:	b.ne	d090 <PyInit__decimal@@Base+0x65dc>  // b.any
    d088:	mov	x0, x19
    d08c:	bl	6510 <_Py_Dealloc@plt>
    d090:	ldr	x8, [x20]
    d094:	subs	x8, x8, #0x1
    d098:	str	x8, [x20]
    d09c:	b.ne	d0a8 <PyInit__decimal@@Base+0x65f4>  // b.any
    d0a0:	mov	x0, x20
    d0a4:	bl	6510 <_Py_Dealloc@plt>
    d0a8:	ldr	x0, [sp, #8]
    d0ac:	ldr	w1, [sp, #4]
    d0b0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    d0b4:	cbz	w0, d214 <PyInit__decimal@@Base+0x6760>
    d0b8:	ldr	x8, [x21]
    d0bc:	subs	x8, x8, #0x1
    d0c0:	str	x8, [x21]
    d0c4:	b.ne	d210 <PyInit__decimal@@Base+0x675c>  // b.any
    d0c8:	mov	x0, x21
    d0cc:	b	d20c <PyInit__decimal@@Base+0x6758>
    d0d0:	ldr	x8, [x19]
    d0d4:	subs	x8, x8, #0x1
    d0d8:	str	x8, [x19]
    d0dc:	b.ne	d0e8 <PyInit__decimal@@Base+0x6634>  // b.any
    d0e0:	mov	x0, x19
    d0e4:	bl	6510 <_Py_Dealloc@plt>
    d0e8:	ldr	x8, [x20]
    d0ec:	subs	x8, x8, #0x1
    d0f0:	str	x8, [x20]
    d0f4:	b.ne	d210 <PyInit__decimal@@Base+0x675c>  // b.any
    d0f8:	mov	x0, x20
    d0fc:	b	d20c <PyInit__decimal@@Base+0x6758>
    d100:	ldr	x8, [x19, #8]
    d104:	ldrb	w9, [x8, #171]
    d108:	tbnz	w9, #0, d1bc <PyInit__decimal@@Base+0x6708>
    d10c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    d110:	ldr	x9, [x9, #3936]
    d114:	ldr	x2, [x8, #24]
    d118:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    d11c:	add	x1, x1, #0x263
    d120:	ldr	x0, [x9]
    d124:	bl	6950 <PyErr_Format@plt>
    d128:	b	d210 <PyInit__decimal@@Base+0x675c>
    d12c:	ldr	x8, [x20, #8]
    d130:	ldrb	w9, [x8, #171]
    d134:	tbnz	w9, #0, d1dc <PyInit__decimal@@Base+0x6728>
    d138:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    d13c:	ldr	x9, [x9, #3936]
    d140:	ldr	x2, [x8, #24]
    d144:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    d148:	add	x1, x1, #0x263
    d14c:	ldr	x0, [x9]
    d150:	bl	6950 <PyErr_Format@plt>
    d154:	b	d1f8 <PyInit__decimal@@Base+0x6744>
    d158:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    d15c:	ldr	x22, [x8, #1496]
    d160:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d164:	add	x0, x0, #0x4b8
    d168:	mov	x1, xzr
    d16c:	bl	6780 <PyObject_CallObject@plt>
    d170:	cbz	x0, d244 <PyInit__decimal@@Base+0x6790>
    d174:	ldp	q1, q0, [x22, #32]
    d178:	ldr	q2, [x22, #16]
    d17c:	mov	x20, x0
    d180:	mov	x1, x20
    d184:	stp	q1, q0, [x0, #32]
    d188:	str	q2, [x0, #16]
    d18c:	ldr	w8, [x22, #80]
    d190:	stp	wzr, wzr, [x0, #44]
    d194:	str	w8, [x0, #80]
    d198:	ldr	x0, [x21, #1400]
    d19c:	bl	65c0 <PyContextVar_Set@plt>
    d1a0:	cbz	x0, d22c <PyInit__decimal@@Base+0x6778>
    d1a4:	ldr	x8, [x0]
    d1a8:	subs	x8, x8, #0x1
    d1ac:	str	x8, [x0]
    d1b0:	b.ne	cfa8 <PyInit__decimal@@Base+0x64f4>  // b.any
    d1b4:	bl	6510 <_Py_Dealloc@plt>
    d1b8:	b	cfa8 <PyInit__decimal@@Base+0x64f4>
    d1bc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d1c0:	add	x0, x0, #0x318
    d1c4:	mov	x1, x19
    d1c8:	mov	x2, x20
    d1cc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    d1d0:	mov	x19, x0
    d1d4:	cbnz	x0, cff8 <PyInit__decimal@@Base+0x6544>
    d1d8:	b	d210 <PyInit__decimal@@Base+0x675c>
    d1dc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d1e0:	add	x0, x0, #0x318
    d1e4:	mov	x1, x20
    d1e8:	mov	x2, x21
    d1ec:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    d1f0:	mov	x20, x0
    d1f4:	cbnz	x0, d028 <PyInit__decimal@@Base+0x6574>
    d1f8:	ldr	x8, [x19]
    d1fc:	subs	x8, x8, #0x1
    d200:	str	x8, [x19]
    d204:	b.ne	d210 <PyInit__decimal@@Base+0x675c>  // b.any
    d208:	mov	x0, x19
    d20c:	bl	6510 <_Py_Dealloc@plt>
    d210:	mov	x21, xzr
    d214:	mov	x0, x21
    d218:	ldp	x20, x19, [sp, #64]
    d21c:	ldp	x22, x21, [sp, #48]
    d220:	ldp	x29, x30, [sp, #32]
    d224:	add	sp, sp, #0x50
    d228:	ret
    d22c:	ldr	x8, [x20]
    d230:	subs	x8, x8, #0x1
    d234:	str	x8, [x20]
    d238:	b.ne	d244 <PyInit__decimal@@Base+0x6790>  // b.any
    d23c:	mov	x0, x20
    d240:	bl	6510 <_Py_Dealloc@plt>
    d244:	mov	x21, xzr
    d248:	str	xzr, [sp, #8]
    d24c:	b	d214 <PyInit__decimal@@Base+0x6760>
    d250:	sub	sp, sp, #0x50
    d254:	stp	x29, x30, [sp, #32]
    d258:	stp	x22, x21, [sp, #48]
    d25c:	stp	x20, x19, [sp, #64]
    d260:	add	x29, sp, #0x20
    d264:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    d268:	ldr	x20, [x20, #4008]
    d26c:	mov	x8, x2
    d270:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    d274:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    d278:	mov	x19, x0
    d27c:	add	x2, x2, #0x77b
    d280:	add	x3, x3, #0x6b0
    d284:	add	x4, sp, #0x10
    d288:	add	x5, sp, #0x8
    d28c:	mov	x0, x1
    d290:	mov	x1, x8
    d294:	str	x20, [sp, #8]
    d298:	str	wzr, [sp, #4]
    d29c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    d2a0:	cbz	w0, d578 <PyInit__decimal@@Base+0x6ac4>
    d2a4:	ldr	x8, [sp, #8]
    d2a8:	cmp	x8, x20
    d2ac:	b.eq	d2f0 <PyInit__decimal@@Base+0x683c>  // b.none
    d2b0:	ldr	x0, [x8, #8]
    d2b4:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    d2b8:	add	x8, x8, #0x4b8
    d2bc:	cmp	x0, x8
    d2c0:	b.eq	d32c <PyInit__decimal@@Base+0x6878>  // b.none
    d2c4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    d2c8:	add	x1, x1, #0x4b8
    d2cc:	bl	6900 <PyType_IsSubtype@plt>
    d2d0:	cbnz	w0, d32c <PyInit__decimal@@Base+0x6878>
    d2d4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    d2d8:	ldr	x8, [x8, #3936]
    d2dc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    d2e0:	add	x1, x1, #0x631
    d2e4:	ldr	x0, [x8]
    d2e8:	bl	6590 <PyErr_SetString@plt>
    d2ec:	b	d578 <PyInit__decimal@@Base+0x6ac4>
    d2f0:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    d2f4:	ldr	x0, [x21, #1400]
    d2f8:	sub	x2, x29, #0x8
    d2fc:	mov	x1, xzr
    d300:	bl	6680 <PyContextVar_Get@plt>
    d304:	tbnz	w0, #31, d5ac <PyInit__decimal@@Base+0x6af8>
    d308:	ldur	x20, [x29, #-8]
    d30c:	cbz	x20, d4c0 <PyInit__decimal@@Base+0x6a0c>
    d310:	str	x20, [sp, #8]
    d314:	ldr	x8, [x20]
    d318:	subs	x8, x8, #0x1
    d31c:	str	x8, [x20]
    d320:	b.ne	d32c <PyInit__decimal@@Base+0x6878>  // b.any
    d324:	mov	x0, x20
    d328:	bl	6510 <_Py_Dealloc@plt>
    d32c:	ldr	x0, [x19, #8]
    d330:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    d334:	add	x21, x21, #0x318
    d338:	cmp	x0, x21
    d33c:	b.eq	d354 <PyInit__decimal@@Base+0x68a0>  // b.none
    d340:	ldr	x20, [sp, #8]
    d344:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    d348:	add	x1, x1, #0x318
    d34c:	bl	6900 <PyType_IsSubtype@plt>
    d350:	cbz	w0, d468 <PyInit__decimal@@Base+0x69b4>
    d354:	ldr	x8, [x19]
    d358:	add	x8, x8, #0x1
    d35c:	str	x8, [x19]
    d360:	ldr	x20, [sp, #16]
    d364:	ldr	x0, [x20, #8]
    d368:	cmp	x0, x21
    d36c:	b.eq	d384 <PyInit__decimal@@Base+0x68d0>  // b.none
    d370:	ldr	x21, [sp, #8]
    d374:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    d378:	add	x1, x1, #0x318
    d37c:	bl	6900 <PyType_IsSubtype@plt>
    d380:	cbz	w0, d494 <PyInit__decimal@@Base+0x69e0>
    d384:	ldr	x8, [x20]
    d388:	add	x8, x8, #0x1
    d38c:	str	x8, [x20]
    d390:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d394:	add	x0, x0, #0x318
    d398:	bl	6890 <_PyObject_New@plt>
    d39c:	cbz	x0, d438 <PyInit__decimal@@Base+0x6984>
    d3a0:	mov	w8, #0x30                  	// #48
    d3a4:	mov	x21, x0
    d3a8:	strb	w8, [x0, #24]!
    d3ac:	mov	x9, #0xffffffffffffffff    	// #-1
    d3b0:	mov	w10, #0x4                   	// #4
    d3b4:	add	x8, x0, #0x30
    d3b8:	stur	x9, [x0, #-8]
    d3bc:	stp	xzr, xzr, [x0, #8]
    d3c0:	stp	xzr, x10, [x0, #24]
    d3c4:	str	x8, [x0, #40]
    d3c8:	ldr	x8, [sp, #8]
    d3cc:	add	x1, x19, #0x18
    d3d0:	add	x2, x20, #0x18
    d3d4:	add	x4, sp, #0x4
    d3d8:	add	x3, x8, #0x10
    d3dc:	bl	2e4c4 <PyInit__decimal@@Base+0x27a10>
    d3e0:	ldr	x8, [x19]
    d3e4:	subs	x8, x8, #0x1
    d3e8:	str	x8, [x19]
    d3ec:	b.ne	d3f8 <PyInit__decimal@@Base+0x6944>  // b.any
    d3f0:	mov	x0, x19
    d3f4:	bl	6510 <_Py_Dealloc@plt>
    d3f8:	ldr	x8, [x20]
    d3fc:	subs	x8, x8, #0x1
    d400:	str	x8, [x20]
    d404:	b.ne	d410 <PyInit__decimal@@Base+0x695c>  // b.any
    d408:	mov	x0, x20
    d40c:	bl	6510 <_Py_Dealloc@plt>
    d410:	ldr	x0, [sp, #8]
    d414:	ldr	w1, [sp, #4]
    d418:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    d41c:	cbz	w0, d57c <PyInit__decimal@@Base+0x6ac8>
    d420:	ldr	x8, [x21]
    d424:	subs	x8, x8, #0x1
    d428:	str	x8, [x21]
    d42c:	b.ne	d578 <PyInit__decimal@@Base+0x6ac4>  // b.any
    d430:	mov	x0, x21
    d434:	b	d574 <PyInit__decimal@@Base+0x6ac0>
    d438:	ldr	x8, [x19]
    d43c:	subs	x8, x8, #0x1
    d440:	str	x8, [x19]
    d444:	b.ne	d450 <PyInit__decimal@@Base+0x699c>  // b.any
    d448:	mov	x0, x19
    d44c:	bl	6510 <_Py_Dealloc@plt>
    d450:	ldr	x8, [x20]
    d454:	subs	x8, x8, #0x1
    d458:	str	x8, [x20]
    d45c:	b.ne	d578 <PyInit__decimal@@Base+0x6ac4>  // b.any
    d460:	mov	x0, x20
    d464:	b	d574 <PyInit__decimal@@Base+0x6ac0>
    d468:	ldr	x8, [x19, #8]
    d46c:	ldrb	w9, [x8, #171]
    d470:	tbnz	w9, #0, d524 <PyInit__decimal@@Base+0x6a70>
    d474:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    d478:	ldr	x9, [x9, #3936]
    d47c:	ldr	x2, [x8, #24]
    d480:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    d484:	add	x1, x1, #0x263
    d488:	ldr	x0, [x9]
    d48c:	bl	6950 <PyErr_Format@plt>
    d490:	b	d578 <PyInit__decimal@@Base+0x6ac4>
    d494:	ldr	x8, [x20, #8]
    d498:	ldrb	w9, [x8, #171]
    d49c:	tbnz	w9, #0, d544 <PyInit__decimal@@Base+0x6a90>
    d4a0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    d4a4:	ldr	x9, [x9, #3936]
    d4a8:	ldr	x2, [x8, #24]
    d4ac:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    d4b0:	add	x1, x1, #0x263
    d4b4:	ldr	x0, [x9]
    d4b8:	bl	6950 <PyErr_Format@plt>
    d4bc:	b	d560 <PyInit__decimal@@Base+0x6aac>
    d4c0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    d4c4:	ldr	x22, [x8, #1496]
    d4c8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d4cc:	add	x0, x0, #0x4b8
    d4d0:	mov	x1, xzr
    d4d4:	bl	6780 <PyObject_CallObject@plt>
    d4d8:	cbz	x0, d5ac <PyInit__decimal@@Base+0x6af8>
    d4dc:	ldp	q1, q0, [x22, #32]
    d4e0:	ldr	q2, [x22, #16]
    d4e4:	mov	x20, x0
    d4e8:	mov	x1, x20
    d4ec:	stp	q1, q0, [x0, #32]
    d4f0:	str	q2, [x0, #16]
    d4f4:	ldr	w8, [x22, #80]
    d4f8:	stp	wzr, wzr, [x0, #44]
    d4fc:	str	w8, [x0, #80]
    d500:	ldr	x0, [x21, #1400]
    d504:	bl	65c0 <PyContextVar_Set@plt>
    d508:	cbz	x0, d594 <PyInit__decimal@@Base+0x6ae0>
    d50c:	ldr	x8, [x0]
    d510:	subs	x8, x8, #0x1
    d514:	str	x8, [x0]
    d518:	b.ne	d310 <PyInit__decimal@@Base+0x685c>  // b.any
    d51c:	bl	6510 <_Py_Dealloc@plt>
    d520:	b	d310 <PyInit__decimal@@Base+0x685c>
    d524:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d528:	add	x0, x0, #0x318
    d52c:	mov	x1, x19
    d530:	mov	x2, x20
    d534:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    d538:	mov	x19, x0
    d53c:	cbnz	x0, d360 <PyInit__decimal@@Base+0x68ac>
    d540:	b	d578 <PyInit__decimal@@Base+0x6ac4>
    d544:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d548:	add	x0, x0, #0x318
    d54c:	mov	x1, x20
    d550:	mov	x2, x21
    d554:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    d558:	mov	x20, x0
    d55c:	cbnz	x0, d390 <PyInit__decimal@@Base+0x68dc>
    d560:	ldr	x8, [x19]
    d564:	subs	x8, x8, #0x1
    d568:	str	x8, [x19]
    d56c:	b.ne	d578 <PyInit__decimal@@Base+0x6ac4>  // b.any
    d570:	mov	x0, x19
    d574:	bl	6510 <_Py_Dealloc@plt>
    d578:	mov	x21, xzr
    d57c:	mov	x0, x21
    d580:	ldp	x20, x19, [sp, #64]
    d584:	ldp	x22, x21, [sp, #48]
    d588:	ldp	x29, x30, [sp, #32]
    d58c:	add	sp, sp, #0x50
    d590:	ret
    d594:	ldr	x8, [x20]
    d598:	subs	x8, x8, #0x1
    d59c:	str	x8, [x20]
    d5a0:	b.ne	d5ac <PyInit__decimal@@Base+0x6af8>  // b.any
    d5a4:	mov	x0, x20
    d5a8:	bl	6510 <_Py_Dealloc@plt>
    d5ac:	mov	x21, xzr
    d5b0:	str	xzr, [sp, #8]
    d5b4:	b	d57c <PyInit__decimal@@Base+0x6ac8>
    d5b8:	sub	sp, sp, #0x50
    d5bc:	stp	x29, x30, [sp, #32]
    d5c0:	stp	x22, x21, [sp, #48]
    d5c4:	stp	x20, x19, [sp, #64]
    d5c8:	add	x29, sp, #0x20
    d5cc:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    d5d0:	ldr	x20, [x20, #4008]
    d5d4:	mov	x8, x2
    d5d8:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    d5dc:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    d5e0:	mov	x19, x0
    d5e4:	add	x2, x2, #0x77b
    d5e8:	add	x3, x3, #0x6c8
    d5ec:	add	x4, sp, #0x10
    d5f0:	add	x5, sp, #0x8
    d5f4:	mov	x0, x1
    d5f8:	mov	x1, x8
    d5fc:	str	x20, [sp, #8]
    d600:	str	wzr, [sp, #4]
    d604:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    d608:	cbz	w0, d8e0 <PyInit__decimal@@Base+0x6e2c>
    d60c:	ldr	x8, [sp, #8]
    d610:	cmp	x8, x20
    d614:	b.eq	d658 <PyInit__decimal@@Base+0x6ba4>  // b.none
    d618:	ldr	x0, [x8, #8]
    d61c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    d620:	add	x8, x8, #0x4b8
    d624:	cmp	x0, x8
    d628:	b.eq	d694 <PyInit__decimal@@Base+0x6be0>  // b.none
    d62c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    d630:	add	x1, x1, #0x4b8
    d634:	bl	6900 <PyType_IsSubtype@plt>
    d638:	cbnz	w0, d694 <PyInit__decimal@@Base+0x6be0>
    d63c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    d640:	ldr	x8, [x8, #3936]
    d644:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    d648:	add	x1, x1, #0x631
    d64c:	ldr	x0, [x8]
    d650:	bl	6590 <PyErr_SetString@plt>
    d654:	b	d8e0 <PyInit__decimal@@Base+0x6e2c>
    d658:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    d65c:	ldr	x0, [x21, #1400]
    d660:	sub	x2, x29, #0x8
    d664:	mov	x1, xzr
    d668:	bl	6680 <PyContextVar_Get@plt>
    d66c:	tbnz	w0, #31, d914 <PyInit__decimal@@Base+0x6e60>
    d670:	ldur	x20, [x29, #-8]
    d674:	cbz	x20, d828 <PyInit__decimal@@Base+0x6d74>
    d678:	str	x20, [sp, #8]
    d67c:	ldr	x8, [x20]
    d680:	subs	x8, x8, #0x1
    d684:	str	x8, [x20]
    d688:	b.ne	d694 <PyInit__decimal@@Base+0x6be0>  // b.any
    d68c:	mov	x0, x20
    d690:	bl	6510 <_Py_Dealloc@plt>
    d694:	ldr	x0, [x19, #8]
    d698:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    d69c:	add	x21, x21, #0x318
    d6a0:	cmp	x0, x21
    d6a4:	b.eq	d6bc <PyInit__decimal@@Base+0x6c08>  // b.none
    d6a8:	ldr	x20, [sp, #8]
    d6ac:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    d6b0:	add	x1, x1, #0x318
    d6b4:	bl	6900 <PyType_IsSubtype@plt>
    d6b8:	cbz	w0, d7d0 <PyInit__decimal@@Base+0x6d1c>
    d6bc:	ldr	x8, [x19]
    d6c0:	add	x8, x8, #0x1
    d6c4:	str	x8, [x19]
    d6c8:	ldr	x20, [sp, #16]
    d6cc:	ldr	x0, [x20, #8]
    d6d0:	cmp	x0, x21
    d6d4:	b.eq	d6ec <PyInit__decimal@@Base+0x6c38>  // b.none
    d6d8:	ldr	x21, [sp, #8]
    d6dc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    d6e0:	add	x1, x1, #0x318
    d6e4:	bl	6900 <PyType_IsSubtype@plt>
    d6e8:	cbz	w0, d7fc <PyInit__decimal@@Base+0x6d48>
    d6ec:	ldr	x8, [x20]
    d6f0:	add	x8, x8, #0x1
    d6f4:	str	x8, [x20]
    d6f8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d6fc:	add	x0, x0, #0x318
    d700:	bl	6890 <_PyObject_New@plt>
    d704:	cbz	x0, d7a0 <PyInit__decimal@@Base+0x6cec>
    d708:	mov	w8, #0x30                  	// #48
    d70c:	mov	x21, x0
    d710:	strb	w8, [x0, #24]!
    d714:	mov	x9, #0xffffffffffffffff    	// #-1
    d718:	mov	w10, #0x4                   	// #4
    d71c:	add	x8, x0, #0x30
    d720:	stur	x9, [x0, #-8]
    d724:	stp	xzr, xzr, [x0, #8]
    d728:	stp	xzr, x10, [x0, #24]
    d72c:	str	x8, [x0, #40]
    d730:	ldr	x8, [sp, #8]
    d734:	add	x1, x19, #0x18
    d738:	add	x2, x20, #0x18
    d73c:	add	x4, sp, #0x4
    d740:	add	x3, x8, #0x10
    d744:	bl	2ee3c <PyInit__decimal@@Base+0x28388>
    d748:	ldr	x8, [x19]
    d74c:	subs	x8, x8, #0x1
    d750:	str	x8, [x19]
    d754:	b.ne	d760 <PyInit__decimal@@Base+0x6cac>  // b.any
    d758:	mov	x0, x19
    d75c:	bl	6510 <_Py_Dealloc@plt>
    d760:	ldr	x8, [x20]
    d764:	subs	x8, x8, #0x1
    d768:	str	x8, [x20]
    d76c:	b.ne	d778 <PyInit__decimal@@Base+0x6cc4>  // b.any
    d770:	mov	x0, x20
    d774:	bl	6510 <_Py_Dealloc@plt>
    d778:	ldr	x0, [sp, #8]
    d77c:	ldr	w1, [sp, #4]
    d780:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    d784:	cbz	w0, d8e4 <PyInit__decimal@@Base+0x6e30>
    d788:	ldr	x8, [x21]
    d78c:	subs	x8, x8, #0x1
    d790:	str	x8, [x21]
    d794:	b.ne	d8e0 <PyInit__decimal@@Base+0x6e2c>  // b.any
    d798:	mov	x0, x21
    d79c:	b	d8dc <PyInit__decimal@@Base+0x6e28>
    d7a0:	ldr	x8, [x19]
    d7a4:	subs	x8, x8, #0x1
    d7a8:	str	x8, [x19]
    d7ac:	b.ne	d7b8 <PyInit__decimal@@Base+0x6d04>  // b.any
    d7b0:	mov	x0, x19
    d7b4:	bl	6510 <_Py_Dealloc@plt>
    d7b8:	ldr	x8, [x20]
    d7bc:	subs	x8, x8, #0x1
    d7c0:	str	x8, [x20]
    d7c4:	b.ne	d8e0 <PyInit__decimal@@Base+0x6e2c>  // b.any
    d7c8:	mov	x0, x20
    d7cc:	b	d8dc <PyInit__decimal@@Base+0x6e28>
    d7d0:	ldr	x8, [x19, #8]
    d7d4:	ldrb	w9, [x8, #171]
    d7d8:	tbnz	w9, #0, d88c <PyInit__decimal@@Base+0x6dd8>
    d7dc:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    d7e0:	ldr	x9, [x9, #3936]
    d7e4:	ldr	x2, [x8, #24]
    d7e8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    d7ec:	add	x1, x1, #0x263
    d7f0:	ldr	x0, [x9]
    d7f4:	bl	6950 <PyErr_Format@plt>
    d7f8:	b	d8e0 <PyInit__decimal@@Base+0x6e2c>
    d7fc:	ldr	x8, [x20, #8]
    d800:	ldrb	w9, [x8, #171]
    d804:	tbnz	w9, #0, d8ac <PyInit__decimal@@Base+0x6df8>
    d808:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    d80c:	ldr	x9, [x9, #3936]
    d810:	ldr	x2, [x8, #24]
    d814:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    d818:	add	x1, x1, #0x263
    d81c:	ldr	x0, [x9]
    d820:	bl	6950 <PyErr_Format@plt>
    d824:	b	d8c8 <PyInit__decimal@@Base+0x6e14>
    d828:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    d82c:	ldr	x22, [x8, #1496]
    d830:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d834:	add	x0, x0, #0x4b8
    d838:	mov	x1, xzr
    d83c:	bl	6780 <PyObject_CallObject@plt>
    d840:	cbz	x0, d914 <PyInit__decimal@@Base+0x6e60>
    d844:	ldp	q1, q0, [x22, #32]
    d848:	ldr	q2, [x22, #16]
    d84c:	mov	x20, x0
    d850:	mov	x1, x20
    d854:	stp	q1, q0, [x0, #32]
    d858:	str	q2, [x0, #16]
    d85c:	ldr	w8, [x22, #80]
    d860:	stp	wzr, wzr, [x0, #44]
    d864:	str	w8, [x0, #80]
    d868:	ldr	x0, [x21, #1400]
    d86c:	bl	65c0 <PyContextVar_Set@plt>
    d870:	cbz	x0, d8fc <PyInit__decimal@@Base+0x6e48>
    d874:	ldr	x8, [x0]
    d878:	subs	x8, x8, #0x1
    d87c:	str	x8, [x0]
    d880:	b.ne	d678 <PyInit__decimal@@Base+0x6bc4>  // b.any
    d884:	bl	6510 <_Py_Dealloc@plt>
    d888:	b	d678 <PyInit__decimal@@Base+0x6bc4>
    d88c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d890:	add	x0, x0, #0x318
    d894:	mov	x1, x19
    d898:	mov	x2, x20
    d89c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    d8a0:	mov	x19, x0
    d8a4:	cbnz	x0, d6c8 <PyInit__decimal@@Base+0x6c14>
    d8a8:	b	d8e0 <PyInit__decimal@@Base+0x6e2c>
    d8ac:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    d8b0:	add	x0, x0, #0x318
    d8b4:	mov	x1, x20
    d8b8:	mov	x2, x21
    d8bc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    d8c0:	mov	x20, x0
    d8c4:	cbnz	x0, d6f8 <PyInit__decimal@@Base+0x6c44>
    d8c8:	ldr	x8, [x19]
    d8cc:	subs	x8, x8, #0x1
    d8d0:	str	x8, [x19]
    d8d4:	b.ne	d8e0 <PyInit__decimal@@Base+0x6e2c>  // b.any
    d8d8:	mov	x0, x19
    d8dc:	bl	6510 <_Py_Dealloc@plt>
    d8e0:	mov	x21, xzr
    d8e4:	mov	x0, x21
    d8e8:	ldp	x20, x19, [sp, #64]
    d8ec:	ldp	x22, x21, [sp, #48]
    d8f0:	ldp	x29, x30, [sp, #32]
    d8f4:	add	sp, sp, #0x50
    d8f8:	ret
    d8fc:	ldr	x8, [x20]
    d900:	subs	x8, x8, #0x1
    d904:	str	x8, [x20]
    d908:	b.ne	d914 <PyInit__decimal@@Base+0x6e60>  // b.any
    d90c:	mov	x0, x20
    d910:	bl	6510 <_Py_Dealloc@plt>
    d914:	mov	x21, xzr
    d918:	str	xzr, [sp, #8]
    d91c:	b	d8e4 <PyInit__decimal@@Base+0x6e30>
    d920:	sub	sp, sp, #0x90
    d924:	stp	x29, x30, [sp, #80]
    d928:	str	x23, [sp, #96]
    d92c:	stp	x22, x21, [sp, #112]
    d930:	stp	x20, x19, [sp, #128]
    d934:	add	x29, sp, #0x50
    d938:	adrp	x21, 50000 <PyInit__decimal@@Base+0x4954c>
    d93c:	ldr	x21, [x21, #4008]
    d940:	mov	x8, x2
    d944:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    d948:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    d94c:	mov	x19, x0
    d950:	add	x2, x2, #0x74b
    d954:	add	x3, x3, #0x6e0
    d958:	sub	x4, x29, #0x10
    d95c:	add	x5, x29, #0x18
    d960:	sub	x6, x29, #0x8
    d964:	mov	x0, x1
    d968:	mov	x1, x8
    d96c:	str	x21, [x29, #24]
    d970:	stur	x21, [x29, #-8]
    d974:	stur	wzr, [x29, #-20]
    d978:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    d97c:	cbz	w0, dc9c <PyInit__decimal@@Base+0x71e8>
    d980:	ldur	x8, [x29, #-8]
    d984:	cmp	x8, x21
    d988:	b.eq	d9c4 <PyInit__decimal@@Base+0x6f10>  // b.none
    d98c:	ldr	x0, [x8, #8]
    d990:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    d994:	add	x8, x8, #0x4b8
    d998:	cmp	x0, x8
    d99c:	b.eq	da00 <PyInit__decimal@@Base+0x6f4c>  // b.none
    d9a0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    d9a4:	add	x1, x1, #0x4b8
    d9a8:	bl	6900 <PyType_IsSubtype@plt>
    d9ac:	cbnz	w0, da00 <PyInit__decimal@@Base+0x6f4c>
    d9b0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    d9b4:	ldr	x8, [x8, #3936]
    d9b8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    d9bc:	add	x1, x1, #0x631
    d9c0:	b	db80 <PyInit__decimal@@Base+0x70cc>
    d9c4:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
    d9c8:	ldr	x0, [x22, #1400]
    d9cc:	mov	x2, sp
    d9d0:	mov	x1, xzr
    d9d4:	bl	6680 <PyContextVar_Get@plt>
    d9d8:	tbnz	w0, #31, dcd4 <PyInit__decimal@@Base+0x7220>
    d9dc:	ldr	x20, [sp]
    d9e0:	cbz	x20, dbb8 <PyInit__decimal@@Base+0x7104>
    d9e4:	stur	x20, [x29, #-8]
    d9e8:	ldr	x8, [x20]
    d9ec:	subs	x8, x8, #0x1
    d9f0:	str	x8, [x20]
    d9f4:	b.ne	da00 <PyInit__decimal@@Base+0x6f4c>  // b.any
    d9f8:	mov	x0, x20
    d9fc:	bl	6510 <_Py_Dealloc@plt>
    da00:	ldur	x20, [x29, #-8]
    da04:	ldr	x0, [x29, #24]
    da08:	ldp	q0, q1, [x20, #16]
    da0c:	ldr	q2, [x20, #48]
    da10:	cmp	x0, x21
    da14:	stp	q0, q1, [sp]
    da18:	str	q2, [sp, #32]
    da1c:	b.eq	da3c <PyInit__decimal@@Base+0x6f88>  // b.none
    da20:	bl	12790 <PyInit__decimal@@Base+0xbcdc>
    da24:	tbnz	w0, #31, dc9c <PyInit__decimal@@Base+0x71e8>
    da28:	mov	w1, w0
    da2c:	mov	x0, sp
    da30:	bl	1c9d8 <PyInit__decimal@@Base+0x15f24>
    da34:	cbz	w0, db70 <PyInit__decimal@@Base+0x70bc>
    da38:	ldur	x20, [x29, #-8]
    da3c:	ldr	x0, [x19, #8]
    da40:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    da44:	add	x21, x21, #0x318
    da48:	cmp	x0, x21
    da4c:	b.eq	da60 <PyInit__decimal@@Base+0x6fac>  // b.none
    da50:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    da54:	add	x1, x1, #0x318
    da58:	bl	6900 <PyType_IsSubtype@plt>
    da5c:	cbz	w0, db8c <PyInit__decimal@@Base+0x70d8>
    da60:	ldr	x8, [x19]
    da64:	add	x8, x8, #0x1
    da68:	str	x8, [x19]
    da6c:	ldur	x20, [x29, #-16]
    da70:	ldr	x0, [x20, #8]
    da74:	cmp	x0, x21
    da78:	b.eq	da90 <PyInit__decimal@@Base+0x6fdc>  // b.none
    da7c:	ldur	x21, [x29, #-8]
    da80:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    da84:	add	x1, x1, #0x318
    da88:	bl	6900 <PyType_IsSubtype@plt>
    da8c:	cbz	w0, dc1c <PyInit__decimal@@Base+0x7168>
    da90:	ldr	x8, [x20]
    da94:	add	x8, x8, #0x1
    da98:	str	x8, [x20]
    da9c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    daa0:	add	x0, x0, #0x318
    daa4:	bl	6890 <_PyObject_New@plt>
    daa8:	cbz	x0, db40 <PyInit__decimal@@Base+0x708c>
    daac:	mov	w8, #0x30                  	// #48
    dab0:	mov	x21, x0
    dab4:	strb	w8, [x0, #24]!
    dab8:	mov	x9, #0xffffffffffffffff    	// #-1
    dabc:	mov	w10, #0x4                   	// #4
    dac0:	add	x1, x19, #0x18
    dac4:	add	x8, x0, #0x30
    dac8:	add	x2, x20, #0x18
    dacc:	mov	x3, sp
    dad0:	sub	x4, x29, #0x14
    dad4:	stur	x9, [x0, #-8]
    dad8:	stp	xzr, xzr, [x0, #8]
    dadc:	stp	xzr, x10, [x0, #24]
    dae0:	str	x8, [x0, #40]
    dae4:	bl	3153c <PyInit__decimal@@Base+0x2aa88>
    dae8:	ldr	x8, [x19]
    daec:	subs	x8, x8, #0x1
    daf0:	str	x8, [x19]
    daf4:	b.ne	db00 <PyInit__decimal@@Base+0x704c>  // b.any
    daf8:	mov	x0, x19
    dafc:	bl	6510 <_Py_Dealloc@plt>
    db00:	ldr	x8, [x20]
    db04:	subs	x8, x8, #0x1
    db08:	str	x8, [x20]
    db0c:	b.ne	db18 <PyInit__decimal@@Base+0x7064>  // b.any
    db10:	mov	x0, x20
    db14:	bl	6510 <_Py_Dealloc@plt>
    db18:	ldur	x0, [x29, #-8]
    db1c:	ldur	w1, [x29, #-20]
    db20:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    db24:	cbz	w0, dca0 <PyInit__decimal@@Base+0x71ec>
    db28:	ldr	x8, [x21]
    db2c:	subs	x8, x8, #0x1
    db30:	str	x8, [x21]
    db34:	b.ne	dc9c <PyInit__decimal@@Base+0x71e8>  // b.any
    db38:	mov	x0, x21
    db3c:	b	dc98 <PyInit__decimal@@Base+0x71e4>
    db40:	ldr	x8, [x19]
    db44:	subs	x8, x8, #0x1
    db48:	str	x8, [x19]
    db4c:	b.ne	db58 <PyInit__decimal@@Base+0x70a4>  // b.any
    db50:	mov	x0, x19
    db54:	bl	6510 <_Py_Dealloc@plt>
    db58:	ldr	x8, [x20]
    db5c:	subs	x8, x8, #0x1
    db60:	str	x8, [x20]
    db64:	b.ne	dc9c <PyInit__decimal@@Base+0x71e8>  // b.any
    db68:	mov	x0, x20
    db6c:	b	dc98 <PyInit__decimal@@Base+0x71e4>
    db70:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    db74:	ldr	x8, [x8, #3920]
    db78:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    db7c:	add	x1, x1, #0x750
    db80:	ldr	x0, [x8]
    db84:	bl	6590 <PyErr_SetString@plt>
    db88:	b	dc9c <PyInit__decimal@@Base+0x71e8>
    db8c:	ldr	x8, [x19, #8]
    db90:	ldrb	w9, [x8, #171]
    db94:	tbnz	w9, #0, dc48 <PyInit__decimal@@Base+0x7194>
    db98:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    db9c:	ldr	x9, [x9, #3936]
    dba0:	ldr	x2, [x8, #24]
    dba4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    dba8:	add	x1, x1, #0x263
    dbac:	ldr	x0, [x9]
    dbb0:	bl	6950 <PyErr_Format@plt>
    dbb4:	b	dc9c <PyInit__decimal@@Base+0x71e8>
    dbb8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    dbbc:	ldr	x23, [x8, #1496]
    dbc0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    dbc4:	add	x0, x0, #0x4b8
    dbc8:	mov	x1, xzr
    dbcc:	bl	6780 <PyObject_CallObject@plt>
    dbd0:	cbz	x0, dcd4 <PyInit__decimal@@Base+0x7220>
    dbd4:	ldp	q1, q0, [x23, #32]
    dbd8:	ldr	q2, [x23, #16]
    dbdc:	mov	x20, x0
    dbe0:	mov	x1, x20
    dbe4:	stp	q1, q0, [x0, #32]
    dbe8:	str	q2, [x0, #16]
    dbec:	ldr	w8, [x23, #80]
    dbf0:	stp	wzr, wzr, [x0, #44]
    dbf4:	str	w8, [x0, #80]
    dbf8:	ldr	x0, [x22, #1400]
    dbfc:	bl	65c0 <PyContextVar_Set@plt>
    dc00:	cbz	x0, dcbc <PyInit__decimal@@Base+0x7208>
    dc04:	ldr	x8, [x0]
    dc08:	subs	x8, x8, #0x1
    dc0c:	str	x8, [x0]
    dc10:	b.ne	d9e4 <PyInit__decimal@@Base+0x6f30>  // b.any
    dc14:	bl	6510 <_Py_Dealloc@plt>
    dc18:	b	d9e4 <PyInit__decimal@@Base+0x6f30>
    dc1c:	ldr	x8, [x20, #8]
    dc20:	ldrb	w9, [x8, #171]
    dc24:	tbnz	w9, #0, dc68 <PyInit__decimal@@Base+0x71b4>
    dc28:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    dc2c:	ldr	x9, [x9, #3936]
    dc30:	ldr	x2, [x8, #24]
    dc34:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    dc38:	add	x1, x1, #0x263
    dc3c:	ldr	x0, [x9]
    dc40:	bl	6950 <PyErr_Format@plt>
    dc44:	b	dc84 <PyInit__decimal@@Base+0x71d0>
    dc48:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    dc4c:	add	x0, x0, #0x318
    dc50:	mov	x1, x19
    dc54:	mov	x2, x20
    dc58:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    dc5c:	mov	x19, x0
    dc60:	cbnz	x0, da6c <PyInit__decimal@@Base+0x6fb8>
    dc64:	b	dc9c <PyInit__decimal@@Base+0x71e8>
    dc68:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    dc6c:	add	x0, x0, #0x318
    dc70:	mov	x1, x20
    dc74:	mov	x2, x21
    dc78:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    dc7c:	mov	x20, x0
    dc80:	cbnz	x0, da9c <PyInit__decimal@@Base+0x6fe8>
    dc84:	ldr	x8, [x19]
    dc88:	subs	x8, x8, #0x1
    dc8c:	str	x8, [x19]
    dc90:	b.ne	dc9c <PyInit__decimal@@Base+0x71e8>  // b.any
    dc94:	mov	x0, x19
    dc98:	bl	6510 <_Py_Dealloc@plt>
    dc9c:	mov	x21, xzr
    dca0:	mov	x0, x21
    dca4:	ldp	x20, x19, [sp, #128]
    dca8:	ldp	x22, x21, [sp, #112]
    dcac:	ldr	x23, [sp, #96]
    dcb0:	ldp	x29, x30, [sp, #80]
    dcb4:	add	sp, sp, #0x90
    dcb8:	ret
    dcbc:	ldr	x8, [x20]
    dcc0:	subs	x8, x8, #0x1
    dcc4:	str	x8, [x20]
    dcc8:	b.ne	dcd4 <PyInit__decimal@@Base+0x7220>  // b.any
    dccc:	mov	x0, x20
    dcd0:	bl	6510 <_Py_Dealloc@plt>
    dcd4:	mov	x21, xzr
    dcd8:	stur	xzr, [x29, #-8]
    dcdc:	b	dca0 <PyInit__decimal@@Base+0x71ec>
    dce0:	sub	sp, sp, #0x50
    dce4:	stp	x29, x30, [sp, #32]
    dce8:	stp	x22, x21, [sp, #48]
    dcec:	stp	x20, x19, [sp, #64]
    dcf0:	add	x29, sp, #0x20
    dcf4:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    dcf8:	ldr	x20, [x20, #4008]
    dcfc:	mov	x8, x2
    dd00:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    dd04:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    dd08:	mov	x19, x0
    dd0c:	add	x2, x2, #0x77b
    dd10:	add	x3, x3, #0x700
    dd14:	add	x4, sp, #0x10
    dd18:	add	x5, sp, #0x8
    dd1c:	mov	x0, x1
    dd20:	mov	x1, x8
    dd24:	str	x20, [sp, #8]
    dd28:	str	wzr, [sp, #4]
    dd2c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    dd30:	cbz	w0, e008 <PyInit__decimal@@Base+0x7554>
    dd34:	ldr	x8, [sp, #8]
    dd38:	cmp	x8, x20
    dd3c:	b.eq	dd80 <PyInit__decimal@@Base+0x72cc>  // b.none
    dd40:	ldr	x0, [x8, #8]
    dd44:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    dd48:	add	x8, x8, #0x4b8
    dd4c:	cmp	x0, x8
    dd50:	b.eq	ddbc <PyInit__decimal@@Base+0x7308>  // b.none
    dd54:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    dd58:	add	x1, x1, #0x4b8
    dd5c:	bl	6900 <PyType_IsSubtype@plt>
    dd60:	cbnz	w0, ddbc <PyInit__decimal@@Base+0x7308>
    dd64:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    dd68:	ldr	x8, [x8, #3936]
    dd6c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    dd70:	add	x1, x1, #0x631
    dd74:	ldr	x0, [x8]
    dd78:	bl	6590 <PyErr_SetString@plt>
    dd7c:	b	e008 <PyInit__decimal@@Base+0x7554>
    dd80:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    dd84:	ldr	x0, [x21, #1400]
    dd88:	sub	x2, x29, #0x8
    dd8c:	mov	x1, xzr
    dd90:	bl	6680 <PyContextVar_Get@plt>
    dd94:	tbnz	w0, #31, e03c <PyInit__decimal@@Base+0x7588>
    dd98:	ldur	x20, [x29, #-8]
    dd9c:	cbz	x20, df50 <PyInit__decimal@@Base+0x749c>
    dda0:	str	x20, [sp, #8]
    dda4:	ldr	x8, [x20]
    dda8:	subs	x8, x8, #0x1
    ddac:	str	x8, [x20]
    ddb0:	b.ne	ddbc <PyInit__decimal@@Base+0x7308>  // b.any
    ddb4:	mov	x0, x20
    ddb8:	bl	6510 <_Py_Dealloc@plt>
    ddbc:	ldr	x0, [x19, #8]
    ddc0:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    ddc4:	add	x21, x21, #0x318
    ddc8:	cmp	x0, x21
    ddcc:	b.eq	dde4 <PyInit__decimal@@Base+0x7330>  // b.none
    ddd0:	ldr	x20, [sp, #8]
    ddd4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    ddd8:	add	x1, x1, #0x318
    dddc:	bl	6900 <PyType_IsSubtype@plt>
    dde0:	cbz	w0, def8 <PyInit__decimal@@Base+0x7444>
    dde4:	ldr	x8, [x19]
    dde8:	add	x8, x8, #0x1
    ddec:	str	x8, [x19]
    ddf0:	ldr	x20, [sp, #16]
    ddf4:	ldr	x0, [x20, #8]
    ddf8:	cmp	x0, x21
    ddfc:	b.eq	de14 <PyInit__decimal@@Base+0x7360>  // b.none
    de00:	ldr	x21, [sp, #8]
    de04:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    de08:	add	x1, x1, #0x318
    de0c:	bl	6900 <PyType_IsSubtype@plt>
    de10:	cbz	w0, df24 <PyInit__decimal@@Base+0x7470>
    de14:	ldr	x8, [x20]
    de18:	add	x8, x8, #0x1
    de1c:	str	x8, [x20]
    de20:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    de24:	add	x0, x0, #0x318
    de28:	bl	6890 <_PyObject_New@plt>
    de2c:	cbz	x0, dec8 <PyInit__decimal@@Base+0x7414>
    de30:	mov	w8, #0x30                  	// #48
    de34:	mov	x21, x0
    de38:	strb	w8, [x0, #24]!
    de3c:	mov	x9, #0xffffffffffffffff    	// #-1
    de40:	mov	w10, #0x4                   	// #4
    de44:	add	x8, x0, #0x30
    de48:	stur	x9, [x0, #-8]
    de4c:	stp	xzr, xzr, [x0, #8]
    de50:	stp	xzr, x10, [x0, #24]
    de54:	str	x8, [x0, #40]
    de58:	ldr	x8, [sp, #8]
    de5c:	add	x1, x19, #0x18
    de60:	add	x2, x20, #0x18
    de64:	add	x4, sp, #0x4
    de68:	add	x3, x8, #0x10
    de6c:	bl	31e70 <PyInit__decimal@@Base+0x2b3bc>
    de70:	ldr	x8, [x19]
    de74:	subs	x8, x8, #0x1
    de78:	str	x8, [x19]
    de7c:	b.ne	de88 <PyInit__decimal@@Base+0x73d4>  // b.any
    de80:	mov	x0, x19
    de84:	bl	6510 <_Py_Dealloc@plt>
    de88:	ldr	x8, [x20]
    de8c:	subs	x8, x8, #0x1
    de90:	str	x8, [x20]
    de94:	b.ne	dea0 <PyInit__decimal@@Base+0x73ec>  // b.any
    de98:	mov	x0, x20
    de9c:	bl	6510 <_Py_Dealloc@plt>
    dea0:	ldr	x0, [sp, #8]
    dea4:	ldr	w1, [sp, #4]
    dea8:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    deac:	cbz	w0, e00c <PyInit__decimal@@Base+0x7558>
    deb0:	ldr	x8, [x21]
    deb4:	subs	x8, x8, #0x1
    deb8:	str	x8, [x21]
    debc:	b.ne	e008 <PyInit__decimal@@Base+0x7554>  // b.any
    dec0:	mov	x0, x21
    dec4:	b	e004 <PyInit__decimal@@Base+0x7550>
    dec8:	ldr	x8, [x19]
    decc:	subs	x8, x8, #0x1
    ded0:	str	x8, [x19]
    ded4:	b.ne	dee0 <PyInit__decimal@@Base+0x742c>  // b.any
    ded8:	mov	x0, x19
    dedc:	bl	6510 <_Py_Dealloc@plt>
    dee0:	ldr	x8, [x20]
    dee4:	subs	x8, x8, #0x1
    dee8:	str	x8, [x20]
    deec:	b.ne	e008 <PyInit__decimal@@Base+0x7554>  // b.any
    def0:	mov	x0, x20
    def4:	b	e004 <PyInit__decimal@@Base+0x7550>
    def8:	ldr	x8, [x19, #8]
    defc:	ldrb	w9, [x8, #171]
    df00:	tbnz	w9, #0, dfb4 <PyInit__decimal@@Base+0x7500>
    df04:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    df08:	ldr	x9, [x9, #3936]
    df0c:	ldr	x2, [x8, #24]
    df10:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    df14:	add	x1, x1, #0x263
    df18:	ldr	x0, [x9]
    df1c:	bl	6950 <PyErr_Format@plt>
    df20:	b	e008 <PyInit__decimal@@Base+0x7554>
    df24:	ldr	x8, [x20, #8]
    df28:	ldrb	w9, [x8, #171]
    df2c:	tbnz	w9, #0, dfd4 <PyInit__decimal@@Base+0x7520>
    df30:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    df34:	ldr	x9, [x9, #3936]
    df38:	ldr	x2, [x8, #24]
    df3c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    df40:	add	x1, x1, #0x263
    df44:	ldr	x0, [x9]
    df48:	bl	6950 <PyErr_Format@plt>
    df4c:	b	dff0 <PyInit__decimal@@Base+0x753c>
    df50:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    df54:	ldr	x22, [x8, #1496]
    df58:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    df5c:	add	x0, x0, #0x4b8
    df60:	mov	x1, xzr
    df64:	bl	6780 <PyObject_CallObject@plt>
    df68:	cbz	x0, e03c <PyInit__decimal@@Base+0x7588>
    df6c:	ldp	q1, q0, [x22, #32]
    df70:	ldr	q2, [x22, #16]
    df74:	mov	x20, x0
    df78:	mov	x1, x20
    df7c:	stp	q1, q0, [x0, #32]
    df80:	str	q2, [x0, #16]
    df84:	ldr	w8, [x22, #80]
    df88:	stp	wzr, wzr, [x0, #44]
    df8c:	str	w8, [x0, #80]
    df90:	ldr	x0, [x21, #1400]
    df94:	bl	65c0 <PyContextVar_Set@plt>
    df98:	cbz	x0, e024 <PyInit__decimal@@Base+0x7570>
    df9c:	ldr	x8, [x0]
    dfa0:	subs	x8, x8, #0x1
    dfa4:	str	x8, [x0]
    dfa8:	b.ne	dda0 <PyInit__decimal@@Base+0x72ec>  // b.any
    dfac:	bl	6510 <_Py_Dealloc@plt>
    dfb0:	b	dda0 <PyInit__decimal@@Base+0x72ec>
    dfb4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    dfb8:	add	x0, x0, #0x318
    dfbc:	mov	x1, x19
    dfc0:	mov	x2, x20
    dfc4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    dfc8:	mov	x19, x0
    dfcc:	cbnz	x0, ddf0 <PyInit__decimal@@Base+0x733c>
    dfd0:	b	e008 <PyInit__decimal@@Base+0x7554>
    dfd4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    dfd8:	add	x0, x0, #0x318
    dfdc:	mov	x1, x20
    dfe0:	mov	x2, x21
    dfe4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    dfe8:	mov	x20, x0
    dfec:	cbnz	x0, de20 <PyInit__decimal@@Base+0x736c>
    dff0:	ldr	x8, [x19]
    dff4:	subs	x8, x8, #0x1
    dff8:	str	x8, [x19]
    dffc:	b.ne	e008 <PyInit__decimal@@Base+0x7554>  // b.any
    e000:	mov	x0, x19
    e004:	bl	6510 <_Py_Dealloc@plt>
    e008:	mov	x21, xzr
    e00c:	mov	x0, x21
    e010:	ldp	x20, x19, [sp, #64]
    e014:	ldp	x22, x21, [sp, #48]
    e018:	ldp	x29, x30, [sp, #32]
    e01c:	add	sp, sp, #0x50
    e020:	ret
    e024:	ldr	x8, [x20]
    e028:	subs	x8, x8, #0x1
    e02c:	str	x8, [x20]
    e030:	b.ne	e03c <PyInit__decimal@@Base+0x7588>  // b.any
    e034:	mov	x0, x20
    e038:	bl	6510 <_Py_Dealloc@plt>
    e03c:	mov	x21, xzr
    e040:	str	xzr, [sp, #8]
    e044:	b	e00c <PyInit__decimal@@Base+0x7558>
    e048:	sub	sp, sp, #0x60
    e04c:	stp	x29, x30, [sp, #48]
    e050:	stp	x22, x21, [sp, #64]
    e054:	stp	x20, x19, [sp, #80]
    e058:	add	x29, sp, #0x30
    e05c:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    e060:	ldr	x20, [x20, #4008]
    e064:	mov	x8, x2
    e068:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    e06c:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    e070:	mov	x19, x0
    e074:	add	x2, x2, #0x77a
    e078:	add	x3, x3, #0x718
    e07c:	sub	x4, x29, #0x10
    e080:	add	x5, sp, #0x18
    e084:	add	x6, sp, #0x10
    e088:	mov	x0, x1
    e08c:	mov	x1, x8
    e090:	str	x20, [sp, #16]
    e094:	str	wzr, [sp, #12]
    e098:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    e09c:	cbz	w0, e450 <PyInit__decimal@@Base+0x799c>
    e0a0:	ldr	x8, [sp, #16]
    e0a4:	cmp	x8, x20
    e0a8:	b.eq	e0ec <PyInit__decimal@@Base+0x7638>  // b.none
    e0ac:	ldr	x0, [x8, #8]
    e0b0:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    e0b4:	add	x8, x8, #0x4b8
    e0b8:	cmp	x0, x8
    e0bc:	b.eq	e128 <PyInit__decimal@@Base+0x7674>  // b.none
    e0c0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    e0c4:	add	x1, x1, #0x4b8
    e0c8:	bl	6900 <PyType_IsSubtype@plt>
    e0cc:	cbnz	w0, e128 <PyInit__decimal@@Base+0x7674>
    e0d0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e0d4:	ldr	x8, [x8, #3936]
    e0d8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    e0dc:	add	x1, x1, #0x631
    e0e0:	ldr	x0, [x8]
    e0e4:	bl	6590 <PyErr_SetString@plt>
    e0e8:	b	e450 <PyInit__decimal@@Base+0x799c>
    e0ec:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    e0f0:	ldr	x0, [x21, #1400]
    e0f4:	sub	x2, x29, #0x8
    e0f8:	mov	x1, xzr
    e0fc:	bl	6680 <PyContextVar_Get@plt>
    e100:	tbnz	w0, #31, e484 <PyInit__decimal@@Base+0x79d0>
    e104:	ldur	x20, [x29, #-8]
    e108:	cbz	x20, e34c <PyInit__decimal@@Base+0x7898>
    e10c:	str	x20, [sp, #16]
    e110:	ldr	x8, [x20]
    e114:	subs	x8, x8, #0x1
    e118:	str	x8, [x20]
    e11c:	b.ne	e128 <PyInit__decimal@@Base+0x7674>  // b.any
    e120:	mov	x0, x20
    e124:	bl	6510 <_Py_Dealloc@plt>
    e128:	ldr	x0, [x19, #8]
    e12c:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
    e130:	add	x22, x22, #0x318
    e134:	cmp	x0, x22
    e138:	b.eq	e150 <PyInit__decimal@@Base+0x769c>  // b.none
    e13c:	ldr	x20, [sp, #16]
    e140:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    e144:	add	x1, x1, #0x318
    e148:	bl	6900 <PyType_IsSubtype@plt>
    e14c:	cbz	w0, e280 <PyInit__decimal@@Base+0x77cc>
    e150:	ldr	x8, [x19]
    e154:	add	x8, x8, #0x1
    e158:	str	x8, [x19]
    e15c:	ldur	x20, [x29, #-16]
    e160:	ldr	x0, [x20, #8]
    e164:	cmp	x0, x22
    e168:	b.eq	e180 <PyInit__decimal@@Base+0x76cc>  // b.none
    e16c:	ldr	x21, [sp, #16]
    e170:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    e174:	add	x1, x1, #0x318
    e178:	bl	6900 <PyType_IsSubtype@plt>
    e17c:	cbz	w0, e2f4 <PyInit__decimal@@Base+0x7840>
    e180:	ldr	x8, [x20]
    e184:	add	x8, x8, #0x1
    e188:	str	x8, [x20]
    e18c:	ldr	x21, [sp, #24]
    e190:	ldr	x0, [x21, #8]
    e194:	cmp	x0, x22
    e198:	b.eq	e1b0 <PyInit__decimal@@Base+0x76fc>  // b.none
    e19c:	ldr	x22, [sp, #16]
    e1a0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    e1a4:	add	x1, x1, #0x318
    e1a8:	bl	6900 <PyType_IsSubtype@plt>
    e1ac:	cbz	w0, e320 <PyInit__decimal@@Base+0x786c>
    e1b0:	ldr	x8, [x21]
    e1b4:	add	x8, x8, #0x1
    e1b8:	str	x8, [x21]
    e1bc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    e1c0:	add	x0, x0, #0x318
    e1c4:	bl	6890 <_PyObject_New@plt>
    e1c8:	cbz	x0, e2ac <PyInit__decimal@@Base+0x77f8>
    e1cc:	mov	w8, #0x30                  	// #48
    e1d0:	mov	x22, x0
    e1d4:	strb	w8, [x0, #24]!
    e1d8:	mov	x9, #0xffffffffffffffff    	// #-1
    e1dc:	mov	w10, #0x4                   	// #4
    e1e0:	add	x8, x0, #0x30
    e1e4:	stur	x9, [x0, #-8]
    e1e8:	stp	xzr, xzr, [x0, #8]
    e1ec:	stp	xzr, x10, [x0, #24]
    e1f0:	str	x8, [x0, #40]
    e1f4:	ldr	x8, [sp, #16]
    e1f8:	add	x1, x19, #0x18
    e1fc:	add	x2, x20, #0x18
    e200:	add	x3, x21, #0x18
    e204:	add	x4, x8, #0x10
    e208:	add	x5, sp, #0xc
    e20c:	bl	2af24 <PyInit__decimal@@Base+0x24470>
    e210:	ldr	x8, [x19]
    e214:	subs	x8, x8, #0x1
    e218:	str	x8, [x19]
    e21c:	b.ne	e228 <PyInit__decimal@@Base+0x7774>  // b.any
    e220:	mov	x0, x19
    e224:	bl	6510 <_Py_Dealloc@plt>
    e228:	ldr	x8, [x20]
    e22c:	subs	x8, x8, #0x1
    e230:	str	x8, [x20]
    e234:	b.ne	e240 <PyInit__decimal@@Base+0x778c>  // b.any
    e238:	mov	x0, x20
    e23c:	bl	6510 <_Py_Dealloc@plt>
    e240:	ldr	x8, [x21]
    e244:	subs	x8, x8, #0x1
    e248:	str	x8, [x21]
    e24c:	b.ne	e258 <PyInit__decimal@@Base+0x77a4>  // b.any
    e250:	mov	x0, x21
    e254:	bl	6510 <_Py_Dealloc@plt>
    e258:	ldr	x0, [sp, #16]
    e25c:	ldr	w1, [sp, #12]
    e260:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    e264:	cbz	w0, e454 <PyInit__decimal@@Base+0x79a0>
    e268:	ldr	x8, [x22]
    e26c:	subs	x8, x8, #0x1
    e270:	str	x8, [x22]
    e274:	b.ne	e450 <PyInit__decimal@@Base+0x799c>  // b.any
    e278:	mov	x0, x22
    e27c:	b	e44c <PyInit__decimal@@Base+0x7998>
    e280:	ldr	x8, [x19, #8]
    e284:	ldrb	w9, [x8, #171]
    e288:	tbnz	w9, #0, e3b0 <PyInit__decimal@@Base+0x78fc>
    e28c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e290:	ldr	x9, [x9, #3936]
    e294:	ldr	x2, [x8, #24]
    e298:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    e29c:	add	x1, x1, #0x263
    e2a0:	ldr	x0, [x9]
    e2a4:	bl	6950 <PyErr_Format@plt>
    e2a8:	b	e450 <PyInit__decimal@@Base+0x799c>
    e2ac:	ldr	x8, [x19]
    e2b0:	subs	x8, x8, #0x1
    e2b4:	str	x8, [x19]
    e2b8:	b.ne	e2c4 <PyInit__decimal@@Base+0x7810>  // b.any
    e2bc:	mov	x0, x19
    e2c0:	bl	6510 <_Py_Dealloc@plt>
    e2c4:	ldr	x8, [x20]
    e2c8:	subs	x8, x8, #0x1
    e2cc:	str	x8, [x20]
    e2d0:	b.ne	e2dc <PyInit__decimal@@Base+0x7828>  // b.any
    e2d4:	mov	x0, x20
    e2d8:	bl	6510 <_Py_Dealloc@plt>
    e2dc:	ldr	x8, [x21]
    e2e0:	subs	x8, x8, #0x1
    e2e4:	str	x8, [x21]
    e2e8:	b.ne	e450 <PyInit__decimal@@Base+0x799c>  // b.any
    e2ec:	mov	x0, x21
    e2f0:	b	e44c <PyInit__decimal@@Base+0x7998>
    e2f4:	ldr	x8, [x20, #8]
    e2f8:	ldrb	w9, [x8, #171]
    e2fc:	tbnz	w9, #0, e3d0 <PyInit__decimal@@Base+0x791c>
    e300:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e304:	ldr	x9, [x9, #3936]
    e308:	ldr	x2, [x8, #24]
    e30c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    e310:	add	x1, x1, #0x263
    e314:	ldr	x0, [x9]
    e318:	bl	6950 <PyErr_Format@plt>
    e31c:	b	e3ec <PyInit__decimal@@Base+0x7938>
    e320:	ldr	x8, [x21, #8]
    e324:	ldrb	w9, [x8, #171]
    e328:	tbnz	w9, #0, e404 <PyInit__decimal@@Base+0x7950>
    e32c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e330:	ldr	x9, [x9, #3936]
    e334:	ldr	x2, [x8, #24]
    e338:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    e33c:	add	x1, x1, #0x263
    e340:	ldr	x0, [x9]
    e344:	bl	6950 <PyErr_Format@plt>
    e348:	b	e420 <PyInit__decimal@@Base+0x796c>
    e34c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    e350:	ldr	x22, [x8, #1496]
    e354:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    e358:	add	x0, x0, #0x4b8
    e35c:	mov	x1, xzr
    e360:	bl	6780 <PyObject_CallObject@plt>
    e364:	cbz	x0, e484 <PyInit__decimal@@Base+0x79d0>
    e368:	ldp	q1, q0, [x22, #32]
    e36c:	ldr	q2, [x22, #16]
    e370:	mov	x20, x0
    e374:	mov	x1, x20
    e378:	stp	q1, q0, [x0, #32]
    e37c:	str	q2, [x0, #16]
    e380:	ldr	w8, [x22, #80]
    e384:	stp	wzr, wzr, [x0, #44]
    e388:	str	w8, [x0, #80]
    e38c:	ldr	x0, [x21, #1400]
    e390:	bl	65c0 <PyContextVar_Set@plt>
    e394:	cbz	x0, e46c <PyInit__decimal@@Base+0x79b8>
    e398:	ldr	x8, [x0]
    e39c:	subs	x8, x8, #0x1
    e3a0:	str	x8, [x0]
    e3a4:	b.ne	e10c <PyInit__decimal@@Base+0x7658>  // b.any
    e3a8:	bl	6510 <_Py_Dealloc@plt>
    e3ac:	b	e10c <PyInit__decimal@@Base+0x7658>
    e3b0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    e3b4:	add	x0, x0, #0x318
    e3b8:	mov	x1, x19
    e3bc:	mov	x2, x20
    e3c0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    e3c4:	mov	x19, x0
    e3c8:	cbnz	x0, e15c <PyInit__decimal@@Base+0x76a8>
    e3cc:	b	e450 <PyInit__decimal@@Base+0x799c>
    e3d0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    e3d4:	add	x0, x0, #0x318
    e3d8:	mov	x1, x20
    e3dc:	mov	x2, x21
    e3e0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    e3e4:	mov	x20, x0
    e3e8:	cbnz	x0, e18c <PyInit__decimal@@Base+0x76d8>
    e3ec:	ldr	x8, [x19]
    e3f0:	subs	x8, x8, #0x1
    e3f4:	str	x8, [x19]
    e3f8:	b.ne	e450 <PyInit__decimal@@Base+0x799c>  // b.any
    e3fc:	mov	x0, x19
    e400:	b	e44c <PyInit__decimal@@Base+0x7998>
    e404:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    e408:	add	x0, x0, #0x318
    e40c:	mov	x1, x21
    e410:	mov	x2, x22
    e414:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    e418:	mov	x21, x0
    e41c:	cbnz	x0, e1bc <PyInit__decimal@@Base+0x7708>
    e420:	ldr	x8, [x19]
    e424:	subs	x8, x8, #0x1
    e428:	str	x8, [x19]
    e42c:	b.ne	e438 <PyInit__decimal@@Base+0x7984>  // b.any
    e430:	mov	x0, x19
    e434:	bl	6510 <_Py_Dealloc@plt>
    e438:	ldr	x8, [x20]
    e43c:	subs	x8, x8, #0x1
    e440:	str	x8, [x20]
    e444:	b.ne	e450 <PyInit__decimal@@Base+0x799c>  // b.any
    e448:	mov	x0, x20
    e44c:	bl	6510 <_Py_Dealloc@plt>
    e450:	mov	x22, xzr
    e454:	mov	x0, x22
    e458:	ldp	x20, x19, [sp, #80]
    e45c:	ldp	x22, x21, [sp, #64]
    e460:	ldp	x29, x30, [sp, #48]
    e464:	add	sp, sp, #0x60
    e468:	ret
    e46c:	ldr	x8, [x20]
    e470:	subs	x8, x8, #0x1
    e474:	str	x8, [x20]
    e478:	b.ne	e484 <PyInit__decimal@@Base+0x79d0>  // b.any
    e47c:	mov	x0, x20
    e480:	bl	6510 <_Py_Dealloc@plt>
    e484:	mov	x22, xzr
    e488:	str	xzr, [sp, #16]
    e48c:	b	e454 <PyInit__decimal@@Base+0x79a0>
    e490:	stp	x29, x30, [sp, #-16]!
    e494:	mov	x29, sp
    e498:	add	x0, x0, #0x18
    e49c:	bl	20bc0 <PyInit__decimal@@Base+0x1a10c>
    e4a0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e4a4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e4a8:	ldr	x8, [x8, #4024]
    e4ac:	ldr	x9, [x9, #3976]
    e4b0:	cmp	w0, #0x0
    e4b4:	csel	x0, x9, x8, eq  // eq = none
    e4b8:	ldr	x8, [x0]
    e4bc:	add	x8, x8, #0x1
    e4c0:	str	x8, [x0]
    e4c4:	ldp	x29, x30, [sp], #16
    e4c8:	ret
    e4cc:	stp	x29, x30, [sp, #-16]!
    e4d0:	mov	x29, sp
    e4d4:	add	x0, x0, #0x18
    e4d8:	bl	20bc8 <PyInit__decimal@@Base+0x1a114>
    e4dc:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e4e0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e4e4:	ldr	x8, [x8, #4024]
    e4e8:	ldr	x9, [x9, #3976]
    e4ec:	cmp	w0, #0x0
    e4f0:	csel	x0, x9, x8, eq  // eq = none
    e4f4:	ldr	x8, [x0]
    e4f8:	add	x8, x8, #0x1
    e4fc:	str	x8, [x0]
    e500:	ldp	x29, x30, [sp], #16
    e504:	ret
    e508:	stp	x29, x30, [sp, #-16]!
    e50c:	mov	x29, sp
    e510:	add	x0, x0, #0x18
    e514:	bl	20bd8 <PyInit__decimal@@Base+0x1a124>
    e518:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e51c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e520:	ldr	x8, [x8, #4024]
    e524:	ldr	x9, [x9, #3976]
    e528:	cmp	w0, #0x0
    e52c:	csel	x0, x9, x8, eq  // eq = none
    e530:	ldr	x8, [x0]
    e534:	add	x8, x8, #0x1
    e538:	str	x8, [x0]
    e53c:	ldp	x29, x30, [sp], #16
    e540:	ret
    e544:	stp	x29, x30, [sp, #-16]!
    e548:	mov	x29, sp
    e54c:	add	x0, x0, #0x18
    e550:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
    e554:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e558:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e55c:	ldr	x8, [x8, #4024]
    e560:	ldr	x9, [x9, #3976]
    e564:	cmp	w0, #0x0
    e568:	csel	x0, x9, x8, eq  // eq = none
    e56c:	ldr	x8, [x0]
    e570:	add	x8, x8, #0x1
    e574:	str	x8, [x0]
    e578:	ldp	x29, x30, [sp], #16
    e57c:	ret
    e580:	stp	x29, x30, [sp, #-16]!
    e584:	mov	x29, sp
    e588:	add	x0, x0, #0x18
    e58c:	bl	20c0c <PyInit__decimal@@Base+0x1a158>
    e590:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e594:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e598:	ldr	x8, [x8, #4024]
    e59c:	ldr	x9, [x9, #3976]
    e5a0:	cmp	w0, #0x0
    e5a4:	csel	x0, x9, x8, eq  // eq = none
    e5a8:	ldr	x8, [x0]
    e5ac:	add	x8, x8, #0x1
    e5b0:	str	x8, [x0]
    e5b4:	ldp	x29, x30, [sp], #16
    e5b8:	ret
    e5bc:	stp	x29, x30, [sp, #-16]!
    e5c0:	mov	x29, sp
    e5c4:	add	x0, x0, #0x18
    e5c8:	bl	20c24 <PyInit__decimal@@Base+0x1a170>
    e5cc:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e5d0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e5d4:	ldr	x8, [x8, #4024]
    e5d8:	ldr	x9, [x9, #3976]
    e5dc:	cmp	w0, #0x0
    e5e0:	csel	x0, x9, x8, eq  // eq = none
    e5e4:	ldr	x8, [x0]
    e5e8:	add	x8, x8, #0x1
    e5ec:	str	x8, [x0]
    e5f0:	ldp	x29, x30, [sp], #16
    e5f4:	ret
    e5f8:	stp	x29, x30, [sp, #-16]!
    e5fc:	mov	x29, sp
    e600:	add	x0, x0, #0x18
    e604:	bl	20c18 <PyInit__decimal@@Base+0x1a164>
    e608:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e60c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e610:	ldr	x8, [x8, #4024]
    e614:	ldr	x9, [x9, #3976]
    e618:	cmp	w0, #0x0
    e61c:	csel	x0, x9, x8, eq  // eq = none
    e620:	ldr	x8, [x0]
    e624:	add	x8, x8, #0x1
    e628:	str	x8, [x0]
    e62c:	ldp	x29, x30, [sp], #16
    e630:	ret
    e634:	stp	x29, x30, [sp, #-16]!
    e638:	mov	x29, sp
    e63c:	add	x0, x0, #0x18
    e640:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
    e644:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e648:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    e64c:	ldr	x8, [x8, #4024]
    e650:	ldr	x9, [x9, #3976]
    e654:	cmp	w0, #0x0
    e658:	csel	x0, x9, x8, eq  // eq = none
    e65c:	ldr	x8, [x0]
    e660:	add	x8, x8, #0x1
    e664:	str	x8, [x0]
    e668:	ldp	x29, x30, [sp], #16
    e66c:	ret
    e670:	sub	sp, sp, #0x40
    e674:	stp	x29, x30, [sp, #16]
    e678:	stp	x22, x21, [sp, #32]
    e67c:	stp	x20, x19, [sp, #48]
    e680:	add	x29, sp, #0x10
    e684:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    e688:	ldr	x20, [x20, #4008]
    e68c:	mov	x8, x2
    e690:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    e694:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    e698:	mov	x19, x0
    e69c:	add	x2, x2, #0x77c
    e6a0:	add	x3, x3, #0x738
    e6a4:	mov	x4, sp
    e6a8:	mov	x0, x1
    e6ac:	mov	x1, x8
    e6b0:	str	x20, [sp]
    e6b4:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    e6b8:	cbz	w0, e704 <PyInit__decimal@@Base+0x7c50>
    e6bc:	ldr	x8, [sp]
    e6c0:	cmp	x8, x20
    e6c4:	b.eq	e70c <PyInit__decimal@@Base+0x7c58>  // b.none
    e6c8:	ldr	x0, [x8, #8]
    e6cc:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    e6d0:	add	x8, x8, #0x4b8
    e6d4:	cmp	x0, x8
    e6d8:	b.eq	e748 <PyInit__decimal@@Base+0x7c94>  // b.none
    e6dc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    e6e0:	add	x1, x1, #0x4b8
    e6e4:	bl	6900 <PyType_IsSubtype@plt>
    e6e8:	cbnz	w0, e748 <PyInit__decimal@@Base+0x7c94>
    e6ec:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e6f0:	ldr	x8, [x8, #3936]
    e6f4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    e6f8:	add	x1, x1, #0x631
    e6fc:	ldr	x0, [x8]
    e700:	bl	6590 <PyErr_SetString@plt>
    e704:	mov	x0, xzr
    e708:	b	e804 <PyInit__decimal@@Base+0x7d50>
    e70c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    e710:	ldr	x0, [x21, #1400]
    e714:	add	x2, sp, #0x8
    e718:	mov	x1, xzr
    e71c:	bl	6680 <PyContextVar_Get@plt>
    e720:	tbnz	w0, #31, e7fc <PyInit__decimal@@Base+0x7d48>
    e724:	ldr	x20, [sp, #8]
    e728:	cbz	x20, e780 <PyInit__decimal@@Base+0x7ccc>
    e72c:	str	x20, [sp]
    e730:	ldr	x8, [x20]
    e734:	subs	x8, x8, #0x1
    e738:	str	x8, [x20]
    e73c:	b.ne	e748 <PyInit__decimal@@Base+0x7c94>  // b.any
    e740:	mov	x0, x20
    e744:	bl	6510 <_Py_Dealloc@plt>
    e748:	ldr	x8, [sp]
    e74c:	add	x0, x19, #0x18
    e750:	add	x1, x8, #0x10
    e754:	bl	20c88 <PyInit__decimal@@Base+0x1a1d4>
    e758:	cbz	w0, e768 <PyInit__decimal@@Base+0x7cb4>
    e75c:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
    e760:	ldr	x0, [x0, #4024]
    e764:	b	e770 <PyInit__decimal@@Base+0x7cbc>
    e768:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
    e76c:	ldr	x0, [x0, #3976]
    e770:	ldr	x8, [x0]
    e774:	add	x8, x8, #0x1
    e778:	str	x8, [x0]
    e77c:	b	e804 <PyInit__decimal@@Base+0x7d50>
    e780:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    e784:	ldr	x22, [x8, #1496]
    e788:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    e78c:	add	x0, x0, #0x4b8
    e790:	mov	x1, xzr
    e794:	bl	6780 <PyObject_CallObject@plt>
    e798:	cbz	x0, e7fc <PyInit__decimal@@Base+0x7d48>
    e79c:	ldp	q1, q0, [x22, #32]
    e7a0:	ldr	q2, [x22, #16]
    e7a4:	mov	x20, x0
    e7a8:	mov	x1, x20
    e7ac:	stp	q1, q0, [x0, #32]
    e7b0:	str	q2, [x0, #16]
    e7b4:	ldr	w8, [x22, #80]
    e7b8:	stp	wzr, wzr, [x0, #44]
    e7bc:	str	w8, [x0, #80]
    e7c0:	ldr	x0, [x21, #1400]
    e7c4:	bl	65c0 <PyContextVar_Set@plt>
    e7c8:	cbz	x0, e7e4 <PyInit__decimal@@Base+0x7d30>
    e7cc:	ldr	x8, [x0]
    e7d0:	subs	x8, x8, #0x1
    e7d4:	str	x8, [x0]
    e7d8:	b.ne	e72c <PyInit__decimal@@Base+0x7c78>  // b.any
    e7dc:	bl	6510 <_Py_Dealloc@plt>
    e7e0:	b	e72c <PyInit__decimal@@Base+0x7c78>
    e7e4:	ldr	x8, [x20]
    e7e8:	subs	x8, x8, #0x1
    e7ec:	str	x8, [x20]
    e7f0:	b.ne	e7fc <PyInit__decimal@@Base+0x7d48>  // b.any
    e7f4:	mov	x0, x20
    e7f8:	bl	6510 <_Py_Dealloc@plt>
    e7fc:	mov	x0, xzr
    e800:	str	xzr, [sp]
    e804:	ldp	x20, x19, [sp, #48]
    e808:	ldp	x22, x21, [sp, #32]
    e80c:	ldp	x29, x30, [sp, #16]
    e810:	add	sp, sp, #0x40
    e814:	ret
    e818:	sub	sp, sp, #0x40
    e81c:	stp	x29, x30, [sp, #16]
    e820:	stp	x22, x21, [sp, #32]
    e824:	stp	x20, x19, [sp, #48]
    e828:	add	x29, sp, #0x10
    e82c:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    e830:	ldr	x20, [x20, #4008]
    e834:	mov	x8, x2
    e838:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    e83c:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    e840:	mov	x19, x0
    e844:	add	x2, x2, #0x77c
    e848:	add	x3, x3, #0x748
    e84c:	mov	x4, sp
    e850:	mov	x0, x1
    e854:	mov	x1, x8
    e858:	str	x20, [sp]
    e85c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    e860:	cbz	w0, e8ac <PyInit__decimal@@Base+0x7df8>
    e864:	ldr	x8, [sp]
    e868:	cmp	x8, x20
    e86c:	b.eq	e8b4 <PyInit__decimal@@Base+0x7e00>  // b.none
    e870:	ldr	x0, [x8, #8]
    e874:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    e878:	add	x8, x8, #0x4b8
    e87c:	cmp	x0, x8
    e880:	b.eq	e8f0 <PyInit__decimal@@Base+0x7e3c>  // b.none
    e884:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    e888:	add	x1, x1, #0x4b8
    e88c:	bl	6900 <PyType_IsSubtype@plt>
    e890:	cbnz	w0, e8f0 <PyInit__decimal@@Base+0x7e3c>
    e894:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    e898:	ldr	x8, [x8, #3936]
    e89c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    e8a0:	add	x1, x1, #0x631
    e8a4:	ldr	x0, [x8]
    e8a8:	bl	6590 <PyErr_SetString@plt>
    e8ac:	mov	x0, xzr
    e8b0:	b	e9ac <PyInit__decimal@@Base+0x7ef8>
    e8b4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    e8b8:	ldr	x0, [x21, #1400]
    e8bc:	add	x2, sp, #0x8
    e8c0:	mov	x1, xzr
    e8c4:	bl	6680 <PyContextVar_Get@plt>
    e8c8:	tbnz	w0, #31, e9a4 <PyInit__decimal@@Base+0x7ef0>
    e8cc:	ldr	x20, [sp, #8]
    e8d0:	cbz	x20, e928 <PyInit__decimal@@Base+0x7e74>
    e8d4:	str	x20, [sp]
    e8d8:	ldr	x8, [x20]
    e8dc:	subs	x8, x8, #0x1
    e8e0:	str	x8, [x20]
    e8e4:	b.ne	e8f0 <PyInit__decimal@@Base+0x7e3c>  // b.any
    e8e8:	mov	x0, x20
    e8ec:	bl	6510 <_Py_Dealloc@plt>
    e8f0:	ldr	x8, [sp]
    e8f4:	add	x0, x19, #0x18
    e8f8:	add	x1, x8, #0x10
    e8fc:	bl	20ccc <PyInit__decimal@@Base+0x1a218>
    e900:	cbz	w0, e910 <PyInit__decimal@@Base+0x7e5c>
    e904:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
    e908:	ldr	x0, [x0, #4024]
    e90c:	b	e918 <PyInit__decimal@@Base+0x7e64>
    e910:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
    e914:	ldr	x0, [x0, #3976]
    e918:	ldr	x8, [x0]
    e91c:	add	x8, x8, #0x1
    e920:	str	x8, [x0]
    e924:	b	e9ac <PyInit__decimal@@Base+0x7ef8>
    e928:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    e92c:	ldr	x22, [x8, #1496]
    e930:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    e934:	add	x0, x0, #0x4b8
    e938:	mov	x1, xzr
    e93c:	bl	6780 <PyObject_CallObject@plt>
    e940:	cbz	x0, e9a4 <PyInit__decimal@@Base+0x7ef0>
    e944:	ldp	q1, q0, [x22, #32]
    e948:	ldr	q2, [x22, #16]
    e94c:	mov	x20, x0
    e950:	mov	x1, x20
    e954:	stp	q1, q0, [x0, #32]
    e958:	str	q2, [x0, #16]
    e95c:	ldr	w8, [x22, #80]
    e960:	stp	wzr, wzr, [x0, #44]
    e964:	str	w8, [x0, #80]
    e968:	ldr	x0, [x21, #1400]
    e96c:	bl	65c0 <PyContextVar_Set@plt>
    e970:	cbz	x0, e98c <PyInit__decimal@@Base+0x7ed8>
    e974:	ldr	x8, [x0]
    e978:	subs	x8, x8, #0x1
    e97c:	str	x8, [x0]
    e980:	b.ne	e8d4 <PyInit__decimal@@Base+0x7e20>  // b.any
    e984:	bl	6510 <_Py_Dealloc@plt>
    e988:	b	e8d4 <PyInit__decimal@@Base+0x7e20>
    e98c:	ldr	x8, [x20]
    e990:	subs	x8, x8, #0x1
    e994:	str	x8, [x20]
    e998:	b.ne	e9a4 <PyInit__decimal@@Base+0x7ef0>  // b.any
    e99c:	mov	x0, x20
    e9a0:	bl	6510 <_Py_Dealloc@plt>
    e9a4:	mov	x0, xzr
    e9a8:	str	xzr, [sp]
    e9ac:	ldp	x20, x19, [sp, #48]
    e9b0:	ldp	x22, x21, [sp, #32]
    e9b4:	ldp	x29, x30, [sp, #16]
    e9b8:	add	sp, sp, #0x40
    e9bc:	ret
    e9c0:	stp	x29, x30, [sp, #-32]!
    e9c4:	str	x19, [sp, #16]
    e9c8:	mov	x29, sp
    e9cc:	add	x19, x0, #0x18
    e9d0:	mov	x0, x19
    e9d4:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
    e9d8:	cbz	w0, e9e4 <PyInit__decimal@@Base+0x7f30>
    e9dc:	mov	x0, xzr
    e9e0:	b	e9ec <PyInit__decimal@@Base+0x7f38>
    e9e4:	mov	x0, x19
    e9e8:	bl	208b4 <PyInit__decimal@@Base+0x19e00>
    e9ec:	ldr	x19, [sp, #16]
    e9f0:	ldp	x29, x30, [sp], #32
    e9f4:	b	65e0 <PyLong_FromSsize_t@plt>
    e9f8:	ldr	x8, [x0]
    e9fc:	add	x8, x8, #0x1
    ea00:	str	x8, [x0]
    ea04:	ret
    ea08:	ldr	x8, [x0]
    ea0c:	add	x8, x8, #0x1
    ea10:	str	x8, [x0]
    ea14:	ret
    ea18:	stp	x29, x30, [sp, #-48]!
    ea1c:	str	x21, [sp, #16]
    ea20:	stp	x20, x19, [sp, #32]
    ea24:	mov	x29, sp
    ea28:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ea2c:	add	x0, x0, #0x318
    ea30:	bl	6890 <_PyObject_New@plt>
    ea34:	mov	x19, x0
    ea38:	cbz	x0, ea88 <PyInit__decimal@@Base+0x7fd4>
    ea3c:	mov	w8, #0xa                   	// #10
    ea40:	mov	x21, x19
    ea44:	adrp	x11, 38000 <PyInit__decimal@@Base+0x3154c>
    ea48:	str	x8, [x21, #72]!
    ea4c:	ldr	q0, [x11, #3280]
    ea50:	mov	x9, #0xffffffffffffffff    	// #-1
    ea54:	mov	w10, #0x30                  	// #48
    ea58:	mov	x20, x21
    ea5c:	stur	x9, [x21, #-56]
    ea60:	strb	w10, [x20, #-48]!
    ea64:	mov	x0, x20
    ea68:	mov	w1, wzr
    ea6c:	stp	xzr, xzr, [x21, #-40]
    ea70:	stur	x21, [x21, #-8]
    ea74:	stur	q0, [x21, #-24]
    ea78:	bl	212b4 <PyInit__decimal@@Base+0x1a800>
    ea7c:	mov	x0, x20
    ea80:	stur	xzr, [x21, #-40]
    ea84:	bl	21070 <PyInit__decimal@@Base+0x1a5bc>
    ea88:	mov	x0, x19
    ea8c:	ldp	x20, x19, [sp, #32]
    ea90:	ldr	x21, [sp, #16]
    ea94:	ldp	x29, x30, [sp], #48
    ea98:	ret
    ea9c:	sub	sp, sp, #0x30
    eaa0:	stp	x29, x30, [sp, #16]
    eaa4:	stp	x20, x19, [sp, #32]
    eaa8:	add	x29, sp, #0x10
    eaac:	mov	x20, x0
    eab0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    eab4:	add	x0, x0, #0x318
    eab8:	stur	wzr, [x29, #-4]
    eabc:	bl	6890 <_PyObject_New@plt>
    eac0:	mov	x19, x0
    eac4:	cbz	x0, eb24 <PyInit__decimal@@Base+0x8070>
    eac8:	mov	w8, #0x30                  	// #48
    eacc:	mov	x0, x19
    ead0:	strb	w8, [x0, #24]!
    ead4:	mov	x9, #0xffffffffffffffff    	// #-1
    ead8:	mov	w10, #0x4                   	// #4
    eadc:	add	x8, x0, #0x30
    eae0:	add	x1, x20, #0x18
    eae4:	sub	x2, x29, #0x4
    eae8:	stur	x9, [x0, #-8]
    eaec:	stp	xzr, xzr, [x0, #8]
    eaf0:	stp	xzr, x10, [x0, #24]
    eaf4:	str	x8, [x0, #40]
    eaf8:	bl	2340c <PyInit__decimal@@Base+0x1c958>
    eafc:	ldurb	w8, [x29, #-3]
    eb00:	tbz	w8, #1, eb24 <PyInit__decimal@@Base+0x8070>
    eb04:	ldr	x8, [x19]
    eb08:	subs	x8, x8, #0x1
    eb0c:	str	x8, [x19]
    eb10:	b.ne	eb1c <PyInit__decimal@@Base+0x8068>  // b.any
    eb14:	mov	x0, x19
    eb18:	bl	6510 <_Py_Dealloc@plt>
    eb1c:	bl	6520 <PyErr_NoMemory@plt>
    eb20:	mov	x19, xzr
    eb24:	mov	x0, x19
    eb28:	ldp	x20, x19, [sp, #32]
    eb2c:	ldp	x29, x30, [sp, #16]
    eb30:	add	sp, sp, #0x30
    eb34:	ret
    eb38:	sub	sp, sp, #0x30
    eb3c:	stp	x29, x30, [sp, #16]
    eb40:	stp	x20, x19, [sp, #32]
    eb44:	add	x29, sp, #0x10
    eb48:	mov	x20, x0
    eb4c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    eb50:	add	x0, x0, #0x318
    eb54:	stur	wzr, [x29, #-4]
    eb58:	bl	6890 <_PyObject_New@plt>
    eb5c:	mov	x19, x0
    eb60:	cbz	x0, ebc0 <PyInit__decimal@@Base+0x810c>
    eb64:	mov	w8, #0x30                  	// #48
    eb68:	mov	x0, x19
    eb6c:	strb	w8, [x0, #24]!
    eb70:	mov	x9, #0xffffffffffffffff    	// #-1
    eb74:	mov	w10, #0x4                   	// #4
    eb78:	add	x8, x0, #0x30
    eb7c:	add	x1, x20, #0x18
    eb80:	sub	x2, x29, #0x4
    eb84:	stur	x9, [x0, #-8]
    eb88:	stp	xzr, xzr, [x0, #8]
    eb8c:	stp	xzr, x10, [x0, #24]
    eb90:	str	x8, [x0, #40]
    eb94:	bl	234c4 <PyInit__decimal@@Base+0x1ca10>
    eb98:	ldurb	w8, [x29, #-3]
    eb9c:	tbz	w8, #1, ebc0 <PyInit__decimal@@Base+0x810c>
    eba0:	ldr	x8, [x19]
    eba4:	subs	x8, x8, #0x1
    eba8:	str	x8, [x19]
    ebac:	b.ne	ebb8 <PyInit__decimal@@Base+0x8104>  // b.any
    ebb0:	mov	x0, x19
    ebb4:	bl	6510 <_Py_Dealloc@plt>
    ebb8:	bl	6520 <PyErr_NoMemory@plt>
    ebbc:	mov	x19, xzr
    ebc0:	mov	x0, x19
    ebc4:	ldp	x20, x19, [sp, #32]
    ebc8:	ldp	x29, x30, [sp, #16]
    ebcc:	add	sp, sp, #0x30
    ebd0:	ret
    ebd4:	sub	sp, sp, #0x50
    ebd8:	stp	x29, x30, [sp, #32]
    ebdc:	stp	x22, x21, [sp, #48]
    ebe0:	stp	x20, x19, [sp, #64]
    ebe4:	add	x29, sp, #0x20
    ebe8:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    ebec:	ldr	x20, [x20, #4008]
    ebf0:	mov	x8, x2
    ebf4:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    ebf8:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    ebfc:	mov	x19, x0
    ec00:	add	x2, x2, #0x77c
    ec04:	add	x3, x3, #0x758
    ec08:	add	x4, sp, #0x10
    ec0c:	mov	x0, x1
    ec10:	mov	x1, x8
    ec14:	str	x20, [sp, #16]
    ec18:	str	wzr, [sp, #12]
    ec1c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    ec20:	cbz	w0, ed24 <PyInit__decimal@@Base+0x8270>
    ec24:	ldr	x8, [sp, #16]
    ec28:	cmp	x8, x20
    ec2c:	b.eq	ec70 <PyInit__decimal@@Base+0x81bc>  // b.none
    ec30:	ldr	x0, [x8, #8]
    ec34:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    ec38:	add	x8, x8, #0x4b8
    ec3c:	cmp	x0, x8
    ec40:	b.eq	ecac <PyInit__decimal@@Base+0x81f8>  // b.none
    ec44:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    ec48:	add	x1, x1, #0x4b8
    ec4c:	bl	6900 <PyType_IsSubtype@plt>
    ec50:	cbnz	w0, ecac <PyInit__decimal@@Base+0x81f8>
    ec54:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    ec58:	ldr	x8, [x8, #3936]
    ec5c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    ec60:	add	x1, x1, #0x631
    ec64:	ldr	x0, [x8]
    ec68:	bl	6590 <PyErr_SetString@plt>
    ec6c:	b	ed24 <PyInit__decimal@@Base+0x8270>
    ec70:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    ec74:	ldr	x0, [x21, #1400]
    ec78:	sub	x2, x29, #0x8
    ec7c:	mov	x1, xzr
    ec80:	bl	6680 <PyContextVar_Get@plt>
    ec84:	tbnz	w0, #31, edbc <PyInit__decimal@@Base+0x8308>
    ec88:	ldur	x20, [x29, #-8]
    ec8c:	cbz	x20, ed40 <PyInit__decimal@@Base+0x828c>
    ec90:	str	x20, [sp, #16]
    ec94:	ldr	x8, [x20]
    ec98:	subs	x8, x8, #0x1
    ec9c:	str	x8, [x20]
    eca0:	b.ne	ecac <PyInit__decimal@@Base+0x81f8>  // b.any
    eca4:	mov	x0, x20
    eca8:	bl	6510 <_Py_Dealloc@plt>
    ecac:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ecb0:	add	x0, x0, #0x318
    ecb4:	bl	6890 <_PyObject_New@plt>
    ecb8:	mov	x20, x0
    ecbc:	cbz	x0, ed28 <PyInit__decimal@@Base+0x8274>
    ecc0:	mov	w8, #0x30                  	// #48
    ecc4:	mov	x0, x20
    ecc8:	strb	w8, [x0, #24]!
    eccc:	mov	x9, #0xffffffffffffffff    	// #-1
    ecd0:	mov	w10, #0x4                   	// #4
    ecd4:	add	x8, x0, #0x30
    ecd8:	stur	x9, [x0, #-8]
    ecdc:	stp	xzr, xzr, [x0, #8]
    ece0:	stp	xzr, x10, [x0, #24]
    ece4:	str	x8, [x0, #40]
    ece8:	ldr	x8, [sp, #16]
    ecec:	add	x1, x19, #0x18
    ecf0:	add	x3, sp, #0xc
    ecf4:	add	x2, x8, #0x10
    ecf8:	bl	25204 <PyInit__decimal@@Base+0x1e750>
    ecfc:	ldr	x0, [sp, #16]
    ed00:	ldr	w1, [sp, #12]
    ed04:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    ed08:	cbz	w0, ed28 <PyInit__decimal@@Base+0x8274>
    ed0c:	ldr	x8, [x20]
    ed10:	subs	x8, x8, #0x1
    ed14:	str	x8, [x20]
    ed18:	b.ne	ed24 <PyInit__decimal@@Base+0x8270>  // b.any
    ed1c:	mov	x0, x20
    ed20:	bl	6510 <_Py_Dealloc@plt>
    ed24:	mov	x20, xzr
    ed28:	mov	x0, x20
    ed2c:	ldp	x20, x19, [sp, #64]
    ed30:	ldp	x22, x21, [sp, #48]
    ed34:	ldp	x29, x30, [sp, #32]
    ed38:	add	sp, sp, #0x50
    ed3c:	ret
    ed40:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    ed44:	ldr	x22, [x8, #1496]
    ed48:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ed4c:	add	x0, x0, #0x4b8
    ed50:	mov	x1, xzr
    ed54:	bl	6780 <PyObject_CallObject@plt>
    ed58:	cbz	x0, edbc <PyInit__decimal@@Base+0x8308>
    ed5c:	ldp	q1, q0, [x22, #32]
    ed60:	ldr	q2, [x22, #16]
    ed64:	mov	x20, x0
    ed68:	mov	x1, x20
    ed6c:	stp	q1, q0, [x0, #32]
    ed70:	str	q2, [x0, #16]
    ed74:	ldr	w8, [x22, #80]
    ed78:	stp	wzr, wzr, [x0, #44]
    ed7c:	str	w8, [x0, #80]
    ed80:	ldr	x0, [x21, #1400]
    ed84:	bl	65c0 <PyContextVar_Set@plt>
    ed88:	cbz	x0, eda4 <PyInit__decimal@@Base+0x82f0>
    ed8c:	ldr	x8, [x0]
    ed90:	subs	x8, x8, #0x1
    ed94:	str	x8, [x0]
    ed98:	b.ne	ec90 <PyInit__decimal@@Base+0x81dc>  // b.any
    ed9c:	bl	6510 <_Py_Dealloc@plt>
    eda0:	b	ec90 <PyInit__decimal@@Base+0x81dc>
    eda4:	ldr	x8, [x20]
    eda8:	subs	x8, x8, #0x1
    edac:	str	x8, [x20]
    edb0:	b.ne	edbc <PyInit__decimal@@Base+0x8308>  // b.any
    edb4:	mov	x0, x20
    edb8:	bl	6510 <_Py_Dealloc@plt>
    edbc:	mov	x20, xzr
    edc0:	str	xzr, [sp, #16]
    edc4:	b	ed28 <PyInit__decimal@@Base+0x8274>
    edc8:	sub	sp, sp, #0x50
    edcc:	stp	x29, x30, [sp, #32]
    edd0:	stp	x22, x21, [sp, #48]
    edd4:	stp	x20, x19, [sp, #64]
    edd8:	add	x29, sp, #0x20
    eddc:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    ede0:	ldr	x20, [x20, #4008]
    ede4:	mov	x8, x2
    ede8:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    edec:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    edf0:	mov	x19, x0
    edf4:	add	x2, x2, #0x77c
    edf8:	add	x3, x3, #0x768
    edfc:	add	x4, sp, #0x10
    ee00:	mov	x0, x1
    ee04:	mov	x1, x8
    ee08:	str	x20, [sp, #16]
    ee0c:	str	wzr, [sp, #12]
    ee10:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    ee14:	cbz	w0, ef18 <PyInit__decimal@@Base+0x8464>
    ee18:	ldr	x8, [sp, #16]
    ee1c:	cmp	x8, x20
    ee20:	b.eq	ee64 <PyInit__decimal@@Base+0x83b0>  // b.none
    ee24:	ldr	x0, [x8, #8]
    ee28:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    ee2c:	add	x8, x8, #0x4b8
    ee30:	cmp	x0, x8
    ee34:	b.eq	eea0 <PyInit__decimal@@Base+0x83ec>  // b.none
    ee38:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    ee3c:	add	x1, x1, #0x4b8
    ee40:	bl	6900 <PyType_IsSubtype@plt>
    ee44:	cbnz	w0, eea0 <PyInit__decimal@@Base+0x83ec>
    ee48:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    ee4c:	ldr	x8, [x8, #3936]
    ee50:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    ee54:	add	x1, x1, #0x631
    ee58:	ldr	x0, [x8]
    ee5c:	bl	6590 <PyErr_SetString@plt>
    ee60:	b	ef18 <PyInit__decimal@@Base+0x8464>
    ee64:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    ee68:	ldr	x0, [x21, #1400]
    ee6c:	sub	x2, x29, #0x8
    ee70:	mov	x1, xzr
    ee74:	bl	6680 <PyContextVar_Get@plt>
    ee78:	tbnz	w0, #31, efb0 <PyInit__decimal@@Base+0x84fc>
    ee7c:	ldur	x20, [x29, #-8]
    ee80:	cbz	x20, ef34 <PyInit__decimal@@Base+0x8480>
    ee84:	str	x20, [sp, #16]
    ee88:	ldr	x8, [x20]
    ee8c:	subs	x8, x8, #0x1
    ee90:	str	x8, [x20]
    ee94:	b.ne	eea0 <PyInit__decimal@@Base+0x83ec>  // b.any
    ee98:	mov	x0, x20
    ee9c:	bl	6510 <_Py_Dealloc@plt>
    eea0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    eea4:	add	x0, x0, #0x318
    eea8:	bl	6890 <_PyObject_New@plt>
    eeac:	mov	x20, x0
    eeb0:	cbz	x0, ef1c <PyInit__decimal@@Base+0x8468>
    eeb4:	mov	w8, #0x30                  	// #48
    eeb8:	mov	x0, x20
    eebc:	strb	w8, [x0, #24]!
    eec0:	mov	x9, #0xffffffffffffffff    	// #-1
    eec4:	mov	w10, #0x4                   	// #4
    eec8:	add	x8, x0, #0x30
    eecc:	stur	x9, [x0, #-8]
    eed0:	stp	xzr, xzr, [x0, #8]
    eed4:	stp	xzr, x10, [x0, #24]
    eed8:	str	x8, [x0, #40]
    eedc:	ldr	x8, [sp, #16]
    eee0:	add	x1, x19, #0x18
    eee4:	add	x3, sp, #0xc
    eee8:	add	x2, x8, #0x10
    eeec:	bl	24e1c <PyInit__decimal@@Base+0x1e368>
    eef0:	ldr	x0, [sp, #16]
    eef4:	ldr	w1, [sp, #12]
    eef8:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    eefc:	cbz	w0, ef1c <PyInit__decimal@@Base+0x8468>
    ef00:	ldr	x8, [x20]
    ef04:	subs	x8, x8, #0x1
    ef08:	str	x8, [x20]
    ef0c:	b.ne	ef18 <PyInit__decimal@@Base+0x8464>  // b.any
    ef10:	mov	x0, x20
    ef14:	bl	6510 <_Py_Dealloc@plt>
    ef18:	mov	x20, xzr
    ef1c:	mov	x0, x20
    ef20:	ldp	x20, x19, [sp, #64]
    ef24:	ldp	x22, x21, [sp, #48]
    ef28:	ldp	x29, x30, [sp, #32]
    ef2c:	add	sp, sp, #0x50
    ef30:	ret
    ef34:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    ef38:	ldr	x22, [x8, #1496]
    ef3c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ef40:	add	x0, x0, #0x4b8
    ef44:	mov	x1, xzr
    ef48:	bl	6780 <PyObject_CallObject@plt>
    ef4c:	cbz	x0, efb0 <PyInit__decimal@@Base+0x84fc>
    ef50:	ldp	q1, q0, [x22, #32]
    ef54:	ldr	q2, [x22, #16]
    ef58:	mov	x20, x0
    ef5c:	mov	x1, x20
    ef60:	stp	q1, q0, [x0, #32]
    ef64:	str	q2, [x0, #16]
    ef68:	ldr	w8, [x22, #80]
    ef6c:	stp	wzr, wzr, [x0, #44]
    ef70:	str	w8, [x0, #80]
    ef74:	ldr	x0, [x21, #1400]
    ef78:	bl	65c0 <PyContextVar_Set@plt>
    ef7c:	cbz	x0, ef98 <PyInit__decimal@@Base+0x84e4>
    ef80:	ldr	x8, [x0]
    ef84:	subs	x8, x8, #0x1
    ef88:	str	x8, [x0]
    ef8c:	b.ne	ee84 <PyInit__decimal@@Base+0x83d0>  // b.any
    ef90:	bl	6510 <_Py_Dealloc@plt>
    ef94:	b	ee84 <PyInit__decimal@@Base+0x83d0>
    ef98:	ldr	x8, [x20]
    ef9c:	subs	x8, x8, #0x1
    efa0:	str	x8, [x20]
    efa4:	b.ne	efb0 <PyInit__decimal@@Base+0x84fc>  // b.any
    efa8:	mov	x0, x20
    efac:	bl	6510 <_Py_Dealloc@plt>
    efb0:	mov	x20, xzr
    efb4:	str	xzr, [sp, #16]
    efb8:	b	ef1c <PyInit__decimal@@Base+0x8468>
    efbc:	sub	sp, sp, #0x40
    efc0:	stp	x29, x30, [sp, #16]
    efc4:	stp	x22, x21, [sp, #32]
    efc8:	stp	x20, x19, [sp, #48]
    efcc:	add	x29, sp, #0x10
    efd0:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    efd4:	ldr	x20, [x20, #4008]
    efd8:	mov	x8, x2
    efdc:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    efe0:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    efe4:	mov	x19, x0
    efe8:	add	x2, x2, #0x77c
    efec:	add	x3, x3, #0x778
    eff0:	mov	x4, sp
    eff4:	mov	x0, x1
    eff8:	mov	x1, x8
    effc:	str	x20, [sp]
    f000:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    f004:	cbz	w0, f050 <PyInit__decimal@@Base+0x859c>
    f008:	ldr	x8, [sp]
    f00c:	cmp	x8, x20
    f010:	b.eq	f058 <PyInit__decimal@@Base+0x85a4>  // b.none
    f014:	ldr	x0, [x8, #8]
    f018:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    f01c:	add	x8, x8, #0x4b8
    f020:	cmp	x0, x8
    f024:	b.eq	f094 <PyInit__decimal@@Base+0x85e0>  // b.none
    f028:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    f02c:	add	x1, x1, #0x4b8
    f030:	bl	6900 <PyType_IsSubtype@plt>
    f034:	cbnz	w0, f094 <PyInit__decimal@@Base+0x85e0>
    f038:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    f03c:	ldr	x8, [x8, #3936]
    f040:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    f044:	add	x1, x1, #0x631
    f048:	ldr	x0, [x8]
    f04c:	bl	6590 <PyErr_SetString@plt>
    f050:	mov	x0, xzr
    f054:	b	f130 <PyInit__decimal@@Base+0x867c>
    f058:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    f05c:	ldr	x0, [x21, #1400]
    f060:	add	x2, sp, #0x8
    f064:	mov	x1, xzr
    f068:	bl	6680 <PyContextVar_Get@plt>
    f06c:	tbnz	w0, #31, f128 <PyInit__decimal@@Base+0x8674>
    f070:	ldr	x20, [sp, #8]
    f074:	cbz	x20, f0ac <PyInit__decimal@@Base+0x85f8>
    f078:	str	x20, [sp]
    f07c:	ldr	x8, [x20]
    f080:	subs	x8, x8, #0x1
    f084:	str	x8, [x20]
    f088:	b.ne	f094 <PyInit__decimal@@Base+0x85e0>  // b.any
    f08c:	mov	x0, x20
    f090:	bl	6510 <_Py_Dealloc@plt>
    f094:	ldr	x8, [sp]
    f098:	add	x0, x19, #0x18
    f09c:	add	x1, x8, #0x10
    f0a0:	bl	24d20 <PyInit__decimal@@Base+0x1e26c>
    f0a4:	bl	68a0 <PyUnicode_FromString@plt>
    f0a8:	b	f130 <PyInit__decimal@@Base+0x867c>
    f0ac:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    f0b0:	ldr	x22, [x8, #1496]
    f0b4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f0b8:	add	x0, x0, #0x4b8
    f0bc:	mov	x1, xzr
    f0c0:	bl	6780 <PyObject_CallObject@plt>
    f0c4:	cbz	x0, f128 <PyInit__decimal@@Base+0x8674>
    f0c8:	ldp	q1, q0, [x22, #32]
    f0cc:	ldr	q2, [x22, #16]
    f0d0:	mov	x20, x0
    f0d4:	mov	x1, x20
    f0d8:	stp	q1, q0, [x0, #32]
    f0dc:	str	q2, [x0, #16]
    f0e0:	ldr	w8, [x22, #80]
    f0e4:	stp	wzr, wzr, [x0, #44]
    f0e8:	str	w8, [x0, #80]
    f0ec:	ldr	x0, [x21, #1400]
    f0f0:	bl	65c0 <PyContextVar_Set@plt>
    f0f4:	cbz	x0, f110 <PyInit__decimal@@Base+0x865c>
    f0f8:	ldr	x8, [x0]
    f0fc:	subs	x8, x8, #0x1
    f100:	str	x8, [x0]
    f104:	b.ne	f078 <PyInit__decimal@@Base+0x85c4>  // b.any
    f108:	bl	6510 <_Py_Dealloc@plt>
    f10c:	b	f078 <PyInit__decimal@@Base+0x85c4>
    f110:	ldr	x8, [x20]
    f114:	subs	x8, x8, #0x1
    f118:	str	x8, [x20]
    f11c:	b.ne	f128 <PyInit__decimal@@Base+0x8674>  // b.any
    f120:	mov	x0, x20
    f124:	bl	6510 <_Py_Dealloc@plt>
    f128:	mov	x0, xzr
    f12c:	str	xzr, [sp]
    f130:	ldp	x20, x19, [sp, #48]
    f134:	ldp	x22, x21, [sp, #32]
    f138:	ldp	x29, x30, [sp, #16]
    f13c:	add	sp, sp, #0x40
    f140:	ret
    f144:	sub	sp, sp, #0x40
    f148:	stp	x29, x30, [sp, #16]
    f14c:	stp	x22, x21, [sp, #32]
    f150:	stp	x20, x19, [sp, #48]
    f154:	add	x29, sp, #0x10
    f158:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    f15c:	ldr	x20, [x20, #4008]
    f160:	mov	x8, x2
    f164:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    f168:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    f16c:	mov	x19, x0
    f170:	add	x2, x2, #0x77c
    f174:	add	x3, x3, #0x788
    f178:	mov	x4, sp
    f17c:	mov	x0, x1
    f180:	mov	x1, x8
    f184:	str	x20, [sp]
    f188:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    f18c:	cbz	w0, f1d8 <PyInit__decimal@@Base+0x8724>
    f190:	ldr	x8, [sp]
    f194:	cmp	x8, x20
    f198:	b.eq	f1e0 <PyInit__decimal@@Base+0x872c>  // b.none
    f19c:	ldr	x0, [x8, #8]
    f1a0:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    f1a4:	add	x8, x8, #0x4b8
    f1a8:	cmp	x0, x8
    f1ac:	b.eq	f21c <PyInit__decimal@@Base+0x8768>  // b.none
    f1b0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    f1b4:	add	x1, x1, #0x4b8
    f1b8:	bl	6900 <PyType_IsSubtype@plt>
    f1bc:	cbnz	w0, f21c <PyInit__decimal@@Base+0x8768>
    f1c0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    f1c4:	ldr	x8, [x8, #3936]
    f1c8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    f1cc:	add	x1, x1, #0x631
    f1d0:	ldr	x0, [x8]
    f1d4:	bl	6590 <PyErr_SetString@plt>
    f1d8:	mov	x19, xzr
    f1dc:	b	f31c <PyInit__decimal@@Base+0x8868>
    f1e0:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    f1e4:	ldr	x0, [x21, #1400]
    f1e8:	add	x2, sp, #0x8
    f1ec:	mov	x1, xzr
    f1f0:	bl	6680 <PyContextVar_Get@plt>
    f1f4:	tbnz	w0, #31, f314 <PyInit__decimal@@Base+0x8860>
    f1f8:	ldr	x20, [sp, #8]
    f1fc:	cbz	x20, f298 <PyInit__decimal@@Base+0x87e4>
    f200:	str	x20, [sp]
    f204:	ldr	x8, [x20]
    f208:	subs	x8, x8, #0x1
    f20c:	str	x8, [x20]
    f210:	b.ne	f21c <PyInit__decimal@@Base+0x8768>  // b.any
    f214:	mov	x0, x20
    f218:	bl	6510 <_Py_Dealloc@plt>
    f21c:	ldr	x8, [sp]
    f220:	add	x1, x19, #0x18
    f224:	add	x0, sp, #0x8
    f228:	ldr	w2, [x8, #80]
    f22c:	bl	1ea48 <PyInit__decimal@@Base+0x17f94>
    f230:	tbnz	x0, #63, f25c <PyInit__decimal@@Base+0x87a8>
    f234:	ldr	x21, [sp, #8]
    f238:	mov	w1, #0x7f                  	// #127
    f23c:	mov	x20, x0
    f240:	bl	6990 <PyUnicode_New@plt>
    f244:	mov	x19, x0
    f248:	cbz	x0, f284 <PyInit__decimal@@Base+0x87d0>
    f24c:	ldr	w8, [x19, #32]
    f250:	tbnz	w8, #5, f268 <PyInit__decimal@@Base+0x87b4>
    f254:	ldr	x0, [x19, #72]
    f258:	b	f278 <PyInit__decimal@@Base+0x87c4>
    f25c:	bl	6520 <PyErr_NoMemory@plt>
    f260:	mov	x19, xzr
    f264:	b	f31c <PyInit__decimal@@Base+0x8868>
    f268:	add	x9, x19, #0x30
    f26c:	add	x10, x19, #0x48
    f270:	tst	w8, #0x40
    f274:	csel	x0, x10, x9, eq  // eq = none
    f278:	mov	x1, x21
    f27c:	mov	x2, x20
    f280:	bl	63c0 <memcpy@plt>
    f284:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    f288:	ldr	x8, [x8, #1376]
    f28c:	ldr	x0, [sp, #8]
    f290:	blr	x8
    f294:	b	f31c <PyInit__decimal@@Base+0x8868>
    f298:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    f29c:	ldr	x22, [x8, #1496]
    f2a0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f2a4:	add	x0, x0, #0x4b8
    f2a8:	mov	x1, xzr
    f2ac:	bl	6780 <PyObject_CallObject@plt>
    f2b0:	cbz	x0, f314 <PyInit__decimal@@Base+0x8860>
    f2b4:	ldp	q1, q0, [x22, #32]
    f2b8:	ldr	q2, [x22, #16]
    f2bc:	mov	x20, x0
    f2c0:	mov	x1, x20
    f2c4:	stp	q1, q0, [x0, #32]
    f2c8:	str	q2, [x0, #16]
    f2cc:	ldr	w8, [x22, #80]
    f2d0:	stp	wzr, wzr, [x0, #44]
    f2d4:	str	w8, [x0, #80]
    f2d8:	ldr	x0, [x21, #1400]
    f2dc:	bl	65c0 <PyContextVar_Set@plt>
    f2e0:	cbz	x0, f2fc <PyInit__decimal@@Base+0x8848>
    f2e4:	ldr	x8, [x0]
    f2e8:	subs	x8, x8, #0x1
    f2ec:	str	x8, [x0]
    f2f0:	b.ne	f200 <PyInit__decimal@@Base+0x874c>  // b.any
    f2f4:	bl	6510 <_Py_Dealloc@plt>
    f2f8:	b	f200 <PyInit__decimal@@Base+0x874c>
    f2fc:	ldr	x8, [x20]
    f300:	subs	x8, x8, #0x1
    f304:	str	x8, [x20]
    f308:	b.ne	f314 <PyInit__decimal@@Base+0x8860>  // b.any
    f30c:	mov	x0, x20
    f310:	bl	6510 <_Py_Dealloc@plt>
    f314:	mov	x19, xzr
    f318:	str	xzr, [sp]
    f31c:	mov	x0, x19
    f320:	ldp	x20, x19, [sp, #48]
    f324:	ldp	x22, x21, [sp, #32]
    f328:	ldp	x29, x30, [sp, #16]
    f32c:	add	sp, sp, #0x40
    f330:	ret
    f334:	sub	sp, sp, #0x50
    f338:	stp	x29, x30, [sp, #32]
    f33c:	stp	x22, x21, [sp, #48]
    f340:	stp	x20, x19, [sp, #64]
    f344:	add	x29, sp, #0x20
    f348:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    f34c:	ldr	x20, [x20, #4008]
    f350:	mov	x8, x2
    f354:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    f358:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    f35c:	mov	x19, x0
    f360:	add	x2, x2, #0x77b
    f364:	add	x3, x3, #0x798
    f368:	add	x4, sp, #0x8
    f36c:	add	x5, sp, #0x10
    f370:	mov	x0, x1
    f374:	mov	x1, x8
    f378:	str	x20, [sp, #16]
    f37c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    f380:	cbz	w0, f624 <PyInit__decimal@@Base+0x8b70>
    f384:	ldr	x8, [sp, #16]
    f388:	cmp	x8, x20
    f38c:	b.eq	f3d0 <PyInit__decimal@@Base+0x891c>  // b.none
    f390:	ldr	x0, [x8, #8]
    f394:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    f398:	add	x8, x8, #0x4b8
    f39c:	cmp	x0, x8
    f3a0:	b.eq	f40c <PyInit__decimal@@Base+0x8958>  // b.none
    f3a4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    f3a8:	add	x1, x1, #0x4b8
    f3ac:	bl	6900 <PyType_IsSubtype@plt>
    f3b0:	cbnz	w0, f40c <PyInit__decimal@@Base+0x8958>
    f3b4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    f3b8:	ldr	x8, [x8, #3936]
    f3bc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    f3c0:	add	x1, x1, #0x631
    f3c4:	ldr	x0, [x8]
    f3c8:	bl	6590 <PyErr_SetString@plt>
    f3cc:	b	f624 <PyInit__decimal@@Base+0x8b70>
    f3d0:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    f3d4:	ldr	x0, [x21, #1400]
    f3d8:	sub	x2, x29, #0x8
    f3dc:	mov	x1, xzr
    f3e0:	bl	6680 <PyContextVar_Get@plt>
    f3e4:	tbnz	w0, #31, f668 <PyInit__decimal@@Base+0x8bb4>
    f3e8:	ldur	x20, [x29, #-8]
    f3ec:	cbz	x20, f574 <PyInit__decimal@@Base+0x8ac0>
    f3f0:	str	x20, [sp, #16]
    f3f4:	ldr	x8, [x20]
    f3f8:	subs	x8, x8, #0x1
    f3fc:	str	x8, [x20]
    f400:	b.ne	f40c <PyInit__decimal@@Base+0x8958>  // b.any
    f404:	mov	x0, x20
    f408:	bl	6510 <_Py_Dealloc@plt>
    f40c:	ldr	x0, [x19, #8]
    f410:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    f414:	add	x21, x21, #0x318
    f418:	cmp	x0, x21
    f41c:	b.eq	f434 <PyInit__decimal@@Base+0x8980>  // b.none
    f420:	ldr	x20, [sp, #16]
    f424:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    f428:	add	x1, x1, #0x318
    f42c:	bl	6900 <PyType_IsSubtype@plt>
    f430:	cbz	w0, f518 <PyInit__decimal@@Base+0x8a64>
    f434:	ldr	x8, [x19]
    f438:	add	x8, x8, #0x1
    f43c:	str	x8, [x19]
    f440:	ldr	x20, [sp, #8]
    f444:	ldr	x0, [x20, #8]
    f448:	cmp	x0, x21
    f44c:	b.eq	f464 <PyInit__decimal@@Base+0x89b0>  // b.none
    f450:	ldr	x21, [sp, #16]
    f454:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    f458:	add	x1, x1, #0x318
    f45c:	bl	6900 <PyType_IsSubtype@plt>
    f460:	cbz	w0, f548 <PyInit__decimal@@Base+0x8a94>
    f464:	ldr	x8, [x20]
    f468:	add	x8, x8, #0x1
    f46c:	str	x8, [x20]
    f470:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f474:	add	x0, x0, #0x318
    f478:	bl	6890 <_PyObject_New@plt>
    f47c:	cbz	x0, f4e8 <PyInit__decimal@@Base+0x8a34>
    f480:	mov	w8, #0x30                  	// #48
    f484:	mov	x21, x0
    f488:	strb	w8, [x0, #24]!
    f48c:	mov	x9, #0xffffffffffffffff    	// #-1
    f490:	mov	w10, #0x4                   	// #4
    f494:	add	x1, x19, #0x18
    f498:	add	x8, x0, #0x30
    f49c:	add	x2, x20, #0x18
    f4a0:	stur	x9, [x0, #-8]
    f4a4:	stp	xzr, xzr, [x0, #8]
    f4a8:	stp	xzr, x10, [x0, #24]
    f4ac:	str	x8, [x0, #40]
    f4b0:	bl	23bb8 <PyInit__decimal@@Base+0x1d104>
    f4b4:	ldr	x8, [x19]
    f4b8:	subs	x8, x8, #0x1
    f4bc:	str	x8, [x19]
    f4c0:	b.ne	f4cc <PyInit__decimal@@Base+0x8a18>  // b.any
    f4c4:	mov	x0, x19
    f4c8:	bl	6510 <_Py_Dealloc@plt>
    f4cc:	ldr	x8, [x20]
    f4d0:	subs	x8, x8, #0x1
    f4d4:	str	x8, [x20]
    f4d8:	b.ne	f628 <PyInit__decimal@@Base+0x8b74>  // b.any
    f4dc:	mov	x0, x20
    f4e0:	bl	6510 <_Py_Dealloc@plt>
    f4e4:	b	f628 <PyInit__decimal@@Base+0x8b74>
    f4e8:	ldr	x8, [x19]
    f4ec:	subs	x8, x8, #0x1
    f4f0:	str	x8, [x19]
    f4f4:	b.ne	f500 <PyInit__decimal@@Base+0x8a4c>  // b.any
    f4f8:	mov	x0, x19
    f4fc:	bl	6510 <_Py_Dealloc@plt>
    f500:	ldr	x8, [x20]
    f504:	subs	x8, x8, #0x1
    f508:	str	x8, [x20]
    f50c:	b.ne	f624 <PyInit__decimal@@Base+0x8b70>  // b.any
    f510:	mov	x0, x20
    f514:	b	f644 <PyInit__decimal@@Base+0x8b90>
    f518:	ldr	x8, [x19, #8]
    f51c:	ldrb	w9, [x8, #171]
    f520:	tbnz	w9, #0, f5d8 <PyInit__decimal@@Base+0x8b24>
    f524:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    f528:	ldr	x9, [x9, #3936]
    f52c:	ldr	x2, [x8, #24]
    f530:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    f534:	add	x1, x1, #0x263
    f538:	ldr	x0, [x9]
    f53c:	bl	6950 <PyErr_Format@plt>
    f540:	mov	x21, xzr
    f544:	b	f628 <PyInit__decimal@@Base+0x8b74>
    f548:	ldr	x8, [x20, #8]
    f54c:	ldrb	w9, [x8, #171]
    f550:	tbnz	w9, #0, f5f8 <PyInit__decimal@@Base+0x8b44>
    f554:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    f558:	ldr	x9, [x9, #3936]
    f55c:	ldr	x2, [x8, #24]
    f560:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    f564:	add	x1, x1, #0x263
    f568:	ldr	x0, [x9]
    f56c:	bl	6950 <PyErr_Format@plt>
    f570:	b	f614 <PyInit__decimal@@Base+0x8b60>
    f574:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    f578:	ldr	x22, [x8, #1496]
    f57c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f580:	add	x0, x0, #0x4b8
    f584:	mov	x1, xzr
    f588:	bl	6780 <PyObject_CallObject@plt>
    f58c:	cbz	x0, f668 <PyInit__decimal@@Base+0x8bb4>
    f590:	ldp	q1, q0, [x22, #32]
    f594:	ldr	q2, [x22, #16]
    f598:	mov	x20, x0
    f59c:	mov	x1, x20
    f5a0:	stp	q1, q0, [x0, #32]
    f5a4:	str	q2, [x0, #16]
    f5a8:	ldr	w8, [x22, #80]
    f5ac:	stp	wzr, wzr, [x0, #44]
    f5b0:	str	w8, [x0, #80]
    f5b4:	ldr	x0, [x21, #1400]
    f5b8:	bl	65c0 <PyContextVar_Set@plt>
    f5bc:	cbz	x0, f650 <PyInit__decimal@@Base+0x8b9c>
    f5c0:	ldr	x8, [x0]
    f5c4:	subs	x8, x8, #0x1
    f5c8:	str	x8, [x0]
    f5cc:	b.ne	f3f0 <PyInit__decimal@@Base+0x893c>  // b.any
    f5d0:	bl	6510 <_Py_Dealloc@plt>
    f5d4:	b	f3f0 <PyInit__decimal@@Base+0x893c>
    f5d8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f5dc:	add	x0, x0, #0x318
    f5e0:	mov	x1, x19
    f5e4:	mov	x2, x20
    f5e8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    f5ec:	mov	x19, x0
    f5f0:	cbnz	x0, f440 <PyInit__decimal@@Base+0x898c>
    f5f4:	b	f624 <PyInit__decimal@@Base+0x8b70>
    f5f8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f5fc:	add	x0, x0, #0x318
    f600:	mov	x1, x20
    f604:	mov	x2, x21
    f608:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    f60c:	mov	x20, x0
    f610:	cbnz	x0, f470 <PyInit__decimal@@Base+0x89bc>
    f614:	ldr	x8, [x19]
    f618:	subs	x8, x8, #0x1
    f61c:	str	x8, [x19]
    f620:	b.eq	f640 <PyInit__decimal@@Base+0x8b8c>  // b.none
    f624:	mov	x21, xzr
    f628:	mov	x0, x21
    f62c:	ldp	x20, x19, [sp, #64]
    f630:	ldp	x22, x21, [sp, #48]
    f634:	ldp	x29, x30, [sp, #32]
    f638:	add	sp, sp, #0x50
    f63c:	ret
    f640:	mov	x0, x19
    f644:	bl	6510 <_Py_Dealloc@plt>
    f648:	mov	x21, xzr
    f64c:	b	f628 <PyInit__decimal@@Base+0x8b74>
    f650:	ldr	x8, [x20]
    f654:	subs	x8, x8, #0x1
    f658:	str	x8, [x20]
    f65c:	b.ne	f668 <PyInit__decimal@@Base+0x8bb4>  // b.any
    f660:	mov	x0, x20
    f664:	bl	6510 <_Py_Dealloc@plt>
    f668:	mov	x21, xzr
    f66c:	str	xzr, [sp, #16]
    f670:	b	f628 <PyInit__decimal@@Base+0x8b74>
    f674:	sub	sp, sp, #0x50
    f678:	stp	x29, x30, [sp, #32]
    f67c:	stp	x22, x21, [sp, #48]
    f680:	stp	x20, x19, [sp, #64]
    f684:	add	x29, sp, #0x20
    f688:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    f68c:	ldr	x20, [x20, #4008]
    f690:	mov	x8, x2
    f694:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    f698:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    f69c:	mov	x19, x0
    f6a0:	add	x2, x2, #0x77b
    f6a4:	add	x3, x3, #0x7b0
    f6a8:	add	x4, sp, #0x8
    f6ac:	add	x5, sp, #0x10
    f6b0:	mov	x0, x1
    f6b4:	mov	x1, x8
    f6b8:	str	x20, [sp, #16]
    f6bc:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    f6c0:	cbz	w0, f964 <PyInit__decimal@@Base+0x8eb0>
    f6c4:	ldr	x8, [sp, #16]
    f6c8:	cmp	x8, x20
    f6cc:	b.eq	f710 <PyInit__decimal@@Base+0x8c5c>  // b.none
    f6d0:	ldr	x0, [x8, #8]
    f6d4:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    f6d8:	add	x8, x8, #0x4b8
    f6dc:	cmp	x0, x8
    f6e0:	b.eq	f74c <PyInit__decimal@@Base+0x8c98>  // b.none
    f6e4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    f6e8:	add	x1, x1, #0x4b8
    f6ec:	bl	6900 <PyType_IsSubtype@plt>
    f6f0:	cbnz	w0, f74c <PyInit__decimal@@Base+0x8c98>
    f6f4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    f6f8:	ldr	x8, [x8, #3936]
    f6fc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    f700:	add	x1, x1, #0x631
    f704:	ldr	x0, [x8]
    f708:	bl	6590 <PyErr_SetString@plt>
    f70c:	b	f964 <PyInit__decimal@@Base+0x8eb0>
    f710:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    f714:	ldr	x0, [x21, #1400]
    f718:	sub	x2, x29, #0x8
    f71c:	mov	x1, xzr
    f720:	bl	6680 <PyContextVar_Get@plt>
    f724:	tbnz	w0, #31, f9a8 <PyInit__decimal@@Base+0x8ef4>
    f728:	ldur	x20, [x29, #-8]
    f72c:	cbz	x20, f8b4 <PyInit__decimal@@Base+0x8e00>
    f730:	str	x20, [sp, #16]
    f734:	ldr	x8, [x20]
    f738:	subs	x8, x8, #0x1
    f73c:	str	x8, [x20]
    f740:	b.ne	f74c <PyInit__decimal@@Base+0x8c98>  // b.any
    f744:	mov	x0, x20
    f748:	bl	6510 <_Py_Dealloc@plt>
    f74c:	ldr	x0, [x19, #8]
    f750:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    f754:	add	x21, x21, #0x318
    f758:	cmp	x0, x21
    f75c:	b.eq	f774 <PyInit__decimal@@Base+0x8cc0>  // b.none
    f760:	ldr	x20, [sp, #16]
    f764:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    f768:	add	x1, x1, #0x318
    f76c:	bl	6900 <PyType_IsSubtype@plt>
    f770:	cbz	w0, f858 <PyInit__decimal@@Base+0x8da4>
    f774:	ldr	x8, [x19]
    f778:	add	x8, x8, #0x1
    f77c:	str	x8, [x19]
    f780:	ldr	x20, [sp, #8]
    f784:	ldr	x0, [x20, #8]
    f788:	cmp	x0, x21
    f78c:	b.eq	f7a4 <PyInit__decimal@@Base+0x8cf0>  // b.none
    f790:	ldr	x21, [sp, #16]
    f794:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    f798:	add	x1, x1, #0x318
    f79c:	bl	6900 <PyType_IsSubtype@plt>
    f7a0:	cbz	w0, f888 <PyInit__decimal@@Base+0x8dd4>
    f7a4:	ldr	x8, [x20]
    f7a8:	add	x8, x8, #0x1
    f7ac:	str	x8, [x20]
    f7b0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f7b4:	add	x0, x0, #0x318
    f7b8:	bl	6890 <_PyObject_New@plt>
    f7bc:	cbz	x0, f828 <PyInit__decimal@@Base+0x8d74>
    f7c0:	mov	w8, #0x30                  	// #48
    f7c4:	mov	x21, x0
    f7c8:	strb	w8, [x0, #24]!
    f7cc:	mov	x9, #0xffffffffffffffff    	// #-1
    f7d0:	mov	w10, #0x4                   	// #4
    f7d4:	add	x1, x19, #0x18
    f7d8:	add	x8, x0, #0x30
    f7dc:	add	x2, x20, #0x18
    f7e0:	stur	x9, [x0, #-8]
    f7e4:	stp	xzr, xzr, [x0, #8]
    f7e8:	stp	xzr, x10, [x0, #24]
    f7ec:	str	x8, [x0, #40]
    f7f0:	bl	23c74 <PyInit__decimal@@Base+0x1d1c0>
    f7f4:	ldr	x8, [x19]
    f7f8:	subs	x8, x8, #0x1
    f7fc:	str	x8, [x19]
    f800:	b.ne	f80c <PyInit__decimal@@Base+0x8d58>  // b.any
    f804:	mov	x0, x19
    f808:	bl	6510 <_Py_Dealloc@plt>
    f80c:	ldr	x8, [x20]
    f810:	subs	x8, x8, #0x1
    f814:	str	x8, [x20]
    f818:	b.ne	f968 <PyInit__decimal@@Base+0x8eb4>  // b.any
    f81c:	mov	x0, x20
    f820:	bl	6510 <_Py_Dealloc@plt>
    f824:	b	f968 <PyInit__decimal@@Base+0x8eb4>
    f828:	ldr	x8, [x19]
    f82c:	subs	x8, x8, #0x1
    f830:	str	x8, [x19]
    f834:	b.ne	f840 <PyInit__decimal@@Base+0x8d8c>  // b.any
    f838:	mov	x0, x19
    f83c:	bl	6510 <_Py_Dealloc@plt>
    f840:	ldr	x8, [x20]
    f844:	subs	x8, x8, #0x1
    f848:	str	x8, [x20]
    f84c:	b.ne	f964 <PyInit__decimal@@Base+0x8eb0>  // b.any
    f850:	mov	x0, x20
    f854:	b	f984 <PyInit__decimal@@Base+0x8ed0>
    f858:	ldr	x8, [x19, #8]
    f85c:	ldrb	w9, [x8, #171]
    f860:	tbnz	w9, #0, f918 <PyInit__decimal@@Base+0x8e64>
    f864:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    f868:	ldr	x9, [x9, #3936]
    f86c:	ldr	x2, [x8, #24]
    f870:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    f874:	add	x1, x1, #0x263
    f878:	ldr	x0, [x9]
    f87c:	bl	6950 <PyErr_Format@plt>
    f880:	mov	x21, xzr
    f884:	b	f968 <PyInit__decimal@@Base+0x8eb4>
    f888:	ldr	x8, [x20, #8]
    f88c:	ldrb	w9, [x8, #171]
    f890:	tbnz	w9, #0, f938 <PyInit__decimal@@Base+0x8e84>
    f894:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    f898:	ldr	x9, [x9, #3936]
    f89c:	ldr	x2, [x8, #24]
    f8a0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    f8a4:	add	x1, x1, #0x263
    f8a8:	ldr	x0, [x9]
    f8ac:	bl	6950 <PyErr_Format@plt>
    f8b0:	b	f954 <PyInit__decimal@@Base+0x8ea0>
    f8b4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    f8b8:	ldr	x22, [x8, #1496]
    f8bc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f8c0:	add	x0, x0, #0x4b8
    f8c4:	mov	x1, xzr
    f8c8:	bl	6780 <PyObject_CallObject@plt>
    f8cc:	cbz	x0, f9a8 <PyInit__decimal@@Base+0x8ef4>
    f8d0:	ldp	q1, q0, [x22, #32]
    f8d4:	ldr	q2, [x22, #16]
    f8d8:	mov	x20, x0
    f8dc:	mov	x1, x20
    f8e0:	stp	q1, q0, [x0, #32]
    f8e4:	str	q2, [x0, #16]
    f8e8:	ldr	w8, [x22, #80]
    f8ec:	stp	wzr, wzr, [x0, #44]
    f8f0:	str	w8, [x0, #80]
    f8f4:	ldr	x0, [x21, #1400]
    f8f8:	bl	65c0 <PyContextVar_Set@plt>
    f8fc:	cbz	x0, f990 <PyInit__decimal@@Base+0x8edc>
    f900:	ldr	x8, [x0]
    f904:	subs	x8, x8, #0x1
    f908:	str	x8, [x0]
    f90c:	b.ne	f730 <PyInit__decimal@@Base+0x8c7c>  // b.any
    f910:	bl	6510 <_Py_Dealloc@plt>
    f914:	b	f730 <PyInit__decimal@@Base+0x8c7c>
    f918:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f91c:	add	x0, x0, #0x318
    f920:	mov	x1, x19
    f924:	mov	x2, x20
    f928:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    f92c:	mov	x19, x0
    f930:	cbnz	x0, f780 <PyInit__decimal@@Base+0x8ccc>
    f934:	b	f964 <PyInit__decimal@@Base+0x8eb0>
    f938:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    f93c:	add	x0, x0, #0x318
    f940:	mov	x1, x20
    f944:	mov	x2, x21
    f948:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    f94c:	mov	x20, x0
    f950:	cbnz	x0, f7b0 <PyInit__decimal@@Base+0x8cfc>
    f954:	ldr	x8, [x19]
    f958:	subs	x8, x8, #0x1
    f95c:	str	x8, [x19]
    f960:	b.eq	f980 <PyInit__decimal@@Base+0x8ecc>  // b.none
    f964:	mov	x21, xzr
    f968:	mov	x0, x21
    f96c:	ldp	x20, x19, [sp, #64]
    f970:	ldp	x22, x21, [sp, #48]
    f974:	ldp	x29, x30, [sp, #32]
    f978:	add	sp, sp, #0x50
    f97c:	ret
    f980:	mov	x0, x19
    f984:	bl	6510 <_Py_Dealloc@plt>
    f988:	mov	x21, xzr
    f98c:	b	f968 <PyInit__decimal@@Base+0x8eb4>
    f990:	ldr	x8, [x20]
    f994:	subs	x8, x8, #0x1
    f998:	str	x8, [x20]
    f99c:	b.ne	f9a8 <PyInit__decimal@@Base+0x8ef4>  // b.any
    f9a0:	mov	x0, x20
    f9a4:	bl	6510 <_Py_Dealloc@plt>
    f9a8:	mov	x21, xzr
    f9ac:	str	xzr, [sp, #16]
    f9b0:	b	f968 <PyInit__decimal@@Base+0x8eb4>
    f9b4:	sub	sp, sp, #0x50
    f9b8:	stp	x29, x30, [sp, #32]
    f9bc:	stp	x22, x21, [sp, #48]
    f9c0:	stp	x20, x19, [sp, #64]
    f9c4:	add	x29, sp, #0x20
    f9c8:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    f9cc:	ldr	x20, [x20, #4008]
    f9d0:	mov	x8, x2
    f9d4:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    f9d8:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    f9dc:	mov	x19, x0
    f9e0:	add	x2, x2, #0x77b
    f9e4:	add	x3, x3, #0x7c8
    f9e8:	add	x4, sp, #0x10
    f9ec:	add	x5, sp, #0x8
    f9f0:	mov	x0, x1
    f9f4:	mov	x1, x8
    f9f8:	str	x20, [sp, #8]
    f9fc:	str	wzr, [sp, #4]
    fa00:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    fa04:	cbz	w0, fcd4 <PyInit__decimal@@Base+0x9220>
    fa08:	ldr	x8, [sp, #8]
    fa0c:	cmp	x8, x20
    fa10:	b.eq	fa54 <PyInit__decimal@@Base+0x8fa0>  // b.none
    fa14:	ldr	x0, [x8, #8]
    fa18:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    fa1c:	add	x8, x8, #0x4b8
    fa20:	cmp	x0, x8
    fa24:	b.eq	fa90 <PyInit__decimal@@Base+0x8fdc>  // b.none
    fa28:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    fa2c:	add	x1, x1, #0x4b8
    fa30:	bl	6900 <PyType_IsSubtype@plt>
    fa34:	cbnz	w0, fa90 <PyInit__decimal@@Base+0x8fdc>
    fa38:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    fa3c:	ldr	x8, [x8, #3936]
    fa40:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    fa44:	add	x1, x1, #0x631
    fa48:	ldr	x0, [x8]
    fa4c:	bl	6590 <PyErr_SetString@plt>
    fa50:	b	fcd4 <PyInit__decimal@@Base+0x9220>
    fa54:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    fa58:	ldr	x0, [x21, #1400]
    fa5c:	sub	x2, x29, #0x8
    fa60:	mov	x1, xzr
    fa64:	bl	6680 <PyContextVar_Get@plt>
    fa68:	tbnz	w0, #31, fd08 <PyInit__decimal@@Base+0x9254>
    fa6c:	ldur	x20, [x29, #-8]
    fa70:	cbz	x20, fc1c <PyInit__decimal@@Base+0x9168>
    fa74:	str	x20, [sp, #8]
    fa78:	ldr	x8, [x20]
    fa7c:	subs	x8, x8, #0x1
    fa80:	str	x8, [x20]
    fa84:	b.ne	fa90 <PyInit__decimal@@Base+0x8fdc>  // b.any
    fa88:	mov	x0, x20
    fa8c:	bl	6510 <_Py_Dealloc@plt>
    fa90:	ldr	x0, [x19, #8]
    fa94:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    fa98:	add	x21, x21, #0x318
    fa9c:	cmp	x0, x21
    faa0:	b.eq	fab8 <PyInit__decimal@@Base+0x9004>  // b.none
    faa4:	ldr	x20, [sp, #8]
    faa8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    faac:	add	x1, x1, #0x318
    fab0:	bl	6900 <PyType_IsSubtype@plt>
    fab4:	cbz	w0, fbc4 <PyInit__decimal@@Base+0x9110>
    fab8:	ldr	x8, [x19]
    fabc:	add	x8, x8, #0x1
    fac0:	str	x8, [x19]
    fac4:	ldr	x20, [sp, #16]
    fac8:	ldr	x0, [x20, #8]
    facc:	cmp	x0, x21
    fad0:	b.eq	fae8 <PyInit__decimal@@Base+0x9034>  // b.none
    fad4:	ldr	x21, [sp, #8]
    fad8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    fadc:	add	x1, x1, #0x318
    fae0:	bl	6900 <PyType_IsSubtype@plt>
    fae4:	cbz	w0, fbf0 <PyInit__decimal@@Base+0x913c>
    fae8:	ldr	x8, [x20]
    faec:	add	x8, x8, #0x1
    faf0:	str	x8, [x20]
    faf4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    faf8:	add	x0, x0, #0x318
    fafc:	bl	6890 <_PyObject_New@plt>
    fb00:	cbz	x0, fb94 <PyInit__decimal@@Base+0x90e0>
    fb04:	mov	w8, #0x30                  	// #48
    fb08:	mov	x21, x0
    fb0c:	strb	w8, [x0, #24]!
    fb10:	mov	x9, #0xffffffffffffffff    	// #-1
    fb14:	mov	w10, #0x4                   	// #4
    fb18:	add	x1, x19, #0x18
    fb1c:	add	x8, x0, #0x30
    fb20:	add	x2, x20, #0x18
    fb24:	add	x3, sp, #0x4
    fb28:	stur	x9, [x0, #-8]
    fb2c:	stp	xzr, xzr, [x0, #8]
    fb30:	stp	xzr, x10, [x0, #24]
    fb34:	str	x8, [x0, #40]
    fb38:	bl	2357c <PyInit__decimal@@Base+0x1cac8>
    fb3c:	ldr	x8, [x19]
    fb40:	subs	x8, x8, #0x1
    fb44:	str	x8, [x19]
    fb48:	b.ne	fb54 <PyInit__decimal@@Base+0x90a0>  // b.any
    fb4c:	mov	x0, x19
    fb50:	bl	6510 <_Py_Dealloc@plt>
    fb54:	ldr	x8, [x20]
    fb58:	subs	x8, x8, #0x1
    fb5c:	str	x8, [x20]
    fb60:	b.ne	fb6c <PyInit__decimal@@Base+0x90b8>  // b.any
    fb64:	mov	x0, x20
    fb68:	bl	6510 <_Py_Dealloc@plt>
    fb6c:	ldr	x0, [sp, #8]
    fb70:	ldr	w1, [sp, #4]
    fb74:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
    fb78:	cbz	w0, fcd8 <PyInit__decimal@@Base+0x9224>
    fb7c:	ldr	x8, [x21]
    fb80:	subs	x8, x8, #0x1
    fb84:	str	x8, [x21]
    fb88:	b.ne	fcd4 <PyInit__decimal@@Base+0x9220>  // b.any
    fb8c:	mov	x0, x21
    fb90:	b	fcd0 <PyInit__decimal@@Base+0x921c>
    fb94:	ldr	x8, [x19]
    fb98:	subs	x8, x8, #0x1
    fb9c:	str	x8, [x19]
    fba0:	b.ne	fbac <PyInit__decimal@@Base+0x90f8>  // b.any
    fba4:	mov	x0, x19
    fba8:	bl	6510 <_Py_Dealloc@plt>
    fbac:	ldr	x8, [x20]
    fbb0:	subs	x8, x8, #0x1
    fbb4:	str	x8, [x20]
    fbb8:	b.ne	fcd4 <PyInit__decimal@@Base+0x9220>  // b.any
    fbbc:	mov	x0, x20
    fbc0:	b	fcd0 <PyInit__decimal@@Base+0x921c>
    fbc4:	ldr	x8, [x19, #8]
    fbc8:	ldrb	w9, [x8, #171]
    fbcc:	tbnz	w9, #0, fc80 <PyInit__decimal@@Base+0x91cc>
    fbd0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    fbd4:	ldr	x9, [x9, #3936]
    fbd8:	ldr	x2, [x8, #24]
    fbdc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    fbe0:	add	x1, x1, #0x263
    fbe4:	ldr	x0, [x9]
    fbe8:	bl	6950 <PyErr_Format@plt>
    fbec:	b	fcd4 <PyInit__decimal@@Base+0x9220>
    fbf0:	ldr	x8, [x20, #8]
    fbf4:	ldrb	w9, [x8, #171]
    fbf8:	tbnz	w9, #0, fca0 <PyInit__decimal@@Base+0x91ec>
    fbfc:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    fc00:	ldr	x9, [x9, #3936]
    fc04:	ldr	x2, [x8, #24]
    fc08:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    fc0c:	add	x1, x1, #0x263
    fc10:	ldr	x0, [x9]
    fc14:	bl	6950 <PyErr_Format@plt>
    fc18:	b	fcbc <PyInit__decimal@@Base+0x9208>
    fc1c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    fc20:	ldr	x22, [x8, #1496]
    fc24:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    fc28:	add	x0, x0, #0x4b8
    fc2c:	mov	x1, xzr
    fc30:	bl	6780 <PyObject_CallObject@plt>
    fc34:	cbz	x0, fd08 <PyInit__decimal@@Base+0x9254>
    fc38:	ldp	q1, q0, [x22, #32]
    fc3c:	ldr	q2, [x22, #16]
    fc40:	mov	x20, x0
    fc44:	mov	x1, x20
    fc48:	stp	q1, q0, [x0, #32]
    fc4c:	str	q2, [x0, #16]
    fc50:	ldr	w8, [x22, #80]
    fc54:	stp	wzr, wzr, [x0, #44]
    fc58:	str	w8, [x0, #80]
    fc5c:	ldr	x0, [x21, #1400]
    fc60:	bl	65c0 <PyContextVar_Set@plt>
    fc64:	cbz	x0, fcf0 <PyInit__decimal@@Base+0x923c>
    fc68:	ldr	x8, [x0]
    fc6c:	subs	x8, x8, #0x1
    fc70:	str	x8, [x0]
    fc74:	b.ne	fa74 <PyInit__decimal@@Base+0x8fc0>  // b.any
    fc78:	bl	6510 <_Py_Dealloc@plt>
    fc7c:	b	fa74 <PyInit__decimal@@Base+0x8fc0>
    fc80:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    fc84:	add	x0, x0, #0x318
    fc88:	mov	x1, x19
    fc8c:	mov	x2, x20
    fc90:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    fc94:	mov	x19, x0
    fc98:	cbnz	x0, fac4 <PyInit__decimal@@Base+0x9010>
    fc9c:	b	fcd4 <PyInit__decimal@@Base+0x9220>
    fca0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    fca4:	add	x0, x0, #0x318
    fca8:	mov	x1, x20
    fcac:	mov	x2, x21
    fcb0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    fcb4:	mov	x20, x0
    fcb8:	cbnz	x0, faf4 <PyInit__decimal@@Base+0x9040>
    fcbc:	ldr	x8, [x19]
    fcc0:	subs	x8, x8, #0x1
    fcc4:	str	x8, [x19]
    fcc8:	b.ne	fcd4 <PyInit__decimal@@Base+0x9220>  // b.any
    fccc:	mov	x0, x19
    fcd0:	bl	6510 <_Py_Dealloc@plt>
    fcd4:	mov	x21, xzr
    fcd8:	mov	x0, x21
    fcdc:	ldp	x20, x19, [sp, #64]
    fce0:	ldp	x22, x21, [sp, #48]
    fce4:	ldp	x29, x30, [sp, #32]
    fce8:	add	sp, sp, #0x50
    fcec:	ret
    fcf0:	ldr	x8, [x20]
    fcf4:	subs	x8, x8, #0x1
    fcf8:	str	x8, [x20]
    fcfc:	b.ne	fd08 <PyInit__decimal@@Base+0x9254>  // b.any
    fd00:	mov	x0, x20
    fd04:	bl	6510 <_Py_Dealloc@plt>
    fd08:	mov	x21, xzr
    fd0c:	str	xzr, [sp, #8]
    fd10:	b	fcd8 <PyInit__decimal@@Base+0x9224>
    fd14:	sub	sp, sp, #0x50
    fd18:	stp	x29, x30, [sp, #32]
    fd1c:	stp	x22, x21, [sp, #48]
    fd20:	stp	x20, x19, [sp, #64]
    fd24:	add	x29, sp, #0x20
    fd28:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
    fd2c:	ldr	x20, [x20, #4008]
    fd30:	mov	x8, x2
    fd34:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
    fd38:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
    fd3c:	mov	x19, x0
    fd40:	add	x2, x2, #0x77b
    fd44:	add	x3, x3, #0x7e0
    fd48:	add	x4, sp, #0x10
    fd4c:	add	x5, sp, #0x8
    fd50:	mov	x0, x1
    fd54:	mov	x1, x8
    fd58:	str	x20, [sp, #8]
    fd5c:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
    fd60:	cbz	w0, ffc4 <PyInit__decimal@@Base+0x9510>
    fd64:	ldr	x8, [sp, #8]
    fd68:	cmp	x8, x20
    fd6c:	b.eq	fdb0 <PyInit__decimal@@Base+0x92fc>  // b.none
    fd70:	ldr	x0, [x8, #8]
    fd74:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
    fd78:	add	x8, x8, #0x4b8
    fd7c:	cmp	x0, x8
    fd80:	b.eq	fdec <PyInit__decimal@@Base+0x9338>  // b.none
    fd84:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    fd88:	add	x1, x1, #0x4b8
    fd8c:	bl	6900 <PyType_IsSubtype@plt>
    fd90:	cbnz	w0, fdec <PyInit__decimal@@Base+0x9338>
    fd94:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    fd98:	ldr	x8, [x8, #3936]
    fd9c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    fda0:	add	x1, x1, #0x631
    fda4:	ldr	x0, [x8]
    fda8:	bl	6590 <PyErr_SetString@plt>
    fdac:	b	ffc4 <PyInit__decimal@@Base+0x9510>
    fdb0:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
    fdb4:	ldr	x0, [x21, #1400]
    fdb8:	sub	x2, x29, #0x8
    fdbc:	mov	x1, xzr
    fdc0:	bl	6680 <PyContextVar_Get@plt>
    fdc4:	tbnz	w0, #31, fff8 <PyInit__decimal@@Base+0x9544>
    fdc8:	ldur	x20, [x29, #-8]
    fdcc:	cbz	x20, ff0c <PyInit__decimal@@Base+0x9458>
    fdd0:	str	x20, [sp, #8]
    fdd4:	ldr	x8, [x20]
    fdd8:	subs	x8, x8, #0x1
    fddc:	str	x8, [x20]
    fde0:	b.ne	fdec <PyInit__decimal@@Base+0x9338>  // b.any
    fde4:	mov	x0, x20
    fde8:	bl	6510 <_Py_Dealloc@plt>
    fdec:	ldr	x0, [x19, #8]
    fdf0:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
    fdf4:	add	x21, x21, #0x318
    fdf8:	cmp	x0, x21
    fdfc:	b.eq	fe14 <PyInit__decimal@@Base+0x9360>  // b.none
    fe00:	ldr	x20, [sp, #8]
    fe04:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    fe08:	add	x1, x1, #0x318
    fe0c:	bl	6900 <PyType_IsSubtype@plt>
    fe10:	cbz	w0, feb4 <PyInit__decimal@@Base+0x9400>
    fe14:	ldr	x8, [x19]
    fe18:	add	x8, x8, #0x1
    fe1c:	str	x8, [x19]
    fe20:	ldr	x20, [sp, #16]
    fe24:	ldr	x0, [x20, #8]
    fe28:	cmp	x0, x21
    fe2c:	b.eq	fe44 <PyInit__decimal@@Base+0x9390>  // b.none
    fe30:	ldr	x21, [sp, #8]
    fe34:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
    fe38:	add	x1, x1, #0x318
    fe3c:	bl	6900 <PyType_IsSubtype@plt>
    fe40:	cbz	w0, fee0 <PyInit__decimal@@Base+0x942c>
    fe44:	ldr	x8, [x20]
    fe48:	add	x8, x8, #0x1
    fe4c:	str	x8, [x20]
    fe50:	add	x0, x19, #0x18
    fe54:	add	x1, x20, #0x18
    fe58:	bl	33184 <PyInit__decimal@@Base+0x2c6d0>
    fe5c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
    fe60:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    fe64:	ldr	x8, [x8, #4024]
    fe68:	ldr	x9, [x9, #3976]
    fe6c:	cmp	w0, #0x0
    fe70:	csel	x21, x9, x8, eq  // eq = none
    fe74:	ldr	x8, [x21]
    fe78:	add	x8, x8, #0x1
    fe7c:	str	x8, [x21]
    fe80:	ldr	x8, [x19]
    fe84:	subs	x8, x8, #0x1
    fe88:	str	x8, [x19]
    fe8c:	b.ne	fe98 <PyInit__decimal@@Base+0x93e4>  // b.any
    fe90:	mov	x0, x19
    fe94:	bl	6510 <_Py_Dealloc@plt>
    fe98:	ldr	x8, [x20]
    fe9c:	subs	x8, x8, #0x1
    fea0:	str	x8, [x20]
    fea4:	b.ne	ffc8 <PyInit__decimal@@Base+0x9514>  // b.any
    fea8:	mov	x0, x20
    feac:	bl	6510 <_Py_Dealloc@plt>
    feb0:	b	ffc8 <PyInit__decimal@@Base+0x9514>
    feb4:	ldr	x8, [x19, #8]
    feb8:	ldrb	w9, [x8, #171]
    febc:	tbnz	w9, #0, ff70 <PyInit__decimal@@Base+0x94bc>
    fec0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    fec4:	ldr	x9, [x9, #3936]
    fec8:	ldr	x2, [x8, #24]
    fecc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    fed0:	add	x1, x1, #0x263
    fed4:	ldr	x0, [x9]
    fed8:	bl	6950 <PyErr_Format@plt>
    fedc:	b	ffc4 <PyInit__decimal@@Base+0x9510>
    fee0:	ldr	x8, [x20, #8]
    fee4:	ldrb	w9, [x8, #171]
    fee8:	tbnz	w9, #0, ff90 <PyInit__decimal@@Base+0x94dc>
    feec:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
    fef0:	ldr	x9, [x9, #3936]
    fef4:	ldr	x2, [x8, #24]
    fef8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
    fefc:	add	x1, x1, #0x263
    ff00:	ldr	x0, [x9]
    ff04:	bl	6950 <PyErr_Format@plt>
    ff08:	b	ffac <PyInit__decimal@@Base+0x94f8>
    ff0c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
    ff10:	ldr	x22, [x8, #1496]
    ff14:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ff18:	add	x0, x0, #0x4b8
    ff1c:	mov	x1, xzr
    ff20:	bl	6780 <PyObject_CallObject@plt>
    ff24:	cbz	x0, fff8 <PyInit__decimal@@Base+0x9544>
    ff28:	ldp	q1, q0, [x22, #32]
    ff2c:	ldr	q2, [x22, #16]
    ff30:	mov	x20, x0
    ff34:	mov	x1, x20
    ff38:	stp	q1, q0, [x0, #32]
    ff3c:	str	q2, [x0, #16]
    ff40:	ldr	w8, [x22, #80]
    ff44:	stp	wzr, wzr, [x0, #44]
    ff48:	str	w8, [x0, #80]
    ff4c:	ldr	x0, [x21, #1400]
    ff50:	bl	65c0 <PyContextVar_Set@plt>
    ff54:	cbz	x0, ffe0 <PyInit__decimal@@Base+0x952c>
    ff58:	ldr	x8, [x0]
    ff5c:	subs	x8, x8, #0x1
    ff60:	str	x8, [x0]
    ff64:	b.ne	fdd0 <PyInit__decimal@@Base+0x931c>  // b.any
    ff68:	bl	6510 <_Py_Dealloc@plt>
    ff6c:	b	fdd0 <PyInit__decimal@@Base+0x931c>
    ff70:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ff74:	add	x0, x0, #0x318
    ff78:	mov	x1, x19
    ff7c:	mov	x2, x20
    ff80:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    ff84:	mov	x19, x0
    ff88:	cbnz	x0, fe20 <PyInit__decimal@@Base+0x936c>
    ff8c:	b	ffc4 <PyInit__decimal@@Base+0x9510>
    ff90:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
    ff94:	add	x0, x0, #0x318
    ff98:	mov	x1, x20
    ff9c:	mov	x2, x21
    ffa0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
    ffa4:	mov	x20, x0
    ffa8:	cbnz	x0, fe50 <PyInit__decimal@@Base+0x939c>
    ffac:	ldr	x8, [x19]
    ffb0:	subs	x8, x8, #0x1
    ffb4:	str	x8, [x19]
    ffb8:	b.ne	ffc4 <PyInit__decimal@@Base+0x9510>  // b.any
    ffbc:	mov	x0, x19
    ffc0:	bl	6510 <_Py_Dealloc@plt>
    ffc4:	mov	x21, xzr
    ffc8:	mov	x0, x21
    ffcc:	ldp	x20, x19, [sp, #64]
    ffd0:	ldp	x22, x21, [sp, #48]
    ffd4:	ldp	x29, x30, [sp, #32]
    ffd8:	add	sp, sp, #0x50
    ffdc:	ret
    ffe0:	ldr	x8, [x20]
    ffe4:	subs	x8, x8, #0x1
    ffe8:	str	x8, [x20]
    ffec:	b.ne	fff8 <PyInit__decimal@@Base+0x9544>  // b.any
    fff0:	mov	x0, x20
    fff4:	bl	6510 <_Py_Dealloc@plt>
    fff8:	mov	x21, xzr
    fffc:	str	xzr, [sp, #8]
   10000:	b	ffc8 <PyInit__decimal@@Base+0x9514>
   10004:	sub	sp, sp, #0x50
   10008:	stp	x29, x30, [sp, #32]
   1000c:	stp	x22, x21, [sp, #48]
   10010:	stp	x20, x19, [sp, #64]
   10014:	add	x29, sp, #0x20
   10018:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
   1001c:	ldr	x20, [x20, #4008]
   10020:	mov	x8, x2
   10024:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   10028:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
   1002c:	mov	x19, x0
   10030:	add	x2, x2, #0x77b
   10034:	add	x3, x3, #0x7f8
   10038:	add	x4, sp, #0x10
   1003c:	add	x5, sp, #0x8
   10040:	mov	x0, x1
   10044:	mov	x1, x8
   10048:	str	x20, [sp, #8]
   1004c:	str	wzr, [sp, #4]
   10050:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   10054:	cbz	w0, 1032c <PyInit__decimal@@Base+0x9878>
   10058:	ldr	x8, [sp, #8]
   1005c:	cmp	x8, x20
   10060:	b.eq	100a4 <PyInit__decimal@@Base+0x95f0>  // b.none
   10064:	ldr	x0, [x8, #8]
   10068:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1006c:	add	x8, x8, #0x4b8
   10070:	cmp	x0, x8
   10074:	b.eq	100e0 <PyInit__decimal@@Base+0x962c>  // b.none
   10078:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1007c:	add	x1, x1, #0x4b8
   10080:	bl	6900 <PyType_IsSubtype@plt>
   10084:	cbnz	w0, 100e0 <PyInit__decimal@@Base+0x962c>
   10088:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1008c:	ldr	x8, [x8, #3936]
   10090:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10094:	add	x1, x1, #0x631
   10098:	ldr	x0, [x8]
   1009c:	bl	6590 <PyErr_SetString@plt>
   100a0:	b	1032c <PyInit__decimal@@Base+0x9878>
   100a4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   100a8:	ldr	x0, [x21, #1400]
   100ac:	sub	x2, x29, #0x8
   100b0:	mov	x1, xzr
   100b4:	bl	6680 <PyContextVar_Get@plt>
   100b8:	tbnz	w0, #31, 10360 <PyInit__decimal@@Base+0x98ac>
   100bc:	ldur	x20, [x29, #-8]
   100c0:	cbz	x20, 10274 <PyInit__decimal@@Base+0x97c0>
   100c4:	str	x20, [sp, #8]
   100c8:	ldr	x8, [x20]
   100cc:	subs	x8, x8, #0x1
   100d0:	str	x8, [x20]
   100d4:	b.ne	100e0 <PyInit__decimal@@Base+0x962c>  // b.any
   100d8:	mov	x0, x20
   100dc:	bl	6510 <_Py_Dealloc@plt>
   100e0:	ldr	x0, [x19, #8]
   100e4:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
   100e8:	add	x21, x21, #0x318
   100ec:	cmp	x0, x21
   100f0:	b.eq	10108 <PyInit__decimal@@Base+0x9654>  // b.none
   100f4:	ldr	x20, [sp, #8]
   100f8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   100fc:	add	x1, x1, #0x318
   10100:	bl	6900 <PyType_IsSubtype@plt>
   10104:	cbz	w0, 1021c <PyInit__decimal@@Base+0x9768>
   10108:	ldr	x8, [x19]
   1010c:	add	x8, x8, #0x1
   10110:	str	x8, [x19]
   10114:	ldr	x20, [sp, #16]
   10118:	ldr	x0, [x20, #8]
   1011c:	cmp	x0, x21
   10120:	b.eq	10138 <PyInit__decimal@@Base+0x9684>  // b.none
   10124:	ldr	x21, [sp, #8]
   10128:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1012c:	add	x1, x1, #0x318
   10130:	bl	6900 <PyType_IsSubtype@plt>
   10134:	cbz	w0, 10248 <PyInit__decimal@@Base+0x9794>
   10138:	ldr	x8, [x20]
   1013c:	add	x8, x8, #0x1
   10140:	str	x8, [x20]
   10144:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10148:	add	x0, x0, #0x318
   1014c:	bl	6890 <_PyObject_New@plt>
   10150:	cbz	x0, 101ec <PyInit__decimal@@Base+0x9738>
   10154:	mov	w8, #0x30                  	// #48
   10158:	mov	x21, x0
   1015c:	strb	w8, [x0, #24]!
   10160:	mov	x9, #0xffffffffffffffff    	// #-1
   10164:	mov	w10, #0x4                   	// #4
   10168:	add	x8, x0, #0x30
   1016c:	stur	x9, [x0, #-8]
   10170:	stp	xzr, xzr, [x0, #8]
   10174:	stp	xzr, x10, [x0, #24]
   10178:	str	x8, [x0, #40]
   1017c:	ldr	x8, [sp, #8]
   10180:	add	x1, x19, #0x18
   10184:	add	x2, x20, #0x18
   10188:	add	x4, sp, #0x4
   1018c:	add	x3, x8, #0x10
   10190:	bl	2447c <PyInit__decimal@@Base+0x1d9c8>
   10194:	ldr	x8, [x19]
   10198:	subs	x8, x8, #0x1
   1019c:	str	x8, [x19]
   101a0:	b.ne	101ac <PyInit__decimal@@Base+0x96f8>  // b.any
   101a4:	mov	x0, x19
   101a8:	bl	6510 <_Py_Dealloc@plt>
   101ac:	ldr	x8, [x20]
   101b0:	subs	x8, x8, #0x1
   101b4:	str	x8, [x20]
   101b8:	b.ne	101c4 <PyInit__decimal@@Base+0x9710>  // b.any
   101bc:	mov	x0, x20
   101c0:	bl	6510 <_Py_Dealloc@plt>
   101c4:	ldr	x0, [sp, #8]
   101c8:	ldr	w1, [sp, #4]
   101cc:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   101d0:	cbz	w0, 10330 <PyInit__decimal@@Base+0x987c>
   101d4:	ldr	x8, [x21]
   101d8:	subs	x8, x8, #0x1
   101dc:	str	x8, [x21]
   101e0:	b.ne	1032c <PyInit__decimal@@Base+0x9878>  // b.any
   101e4:	mov	x0, x21
   101e8:	b	10328 <PyInit__decimal@@Base+0x9874>
   101ec:	ldr	x8, [x19]
   101f0:	subs	x8, x8, #0x1
   101f4:	str	x8, [x19]
   101f8:	b.ne	10204 <PyInit__decimal@@Base+0x9750>  // b.any
   101fc:	mov	x0, x19
   10200:	bl	6510 <_Py_Dealloc@plt>
   10204:	ldr	x8, [x20]
   10208:	subs	x8, x8, #0x1
   1020c:	str	x8, [x20]
   10210:	b.ne	1032c <PyInit__decimal@@Base+0x9878>  // b.any
   10214:	mov	x0, x20
   10218:	b	10328 <PyInit__decimal@@Base+0x9874>
   1021c:	ldr	x8, [x19, #8]
   10220:	ldrb	w9, [x8, #171]
   10224:	tbnz	w9, #0, 102d8 <PyInit__decimal@@Base+0x9824>
   10228:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1022c:	ldr	x9, [x9, #3936]
   10230:	ldr	x2, [x8, #24]
   10234:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10238:	add	x1, x1, #0x263
   1023c:	ldr	x0, [x9]
   10240:	bl	6950 <PyErr_Format@plt>
   10244:	b	1032c <PyInit__decimal@@Base+0x9878>
   10248:	ldr	x8, [x20, #8]
   1024c:	ldrb	w9, [x8, #171]
   10250:	tbnz	w9, #0, 102f8 <PyInit__decimal@@Base+0x9844>
   10254:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   10258:	ldr	x9, [x9, #3936]
   1025c:	ldr	x2, [x8, #24]
   10260:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10264:	add	x1, x1, #0x263
   10268:	ldr	x0, [x9]
   1026c:	bl	6950 <PyErr_Format@plt>
   10270:	b	10314 <PyInit__decimal@@Base+0x9860>
   10274:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   10278:	ldr	x22, [x8, #1496]
   1027c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10280:	add	x0, x0, #0x4b8
   10284:	mov	x1, xzr
   10288:	bl	6780 <PyObject_CallObject@plt>
   1028c:	cbz	x0, 10360 <PyInit__decimal@@Base+0x98ac>
   10290:	ldp	q1, q0, [x22, #32]
   10294:	ldr	q2, [x22, #16]
   10298:	mov	x20, x0
   1029c:	mov	x1, x20
   102a0:	stp	q1, q0, [x0, #32]
   102a4:	str	q2, [x0, #16]
   102a8:	ldr	w8, [x22, #80]
   102ac:	stp	wzr, wzr, [x0, #44]
   102b0:	str	w8, [x0, #80]
   102b4:	ldr	x0, [x21, #1400]
   102b8:	bl	65c0 <PyContextVar_Set@plt>
   102bc:	cbz	x0, 10348 <PyInit__decimal@@Base+0x9894>
   102c0:	ldr	x8, [x0]
   102c4:	subs	x8, x8, #0x1
   102c8:	str	x8, [x0]
   102cc:	b.ne	100c4 <PyInit__decimal@@Base+0x9610>  // b.any
   102d0:	bl	6510 <_Py_Dealloc@plt>
   102d4:	b	100c4 <PyInit__decimal@@Base+0x9610>
   102d8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   102dc:	add	x0, x0, #0x318
   102e0:	mov	x1, x19
   102e4:	mov	x2, x20
   102e8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   102ec:	mov	x19, x0
   102f0:	cbnz	x0, 10114 <PyInit__decimal@@Base+0x9660>
   102f4:	b	1032c <PyInit__decimal@@Base+0x9878>
   102f8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   102fc:	add	x0, x0, #0x318
   10300:	mov	x1, x20
   10304:	mov	x2, x21
   10308:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1030c:	mov	x20, x0
   10310:	cbnz	x0, 10144 <PyInit__decimal@@Base+0x9690>
   10314:	ldr	x8, [x19]
   10318:	subs	x8, x8, #0x1
   1031c:	str	x8, [x19]
   10320:	b.ne	1032c <PyInit__decimal@@Base+0x9878>  // b.any
   10324:	mov	x0, x19
   10328:	bl	6510 <_Py_Dealloc@plt>
   1032c:	mov	x21, xzr
   10330:	mov	x0, x21
   10334:	ldp	x20, x19, [sp, #64]
   10338:	ldp	x22, x21, [sp, #48]
   1033c:	ldp	x29, x30, [sp, #32]
   10340:	add	sp, sp, #0x50
   10344:	ret
   10348:	ldr	x8, [x20]
   1034c:	subs	x8, x8, #0x1
   10350:	str	x8, [x20]
   10354:	b.ne	10360 <PyInit__decimal@@Base+0x98ac>  // b.any
   10358:	mov	x0, x20
   1035c:	bl	6510 <_Py_Dealloc@plt>
   10360:	mov	x21, xzr
   10364:	str	xzr, [sp, #8]
   10368:	b	10330 <PyInit__decimal@@Base+0x987c>
   1036c:	sub	sp, sp, #0x50
   10370:	stp	x29, x30, [sp, #32]
   10374:	stp	x22, x21, [sp, #48]
   10378:	stp	x20, x19, [sp, #64]
   1037c:	add	x29, sp, #0x20
   10380:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
   10384:	ldr	x20, [x20, #4008]
   10388:	mov	x8, x2
   1038c:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   10390:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
   10394:	mov	x19, x0
   10398:	add	x2, x2, #0x77b
   1039c:	add	x3, x3, #0x810
   103a0:	add	x4, sp, #0x10
   103a4:	add	x5, sp, #0x8
   103a8:	mov	x0, x1
   103ac:	mov	x1, x8
   103b0:	str	x20, [sp, #8]
   103b4:	str	wzr, [sp, #4]
   103b8:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   103bc:	cbz	w0, 10694 <PyInit__decimal@@Base+0x9be0>
   103c0:	ldr	x8, [sp, #8]
   103c4:	cmp	x8, x20
   103c8:	b.eq	1040c <PyInit__decimal@@Base+0x9958>  // b.none
   103cc:	ldr	x0, [x8, #8]
   103d0:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   103d4:	add	x8, x8, #0x4b8
   103d8:	cmp	x0, x8
   103dc:	b.eq	10448 <PyInit__decimal@@Base+0x9994>  // b.none
   103e0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   103e4:	add	x1, x1, #0x4b8
   103e8:	bl	6900 <PyType_IsSubtype@plt>
   103ec:	cbnz	w0, 10448 <PyInit__decimal@@Base+0x9994>
   103f0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   103f4:	ldr	x8, [x8, #3936]
   103f8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   103fc:	add	x1, x1, #0x631
   10400:	ldr	x0, [x8]
   10404:	bl	6590 <PyErr_SetString@plt>
   10408:	b	10694 <PyInit__decimal@@Base+0x9be0>
   1040c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   10410:	ldr	x0, [x21, #1400]
   10414:	sub	x2, x29, #0x8
   10418:	mov	x1, xzr
   1041c:	bl	6680 <PyContextVar_Get@plt>
   10420:	tbnz	w0, #31, 106c8 <PyInit__decimal@@Base+0x9c14>
   10424:	ldur	x20, [x29, #-8]
   10428:	cbz	x20, 105dc <PyInit__decimal@@Base+0x9b28>
   1042c:	str	x20, [sp, #8]
   10430:	ldr	x8, [x20]
   10434:	subs	x8, x8, #0x1
   10438:	str	x8, [x20]
   1043c:	b.ne	10448 <PyInit__decimal@@Base+0x9994>  // b.any
   10440:	mov	x0, x20
   10444:	bl	6510 <_Py_Dealloc@plt>
   10448:	ldr	x0, [x19, #8]
   1044c:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
   10450:	add	x21, x21, #0x318
   10454:	cmp	x0, x21
   10458:	b.eq	10470 <PyInit__decimal@@Base+0x99bc>  // b.none
   1045c:	ldr	x20, [sp, #8]
   10460:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   10464:	add	x1, x1, #0x318
   10468:	bl	6900 <PyType_IsSubtype@plt>
   1046c:	cbz	w0, 10584 <PyInit__decimal@@Base+0x9ad0>
   10470:	ldr	x8, [x19]
   10474:	add	x8, x8, #0x1
   10478:	str	x8, [x19]
   1047c:	ldr	x20, [sp, #16]
   10480:	ldr	x0, [x20, #8]
   10484:	cmp	x0, x21
   10488:	b.eq	104a0 <PyInit__decimal@@Base+0x99ec>  // b.none
   1048c:	ldr	x21, [sp, #8]
   10490:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   10494:	add	x1, x1, #0x318
   10498:	bl	6900 <PyType_IsSubtype@plt>
   1049c:	cbz	w0, 105b0 <PyInit__decimal@@Base+0x9afc>
   104a0:	ldr	x8, [x20]
   104a4:	add	x8, x8, #0x1
   104a8:	str	x8, [x20]
   104ac:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   104b0:	add	x0, x0, #0x318
   104b4:	bl	6890 <_PyObject_New@plt>
   104b8:	cbz	x0, 10554 <PyInit__decimal@@Base+0x9aa0>
   104bc:	mov	w8, #0x30                  	// #48
   104c0:	mov	x21, x0
   104c4:	strb	w8, [x0, #24]!
   104c8:	mov	x9, #0xffffffffffffffff    	// #-1
   104cc:	mov	w10, #0x4                   	// #4
   104d0:	add	x8, x0, #0x30
   104d4:	stur	x9, [x0, #-8]
   104d8:	stp	xzr, xzr, [x0, #8]
   104dc:	stp	xzr, x10, [x0, #24]
   104e0:	str	x8, [x0, #40]
   104e4:	ldr	x8, [sp, #8]
   104e8:	add	x1, x19, #0x18
   104ec:	add	x2, x20, #0x18
   104f0:	add	x4, sp, #0x4
   104f4:	add	x3, x8, #0x10
   104f8:	bl	253a4 <PyInit__decimal@@Base+0x1e8f0>
   104fc:	ldr	x8, [x19]
   10500:	subs	x8, x8, #0x1
   10504:	str	x8, [x19]
   10508:	b.ne	10514 <PyInit__decimal@@Base+0x9a60>  // b.any
   1050c:	mov	x0, x19
   10510:	bl	6510 <_Py_Dealloc@plt>
   10514:	ldr	x8, [x20]
   10518:	subs	x8, x8, #0x1
   1051c:	str	x8, [x20]
   10520:	b.ne	1052c <PyInit__decimal@@Base+0x9a78>  // b.any
   10524:	mov	x0, x20
   10528:	bl	6510 <_Py_Dealloc@plt>
   1052c:	ldr	x0, [sp, #8]
   10530:	ldr	w1, [sp, #4]
   10534:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   10538:	cbz	w0, 10698 <PyInit__decimal@@Base+0x9be4>
   1053c:	ldr	x8, [x21]
   10540:	subs	x8, x8, #0x1
   10544:	str	x8, [x21]
   10548:	b.ne	10694 <PyInit__decimal@@Base+0x9be0>  // b.any
   1054c:	mov	x0, x21
   10550:	b	10690 <PyInit__decimal@@Base+0x9bdc>
   10554:	ldr	x8, [x19]
   10558:	subs	x8, x8, #0x1
   1055c:	str	x8, [x19]
   10560:	b.ne	1056c <PyInit__decimal@@Base+0x9ab8>  // b.any
   10564:	mov	x0, x19
   10568:	bl	6510 <_Py_Dealloc@plt>
   1056c:	ldr	x8, [x20]
   10570:	subs	x8, x8, #0x1
   10574:	str	x8, [x20]
   10578:	b.ne	10694 <PyInit__decimal@@Base+0x9be0>  // b.any
   1057c:	mov	x0, x20
   10580:	b	10690 <PyInit__decimal@@Base+0x9bdc>
   10584:	ldr	x8, [x19, #8]
   10588:	ldrb	w9, [x8, #171]
   1058c:	tbnz	w9, #0, 10640 <PyInit__decimal@@Base+0x9b8c>
   10590:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   10594:	ldr	x9, [x9, #3936]
   10598:	ldr	x2, [x8, #24]
   1059c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   105a0:	add	x1, x1, #0x263
   105a4:	ldr	x0, [x9]
   105a8:	bl	6950 <PyErr_Format@plt>
   105ac:	b	10694 <PyInit__decimal@@Base+0x9be0>
   105b0:	ldr	x8, [x20, #8]
   105b4:	ldrb	w9, [x8, #171]
   105b8:	tbnz	w9, #0, 10660 <PyInit__decimal@@Base+0x9bac>
   105bc:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   105c0:	ldr	x9, [x9, #3936]
   105c4:	ldr	x2, [x8, #24]
   105c8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   105cc:	add	x1, x1, #0x263
   105d0:	ldr	x0, [x9]
   105d4:	bl	6950 <PyErr_Format@plt>
   105d8:	b	1067c <PyInit__decimal@@Base+0x9bc8>
   105dc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   105e0:	ldr	x22, [x8, #1496]
   105e4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   105e8:	add	x0, x0, #0x4b8
   105ec:	mov	x1, xzr
   105f0:	bl	6780 <PyObject_CallObject@plt>
   105f4:	cbz	x0, 106c8 <PyInit__decimal@@Base+0x9c14>
   105f8:	ldp	q1, q0, [x22, #32]
   105fc:	ldr	q2, [x22, #16]
   10600:	mov	x20, x0
   10604:	mov	x1, x20
   10608:	stp	q1, q0, [x0, #32]
   1060c:	str	q2, [x0, #16]
   10610:	ldr	w8, [x22, #80]
   10614:	stp	wzr, wzr, [x0, #44]
   10618:	str	w8, [x0, #80]
   1061c:	ldr	x0, [x21, #1400]
   10620:	bl	65c0 <PyContextVar_Set@plt>
   10624:	cbz	x0, 106b0 <PyInit__decimal@@Base+0x9bfc>
   10628:	ldr	x8, [x0]
   1062c:	subs	x8, x8, #0x1
   10630:	str	x8, [x0]
   10634:	b.ne	1042c <PyInit__decimal@@Base+0x9978>  // b.any
   10638:	bl	6510 <_Py_Dealloc@plt>
   1063c:	b	1042c <PyInit__decimal@@Base+0x9978>
   10640:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10644:	add	x0, x0, #0x318
   10648:	mov	x1, x19
   1064c:	mov	x2, x20
   10650:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   10654:	mov	x19, x0
   10658:	cbnz	x0, 1047c <PyInit__decimal@@Base+0x99c8>
   1065c:	b	10694 <PyInit__decimal@@Base+0x9be0>
   10660:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10664:	add	x0, x0, #0x318
   10668:	mov	x1, x20
   1066c:	mov	x2, x21
   10670:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   10674:	mov	x20, x0
   10678:	cbnz	x0, 104ac <PyInit__decimal@@Base+0x99f8>
   1067c:	ldr	x8, [x19]
   10680:	subs	x8, x8, #0x1
   10684:	str	x8, [x19]
   10688:	b.ne	10694 <PyInit__decimal@@Base+0x9be0>  // b.any
   1068c:	mov	x0, x19
   10690:	bl	6510 <_Py_Dealloc@plt>
   10694:	mov	x21, xzr
   10698:	mov	x0, x21
   1069c:	ldp	x20, x19, [sp, #64]
   106a0:	ldp	x22, x21, [sp, #48]
   106a4:	ldp	x29, x30, [sp, #32]
   106a8:	add	sp, sp, #0x50
   106ac:	ret
   106b0:	ldr	x8, [x20]
   106b4:	subs	x8, x8, #0x1
   106b8:	str	x8, [x20]
   106bc:	b.ne	106c8 <PyInit__decimal@@Base+0x9c14>  // b.any
   106c0:	mov	x0, x20
   106c4:	bl	6510 <_Py_Dealloc@plt>
   106c8:	mov	x21, xzr
   106cc:	str	xzr, [sp, #8]
   106d0:	b	10698 <PyInit__decimal@@Base+0x9be4>
   106d4:	sub	sp, sp, #0x50
   106d8:	stp	x29, x30, [sp, #32]
   106dc:	stp	x22, x21, [sp, #48]
   106e0:	stp	x20, x19, [sp, #64]
   106e4:	add	x29, sp, #0x20
   106e8:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
   106ec:	ldr	x20, [x20, #4008]
   106f0:	mov	x8, x2
   106f4:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   106f8:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
   106fc:	mov	x19, x0
   10700:	add	x2, x2, #0x77b
   10704:	add	x3, x3, #0x828
   10708:	add	x4, sp, #0x10
   1070c:	add	x5, sp, #0x8
   10710:	mov	x0, x1
   10714:	mov	x1, x8
   10718:	str	x20, [sp, #8]
   1071c:	str	wzr, [sp, #4]
   10720:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   10724:	cbz	w0, 109fc <PyInit__decimal@@Base+0x9f48>
   10728:	ldr	x8, [sp, #8]
   1072c:	cmp	x8, x20
   10730:	b.eq	10774 <PyInit__decimal@@Base+0x9cc0>  // b.none
   10734:	ldr	x0, [x8, #8]
   10738:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1073c:	add	x8, x8, #0x4b8
   10740:	cmp	x0, x8
   10744:	b.eq	107b0 <PyInit__decimal@@Base+0x9cfc>  // b.none
   10748:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1074c:	add	x1, x1, #0x4b8
   10750:	bl	6900 <PyType_IsSubtype@plt>
   10754:	cbnz	w0, 107b0 <PyInit__decimal@@Base+0x9cfc>
   10758:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1075c:	ldr	x8, [x8, #3936]
   10760:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10764:	add	x1, x1, #0x631
   10768:	ldr	x0, [x8]
   1076c:	bl	6590 <PyErr_SetString@plt>
   10770:	b	109fc <PyInit__decimal@@Base+0x9f48>
   10774:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   10778:	ldr	x0, [x21, #1400]
   1077c:	sub	x2, x29, #0x8
   10780:	mov	x1, xzr
   10784:	bl	6680 <PyContextVar_Get@plt>
   10788:	tbnz	w0, #31, 10a30 <PyInit__decimal@@Base+0x9f7c>
   1078c:	ldur	x20, [x29, #-8]
   10790:	cbz	x20, 10944 <PyInit__decimal@@Base+0x9e90>
   10794:	str	x20, [sp, #8]
   10798:	ldr	x8, [x20]
   1079c:	subs	x8, x8, #0x1
   107a0:	str	x8, [x20]
   107a4:	b.ne	107b0 <PyInit__decimal@@Base+0x9cfc>  // b.any
   107a8:	mov	x0, x20
   107ac:	bl	6510 <_Py_Dealloc@plt>
   107b0:	ldr	x0, [x19, #8]
   107b4:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
   107b8:	add	x21, x21, #0x318
   107bc:	cmp	x0, x21
   107c0:	b.eq	107d8 <PyInit__decimal@@Base+0x9d24>  // b.none
   107c4:	ldr	x20, [sp, #8]
   107c8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   107cc:	add	x1, x1, #0x318
   107d0:	bl	6900 <PyType_IsSubtype@plt>
   107d4:	cbz	w0, 108ec <PyInit__decimal@@Base+0x9e38>
   107d8:	ldr	x8, [x19]
   107dc:	add	x8, x8, #0x1
   107e0:	str	x8, [x19]
   107e4:	ldr	x20, [sp, #16]
   107e8:	ldr	x0, [x20, #8]
   107ec:	cmp	x0, x21
   107f0:	b.eq	10808 <PyInit__decimal@@Base+0x9d54>  // b.none
   107f4:	ldr	x21, [sp, #8]
   107f8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   107fc:	add	x1, x1, #0x318
   10800:	bl	6900 <PyType_IsSubtype@plt>
   10804:	cbz	w0, 10918 <PyInit__decimal@@Base+0x9e64>
   10808:	ldr	x8, [x20]
   1080c:	add	x8, x8, #0x1
   10810:	str	x8, [x20]
   10814:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10818:	add	x0, x0, #0x318
   1081c:	bl	6890 <_PyObject_New@plt>
   10820:	cbz	x0, 108bc <PyInit__decimal@@Base+0x9e08>
   10824:	mov	w8, #0x30                  	// #48
   10828:	mov	x21, x0
   1082c:	strb	w8, [x0, #24]!
   10830:	mov	x9, #0xffffffffffffffff    	// #-1
   10834:	mov	w10, #0x4                   	// #4
   10838:	add	x8, x0, #0x30
   1083c:	stur	x9, [x0, #-8]
   10840:	stp	xzr, xzr, [x0, #8]
   10844:	stp	xzr, x10, [x0, #24]
   10848:	str	x8, [x0, #40]
   1084c:	ldr	x8, [sp, #8]
   10850:	add	x1, x19, #0x18
   10854:	add	x2, x20, #0x18
   10858:	add	x4, sp, #0x4
   1085c:	add	x3, x8, #0x10
   10860:	bl	26704 <PyInit__decimal@@Base+0x1fc50>
   10864:	ldr	x8, [x19]
   10868:	subs	x8, x8, #0x1
   1086c:	str	x8, [x19]
   10870:	b.ne	1087c <PyInit__decimal@@Base+0x9dc8>  // b.any
   10874:	mov	x0, x19
   10878:	bl	6510 <_Py_Dealloc@plt>
   1087c:	ldr	x8, [x20]
   10880:	subs	x8, x8, #0x1
   10884:	str	x8, [x20]
   10888:	b.ne	10894 <PyInit__decimal@@Base+0x9de0>  // b.any
   1088c:	mov	x0, x20
   10890:	bl	6510 <_Py_Dealloc@plt>
   10894:	ldr	x0, [sp, #8]
   10898:	ldr	w1, [sp, #4]
   1089c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   108a0:	cbz	w0, 10a00 <PyInit__decimal@@Base+0x9f4c>
   108a4:	ldr	x8, [x21]
   108a8:	subs	x8, x8, #0x1
   108ac:	str	x8, [x21]
   108b0:	b.ne	109fc <PyInit__decimal@@Base+0x9f48>  // b.any
   108b4:	mov	x0, x21
   108b8:	b	109f8 <PyInit__decimal@@Base+0x9f44>
   108bc:	ldr	x8, [x19]
   108c0:	subs	x8, x8, #0x1
   108c4:	str	x8, [x19]
   108c8:	b.ne	108d4 <PyInit__decimal@@Base+0x9e20>  // b.any
   108cc:	mov	x0, x19
   108d0:	bl	6510 <_Py_Dealloc@plt>
   108d4:	ldr	x8, [x20]
   108d8:	subs	x8, x8, #0x1
   108dc:	str	x8, [x20]
   108e0:	b.ne	109fc <PyInit__decimal@@Base+0x9f48>  // b.any
   108e4:	mov	x0, x20
   108e8:	b	109f8 <PyInit__decimal@@Base+0x9f44>
   108ec:	ldr	x8, [x19, #8]
   108f0:	ldrb	w9, [x8, #171]
   108f4:	tbnz	w9, #0, 109a8 <PyInit__decimal@@Base+0x9ef4>
   108f8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   108fc:	ldr	x9, [x9, #3936]
   10900:	ldr	x2, [x8, #24]
   10904:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10908:	add	x1, x1, #0x263
   1090c:	ldr	x0, [x9]
   10910:	bl	6950 <PyErr_Format@plt>
   10914:	b	109fc <PyInit__decimal@@Base+0x9f48>
   10918:	ldr	x8, [x20, #8]
   1091c:	ldrb	w9, [x8, #171]
   10920:	tbnz	w9, #0, 109c8 <PyInit__decimal@@Base+0x9f14>
   10924:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   10928:	ldr	x9, [x9, #3936]
   1092c:	ldr	x2, [x8, #24]
   10930:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10934:	add	x1, x1, #0x263
   10938:	ldr	x0, [x9]
   1093c:	bl	6950 <PyErr_Format@plt>
   10940:	b	109e4 <PyInit__decimal@@Base+0x9f30>
   10944:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   10948:	ldr	x22, [x8, #1496]
   1094c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10950:	add	x0, x0, #0x4b8
   10954:	mov	x1, xzr
   10958:	bl	6780 <PyObject_CallObject@plt>
   1095c:	cbz	x0, 10a30 <PyInit__decimal@@Base+0x9f7c>
   10960:	ldp	q1, q0, [x22, #32]
   10964:	ldr	q2, [x22, #16]
   10968:	mov	x20, x0
   1096c:	mov	x1, x20
   10970:	stp	q1, q0, [x0, #32]
   10974:	str	q2, [x0, #16]
   10978:	ldr	w8, [x22, #80]
   1097c:	stp	wzr, wzr, [x0, #44]
   10980:	str	w8, [x0, #80]
   10984:	ldr	x0, [x21, #1400]
   10988:	bl	65c0 <PyContextVar_Set@plt>
   1098c:	cbz	x0, 10a18 <PyInit__decimal@@Base+0x9f64>
   10990:	ldr	x8, [x0]
   10994:	subs	x8, x8, #0x1
   10998:	str	x8, [x0]
   1099c:	b.ne	10794 <PyInit__decimal@@Base+0x9ce0>  // b.any
   109a0:	bl	6510 <_Py_Dealloc@plt>
   109a4:	b	10794 <PyInit__decimal@@Base+0x9ce0>
   109a8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   109ac:	add	x0, x0, #0x318
   109b0:	mov	x1, x19
   109b4:	mov	x2, x20
   109b8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   109bc:	mov	x19, x0
   109c0:	cbnz	x0, 107e4 <PyInit__decimal@@Base+0x9d30>
   109c4:	b	109fc <PyInit__decimal@@Base+0x9f48>
   109c8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   109cc:	add	x0, x0, #0x318
   109d0:	mov	x1, x20
   109d4:	mov	x2, x21
   109d8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   109dc:	mov	x20, x0
   109e0:	cbnz	x0, 10814 <PyInit__decimal@@Base+0x9d60>
   109e4:	ldr	x8, [x19]
   109e8:	subs	x8, x8, #0x1
   109ec:	str	x8, [x19]
   109f0:	b.ne	109fc <PyInit__decimal@@Base+0x9f48>  // b.any
   109f4:	mov	x0, x19
   109f8:	bl	6510 <_Py_Dealloc@plt>
   109fc:	mov	x21, xzr
   10a00:	mov	x0, x21
   10a04:	ldp	x20, x19, [sp, #64]
   10a08:	ldp	x22, x21, [sp, #48]
   10a0c:	ldp	x29, x30, [sp, #32]
   10a10:	add	sp, sp, #0x50
   10a14:	ret
   10a18:	ldr	x8, [x20]
   10a1c:	subs	x8, x8, #0x1
   10a20:	str	x8, [x20]
   10a24:	b.ne	10a30 <PyInit__decimal@@Base+0x9f7c>  // b.any
   10a28:	mov	x0, x20
   10a2c:	bl	6510 <_Py_Dealloc@plt>
   10a30:	mov	x21, xzr
   10a34:	str	xzr, [sp, #8]
   10a38:	b	10a00 <PyInit__decimal@@Base+0x9f4c>
   10a3c:	sub	sp, sp, #0x50
   10a40:	stp	x29, x30, [sp, #32]
   10a44:	stp	x22, x21, [sp, #48]
   10a48:	stp	x20, x19, [sp, #64]
   10a4c:	add	x29, sp, #0x20
   10a50:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
   10a54:	ldr	x20, [x20, #4008]
   10a58:	mov	x8, x2
   10a5c:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   10a60:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
   10a64:	mov	x19, x0
   10a68:	add	x2, x2, #0x77b
   10a6c:	add	x3, x3, #0x840
   10a70:	add	x4, sp, #0x10
   10a74:	add	x5, sp, #0x8
   10a78:	mov	x0, x1
   10a7c:	mov	x1, x8
   10a80:	str	x20, [sp, #8]
   10a84:	str	wzr, [sp, #4]
   10a88:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   10a8c:	cbz	w0, 10d64 <PyInit__decimal@@Base+0xa2b0>
   10a90:	ldr	x8, [sp, #8]
   10a94:	cmp	x8, x20
   10a98:	b.eq	10adc <PyInit__decimal@@Base+0xa028>  // b.none
   10a9c:	ldr	x0, [x8, #8]
   10aa0:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   10aa4:	add	x8, x8, #0x4b8
   10aa8:	cmp	x0, x8
   10aac:	b.eq	10b18 <PyInit__decimal@@Base+0xa064>  // b.none
   10ab0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   10ab4:	add	x1, x1, #0x4b8
   10ab8:	bl	6900 <PyType_IsSubtype@plt>
   10abc:	cbnz	w0, 10b18 <PyInit__decimal@@Base+0xa064>
   10ac0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   10ac4:	ldr	x8, [x8, #3936]
   10ac8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10acc:	add	x1, x1, #0x631
   10ad0:	ldr	x0, [x8]
   10ad4:	bl	6590 <PyErr_SetString@plt>
   10ad8:	b	10d64 <PyInit__decimal@@Base+0xa2b0>
   10adc:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   10ae0:	ldr	x0, [x21, #1400]
   10ae4:	sub	x2, x29, #0x8
   10ae8:	mov	x1, xzr
   10aec:	bl	6680 <PyContextVar_Get@plt>
   10af0:	tbnz	w0, #31, 10d98 <PyInit__decimal@@Base+0xa2e4>
   10af4:	ldur	x20, [x29, #-8]
   10af8:	cbz	x20, 10cac <PyInit__decimal@@Base+0xa1f8>
   10afc:	str	x20, [sp, #8]
   10b00:	ldr	x8, [x20]
   10b04:	subs	x8, x8, #0x1
   10b08:	str	x8, [x20]
   10b0c:	b.ne	10b18 <PyInit__decimal@@Base+0xa064>  // b.any
   10b10:	mov	x0, x20
   10b14:	bl	6510 <_Py_Dealloc@plt>
   10b18:	ldr	x0, [x19, #8]
   10b1c:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
   10b20:	add	x21, x21, #0x318
   10b24:	cmp	x0, x21
   10b28:	b.eq	10b40 <PyInit__decimal@@Base+0xa08c>  // b.none
   10b2c:	ldr	x20, [sp, #8]
   10b30:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   10b34:	add	x1, x1, #0x318
   10b38:	bl	6900 <PyType_IsSubtype@plt>
   10b3c:	cbz	w0, 10c54 <PyInit__decimal@@Base+0xa1a0>
   10b40:	ldr	x8, [x19]
   10b44:	add	x8, x8, #0x1
   10b48:	str	x8, [x19]
   10b4c:	ldr	x20, [sp, #16]
   10b50:	ldr	x0, [x20, #8]
   10b54:	cmp	x0, x21
   10b58:	b.eq	10b70 <PyInit__decimal@@Base+0xa0bc>  // b.none
   10b5c:	ldr	x21, [sp, #8]
   10b60:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   10b64:	add	x1, x1, #0x318
   10b68:	bl	6900 <PyType_IsSubtype@plt>
   10b6c:	cbz	w0, 10c80 <PyInit__decimal@@Base+0xa1cc>
   10b70:	ldr	x8, [x20]
   10b74:	add	x8, x8, #0x1
   10b78:	str	x8, [x20]
   10b7c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10b80:	add	x0, x0, #0x318
   10b84:	bl	6890 <_PyObject_New@plt>
   10b88:	cbz	x0, 10c24 <PyInit__decimal@@Base+0xa170>
   10b8c:	mov	w8, #0x30                  	// #48
   10b90:	mov	x21, x0
   10b94:	strb	w8, [x0, #24]!
   10b98:	mov	x9, #0xffffffffffffffff    	// #-1
   10b9c:	mov	w10, #0x4                   	// #4
   10ba0:	add	x8, x0, #0x30
   10ba4:	stur	x9, [x0, #-8]
   10ba8:	stp	xzr, xzr, [x0, #8]
   10bac:	stp	xzr, x10, [x0, #24]
   10bb0:	str	x8, [x0, #40]
   10bb4:	ldr	x8, [sp, #8]
   10bb8:	add	x1, x19, #0x18
   10bbc:	add	x2, x20, #0x18
   10bc0:	add	x4, sp, #0x4
   10bc4:	add	x3, x8, #0x10
   10bc8:	bl	259b8 <PyInit__decimal@@Base+0x1ef04>
   10bcc:	ldr	x8, [x19]
   10bd0:	subs	x8, x8, #0x1
   10bd4:	str	x8, [x19]
   10bd8:	b.ne	10be4 <PyInit__decimal@@Base+0xa130>  // b.any
   10bdc:	mov	x0, x19
   10be0:	bl	6510 <_Py_Dealloc@plt>
   10be4:	ldr	x8, [x20]
   10be8:	subs	x8, x8, #0x1
   10bec:	str	x8, [x20]
   10bf0:	b.ne	10bfc <PyInit__decimal@@Base+0xa148>  // b.any
   10bf4:	mov	x0, x20
   10bf8:	bl	6510 <_Py_Dealloc@plt>
   10bfc:	ldr	x0, [sp, #8]
   10c00:	ldr	w1, [sp, #4]
   10c04:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   10c08:	cbz	w0, 10d68 <PyInit__decimal@@Base+0xa2b4>
   10c0c:	ldr	x8, [x21]
   10c10:	subs	x8, x8, #0x1
   10c14:	str	x8, [x21]
   10c18:	b.ne	10d64 <PyInit__decimal@@Base+0xa2b0>  // b.any
   10c1c:	mov	x0, x21
   10c20:	b	10d60 <PyInit__decimal@@Base+0xa2ac>
   10c24:	ldr	x8, [x19]
   10c28:	subs	x8, x8, #0x1
   10c2c:	str	x8, [x19]
   10c30:	b.ne	10c3c <PyInit__decimal@@Base+0xa188>  // b.any
   10c34:	mov	x0, x19
   10c38:	bl	6510 <_Py_Dealloc@plt>
   10c3c:	ldr	x8, [x20]
   10c40:	subs	x8, x8, #0x1
   10c44:	str	x8, [x20]
   10c48:	b.ne	10d64 <PyInit__decimal@@Base+0xa2b0>  // b.any
   10c4c:	mov	x0, x20
   10c50:	b	10d60 <PyInit__decimal@@Base+0xa2ac>
   10c54:	ldr	x8, [x19, #8]
   10c58:	ldrb	w9, [x8, #171]
   10c5c:	tbnz	w9, #0, 10d10 <PyInit__decimal@@Base+0xa25c>
   10c60:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   10c64:	ldr	x9, [x9, #3936]
   10c68:	ldr	x2, [x8, #24]
   10c6c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10c70:	add	x1, x1, #0x263
   10c74:	ldr	x0, [x9]
   10c78:	bl	6950 <PyErr_Format@plt>
   10c7c:	b	10d64 <PyInit__decimal@@Base+0xa2b0>
   10c80:	ldr	x8, [x20, #8]
   10c84:	ldrb	w9, [x8, #171]
   10c88:	tbnz	w9, #0, 10d30 <PyInit__decimal@@Base+0xa27c>
   10c8c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   10c90:	ldr	x9, [x9, #3936]
   10c94:	ldr	x2, [x8, #24]
   10c98:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10c9c:	add	x1, x1, #0x263
   10ca0:	ldr	x0, [x9]
   10ca4:	bl	6950 <PyErr_Format@plt>
   10ca8:	b	10d4c <PyInit__decimal@@Base+0xa298>
   10cac:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   10cb0:	ldr	x22, [x8, #1496]
   10cb4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10cb8:	add	x0, x0, #0x4b8
   10cbc:	mov	x1, xzr
   10cc0:	bl	6780 <PyObject_CallObject@plt>
   10cc4:	cbz	x0, 10d98 <PyInit__decimal@@Base+0xa2e4>
   10cc8:	ldp	q1, q0, [x22, #32]
   10ccc:	ldr	q2, [x22, #16]
   10cd0:	mov	x20, x0
   10cd4:	mov	x1, x20
   10cd8:	stp	q1, q0, [x0, #32]
   10cdc:	str	q2, [x0, #16]
   10ce0:	ldr	w8, [x22, #80]
   10ce4:	stp	wzr, wzr, [x0, #44]
   10ce8:	str	w8, [x0, #80]
   10cec:	ldr	x0, [x21, #1400]
   10cf0:	bl	65c0 <PyContextVar_Set@plt>
   10cf4:	cbz	x0, 10d80 <PyInit__decimal@@Base+0xa2cc>
   10cf8:	ldr	x8, [x0]
   10cfc:	subs	x8, x8, #0x1
   10d00:	str	x8, [x0]
   10d04:	b.ne	10afc <PyInit__decimal@@Base+0xa048>  // b.any
   10d08:	bl	6510 <_Py_Dealloc@plt>
   10d0c:	b	10afc <PyInit__decimal@@Base+0xa048>
   10d10:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10d14:	add	x0, x0, #0x318
   10d18:	mov	x1, x19
   10d1c:	mov	x2, x20
   10d20:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   10d24:	mov	x19, x0
   10d28:	cbnz	x0, 10b4c <PyInit__decimal@@Base+0xa098>
   10d2c:	b	10d64 <PyInit__decimal@@Base+0xa2b0>
   10d30:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10d34:	add	x0, x0, #0x318
   10d38:	mov	x1, x20
   10d3c:	mov	x2, x21
   10d40:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   10d44:	mov	x20, x0
   10d48:	cbnz	x0, 10b7c <PyInit__decimal@@Base+0xa0c8>
   10d4c:	ldr	x8, [x19]
   10d50:	subs	x8, x8, #0x1
   10d54:	str	x8, [x19]
   10d58:	b.ne	10d64 <PyInit__decimal@@Base+0xa2b0>  // b.any
   10d5c:	mov	x0, x19
   10d60:	bl	6510 <_Py_Dealloc@plt>
   10d64:	mov	x21, xzr
   10d68:	mov	x0, x21
   10d6c:	ldp	x20, x19, [sp, #64]
   10d70:	ldp	x22, x21, [sp, #48]
   10d74:	ldp	x29, x30, [sp, #32]
   10d78:	add	sp, sp, #0x50
   10d7c:	ret
   10d80:	ldr	x8, [x20]
   10d84:	subs	x8, x8, #0x1
   10d88:	str	x8, [x20]
   10d8c:	b.ne	10d98 <PyInit__decimal@@Base+0xa2e4>  // b.any
   10d90:	mov	x0, x20
   10d94:	bl	6510 <_Py_Dealloc@plt>
   10d98:	mov	x21, xzr
   10d9c:	str	xzr, [sp, #8]
   10da0:	b	10d68 <PyInit__decimal@@Base+0xa2b4>
   10da4:	sub	sp, sp, #0x50
   10da8:	stp	x29, x30, [sp, #32]
   10dac:	stp	x22, x21, [sp, #48]
   10db0:	stp	x20, x19, [sp, #64]
   10db4:	add	x29, sp, #0x20
   10db8:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
   10dbc:	ldr	x20, [x20, #4008]
   10dc0:	mov	x8, x2
   10dc4:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   10dc8:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
   10dcc:	mov	x19, x0
   10dd0:	add	x2, x2, #0x77b
   10dd4:	add	x3, x3, #0x858
   10dd8:	add	x4, sp, #0x10
   10ddc:	add	x5, sp, #0x8
   10de0:	mov	x0, x1
   10de4:	mov	x1, x8
   10de8:	str	x20, [sp, #8]
   10dec:	str	wzr, [sp, #4]
   10df0:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   10df4:	cbz	w0, 110cc <PyInit__decimal@@Base+0xa618>
   10df8:	ldr	x8, [sp, #8]
   10dfc:	cmp	x8, x20
   10e00:	b.eq	10e44 <PyInit__decimal@@Base+0xa390>  // b.none
   10e04:	ldr	x0, [x8, #8]
   10e08:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   10e0c:	add	x8, x8, #0x4b8
   10e10:	cmp	x0, x8
   10e14:	b.eq	10e80 <PyInit__decimal@@Base+0xa3cc>  // b.none
   10e18:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   10e1c:	add	x1, x1, #0x4b8
   10e20:	bl	6900 <PyType_IsSubtype@plt>
   10e24:	cbnz	w0, 10e80 <PyInit__decimal@@Base+0xa3cc>
   10e28:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   10e2c:	ldr	x8, [x8, #3936]
   10e30:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10e34:	add	x1, x1, #0x631
   10e38:	ldr	x0, [x8]
   10e3c:	bl	6590 <PyErr_SetString@plt>
   10e40:	b	110cc <PyInit__decimal@@Base+0xa618>
   10e44:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   10e48:	ldr	x0, [x21, #1400]
   10e4c:	sub	x2, x29, #0x8
   10e50:	mov	x1, xzr
   10e54:	bl	6680 <PyContextVar_Get@plt>
   10e58:	tbnz	w0, #31, 11100 <PyInit__decimal@@Base+0xa64c>
   10e5c:	ldur	x20, [x29, #-8]
   10e60:	cbz	x20, 11014 <PyInit__decimal@@Base+0xa560>
   10e64:	str	x20, [sp, #8]
   10e68:	ldr	x8, [x20]
   10e6c:	subs	x8, x8, #0x1
   10e70:	str	x8, [x20]
   10e74:	b.ne	10e80 <PyInit__decimal@@Base+0xa3cc>  // b.any
   10e78:	mov	x0, x20
   10e7c:	bl	6510 <_Py_Dealloc@plt>
   10e80:	ldr	x0, [x19, #8]
   10e84:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
   10e88:	add	x21, x21, #0x318
   10e8c:	cmp	x0, x21
   10e90:	b.eq	10ea8 <PyInit__decimal@@Base+0xa3f4>  // b.none
   10e94:	ldr	x20, [sp, #8]
   10e98:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   10e9c:	add	x1, x1, #0x318
   10ea0:	bl	6900 <PyType_IsSubtype@plt>
   10ea4:	cbz	w0, 10fbc <PyInit__decimal@@Base+0xa508>
   10ea8:	ldr	x8, [x19]
   10eac:	add	x8, x8, #0x1
   10eb0:	str	x8, [x19]
   10eb4:	ldr	x20, [sp, #16]
   10eb8:	ldr	x0, [x20, #8]
   10ebc:	cmp	x0, x21
   10ec0:	b.eq	10ed8 <PyInit__decimal@@Base+0xa424>  // b.none
   10ec4:	ldr	x21, [sp, #8]
   10ec8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   10ecc:	add	x1, x1, #0x318
   10ed0:	bl	6900 <PyType_IsSubtype@plt>
   10ed4:	cbz	w0, 10fe8 <PyInit__decimal@@Base+0xa534>
   10ed8:	ldr	x8, [x20]
   10edc:	add	x8, x8, #0x1
   10ee0:	str	x8, [x20]
   10ee4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   10ee8:	add	x0, x0, #0x318
   10eec:	bl	6890 <_PyObject_New@plt>
   10ef0:	cbz	x0, 10f8c <PyInit__decimal@@Base+0xa4d8>
   10ef4:	mov	w8, #0x30                  	// #48
   10ef8:	mov	x21, x0
   10efc:	strb	w8, [x0, #24]!
   10f00:	mov	x9, #0xffffffffffffffff    	// #-1
   10f04:	mov	w10, #0x4                   	// #4
   10f08:	add	x8, x0, #0x30
   10f0c:	stur	x9, [x0, #-8]
   10f10:	stp	xzr, xzr, [x0, #8]
   10f14:	stp	xzr, x10, [x0, #24]
   10f18:	str	x8, [x0, #40]
   10f1c:	ldr	x8, [sp, #8]
   10f20:	add	x1, x19, #0x18
   10f24:	add	x2, x20, #0x18
   10f28:	add	x4, sp, #0x4
   10f2c:	add	x3, x8, #0x10
   10f30:	bl	25e74 <PyInit__decimal@@Base+0x1f3c0>
   10f34:	ldr	x8, [x19]
   10f38:	subs	x8, x8, #0x1
   10f3c:	str	x8, [x19]
   10f40:	b.ne	10f4c <PyInit__decimal@@Base+0xa498>  // b.any
   10f44:	mov	x0, x19
   10f48:	bl	6510 <_Py_Dealloc@plt>
   10f4c:	ldr	x8, [x20]
   10f50:	subs	x8, x8, #0x1
   10f54:	str	x8, [x20]
   10f58:	b.ne	10f64 <PyInit__decimal@@Base+0xa4b0>  // b.any
   10f5c:	mov	x0, x20
   10f60:	bl	6510 <_Py_Dealloc@plt>
   10f64:	ldr	x0, [sp, #8]
   10f68:	ldr	w1, [sp, #4]
   10f6c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   10f70:	cbz	w0, 110d0 <PyInit__decimal@@Base+0xa61c>
   10f74:	ldr	x8, [x21]
   10f78:	subs	x8, x8, #0x1
   10f7c:	str	x8, [x21]
   10f80:	b.ne	110cc <PyInit__decimal@@Base+0xa618>  // b.any
   10f84:	mov	x0, x21
   10f88:	b	110c8 <PyInit__decimal@@Base+0xa614>
   10f8c:	ldr	x8, [x19]
   10f90:	subs	x8, x8, #0x1
   10f94:	str	x8, [x19]
   10f98:	b.ne	10fa4 <PyInit__decimal@@Base+0xa4f0>  // b.any
   10f9c:	mov	x0, x19
   10fa0:	bl	6510 <_Py_Dealloc@plt>
   10fa4:	ldr	x8, [x20]
   10fa8:	subs	x8, x8, #0x1
   10fac:	str	x8, [x20]
   10fb0:	b.ne	110cc <PyInit__decimal@@Base+0xa618>  // b.any
   10fb4:	mov	x0, x20
   10fb8:	b	110c8 <PyInit__decimal@@Base+0xa614>
   10fbc:	ldr	x8, [x19, #8]
   10fc0:	ldrb	w9, [x8, #171]
   10fc4:	tbnz	w9, #0, 11078 <PyInit__decimal@@Base+0xa5c4>
   10fc8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   10fcc:	ldr	x9, [x9, #3936]
   10fd0:	ldr	x2, [x8, #24]
   10fd4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   10fd8:	add	x1, x1, #0x263
   10fdc:	ldr	x0, [x9]
   10fe0:	bl	6950 <PyErr_Format@plt>
   10fe4:	b	110cc <PyInit__decimal@@Base+0xa618>
   10fe8:	ldr	x8, [x20, #8]
   10fec:	ldrb	w9, [x8, #171]
   10ff0:	tbnz	w9, #0, 11098 <PyInit__decimal@@Base+0xa5e4>
   10ff4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   10ff8:	ldr	x9, [x9, #3936]
   10ffc:	ldr	x2, [x8, #24]
   11000:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11004:	add	x1, x1, #0x263
   11008:	ldr	x0, [x9]
   1100c:	bl	6950 <PyErr_Format@plt>
   11010:	b	110b4 <PyInit__decimal@@Base+0xa600>
   11014:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11018:	ldr	x22, [x8, #1496]
   1101c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   11020:	add	x0, x0, #0x4b8
   11024:	mov	x1, xzr
   11028:	bl	6780 <PyObject_CallObject@plt>
   1102c:	cbz	x0, 11100 <PyInit__decimal@@Base+0xa64c>
   11030:	ldp	q1, q0, [x22, #32]
   11034:	ldr	q2, [x22, #16]
   11038:	mov	x20, x0
   1103c:	mov	x1, x20
   11040:	stp	q1, q0, [x0, #32]
   11044:	str	q2, [x0, #16]
   11048:	ldr	w8, [x22, #80]
   1104c:	stp	wzr, wzr, [x0, #44]
   11050:	str	w8, [x0, #80]
   11054:	ldr	x0, [x21, #1400]
   11058:	bl	65c0 <PyContextVar_Set@plt>
   1105c:	cbz	x0, 110e8 <PyInit__decimal@@Base+0xa634>
   11060:	ldr	x8, [x0]
   11064:	subs	x8, x8, #0x1
   11068:	str	x8, [x0]
   1106c:	b.ne	10e64 <PyInit__decimal@@Base+0xa3b0>  // b.any
   11070:	bl	6510 <_Py_Dealloc@plt>
   11074:	b	10e64 <PyInit__decimal@@Base+0xa3b0>
   11078:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1107c:	add	x0, x0, #0x318
   11080:	mov	x1, x19
   11084:	mov	x2, x20
   11088:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1108c:	mov	x19, x0
   11090:	cbnz	x0, 10eb4 <PyInit__decimal@@Base+0xa400>
   11094:	b	110cc <PyInit__decimal@@Base+0xa618>
   11098:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1109c:	add	x0, x0, #0x318
   110a0:	mov	x1, x20
   110a4:	mov	x2, x21
   110a8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   110ac:	mov	x20, x0
   110b0:	cbnz	x0, 10ee4 <PyInit__decimal@@Base+0xa430>
   110b4:	ldr	x8, [x19]
   110b8:	subs	x8, x8, #0x1
   110bc:	str	x8, [x19]
   110c0:	b.ne	110cc <PyInit__decimal@@Base+0xa618>  // b.any
   110c4:	mov	x0, x19
   110c8:	bl	6510 <_Py_Dealloc@plt>
   110cc:	mov	x21, xzr
   110d0:	mov	x0, x21
   110d4:	ldp	x20, x19, [sp, #64]
   110d8:	ldp	x22, x21, [sp, #48]
   110dc:	ldp	x29, x30, [sp, #32]
   110e0:	add	sp, sp, #0x50
   110e4:	ret
   110e8:	ldr	x8, [x20]
   110ec:	subs	x8, x8, #0x1
   110f0:	str	x8, [x20]
   110f4:	b.ne	11100 <PyInit__decimal@@Base+0xa64c>  // b.any
   110f8:	mov	x0, x20
   110fc:	bl	6510 <_Py_Dealloc@plt>
   11100:	mov	x21, xzr
   11104:	str	xzr, [sp, #8]
   11108:	b	110d0 <PyInit__decimal@@Base+0xa61c>
   1110c:	sub	sp, sp, #0x50
   11110:	stp	x29, x30, [sp, #32]
   11114:	stp	x22, x21, [sp, #48]
   11118:	stp	x20, x19, [sp, #64]
   1111c:	add	x29, sp, #0x20
   11120:	adrp	x20, 50000 <PyInit__decimal@@Base+0x4954c>
   11124:	ldr	x20, [x20, #4008]
   11128:	mov	x8, x2
   1112c:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   11130:	adrp	x3, 52000 <PyInit__decimal@@Base+0x4b54c>
   11134:	mov	x19, x0
   11138:	add	x2, x2, #0x77b
   1113c:	add	x3, x3, #0x870
   11140:	add	x4, sp, #0x10
   11144:	add	x5, sp, #0x8
   11148:	mov	x0, x1
   1114c:	mov	x1, x8
   11150:	str	x20, [sp, #8]
   11154:	str	wzr, [sp, #4]
   11158:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   1115c:	cbz	w0, 11434 <PyInit__decimal@@Base+0xa980>
   11160:	ldr	x8, [sp, #8]
   11164:	cmp	x8, x20
   11168:	b.eq	111ac <PyInit__decimal@@Base+0xa6f8>  // b.none
   1116c:	ldr	x0, [x8, #8]
   11170:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   11174:	add	x8, x8, #0x4b8
   11178:	cmp	x0, x8
   1117c:	b.eq	111e8 <PyInit__decimal@@Base+0xa734>  // b.none
   11180:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   11184:	add	x1, x1, #0x4b8
   11188:	bl	6900 <PyType_IsSubtype@plt>
   1118c:	cbnz	w0, 111e8 <PyInit__decimal@@Base+0xa734>
   11190:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   11194:	ldr	x8, [x8, #3936]
   11198:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1119c:	add	x1, x1, #0x631
   111a0:	ldr	x0, [x8]
   111a4:	bl	6590 <PyErr_SetString@plt>
   111a8:	b	11434 <PyInit__decimal@@Base+0xa980>
   111ac:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   111b0:	ldr	x0, [x21, #1400]
   111b4:	sub	x2, x29, #0x8
   111b8:	mov	x1, xzr
   111bc:	bl	6680 <PyContextVar_Get@plt>
   111c0:	tbnz	w0, #31, 11468 <PyInit__decimal@@Base+0xa9b4>
   111c4:	ldur	x20, [x29, #-8]
   111c8:	cbz	x20, 1137c <PyInit__decimal@@Base+0xa8c8>
   111cc:	str	x20, [sp, #8]
   111d0:	ldr	x8, [x20]
   111d4:	subs	x8, x8, #0x1
   111d8:	str	x8, [x20]
   111dc:	b.ne	111e8 <PyInit__decimal@@Base+0xa734>  // b.any
   111e0:	mov	x0, x20
   111e4:	bl	6510 <_Py_Dealloc@plt>
   111e8:	ldr	x0, [x19, #8]
   111ec:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
   111f0:	add	x21, x21, #0x318
   111f4:	cmp	x0, x21
   111f8:	b.eq	11210 <PyInit__decimal@@Base+0xa75c>  // b.none
   111fc:	ldr	x20, [sp, #8]
   11200:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   11204:	add	x1, x1, #0x318
   11208:	bl	6900 <PyType_IsSubtype@plt>
   1120c:	cbz	w0, 11324 <PyInit__decimal@@Base+0xa870>
   11210:	ldr	x8, [x19]
   11214:	add	x8, x8, #0x1
   11218:	str	x8, [x19]
   1121c:	ldr	x20, [sp, #16]
   11220:	ldr	x0, [x20, #8]
   11224:	cmp	x0, x21
   11228:	b.eq	11240 <PyInit__decimal@@Base+0xa78c>  // b.none
   1122c:	ldr	x21, [sp, #8]
   11230:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   11234:	add	x1, x1, #0x318
   11238:	bl	6900 <PyType_IsSubtype@plt>
   1123c:	cbz	w0, 11350 <PyInit__decimal@@Base+0xa89c>
   11240:	ldr	x8, [x20]
   11244:	add	x8, x8, #0x1
   11248:	str	x8, [x20]
   1124c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   11250:	add	x0, x0, #0x318
   11254:	bl	6890 <_PyObject_New@plt>
   11258:	cbz	x0, 112f4 <PyInit__decimal@@Base+0xa840>
   1125c:	mov	w8, #0x30                  	// #48
   11260:	mov	x21, x0
   11264:	strb	w8, [x0, #24]!
   11268:	mov	x9, #0xffffffffffffffff    	// #-1
   1126c:	mov	w10, #0x4                   	// #4
   11270:	add	x8, x0, #0x30
   11274:	stur	x9, [x0, #-8]
   11278:	stp	xzr, xzr, [x0, #8]
   1127c:	stp	xzr, x10, [x0, #24]
   11280:	str	x8, [x0, #40]
   11284:	ldr	x8, [sp, #8]
   11288:	add	x1, x19, #0x18
   1128c:	add	x2, x20, #0x18
   11290:	add	x4, sp, #0x4
   11294:	add	x3, x8, #0x10
   11298:	bl	263c4 <PyInit__decimal@@Base+0x1f910>
   1129c:	ldr	x8, [x19]
   112a0:	subs	x8, x8, #0x1
   112a4:	str	x8, [x19]
   112a8:	b.ne	112b4 <PyInit__decimal@@Base+0xa800>  // b.any
   112ac:	mov	x0, x19
   112b0:	bl	6510 <_Py_Dealloc@plt>
   112b4:	ldr	x8, [x20]
   112b8:	subs	x8, x8, #0x1
   112bc:	str	x8, [x20]
   112c0:	b.ne	112cc <PyInit__decimal@@Base+0xa818>  // b.any
   112c4:	mov	x0, x20
   112c8:	bl	6510 <_Py_Dealloc@plt>
   112cc:	ldr	x0, [sp, #8]
   112d0:	ldr	w1, [sp, #4]
   112d4:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   112d8:	cbz	w0, 11438 <PyInit__decimal@@Base+0xa984>
   112dc:	ldr	x8, [x21]
   112e0:	subs	x8, x8, #0x1
   112e4:	str	x8, [x21]
   112e8:	b.ne	11434 <PyInit__decimal@@Base+0xa980>  // b.any
   112ec:	mov	x0, x21
   112f0:	b	11430 <PyInit__decimal@@Base+0xa97c>
   112f4:	ldr	x8, [x19]
   112f8:	subs	x8, x8, #0x1
   112fc:	str	x8, [x19]
   11300:	b.ne	1130c <PyInit__decimal@@Base+0xa858>  // b.any
   11304:	mov	x0, x19
   11308:	bl	6510 <_Py_Dealloc@plt>
   1130c:	ldr	x8, [x20]
   11310:	subs	x8, x8, #0x1
   11314:	str	x8, [x20]
   11318:	b.ne	11434 <PyInit__decimal@@Base+0xa980>  // b.any
   1131c:	mov	x0, x20
   11320:	b	11430 <PyInit__decimal@@Base+0xa97c>
   11324:	ldr	x8, [x19, #8]
   11328:	ldrb	w9, [x8, #171]
   1132c:	tbnz	w9, #0, 113e0 <PyInit__decimal@@Base+0xa92c>
   11330:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   11334:	ldr	x9, [x9, #3936]
   11338:	ldr	x2, [x8, #24]
   1133c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11340:	add	x1, x1, #0x263
   11344:	ldr	x0, [x9]
   11348:	bl	6950 <PyErr_Format@plt>
   1134c:	b	11434 <PyInit__decimal@@Base+0xa980>
   11350:	ldr	x8, [x20, #8]
   11354:	ldrb	w9, [x8, #171]
   11358:	tbnz	w9, #0, 11400 <PyInit__decimal@@Base+0xa94c>
   1135c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   11360:	ldr	x9, [x9, #3936]
   11364:	ldr	x2, [x8, #24]
   11368:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1136c:	add	x1, x1, #0x263
   11370:	ldr	x0, [x9]
   11374:	bl	6950 <PyErr_Format@plt>
   11378:	b	1141c <PyInit__decimal@@Base+0xa968>
   1137c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11380:	ldr	x22, [x8, #1496]
   11384:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   11388:	add	x0, x0, #0x4b8
   1138c:	mov	x1, xzr
   11390:	bl	6780 <PyObject_CallObject@plt>
   11394:	cbz	x0, 11468 <PyInit__decimal@@Base+0xa9b4>
   11398:	ldp	q1, q0, [x22, #32]
   1139c:	ldr	q2, [x22, #16]
   113a0:	mov	x20, x0
   113a4:	mov	x1, x20
   113a8:	stp	q1, q0, [x0, #32]
   113ac:	str	q2, [x0, #16]
   113b0:	ldr	w8, [x22, #80]
   113b4:	stp	wzr, wzr, [x0, #44]
   113b8:	str	w8, [x0, #80]
   113bc:	ldr	x0, [x21, #1400]
   113c0:	bl	65c0 <PyContextVar_Set@plt>
   113c4:	cbz	x0, 11450 <PyInit__decimal@@Base+0xa99c>
   113c8:	ldr	x8, [x0]
   113cc:	subs	x8, x8, #0x1
   113d0:	str	x8, [x0]
   113d4:	b.ne	111cc <PyInit__decimal@@Base+0xa718>  // b.any
   113d8:	bl	6510 <_Py_Dealloc@plt>
   113dc:	b	111cc <PyInit__decimal@@Base+0xa718>
   113e0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   113e4:	add	x0, x0, #0x318
   113e8:	mov	x1, x19
   113ec:	mov	x2, x20
   113f0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   113f4:	mov	x19, x0
   113f8:	cbnz	x0, 1121c <PyInit__decimal@@Base+0xa768>
   113fc:	b	11434 <PyInit__decimal@@Base+0xa980>
   11400:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   11404:	add	x0, x0, #0x318
   11408:	mov	x1, x20
   1140c:	mov	x2, x21
   11410:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   11414:	mov	x20, x0
   11418:	cbnz	x0, 1124c <PyInit__decimal@@Base+0xa798>
   1141c:	ldr	x8, [x19]
   11420:	subs	x8, x8, #0x1
   11424:	str	x8, [x19]
   11428:	b.ne	11434 <PyInit__decimal@@Base+0xa980>  // b.any
   1142c:	mov	x0, x19
   11430:	bl	6510 <_Py_Dealloc@plt>
   11434:	mov	x21, xzr
   11438:	mov	x0, x21
   1143c:	ldp	x20, x19, [sp, #64]
   11440:	ldp	x22, x21, [sp, #48]
   11444:	ldp	x29, x30, [sp, #32]
   11448:	add	sp, sp, #0x50
   1144c:	ret
   11450:	ldr	x8, [x20]
   11454:	subs	x8, x8, #0x1
   11458:	str	x8, [x20]
   1145c:	b.ne	11468 <PyInit__decimal@@Base+0xa9b4>  // b.any
   11460:	mov	x0, x20
   11464:	bl	6510 <_Py_Dealloc@plt>
   11468:	mov	x21, xzr
   1146c:	str	xzr, [sp, #8]
   11470:	b	11438 <PyInit__decimal@@Base+0xa984>
   11474:	stp	x29, x30, [sp, #-64]!
   11478:	str	x23, [sp, #16]
   1147c:	stp	x22, x21, [sp, #32]
   11480:	stp	x20, x19, [sp, #48]
   11484:	mov	x29, sp
   11488:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   1148c:	ldr	x8, [x22, #1400]
   11490:	mov	x20, x1
   11494:	mov	x19, x0
   11498:	add	x2, x29, #0x18
   1149c:	mov	x0, x8
   114a0:	mov	x1, xzr
   114a4:	bl	6680 <PyContextVar_Get@plt>
   114a8:	tbnz	w0, #31, 115a8 <PyInit__decimal@@Base+0xaaf4>
   114ac:	ldr	x21, [x29, #24]
   114b0:	cbz	x21, 1152c <PyInit__decimal@@Base+0xaa78>
   114b4:	ldr	x8, [x21]
   114b8:	subs	x8, x8, #0x1
   114bc:	str	x8, [x21]
   114c0:	b.ne	114cc <PyInit__decimal@@Base+0xaa18>  // b.any
   114c4:	mov	x0, x21
   114c8:	bl	6510 <_Py_Dealloc@plt>
   114cc:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   114d0:	add	x22, x22, #0x318
   114d4:	mov	x0, x22
   114d8:	mov	x1, x20
   114dc:	mov	x2, x21
   114e0:	bl	ab54 <PyInit__decimal@@Base+0x40a0>
   114e4:	cmp	x19, x22
   114e8:	mov	x20, x0
   114ec:	b.eq	11524 <PyInit__decimal@@Base+0xaa70>  // b.none
   114f0:	cbz	x20, 11524 <PyInit__decimal@@Base+0xaa70>
   114f4:	mov	x0, x19
   114f8:	mov	x1, x20
   114fc:	mov	x2, xzr
   11500:	bl	6790 <PyObject_CallFunctionObjArgs@plt>
   11504:	ldr	x8, [x20]
   11508:	mov	x19, x0
   1150c:	subs	x8, x8, #0x1
   11510:	str	x8, [x20]
   11514:	b.ne	115ac <PyInit__decimal@@Base+0xaaf8>  // b.any
   11518:	mov	x0, x20
   1151c:	bl	6510 <_Py_Dealloc@plt>
   11520:	b	115ac <PyInit__decimal@@Base+0xaaf8>
   11524:	mov	x19, x20
   11528:	b	115ac <PyInit__decimal@@Base+0xaaf8>
   1152c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11530:	ldr	x23, [x8, #1496]
   11534:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   11538:	add	x0, x0, #0x4b8
   1153c:	mov	x1, xzr
   11540:	bl	6780 <PyObject_CallObject@plt>
   11544:	cbz	x0, 115a8 <PyInit__decimal@@Base+0xaaf4>
   11548:	ldp	q1, q0, [x23, #32]
   1154c:	ldr	q2, [x23, #16]
   11550:	mov	x21, x0
   11554:	mov	x1, x21
   11558:	stp	q1, q0, [x0, #32]
   1155c:	str	q2, [x0, #16]
   11560:	ldr	w8, [x23, #80]
   11564:	stp	wzr, wzr, [x0, #44]
   11568:	str	w8, [x0, #80]
   1156c:	ldr	x0, [x22, #1400]
   11570:	bl	65c0 <PyContextVar_Set@plt>
   11574:	cbz	x0, 11590 <PyInit__decimal@@Base+0xaadc>
   11578:	ldr	x8, [x0]
   1157c:	subs	x8, x8, #0x1
   11580:	str	x8, [x0]
   11584:	b.ne	114b4 <PyInit__decimal@@Base+0xaa00>  // b.any
   11588:	bl	6510 <_Py_Dealloc@plt>
   1158c:	b	114b4 <PyInit__decimal@@Base+0xaa00>
   11590:	ldr	x8, [x21]
   11594:	subs	x8, x8, #0x1
   11598:	str	x8, [x21]
   1159c:	b.ne	115a8 <PyInit__decimal@@Base+0xaaf4>  // b.any
   115a0:	mov	x0, x21
   115a4:	bl	6510 <_Py_Dealloc@plt>
   115a8:	mov	x19, xzr
   115ac:	mov	x0, x19
   115b0:	ldp	x20, x19, [sp, #48]
   115b4:	ldp	x22, x21, [sp, #32]
   115b8:	ldr	x23, [sp, #16]
   115bc:	ldp	x29, x30, [sp], #64
   115c0:	ret
   115c4:	stp	x29, x30, [sp, #-80]!
   115c8:	str	x25, [sp, #16]
   115cc:	stp	x24, x23, [sp, #32]
   115d0:	stp	x22, x21, [sp, #48]
   115d4:	stp	x20, x19, [sp, #64]
   115d8:	mov	x29, sp
   115dc:	add	x20, x0, #0x18
   115e0:	mov	x0, x20
   115e4:	bl	233a8 <PyInit__decimal@@Base+0x1c8f4>
   115e8:	cbz	x0, 11684 <PyInit__decimal@@Base+0xabd0>
   115ec:	mov	x21, x0
   115f0:	mov	x0, x20
   115f4:	bl	20d28 <PyInit__decimal@@Base+0x1a274>
   115f8:	and	x0, x0, #0xff
   115fc:	bl	6880 <PyLong_FromUnsignedLong@plt>
   11600:	mov	x19, x0
   11604:	cbz	x0, 11690 <PyInit__decimal@@Base+0xabdc>
   11608:	mov	x0, x21
   1160c:	bl	20bd8 <PyInit__decimal@@Base+0x1a124>
   11610:	cbz	w0, 11714 <PyInit__decimal@@Base+0xac60>
   11614:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
   11618:	add	x0, x0, #0x77f
   1161c:	bl	68a0 <PyUnicode_FromString@plt>
   11620:	mov	x20, x0
   11624:	cbz	x0, 11694 <PyInit__decimal@@Base+0xabe0>
   11628:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
   1162c:	add	x0, x0, #0x781
   11630:	mov	w1, wzr
   11634:	bl	6710 <Py_BuildValue@plt>
   11638:	cbz	x0, 11694 <PyInit__decimal@@Base+0xabe0>
   1163c:	mov	x22, x0
   11640:	mov	x23, xzr
   11644:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11648:	ldr	x0, [x8, #1464]
   1164c:	mov	x1, x19
   11650:	mov	x2, x22
   11654:	mov	x3, x20
   11658:	mov	x4, xzr
   1165c:	bl	6790 <PyObject_CallFunctionObjArgs@plt>
   11660:	mov	x24, x0
   11664:	mov	x0, x21
   11668:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
   1166c:	cbz	x23, 116a4 <PyInit__decimal@@Base+0xabf0>
   11670:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11674:	ldr	x8, [x8, #1376]
   11678:	mov	x0, x23
   1167c:	blr	x8
   11680:	b	116a4 <PyInit__decimal@@Base+0xabf0>
   11684:	bl	6520 <PyErr_NoMemory@plt>
   11688:	mov	x24, xzr
   1168c:	b	116f8 <PyInit__decimal@@Base+0xac44>
   11690:	mov	x20, xzr
   11694:	mov	x0, x21
   11698:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
   1169c:	mov	x22, xzr
   116a0:	mov	x24, xzr
   116a4:	cbz	x19, 116c0 <PyInit__decimal@@Base+0xac0c>
   116a8:	ldr	x8, [x19]
   116ac:	subs	x8, x8, #0x1
   116b0:	str	x8, [x19]
   116b4:	b.ne	116c0 <PyInit__decimal@@Base+0xac0c>  // b.any
   116b8:	mov	x0, x19
   116bc:	bl	6510 <_Py_Dealloc@plt>
   116c0:	cbz	x22, 116dc <PyInit__decimal@@Base+0xac28>
   116c4:	ldr	x8, [x22]
   116c8:	subs	x8, x8, #0x1
   116cc:	str	x8, [x22]
   116d0:	b.ne	116dc <PyInit__decimal@@Base+0xac28>  // b.any
   116d4:	mov	x0, x22
   116d8:	bl	6510 <_Py_Dealloc@plt>
   116dc:	cbz	x20, 116f8 <PyInit__decimal@@Base+0xac44>
   116e0:	ldr	x8, [x20]
   116e4:	subs	x8, x8, #0x1
   116e8:	str	x8, [x20]
   116ec:	b.ne	116f8 <PyInit__decimal@@Base+0xac44>  // b.any
   116f0:	mov	x0, x20
   116f4:	bl	6510 <_Py_Dealloc@plt>
   116f8:	mov	x0, x24
   116fc:	ldp	x20, x19, [sp, #64]
   11700:	ldp	x22, x21, [sp, #48]
   11704:	ldp	x24, x23, [sp, #32]
   11708:	ldr	x25, [sp, #16]
   1170c:	ldp	x29, x30, [sp], #80
   11710:	ret
   11714:	mov	x0, x21
   11718:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
   1171c:	cbz	w0, 11750 <PyInit__decimal@@Base+0xac9c>
   11720:	mov	x0, x21
   11724:	bl	20c0c <PyInit__decimal@@Base+0x1a158>
   11728:	adrp	x8, 3e000 <PyInit__decimal@@Base+0x3754c>
   1172c:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   11730:	add	x8, x8, #0x342
   11734:	add	x9, x9, #0x472
   11738:	cmp	w0, #0x0
   1173c:	csel	x0, x9, x8, eq  // eq = none
   11740:	bl	68a0 <PyUnicode_FromString@plt>
   11744:	mov	x20, x0
   11748:	cbnz	x0, 11760 <PyInit__decimal@@Base+0xacac>
   1174c:	b	11694 <PyInit__decimal@@Base+0xabe0>
   11750:	ldr	x0, [x20, #8]
   11754:	bl	65e0 <PyLong_FromSsize_t@plt>
   11758:	mov	x20, x0
   1175c:	cbz	x0, 11694 <PyInit__decimal@@Base+0xabe0>
   11760:	ldr	x8, [x21, #24]
   11764:	cmp	x8, #0x1
   11768:	b.lt	117d4 <PyInit__decimal@@Base+0xad20>  // b.tstop
   1176c:	mov	x0, x21
   11770:	str	xzr, [x21, #8]
   11774:	bl	212a4 <PyInit__decimal@@Base+0x1a7f0>
   11778:	mov	w1, #0x1                   	// #1
   1177c:	mov	x0, x21
   11780:	bl	1e4d4 <PyInit__decimal@@Base+0x17a20>
   11784:	cbz	x0, 117e4 <PyInit__decimal@@Base+0xad30>
   11788:	mov	x23, x0
   1178c:	bl	6420 <strlen@plt>
   11790:	mov	x24, x0
   11794:	bl	66e0 <PyTuple_New@plt>
   11798:	mov	x22, x0
   1179c:	cbz	x0, 117ec <PyInit__decimal@@Base+0xad38>
   117a0:	cmp	x24, #0x1
   117a4:	b.lt	11644 <PyInit__decimal@@Base+0xab90>  // b.tstop
   117a8:	mov	x25, xzr
   117ac:	ldrb	w8, [x23, x25]
   117b0:	sub	x0, x8, #0x30
   117b4:	bl	6620 <PyLong_FromLong@plt>
   117b8:	cbz	x0, 117ec <PyInit__decimal@@Base+0xad38>
   117bc:	add	x8, x22, x25, lsl #3
   117c0:	add	x25, x25, #0x1
   117c4:	cmp	x24, x25
   117c8:	str	x0, [x8, #24]
   117cc:	b.ne	117ac <PyInit__decimal@@Base+0xacf8>  // b.any
   117d0:	b	11644 <PyInit__decimal@@Base+0xab90>
   117d4:	mov	x0, xzr
   117d8:	bl	66e0 <PyTuple_New@plt>
   117dc:	cbnz	x0, 1163c <PyInit__decimal@@Base+0xab88>
   117e0:	b	11694 <PyInit__decimal@@Base+0xabe0>
   117e4:	bl	6520 <PyErr_NoMemory@plt>
   117e8:	b	11694 <PyInit__decimal@@Base+0xabe0>
   117ec:	mov	x0, x21
   117f0:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
   117f4:	mov	x24, xzr
   117f8:	b	11670 <PyInit__decimal@@Base+0xabbc>
   117fc:	sub	sp, sp, #0x50
   11800:	stp	x29, x30, [sp, #16]
   11804:	str	x23, [sp, #32]
   11808:	stp	x22, x21, [sp, #48]
   1180c:	stp	x20, x19, [sp, #64]
   11810:	add	x29, sp, #0x10
   11814:	add	x20, x0, #0x18
   11818:	mov	x0, x20
   1181c:	stur	wzr, [x29, #-4]
   11820:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
   11824:	cbz	w0, 11848 <PyInit__decimal@@Base+0xad94>
   11828:	mov	x0, x20
   1182c:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
   11830:	cbz	w0, 118e8 <PyInit__decimal@@Base+0xae34>
   11834:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   11838:	ldr	x8, [x8, #3928]
   1183c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11840:	add	x1, x1, #0x785
   11844:	b	118f8 <PyInit__decimal@@Base+0xae44>
   11848:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   1184c:	ldr	x0, [x21, #1400]
   11850:	add	x2, x29, #0x18
   11854:	mov	x1, xzr
   11858:	bl	6680 <PyContextVar_Get@plt>
   1185c:	tbnz	w0, #31, 11900 <PyInit__decimal@@Base+0xae4c>
   11860:	ldr	x19, [x29, #24]
   11864:	cbz	x19, 11920 <PyInit__decimal@@Base+0xae6c>
   11868:	ldr	x8, [x19]
   1186c:	subs	x8, x8, #0x1
   11870:	str	x8, [x19]
   11874:	b.ne	11880 <PyInit__decimal@@Base+0xadcc>  // b.any
   11878:	mov	x0, x19
   1187c:	bl	6510 <_Py_Dealloc@plt>
   11880:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   11884:	add	x0, x0, #0x318
   11888:	bl	6890 <_PyObject_New@plt>
   1188c:	mov	x21, x0
   11890:	cbz	x0, 11904 <PyInit__decimal@@Base+0xae50>
   11894:	mov	x23, x21
   11898:	str	xzr, [x23, #32]!
   1189c:	mov	x8, #0xffffffffffffffff    	// #-1
   118a0:	mov	w9, #0x30                  	// #48
   118a4:	mov	x22, x23
   118a8:	stur	x8, [x23, #-16]
   118ac:	strb	w9, [x22, #-8]!
   118b0:	mov	w10, #0x4                   	// #4
   118b4:	add	x8, x23, #0x28
   118b8:	sub	x2, x29, #0x4
   118bc:	mov	x0, x22
   118c0:	mov	x1, x20
   118c4:	stp	xzr, xzr, [x23, #8]
   118c8:	stp	x10, x8, [x23, #24]
   118cc:	bl	22898 <PyInit__decimal@@Base+0x1bde4>
   118d0:	cbz	w0, 11984 <PyInit__decimal@@Base+0xaed0>
   118d4:	mov	x0, x22
   118d8:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
   118dc:	cbz	w0, 119a4 <PyInit__decimal@@Base+0xaef0>
   118e0:	mov	x22, xzr
   118e4:	b	119a8 <PyInit__decimal@@Base+0xaef4>
   118e8:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   118ec:	ldr	x8, [x8, #3992]
   118f0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   118f4:	add	x1, x1, #0x7a9
   118f8:	ldr	x0, [x8]
   118fc:	bl	6590 <PyErr_SetString@plt>
   11900:	mov	x21, xzr
   11904:	mov	x0, x21
   11908:	ldp	x20, x19, [sp, #64]
   1190c:	ldp	x22, x21, [sp, #48]
   11910:	ldr	x23, [sp, #32]
   11914:	ldp	x29, x30, [sp, #16]
   11918:	add	sp, sp, #0x50
   1191c:	ret
   11920:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11924:	ldr	x22, [x8, #1496]
   11928:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1192c:	add	x0, x0, #0x4b8
   11930:	mov	x1, xzr
   11934:	bl	6780 <PyObject_CallObject@plt>
   11938:	cbz	x0, 11900 <PyInit__decimal@@Base+0xae4c>
   1193c:	ldp	q1, q0, [x22, #32]
   11940:	ldr	q2, [x22, #16]
   11944:	mov	x19, x0
   11948:	mov	x1, x19
   1194c:	stp	q1, q0, [x0, #32]
   11950:	str	q2, [x0, #16]
   11954:	ldr	w8, [x22, #80]
   11958:	stp	wzr, wzr, [x0, #44]
   1195c:	str	w8, [x0, #80]
   11960:	ldr	x0, [x21, #1400]
   11964:	bl	65c0 <PyContextVar_Set@plt>
   11968:	cbz	x0, 11abc <PyInit__decimal@@Base+0xb008>
   1196c:	ldr	x8, [x0]
   11970:	subs	x8, x8, #0x1
   11974:	str	x8, [x0]
   11978:	b.ne	11868 <PyInit__decimal@@Base+0xadb4>  // b.any
   1197c:	bl	6510 <_Py_Dealloc@plt>
   11980:	b	11868 <PyInit__decimal@@Base+0xadb4>
   11984:	ldr	x8, [x21]
   11988:	subs	x8, x8, #0x1
   1198c:	str	x8, [x21]
   11990:	b.ne	1199c <PyInit__decimal@@Base+0xaee8>  // b.any
   11994:	mov	x0, x21
   11998:	bl	6510 <_Py_Dealloc@plt>
   1199c:	bl	6520 <PyErr_NoMemory@plt>
   119a0:	b	11900 <PyInit__decimal@@Base+0xae4c>
   119a4:	ldr	x22, [x23]
   119a8:	mov	w2, #0x3                   	// #3
   119ac:	mov	x0, x21
   119b0:	mov	x1, x19
   119b4:	str	xzr, [x21, #32]
   119b8:	bl	a9bc <PyInit__decimal@@Base+0x3f08>
   119bc:	ldr	x8, [x21]
   119c0:	mov	x19, x0
   119c4:	subs	x8, x8, #0x1
   119c8:	str	x8, [x21]
   119cc:	b.ne	119d8 <PyInit__decimal@@Base+0xaf24>  // b.any
   119d0:	mov	x0, x21
   119d4:	bl	6510 <_Py_Dealloc@plt>
   119d8:	cbz	x19, 11900 <PyInit__decimal@@Base+0xae4c>
   119dc:	cmp	x22, #0x0
   119e0:	cneg	x0, x22, mi  // mi = first
   119e4:	bl	65e0 <PyLong_FromSsize_t@plt>
   119e8:	cbz	x0, 11ab4 <PyInit__decimal@@Base+0xb000>
   119ec:	mov	x23, x0
   119f0:	mov	w0, #0xa                   	// #10
   119f4:	bl	6620 <PyLong_FromLong@plt>
   119f8:	mov	x21, x0
   119fc:	cbz	x0, 11ad8 <PyInit__decimal@@Base+0xb024>
   11a00:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11a04:	adrp	x2, 50000 <PyInit__decimal@@Base+0x4954c>
   11a08:	ldr	x8, [x8, #1424]
   11a0c:	ldr	x2, [x2, #4008]
   11a10:	mov	x0, x21
   11a14:	mov	x1, x23
   11a18:	blr	x8
   11a1c:	ldr	x8, [x23]
   11a20:	mov	x20, x0
   11a24:	subs	x8, x8, #0x1
   11a28:	str	x8, [x23]
   11a2c:	b.ne	11a38 <PyInit__decimal@@Base+0xaf84>  // b.any
   11a30:	mov	x0, x23
   11a34:	bl	6510 <_Py_Dealloc@plt>
   11a38:	ldr	x8, [x21]
   11a3c:	subs	x8, x8, #0x1
   11a40:	str	x8, [x21]
   11a44:	b.ne	11a50 <PyInit__decimal@@Base+0xaf9c>  // b.any
   11a48:	mov	x0, x21
   11a4c:	bl	6510 <_Py_Dealloc@plt>
   11a50:	cbz	x20, 11ab4 <PyInit__decimal@@Base+0xb000>
   11a54:	tbnz	x22, #63, 11ae0 <PyInit__decimal@@Base+0xb02c>
   11a58:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11a5c:	ldr	x8, [x8, #1408]
   11a60:	mov	x0, x19
   11a64:	mov	x1, x20
   11a68:	blr	x8
   11a6c:	ldr	x8, [x19]
   11a70:	mov	x23, x0
   11a74:	subs	x8, x8, #0x1
   11a78:	str	x8, [x19]
   11a7c:	b.ne	11a88 <PyInit__decimal@@Base+0xafd4>  // b.any
   11a80:	mov	x0, x19
   11a84:	bl	6510 <_Py_Dealloc@plt>
   11a88:	cbz	x23, 11b94 <PyInit__decimal@@Base+0xb0e0>
   11a8c:	mov	w0, #0x1                   	// #1
   11a90:	bl	6620 <PyLong_FromLong@plt>
   11a94:	mov	x22, x0
   11a98:	cbz	x0, 11ba4 <PyInit__decimal@@Base+0xb0f0>
   11a9c:	mov	w0, #0x2                   	// #2
   11aa0:	mov	x1, x23
   11aa4:	mov	x2, x22
   11aa8:	bl	69a0 <PyTuple_Pack@plt>
   11aac:	mov	x21, x0
   11ab0:	b	11ba8 <PyInit__decimal@@Base+0xb0f4>
   11ab4:	mov	x21, xzr
   11ab8:	b	11bec <PyInit__decimal@@Base+0xb138>
   11abc:	ldr	x8, [x19]
   11ac0:	subs	x8, x8, #0x1
   11ac4:	str	x8, [x19]
   11ac8:	b.ne	11900 <PyInit__decimal@@Base+0xae4c>  // b.any
   11acc:	mov	x0, x19
   11ad0:	bl	6510 <_Py_Dealloc@plt>
   11ad4:	b	11900 <PyInit__decimal@@Base+0xae4c>
   11ad8:	mov	x22, xzr
   11adc:	b	11bb0 <PyInit__decimal@@Base+0xb0fc>
   11ae0:	mov	x0, x19
   11ae4:	mov	x1, x20
   11ae8:	bl	6640 <_PyLong_GCD@plt>
   11aec:	mov	x21, x0
   11af0:	cbz	x0, 11bd0 <PyInit__decimal@@Base+0xb11c>
   11af4:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   11af8:	ldr	x8, [x22, #1416]
   11afc:	mov	x0, x19
   11b00:	mov	x1, x21
   11b04:	blr	x8
   11b08:	ldr	x8, [x19]
   11b0c:	mov	x23, x0
   11b10:	subs	x8, x8, #0x1
   11b14:	str	x8, [x19]
   11b18:	b.ne	11b24 <PyInit__decimal@@Base+0xb070>  // b.any
   11b1c:	mov	x0, x19
   11b20:	bl	6510 <_Py_Dealloc@plt>
   11b24:	ldr	x8, [x22, #1416]
   11b28:	mov	x0, x20
   11b2c:	mov	x1, x21
   11b30:	blr	x8
   11b34:	ldr	x8, [x20]
   11b38:	mov	x22, x0
   11b3c:	subs	x8, x8, #0x1
   11b40:	str	x8, [x20]
   11b44:	b.ne	11b50 <PyInit__decimal@@Base+0xb09c>  // b.any
   11b48:	mov	x0, x20
   11b4c:	bl	6510 <_Py_Dealloc@plt>
   11b50:	ldr	x8, [x21]
   11b54:	subs	x8, x8, #0x1
   11b58:	str	x8, [x21]
   11b5c:	b.ne	11b68 <PyInit__decimal@@Base+0xb0b4>  // b.any
   11b60:	mov	x0, x21
   11b64:	bl	6510 <_Py_Dealloc@plt>
   11b68:	mov	x21, xzr
   11b6c:	cbz	x23, 11c08 <PyInit__decimal@@Base+0xb154>
   11b70:	cbz	x22, 11c08 <PyInit__decimal@@Base+0xb154>
   11b74:	mov	w0, #0x2                   	// #2
   11b78:	mov	x1, x23
   11b7c:	mov	x2, x22
   11b80:	bl	69a0 <PyTuple_Pack@plt>
   11b84:	mov	x21, x0
   11b88:	mov	x20, x22
   11b8c:	mov	x19, x23
   11b90:	b	11bd0 <PyInit__decimal@@Base+0xb11c>
   11b94:	mov	x19, xzr
   11b98:	mov	x22, xzr
   11b9c:	mov	x21, xzr
   11ba0:	b	11bac <PyInit__decimal@@Base+0xb0f8>
   11ba4:	mov	x21, xzr
   11ba8:	mov	x19, x23
   11bac:	mov	x23, x20
   11bb0:	ldr	x8, [x23]
   11bb4:	subs	x8, x8, #0x1
   11bb8:	str	x8, [x23]
   11bbc:	b.ne	11bc8 <PyInit__decimal@@Base+0xb114>  // b.any
   11bc0:	mov	x0, x23
   11bc4:	bl	6510 <_Py_Dealloc@plt>
   11bc8:	mov	x20, x22
   11bcc:	cbz	x22, 11be8 <PyInit__decimal@@Base+0xb134>
   11bd0:	ldr	x8, [x20]
   11bd4:	subs	x8, x8, #0x1
   11bd8:	str	x8, [x20]
   11bdc:	b.ne	11be8 <PyInit__decimal@@Base+0xb134>  // b.any
   11be0:	mov	x0, x20
   11be4:	bl	6510 <_Py_Dealloc@plt>
   11be8:	cbz	x19, 11904 <PyInit__decimal@@Base+0xae50>
   11bec:	ldr	x8, [x19]
   11bf0:	subs	x8, x8, #0x1
   11bf4:	str	x8, [x19]
   11bf8:	b.ne	11904 <PyInit__decimal@@Base+0xae50>  // b.any
   11bfc:	mov	x0, x19
   11c00:	bl	6510 <_Py_Dealloc@plt>
   11c04:	b	11904 <PyInit__decimal@@Base+0xae50>
   11c08:	mov	x19, x23
   11c0c:	mov	x20, x22
   11c10:	cbnz	x22, 11bd0 <PyInit__decimal@@Base+0xb11c>
   11c14:	b	11be8 <PyInit__decimal@@Base+0xb134>
   11c18:	ldr	x8, [x0]
   11c1c:	add	x8, x8, #0x1
   11c20:	str	x8, [x0]
   11c24:	ret
   11c28:	sub	sp, sp, #0xa0
   11c2c:	stp	x29, x30, [sp, #80]
   11c30:	str	x25, [sp, #96]
   11c34:	stp	x24, x23, [sp, #112]
   11c38:	stp	x22, x21, [sp, #128]
   11c3c:	stp	x20, x19, [sp, #144]
   11c40:	add	x29, sp, #0x50
   11c44:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   11c48:	mov	x20, x0
   11c4c:	ldr	x0, [x22, #1400]
   11c50:	mov	x19, x1
   11c54:	add	x2, sp, #0x10
   11c58:	mov	x1, xzr
   11c5c:	stur	xzr, [x29, #-8]
   11c60:	str	wzr, [sp, #12]
   11c64:	bl	6680 <PyContextVar_Get@plt>
   11c68:	tbnz	w0, #31, 11f5c <PyInit__decimal@@Base+0xb4a8>
   11c6c:	ldr	x21, [sp, #16]
   11c70:	cbz	x21, 11cd4 <PyInit__decimal@@Base+0xb220>
   11c74:	ldr	x8, [x21]
   11c78:	subs	x8, x8, #0x1
   11c7c:	str	x8, [x21]
   11c80:	b.ne	11c8c <PyInit__decimal@@Base+0xb1d8>  // b.any
   11c84:	mov	x0, x21
   11c88:	bl	6510 <_Py_Dealloc@plt>
   11c8c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11c90:	add	x1, x1, #0x77b
   11c94:	sub	x2, x29, #0x10
   11c98:	sub	x3, x29, #0x8
   11c9c:	mov	x0, x19
   11ca0:	bl	6820 <PyArg_ParseTuple@plt>
   11ca4:	cbz	w0, 11f5c <PyInit__decimal@@Base+0xb4a8>
   11ca8:	ldur	x0, [x29, #-16]
   11cac:	ldr	x8, [x0, #8]
   11cb0:	ldrb	w8, [x8, #171]
   11cb4:	tbnz	w8, #4, 11d38 <PyInit__decimal@@Base+0xb284>
   11cb8:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   11cbc:	ldr	x8, [x8, #3936]
   11cc0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11cc4:	add	x1, x1, #0x7d2
   11cc8:	ldr	x0, [x8]
   11ccc:	bl	6590 <PyErr_SetString@plt>
   11cd0:	b	11f5c <PyInit__decimal@@Base+0xb4a8>
   11cd4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11cd8:	ldr	x23, [x8, #1496]
   11cdc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   11ce0:	add	x0, x0, #0x4b8
   11ce4:	mov	x1, xzr
   11ce8:	bl	6780 <PyObject_CallObject@plt>
   11cec:	cbz	x0, 11f5c <PyInit__decimal@@Base+0xb4a8>
   11cf0:	ldp	q1, q0, [x23, #32]
   11cf4:	ldr	q2, [x23, #16]
   11cf8:	mov	x21, x0
   11cfc:	mov	x1, x21
   11d00:	stp	q1, q0, [x0, #32]
   11d04:	str	q2, [x0, #16]
   11d08:	ldr	w8, [x23, #80]
   11d0c:	stp	wzr, wzr, [x0, #44]
   11d10:	str	w8, [x0, #80]
   11d14:	ldr	x0, [x22, #1400]
   11d18:	bl	65c0 <PyContextVar_Set@plt>
   11d1c:	cbz	x0, 11da8 <PyInit__decimal@@Base+0xb2f4>
   11d20:	ldr	x8, [x0]
   11d24:	subs	x8, x8, #0x1
   11d28:	str	x8, [x0]
   11d2c:	b.ne	11c74 <PyInit__decimal@@Base+0xb1c0>  // b.any
   11d30:	bl	6510 <_Py_Dealloc@plt>
   11d34:	b	11c74 <PyInit__decimal@@Base+0xb1c0>
   11d38:	mov	x1, sp
   11d3c:	bl	6910 <PyUnicode_AsUTF8AndSize@plt>
   11d40:	cbz	x0, 11f5c <PyInit__decimal@@Base+0xb4a8>
   11d44:	ldr	x22, [sp]
   11d48:	mov	x19, x0
   11d4c:	cmp	x22, #0x1
   11d50:	b.lt	11d5c <PyInit__decimal@@Base+0xb2a8>  // b.tstop
   11d54:	ldrb	w8, [x19]
   11d58:	cbz	w8, 11e08 <PyInit__decimal@@Base+0xb354>
   11d5c:	mov	w25, wzr
   11d60:	ldr	w2, [x21, #80]
   11d64:	add	x0, sp, #0x10
   11d68:	mov	x1, x19
   11d6c:	bl	1eaa4 <PyInit__decimal@@Base+0x17ff0>
   11d70:	cbz	w0, 11dc4 <PyInit__decimal@@Base+0xb310>
   11d74:	cbz	w25, 11d80 <PyInit__decimal@@Base+0xb2cc>
   11d78:	mov	w8, #0xff                  	// #255
   11d7c:	sturh	w8, [sp, #35]
   11d80:	ldur	x0, [x29, #-8]
   11d84:	cbz	x0, 11e3c <PyInit__decimal@@Base+0xb388>
   11d88:	ldr	x8, [x0, #8]
   11d8c:	ldrb	w8, [x8, #171]
   11d90:	tbnz	w8, #5, 11eac <PyInit__decimal@@Base+0xb3f8>
   11d94:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   11d98:	ldr	x8, [x8, #3936]
   11d9c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11da0:	add	x1, x1, #0x7ff
   11da4:	b	11dd4 <PyInit__decimal@@Base+0xb320>
   11da8:	ldr	x8, [x21]
   11dac:	subs	x8, x8, #0x1
   11db0:	str	x8, [x21]
   11db4:	b.ne	11f5c <PyInit__decimal@@Base+0xb4a8>  // b.any
   11db8:	mov	x0, x21
   11dbc:	bl	6510 <_Py_Dealloc@plt>
   11dc0:	b	11f5c <PyInit__decimal@@Base+0xb4a8>
   11dc4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   11dc8:	ldr	x8, [x8, #3928]
   11dcc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11dd0:	add	x1, x1, #0x7e9
   11dd4:	ldr	x0, [x8]
   11dd8:	bl	6590 <PyErr_SetString@plt>
   11ddc:	mov	x20, xzr
   11de0:	mov	x21, xzr
   11de4:	cbz	w25, 11df0 <PyInit__decimal@@Base+0xb33c>
   11de8:	mov	x0, x19
   11dec:	bl	64a0 <PyMem_Free@plt>
   11df0:	cbz	x20, 11f60 <PyInit__decimal@@Base+0xb4ac>
   11df4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   11df8:	ldr	x8, [x8, #1376]
   11dfc:	mov	x0, x20
   11e00:	blr	x8
   11e04:	b	11f60 <PyInit__decimal@@Base+0xb4ac>
   11e08:	add	x0, x22, #0x1
   11e0c:	bl	6980 <PyMem_Malloc@plt>
   11e10:	cbz	x0, 11f58 <PyInit__decimal@@Base+0xb4a4>
   11e14:	mov	x1, x19
   11e18:	mov	x2, x22
   11e1c:	mov	x23, x0
   11e20:	bl	63c0 <memcpy@plt>
   11e24:	mov	w8, #0x5f                  	// #95
   11e28:	mov	w25, #0x1                   	// #1
   11e2c:	mov	x19, x23
   11e30:	strb	wzr, [x23, x22]
   11e34:	strb	w8, [x23]
   11e38:	b	11d60 <PyInit__decimal@@Base+0xb2ac>
   11e3c:	ldr	x22, [sp, #40]
   11e40:	mov	x0, x22
   11e44:	bl	6420 <strlen@plt>
   11e48:	cmp	x0, #0x1
   11e4c:	b.ls	11ed4 <PyInit__decimal@@Base+0xb420>  // b.plast
   11e50:	add	x0, x29, #0x18
   11e54:	mov	w2, #0x2                   	// #2
   11e58:	mov	x1, x22
   11e5c:	bl	6440 <mbstowcs@plt>
   11e60:	cmp	x0, #0x1
   11e64:	b.ne	11fb0 <PyInit__decimal@@Base+0xb4fc>  // b.any
   11e68:	add	x0, x29, #0x18
   11e6c:	mov	w1, #0x1                   	// #1
   11e70:	bl	64b0 <PyUnicode_FromWideChar@plt>
   11e74:	cbz	x0, 11ddc <PyInit__decimal@@Base+0xb328>
   11e78:	mov	x23, x0
   11e7c:	bl	6500 <PyUnicode_AsUTF8String@plt>
   11e80:	ldr	x8, [x23]
   11e84:	mov	x22, x0
   11e88:	subs	x8, x8, #0x1
   11e8c:	str	x8, [x23]
   11e90:	b.ne	11e9c <PyInit__decimal@@Base+0xb3e8>  // b.any
   11e94:	mov	x0, x23
   11e98:	bl	6510 <_Py_Dealloc@plt>
   11e9c:	cbz	x22, 11ddc <PyInit__decimal@@Base+0xb328>
   11ea0:	add	x8, x22, #0x20
   11ea4:	str	x8, [sp, #40]
   11ea8:	b	11ee4 <PyInit__decimal@@Base+0xb430>
   11eac:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11eb0:	add	x1, x1, #0x820
   11eb4:	bl	67b0 <PyDict_GetItemString@plt>
   11eb8:	cbz	x0, 11f80 <PyInit__decimal@@Base+0xb4cc>
   11ebc:	bl	6500 <PyUnicode_AsUTF8String@plt>
   11ec0:	cbz	x0, 11ddc <PyInit__decimal@@Base+0xb328>
   11ec4:	mov	x22, x0
   11ec8:	add	x8, x0, #0x20
   11ecc:	str	x8, [sp, #40]
   11ed0:	b	11f84 <PyInit__decimal@@Base+0xb4d0>
   11ed4:	b.ne	11ee0 <PyInit__decimal@@Base+0xb42c>  // b.any
   11ed8:	ldrsb	w8, [x22]
   11edc:	tbnz	w8, #31, 11e50 <PyInit__decimal@@Base+0xb39c>
   11ee0:	mov	x22, xzr
   11ee4:	ldr	x23, [sp, #48]
   11ee8:	mov	x0, x23
   11eec:	bl	6420 <strlen@plt>
   11ef0:	cmp	x0, #0x1
   11ef4:	b.ls	11fc4 <PyInit__decimal@@Base+0xb510>  // b.plast
   11ef8:	add	x0, x29, #0x18
   11efc:	mov	w2, #0x2                   	// #2
   11f00:	mov	x1, x23
   11f04:	bl	6440 <mbstowcs@plt>
   11f08:	cmp	x0, #0x1
   11f0c:	b.ne	12088 <PyInit__decimal@@Base+0xb5d4>  // b.any
   11f10:	add	x0, x29, #0x18
   11f14:	mov	w1, #0x1                   	// #1
   11f18:	bl	64b0 <PyUnicode_FromWideChar@plt>
   11f1c:	cbz	x0, 120a0 <PyInit__decimal@@Base+0xb5ec>
   11f20:	mov	x24, x0
   11f24:	bl	6500 <PyUnicode_AsUTF8String@plt>
   11f28:	ldr	x8, [x24]
   11f2c:	mov	x23, x0
   11f30:	subs	x8, x8, #0x1
   11f34:	str	x8, [x24]
   11f38:	b.ne	11f44 <PyInit__decimal@@Base+0xb490>  // b.any
   11f3c:	mov	x0, x24
   11f40:	bl	6510 <_Py_Dealloc@plt>
   11f44:	cbz	x23, 120a0 <PyInit__decimal@@Base+0xb5ec>
   11f48:	mov	x24, xzr
   11f4c:	add	x8, x23, #0x20
   11f50:	str	x8, [sp, #48]
   11f54:	b	1201c <PyInit__decimal@@Base+0xb568>
   11f58:	bl	6520 <PyErr_NoMemory@plt>
   11f5c:	mov	x21, xzr
   11f60:	mov	x0, x21
   11f64:	ldp	x20, x19, [sp, #144]
   11f68:	ldp	x22, x21, [sp, #128]
   11f6c:	ldp	x24, x23, [sp, #112]
   11f70:	ldr	x25, [sp, #96]
   11f74:	ldp	x29, x30, [sp, #80]
   11f78:	add	sp, sp, #0xa0
   11f7c:	ret
   11f80:	mov	x22, xzr
   11f84:	ldur	x0, [x29, #-8]
   11f88:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11f8c:	add	x1, x1, #0x82e
   11f90:	bl	67b0 <PyDict_GetItemString@plt>
   11f94:	cbz	x0, 11fdc <PyInit__decimal@@Base+0xb528>
   11f98:	bl	6500 <PyUnicode_AsUTF8String@plt>
   11f9c:	cbz	x0, 120a0 <PyInit__decimal@@Base+0xb5ec>
   11fa0:	mov	x23, x0
   11fa4:	add	x8, x0, #0x20
   11fa8:	str	x8, [sp, #48]
   11fac:	b	11fe0 <PyInit__decimal@@Base+0xb52c>
   11fb0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   11fb4:	ldr	x8, [x8, #3928]
   11fb8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11fbc:	add	x1, x1, #0x894
   11fc0:	b	11dd4 <PyInit__decimal@@Base+0xb320>
   11fc4:	b.ne	11fd0 <PyInit__decimal@@Base+0xb51c>  // b.any
   11fc8:	ldrsb	w8, [x23]
   11fcc:	tbnz	w8, #31, 11ef8 <PyInit__decimal@@Base+0xb444>
   11fd0:	mov	x23, xzr
   11fd4:	mov	x24, xzr
   11fd8:	b	1201c <PyInit__decimal@@Base+0xb568>
   11fdc:	mov	x23, xzr
   11fe0:	ldur	x0, [x29, #-8]
   11fe4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   11fe8:	add	x1, x1, #0x83c
   11fec:	bl	67b0 <PyDict_GetItemString@plt>
   11ff0:	cbz	x0, 1200c <PyInit__decimal@@Base+0xb558>
   11ff4:	bl	6500 <PyUnicode_AsUTF8String@plt>
   11ff8:	cbz	x0, 120e0 <PyInit__decimal@@Base+0xb62c>
   11ffc:	mov	x24, x0
   12000:	add	x8, x0, #0x20
   12004:	str	x8, [sp, #56]
   12008:	b	12010 <PyInit__decimal@@Base+0xb55c>
   1200c:	mov	x24, xzr
   12010:	add	x0, sp, #0x10
   12014:	bl	1ea5c <PyInit__decimal@@Base+0x17fa8>
   12018:	tbnz	w0, #31, 120ac <PyInit__decimal@@Base+0xb5f8>
   1201c:	add	x0, x20, #0x18
   12020:	add	x2, x21, #0x10
   12024:	add	x1, sp, #0x10
   12028:	add	x3, sp, #0xc
   1202c:	bl	1eef8 <PyInit__decimal@@Base+0x18444>
   12030:	cbz	x0, 1206c <PyInit__decimal@@Base+0xb5b8>
   12034:	mov	x20, x0
   12038:	bl	6420 <strlen@plt>
   1203c:	str	x0, [sp]
   12040:	cbz	w25, 120c8 <PyInit__decimal@@Base+0xb614>
   12044:	mov	x8, x20
   12048:	b	12054 <PyInit__decimal@@Base+0xb5a0>
   1204c:	strb	wzr, [x8]
   12050:	add	x8, x8, #0x1
   12054:	ldrb	w9, [x8]
   12058:	cmp	w9, #0xff
   1205c:	b.eq	1204c <PyInit__decimal@@Base+0xb598>  // b.none
   12060:	cbnz	w9, 12050 <PyInit__decimal@@Base+0xb59c>
   12064:	ldr	x1, [sp]
   12068:	b	120cc <PyInit__decimal@@Base+0xb618>
   1206c:	ldrb	w8, [sp, #13]
   12070:	tbnz	w8, #1, 120ec <PyInit__decimal@@Base+0xb638>
   12074:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   12078:	ldr	x8, [x8, #3928]
   1207c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12080:	add	x1, x1, #0x85b
   12084:	b	120bc <PyInit__decimal@@Base+0xb608>
   12088:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1208c:	ldr	x8, [x8, #3928]
   12090:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12094:	add	x1, x1, #0x894
   12098:	ldr	x0, [x8]
   1209c:	bl	6590 <PyErr_SetString@plt>
   120a0:	mov	x21, xzr
   120a4:	mov	x20, xzr
   120a8:	b	12130 <PyInit__decimal@@Base+0xb67c>
   120ac:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   120b0:	ldr	x8, [x8, #3928]
   120b4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   120b8:	add	x1, x1, #0x845
   120bc:	ldr	x0, [x8]
   120c0:	bl	6590 <PyErr_SetString@plt>
   120c4:	b	120f0 <PyInit__decimal@@Base+0xb63c>
   120c8:	mov	x1, x0
   120cc:	mov	x0, x20
   120d0:	mov	x2, xzr
   120d4:	bl	67e0 <PyUnicode_DecodeUTF8@plt>
   120d8:	mov	x21, x0
   120dc:	b	120f8 <PyInit__decimal@@Base+0xb644>
   120e0:	mov	x20, xzr
   120e4:	mov	x21, xzr
   120e8:	b	12114 <PyInit__decimal@@Base+0xb660>
   120ec:	bl	6520 <PyErr_NoMemory@plt>
   120f0:	mov	x21, xzr
   120f4:	mov	x20, xzr
   120f8:	cbz	x24, 12114 <PyInit__decimal@@Base+0xb660>
   120fc:	ldr	x8, [x24]
   12100:	subs	x8, x8, #0x1
   12104:	str	x8, [x24]
   12108:	b.ne	12114 <PyInit__decimal@@Base+0xb660>  // b.any
   1210c:	mov	x0, x24
   12110:	bl	6510 <_Py_Dealloc@plt>
   12114:	cbz	x23, 12130 <PyInit__decimal@@Base+0xb67c>
   12118:	ldr	x8, [x23]
   1211c:	subs	x8, x8, #0x1
   12120:	str	x8, [x23]
   12124:	b.ne	12130 <PyInit__decimal@@Base+0xb67c>  // b.any
   12128:	mov	x0, x23
   1212c:	bl	6510 <_Py_Dealloc@plt>
   12130:	cbz	x22, 11de4 <PyInit__decimal@@Base+0xb330>
   12134:	ldr	x8, [x22]
   12138:	subs	x8, x8, #0x1
   1213c:	str	x8, [x22]
   12140:	b.ne	11de4 <PyInit__decimal@@Base+0xb330>  // b.any
   12144:	mov	x0, x22
   12148:	bl	6510 <_Py_Dealloc@plt>
   1214c:	b	11de4 <PyInit__decimal@@Base+0xb330>
   12150:	stp	x29, x30, [sp, #-32]!
   12154:	stp	x20, x19, [sp, #16]
   12158:	mov	x29, sp
   1215c:	mov	x20, x0
   12160:	bl	7c60 <PyInit__decimal@@Base+0x11ac>
   12164:	cbz	x0, 121a0 <PyInit__decimal@@Base+0xb6ec>
   12168:	ldr	x1, [x20, #8]
   1216c:	mov	x19, x0
   12170:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
   12174:	add	x0, x0, #0x8e0
   12178:	mov	x2, x19
   1217c:	bl	6710 <Py_BuildValue@plt>
   12180:	ldr	x8, [x19]
   12184:	mov	x20, x0
   12188:	subs	x8, x8, #0x1
   1218c:	str	x8, [x19]
   12190:	b.ne	121a4 <PyInit__decimal@@Base+0xb6f0>  // b.any
   12194:	mov	x0, x19
   12198:	bl	6510 <_Py_Dealloc@plt>
   1219c:	b	121a4 <PyInit__decimal@@Base+0xb6f0>
   121a0:	mov	x20, xzr
   121a4:	mov	x0, x20
   121a8:	ldp	x20, x19, [sp, #16]
   121ac:	ldp	x29, x30, [sp], #32
   121b0:	ret
   121b4:	sub	sp, sp, #0x80
   121b8:	stp	x29, x30, [sp, #64]
   121bc:	str	x23, [sp, #80]
   121c0:	stp	x22, x21, [sp, #96]
   121c4:	stp	x20, x19, [sp, #112]
   121c8:	add	x29, sp, #0x40
   121cc:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   121d0:	mov	x19, x0
   121d4:	ldr	x0, [x22, #1400]
   121d8:	mov	x21, x1
   121dc:	mov	x2, sp
   121e0:	mov	x1, xzr
   121e4:	str	xzr, [x29, #24]
   121e8:	stur	wzr, [x29, #-4]
   121ec:	bl	6680 <PyContextVar_Get@plt>
   121f0:	tbnz	w0, #31, 123c4 <PyInit__decimal@@Base+0xb910>
   121f4:	ldr	x20, [sp]
   121f8:	cbz	x20, 12288 <PyInit__decimal@@Base+0xb7d4>
   121fc:	ldr	x8, [x20]
   12200:	subs	x8, x8, #0x1
   12204:	str	x8, [x20]
   12208:	b.ne	12214 <PyInit__decimal@@Base+0xb760>  // b.any
   1220c:	mov	x0, x20
   12210:	bl	6510 <_Py_Dealloc@plt>
   12214:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12218:	add	x1, x1, #0x77c
   1221c:	add	x2, x29, #0x18
   12220:	mov	x0, x21
   12224:	bl	6820 <PyArg_ParseTuple@plt>
   12228:	cbz	w0, 123c4 <PyInit__decimal@@Base+0xb910>
   1222c:	ldr	x0, [x29, #24]
   12230:	cbz	x0, 122ec <PyInit__decimal@@Base+0xb838>
   12234:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3154c>
   12238:	ldr	q0, [x10, #3296]
   1223c:	mov	w8, #0x1                   	// #1
   12240:	mov	w9, #0x90                  	// #144
   12244:	sub	x11, x29, #0x10
   12248:	dup	v1.2d, x8
   1224c:	stur	x8, [x29, #-16]
   12250:	strb	w9, [sp]
   12254:	stur	q1, [sp, #24]
   12258:	stur	q0, [sp, #8]
   1225c:	str	x11, [sp, #40]
   12260:	ldr	x8, [x0, #8]
   12264:	ldrb	w8, [x8, #171]
   12268:	tbnz	w8, #0, 12304 <PyInit__decimal@@Base+0xb850>
   1226c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   12270:	ldr	x8, [x8, #3936]
   12274:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12278:	add	x1, x1, #0x8e5
   1227c:	ldr	x0, [x8]
   12280:	bl	6590 <PyErr_SetString@plt>
   12284:	b	123c4 <PyInit__decimal@@Base+0xb910>
   12288:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1228c:	ldr	x23, [x8, #1496]
   12290:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   12294:	add	x0, x0, #0x4b8
   12298:	mov	x1, xzr
   1229c:	bl	6780 <PyObject_CallObject@plt>
   122a0:	cbz	x0, 123c4 <PyInit__decimal@@Base+0xb910>
   122a4:	ldp	q1, q0, [x23, #32]
   122a8:	ldr	q2, [x23, #16]
   122ac:	mov	x20, x0
   122b0:	mov	x1, x20
   122b4:	stp	q1, q0, [x0, #32]
   122b8:	str	q2, [x0, #16]
   122bc:	ldr	w8, [x23, #80]
   122c0:	stp	wzr, wzr, [x0, #44]
   122c4:	str	w8, [x0, #80]
   122c8:	ldr	x0, [x22, #1400]
   122cc:	bl	65c0 <PyContextVar_Set@plt>
   122d0:	cbz	x0, 123a0 <PyInit__decimal@@Base+0xb8ec>
   122d4:	ldr	x8, [x0]
   122d8:	subs	x8, x8, #0x1
   122dc:	str	x8, [x0]
   122e0:	b.ne	121fc <PyInit__decimal@@Base+0xb748>  // b.any
   122e4:	bl	6510 <_Py_Dealloc@plt>
   122e8:	b	121fc <PyInit__decimal@@Base+0xb748>
   122ec:	mov	w2, #0x6                   	// #6
   122f0:	mov	x0, x19
   122f4:	mov	x1, x20
   122f8:	bl	a9bc <PyInit__decimal@@Base+0x3f08>
   122fc:	mov	x21, x0
   12300:	b	123c8 <PyInit__decimal@@Base+0xb914>
   12304:	bl	6630 <PyLong_AsSsize_t@plt>
   12308:	mov	x22, x0
   1230c:	cmn	x0, #0x1
   12310:	b.eq	123bc <PyInit__decimal@@Base+0xb908>  // b.none
   12314:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   12318:	add	x0, x0, #0x318
   1231c:	bl	6890 <_PyObject_New@plt>
   12320:	mov	x21, x0
   12324:	cbz	x0, 123c8 <PyInit__decimal@@Base+0xb914>
   12328:	mov	w8, #0x30                  	// #48
   1232c:	mov	x0, x21
   12330:	strb	w8, [x0, #24]!
   12334:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   12338:	cmp	x22, x8
   1233c:	mov	x8, #0xffffffffffffffff    	// #-1
   12340:	stur	x8, [x0, #-8]
   12344:	mov	w8, #0x4                   	// #4
   12348:	stp	xzr, x8, [x0, #24]
   1234c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   12350:	add	x1, x19, #0x18
   12354:	csneg	x8, x8, x22, eq  // eq = none
   12358:	add	x9, x0, #0x30
   1235c:	add	x3, x20, #0x10
   12360:	mov	x2, sp
   12364:	sub	x4, x29, #0x4
   12368:	stp	xzr, xzr, [x0, #8]
   1236c:	str	x9, [x0, #40]
   12370:	str	x8, [sp, #8]
   12374:	bl	3153c <PyInit__decimal@@Base+0x2aa88>
   12378:	ldur	w1, [x29, #-4]
   1237c:	mov	x0, x20
   12380:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   12384:	cbz	w0, 123c8 <PyInit__decimal@@Base+0xb914>
   12388:	ldr	x8, [x21]
   1238c:	subs	x8, x8, #0x1
   12390:	str	x8, [x21]
   12394:	b.ne	123c4 <PyInit__decimal@@Base+0xb910>  // b.any
   12398:	mov	x0, x21
   1239c:	b	123b4 <PyInit__decimal@@Base+0xb900>
   123a0:	ldr	x8, [x20]
   123a4:	subs	x8, x8, #0x1
   123a8:	str	x8, [x20]
   123ac:	b.ne	123c4 <PyInit__decimal@@Base+0xb910>  // b.any
   123b0:	mov	x0, x20
   123b4:	bl	6510 <_Py_Dealloc@plt>
   123b8:	b	123c4 <PyInit__decimal@@Base+0xb910>
   123bc:	bl	6720 <PyErr_Occurred@plt>
   123c0:	cbz	x0, 12314 <PyInit__decimal@@Base+0xb860>
   123c4:	mov	x21, xzr
   123c8:	mov	x0, x21
   123cc:	ldp	x20, x19, [sp, #112]
   123d0:	ldp	x22, x21, [sp, #96]
   123d4:	ldr	x23, [sp, #80]
   123d8:	ldp	x29, x30, [sp, #64]
   123dc:	add	sp, sp, #0x80
   123e0:	ret
   123e4:	sub	sp, sp, #0x40
   123e8:	stp	x29, x30, [sp, #16]
   123ec:	stp	x22, x21, [sp, #32]
   123f0:	stp	x20, x19, [sp, #48]
   123f4:	add	x29, sp, #0x10
   123f8:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   123fc:	ldr	x8, [x21, #1400]
   12400:	mov	x19, x0
   12404:	add	x2, sp, #0x8
   12408:	mov	x1, xzr
   1240c:	mov	x0, x8
   12410:	bl	6680 <PyContextVar_Get@plt>
   12414:	tbnz	w0, #31, 124c8 <PyInit__decimal@@Base+0xba14>
   12418:	ldr	x20, [sp, #8]
   1241c:	cbz	x20, 1244c <PyInit__decimal@@Base+0xb998>
   12420:	ldr	x8, [x20]
   12424:	subs	x8, x8, #0x1
   12428:	str	x8, [x20]
   1242c:	b.ne	12438 <PyInit__decimal@@Base+0xb984>  // b.any
   12430:	mov	x0, x20
   12434:	bl	6510 <_Py_Dealloc@plt>
   12438:	mov	w2, #0x2                   	// #2
   1243c:	mov	x0, x19
   12440:	mov	x1, x20
   12444:	bl	a9bc <PyInit__decimal@@Base+0x3f08>
   12448:	b	124cc <PyInit__decimal@@Base+0xba18>
   1244c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   12450:	ldr	x22, [x8, #1496]
   12454:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   12458:	add	x0, x0, #0x4b8
   1245c:	mov	x1, xzr
   12460:	bl	6780 <PyObject_CallObject@plt>
   12464:	cbz	x0, 124c8 <PyInit__decimal@@Base+0xba14>
   12468:	ldp	q1, q0, [x22, #32]
   1246c:	ldr	q2, [x22, #16]
   12470:	mov	x20, x0
   12474:	mov	x1, x20
   12478:	stp	q1, q0, [x0, #32]
   1247c:	str	q2, [x0, #16]
   12480:	ldr	w8, [x22, #80]
   12484:	stp	wzr, wzr, [x0, #44]
   12488:	str	w8, [x0, #80]
   1248c:	ldr	x0, [x21, #1400]
   12490:	bl	65c0 <PyContextVar_Set@plt>
   12494:	cbz	x0, 124b0 <PyInit__decimal@@Base+0xb9fc>
   12498:	ldr	x8, [x0]
   1249c:	subs	x8, x8, #0x1
   124a0:	str	x8, [x0]
   124a4:	b.ne	12420 <PyInit__decimal@@Base+0xb96c>  // b.any
   124a8:	bl	6510 <_Py_Dealloc@plt>
   124ac:	b	12420 <PyInit__decimal@@Base+0xb96c>
   124b0:	ldr	x8, [x20]
   124b4:	subs	x8, x8, #0x1
   124b8:	str	x8, [x20]
   124bc:	b.ne	124c8 <PyInit__decimal@@Base+0xba14>  // b.any
   124c0:	mov	x0, x20
   124c4:	bl	6510 <_Py_Dealloc@plt>
   124c8:	mov	x0, xzr
   124cc:	ldp	x20, x19, [sp, #48]
   124d0:	ldp	x22, x21, [sp, #32]
   124d4:	ldp	x29, x30, [sp, #16]
   124d8:	add	sp, sp, #0x40
   124dc:	ret
   124e0:	sub	sp, sp, #0x40
   124e4:	stp	x29, x30, [sp, #16]
   124e8:	stp	x22, x21, [sp, #32]
   124ec:	stp	x20, x19, [sp, #48]
   124f0:	add	x29, sp, #0x10
   124f4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   124f8:	ldr	x8, [x21, #1400]
   124fc:	mov	x19, x0
   12500:	add	x2, sp, #0x8
   12504:	mov	x1, xzr
   12508:	mov	x0, x8
   1250c:	bl	6680 <PyContextVar_Get@plt>
   12510:	tbnz	w0, #31, 125c4 <PyInit__decimal@@Base+0xbb10>
   12514:	ldr	x20, [sp, #8]
   12518:	cbz	x20, 12548 <PyInit__decimal@@Base+0xba94>
   1251c:	ldr	x8, [x20]
   12520:	subs	x8, x8, #0x1
   12524:	str	x8, [x20]
   12528:	b.ne	12534 <PyInit__decimal@@Base+0xba80>  // b.any
   1252c:	mov	x0, x20
   12530:	bl	6510 <_Py_Dealloc@plt>
   12534:	mov	w2, #0x3                   	// #3
   12538:	mov	x0, x19
   1253c:	mov	x1, x20
   12540:	bl	a9bc <PyInit__decimal@@Base+0x3f08>
   12544:	b	125c8 <PyInit__decimal@@Base+0xbb14>
   12548:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1254c:	ldr	x22, [x8, #1496]
   12550:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   12554:	add	x0, x0, #0x4b8
   12558:	mov	x1, xzr
   1255c:	bl	6780 <PyObject_CallObject@plt>
   12560:	cbz	x0, 125c4 <PyInit__decimal@@Base+0xbb10>
   12564:	ldp	q1, q0, [x22, #32]
   12568:	ldr	q2, [x22, #16]
   1256c:	mov	x20, x0
   12570:	mov	x1, x20
   12574:	stp	q1, q0, [x0, #32]
   12578:	str	q2, [x0, #16]
   1257c:	ldr	w8, [x22, #80]
   12580:	stp	wzr, wzr, [x0, #44]
   12584:	str	w8, [x0, #80]
   12588:	ldr	x0, [x21, #1400]
   1258c:	bl	65c0 <PyContextVar_Set@plt>
   12590:	cbz	x0, 125ac <PyInit__decimal@@Base+0xbaf8>
   12594:	ldr	x8, [x0]
   12598:	subs	x8, x8, #0x1
   1259c:	str	x8, [x0]
   125a0:	b.ne	1251c <PyInit__decimal@@Base+0xba68>  // b.any
   125a4:	bl	6510 <_Py_Dealloc@plt>
   125a8:	b	1251c <PyInit__decimal@@Base+0xba68>
   125ac:	ldr	x8, [x20]
   125b0:	subs	x8, x8, #0x1
   125b4:	str	x8, [x20]
   125b8:	b.ne	125c4 <PyInit__decimal@@Base+0xbb10>  // b.any
   125bc:	mov	x0, x20
   125c0:	bl	6510 <_Py_Dealloc@plt>
   125c4:	mov	x0, xzr
   125c8:	ldp	x20, x19, [sp, #48]
   125cc:	ldp	x22, x21, [sp, #32]
   125d0:	ldp	x29, x30, [sp, #16]
   125d4:	add	sp, sp, #0x40
   125d8:	ret
   125dc:	sub	sp, sp, #0x40
   125e0:	stp	x29, x30, [sp, #16]
   125e4:	stp	x22, x21, [sp, #32]
   125e8:	stp	x20, x19, [sp, #48]
   125ec:	add	x29, sp, #0x10
   125f0:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   125f4:	ldr	x8, [x21, #1400]
   125f8:	mov	x19, x0
   125fc:	add	x2, sp, #0x8
   12600:	mov	x1, xzr
   12604:	mov	x0, x8
   12608:	bl	6680 <PyContextVar_Get@plt>
   1260c:	tbnz	w0, #31, 126c0 <PyInit__decimal@@Base+0xbc0c>
   12610:	ldr	x20, [sp, #8]
   12614:	cbz	x20, 12644 <PyInit__decimal@@Base+0xbb90>
   12618:	ldr	x8, [x20]
   1261c:	subs	x8, x8, #0x1
   12620:	str	x8, [x20]
   12624:	b.ne	12630 <PyInit__decimal@@Base+0xbb7c>  // b.any
   12628:	mov	x0, x20
   1262c:	bl	6510 <_Py_Dealloc@plt>
   12630:	mov	w2, #0x1                   	// #1
   12634:	mov	x0, x19
   12638:	mov	x1, x20
   1263c:	bl	a9bc <PyInit__decimal@@Base+0x3f08>
   12640:	b	126c4 <PyInit__decimal@@Base+0xbc10>
   12644:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   12648:	ldr	x22, [x8, #1496]
   1264c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   12650:	add	x0, x0, #0x4b8
   12654:	mov	x1, xzr
   12658:	bl	6780 <PyObject_CallObject@plt>
   1265c:	cbz	x0, 126c0 <PyInit__decimal@@Base+0xbc0c>
   12660:	ldp	q1, q0, [x22, #32]
   12664:	ldr	q2, [x22, #16]
   12668:	mov	x20, x0
   1266c:	mov	x1, x20
   12670:	stp	q1, q0, [x0, #32]
   12674:	str	q2, [x0, #16]
   12678:	ldr	w8, [x22, #80]
   1267c:	stp	wzr, wzr, [x0, #44]
   12680:	str	w8, [x0, #80]
   12684:	ldr	x0, [x21, #1400]
   12688:	bl	65c0 <PyContextVar_Set@plt>
   1268c:	cbz	x0, 126a8 <PyInit__decimal@@Base+0xbbf4>
   12690:	ldr	x8, [x0]
   12694:	subs	x8, x8, #0x1
   12698:	str	x8, [x0]
   1269c:	b.ne	12618 <PyInit__decimal@@Base+0xbb64>  // b.any
   126a0:	bl	6510 <_Py_Dealloc@plt>
   126a4:	b	12618 <PyInit__decimal@@Base+0xbb64>
   126a8:	ldr	x8, [x20]
   126ac:	subs	x8, x8, #0x1
   126b0:	str	x8, [x20]
   126b4:	b.ne	126c0 <PyInit__decimal@@Base+0xbc0c>  // b.any
   126b8:	mov	x0, x20
   126bc:	bl	6510 <_Py_Dealloc@plt>
   126c0:	mov	x0, xzr
   126c4:	ldp	x20, x19, [sp, #48]
   126c8:	ldp	x22, x21, [sp, #32]
   126cc:	ldp	x29, x30, [sp, #16]
   126d0:	add	sp, sp, #0x40
   126d4:	ret
   126d8:	str	d8, [sp, #-32]!
   126dc:	stp	x29, x30, [sp, #8]
   126e0:	str	x19, [sp, #24]
   126e4:	mov	x29, sp
   126e8:	bl	a004 <PyInit__decimal@@Base+0x3550>
   126ec:	cbz	x0, 12728 <PyInit__decimal@@Base+0xbc74>
   126f0:	mov	x19, x0
   126f4:	bl	6800 <PyFloat_AsDouble@plt>
   126f8:	ldr	x8, [x19]
   126fc:	mov	v8.16b, v0.16b
   12700:	subs	x8, x8, #0x1
   12704:	str	x8, [x19]
   12708:	b.ne	12714 <PyInit__decimal@@Base+0xbc60>  // b.any
   1270c:	mov	x0, x19
   12710:	bl	6510 <_Py_Dealloc@plt>
   12714:	fmov	d0, #-1.000000000000000000e+00
   12718:	fcmp	d8, d0
   1271c:	b.ne	1273c <PyInit__decimal@@Base+0xbc88>  // b.any
   12720:	bl	6720 <PyErr_Occurred@plt>
   12724:	cbz	x0, 1273c <PyInit__decimal@@Base+0xbc88>
   12728:	ldr	x19, [sp, #24]
   1272c:	ldp	x29, x30, [sp, #8]
   12730:	mov	x0, xzr
   12734:	ldr	d8, [sp], #32
   12738:	ret
   1273c:	ldr	x19, [sp, #24]
   12740:	ldp	x29, x30, [sp, #8]
   12744:	fmov	d1, xzr
   12748:	mov	v0.16b, v8.16b
   1274c:	ldr	d8, [sp], #32
   12750:	b	6940 <PyComplex_FromDoubles@plt>
   12754:	stp	x29, x30, [sp, #-32]!
   12758:	stp	x20, x19, [sp, #16]
   1275c:	mov	x29, sp
   12760:	ldr	x8, [x0, #8]
   12764:	add	x20, x0, #0x18
   12768:	mov	x0, x20
   1276c:	ldr	x19, [x8, #32]
   12770:	bl	20d6c <PyInit__decimal@@Base+0x1a2b8>
   12774:	cbz	w0, 12780 <PyInit__decimal@@Base+0xbccc>
   12778:	ldr	x8, [x20, #32]
   1277c:	add	x19, x19, x8, lsl #3
   12780:	mov	x0, x19
   12784:	ldp	x20, x19, [sp, #16]
   12788:	ldp	x29, x30, [sp], #32
   1278c:	b	65e0 <PyLong_FromSsize_t@plt>
   12790:	stp	x29, x30, [sp, #-80]!
   12794:	stp	x26, x25, [sp, #16]
   12798:	stp	x24, x23, [sp, #32]
   1279c:	stp	x22, x21, [sp, #48]
   127a0:	stp	x20, x19, [sp, #64]
   127a4:	mov	x29, sp
   127a8:	ldr	x8, [x0, #8]
   127ac:	ldrb	w8, [x8, #171]
   127b0:	tbnz	w8, #4, 127d4 <PyInit__decimal@@Base+0xbd20>
   127b4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   127b8:	ldr	x8, [x8, #3936]
   127bc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   127c0:	add	x1, x1, #0x686
   127c4:	ldr	x0, [x8]
   127c8:	bl	6590 <PyErr_SetString@plt>
   127cc:	mov	w0, #0xffffffff            	// #-1
   127d0:	b	12910 <PyInit__decimal@@Base+0xbe5c>
   127d4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   127d8:	ldr	x1, [x8, #1520]
   127dc:	mov	x19, x0
   127e0:	cmp	x1, x0
   127e4:	b.eq	128dc <PyInit__decimal@@Base+0xbe28>  // b.none
   127e8:	adrp	x26, 53000 <PyInit__decimal@@Base+0x4c54c>
   127ec:	ldr	x8, [x26, #1528]
   127f0:	cmp	x8, x19
   127f4:	b.eq	128e4 <PyInit__decimal@@Base+0xbe30>  // b.none
   127f8:	adrp	x25, 53000 <PyInit__decimal@@Base+0x4c54c>
   127fc:	ldr	x8, [x25, #1536]
   12800:	cmp	x8, x19
   12804:	b.eq	128ec <PyInit__decimal@@Base+0xbe38>  // b.none
   12808:	adrp	x24, 53000 <PyInit__decimal@@Base+0x4c54c>
   1280c:	ldr	x8, [x24, #1544]
   12810:	cmp	x8, x19
   12814:	b.eq	128f4 <PyInit__decimal@@Base+0xbe40>  // b.none
   12818:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   1281c:	ldr	x8, [x23, #1552]
   12820:	cmp	x8, x19
   12824:	b.eq	128fc <PyInit__decimal@@Base+0xbe48>  // b.none
   12828:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   1282c:	ldr	x8, [x22, #1560]
   12830:	cmp	x8, x19
   12834:	b.eq	12904 <PyInit__decimal@@Base+0xbe50>  // b.none
   12838:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   1283c:	ldr	x8, [x21, #1568]
   12840:	cmp	x8, x19
   12844:	b.eq	1290c <PyInit__decimal@@Base+0xbe58>  // b.none
   12848:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   1284c:	ldr	x8, [x20, #1576]
   12850:	cmp	x8, x19
   12854:	b.eq	128d4 <PyInit__decimal@@Base+0xbe20>  // b.none
   12858:	mov	x0, x19
   1285c:	bl	6840 <PyUnicode_Compare@plt>
   12860:	cbz	w0, 12910 <PyInit__decimal@@Base+0xbe5c>
   12864:	ldr	x1, [x26, #1528]
   12868:	mov	x0, x19
   1286c:	bl	6840 <PyUnicode_Compare@plt>
   12870:	cbz	w0, 128e4 <PyInit__decimal@@Base+0xbe30>
   12874:	ldr	x1, [x25, #1536]
   12878:	mov	x0, x19
   1287c:	bl	6840 <PyUnicode_Compare@plt>
   12880:	cbz	w0, 128ec <PyInit__decimal@@Base+0xbe38>
   12884:	ldr	x1, [x24, #1544]
   12888:	mov	x0, x19
   1288c:	bl	6840 <PyUnicode_Compare@plt>
   12890:	cbz	w0, 128f4 <PyInit__decimal@@Base+0xbe40>
   12894:	ldr	x1, [x23, #1552]
   12898:	mov	x0, x19
   1289c:	bl	6840 <PyUnicode_Compare@plt>
   128a0:	cbz	w0, 128fc <PyInit__decimal@@Base+0xbe48>
   128a4:	ldr	x1, [x22, #1560]
   128a8:	mov	x0, x19
   128ac:	bl	6840 <PyUnicode_Compare@plt>
   128b0:	cbz	w0, 12904 <PyInit__decimal@@Base+0xbe50>
   128b4:	ldr	x1, [x21, #1568]
   128b8:	mov	x0, x19
   128bc:	bl	6840 <PyUnicode_Compare@plt>
   128c0:	cbz	w0, 1290c <PyInit__decimal@@Base+0xbe58>
   128c4:	ldr	x1, [x20, #1576]
   128c8:	mov	x0, x19
   128cc:	bl	6840 <PyUnicode_Compare@plt>
   128d0:	cbnz	w0, 127b4 <PyInit__decimal@@Base+0xbd00>
   128d4:	mov	w0, #0x7                   	// #7
   128d8:	b	12910 <PyInit__decimal@@Base+0xbe5c>
   128dc:	mov	w0, wzr
   128e0:	b	12910 <PyInit__decimal@@Base+0xbe5c>
   128e4:	mov	w0, #0x1                   	// #1
   128e8:	b	12910 <PyInit__decimal@@Base+0xbe5c>
   128ec:	mov	w0, #0x2                   	// #2
   128f0:	b	12910 <PyInit__decimal@@Base+0xbe5c>
   128f4:	mov	w0, #0x3                   	// #3
   128f8:	b	12910 <PyInit__decimal@@Base+0xbe5c>
   128fc:	mov	w0, #0x4                   	// #4
   12900:	b	12910 <PyInit__decimal@@Base+0xbe5c>
   12904:	mov	w0, #0x5                   	// #5
   12908:	b	12910 <PyInit__decimal@@Base+0xbe5c>
   1290c:	mov	w0, #0x6                   	// #6
   12910:	ldp	x20, x19, [sp, #64]
   12914:	ldp	x22, x21, [sp, #48]
   12918:	ldp	x24, x23, [sp, #32]
   1291c:	ldp	x26, x25, [sp, #16]
   12920:	ldp	x29, x30, [sp], #80
   12924:	ret
   12928:	ldr	x8, [x0]
   1292c:	add	x8, x8, #0x1
   12930:	str	x8, [x0]
   12934:	ret
   12938:	stp	x29, x30, [sp, #-48]!
   1293c:	str	x21, [sp, #16]
   12940:	stp	x20, x19, [sp, #32]
   12944:	mov	x29, sp
   12948:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1294c:	add	x0, x0, #0x318
   12950:	bl	6890 <_PyObject_New@plt>
   12954:	mov	x19, x0
   12958:	cbz	x0, 129a4 <PyInit__decimal@@Base+0xbef0>
   1295c:	mov	x21, x19
   12960:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3154c>
   12964:	str	xzr, [x21, #72]!
   12968:	ldr	q0, [x10, #3280]
   1296c:	mov	x8, #0xffffffffffffffff    	// #-1
   12970:	mov	w9, #0x30                  	// #48
   12974:	mov	x20, x21
   12978:	stur	x8, [x21, #-56]
   1297c:	strb	w9, [x20, #-48]!
   12980:	mov	x0, x20
   12984:	mov	w1, wzr
   12988:	stp	xzr, xzr, [x21, #-40]
   1298c:	stur	x21, [x21, #-8]
   12990:	stur	q0, [x21, #-24]
   12994:	bl	212b4 <PyInit__decimal@@Base+0x1a800>
   12998:	mov	x0, x20
   1299c:	stur	xzr, [x21, #-40]
   129a0:	bl	21070 <PyInit__decimal@@Base+0x1a5bc>
   129a4:	mov	x0, x19
   129a8:	ldp	x20, x19, [sp, #32]
   129ac:	ldr	x21, [sp, #16]
   129b0:	ldp	x29, x30, [sp], #48
   129b4:	ret
   129b8:	stp	x29, x30, [sp, #-96]!
   129bc:	str	x27, [sp, #16]
   129c0:	stp	x26, x25, [sp, #32]
   129c4:	stp	x24, x23, [sp, #48]
   129c8:	stp	x22, x21, [sp, #64]
   129cc:	stp	x20, x19, [sp, #80]
   129d0:	mov	x29, sp
   129d4:	ldr	w23, [x0, #32]
   129d8:	mov	w19, w2
   129dc:	mov	x20, x0
   129e0:	mov	w21, w1
   129e4:	tbnz	w23, #7, 129fc <PyInit__decimal@@Base+0xbf48>
   129e8:	mov	x0, x20
   129ec:	bl	6400 <_PyUnicode_Ready@plt>
   129f0:	cmn	w0, #0x1
   129f4:	b.eq	12bbc <PyInit__decimal@@Base+0xc108>  // b.none
   129f8:	ldr	w23, [x20, #32]
   129fc:	tbnz	w23, #5, 12a08 <PyInit__decimal@@Base+0xbf54>
   12a00:	ldr	x22, [x20, #72]
   12a04:	b	12a18 <PyInit__decimal@@Base+0xbf64>
   12a08:	add	x8, x20, #0x30
   12a0c:	add	x9, x20, #0x48
   12a10:	tst	w23, #0x40
   12a14:	csel	x22, x9, x8, eq  // eq = none
   12a18:	ldr	x25, [x20, #16]
   12a1c:	add	x0, x25, #0x1
   12a20:	bl	6980 <PyMem_Malloc@plt>
   12a24:	mov	x20, x0
   12a28:	cbz	x0, 12bb4 <PyInit__decimal@@Base+0xc100>
   12a2c:	adrp	x24, 50000 <PyInit__decimal@@Base+0x4954c>
   12a30:	ldr	x24, [x24, #3880]
   12a34:	ubfx	w23, w23, #2, #3
   12a38:	cbz	w21, 12b14 <PyInit__decimal@@Base+0xc060>
   12a3c:	sub	x8, x25, #0x1
   12a40:	b	12a50 <PyInit__decimal@@Base+0xbf9c>
   12a44:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   12a48:	sub	x8, x27, #0x1
   12a4c:	cbz	w0, 12aa8 <PyInit__decimal@@Base+0xbff4>
   12a50:	add	x25, x8, #0x1
   12a54:	cmp	x25, #0x1
   12a58:	b.lt	12b14 <PyInit__decimal@@Base+0xc060>  // b.tstop
   12a5c:	mov	x27, x8
   12a60:	cmp	w23, #0x2
   12a64:	b.eq	12a80 <PyInit__decimal@@Base+0xbfcc>  // b.none
   12a68:	cmp	w23, #0x1
   12a6c:	b.ne	12a90 <PyInit__decimal@@Base+0xbfdc>  // b.any
   12a70:	ldrb	w0, [x22, x27]
   12a74:	cmp	w0, #0x7f
   12a78:	b.hi	12a44 <PyInit__decimal@@Base+0xbf90>  // b.pmore
   12a7c:	b	12a9c <PyInit__decimal@@Base+0xbfe8>
   12a80:	ldrh	w0, [x22, x27, lsl #1]
   12a84:	cmp	w0, #0x7f
   12a88:	b.ls	12a9c <PyInit__decimal@@Base+0xbfe8>  // b.plast
   12a8c:	b	12a44 <PyInit__decimal@@Base+0xbf90>
   12a90:	ldr	w0, [x22, x27, lsl #2]
   12a94:	cmp	w0, #0x7f
   12a98:	b.hi	12a44 <PyInit__decimal@@Base+0xbf90>  // b.pmore
   12a9c:	ldrb	w0, [x24, w0, uxtw]
   12aa0:	sub	x8, x27, #0x1
   12aa4:	cbnz	w0, 12a50 <PyInit__decimal@@Base+0xbf9c>
   12aa8:	mov	x26, xzr
   12aac:	add	x21, x8, #0x2
   12ab0:	add	x25, x27, #0x1
   12ab4:	b	12acc <PyInit__decimal@@Base+0xc018>
   12ab8:	ldrb	w0, [x24, w0, uxtw]
   12abc:	cbz	w0, 12b18 <PyInit__decimal@@Base+0xc064>
   12ac0:	add	x26, x26, #0x1
   12ac4:	cmp	x21, x26
   12ac8:	b.eq	12bc4 <PyInit__decimal@@Base+0xc110>  // b.none
   12acc:	cmp	w23, #0x2
   12ad0:	b.eq	12aec <PyInit__decimal@@Base+0xc038>  // b.none
   12ad4:	cmp	w23, #0x1
   12ad8:	b.ne	12afc <PyInit__decimal@@Base+0xc048>  // b.any
   12adc:	ldrb	w0, [x22, x26]
   12ae0:	cmp	w0, #0x7f
   12ae4:	b.hi	12b08 <PyInit__decimal@@Base+0xc054>  // b.pmore
   12ae8:	b	12ab8 <PyInit__decimal@@Base+0xc004>
   12aec:	ldrh	w0, [x22, x26, lsl #1]
   12af0:	cmp	w0, #0x7f
   12af4:	b.ls	12ab8 <PyInit__decimal@@Base+0xc004>  // b.plast
   12af8:	b	12b08 <PyInit__decimal@@Base+0xc054>
   12afc:	ldr	w0, [x22, x26, lsl #2]
   12b00:	cmp	w0, #0x7f
   12b04:	b.ls	12ab8 <PyInit__decimal@@Base+0xc004>  // b.plast
   12b08:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   12b0c:	cbnz	w0, 12ac0 <PyInit__decimal@@Base+0xc00c>
   12b10:	b	12b18 <PyInit__decimal@@Base+0xc064>
   12b14:	mov	x26, xzr
   12b18:	cmp	x26, x25
   12b1c:	mov	x27, x20
   12b20:	b.ge	12bc8 <PyInit__decimal@@Base+0xc114>  // b.tcont
   12b24:	mov	x27, x20
   12b28:	b	12b48 <PyInit__decimal@@Base+0xc094>
   12b2c:	ldrb	w8, [x24, w21, uxtw]
   12b30:	cbz	w8, 12ba0 <PyInit__decimal@@Base+0xc0ec>
   12b34:	mov	w21, #0x20                  	// #32
   12b38:	strb	w21, [x27], #1
   12b3c:	add	x26, x26, #0x1
   12b40:	cmp	x25, x26
   12b44:	b.eq	12bc8 <PyInit__decimal@@Base+0xc114>  // b.none
   12b48:	cmp	w23, #0x2
   12b4c:	b.eq	12b64 <PyInit__decimal@@Base+0xc0b0>  // b.none
   12b50:	cmp	w23, #0x1
   12b54:	b.ne	12b70 <PyInit__decimal@@Base+0xc0bc>  // b.any
   12b58:	ldrb	w21, [x22, x26]
   12b5c:	cbnz	w19, 12b78 <PyInit__decimal@@Base+0xc0c4>
   12b60:	b	12b80 <PyInit__decimal@@Base+0xc0cc>
   12b64:	ldrh	w21, [x22, x26, lsl #1]
   12b68:	cbnz	w19, 12b78 <PyInit__decimal@@Base+0xc0c4>
   12b6c:	b	12b80 <PyInit__decimal@@Base+0xc0cc>
   12b70:	ldr	w21, [x22, x26, lsl #2]
   12b74:	cbz	w19, 12b80 <PyInit__decimal@@Base+0xc0cc>
   12b78:	cmp	w21, #0x5f
   12b7c:	b.eq	12b3c <PyInit__decimal@@Base+0xc088>  // b.none
   12b80:	sub	w8, w21, #0x1
   12b84:	cmp	w8, #0x7e
   12b88:	b.ls	12b38 <PyInit__decimal@@Base+0xc084>  // b.plast
   12b8c:	cmp	w21, #0x7f
   12b90:	b.ls	12b2c <PyInit__decimal@@Base+0xc078>  // b.plast
   12b94:	mov	w0, w21
   12b98:	bl	6740 <_PyUnicode_IsWhitespace@plt>
   12b9c:	cbnz	w0, 12b34 <PyInit__decimal@@Base+0xc080>
   12ba0:	mov	w0, w21
   12ba4:	bl	67f0 <_PyUnicode_ToDecimalDigit@plt>
   12ba8:	tbnz	w0, #31, 12bec <PyInit__decimal@@Base+0xc138>
   12bac:	add	w21, w0, #0x30
   12bb0:	b	12b38 <PyInit__decimal@@Base+0xc084>
   12bb4:	bl	6520 <PyErr_NoMemory@plt>
   12bb8:	b	12bcc <PyInit__decimal@@Base+0xc118>
   12bbc:	mov	x20, xzr
   12bc0:	b	12bcc <PyInit__decimal@@Base+0xc118>
   12bc4:	mov	x27, x20
   12bc8:	strb	wzr, [x27]
   12bcc:	mov	x0, x20
   12bd0:	ldp	x20, x19, [sp, #80]
   12bd4:	ldp	x22, x21, [sp, #64]
   12bd8:	ldp	x24, x23, [sp, #48]
   12bdc:	ldp	x26, x25, [sp, #32]
   12be0:	ldr	x27, [sp, #16]
   12be4:	ldp	x29, x30, [sp], #96
   12be8:	ret
   12bec:	strb	wzr, [x20]
   12bf0:	b	12bcc <PyInit__decimal@@Base+0xc118>
   12bf4:	sub	sp, sp, #0x70
   12bf8:	stp	x29, x30, [sp, #64]
   12bfc:	stp	x22, x21, [sp, #80]
   12c00:	stp	x20, x19, [sp, #96]
   12c04:	add	x29, sp, #0x40
   12c08:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   12c0c:	add	x8, x8, #0x318
   12c10:	mov	x19, x2
   12c14:	mov	x21, x1
   12c18:	cmp	x0, x8
   12c1c:	stur	wzr, [x29, #-4]
   12c20:	b.eq	12c3c <PyInit__decimal@@Base+0xc188>  // b.none
   12c24:	ldr	x8, [x0, #304]
   12c28:	mov	x1, xzr
   12c2c:	blr	x8
   12c30:	mov	x20, x0
   12c34:	cbnz	x0, 12c50 <PyInit__decimal@@Base+0xc19c>
   12c38:	b	12cec <PyInit__decimal@@Base+0xc238>
   12c3c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   12c40:	add	x0, x0, #0x318
   12c44:	bl	6890 <_PyObject_New@plt>
   12c48:	mov	x20, x0
   12c4c:	cbz	x0, 12cec <PyInit__decimal@@Base+0xc238>
   12c50:	mov	w8, #0x30                  	// #48
   12c54:	mov	x22, x20
   12c58:	strb	w8, [x22, #24]!
   12c5c:	mov	x9, #0xffffffffffffffff    	// #-1
   12c60:	mov	w10, #0x4                   	// #4
   12c64:	add	x8, x22, #0x30
   12c68:	add	x0, sp, #0x8
   12c6c:	stur	x9, [x22, #-8]
   12c70:	stp	xzr, xzr, [x22, #8]
   12c74:	stp	xzr, x10, [x22, #24]
   12c78:	str	x8, [x22, #40]
   12c7c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   12c80:	add	x2, sp, #0x8
   12c84:	sub	x3, x29, #0x4
   12c88:	mov	x0, x22
   12c8c:	mov	x1, x21
   12c90:	bl	1df0c <PyInit__decimal@@Base+0x17458>
   12c94:	ldur	w8, [x29, #-4]
   12c98:	mov	w9, #0x1041                	// #4161
   12c9c:	tst	w8, w9
   12ca0:	b.eq	12cb8 <PyInit__decimal@@Base+0xc204>  // b.none
   12ca4:	sub	x2, x29, #0x4
   12ca8:	mov	w1, #0x100                 	// #256
   12cac:	mov	x0, x22
   12cb0:	bl	21760 <PyInit__decimal@@Base+0x1acac>
   12cb4:	ldur	w8, [x29, #-4]
   12cb8:	mov	w9, #0x3be                 	// #958
   12cbc:	and	w1, w8, w9
   12cc0:	mov	x0, x19
   12cc4:	stur	w1, [x29, #-4]
   12cc8:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   12ccc:	cbz	w0, 12cec <PyInit__decimal@@Base+0xc238>
   12cd0:	ldr	x8, [x20]
   12cd4:	subs	x8, x8, #0x1
   12cd8:	str	x8, [x20]
   12cdc:	b.ne	12ce8 <PyInit__decimal@@Base+0xc234>  // b.any
   12ce0:	mov	x0, x20
   12ce4:	bl	6510 <_Py_Dealloc@plt>
   12ce8:	mov	x20, xzr
   12cec:	mov	x0, x20
   12cf0:	ldp	x20, x19, [sp, #96]
   12cf4:	ldp	x22, x21, [sp, #80]
   12cf8:	ldp	x29, x30, [sp, #64]
   12cfc:	add	sp, sp, #0x70
   12d00:	ret
   12d04:	sub	sp, sp, #0x60
   12d08:	stp	x29, x30, [sp, #16]
   12d0c:	stp	x26, x25, [sp, #32]
   12d10:	stp	x24, x23, [sp, #48]
   12d14:	stp	x22, x21, [sp, #64]
   12d18:	stp	x20, x19, [sp, #80]
   12d1c:	add	x29, sp, #0x10
   12d20:	mov	x19, x0
   12d24:	bl	6920 <PyTuple_Size@plt>
   12d28:	cmp	x0, #0x3
   12d2c:	b.ne	12d94 <PyInit__decimal@@Base+0xc2e0>  // b.any
   12d30:	ldr	x0, [x19, #24]
   12d34:	ldr	x8, [x0, #8]
   12d38:	ldrb	w8, [x8, #171]
   12d3c:	tbz	w8, #0, 12db0 <PyInit__decimal@@Base+0xc2fc>
   12d40:	bl	6760 <PyLong_AsLong@plt>
   12d44:	cmn	x0, #0x1
   12d48:	b.eq	12da8 <PyInit__decimal@@Base+0xc2f4>  // b.none
   12d4c:	cmp	x0, #0x2
   12d50:	b.cs	12db0 <PyInit__decimal@@Base+0xc2fc>  // b.hs, b.nlast
   12d54:	cmp	x0, #0x0
   12d58:	mov	w8, #0x2d                  	// #45
   12d5c:	mov	w9, #0x2b                  	// #43
   12d60:	csel	w8, w9, w8, eq  // eq = none
   12d64:	strb	w8, [sp, #8]
   12d68:	strb	wzr, [sp, #9]
   12d6c:	ldr	x20, [x19, #40]
   12d70:	ldr	x8, [x20, #8]
   12d74:	ldr	x8, [x8, #168]
   12d78:	tbnz	w8, #28, 12dec <PyInit__decimal@@Base+0xc338>
   12d7c:	tbnz	w8, #24, 12e3c <PyInit__decimal@@Base+0xc388>
   12d80:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   12d84:	ldr	x8, [x8, #3928]
   12d88:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12d8c:	add	x1, x1, #0x9c9
   12d90:	b	12dc0 <PyInit__decimal@@Base+0xc30c>
   12d94:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   12d98:	ldr	x8, [x8, #3928]
   12d9c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12da0:	add	x1, x1, #0x930
   12da4:	b	12dc0 <PyInit__decimal@@Base+0xc30c>
   12da8:	bl	6720 <PyErr_Occurred@plt>
   12dac:	cbnz	x0, 12dc8 <PyInit__decimal@@Base+0xc314>
   12db0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   12db4:	ldr	x8, [x8, #3928]
   12db8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12dbc:	add	x1, x1, #0x958
   12dc0:	ldr	x0, [x8]
   12dc4:	bl	6590 <PyErr_SetString@plt>
   12dc8:	mov	x20, xzr
   12dcc:	mov	x0, x20
   12dd0:	ldp	x20, x19, [sp, #80]
   12dd4:	ldp	x22, x21, [sp, #64]
   12dd8:	ldp	x24, x23, [sp, #48]
   12ddc:	ldp	x26, x25, [sp, #32]
   12de0:	ldp	x29, x30, [sp, #16]
   12de4:	add	sp, sp, #0x60
   12de8:	ret
   12dec:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12df0:	add	x1, x1, #0x77f
   12df4:	mov	x0, x20
   12df8:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   12dfc:	cbz	w0, 12e58 <PyInit__decimal@@Base+0xc3a4>
   12e00:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12e04:	add	x1, x1, #0x342
   12e08:	mov	x0, x20
   12e0c:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   12e10:	cbz	w0, 12e7c <PyInit__decimal@@Base+0xc3c8>
   12e14:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   12e18:	add	x1, x1, #0x472
   12e1c:	mov	x0, x20
   12e20:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   12e24:	cbz	w0, 12eb4 <PyInit__decimal@@Base+0xc400>
   12e28:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   12e2c:	ldr	x8, [x8, #3928]
   12e30:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12e34:	add	x1, x1, #0x98b
   12e38:	b	12dc0 <PyInit__decimal@@Base+0xc30c>
   12e3c:	mov	x0, x20
   12e40:	bl	6630 <PyLong_AsSsize_t@plt>
   12e44:	cmn	x0, #0x1
   12e48:	b.eq	12ea0 <PyInit__decimal@@Base+0xc3ec>  // b.none
   12e4c:	mov	x21, x0
   12e50:	mov	w24, wzr
   12e54:	b	12edc <PyInit__decimal@@Base+0xc428>
   12e58:	add	x0, sp, #0x8
   12e5c:	add	x20, sp, #0x8
   12e60:	bl	6420 <strlen@plt>
   12e64:	mov	w8, #0x6e49                	// #28233
   12e68:	movk	w8, #0x66, lsl #16
   12e6c:	mov	x21, xzr
   12e70:	str	w8, [x20, x0]
   12e74:	mov	w24, #0x1                   	// #1
   12e78:	b	12edc <PyInit__decimal@@Base+0xc428>
   12e7c:	add	x0, sp, #0x8
   12e80:	add	x20, sp, #0x8
   12e84:	bl	6420 <strlen@plt>
   12e88:	mov	w8, #0x614e                	// #24910
   12e8c:	movk	w8, #0x4e, lsl #16
   12e90:	mov	x21, xzr
   12e94:	mov	w24, wzr
   12e98:	str	w8, [x20, x0]
   12e9c:	b	12edc <PyInit__decimal@@Base+0xc428>
   12ea0:	bl	6720 <PyErr_Occurred@plt>
   12ea4:	cbnz	x0, 12dc8 <PyInit__decimal@@Base+0xc314>
   12ea8:	mov	w24, wzr
   12eac:	mov	x21, #0xffffffffffffffff    	// #-1
   12eb0:	b	12edc <PyInit__decimal@@Base+0xc428>
   12eb4:	add	x0, sp, #0x8
   12eb8:	add	x20, sp, #0x8
   12ebc:	bl	6420 <strlen@plt>
   12ec0:	mov	w9, #0x4e73                	// #20083
   12ec4:	add	x8, x20, x0
   12ec8:	movk	w9, #0x4e61, lsl #16
   12ecc:	mov	x21, xzr
   12ed0:	mov	w24, wzr
   12ed4:	str	w9, [x8]
   12ed8:	strb	wzr, [x8, #4]
   12edc:	ldr	x19, [x19, #32]
   12ee0:	adrp	x25, 50000 <PyInit__decimal@@Base+0x4954c>
   12ee4:	ldr	x8, [x19, #8]
   12ee8:	ldr	x8, [x8, #168]
   12eec:	ldr	x25, [x25, #3928]
   12ef0:	tbnz	w8, #26, 12f08 <PyInit__decimal@@Base+0xc454>
   12ef4:	tbnz	w8, #25, 12f18 <PyInit__decimal@@Base+0xc464>
   12ef8:	ldr	x0, [x25]
   12efc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   12f00:	add	x1, x1, #0x9e5
   12f04:	b	12dc4 <PyInit__decimal@@Base+0xc310>
   12f08:	ldr	x8, [x19]
   12f0c:	add	x8, x8, #0x1
   12f10:	str	x8, [x19]
   12f14:	b	12f28 <PyInit__decimal@@Base+0xc474>
   12f18:	mov	x0, x19
   12f1c:	bl	6470 <PyList_AsTuple@plt>
   12f20:	mov	x19, x0
   12f24:	cbz	x0, 12dc8 <PyInit__decimal@@Base+0xc314>
   12f28:	mov	x0, x19
   12f2c:	bl	6920 <PyTuple_Size@plt>
   12f30:	add	x23, x0, #0x19
   12f34:	mov	x22, x0
   12f38:	mov	x0, x23
   12f3c:	bl	6980 <PyMem_Malloc@plt>
   12f40:	mov	x20, x0
   12f44:	cbz	x0, 12f8c <PyInit__decimal@@Base+0xc4d8>
   12f48:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   12f4c:	add	x2, x2, #0x242
   12f50:	add	x3, sp, #0x8
   12f54:	mov	x0, x20
   12f58:	mov	x1, x23
   12f5c:	bl	6550 <snprintf@plt>
   12f60:	tbnz	w0, #31, 13018 <PyInit__decimal@@Base+0xc564>
   12f64:	mov	w8, w0
   12f68:	cmp	x23, x8
   12f6c:	b.le	13018 <PyInit__decimal@@Base+0xc564>
   12f70:	add	x23, x20, x8
   12f74:	cbnz	x22, 12f94 <PyInit__decimal@@Base+0xc4e0>
   12f78:	ldrb	w8, [sp, #9]
   12f7c:	cbnz	w8, 12f94 <PyInit__decimal@@Base+0xc4e0>
   12f80:	mov	w8, #0x30                  	// #48
   12f84:	strb	w8, [x23], #1
   12f88:	b	12fe4 <PyInit__decimal@@Base+0xc530>
   12f8c:	bl	6520 <PyErr_NoMemory@plt>
   12f90:	b	13030 <PyInit__decimal@@Base+0xc57c>
   12f94:	cmp	x22, #0x1
   12f98:	b.lt	12fe4 <PyInit__decimal@@Base+0xc530>  // b.tstop
   12f9c:	add	x26, x19, #0x18
   12fa0:	b	12fb0 <PyInit__decimal@@Base+0xc4fc>
   12fa4:	subs	x22, x22, #0x1
   12fa8:	add	x26, x26, #0x8
   12fac:	b.eq	12fe4 <PyInit__decimal@@Base+0xc530>  // b.none
   12fb0:	ldr	x0, [x26]
   12fb4:	ldr	x8, [x0, #8]
   12fb8:	ldrb	w8, [x8, #171]
   12fbc:	tbz	w8, #0, 1307c <PyInit__decimal@@Base+0xc5c8>
   12fc0:	bl	6760 <PyLong_AsLong@plt>
   12fc4:	cmn	x0, #0x1
   12fc8:	b.eq	13074 <PyInit__decimal@@Base+0xc5c0>  // b.none
   12fcc:	cmp	x0, #0xa
   12fd0:	b.cs	1307c <PyInit__decimal@@Base+0xc5c8>  // b.hs, b.nlast
   12fd4:	cbnz	w24, 12fa4 <PyInit__decimal@@Base+0xc4f0>
   12fd8:	add	w8, w0, #0x30
   12fdc:	strb	w8, [x23], #1
   12fe0:	b	12fa4 <PyInit__decimal@@Base+0xc4f0>
   12fe4:	strb	wzr, [x23]
   12fe8:	ldrb	w8, [sp, #9]
   12fec:	cbnz	w8, 13058 <PyInit__decimal@@Base+0xc5a4>
   12ff0:	mov	w8, #0x45                  	// #69
   12ff4:	strb	w8, [x23], #1
   12ff8:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   12ffc:	add	x2, x2, #0xa31
   13000:	mov	w1, #0x15                  	// #21
   13004:	mov	x0, x23
   13008:	mov	x3, x21
   1300c:	bl	6550 <snprintf@plt>
   13010:	cmp	w0, #0x15
   13014:	b.cc	13058 <PyInit__decimal@@Base+0xc5a4>  // b.lo, b.ul, b.last
   13018:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1301c:	ldr	x8, [x8, #3920]
   13020:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13024:	add	x1, x1, #0xa0b
   13028:	ldr	x0, [x8]
   1302c:	bl	6590 <PyErr_SetString@plt>
   13030:	ldr	x8, [x19]
   13034:	subs	x8, x8, #0x1
   13038:	str	x8, [x19]
   1303c:	b.ne	13048 <PyInit__decimal@@Base+0xc594>  // b.any
   13040:	mov	x0, x19
   13044:	bl	6510 <_Py_Dealloc@plt>
   13048:	cbz	x20, 12dcc <PyInit__decimal@@Base+0xc318>
   1304c:	mov	x0, x20
   13050:	bl	64a0 <PyMem_Free@plt>
   13054:	b	12dc8 <PyInit__decimal@@Base+0xc314>
   13058:	ldr	x8, [x19]
   1305c:	subs	x8, x8, #0x1
   13060:	str	x8, [x19]
   13064:	b.ne	12dcc <PyInit__decimal@@Base+0xc318>  // b.any
   13068:	mov	x0, x19
   1306c:	bl	6510 <_Py_Dealloc@plt>
   13070:	b	12dcc <PyInit__decimal@@Base+0xc318>
   13074:	bl	6720 <PyErr_Occurred@plt>
   13078:	cbnz	x0, 13030 <PyInit__decimal@@Base+0xc57c>
   1307c:	ldr	x0, [x25]
   13080:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13084:	add	x1, x1, #0x9e5
   13088:	b	1302c <PyInit__decimal@@Base+0xc578>
   1308c:	stp	x29, x30, [sp, #-32]!
   13090:	str	x19, [sp, #16]
   13094:	mov	x29, sp
   13098:	mov	x19, x0
   1309c:	ldr	x0, [x0, #64]
   130a0:	cbz	x0, 130b4 <PyInit__decimal@@Base+0xc600>
   130a4:	ldr	x8, [x0]
   130a8:	subs	x8, x8, #0x1
   130ac:	str	x8, [x0]
   130b0:	b.eq	130d4 <PyInit__decimal@@Base+0xc620>  // b.none
   130b4:	ldr	x0, [x19, #72]
   130b8:	cbz	x0, 130e0 <PyInit__decimal@@Base+0xc62c>
   130bc:	ldr	x8, [x0]
   130c0:	subs	x8, x8, #0x1
   130c4:	str	x8, [x0]
   130c8:	b.ne	130e0 <PyInit__decimal@@Base+0xc62c>  // b.any
   130cc:	bl	6510 <_Py_Dealloc@plt>
   130d0:	b	130e0 <PyInit__decimal@@Base+0xc62c>
   130d4:	bl	6510 <_Py_Dealloc@plt>
   130d8:	ldr	x0, [x19, #72]
   130dc:	cbnz	x0, 130bc <PyInit__decimal@@Base+0xc608>
   130e0:	ldr	x8, [x19, #8]
   130e4:	mov	x0, x19
   130e8:	ldr	x19, [sp, #16]
   130ec:	ldr	x1, [x8, #320]
   130f0:	ldp	x29, x30, [sp], #32
   130f4:	br	x1
   130f8:	sub	sp, sp, #0x130
   130fc:	stp	x29, x30, [sp, #256]
   13100:	str	x28, [sp, #272]
   13104:	stp	x20, x19, [sp, #288]
   13108:	add	x29, sp, #0x100
   1310c:	ldr	w2, [x0, #44]
   13110:	adrp	x3, 53000 <PyInit__decimal@@Base+0x4c54c>
   13114:	mov	x19, x0
   13118:	add	x3, x3, #0x2b8
   1311c:	sub	x0, x29, #0x7c
   13120:	mov	w1, #0x79                  	// #121
   13124:	bl	1f8c8 <PyInit__decimal@@Base+0x18e14>
   13128:	cmp	w0, #0x79
   1312c:	b.cs	13154 <PyInit__decimal@@Base+0xc6a0>  // b.hs, b.nlast
   13130:	ldr	w2, [x19, #40]
   13134:	adrp	x3, 53000 <PyInit__decimal@@Base+0x4c54c>
   13138:	add	x3, x3, #0x2b8
   1313c:	add	x0, sp, #0x8
   13140:	mov	w1, #0x79                  	// #121
   13144:	add	x20, sp, #0x8
   13148:	bl	1f8c8 <PyInit__decimal@@Base+0x18e14>
   1314c:	cmp	w0, #0x79
   13150:	b.cc	13174 <PyInit__decimal@@Base+0xc6c0>  // b.lo, b.ul, b.last
   13154:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13158:	ldr	x8, [x8, #3920]
   1315c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13160:	add	x1, x1, #0xa45
   13164:	ldr	x0, [x8]
   13168:	bl	6590 <PyErr_SetString@plt>
   1316c:	mov	x0, xzr
   13170:	b	131a8 <PyInit__decimal@@Base+0xc6f4>
   13174:	ldp	w8, w6, [x19, #52]
   13178:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   1317c:	sxtw	x8, w8
   13180:	add	x9, x9, #0x4e0
   13184:	ldp	x4, x3, [x19, #24]
   13188:	ldr	x1, [x19, #16]
   1318c:	ldr	x2, [x9, x8, lsl #3]
   13190:	ldr	w5, [x19, #80]
   13194:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
   13198:	add	x0, x0, #0xa64
   1319c:	sub	x7, x29, #0x7c
   131a0:	str	x20, [sp]
   131a4:	bl	63d0 <PyUnicode_FromFormat@plt>
   131a8:	ldp	x20, x19, [sp, #288]
   131ac:	ldr	x28, [sp, #272]
   131b0:	ldp	x29, x30, [sp, #256]
   131b4:	add	sp, sp, #0x130
   131b8:	ret
   131bc:	stp	x29, x30, [sp, #-32]!
   131c0:	stp	x20, x19, [sp, #16]
   131c4:	mov	x29, sp
   131c8:	ldr	x8, [x1, #8]
   131cc:	mov	x19, x1
   131d0:	mov	x20, x0
   131d4:	ldrb	w8, [x8, #171]
   131d8:	tbz	w8, #4, 13204 <PyInit__decimal@@Base+0xc750>
   131dc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   131e0:	add	x1, x1, #0xbe9
   131e4:	mov	x0, x19
   131e8:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   131ec:	cbz	w0, 13218 <PyInit__decimal@@Base+0xc764>
   131f0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   131f4:	add	x1, x1, #0xbdd
   131f8:	mov	x0, x19
   131fc:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   13200:	cbz	w0, 13220 <PyInit__decimal@@Base+0xc76c>
   13204:	mov	x0, x20
   13208:	mov	x1, x19
   1320c:	ldp	x20, x19, [sp, #16]
   13210:	ldp	x29, x30, [sp], #32
   13214:	b	66f0 <PyObject_GenericGetAttr@plt>
   13218:	ldr	x0, [x20, #64]
   1321c:	b	13224 <PyInit__decimal@@Base+0xc770>
   13220:	ldr	x0, [x20, #72]
   13224:	ldr	x8, [x0]
   13228:	add	x8, x8, #0x1
   1322c:	str	x8, [x0]
   13230:	ldp	x20, x19, [sp, #16]
   13234:	ldp	x29, x30, [sp], #32
   13238:	ret
   1323c:	stp	x29, x30, [sp, #-48]!
   13240:	str	x21, [sp, #16]
   13244:	stp	x20, x19, [sp, #32]
   13248:	mov	x29, sp
   1324c:	cbz	x2, 132ac <PyInit__decimal@@Base+0xc7f8>
   13250:	ldr	x8, [x1, #8]
   13254:	mov	x20, x2
   13258:	mov	x21, x1
   1325c:	mov	x19, x0
   13260:	ldrb	w8, [x8, #171]
   13264:	tbz	w8, #4, 13290 <PyInit__decimal@@Base+0xc7dc>
   13268:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1326c:	add	x1, x1, #0xbe9
   13270:	mov	x0, x21
   13274:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   13278:	cbz	w0, 132d8 <PyInit__decimal@@Base+0xc824>
   1327c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13280:	add	x1, x1, #0xbdd
   13284:	mov	x0, x21
   13288:	bl	67d0 <PyUnicode_CompareWithASCIIString@plt>
   1328c:	cbz	w0, 13304 <PyInit__decimal@@Base+0xc850>
   13290:	mov	x0, x19
   13294:	mov	x1, x21
   13298:	mov	x2, x20
   1329c:	ldp	x20, x19, [sp, #32]
   132a0:	ldr	x21, [sp, #16]
   132a4:	ldp	x29, x30, [sp], #48
   132a8:	b	68f0 <PyObject_GenericSetAttr@plt>
   132ac:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   132b0:	ldr	x8, [x8, #4048]
   132b4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   132b8:	add	x1, x1, #0xac2
   132bc:	ldr	x0, [x8]
   132c0:	bl	6590 <PyErr_SetString@plt>
   132c4:	mov	w0, #0xffffffff            	// #-1
   132c8:	ldp	x20, x19, [sp, #32]
   132cc:	ldr	x21, [sp, #16]
   132d0:	ldp	x29, x30, [sp], #48
   132d4:	ret
   132d8:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   132dc:	ldr	x8, [x20, #8]
   132e0:	ldr	x9, [x9, #1472]
   132e4:	cmp	x8, x9
   132e8:	b.eq	13330 <PyInit__decimal@@Base+0xc87c>  // b.none
   132ec:	mov	x0, x20
   132f0:	bl	13938 <PyInit__decimal@@Base+0xce84>
   132f4:	tst	w0, #0x18000
   132f8:	b.ne	132c4 <PyInit__decimal@@Base+0xc810>  // b.any
   132fc:	mov	w1, w0
   13300:	b	13338 <PyInit__decimal@@Base+0xc884>
   13304:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   13308:	ldr	x8, [x20, #8]
   1330c:	ldr	x9, [x9, #1472]
   13310:	cmp	x8, x9
   13314:	b.eq	13358 <PyInit__decimal@@Base+0xc8a4>  // b.none
   13318:	mov	x0, x20
   1331c:	bl	13938 <PyInit__decimal@@Base+0xce84>
   13320:	tst	w0, #0x18000
   13324:	b.ne	132c4 <PyInit__decimal@@Base+0xc810>  // b.any
   13328:	mov	w1, w0
   1332c:	b	13360 <PyInit__decimal@@Base+0xc8ac>
   13330:	ldr	x8, [x20, #16]
   13334:	ldr	w1, [x8]
   13338:	add	x0, x19, #0x10
   1333c:	bl	1c9f4 <PyInit__decimal@@Base+0x15f40>
   13340:	cbnz	w0, 1336c <PyInit__decimal@@Base+0xc8b8>
   13344:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13348:	ldr	x8, [x8, #3920]
   1334c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13350:	add	x1, x1, #0xae7
   13354:	b	132bc <PyInit__decimal@@Base+0xc808>
   13358:	ldr	x8, [x20, #16]
   1335c:	ldr	w1, [x8]
   13360:	add	x0, x19, #0x10
   13364:	bl	1ca10 <PyInit__decimal@@Base+0x15f5c>
   13368:	cbz	w0, 13374 <PyInit__decimal@@Base+0xc8c0>
   1336c:	mov	w0, wzr
   13370:	b	132c8 <PyInit__decimal@@Base+0xc814>
   13374:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13378:	ldr	x8, [x8, #3920]
   1337c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13380:	add	x1, x1, #0xb42
   13384:	b	132bc <PyInit__decimal@@Base+0xc808>
   13388:	sub	sp, sp, #0xb0
   1338c:	stp	x29, x30, [sp, #96]
   13390:	stp	x26, x25, [sp, #112]
   13394:	stp	x24, x23, [sp, #128]
   13398:	stp	x22, x21, [sp, #144]
   1339c:	stp	x20, x19, [sp, #160]
   133a0:	add	x29, sp, #0x60
   133a4:	adrp	x24, 50000 <PyInit__decimal@@Base+0x4954c>
   133a8:	ldr	x24, [x24, #4008]
   133ac:	mov	x8, x2
   133b0:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   133b4:	adrp	x3, 53000 <PyInit__decimal@@Base+0x4c54c>
   133b8:	mov	x19, x0
   133bc:	add	x9, sp, #0x20
   133c0:	add	x10, sp, #0x28
   133c4:	add	x11, sp, #0x30
   133c8:	sub	x12, x29, #0x28
   133cc:	add	x2, x2, #0xd45
   133d0:	add	x3, x3, #0x350
   133d4:	sub	x4, x29, #0x8
   133d8:	sub	x5, x29, #0x10
   133dc:	sub	x6, x29, #0x18
   133e0:	sub	x7, x29, #0x20
   133e4:	mov	x0, x1
   133e8:	mov	x1, x8
   133ec:	stp	x24, x24, [x29, #-16]
   133f0:	stp	x24, x24, [x29, #-32]
   133f4:	stur	x24, [x29, #-40]
   133f8:	stp	x24, x24, [sp, #40]
   133fc:	stp	x9, x24, [sp, #24]
   13400:	stp	x11, x10, [sp, #8]
   13404:	str	x12, [sp]
   13408:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   1340c:	cbz	w0, 13798 <PyInit__decimal@@Base+0xcce4>
   13410:	ldur	x0, [x29, #-8]
   13414:	cmp	x0, x24
   13418:	b.eq	1343c <PyInit__decimal@@Base+0xc988>  // b.none
   1341c:	bl	6630 <PyLong_AsSsize_t@plt>
   13420:	mov	x20, x0
   13424:	cmn	x0, #0x1
   13428:	b.eq	13554 <PyInit__decimal@@Base+0xcaa0>  // b.none
   1342c:	add	x0, x19, #0x10
   13430:	mov	x1, x20
   13434:	bl	1c7f8 <PyInit__decimal@@Base+0x15d44>
   13438:	cbz	w0, 13560 <PyInit__decimal@@Base+0xcaac>
   1343c:	ldur	x0, [x29, #-16]
   13440:	cmp	x0, x24
   13444:	b.eq	13464 <PyInit__decimal@@Base+0xc9b0>  // b.none
   13448:	bl	12790 <PyInit__decimal@@Base+0xbcdc>
   1344c:	cmn	w0, #0x1
   13450:	b.eq	1379c <PyInit__decimal@@Base+0xcce8>  // b.none
   13454:	mov	w1, w0
   13458:	add	x0, x19, #0x10
   1345c:	bl	1c9d8 <PyInit__decimal@@Base+0x15f24>
   13460:	cbz	w0, 13574 <PyInit__decimal@@Base+0xcac0>
   13464:	ldur	x0, [x29, #-24]
   13468:	cmp	x0, x24
   1346c:	b.eq	13490 <PyInit__decimal@@Base+0xc9dc>  // b.none
   13470:	bl	6630 <PyLong_AsSsize_t@plt>
   13474:	mov	x20, x0
   13478:	cmn	x0, #0x1
   1347c:	b.eq	13588 <PyInit__decimal@@Base+0xcad4>  // b.none
   13480:	add	x0, x19, #0x10
   13484:	mov	x1, x20
   13488:	bl	1c9ac <PyInit__decimal@@Base+0x15ef8>
   1348c:	cbz	w0, 13594 <PyInit__decimal@@Base+0xcae0>
   13490:	ldur	x0, [x29, #-32]
   13494:	cmp	x0, x24
   13498:	b.eq	134bc <PyInit__decimal@@Base+0xca08>  // b.none
   1349c:	bl	6630 <PyLong_AsSsize_t@plt>
   134a0:	mov	x20, x0
   134a4:	cmn	x0, #0x1
   134a8:	b.eq	135a8 <PyInit__decimal@@Base+0xcaf4>  // b.none
   134ac:	add	x0, x19, #0x10
   134b0:	mov	x1, x20
   134b4:	bl	1c984 <PyInit__decimal@@Base+0x15ed0>
   134b8:	cbz	w0, 135b4 <PyInit__decimal@@Base+0xcb00>
   134bc:	ldur	x0, [x29, #-40]
   134c0:	cmp	x0, x24
   134c4:	b.eq	134e0 <PyInit__decimal@@Base+0xca2c>  // b.none
   134c8:	bl	6630 <PyLong_AsSsize_t@plt>
   134cc:	cmn	x0, #0x1
   134d0:	b.eq	135c8 <PyInit__decimal@@Base+0xcb14>  // b.none
   134d4:	cmp	x0, #0x2
   134d8:	b.cs	135d0 <PyInit__decimal@@Base+0xcb1c>  // b.hs, b.nlast
   134dc:	str	w0, [x19, #80]
   134e0:	ldr	x0, [sp, #48]
   134e4:	cmp	x0, x24
   134e8:	b.eq	13514 <PyInit__decimal@@Base+0xca60>  // b.none
   134ec:	bl	6630 <PyLong_AsSsize_t@plt>
   134f0:	mov	x20, x0
   134f4:	cmn	x0, #0x1
   134f8:	b.eq	135e4 <PyInit__decimal@@Base+0xcb30>  // b.none
   134fc:	cmp	x20, w20, sxtw
   13500:	mov	w8, #0x7fffffff            	// #2147483647
   13504:	add	x0, x19, #0x10
   13508:	csel	w1, w8, w20, ne  // ne = any
   1350c:	bl	1ca2c <PyInit__decimal@@Base+0x15f78>
   13510:	cbz	w0, 13670 <PyInit__decimal@@Base+0xcbbc>
   13514:	ldr	x20, [sp, #32]
   13518:	cmp	x20, x24
   1351c:	b.eq	136c0 <PyInit__decimal@@Base+0xcc0c>  // b.none
   13520:	ldr	x8, [x20, #8]
   13524:	ldrb	w9, [x8, #171]
   13528:	tbnz	w9, #1, 135f0 <PyInit__decimal@@Base+0xcb3c>
   1352c:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   13530:	ldr	x9, [x9, #1472]
   13534:	cmp	x8, x9
   13538:	b.eq	13684 <PyInit__decimal@@Base+0xcbd0>  // b.none
   1353c:	mov	x0, x20
   13540:	bl	13938 <PyInit__decimal@@Base+0xce84>
   13544:	tst	w0, #0x18000
   13548:	b.ne	13798 <PyInit__decimal@@Base+0xcce4>  // b.any
   1354c:	mov	w1, w0
   13550:	b	1368c <PyInit__decimal@@Base+0xcbd8>
   13554:	bl	6720 <PyErr_Occurred@plt>
   13558:	cbnz	x0, 13798 <PyInit__decimal@@Base+0xcce4>
   1355c:	b	1342c <PyInit__decimal@@Base+0xc978>
   13560:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13564:	ldr	x8, [x8, #3928]
   13568:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1356c:	add	x1, x1, #0xc69
   13570:	b	13790 <PyInit__decimal@@Base+0xccdc>
   13574:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13578:	ldr	x8, [x8, #3920]
   1357c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13580:	add	x1, x1, #0xcdb
   13584:	b	13790 <PyInit__decimal@@Base+0xccdc>
   13588:	bl	6720 <PyErr_Occurred@plt>
   1358c:	cbnz	x0, 13798 <PyInit__decimal@@Base+0xcce4>
   13590:	b	13480 <PyInit__decimal@@Base+0xc9cc>
   13594:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13598:	ldr	x8, [x8, #3928]
   1359c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   135a0:	add	x1, x1, #0xcb5
   135a4:	b	13790 <PyInit__decimal@@Base+0xccdc>
   135a8:	bl	6720 <PyErr_Occurred@plt>
   135ac:	cbnz	x0, 13798 <PyInit__decimal@@Base+0xcce4>
   135b0:	b	134ac <PyInit__decimal@@Base+0xc9f8>
   135b4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   135b8:	ldr	x8, [x8, #3928]
   135bc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   135c0:	add	x1, x1, #0xc8f
   135c4:	b	13790 <PyInit__decimal@@Base+0xccdc>
   135c8:	bl	6720 <PyErr_Occurred@plt>
   135cc:	cbnz	x0, 13798 <PyInit__decimal@@Base+0xcce4>
   135d0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   135d4:	ldr	x8, [x8, #3928]
   135d8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   135dc:	add	x1, x1, #0xcfe
   135e0:	b	13790 <PyInit__decimal@@Base+0xccdc>
   135e4:	bl	6720 <PyErr_Occurred@plt>
   135e8:	cbnz	x0, 13798 <PyInit__decimal@@Base+0xcce4>
   135ec:	b	134fc <PyInit__decimal@@Base+0xca48>
   135f0:	mov	x0, x20
   135f4:	bl	6850 <PyList_Size@plt>
   135f8:	cmp	x0, #0x1
   135fc:	b.lt	136ac <PyInit__decimal@@Base+0xcbf8>  // b.tstop
   13600:	adrp	x26, 51000 <PyInit__decimal@@Base+0x4a54c>
   13604:	mov	x22, x0
   13608:	mov	x23, xzr
   1360c:	mov	w21, wzr
   13610:	adrp	x25, 51000 <PyInit__decimal@@Base+0x4a54c>
   13614:	add	x26, x26, #0xa20
   13618:	mov	x0, x20
   1361c:	mov	x1, x23
   13620:	bl	6970 <PyList_GetItem@plt>
   13624:	ldr	x8, [x25, #2560]
   13628:	cbz	x8, 13780 <PyInit__decimal@@Base+0xcccc>
   1362c:	mov	x8, x26
   13630:	ldur	x9, [x8, #-8]
   13634:	cmp	x9, x0
   13638:	b.eq	13648 <PyInit__decimal@@Base+0xcb94>  // b.none
   1363c:	ldr	x9, [x8], #32
   13640:	cbnz	x9, 13630 <PyInit__decimal@@Base+0xcb7c>
   13644:	b	13780 <PyInit__decimal@@Base+0xcccc>
   13648:	ldur	w8, [x8, #-16]
   1364c:	tst	w8, #0x18000
   13650:	b.ne	13798 <PyInit__decimal@@Base+0xcce4>  // b.any
   13654:	add	x23, x23, #0x1
   13658:	cmp	x23, x22
   1365c:	orr	w21, w8, w21
   13660:	b.ne	13618 <PyInit__decimal@@Base+0xcb64>  // b.any
   13664:	tst	w21, #0x18000
   13668:	b.ne	13798 <PyInit__decimal@@Base+0xcce4>  // b.any
   1366c:	b	136b0 <PyInit__decimal@@Base+0xcbfc>
   13670:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13674:	ldr	x8, [x8, #3928]
   13678:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1367c:	add	x1, x1, #0xd23
   13680:	b	13790 <PyInit__decimal@@Base+0xccdc>
   13684:	ldr	x8, [x20, #16]
   13688:	ldr	w1, [x8]
   1368c:	add	x0, x19, #0x10
   13690:	bl	1c9f4 <PyInit__decimal@@Base+0x15f40>
   13694:	cbnz	w0, 136c0 <PyInit__decimal@@Base+0xcc0c>
   13698:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1369c:	ldr	x8, [x8, #3920]
   136a0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   136a4:	add	x1, x1, #0xae7
   136a8:	b	13790 <PyInit__decimal@@Base+0xccdc>
   136ac:	mov	w21, wzr
   136b0:	add	x0, x19, #0x10
   136b4:	mov	w1, w21
   136b8:	bl	1c9f4 <PyInit__decimal@@Base+0x15f40>
   136bc:	cbz	w0, 137fc <PyInit__decimal@@Base+0xcd48>
   136c0:	ldr	x20, [sp, #40]
   136c4:	cmp	x20, x24
   136c8:	b.eq	137f4 <PyInit__decimal@@Base+0xcd40>  // b.none
   136cc:	ldr	x8, [x20, #8]
   136d0:	ldrb	w9, [x8, #171]
   136d4:	tbnz	w9, #1, 13700 <PyInit__decimal@@Base+0xcc4c>
   136d8:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   136dc:	ldr	x9, [x9, #1472]
   136e0:	cmp	x8, x9
   136e4:	b.eq	137b8 <PyInit__decimal@@Base+0xcd04>  // b.none
   136e8:	mov	x0, x20
   136ec:	bl	13938 <PyInit__decimal@@Base+0xce84>
   136f0:	tst	w0, #0x18000
   136f4:	b.ne	13798 <PyInit__decimal@@Base+0xcce4>  // b.any
   136f8:	mov	w1, w0
   136fc:	b	137c0 <PyInit__decimal@@Base+0xcd0c>
   13700:	mov	x0, x20
   13704:	bl	6850 <PyList_Size@plt>
   13708:	cmp	x0, #0x1
   1370c:	b.lt	137e0 <PyInit__decimal@@Base+0xcd2c>  // b.tstop
   13710:	adrp	x25, 51000 <PyInit__decimal@@Base+0x4a54c>
   13714:	mov	x22, x0
   13718:	mov	x23, xzr
   1371c:	mov	w21, wzr
   13720:	adrp	x24, 51000 <PyInit__decimal@@Base+0x4a54c>
   13724:	add	x25, x25, #0xa20
   13728:	mov	x0, x20
   1372c:	mov	x1, x23
   13730:	bl	6970 <PyList_GetItem@plt>
   13734:	ldr	x8, [x24, #2560]
   13738:	cbz	x8, 13780 <PyInit__decimal@@Base+0xcccc>
   1373c:	mov	x8, x25
   13740:	ldur	x9, [x8, #-8]
   13744:	cmp	x9, x0
   13748:	b.eq	13758 <PyInit__decimal@@Base+0xcca4>  // b.none
   1374c:	ldr	x9, [x8], #32
   13750:	cbnz	x9, 13740 <PyInit__decimal@@Base+0xcc8c>
   13754:	b	13780 <PyInit__decimal@@Base+0xcccc>
   13758:	ldur	w8, [x8, #-16]
   1375c:	tst	w8, #0x18000
   13760:	b.ne	13798 <PyInit__decimal@@Base+0xcce4>  // b.any
   13764:	add	x23, x23, #0x1
   13768:	cmp	x23, x22
   1376c:	orr	w21, w8, w21
   13770:	b.ne	13728 <PyInit__decimal@@Base+0xcc74>  // b.any
   13774:	tst	w21, #0x18000
   13778:	b.ne	13798 <PyInit__decimal@@Base+0xcce4>  // b.any
   1377c:	b	137e4 <PyInit__decimal@@Base+0xcd30>
   13780:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13784:	ldr	x8, [x8, #3968]
   13788:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1378c:	add	x1, x1, #0xd77
   13790:	ldr	x0, [x8]
   13794:	bl	6590 <PyErr_SetString@plt>
   13798:	mov	w0, #0xffffffff            	// #-1
   1379c:	ldp	x20, x19, [sp, #160]
   137a0:	ldp	x22, x21, [sp, #144]
   137a4:	ldp	x24, x23, [sp, #128]
   137a8:	ldp	x26, x25, [sp, #112]
   137ac:	ldp	x29, x30, [sp, #96]
   137b0:	add	sp, sp, #0xb0
   137b4:	ret
   137b8:	ldr	x8, [x20, #16]
   137bc:	ldr	w1, [x8]
   137c0:	add	x0, x19, #0x10
   137c4:	bl	1ca10 <PyInit__decimal@@Base+0x15f5c>
   137c8:	cbnz	w0, 137f4 <PyInit__decimal@@Base+0xcd40>
   137cc:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   137d0:	ldr	x8, [x8, #3920]
   137d4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   137d8:	add	x1, x1, #0xb42
   137dc:	b	13790 <PyInit__decimal@@Base+0xccdc>
   137e0:	mov	w21, wzr
   137e4:	add	x0, x19, #0x10
   137e8:	mov	w1, w21
   137ec:	bl	1ca10 <PyInit__decimal@@Base+0x15f5c>
   137f0:	cbz	w0, 13810 <PyInit__decimal@@Base+0xcd5c>
   137f4:	mov	w0, wzr
   137f8:	b	1379c <PyInit__decimal@@Base+0xcce8>
   137fc:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13800:	ldr	x8, [x8, #3920]
   13804:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13808:	add	x1, x1, #0xd4f
   1380c:	b	13790 <PyInit__decimal@@Base+0xccdc>
   13810:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13814:	ldr	x8, [x8, #3920]
   13818:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1381c:	add	x1, x1, #0xe0b
   13820:	b	13790 <PyInit__decimal@@Base+0xccdc>
   13824:	stp	x29, x30, [sp, #-32]!
   13828:	stp	x20, x19, [sp, #16]
   1382c:	mov	x29, sp
   13830:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   13834:	add	x8, x8, #0x4b8
   13838:	cmp	x0, x8
   1383c:	b.eq	13858 <PyInit__decimal@@Base+0xcda4>  // b.none
   13840:	ldr	x8, [x0, #304]
   13844:	mov	x1, xzr
   13848:	blr	x8
   1384c:	mov	x19, x0
   13850:	cbnz	x0, 1386c <PyInit__decimal@@Base+0xcdb8>
   13854:	b	138dc <PyInit__decimal@@Base+0xce28>
   13858:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1385c:	add	x0, x0, #0x4b8
   13860:	bl	6890 <_PyObject_New@plt>
   13864:	mov	x19, x0
   13868:	cbz	x0, 138dc <PyInit__decimal@@Base+0xce28>
   1386c:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   13870:	ldr	x0, [x20, #1472]
   13874:	mov	x1, xzr
   13878:	bl	6780 <PyObject_CallObject@plt>
   1387c:	str	x0, [x19, #64]
   13880:	cbz	x0, 138b4 <PyInit__decimal@@Base+0xce00>
   13884:	ldr	x0, [x20, #1472]
   13888:	mov	x1, xzr
   1388c:	bl	6780 <PyObject_CallObject@plt>
   13890:	str	x0, [x19, #72]
   13894:	cbz	x0, 138cc <PyInit__decimal@@Base+0xce18>
   13898:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1389c:	ldr	x9, [x8, #1496]
   138a0:	add	x8, x19, #0x10
   138a4:	cbz	x9, 138f4 <PyInit__decimal@@Base+0xce40>
   138a8:	ldp	q1, q0, [x9, #32]
   138ac:	ldr	q2, [x9, #16]
   138b0:	b	13904 <PyInit__decimal@@Base+0xce50>
   138b4:	ldr	x8, [x19]
   138b8:	str	xzr, [x19, #72]
   138bc:	subs	x8, x8, #0x1
   138c0:	str	x8, [x19]
   138c4:	b.ne	1392c <PyInit__decimal@@Base+0xce78>  // b.any
   138c8:	b	138e4 <PyInit__decimal@@Base+0xce30>
   138cc:	ldr	x8, [x19]
   138d0:	subs	x8, x8, #0x1
   138d4:	str	x8, [x19]
   138d8:	b.eq	138e4 <PyInit__decimal@@Base+0xce30>  // b.none
   138dc:	mov	x0, xzr
   138e0:	b	1392c <PyInit__decimal@@Base+0xce78>
   138e4:	mov	x0, x19
   138e8:	bl	6510 <_Py_Dealloc@plt>
   138ec:	mov	x0, xzr
   138f0:	b	1392c <PyInit__decimal@@Base+0xce78>
   138f4:	adrp	x9, 3d000 <PyInit__decimal@@Base+0x3654c>
   138f8:	add	x9, x9, #0xee8
   138fc:	ldp	q1, q0, [x9, #16]
   13900:	ldr	q2, [x9]
   13904:	stp	q1, q0, [x8, #16]
   13908:	str	q2, [x8], #28
   1390c:	ldr	x9, [x19, #64]
   13910:	add	x10, x19, #0x28
   13914:	mov	w11, #0x1                   	// #1
   13918:	str	x10, [x9, #16]
   1391c:	str	x8, [x0, #16]
   13920:	mov	x0, x19
   13924:	str	w11, [x19, #80]
   13928:	str	xzr, [x19, #88]
   1392c:	ldp	x20, x19, [sp, #16]
   13930:	ldp	x29, x30, [sp], #32
   13934:	ret
   13938:	stp	x29, x30, [sp, #-48]!
   1393c:	str	x21, [sp, #16]
   13940:	stp	x20, x19, [sp, #32]
   13944:	mov	x29, sp
   13948:	ldr	x8, [x0, #8]
   1394c:	ldrb	w8, [x8, #171]
   13950:	tbnz	w8, #5, 13968 <PyInit__decimal@@Base+0xceb4>
   13954:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   13958:	ldr	x8, [x8, #3936]
   1395c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13960:	add	x1, x1, #0xb0f
   13964:	b	139f0 <PyInit__decimal@@Base+0xcf3c>
   13968:	mov	x20, x0
   1396c:	bl	6430 <PyDict_Size@plt>
   13970:	cmp	x0, #0x9
   13974:	b.ne	139e0 <PyInit__decimal@@Base+0xcf2c>  // b.any
   13978:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1397c:	ldr	x8, [x8, #2560]
   13980:	cbz	x8, 139c8 <PyInit__decimal@@Base+0xcf14>
   13984:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
   13988:	mov	w19, wzr
   1398c:	add	x21, x21, #0xa20
   13990:	b	1399c <PyInit__decimal@@Base+0xcee8>
   13994:	ldr	x8, [x21], #32
   13998:	cbz	x8, 139fc <PyInit__decimal@@Base+0xcf48>
   1399c:	ldur	x1, [x21, #-8]
   139a0:	mov	x0, x20
   139a4:	bl	69c0 <PyDict_GetItemWithError@plt>
   139a8:	cbz	x0, 139d0 <PyInit__decimal@@Base+0xcf1c>
   139ac:	bl	6810 <PyObject_IsTrue@plt>
   139b0:	tbnz	w0, #31, 139d8 <PyInit__decimal@@Base+0xcf24>
   139b4:	cmp	w0, #0x1
   139b8:	b.ne	13994 <PyInit__decimal@@Base+0xcee0>  // b.any
   139bc:	ldur	w8, [x21, #-16]
   139c0:	orr	w19, w8, w19
   139c4:	b	13994 <PyInit__decimal@@Base+0xcee0>
   139c8:	mov	w19, wzr
   139cc:	b	139fc <PyInit__decimal@@Base+0xcf48>
   139d0:	bl	6720 <PyErr_Occurred@plt>
   139d4:	cbz	x0, 139e0 <PyInit__decimal@@Base+0xcf2c>
   139d8:	mov	w19, #0x10000               	// #65536
   139dc:	b	139fc <PyInit__decimal@@Base+0xcf48>
   139e0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   139e4:	ldr	x8, [x8, #3968]
   139e8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   139ec:	add	x1, x1, #0xb2e
   139f0:	ldr	x0, [x8]
   139f4:	bl	6590 <PyErr_SetString@plt>
   139f8:	mov	w19, #0x8000                	// #32768
   139fc:	mov	w0, w19
   13a00:	ldp	x20, x19, [sp, #32]
   13a04:	ldr	x21, [sp, #16]
   13a08:	ldp	x29, x30, [sp], #48
   13a0c:	ret
   13a10:	stp	x29, x30, [sp, #-48]!
   13a14:	str	x21, [sp, #16]
   13a18:	stp	x20, x19, [sp, #32]
   13a1c:	mov	x29, sp
   13a20:	str	wzr, [x29, #28]
   13a24:	ldr	x8, [x1, #8]
   13a28:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   13a2c:	add	x9, x9, #0x318
   13a30:	mov	x19, x1
   13a34:	cmp	x8, x9
   13a38:	mov	x20, x0
   13a3c:	b.eq	13a54 <PyInit__decimal@@Base+0xcfa0>  // b.none
   13a40:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   13a44:	add	x1, x1, #0x318
   13a48:	mov	x0, x8
   13a4c:	bl	6900 <PyType_IsSubtype@plt>
   13a50:	cbz	w0, 13b04 <PyInit__decimal@@Base+0xd050>
   13a54:	ldr	x8, [x19]
   13a58:	add	x8, x8, #0x1
   13a5c:	str	x8, [x19]
   13a60:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   13a64:	add	x0, x0, #0x318
   13a68:	bl	6890 <_PyObject_New@plt>
   13a6c:	cbz	x0, 13ae8 <PyInit__decimal@@Base+0xd034>
   13a70:	mov	w8, #0x30                  	// #48
   13a74:	mov	x21, x0
   13a78:	strb	w8, [x0, #24]!
   13a7c:	mov	x9, #0xffffffffffffffff    	// #-1
   13a80:	mov	w10, #0x4                   	// #4
   13a84:	add	x1, x19, #0x18
   13a88:	add	x8, x0, #0x30
   13a8c:	add	x2, x20, #0x10
   13a90:	add	x3, x29, #0x1c
   13a94:	stur	x9, [x0, #-8]
   13a98:	stp	xzr, xzr, [x0, #8]
   13a9c:	stp	xzr, x10, [x0, #24]
   13aa0:	str	x8, [x0, #40]
   13aa4:	bl	26d28 <PyInit__decimal@@Base+0x20274>
   13aa8:	ldr	x8, [x19]
   13aac:	subs	x8, x8, #0x1
   13ab0:	str	x8, [x19]
   13ab4:	b.ne	13ac0 <PyInit__decimal@@Base+0xd00c>  // b.any
   13ab8:	mov	x0, x19
   13abc:	bl	6510 <_Py_Dealloc@plt>
   13ac0:	ldr	w1, [x29, #28]
   13ac4:	mov	x0, x20
   13ac8:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   13acc:	cbz	w0, 13b50 <PyInit__decimal@@Base+0xd09c>
   13ad0:	ldr	x8, [x21]
   13ad4:	subs	x8, x8, #0x1
   13ad8:	str	x8, [x21]
   13adc:	b.ne	13b4c <PyInit__decimal@@Base+0xd098>  // b.any
   13ae0:	mov	x0, x21
   13ae4:	b	13afc <PyInit__decimal@@Base+0xd048>
   13ae8:	ldr	x8, [x19]
   13aec:	subs	x8, x8, #0x1
   13af0:	str	x8, [x19]
   13af4:	b.ne	13b4c <PyInit__decimal@@Base+0xd098>  // b.any
   13af8:	mov	x0, x19
   13afc:	bl	6510 <_Py_Dealloc@plt>
   13b00:	b	13b4c <PyInit__decimal@@Base+0xd098>
   13b04:	ldr	x8, [x19, #8]
   13b08:	ldrb	w9, [x8, #171]
   13b0c:	tbnz	w9, #0, 13b30 <PyInit__decimal@@Base+0xd07c>
   13b10:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   13b14:	ldr	x9, [x9, #3936]
   13b18:	ldr	x2, [x8, #24]
   13b1c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13b20:	add	x1, x1, #0x263
   13b24:	ldr	x0, [x9]
   13b28:	bl	6950 <PyErr_Format@plt>
   13b2c:	b	13b4c <PyInit__decimal@@Base+0xd098>
   13b30:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   13b34:	add	x0, x0, #0x318
   13b38:	mov	x1, x19
   13b3c:	mov	x2, x20
   13b40:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   13b44:	mov	x19, x0
   13b48:	cbnz	x0, 13a60 <PyInit__decimal@@Base+0xcfac>
   13b4c:	mov	x21, xzr
   13b50:	mov	x0, x21
   13b54:	ldp	x20, x19, [sp, #32]
   13b58:	ldr	x21, [sp, #16]
   13b5c:	ldp	x29, x30, [sp], #48
   13b60:	ret
   13b64:	stp	x29, x30, [sp, #-48]!
   13b68:	str	x21, [sp, #16]
   13b6c:	stp	x20, x19, [sp, #32]
   13b70:	mov	x29, sp
   13b74:	str	wzr, [x29, #28]
   13b78:	ldr	x8, [x1, #8]
   13b7c:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   13b80:	add	x9, x9, #0x318
   13b84:	mov	x19, x1
   13b88:	cmp	x8, x9
   13b8c:	mov	x20, x0
   13b90:	b.eq	13ba8 <PyInit__decimal@@Base+0xd0f4>  // b.none
   13b94:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   13b98:	add	x1, x1, #0x318
   13b9c:	mov	x0, x8
   13ba0:	bl	6900 <PyType_IsSubtype@plt>
   13ba4:	cbz	w0, 13c58 <PyInit__decimal@@Base+0xd1a4>
   13ba8:	ldr	x8, [x19]
   13bac:	add	x8, x8, #0x1
   13bb0:	str	x8, [x19]
   13bb4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   13bb8:	add	x0, x0, #0x318
   13bbc:	bl	6890 <_PyObject_New@plt>
   13bc0:	cbz	x0, 13c3c <PyInit__decimal@@Base+0xd188>
   13bc4:	mov	w8, #0x30                  	// #48
   13bc8:	mov	x21, x0
   13bcc:	strb	w8, [x0, #24]!
   13bd0:	mov	x9, #0xffffffffffffffff    	// #-1
   13bd4:	mov	w10, #0x4                   	// #4
   13bd8:	add	x1, x19, #0x18
   13bdc:	add	x8, x0, #0x30
   13be0:	add	x2, x20, #0x10
   13be4:	add	x3, x29, #0x1c
   13be8:	stur	x9, [x0, #-8]
   13bec:	stp	xzr, xzr, [x0, #8]
   13bf0:	stp	xzr, x10, [x0, #24]
   13bf4:	str	x8, [x0, #40]
   13bf8:	bl	2a098 <PyInit__decimal@@Base+0x235e4>
   13bfc:	ldr	x8, [x19]
   13c00:	subs	x8, x8, #0x1
   13c04:	str	x8, [x19]
   13c08:	b.ne	13c14 <PyInit__decimal@@Base+0xd160>  // b.any
   13c0c:	mov	x0, x19
   13c10:	bl	6510 <_Py_Dealloc@plt>
   13c14:	ldr	w1, [x29, #28]
   13c18:	mov	x0, x20
   13c1c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   13c20:	cbz	w0, 13ca4 <PyInit__decimal@@Base+0xd1f0>
   13c24:	ldr	x8, [x21]
   13c28:	subs	x8, x8, #0x1
   13c2c:	str	x8, [x21]
   13c30:	b.ne	13ca0 <PyInit__decimal@@Base+0xd1ec>  // b.any
   13c34:	mov	x0, x21
   13c38:	b	13c50 <PyInit__decimal@@Base+0xd19c>
   13c3c:	ldr	x8, [x19]
   13c40:	subs	x8, x8, #0x1
   13c44:	str	x8, [x19]
   13c48:	b.ne	13ca0 <PyInit__decimal@@Base+0xd1ec>  // b.any
   13c4c:	mov	x0, x19
   13c50:	bl	6510 <_Py_Dealloc@plt>
   13c54:	b	13ca0 <PyInit__decimal@@Base+0xd1ec>
   13c58:	ldr	x8, [x19, #8]
   13c5c:	ldrb	w9, [x8, #171]
   13c60:	tbnz	w9, #0, 13c84 <PyInit__decimal@@Base+0xd1d0>
   13c64:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   13c68:	ldr	x9, [x9, #3936]
   13c6c:	ldr	x2, [x8, #24]
   13c70:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13c74:	add	x1, x1, #0x263
   13c78:	ldr	x0, [x9]
   13c7c:	bl	6950 <PyErr_Format@plt>
   13c80:	b	13ca0 <PyInit__decimal@@Base+0xd1ec>
   13c84:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   13c88:	add	x0, x0, #0x318
   13c8c:	mov	x1, x19
   13c90:	mov	x2, x20
   13c94:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   13c98:	mov	x19, x0
   13c9c:	cbnz	x0, 13bb4 <PyInit__decimal@@Base+0xd100>
   13ca0:	mov	x21, xzr
   13ca4:	mov	x0, x21
   13ca8:	ldp	x20, x19, [sp, #32]
   13cac:	ldr	x21, [sp, #16]
   13cb0:	ldp	x29, x30, [sp], #48
   13cb4:	ret
   13cb8:	stp	x29, x30, [sp, #-48]!
   13cbc:	str	x21, [sp, #16]
   13cc0:	stp	x20, x19, [sp, #32]
   13cc4:	mov	x29, sp
   13cc8:	str	wzr, [x29, #28]
   13ccc:	ldr	x8, [x1, #8]
   13cd0:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   13cd4:	add	x9, x9, #0x318
   13cd8:	mov	x19, x1
   13cdc:	cmp	x8, x9
   13ce0:	mov	x20, x0
   13ce4:	b.eq	13cfc <PyInit__decimal@@Base+0xd248>  // b.none
   13ce8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   13cec:	add	x1, x1, #0x318
   13cf0:	mov	x0, x8
   13cf4:	bl	6900 <PyType_IsSubtype@plt>
   13cf8:	cbz	w0, 13dac <PyInit__decimal@@Base+0xd2f8>
   13cfc:	ldr	x8, [x19]
   13d00:	add	x8, x8, #0x1
   13d04:	str	x8, [x19]
   13d08:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   13d0c:	add	x0, x0, #0x318
   13d10:	bl	6890 <_PyObject_New@plt>
   13d14:	cbz	x0, 13d90 <PyInit__decimal@@Base+0xd2dc>
   13d18:	mov	w8, #0x30                  	// #48
   13d1c:	mov	x21, x0
   13d20:	strb	w8, [x0, #24]!
   13d24:	mov	x9, #0xffffffffffffffff    	// #-1
   13d28:	mov	w10, #0x4                   	// #4
   13d2c:	add	x1, x19, #0x18
   13d30:	add	x8, x0, #0x30
   13d34:	add	x2, x20, #0x10
   13d38:	add	x3, x29, #0x1c
   13d3c:	stur	x9, [x0, #-8]
   13d40:	stp	xzr, xzr, [x0, #8]
   13d44:	stp	xzr, x10, [x0, #24]
   13d48:	str	x8, [x0, #40]
   13d4c:	bl	2c0bc <PyInit__decimal@@Base+0x25608>
   13d50:	ldr	x8, [x19]
   13d54:	subs	x8, x8, #0x1
   13d58:	str	x8, [x19]
   13d5c:	b.ne	13d68 <PyInit__decimal@@Base+0xd2b4>  // b.any
   13d60:	mov	x0, x19
   13d64:	bl	6510 <_Py_Dealloc@plt>
   13d68:	ldr	w1, [x29, #28]
   13d6c:	mov	x0, x20
   13d70:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   13d74:	cbz	w0, 13df8 <PyInit__decimal@@Base+0xd344>
   13d78:	ldr	x8, [x21]
   13d7c:	subs	x8, x8, #0x1
   13d80:	str	x8, [x21]
   13d84:	b.ne	13df4 <PyInit__decimal@@Base+0xd340>  // b.any
   13d88:	mov	x0, x21
   13d8c:	b	13da4 <PyInit__decimal@@Base+0xd2f0>
   13d90:	ldr	x8, [x19]
   13d94:	subs	x8, x8, #0x1
   13d98:	str	x8, [x19]
   13d9c:	b.ne	13df4 <PyInit__decimal@@Base+0xd340>  // b.any
   13da0:	mov	x0, x19
   13da4:	bl	6510 <_Py_Dealloc@plt>
   13da8:	b	13df4 <PyInit__decimal@@Base+0xd340>
   13dac:	ldr	x8, [x19, #8]
   13db0:	ldrb	w9, [x8, #171]
   13db4:	tbnz	w9, #0, 13dd8 <PyInit__decimal@@Base+0xd324>
   13db8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   13dbc:	ldr	x9, [x9, #3936]
   13dc0:	ldr	x2, [x8, #24]
   13dc4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13dc8:	add	x1, x1, #0x263
   13dcc:	ldr	x0, [x9]
   13dd0:	bl	6950 <PyErr_Format@plt>
   13dd4:	b	13df4 <PyInit__decimal@@Base+0xd340>
   13dd8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   13ddc:	add	x0, x0, #0x318
   13de0:	mov	x1, x19
   13de4:	mov	x2, x20
   13de8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   13dec:	mov	x19, x0
   13df0:	cbnz	x0, 13d08 <PyInit__decimal@@Base+0xd254>
   13df4:	mov	x21, xzr
   13df8:	mov	x0, x21
   13dfc:	ldp	x20, x19, [sp, #32]
   13e00:	ldr	x21, [sp, #16]
   13e04:	ldp	x29, x30, [sp], #48
   13e08:	ret
   13e0c:	stp	x29, x30, [sp, #-48]!
   13e10:	str	x21, [sp, #16]
   13e14:	stp	x20, x19, [sp, #32]
   13e18:	mov	x29, sp
   13e1c:	str	wzr, [x29, #28]
   13e20:	ldr	x8, [x1, #8]
   13e24:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   13e28:	add	x9, x9, #0x318
   13e2c:	mov	x19, x1
   13e30:	cmp	x8, x9
   13e34:	mov	x20, x0
   13e38:	b.eq	13e50 <PyInit__decimal@@Base+0xd39c>  // b.none
   13e3c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   13e40:	add	x1, x1, #0x318
   13e44:	mov	x0, x8
   13e48:	bl	6900 <PyType_IsSubtype@plt>
   13e4c:	cbz	w0, 13f00 <PyInit__decimal@@Base+0xd44c>
   13e50:	ldr	x8, [x19]
   13e54:	add	x8, x8, #0x1
   13e58:	str	x8, [x19]
   13e5c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   13e60:	add	x0, x0, #0x318
   13e64:	bl	6890 <_PyObject_New@plt>
   13e68:	cbz	x0, 13ee4 <PyInit__decimal@@Base+0xd430>
   13e6c:	mov	w8, #0x30                  	// #48
   13e70:	mov	x21, x0
   13e74:	strb	w8, [x0, #24]!
   13e78:	mov	x9, #0xffffffffffffffff    	// #-1
   13e7c:	mov	w10, #0x4                   	// #4
   13e80:	add	x1, x19, #0x18
   13e84:	add	x8, x0, #0x30
   13e88:	add	x2, x20, #0x10
   13e8c:	add	x3, x29, #0x1c
   13e90:	stur	x9, [x0, #-8]
   13e94:	stp	xzr, xzr, [x0, #8]
   13e98:	stp	xzr, x10, [x0, #24]
   13e9c:	str	x8, [x0, #40]
   13ea0:	bl	2d130 <PyInit__decimal@@Base+0x2667c>
   13ea4:	ldr	x8, [x19]
   13ea8:	subs	x8, x8, #0x1
   13eac:	str	x8, [x19]
   13eb0:	b.ne	13ebc <PyInit__decimal@@Base+0xd408>  // b.any
   13eb4:	mov	x0, x19
   13eb8:	bl	6510 <_Py_Dealloc@plt>
   13ebc:	ldr	w1, [x29, #28]
   13ec0:	mov	x0, x20
   13ec4:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   13ec8:	cbz	w0, 13f4c <PyInit__decimal@@Base+0xd498>
   13ecc:	ldr	x8, [x21]
   13ed0:	subs	x8, x8, #0x1
   13ed4:	str	x8, [x21]
   13ed8:	b.ne	13f48 <PyInit__decimal@@Base+0xd494>  // b.any
   13edc:	mov	x0, x21
   13ee0:	b	13ef8 <PyInit__decimal@@Base+0xd444>
   13ee4:	ldr	x8, [x19]
   13ee8:	subs	x8, x8, #0x1
   13eec:	str	x8, [x19]
   13ef0:	b.ne	13f48 <PyInit__decimal@@Base+0xd494>  // b.any
   13ef4:	mov	x0, x19
   13ef8:	bl	6510 <_Py_Dealloc@plt>
   13efc:	b	13f48 <PyInit__decimal@@Base+0xd494>
   13f00:	ldr	x8, [x19, #8]
   13f04:	ldrb	w9, [x8, #171]
   13f08:	tbnz	w9, #0, 13f2c <PyInit__decimal@@Base+0xd478>
   13f0c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   13f10:	ldr	x9, [x9, #3936]
   13f14:	ldr	x2, [x8, #24]
   13f18:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   13f1c:	add	x1, x1, #0x263
   13f20:	ldr	x0, [x9]
   13f24:	bl	6950 <PyErr_Format@plt>
   13f28:	b	13f48 <PyInit__decimal@@Base+0xd494>
   13f2c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   13f30:	add	x0, x0, #0x318
   13f34:	mov	x1, x19
   13f38:	mov	x2, x20
   13f3c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   13f40:	mov	x19, x0
   13f44:	cbnz	x0, 13e5c <PyInit__decimal@@Base+0xd3a8>
   13f48:	mov	x21, xzr
   13f4c:	mov	x0, x21
   13f50:	ldp	x20, x19, [sp, #32]
   13f54:	ldr	x21, [sp, #16]
   13f58:	ldp	x29, x30, [sp], #48
   13f5c:	ret
   13f60:	stp	x29, x30, [sp, #-48]!
   13f64:	str	x21, [sp, #16]
   13f68:	stp	x20, x19, [sp, #32]
   13f6c:	mov	x29, sp
   13f70:	str	wzr, [x29, #28]
   13f74:	ldr	x8, [x1, #8]
   13f78:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   13f7c:	add	x9, x9, #0x318
   13f80:	mov	x19, x1
   13f84:	cmp	x8, x9
   13f88:	mov	x20, x0
   13f8c:	b.eq	13fa4 <PyInit__decimal@@Base+0xd4f0>  // b.none
   13f90:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   13f94:	add	x1, x1, #0x318
   13f98:	mov	x0, x8
   13f9c:	bl	6900 <PyType_IsSubtype@plt>
   13fa0:	cbz	w0, 14054 <PyInit__decimal@@Base+0xd5a0>
   13fa4:	ldr	x8, [x19]
   13fa8:	add	x8, x8, #0x1
   13fac:	str	x8, [x19]
   13fb0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   13fb4:	add	x0, x0, #0x318
   13fb8:	bl	6890 <_PyObject_New@plt>
   13fbc:	cbz	x0, 14038 <PyInit__decimal@@Base+0xd584>
   13fc0:	mov	w8, #0x30                  	// #48
   13fc4:	mov	x21, x0
   13fc8:	strb	w8, [x0, #24]!
   13fcc:	mov	x9, #0xffffffffffffffff    	// #-1
   13fd0:	mov	w10, #0x4                   	// #4
   13fd4:	add	x1, x19, #0x18
   13fd8:	add	x8, x0, #0x30
   13fdc:	add	x2, x20, #0x10
   13fe0:	add	x3, x29, #0x1c
   13fe4:	stur	x9, [x0, #-8]
   13fe8:	stp	xzr, xzr, [x0, #8]
   13fec:	stp	xzr, x10, [x0, #24]
   13ff0:	str	x8, [x0, #40]
   13ff4:	bl	26db4 <PyInit__decimal@@Base+0x20300>
   13ff8:	ldr	x8, [x19]
   13ffc:	subs	x8, x8, #0x1
   14000:	str	x8, [x19]
   14004:	b.ne	14010 <PyInit__decimal@@Base+0xd55c>  // b.any
   14008:	mov	x0, x19
   1400c:	bl	6510 <_Py_Dealloc@plt>
   14010:	ldr	w1, [x29, #28]
   14014:	mov	x0, x20
   14018:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1401c:	cbz	w0, 140a0 <PyInit__decimal@@Base+0xd5ec>
   14020:	ldr	x8, [x21]
   14024:	subs	x8, x8, #0x1
   14028:	str	x8, [x21]
   1402c:	b.ne	1409c <PyInit__decimal@@Base+0xd5e8>  // b.any
   14030:	mov	x0, x21
   14034:	b	1404c <PyInit__decimal@@Base+0xd598>
   14038:	ldr	x8, [x19]
   1403c:	subs	x8, x8, #0x1
   14040:	str	x8, [x19]
   14044:	b.ne	1409c <PyInit__decimal@@Base+0xd5e8>  // b.any
   14048:	mov	x0, x19
   1404c:	bl	6510 <_Py_Dealloc@plt>
   14050:	b	1409c <PyInit__decimal@@Base+0xd5e8>
   14054:	ldr	x8, [x19, #8]
   14058:	ldrb	w9, [x8, #171]
   1405c:	tbnz	w9, #0, 14080 <PyInit__decimal@@Base+0xd5cc>
   14060:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   14064:	ldr	x9, [x9, #3936]
   14068:	ldr	x2, [x8, #24]
   1406c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14070:	add	x1, x1, #0x263
   14074:	ldr	x0, [x9]
   14078:	bl	6950 <PyErr_Format@plt>
   1407c:	b	1409c <PyInit__decimal@@Base+0xd5e8>
   14080:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14084:	add	x0, x0, #0x318
   14088:	mov	x1, x19
   1408c:	mov	x2, x20
   14090:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   14094:	mov	x19, x0
   14098:	cbnz	x0, 13fb0 <PyInit__decimal@@Base+0xd4fc>
   1409c:	mov	x21, xzr
   140a0:	mov	x0, x21
   140a4:	ldp	x20, x19, [sp, #32]
   140a8:	ldr	x21, [sp, #16]
   140ac:	ldp	x29, x30, [sp], #48
   140b0:	ret
   140b4:	stp	x29, x30, [sp, #-48]!
   140b8:	str	x21, [sp, #16]
   140bc:	stp	x20, x19, [sp, #32]
   140c0:	mov	x29, sp
   140c4:	str	wzr, [x29, #28]
   140c8:	ldr	x8, [x1, #8]
   140cc:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   140d0:	add	x9, x9, #0x318
   140d4:	mov	x19, x1
   140d8:	cmp	x8, x9
   140dc:	mov	x20, x0
   140e0:	b.eq	140f8 <PyInit__decimal@@Base+0xd644>  // b.none
   140e4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   140e8:	add	x1, x1, #0x318
   140ec:	mov	x0, x8
   140f0:	bl	6900 <PyType_IsSubtype@plt>
   140f4:	cbz	w0, 141a8 <PyInit__decimal@@Base+0xd6f4>
   140f8:	ldr	x8, [x19]
   140fc:	add	x8, x8, #0x1
   14100:	str	x8, [x19]
   14104:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14108:	add	x0, x0, #0x318
   1410c:	bl	6890 <_PyObject_New@plt>
   14110:	cbz	x0, 1418c <PyInit__decimal@@Base+0xd6d8>
   14114:	mov	w8, #0x30                  	// #48
   14118:	mov	x21, x0
   1411c:	strb	w8, [x0, #24]!
   14120:	mov	x9, #0xffffffffffffffff    	// #-1
   14124:	mov	w10, #0x4                   	// #4
   14128:	add	x1, x19, #0x18
   1412c:	add	x8, x0, #0x30
   14130:	add	x2, x20, #0x10
   14134:	add	x3, x29, #0x1c
   14138:	stur	x9, [x0, #-8]
   1413c:	stp	xzr, xzr, [x0, #8]
   14140:	stp	xzr, x10, [x0, #24]
   14144:	str	x8, [x0, #40]
   14148:	bl	2e958 <PyInit__decimal@@Base+0x27ea4>
   1414c:	ldr	x8, [x19]
   14150:	subs	x8, x8, #0x1
   14154:	str	x8, [x19]
   14158:	b.ne	14164 <PyInit__decimal@@Base+0xd6b0>  // b.any
   1415c:	mov	x0, x19
   14160:	bl	6510 <_Py_Dealloc@plt>
   14164:	ldr	w1, [x29, #28]
   14168:	mov	x0, x20
   1416c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   14170:	cbz	w0, 141f4 <PyInit__decimal@@Base+0xd740>
   14174:	ldr	x8, [x21]
   14178:	subs	x8, x8, #0x1
   1417c:	str	x8, [x21]
   14180:	b.ne	141f0 <PyInit__decimal@@Base+0xd73c>  // b.any
   14184:	mov	x0, x21
   14188:	b	141a0 <PyInit__decimal@@Base+0xd6ec>
   1418c:	ldr	x8, [x19]
   14190:	subs	x8, x8, #0x1
   14194:	str	x8, [x19]
   14198:	b.ne	141f0 <PyInit__decimal@@Base+0xd73c>  // b.any
   1419c:	mov	x0, x19
   141a0:	bl	6510 <_Py_Dealloc@plt>
   141a4:	b	141f0 <PyInit__decimal@@Base+0xd73c>
   141a8:	ldr	x8, [x19, #8]
   141ac:	ldrb	w9, [x8, #171]
   141b0:	tbnz	w9, #0, 141d4 <PyInit__decimal@@Base+0xd720>
   141b4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   141b8:	ldr	x9, [x9, #3936]
   141bc:	ldr	x2, [x8, #24]
   141c0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   141c4:	add	x1, x1, #0x263
   141c8:	ldr	x0, [x9]
   141cc:	bl	6950 <PyErr_Format@plt>
   141d0:	b	141f0 <PyInit__decimal@@Base+0xd73c>
   141d4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   141d8:	add	x0, x0, #0x318
   141dc:	mov	x1, x19
   141e0:	mov	x2, x20
   141e4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   141e8:	mov	x19, x0
   141ec:	cbnz	x0, 14104 <PyInit__decimal@@Base+0xd650>
   141f0:	mov	x21, xzr
   141f4:	mov	x0, x21
   141f8:	ldp	x20, x19, [sp, #32]
   141fc:	ldr	x21, [sp, #16]
   14200:	ldp	x29, x30, [sp], #48
   14204:	ret
   14208:	stp	x29, x30, [sp, #-48]!
   1420c:	str	x21, [sp, #16]
   14210:	stp	x20, x19, [sp, #32]
   14214:	mov	x29, sp
   14218:	str	wzr, [x29, #28]
   1421c:	ldr	x8, [x1, #8]
   14220:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   14224:	add	x9, x9, #0x318
   14228:	mov	x19, x1
   1422c:	cmp	x8, x9
   14230:	mov	x20, x0
   14234:	b.eq	1424c <PyInit__decimal@@Base+0xd798>  // b.none
   14238:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1423c:	add	x1, x1, #0x318
   14240:	mov	x0, x8
   14244:	bl	6900 <PyType_IsSubtype@plt>
   14248:	cbz	w0, 142fc <PyInit__decimal@@Base+0xd848>
   1424c:	ldr	x8, [x19]
   14250:	add	x8, x8, #0x1
   14254:	str	x8, [x19]
   14258:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1425c:	add	x0, x0, #0x318
   14260:	bl	6890 <_PyObject_New@plt>
   14264:	cbz	x0, 142e0 <PyInit__decimal@@Base+0xd82c>
   14268:	mov	w8, #0x30                  	// #48
   1426c:	mov	x21, x0
   14270:	strb	w8, [x0, #24]!
   14274:	mov	x9, #0xffffffffffffffff    	// #-1
   14278:	mov	w10, #0x4                   	// #4
   1427c:	add	x1, x19, #0x18
   14280:	add	x8, x0, #0x30
   14284:	add	x2, x20, #0x10
   14288:	add	x3, x29, #0x1c
   1428c:	stur	x9, [x0, #-8]
   14290:	stp	xzr, xzr, [x0, #8]
   14294:	stp	xzr, x10, [x0, #24]
   14298:	str	x8, [x0, #40]
   1429c:	bl	2ebc4 <PyInit__decimal@@Base+0x28110>
   142a0:	ldr	x8, [x19]
   142a4:	subs	x8, x8, #0x1
   142a8:	str	x8, [x19]
   142ac:	b.ne	142b8 <PyInit__decimal@@Base+0xd804>  // b.any
   142b0:	mov	x0, x19
   142b4:	bl	6510 <_Py_Dealloc@plt>
   142b8:	ldr	w1, [x29, #28]
   142bc:	mov	x0, x20
   142c0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   142c4:	cbz	w0, 14348 <PyInit__decimal@@Base+0xd894>
   142c8:	ldr	x8, [x21]
   142cc:	subs	x8, x8, #0x1
   142d0:	str	x8, [x21]
   142d4:	b.ne	14344 <PyInit__decimal@@Base+0xd890>  // b.any
   142d8:	mov	x0, x21
   142dc:	b	142f4 <PyInit__decimal@@Base+0xd840>
   142e0:	ldr	x8, [x19]
   142e4:	subs	x8, x8, #0x1
   142e8:	str	x8, [x19]
   142ec:	b.ne	14344 <PyInit__decimal@@Base+0xd890>  // b.any
   142f0:	mov	x0, x19
   142f4:	bl	6510 <_Py_Dealloc@plt>
   142f8:	b	14344 <PyInit__decimal@@Base+0xd890>
   142fc:	ldr	x8, [x19, #8]
   14300:	ldrb	w9, [x8, #171]
   14304:	tbnz	w9, #0, 14328 <PyInit__decimal@@Base+0xd874>
   14308:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1430c:	ldr	x9, [x9, #3936]
   14310:	ldr	x2, [x8, #24]
   14314:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14318:	add	x1, x1, #0x263
   1431c:	ldr	x0, [x9]
   14320:	bl	6950 <PyErr_Format@plt>
   14324:	b	14344 <PyInit__decimal@@Base+0xd890>
   14328:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1432c:	add	x0, x0, #0x318
   14330:	mov	x1, x19
   14334:	mov	x2, x20
   14338:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1433c:	mov	x19, x0
   14340:	cbnz	x0, 14258 <PyInit__decimal@@Base+0xd7a4>
   14344:	mov	x21, xzr
   14348:	mov	x0, x21
   1434c:	ldp	x20, x19, [sp, #32]
   14350:	ldr	x21, [sp, #16]
   14354:	ldp	x29, x30, [sp], #48
   14358:	ret
   1435c:	stp	x29, x30, [sp, #-48]!
   14360:	str	x21, [sp, #16]
   14364:	stp	x20, x19, [sp, #32]
   14368:	mov	x29, sp
   1436c:	str	wzr, [x29, #28]
   14370:	ldr	x8, [x1, #8]
   14374:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   14378:	add	x9, x9, #0x318
   1437c:	mov	x19, x1
   14380:	cmp	x8, x9
   14384:	mov	x20, x0
   14388:	b.eq	143a0 <PyInit__decimal@@Base+0xd8ec>  // b.none
   1438c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   14390:	add	x1, x1, #0x318
   14394:	mov	x0, x8
   14398:	bl	6900 <PyType_IsSubtype@plt>
   1439c:	cbz	w0, 14450 <PyInit__decimal@@Base+0xd99c>
   143a0:	ldr	x8, [x19]
   143a4:	add	x8, x8, #0x1
   143a8:	str	x8, [x19]
   143ac:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   143b0:	add	x0, x0, #0x318
   143b4:	bl	6890 <_PyObject_New@plt>
   143b8:	cbz	x0, 14434 <PyInit__decimal@@Base+0xd980>
   143bc:	mov	w8, #0x30                  	// #48
   143c0:	mov	x21, x0
   143c4:	strb	w8, [x0, #24]!
   143c8:	mov	x9, #0xffffffffffffffff    	// #-1
   143cc:	mov	w10, #0x4                   	// #4
   143d0:	add	x1, x19, #0x18
   143d4:	add	x8, x0, #0x30
   143d8:	add	x2, x20, #0x10
   143dc:	add	x3, x29, #0x1c
   143e0:	stur	x9, [x0, #-8]
   143e4:	stp	xzr, xzr, [x0, #8]
   143e8:	stp	xzr, x10, [x0, #24]
   143ec:	str	x8, [x0, #40]
   143f0:	bl	31bd0 <PyInit__decimal@@Base+0x2b11c>
   143f4:	ldr	x8, [x19]
   143f8:	subs	x8, x8, #0x1
   143fc:	str	x8, [x19]
   14400:	b.ne	1440c <PyInit__decimal@@Base+0xd958>  // b.any
   14404:	mov	x0, x19
   14408:	bl	6510 <_Py_Dealloc@plt>
   1440c:	ldr	w1, [x29, #28]
   14410:	mov	x0, x20
   14414:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   14418:	cbz	w0, 1449c <PyInit__decimal@@Base+0xd9e8>
   1441c:	ldr	x8, [x21]
   14420:	subs	x8, x8, #0x1
   14424:	str	x8, [x21]
   14428:	b.ne	14498 <PyInit__decimal@@Base+0xd9e4>  // b.any
   1442c:	mov	x0, x21
   14430:	b	14448 <PyInit__decimal@@Base+0xd994>
   14434:	ldr	x8, [x19]
   14438:	subs	x8, x8, #0x1
   1443c:	str	x8, [x19]
   14440:	b.ne	14498 <PyInit__decimal@@Base+0xd9e4>  // b.any
   14444:	mov	x0, x19
   14448:	bl	6510 <_Py_Dealloc@plt>
   1444c:	b	14498 <PyInit__decimal@@Base+0xd9e4>
   14450:	ldr	x8, [x19, #8]
   14454:	ldrb	w9, [x8, #171]
   14458:	tbnz	w9, #0, 1447c <PyInit__decimal@@Base+0xd9c8>
   1445c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   14460:	ldr	x9, [x9, #3936]
   14464:	ldr	x2, [x8, #24]
   14468:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1446c:	add	x1, x1, #0x263
   14470:	ldr	x0, [x9]
   14474:	bl	6950 <PyErr_Format@plt>
   14478:	b	14498 <PyInit__decimal@@Base+0xd9e4>
   1447c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14480:	add	x0, x0, #0x318
   14484:	mov	x1, x19
   14488:	mov	x2, x20
   1448c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   14490:	mov	x19, x0
   14494:	cbnz	x0, 143ac <PyInit__decimal@@Base+0xd8f8>
   14498:	mov	x21, xzr
   1449c:	mov	x0, x21
   144a0:	ldp	x20, x19, [sp, #32]
   144a4:	ldr	x21, [sp, #16]
   144a8:	ldp	x29, x30, [sp], #48
   144ac:	ret
   144b0:	stp	x29, x30, [sp, #-48]!
   144b4:	str	x21, [sp, #16]
   144b8:	stp	x20, x19, [sp, #32]
   144bc:	mov	x29, sp
   144c0:	str	wzr, [x29, #28]
   144c4:	ldr	x8, [x1, #8]
   144c8:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   144cc:	add	x9, x9, #0x318
   144d0:	mov	x19, x1
   144d4:	cmp	x8, x9
   144d8:	mov	x20, x0
   144dc:	b.eq	144f4 <PyInit__decimal@@Base+0xda40>  // b.none
   144e0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   144e4:	add	x1, x1, #0x318
   144e8:	mov	x0, x8
   144ec:	bl	6900 <PyType_IsSubtype@plt>
   144f0:	cbz	w0, 145a4 <PyInit__decimal@@Base+0xdaf0>
   144f4:	ldr	x8, [x19]
   144f8:	add	x8, x8, #0x1
   144fc:	str	x8, [x19]
   14500:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14504:	add	x0, x0, #0x318
   14508:	bl	6890 <_PyObject_New@plt>
   1450c:	cbz	x0, 14588 <PyInit__decimal@@Base+0xdad4>
   14510:	mov	w8, #0x30                  	// #48
   14514:	mov	x21, x0
   14518:	strb	w8, [x0, #24]!
   1451c:	mov	x9, #0xffffffffffffffff    	// #-1
   14520:	mov	w10, #0x4                   	// #4
   14524:	add	x1, x19, #0x18
   14528:	add	x8, x0, #0x30
   1452c:	add	x2, x20, #0x10
   14530:	add	x3, x29, #0x1c
   14534:	stur	x9, [x0, #-8]
   14538:	stp	xzr, xzr, [x0, #8]
   1453c:	stp	xzr, x10, [x0, #24]
   14540:	str	x8, [x0, #40]
   14544:	bl	26e74 <PyInit__decimal@@Base+0x203c0>
   14548:	ldr	x8, [x19]
   1454c:	subs	x8, x8, #0x1
   14550:	str	x8, [x19]
   14554:	b.ne	14560 <PyInit__decimal@@Base+0xdaac>  // b.any
   14558:	mov	x0, x19
   1455c:	bl	6510 <_Py_Dealloc@plt>
   14560:	ldr	w1, [x29, #28]
   14564:	mov	x0, x20
   14568:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1456c:	cbz	w0, 145f0 <PyInit__decimal@@Base+0xdb3c>
   14570:	ldr	x8, [x21]
   14574:	subs	x8, x8, #0x1
   14578:	str	x8, [x21]
   1457c:	b.ne	145ec <PyInit__decimal@@Base+0xdb38>  // b.any
   14580:	mov	x0, x21
   14584:	b	1459c <PyInit__decimal@@Base+0xdae8>
   14588:	ldr	x8, [x19]
   1458c:	subs	x8, x8, #0x1
   14590:	str	x8, [x19]
   14594:	b.ne	145ec <PyInit__decimal@@Base+0xdb38>  // b.any
   14598:	mov	x0, x19
   1459c:	bl	6510 <_Py_Dealloc@plt>
   145a0:	b	145ec <PyInit__decimal@@Base+0xdb38>
   145a4:	ldr	x8, [x19, #8]
   145a8:	ldrb	w9, [x8, #171]
   145ac:	tbnz	w9, #0, 145d0 <PyInit__decimal@@Base+0xdb1c>
   145b0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   145b4:	ldr	x9, [x9, #3936]
   145b8:	ldr	x2, [x8, #24]
   145bc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   145c0:	add	x1, x1, #0x263
   145c4:	ldr	x0, [x9]
   145c8:	bl	6950 <PyErr_Format@plt>
   145cc:	b	145ec <PyInit__decimal@@Base+0xdb38>
   145d0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   145d4:	add	x0, x0, #0x318
   145d8:	mov	x1, x19
   145dc:	mov	x2, x20
   145e0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   145e4:	mov	x19, x0
   145e8:	cbnz	x0, 14500 <PyInit__decimal@@Base+0xda4c>
   145ec:	mov	x21, xzr
   145f0:	mov	x0, x21
   145f4:	ldp	x20, x19, [sp, #32]
   145f8:	ldr	x21, [sp, #16]
   145fc:	ldp	x29, x30, [sp], #48
   14600:	ret
   14604:	stp	x29, x30, [sp, #-48]!
   14608:	str	x21, [sp, #16]
   1460c:	stp	x20, x19, [sp, #32]
   14610:	mov	x29, sp
   14614:	str	wzr, [x29, #28]
   14618:	ldr	x8, [x1, #8]
   1461c:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   14620:	add	x9, x9, #0x318
   14624:	mov	x19, x1
   14628:	cmp	x8, x9
   1462c:	mov	x20, x0
   14630:	b.eq	14648 <PyInit__decimal@@Base+0xdb94>  // b.none
   14634:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   14638:	add	x1, x1, #0x318
   1463c:	mov	x0, x8
   14640:	bl	6900 <PyType_IsSubtype@plt>
   14644:	cbz	w0, 146f8 <PyInit__decimal@@Base+0xdc44>
   14648:	ldr	x8, [x19]
   1464c:	add	x8, x8, #0x1
   14650:	str	x8, [x19]
   14654:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14658:	add	x0, x0, #0x318
   1465c:	bl	6890 <_PyObject_New@plt>
   14660:	cbz	x0, 146dc <PyInit__decimal@@Base+0xdc28>
   14664:	mov	w8, #0x30                  	// #48
   14668:	mov	x21, x0
   1466c:	strb	w8, [x0, #24]!
   14670:	mov	x9, #0xffffffffffffffff    	// #-1
   14674:	mov	w10, #0x4                   	// #4
   14678:	add	x1, x19, #0x18
   1467c:	add	x8, x0, #0x30
   14680:	add	x2, x20, #0x10
   14684:	add	x3, x29, #0x1c
   14688:	stur	x9, [x0, #-8]
   1468c:	stp	xzr, xzr, [x0, #8]
   14690:	stp	xzr, x10, [x0, #24]
   14694:	str	x8, [x0, #40]
   14698:	bl	31280 <PyInit__decimal@@Base+0x2a7cc>
   1469c:	ldr	x8, [x19]
   146a0:	subs	x8, x8, #0x1
   146a4:	str	x8, [x19]
   146a8:	b.ne	146b4 <PyInit__decimal@@Base+0xdc00>  // b.any
   146ac:	mov	x0, x19
   146b0:	bl	6510 <_Py_Dealloc@plt>
   146b4:	ldr	w1, [x29, #28]
   146b8:	mov	x0, x20
   146bc:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   146c0:	cbz	w0, 14744 <PyInit__decimal@@Base+0xdc90>
   146c4:	ldr	x8, [x21]
   146c8:	subs	x8, x8, #0x1
   146cc:	str	x8, [x21]
   146d0:	b.ne	14740 <PyInit__decimal@@Base+0xdc8c>  // b.any
   146d4:	mov	x0, x21
   146d8:	b	146f0 <PyInit__decimal@@Base+0xdc3c>
   146dc:	ldr	x8, [x19]
   146e0:	subs	x8, x8, #0x1
   146e4:	str	x8, [x19]
   146e8:	b.ne	14740 <PyInit__decimal@@Base+0xdc8c>  // b.any
   146ec:	mov	x0, x19
   146f0:	bl	6510 <_Py_Dealloc@plt>
   146f4:	b	14740 <PyInit__decimal@@Base+0xdc8c>
   146f8:	ldr	x8, [x19, #8]
   146fc:	ldrb	w9, [x8, #171]
   14700:	tbnz	w9, #0, 14724 <PyInit__decimal@@Base+0xdc70>
   14704:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   14708:	ldr	x9, [x9, #3936]
   1470c:	ldr	x2, [x8, #24]
   14710:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14714:	add	x1, x1, #0x263
   14718:	ldr	x0, [x9]
   1471c:	bl	6950 <PyErr_Format@plt>
   14720:	b	14740 <PyInit__decimal@@Base+0xdc8c>
   14724:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14728:	add	x0, x0, #0x318
   1472c:	mov	x1, x19
   14730:	mov	x2, x20
   14734:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   14738:	mov	x19, x0
   1473c:	cbnz	x0, 14654 <PyInit__decimal@@Base+0xdba0>
   14740:	mov	x21, xzr
   14744:	mov	x0, x21
   14748:	ldp	x20, x19, [sp, #32]
   1474c:	ldr	x21, [sp, #16]
   14750:	ldp	x29, x30, [sp], #48
   14754:	ret
   14758:	stp	x29, x30, [sp, #-48]!
   1475c:	str	x21, [sp, #16]
   14760:	stp	x20, x19, [sp, #32]
   14764:	mov	x29, sp
   14768:	str	wzr, [x29, #28]
   1476c:	ldr	x8, [x1, #8]
   14770:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   14774:	add	x9, x9, #0x318
   14778:	mov	x19, x1
   1477c:	cmp	x8, x9
   14780:	mov	x20, x0
   14784:	b.eq	1479c <PyInit__decimal@@Base+0xdce8>  // b.none
   14788:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1478c:	add	x1, x1, #0x318
   14790:	mov	x0, x8
   14794:	bl	6900 <PyType_IsSubtype@plt>
   14798:	cbz	w0, 1484c <PyInit__decimal@@Base+0xdd98>
   1479c:	ldr	x8, [x19]
   147a0:	add	x8, x8, #0x1
   147a4:	str	x8, [x19]
   147a8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   147ac:	add	x0, x0, #0x318
   147b0:	bl	6890 <_PyObject_New@plt>
   147b4:	cbz	x0, 14830 <PyInit__decimal@@Base+0xdd7c>
   147b8:	mov	w8, #0x30                  	// #48
   147bc:	mov	x21, x0
   147c0:	strb	w8, [x0, #24]!
   147c4:	mov	x9, #0xffffffffffffffff    	// #-1
   147c8:	mov	w10, #0x4                   	// #4
   147cc:	add	x1, x19, #0x18
   147d0:	add	x8, x0, #0x30
   147d4:	add	x2, x20, #0x10
   147d8:	add	x3, x29, #0x1c
   147dc:	stur	x9, [x0, #-8]
   147e0:	stp	xzr, xzr, [x0, #8]
   147e4:	stp	xzr, x10, [x0, #24]
   147e8:	str	x8, [x0, #40]
   147ec:	bl	32c1c <PyInit__decimal@@Base+0x2c168>
   147f0:	ldr	x8, [x19]
   147f4:	subs	x8, x8, #0x1
   147f8:	str	x8, [x19]
   147fc:	b.ne	14808 <PyInit__decimal@@Base+0xdd54>  // b.any
   14800:	mov	x0, x19
   14804:	bl	6510 <_Py_Dealloc@plt>
   14808:	ldr	w1, [x29, #28]
   1480c:	mov	x0, x20
   14810:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   14814:	cbz	w0, 14898 <PyInit__decimal@@Base+0xdde4>
   14818:	ldr	x8, [x21]
   1481c:	subs	x8, x8, #0x1
   14820:	str	x8, [x21]
   14824:	b.ne	14894 <PyInit__decimal@@Base+0xdde0>  // b.any
   14828:	mov	x0, x21
   1482c:	b	14844 <PyInit__decimal@@Base+0xdd90>
   14830:	ldr	x8, [x19]
   14834:	subs	x8, x8, #0x1
   14838:	str	x8, [x19]
   1483c:	b.ne	14894 <PyInit__decimal@@Base+0xdde0>  // b.any
   14840:	mov	x0, x19
   14844:	bl	6510 <_Py_Dealloc@plt>
   14848:	b	14894 <PyInit__decimal@@Base+0xdde0>
   1484c:	ldr	x8, [x19, #8]
   14850:	ldrb	w9, [x8, #171]
   14854:	tbnz	w9, #0, 14878 <PyInit__decimal@@Base+0xddc4>
   14858:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1485c:	ldr	x9, [x9, #3936]
   14860:	ldr	x2, [x8, #24]
   14864:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14868:	add	x1, x1, #0x263
   1486c:	ldr	x0, [x9]
   14870:	bl	6950 <PyErr_Format@plt>
   14874:	b	14894 <PyInit__decimal@@Base+0xdde0>
   14878:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1487c:	add	x0, x0, #0x318
   14880:	mov	x1, x19
   14884:	mov	x2, x20
   14888:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1488c:	mov	x19, x0
   14890:	cbnz	x0, 147a8 <PyInit__decimal@@Base+0xdcf4>
   14894:	mov	x21, xzr
   14898:	mov	x0, x21
   1489c:	ldp	x20, x19, [sp, #32]
   148a0:	ldr	x21, [sp, #16]
   148a4:	ldp	x29, x30, [sp], #48
   148a8:	ret
   148ac:	stp	x29, x30, [sp, #-48]!
   148b0:	str	x21, [sp, #16]
   148b4:	stp	x20, x19, [sp, #32]
   148b8:	mov	x29, sp
   148bc:	str	wzr, [x29, #28]
   148c0:	ldr	x8, [x1, #8]
   148c4:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   148c8:	add	x9, x9, #0x318
   148cc:	mov	x19, x1
   148d0:	cmp	x8, x9
   148d4:	mov	x20, x0
   148d8:	b.eq	148f0 <PyInit__decimal@@Base+0xde3c>  // b.none
   148dc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   148e0:	add	x1, x1, #0x318
   148e4:	mov	x0, x8
   148e8:	bl	6900 <PyType_IsSubtype@plt>
   148ec:	cbz	w0, 149a0 <PyInit__decimal@@Base+0xdeec>
   148f0:	ldr	x8, [x19]
   148f4:	add	x8, x8, #0x1
   148f8:	str	x8, [x19]
   148fc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14900:	add	x0, x0, #0x318
   14904:	bl	6890 <_PyObject_New@plt>
   14908:	cbz	x0, 14984 <PyInit__decimal@@Base+0xded0>
   1490c:	mov	w8, #0x30                  	// #48
   14910:	mov	x21, x0
   14914:	strb	w8, [x0, #24]!
   14918:	mov	x9, #0xffffffffffffffff    	// #-1
   1491c:	mov	w10, #0x4                   	// #4
   14920:	add	x1, x19, #0x18
   14924:	add	x8, x0, #0x30
   14928:	add	x2, x20, #0x10
   1492c:	add	x3, x29, #0x1c
   14930:	stur	x9, [x0, #-8]
   14934:	stp	xzr, xzr, [x0, #8]
   14938:	stp	xzr, x10, [x0, #24]
   1493c:	str	x8, [x0, #40]
   14940:	bl	33b54 <PyInit__decimal@@Base+0x2d0a0>
   14944:	ldr	x8, [x19]
   14948:	subs	x8, x8, #0x1
   1494c:	str	x8, [x19]
   14950:	b.ne	1495c <PyInit__decimal@@Base+0xdea8>  // b.any
   14954:	mov	x0, x19
   14958:	bl	6510 <_Py_Dealloc@plt>
   1495c:	ldr	w1, [x29, #28]
   14960:	mov	x0, x20
   14964:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   14968:	cbz	w0, 149ec <PyInit__decimal@@Base+0xdf38>
   1496c:	ldr	x8, [x21]
   14970:	subs	x8, x8, #0x1
   14974:	str	x8, [x21]
   14978:	b.ne	149e8 <PyInit__decimal@@Base+0xdf34>  // b.any
   1497c:	mov	x0, x21
   14980:	b	14998 <PyInit__decimal@@Base+0xdee4>
   14984:	ldr	x8, [x19]
   14988:	subs	x8, x8, #0x1
   1498c:	str	x8, [x19]
   14990:	b.ne	149e8 <PyInit__decimal@@Base+0xdf34>  // b.any
   14994:	mov	x0, x19
   14998:	bl	6510 <_Py_Dealloc@plt>
   1499c:	b	149e8 <PyInit__decimal@@Base+0xdf34>
   149a0:	ldr	x8, [x19, #8]
   149a4:	ldrb	w9, [x8, #171]
   149a8:	tbnz	w9, #0, 149cc <PyInit__decimal@@Base+0xdf18>
   149ac:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   149b0:	ldr	x9, [x9, #3936]
   149b4:	ldr	x2, [x8, #24]
   149b8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   149bc:	add	x1, x1, #0x263
   149c0:	ldr	x0, [x9]
   149c4:	bl	6950 <PyErr_Format@plt>
   149c8:	b	149e8 <PyInit__decimal@@Base+0xdf34>
   149cc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   149d0:	add	x0, x0, #0x318
   149d4:	mov	x1, x19
   149d8:	mov	x2, x20
   149dc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   149e0:	mov	x19, x0
   149e4:	cbnz	x0, 148fc <PyInit__decimal@@Base+0xde48>
   149e8:	mov	x21, xzr
   149ec:	mov	x0, x21
   149f0:	ldp	x20, x19, [sp, #32]
   149f4:	ldr	x21, [sp, #16]
   149f8:	ldp	x29, x30, [sp], #48
   149fc:	ret
   14a00:	sub	sp, sp, #0x50
   14a04:	stp	x29, x30, [sp, #32]
   14a08:	stp	x22, x21, [sp, #48]
   14a0c:	stp	x20, x19, [sp, #64]
   14a10:	add	x29, sp, #0x20
   14a14:	mov	x8, x1
   14a18:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14a1c:	mov	x19, x0
   14a20:	add	x1, x1, #0xd4c
   14a24:	sub	x2, x29, #0x8
   14a28:	add	x3, sp, #0x10
   14a2c:	mov	x0, x8
   14a30:	str	wzr, [sp, #12]
   14a34:	bl	6820 <PyArg_ParseTuple@plt>
   14a38:	cbz	w0, 14c1c <PyInit__decimal@@Base+0xe168>
   14a3c:	ldur	x20, [x29, #-8]
   14a40:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   14a44:	add	x22, x22, #0x318
   14a48:	ldr	x0, [x20, #8]
   14a4c:	cmp	x0, x22
   14a50:	b.eq	14a64 <PyInit__decimal@@Base+0xdfb0>  // b.none
   14a54:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   14a58:	add	x1, x1, #0x318
   14a5c:	bl	6900 <PyType_IsSubtype@plt>
   14a60:	cbz	w0, 14b70 <PyInit__decimal@@Base+0xe0bc>
   14a64:	ldr	x8, [x20]
   14a68:	add	x8, x8, #0x1
   14a6c:	str	x8, [x20]
   14a70:	ldr	x21, [sp, #16]
   14a74:	ldr	x0, [x21, #8]
   14a78:	cmp	x0, x22
   14a7c:	b.eq	14a90 <PyInit__decimal@@Base+0xdfdc>  // b.none
   14a80:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   14a84:	add	x1, x1, #0x318
   14a88:	bl	6900 <PyType_IsSubtype@plt>
   14a8c:	cbz	w0, 14b9c <PyInit__decimal@@Base+0xe0e8>
   14a90:	ldr	x8, [x21]
   14a94:	add	x8, x8, #0x1
   14a98:	str	x8, [x21]
   14a9c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14aa0:	add	x0, x0, #0x318
   14aa4:	bl	6890 <_PyObject_New@plt>
   14aa8:	cbz	x0, 14b40 <PyInit__decimal@@Base+0xe08c>
   14aac:	mov	w8, #0x30                  	// #48
   14ab0:	mov	x22, x0
   14ab4:	strb	w8, [x0, #24]!
   14ab8:	mov	x9, #0xffffffffffffffff    	// #-1
   14abc:	mov	w10, #0x4                   	// #4
   14ac0:	add	x1, x20, #0x18
   14ac4:	add	x2, x21, #0x18
   14ac8:	add	x8, x0, #0x30
   14acc:	add	x3, x19, #0x10
   14ad0:	add	x4, sp, #0xc
   14ad4:	stur	x9, [x0, #-8]
   14ad8:	stp	xzr, xzr, [x0, #8]
   14adc:	stp	xzr, x10, [x0, #24]
   14ae0:	str	x8, [x0, #40]
   14ae4:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   14ae8:	ldr	x8, [x20]
   14aec:	subs	x8, x8, #0x1
   14af0:	str	x8, [x20]
   14af4:	b.ne	14b00 <PyInit__decimal@@Base+0xe04c>  // b.any
   14af8:	mov	x0, x20
   14afc:	bl	6510 <_Py_Dealloc@plt>
   14b00:	ldr	x8, [x21]
   14b04:	subs	x8, x8, #0x1
   14b08:	str	x8, [x21]
   14b0c:	b.ne	14b18 <PyInit__decimal@@Base+0xe064>  // b.any
   14b10:	mov	x0, x21
   14b14:	bl	6510 <_Py_Dealloc@plt>
   14b18:	ldr	w1, [sp, #12]
   14b1c:	mov	x0, x19
   14b20:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   14b24:	cbz	w0, 14c20 <PyInit__decimal@@Base+0xe16c>
   14b28:	ldr	x8, [x22]
   14b2c:	subs	x8, x8, #0x1
   14b30:	str	x8, [x22]
   14b34:	b.ne	14c1c <PyInit__decimal@@Base+0xe168>  // b.any
   14b38:	mov	x0, x22
   14b3c:	b	14c18 <PyInit__decimal@@Base+0xe164>
   14b40:	ldr	x8, [x20]
   14b44:	subs	x8, x8, #0x1
   14b48:	str	x8, [x20]
   14b4c:	b.ne	14b58 <PyInit__decimal@@Base+0xe0a4>  // b.any
   14b50:	mov	x0, x20
   14b54:	bl	6510 <_Py_Dealloc@plt>
   14b58:	ldr	x8, [x21]
   14b5c:	subs	x8, x8, #0x1
   14b60:	str	x8, [x21]
   14b64:	b.ne	14c1c <PyInit__decimal@@Base+0xe168>  // b.any
   14b68:	mov	x0, x21
   14b6c:	b	14c18 <PyInit__decimal@@Base+0xe164>
   14b70:	ldr	x8, [x20, #8]
   14b74:	ldrb	w9, [x8, #171]
   14b78:	tbnz	w9, #0, 14bc8 <PyInit__decimal@@Base+0xe114>
   14b7c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   14b80:	ldr	x9, [x9, #3936]
   14b84:	ldr	x2, [x8, #24]
   14b88:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14b8c:	add	x1, x1, #0x263
   14b90:	ldr	x0, [x9]
   14b94:	bl	6950 <PyErr_Format@plt>
   14b98:	b	14c1c <PyInit__decimal@@Base+0xe168>
   14b9c:	ldr	x8, [x21, #8]
   14ba0:	ldrb	w9, [x8, #171]
   14ba4:	tbnz	w9, #0, 14be8 <PyInit__decimal@@Base+0xe134>
   14ba8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   14bac:	ldr	x9, [x9, #3936]
   14bb0:	ldr	x2, [x8, #24]
   14bb4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14bb8:	add	x1, x1, #0x263
   14bbc:	ldr	x0, [x9]
   14bc0:	bl	6950 <PyErr_Format@plt>
   14bc4:	b	14c04 <PyInit__decimal@@Base+0xe150>
   14bc8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14bcc:	add	x0, x0, #0x318
   14bd0:	mov	x1, x20
   14bd4:	mov	x2, x19
   14bd8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   14bdc:	mov	x20, x0
   14be0:	cbnz	x0, 14a70 <PyInit__decimal@@Base+0xdfbc>
   14be4:	b	14c1c <PyInit__decimal@@Base+0xe168>
   14be8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14bec:	add	x0, x0, #0x318
   14bf0:	mov	x1, x21
   14bf4:	mov	x2, x19
   14bf8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   14bfc:	mov	x21, x0
   14c00:	cbnz	x0, 14a9c <PyInit__decimal@@Base+0xdfe8>
   14c04:	ldr	x8, [x20]
   14c08:	subs	x8, x8, #0x1
   14c0c:	str	x8, [x20]
   14c10:	b.ne	14c1c <PyInit__decimal@@Base+0xe168>  // b.any
   14c14:	mov	x0, x20
   14c18:	bl	6510 <_Py_Dealloc@plt>
   14c1c:	mov	x22, xzr
   14c20:	mov	x0, x22
   14c24:	ldp	x20, x19, [sp, #64]
   14c28:	ldp	x22, x21, [sp, #48]
   14c2c:	ldp	x29, x30, [sp, #32]
   14c30:	add	sp, sp, #0x50
   14c34:	ret
   14c38:	sub	sp, sp, #0x50
   14c3c:	stp	x29, x30, [sp, #32]
   14c40:	stp	x22, x21, [sp, #48]
   14c44:	stp	x20, x19, [sp, #64]
   14c48:	add	x29, sp, #0x20
   14c4c:	mov	x8, x1
   14c50:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14c54:	mov	x19, x0
   14c58:	add	x1, x1, #0xd4c
   14c5c:	sub	x2, x29, #0x8
   14c60:	add	x3, sp, #0x10
   14c64:	mov	x0, x8
   14c68:	str	wzr, [sp, #12]
   14c6c:	bl	6820 <PyArg_ParseTuple@plt>
   14c70:	cbz	w0, 14e54 <PyInit__decimal@@Base+0xe3a0>
   14c74:	ldur	x20, [x29, #-8]
   14c78:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   14c7c:	add	x22, x22, #0x318
   14c80:	ldr	x0, [x20, #8]
   14c84:	cmp	x0, x22
   14c88:	b.eq	14c9c <PyInit__decimal@@Base+0xe1e8>  // b.none
   14c8c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   14c90:	add	x1, x1, #0x318
   14c94:	bl	6900 <PyType_IsSubtype@plt>
   14c98:	cbz	w0, 14da8 <PyInit__decimal@@Base+0xe2f4>
   14c9c:	ldr	x8, [x20]
   14ca0:	add	x8, x8, #0x1
   14ca4:	str	x8, [x20]
   14ca8:	ldr	x21, [sp, #16]
   14cac:	ldr	x0, [x21, #8]
   14cb0:	cmp	x0, x22
   14cb4:	b.eq	14cc8 <PyInit__decimal@@Base+0xe214>  // b.none
   14cb8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   14cbc:	add	x1, x1, #0x318
   14cc0:	bl	6900 <PyType_IsSubtype@plt>
   14cc4:	cbz	w0, 14dd4 <PyInit__decimal@@Base+0xe320>
   14cc8:	ldr	x8, [x21]
   14ccc:	add	x8, x8, #0x1
   14cd0:	str	x8, [x21]
   14cd4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14cd8:	add	x0, x0, #0x318
   14cdc:	bl	6890 <_PyObject_New@plt>
   14ce0:	cbz	x0, 14d78 <PyInit__decimal@@Base+0xe2c4>
   14ce4:	mov	w8, #0x30                  	// #48
   14ce8:	mov	x22, x0
   14cec:	strb	w8, [x0, #24]!
   14cf0:	mov	x9, #0xffffffffffffffff    	// #-1
   14cf4:	mov	w10, #0x4                   	// #4
   14cf8:	add	x1, x20, #0x18
   14cfc:	add	x2, x21, #0x18
   14d00:	add	x8, x0, #0x30
   14d04:	add	x3, x19, #0x10
   14d08:	add	x4, sp, #0xc
   14d0c:	stur	x9, [x0, #-8]
   14d10:	stp	xzr, xzr, [x0, #8]
   14d14:	stp	xzr, x10, [x0, #24]
   14d18:	str	x8, [x0, #40]
   14d1c:	bl	23808 <PyInit__decimal@@Base+0x1cd54>
   14d20:	ldr	x8, [x20]
   14d24:	subs	x8, x8, #0x1
   14d28:	str	x8, [x20]
   14d2c:	b.ne	14d38 <PyInit__decimal@@Base+0xe284>  // b.any
   14d30:	mov	x0, x20
   14d34:	bl	6510 <_Py_Dealloc@plt>
   14d38:	ldr	x8, [x21]
   14d3c:	subs	x8, x8, #0x1
   14d40:	str	x8, [x21]
   14d44:	b.ne	14d50 <PyInit__decimal@@Base+0xe29c>  // b.any
   14d48:	mov	x0, x21
   14d4c:	bl	6510 <_Py_Dealloc@plt>
   14d50:	ldr	w1, [sp, #12]
   14d54:	mov	x0, x19
   14d58:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   14d5c:	cbz	w0, 14e58 <PyInit__decimal@@Base+0xe3a4>
   14d60:	ldr	x8, [x22]
   14d64:	subs	x8, x8, #0x1
   14d68:	str	x8, [x22]
   14d6c:	b.ne	14e54 <PyInit__decimal@@Base+0xe3a0>  // b.any
   14d70:	mov	x0, x22
   14d74:	b	14e50 <PyInit__decimal@@Base+0xe39c>
   14d78:	ldr	x8, [x20]
   14d7c:	subs	x8, x8, #0x1
   14d80:	str	x8, [x20]
   14d84:	b.ne	14d90 <PyInit__decimal@@Base+0xe2dc>  // b.any
   14d88:	mov	x0, x20
   14d8c:	bl	6510 <_Py_Dealloc@plt>
   14d90:	ldr	x8, [x21]
   14d94:	subs	x8, x8, #0x1
   14d98:	str	x8, [x21]
   14d9c:	b.ne	14e54 <PyInit__decimal@@Base+0xe3a0>  // b.any
   14da0:	mov	x0, x21
   14da4:	b	14e50 <PyInit__decimal@@Base+0xe39c>
   14da8:	ldr	x8, [x20, #8]
   14dac:	ldrb	w9, [x8, #171]
   14db0:	tbnz	w9, #0, 14e00 <PyInit__decimal@@Base+0xe34c>
   14db4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   14db8:	ldr	x9, [x9, #3936]
   14dbc:	ldr	x2, [x8, #24]
   14dc0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14dc4:	add	x1, x1, #0x263
   14dc8:	ldr	x0, [x9]
   14dcc:	bl	6950 <PyErr_Format@plt>
   14dd0:	b	14e54 <PyInit__decimal@@Base+0xe3a0>
   14dd4:	ldr	x8, [x21, #8]
   14dd8:	ldrb	w9, [x8, #171]
   14ddc:	tbnz	w9, #0, 14e20 <PyInit__decimal@@Base+0xe36c>
   14de0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   14de4:	ldr	x9, [x9, #3936]
   14de8:	ldr	x2, [x8, #24]
   14dec:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14df0:	add	x1, x1, #0x263
   14df4:	ldr	x0, [x9]
   14df8:	bl	6950 <PyErr_Format@plt>
   14dfc:	b	14e3c <PyInit__decimal@@Base+0xe388>
   14e00:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14e04:	add	x0, x0, #0x318
   14e08:	mov	x1, x20
   14e0c:	mov	x2, x19
   14e10:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   14e14:	mov	x20, x0
   14e18:	cbnz	x0, 14ca8 <PyInit__decimal@@Base+0xe1f4>
   14e1c:	b	14e54 <PyInit__decimal@@Base+0xe3a0>
   14e20:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14e24:	add	x0, x0, #0x318
   14e28:	mov	x1, x21
   14e2c:	mov	x2, x19
   14e30:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   14e34:	mov	x21, x0
   14e38:	cbnz	x0, 14cd4 <PyInit__decimal@@Base+0xe220>
   14e3c:	ldr	x8, [x20]
   14e40:	subs	x8, x8, #0x1
   14e44:	str	x8, [x20]
   14e48:	b.ne	14e54 <PyInit__decimal@@Base+0xe3a0>  // b.any
   14e4c:	mov	x0, x20
   14e50:	bl	6510 <_Py_Dealloc@plt>
   14e54:	mov	x22, xzr
   14e58:	mov	x0, x22
   14e5c:	ldp	x20, x19, [sp, #64]
   14e60:	ldp	x22, x21, [sp, #48]
   14e64:	ldp	x29, x30, [sp, #32]
   14e68:	add	sp, sp, #0x50
   14e6c:	ret
   14e70:	sub	sp, sp, #0x50
   14e74:	stp	x29, x30, [sp, #32]
   14e78:	stp	x22, x21, [sp, #48]
   14e7c:	stp	x20, x19, [sp, #64]
   14e80:	add	x29, sp, #0x20
   14e84:	mov	x8, x1
   14e88:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14e8c:	mov	x19, x0
   14e90:	add	x1, x1, #0xd4c
   14e94:	sub	x2, x29, #0x8
   14e98:	add	x3, sp, #0x10
   14e9c:	mov	x0, x8
   14ea0:	str	wzr, [sp, #12]
   14ea4:	bl	6820 <PyArg_ParseTuple@plt>
   14ea8:	cbz	w0, 1508c <PyInit__decimal@@Base+0xe5d8>
   14eac:	ldur	x20, [x29, #-8]
   14eb0:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   14eb4:	add	x22, x22, #0x318
   14eb8:	ldr	x0, [x20, #8]
   14ebc:	cmp	x0, x22
   14ec0:	b.eq	14ed4 <PyInit__decimal@@Base+0xe420>  // b.none
   14ec4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   14ec8:	add	x1, x1, #0x318
   14ecc:	bl	6900 <PyType_IsSubtype@plt>
   14ed0:	cbz	w0, 14fe0 <PyInit__decimal@@Base+0xe52c>
   14ed4:	ldr	x8, [x20]
   14ed8:	add	x8, x8, #0x1
   14edc:	str	x8, [x20]
   14ee0:	ldr	x21, [sp, #16]
   14ee4:	ldr	x0, [x21, #8]
   14ee8:	cmp	x0, x22
   14eec:	b.eq	14f00 <PyInit__decimal@@Base+0xe44c>  // b.none
   14ef0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   14ef4:	add	x1, x1, #0x318
   14ef8:	bl	6900 <PyType_IsSubtype@plt>
   14efc:	cbz	w0, 1500c <PyInit__decimal@@Base+0xe558>
   14f00:	ldr	x8, [x21]
   14f04:	add	x8, x8, #0x1
   14f08:	str	x8, [x21]
   14f0c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   14f10:	add	x0, x0, #0x318
   14f14:	bl	6890 <_PyObject_New@plt>
   14f18:	cbz	x0, 14fb0 <PyInit__decimal@@Base+0xe4fc>
   14f1c:	mov	w8, #0x30                  	// #48
   14f20:	mov	x22, x0
   14f24:	strb	w8, [x0, #24]!
   14f28:	mov	x9, #0xffffffffffffffff    	// #-1
   14f2c:	mov	w10, #0x4                   	// #4
   14f30:	add	x1, x20, #0x18
   14f34:	add	x2, x21, #0x18
   14f38:	add	x8, x0, #0x30
   14f3c:	add	x3, x19, #0x10
   14f40:	add	x4, sp, #0xc
   14f44:	stur	x9, [x0, #-8]
   14f48:	stp	xzr, xzr, [x0, #8]
   14f4c:	stp	xzr, x10, [x0, #24]
   14f50:	str	x8, [x0, #40]
   14f54:	bl	23894 <PyInit__decimal@@Base+0x1cde0>
   14f58:	ldr	x8, [x20]
   14f5c:	subs	x8, x8, #0x1
   14f60:	str	x8, [x20]
   14f64:	b.ne	14f70 <PyInit__decimal@@Base+0xe4bc>  // b.any
   14f68:	mov	x0, x20
   14f6c:	bl	6510 <_Py_Dealloc@plt>
   14f70:	ldr	x8, [x21]
   14f74:	subs	x8, x8, #0x1
   14f78:	str	x8, [x21]
   14f7c:	b.ne	14f88 <PyInit__decimal@@Base+0xe4d4>  // b.any
   14f80:	mov	x0, x21
   14f84:	bl	6510 <_Py_Dealloc@plt>
   14f88:	ldr	w1, [sp, #12]
   14f8c:	mov	x0, x19
   14f90:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   14f94:	cbz	w0, 15090 <PyInit__decimal@@Base+0xe5dc>
   14f98:	ldr	x8, [x22]
   14f9c:	subs	x8, x8, #0x1
   14fa0:	str	x8, [x22]
   14fa4:	b.ne	1508c <PyInit__decimal@@Base+0xe5d8>  // b.any
   14fa8:	mov	x0, x22
   14fac:	b	15088 <PyInit__decimal@@Base+0xe5d4>
   14fb0:	ldr	x8, [x20]
   14fb4:	subs	x8, x8, #0x1
   14fb8:	str	x8, [x20]
   14fbc:	b.ne	14fc8 <PyInit__decimal@@Base+0xe514>  // b.any
   14fc0:	mov	x0, x20
   14fc4:	bl	6510 <_Py_Dealloc@plt>
   14fc8:	ldr	x8, [x21]
   14fcc:	subs	x8, x8, #0x1
   14fd0:	str	x8, [x21]
   14fd4:	b.ne	1508c <PyInit__decimal@@Base+0xe5d8>  // b.any
   14fd8:	mov	x0, x21
   14fdc:	b	15088 <PyInit__decimal@@Base+0xe5d4>
   14fe0:	ldr	x8, [x20, #8]
   14fe4:	ldrb	w9, [x8, #171]
   14fe8:	tbnz	w9, #0, 15038 <PyInit__decimal@@Base+0xe584>
   14fec:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   14ff0:	ldr	x9, [x9, #3936]
   14ff4:	ldr	x2, [x8, #24]
   14ff8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   14ffc:	add	x1, x1, #0x263
   15000:	ldr	x0, [x9]
   15004:	bl	6950 <PyErr_Format@plt>
   15008:	b	1508c <PyInit__decimal@@Base+0xe5d8>
   1500c:	ldr	x8, [x21, #8]
   15010:	ldrb	w9, [x8, #171]
   15014:	tbnz	w9, #0, 15058 <PyInit__decimal@@Base+0xe5a4>
   15018:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1501c:	ldr	x9, [x9, #3936]
   15020:	ldr	x2, [x8, #24]
   15024:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15028:	add	x1, x1, #0x263
   1502c:	ldr	x0, [x9]
   15030:	bl	6950 <PyErr_Format@plt>
   15034:	b	15074 <PyInit__decimal@@Base+0xe5c0>
   15038:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1503c:	add	x0, x0, #0x318
   15040:	mov	x1, x20
   15044:	mov	x2, x19
   15048:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1504c:	mov	x20, x0
   15050:	cbnz	x0, 14ee0 <PyInit__decimal@@Base+0xe42c>
   15054:	b	1508c <PyInit__decimal@@Base+0xe5d8>
   15058:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1505c:	add	x0, x0, #0x318
   15060:	mov	x1, x21
   15064:	mov	x2, x19
   15068:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1506c:	mov	x21, x0
   15070:	cbnz	x0, 14f0c <PyInit__decimal@@Base+0xe458>
   15074:	ldr	x8, [x20]
   15078:	subs	x8, x8, #0x1
   1507c:	str	x8, [x20]
   15080:	b.ne	1508c <PyInit__decimal@@Base+0xe5d8>  // b.any
   15084:	mov	x0, x20
   15088:	bl	6510 <_Py_Dealloc@plt>
   1508c:	mov	x22, xzr
   15090:	mov	x0, x22
   15094:	ldp	x20, x19, [sp, #64]
   15098:	ldp	x22, x21, [sp, #48]
   1509c:	ldp	x29, x30, [sp, #32]
   150a0:	add	sp, sp, #0x50
   150a4:	ret
   150a8:	sub	sp, sp, #0x50
   150ac:	stp	x29, x30, [sp, #32]
   150b0:	stp	x22, x21, [sp, #48]
   150b4:	stp	x20, x19, [sp, #64]
   150b8:	add	x29, sp, #0x20
   150bc:	mov	x8, x1
   150c0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   150c4:	mov	x19, x0
   150c8:	add	x1, x1, #0xd4c
   150cc:	sub	x2, x29, #0x8
   150d0:	add	x3, sp, #0x10
   150d4:	mov	x0, x8
   150d8:	str	wzr, [sp, #12]
   150dc:	bl	6820 <PyArg_ParseTuple@plt>
   150e0:	cbz	w0, 152c4 <PyInit__decimal@@Base+0xe810>
   150e4:	ldur	x20, [x29, #-8]
   150e8:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   150ec:	add	x22, x22, #0x318
   150f0:	ldr	x0, [x20, #8]
   150f4:	cmp	x0, x22
   150f8:	b.eq	1510c <PyInit__decimal@@Base+0xe658>  // b.none
   150fc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15100:	add	x1, x1, #0x318
   15104:	bl	6900 <PyType_IsSubtype@plt>
   15108:	cbz	w0, 15218 <PyInit__decimal@@Base+0xe764>
   1510c:	ldr	x8, [x20]
   15110:	add	x8, x8, #0x1
   15114:	str	x8, [x20]
   15118:	ldr	x21, [sp, #16]
   1511c:	ldr	x0, [x21, #8]
   15120:	cmp	x0, x22
   15124:	b.eq	15138 <PyInit__decimal@@Base+0xe684>  // b.none
   15128:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1512c:	add	x1, x1, #0x318
   15130:	bl	6900 <PyType_IsSubtype@plt>
   15134:	cbz	w0, 15244 <PyInit__decimal@@Base+0xe790>
   15138:	ldr	x8, [x21]
   1513c:	add	x8, x8, #0x1
   15140:	str	x8, [x21]
   15144:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15148:	add	x0, x0, #0x318
   1514c:	bl	6890 <_PyObject_New@plt>
   15150:	cbz	x0, 151e8 <PyInit__decimal@@Base+0xe734>
   15154:	mov	w8, #0x30                  	// #48
   15158:	mov	x22, x0
   1515c:	strb	w8, [x0, #24]!
   15160:	mov	x9, #0xffffffffffffffff    	// #-1
   15164:	mov	w10, #0x4                   	// #4
   15168:	add	x1, x20, #0x18
   1516c:	add	x2, x21, #0x18
   15170:	add	x8, x0, #0x30
   15174:	add	x3, x19, #0x10
   15178:	add	x4, sp, #0xc
   1517c:	stur	x9, [x0, #-8]
   15180:	stp	xzr, xzr, [x0, #8]
   15184:	stp	xzr, x10, [x0, #24]
   15188:	str	x8, [x0, #40]
   1518c:	bl	281a4 <PyInit__decimal@@Base+0x216f0>
   15190:	ldr	x8, [x20]
   15194:	subs	x8, x8, #0x1
   15198:	str	x8, [x20]
   1519c:	b.ne	151a8 <PyInit__decimal@@Base+0xe6f4>  // b.any
   151a0:	mov	x0, x20
   151a4:	bl	6510 <_Py_Dealloc@plt>
   151a8:	ldr	x8, [x21]
   151ac:	subs	x8, x8, #0x1
   151b0:	str	x8, [x21]
   151b4:	b.ne	151c0 <PyInit__decimal@@Base+0xe70c>  // b.any
   151b8:	mov	x0, x21
   151bc:	bl	6510 <_Py_Dealloc@plt>
   151c0:	ldr	w1, [sp, #12]
   151c4:	mov	x0, x19
   151c8:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   151cc:	cbz	w0, 152c8 <PyInit__decimal@@Base+0xe814>
   151d0:	ldr	x8, [x22]
   151d4:	subs	x8, x8, #0x1
   151d8:	str	x8, [x22]
   151dc:	b.ne	152c4 <PyInit__decimal@@Base+0xe810>  // b.any
   151e0:	mov	x0, x22
   151e4:	b	152c0 <PyInit__decimal@@Base+0xe80c>
   151e8:	ldr	x8, [x20]
   151ec:	subs	x8, x8, #0x1
   151f0:	str	x8, [x20]
   151f4:	b.ne	15200 <PyInit__decimal@@Base+0xe74c>  // b.any
   151f8:	mov	x0, x20
   151fc:	bl	6510 <_Py_Dealloc@plt>
   15200:	ldr	x8, [x21]
   15204:	subs	x8, x8, #0x1
   15208:	str	x8, [x21]
   1520c:	b.ne	152c4 <PyInit__decimal@@Base+0xe810>  // b.any
   15210:	mov	x0, x21
   15214:	b	152c0 <PyInit__decimal@@Base+0xe80c>
   15218:	ldr	x8, [x20, #8]
   1521c:	ldrb	w9, [x8, #171]
   15220:	tbnz	w9, #0, 15270 <PyInit__decimal@@Base+0xe7bc>
   15224:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   15228:	ldr	x9, [x9, #3936]
   1522c:	ldr	x2, [x8, #24]
   15230:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15234:	add	x1, x1, #0x263
   15238:	ldr	x0, [x9]
   1523c:	bl	6950 <PyErr_Format@plt>
   15240:	b	152c4 <PyInit__decimal@@Base+0xe810>
   15244:	ldr	x8, [x21, #8]
   15248:	ldrb	w9, [x8, #171]
   1524c:	tbnz	w9, #0, 15290 <PyInit__decimal@@Base+0xe7dc>
   15250:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   15254:	ldr	x9, [x9, #3936]
   15258:	ldr	x2, [x8, #24]
   1525c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15260:	add	x1, x1, #0x263
   15264:	ldr	x0, [x9]
   15268:	bl	6950 <PyErr_Format@plt>
   1526c:	b	152ac <PyInit__decimal@@Base+0xe7f8>
   15270:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15274:	add	x0, x0, #0x318
   15278:	mov	x1, x20
   1527c:	mov	x2, x19
   15280:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   15284:	mov	x20, x0
   15288:	cbnz	x0, 15118 <PyInit__decimal@@Base+0xe664>
   1528c:	b	152c4 <PyInit__decimal@@Base+0xe810>
   15290:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15294:	add	x0, x0, #0x318
   15298:	mov	x1, x21
   1529c:	mov	x2, x19
   152a0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   152a4:	mov	x21, x0
   152a8:	cbnz	x0, 15144 <PyInit__decimal@@Base+0xe690>
   152ac:	ldr	x8, [x20]
   152b0:	subs	x8, x8, #0x1
   152b4:	str	x8, [x20]
   152b8:	b.ne	152c4 <PyInit__decimal@@Base+0xe810>  // b.any
   152bc:	mov	x0, x20
   152c0:	bl	6510 <_Py_Dealloc@plt>
   152c4:	mov	x22, xzr
   152c8:	mov	x0, x22
   152cc:	ldp	x20, x19, [sp, #64]
   152d0:	ldp	x22, x21, [sp, #48]
   152d4:	ldp	x29, x30, [sp, #32]
   152d8:	add	sp, sp, #0x50
   152dc:	ret
   152e0:	sub	sp, sp, #0x50
   152e4:	stp	x29, x30, [sp, #32]
   152e8:	stp	x22, x21, [sp, #48]
   152ec:	stp	x20, x19, [sp, #64]
   152f0:	add	x29, sp, #0x20
   152f4:	mov	x8, x1
   152f8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   152fc:	mov	x19, x0
   15300:	add	x1, x1, #0xd4c
   15304:	sub	x2, x29, #0x8
   15308:	add	x3, sp, #0x10
   1530c:	mov	x0, x8
   15310:	str	wzr, [sp, #12]
   15314:	bl	6820 <PyArg_ParseTuple@plt>
   15318:	cbz	w0, 154fc <PyInit__decimal@@Base+0xea48>
   1531c:	ldur	x20, [x29, #-8]
   15320:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   15324:	add	x22, x22, #0x318
   15328:	ldr	x0, [x20, #8]
   1532c:	cmp	x0, x22
   15330:	b.eq	15344 <PyInit__decimal@@Base+0xe890>  // b.none
   15334:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15338:	add	x1, x1, #0x318
   1533c:	bl	6900 <PyType_IsSubtype@plt>
   15340:	cbz	w0, 15450 <PyInit__decimal@@Base+0xe99c>
   15344:	ldr	x8, [x20]
   15348:	add	x8, x8, #0x1
   1534c:	str	x8, [x20]
   15350:	ldr	x21, [sp, #16]
   15354:	ldr	x0, [x21, #8]
   15358:	cmp	x0, x22
   1535c:	b.eq	15370 <PyInit__decimal@@Base+0xe8bc>  // b.none
   15360:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15364:	add	x1, x1, #0x318
   15368:	bl	6900 <PyType_IsSubtype@plt>
   1536c:	cbz	w0, 1547c <PyInit__decimal@@Base+0xe9c8>
   15370:	ldr	x8, [x21]
   15374:	add	x8, x8, #0x1
   15378:	str	x8, [x21]
   1537c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15380:	add	x0, x0, #0x318
   15384:	bl	6890 <_PyObject_New@plt>
   15388:	cbz	x0, 15420 <PyInit__decimal@@Base+0xe96c>
   1538c:	mov	w8, #0x30                  	// #48
   15390:	mov	x22, x0
   15394:	strb	w8, [x0, #24]!
   15398:	mov	x9, #0xffffffffffffffff    	// #-1
   1539c:	mov	w10, #0x4                   	// #4
   153a0:	add	x1, x20, #0x18
   153a4:	add	x2, x21, #0x18
   153a8:	add	x8, x0, #0x30
   153ac:	add	x3, x19, #0x10
   153b0:	add	x4, sp, #0xc
   153b4:	stur	x9, [x0, #-8]
   153b8:	stp	xzr, xzr, [x0, #8]
   153bc:	stp	xzr, x10, [x0, #24]
   153c0:	str	x8, [x0, #40]
   153c4:	bl	298f4 <PyInit__decimal@@Base+0x22e40>
   153c8:	ldr	x8, [x20]
   153cc:	subs	x8, x8, #0x1
   153d0:	str	x8, [x20]
   153d4:	b.ne	153e0 <PyInit__decimal@@Base+0xe92c>  // b.any
   153d8:	mov	x0, x20
   153dc:	bl	6510 <_Py_Dealloc@plt>
   153e0:	ldr	x8, [x21]
   153e4:	subs	x8, x8, #0x1
   153e8:	str	x8, [x21]
   153ec:	b.ne	153f8 <PyInit__decimal@@Base+0xe944>  // b.any
   153f0:	mov	x0, x21
   153f4:	bl	6510 <_Py_Dealloc@plt>
   153f8:	ldr	w1, [sp, #12]
   153fc:	mov	x0, x19
   15400:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   15404:	cbz	w0, 15500 <PyInit__decimal@@Base+0xea4c>
   15408:	ldr	x8, [x22]
   1540c:	subs	x8, x8, #0x1
   15410:	str	x8, [x22]
   15414:	b.ne	154fc <PyInit__decimal@@Base+0xea48>  // b.any
   15418:	mov	x0, x22
   1541c:	b	154f8 <PyInit__decimal@@Base+0xea44>
   15420:	ldr	x8, [x20]
   15424:	subs	x8, x8, #0x1
   15428:	str	x8, [x20]
   1542c:	b.ne	15438 <PyInit__decimal@@Base+0xe984>  // b.any
   15430:	mov	x0, x20
   15434:	bl	6510 <_Py_Dealloc@plt>
   15438:	ldr	x8, [x21]
   1543c:	subs	x8, x8, #0x1
   15440:	str	x8, [x21]
   15444:	b.ne	154fc <PyInit__decimal@@Base+0xea48>  // b.any
   15448:	mov	x0, x21
   1544c:	b	154f8 <PyInit__decimal@@Base+0xea44>
   15450:	ldr	x8, [x20, #8]
   15454:	ldrb	w9, [x8, #171]
   15458:	tbnz	w9, #0, 154a8 <PyInit__decimal@@Base+0xe9f4>
   1545c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   15460:	ldr	x9, [x9, #3936]
   15464:	ldr	x2, [x8, #24]
   15468:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1546c:	add	x1, x1, #0x263
   15470:	ldr	x0, [x9]
   15474:	bl	6950 <PyErr_Format@plt>
   15478:	b	154fc <PyInit__decimal@@Base+0xea48>
   1547c:	ldr	x8, [x21, #8]
   15480:	ldrb	w9, [x8, #171]
   15484:	tbnz	w9, #0, 154c8 <PyInit__decimal@@Base+0xea14>
   15488:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1548c:	ldr	x9, [x9, #3936]
   15490:	ldr	x2, [x8, #24]
   15494:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15498:	add	x1, x1, #0x263
   1549c:	ldr	x0, [x9]
   154a0:	bl	6950 <PyErr_Format@plt>
   154a4:	b	154e4 <PyInit__decimal@@Base+0xea30>
   154a8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   154ac:	add	x0, x0, #0x318
   154b0:	mov	x1, x20
   154b4:	mov	x2, x19
   154b8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   154bc:	mov	x20, x0
   154c0:	cbnz	x0, 15350 <PyInit__decimal@@Base+0xe89c>
   154c4:	b	154fc <PyInit__decimal@@Base+0xea48>
   154c8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   154cc:	add	x0, x0, #0x318
   154d0:	mov	x1, x21
   154d4:	mov	x2, x19
   154d8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   154dc:	mov	x21, x0
   154e0:	cbnz	x0, 1537c <PyInit__decimal@@Base+0xe8c8>
   154e4:	ldr	x8, [x20]
   154e8:	subs	x8, x8, #0x1
   154ec:	str	x8, [x20]
   154f0:	b.ne	154fc <PyInit__decimal@@Base+0xea48>  // b.any
   154f4:	mov	x0, x20
   154f8:	bl	6510 <_Py_Dealloc@plt>
   154fc:	mov	x22, xzr
   15500:	mov	x0, x22
   15504:	ldp	x20, x19, [sp, #64]
   15508:	ldp	x22, x21, [sp, #48]
   1550c:	ldp	x29, x30, [sp, #32]
   15510:	add	sp, sp, #0x50
   15514:	ret
   15518:	sub	sp, sp, #0x70
   1551c:	stp	x29, x30, [sp, #32]
   15520:	stp	x26, x25, [sp, #48]
   15524:	stp	x24, x23, [sp, #64]
   15528:	stp	x22, x21, [sp, #80]
   1552c:	stp	x20, x19, [sp, #96]
   15530:	add	x29, sp, #0x20
   15534:	mov	x8, x1
   15538:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1553c:	mov	x19, x0
   15540:	add	x1, x1, #0xd4c
   15544:	sub	x2, x29, #0x8
   15548:	add	x3, sp, #0x10
   1554c:	mov	x0, x8
   15550:	str	wzr, [sp, #12]
   15554:	bl	6820 <PyArg_ParseTuple@plt>
   15558:	cbz	w0, 1580c <PyInit__decimal@@Base+0xed58>
   1555c:	ldur	x20, [x29, #-8]
   15560:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
   15564:	add	x21, x21, #0x318
   15568:	ldr	x0, [x20, #8]
   1556c:	cmp	x0, x21
   15570:	b.eq	15584 <PyInit__decimal@@Base+0xead0>  // b.none
   15574:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15578:	add	x1, x1, #0x318
   1557c:	bl	6900 <PyType_IsSubtype@plt>
   15580:	cbz	w0, 156cc <PyInit__decimal@@Base+0xec18>
   15584:	ldr	x8, [x20]
   15588:	add	x8, x8, #0x1
   1558c:	str	x8, [x20]
   15590:	ldr	x22, [sp, #16]
   15594:	ldr	x0, [x22, #8]
   15598:	cmp	x0, x21
   1559c:	b.eq	155b0 <PyInit__decimal@@Base+0xeafc>  // b.none
   155a0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   155a4:	add	x1, x1, #0x318
   155a8:	bl	6900 <PyType_IsSubtype@plt>
   155ac:	cbz	w0, 156f8 <PyInit__decimal@@Base+0xec44>
   155b0:	ldr	x8, [x22]
   155b4:	add	x8, x8, #0x1
   155b8:	str	x8, [x22]
   155bc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   155c0:	add	x0, x0, #0x318
   155c4:	bl	6890 <_PyObject_New@plt>
   155c8:	cbz	x0, 1569c <PyInit__decimal@@Base+0xebe8>
   155cc:	mov	w25, #0x30                  	// #48
   155d0:	mov	x24, x0
   155d4:	mov	x21, x0
   155d8:	mov	w8, #0x4                   	// #4
   155dc:	strb	w25, [x24, #24]!
   155e0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   155e4:	mov	x26, #0xffffffffffffffff    	// #-1
   155e8:	stp	xzr, x8, [x24, #24]
   155ec:	add	x8, x24, #0x30
   155f0:	add	x0, x0, #0x318
   155f4:	stur	x26, [x24, #-8]
   155f8:	stp	xzr, xzr, [x24, #8]
   155fc:	str	x8, [x24, #40]
   15600:	bl	6890 <_PyObject_New@plt>
   15604:	cbz	x0, 15724 <PyInit__decimal@@Base+0xec70>
   15608:	mov	x1, x0
   1560c:	mov	w8, #0x4                   	// #4
   15610:	strb	w25, [x1, #24]!
   15614:	mov	x23, x0
   15618:	add	x2, x20, #0x18
   1561c:	add	x3, x22, #0x18
   15620:	stp	xzr, x8, [x1, #24]
   15624:	add	x8, x1, #0x30
   15628:	add	x4, x19, #0x10
   1562c:	add	x5, sp, #0xc
   15630:	mov	x0, x24
   15634:	stur	x26, [x1, #-8]
   15638:	stp	xzr, xzr, [x1, #8]
   1563c:	str	x8, [x1, #40]
   15640:	bl	28aa8 <PyInit__decimal@@Base+0x21ff4>
   15644:	ldr	x8, [x20]
   15648:	subs	x8, x8, #0x1
   1564c:	str	x8, [x20]
   15650:	b.ne	1565c <PyInit__decimal@@Base+0xeba8>  // b.any
   15654:	mov	x0, x20
   15658:	bl	6510 <_Py_Dealloc@plt>
   1565c:	ldr	x8, [x22]
   15660:	subs	x8, x8, #0x1
   15664:	str	x8, [x22]
   15668:	b.ne	15674 <PyInit__decimal@@Base+0xebc0>  // b.any
   1566c:	mov	x0, x22
   15670:	bl	6510 <_Py_Dealloc@plt>
   15674:	ldr	w1, [sp, #12]
   15678:	mov	x0, x19
   1567c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   15680:	cbz	w0, 1578c <PyInit__decimal@@Base+0xecd8>
   15684:	ldr	x8, [x23]
   15688:	subs	x8, x8, #0x1
   1568c:	str	x8, [x23]
   15690:	b.ne	15754 <PyInit__decimal@@Base+0xeca0>  // b.any
   15694:	mov	x0, x23
   15698:	b	15750 <PyInit__decimal@@Base+0xec9c>
   1569c:	ldr	x8, [x20]
   156a0:	subs	x8, x8, #0x1
   156a4:	str	x8, [x20]
   156a8:	b.ne	156b4 <PyInit__decimal@@Base+0xec00>  // b.any
   156ac:	mov	x0, x20
   156b0:	bl	6510 <_Py_Dealloc@plt>
   156b4:	ldr	x8, [x22]
   156b8:	subs	x8, x8, #0x1
   156bc:	str	x8, [x22]
   156c0:	b.ne	1580c <PyInit__decimal@@Base+0xed58>  // b.any
   156c4:	mov	x0, x22
   156c8:	b	15808 <PyInit__decimal@@Base+0xed54>
   156cc:	ldr	x8, [x20, #8]
   156d0:	ldrb	w9, [x8, #171]
   156d4:	tbnz	w9, #0, 1576c <PyInit__decimal@@Base+0xecb8>
   156d8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   156dc:	ldr	x9, [x9, #3936]
   156e0:	ldr	x2, [x8, #24]
   156e4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   156e8:	add	x1, x1, #0x263
   156ec:	ldr	x0, [x9]
   156f0:	bl	6950 <PyErr_Format@plt>
   156f4:	b	1580c <PyInit__decimal@@Base+0xed58>
   156f8:	ldr	x8, [x22, #8]
   156fc:	ldrb	w9, [x8, #171]
   15700:	tbnz	w9, #0, 157d8 <PyInit__decimal@@Base+0xed24>
   15704:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   15708:	ldr	x9, [x9, #3936]
   1570c:	ldr	x2, [x8, #24]
   15710:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15714:	add	x1, x1, #0x263
   15718:	ldr	x0, [x9]
   1571c:	bl	6950 <PyErr_Format@plt>
   15720:	b	157f4 <PyInit__decimal@@Base+0xed40>
   15724:	ldr	x8, [x20]
   15728:	subs	x8, x8, #0x1
   1572c:	str	x8, [x20]
   15730:	b.ne	1573c <PyInit__decimal@@Base+0xec88>  // b.any
   15734:	mov	x0, x20
   15738:	bl	6510 <_Py_Dealloc@plt>
   1573c:	ldr	x8, [x22]
   15740:	subs	x8, x8, #0x1
   15744:	str	x8, [x22]
   15748:	b.ne	15754 <PyInit__decimal@@Base+0xeca0>  // b.any
   1574c:	mov	x0, x22
   15750:	bl	6510 <_Py_Dealloc@plt>
   15754:	ldr	x8, [x21]
   15758:	subs	x8, x8, #0x1
   1575c:	str	x8, [x21]
   15760:	b.ne	1580c <PyInit__decimal@@Base+0xed58>  // b.any
   15764:	mov	x0, x21
   15768:	b	15808 <PyInit__decimal@@Base+0xed54>
   1576c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15770:	add	x0, x0, #0x318
   15774:	mov	x1, x20
   15778:	mov	x2, x19
   1577c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   15780:	mov	x20, x0
   15784:	cbnz	x0, 15590 <PyInit__decimal@@Base+0xeadc>
   15788:	b	1580c <PyInit__decimal@@Base+0xed58>
   1578c:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
   15790:	add	x0, x0, #0x2d3
   15794:	mov	x1, x21
   15798:	mov	x2, x23
   1579c:	bl	6710 <Py_BuildValue@plt>
   157a0:	ldr	x8, [x23]
   157a4:	mov	x19, x0
   157a8:	subs	x8, x8, #0x1
   157ac:	str	x8, [x23]
   157b0:	b.ne	157bc <PyInit__decimal@@Base+0xed08>  // b.any
   157b4:	mov	x0, x23
   157b8:	bl	6510 <_Py_Dealloc@plt>
   157bc:	ldr	x8, [x21]
   157c0:	subs	x8, x8, #0x1
   157c4:	str	x8, [x21]
   157c8:	b.ne	15810 <PyInit__decimal@@Base+0xed5c>  // b.any
   157cc:	mov	x0, x21
   157d0:	bl	6510 <_Py_Dealloc@plt>
   157d4:	b	15810 <PyInit__decimal@@Base+0xed5c>
   157d8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   157dc:	add	x0, x0, #0x318
   157e0:	mov	x1, x22
   157e4:	mov	x2, x19
   157e8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   157ec:	mov	x22, x0
   157f0:	cbnz	x0, 155bc <PyInit__decimal@@Base+0xeb08>
   157f4:	ldr	x8, [x20]
   157f8:	subs	x8, x8, #0x1
   157fc:	str	x8, [x20]
   15800:	b.ne	1580c <PyInit__decimal@@Base+0xed58>  // b.any
   15804:	mov	x0, x20
   15808:	bl	6510 <_Py_Dealloc@plt>
   1580c:	mov	x19, xzr
   15810:	mov	x0, x19
   15814:	ldp	x20, x19, [sp, #96]
   15818:	ldp	x22, x21, [sp, #80]
   1581c:	ldp	x24, x23, [sp, #64]
   15820:	ldp	x26, x25, [sp, #48]
   15824:	ldp	x29, x30, [sp, #32]
   15828:	add	sp, sp, #0x70
   1582c:	ret
   15830:	sub	sp, sp, #0x50
   15834:	stp	x29, x30, [sp, #32]
   15838:	stp	x22, x21, [sp, #48]
   1583c:	stp	x20, x19, [sp, #64]
   15840:	add	x29, sp, #0x20
   15844:	mov	x8, x1
   15848:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1584c:	mov	x19, x0
   15850:	add	x1, x1, #0xd4c
   15854:	sub	x2, x29, #0x8
   15858:	add	x3, sp, #0x10
   1585c:	mov	x0, x8
   15860:	str	wzr, [sp, #12]
   15864:	bl	6820 <PyArg_ParseTuple@plt>
   15868:	cbz	w0, 15a4c <PyInit__decimal@@Base+0xef98>
   1586c:	ldur	x20, [x29, #-8]
   15870:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   15874:	add	x22, x22, #0x318
   15878:	ldr	x0, [x20, #8]
   1587c:	cmp	x0, x22
   15880:	b.eq	15894 <PyInit__decimal@@Base+0xede0>  // b.none
   15884:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15888:	add	x1, x1, #0x318
   1588c:	bl	6900 <PyType_IsSubtype@plt>
   15890:	cbz	w0, 159a0 <PyInit__decimal@@Base+0xeeec>
   15894:	ldr	x8, [x20]
   15898:	add	x8, x8, #0x1
   1589c:	str	x8, [x20]
   158a0:	ldr	x21, [sp, #16]
   158a4:	ldr	x0, [x21, #8]
   158a8:	cmp	x0, x22
   158ac:	b.eq	158c0 <PyInit__decimal@@Base+0xee0c>  // b.none
   158b0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   158b4:	add	x1, x1, #0x318
   158b8:	bl	6900 <PyType_IsSubtype@plt>
   158bc:	cbz	w0, 159cc <PyInit__decimal@@Base+0xef18>
   158c0:	ldr	x8, [x21]
   158c4:	add	x8, x8, #0x1
   158c8:	str	x8, [x21]
   158cc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   158d0:	add	x0, x0, #0x318
   158d4:	bl	6890 <_PyObject_New@plt>
   158d8:	cbz	x0, 15970 <PyInit__decimal@@Base+0xeebc>
   158dc:	mov	w8, #0x30                  	// #48
   158e0:	mov	x22, x0
   158e4:	strb	w8, [x0, #24]!
   158e8:	mov	x9, #0xffffffffffffffff    	// #-1
   158ec:	mov	w10, #0x4                   	// #4
   158f0:	add	x1, x20, #0x18
   158f4:	add	x2, x21, #0x18
   158f8:	add	x8, x0, #0x30
   158fc:	add	x3, x19, #0x10
   15900:	add	x4, sp, #0xc
   15904:	stur	x9, [x0, #-8]
   15908:	stp	xzr, xzr, [x0, #8]
   1590c:	stp	xzr, x10, [x0, #24]
   15910:	str	x8, [x0, #40]
   15914:	bl	2dc88 <PyInit__decimal@@Base+0x271d4>
   15918:	ldr	x8, [x20]
   1591c:	subs	x8, x8, #0x1
   15920:	str	x8, [x20]
   15924:	b.ne	15930 <PyInit__decimal@@Base+0xee7c>  // b.any
   15928:	mov	x0, x20
   1592c:	bl	6510 <_Py_Dealloc@plt>
   15930:	ldr	x8, [x21]
   15934:	subs	x8, x8, #0x1
   15938:	str	x8, [x21]
   1593c:	b.ne	15948 <PyInit__decimal@@Base+0xee94>  // b.any
   15940:	mov	x0, x21
   15944:	bl	6510 <_Py_Dealloc@plt>
   15948:	ldr	w1, [sp, #12]
   1594c:	mov	x0, x19
   15950:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   15954:	cbz	w0, 15a50 <PyInit__decimal@@Base+0xef9c>
   15958:	ldr	x8, [x22]
   1595c:	subs	x8, x8, #0x1
   15960:	str	x8, [x22]
   15964:	b.ne	15a4c <PyInit__decimal@@Base+0xef98>  // b.any
   15968:	mov	x0, x22
   1596c:	b	15a48 <PyInit__decimal@@Base+0xef94>
   15970:	ldr	x8, [x20]
   15974:	subs	x8, x8, #0x1
   15978:	str	x8, [x20]
   1597c:	b.ne	15988 <PyInit__decimal@@Base+0xeed4>  // b.any
   15980:	mov	x0, x20
   15984:	bl	6510 <_Py_Dealloc@plt>
   15988:	ldr	x8, [x21]
   1598c:	subs	x8, x8, #0x1
   15990:	str	x8, [x21]
   15994:	b.ne	15a4c <PyInit__decimal@@Base+0xef98>  // b.any
   15998:	mov	x0, x21
   1599c:	b	15a48 <PyInit__decimal@@Base+0xef94>
   159a0:	ldr	x8, [x20, #8]
   159a4:	ldrb	w9, [x8, #171]
   159a8:	tbnz	w9, #0, 159f8 <PyInit__decimal@@Base+0xef44>
   159ac:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   159b0:	ldr	x9, [x9, #3936]
   159b4:	ldr	x2, [x8, #24]
   159b8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   159bc:	add	x1, x1, #0x263
   159c0:	ldr	x0, [x9]
   159c4:	bl	6950 <PyErr_Format@plt>
   159c8:	b	15a4c <PyInit__decimal@@Base+0xef98>
   159cc:	ldr	x8, [x21, #8]
   159d0:	ldrb	w9, [x8, #171]
   159d4:	tbnz	w9, #0, 15a18 <PyInit__decimal@@Base+0xef64>
   159d8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   159dc:	ldr	x9, [x9, #3936]
   159e0:	ldr	x2, [x8, #24]
   159e4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   159e8:	add	x1, x1, #0x263
   159ec:	ldr	x0, [x9]
   159f0:	bl	6950 <PyErr_Format@plt>
   159f4:	b	15a34 <PyInit__decimal@@Base+0xef80>
   159f8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   159fc:	add	x0, x0, #0x318
   15a00:	mov	x1, x20
   15a04:	mov	x2, x19
   15a08:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   15a0c:	mov	x20, x0
   15a10:	cbnz	x0, 158a0 <PyInit__decimal@@Base+0xedec>
   15a14:	b	15a4c <PyInit__decimal@@Base+0xef98>
   15a18:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15a1c:	add	x0, x0, #0x318
   15a20:	mov	x1, x21
   15a24:	mov	x2, x19
   15a28:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   15a2c:	mov	x21, x0
   15a30:	cbnz	x0, 158cc <PyInit__decimal@@Base+0xee18>
   15a34:	ldr	x8, [x20]
   15a38:	subs	x8, x8, #0x1
   15a3c:	str	x8, [x20]
   15a40:	b.ne	15a4c <PyInit__decimal@@Base+0xef98>  // b.any
   15a44:	mov	x0, x20
   15a48:	bl	6510 <_Py_Dealloc@plt>
   15a4c:	mov	x22, xzr
   15a50:	mov	x0, x22
   15a54:	ldp	x20, x19, [sp, #64]
   15a58:	ldp	x22, x21, [sp, #48]
   15a5c:	ldp	x29, x30, [sp, #32]
   15a60:	add	sp, sp, #0x50
   15a64:	ret
   15a68:	sub	sp, sp, #0x50
   15a6c:	stp	x29, x30, [sp, #32]
   15a70:	stp	x22, x21, [sp, #48]
   15a74:	stp	x20, x19, [sp, #64]
   15a78:	add	x29, sp, #0x20
   15a7c:	mov	x8, x1
   15a80:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15a84:	mov	x19, x0
   15a88:	add	x1, x1, #0xd4c
   15a8c:	sub	x2, x29, #0x8
   15a90:	add	x3, sp, #0x10
   15a94:	mov	x0, x8
   15a98:	str	wzr, [sp, #12]
   15a9c:	bl	6820 <PyArg_ParseTuple@plt>
   15aa0:	cbz	w0, 15c84 <PyInit__decimal@@Base+0xf1d0>
   15aa4:	ldur	x20, [x29, #-8]
   15aa8:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   15aac:	add	x22, x22, #0x318
   15ab0:	ldr	x0, [x20, #8]
   15ab4:	cmp	x0, x22
   15ab8:	b.eq	15acc <PyInit__decimal@@Base+0xf018>  // b.none
   15abc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15ac0:	add	x1, x1, #0x318
   15ac4:	bl	6900 <PyType_IsSubtype@plt>
   15ac8:	cbz	w0, 15bd8 <PyInit__decimal@@Base+0xf124>
   15acc:	ldr	x8, [x20]
   15ad0:	add	x8, x8, #0x1
   15ad4:	str	x8, [x20]
   15ad8:	ldr	x21, [sp, #16]
   15adc:	ldr	x0, [x21, #8]
   15ae0:	cmp	x0, x22
   15ae4:	b.eq	15af8 <PyInit__decimal@@Base+0xf044>  // b.none
   15ae8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15aec:	add	x1, x1, #0x318
   15af0:	bl	6900 <PyType_IsSubtype@plt>
   15af4:	cbz	w0, 15c04 <PyInit__decimal@@Base+0xf150>
   15af8:	ldr	x8, [x21]
   15afc:	add	x8, x8, #0x1
   15b00:	str	x8, [x21]
   15b04:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15b08:	add	x0, x0, #0x318
   15b0c:	bl	6890 <_PyObject_New@plt>
   15b10:	cbz	x0, 15ba8 <PyInit__decimal@@Base+0xf0f4>
   15b14:	mov	w8, #0x30                  	// #48
   15b18:	mov	x22, x0
   15b1c:	strb	w8, [x0, #24]!
   15b20:	mov	x9, #0xffffffffffffffff    	// #-1
   15b24:	mov	w10, #0x4                   	// #4
   15b28:	add	x1, x20, #0x18
   15b2c:	add	x2, x21, #0x18
   15b30:	add	x8, x0, #0x30
   15b34:	add	x3, x19, #0x10
   15b38:	add	x4, sp, #0xc
   15b3c:	stur	x9, [x0, #-8]
   15b40:	stp	xzr, xzr, [x0, #8]
   15b44:	stp	xzr, x10, [x0, #24]
   15b48:	str	x8, [x0, #40]
   15b4c:	bl	2df3c <PyInit__decimal@@Base+0x27488>
   15b50:	ldr	x8, [x20]
   15b54:	subs	x8, x8, #0x1
   15b58:	str	x8, [x20]
   15b5c:	b.ne	15b68 <PyInit__decimal@@Base+0xf0b4>  // b.any
   15b60:	mov	x0, x20
   15b64:	bl	6510 <_Py_Dealloc@plt>
   15b68:	ldr	x8, [x21]
   15b6c:	subs	x8, x8, #0x1
   15b70:	str	x8, [x21]
   15b74:	b.ne	15b80 <PyInit__decimal@@Base+0xf0cc>  // b.any
   15b78:	mov	x0, x21
   15b7c:	bl	6510 <_Py_Dealloc@plt>
   15b80:	ldr	w1, [sp, #12]
   15b84:	mov	x0, x19
   15b88:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   15b8c:	cbz	w0, 15c88 <PyInit__decimal@@Base+0xf1d4>
   15b90:	ldr	x8, [x22]
   15b94:	subs	x8, x8, #0x1
   15b98:	str	x8, [x22]
   15b9c:	b.ne	15c84 <PyInit__decimal@@Base+0xf1d0>  // b.any
   15ba0:	mov	x0, x22
   15ba4:	b	15c80 <PyInit__decimal@@Base+0xf1cc>
   15ba8:	ldr	x8, [x20]
   15bac:	subs	x8, x8, #0x1
   15bb0:	str	x8, [x20]
   15bb4:	b.ne	15bc0 <PyInit__decimal@@Base+0xf10c>  // b.any
   15bb8:	mov	x0, x20
   15bbc:	bl	6510 <_Py_Dealloc@plt>
   15bc0:	ldr	x8, [x21]
   15bc4:	subs	x8, x8, #0x1
   15bc8:	str	x8, [x21]
   15bcc:	b.ne	15c84 <PyInit__decimal@@Base+0xf1d0>  // b.any
   15bd0:	mov	x0, x21
   15bd4:	b	15c80 <PyInit__decimal@@Base+0xf1cc>
   15bd8:	ldr	x8, [x20, #8]
   15bdc:	ldrb	w9, [x8, #171]
   15be0:	tbnz	w9, #0, 15c30 <PyInit__decimal@@Base+0xf17c>
   15be4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   15be8:	ldr	x9, [x9, #3936]
   15bec:	ldr	x2, [x8, #24]
   15bf0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15bf4:	add	x1, x1, #0x263
   15bf8:	ldr	x0, [x9]
   15bfc:	bl	6950 <PyErr_Format@plt>
   15c00:	b	15c84 <PyInit__decimal@@Base+0xf1d0>
   15c04:	ldr	x8, [x21, #8]
   15c08:	ldrb	w9, [x8, #171]
   15c0c:	tbnz	w9, #0, 15c50 <PyInit__decimal@@Base+0xf19c>
   15c10:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   15c14:	ldr	x9, [x9, #3936]
   15c18:	ldr	x2, [x8, #24]
   15c1c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15c20:	add	x1, x1, #0x263
   15c24:	ldr	x0, [x9]
   15c28:	bl	6950 <PyErr_Format@plt>
   15c2c:	b	15c6c <PyInit__decimal@@Base+0xf1b8>
   15c30:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15c34:	add	x0, x0, #0x318
   15c38:	mov	x1, x20
   15c3c:	mov	x2, x19
   15c40:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   15c44:	mov	x20, x0
   15c48:	cbnz	x0, 15ad8 <PyInit__decimal@@Base+0xf024>
   15c4c:	b	15c84 <PyInit__decimal@@Base+0xf1d0>
   15c50:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15c54:	add	x0, x0, #0x318
   15c58:	mov	x1, x21
   15c5c:	mov	x2, x19
   15c60:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   15c64:	mov	x21, x0
   15c68:	cbnz	x0, 15b04 <PyInit__decimal@@Base+0xf050>
   15c6c:	ldr	x8, [x20]
   15c70:	subs	x8, x8, #0x1
   15c74:	str	x8, [x20]
   15c78:	b.ne	15c84 <PyInit__decimal@@Base+0xf1d0>  // b.any
   15c7c:	mov	x0, x20
   15c80:	bl	6510 <_Py_Dealloc@plt>
   15c84:	mov	x22, xzr
   15c88:	mov	x0, x22
   15c8c:	ldp	x20, x19, [sp, #64]
   15c90:	ldp	x22, x21, [sp, #48]
   15c94:	ldp	x29, x30, [sp, #32]
   15c98:	add	sp, sp, #0x50
   15c9c:	ret
   15ca0:	sub	sp, sp, #0x50
   15ca4:	stp	x29, x30, [sp, #32]
   15ca8:	stp	x22, x21, [sp, #48]
   15cac:	stp	x20, x19, [sp, #64]
   15cb0:	add	x29, sp, #0x20
   15cb4:	mov	x8, x1
   15cb8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15cbc:	mov	x19, x0
   15cc0:	add	x1, x1, #0xd4c
   15cc4:	sub	x2, x29, #0x8
   15cc8:	add	x3, sp, #0x10
   15ccc:	mov	x0, x8
   15cd0:	str	wzr, [sp, #12]
   15cd4:	bl	6820 <PyArg_ParseTuple@plt>
   15cd8:	cbz	w0, 15ebc <PyInit__decimal@@Base+0xf408>
   15cdc:	ldur	x20, [x29, #-8]
   15ce0:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   15ce4:	add	x22, x22, #0x318
   15ce8:	ldr	x0, [x20, #8]
   15cec:	cmp	x0, x22
   15cf0:	b.eq	15d04 <PyInit__decimal@@Base+0xf250>  // b.none
   15cf4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15cf8:	add	x1, x1, #0x318
   15cfc:	bl	6900 <PyType_IsSubtype@plt>
   15d00:	cbz	w0, 15e10 <PyInit__decimal@@Base+0xf35c>
   15d04:	ldr	x8, [x20]
   15d08:	add	x8, x8, #0x1
   15d0c:	str	x8, [x20]
   15d10:	ldr	x21, [sp, #16]
   15d14:	ldr	x0, [x21, #8]
   15d18:	cmp	x0, x22
   15d1c:	b.eq	15d30 <PyInit__decimal@@Base+0xf27c>  // b.none
   15d20:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15d24:	add	x1, x1, #0x318
   15d28:	bl	6900 <PyType_IsSubtype@plt>
   15d2c:	cbz	w0, 15e3c <PyInit__decimal@@Base+0xf388>
   15d30:	ldr	x8, [x21]
   15d34:	add	x8, x8, #0x1
   15d38:	str	x8, [x21]
   15d3c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15d40:	add	x0, x0, #0x318
   15d44:	bl	6890 <_PyObject_New@plt>
   15d48:	cbz	x0, 15de0 <PyInit__decimal@@Base+0xf32c>
   15d4c:	mov	w8, #0x30                  	// #48
   15d50:	mov	x22, x0
   15d54:	strb	w8, [x0, #24]!
   15d58:	mov	x9, #0xffffffffffffffff    	// #-1
   15d5c:	mov	w10, #0x4                   	// #4
   15d60:	add	x1, x20, #0x18
   15d64:	add	x2, x21, #0x18
   15d68:	add	x8, x0, #0x30
   15d6c:	add	x3, x19, #0x10
   15d70:	add	x4, sp, #0xc
   15d74:	stur	x9, [x0, #-8]
   15d78:	stp	xzr, xzr, [x0, #8]
   15d7c:	stp	xzr, x10, [x0, #24]
   15d80:	str	x8, [x0, #40]
   15d84:	bl	2e1f0 <PyInit__decimal@@Base+0x2773c>
   15d88:	ldr	x8, [x20]
   15d8c:	subs	x8, x8, #0x1
   15d90:	str	x8, [x20]
   15d94:	b.ne	15da0 <PyInit__decimal@@Base+0xf2ec>  // b.any
   15d98:	mov	x0, x20
   15d9c:	bl	6510 <_Py_Dealloc@plt>
   15da0:	ldr	x8, [x21]
   15da4:	subs	x8, x8, #0x1
   15da8:	str	x8, [x21]
   15dac:	b.ne	15db8 <PyInit__decimal@@Base+0xf304>  // b.any
   15db0:	mov	x0, x21
   15db4:	bl	6510 <_Py_Dealloc@plt>
   15db8:	ldr	w1, [sp, #12]
   15dbc:	mov	x0, x19
   15dc0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   15dc4:	cbz	w0, 15ec0 <PyInit__decimal@@Base+0xf40c>
   15dc8:	ldr	x8, [x22]
   15dcc:	subs	x8, x8, #0x1
   15dd0:	str	x8, [x22]
   15dd4:	b.ne	15ebc <PyInit__decimal@@Base+0xf408>  // b.any
   15dd8:	mov	x0, x22
   15ddc:	b	15eb8 <PyInit__decimal@@Base+0xf404>
   15de0:	ldr	x8, [x20]
   15de4:	subs	x8, x8, #0x1
   15de8:	str	x8, [x20]
   15dec:	b.ne	15df8 <PyInit__decimal@@Base+0xf344>  // b.any
   15df0:	mov	x0, x20
   15df4:	bl	6510 <_Py_Dealloc@plt>
   15df8:	ldr	x8, [x21]
   15dfc:	subs	x8, x8, #0x1
   15e00:	str	x8, [x21]
   15e04:	b.ne	15ebc <PyInit__decimal@@Base+0xf408>  // b.any
   15e08:	mov	x0, x21
   15e0c:	b	15eb8 <PyInit__decimal@@Base+0xf404>
   15e10:	ldr	x8, [x20, #8]
   15e14:	ldrb	w9, [x8, #171]
   15e18:	tbnz	w9, #0, 15e68 <PyInit__decimal@@Base+0xf3b4>
   15e1c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   15e20:	ldr	x9, [x9, #3936]
   15e24:	ldr	x2, [x8, #24]
   15e28:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15e2c:	add	x1, x1, #0x263
   15e30:	ldr	x0, [x9]
   15e34:	bl	6950 <PyErr_Format@plt>
   15e38:	b	15ebc <PyInit__decimal@@Base+0xf408>
   15e3c:	ldr	x8, [x21, #8]
   15e40:	ldrb	w9, [x8, #171]
   15e44:	tbnz	w9, #0, 15e88 <PyInit__decimal@@Base+0xf3d4>
   15e48:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   15e4c:	ldr	x9, [x9, #3936]
   15e50:	ldr	x2, [x8, #24]
   15e54:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15e58:	add	x1, x1, #0x263
   15e5c:	ldr	x0, [x9]
   15e60:	bl	6950 <PyErr_Format@plt>
   15e64:	b	15ea4 <PyInit__decimal@@Base+0xf3f0>
   15e68:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15e6c:	add	x0, x0, #0x318
   15e70:	mov	x1, x20
   15e74:	mov	x2, x19
   15e78:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   15e7c:	mov	x20, x0
   15e80:	cbnz	x0, 15d10 <PyInit__decimal@@Base+0xf25c>
   15e84:	b	15ebc <PyInit__decimal@@Base+0xf408>
   15e88:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15e8c:	add	x0, x0, #0x318
   15e90:	mov	x1, x21
   15e94:	mov	x2, x19
   15e98:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   15e9c:	mov	x21, x0
   15ea0:	cbnz	x0, 15d3c <PyInit__decimal@@Base+0xf288>
   15ea4:	ldr	x8, [x20]
   15ea8:	subs	x8, x8, #0x1
   15eac:	str	x8, [x20]
   15eb0:	b.ne	15ebc <PyInit__decimal@@Base+0xf408>  // b.any
   15eb4:	mov	x0, x20
   15eb8:	bl	6510 <_Py_Dealloc@plt>
   15ebc:	mov	x22, xzr
   15ec0:	mov	x0, x22
   15ec4:	ldp	x20, x19, [sp, #64]
   15ec8:	ldp	x22, x21, [sp, #48]
   15ecc:	ldp	x29, x30, [sp, #32]
   15ed0:	add	sp, sp, #0x50
   15ed4:	ret
   15ed8:	sub	sp, sp, #0x50
   15edc:	stp	x29, x30, [sp, #32]
   15ee0:	stp	x22, x21, [sp, #48]
   15ee4:	stp	x20, x19, [sp, #64]
   15ee8:	add	x29, sp, #0x20
   15eec:	mov	x8, x1
   15ef0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   15ef4:	mov	x19, x0
   15ef8:	add	x1, x1, #0xd4c
   15efc:	sub	x2, x29, #0x8
   15f00:	add	x3, sp, #0x10
   15f04:	mov	x0, x8
   15f08:	str	wzr, [sp, #12]
   15f0c:	bl	6820 <PyArg_ParseTuple@plt>
   15f10:	cbz	w0, 160f4 <PyInit__decimal@@Base+0xf640>
   15f14:	ldur	x20, [x29, #-8]
   15f18:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   15f1c:	add	x22, x22, #0x318
   15f20:	ldr	x0, [x20, #8]
   15f24:	cmp	x0, x22
   15f28:	b.eq	15f3c <PyInit__decimal@@Base+0xf488>  // b.none
   15f2c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15f30:	add	x1, x1, #0x318
   15f34:	bl	6900 <PyType_IsSubtype@plt>
   15f38:	cbz	w0, 16048 <PyInit__decimal@@Base+0xf594>
   15f3c:	ldr	x8, [x20]
   15f40:	add	x8, x8, #0x1
   15f44:	str	x8, [x20]
   15f48:	ldr	x21, [sp, #16]
   15f4c:	ldr	x0, [x21, #8]
   15f50:	cmp	x0, x22
   15f54:	b.eq	15f68 <PyInit__decimal@@Base+0xf4b4>  // b.none
   15f58:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   15f5c:	add	x1, x1, #0x318
   15f60:	bl	6900 <PyType_IsSubtype@plt>
   15f64:	cbz	w0, 16074 <PyInit__decimal@@Base+0xf5c0>
   15f68:	ldr	x8, [x21]
   15f6c:	add	x8, x8, #0x1
   15f70:	str	x8, [x21]
   15f74:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   15f78:	add	x0, x0, #0x318
   15f7c:	bl	6890 <_PyObject_New@plt>
   15f80:	cbz	x0, 16018 <PyInit__decimal@@Base+0xf564>
   15f84:	mov	w8, #0x30                  	// #48
   15f88:	mov	x22, x0
   15f8c:	strb	w8, [x0, #24]!
   15f90:	mov	x9, #0xffffffffffffffff    	// #-1
   15f94:	mov	w10, #0x4                   	// #4
   15f98:	add	x1, x20, #0x18
   15f9c:	add	x2, x21, #0x18
   15fa0:	add	x8, x0, #0x30
   15fa4:	add	x3, x19, #0x10
   15fa8:	add	x4, sp, #0xc
   15fac:	stur	x9, [x0, #-8]
   15fb0:	stp	xzr, xzr, [x0, #8]
   15fb4:	stp	xzr, x10, [x0, #24]
   15fb8:	str	x8, [x0, #40]
   15fbc:	bl	2e4c4 <PyInit__decimal@@Base+0x27a10>
   15fc0:	ldr	x8, [x20]
   15fc4:	subs	x8, x8, #0x1
   15fc8:	str	x8, [x20]
   15fcc:	b.ne	15fd8 <PyInit__decimal@@Base+0xf524>  // b.any
   15fd0:	mov	x0, x20
   15fd4:	bl	6510 <_Py_Dealloc@plt>
   15fd8:	ldr	x8, [x21]
   15fdc:	subs	x8, x8, #0x1
   15fe0:	str	x8, [x21]
   15fe4:	b.ne	15ff0 <PyInit__decimal@@Base+0xf53c>  // b.any
   15fe8:	mov	x0, x21
   15fec:	bl	6510 <_Py_Dealloc@plt>
   15ff0:	ldr	w1, [sp, #12]
   15ff4:	mov	x0, x19
   15ff8:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   15ffc:	cbz	w0, 160f8 <PyInit__decimal@@Base+0xf644>
   16000:	ldr	x8, [x22]
   16004:	subs	x8, x8, #0x1
   16008:	str	x8, [x22]
   1600c:	b.ne	160f4 <PyInit__decimal@@Base+0xf640>  // b.any
   16010:	mov	x0, x22
   16014:	b	160f0 <PyInit__decimal@@Base+0xf63c>
   16018:	ldr	x8, [x20]
   1601c:	subs	x8, x8, #0x1
   16020:	str	x8, [x20]
   16024:	b.ne	16030 <PyInit__decimal@@Base+0xf57c>  // b.any
   16028:	mov	x0, x20
   1602c:	bl	6510 <_Py_Dealloc@plt>
   16030:	ldr	x8, [x21]
   16034:	subs	x8, x8, #0x1
   16038:	str	x8, [x21]
   1603c:	b.ne	160f4 <PyInit__decimal@@Base+0xf640>  // b.any
   16040:	mov	x0, x21
   16044:	b	160f0 <PyInit__decimal@@Base+0xf63c>
   16048:	ldr	x8, [x20, #8]
   1604c:	ldrb	w9, [x8, #171]
   16050:	tbnz	w9, #0, 160a0 <PyInit__decimal@@Base+0xf5ec>
   16054:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16058:	ldr	x9, [x9, #3936]
   1605c:	ldr	x2, [x8, #24]
   16060:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16064:	add	x1, x1, #0x263
   16068:	ldr	x0, [x9]
   1606c:	bl	6950 <PyErr_Format@plt>
   16070:	b	160f4 <PyInit__decimal@@Base+0xf640>
   16074:	ldr	x8, [x21, #8]
   16078:	ldrb	w9, [x8, #171]
   1607c:	tbnz	w9, #0, 160c0 <PyInit__decimal@@Base+0xf60c>
   16080:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16084:	ldr	x9, [x9, #3936]
   16088:	ldr	x2, [x8, #24]
   1608c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16090:	add	x1, x1, #0x263
   16094:	ldr	x0, [x9]
   16098:	bl	6950 <PyErr_Format@plt>
   1609c:	b	160dc <PyInit__decimal@@Base+0xf628>
   160a0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   160a4:	add	x0, x0, #0x318
   160a8:	mov	x1, x20
   160ac:	mov	x2, x19
   160b0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   160b4:	mov	x20, x0
   160b8:	cbnz	x0, 15f48 <PyInit__decimal@@Base+0xf494>
   160bc:	b	160f4 <PyInit__decimal@@Base+0xf640>
   160c0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   160c4:	add	x0, x0, #0x318
   160c8:	mov	x1, x21
   160cc:	mov	x2, x19
   160d0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   160d4:	mov	x21, x0
   160d8:	cbnz	x0, 15f74 <PyInit__decimal@@Base+0xf4c0>
   160dc:	ldr	x8, [x20]
   160e0:	subs	x8, x8, #0x1
   160e4:	str	x8, [x20]
   160e8:	b.ne	160f4 <PyInit__decimal@@Base+0xf640>  // b.any
   160ec:	mov	x0, x20
   160f0:	bl	6510 <_Py_Dealloc@plt>
   160f4:	mov	x22, xzr
   160f8:	mov	x0, x22
   160fc:	ldp	x20, x19, [sp, #64]
   16100:	ldp	x22, x21, [sp, #48]
   16104:	ldp	x29, x30, [sp, #32]
   16108:	add	sp, sp, #0x50
   1610c:	ret
   16110:	sub	sp, sp, #0x50
   16114:	stp	x29, x30, [sp, #32]
   16118:	stp	x22, x21, [sp, #48]
   1611c:	stp	x20, x19, [sp, #64]
   16120:	add	x29, sp, #0x20
   16124:	mov	x8, x1
   16128:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1612c:	mov	x19, x0
   16130:	add	x1, x1, #0xd4c
   16134:	sub	x2, x29, #0x8
   16138:	add	x3, sp, #0x10
   1613c:	mov	x0, x8
   16140:	str	wzr, [sp, #12]
   16144:	bl	6820 <PyArg_ParseTuple@plt>
   16148:	cbz	w0, 1632c <PyInit__decimal@@Base+0xf878>
   1614c:	ldur	x20, [x29, #-8]
   16150:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   16154:	add	x22, x22, #0x318
   16158:	ldr	x0, [x20, #8]
   1615c:	cmp	x0, x22
   16160:	b.eq	16174 <PyInit__decimal@@Base+0xf6c0>  // b.none
   16164:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16168:	add	x1, x1, #0x318
   1616c:	bl	6900 <PyType_IsSubtype@plt>
   16170:	cbz	w0, 16280 <PyInit__decimal@@Base+0xf7cc>
   16174:	ldr	x8, [x20]
   16178:	add	x8, x8, #0x1
   1617c:	str	x8, [x20]
   16180:	ldr	x21, [sp, #16]
   16184:	ldr	x0, [x21, #8]
   16188:	cmp	x0, x22
   1618c:	b.eq	161a0 <PyInit__decimal@@Base+0xf6ec>  // b.none
   16190:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16194:	add	x1, x1, #0x318
   16198:	bl	6900 <PyType_IsSubtype@plt>
   1619c:	cbz	w0, 162ac <PyInit__decimal@@Base+0xf7f8>
   161a0:	ldr	x8, [x21]
   161a4:	add	x8, x8, #0x1
   161a8:	str	x8, [x21]
   161ac:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   161b0:	add	x0, x0, #0x318
   161b4:	bl	6890 <_PyObject_New@plt>
   161b8:	cbz	x0, 16250 <PyInit__decimal@@Base+0xf79c>
   161bc:	mov	w8, #0x30                  	// #48
   161c0:	mov	x22, x0
   161c4:	strb	w8, [x0, #24]!
   161c8:	mov	x9, #0xffffffffffffffff    	// #-1
   161cc:	mov	w10, #0x4                   	// #4
   161d0:	add	x1, x20, #0x18
   161d4:	add	x2, x21, #0x18
   161d8:	add	x8, x0, #0x30
   161dc:	add	x3, x19, #0x10
   161e0:	add	x4, sp, #0xc
   161e4:	stur	x9, [x0, #-8]
   161e8:	stp	xzr, xzr, [x0, #8]
   161ec:	stp	xzr, x10, [x0, #24]
   161f0:	str	x8, [x0, #40]
   161f4:	bl	2c080 <PyInit__decimal@@Base+0x255cc>
   161f8:	ldr	x8, [x20]
   161fc:	subs	x8, x8, #0x1
   16200:	str	x8, [x20]
   16204:	b.ne	16210 <PyInit__decimal@@Base+0xf75c>  // b.any
   16208:	mov	x0, x20
   1620c:	bl	6510 <_Py_Dealloc@plt>
   16210:	ldr	x8, [x21]
   16214:	subs	x8, x8, #0x1
   16218:	str	x8, [x21]
   1621c:	b.ne	16228 <PyInit__decimal@@Base+0xf774>  // b.any
   16220:	mov	x0, x21
   16224:	bl	6510 <_Py_Dealloc@plt>
   16228:	ldr	w1, [sp, #12]
   1622c:	mov	x0, x19
   16230:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   16234:	cbz	w0, 16330 <PyInit__decimal@@Base+0xf87c>
   16238:	ldr	x8, [x22]
   1623c:	subs	x8, x8, #0x1
   16240:	str	x8, [x22]
   16244:	b.ne	1632c <PyInit__decimal@@Base+0xf878>  // b.any
   16248:	mov	x0, x22
   1624c:	b	16328 <PyInit__decimal@@Base+0xf874>
   16250:	ldr	x8, [x20]
   16254:	subs	x8, x8, #0x1
   16258:	str	x8, [x20]
   1625c:	b.ne	16268 <PyInit__decimal@@Base+0xf7b4>  // b.any
   16260:	mov	x0, x20
   16264:	bl	6510 <_Py_Dealloc@plt>
   16268:	ldr	x8, [x21]
   1626c:	subs	x8, x8, #0x1
   16270:	str	x8, [x21]
   16274:	b.ne	1632c <PyInit__decimal@@Base+0xf878>  // b.any
   16278:	mov	x0, x21
   1627c:	b	16328 <PyInit__decimal@@Base+0xf874>
   16280:	ldr	x8, [x20, #8]
   16284:	ldrb	w9, [x8, #171]
   16288:	tbnz	w9, #0, 162d8 <PyInit__decimal@@Base+0xf824>
   1628c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16290:	ldr	x9, [x9, #3936]
   16294:	ldr	x2, [x8, #24]
   16298:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1629c:	add	x1, x1, #0x263
   162a0:	ldr	x0, [x9]
   162a4:	bl	6950 <PyErr_Format@plt>
   162a8:	b	1632c <PyInit__decimal@@Base+0xf878>
   162ac:	ldr	x8, [x21, #8]
   162b0:	ldrb	w9, [x8, #171]
   162b4:	tbnz	w9, #0, 162f8 <PyInit__decimal@@Base+0xf844>
   162b8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   162bc:	ldr	x9, [x9, #3936]
   162c0:	ldr	x2, [x8, #24]
   162c4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   162c8:	add	x1, x1, #0x263
   162cc:	ldr	x0, [x9]
   162d0:	bl	6950 <PyErr_Format@plt>
   162d4:	b	16314 <PyInit__decimal@@Base+0xf860>
   162d8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   162dc:	add	x0, x0, #0x318
   162e0:	mov	x1, x20
   162e4:	mov	x2, x19
   162e8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   162ec:	mov	x20, x0
   162f0:	cbnz	x0, 16180 <PyInit__decimal@@Base+0xf6cc>
   162f4:	b	1632c <PyInit__decimal@@Base+0xf878>
   162f8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   162fc:	add	x0, x0, #0x318
   16300:	mov	x1, x21
   16304:	mov	x2, x19
   16308:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1630c:	mov	x21, x0
   16310:	cbnz	x0, 161ac <PyInit__decimal@@Base+0xf6f8>
   16314:	ldr	x8, [x20]
   16318:	subs	x8, x8, #0x1
   1631c:	str	x8, [x20]
   16320:	b.ne	1632c <PyInit__decimal@@Base+0xf878>  // b.any
   16324:	mov	x0, x20
   16328:	bl	6510 <_Py_Dealloc@plt>
   1632c:	mov	x22, xzr
   16330:	mov	x0, x22
   16334:	ldp	x20, x19, [sp, #64]
   16338:	ldp	x22, x21, [sp, #48]
   1633c:	ldp	x29, x30, [sp, #32]
   16340:	add	sp, sp, #0x50
   16344:	ret
   16348:	sub	sp, sp, #0x50
   1634c:	stp	x29, x30, [sp, #32]
   16350:	stp	x22, x21, [sp, #48]
   16354:	stp	x20, x19, [sp, #64]
   16358:	add	x29, sp, #0x20
   1635c:	mov	x8, x1
   16360:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16364:	mov	x19, x0
   16368:	add	x1, x1, #0xd4c
   1636c:	sub	x2, x29, #0x8
   16370:	add	x3, sp, #0x10
   16374:	mov	x0, x8
   16378:	str	wzr, [sp, #12]
   1637c:	bl	6820 <PyArg_ParseTuple@plt>
   16380:	cbz	w0, 16564 <PyInit__decimal@@Base+0xfab0>
   16384:	ldur	x20, [x29, #-8]
   16388:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   1638c:	add	x22, x22, #0x318
   16390:	ldr	x0, [x20, #8]
   16394:	cmp	x0, x22
   16398:	b.eq	163ac <PyInit__decimal@@Base+0xf8f8>  // b.none
   1639c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   163a0:	add	x1, x1, #0x318
   163a4:	bl	6900 <PyType_IsSubtype@plt>
   163a8:	cbz	w0, 164b8 <PyInit__decimal@@Base+0xfa04>
   163ac:	ldr	x8, [x20]
   163b0:	add	x8, x8, #0x1
   163b4:	str	x8, [x20]
   163b8:	ldr	x21, [sp, #16]
   163bc:	ldr	x0, [x21, #8]
   163c0:	cmp	x0, x22
   163c4:	b.eq	163d8 <PyInit__decimal@@Base+0xf924>  // b.none
   163c8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   163cc:	add	x1, x1, #0x318
   163d0:	bl	6900 <PyType_IsSubtype@plt>
   163d4:	cbz	w0, 164e4 <PyInit__decimal@@Base+0xfa30>
   163d8:	ldr	x8, [x21]
   163dc:	add	x8, x8, #0x1
   163e0:	str	x8, [x21]
   163e4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   163e8:	add	x0, x0, #0x318
   163ec:	bl	6890 <_PyObject_New@plt>
   163f0:	cbz	x0, 16488 <PyInit__decimal@@Base+0xf9d4>
   163f4:	mov	w8, #0x30                  	// #48
   163f8:	mov	x22, x0
   163fc:	strb	w8, [x0, #24]!
   16400:	mov	x9, #0xffffffffffffffff    	// #-1
   16404:	mov	w10, #0x4                   	// #4
   16408:	add	x1, x20, #0x18
   1640c:	add	x2, x21, #0x18
   16410:	add	x8, x0, #0x30
   16414:	add	x3, x19, #0x10
   16418:	add	x4, sp, #0xc
   1641c:	stur	x9, [x0, #-8]
   16420:	stp	xzr, xzr, [x0, #8]
   16424:	stp	xzr, x10, [x0, #24]
   16428:	str	x8, [x0, #40]
   1642c:	bl	2ee3c <PyInit__decimal@@Base+0x28388>
   16430:	ldr	x8, [x20]
   16434:	subs	x8, x8, #0x1
   16438:	str	x8, [x20]
   1643c:	b.ne	16448 <PyInit__decimal@@Base+0xf994>  // b.any
   16440:	mov	x0, x20
   16444:	bl	6510 <_Py_Dealloc@plt>
   16448:	ldr	x8, [x21]
   1644c:	subs	x8, x8, #0x1
   16450:	str	x8, [x21]
   16454:	b.ne	16460 <PyInit__decimal@@Base+0xf9ac>  // b.any
   16458:	mov	x0, x21
   1645c:	bl	6510 <_Py_Dealloc@plt>
   16460:	ldr	w1, [sp, #12]
   16464:	mov	x0, x19
   16468:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1646c:	cbz	w0, 16568 <PyInit__decimal@@Base+0xfab4>
   16470:	ldr	x8, [x22]
   16474:	subs	x8, x8, #0x1
   16478:	str	x8, [x22]
   1647c:	b.ne	16564 <PyInit__decimal@@Base+0xfab0>  // b.any
   16480:	mov	x0, x22
   16484:	b	16560 <PyInit__decimal@@Base+0xfaac>
   16488:	ldr	x8, [x20]
   1648c:	subs	x8, x8, #0x1
   16490:	str	x8, [x20]
   16494:	b.ne	164a0 <PyInit__decimal@@Base+0xf9ec>  // b.any
   16498:	mov	x0, x20
   1649c:	bl	6510 <_Py_Dealloc@plt>
   164a0:	ldr	x8, [x21]
   164a4:	subs	x8, x8, #0x1
   164a8:	str	x8, [x21]
   164ac:	b.ne	16564 <PyInit__decimal@@Base+0xfab0>  // b.any
   164b0:	mov	x0, x21
   164b4:	b	16560 <PyInit__decimal@@Base+0xfaac>
   164b8:	ldr	x8, [x20, #8]
   164bc:	ldrb	w9, [x8, #171]
   164c0:	tbnz	w9, #0, 16510 <PyInit__decimal@@Base+0xfa5c>
   164c4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   164c8:	ldr	x9, [x9, #3936]
   164cc:	ldr	x2, [x8, #24]
   164d0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   164d4:	add	x1, x1, #0x263
   164d8:	ldr	x0, [x9]
   164dc:	bl	6950 <PyErr_Format@plt>
   164e0:	b	16564 <PyInit__decimal@@Base+0xfab0>
   164e4:	ldr	x8, [x21, #8]
   164e8:	ldrb	w9, [x8, #171]
   164ec:	tbnz	w9, #0, 16530 <PyInit__decimal@@Base+0xfa7c>
   164f0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   164f4:	ldr	x9, [x9, #3936]
   164f8:	ldr	x2, [x8, #24]
   164fc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16500:	add	x1, x1, #0x263
   16504:	ldr	x0, [x9]
   16508:	bl	6950 <PyErr_Format@plt>
   1650c:	b	1654c <PyInit__decimal@@Base+0xfa98>
   16510:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16514:	add	x0, x0, #0x318
   16518:	mov	x1, x20
   1651c:	mov	x2, x19
   16520:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   16524:	mov	x20, x0
   16528:	cbnz	x0, 163b8 <PyInit__decimal@@Base+0xf904>
   1652c:	b	16564 <PyInit__decimal@@Base+0xfab0>
   16530:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16534:	add	x0, x0, #0x318
   16538:	mov	x1, x21
   1653c:	mov	x2, x19
   16540:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   16544:	mov	x21, x0
   16548:	cbnz	x0, 163e4 <PyInit__decimal@@Base+0xf930>
   1654c:	ldr	x8, [x20]
   16550:	subs	x8, x8, #0x1
   16554:	str	x8, [x20]
   16558:	b.ne	16564 <PyInit__decimal@@Base+0xfab0>  // b.any
   1655c:	mov	x0, x20
   16560:	bl	6510 <_Py_Dealloc@plt>
   16564:	mov	x22, xzr
   16568:	mov	x0, x22
   1656c:	ldp	x20, x19, [sp, #64]
   16570:	ldp	x22, x21, [sp, #48]
   16574:	ldp	x29, x30, [sp, #32]
   16578:	add	sp, sp, #0x50
   1657c:	ret
   16580:	sub	sp, sp, #0x50
   16584:	stp	x29, x30, [sp, #32]
   16588:	stp	x22, x21, [sp, #48]
   1658c:	stp	x20, x19, [sp, #64]
   16590:	add	x29, sp, #0x20
   16594:	mov	x8, x1
   16598:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1659c:	mov	x19, x0
   165a0:	add	x1, x1, #0xd4c
   165a4:	sub	x2, x29, #0x8
   165a8:	add	x3, sp, #0x10
   165ac:	mov	x0, x8
   165b0:	str	wzr, [sp, #12]
   165b4:	bl	6820 <PyArg_ParseTuple@plt>
   165b8:	cbz	w0, 1679c <PyInit__decimal@@Base+0xfce8>
   165bc:	ldur	x20, [x29, #-8]
   165c0:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   165c4:	add	x22, x22, #0x318
   165c8:	ldr	x0, [x20, #8]
   165cc:	cmp	x0, x22
   165d0:	b.eq	165e4 <PyInit__decimal@@Base+0xfb30>  // b.none
   165d4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   165d8:	add	x1, x1, #0x318
   165dc:	bl	6900 <PyType_IsSubtype@plt>
   165e0:	cbz	w0, 166f0 <PyInit__decimal@@Base+0xfc3c>
   165e4:	ldr	x8, [x20]
   165e8:	add	x8, x8, #0x1
   165ec:	str	x8, [x20]
   165f0:	ldr	x21, [sp, #16]
   165f4:	ldr	x0, [x21, #8]
   165f8:	cmp	x0, x22
   165fc:	b.eq	16610 <PyInit__decimal@@Base+0xfb5c>  // b.none
   16600:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16604:	add	x1, x1, #0x318
   16608:	bl	6900 <PyType_IsSubtype@plt>
   1660c:	cbz	w0, 1671c <PyInit__decimal@@Base+0xfc68>
   16610:	ldr	x8, [x21]
   16614:	add	x8, x8, #0x1
   16618:	str	x8, [x21]
   1661c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16620:	add	x0, x0, #0x318
   16624:	bl	6890 <_PyObject_New@plt>
   16628:	cbz	x0, 166c0 <PyInit__decimal@@Base+0xfc0c>
   1662c:	mov	w8, #0x30                  	// #48
   16630:	mov	x22, x0
   16634:	strb	w8, [x0, #24]!
   16638:	mov	x9, #0xffffffffffffffff    	// #-1
   1663c:	mov	w10, #0x4                   	// #4
   16640:	add	x1, x20, #0x18
   16644:	add	x2, x21, #0x18
   16648:	add	x8, x0, #0x30
   1664c:	add	x3, x19, #0x10
   16650:	add	x4, sp, #0xc
   16654:	stur	x9, [x0, #-8]
   16658:	stp	xzr, xzr, [x0, #8]
   1665c:	stp	xzr, x10, [x0, #24]
   16660:	str	x8, [x0, #40]
   16664:	bl	3153c <PyInit__decimal@@Base+0x2aa88>
   16668:	ldr	x8, [x20]
   1666c:	subs	x8, x8, #0x1
   16670:	str	x8, [x20]
   16674:	b.ne	16680 <PyInit__decimal@@Base+0xfbcc>  // b.any
   16678:	mov	x0, x20
   1667c:	bl	6510 <_Py_Dealloc@plt>
   16680:	ldr	x8, [x21]
   16684:	subs	x8, x8, #0x1
   16688:	str	x8, [x21]
   1668c:	b.ne	16698 <PyInit__decimal@@Base+0xfbe4>  // b.any
   16690:	mov	x0, x21
   16694:	bl	6510 <_Py_Dealloc@plt>
   16698:	ldr	w1, [sp, #12]
   1669c:	mov	x0, x19
   166a0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   166a4:	cbz	w0, 167a0 <PyInit__decimal@@Base+0xfcec>
   166a8:	ldr	x8, [x22]
   166ac:	subs	x8, x8, #0x1
   166b0:	str	x8, [x22]
   166b4:	b.ne	1679c <PyInit__decimal@@Base+0xfce8>  // b.any
   166b8:	mov	x0, x22
   166bc:	b	16798 <PyInit__decimal@@Base+0xfce4>
   166c0:	ldr	x8, [x20]
   166c4:	subs	x8, x8, #0x1
   166c8:	str	x8, [x20]
   166cc:	b.ne	166d8 <PyInit__decimal@@Base+0xfc24>  // b.any
   166d0:	mov	x0, x20
   166d4:	bl	6510 <_Py_Dealloc@plt>
   166d8:	ldr	x8, [x21]
   166dc:	subs	x8, x8, #0x1
   166e0:	str	x8, [x21]
   166e4:	b.ne	1679c <PyInit__decimal@@Base+0xfce8>  // b.any
   166e8:	mov	x0, x21
   166ec:	b	16798 <PyInit__decimal@@Base+0xfce4>
   166f0:	ldr	x8, [x20, #8]
   166f4:	ldrb	w9, [x8, #171]
   166f8:	tbnz	w9, #0, 16748 <PyInit__decimal@@Base+0xfc94>
   166fc:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16700:	ldr	x9, [x9, #3936]
   16704:	ldr	x2, [x8, #24]
   16708:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1670c:	add	x1, x1, #0x263
   16710:	ldr	x0, [x9]
   16714:	bl	6950 <PyErr_Format@plt>
   16718:	b	1679c <PyInit__decimal@@Base+0xfce8>
   1671c:	ldr	x8, [x21, #8]
   16720:	ldrb	w9, [x8, #171]
   16724:	tbnz	w9, #0, 16768 <PyInit__decimal@@Base+0xfcb4>
   16728:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1672c:	ldr	x9, [x9, #3936]
   16730:	ldr	x2, [x8, #24]
   16734:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16738:	add	x1, x1, #0x263
   1673c:	ldr	x0, [x9]
   16740:	bl	6950 <PyErr_Format@plt>
   16744:	b	16784 <PyInit__decimal@@Base+0xfcd0>
   16748:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1674c:	add	x0, x0, #0x318
   16750:	mov	x1, x20
   16754:	mov	x2, x19
   16758:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1675c:	mov	x20, x0
   16760:	cbnz	x0, 165f0 <PyInit__decimal@@Base+0xfb3c>
   16764:	b	1679c <PyInit__decimal@@Base+0xfce8>
   16768:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1676c:	add	x0, x0, #0x318
   16770:	mov	x1, x21
   16774:	mov	x2, x19
   16778:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1677c:	mov	x21, x0
   16780:	cbnz	x0, 1661c <PyInit__decimal@@Base+0xfb68>
   16784:	ldr	x8, [x20]
   16788:	subs	x8, x8, #0x1
   1678c:	str	x8, [x20]
   16790:	b.ne	1679c <PyInit__decimal@@Base+0xfce8>  // b.any
   16794:	mov	x0, x20
   16798:	bl	6510 <_Py_Dealloc@plt>
   1679c:	mov	x22, xzr
   167a0:	mov	x0, x22
   167a4:	ldp	x20, x19, [sp, #64]
   167a8:	ldp	x22, x21, [sp, #48]
   167ac:	ldp	x29, x30, [sp, #32]
   167b0:	add	sp, sp, #0x50
   167b4:	ret
   167b8:	sub	sp, sp, #0x50
   167bc:	stp	x29, x30, [sp, #32]
   167c0:	stp	x22, x21, [sp, #48]
   167c4:	stp	x20, x19, [sp, #64]
   167c8:	add	x29, sp, #0x20
   167cc:	mov	x8, x1
   167d0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   167d4:	mov	x19, x0
   167d8:	add	x1, x1, #0xd4c
   167dc:	sub	x2, x29, #0x8
   167e0:	add	x3, sp, #0x10
   167e4:	mov	x0, x8
   167e8:	str	wzr, [sp, #12]
   167ec:	bl	6820 <PyArg_ParseTuple@plt>
   167f0:	cbz	w0, 169d4 <PyInit__decimal@@Base+0xff20>
   167f4:	ldur	x20, [x29, #-8]
   167f8:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   167fc:	add	x22, x22, #0x318
   16800:	ldr	x0, [x20, #8]
   16804:	cmp	x0, x22
   16808:	b.eq	1681c <PyInit__decimal@@Base+0xfd68>  // b.none
   1680c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16810:	add	x1, x1, #0x318
   16814:	bl	6900 <PyType_IsSubtype@plt>
   16818:	cbz	w0, 16928 <PyInit__decimal@@Base+0xfe74>
   1681c:	ldr	x8, [x20]
   16820:	add	x8, x8, #0x1
   16824:	str	x8, [x20]
   16828:	ldr	x21, [sp, #16]
   1682c:	ldr	x0, [x21, #8]
   16830:	cmp	x0, x22
   16834:	b.eq	16848 <PyInit__decimal@@Base+0xfd94>  // b.none
   16838:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1683c:	add	x1, x1, #0x318
   16840:	bl	6900 <PyType_IsSubtype@plt>
   16844:	cbz	w0, 16954 <PyInit__decimal@@Base+0xfea0>
   16848:	ldr	x8, [x21]
   1684c:	add	x8, x8, #0x1
   16850:	str	x8, [x21]
   16854:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16858:	add	x0, x0, #0x318
   1685c:	bl	6890 <_PyObject_New@plt>
   16860:	cbz	x0, 168f8 <PyInit__decimal@@Base+0xfe44>
   16864:	mov	w8, #0x30                  	// #48
   16868:	mov	x22, x0
   1686c:	strb	w8, [x0, #24]!
   16870:	mov	x9, #0xffffffffffffffff    	// #-1
   16874:	mov	w10, #0x4                   	// #4
   16878:	add	x1, x20, #0x18
   1687c:	add	x2, x21, #0x18
   16880:	add	x8, x0, #0x30
   16884:	add	x3, x19, #0x10
   16888:	add	x4, sp, #0xc
   1688c:	stur	x9, [x0, #-8]
   16890:	stp	xzr, xzr, [x0, #8]
   16894:	stp	xzr, x10, [x0, #24]
   16898:	str	x8, [x0, #40]
   1689c:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
   168a0:	ldr	x8, [x20]
   168a4:	subs	x8, x8, #0x1
   168a8:	str	x8, [x20]
   168ac:	b.ne	168b8 <PyInit__decimal@@Base+0xfe04>  // b.any
   168b0:	mov	x0, x20
   168b4:	bl	6510 <_Py_Dealloc@plt>
   168b8:	ldr	x8, [x21]
   168bc:	subs	x8, x8, #0x1
   168c0:	str	x8, [x21]
   168c4:	b.ne	168d0 <PyInit__decimal@@Base+0xfe1c>  // b.any
   168c8:	mov	x0, x21
   168cc:	bl	6510 <_Py_Dealloc@plt>
   168d0:	ldr	w1, [sp, #12]
   168d4:	mov	x0, x19
   168d8:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   168dc:	cbz	w0, 169d8 <PyInit__decimal@@Base+0xff24>
   168e0:	ldr	x8, [x22]
   168e4:	subs	x8, x8, #0x1
   168e8:	str	x8, [x22]
   168ec:	b.ne	169d4 <PyInit__decimal@@Base+0xff20>  // b.any
   168f0:	mov	x0, x22
   168f4:	b	169d0 <PyInit__decimal@@Base+0xff1c>
   168f8:	ldr	x8, [x20]
   168fc:	subs	x8, x8, #0x1
   16900:	str	x8, [x20]
   16904:	b.ne	16910 <PyInit__decimal@@Base+0xfe5c>  // b.any
   16908:	mov	x0, x20
   1690c:	bl	6510 <_Py_Dealloc@plt>
   16910:	ldr	x8, [x21]
   16914:	subs	x8, x8, #0x1
   16918:	str	x8, [x21]
   1691c:	b.ne	169d4 <PyInit__decimal@@Base+0xff20>  // b.any
   16920:	mov	x0, x21
   16924:	b	169d0 <PyInit__decimal@@Base+0xff1c>
   16928:	ldr	x8, [x20, #8]
   1692c:	ldrb	w9, [x8, #171]
   16930:	tbnz	w9, #0, 16980 <PyInit__decimal@@Base+0xfecc>
   16934:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16938:	ldr	x9, [x9, #3936]
   1693c:	ldr	x2, [x8, #24]
   16940:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16944:	add	x1, x1, #0x263
   16948:	ldr	x0, [x9]
   1694c:	bl	6950 <PyErr_Format@plt>
   16950:	b	169d4 <PyInit__decimal@@Base+0xff20>
   16954:	ldr	x8, [x21, #8]
   16958:	ldrb	w9, [x8, #171]
   1695c:	tbnz	w9, #0, 169a0 <PyInit__decimal@@Base+0xfeec>
   16960:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16964:	ldr	x9, [x9, #3936]
   16968:	ldr	x2, [x8, #24]
   1696c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16970:	add	x1, x1, #0x263
   16974:	ldr	x0, [x9]
   16978:	bl	6950 <PyErr_Format@plt>
   1697c:	b	169bc <PyInit__decimal@@Base+0xff08>
   16980:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16984:	add	x0, x0, #0x318
   16988:	mov	x1, x20
   1698c:	mov	x2, x19
   16990:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   16994:	mov	x20, x0
   16998:	cbnz	x0, 16828 <PyInit__decimal@@Base+0xfd74>
   1699c:	b	169d4 <PyInit__decimal@@Base+0xff20>
   169a0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   169a4:	add	x0, x0, #0x318
   169a8:	mov	x1, x21
   169ac:	mov	x2, x19
   169b0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   169b4:	mov	x21, x0
   169b8:	cbnz	x0, 16854 <PyInit__decimal@@Base+0xfda0>
   169bc:	ldr	x8, [x20]
   169c0:	subs	x8, x8, #0x1
   169c4:	str	x8, [x20]
   169c8:	b.ne	169d4 <PyInit__decimal@@Base+0xff20>  // b.any
   169cc:	mov	x0, x20
   169d0:	bl	6510 <_Py_Dealloc@plt>
   169d4:	mov	x22, xzr
   169d8:	mov	x0, x22
   169dc:	ldp	x20, x19, [sp, #64]
   169e0:	ldp	x22, x21, [sp, #48]
   169e4:	ldp	x29, x30, [sp, #32]
   169e8:	add	sp, sp, #0x50
   169ec:	ret
   169f0:	sub	sp, sp, #0x50
   169f4:	stp	x29, x30, [sp, #32]
   169f8:	stp	x22, x21, [sp, #48]
   169fc:	stp	x20, x19, [sp, #64]
   16a00:	add	x29, sp, #0x20
   16a04:	mov	x8, x1
   16a08:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16a0c:	mov	x19, x0
   16a10:	add	x1, x1, #0xd4c
   16a14:	sub	x2, x29, #0x8
   16a18:	add	x3, sp, #0x10
   16a1c:	mov	x0, x8
   16a20:	str	wzr, [sp, #12]
   16a24:	bl	6820 <PyArg_ParseTuple@plt>
   16a28:	cbz	w0, 16c0c <PyInit__decimal@@Base+0x10158>
   16a2c:	ldur	x20, [x29, #-8]
   16a30:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   16a34:	add	x22, x22, #0x318
   16a38:	ldr	x0, [x20, #8]
   16a3c:	cmp	x0, x22
   16a40:	b.eq	16a54 <PyInit__decimal@@Base+0xffa0>  // b.none
   16a44:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16a48:	add	x1, x1, #0x318
   16a4c:	bl	6900 <PyType_IsSubtype@plt>
   16a50:	cbz	w0, 16b60 <PyInit__decimal@@Base+0x100ac>
   16a54:	ldr	x8, [x20]
   16a58:	add	x8, x8, #0x1
   16a5c:	str	x8, [x20]
   16a60:	ldr	x21, [sp, #16]
   16a64:	ldr	x0, [x21, #8]
   16a68:	cmp	x0, x22
   16a6c:	b.eq	16a80 <PyInit__decimal@@Base+0xffcc>  // b.none
   16a70:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16a74:	add	x1, x1, #0x318
   16a78:	bl	6900 <PyType_IsSubtype@plt>
   16a7c:	cbz	w0, 16b8c <PyInit__decimal@@Base+0x100d8>
   16a80:	ldr	x8, [x21]
   16a84:	add	x8, x8, #0x1
   16a88:	str	x8, [x21]
   16a8c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16a90:	add	x0, x0, #0x318
   16a94:	bl	6890 <_PyObject_New@plt>
   16a98:	cbz	x0, 16b30 <PyInit__decimal@@Base+0x1007c>
   16a9c:	mov	w8, #0x30                  	// #48
   16aa0:	mov	x22, x0
   16aa4:	strb	w8, [x0, #24]!
   16aa8:	mov	x9, #0xffffffffffffffff    	// #-1
   16aac:	mov	w10, #0x4                   	// #4
   16ab0:	add	x1, x20, #0x18
   16ab4:	add	x2, x21, #0x18
   16ab8:	add	x8, x0, #0x30
   16abc:	add	x3, x19, #0x10
   16ac0:	add	x4, sp, #0xc
   16ac4:	stur	x9, [x0, #-8]
   16ac8:	stp	xzr, xzr, [x0, #8]
   16acc:	stp	xzr, x10, [x0, #24]
   16ad0:	str	x8, [x0, #40]
   16ad4:	bl	31e70 <PyInit__decimal@@Base+0x2b3bc>
   16ad8:	ldr	x8, [x20]
   16adc:	subs	x8, x8, #0x1
   16ae0:	str	x8, [x20]
   16ae4:	b.ne	16af0 <PyInit__decimal@@Base+0x1003c>  // b.any
   16ae8:	mov	x0, x20
   16aec:	bl	6510 <_Py_Dealloc@plt>
   16af0:	ldr	x8, [x21]
   16af4:	subs	x8, x8, #0x1
   16af8:	str	x8, [x21]
   16afc:	b.ne	16b08 <PyInit__decimal@@Base+0x10054>  // b.any
   16b00:	mov	x0, x21
   16b04:	bl	6510 <_Py_Dealloc@plt>
   16b08:	ldr	w1, [sp, #12]
   16b0c:	mov	x0, x19
   16b10:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   16b14:	cbz	w0, 16c10 <PyInit__decimal@@Base+0x1015c>
   16b18:	ldr	x8, [x22]
   16b1c:	subs	x8, x8, #0x1
   16b20:	str	x8, [x22]
   16b24:	b.ne	16c0c <PyInit__decimal@@Base+0x10158>  // b.any
   16b28:	mov	x0, x22
   16b2c:	b	16c08 <PyInit__decimal@@Base+0x10154>
   16b30:	ldr	x8, [x20]
   16b34:	subs	x8, x8, #0x1
   16b38:	str	x8, [x20]
   16b3c:	b.ne	16b48 <PyInit__decimal@@Base+0x10094>  // b.any
   16b40:	mov	x0, x20
   16b44:	bl	6510 <_Py_Dealloc@plt>
   16b48:	ldr	x8, [x21]
   16b4c:	subs	x8, x8, #0x1
   16b50:	str	x8, [x21]
   16b54:	b.ne	16c0c <PyInit__decimal@@Base+0x10158>  // b.any
   16b58:	mov	x0, x21
   16b5c:	b	16c08 <PyInit__decimal@@Base+0x10154>
   16b60:	ldr	x8, [x20, #8]
   16b64:	ldrb	w9, [x8, #171]
   16b68:	tbnz	w9, #0, 16bb8 <PyInit__decimal@@Base+0x10104>
   16b6c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16b70:	ldr	x9, [x9, #3936]
   16b74:	ldr	x2, [x8, #24]
   16b78:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16b7c:	add	x1, x1, #0x263
   16b80:	ldr	x0, [x9]
   16b84:	bl	6950 <PyErr_Format@plt>
   16b88:	b	16c0c <PyInit__decimal@@Base+0x10158>
   16b8c:	ldr	x8, [x21, #8]
   16b90:	ldrb	w9, [x8, #171]
   16b94:	tbnz	w9, #0, 16bd8 <PyInit__decimal@@Base+0x10124>
   16b98:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16b9c:	ldr	x9, [x9, #3936]
   16ba0:	ldr	x2, [x8, #24]
   16ba4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16ba8:	add	x1, x1, #0x263
   16bac:	ldr	x0, [x9]
   16bb0:	bl	6950 <PyErr_Format@plt>
   16bb4:	b	16bf4 <PyInit__decimal@@Base+0x10140>
   16bb8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16bbc:	add	x0, x0, #0x318
   16bc0:	mov	x1, x20
   16bc4:	mov	x2, x19
   16bc8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   16bcc:	mov	x20, x0
   16bd0:	cbnz	x0, 16a60 <PyInit__decimal@@Base+0xffac>
   16bd4:	b	16c0c <PyInit__decimal@@Base+0x10158>
   16bd8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16bdc:	add	x0, x0, #0x318
   16be0:	mov	x1, x21
   16be4:	mov	x2, x19
   16be8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   16bec:	mov	x21, x0
   16bf0:	cbnz	x0, 16a8c <PyInit__decimal@@Base+0xffd8>
   16bf4:	ldr	x8, [x20]
   16bf8:	subs	x8, x8, #0x1
   16bfc:	str	x8, [x20]
   16c00:	b.ne	16c0c <PyInit__decimal@@Base+0x10158>  // b.any
   16c04:	mov	x0, x20
   16c08:	bl	6510 <_Py_Dealloc@plt>
   16c0c:	mov	x22, xzr
   16c10:	mov	x0, x22
   16c14:	ldp	x20, x19, [sp, #64]
   16c18:	ldp	x22, x21, [sp, #48]
   16c1c:	ldp	x29, x30, [sp, #32]
   16c20:	add	sp, sp, #0x50
   16c24:	ret
   16c28:	sub	sp, sp, #0x50
   16c2c:	stp	x29, x30, [sp, #32]
   16c30:	stp	x22, x21, [sp, #48]
   16c34:	stp	x20, x19, [sp, #64]
   16c38:	add	x29, sp, #0x20
   16c3c:	mov	x8, x1
   16c40:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16c44:	mov	x19, x0
   16c48:	add	x1, x1, #0xd4c
   16c4c:	sub	x2, x29, #0x8
   16c50:	add	x3, sp, #0x10
   16c54:	mov	x0, x8
   16c58:	str	wzr, [sp, #12]
   16c5c:	bl	6820 <PyArg_ParseTuple@plt>
   16c60:	cbz	w0, 16e44 <PyInit__decimal@@Base+0x10390>
   16c64:	ldur	x20, [x29, #-8]
   16c68:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   16c6c:	add	x22, x22, #0x318
   16c70:	ldr	x0, [x20, #8]
   16c74:	cmp	x0, x22
   16c78:	b.eq	16c8c <PyInit__decimal@@Base+0x101d8>  // b.none
   16c7c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16c80:	add	x1, x1, #0x318
   16c84:	bl	6900 <PyType_IsSubtype@plt>
   16c88:	cbz	w0, 16d98 <PyInit__decimal@@Base+0x102e4>
   16c8c:	ldr	x8, [x20]
   16c90:	add	x8, x8, #0x1
   16c94:	str	x8, [x20]
   16c98:	ldr	x21, [sp, #16]
   16c9c:	ldr	x0, [x21, #8]
   16ca0:	cmp	x0, x22
   16ca4:	b.eq	16cb8 <PyInit__decimal@@Base+0x10204>  // b.none
   16ca8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16cac:	add	x1, x1, #0x318
   16cb0:	bl	6900 <PyType_IsSubtype@plt>
   16cb4:	cbz	w0, 16dc4 <PyInit__decimal@@Base+0x10310>
   16cb8:	ldr	x8, [x21]
   16cbc:	add	x8, x8, #0x1
   16cc0:	str	x8, [x21]
   16cc4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16cc8:	add	x0, x0, #0x318
   16ccc:	bl	6890 <_PyObject_New@plt>
   16cd0:	cbz	x0, 16d68 <PyInit__decimal@@Base+0x102b4>
   16cd4:	mov	w8, #0x30                  	// #48
   16cd8:	mov	x22, x0
   16cdc:	strb	w8, [x0, #24]!
   16ce0:	mov	x9, #0xffffffffffffffff    	// #-1
   16ce4:	mov	w10, #0x4                   	// #4
   16ce8:	add	x1, x20, #0x18
   16cec:	add	x2, x21, #0x18
   16cf0:	add	x8, x0, #0x30
   16cf4:	add	x3, x19, #0x10
   16cf8:	add	x4, sp, #0xc
   16cfc:	stur	x9, [x0, #-8]
   16d00:	stp	xzr, xzr, [x0, #8]
   16d04:	stp	xzr, x10, [x0, #24]
   16d08:	str	x8, [x0, #40]
   16d0c:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   16d10:	ldr	x8, [x20]
   16d14:	subs	x8, x8, #0x1
   16d18:	str	x8, [x20]
   16d1c:	b.ne	16d28 <PyInit__decimal@@Base+0x10274>  // b.any
   16d20:	mov	x0, x20
   16d24:	bl	6510 <_Py_Dealloc@plt>
   16d28:	ldr	x8, [x21]
   16d2c:	subs	x8, x8, #0x1
   16d30:	str	x8, [x21]
   16d34:	b.ne	16d40 <PyInit__decimal@@Base+0x1028c>  // b.any
   16d38:	mov	x0, x21
   16d3c:	bl	6510 <_Py_Dealloc@plt>
   16d40:	ldr	w1, [sp, #12]
   16d44:	mov	x0, x19
   16d48:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   16d4c:	cbz	w0, 16e48 <PyInit__decimal@@Base+0x10394>
   16d50:	ldr	x8, [x22]
   16d54:	subs	x8, x8, #0x1
   16d58:	str	x8, [x22]
   16d5c:	b.ne	16e44 <PyInit__decimal@@Base+0x10390>  // b.any
   16d60:	mov	x0, x22
   16d64:	b	16e40 <PyInit__decimal@@Base+0x1038c>
   16d68:	ldr	x8, [x20]
   16d6c:	subs	x8, x8, #0x1
   16d70:	str	x8, [x20]
   16d74:	b.ne	16d80 <PyInit__decimal@@Base+0x102cc>  // b.any
   16d78:	mov	x0, x20
   16d7c:	bl	6510 <_Py_Dealloc@plt>
   16d80:	ldr	x8, [x21]
   16d84:	subs	x8, x8, #0x1
   16d88:	str	x8, [x21]
   16d8c:	b.ne	16e44 <PyInit__decimal@@Base+0x10390>  // b.any
   16d90:	mov	x0, x21
   16d94:	b	16e40 <PyInit__decimal@@Base+0x1038c>
   16d98:	ldr	x8, [x20, #8]
   16d9c:	ldrb	w9, [x8, #171]
   16da0:	tbnz	w9, #0, 16df0 <PyInit__decimal@@Base+0x1033c>
   16da4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16da8:	ldr	x9, [x9, #3936]
   16dac:	ldr	x2, [x8, #24]
   16db0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16db4:	add	x1, x1, #0x263
   16db8:	ldr	x0, [x9]
   16dbc:	bl	6950 <PyErr_Format@plt>
   16dc0:	b	16e44 <PyInit__decimal@@Base+0x10390>
   16dc4:	ldr	x8, [x21, #8]
   16dc8:	ldrb	w9, [x8, #171]
   16dcc:	tbnz	w9, #0, 16e10 <PyInit__decimal@@Base+0x1035c>
   16dd0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   16dd4:	ldr	x9, [x9, #3936]
   16dd8:	ldr	x2, [x8, #24]
   16ddc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   16de0:	add	x1, x1, #0x263
   16de4:	ldr	x0, [x9]
   16de8:	bl	6950 <PyErr_Format@plt>
   16dec:	b	16e2c <PyInit__decimal@@Base+0x10378>
   16df0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16df4:	add	x0, x0, #0x318
   16df8:	mov	x1, x20
   16dfc:	mov	x2, x19
   16e00:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   16e04:	mov	x20, x0
   16e08:	cbnz	x0, 16c98 <PyInit__decimal@@Base+0x101e4>
   16e0c:	b	16e44 <PyInit__decimal@@Base+0x10390>
   16e10:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16e14:	add	x0, x0, #0x318
   16e18:	mov	x1, x21
   16e1c:	mov	x2, x19
   16e20:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   16e24:	mov	x21, x0
   16e28:	cbnz	x0, 16cc4 <PyInit__decimal@@Base+0x10210>
   16e2c:	ldr	x8, [x20]
   16e30:	subs	x8, x8, #0x1
   16e34:	str	x8, [x20]
   16e38:	b.ne	16e44 <PyInit__decimal@@Base+0x10390>  // b.any
   16e3c:	mov	x0, x20
   16e40:	bl	6510 <_Py_Dealloc@plt>
   16e44:	mov	x22, xzr
   16e48:	mov	x0, x22
   16e4c:	ldp	x20, x19, [sp, #64]
   16e50:	ldp	x22, x21, [sp, #48]
   16e54:	ldp	x29, x30, [sp, #32]
   16e58:	add	sp, sp, #0x50
   16e5c:	ret
   16e60:	sub	sp, sp, #0x60
   16e64:	stp	x29, x30, [sp, #32]
   16e68:	stp	x24, x23, [sp, #48]
   16e6c:	stp	x22, x21, [sp, #64]
   16e70:	stp	x20, x19, [sp, #80]
   16e74:	add	x29, sp, #0x20
   16e78:	adrp	x23, 50000 <PyInit__decimal@@Base+0x4954c>
   16e7c:	ldr	x23, [x23, #4008]
   16e80:	mov	x8, x2
   16e84:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   16e88:	adrp	x3, 53000 <PyInit__decimal@@Base+0x4c54c>
   16e8c:	mov	x20, x0
   16e90:	add	x2, x2, #0x77a
   16e94:	add	x3, x3, #0x330
   16e98:	sub	x4, x29, #0x8
   16e9c:	add	x5, sp, #0x10
   16ea0:	add	x6, sp, #0x8
   16ea4:	mov	x0, x1
   16ea8:	mov	x1, x8
   16eac:	str	x23, [sp, #8]
   16eb0:	str	wzr, [sp, #4]
   16eb4:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   16eb8:	cbz	w0, 1719c <PyInit__decimal@@Base+0x106e8>
   16ebc:	ldur	x19, [x29, #-8]
   16ec0:	adrp	x24, 51000 <PyInit__decimal@@Base+0x4a54c>
   16ec4:	add	x24, x24, #0x318
   16ec8:	ldr	x0, [x19, #8]
   16ecc:	cmp	x0, x24
   16ed0:	b.eq	16ee4 <PyInit__decimal@@Base+0x10430>  // b.none
   16ed4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16ed8:	add	x1, x1, #0x318
   16edc:	bl	6900 <PyType_IsSubtype@plt>
   16ee0:	cbz	w0, 17014 <PyInit__decimal@@Base+0x10560>
   16ee4:	ldr	x8, [x19]
   16ee8:	add	x8, x8, #0x1
   16eec:	str	x8, [x19]
   16ef0:	ldr	x21, [sp, #16]
   16ef4:	ldr	x0, [x21, #8]
   16ef8:	cmp	x0, x24
   16efc:	b.eq	16f10 <PyInit__decimal@@Base+0x1045c>  // b.none
   16f00:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16f04:	add	x1, x1, #0x318
   16f08:	bl	6900 <PyType_IsSubtype@plt>
   16f0c:	cbz	w0, 17040 <PyInit__decimal@@Base+0x1058c>
   16f10:	ldr	x8, [x21]
   16f14:	add	x8, x8, #0x1
   16f18:	str	x8, [x21]
   16f1c:	ldr	x22, [sp, #8]
   16f20:	cmp	x22, x23
   16f24:	b.eq	16f54 <PyInit__decimal@@Base+0x104a0>  // b.none
   16f28:	ldr	x0, [x22, #8]
   16f2c:	cmp	x0, x24
   16f30:	b.eq	16f44 <PyInit__decimal@@Base+0x10490>  // b.none
   16f34:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   16f38:	add	x1, x1, #0x318
   16f3c:	bl	6900 <PyType_IsSubtype@plt>
   16f40:	cbz	w0, 170f0 <PyInit__decimal@@Base+0x1063c>
   16f44:	ldr	x8, [x22]
   16f48:	add	x8, x8, #0x1
   16f4c:	str	x8, [x22]
   16f50:	b	16f58 <PyInit__decimal@@Base+0x104a4>
   16f54:	mov	x22, xzr
   16f58:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   16f5c:	add	x0, x0, #0x318
   16f60:	bl	6890 <_PyObject_New@plt>
   16f64:	cbz	x0, 16fc8 <PyInit__decimal@@Base+0x10514>
   16f68:	mov	w8, #0x30                  	// #48
   16f6c:	mov	x23, x0
   16f70:	strb	w8, [x0, #24]!
   16f74:	mov	x9, #0xffffffffffffffff    	// #-1
   16f78:	mov	w10, #0x4                   	// #4
   16f7c:	add	x1, x19, #0x18
   16f80:	add	x8, x0, #0x30
   16f84:	add	x2, x21, #0x18
   16f88:	stur	x9, [x0, #-8]
   16f8c:	stp	xzr, xzr, [x0, #8]
   16f90:	stp	xzr, x10, [x0, #24]
   16f94:	str	x8, [x0, #40]
   16f98:	cbz	x22, 1706c <PyInit__decimal@@Base+0x105b8>
   16f9c:	add	x3, x22, #0x18
   16fa0:	add	x4, x20, #0x10
   16fa4:	add	x5, sp, #0x4
   16fa8:	bl	303d0 <PyInit__decimal@@Base+0x2991c>
   16fac:	ldr	x8, [x22]
   16fb0:	subs	x8, x8, #0x1
   16fb4:	str	x8, [x22]
   16fb8:	b.ne	17078 <PyInit__decimal@@Base+0x105c4>  // b.any
   16fbc:	mov	x0, x22
   16fc0:	bl	6510 <_Py_Dealloc@plt>
   16fc4:	b	17078 <PyInit__decimal@@Base+0x105c4>
   16fc8:	ldr	x8, [x19]
   16fcc:	subs	x8, x8, #0x1
   16fd0:	str	x8, [x19]
   16fd4:	b.ne	16fe0 <PyInit__decimal@@Base+0x1052c>  // b.any
   16fd8:	mov	x0, x19
   16fdc:	bl	6510 <_Py_Dealloc@plt>
   16fe0:	ldr	x8, [x21]
   16fe4:	subs	x8, x8, #0x1
   16fe8:	str	x8, [x21]
   16fec:	b.ne	16ff8 <PyInit__decimal@@Base+0x10544>  // b.any
   16ff0:	mov	x0, x21
   16ff4:	bl	6510 <_Py_Dealloc@plt>
   16ff8:	cbz	x22, 1719c <PyInit__decimal@@Base+0x106e8>
   16ffc:	ldr	x8, [x22]
   17000:	subs	x8, x8, #0x1
   17004:	str	x8, [x22]
   17008:	b.ne	1719c <PyInit__decimal@@Base+0x106e8>  // b.any
   1700c:	mov	x0, x22
   17010:	b	17198 <PyInit__decimal@@Base+0x106e4>
   17014:	ldr	x8, [x19, #8]
   17018:	ldrb	w9, [x8, #171]
   1701c:	tbnz	w9, #0, 170d0 <PyInit__decimal@@Base+0x1061c>
   17020:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17024:	ldr	x9, [x9, #3936]
   17028:	ldr	x2, [x8, #24]
   1702c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17030:	add	x1, x1, #0x263
   17034:	ldr	x0, [x9]
   17038:	bl	6950 <PyErr_Format@plt>
   1703c:	b	1719c <PyInit__decimal@@Base+0x106e8>
   17040:	ldr	x8, [x21, #8]
   17044:	ldrb	w9, [x8, #171]
   17048:	tbnz	w9, #0, 1711c <PyInit__decimal@@Base+0x10668>
   1704c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17050:	ldr	x9, [x9, #3936]
   17054:	ldr	x2, [x8, #24]
   17058:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1705c:	add	x1, x1, #0x263
   17060:	ldr	x0, [x9]
   17064:	bl	6950 <PyErr_Format@plt>
   17068:	b	17138 <PyInit__decimal@@Base+0x10684>
   1706c:	add	x3, x20, #0x10
   17070:	add	x4, sp, #0x4
   17074:	bl	2ef54 <PyInit__decimal@@Base+0x284a0>
   17078:	ldr	x8, [x19]
   1707c:	subs	x8, x8, #0x1
   17080:	str	x8, [x19]
   17084:	b.ne	17090 <PyInit__decimal@@Base+0x105dc>  // b.any
   17088:	mov	x0, x19
   1708c:	bl	6510 <_Py_Dealloc@plt>
   17090:	ldr	x8, [x21]
   17094:	subs	x8, x8, #0x1
   17098:	str	x8, [x21]
   1709c:	b.ne	170a8 <PyInit__decimal@@Base+0x105f4>  // b.any
   170a0:	mov	x0, x21
   170a4:	bl	6510 <_Py_Dealloc@plt>
   170a8:	ldr	w1, [sp, #4]
   170ac:	mov	x0, x20
   170b0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   170b4:	cbz	w0, 171a0 <PyInit__decimal@@Base+0x106ec>
   170b8:	ldr	x8, [x23]
   170bc:	subs	x8, x8, #0x1
   170c0:	str	x8, [x23]
   170c4:	b.ne	1719c <PyInit__decimal@@Base+0x106e8>  // b.any
   170c8:	mov	x0, x23
   170cc:	b	17198 <PyInit__decimal@@Base+0x106e4>
   170d0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   170d4:	add	x0, x0, #0x318
   170d8:	mov	x1, x19
   170dc:	mov	x2, x20
   170e0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   170e4:	mov	x19, x0
   170e8:	cbnz	x0, 16ef0 <PyInit__decimal@@Base+0x1043c>
   170ec:	b	1719c <PyInit__decimal@@Base+0x106e8>
   170f0:	ldr	x8, [x22, #8]
   170f4:	ldrb	w9, [x8, #171]
   170f8:	tbnz	w9, #0, 17150 <PyInit__decimal@@Base+0x1069c>
   170fc:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17100:	ldr	x9, [x9, #3936]
   17104:	ldr	x2, [x8, #24]
   17108:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1710c:	add	x1, x1, #0x263
   17110:	ldr	x0, [x9]
   17114:	bl	6950 <PyErr_Format@plt>
   17118:	b	1716c <PyInit__decimal@@Base+0x106b8>
   1711c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17120:	add	x0, x0, #0x318
   17124:	mov	x1, x21
   17128:	mov	x2, x20
   1712c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   17130:	mov	x21, x0
   17134:	cbnz	x0, 16f1c <PyInit__decimal@@Base+0x10468>
   17138:	ldr	x8, [x19]
   1713c:	subs	x8, x8, #0x1
   17140:	str	x8, [x19]
   17144:	b.ne	1719c <PyInit__decimal@@Base+0x106e8>  // b.any
   17148:	mov	x0, x19
   1714c:	b	17198 <PyInit__decimal@@Base+0x106e4>
   17150:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17154:	add	x0, x0, #0x318
   17158:	mov	x1, x22
   1715c:	mov	x2, x20
   17160:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   17164:	mov	x22, x0
   17168:	cbnz	x0, 16f58 <PyInit__decimal@@Base+0x104a4>
   1716c:	ldr	x8, [x19]
   17170:	subs	x8, x8, #0x1
   17174:	str	x8, [x19]
   17178:	b.ne	17184 <PyInit__decimal@@Base+0x106d0>  // b.any
   1717c:	mov	x0, x19
   17180:	bl	6510 <_Py_Dealloc@plt>
   17184:	ldr	x8, [x21]
   17188:	subs	x8, x8, #0x1
   1718c:	str	x8, [x21]
   17190:	b.ne	1719c <PyInit__decimal@@Base+0x106e8>  // b.any
   17194:	mov	x0, x21
   17198:	bl	6510 <_Py_Dealloc@plt>
   1719c:	mov	x23, xzr
   171a0:	mov	x0, x23
   171a4:	ldp	x20, x19, [sp, #80]
   171a8:	ldp	x22, x21, [sp, #64]
   171ac:	ldp	x24, x23, [sp, #48]
   171b0:	ldp	x29, x30, [sp, #32]
   171b4:	add	sp, sp, #0x60
   171b8:	ret
   171bc:	sub	sp, sp, #0x60
   171c0:	stp	x29, x30, [sp, #32]
   171c4:	str	x23, [sp, #48]
   171c8:	stp	x22, x21, [sp, #64]
   171cc:	stp	x20, x19, [sp, #80]
   171d0:	add	x29, sp, #0x20
   171d4:	mov	x8, x1
   171d8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   171dc:	mov	x19, x0
   171e0:	add	x1, x1, #0xd4b
   171e4:	add	x2, x29, #0x18
   171e8:	sub	x3, x29, #0x8
   171ec:	add	x4, sp, #0x10
   171f0:	mov	x0, x8
   171f4:	str	wzr, [sp, #12]
   171f8:	bl	6820 <PyArg_ParseTuple@plt>
   171fc:	cbz	w0, 174b8 <PyInit__decimal@@Base+0x10a04>
   17200:	ldr	x20, [x29, #24]
   17204:	adrp	x23, 51000 <PyInit__decimal@@Base+0x4a54c>
   17208:	add	x23, x23, #0x318
   1720c:	ldr	x0, [x20, #8]
   17210:	cmp	x0, x23
   17214:	b.eq	17228 <PyInit__decimal@@Base+0x10774>  // b.none
   17218:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1721c:	add	x1, x1, #0x318
   17220:	bl	6900 <PyType_IsSubtype@plt>
   17224:	cbz	w0, 1734c <PyInit__decimal@@Base+0x10898>
   17228:	ldr	x8, [x20]
   1722c:	add	x8, x8, #0x1
   17230:	str	x8, [x20]
   17234:	ldur	x21, [x29, #-8]
   17238:	ldr	x0, [x21, #8]
   1723c:	cmp	x0, x23
   17240:	b.eq	17254 <PyInit__decimal@@Base+0x107a0>  // b.none
   17244:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17248:	add	x1, x1, #0x318
   1724c:	bl	6900 <PyType_IsSubtype@plt>
   17250:	cbz	w0, 173c0 <PyInit__decimal@@Base+0x1090c>
   17254:	ldr	x8, [x21]
   17258:	add	x8, x8, #0x1
   1725c:	str	x8, [x21]
   17260:	ldr	x22, [sp, #16]
   17264:	ldr	x0, [x22, #8]
   17268:	cmp	x0, x23
   1726c:	b.eq	17280 <PyInit__decimal@@Base+0x107cc>  // b.none
   17270:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17274:	add	x1, x1, #0x318
   17278:	bl	6900 <PyType_IsSubtype@plt>
   1727c:	cbz	w0, 173ec <PyInit__decimal@@Base+0x10938>
   17280:	ldr	x8, [x22]
   17284:	add	x8, x8, #0x1
   17288:	str	x8, [x22]
   1728c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17290:	add	x0, x0, #0x318
   17294:	bl	6890 <_PyObject_New@plt>
   17298:	cbz	x0, 17378 <PyInit__decimal@@Base+0x108c4>
   1729c:	mov	w8, #0x30                  	// #48
   172a0:	mov	x23, x0
   172a4:	strb	w8, [x0, #24]!
   172a8:	mov	x9, #0xffffffffffffffff    	// #-1
   172ac:	mov	w10, #0x4                   	// #4
   172b0:	add	x1, x20, #0x18
   172b4:	add	x2, x21, #0x18
   172b8:	add	x3, x22, #0x18
   172bc:	add	x8, x0, #0x30
   172c0:	add	x4, x19, #0x10
   172c4:	add	x5, sp, #0xc
   172c8:	stur	x9, [x0, #-8]
   172cc:	stp	xzr, xzr, [x0, #8]
   172d0:	stp	xzr, x10, [x0, #24]
   172d4:	str	x8, [x0, #40]
   172d8:	bl	2af24 <PyInit__decimal@@Base+0x24470>
   172dc:	ldr	x8, [x20]
   172e0:	subs	x8, x8, #0x1
   172e4:	str	x8, [x20]
   172e8:	b.ne	172f4 <PyInit__decimal@@Base+0x10840>  // b.any
   172ec:	mov	x0, x20
   172f0:	bl	6510 <_Py_Dealloc@plt>
   172f4:	ldr	x8, [x21]
   172f8:	subs	x8, x8, #0x1
   172fc:	str	x8, [x21]
   17300:	b.ne	1730c <PyInit__decimal@@Base+0x10858>  // b.any
   17304:	mov	x0, x21
   17308:	bl	6510 <_Py_Dealloc@plt>
   1730c:	ldr	x8, [x22]
   17310:	subs	x8, x8, #0x1
   17314:	str	x8, [x22]
   17318:	b.ne	17324 <PyInit__decimal@@Base+0x10870>  // b.any
   1731c:	mov	x0, x22
   17320:	bl	6510 <_Py_Dealloc@plt>
   17324:	ldr	w1, [sp, #12]
   17328:	mov	x0, x19
   1732c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   17330:	cbz	w0, 174bc <PyInit__decimal@@Base+0x10a08>
   17334:	ldr	x8, [x23]
   17338:	subs	x8, x8, #0x1
   1733c:	str	x8, [x23]
   17340:	b.ne	174b8 <PyInit__decimal@@Base+0x10a04>  // b.any
   17344:	mov	x0, x23
   17348:	b	174b4 <PyInit__decimal@@Base+0x10a00>
   1734c:	ldr	x8, [x20, #8]
   17350:	ldrb	w9, [x8, #171]
   17354:	tbnz	w9, #0, 17418 <PyInit__decimal@@Base+0x10964>
   17358:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1735c:	ldr	x9, [x9, #3936]
   17360:	ldr	x2, [x8, #24]
   17364:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17368:	add	x1, x1, #0x263
   1736c:	ldr	x0, [x9]
   17370:	bl	6950 <PyErr_Format@plt>
   17374:	b	174b8 <PyInit__decimal@@Base+0x10a04>
   17378:	ldr	x8, [x20]
   1737c:	subs	x8, x8, #0x1
   17380:	str	x8, [x20]
   17384:	b.ne	17390 <PyInit__decimal@@Base+0x108dc>  // b.any
   17388:	mov	x0, x20
   1738c:	bl	6510 <_Py_Dealloc@plt>
   17390:	ldr	x8, [x21]
   17394:	subs	x8, x8, #0x1
   17398:	str	x8, [x21]
   1739c:	b.ne	173a8 <PyInit__decimal@@Base+0x108f4>  // b.any
   173a0:	mov	x0, x21
   173a4:	bl	6510 <_Py_Dealloc@plt>
   173a8:	ldr	x8, [x22]
   173ac:	subs	x8, x8, #0x1
   173b0:	str	x8, [x22]
   173b4:	b.ne	174b8 <PyInit__decimal@@Base+0x10a04>  // b.any
   173b8:	mov	x0, x22
   173bc:	b	174b4 <PyInit__decimal@@Base+0x10a00>
   173c0:	ldr	x8, [x21, #8]
   173c4:	ldrb	w9, [x8, #171]
   173c8:	tbnz	w9, #0, 17438 <PyInit__decimal@@Base+0x10984>
   173cc:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   173d0:	ldr	x9, [x9, #3936]
   173d4:	ldr	x2, [x8, #24]
   173d8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   173dc:	add	x1, x1, #0x263
   173e0:	ldr	x0, [x9]
   173e4:	bl	6950 <PyErr_Format@plt>
   173e8:	b	17454 <PyInit__decimal@@Base+0x109a0>
   173ec:	ldr	x8, [x22, #8]
   173f0:	ldrb	w9, [x8, #171]
   173f4:	tbnz	w9, #0, 1746c <PyInit__decimal@@Base+0x109b8>
   173f8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   173fc:	ldr	x9, [x9, #3936]
   17400:	ldr	x2, [x8, #24]
   17404:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17408:	add	x1, x1, #0x263
   1740c:	ldr	x0, [x9]
   17410:	bl	6950 <PyErr_Format@plt>
   17414:	b	17488 <PyInit__decimal@@Base+0x109d4>
   17418:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1741c:	add	x0, x0, #0x318
   17420:	mov	x1, x20
   17424:	mov	x2, x19
   17428:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1742c:	mov	x20, x0
   17430:	cbnz	x0, 17234 <PyInit__decimal@@Base+0x10780>
   17434:	b	174b8 <PyInit__decimal@@Base+0x10a04>
   17438:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1743c:	add	x0, x0, #0x318
   17440:	mov	x1, x21
   17444:	mov	x2, x19
   17448:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1744c:	mov	x21, x0
   17450:	cbnz	x0, 17260 <PyInit__decimal@@Base+0x107ac>
   17454:	ldr	x8, [x20]
   17458:	subs	x8, x8, #0x1
   1745c:	str	x8, [x20]
   17460:	b.ne	174b8 <PyInit__decimal@@Base+0x10a04>  // b.any
   17464:	mov	x0, x20
   17468:	b	174b4 <PyInit__decimal@@Base+0x10a00>
   1746c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17470:	add	x0, x0, #0x318
   17474:	mov	x1, x22
   17478:	mov	x2, x19
   1747c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   17480:	mov	x22, x0
   17484:	cbnz	x0, 1728c <PyInit__decimal@@Base+0x107d8>
   17488:	ldr	x8, [x20]
   1748c:	subs	x8, x8, #0x1
   17490:	str	x8, [x20]
   17494:	b.ne	174a0 <PyInit__decimal@@Base+0x109ec>  // b.any
   17498:	mov	x0, x20
   1749c:	bl	6510 <_Py_Dealloc@plt>
   174a0:	ldr	x8, [x21]
   174a4:	subs	x8, x8, #0x1
   174a8:	str	x8, [x21]
   174ac:	b.ne	174b8 <PyInit__decimal@@Base+0x10a04>  // b.any
   174b0:	mov	x0, x21
   174b4:	bl	6510 <_Py_Dealloc@plt>
   174b8:	mov	x23, xzr
   174bc:	mov	x0, x23
   174c0:	ldp	x20, x19, [sp, #80]
   174c4:	ldp	x22, x21, [sp, #64]
   174c8:	ldr	x23, [sp, #48]
   174cc:	ldp	x29, x30, [sp, #32]
   174d0:	add	sp, sp, #0x60
   174d4:	ret
   174d8:	stp	x29, x30, [sp, #-16]!
   174dc:	mov	x29, sp
   174e0:	add	x0, x0, #0x10
   174e4:	bl	208c4 <PyInit__decimal@@Base+0x19e10>
   174e8:	ldp	x29, x30, [sp], #16
   174ec:	b	65e0 <PyLong_FromSsize_t@plt>
   174f0:	stp	x29, x30, [sp, #-16]!
   174f4:	mov	x29, sp
   174f8:	add	x0, x0, #0x10
   174fc:	bl	208d8 <PyInit__decimal@@Base+0x19e24>
   17500:	ldp	x29, x30, [sp], #16
   17504:	b	65e0 <PyLong_FromSsize_t@plt>
   17508:	stp	x29, x30, [sp, #-48]!
   1750c:	str	x21, [sp, #16]
   17510:	stp	x20, x19, [sp, #32]
   17514:	mov	x29, sp
   17518:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1751c:	add	x0, x0, #0x318
   17520:	bl	6890 <_PyObject_New@plt>
   17524:	mov	x19, x0
   17528:	cbz	x0, 17578 <PyInit__decimal@@Base+0x10ac4>
   1752c:	mov	w8, #0xa                   	// #10
   17530:	mov	x21, x19
   17534:	adrp	x11, 38000 <PyInit__decimal@@Base+0x3154c>
   17538:	str	x8, [x21, #72]!
   1753c:	ldr	q0, [x11, #3280]
   17540:	mov	x9, #0xffffffffffffffff    	// #-1
   17544:	mov	w10, #0x30                  	// #48
   17548:	mov	x20, x21
   1754c:	stur	x9, [x21, #-56]
   17550:	strb	w10, [x20, #-48]!
   17554:	mov	x0, x20
   17558:	mov	w1, wzr
   1755c:	stp	xzr, xzr, [x21, #-40]
   17560:	stur	x21, [x21, #-8]
   17564:	stur	q0, [x21, #-24]
   17568:	bl	212b4 <PyInit__decimal@@Base+0x1a800>
   1756c:	mov	x0, x20
   17570:	stur	xzr, [x21, #-40]
   17574:	bl	21070 <PyInit__decimal@@Base+0x1a5bc>
   17578:	mov	x0, x19
   1757c:	ldp	x20, x19, [sp, #32]
   17580:	ldr	x21, [sp, #16]
   17584:	ldp	x29, x30, [sp], #48
   17588:	ret
   1758c:	stp	x29, x30, [sp, #-32]!
   17590:	str	x19, [sp, #16]
   17594:	mov	x29, sp
   17598:	ldr	x0, [x1, #8]
   1759c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   175a0:	add	x8, x8, #0x318
   175a4:	mov	x19, x1
   175a8:	cmp	x0, x8
   175ac:	b.eq	175c0 <PyInit__decimal@@Base+0x10b0c>  // b.none
   175b0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   175b4:	add	x1, x1, #0x318
   175b8:	bl	6900 <PyType_IsSubtype@plt>
   175bc:	cbz	w0, 175f0 <PyInit__decimal@@Base+0x10b3c>
   175c0:	add	x0, x19, #0x18
   175c4:	bl	20bc0 <PyInit__decimal@@Base+0x1a10c>
   175c8:	cbz	w0, 175d8 <PyInit__decimal@@Base+0x10b24>
   175cc:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   175d0:	ldr	x0, [x0, #4024]
   175d4:	b	175e0 <PyInit__decimal@@Base+0x10b2c>
   175d8:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   175dc:	ldr	x0, [x0, #3976]
   175e0:	ldr	x8, [x0]
   175e4:	add	x8, x8, #0x1
   175e8:	str	x8, [x0]
   175ec:	b	1760c <PyInit__decimal@@Base+0x10b58>
   175f0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   175f4:	ldr	x8, [x8, #3936]
   175f8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   175fc:	add	x1, x1, #0xc24
   17600:	ldr	x0, [x8]
   17604:	bl	6590 <PyErr_SetString@plt>
   17608:	mov	x0, xzr
   1760c:	ldr	x19, [sp, #16]
   17610:	ldp	x29, x30, [sp], #32
   17614:	ret
   17618:	stp	x29, x30, [sp, #-32]!
   1761c:	stp	x20, x19, [sp, #16]
   17620:	mov	x29, sp
   17624:	ldr	x8, [x1, #8]
   17628:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   1762c:	add	x9, x9, #0x318
   17630:	mov	x19, x1
   17634:	cmp	x8, x9
   17638:	b.eq	17654 <PyInit__decimal@@Base+0x10ba0>  // b.none
   1763c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17640:	mov	x20, x0
   17644:	add	x1, x1, #0x318
   17648:	mov	x0, x8
   1764c:	bl	6900 <PyType_IsSubtype@plt>
   17650:	cbz	w0, 176a8 <PyInit__decimal@@Base+0x10bf4>
   17654:	ldr	x8, [x19]
   17658:	add	x8, x8, #0x1
   1765c:	str	x8, [x19]
   17660:	add	x0, x19, #0x18
   17664:	bl	20bc8 <PyInit__decimal@@Base+0x1a114>
   17668:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1766c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17670:	ldr	x8, [x8, #4024]
   17674:	ldr	x9, [x9, #3976]
   17678:	cmp	w0, #0x0
   1767c:	csel	x20, x9, x8, eq  // eq = none
   17680:	ldr	x8, [x20]
   17684:	add	x8, x8, #0x1
   17688:	str	x8, [x20]
   1768c:	ldr	x8, [x19]
   17690:	subs	x8, x8, #0x1
   17694:	str	x8, [x19]
   17698:	b.ne	176f4 <PyInit__decimal@@Base+0x10c40>  // b.any
   1769c:	mov	x0, x19
   176a0:	bl	6510 <_Py_Dealloc@plt>
   176a4:	b	176f4 <PyInit__decimal@@Base+0x10c40>
   176a8:	ldr	x8, [x19, #8]
   176ac:	ldrb	w9, [x8, #171]
   176b0:	tbnz	w9, #0, 176d4 <PyInit__decimal@@Base+0x10c20>
   176b4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   176b8:	ldr	x9, [x9, #3936]
   176bc:	ldr	x2, [x8, #24]
   176c0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   176c4:	add	x1, x1, #0x263
   176c8:	ldr	x0, [x9]
   176cc:	bl	6950 <PyErr_Format@plt>
   176d0:	b	176f0 <PyInit__decimal@@Base+0x10c3c>
   176d4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   176d8:	add	x0, x0, #0x318
   176dc:	mov	x1, x19
   176e0:	mov	x2, x20
   176e4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   176e8:	mov	x19, x0
   176ec:	cbnz	x0, 17660 <PyInit__decimal@@Base+0x10bac>
   176f0:	mov	x20, xzr
   176f4:	mov	x0, x20
   176f8:	ldp	x20, x19, [sp, #16]
   176fc:	ldp	x29, x30, [sp], #32
   17700:	ret
   17704:	stp	x29, x30, [sp, #-32]!
   17708:	stp	x20, x19, [sp, #16]
   1770c:	mov	x29, sp
   17710:	ldr	x8, [x1, #8]
   17714:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   17718:	add	x9, x9, #0x318
   1771c:	mov	x19, x1
   17720:	cmp	x8, x9
   17724:	b.eq	17740 <PyInit__decimal@@Base+0x10c8c>  // b.none
   17728:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1772c:	mov	x20, x0
   17730:	add	x1, x1, #0x318
   17734:	mov	x0, x8
   17738:	bl	6900 <PyType_IsSubtype@plt>
   1773c:	cbz	w0, 17794 <PyInit__decimal@@Base+0x10ce0>
   17740:	ldr	x8, [x19]
   17744:	add	x8, x8, #0x1
   17748:	str	x8, [x19]
   1774c:	add	x0, x19, #0x18
   17750:	bl	20bd8 <PyInit__decimal@@Base+0x1a124>
   17754:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   17758:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1775c:	ldr	x8, [x8, #4024]
   17760:	ldr	x9, [x9, #3976]
   17764:	cmp	w0, #0x0
   17768:	csel	x20, x9, x8, eq  // eq = none
   1776c:	ldr	x8, [x20]
   17770:	add	x8, x8, #0x1
   17774:	str	x8, [x20]
   17778:	ldr	x8, [x19]
   1777c:	subs	x8, x8, #0x1
   17780:	str	x8, [x19]
   17784:	b.ne	177e0 <PyInit__decimal@@Base+0x10d2c>  // b.any
   17788:	mov	x0, x19
   1778c:	bl	6510 <_Py_Dealloc@plt>
   17790:	b	177e0 <PyInit__decimal@@Base+0x10d2c>
   17794:	ldr	x8, [x19, #8]
   17798:	ldrb	w9, [x8, #171]
   1779c:	tbnz	w9, #0, 177c0 <PyInit__decimal@@Base+0x10d0c>
   177a0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   177a4:	ldr	x9, [x9, #3936]
   177a8:	ldr	x2, [x8, #24]
   177ac:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   177b0:	add	x1, x1, #0x263
   177b4:	ldr	x0, [x9]
   177b8:	bl	6950 <PyErr_Format@plt>
   177bc:	b	177dc <PyInit__decimal@@Base+0x10d28>
   177c0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   177c4:	add	x0, x0, #0x318
   177c8:	mov	x1, x19
   177cc:	mov	x2, x20
   177d0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   177d4:	mov	x19, x0
   177d8:	cbnz	x0, 1774c <PyInit__decimal@@Base+0x10c98>
   177dc:	mov	x20, xzr
   177e0:	mov	x0, x20
   177e4:	ldp	x20, x19, [sp, #16]
   177e8:	ldp	x29, x30, [sp], #32
   177ec:	ret
   177f0:	stp	x29, x30, [sp, #-32]!
   177f4:	stp	x20, x19, [sp, #16]
   177f8:	mov	x29, sp
   177fc:	ldr	x8, [x1, #8]
   17800:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   17804:	add	x9, x9, #0x318
   17808:	mov	x19, x1
   1780c:	cmp	x8, x9
   17810:	b.eq	1782c <PyInit__decimal@@Base+0x10d78>  // b.none
   17814:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17818:	mov	x20, x0
   1781c:	add	x1, x1, #0x318
   17820:	mov	x0, x8
   17824:	bl	6900 <PyType_IsSubtype@plt>
   17828:	cbz	w0, 17880 <PyInit__decimal@@Base+0x10dcc>
   1782c:	ldr	x8, [x19]
   17830:	add	x8, x8, #0x1
   17834:	str	x8, [x19]
   17838:	add	x0, x19, #0x18
   1783c:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
   17840:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   17844:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17848:	ldr	x8, [x8, #4024]
   1784c:	ldr	x9, [x9, #3976]
   17850:	cmp	w0, #0x0
   17854:	csel	x20, x9, x8, eq  // eq = none
   17858:	ldr	x8, [x20]
   1785c:	add	x8, x8, #0x1
   17860:	str	x8, [x20]
   17864:	ldr	x8, [x19]
   17868:	subs	x8, x8, #0x1
   1786c:	str	x8, [x19]
   17870:	b.ne	178cc <PyInit__decimal@@Base+0x10e18>  // b.any
   17874:	mov	x0, x19
   17878:	bl	6510 <_Py_Dealloc@plt>
   1787c:	b	178cc <PyInit__decimal@@Base+0x10e18>
   17880:	ldr	x8, [x19, #8]
   17884:	ldrb	w9, [x8, #171]
   17888:	tbnz	w9, #0, 178ac <PyInit__decimal@@Base+0x10df8>
   1788c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17890:	ldr	x9, [x9, #3936]
   17894:	ldr	x2, [x8, #24]
   17898:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1789c:	add	x1, x1, #0x263
   178a0:	ldr	x0, [x9]
   178a4:	bl	6950 <PyErr_Format@plt>
   178a8:	b	178c8 <PyInit__decimal@@Base+0x10e14>
   178ac:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   178b0:	add	x0, x0, #0x318
   178b4:	mov	x1, x19
   178b8:	mov	x2, x20
   178bc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   178c0:	mov	x19, x0
   178c4:	cbnz	x0, 17838 <PyInit__decimal@@Base+0x10d84>
   178c8:	mov	x20, xzr
   178cc:	mov	x0, x20
   178d0:	ldp	x20, x19, [sp, #16]
   178d4:	ldp	x29, x30, [sp], #32
   178d8:	ret
   178dc:	stp	x29, x30, [sp, #-32]!
   178e0:	stp	x20, x19, [sp, #16]
   178e4:	mov	x29, sp
   178e8:	ldr	x8, [x1, #8]
   178ec:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   178f0:	add	x9, x9, #0x318
   178f4:	mov	x19, x1
   178f8:	cmp	x8, x9
   178fc:	mov	x20, x0
   17900:	b.eq	17918 <PyInit__decimal@@Base+0x10e64>  // b.none
   17904:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17908:	add	x1, x1, #0x318
   1790c:	mov	x0, x8
   17910:	bl	6900 <PyType_IsSubtype@plt>
   17914:	cbz	w0, 17970 <PyInit__decimal@@Base+0x10ebc>
   17918:	ldr	x8, [x19]
   1791c:	add	x8, x8, #0x1
   17920:	str	x8, [x19]
   17924:	add	x0, x19, #0x18
   17928:	add	x1, x20, #0x10
   1792c:	bl	20c88 <PyInit__decimal@@Base+0x1a1d4>
   17930:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   17934:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17938:	ldr	x8, [x8, #4024]
   1793c:	ldr	x9, [x9, #3976]
   17940:	cmp	w0, #0x0
   17944:	csel	x20, x9, x8, eq  // eq = none
   17948:	ldr	x8, [x20]
   1794c:	add	x8, x8, #0x1
   17950:	str	x8, [x20]
   17954:	ldr	x8, [x19]
   17958:	subs	x8, x8, #0x1
   1795c:	str	x8, [x19]
   17960:	b.ne	179bc <PyInit__decimal@@Base+0x10f08>  // b.any
   17964:	mov	x0, x19
   17968:	bl	6510 <_Py_Dealloc@plt>
   1796c:	b	179bc <PyInit__decimal@@Base+0x10f08>
   17970:	ldr	x8, [x19, #8]
   17974:	ldrb	w9, [x8, #171]
   17978:	tbnz	w9, #0, 1799c <PyInit__decimal@@Base+0x10ee8>
   1797c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17980:	ldr	x9, [x9, #3936]
   17984:	ldr	x2, [x8, #24]
   17988:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1798c:	add	x1, x1, #0x263
   17990:	ldr	x0, [x9]
   17994:	bl	6950 <PyErr_Format@plt>
   17998:	b	179b8 <PyInit__decimal@@Base+0x10f04>
   1799c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   179a0:	add	x0, x0, #0x318
   179a4:	mov	x1, x19
   179a8:	mov	x2, x20
   179ac:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   179b0:	mov	x19, x0
   179b4:	cbnz	x0, 17924 <PyInit__decimal@@Base+0x10e70>
   179b8:	mov	x20, xzr
   179bc:	mov	x0, x20
   179c0:	ldp	x20, x19, [sp, #16]
   179c4:	ldp	x29, x30, [sp], #32
   179c8:	ret
   179cc:	stp	x29, x30, [sp, #-32]!
   179d0:	stp	x20, x19, [sp, #16]
   179d4:	mov	x29, sp
   179d8:	ldr	x8, [x1, #8]
   179dc:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   179e0:	add	x9, x9, #0x318
   179e4:	mov	x19, x1
   179e8:	cmp	x8, x9
   179ec:	b.eq	17a08 <PyInit__decimal@@Base+0x10f54>  // b.none
   179f0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   179f4:	mov	x20, x0
   179f8:	add	x1, x1, #0x318
   179fc:	mov	x0, x8
   17a00:	bl	6900 <PyType_IsSubtype@plt>
   17a04:	cbz	w0, 17a5c <PyInit__decimal@@Base+0x10fa8>
   17a08:	ldr	x8, [x19]
   17a0c:	add	x8, x8, #0x1
   17a10:	str	x8, [x19]
   17a14:	add	x0, x19, #0x18
   17a18:	bl	20c0c <PyInit__decimal@@Base+0x1a158>
   17a1c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   17a20:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17a24:	ldr	x8, [x8, #4024]
   17a28:	ldr	x9, [x9, #3976]
   17a2c:	cmp	w0, #0x0
   17a30:	csel	x20, x9, x8, eq  // eq = none
   17a34:	ldr	x8, [x20]
   17a38:	add	x8, x8, #0x1
   17a3c:	str	x8, [x20]
   17a40:	ldr	x8, [x19]
   17a44:	subs	x8, x8, #0x1
   17a48:	str	x8, [x19]
   17a4c:	b.ne	17aa8 <PyInit__decimal@@Base+0x10ff4>  // b.any
   17a50:	mov	x0, x19
   17a54:	bl	6510 <_Py_Dealloc@plt>
   17a58:	b	17aa8 <PyInit__decimal@@Base+0x10ff4>
   17a5c:	ldr	x8, [x19, #8]
   17a60:	ldrb	w9, [x8, #171]
   17a64:	tbnz	w9, #0, 17a88 <PyInit__decimal@@Base+0x10fd4>
   17a68:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17a6c:	ldr	x9, [x9, #3936]
   17a70:	ldr	x2, [x8, #24]
   17a74:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17a78:	add	x1, x1, #0x263
   17a7c:	ldr	x0, [x9]
   17a80:	bl	6950 <PyErr_Format@plt>
   17a84:	b	17aa4 <PyInit__decimal@@Base+0x10ff0>
   17a88:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17a8c:	add	x0, x0, #0x318
   17a90:	mov	x1, x19
   17a94:	mov	x2, x20
   17a98:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   17a9c:	mov	x19, x0
   17aa0:	cbnz	x0, 17a14 <PyInit__decimal@@Base+0x10f60>
   17aa4:	mov	x20, xzr
   17aa8:	mov	x0, x20
   17aac:	ldp	x20, x19, [sp, #16]
   17ab0:	ldp	x29, x30, [sp], #32
   17ab4:	ret
   17ab8:	stp	x29, x30, [sp, #-32]!
   17abc:	stp	x20, x19, [sp, #16]
   17ac0:	mov	x29, sp
   17ac4:	ldr	x8, [x1, #8]
   17ac8:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   17acc:	add	x9, x9, #0x318
   17ad0:	mov	x19, x1
   17ad4:	cmp	x8, x9
   17ad8:	b.eq	17af4 <PyInit__decimal@@Base+0x11040>  // b.none
   17adc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17ae0:	mov	x20, x0
   17ae4:	add	x1, x1, #0x318
   17ae8:	mov	x0, x8
   17aec:	bl	6900 <PyType_IsSubtype@plt>
   17af0:	cbz	w0, 17b48 <PyInit__decimal@@Base+0x11094>
   17af4:	ldr	x8, [x19]
   17af8:	add	x8, x8, #0x1
   17afc:	str	x8, [x19]
   17b00:	add	x0, x19, #0x18
   17b04:	bl	20c18 <PyInit__decimal@@Base+0x1a164>
   17b08:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   17b0c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17b10:	ldr	x8, [x8, #4024]
   17b14:	ldr	x9, [x9, #3976]
   17b18:	cmp	w0, #0x0
   17b1c:	csel	x20, x9, x8, eq  // eq = none
   17b20:	ldr	x8, [x20]
   17b24:	add	x8, x8, #0x1
   17b28:	str	x8, [x20]
   17b2c:	ldr	x8, [x19]
   17b30:	subs	x8, x8, #0x1
   17b34:	str	x8, [x19]
   17b38:	b.ne	17b94 <PyInit__decimal@@Base+0x110e0>  // b.any
   17b3c:	mov	x0, x19
   17b40:	bl	6510 <_Py_Dealloc@plt>
   17b44:	b	17b94 <PyInit__decimal@@Base+0x110e0>
   17b48:	ldr	x8, [x19, #8]
   17b4c:	ldrb	w9, [x8, #171]
   17b50:	tbnz	w9, #0, 17b74 <PyInit__decimal@@Base+0x110c0>
   17b54:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17b58:	ldr	x9, [x9, #3936]
   17b5c:	ldr	x2, [x8, #24]
   17b60:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17b64:	add	x1, x1, #0x263
   17b68:	ldr	x0, [x9]
   17b6c:	bl	6950 <PyErr_Format@plt>
   17b70:	b	17b90 <PyInit__decimal@@Base+0x110dc>
   17b74:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17b78:	add	x0, x0, #0x318
   17b7c:	mov	x1, x19
   17b80:	mov	x2, x20
   17b84:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   17b88:	mov	x19, x0
   17b8c:	cbnz	x0, 17b00 <PyInit__decimal@@Base+0x1104c>
   17b90:	mov	x20, xzr
   17b94:	mov	x0, x20
   17b98:	ldp	x20, x19, [sp, #16]
   17b9c:	ldp	x29, x30, [sp], #32
   17ba0:	ret
   17ba4:	stp	x29, x30, [sp, #-32]!
   17ba8:	stp	x20, x19, [sp, #16]
   17bac:	mov	x29, sp
   17bb0:	ldr	x8, [x1, #8]
   17bb4:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   17bb8:	add	x9, x9, #0x318
   17bbc:	mov	x19, x1
   17bc0:	cmp	x8, x9
   17bc4:	b.eq	17be0 <PyInit__decimal@@Base+0x1112c>  // b.none
   17bc8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17bcc:	mov	x20, x0
   17bd0:	add	x1, x1, #0x318
   17bd4:	mov	x0, x8
   17bd8:	bl	6900 <PyType_IsSubtype@plt>
   17bdc:	cbz	w0, 17c34 <PyInit__decimal@@Base+0x11180>
   17be0:	ldr	x8, [x19]
   17be4:	add	x8, x8, #0x1
   17be8:	str	x8, [x19]
   17bec:	add	x0, x19, #0x18
   17bf0:	bl	20c24 <PyInit__decimal@@Base+0x1a170>
   17bf4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   17bf8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17bfc:	ldr	x8, [x8, #4024]
   17c00:	ldr	x9, [x9, #3976]
   17c04:	cmp	w0, #0x0
   17c08:	csel	x20, x9, x8, eq  // eq = none
   17c0c:	ldr	x8, [x20]
   17c10:	add	x8, x8, #0x1
   17c14:	str	x8, [x20]
   17c18:	ldr	x8, [x19]
   17c1c:	subs	x8, x8, #0x1
   17c20:	str	x8, [x19]
   17c24:	b.ne	17c80 <PyInit__decimal@@Base+0x111cc>  // b.any
   17c28:	mov	x0, x19
   17c2c:	bl	6510 <_Py_Dealloc@plt>
   17c30:	b	17c80 <PyInit__decimal@@Base+0x111cc>
   17c34:	ldr	x8, [x19, #8]
   17c38:	ldrb	w9, [x8, #171]
   17c3c:	tbnz	w9, #0, 17c60 <PyInit__decimal@@Base+0x111ac>
   17c40:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17c44:	ldr	x9, [x9, #3936]
   17c48:	ldr	x2, [x8, #24]
   17c4c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17c50:	add	x1, x1, #0x263
   17c54:	ldr	x0, [x9]
   17c58:	bl	6950 <PyErr_Format@plt>
   17c5c:	b	17c7c <PyInit__decimal@@Base+0x111c8>
   17c60:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17c64:	add	x0, x0, #0x318
   17c68:	mov	x1, x19
   17c6c:	mov	x2, x20
   17c70:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   17c74:	mov	x19, x0
   17c78:	cbnz	x0, 17bec <PyInit__decimal@@Base+0x11138>
   17c7c:	mov	x20, xzr
   17c80:	mov	x0, x20
   17c84:	ldp	x20, x19, [sp, #16]
   17c88:	ldp	x29, x30, [sp], #32
   17c8c:	ret
   17c90:	stp	x29, x30, [sp, #-32]!
   17c94:	stp	x20, x19, [sp, #16]
   17c98:	mov	x29, sp
   17c9c:	ldr	x8, [x1, #8]
   17ca0:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   17ca4:	add	x9, x9, #0x318
   17ca8:	mov	x19, x1
   17cac:	cmp	x8, x9
   17cb0:	mov	x20, x0
   17cb4:	b.eq	17ccc <PyInit__decimal@@Base+0x11218>  // b.none
   17cb8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17cbc:	add	x1, x1, #0x318
   17cc0:	mov	x0, x8
   17cc4:	bl	6900 <PyType_IsSubtype@plt>
   17cc8:	cbz	w0, 17d24 <PyInit__decimal@@Base+0x11270>
   17ccc:	ldr	x8, [x19]
   17cd0:	add	x8, x8, #0x1
   17cd4:	str	x8, [x19]
   17cd8:	add	x0, x19, #0x18
   17cdc:	add	x1, x20, #0x10
   17ce0:	bl	20ccc <PyInit__decimal@@Base+0x1a218>
   17ce4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   17ce8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17cec:	ldr	x8, [x8, #4024]
   17cf0:	ldr	x9, [x9, #3976]
   17cf4:	cmp	w0, #0x0
   17cf8:	csel	x20, x9, x8, eq  // eq = none
   17cfc:	ldr	x8, [x20]
   17d00:	add	x8, x8, #0x1
   17d04:	str	x8, [x20]
   17d08:	ldr	x8, [x19]
   17d0c:	subs	x8, x8, #0x1
   17d10:	str	x8, [x19]
   17d14:	b.ne	17d70 <PyInit__decimal@@Base+0x112bc>  // b.any
   17d18:	mov	x0, x19
   17d1c:	bl	6510 <_Py_Dealloc@plt>
   17d20:	b	17d70 <PyInit__decimal@@Base+0x112bc>
   17d24:	ldr	x8, [x19, #8]
   17d28:	ldrb	w9, [x8, #171]
   17d2c:	tbnz	w9, #0, 17d50 <PyInit__decimal@@Base+0x1129c>
   17d30:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17d34:	ldr	x9, [x9, #3936]
   17d38:	ldr	x2, [x8, #24]
   17d3c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17d40:	add	x1, x1, #0x263
   17d44:	ldr	x0, [x9]
   17d48:	bl	6950 <PyErr_Format@plt>
   17d4c:	b	17d6c <PyInit__decimal@@Base+0x112b8>
   17d50:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17d54:	add	x0, x0, #0x318
   17d58:	mov	x1, x19
   17d5c:	mov	x2, x20
   17d60:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   17d64:	mov	x19, x0
   17d68:	cbnz	x0, 17cd8 <PyInit__decimal@@Base+0x11224>
   17d6c:	mov	x20, xzr
   17d70:	mov	x0, x20
   17d74:	ldp	x20, x19, [sp, #16]
   17d78:	ldp	x29, x30, [sp], #32
   17d7c:	ret
   17d80:	stp	x29, x30, [sp, #-32]!
   17d84:	stp	x20, x19, [sp, #16]
   17d88:	mov	x29, sp
   17d8c:	ldr	x8, [x1, #8]
   17d90:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   17d94:	add	x9, x9, #0x318
   17d98:	mov	x19, x1
   17d9c:	cmp	x8, x9
   17da0:	b.eq	17dbc <PyInit__decimal@@Base+0x11308>  // b.none
   17da4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17da8:	mov	x20, x0
   17dac:	add	x1, x1, #0x318
   17db0:	mov	x0, x8
   17db4:	bl	6900 <PyType_IsSubtype@plt>
   17db8:	cbz	w0, 17e10 <PyInit__decimal@@Base+0x1135c>
   17dbc:	ldr	x8, [x19]
   17dc0:	add	x8, x8, #0x1
   17dc4:	str	x8, [x19]
   17dc8:	add	x0, x19, #0x18
   17dcc:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
   17dd0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   17dd4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17dd8:	ldr	x8, [x8, #4024]
   17ddc:	ldr	x9, [x9, #3976]
   17de0:	cmp	w0, #0x0
   17de4:	csel	x20, x9, x8, eq  // eq = none
   17de8:	ldr	x8, [x20]
   17dec:	add	x8, x8, #0x1
   17df0:	str	x8, [x20]
   17df4:	ldr	x8, [x19]
   17df8:	subs	x8, x8, #0x1
   17dfc:	str	x8, [x19]
   17e00:	b.ne	17e5c <PyInit__decimal@@Base+0x113a8>  // b.any
   17e04:	mov	x0, x19
   17e08:	bl	6510 <_Py_Dealloc@plt>
   17e0c:	b	17e5c <PyInit__decimal@@Base+0x113a8>
   17e10:	ldr	x8, [x19, #8]
   17e14:	ldrb	w9, [x8, #171]
   17e18:	tbnz	w9, #0, 17e3c <PyInit__decimal@@Base+0x11388>
   17e1c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17e20:	ldr	x9, [x9, #3936]
   17e24:	ldr	x2, [x8, #24]
   17e28:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17e2c:	add	x1, x1, #0x263
   17e30:	ldr	x0, [x9]
   17e34:	bl	6950 <PyErr_Format@plt>
   17e38:	b	17e58 <PyInit__decimal@@Base+0x113a4>
   17e3c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17e40:	add	x0, x0, #0x318
   17e44:	mov	x1, x19
   17e48:	mov	x2, x20
   17e4c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   17e50:	mov	x19, x0
   17e54:	cbnz	x0, 17dc8 <PyInit__decimal@@Base+0x11314>
   17e58:	mov	x20, xzr
   17e5c:	mov	x0, x20
   17e60:	ldp	x20, x19, [sp, #16]
   17e64:	ldp	x29, x30, [sp], #32
   17e68:	ret
   17e6c:	stp	x29, x30, [sp, #-32]!
   17e70:	stp	x20, x19, [sp, #16]
   17e74:	mov	x29, sp
   17e78:	ldr	x8, [x1, #8]
   17e7c:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   17e80:	add	x9, x9, #0x318
   17e84:	mov	x19, x1
   17e88:	cmp	x8, x9
   17e8c:	mov	x20, x0
   17e90:	b.eq	17ea8 <PyInit__decimal@@Base+0x113f4>  // b.none
   17e94:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17e98:	add	x1, x1, #0x318
   17e9c:	mov	x0, x8
   17ea0:	bl	6900 <PyType_IsSubtype@plt>
   17ea4:	cbz	w0, 17ee0 <PyInit__decimal@@Base+0x1142c>
   17ea8:	ldr	x8, [x19]
   17eac:	add	x8, x8, #0x1
   17eb0:	str	x8, [x19]
   17eb4:	mov	x0, x19
   17eb8:	mov	x1, x20
   17ebc:	bl	1a3e8 <PyInit__decimal@@Base+0x13934>
   17ec0:	ldr	x8, [x19]
   17ec4:	mov	x20, x0
   17ec8:	subs	x8, x8, #0x1
   17ecc:	str	x8, [x19]
   17ed0:	b.ne	17f2c <PyInit__decimal@@Base+0x11478>  // b.any
   17ed4:	mov	x0, x19
   17ed8:	bl	6510 <_Py_Dealloc@plt>
   17edc:	b	17f2c <PyInit__decimal@@Base+0x11478>
   17ee0:	ldr	x8, [x19, #8]
   17ee4:	ldrb	w9, [x8, #171]
   17ee8:	tbnz	w9, #0, 17f0c <PyInit__decimal@@Base+0x11458>
   17eec:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   17ef0:	ldr	x9, [x9, #3936]
   17ef4:	ldr	x2, [x8, #24]
   17ef8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17efc:	add	x1, x1, #0x263
   17f00:	ldr	x0, [x9]
   17f04:	bl	6950 <PyErr_Format@plt>
   17f08:	b	17f28 <PyInit__decimal@@Base+0x11474>
   17f0c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   17f10:	add	x0, x0, #0x318
   17f14:	mov	x1, x19
   17f18:	mov	x2, x20
   17f1c:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   17f20:	mov	x19, x0
   17f24:	cbnz	x0, 17eb4 <PyInit__decimal@@Base+0x11400>
   17f28:	mov	x20, xzr
   17f2c:	mov	x0, x20
   17f30:	ldp	x20, x19, [sp, #16]
   17f34:	ldp	x29, x30, [sp], #32
   17f38:	ret
   17f3c:	stp	x29, x30, [sp, #-32]!
   17f40:	str	x19, [sp, #16]
   17f44:	mov	x29, sp
   17f48:	ldr	x0, [x1, #8]
   17f4c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   17f50:	add	x8, x8, #0x318
   17f54:	mov	x19, x1
   17f58:	cmp	x0, x8
   17f5c:	b.eq	17f70 <PyInit__decimal@@Base+0x114bc>  // b.none
   17f60:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17f64:	add	x1, x1, #0x318
   17f68:	bl	6900 <PyType_IsSubtype@plt>
   17f6c:	cbz	w0, 17f80 <PyInit__decimal@@Base+0x114cc>
   17f70:	ldr	x8, [x19]
   17f74:	add	x8, x8, #0x1
   17f78:	str	x8, [x19]
   17f7c:	b	17f9c <PyInit__decimal@@Base+0x114e8>
   17f80:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   17f84:	ldr	x8, [x8, #3936]
   17f88:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   17f8c:	add	x1, x1, #0xc24
   17f90:	ldr	x0, [x8]
   17f94:	bl	6590 <PyErr_SetString@plt>
   17f98:	mov	x19, xzr
   17f9c:	mov	x0, x19
   17fa0:	ldr	x19, [sp, #16]
   17fa4:	ldp	x29, x30, [sp], #32
   17fa8:	ret
   17fac:	stp	x29, x30, [sp, #-48]!
   17fb0:	str	x21, [sp, #16]
   17fb4:	stp	x20, x19, [sp, #32]
   17fb8:	mov	x29, sp
   17fbc:	str	wzr, [x29, #28]
   17fc0:	ldr	x8, [x1, #8]
   17fc4:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   17fc8:	add	x9, x9, #0x318
   17fcc:	mov	x19, x1
   17fd0:	cmp	x8, x9
   17fd4:	mov	x20, x0
   17fd8:	b.eq	17ff0 <PyInit__decimal@@Base+0x1153c>  // b.none
   17fdc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   17fe0:	add	x1, x1, #0x318
   17fe4:	mov	x0, x8
   17fe8:	bl	6900 <PyType_IsSubtype@plt>
   17fec:	cbz	w0, 1809c <PyInit__decimal@@Base+0x115e8>
   17ff0:	ldr	x8, [x19]
   17ff4:	add	x8, x8, #0x1
   17ff8:	str	x8, [x19]
   17ffc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18000:	add	x0, x0, #0x318
   18004:	bl	6890 <_PyObject_New@plt>
   18008:	cbz	x0, 18080 <PyInit__decimal@@Base+0x115cc>
   1800c:	mov	w8, #0x30                  	// #48
   18010:	mov	x21, x0
   18014:	strb	w8, [x0, #24]!
   18018:	mov	x9, #0xffffffffffffffff    	// #-1
   1801c:	mov	w10, #0x4                   	// #4
   18020:	add	x8, x0, #0x30
   18024:	add	x1, x19, #0x18
   18028:	add	x2, x29, #0x1c
   1802c:	stur	x9, [x0, #-8]
   18030:	stp	xzr, xzr, [x0, #8]
   18034:	stp	xzr, x10, [x0, #24]
   18038:	str	x8, [x0, #40]
   1803c:	bl	2340c <PyInit__decimal@@Base+0x1c958>
   18040:	ldr	x8, [x19]
   18044:	subs	x8, x8, #0x1
   18048:	str	x8, [x19]
   1804c:	b.ne	18058 <PyInit__decimal@@Base+0x115a4>  // b.any
   18050:	mov	x0, x19
   18054:	bl	6510 <_Py_Dealloc@plt>
   18058:	ldr	w1, [x29, #28]
   1805c:	mov	x0, x20
   18060:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   18064:	cbz	w0, 180e8 <PyInit__decimal@@Base+0x11634>
   18068:	ldr	x8, [x21]
   1806c:	subs	x8, x8, #0x1
   18070:	str	x8, [x21]
   18074:	b.ne	180e4 <PyInit__decimal@@Base+0x11630>  // b.any
   18078:	mov	x0, x21
   1807c:	b	18094 <PyInit__decimal@@Base+0x115e0>
   18080:	ldr	x8, [x19]
   18084:	subs	x8, x8, #0x1
   18088:	str	x8, [x19]
   1808c:	b.ne	180e4 <PyInit__decimal@@Base+0x11630>  // b.any
   18090:	mov	x0, x19
   18094:	bl	6510 <_Py_Dealloc@plt>
   18098:	b	180e4 <PyInit__decimal@@Base+0x11630>
   1809c:	ldr	x8, [x19, #8]
   180a0:	ldrb	w9, [x8, #171]
   180a4:	tbnz	w9, #0, 180c8 <PyInit__decimal@@Base+0x11614>
   180a8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   180ac:	ldr	x9, [x9, #3936]
   180b0:	ldr	x2, [x8, #24]
   180b4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   180b8:	add	x1, x1, #0x263
   180bc:	ldr	x0, [x9]
   180c0:	bl	6950 <PyErr_Format@plt>
   180c4:	b	180e4 <PyInit__decimal@@Base+0x11630>
   180c8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   180cc:	add	x0, x0, #0x318
   180d0:	mov	x1, x19
   180d4:	mov	x2, x20
   180d8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   180dc:	mov	x19, x0
   180e0:	cbnz	x0, 17ffc <PyInit__decimal@@Base+0x11548>
   180e4:	mov	x21, xzr
   180e8:	mov	x0, x21
   180ec:	ldp	x20, x19, [sp, #32]
   180f0:	ldr	x21, [sp, #16]
   180f4:	ldp	x29, x30, [sp], #48
   180f8:	ret
   180fc:	stp	x29, x30, [sp, #-32]!
   18100:	stp	x20, x19, [sp, #16]
   18104:	mov	x29, sp
   18108:	ldr	x8, [x1, #8]
   1810c:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   18110:	add	x9, x9, #0x318
   18114:	mov	x19, x1
   18118:	cmp	x8, x9
   1811c:	b.eq	18138 <PyInit__decimal@@Base+0x11684>  // b.none
   18120:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   18124:	mov	x20, x0
   18128:	add	x1, x1, #0x318
   1812c:	mov	x0, x8
   18130:	bl	6900 <PyType_IsSubtype@plt>
   18134:	cbz	w0, 18154 <PyInit__decimal@@Base+0x116a0>
   18138:	ldr	x8, [x19]
   1813c:	add	x8, x8, #0x1
   18140:	str	x8, [x19]
   18144:	mov	x0, x19
   18148:	ldp	x20, x19, [sp, #16]
   1814c:	ldp	x29, x30, [sp], #32
   18150:	ret
   18154:	ldr	x8, [x19, #8]
   18158:	ldrb	w9, [x8, #171]
   1815c:	tbnz	w9, #0, 18180 <PyInit__decimal@@Base+0x116cc>
   18160:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   18164:	ldr	x9, [x9, #3936]
   18168:	ldr	x2, [x8, #24]
   1816c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18170:	add	x1, x1, #0x263
   18174:	ldr	x0, [x9]
   18178:	bl	6950 <PyErr_Format@plt>
   1817c:	b	1819c <PyInit__decimal@@Base+0x116e8>
   18180:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18184:	add	x0, x0, #0x318
   18188:	mov	x1, x19
   1818c:	mov	x2, x20
   18190:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   18194:	mov	x19, x0
   18198:	cbnz	x0, 18144 <PyInit__decimal@@Base+0x11690>
   1819c:	mov	x19, xzr
   181a0:	b	18144 <PyInit__decimal@@Base+0x11690>
   181a4:	stp	x29, x30, [sp, #-48]!
   181a8:	str	x21, [sp, #16]
   181ac:	stp	x20, x19, [sp, #32]
   181b0:	mov	x29, sp
   181b4:	str	wzr, [x29, #28]
   181b8:	ldr	x8, [x1, #8]
   181bc:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   181c0:	add	x9, x9, #0x318
   181c4:	mov	x19, x1
   181c8:	cmp	x8, x9
   181cc:	mov	x20, x0
   181d0:	b.eq	181e8 <PyInit__decimal@@Base+0x11734>  // b.none
   181d4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   181d8:	add	x1, x1, #0x318
   181dc:	mov	x0, x8
   181e0:	bl	6900 <PyType_IsSubtype@plt>
   181e4:	cbz	w0, 18294 <PyInit__decimal@@Base+0x117e0>
   181e8:	ldr	x8, [x19]
   181ec:	add	x8, x8, #0x1
   181f0:	str	x8, [x19]
   181f4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   181f8:	add	x0, x0, #0x318
   181fc:	bl	6890 <_PyObject_New@plt>
   18200:	cbz	x0, 18278 <PyInit__decimal@@Base+0x117c4>
   18204:	mov	w8, #0x30                  	// #48
   18208:	mov	x21, x0
   1820c:	strb	w8, [x0, #24]!
   18210:	mov	x9, #0xffffffffffffffff    	// #-1
   18214:	mov	w10, #0x4                   	// #4
   18218:	add	x8, x0, #0x30
   1821c:	add	x1, x19, #0x18
   18220:	add	x2, x29, #0x1c
   18224:	stur	x9, [x0, #-8]
   18228:	stp	xzr, xzr, [x0, #8]
   1822c:	stp	xzr, x10, [x0, #24]
   18230:	str	x8, [x0, #40]
   18234:	bl	234c4 <PyInit__decimal@@Base+0x1ca10>
   18238:	ldr	x8, [x19]
   1823c:	subs	x8, x8, #0x1
   18240:	str	x8, [x19]
   18244:	b.ne	18250 <PyInit__decimal@@Base+0x1179c>  // b.any
   18248:	mov	x0, x19
   1824c:	bl	6510 <_Py_Dealloc@plt>
   18250:	ldr	w1, [x29, #28]
   18254:	mov	x0, x20
   18258:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1825c:	cbz	w0, 182e0 <PyInit__decimal@@Base+0x1182c>
   18260:	ldr	x8, [x21]
   18264:	subs	x8, x8, #0x1
   18268:	str	x8, [x21]
   1826c:	b.ne	182dc <PyInit__decimal@@Base+0x11828>  // b.any
   18270:	mov	x0, x21
   18274:	b	1828c <PyInit__decimal@@Base+0x117d8>
   18278:	ldr	x8, [x19]
   1827c:	subs	x8, x8, #0x1
   18280:	str	x8, [x19]
   18284:	b.ne	182dc <PyInit__decimal@@Base+0x11828>  // b.any
   18288:	mov	x0, x19
   1828c:	bl	6510 <_Py_Dealloc@plt>
   18290:	b	182dc <PyInit__decimal@@Base+0x11828>
   18294:	ldr	x8, [x19, #8]
   18298:	ldrb	w9, [x8, #171]
   1829c:	tbnz	w9, #0, 182c0 <PyInit__decimal@@Base+0x1180c>
   182a0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   182a4:	ldr	x9, [x9, #3936]
   182a8:	ldr	x2, [x8, #24]
   182ac:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   182b0:	add	x1, x1, #0x263
   182b4:	ldr	x0, [x9]
   182b8:	bl	6950 <PyErr_Format@plt>
   182bc:	b	182dc <PyInit__decimal@@Base+0x11828>
   182c0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   182c4:	add	x0, x0, #0x318
   182c8:	mov	x1, x19
   182cc:	mov	x2, x20
   182d0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   182d4:	mov	x19, x0
   182d8:	cbnz	x0, 181f4 <PyInit__decimal@@Base+0x11740>
   182dc:	mov	x21, xzr
   182e0:	mov	x0, x21
   182e4:	ldp	x20, x19, [sp, #32]
   182e8:	ldr	x21, [sp, #16]
   182ec:	ldp	x29, x30, [sp], #48
   182f0:	ret
   182f4:	stp	x29, x30, [sp, #-48]!
   182f8:	str	x21, [sp, #16]
   182fc:	stp	x20, x19, [sp, #32]
   18300:	mov	x29, sp
   18304:	str	wzr, [x29, #28]
   18308:	ldr	x8, [x1, #8]
   1830c:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   18310:	add	x9, x9, #0x318
   18314:	mov	x19, x1
   18318:	cmp	x8, x9
   1831c:	mov	x20, x0
   18320:	b.eq	18338 <PyInit__decimal@@Base+0x11884>  // b.none
   18324:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   18328:	add	x1, x1, #0x318
   1832c:	mov	x0, x8
   18330:	bl	6900 <PyType_IsSubtype@plt>
   18334:	cbz	w0, 183e8 <PyInit__decimal@@Base+0x11934>
   18338:	ldr	x8, [x19]
   1833c:	add	x8, x8, #0x1
   18340:	str	x8, [x19]
   18344:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18348:	add	x0, x0, #0x318
   1834c:	bl	6890 <_PyObject_New@plt>
   18350:	cbz	x0, 183cc <PyInit__decimal@@Base+0x11918>
   18354:	mov	w8, #0x30                  	// #48
   18358:	mov	x21, x0
   1835c:	strb	w8, [x0, #24]!
   18360:	mov	x9, #0xffffffffffffffff    	// #-1
   18364:	mov	w10, #0x4                   	// #4
   18368:	add	x1, x19, #0x18
   1836c:	add	x8, x0, #0x30
   18370:	add	x2, x20, #0x10
   18374:	add	x3, x29, #0x1c
   18378:	stur	x9, [x0, #-8]
   1837c:	stp	xzr, xzr, [x0, #8]
   18380:	stp	xzr, x10, [x0, #24]
   18384:	str	x8, [x0, #40]
   18388:	bl	25204 <PyInit__decimal@@Base+0x1e750>
   1838c:	ldr	x8, [x19]
   18390:	subs	x8, x8, #0x1
   18394:	str	x8, [x19]
   18398:	b.ne	183a4 <PyInit__decimal@@Base+0x118f0>  // b.any
   1839c:	mov	x0, x19
   183a0:	bl	6510 <_Py_Dealloc@plt>
   183a4:	ldr	w1, [x29, #28]
   183a8:	mov	x0, x20
   183ac:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   183b0:	cbz	w0, 18434 <PyInit__decimal@@Base+0x11980>
   183b4:	ldr	x8, [x21]
   183b8:	subs	x8, x8, #0x1
   183bc:	str	x8, [x21]
   183c0:	b.ne	18430 <PyInit__decimal@@Base+0x1197c>  // b.any
   183c4:	mov	x0, x21
   183c8:	b	183e0 <PyInit__decimal@@Base+0x1192c>
   183cc:	ldr	x8, [x19]
   183d0:	subs	x8, x8, #0x1
   183d4:	str	x8, [x19]
   183d8:	b.ne	18430 <PyInit__decimal@@Base+0x1197c>  // b.any
   183dc:	mov	x0, x19
   183e0:	bl	6510 <_Py_Dealloc@plt>
   183e4:	b	18430 <PyInit__decimal@@Base+0x1197c>
   183e8:	ldr	x8, [x19, #8]
   183ec:	ldrb	w9, [x8, #171]
   183f0:	tbnz	w9, #0, 18414 <PyInit__decimal@@Base+0x11960>
   183f4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   183f8:	ldr	x9, [x9, #3936]
   183fc:	ldr	x2, [x8, #24]
   18400:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18404:	add	x1, x1, #0x263
   18408:	ldr	x0, [x9]
   1840c:	bl	6950 <PyErr_Format@plt>
   18410:	b	18430 <PyInit__decimal@@Base+0x1197c>
   18414:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18418:	add	x0, x0, #0x318
   1841c:	mov	x1, x19
   18420:	mov	x2, x20
   18424:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   18428:	mov	x19, x0
   1842c:	cbnz	x0, 18344 <PyInit__decimal@@Base+0x11890>
   18430:	mov	x21, xzr
   18434:	mov	x0, x21
   18438:	ldp	x20, x19, [sp, #32]
   1843c:	ldr	x21, [sp, #16]
   18440:	ldp	x29, x30, [sp], #48
   18444:	ret
   18448:	stp	x29, x30, [sp, #-48]!
   1844c:	str	x21, [sp, #16]
   18450:	stp	x20, x19, [sp, #32]
   18454:	mov	x29, sp
   18458:	str	wzr, [x29, #28]
   1845c:	ldr	x8, [x1, #8]
   18460:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   18464:	add	x9, x9, #0x318
   18468:	mov	x19, x1
   1846c:	cmp	x8, x9
   18470:	mov	x20, x0
   18474:	b.eq	1848c <PyInit__decimal@@Base+0x119d8>  // b.none
   18478:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1847c:	add	x1, x1, #0x318
   18480:	mov	x0, x8
   18484:	bl	6900 <PyType_IsSubtype@plt>
   18488:	cbz	w0, 1853c <PyInit__decimal@@Base+0x11a88>
   1848c:	ldr	x8, [x19]
   18490:	add	x8, x8, #0x1
   18494:	str	x8, [x19]
   18498:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1849c:	add	x0, x0, #0x318
   184a0:	bl	6890 <_PyObject_New@plt>
   184a4:	cbz	x0, 18520 <PyInit__decimal@@Base+0x11a6c>
   184a8:	mov	w8, #0x30                  	// #48
   184ac:	mov	x21, x0
   184b0:	strb	w8, [x0, #24]!
   184b4:	mov	x9, #0xffffffffffffffff    	// #-1
   184b8:	mov	w10, #0x4                   	// #4
   184bc:	add	x1, x19, #0x18
   184c0:	add	x8, x0, #0x30
   184c4:	add	x2, x20, #0x10
   184c8:	add	x3, x29, #0x1c
   184cc:	stur	x9, [x0, #-8]
   184d0:	stp	xzr, xzr, [x0, #8]
   184d4:	stp	xzr, x10, [x0, #24]
   184d8:	str	x8, [x0, #40]
   184dc:	bl	24e1c <PyInit__decimal@@Base+0x1e368>
   184e0:	ldr	x8, [x19]
   184e4:	subs	x8, x8, #0x1
   184e8:	str	x8, [x19]
   184ec:	b.ne	184f8 <PyInit__decimal@@Base+0x11a44>  // b.any
   184f0:	mov	x0, x19
   184f4:	bl	6510 <_Py_Dealloc@plt>
   184f8:	ldr	w1, [x29, #28]
   184fc:	mov	x0, x20
   18500:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   18504:	cbz	w0, 18588 <PyInit__decimal@@Base+0x11ad4>
   18508:	ldr	x8, [x21]
   1850c:	subs	x8, x8, #0x1
   18510:	str	x8, [x21]
   18514:	b.ne	18584 <PyInit__decimal@@Base+0x11ad0>  // b.any
   18518:	mov	x0, x21
   1851c:	b	18534 <PyInit__decimal@@Base+0x11a80>
   18520:	ldr	x8, [x19]
   18524:	subs	x8, x8, #0x1
   18528:	str	x8, [x19]
   1852c:	b.ne	18584 <PyInit__decimal@@Base+0x11ad0>  // b.any
   18530:	mov	x0, x19
   18534:	bl	6510 <_Py_Dealloc@plt>
   18538:	b	18584 <PyInit__decimal@@Base+0x11ad0>
   1853c:	ldr	x8, [x19, #8]
   18540:	ldrb	w9, [x8, #171]
   18544:	tbnz	w9, #0, 18568 <PyInit__decimal@@Base+0x11ab4>
   18548:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1854c:	ldr	x9, [x9, #3936]
   18550:	ldr	x2, [x8, #24]
   18554:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18558:	add	x1, x1, #0x263
   1855c:	ldr	x0, [x9]
   18560:	bl	6950 <PyErr_Format@plt>
   18564:	b	18584 <PyInit__decimal@@Base+0x11ad0>
   18568:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1856c:	add	x0, x0, #0x318
   18570:	mov	x1, x19
   18574:	mov	x2, x20
   18578:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1857c:	mov	x19, x0
   18580:	cbnz	x0, 18498 <PyInit__decimal@@Base+0x119e4>
   18584:	mov	x21, xzr
   18588:	mov	x0, x21
   1858c:	ldp	x20, x19, [sp, #32]
   18590:	ldr	x21, [sp, #16]
   18594:	ldp	x29, x30, [sp], #48
   18598:	ret
   1859c:	stp	x29, x30, [sp, #-32]!
   185a0:	stp	x20, x19, [sp, #16]
   185a4:	mov	x29, sp
   185a8:	ldr	x8, [x1, #8]
   185ac:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   185b0:	add	x9, x9, #0x318
   185b4:	mov	x19, x1
   185b8:	cmp	x8, x9
   185bc:	mov	x20, x0
   185c0:	b.eq	185d8 <PyInit__decimal@@Base+0x11b24>  // b.none
   185c4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   185c8:	add	x1, x1, #0x318
   185cc:	mov	x0, x8
   185d0:	bl	6900 <PyType_IsSubtype@plt>
   185d4:	cbz	w0, 1861c <PyInit__decimal@@Base+0x11b68>
   185d8:	ldr	x8, [x19]
   185dc:	add	x8, x8, #0x1
   185e0:	str	x8, [x19]
   185e4:	add	x0, x19, #0x18
   185e8:	add	x1, x20, #0x10
   185ec:	bl	24d20 <PyInit__decimal@@Base+0x1e26c>
   185f0:	ldr	x8, [x19]
   185f4:	mov	x20, x0
   185f8:	subs	x8, x8, #0x1
   185fc:	str	x8, [x19]
   18600:	b.ne	1860c <PyInit__decimal@@Base+0x11b58>  // b.any
   18604:	mov	x0, x19
   18608:	bl	6510 <_Py_Dealloc@plt>
   1860c:	mov	x0, x20
   18610:	ldp	x20, x19, [sp, #16]
   18614:	ldp	x29, x30, [sp], #32
   18618:	b	68a0 <PyUnicode_FromString@plt>
   1861c:	ldr	x8, [x19, #8]
   18620:	ldrb	w9, [x8, #171]
   18624:	tbnz	w9, #0, 18648 <PyInit__decimal@@Base+0x11b94>
   18628:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1862c:	ldr	x9, [x9, #3936]
   18630:	ldr	x2, [x8, #24]
   18634:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18638:	add	x1, x1, #0x263
   1863c:	ldr	x0, [x9]
   18640:	bl	6950 <PyErr_Format@plt>
   18644:	b	18664 <PyInit__decimal@@Base+0x11bb0>
   18648:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1864c:	add	x0, x0, #0x318
   18650:	mov	x1, x19
   18654:	mov	x2, x20
   18658:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1865c:	mov	x19, x0
   18660:	cbnz	x0, 185e4 <PyInit__decimal@@Base+0x11b30>
   18664:	ldp	x20, x19, [sp, #16]
   18668:	mov	x0, xzr
   1866c:	ldp	x29, x30, [sp], #32
   18670:	ret
   18674:	stp	x29, x30, [sp, #-48]!
   18678:	str	x21, [sp, #16]
   1867c:	stp	x20, x19, [sp, #32]
   18680:	mov	x29, sp
   18684:	ldr	x8, [x1, #8]
   18688:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   1868c:	add	x9, x9, #0x318
   18690:	mov	x19, x1
   18694:	cmp	x8, x9
   18698:	mov	x20, x0
   1869c:	b.eq	186b4 <PyInit__decimal@@Base+0x11c00>  // b.none
   186a0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   186a4:	add	x1, x1, #0x318
   186a8:	mov	x0, x8
   186ac:	bl	6900 <PyType_IsSubtype@plt>
   186b0:	cbz	w0, 18728 <PyInit__decimal@@Base+0x11c74>
   186b4:	ldr	x8, [x19]
   186b8:	add	x8, x8, #0x1
   186bc:	str	x8, [x19]
   186c0:	ldr	w2, [x20, #80]
   186c4:	add	x1, x19, #0x18
   186c8:	add	x0, x29, #0x18
   186cc:	bl	1ea34 <PyInit__decimal@@Base+0x17f80>
   186d0:	ldr	x8, [x19]
   186d4:	mov	x20, x0
   186d8:	subs	x8, x8, #0x1
   186dc:	str	x8, [x19]
   186e0:	b.eq	18710 <PyInit__decimal@@Base+0x11c5c>  // b.none
   186e4:	tbnz	x20, #63, 1871c <PyInit__decimal@@Base+0x11c68>
   186e8:	ldr	x21, [x29, #24]
   186ec:	mov	w1, #0x7f                  	// #127
   186f0:	mov	x0, x20
   186f4:	bl	6990 <PyUnicode_New@plt>
   186f8:	mov	x19, x0
   186fc:	cbz	x0, 18774 <PyInit__decimal@@Base+0x11cc0>
   18700:	ldr	w8, [x19, #32]
   18704:	tbnz	w8, #5, 18758 <PyInit__decimal@@Base+0x11ca4>
   18708:	ldr	x0, [x19, #72]
   1870c:	b	18768 <PyInit__decimal@@Base+0x11cb4>
   18710:	mov	x0, x19
   18714:	bl	6510 <_Py_Dealloc@plt>
   18718:	tbz	x20, #63, 186e8 <PyInit__decimal@@Base+0x11c34>
   1871c:	bl	6520 <PyErr_NoMemory@plt>
   18720:	mov	x19, xzr
   18724:	b	18784 <PyInit__decimal@@Base+0x11cd0>
   18728:	ldr	x8, [x19, #8]
   1872c:	ldrb	w9, [x8, #171]
   18730:	tbnz	w9, #0, 18798 <PyInit__decimal@@Base+0x11ce4>
   18734:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   18738:	ldr	x9, [x9, #3936]
   1873c:	ldr	x2, [x8, #24]
   18740:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18744:	add	x1, x1, #0x263
   18748:	ldr	x0, [x9]
   1874c:	bl	6950 <PyErr_Format@plt>
   18750:	mov	x19, xzr
   18754:	b	18784 <PyInit__decimal@@Base+0x11cd0>
   18758:	add	x9, x19, #0x30
   1875c:	add	x10, x19, #0x48
   18760:	tst	w8, #0x40
   18764:	csel	x0, x10, x9, eq  // eq = none
   18768:	mov	x1, x21
   1876c:	mov	x2, x20
   18770:	bl	63c0 <memcpy@plt>
   18774:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   18778:	ldr	x8, [x8, #1376]
   1877c:	ldr	x0, [x29, #24]
   18780:	blr	x8
   18784:	mov	x0, x19
   18788:	ldp	x20, x19, [sp, #32]
   1878c:	ldr	x21, [sp, #16]
   18790:	ldp	x29, x30, [sp], #48
   18794:	ret
   18798:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1879c:	add	x0, x0, #0x318
   187a0:	mov	x1, x19
   187a4:	mov	x2, x20
   187a8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   187ac:	mov	x19, x0
   187b0:	cbnz	x0, 186c0 <PyInit__decimal@@Base+0x11c0c>
   187b4:	b	18784 <PyInit__decimal@@Base+0x11cd0>
   187b8:	stp	x29, x30, [sp, #-48]!
   187bc:	str	x21, [sp, #16]
   187c0:	stp	x20, x19, [sp, #32]
   187c4:	mov	x29, sp
   187c8:	ldr	x8, [x1, #8]
   187cc:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   187d0:	add	x9, x9, #0x318
   187d4:	mov	x19, x1
   187d8:	cmp	x8, x9
   187dc:	mov	x20, x0
   187e0:	b.eq	187f8 <PyInit__decimal@@Base+0x11d44>  // b.none
   187e4:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   187e8:	add	x1, x1, #0x318
   187ec:	mov	x0, x8
   187f0:	bl	6900 <PyType_IsSubtype@plt>
   187f4:	cbz	w0, 1886c <PyInit__decimal@@Base+0x11db8>
   187f8:	ldr	x8, [x19]
   187fc:	add	x8, x8, #0x1
   18800:	str	x8, [x19]
   18804:	ldr	w2, [x20, #80]
   18808:	add	x1, x19, #0x18
   1880c:	add	x0, x29, #0x18
   18810:	bl	1ea48 <PyInit__decimal@@Base+0x17f94>
   18814:	ldr	x8, [x19]
   18818:	mov	x20, x0
   1881c:	subs	x8, x8, #0x1
   18820:	str	x8, [x19]
   18824:	b.eq	18854 <PyInit__decimal@@Base+0x11da0>  // b.none
   18828:	tbnz	x20, #63, 18860 <PyInit__decimal@@Base+0x11dac>
   1882c:	ldr	x21, [x29, #24]
   18830:	mov	w1, #0x7f                  	// #127
   18834:	mov	x0, x20
   18838:	bl	6990 <PyUnicode_New@plt>
   1883c:	mov	x19, x0
   18840:	cbz	x0, 188b8 <PyInit__decimal@@Base+0x11e04>
   18844:	ldr	w8, [x19, #32]
   18848:	tbnz	w8, #5, 1889c <PyInit__decimal@@Base+0x11de8>
   1884c:	ldr	x0, [x19, #72]
   18850:	b	188ac <PyInit__decimal@@Base+0x11df8>
   18854:	mov	x0, x19
   18858:	bl	6510 <_Py_Dealloc@plt>
   1885c:	tbz	x20, #63, 1882c <PyInit__decimal@@Base+0x11d78>
   18860:	bl	6520 <PyErr_NoMemory@plt>
   18864:	mov	x19, xzr
   18868:	b	188c8 <PyInit__decimal@@Base+0x11e14>
   1886c:	ldr	x8, [x19, #8]
   18870:	ldrb	w9, [x8, #171]
   18874:	tbnz	w9, #0, 188dc <PyInit__decimal@@Base+0x11e28>
   18878:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1887c:	ldr	x9, [x9, #3936]
   18880:	ldr	x2, [x8, #24]
   18884:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18888:	add	x1, x1, #0x263
   1888c:	ldr	x0, [x9]
   18890:	bl	6950 <PyErr_Format@plt>
   18894:	mov	x19, xzr
   18898:	b	188c8 <PyInit__decimal@@Base+0x11e14>
   1889c:	add	x9, x19, #0x30
   188a0:	add	x10, x19, #0x48
   188a4:	tst	w8, #0x40
   188a8:	csel	x0, x10, x9, eq  // eq = none
   188ac:	mov	x1, x21
   188b0:	mov	x2, x20
   188b4:	bl	63c0 <memcpy@plt>
   188b8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   188bc:	ldr	x8, [x8, #1376]
   188c0:	ldr	x0, [x29, #24]
   188c4:	blr	x8
   188c8:	mov	x0, x19
   188cc:	ldp	x20, x19, [sp, #32]
   188d0:	ldr	x21, [sp, #16]
   188d4:	ldp	x29, x30, [sp], #48
   188d8:	ret
   188dc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   188e0:	add	x0, x0, #0x318
   188e4:	mov	x1, x19
   188e8:	mov	x2, x20
   188ec:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   188f0:	mov	x19, x0
   188f4:	cbnz	x0, 18804 <PyInit__decimal@@Base+0x11d50>
   188f8:	b	188c8 <PyInit__decimal@@Base+0x11e14>
   188fc:	sub	sp, sp, #0x40
   18900:	stp	x29, x30, [sp, #16]
   18904:	stp	x22, x21, [sp, #32]
   18908:	stp	x20, x19, [sp, #48]
   1890c:	add	x29, sp, #0x10
   18910:	mov	x8, x1
   18914:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18918:	mov	x21, x0
   1891c:	add	x1, x1, #0xd4c
   18920:	add	x2, sp, #0x8
   18924:	mov	x3, sp
   18928:	mov	x0, x8
   1892c:	bl	6820 <PyArg_ParseTuple@plt>
   18930:	cbz	w0, 18ae8 <PyInit__decimal@@Base+0x12034>
   18934:	ldr	x19, [sp, #8]
   18938:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   1893c:	add	x22, x22, #0x318
   18940:	ldr	x0, [x19, #8]
   18944:	cmp	x0, x22
   18948:	b.eq	1895c <PyInit__decimal@@Base+0x11ea8>  // b.none
   1894c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   18950:	add	x1, x1, #0x318
   18954:	bl	6900 <PyType_IsSubtype@plt>
   18958:	cbz	w0, 18a3c <PyInit__decimal@@Base+0x11f88>
   1895c:	ldr	x8, [x19]
   18960:	add	x8, x8, #0x1
   18964:	str	x8, [x19]
   18968:	ldr	x20, [sp]
   1896c:	ldr	x0, [x20, #8]
   18970:	cmp	x0, x22
   18974:	b.eq	18988 <PyInit__decimal@@Base+0x11ed4>  // b.none
   18978:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1897c:	add	x1, x1, #0x318
   18980:	bl	6900 <PyType_IsSubtype@plt>
   18984:	cbz	w0, 18a68 <PyInit__decimal@@Base+0x11fb4>
   18988:	ldr	x8, [x20]
   1898c:	add	x8, x8, #0x1
   18990:	str	x8, [x20]
   18994:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18998:	add	x0, x0, #0x318
   1899c:	bl	6890 <_PyObject_New@plt>
   189a0:	cbz	x0, 18a0c <PyInit__decimal@@Base+0x11f58>
   189a4:	mov	w8, #0x30                  	// #48
   189a8:	mov	x21, x0
   189ac:	strb	w8, [x0, #24]!
   189b0:	mov	x9, #0xffffffffffffffff    	// #-1
   189b4:	mov	w10, #0x4                   	// #4
   189b8:	add	x1, x19, #0x18
   189bc:	add	x8, x0, #0x30
   189c0:	add	x2, x20, #0x18
   189c4:	stur	x9, [x0, #-8]
   189c8:	stp	xzr, xzr, [x0, #8]
   189cc:	stp	xzr, x10, [x0, #24]
   189d0:	str	x8, [x0, #40]
   189d4:	bl	23bb8 <PyInit__decimal@@Base+0x1d104>
   189d8:	ldr	x8, [x19]
   189dc:	subs	x8, x8, #0x1
   189e0:	str	x8, [x19]
   189e4:	b.ne	189f0 <PyInit__decimal@@Base+0x11f3c>  // b.any
   189e8:	mov	x0, x19
   189ec:	bl	6510 <_Py_Dealloc@plt>
   189f0:	ldr	x8, [x20]
   189f4:	subs	x8, x8, #0x1
   189f8:	str	x8, [x20]
   189fc:	b.ne	18aec <PyInit__decimal@@Base+0x12038>  // b.any
   18a00:	mov	x0, x20
   18a04:	bl	6510 <_Py_Dealloc@plt>
   18a08:	b	18aec <PyInit__decimal@@Base+0x12038>
   18a0c:	ldr	x8, [x19]
   18a10:	subs	x8, x8, #0x1
   18a14:	str	x8, [x19]
   18a18:	b.ne	18a24 <PyInit__decimal@@Base+0x11f70>  // b.any
   18a1c:	mov	x0, x19
   18a20:	bl	6510 <_Py_Dealloc@plt>
   18a24:	ldr	x8, [x20]
   18a28:	subs	x8, x8, #0x1
   18a2c:	str	x8, [x20]
   18a30:	b.ne	18ae8 <PyInit__decimal@@Base+0x12034>  // b.any
   18a34:	mov	x0, x20
   18a38:	b	18ae4 <PyInit__decimal@@Base+0x12030>
   18a3c:	ldr	x8, [x19, #8]
   18a40:	ldrb	w9, [x8, #171]
   18a44:	tbnz	w9, #0, 18a94 <PyInit__decimal@@Base+0x11fe0>
   18a48:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   18a4c:	ldr	x9, [x9, #3936]
   18a50:	ldr	x2, [x8, #24]
   18a54:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18a58:	add	x1, x1, #0x263
   18a5c:	ldr	x0, [x9]
   18a60:	bl	6950 <PyErr_Format@plt>
   18a64:	b	18ae8 <PyInit__decimal@@Base+0x12034>
   18a68:	ldr	x8, [x20, #8]
   18a6c:	ldrb	w9, [x8, #171]
   18a70:	tbnz	w9, #0, 18ab4 <PyInit__decimal@@Base+0x12000>
   18a74:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   18a78:	ldr	x9, [x9, #3936]
   18a7c:	ldr	x2, [x8, #24]
   18a80:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18a84:	add	x1, x1, #0x263
   18a88:	ldr	x0, [x9]
   18a8c:	bl	6950 <PyErr_Format@plt>
   18a90:	b	18ad0 <PyInit__decimal@@Base+0x1201c>
   18a94:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18a98:	add	x0, x0, #0x318
   18a9c:	mov	x1, x19
   18aa0:	mov	x2, x21
   18aa4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   18aa8:	mov	x19, x0
   18aac:	cbnz	x0, 18968 <PyInit__decimal@@Base+0x11eb4>
   18ab0:	b	18ae8 <PyInit__decimal@@Base+0x12034>
   18ab4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18ab8:	add	x0, x0, #0x318
   18abc:	mov	x1, x20
   18ac0:	mov	x2, x21
   18ac4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   18ac8:	mov	x20, x0
   18acc:	cbnz	x0, 18994 <PyInit__decimal@@Base+0x11ee0>
   18ad0:	ldr	x8, [x19]
   18ad4:	subs	x8, x8, #0x1
   18ad8:	str	x8, [x19]
   18adc:	b.ne	18ae8 <PyInit__decimal@@Base+0x12034>  // b.any
   18ae0:	mov	x0, x19
   18ae4:	bl	6510 <_Py_Dealloc@plt>
   18ae8:	mov	x21, xzr
   18aec:	mov	x0, x21
   18af0:	ldp	x20, x19, [sp, #48]
   18af4:	ldp	x22, x21, [sp, #32]
   18af8:	ldp	x29, x30, [sp, #16]
   18afc:	add	sp, sp, #0x40
   18b00:	ret
   18b04:	sub	sp, sp, #0x40
   18b08:	stp	x29, x30, [sp, #16]
   18b0c:	stp	x22, x21, [sp, #32]
   18b10:	stp	x20, x19, [sp, #48]
   18b14:	add	x29, sp, #0x10
   18b18:	mov	x8, x1
   18b1c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18b20:	mov	x21, x0
   18b24:	add	x1, x1, #0xd4c
   18b28:	add	x2, sp, #0x8
   18b2c:	mov	x3, sp
   18b30:	mov	x0, x8
   18b34:	bl	6820 <PyArg_ParseTuple@plt>
   18b38:	cbz	w0, 18cf0 <PyInit__decimal@@Base+0x1223c>
   18b3c:	ldr	x19, [sp, #8]
   18b40:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   18b44:	add	x22, x22, #0x318
   18b48:	ldr	x0, [x19, #8]
   18b4c:	cmp	x0, x22
   18b50:	b.eq	18b64 <PyInit__decimal@@Base+0x120b0>  // b.none
   18b54:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   18b58:	add	x1, x1, #0x318
   18b5c:	bl	6900 <PyType_IsSubtype@plt>
   18b60:	cbz	w0, 18c44 <PyInit__decimal@@Base+0x12190>
   18b64:	ldr	x8, [x19]
   18b68:	add	x8, x8, #0x1
   18b6c:	str	x8, [x19]
   18b70:	ldr	x20, [sp]
   18b74:	ldr	x0, [x20, #8]
   18b78:	cmp	x0, x22
   18b7c:	b.eq	18b90 <PyInit__decimal@@Base+0x120dc>  // b.none
   18b80:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   18b84:	add	x1, x1, #0x318
   18b88:	bl	6900 <PyType_IsSubtype@plt>
   18b8c:	cbz	w0, 18c70 <PyInit__decimal@@Base+0x121bc>
   18b90:	ldr	x8, [x20]
   18b94:	add	x8, x8, #0x1
   18b98:	str	x8, [x20]
   18b9c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18ba0:	add	x0, x0, #0x318
   18ba4:	bl	6890 <_PyObject_New@plt>
   18ba8:	cbz	x0, 18c14 <PyInit__decimal@@Base+0x12160>
   18bac:	mov	w8, #0x30                  	// #48
   18bb0:	mov	x21, x0
   18bb4:	strb	w8, [x0, #24]!
   18bb8:	mov	x9, #0xffffffffffffffff    	// #-1
   18bbc:	mov	w10, #0x4                   	// #4
   18bc0:	add	x1, x19, #0x18
   18bc4:	add	x8, x0, #0x30
   18bc8:	add	x2, x20, #0x18
   18bcc:	stur	x9, [x0, #-8]
   18bd0:	stp	xzr, xzr, [x0, #8]
   18bd4:	stp	xzr, x10, [x0, #24]
   18bd8:	str	x8, [x0, #40]
   18bdc:	bl	23c74 <PyInit__decimal@@Base+0x1d1c0>
   18be0:	ldr	x8, [x19]
   18be4:	subs	x8, x8, #0x1
   18be8:	str	x8, [x19]
   18bec:	b.ne	18bf8 <PyInit__decimal@@Base+0x12144>  // b.any
   18bf0:	mov	x0, x19
   18bf4:	bl	6510 <_Py_Dealloc@plt>
   18bf8:	ldr	x8, [x20]
   18bfc:	subs	x8, x8, #0x1
   18c00:	str	x8, [x20]
   18c04:	b.ne	18cf4 <PyInit__decimal@@Base+0x12240>  // b.any
   18c08:	mov	x0, x20
   18c0c:	bl	6510 <_Py_Dealloc@plt>
   18c10:	b	18cf4 <PyInit__decimal@@Base+0x12240>
   18c14:	ldr	x8, [x19]
   18c18:	subs	x8, x8, #0x1
   18c1c:	str	x8, [x19]
   18c20:	b.ne	18c2c <PyInit__decimal@@Base+0x12178>  // b.any
   18c24:	mov	x0, x19
   18c28:	bl	6510 <_Py_Dealloc@plt>
   18c2c:	ldr	x8, [x20]
   18c30:	subs	x8, x8, #0x1
   18c34:	str	x8, [x20]
   18c38:	b.ne	18cf0 <PyInit__decimal@@Base+0x1223c>  // b.any
   18c3c:	mov	x0, x20
   18c40:	b	18cec <PyInit__decimal@@Base+0x12238>
   18c44:	ldr	x8, [x19, #8]
   18c48:	ldrb	w9, [x8, #171]
   18c4c:	tbnz	w9, #0, 18c9c <PyInit__decimal@@Base+0x121e8>
   18c50:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   18c54:	ldr	x9, [x9, #3936]
   18c58:	ldr	x2, [x8, #24]
   18c5c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18c60:	add	x1, x1, #0x263
   18c64:	ldr	x0, [x9]
   18c68:	bl	6950 <PyErr_Format@plt>
   18c6c:	b	18cf0 <PyInit__decimal@@Base+0x1223c>
   18c70:	ldr	x8, [x20, #8]
   18c74:	ldrb	w9, [x8, #171]
   18c78:	tbnz	w9, #0, 18cbc <PyInit__decimal@@Base+0x12208>
   18c7c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   18c80:	ldr	x9, [x9, #3936]
   18c84:	ldr	x2, [x8, #24]
   18c88:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18c8c:	add	x1, x1, #0x263
   18c90:	ldr	x0, [x9]
   18c94:	bl	6950 <PyErr_Format@plt>
   18c98:	b	18cd8 <PyInit__decimal@@Base+0x12224>
   18c9c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18ca0:	add	x0, x0, #0x318
   18ca4:	mov	x1, x19
   18ca8:	mov	x2, x21
   18cac:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   18cb0:	mov	x19, x0
   18cb4:	cbnz	x0, 18b70 <PyInit__decimal@@Base+0x120bc>
   18cb8:	b	18cf0 <PyInit__decimal@@Base+0x1223c>
   18cbc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18cc0:	add	x0, x0, #0x318
   18cc4:	mov	x1, x20
   18cc8:	mov	x2, x21
   18ccc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   18cd0:	mov	x20, x0
   18cd4:	cbnz	x0, 18b9c <PyInit__decimal@@Base+0x120e8>
   18cd8:	ldr	x8, [x19]
   18cdc:	subs	x8, x8, #0x1
   18ce0:	str	x8, [x19]
   18ce4:	b.ne	18cf0 <PyInit__decimal@@Base+0x1223c>  // b.any
   18ce8:	mov	x0, x19
   18cec:	bl	6510 <_Py_Dealloc@plt>
   18cf0:	mov	x21, xzr
   18cf4:	mov	x0, x21
   18cf8:	ldp	x20, x19, [sp, #48]
   18cfc:	ldp	x22, x21, [sp, #32]
   18d00:	ldp	x29, x30, [sp, #16]
   18d04:	add	sp, sp, #0x40
   18d08:	ret
   18d0c:	sub	sp, sp, #0x50
   18d10:	stp	x29, x30, [sp, #32]
   18d14:	stp	x22, x21, [sp, #48]
   18d18:	stp	x20, x19, [sp, #64]
   18d1c:	add	x29, sp, #0x20
   18d20:	mov	x8, x1
   18d24:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18d28:	mov	x19, x0
   18d2c:	add	x1, x1, #0xd4c
   18d30:	sub	x2, x29, #0x8
   18d34:	add	x3, sp, #0x10
   18d38:	mov	x0, x8
   18d3c:	str	wzr, [sp, #12]
   18d40:	bl	6820 <PyArg_ParseTuple@plt>
   18d44:	cbz	w0, 18f24 <PyInit__decimal@@Base+0x12470>
   18d48:	ldur	x20, [x29, #-8]
   18d4c:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   18d50:	add	x22, x22, #0x318
   18d54:	ldr	x0, [x20, #8]
   18d58:	cmp	x0, x22
   18d5c:	b.eq	18d70 <PyInit__decimal@@Base+0x122bc>  // b.none
   18d60:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   18d64:	add	x1, x1, #0x318
   18d68:	bl	6900 <PyType_IsSubtype@plt>
   18d6c:	cbz	w0, 18e78 <PyInit__decimal@@Base+0x123c4>
   18d70:	ldr	x8, [x20]
   18d74:	add	x8, x8, #0x1
   18d78:	str	x8, [x20]
   18d7c:	ldr	x21, [sp, #16]
   18d80:	ldr	x0, [x21, #8]
   18d84:	cmp	x0, x22
   18d88:	b.eq	18d9c <PyInit__decimal@@Base+0x122e8>  // b.none
   18d8c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   18d90:	add	x1, x1, #0x318
   18d94:	bl	6900 <PyType_IsSubtype@plt>
   18d98:	cbz	w0, 18ea4 <PyInit__decimal@@Base+0x123f0>
   18d9c:	ldr	x8, [x21]
   18da0:	add	x8, x8, #0x1
   18da4:	str	x8, [x21]
   18da8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18dac:	add	x0, x0, #0x318
   18db0:	bl	6890 <_PyObject_New@plt>
   18db4:	cbz	x0, 18e48 <PyInit__decimal@@Base+0x12394>
   18db8:	mov	w8, #0x30                  	// #48
   18dbc:	mov	x22, x0
   18dc0:	strb	w8, [x0, #24]!
   18dc4:	mov	x9, #0xffffffffffffffff    	// #-1
   18dc8:	mov	w10, #0x4                   	// #4
   18dcc:	add	x1, x20, #0x18
   18dd0:	add	x8, x0, #0x30
   18dd4:	add	x2, x21, #0x18
   18dd8:	add	x3, sp, #0xc
   18ddc:	stur	x9, [x0, #-8]
   18de0:	stp	xzr, xzr, [x0, #8]
   18de4:	stp	xzr, x10, [x0, #24]
   18de8:	str	x8, [x0, #40]
   18dec:	bl	2357c <PyInit__decimal@@Base+0x1cac8>
   18df0:	ldr	x8, [x20]
   18df4:	subs	x8, x8, #0x1
   18df8:	str	x8, [x20]
   18dfc:	b.ne	18e08 <PyInit__decimal@@Base+0x12354>  // b.any
   18e00:	mov	x0, x20
   18e04:	bl	6510 <_Py_Dealloc@plt>
   18e08:	ldr	x8, [x21]
   18e0c:	subs	x8, x8, #0x1
   18e10:	str	x8, [x21]
   18e14:	b.ne	18e20 <PyInit__decimal@@Base+0x1236c>  // b.any
   18e18:	mov	x0, x21
   18e1c:	bl	6510 <_Py_Dealloc@plt>
   18e20:	ldr	w1, [sp, #12]
   18e24:	mov	x0, x19
   18e28:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   18e2c:	cbz	w0, 18f28 <PyInit__decimal@@Base+0x12474>
   18e30:	ldr	x8, [x22]
   18e34:	subs	x8, x8, #0x1
   18e38:	str	x8, [x22]
   18e3c:	b.ne	18f24 <PyInit__decimal@@Base+0x12470>  // b.any
   18e40:	mov	x0, x22
   18e44:	b	18f20 <PyInit__decimal@@Base+0x1246c>
   18e48:	ldr	x8, [x20]
   18e4c:	subs	x8, x8, #0x1
   18e50:	str	x8, [x20]
   18e54:	b.ne	18e60 <PyInit__decimal@@Base+0x123ac>  // b.any
   18e58:	mov	x0, x20
   18e5c:	bl	6510 <_Py_Dealloc@plt>
   18e60:	ldr	x8, [x21]
   18e64:	subs	x8, x8, #0x1
   18e68:	str	x8, [x21]
   18e6c:	b.ne	18f24 <PyInit__decimal@@Base+0x12470>  // b.any
   18e70:	mov	x0, x21
   18e74:	b	18f20 <PyInit__decimal@@Base+0x1246c>
   18e78:	ldr	x8, [x20, #8]
   18e7c:	ldrb	w9, [x8, #171]
   18e80:	tbnz	w9, #0, 18ed0 <PyInit__decimal@@Base+0x1241c>
   18e84:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   18e88:	ldr	x9, [x9, #3936]
   18e8c:	ldr	x2, [x8, #24]
   18e90:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18e94:	add	x1, x1, #0x263
   18e98:	ldr	x0, [x9]
   18e9c:	bl	6950 <PyErr_Format@plt>
   18ea0:	b	18f24 <PyInit__decimal@@Base+0x12470>
   18ea4:	ldr	x8, [x21, #8]
   18ea8:	ldrb	w9, [x8, #171]
   18eac:	tbnz	w9, #0, 18ef0 <PyInit__decimal@@Base+0x1243c>
   18eb0:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   18eb4:	ldr	x9, [x9, #3936]
   18eb8:	ldr	x2, [x8, #24]
   18ebc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18ec0:	add	x1, x1, #0x263
   18ec4:	ldr	x0, [x9]
   18ec8:	bl	6950 <PyErr_Format@plt>
   18ecc:	b	18f0c <PyInit__decimal@@Base+0x12458>
   18ed0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18ed4:	add	x0, x0, #0x318
   18ed8:	mov	x1, x20
   18edc:	mov	x2, x19
   18ee0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   18ee4:	mov	x20, x0
   18ee8:	cbnz	x0, 18d7c <PyInit__decimal@@Base+0x122c8>
   18eec:	b	18f24 <PyInit__decimal@@Base+0x12470>
   18ef0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18ef4:	add	x0, x0, #0x318
   18ef8:	mov	x1, x21
   18efc:	mov	x2, x19
   18f00:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   18f04:	mov	x21, x0
   18f08:	cbnz	x0, 18da8 <PyInit__decimal@@Base+0x122f4>
   18f0c:	ldr	x8, [x20]
   18f10:	subs	x8, x8, #0x1
   18f14:	str	x8, [x20]
   18f18:	b.ne	18f24 <PyInit__decimal@@Base+0x12470>  // b.any
   18f1c:	mov	x0, x20
   18f20:	bl	6510 <_Py_Dealloc@plt>
   18f24:	mov	x22, xzr
   18f28:	mov	x0, x22
   18f2c:	ldp	x20, x19, [sp, #64]
   18f30:	ldp	x22, x21, [sp, #48]
   18f34:	ldp	x29, x30, [sp, #32]
   18f38:	add	sp, sp, #0x50
   18f3c:	ret
   18f40:	sub	sp, sp, #0x50
   18f44:	stp	x29, x30, [sp, #32]
   18f48:	stp	x22, x21, [sp, #48]
   18f4c:	stp	x20, x19, [sp, #64]
   18f50:	add	x29, sp, #0x20
   18f54:	mov	x8, x1
   18f58:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   18f5c:	mov	x19, x0
   18f60:	add	x1, x1, #0xd4c
   18f64:	sub	x2, x29, #0x8
   18f68:	add	x3, sp, #0x10
   18f6c:	mov	x0, x8
   18f70:	str	wzr, [sp, #12]
   18f74:	bl	6820 <PyArg_ParseTuple@plt>
   18f78:	cbz	w0, 1915c <PyInit__decimal@@Base+0x126a8>
   18f7c:	ldur	x20, [x29, #-8]
   18f80:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   18f84:	add	x22, x22, #0x318
   18f88:	ldr	x0, [x20, #8]
   18f8c:	cmp	x0, x22
   18f90:	b.eq	18fa4 <PyInit__decimal@@Base+0x124f0>  // b.none
   18f94:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   18f98:	add	x1, x1, #0x318
   18f9c:	bl	6900 <PyType_IsSubtype@plt>
   18fa0:	cbz	w0, 190b0 <PyInit__decimal@@Base+0x125fc>
   18fa4:	ldr	x8, [x20]
   18fa8:	add	x8, x8, #0x1
   18fac:	str	x8, [x20]
   18fb0:	ldr	x21, [sp, #16]
   18fb4:	ldr	x0, [x21, #8]
   18fb8:	cmp	x0, x22
   18fbc:	b.eq	18fd0 <PyInit__decimal@@Base+0x1251c>  // b.none
   18fc0:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   18fc4:	add	x1, x1, #0x318
   18fc8:	bl	6900 <PyType_IsSubtype@plt>
   18fcc:	cbz	w0, 190dc <PyInit__decimal@@Base+0x12628>
   18fd0:	ldr	x8, [x21]
   18fd4:	add	x8, x8, #0x1
   18fd8:	str	x8, [x21]
   18fdc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   18fe0:	add	x0, x0, #0x318
   18fe4:	bl	6890 <_PyObject_New@plt>
   18fe8:	cbz	x0, 19080 <PyInit__decimal@@Base+0x125cc>
   18fec:	mov	w8, #0x30                  	// #48
   18ff0:	mov	x22, x0
   18ff4:	strb	w8, [x0, #24]!
   18ff8:	mov	x9, #0xffffffffffffffff    	// #-1
   18ffc:	mov	w10, #0x4                   	// #4
   19000:	add	x1, x20, #0x18
   19004:	add	x2, x21, #0x18
   19008:	add	x8, x0, #0x30
   1900c:	add	x3, x19, #0x10
   19010:	add	x4, sp, #0xc
   19014:	stur	x9, [x0, #-8]
   19018:	stp	xzr, xzr, [x0, #8]
   1901c:	stp	xzr, x10, [x0, #24]
   19020:	str	x8, [x0, #40]
   19024:	bl	2447c <PyInit__decimal@@Base+0x1d9c8>
   19028:	ldr	x8, [x20]
   1902c:	subs	x8, x8, #0x1
   19030:	str	x8, [x20]
   19034:	b.ne	19040 <PyInit__decimal@@Base+0x1258c>  // b.any
   19038:	mov	x0, x20
   1903c:	bl	6510 <_Py_Dealloc@plt>
   19040:	ldr	x8, [x21]
   19044:	subs	x8, x8, #0x1
   19048:	str	x8, [x21]
   1904c:	b.ne	19058 <PyInit__decimal@@Base+0x125a4>  // b.any
   19050:	mov	x0, x21
   19054:	bl	6510 <_Py_Dealloc@plt>
   19058:	ldr	w1, [sp, #12]
   1905c:	mov	x0, x19
   19060:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   19064:	cbz	w0, 19160 <PyInit__decimal@@Base+0x126ac>
   19068:	ldr	x8, [x22]
   1906c:	subs	x8, x8, #0x1
   19070:	str	x8, [x22]
   19074:	b.ne	1915c <PyInit__decimal@@Base+0x126a8>  // b.any
   19078:	mov	x0, x22
   1907c:	b	19158 <PyInit__decimal@@Base+0x126a4>
   19080:	ldr	x8, [x20]
   19084:	subs	x8, x8, #0x1
   19088:	str	x8, [x20]
   1908c:	b.ne	19098 <PyInit__decimal@@Base+0x125e4>  // b.any
   19090:	mov	x0, x20
   19094:	bl	6510 <_Py_Dealloc@plt>
   19098:	ldr	x8, [x21]
   1909c:	subs	x8, x8, #0x1
   190a0:	str	x8, [x21]
   190a4:	b.ne	1915c <PyInit__decimal@@Base+0x126a8>  // b.any
   190a8:	mov	x0, x21
   190ac:	b	19158 <PyInit__decimal@@Base+0x126a4>
   190b0:	ldr	x8, [x20, #8]
   190b4:	ldrb	w9, [x8, #171]
   190b8:	tbnz	w9, #0, 19108 <PyInit__decimal@@Base+0x12654>
   190bc:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   190c0:	ldr	x9, [x9, #3936]
   190c4:	ldr	x2, [x8, #24]
   190c8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   190cc:	add	x1, x1, #0x263
   190d0:	ldr	x0, [x9]
   190d4:	bl	6950 <PyErr_Format@plt>
   190d8:	b	1915c <PyInit__decimal@@Base+0x126a8>
   190dc:	ldr	x8, [x21, #8]
   190e0:	ldrb	w9, [x8, #171]
   190e4:	tbnz	w9, #0, 19128 <PyInit__decimal@@Base+0x12674>
   190e8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   190ec:	ldr	x9, [x9, #3936]
   190f0:	ldr	x2, [x8, #24]
   190f4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   190f8:	add	x1, x1, #0x263
   190fc:	ldr	x0, [x9]
   19100:	bl	6950 <PyErr_Format@plt>
   19104:	b	19144 <PyInit__decimal@@Base+0x12690>
   19108:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1910c:	add	x0, x0, #0x318
   19110:	mov	x1, x20
   19114:	mov	x2, x19
   19118:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1911c:	mov	x20, x0
   19120:	cbnz	x0, 18fb0 <PyInit__decimal@@Base+0x124fc>
   19124:	b	1915c <PyInit__decimal@@Base+0x126a8>
   19128:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1912c:	add	x0, x0, #0x318
   19130:	mov	x1, x21
   19134:	mov	x2, x19
   19138:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1913c:	mov	x21, x0
   19140:	cbnz	x0, 18fdc <PyInit__decimal@@Base+0x12528>
   19144:	ldr	x8, [x20]
   19148:	subs	x8, x8, #0x1
   1914c:	str	x8, [x20]
   19150:	b.ne	1915c <PyInit__decimal@@Base+0x126a8>  // b.any
   19154:	mov	x0, x20
   19158:	bl	6510 <_Py_Dealloc@plt>
   1915c:	mov	x22, xzr
   19160:	mov	x0, x22
   19164:	ldp	x20, x19, [sp, #64]
   19168:	ldp	x22, x21, [sp, #48]
   1916c:	ldp	x29, x30, [sp, #32]
   19170:	add	sp, sp, #0x50
   19174:	ret
   19178:	sub	sp, sp, #0x50
   1917c:	stp	x29, x30, [sp, #32]
   19180:	stp	x22, x21, [sp, #48]
   19184:	stp	x20, x19, [sp, #64]
   19188:	add	x29, sp, #0x20
   1918c:	mov	x8, x1
   19190:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19194:	mov	x19, x0
   19198:	add	x1, x1, #0xd4c
   1919c:	sub	x2, x29, #0x8
   191a0:	add	x3, sp, #0x10
   191a4:	mov	x0, x8
   191a8:	str	wzr, [sp, #12]
   191ac:	bl	6820 <PyArg_ParseTuple@plt>
   191b0:	cbz	w0, 19394 <PyInit__decimal@@Base+0x128e0>
   191b4:	ldur	x20, [x29, #-8]
   191b8:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   191bc:	add	x22, x22, #0x318
   191c0:	ldr	x0, [x20, #8]
   191c4:	cmp	x0, x22
   191c8:	b.eq	191dc <PyInit__decimal@@Base+0x12728>  // b.none
   191cc:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   191d0:	add	x1, x1, #0x318
   191d4:	bl	6900 <PyType_IsSubtype@plt>
   191d8:	cbz	w0, 192e8 <PyInit__decimal@@Base+0x12834>
   191dc:	ldr	x8, [x20]
   191e0:	add	x8, x8, #0x1
   191e4:	str	x8, [x20]
   191e8:	ldr	x21, [sp, #16]
   191ec:	ldr	x0, [x21, #8]
   191f0:	cmp	x0, x22
   191f4:	b.eq	19208 <PyInit__decimal@@Base+0x12754>  // b.none
   191f8:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   191fc:	add	x1, x1, #0x318
   19200:	bl	6900 <PyType_IsSubtype@plt>
   19204:	cbz	w0, 19314 <PyInit__decimal@@Base+0x12860>
   19208:	ldr	x8, [x21]
   1920c:	add	x8, x8, #0x1
   19210:	str	x8, [x21]
   19214:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19218:	add	x0, x0, #0x318
   1921c:	bl	6890 <_PyObject_New@plt>
   19220:	cbz	x0, 192b8 <PyInit__decimal@@Base+0x12804>
   19224:	mov	w8, #0x30                  	// #48
   19228:	mov	x22, x0
   1922c:	strb	w8, [x0, #24]!
   19230:	mov	x9, #0xffffffffffffffff    	// #-1
   19234:	mov	w10, #0x4                   	// #4
   19238:	add	x1, x20, #0x18
   1923c:	add	x2, x21, #0x18
   19240:	add	x8, x0, #0x30
   19244:	add	x3, x19, #0x10
   19248:	add	x4, sp, #0xc
   1924c:	stur	x9, [x0, #-8]
   19250:	stp	xzr, xzr, [x0, #8]
   19254:	stp	xzr, x10, [x0, #24]
   19258:	str	x8, [x0, #40]
   1925c:	bl	253a4 <PyInit__decimal@@Base+0x1e8f0>
   19260:	ldr	x8, [x20]
   19264:	subs	x8, x8, #0x1
   19268:	str	x8, [x20]
   1926c:	b.ne	19278 <PyInit__decimal@@Base+0x127c4>  // b.any
   19270:	mov	x0, x20
   19274:	bl	6510 <_Py_Dealloc@plt>
   19278:	ldr	x8, [x21]
   1927c:	subs	x8, x8, #0x1
   19280:	str	x8, [x21]
   19284:	b.ne	19290 <PyInit__decimal@@Base+0x127dc>  // b.any
   19288:	mov	x0, x21
   1928c:	bl	6510 <_Py_Dealloc@plt>
   19290:	ldr	w1, [sp, #12]
   19294:	mov	x0, x19
   19298:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1929c:	cbz	w0, 19398 <PyInit__decimal@@Base+0x128e4>
   192a0:	ldr	x8, [x22]
   192a4:	subs	x8, x8, #0x1
   192a8:	str	x8, [x22]
   192ac:	b.ne	19394 <PyInit__decimal@@Base+0x128e0>  // b.any
   192b0:	mov	x0, x22
   192b4:	b	19390 <PyInit__decimal@@Base+0x128dc>
   192b8:	ldr	x8, [x20]
   192bc:	subs	x8, x8, #0x1
   192c0:	str	x8, [x20]
   192c4:	b.ne	192d0 <PyInit__decimal@@Base+0x1281c>  // b.any
   192c8:	mov	x0, x20
   192cc:	bl	6510 <_Py_Dealloc@plt>
   192d0:	ldr	x8, [x21]
   192d4:	subs	x8, x8, #0x1
   192d8:	str	x8, [x21]
   192dc:	b.ne	19394 <PyInit__decimal@@Base+0x128e0>  // b.any
   192e0:	mov	x0, x21
   192e4:	b	19390 <PyInit__decimal@@Base+0x128dc>
   192e8:	ldr	x8, [x20, #8]
   192ec:	ldrb	w9, [x8, #171]
   192f0:	tbnz	w9, #0, 19340 <PyInit__decimal@@Base+0x1288c>
   192f4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   192f8:	ldr	x9, [x9, #3936]
   192fc:	ldr	x2, [x8, #24]
   19300:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19304:	add	x1, x1, #0x263
   19308:	ldr	x0, [x9]
   1930c:	bl	6950 <PyErr_Format@plt>
   19310:	b	19394 <PyInit__decimal@@Base+0x128e0>
   19314:	ldr	x8, [x21, #8]
   19318:	ldrb	w9, [x8, #171]
   1931c:	tbnz	w9, #0, 19360 <PyInit__decimal@@Base+0x128ac>
   19320:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   19324:	ldr	x9, [x9, #3936]
   19328:	ldr	x2, [x8, #24]
   1932c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19330:	add	x1, x1, #0x263
   19334:	ldr	x0, [x9]
   19338:	bl	6950 <PyErr_Format@plt>
   1933c:	b	1937c <PyInit__decimal@@Base+0x128c8>
   19340:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19344:	add	x0, x0, #0x318
   19348:	mov	x1, x20
   1934c:	mov	x2, x19
   19350:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   19354:	mov	x20, x0
   19358:	cbnz	x0, 191e8 <PyInit__decimal@@Base+0x12734>
   1935c:	b	19394 <PyInit__decimal@@Base+0x128e0>
   19360:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19364:	add	x0, x0, #0x318
   19368:	mov	x1, x21
   1936c:	mov	x2, x19
   19370:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   19374:	mov	x21, x0
   19378:	cbnz	x0, 19214 <PyInit__decimal@@Base+0x12760>
   1937c:	ldr	x8, [x20]
   19380:	subs	x8, x8, #0x1
   19384:	str	x8, [x20]
   19388:	b.ne	19394 <PyInit__decimal@@Base+0x128e0>  // b.any
   1938c:	mov	x0, x20
   19390:	bl	6510 <_Py_Dealloc@plt>
   19394:	mov	x22, xzr
   19398:	mov	x0, x22
   1939c:	ldp	x20, x19, [sp, #64]
   193a0:	ldp	x22, x21, [sp, #48]
   193a4:	ldp	x29, x30, [sp, #32]
   193a8:	add	sp, sp, #0x50
   193ac:	ret
   193b0:	sub	sp, sp, #0x50
   193b4:	stp	x29, x30, [sp, #32]
   193b8:	stp	x22, x21, [sp, #48]
   193bc:	stp	x20, x19, [sp, #64]
   193c0:	add	x29, sp, #0x20
   193c4:	mov	x8, x1
   193c8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   193cc:	mov	x19, x0
   193d0:	add	x1, x1, #0xd4c
   193d4:	sub	x2, x29, #0x8
   193d8:	add	x3, sp, #0x10
   193dc:	mov	x0, x8
   193e0:	str	wzr, [sp, #12]
   193e4:	bl	6820 <PyArg_ParseTuple@plt>
   193e8:	cbz	w0, 195cc <PyInit__decimal@@Base+0x12b18>
   193ec:	ldur	x20, [x29, #-8]
   193f0:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   193f4:	add	x22, x22, #0x318
   193f8:	ldr	x0, [x20, #8]
   193fc:	cmp	x0, x22
   19400:	b.eq	19414 <PyInit__decimal@@Base+0x12960>  // b.none
   19404:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   19408:	add	x1, x1, #0x318
   1940c:	bl	6900 <PyType_IsSubtype@plt>
   19410:	cbz	w0, 19520 <PyInit__decimal@@Base+0x12a6c>
   19414:	ldr	x8, [x20]
   19418:	add	x8, x8, #0x1
   1941c:	str	x8, [x20]
   19420:	ldr	x21, [sp, #16]
   19424:	ldr	x0, [x21, #8]
   19428:	cmp	x0, x22
   1942c:	b.eq	19440 <PyInit__decimal@@Base+0x1298c>  // b.none
   19430:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   19434:	add	x1, x1, #0x318
   19438:	bl	6900 <PyType_IsSubtype@plt>
   1943c:	cbz	w0, 1954c <PyInit__decimal@@Base+0x12a98>
   19440:	ldr	x8, [x21]
   19444:	add	x8, x8, #0x1
   19448:	str	x8, [x21]
   1944c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19450:	add	x0, x0, #0x318
   19454:	bl	6890 <_PyObject_New@plt>
   19458:	cbz	x0, 194f0 <PyInit__decimal@@Base+0x12a3c>
   1945c:	mov	w8, #0x30                  	// #48
   19460:	mov	x22, x0
   19464:	strb	w8, [x0, #24]!
   19468:	mov	x9, #0xffffffffffffffff    	// #-1
   1946c:	mov	w10, #0x4                   	// #4
   19470:	add	x1, x20, #0x18
   19474:	add	x2, x21, #0x18
   19478:	add	x8, x0, #0x30
   1947c:	add	x3, x19, #0x10
   19480:	add	x4, sp, #0xc
   19484:	stur	x9, [x0, #-8]
   19488:	stp	xzr, xzr, [x0, #8]
   1948c:	stp	xzr, x10, [x0, #24]
   19490:	str	x8, [x0, #40]
   19494:	bl	26704 <PyInit__decimal@@Base+0x1fc50>
   19498:	ldr	x8, [x20]
   1949c:	subs	x8, x8, #0x1
   194a0:	str	x8, [x20]
   194a4:	b.ne	194b0 <PyInit__decimal@@Base+0x129fc>  // b.any
   194a8:	mov	x0, x20
   194ac:	bl	6510 <_Py_Dealloc@plt>
   194b0:	ldr	x8, [x21]
   194b4:	subs	x8, x8, #0x1
   194b8:	str	x8, [x21]
   194bc:	b.ne	194c8 <PyInit__decimal@@Base+0x12a14>  // b.any
   194c0:	mov	x0, x21
   194c4:	bl	6510 <_Py_Dealloc@plt>
   194c8:	ldr	w1, [sp, #12]
   194cc:	mov	x0, x19
   194d0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   194d4:	cbz	w0, 195d0 <PyInit__decimal@@Base+0x12b1c>
   194d8:	ldr	x8, [x22]
   194dc:	subs	x8, x8, #0x1
   194e0:	str	x8, [x22]
   194e4:	b.ne	195cc <PyInit__decimal@@Base+0x12b18>  // b.any
   194e8:	mov	x0, x22
   194ec:	b	195c8 <PyInit__decimal@@Base+0x12b14>
   194f0:	ldr	x8, [x20]
   194f4:	subs	x8, x8, #0x1
   194f8:	str	x8, [x20]
   194fc:	b.ne	19508 <PyInit__decimal@@Base+0x12a54>  // b.any
   19500:	mov	x0, x20
   19504:	bl	6510 <_Py_Dealloc@plt>
   19508:	ldr	x8, [x21]
   1950c:	subs	x8, x8, #0x1
   19510:	str	x8, [x21]
   19514:	b.ne	195cc <PyInit__decimal@@Base+0x12b18>  // b.any
   19518:	mov	x0, x21
   1951c:	b	195c8 <PyInit__decimal@@Base+0x12b14>
   19520:	ldr	x8, [x20, #8]
   19524:	ldrb	w9, [x8, #171]
   19528:	tbnz	w9, #0, 19578 <PyInit__decimal@@Base+0x12ac4>
   1952c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   19530:	ldr	x9, [x9, #3936]
   19534:	ldr	x2, [x8, #24]
   19538:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1953c:	add	x1, x1, #0x263
   19540:	ldr	x0, [x9]
   19544:	bl	6950 <PyErr_Format@plt>
   19548:	b	195cc <PyInit__decimal@@Base+0x12b18>
   1954c:	ldr	x8, [x21, #8]
   19550:	ldrb	w9, [x8, #171]
   19554:	tbnz	w9, #0, 19598 <PyInit__decimal@@Base+0x12ae4>
   19558:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1955c:	ldr	x9, [x9, #3936]
   19560:	ldr	x2, [x8, #24]
   19564:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19568:	add	x1, x1, #0x263
   1956c:	ldr	x0, [x9]
   19570:	bl	6950 <PyErr_Format@plt>
   19574:	b	195b4 <PyInit__decimal@@Base+0x12b00>
   19578:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1957c:	add	x0, x0, #0x318
   19580:	mov	x1, x20
   19584:	mov	x2, x19
   19588:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   1958c:	mov	x20, x0
   19590:	cbnz	x0, 19420 <PyInit__decimal@@Base+0x1296c>
   19594:	b	195cc <PyInit__decimal@@Base+0x12b18>
   19598:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1959c:	add	x0, x0, #0x318
   195a0:	mov	x1, x21
   195a4:	mov	x2, x19
   195a8:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   195ac:	mov	x21, x0
   195b0:	cbnz	x0, 1944c <PyInit__decimal@@Base+0x12998>
   195b4:	ldr	x8, [x20]
   195b8:	subs	x8, x8, #0x1
   195bc:	str	x8, [x20]
   195c0:	b.ne	195cc <PyInit__decimal@@Base+0x12b18>  // b.any
   195c4:	mov	x0, x20
   195c8:	bl	6510 <_Py_Dealloc@plt>
   195cc:	mov	x22, xzr
   195d0:	mov	x0, x22
   195d4:	ldp	x20, x19, [sp, #64]
   195d8:	ldp	x22, x21, [sp, #48]
   195dc:	ldp	x29, x30, [sp, #32]
   195e0:	add	sp, sp, #0x50
   195e4:	ret
   195e8:	sub	sp, sp, #0x50
   195ec:	stp	x29, x30, [sp, #32]
   195f0:	stp	x22, x21, [sp, #48]
   195f4:	stp	x20, x19, [sp, #64]
   195f8:	add	x29, sp, #0x20
   195fc:	mov	x8, x1
   19600:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19604:	mov	x19, x0
   19608:	add	x1, x1, #0xd4c
   1960c:	sub	x2, x29, #0x8
   19610:	add	x3, sp, #0x10
   19614:	mov	x0, x8
   19618:	str	wzr, [sp, #12]
   1961c:	bl	6820 <PyArg_ParseTuple@plt>
   19620:	cbz	w0, 19804 <PyInit__decimal@@Base+0x12d50>
   19624:	ldur	x20, [x29, #-8]
   19628:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   1962c:	add	x22, x22, #0x318
   19630:	ldr	x0, [x20, #8]
   19634:	cmp	x0, x22
   19638:	b.eq	1964c <PyInit__decimal@@Base+0x12b98>  // b.none
   1963c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   19640:	add	x1, x1, #0x318
   19644:	bl	6900 <PyType_IsSubtype@plt>
   19648:	cbz	w0, 19758 <PyInit__decimal@@Base+0x12ca4>
   1964c:	ldr	x8, [x20]
   19650:	add	x8, x8, #0x1
   19654:	str	x8, [x20]
   19658:	ldr	x21, [sp, #16]
   1965c:	ldr	x0, [x21, #8]
   19660:	cmp	x0, x22
   19664:	b.eq	19678 <PyInit__decimal@@Base+0x12bc4>  // b.none
   19668:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1966c:	add	x1, x1, #0x318
   19670:	bl	6900 <PyType_IsSubtype@plt>
   19674:	cbz	w0, 19784 <PyInit__decimal@@Base+0x12cd0>
   19678:	ldr	x8, [x21]
   1967c:	add	x8, x8, #0x1
   19680:	str	x8, [x21]
   19684:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19688:	add	x0, x0, #0x318
   1968c:	bl	6890 <_PyObject_New@plt>
   19690:	cbz	x0, 19728 <PyInit__decimal@@Base+0x12c74>
   19694:	mov	w8, #0x30                  	// #48
   19698:	mov	x22, x0
   1969c:	strb	w8, [x0, #24]!
   196a0:	mov	x9, #0xffffffffffffffff    	// #-1
   196a4:	mov	w10, #0x4                   	// #4
   196a8:	add	x1, x20, #0x18
   196ac:	add	x2, x21, #0x18
   196b0:	add	x8, x0, #0x30
   196b4:	add	x3, x19, #0x10
   196b8:	add	x4, sp, #0xc
   196bc:	stur	x9, [x0, #-8]
   196c0:	stp	xzr, xzr, [x0, #8]
   196c4:	stp	xzr, x10, [x0, #24]
   196c8:	str	x8, [x0, #40]
   196cc:	bl	259b8 <PyInit__decimal@@Base+0x1ef04>
   196d0:	ldr	x8, [x20]
   196d4:	subs	x8, x8, #0x1
   196d8:	str	x8, [x20]
   196dc:	b.ne	196e8 <PyInit__decimal@@Base+0x12c34>  // b.any
   196e0:	mov	x0, x20
   196e4:	bl	6510 <_Py_Dealloc@plt>
   196e8:	ldr	x8, [x21]
   196ec:	subs	x8, x8, #0x1
   196f0:	str	x8, [x21]
   196f4:	b.ne	19700 <PyInit__decimal@@Base+0x12c4c>  // b.any
   196f8:	mov	x0, x21
   196fc:	bl	6510 <_Py_Dealloc@plt>
   19700:	ldr	w1, [sp, #12]
   19704:	mov	x0, x19
   19708:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1970c:	cbz	w0, 19808 <PyInit__decimal@@Base+0x12d54>
   19710:	ldr	x8, [x22]
   19714:	subs	x8, x8, #0x1
   19718:	str	x8, [x22]
   1971c:	b.ne	19804 <PyInit__decimal@@Base+0x12d50>  // b.any
   19720:	mov	x0, x22
   19724:	b	19800 <PyInit__decimal@@Base+0x12d4c>
   19728:	ldr	x8, [x20]
   1972c:	subs	x8, x8, #0x1
   19730:	str	x8, [x20]
   19734:	b.ne	19740 <PyInit__decimal@@Base+0x12c8c>  // b.any
   19738:	mov	x0, x20
   1973c:	bl	6510 <_Py_Dealloc@plt>
   19740:	ldr	x8, [x21]
   19744:	subs	x8, x8, #0x1
   19748:	str	x8, [x21]
   1974c:	b.ne	19804 <PyInit__decimal@@Base+0x12d50>  // b.any
   19750:	mov	x0, x21
   19754:	b	19800 <PyInit__decimal@@Base+0x12d4c>
   19758:	ldr	x8, [x20, #8]
   1975c:	ldrb	w9, [x8, #171]
   19760:	tbnz	w9, #0, 197b0 <PyInit__decimal@@Base+0x12cfc>
   19764:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   19768:	ldr	x9, [x9, #3936]
   1976c:	ldr	x2, [x8, #24]
   19770:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19774:	add	x1, x1, #0x263
   19778:	ldr	x0, [x9]
   1977c:	bl	6950 <PyErr_Format@plt>
   19780:	b	19804 <PyInit__decimal@@Base+0x12d50>
   19784:	ldr	x8, [x21, #8]
   19788:	ldrb	w9, [x8, #171]
   1978c:	tbnz	w9, #0, 197d0 <PyInit__decimal@@Base+0x12d1c>
   19790:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   19794:	ldr	x9, [x9, #3936]
   19798:	ldr	x2, [x8, #24]
   1979c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   197a0:	add	x1, x1, #0x263
   197a4:	ldr	x0, [x9]
   197a8:	bl	6950 <PyErr_Format@plt>
   197ac:	b	197ec <PyInit__decimal@@Base+0x12d38>
   197b0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   197b4:	add	x0, x0, #0x318
   197b8:	mov	x1, x20
   197bc:	mov	x2, x19
   197c0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   197c4:	mov	x20, x0
   197c8:	cbnz	x0, 19658 <PyInit__decimal@@Base+0x12ba4>
   197cc:	b	19804 <PyInit__decimal@@Base+0x12d50>
   197d0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   197d4:	add	x0, x0, #0x318
   197d8:	mov	x1, x21
   197dc:	mov	x2, x19
   197e0:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   197e4:	mov	x21, x0
   197e8:	cbnz	x0, 19684 <PyInit__decimal@@Base+0x12bd0>
   197ec:	ldr	x8, [x20]
   197f0:	subs	x8, x8, #0x1
   197f4:	str	x8, [x20]
   197f8:	b.ne	19804 <PyInit__decimal@@Base+0x12d50>  // b.any
   197fc:	mov	x0, x20
   19800:	bl	6510 <_Py_Dealloc@plt>
   19804:	mov	x22, xzr
   19808:	mov	x0, x22
   1980c:	ldp	x20, x19, [sp, #64]
   19810:	ldp	x22, x21, [sp, #48]
   19814:	ldp	x29, x30, [sp, #32]
   19818:	add	sp, sp, #0x50
   1981c:	ret
   19820:	sub	sp, sp, #0x40
   19824:	stp	x29, x30, [sp, #16]
   19828:	stp	x22, x21, [sp, #32]
   1982c:	stp	x20, x19, [sp, #48]
   19830:	add	x29, sp, #0x10
   19834:	mov	x8, x1
   19838:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1983c:	mov	x20, x0
   19840:	add	x1, x1, #0xd4c
   19844:	add	x2, sp, #0x8
   19848:	mov	x3, sp
   1984c:	mov	x0, x8
   19850:	bl	6820 <PyArg_ParseTuple@plt>
   19854:	cbz	w0, 199c8 <PyInit__decimal@@Base+0x12f14>
   19858:	ldr	x19, [sp, #8]
   1985c:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   19860:	add	x22, x22, #0x318
   19864:	ldr	x0, [x19, #8]
   19868:	cmp	x0, x22
   1986c:	b.eq	19880 <PyInit__decimal@@Base+0x12dcc>  // b.none
   19870:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   19874:	add	x1, x1, #0x318
   19878:	bl	6900 <PyType_IsSubtype@plt>
   1987c:	cbz	w0, 1991c <PyInit__decimal@@Base+0x12e68>
   19880:	ldr	x8, [x19]
   19884:	add	x8, x8, #0x1
   19888:	str	x8, [x19]
   1988c:	ldr	x21, [sp]
   19890:	ldr	x0, [x21, #8]
   19894:	cmp	x0, x22
   19898:	b.eq	198ac <PyInit__decimal@@Base+0x12df8>  // b.none
   1989c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   198a0:	add	x1, x1, #0x318
   198a4:	bl	6900 <PyType_IsSubtype@plt>
   198a8:	cbz	w0, 19948 <PyInit__decimal@@Base+0x12e94>
   198ac:	ldr	x8, [x21]
   198b0:	add	x8, x8, #0x1
   198b4:	str	x8, [x21]
   198b8:	add	x0, x19, #0x18
   198bc:	add	x1, x21, #0x18
   198c0:	bl	33184 <PyInit__decimal@@Base+0x2c6d0>
   198c4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   198c8:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   198cc:	ldr	x8, [x8, #4024]
   198d0:	ldr	x9, [x9, #3976]
   198d4:	cmp	w0, #0x0
   198d8:	csel	x20, x9, x8, eq  // eq = none
   198dc:	ldr	x8, [x20]
   198e0:	add	x8, x8, #0x1
   198e4:	str	x8, [x20]
   198e8:	ldr	x8, [x19]
   198ec:	subs	x8, x8, #0x1
   198f0:	str	x8, [x19]
   198f4:	b.ne	19900 <PyInit__decimal@@Base+0x12e4c>  // b.any
   198f8:	mov	x0, x19
   198fc:	bl	6510 <_Py_Dealloc@plt>
   19900:	ldr	x8, [x21]
   19904:	subs	x8, x8, #0x1
   19908:	str	x8, [x21]
   1990c:	b.ne	199cc <PyInit__decimal@@Base+0x12f18>  // b.any
   19910:	mov	x0, x21
   19914:	bl	6510 <_Py_Dealloc@plt>
   19918:	b	199cc <PyInit__decimal@@Base+0x12f18>
   1991c:	ldr	x8, [x19, #8]
   19920:	ldrb	w9, [x8, #171]
   19924:	tbnz	w9, #0, 19974 <PyInit__decimal@@Base+0x12ec0>
   19928:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1992c:	ldr	x9, [x9, #3936]
   19930:	ldr	x2, [x8, #24]
   19934:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19938:	add	x1, x1, #0x263
   1993c:	ldr	x0, [x9]
   19940:	bl	6950 <PyErr_Format@plt>
   19944:	b	199c8 <PyInit__decimal@@Base+0x12f14>
   19948:	ldr	x8, [x21, #8]
   1994c:	ldrb	w9, [x8, #171]
   19950:	tbnz	w9, #0, 19994 <PyInit__decimal@@Base+0x12ee0>
   19954:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   19958:	ldr	x9, [x9, #3936]
   1995c:	ldr	x2, [x8, #24]
   19960:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19964:	add	x1, x1, #0x263
   19968:	ldr	x0, [x9]
   1996c:	bl	6950 <PyErr_Format@plt>
   19970:	b	199b0 <PyInit__decimal@@Base+0x12efc>
   19974:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19978:	add	x0, x0, #0x318
   1997c:	mov	x1, x19
   19980:	mov	x2, x20
   19984:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   19988:	mov	x19, x0
   1998c:	cbnz	x0, 1988c <PyInit__decimal@@Base+0x12dd8>
   19990:	b	199c8 <PyInit__decimal@@Base+0x12f14>
   19994:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19998:	add	x0, x0, #0x318
   1999c:	mov	x1, x21
   199a0:	mov	x2, x20
   199a4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   199a8:	mov	x21, x0
   199ac:	cbnz	x0, 198b8 <PyInit__decimal@@Base+0x12e04>
   199b0:	ldr	x8, [x19]
   199b4:	subs	x8, x8, #0x1
   199b8:	str	x8, [x19]
   199bc:	b.ne	199c8 <PyInit__decimal@@Base+0x12f14>  // b.any
   199c0:	mov	x0, x19
   199c4:	bl	6510 <_Py_Dealloc@plt>
   199c8:	mov	x20, xzr
   199cc:	mov	x0, x20
   199d0:	ldp	x20, x19, [sp, #48]
   199d4:	ldp	x22, x21, [sp, #32]
   199d8:	ldp	x29, x30, [sp, #16]
   199dc:	add	sp, sp, #0x40
   199e0:	ret
   199e4:	sub	sp, sp, #0x50
   199e8:	stp	x29, x30, [sp, #32]
   199ec:	stp	x22, x21, [sp, #48]
   199f0:	stp	x20, x19, [sp, #64]
   199f4:	add	x29, sp, #0x20
   199f8:	mov	x8, x1
   199fc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19a00:	mov	x19, x0
   19a04:	add	x1, x1, #0xd4c
   19a08:	sub	x2, x29, #0x8
   19a0c:	add	x3, sp, #0x10
   19a10:	mov	x0, x8
   19a14:	str	wzr, [sp, #12]
   19a18:	bl	6820 <PyArg_ParseTuple@plt>
   19a1c:	cbz	w0, 19c00 <PyInit__decimal@@Base+0x1314c>
   19a20:	ldur	x20, [x29, #-8]
   19a24:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   19a28:	add	x22, x22, #0x318
   19a2c:	ldr	x0, [x20, #8]
   19a30:	cmp	x0, x22
   19a34:	b.eq	19a48 <PyInit__decimal@@Base+0x12f94>  // b.none
   19a38:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   19a3c:	add	x1, x1, #0x318
   19a40:	bl	6900 <PyType_IsSubtype@plt>
   19a44:	cbz	w0, 19b54 <PyInit__decimal@@Base+0x130a0>
   19a48:	ldr	x8, [x20]
   19a4c:	add	x8, x8, #0x1
   19a50:	str	x8, [x20]
   19a54:	ldr	x21, [sp, #16]
   19a58:	ldr	x0, [x21, #8]
   19a5c:	cmp	x0, x22
   19a60:	b.eq	19a74 <PyInit__decimal@@Base+0x12fc0>  // b.none
   19a64:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   19a68:	add	x1, x1, #0x318
   19a6c:	bl	6900 <PyType_IsSubtype@plt>
   19a70:	cbz	w0, 19b80 <PyInit__decimal@@Base+0x130cc>
   19a74:	ldr	x8, [x21]
   19a78:	add	x8, x8, #0x1
   19a7c:	str	x8, [x21]
   19a80:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19a84:	add	x0, x0, #0x318
   19a88:	bl	6890 <_PyObject_New@plt>
   19a8c:	cbz	x0, 19b24 <PyInit__decimal@@Base+0x13070>
   19a90:	mov	w8, #0x30                  	// #48
   19a94:	mov	x22, x0
   19a98:	strb	w8, [x0, #24]!
   19a9c:	mov	x9, #0xffffffffffffffff    	// #-1
   19aa0:	mov	w10, #0x4                   	// #4
   19aa4:	add	x1, x20, #0x18
   19aa8:	add	x2, x21, #0x18
   19aac:	add	x8, x0, #0x30
   19ab0:	add	x3, x19, #0x10
   19ab4:	add	x4, sp, #0xc
   19ab8:	stur	x9, [x0, #-8]
   19abc:	stp	xzr, xzr, [x0, #8]
   19ac0:	stp	xzr, x10, [x0, #24]
   19ac4:	str	x8, [x0, #40]
   19ac8:	bl	25e74 <PyInit__decimal@@Base+0x1f3c0>
   19acc:	ldr	x8, [x20]
   19ad0:	subs	x8, x8, #0x1
   19ad4:	str	x8, [x20]
   19ad8:	b.ne	19ae4 <PyInit__decimal@@Base+0x13030>  // b.any
   19adc:	mov	x0, x20
   19ae0:	bl	6510 <_Py_Dealloc@plt>
   19ae4:	ldr	x8, [x21]
   19ae8:	subs	x8, x8, #0x1
   19aec:	str	x8, [x21]
   19af0:	b.ne	19afc <PyInit__decimal@@Base+0x13048>  // b.any
   19af4:	mov	x0, x21
   19af8:	bl	6510 <_Py_Dealloc@plt>
   19afc:	ldr	w1, [sp, #12]
   19b00:	mov	x0, x19
   19b04:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   19b08:	cbz	w0, 19c04 <PyInit__decimal@@Base+0x13150>
   19b0c:	ldr	x8, [x22]
   19b10:	subs	x8, x8, #0x1
   19b14:	str	x8, [x22]
   19b18:	b.ne	19c00 <PyInit__decimal@@Base+0x1314c>  // b.any
   19b1c:	mov	x0, x22
   19b20:	b	19bfc <PyInit__decimal@@Base+0x13148>
   19b24:	ldr	x8, [x20]
   19b28:	subs	x8, x8, #0x1
   19b2c:	str	x8, [x20]
   19b30:	b.ne	19b3c <PyInit__decimal@@Base+0x13088>  // b.any
   19b34:	mov	x0, x20
   19b38:	bl	6510 <_Py_Dealloc@plt>
   19b3c:	ldr	x8, [x21]
   19b40:	subs	x8, x8, #0x1
   19b44:	str	x8, [x21]
   19b48:	b.ne	19c00 <PyInit__decimal@@Base+0x1314c>  // b.any
   19b4c:	mov	x0, x21
   19b50:	b	19bfc <PyInit__decimal@@Base+0x13148>
   19b54:	ldr	x8, [x20, #8]
   19b58:	ldrb	w9, [x8, #171]
   19b5c:	tbnz	w9, #0, 19bac <PyInit__decimal@@Base+0x130f8>
   19b60:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   19b64:	ldr	x9, [x9, #3936]
   19b68:	ldr	x2, [x8, #24]
   19b6c:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19b70:	add	x1, x1, #0x263
   19b74:	ldr	x0, [x9]
   19b78:	bl	6950 <PyErr_Format@plt>
   19b7c:	b	19c00 <PyInit__decimal@@Base+0x1314c>
   19b80:	ldr	x8, [x21, #8]
   19b84:	ldrb	w9, [x8, #171]
   19b88:	tbnz	w9, #0, 19bcc <PyInit__decimal@@Base+0x13118>
   19b8c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   19b90:	ldr	x9, [x9, #3936]
   19b94:	ldr	x2, [x8, #24]
   19b98:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19b9c:	add	x1, x1, #0x263
   19ba0:	ldr	x0, [x9]
   19ba4:	bl	6950 <PyErr_Format@plt>
   19ba8:	b	19be8 <PyInit__decimal@@Base+0x13134>
   19bac:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19bb0:	add	x0, x0, #0x318
   19bb4:	mov	x1, x20
   19bb8:	mov	x2, x19
   19bbc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   19bc0:	mov	x20, x0
   19bc4:	cbnz	x0, 19a54 <PyInit__decimal@@Base+0x12fa0>
   19bc8:	b	19c00 <PyInit__decimal@@Base+0x1314c>
   19bcc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19bd0:	add	x0, x0, #0x318
   19bd4:	mov	x1, x21
   19bd8:	mov	x2, x19
   19bdc:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   19be0:	mov	x21, x0
   19be4:	cbnz	x0, 19a80 <PyInit__decimal@@Base+0x12fcc>
   19be8:	ldr	x8, [x20]
   19bec:	subs	x8, x8, #0x1
   19bf0:	str	x8, [x20]
   19bf4:	b.ne	19c00 <PyInit__decimal@@Base+0x1314c>  // b.any
   19bf8:	mov	x0, x20
   19bfc:	bl	6510 <_Py_Dealloc@plt>
   19c00:	mov	x22, xzr
   19c04:	mov	x0, x22
   19c08:	ldp	x20, x19, [sp, #64]
   19c0c:	ldp	x22, x21, [sp, #48]
   19c10:	ldp	x29, x30, [sp, #32]
   19c14:	add	sp, sp, #0x50
   19c18:	ret
   19c1c:	sub	sp, sp, #0x50
   19c20:	stp	x29, x30, [sp, #32]
   19c24:	stp	x22, x21, [sp, #48]
   19c28:	stp	x20, x19, [sp, #64]
   19c2c:	add	x29, sp, #0x20
   19c30:	mov	x8, x1
   19c34:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19c38:	mov	x19, x0
   19c3c:	add	x1, x1, #0xd4c
   19c40:	sub	x2, x29, #0x8
   19c44:	add	x3, sp, #0x10
   19c48:	mov	x0, x8
   19c4c:	str	wzr, [sp, #12]
   19c50:	bl	6820 <PyArg_ParseTuple@plt>
   19c54:	cbz	w0, 19e38 <PyInit__decimal@@Base+0x13384>
   19c58:	ldur	x20, [x29, #-8]
   19c5c:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   19c60:	add	x22, x22, #0x318
   19c64:	ldr	x0, [x20, #8]
   19c68:	cmp	x0, x22
   19c6c:	b.eq	19c80 <PyInit__decimal@@Base+0x131cc>  // b.none
   19c70:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   19c74:	add	x1, x1, #0x318
   19c78:	bl	6900 <PyType_IsSubtype@plt>
   19c7c:	cbz	w0, 19d8c <PyInit__decimal@@Base+0x132d8>
   19c80:	ldr	x8, [x20]
   19c84:	add	x8, x8, #0x1
   19c88:	str	x8, [x20]
   19c8c:	ldr	x21, [sp, #16]
   19c90:	ldr	x0, [x21, #8]
   19c94:	cmp	x0, x22
   19c98:	b.eq	19cac <PyInit__decimal@@Base+0x131f8>  // b.none
   19c9c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   19ca0:	add	x1, x1, #0x318
   19ca4:	bl	6900 <PyType_IsSubtype@plt>
   19ca8:	cbz	w0, 19db8 <PyInit__decimal@@Base+0x13304>
   19cac:	ldr	x8, [x21]
   19cb0:	add	x8, x8, #0x1
   19cb4:	str	x8, [x21]
   19cb8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19cbc:	add	x0, x0, #0x318
   19cc0:	bl	6890 <_PyObject_New@plt>
   19cc4:	cbz	x0, 19d5c <PyInit__decimal@@Base+0x132a8>
   19cc8:	mov	w8, #0x30                  	// #48
   19ccc:	mov	x22, x0
   19cd0:	strb	w8, [x0, #24]!
   19cd4:	mov	x9, #0xffffffffffffffff    	// #-1
   19cd8:	mov	w10, #0x4                   	// #4
   19cdc:	add	x1, x20, #0x18
   19ce0:	add	x2, x21, #0x18
   19ce4:	add	x8, x0, #0x30
   19ce8:	add	x3, x19, #0x10
   19cec:	add	x4, sp, #0xc
   19cf0:	stur	x9, [x0, #-8]
   19cf4:	stp	xzr, xzr, [x0, #8]
   19cf8:	stp	xzr, x10, [x0, #24]
   19cfc:	str	x8, [x0, #40]
   19d00:	bl	263c4 <PyInit__decimal@@Base+0x1f910>
   19d04:	ldr	x8, [x20]
   19d08:	subs	x8, x8, #0x1
   19d0c:	str	x8, [x20]
   19d10:	b.ne	19d1c <PyInit__decimal@@Base+0x13268>  // b.any
   19d14:	mov	x0, x20
   19d18:	bl	6510 <_Py_Dealloc@plt>
   19d1c:	ldr	x8, [x21]
   19d20:	subs	x8, x8, #0x1
   19d24:	str	x8, [x21]
   19d28:	b.ne	19d34 <PyInit__decimal@@Base+0x13280>  // b.any
   19d2c:	mov	x0, x21
   19d30:	bl	6510 <_Py_Dealloc@plt>
   19d34:	ldr	w1, [sp, #12]
   19d38:	mov	x0, x19
   19d3c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   19d40:	cbz	w0, 19e3c <PyInit__decimal@@Base+0x13388>
   19d44:	ldr	x8, [x22]
   19d48:	subs	x8, x8, #0x1
   19d4c:	str	x8, [x22]
   19d50:	b.ne	19e38 <PyInit__decimal@@Base+0x13384>  // b.any
   19d54:	mov	x0, x22
   19d58:	b	19e34 <PyInit__decimal@@Base+0x13380>
   19d5c:	ldr	x8, [x20]
   19d60:	subs	x8, x8, #0x1
   19d64:	str	x8, [x20]
   19d68:	b.ne	19d74 <PyInit__decimal@@Base+0x132c0>  // b.any
   19d6c:	mov	x0, x20
   19d70:	bl	6510 <_Py_Dealloc@plt>
   19d74:	ldr	x8, [x21]
   19d78:	subs	x8, x8, #0x1
   19d7c:	str	x8, [x21]
   19d80:	b.ne	19e38 <PyInit__decimal@@Base+0x13384>  // b.any
   19d84:	mov	x0, x21
   19d88:	b	19e34 <PyInit__decimal@@Base+0x13380>
   19d8c:	ldr	x8, [x20, #8]
   19d90:	ldrb	w9, [x8, #171]
   19d94:	tbnz	w9, #0, 19de4 <PyInit__decimal@@Base+0x13330>
   19d98:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   19d9c:	ldr	x9, [x9, #3936]
   19da0:	ldr	x2, [x8, #24]
   19da4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19da8:	add	x1, x1, #0x263
   19dac:	ldr	x0, [x9]
   19db0:	bl	6950 <PyErr_Format@plt>
   19db4:	b	19e38 <PyInit__decimal@@Base+0x13384>
   19db8:	ldr	x8, [x21, #8]
   19dbc:	ldrb	w9, [x8, #171]
   19dc0:	tbnz	w9, #0, 19e04 <PyInit__decimal@@Base+0x13350>
   19dc4:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   19dc8:	ldr	x9, [x9, #3936]
   19dcc:	ldr	x2, [x8, #24]
   19dd0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   19dd4:	add	x1, x1, #0x263
   19dd8:	ldr	x0, [x9]
   19ddc:	bl	6950 <PyErr_Format@plt>
   19de0:	b	19e20 <PyInit__decimal@@Base+0x1336c>
   19de4:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19de8:	add	x0, x0, #0x318
   19dec:	mov	x1, x20
   19df0:	mov	x2, x19
   19df4:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   19df8:	mov	x20, x0
   19dfc:	cbnz	x0, 19c8c <PyInit__decimal@@Base+0x131d8>
   19e00:	b	19e38 <PyInit__decimal@@Base+0x13384>
   19e04:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   19e08:	add	x0, x0, #0x318
   19e0c:	mov	x1, x21
   19e10:	mov	x2, x19
   19e14:	bl	a7a8 <PyInit__decimal@@Base+0x3cf4>
   19e18:	mov	x21, x0
   19e1c:	cbnz	x0, 19cb8 <PyInit__decimal@@Base+0x13204>
   19e20:	ldr	x8, [x20]
   19e24:	subs	x8, x8, #0x1
   19e28:	str	x8, [x20]
   19e2c:	b.ne	19e38 <PyInit__decimal@@Base+0x13384>  // b.any
   19e30:	mov	x0, x20
   19e34:	bl	6510 <_Py_Dealloc@plt>
   19e38:	mov	x22, xzr
   19e3c:	mov	x0, x22
   19e40:	ldp	x20, x19, [sp, #64]
   19e44:	ldp	x22, x21, [sp, #48]
   19e48:	ldp	x29, x30, [sp, #32]
   19e4c:	add	sp, sp, #0x50
   19e50:	ret
   19e54:	str	wzr, [x0, #44]
   19e58:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   19e5c:	ldr	x0, [x0, #4008]
   19e60:	ldr	x8, [x0]
   19e64:	add	x8, x8, #0x1
   19e68:	str	x8, [x0]
   19e6c:	ret
   19e70:	str	wzr, [x0, #40]
   19e74:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   19e78:	ldr	x0, [x0, #4008]
   19e7c:	ldr	x8, [x0]
   19e80:	add	x8, x8, #0x1
   19e84:	str	x8, [x0]
   19e88:	ret
   19e8c:	sub	sp, sp, #0x50
   19e90:	stp	x29, x30, [sp, #16]
   19e94:	str	x23, [sp, #32]
   19e98:	stp	x22, x21, [sp, #48]
   19e9c:	stp	x20, x19, [sp, #64]
   19ea0:	add	x29, sp, #0x10
   19ea4:	ldr	w21, [x0, #44]
   19ea8:	mov	x20, x0
   19eac:	mov	x0, xzr
   19eb0:	bl	63f0 <PyList_New@plt>
   19eb4:	cbz	x0, 19f78 <PyInit__decimal@@Base+0x134c4>
   19eb8:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   19ebc:	ldr	x8, [x22, #2560]
   19ec0:	mov	x19, x0
   19ec4:	cbz	x8, 19efc <PyInit__decimal@@Base+0x13448>
   19ec8:	adrp	x23, 51000 <PyInit__decimal@@Base+0x4a54c>
   19ecc:	add	x23, x23, #0xa20
   19ed0:	b	19edc <PyInit__decimal@@Base+0x13428>
   19ed4:	ldr	x8, [x23], #32
   19ed8:	cbz	x8, 19efc <PyInit__decimal@@Base+0x13448>
   19edc:	ldur	w8, [x23, #-16]
   19ee0:	tst	w8, w21
   19ee4:	b.eq	19ed4 <PyInit__decimal@@Base+0x13420>  // b.none
   19ee8:	ldur	x1, [x23, #-8]
   19eec:	mov	x0, x19
   19ef0:	bl	66b0 <PyList_Append@plt>
   19ef4:	tbz	w0, #31, 19ed4 <PyInit__decimal@@Base+0x13420>
   19ef8:	b	19f60 <PyInit__decimal@@Base+0x134ac>
   19efc:	ldr	w23, [x20, #40]
   19f00:	mov	x0, xzr
   19f04:	bl	63f0 <PyList_New@plt>
   19f08:	cbz	x0, 19f60 <PyInit__decimal@@Base+0x134ac>
   19f0c:	ldr	x8, [x22, #2560]
   19f10:	mov	x21, x0
   19f14:	cbz	x8, 19f98 <PyInit__decimal@@Base+0x134e4>
   19f18:	adrp	x22, 51000 <PyInit__decimal@@Base+0x4a54c>
   19f1c:	add	x22, x22, #0xa20
   19f20:	b	19f2c <PyInit__decimal@@Base+0x13478>
   19f24:	ldr	x8, [x22], #32
   19f28:	cbz	x8, 19f98 <PyInit__decimal@@Base+0x134e4>
   19f2c:	ldur	w8, [x22, #-16]
   19f30:	tst	w8, w23
   19f34:	b.eq	19f24 <PyInit__decimal@@Base+0x13470>  // b.none
   19f38:	ldur	x1, [x22, #-8]
   19f3c:	mov	x0, x21
   19f40:	bl	66b0 <PyList_Append@plt>
   19f44:	tbz	w0, #31, 19f24 <PyInit__decimal@@Base+0x13470>
   19f48:	ldr	x8, [x21]
   19f4c:	subs	x8, x8, #0x1
   19f50:	str	x8, [x21]
   19f54:	b.ne	19f60 <PyInit__decimal@@Base+0x134ac>  // b.any
   19f58:	mov	x0, x21
   19f5c:	bl	6510 <_Py_Dealloc@plt>
   19f60:	ldr	x8, [x19]
   19f64:	subs	x8, x8, #0x1
   19f68:	str	x8, [x19]
   19f6c:	b.ne	19f78 <PyInit__decimal@@Base+0x134c4>  // b.any
   19f70:	mov	x0, x19
   19f74:	bl	6510 <_Py_Dealloc@plt>
   19f78:	mov	x20, xzr
   19f7c:	mov	x0, x20
   19f80:	ldp	x20, x19, [sp, #64]
   19f84:	ldp	x22, x21, [sp, #48]
   19f88:	ldr	x23, [sp, #32]
   19f8c:	ldp	x29, x30, [sp, #16]
   19f90:	add	sp, sp, #0x50
   19f94:	ret
   19f98:	ldp	w8, w7, [x20, #52]
   19f9c:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   19fa0:	sxtw	x8, w8
   19fa4:	add	x9, x9, #0x4e0
   19fa8:	ldp	x1, x2, [x20, #8]
   19fac:	ldp	x5, x4, [x20, #24]
   19fb0:	ldr	x3, [x9, x8, lsl #3]
   19fb4:	ldr	w6, [x20, #80]
   19fb8:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
   19fbc:	add	x0, x0, #0xc3f
   19fc0:	stp	x19, x21, [sp]
   19fc4:	bl	6710 <Py_BuildValue@plt>
   19fc8:	ldr	x8, [x19]
   19fcc:	mov	x20, x0
   19fd0:	subs	x8, x8, #0x1
   19fd4:	str	x8, [x19]
   19fd8:	b.ne	19fe4 <PyInit__decimal@@Base+0x13530>  // b.any
   19fdc:	mov	x0, x19
   19fe0:	bl	6510 <_Py_Dealloc@plt>
   19fe4:	ldr	x8, [x21]
   19fe8:	subs	x8, x8, #0x1
   19fec:	str	x8, [x21]
   19ff0:	b.ne	19f7c <PyInit__decimal@@Base+0x134c8>  // b.any
   19ff4:	mov	x0, x21
   19ff8:	bl	6510 <_Py_Dealloc@plt>
   19ffc:	b	19f7c <PyInit__decimal@@Base+0x134c8>
   1a000:	sub	sp, sp, #0x40
   1a004:	stp	x29, x30, [sp, #16]
   1a008:	str	x21, [sp, #32]
   1a00c:	stp	x20, x19, [sp, #48]
   1a010:	add	x29, sp, #0x10
   1a014:	mov	x8, x1
   1a018:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a01c:	mov	x19, x0
   1a020:	add	x1, x1, #0x77c
   1a024:	add	x2, sp, #0x8
   1a028:	mov	x0, x8
   1a02c:	str	xzr, [sp, #8]
   1a030:	bl	6820 <PyArg_ParseTuple@plt>
   1a034:	cbz	w0, 1a34c <PyInit__decimal@@Base+0x13898>
   1a038:	ldr	x20, [sp, #8]
   1a03c:	cbz	x20, 1a0e8 <PyInit__decimal@@Base+0x13634>
   1a040:	ldr	x0, [x20, #8]
   1a044:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a048:	add	x8, x8, #0x318
   1a04c:	cmp	x0, x8
   1a050:	b.eq	1a064 <PyInit__decimal@@Base+0x135b0>  // b.none
   1a054:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a058:	add	x1, x1, #0x318
   1a05c:	bl	6900 <PyType_IsSubtype@plt>
   1a060:	cbz	w0, 1a178 <PyInit__decimal@@Base+0x136c4>
   1a064:	add	x21, x20, #0x18
   1a068:	mov	x0, x21
   1a06c:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
   1a070:	cbz	w0, 1a164 <PyInit__decimal@@Base+0x136b0>
   1a074:	ldr	x8, [x19, #16]
   1a078:	ldrsw	x9, [x19, #56]
   1a07c:	ldr	x10, [x21, #16]
   1a080:	sub	x8, x8, x9
   1a084:	cmp	x10, x8
   1a088:	b.le	1a164 <PyInit__decimal@@Base+0x136b0>
   1a08c:	mov	w1, #0x2                   	// #2
   1a090:	mov	x0, x19
   1a094:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1a098:	cbnz	w0, 1a34c <PyInit__decimal@@Base+0x13898>
   1a09c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a0a0:	add	x0, x0, #0x318
   1a0a4:	bl	6890 <_PyObject_New@plt>
   1a0a8:	mov	x20, x0
   1a0ac:	cbz	x0, 1a350 <PyInit__decimal@@Base+0x1389c>
   1a0b0:	mov	w8, #0x30                  	// #48
   1a0b4:	mov	x0, x20
   1a0b8:	strb	w8, [x0, #24]!
   1a0bc:	mov	x9, #0xffffffffffffffff    	// #-1
   1a0c0:	mov	w10, #0x4                   	// #4
   1a0c4:	add	x8, x0, #0x30
   1a0c8:	mov	w2, #0x4                   	// #4
   1a0cc:	mov	w1, wzr
   1a0d0:	stur	x9, [x0, #-8]
   1a0d4:	stp	xzr, xzr, [x0, #8]
   1a0d8:	stp	xzr, x10, [x0, #24]
   1a0dc:	str	x8, [x0, #40]
   1a0e0:	bl	216cc <PyInit__decimal@@Base+0x1ac18>
   1a0e4:	b	1a350 <PyInit__decimal@@Base+0x1389c>
   1a0e8:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a0ec:	add	x0, x0, #0x318
   1a0f0:	str	wzr, [x29, #28]
   1a0f4:	bl	6890 <_PyObject_New@plt>
   1a0f8:	mov	x20, x0
   1a0fc:	cbz	x0, 1a350 <PyInit__decimal@@Base+0x1389c>
   1a100:	mov	w8, #0x30                  	// #48
   1a104:	mov	x0, x20
   1a108:	strb	w8, [x0, #24]!
   1a10c:	mov	x9, #0xffffffffffffffff    	// #-1
   1a110:	mov	w10, #0x4                   	// #4
   1a114:	add	x8, x0, #0x30
   1a118:	add	x2, x19, #0x10
   1a11c:	add	x3, x29, #0x1c
   1a120:	mov	x1, xzr
   1a124:	stur	x9, [x0, #-8]
   1a128:	stp	xzr, xzr, [x0, #8]
   1a12c:	stp	xzr, x10, [x0, #24]
   1a130:	str	x8, [x0, #40]
   1a134:	bl	21e44 <PyInit__decimal@@Base+0x1b390>
   1a138:	ldr	w1, [x29, #28]
   1a13c:	mov	x0, x19
   1a140:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1a144:	cbz	w0, 1a350 <PyInit__decimal@@Base+0x1389c>
   1a148:	ldr	x8, [x20]
   1a14c:	subs	x8, x8, #0x1
   1a150:	str	x8, [x20]
   1a154:	b.ne	1a34c <PyInit__decimal@@Base+0x13898>  // b.any
   1a158:	mov	x0, x20
   1a15c:	bl	6510 <_Py_Dealloc@plt>
   1a160:	b	1a34c <PyInit__decimal@@Base+0x13898>
   1a164:	mov	x0, x20
   1a168:	mov	x1, x19
   1a16c:	bl	1a3e8 <PyInit__decimal@@Base+0x13934>
   1a170:	mov	x20, x0
   1a174:	b	1a350 <PyInit__decimal@@Base+0x1389c>
   1a178:	ldr	x0, [x20, #8]
   1a17c:	ldr	x8, [x0, #168]
   1a180:	tbnz	w8, #28, 1a1b4 <PyInit__decimal@@Base+0x13700>
   1a184:	tbnz	w8, #24, 1a254 <PyInit__decimal@@Base+0x137a0>
   1a188:	tst	x8, #0x6000000
   1a18c:	b.eq	1a27c <PyInit__decimal@@Base+0x137c8>  // b.none
   1a190:	tbnz	w8, #26, 1a2e0 <PyInit__decimal@@Base+0x1382c>
   1a194:	tbnz	w8, #25, 1a2f0 <PyInit__decimal@@Base+0x1383c>
   1a198:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1a19c:	ldr	x8, [x8, #3936]
   1a1a0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a1a4:	add	x1, x1, #0x90f
   1a1a8:	ldr	x0, [x8]
   1a1ac:	bl	6590 <PyErr_SetString@plt>
   1a1b0:	b	1a34c <PyInit__decimal@@Base+0x13898>
   1a1b4:	mov	x0, x20
   1a1b8:	mov	w1, wzr
   1a1bc:	mov	w2, wzr
   1a1c0:	bl	129b8 <PyInit__decimal@@Base+0xbf04>
   1a1c4:	cbz	x0, 1a34c <PyInit__decimal@@Base+0x13898>
   1a1c8:	mov	x21, x0
   1a1cc:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a1d0:	add	x0, x0, #0x318
   1a1d4:	str	wzr, [x29, #28]
   1a1d8:	bl	6890 <_PyObject_New@plt>
   1a1dc:	mov	x20, x0
   1a1e0:	cbz	x0, 1a248 <PyInit__decimal@@Base+0x13794>
   1a1e4:	mov	w8, #0x30                  	// #48
   1a1e8:	mov	x0, x20
   1a1ec:	strb	w8, [x0, #24]!
   1a1f0:	mov	x9, #0xffffffffffffffff    	// #-1
   1a1f4:	mov	w10, #0x4                   	// #4
   1a1f8:	add	x8, x0, #0x30
   1a1fc:	add	x2, x19, #0x10
   1a200:	add	x3, x29, #0x1c
   1a204:	mov	x1, x21
   1a208:	stur	x9, [x0, #-8]
   1a20c:	stp	xzr, xzr, [x0, #8]
   1a210:	stp	xzr, x10, [x0, #24]
   1a214:	str	x8, [x0, #40]
   1a218:	bl	1df0c <PyInit__decimal@@Base+0x17458>
   1a21c:	ldr	w1, [x29, #28]
   1a220:	mov	x0, x19
   1a224:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1a228:	cbz	w0, 1a248 <PyInit__decimal@@Base+0x13794>
   1a22c:	ldr	x8, [x20]
   1a230:	subs	x8, x8, #0x1
   1a234:	str	x8, [x20]
   1a238:	b.ne	1a244 <PyInit__decimal@@Base+0x13790>  // b.any
   1a23c:	mov	x0, x20
   1a240:	bl	6510 <_Py_Dealloc@plt>
   1a244:	mov	x20, xzr
   1a248:	mov	x0, x21
   1a24c:	bl	64a0 <PyMem_Free@plt>
   1a250:	b	1a350 <PyInit__decimal@@Base+0x1389c>
   1a254:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a258:	add	x2, x19, #0x10
   1a25c:	add	x0, x0, #0x318
   1a260:	add	x3, x29, #0x1c
   1a264:	mov	x1, x20
   1a268:	str	wzr, [x29, #28]
   1a26c:	bl	a888 <PyInit__decimal@@Base+0x3dd4>
   1a270:	mov	x20, x0
   1a274:	cbnz	x0, 1a138 <PyInit__decimal@@Base+0x13684>
   1a278:	b	1a350 <PyInit__decimal@@Base+0x1389c>
   1a27c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1a280:	ldr	x8, [x8, #3864]
   1a284:	cmp	x0, x8
   1a288:	b.eq	1a29c <PyInit__decimal@@Base+0x137e8>  // b.none
   1a28c:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   1a290:	ldr	x1, [x1, #3864]
   1a294:	bl	6900 <PyType_IsSubtype@plt>
   1a298:	cbz	w0, 1a32c <PyInit__decimal@@Base+0x13878>
   1a29c:	mov	w1, #0x400                 	// #1024
   1a2a0:	mov	x0, x19
   1a2a4:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1a2a8:	cbnz	w0, 1a34c <PyInit__decimal@@Base+0x13898>
   1a2ac:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a2b0:	add	x0, x0, #0x318
   1a2b4:	mov	x1, x20
   1a2b8:	mov	x2, x19
   1a2bc:	str	wzr, [x29, #28]
   1a2c0:	bl	ab54 <PyInit__decimal@@Base+0x40a0>
   1a2c4:	mov	x20, x0
   1a2c8:	cbz	x0, 1a350 <PyInit__decimal@@Base+0x1389c>
   1a2cc:	add	x0, x20, #0x18
   1a2d0:	add	x1, x19, #0x10
   1a2d4:	add	x2, x29, #0x1c
   1a2d8:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   1a2dc:	b	1a138 <PyInit__decimal@@Base+0x13684>
   1a2e0:	ldr	x8, [x20]
   1a2e4:	add	x8, x8, #0x1
   1a2e8:	str	x8, [x20]
   1a2ec:	b	1a300 <PyInit__decimal@@Base+0x1384c>
   1a2f0:	mov	x0, x20
   1a2f4:	bl	6470 <PyList_AsTuple@plt>
   1a2f8:	mov	x20, x0
   1a2fc:	cbz	x0, 1a350 <PyInit__decimal@@Base+0x1389c>
   1a300:	mov	x0, x20
   1a304:	bl	12d04 <PyInit__decimal@@Base+0xc250>
   1a308:	ldr	x8, [x20]
   1a30c:	mov	x21, x0
   1a310:	subs	x8, x8, #0x1
   1a314:	str	x8, [x20]
   1a318:	b.ne	1a324 <PyInit__decimal@@Base+0x13870>  // b.any
   1a31c:	mov	x0, x20
   1a320:	bl	6510 <_Py_Dealloc@plt>
   1a324:	cbnz	x21, 1a1cc <PyInit__decimal@@Base+0x13718>
   1a328:	b	1a34c <PyInit__decimal@@Base+0x13898>
   1a32c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1a330:	ldr	x8, [x20, #8]
   1a334:	ldr	x9, [x9, #3936]
   1a338:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a33c:	add	x1, x1, #0x263
   1a340:	ldr	x2, [x8, #24]
   1a344:	ldr	x0, [x9]
   1a348:	bl	6950 <PyErr_Format@plt>
   1a34c:	mov	x20, xzr
   1a350:	mov	x0, x20
   1a354:	ldp	x20, x19, [sp, #48]
   1a358:	ldr	x21, [sp, #32]
   1a35c:	ldp	x29, x30, [sp, #16]
   1a360:	add	sp, sp, #0x40
   1a364:	ret
   1a368:	sub	sp, sp, #0x30
   1a36c:	stp	x29, x30, [sp, #16]
   1a370:	stp	x20, x19, [sp, #32]
   1a374:	add	x29, sp, #0x10
   1a378:	mov	x20, x0
   1a37c:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a380:	add	x0, x0, #0x318
   1a384:	mov	x2, x20
   1a388:	stur	wzr, [x29, #-4]
   1a38c:	bl	ab54 <PyInit__decimal@@Base+0x40a0>
   1a390:	mov	x19, x0
   1a394:	cbz	x0, 1a3d4 <PyInit__decimal@@Base+0x13920>
   1a398:	add	x0, x19, #0x18
   1a39c:	add	x1, x20, #0x10
   1a3a0:	sub	x2, x29, #0x4
   1a3a4:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   1a3a8:	ldur	w1, [x29, #-4]
   1a3ac:	mov	x0, x20
   1a3b0:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1a3b4:	cbz	w0, 1a3d4 <PyInit__decimal@@Base+0x13920>
   1a3b8:	ldr	x8, [x19]
   1a3bc:	subs	x8, x8, #0x1
   1a3c0:	str	x8, [x19]
   1a3c4:	b.ne	1a3d0 <PyInit__decimal@@Base+0x1391c>  // b.any
   1a3c8:	mov	x0, x19
   1a3cc:	bl	6510 <_Py_Dealloc@plt>
   1a3d0:	mov	x19, xzr
   1a3d4:	mov	x0, x19
   1a3d8:	ldp	x20, x19, [sp, #32]
   1a3dc:	ldp	x29, x30, [sp, #16]
   1a3e0:	add	sp, sp, #0x30
   1a3e4:	ret
   1a3e8:	sub	sp, sp, #0x40
   1a3ec:	stp	x29, x30, [sp, #16]
   1a3f0:	stp	x22, x21, [sp, #32]
   1a3f4:	stp	x20, x19, [sp, #48]
   1a3f8:	add	x29, sp, #0x10
   1a3fc:	mov	x22, x0
   1a400:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a404:	add	x0, x0, #0x318
   1a408:	mov	x20, x1
   1a40c:	stur	wzr, [x29, #-4]
   1a410:	bl	6890 <_PyObject_New@plt>
   1a414:	mov	x19, x0
   1a418:	cbz	x0, 1a4a0 <PyInit__decimal@@Base+0x139ec>
   1a41c:	mov	w8, #0x30                  	// #48
   1a420:	mov	x21, x19
   1a424:	strb	w8, [x21, #24]!
   1a428:	mov	x9, #0xffffffffffffffff    	// #-1
   1a42c:	mov	w10, #0x4                   	// #4
   1a430:	add	x8, x21, #0x30
   1a434:	add	x1, x22, #0x18
   1a438:	sub	x2, x29, #0x4
   1a43c:	mov	x0, x21
   1a440:	stur	x9, [x21, #-8]
   1a444:	stp	xzr, xzr, [x21, #8]
   1a448:	stp	xzr, x10, [x21, #24]
   1a44c:	str	x8, [x21, #40]
   1a450:	bl	22898 <PyInit__decimal@@Base+0x1bde4>
   1a454:	ldur	w1, [x29, #-4]
   1a458:	mov	x0, x20
   1a45c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1a460:	cbnz	w0, 1a484 <PyInit__decimal@@Base+0x139d0>
   1a464:	add	x1, x20, #0x10
   1a468:	sub	x2, x29, #0x4
   1a46c:	mov	x0, x21
   1a470:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   1a474:	ldur	w1, [x29, #-4]
   1a478:	mov	x0, x20
   1a47c:	bl	a654 <PyInit__decimal@@Base+0x3ba0>
   1a480:	cbz	w0, 1a4a0 <PyInit__decimal@@Base+0x139ec>
   1a484:	ldr	x8, [x19]
   1a488:	subs	x8, x8, #0x1
   1a48c:	str	x8, [x19]
   1a490:	b.ne	1a49c <PyInit__decimal@@Base+0x139e8>  // b.any
   1a494:	mov	x0, x19
   1a498:	bl	6510 <_Py_Dealloc@plt>
   1a49c:	mov	x19, xzr
   1a4a0:	mov	x0, x19
   1a4a4:	ldp	x20, x19, [sp, #48]
   1a4a8:	ldp	x22, x21, [sp, #32]
   1a4ac:	ldp	x29, x30, [sp, #16]
   1a4b0:	add	sp, sp, #0x40
   1a4b4:	ret
   1a4b8:	stp	x29, x30, [sp, #-16]!
   1a4bc:	mov	x29, sp
   1a4c0:	add	x0, x0, #0x10
   1a4c4:	bl	1c944 <PyInit__decimal@@Base+0x15e90>
   1a4c8:	ldp	x29, x30, [sp], #16
   1a4cc:	b	65e0 <PyLong_FromSsize_t@plt>
   1a4d0:	stp	x29, x30, [sp, #-32]!
   1a4d4:	stp	x20, x19, [sp, #16]
   1a4d8:	mov	x29, sp
   1a4dc:	mov	x19, x0
   1a4e0:	mov	x0, x1
   1a4e4:	bl	6630 <PyLong_AsSsize_t@plt>
   1a4e8:	mov	x20, x0
   1a4ec:	cmn	x0, #0x1
   1a4f0:	b.eq	1a50c <PyInit__decimal@@Base+0x13a58>  // b.none
   1a4f4:	add	x0, x19, #0x10
   1a4f8:	mov	x1, x20
   1a4fc:	bl	1c7f8 <PyInit__decimal@@Base+0x15d44>
   1a500:	cbz	w0, 1a518 <PyInit__decimal@@Base+0x13a64>
   1a504:	mov	w0, wzr
   1a508:	b	1a534 <PyInit__decimal@@Base+0x13a80>
   1a50c:	bl	6720 <PyErr_Occurred@plt>
   1a510:	cbnz	x0, 1a530 <PyInit__decimal@@Base+0x13a7c>
   1a514:	b	1a4f4 <PyInit__decimal@@Base+0x13a40>
   1a518:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1a51c:	ldr	x8, [x8, #3928]
   1a520:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a524:	add	x1, x1, #0xc69
   1a528:	ldr	x0, [x8]
   1a52c:	bl	6590 <PyErr_SetString@plt>
   1a530:	mov	w0, #0xffffffff            	// #-1
   1a534:	ldp	x20, x19, [sp, #16]
   1a538:	ldp	x29, x30, [sp], #32
   1a53c:	ret
   1a540:	stp	x29, x30, [sp, #-16]!
   1a544:	mov	x29, sp
   1a548:	add	x0, x0, #0x10
   1a54c:	bl	1c94c <PyInit__decimal@@Base+0x15e98>
   1a550:	ldp	x29, x30, [sp], #16
   1a554:	b	65e0 <PyLong_FromSsize_t@plt>
   1a558:	stp	x29, x30, [sp, #-32]!
   1a55c:	stp	x20, x19, [sp, #16]
   1a560:	mov	x29, sp
   1a564:	mov	x19, x0
   1a568:	mov	x0, x1
   1a56c:	bl	6630 <PyLong_AsSsize_t@plt>
   1a570:	mov	x20, x0
   1a574:	cmn	x0, #0x1
   1a578:	b.eq	1a594 <PyInit__decimal@@Base+0x13ae0>  // b.none
   1a57c:	add	x0, x19, #0x10
   1a580:	mov	x1, x20
   1a584:	bl	1c984 <PyInit__decimal@@Base+0x15ed0>
   1a588:	cbz	w0, 1a5a0 <PyInit__decimal@@Base+0x13aec>
   1a58c:	mov	w0, wzr
   1a590:	b	1a5bc <PyInit__decimal@@Base+0x13b08>
   1a594:	bl	6720 <PyErr_Occurred@plt>
   1a598:	cbnz	x0, 1a5b8 <PyInit__decimal@@Base+0x13b04>
   1a59c:	b	1a57c <PyInit__decimal@@Base+0x13ac8>
   1a5a0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1a5a4:	ldr	x8, [x8, #3928]
   1a5a8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a5ac:	add	x1, x1, #0xc8f
   1a5b0:	ldr	x0, [x8]
   1a5b4:	bl	6590 <PyErr_SetString@plt>
   1a5b8:	mov	w0, #0xffffffff            	// #-1
   1a5bc:	ldp	x20, x19, [sp, #16]
   1a5c0:	ldp	x29, x30, [sp], #32
   1a5c4:	ret
   1a5c8:	stp	x29, x30, [sp, #-16]!
   1a5cc:	mov	x29, sp
   1a5d0:	add	x0, x0, #0x10
   1a5d4:	bl	1c954 <PyInit__decimal@@Base+0x15ea0>
   1a5d8:	ldp	x29, x30, [sp], #16
   1a5dc:	b	65e0 <PyLong_FromSsize_t@plt>
   1a5e0:	stp	x29, x30, [sp, #-32]!
   1a5e4:	stp	x20, x19, [sp, #16]
   1a5e8:	mov	x29, sp
   1a5ec:	mov	x19, x0
   1a5f0:	mov	x0, x1
   1a5f4:	bl	6630 <PyLong_AsSsize_t@plt>
   1a5f8:	mov	x20, x0
   1a5fc:	cmn	x0, #0x1
   1a600:	b.eq	1a61c <PyInit__decimal@@Base+0x13b68>  // b.none
   1a604:	add	x0, x19, #0x10
   1a608:	mov	x1, x20
   1a60c:	bl	1c9ac <PyInit__decimal@@Base+0x15ef8>
   1a610:	cbz	w0, 1a628 <PyInit__decimal@@Base+0x13b74>
   1a614:	mov	w0, wzr
   1a618:	b	1a644 <PyInit__decimal@@Base+0x13b90>
   1a61c:	bl	6720 <PyErr_Occurred@plt>
   1a620:	cbnz	x0, 1a640 <PyInit__decimal@@Base+0x13b8c>
   1a624:	b	1a604 <PyInit__decimal@@Base+0x13b50>
   1a628:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1a62c:	ldr	x8, [x8, #3928]
   1a630:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a634:	add	x1, x1, #0xcb5
   1a638:	ldr	x0, [x8]
   1a63c:	bl	6590 <PyErr_SetString@plt>
   1a640:	mov	w0, #0xffffffff            	// #-1
   1a644:	ldp	x20, x19, [sp, #16]
   1a648:	ldp	x29, x30, [sp], #32
   1a64c:	ret
   1a650:	stp	x29, x30, [sp, #-16]!
   1a654:	mov	x29, sp
   1a658:	add	x0, x0, #0x10
   1a65c:	bl	1c95c <PyInit__decimal@@Base+0x15ea8>
   1a660:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1a664:	add	x8, x8, #0x5f0
   1a668:	ldr	x0, [x8, w0, sxtw #3]
   1a66c:	ldr	x8, [x0]
   1a670:	add	x8, x8, #0x1
   1a674:	str	x8, [x0]
   1a678:	ldp	x29, x30, [sp], #16
   1a67c:	ret
   1a680:	stp	x29, x30, [sp, #-32]!
   1a684:	str	x19, [sp, #16]
   1a688:	mov	x29, sp
   1a68c:	mov	x19, x0
   1a690:	mov	x0, x1
   1a694:	bl	12790 <PyInit__decimal@@Base+0xbcdc>
   1a698:	cmn	w0, #0x1
   1a69c:	b.eq	1a6d4 <PyInit__decimal@@Base+0x13c20>  // b.none
   1a6a0:	mov	w1, w0
   1a6a4:	add	x0, x19, #0x10
   1a6a8:	bl	1c9d8 <PyInit__decimal@@Base+0x15f24>
   1a6ac:	cbz	w0, 1a6b8 <PyInit__decimal@@Base+0x13c04>
   1a6b0:	mov	w0, wzr
   1a6b4:	b	1a6d4 <PyInit__decimal@@Base+0x13c20>
   1a6b8:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1a6bc:	ldr	x8, [x8, #3920]
   1a6c0:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a6c4:	add	x1, x1, #0xcdb
   1a6c8:	ldr	x0, [x8]
   1a6cc:	bl	6590 <PyErr_SetString@plt>
   1a6d0:	mov	w0, #0xffffffff            	// #-1
   1a6d4:	ldr	x19, [sp, #16]
   1a6d8:	ldp	x29, x30, [sp], #32
   1a6dc:	ret
   1a6e0:	ldrsw	x0, [x0, #80]
   1a6e4:	b	6620 <PyLong_FromLong@plt>
   1a6e8:	stp	x29, x30, [sp, #-32]!
   1a6ec:	str	x19, [sp, #16]
   1a6f0:	mov	x29, sp
   1a6f4:	mov	x19, x0
   1a6f8:	mov	x0, x1
   1a6fc:	bl	6630 <PyLong_AsSsize_t@plt>
   1a700:	cmn	x0, #0x1
   1a704:	b.eq	1a720 <PyInit__decimal@@Base+0x13c6c>  // b.none
   1a708:	mov	x8, x0
   1a70c:	cmp	x0, #0x2
   1a710:	b.cs	1a728 <PyInit__decimal@@Base+0x13c74>  // b.hs, b.nlast
   1a714:	mov	w0, wzr
   1a718:	str	w8, [x19, #80]
   1a71c:	b	1a744 <PyInit__decimal@@Base+0x13c90>
   1a720:	bl	6720 <PyErr_Occurred@plt>
   1a724:	cbnz	x0, 1a740 <PyInit__decimal@@Base+0x13c8c>
   1a728:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1a72c:	ldr	x8, [x8, #3928]
   1a730:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a734:	add	x1, x1, #0xcfe
   1a738:	ldr	x0, [x8]
   1a73c:	bl	6590 <PyErr_SetString@plt>
   1a740:	mov	w0, #0xffffffff            	// #-1
   1a744:	ldr	x19, [sp, #16]
   1a748:	ldp	x29, x30, [sp], #32
   1a74c:	ret
   1a750:	stp	x29, x30, [sp, #-16]!
   1a754:	mov	x29, sp
   1a758:	add	x0, x0, #0x10
   1a75c:	bl	1c974 <PyInit__decimal@@Base+0x15ec0>
   1a760:	sxtw	x0, w0
   1a764:	ldp	x29, x30, [sp], #16
   1a768:	b	65e0 <PyLong_FromSsize_t@plt>
   1a76c:	stp	x29, x30, [sp, #-32]!
   1a770:	stp	x20, x19, [sp, #16]
   1a774:	mov	x29, sp
   1a778:	mov	x19, x0
   1a77c:	mov	x0, x1
   1a780:	bl	6630 <PyLong_AsSsize_t@plt>
   1a784:	mov	x20, x0
   1a788:	cmn	x0, #0x1
   1a78c:	b.eq	1a7b0 <PyInit__decimal@@Base+0x13cfc>  // b.none
   1a790:	cmp	x20, w20, sxtw
   1a794:	mov	w8, #0x7fffffff            	// #2147483647
   1a798:	add	x0, x19, #0x10
   1a79c:	csel	w1, w8, w20, ne  // ne = any
   1a7a0:	bl	1ca2c <PyInit__decimal@@Base+0x15f78>
   1a7a4:	cbz	w0, 1a7bc <PyInit__decimal@@Base+0x13d08>
   1a7a8:	mov	w0, wzr
   1a7ac:	b	1a7d8 <PyInit__decimal@@Base+0x13d24>
   1a7b0:	bl	6720 <PyErr_Occurred@plt>
   1a7b4:	cbnz	x0, 1a7d4 <PyInit__decimal@@Base+0x13d20>
   1a7b8:	b	1a790 <PyInit__decimal@@Base+0x13cdc>
   1a7bc:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1a7c0:	ldr	x8, [x8, #3928]
   1a7c4:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a7c8:	add	x1, x1, #0xd23
   1a7cc:	ldr	x0, [x8]
   1a7d0:	bl	6590 <PyErr_SetString@plt>
   1a7d4:	mov	w0, #0xffffffff            	// #-1
   1a7d8:	ldp	x20, x19, [sp, #16]
   1a7dc:	ldp	x29, x30, [sp], #32
   1a7e0:	ret
   1a7e4:	stp	x29, x30, [sp, #-32]!
   1a7e8:	str	x19, [sp, #16]
   1a7ec:	mov	x29, sp
   1a7f0:	mov	x19, x0
   1a7f4:	ldr	x0, [x0, #16]
   1a7f8:	cbz	x0, 1a80c <PyInit__decimal@@Base+0x13d58>
   1a7fc:	ldr	x8, [x0]
   1a800:	subs	x8, x8, #0x1
   1a804:	str	x8, [x0]
   1a808:	b.eq	1a82c <PyInit__decimal@@Base+0x13d78>  // b.none
   1a80c:	ldr	x0, [x19, #24]
   1a810:	cbz	x0, 1a838 <PyInit__decimal@@Base+0x13d84>
   1a814:	ldr	x8, [x0]
   1a818:	subs	x8, x8, #0x1
   1a81c:	str	x8, [x0]
   1a820:	b.ne	1a838 <PyInit__decimal@@Base+0x13d84>  // b.any
   1a824:	bl	6510 <_Py_Dealloc@plt>
   1a828:	b	1a838 <PyInit__decimal@@Base+0x13d84>
   1a82c:	bl	6510 <_Py_Dealloc@plt>
   1a830:	ldr	x0, [x19, #24]
   1a834:	cbnz	x0, 1a814 <PyInit__decimal@@Base+0x13d60>
   1a838:	mov	x0, x19
   1a83c:	ldr	x19, [sp, #16]
   1a840:	ldp	x29, x30, [sp], #32
   1a844:	b	65d0 <PyObject_Free@plt>
   1a848:	stp	x29, x30, [sp, #-32]!
   1a84c:	str	x19, [sp, #16]
   1a850:	mov	x29, sp
   1a854:	ldr	x1, [x0, #16]
   1a858:	mov	x19, x0
   1a85c:	mov	x0, xzr
   1a860:	bl	1a8e0 <PyInit__decimal@@Base+0x13e2c>
   1a864:	cbz	x0, 1a88c <PyInit__decimal@@Base+0x13dd8>
   1a868:	ldr	x8, [x0]
   1a86c:	subs	x8, x8, #0x1
   1a870:	str	x8, [x0]
   1a874:	b.ne	1a87c <PyInit__decimal@@Base+0x13dc8>  // b.any
   1a878:	bl	6510 <_Py_Dealloc@plt>
   1a87c:	ldr	x0, [x19, #16]
   1a880:	ldr	x8, [x0]
   1a884:	add	x8, x8, #0x1
   1a888:	str	x8, [x0]
   1a88c:	ldr	x19, [sp, #16]
   1a890:	ldp	x29, x30, [sp], #32
   1a894:	ret
   1a898:	stp	x29, x30, [sp, #-16]!
   1a89c:	mov	x29, sp
   1a8a0:	ldr	x1, [x0, #24]
   1a8a4:	mov	x0, xzr
   1a8a8:	bl	1a8e0 <PyInit__decimal@@Base+0x13e2c>
   1a8ac:	cbz	x0, 1a8d8 <PyInit__decimal@@Base+0x13e24>
   1a8b0:	ldr	x8, [x0]
   1a8b4:	subs	x8, x8, #0x1
   1a8b8:	str	x8, [x0]
   1a8bc:	b.ne	1a8c4 <PyInit__decimal@@Base+0x13e10>  // b.any
   1a8c0:	bl	6510 <_Py_Dealloc@plt>
   1a8c4:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   1a8c8:	ldr	x0, [x0, #4008]
   1a8cc:	ldr	x8, [x0]
   1a8d0:	add	x8, x8, #0x1
   1a8d4:	str	x8, [x0]
   1a8d8:	ldp	x29, x30, [sp], #16
   1a8dc:	ret
   1a8e0:	stp	x29, x30, [sp, #-32]!
   1a8e4:	stp	x20, x19, [sp, #16]
   1a8e8:	mov	x29, sp
   1a8ec:	ldr	x0, [x1, #8]
   1a8f0:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a8f4:	add	x8, x8, #0x4b8
   1a8f8:	mov	x19, x1
   1a8fc:	cmp	x0, x8
   1a900:	b.eq	1a914 <PyInit__decimal@@Base+0x13e60>  // b.none
   1a904:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a908:	add	x1, x1, #0x4b8
   1a90c:	bl	6900 <PyType_IsSubtype@plt>
   1a910:	cbz	w0, 1a9b4 <PyInit__decimal@@Base+0x13f00>
   1a914:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1a918:	ldr	x8, [x8, #1496]
   1a91c:	cmp	x8, x19
   1a920:	b.eq	1a954 <PyInit__decimal@@Base+0x13ea0>  // b.none
   1a924:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1a928:	ldr	x8, [x8, #1504]
   1a92c:	cmp	x8, x19
   1a930:	b.eq	1a954 <PyInit__decimal@@Base+0x13ea0>  // b.none
   1a934:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1a938:	ldr	x8, [x8, #1512]
   1a93c:	cmp	x8, x19
   1a940:	b.eq	1a954 <PyInit__decimal@@Base+0x13ea0>  // b.none
   1a944:	ldr	x8, [x19]
   1a948:	add	x8, x8, #0x1
   1a94c:	str	x8, [x19]
   1a950:	b	1a988 <PyInit__decimal@@Base+0x13ed4>
   1a954:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1a958:	add	x0, x0, #0x4b8
   1a95c:	mov	x1, xzr
   1a960:	bl	6780 <PyObject_CallObject@plt>
   1a964:	cbz	x0, 1aa10 <PyInit__decimal@@Base+0x13f5c>
   1a968:	ldp	q1, q0, [x19, #32]
   1a96c:	ldr	q2, [x19, #16]
   1a970:	stp	q1, q0, [x0, #32]
   1a974:	str	q2, [x0, #16]
   1a978:	ldr	w8, [x19, #80]
   1a97c:	stp	wzr, wzr, [x0, #44]
   1a980:	mov	x19, x0
   1a984:	str	w8, [x0, #80]
   1a988:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1a98c:	ldr	x0, [x8, #1400]
   1a990:	mov	x1, x19
   1a994:	bl	65c0 <PyContextVar_Set@plt>
   1a998:	ldr	x8, [x19]
   1a99c:	mov	x20, x0
   1a9a0:	subs	x8, x8, #0x1
   1a9a4:	str	x8, [x19]
   1a9a8:	b.eq	1a9d0 <PyInit__decimal@@Base+0x13f1c>  // b.none
   1a9ac:	cbnz	x20, 1a9dc <PyInit__decimal@@Base+0x13f28>
   1a9b0:	b	1aa0c <PyInit__decimal@@Base+0x13f58>
   1a9b4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1a9b8:	ldr	x8, [x8, #3936]
   1a9bc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1a9c0:	add	x1, x1, #0x63a
   1a9c4:	ldr	x0, [x8]
   1a9c8:	bl	6590 <PyErr_SetString@plt>
   1a9cc:	b	1aa0c <PyInit__decimal@@Base+0x13f58>
   1a9d0:	mov	x0, x19
   1a9d4:	bl	6510 <_Py_Dealloc@plt>
   1a9d8:	cbz	x20, 1aa0c <PyInit__decimal@@Base+0x13f58>
   1a9dc:	ldr	x8, [x20]
   1a9e0:	subs	x8, x8, #0x1
   1a9e4:	str	x8, [x20]
   1a9e8:	b.ne	1a9f4 <PyInit__decimal@@Base+0x13f40>  // b.any
   1a9ec:	mov	x0, x20
   1a9f0:	bl	6510 <_Py_Dealloc@plt>
   1a9f4:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   1a9f8:	ldr	x0, [x0, #4008]
   1a9fc:	ldr	x8, [x0]
   1aa00:	add	x8, x8, #0x1
   1aa04:	str	x8, [x0]
   1aa08:	b	1aa10 <PyInit__decimal@@Base+0x13f5c>
   1aa0c:	mov	x0, xzr
   1aa10:	ldp	x20, x19, [sp, #16]
   1aa14:	ldp	x29, x30, [sp], #32
   1aa18:	ret
   1aa1c:	sub	sp, sp, #0x100
   1aa20:	stp	x29, x30, [sp, #240]
   1aa24:	add	x29, sp, #0xf0
   1aa28:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1aa2c:	ldr	x8, [x8, #2560]
   1aa30:	cbz	x8, 1aab8 <PyInit__decimal@@Base+0x14004>
   1aa34:	ldr	x10, [x0, #16]
   1aa38:	adrp	x9, 51000 <PyInit__decimal@@Base+0x4a54c>
   1aa3c:	adrp	x12, 3e000 <PyInit__decimal@@Base+0x3754c>
   1aa40:	adrp	x13, 3e000 <PyInit__decimal@@Base+0x3754c>
   1aa44:	ldr	w10, [x10]
   1aa48:	mov	w8, wzr
   1aa4c:	add	x9, x9, #0xa10
   1aa50:	sub	x11, x29, #0x48
   1aa54:	add	x12, x12, #0xe76
   1aa58:	add	x13, x13, #0xe7b
   1aa5c:	add	x14, sp, #0x60
   1aa60:	ldr	w17, [x9]
   1aa64:	ldur	x15, [x9, #-8]
   1aa68:	ldr	x18, [x9, #16]
   1aa6c:	sbfiz	x16, x8, #3, #32
   1aa70:	tst	w17, w10
   1aa74:	add	w8, w8, #0x1
   1aa78:	str	x15, [x11, x16]
   1aa7c:	csel	x15, x13, x12, eq  // eq = none
   1aa80:	add	x9, x9, #0x20
   1aa84:	str	x15, [x14, x16]
   1aa88:	cbnz	x18, 1aa60 <PyInit__decimal@@Base+0x13fac>
   1aa8c:	ldp	x1, x3, [x29, #-72]
   1aa90:	ldp	x2, x4, [sp, #96]
   1aa94:	ldp	x5, x7, [x29, #-56]
   1aa98:	ldp	x6, x8, [sp, #112]
   1aa9c:	ldp	x9, x10, [x29, #-40]
   1aaa0:	ldp	x11, x12, [sp, #128]
   1aaa4:	ldp	x13, x14, [x29, #-24]
   1aaa8:	ldp	x15, x16, [sp, #144]
   1aaac:	ldur	x17, [x29, #-8]
   1aab0:	ldr	x18, [sp, #160]
   1aab4:	b	1aab8 <PyInit__decimal@@Base+0x14004>
   1aab8:	adrp	x0, 3e000 <PyInit__decimal@@Base+0x3754c>
   1aabc:	add	x0, x0, #0xe81
   1aac0:	stp	x17, x18, [sp, #72]
   1aac4:	stp	x14, x16, [sp, #56]
   1aac8:	stp	x13, x15, [sp, #40]
   1aacc:	stp	x10, x12, [sp, #24]
   1aad0:	stp	x9, x11, [sp, #8]
   1aad4:	str	x8, [sp]
   1aad8:	bl	63d0 <PyUnicode_FromFormat@plt>
   1aadc:	ldp	x29, x30, [sp, #240]
   1aae0:	add	sp, sp, #0x100
   1aae4:	ret
   1aae8:	stp	x29, x30, [sp, #-32]!
   1aaec:	stp	x20, x19, [sp, #16]
   1aaf0:	mov	x29, sp
   1aaf4:	orr	w8, w2, #0x1
   1aaf8:	cmp	w8, #0x3
   1aafc:	b.ne	1abbc <PyInit__decimal@@Base+0x14108>  // b.any
   1ab00:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   1ab04:	ldr	x8, [x1, #8]
   1ab08:	ldr	x9, [x9, #1472]
   1ab0c:	mov	w19, w2
   1ab10:	mov	x20, x0
   1ab14:	cmp	x8, x9
   1ab18:	b.eq	1ab40 <PyInit__decimal@@Base+0x1408c>  // b.none
   1ab1c:	ldrb	w8, [x8, #171]
   1ab20:	tbz	w8, #5, 1abbc <PyInit__decimal@@Base+0x14108>
   1ab24:	mov	x0, x1
   1ab28:	bl	13938 <PyInit__decimal@@Base+0xce84>
   1ab2c:	tst	w0, #0x18000
   1ab30:	b.eq	1ab80 <PyInit__decimal@@Base+0x140cc>  // b.none
   1ab34:	tbnz	w0, #15, 1abb8 <PyInit__decimal@@Base+0x14104>
   1ab38:	mov	x0, xzr
   1ab3c:	b	1abd0 <PyInit__decimal@@Base+0x1411c>
   1ab40:	ldr	x8, [x20, #16]
   1ab44:	ldr	x9, [x1, #16]
   1ab48:	cmp	w19, #0x3
   1ab4c:	adrp	x10, 50000 <PyInit__decimal@@Base+0x4954c>
   1ab50:	ldr	w8, [x8]
   1ab54:	ldr	w9, [x9]
   1ab58:	cset	w11, eq  // eq = none
   1ab5c:	ldr	x10, [x10, #3976]
   1ab60:	cmp	w8, w9
   1ab64:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1ab68:	ldr	x9, [x9, #4024]
   1ab6c:	cset	w8, eq  // eq = none
   1ab70:	eor	w8, w11, w8
   1ab74:	cmp	w8, #0x0
   1ab78:	csel	x0, x9, x10, ne  // ne = any
   1ab7c:	b	1abc4 <PyInit__decimal@@Base+0x14110>
   1ab80:	ldr	x8, [x20, #16]
   1ab84:	cmp	w19, #0x3
   1ab88:	cset	w10, eq  // eq = none
   1ab8c:	adrp	x9, 50000 <PyInit__decimal@@Base+0x4954c>
   1ab90:	ldr	w8, [x8]
   1ab94:	ldr	x9, [x9, #3976]
   1ab98:	cmp	w8, w0
   1ab9c:	cset	w8, eq  // eq = none
   1aba0:	eor	w8, w10, w8
   1aba4:	adrp	x10, 50000 <PyInit__decimal@@Base+0x4954c>
   1aba8:	ldr	x10, [x10, #4024]
   1abac:	cmp	w8, #0x0
   1abb0:	csel	x0, x10, x9, ne  // ne = any
   1abb4:	b	1abc4 <PyInit__decimal@@Base+0x14110>
   1abb8:	bl	6670 <PyErr_Clear@plt>
   1abbc:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   1abc0:	ldr	x0, [x0, #3912]
   1abc4:	ldr	x8, [x0]
   1abc8:	add	x8, x8, #0x1
   1abcc:	str	x8, [x0]
   1abd0:	ldp	x20, x19, [sp, #16]
   1abd4:	ldp	x29, x30, [sp], #32
   1abd8:	ret
   1abdc:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1abe0:	ldr	x8, [x8, #3872]
   1abe4:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   1abe8:	ldr	x0, [x9, #1488]
   1abec:	ldr	x1, [x8, #216]
   1abf0:	br	x1
   1abf4:	str	xzr, [x0, #16]
   1abf8:	mov	w0, wzr
   1abfc:	ret
   1ac00:	mov	w0, #0x9                   	// #9
   1ac04:	ret
   1ac08:	stp	x29, x30, [sp, #-16]!
   1ac0c:	mov	x29, sp
   1ac10:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1ac14:	ldr	x8, [x8, #2560]
   1ac18:	cbz	x8, 1ac38 <PyInit__decimal@@Base+0x14184>
   1ac1c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1ac20:	add	x8, x8, #0xa20
   1ac24:	ldur	x9, [x8, #-8]
   1ac28:	cmp	x9, x1
   1ac2c:	b.eq	1ac54 <PyInit__decimal@@Base+0x141a0>  // b.none
   1ac30:	ldr	x9, [x8], #32
   1ac34:	cbnz	x9, 1ac24 <PyInit__decimal@@Base+0x14170>
   1ac38:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1ac3c:	ldr	x8, [x8, #3968]
   1ac40:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1ac44:	add	x1, x1, #0xd77
   1ac48:	ldr	x0, [x8]
   1ac4c:	bl	6590 <PyErr_SetString@plt>
   1ac50:	b	1ac60 <PyInit__decimal@@Base+0x141ac>
   1ac54:	ldur	w8, [x8, #-16]
   1ac58:	tst	w8, #0x18000
   1ac5c:	b.eq	1ac6c <PyInit__decimal@@Base+0x141b8>  // b.none
   1ac60:	mov	x0, xzr
   1ac64:	ldp	x29, x30, [sp], #16
   1ac68:	ret
   1ac6c:	ldr	x9, [x0, #16]
   1ac70:	ldr	w9, [x9]
   1ac74:	tst	w9, w8
   1ac78:	b.eq	1ac88 <PyInit__decimal@@Base+0x141d4>  // b.none
   1ac7c:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   1ac80:	ldr	x0, [x0, #4024]
   1ac84:	b	1ac90 <PyInit__decimal@@Base+0x141dc>
   1ac88:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   1ac8c:	ldr	x0, [x0, #3976]
   1ac90:	ldr	x8, [x0]
   1ac94:	add	x8, x8, #0x1
   1ac98:	str	x8, [x0]
   1ac9c:	ldp	x29, x30, [sp], #16
   1aca0:	ret
   1aca4:	stp	x29, x30, [sp, #-32]!
   1aca8:	stp	x20, x19, [sp, #16]
   1acac:	mov	x29, sp
   1acb0:	cbz	x2, 1acf4 <PyInit__decimal@@Base+0x14240>
   1acb4:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1acb8:	ldr	x8, [x8, #2560]
   1acbc:	cbz	x8, 1ace0 <PyInit__decimal@@Base+0x1422c>
   1acc0:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1acc4:	mov	x19, x0
   1acc8:	add	x8, x8, #0xa20
   1accc:	ldur	x9, [x8, #-8]
   1acd0:	cmp	x9, x1
   1acd4:	b.eq	1ad1c <PyInit__decimal@@Base+0x14268>  // b.none
   1acd8:	ldr	x9, [x8], #32
   1acdc:	cbnz	x9, 1accc <PyInit__decimal@@Base+0x14218>
   1ace0:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1ace4:	ldr	x8, [x8, #3968]
   1ace8:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1acec:	add	x1, x1, #0xd77
   1acf0:	b	1ad04 <PyInit__decimal@@Base+0x14250>
   1acf4:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1acf8:	ldr	x8, [x8, #3928]
   1acfc:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1ad00:	add	x1, x1, #0xf1b
   1ad04:	ldr	x0, [x8]
   1ad08:	bl	6590 <PyErr_SetString@plt>
   1ad0c:	mov	w0, #0xffffffff            	// #-1
   1ad10:	ldp	x20, x19, [sp, #16]
   1ad14:	ldp	x29, x30, [sp], #32
   1ad18:	ret
   1ad1c:	ldur	w20, [x8, #-16]
   1ad20:	tst	w20, #0x18000
   1ad24:	b.ne	1ad0c <PyInit__decimal@@Base+0x14258>  // b.any
   1ad28:	mov	x0, x2
   1ad2c:	bl	6810 <PyObject_IsTrue@plt>
   1ad30:	tbnz	w0, #31, 1ad0c <PyInit__decimal@@Base+0x14258>
   1ad34:	cmp	w0, #0x1
   1ad38:	b.ne	1ad50 <PyInit__decimal@@Base+0x1429c>  // b.any
   1ad3c:	ldr	x8, [x19, #16]
   1ad40:	mov	w0, wzr
   1ad44:	ldr	w9, [x8]
   1ad48:	orr	w9, w9, w20
   1ad4c:	b	1ad60 <PyInit__decimal@@Base+0x142ac>
   1ad50:	ldr	x8, [x19, #16]
   1ad54:	mov	w0, wzr
   1ad58:	ldr	w9, [x8]
   1ad5c:	bic	w9, w9, w20
   1ad60:	str	w9, [x8]
   1ad64:	b	1ad10 <PyInit__decimal@@Base+0x1425c>
   1ad68:	stp	x29, x30, [sp, #-64]!
   1ad6c:	str	x23, [sp, #16]
   1ad70:	stp	x22, x21, [sp, #32]
   1ad74:	stp	x20, x19, [sp, #48]
   1ad78:	mov	x29, sp
   1ad7c:	ldr	x8, [x0, #16]
   1ad80:	ldr	w20, [x8]
   1ad84:	bl	6860 <PyDict_New@plt>
   1ad88:	mov	x19, x0
   1ad8c:	cbz	x0, 1adf8 <PyInit__decimal@@Base+0x14344>
   1ad90:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1ad94:	ldr	x8, [x8, #2560]
   1ad98:	cbz	x8, 1adf8 <PyInit__decimal@@Base+0x14344>
   1ad9c:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
   1ada0:	adrp	x23, 50000 <PyInit__decimal@@Base+0x4954c>
   1ada4:	ldr	x22, [x22, #4024]
   1ada8:	ldr	x23, [x23, #3976]
   1adac:	adrp	x21, 51000 <PyInit__decimal@@Base+0x4a54c>
   1adb0:	add	x21, x21, #0xa20
   1adb4:	ldur	w8, [x21, #-16]
   1adb8:	ldur	x1, [x21, #-8]
   1adbc:	mov	x0, x19
   1adc0:	tst	w8, w20
   1adc4:	csel	x2, x23, x22, eq  // eq = none
   1adc8:	bl	68e0 <PyDict_SetItem@plt>
   1adcc:	tbnz	w0, #31, 1addc <PyInit__decimal@@Base+0x14328>
   1add0:	ldr	x8, [x21], #32
   1add4:	cbnz	x8, 1adb4 <PyInit__decimal@@Base+0x14300>
   1add8:	b	1adf8 <PyInit__decimal@@Base+0x14344>
   1addc:	ldr	x8, [x19]
   1ade0:	subs	x8, x8, #0x1
   1ade4:	str	x8, [x19]
   1ade8:	b.ne	1adf4 <PyInit__decimal@@Base+0x14340>  // b.any
   1adec:	mov	x0, x19
   1adf0:	bl	6510 <_Py_Dealloc@plt>
   1adf4:	mov	x19, xzr
   1adf8:	mov	x0, x19
   1adfc:	ldp	x20, x19, [sp, #48]
   1ae00:	ldp	x22, x21, [sp, #32]
   1ae04:	ldr	x23, [sp, #16]
   1ae08:	ldp	x29, x30, [sp], #64
   1ae0c:	ret
   1ae10:	stp	x29, x30, [sp, #-48]!
   1ae14:	str	x21, [sp, #16]
   1ae18:	stp	x20, x19, [sp, #32]
   1ae1c:	mov	x29, sp
   1ae20:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   1ae24:	ldr	x0, [x20, #1400]
   1ae28:	add	x2, x29, #0x18
   1ae2c:	mov	x1, xzr
   1ae30:	bl	6680 <PyContextVar_Get@plt>
   1ae34:	tbnz	w0, #31, 1aebc <PyInit__decimal@@Base+0x14408>
   1ae38:	ldr	x19, [x29, #24]
   1ae3c:	cbnz	x19, 1aec0 <PyInit__decimal@@Base+0x1440c>
   1ae40:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1ae44:	ldr	x21, [x8, #1496]
   1ae48:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1ae4c:	add	x0, x0, #0x4b8
   1ae50:	mov	x1, xzr
   1ae54:	bl	6780 <PyObject_CallObject@plt>
   1ae58:	mov	x19, x0
   1ae5c:	cbz	x0, 1aec0 <PyInit__decimal@@Base+0x1440c>
   1ae60:	ldp	q1, q0, [x21, #32]
   1ae64:	ldr	q2, [x21, #16]
   1ae68:	mov	x1, x19
   1ae6c:	stp	q1, q0, [x19, #32]
   1ae70:	str	q2, [x19, #16]
   1ae74:	ldr	w8, [x21, #80]
   1ae78:	stp	wzr, wzr, [x19, #44]
   1ae7c:	str	w8, [x19, #80]
   1ae80:	ldr	x0, [x20, #1400]
   1ae84:	bl	65c0 <PyContextVar_Set@plt>
   1ae88:	cbz	x0, 1aea4 <PyInit__decimal@@Base+0x143f0>
   1ae8c:	ldr	x8, [x0]
   1ae90:	subs	x8, x8, #0x1
   1ae94:	str	x8, [x0]
   1ae98:	b.ne	1aec0 <PyInit__decimal@@Base+0x1440c>  // b.any
   1ae9c:	bl	6510 <_Py_Dealloc@plt>
   1aea0:	b	1aec0 <PyInit__decimal@@Base+0x1440c>
   1aea4:	ldr	x8, [x19]
   1aea8:	subs	x8, x8, #0x1
   1aeac:	str	x8, [x19]
   1aeb0:	b.ne	1aebc <PyInit__decimal@@Base+0x14408>  // b.any
   1aeb4:	mov	x0, x19
   1aeb8:	bl	6510 <_Py_Dealloc@plt>
   1aebc:	mov	x19, xzr
   1aec0:	mov	x0, x19
   1aec4:	ldp	x20, x19, [sp, #32]
   1aec8:	ldr	x21, [sp, #16]
   1aecc:	ldp	x29, x30, [sp], #48
   1aed0:	ret
   1aed4:	sub	sp, sp, #0x50
   1aed8:	stp	x29, x30, [sp, #16]
   1aedc:	stp	x24, x23, [sp, #32]
   1aee0:	stp	x22, x21, [sp, #48]
   1aee4:	stp	x20, x19, [sp, #64]
   1aee8:	add	x29, sp, #0x10
   1aeec:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   1aef0:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
   1aef4:	ldr	x0, [x23, #1400]
   1aef8:	ldr	x22, [x22, #4008]
   1aefc:	mov	x20, x2
   1af00:	mov	x21, x1
   1af04:	add	x2, sp, #0x8
   1af08:	mov	x1, xzr
   1af0c:	str	x22, [sp]
   1af10:	bl	6680 <PyContextVar_Get@plt>
   1af14:	tbnz	w0, #31, 1b0a4 <PyInit__decimal@@Base+0x145f0>
   1af18:	ldr	x19, [sp, #8]
   1af1c:	cbz	x19, 1afa8 <PyInit__decimal@@Base+0x144f4>
   1af20:	ldr	x8, [x19]
   1af24:	subs	x8, x8, #0x1
   1af28:	str	x8, [x19]
   1af2c:	b.ne	1af38 <PyInit__decimal@@Base+0x14484>  // b.any
   1af30:	mov	x0, x19
   1af34:	bl	6510 <_Py_Dealloc@plt>
   1af38:	adrp	x2, 3e000 <PyInit__decimal@@Base+0x3754c>
   1af3c:	adrp	x3, 53000 <PyInit__decimal@@Base+0x4c54c>
   1af40:	add	x2, x2, #0x77c
   1af44:	add	x3, x3, #0x4d0
   1af48:	mov	x4, sp
   1af4c:	mov	x0, x21
   1af50:	mov	x1, x20
   1af54:	bl	6460 <PyArg_ParseTupleAndKeywords@plt>
   1af58:	cbz	w0, 1b0a4 <PyInit__decimal@@Base+0x145f0>
   1af5c:	ldr	x8, [sp]
   1af60:	cmp	x8, x22
   1af64:	b.eq	1b00c <PyInit__decimal@@Base+0x14558>  // b.none
   1af68:	ldr	x0, [x8, #8]
   1af6c:	adrp	x8, 51000 <PyInit__decimal@@Base+0x4a54c>
   1af70:	add	x8, x8, #0x4b8
   1af74:	cmp	x0, x8
   1af78:	b.eq	1b010 <PyInit__decimal@@Base+0x1455c>  // b.none
   1af7c:	adrp	x1, 51000 <PyInit__decimal@@Base+0x4a54c>
   1af80:	add	x1, x1, #0x4b8
   1af84:	bl	6900 <PyType_IsSubtype@plt>
   1af88:	cbnz	w0, 1b010 <PyInit__decimal@@Base+0x1455c>
   1af8c:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1af90:	ldr	x8, [x8, #3936]
   1af94:	adrp	x1, 3e000 <PyInit__decimal@@Base+0x3754c>
   1af98:	add	x1, x1, #0x631
   1af9c:	ldr	x0, [x8]
   1afa0:	bl	6590 <PyErr_SetString@plt>
   1afa4:	b	1b0a4 <PyInit__decimal@@Base+0x145f0>
   1afa8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1afac:	ldr	x24, [x8, #1496]
   1afb0:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1afb4:	add	x0, x0, #0x4b8
   1afb8:	mov	x1, xzr
   1afbc:	bl	6780 <PyObject_CallObject@plt>
   1afc0:	cbz	x0, 1b0a4 <PyInit__decimal@@Base+0x145f0>
   1afc4:	ldp	q1, q0, [x24, #32]
   1afc8:	ldr	q2, [x24, #16]
   1afcc:	mov	x19, x0
   1afd0:	mov	x1, x19
   1afd4:	stp	q1, q0, [x0, #32]
   1afd8:	str	q2, [x0, #16]
   1afdc:	ldr	w8, [x24, #80]
   1afe0:	stp	wzr, wzr, [x0, #44]
   1afe4:	str	w8, [x0, #80]
   1afe8:	ldr	x0, [x23, #1400]
   1afec:	bl	65c0 <PyContextVar_Set@plt>
   1aff0:	cbz	x0, 1b08c <PyInit__decimal@@Base+0x145d8>
   1aff4:	ldr	x8, [x0]
   1aff8:	subs	x8, x8, #0x1
   1affc:	str	x8, [x0]
   1b000:	b.ne	1af20 <PyInit__decimal@@Base+0x1446c>  // b.any
   1b004:	bl	6510 <_Py_Dealloc@plt>
   1b008:	b	1af20 <PyInit__decimal@@Base+0x1446c>
   1b00c:	str	x19, [sp]
   1b010:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1b014:	add	x0, x0, #0x658
   1b018:	bl	6890 <_PyObject_New@plt>
   1b01c:	cbz	x0, 1b0a8 <PyInit__decimal@@Base+0x145f4>
   1b020:	ldr	x21, [sp]
   1b024:	mov	x20, x0
   1b028:	adrp	x0, 51000 <PyInit__decimal@@Base+0x4a54c>
   1b02c:	add	x0, x0, #0x4b8
   1b030:	mov	x1, xzr
   1b034:	bl	6780 <PyObject_CallObject@plt>
   1b038:	cbz	x0, 1b070 <PyInit__decimal@@Base+0x145bc>
   1b03c:	ldp	q1, q0, [x21, #32]
   1b040:	ldr	q2, [x21, #16]
   1b044:	stp	q1, q0, [x0, #32]
   1b048:	str	q2, [x0, #16]
   1b04c:	str	wzr, [x0, #48]
   1b050:	ldr	w8, [x21, #80]
   1b054:	str	w8, [x0, #80]
   1b058:	stp	x0, x19, [x20, #16]
   1b05c:	ldr	x8, [x19]
   1b060:	mov	x0, x20
   1b064:	add	x8, x8, #0x1
   1b068:	str	x8, [x19]
   1b06c:	b	1b0a8 <PyInit__decimal@@Base+0x145f4>
   1b070:	ldr	x8, [x20]
   1b074:	stp	xzr, xzr, [x20, #16]
   1b078:	subs	x8, x8, #0x1
   1b07c:	str	x8, [x20]
   1b080:	b.ne	1b0a8 <PyInit__decimal@@Base+0x145f4>  // b.any
   1b084:	mov	x0, x20
   1b088:	b	1b0a0 <PyInit__decimal@@Base+0x145ec>
   1b08c:	ldr	x8, [x19]
   1b090:	subs	x8, x8, #0x1
   1b094:	str	x8, [x19]
   1b098:	b.ne	1b0a4 <PyInit__decimal@@Base+0x145f0>  // b.any
   1b09c:	mov	x0, x19
   1b0a0:	bl	6510 <_Py_Dealloc@plt>
   1b0a4:	mov	x0, xzr
   1b0a8:	ldp	x20, x19, [sp, #64]
   1b0ac:	ldp	x22, x21, [sp, #48]
   1b0b0:	ldp	x24, x23, [sp, #32]
   1b0b4:	ldp	x29, x30, [sp, #16]
   1b0b8:	add	sp, sp, #0x50
   1b0bc:	ret
   1b0c0:	mov	x8, x0
   1b0c4:	cbz	x4, 1b170 <PyInit__decimal@@Base+0x146bc>
   1b0c8:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   1b0cc:	mov	x11, #0x76180000            	// #1981284352
   1b0d0:	movk	x9, #0x2304, lsl #32
   1b0d4:	movk	x11, #0xdcfb, lsl #32
   1b0d8:	mov	x10, xzr
   1b0dc:	mov	x0, xzr
   1b0e0:	movk	x9, #0x8ac7, lsl #48
   1b0e4:	movk	x11, #0x7538, lsl #48
   1b0e8:	lsl	x12, x10, #3
   1b0ec:	ldr	x13, [x1, x12]
   1b0f0:	ldr	x14, [x2, x12]
   1b0f4:	add	x10, x10, #0x1
   1b0f8:	add	x15, x13, x0
   1b0fc:	add	x14, x15, x14
   1b100:	cmp	x14, x13
   1b104:	cset	w13, cc  // cc = lo, ul, last
   1b108:	cmp	x14, x9
   1b10c:	cset	w15, hi  // hi = pmore
   1b110:	orr	w0, w13, w15
   1b114:	add	x13, x14, x11
   1b118:	cmp	w0, #0x0
   1b11c:	csel	x13, x13, x14, ne  // ne = any
   1b120:	cmp	x4, x10
   1b124:	str	x13, [x8, x12]
   1b128:	b.ne	1b0e8 <PyInit__decimal@@Base+0x14634>  // b.any
   1b12c:	cbz	x0, 1b174 <PyInit__decimal@@Base+0x146c0>
   1b130:	cmp	x4, x3
   1b134:	b.cs	1b174 <PyInit__decimal@@Base+0x146c0>  // b.hs, b.nlast
   1b138:	mov	w0, #0x1                   	// #1
   1b13c:	lsl	x10, x4, #3
   1b140:	ldr	x11, [x1, x10]
   1b144:	add	x12, x9, #0x1
   1b148:	add	x4, x4, #0x1
   1b14c:	add	x11, x11, x0
   1b150:	cmp	x11, x12
   1b154:	cset	w0, eq  // eq = none
   1b158:	csel	x11, xzr, x11, eq  // eq = none
   1b15c:	str	x11, [x8, x10]
   1b160:	b.ne	1b174 <PyInit__decimal@@Base+0x146c0>  // b.any
   1b164:	cmp	x4, x3
   1b168:	b.cc	1b13c <PyInit__decimal@@Base+0x14688>  // b.lo, b.ul, b.last
   1b16c:	b	1b174 <PyInit__decimal@@Base+0x146c0>
   1b170:	mov	x0, xzr
   1b174:	cmp	x4, x3
   1b178:	b.cs	1b208 <PyInit__decimal@@Base+0x14754>  // b.hs, b.nlast
   1b17c:	sub	x9, x3, x4
   1b180:	cmp	x9, #0x3
   1b184:	b.ls	1b1e8 <PyInit__decimal@@Base+0x14734>  // b.plast
   1b188:	lsl	x11, x4, #3
   1b18c:	lsl	x10, x3, #3
   1b190:	add	x12, x8, x11
   1b194:	add	x13, x1, x10
   1b198:	cmp	x12, x13
   1b19c:	b.cs	1b1b0 <PyInit__decimal@@Base+0x146fc>  // b.hs, b.nlast
   1b1a0:	add	x10, x8, x10
   1b1a4:	add	x12, x1, x11
   1b1a8:	cmp	x12, x10
   1b1ac:	b.cc	1b1e8 <PyInit__decimal@@Base+0x14734>  // b.lo, b.ul, b.last
   1b1b0:	and	x10, x9, #0xfffffffffffffffc
   1b1b4:	add	x12, x11, #0x10
   1b1b8:	add	x4, x4, x10
   1b1bc:	add	x11, x1, x12
   1b1c0:	add	x12, x8, x12
   1b1c4:	mov	x13, x10
   1b1c8:	ldp	q0, q1, [x11, #-16]
   1b1cc:	add	x11, x11, #0x20
   1b1d0:	subs	x13, x13, #0x4
   1b1d4:	stp	q0, q1, [x12, #-16]
   1b1d8:	add	x12, x12, #0x20
   1b1dc:	b.ne	1b1c8 <PyInit__decimal@@Base+0x14714>  // b.any
   1b1e0:	cmp	x9, x10
   1b1e4:	b.eq	1b208 <PyInit__decimal@@Base+0x14754>  // b.none
   1b1e8:	lsl	x10, x4, #3
   1b1ec:	sub	x9, x3, x4
   1b1f0:	add	x8, x8, x10
   1b1f4:	add	x10, x1, x10
   1b1f8:	ldr	x11, [x10], #8
   1b1fc:	subs	x9, x9, #0x1
   1b200:	str	x11, [x8], #8
   1b204:	b.ne	1b1f8 <PyInit__decimal@@Base+0x14744>  // b.any
   1b208:	ret
   1b20c:	cbz	x2, 1b298 <PyInit__decimal@@Base+0x147e4>
   1b210:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1b214:	mov	x9, #0x76180000            	// #1981284352
   1b218:	movk	x8, #0x2304, lsl #32
   1b21c:	movk	x9, #0xdcfb, lsl #32
   1b220:	mov	x12, xzr
   1b224:	movk	x8, #0x8ac7, lsl #48
   1b228:	movk	x9, #0x7538, lsl #48
   1b22c:	mov	x10, x0
   1b230:	mov	x11, x2
   1b234:	ldr	x13, [x10]
   1b238:	ldr	x14, [x1], #8
   1b23c:	add	x12, x13, x12
   1b240:	add	x14, x12, x14
   1b244:	cmp	x14, x13
   1b248:	cset	w12, cc  // cc = lo, ul, last
   1b24c:	cmp	x14, x8
   1b250:	cset	w16, hi  // hi = pmore
   1b254:	orr	w12, w12, w16
   1b258:	add	x15, x14, x9
   1b25c:	cmp	w12, #0x0
   1b260:	csel	x15, x15, x14, ne  // ne = any
   1b264:	subs	x11, x11, #0x1
   1b268:	str	x15, [x10], #8
   1b26c:	b.ne	1b234 <PyInit__decimal@@Base+0x14780>  // b.any
   1b270:	cmp	x14, x13
   1b274:	b.cc	1b280 <PyInit__decimal@@Base+0x147cc>  // b.lo, b.ul, b.last
   1b278:	cmp	x14, x8
   1b27c:	b.ls	1b298 <PyInit__decimal@@Base+0x147e4>  // b.plast
   1b280:	add	x9, x0, x2, lsl #3
   1b284:	ldr	x10, [x9]
   1b288:	cmp	x10, x8
   1b28c:	csinc	x10, xzr, x10, eq  // eq = none
   1b290:	str	x10, [x9], #8
   1b294:	b.eq	1b284 <PyInit__decimal@@Base+0x147d0>  // b.none
   1b298:	ret
   1b29c:	ldr	x8, [x0]
   1b2a0:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   1b2a4:	movk	x10, #0x2304, lsl #32
   1b2a8:	movk	x10, #0x8ac7, lsl #48
   1b2ac:	adds	x11, x8, x2
   1b2b0:	mov	x9, #0x76180000            	// #1981284352
   1b2b4:	cset	w8, cs  // cs = hs, nlast
   1b2b8:	cmp	x11, x10
   1b2bc:	movk	x9, #0xdcfb, lsl #32
   1b2c0:	cset	w12, hi  // hi = pmore
   1b2c4:	movk	x9, #0x7538, lsl #48
   1b2c8:	orr	w8, w8, w12
   1b2cc:	add	x9, x11, x9
   1b2d0:	cmp	w8, #0x0
   1b2d4:	csel	x9, x9, x11, ne  // ne = any
   1b2d8:	str	x9, [x0]
   1b2dc:	cbz	w8, 1b31c <PyInit__decimal@@Base+0x14868>
   1b2e0:	cmp	x1, #0x2
   1b2e4:	b.cc	1b31c <PyInit__decimal@@Base+0x14868>  // b.lo, b.ul, b.last
   1b2e8:	mov	w9, #0x1                   	// #1
   1b2ec:	add	x10, x10, #0x1
   1b2f0:	lsl	x11, x9, #3
   1b2f4:	ldr	x12, [x0, x11]
   1b2f8:	add	x12, x12, x8
   1b2fc:	cmp	x12, x10
   1b300:	cset	w8, eq  // eq = none
   1b304:	csel	x12, xzr, x12, eq  // eq = none
   1b308:	str	x12, [x0, x11]
   1b30c:	b.ne	1b31c <PyInit__decimal@@Base+0x14868>  // b.any
   1b310:	add	x9, x9, #0x1
   1b314:	cmp	x9, x1
   1b318:	b.cc	1b2f0 <PyInit__decimal@@Base+0x1483c>  // b.lo, b.ul, b.last
   1b31c:	mov	x0, x8
   1b320:	ret
   1b324:	cbz	x1, 1b370 <PyInit__decimal@@Base+0x148bc>
   1b328:	mov	x10, #0x89e80000            	// #2313682944
   1b32c:	movk	x10, #0x2304, lsl #32
   1b330:	mov	x8, x0
   1b334:	mov	x9, xzr
   1b338:	mov	w0, #0x1                   	// #1
   1b33c:	movk	x10, #0x8ac7, lsl #48
   1b340:	lsl	x11, x9, #3
   1b344:	ldr	x12, [x8, x11]
   1b348:	add	x12, x12, x0
   1b34c:	cmp	x12, x10
   1b350:	cset	w0, eq  // eq = none
   1b354:	csel	x12, xzr, x12, eq  // eq = none
   1b358:	str	x12, [x8, x11]
   1b35c:	b.ne	1b36c <PyInit__decimal@@Base+0x148b8>  // b.any
   1b360:	add	x9, x9, #0x1
   1b364:	cmp	x9, x1
   1b368:	b.cc	1b340 <PyInit__decimal@@Base+0x1488c>  // b.lo, b.ul, b.last
   1b36c:	ret
   1b370:	mov	w0, #0x1                   	// #1
   1b374:	ret
   1b378:	cbz	x4, 1b400 <PyInit__decimal@@Base+0x1494c>
   1b37c:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1b380:	movk	x8, #0x2304, lsl #32
   1b384:	mov	x9, xzr
   1b388:	mov	x10, xzr
   1b38c:	movk	x8, #0x8ac7, lsl #48
   1b390:	lsl	x13, x9, #3
   1b394:	ldr	x12, [x2, x13]
   1b398:	ldr	x11, [x1, x13]
   1b39c:	add	x9, x9, #0x1
   1b3a0:	add	x12, x12, x10
   1b3a4:	subs	x14, x11, x12
   1b3a8:	add	x15, x8, x14
   1b3ac:	cset	w10, cc  // cc = lo, ul, last
   1b3b0:	csinc	x14, x14, x15, cs  // cs = hs, nlast
   1b3b4:	cmp	x4, x9
   1b3b8:	str	x14, [x0, x13]
   1b3bc:	b.ne	1b390 <PyInit__decimal@@Base+0x148dc>  // b.any
   1b3c0:	cmp	x11, x12
   1b3c4:	b.cs	1b400 <PyInit__decimal@@Base+0x1494c>  // b.hs, b.nlast
   1b3c8:	cmp	x4, x3
   1b3cc:	b.cs	1b400 <PyInit__decimal@@Base+0x1494c>  // b.hs, b.nlast
   1b3d0:	mov	w9, #0x1                   	// #1
   1b3d4:	lsl	x10, x4, #3
   1b3d8:	ldr	x11, [x1, x10]
   1b3dc:	add	x4, x4, #0x1
   1b3e0:	sub	x12, x11, x9
   1b3e4:	cmp	x11, #0x0
   1b3e8:	cset	w9, eq  // eq = none
   1b3ec:	csel	x12, x8, x12, eq  // eq = none
   1b3f0:	str	x12, [x0, x10]
   1b3f4:	cbnz	x11, 1b400 <PyInit__decimal@@Base+0x1494c>
   1b3f8:	cmp	x4, x3
   1b3fc:	b.cc	1b3d4 <PyInit__decimal@@Base+0x14920>  // b.lo, b.ul, b.last
   1b400:	cmp	x4, x3
   1b404:	b.cs	1b494 <PyInit__decimal@@Base+0x149e0>  // b.hs, b.nlast
   1b408:	sub	x8, x3, x4
   1b40c:	cmp	x8, #0x3
   1b410:	b.ls	1b474 <PyInit__decimal@@Base+0x149c0>  // b.plast
   1b414:	lsl	x10, x4, #3
   1b418:	lsl	x9, x3, #3
   1b41c:	add	x11, x0, x10
   1b420:	add	x12, x1, x9
   1b424:	cmp	x11, x12
   1b428:	b.cs	1b43c <PyInit__decimal@@Base+0x14988>  // b.hs, b.nlast
   1b42c:	add	x9, x0, x9
   1b430:	add	x11, x1, x10
   1b434:	cmp	x11, x9
   1b438:	b.cc	1b474 <PyInit__decimal@@Base+0x149c0>  // b.lo, b.ul, b.last
   1b43c:	and	x9, x8, #0xfffffffffffffffc
   1b440:	add	x11, x10, #0x10
   1b444:	add	x4, x4, x9
   1b448:	add	x10, x1, x11
   1b44c:	add	x11, x0, x11
   1b450:	mov	x12, x9
   1b454:	ldp	q0, q1, [x10, #-16]
   1b458:	add	x10, x10, #0x20
   1b45c:	subs	x12, x12, #0x4
   1b460:	stp	q0, q1, [x11, #-16]
   1b464:	add	x11, x11, #0x20
   1b468:	b.ne	1b454 <PyInit__decimal@@Base+0x149a0>  // b.any
   1b46c:	cmp	x8, x9
   1b470:	b.eq	1b494 <PyInit__decimal@@Base+0x149e0>  // b.none
   1b474:	lsl	x10, x4, #3
   1b478:	sub	x8, x3, x4
   1b47c:	add	x9, x0, x10
   1b480:	add	x10, x1, x10
   1b484:	ldr	x11, [x10], #8
   1b488:	subs	x8, x8, #0x1
   1b48c:	str	x11, [x9], #8
   1b490:	b.ne	1b484 <PyInit__decimal@@Base+0x149d0>  // b.any
   1b494:	ret
   1b498:	cbz	x2, 1b500 <PyInit__decimal@@Base+0x14a4c>
   1b49c:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1b4a0:	movk	x8, #0x2304, lsl #32
   1b4a4:	mov	x9, xzr
   1b4a8:	movk	x8, #0x8ac7, lsl #48
   1b4ac:	mov	x10, x0
   1b4b0:	mov	x11, x2
   1b4b4:	ldr	x12, [x10]
   1b4b8:	ldr	x13, [x1], #8
   1b4bc:	add	x13, x13, x9
   1b4c0:	subs	x14, x12, x13
   1b4c4:	add	x15, x8, x14
   1b4c8:	csinc	x14, x14, x15, cs  // cs = hs, nlast
   1b4cc:	cset	w9, cc  // cc = lo, ul, last
   1b4d0:	subs	x11, x11, #0x1
   1b4d4:	str	x14, [x10], #8
   1b4d8:	b.ne	1b4b4 <PyInit__decimal@@Base+0x14a00>  // b.any
   1b4dc:	cmp	x12, x13
   1b4e0:	b.cs	1b500 <PyInit__decimal@@Base+0x14a4c>  // b.hs, b.nlast
   1b4e4:	add	x9, x0, x2, lsl #3
   1b4e8:	ldr	x10, [x9]
   1b4ec:	sub	x11, x10, #0x1
   1b4f0:	cmp	x10, #0x0
   1b4f4:	csel	x11, x8, x11, eq  // eq = none
   1b4f8:	str	x11, [x9], #8
   1b4fc:	cbz	x10, 1b4e8 <PyInit__decimal@@Base+0x14a34>
   1b500:	ret
   1b504:	mov	x13, xzr
   1b508:	cbz	x2, 1b5a4 <PyInit__decimal@@Base+0x14af0>
   1b50c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1b510:	ldr	x8, [x8, #1040]
   1b514:	mov	x9, #0x89e80000            	// #2313682944
   1b518:	mov	x10, #0x76180000            	// #1981284352
   1b51c:	movk	x9, #0x2304, lsl #32
   1b520:	movk	x10, #0xdcfb, lsl #32
   1b524:	movk	x9, #0x8ac7, lsl #48
   1b528:	movk	x10, #0x7538, lsl #48
   1b52c:	mov	x11, x0
   1b530:	mov	x12, x2
   1b534:	ldr	x14, [x1], #8
   1b538:	umulh	x15, x14, x3
   1b53c:	mul	x14, x14, x3
   1b540:	adds	x13, x13, x14
   1b544:	cinc	x14, x15, cs  // cs = hs, nlast
   1b548:	asr	x15, x13, #63
   1b54c:	and	x16, x15, x9
   1b550:	sub	x15, x14, x15
   1b554:	add	x16, x16, x13
   1b558:	umulh	x17, x15, x8
   1b55c:	mul	x15, x15, x8
   1b560:	mvn	x16, x16
   1b564:	add	x17, x14, x17
   1b568:	cmp	x16, x15
   1b56c:	cinc	x15, x17, cc  // cc = lo, ul, last
   1b570:	mvn	x15, x15
   1b574:	umulh	x16, x15, x9
   1b578:	mul	x17, x15, x9
   1b57c:	adds	x17, x13, x17
   1b580:	add	x13, x14, x16
   1b584:	cinc	x13, x13, cs  // cs = hs, nlast
   1b588:	add	x14, x13, x10
   1b58c:	sub	x13, x14, x15
   1b590:	and	x14, x14, x9
   1b594:	add	x14, x14, x17
   1b598:	subs	x12, x12, #0x1
   1b59c:	str	x14, [x11], #8
   1b5a0:	b.ne	1b534 <PyInit__decimal@@Base+0x14a80>  // b.any
   1b5a4:	str	x13, [x0, x2, lsl #3]
   1b5a8:	ret
   1b5ac:	cbz	x4, 1b68c <PyInit__decimal@@Base+0x14bd8>
   1b5b0:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1b5b4:	ldr	x9, [x9, #1040]
   1b5b8:	mov	x10, #0x89e80000            	// #2313682944
   1b5bc:	mov	x11, #0x76180000            	// #1981284352
   1b5c0:	movk	x10, #0x2304, lsl #32
   1b5c4:	movk	x11, #0xdcfb, lsl #32
   1b5c8:	mov	x8, xzr
   1b5cc:	movk	x10, #0x8ac7, lsl #48
   1b5d0:	movk	x11, #0x7538, lsl #48
   1b5d4:	mov	x12, x0
   1b5d8:	b	1b5f4 <PyInit__decimal@@Base+0x14b40>
   1b5dc:	add	x13, x8, x3
   1b5e0:	add	x8, x8, #0x1
   1b5e4:	cmp	x8, x4
   1b5e8:	add	x12, x12, #0x8
   1b5ec:	str	x16, [x0, x13, lsl #3]
   1b5f0:	b.eq	1b68c <PyInit__decimal@@Base+0x14bd8>  // b.none
   1b5f4:	mov	x16, xzr
   1b5f8:	cbz	x3, 1b5dc <PyInit__decimal@@Base+0x14b28>
   1b5fc:	mov	x13, x12
   1b600:	mov	x14, x1
   1b604:	mov	x15, x3
   1b608:	ldr	x17, [x14], #8
   1b60c:	ldr	x18, [x2, x8, lsl #3]
   1b610:	ldr	x5, [x13]
   1b614:	umulh	x6, x18, x17
   1b618:	mul	x17, x18, x17
   1b61c:	adds	x17, x5, x17
   1b620:	cinc	x18, x6, cs  // cs = hs, nlast
   1b624:	adds	x16, x17, x16
   1b628:	cinc	x17, x18, cs  // cs = hs, nlast
   1b62c:	asr	x18, x16, #63
   1b630:	and	x5, x18, x10
   1b634:	sub	x18, x17, x18
   1b638:	add	x5, x5, x16
   1b63c:	umulh	x6, x18, x9
   1b640:	mul	x18, x18, x9
   1b644:	mvn	x5, x5
   1b648:	add	x6, x17, x6
   1b64c:	cmp	x5, x18
   1b650:	cinc	x18, x6, cc  // cc = lo, ul, last
   1b654:	mvn	x18, x18
   1b658:	umulh	x5, x18, x10
   1b65c:	mul	x6, x18, x10
   1b660:	adds	x6, x16, x6
   1b664:	add	x16, x17, x5
   1b668:	cinc	x16, x16, cs  // cs = hs, nlast
   1b66c:	add	x17, x16, x11
   1b670:	sub	x16, x17, x18
   1b674:	and	x17, x17, x10
   1b678:	add	x17, x17, x6
   1b67c:	subs	x15, x15, #0x1
   1b680:	str	x17, [x13], #8
   1b684:	b.ne	1b608 <PyInit__decimal@@Base+0x14b54>  // b.any
   1b688:	b	1b5dc <PyInit__decimal@@Base+0x14b28>
   1b68c:	ret
   1b690:	stp	x29, x30, [sp, #-80]!
   1b694:	str	x25, [sp, #16]
   1b698:	stp	x24, x23, [sp, #32]
   1b69c:	stp	x22, x21, [sp, #48]
   1b6a0:	stp	x20, x19, [sp, #64]
   1b6a4:	mov	x29, sp
   1b6a8:	cbz	x2, 1b70c <PyInit__decimal@@Base+0x14c58>
   1b6ac:	mov	x23, #0x89e80000            	// #2313682944
   1b6b0:	mov	x8, x0
   1b6b4:	movk	x23, #0x2304, lsl #32
   1b6b8:	mov	x19, x3
   1b6bc:	mov	x0, xzr
   1b6c0:	sub	x21, x8, #0x8
   1b6c4:	sub	x22, x1, #0x8
   1b6c8:	movk	x23, #0x8ac7, lsl #48
   1b6cc:	lsl	x24, x2, #3
   1b6d0:	ldr	x8, [x22, x24]
   1b6d4:	mul	x10, x0, x23
   1b6d8:	umulh	x9, x0, x23
   1b6dc:	sub	x25, x2, #0x1
   1b6e0:	adds	x20, x8, x10
   1b6e4:	cinc	x1, x9, cs  // cs = hs, nlast
   1b6e8:	mov	x0, x20
   1b6ec:	mov	x2, x19
   1b6f0:	mov	x3, xzr
   1b6f4:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   1b6f8:	str	x0, [x21, x24]
   1b6fc:	msub	x0, x0, x19, x20
   1b700:	mov	x2, x25
   1b704:	cbnz	x25, 1b6cc <PyInit__decimal@@Base+0x14c18>
   1b708:	b	1b710 <PyInit__decimal@@Base+0x14c5c>
   1b70c:	mov	x0, xzr
   1b710:	ldp	x20, x19, [sp, #64]
   1b714:	ldp	x22, x21, [sp, #48]
   1b718:	ldp	x24, x23, [sp, #32]
   1b71c:	ldr	x25, [sp, #16]
   1b720:	ldp	x29, x30, [sp], #80
   1b724:	ret
   1b728:	stp	x29, x30, [sp, #-96]!
   1b72c:	stp	x28, x27, [sp, #16]
   1b730:	stp	x26, x25, [sp, #32]
   1b734:	stp	x24, x23, [sp, #48]
   1b738:	stp	x22, x21, [sp, #64]
   1b73c:	stp	x20, x19, [sp, #80]
   1b740:	mov	x29, sp
   1b744:	sub	sp, sp, #0x440
   1b748:	subs	x25, x4, x5
   1b74c:	str	x0, [sp, #24]
   1b750:	b.cc	1bc7c <PyInit__decimal@@Base+0x151c8>  // b.lo, b.ul, b.last
   1b754:	sub	x22, x5, #0x1
   1b758:	ldr	x19, [x3, x22, lsl #3]
   1b75c:	mov	x21, x5
   1b760:	mov	x28, x4
   1b764:	mov	x26, x3
   1b768:	mov	x27, x2
   1b76c:	mov	x23, x1
   1b770:	cmp	x4, #0x40
   1b774:	b.cc	1b7c0 <PyInit__decimal@@Base+0x14d0c>  // b.lo, b.ul, b.last
   1b778:	add	x0, x28, #0x1
   1b77c:	mov	w1, #0x8                   	// #8
   1b780:	bl	2030c <PyInit__decimal@@Base+0x19858>
   1b784:	mov	x24, x0
   1b788:	cbz	x0, 1bc18 <PyInit__decimal@@Base+0x15164>
   1b78c:	cmp	x21, #0x40
   1b790:	b.cc	1b7cc <PyInit__decimal@@Base+0x14d18>  // b.lo, b.ul, b.last
   1b794:	add	x0, x21, #0x1
   1b798:	mov	w1, #0x8                   	// #8
   1b79c:	bl	2030c <PyInit__decimal@@Base+0x19858>
   1b7a0:	mov	x20, x0
   1b7a4:	cbnz	x0, 1b7d0 <PyInit__decimal@@Base+0x14d1c>
   1b7a8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1b7ac:	ldr	x8, [x8, #1376]
   1b7b0:	mov	x0, x24
   1b7b4:	blr	x8
   1b7b8:	mov	w21, #0xffffffff            	// #-1
   1b7bc:	b	1bc58 <PyInit__decimal@@Base+0x151a4>
   1b7c0:	add	x24, sp, #0x238
   1b7c4:	cmp	x21, #0x40
   1b7c8:	b.cs	1b794 <PyInit__decimal@@Base+0x14ce0>  // b.hs, b.nlast
   1b7cc:	add	x20, sp, #0x38
   1b7d0:	stp	x23, x22, [sp, #8]
   1b7d4:	mov	x23, #0x89e80000            	// #2313682944
   1b7d8:	movk	x23, #0x2304, lsl #32
   1b7dc:	mov	x22, #0x89e80000            	// #2313682944
   1b7e0:	mov	x18, #0x76180000            	// #1981284352
   1b7e4:	movk	x23, #0x8ac7, lsl #48
   1b7e8:	add	x8, x19, #0x1
   1b7ec:	movk	x22, #0x2304, lsl #32
   1b7f0:	movk	x18, #0xdcfb, lsl #32
   1b7f4:	movk	x22, #0x8ac7, lsl #48
   1b7f8:	movk	x18, #0x7538, lsl #48
   1b7fc:	udiv	x17, x23, x8
   1b800:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1b804:	mov	x12, xzr
   1b808:	cbz	x28, 1b888 <PyInit__decimal@@Base+0x14dd4>
   1b80c:	ldr	x9, [x8, #1040]
   1b810:	mov	x10, x24
   1b814:	mov	x11, x28
   1b818:	ldr	x13, [x27], #8
   1b81c:	umulh	x14, x13, x17
   1b820:	mul	x13, x13, x17
   1b824:	adds	x12, x12, x13
   1b828:	cinc	x13, x14, cs  // cs = hs, nlast
   1b82c:	asr	x14, x12, #63
   1b830:	and	x15, x14, x23
   1b834:	sub	x14, x13, x14
   1b838:	add	x15, x15, x12
   1b83c:	umulh	x16, x14, x9
   1b840:	mul	x14, x14, x9
   1b844:	mvn	x15, x15
   1b848:	add	x16, x13, x16
   1b84c:	cmp	x15, x14
   1b850:	cinc	x14, x16, cc  // cc = lo, ul, last
   1b854:	mvn	x14, x14
   1b858:	add	x13, x13, x18
   1b85c:	umulh	x15, x14, x22
   1b860:	mul	x16, x14, x22
   1b864:	adds	x16, x12, x16
   1b868:	add	x12, x13, x15
   1b86c:	cinc	x13, x12, cs  // cs = hs, nlast
   1b870:	sub	x12, x13, x14
   1b874:	and	x13, x13, x23
   1b878:	add	x13, x13, x16
   1b87c:	subs	x11, x11, #0x1
   1b880:	str	x13, [x10], #8
   1b884:	b.ne	1b818 <PyInit__decimal@@Base+0x14d64>  // b.any
   1b888:	str	x12, [x24, x28, lsl #3]
   1b88c:	mov	x12, xzr
   1b890:	cbz	x21, 1b910 <PyInit__decimal@@Base+0x14e5c>
   1b894:	ldr	x9, [x8, #1040]
   1b898:	mov	x10, x20
   1b89c:	mov	x11, x21
   1b8a0:	ldr	x13, [x26], #8
   1b8a4:	umulh	x14, x13, x17
   1b8a8:	mul	x13, x13, x17
   1b8ac:	adds	x12, x12, x13
   1b8b0:	cinc	x13, x14, cs  // cs = hs, nlast
   1b8b4:	asr	x14, x12, #63
   1b8b8:	and	x15, x14, x23
   1b8bc:	sub	x14, x13, x14
   1b8c0:	add	x15, x15, x12
   1b8c4:	umulh	x16, x14, x9
   1b8c8:	mul	x14, x14, x9
   1b8cc:	mvn	x15, x15
   1b8d0:	add	x16, x13, x16
   1b8d4:	cmp	x15, x14
   1b8d8:	cinc	x14, x16, cc  // cc = lo, ul, last
   1b8dc:	mvn	x14, x14
   1b8e0:	add	x13, x13, x18
   1b8e4:	umulh	x15, x14, x22
   1b8e8:	mul	x16, x14, x22
   1b8ec:	adds	x16, x12, x16
   1b8f0:	add	x12, x13, x15
   1b8f4:	cinc	x13, x12, cs  // cs = hs, nlast
   1b8f8:	sub	x12, x13, x14
   1b8fc:	and	x13, x13, x23
   1b900:	add	x13, x13, x16
   1b904:	subs	x11, x11, #0x1
   1b908:	str	x13, [x10], #8
   1b90c:	b.ne	1b8a0 <PyInit__decimal@@Base+0x14dec>  // b.any
   1b910:	cmn	x25, #0x1
   1b914:	str	x17, [sp]
   1b918:	str	x12, [x20, x21, lsl #3]
   1b91c:	b.eq	1bb98 <PyInit__decimal@@Base+0x150e4>  // b.none
   1b920:	ldr	x27, [x8, #1040]
   1b924:	sub	x17, x21, #0x2
   1b928:	add	x19, x24, x25, lsl #3
   1b92c:	add	x13, x24, x28, lsl #3
   1b930:	str	x24, [sp, #48]
   1b934:	b	1b948 <PyInit__decimal@@Base+0x14e94>
   1b938:	sub	x25, x0, #0x1
   1b93c:	sub	x19, x19, #0x8
   1b940:	sub	x13, x13, #0x8
   1b944:	cbz	x0, 1bb98 <PyInit__decimal@@Base+0x150e4>
   1b948:	ldr	x9, [sp, #16]
   1b94c:	add	x8, x24, x25, lsl #3
   1b950:	stp	x25, x13, [sp, #32]
   1b954:	add	x8, x8, x21, lsl #3
   1b958:	ldr	x25, [x20, x9, lsl #3]
   1b95c:	ldp	x8, x9, [x8, #-8]
   1b960:	mov	x3, xzr
   1b964:	mov	x28, x17
   1b968:	mov	x2, x25
   1b96c:	udiv	x24, x9, x25
   1b970:	msub	x9, x25, x24, x9
   1b974:	umulh	x10, x9, x22
   1b978:	mul	x9, x9, x22
   1b97c:	adds	x26, x8, x9
   1b980:	cinc	x1, x10, cs  // cs = hs, nlast
   1b984:	mov	x0, x26
   1b988:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   1b98c:	msub	x9, x25, x0, x26
   1b990:	madd	x8, x24, x23, x0
   1b994:	ldr	x0, [sp, #32]
   1b998:	mov	x18, #0x76180000            	// #1981284352
   1b99c:	movk	x18, #0xdcfb, lsl #32
   1b9a0:	movk	x18, #0x7538, lsl #48
   1b9a4:	mov	x17, x28
   1b9a8:	add	x10, x28, x0
   1b9ac:	cmp	x8, x23
   1b9b0:	b.cs	1ba30 <PyInit__decimal@@Base+0x14f7c>  // b.hs, b.nlast
   1b9b4:	ldr	x11, [x20, x17, lsl #3]
   1b9b8:	umulh	x12, x11, x8
   1b9bc:	mul	x11, x11, x8
   1b9c0:	asr	x13, x11, #63
   1b9c4:	sub	x14, x12, x13
   1b9c8:	and	x13, x13, x23
   1b9cc:	add	x13, x13, x11
   1b9d0:	umulh	x15, x14, x27
   1b9d4:	mul	x14, x14, x27
   1b9d8:	mvn	x13, x13
   1b9dc:	add	x15, x15, x12
   1b9e0:	cmp	x13, x14
   1b9e4:	cinc	x13, x15, cc  // cc = lo, ul, last
   1b9e8:	mvn	x13, x13
   1b9ec:	add	x12, x12, x18
   1b9f0:	umulh	x14, x13, x22
   1b9f4:	mul	x15, x13, x22
   1b9f8:	adds	x11, x15, x11
   1b9fc:	add	x12, x12, x14
   1ba00:	cinc	x12, x12, cs  // cs = hs, nlast
   1ba04:	sub	x13, x12, x13
   1ba08:	cmp	x13, x9
   1ba0c:	b.hi	1ba30 <PyInit__decimal@@Base+0x14f7c>  // b.pmore
   1ba10:	cmp	x9, x13
   1ba14:	b.ne	1ba48 <PyInit__decimal@@Base+0x14f94>  // b.any
   1ba18:	ldr	x13, [sp, #48]
   1ba1c:	and	x12, x12, x23
   1ba20:	add	x11, x12, x11
   1ba24:	ldr	x13, [x13, x10, lsl #3]
   1ba28:	cmp	x11, x13
   1ba2c:	b.ls	1ba48 <PyInit__decimal@@Base+0x14f94>  // b.plast
   1ba30:	adds	x9, x9, x25
   1ba34:	sub	x8, x8, #0x1
   1ba38:	b.cs	1ba48 <PyInit__decimal@@Base+0x14f94>  // b.hs, b.nlast
   1ba3c:	sub	x11, x23, #0x1
   1ba40:	cmp	x9, x11
   1ba44:	b.ls	1b9ac <PyInit__decimal@@Base+0x14ef8>  // b.plast
   1ba48:	mov	x9, xzr
   1ba4c:	mov	x10, xzr
   1ba50:	mov	x11, xzr
   1ba54:	lsl	x12, x10, #3
   1ba58:	ldr	x13, [x20, x12]
   1ba5c:	add	x10, x10, #0x1
   1ba60:	mul	x15, x8, x13
   1ba64:	umulh	x14, x8, x13
   1ba68:	adds	x11, x11, x15
   1ba6c:	madd	x13, x9, x13, x14
   1ba70:	asr	x14, x11, #63
   1ba74:	cinc	x13, x13, cs  // cs = hs, nlast
   1ba78:	and	x15, x14, x23
   1ba7c:	sub	x14, x13, x14
   1ba80:	add	x15, x15, x11
   1ba84:	umulh	x16, x14, x27
   1ba88:	mul	x14, x14, x27
   1ba8c:	mvn	x15, x15
   1ba90:	add	x16, x13, x16
   1ba94:	cmp	x15, x14
   1ba98:	cinc	x14, x16, cc  // cc = lo, ul, last
   1ba9c:	mvn	x15, x14
   1baa0:	mul	x16, x15, x22
   1baa4:	add	x13, x13, x18
   1baa8:	umulh	x15, x15, x22
   1baac:	adds	x11, x11, x16
   1bab0:	ldr	x16, [x19, x12]
   1bab4:	add	x13, x13, x15
   1bab8:	cinc	x13, x13, cs  // cs = hs, nlast
   1babc:	add	x14, x14, x13
   1bac0:	and	x13, x13, x23
   1bac4:	add	x11, x13, x11
   1bac8:	subs	x11, x16, x11
   1bacc:	cinc	x13, x14, cc  // cc = lo, ul, last
   1bad0:	add	x14, x11, x23
   1bad4:	csel	x11, x14, x11, cc  // cc = lo, ul, last
   1bad8:	cmp	x10, x21
   1badc:	str	x11, [x19, x12]
   1bae0:	add	x11, x13, #0x1
   1bae4:	b.ls	1ba54 <PyInit__decimal@@Base+0x14fa0>  // b.plast
   1bae8:	ldr	x9, [sp, #24]
   1baec:	str	x8, [x9, x0, lsl #3]
   1baf0:	ldp	x13, x24, [sp, #40]
   1baf4:	cbz	x11, 1b938 <PyInit__decimal@@Base+0x14e84>
   1baf8:	ldr	x9, [sp, #24]
   1bafc:	sub	x8, x8, #0x1
   1bb00:	str	x8, [x9, x0, lsl #3]
   1bb04:	cbz	x21, 1b938 <PyInit__decimal@@Base+0x14e84>
   1bb08:	mov	x8, xzr
   1bb0c:	mov	x9, xzr
   1bb10:	lsl	x10, x8, #3
   1bb14:	ldr	x11, [x19, x10]
   1bb18:	ldr	x12, [x20, x10]
   1bb1c:	add	x8, x8, #0x1
   1bb20:	add	x9, x11, x9
   1bb24:	add	x12, x9, x12
   1bb28:	sub	x9, x23, #0x1
   1bb2c:	cmp	x12, x11
   1bb30:	cset	w11, cc  // cc = lo, ul, last
   1bb34:	cmp	x12, x9
   1bb38:	cset	w9, hi  // hi = pmore
   1bb3c:	orr	w9, w11, w9
   1bb40:	add	x11, x12, x18
   1bb44:	cmp	w9, #0x0
   1bb48:	csel	x11, x11, x12, ne  // ne = any
   1bb4c:	cmp	x21, x8
   1bb50:	str	x11, [x19, x10]
   1bb54:	b.ne	1bb10 <PyInit__decimal@@Base+0x1505c>  // b.any
   1bb58:	cbz	w9, 1b938 <PyInit__decimal@@Base+0x14e84>
   1bb5c:	mov	x8, x13
   1bb60:	mov	x9, x21
   1bb64:	mov	w10, #0x1                   	// #1
   1bb68:	ldr	x11, [x8]
   1bb6c:	add	x11, x11, x10
   1bb70:	cmp	x11, x23
   1bb74:	csel	x12, xzr, x11, eq  // eq = none
   1bb78:	cset	w10, eq  // eq = none
   1bb7c:	cmp	x9, x21
   1bb80:	str	x12, [x8], #8
   1bb84:	b.cs	1b938 <PyInit__decimal@@Base+0x14e84>  // b.hs, b.nlast
   1bb88:	cmp	x11, x23
   1bb8c:	add	x9, x9, #0x1
   1bb90:	b.eq	1bb68 <PyInit__decimal@@Base+0x150b4>  // b.none
   1bb94:	b	1b938 <PyInit__decimal@@Base+0x14e84>
   1bb98:	ldr	x9, [sp, #8]
   1bb9c:	cbz	x9, 1bbfc <PyInit__decimal@@Base+0x15148>
   1bba0:	cbz	x21, 1bc24 <PyInit__decimal@@Base+0x15170>
   1bba4:	ldr	x27, [sp]
   1bba8:	mov	x8, xzr
   1bbac:	sub	x19, x9, #0x8
   1bbb0:	mov	x26, x24
   1bbb4:	sub	x23, x24, #0x8
   1bbb8:	lsl	x24, x21, #3
   1bbbc:	ldr	x9, [x23, x24]
   1bbc0:	umulh	x10, x8, x22
   1bbc4:	mul	x8, x8, x22
   1bbc8:	sub	x25, x21, #0x1
   1bbcc:	adds	x21, x9, x8
   1bbd0:	cinc	x1, x10, cs  // cs = hs, nlast
   1bbd4:	mov	x0, x21
   1bbd8:	mov	x2, x27
   1bbdc:	mov	x3, xzr
   1bbe0:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   1bbe4:	msub	x8, x27, x0, x21
   1bbe8:	mov	x21, x25
   1bbec:	str	x0, [x19, x24]
   1bbf0:	cbnz	x25, 1bbb8 <PyInit__decimal@@Base+0x15104>
   1bbf4:	mov	x24, x26
   1bbf8:	b	1bc24 <PyInit__decimal@@Base+0x15170>
   1bbfc:	ldr	x9, [sp, #16]
   1bc00:	tbnz	x9, #63, 1bc20 <PyInit__decimal@@Base+0x1516c>
   1bc04:	ldr	x8, [x24, x9, lsl #3]
   1bc08:	sub	x9, x9, #0x1
   1bc0c:	cbz	x8, 1bc00 <PyInit__decimal@@Base+0x1514c>
   1bc10:	mov	w21, #0x1                   	// #1
   1bc14:	b	1bc24 <PyInit__decimal@@Base+0x15170>
   1bc18:	mov	w21, #0xffffffff            	// #-1
   1bc1c:	b	1bc58 <PyInit__decimal@@Base+0x151a4>
   1bc20:	mov	w21, wzr
   1bc24:	add	x8, sp, #0x238
   1bc28:	cmp	x24, x8
   1bc2c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   1bc30:	b.eq	1bc40 <PyInit__decimal@@Base+0x1518c>  // b.none
   1bc34:	ldr	x8, [x19, #1376]
   1bc38:	mov	x0, x24
   1bc3c:	blr	x8
   1bc40:	add	x8, sp, #0x38
   1bc44:	cmp	x20, x8
   1bc48:	b.eq	1bc58 <PyInit__decimal@@Base+0x151a4>  // b.none
   1bc4c:	ldr	x8, [x19, #1376]
   1bc50:	mov	x0, x20
   1bc54:	blr	x8
   1bc58:	mov	w0, w21
   1bc5c:	add	sp, sp, #0x440
   1bc60:	ldp	x20, x19, [sp, #80]
   1bc64:	ldp	x22, x21, [sp, #64]
   1bc68:	ldp	x24, x23, [sp, #48]
   1bc6c:	ldp	x26, x25, [sp, #32]
   1bc70:	ldp	x28, x27, [sp, #16]
   1bc74:	ldp	x29, x30, [sp], #96
   1bc78:	ret
   1bc7c:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
   1bc80:	ldr	x19, [x19, #3904]
   1bc84:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   1bc88:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x3854c>
   1bc8c:	add	x1, x1, #0xaa
   1bc90:	ldr	x0, [x19]
   1bc94:	add	x2, x2, #0xb9
   1bc98:	mov	w3, #0x25c                 	// #604
   1bc9c:	bl	69b0 <fprintf@plt>
   1bca0:	ldr	x3, [x19]
   1bca4:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x3854c>
   1bca8:	add	x0, x0, #0xf5
   1bcac:	mov	w1, #0x29                  	// #41
   1bcb0:	mov	w2, #0x1                   	// #1
   1bcb4:	bl	6870 <fwrite@plt>
   1bcb8:	ldr	x1, [x19]
   1bcbc:	mov	w0, #0xa                   	// #10
   1bcc0:	bl	64f0 <fputc@plt>
   1bcc4:	bl	6700 <abort@plt>
   1bcc8:	sub	sp, sp, #0x80
   1bccc:	stp	x29, x30, [sp, #32]
   1bcd0:	stp	x28, x27, [sp, #48]
   1bcd4:	stp	x26, x25, [sp, #64]
   1bcd8:	stp	x24, x23, [sp, #80]
   1bcdc:	stp	x22, x21, [sp, #96]
   1bce0:	stp	x20, x19, [sp, #112]
   1bce4:	add	x29, sp, #0x20
   1bce8:	mov	x8, #0x435f                	// #17247
   1bcec:	movk	x8, #0xd79, lsl #16
   1bcf0:	movk	x8, #0x35e5, lsl #32
   1bcf4:	movk	x8, #0xd794, lsl #48
   1bcf8:	umulh	x8, x4, x8
   1bcfc:	lsr	x19, x8, #4
   1bd00:	mov	x8, #0xffffffffffffffed    	// #-19
   1bd04:	mov	x21, x3
   1bd08:	mov	x23, x1
   1bd0c:	madd	x25, x19, x8, x4
   1bd10:	mov	x20, x0
   1bd14:	cbz	x25, 1bdb8 <PyInit__decimal@@Base+0x15304>
   1bd18:	add	x8, x23, x21, lsl #3
   1bd1c:	mov	x24, x2
   1bd20:	sub	x26, x2, #0x1
   1bd24:	ldur	x2, [x8, #-8]
   1bd28:	mov	w8, #0x13                  	// #19
   1bd2c:	sub	x22, x8, x25
   1bd30:	adrp	x27, 3f000 <PyInit__decimal@@Base+0x3854c>
   1bd34:	add	x0, sp, #0x8
   1bd38:	add	x1, sp, #0x10
   1bd3c:	mov	x3, x22
   1bd40:	add	x27, x27, #0x370
   1bd44:	sub	x28, x21, #0x2
   1bd48:	bl	1be04 <PyInit__decimal@@Base+0x15350>
   1bd4c:	ldr	x8, [sp, #8]
   1bd50:	cbz	x8, 1bd60 <PyInit__decimal@@Base+0x152ac>
   1bd54:	sub	x9, x24, #0x2
   1bd58:	str	x8, [x20, x26, lsl #3]
   1bd5c:	mov	x26, x9
   1bd60:	ldr	x24, [x27, x25, lsl #3]
   1bd64:	ldr	x25, [sp, #16]
   1bd68:	cmn	x28, #0x1
   1bd6c:	b.eq	1bdac <PyInit__decimal@@Base+0x152f8>  // b.none
   1bd70:	add	x26, x20, x26, lsl #3
   1bd74:	sub	x23, x23, #0x10
   1bd78:	ldr	x2, [x23, x21, lsl #3]
   1bd7c:	add	x0, sp, #0x8
   1bd80:	sub	x1, x29, #0x8
   1bd84:	mov	x3, x22
   1bd88:	bl	1be04 <PyInit__decimal@@Base+0x15350>
   1bd8c:	ldr	x8, [sp, #8]
   1bd90:	sub	x21, x21, #0x1
   1bd94:	cmp	x21, #0x1
   1bd98:	madd	x8, x25, x24, x8
   1bd9c:	str	x8, [x26], #-8
   1bda0:	ldur	x25, [x29, #-8]
   1bda4:	b.ne	1bd78 <PyInit__decimal@@Base+0x152c4>  // b.any
   1bda8:	str	x25, [sp, #16]
   1bdac:	mul	x8, x25, x24
   1bdb0:	str	x8, [x20, x19, lsl #3]
   1bdb4:	b	1bddc <PyInit__decimal@@Base+0x15328>
   1bdb8:	cbz	x21, 1bddc <PyInit__decimal@@Base+0x15328>
   1bdbc:	add	x8, x20, x19, lsl #3
   1bdc0:	sub	x8, x8, #0x8
   1bdc4:	sub	x9, x23, #0x8
   1bdc8:	lsl	x10, x21, #3
   1bdcc:	ldr	x11, [x9, x10]
   1bdd0:	subs	x21, x21, #0x1
   1bdd4:	str	x11, [x8, x10]
   1bdd8:	b.ne	1bdc8 <PyInit__decimal@@Base+0x15314>  // b.any
   1bddc:	mov	x0, x20
   1bde0:	mov	x1, x19
   1bde4:	ldp	x20, x19, [sp, #112]
   1bde8:	ldp	x22, x21, [sp, #96]
   1bdec:	ldp	x24, x23, [sp, #80]
   1bdf0:	ldp	x26, x25, [sp, #64]
   1bdf4:	ldp	x28, x27, [sp, #48]
   1bdf8:	ldp	x29, x30, [sp, #32]
   1bdfc:	add	sp, sp, #0x80
   1be00:	b	20da0 <PyInit__decimal@@Base+0x1a2ec>
   1be04:	cmp	x3, #0x9
   1be08:	b.hi	1be3c <PyInit__decimal@@Base+0x15388>  // b.pmore
   1be0c:	cmp	x3, #0x4
   1be10:	b.hi	1be90 <PyInit__decimal@@Base+0x153dc>  // b.pmore
   1be14:	b.hi	1c16c <PyInit__decimal@@Base+0x156b8>  // b.pmore
   1be18:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1be1c:	add	x8, x8, #0xa5
   1be20:	adr	x9, 1be30 <PyInit__decimal@@Base+0x1537c>
   1be24:	ldrb	w10, [x8, x3]
   1be28:	add	x9, x9, x10, lsl #2
   1be2c:	br	x9
   1be30:	str	x2, [x0]
   1be34:	str	xzr, [x1]
   1be38:	ret
   1be3c:	cmp	x3, #0xe
   1be40:	b.hi	1bedc <PyInit__decimal@@Base+0x15428>  // b.pmore
   1be44:	sub	x8, x3, #0xa
   1be48:	cmp	x8, #0x4
   1be4c:	b.hi	1c16c <PyInit__decimal@@Base+0x156b8>  // b.pmore
   1be50:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1be54:	add	x9, x9, #0x9b
   1be58:	adr	x10, 1be68 <PyInit__decimal@@Base+0x153b4>
   1be5c:	ldrb	w11, [x9, x8]
   1be60:	add	x10, x10, x11, lsl #2
   1be64:	br	x10
   1be68:	mov	x8, #0xd5bf                	// #54719
   1be6c:	movk	x8, #0xbded, lsl #16
   1be70:	movk	x8, #0xfece, lsl #32
   1be74:	movk	x8, #0xdbe6, lsl #48
   1be78:	mov	x9, #0xffffffffffff1c00    	// #-58368
   1be7c:	movk	x9, #0xabf4, lsl #16
   1be80:	umulh	x8, x2, x8
   1be84:	movk	x9, #0xfffd, lsl #32
   1be88:	lsr	x8, x8, #33
   1be8c:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1be90:	sub	x8, x3, #0x5
   1be94:	cmp	x8, #0x4
   1be98:	b.hi	1c16c <PyInit__decimal@@Base+0x156b8>  // b.pmore
   1be9c:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1bea0:	add	x9, x9, #0xa0
   1bea4:	adr	x10, 1beb4 <PyInit__decimal@@Base+0x15400>
   1bea8:	ldrb	w11, [x9, x8]
   1beac:	add	x10, x10, x11, lsl #2
   1beb0:	br	x10
   1beb4:	mov	x9, #0x7843                	// #30787
   1beb8:	movk	x9, #0x71b4, lsl #16
   1bebc:	movk	x9, #0x5ac4, lsl #32
   1bec0:	lsr	x8, x2, #5
   1bec4:	movk	x9, #0xa7c, lsl #48
   1bec8:	mov	x10, #0xffffffffffff7960    	// #-34464
   1becc:	umulh	x8, x8, x9
   1bed0:	movk	x10, #0xfffe, lsl #16
   1bed4:	lsr	x8, x8, #7
   1bed8:	b	1c160 <PyInit__decimal@@Base+0x156ac>
   1bedc:	sub	x8, x3, #0xf
   1bee0:	cmp	x8, #0x4
   1bee4:	b.hi	1c16c <PyInit__decimal@@Base+0x156b8>  // b.pmore
   1bee8:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1beec:	add	x9, x9, #0x96
   1bef0:	adr	x10, 1bf00 <PyInit__decimal@@Base+0x1544c>
   1bef4:	ldrb	w11, [x9, x8]
   1bef8:	add	x10, x10, x11, lsl #2
   1befc:	br	x10
   1bf00:	mov	x9, #0xeac3                	// #60099
   1bf04:	movk	x9, #0xf3dc, lsl #16
   1bf08:	movk	x9, #0x4075, lsl #32
   1bf0c:	mov	x10, #0x8000                	// #32768
   1bf10:	lsr	x8, x2, #15
   1bf14:	movk	x9, #0x2, lsl #48
   1bf18:	movk	x10, #0x5b39, lsl #16
   1bf1c:	movk	x10, #0x7281, lsl #32
   1bf20:	umulh	x8, x8, x9
   1bf24:	movk	x10, #0xfffc, lsl #48
   1bf28:	lsr	x8, x8, #20
   1bf2c:	b	1c160 <PyInit__decimal@@Base+0x156ac>
   1bf30:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   1bf34:	movk	x8, #0xcccd
   1bf38:	umulh	x8, x2, x8
   1bf3c:	mov	x9, #0xfffffffffffffff6    	// #-10
   1bf40:	lsr	x8, x8, #3
   1bf44:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1bf48:	mov	x9, #0xf5c3                	// #62915
   1bf4c:	movk	x9, #0x5c28, lsl #16
   1bf50:	movk	x9, #0xc28f, lsl #32
   1bf54:	lsr	x8, x2, #2
   1bf58:	movk	x9, #0x28f5, lsl #48
   1bf5c:	umulh	x8, x8, x9
   1bf60:	mov	x10, #0xffffffffffffff9c    	// #-100
   1bf64:	lsr	x8, x8, #2
   1bf68:	b	1c160 <PyInit__decimal@@Base+0x156ac>
   1bf6c:	mov	x9, #0xf7cf                	// #63439
   1bf70:	movk	x9, #0xe353, lsl #16
   1bf74:	movk	x9, #0x9ba5, lsl #32
   1bf78:	lsr	x8, x2, #3
   1bf7c:	movk	x9, #0x20c4, lsl #48
   1bf80:	umulh	x8, x8, x9
   1bf84:	mov	x10, #0xfffffffffffffc18    	// #-1000
   1bf88:	lsr	x8, x8, #4
   1bf8c:	b	1c160 <PyInit__decimal@@Base+0x156ac>
   1bf90:	mov	x8, #0x594b                	// #22859
   1bf94:	movk	x8, #0x3886, lsl #16
   1bf98:	movk	x8, #0xc5d6, lsl #32
   1bf9c:	movk	x8, #0x346d, lsl #48
   1bfa0:	umulh	x8, x2, x8
   1bfa4:	mov	x9, #0xffffffffffffd8f0    	// #-10000
   1bfa8:	lsr	x8, x8, #11
   1bfac:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1bfb0:	mov	x8, #0xaaff                	// #43775
   1bfb4:	movk	x8, #0xcb24, lsl #16
   1bfb8:	movk	x8, #0xff0b, lsl #32
   1bfbc:	movk	x8, #0xafeb, lsl #48
   1bfc0:	mov	x9, #0xffffffffffff1800    	// #-59392
   1bfc4:	movk	x9, #0xb789, lsl #16
   1bfc8:	umulh	x8, x2, x8
   1bfcc:	movk	x9, #0xffe8, lsl #32
   1bfd0:	lsr	x8, x8, #36
   1bfd4:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1bfd8:	mov	x8, #0x2233                	// #8755
   1bfdc:	movk	x8, #0x5bd4, lsl #16
   1bfe0:	movk	x8, #0x3302, lsl #32
   1bfe4:	movk	x8, #0x232f, lsl #48
   1bfe8:	mov	x9, #0xfffffffffffff000    	// #-4096
   1bfec:	movk	x9, #0x2b5a, lsl #16
   1bff0:	umulh	x8, x2, x8
   1bff4:	movk	x9, #0xff17, lsl #32
   1bff8:	lsr	x8, x8, #37
   1bffc:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1c000:	mov	x8, #0x385                 	// #901
   1c004:	movk	x8, #0x92ed, lsl #16
   1c008:	movk	x8, #0x84d0, lsl #32
   1c00c:	movk	x8, #0x384b, lsl #48
   1c010:	mov	x9, #0xffffffffffff6000    	// #-40960
   1c014:	movk	x9, #0xb18d, lsl #16
   1c018:	umulh	x8, x2, x8
   1c01c:	movk	x9, #0xf6e7, lsl #32
   1c020:	lsr	x8, x8, #41
   1c024:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1c028:	mov	x8, #0xcd81                	// #52609
   1c02c:	movk	x8, #0x5095, lsl #16
   1c030:	movk	x8, #0x4dc3, lsl #32
   1c034:	movk	x8, #0xb42, lsl #48
   1c038:	mov	x9, #0xffffffffffffc000    	// #-16384
   1c03c:	movk	x9, #0xef85, lsl #16
   1c040:	umulh	x8, x2, x8
   1c044:	movk	x9, #0xa50c, lsl #32
   1c048:	lsr	x8, x8, #42
   1c04c:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1c050:	mov	x8, #0x34db                	// #13531
   1c054:	movk	x8, #0xd7b6, lsl #16
   1c058:	movk	x8, #0xde82, lsl #32
   1c05c:	movk	x8, #0x431b, lsl #48
   1c060:	mov	x9, #0xffffffffffffbdc0    	// #-16960
   1c064:	umulh	x8, x2, x8
   1c068:	movk	x9, #0xfff0, lsl #16
   1c06c:	lsr	x8, x8, #18
   1c070:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1c074:	mov	x8, #0x42bd                	// #17085
   1c078:	movk	x8, #0xe57a, lsl #16
   1c07c:	movk	x8, #0x94d5, lsl #32
   1c080:	movk	x8, #0xd6bf, lsl #48
   1c084:	mov	x9, #0xffffffffffff6980    	// #-38528
   1c088:	umulh	x8, x2, x8
   1c08c:	movk	x9, #0xff67, lsl #16
   1c090:	lsr	x8, x8, #23
   1c094:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1c098:	mov	x8, #0xcefd                	// #52989
   1c09c:	movk	x8, #0x8461, lsl #16
   1c0a0:	movk	x8, #0x7711, lsl #32
   1c0a4:	movk	x8, #0xabcc, lsl #48
   1c0a8:	mov	x9, #0xffffffffffff1f00    	// #-57600
   1c0ac:	umulh	x8, x2, x8
   1c0b0:	movk	x9, #0xfa0a, lsl #16
   1c0b4:	lsr	x8, x8, #26
   1c0b8:	b	1c108 <PyInit__decimal@@Base+0x15654>
   1c0bc:	mov	x9, #0x5a53                	// #23123
   1c0c0:	movk	x9, #0xa09b, lsl #16
   1c0c4:	movk	x9, #0xb82f, lsl #32
   1c0c8:	lsr	x8, x2, #9
   1c0cc:	movk	x9, #0x44, lsl #48
   1c0d0:	mov	x10, #0xffffffffffff3600    	// #-51712
   1c0d4:	umulh	x8, x8, x9
   1c0d8:	movk	x10, #0xc465, lsl #16
   1c0dc:	lsr	x8, x8, #11
   1c0e0:	b	1c160 <PyInit__decimal@@Base+0x156ac>
   1c0e4:	mov	x8, #0x7857                	// #30807
   1c0e8:	movk	x8, #0xb113, lsl #16
   1c0ec:	movk	x8, #0x652f, lsl #32
   1c0f0:	movk	x8, #0x39a5, lsl #48
   1c0f4:	mov	x9, #0x903f0000            	// #2420047872
   1c0f8:	movk	x9, #0x790d, lsl #32
   1c0fc:	umulh	x8, x2, x8
   1c100:	movk	x9, #0xffdc, lsl #48
   1c104:	lsr	x8, x8, #51
   1c108:	str	x8, [x0]
   1c10c:	madd	x8, x8, x9, x2
   1c110:	b	1c168 <PyInit__decimal@@Base+0x156b4>
   1c114:	mov	x9, #0x1b53                	// #6995
   1c118:	movk	x9, #0xd519, lsl #16
   1c11c:	lsr	x8, x2, #17
   1c120:	movk	x9, #0x5c3b, lsl #32
   1c124:	mov	x10, #0xa2760000            	// #2725642240
   1c128:	movk	x10, #0xba87, lsl #32
   1c12c:	umulh	x8, x8, x9
   1c130:	movk	x10, #0xfe9c, lsl #48
   1c134:	lsr	x8, x8, #22
   1c138:	b	1c160 <PyInit__decimal@@Base+0x156ac>
   1c13c:	mov	x9, #0x490f                	// #18703
   1c140:	movk	x9, #0x7747, lsl #16
   1c144:	lsr	x8, x2, #18
   1c148:	movk	x9, #0x49c9, lsl #32
   1c14c:	mov	x10, #0x589c0000            	// #1486618624
   1c150:	movk	x10, #0x494c, lsl #32
   1c154:	umulh	x8, x8, x9
   1c158:	movk	x10, #0xf21f, lsl #48
   1c15c:	lsr	x8, x8, #24
   1c160:	str	x8, [x0]
   1c164:	madd	x8, x8, x10, x2
   1c168:	str	x8, [x1]
   1c16c:	ret
   1c170:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1c174:	movk	x8, #0x2304, lsl #32
   1c178:	movk	x8, #0x8ac7, lsl #48
   1c17c:	cmp	x2, x8
   1c180:	csinc	x8, xzr, x8, ls  // ls = plast
   1c184:	cset	w9, hi  // hi = pmore
   1c188:	sub	x8, x2, x8
   1c18c:	str	x9, [x0]
   1c190:	b	1c168 <PyInit__decimal@@Base+0x156b4>
   1c194:	sub	sp, sp, #0x80
   1c198:	stp	x29, x30, [sp, #32]
   1c19c:	str	x27, [sp, #48]
   1c1a0:	stp	x26, x25, [sp, #64]
   1c1a4:	stp	x24, x23, [sp, #80]
   1c1a8:	stp	x22, x21, [sp, #96]
   1c1ac:	stp	x20, x19, [sp, #112]
   1c1b0:	add	x29, sp, #0x20
   1c1b4:	mov	x8, #0x435f                	// #17247
   1c1b8:	movk	x8, #0xd79, lsl #16
   1c1bc:	movk	x8, #0x35e5, lsl #32
   1c1c0:	movk	x8, #0xd794, lsl #48
   1c1c4:	umulh	x8, x3, x8
   1c1c8:	mov	x9, #0xffffffffffffffed    	// #-19
   1c1cc:	lsr	x25, x8, #4
   1c1d0:	mov	x23, x3
   1c1d4:	mov	x21, x2
   1c1d8:	mov	x20, x1
   1c1dc:	mov	x19, x0
   1c1e0:	madd	x22, x25, x9, x3
   1c1e4:	stp	xzr, xzr, [sp]
   1c1e8:	cbz	x22, 1c248 <PyInit__decimal@@Base+0x15794>
   1c1ec:	ldr	x2, [x20, x25, lsl #3]
   1c1f0:	add	x0, sp, #0x10
   1c1f4:	mov	x1, sp
   1c1f8:	mov	x3, x22
   1c1fc:	bl	1be04 <PyInit__decimal@@Base+0x15350>
   1c200:	ldr	x2, [sp]
   1c204:	sub	x3, x22, #0x1
   1c208:	add	x0, sp, #0x8
   1c20c:	mov	x1, sp
   1c210:	bl	1be04 <PyInit__decimal@@Base+0x15350>
   1c214:	ldr	x24, [sp]
   1c218:	cmp	x23, #0x13
   1c21c:	b.cc	1c2c0 <PyInit__decimal@@Base+0x1580c>  // b.lo, b.ul, b.last
   1c220:	cbnz	x24, 1c2c0 <PyInit__decimal@@Base+0x1580c>
   1c224:	sub	x8, x20, #0x8
   1c228:	mov	w24, #0x1                   	// #1
   1c22c:	mov	x9, x25
   1c230:	subs	x10, x9, #0x1
   1c234:	b.lt	1c2b8 <PyInit__decimal@@Base+0x15804>  // b.tstop
   1c238:	ldr	x11, [x8, x9, lsl #3]
   1c23c:	mov	x9, x10
   1c240:	cbz	x11, 1c230 <PyInit__decimal@@Base+0x1577c>
   1c244:	b	1c2bc <PyInit__decimal@@Base+0x15808>
   1c248:	cmp	x23, #0x13
   1c24c:	b.cs	1c258 <PyInit__decimal@@Base+0x157a4>  // b.hs, b.nlast
   1c250:	mov	x24, xzr
   1c254:	b	1c348 <PyInit__decimal@@Base+0x15894>
   1c258:	add	x8, x20, x25, lsl #3
   1c25c:	ldur	x8, [x8, #-8]
   1c260:	mov	x9, #0x490f                	// #18703
   1c264:	movk	x9, #0x7747, lsl #16
   1c268:	movk	x9, #0x49c9, lsl #32
   1c26c:	mov	x10, #0x589c0000            	// #1486618624
   1c270:	lsr	x11, x8, #18
   1c274:	movk	x10, #0x494c, lsl #32
   1c278:	umulh	x9, x11, x9
   1c27c:	movk	x10, #0xf21f, lsl #48
   1c280:	lsr	x9, x9, #24
   1c284:	madd	x24, x9, x10, x8
   1c288:	stp	x24, x9, [sp]
   1c28c:	cbnz	x24, 1c348 <PyInit__decimal@@Base+0x15894>
   1c290:	sub	x8, x20, #0x10
   1c294:	mov	w24, #0x1                   	// #1
   1c298:	mov	x9, x25
   1c29c:	sub	x10, x9, #0x1
   1c2a0:	cmp	x10, #0x1
   1c2a4:	b.lt	1c340 <PyInit__decimal@@Base+0x1588c>  // b.tstop
   1c2a8:	ldr	x11, [x8, x9, lsl #3]
   1c2ac:	mov	x9, x10
   1c2b0:	cbz	x11, 1c29c <PyInit__decimal@@Base+0x157e8>
   1c2b4:	b	1c344 <PyInit__decimal@@Base+0x15890>
   1c2b8:	mov	x24, xzr
   1c2bc:	str	x24, [sp]
   1c2c0:	ldr	x23, [sp, #16]
   1c2c4:	add	x8, x25, #0x1
   1c2c8:	cmp	x8, x21
   1c2cc:	b.cs	1c330 <PyInit__decimal@@Base+0x1587c>  // b.hs, b.nlast
   1c2d0:	mov	w9, #0x13                  	// #19
   1c2d4:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c2d8:	sub	x9, x9, x22
   1c2dc:	add	x10, x10, #0x370
   1c2e0:	ldr	x26, [x10, x9, lsl #3]
   1c2e4:	mvn	x9, x25
   1c2e8:	add	x21, x9, x21
   1c2ec:	add	x20, x20, x8, lsl #3
   1c2f0:	mov	x25, x21
   1c2f4:	mov	x27, x19
   1c2f8:	ldr	x2, [x20], #8
   1c2fc:	sub	x0, x29, #0x8
   1c300:	add	x1, x29, #0x18
   1c304:	mov	x3, x22
   1c308:	bl	1be04 <PyInit__decimal@@Base+0x15350>
   1c30c:	ldr	x8, [x29, #24]
   1c310:	subs	x25, x25, #0x1
   1c314:	madd	x8, x8, x26, x23
   1c318:	str	x8, [x27], #8
   1c31c:	ldur	x23, [x29, #-8]
   1c320:	b.ne	1c2f8 <PyInit__decimal@@Base+0x15844>  // b.any
   1c324:	str	x23, [sp, #16]
   1c328:	cbnz	x23, 1c338 <PyInit__decimal@@Base+0x15884>
   1c32c:	b	1c394 <PyInit__decimal@@Base+0x158e0>
   1c330:	mov	x21, xzr
   1c334:	cbz	x23, 1c394 <PyInit__decimal@@Base+0x158e0>
   1c338:	str	x23, [x19, x21, lsl #3]
   1c33c:	b	1c394 <PyInit__decimal@@Base+0x158e0>
   1c340:	mov	x24, xzr
   1c344:	str	x24, [sp]
   1c348:	subs	x8, x21, x25
   1c34c:	b.eq	1c394 <PyInit__decimal@@Base+0x158e0>  // b.none
   1c350:	cmp	x8, #0x4
   1c354:	b.cc	1c374 <PyInit__decimal@@Base+0x158c0>  // b.lo, b.ul, b.last
   1c358:	add	x9, x20, x21, lsl #3
   1c35c:	cmp	x9, x19
   1c360:	add	x10, x20, x25, lsl #3
   1c364:	b.ls	1c3cc <PyInit__decimal@@Base+0x15918>  // b.plast
   1c368:	add	x9, x19, x8, lsl #3
   1c36c:	cmp	x10, x9
   1c370:	b.cs	1c3cc <PyInit__decimal@@Base+0x15918>  // b.hs, b.nlast
   1c374:	mov	x9, xzr
   1c378:	add	x10, x20, x25, lsl #3
   1c37c:	lsl	x11, x9, #3
   1c380:	ldr	x12, [x10, x11]
   1c384:	add	x9, x9, #0x1
   1c388:	cmp	x9, x8
   1c38c:	str	x12, [x19, x11]
   1c390:	b.cc	1c37c <PyInit__decimal@@Base+0x158c8>  // b.lo, b.ul, b.last
   1c394:	ldr	x0, [sp, #8]
   1c398:	cmp	x0, #0x5
   1c39c:	b.eq	1c3a4 <PyInit__decimal@@Base+0x158f0>  // b.none
   1c3a0:	cbnz	x0, 1c3ac <PyInit__decimal@@Base+0x158f8>
   1c3a4:	cmp	x24, #0x0
   1c3a8:	cinc	x0, x0, ne  // ne = any
   1c3ac:	ldp	x20, x19, [sp, #112]
   1c3b0:	ldp	x22, x21, [sp, #96]
   1c3b4:	ldp	x24, x23, [sp, #80]
   1c3b8:	ldp	x26, x25, [sp, #64]
   1c3bc:	ldr	x27, [sp, #48]
   1c3c0:	ldp	x29, x30, [sp, #32]
   1c3c4:	add	sp, sp, #0x80
   1c3c8:	ret
   1c3cc:	and	x9, x8, #0xfffffffffffffffc
   1c3d0:	add	x10, x10, #0x10
   1c3d4:	add	x11, x19, #0x10
   1c3d8:	mov	x12, x9
   1c3dc:	ldp	q0, q1, [x10, #-16]
   1c3e0:	add	x10, x10, #0x20
   1c3e4:	subs	x12, x12, #0x4
   1c3e8:	stp	q0, q1, [x11, #-16]
   1c3ec:	add	x11, x11, #0x20
   1c3f0:	b.ne	1c3dc <PyInit__decimal@@Base+0x15928>  // b.any
   1c3f4:	cmp	x8, x9
   1c3f8:	b.eq	1c394 <PyInit__decimal@@Base+0x158e0>  // b.none
   1c3fc:	b	1c378 <PyInit__decimal@@Base+0x158c4>
   1c400:	ldr	x9, [x0]
   1c404:	mov	x8, x0
   1c408:	adds	x9, x9, x2
   1c40c:	cset	w10, cs  // cs = hs, nlast
   1c410:	cmp	x9, x3
   1c414:	cset	w11, cs  // cs = hs, nlast
   1c418:	orr	w0, w10, w11
   1c41c:	cmp	w0, #0x0
   1c420:	csel	x10, x3, xzr, ne  // ne = any
   1c424:	sub	x9, x9, x10
   1c428:	str	x9, [x8]
   1c42c:	cbz	w0, 1c468 <PyInit__decimal@@Base+0x159b4>
   1c430:	cmp	x1, #0x2
   1c434:	b.cc	1c468 <PyInit__decimal@@Base+0x159b4>  // b.lo, b.ul, b.last
   1c438:	mov	w9, #0x1                   	// #1
   1c43c:	lsl	x10, x9, #3
   1c440:	ldr	x11, [x8, x10]
   1c444:	add	x11, x11, x0
   1c448:	cmp	x11, x3
   1c44c:	cset	w0, eq  // eq = none
   1c450:	csel	x11, xzr, x11, eq  // eq = none
   1c454:	str	x11, [x8, x10]
   1c458:	b.ne	1c468 <PyInit__decimal@@Base+0x159b4>  // b.any
   1c45c:	add	x9, x9, #0x1
   1c460:	cmp	x9, x1
   1c464:	b.cc	1c43c <PyInit__decimal@@Base+0x15988>  // b.lo, b.ul, b.last
   1c468:	ret
   1c46c:	mov	x8, xzr
   1c470:	cbz	x2, 1c504 <PyInit__decimal@@Base+0x15a50>
   1c474:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c478:	ldr	x9, [x9, #1040]
   1c47c:	mov	x10, #0x89e80000            	// #2313682944
   1c480:	mov	x11, #0x76180000            	// #1981284352
   1c484:	movk	x10, #0x2304, lsl #32
   1c488:	movk	x11, #0xdcfb, lsl #32
   1c48c:	movk	x10, #0x8ac7, lsl #48
   1c490:	movk	x11, #0x7538, lsl #48
   1c494:	ldr	x12, [x1], #8
   1c498:	umulh	x13, x12, x3
   1c49c:	mul	x12, x12, x3
   1c4a0:	adds	x8, x8, x12
   1c4a4:	cinc	x12, x13, cs  // cs = hs, nlast
   1c4a8:	asr	x13, x8, #63
   1c4ac:	and	x14, x13, x10
   1c4b0:	sub	x13, x12, x13
   1c4b4:	add	x14, x14, x8
   1c4b8:	umulh	x15, x13, x9
   1c4bc:	mul	x13, x13, x9
   1c4c0:	mvn	x14, x14
   1c4c4:	add	x15, x12, x15
   1c4c8:	cmp	x14, x13
   1c4cc:	cinc	x13, x15, cc  // cc = lo, ul, last
   1c4d0:	mvn	x13, x13
   1c4d4:	umulh	x14, x13, x10
   1c4d8:	mul	x15, x13, x10
   1c4dc:	adds	x15, x8, x15
   1c4e0:	add	x8, x12, x14
   1c4e4:	cinc	x8, x8, cs  // cs = hs, nlast
   1c4e8:	add	x12, x8, x11
   1c4ec:	sub	x8, x12, x13
   1c4f0:	and	x12, x12, x10
   1c4f4:	add	x12, x12, x15
   1c4f8:	subs	x2, x2, #0x1
   1c4fc:	str	x12, [x0], #8
   1c500:	b.ne	1c494 <PyInit__decimal@@Base+0x159e0>  // b.any
   1c504:	mov	x0, x8
   1c508:	ret
   1c50c:	cbz	x2, 1c584 <PyInit__decimal@@Base+0x15ad0>
   1c510:	stp	x29, x30, [sp, #-64]!
   1c514:	stp	x24, x23, [sp, #16]
   1c518:	stp	x22, x21, [sp, #32]
   1c51c:	stp	x20, x19, [sp, #48]
   1c520:	mov	x29, sp
   1c524:	mov	x19, x4
   1c528:	mov	x20, x3
   1c52c:	mov	x21, x2
   1c530:	mov	x22, x1
   1c534:	mov	x23, x0
   1c538:	mov	x0, xzr
   1c53c:	ldr	x8, [x22], #8
   1c540:	mov	x2, x19
   1c544:	mov	x3, xzr
   1c548:	umulh	x9, x8, x20
   1c54c:	mul	x8, x8, x20
   1c550:	adds	x24, x0, x8
   1c554:	cinc	x1, x9, cs  // cs = hs, nlast
   1c558:	mov	x0, x24
   1c55c:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   1c560:	msub	x8, x0, x19, x24
   1c564:	subs	x21, x21, #0x1
   1c568:	str	x8, [x23], #8
   1c56c:	b.ne	1c53c <PyInit__decimal@@Base+0x15a88>  // b.any
   1c570:	ldp	x20, x19, [sp, #48]
   1c574:	ldp	x22, x21, [sp, #32]
   1c578:	ldp	x24, x23, [sp, #16]
   1c57c:	ldp	x29, x30, [sp], #64
   1c580:	ret
   1c584:	mov	x0, xzr
   1c588:	ret
   1c58c:	stp	x29, x30, [sp, #-80]!
   1c590:	str	x25, [sp, #16]
   1c594:	stp	x24, x23, [sp, #32]
   1c598:	stp	x22, x21, [sp, #48]
   1c59c:	stp	x20, x19, [sp, #64]
   1c5a0:	mov	x29, sp
   1c5a4:	cbz	x2, 1c600 <PyInit__decimal@@Base+0x15b4c>
   1c5a8:	mov	x8, x0
   1c5ac:	mov	x19, x4
   1c5b0:	mov	x20, x3
   1c5b4:	mov	x0, xzr
   1c5b8:	sub	x22, x8, #0x8
   1c5bc:	sub	x23, x1, #0x8
   1c5c0:	lsl	x24, x2, #3
   1c5c4:	ldr	x8, [x23, x24]
   1c5c8:	mul	x10, x0, x19
   1c5cc:	umulh	x9, x0, x19
   1c5d0:	sub	x25, x2, #0x1
   1c5d4:	adds	x21, x8, x10
   1c5d8:	cinc	x1, x9, cs  // cs = hs, nlast
   1c5dc:	mov	x0, x21
   1c5e0:	mov	x2, x20
   1c5e4:	mov	x3, xzr
   1c5e8:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   1c5ec:	str	x0, [x22, x24]
   1c5f0:	msub	x0, x0, x20, x21
   1c5f4:	mov	x2, x25
   1c5f8:	cbnz	x25, 1c5c0 <PyInit__decimal@@Base+0x15b0c>
   1c5fc:	b	1c604 <PyInit__decimal@@Base+0x15b50>
   1c600:	mov	x0, xzr
   1c604:	ldp	x20, x19, [sp, #64]
   1c608:	ldp	x22, x21, [sp, #48]
   1c60c:	ldp	x24, x23, [sp, #32]
   1c610:	ldr	x25, [sp, #16]
   1c614:	ldp	x29, x30, [sp], #80
   1c618:	ret
   1c61c:	mov	w0, #0x8                   	// #8
   1c620:	b	6450 <raise@plt>
   1c624:	stp	x29, x30, [sp, #-32]!
   1c628:	str	x19, [sp, #16]
   1c62c:	mov	x29, sp
   1c630:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1c634:	ldrb	w9, [x8, #1584]
   1c638:	cmp	w9, #0x1
   1c63c:	b.eq	1c668 <PyInit__decimal@@Base+0x15bb4>  // b.none
   1c640:	sub	x9, x0, #0x2
   1c644:	cmp	x9, #0x3f
   1c648:	b.cs	1c6b8 <PyInit__decimal@@Base+0x15c04>  // b.hs, b.nlast
   1c64c:	ldr	x19, [sp, #16]
   1c650:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   1c654:	mov	w10, #0x1                   	// #1
   1c658:	str	x0, [x9, #1344]
   1c65c:	strb	w10, [x8, #1584]
   1c660:	ldp	x29, x30, [sp], #32
   1c664:	ret
   1c668:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
   1c66c:	ldr	x19, [x19, #3904]
   1c670:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c674:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c678:	add	x1, x1, #0x4f8
   1c67c:	ldr	x0, [x19]
   1c680:	add	x2, x2, #0x509
   1c684:	mov	w3, #0x37                  	// #55
   1c688:	bl	69b0 <fprintf@plt>
   1c68c:	ldr	x3, [x19]
   1c690:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c694:	add	x0, x0, #0x543
   1c698:	mov	w1, #0x44                  	// #68
   1c69c:	mov	w2, #0x1                   	// #1
   1c6a0:	bl	6870 <fwrite@plt>
   1c6a4:	ldr	x1, [x19]
   1c6a8:	ldr	x19, [sp, #16]
   1c6ac:	mov	w0, #0xa                   	// #10
   1c6b0:	ldp	x29, x30, [sp], #32
   1c6b4:	b	64f0 <fputc@plt>
   1c6b8:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
   1c6bc:	ldr	x19, [x19, #3904]
   1c6c0:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c6c4:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c6c8:	add	x1, x1, #0xaa
   1c6cc:	ldr	x0, [x19]
   1c6d0:	add	x2, x2, #0x509
   1c6d4:	mov	w3, #0x3b                  	// #59
   1c6d8:	bl	69b0 <fprintf@plt>
   1c6dc:	ldr	x3, [x19]
   1c6e0:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c6e4:	add	x0, x0, #0x588
   1c6e8:	mov	w1, #0x1e                  	// #30
   1c6ec:	mov	w2, #0x1                   	// #1
   1c6f0:	bl	6870 <fwrite@plt>
   1c6f4:	ldr	x1, [x19]
   1c6f8:	mov	w0, #0xa                   	// #10
   1c6fc:	bl	64f0 <fputc@plt>
   1c700:	bl	6700 <abort@plt>
   1c704:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c708:	ldr	q0, [x8, #1200]
   1c70c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c710:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c714:	ldr	d1, [x8, #1232]
   1c718:	str	q0, [x0]
   1c71c:	ldr	d0, [x9, #1240]
   1c720:	mov	x8, #0x1                   	// #1
   1c724:	movk	x8, #0x589c, lsl #16
   1c728:	movk	x8, #0x494c, lsl #32
   1c72c:	movk	x8, #0xf21f, lsl #48
   1c730:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c734:	stp	d1, d0, [x0, #24]
   1c738:	ldr	d0, [x9, #1248]
   1c73c:	str	x8, [x0, #16]
   1c740:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1c744:	movk	x8, #0xb6b3, lsl #32
   1c748:	sub	x9, x1, #0x1
   1c74c:	movk	x8, #0xde0, lsl #48
   1c750:	cmp	x9, x8
   1c754:	str	d0, [x0, #40]
   1c758:	b.cc	1c770 <PyInit__decimal@@Base+0x15cbc>  // b.lo, b.ul, b.last
   1c75c:	movi	v0.2s, #0x80
   1c760:	stur	d0, [x0, #28]
   1c764:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1c768:	ldr	x1, [x8, #1336]
   1c76c:	br	x1
   1c770:	mov	x9, #0x9436                	// #37942
   1c774:	movk	x9, #0x50d7, lsl #16
   1c778:	movk	x9, #0x435e, lsl #32
   1c77c:	add	x8, x1, #0x12
   1c780:	movk	x9, #0xd79, lsl #48
   1c784:	smulh	x8, x8, x9
   1c788:	add	x8, x8, x8, lsr #63
   1c78c:	lsl	x8, x8, #1
   1c790:	mov	w10, #0x2                   	// #2
   1c794:	cmp	x8, #0x2
   1c798:	csel	x8, x8, x10, gt
   1c79c:	cmp	x8, #0x40
   1c7a0:	mov	w9, #0x40                  	// #64
   1c7a4:	csel	x8, x8, x9, lt  // lt = tstop
   1c7a8:	str	x1, [x0]
   1c7ac:	mov	x0, x8
   1c7b0:	b	1c624 <PyInit__decimal@@Base+0x15b70>
   1c7b4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c7b8:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c7bc:	adrp	x11, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c7c0:	adrp	x12, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c7c4:	mov	x9, #0x1                   	// #1
   1c7c8:	ldr	q0, [x8, #1200]
   1c7cc:	ldr	d1, [x10, #1232]
   1c7d0:	ldr	d2, [x11, #1240]
   1c7d4:	ldr	d3, [x12, #1248]
   1c7d8:	movk	x9, #0x589c, lsl #16
   1c7dc:	movk	x9, #0x494c, lsl #32
   1c7e0:	movk	x9, #0xf21f, lsl #48
   1c7e4:	str	x9, [x0, #16]
   1c7e8:	str	q0, [x0]
   1c7ec:	stp	d1, d2, [x0, #24]
   1c7f0:	str	d3, [x0, #40]
   1c7f4:	ret
   1c7f8:	mov	x9, #0xfffe                	// #65534
   1c7fc:	movk	x9, #0xa763, lsl #16
   1c800:	movk	x9, #0xb6b3, lsl #32
   1c804:	sub	x8, x1, #0x1
   1c808:	movk	x9, #0xde0, lsl #48
   1c80c:	cmp	x8, x9
   1c810:	b.ls	1c81c <PyInit__decimal@@Base+0x15d68>  // b.plast
   1c814:	mov	w0, wzr
   1c818:	ret
   1c81c:	str	x1, [x0]
   1c820:	mov	w0, #0x1                   	// #1
   1c824:	ret
   1c828:	ldp	w9, w8, [x0, #24]
   1c82c:	orr	w10, w8, w1
   1c830:	ands	w8, w9, w1
   1c834:	str	w10, [x0, #28]
   1c838:	b.eq	1c84c <PyInit__decimal@@Base+0x15d98>  // b.none
   1c83c:	str	w8, [x0, #32]
   1c840:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1c844:	ldr	x1, [x8, #1336]
   1c848:	br	x1
   1c84c:	ret
   1c850:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c854:	adrp	x11, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c858:	adrp	x12, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c85c:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1c860:	mov	x9, #0x1                   	// #1
   1c864:	ldr	d1, [x10, #1232]
   1c868:	ldr	d2, [x11, #1256]
   1c86c:	ldr	d3, [x12, #1248]
   1c870:	movk	x8, #0xb6b3, lsl #32
   1c874:	movk	x9, #0x589c, lsl #16
   1c878:	movk	x8, #0xde0, lsl #48
   1c87c:	movk	x9, #0x494c, lsl #32
   1c880:	movk	x9, #0xf21f, lsl #48
   1c884:	dup	v0.2d, x8
   1c888:	str	x9, [x0, #16]
   1c88c:	str	q0, [x0]
   1c890:	stp	d1, d2, [x0, #24]
   1c894:	str	d3, [x0, #40]
   1c898:	ret
   1c89c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c8a0:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c8a4:	adrp	x11, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c8a8:	adrp	x12, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c8ac:	mov	x9, #0x1                   	// #1
   1c8b0:	ldr	q0, [x8, #1216]
   1c8b4:	ldr	d1, [x10, #1264]
   1c8b8:	ldr	d2, [x11, #1240]
   1c8bc:	ldr	d3, [x12, #1248]
   1c8c0:	movk	x9, #0x589c, lsl #16
   1c8c4:	movk	x9, #0x494c, lsl #32
   1c8c8:	movk	x9, #0xf21f, lsl #48
   1c8cc:	str	x9, [x0, #16]
   1c8d0:	str	q0, [x0]
   1c8d4:	stp	d1, d2, [x0, #24]
   1c8d8:	str	d3, [x0, #40]
   1c8dc:	ret
   1c8e0:	sub	w9, w1, #0x1
   1c8e4:	mov	x8, x0
   1c8e8:	cmp	w9, #0x1ff
   1c8ec:	mov	w0, #0xffffffff            	// #-1
   1c8f0:	b.hi	1c940 <PyInit__decimal@@Base+0x15e8c>  // b.pmore
   1c8f4:	and	w9, w1, #0x1f
   1c8f8:	cbnz	w9, 1c940 <PyInit__decimal@@Base+0x15e8c>
   1c8fc:	adrp	x11, 3f000 <PyInit__decimal@@Base+0x3854c>
   1c900:	lsr	w9, w1, #5
   1c904:	lsr	w10, w1, #4
   1c908:	ldr	d0, [x11, #1256]
   1c90c:	mov	w11, #0x3                   	// #3
   1c910:	add	w10, w10, #0x3
   1c914:	add	w9, w9, w9, lsl #3
   1c918:	lsl	x10, x11, x10
   1c91c:	mov	w11, #0x1                   	// #1
   1c920:	sub	w9, w9, #0x2
   1c924:	mov	w0, wzr
   1c928:	sxtw	x9, w9
   1c92c:	sub	x11, x11, x10
   1c930:	movi	v1.2s, #0x1
   1c934:	stp	x9, x10, [x8]
   1c938:	stp	x11, xzr, [x8, #16]
   1c93c:	stp	d0, d1, [x8, #32]
   1c940:	ret
   1c944:	ldr	x0, [x0]
   1c948:	ret
   1c94c:	ldr	x0, [x0, #8]
   1c950:	ret
   1c954:	ldr	x0, [x0, #16]
   1c958:	ret
   1c95c:	ldr	w0, [x0, #36]
   1c960:	ret
   1c964:	ldr	w0, [x0, #24]
   1c968:	ret
   1c96c:	ldr	w0, [x0, #28]
   1c970:	ret
   1c974:	ldr	w0, [x0, #40]
   1c978:	ret
   1c97c:	ldr	w0, [x0, #44]
   1c980:	ret
   1c984:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1c988:	movk	x8, #0xb6b3, lsl #32
   1c98c:	movk	x8, #0xde0, lsl #48
   1c990:	cmp	x1, x8
   1c994:	b.ls	1c9a0 <PyInit__decimal@@Base+0x15eec>  // b.plast
   1c998:	mov	w0, wzr
   1c99c:	ret
   1c9a0:	str	x1, [x0, #8]
   1c9a4:	mov	w0, #0x1                   	// #1
   1c9a8:	ret
   1c9ac:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1c9b0:	movk	x8, #0xb6b3, lsl #32
   1c9b4:	movk	x8, #0xde0, lsl #48
   1c9b8:	add	x9, x1, x8
   1c9bc:	cmp	x9, x8
   1c9c0:	b.ls	1c9cc <PyInit__decimal@@Base+0x15f18>  // b.plast
   1c9c4:	mov	w0, wzr
   1c9c8:	ret
   1c9cc:	str	x1, [x0, #16]
   1c9d0:	mov	w0, #0x1                   	// #1
   1c9d4:	ret
   1c9d8:	cmp	w1, #0x8
   1c9dc:	b.hi	1c9ec <PyInit__decimal@@Base+0x15f38>  // b.pmore
   1c9e0:	str	w1, [x0, #36]
   1c9e4:	mov	w0, #0x1                   	// #1
   1c9e8:	ret
   1c9ec:	mov	w0, wzr
   1c9f0:	ret
   1c9f4:	lsr	w8, w1, #15
   1c9f8:	cbz	w8, 1ca04 <PyInit__decimal@@Base+0x15f50>
   1c9fc:	mov	w0, wzr
   1ca00:	ret
   1ca04:	str	w1, [x0, #24]
   1ca08:	mov	w0, #0x1                   	// #1
   1ca0c:	ret
   1ca10:	lsr	w8, w1, #15
   1ca14:	cbz	w8, 1ca20 <PyInit__decimal@@Base+0x15f6c>
   1ca18:	mov	w0, wzr
   1ca1c:	ret
   1ca20:	str	w1, [x0, #28]
   1ca24:	mov	w0, #0x1                   	// #1
   1ca28:	ret
   1ca2c:	cmp	w1, #0x1
   1ca30:	b.ls	1ca3c <PyInit__decimal@@Base+0x15f88>  // b.plast
   1ca34:	mov	w0, wzr
   1ca38:	ret
   1ca3c:	str	w1, [x0, #40]
   1ca40:	mov	w0, #0x1                   	// #1
   1ca44:	ret
   1ca48:	cmp	w1, #0x1
   1ca4c:	b.ls	1ca58 <PyInit__decimal@@Base+0x15fa4>  // b.plast
   1ca50:	mov	w0, wzr
   1ca54:	ret
   1ca58:	str	w1, [x0, #44]
   1ca5c:	mov	w0, #0x1                   	// #1
   1ca60:	ret
   1ca64:	sub	sp, sp, #0x80
   1ca68:	stp	x29, x30, [sp, #32]
   1ca6c:	stp	x28, x27, [sp, #48]
   1ca70:	stp	x26, x25, [sp, #64]
   1ca74:	stp	x24, x23, [sp, #80]
   1ca78:	stp	x22, x21, [sp, #96]
   1ca7c:	stp	x20, x19, [sp, #112]
   1ca80:	add	x29, sp, #0x20
   1ca84:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1ca88:	add	x8, x8, #0x120
   1ca8c:	ldr	x19, [x8, w3, sxtw #3]
   1ca90:	mov	w27, w3
   1ca94:	mov	x22, x2
   1ca98:	mov	x24, x1
   1ca9c:	subs	x26, x19, #0x2
   1caa0:	mov	x20, x0
   1caa4:	mov	w21, #0x1                   	// #1
   1caa8:	b.eq	1caec <PyInit__decimal@@Base+0x16038>  // b.none
   1caac:	mov	x25, x22
   1cab0:	b	1cad0 <PyInit__decimal@@Base+0x1601c>
   1cab4:	mov	x0, x25
   1cab8:	mov	x1, x25
   1cabc:	mov	x2, x19
   1cac0:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cac4:	lsr	x26, x26, #1
   1cac8:	mov	x25, x0
   1cacc:	cbz	x26, 1caec <PyInit__decimal@@Base+0x16038>
   1cad0:	tbz	w26, #0, 1cab4 <PyInit__decimal@@Base+0x16000>
   1cad4:	mov	x0, x21
   1cad8:	mov	x1, x25
   1cadc:	mov	x2, x19
   1cae0:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cae4:	mov	x21, x0
   1cae8:	b	1cab4 <PyInit__decimal@@Base+0x16000>
   1caec:	fmov	d0, x22
   1caf0:	cnt	v0.8b, v0.8b
   1caf4:	adrp	x10, 1d000 <PyInit__decimal@@Base+0x1654c>
   1caf8:	adrp	x11, 37000 <PyInit__decimal@@Base+0x3054c>
   1cafc:	adrp	x8, 1d000 <PyInit__decimal@@Base+0x1654c>
   1cb00:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3054c>
   1cb04:	cmp	x22, #0x1, lsl #12
   1cb08:	add	x10, x10, #0x6bc
   1cb0c:	add	x11, x11, #0x9bc
   1cb10:	uaddlv	h0, v0.8b
   1cb14:	add	x8, x8, #0x71c
   1cb18:	add	x9, x9, #0xda0
   1cb1c:	csel	x10, x11, x10, hi  // hi = pmore
   1cb20:	fmov	w11, s0
   1cb24:	csel	x8, x9, x8, hi  // hi = pmore
   1cb28:	cmp	x11, #0x1
   1cb2c:	adrp	x11, 1d000 <PyInit__decimal@@Base+0x1654c>
   1cb30:	adrp	x9, 1d000 <PyInit__decimal@@Base+0x1654c>
   1cb34:	add	x11, x11, #0x77c
   1cb38:	add	x9, x9, #0xba0
   1cb3c:	csel	x23, x11, x10, ne  // ne = any
   1cb40:	mov	x0, x20
   1cb44:	mov	x1, x22
   1cb48:	mov	w2, w27
   1cb4c:	csel	x25, x9, x8, ne  // ne = any
   1cb50:	blr	x23
   1cb54:	cbz	w0, 1cc58 <PyInit__decimal@@Base+0x161a4>
   1cb58:	mov	x0, x24
   1cb5c:	mov	x1, x22
   1cb60:	mov	w2, w27
   1cb64:	blr	x23
   1cb68:	cbz	w0, 1cc58 <PyInit__decimal@@Base+0x161a4>
   1cb6c:	subs	x28, x22, #0x1
   1cb70:	str	x25, [sp, #8]
   1cb74:	stur	w27, [x29, #-12]
   1cb78:	stur	x22, [x29, #-8]
   1cb7c:	b.eq	1cbc4 <PyInit__decimal@@Base+0x16110>  // b.none
   1cb80:	mov	x23, xzr
   1cb84:	lsl	x8, x23, #3
   1cb88:	add	x22, x20, x8
   1cb8c:	add	x8, x24, x8
   1cb90:	ldp	x0, x25, [x22]
   1cb94:	ldp	x1, x26, [x8]
   1cb98:	mov	x2, x19
   1cb9c:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cba0:	mov	x27, x0
   1cba4:	mov	x0, x25
   1cba8:	mov	x1, x26
   1cbac:	mov	x2, x19
   1cbb0:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cbb4:	add	x23, x23, #0x2
   1cbb8:	cmp	x23, x28
   1cbbc:	stp	x27, x0, [x22]
   1cbc0:	b.cc	1cb84 <PyInit__decimal@@Base+0x160d0>  // b.lo, b.ul, b.last
   1cbc4:	ldur	x22, [x29, #-8]
   1cbc8:	ldur	w2, [x29, #-12]
   1cbcc:	ldr	x8, [sp, #8]
   1cbd0:	mov	x0, x20
   1cbd4:	mov	x1, x22
   1cbd8:	blr	x8
   1cbdc:	cbz	w0, 1cc58 <PyInit__decimal@@Base+0x161a4>
   1cbe0:	subs	x26, x22, #0x3
   1cbe4:	b.eq	1cc54 <PyInit__decimal@@Base+0x161a0>  // b.none
   1cbe8:	mov	x27, xzr
   1cbec:	add	x28, x20, x27, lsl #3
   1cbf0:	ldp	x0, x22, [x28]
   1cbf4:	ldp	x23, x24, [x28, #16]
   1cbf8:	mov	x1, x21
   1cbfc:	mov	x2, x19
   1cc00:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cc04:	mov	x25, x0
   1cc08:	mov	x0, x22
   1cc0c:	mov	x1, x21
   1cc10:	mov	x2, x19
   1cc14:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cc18:	mov	x22, x0
   1cc1c:	mov	x0, x23
   1cc20:	mov	x1, x21
   1cc24:	mov	x2, x19
   1cc28:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cc2c:	mov	x23, x0
   1cc30:	mov	x0, x24
   1cc34:	mov	x1, x21
   1cc38:	mov	x2, x19
   1cc3c:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cc40:	add	x27, x27, #0x4
   1cc44:	cmp	x27, x26
   1cc48:	stp	x25, x22, [x28]
   1cc4c:	stp	x23, x0, [x28, #16]
   1cc50:	b.cc	1cbec <PyInit__decimal@@Base+0x16138>  // b.lo, b.ul, b.last
   1cc54:	mov	w0, #0x1                   	// #1
   1cc58:	ldp	x20, x19, [sp, #112]
   1cc5c:	ldp	x22, x21, [sp, #96]
   1cc60:	ldp	x24, x23, [sp, #80]
   1cc64:	ldp	x26, x25, [sp, #64]
   1cc68:	ldp	x28, x27, [sp, #48]
   1cc6c:	ldp	x29, x30, [sp, #32]
   1cc70:	add	sp, sp, #0x80
   1cc74:	ret
   1cc78:	sub	sp, sp, #0x70
   1cc7c:	stp	x29, x30, [sp, #16]
   1cc80:	stp	x28, x27, [sp, #32]
   1cc84:	stp	x26, x25, [sp, #48]
   1cc88:	stp	x24, x23, [sp, #64]
   1cc8c:	stp	x22, x21, [sp, #80]
   1cc90:	stp	x20, x19, [sp, #96]
   1cc94:	add	x29, sp, #0x10
   1cc98:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1cc9c:	add	x8, x8, #0x120
   1cca0:	ldr	x19, [x8, w2, sxtw #3]
   1cca4:	mov	w23, w2
   1cca8:	mov	x22, x1
   1ccac:	mov	x20, x0
   1ccb0:	subs	x25, x19, #0x2
   1ccb4:	mov	w21, #0x1                   	// #1
   1ccb8:	b.eq	1ccfc <PyInit__decimal@@Base+0x16248>  // b.none
   1ccbc:	mov	x24, x22
   1ccc0:	b	1cce0 <PyInit__decimal@@Base+0x1622c>
   1ccc4:	mov	x0, x24
   1ccc8:	mov	x1, x24
   1cccc:	mov	x2, x19
   1ccd0:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1ccd4:	lsr	x25, x25, #1
   1ccd8:	mov	x24, x0
   1ccdc:	cbz	x25, 1ccfc <PyInit__decimal@@Base+0x16248>
   1cce0:	tbz	w25, #0, 1ccc4 <PyInit__decimal@@Base+0x16210>
   1cce4:	mov	x0, x21
   1cce8:	mov	x1, x24
   1ccec:	mov	x2, x19
   1ccf0:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1ccf4:	mov	x21, x0
   1ccf8:	b	1ccc4 <PyInit__decimal@@Base+0x16210>
   1ccfc:	fmov	d0, x22
   1cd00:	cnt	v0.8b, v0.8b
   1cd04:	adrp	x8, 1d000 <PyInit__decimal@@Base+0x1654c>
   1cd08:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3054c>
   1cd0c:	adrp	x10, 1d000 <PyInit__decimal@@Base+0x1654c>
   1cd10:	adrp	x11, 37000 <PyInit__decimal@@Base+0x3054c>
   1cd14:	add	x8, x8, #0x6bc
   1cd18:	add	x9, x9, #0x9bc
   1cd1c:	cmp	x22, #0x1, lsl #12
   1cd20:	add	x10, x10, #0x71c
   1cd24:	add	x11, x11, #0xda0
   1cd28:	uaddlv	h0, v0.8b
   1cd2c:	csel	x8, x9, x8, hi  // hi = pmore
   1cd30:	adrp	x9, 1d000 <PyInit__decimal@@Base+0x1654c>
   1cd34:	csel	x10, x11, x10, hi  // hi = pmore
   1cd38:	fmov	w11, s0
   1cd3c:	add	x9, x9, #0x77c
   1cd40:	cmp	x11, #0x1
   1cd44:	adrp	x11, 1d000 <PyInit__decimal@@Base+0x1654c>
   1cd48:	add	x11, x11, #0xba0
   1cd4c:	csel	x8, x9, x8, ne  // ne = any
   1cd50:	mov	x0, x20
   1cd54:	mov	x1, x22
   1cd58:	mov	w2, w23
   1cd5c:	csel	x24, x11, x10, ne  // ne = any
   1cd60:	blr	x8
   1cd64:	cbz	w0, 1ce40 <PyInit__decimal@@Base+0x1638c>
   1cd68:	subs	x27, x22, #0x1
   1cd6c:	str	x24, [sp, #8]
   1cd70:	b.eq	1cdb0 <PyInit__decimal@@Base+0x162fc>  // b.none
   1cd74:	mov	x28, xzr
   1cd78:	add	x26, x20, x28, lsl #3
   1cd7c:	ldp	x0, x24, [x26]
   1cd80:	mov	x2, x19
   1cd84:	mov	x1, x0
   1cd88:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cd8c:	mov	x25, x0
   1cd90:	mov	x0, x24
   1cd94:	mov	x1, x24
   1cd98:	mov	x2, x19
   1cd9c:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cda0:	add	x28, x28, #0x2
   1cda4:	cmp	x28, x27
   1cda8:	stp	x25, x0, [x26]
   1cdac:	b.cc	1cd78 <PyInit__decimal@@Base+0x162c4>  // b.lo, b.ul, b.last
   1cdb0:	ldr	x8, [sp, #8]
   1cdb4:	mov	x0, x20
   1cdb8:	mov	x1, x22
   1cdbc:	mov	w2, w23
   1cdc0:	blr	x8
   1cdc4:	cbz	w0, 1ce40 <PyInit__decimal@@Base+0x1638c>
   1cdc8:	subs	x26, x22, #0x3
   1cdcc:	b.eq	1ce3c <PyInit__decimal@@Base+0x16388>  // b.none
   1cdd0:	mov	x27, xzr
   1cdd4:	add	x28, x20, x27, lsl #3
   1cdd8:	ldp	x0, x22, [x28]
   1cddc:	ldp	x23, x24, [x28, #16]
   1cde0:	mov	x1, x21
   1cde4:	mov	x2, x19
   1cde8:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1cdec:	mov	x25, x0
   1cdf0:	mov	x0, x22
   1cdf4:	mov	x1, x21
   1cdf8:	mov	x2, x19
   1cdfc:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1ce00:	mov	x22, x0
   1ce04:	mov	x0, x23
   1ce08:	mov	x1, x21
   1ce0c:	mov	x2, x19
   1ce10:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1ce14:	mov	x23, x0
   1ce18:	mov	x0, x24
   1ce1c:	mov	x1, x21
   1ce20:	mov	x2, x19
   1ce24:	bl	1ce60 <PyInit__decimal@@Base+0x163ac>
   1ce28:	add	x27, x27, #0x4
   1ce2c:	cmp	x27, x26
   1ce30:	stp	x25, x22, [x28]
   1ce34:	stp	x23, x0, [x28, #16]
   1ce38:	b.cc	1cdd4 <PyInit__decimal@@Base+0x16320>  // b.lo, b.ul, b.last
   1ce3c:	mov	w0, #0x1                   	// #1
   1ce40:	ldp	x20, x19, [sp, #96]
   1ce44:	ldp	x22, x21, [sp, #80]
   1ce48:	ldp	x24, x23, [sp, #64]
   1ce4c:	ldp	x26, x25, [sp, #48]
   1ce50:	ldp	x28, x27, [sp, #32]
   1ce54:	ldp	x29, x30, [sp, #16]
   1ce58:	add	sp, sp, #0x70
   1ce5c:	ret
   1ce60:	umulh	x8, x1, x0
   1ce64:	mul	x9, x1, x0
   1ce68:	tbnz	x2, #32, 1ceb4 <PyInit__decimal@@Base+0x16400>
   1ce6c:	tbnz	x2, #34, 1cee0 <PyInit__decimal@@Base+0x1642c>
   1ce70:	subs	x9, x9, x8
   1ce74:	lsr	x10, x8, #24
   1ce78:	cset	w11, cc  // cc = lo, ul, last
   1ce7c:	adds	x8, x9, x8, lsl #40
   1ce80:	sub	x9, x10, x11
   1ce84:	cinc	x9, x9, cs  // cs = hs, nlast
   1ce88:	subs	x8, x8, x9
   1ce8c:	lsr	x10, x9, #24
   1ce90:	cset	w11, cc  // cc = lo, ul, last
   1ce94:	adds	x8, x8, x9, lsl #40
   1ce98:	sub	x9, x10, x11
   1ce9c:	cinc	x9, x9, cs  // cs = hs, nlast
   1cea0:	subs	x8, x8, x9
   1cea4:	lsr	x10, x9, #24
   1cea8:	cset	w11, cc  // cc = lo, ul, last
   1ceac:	adds	x8, x8, x9, lsl #40
   1ceb0:	b	1cf20 <PyInit__decimal@@Base+0x1646c>
   1ceb4:	subs	x9, x9, x8
   1ceb8:	lsr	x10, x8, #32
   1cebc:	cset	w11, cc  // cc = lo, ul, last
   1cec0:	adds	x8, x9, x8, lsl #32
   1cec4:	sub	x9, x10, x11
   1cec8:	cinc	x9, x9, cs  // cs = hs, nlast
   1cecc:	subs	x8, x8, x9
   1ced0:	lsr	x10, x9, #32
   1ced4:	cset	w11, cc  // cc = lo, ul, last
   1ced8:	adds	x8, x8, x9, lsl #32
   1cedc:	b	1cf20 <PyInit__decimal@@Base+0x1646c>
   1cee0:	subs	x9, x9, x8
   1cee4:	lsr	x10, x8, #30
   1cee8:	cset	w11, cc  // cc = lo, ul, last
   1ceec:	adds	x8, x9, x8, lsl #34
   1cef0:	sub	x9, x10, x11
   1cef4:	cinc	x9, x9, cs  // cs = hs, nlast
   1cef8:	subs	x8, x8, x9
   1cefc:	lsr	x10, x9, #30
   1cf00:	cset	w11, cc  // cc = lo, ul, last
   1cf04:	adds	x8, x8, x9, lsl #34
   1cf08:	sub	x9, x10, x11
   1cf0c:	cinc	x9, x9, cs  // cs = hs, nlast
   1cf10:	subs	x8, x8, x9
   1cf14:	lsr	x10, x9, #30
   1cf18:	cset	w11, cc  // cc = lo, ul, last
   1cf1c:	adds	x8, x8, x9, lsl #34
   1cf20:	sub	x9, x10, x11
   1cf24:	cset	w10, cs  // cs = hs, nlast
   1cf28:	sbfx	x10, x10, #0, #1
   1cf2c:	cmp	x9, x10
   1cf30:	ccmp	x8, x2, #0x2, eq  // eq = none
   1cf34:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1cf38:	sub	x0, x8, x9
   1cf3c:	ret
   1cf40:	sub	sp, sp, #0xa0
   1cf44:	stp	x29, x30, [sp, #64]
   1cf48:	stp	x28, x27, [sp, #80]
   1cf4c:	stp	x26, x25, [sp, #96]
   1cf50:	stp	x24, x23, [sp, #112]
   1cf54:	stp	x22, x21, [sp, #128]
   1cf58:	stp	x20, x19, [sp, #144]
   1cf5c:	add	x29, sp, #0x40
   1cf60:	cbz	x3, 1d11c <PyInit__decimal@@Base+0x16668>
   1cf64:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1cf68:	add	x8, x8, #0x120
   1cf6c:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1cf70:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   1cf74:	ldp	x13, x24, [x8]
   1cf78:	ldr	x9, [x9, #336]
   1cf7c:	ldr	x26, [x8, #16]
   1cf80:	ldr	x8, [x10, #344]
   1cf84:	adrp	x11, 3f000 <PyInit__decimal@@Base+0x3854c>
   1cf88:	adrp	x12, 3f000 <PyInit__decimal@@Base+0x3854c>
   1cf8c:	mov	x19, x3
   1cf90:	stp	x8, x9, [sp, #24]
   1cf94:	ldr	x8, [x11, #352]
   1cf98:	mov	x21, x1
   1cf9c:	mov	x22, x0
   1cfa0:	mov	x27, xzr
   1cfa4:	str	x8, [sp, #16]
   1cfa8:	ldr	x8, [x12, #360]
   1cfac:	mov	x23, xzr
   1cfb0:	mov	x28, xzr
   1cfb4:	stur	x13, [x29, #-24]
   1cfb8:	str	x8, [sp, #8]
   1cfbc:	ldr	x25, [x22]
   1cfc0:	ldr	x8, [x21], #8
   1cfc4:	ldr	x9, [x2], #8
   1cfc8:	ldr	x1, [sp, #32]
   1cfcc:	cmp	x8, x24
   1cfd0:	stp	x9, x2, [x29, #-16]
   1cfd4:	csel	x9, xzr, x24, cc  // cc = lo, ul, last
   1cfd8:	cmp	x25, x24
   1cfdc:	sub	x8, x8, x9
   1cfe0:	csel	x9, xzr, x24, cc  // cc = lo, ul, last
   1cfe4:	sub	x9, x25, x9
   1cfe8:	subs	x8, x8, x9
   1cfec:	csel	x9, x24, xzr, cc  // cc = lo, ul, last
   1cff0:	add	x0, x8, x9
   1cff4:	mov	x2, x24
   1cff8:	bl	1d13c <PyInit__decimal@@Base+0x16688>
   1cffc:	ldur	x9, [x29, #-24]
   1d000:	mov	x20, x27
   1d004:	mov	x2, x26
   1d008:	mov	x3, xzr
   1d00c:	umulh	x8, x0, x9
   1d010:	mul	x9, x0, x9
   1d014:	adds	x25, x25, x9
   1d018:	cinc	x27, x8, cs  // cs = hs, nlast
   1d01c:	udiv	x8, x27, x26
   1d020:	msub	x1, x8, x26, x27
   1d024:	mov	x0, x25
   1d028:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   1d02c:	ldur	x9, [x29, #-16]
   1d030:	msub	x8, x26, x0, x25
   1d034:	ldr	x1, [sp, #24]
   1d038:	mov	x2, x26
   1d03c:	subs	x8, x9, x8
   1d040:	csel	x9, x26, xzr, cc  // cc = lo, ul, last
   1d044:	add	x0, x8, x9
   1d048:	bl	1d13c <PyInit__decimal@@Base+0x16688>
   1d04c:	ldp	x11, x9, [sp, #8]
   1d050:	mov	x2, #0x89e80000            	// #2313682944
   1d054:	movk	x2, #0x2304, lsl #32
   1d058:	movk	x2, #0x8ac7, lsl #48
   1d05c:	mul	x8, x9, x0
   1d060:	umulh	x9, x9, x0
   1d064:	umulh	x10, x11, x0
   1d068:	mul	x11, x11, x0
   1d06c:	adds	x9, x11, x9
   1d070:	add	x10, x20, x10
   1d074:	cinc	x10, x10, cs  // cs = hs, nlast
   1d078:	adds	x8, x25, x8
   1d07c:	add	x9, x9, x27
   1d080:	cinc	x9, x9, cs  // cs = hs, nlast
   1d084:	adds	x25, x8, x28
   1d088:	cinc	x8, x23, cs  // cs = hs, nlast
   1d08c:	cmp	x9, x27
   1d090:	add	x28, x8, x9
   1d094:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   1d098:	cinc	x8, x10, cc  // cc = lo, ul, last
   1d09c:	cmp	x28, x23
   1d0a0:	movk	x9, #0x2304, lsl #32
   1d0a4:	mov	x20, #0x76180000            	// #1981284352
   1d0a8:	mov	x10, #0x89e80000            	// #2313682944
   1d0ac:	cinc	x8, x8, cc  // cc = lo, ul, last
   1d0b0:	movk	x9, #0x8ac7, lsl #48
   1d0b4:	movk	x20, #0xdcfb, lsl #32
   1d0b8:	movk	x10, #0x2304, lsl #32
   1d0bc:	cmp	x8, x9
   1d0c0:	movk	x20, #0x7538, lsl #48
   1d0c4:	movk	x10, #0x8ac7, lsl #48
   1d0c8:	add	x9, x8, x20
   1d0cc:	cset	w27, hi  // hi = pmore
   1d0d0:	cmp	x8, x10
   1d0d4:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1d0d8:	mov	x0, x28
   1d0dc:	mov	x3, xzr
   1d0e0:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   1d0e4:	mov	x2, #0x89e80000            	// #2313682944
   1d0e8:	movk	x2, #0x2304, lsl #32
   1d0ec:	mov	x23, x0
   1d0f0:	madd	x1, x0, x20, x28
   1d0f4:	movk	x2, #0x8ac7, lsl #48
   1d0f8:	mov	x0, x25
   1d0fc:	mov	x3, xzr
   1d100:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   1d104:	ldur	x2, [x29, #-8]
   1d108:	madd	x8, x0, x20, x25
   1d10c:	mov	x28, x0
   1d110:	subs	x19, x19, #0x1
   1d114:	str	x8, [x22], #8
   1d118:	b.ne	1cfbc <PyInit__decimal@@Base+0x16508>  // b.any
   1d11c:	ldp	x20, x19, [sp, #144]
   1d120:	ldp	x22, x21, [sp, #128]
   1d124:	ldp	x24, x23, [sp, #112]
   1d128:	ldp	x26, x25, [sp, #96]
   1d12c:	ldp	x28, x27, [sp, #80]
   1d130:	ldp	x29, x30, [sp, #64]
   1d134:	add	sp, sp, #0xa0
   1d138:	ret
   1d13c:	umulh	x8, x1, x0
   1d140:	mul	x9, x1, x0
   1d144:	tbnz	x2, #32, 1d190 <PyInit__decimal@@Base+0x166dc>
   1d148:	tbnz	x2, #34, 1d1bc <PyInit__decimal@@Base+0x16708>
   1d14c:	subs	x9, x9, x8
   1d150:	lsr	x10, x8, #24
   1d154:	cset	w11, cc  // cc = lo, ul, last
   1d158:	adds	x8, x9, x8, lsl #40
   1d15c:	sub	x9, x10, x11
   1d160:	cinc	x9, x9, cs  // cs = hs, nlast
   1d164:	subs	x8, x8, x9
   1d168:	lsr	x10, x9, #24
   1d16c:	cset	w11, cc  // cc = lo, ul, last
   1d170:	adds	x8, x8, x9, lsl #40
   1d174:	sub	x9, x10, x11
   1d178:	cinc	x9, x9, cs  // cs = hs, nlast
   1d17c:	subs	x8, x8, x9
   1d180:	lsr	x10, x9, #24
   1d184:	cset	w11, cc  // cc = lo, ul, last
   1d188:	adds	x8, x8, x9, lsl #40
   1d18c:	b	1d1fc <PyInit__decimal@@Base+0x16748>
   1d190:	subs	x9, x9, x8
   1d194:	lsr	x10, x8, #32
   1d198:	cset	w11, cc  // cc = lo, ul, last
   1d19c:	adds	x8, x9, x8, lsl #32
   1d1a0:	sub	x9, x10, x11
   1d1a4:	cinc	x9, x9, cs  // cs = hs, nlast
   1d1a8:	subs	x8, x8, x9
   1d1ac:	lsr	x10, x9, #32
   1d1b0:	cset	w11, cc  // cc = lo, ul, last
   1d1b4:	adds	x8, x8, x9, lsl #32
   1d1b8:	b	1d1fc <PyInit__decimal@@Base+0x16748>
   1d1bc:	subs	x9, x9, x8
   1d1c0:	lsr	x10, x8, #30
   1d1c4:	cset	w11, cc  // cc = lo, ul, last
   1d1c8:	adds	x8, x9, x8, lsl #34
   1d1cc:	sub	x9, x10, x11
   1d1d0:	cinc	x9, x9, cs  // cs = hs, nlast
   1d1d4:	subs	x8, x8, x9
   1d1d8:	lsr	x10, x9, #30
   1d1dc:	cset	w11, cc  // cc = lo, ul, last
   1d1e0:	adds	x8, x8, x9, lsl #34
   1d1e4:	sub	x9, x10, x11
   1d1e8:	cinc	x9, x9, cs  // cs = hs, nlast
   1d1ec:	subs	x8, x8, x9
   1d1f0:	lsr	x10, x9, #30
   1d1f4:	cset	w11, cc  // cc = lo, ul, last
   1d1f8:	adds	x8, x8, x9, lsl #34
   1d1fc:	sub	x9, x10, x11
   1d200:	cset	w10, cs  // cs = hs, nlast
   1d204:	sbfx	x10, x10, #0, #1
   1d208:	cmp	x9, x10
   1d20c:	ccmp	x8, x2, #0x2, eq  // eq = none
   1d210:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1d214:	sub	x0, x8, x9
   1d218:	ret
   1d21c:	sub	sp, sp, #0xc0
   1d220:	stp	x29, x30, [sp, #96]
   1d224:	stp	x28, x27, [sp, #112]
   1d228:	stp	x26, x25, [sp, #128]
   1d22c:	stp	x24, x23, [sp, #144]
   1d230:	stp	x22, x21, [sp, #160]
   1d234:	stp	x20, x19, [sp, #176]
   1d238:	add	x29, sp, #0x60
   1d23c:	ldrsw	x8, [x2]
   1d240:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1d244:	add	x9, x9, #0x120
   1d248:	stur	x1, [x29, #-32]
   1d24c:	ldr	x22, [x9, x8, lsl #3]
   1d250:	lsr	x1, x1, #1
   1d254:	str	x2, [sp, #24]
   1d258:	str	x0, [sp, #8]
   1d25c:	cbz	x1, 1d31c <PyInit__decimal@@Base+0x16868>
   1d260:	ldr	x8, [sp, #8]
   1d264:	mov	x20, xzr
   1d268:	lsl	x27, x1, #3
   1d26c:	add	x21, x8, #0x8
   1d270:	ldr	x8, [sp, #24]
   1d274:	add	x26, x8, #0x20
   1d278:	add	x19, x21, x27
   1d27c:	ldp	x8, x10, [x21, #-8]
   1d280:	ldur	x9, [x19, #-8]
   1d284:	ldr	x11, [x21, x27]
   1d288:	mov	x28, x1
   1d28c:	ldp	x1, x23, [x26, #-8]
   1d290:	adds	x12, x9, x8
   1d294:	csel	x13, x22, xzr, cs  // cs = hs, nlast
   1d298:	sub	x12, x12, x13
   1d29c:	cmp	x12, x22
   1d2a0:	csel	x13, xzr, x22, cc  // cc = lo, ul, last
   1d2a4:	subs	x8, x8, x9
   1d2a8:	sub	x9, x12, x13
   1d2ac:	csel	x12, x22, xzr, cc  // cc = lo, ul, last
   1d2b0:	adds	x13, x11, x10
   1d2b4:	add	x0, x8, x12
   1d2b8:	csel	x8, x22, xzr, cs  // cs = hs, nlast
   1d2bc:	sub	x8, x13, x8
   1d2c0:	cmp	x8, x22
   1d2c4:	stur	x9, [x21, #-8]
   1d2c8:	csel	x9, xzr, x22, cc  // cc = lo, ul, last
   1d2cc:	subs	x10, x10, x11
   1d2d0:	sub	x8, x8, x9
   1d2d4:	csel	x9, x22, xzr, cc  // cc = lo, ul, last
   1d2d8:	mov	x2, x22
   1d2dc:	str	x8, [x21]
   1d2e0:	add	x24, x10, x9
   1d2e4:	bl	1d5dc <PyInit__decimal@@Base+0x16b28>
   1d2e8:	mov	x25, x0
   1d2ec:	mov	x0, x24
   1d2f0:	mov	x1, x23
   1d2f4:	mov	x2, x22
   1d2f8:	bl	1d5dc <PyInit__decimal@@Base+0x16b28>
   1d2fc:	add	x20, x20, #0x2
   1d300:	mov	x1, x28
   1d304:	stur	x25, [x19, #-8]
   1d308:	str	x0, [x21, x27]
   1d30c:	add	x21, x21, #0x10
   1d310:	cmp	x20, x28
   1d314:	add	x26, x26, #0x10
   1d318:	b.cc	1d278 <PyInit__decimal@@Base+0x167c4>  // b.lo, b.ul, b.last
   1d31c:	ldur	x17, [x29, #-32]
   1d320:	ldr	x18, [sp, #8]
   1d324:	cmp	x17, #0x4
   1d328:	b.cc	1d4fc <PyInit__decimal@@Base+0x16a48>  // b.lo, b.ul, b.last
   1d32c:	add	x8, x18, #0x8
   1d330:	str	x8, [sp]
   1d334:	mov	w8, #0x2                   	// #2
   1d338:	str	x8, [sp, #32]
   1d33c:	lsr	x9, x1, #1
   1d340:	lsl	x28, x9, #3
   1d344:	lsl	x23, x1, #3
   1d348:	mov	x8, xzr
   1d34c:	lsl	x0, x1, #1
   1d350:	lsl	x21, x1, #4
   1d354:	str	x9, [sp, #40]
   1d358:	add	x9, x23, x28
   1d35c:	mov	x10, x18
   1d360:	ldr	x11, [x10]
   1d364:	ldr	x12, [x10, x28]
   1d368:	ldr	x13, [x10, x23]
   1d36c:	ldr	x14, [x10, x9]
   1d370:	add	x8, x8, x0
   1d374:	adds	x15, x12, x11
   1d378:	csel	x16, x22, xzr, cs  // cs = hs, nlast
   1d37c:	sub	x15, x15, x16
   1d380:	cmp	x15, x22
   1d384:	csel	x16, xzr, x22, cc  // cc = lo, ul, last
   1d388:	subs	x11, x11, x12
   1d38c:	sub	x12, x15, x16
   1d390:	csel	x15, x22, xzr, cc  // cc = lo, ul, last
   1d394:	adds	x16, x14, x13
   1d398:	str	x12, [x10]
   1d39c:	csel	x12, x22, xzr, cs  // cs = hs, nlast
   1d3a0:	sub	x12, x16, x12
   1d3a4:	cmp	x12, x22
   1d3a8:	add	x11, x11, x15
   1d3ac:	csel	x15, xzr, x22, cc  // cc = lo, ul, last
   1d3b0:	subs	x13, x13, x14
   1d3b4:	sub	x12, x12, x15
   1d3b8:	csel	x14, x22, xzr, cc  // cc = lo, ul, last
   1d3bc:	str	x12, [x10, x23]
   1d3c0:	add	x12, x13, x14
   1d3c4:	cmp	x8, x17
   1d3c8:	str	x11, [x10, x28]
   1d3cc:	str	x12, [x10, x9]
   1d3d0:	add	x10, x10, x21
   1d3d4:	b.cc	1d360 <PyInit__decimal@@Base+0x168ac>  // b.lo, b.ul, b.last
   1d3d8:	cmp	x1, #0x4
   1d3dc:	b.cc	1d4fc <PyInit__decimal@@Base+0x16a48>  // b.lo, b.ul, b.last
   1d3e0:	ldr	x8, [sp, #40]
   1d3e4:	ldr	x20, [sp]
   1d3e8:	mov	w9, #0x1                   	// #1
   1d3ec:	str	x1, [sp, #16]
   1d3f0:	add	x11, x1, x8
   1d3f4:	stp	x0, x11, [x29, #-24]
   1d3f8:	ldr	x8, [sp, #32]
   1d3fc:	str	x9, [sp, #48]
   1d400:	mov	x19, xzr
   1d404:	stur	x20, [x29, #-40]
   1d408:	mul	x8, x9, x8
   1d40c:	ldr	x9, [sp, #24]
   1d410:	add	x8, x9, x8, lsl #3
   1d414:	ldr	x8, [x8, #24]
   1d418:	stur	x8, [x29, #-8]
   1d41c:	ldr	x8, [x20]
   1d420:	ldr	x9, [x20, x28]
   1d424:	lsl	x27, x11, #3
   1d428:	ldr	x10, [x20, x23]
   1d42c:	ldr	x11, [x20, x27]
   1d430:	adds	x12, x9, x8
   1d434:	csel	x13, x22, xzr, cs  // cs = hs, nlast
   1d438:	sub	x12, x12, x13
   1d43c:	cmp	x12, x22
   1d440:	csel	x13, xzr, x22, cc  // cc = lo, ul, last
   1d444:	subs	x8, x8, x9
   1d448:	sub	x9, x12, x13
   1d44c:	csel	x12, x22, xzr, cc  // cc = lo, ul, last
   1d450:	adds	x13, x11, x10
   1d454:	add	x0, x8, x12
   1d458:	csel	x8, x22, xzr, cs  // cs = hs, nlast
   1d45c:	sub	x8, x13, x8
   1d460:	cmp	x8, x22
   1d464:	str	x9, [x20]
   1d468:	csel	x9, xzr, x22, cc  // cc = lo, ul, last
   1d46c:	subs	x10, x10, x11
   1d470:	sub	x8, x8, x9
   1d474:	csel	x9, x22, xzr, cc  // cc = lo, ul, last
   1d478:	mov	x26, x22
   1d47c:	ldur	x22, [x29, #-8]
   1d480:	mov	x2, x26
   1d484:	str	x8, [x20, x23]
   1d488:	add	x24, x10, x9
   1d48c:	mov	x1, x22
   1d490:	bl	1d5dc <PyInit__decimal@@Base+0x16b28>
   1d494:	mov	x25, x0
   1d498:	mov	x0, x24
   1d49c:	mov	x1, x22
   1d4a0:	mov	x2, x26
   1d4a4:	mov	x22, x26
   1d4a8:	bl	1d5dc <PyInit__decimal@@Base+0x16b28>
   1d4ac:	str	x25, [x20, x28]
   1d4b0:	str	x0, [x20, x27]
   1d4b4:	ldp	x0, x11, [x29, #-24]
   1d4b8:	ldur	x17, [x29, #-32]
   1d4bc:	add	x20, x20, x21
   1d4c0:	add	x19, x19, x0
   1d4c4:	cmp	x19, x17
   1d4c8:	b.cc	1d41c <PyInit__decimal@@Base+0x16968>  // b.lo, b.ul, b.last
   1d4cc:	ldp	x8, x9, [sp, #40]
   1d4d0:	ldur	x20, [x29, #-40]
   1d4d4:	add	x9, x9, #0x1
   1d4d8:	cmp	x9, x8
   1d4dc:	add	x20, x20, #0x8
   1d4e0:	b.cc	1d3f8 <PyInit__decimal@@Base+0x16944>  // b.lo, b.ul, b.last
   1d4e4:	ldp	x18, x8, [sp, #8]
   1d4e8:	cmp	x8, #0x3
   1d4ec:	ldp	x8, x1, [sp, #32]
   1d4f0:	lsl	x8, x8, #1
   1d4f4:	str	x8, [sp, #32]
   1d4f8:	b.hi	1d33c <PyInit__decimal@@Base+0x16888>  // b.pmore
   1d4fc:	mov	x8, xzr
   1d500:	mov	x11, xzr
   1d504:	mov	w9, #0x1f                  	// #31
   1d508:	mov	w10, #0x3f                  	// #63
   1d50c:	b	1d598 <PyInit__decimal@@Base+0x16ae4>
   1d510:	add	x12, x11, #0x1
   1d514:	lsr	x13, x12, #32
   1d518:	tst	x12, #0xffffffff
   1d51c:	csinc	x11, x13, x11, eq  // eq = none
   1d520:	csel	w13, w10, w9, eq  // eq = none
   1d524:	lsr	x15, x11, #16
   1d528:	tst	x11, #0xffff
   1d52c:	sub	w14, w13, #0x10
   1d530:	csel	x11, x15, x11, eq  // eq = none
   1d534:	csel	w13, w13, w14, eq  // eq = none
   1d538:	lsr	x15, x11, #8
   1d53c:	tst	x11, #0xff
   1d540:	sub	w14, w13, #0x8
   1d544:	csel	x11, x15, x11, eq  // eq = none
   1d548:	csel	w13, w13, w14, eq  // eq = none
   1d54c:	lsr	x15, x11, #4
   1d550:	tst	x11, #0xf
   1d554:	sub	w14, w13, #0x4
   1d558:	csel	x11, x15, x11, eq  // eq = none
   1d55c:	csel	w13, w13, w14, eq  // eq = none
   1d560:	lsr	x15, x11, #2
   1d564:	tst	x11, #0x3
   1d568:	sub	w14, w13, #0x2
   1d56c:	csel	x11, x15, x11, eq  // eq = none
   1d570:	csel	w13, w13, w14, eq  // eq = none
   1d574:	sbfx	x11, x11, #0, #1
   1d578:	add	w11, w13, w11
   1d57c:	add	w11, w11, #0x1
   1d580:	lsr	x11, x17, x11
   1d584:	sub	x11, x17, x11
   1d588:	cmp	x12, x17
   1d58c:	eor	x8, x11, x8
   1d590:	mov	x11, x12
   1d594:	b.cs	1d5bc <PyInit__decimal@@Base+0x16b08>  // b.hs, b.nlast
   1d598:	cmp	x8, x11
   1d59c:	b.ls	1d510 <PyInit__decimal@@Base+0x16a5c>  // b.plast
   1d5a0:	lsl	x12, x11, #3
   1d5a4:	lsl	x13, x8, #3
   1d5a8:	ldr	x14, [x18, x13]
   1d5ac:	ldr	x15, [x18, x12]
   1d5b0:	str	x14, [x18, x12]
   1d5b4:	str	x15, [x18, x13]
   1d5b8:	b	1d510 <PyInit__decimal@@Base+0x16a5c>
   1d5bc:	ldp	x20, x19, [sp, #176]
   1d5c0:	ldp	x22, x21, [sp, #160]
   1d5c4:	ldp	x24, x23, [sp, #144]
   1d5c8:	ldp	x26, x25, [sp, #128]
   1d5cc:	ldp	x28, x27, [sp, #112]
   1d5d0:	ldp	x29, x30, [sp, #96]
   1d5d4:	add	sp, sp, #0xc0
   1d5d8:	ret
   1d5dc:	umulh	x8, x1, x0
   1d5e0:	mul	x9, x1, x0
   1d5e4:	tbnz	x2, #32, 1d630 <PyInit__decimal@@Base+0x16b7c>
   1d5e8:	tbnz	x2, #34, 1d65c <PyInit__decimal@@Base+0x16ba8>
   1d5ec:	subs	x9, x9, x8
   1d5f0:	lsr	x10, x8, #24
   1d5f4:	cset	w11, cc  // cc = lo, ul, last
   1d5f8:	adds	x8, x9, x8, lsl #40
   1d5fc:	sub	x9, x10, x11
   1d600:	cinc	x9, x9, cs  // cs = hs, nlast
   1d604:	subs	x8, x8, x9
   1d608:	lsr	x10, x9, #24
   1d60c:	cset	w11, cc  // cc = lo, ul, last
   1d610:	adds	x8, x8, x9, lsl #40
   1d614:	sub	x9, x10, x11
   1d618:	cinc	x9, x9, cs  // cs = hs, nlast
   1d61c:	subs	x8, x8, x9
   1d620:	lsr	x10, x9, #24
   1d624:	cset	w11, cc  // cc = lo, ul, last
   1d628:	adds	x8, x8, x9, lsl #40
   1d62c:	b	1d69c <PyInit__decimal@@Base+0x16be8>
   1d630:	subs	x9, x9, x8
   1d634:	lsr	x10, x8, #32
   1d638:	cset	w11, cc  // cc = lo, ul, last
   1d63c:	adds	x8, x9, x8, lsl #32
   1d640:	sub	x9, x10, x11
   1d644:	cinc	x9, x9, cs  // cs = hs, nlast
   1d648:	subs	x8, x8, x9
   1d64c:	lsr	x10, x9, #32
   1d650:	cset	w11, cc  // cc = lo, ul, last
   1d654:	adds	x8, x8, x9, lsl #32
   1d658:	b	1d69c <PyInit__decimal@@Base+0x16be8>
   1d65c:	subs	x9, x9, x8
   1d660:	lsr	x10, x8, #30
   1d664:	cset	w11, cc  // cc = lo, ul, last
   1d668:	adds	x8, x9, x8, lsl #34
   1d66c:	sub	x9, x10, x11
   1d670:	cinc	x9, x9, cs  // cs = hs, nlast
   1d674:	subs	x8, x8, x9
   1d678:	lsr	x10, x9, #30
   1d67c:	cset	w11, cc  // cc = lo, ul, last
   1d680:	adds	x8, x8, x9, lsl #34
   1d684:	sub	x9, x10, x11
   1d688:	cinc	x9, x9, cs  // cs = hs, nlast
   1d68c:	subs	x8, x8, x9
   1d690:	lsr	x10, x9, #30
   1d694:	cset	w11, cc  // cc = lo, ul, last
   1d698:	adds	x8, x8, x9, lsl #34
   1d69c:	sub	x9, x10, x11
   1d6a0:	cset	w10, cs  // cs = hs, nlast
   1d6a4:	sbfx	x10, x10, #0, #1
   1d6a8:	cmp	x9, x10
   1d6ac:	ccmp	x8, x2, #0x2, eq  // eq = none
   1d6b0:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1d6b4:	sub	x0, x8, x9
   1d6b8:	ret
   1d6bc:	stp	x29, x30, [sp, #-48]!
   1d6c0:	str	x21, [sp, #16]
   1d6c4:	stp	x20, x19, [sp, #32]
   1d6c8:	mov	x29, sp
   1d6cc:	mov	x19, x1
   1d6d0:	mov	x20, x0
   1d6d4:	mov	w1, #0xffffffff            	// #-1
   1d6d8:	mov	x0, x19
   1d6dc:	bl	377e4 <PyInit__decimal@@Base+0x30d30>
   1d6e0:	cbz	x0, 1d70c <PyInit__decimal@@Base+0x16c58>
   1d6e4:	mov	x21, x0
   1d6e8:	mov	x0, x20
   1d6ec:	mov	x1, x19
   1d6f0:	mov	x2, x21
   1d6f4:	bl	1d21c <PyInit__decimal@@Base+0x16768>
   1d6f8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1d6fc:	ldr	x8, [x8, #1376]
   1d700:	mov	x0, x21
   1d704:	blr	x8
   1d708:	mov	w0, #0x1                   	// #1
   1d70c:	ldp	x20, x19, [sp, #32]
   1d710:	ldr	x21, [sp, #16]
   1d714:	ldp	x29, x30, [sp], #48
   1d718:	ret
   1d71c:	stp	x29, x30, [sp, #-48]!
   1d720:	str	x21, [sp, #16]
   1d724:	stp	x20, x19, [sp, #32]
   1d728:	mov	x29, sp
   1d72c:	mov	x19, x1
   1d730:	mov	x20, x0
   1d734:	mov	w1, #0x1                   	// #1
   1d738:	mov	x0, x19
   1d73c:	bl	377e4 <PyInit__decimal@@Base+0x30d30>
   1d740:	cbz	x0, 1d76c <PyInit__decimal@@Base+0x16cb8>
   1d744:	mov	x21, x0
   1d748:	mov	x0, x20
   1d74c:	mov	x1, x19
   1d750:	mov	x2, x21
   1d754:	bl	1d21c <PyInit__decimal@@Base+0x16768>
   1d758:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1d75c:	ldr	x8, [x8, #1376]
   1d760:	mov	x0, x21
   1d764:	blr	x8
   1d768:	mov	w0, #0x1                   	// #1
   1d76c:	ldp	x20, x19, [sp, #32]
   1d770:	ldr	x21, [sp, #16]
   1d774:	ldp	x29, x30, [sp], #48
   1d778:	ret
   1d77c:	sub	sp, sp, #0xb0
   1d780:	stp	x29, x30, [sp, #80]
   1d784:	stp	x28, x27, [sp, #96]
   1d788:	stp	x26, x25, [sp, #112]
   1d78c:	stp	x24, x23, [sp, #128]
   1d790:	stp	x22, x21, [sp, #144]
   1d794:	stp	x20, x19, [sp, #160]
   1d798:	add	x29, sp, #0x50
   1d79c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1d7a0:	add	x8, x8, #0x120
   1d7a4:	ldr	x23, [x8, w2, sxtw #3]
   1d7a8:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1d7ac:	movk	x8, #0xaaab
   1d7b0:	mov	x19, x0
   1d7b4:	str	x1, [sp, #8]
   1d7b8:	umulh	x8, x1, x8
   1d7bc:	sub	x0, x29, #0x18
   1d7c0:	mov	w1, #0xffffffff            	// #-1
   1d7c4:	lsr	x20, x8, #1
   1d7c8:	str	w2, [sp, #4]
   1d7cc:	bl	37964 <PyInit__decimal@@Base+0x30eb0>
   1d7d0:	add	x9, x19, x20, lsl #3
   1d7d4:	cmp	x9, x19
   1d7d8:	lsl	x22, x20, #3
   1d7dc:	stp	x19, x20, [sp, #16]
   1d7e0:	b.ls	1d8f8 <PyInit__decimal@@Base+0x16e44>  // b.plast
   1d7e4:	ldp	x28, x8, [sp, #16]
   1d7e8:	lsl	x8, x8, #4
   1d7ec:	mov	x21, x8
   1d7f0:	stp	x8, x9, [sp, #32]
   1d7f4:	ldr	x19, [x28]
   1d7f8:	ldr	x24, [x28, x22]
   1d7fc:	ldr	x25, [x28, x21]
   1d800:	ldur	x26, [x29, #-16]
   1d804:	mov	x2, x23
   1d808:	adds	x8, x24, x19
   1d80c:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1d810:	sub	x8, x8, x9
   1d814:	cmp	x8, x23
   1d818:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1d81c:	sub	x8, x8, x9
   1d820:	adds	x8, x8, x25
   1d824:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1d828:	sub	x8, x8, x9
   1d82c:	cmp	x8, x23
   1d830:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1d834:	sub	x8, x8, x9
   1d838:	mov	x0, x24
   1d83c:	mov	x1, x26
   1d840:	stur	x8, [x29, #-32]
   1d844:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d848:	adds	x8, x0, x19
   1d84c:	ldur	x27, [x29, #-8]
   1d850:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1d854:	sub	x8, x8, x9
   1d858:	cmp	x8, x23
   1d85c:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1d860:	mov	x0, x25
   1d864:	mov	x1, x27
   1d868:	mov	x2, x23
   1d86c:	sub	x20, x8, x9
   1d870:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d874:	adds	x8, x20, x0
   1d878:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1d87c:	sub	x8, x8, x9
   1d880:	cmp	x8, x23
   1d884:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1d888:	mov	x0, x24
   1d88c:	mov	x1, x27
   1d890:	mov	x2, x23
   1d894:	sub	x20, x8, x9
   1d898:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d89c:	adds	x8, x0, x19
   1d8a0:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1d8a4:	sub	x8, x8, x9
   1d8a8:	cmp	x8, x23
   1d8ac:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1d8b0:	mov	x0, x25
   1d8b4:	mov	x1, x26
   1d8b8:	mov	x2, x23
   1d8bc:	sub	x19, x8, x9
   1d8c0:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d8c4:	adds	x8, x19, x0
   1d8c8:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1d8cc:	sub	x8, x8, x9
   1d8d0:	cmp	x8, x23
   1d8d4:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1d8d8:	sub	x8, x8, x9
   1d8dc:	str	x8, [x28, x21]
   1d8e0:	ldur	x8, [x29, #-32]
   1d8e4:	ldr	x9, [sp, #40]
   1d8e8:	str	x20, [x28, x22]
   1d8ec:	str	x8, [x28], #8
   1d8f0:	cmp	x28, x9
   1d8f4:	b.cc	1d7f4 <PyInit__decimal@@Base+0x16d40>  // b.lo, b.ul, b.last
   1d8f8:	ldr	x0, [sp, #8]
   1d8fc:	ldr	w2, [sp, #4]
   1d900:	mov	w1, #0xffffffff            	// #-1
   1d904:	str	x22, [sp, #40]
   1d908:	bl	3770c <PyInit__decimal@@Base+0x30c58>
   1d90c:	ldr	x8, [sp, #24]
   1d910:	mov	x1, x0
   1d914:	mov	w0, #0x1                   	// #1
   1d918:	mov	x2, x23
   1d91c:	sub	x21, x8, #0x1
   1d920:	stur	x1, [x29, #-32]
   1d924:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d928:	mov	x1, x0
   1d92c:	mov	x2, x23
   1d930:	mov	x25, x0
   1d934:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d938:	cbz	x21, 1d9b4 <PyInit__decimal@@Base+0x16f00>
   1d93c:	ldp	x8, x9, [sp, #16]
   1d940:	mov	x26, x0
   1d944:	mov	x24, xzr
   1d948:	mov	w27, #0x1                   	// #1
   1d94c:	add	x19, x8, x9, lsl #3
   1d950:	add	x20, x19, x24, lsl #3
   1d954:	ldp	x0, x28, [x20]
   1d958:	mov	x1, x27
   1d95c:	mov	x2, x23
   1d960:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d964:	mov	x22, x0
   1d968:	mov	x0, x28
   1d96c:	mov	x1, x25
   1d970:	mov	x2, x23
   1d974:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d978:	mov	x28, x0
   1d97c:	mov	x0, x27
   1d980:	mov	x1, x26
   1d984:	mov	x2, x23
   1d988:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d98c:	mov	x27, x0
   1d990:	mov	x0, x25
   1d994:	mov	x1, x26
   1d998:	mov	x2, x23
   1d99c:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d9a0:	add	x24, x24, #0x2
   1d9a4:	mov	x25, x0
   1d9a8:	cmp	x24, x21
   1d9ac:	stp	x22, x28, [x20]
   1d9b0:	b.cc	1d950 <PyInit__decimal@@Base+0x16e9c>  // b.lo, b.ul, b.last
   1d9b4:	ldur	x0, [x29, #-32]
   1d9b8:	mov	x2, x23
   1d9bc:	mov	x1, x0
   1d9c0:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d9c4:	mov	x1, x0
   1d9c8:	mov	w0, #0x1                   	// #1
   1d9cc:	mov	x2, x23
   1d9d0:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d9d4:	mov	x1, x0
   1d9d8:	mov	x2, x23
   1d9dc:	mov	x24, x0
   1d9e0:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1d9e4:	cbz	x21, 1da60 <PyInit__decimal@@Base+0x16fac>
   1d9e8:	ldp	x8, x9, [sp, #16]
   1d9ec:	mov	x25, x0
   1d9f0:	mov	x28, xzr
   1d9f4:	mov	w26, #0x1                   	// #1
   1d9f8:	add	x19, x8, x9, lsl #4
   1d9fc:	add	x20, x19, x28, lsl #3
   1da00:	ldp	x0, x22, [x20]
   1da04:	mov	x1, x26
   1da08:	mov	x2, x23
   1da0c:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1da10:	mov	x27, x0
   1da14:	mov	x0, x22
   1da18:	mov	x1, x24
   1da1c:	mov	x2, x23
   1da20:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1da24:	mov	x22, x0
   1da28:	mov	x0, x26
   1da2c:	mov	x1, x25
   1da30:	mov	x2, x23
   1da34:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1da38:	mov	x26, x0
   1da3c:	mov	x0, x24
   1da40:	mov	x1, x25
   1da44:	mov	x2, x23
   1da48:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1da4c:	add	x28, x28, #0x2
   1da50:	mov	x24, x0
   1da54:	cmp	x28, x21
   1da58:	stp	x27, x22, [x20]
   1da5c:	b.cc	1d9fc <PyInit__decimal@@Base+0x16f48>  // b.lo, b.ul, b.last
   1da60:	ldp	x8, x21, [sp, #8]
   1da64:	add	x19, x21, x8, lsl #3
   1da68:	cmp	x19, x21
   1da6c:	b.ls	1da9c <PyInit__decimal@@Base+0x16fe8>  // b.plast
   1da70:	ldr	w20, [sp, #4]
   1da74:	ldr	x22, [sp, #24]
   1da78:	ldr	x23, [sp, #40]
   1da7c:	mov	x0, x21
   1da80:	mov	x1, x22
   1da84:	mov	w2, w20
   1da88:	bl	379bc <PyInit__decimal@@Base+0x30f08>
   1da8c:	cbz	w0, 1daa0 <PyInit__decimal@@Base+0x16fec>
   1da90:	add	x21, x21, x23
   1da94:	cmp	x21, x19
   1da98:	b.cc	1da7c <PyInit__decimal@@Base+0x16fc8>  // b.lo, b.ul, b.last
   1da9c:	mov	w0, #0x1                   	// #1
   1daa0:	ldp	x20, x19, [sp, #160]
   1daa4:	ldp	x22, x21, [sp, #144]
   1daa8:	ldp	x24, x23, [sp, #128]
   1daac:	ldp	x26, x25, [sp, #112]
   1dab0:	ldp	x28, x27, [sp, #96]
   1dab4:	ldp	x29, x30, [sp, #80]
   1dab8:	add	sp, sp, #0xb0
   1dabc:	ret
   1dac0:	umulh	x8, x1, x0
   1dac4:	mul	x9, x1, x0
   1dac8:	tbnz	x2, #32, 1db14 <PyInit__decimal@@Base+0x17060>
   1dacc:	tbnz	x2, #34, 1db40 <PyInit__decimal@@Base+0x1708c>
   1dad0:	subs	x9, x9, x8
   1dad4:	lsr	x10, x8, #24
   1dad8:	cset	w11, cc  // cc = lo, ul, last
   1dadc:	adds	x8, x9, x8, lsl #40
   1dae0:	sub	x9, x10, x11
   1dae4:	cinc	x9, x9, cs  // cs = hs, nlast
   1dae8:	subs	x8, x8, x9
   1daec:	lsr	x10, x9, #24
   1daf0:	cset	w11, cc  // cc = lo, ul, last
   1daf4:	adds	x8, x8, x9, lsl #40
   1daf8:	sub	x9, x10, x11
   1dafc:	cinc	x9, x9, cs  // cs = hs, nlast
   1db00:	subs	x8, x8, x9
   1db04:	lsr	x10, x9, #24
   1db08:	cset	w11, cc  // cc = lo, ul, last
   1db0c:	adds	x8, x8, x9, lsl #40
   1db10:	b	1db80 <PyInit__decimal@@Base+0x170cc>
   1db14:	subs	x9, x9, x8
   1db18:	lsr	x10, x8, #32
   1db1c:	cset	w11, cc  // cc = lo, ul, last
   1db20:	adds	x8, x9, x8, lsl #32
   1db24:	sub	x9, x10, x11
   1db28:	cinc	x9, x9, cs  // cs = hs, nlast
   1db2c:	subs	x8, x8, x9
   1db30:	lsr	x10, x9, #32
   1db34:	cset	w11, cc  // cc = lo, ul, last
   1db38:	adds	x8, x8, x9, lsl #32
   1db3c:	b	1db80 <PyInit__decimal@@Base+0x170cc>
   1db40:	subs	x9, x9, x8
   1db44:	lsr	x10, x8, #30
   1db48:	cset	w11, cc  // cc = lo, ul, last
   1db4c:	adds	x8, x9, x8, lsl #34
   1db50:	sub	x9, x10, x11
   1db54:	cinc	x9, x9, cs  // cs = hs, nlast
   1db58:	subs	x8, x8, x9
   1db5c:	lsr	x10, x9, #30
   1db60:	cset	w11, cc  // cc = lo, ul, last
   1db64:	adds	x8, x8, x9, lsl #34
   1db68:	sub	x9, x10, x11
   1db6c:	cinc	x9, x9, cs  // cs = hs, nlast
   1db70:	subs	x8, x8, x9
   1db74:	lsr	x10, x9, #30
   1db78:	cset	w11, cc  // cc = lo, ul, last
   1db7c:	adds	x8, x8, x9, lsl #34
   1db80:	sub	x9, x10, x11
   1db84:	cset	w10, cs  // cs = hs, nlast
   1db88:	sbfx	x10, x10, #0, #1
   1db8c:	cmp	x9, x10
   1db90:	ccmp	x8, x2, #0x2, eq  // eq = none
   1db94:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1db98:	sub	x0, x8, x9
   1db9c:	ret
   1dba0:	sub	sp, sp, #0xa0
   1dba4:	stp	x29, x30, [sp, #64]
   1dba8:	stp	x28, x27, [sp, #80]
   1dbac:	stp	x26, x25, [sp, #96]
   1dbb0:	stp	x24, x23, [sp, #112]
   1dbb4:	stp	x22, x21, [sp, #128]
   1dbb8:	stp	x20, x19, [sp, #144]
   1dbbc:	add	x29, sp, #0x40
   1dbc0:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1dbc4:	movk	x8, #0xaaab
   1dbc8:	add	x22, x0, x1, lsl #3
   1dbcc:	umulh	x8, x1, x8
   1dbd0:	mov	w24, w2
   1dbd4:	mov	x26, x1
   1dbd8:	mov	x19, x0
   1dbdc:	cmp	x22, x0
   1dbe0:	lsr	x21, x8, #1
   1dbe4:	b.ls	1dc10 <PyInit__decimal@@Base+0x1715c>  // b.plast
   1dbe8:	lsl	x23, x21, #3
   1dbec:	mov	x20, x19
   1dbf0:	mov	x0, x20
   1dbf4:	mov	x1, x21
   1dbf8:	mov	w2, w24
   1dbfc:	bl	37da0 <PyInit__decimal@@Base+0x312ec>
   1dc00:	cbz	w0, 1dee4 <PyInit__decimal@@Base+0x17430>
   1dc04:	add	x20, x20, x23
   1dc08:	cmp	x20, x22
   1dc0c:	b.cc	1dbf0 <PyInit__decimal@@Base+0x1713c>  // b.lo, b.ul, b.last
   1dc10:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1dc14:	add	x8, x8, #0x120
   1dc18:	ldr	x20, [x8, w24, sxtw #3]
   1dc1c:	mov	w1, #0x1                   	// #1
   1dc20:	mov	x0, x26
   1dc24:	mov	w2, w24
   1dc28:	str	w24, [sp, #16]
   1dc2c:	bl	3770c <PyInit__decimal@@Base+0x30c58>
   1dc30:	mov	x1, x0
   1dc34:	mov	w0, #0x1                   	// #1
   1dc38:	mov	x2, x20
   1dc3c:	str	x1, [sp]
   1dc40:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dc44:	mov	x1, x0
   1dc48:	mov	x2, x20
   1dc4c:	mov	x25, x0
   1dc50:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dc54:	cmp	x26, #0x3
   1dc58:	mov	x22, x21
   1dc5c:	str	x26, [sp, #8]
   1dc60:	b.cc	1dce0 <PyInit__decimal@@Base+0x1722c>  // b.lo, b.ul, b.last
   1dc64:	mov	x26, x0
   1dc68:	mov	x23, xzr
   1dc6c:	add	x8, x19, x22, lsl #3
   1dc70:	mov	w27, #0x1                   	// #1
   1dc74:	str	x8, [sp, #24]
   1dc78:	ldr	x8, [sp, #24]
   1dc7c:	mov	x1, x27
   1dc80:	mov	x2, x20
   1dc84:	add	x21, x8, x23, lsl #3
   1dc88:	ldp	x0, x28, [x21]
   1dc8c:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dc90:	mov	x24, x0
   1dc94:	mov	x0, x28
   1dc98:	mov	x1, x25
   1dc9c:	mov	x2, x20
   1dca0:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dca4:	mov	x28, x0
   1dca8:	mov	x0, x27
   1dcac:	mov	x1, x26
   1dcb0:	mov	x2, x20
   1dcb4:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dcb8:	mov	x27, x0
   1dcbc:	mov	x0, x25
   1dcc0:	mov	x1, x26
   1dcc4:	mov	x2, x20
   1dcc8:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dccc:	add	x23, x23, #0x2
   1dcd0:	mov	x25, x0
   1dcd4:	cmp	x23, x22
   1dcd8:	stp	x24, x28, [x21]
   1dcdc:	b.cc	1dc78 <PyInit__decimal@@Base+0x171c4>  // b.lo, b.ul, b.last
   1dce0:	ldr	x0, [sp]
   1dce4:	mov	x2, x20
   1dce8:	str	x22, [sp, #32]
   1dcec:	mov	x1, x0
   1dcf0:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dcf4:	mov	x1, x0
   1dcf8:	mov	w0, #0x1                   	// #1
   1dcfc:	mov	x2, x20
   1dd00:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dd04:	mov	x1, x0
   1dd08:	mov	x2, x20
   1dd0c:	mov	x24, x0
   1dd10:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dd14:	ldr	x8, [sp, #8]
   1dd18:	cmp	x8, #0x2
   1dd1c:	b.ls	1dd9c <PyInit__decimal@@Base+0x172e8>  // b.plast
   1dd20:	ldr	x8, [sp, #32]
   1dd24:	mov	x23, x0
   1dd28:	mov	x28, xzr
   1dd2c:	mov	w25, #0x1                   	// #1
   1dd30:	add	x22, x19, x8, lsl #4
   1dd34:	add	x21, x22, x28, lsl #3
   1dd38:	ldp	x0, x26, [x21]
   1dd3c:	mov	x1, x25
   1dd40:	mov	x2, x20
   1dd44:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dd48:	mov	x27, x0
   1dd4c:	mov	x0, x26
   1dd50:	mov	x1, x24
   1dd54:	mov	x2, x20
   1dd58:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dd5c:	mov	x26, x0
   1dd60:	mov	x0, x25
   1dd64:	mov	x1, x23
   1dd68:	mov	x2, x20
   1dd6c:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dd70:	mov	x25, x0
   1dd74:	mov	x0, x24
   1dd78:	mov	x1, x23
   1dd7c:	mov	x2, x20
   1dd80:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dd84:	ldr	x8, [sp, #32]
   1dd88:	add	x28, x28, #0x2
   1dd8c:	mov	x24, x0
   1dd90:	stp	x27, x26, [x21]
   1dd94:	cmp	x28, x8
   1dd98:	b.cc	1dd34 <PyInit__decimal@@Base+0x17280>  // b.lo, b.ul, b.last
   1dd9c:	ldr	w2, [sp, #16]
   1dda0:	sub	x0, x29, #0x18
   1dda4:	mov	w1, #0x1                   	// #1
   1dda8:	mov	w23, #0x1                   	// #1
   1ddac:	bl	37964 <PyInit__decimal@@Base+0x30eb0>
   1ddb0:	ldr	x8, [sp, #32]
   1ddb4:	add	x27, x19, x8, lsl #3
   1ddb8:	cmp	x27, x19
   1ddbc:	b.ls	1dee8 <PyInit__decimal@@Base+0x17434>  // b.plast
   1ddc0:	lsl	x9, x8, #4
   1ddc4:	lsl	x8, x8, #3
   1ddc8:	mov	x25, x9
   1ddcc:	str	x9, [sp, #16]
   1ddd0:	str	x8, [sp, #32]
   1ddd4:	ldr	x8, [sp, #32]
   1ddd8:	ldr	x28, [x19]
   1dddc:	ldr	x22, [x19, x25]
   1dde0:	ldur	x23, [x29, #-16]
   1dde4:	ldr	x21, [x19, x8]
   1dde8:	mov	x2, x20
   1ddec:	mov	x1, x23
   1ddf0:	adds	x8, x21, x28
   1ddf4:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1ddf8:	sub	x8, x8, x9
   1ddfc:	cmp	x8, x20
   1de00:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1de04:	sub	x8, x8, x9
   1de08:	adds	x8, x8, x22
   1de0c:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1de10:	sub	x8, x8, x9
   1de14:	cmp	x8, x20
   1de18:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1de1c:	sub	x8, x8, x9
   1de20:	mov	x0, x21
   1de24:	str	x8, [sp, #24]
   1de28:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1de2c:	adds	x8, x0, x28
   1de30:	ldur	x24, [x29, #-8]
   1de34:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1de38:	sub	x8, x8, x9
   1de3c:	cmp	x8, x20
   1de40:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1de44:	mov	x0, x22
   1de48:	mov	x1, x24
   1de4c:	mov	x2, x20
   1de50:	sub	x26, x8, x9
   1de54:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1de58:	adds	x8, x26, x0
   1de5c:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1de60:	sub	x8, x8, x9
   1de64:	cmp	x8, x20
   1de68:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1de6c:	mov	x0, x21
   1de70:	mov	x1, x24
   1de74:	mov	x2, x20
   1de78:	sub	x26, x8, x9
   1de7c:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1de80:	adds	x8, x0, x28
   1de84:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1de88:	sub	x8, x8, x9
   1de8c:	cmp	x8, x20
   1de90:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1de94:	mov	x0, x22
   1de98:	mov	x1, x23
   1de9c:	mov	x2, x20
   1dea0:	sub	x21, x8, x9
   1dea4:	bl	1dac0 <PyInit__decimal@@Base+0x1700c>
   1dea8:	adds	x8, x21, x0
   1deac:	csel	x9, x20, xzr, cs  // cs = hs, nlast
   1deb0:	sub	x8, x8, x9
   1deb4:	cmp	x8, x20
   1deb8:	csel	x9, xzr, x20, cc  // cc = lo, ul, last
   1debc:	sub	x8, x8, x9
   1dec0:	str	x8, [x19, x25]
   1dec4:	ldr	x8, [sp, #32]
   1dec8:	str	x26, [x19, x8]
   1decc:	ldr	x8, [sp, #24]
   1ded0:	str	x8, [x19], #8
   1ded4:	cmp	x19, x27
   1ded8:	b.cc	1ddd4 <PyInit__decimal@@Base+0x17320>  // b.lo, b.ul, b.last
   1dedc:	mov	w23, #0x1                   	// #1
   1dee0:	b	1dee8 <PyInit__decimal@@Base+0x17434>
   1dee4:	mov	w23, wzr
   1dee8:	mov	w0, w23
   1deec:	ldp	x20, x19, [sp, #144]
   1def0:	ldp	x22, x21, [sp, #128]
   1def4:	ldp	x24, x23, [sp, #112]
   1def8:	ldp	x26, x25, [sp, #96]
   1defc:	ldp	x28, x27, [sp, #80]
   1df00:	ldp	x29, x30, [sp, #64]
   1df04:	add	sp, sp, #0xa0
   1df08:	ret
   1df0c:	sub	sp, sp, #0x60
   1df10:	stp	x29, x30, [sp, #16]
   1df14:	stp	x26, x25, [sp, #32]
   1df18:	stp	x24, x23, [sp, #48]
   1df1c:	stp	x22, x21, [sp, #64]
   1df20:	stp	x20, x19, [sp, #80]
   1df24:	add	x29, sp, #0x10
   1df28:	mov	x22, x1
   1df2c:	mov	w1, wzr
   1df30:	mov	x19, x3
   1df34:	mov	x21, x2
   1df38:	mov	x20, x0
   1df3c:	bl	212b4 <PyInit__decimal@@Base+0x1a800>
   1df40:	str	xzr, [x20, #24]
   1df44:	str	xzr, [x20, #8]
   1df48:	ldrb	w23, [x22]
   1df4c:	mov	w1, wzr
   1df50:	cmp	w23, #0x2b
   1df54:	b.eq	1df6c <PyInit__decimal@@Base+0x174b8>  // b.none
   1df58:	cmp	w23, #0x2d
   1df5c:	b.ne	1df70 <PyInit__decimal@@Base+0x174bc>  // b.any
   1df60:	mov	x0, x20
   1df64:	bl	21218 <PyInit__decimal@@Base+0x1a764>
   1df68:	mov	w1, #0x1                   	// #1
   1df6c:	ldrb	w23, [x22, #1]!
   1df70:	sub	w8, w23, #0x49
   1df74:	cmp	w8, #0x2a
   1df78:	b.hi	1e190 <PyInit__decimal@@Base+0x176dc>  // b.pmore
   1df7c:	mov	w9, #0x1                   	// #1
   1df80:	lsl	x9, x9, x8
   1df84:	tst	x9, #0x100000001
   1df88:	b.ne	1e0ec <PyInit__decimal@@Base+0x17638>  // b.any
   1df8c:	mov	w9, #0x1                   	// #1
   1df90:	lsl	x9, x9, x8
   1df94:	tst	x9, #0x2000000020
   1df98:	b.ne	1e02c <PyInit__decimal@@Base+0x17578>  // b.any
   1df9c:	mov	w9, #0x1                   	// #1
   1dfa0:	lsl	x8, x9, x8
   1dfa4:	tst	x8, #0x40000000400
   1dfa8:	b.eq	1e190 <PyInit__decimal@@Base+0x176dc>  // b.none
   1dfac:	ldrb	w8, [x22, #1]
   1dfb0:	orr	w8, w8, #0x20
   1dfb4:	cmp	w8, #0x6e
   1dfb8:	b.ne	1e0c4 <PyInit__decimal@@Base+0x17610>  // b.any
   1dfbc:	ldrb	w8, [x22, #2]
   1dfc0:	orr	w8, w8, #0x20
   1dfc4:	cmp	w8, #0x61
   1dfc8:	b.ne	1e0c4 <PyInit__decimal@@Base+0x17610>  // b.any
   1dfcc:	ldrb	w8, [x22, #3]
   1dfd0:	orr	w8, w8, #0x20
   1dfd4:	cmp	w8, #0x6e
   1dfd8:	b.ne	1e0c4 <PyInit__decimal@@Base+0x17610>  // b.any
   1dfdc:	mov	w2, #0x8                   	// #8
   1dfe0:	mov	x0, x20
   1dfe4:	bl	216cc <PyInit__decimal@@Base+0x1ac18>
   1dfe8:	ldrb	w23, [x22, #4]!
   1dfec:	cbnz	w23, 1dff8 <PyInit__decimal@@Base+0x17544>
   1dff0:	b	1e2dc <PyInit__decimal@@Base+0x17828>
   1dff4:	ldrb	w23, [x22, #1]!
   1dff8:	cmp	w23, #0x30
   1dffc:	b.eq	1dff4 <PyInit__decimal@@Base+0x17540>  // b.none
   1e000:	bl	67c0 <__ctype_b_loc@plt>
   1e004:	ldr	x9, [x0]
   1e008:	mov	w10, w23
   1e00c:	mov	x8, x22
   1e010:	ldrh	w11, [x9, w23, uxtw #1]
   1e014:	tbz	w11, #11, 1e09c <PyInit__decimal@@Base+0x175e8>
   1e018:	mov	x8, x22
   1e01c:	ldrb	w10, [x8, #1]!
   1e020:	ldrh	w11, [x9, x10, lsl #1]
   1e024:	tbnz	w11, #11, 1e01c <PyInit__decimal@@Base+0x17568>
   1e028:	b	1e09c <PyInit__decimal@@Base+0x175e8>
   1e02c:	ldrb	w8, [x22, #1]
   1e030:	orr	w8, w8, #0x20
   1e034:	cmp	w8, #0x61
   1e038:	b.ne	1e0d4 <PyInit__decimal@@Base+0x17620>  // b.any
   1e03c:	ldrb	w8, [x22, #2]
   1e040:	orr	w8, w8, #0x20
   1e044:	cmp	w8, #0x6e
   1e048:	b.ne	1e0d4 <PyInit__decimal@@Base+0x17620>  // b.any
   1e04c:	mov	w2, #0x4                   	// #4
   1e050:	mov	x0, x20
   1e054:	bl	216cc <PyInit__decimal@@Base+0x1ac18>
   1e058:	ldrb	w23, [x22, #3]!
   1e05c:	cbz	w23, 1e2dc <PyInit__decimal@@Base+0x17828>
   1e060:	cmp	w23, #0x30
   1e064:	b.ne	1e074 <PyInit__decimal@@Base+0x175c0>  // b.any
   1e068:	ldrb	w23, [x22, #1]!
   1e06c:	cmp	w23, #0x30
   1e070:	b.eq	1e068 <PyInit__decimal@@Base+0x175b4>  // b.none
   1e074:	bl	67c0 <__ctype_b_loc@plt>
   1e078:	ldr	x9, [x0]
   1e07c:	mov	w10, w23
   1e080:	mov	x8, x22
   1e084:	ldrh	w11, [x9, w23, uxtw #1]
   1e088:	tbz	w11, #11, 1e09c <PyInit__decimal@@Base+0x175e8>
   1e08c:	mov	x8, x22
   1e090:	ldrb	w10, [x8, #1]!
   1e094:	ldrh	w11, [x9, x10, lsl #1]
   1e098:	tbnz	w11, #11, 1e090 <PyInit__decimal@@Base+0x175dc>
   1e09c:	cbnz	w10, 1e49c <PyInit__decimal@@Base+0x179e8>
   1e0a0:	cbz	w23, 1e2dc <PyInit__decimal@@Base+0x17828>
   1e0a4:	ldr	x9, [x21]
   1e0a8:	ldrsw	x10, [x21, #40]
   1e0ac:	sub	x8, x8, x22
   1e0b0:	sub	x9, x9, x10
   1e0b4:	cmp	x8, x9
   1e0b8:	b.hi	1e49c <PyInit__decimal@@Base+0x179e8>  // b.pmore
   1e0bc:	mov	x24, xzr
   1e0c0:	b	1e3b0 <PyInit__decimal@@Base+0x178fc>
   1e0c4:	orr	w8, w23, #0x20
   1e0c8:	cmp	w8, #0x69
   1e0cc:	b.eq	1e0ec <PyInit__decimal@@Base+0x17638>  // b.none
   1e0d0:	b	1e190 <PyInit__decimal@@Base+0x176dc>
   1e0d4:	cmp	w23, #0x49
   1e0d8:	b.eq	1e0ec <PyInit__decimal@@Base+0x17638>  // b.none
   1e0dc:	cmp	w23, #0x53
   1e0e0:	b.eq	1dfac <PyInit__decimal@@Base+0x174f8>  // b.none
   1e0e4:	cmp	w23, #0x69
   1e0e8:	b.ne	1e190 <PyInit__decimal@@Base+0x176dc>  // b.any
   1e0ec:	ldrb	w8, [x22, #1]
   1e0f0:	orr	w8, w8, #0x20
   1e0f4:	cmp	w8, #0x6e
   1e0f8:	b.ne	1e190 <PyInit__decimal@@Base+0x176dc>  // b.any
   1e0fc:	ldrb	w8, [x22, #2]
   1e100:	orr	w8, w8, #0x20
   1e104:	cmp	w8, #0x66
   1e108:	b.ne	1e190 <PyInit__decimal@@Base+0x176dc>  // b.any
   1e10c:	ldrb	w8, [x22, #3]
   1e110:	cbz	w8, 1e16c <PyInit__decimal@@Base+0x176b8>
   1e114:	cmp	w8, #0x49
   1e118:	b.eq	1e124 <PyInit__decimal@@Base+0x17670>  // b.none
   1e11c:	cmp	w8, #0x69
   1e120:	b.ne	1e49c <PyInit__decimal@@Base+0x179e8>  // b.any
   1e124:	ldrb	w8, [x22, #4]
   1e128:	orr	w8, w8, #0x20
   1e12c:	cmp	w8, #0x6e
   1e130:	b.ne	1e49c <PyInit__decimal@@Base+0x179e8>  // b.any
   1e134:	ldrb	w8, [x22, #5]
   1e138:	orr	w8, w8, #0x20
   1e13c:	cmp	w8, #0x69
   1e140:	b.ne	1e49c <PyInit__decimal@@Base+0x179e8>  // b.any
   1e144:	ldrb	w8, [x22, #6]
   1e148:	orr	w8, w8, #0x20
   1e14c:	cmp	w8, #0x74
   1e150:	b.ne	1e49c <PyInit__decimal@@Base+0x179e8>  // b.any
   1e154:	ldrb	w8, [x22, #7]
   1e158:	orr	w8, w8, #0x20
   1e15c:	cmp	w8, #0x79
   1e160:	b.ne	1e49c <PyInit__decimal@@Base+0x179e8>  // b.any
   1e164:	ldrb	w8, [x22, #8]
   1e168:	cbnz	w8, 1e49c <PyInit__decimal@@Base+0x179e8>
   1e16c:	mov	x0, x20
   1e170:	ldp	x20, x19, [sp, #80]
   1e174:	ldp	x22, x21, [sp, #64]
   1e178:	ldp	x24, x23, [sp, #48]
   1e17c:	ldp	x26, x25, [sp, #32]
   1e180:	ldp	x29, x30, [sp, #16]
   1e184:	mov	w2, #0x2                   	// #2
   1e188:	add	sp, sp, #0x60
   1e18c:	b	216cc <PyInit__decimal@@Base+0x1ac18>
   1e190:	mov	x24, xzr
   1e194:	mov	x26, xzr
   1e198:	mov	x25, xzr
   1e19c:	b	1e1ac <PyInit__decimal@@Base+0x176f8>
   1e1a0:	mov	x26, x22
   1e1a4:	mov	x22, x8
   1e1a8:	ldrb	w23, [x22, #1]!
   1e1ac:	and	w8, w23, #0xff
   1e1b0:	cmp	w8, #0x44
   1e1b4:	b.le	1e1f0 <PyInit__decimal@@Base+0x1773c>
   1e1b8:	cmp	w8, #0x45
   1e1bc:	b.eq	1e1c8 <PyInit__decimal@@Base+0x17714>  // b.none
   1e1c0:	cmp	w8, #0x65
   1e1c4:	b.ne	1e214 <PyInit__decimal@@Base+0x17760>  // b.any
   1e1c8:	cbnz	x26, 1e49c <PyInit__decimal@@Base+0x179e8>
   1e1cc:	mov	x8, x22
   1e1d0:	ldrb	w9, [x8, #1]!
   1e1d4:	cmp	w9, #0x2d
   1e1d8:	b.eq	1e1a0 <PyInit__decimal@@Base+0x176ec>  // b.none
   1e1dc:	cmp	w9, #0x2b
   1e1e0:	b.eq	1e1a0 <PyInit__decimal@@Base+0x176ec>  // b.none
   1e1e4:	mov	x26, x22
   1e1e8:	ldrb	w23, [x22, #1]!
   1e1ec:	b	1e1ac <PyInit__decimal@@Base+0x176f8>
   1e1f0:	cmp	w8, #0x2e
   1e1f4:	b.ne	1e210 <PyInit__decimal@@Base+0x1775c>  // b.any
   1e1f8:	orr	x8, x24, x26
   1e1fc:	cbnz	x8, 1e49c <PyInit__decimal@@Base+0x179e8>
   1e200:	mov	x24, x22
   1e204:	ldrb	w23, [x22, #1]!
   1e208:	mov	x26, xzr
   1e20c:	b	1e1ac <PyInit__decimal@@Base+0x176f8>
   1e210:	cbz	w8, 1e28c <PyInit__decimal@@Base+0x177d8>
   1e214:	bl	67c0 <__ctype_b_loc@plt>
   1e218:	ldr	x8, [x0]
   1e21c:	and	x9, x23, #0xff
   1e220:	ldrh	w9, [x8, x9, lsl #1]
   1e224:	tbz	w9, #11, 1e49c <PyInit__decimal@@Base+0x179e8>
   1e228:	cbz	x25, 1e234 <PyInit__decimal@@Base+0x17780>
   1e22c:	ldrb	w23, [x22, #1]!
   1e230:	b	1e1ac <PyInit__decimal@@Base+0x176f8>
   1e234:	cbz	x26, 1e244 <PyInit__decimal@@Base+0x17790>
   1e238:	ldrb	w23, [x22, #1]!
   1e23c:	mov	x25, xzr
   1e240:	b	1e1ac <PyInit__decimal@@Base+0x176f8>
   1e244:	and	w9, w23, #0xff
   1e248:	cmp	w9, #0x30
   1e24c:	b.ne	1e270 <PyInit__decimal@@Base+0x177bc>  // b.any
   1e250:	ldrb	w9, [x22, #1]
   1e254:	ldrh	w10, [x8, x9, lsl #1]
   1e258:	tbnz	w10, #11, 1e27c <PyInit__decimal@@Base+0x177c8>
   1e25c:	cmp	w9, #0x2e
   1e260:	b.ne	1e270 <PyInit__decimal@@Base+0x177bc>  // b.any
   1e264:	ldrb	w9, [x22, #2]
   1e268:	ldrh	w8, [x8, x9, lsl #1]
   1e26c:	tbnz	w8, #11, 1e27c <PyInit__decimal@@Base+0x177c8>
   1e270:	mov	x26, xzr
   1e274:	mov	x25, x22
   1e278:	b	1e22c <PyInit__decimal@@Base+0x17778>
   1e27c:	ldrb	w23, [x22, #1]!
   1e280:	mov	x26, xzr
   1e284:	mov	x25, xzr
   1e288:	b	1e1ac <PyInit__decimal@@Base+0x176f8>
   1e28c:	cbz	x25, 1e49c <PyInit__decimal@@Base+0x179e8>
   1e290:	cbz	x26, 1e2f8 <PyInit__decimal@@Base+0x17844>
   1e294:	add	x23, x26, #0x1
   1e298:	bl	6960 <__errno_location@plt>
   1e29c:	mov	x22, x0
   1e2a0:	str	wzr, [x0]
   1e2a4:	add	x1, sp, #0x8
   1e2a8:	mov	w2, #0xa                   	// #10
   1e2ac:	mov	x0, x23
   1e2b0:	bl	6480 <strtoll@plt>
   1e2b4:	ldr	w8, [x22]
   1e2b8:	cbz	w8, 1e374 <PyInit__decimal@@Base+0x178c0>
   1e2bc:	cmp	w8, #0x22
   1e2c0:	str	x0, [x20, #8]
   1e2c4:	b.ne	1e49c <PyInit__decimal@@Base+0x179e8>  // b.any
   1e2c8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1e2cc:	add	x8, x0, x8
   1e2d0:	cmp	x8, #0x1
   1e2d4:	b.ls	1e2fc <PyInit__decimal@@Base+0x17848>  // b.plast
   1e2d8:	b	1e49c <PyInit__decimal@@Base+0x179e8>
   1e2dc:	ldp	x20, x19, [sp, #80]
   1e2e0:	ldp	x22, x21, [sp, #64]
   1e2e4:	ldp	x24, x23, [sp, #48]
   1e2e8:	ldp	x26, x25, [sp, #32]
   1e2ec:	ldp	x29, x30, [sp, #16]
   1e2f0:	add	sp, sp, #0x60
   1e2f4:	ret
   1e2f8:	mov	x26, x22
   1e2fc:	mov	x9, #0xffffffffa763ffff    	// #-1486618625
   1e300:	movk	x9, #0xb6b3, lsl #32
   1e304:	movk	x9, #0xde0, lsl #48
   1e308:	sub	x8, x26, x25
   1e30c:	cbz	x24, 1e348 <PyInit__decimal@@Base+0x17894>
   1e310:	mvn	x10, x24
   1e314:	add	x10, x26, x10
   1e318:	cmp	x10, x9
   1e31c:	b.hi	1e49c <PyInit__decimal@@Base+0x179e8>  // b.pmore
   1e320:	ldr	x11, [x20, #8]
   1e324:	cmp	x24, x25
   1e328:	eor	x12, x10, #0x8000000000000000
   1e32c:	cset	w13, hi  // hi = pmore
   1e330:	sub	x10, x11, x10
   1e334:	cmp	x11, x12
   1e338:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   1e33c:	sub	x8, x8, x13
   1e340:	csel	x10, x11, x10, lt  // lt = tstop
   1e344:	str	x10, [x20, #8]
   1e348:	cmp	x8, x9
   1e34c:	b.hi	1e49c <PyInit__decimal@@Base+0x179e8>  // b.pmore
   1e350:	ldr	x9, [x20, #8]
   1e354:	mov	x10, #0x1                   	// #1
   1e358:	movk	x10, #0x4ec8, lsl #16
   1e35c:	movk	x10, #0x6d67, lsl #32
   1e360:	movk	x10, #0x1bc1, lsl #48
   1e364:	cmp	x9, x10
   1e368:	b.le	1e398 <PyInit__decimal@@Base+0x178e4>
   1e36c:	str	x10, [x20, #8]
   1e370:	b	1e3ac <PyInit__decimal@@Base+0x178f8>
   1e374:	ldrb	w8, [x23]
   1e378:	cbz	w8, 1e388 <PyInit__decimal@@Base+0x178d4>
   1e37c:	ldr	x8, [sp, #8]
   1e380:	ldrb	w8, [x8]
   1e384:	cbz	w8, 1e4cc <PyInit__decimal@@Base+0x17a18>
   1e388:	mov	w8, #0x16                  	// #22
   1e38c:	str	w8, [x22]
   1e390:	str	x0, [x20, #8]
   1e394:	b	1e49c <PyInit__decimal@@Base+0x179e8>
   1e398:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   1e39c:	cmp	x9, x10
   1e3a0:	b.ne	1e3ac <PyInit__decimal@@Base+0x178f8>  // b.any
   1e3a4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1e3a8:	str	x9, [x20, #8]
   1e3ac:	mov	x22, x25
   1e3b0:	mov	x9, #0x9436                	// #37942
   1e3b4:	movk	x9, #0x50d7, lsl #16
   1e3b8:	movk	x9, #0x435e, lsl #32
   1e3bc:	movk	x9, #0xd79, lsl #48
   1e3c0:	smulh	x9, x8, x9
   1e3c4:	add	x9, x9, x9, lsr #63
   1e3c8:	mov	x10, #0xffffffffffffffed    	// #-19
   1e3cc:	madd	x25, x9, x10, x8
   1e3d0:	cmp	x25, #0x0
   1e3d4:	cinc	x23, x9, ne  // ne = any
   1e3d8:	cbz	x23, 1e49c <PyInit__decimal@@Base+0x179e8>
   1e3dc:	mov	x0, x20
   1e3e0:	mov	x1, x23
   1e3e4:	mov	x2, x19
   1e3e8:	bl	20e14 <PyInit__decimal@@Base+0x1a360>
   1e3ec:	cbz	w0, 1e4c4 <PyInit__decimal@@Base+0x17a10>
   1e3f0:	ldr	x8, [x20, #40]
   1e3f4:	cmp	w25, #0x1
   1e3f8:	str	x23, [x20, #24]
   1e3fc:	b.lt	1e430 <PyInit__decimal@@Base+0x1797c>  // b.tstop
   1e400:	mov	x9, xzr
   1e404:	sub	x23, x23, #0x1
   1e408:	mov	w10, #0xa                   	// #10
   1e40c:	str	xzr, [x8, x23, lsl #3]
   1e410:	cmp	x22, x24
   1e414:	cinc	x22, x22, eq  // eq = none
   1e418:	ldrb	w11, [x22], #1
   1e41c:	subs	w25, w25, #0x1
   1e420:	madd	x9, x9, x10, x11
   1e424:	sub	x9, x9, #0x30
   1e428:	str	x9, [x8, x23, lsl #3]
   1e42c:	b.ne	1e410 <PyInit__decimal@@Base+0x1795c>  // b.any
   1e430:	cbz	x23, 1e46c <PyInit__decimal@@Base+0x179b8>
   1e434:	mov	w9, #0xa                   	// #10
   1e438:	mov	x10, xzr
   1e43c:	sub	x23, x23, #0x1
   1e440:	mov	w11, #0x13                  	// #19
   1e444:	str	xzr, [x8, x23, lsl #3]
   1e448:	cmp	x22, x24
   1e44c:	cinc	x22, x22, eq  // eq = none
   1e450:	ldrb	w12, [x22], #1
   1e454:	subs	w11, w11, #0x1
   1e458:	madd	x10, x10, x9, x12
   1e45c:	sub	x10, x10, #0x30
   1e460:	str	x10, [x8, x23, lsl #3]
   1e464:	b.ne	1e448 <PyInit__decimal@@Base+0x17994>  // b.any
   1e468:	cbnz	x23, 1e438 <PyInit__decimal@@Base+0x17984>
   1e46c:	mov	x0, x20
   1e470:	bl	21070 <PyInit__decimal@@Base+0x1a5bc>
   1e474:	mov	x0, x20
   1e478:	mov	x1, x21
   1e47c:	mov	x2, x19
   1e480:	ldp	x20, x19, [sp, #80]
   1e484:	ldp	x22, x21, [sp, #64]
   1e488:	ldp	x24, x23, [sp, #48]
   1e48c:	ldp	x26, x25, [sp, #32]
   1e490:	ldp	x29, x30, [sp, #16]
   1e494:	add	sp, sp, #0x60
   1e498:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   1e49c:	mov	w1, #0x2                   	// #2
   1e4a0:	mov	x0, x20
   1e4a4:	mov	x2, x19
   1e4a8:	ldp	x20, x19, [sp, #80]
   1e4ac:	ldp	x22, x21, [sp, #64]
   1e4b0:	ldp	x24, x23, [sp, #48]
   1e4b4:	ldp	x26, x25, [sp, #32]
   1e4b8:	ldp	x29, x30, [sp, #16]
   1e4bc:	add	sp, sp, #0x60
   1e4c0:	b	21760 <PyInit__decimal@@Base+0x1acac>
   1e4c4:	mov	w1, #0x200                 	// #512
   1e4c8:	b	1e4a0 <PyInit__decimal@@Base+0x179ec>
   1e4cc:	str	x0, [x20, #8]
   1e4d0:	b	1e2fc <PyInit__decimal@@Base+0x17848>
   1e4d4:	sub	sp, sp, #0x20
   1e4d8:	stp	x29, x30, [sp, #16]
   1e4dc:	add	x29, sp, #0x10
   1e4e0:	cmp	w1, #0x0
   1e4e4:	mov	x8, x0
   1e4e8:	cset	w9, ne  // ne = any
   1e4ec:	orr	w2, w9, #0x2
   1e4f0:	add	x0, sp, #0x8
   1e4f4:	mov	w3, #0x1                   	// #1
   1e4f8:	mov	x1, x8
   1e4fc:	bl	1e510 <PyInit__decimal@@Base+0x17a5c>
   1e500:	ldr	x0, [sp, #8]
   1e504:	ldp	x29, x30, [sp, #16]
   1e508:	add	sp, sp, #0x20
   1e50c:	ret
   1e510:	stp	x29, x30, [sp, #-96]!
   1e514:	str	x27, [sp, #16]
   1e518:	stp	x26, x25, [sp, #32]
   1e51c:	stp	x24, x23, [sp, #48]
   1e520:	stp	x22, x21, [sp, #64]
   1e524:	stp	x20, x19, [sp, #80]
   1e528:	mov	x29, sp
   1e52c:	mov	x19, x0
   1e530:	mov	x0, x1
   1e534:	mov	x22, x3
   1e538:	mov	w20, w2
   1e53c:	mov	x21, x1
   1e540:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
   1e544:	cbz	w0, 1e594 <PyInit__decimal@@Base+0x17ae0>
   1e548:	mov	x0, x21
   1e54c:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
   1e550:	cbz	w0, 1e56c <PyInit__decimal@@Base+0x17ab8>
   1e554:	ldr	x8, [x21, #24]
   1e558:	cmp	x8, #0x1
   1e55c:	b.lt	1e56c <PyInit__decimal@@Base+0x17ab8>  // b.tstop
   1e560:	ldr	x8, [x21, #16]
   1e564:	add	x0, x8, #0xb
   1e568:	b	1e570 <PyInit__decimal@@Base+0x17abc>
   1e56c:	mov	w0, #0xb                   	// #11
   1e570:	mov	w1, #0x1                   	// #1
   1e574:	bl	2030c <PyInit__decimal@@Base+0x19858>
   1e578:	cbz	x0, 1e65c <PyInit__decimal@@Base+0x17ba8>
   1e57c:	mov	x22, x0
   1e580:	mov	x0, x21
   1e584:	bl	20bf0 <PyInit__decimal@@Base+0x1a13c>
   1e588:	cbz	w0, 1e604 <PyInit__decimal@@Base+0x17b50>
   1e58c:	mov	w8, #0x2d                  	// #45
   1e590:	b	1e680 <PyInit__decimal@@Base+0x17bcc>
   1e594:	ldp	x8, x9, [x21, #8]
   1e598:	add	x26, x8, x9
   1e59c:	tbz	w20, #3, 1e5a8 <PyInit__decimal@@Base+0x17af4>
   1e5a0:	mov	x27, x22
   1e5a4:	b	1e61c <PyInit__decimal@@Base+0x17b68>
   1e5a8:	tbnz	w20, #4, 1e618 <PyInit__decimal@@Base+0x17b64>
   1e5ac:	cmp	x8, #0x0
   1e5b0:	b.gt	1e5c0 <PyInit__decimal@@Base+0x17b0c>
   1e5b4:	cmn	x26, #0x6
   1e5b8:	mov	x27, x26
   1e5bc:	b.gt	1e61c <PyInit__decimal@@Base+0x17b68>
   1e5c0:	tbz	w20, #2, 1e5a0 <PyInit__decimal@@Base+0x17aec>
   1e5c4:	mov	x0, x21
   1e5c8:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
   1e5cc:	cbz	w0, 1e9c4 <PyInit__decimal@@Base+0x17f10>
   1e5d0:	ldr	x8, [x21, #8]
   1e5d4:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1e5d8:	movk	x9, #0x5556
   1e5dc:	add	x8, x8, #0x2
   1e5e0:	smulh	x9, x8, x9
   1e5e4:	add	x9, x9, x9, lsr #63
   1e5e8:	add	x9, x9, x9, lsl #1
   1e5ec:	sub	x8, x8, x9
   1e5f0:	add	x9, x8, #0x3
   1e5f4:	cmp	x8, #0x0
   1e5f8:	csel	x8, x9, x8, lt  // lt = tstop
   1e5fc:	sub	x27, x8, #0x1
   1e600:	b	1e61c <PyInit__decimal@@Base+0x17b68>
   1e604:	tbnz	w20, #6, 1e67c <PyInit__decimal@@Base+0x17bc8>
   1e608:	mov	x23, x22
   1e60c:	tbz	w20, #7, 1e688 <PyInit__decimal@@Base+0x17bd4>
   1e610:	mov	w8, #0x2b                  	// #43
   1e614:	b	1e680 <PyInit__decimal@@Base+0x17bcc>
   1e618:	mov	x27, x26
   1e61c:	ldr	x8, [x21, #16]
   1e620:	mov	w1, #0x1                   	// #1
   1e624:	subs	x9, x8, x27
   1e628:	add	x9, x9, #0x2
   1e62c:	csel	x8, x8, x27, gt
   1e630:	cmp	x27, #0x1
   1e634:	csel	x8, x9, x8, lt  // lt = tstop
   1e638:	add	x0, x8, #0x1a
   1e63c:	bl	2030c <PyInit__decimal@@Base+0x19858>
   1e640:	cbz	x0, 1e65c <PyInit__decimal@@Base+0x17ba8>
   1e644:	mov	x22, x0
   1e648:	mov	x0, x21
   1e64c:	bl	20bf0 <PyInit__decimal@@Base+0x1a13c>
   1e650:	cbz	w0, 1e668 <PyInit__decimal@@Base+0x17bb4>
   1e654:	mov	w8, #0x2d                  	// #45
   1e658:	b	1e760 <PyInit__decimal@@Base+0x17cac>
   1e65c:	str	xzr, [x19]
   1e660:	mov	x0, #0xffffffffffffffff    	// #-1
   1e664:	b	1e9a8 <PyInit__decimal@@Base+0x17ef4>
   1e668:	tbnz	w20, #6, 1e75c <PyInit__decimal@@Base+0x17ca8>
   1e66c:	mov	x23, x22
   1e670:	tbz	w20, #7, 1e768 <PyInit__decimal@@Base+0x17cb4>
   1e674:	mov	w8, #0x2b                  	// #43
   1e678:	b	1e760 <PyInit__decimal@@Base+0x17cac>
   1e67c:	mov	w8, #0x20                  	// #32
   1e680:	mov	x23, x22
   1e684:	strb	w8, [x23], #1
   1e688:	mov	x0, x21
   1e68c:	bl	20be4 <PyInit__decimal@@Base+0x1a130>
   1e690:	cbz	w0, 1e6b4 <PyInit__decimal@@Base+0x17c00>
   1e694:	mov	x0, x21
   1e698:	bl	20c0c <PyInit__decimal@@Base+0x1a158>
   1e69c:	cbz	w0, 1e6d8 <PyInit__decimal@@Base+0x17c24>
   1e6a0:	mov	w8, #0x614e                	// #24910
   1e6a4:	movk	w8, #0x4e, lsl #16
   1e6a8:	str	w8, [x23]
   1e6ac:	mov	w8, #0x3                   	// #3
   1e6b0:	b	1e6ec <PyInit__decimal@@Base+0x17c38>
   1e6b4:	mov	x0, x21
   1e6b8:	bl	20bd8 <PyInit__decimal@@Base+0x1a124>
   1e6bc:	cbz	w0, 1e9f4 <PyInit__decimal@@Base+0x17f40>
   1e6c0:	adrp	x8, 40000 <PyInit__decimal@@Base+0x3954c>
   1e6c4:	add	x8, x8, #0xcf
   1e6c8:	ldr	x8, [x8]
   1e6cc:	str	x8, [x23]
   1e6d0:	strb	wzr, [x23, #8]!
   1e6d4:	b	1e990 <PyInit__decimal@@Base+0x17edc>
   1e6d8:	mov	w8, #0x4e73                	// #20083
   1e6dc:	movk	w8, #0x4e61, lsl #16
   1e6e0:	str	w8, [x23]
   1e6e4:	mov	w8, #0x4                   	// #4
   1e6e8:	strb	wzr, [x23, #4]
   1e6ec:	ldr	x9, [x21, #24]
   1e6f0:	add	x23, x23, x8
   1e6f4:	cmp	x9, #0x1
   1e6f8:	b.lt	1e990 <PyInit__decimal@@Base+0x17edc>  // b.tstop
   1e6fc:	mov	x0, x21
   1e700:	bl	208e8 <PyInit__decimal@@Base+0x19e34>
   1e704:	mov	x24, x0
   1e708:	bl	20770 <PyInit__decimal@@Base+0x19cbc>
   1e70c:	mov	w2, w0
   1e710:	mov	x0, x23
   1e714:	mov	x1, x24
   1e718:	mov	x3, xzr
   1e71c:	bl	1fab8 <PyInit__decimal@@Base+0x19004>
   1e720:	ldr	x8, [x21, #24]
   1e724:	mov	x23, x0
   1e728:	subs	x24, x8, #0x2
   1e72c:	b.mi	1e990 <PyInit__decimal@@Base+0x17edc>  // b.first
   1e730:	ldr	x8, [x21, #40]
   1e734:	mov	w2, #0x13                  	// #19
   1e738:	mov	x0, x23
   1e73c:	mov	x3, xzr
   1e740:	ldr	x1, [x8, x24, lsl #3]
   1e744:	bl	1fab8 <PyInit__decimal@@Base+0x19004>
   1e748:	mov	x23, x0
   1e74c:	cmp	x24, #0x0
   1e750:	sub	x24, x24, #0x1
   1e754:	b.gt	1e730 <PyInit__decimal@@Base+0x17c7c>
   1e758:	b	1e990 <PyInit__decimal@@Base+0x17edc>
   1e75c:	mov	w8, #0x20                  	// #32
   1e760:	mov	x23, x22
   1e764:	strb	w8, [x23], #1
   1e768:	cmp	x27, #0x0
   1e76c:	b.le	1e7e0 <PyInit__decimal@@Base+0x17d2c>
   1e770:	ldr	x8, [x21, #16]
   1e774:	cmp	x27, x8
   1e778:	b.ge	1e814 <PyInit__decimal@@Base+0x17d60>  // b.tcont
   1e77c:	mov	x0, x21
   1e780:	add	x24, x23, x27
   1e784:	bl	208e8 <PyInit__decimal@@Base+0x19e34>
   1e788:	mov	x25, x0
   1e78c:	bl	20770 <PyInit__decimal@@Base+0x19cbc>
   1e790:	mov	w2, w0
   1e794:	mov	x0, x23
   1e798:	mov	x1, x25
   1e79c:	mov	x3, x24
   1e7a0:	bl	1fab8 <PyInit__decimal@@Base+0x19004>
   1e7a4:	ldr	x8, [x21, #24]
   1e7a8:	mov	x23, x0
   1e7ac:	subs	x25, x8, #0x2
   1e7b0:	b.mi	1e930 <PyInit__decimal@@Base+0x17e7c>  // b.first
   1e7b4:	ldr	x8, [x21, #40]
   1e7b8:	mov	w2, #0x13                  	// #19
   1e7bc:	mov	x0, x23
   1e7c0:	mov	x3, x24
   1e7c4:	ldr	x1, [x8, x25, lsl #3]
   1e7c8:	bl	1fab8 <PyInit__decimal@@Base+0x19004>
   1e7cc:	mov	x23, x0
   1e7d0:	cmp	x25, #0x0
   1e7d4:	sub	x25, x25, #0x1
   1e7d8:	b.gt	1e7b4 <PyInit__decimal@@Base+0x17d00>
   1e7dc:	b	1e930 <PyInit__decimal@@Base+0x17e7c>
   1e7e0:	neg	x24, x27
   1e7e4:	mov	w8, #0x2e30                	// #11824
   1e7e8:	cmp	x24, #0x1
   1e7ec:	strh	w8, [x23], #2
   1e7f0:	b.lt	1e8d4 <PyInit__decimal@@Base+0x17e20>  // b.tstop
   1e7f4:	mov	w1, #0x30                  	// #48
   1e7f8:	mov	x0, x23
   1e7fc:	mov	x2, x24
   1e800:	bl	65b0 <memset@plt>
   1e804:	cmp	x24, #0x1
   1e808:	b.ne	1e8a8 <PyInit__decimal@@Base+0x17df4>  // b.any
   1e80c:	mov	x8, xzr
   1e810:	b	1e8c4 <PyInit__decimal@@Base+0x17e10>
   1e814:	mov	x0, x21
   1e818:	bl	208e8 <PyInit__decimal@@Base+0x19e34>
   1e81c:	mov	x24, x0
   1e820:	bl	20770 <PyInit__decimal@@Base+0x19cbc>
   1e824:	mov	w2, w0
   1e828:	mov	x0, x23
   1e82c:	mov	x1, x24
   1e830:	mov	x3, xzr
   1e834:	bl	1fab8 <PyInit__decimal@@Base+0x19004>
   1e838:	ldr	x8, [x21, #24]
   1e83c:	mov	x23, x0
   1e840:	subs	x24, x8, #0x2
   1e844:	b.mi	1e870 <PyInit__decimal@@Base+0x17dbc>  // b.first
   1e848:	ldr	x8, [x21, #40]
   1e84c:	mov	w2, #0x13                  	// #19
   1e850:	mov	x0, x23
   1e854:	mov	x3, xzr
   1e858:	ldr	x1, [x8, x24, lsl #3]
   1e85c:	bl	1fab8 <PyInit__decimal@@Base+0x19004>
   1e860:	mov	x23, x0
   1e864:	cmp	x24, #0x0
   1e868:	sub	x24, x24, #0x1
   1e86c:	b.gt	1e848 <PyInit__decimal@@Base+0x17d94>
   1e870:	ldr	x8, [x21, #16]
   1e874:	sub	x8, x27, x8
   1e878:	cmp	x8, #0x1
   1e87c:	b.lt	1e930 <PyInit__decimal@@Base+0x17e7c>  // b.tstop
   1e880:	mov	x8, xzr
   1e884:	mov	w9, #0x30                  	// #48
   1e888:	strb	w9, [x23, x8]
   1e88c:	ldr	x10, [x21, #16]
   1e890:	add	x8, x8, #0x1
   1e894:	sub	x10, x27, x10
   1e898:	cmp	x8, x10
   1e89c:	b.lt	1e888 <PyInit__decimal@@Base+0x17dd4>  // b.tstop
   1e8a0:	add	x23, x23, x8
   1e8a4:	b	1e930 <PyInit__decimal@@Base+0x17e7c>
   1e8a8:	and	x8, x24, #0xfffffffffffffffe
   1e8ac:	add	x23, x23, x8
   1e8b0:	mov	x9, x8
   1e8b4:	subs	x9, x9, #0x2
   1e8b8:	b.ne	1e8b4 <PyInit__decimal@@Base+0x17e00>  // b.any
   1e8bc:	cmp	x8, x24
   1e8c0:	b.eq	1e8d4 <PyInit__decimal@@Base+0x17e20>  // b.none
   1e8c4:	sub	x8, x24, x8
   1e8c8:	subs	x8, x8, #0x1
   1e8cc:	add	x23, x23, #0x1
   1e8d0:	b.ne	1e8c8 <PyInit__decimal@@Base+0x17e14>  // b.any
   1e8d4:	mov	x0, x21
   1e8d8:	bl	208e8 <PyInit__decimal@@Base+0x19e34>
   1e8dc:	mov	x24, x0
   1e8e0:	bl	20770 <PyInit__decimal@@Base+0x19cbc>
   1e8e4:	mov	w2, w0
   1e8e8:	mov	x0, x23
   1e8ec:	mov	x1, x24
   1e8f0:	mov	x3, xzr
   1e8f4:	bl	1fab8 <PyInit__decimal@@Base+0x19004>
   1e8f8:	ldr	x8, [x21, #24]
   1e8fc:	mov	x23, x0
   1e900:	subs	x24, x8, #0x2
   1e904:	b.mi	1e930 <PyInit__decimal@@Base+0x17e7c>  // b.first
   1e908:	ldr	x8, [x21, #40]
   1e90c:	mov	w2, #0x13                  	// #19
   1e910:	mov	x0, x23
   1e914:	mov	x3, xzr
   1e918:	ldr	x1, [x8, x24, lsl #3]
   1e91c:	bl	1fab8 <PyInit__decimal@@Base+0x19004>
   1e920:	mov	x23, x0
   1e924:	cmp	x24, #0x0
   1e928:	sub	x24, x24, #0x1
   1e92c:	b.gt	1e908 <PyInit__decimal@@Base+0x17e54>
   1e930:	tbnz	w20, #3, 1e93c <PyInit__decimal@@Base+0x17e88>
   1e934:	cmp	x26, x27
   1e938:	b.eq	1e990 <PyInit__decimal@@Base+0x17edc>  // b.none
   1e93c:	tst	w20, #0x1
   1e940:	mov	w8, #0x45                  	// #69
   1e944:	mov	w9, #0x65                  	// #101
   1e948:	sub	x10, x26, x27
   1e94c:	csel	w8, w9, w8, eq  // eq = none
   1e950:	cmp	x10, #0x0
   1e954:	mov	w11, #0x2b                  	// #43
   1e958:	mov	w12, #0x2d                  	// #45
   1e95c:	cneg	x21, x10, mi  // mi = first
   1e960:	strb	w8, [x23]
   1e964:	csel	w8, w12, w11, lt  // lt = tstop
   1e968:	mov	x0, x21
   1e96c:	add	x24, x23, #0x2
   1e970:	strb	w8, [x23, #1]
   1e974:	bl	20770 <PyInit__decimal@@Base+0x19cbc>
   1e978:	mov	w2, w0
   1e97c:	mov	x0, x24
   1e980:	mov	x1, x21
   1e984:	mov	x3, xzr
   1e988:	bl	1fab8 <PyInit__decimal@@Base+0x19004>
   1e98c:	mov	x23, x0
   1e990:	tbz	w20, #5, 1e99c <PyInit__decimal@@Base+0x17ee8>
   1e994:	mov	w8, #0x25                  	// #37
   1e998:	strb	w8, [x23], #1
   1e99c:	sub	x0, x23, x22
   1e9a0:	strb	wzr, [x23]
   1e9a4:	str	x22, [x19]
   1e9a8:	ldp	x20, x19, [sp, #80]
   1e9ac:	ldp	x22, x21, [sp, #64]
   1e9b0:	ldp	x24, x23, [sp, #48]
   1e9b4:	ldp	x26, x25, [sp, #32]
   1e9b8:	ldr	x27, [sp, #16]
   1e9bc:	ldp	x29, x30, [sp], #96
   1e9c0:	ret
   1e9c4:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1e9c8:	sub	x8, x26, #0x1
   1e9cc:	movk	x9, #0x5556
   1e9d0:	smulh	x9, x8, x9
   1e9d4:	add	x9, x9, x9, lsr #63
   1e9d8:	add	x9, x9, x9, lsl #1
   1e9dc:	sub	x8, x8, x9
   1e9e0:	add	x9, x8, #0x3
   1e9e4:	cmp	x8, #0x0
   1e9e8:	csel	x8, x9, x8, lt  // lt = tstop
   1e9ec:	add	x27, x8, x22
   1e9f0:	b	1e61c <PyInit__decimal@@Base+0x17b68>
   1e9f4:	bl	6700 <abort@plt>
   1e9f8:	sub	sp, sp, #0x20
   1e9fc:	stp	x29, x30, [sp, #16]
   1ea00:	add	x29, sp, #0x10
   1ea04:	cmp	w1, #0x0
   1ea08:	mov	x8, x0
   1ea0c:	cset	w9, ne  // ne = any
   1ea10:	orr	w2, w9, #0x4
   1ea14:	add	x0, sp, #0x8
   1ea18:	mov	w3, #0x1                   	// #1
   1ea1c:	mov	x1, x8
   1ea20:	bl	1e510 <PyInit__decimal@@Base+0x17a5c>
   1ea24:	ldr	x0, [sp, #8]
   1ea28:	ldp	x29, x30, [sp, #16]
   1ea2c:	add	sp, sp, #0x20
   1ea30:	ret
   1ea34:	cmp	w2, #0x0
   1ea38:	cset	w8, ne  // ne = any
   1ea3c:	orr	w2, w8, #0x2
   1ea40:	mov	w3, #0x1                   	// #1
   1ea44:	b	1e510 <PyInit__decimal@@Base+0x17a5c>
   1ea48:	cmp	w2, #0x0
   1ea4c:	cset	w8, ne  // ne = any
   1ea50:	orr	w2, w8, #0x4
   1ea54:	mov	w3, #0x1                   	// #1
   1ea58:	b	1e510 <PyInit__decimal@@Base+0x17a5c>
   1ea5c:	stp	x29, x30, [sp, #-32]!
   1ea60:	str	x19, [sp, #16]
   1ea64:	mov	x29, sp
   1ea68:	mov	x19, x0
   1ea6c:	ldr	x0, [x0, #24]
   1ea70:	bl	6420 <strlen@plt>
   1ea74:	sub	x8, x0, #0x1
   1ea78:	cmp	x8, #0x3
   1ea7c:	b.ls	1ea88 <PyInit__decimal@@Base+0x17fd4>  // b.plast
   1ea80:	mov	w0, #0xffffffff            	// #-1
   1ea84:	b	1ea98 <PyInit__decimal@@Base+0x17fe4>
   1ea88:	ldr	x0, [x19, #32]
   1ea8c:	bl	6420 <strlen@plt>
   1ea90:	cmp	x0, #0x4
   1ea94:	csetm	w0, hi  // hi = pmore
   1ea98:	ldr	x19, [sp, #16]
   1ea9c:	ldp	x29, x30, [sp], #32
   1eaa0:	ret
   1eaa4:	sub	sp, sp, #0x50
   1eaa8:	stp	x29, x30, [sp, #32]
   1eaac:	stp	x22, x21, [sp, #48]
   1eab0:	stp	x20, x19, [sp, #64]
   1eab4:	add	x29, sp, #0x20
   1eab8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1eabc:	cmp	w2, #0x0
   1eac0:	mov	w9, #0x47                  	// #71
   1eac4:	ldr	q0, [x8, #1456]
   1eac8:	mov	w8, #0x67                  	// #103
   1eacc:	csel	w8, w8, w9, eq  // eq = none
   1ead0:	mov	w9, #0x2d3e                	// #11582
   1ead4:	stur	x1, [x29, #-8]
   1ead8:	sturh	w9, [x0, #17]
   1eadc:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1eae0:	add	x9, x9, #0x636
   1eae4:	stp	x9, x9, [x0, #24]
   1eae8:	strb	w8, [x0, #16]
   1eaec:	str	q0, [x0]
   1eaf0:	str	x9, [x0, #40]
   1eaf4:	ldrb	w10, [x1]
   1eaf8:	mov	x20, x1
   1eafc:	mov	x19, x0
   1eb00:	add	x8, x0, #0x13
   1eb04:	cbz	w10, 1eb20 <PyInit__decimal@@Base+0x1806c>
   1eb08:	sxtb	w9, w10
   1eb0c:	tbnz	w9, #31, 1ed14 <PyInit__decimal@@Base+0x18260>
   1eb10:	strb	w10, [x19, #19]
   1eb14:	add	x8, x19, #0x14
   1eb18:	mov	w9, #0x1                   	// #1
   1eb1c:	b	1eb24 <PyInit__decimal@@Base+0x18070>
   1eb20:	mov	w9, wzr
   1eb24:	strb	wzr, [x8]
   1eb28:	ldrb	w8, [x20]
   1eb2c:	cbz	w8, 1eb64 <PyInit__decimal@@Base+0x180b0>
   1eb30:	add	x8, x20, x9
   1eb34:	ldrb	w22, [x8]
   1eb38:	sub	w9, w22, #0x3c
   1eb3c:	cmp	w9, #0x22
   1eb40:	b.hi	1eb64 <PyInit__decimal@@Base+0x180b0>  // b.pmore
   1eb44:	mov	w10, #0x1                   	// #1
   1eb48:	lsl	x9, x10, x9
   1eb4c:	mov	x10, #0x7                   	// #7
   1eb50:	movk	x10, #0x4, lsl #32
   1eb54:	tst	x9, x10
   1eb58:	b.eq	1eb64 <PyInit__decimal@@Base+0x180b0>  // b.none
   1eb5c:	mov	x20, x8
   1eb60:	b	1eb98 <PyInit__decimal@@Base+0x180e4>
   1eb64:	mov	w8, #0x20                  	// #32
   1eb68:	sturh	w8, [x19, #19]
   1eb6c:	ldrb	w22, [x20]
   1eb70:	mov	w8, wzr
   1eb74:	sub	w9, w22, #0x3c
   1eb78:	cmp	w9, #0x22
   1eb7c:	b.hi	1ebb0 <PyInit__decimal@@Base+0x180fc>  // b.pmore
   1eb80:	mov	w10, #0x1                   	// #1
   1eb84:	lsl	x9, x10, x9
   1eb88:	mov	x10, #0x7                   	// #7
   1eb8c:	movk	x10, #0x4, lsl #32
   1eb90:	tst	x9, x10
   1eb94:	b.eq	1ebb0 <PyInit__decimal@@Base+0x180fc>  // b.none
   1eb98:	add	x9, x20, #0x1
   1eb9c:	stur	x9, [x29, #-8]
   1eba0:	strb	w22, [x19, #17]
   1eba4:	ldrb	w22, [x20, #1]
   1eba8:	mov	w8, #0x1                   	// #1
   1ebac:	mov	x20, x9
   1ebb0:	cmp	w22, #0x2d
   1ebb4:	b.hi	1ebe0 <PyInit__decimal@@Base+0x1812c>  // b.pmore
   1ebb8:	mov	w9, #0x1                   	// #1
   1ebbc:	lsl	x9, x9, x22
   1ebc0:	mov	x10, #0x280100000000        	// #43984760078336
   1ebc4:	tst	x9, x10
   1ebc8:	b.eq	1ebe0 <PyInit__decimal@@Base+0x1812c>  // b.none
   1ebcc:	add	x9, x20, #0x1
   1ebd0:	stur	x9, [x29, #-8]
   1ebd4:	strb	w22, [x19, #18]
   1ebd8:	ldrb	w22, [x20, #1]
   1ebdc:	mov	x20, x9
   1ebe0:	cmp	w22, #0x30
   1ebe4:	b.ne	1ec10 <PyInit__decimal@@Base+0x1815c>  // b.any
   1ebe8:	cbnz	w8, 1ed0c <PyInit__decimal@@Base+0x18258>
   1ebec:	mov	w8, #0x7a                  	// #122
   1ebf0:	add	x9, x20, #0x1
   1ebf4:	strb	w8, [x19, #17]
   1ebf8:	stur	x9, [x29, #-8]
   1ebfc:	ldrb	w8, [x20]
   1ec00:	strb	wzr, [x19, #20]
   1ec04:	strb	w8, [x19, #19]
   1ec08:	ldrb	w22, [x20, #1]
   1ec0c:	mov	x20, x9
   1ec10:	bl	67c0 <__ctype_b_loc@plt>
   1ec14:	ldr	x8, [x0]
   1ec18:	mov	x21, x0
   1ec1c:	ldrh	w8, [x8, w22, uxtw #1]
   1ec20:	tbnz	w8, #11, 1ed04 <PyInit__decimal@@Base+0x18250>
   1ec24:	cmp	w22, #0x2c
   1ec28:	b.ne	1ec5c <PyInit__decimal@@Base+0x181a8>  // b.any
   1ec2c:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   1ec30:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1ec34:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   1ec38:	add	x8, x8, #0x630
   1ec3c:	add	x9, x9, #0x632
   1ec40:	add	x10, x10, #0x634
   1ec44:	add	x11, x20, #0x1
   1ec48:	stp	x8, x9, [x19, #24]
   1ec4c:	str	x10, [x19, #40]
   1ec50:	stur	x11, [x29, #-8]
   1ec54:	ldrb	w22, [x20, #1]
   1ec58:	mov	x20, x11
   1ec5c:	cmp	w22, #0x2e
   1ec60:	b.ne	1ecbc <PyInit__decimal@@Base+0x18208>  // b.any
   1ec64:	add	x22, x20, #0x1
   1ec68:	stur	x22, [x29, #-8]
   1ec6c:	ldr	x8, [x21]
   1ec70:	ldrb	w9, [x20, #1]
   1ec74:	ldrh	w8, [x8, x9, lsl #1]
   1ec78:	tbz	w8, #11, 1ed0c <PyInit__decimal@@Base+0x18258>
   1ec7c:	bl	6960 <__errno_location@plt>
   1ec80:	mov	x20, x0
   1ec84:	str	wzr, [x0]
   1ec88:	sub	x1, x29, #0x8
   1ec8c:	mov	w2, #0xa                   	// #10
   1ec90:	mov	x0, x22
   1ec94:	bl	6480 <strtoll@plt>
   1ec98:	str	x0, [x19, #8]
   1ec9c:	ldr	w8, [x20]
   1eca0:	mov	w0, wzr
   1eca4:	cmp	w8, #0x16
   1eca8:	b.eq	1eee4 <PyInit__decimal@@Base+0x18430>  // b.none
   1ecac:	cmp	w8, #0x22
   1ecb0:	b.eq	1eee4 <PyInit__decimal@@Base+0x18430>  // b.none
   1ecb4:	ldur	x20, [x29, #-8]
   1ecb8:	ldrb	w22, [x20]
   1ecbc:	sub	w8, w22, #0x25
   1ecc0:	cmp	w8, #0x49
   1ecc4:	b.hi	1ecf4 <PyInit__decimal@@Base+0x18240>  // b.pmore
   1ecc8:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1eccc:	add	x9, x9, #0x5c0
   1ecd0:	adr	x10, 1ece0 <PyInit__decimal@@Base+0x1822c>
   1ecd4:	ldrb	w11, [x9, x8]
   1ecd8:	add	x10, x10, x11, lsl #2
   1ecdc:	br	x10
   1ece0:	add	x8, x20, #0x1
   1ece4:	stur	x8, [x29, #-8]
   1ece8:	ldrb	w9, [x20]
   1ecec:	mov	x20, x8
   1ecf0:	strb	w9, [x19, #16]
   1ecf4:	ldrb	w8, [x20]
   1ecf8:	cmp	w8, #0x0
   1ecfc:	cset	w0, eq  // eq = none
   1ed00:	b	1eee4 <PyInit__decimal@@Base+0x18430>
   1ed04:	cmp	w22, #0x30
   1ed08:	b.ne	1ed2c <PyInit__decimal@@Base+0x18278>  // b.any
   1ed0c:	mov	w0, wzr
   1ed10:	b	1eee4 <PyInit__decimal@@Base+0x18430>
   1ed14:	add	w9, w10, #0x3e
   1ed18:	and	w9, w9, #0xff
   1ed1c:	cmp	w9, #0x1e
   1ed20:	b.cs	1ed78 <PyInit__decimal@@Base+0x182c4>  // b.hs, b.nlast
   1ed24:	mov	w9, #0x2                   	// #2
   1ed28:	b	1ee2c <PyInit__decimal@@Base+0x18378>
   1ed2c:	bl	6960 <__errno_location@plt>
   1ed30:	mov	x22, x0
   1ed34:	str	wzr, [x0]
   1ed38:	sub	x1, x29, #0x8
   1ed3c:	mov	w2, #0xa                   	// #10
   1ed40:	mov	x0, x20
   1ed44:	bl	6480 <strtoll@plt>
   1ed48:	str	x0, [x19]
   1ed4c:	ldr	w8, [x22]
   1ed50:	mov	w0, wzr
   1ed54:	cmp	w8, #0x16
   1ed58:	b.eq	1eee4 <PyInit__decimal@@Base+0x18430>  // b.none
   1ed5c:	cmp	w8, #0x22
   1ed60:	b.eq	1eee4 <PyInit__decimal@@Base+0x18430>  // b.none
   1ed64:	ldur	x20, [x29, #-8]
   1ed68:	ldrb	w22, [x20]
   1ed6c:	cmp	w22, #0x2c
   1ed70:	b.eq	1ec2c <PyInit__decimal@@Base+0x18178>  // b.none
   1ed74:	b	1ec5c <PyInit__decimal@@Base+0x181a8>
   1ed78:	cmp	w10, #0xe0
   1ed7c:	b.ne	1ed90 <PyInit__decimal@@Base+0x182dc>  // b.any
   1ed80:	mov	w9, #0x3                   	// #3
   1ed84:	mov	w11, #0xbf                  	// #191
   1ed88:	mov	w12, #0xa0                  	// #160
   1ed8c:	b	1ee34 <PyInit__decimal@@Base+0x18380>
   1ed90:	cmp	w10, #0xed
   1ed94:	b.cc	1ee28 <PyInit__decimal@@Base+0x18374>  // b.lo, b.ul, b.last
   1ed98:	cmp	w10, #0xed
   1ed9c:	b.ne	1ee20 <PyInit__decimal@@Base+0x1836c>  // b.any
   1eda0:	mov	w9, #0x3                   	// #3
   1eda4:	mov	w11, #0x9f                  	// #159
   1eda8:	b	1ee30 <PyInit__decimal@@Base+0x1837c>
   1edac:	ldr	x8, [x19, #32]
   1edb0:	ldrb	w8, [x8]
   1edb4:	cbnz	w8, 1ed0c <PyInit__decimal@@Base+0x18258>
   1edb8:	add	x21, x20, #0x1
   1edbc:	stur	x21, [x29, #-8]
   1edc0:	ldrb	w8, [x20]
   1edc4:	mov	w9, #0x67                  	// #103
   1edc8:	cmp	w8, #0x4e
   1edcc:	mov	w8, #0x47                  	// #71
   1edd0:	csel	w8, w8, w9, eq  // eq = none
   1edd4:	strb	w8, [x19, #16]
   1edd8:	bl	6570 <localeconv@plt>
   1eddc:	ldr	x8, [x0]
   1ede0:	str	x8, [x19, #24]
   1ede4:	ldur	q0, [x0, #8]
   1ede8:	mov	x0, x8
   1edec:	str	q0, [sp]
   1edf0:	str	q0, [x19, #32]
   1edf4:	bl	6420 <strlen@plt>
   1edf8:	sub	x8, x0, #0x1
   1edfc:	cmp	x8, #0x3
   1ee00:	b.hi	1ed0c <PyInit__decimal@@Base+0x18258>  // b.pmore
   1ee04:	ldr	q0, [sp]
   1ee08:	fmov	x0, d0
   1ee0c:	bl	6420 <strlen@plt>
   1ee10:	cmp	x0, #0x4
   1ee14:	mov	x20, x21
   1ee18:	b.hi	1ed0c <PyInit__decimal@@Base+0x18258>  // b.pmore
   1ee1c:	b	1ecf4 <PyInit__decimal@@Base+0x18240>
   1ee20:	cmp	w10, #0xf0
   1ee24:	b.cs	1eea0 <PyInit__decimal@@Base+0x183ec>  // b.hs, b.nlast
   1ee28:	mov	w9, #0x3                   	// #3
   1ee2c:	mov	w11, #0xbf                  	// #191
   1ee30:	mov	w12, #0x80                  	// #128
   1ee34:	strb	w10, [x8]
   1ee38:	ldrb	w10, [x20, #1]
   1ee3c:	cmp	w12, w10
   1ee40:	b.hi	1eedc <PyInit__decimal@@Base+0x18428>  // b.pmore
   1ee44:	cmp	w11, w10
   1ee48:	b.cc	1eedc <PyInit__decimal@@Base+0x18428>  // b.lo, b.ul, b.last
   1ee4c:	cmp	w9, #0x3
   1ee50:	strb	w10, [x19, #20]
   1ee54:	b.cc	1ee90 <PyInit__decimal@@Base+0x183dc>  // b.lo, b.ul, b.last
   1ee58:	add	x10, x20, #0x2
   1ee5c:	add	x11, x19, #0x15
   1ee60:	sub	x12, x9, #0x2
   1ee64:	ldrsb	w13, [x10]
   1ee68:	tbz	w13, #31, 1eedc <PyInit__decimal@@Base+0x18428>
   1ee6c:	and	w13, w13, #0xff
   1ee70:	cmp	w13, #0xbf
   1ee74:	b.hi	1eedc <PyInit__decimal@@Base+0x18428>  // b.pmore
   1ee78:	add	x10, x10, #0x1
   1ee7c:	subs	x12, x12, #0x1
   1ee80:	strb	w13, [x11], #1
   1ee84:	b.ne	1ee64 <PyInit__decimal@@Base+0x183b0>  // b.any
   1ee88:	mov	x8, x9
   1ee8c:	b	1ee94 <PyInit__decimal@@Base+0x183e0>
   1ee90:	mov	w8, #0x2                   	// #2
   1ee94:	add	x8, x19, x8
   1ee98:	add	x8, x8, #0x13
   1ee9c:	b	1eb24 <PyInit__decimal@@Base+0x18070>
   1eea0:	cmp	w10, #0xf0
   1eea4:	b.ne	1eeb8 <PyInit__decimal@@Base+0x18404>  // b.any
   1eea8:	mov	w9, #0x4                   	// #4
   1eeac:	mov	w11, #0xbf                  	// #191
   1eeb0:	mov	w12, #0x90                  	// #144
   1eeb4:	b	1ee34 <PyInit__decimal@@Base+0x18380>
   1eeb8:	cmp	w10, #0xf4
   1eebc:	b.cs	1eec8 <PyInit__decimal@@Base+0x18414>  // b.hs, b.nlast
   1eec0:	mov	w9, #0x4                   	// #4
   1eec4:	b	1ee2c <PyInit__decimal@@Base+0x18378>
   1eec8:	cmp	w10, #0xf4
   1eecc:	b.ne	1eedc <PyInit__decimal@@Base+0x18428>  // b.any
   1eed0:	mov	w9, #0x4                   	// #4
   1eed4:	mov	w11, #0x8f                  	// #143
   1eed8:	b	1ee30 <PyInit__decimal@@Base+0x1837c>
   1eedc:	mov	w0, wzr
   1eee0:	strb	wzr, [x8]
   1eee4:	ldp	x20, x19, [sp, #64]
   1eee8:	ldp	x22, x21, [sp, #48]
   1eeec:	ldp	x29, x30, [sp, #32]
   1eef0:	add	sp, sp, #0x50
   1eef4:	ret
   1eef8:	stp	x29, x30, [sp, #-96]!
   1eefc:	stp	x28, x27, [sp, #16]
   1ef00:	stp	x26, x25, [sp, #32]
   1ef04:	stp	x24, x23, [sp, #48]
   1ef08:	stp	x22, x21, [sp, #64]
   1ef0c:	stp	x20, x19, [sp, #80]
   1ef10:	mov	x29, sp
   1ef14:	sub	sp, sp, #0x290
   1ef18:	mov	w8, #0x30                  	// #48
   1ef1c:	mov	w9, #0x40                  	// #64
   1ef20:	strb	w8, [sp, #80]
   1ef24:	add	x8, sp, #0x80
   1ef28:	stp	xzr, xzr, [sp, #88]
   1ef2c:	stp	xzr, x9, [sp, #104]
   1ef30:	str	x8, [sp, #120]
   1ef34:	ldr	x8, [x1]
   1ef38:	mov	x26, #0xffffffffa763ffff    	// #-1486618625
   1ef3c:	movk	x26, #0xb6b3, lsl #32
   1ef40:	movk	x26, #0xde0, lsl #48
   1ef44:	mov	x20, x3
   1ef48:	cmp	x8, x26
   1ef4c:	b.le	1ef64 <PyInit__decimal@@Base+0x184b0>
   1ef50:	ldr	w8, [x20]
   1ef54:	mov	x0, xzr
   1ef58:	orr	w8, w8, #0x100
   1ef5c:	str	w8, [x20]
   1ef60:	b	1f640 <PyInit__decimal@@Base+0x18b8c>
   1ef64:	ldrb	w25, [x1, #16]
   1ef68:	mov	x24, x2
   1ef6c:	mov	x19, x1
   1ef70:	mov	x22, x0
   1ef74:	bl	67c0 <__ctype_b_loc@plt>
   1ef78:	ldr	x8, [x0]
   1ef7c:	mov	x21, x0
   1ef80:	ldrh	w8, [x8, x25, lsl #1]
   1ef84:	tbnz	w8, #8, 1ef90 <PyInit__decimal@@Base+0x184dc>
   1ef88:	mov	w23, wzr
   1ef8c:	b	1efa0 <PyInit__decimal@@Base+0x184ec>
   1ef90:	bl	6540 <__ctype_tolower_loc@plt>
   1ef94:	ldr	x8, [x0]
   1ef98:	mov	w23, #0x1                   	// #1
   1ef9c:	ldr	w25, [x8, x25, lsl #2]
   1efa0:	ldrb	w8, [x19, #18]
   1efa4:	cmp	w8, #0x2b
   1efa8:	b.eq	1efbc <PyInit__decimal@@Base+0x18508>  // b.none
   1efac:	cmp	w8, #0x20
   1efb0:	b.ne	1efc0 <PyInit__decimal@@Base+0x1850c>  // b.any
   1efb4:	orr	w23, w23, #0x40
   1efb8:	b	1efc0 <PyInit__decimal@@Base+0x1850c>
   1efbc:	orr	w23, w23, #0x80
   1efc0:	mov	x0, x22
   1efc4:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
   1efc8:	cbz	w0, 1f0b8 <PyInit__decimal@@Base+0x18604>
   1efcc:	ldrb	w8, [x19, #17]
   1efd0:	cmp	w8, #0x7a
   1efd4:	b.ne	1effc <PyInit__decimal@@Base+0x18548>  // b.any
   1efd8:	ldp	q2, q0, [x19, #16]
   1efdc:	ldr	q1, [x19]
   1efe0:	mov	w8, #0x20                  	// #32
   1efe4:	mov	w9, #0x3e                  	// #62
   1efe8:	mov	x19, sp
   1efec:	stp	q2, q0, [sp, #16]
   1eff0:	str	q1, [sp]
   1eff4:	sturh	w8, [sp, #19]
   1eff8:	strb	w9, [sp, #17]
   1effc:	and	w8, w25, #0xff
   1f000:	orr	w9, w23, #0x20
   1f004:	cmp	w8, #0x25
   1f008:	csel	w23, w9, w23, eq  // eq = none
   1f00c:	mov	w3, #0x1                   	// #1
   1f010:	add	x8, sp, #0x30
   1f014:	add	x0, x8, #0x18
   1f018:	mov	x1, x22
   1f01c:	mov	w2, w23
   1f020:	bl	1e510 <PyInit__decimal@@Base+0x17a5c>
   1f024:	stp	x0, x0, [sp, #48]
   1f028:	tbnz	x0, #63, 1f0fc <PyInit__decimal@@Base+0x18648>
   1f02c:	ldr	x8, [x19, #24]
   1f030:	ldrb	w8, [x8]
   1f034:	cbz	w8, 1f044 <PyInit__decimal@@Base+0x18590>
   1f038:	mov	x0, x22
   1f03c:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
   1f040:	cbz	w0, 1f188 <PyInit__decimal@@Base+0x186d4>
   1f044:	ldr	x8, [x19]
   1f048:	cbz	x8, 1f5c8 <PyInit__decimal@@Base+0x18b14>
   1f04c:	ldr	x9, [sp, #56]
   1f050:	subs	x23, x8, x9
   1f054:	b.le	1f5c8 <PyInit__decimal@@Base+0x18b14>
   1f058:	ldrb	w25, [x19, #17]
   1f05c:	add	x0, x19, #0x13
   1f060:	sturb	wzr, [x29, #-12]
   1f064:	bl	6420 <strlen@plt>
   1f068:	ldr	x8, [sp, #48]
   1f06c:	mov	x21, x0
   1f070:	ldr	x0, [sp, #72]
   1f074:	mul	x24, x21, x23
   1f078:	add	x8, x24, x8
   1f07c:	add	x1, x8, #0x1
   1f080:	sub	x3, x29, #0xc
   1f084:	mov	w2, #0x1                   	// #1
   1f088:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   1f08c:	ldurb	w8, [x29, #-12]
   1f090:	mov	x22, x0
   1f094:	str	x0, [sp, #72]
   1f098:	cbz	w8, 1f25c <PyInit__decimal@@Base+0x187a8>
   1f09c:	ldr	w8, [x20]
   1f0a0:	mov	x0, x22
   1f0a4:	orr	w8, w8, #0x200
   1f0a8:	str	w8, [x20]
   1f0ac:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1f0b0:	ldr	x8, [x8, #1376]
   1f0b4:	b	1f1b0 <PyInit__decimal@@Base+0x186fc>
   1f0b8:	and	w8, w25, #0xff
   1f0bc:	cmp	w8, #0x65
   1f0c0:	str	wzr, [sp]
   1f0c4:	b.gt	1f108 <PyInit__decimal@@Base+0x18654>
   1f0c8:	cmp	w8, #0x25
   1f0cc:	b.ne	1f1b8 <PyInit__decimal@@Base+0x18704>  // b.any
   1f0d0:	add	x0, sp, #0x50
   1f0d4:	mov	x1, x22
   1f0d8:	mov	x2, x20
   1f0dc:	bl	22898 <PyInit__decimal@@Base+0x1bde4>
   1f0e0:	cbz	w0, 1f63c <PyInit__decimal@@Base+0x18b88>
   1f0e4:	ldr	x8, [sp, #88]
   1f0e8:	orr	w23, w23, #0x20
   1f0ec:	add	x22, sp, #0x50
   1f0f0:	add	x8, x8, #0x2
   1f0f4:	str	x8, [sp, #88]
   1f0f8:	b	1f110 <PyInit__decimal@@Base+0x1865c>
   1f0fc:	ldr	w8, [x20]
   1f100:	orr	w8, w8, #0x200
   1f104:	b	1f630 <PyInit__decimal@@Base+0x18b7c>
   1f108:	cmp	w8, #0x66
   1f10c:	b.ne	1f1d0 <PyInit__decimal@@Base+0x1871c>  // b.any
   1f110:	orr	w23, w23, #0x10
   1f114:	mov	w8, #0x66                  	// #102
   1f118:	ldr	x9, [x19, #8]
   1f11c:	tbnz	x9, #63, 1f1e4 <PyInit__decimal@@Base+0x18730>
   1f120:	cmp	x9, x26
   1f124:	b.le	1f130 <PyInit__decimal@@Base+0x1867c>
   1f128:	mov	w8, #0x100                 	// #256
   1f12c:	b	1f628 <PyInit__decimal@@Base+0x18b74>
   1f130:	and	w8, w8, #0x3
   1f134:	cmp	w8, #0x1
   1f138:	b.eq	1f30c <PyInit__decimal@@Base+0x18858>  // b.none
   1f13c:	cmp	w8, #0x2
   1f140:	b.eq	1f2b4 <PyInit__decimal@@Base+0x18800>  // b.none
   1f144:	cmp	w8, #0x3
   1f148:	b.ne	1f304 <PyInit__decimal@@Base+0x18850>  // b.any
   1f14c:	ldr	x25, [x22, #16]
   1f150:	cmp	x9, #0x0
   1f154:	csinc	x27, x9, xzr, ne  // ne = any
   1f158:	cmp	x25, x27
   1f15c:	b.le	1f304 <PyInit__decimal@@Base+0x18850>
   1f160:	ldr	x28, [x22, #8]
   1f164:	mov	x0, x22
   1f168:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
   1f16c:	cbnz	w0, 1f600 <PyInit__decimal@@Base+0x18b4c>
   1f170:	mov	x0, x22
   1f174:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
   1f178:	cbnz	w0, 1f600 <PyInit__decimal@@Base+0x18b4c>
   1f17c:	sub	x8, x28, x27
   1f180:	add	x25, x8, x25
   1f184:	b	1f68c <PyInit__decimal@@Base+0x18bd8>
   1f188:	ldr	x8, [sp, #56]
   1f18c:	add	x9, x26, #0x24
   1f190:	cmp	x8, x9
   1f194:	b.le	1f1f0 <PyInit__decimal@@Base+0x1873c>
   1f198:	ldr	w8, [x20]
   1f19c:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   1f1a0:	orr	w8, w8, #0x100
   1f1a4:	str	w8, [x20]
   1f1a8:	ldr	x8, [x9, #1376]
   1f1ac:	ldr	x0, [sp, #72]
   1f1b0:	blr	x8
   1f1b4:	b	1f634 <PyInit__decimal@@Base+0x18b80>
   1f1b8:	cmp	w8, #0x65
   1f1bc:	b.ne	1f6d4 <PyInit__decimal@@Base+0x18c20>  // b.any
   1f1c0:	orr	w23, w23, #0x8
   1f1c4:	ldr	x9, [x19, #8]
   1f1c8:	tbz	x9, #63, 1f120 <PyInit__decimal@@Base+0x1866c>
   1f1cc:	b	1f1e4 <PyInit__decimal@@Base+0x18730>
   1f1d0:	cmp	w8, #0x67
   1f1d4:	b.ne	1f6d4 <PyInit__decimal@@Base+0x18c20>  // b.any
   1f1d8:	orr	w23, w23, #0x2
   1f1dc:	ldr	x9, [x19, #8]
   1f1e0:	tbz	x9, #63, 1f120 <PyInit__decimal@@Base+0x1866c>
   1f1e4:	cmp	w8, #0x66
   1f1e8:	b.eq	1f2d0 <PyInit__decimal@@Base+0x1881c>  // b.none
   1f1ec:	b	1f304 <PyInit__decimal@@Base+0x18850>
   1f1f0:	ldr	x22, [sp, #72]
   1f1f4:	mov	x23, xzr
   1f1f8:	ldrb	w8, [x22]
   1f1fc:	cmp	w8, #0x2d
   1f200:	b.hi	1f660 <PyInit__decimal@@Base+0x18bac>  // b.pmore
   1f204:	mov	w9, #0x1                   	// #1
   1f208:	lsl	x8, x9, x8
   1f20c:	mov	x9, #0x280100000000        	// #43984760078336
   1f210:	tst	x8, x9
   1f214:	mov	x24, x22
   1f218:	b.eq	1f224 <PyInit__decimal@@Base+0x18770>  // b.none
   1f21c:	add	x24, x22, #0x1
   1f220:	mov	x23, x22
   1f224:	ldr	x8, [x21]
   1f228:	add	x21, x24, #0x1
   1f22c:	ldrb	w9, [x21], #1
   1f230:	ldrh	w10, [x8, x9, lsl #1]
   1f234:	tbnz	w10, #11, 1f22c <PyInit__decimal@@Base+0x18778>
   1f238:	cmp	w9, #0x2e
   1f23c:	sub	x8, x21, #0x1
   1f240:	b.ne	1f328 <PyInit__decimal@@Base+0x18874>  // b.any
   1f244:	ldr	x9, [sp, #48]
   1f248:	ldr	x26, [x19, #24]
   1f24c:	sub	x10, x22, x21
   1f250:	add	x25, x9, x10
   1f254:	cbnz	x26, 1f354 <PyInit__decimal@@Base+0x188a0>
   1f258:	b	1f338 <PyInit__decimal@@Base+0x18884>
   1f25c:	cmp	w25, #0x7a
   1f260:	mov	w8, #0x3d                  	// #61
   1f264:	csel	w8, w8, w25, eq  // eq = none
   1f268:	sub	w9, w8, #0x3d
   1f26c:	cmp	w9, #0x2
   1f270:	b.cs	1f3d0 <PyInit__decimal@@Base+0x1891c>  // b.hs, b.nlast
   1f274:	ldr	x20, [sp, #48]
   1f278:	cmp	w8, #0x3d
   1f27c:	b.ne	1f3e4 <PyInit__decimal@@Base+0x18930>  // b.any
   1f280:	ldrb	w8, [x22]
   1f284:	mov	x25, xzr
   1f288:	cmp	w8, #0x2d
   1f28c:	b.hi	1f3e8 <PyInit__decimal@@Base+0x18934>  // b.pmore
   1f290:	mov	w9, #0x1                   	// #1
   1f294:	lsl	x8, x9, x8
   1f298:	mov	x9, #0x280100000000        	// #43984760078336
   1f29c:	tst	x8, x9
   1f2a0:	b.eq	1f3e8 <PyInit__decimal@@Base+0x18934>  // b.none
   1f2a4:	mov	x25, xzr
   1f2a8:	add	x22, x22, #0x1
   1f2ac:	sub	x20, x20, #0x1
   1f2b0:	b	1f3e8 <PyInit__decimal@@Base+0x18934>
   1f2b4:	neg	x2, x9
   1f2b8:	add	x0, sp, #0x50
   1f2bc:	mov	x4, sp
   1f2c0:	mov	x1, x22
   1f2c4:	mov	x3, x24
   1f2c8:	bl	311ac <PyInit__decimal@@Base+0x2a6f8>
   1f2cc:	add	x22, sp, #0x50
   1f2d0:	mov	x0, x22
   1f2d4:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
   1f2d8:	cbz	w0, 1f304 <PyInit__decimal@@Base+0x18850>
   1f2dc:	ldr	x8, [x22, #8]
   1f2e0:	cmp	x8, #0x1
   1f2e4:	b.lt	1f304 <PyInit__decimal@@Base+0x18850>  // b.tstop
   1f2e8:	add	x0, sp, #0x50
   1f2ec:	mov	x4, sp
   1f2f0:	mov	x1, x22
   1f2f4:	mov	x2, xzr
   1f2f8:	mov	x3, x24
   1f2fc:	bl	311ac <PyInit__decimal@@Base+0x2a6f8>
   1f300:	b	1f610 <PyInit__decimal@@Base+0x18b5c>
   1f304:	mov	w3, #0x1                   	// #1
   1f308:	b	1f618 <PyInit__decimal@@Base+0x18b64>
   1f30c:	mov	x0, x22
   1f310:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
   1f314:	ldr	x8, [x19, #8]
   1f318:	cbz	w0, 1f5d8 <PyInit__decimal@@Base+0x18b24>
   1f31c:	mov	w9, #0x1                   	// #1
   1f320:	sub	x3, x9, x8
   1f324:	b	1f618 <PyInit__decimal@@Base+0x18b64>
   1f328:	ldr	x9, [sp, #48]
   1f32c:	sub	x10, x22, x8
   1f330:	mov	x21, x8
   1f334:	add	x25, x10, x9
   1f338:	ldr	x9, [x19, #32]
   1f33c:	ldrb	w9, [x9]
   1f340:	cbz	w9, 1f044 <PyInit__decimal@@Base+0x18590>
   1f344:	ldr	x9, [x19, #40]
   1f348:	ldrb	w9, [x9]
   1f34c:	cbz	w9, 1f044 <PyInit__decimal@@Base+0x18590>
   1f350:	mov	x26, xzr
   1f354:	sub	x27, x8, x24
   1f358:	add	x0, sp, #0x30
   1f35c:	mov	x1, x23
   1f360:	mov	x2, x24
   1f364:	mov	x3, x27
   1f368:	mov	x4, x26
   1f36c:	mov	x5, x21
   1f370:	mov	x6, x25
   1f374:	mov	x7, x19
   1f378:	str	xzr, [sp, #72]
   1f37c:	bl	1ffe8 <PyInit__decimal@@Base+0x19534>
   1f380:	ldr	x8, [sp, #48]
   1f384:	mov	w1, #0x1                   	// #1
   1f388:	add	x0, x8, #0x1
   1f38c:	bl	2030c <PyInit__decimal@@Base+0x19858>
   1f390:	str	x0, [sp, #72]
   1f394:	cbz	x0, 1f09c <PyInit__decimal@@Base+0x185e8>
   1f398:	add	x0, sp, #0x30
   1f39c:	mov	x1, x23
   1f3a0:	mov	x2, x24
   1f3a4:	mov	x3, x27
   1f3a8:	mov	x4, x26
   1f3ac:	mov	x5, x21
   1f3b0:	mov	x6, x25
   1f3b4:	mov	x7, x19
   1f3b8:	bl	1ffe8 <PyInit__decimal@@Base+0x19534>
   1f3bc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1f3c0:	ldr	x8, [x8, #1376]
   1f3c4:	mov	x0, x22
   1f3c8:	blr	x8
   1f3cc:	b	1f044 <PyInit__decimal@@Base+0x18590>
   1f3d0:	cmp	w8, #0x3c
   1f3d4:	b.ne	1f3f4 <PyInit__decimal@@Base+0x18940>  // b.any
   1f3d8:	mov	x27, xzr
   1f3dc:	mov	x25, x23
   1f3e0:	b	1f404 <PyInit__decimal@@Base+0x18950>
   1f3e4:	mov	x25, xzr
   1f3e8:	mov	x26, x24
   1f3ec:	mov	x27, x23
   1f3f0:	b	1f40c <PyInit__decimal@@Base+0x18958>
   1f3f4:	cmp	x23, #0x0
   1f3f8:	cinc	x8, x23, lt  // lt = tstop
   1f3fc:	asr	x27, x8, #1
   1f400:	sub	x25, x23, x27
   1f404:	ldr	x20, [sp, #48]
   1f408:	mul	x26, x27, x21
   1f40c:	add	x0, x22, x26
   1f410:	mov	x1, x22
   1f414:	mov	x2, x20
   1f418:	bl	63e0 <memmove@plt>
   1f41c:	cbz	x27, 1f4dc <PyInit__decimal@@Base+0x18a28>
   1f420:	add	x12, x21, x19
   1f424:	mov	x8, xzr
   1f428:	add	x9, x19, #0x13
   1f42c:	and	x10, x21, #0xffffffffffffffe0
   1f430:	add	x11, x19, #0x23
   1f434:	add	x12, x12, #0x13
   1f438:	add	x13, x22, #0x10
   1f43c:	mov	x14, x22
   1f440:	b	1f458 <PyInit__decimal@@Base+0x189a4>
   1f444:	add	x8, x8, #0x1
   1f448:	add	x13, x13, x21
   1f44c:	cmp	x8, x27
   1f450:	add	x14, x14, x21
   1f454:	b.eq	1f4dc <PyInit__decimal@@Base+0x18a28>  // b.none
   1f458:	cbz	x21, 1f444 <PyInit__decimal@@Base+0x18990>
   1f45c:	cmp	x21, #0x20
   1f460:	b.cc	1f484 <PyInit__decimal@@Base+0x189d0>  // b.lo, b.ul, b.last
   1f464:	mul	x15, x21, x8
   1f468:	add	x16, x22, x15
   1f46c:	cmp	x16, x12
   1f470:	b.cs	1f4a8 <PyInit__decimal@@Base+0x189f4>  // b.hs, b.nlast
   1f474:	add	x15, x21, x15
   1f478:	add	x15, x22, x15
   1f47c:	cmp	x9, x15
   1f480:	b.cs	1f4a8 <PyInit__decimal@@Base+0x189f4>  // b.hs, b.nlast
   1f484:	mov	x17, xzr
   1f488:	add	x15, x14, x17
   1f48c:	sub	x16, x21, x17
   1f490:	add	x17, x9, x17
   1f494:	ldrb	w18, [x17], #1
   1f498:	subs	x16, x16, #0x1
   1f49c:	strb	w18, [x15], #1
   1f4a0:	b.ne	1f494 <PyInit__decimal@@Base+0x189e0>  // b.any
   1f4a4:	b	1f444 <PyInit__decimal@@Base+0x18990>
   1f4a8:	mov	x15, x10
   1f4ac:	mov	x16, x13
   1f4b0:	mov	x17, x11
   1f4b4:	ldp	q0, q1, [x17, #-16]
   1f4b8:	add	x17, x17, #0x20
   1f4bc:	subs	x15, x15, #0x20
   1f4c0:	stp	q0, q1, [x16, #-16]
   1f4c4:	add	x16, x16, #0x20
   1f4c8:	b.ne	1f4b4 <PyInit__decimal@@Base+0x18a00>  // b.any
   1f4cc:	cmp	x21, x10
   1f4d0:	mov	x17, x10
   1f4d4:	b.eq	1f444 <PyInit__decimal@@Base+0x18990>  // b.none
   1f4d8:	b	1f488 <PyInit__decimal@@Base+0x189d4>
   1f4dc:	cbz	x25, 1f5b0 <PyInit__decimal@@Base+0x18afc>
   1f4e0:	add	x9, x20, x26
   1f4e4:	add	x14, x21, x20
   1f4e8:	add	x15, x21, x19
   1f4ec:	add	x16, x9, x22
   1f4f0:	mov	x8, xzr
   1f4f4:	add	x10, x19, #0x13
   1f4f8:	and	x11, x21, #0xffffffffffffffe0
   1f4fc:	add	x12, x19, #0x23
   1f500:	add	x13, x22, x9
   1f504:	add	x14, x14, x26
   1f508:	add	x15, x15, #0x13
   1f50c:	add	x16, x16, #0x10
   1f510:	b	1f528 <PyInit__decimal@@Base+0x18a74>
   1f514:	add	x8, x8, #0x1
   1f518:	add	x16, x16, x21
   1f51c:	cmp	x8, x25
   1f520:	add	x13, x13, x21
   1f524:	b.eq	1f5b0 <PyInit__decimal@@Base+0x18afc>  // b.none
   1f528:	cbz	x21, 1f514 <PyInit__decimal@@Base+0x18a60>
   1f52c:	cmp	x21, #0x20
   1f530:	b.cc	1f558 <PyInit__decimal@@Base+0x18aa4>  // b.lo, b.ul, b.last
   1f534:	mul	x17, x21, x8
   1f538:	add	x18, x9, x17
   1f53c:	add	x18, x22, x18
   1f540:	cmp	x18, x15
   1f544:	b.cs	1f57c <PyInit__decimal@@Base+0x18ac8>  // b.hs, b.nlast
   1f548:	add	x17, x14, x17
   1f54c:	add	x17, x22, x17
   1f550:	cmp	x10, x17
   1f554:	b.cs	1f57c <PyInit__decimal@@Base+0x18ac8>  // b.hs, b.nlast
   1f558:	mov	x0, xzr
   1f55c:	add	x17, x13, x0
   1f560:	sub	x18, x21, x0
   1f564:	add	x0, x10, x0
   1f568:	ldrb	w1, [x0], #1
   1f56c:	subs	x18, x18, #0x1
   1f570:	strb	w1, [x17], #1
   1f574:	b.ne	1f568 <PyInit__decimal@@Base+0x18ab4>  // b.any
   1f578:	b	1f514 <PyInit__decimal@@Base+0x18a60>
   1f57c:	mov	x17, x16
   1f580:	mov	x18, x12
   1f584:	mov	x0, x11
   1f588:	ldp	q0, q1, [x18, #-16]
   1f58c:	subs	x0, x0, #0x20
   1f590:	add	x18, x18, #0x20
   1f594:	stp	q0, q1, [x17, #-16]
   1f598:	add	x17, x17, #0x20
   1f59c:	b.ne	1f588 <PyInit__decimal@@Base+0x18ad4>  // b.any
   1f5a0:	cmp	x21, x11
   1f5a4:	mov	x0, x11
   1f5a8:	b.eq	1f514 <PyInit__decimal@@Base+0x18a60>  // b.none
   1f5ac:	b	1f55c <PyInit__decimal@@Base+0x18aa8>
   1f5b0:	ldp	x8, x9, [sp, #48]
   1f5b4:	ldr	x10, [sp, #72]
   1f5b8:	add	x8, x8, x24
   1f5bc:	add	x9, x9, x23
   1f5c0:	stp	x8, x9, [sp, #48]
   1f5c4:	strb	wzr, [x10, x8]
   1f5c8:	add	x0, sp, #0x50
   1f5cc:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
   1f5d0:	ldr	x0, [sp, #72]
   1f5d4:	b	1f640 <PyInit__decimal@@Base+0x18b8c>
   1f5d8:	add	x27, x8, #0x1
   1f5dc:	cmp	x27, #0x0
   1f5e0:	b.le	1f668 <PyInit__decimal@@Base+0x18bb4>
   1f5e4:	ldp	x25, x28, [x22, #8]
   1f5e8:	mov	x0, x22
   1f5ec:	bl	20c30 <PyInit__decimal@@Base+0x1a17c>
   1f5f0:	cbnz	w0, 1f600 <PyInit__decimal@@Base+0x18b4c>
   1f5f4:	mov	x0, x22
   1f5f8:	bl	20c3c <PyInit__decimal@@Base+0x1a188>
   1f5fc:	cbz	w0, 1f684 <PyInit__decimal@@Base+0x18bd0>
   1f600:	add	x0, sp, #0x50
   1f604:	mov	x2, sp
   1f608:	mov	x1, x22
   1f60c:	bl	22898 <PyInit__decimal@@Base+0x1bde4>
   1f610:	mov	w3, #0x1                   	// #1
   1f614:	add	x22, sp, #0x50
   1f618:	ldr	w8, [sp]
   1f61c:	mov	w9, #0x3be                 	// #958
   1f620:	ands	w8, w8, w9
   1f624:	b.eq	1f010 <PyInit__decimal@@Base+0x1855c>  // b.none
   1f628:	ldr	w9, [x20]
   1f62c:	orr	w8, w9, w8
   1f630:	str	w8, [x20]
   1f634:	add	x0, sp, #0x50
   1f638:	bl	20dc0 <PyInit__decimal@@Base+0x1a30c>
   1f63c:	mov	x0, xzr
   1f640:	add	sp, sp, #0x290
   1f644:	ldp	x20, x19, [sp, #80]
   1f648:	ldp	x22, x21, [sp, #64]
   1f64c:	ldp	x24, x23, [sp, #48]
   1f650:	ldp	x26, x25, [sp, #32]
   1f654:	ldp	x28, x27, [sp, #16]
   1f658:	ldp	x29, x30, [sp], #96
   1f65c:	ret
   1f660:	mov	x24, x22
   1f664:	b	1f224 <PyInit__decimal@@Base+0x18770>
   1f668:	add	x0, sp, #0x50
   1f66c:	mov	x2, sp
   1f670:	mov	w1, #0x100                 	// #256
   1f674:	add	x22, sp, #0x50
   1f678:	bl	21760 <PyInit__decimal@@Base+0x1acac>
   1f67c:	mov	w3, #0x1                   	// #1
   1f680:	b	1f618 <PyInit__decimal@@Base+0x18b64>
   1f684:	sub	x8, x25, x27
   1f688:	add	x25, x8, x28
   1f68c:	add	x0, sp, #0x50
   1f690:	mov	x4, sp
   1f694:	mov	x1, x22
   1f698:	mov	x2, x25
   1f69c:	mov	x3, x24
   1f6a0:	bl	32b48 <PyInit__decimal@@Base+0x2c094>
   1f6a4:	ldr	x8, [sp, #96]
   1f6a8:	cmp	x8, x27
   1f6ac:	b.le	1f610 <PyInit__decimal@@Base+0x18b5c>
   1f6b0:	add	x2, x25, #0x1
   1f6b4:	add	x0, sp, #0x50
   1f6b8:	add	x1, sp, #0x50
   1f6bc:	mov	x4, sp
   1f6c0:	mov	x3, x24
   1f6c4:	add	x22, sp, #0x50
   1f6c8:	bl	32b48 <PyInit__decimal@@Base+0x2c094>
   1f6cc:	mov	w3, #0x1                   	// #1
   1f6d0:	b	1f618 <PyInit__decimal@@Base+0x18b64>
   1f6d4:	bl	6700 <abort@plt>
   1f6d8:	sub	sp, sp, #0x60
   1f6dc:	stp	x29, x30, [sp, #48]
   1f6e0:	str	x21, [sp, #64]
   1f6e4:	stp	x20, x19, [sp, #80]
   1f6e8:	add	x29, sp, #0x30
   1f6ec:	mov	x20, x2
   1f6f0:	mov	x21, x0
   1f6f4:	mov	x0, sp
   1f6f8:	mov	w2, #0x1                   	// #1
   1f6fc:	mov	x19, x3
   1f700:	bl	1eaa4 <PyInit__decimal@@Base+0x17ff0>
   1f704:	cbz	w0, 1f720 <PyInit__decimal@@Base+0x18c6c>
   1f708:	mov	x1, sp
   1f70c:	mov	x0, x21
   1f710:	mov	x2, x20
   1f714:	mov	x3, x19
   1f718:	bl	1eef8 <PyInit__decimal@@Base+0x18444>
   1f71c:	b	1f730 <PyInit__decimal@@Base+0x18c7c>
   1f720:	ldr	w8, [x19]
   1f724:	mov	x0, xzr
   1f728:	orr	w8, w8, #0x100
   1f72c:	str	w8, [x19]
   1f730:	ldp	x20, x19, [sp, #80]
   1f734:	ldr	x21, [sp, #64]
   1f738:	ldp	x29, x30, [sp, #48]
   1f73c:	add	sp, sp, #0x60
   1f740:	ret
   1f744:	stp	x29, x30, [sp, #-80]!
   1f748:	str	x25, [sp, #16]
   1f74c:	stp	x24, x23, [sp, #32]
   1f750:	stp	x22, x21, [sp, #48]
   1f754:	stp	x20, x19, [sp, #64]
   1f758:	mov	x29, sp
   1f75c:	adrp	x25, 50000 <PyInit__decimal@@Base+0x4954c>
   1f760:	adrp	x23, 3f000 <PyInit__decimal@@Base+0x3854c>
   1f764:	mov	w21, w2
   1f768:	mov	w22, w1
   1f76c:	mov	x19, x0
   1f770:	mov	x24, xzr
   1f774:	add	x25, x25, #0xb68
   1f778:	add	x23, x23, #0x637
   1f77c:	mov	x20, x0
   1f780:	strb	wzr, [x0]
   1f784:	b	1f794 <PyInit__decimal@@Base+0x18ce0>
   1f788:	add	x24, x24, #0x1
   1f78c:	cmp	x24, #0xf
   1f790:	b.eq	1f7cc <PyInit__decimal@@Base+0x18d18>  // b.none
   1f794:	lsr	w8, w21, w24
   1f798:	tbz	w8, #0, 1f788 <PyInit__decimal@@Base+0x18cd4>
   1f79c:	ldr	x3, [x25, x24, lsl #3]
   1f7a0:	sxtw	x1, w22
   1f7a4:	mov	x0, x20
   1f7a8:	mov	x2, x23
   1f7ac:	bl	6550 <snprintf@plt>
   1f7b0:	mov	w8, w0
   1f7b4:	mov	w0, #0xffffffff            	// #-1
   1f7b8:	tbnz	w8, #31, 1f7e4 <PyInit__decimal@@Base+0x18d30>
   1f7bc:	subs	w22, w22, w8
   1f7c0:	b.le	1f7e4 <PyInit__decimal@@Base+0x18d30>
   1f7c4:	add	x20, x20, w8, uxtw
   1f7c8:	b	1f788 <PyInit__decimal@@Base+0x18cd4>
   1f7cc:	cmp	x20, x19
   1f7d0:	mov	x8, x19
   1f7d4:	b.eq	1f7e0 <PyInit__decimal@@Base+0x18d2c>  // b.none
   1f7d8:	strb	wzr, [x20, #-1]!
   1f7dc:	mov	x8, x20
   1f7e0:	sub	w0, w8, w19
   1f7e4:	ldp	x20, x19, [sp, #64]
   1f7e8:	ldp	x22, x21, [sp, #48]
   1f7ec:	ldp	x24, x23, [sp, #32]
   1f7f0:	ldr	x25, [sp, #16]
   1f7f4:	ldp	x29, x30, [sp], #80
   1f7f8:	ret
   1f7fc:	stp	x29, x30, [sp, #-80]!
   1f800:	stp	x26, x25, [sp, #16]
   1f804:	stp	x24, x23, [sp, #32]
   1f808:	stp	x22, x21, [sp, #48]
   1f80c:	stp	x20, x19, [sp, #64]
   1f810:	mov	x29, sp
   1f814:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1f818:	mov	w9, #0x5b                  	// #91
   1f81c:	mov	x24, x0
   1f820:	add	x8, x8, #0xb68
   1f824:	cmp	x3, #0x0
   1f828:	strh	w9, [x24], #1
   1f82c:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x3854c>
   1f830:	mov	w20, w2
   1f834:	mov	x19, x0
   1f838:	mov	x23, xzr
   1f83c:	csel	x25, x8, x3, eq  // eq = none
   1f840:	sub	w26, w1, #0x1
   1f844:	add	x22, x22, #0x63b
   1f848:	mov	x21, x24
   1f84c:	b	1f860 <PyInit__decimal@@Base+0x18dac>
   1f850:	add	x21, x21, w8, uxtw
   1f854:	add	x23, x23, #0x1
   1f858:	cmp	x23, #0xf
   1f85c:	b.eq	1f894 <PyInit__decimal@@Base+0x18de0>  // b.none
   1f860:	lsr	w8, w20, w23
   1f864:	tbz	w8, #0, 1f854 <PyInit__decimal@@Base+0x18da0>
   1f868:	ldr	x3, [x25, x23, lsl #3]
   1f86c:	sxtw	x1, w26
   1f870:	mov	x0, x21
   1f874:	mov	x2, x22
   1f878:	bl	6550 <snprintf@plt>
   1f87c:	mov	w8, w0
   1f880:	mov	w0, #0xffffffff            	// #-1
   1f884:	tbnz	w8, #31, 1f8b0 <PyInit__decimal@@Base+0x18dfc>
   1f888:	subs	w26, w26, w8
   1f88c:	b.gt	1f850 <PyInit__decimal@@Base+0x18d9c>
   1f890:	b	1f8b0 <PyInit__decimal@@Base+0x18dfc>
   1f894:	sub	x8, x21, #0x2
   1f898:	cmp	x21, x24
   1f89c:	mov	w9, #0x5d                  	// #93
   1f8a0:	csel	x8, x21, x8, eq  // eq = none
   1f8a4:	strh	w9, [x8]
   1f8a8:	sub	w8, w8, w19
   1f8ac:	add	w0, w8, #0x1
   1f8b0:	ldp	x20, x19, [sp, #64]
   1f8b4:	ldp	x22, x21, [sp, #48]
   1f8b8:	ldp	x24, x23, [sp, #32]
   1f8bc:	ldp	x26, x25, [sp, #16]
   1f8c0:	ldp	x29, x30, [sp], #80
   1f8c4:	ret
   1f8c8:	sub	sp, sp, #0x70
   1f8cc:	stp	x29, x30, [sp, #16]
   1f8d0:	stp	x28, x27, [sp, #32]
   1f8d4:	stp	x26, x25, [sp, #48]
   1f8d8:	stp	x24, x23, [sp, #64]
   1f8dc:	stp	x22, x21, [sp, #80]
   1f8e0:	stp	x20, x19, [sp, #96]
   1f8e4:	add	x29, sp, #0x10
   1f8e8:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1f8ec:	mov	w9, #0x5b                  	// #91
   1f8f0:	mov	x25, x0
   1f8f4:	add	x8, x8, #0xbe0
   1f8f8:	cmp	x3, #0x0
   1f8fc:	strh	w9, [x25], #1
   1f900:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x3854c>
   1f904:	mov	w20, w2
   1f908:	mov	x23, xzr
   1f90c:	mov	w24, wzr
   1f910:	sub	w26, w1, #0x1
   1f914:	mov	w27, #0x1                   	// #1
   1f918:	csel	x28, x8, x3, eq  // eq = none
   1f91c:	mov	w19, #0x3ba                 	// #954
   1f920:	add	x22, x22, #0x63b
   1f924:	mov	x21, x25
   1f928:	str	x0, [sp, #8]
   1f92c:	b	1f93c <PyInit__decimal@@Base+0x18e88>
   1f930:	add	x23, x23, #0x1
   1f934:	cmp	x23, #0xf
   1f938:	b.eq	1f988 <PyInit__decimal@@Base+0x18ed4>  // b.none
   1f93c:	lsl	w8, w27, w23
   1f940:	ands	w8, w8, w20
   1f944:	b.eq	1f930 <PyInit__decimal@@Base+0x18e7c>  // b.none
   1f948:	tst	w8, w19
   1f94c:	b.eq	1f958 <PyInit__decimal@@Base+0x18ea4>  // b.none
   1f950:	cbnz	w24, 1f930 <PyInit__decimal@@Base+0x18e7c>
   1f954:	mov	w24, #0x1                   	// #1
   1f958:	ldr	x3, [x28, x23, lsl #3]
   1f95c:	sxtw	x1, w26
   1f960:	mov	x0, x21
   1f964:	mov	x2, x22
   1f968:	bl	6550 <snprintf@plt>
   1f96c:	mov	w8, w0
   1f970:	mov	w0, #0xffffffff            	// #-1
   1f974:	tbnz	w8, #31, 1f9a8 <PyInit__decimal@@Base+0x18ef4>
   1f978:	subs	w26, w26, w8
   1f97c:	b.le	1f9a8 <PyInit__decimal@@Base+0x18ef4>
   1f980:	add	x21, x21, w8, uxtw
   1f984:	b	1f930 <PyInit__decimal@@Base+0x18e7c>
   1f988:	sub	x8, x21, #0x2
   1f98c:	cmp	x21, x25
   1f990:	mov	w9, #0x5d                  	// #93
   1f994:	csel	x8, x21, x8, eq  // eq = none
   1f998:	strh	w9, [x8]
   1f99c:	ldr	x9, [sp, #8]
   1f9a0:	sub	w8, w8, w9
   1f9a4:	add	w0, w8, #0x1
   1f9a8:	ldp	x20, x19, [sp, #96]
   1f9ac:	ldp	x22, x21, [sp, #80]
   1f9b0:	ldp	x24, x23, [sp, #64]
   1f9b4:	ldp	x26, x25, [sp, #48]
   1f9b8:	ldp	x28, x27, [sp, #32]
   1f9bc:	ldp	x29, x30, [sp, #16]
   1f9c0:	add	sp, sp, #0x70
   1f9c4:	ret
   1f9c8:	sub	sp, sp, #0x30
   1f9cc:	stp	x29, x30, [sp, #16]
   1f9d0:	stp	x20, x19, [sp, #32]
   1f9d4:	add	x29, sp, #0x10
   1f9d8:	mov	x19, x0
   1f9dc:	add	x0, sp, #0x8
   1f9e0:	mov	w2, #0x3                   	// #3
   1f9e4:	mov	w3, #0x1                   	// #1
   1f9e8:	bl	1e510 <PyInit__decimal@@Base+0x17a5c>
   1f9ec:	ldr	x20, [sp, #8]
   1f9f0:	cbz	x20, 1fa24 <PyInit__decimal@@Base+0x18f70>
   1f9f4:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   1f9f8:	add	x1, x1, #0x640
   1f9fc:	mov	x0, x19
   1fa00:	mov	x2, x20
   1fa04:	bl	69b0 <fprintf@plt>
   1fa08:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1fa0c:	ldr	x1, [x8, #1376]
   1fa10:	mov	x0, x20
   1fa14:	ldp	x20, x19, [sp, #32]
   1fa18:	ldp	x29, x30, [sp, #16]
   1fa1c:	add	sp, sp, #0x30
   1fa20:	br	x1
   1fa24:	mov	x3, x19
   1fa28:	ldp	x20, x19, [sp, #32]
   1fa2c:	ldp	x29, x30, [sp, #16]
   1fa30:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x3854c>
   1fa34:	add	x0, x0, #0x644
   1fa38:	mov	w1, #0x19                  	// #25
   1fa3c:	mov	w2, #0x1                   	// #1
   1fa40:	add	sp, sp, #0x30
   1fa44:	b	6870 <fwrite@plt>
   1fa48:	stp	x29, x30, [sp, #-32]!
   1fa4c:	str	x19, [sp, #16]
   1fa50:	mov	x29, sp
   1fa54:	mov	x1, x0
   1fa58:	add	x0, x29, #0x18
   1fa5c:	mov	w2, #0x3                   	// #3
   1fa60:	mov	w3, #0x1                   	// #1
   1fa64:	bl	1e510 <PyInit__decimal@@Base+0x17a5c>
   1fa68:	ldr	x19, [x29, #24]
   1fa6c:	cbz	x19, 1fa90 <PyInit__decimal@@Base+0x18fdc>
   1fa70:	mov	x0, x19
   1fa74:	bl	6750 <puts@plt>
   1fa78:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   1fa7c:	ldr	x1, [x8, #1376]
   1fa80:	mov	x0, x19
   1fa84:	ldr	x19, [sp, #16]
   1fa88:	ldp	x29, x30, [sp], #32
   1fa8c:	br	x1
   1fa90:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   1fa94:	ldr	x8, [x8, #3904]
   1fa98:	ldr	x19, [sp, #16]
   1fa9c:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x3854c>
   1faa0:	add	x0, x0, #0x644
   1faa4:	ldr	x3, [x8]
   1faa8:	mov	w1, #0x19                  	// #25
   1faac:	mov	w2, #0x1                   	// #1
   1fab0:	ldp	x29, x30, [sp], #32
   1fab4:	b	6870 <fwrite@plt>
   1fab8:	sub	w8, w2, #0x2
   1fabc:	cmp	w8, #0x12
   1fac0:	b.hi	1ffc4 <PyInit__decimal@@Base+0x19510>  // b.pmore
   1fac4:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   1fac8:	add	x9, x9, #0x60a
   1facc:	adr	x10, 1fadc <PyInit__decimal@@Base+0x19028>
   1fad0:	ldrh	w11, [x9, x8, lsl #1]
   1fad4:	add	x10, x10, x11, lsl #2
   1fad8:	br	x10
   1fadc:	cmp	x0, x3
   1fae0:	b.ne	1faec <PyInit__decimal@@Base+0x19038>  // b.any
   1fae4:	mov	w8, #0x2e                  	// #46
   1fae8:	strb	w8, [x0], #1
   1faec:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1faf0:	movk	x8, #0x2304, lsl #32
   1faf4:	mov	x10, #0x76180000            	// #1981284352
   1faf8:	movk	x8, #0x8ac7, lsl #48
   1fafc:	movk	x10, #0xdcfb, lsl #32
   1fb00:	mov	w9, #0x30                  	// #48
   1fb04:	movk	x10, #0x7538, lsl #48
   1fb08:	cmp	x1, x8
   1fb0c:	add	x8, x8, #0x1
   1fb10:	add	x10, x1, x10
   1fb14:	cinc	w9, w9, hi  // hi = pmore
   1fb18:	cmp	x1, x8
   1fb1c:	strb	w9, [x0], #1
   1fb20:	csel	x1, x1, x10, cc  // cc = lo, ul, last
   1fb24:	cmp	x0, x3
   1fb28:	b.ne	1fb38 <PyInit__decimal@@Base+0x19084>  // b.any
   1fb2c:	mov	w8, #0x2e                  	// #46
   1fb30:	mov	x0, x3
   1fb34:	strb	w8, [x0], #1
   1fb38:	mov	x9, #0x490f                	// #18703
   1fb3c:	movk	x9, #0x7747, lsl #16
   1fb40:	lsr	x8, x1, #18
   1fb44:	movk	x9, #0x49c9, lsl #32
   1fb48:	mov	x10, #0xa7640000            	// #2808348672
   1fb4c:	umulh	x8, x8, x9
   1fb50:	movk	x10, #0xb6b3, lsl #32
   1fb54:	lsr	x8, x8, #24
   1fb58:	movk	x10, #0xde0, lsl #48
   1fb5c:	add	w9, w8, #0x30
   1fb60:	strb	w9, [x0], #1
   1fb64:	msub	x1, x8, x10, x1
   1fb68:	cmp	x0, x3
   1fb6c:	b.ne	1fb7c <PyInit__decimal@@Base+0x190c8>  // b.any
   1fb70:	mov	w8, #0x2e                  	// #46
   1fb74:	mov	x0, x3
   1fb78:	strb	w8, [x0], #1
   1fb7c:	mov	x9, #0x1b53                	// #6995
   1fb80:	movk	x9, #0xd519, lsl #16
   1fb84:	lsr	x8, x1, #17
   1fb88:	movk	x9, #0x5c3b, lsl #32
   1fb8c:	mov	x10, #0x5d8a0000            	// #1569325056
   1fb90:	umulh	x8, x8, x9
   1fb94:	movk	x10, #0x4578, lsl #32
   1fb98:	lsr	x8, x8, #22
   1fb9c:	movk	x10, #0x163, lsl #48
   1fba0:	add	w9, w8, #0x30
   1fba4:	strb	w9, [x0], #1
   1fba8:	msub	x1, x8, x10, x1
   1fbac:	cmp	x0, x3
   1fbb0:	b.ne	1fbc0 <PyInit__decimal@@Base+0x1910c>  // b.any
   1fbb4:	mov	w8, #0x2e                  	// #46
   1fbb8:	mov	x0, x3
   1fbbc:	strb	w8, [x0], #1
   1fbc0:	mov	x8, #0x7857                	// #30807
   1fbc4:	movk	x8, #0xb113, lsl #16
   1fbc8:	movk	x8, #0x652f, lsl #32
   1fbcc:	movk	x8, #0x39a5, lsl #48
   1fbd0:	mov	x9, #0x6fc10000            	// #1874919424
   1fbd4:	umulh	x8, x1, x8
   1fbd8:	movk	x9, #0x86f2, lsl #32
   1fbdc:	lsr	x8, x8, #51
   1fbe0:	movk	x9, #0x23, lsl #48
   1fbe4:	add	w10, w8, #0x30
   1fbe8:	strb	w10, [x0], #1
   1fbec:	msub	x1, x8, x9, x1
   1fbf0:	cmp	x0, x3
   1fbf4:	b.ne	1fc04 <PyInit__decimal@@Base+0x19150>  // b.any
   1fbf8:	mov	w8, #0x2e                  	// #46
   1fbfc:	mov	x0, x3
   1fc00:	strb	w8, [x0], #1
   1fc04:	mov	x9, #0xeac3                	// #60099
   1fc08:	movk	x9, #0xf3dc, lsl #16
   1fc0c:	movk	x9, #0x4075, lsl #32
   1fc10:	lsr	x8, x1, #15
   1fc14:	movk	x9, #0x2, lsl #48
   1fc18:	mov	x10, #0x3ffffffff8000       	// #1125899906809856
   1fc1c:	umulh	x8, x8, x9
   1fc20:	movk	x10, #0xa4c6, lsl #16
   1fc24:	lsr	x8, x8, #20
   1fc28:	movk	x10, #0x8d7e, lsl #32
   1fc2c:	add	w9, w8, #0x30
   1fc30:	strb	w9, [x0], #1
   1fc34:	msub	x1, x8, x10, x1
   1fc38:	cmp	x0, x3
   1fc3c:	b.ne	1fc4c <PyInit__decimal@@Base+0x19198>  // b.any
   1fc40:	mov	w8, #0x2e                  	// #46
   1fc44:	mov	x0, x3
   1fc48:	strb	w8, [x0], #1
   1fc4c:	mov	x8, #0xcd81                	// #52609
   1fc50:	movk	x8, #0x5095, lsl #16
   1fc54:	movk	x8, #0x4dc3, lsl #32
   1fc58:	movk	x8, #0xb42, lsl #48
   1fc5c:	mov	x9, #0x4000                	// #16384
   1fc60:	umulh	x8, x1, x8
   1fc64:	movk	x9, #0x107a, lsl #16
   1fc68:	lsr	x8, x8, #42
   1fc6c:	movk	x9, #0x5af3, lsl #32
   1fc70:	add	w10, w8, #0x30
   1fc74:	strb	w10, [x0], #1
   1fc78:	msub	x1, x8, x9, x1
   1fc7c:	cmp	x0, x3
   1fc80:	b.ne	1fc90 <PyInit__decimal@@Base+0x191dc>  // b.any
   1fc84:	mov	w8, #0x2e                  	// #46
   1fc88:	mov	x0, x3
   1fc8c:	strb	w8, [x0], #1
   1fc90:	mov	x8, #0x385                 	// #901
   1fc94:	movk	x8, #0x92ed, lsl #16
   1fc98:	movk	x8, #0x84d0, lsl #32
   1fc9c:	movk	x8, #0x384b, lsl #48
   1fca0:	mov	x9, #0xa000                	// #40960
   1fca4:	umulh	x8, x1, x8
   1fca8:	movk	x9, #0x4e72, lsl #16
   1fcac:	lsr	x8, x8, #41
   1fcb0:	movk	x9, #0x918, lsl #32
   1fcb4:	add	w10, w8, #0x30
   1fcb8:	strb	w10, [x0], #1
   1fcbc:	msub	x1, x8, x9, x1
   1fcc0:	cmp	x0, x3
   1fcc4:	b.ne	1fcd4 <PyInit__decimal@@Base+0x19220>  // b.any
   1fcc8:	mov	w8, #0x2e                  	// #46
   1fccc:	mov	x0, x3
   1fcd0:	strb	w8, [x0], #1
   1fcd4:	mov	x8, #0x2233                	// #8755
   1fcd8:	movk	x8, #0x5bd4, lsl #16
   1fcdc:	movk	x8, #0x3302, lsl #32
   1fce0:	movk	x8, #0x232f, lsl #48
   1fce4:	mov	x9, #0x1000                	// #4096
   1fce8:	umulh	x8, x1, x8
   1fcec:	movk	x9, #0xd4a5, lsl #16
   1fcf0:	lsr	x8, x8, #37
   1fcf4:	movk	x9, #0xe8, lsl #32
   1fcf8:	add	w10, w8, #0x30
   1fcfc:	strb	w10, [x0], #1
   1fd00:	msub	x1, x8, x9, x1
   1fd04:	cmp	x0, x3
   1fd08:	b.ne	1fd18 <PyInit__decimal@@Base+0x19264>  // b.any
   1fd0c:	mov	w8, #0x2e                  	// #46
   1fd10:	mov	x0, x3
   1fd14:	strb	w8, [x0], #1
   1fd18:	mov	x8, #0xaaff                	// #43775
   1fd1c:	movk	x8, #0xcb24, lsl #16
   1fd20:	movk	x8, #0xff0b, lsl #32
   1fd24:	movk	x8, #0xafeb, lsl #48
   1fd28:	mov	x9, #0xe800                	// #59392
   1fd2c:	umulh	x8, x1, x8
   1fd30:	movk	x9, #0x4876, lsl #16
   1fd34:	lsr	x8, x8, #36
   1fd38:	movk	x9, #0x17, lsl #32
   1fd3c:	add	w10, w8, #0x30
   1fd40:	strb	w10, [x0], #1
   1fd44:	msub	x1, x8, x9, x1
   1fd48:	cmp	x0, x3
   1fd4c:	b.ne	1fd5c <PyInit__decimal@@Base+0x192a8>  // b.any
   1fd50:	mov	w8, #0x2e                  	// #46
   1fd54:	mov	x0, x3
   1fd58:	strb	w8, [x0], #1
   1fd5c:	mov	x8, #0xd5bf                	// #54719
   1fd60:	movk	x8, #0xbded, lsl #16
   1fd64:	movk	x8, #0xfece, lsl #32
   1fd68:	movk	x8, #0xdbe6, lsl #48
   1fd6c:	mov	x9, #0xe400                	// #58368
   1fd70:	umulh	x8, x1, x8
   1fd74:	movk	x9, #0x540b, lsl #16
   1fd78:	lsr	x8, x8, #33
   1fd7c:	movk	x9, #0x2, lsl #32
   1fd80:	add	w10, w8, #0x30
   1fd84:	strb	w10, [x0], #1
   1fd88:	msub	x1, x8, x9, x1
   1fd8c:	cmp	x0, x3
   1fd90:	b.ne	1fda0 <PyInit__decimal@@Base+0x192ec>  // b.any
   1fd94:	mov	w8, #0x2e                  	// #46
   1fd98:	mov	x0, x3
   1fd9c:	strb	w8, [x0], #1
   1fda0:	mov	x9, #0x5a53                	// #23123
   1fda4:	movk	x9, #0xa09b, lsl #16
   1fda8:	movk	x9, #0xb82f, lsl #32
   1fdac:	lsr	x8, x1, #9
   1fdb0:	movk	x9, #0x44, lsl #48
   1fdb4:	umulh	x8, x8, x9
   1fdb8:	mov	w10, #0xca00                	// #51712
   1fdbc:	lsr	x8, x8, #11
   1fdc0:	movk	w10, #0x3b9a, lsl #16
   1fdc4:	add	w9, w8, #0x30
   1fdc8:	strb	w9, [x0], #1
   1fdcc:	msub	x1, x8, x10, x1
   1fdd0:	cmp	x0, x3
   1fdd4:	b.ne	1fde4 <PyInit__decimal@@Base+0x19330>  // b.any
   1fdd8:	mov	w8, #0x2e                  	// #46
   1fddc:	mov	x0, x3
   1fde0:	strb	w8, [x0], #1
   1fde4:	mov	x8, #0xcefd                	// #52989
   1fde8:	movk	x8, #0x8461, lsl #16
   1fdec:	movk	x8, #0x7711, lsl #32
   1fdf0:	movk	x8, #0xabcc, lsl #48
   1fdf4:	umulh	x8, x1, x8
   1fdf8:	mov	w9, #0xe100                	// #57600
   1fdfc:	lsr	x8, x8, #26
   1fe00:	movk	w9, #0x5f5, lsl #16
   1fe04:	add	w10, w8, #0x30
   1fe08:	strb	w10, [x0], #1
   1fe0c:	msub	x1, x8, x9, x1
   1fe10:	cmp	x0, x3
   1fe14:	b.ne	1fe24 <PyInit__decimal@@Base+0x19370>  // b.any
   1fe18:	mov	w8, #0x2e                  	// #46
   1fe1c:	mov	x0, x3
   1fe20:	strb	w8, [x0], #1
   1fe24:	mov	x8, #0x42bd                	// #17085
   1fe28:	movk	x8, #0xe57a, lsl #16
   1fe2c:	movk	x8, #0x94d5, lsl #32
   1fe30:	movk	x8, #0xd6bf, lsl #48
   1fe34:	umulh	x8, x1, x8
   1fe38:	mov	w9, #0x9680                	// #38528
   1fe3c:	lsr	x8, x8, #23
   1fe40:	movk	w9, #0x98, lsl #16
   1fe44:	add	w10, w8, #0x30
   1fe48:	strb	w10, [x0], #1
   1fe4c:	msub	x1, x8, x9, x1
   1fe50:	cmp	x0, x3
   1fe54:	b.ne	1fe64 <PyInit__decimal@@Base+0x193b0>  // b.any
   1fe58:	mov	w8, #0x2e                  	// #46
   1fe5c:	mov	x0, x3
   1fe60:	strb	w8, [x0], #1
   1fe64:	mov	x8, #0x34db                	// #13531
   1fe68:	movk	x8, #0xd7b6, lsl #16
   1fe6c:	movk	x8, #0xde82, lsl #32
   1fe70:	movk	x8, #0x431b, lsl #48
   1fe74:	umulh	x8, x1, x8
   1fe78:	mov	w9, #0x4240                	// #16960
   1fe7c:	lsr	x8, x8, #18
   1fe80:	movk	w9, #0xf, lsl #16
   1fe84:	add	w10, w8, #0x30
   1fe88:	strb	w10, [x0], #1
   1fe8c:	msub	x1, x8, x9, x1
   1fe90:	cmp	x0, x3
   1fe94:	b.ne	1fea4 <PyInit__decimal@@Base+0x193f0>  // b.any
   1fe98:	mov	w8, #0x2e                  	// #46
   1fe9c:	mov	x0, x3
   1fea0:	strb	w8, [x0], #1
   1fea4:	mov	x9, #0x7843                	// #30787
   1fea8:	movk	x9, #0x71b4, lsl #16
   1feac:	movk	x9, #0x5ac4, lsl #32
   1feb0:	lsr	x8, x1, #5
   1feb4:	movk	x9, #0xa7c, lsl #48
   1feb8:	umulh	x8, x8, x9
   1febc:	mov	w10, #0x86a0                	// #34464
   1fec0:	lsr	x8, x8, #7
   1fec4:	movk	w10, #0x1, lsl #16
   1fec8:	add	w9, w8, #0x30
   1fecc:	strb	w9, [x0], #1
   1fed0:	msub	x1, x8, x10, x1
   1fed4:	cmp	x0, x3
   1fed8:	b.ne	1fee8 <PyInit__decimal@@Base+0x19434>  // b.any
   1fedc:	mov	w8, #0x2e                  	// #46
   1fee0:	mov	x0, x3
   1fee4:	strb	w8, [x0], #1
   1fee8:	mov	x8, #0x594b                	// #22859
   1feec:	movk	x8, #0x3886, lsl #16
   1fef0:	movk	x8, #0xc5d6, lsl #32
   1fef4:	movk	x8, #0x346d, lsl #48
   1fef8:	umulh	x8, x1, x8
   1fefc:	lsr	x8, x8, #11
   1ff00:	mov	w9, #0x2710                	// #10000
   1ff04:	add	w10, w8, #0x30
   1ff08:	strb	w10, [x0], #1
   1ff0c:	msub	x1, x8, x9, x1
   1ff10:	cmp	x0, x3
   1ff14:	b.ne	1ff24 <PyInit__decimal@@Base+0x19470>  // b.any
   1ff18:	mov	w8, #0x2e                  	// #46
   1ff1c:	mov	x0, x3
   1ff20:	strb	w8, [x0], #1
   1ff24:	mov	x9, #0xf7cf                	// #63439
   1ff28:	movk	x9, #0xe353, lsl #16
   1ff2c:	movk	x9, #0x9ba5, lsl #32
   1ff30:	lsr	x8, x1, #3
   1ff34:	movk	x9, #0x20c4, lsl #48
   1ff38:	umulh	x8, x8, x9
   1ff3c:	lsr	x8, x8, #4
   1ff40:	mov	w10, #0x3e8                 	// #1000
   1ff44:	add	w9, w8, #0x30
   1ff48:	strb	w9, [x0], #1
   1ff4c:	msub	x1, x8, x10, x1
   1ff50:	cmp	x0, x3
   1ff54:	b.ne	1ff64 <PyInit__decimal@@Base+0x194b0>  // b.any
   1ff58:	mov	w8, #0x2e                  	// #46
   1ff5c:	mov	x0, x3
   1ff60:	strb	w8, [x0], #1
   1ff64:	mov	x9, #0xf5c3                	// #62915
   1ff68:	movk	x9, #0x5c28, lsl #16
   1ff6c:	movk	x9, #0xc28f, lsl #32
   1ff70:	lsr	x8, x1, #2
   1ff74:	movk	x9, #0x28f5, lsl #48
   1ff78:	umulh	x8, x8, x9
   1ff7c:	lsr	x8, x8, #2
   1ff80:	mov	w10, #0x64                  	// #100
   1ff84:	add	w9, w8, #0x30
   1ff88:	strb	w9, [x0], #1
   1ff8c:	msub	x1, x8, x10, x1
   1ff90:	cmp	x0, x3
   1ff94:	b.ne	1ffa4 <PyInit__decimal@@Base+0x194f0>  // b.any
   1ff98:	mov	w8, #0x2e                  	// #46
   1ff9c:	mov	x0, x3
   1ffa0:	strb	w8, [x0], #1
   1ffa4:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   1ffa8:	movk	x8, #0xcccd
   1ffac:	umulh	x8, x1, x8
   1ffb0:	lsr	x8, x8, #3
   1ffb4:	mov	w9, #0xa                   	// #10
   1ffb8:	add	w10, w8, #0x30
   1ffbc:	strb	w10, [x0], #1
   1ffc0:	msub	x1, x8, x9, x1
   1ffc4:	cmp	x0, x3
   1ffc8:	b.ne	1ffd8 <PyInit__decimal@@Base+0x19524>  // b.any
   1ffcc:	mov	w8, #0x2e                  	// #46
   1ffd0:	strb	w8, [x3], #1
   1ffd4:	mov	x0, x3
   1ffd8:	add	w8, w1, #0x30
   1ffdc:	strb	w8, [x0], #1
   1ffe0:	strb	wzr, [x0]
   1ffe4:	ret
   1ffe8:	stp	x29, x30, [sp, #-96]!
   1ffec:	stp	x28, x27, [sp, #16]
   1fff0:	stp	x26, x25, [sp, #32]
   1fff4:	stp	x24, x23, [sp, #48]
   1fff8:	stp	x22, x21, [sp, #64]
   1fffc:	stp	x20, x19, [sp, #80]
   20000:	mov	x29, sp
   20004:	mov	x19, x0
   20008:	ldr	x0, [x7, #32]
   2000c:	cmp	x1, #0x0
   20010:	mov	x21, x7
   20014:	mov	x26, x6
   20018:	mov	x27, x5
   2001c:	mov	x25, x4
   20020:	mov	x23, x3
   20024:	mov	x24, x2
   20028:	mov	x20, x1
   2002c:	cset	w28, ne  // ne = any
   20030:	bl	6420 <strlen@plt>
   20034:	ldr	x8, [x19]
   20038:	ldr	x9, [x19, #24]
   2003c:	mov	x22, x0
   20040:	stp	x26, x26, [x19]
   20044:	sub	x10, x8, x26
   20048:	str	x10, [x19, #16]
   2004c:	cbz	x9, 20078 <PyInit__decimal@@Base+0x195c4>
   20050:	cmp	x26, #0x1
   20054:	b.mi	20078 <PyInit__decimal@@Base+0x195c4>  // b.first
   20058:	add	x8, x8, x9
   2005c:	sub	x8, x8, #0x1
   20060:	sub	x9, x27, #0x1
   20064:	ldrb	w10, [x9, x26]
   20068:	sub	x26, x26, #0x1
   2006c:	cmp	x26, #0x0
   20070:	strb	w10, [x8], #-1
   20074:	b.gt	20064 <PyInit__decimal@@Base+0x195b0>
   20078:	cbz	x25, 200d0 <PyInit__decimal@@Base+0x1961c>
   2007c:	mov	x0, x25
   20080:	bl	6420 <strlen@plt>
   20084:	ldp	x10, x11, [x19]
   20088:	ldp	x8, x9, [x19, #16]
   2008c:	cmp	x0, #0x0
   20090:	add	x10, x10, x0
   20094:	cinc	x11, x11, gt
   20098:	sub	x12, x8, x0
   2009c:	stp	x10, x11, [x19]
   200a0:	str	x12, [x19, #16]
   200a4:	cbz	x9, 200d0 <PyInit__decimal@@Base+0x1961c>
   200a8:	cmp	x0, #0x1
   200ac:	b.mi	200d0 <PyInit__decimal@@Base+0x1961c>  // b.first
   200b0:	add	x8, x8, x9
   200b4:	sub	x8, x8, #0x1
   200b8:	sub	x9, x25, #0x1
   200bc:	ldrb	w10, [x9, x0]
   200c0:	sub	x0, x0, #0x1
   200c4:	cmp	x0, #0x0
   200c8:	strb	w10, [x8], #-1
   200cc:	b.gt	200bc <PyInit__decimal@@Base+0x19608>
   200d0:	ldr	x25, [x21, #40]
   200d4:	mov	w27, wzr
   200d8:	sub	x26, x24, #0x1
   200dc:	ldrb	w9, [x25]
   200e0:	and	x24, x9, #0xff
   200e4:	mov	x8, x23
   200e8:	ands	w9, w9, #0xff
   200ec:	b.eq	20100 <PyInit__decimal@@Base+0x1964c>  // b.none
   200f0:	cmp	w9, #0xff
   200f4:	b.eq	20100 <PyInit__decimal@@Base+0x1964c>  // b.none
   200f8:	cmp	x24, x8
   200fc:	b.le	20104 <PyInit__decimal@@Base+0x19650>
   20100:	mov	x24, x8
   20104:	sub	x23, x8, x24
   20108:	dup	v0.2d, x24
   2010c:	cbz	w27, 2014c <PyInit__decimal@@Base+0x19698>
   20110:	ldr	q1, [x19]
   20114:	ldr	x8, [x19, #16]
   20118:	cmp	x24, #0x1
   2011c:	add	v0.2d, v1.2d, v0.2d
   20120:	sub	x8, x8, x24
   20124:	str	q0, [x19]
   20128:	str	x8, [x19, #16]
   2012c:	b.mi	20194 <PyInit__decimal@@Base+0x196e0>  // b.first
   20130:	ldr	x9, [x19, #24]
   20134:	cbz	x9, 20194 <PyInit__decimal@@Base+0x196e0>
   20138:	add	x0, x9, x8
   2013c:	mov	w1, #0x30                  	// #48
   20140:	mov	x2, x24
   20144:	bl	65b0 <memset@plt>
   20148:	b	20194 <PyInit__decimal@@Base+0x196e0>
   2014c:	ldr	q1, [x19]
   20150:	ldp	x9, x10, [x19, #16]
   20154:	add	v0.2d, v1.2d, v0.2d
   20158:	sub	x11, x9, x24
   2015c:	str	q0, [x19]
   20160:	str	x11, [x19, #16]
   20164:	cbz	x10, 20194 <PyInit__decimal@@Base+0x196e0>
   20168:	cmp	x24, #0x1
   2016c:	b.mi	20194 <PyInit__decimal@@Base+0x196e0>  // b.first
   20170:	add	x9, x10, x9
   20174:	sub	x9, x9, #0x1
   20178:	add	x8, x26, x8
   2017c:	mov	x10, x24
   20180:	ldrb	w11, [x8], #-1
   20184:	sub	x10, x10, #0x1
   20188:	cmp	x10, #0x0
   2018c:	strb	w11, [x9], #-1
   20190:	b.gt	20180 <PyInit__decimal@@Base+0x196cc>
   20194:	cbnz	x23, 201d0 <PyInit__decimal@@Base+0x1971c>
   20198:	ldrb	w8, [x21, #17]
   2019c:	cmp	w8, #0x7a
   201a0:	b.ne	20258 <PyInit__decimal@@Base+0x197a4>  // b.any
   201a4:	ldr	x8, [x19, #8]
   201a8:	ldr	x9, [x21]
   201ac:	add	x8, x8, x28
   201b0:	subs	x8, x9, x8
   201b4:	b.le	20258 <PyInit__decimal@@Base+0x197a4>
   201b8:	ldrb	w9, [x25]
   201bc:	mov	w27, #0x1                   	// #1
   201c0:	sub	x24, x9, x24
   201c4:	ands	w9, w9, #0xff
   201c8:	b.ne	200f0 <PyInit__decimal@@Base+0x1963c>  // b.any
   201cc:	b	20100 <PyInit__decimal@@Base+0x1964c>
   201d0:	cmp	x22, #0x1
   201d4:	b.lt	20238 <PyInit__decimal@@Base+0x19784>  // b.tstop
   201d8:	cmp	w27, #0x0
   201dc:	ldp	x11, x12, [x19]
   201e0:	cset	w9, ne  // ne = any
   201e4:	cmp	x23, #0x1
   201e8:	cset	w10, gt
   201ec:	and	w9, w9, w10
   201f0:	sub	x23, x23, x9
   201f4:	add	x9, x11, x22
   201f8:	ldr	x8, [x21, #32]
   201fc:	str	x9, [x19]
   20200:	ldp	x9, x10, [x19, #16]
   20204:	add	x11, x12, #0x1
   20208:	str	x11, [x19, #8]
   2020c:	sub	x11, x9, x22
   20210:	str	x11, [x19, #16]
   20214:	cbz	x10, 20238 <PyInit__decimal@@Base+0x19784>
   20218:	add	x9, x10, x9
   2021c:	sub	x8, x8, #0x1
   20220:	sub	x9, x9, #0x1
   20224:	mov	x10, x22
   20228:	ldrb	w11, [x8, x10]
   2022c:	subs	x10, x10, #0x1
   20230:	strb	w11, [x9], #-1
   20234:	b.gt	20228 <PyInit__decimal@@Base+0x19774>
   20238:	ldrb	w8, [x25]
   2023c:	mov	w9, wzr
   20240:	cbz	w8, 200e0 <PyInit__decimal@@Base+0x1962c>
   20244:	mov	x8, x25
   20248:	ldrb	w9, [x8, #1]!
   2024c:	cmp	w9, #0x0
   20250:	csel	x25, x25, x8, eq  // eq = none
   20254:	b	200dc <PyInit__decimal@@Base+0x19628>
   20258:	cbz	x20, 20288 <PyInit__decimal@@Base+0x197d4>
   2025c:	ldr	q0, [x19]
   20260:	ldp	x10, x8, [x19, #16]
   20264:	mov	w9, #0x1                   	// #1
   20268:	dup	v1.2d, x9
   2026c:	add	v0.2d, v0.2d, v1.2d
   20270:	sub	x9, x10, #0x1
   20274:	str	q0, [x19]
   20278:	str	x9, [x19, #16]
   2027c:	cbz	x8, 20298 <PyInit__decimal@@Base+0x197e4>
   20280:	ldrb	w10, [x20]
   20284:	strb	w10, [x8, x9]
   20288:	ldr	x8, [x19, #24]
   2028c:	cbz	x8, 20298 <PyInit__decimal@@Base+0x197e4>
   20290:	ldr	x9, [x19]
   20294:	strb	wzr, [x8, x9]
   20298:	ldp	x20, x19, [sp, #80]
   2029c:	ldp	x22, x21, [sp, #64]
   202a0:	ldp	x24, x23, [sp, #48]
   202a4:	ldp	x26, x25, [sp, #32]
   202a8:	ldp	x28, x27, [sp, #16]
   202ac:	ldp	x29, x30, [sp], #96
   202b0:	ret
   202b4:	stp	x29, x30, [sp, #-32]!
   202b8:	stp	x20, x19, [sp, #16]
   202bc:	mov	x29, sp
   202c0:	umulh	x8, x1, x0
   202c4:	cmp	xzr, x8
   202c8:	mov	x19, xzr
   202cc:	b.ne	202fc <PyInit__decimal@@Base+0x19848>  // b.any
   202d0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   202d4:	ldr	x8, [x8, #1352]
   202d8:	mul	x20, x1, x0
   202dc:	mov	x0, x20
   202e0:	blr	x8
   202e4:	mov	x19, x0
   202e8:	cbz	x0, 202fc <PyInit__decimal@@Base+0x19848>
   202ec:	mov	x0, x19
   202f0:	mov	w1, wzr
   202f4:	mov	x2, x20
   202f8:	bl	65b0 <memset@plt>
   202fc:	mov	x0, x19
   20300:	ldp	x20, x19, [sp, #16]
   20304:	ldp	x29, x30, [sp], #32
   20308:	ret
   2030c:	umulh	x8, x1, x0
   20310:	cmp	xzr, x8
   20314:	b.eq	20320 <PyInit__decimal@@Base+0x1986c>  // b.none
   20318:	mov	x0, xzr
   2031c:	ret
   20320:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20324:	ldr	x2, [x8, #1352]
   20328:	mul	x0, x1, x0
   2032c:	br	x2
   20330:	umulh	x8, x1, x0
   20334:	cmp	xzr, x8
   20338:	b.eq	20344 <PyInit__decimal@@Base+0x19890>  // b.none
   2033c:	mov	x0, xzr
   20340:	ret
   20344:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20348:	ldr	x2, [x8, #1368]
   2034c:	br	x2
   20350:	stp	x29, x30, [sp, #-32]!
   20354:	stp	x20, x19, [sp, #16]
   20358:	mov	x29, sp
   2035c:	umulh	x8, x2, x1
   20360:	mov	x19, x3
   20364:	cmp	xzr, x8
   20368:	mov	x20, x0
   2036c:	b.ne	20388 <PyInit__decimal@@Base+0x198d4>  // b.any
   20370:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20374:	ldr	x8, [x8, #1360]
   20378:	mul	x1, x2, x1
   2037c:	mov	x0, x20
   20380:	blr	x8
   20384:	cbnz	x0, 20394 <PyInit__decimal@@Base+0x198e0>
   20388:	mov	w8, #0x1                   	// #1
   2038c:	mov	x0, x20
   20390:	strb	w8, [x19]
   20394:	ldp	x20, x19, [sp, #16]
   20398:	ldp	x29, x30, [sp], #32
   2039c:	ret
   203a0:	umulh	x8, x2, x1
   203a4:	cmp	xzr, x8
   203a8:	b.ne	203b8 <PyInit__decimal@@Base+0x19904>  // b.any
   203ac:	mul	x8, x2, x1
   203b0:	adds	x0, x8, x0
   203b4:	b.cc	203c0 <PyInit__decimal@@Base+0x1990c>  // b.lo, b.ul, b.last
   203b8:	mov	x0, xzr
   203bc:	ret
   203c0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   203c4:	ldr	x1, [x8, #1352]
   203c8:	br	x1
   203cc:	stp	x29, x30, [sp, #-48]!
   203d0:	str	x21, [sp, #16]
   203d4:	stp	x20, x19, [sp, #32]
   203d8:	mov	x29, sp
   203dc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   203e0:	ldr	x8, [x8, #1344]
   203e4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   203e8:	ldr	x9, [x21, #1352]
   203ec:	cmp	x8, x0
   203f0:	csel	x20, x8, x0, gt
   203f4:	mov	w0, #0x30                  	// #48
   203f8:	blr	x9
   203fc:	mov	x19, x0
   20400:	cbz	x0, 2044c <PyInit__decimal@@Base+0x19998>
   20404:	cmp	xzr, x20, lsr #61
   20408:	b.eq	20414 <PyInit__decimal@@Base+0x19960>  // b.none
   2040c:	str	xzr, [x19, #40]
   20410:	b	20438 <PyInit__decimal@@Base+0x19984>
   20414:	ldr	x8, [x21, #1352]
   20418:	lsl	x0, x20, #3
   2041c:	blr	x8
   20420:	str	x0, [x19, #40]
   20424:	cbz	x0, 20438 <PyInit__decimal@@Base+0x19984>
   20428:	strb	wzr, [x19]
   2042c:	stp	xzr, xzr, [x19, #8]
   20430:	stp	xzr, x20, [x19, #24]
   20434:	b	2044c <PyInit__decimal@@Base+0x19998>
   20438:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2043c:	ldr	x8, [x8, #1376]
   20440:	mov	x0, x19
   20444:	blr	x8
   20448:	mov	x19, xzr
   2044c:	mov	x0, x19
   20450:	ldp	x20, x19, [sp, #32]
   20454:	ldr	x21, [sp, #16]
   20458:	ldp	x29, x30, [sp], #48
   2045c:	ret
   20460:	stp	x29, x30, [sp, #-48]!
   20464:	str	x21, [sp, #16]
   20468:	stp	x20, x19, [sp, #32]
   2046c:	mov	x29, sp
   20470:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20474:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   20478:	ldr	x20, [x8, #1344]
   2047c:	ldr	x8, [x21, #1352]
   20480:	mov	w0, #0x30                  	// #48
   20484:	blr	x8
   20488:	mov	x19, x0
   2048c:	cbz	x0, 204d8 <PyInit__decimal@@Base+0x19a24>
   20490:	cmp	xzr, x20, lsr #61
   20494:	b.eq	204a0 <PyInit__decimal@@Base+0x199ec>  // b.none
   20498:	str	xzr, [x19, #40]
   2049c:	b	204c4 <PyInit__decimal@@Base+0x19a10>
   204a0:	ldr	x8, [x21, #1352]
   204a4:	lsl	x0, x20, #3
   204a8:	blr	x8
   204ac:	str	x0, [x19, #40]
   204b0:	cbz	x0, 204c4 <PyInit__decimal@@Base+0x19a10>
   204b4:	strb	wzr, [x19]
   204b8:	stp	xzr, xzr, [x19, #8]
   204bc:	stp	xzr, x20, [x19, #24]
   204c0:	b	204d8 <PyInit__decimal@@Base+0x19a24>
   204c4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   204c8:	ldr	x8, [x8, #1376]
   204cc:	mov	x0, x19
   204d0:	blr	x8
   204d4:	mov	x19, xzr
   204d8:	mov	x0, x19
   204dc:	ldp	x20, x19, [sp, #32]
   204e0:	ldr	x21, [sp, #16]
   204e4:	ldp	x29, x30, [sp], #48
   204e8:	ret
   204ec:	stp	x29, x30, [sp, #-48]!
   204f0:	stp	x22, x21, [sp, #16]
   204f4:	stp	x20, x19, [sp, #32]
   204f8:	mov	x29, sp
   204fc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20500:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   20504:	ldr	x21, [x8, #1344]
   20508:	ldr	x8, [x22, #1352]
   2050c:	mov	x19, x0
   20510:	mov	w0, #0x30                  	// #48
   20514:	blr	x8
   20518:	cbz	x0, 20564 <PyInit__decimal@@Base+0x19ab0>
   2051c:	mov	x20, x0
   20520:	cmp	xzr, x21, lsr #61
   20524:	b.eq	20530 <PyInit__decimal@@Base+0x19a7c>  // b.none
   20528:	str	xzr, [x20, #40]
   2052c:	b	20554 <PyInit__decimal@@Base+0x19aa0>
   20530:	ldr	x8, [x22, #1352]
   20534:	lsl	x0, x21, #3
   20538:	blr	x8
   2053c:	str	x0, [x20, #40]
   20540:	cbz	x0, 20554 <PyInit__decimal@@Base+0x19aa0>
   20544:	strb	wzr, [x20]
   20548:	stp	xzr, xzr, [x20, #8]
   2054c:	stp	xzr, x21, [x20, #24]
   20550:	b	20574 <PyInit__decimal@@Base+0x19ac0>
   20554:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20558:	ldr	x8, [x8, #1376]
   2055c:	mov	x0, x20
   20560:	blr	x8
   20564:	mov	w1, #0x200                 	// #512
   20568:	mov	x0, x19
   2056c:	bl	1c828 <PyInit__decimal@@Base+0x15d74>
   20570:	mov	x20, xzr
   20574:	mov	x0, x20
   20578:	ldp	x20, x19, [sp, #32]
   2057c:	ldp	x22, x21, [sp, #16]
   20580:	ldp	x29, x30, [sp], #48
   20584:	ret
   20588:	stp	x29, x30, [sp, #-48]!
   2058c:	stp	x22, x21, [sp, #16]
   20590:	stp	x20, x19, [sp, #32]
   20594:	mov	x29, sp
   20598:	ldr	x21, [x0, #40]
   2059c:	mov	x19, x0
   205a0:	cmp	xzr, x1, lsr #61
   205a4:	mov	x20, x2
   205a8:	b.eq	205b4 <PyInit__decimal@@Base+0x19b00>  // b.none
   205ac:	str	xzr, [x19, #40]
   205b0:	b	205f4 <PyInit__decimal@@Base+0x19b40>
   205b4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   205b8:	ldr	x8, [x8, #1352]
   205bc:	lsl	x0, x1, #3
   205c0:	mov	x22, x1
   205c4:	blr	x8
   205c8:	str	x0, [x19, #40]
   205cc:	cbz	x0, 205f4 <PyInit__decimal@@Base+0x19b40>
   205d0:	ldr	x8, [x19, #32]
   205d4:	mov	x1, x21
   205d8:	lsl	x2, x8, #3
   205dc:	bl	63c0 <memcpy@plt>
   205e0:	mov	x0, x19
   205e4:	str	x22, [x19, #32]
   205e8:	bl	21258 <PyInit__decimal@@Base+0x1a7a4>
   205ec:	mov	w0, #0x1                   	// #1
   205f0:	b	20620 <PyInit__decimal@@Base+0x19b6c>
   205f4:	mov	x0, x19
   205f8:	str	x21, [x19, #40]
   205fc:	bl	211f0 <PyInit__decimal@@Base+0x1a73c>
   20600:	mov	x0, x19
   20604:	bl	21228 <PyInit__decimal@@Base+0x1a774>
   20608:	stp	xzr, xzr, [x19, #8]
   2060c:	str	xzr, [x19, #24]
   20610:	ldr	w8, [x20]
   20614:	mov	w0, wzr
   20618:	orr	w8, w8, #0x200
   2061c:	str	w8, [x20]
   20620:	ldp	x20, x19, [sp, #32]
   20624:	ldp	x22, x21, [sp, #16]
   20628:	ldp	x29, x30, [sp], #48
   2062c:	ret
   20630:	stp	x29, x30, [sp, #-48]!
   20634:	stp	x22, x21, [sp, #16]
   20638:	stp	x20, x19, [sp, #32]
   2063c:	mov	x29, sp
   20640:	ldr	x22, [x0, #40]
   20644:	mov	x19, x0
   20648:	lsr	x8, x1, #61
   2064c:	mov	x20, x2
   20650:	cbz	x8, 2065c <PyInit__decimal@@Base+0x19ba8>
   20654:	str	xzr, [x19, #40]
   20658:	b	20690 <PyInit__decimal@@Base+0x19bdc>
   2065c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20660:	ldr	x8, [x8, #1368]
   20664:	mov	x21, x1
   20668:	mov	w1, #0x8                   	// #8
   2066c:	mov	x0, x21
   20670:	blr	x8
   20674:	str	x0, [x19, #40]
   20678:	cbz	x0, 20690 <PyInit__decimal@@Base+0x19bdc>
   2067c:	mov	x0, x19
   20680:	str	x21, [x19, #32]
   20684:	bl	21258 <PyInit__decimal@@Base+0x1a7a4>
   20688:	mov	w0, #0x1                   	// #1
   2068c:	b	206bc <PyInit__decimal@@Base+0x19c08>
   20690:	mov	x0, x19
   20694:	str	x22, [x19, #40]
   20698:	bl	211f0 <PyInit__decimal@@Base+0x1a73c>
   2069c:	mov	x0, x19
   206a0:	bl	21228 <PyInit__decimal@@Base+0x1a774>
   206a4:	stp	xzr, xzr, [x19, #8]
   206a8:	str	xzr, [x19, #24]
   206ac:	ldr	w8, [x20]
   206b0:	mov	w0, wzr
   206b4:	orr	w8, w8, #0x200
   206b8:	str	w8, [x20]
   206bc:	ldp	x20, x19, [sp, #32]
   206c0:	ldp	x22, x21, [sp, #16]
   206c4:	ldp	x29, x30, [sp], #48
   206c8:	ret
   206cc:	stp	x29, x30, [sp, #-48]!
   206d0:	stp	x22, x21, [sp, #16]
   206d4:	stp	x20, x19, [sp, #32]
   206d8:	mov	x29, sp
   206dc:	ldr	x22, [x0, #40]
   206e0:	mov	x19, x0
   206e4:	mov	x21, x1
   206e8:	cmp	xzr, x1, lsr #61
   206ec:	mov	x20, x2
   206f0:	b.ne	20714 <PyInit__decimal@@Base+0x19c60>  // b.any
   206f4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   206f8:	ldr	x8, [x8, #1360]
   206fc:	lsl	x1, x21, #3
   20700:	mov	x0, x22
   20704:	blr	x8
   20708:	cbz	x0, 20714 <PyInit__decimal@@Base+0x19c60>
   2070c:	stp	x21, x0, [x19, #32]
   20710:	b	20750 <PyInit__decimal@@Base+0x19c9c>
   20714:	ldr	x8, [x19, #32]
   20718:	str	x22, [x19, #40]
   2071c:	cmp	x8, x21
   20720:	b.ge	20750 <PyInit__decimal@@Base+0x19c9c>  // b.tcont
   20724:	mov	x0, x19
   20728:	bl	211f0 <PyInit__decimal@@Base+0x1a73c>
   2072c:	mov	x0, x19
   20730:	bl	21228 <PyInit__decimal@@Base+0x1a774>
   20734:	stp	xzr, xzr, [x19, #8]
   20738:	str	xzr, [x19, #24]
   2073c:	ldr	w8, [x20]
   20740:	mov	w0, wzr
   20744:	orr	w8, w8, #0x200
   20748:	str	w8, [x20]
   2074c:	b	20754 <PyInit__decimal@@Base+0x19ca0>
   20750:	mov	w0, #0x1                   	// #1
   20754:	ldp	x20, x19, [sp, #32]
   20758:	ldp	x22, x21, [sp, #16]
   2075c:	ldp	x29, x30, [sp], #48
   20760:	ret
   20764:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   20768:	add	x0, x0, #0xc8
   2076c:	ret
   20770:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   20774:	add	x8, x8, #0x370
   20778:	ldr	x9, [x8, #72]
   2077c:	cmp	x9, x0
   20780:	b.ls	207b0 <PyInit__decimal@@Base+0x19cfc>  // b.plast
   20784:	ldr	x9, [x8, #32]
   20788:	cmp	x9, x0
   2078c:	b.ls	207dc <PyInit__decimal@@Base+0x19d28>  // b.plast
   20790:	ldr	x9, [x8, #16]
   20794:	cmp	x9, x0
   20798:	b.ls	20828 <PyInit__decimal@@Base+0x19d74>  // b.plast
   2079c:	ldr	x8, [x8, #8]
   207a0:	cmp	x8, x0
   207a4:	mov	w8, #0x1                   	// #1
   207a8:	cinc	w0, w8, ls  // ls = plast
   207ac:	ret
   207b0:	ldr	x9, [x8, #112]
   207b4:	cmp	x9, x0
   207b8:	b.ls	207fc <PyInit__decimal@@Base+0x19d48>  // b.plast
   207bc:	ldr	x9, [x8, #88]
   207c0:	cmp	x9, x0
   207c4:	b.ls	2083c <PyInit__decimal@@Base+0x19d88>  // b.plast
   207c8:	ldr	x8, [x8, #80]
   207cc:	cmp	x8, x0
   207d0:	mov	w8, #0xa                   	// #10
   207d4:	cinc	w0, w8, ls  // ls = plast
   207d8:	ret
   207dc:	ldr	x9, [x8, #48]
   207e0:	cmp	x9, x0
   207e4:	b.ls	2085c <PyInit__decimal@@Base+0x19da8>  // b.plast
   207e8:	ldr	x8, [x8, #40]
   207ec:	cmp	x8, x0
   207f0:	mov	w8, #0x5                   	// #5
   207f4:	cinc	w0, w8, ls  // ls = plast
   207f8:	ret
   207fc:	ldr	x9, [x8, #144]
   20800:	cmp	x9, x0
   20804:	b.ls	2087c <PyInit__decimal@@Base+0x19dc8>  // b.plast
   20808:	ldr	x9, [x8, #128]
   2080c:	cmp	x9, x0
   20810:	b.ls	20890 <PyInit__decimal@@Base+0x19ddc>  // b.plast
   20814:	ldr	x8, [x8, #120]
   20818:	cmp	x8, x0
   2081c:	mov	w8, #0xf                   	// #15
   20820:	cinc	w0, w8, ls  // ls = plast
   20824:	ret
   20828:	ldr	x8, [x8, #24]
   2082c:	cmp	x8, x0
   20830:	mov	w8, #0x3                   	// #3
   20834:	cinc	w0, w8, ls  // ls = plast
   20838:	ret
   2083c:	ldr	x9, [x8, #104]
   20840:	cmp	x9, x0
   20844:	b.ls	208a4 <PyInit__decimal@@Base+0x19df0>  // b.plast
   20848:	ldr	x8, [x8, #96]
   2084c:	cmp	x8, x0
   20850:	mov	w8, #0xc                   	// #12
   20854:	cinc	w0, w8, ls  // ls = plast
   20858:	ret
   2085c:	ldr	x9, [x8, #64]
   20860:	cmp	x9, x0
   20864:	b.ls	208ac <PyInit__decimal@@Base+0x19df8>  // b.plast
   20868:	ldr	x8, [x8, #56]
   2086c:	cmp	x8, x0
   20870:	mov	w8, #0x7                   	// #7
   20874:	cinc	w0, w8, ls  // ls = plast
   20878:	ret
   2087c:	ldr	x8, [x8, #152]
   20880:	cmp	x8, x0
   20884:	mov	w8, #0x13                  	// #19
   20888:	cinc	w0, w8, ls  // ls = plast
   2088c:	ret
   20890:	ldr	x8, [x8, #136]
   20894:	cmp	x8, x0
   20898:	mov	w8, #0x11                  	// #17
   2089c:	cinc	w0, w8, ls  // ls = plast
   208a0:	ret
   208a4:	mov	w0, #0xe                   	// #14
   208a8:	ret
   208ac:	mov	w0, #0x9                   	// #9
   208b0:	ret
   208b4:	ldp	x8, x9, [x0, #8]
   208b8:	add	x8, x8, x9
   208bc:	sub	x0, x8, #0x1
   208c0:	ret
   208c4:	ldr	x8, [x0, #16]
   208c8:	ldr	x9, [x0]
   208cc:	sub	x8, x8, x9
   208d0:	add	x0, x8, #0x1
   208d4:	ret
   208d8:	ldp	x9, x8, [x0]
   208dc:	sub	x8, x8, x9
   208e0:	add	x0, x8, #0x1
   208e4:	ret
   208e8:	ldr	x8, [x0, #40]
   208ec:	ldr	x9, [x0, #24]
   208f0:	add	x8, x8, x9, lsl #3
   208f4:	ldur	x0, [x8, #-8]
   208f8:	ret
   208fc:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   20900:	add	x8, x8, #0x370
   20904:	ldr	x9, [x8, #72]
   20908:	cmp	x9, x0
   2090c:	b.ls	20938 <PyInit__decimal@@Base+0x19e84>  // b.plast
   20910:	ldr	x9, [x8, #32]
   20914:	cmp	x9, x0
   20918:	b.ls	20960 <PyInit__decimal@@Base+0x19eac>  // b.plast
   2091c:	ldr	x9, [x8, #16]
   20920:	cmp	x9, x0
   20924:	b.ls	209a4 <PyInit__decimal@@Base+0x19ef0>  // b.plast
   20928:	ldr	x9, [x8, #8]
   2092c:	cmp	x9, x0
   20930:	mov	w9, #0x1                   	// #1
   20934:	b	20a08 <PyInit__decimal@@Base+0x19f54>
   20938:	ldr	x9, [x8, #112]
   2093c:	cmp	x9, x0
   20940:	b.ls	2097c <PyInit__decimal@@Base+0x19ec8>  // b.plast
   20944:	ldr	x9, [x8, #88]
   20948:	cmp	x9, x0
   2094c:	b.ls	209b4 <PyInit__decimal@@Base+0x19f00>  // b.plast
   20950:	ldr	x9, [x8, #80]
   20954:	cmp	x9, x0
   20958:	mov	w9, #0xa                   	// #10
   2095c:	b	20a08 <PyInit__decimal@@Base+0x19f54>
   20960:	ldr	x9, [x8, #48]
   20964:	cmp	x9, x0
   20968:	b.ls	209d0 <PyInit__decimal@@Base+0x19f1c>  // b.plast
   2096c:	ldr	x9, [x8, #40]
   20970:	cmp	x9, x0
   20974:	mov	w9, #0x5                   	// #5
   20978:	b	20a08 <PyInit__decimal@@Base+0x19f54>
   2097c:	ldr	x9, [x8, #144]
   20980:	cmp	x9, x0
   20984:	b.ls	209ec <PyInit__decimal@@Base+0x19f38>  // b.plast
   20988:	ldr	x9, [x8, #128]
   2098c:	cmp	x9, x0
   20990:	b.ls	209fc <PyInit__decimal@@Base+0x19f48>  // b.plast
   20994:	ldr	x9, [x8, #120]
   20998:	cmp	x9, x0
   2099c:	mov	w9, #0xf                   	// #15
   209a0:	b	20a08 <PyInit__decimal@@Base+0x19f54>
   209a4:	ldr	x9, [x8, #24]
   209a8:	cmp	x9, x0
   209ac:	mov	w9, #0x3                   	// #3
   209b0:	b	20a08 <PyInit__decimal@@Base+0x19f54>
   209b4:	ldr	x9, [x8, #104]
   209b8:	cmp	x9, x0
   209bc:	b.ls	20a1c <PyInit__decimal@@Base+0x19f68>  // b.plast
   209c0:	ldr	x9, [x8, #96]
   209c4:	cmp	x9, x0
   209c8:	mov	w9, #0xc                   	// #12
   209cc:	b	20a08 <PyInit__decimal@@Base+0x19f54>
   209d0:	ldr	x9, [x8, #64]
   209d4:	cmp	x9, x0
   209d8:	b.ls	20a24 <PyInit__decimal@@Base+0x19f70>  // b.plast
   209dc:	ldr	x9, [x8, #56]
   209e0:	cmp	x9, x0
   209e4:	mov	w9, #0x7                   	// #7
   209e8:	b	20a08 <PyInit__decimal@@Base+0x19f54>
   209ec:	ldr	x9, [x8, #152]
   209f0:	cmp	x9, x0
   209f4:	mov	w9, #0x13                  	// #19
   209f8:	b	20a08 <PyInit__decimal@@Base+0x19f54>
   209fc:	ldr	x9, [x8, #136]
   20a00:	cmp	x9, x0
   20a04:	mov	w9, #0x11                  	// #17
   20a08:	cinc	x9, x9, ls  // ls = plast
   20a0c:	add	x8, x8, x9, lsl #3
   20a10:	ldur	x8, [x8, #-8]
   20a14:	udiv	x0, x0, x8
   20a18:	ret
   20a1c:	mov	w9, #0xe                   	// #14
   20a20:	b	20a0c <PyInit__decimal@@Base+0x19f58>
   20a24:	mov	w9, #0x9                   	// #9
   20a28:	b	20a0c <PyInit__decimal@@Base+0x19f58>
   20a2c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   20a30:	movk	x8, #0xcccd
   20a34:	umulh	x8, x0, x8
   20a38:	lsr	x8, x8, #3
   20a3c:	mov	w9, #0xa                   	// #10
   20a40:	msub	x0, x8, x9, x0
   20a44:	ret
   20a48:	mov	x8, #0x9436                	// #37942
   20a4c:	movk	x8, #0x50d7, lsl #16
   20a50:	movk	x8, #0x435e, lsl #32
   20a54:	movk	x8, #0xd79, lsl #48
   20a58:	smulh	x8, x0, x8
   20a5c:	add	x8, x8, x8, lsr #63
   20a60:	mov	x9, #0xffffffffffffffed    	// #-19
   20a64:	mul	x9, x8, x9
   20a68:	cmn	x9, x0
   20a6c:	cinc	x0, x8, ne  // ne = any
   20a70:	ret
   20a74:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   20a78:	add	x9, x9, #0x370
   20a7c:	ldr	x10, [x9, #72]
   20a80:	cmp	x0, #0x0
   20a84:	cneg	x8, x0, mi  // mi = first
   20a88:	cmp	x10, x8
   20a8c:	b.ls	20abc <PyInit__decimal@@Base+0x1a008>  // b.plast
   20a90:	ldr	x10, [x9, #32]
   20a94:	cmp	x10, x8
   20a98:	b.ls	20ae8 <PyInit__decimal@@Base+0x1a034>  // b.plast
   20a9c:	ldr	x10, [x9, #16]
   20aa0:	cmp	x10, x8
   20aa4:	b.ls	20b34 <PyInit__decimal@@Base+0x1a080>  // b.plast
   20aa8:	ldr	x9, [x9, #8]
   20aac:	cmp	x9, x8
   20ab0:	mov	w8, #0x1                   	// #1
   20ab4:	cinc	w0, w8, ls  // ls = plast
   20ab8:	ret
   20abc:	ldr	x10, [x9, #112]
   20ac0:	cmp	x10, x8
   20ac4:	b.ls	20b08 <PyInit__decimal@@Base+0x1a054>  // b.plast
   20ac8:	ldr	x10, [x9, #88]
   20acc:	cmp	x10, x8
   20ad0:	b.ls	20b48 <PyInit__decimal@@Base+0x1a094>  // b.plast
   20ad4:	ldr	x9, [x9, #80]
   20ad8:	cmp	x9, x8
   20adc:	mov	w8, #0xa                   	// #10
   20ae0:	cinc	w0, w8, ls  // ls = plast
   20ae4:	ret
   20ae8:	ldr	x10, [x9, #48]
   20aec:	cmp	x10, x8
   20af0:	b.ls	20b68 <PyInit__decimal@@Base+0x1a0b4>  // b.plast
   20af4:	ldr	x9, [x9, #40]
   20af8:	cmp	x9, x8
   20afc:	mov	w8, #0x5                   	// #5
   20b00:	cinc	w0, w8, ls  // ls = plast
   20b04:	ret
   20b08:	ldr	x10, [x9, #144]
   20b0c:	cmp	x10, x8
   20b10:	b.ls	20b88 <PyInit__decimal@@Base+0x1a0d4>  // b.plast
   20b14:	ldr	x10, [x9, #128]
   20b18:	cmp	x10, x8
   20b1c:	b.ls	20b9c <PyInit__decimal@@Base+0x1a0e8>  // b.plast
   20b20:	ldr	x9, [x9, #120]
   20b24:	cmp	x9, x8
   20b28:	mov	w8, #0xf                   	// #15
   20b2c:	cinc	w0, w8, ls  // ls = plast
   20b30:	ret
   20b34:	ldr	x9, [x9, #24]
   20b38:	cmp	x9, x8
   20b3c:	mov	w8, #0x3                   	// #3
   20b40:	cinc	w0, w8, ls  // ls = plast
   20b44:	ret
   20b48:	ldr	x10, [x9, #104]
   20b4c:	cmp	x10, x8
   20b50:	b.ls	20bb0 <PyInit__decimal@@Base+0x1a0fc>  // b.plast
   20b54:	ldr	x9, [x9, #96]
   20b58:	cmp	x9, x8
   20b5c:	mov	w8, #0xc                   	// #12
   20b60:	cinc	w0, w8, ls  // ls = plast
   20b64:	ret
   20b68:	ldr	x10, [x9, #64]
   20b6c:	cmp	x10, x8
   20b70:	b.ls	20bb8 <PyInit__decimal@@Base+0x1a104>  // b.plast
   20b74:	ldr	x9, [x9, #56]
   20b78:	cmp	x9, x8
   20b7c:	mov	w8, #0x7                   	// #7
   20b80:	cinc	w0, w8, ls  // ls = plast
   20b84:	ret
   20b88:	ldr	x9, [x9, #152]
   20b8c:	cmp	x9, x8
   20b90:	mov	w8, #0x13                  	// #19
   20b94:	cinc	w0, w8, ls  // ls = plast
   20b98:	ret
   20b9c:	ldr	x9, [x9, #136]
   20ba0:	cmp	x9, x8
   20ba4:	mov	w8, #0x11                  	// #17
   20ba8:	cinc	w0, w8, ls  // ls = plast
   20bac:	ret
   20bb0:	mov	w0, #0xe                   	// #14
   20bb4:	ret
   20bb8:	mov	w0, #0x9                   	// #9
   20bbc:	ret
   20bc0:	mov	w0, #0x1                   	// #1
   20bc4:	ret
   20bc8:	ldrb	w8, [x0]
   20bcc:	tst	w8, #0xe
   20bd0:	cset	w0, eq  // eq = none
   20bd4:	ret
   20bd8:	ldrb	w8, [x0]
   20bdc:	and	w0, w8, #0x2
   20be0:	ret
   20be4:	ldrb	w8, [x0]
   20be8:	and	w0, w8, #0xc
   20bec:	ret
   20bf0:	ldrb	w8, [x0]
   20bf4:	and	w0, w8, #0x1
   20bf8:	ret
   20bfc:	ldrb	w8, [x0]
   20c00:	mvn	w8, w8
   20c04:	and	w0, w8, #0x1
   20c08:	ret
   20c0c:	ldrb	w8, [x0]
   20c10:	and	w0, w8, #0x4
   20c14:	ret
   20c18:	ldrb	w8, [x0]
   20c1c:	and	w0, w8, #0x1
   20c20:	ret
   20c24:	ldrb	w8, [x0]
   20c28:	and	w0, w8, #0x8
   20c2c:	ret
   20c30:	ldrb	w8, [x0]
   20c34:	and	w0, w8, #0xe
   20c38:	ret
   20c3c:	ldrb	w8, [x0]
   20c40:	tst	w8, #0xe
   20c44:	b.eq	20c50 <PyInit__decimal@@Base+0x1a19c>  // b.none
   20c48:	mov	w0, wzr
   20c4c:	ret
   20c50:	ldr	x8, [x0, #40]
   20c54:	ldr	x9, [x0, #24]
   20c58:	add	x8, x8, x9, lsl #3
   20c5c:	ldur	x8, [x8, #-8]
   20c60:	cmp	x8, #0x0
   20c64:	cset	w0, eq  // eq = none
   20c68:	ret
   20c6c:	ldr	x8, [x0, #40]
   20c70:	ldr	x9, [x0, #24]
   20c74:	add	x8, x8, x9, lsl #3
   20c78:	ldur	x8, [x8, #-8]
   20c7c:	cmp	x8, #0x0
   20c80:	cset	w0, eq  // eq = none
   20c84:	ret
   20c88:	ldrb	w8, [x0]
   20c8c:	tst	w8, #0xe
   20c90:	b.eq	20c9c <PyInit__decimal@@Base+0x1a1e8>  // b.none
   20c94:	mov	w0, wzr
   20c98:	ret
   20c9c:	ldr	x8, [x0, #40]
   20ca0:	ldr	x9, [x0, #24]
   20ca4:	add	x8, x8, x9, lsl #3
   20ca8:	ldur	x8, [x8, #-8]
   20cac:	cbz	x8, 20c94 <PyInit__decimal@@Base+0x1a1e0>
   20cb0:	ldp	x8, x9, [x0, #8]
   20cb4:	ldr	x10, [x1, #16]
   20cb8:	add	x8, x8, x9
   20cbc:	sub	x8, x8, #0x1
   20cc0:	cmp	x8, x10
   20cc4:	cset	w0, ge  // ge = tcont
   20cc8:	ret
   20ccc:	ldrb	w8, [x0]
   20cd0:	tst	w8, #0xe
   20cd4:	b.eq	20ce0 <PyInit__decimal@@Base+0x1a22c>  // b.none
   20cd8:	mov	w0, wzr
   20cdc:	ret
   20ce0:	ldr	x8, [x0, #40]
   20ce4:	ldr	x9, [x0, #24]
   20ce8:	add	x8, x8, x9, lsl #3
   20cec:	ldur	x8, [x8, #-8]
   20cf0:	cbz	x8, 20cd8 <PyInit__decimal@@Base+0x1a224>
   20cf4:	ldp	x8, x9, [x0, #8]
   20cf8:	ldr	x10, [x1, #16]
   20cfc:	add	x8, x8, x9
   20d00:	sub	x8, x8, #0x1
   20d04:	cmp	x8, x10
   20d08:	cset	w0, lt  // lt = tstop
   20d0c:	ret
   20d10:	and	w0, w0, #0x1
   20d14:	ret
   20d18:	ldr	x8, [x0, #40]
   20d1c:	ldr	w8, [x8]
   20d20:	and	w0, w8, #0x1
   20d24:	ret
   20d28:	ldrb	w8, [x0]
   20d2c:	and	w0, w8, #0x1
   20d30:	ret
   20d34:	ldrb	w8, [x0]
   20d38:	mov	w9, #0x1                   	// #1
   20d3c:	ubfiz	w8, w8, #1, #1
   20d40:	sub	w0, w9, w8
   20d44:	ret
   20d48:	mov	w0, #0xa                   	// #10
   20d4c:	ret
   20d50:	ldrb	w8, [x0]
   20d54:	mov	w9, #0x1                   	// #1
   20d58:	bic	w0, w9, w8, lsr #4
   20d5c:	ret
   20d60:	ldrb	w8, [x0]
   20d64:	and	w0, w8, #0x10
   20d68:	ret
   20d6c:	ldrb	w8, [x0]
   20d70:	cmp	w8, #0x20
   20d74:	cset	w0, cc  // cc = lo, ul, last
   20d78:	ret
   20d7c:	ldrb	w8, [x0]
   20d80:	and	w0, w8, #0x20
   20d84:	ret
   20d88:	ldrb	w8, [x0]
   20d8c:	and	w0, w8, #0x40
   20d90:	ret
   20d94:	ldrb	w8, [x0]
   20d98:	and	w0, w8, #0x80
   20d9c:	ret
   20da0:	cbz	x1, 20dbc <PyInit__decimal@@Base+0x1a308>
   20da4:	stp	x29, x30, [sp, #-16]!
   20da8:	mov	x29, sp
   20dac:	lsl	x2, x1, #3
   20db0:	mov	w1, wzr
   20db4:	bl	65b0 <memset@plt>
   20db8:	ldp	x29, x30, [sp], #16
   20dbc:	ret
   20dc0:	stp	x29, x30, [sp, #-32]!
   20dc4:	stp	x20, x19, [sp, #16]
   20dc8:	mov	x29, sp
   20dcc:	ldrb	w8, [x0]
   20dd0:	mov	x19, x0
   20dd4:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   20dd8:	cmp	w8, #0x1f
   20ddc:	b.hi	20df0 <PyInit__decimal@@Base+0x1a33c>  // b.pmore
   20de0:	ldr	x8, [x20, #1376]
   20de4:	ldr	x0, [x19, #40]
   20de8:	blr	x8
   20dec:	ldrb	w8, [x19]
   20df0:	tbnz	w8, #4, 20e08 <PyInit__decimal@@Base+0x1a354>
   20df4:	ldr	x1, [x20, #1376]
   20df8:	mov	x0, x19
   20dfc:	ldp	x20, x19, [sp, #16]
   20e00:	ldp	x29, x30, [sp], #32
   20e04:	br	x1
   20e08:	ldp	x20, x19, [sp, #16]
   20e0c:	ldp	x29, x30, [sp], #32
   20e10:	ret
   20e14:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20e18:	ldr	x9, [x8, #1344]
   20e1c:	ldr	x8, [x0, #32]
   20e20:	cmp	x9, x1
   20e24:	csel	x1, x1, x9, lt  // lt = tstop
   20e28:	cmp	x1, x8
   20e2c:	b.eq	20e48 <PyInit__decimal@@Base+0x1a394>  // b.none
   20e30:	ldrb	w9, [x0]
   20e34:	tbnz	w9, #5, 20e3c <PyInit__decimal@@Base+0x1a388>
   20e38:	b	206cc <PyInit__decimal@@Base+0x19c18>
   20e3c:	cmp	x1, x8
   20e40:	b.le	20e48 <PyInit__decimal@@Base+0x1a394>
   20e44:	b	20588 <PyInit__decimal@@Base+0x19ad4>
   20e48:	mov	w0, #0x1                   	// #1
   20e4c:	ret
   20e50:	stp	x29, x30, [sp, #-32]!
   20e54:	stp	x20, x19, [sp, #16]
   20e58:	mov	x29, sp
   20e5c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20e60:	ldr	x9, [x8, #1344]
   20e64:	ldr	x8, [x0, #32]
   20e68:	mov	x19, x0
   20e6c:	cmp	x9, x1
   20e70:	csel	x20, x1, x9, lt  // lt = tstop
   20e74:	cmp	x20, x8
   20e78:	b.eq	20eb4 <PyInit__decimal@@Base+0x1a400>  // b.none
   20e7c:	ldrb	w9, [x19]
   20e80:	tbnz	w9, #5, 20e98 <PyInit__decimal@@Base+0x1a3e4>
   20e84:	mov	x0, x19
   20e88:	mov	x1, x20
   20e8c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   20e90:	cbnz	w0, 20eb4 <PyInit__decimal@@Base+0x1a400>
   20e94:	b	20ecc <PyInit__decimal@@Base+0x1a418>
   20e98:	cmp	x20, x8
   20e9c:	b.le	20eb4 <PyInit__decimal@@Base+0x1a400>
   20ea0:	mov	x0, x19
   20ea4:	mov	x1, x20
   20ea8:	ldp	x20, x19, [sp, #16]
   20eac:	ldp	x29, x30, [sp], #32
   20eb0:	b	20630 <PyInit__decimal@@Base+0x19b7c>
   20eb4:	cbz	x20, 20ec8 <PyInit__decimal@@Base+0x1a414>
   20eb8:	ldr	x0, [x19, #40]
   20ebc:	lsl	x2, x20, #3
   20ec0:	mov	w1, wzr
   20ec4:	bl	65b0 <memset@plt>
   20ec8:	mov	w0, #0x1                   	// #1
   20ecc:	ldp	x20, x19, [sp, #16]
   20ed0:	ldp	x29, x30, [sp], #32
   20ed4:	ret
   20ed8:	sub	sp, sp, #0x30
   20edc:	stp	x29, x30, [sp, #16]
   20ee0:	stp	x20, x19, [sp, #32]
   20ee4:	add	x29, sp, #0x10
   20ee8:	ldrb	w8, [x0]
   20eec:	tbnz	w8, #5, 20f30 <PyInit__decimal@@Base+0x1a47c>
   20ef0:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   20ef4:	ldr	x8, [x0, #32]
   20ef8:	ldr	x1, [x20, #1344]
   20efc:	mov	x19, x0
   20f00:	cmp	x8, x1
   20f04:	b.le	20f30 <PyInit__decimal@@Base+0x1a47c>
   20f08:	sturb	wzr, [x29, #-4]
   20f0c:	ldr	x0, [x19, #40]
   20f10:	sub	x3, x29, #0x4
   20f14:	mov	w2, #0x8                   	// #8
   20f18:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   20f1c:	str	x0, [x19, #40]
   20f20:	ldurb	w8, [x29, #-4]
   20f24:	cbnz	w8, 20f30 <PyInit__decimal@@Base+0x1a47c>
   20f28:	ldr	x8, [x20, #1344]
   20f2c:	str	x8, [x19, #32]
   20f30:	ldp	x20, x19, [sp, #32]
   20f34:	ldp	x29, x30, [sp, #16]
   20f38:	add	sp, sp, #0x30
   20f3c:	ret
   20f40:	stp	x29, x30, [sp, #-32]!
   20f44:	str	x19, [sp, #16]
   20f48:	mov	x29, sp
   20f4c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20f50:	ldr	x9, [x8, #1344]
   20f54:	str	wzr, [x29, #28]
   20f58:	ldr	x8, [x0, #32]
   20f5c:	cmp	x9, x1
   20f60:	csel	x1, x1, x9, lt  // lt = tstop
   20f64:	cmp	x1, x8
   20f68:	b.eq	20f9c <PyInit__decimal@@Base+0x1a4e8>  // b.none
   20f6c:	ldrb	w9, [x0]
   20f70:	mov	x19, x2
   20f74:	tbnz	w9, #5, 20f88 <PyInit__decimal@@Base+0x1a4d4>
   20f78:	add	x2, x29, #0x1c
   20f7c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   20f80:	cbnz	w0, 20f9c <PyInit__decimal@@Base+0x1a4e8>
   20f84:	b	20fac <PyInit__decimal@@Base+0x1a4f8>
   20f88:	cmp	x1, x8
   20f8c:	b.le	20f9c <PyInit__decimal@@Base+0x1a4e8>
   20f90:	add	x2, x29, #0x1c
   20f94:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   20f98:	cbz	w0, 20fac <PyInit__decimal@@Base+0x1a4f8>
   20f9c:	mov	w0, #0x1                   	// #1
   20fa0:	ldr	x19, [sp, #16]
   20fa4:	ldp	x29, x30, [sp], #32
   20fa8:	ret
   20fac:	ldr	w1, [x29, #28]
   20fb0:	mov	x0, x19
   20fb4:	bl	1c828 <PyInit__decimal@@Base+0x15d74>
   20fb8:	mov	w0, wzr
   20fbc:	b	20fa0 <PyInit__decimal@@Base+0x1a4ec>
   20fc0:	stp	x29, x30, [sp, #-48]!
   20fc4:	str	x21, [sp, #16]
   20fc8:	stp	x20, x19, [sp, #32]
   20fcc:	mov	x29, sp
   20fd0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   20fd4:	ldr	x9, [x8, #1344]
   20fd8:	str	wzr, [x29, #28]
   20fdc:	ldr	x8, [x0, #32]
   20fe0:	mov	x19, x0
   20fe4:	cmp	x9, x1
   20fe8:	csel	x21, x1, x9, lt  // lt = tstop
   20fec:	cmp	x21, x8
   20ff0:	b.eq	21048 <PyInit__decimal@@Base+0x1a594>  // b.none
   20ff4:	ldrb	w9, [x19]
   20ff8:	mov	x20, x2
   20ffc:	tbnz	w9, #5, 21018 <PyInit__decimal@@Base+0x1a564>
   21000:	add	x2, x29, #0x1c
   21004:	mov	x0, x19
   21008:	mov	x1, x21
   2100c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   21010:	cbnz	w0, 21048 <PyInit__decimal@@Base+0x1a594>
   21014:	b	21034 <PyInit__decimal@@Base+0x1a580>
   21018:	cmp	x21, x8
   2101c:	b.le	21048 <PyInit__decimal@@Base+0x1a594>
   21020:	add	x2, x29, #0x1c
   21024:	mov	x0, x19
   21028:	mov	x1, x21
   2102c:	bl	20630 <PyInit__decimal@@Base+0x19b7c>
   21030:	cbnz	w0, 2105c <PyInit__decimal@@Base+0x1a5a8>
   21034:	ldr	w1, [x29, #28]
   21038:	mov	x0, x20
   2103c:	bl	1c828 <PyInit__decimal@@Base+0x15d74>
   21040:	mov	w0, wzr
   21044:	b	21060 <PyInit__decimal@@Base+0x1a5ac>
   21048:	cbz	x21, 2105c <PyInit__decimal@@Base+0x1a5a8>
   2104c:	ldr	x0, [x19, #40]
   21050:	lsl	x2, x21, #3
   21054:	mov	w1, wzr
   21058:	bl	65b0 <memset@plt>
   2105c:	mov	w0, #0x1                   	// #1
   21060:	ldp	x20, x19, [sp, #32]
   21064:	ldr	x21, [sp, #16]
   21068:	ldp	x29, x30, [sp], #48
   2106c:	ret
   21070:	ldr	x9, [x0, #40]
   21074:	ldr	x8, [x0, #24]
   21078:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   2107c:	add	x10, x10, #0x370
   21080:	ldr	x11, [x10, #72]
   21084:	add	x9, x9, x8, lsl #3
   21088:	ldur	x9, [x9, #-8]
   2108c:	cmp	x11, x9
   21090:	b.ls	210bc <PyInit__decimal@@Base+0x1a608>  // b.plast
   21094:	ldr	x11, [x10, #32]
   21098:	cmp	x11, x9
   2109c:	b.ls	210e4 <PyInit__decimal@@Base+0x1a630>  // b.plast
   210a0:	ldr	x11, [x10, #16]
   210a4:	cmp	x11, x9
   210a8:	b.ls	21128 <PyInit__decimal@@Base+0x1a674>  // b.plast
   210ac:	ldr	x10, [x10, #8]
   210b0:	cmp	x10, x9
   210b4:	mov	w9, #0x1                   	// #1
   210b8:	b	2118c <PyInit__decimal@@Base+0x1a6d8>
   210bc:	ldr	x11, [x10, #112]
   210c0:	cmp	x11, x9
   210c4:	b.ls	21100 <PyInit__decimal@@Base+0x1a64c>  // b.plast
   210c8:	ldr	x11, [x10, #88]
   210cc:	cmp	x11, x9
   210d0:	b.ls	21138 <PyInit__decimal@@Base+0x1a684>  // b.plast
   210d4:	ldr	x10, [x10, #80]
   210d8:	cmp	x10, x9
   210dc:	mov	w9, #0xa                   	// #10
   210e0:	b	2118c <PyInit__decimal@@Base+0x1a6d8>
   210e4:	ldr	x11, [x10, #48]
   210e8:	cmp	x11, x9
   210ec:	b.ls	21154 <PyInit__decimal@@Base+0x1a6a0>  // b.plast
   210f0:	ldr	x10, [x10, #40]
   210f4:	cmp	x10, x9
   210f8:	mov	w9, #0x5                   	// #5
   210fc:	b	2118c <PyInit__decimal@@Base+0x1a6d8>
   21100:	ldr	x11, [x10, #144]
   21104:	cmp	x11, x9
   21108:	b.ls	21170 <PyInit__decimal@@Base+0x1a6bc>  // b.plast
   2110c:	ldr	x11, [x10, #128]
   21110:	cmp	x11, x9
   21114:	b.ls	21180 <PyInit__decimal@@Base+0x1a6cc>  // b.plast
   21118:	ldr	x10, [x10, #120]
   2111c:	cmp	x10, x9
   21120:	mov	w9, #0xf                   	// #15
   21124:	b	2118c <PyInit__decimal@@Base+0x1a6d8>
   21128:	ldr	x10, [x10, #24]
   2112c:	cmp	x10, x9
   21130:	mov	w9, #0x3                   	// #3
   21134:	b	2118c <PyInit__decimal@@Base+0x1a6d8>
   21138:	ldr	x11, [x10, #104]
   2113c:	cmp	x11, x9
   21140:	b.ls	211a4 <PyInit__decimal@@Base+0x1a6f0>  // b.plast
   21144:	ldr	x10, [x10, #96]
   21148:	cmp	x10, x9
   2114c:	mov	w9, #0xc                   	// #12
   21150:	b	2118c <PyInit__decimal@@Base+0x1a6d8>
   21154:	ldr	x11, [x10, #64]
   21158:	cmp	x11, x9
   2115c:	b.ls	211ac <PyInit__decimal@@Base+0x1a6f8>  // b.plast
   21160:	ldr	x10, [x10, #56]
   21164:	cmp	x10, x9
   21168:	mov	w9, #0x7                   	// #7
   2116c:	b	2118c <PyInit__decimal@@Base+0x1a6d8>
   21170:	ldr	x10, [x10, #152]
   21174:	cmp	x10, x9
   21178:	mov	w9, #0x13                  	// #19
   2117c:	b	2118c <PyInit__decimal@@Base+0x1a6d8>
   21180:	ldr	x10, [x10, #136]
   21184:	cmp	x10, x9
   21188:	mov	w9, #0x11                  	// #17
   2118c:	cinc	x9, x9, ls  // ls = plast
   21190:	mov	w10, #0x13                  	// #19
   21194:	madd	x8, x8, x10, x9
   21198:	sub	x8, x8, #0x13
   2119c:	str	x8, [x0, #16]
   211a0:	ret
   211a4:	mov	w9, #0xe                   	// #14
   211a8:	b	21190 <PyInit__decimal@@Base+0x1a6dc>
   211ac:	mov	w9, #0x9                   	// #9
   211b0:	b	21190 <PyInit__decimal@@Base+0x1a6dc>
   211b4:	ldrb	w8, [x0]
   211b8:	and	w8, w8, #0xfe
   211bc:	orr	w8, w8, w1
   211c0:	strb	w8, [x0]
   211c4:	ret
   211c8:	ldrb	w8, [x1]
   211cc:	ldrb	w9, [x0]
   211d0:	bfxil	w9, w8, #0, #1
   211d4:	strb	w9, [x0]
   211d8:	ret
   211dc:	ldrb	w8, [x0]
   211e0:	and	w8, w8, #0xfffffff3
   211e4:	orr	w8, w8, #0x2
   211e8:	strb	w8, [x0]
   211ec:	ret
   211f0:	ldrb	w8, [x0]
   211f4:	and	w8, w8, #0xfffffff1
   211f8:	orr	w8, w8, #0x4
   211fc:	strb	w8, [x0]
   21200:	ret
   21204:	ldrb	w8, [x0]
   21208:	and	w8, w8, #0xfffffff1
   2120c:	orr	w8, w8, #0x8
   21210:	strb	w8, [x0]
   21214:	ret
   21218:	ldrb	w8, [x0]
   2121c:	orr	w8, w8, #0x1
   21220:	strb	w8, [x0]
   21224:	ret
   21228:	ldrb	w8, [x0]
   2122c:	and	w8, w8, #0xfe
   21230:	strb	w8, [x0]
   21234:	ret
   21238:	ldrb	w8, [x0]
   2123c:	and	w8, w8, #0xffffffef
   21240:	strb	w8, [x0]
   21244:	ret
   21248:	ldrb	w8, [x0]
   2124c:	orr	w8, w8, #0x10
   21250:	strb	w8, [x0]
   21254:	ret
   21258:	ldrb	w8, [x0]
   2125c:	and	w8, w8, #0x1f
   21260:	strb	w8, [x0]
   21264:	ret
   21268:	ldrb	w8, [x0]
   2126c:	mov	w9, #0x20                  	// #32
   21270:	bfxil	w9, w8, #0, #5
   21274:	strb	w9, [x0]
   21278:	ret
   2127c:	ldrb	w8, [x0]
   21280:	mov	w9, #0x40                  	// #64
   21284:	bfxil	w9, w8, #0, #5
   21288:	strb	w9, [x0]
   2128c:	ret
   21290:	ldrb	w8, [x0]
   21294:	mov	w9, #0x80                  	// #128
   21298:	bfxil	w9, w8, #0, #5
   2129c:	strb	w9, [x0]
   212a0:	ret
   212a4:	ldrb	w8, [x0]
   212a8:	and	w8, w8, #0xf0
   212ac:	strb	w8, [x0]
   212b0:	ret
   212b4:	ldrb	w8, [x0]
   212b8:	and	w8, w8, #0xf0
   212bc:	orr	w8, w8, w1
   212c0:	strb	w8, [x0]
   212c4:	ret
   212c8:	ldrb	w8, [x1]
   212cc:	ldrb	w9, [x0]
   212d0:	bfxil	w9, w8, #0, #4
   212d4:	strb	w9, [x0]
   212d8:	ret
   212dc:	sub	sp, sp, #0x30
   212e0:	stp	x29, x30, [sp, #16]
   212e4:	stp	x20, x19, [sp, #32]
   212e8:	add	x29, sp, #0x10
   212ec:	ldrb	w8, [x0]
   212f0:	mov	x19, x0
   212f4:	tbnz	w8, #5, 21334 <PyInit__decimal@@Base+0x1a880>
   212f8:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   212fc:	ldr	x8, [x19, #32]
   21300:	ldr	x1, [x20, #1344]
   21304:	cmp	x8, x1
   21308:	b.le	21334 <PyInit__decimal@@Base+0x1a880>
   2130c:	sturb	wzr, [x29, #-4]
   21310:	ldr	x0, [x19, #40]
   21314:	sub	x3, x29, #0x4
   21318:	mov	w2, #0x8                   	// #8
   2131c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   21320:	str	x0, [x19, #40]
   21324:	ldurb	w8, [x29, #-4]
   21328:	cbnz	w8, 21334 <PyInit__decimal@@Base+0x1a880>
   2132c:	ldr	x8, [x20, #1344]
   21330:	str	x8, [x19, #32]
   21334:	ldr	x8, [x19, #40]
   21338:	mov	w9, #0x1                   	// #1
   2133c:	dup	v0.2d, x9
   21340:	str	q0, [x19, #16]
   21344:	str	xzr, [x8]
   21348:	ldp	x20, x19, [sp, #32]
   2134c:	ldp	x29, x30, [sp, #16]
   21350:	add	sp, sp, #0x30
   21354:	ret
   21358:	stp	x29, x30, [sp, #-48]!
   2135c:	stp	x22, x21, [sp, #16]
   21360:	stp	x20, x19, [sp, #32]
   21364:	mov	x29, sp
   21368:	ldr	x8, [x1]
   2136c:	mov	x9, #0x9436                	// #37942
   21370:	movk	x9, #0x50d7, lsl #16
   21374:	movk	x9, #0x435e, lsl #32
   21378:	movk	x9, #0xd79, lsl #48
   2137c:	adrp	x11, 53000 <PyInit__decimal@@Base+0x4c54c>
   21380:	smulh	x9, x8, x9
   21384:	mov	x10, #0xffffffffffffffed    	// #-19
   21388:	ldr	x11, [x11, #1344]
   2138c:	add	x12, x9, x9, lsr #63
   21390:	madd	x22, x12, x10, x8
   21394:	cmp	x22, #0x0
   21398:	ldr	x9, [x0, #32]
   2139c:	cinc	x21, x12, ne  // ne = any
   213a0:	cmp	x11, x21
   213a4:	mov	x20, x1
   213a8:	csel	x1, x21, x11, lt  // lt = tstop
   213ac:	mov	x19, x0
   213b0:	cmp	x1, x9
   213b4:	b.eq	213e8 <PyInit__decimal@@Base+0x1a934>  // b.none
   213b8:	ldrb	w10, [x19]
   213bc:	tbnz	w10, #5, 213d0 <PyInit__decimal@@Base+0x1a91c>
   213c0:	mov	x0, x19
   213c4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   213c8:	cbnz	w0, 213e4 <PyInit__decimal@@Base+0x1a930>
   213cc:	b	21484 <PyInit__decimal@@Base+0x1a9d0>
   213d0:	cmp	x1, x9
   213d4:	b.le	213e8 <PyInit__decimal@@Base+0x1a934>
   213d8:	mov	x0, x19
   213dc:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   213e0:	cbz	w0, 21484 <PyInit__decimal@@Base+0x1a9d0>
   213e4:	ldr	x8, [x20]
   213e8:	cmp	x22, #0x1
   213ec:	sub	x9, x21, #0x1
   213f0:	stp	x8, x21, [x19, #16]
   213f4:	b.lt	21418 <PyInit__decimal@@Base+0x1a964>  // b.tstop
   213f8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   213fc:	add	x8, x8, #0x370
   21400:	ldr	x8, [x8, x22, lsl #3]
   21404:	ldr	x10, [x19, #40]
   21408:	sub	x11, x21, #0x2
   2140c:	sub	x8, x8, #0x1
   21410:	str	x8, [x10, x9, lsl #3]
   21414:	mov	x9, x11
   21418:	tbnz	x9, #63, 21484 <PyInit__decimal@@Base+0x1a9d0>
   2141c:	ldr	x8, [x19, #40]
   21420:	add	x10, x9, #0x1
   21424:	cmp	x10, #0x2
   21428:	b.cc	21464 <PyInit__decimal@@Base+0x1a9b0>  // b.lo, b.ul, b.last
   2142c:	mov	x13, #0xffffffff89e7ffff    	// #-1981284353
   21430:	movk	x13, #0x2304, lsl #32
   21434:	and	x11, x10, #0xfffffffffffffffe
   21438:	add	x12, x8, x9, lsl #3
   2143c:	movk	x13, #0x8ac7, lsl #48
   21440:	sub	x9, x9, x11
   21444:	sub	x12, x12, #0x8
   21448:	dup	v0.2d, x13
   2144c:	mov	x13, x11
   21450:	subs	x13, x13, #0x2
   21454:	str	q0, [x12], #-16
   21458:	b.ne	21450 <PyInit__decimal@@Base+0x1a99c>  // b.any
   2145c:	cmp	x10, x11
   21460:	b.eq	21484 <PyInit__decimal@@Base+0x1a9d0>  // b.none
   21464:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   21468:	movk	x10, #0x2304, lsl #32
   2146c:	movk	x10, #0x8ac7, lsl #48
   21470:	sub	x11, x9, #0x1
   21474:	cmp	x9, #0x0
   21478:	str	x10, [x8, x9, lsl #3]
   2147c:	mov	x9, x11
   21480:	b.gt	21470 <PyInit__decimal@@Base+0x1a9bc>
   21484:	ldp	x20, x19, [sp, #32]
   21488:	ldp	x22, x21, [sp, #16]
   2148c:	ldp	x29, x30, [sp], #48
   21490:	ret
   21494:	ldr	x9, [x0, #24]
   21498:	cmp	x9, #0x1
   2149c:	b.lt	214c8 <PyInit__decimal@@Base+0x1aa14>  // b.tstop
   214a0:	mov	x8, x0
   214a4:	ldr	x10, [x8, #40]
   214a8:	mov	x0, xzr
   214ac:	mov	x11, xzr
   214b0:	ldr	x8, [x10, x11, lsl #3]
   214b4:	cbnz	x8, 214d0 <PyInit__decimal@@Base+0x1aa1c>
   214b8:	add	x11, x11, #0x1
   214bc:	cmp	x11, x9
   214c0:	add	x0, x0, #0x13
   214c4:	b.lt	214b0 <PyInit__decimal@@Base+0x1a9fc>  // b.tstop
   214c8:	mov	x0, xzr
   214cc:	b	21518 <PyInit__decimal@@Base+0x1aa64>
   214d0:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   214d4:	movk	x9, #0xcccd
   214d8:	mul	x10, x8, x9
   214dc:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
   214e0:	ror	x10, x10, #1
   214e4:	movk	x11, #0x1999, lsl #48
   214e8:	cmp	x10, x11
   214ec:	b.hi	21518 <PyInit__decimal@@Base+0x1aa64>  // b.pmore
   214f0:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
   214f4:	movk	x10, #0x999a
   214f8:	movk	x10, #0x1999, lsl #48
   214fc:	umulh	x8, x8, x9
   21500:	lsr	x8, x8, #3
   21504:	mul	x11, x8, x9
   21508:	ror	x11, x11, #1
   2150c:	cmp	x11, x10
   21510:	add	x0, x0, #0x1
   21514:	b.cc	214fc <PyInit__decimal@@Base+0x1aa48>  // b.lo, b.ul, b.last
   21518:	ret
   2151c:	ldrb	w8, [x0]
   21520:	tst	w8, #0xe
   21524:	b.eq	21530 <PyInit__decimal@@Base+0x1aa7c>  // b.none
   21528:	mov	w0, wzr
   2152c:	ret
   21530:	ldr	x9, [x0, #40]
   21534:	ldr	x10, [x0, #24]
   21538:	add	x8, x9, x10, lsl #3
   2153c:	ldur	x8, [x8, #-8]
   21540:	cbz	x8, 21570 <PyInit__decimal@@Base+0x1aabc>
   21544:	cmp	x10, #0x1
   21548:	b.lt	21568 <PyInit__decimal@@Base+0x1aab4>  // b.tstop
   2154c:	mov	x8, xzr
   21550:	ldr	x11, [x9]
   21554:	cbnz	x11, 21578 <PyInit__decimal@@Base+0x1aac4>
   21558:	add	x8, x8, #0x13
   2155c:	subs	x10, x10, #0x1
   21560:	add	x9, x9, #0x8
   21564:	b.ne	21550 <PyInit__decimal@@Base+0x1aa9c>  // b.any
   21568:	mov	x8, xzr
   2156c:	b	215c0 <PyInit__decimal@@Base+0x1ab0c>
   21570:	mov	w0, #0x1                   	// #1
   21574:	ret
   21578:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   2157c:	movk	x9, #0xcccd
   21580:	mul	x10, x11, x9
   21584:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   21588:	ror	x10, x10, #1
   2158c:	movk	x12, #0x1999, lsl #48
   21590:	cmp	x10, x12
   21594:	b.hi	215c0 <PyInit__decimal@@Base+0x1ab0c>  // b.pmore
   21598:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
   2159c:	movk	x10, #0x999a
   215a0:	movk	x10, #0x1999, lsl #48
   215a4:	umulh	x11, x11, x9
   215a8:	lsr	x11, x11, #3
   215ac:	mul	x12, x11, x9
   215b0:	ror	x12, x12, #1
   215b4:	cmp	x12, x10
   215b8:	add	x8, x8, #0x1
   215bc:	b.cc	215a4 <PyInit__decimal@@Base+0x1aaf0>  // b.lo, b.ul, b.last
   215c0:	ldr	x9, [x0, #8]
   215c4:	add	x8, x9, x8
   215c8:	lsr	x8, x8, #63
   215cc:	eor	w0, w8, #0x1
   215d0:	ret
   215d4:	ldr	x8, [x0, #40]
   215d8:	ldr	x9, [x0, #24]
   215dc:	add	x9, x8, x9, lsl #3
   215e0:	ldur	x9, [x9, #-8]
   215e4:	cbz	x9, 215f4 <PyInit__decimal@@Base+0x1ab40>
   215e8:	ldr	x9, [x0, #8]
   215ec:	tbnz	x9, #63, 215fc <PyInit__decimal@@Base+0x1ab48>
   215f0:	cbz	x9, 21640 <PyInit__decimal@@Base+0x1ab8c>
   215f4:	mov	w0, wzr
   215f8:	ret
   215fc:	mov	x11, #0x435f                	// #17247
   21600:	movk	x11, #0xd79, lsl #16
   21604:	movk	x11, #0x35e5, lsl #32
   21608:	neg	x10, x9
   2160c:	movk	x11, #0xd794, lsl #48
   21610:	umulh	x10, x10, x11
   21614:	mov	x12, #0xffffffffffffffed    	// #-19
   21618:	neg	x9, x9
   2161c:	lsr	x10, x10, #4
   21620:	madd	x9, x10, x12, x9
   21624:	ldr	x8, [x8, x10, lsl #3]
   21628:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   2162c:	add	x10, x10, #0x370
   21630:	ldr	x9, [x10, x9, lsl #3]
   21634:	udiv	x8, x8, x9
   21638:	and	w0, w8, #0x1
   2163c:	ret
   21640:	ldr	w8, [x8]
   21644:	and	w0, w8, #0x1
   21648:	ret
   2164c:	ldr	x8, [x0, #40]
   21650:	ldr	x9, [x0, #24]
   21654:	add	x9, x8, x9, lsl #3
   21658:	ldur	x9, [x9, #-8]
   2165c:	cbz	x9, 2166c <PyInit__decimal@@Base+0x1abb8>
   21660:	ldr	x9, [x0, #8]
   21664:	tbnz	x9, #63, 21674 <PyInit__decimal@@Base+0x1abc0>
   21668:	cbz	x9, 216bc <PyInit__decimal@@Base+0x1ac08>
   2166c:	eor	w0, wzr, #0x1
   21670:	ret
   21674:	mov	x11, #0x435f                	// #17247
   21678:	movk	x11, #0xd79, lsl #16
   2167c:	movk	x11, #0x35e5, lsl #32
   21680:	neg	x10, x9
   21684:	movk	x11, #0xd794, lsl #48
   21688:	umulh	x10, x10, x11
   2168c:	mov	x12, #0xffffffffffffffed    	// #-19
   21690:	neg	x9, x9
   21694:	lsr	x10, x10, #4
   21698:	madd	x9, x10, x12, x9
   2169c:	ldr	x8, [x8, x10, lsl #3]
   216a0:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   216a4:	add	x10, x10, #0x370
   216a8:	ldr	x9, [x10, x9, lsl #3]
   216ac:	udiv	x8, x8, x9
   216b0:	and	w8, w8, #0x1
   216b4:	eor	w0, w8, #0x1
   216b8:	ret
   216bc:	ldr	w8, [x8]
   216c0:	and	w8, w8, #0x1
   216c4:	eor	w0, w8, #0x1
   216c8:	ret
   216cc:	sub	sp, sp, #0x40
   216d0:	stp	x29, x30, [sp, #16]
   216d4:	stp	x22, x21, [sp, #32]
   216d8:	stp	x20, x19, [sp, #48]
   216dc:	add	x29, sp, #0x10
   216e0:	ldrb	w8, [x0]
   216e4:	mov	w20, w2
   216e8:	mov	x19, x0
   216ec:	mov	w21, w1
   216f0:	tbnz	w8, #5, 21734 <PyInit__decimal@@Base+0x1ac80>
   216f4:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   216f8:	ldr	x9, [x19, #32]
   216fc:	ldr	x1, [x22, #1344]
   21700:	cmp	x9, x1
   21704:	b.le	21734 <PyInit__decimal@@Base+0x1ac80>
   21708:	sturb	wzr, [x29, #-4]
   2170c:	ldr	x0, [x19, #40]
   21710:	sub	x3, x29, #0x4
   21714:	mov	w2, #0x8                   	// #8
   21718:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2171c:	str	x0, [x19, #40]
   21720:	ldurb	w8, [x29, #-4]
   21724:	cbnz	w8, 21730 <PyInit__decimal@@Base+0x1ac7c>
   21728:	ldr	x8, [x22, #1344]
   2172c:	str	x8, [x19, #32]
   21730:	ldrb	w8, [x19]
   21734:	and	w8, w8, #0xf0
   21738:	orr	w9, w20, w21
   2173c:	orr	w8, w9, w8
   21740:	stp	xzr, xzr, [x19, #16]
   21744:	strb	w8, [x19]
   21748:	str	xzr, [x19, #8]
   2174c:	ldp	x20, x19, [sp, #48]
   21750:	ldp	x22, x21, [sp, #32]
   21754:	ldp	x29, x30, [sp, #16]
   21758:	add	sp, sp, #0x40
   2175c:	ret
   21760:	sub	sp, sp, #0x40
   21764:	stp	x29, x30, [sp, #16]
   21768:	stp	x22, x21, [sp, #32]
   2176c:	stp	x20, x19, [sp, #48]
   21770:	add	x29, sp, #0x10
   21774:	ldrb	w8, [x0]
   21778:	mov	x19, x2
   2177c:	mov	x20, x0
   21780:	mov	w21, w1
   21784:	tbnz	w8, #5, 217c8 <PyInit__decimal@@Base+0x1ad14>
   21788:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   2178c:	ldr	x9, [x20, #32]
   21790:	ldr	x1, [x22, #1344]
   21794:	cmp	x9, x1
   21798:	b.le	217c8 <PyInit__decimal@@Base+0x1ad14>
   2179c:	sturb	wzr, [x29, #-4]
   217a0:	ldr	x0, [x20, #40]
   217a4:	sub	x3, x29, #0x4
   217a8:	mov	w2, #0x8                   	// #8
   217ac:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   217b0:	str	x0, [x20, #40]
   217b4:	ldurb	w8, [x29, #-4]
   217b8:	cbnz	w8, 217c4 <PyInit__decimal@@Base+0x1ad10>
   217bc:	ldr	x8, [x22, #1344]
   217c0:	str	x8, [x20, #32]
   217c4:	ldrb	w8, [x20]
   217c8:	and	w8, w8, #0xf0
   217cc:	orr	w8, w8, #0x4
   217d0:	stp	xzr, xzr, [x20, #16]
   217d4:	strb	w8, [x20]
   217d8:	str	xzr, [x20, #8]
   217dc:	ldr	w8, [x19]
   217e0:	orr	w8, w8, w21
   217e4:	str	w8, [x19]
   217e8:	ldp	x20, x19, [sp, #48]
   217ec:	ldp	x22, x21, [sp, #32]
   217f0:	ldp	x29, x30, [sp, #16]
   217f4:	add	sp, sp, #0x40
   217f8:	ret
   217fc:	ldrb	w8, [x0]
   21800:	ldr	x10, [x0, #40]
   21804:	cmp	x1, #0x0
   21808:	lsr	x9, x1, #63
   2180c:	and	w8, w8, #0xf0
   21810:	orr	w8, w8, w9
   21814:	cneg	x9, x1, mi  // mi = first
   21818:	str	xzr, [x0, #8]
   2181c:	strb	w8, [x0]
   21820:	mov	w8, #0x1                   	// #1
   21824:	stp	x9, xzr, [x10]
   21828:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   2182c:	add	x9, x9, #0x370
   21830:	str	x8, [x0, #24]
   21834:	ldr	x8, [x10]
   21838:	ldr	x10, [x9, #72]
   2183c:	mov	x1, x2
   21840:	cmp	x10, x8
   21844:	b.ls	21870 <PyInit__decimal@@Base+0x1adbc>  // b.plast
   21848:	ldr	x10, [x9, #32]
   2184c:	cmp	x10, x8
   21850:	b.ls	21898 <PyInit__decimal@@Base+0x1ade4>  // b.plast
   21854:	ldr	x10, [x9, #16]
   21858:	cmp	x10, x8
   2185c:	b.ls	218dc <PyInit__decimal@@Base+0x1ae28>  // b.plast
   21860:	ldr	x9, [x9, #8]
   21864:	cmp	x9, x8
   21868:	mov	w8, #0x1                   	// #1
   2186c:	b	21940 <PyInit__decimal@@Base+0x1ae8c>
   21870:	ldr	x10, [x9, #112]
   21874:	cmp	x10, x8
   21878:	b.ls	218b4 <PyInit__decimal@@Base+0x1ae00>  // b.plast
   2187c:	ldr	x10, [x9, #88]
   21880:	cmp	x10, x8
   21884:	b.ls	218ec <PyInit__decimal@@Base+0x1ae38>  // b.plast
   21888:	ldr	x9, [x9, #80]
   2188c:	cmp	x9, x8
   21890:	mov	w8, #0xa                   	// #10
   21894:	b	21940 <PyInit__decimal@@Base+0x1ae8c>
   21898:	ldr	x10, [x9, #48]
   2189c:	cmp	x10, x8
   218a0:	b.ls	21908 <PyInit__decimal@@Base+0x1ae54>  // b.plast
   218a4:	ldr	x9, [x9, #40]
   218a8:	cmp	x9, x8
   218ac:	mov	w8, #0x5                   	// #5
   218b0:	b	21940 <PyInit__decimal@@Base+0x1ae8c>
   218b4:	ldr	x10, [x9, #144]
   218b8:	cmp	x10, x8
   218bc:	b.ls	21924 <PyInit__decimal@@Base+0x1ae70>  // b.plast
   218c0:	ldr	x10, [x9, #128]
   218c4:	cmp	x10, x8
   218c8:	b.ls	21934 <PyInit__decimal@@Base+0x1ae80>  // b.plast
   218cc:	ldr	x9, [x9, #120]
   218d0:	cmp	x9, x8
   218d4:	mov	w8, #0xf                   	// #15
   218d8:	b	21940 <PyInit__decimal@@Base+0x1ae8c>
   218dc:	ldr	x9, [x9, #24]
   218e0:	cmp	x9, x8
   218e4:	mov	w8, #0x3                   	// #3
   218e8:	b	21940 <PyInit__decimal@@Base+0x1ae8c>
   218ec:	ldr	x10, [x9, #104]
   218f0:	cmp	x10, x8
   218f4:	b.ls	21950 <PyInit__decimal@@Base+0x1ae9c>  // b.plast
   218f8:	ldr	x9, [x9, #96]
   218fc:	cmp	x9, x8
   21900:	mov	w8, #0xc                   	// #12
   21904:	b	21940 <PyInit__decimal@@Base+0x1ae8c>
   21908:	ldr	x10, [x9, #64]
   2190c:	cmp	x10, x8
   21910:	b.ls	21958 <PyInit__decimal@@Base+0x1aea4>  // b.plast
   21914:	ldr	x9, [x9, #56]
   21918:	cmp	x9, x8
   2191c:	mov	w8, #0x7                   	// #7
   21920:	b	21940 <PyInit__decimal@@Base+0x1ae8c>
   21924:	ldr	x9, [x9, #152]
   21928:	cmp	x9, x8
   2192c:	mov	w8, #0x13                  	// #19
   21930:	b	21940 <PyInit__decimal@@Base+0x1ae8c>
   21934:	ldr	x9, [x9, #136]
   21938:	cmp	x9, x8
   2193c:	mov	w8, #0x11                  	// #17
   21940:	cinc	x8, x8, ls  // ls = plast
   21944:	mov	x2, x3
   21948:	str	x8, [x0, #16]
   2194c:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   21950:	mov	w8, #0xe                   	// #14
   21954:	b	21944 <PyInit__decimal@@Base+0x1ae90>
   21958:	mov	w8, #0x9                   	// #9
   2195c:	b	21944 <PyInit__decimal@@Base+0x1ae90>
   21960:	stp	x29, x30, [sp, #-48]!
   21964:	stp	x22, x21, [sp, #16]
   21968:	stp	x20, x19, [sp, #32]
   2196c:	mov	x29, sp
   21970:	ldrb	w8, [x0]
   21974:	mov	x21, x0
   21978:	mov	x20, x1
   2197c:	tst	w8, #0xe
   21980:	b.eq	219a4 <PyInit__decimal@@Base+0x1aef0>  // b.none
   21984:	tst	w8, #0xc
   21988:	b.eq	21c88 <PyInit__decimal@@Base+0x1b1d4>  // b.none
   2198c:	mov	x0, x21
   21990:	mov	x1, x20
   21994:	ldp	x20, x19, [sp, #32]
   21998:	ldp	x22, x21, [sp, #16]
   2199c:	ldp	x29, x30, [sp], #48
   219a0:	b	22944 <PyInit__decimal@@Base+0x1be90>
   219a4:	mov	x0, x21
   219a8:	mov	x1, x20
   219ac:	mov	x19, x2
   219b0:	bl	22d2c <PyInit__decimal@@Base+0x1c278>
   219b4:	ldrb	w8, [x21]
   219b8:	tst	w8, #0xe
   219bc:	b.ne	21c88 <PyInit__decimal@@Base+0x1b1d4>  // b.any
   219c0:	ldr	x8, [x21, #16]
   219c4:	ldr	x9, [x20]
   219c8:	subs	x22, x8, x9
   219cc:	b.le	21c88 <PyInit__decimal@@Base+0x1b1d4>
   219d0:	mov	x0, x21
   219d4:	mov	x1, x22
   219d8:	bl	23ebc <PyInit__decimal@@Base+0x1d408>
   219dc:	ldr	x8, [x21, #8]
   219e0:	add	x8, x8, x22
   219e4:	str	x8, [x21, #8]
   219e8:	ldr	w8, [x20, #36]
   219ec:	mov	x22, x0
   219f0:	cmp	w8, #0x7
   219f4:	b.hi	21c6c <PyInit__decimal@@Base+0x1b1b8>  // b.pmore
   219f8:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   219fc:	add	x9, x9, #0x6f8
   21a00:	adr	x10, 21a10 <PyInit__decimal@@Base+0x1af5c>
   21a04:	ldrb	w11, [x9, x8]
   21a08:	add	x10, x10, x11, lsl #2
   21a0c:	br	x10
   21a10:	cmp	x22, #0x0
   21a14:	cset	w8, ne  // ne = any
   21a18:	b	21ab4 <PyInit__decimal@@Base+0x1b000>
   21a1c:	cbz	x22, 21b40 <PyInit__decimal@@Base+0x1b08c>
   21a20:	ldrb	w8, [x21]
   21a24:	mvn	w8, w8
   21a28:	and	w8, w8, #0x1
   21a2c:	b	21ab4 <PyInit__decimal@@Base+0x1b000>
   21a30:	cbz	x22, 21b40 <PyInit__decimal@@Base+0x1b08c>
   21a34:	ldrb	w8, [x21]
   21a38:	and	w8, w8, #0x1
   21a3c:	b	21ab4 <PyInit__decimal@@Base+0x1b000>
   21a40:	cmp	x22, #0x4
   21a44:	cset	w8, hi  // hi = pmore
   21a48:	b	21ab4 <PyInit__decimal@@Base+0x1b000>
   21a4c:	cmp	x22, #0x5
   21a50:	cset	w8, hi  // hi = pmore
   21a54:	b	21ab4 <PyInit__decimal@@Base+0x1b000>
   21a58:	cmp	x22, #0x5
   21a5c:	b.hi	21ab8 <PyInit__decimal@@Base+0x1b004>  // b.pmore
   21a60:	b.ne	21c6c <PyInit__decimal@@Base+0x1b1b8>  // b.any
   21a64:	ldr	x8, [x21, #40]
   21a68:	ldr	w8, [x8]
   21a6c:	and	w8, w8, #0x1
   21a70:	b	21ab4 <PyInit__decimal@@Base+0x1b000>
   21a74:	ldr	x8, [x21, #40]
   21a78:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   21a7c:	movk	x9, #0xcccd
   21a80:	mov	w10, #0xa                   	// #10
   21a84:	ldr	x8, [x8]
   21a88:	cmp	x22, #0x0
   21a8c:	cset	w11, ne  // ne = any
   21a90:	umulh	x9, x8, x9
   21a94:	lsr	x9, x9, #3
   21a98:	msub	w8, w9, w10, w8
   21a9c:	cmp	w8, #0x0
   21aa0:	cset	w9, eq  // eq = none
   21aa4:	cmp	w8, #0x5
   21aa8:	cset	w8, eq  // eq = none
   21aac:	orr	w8, w9, w8
   21ab0:	and	w8, w11, w8
   21ab4:	cbz	w8, 21c6c <PyInit__decimal@@Base+0x1b1b8>
   21ab8:	ldr	x0, [x21, #40]
   21abc:	ldr	x1, [x21, #24]
   21ac0:	bl	1b324 <PyInit__decimal@@Base+0x14870>
   21ac4:	cbz	x0, 21af4 <PyInit__decimal@@Base+0x1b040>
   21ac8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   21acc:	add	x8, x8, #0x370
   21ad0:	ldr	x9, [x21, #40]
   21ad4:	ldr	x10, [x21, #24]
   21ad8:	ldr	x8, [x8, #144]
   21adc:	add	x9, x9, x10, lsl #3
   21ae0:	stur	x8, [x9, #-8]
   21ae4:	ldr	x8, [x21, #8]
   21ae8:	add	x8, x8, #0x1
   21aec:	str	x8, [x21, #8]
   21af0:	b	21c5c <PyInit__decimal@@Base+0x1b1a8>
   21af4:	ldr	x9, [x21, #40]
   21af8:	ldr	x8, [x21, #24]
   21afc:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   21b00:	add	x10, x10, #0x370
   21b04:	ldr	x11, [x10, #72]
   21b08:	add	x9, x9, x8, lsl #3
   21b0c:	ldur	x9, [x9, #-8]
   21b10:	cmp	x11, x9
   21b14:	b.ls	21b4c <PyInit__decimal@@Base+0x1b098>  // b.plast
   21b18:	ldr	x11, [x10, #32]
   21b1c:	cmp	x11, x9
   21b20:	b.ls	21b74 <PyInit__decimal@@Base+0x1b0c0>  // b.plast
   21b24:	ldr	x11, [x10, #16]
   21b28:	cmp	x11, x9
   21b2c:	b.ls	21bb8 <PyInit__decimal@@Base+0x1b104>  // b.plast
   21b30:	ldr	x10, [x10, #8]
   21b34:	cmp	x10, x9
   21b38:	mov	w9, #0x1                   	// #1
   21b3c:	b	21c1c <PyInit__decimal@@Base+0x1b168>
   21b40:	ldr	w8, [x19]
   21b44:	orr	w8, w8, #0x1000
   21b48:	b	21c84 <PyInit__decimal@@Base+0x1b1d0>
   21b4c:	ldr	x11, [x10, #112]
   21b50:	cmp	x11, x9
   21b54:	b.ls	21b90 <PyInit__decimal@@Base+0x1b0dc>  // b.plast
   21b58:	ldr	x11, [x10, #88]
   21b5c:	cmp	x11, x9
   21b60:	b.ls	21bc8 <PyInit__decimal@@Base+0x1b114>  // b.plast
   21b64:	ldr	x10, [x10, #80]
   21b68:	cmp	x10, x9
   21b6c:	mov	w9, #0xa                   	// #10
   21b70:	b	21c1c <PyInit__decimal@@Base+0x1b168>
   21b74:	ldr	x11, [x10, #48]
   21b78:	cmp	x11, x9
   21b7c:	b.ls	21be4 <PyInit__decimal@@Base+0x1b130>  // b.plast
   21b80:	ldr	x10, [x10, #40]
   21b84:	cmp	x10, x9
   21b88:	mov	w9, #0x5                   	// #5
   21b8c:	b	21c1c <PyInit__decimal@@Base+0x1b168>
   21b90:	ldr	x11, [x10, #144]
   21b94:	cmp	x11, x9
   21b98:	b.ls	21c00 <PyInit__decimal@@Base+0x1b14c>  // b.plast
   21b9c:	ldr	x11, [x10, #128]
   21ba0:	cmp	x11, x9
   21ba4:	b.ls	21c10 <PyInit__decimal@@Base+0x1b15c>  // b.plast
   21ba8:	ldr	x10, [x10, #120]
   21bac:	cmp	x10, x9
   21bb0:	mov	w9, #0xf                   	// #15
   21bb4:	b	21c1c <PyInit__decimal@@Base+0x1b168>
   21bb8:	ldr	x10, [x10, #24]
   21bbc:	cmp	x10, x9
   21bc0:	mov	w9, #0x3                   	// #3
   21bc4:	b	21c1c <PyInit__decimal@@Base+0x1b168>
   21bc8:	ldr	x11, [x10, #104]
   21bcc:	cmp	x11, x9
   21bd0:	b.ls	21c98 <PyInit__decimal@@Base+0x1b1e4>  // b.plast
   21bd4:	ldr	x10, [x10, #96]
   21bd8:	cmp	x10, x9
   21bdc:	mov	w9, #0xc                   	// #12
   21be0:	b	21c1c <PyInit__decimal@@Base+0x1b168>
   21be4:	ldr	x11, [x10, #64]
   21be8:	cmp	x11, x9
   21bec:	b.ls	21ca0 <PyInit__decimal@@Base+0x1b1ec>  // b.plast
   21bf0:	ldr	x10, [x10, #56]
   21bf4:	cmp	x10, x9
   21bf8:	mov	w9, #0x7                   	// #7
   21bfc:	b	21c1c <PyInit__decimal@@Base+0x1b168>
   21c00:	ldr	x10, [x10, #152]
   21c04:	cmp	x10, x9
   21c08:	mov	w9, #0x13                  	// #19
   21c0c:	b	21c1c <PyInit__decimal@@Base+0x1b168>
   21c10:	ldr	x10, [x10, #136]
   21c14:	cmp	x10, x9
   21c18:	mov	w9, #0x11                  	// #17
   21c1c:	cinc	x9, x9, ls  // ls = plast
   21c20:	mov	w10, #0x13                  	// #19
   21c24:	madd	x8, x8, x10, x9
   21c28:	sub	x8, x8, #0x13
   21c2c:	str	x8, [x21, #16]
   21c30:	ldr	x9, [x20]
   21c34:	cmp	x8, x9
   21c38:	b.le	21c6c <PyInit__decimal@@Base+0x1b1b8>
   21c3c:	mov	w1, #0x1                   	// #1
   21c40:	mov	x0, x21
   21c44:	bl	23ebc <PyInit__decimal@@Base+0x1d408>
   21c48:	ldr	x8, [x21, #8]
   21c4c:	add	x8, x8, #0x1
   21c50:	str	x8, [x21, #8]
   21c54:	ldr	x8, [x20]
   21c58:	str	x8, [x21, #16]
   21c5c:	mov	x0, x21
   21c60:	mov	x1, x20
   21c64:	mov	x2, x19
   21c68:	bl	22d2c <PyInit__decimal@@Base+0x1c278>
   21c6c:	ldr	w8, [x19]
   21c70:	orr	w9, w8, #0x1000
   21c74:	str	w9, [x19]
   21c78:	cbz	x22, 21c88 <PyInit__decimal@@Base+0x1b1d4>
   21c7c:	mov	w9, #0x1040                	// #4160
   21c80:	orr	w8, w8, w9
   21c84:	str	w8, [x19]
   21c88:	ldp	x20, x19, [sp, #32]
   21c8c:	ldp	x22, x21, [sp, #16]
   21c90:	ldp	x29, x30, [sp], #48
   21c94:	ret
   21c98:	mov	w9, #0xe                   	// #14
   21c9c:	b	21c20 <PyInit__decimal@@Base+0x1b16c>
   21ca0:	mov	w9, #0x9                   	// #9
   21ca4:	b	21c20 <PyInit__decimal@@Base+0x1b16c>
   21ca8:	ldrb	w8, [x0]
   21cac:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   21cb0:	movk	x10, #0x2304, lsl #32
   21cb4:	ldr	x9, [x0, #40]
   21cb8:	movk	x10, #0x8ac7, lsl #48
   21cbc:	cmp	x1, x10
   21cc0:	mov	w11, #0x1                   	// #1
   21cc4:	csinc	x10, xzr, x10, ls  // ls = plast
   21cc8:	and	w8, w8, #0xf0
   21ccc:	sub	x12, x1, x10
   21cd0:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   21cd4:	strb	w8, [x0]
   21cd8:	cset	w13, hi  // hi = pmore
   21cdc:	cinc	x8, x11, hi  // hi = pmore
   21ce0:	str	xzr, [x0, #8]
   21ce4:	add	x10, x10, #0x370
   21ce8:	stp	x12, x13, [x9]
   21cec:	add	x9, x9, x8, lsl #3
   21cf0:	str	x8, [x0, #24]
   21cf4:	ldur	x9, [x9, #-8]
   21cf8:	ldr	x11, [x10, #72]
   21cfc:	mov	x1, x2
   21d00:	cmp	x11, x9
   21d04:	b.ls	21d30 <PyInit__decimal@@Base+0x1b27c>  // b.plast
   21d08:	ldr	x11, [x10, #32]
   21d0c:	cmp	x11, x9
   21d10:	b.ls	21d58 <PyInit__decimal@@Base+0x1b2a4>  // b.plast
   21d14:	ldr	x11, [x10, #16]
   21d18:	cmp	x11, x9
   21d1c:	b.ls	21d9c <PyInit__decimal@@Base+0x1b2e8>  // b.plast
   21d20:	ldr	x10, [x10, #8]
   21d24:	cmp	x10, x9
   21d28:	mov	w9, #0x1                   	// #1
   21d2c:	b	21e00 <PyInit__decimal@@Base+0x1b34c>
   21d30:	ldr	x11, [x10, #112]
   21d34:	cmp	x11, x9
   21d38:	b.ls	21d74 <PyInit__decimal@@Base+0x1b2c0>  // b.plast
   21d3c:	ldr	x11, [x10, #88]
   21d40:	cmp	x11, x9
   21d44:	b.ls	21dac <PyInit__decimal@@Base+0x1b2f8>  // b.plast
   21d48:	ldr	x10, [x10, #80]
   21d4c:	cmp	x10, x9
   21d50:	mov	w9, #0xa                   	// #10
   21d54:	b	21e00 <PyInit__decimal@@Base+0x1b34c>
   21d58:	ldr	x11, [x10, #48]
   21d5c:	cmp	x11, x9
   21d60:	b.ls	21dc8 <PyInit__decimal@@Base+0x1b314>  // b.plast
   21d64:	ldr	x10, [x10, #40]
   21d68:	cmp	x10, x9
   21d6c:	mov	w9, #0x5                   	// #5
   21d70:	b	21e00 <PyInit__decimal@@Base+0x1b34c>
   21d74:	ldr	x11, [x10, #144]
   21d78:	cmp	x11, x9
   21d7c:	b.ls	21de4 <PyInit__decimal@@Base+0x1b330>  // b.plast
   21d80:	ldr	x11, [x10, #128]
   21d84:	cmp	x11, x9
   21d88:	b.ls	21df4 <PyInit__decimal@@Base+0x1b340>  // b.plast
   21d8c:	ldr	x10, [x10, #120]
   21d90:	cmp	x10, x9
   21d94:	mov	w9, #0xf                   	// #15
   21d98:	b	21e00 <PyInit__decimal@@Base+0x1b34c>
   21d9c:	ldr	x10, [x10, #24]
   21da0:	cmp	x10, x9
   21da4:	mov	w9, #0x3                   	// #3
   21da8:	b	21e00 <PyInit__decimal@@Base+0x1b34c>
   21dac:	ldr	x11, [x10, #104]
   21db0:	cmp	x11, x9
   21db4:	b.ls	21e1c <PyInit__decimal@@Base+0x1b368>  // b.plast
   21db8:	ldr	x10, [x10, #96]
   21dbc:	cmp	x10, x9
   21dc0:	mov	w9, #0xc                   	// #12
   21dc4:	b	21e00 <PyInit__decimal@@Base+0x1b34c>
   21dc8:	ldr	x11, [x10, #64]
   21dcc:	cmp	x11, x9
   21dd0:	b.ls	21e24 <PyInit__decimal@@Base+0x1b370>  // b.plast
   21dd4:	ldr	x10, [x10, #56]
   21dd8:	cmp	x10, x9
   21ddc:	mov	w9, #0x7                   	// #7
   21de0:	b	21e00 <PyInit__decimal@@Base+0x1b34c>
   21de4:	ldr	x10, [x10, #152]
   21de8:	cmp	x10, x9
   21dec:	mov	w9, #0x13                  	// #19
   21df0:	b	21e00 <PyInit__decimal@@Base+0x1b34c>
   21df4:	ldr	x10, [x10, #136]
   21df8:	cmp	x10, x9
   21dfc:	mov	w9, #0x11                  	// #17
   21e00:	cinc	x9, x9, ls  // ls = plast
   21e04:	mov	w10, #0x13                  	// #19
   21e08:	madd	x8, x8, x10, x9
   21e0c:	sub	x8, x8, #0x13
   21e10:	mov	x2, x3
   21e14:	str	x8, [x0, #16]
   21e18:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   21e1c:	mov	w9, #0xe                   	// #14
   21e20:	b	21e04 <PyInit__decimal@@Base+0x1b350>
   21e24:	mov	w9, #0x9                   	// #9
   21e28:	b	21e04 <PyInit__decimal@@Base+0x1b350>
   21e2c:	sxtw	x1, w1
   21e30:	b	217fc <PyInit__decimal@@Base+0x1ad48>
   21e34:	mov	w1, w1
   21e38:	b	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   21e3c:	b	217fc <PyInit__decimal@@Base+0x1ad48>
   21e40:	b	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   21e44:	stp	x29, x30, [sp, #-64]!
   21e48:	str	x23, [sp, #16]
   21e4c:	stp	x22, x21, [sp, #32]
   21e50:	stp	x20, x19, [sp, #48]
   21e54:	mov	x29, sp
   21e58:	ldrb	w8, [x0]
   21e5c:	mov	x19, x3
   21e60:	mov	x20, x2
   21e64:	mov	x21, x0
   21e68:	mov	x22, x1
   21e6c:	tbnz	w8, #5, 21eac <PyInit__decimal@@Base+0x1b3f8>
   21e70:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   21e74:	ldr	x8, [x21, #32]
   21e78:	ldr	x1, [x23, #1344]
   21e7c:	cmp	x8, x1
   21e80:	b.le	21eac <PyInit__decimal@@Base+0x1b3f8>
   21e84:	strb	wzr, [x29, #28]
   21e88:	ldr	x0, [x21, #40]
   21e8c:	add	x3, x29, #0x1c
   21e90:	mov	w2, #0x8                   	// #8
   21e94:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   21e98:	str	x0, [x21, #40]
   21e9c:	ldrb	w8, [x29, #28]
   21ea0:	cbnz	w8, 21eac <PyInit__decimal@@Base+0x1b3f8>
   21ea4:	ldr	x8, [x23, #1344]
   21ea8:	str	x8, [x21, #32]
   21eac:	mov	x0, x21
   21eb0:	mov	x1, x22
   21eb4:	mov	x2, x20
   21eb8:	mov	x3, x19
   21ebc:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   21ec0:	ldp	x20, x19, [sp, #48]
   21ec4:	ldp	x22, x21, [sp, #32]
   21ec8:	ldr	x23, [sp, #16]
   21ecc:	ldp	x29, x30, [sp], #64
   21ed0:	ret
   21ed4:	stp	x29, x30, [sp, #-48]!
   21ed8:	str	x21, [sp, #16]
   21edc:	stp	x20, x19, [sp, #32]
   21ee0:	mov	x29, sp
   21ee4:	mov	x19, x3
   21ee8:	mov	x20, x2
   21eec:	mov	x2, x1
   21ef0:	mov	w1, wzr
   21ef4:	mov	x3, xzr
   21ef8:	mov	x21, x0
   21efc:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   21f00:	mov	x0, x21
   21f04:	mov	x1, x20
   21f08:	mov	x2, x19
   21f0c:	ldp	x20, x19, [sp, #32]
   21f10:	ldr	x21, [sp, #16]
   21f14:	ldp	x29, x30, [sp], #48
   21f18:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   21f1c:	stp	x29, x30, [sp, #-64]!
   21f20:	str	x23, [sp, #16]
   21f24:	stp	x22, x21, [sp, #32]
   21f28:	stp	x20, x19, [sp, #48]
   21f2c:	mov	x29, sp
   21f30:	ldrb	w8, [x0]
   21f34:	mov	x21, x3
   21f38:	mov	x20, x2
   21f3c:	mov	x19, x0
   21f40:	mov	w22, w1
   21f44:	tbnz	w8, #5, 21f88 <PyInit__decimal@@Base+0x1b4d4>
   21f48:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   21f4c:	ldr	x9, [x19, #32]
   21f50:	ldr	x1, [x23, #1344]
   21f54:	cmp	x9, x1
   21f58:	b.le	21f88 <PyInit__decimal@@Base+0x1b4d4>
   21f5c:	strb	wzr, [x29, #28]
   21f60:	ldr	x0, [x19, #40]
   21f64:	add	x3, x29, #0x1c
   21f68:	mov	w2, #0x8                   	// #8
   21f6c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   21f70:	str	x0, [x19, #40]
   21f74:	ldrb	w8, [x29, #28]
   21f78:	cbnz	w8, 21f84 <PyInit__decimal@@Base+0x1b4d0>
   21f7c:	ldr	x8, [x23, #1344]
   21f80:	str	x8, [x19, #32]
   21f84:	ldrb	w8, [x19]
   21f88:	mov	x11, #0xffffffff89e7ffff    	// #-1981284353
   21f8c:	movk	x11, #0x2304, lsl #32
   21f90:	and	w8, w8, #0xf0
   21f94:	ldr	x9, [x19, #40]
   21f98:	movk	x11, #0x8ac7, lsl #48
   21f9c:	orr	w8, w8, w22
   21fa0:	cmp	x20, x11
   21fa4:	mov	w12, #0x1                   	// #1
   21fa8:	strb	w8, [x19]
   21fac:	csinc	x8, xzr, x11, ls  // ls = plast
   21fb0:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   21fb4:	sub	x11, x20, x8
   21fb8:	cset	w13, hi  // hi = pmore
   21fbc:	cinc	x8, x12, hi  // hi = pmore
   21fc0:	str	x21, [x19, #8]
   21fc4:	add	x10, x10, #0x370
   21fc8:	stp	x11, x13, [x9]
   21fcc:	str	x8, [x19, #24]
   21fd0:	add	x9, x9, x8, lsl #3
   21fd4:	ldur	x9, [x9, #-8]
   21fd8:	ldr	x11, [x10, #72]
   21fdc:	cmp	x11, x9
   21fe0:	b.ls	2200c <PyInit__decimal@@Base+0x1b558>  // b.plast
   21fe4:	ldr	x11, [x10, #32]
   21fe8:	cmp	x11, x9
   21fec:	b.ls	22034 <PyInit__decimal@@Base+0x1b580>  // b.plast
   21ff0:	ldr	x11, [x10, #16]
   21ff4:	cmp	x11, x9
   21ff8:	b.ls	22078 <PyInit__decimal@@Base+0x1b5c4>  // b.plast
   21ffc:	ldr	x10, [x10, #8]
   22000:	cmp	x10, x9
   22004:	mov	w9, #0x1                   	// #1
   22008:	b	220dc <PyInit__decimal@@Base+0x1b628>
   2200c:	ldr	x11, [x10, #112]
   22010:	cmp	x11, x9
   22014:	b.ls	22050 <PyInit__decimal@@Base+0x1b59c>  // b.plast
   22018:	ldr	x11, [x10, #88]
   2201c:	cmp	x11, x9
   22020:	b.ls	22088 <PyInit__decimal@@Base+0x1b5d4>  // b.plast
   22024:	ldr	x10, [x10, #80]
   22028:	cmp	x10, x9
   2202c:	mov	w9, #0xa                   	// #10
   22030:	b	220dc <PyInit__decimal@@Base+0x1b628>
   22034:	ldr	x11, [x10, #48]
   22038:	cmp	x11, x9
   2203c:	b.ls	220a4 <PyInit__decimal@@Base+0x1b5f0>  // b.plast
   22040:	ldr	x10, [x10, #40]
   22044:	cmp	x10, x9
   22048:	mov	w9, #0x5                   	// #5
   2204c:	b	220dc <PyInit__decimal@@Base+0x1b628>
   22050:	ldr	x11, [x10, #144]
   22054:	cmp	x11, x9
   22058:	b.ls	220c0 <PyInit__decimal@@Base+0x1b60c>  // b.plast
   2205c:	ldr	x11, [x10, #128]
   22060:	cmp	x11, x9
   22064:	b.ls	220d0 <PyInit__decimal@@Base+0x1b61c>  // b.plast
   22068:	ldr	x10, [x10, #120]
   2206c:	cmp	x10, x9
   22070:	mov	w9, #0xf                   	// #15
   22074:	b	220dc <PyInit__decimal@@Base+0x1b628>
   22078:	ldr	x10, [x10, #24]
   2207c:	cmp	x10, x9
   22080:	mov	w9, #0x3                   	// #3
   22084:	b	220dc <PyInit__decimal@@Base+0x1b628>
   22088:	ldr	x11, [x10, #104]
   2208c:	cmp	x11, x9
   22090:	b.ls	22104 <PyInit__decimal@@Base+0x1b650>  // b.plast
   22094:	ldr	x10, [x10, #96]
   22098:	cmp	x10, x9
   2209c:	mov	w9, #0xc                   	// #12
   220a0:	b	220dc <PyInit__decimal@@Base+0x1b628>
   220a4:	ldr	x11, [x10, #64]
   220a8:	cmp	x11, x9
   220ac:	b.ls	2210c <PyInit__decimal@@Base+0x1b658>  // b.plast
   220b0:	ldr	x10, [x10, #56]
   220b4:	cmp	x10, x9
   220b8:	mov	w9, #0x7                   	// #7
   220bc:	b	220dc <PyInit__decimal@@Base+0x1b628>
   220c0:	ldr	x10, [x10, #152]
   220c4:	cmp	x10, x9
   220c8:	mov	w9, #0x13                  	// #19
   220cc:	b	220dc <PyInit__decimal@@Base+0x1b628>
   220d0:	ldr	x10, [x10, #136]
   220d4:	cmp	x10, x9
   220d8:	mov	w9, #0x11                  	// #17
   220dc:	cinc	x9, x9, ls  // ls = plast
   220e0:	mov	w10, #0x13                  	// #19
   220e4:	madd	x8, x8, x10, x9
   220e8:	sub	x8, x8, #0x13
   220ec:	str	x8, [x19, #16]
   220f0:	ldp	x20, x19, [sp, #48]
   220f4:	ldp	x22, x21, [sp, #32]
   220f8:	ldr	x23, [sp, #16]
   220fc:	ldp	x29, x30, [sp], #64
   22100:	ret
   22104:	mov	w9, #0xe                   	// #14
   22108:	b	220e0 <PyInit__decimal@@Base+0x1b62c>
   2210c:	mov	w9, #0x9                   	// #9
   22110:	b	220e0 <PyInit__decimal@@Base+0x1b62c>
   22114:	stp	x29, x30, [sp, #-64]!
   22118:	str	x23, [sp, #16]
   2211c:	stp	x22, x21, [sp, #32]
   22120:	stp	x20, x19, [sp, #48]
   22124:	mov	x29, sp
   22128:	ldrb	w8, [x0]
   2212c:	mov	x19, x3
   22130:	mov	x20, x2
   22134:	mov	x21, x0
   22138:	sxtw	x22, w1
   2213c:	tbnz	w8, #5, 2217c <PyInit__decimal@@Base+0x1b6c8>
   22140:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   22144:	ldr	x8, [x21, #32]
   22148:	ldr	x1, [x23, #1344]
   2214c:	cmp	x8, x1
   22150:	b.le	2217c <PyInit__decimal@@Base+0x1b6c8>
   22154:	strb	wzr, [x29, #28]
   22158:	ldr	x0, [x21, #40]
   2215c:	add	x3, x29, #0x1c
   22160:	mov	w2, #0x8                   	// #8
   22164:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   22168:	str	x0, [x21, #40]
   2216c:	ldrb	w8, [x29, #28]
   22170:	cbnz	w8, 2217c <PyInit__decimal@@Base+0x1b6c8>
   22174:	ldr	x8, [x23, #1344]
   22178:	str	x8, [x21, #32]
   2217c:	mov	x0, x21
   22180:	mov	x1, x22
   22184:	mov	x2, x20
   22188:	mov	x3, x19
   2218c:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   22190:	ldp	x20, x19, [sp, #48]
   22194:	ldp	x22, x21, [sp, #32]
   22198:	ldr	x23, [sp, #16]
   2219c:	ldp	x29, x30, [sp], #64
   221a0:	ret
   221a4:	stp	x29, x30, [sp, #-48]!
   221a8:	str	x21, [sp, #16]
   221ac:	stp	x20, x19, [sp, #32]
   221b0:	mov	x29, sp
   221b4:	mov	x19, x3
   221b8:	mov	x20, x2
   221bc:	mov	w2, w1
   221c0:	mov	w1, wzr
   221c4:	mov	x3, xzr
   221c8:	mov	x21, x0
   221cc:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   221d0:	mov	x0, x21
   221d4:	mov	x1, x20
   221d8:	mov	x2, x19
   221dc:	ldp	x20, x19, [sp, #32]
   221e0:	ldr	x21, [sp, #16]
   221e4:	ldp	x29, x30, [sp], #48
   221e8:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   221ec:	stp	x29, x30, [sp, #-64]!
   221f0:	str	x23, [sp, #16]
   221f4:	stp	x22, x21, [sp, #32]
   221f8:	stp	x20, x19, [sp, #48]
   221fc:	mov	x29, sp
   22200:	ldrb	w8, [x0]
   22204:	mov	x19, x3
   22208:	mov	x20, x2
   2220c:	mov	x21, x0
   22210:	mov	x22, x1
   22214:	tbnz	w8, #5, 22254 <PyInit__decimal@@Base+0x1b7a0>
   22218:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   2221c:	ldr	x8, [x21, #32]
   22220:	ldr	x1, [x23, #1344]
   22224:	cmp	x8, x1
   22228:	b.le	22254 <PyInit__decimal@@Base+0x1b7a0>
   2222c:	strb	wzr, [x29, #28]
   22230:	ldr	x0, [x21, #40]
   22234:	add	x3, x29, #0x1c
   22238:	mov	w2, #0x8                   	// #8
   2223c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   22240:	str	x0, [x21, #40]
   22244:	ldrb	w8, [x29, #28]
   22248:	cbnz	w8, 22254 <PyInit__decimal@@Base+0x1b7a0>
   2224c:	ldr	x8, [x23, #1344]
   22250:	str	x8, [x21, #32]
   22254:	mov	x0, x21
   22258:	mov	x1, x22
   2225c:	mov	x2, x20
   22260:	mov	x3, x19
   22264:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   22268:	ldp	x20, x19, [sp, #48]
   2226c:	ldp	x22, x21, [sp, #32]
   22270:	ldr	x23, [sp, #16]
   22274:	ldp	x29, x30, [sp], #64
   22278:	ret
   2227c:	stp	x29, x30, [sp, #-48]!
   22280:	str	x21, [sp, #16]
   22284:	stp	x20, x19, [sp, #32]
   22288:	mov	x29, sp
   2228c:	mov	x19, x3
   22290:	mov	x20, x2
   22294:	mov	x2, x1
   22298:	mov	w1, wzr
   2229c:	mov	x3, xzr
   222a0:	mov	x21, x0
   222a4:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   222a8:	mov	x0, x21
   222ac:	mov	x1, x20
   222b0:	mov	x2, x19
   222b4:	ldp	x20, x19, [sp, #32]
   222b8:	ldr	x21, [sp, #16]
   222bc:	ldp	x29, x30, [sp], #48
   222c0:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   222c4:	mov	x8, x0
   222c8:	mov	w0, #0x1                   	// #1
   222cc:	mov	x2, x1
   222d0:	mov	x1, x8
   222d4:	b	222d8 <PyInit__decimal@@Base+0x1b824>
   222d8:	sub	sp, sp, #0x90
   222dc:	stp	x29, x30, [sp, #80]
   222e0:	stp	x24, x23, [sp, #96]
   222e4:	stp	x22, x21, [sp, #112]
   222e8:	stp	x20, x19, [sp, #128]
   222ec:	add	x29, sp, #0x50
   222f0:	ldrb	w24, [x1]
   222f4:	mov	x19, x2
   222f8:	tst	w24, #0xe
   222fc:	b.eq	22328 <PyInit__decimal@@Base+0x1b874>  // b.none
   22300:	ldr	w8, [x19]
   22304:	mov	x0, #0xffffffffffffffff    	// #-1
   22308:	orr	w8, w8, #0x100
   2230c:	str	w8, [x19]
   22310:	ldp	x20, x19, [sp, #128]
   22314:	ldp	x22, x21, [sp, #112]
   22318:	ldp	x24, x23, [sp, #96]
   2231c:	ldp	x29, x30, [sp, #80]
   22320:	add	sp, sp, #0x90
   22324:	ret
   22328:	ldr	x20, [x1, #24]
   2232c:	mov	x21, x1
   22330:	ldr	x1, [x1, #40]
   22334:	mov	w8, w0
   22338:	sub	x9, x20, #0x1
   2233c:	ldr	x0, [x1, x9, lsl #3]
   22340:	cbz	x0, 22310 <PyInit__decimal@@Base+0x1b85c>
   22344:	cbz	w8, 2234c <PyInit__decimal@@Base+0x1b898>
   22348:	tbnz	w24, #0, 22300 <PyInit__decimal@@Base+0x1b84c>
   2234c:	ldp	x22, x23, [x21, #8]
   22350:	add	x8, x22, x23
   22354:	cmp	x8, #0x15
   22358:	b.ge	22300 <PyInit__decimal@@Base+0x1b84c>  // b.tcont
   2235c:	tbz	x22, #63, 2252c <PyInit__decimal@@Base+0x1ba78>
   22360:	cmp	x20, #0x1
   22364:	b.lt	2238c <PyInit__decimal@@Base+0x1b8d8>  // b.tstop
   22368:	mov	x10, xzr
   2236c:	mov	x12, x1
   22370:	mov	x13, x20
   22374:	ldr	x11, [x12]
   22378:	cbnz	x11, 22394 <PyInit__decimal@@Base+0x1b8e0>
   2237c:	add	x10, x10, #0x13
   22380:	subs	x13, x13, #0x1
   22384:	add	x12, x12, #0x8
   22388:	b.ne	22374 <PyInit__decimal@@Base+0x1b8c0>  // b.any
   2238c:	mov	x10, xzr
   22390:	b	223dc <PyInit__decimal@@Base+0x1b928>
   22394:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
   22398:	movk	x12, #0xcccd
   2239c:	mul	x13, x11, x12
   223a0:	mov	x14, #0x9999999999999999    	// #-7378697629483820647
   223a4:	ror	x13, x13, #1
   223a8:	movk	x14, #0x1999, lsl #48
   223ac:	cmp	x13, x14
   223b0:	b.hi	223dc <PyInit__decimal@@Base+0x1b928>  // b.pmore
   223b4:	mov	x13, #0x9999999999999999    	// #-7378697629483820647
   223b8:	movk	x13, #0x999a
   223bc:	movk	x13, #0x1999, lsl #48
   223c0:	umulh	x11, x11, x12
   223c4:	lsr	x11, x11, #3
   223c8:	mul	x14, x11, x12
   223cc:	ror	x14, x14, #1
   223d0:	cmp	x14, x13
   223d4:	add	x10, x10, #0x1
   223d8:	b.cc	223c0 <PyInit__decimal@@Base+0x1b90c>  // b.lo, b.ul, b.last
   223dc:	cmn	x10, x22
   223e0:	b.mi	22300 <PyInit__decimal@@Base+0x1b84c>  // b.first
   223e4:	add	x10, sp, #0x8
   223e8:	mov	w11, #0x30                  	// #48
   223ec:	mov	w12, #0x2                   	// #2
   223f0:	strb	w11, [sp, #24]
   223f4:	stp	x12, x10, [sp, #56]
   223f8:	cbz	x22, 22458 <PyInit__decimal@@Base+0x1b9a4>
   223fc:	ldr	x9, [x1, x9, lsl #3]
   22400:	cbz	x9, 22458 <PyInit__decimal@@Base+0x1b9a4>
   22404:	neg	x3, x22
   22408:	cmp	x23, x3
   2240c:	b.le	2248c <PyInit__decimal@@Base+0x1b9d8>
   22410:	mov	x9, #0x9436                	// #37942
   22414:	movk	x9, #0x50d7, lsl #16
   22418:	movk	x9, #0x435e, lsl #32
   2241c:	movk	x9, #0xd79, lsl #48
   22420:	smulh	x9, x8, x9
   22424:	add	x9, x9, x9, lsr #63
   22428:	mov	x10, #0xffffffffffffffed    	// #-19
   2242c:	mul	x10, x9, x10
   22430:	cmn	x10, x8
   22434:	add	x0, sp, #0x8
   22438:	mov	x2, x20
   2243c:	str	x8, [sp, #40]
   22440:	cinc	x22, x9, ne  // ne = any
   22444:	bl	1c194 <PyInit__decimal@@Base+0x156e0>
   22448:	ldr	x1, [sp, #64]
   2244c:	mov	x20, x22
   22450:	str	x22, [sp, #48]
   22454:	b	224f8 <PyInit__decimal@@Base+0x1ba44>
   22458:	add	x8, sp, #0x18
   2245c:	cmp	x8, x21
   22460:	b.eq	22518 <PyInit__decimal@@Base+0x1ba64>  // b.none
   22464:	lsl	x2, x20, #3
   22468:	add	x0, sp, #0x8
   2246c:	bl	63c0 <memcpy@plt>
   22470:	mov	w8, #0x30                  	// #48
   22474:	bfxil	w8, w24, #0, #4
   22478:	stp	x22, x23, [sp, #32]
   2247c:	str	x20, [sp, #48]
   22480:	strb	w8, [sp, #24]
   22484:	add	x1, sp, #0x8
   22488:	b	2251c <PyInit__decimal@@Base+0x1ba68>
   2248c:	cset	w2, eq  // eq = none
   22490:	mov	x0, x1
   22494:	mov	x1, x20
   22498:	bl	24010 <PyInit__decimal@@Base+0x1d55c>
   2249c:	ldrb	w8, [sp, #24]
   224a0:	tbnz	w8, #5, 224e0 <PyInit__decimal@@Base+0x1ba2c>
   224a4:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   224a8:	ldr	x8, [sp, #56]
   224ac:	ldr	x1, [x20, #1344]
   224b0:	cmp	x8, x1
   224b4:	b.le	224e0 <PyInit__decimal@@Base+0x1ba2c>
   224b8:	ldr	x0, [sp, #64]
   224bc:	sub	x3, x29, #0x4
   224c0:	mov	w2, #0x8                   	// #8
   224c4:	sturb	wzr, [x29, #-4]
   224c8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   224cc:	ldurb	w8, [x29, #-4]
   224d0:	str	x0, [sp, #64]
   224d4:	cbnz	w8, 224e0 <PyInit__decimal@@Base+0x1ba2c>
   224d8:	ldr	x8, [x20, #1344]
   224dc:	str	x8, [sp, #56]
   224e0:	ldr	x1, [sp, #64]
   224e4:	mov	w8, #0x1                   	// #1
   224e8:	dup	v0.2d, x8
   224ec:	stur	q0, [sp, #40]
   224f0:	str	xzr, [x1]
   224f4:	ldr	x20, [sp, #48]
   224f8:	ldrb	w8, [x21]
   224fc:	ldrb	w9, [sp, #24]
   22500:	ldr	x23, [sp, #40]
   22504:	bfxil	w9, w8, #0, #4
   22508:	strb	w9, [sp, #24]
   2250c:	ldr	x8, [x21, #8]
   22510:	str	x8, [sp, #32]
   22514:	b	2251c <PyInit__decimal@@Base+0x1ba68>
   22518:	add	x1, sp, #0x8
   2251c:	str	xzr, [sp, #32]
   22520:	add	x8, x1, x20, lsl #3
   22524:	ldur	x0, [x8, #-8]
   22528:	mov	x22, xzr
   2252c:	mov	x8, #0x435f                	// #17247
   22530:	movk	x8, #0xd79, lsl #16
   22534:	movk	x8, #0x35e5, lsl #32
   22538:	movk	x8, #0xd794, lsl #48
   2253c:	umulh	x8, x23, x8
   22540:	mov	w9, #0x13                  	// #19
   22544:	lsr	x8, x8, #4
   22548:	msub	x8, x8, x9, x23
   2254c:	cmp	x8, #0x0
   22550:	csel	x8, x9, x8, eq  // eq = none
   22554:	cmp	x20, #0x1
   22558:	b.le	225a0 <PyInit__decimal@@Base+0x1baec>
   2255c:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   22560:	mov	w9, #0x14                  	// #20
   22564:	add	x10, x10, #0x370
   22568:	add	x11, x1, x20, lsl #3
   2256c:	sub	x9, x9, x8
   22570:	add	x8, x10, x8, lsl #3
   22574:	ldur	x11, [x11, #-16]
   22578:	ldr	x9, [x10, x9, lsl #3]
   2257c:	ldur	x8, [x8, #-8]
   22580:	umulh	x10, x9, x0
   22584:	udiv	x11, x11, x8
   22588:	cmp	xzr, x10
   2258c:	madd	x0, x9, x0, x11
   22590:	cset	w8, ne  // ne = any
   22594:	cmp	x0, x11
   22598:	b.cc	22300 <PyInit__decimal@@Base+0x1b84c>  // b.lo, b.ul, b.last
   2259c:	cbnz	w8, 22300 <PyInit__decimal@@Base+0x1b84c>
   225a0:	cmp	x22, #0x1
   225a4:	b.lt	22310 <PyInit__decimal@@Base+0x1b85c>  // b.tstop
   225a8:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   225ac:	add	x8, x8, #0x370
   225b0:	ldr	x8, [x8, x22, lsl #3]
   225b4:	umulh	x9, x8, x0
   225b8:	cbnz	x9, 22300 <PyInit__decimal@@Base+0x1b84c>
   225bc:	mul	x0, x8, x0
   225c0:	b	22310 <PyInit__decimal@@Base+0x1b85c>
   225c4:	mov	x2, x1
   225c8:	mov	x1, x0
   225cc:	mov	w0, wzr
   225d0:	b	222d8 <PyInit__decimal@@Base+0x1b824>
   225d4:	stp	x29, x30, [sp, #-32]!
   225d8:	stp	x20, x19, [sp, #16]
   225dc:	mov	x29, sp
   225e0:	mov	x19, x1
   225e4:	mov	x20, x0
   225e8:	mov	w0, wzr
   225ec:	mov	x1, x20
   225f0:	mov	x2, x19
   225f4:	bl	222d8 <PyInit__decimal@@Base+0x1b824>
   225f8:	ldr	w9, [x19]
   225fc:	tbnz	w9, #8, 22630 <PyInit__decimal@@Base+0x1bb7c>
   22600:	ldrb	w10, [x20]
   22604:	mov	x8, x0
   22608:	tbnz	x0, #63, 22618 <PyInit__decimal@@Base+0x1bb64>
   2260c:	tst	w10, #0x1
   22610:	cneg	x0, x8, ne  // ne = any
   22614:	b	22634 <PyInit__decimal@@Base+0x1bb80>
   22618:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2261c:	cmp	x8, x0
   22620:	b.ne	22628 <PyInit__decimal@@Base+0x1bb74>  // b.any
   22624:	tbnz	w10, #0, 22634 <PyInit__decimal@@Base+0x1bb80>
   22628:	orr	w8, w9, #0x100
   2262c:	str	w8, [x19]
   22630:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   22634:	ldp	x20, x19, [sp, #16]
   22638:	ldp	x29, x30, [sp], #32
   2263c:	ret
   22640:	mov	x8, x0
   22644:	mov	w0, #0x1                   	// #1
   22648:	mov	x2, x1
   2264c:	mov	x1, x8
   22650:	b	222d8 <PyInit__decimal@@Base+0x1b824>
   22654:	stp	x29, x30, [sp, #-32]!
   22658:	stp	x20, x19, [sp, #16]
   2265c:	mov	x29, sp
   22660:	mov	x19, x1
   22664:	mov	x20, x0
   22668:	mov	w0, wzr
   2266c:	mov	x1, x20
   22670:	mov	x2, x19
   22674:	bl	222d8 <PyInit__decimal@@Base+0x1b824>
   22678:	ldr	w9, [x19]
   2267c:	tbnz	w9, #8, 226b0 <PyInit__decimal@@Base+0x1bbfc>
   22680:	ldrb	w10, [x20]
   22684:	mov	x8, x0
   22688:	tbnz	x0, #63, 22698 <PyInit__decimal@@Base+0x1bbe4>
   2268c:	tst	w10, #0x1
   22690:	cneg	x0, x8, ne  // ne = any
   22694:	b	226b4 <PyInit__decimal@@Base+0x1bc00>
   22698:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2269c:	cmp	x8, x0
   226a0:	b.ne	226a8 <PyInit__decimal@@Base+0x1bbf4>  // b.any
   226a4:	tbnz	w10, #0, 226b4 <PyInit__decimal@@Base+0x1bc00>
   226a8:	orr	w8, w9, #0x100
   226ac:	str	w8, [x19]
   226b0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   226b4:	ldp	x20, x19, [sp, #16]
   226b8:	ldp	x29, x30, [sp], #32
   226bc:	ret
   226c0:	stp	x29, x30, [sp, #-32]!
   226c4:	str	x19, [sp, #16]
   226c8:	mov	x29, sp
   226cc:	mov	x19, x1
   226d0:	mov	x1, x0
   226d4:	mov	w0, #0x1                   	// #1
   226d8:	mov	x2, x19
   226dc:	bl	222d8 <PyInit__decimal@@Base+0x1b824>
   226e0:	ldr	w8, [x19]
   226e4:	tbnz	w8, #8, 226f8 <PyInit__decimal@@Base+0x1bc44>
   226e8:	lsr	x9, x0, #32
   226ec:	cbz	x9, 226fc <PyInit__decimal@@Base+0x1bc48>
   226f0:	orr	w8, w8, #0x100
   226f4:	str	w8, [x19]
   226f8:	mov	w0, #0xffffffff            	// #-1
   226fc:	ldr	x19, [sp, #16]
   22700:	ldp	x29, x30, [sp], #32
   22704:	ret
   22708:	stp	x29, x30, [sp, #-32]!
   2270c:	stp	x20, x19, [sp, #16]
   22710:	mov	x29, sp
   22714:	mov	x19, x1
   22718:	mov	x20, x0
   2271c:	mov	w0, wzr
   22720:	mov	x1, x20
   22724:	mov	x2, x19
   22728:	bl	222d8 <PyInit__decimal@@Base+0x1b824>
   2272c:	ldr	w9, [x19]
   22730:	tbnz	w9, #8, 22770 <PyInit__decimal@@Base+0x1bcbc>
   22734:	ldrb	w10, [x20]
   22738:	mov	x8, x0
   2273c:	tbnz	x0, #63, 22750 <PyInit__decimal@@Base+0x1bc9c>
   22740:	tst	w10, #0x1
   22744:	cneg	x0, x8, ne  // ne = any
   22748:	tbz	w9, #8, 22778 <PyInit__decimal@@Base+0x1bcc4>
   2274c:	b	22788 <PyInit__decimal@@Base+0x1bcd4>
   22750:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   22754:	cmp	x8, x0
   22758:	b.ne	22768 <PyInit__decimal@@Base+0x1bcb4>  // b.any
   2275c:	tbz	w10, #0, 22768 <PyInit__decimal@@Base+0x1bcb4>
   22760:	tbz	w9, #8, 22778 <PyInit__decimal@@Base+0x1bcc4>
   22764:	b	22788 <PyInit__decimal@@Base+0x1bcd4>
   22768:	orr	w9, w9, #0x100
   2276c:	str	w9, [x19]
   22770:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   22774:	tbnz	w9, #8, 22788 <PyInit__decimal@@Base+0x1bcd4>
   22778:	cmp	x0, w0, sxtw
   2277c:	b.eq	2278c <PyInit__decimal@@Base+0x1bcd8>  // b.none
   22780:	orr	w8, w9, #0x100
   22784:	str	w8, [x19]
   22788:	mov	w0, #0x7fffffff            	// #2147483647
   2278c:	ldp	x20, x19, [sp, #16]
   22790:	ldp	x29, x30, [sp], #32
   22794:	ret
   22798:	stp	x29, x30, [sp, #-48]!
   2279c:	str	x21, [sp, #16]
   227a0:	stp	x20, x19, [sp, #32]
   227a4:	mov	x29, sp
   227a8:	ldrb	w8, [x1]
   227ac:	tst	w8, #0xc
   227b0:	b.eq	22814 <PyInit__decimal@@Base+0x1bd60>  // b.none
   227b4:	ldr	w9, [x3]
   227b8:	and	w10, w8, #0x8
   227bc:	mov	x19, x2
   227c0:	mov	x21, x1
   227c4:	mov	x20, x0
   227c8:	orr	w9, w9, w10, lsl #5
   227cc:	cmp	x0, x1
   227d0:	str	w9, [x3]
   227d4:	b.eq	22868 <PyInit__decimal@@Base+0x1bdb4>  // b.none
   227d8:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   227dc:	ldr	x9, [x21, #24]
   227e0:	ldr	x11, [x10, #1344]
   227e4:	ldr	x10, [x20, #32]
   227e8:	cmp	x11, x9
   227ec:	csel	x1, x9, x11, lt  // lt = tstop
   227f0:	cmp	x1, x10
   227f4:	b.eq	2283c <PyInit__decimal@@Base+0x1bd88>  // b.none
   227f8:	ldrb	w11, [x20]
   227fc:	tbnz	w11, #5, 2281c <PyInit__decimal@@Base+0x1bd68>
   22800:	mov	x0, x20
   22804:	mov	x2, x3
   22808:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2280c:	cbnz	w0, 22834 <PyInit__decimal@@Base+0x1bd80>
   22810:	b	22868 <PyInit__decimal@@Base+0x1bdb4>
   22814:	mov	w0, wzr
   22818:	b	22888 <PyInit__decimal@@Base+0x1bdd4>
   2281c:	cmp	x1, x10
   22820:	b.le	2283c <PyInit__decimal@@Base+0x1bd88>
   22824:	mov	x0, x20
   22828:	mov	x2, x3
   2282c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   22830:	cbz	w0, 22868 <PyInit__decimal@@Base+0x1bdb4>
   22834:	ldr	x9, [x21, #24]
   22838:	ldrb	w8, [x21]
   2283c:	ldrb	w10, [x20]
   22840:	ldr	x0, [x20, #40]
   22844:	bfxil	w10, w8, #0, #4
   22848:	strb	w10, [x20]
   2284c:	ldur	q0, [x21, #8]
   22850:	str	x9, [x20, #24]
   22854:	stur	q0, [x20, #8]
   22858:	ldr	x8, [x21, #24]
   2285c:	ldr	x1, [x21, #40]
   22860:	lsl	x2, x8, #3
   22864:	bl	63c0 <memcpy@plt>
   22868:	ldrb	w8, [x20]
   2286c:	mov	x0, x20
   22870:	mov	x1, x19
   22874:	and	w8, w8, #0xfffffff1
   22878:	orr	w8, w8, #0x4
   2287c:	strb	w8, [x20]
   22880:	bl	22944 <PyInit__decimal@@Base+0x1be90>
   22884:	mov	w0, #0x1                   	// #1
   22888:	ldp	x20, x19, [sp, #32]
   2288c:	ldr	x21, [sp, #16]
   22890:	ldp	x29, x30, [sp], #48
   22894:	ret
   22898:	stp	x29, x30, [sp, #-32]!
   2289c:	stp	x20, x19, [sp, #16]
   228a0:	mov	x29, sp
   228a4:	cmp	x0, x1
   228a8:	b.eq	22934 <PyInit__decimal@@Base+0x1be80>  // b.none
   228ac:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   228b0:	ldr	x8, [x1, #24]
   228b4:	ldr	x10, [x9, #1344]
   228b8:	ldr	x9, [x0, #32]
   228bc:	mov	x19, x1
   228c0:	mov	x20, x0
   228c4:	cmp	x10, x8
   228c8:	csel	x1, x8, x10, lt  // lt = tstop
   228cc:	cmp	x1, x9
   228d0:	b.eq	22904 <PyInit__decimal@@Base+0x1be50>  // b.none
   228d4:	ldrb	w10, [x20]
   228d8:	tbnz	w10, #5, 228ec <PyInit__decimal@@Base+0x1be38>
   228dc:	mov	x0, x20
   228e0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   228e4:	cbnz	w0, 22900 <PyInit__decimal@@Base+0x1be4c>
   228e8:	b	22938 <PyInit__decimal@@Base+0x1be84>
   228ec:	cmp	x1, x9
   228f0:	b.le	22904 <PyInit__decimal@@Base+0x1be50>
   228f4:	mov	x0, x20
   228f8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   228fc:	cbz	w0, 22938 <PyInit__decimal@@Base+0x1be84>
   22900:	ldr	x8, [x19, #24]
   22904:	ldrb	w9, [x19]
   22908:	ldrb	w10, [x20]
   2290c:	ldr	x0, [x20, #40]
   22910:	bfxil	w10, w9, #0, #4
   22914:	strb	w10, [x20]
   22918:	ldur	q0, [x19, #8]
   2291c:	str	x8, [x20, #24]
   22920:	stur	q0, [x20, #8]
   22924:	ldr	x8, [x19, #24]
   22928:	ldr	x1, [x19, #40]
   2292c:	lsl	x2, x8, #3
   22930:	bl	63c0 <memcpy@plt>
   22934:	mov	w0, #0x1                   	// #1
   22938:	ldp	x20, x19, [sp, #16]
   2293c:	ldp	x29, x30, [sp], #32
   22940:	ret
   22944:	sub	sp, sp, #0x50
   22948:	stp	x29, x30, [sp, #16]
   2294c:	stp	x24, x23, [sp, #32]
   22950:	stp	x22, x21, [sp, #48]
   22954:	stp	x20, x19, [sp, #64]
   22958:	add	x29, sp, #0x10
   2295c:	ldr	x8, [x0, #24]
   22960:	cmp	x8, #0x1
   22964:	b.lt	22bd8 <PyInit__decimal@@Base+0x1c124>  // b.tstop
   22968:	ldr	x8, [x1]
   2296c:	ldrsw	x9, [x1, #40]
   22970:	mov	x20, x0
   22974:	ldr	x10, [x20, #16]!
   22978:	mov	x19, x0
   2297c:	sub	x8, x8, x9
   22980:	cmp	x10, x8
   22984:	b.le	22bd8 <PyInit__decimal@@Base+0x1c124>
   22988:	cbz	x8, 229e4 <PyInit__decimal@@Base+0x1bf30>
   2298c:	mov	x9, #0x9436                	// #37942
   22990:	movk	x9, #0x50d7, lsl #16
   22994:	movk	x9, #0x435e, lsl #32
   22998:	movk	x9, #0xd79, lsl #48
   2299c:	smulh	x9, x8, x9
   229a0:	mov	x10, #0xffffffffffffffed    	// #-19
   229a4:	add	x9, x9, x9, lsr #63
   229a8:	madd	x11, x9, x10, x8
   229ac:	cmp	x11, #0x0
   229b0:	adrp	x23, 3f000 <PyInit__decimal@@Base+0x3854c>
   229b4:	cset	w10, ne  // ne = any
   229b8:	cinc	x12, x9, ne  // ne = any
   229bc:	add	x23, x23, #0x370
   229c0:	cbz	x11, 22a2c <PyInit__decimal@@Base+0x1bf78>
   229c4:	ldr	x8, [x19, #40]
   229c8:	ldr	x11, [x23, x11, lsl #3]
   229cc:	add	x12, x8, x12, lsl #3
   229d0:	ldur	x13, [x12, #-8]
   229d4:	udiv	x14, x13, x11
   229d8:	msub	x11, x14, x11, x13
   229dc:	stur	x11, [x12, #-8]
   229e0:	b	22a30 <PyInit__decimal@@Base+0x1bf7c>
   229e4:	ldrb	w8, [x19]
   229e8:	tbnz	w8, #5, 22bd4 <PyInit__decimal@@Base+0x1c120>
   229ec:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   229f0:	ldr	x8, [x19, #32]
   229f4:	ldr	x1, [x21, #1344]
   229f8:	cmp	x8, x1
   229fc:	b.le	22bd4 <PyInit__decimal@@Base+0x1c120>
   22a00:	sturb	wzr, [x29, #-4]
   22a04:	ldr	x0, [x19, #40]
   22a08:	sub	x3, x29, #0x4
   22a0c:	mov	w2, #0x8                   	// #8
   22a10:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   22a14:	str	x0, [x19, #40]
   22a18:	ldurb	w8, [x29, #-4]
   22a1c:	cbnz	w8, 22bd4 <PyInit__decimal@@Base+0x1c120>
   22a20:	ldr	x8, [x21, #1344]
   22a24:	str	x8, [x19, #32]
   22a28:	b	22bd4 <PyInit__decimal@@Base+0x1c120>
   22a2c:	ldr	x8, [x19, #40]
   22a30:	add	x10, x9, x10
   22a34:	mov	w11, #0x13                  	// #19
   22a38:	sub	x9, x10, #0x1
   22a3c:	mul	x10, x10, x11
   22a40:	sub	x10, x10, #0x13
   22a44:	add	x24, x9, #0x1
   22a48:	mov	x21, x9
   22a4c:	cmp	x24, #0x2
   22a50:	mov	x22, x10
   22a54:	b.lt	22a68 <PyInit__decimal@@Base+0x1bfb4>  // b.tstop
   22a58:	ldr	x11, [x8, x21, lsl #3]
   22a5c:	sub	x9, x21, #0x1
   22a60:	sub	x10, x22, #0x13
   22a64:	cbz	x11, 22a44 <PyInit__decimal@@Base+0x1bf90>
   22a68:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   22a6c:	ldr	x9, [x8, #1344]
   22a70:	ldr	x8, [x19, #32]
   22a74:	cmp	x9, x24
   22a78:	csinc	x1, x9, x21, ge  // ge = tcont
   22a7c:	cmp	x1, x8
   22a80:	b.eq	22ab0 <PyInit__decimal@@Base+0x1bffc>  // b.none
   22a84:	ldrb	w9, [x19]
   22a88:	tbnz	w9, #5, 22a9c <PyInit__decimal@@Base+0x1bfe8>
   22a8c:	add	x2, sp, #0x8
   22a90:	mov	x0, x19
   22a94:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   22a98:	b	22ab0 <PyInit__decimal@@Base+0x1bffc>
   22a9c:	cmp	x1, x8
   22aa0:	b.le	22ab0 <PyInit__decimal@@Base+0x1bffc>
   22aa4:	add	x2, sp, #0x8
   22aa8:	mov	x0, x19
   22aac:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   22ab0:	ldr	x8, [x19, #40]
   22ab4:	str	x24, [x19, #24]
   22ab8:	ldr	x10, [x23, #72]
   22abc:	ldr	x9, [x8, x21, lsl #3]
   22ac0:	cmp	x10, x9
   22ac4:	b.ls	22af0 <PyInit__decimal@@Base+0x1c03c>  // b.plast
   22ac8:	ldr	x10, [x23, #32]
   22acc:	cmp	x10, x9
   22ad0:	b.ls	22b18 <PyInit__decimal@@Base+0x1c064>  // b.plast
   22ad4:	ldr	x10, [x23, #16]
   22ad8:	cmp	x10, x9
   22adc:	b.ls	22b5c <PyInit__decimal@@Base+0x1c0a8>  // b.plast
   22ae0:	ldr	x10, [x23, #8]
   22ae4:	cmp	x10, x9
   22ae8:	mov	w9, #0x1                   	// #1
   22aec:	b	22bc0 <PyInit__decimal@@Base+0x1c10c>
   22af0:	ldr	x10, [x23, #112]
   22af4:	cmp	x10, x9
   22af8:	b.ls	22b34 <PyInit__decimal@@Base+0x1c080>  // b.plast
   22afc:	ldr	x10, [x23, #88]
   22b00:	cmp	x10, x9
   22b04:	b.ls	22b6c <PyInit__decimal@@Base+0x1c0b8>  // b.plast
   22b08:	ldr	x10, [x23, #80]
   22b0c:	cmp	x10, x9
   22b10:	mov	w9, #0xa                   	// #10
   22b14:	b	22bc0 <PyInit__decimal@@Base+0x1c10c>
   22b18:	ldr	x10, [x23, #48]
   22b1c:	cmp	x10, x9
   22b20:	b.ls	22b88 <PyInit__decimal@@Base+0x1c0d4>  // b.plast
   22b24:	ldr	x10, [x23, #40]
   22b28:	cmp	x10, x9
   22b2c:	mov	w9, #0x5                   	// #5
   22b30:	b	22bc0 <PyInit__decimal@@Base+0x1c10c>
   22b34:	ldr	x10, [x23, #144]
   22b38:	cmp	x10, x9
   22b3c:	b.ls	22ba4 <PyInit__decimal@@Base+0x1c0f0>  // b.plast
   22b40:	ldr	x10, [x23, #128]
   22b44:	cmp	x10, x9
   22b48:	b.ls	22bb4 <PyInit__decimal@@Base+0x1c100>  // b.plast
   22b4c:	ldr	x10, [x23, #120]
   22b50:	cmp	x10, x9
   22b54:	mov	w9, #0xf                   	// #15
   22b58:	b	22bc0 <PyInit__decimal@@Base+0x1c10c>
   22b5c:	ldr	x10, [x23, #24]
   22b60:	cmp	x10, x9
   22b64:	mov	w9, #0x3                   	// #3
   22b68:	b	22bc0 <PyInit__decimal@@Base+0x1c10c>
   22b6c:	ldr	x10, [x23, #104]
   22b70:	cmp	x10, x9
   22b74:	b.ls	22bf0 <PyInit__decimal@@Base+0x1c13c>  // b.plast
   22b78:	ldr	x10, [x23, #96]
   22b7c:	cmp	x10, x9
   22b80:	mov	w9, #0xc                   	// #12
   22b84:	b	22bc0 <PyInit__decimal@@Base+0x1c10c>
   22b88:	ldr	x10, [x23, #64]
   22b8c:	cmp	x10, x9
   22b90:	b.ls	22bf8 <PyInit__decimal@@Base+0x1c144>  // b.plast
   22b94:	ldr	x10, [x23, #56]
   22b98:	cmp	x10, x9
   22b9c:	mov	w9, #0x7                   	// #7
   22ba0:	b	22bc0 <PyInit__decimal@@Base+0x1c10c>
   22ba4:	ldr	x10, [x23, #152]
   22ba8:	cmp	x10, x9
   22bac:	mov	w9, #0x13                  	// #19
   22bb0:	b	22bc0 <PyInit__decimal@@Base+0x1c10c>
   22bb4:	ldr	x10, [x23, #136]
   22bb8:	cmp	x10, x9
   22bbc:	mov	w9, #0x11                  	// #17
   22bc0:	cinc	x9, x9, ls  // ls = plast
   22bc4:	add	x9, x9, x22
   22bc8:	str	x9, [x20]
   22bcc:	ldr	x8, [x8, x21, lsl #3]
   22bd0:	cbnz	x8, 22bd8 <PyInit__decimal@@Base+0x1c124>
   22bd4:	stp	xzr, xzr, [x20]
   22bd8:	ldp	x20, x19, [sp, #64]
   22bdc:	ldp	x22, x21, [sp, #48]
   22be0:	ldp	x24, x23, [sp, #32]
   22be4:	ldp	x29, x30, [sp, #16]
   22be8:	add	sp, sp, #0x50
   22bec:	ret
   22bf0:	mov	w9, #0xe                   	// #14
   22bf4:	b	22bc4 <PyInit__decimal@@Base+0x1c110>
   22bf8:	mov	w9, #0x9                   	// #9
   22bfc:	b	22bc4 <PyInit__decimal@@Base+0x1c110>
   22c00:	stp	x29, x30, [sp, #-48]!
   22c04:	str	x21, [sp, #16]
   22c08:	stp	x20, x19, [sp, #32]
   22c0c:	mov	x29, sp
   22c10:	ldrb	w8, [x1]
   22c14:	ldrb	w9, [x2]
   22c18:	orr	w10, w9, w8
   22c1c:	tst	w10, #0xc
   22c20:	b.eq	22c4c <PyInit__decimal@@Base+0x1c198>  // b.none
   22c24:	mov	x19, x3
   22c28:	mov	x21, x1
   22c2c:	mov	x20, x0
   22c30:	tbnz	w8, #3, 22c54 <PyInit__decimal@@Base+0x1c1a0>
   22c34:	tbnz	w9, #3, 22c5c <PyInit__decimal@@Base+0x1c1a8>
   22c38:	tst	w8, #0x4
   22c3c:	csel	x21, x2, x21, eq  // eq = none
   22c40:	cmp	x21, x20
   22c44:	b.ne	22c74 <PyInit__decimal@@Base+0x1c1c0>  // b.any
   22c48:	b	22cfc <PyInit__decimal@@Base+0x1c248>
   22c4c:	mov	w0, wzr
   22c50:	b	22d1c <PyInit__decimal@@Base+0x1c268>
   22c54:	ldr	w8, [x4]
   22c58:	b	22c64 <PyInit__decimal@@Base+0x1c1b0>
   22c5c:	ldr	w8, [x4]
   22c60:	mov	x21, x2
   22c64:	orr	w8, w8, #0x100
   22c68:	str	w8, [x4]
   22c6c:	cmp	x21, x20
   22c70:	b.eq	22cfc <PyInit__decimal@@Base+0x1c248>  // b.none
   22c74:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   22c78:	ldr	x8, [x21, #24]
   22c7c:	ldr	x10, [x9, #1344]
   22c80:	ldr	x9, [x20, #32]
   22c84:	cmp	x10, x8
   22c88:	csel	x1, x8, x10, lt  // lt = tstop
   22c8c:	cmp	x1, x9
   22c90:	b.eq	22ccc <PyInit__decimal@@Base+0x1c218>  // b.none
   22c94:	ldrb	w10, [x20]
   22c98:	tbnz	w10, #5, 22cb0 <PyInit__decimal@@Base+0x1c1fc>
   22c9c:	mov	x0, x20
   22ca0:	mov	x2, x4
   22ca4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   22ca8:	cbnz	w0, 22cc8 <PyInit__decimal@@Base+0x1c214>
   22cac:	b	22cfc <PyInit__decimal@@Base+0x1c248>
   22cb0:	cmp	x1, x9
   22cb4:	b.le	22ccc <PyInit__decimal@@Base+0x1c218>
   22cb8:	mov	x0, x20
   22cbc:	mov	x2, x4
   22cc0:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   22cc4:	cbz	w0, 22cfc <PyInit__decimal@@Base+0x1c248>
   22cc8:	ldr	x8, [x21, #24]
   22ccc:	ldrb	w9, [x21]
   22cd0:	ldrb	w10, [x20]
   22cd4:	ldr	x0, [x20, #40]
   22cd8:	bfxil	w10, w9, #0, #4
   22cdc:	strb	w10, [x20]
   22ce0:	ldur	q0, [x21, #8]
   22ce4:	str	x8, [x20, #24]
   22ce8:	stur	q0, [x20, #8]
   22cec:	ldr	x8, [x21, #24]
   22cf0:	ldr	x1, [x21, #40]
   22cf4:	lsl	x2, x8, #3
   22cf8:	bl	63c0 <memcpy@plt>
   22cfc:	ldrb	w8, [x20]
   22d00:	mov	x0, x20
   22d04:	mov	x1, x19
   22d08:	and	w8, w8, #0xfffffff1
   22d0c:	orr	w8, w8, #0x4
   22d10:	strb	w8, [x20]
   22d14:	bl	22944 <PyInit__decimal@@Base+0x1be90>
   22d18:	mov	w0, #0x1                   	// #1
   22d1c:	ldp	x20, x19, [sp, #32]
   22d20:	ldr	x21, [sp, #16]
   22d24:	ldp	x29, x30, [sp], #48
   22d28:	ret
   22d2c:	sub	sp, sp, #0x50
   22d30:	stp	x29, x30, [sp, #16]
   22d34:	str	x23, [sp, #32]
   22d38:	stp	x22, x21, [sp, #48]
   22d3c:	stp	x20, x19, [sp, #64]
   22d40:	add	x29, sp, #0x10
   22d44:	mov	x22, x0
   22d48:	ldr	x8, [x22, #8]!
   22d4c:	ldr	x9, [x1, #8]
   22d50:	mov	x20, x0
   22d54:	mov	x21, x1
   22d58:	ldr	x10, [x22, #8]
   22d5c:	mov	x19, x2
   22d60:	add	x10, x8, x10
   22d64:	sub	x23, x10, #0x1
   22d68:	cmp	x23, x9
   22d6c:	b.le	22e0c <PyInit__decimal@@Base+0x1c358>
   22d70:	ldr	x0, [x20, #40]
   22d74:	ldr	x8, [x20, #24]
   22d78:	add	x8, x0, x8, lsl #3
   22d7c:	ldur	x8, [x8, #-8]
   22d80:	cbz	x8, 22f08 <PyInit__decimal@@Base+0x1c454>
   22d84:	ldr	w8, [x21, #36]
   22d88:	cmp	w8, #0x8
   22d8c:	b.hi	233a4 <PyInit__decimal@@Base+0x1c8f0>  // b.pmore
   22d90:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   22d94:	add	x9, x9, #0x710
   22d98:	adr	x10, 22da8 <PyInit__decimal@@Base+0x1c2f4>
   22d9c:	ldrb	w11, [x9, x8]
   22da0:	add	x10, x10, x11, lsl #2
   22da4:	br	x10
   22da8:	ldrb	w8, [x20]
   22dac:	and	w21, w8, #0x1
   22db0:	tbnz	w8, #5, 22df0 <PyInit__decimal@@Base+0x1c33c>
   22db4:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   22db8:	ldr	x9, [x20, #32]
   22dbc:	ldr	x1, [x23, #1344]
   22dc0:	cmp	x9, x1
   22dc4:	b.le	22df0 <PyInit__decimal@@Base+0x1c33c>
   22dc8:	add	x3, sp, #0x8
   22dcc:	mov	w2, #0x8                   	// #8
   22dd0:	strb	wzr, [sp, #8]
   22dd4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   22dd8:	str	x0, [x20, #40]
   22ddc:	ldrb	w8, [sp, #8]
   22de0:	cbnz	w8, 22dec <PyInit__decimal@@Base+0x1c338>
   22de4:	ldr	x8, [x23, #1344]
   22de8:	str	x8, [x20, #32]
   22dec:	ldrb	w8, [x20]
   22df0:	and	w8, w8, #0xf0
   22df4:	orr	w8, w21, w8
   22df8:	orr	w8, w8, #0x2
   22dfc:	strb	w8, [x20]
   22e00:	stp	xzr, xzr, [x22]
   22e04:	str	xzr, [x22, #16]
   22e08:	b	23040 <PyInit__decimal@@Base+0x1c58c>
   22e0c:	ldr	w10, [x21, #40]
   22e10:	cbz	w10, 22e80 <PyInit__decimal@@Base+0x1c3cc>
   22e14:	ldr	x10, [x21]
   22e18:	sub	x9, x9, x10
   22e1c:	add	x9, x9, #0x1
   22e20:	subs	x22, x8, x9
   22e24:	b.le	22e80 <PyInit__decimal@@Base+0x1c3cc>
   22e28:	mov	x0, x20
   22e2c:	mov	x1, x20
   22e30:	mov	x2, x22
   22e34:	mov	x3, x19
   22e38:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   22e3c:	cbz	w0, 23050 <PyInit__decimal@@Base+0x1c59c>
   22e40:	ldr	x8, [x20, #8]
   22e44:	sub	x8, x8, x22
   22e48:	str	x8, [x20, #8]
   22e4c:	ldr	w8, [x19]
   22e50:	orr	w9, w8, #0x1
   22e54:	str	w9, [x19]
   22e58:	ldr	x9, [x20, #40]
   22e5c:	ldr	x10, [x20, #24]
   22e60:	add	x9, x9, x10, lsl #3
   22e64:	ldur	x9, [x9, #-8]
   22e68:	cbz	x9, 23050 <PyInit__decimal@@Base+0x1c59c>
   22e6c:	ldr	x9, [x21, #16]
   22e70:	cmp	x23, x9
   22e74:	b.ge	23050 <PyInit__decimal@@Base+0x1c59c>  // b.tcont
   22e78:	mov	w9, #0x2001                	// #8193
   22e7c:	b	23048 <PyInit__decimal@@Base+0x1c594>
   22e80:	ldr	x9, [x21, #16]
   22e84:	cmp	x23, x9
   22e88:	b.ge	23050 <PyInit__decimal@@Base+0x1c59c>  // b.tcont
   22e8c:	ldr	x0, [x20, #40]
   22e90:	ldr	x10, [x20, #24]
   22e94:	ldr	x11, [x21]
   22e98:	add	x10, x0, x10, lsl #3
   22e9c:	ldur	x10, [x10, #-8]
   22ea0:	sub	x9, x9, x11
   22ea4:	add	x22, x9, #0x1
   22ea8:	cbz	x10, 22f68 <PyInit__decimal@@Base+0x1c4b4>
   22eac:	ldr	w9, [x19]
   22eb0:	subs	x1, x22, x8
   22eb4:	orr	w9, w9, #0x2000
   22eb8:	str	w9, [x19]
   22ebc:	b.le	23050 <PyInit__decimal@@Base+0x1c59c>
   22ec0:	mov	x0, x20
   22ec4:	bl	23ebc <PyInit__decimal@@Base+0x1d408>
   22ec8:	str	x22, [x20, #8]
   22ecc:	ldr	w9, [x21, #36]
   22ed0:	mov	x21, x0
   22ed4:	cmp	w9, #0x7
   22ed8:	b.hi	23308 <PyInit__decimal@@Base+0x1c854>  // b.pmore
   22edc:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   22ee0:	add	x10, x10, #0x700
   22ee4:	adr	x11, 22efc <PyInit__decimal@@Base+0x1c448>
   22ee8:	ldrh	w12, [x10, x9, lsl #1]
   22eec:	add	x11, x11, x12, lsl #2
   22ef0:	lsl	x8, x21, #32
   22ef4:	sxtw	x9, w21
   22ef8:	br	x11
   22efc:	cmp	x8, #0x0
   22f00:	cset	w8, ne  // ne = any
   22f04:	b	23154 <PyInit__decimal@@Base+0x1c6a0>
   22f08:	str	x9, [x22]
   22f0c:	ldr	w8, [x21, #40]
   22f10:	cbz	w8, 22f24 <PyInit__decimal@@Base+0x1c470>
   22f14:	ldr	x8, [x21]
   22f18:	sub	x8, x9, x8
   22f1c:	add	x8, x8, #0x1
   22f20:	str	x8, [x22]
   22f24:	ldrb	w8, [x20]
   22f28:	tbnz	w8, #5, 22fac <PyInit__decimal@@Base+0x1c4f8>
   22f2c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   22f30:	ldr	x8, [x20, #32]
   22f34:	ldr	x1, [x21, #1344]
   22f38:	cmp	x8, x1
   22f3c:	b.le	22fac <PyInit__decimal@@Base+0x1c4f8>
   22f40:	add	x3, sp, #0x4
   22f44:	mov	w2, #0x8                   	// #8
   22f48:	strb	wzr, [sp, #4]
   22f4c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   22f50:	str	x0, [x20, #40]
   22f54:	ldrb	w8, [sp, #4]
   22f58:	cbnz	w8, 22fac <PyInit__decimal@@Base+0x1c4f8>
   22f5c:	ldr	x8, [x21, #1344]
   22f60:	str	x8, [x20, #32]
   22f64:	b	22fac <PyInit__decimal@@Base+0x1c4f8>
   22f68:	cmp	x22, x8
   22f6c:	b.le	23050 <PyInit__decimal@@Base+0x1c59c>
   22f70:	ldrb	w8, [x20]
   22f74:	str	x22, [x20, #8]
   22f78:	tbnz	w8, #5, 22fac <PyInit__decimal@@Base+0x1c4f8>
   22f7c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   22f80:	ldr	x8, [x20, #32]
   22f84:	ldr	x1, [x21, #1344]
   22f88:	cmp	x8, x1
   22f8c:	b.le	22fac <PyInit__decimal@@Base+0x1c4f8>
   22f90:	add	x3, x29, #0x1c
   22f94:	mov	w2, #0x8                   	// #8
   22f98:	strb	wzr, [x29, #28]
   22f9c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   22fa0:	str	x0, [x20, #40]
   22fa4:	ldrb	w8, [x29, #28]
   22fa8:	cbz	w8, 22f5c <PyInit__decimal@@Base+0x1c4a8>
   22fac:	mov	w8, #0x1                   	// #1
   22fb0:	dup	v0.2d, x8
   22fb4:	str	q0, [x20, #16]
   22fb8:	str	xzr, [x0]
   22fbc:	ldr	w8, [x19]
   22fc0:	orr	w8, w8, #0x1
   22fc4:	b	2304c <PyInit__decimal@@Base+0x1c598>
   22fc8:	ldrb	w8, [x20]
   22fcc:	tbnz	w8, #0, 23020 <PyInit__decimal@@Base+0x1c56c>
   22fd0:	tbnz	w8, #5, 23010 <PyInit__decimal@@Base+0x1c55c>
   22fd4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   22fd8:	ldr	x9, [x20, #32]
   22fdc:	ldr	x1, [x21, #1344]
   22fe0:	cmp	x9, x1
   22fe4:	b.le	23010 <PyInit__decimal@@Base+0x1c55c>
   22fe8:	sub	x3, x29, #0x4
   22fec:	mov	w2, #0x8                   	// #8
   22ff0:	sturb	wzr, [x29, #-4]
   22ff4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   22ff8:	str	x0, [x20, #40]
   22ffc:	ldurb	w8, [x29, #-4]
   23000:	cbnz	w8, 2300c <PyInit__decimal@@Base+0x1c558>
   23004:	ldr	x8, [x21, #1344]
   23008:	str	x8, [x20, #32]
   2300c:	ldrb	w8, [x20]
   23010:	and	w8, w8, #0xf0
   23014:	b	22df8 <PyInit__decimal@@Base+0x1c344>
   23018:	ldrb	w8, [x20]
   2301c:	tbnz	w8, #0, 23068 <PyInit__decimal@@Base+0x1c5b4>
   23020:	mov	x0, x20
   23024:	mov	x1, x21
   23028:	mov	x2, x19
   2302c:	bl	21358 <PyInit__decimal@@Base+0x1a8a4>
   23030:	ldp	x9, x8, [x21]
   23034:	sub	x8, x8, x9
   23038:	add	x8, x8, #0x1
   2303c:	str	x8, [x20, #8]
   23040:	ldr	w8, [x19]
   23044:	mov	w9, #0x1840                	// #6208
   23048:	orr	w8, w8, w9
   2304c:	str	w8, [x19]
   23050:	ldp	x20, x19, [sp, #64]
   23054:	ldp	x22, x21, [sp, #48]
   23058:	ldr	x23, [sp, #32]
   2305c:	ldp	x29, x30, [sp, #16]
   23060:	add	sp, sp, #0x50
   23064:	ret
   23068:	tbnz	w8, #5, 230a8 <PyInit__decimal@@Base+0x1c5f4>
   2306c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   23070:	ldr	x9, [x20, #32]
   23074:	ldr	x1, [x21, #1344]
   23078:	cmp	x9, x1
   2307c:	b.le	230a8 <PyInit__decimal@@Base+0x1c5f4>
   23080:	add	x3, x29, #0x18
   23084:	mov	w2, #0x8                   	// #8
   23088:	strb	wzr, [x29, #24]
   2308c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   23090:	str	x0, [x20, #40]
   23094:	ldrb	w8, [x29, #24]
   23098:	cbnz	w8, 230a4 <PyInit__decimal@@Base+0x1c5f0>
   2309c:	ldr	x8, [x21, #1344]
   230a0:	str	x8, [x20, #32]
   230a4:	ldrb	w8, [x20]
   230a8:	and	w8, w8, #0xf0
   230ac:	orr	w8, w8, #0x3
   230b0:	b	22dfc <PyInit__decimal@@Base+0x1c348>
   230b4:	cbz	x8, 23308 <PyInit__decimal@@Base+0x1c854>
   230b8:	ldrb	w8, [x20]
   230bc:	mvn	w8, w8
   230c0:	and	w8, w8, #0x1
   230c4:	b	23154 <PyInit__decimal@@Base+0x1c6a0>
   230c8:	cmp	x9, #0x5
   230cc:	b.hi	23158 <PyInit__decimal@@Base+0x1c6a4>  // b.pmore
   230d0:	mov	x9, #0x500000000           	// #21474836480
   230d4:	cmp	x8, x9
   230d8:	b.ne	23308 <PyInit__decimal@@Base+0x1c854>  // b.any
   230dc:	ldr	x8, [x20, #40]
   230e0:	ldr	w8, [x8]
   230e4:	and	w8, w8, #0x1
   230e8:	b	23154 <PyInit__decimal@@Base+0x1c6a0>
   230ec:	cbz	x8, 23308 <PyInit__decimal@@Base+0x1c854>
   230f0:	ldrb	w8, [x20]
   230f4:	and	w8, w8, #0x1
   230f8:	b	23154 <PyInit__decimal@@Base+0x1c6a0>
   230fc:	cmp	x9, #0x4
   23100:	cset	w8, hi  // hi = pmore
   23104:	b	23154 <PyInit__decimal@@Base+0x1c6a0>
   23108:	cmp	x9, #0x5
   2310c:	cset	w8, hi  // hi = pmore
   23110:	b	23154 <PyInit__decimal@@Base+0x1c6a0>
   23114:	ldr	x9, [x20, #40]
   23118:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   2311c:	movk	x10, #0xcccd
   23120:	mov	w11, #0xa                   	// #10
   23124:	ldr	x9, [x9]
   23128:	cmp	x8, #0x0
   2312c:	cset	w8, ne  // ne = any
   23130:	umulh	x10, x9, x10
   23134:	lsr	x10, x10, #3
   23138:	msub	w9, w10, w11, w9
   2313c:	cmp	w9, #0x0
   23140:	cset	w10, eq  // eq = none
   23144:	cmp	w9, #0x5
   23148:	cset	w9, eq  // eq = none
   2314c:	orr	w9, w10, w9
   23150:	and	w8, w8, w9
   23154:	cbz	w8, 23308 <PyInit__decimal@@Base+0x1c854>
   23158:	ldr	x0, [x20, #40]
   2315c:	ldr	x1, [x20, #24]
   23160:	bl	1b324 <PyInit__decimal@@Base+0x14870>
   23164:	cbz	x0, 231a0 <PyInit__decimal@@Base+0x1c6ec>
   23168:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2316c:	ldr	x10, [x9, #1344]
   23170:	ldp	x8, x9, [x20, #24]
   23174:	add	x11, x8, #0x1
   23178:	cmp	x10, x11
   2317c:	csinc	x1, x10, x8, ge  // ge = tcont
   23180:	cmp	x1, x9
   23184:	b.eq	231c8 <PyInit__decimal@@Base+0x1c714>  // b.none
   23188:	ldrb	w10, [x20]
   2318c:	tbnz	w10, #5, 231ac <PyInit__decimal@@Base+0x1c6f8>
   23190:	mov	x0, x20
   23194:	mov	x2, x19
   23198:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2319c:	b	231c0 <PyInit__decimal@@Base+0x1c70c>
   231a0:	ldr	x9, [x20, #40]
   231a4:	ldr	x8, [x20, #24]
   231a8:	b	231e0 <PyInit__decimal@@Base+0x1c72c>
   231ac:	cmp	x1, x9
   231b0:	b.le	231c8 <PyInit__decimal@@Base+0x1c714>
   231b4:	mov	x0, x20
   231b8:	mov	x2, x19
   231bc:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   231c0:	cbz	w0, 23308 <PyInit__decimal@@Base+0x1c854>
   231c4:	ldr	x8, [x20, #24]
   231c8:	ldr	x9, [x20, #40]
   231cc:	mov	w10, #0x1                   	// #1
   231d0:	str	x10, [x9, x8, lsl #3]
   231d4:	ldr	x8, [x20, #24]
   231d8:	add	x8, x8, #0x1
   231dc:	str	x8, [x20, #24]
   231e0:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   231e4:	add	x9, x9, x8, lsl #3
   231e8:	add	x10, x10, #0x370
   231ec:	ldur	x9, [x9, #-8]
   231f0:	ldr	x11, [x10, #72]
   231f4:	cmp	x11, x9
   231f8:	b.ls	23224 <PyInit__decimal@@Base+0x1c770>  // b.plast
   231fc:	ldr	x11, [x10, #32]
   23200:	cmp	x11, x9
   23204:	b.ls	2324c <PyInit__decimal@@Base+0x1c798>  // b.plast
   23208:	ldr	x11, [x10, #16]
   2320c:	cmp	x11, x9
   23210:	b.ls	23290 <PyInit__decimal@@Base+0x1c7dc>  // b.plast
   23214:	ldr	x10, [x10, #8]
   23218:	cmp	x10, x9
   2321c:	mov	w9, #0x1                   	// #1
   23220:	b	232f4 <PyInit__decimal@@Base+0x1c840>
   23224:	ldr	x11, [x10, #112]
   23228:	cmp	x11, x9
   2322c:	b.ls	23268 <PyInit__decimal@@Base+0x1c7b4>  // b.plast
   23230:	ldr	x11, [x10, #88]
   23234:	cmp	x11, x9
   23238:	b.ls	232a0 <PyInit__decimal@@Base+0x1c7ec>  // b.plast
   2323c:	ldr	x10, [x10, #80]
   23240:	cmp	x10, x9
   23244:	mov	w9, #0xa                   	// #10
   23248:	b	232f4 <PyInit__decimal@@Base+0x1c840>
   2324c:	ldr	x11, [x10, #48]
   23250:	cmp	x11, x9
   23254:	b.ls	232bc <PyInit__decimal@@Base+0x1c808>  // b.plast
   23258:	ldr	x10, [x10, #40]
   2325c:	cmp	x10, x9
   23260:	mov	w9, #0x5                   	// #5
   23264:	b	232f4 <PyInit__decimal@@Base+0x1c840>
   23268:	ldr	x11, [x10, #144]
   2326c:	cmp	x11, x9
   23270:	b.ls	232d8 <PyInit__decimal@@Base+0x1c824>  // b.plast
   23274:	ldr	x11, [x10, #128]
   23278:	cmp	x11, x9
   2327c:	b.ls	232e8 <PyInit__decimal@@Base+0x1c834>  // b.plast
   23280:	ldr	x10, [x10, #120]
   23284:	cmp	x10, x9
   23288:	mov	w9, #0xf                   	// #15
   2328c:	b	232f4 <PyInit__decimal@@Base+0x1c840>
   23290:	ldr	x10, [x10, #24]
   23294:	cmp	x10, x9
   23298:	mov	w9, #0x3                   	// #3
   2329c:	b	232f4 <PyInit__decimal@@Base+0x1c840>
   232a0:	ldr	x11, [x10, #104]
   232a4:	cmp	x11, x9
   232a8:	b.ls	23394 <PyInit__decimal@@Base+0x1c8e0>  // b.plast
   232ac:	ldr	x10, [x10, #96]
   232b0:	cmp	x10, x9
   232b4:	mov	w9, #0xc                   	// #12
   232b8:	b	232f4 <PyInit__decimal@@Base+0x1c840>
   232bc:	ldr	x11, [x10, #64]
   232c0:	cmp	x11, x9
   232c4:	b.ls	2339c <PyInit__decimal@@Base+0x1c8e8>  // b.plast
   232c8:	ldr	x10, [x10, #56]
   232cc:	cmp	x10, x9
   232d0:	mov	w9, #0x7                   	// #7
   232d4:	b	232f4 <PyInit__decimal@@Base+0x1c840>
   232d8:	ldr	x10, [x10, #152]
   232dc:	cmp	x10, x9
   232e0:	mov	w9, #0x13                  	// #19
   232e4:	b	232f4 <PyInit__decimal@@Base+0x1c840>
   232e8:	ldr	x10, [x10, #136]
   232ec:	cmp	x10, x9
   232f0:	mov	w9, #0x11                  	// #17
   232f4:	cinc	x9, x9, ls  // ls = plast
   232f8:	mov	w10, #0x13                  	// #19
   232fc:	madd	x8, x8, x10, x9
   23300:	sub	x8, x8, #0x13
   23304:	str	x8, [x20, #16]
   23308:	ldr	w8, [x19]
   2330c:	orr	w9, w8, #0x1000
   23310:	str	w9, [x19]
   23314:	cbz	w21, 23050 <PyInit__decimal@@Base+0x1c59c>
   23318:	mov	w9, #0x5040                	// #20544
   2331c:	orr	w8, w8, w9
   23320:	str	w8, [x19]
   23324:	ldr	x0, [x20, #40]
   23328:	ldr	x9, [x20, #24]
   2332c:	add	x9, x0, x9, lsl #3
   23330:	ldur	x9, [x9, #-8]
   23334:	cbnz	x9, 23050 <PyInit__decimal@@Base+0x1c59c>
   23338:	ldrb	w9, [x20]
   2333c:	tbnz	w9, #5, 2337c <PyInit__decimal@@Base+0x1c8c8>
   23340:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   23344:	ldr	x9, [x20, #32]
   23348:	ldr	x1, [x21, #1344]
   2334c:	cmp	x9, x1
   23350:	b.le	2337c <PyInit__decimal@@Base+0x1c8c8>
   23354:	mov	x3, sp
   23358:	mov	w2, #0x8                   	// #8
   2335c:	strb	wzr, [sp]
   23360:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   23364:	str	x0, [x20, #40]
   23368:	ldrb	w8, [sp]
   2336c:	cbnz	w8, 23378 <PyInit__decimal@@Base+0x1c8c4>
   23370:	ldr	x8, [x21, #1344]
   23374:	str	x8, [x20, #32]
   23378:	ldr	w8, [x19]
   2337c:	mov	w9, #0x1                   	// #1
   23380:	orr	w8, w8, #0x1
   23384:	dup	v0.2d, x9
   23388:	str	q0, [x20, #16]
   2338c:	str	xzr, [x0]
   23390:	b	2304c <PyInit__decimal@@Base+0x1c598>
   23394:	mov	w9, #0xe                   	// #14
   23398:	b	232f8 <PyInit__decimal@@Base+0x1c844>
   2339c:	mov	w9, #0x9                   	// #9
   233a0:	b	232f8 <PyInit__decimal@@Base+0x1c844>
   233a4:	bl	6700 <abort@plt>
   233a8:	stp	x29, x30, [sp, #-32]!
   233ac:	stp	x20, x19, [sp, #16]
   233b0:	mov	x29, sp
   233b4:	mov	x19, x0
   233b8:	ldr	x0, [x0, #24]
   233bc:	bl	203cc <PyInit__decimal@@Base+0x19918>
   233c0:	mov	x20, x0
   233c4:	cbz	x0, 233fc <PyInit__decimal@@Base+0x1c948>
   233c8:	ldr	x8, [x19, #24]
   233cc:	ldr	x0, [x20, #40]
   233d0:	ldr	x1, [x19, #40]
   233d4:	lsl	x2, x8, #3
   233d8:	bl	63c0 <memcpy@plt>
   233dc:	ldrb	w8, [x19]
   233e0:	ldrb	w9, [x20]
   233e4:	bfxil	w9, w8, #0, #4
   233e8:	strb	w9, [x20]
   233ec:	ldur	q0, [x19, #8]
   233f0:	stur	q0, [x20, #8]
   233f4:	ldr	x8, [x19, #24]
   233f8:	str	x8, [x20, #24]
   233fc:	mov	x0, x20
   23400:	ldp	x20, x19, [sp, #16]
   23404:	ldp	x29, x30, [sp], #32
   23408:	ret
   2340c:	stp	x29, x30, [sp, #-32]!
   23410:	stp	x20, x19, [sp, #16]
   23414:	mov	x29, sp
   23418:	mov	x19, x0
   2341c:	cmp	x0, x1
   23420:	b.eq	234a8 <PyInit__decimal@@Base+0x1c9f4>  // b.none
   23424:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   23428:	ldr	x8, [x1, #24]
   2342c:	ldr	x10, [x9, #1344]
   23430:	ldr	x9, [x19, #32]
   23434:	mov	x20, x1
   23438:	cmp	x10, x8
   2343c:	csel	x1, x8, x10, lt  // lt = tstop
   23440:	cmp	x1, x9
   23444:	b.eq	23478 <PyInit__decimal@@Base+0x1c9c4>  // b.none
   23448:	ldrb	w10, [x19]
   2344c:	tbnz	w10, #5, 23460 <PyInit__decimal@@Base+0x1c9ac>
   23450:	mov	x0, x19
   23454:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   23458:	cbnz	w0, 23474 <PyInit__decimal@@Base+0x1c9c0>
   2345c:	b	234b8 <PyInit__decimal@@Base+0x1ca04>
   23460:	cmp	x1, x9
   23464:	b.le	23478 <PyInit__decimal@@Base+0x1c9c4>
   23468:	mov	x0, x19
   2346c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   23470:	cbz	w0, 234b8 <PyInit__decimal@@Base+0x1ca04>
   23474:	ldr	x8, [x20, #24]
   23478:	ldrb	w9, [x20]
   2347c:	ldrb	w10, [x19]
   23480:	ldr	x0, [x19, #40]
   23484:	bfxil	w10, w9, #0, #4
   23488:	strb	w10, [x19]
   2348c:	ldur	q0, [x20, #8]
   23490:	str	x8, [x19, #24]
   23494:	stur	q0, [x19, #8]
   23498:	ldr	x8, [x20, #24]
   2349c:	ldr	x1, [x20, #40]
   234a0:	lsl	x2, x8, #3
   234a4:	bl	63c0 <memcpy@plt>
   234a8:	ldrb	w8, [x19]
   234ac:	mov	w0, #0x1                   	// #1
   234b0:	and	w8, w8, #0xfe
   234b4:	strb	w8, [x19]
   234b8:	ldp	x20, x19, [sp, #16]
   234bc:	ldp	x29, x30, [sp], #32
   234c0:	ret
   234c4:	stp	x29, x30, [sp, #-32]!
   234c8:	stp	x20, x19, [sp, #16]
   234cc:	mov	x29, sp
   234d0:	mov	x19, x0
   234d4:	cmp	x0, x1
   234d8:	b.eq	23560 <PyInit__decimal@@Base+0x1caac>  // b.none
   234dc:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   234e0:	ldr	x8, [x1, #24]
   234e4:	ldr	x10, [x9, #1344]
   234e8:	ldr	x9, [x19, #32]
   234ec:	mov	x20, x1
   234f0:	cmp	x10, x8
   234f4:	csel	x1, x8, x10, lt  // lt = tstop
   234f8:	cmp	x1, x9
   234fc:	b.eq	23530 <PyInit__decimal@@Base+0x1ca7c>  // b.none
   23500:	ldrb	w10, [x19]
   23504:	tbnz	w10, #5, 23518 <PyInit__decimal@@Base+0x1ca64>
   23508:	mov	x0, x19
   2350c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   23510:	cbnz	w0, 2352c <PyInit__decimal@@Base+0x1ca78>
   23514:	b	23570 <PyInit__decimal@@Base+0x1cabc>
   23518:	cmp	x1, x9
   2351c:	b.le	23530 <PyInit__decimal@@Base+0x1ca7c>
   23520:	mov	x0, x19
   23524:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   23528:	cbz	w0, 23570 <PyInit__decimal@@Base+0x1cabc>
   2352c:	ldr	x8, [x20, #24]
   23530:	ldrb	w9, [x20]
   23534:	ldrb	w10, [x19]
   23538:	ldr	x0, [x19, #40]
   2353c:	bfxil	w10, w9, #0, #4
   23540:	strb	w10, [x19]
   23544:	ldur	q0, [x20, #8]
   23548:	str	x8, [x19, #24]
   2354c:	stur	q0, [x19, #8]
   23550:	ldr	x8, [x20, #24]
   23554:	ldr	x1, [x20, #40]
   23558:	lsl	x2, x8, #3
   2355c:	bl	63c0 <memcpy@plt>
   23560:	ldrb	w8, [x19]
   23564:	mov	w0, #0x1                   	// #1
   23568:	eor	w8, w8, #0x1
   2356c:	strb	w8, [x19]
   23570:	ldp	x20, x19, [sp, #16]
   23574:	ldp	x29, x30, [sp], #32
   23578:	ret
   2357c:	stp	x29, x30, [sp, #-48]!
   23580:	str	x21, [sp, #16]
   23584:	stp	x20, x19, [sp, #32]
   23588:	mov	x29, sp
   2358c:	ldrb	w21, [x2]
   23590:	mov	x19, x0
   23594:	cmp	x0, x1
   23598:	b.eq	23628 <PyInit__decimal@@Base+0x1cb74>  // b.none
   2359c:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   235a0:	ldr	x8, [x1, #24]
   235a4:	ldr	x10, [x9, #1344]
   235a8:	ldr	x9, [x19, #32]
   235ac:	mov	x20, x1
   235b0:	cmp	x10, x8
   235b4:	csel	x1, x8, x10, lt  // lt = tstop
   235b8:	cmp	x1, x9
   235bc:	b.eq	235f8 <PyInit__decimal@@Base+0x1cb44>  // b.none
   235c0:	ldrb	w10, [x19]
   235c4:	tbnz	w10, #5, 235dc <PyInit__decimal@@Base+0x1cb28>
   235c8:	mov	x0, x19
   235cc:	mov	x2, x3
   235d0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   235d4:	cbnz	w0, 235f4 <PyInit__decimal@@Base+0x1cb40>
   235d8:	b	23640 <PyInit__decimal@@Base+0x1cb8c>
   235dc:	cmp	x1, x9
   235e0:	b.le	235f8 <PyInit__decimal@@Base+0x1cb44>
   235e4:	mov	x0, x19
   235e8:	mov	x2, x3
   235ec:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   235f0:	cbz	w0, 23640 <PyInit__decimal@@Base+0x1cb8c>
   235f4:	ldr	x8, [x20, #24]
   235f8:	ldrb	w9, [x20]
   235fc:	ldrb	w10, [x19]
   23600:	ldr	x0, [x19, #40]
   23604:	bfxil	w10, w9, #0, #4
   23608:	strb	w10, [x19]
   2360c:	ldur	q0, [x20, #8]
   23610:	str	x8, [x19, #24]
   23614:	stur	q0, [x19, #8]
   23618:	ldr	x8, [x20, #24]
   2361c:	ldr	x1, [x20, #40]
   23620:	lsl	x2, x8, #3
   23624:	bl	63c0 <memcpy@plt>
   23628:	ldrb	w8, [x19]
   2362c:	and	w9, w21, #0x1
   23630:	mov	w0, #0x1                   	// #1
   23634:	and	w8, w8, #0xfe
   23638:	orr	w8, w8, w9
   2363c:	strb	w8, [x19]
   23640:	ldp	x20, x19, [sp, #32]
   23644:	ldr	x21, [sp, #16]
   23648:	ldp	x29, x30, [sp], #48
   2364c:	ret
   23650:	ldrb	w8, [x0]
   23654:	tst	w8, #0xe
   23658:	b.ne	23668 <PyInit__decimal@@Base+0x1cbb4>  // b.any
   2365c:	ldrb	w9, [x1]
   23660:	tst	w9, #0xe
   23664:	b.eq	23690 <PyInit__decimal@@Base+0x1cbdc>  // b.none
   23668:	tst	w8, #0xc
   2366c:	b.ne	2367c <PyInit__decimal@@Base+0x1cbc8>  // b.any
   23670:	ldrb	w8, [x1]
   23674:	tst	w8, #0xc
   23678:	b.eq	23690 <PyInit__decimal@@Base+0x1cbdc>  // b.none
   2367c:	ldr	w8, [x2]
   23680:	mov	w0, #0x7fffffff            	// #2147483647
   23684:	orr	w8, w8, #0x100
   23688:	str	w8, [x2]
   2368c:	ret
   23690:	b	23694 <PyInit__decimal@@Base+0x1cbe0>
   23694:	stp	x29, x30, [sp, #-32]!
   23698:	str	x19, [sp, #16]
   2369c:	mov	x29, sp
   236a0:	cmp	x0, x1
   236a4:	b.eq	23778 <PyInit__decimal@@Base+0x1ccc4>  // b.none
   236a8:	ldrb	w11, [x0]
   236ac:	ldrb	w12, [x1]
   236b0:	mov	x10, x1
   236b4:	mov	x19, x0
   236b8:	tbnz	w11, #1, 236cc <PyInit__decimal@@Base+0x1cc18>
   236bc:	tbz	w12, #1, 236e0 <PyInit__decimal@@Base+0x1cc2c>
   236c0:	ubfiz	w8, w12, #1, #1
   236c4:	sub	w0, w8, #0x1
   236c8:	b	2377c <PyInit__decimal@@Base+0x1ccc8>
   236cc:	tbz	w12, #1, 23764 <PyInit__decimal@@Base+0x1ccb0>
   236d0:	and	w8, w12, #0x1
   236d4:	and	w9, w11, #0x1
   236d8:	sub	w0, w8, w9
   236dc:	b	2377c <PyInit__decimal@@Base+0x1ccc8>
   236e0:	ldr	x1, [x19, #40]
   236e4:	ldr	x3, [x19, #24]
   236e8:	ldr	x8, [x10, #40]
   236ec:	ldr	x9, [x10, #24]
   236f0:	add	x13, x1, x3, lsl #3
   236f4:	ldur	x14, [x13, #-8]
   236f8:	add	x13, x8, x9, lsl #3
   236fc:	ldur	x13, [x13, #-8]
   23700:	cbz	x14, 23774 <PyInit__decimal@@Base+0x1ccc0>
   23704:	cbz	x13, 23764 <PyInit__decimal@@Base+0x1ccb0>
   23708:	and	w13, w11, #0x1
   2370c:	and	w12, w12, #0x1
   23710:	cmp	w13, w12
   23714:	b.ne	23788 <PyInit__decimal@@Base+0x1ccd4>  // b.any
   23718:	ldp	x12, x14, [x19, #8]
   2371c:	ldp	x13, x10, [x10, #8]
   23720:	add	x14, x12, x14
   23724:	add	x10, x13, x10
   23728:	cmp	x14, x10
   2372c:	b.ne	23790 <PyInit__decimal@@Base+0x1ccdc>  // b.any
   23730:	subs	x4, x12, x13
   23734:	b.ne	237b4 <PyInit__decimal@@Base+0x1cd00>  // b.any
   23738:	sub	x9, x3, #0x1
   2373c:	tbnz	x9, #63, 237d0 <PyInit__decimal@@Base+0x1cd1c>
   23740:	lsl	x10, x9, #3
   23744:	ldr	x11, [x1, x10]
   23748:	ldr	x10, [x8, x10]
   2374c:	sub	x9, x9, #0x1
   23750:	cmp	x11, x10
   23754:	b.eq	2373c <PyInit__decimal@@Base+0x1cc88>  // b.none
   23758:	mov	w8, #0xffffffff            	// #-1
   2375c:	cneg	w0, w8, cs  // cs = hs, nlast
   23760:	b	237f0 <PyInit__decimal@@Base+0x1cd3c>
   23764:	ubfiz	w8, w11, #1, #1
   23768:	mov	w9, #0x1                   	// #1
   2376c:	sub	w0, w9, w8
   23770:	b	2377c <PyInit__decimal@@Base+0x1ccc8>
   23774:	cbnz	x13, 236c0 <PyInit__decimal@@Base+0x1cc0c>
   23778:	mov	w0, wzr
   2377c:	ldr	x19, [sp, #16]
   23780:	ldp	x29, x30, [sp], #32
   23784:	ret
   23788:	sub	w0, w12, w13
   2378c:	b	2377c <PyInit__decimal@@Base+0x1ccc8>
   23790:	sub	x8, x14, #0x1
   23794:	sub	x9, x10, #0x1
   23798:	ubfiz	w10, w11, #1, #1
   2379c:	mov	w11, #0x1                   	// #1
   237a0:	sub	w11, w11, w10
   237a4:	sub	w10, w10, #0x1
   237a8:	cmp	x8, x9
   237ac:	csel	w0, w10, w11, lt  // lt = tstop
   237b0:	b	2377c <PyInit__decimal@@Base+0x1ccc8>
   237b4:	cmp	x4, #0x1
   237b8:	b.lt	237d8 <PyInit__decimal@@Base+0x1cd24>  // b.tstop
   237bc:	mov	x0, x8
   237c0:	mov	x2, x9
   237c4:	bl	354e8 <PyInit__decimal@@Base+0x2ea34>
   237c8:	neg	w0, w0
   237cc:	b	237f0 <PyInit__decimal@@Base+0x1cd3c>
   237d0:	mov	w0, wzr
   237d4:	b	237f0 <PyInit__decimal@@Base+0x1cd3c>
   237d8:	neg	x4, x4
   237dc:	mov	x0, x1
   237e0:	mov	x1, x8
   237e4:	mov	x2, x3
   237e8:	mov	x3, x9
   237ec:	bl	354e8 <PyInit__decimal@@Base+0x2ea34>
   237f0:	ldrb	w8, [x19]
   237f4:	mov	w9, #0x1                   	// #1
   237f8:	ubfiz	w8, w8, #1, #1
   237fc:	sub	w8, w9, w8
   23800:	mul	w0, w8, w0
   23804:	b	2377c <PyInit__decimal@@Base+0x1ccc8>
   23808:	stp	x29, x30, [sp, #-48]!
   2380c:	str	x21, [sp, #16]
   23810:	stp	x20, x19, [sp, #32]
   23814:	mov	x29, sp
   23818:	ldrb	w8, [x1]
   2381c:	mov	x20, x2
   23820:	mov	x21, x1
   23824:	mov	x19, x0
   23828:	tst	w8, #0xe
   2382c:	b.ne	2383c <PyInit__decimal@@Base+0x1cd88>  // b.any
   23830:	ldrb	w8, [x20]
   23834:	tst	w8, #0xe
   23838:	b.eq	23858 <PyInit__decimal@@Base+0x1cda4>  // b.none
   2383c:	mov	x0, x19
   23840:	mov	x1, x21
   23844:	mov	x2, x20
   23848:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   2384c:	cbz	w0, 23858 <PyInit__decimal@@Base+0x1cda4>
   23850:	mov	w20, #0x7fffffff            	// #2147483647
   23854:	b	23880 <PyInit__decimal@@Base+0x1cdcc>
   23858:	mov	x0, x21
   2385c:	mov	x1, x20
   23860:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   23864:	cmp	w0, #0x0
   23868:	mov	w20, w0
   2386c:	lsr	w1, w0, #31
   23870:	cset	w2, ne  // ne = any
   23874:	mov	x0, x19
   23878:	mov	x3, xzr
   2387c:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   23880:	mov	w0, w20
   23884:	ldp	x20, x19, [sp, #32]
   23888:	ldr	x21, [sp, #16]
   2388c:	ldp	x29, x30, [sp], #48
   23890:	ret
   23894:	stp	x29, x30, [sp, #-48]!
   23898:	stp	x22, x21, [sp, #16]
   2389c:	stp	x20, x19, [sp, #32]
   238a0:	mov	x29, sp
   238a4:	ldrb	w8, [x1]
   238a8:	mov	x20, x4
   238ac:	mov	x21, x2
   238b0:	mov	x22, x1
   238b4:	tst	w8, #0xe
   238b8:	mov	x19, x0
   238bc:	b.ne	238cc <PyInit__decimal@@Base+0x1ce18>  // b.any
   238c0:	ldrb	w8, [x21]
   238c4:	tst	w8, #0xe
   238c8:	b.eq	238f8 <PyInit__decimal@@Base+0x1ce44>  // b.none
   238cc:	mov	x0, x19
   238d0:	mov	x1, x22
   238d4:	mov	x2, x21
   238d8:	mov	x4, x20
   238dc:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   238e0:	cbz	w0, 238f8 <PyInit__decimal@@Base+0x1ce44>
   238e4:	ldr	w8, [x20]
   238e8:	orr	w8, w8, #0x100
   238ec:	str	w8, [x20]
   238f0:	mov	w20, #0x7fffffff            	// #2147483647
   238f4:	b	23920 <PyInit__decimal@@Base+0x1ce6c>
   238f8:	mov	x0, x22
   238fc:	mov	x1, x21
   23900:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   23904:	cmp	w0, #0x0
   23908:	mov	w20, w0
   2390c:	lsr	w1, w0, #31
   23910:	cset	w2, ne  // ne = any
   23914:	mov	x0, x19
   23918:	mov	x3, xzr
   2391c:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   23920:	mov	w0, w20
   23924:	ldp	x20, x19, [sp, #32]
   23928:	ldp	x22, x21, [sp, #16]
   2392c:	ldp	x29, x30, [sp], #48
   23930:	ret
   23934:	sub	sp, sp, #0x80
   23938:	stp	x29, x30, [sp, #96]
   2393c:	stp	x20, x19, [sp, #112]
   23940:	add	x29, sp, #0x60
   23944:	ldrb	w9, [x0]
   23948:	ldrb	w8, [x1]
   2394c:	and	w10, w9, #0x1
   23950:	and	w11, w8, #0x1
   23954:	cmp	w10, w11
   23958:	b.ne	23990 <PyInit__decimal@@Base+0x1cedc>  // b.any
   2395c:	mov	x20, x1
   23960:	mov	x19, x0
   23964:	tst	w9, #0xc
   23968:	and	w10, w8, #0xc
   2396c:	b.eq	23998 <PyInit__decimal@@Base+0x1cee4>  // b.none
   23970:	cbz	w10, 239a4 <PyInit__decimal@@Base+0x1cef0>
   23974:	and	w10, w9, #0x4
   23978:	and	w11, w8, #0x4
   2397c:	eor	w12, w10, w11
   23980:	tbz	w12, #2, 239ac <PyInit__decimal@@Base+0x1cef8>
   23984:	lsr	w8, w10, #2
   23988:	sub	w0, w8, w11, lsr #2
   2398c:	b	23a5c <PyInit__decimal@@Base+0x1cfa8>
   23990:	sub	w0, w11, w10
   23994:	b	23a70 <PyInit__decimal@@Base+0x1cfbc>
   23998:	cbz	w10, 23a14 <PyInit__decimal@@Base+0x1cf60>
   2399c:	mov	w0, #0xffffffff            	// #-1
   239a0:	b	23a5c <PyInit__decimal@@Base+0x1cfa8>
   239a4:	mov	w0, #0x1                   	// #1
   239a8:	b	23a5c <PyInit__decimal@@Base+0x1cfa8>
   239ac:	ldr	x11, [x19, #24]
   239b0:	ldr	x10, [x20, #24]
   239b4:	cmp	x11, #0x1
   239b8:	b.lt	23a3c <PyInit__decimal@@Base+0x1cf88>  // b.tstop
   239bc:	cmp	x10, #0x1
   239c0:	b.lt	23a3c <PyInit__decimal@@Base+0x1cf88>  // b.tstop
   239c4:	ldr	x12, [x19, #16]
   239c8:	add	x0, sp, #0x30
   239cc:	mov	x1, sp
   239d0:	stp	x12, x11, [sp, #64]
   239d4:	ldr	q0, [x19, #32]
   239d8:	mov	w11, #0x40                  	// #64
   239dc:	bfxil	w11, w9, #0, #5
   239e0:	strb	w11, [sp, #48]
   239e4:	str	q0, [sp, #80]
   239e8:	ldr	x9, [x20, #16]
   239ec:	mov	w11, #0x40                  	// #64
   239f0:	bfxil	w11, w8, #0, #5
   239f4:	stp	x9, x10, [sp, #16]
   239f8:	ldr	q0, [x20, #32]
   239fc:	strb	w11, [sp]
   23a00:	str	xzr, [sp, #8]
   23a04:	str	xzr, [sp, #56]
   23a08:	str	q0, [sp, #32]
   23a0c:	bl	23a80 <PyInit__decimal@@Base+0x1cfcc>
   23a10:	b	23a5c <PyInit__decimal@@Base+0x1cfa8>
   23a14:	mov	x0, x19
   23a18:	mov	x1, x20
   23a1c:	bl	23a80 <PyInit__decimal@@Base+0x1cfcc>
   23a20:	cbnz	w0, 23a5c <PyInit__decimal@@Base+0x1cfa8>
   23a24:	ldr	x8, [x19, #8]
   23a28:	ldr	x9, [x20, #8]
   23a2c:	cmp	x8, x9
   23a30:	b.ne	23a54 <PyInit__decimal@@Base+0x1cfa0>  // b.any
   23a34:	mov	w0, wzr
   23a38:	b	23a5c <PyInit__decimal@@Base+0x1cfa8>
   23a3c:	cmp	x11, #0x0
   23a40:	cset	w8, gt
   23a44:	cmp	x10, #0x0
   23a48:	cset	w9, gt
   23a4c:	sub	w0, w8, w9
   23a50:	b	23a5c <PyInit__decimal@@Base+0x1cfa8>
   23a54:	mov	w8, #0xffffffff            	// #-1
   23a58:	cneg	w0, w8, ge  // ge = tcont
   23a5c:	ldrb	w8, [x19]
   23a60:	mov	w9, #0x1                   	// #1
   23a64:	ubfiz	w8, w8, #1, #1
   23a68:	sub	w8, w9, w8
   23a6c:	mul	w0, w8, w0
   23a70:	ldp	x20, x19, [sp, #112]
   23a74:	ldp	x29, x30, [sp, #96]
   23a78:	add	sp, sp, #0x80
   23a7c:	ret
   23a80:	stp	x29, x30, [sp, #-16]!
   23a84:	mov	x29, sp
   23a88:	cmp	x0, x1
   23a8c:	b.eq	23b38 <PyInit__decimal@@Base+0x1d084>  // b.none
   23a90:	ldrb	w9, [x0]
   23a94:	ldrb	w8, [x1]
   23a98:	mov	x10, x1
   23a9c:	tbnz	w9, #1, 23ab0 <PyInit__decimal@@Base+0x1cffc>
   23aa0:	tbz	w8, #1, 23ac0 <PyInit__decimal@@Base+0x1d00c>
   23aa4:	mov	w0, #0xffffffff            	// #-1
   23aa8:	ldp	x29, x30, [sp], #16
   23aac:	ret
   23ab0:	tst	w8, #0x2
   23ab4:	cset	w0, eq  // eq = none
   23ab8:	ldp	x29, x30, [sp], #16
   23abc:	ret
   23ac0:	ldr	x1, [x0, #40]
   23ac4:	ldr	x3, [x0, #24]
   23ac8:	ldr	x8, [x10, #40]
   23acc:	ldr	x9, [x10, #24]
   23ad0:	add	x11, x1, x3, lsl #3
   23ad4:	ldur	x12, [x11, #-8]
   23ad8:	add	x11, x8, x9, lsl #3
   23adc:	ldur	x11, [x11, #-8]
   23ae0:	cbz	x12, 23b44 <PyInit__decimal@@Base+0x1d090>
   23ae4:	cbz	x11, 23b54 <PyInit__decimal@@Base+0x1d0a0>
   23ae8:	ldp	x11, x13, [x0, #8]
   23aec:	ldp	x12, x10, [x10, #8]
   23af0:	add	x13, x11, x13
   23af4:	add	x10, x12, x10
   23af8:	cmp	x13, x10
   23afc:	b.ne	23b60 <PyInit__decimal@@Base+0x1d0ac>  // b.any
   23b00:	subs	x4, x11, x12
   23b04:	b.ne	23b7c <PyInit__decimal@@Base+0x1d0c8>  // b.any
   23b08:	sub	x9, x3, #0x1
   23b0c:	tbnz	x9, #63, 23b38 <PyInit__decimal@@Base+0x1d084>
   23b10:	lsl	x10, x9, #3
   23b14:	ldr	x11, [x1, x10]
   23b18:	ldr	x10, [x8, x10]
   23b1c:	sub	x9, x9, #0x1
   23b20:	cmp	x11, x10
   23b24:	b.eq	23b0c <PyInit__decimal@@Base+0x1d058>  // b.none
   23b28:	mov	w8, #0xffffffff            	// #-1
   23b2c:	cneg	w0, w8, cs  // cs = hs, nlast
   23b30:	ldp	x29, x30, [sp], #16
   23b34:	ret
   23b38:	mov	w0, wzr
   23b3c:	ldp	x29, x30, [sp], #16
   23b40:	ret
   23b44:	cmp	x11, #0x0
   23b48:	csetm	w0, ne  // ne = any
   23b4c:	ldp	x29, x30, [sp], #16
   23b50:	ret
   23b54:	mov	w0, #0x1                   	// #1
   23b58:	ldp	x29, x30, [sp], #16
   23b5c:	ret
   23b60:	sub	x8, x13, #0x1
   23b64:	sub	x9, x10, #0x1
   23b68:	cmp	x8, x9
   23b6c:	mov	w8, #0xffffffff            	// #-1
   23b70:	cneg	w0, w8, ge  // ge = tcont
   23b74:	ldp	x29, x30, [sp], #16
   23b78:	ret
   23b7c:	cmp	x4, #0x1
   23b80:	b.lt	23b9c <PyInit__decimal@@Base+0x1d0e8>  // b.tstop
   23b84:	mov	x0, x8
   23b88:	mov	x2, x9
   23b8c:	bl	354e8 <PyInit__decimal@@Base+0x2ea34>
   23b90:	neg	w0, w0
   23b94:	ldp	x29, x30, [sp], #16
   23b98:	ret
   23b9c:	neg	x4, x4
   23ba0:	mov	x0, x1
   23ba4:	mov	x1, x8
   23ba8:	mov	x2, x3
   23bac:	mov	x3, x9
   23bb0:	ldp	x29, x30, [sp], #16
   23bb4:	b	354e8 <PyInit__decimal@@Base+0x2ea34>
   23bb8:	stp	x29, x30, [sp, #-32]!
   23bbc:	stp	x20, x19, [sp, #16]
   23bc0:	mov	x29, sp
   23bc4:	mov	x19, x0
   23bc8:	mov	x0, x1
   23bcc:	mov	x1, x2
   23bd0:	bl	23934 <PyInit__decimal@@Base+0x1ce80>
   23bd4:	cmp	w0, #0x0
   23bd8:	mov	w20, w0
   23bdc:	lsr	w1, w0, #31
   23be0:	cset	w2, ne  // ne = any
   23be4:	mov	x0, x19
   23be8:	mov	x3, xzr
   23bec:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   23bf0:	mov	w0, w20
   23bf4:	ldp	x20, x19, [sp, #16]
   23bf8:	ldp	x29, x30, [sp], #32
   23bfc:	ret
   23c00:	sub	sp, sp, #0x70
   23c04:	stp	x29, x30, [sp, #96]
   23c08:	add	x29, sp, #0x60
   23c0c:	ldur	q0, [x0, #8]
   23c10:	ldrb	w8, [x0]
   23c14:	stur	q0, [sp, #56]
   23c18:	ldur	q0, [x0, #24]
   23c1c:	and	w8, w8, #0x1e
   23c20:	orr	w8, w8, #0x40
   23c24:	stur	q0, [sp, #72]
   23c28:	ldr	x9, [x0, #40]
   23c2c:	add	x0, sp, #0x30
   23c30:	str	x9, [sp, #88]
   23c34:	ldur	q0, [x1, #8]
   23c38:	ldrb	w9, [x1]
   23c3c:	stur	q0, [sp, #8]
   23c40:	ldur	q0, [x1, #24]
   23c44:	and	w9, w9, #0x1e
   23c48:	orr	w9, w9, #0x40
   23c4c:	stur	q0, [sp, #24]
   23c50:	ldr	x10, [x1, #40]
   23c54:	mov	x1, sp
   23c58:	strb	w8, [sp, #48]
   23c5c:	strb	w9, [sp]
   23c60:	str	x10, [sp, #40]
   23c64:	bl	23934 <PyInit__decimal@@Base+0x1ce80>
   23c68:	ldp	x29, x30, [sp, #96]
   23c6c:	add	sp, sp, #0x70
   23c70:	ret
   23c74:	sub	sp, sp, #0x80
   23c78:	stp	x29, x30, [sp, #96]
   23c7c:	stp	x20, x19, [sp, #112]
   23c80:	add	x29, sp, #0x60
   23c84:	ldur	q0, [x1, #8]
   23c88:	ldrb	w8, [x1]
   23c8c:	mov	x19, x0
   23c90:	add	x0, sp, #0x30
   23c94:	stur	q0, [sp, #56]
   23c98:	ldur	q0, [x1, #24]
   23c9c:	and	w8, w8, #0x1e
   23ca0:	orr	w8, w8, #0x40
   23ca4:	stur	q0, [sp, #72]
   23ca8:	ldr	x9, [x1, #40]
   23cac:	mov	x1, sp
   23cb0:	str	x9, [sp, #88]
   23cb4:	ldur	q0, [x2, #8]
   23cb8:	ldrb	w9, [x2]
   23cbc:	stur	q0, [sp, #8]
   23cc0:	ldur	q0, [x2, #24]
   23cc4:	and	w9, w9, #0x1e
   23cc8:	orr	w9, w9, #0x40
   23ccc:	stur	q0, [sp, #24]
   23cd0:	ldr	x10, [x2, #40]
   23cd4:	strb	w8, [sp, #48]
   23cd8:	strb	w9, [sp]
   23cdc:	str	x10, [sp, #40]
   23ce0:	bl	23934 <PyInit__decimal@@Base+0x1ce80>
   23ce4:	cmp	w0, #0x0
   23ce8:	mov	w20, w0
   23cec:	lsr	w1, w0, #31
   23cf0:	cset	w2, ne  // ne = any
   23cf4:	mov	x0, x19
   23cf8:	mov	x3, xzr
   23cfc:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   23d00:	mov	w0, w20
   23d04:	ldp	x20, x19, [sp, #112]
   23d08:	ldp	x29, x30, [sp, #96]
   23d0c:	add	sp, sp, #0x80
   23d10:	ret
   23d14:	stp	x29, x30, [sp, #-48]!
   23d18:	stp	x22, x21, [sp, #16]
   23d1c:	stp	x20, x19, [sp, #32]
   23d20:	mov	x29, sp
   23d24:	mov	x19, x1
   23d28:	mov	x8, x3
   23d2c:	ldr	x1, [x1, #40]
   23d30:	ldr	x3, [x19, #24]
   23d34:	mov	x20, x0
   23d38:	cbz	x2, 23db8 <PyInit__decimal@@Base+0x1d304>
   23d3c:	add	x9, x1, x3, lsl #3
   23d40:	ldur	x9, [x9, #-8]
   23d44:	cbz	x9, 23db8 <PyInit__decimal@@Base+0x1d304>
   23d48:	ldr	x9, [x19, #16]
   23d4c:	mov	x10, #0x9436                	// #37942
   23d50:	movk	x10, #0x50d7, lsl #16
   23d54:	movk	x10, #0x435e, lsl #32
   23d58:	movk	x10, #0xd79, lsl #48
   23d5c:	add	x9, x9, x2
   23d60:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
   23d64:	smulh	x10, x9, x10
   23d68:	mov	x11, #0xffffffffffffffed    	// #-19
   23d6c:	ldr	x12, [x12, #1344]
   23d70:	add	x13, x10, x10, lsr #63
   23d74:	mul	x10, x13, x11
   23d78:	cmn	x10, x9
   23d7c:	ldr	x10, [x20, #32]
   23d80:	cinc	x22, x13, ne  // ne = any
   23d84:	cmp	x12, x22
   23d88:	csel	x9, x22, x12, lt  // lt = tstop
   23d8c:	mov	x21, x2
   23d90:	cmp	x9, x10
   23d94:	b.eq	23e20 <PyInit__decimal@@Base+0x1d36c>  // b.none
   23d98:	ldrb	w11, [x20]
   23d9c:	tbnz	w11, #5, 23dfc <PyInit__decimal@@Base+0x1d348>
   23da0:	mov	x0, x20
   23da4:	mov	x1, x9
   23da8:	mov	x2, x8
   23dac:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   23db0:	cbnz	w0, 23e18 <PyInit__decimal@@Base+0x1d364>
   23db4:	b	23eac <PyInit__decimal@@Base+0x1d3f8>
   23db8:	cmp	x20, x19
   23dbc:	b.eq	23ea8 <PyInit__decimal@@Base+0x1d3f4>  // b.none
   23dc0:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   23dc4:	ldr	x9, [x9, #1344]
   23dc8:	ldr	x10, [x20, #32]
   23dcc:	cmp	x9, x3
   23dd0:	csel	x9, x3, x9, lt  // lt = tstop
   23dd4:	cmp	x9, x10
   23dd8:	b.eq	23e7c <PyInit__decimal@@Base+0x1d3c8>  // b.none
   23ddc:	ldrb	w11, [x20]
   23de0:	tbnz	w11, #5, 23e58 <PyInit__decimal@@Base+0x1d3a4>
   23de4:	mov	x0, x20
   23de8:	mov	x1, x9
   23dec:	mov	x2, x8
   23df0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   23df4:	cbnz	w0, 23e74 <PyInit__decimal@@Base+0x1d3c0>
   23df8:	b	23eac <PyInit__decimal@@Base+0x1d3f8>
   23dfc:	cmp	x9, x10
   23e00:	b.le	23e20 <PyInit__decimal@@Base+0x1d36c>
   23e04:	mov	x0, x20
   23e08:	mov	x1, x9
   23e0c:	mov	x2, x8
   23e10:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   23e14:	cbz	w0, 23eac <PyInit__decimal@@Base+0x1d3f8>
   23e18:	ldr	x1, [x19, #40]
   23e1c:	ldr	x3, [x19, #24]
   23e20:	ldr	x0, [x20, #40]
   23e24:	mov	x2, x22
   23e28:	mov	x4, x21
   23e2c:	bl	1bcc8 <PyInit__decimal@@Base+0x15214>
   23e30:	ldrb	w8, [x19]
   23e34:	ldrb	w9, [x20]
   23e38:	bfxil	w9, w8, #0, #4
   23e3c:	strb	w9, [x20]
   23e40:	ldr	x8, [x19, #8]
   23e44:	str	x8, [x20, #8]
   23e48:	ldr	x8, [x19, #16]
   23e4c:	add	x8, x8, x21
   23e50:	stp	x8, x22, [x20, #16]
   23e54:	b	23ea8 <PyInit__decimal@@Base+0x1d3f4>
   23e58:	cmp	x9, x10
   23e5c:	b.le	23e7c <PyInit__decimal@@Base+0x1d3c8>
   23e60:	mov	x0, x20
   23e64:	mov	x1, x9
   23e68:	mov	x2, x8
   23e6c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   23e70:	cbz	w0, 23eac <PyInit__decimal@@Base+0x1d3f8>
   23e74:	ldr	x3, [x19, #24]
   23e78:	ldr	x1, [x19, #40]
   23e7c:	ldrb	w8, [x19]
   23e80:	ldrb	w9, [x20]
   23e84:	ldr	x0, [x20, #40]
   23e88:	bfxil	w9, w8, #0, #4
   23e8c:	strb	w9, [x20]
   23e90:	ldur	q0, [x19, #8]
   23e94:	str	x3, [x20, #24]
   23e98:	stur	q0, [x20, #8]
   23e9c:	ldr	x8, [x19, #24]
   23ea0:	lsl	x2, x8, #3
   23ea4:	bl	63c0 <memcpy@plt>
   23ea8:	mov	w0, #0x1                   	// #1
   23eac:	ldp	x20, x19, [sp, #32]
   23eb0:	ldp	x22, x21, [sp, #16]
   23eb4:	ldp	x29, x30, [sp], #48
   23eb8:	ret
   23ebc:	stp	x29, x30, [sp, #-48]!
   23ec0:	str	x21, [sp, #16]
   23ec4:	stp	x20, x19, [sp, #32]
   23ec8:	mov	x29, sp
   23ecc:	mov	x20, xzr
   23ed0:	cbz	x1, 23ffc <PyInit__decimal@@Base+0x1d548>
   23ed4:	mov	x19, x0
   23ed8:	ldr	x0, [x0, #40]
   23edc:	ldr	x8, [x19, #24]
   23ee0:	add	x9, x0, x8, lsl #3
   23ee4:	ldur	x9, [x9, #-8]
   23ee8:	cbz	x9, 23ffc <PyInit__decimal@@Base+0x1d548>
   23eec:	ldr	x9, [x19, #16]
   23ef0:	mov	x21, x1
   23ef4:	cmp	x9, x1
   23ef8:	b.le	23f78 <PyInit__decimal@@Base+0x1d4c4>
   23efc:	mov	x1, x0
   23f00:	mov	x2, x8
   23f04:	mov	x3, x21
   23f08:	bl	1c194 <PyInit__decimal@@Base+0x156e0>
   23f0c:	ldr	x8, [x19, #16]
   23f10:	mov	x9, #0x9436                	// #37942
   23f14:	movk	x9, #0x50d7, lsl #16
   23f18:	movk	x9, #0x435e, lsl #32
   23f1c:	movk	x9, #0xd79, lsl #48
   23f20:	sub	x8, x8, x21
   23f24:	adrp	x11, 53000 <PyInit__decimal@@Base+0x4c54c>
   23f28:	str	x8, [x19, #16]
   23f2c:	smulh	x9, x8, x9
   23f30:	mov	x10, #0xffffffffffffffed    	// #-19
   23f34:	add	x9, x9, x9, lsr #63
   23f38:	ldr	x11, [x11, #1344]
   23f3c:	mul	x10, x9, x10
   23f40:	cmn	x10, x8
   23f44:	ldr	x8, [x19, #32]
   23f48:	cinc	x21, x9, ne  // ne = any
   23f4c:	cmp	x11, x21
   23f50:	csel	x1, x21, x11, lt  // lt = tstop
   23f54:	cmp	x1, x8
   23f58:	mov	x20, x0
   23f5c:	b.eq	23ff8 <PyInit__decimal@@Base+0x1d544>  // b.none
   23f60:	ldrb	w9, [x19]
   23f64:	tbnz	w9, #5, 23fe4 <PyInit__decimal@@Base+0x1d530>
   23f68:	add	x2, x29, #0x18
   23f6c:	mov	x0, x19
   23f70:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   23f74:	b	23ff8 <PyInit__decimal@@Base+0x1d544>
   23f78:	cset	w2, eq  // eq = none
   23f7c:	mov	x1, x8
   23f80:	bl	24010 <PyInit__decimal@@Base+0x1d55c>
   23f84:	ldrb	w8, [x19]
   23f88:	mov	x20, x0
   23f8c:	tbnz	w8, #5, 23fcc <PyInit__decimal@@Base+0x1d518>
   23f90:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   23f94:	ldr	x8, [x19, #32]
   23f98:	ldr	x1, [x21, #1344]
   23f9c:	cmp	x8, x1
   23fa0:	b.le	23fcc <PyInit__decimal@@Base+0x1d518>
   23fa4:	strb	wzr, [x29, #28]
   23fa8:	ldr	x0, [x19, #40]
   23fac:	add	x3, x29, #0x1c
   23fb0:	mov	w2, #0x8                   	// #8
   23fb4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   23fb8:	str	x0, [x19, #40]
   23fbc:	ldrb	w8, [x29, #28]
   23fc0:	cbnz	w8, 23fcc <PyInit__decimal@@Base+0x1d518>
   23fc4:	ldr	x8, [x21, #1344]
   23fc8:	str	x8, [x19, #32]
   23fcc:	ldr	x8, [x19, #40]
   23fd0:	mov	w9, #0x1                   	// #1
   23fd4:	dup	v0.2d, x9
   23fd8:	str	q0, [x19, #16]
   23fdc:	str	xzr, [x8]
   23fe0:	b	23ffc <PyInit__decimal@@Base+0x1d548>
   23fe4:	cmp	x1, x8
   23fe8:	b.le	23ff8 <PyInit__decimal@@Base+0x1d544>
   23fec:	add	x2, x29, #0x18
   23ff0:	mov	x0, x19
   23ff4:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   23ff8:	str	x21, [x19, #24]
   23ffc:	mov	x0, x20
   24000:	ldp	x20, x19, [sp, #32]
   24004:	ldr	x21, [sp, #16]
   24008:	ldp	x29, x30, [sp], #48
   2400c:	ret
   24010:	sub	sp, sp, #0x30
   24014:	stp	x29, x30, [sp, #16]
   24018:	stp	x20, x19, [sp, #32]
   2401c:	add	x29, sp, #0x10
   24020:	mov	x20, x1
   24024:	mov	x19, x0
   24028:	stp	xzr, xzr, [sp]
   2402c:	cbz	w2, 24074 <PyInit__decimal@@Base+0x1d5c0>
   24030:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   24034:	add	x9, x19, x20, lsl #3
   24038:	add	x8, x8, #0x370
   2403c:	ldur	x2, [x9, #-8]
   24040:	ldr	x9, [x8, #72]
   24044:	cmp	x9, x2
   24048:	b.ls	24090 <PyInit__decimal@@Base+0x1d5dc>  // b.plast
   2404c:	ldr	x9, [x8, #32]
   24050:	cmp	x9, x2
   24054:	b.ls	240b8 <PyInit__decimal@@Base+0x1d604>  // b.plast
   24058:	ldr	x9, [x8, #16]
   2405c:	cmp	x9, x2
   24060:	b.ls	240fc <PyInit__decimal@@Base+0x1d648>  // b.plast
   24064:	ldr	x8, [x8, #8]
   24068:	cmp	x8, x2
   2406c:	mov	w8, #0x1                   	// #1
   24070:	b	24160 <PyInit__decimal@@Base+0x1d6ac>
   24074:	sub	x9, x20, #0x1
   24078:	mov	w8, #0x1                   	// #1
   2407c:	tbnz	x9, #63, 2419c <PyInit__decimal@@Base+0x1d6e8>
   24080:	ldr	x10, [x19, x9, lsl #3]
   24084:	sub	x9, x9, #0x1
   24088:	cbz	x10, 2407c <PyInit__decimal@@Base+0x1d5c8>
   2408c:	b	241a0 <PyInit__decimal@@Base+0x1d6ec>
   24090:	ldr	x9, [x8, #112]
   24094:	cmp	x9, x2
   24098:	b.ls	240d4 <PyInit__decimal@@Base+0x1d620>  // b.plast
   2409c:	ldr	x9, [x8, #88]
   240a0:	cmp	x9, x2
   240a4:	b.ls	2410c <PyInit__decimal@@Base+0x1d658>  // b.plast
   240a8:	ldr	x8, [x8, #80]
   240ac:	cmp	x8, x2
   240b0:	mov	w8, #0xa                   	// #10
   240b4:	b	24160 <PyInit__decimal@@Base+0x1d6ac>
   240b8:	ldr	x9, [x8, #48]
   240bc:	cmp	x9, x2
   240c0:	b.ls	24128 <PyInit__decimal@@Base+0x1d674>  // b.plast
   240c4:	ldr	x8, [x8, #40]
   240c8:	cmp	x8, x2
   240cc:	mov	w8, #0x5                   	// #5
   240d0:	b	24160 <PyInit__decimal@@Base+0x1d6ac>
   240d4:	ldr	x9, [x8, #144]
   240d8:	cmp	x9, x2
   240dc:	b.ls	24144 <PyInit__decimal@@Base+0x1d690>  // b.plast
   240e0:	ldr	x9, [x8, #128]
   240e4:	cmp	x9, x2
   240e8:	b.ls	24154 <PyInit__decimal@@Base+0x1d6a0>  // b.plast
   240ec:	ldr	x8, [x8, #120]
   240f0:	cmp	x8, x2
   240f4:	mov	w8, #0xf                   	// #15
   240f8:	b	24160 <PyInit__decimal@@Base+0x1d6ac>
   240fc:	ldr	x8, [x8, #24]
   24100:	cmp	x8, x2
   24104:	mov	w8, #0x3                   	// #3
   24108:	b	24160 <PyInit__decimal@@Base+0x1d6ac>
   2410c:	ldr	x9, [x8, #104]
   24110:	cmp	x9, x2
   24114:	b.ls	241cc <PyInit__decimal@@Base+0x1d718>  // b.plast
   24118:	ldr	x8, [x8, #96]
   2411c:	cmp	x8, x2
   24120:	mov	w8, #0xc                   	// #12
   24124:	b	24160 <PyInit__decimal@@Base+0x1d6ac>
   24128:	ldr	x9, [x8, #64]
   2412c:	cmp	x9, x2
   24130:	b.ls	241d4 <PyInit__decimal@@Base+0x1d720>  // b.plast
   24134:	ldr	x8, [x8, #56]
   24138:	cmp	x8, x2
   2413c:	mov	w8, #0x7                   	// #7
   24140:	b	24160 <PyInit__decimal@@Base+0x1d6ac>
   24144:	ldr	x8, [x8, #152]
   24148:	cmp	x8, x2
   2414c:	mov	w8, #0x13                  	// #19
   24150:	b	24160 <PyInit__decimal@@Base+0x1d6ac>
   24154:	ldr	x8, [x8, #136]
   24158:	cmp	x8, x2
   2415c:	mov	w8, #0x11                  	// #17
   24160:	cinc	x8, x8, ls  // ls = plast
   24164:	sub	x3, x8, #0x1
   24168:	add	x0, sp, #0x8
   2416c:	mov	x1, sp
   24170:	bl	35664 <PyInit__decimal@@Base+0x2ebb0>
   24174:	ldr	x8, [sp]
   24178:	subs	x9, x20, #0x2
   2417c:	b.lt	241a4 <PyInit__decimal@@Base+0x1d6f0>  // b.tstop
   24180:	cbnz	x8, 241a4 <PyInit__decimal@@Base+0x1d6f0>
   24184:	mov	w8, #0x1                   	// #1
   24188:	tbnz	x9, #63, 2419c <PyInit__decimal@@Base+0x1d6e8>
   2418c:	ldr	x10, [x19, x9, lsl #3]
   24190:	sub	x9, x9, #0x1
   24194:	cbz	x10, 24188 <PyInit__decimal@@Base+0x1d6d4>
   24198:	b	241a0 <PyInit__decimal@@Base+0x1d6ec>
   2419c:	mov	x8, xzr
   241a0:	str	x8, [sp]
   241a4:	ldr	x0, [sp, #8]
   241a8:	cmp	x0, #0x5
   241ac:	b.eq	241b4 <PyInit__decimal@@Base+0x1d700>  // b.none
   241b0:	cbnz	x0, 241bc <PyInit__decimal@@Base+0x1d708>
   241b4:	cmp	x8, #0x0
   241b8:	cinc	x0, x0, ne  // ne = any
   241bc:	ldp	x20, x19, [sp, #32]
   241c0:	ldp	x29, x30, [sp, #16]
   241c4:	add	sp, sp, #0x30
   241c8:	ret
   241cc:	mov	w8, #0xe                   	// #14
   241d0:	b	24164 <PyInit__decimal@@Base+0x1d6b0>
   241d4:	mov	w8, #0x9                   	// #9
   241d8:	b	24164 <PyInit__decimal@@Base+0x1d6b0>
   241dc:	stp	x29, x30, [sp, #-64]!
   241e0:	str	x23, [sp, #16]
   241e4:	stp	x22, x21, [sp, #32]
   241e8:	stp	x20, x19, [sp, #48]
   241ec:	mov	x29, sp
   241f0:	mov	x19, x1
   241f4:	ldr	x1, [x1, #40]
   241f8:	ldr	x9, [x19, #24]
   241fc:	mov	x21, x3
   24200:	mov	x20, x0
   24204:	cbz	x2, 24294 <PyInit__decimal@@Base+0x1d7e0>
   24208:	add	x8, x1, x9, lsl #3
   2420c:	ldur	x8, [x8, #-8]
   24210:	cbz	x8, 24294 <PyInit__decimal@@Base+0x1d7e0>
   24214:	ldr	x8, [x19, #16]
   24218:	mov	x22, x2
   2421c:	subs	x8, x8, x2
   24220:	b.le	242d8 <PyInit__decimal@@Base+0x1d824>
   24224:	mov	x10, #0x9436                	// #37942
   24228:	movk	x10, #0x50d7, lsl #16
   2422c:	movk	x10, #0x435e, lsl #32
   24230:	movk	x10, #0xd79, lsl #48
   24234:	smulh	x10, x8, x10
   24238:	mov	x11, #0xffffffffffffffed    	// #-19
   2423c:	add	x10, x10, x10, lsr #63
   24240:	mul	x11, x10, x11
   24244:	cmn	x11, x8
   24248:	cinc	x23, x10, ne  // ne = any
   2424c:	cmp	x20, x19
   24250:	str	x8, [x20, #16]
   24254:	b.eq	24350 <PyInit__decimal@@Base+0x1d89c>  // b.none
   24258:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2425c:	ldr	x8, [x8, #1344]
   24260:	ldr	x10, [x20, #32]
   24264:	cmp	x8, x23
   24268:	csel	x8, x23, x8, lt  // lt = tstop
   2426c:	cmp	x8, x10
   24270:	b.eq	24414 <PyInit__decimal@@Base+0x1d960>  // b.none
   24274:	ldrb	w11, [x20]
   24278:	tbnz	w11, #5, 243f0 <PyInit__decimal@@Base+0x1d93c>
   2427c:	mov	x0, x20
   24280:	mov	x1, x8
   24284:	mov	x2, x21
   24288:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2428c:	cbnz	w0, 2440c <PyInit__decimal@@Base+0x1d958>
   24290:	b	2445c <PyInit__decimal@@Base+0x1d9a8>
   24294:	cmp	x20, x19
   24298:	b.eq	24348 <PyInit__decimal@@Base+0x1d894>  // b.none
   2429c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   242a0:	ldr	x8, [x8, #1344]
   242a4:	ldr	x10, [x20, #32]
   242a8:	cmp	x8, x9
   242ac:	csel	x8, x9, x8, lt  // lt = tstop
   242b0:	cmp	x8, x10
   242b4:	b.eq	243bc <PyInit__decimal@@Base+0x1d908>  // b.none
   242b8:	ldrb	w11, [x20]
   242bc:	tbnz	w11, #5, 24398 <PyInit__decimal@@Base+0x1d8e4>
   242c0:	mov	x0, x20
   242c4:	mov	x1, x8
   242c8:	mov	x2, x21
   242cc:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   242d0:	cbnz	w0, 243b4 <PyInit__decimal@@Base+0x1d900>
   242d4:	b	2445c <PyInit__decimal@@Base+0x1d9a8>
   242d8:	cset	w2, eq  // eq = none
   242dc:	mov	x0, x1
   242e0:	mov	x1, x9
   242e4:	bl	24010 <PyInit__decimal@@Base+0x1d55c>
   242e8:	ldrb	w8, [x20]
   242ec:	mov	x22, x0
   242f0:	tbnz	w8, #5, 24330 <PyInit__decimal@@Base+0x1d87c>
   242f4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   242f8:	ldr	x8, [x20, #32]
   242fc:	ldr	x1, [x21, #1344]
   24300:	cmp	x8, x1
   24304:	b.le	24330 <PyInit__decimal@@Base+0x1d87c>
   24308:	strb	wzr, [x29, #28]
   2430c:	ldr	x0, [x20, #40]
   24310:	add	x3, x29, #0x1c
   24314:	mov	w2, #0x8                   	// #8
   24318:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2431c:	str	x0, [x20, #40]
   24320:	ldrb	w8, [x29, #28]
   24324:	cbnz	w8, 24330 <PyInit__decimal@@Base+0x1d87c>
   24328:	ldr	x8, [x21, #1344]
   2432c:	str	x8, [x20, #32]
   24330:	ldr	x8, [x20, #40]
   24334:	mov	w9, #0x1                   	// #1
   24338:	dup	v0.2d, x9
   2433c:	str	q0, [x20, #16]
   24340:	str	xzr, [x8]
   24344:	b	2442c <PyInit__decimal@@Base+0x1d978>
   24348:	mov	x22, xzr
   2434c:	b	24444 <PyInit__decimal@@Base+0x1d990>
   24350:	mov	x0, x1
   24354:	mov	x2, x9
   24358:	mov	x3, x22
   2435c:	bl	1c194 <PyInit__decimal@@Base+0x156e0>
   24360:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   24364:	ldr	x9, [x8, #1344]
   24368:	ldr	x8, [x19, #32]
   2436c:	mov	x22, x0
   24370:	cmp	x9, x23
   24374:	csel	x1, x23, x9, lt  // lt = tstop
   24378:	cmp	x1, x8
   2437c:	b.eq	24428 <PyInit__decimal@@Base+0x1d974>  // b.none
   24380:	ldrb	w9, [x19]
   24384:	tbnz	w9, #5, 24464 <PyInit__decimal@@Base+0x1d9b0>
   24388:	mov	x0, x19
   2438c:	mov	x2, x21
   24390:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   24394:	b	24428 <PyInit__decimal@@Base+0x1d974>
   24398:	cmp	x8, x10
   2439c:	b.le	243bc <PyInit__decimal@@Base+0x1d908>
   243a0:	mov	x0, x20
   243a4:	mov	x1, x8
   243a8:	mov	x2, x21
   243ac:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   243b0:	cbz	w0, 2445c <PyInit__decimal@@Base+0x1d9a8>
   243b4:	ldr	x9, [x19, #24]
   243b8:	ldr	x1, [x19, #40]
   243bc:	ldrb	w8, [x19]
   243c0:	ldrb	w10, [x20]
   243c4:	ldr	x0, [x20, #40]
   243c8:	bfxil	w10, w8, #0, #4
   243cc:	strb	w10, [x20]
   243d0:	ldur	q0, [x19, #8]
   243d4:	str	x9, [x20, #24]
   243d8:	stur	q0, [x20, #8]
   243dc:	ldr	x8, [x19, #24]
   243e0:	lsl	x2, x8, #3
   243e4:	bl	63c0 <memcpy@plt>
   243e8:	mov	x22, xzr
   243ec:	b	24444 <PyInit__decimal@@Base+0x1d990>
   243f0:	cmp	x8, x10
   243f4:	b.le	24414 <PyInit__decimal@@Base+0x1d960>
   243f8:	mov	x0, x20
   243fc:	mov	x1, x8
   24400:	mov	x2, x21
   24404:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   24408:	cbz	w0, 2445c <PyInit__decimal@@Base+0x1d9a8>
   2440c:	ldr	x1, [x19, #40]
   24410:	ldr	x9, [x19, #24]
   24414:	ldr	x0, [x20, #40]
   24418:	mov	x2, x9
   2441c:	mov	x3, x22
   24420:	bl	1c194 <PyInit__decimal@@Base+0x156e0>
   24424:	mov	x22, x0
   24428:	str	x23, [x20, #24]
   2442c:	ldrb	w8, [x19]
   24430:	ldrb	w9, [x20]
   24434:	bfxil	w9, w8, #0, #4
   24438:	strb	w9, [x20]
   2443c:	ldr	x8, [x19, #8]
   24440:	str	x8, [x20, #8]
   24444:	mov	x0, x22
   24448:	ldp	x20, x19, [sp, #48]
   2444c:	ldp	x22, x21, [sp, #32]
   24450:	ldr	x23, [sp, #16]
   24454:	ldp	x29, x30, [sp], #64
   24458:	ret
   2445c:	mov	x22, #0xffffffffffffffff    	// #-1
   24460:	b	24444 <PyInit__decimal@@Base+0x1d990>
   24464:	cmp	x1, x8
   24468:	b.le	24428 <PyInit__decimal@@Base+0x1d974>
   2446c:	mov	x0, x19
   24470:	mov	x2, x21
   24474:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   24478:	b	24428 <PyInit__decimal@@Base+0x1d974>
   2447c:	sub	sp, sp, #0x60
   24480:	stp	x29, x30, [sp, #16]
   24484:	stp	x26, x25, [sp, #32]
   24488:	stp	x24, x23, [sp, #48]
   2448c:	stp	x22, x21, [sp, #64]
   24490:	stp	x20, x19, [sp, #80]
   24494:	add	x29, sp, #0x10
   24498:	ldrb	w8, [x1]
   2449c:	mov	x21, x4
   244a0:	mov	x19, x0
   244a4:	tst	w8, #0xe
   244a8:	b.ne	244d4 <PyInit__decimal@@Base+0x1da20>  // b.any
   244ac:	ldrb	w9, [x2]
   244b0:	and	w10, w9, #0xe
   244b4:	bfxil	w10, w8, #0, #1
   244b8:	and	w8, w9, #0x1
   244bc:	orr	w8, w8, w10
   244c0:	cbnz	w8, 244d4 <PyInit__decimal@@Base+0x1da20>
   244c4:	ldr	x8, [x1, #8]
   244c8:	cbnz	x8, 244d4 <PyInit__decimal@@Base+0x1da20>
   244cc:	ldr	x8, [x2, #8]
   244d0:	cbz	x8, 24558 <PyInit__decimal@@Base+0x1daa4>
   244d4:	ldrb	w8, [x19]
   244d8:	tbnz	w8, #5, 2451c <PyInit__decimal@@Base+0x1da68>
   244dc:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   244e0:	ldr	x9, [x19, #32]
   244e4:	ldr	x1, [x20, #1344]
   244e8:	cmp	x9, x1
   244ec:	b.le	2451c <PyInit__decimal@@Base+0x1da68>
   244f0:	sturb	wzr, [x29, #-4]
   244f4:	ldr	x0, [x19, #40]
   244f8:	sub	x3, x29, #0x4
   244fc:	mov	w2, #0x8                   	// #8
   24500:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   24504:	str	x0, [x19, #40]
   24508:	ldurb	w8, [x29, #-4]
   2450c:	cbnz	w8, 24518 <PyInit__decimal@@Base+0x1da64>
   24510:	ldr	x8, [x20, #1344]
   24514:	str	x8, [x19, #32]
   24518:	ldrb	w8, [x19]
   2451c:	and	w8, w8, #0xf0
   24520:	orr	w8, w8, #0x4
   24524:	stp	xzr, xzr, [x19, #16]
   24528:	strb	w8, [x19]
   2452c:	str	xzr, [x19, #8]
   24530:	ldr	w8, [x21]
   24534:	orr	w8, w8, #0x100
   24538:	str	w8, [x21]
   2453c:	ldp	x20, x19, [sp, #80]
   24540:	ldp	x22, x21, [sp, #64]
   24544:	ldp	x24, x23, [sp, #48]
   24548:	ldp	x26, x25, [sp, #32]
   2454c:	ldp	x29, x30, [sp, #16]
   24550:	add	sp, sp, #0x60
   24554:	ret
   24558:	ldr	x8, [x2, #16]
   2455c:	ldr	x9, [x1, #16]
   24560:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   24564:	ldr	x10, [x23, #1344]
   24568:	mov	x20, x3
   2456c:	cmp	x8, x9
   24570:	csel	x25, x2, x1, gt
   24574:	ldr	x9, [x25, #24]
   24578:	ldr	x8, [x19, #32]
   2457c:	csel	x24, x1, x2, gt
   24580:	cmp	x10, x9
   24584:	csel	x1, x9, x10, lt  // lt = tstop
   24588:	cmp	x1, x8
   2458c:	b.eq	245c0 <PyInit__decimal@@Base+0x1db0c>  // b.none
   24590:	ldrb	w9, [x19]
   24594:	tbnz	w9, #5, 245a8 <PyInit__decimal@@Base+0x1daf4>
   24598:	mov	x0, x19
   2459c:	mov	x2, x21
   245a0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   245a4:	b	245bc <PyInit__decimal@@Base+0x1db08>
   245a8:	cmp	x1, x8
   245ac:	b.le	245c0 <PyInit__decimal@@Base+0x1db0c>
   245b0:	mov	x0, x19
   245b4:	mov	x2, x21
   245b8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   245bc:	cbz	w0, 2453c <PyInit__decimal@@Base+0x1da88>
   245c0:	ldr	x12, [x24, #40]
   245c4:	ldr	x8, [x25, #40]
   245c8:	ldr	x9, [x24, #24]
   245cc:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x3854c>
   245d0:	ldr	x11, [x12]
   245d4:	ldr	x10, [x8]
   245d8:	sub	x9, x9, #0x1
   245dc:	cmp	x9, #0x1
   245e0:	add	x22, x22, #0x370
   245e4:	mov	x9, xzr
   245e8:	b.lt	2467c <PyInit__decimal@@Base+0x1dbc8>  // b.tstop
   245ec:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   245f0:	movk	x13, #0xcccd
   245f4:	mov	w14, #0xa                   	// #10
   245f8:	mov	x16, xzr
   245fc:	mov	x15, xzr
   24600:	b	24620 <PyInit__decimal@@Base+0x1db6c>
   24604:	ldr	x10, [x22, x16]
   24608:	add	x16, x16, #0x8
   2460c:	cmp	x16, #0x98
   24610:	add	x15, x10, x15
   24614:	mov	x10, x18
   24618:	mov	x11, x17
   2461c:	b.eq	24654 <PyInit__decimal@@Base+0x1dba0>  // b.none
   24620:	umulh	x17, x11, x13
   24624:	umulh	x18, x10, x13
   24628:	lsr	x17, x17, #3
   2462c:	lsr	x18, x18, #3
   24630:	msub	x11, x17, x14, x11
   24634:	msub	x10, x18, x14, x10
   24638:	orr	w0, w10, w11
   2463c:	tst	x0, #0xe
   24640:	b.ne	248e4 <PyInit__decimal@@Base+0x1de30>  // b.any
   24644:	tst	x10, x11
   24648:	b.ne	24604 <PyInit__decimal@@Base+0x1db50>  // b.any
   2464c:	mov	x10, xzr
   24650:	b	24608 <PyInit__decimal@@Base+0x1db54>
   24654:	ldr	x10, [x19, #40]
   24658:	str	x15, [x10, x9, lsl #3]
   2465c:	add	x9, x9, #0x1
   24660:	ldr	x15, [x24, #24]
   24664:	lsl	x10, x9, #3
   24668:	ldr	x11, [x12, x10]
   2466c:	ldr	x10, [x8, x10]
   24670:	sub	x15, x15, #0x1
   24674:	cmp	x9, x15
   24678:	b.lt	245f8 <PyInit__decimal@@Base+0x1db44>  // b.tstop
   2467c:	ldr	x26, [x22, #72]
   24680:	cmp	x26, x11
   24684:	b.ls	246b0 <PyInit__decimal@@Base+0x1dbfc>  // b.plast
   24688:	ldr	x12, [x22, #32]
   2468c:	cmp	x12, x11
   24690:	b.ls	246d8 <PyInit__decimal@@Base+0x1dc24>  // b.plast
   24694:	ldr	x12, [x22, #16]
   24698:	cmp	x12, x11
   2469c:	b.ls	2471c <PyInit__decimal@@Base+0x1dc68>  // b.plast
   246a0:	ldr	x12, [x22, #8]
   246a4:	cmp	x12, x11
   246a8:	mov	w12, #0x1                   	// #1
   246ac:	b	24780 <PyInit__decimal@@Base+0x1dccc>
   246b0:	ldr	x12, [x22, #112]
   246b4:	cmp	x12, x11
   246b8:	b.ls	246f4 <PyInit__decimal@@Base+0x1dc40>  // b.plast
   246bc:	ldr	x12, [x22, #88]
   246c0:	cmp	x12, x11
   246c4:	b.ls	2472c <PyInit__decimal@@Base+0x1dc78>  // b.plast
   246c8:	ldr	x12, [x22, #80]
   246cc:	cmp	x12, x11
   246d0:	mov	w12, #0xa                   	// #10
   246d4:	b	24780 <PyInit__decimal@@Base+0x1dccc>
   246d8:	ldr	x12, [x22, #48]
   246dc:	cmp	x12, x11
   246e0:	b.ls	24748 <PyInit__decimal@@Base+0x1dc94>  // b.plast
   246e4:	ldr	x12, [x22, #40]
   246e8:	cmp	x12, x11
   246ec:	mov	w12, #0x5                   	// #5
   246f0:	b	24780 <PyInit__decimal@@Base+0x1dccc>
   246f4:	ldr	x12, [x22, #144]
   246f8:	cmp	x12, x11
   246fc:	b.ls	24764 <PyInit__decimal@@Base+0x1dcb0>  // b.plast
   24700:	ldr	x12, [x22, #128]
   24704:	cmp	x12, x11
   24708:	b.ls	24774 <PyInit__decimal@@Base+0x1dcc0>  // b.plast
   2470c:	ldr	x12, [x22, #120]
   24710:	cmp	x12, x11
   24714:	mov	w12, #0xf                   	// #15
   24718:	b	24780 <PyInit__decimal@@Base+0x1dccc>
   2471c:	ldr	x12, [x22, #24]
   24720:	cmp	x12, x11
   24724:	mov	w12, #0x3                   	// #3
   24728:	b	24780 <PyInit__decimal@@Base+0x1dccc>
   2472c:	ldr	x12, [x22, #104]
   24730:	cmp	x12, x11
   24734:	b.ls	24924 <PyInit__decimal@@Base+0x1de70>  // b.plast
   24738:	ldr	x12, [x22, #96]
   2473c:	cmp	x12, x11
   24740:	mov	w12, #0xc                   	// #12
   24744:	b	24780 <PyInit__decimal@@Base+0x1dccc>
   24748:	ldr	x12, [x22, #64]
   2474c:	cmp	x12, x11
   24750:	b.ls	2492c <PyInit__decimal@@Base+0x1de78>  // b.plast
   24754:	ldr	x12, [x22, #56]
   24758:	cmp	x12, x11
   2475c:	mov	w12, #0x7                   	// #7
   24760:	b	24780 <PyInit__decimal@@Base+0x1dccc>
   24764:	ldr	x12, [x22, #152]
   24768:	cmp	x12, x11
   2476c:	mov	w12, #0x13                  	// #19
   24770:	b	24780 <PyInit__decimal@@Base+0x1dccc>
   24774:	ldr	x12, [x22, #136]
   24778:	cmp	x12, x11
   2477c:	mov	w12, #0x11                  	// #17
   24780:	cinc	x12, x12, ls  // ls = plast
   24784:	mov	x15, #0xcccccccccccccccc    	// #-3689348814741910324
   24788:	mov	x13, xzr
   2478c:	mov	x14, xzr
   24790:	movk	x15, #0xcccd
   24794:	mov	w16, #0xa                   	// #10
   24798:	b	247b4 <PyInit__decimal@@Base+0x1dd00>
   2479c:	ldr	x11, [x22, x13, lsl #3]
   247a0:	add	x13, x13, #0x1
   247a4:	cmp	x13, x12
   247a8:	add	x14, x11, x14
   247ac:	mov	x11, x17
   247b0:	b.cs	247ec <PyInit__decimal@@Base+0x1dd38>  // b.hs, b.nlast
   247b4:	mov	x18, x10
   247b8:	umulh	x10, x11, x15
   247bc:	umulh	x0, x18, x15
   247c0:	lsr	x17, x10, #3
   247c4:	lsr	x10, x0, #3
   247c8:	msub	x11, x17, x16, x11
   247cc:	msub	x18, x10, x16, x18
   247d0:	orr	w0, w18, w11
   247d4:	tst	x0, #0xe
   247d8:	b.ne	248e4 <PyInit__decimal@@Base+0x1de30>  // b.any
   247dc:	tst	x18, x11
   247e0:	b.ne	2479c <PyInit__decimal@@Base+0x1dce8>  // b.any
   247e4:	mov	x11, xzr
   247e8:	b	247a0 <PyInit__decimal@@Base+0x1dcec>
   247ec:	ldr	x11, [x19, #40]
   247f0:	sub	w12, w13, #0x1
   247f4:	cmp	w12, #0x11
   247f8:	str	x14, [x11, x9, lsl #3]
   247fc:	b.hi	24834 <PyInit__decimal@@Base+0x1dd80>  // b.pmore
   24800:	sub	w12, w13, #0x1
   24804:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   24808:	movk	x13, #0xcccd
   2480c:	mov	w14, #0xa                   	// #10
   24810:	umulh	x15, x10, x13
   24814:	lsr	x15, x15, #3
   24818:	msub	x10, x15, x14, x10
   2481c:	cmp	x10, #0x1
   24820:	b.hi	248e4 <PyInit__decimal@@Base+0x1de30>  // b.pmore
   24824:	add	w12, w12, #0x1
   24828:	cmp	w12, #0x12
   2482c:	mov	x10, x15
   24830:	b.cc	24810 <PyInit__decimal@@Base+0x1dd5c>  // b.lo, b.ul, b.last
   24834:	ldr	x10, [x25, #24]
   24838:	add	x9, x9, #0x1
   2483c:	cmp	x9, x10
   24840:	b.ge	24884 <PyInit__decimal@@Base+0x1ddd0>  // b.tcont
   24844:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
   24848:	movk	x12, #0xcccd
   2484c:	mov	w13, #0xa                   	// #10
   24850:	ldr	x15, [x8, x9, lsl #3]
   24854:	mov	w14, #0x13                  	// #19
   24858:	umulh	x16, x15, x12
   2485c:	lsr	x16, x16, #3
   24860:	msub	x15, x16, x13, x15
   24864:	cmp	x15, #0x1
   24868:	b.hi	248e4 <PyInit__decimal@@Base+0x1de30>  // b.pmore
   2486c:	subs	w14, w14, #0x1
   24870:	mov	x15, x16
   24874:	b.ne	24858 <PyInit__decimal@@Base+0x1dda4>  // b.any
   24878:	add	x9, x9, #0x1
   2487c:	cmp	x9, x10
   24880:	b.lt	24850 <PyInit__decimal@@Base+0x1dd9c>  // b.tstop
   24884:	ldrb	w8, [x19]
   24888:	str	xzr, [x19, #8]
   2488c:	sub	x10, x11, #0x8
   24890:	and	w9, w8, #0xf0
   24894:	strb	w9, [x19]
   24898:	ldr	x12, [x24, #24]
   2489c:	mov	x9, x12
   248a0:	cmp	x12, #0x2
   248a4:	b.lt	248b4 <PyInit__decimal@@Base+0x1de00>  // b.tstop
   248a8:	ldr	x11, [x10, x9, lsl #3]
   248ac:	sub	x12, x9, #0x1
   248b0:	cbz	x11, 2489c <PyInit__decimal@@Base+0x1dde8>
   248b4:	str	x9, [x19, #24]
   248b8:	ldr	x11, [x23, #1344]
   248bc:	ldr	x10, [x19, #32]
   248c0:	cmp	x11, x9
   248c4:	csel	x1, x9, x11, lt  // lt = tstop
   248c8:	cmp	x1, x10
   248cc:	b.eq	24948 <PyInit__decimal@@Base+0x1de94>  // b.none
   248d0:	tbnz	w8, #5, 24934 <PyInit__decimal@@Base+0x1de80>
   248d4:	mov	x0, x19
   248d8:	mov	x2, x21
   248dc:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   248e0:	b	24948 <PyInit__decimal@@Base+0x1de94>
   248e4:	ldrb	w8, [x19]
   248e8:	tbnz	w8, #5, 2451c <PyInit__decimal@@Base+0x1da68>
   248ec:	ldr	x9, [x19, #32]
   248f0:	ldr	x1, [x23, #1344]
   248f4:	cmp	x9, x1
   248f8:	b.le	2451c <PyInit__decimal@@Base+0x1da68>
   248fc:	strb	wzr, [sp, #8]
   24900:	ldr	x0, [x19, #40]
   24904:	add	x3, sp, #0x8
   24908:	mov	w2, #0x8                   	// #8
   2490c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   24910:	str	x0, [x19, #40]
   24914:	ldrb	w8, [sp, #8]
   24918:	cbnz	w8, 24518 <PyInit__decimal@@Base+0x1da64>
   2491c:	ldr	x8, [x23, #1344]
   24920:	b	24514 <PyInit__decimal@@Base+0x1da60>
   24924:	mov	w12, #0xe                   	// #14
   24928:	b	24784 <PyInit__decimal@@Base+0x1dcd0>
   2492c:	mov	w12, #0x9                   	// #9
   24930:	b	24784 <PyInit__decimal@@Base+0x1dcd0>
   24934:	cmp	x1, x10
   24938:	b.le	24948 <PyInit__decimal@@Base+0x1de94>
   2493c:	mov	x0, x19
   24940:	mov	x2, x21
   24944:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   24948:	ldr	x9, [x19, #40]
   2494c:	ldr	x8, [x19, #24]
   24950:	add	x9, x9, x8, lsl #3
   24954:	ldur	x9, [x9, #-8]
   24958:	cmp	x26, x9
   2495c:	b.ls	24988 <PyInit__decimal@@Base+0x1ded4>  // b.plast
   24960:	ldr	x10, [x22, #32]
   24964:	cmp	x10, x9
   24968:	b.ls	249b0 <PyInit__decimal@@Base+0x1defc>  // b.plast
   2496c:	ldr	x10, [x22, #16]
   24970:	cmp	x10, x9
   24974:	b.ls	249f4 <PyInit__decimal@@Base+0x1df40>  // b.plast
   24978:	ldr	x10, [x22, #8]
   2497c:	cmp	x10, x9
   24980:	mov	w9, #0x1                   	// #1
   24984:	b	24a58 <PyInit__decimal@@Base+0x1dfa4>
   24988:	ldr	x10, [x22, #112]
   2498c:	cmp	x10, x9
   24990:	b.ls	249cc <PyInit__decimal@@Base+0x1df18>  // b.plast
   24994:	ldr	x10, [x22, #88]
   24998:	cmp	x10, x9
   2499c:	b.ls	24a04 <PyInit__decimal@@Base+0x1df50>  // b.plast
   249a0:	ldr	x10, [x22, #80]
   249a4:	cmp	x10, x9
   249a8:	mov	w9, #0xa                   	// #10
   249ac:	b	24a58 <PyInit__decimal@@Base+0x1dfa4>
   249b0:	ldr	x10, [x22, #48]
   249b4:	cmp	x10, x9
   249b8:	b.ls	24a20 <PyInit__decimal@@Base+0x1df6c>  // b.plast
   249bc:	ldr	x10, [x22, #40]
   249c0:	cmp	x10, x9
   249c4:	mov	w9, #0x5                   	// #5
   249c8:	b	24a58 <PyInit__decimal@@Base+0x1dfa4>
   249cc:	ldr	x10, [x22, #144]
   249d0:	cmp	x10, x9
   249d4:	b.ls	24a3c <PyInit__decimal@@Base+0x1df88>  // b.plast
   249d8:	ldr	x10, [x22, #128]
   249dc:	cmp	x10, x9
   249e0:	b.ls	24a4c <PyInit__decimal@@Base+0x1df98>  // b.plast
   249e4:	ldr	x10, [x22, #120]
   249e8:	cmp	x10, x9
   249ec:	mov	w9, #0xf                   	// #15
   249f0:	b	24a58 <PyInit__decimal@@Base+0x1dfa4>
   249f4:	ldr	x10, [x22, #24]
   249f8:	cmp	x10, x9
   249fc:	mov	w9, #0x3                   	// #3
   24a00:	b	24a58 <PyInit__decimal@@Base+0x1dfa4>
   24a04:	ldr	x10, [x22, #104]
   24a08:	cmp	x10, x9
   24a0c:	b.ls	24a90 <PyInit__decimal@@Base+0x1dfdc>  // b.plast
   24a10:	ldr	x10, [x22, #96]
   24a14:	cmp	x10, x9
   24a18:	mov	w9, #0xc                   	// #12
   24a1c:	b	24a58 <PyInit__decimal@@Base+0x1dfa4>
   24a20:	ldr	x10, [x22, #64]
   24a24:	cmp	x10, x9
   24a28:	b.ls	24a98 <PyInit__decimal@@Base+0x1dfe4>  // b.plast
   24a2c:	ldr	x10, [x22, #56]
   24a30:	cmp	x10, x9
   24a34:	mov	w9, #0x7                   	// #7
   24a38:	b	24a58 <PyInit__decimal@@Base+0x1dfa4>
   24a3c:	ldr	x10, [x22, #152]
   24a40:	cmp	x10, x9
   24a44:	mov	w9, #0x13                  	// #19
   24a48:	b	24a58 <PyInit__decimal@@Base+0x1dfa4>
   24a4c:	ldr	x10, [x22, #136]
   24a50:	cmp	x10, x9
   24a54:	mov	w9, #0x11                  	// #17
   24a58:	cinc	x9, x9, ls  // ls = plast
   24a5c:	mov	w10, #0x13                  	// #19
   24a60:	madd	x8, x8, x10, x9
   24a64:	sub	x8, x8, #0x13
   24a68:	str	x8, [x19, #16]
   24a6c:	mov	x0, x19
   24a70:	mov	x1, x20
   24a74:	ldp	x20, x19, [sp, #80]
   24a78:	ldp	x22, x21, [sp, #64]
   24a7c:	ldp	x24, x23, [sp, #48]
   24a80:	ldp	x26, x25, [sp, #32]
   24a84:	ldp	x29, x30, [sp, #16]
   24a88:	add	sp, sp, #0x60
   24a8c:	b	24aa0 <PyInit__decimal@@Base+0x1dfec>
   24a90:	mov	w9, #0xe                   	// #14
   24a94:	b	24a5c <PyInit__decimal@@Base+0x1dfa8>
   24a98:	mov	w9, #0x9                   	// #9
   24a9c:	b	24a5c <PyInit__decimal@@Base+0x1dfa8>
   24aa0:	sub	sp, sp, #0x40
   24aa4:	stp	x29, x30, [sp, #16]
   24aa8:	stp	x22, x21, [sp, #32]
   24aac:	stp	x20, x19, [sp, #48]
   24ab0:	add	x29, sp, #0x10
   24ab4:	ldr	x20, [x0, #24]
   24ab8:	mov	x19, x0
   24abc:	cmp	x20, #0x1
   24ac0:	b.lt	24ccc <PyInit__decimal@@Base+0x1e218>  // b.tstop
   24ac4:	ldr	x9, [x19, #16]
   24ac8:	ldr	x8, [x1]
   24acc:	cmp	x9, x8
   24ad0:	b.le	24ccc <PyInit__decimal@@Base+0x1e218>
   24ad4:	mov	x9, #0x9436                	// #37942
   24ad8:	movk	x9, #0x50d7, lsl #16
   24adc:	movk	x9, #0x435e, lsl #32
   24ae0:	movk	x9, #0xd79, lsl #48
   24ae4:	smulh	x9, x8, x9
   24ae8:	mov	x10, #0xffffffffffffffed    	// #-19
   24aec:	add	x9, x9, x9, lsr #63
   24af0:	madd	x12, x9, x10, x8
   24af4:	cmp	x12, #0x0
   24af8:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x3854c>
   24afc:	cset	w10, ne  // ne = any
   24b00:	cinc	x8, x9, ne  // ne = any
   24b04:	add	x22, x22, #0x370
   24b08:	cbz	x12, 24b2c <PyInit__decimal@@Base+0x1e078>
   24b0c:	ldr	x11, [x19, #40]
   24b10:	ldr	x12, [x22, x12, lsl #3]
   24b14:	add	x13, x11, x8, lsl #3
   24b18:	ldur	x14, [x13, #-8]
   24b1c:	udiv	x15, x14, x12
   24b20:	msub	x12, x15, x12, x14
   24b24:	stur	x12, [x13, #-8]
   24b28:	b	24b30 <PyInit__decimal@@Base+0x1e07c>
   24b2c:	ldr	x11, [x19, #40]
   24b30:	add	x9, x9, x10
   24b34:	mov	w10, #0x13                  	// #19
   24b38:	mul	x9, x9, x10
   24b3c:	sub	x10, x9, #0x13
   24b40:	sub	x9, x11, #0x8
   24b44:	mov	x20, x8
   24b48:	cmp	x8, #0x2
   24b4c:	mov	x21, x10
   24b50:	b.lt	24b64 <PyInit__decimal@@Base+0x1e0b0>  // b.tstop
   24b54:	ldr	x11, [x9, x20, lsl #3]
   24b58:	sub	x8, x20, #0x1
   24b5c:	sub	x10, x21, #0x13
   24b60:	cbz	x11, 24b44 <PyInit__decimal@@Base+0x1e090>
   24b64:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   24b68:	ldr	x9, [x8, #1344]
   24b6c:	ldr	x8, [x19, #32]
   24b70:	cmp	x9, x20
   24b74:	csel	x1, x20, x9, lt  // lt = tstop
   24b78:	cmp	x1, x8
   24b7c:	b.eq	24bac <PyInit__decimal@@Base+0x1e0f8>  // b.none
   24b80:	ldrb	w9, [x19]
   24b84:	tbnz	w9, #5, 24b98 <PyInit__decimal@@Base+0x1e0e4>
   24b88:	sub	x2, x29, #0x4
   24b8c:	mov	x0, x19
   24b90:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   24b94:	b	24bac <PyInit__decimal@@Base+0x1e0f8>
   24b98:	cmp	x1, x8
   24b9c:	b.le	24bac <PyInit__decimal@@Base+0x1e0f8>
   24ba0:	sub	x2, x29, #0x4
   24ba4:	mov	x0, x19
   24ba8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   24bac:	ldr	x8, [x19, #40]
   24bb0:	str	x20, [x19, #24]
   24bb4:	ldr	x9, [x22, #72]
   24bb8:	add	x8, x8, x20, lsl #3
   24bbc:	ldur	x8, [x8, #-8]
   24bc0:	cmp	x9, x8
   24bc4:	b.ls	24bf0 <PyInit__decimal@@Base+0x1e13c>  // b.plast
   24bc8:	ldr	x9, [x22, #32]
   24bcc:	cmp	x9, x8
   24bd0:	b.ls	24c18 <PyInit__decimal@@Base+0x1e164>  // b.plast
   24bd4:	ldr	x9, [x22, #16]
   24bd8:	cmp	x9, x8
   24bdc:	b.ls	24c5c <PyInit__decimal@@Base+0x1e1a8>  // b.plast
   24be0:	ldr	x9, [x22, #8]
   24be4:	cmp	x9, x8
   24be8:	mov	w8, #0x1                   	// #1
   24bec:	b	24cc0 <PyInit__decimal@@Base+0x1e20c>
   24bf0:	ldr	x9, [x22, #112]
   24bf4:	cmp	x9, x8
   24bf8:	b.ls	24c34 <PyInit__decimal@@Base+0x1e180>  // b.plast
   24bfc:	ldr	x9, [x22, #88]
   24c00:	cmp	x9, x8
   24c04:	b.ls	24c6c <PyInit__decimal@@Base+0x1e1b8>  // b.plast
   24c08:	ldr	x9, [x22, #80]
   24c0c:	cmp	x9, x8
   24c10:	mov	w8, #0xa                   	// #10
   24c14:	b	24cc0 <PyInit__decimal@@Base+0x1e20c>
   24c18:	ldr	x9, [x22, #48]
   24c1c:	cmp	x9, x8
   24c20:	b.ls	24c88 <PyInit__decimal@@Base+0x1e1d4>  // b.plast
   24c24:	ldr	x9, [x22, #40]
   24c28:	cmp	x9, x8
   24c2c:	mov	w8, #0x5                   	// #5
   24c30:	b	24cc0 <PyInit__decimal@@Base+0x1e20c>
   24c34:	ldr	x9, [x22, #144]
   24c38:	cmp	x9, x8
   24c3c:	b.ls	24ca4 <PyInit__decimal@@Base+0x1e1f0>  // b.plast
   24c40:	ldr	x9, [x22, #128]
   24c44:	cmp	x9, x8
   24c48:	b.ls	24cb4 <PyInit__decimal@@Base+0x1e200>  // b.plast
   24c4c:	ldr	x9, [x22, #120]
   24c50:	cmp	x9, x8
   24c54:	mov	w8, #0xf                   	// #15
   24c58:	b	24cc0 <PyInit__decimal@@Base+0x1e20c>
   24c5c:	ldr	x9, [x22, #24]
   24c60:	cmp	x9, x8
   24c64:	mov	w8, #0x3                   	// #3
   24c68:	b	24cc0 <PyInit__decimal@@Base+0x1e20c>
   24c6c:	ldr	x9, [x22, #104]
   24c70:	cmp	x9, x8
   24c74:	b.ls	24d10 <PyInit__decimal@@Base+0x1e25c>  // b.plast
   24c78:	ldr	x9, [x22, #96]
   24c7c:	cmp	x9, x8
   24c80:	mov	w8, #0xc                   	// #12
   24c84:	b	24cc0 <PyInit__decimal@@Base+0x1e20c>
   24c88:	ldr	x9, [x22, #64]
   24c8c:	cmp	x9, x8
   24c90:	b.ls	24d18 <PyInit__decimal@@Base+0x1e264>  // b.plast
   24c94:	ldr	x9, [x22, #56]
   24c98:	cmp	x9, x8
   24c9c:	mov	w8, #0x7                   	// #7
   24ca0:	b	24cc0 <PyInit__decimal@@Base+0x1e20c>
   24ca4:	ldr	x9, [x22, #152]
   24ca8:	cmp	x9, x8
   24cac:	mov	w8, #0x13                  	// #19
   24cb0:	b	24cc0 <PyInit__decimal@@Base+0x1e20c>
   24cb4:	ldr	x9, [x22, #136]
   24cb8:	cmp	x9, x8
   24cbc:	mov	w8, #0x11                  	// #17
   24cc0:	cinc	x8, x8, ls  // ls = plast
   24cc4:	add	x8, x8, x21
   24cc8:	str	x8, [x19, #16]
   24ccc:	ldrb	w8, [x19]
   24cd0:	tst	w8, #0xe
   24cd4:	b.ne	24cfc <PyInit__decimal@@Base+0x1e248>  // b.any
   24cd8:	ldr	x9, [x19, #40]
   24cdc:	add	x9, x9, x20, lsl #3
   24ce0:	ldur	x9, [x9, #-8]
   24ce4:	cbnz	x9, 24cfc <PyInit__decimal@@Base+0x1e248>
   24ce8:	ldr	x3, [x19, #8]
   24cec:	and	w1, w8, #0x1
   24cf0:	mov	x0, x19
   24cf4:	mov	x2, xzr
   24cf8:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   24cfc:	ldp	x20, x19, [sp, #48]
   24d00:	ldp	x22, x21, [sp, #32]
   24d04:	ldp	x29, x30, [sp, #16]
   24d08:	add	sp, sp, #0x40
   24d0c:	ret
   24d10:	mov	w8, #0xe                   	// #14
   24d14:	b	24cc4 <PyInit__decimal@@Base+0x1e210>
   24d18:	mov	w8, #0x9                   	// #9
   24d1c:	b	24cc4 <PyInit__decimal@@Base+0x1e210>
   24d20:	ldrb	w8, [x0]
   24d24:	tst	w8, #0xc
   24d28:	b.eq	24d48 <PyInit__decimal@@Base+0x1e294>  // b.none
   24d2c:	adrp	x9, 3e000 <PyInit__decimal@@Base+0x3754c>
   24d30:	adrp	x10, 3e000 <PyInit__decimal@@Base+0x3754c>
   24d34:	add	x9, x9, #0x987
   24d38:	add	x10, x10, #0x986
   24d3c:	tst	w8, #0x4
   24d40:	csel	x0, x10, x9, eq  // eq = none
   24d44:	ret
   24d48:	tbnz	w8, #0, 24d5c <PyInit__decimal@@Base+0x1e2a8>
   24d4c:	tbz	w8, #1, 24d6c <PyInit__decimal@@Base+0x1e2b8>
   24d50:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   24d54:	add	x0, x0, #0xce
   24d58:	ret
   24d5c:	tbz	w8, #1, 24d80 <PyInit__decimal@@Base+0x1e2cc>
   24d60:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   24d64:	add	x0, x0, #0xf1
   24d68:	ret
   24d6c:	tst	w8, #0xe
   24d70:	b.eq	24d94 <PyInit__decimal@@Base+0x1e2e0>  // b.none
   24d74:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   24d78:	add	x0, x0, #0xe6
   24d7c:	ret
   24d80:	tst	w8, #0xe
   24d84:	b.eq	24dcc <PyInit__decimal@@Base+0x1e318>  // b.none
   24d88:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   24d8c:	add	x0, x0, #0x109
   24d90:	ret
   24d94:	ldr	x8, [x0, #40]
   24d98:	ldr	x9, [x0, #24]
   24d9c:	add	x8, x8, x9, lsl #3
   24da0:	ldur	x8, [x8, #-8]
   24da4:	cbz	x8, 24e04 <PyInit__decimal@@Base+0x1e350>
   24da8:	ldp	x8, x9, [x0, #8]
   24dac:	ldr	x10, [x1, #16]
   24db0:	add	x8, x8, x9
   24db4:	sub	x8, x8, #0x1
   24db8:	cmp	x8, x10
   24dbc:	b.lt	24d74 <PyInit__decimal@@Base+0x1e2c0>  // b.tstop
   24dc0:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   24dc4:	add	x0, x0, #0xde
   24dc8:	ret
   24dcc:	ldr	x8, [x0, #40]
   24dd0:	ldr	x9, [x0, #24]
   24dd4:	add	x8, x8, x9, lsl #3
   24dd8:	ldur	x8, [x8, #-8]
   24ddc:	cbz	x8, 24e10 <PyInit__decimal@@Base+0x1e35c>
   24de0:	ldp	x8, x9, [x0, #8]
   24de4:	ldr	x10, [x1, #16]
   24de8:	add	x8, x8, x9
   24dec:	sub	x8, x8, #0x1
   24df0:	cmp	x8, x10
   24df4:	b.lt	24d88 <PyInit__decimal@@Base+0x1e2d4>  // b.tstop
   24df8:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   24dfc:	add	x0, x0, #0x101
   24e00:	ret
   24e04:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   24e08:	add	x0, x0, #0xd8
   24e0c:	ret
   24e10:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   24e14:	add	x0, x0, #0xfb
   24e18:	ret
   24e1c:	stp	x29, x30, [sp, #-80]!
   24e20:	str	x25, [sp, #16]
   24e24:	stp	x24, x23, [sp, #32]
   24e28:	stp	x22, x21, [sp, #48]
   24e2c:	stp	x20, x19, [sp, #64]
   24e30:	mov	x29, sp
   24e34:	ldrb	w8, [x1]
   24e38:	mov	x21, x3
   24e3c:	mov	x19, x0
   24e40:	tst	w8, #0xf
   24e44:	b.ne	24e54 <PyInit__decimal@@Base+0x1e3a0>  // b.any
   24e48:	ldr	x8, [x1, #8]
   24e4c:	mov	x22, x1
   24e50:	cbz	x8, 24ed4 <PyInit__decimal@@Base+0x1e420>
   24e54:	ldrb	w8, [x19]
   24e58:	tbnz	w8, #5, 24e9c <PyInit__decimal@@Base+0x1e3e8>
   24e5c:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   24e60:	ldr	x9, [x19, #32]
   24e64:	ldr	x1, [x20, #1344]
   24e68:	cmp	x9, x1
   24e6c:	b.le	24e9c <PyInit__decimal@@Base+0x1e3e8>
   24e70:	strb	wzr, [x29, #28]
   24e74:	ldr	x0, [x19, #40]
   24e78:	add	x3, x29, #0x1c
   24e7c:	mov	w2, #0x8                   	// #8
   24e80:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   24e84:	str	x0, [x19, #40]
   24e88:	ldrb	w8, [x29, #28]
   24e8c:	cbnz	w8, 24e98 <PyInit__decimal@@Base+0x1e3e4>
   24e90:	ldr	x8, [x20, #1344]
   24e94:	str	x8, [x19, #32]
   24e98:	ldrb	w8, [x19]
   24e9c:	and	w8, w8, #0xf0
   24ea0:	orr	w8, w8, #0x4
   24ea4:	stp	xzr, xzr, [x19, #16]
   24ea8:	strb	w8, [x19]
   24eac:	str	xzr, [x19, #8]
   24eb0:	ldr	w8, [x21]
   24eb4:	orr	w8, w8, #0x100
   24eb8:	str	w8, [x21]
   24ebc:	ldp	x20, x19, [sp, #64]
   24ec0:	ldp	x22, x21, [sp, #48]
   24ec4:	ldp	x24, x23, [sp, #32]
   24ec8:	ldr	x25, [sp, #16]
   24ecc:	ldp	x29, x30, [sp], #80
   24ed0:	ret
   24ed4:	ldr	x8, [x22, #16]
   24ed8:	ldr	x9, [x2]
   24edc:	mov	x10, #0x9436                	// #37942
   24ee0:	movk	x10, #0x50d7, lsl #16
   24ee4:	movk	x10, #0x435e, lsl #32
   24ee8:	cmp	x8, x9
   24eec:	movk	x10, #0xd79, lsl #48
   24ef0:	csel	x8, x9, x8, lt  // lt = tstop
   24ef4:	adrp	x24, 53000 <PyInit__decimal@@Base+0x4c54c>
   24ef8:	smulh	x10, x8, x10
   24efc:	mov	x11, #0xffffffffffffffed    	// #-19
   24f00:	ldr	x9, [x24, #1344]
   24f04:	add	x10, x10, x10, lsr #63
   24f08:	mul	x11, x10, x11
   24f0c:	cmn	x11, x8
   24f10:	ldr	x8, [x19, #32]
   24f14:	cinc	x25, x10, ne  // ne = any
   24f18:	cmp	x9, x25
   24f1c:	csel	x1, x25, x9, lt  // lt = tstop
   24f20:	mov	x20, x2
   24f24:	cmp	x1, x8
   24f28:	b.eq	24f60 <PyInit__decimal@@Base+0x1e4ac>  // b.none
   24f2c:	ldrb	w9, [x19]
   24f30:	tbnz	w9, #5, 24f48 <PyInit__decimal@@Base+0x1e494>
   24f34:	mov	x0, x19
   24f38:	mov	x2, x21
   24f3c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   24f40:	cbnz	w0, 24f60 <PyInit__decimal@@Base+0x1e4ac>
   24f44:	b	24ebc <PyInit__decimal@@Base+0x1e408>
   24f48:	cmp	x1, x8
   24f4c:	b.le	24f60 <PyInit__decimal@@Base+0x1e4ac>
   24f50:	mov	x0, x19
   24f54:	mov	x2, x21
   24f58:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   24f5c:	cbz	w0, 24ebc <PyInit__decimal@@Base+0x1e408>
   24f60:	adrp	x23, 3f000 <PyInit__decimal@@Base+0x3854c>
   24f64:	cmp	x25, #0x0
   24f68:	add	x23, x23, #0x370
   24f6c:	b.le	25038 <PyInit__decimal@@Base+0x1e584>
   24f70:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   24f74:	mov	x8, xzr
   24f78:	movk	x9, #0xcccd
   24f7c:	mov	w10, #0xa                   	// #10
   24f80:	ldr	x11, [x22, #24]
   24f84:	cmp	x8, x11
   24f88:	b.ge	24f98 <PyInit__decimal@@Base+0x1e4e4>  // b.tcont
   24f8c:	ldr	x11, [x22, #40]
   24f90:	ldr	x14, [x11, x8, lsl #3]
   24f94:	b	24f9c <PyInit__decimal@@Base+0x1e4e8>
   24f98:	mov	x14, xzr
   24f9c:	mov	x12, xzr
   24fa0:	mov	x11, xzr
   24fa4:	b	24fc0 <PyInit__decimal@@Base+0x1e50c>
   24fa8:	ldr	x14, [x23, x12]
   24fac:	add	x12, x12, #0x8
   24fb0:	cmp	x12, #0x98
   24fb4:	add	x11, x14, x11
   24fb8:	mov	x14, x13
   24fbc:	b.eq	24fe0 <PyInit__decimal@@Base+0x1e52c>  // b.none
   24fc0:	umulh	x13, x14, x9
   24fc4:	lsr	x13, x13, #3
   24fc8:	msub	x14, x13, x10, x14
   24fcc:	cmp	x14, #0x1
   24fd0:	b.hi	24ff8 <PyInit__decimal@@Base+0x1e544>  // b.pmore
   24fd4:	cbz	x14, 24fa8 <PyInit__decimal@@Base+0x1e4f4>
   24fd8:	mov	x14, xzr
   24fdc:	b	24fac <PyInit__decimal@@Base+0x1e4f8>
   24fe0:	ldr	x12, [x19, #40]
   24fe4:	str	x11, [x12, x8, lsl #3]
   24fe8:	add	x8, x8, #0x1
   24fec:	cmp	x8, x25
   24ff0:	b.ne	24f80 <PyInit__decimal@@Base+0x1e4cc>  // b.any
   24ff4:	b	2503c <PyInit__decimal@@Base+0x1e588>
   24ff8:	ldrb	w8, [x19]
   24ffc:	tbnz	w8, #5, 24e9c <PyInit__decimal@@Base+0x1e3e8>
   25000:	ldr	x9, [x19, #32]
   25004:	ldr	x1, [x24, #1344]
   25008:	cmp	x9, x1
   2500c:	b.le	24e9c <PyInit__decimal@@Base+0x1e3e8>
   25010:	strb	wzr, [x29, #24]
   25014:	ldr	x0, [x19, #40]
   25018:	add	x3, x29, #0x18
   2501c:	mov	w2, #0x8                   	// #8
   25020:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   25024:	str	x0, [x19, #40]
   25028:	ldrb	w8, [x29, #24]
   2502c:	cbnz	w8, 24e98 <PyInit__decimal@@Base+0x1e3e4>
   25030:	ldr	x8, [x24, #1344]
   25034:	b	24e94 <PyInit__decimal@@Base+0x1e3e0>
   25038:	ldr	x12, [x19, #40]
   2503c:	ldrb	w8, [x19]
   25040:	sub	x10, x12, #0x8
   25044:	str	xzr, [x19, #8]
   25048:	and	w9, w8, #0xf0
   2504c:	strb	w9, [x19]
   25050:	mov	x9, x25
   25054:	cmp	x25, #0x2
   25058:	b.lt	25068 <PyInit__decimal@@Base+0x1e5b4>  // b.tstop
   2505c:	ldr	x11, [x10, x9, lsl #3]
   25060:	sub	x25, x9, #0x1
   25064:	cbz	x11, 25050 <PyInit__decimal@@Base+0x1e59c>
   25068:	str	x9, [x19, #24]
   2506c:	ldr	x11, [x24, #1344]
   25070:	ldr	x10, [x19, #32]
   25074:	cmp	x11, x9
   25078:	csel	x1, x9, x11, lt  // lt = tstop
   2507c:	cmp	x1, x10
   25080:	b.eq	250ac <PyInit__decimal@@Base+0x1e5f8>  // b.none
   25084:	tbnz	w8, #5, 25098 <PyInit__decimal@@Base+0x1e5e4>
   25088:	mov	x0, x19
   2508c:	mov	x2, x21
   25090:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   25094:	b	250ac <PyInit__decimal@@Base+0x1e5f8>
   25098:	cmp	x1, x10
   2509c:	b.le	250ac <PyInit__decimal@@Base+0x1e5f8>
   250a0:	mov	x0, x19
   250a4:	mov	x2, x21
   250a8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   250ac:	ldr	x9, [x19, #40]
   250b0:	ldr	x8, [x19, #24]
   250b4:	ldr	x10, [x23, #72]
   250b8:	add	x9, x9, x8, lsl #3
   250bc:	ldur	x9, [x9, #-8]
   250c0:	cmp	x10, x9
   250c4:	b.ls	250f0 <PyInit__decimal@@Base+0x1e63c>  // b.plast
   250c8:	ldr	x10, [x23, #32]
   250cc:	cmp	x10, x9
   250d0:	b.ls	25118 <PyInit__decimal@@Base+0x1e664>  // b.plast
   250d4:	ldr	x10, [x23, #16]
   250d8:	cmp	x10, x9
   250dc:	b.ls	2515c <PyInit__decimal@@Base+0x1e6a8>  // b.plast
   250e0:	ldr	x10, [x23, #8]
   250e4:	cmp	x10, x9
   250e8:	mov	w9, #0x1                   	// #1
   250ec:	b	251c0 <PyInit__decimal@@Base+0x1e70c>
   250f0:	ldr	x10, [x23, #112]
   250f4:	cmp	x10, x9
   250f8:	b.ls	25134 <PyInit__decimal@@Base+0x1e680>  // b.plast
   250fc:	ldr	x10, [x23, #88]
   25100:	cmp	x10, x9
   25104:	b.ls	2516c <PyInit__decimal@@Base+0x1e6b8>  // b.plast
   25108:	ldr	x10, [x23, #80]
   2510c:	cmp	x10, x9
   25110:	mov	w9, #0xa                   	// #10
   25114:	b	251c0 <PyInit__decimal@@Base+0x1e70c>
   25118:	ldr	x10, [x23, #48]
   2511c:	cmp	x10, x9
   25120:	b.ls	25188 <PyInit__decimal@@Base+0x1e6d4>  // b.plast
   25124:	ldr	x10, [x23, #40]
   25128:	cmp	x10, x9
   2512c:	mov	w9, #0x5                   	// #5
   25130:	b	251c0 <PyInit__decimal@@Base+0x1e70c>
   25134:	ldr	x10, [x23, #144]
   25138:	cmp	x10, x9
   2513c:	b.ls	251a4 <PyInit__decimal@@Base+0x1e6f0>  // b.plast
   25140:	ldr	x10, [x23, #128]
   25144:	cmp	x10, x9
   25148:	b.ls	251b4 <PyInit__decimal@@Base+0x1e700>  // b.plast
   2514c:	ldr	x10, [x23, #120]
   25150:	cmp	x10, x9
   25154:	mov	w9, #0xf                   	// #15
   25158:	b	251c0 <PyInit__decimal@@Base+0x1e70c>
   2515c:	ldr	x10, [x23, #24]
   25160:	cmp	x10, x9
   25164:	mov	w9, #0x3                   	// #3
   25168:	b	251c0 <PyInit__decimal@@Base+0x1e70c>
   2516c:	ldr	x10, [x23, #104]
   25170:	cmp	x10, x9
   25174:	b.ls	251f4 <PyInit__decimal@@Base+0x1e740>  // b.plast
   25178:	ldr	x10, [x23, #96]
   2517c:	cmp	x10, x9
   25180:	mov	w9, #0xc                   	// #12
   25184:	b	251c0 <PyInit__decimal@@Base+0x1e70c>
   25188:	ldr	x10, [x23, #64]
   2518c:	cmp	x10, x9
   25190:	b.ls	251fc <PyInit__decimal@@Base+0x1e748>  // b.plast
   25194:	ldr	x10, [x23, #56]
   25198:	cmp	x10, x9
   2519c:	mov	w9, #0x7                   	// #7
   251a0:	b	251c0 <PyInit__decimal@@Base+0x1e70c>
   251a4:	ldr	x10, [x23, #152]
   251a8:	cmp	x10, x9
   251ac:	mov	w9, #0x13                  	// #19
   251b0:	b	251c0 <PyInit__decimal@@Base+0x1e70c>
   251b4:	ldr	x10, [x23, #136]
   251b8:	cmp	x10, x9
   251bc:	mov	w9, #0x11                  	// #17
   251c0:	cinc	x9, x9, ls  // ls = plast
   251c4:	mov	w10, #0x13                  	// #19
   251c8:	madd	x8, x8, x10, x9
   251cc:	sub	x8, x8, #0x13
   251d0:	str	x8, [x19, #16]
   251d4:	mov	x0, x19
   251d8:	mov	x1, x20
   251dc:	ldp	x20, x19, [sp, #64]
   251e0:	ldp	x22, x21, [sp, #48]
   251e4:	ldp	x24, x23, [sp, #32]
   251e8:	ldr	x25, [sp, #16]
   251ec:	ldp	x29, x30, [sp], #80
   251f0:	b	24aa0 <PyInit__decimal@@Base+0x1dfec>
   251f4:	mov	w9, #0xe                   	// #14
   251f8:	b	251c4 <PyInit__decimal@@Base+0x1e710>
   251fc:	mov	w9, #0x9                   	// #9
   25200:	b	251c4 <PyInit__decimal@@Base+0x1e710>
   25204:	sub	sp, sp, #0x50
   25208:	stp	x29, x30, [sp, #16]
   2520c:	str	x23, [sp, #32]
   25210:	stp	x22, x21, [sp, #48]
   25214:	stp	x20, x19, [sp, #64]
   25218:	add	x29, sp, #0x10
   2521c:	ldrb	w8, [x1]
   25220:	mov	x20, x3
   25224:	mov	x21, x2
   25228:	mov	x19, x0
   2522c:	tst	w8, #0xe
   25230:	b.eq	252a8 <PyInit__decimal@@Base+0x1e7f4>  // b.none
   25234:	mov	x0, x19
   25238:	mov	x2, x21
   2523c:	mov	x3, x20
   25240:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   25244:	cbnz	w0, 2538c <PyInit__decimal@@Base+0x1e8d8>
   25248:	ldrb	w8, [x19]
   2524c:	tbnz	w8, #5, 25290 <PyInit__decimal@@Base+0x1e7dc>
   25250:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   25254:	ldr	x9, [x19, #32]
   25258:	ldr	x1, [x20, #1344]
   2525c:	cmp	x9, x1
   25260:	b.le	25290 <PyInit__decimal@@Base+0x1e7dc>
   25264:	strb	wzr, [x29, #24]
   25268:	ldr	x0, [x19, #40]
   2526c:	add	x3, x29, #0x18
   25270:	mov	w2, #0x8                   	// #8
   25274:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   25278:	str	x0, [x19, #40]
   2527c:	ldrb	w8, [x29, #24]
   25280:	cbnz	w8, 2528c <PyInit__decimal@@Base+0x1e7d8>
   25284:	ldr	x8, [x20, #1344]
   25288:	str	x8, [x19, #32]
   2528c:	ldrb	w8, [x19]
   25290:	and	w8, w8, #0xf0
   25294:	orr	w8, w8, #0x2
   25298:	stp	xzr, xzr, [x19, #16]
   2529c:	strb	w8, [x19]
   252a0:	str	xzr, [x19, #8]
   252a4:	b	2538c <PyInit__decimal@@Base+0x1e8d8>
   252a8:	ldr	x8, [x1, #40]
   252ac:	ldr	x9, [x1, #24]
   252b0:	add	x8, x8, x9, lsl #3
   252b4:	ldur	x8, [x8, #-8]
   252b8:	cbz	x8, 25324 <PyInit__decimal@@Base+0x1e870>
   252bc:	ldp	x8, x9, [x1, #8]
   252c0:	ldrb	w10, [x19]
   252c4:	add	x8, x8, x9
   252c8:	sub	x22, x8, #0x1
   252cc:	tbnz	w10, #5, 2530c <PyInit__decimal@@Base+0x1e858>
   252d0:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   252d4:	ldr	x8, [x19, #32]
   252d8:	ldr	x1, [x23, #1344]
   252dc:	cmp	x8, x1
   252e0:	b.le	2530c <PyInit__decimal@@Base+0x1e858>
   252e4:	sturb	wzr, [x29, #-4]
   252e8:	ldr	x0, [x19, #40]
   252ec:	sub	x3, x29, #0x4
   252f0:	mov	w2, #0x8                   	// #8
   252f4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   252f8:	str	x0, [x19, #40]
   252fc:	ldurb	w8, [x29, #-4]
   25300:	cbnz	w8, 2530c <PyInit__decimal@@Base+0x1e858>
   25304:	ldr	x8, [x23, #1344]
   25308:	str	x8, [x19, #32]
   2530c:	mov	x0, x19
   25310:	mov	x1, x22
   25314:	mov	x2, x21
   25318:	mov	x3, x20
   2531c:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   25320:	b	2538c <PyInit__decimal@@Base+0x1e8d8>
   25324:	ldrb	w8, [x19]
   25328:	tbnz	w8, #5, 2536c <PyInit__decimal@@Base+0x1e8b8>
   2532c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   25330:	ldr	x9, [x19, #32]
   25334:	ldr	x1, [x21, #1344]
   25338:	cmp	x9, x1
   2533c:	b.le	2536c <PyInit__decimal@@Base+0x1e8b8>
   25340:	strb	wzr, [x29, #28]
   25344:	ldr	x0, [x19, #40]
   25348:	add	x3, x29, #0x1c
   2534c:	mov	w2, #0x8                   	// #8
   25350:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   25354:	str	x0, [x19, #40]
   25358:	ldrb	w8, [x29, #28]
   2535c:	cbnz	w8, 25368 <PyInit__decimal@@Base+0x1e8b4>
   25360:	ldr	x8, [x21, #1344]
   25364:	str	x8, [x19, #32]
   25368:	ldrb	w8, [x19]
   2536c:	and	w8, w8, #0xf0
   25370:	orr	w8, w8, #0x3
   25374:	stp	xzr, xzr, [x19, #16]
   25378:	strb	w8, [x19]
   2537c:	str	xzr, [x19, #8]
   25380:	ldr	w8, [x20]
   25384:	orr	w8, w8, #0x4
   25388:	str	w8, [x20]
   2538c:	ldp	x20, x19, [sp, #64]
   25390:	ldp	x22, x21, [sp, #48]
   25394:	ldr	x23, [sp, #32]
   25398:	ldp	x29, x30, [sp, #16]
   2539c:	add	sp, sp, #0x50
   253a0:	ret
   253a4:	stp	x29, x30, [sp, #-80]!
   253a8:	str	x25, [sp, #16]
   253ac:	stp	x24, x23, [sp, #32]
   253b0:	stp	x22, x21, [sp, #48]
   253b4:	stp	x20, x19, [sp, #64]
   253b8:	mov	x29, sp
   253bc:	ldrb	w8, [x1]
   253c0:	mov	x21, x4
   253c4:	mov	x19, x0
   253c8:	tst	w8, #0xe
   253cc:	b.ne	253f8 <PyInit__decimal@@Base+0x1e944>  // b.any
   253d0:	ldrb	w9, [x2]
   253d4:	and	w10, w9, #0xe
   253d8:	bfxil	w10, w8, #0, #1
   253dc:	and	w8, w9, #0x1
   253e0:	orr	w8, w8, w10
   253e4:	cbnz	w8, 253f8 <PyInit__decimal@@Base+0x1e944>
   253e8:	ldr	x8, [x1, #8]
   253ec:	cbnz	x8, 253f8 <PyInit__decimal@@Base+0x1e944>
   253f0:	ldr	x8, [x2, #8]
   253f4:	cbz	x8, 25478 <PyInit__decimal@@Base+0x1e9c4>
   253f8:	ldrb	w8, [x19]
   253fc:	tbnz	w8, #5, 25440 <PyInit__decimal@@Base+0x1e98c>
   25400:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   25404:	ldr	x9, [x19, #32]
   25408:	ldr	x1, [x20, #1344]
   2540c:	cmp	x9, x1
   25410:	b.le	25440 <PyInit__decimal@@Base+0x1e98c>
   25414:	strb	wzr, [x29, #28]
   25418:	ldr	x0, [x19, #40]
   2541c:	add	x3, x29, #0x1c
   25420:	mov	w2, #0x8                   	// #8
   25424:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   25428:	str	x0, [x19, #40]
   2542c:	ldrb	w8, [x29, #28]
   25430:	cbnz	w8, 2543c <PyInit__decimal@@Base+0x1e988>
   25434:	ldr	x8, [x20, #1344]
   25438:	str	x8, [x19, #32]
   2543c:	ldrb	w8, [x19]
   25440:	and	w8, w8, #0xf0
   25444:	orr	w8, w8, #0x4
   25448:	stp	xzr, xzr, [x19, #16]
   2544c:	strb	w8, [x19]
   25450:	str	xzr, [x19, #8]
   25454:	ldr	w8, [x21]
   25458:	orr	w8, w8, #0x100
   2545c:	str	w8, [x21]
   25460:	ldp	x20, x19, [sp, #64]
   25464:	ldp	x22, x21, [sp, #48]
   25468:	ldp	x24, x23, [sp, #32]
   2546c:	ldr	x25, [sp, #16]
   25470:	ldp	x29, x30, [sp], #80
   25474:	ret
   25478:	ldr	x8, [x2, #16]
   2547c:	ldr	x9, [x1, #16]
   25480:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   25484:	ldr	x10, [x23, #1344]
   25488:	mov	x20, x3
   2548c:	cmp	x8, x9
   25490:	csel	x24, x2, x1, gt
   25494:	ldr	x9, [x24, #24]
   25498:	ldr	x8, [x19, #32]
   2549c:	csel	x25, x1, x2, gt
   254a0:	cmp	x10, x9
   254a4:	csel	x1, x9, x10, lt  // lt = tstop
   254a8:	cmp	x1, x8
   254ac:	b.eq	254e0 <PyInit__decimal@@Base+0x1ea2c>  // b.none
   254b0:	ldrb	w9, [x19]
   254b4:	tbnz	w9, #5, 254c8 <PyInit__decimal@@Base+0x1ea14>
   254b8:	mov	x0, x19
   254bc:	mov	x2, x21
   254c0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   254c4:	b	254dc <PyInit__decimal@@Base+0x1ea28>
   254c8:	cmp	x1, x8
   254cc:	b.le	254e0 <PyInit__decimal@@Base+0x1ea2c>
   254d0:	mov	x0, x19
   254d4:	mov	x2, x21
   254d8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   254dc:	cbz	w0, 25460 <PyInit__decimal@@Base+0x1e9ac>
   254e0:	ldr	x12, [x25, #40]
   254e4:	ldr	x8, [x24, #40]
   254e8:	ldr	x9, [x25, #24]
   254ec:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x3854c>
   254f0:	ldr	x11, [x12]
   254f4:	ldr	x10, [x8]
   254f8:	sub	x9, x9, #0x1
   254fc:	cmp	x9, #0x1
   25500:	add	x22, x22, #0x370
   25504:	mov	x9, xzr
   25508:	b.lt	25594 <PyInit__decimal@@Base+0x1eae0>  // b.tstop
   2550c:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   25510:	movk	x13, #0xcccd
   25514:	mov	w14, #0xa                   	// #10
   25518:	mov	x16, xzr
   2551c:	mov	x15, xzr
   25520:	b	2553c <PyInit__decimal@@Base+0x1ea88>
   25524:	add	x16, x16, #0x8
   25528:	cmp	x16, #0x98
   2552c:	add	x15, x10, x15
   25530:	mov	x10, x18
   25534:	mov	x11, x17
   25538:	b.eq	2556c <PyInit__decimal@@Base+0x1eab8>  // b.none
   2553c:	umulh	x17, x11, x13
   25540:	umulh	x18, x10, x13
   25544:	lsr	x17, x17, #3
   25548:	lsr	x18, x18, #3
   2554c:	msub	x11, x17, x14, x11
   25550:	msub	x10, x18, x14, x10
   25554:	orr	x10, x10, x11
   25558:	tst	x10, #0xe
   2555c:	b.ne	25800 <PyInit__decimal@@Base+0x1ed4c>  // b.any
   25560:	cbz	x10, 25524 <PyInit__decimal@@Base+0x1ea70>
   25564:	ldr	x10, [x22, x16]
   25568:	b	25524 <PyInit__decimal@@Base+0x1ea70>
   2556c:	ldr	x10, [x19, #40]
   25570:	str	x15, [x10, x9, lsl #3]
   25574:	add	x9, x9, #0x1
   25578:	ldr	x15, [x25, #24]
   2557c:	lsl	x10, x9, #3
   25580:	ldr	x11, [x12, x10]
   25584:	ldr	x10, [x8, x10]
   25588:	sub	x15, x15, #0x1
   2558c:	cmp	x9, x15
   25590:	b.lt	25518 <PyInit__decimal@@Base+0x1ea64>  // b.tstop
   25594:	ldr	x25, [x22, #72]
   25598:	cmp	x25, x11
   2559c:	b.ls	255c8 <PyInit__decimal@@Base+0x1eb14>  // b.plast
   255a0:	ldr	x12, [x22, #32]
   255a4:	cmp	x12, x11
   255a8:	b.ls	255f0 <PyInit__decimal@@Base+0x1eb3c>  // b.plast
   255ac:	ldr	x12, [x22, #16]
   255b0:	cmp	x12, x11
   255b4:	b.ls	25634 <PyInit__decimal@@Base+0x1eb80>  // b.plast
   255b8:	ldr	x12, [x22, #8]
   255bc:	cmp	x12, x11
   255c0:	mov	w12, #0x1                   	// #1
   255c4:	b	25698 <PyInit__decimal@@Base+0x1ebe4>
   255c8:	ldr	x12, [x22, #112]
   255cc:	cmp	x12, x11
   255d0:	b.ls	2560c <PyInit__decimal@@Base+0x1eb58>  // b.plast
   255d4:	ldr	x12, [x22, #88]
   255d8:	cmp	x12, x11
   255dc:	b.ls	25644 <PyInit__decimal@@Base+0x1eb90>  // b.plast
   255e0:	ldr	x12, [x22, #80]
   255e4:	cmp	x12, x11
   255e8:	mov	w12, #0xa                   	// #10
   255ec:	b	25698 <PyInit__decimal@@Base+0x1ebe4>
   255f0:	ldr	x12, [x22, #48]
   255f4:	cmp	x12, x11
   255f8:	b.ls	25660 <PyInit__decimal@@Base+0x1ebac>  // b.plast
   255fc:	ldr	x12, [x22, #40]
   25600:	cmp	x12, x11
   25604:	mov	w12, #0x5                   	// #5
   25608:	b	25698 <PyInit__decimal@@Base+0x1ebe4>
   2560c:	ldr	x12, [x22, #144]
   25610:	cmp	x12, x11
   25614:	b.ls	2567c <PyInit__decimal@@Base+0x1ebc8>  // b.plast
   25618:	ldr	x12, [x22, #128]
   2561c:	cmp	x12, x11
   25620:	b.ls	2568c <PyInit__decimal@@Base+0x1ebd8>  // b.plast
   25624:	ldr	x12, [x22, #120]
   25628:	cmp	x12, x11
   2562c:	mov	w12, #0xf                   	// #15
   25630:	b	25698 <PyInit__decimal@@Base+0x1ebe4>
   25634:	ldr	x12, [x22, #24]
   25638:	cmp	x12, x11
   2563c:	mov	w12, #0x3                   	// #3
   25640:	b	25698 <PyInit__decimal@@Base+0x1ebe4>
   25644:	ldr	x12, [x22, #104]
   25648:	cmp	x12, x11
   2564c:	b.ls	25840 <PyInit__decimal@@Base+0x1ed8c>  // b.plast
   25650:	ldr	x12, [x22, #96]
   25654:	cmp	x12, x11
   25658:	mov	w12, #0xc                   	// #12
   2565c:	b	25698 <PyInit__decimal@@Base+0x1ebe4>
   25660:	ldr	x12, [x22, #64]
   25664:	cmp	x12, x11
   25668:	b.ls	25848 <PyInit__decimal@@Base+0x1ed94>  // b.plast
   2566c:	ldr	x12, [x22, #56]
   25670:	cmp	x12, x11
   25674:	mov	w12, #0x7                   	// #7
   25678:	b	25698 <PyInit__decimal@@Base+0x1ebe4>
   2567c:	ldr	x12, [x22, #152]
   25680:	cmp	x12, x11
   25684:	mov	w12, #0x13                  	// #19
   25688:	b	25698 <PyInit__decimal@@Base+0x1ebe4>
   2568c:	ldr	x12, [x22, #136]
   25690:	cmp	x12, x11
   25694:	mov	w12, #0x11                  	// #17
   25698:	cinc	x13, x12, ls  // ls = plast
   2569c:	mov	x15, #0xcccccccccccccccc    	// #-3689348814741910324
   256a0:	mov	x14, xzr
   256a4:	mov	x12, xzr
   256a8:	movk	x15, #0xcccd
   256ac:	mov	w16, #0xa                   	// #10
   256b0:	b	256c8 <PyInit__decimal@@Base+0x1ec14>
   256b4:	add	x14, x14, #0x1
   256b8:	cmp	x14, x13
   256bc:	add	x12, x11, x12
   256c0:	mov	x11, x17
   256c4:	b.cs	256fc <PyInit__decimal@@Base+0x1ec48>  // b.hs, b.nlast
   256c8:	mov	x18, x10
   256cc:	umulh	x10, x11, x15
   256d0:	umulh	x0, x18, x15
   256d4:	lsr	x17, x10, #3
   256d8:	lsr	x10, x0, #3
   256dc:	msub	x11, x17, x16, x11
   256e0:	msub	x18, x10, x16, x18
   256e4:	orr	x11, x18, x11
   256e8:	tst	x11, #0xe
   256ec:	b.ne	25800 <PyInit__decimal@@Base+0x1ed4c>  // b.any
   256f0:	cbz	x11, 256b4 <PyInit__decimal@@Base+0x1ec00>
   256f4:	ldr	x11, [x22, x14, lsl #3]
   256f8:	b	256b4 <PyInit__decimal@@Base+0x1ec00>
   256fc:	sub	w11, w14, #0x1
   25700:	cmp	w11, #0x11
   25704:	b.hi	25740 <PyInit__decimal@@Base+0x1ec8c>  // b.pmore
   25708:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   2570c:	movk	x11, #0xcccd
   25710:	mov	w13, #0xa                   	// #10
   25714:	umulh	x15, x10, x11
   25718:	lsr	x15, x15, #3
   2571c:	msub	x10, x15, x13, x10
   25720:	cmp	x10, #0x1
   25724:	b.hi	25800 <PyInit__decimal@@Base+0x1ed4c>  // b.pmore
   25728:	ldr	x16, [x22, x14, lsl #3]
   2572c:	cmp	x14, #0x12
   25730:	add	x14, x14, #0x1
   25734:	madd	x12, x16, x10, x12
   25738:	mov	x10, x15
   2573c:	b.cc	25714 <PyInit__decimal@@Base+0x1ec60>  // b.lo, b.ul, b.last
   25740:	ldr	x10, [x19, #40]
   25744:	str	x12, [x10, x9, lsl #3]
   25748:	ldr	x13, [x24, #24]
   2574c:	add	x9, x9, #0x1
   25750:	cmp	x9, x13
   25754:	b.ge	257a4 <PyInit__decimal@@Base+0x1ecf0>  // b.tcont
   25758:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   2575c:	movk	x11, #0xcccd
   25760:	mov	w12, #0xa                   	// #10
   25764:	ldr	x13, [x8, x9, lsl #3]
   25768:	mov	w14, #0x13                  	// #19
   2576c:	mov	x16, x13
   25770:	umulh	x15, x16, x11
   25774:	lsr	x15, x15, #3
   25778:	msub	x16, x15, x12, x16
   2577c:	cmp	x16, #0x1
   25780:	b.hi	25800 <PyInit__decimal@@Base+0x1ed4c>  // b.pmore
   25784:	subs	w14, w14, #0x1
   25788:	mov	x16, x15
   2578c:	b.ne	25770 <PyInit__decimal@@Base+0x1ecbc>  // b.any
   25790:	str	x13, [x10, x9, lsl #3]
   25794:	ldr	x13, [x24, #24]
   25798:	add	x9, x9, #0x1
   2579c:	cmp	x9, x13
   257a0:	b.lt	25764 <PyInit__decimal@@Base+0x1ecb0>  // b.tstop
   257a4:	ldrb	w8, [x19]
   257a8:	sub	x10, x10, #0x8
   257ac:	str	xzr, [x19, #8]
   257b0:	and	w9, w8, #0xf0
   257b4:	strb	w9, [x19]
   257b8:	mov	x9, x13
   257bc:	cmp	x13, #0x2
   257c0:	b.lt	257d0 <PyInit__decimal@@Base+0x1ed1c>  // b.tstop
   257c4:	ldr	x11, [x10, x9, lsl #3]
   257c8:	sub	x13, x9, #0x1
   257cc:	cbz	x11, 257b8 <PyInit__decimal@@Base+0x1ed04>
   257d0:	str	x9, [x19, #24]
   257d4:	ldr	x11, [x23, #1344]
   257d8:	ldr	x10, [x19, #32]
   257dc:	cmp	x11, x9
   257e0:	csel	x1, x9, x11, lt  // lt = tstop
   257e4:	cmp	x1, x10
   257e8:	b.eq	25864 <PyInit__decimal@@Base+0x1edb0>  // b.none
   257ec:	tbnz	w8, #5, 25850 <PyInit__decimal@@Base+0x1ed9c>
   257f0:	mov	x0, x19
   257f4:	mov	x2, x21
   257f8:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   257fc:	b	25864 <PyInit__decimal@@Base+0x1edb0>
   25800:	ldrb	w8, [x19]
   25804:	tbnz	w8, #5, 25440 <PyInit__decimal@@Base+0x1e98c>
   25808:	ldr	x9, [x19, #32]
   2580c:	ldr	x1, [x23, #1344]
   25810:	cmp	x9, x1
   25814:	b.le	25440 <PyInit__decimal@@Base+0x1e98c>
   25818:	strb	wzr, [x29, #24]
   2581c:	ldr	x0, [x19, #40]
   25820:	add	x3, x29, #0x18
   25824:	mov	w2, #0x8                   	// #8
   25828:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2582c:	str	x0, [x19, #40]
   25830:	ldrb	w8, [x29, #24]
   25834:	cbnz	w8, 2543c <PyInit__decimal@@Base+0x1e988>
   25838:	ldr	x8, [x23, #1344]
   2583c:	b	25438 <PyInit__decimal@@Base+0x1e984>
   25840:	mov	w13, #0xe                   	// #14
   25844:	b	2569c <PyInit__decimal@@Base+0x1ebe8>
   25848:	mov	w13, #0x9                   	// #9
   2584c:	b	2569c <PyInit__decimal@@Base+0x1ebe8>
   25850:	cmp	x1, x10
   25854:	b.le	25864 <PyInit__decimal@@Base+0x1edb0>
   25858:	mov	x0, x19
   2585c:	mov	x2, x21
   25860:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   25864:	ldr	x9, [x19, #40]
   25868:	ldr	x8, [x19, #24]
   2586c:	add	x9, x9, x8, lsl #3
   25870:	ldur	x9, [x9, #-8]
   25874:	cmp	x25, x9
   25878:	b.ls	258a4 <PyInit__decimal@@Base+0x1edf0>  // b.plast
   2587c:	ldr	x10, [x22, #32]
   25880:	cmp	x10, x9
   25884:	b.ls	258cc <PyInit__decimal@@Base+0x1ee18>  // b.plast
   25888:	ldr	x10, [x22, #16]
   2588c:	cmp	x10, x9
   25890:	b.ls	25910 <PyInit__decimal@@Base+0x1ee5c>  // b.plast
   25894:	ldr	x10, [x22, #8]
   25898:	cmp	x10, x9
   2589c:	mov	w9, #0x1                   	// #1
   258a0:	b	25974 <PyInit__decimal@@Base+0x1eec0>
   258a4:	ldr	x10, [x22, #112]
   258a8:	cmp	x10, x9
   258ac:	b.ls	258e8 <PyInit__decimal@@Base+0x1ee34>  // b.plast
   258b0:	ldr	x10, [x22, #88]
   258b4:	cmp	x10, x9
   258b8:	b.ls	25920 <PyInit__decimal@@Base+0x1ee6c>  // b.plast
   258bc:	ldr	x10, [x22, #80]
   258c0:	cmp	x10, x9
   258c4:	mov	w9, #0xa                   	// #10
   258c8:	b	25974 <PyInit__decimal@@Base+0x1eec0>
   258cc:	ldr	x10, [x22, #48]
   258d0:	cmp	x10, x9
   258d4:	b.ls	2593c <PyInit__decimal@@Base+0x1ee88>  // b.plast
   258d8:	ldr	x10, [x22, #40]
   258dc:	cmp	x10, x9
   258e0:	mov	w9, #0x5                   	// #5
   258e4:	b	25974 <PyInit__decimal@@Base+0x1eec0>
   258e8:	ldr	x10, [x22, #144]
   258ec:	cmp	x10, x9
   258f0:	b.ls	25958 <PyInit__decimal@@Base+0x1eea4>  // b.plast
   258f4:	ldr	x10, [x22, #128]
   258f8:	cmp	x10, x9
   258fc:	b.ls	25968 <PyInit__decimal@@Base+0x1eeb4>  // b.plast
   25900:	ldr	x10, [x22, #120]
   25904:	cmp	x10, x9
   25908:	mov	w9, #0xf                   	// #15
   2590c:	b	25974 <PyInit__decimal@@Base+0x1eec0>
   25910:	ldr	x10, [x22, #24]
   25914:	cmp	x10, x9
   25918:	mov	w9, #0x3                   	// #3
   2591c:	b	25974 <PyInit__decimal@@Base+0x1eec0>
   25920:	ldr	x10, [x22, #104]
   25924:	cmp	x10, x9
   25928:	b.ls	259a8 <PyInit__decimal@@Base+0x1eef4>  // b.plast
   2592c:	ldr	x10, [x22, #96]
   25930:	cmp	x10, x9
   25934:	mov	w9, #0xc                   	// #12
   25938:	b	25974 <PyInit__decimal@@Base+0x1eec0>
   2593c:	ldr	x10, [x22, #64]
   25940:	cmp	x10, x9
   25944:	b.ls	259b0 <PyInit__decimal@@Base+0x1eefc>  // b.plast
   25948:	ldr	x10, [x22, #56]
   2594c:	cmp	x10, x9
   25950:	mov	w9, #0x7                   	// #7
   25954:	b	25974 <PyInit__decimal@@Base+0x1eec0>
   25958:	ldr	x10, [x22, #152]
   2595c:	cmp	x10, x9
   25960:	mov	w9, #0x13                  	// #19
   25964:	b	25974 <PyInit__decimal@@Base+0x1eec0>
   25968:	ldr	x10, [x22, #136]
   2596c:	cmp	x10, x9
   25970:	mov	w9, #0x11                  	// #17
   25974:	cinc	x9, x9, ls  // ls = plast
   25978:	mov	w10, #0x13                  	// #19
   2597c:	madd	x8, x8, x10, x9
   25980:	sub	x8, x8, #0x13
   25984:	str	x8, [x19, #16]
   25988:	mov	x0, x19
   2598c:	mov	x1, x20
   25990:	ldp	x20, x19, [sp, #64]
   25994:	ldp	x22, x21, [sp, #48]
   25998:	ldp	x24, x23, [sp, #32]
   2599c:	ldr	x25, [sp, #16]
   259a0:	ldp	x29, x30, [sp], #80
   259a4:	b	24aa0 <PyInit__decimal@@Base+0x1dfec>
   259a8:	mov	w9, #0xe                   	// #14
   259ac:	b	25978 <PyInit__decimal@@Base+0x1eec4>
   259b0:	mov	w9, #0x9                   	// #9
   259b4:	b	25978 <PyInit__decimal@@Base+0x1eec4>
   259b8:	stp	x29, x30, [sp, #-96]!
   259bc:	str	x28, [sp, #16]
   259c0:	stp	x26, x25, [sp, #32]
   259c4:	stp	x24, x23, [sp, #48]
   259c8:	stp	x22, x21, [sp, #64]
   259cc:	stp	x20, x19, [sp, #80]
   259d0:	mov	x29, sp
   259d4:	sub	sp, sp, #0x690
   259d8:	add	x10, sp, #0x490
   259dc:	str	x10, [sp, #1160]
   259e0:	add	x10, sp, #0x260
   259e4:	mov	w8, #0x30                  	// #48
   259e8:	mov	w9, #0x40                  	// #64
   259ec:	str	x10, [sp, #600]
   259f0:	add	x10, sp, #0x30
   259f4:	str	wzr, [x29, #24]
   259f8:	str	xzr, [sp, #1128]
   259fc:	str	xzr, [sp, #1136]
   25a00:	str	xzr, [sp, #568]
   25a04:	str	xzr, [sp, #576]
   25a08:	stp	xzr, xzr, [sp, #8]
   25a0c:	strb	w8, [sp, #1120]
   25a10:	str	xzr, [sp, #1144]
   25a14:	str	x9, [sp, #1152]
   25a18:	strb	w8, [sp, #560]
   25a1c:	str	xzr, [sp, #584]
   25a20:	str	x9, [sp, #592]
   25a24:	strb	w8, [sp]
   25a28:	stp	xzr, x9, [sp, #24]
   25a2c:	str	x10, [sp, #40]
   25a30:	ldrb	w8, [x1]
   25a34:	mov	x19, x4
   25a38:	mov	x22, x3
   25a3c:	mov	x23, x2
   25a40:	mov	x21, x1
   25a44:	tst	w8, #0xe
   25a48:	mov	x20, x0
   25a4c:	b.ne	25a5c <PyInit__decimal@@Base+0x1efa8>  // b.any
   25a50:	ldrb	w8, [x23]
   25a54:	tst	w8, #0xe
   25a58:	b.eq	25a78 <PyInit__decimal@@Base+0x1efc4>  // b.none
   25a5c:	mov	x0, x20
   25a60:	mov	x1, x21
   25a64:	mov	x2, x23
   25a68:	mov	x3, x22
   25a6c:	mov	x4, x19
   25a70:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   25a74:	cbnz	w0, 25bb4 <PyInit__decimal@@Base+0x1f100>
   25a78:	ldr	x8, [x23, #8]
   25a7c:	cbnz	x8, 25b4c <PyInit__decimal@@Base+0x1f098>
   25a80:	ldrb	w8, [x23]
   25a84:	tbnz	w8, #1, 25b4c <PyInit__decimal@@Base+0x1f098>
   25a88:	add	x2, x29, #0x18
   25a8c:	mov	w0, wzr
   25a90:	mov	x1, x23
   25a94:	bl	222d8 <PyInit__decimal@@Base+0x1b824>
   25a98:	ldr	w8, [x29, #24]
   25a9c:	tbnz	w8, #8, 25acc <PyInit__decimal@@Base+0x1f018>
   25aa0:	ldrb	w9, [x23]
   25aa4:	tbnz	x0, #63, 25ab4 <PyInit__decimal@@Base+0x1f000>
   25aa8:	tst	w9, #0x1
   25aac:	cneg	x23, x0, ne  // ne = any
   25ab0:	b	25ad0 <PyInit__decimal@@Base+0x1f01c>
   25ab4:	mov	x23, #0x8000000000000000    	// #-9223372036854775808
   25ab8:	cmp	x0, x23
   25abc:	b.ne	25ac4 <PyInit__decimal@@Base+0x1f010>  // b.any
   25ac0:	tbnz	w9, #0, 25ad0 <PyInit__decimal@@Base+0x1f01c>
   25ac4:	orr	w8, w8, #0x100
   25ac8:	str	w8, [x29, #24]
   25acc:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
   25ad0:	tbnz	w8, #8, 25b4c <PyInit__decimal@@Base+0x1f098>
   25ad4:	ldr	x24, [x22]
   25ad8:	cmp	x23, x24
   25adc:	b.gt	25b4c <PyInit__decimal@@Base+0x1f098>
   25ae0:	neg	x8, x24
   25ae4:	cmp	x23, x8
   25ae8:	b.lt	25b4c <PyInit__decimal@@Base+0x1f098>  // b.tstop
   25aec:	ldrb	w8, [x21]
   25af0:	tbnz	w8, #1, 25bd4 <PyInit__decimal@@Base+0x1f120>
   25af4:	ldr	x9, [x21, #16]
   25af8:	cmp	x23, #0x0
   25afc:	csel	x25, xzr, x24, ge  // ge = tcont
   25b00:	cmp	x9, x24
   25b04:	b.le	25cc0 <PyInit__decimal@@Base+0x1f20c>
   25b08:	add	x10, sp, #0x460
   25b0c:	cmp	x10, x21
   25b10:	b.eq	25cb0 <PyInit__decimal@@Base+0x1f1fc>  // b.none
   25b14:	adrp	x26, 53000 <PyInit__decimal@@Base+0x4c54c>
   25b18:	ldr	x10, [x21, #24]
   25b1c:	ldr	x12, [x26, #1344]
   25b20:	ldr	x11, [sp, #1152]
   25b24:	cmp	x12, x10
   25b28:	csel	x1, x10, x12, lt  // lt = tstop
   25b2c:	cmp	x1, x11
   25b30:	b.eq	25c84 <PyInit__decimal@@Base+0x1f1d0>  // b.none
   25b34:	ldrb	w12, [sp, #1120]
   25b38:	tbnz	w12, #5, 25c64 <PyInit__decimal@@Base+0x1f1b0>
   25b3c:	add	x0, sp, #0x460
   25b40:	mov	x2, x19
   25b44:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   25b48:	b	25c78 <PyInit__decimal@@Base+0x1f1c4>
   25b4c:	ldrb	w8, [x20]
   25b50:	tbnz	w8, #5, 25b94 <PyInit__decimal@@Base+0x1f0e0>
   25b54:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   25b58:	ldr	x9, [x20, #32]
   25b5c:	ldr	x1, [x21, #1344]
   25b60:	cmp	x9, x1
   25b64:	b.le	25b94 <PyInit__decimal@@Base+0x1f0e0>
   25b68:	strb	wzr, [x29, #28]
   25b6c:	ldr	x0, [x20, #40]
   25b70:	add	x3, x29, #0x1c
   25b74:	mov	w2, #0x8                   	// #8
   25b78:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   25b7c:	str	x0, [x20, #40]
   25b80:	ldrb	w8, [x29, #28]
   25b84:	cbnz	w8, 25b90 <PyInit__decimal@@Base+0x1f0dc>
   25b88:	ldr	x8, [x21, #1344]
   25b8c:	str	x8, [x20, #32]
   25b90:	ldrb	w8, [x20]
   25b94:	and	w8, w8, #0xf0
   25b98:	orr	w8, w8, #0x4
   25b9c:	stp	xzr, xzr, [x20, #16]
   25ba0:	strb	w8, [x20]
   25ba4:	str	xzr, [x20, #8]
   25ba8:	ldr	w8, [x19]
   25bac:	orr	w8, w8, #0x100
   25bb0:	str	w8, [x19]
   25bb4:	add	sp, sp, #0x690
   25bb8:	ldp	x20, x19, [sp, #80]
   25bbc:	ldp	x22, x21, [sp, #64]
   25bc0:	ldp	x24, x23, [sp, #48]
   25bc4:	ldp	x26, x25, [sp, #32]
   25bc8:	ldr	x28, [sp, #16]
   25bcc:	ldp	x29, x30, [sp], #96
   25bd0:	ret
   25bd4:	cmp	x20, x21
   25bd8:	b.eq	25bb4 <PyInit__decimal@@Base+0x1f100>  // b.none
   25bdc:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   25be0:	ldr	x9, [x21, #24]
   25be4:	ldr	x11, [x10, #1344]
   25be8:	ldr	x10, [x20, #32]
   25bec:	cmp	x11, x9
   25bf0:	csel	x1, x9, x11, lt  // lt = tstop
   25bf4:	cmp	x1, x10
   25bf8:	b.eq	25c34 <PyInit__decimal@@Base+0x1f180>  // b.none
   25bfc:	ldrb	w11, [x20]
   25c00:	tbnz	w11, #5, 25c14 <PyInit__decimal@@Base+0x1f160>
   25c04:	mov	x0, x20
   25c08:	mov	x2, x19
   25c0c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   25c10:	b	25c28 <PyInit__decimal@@Base+0x1f174>
   25c14:	cmp	x1, x10
   25c18:	b.le	25c34 <PyInit__decimal@@Base+0x1f180>
   25c1c:	mov	x0, x20
   25c20:	mov	x2, x19
   25c24:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   25c28:	cbz	w0, 25bb4 <PyInit__decimal@@Base+0x1f100>
   25c2c:	ldr	x9, [x21, #24]
   25c30:	ldrb	w8, [x21]
   25c34:	ldrb	w10, [x20]
   25c38:	ldr	x0, [x20, #40]
   25c3c:	bfxil	w10, w8, #0, #4
   25c40:	strb	w10, [x20]
   25c44:	ldur	q0, [x21, #8]
   25c48:	str	x9, [x20, #24]
   25c4c:	stur	q0, [x20, #8]
   25c50:	ldr	x8, [x21, #24]
   25c54:	ldr	x1, [x21, #40]
   25c58:	lsl	x2, x8, #3
   25c5c:	bl	63c0 <memcpy@plt>
   25c60:	b	25bb4 <PyInit__decimal@@Base+0x1f100>
   25c64:	cmp	x1, x11
   25c68:	b.le	25c84 <PyInit__decimal@@Base+0x1f1d0>
   25c6c:	add	x0, sp, #0x460
   25c70:	mov	x2, x19
   25c74:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   25c78:	cbz	w0, 25e34 <PyInit__decimal@@Base+0x1f380>
   25c7c:	ldrb	w8, [x21]
   25c80:	ldp	x9, x10, [x21, #16]
   25c84:	ldrb	w11, [sp, #1120]
   25c88:	ldr	x0, [sp, #1160]
   25c8c:	lsl	x2, x10, #3
   25c90:	bfxil	w11, w8, #0, #4
   25c94:	strb	w11, [sp, #1120]
   25c98:	ldr	x8, [x21, #8]
   25c9c:	str	x10, [sp, #1144]
   25ca0:	str	x9, [sp, #1136]
   25ca4:	str	x8, [sp, #1128]
   25ca8:	ldr	x1, [x21, #40]
   25cac:	bl	63c0 <memcpy@plt>
   25cb0:	add	x0, sp, #0x460
   25cb4:	mov	x1, x22
   25cb8:	add	x21, sp, #0x460
   25cbc:	bl	24aa0 <PyInit__decimal@@Base+0x1dfec>
   25cc0:	add	x2, x25, x23
   25cc4:	add	x0, sp, #0x230
   25cc8:	mov	x1, x21
   25ccc:	mov	x3, x19
   25cd0:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   25cd4:	cbz	w0, 25d2c <PyInit__decimal@@Base+0x1f278>
   25cd8:	bic	x8, x24, x23, asr #63
   25cdc:	add	x0, sp, #0x230
   25ce0:	mov	x1, x22
   25ce4:	sub	x23, x8, x23
   25ce8:	bl	24aa0 <PyInit__decimal@@Base+0x1dfec>
   25cec:	mov	x0, sp
   25cf0:	mov	x1, x21
   25cf4:	mov	x2, x23
   25cf8:	mov	x3, x19
   25cfc:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   25d00:	cmn	x0, #0x1
   25d04:	b.eq	25d2c <PyInit__decimal@@Base+0x1f278>  // b.none
   25d08:	ldrb	w8, [sp]
   25d0c:	add	x1, sp, #0x230
   25d10:	mov	x2, sp
   25d14:	mov	x0, x20
   25d18:	and	w3, w8, #0x1
   25d1c:	mov	x4, x22
   25d20:	mov	x5, x19
   25d24:	bl	27200 <PyInit__decimal@@Base+0x2074c>
   25d28:	b	25d94 <PyInit__decimal@@Base+0x1f2e0>
   25d2c:	ldrb	w8, [x20]
   25d30:	tbnz	w8, #5, 25d74 <PyInit__decimal@@Base+0x1f2c0>
   25d34:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   25d38:	ldr	x9, [x20, #32]
   25d3c:	ldr	x1, [x21, #1344]
   25d40:	cmp	x9, x1
   25d44:	b.le	25d74 <PyInit__decimal@@Base+0x1f2c0>
   25d48:	strb	wzr, [x29, #28]
   25d4c:	ldr	x0, [x20, #40]
   25d50:	add	x3, x29, #0x1c
   25d54:	mov	w2, #0x8                   	// #8
   25d58:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   25d5c:	str	x0, [x20, #40]
   25d60:	ldrb	w8, [x29, #28]
   25d64:	cbnz	w8, 25d70 <PyInit__decimal@@Base+0x1f2bc>
   25d68:	ldr	x8, [x21, #1344]
   25d6c:	str	x8, [x20, #32]
   25d70:	ldrb	w8, [x20]
   25d74:	and	w8, w8, #0xf0
   25d78:	orr	w8, w8, #0x4
   25d7c:	stp	xzr, xzr, [x20, #16]
   25d80:	strb	w8, [x20]
   25d84:	str	xzr, [x20, #8]
   25d88:	ldr	w8, [x19]
   25d8c:	orr	w8, w8, #0x200
   25d90:	str	w8, [x19]
   25d94:	ldrb	w8, [sp, #1120]
   25d98:	cmp	w8, #0x1f
   25d9c:	b.hi	25db4 <PyInit__decimal@@Base+0x1f300>  // b.pmore
   25da0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   25da4:	ldr	x8, [x8, #1376]
   25da8:	ldr	x0, [sp, #1160]
   25dac:	blr	x8
   25db0:	ldrb	w8, [sp, #1120]
   25db4:	tbnz	w8, #4, 25dc8 <PyInit__decimal@@Base+0x1f314>
   25db8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   25dbc:	ldr	x8, [x8, #1376]
   25dc0:	add	x0, sp, #0x460
   25dc4:	blr	x8
   25dc8:	ldrb	w8, [sp, #560]
   25dcc:	cmp	w8, #0x1f
   25dd0:	b.hi	25de8 <PyInit__decimal@@Base+0x1f334>  // b.pmore
   25dd4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   25dd8:	ldr	x8, [x8, #1376]
   25ddc:	ldr	x0, [sp, #600]
   25de0:	blr	x8
   25de4:	ldrb	w8, [sp, #560]
   25de8:	tbnz	w8, #4, 25dfc <PyInit__decimal@@Base+0x1f348>
   25dec:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   25df0:	ldr	x8, [x8, #1376]
   25df4:	add	x0, sp, #0x230
   25df8:	blr	x8
   25dfc:	ldrb	w8, [sp]
   25e00:	cmp	w8, #0x1f
   25e04:	b.hi	25e1c <PyInit__decimal@@Base+0x1f368>  // b.pmore
   25e08:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   25e0c:	ldr	x8, [x8, #1376]
   25e10:	ldr	x0, [sp, #40]
   25e14:	blr	x8
   25e18:	ldrb	w8, [sp]
   25e1c:	tbnz	w8, #4, 25bb4 <PyInit__decimal@@Base+0x1f100>
   25e20:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   25e24:	ldr	x8, [x8, #1376]
   25e28:	mov	x0, sp
   25e2c:	blr	x8
   25e30:	b	25bb4 <PyInit__decimal@@Base+0x1f100>
   25e34:	ldrb	w8, [x20]
   25e38:	tbnz	w8, #5, 25d74 <PyInit__decimal@@Base+0x1f2c0>
   25e3c:	ldr	x9, [x20, #32]
   25e40:	ldr	x1, [x26, #1344]
   25e44:	cmp	x9, x1
   25e48:	b.le	25d74 <PyInit__decimal@@Base+0x1f2c0>
   25e4c:	strb	wzr, [x29, #28]
   25e50:	ldr	x0, [x20, #40]
   25e54:	add	x3, x29, #0x1c
   25e58:	mov	w2, #0x8                   	// #8
   25e5c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   25e60:	str	x0, [x20, #40]
   25e64:	ldrb	w8, [x29, #28]
   25e68:	cbnz	w8, 25d70 <PyInit__decimal@@Base+0x1f2bc>
   25e6c:	ldr	x8, [x26, #1344]
   25e70:	b	25d6c <PyInit__decimal@@Base+0x1f2b8>
   25e74:	sub	sp, sp, #0x50
   25e78:	stp	x29, x30, [sp, #16]
   25e7c:	str	x23, [sp, #32]
   25e80:	stp	x22, x21, [sp, #48]
   25e84:	stp	x20, x19, [sp, #64]
   25e88:	add	x29, sp, #0x10
   25e8c:	stur	wzr, [x29, #-4]
   25e90:	ldrb	w8, [x1]
   25e94:	mov	x20, x4
   25e98:	mov	x22, x3
   25e9c:	mov	x23, x2
   25ea0:	mov	x21, x1
   25ea4:	tst	w8, #0xe
   25ea8:	mov	x19, x0
   25eac:	b.ne	25ebc <PyInit__decimal@@Base+0x1f408>  // b.any
   25eb0:	ldrb	w8, [x23]
   25eb4:	tst	w8, #0xe
   25eb8:	b.eq	25ed8 <PyInit__decimal@@Base+0x1f424>  // b.none
   25ebc:	mov	x0, x19
   25ec0:	mov	x1, x21
   25ec4:	mov	x2, x23
   25ec8:	mov	x3, x22
   25ecc:	mov	x4, x20
   25ed0:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   25ed4:	cbnz	w0, 2604c <PyInit__decimal@@Base+0x1f598>
   25ed8:	ldr	x8, [x23, #8]
   25edc:	cbnz	x8, 25fa0 <PyInit__decimal@@Base+0x1f4ec>
   25ee0:	ldrb	w8, [x23]
   25ee4:	tbnz	w8, #1, 25fa0 <PyInit__decimal@@Base+0x1f4ec>
   25ee8:	sub	x2, x29, #0x4
   25eec:	mov	w0, wzr
   25ef0:	mov	x1, x23
   25ef4:	bl	222d8 <PyInit__decimal@@Base+0x1b824>
   25ef8:	ldp	x9, x8, [x22]
   25efc:	add	x8, x9, x8
   25f00:	cmp	x0, x8, lsl #1
   25f04:	b.hi	25fec <PyInit__decimal@@Base+0x1f538>  // b.pmore
   25f08:	ldurb	w8, [x29, #-3]
   25f0c:	tbnz	w8, #0, 25fec <PyInit__decimal@@Base+0x1f538>
   25f10:	ldrb	w8, [x21]
   25f14:	tbnz	w8, #1, 26064 <PyInit__decimal@@Base+0x1f5b0>
   25f18:	ldrb	w10, [x23]
   25f1c:	ldr	x9, [x21, #8]
   25f20:	mov	x12, #0x1                   	// #1
   25f24:	mov	w11, #0x1                   	// #1
   25f28:	lsl	w10, w10, #1
   25f2c:	movk	x12, #0x4ec8, lsl #16
   25f30:	and	x10, x10, #0x2
   25f34:	movk	x12, #0x6d67, lsl #32
   25f38:	sub	x10, x11, x10
   25f3c:	movk	x12, #0x1bc1, lsl #48
   25f40:	mov	x13, #0xffffffff626fffff    	// #-2643460097
   25f44:	madd	x10, x10, x0, x9
   25f48:	movk	x13, #0x2531, lsl #32
   25f4c:	cmp	x10, x12
   25f50:	movk	x13, #0xc87d, lsl #48
   25f54:	csel	x10, x10, x12, lt  // lt = tstop
   25f58:	cmp	x10, x13
   25f5c:	csel	x23, x10, x13, gt
   25f60:	cmp	x19, x21
   25f64:	b.eq	260f4 <PyInit__decimal@@Base+0x1f640>  // b.none
   25f68:	adrp	x11, 53000 <PyInit__decimal@@Base+0x4c54c>
   25f6c:	ldr	x10, [x21, #24]
   25f70:	ldr	x12, [x11, #1344]
   25f74:	ldr	x11, [x19, #32]
   25f78:	cmp	x12, x10
   25f7c:	csel	x1, x10, x12, lt  // lt = tstop
   25f80:	cmp	x1, x11
   25f84:	b.eq	260c8 <PyInit__decimal@@Base+0x1f614>  // b.none
   25f88:	ldrb	w12, [x19]
   25f8c:	tbnz	w12, #5, 260a4 <PyInit__decimal@@Base+0x1f5f0>
   25f90:	mov	x0, x19
   25f94:	mov	x2, x20
   25f98:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   25f9c:	b	260b8 <PyInit__decimal@@Base+0x1f604>
   25fa0:	ldrb	w8, [x19]
   25fa4:	tbnz	w8, #5, 2602c <PyInit__decimal@@Base+0x1f578>
   25fa8:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   25fac:	ldr	x9, [x19, #32]
   25fb0:	ldr	x1, [x21, #1344]
   25fb4:	cmp	x9, x1
   25fb8:	b.le	2602c <PyInit__decimal@@Base+0x1f578>
   25fbc:	strb	wzr, [x29, #24]
   25fc0:	ldr	x0, [x19, #40]
   25fc4:	add	x3, x29, #0x18
   25fc8:	mov	w2, #0x8                   	// #8
   25fcc:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   25fd0:	str	x0, [x19, #40]
   25fd4:	ldrb	w8, [x29, #24]
   25fd8:	cbnz	w8, 25fe4 <PyInit__decimal@@Base+0x1f530>
   25fdc:	ldr	x8, [x21, #1344]
   25fe0:	str	x8, [x19, #32]
   25fe4:	ldrb	w8, [x19]
   25fe8:	b	2602c <PyInit__decimal@@Base+0x1f578>
   25fec:	ldrb	w8, [x19]
   25ff0:	tbnz	w8, #5, 2602c <PyInit__decimal@@Base+0x1f578>
   25ff4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   25ff8:	ldr	x9, [x19, #32]
   25ffc:	ldr	x1, [x21, #1344]
   26000:	cmp	x9, x1
   26004:	b.le	2602c <PyInit__decimal@@Base+0x1f578>
   26008:	strb	wzr, [x29, #28]
   2600c:	ldr	x0, [x19, #40]
   26010:	add	x3, x29, #0x1c
   26014:	mov	w2, #0x8                   	// #8
   26018:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2601c:	str	x0, [x19, #40]
   26020:	ldrb	w8, [x29, #28]
   26024:	cbnz	w8, 25fe4 <PyInit__decimal@@Base+0x1f530>
   26028:	b	25fdc <PyInit__decimal@@Base+0x1f528>
   2602c:	and	w8, w8, #0xf0
   26030:	orr	w8, w8, #0x4
   26034:	stp	xzr, xzr, [x19, #16]
   26038:	strb	w8, [x19]
   2603c:	str	xzr, [x19, #8]
   26040:	ldr	w8, [x20]
   26044:	orr	w8, w8, #0x100
   26048:	str	w8, [x20]
   2604c:	ldp	x20, x19, [sp, #64]
   26050:	ldp	x22, x21, [sp, #48]
   26054:	ldr	x23, [sp, #32]
   26058:	ldp	x29, x30, [sp, #16]
   2605c:	add	sp, sp, #0x50
   26060:	ret
   26064:	cmp	x19, x21
   26068:	b.eq	2604c <PyInit__decimal@@Base+0x1f598>  // b.none
   2606c:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   26070:	ldr	x9, [x21, #24]
   26074:	ldr	x11, [x10, #1344]
   26078:	ldr	x10, [x19, #32]
   2607c:	cmp	x11, x9
   26080:	csel	x1, x9, x11, lt  // lt = tstop
   26084:	cmp	x1, x10
   26088:	b.eq	2612c <PyInit__decimal@@Base+0x1f678>  // b.none
   2608c:	ldrb	w11, [x19]
   26090:	tbnz	w11, #5, 2610c <PyInit__decimal@@Base+0x1f658>
   26094:	mov	x0, x19
   26098:	mov	x2, x20
   2609c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   260a0:	b	26120 <PyInit__decimal@@Base+0x1f66c>
   260a4:	cmp	x1, x11
   260a8:	b.le	260c8 <PyInit__decimal@@Base+0x1f614>
   260ac:	mov	x0, x19
   260b0:	mov	x2, x20
   260b4:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   260b8:	cbz	w0, 260f4 <PyInit__decimal@@Base+0x1f640>
   260bc:	ldr	x10, [x21, #24]
   260c0:	ldrb	w8, [x21]
   260c4:	ldr	x9, [x21, #8]
   260c8:	ldrb	w11, [x19]
   260cc:	str	x9, [x19, #8]
   260d0:	ldr	x0, [x19, #40]
   260d4:	bfxil	w11, w8, #0, #4
   260d8:	strb	w11, [x19]
   260dc:	ldr	x8, [x21, #16]
   260e0:	stp	x8, x10, [x19, #16]
   260e4:	ldr	x8, [x21, #24]
   260e8:	ldr	x1, [x21, #40]
   260ec:	lsl	x2, x8, #3
   260f0:	bl	63c0 <memcpy@plt>
   260f4:	mov	x0, x19
   260f8:	mov	x1, x22
   260fc:	mov	x2, x20
   26100:	str	x23, [x19, #8]
   26104:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   26108:	b	2604c <PyInit__decimal@@Base+0x1f598>
   2610c:	cmp	x1, x10
   26110:	b.le	2612c <PyInit__decimal@@Base+0x1f678>
   26114:	mov	x0, x19
   26118:	mov	x2, x20
   2611c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   26120:	cbz	w0, 2604c <PyInit__decimal@@Base+0x1f598>
   26124:	ldr	x9, [x21, #24]
   26128:	ldrb	w8, [x21]
   2612c:	ldrb	w10, [x19]
   26130:	ldr	x0, [x19, #40]
   26134:	bfxil	w10, w8, #0, #4
   26138:	strb	w10, [x19]
   2613c:	ldur	q0, [x21, #8]
   26140:	str	x9, [x19, #24]
   26144:	stur	q0, [x19, #8]
   26148:	ldr	x8, [x21, #24]
   2614c:	ldr	x1, [x21, #40]
   26150:	lsl	x2, x8, #3
   26154:	bl	63c0 <memcpy@plt>
   26158:	b	2604c <PyInit__decimal@@Base+0x1f598>
   2615c:	stp	x29, x30, [sp, #-64]!
   26160:	str	x23, [sp, #16]
   26164:	stp	x22, x21, [sp, #32]
   26168:	stp	x20, x19, [sp, #48]
   2616c:	mov	x29, sp
   26170:	ldrb	w8, [x1]
   26174:	mov	x21, x4
   26178:	mov	x22, x3
   2617c:	mov	x20, x1
   26180:	tst	w8, #0xe
   26184:	mov	x19, x0
   26188:	b.eq	261e8 <PyInit__decimal@@Base+0x1f734>  // b.none
   2618c:	mov	x0, x19
   26190:	mov	x1, x20
   26194:	mov	x2, x22
   26198:	mov	x3, x21
   2619c:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   261a0:	cmp	x19, x20
   261a4:	b.eq	262a0 <PyInit__decimal@@Base+0x1f7ec>  // b.none
   261a8:	cbnz	w0, 262a0 <PyInit__decimal@@Base+0x1f7ec>
   261ac:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   261b0:	ldr	x8, [x20, #24]
   261b4:	ldr	x10, [x9, #1344]
   261b8:	ldr	x9, [x19, #32]
   261bc:	cmp	x10, x8
   261c0:	csel	x1, x8, x10, lt  // lt = tstop
   261c4:	cmp	x1, x9
   261c8:	b.eq	262d0 <PyInit__decimal@@Base+0x1f81c>  // b.none
   261cc:	ldrb	w10, [x19]
   261d0:	tbnz	w10, #5, 262b4 <PyInit__decimal@@Base+0x1f800>
   261d4:	mov	x0, x19
   261d8:	mov	x2, x21
   261dc:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   261e0:	cbnz	w0, 262cc <PyInit__decimal@@Base+0x1f818>
   261e4:	b	262a0 <PyInit__decimal@@Base+0x1f7ec>
   261e8:	ldr	x9, [x22]
   261ec:	mov	x23, x2
   261f0:	tbnz	x2, #63, 2622c <PyInit__decimal@@Base+0x1f778>
   261f4:	cmp	x9, x23
   261f8:	b.lt	26238 <PyInit__decimal@@Base+0x1f784>  // b.tstop
   261fc:	mov	x0, x19
   26200:	mov	x1, x20
   26204:	mov	x2, x23
   26208:	mov	x3, x21
   2620c:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   26210:	mov	x0, x19
   26214:	mov	x1, x22
   26218:	ldp	x20, x19, [sp, #48]
   2621c:	ldp	x22, x21, [sp, #32]
   26220:	ldr	x23, [sp, #16]
   26224:	ldp	x29, x30, [sp], #64
   26228:	b	24aa0 <PyInit__decimal@@Base+0x1dfec>
   2622c:	neg	x9, x9
   26230:	cmp	x9, x23
   26234:	b.le	26310 <PyInit__decimal@@Base+0x1f85c>
   26238:	ldrb	w8, [x19]
   2623c:	tbnz	w8, #5, 26280 <PyInit__decimal@@Base+0x1f7cc>
   26240:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   26244:	ldr	x9, [x19, #32]
   26248:	ldr	x1, [x20, #1344]
   2624c:	cmp	x9, x1
   26250:	b.le	26280 <PyInit__decimal@@Base+0x1f7cc>
   26254:	strb	wzr, [x29, #28]
   26258:	ldr	x0, [x19, #40]
   2625c:	add	x3, x29, #0x1c
   26260:	mov	w2, #0x8                   	// #8
   26264:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   26268:	str	x0, [x19, #40]
   2626c:	ldrb	w8, [x29, #28]
   26270:	cbnz	w8, 2627c <PyInit__decimal@@Base+0x1f7c8>
   26274:	ldr	x8, [x20, #1344]
   26278:	str	x8, [x19, #32]
   2627c:	ldrb	w8, [x19]
   26280:	and	w8, w8, #0xf0
   26284:	orr	w8, w8, #0x4
   26288:	stp	xzr, xzr, [x19, #16]
   2628c:	strb	w8, [x19]
   26290:	str	xzr, [x19, #8]
   26294:	ldr	w8, [x21]
   26298:	orr	w8, w8, #0x100
   2629c:	str	w8, [x21]
   262a0:	ldp	x20, x19, [sp, #48]
   262a4:	ldp	x22, x21, [sp, #32]
   262a8:	ldr	x23, [sp, #16]
   262ac:	ldp	x29, x30, [sp], #64
   262b0:	ret
   262b4:	cmp	x1, x9
   262b8:	b.le	262d0 <PyInit__decimal@@Base+0x1f81c>
   262bc:	mov	x0, x19
   262c0:	mov	x2, x21
   262c4:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   262c8:	cbz	w0, 262a0 <PyInit__decimal@@Base+0x1f7ec>
   262cc:	ldr	x8, [x20, #24]
   262d0:	ldrb	w9, [x20]
   262d4:	ldrb	w10, [x19]
   262d8:	ldr	x0, [x19, #40]
   262dc:	ldr	x23, [sp, #16]
   262e0:	bfxil	w10, w9, #0, #4
   262e4:	strb	w10, [x19]
   262e8:	ldur	q0, [x20, #8]
   262ec:	str	x8, [x19, #24]
   262f0:	stur	q0, [x19, #8]
   262f4:	ldr	x8, [x20, #24]
   262f8:	ldr	x1, [x20, #40]
   262fc:	ldp	x20, x19, [sp, #48]
   26300:	ldp	x22, x21, [sp, #32]
   26304:	lsl	x2, x8, #3
   26308:	ldp	x29, x30, [sp], #64
   2630c:	b	63c0 <memcpy@plt>
   26310:	cmp	x19, x20
   26314:	b.eq	2639c <PyInit__decimal@@Base+0x1f8e8>  // b.none
   26318:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2631c:	ldr	x9, [x20, #24]
   26320:	ldr	x11, [x10, #1344]
   26324:	ldr	x10, [x19, #32]
   26328:	cmp	x11, x9
   2632c:	csel	x1, x9, x11, lt  // lt = tstop
   26330:	cmp	x1, x10
   26334:	b.eq	26370 <PyInit__decimal@@Base+0x1f8bc>  // b.none
   26338:	ldrb	w11, [x19]
   2633c:	tbnz	w11, #5, 26350 <PyInit__decimal@@Base+0x1f89c>
   26340:	mov	x0, x19
   26344:	mov	x2, x21
   26348:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2634c:	b	26364 <PyInit__decimal@@Base+0x1f8b0>
   26350:	cmp	x1, x10
   26354:	b.le	26370 <PyInit__decimal@@Base+0x1f8bc>
   26358:	mov	x0, x19
   2635c:	mov	x2, x21
   26360:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   26364:	cbz	w0, 262a0 <PyInit__decimal@@Base+0x1f7ec>
   26368:	ldr	x9, [x20, #24]
   2636c:	ldrb	w8, [x20]
   26370:	ldrb	w10, [x19]
   26374:	ldr	x0, [x19, #40]
   26378:	bfxil	w10, w8, #0, #4
   2637c:	strb	w10, [x19]
   26380:	ldur	q0, [x20, #8]
   26384:	str	x9, [x19, #24]
   26388:	stur	q0, [x19, #8]
   2638c:	ldr	x8, [x20, #24]
   26390:	ldr	x1, [x20, #40]
   26394:	lsl	x2, x8, #3
   26398:	bl	63c0 <memcpy@plt>
   2639c:	mov	x0, x19
   263a0:	mov	x1, x22
   263a4:	bl	24aa0 <PyInit__decimal@@Base+0x1dfec>
   263a8:	neg	x1, x23
   263ac:	mov	x0, x19
   263b0:	ldp	x20, x19, [sp, #48]
   263b4:	ldp	x22, x21, [sp, #32]
   263b8:	ldr	x23, [sp, #16]
   263bc:	ldp	x29, x30, [sp], #64
   263c0:	b	23ebc <PyInit__decimal@@Base+0x1d408>
   263c4:	sub	sp, sp, #0x50
   263c8:	stp	x29, x30, [sp, #16]
   263cc:	str	x23, [sp, #32]
   263d0:	stp	x22, x21, [sp, #48]
   263d4:	stp	x20, x19, [sp, #64]
   263d8:	add	x29, sp, #0x10
   263dc:	str	wzr, [sp, #8]
   263e0:	ldrb	w8, [x1]
   263e4:	mov	x20, x4
   263e8:	mov	x22, x3
   263ec:	mov	x23, x2
   263f0:	mov	x21, x1
   263f4:	tst	w8, #0xe
   263f8:	mov	x19, x0
   263fc:	b.ne	2640c <PyInit__decimal@@Base+0x1f958>  // b.any
   26400:	ldrb	w8, [x23]
   26404:	tst	w8, #0xe
   26408:	b.eq	26428 <PyInit__decimal@@Base+0x1f974>  // b.none
   2640c:	mov	x0, x19
   26410:	mov	x1, x21
   26414:	mov	x2, x23
   26418:	mov	x3, x22
   2641c:	mov	x4, x20
   26420:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   26424:	cbnz	w0, 264cc <PyInit__decimal@@Base+0x1fa18>
   26428:	ldr	x8, [x23, #8]
   2642c:	cbnz	x8, 26464 <PyInit__decimal@@Base+0x1f9b0>
   26430:	ldrb	w8, [x23]
   26434:	tbnz	w8, #1, 26464 <PyInit__decimal@@Base+0x1f9b0>
   26438:	add	x2, sp, #0x8
   2643c:	mov	w0, wzr
   26440:	mov	x1, x23
   26444:	bl	222d8 <PyInit__decimal@@Base+0x1b824>
   26448:	ldr	w8, [sp, #8]
   2644c:	tbnz	w8, #8, 264fc <PyInit__decimal@@Base+0x1fa48>
   26450:	ldrb	w9, [x23]
   26454:	tbnz	x0, #63, 264e4 <PyInit__decimal@@Base+0x1fa30>
   26458:	tst	w9, #0x1
   2645c:	cneg	x23, x0, ne  // ne = any
   26460:	b	26500 <PyInit__decimal@@Base+0x1fa4c>
   26464:	ldrb	w8, [x19]
   26468:	tbnz	w8, #5, 264ac <PyInit__decimal@@Base+0x1f9f8>
   2646c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   26470:	ldr	x9, [x19, #32]
   26474:	ldr	x1, [x21, #1344]
   26478:	cmp	x9, x1
   2647c:	b.le	264ac <PyInit__decimal@@Base+0x1f9f8>
   26480:	sturb	wzr, [x29, #-4]
   26484:	ldr	x0, [x19, #40]
   26488:	sub	x3, x29, #0x4
   2648c:	mov	w2, #0x8                   	// #8
   26490:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   26494:	str	x0, [x19, #40]
   26498:	ldurb	w8, [x29, #-4]
   2649c:	cbnz	w8, 264a8 <PyInit__decimal@@Base+0x1f9f4>
   264a0:	ldr	x8, [x21, #1344]
   264a4:	str	x8, [x19, #32]
   264a8:	ldrb	w8, [x19]
   264ac:	and	w8, w8, #0xf0
   264b0:	orr	w8, w8, #0x4
   264b4:	stp	xzr, xzr, [x19, #16]
   264b8:	strb	w8, [x19]
   264bc:	str	xzr, [x19, #8]
   264c0:	ldr	w8, [x20]
   264c4:	orr	w8, w8, #0x100
   264c8:	str	w8, [x20]
   264cc:	ldp	x20, x19, [sp, #64]
   264d0:	ldp	x22, x21, [sp, #48]
   264d4:	ldr	x23, [sp, #32]
   264d8:	ldp	x29, x30, [sp, #16]
   264dc:	add	sp, sp, #0x50
   264e0:	ret
   264e4:	mov	x23, #0x8000000000000000    	// #-9223372036854775808
   264e8:	cmp	x0, x23
   264ec:	b.ne	264f4 <PyInit__decimal@@Base+0x1fa40>  // b.any
   264f0:	tbnz	w9, #0, 26500 <PyInit__decimal@@Base+0x1fa4c>
   264f4:	orr	w8, w8, #0x100
   264f8:	str	w8, [sp, #8]
   264fc:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
   26500:	tbnz	w8, #8, 2654c <PyInit__decimal@@Base+0x1fa98>
   26504:	ldr	x8, [x22]
   26508:	cmp	x23, x8
   2650c:	b.gt	2658c <PyInit__decimal@@Base+0x1fad8>
   26510:	neg	x8, x8
   26514:	cmp	x23, x8
   26518:	b.lt	2658c <PyInit__decimal@@Base+0x1fad8>  // b.tstop
   2651c:	ldrb	w8, [x21]
   26520:	tbnz	w8, #1, 265cc <PyInit__decimal@@Base+0x1fb18>
   26524:	tbnz	x23, #63, 2660c <PyInit__decimal@@Base+0x1fb58>
   26528:	mov	x0, x19
   2652c:	mov	x1, x21
   26530:	mov	x2, x23
   26534:	mov	x3, x20
   26538:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   2653c:	mov	x0, x19
   26540:	mov	x1, x22
   26544:	bl	24aa0 <PyInit__decimal@@Base+0x1dfec>
   26548:	b	264cc <PyInit__decimal@@Base+0x1fa18>
   2654c:	ldrb	w8, [x19]
   26550:	tbnz	w8, #5, 264ac <PyInit__decimal@@Base+0x1f9f8>
   26554:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   26558:	ldr	x9, [x19, #32]
   2655c:	ldr	x1, [x21, #1344]
   26560:	cmp	x9, x1
   26564:	b.le	264ac <PyInit__decimal@@Base+0x1f9f8>
   26568:	strb	wzr, [x29, #24]
   2656c:	ldr	x0, [x19, #40]
   26570:	add	x3, x29, #0x18
   26574:	mov	w2, #0x8                   	// #8
   26578:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2657c:	str	x0, [x19, #40]
   26580:	ldrb	w8, [x29, #24]
   26584:	cbnz	w8, 264a8 <PyInit__decimal@@Base+0x1f9f4>
   26588:	b	264a0 <PyInit__decimal@@Base+0x1f9ec>
   2658c:	ldrb	w8, [x19]
   26590:	tbnz	w8, #5, 264ac <PyInit__decimal@@Base+0x1f9f8>
   26594:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   26598:	ldr	x9, [x19, #32]
   2659c:	ldr	x1, [x21, #1344]
   265a0:	cmp	x9, x1
   265a4:	b.le	264ac <PyInit__decimal@@Base+0x1f9f8>
   265a8:	strb	wzr, [x29, #28]
   265ac:	ldr	x0, [x19, #40]
   265b0:	add	x3, x29, #0x1c
   265b4:	mov	w2, #0x8                   	// #8
   265b8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   265bc:	str	x0, [x19, #40]
   265c0:	ldrb	w8, [x29, #28]
   265c4:	cbnz	w8, 264a8 <PyInit__decimal@@Base+0x1f9f4>
   265c8:	b	264a0 <PyInit__decimal@@Base+0x1f9ec>
   265cc:	cmp	x19, x21
   265d0:	b.eq	264cc <PyInit__decimal@@Base+0x1fa18>  // b.none
   265d4:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   265d8:	ldr	x9, [x21, #24]
   265dc:	ldr	x11, [x10, #1344]
   265e0:	ldr	x10, [x19, #32]
   265e4:	cmp	x11, x9
   265e8:	csel	x1, x9, x11, lt  // lt = tstop
   265ec:	cmp	x1, x10
   265f0:	b.eq	2666c <PyInit__decimal@@Base+0x1fbb8>  // b.none
   265f4:	ldrb	w11, [x19]
   265f8:	tbnz	w11, #5, 2664c <PyInit__decimal@@Base+0x1fb98>
   265fc:	mov	x0, x19
   26600:	mov	x2, x20
   26604:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   26608:	b	26660 <PyInit__decimal@@Base+0x1fbac>
   2660c:	cmp	x19, x21
   26610:	b.eq	266e8 <PyInit__decimal@@Base+0x1fc34>  // b.none
   26614:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   26618:	ldr	x9, [x21, #24]
   2661c:	ldr	x11, [x10, #1344]
   26620:	ldr	x10, [x19, #32]
   26624:	cmp	x11, x9
   26628:	csel	x1, x9, x11, lt  // lt = tstop
   2662c:	cmp	x1, x10
   26630:	b.eq	266bc <PyInit__decimal@@Base+0x1fc08>  // b.none
   26634:	ldrb	w11, [x19]
   26638:	tbnz	w11, #5, 2669c <PyInit__decimal@@Base+0x1fbe8>
   2663c:	mov	x0, x19
   26640:	mov	x2, x20
   26644:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   26648:	b	266b0 <PyInit__decimal@@Base+0x1fbfc>
   2664c:	cmp	x1, x10
   26650:	b.le	2666c <PyInit__decimal@@Base+0x1fbb8>
   26654:	mov	x0, x19
   26658:	mov	x2, x20
   2665c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   26660:	cbz	w0, 264cc <PyInit__decimal@@Base+0x1fa18>
   26664:	ldr	x9, [x21, #24]
   26668:	ldrb	w8, [x21]
   2666c:	ldrb	w10, [x19]
   26670:	ldr	x0, [x19, #40]
   26674:	bfxil	w10, w8, #0, #4
   26678:	strb	w10, [x19]
   2667c:	ldur	q0, [x21, #8]
   26680:	str	x9, [x19, #24]
   26684:	stur	q0, [x19, #8]
   26688:	ldr	x8, [x21, #24]
   2668c:	ldr	x1, [x21, #40]
   26690:	lsl	x2, x8, #3
   26694:	bl	63c0 <memcpy@plt>
   26698:	b	264cc <PyInit__decimal@@Base+0x1fa18>
   2669c:	cmp	x1, x10
   266a0:	b.le	266bc <PyInit__decimal@@Base+0x1fc08>
   266a4:	mov	x0, x19
   266a8:	mov	x2, x20
   266ac:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   266b0:	cbz	w0, 264cc <PyInit__decimal@@Base+0x1fa18>
   266b4:	ldr	x9, [x21, #24]
   266b8:	ldrb	w8, [x21]
   266bc:	ldrb	w10, [x19]
   266c0:	ldr	x0, [x19, #40]
   266c4:	bfxil	w10, w8, #0, #4
   266c8:	strb	w10, [x19]
   266cc:	ldur	q0, [x21, #8]
   266d0:	str	x9, [x19, #24]
   266d4:	stur	q0, [x19, #8]
   266d8:	ldr	x8, [x21, #24]
   266dc:	ldr	x1, [x21, #40]
   266e0:	lsl	x2, x8, #3
   266e4:	bl	63c0 <memcpy@plt>
   266e8:	mov	x0, x19
   266ec:	mov	x1, x22
   266f0:	bl	24aa0 <PyInit__decimal@@Base+0x1dfec>
   266f4:	neg	x1, x23
   266f8:	mov	x0, x19
   266fc:	bl	23ebc <PyInit__decimal@@Base+0x1d408>
   26700:	b	264cc <PyInit__decimal@@Base+0x1fa18>
   26704:	stp	x29, x30, [sp, #-80]!
   26708:	str	x25, [sp, #16]
   2670c:	stp	x24, x23, [sp, #32]
   26710:	stp	x22, x21, [sp, #48]
   26714:	stp	x20, x19, [sp, #64]
   26718:	mov	x29, sp
   2671c:	ldrb	w8, [x1]
   26720:	mov	x21, x4
   26724:	mov	x19, x0
   26728:	tst	w8, #0xe
   2672c:	b.ne	26758 <PyInit__decimal@@Base+0x1fca4>  // b.any
   26730:	ldrb	w9, [x2]
   26734:	and	w10, w9, #0xe
   26738:	bfxil	w10, w8, #0, #1
   2673c:	and	w8, w9, #0x1
   26740:	orr	w8, w8, w10
   26744:	cbnz	w8, 26758 <PyInit__decimal@@Base+0x1fca4>
   26748:	ldr	x8, [x1, #8]
   2674c:	cbnz	x8, 26758 <PyInit__decimal@@Base+0x1fca4>
   26750:	ldr	x8, [x2, #8]
   26754:	cbz	x8, 267d8 <PyInit__decimal@@Base+0x1fd24>
   26758:	ldrb	w8, [x19]
   2675c:	tbnz	w8, #5, 267a0 <PyInit__decimal@@Base+0x1fcec>
   26760:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   26764:	ldr	x9, [x19, #32]
   26768:	ldr	x1, [x20, #1344]
   2676c:	cmp	x9, x1
   26770:	b.le	267a0 <PyInit__decimal@@Base+0x1fcec>
   26774:	strb	wzr, [x29, #28]
   26778:	ldr	x0, [x19, #40]
   2677c:	add	x3, x29, #0x1c
   26780:	mov	w2, #0x8                   	// #8
   26784:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   26788:	str	x0, [x19, #40]
   2678c:	ldrb	w8, [x29, #28]
   26790:	cbnz	w8, 2679c <PyInit__decimal@@Base+0x1fce8>
   26794:	ldr	x8, [x20, #1344]
   26798:	str	x8, [x19, #32]
   2679c:	ldrb	w8, [x19]
   267a0:	and	w8, w8, #0xf0
   267a4:	orr	w8, w8, #0x4
   267a8:	stp	xzr, xzr, [x19, #16]
   267ac:	strb	w8, [x19]
   267b0:	str	xzr, [x19, #8]
   267b4:	ldr	w8, [x21]
   267b8:	orr	w8, w8, #0x100
   267bc:	str	w8, [x21]
   267c0:	ldp	x20, x19, [sp, #64]
   267c4:	ldp	x22, x21, [sp, #48]
   267c8:	ldp	x24, x23, [sp, #32]
   267cc:	ldr	x25, [sp, #16]
   267d0:	ldp	x29, x30, [sp], #80
   267d4:	ret
   267d8:	ldr	x8, [x2, #16]
   267dc:	ldr	x9, [x1, #16]
   267e0:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   267e4:	ldr	x10, [x23, #1344]
   267e8:	mov	x20, x3
   267ec:	cmp	x8, x9
   267f0:	csel	x24, x2, x1, gt
   267f4:	ldr	x9, [x24, #24]
   267f8:	ldr	x8, [x19, #32]
   267fc:	csel	x25, x1, x2, gt
   26800:	cmp	x10, x9
   26804:	csel	x1, x9, x10, lt  // lt = tstop
   26808:	cmp	x1, x8
   2680c:	b.eq	26840 <PyInit__decimal@@Base+0x1fd8c>  // b.none
   26810:	ldrb	w9, [x19]
   26814:	tbnz	w9, #5, 26828 <PyInit__decimal@@Base+0x1fd74>
   26818:	mov	x0, x19
   2681c:	mov	x2, x21
   26820:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   26824:	b	2683c <PyInit__decimal@@Base+0x1fd88>
   26828:	cmp	x1, x8
   2682c:	b.le	26840 <PyInit__decimal@@Base+0x1fd8c>
   26830:	mov	x0, x19
   26834:	mov	x2, x21
   26838:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2683c:	cbz	w0, 267c0 <PyInit__decimal@@Base+0x1fd0c>
   26840:	ldr	x12, [x25, #40]
   26844:	ldr	x8, [x24, #40]
   26848:	ldr	x9, [x25, #24]
   2684c:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x3854c>
   26850:	ldr	x11, [x12]
   26854:	ldr	x10, [x8]
   26858:	sub	x9, x9, #0x1
   2685c:	cmp	x9, #0x1
   26860:	add	x22, x22, #0x370
   26864:	mov	x9, xzr
   26868:	b.lt	268fc <PyInit__decimal@@Base+0x1fe48>  // b.tstop
   2686c:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   26870:	movk	x13, #0xcccd
   26874:	mov	w14, #0xa                   	// #10
   26878:	mov	x16, xzr
   2687c:	mov	x15, xzr
   26880:	b	268a0 <PyInit__decimal@@Base+0x1fdec>
   26884:	ldr	x10, [x22, x16]
   26888:	add	x16, x16, #0x8
   2688c:	cmp	x16, #0x98
   26890:	add	x15, x10, x15
   26894:	mov	x10, x18
   26898:	mov	x11, x17
   2689c:	b.eq	268d4 <PyInit__decimal@@Base+0x1fe20>  // b.none
   268a0:	umulh	x17, x11, x13
   268a4:	umulh	x18, x10, x13
   268a8:	lsr	x17, x17, #3
   268ac:	lsr	x18, x18, #3
   268b0:	msub	x11, x17, x14, x11
   268b4:	msub	x10, x18, x14, x10
   268b8:	orr	w0, w10, w11
   268bc:	tst	x0, #0xe
   268c0:	b.ne	26b70 <PyInit__decimal@@Base+0x200bc>  // b.any
   268c4:	cmp	x11, x10
   268c8:	b.ne	26884 <PyInit__decimal@@Base+0x1fdd0>  // b.any
   268cc:	mov	x10, xzr
   268d0:	b	26888 <PyInit__decimal@@Base+0x1fdd4>
   268d4:	ldr	x10, [x19, #40]
   268d8:	str	x15, [x10, x9, lsl #3]
   268dc:	add	x9, x9, #0x1
   268e0:	ldr	x15, [x25, #24]
   268e4:	lsl	x10, x9, #3
   268e8:	ldr	x11, [x12, x10]
   268ec:	ldr	x10, [x8, x10]
   268f0:	sub	x15, x15, #0x1
   268f4:	cmp	x9, x15
   268f8:	b.lt	26878 <PyInit__decimal@@Base+0x1fdc4>  // b.tstop
   268fc:	ldr	x25, [x22, #72]
   26900:	cmp	x25, x11
   26904:	b.ls	26930 <PyInit__decimal@@Base+0x1fe7c>  // b.plast
   26908:	ldr	x12, [x22, #32]
   2690c:	cmp	x12, x11
   26910:	b.ls	26958 <PyInit__decimal@@Base+0x1fea4>  // b.plast
   26914:	ldr	x12, [x22, #16]
   26918:	cmp	x12, x11
   2691c:	b.ls	2699c <PyInit__decimal@@Base+0x1fee8>  // b.plast
   26920:	ldr	x12, [x22, #8]
   26924:	cmp	x12, x11
   26928:	mov	w12, #0x1                   	// #1
   2692c:	b	26a00 <PyInit__decimal@@Base+0x1ff4c>
   26930:	ldr	x12, [x22, #112]
   26934:	cmp	x12, x11
   26938:	b.ls	26974 <PyInit__decimal@@Base+0x1fec0>  // b.plast
   2693c:	ldr	x12, [x22, #88]
   26940:	cmp	x12, x11
   26944:	b.ls	269ac <PyInit__decimal@@Base+0x1fef8>  // b.plast
   26948:	ldr	x12, [x22, #80]
   2694c:	cmp	x12, x11
   26950:	mov	w12, #0xa                   	// #10
   26954:	b	26a00 <PyInit__decimal@@Base+0x1ff4c>
   26958:	ldr	x12, [x22, #48]
   2695c:	cmp	x12, x11
   26960:	b.ls	269c8 <PyInit__decimal@@Base+0x1ff14>  // b.plast
   26964:	ldr	x12, [x22, #40]
   26968:	cmp	x12, x11
   2696c:	mov	w12, #0x5                   	// #5
   26970:	b	26a00 <PyInit__decimal@@Base+0x1ff4c>
   26974:	ldr	x12, [x22, #144]
   26978:	cmp	x12, x11
   2697c:	b.ls	269e4 <PyInit__decimal@@Base+0x1ff30>  // b.plast
   26980:	ldr	x12, [x22, #128]
   26984:	cmp	x12, x11
   26988:	b.ls	269f4 <PyInit__decimal@@Base+0x1ff40>  // b.plast
   2698c:	ldr	x12, [x22, #120]
   26990:	cmp	x12, x11
   26994:	mov	w12, #0xf                   	// #15
   26998:	b	26a00 <PyInit__decimal@@Base+0x1ff4c>
   2699c:	ldr	x12, [x22, #24]
   269a0:	cmp	x12, x11
   269a4:	mov	w12, #0x3                   	// #3
   269a8:	b	26a00 <PyInit__decimal@@Base+0x1ff4c>
   269ac:	ldr	x12, [x22, #104]
   269b0:	cmp	x12, x11
   269b4:	b.ls	26bb0 <PyInit__decimal@@Base+0x200fc>  // b.plast
   269b8:	ldr	x12, [x22, #96]
   269bc:	cmp	x12, x11
   269c0:	mov	w12, #0xc                   	// #12
   269c4:	b	26a00 <PyInit__decimal@@Base+0x1ff4c>
   269c8:	ldr	x12, [x22, #64]
   269cc:	cmp	x12, x11
   269d0:	b.ls	26bb8 <PyInit__decimal@@Base+0x20104>  // b.plast
   269d4:	ldr	x12, [x22, #56]
   269d8:	cmp	x12, x11
   269dc:	mov	w12, #0x7                   	// #7
   269e0:	b	26a00 <PyInit__decimal@@Base+0x1ff4c>
   269e4:	ldr	x12, [x22, #152]
   269e8:	cmp	x12, x11
   269ec:	mov	w12, #0x13                  	// #19
   269f0:	b	26a00 <PyInit__decimal@@Base+0x1ff4c>
   269f4:	ldr	x12, [x22, #136]
   269f8:	cmp	x12, x11
   269fc:	mov	w12, #0x11                  	// #17
   26a00:	cinc	x13, x12, ls  // ls = plast
   26a04:	mov	x15, #0xcccccccccccccccc    	// #-3689348814741910324
   26a08:	mov	x14, xzr
   26a0c:	mov	x12, xzr
   26a10:	movk	x15, #0xcccd
   26a14:	mov	w16, #0xa                   	// #10
   26a18:	b	26a34 <PyInit__decimal@@Base+0x1ff80>
   26a1c:	ldr	x11, [x22, x14, lsl #3]
   26a20:	add	x14, x14, #0x1
   26a24:	cmp	x14, x13
   26a28:	add	x12, x11, x12
   26a2c:	mov	x11, x17
   26a30:	b.cs	26a6c <PyInit__decimal@@Base+0x1ffb8>  // b.hs, b.nlast
   26a34:	mov	x18, x10
   26a38:	umulh	x10, x11, x15
   26a3c:	umulh	x0, x18, x15
   26a40:	lsr	x17, x10, #3
   26a44:	lsr	x10, x0, #3
   26a48:	msub	x11, x17, x16, x11
   26a4c:	msub	x18, x10, x16, x18
   26a50:	orr	w0, w18, w11
   26a54:	tst	x0, #0xe
   26a58:	b.ne	26b70 <PyInit__decimal@@Base+0x200bc>  // b.any
   26a5c:	cmp	x11, x18
   26a60:	b.ne	26a1c <PyInit__decimal@@Base+0x1ff68>  // b.any
   26a64:	mov	x11, xzr
   26a68:	b	26a20 <PyInit__decimal@@Base+0x1ff6c>
   26a6c:	sub	w11, w14, #0x1
   26a70:	cmp	w11, #0x11
   26a74:	b.hi	26ab0 <PyInit__decimal@@Base+0x1fffc>  // b.pmore
   26a78:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   26a7c:	movk	x11, #0xcccd
   26a80:	mov	w13, #0xa                   	// #10
   26a84:	umulh	x15, x10, x11
   26a88:	lsr	x15, x15, #3
   26a8c:	msub	x10, x15, x13, x10
   26a90:	cmp	x10, #0x1
   26a94:	b.hi	26b70 <PyInit__decimal@@Base+0x200bc>  // b.pmore
   26a98:	ldr	x16, [x22, x14, lsl #3]
   26a9c:	cmp	x14, #0x12
   26aa0:	add	x14, x14, #0x1
   26aa4:	madd	x12, x16, x10, x12
   26aa8:	mov	x10, x15
   26aac:	b.cc	26a84 <PyInit__decimal@@Base+0x1ffd0>  // b.lo, b.ul, b.last
   26ab0:	ldr	x10, [x19, #40]
   26ab4:	str	x12, [x10, x9, lsl #3]
   26ab8:	ldr	x13, [x24, #24]
   26abc:	add	x9, x9, #0x1
   26ac0:	cmp	x9, x13
   26ac4:	b.ge	26b14 <PyInit__decimal@@Base+0x20060>  // b.tcont
   26ac8:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   26acc:	movk	x11, #0xcccd
   26ad0:	mov	w12, #0xa                   	// #10
   26ad4:	ldr	x13, [x8, x9, lsl #3]
   26ad8:	mov	w14, #0x13                  	// #19
   26adc:	mov	x16, x13
   26ae0:	umulh	x15, x16, x11
   26ae4:	lsr	x15, x15, #3
   26ae8:	msub	x16, x15, x12, x16
   26aec:	cmp	x16, #0x1
   26af0:	b.hi	26b70 <PyInit__decimal@@Base+0x200bc>  // b.pmore
   26af4:	subs	w14, w14, #0x1
   26af8:	mov	x16, x15
   26afc:	b.ne	26ae0 <PyInit__decimal@@Base+0x2002c>  // b.any
   26b00:	str	x13, [x10, x9, lsl #3]
   26b04:	ldr	x13, [x24, #24]
   26b08:	add	x9, x9, #0x1
   26b0c:	cmp	x9, x13
   26b10:	b.lt	26ad4 <PyInit__decimal@@Base+0x20020>  // b.tstop
   26b14:	ldrb	w8, [x19]
   26b18:	sub	x10, x10, #0x8
   26b1c:	str	xzr, [x19, #8]
   26b20:	and	w9, w8, #0xf0
   26b24:	strb	w9, [x19]
   26b28:	mov	x9, x13
   26b2c:	cmp	x13, #0x2
   26b30:	b.lt	26b40 <PyInit__decimal@@Base+0x2008c>  // b.tstop
   26b34:	ldr	x11, [x10, x9, lsl #3]
   26b38:	sub	x13, x9, #0x1
   26b3c:	cbz	x11, 26b28 <PyInit__decimal@@Base+0x20074>
   26b40:	str	x9, [x19, #24]
   26b44:	ldr	x11, [x23, #1344]
   26b48:	ldr	x10, [x19, #32]
   26b4c:	cmp	x11, x9
   26b50:	csel	x1, x9, x11, lt  // lt = tstop
   26b54:	cmp	x1, x10
   26b58:	b.eq	26bd4 <PyInit__decimal@@Base+0x20120>  // b.none
   26b5c:	tbnz	w8, #5, 26bc0 <PyInit__decimal@@Base+0x2010c>
   26b60:	mov	x0, x19
   26b64:	mov	x2, x21
   26b68:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   26b6c:	b	26bd4 <PyInit__decimal@@Base+0x20120>
   26b70:	ldrb	w8, [x19]
   26b74:	tbnz	w8, #5, 267a0 <PyInit__decimal@@Base+0x1fcec>
   26b78:	ldr	x9, [x19, #32]
   26b7c:	ldr	x1, [x23, #1344]
   26b80:	cmp	x9, x1
   26b84:	b.le	267a0 <PyInit__decimal@@Base+0x1fcec>
   26b88:	strb	wzr, [x29, #24]
   26b8c:	ldr	x0, [x19, #40]
   26b90:	add	x3, x29, #0x18
   26b94:	mov	w2, #0x8                   	// #8
   26b98:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   26b9c:	str	x0, [x19, #40]
   26ba0:	ldrb	w8, [x29, #24]
   26ba4:	cbnz	w8, 2679c <PyInit__decimal@@Base+0x1fce8>
   26ba8:	ldr	x8, [x23, #1344]
   26bac:	b	26798 <PyInit__decimal@@Base+0x1fce4>
   26bb0:	mov	w13, #0xe                   	// #14
   26bb4:	b	26a04 <PyInit__decimal@@Base+0x1ff50>
   26bb8:	mov	w13, #0x9                   	// #9
   26bbc:	b	26a04 <PyInit__decimal@@Base+0x1ff50>
   26bc0:	cmp	x1, x10
   26bc4:	b.le	26bd4 <PyInit__decimal@@Base+0x20120>
   26bc8:	mov	x0, x19
   26bcc:	mov	x2, x21
   26bd0:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   26bd4:	ldr	x9, [x19, #40]
   26bd8:	ldr	x8, [x19, #24]
   26bdc:	add	x9, x9, x8, lsl #3
   26be0:	ldur	x9, [x9, #-8]
   26be4:	cmp	x25, x9
   26be8:	b.ls	26c14 <PyInit__decimal@@Base+0x20160>  // b.plast
   26bec:	ldr	x10, [x22, #32]
   26bf0:	cmp	x10, x9
   26bf4:	b.ls	26c3c <PyInit__decimal@@Base+0x20188>  // b.plast
   26bf8:	ldr	x10, [x22, #16]
   26bfc:	cmp	x10, x9
   26c00:	b.ls	26c80 <PyInit__decimal@@Base+0x201cc>  // b.plast
   26c04:	ldr	x10, [x22, #8]
   26c08:	cmp	x10, x9
   26c0c:	mov	w9, #0x1                   	// #1
   26c10:	b	26ce4 <PyInit__decimal@@Base+0x20230>
   26c14:	ldr	x10, [x22, #112]
   26c18:	cmp	x10, x9
   26c1c:	b.ls	26c58 <PyInit__decimal@@Base+0x201a4>  // b.plast
   26c20:	ldr	x10, [x22, #88]
   26c24:	cmp	x10, x9
   26c28:	b.ls	26c90 <PyInit__decimal@@Base+0x201dc>  // b.plast
   26c2c:	ldr	x10, [x22, #80]
   26c30:	cmp	x10, x9
   26c34:	mov	w9, #0xa                   	// #10
   26c38:	b	26ce4 <PyInit__decimal@@Base+0x20230>
   26c3c:	ldr	x10, [x22, #48]
   26c40:	cmp	x10, x9
   26c44:	b.ls	26cac <PyInit__decimal@@Base+0x201f8>  // b.plast
   26c48:	ldr	x10, [x22, #40]
   26c4c:	cmp	x10, x9
   26c50:	mov	w9, #0x5                   	// #5
   26c54:	b	26ce4 <PyInit__decimal@@Base+0x20230>
   26c58:	ldr	x10, [x22, #144]
   26c5c:	cmp	x10, x9
   26c60:	b.ls	26cc8 <PyInit__decimal@@Base+0x20214>  // b.plast
   26c64:	ldr	x10, [x22, #128]
   26c68:	cmp	x10, x9
   26c6c:	b.ls	26cd8 <PyInit__decimal@@Base+0x20224>  // b.plast
   26c70:	ldr	x10, [x22, #120]
   26c74:	cmp	x10, x9
   26c78:	mov	w9, #0xf                   	// #15
   26c7c:	b	26ce4 <PyInit__decimal@@Base+0x20230>
   26c80:	ldr	x10, [x22, #24]
   26c84:	cmp	x10, x9
   26c88:	mov	w9, #0x3                   	// #3
   26c8c:	b	26ce4 <PyInit__decimal@@Base+0x20230>
   26c90:	ldr	x10, [x22, #104]
   26c94:	cmp	x10, x9
   26c98:	b.ls	26d18 <PyInit__decimal@@Base+0x20264>  // b.plast
   26c9c:	ldr	x10, [x22, #96]
   26ca0:	cmp	x10, x9
   26ca4:	mov	w9, #0xc                   	// #12
   26ca8:	b	26ce4 <PyInit__decimal@@Base+0x20230>
   26cac:	ldr	x10, [x22, #64]
   26cb0:	cmp	x10, x9
   26cb4:	b.ls	26d20 <PyInit__decimal@@Base+0x2026c>  // b.plast
   26cb8:	ldr	x10, [x22, #56]
   26cbc:	cmp	x10, x9
   26cc0:	mov	w9, #0x7                   	// #7
   26cc4:	b	26ce4 <PyInit__decimal@@Base+0x20230>
   26cc8:	ldr	x10, [x22, #152]
   26ccc:	cmp	x10, x9
   26cd0:	mov	w9, #0x13                  	// #19
   26cd4:	b	26ce4 <PyInit__decimal@@Base+0x20230>
   26cd8:	ldr	x10, [x22, #136]
   26cdc:	cmp	x10, x9
   26ce0:	mov	w9, #0x11                  	// #17
   26ce4:	cinc	x9, x9, ls  // ls = plast
   26ce8:	mov	w10, #0x13                  	// #19
   26cec:	madd	x8, x8, x10, x9
   26cf0:	sub	x8, x8, #0x13
   26cf4:	str	x8, [x19, #16]
   26cf8:	mov	x0, x19
   26cfc:	mov	x1, x20
   26d00:	ldp	x20, x19, [sp, #64]
   26d04:	ldp	x22, x21, [sp, #48]
   26d08:	ldp	x24, x23, [sp, #32]
   26d0c:	ldr	x25, [sp, #16]
   26d10:	ldp	x29, x30, [sp], #80
   26d14:	b	24aa0 <PyInit__decimal@@Base+0x1dfec>
   26d18:	mov	w9, #0xe                   	// #14
   26d1c:	b	26ce8 <PyInit__decimal@@Base+0x20234>
   26d20:	mov	w9, #0x9                   	// #9
   26d24:	b	26ce8 <PyInit__decimal@@Base+0x20234>
   26d28:	stp	x29, x30, [sp, #-48]!
   26d2c:	stp	x22, x21, [sp, #16]
   26d30:	stp	x20, x19, [sp, #32]
   26d34:	mov	x29, sp
   26d38:	ldrb	w8, [x1]
   26d3c:	mov	x19, x3
   26d40:	mov	x20, x2
   26d44:	mov	x21, x1
   26d48:	tst	w8, #0xe
   26d4c:	mov	x22, x0
   26d50:	b.eq	26d80 <PyInit__decimal@@Base+0x202cc>  // b.none
   26d54:	mov	x0, x22
   26d58:	mov	x1, x21
   26d5c:	mov	x2, x20
   26d60:	mov	x3, x19
   26d64:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   26d68:	cbz	w0, 26d7c <PyInit__decimal@@Base+0x202c8>
   26d6c:	ldp	x20, x19, [sp, #32]
   26d70:	ldp	x22, x21, [sp, #16]
   26d74:	ldp	x29, x30, [sp], #48
   26d78:	ret
   26d7c:	ldrb	w8, [x21]
   26d80:	mov	x0, x22
   26d84:	mov	x1, x21
   26d88:	mov	x2, x20
   26d8c:	mov	x3, x19
   26d90:	tbnz	w8, #0, 26da4 <PyInit__decimal@@Base+0x202f0>
   26d94:	ldp	x20, x19, [sp, #32]
   26d98:	ldp	x22, x21, [sp, #16]
   26d9c:	ldp	x29, x30, [sp], #48
   26da0:	b	26e74 <PyInit__decimal@@Base+0x203c0>
   26da4:	ldp	x20, x19, [sp, #32]
   26da8:	ldp	x22, x21, [sp, #16]
   26dac:	ldp	x29, x30, [sp], #48
   26db0:	b	26db4 <PyInit__decimal@@Base+0x20300>
   26db4:	stp	x29, x30, [sp, #-48]!
   26db8:	stp	x22, x21, [sp, #16]
   26dbc:	stp	x20, x19, [sp, #32]
   26dc0:	mov	x29, sp
   26dc4:	ldrb	w8, [x1]
   26dc8:	mov	x19, x3
   26dcc:	mov	x20, x2
   26dd0:	mov	x22, x1
   26dd4:	tst	w8, #0xe
   26dd8:	mov	x21, x0
   26ddc:	b.eq	26e0c <PyInit__decimal@@Base+0x20358>  // b.none
   26de0:	mov	x0, x21
   26de4:	mov	x1, x22
   26de8:	mov	x2, x20
   26dec:	mov	x3, x19
   26df0:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   26df4:	cbz	w0, 26e08 <PyInit__decimal@@Base+0x20354>
   26df8:	ldp	x20, x19, [sp, #32]
   26dfc:	ldp	x22, x21, [sp, #16]
   26e00:	ldp	x29, x30, [sp], #48
   26e04:	ret
   26e08:	ldrb	w8, [x22]
   26e0c:	tst	w8, #0xe
   26e10:	b.ne	26e34 <PyInit__decimal@@Base+0x20380>  // b.any
   26e14:	ldr	x8, [x22, #40]
   26e18:	ldr	x9, [x22, #24]
   26e1c:	add	x8, x8, x9, lsl #3
   26e20:	ldur	x8, [x8, #-8]
   26e24:	cbnz	x8, 26e34 <PyInit__decimal@@Base+0x20380>
   26e28:	ldr	w8, [x20, #36]
   26e2c:	cmp	w8, #0x3
   26e30:	b.ne	26e60 <PyInit__decimal@@Base+0x203ac>  // b.any
   26e34:	mov	x0, x21
   26e38:	mov	x1, x22
   26e3c:	mov	x2, x19
   26e40:	bl	234c4 <PyInit__decimal@@Base+0x1ca10>
   26e44:	mov	x0, x21
   26e48:	mov	x1, x20
   26e4c:	mov	x2, x19
   26e50:	ldp	x20, x19, [sp, #32]
   26e54:	ldp	x22, x21, [sp, #16]
   26e58:	ldp	x29, x30, [sp], #48
   26e5c:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   26e60:	mov	x0, x21
   26e64:	mov	x1, x22
   26e68:	mov	x2, x19
   26e6c:	bl	2340c <PyInit__decimal@@Base+0x1c958>
   26e70:	b	26e44 <PyInit__decimal@@Base+0x20390>
   26e74:	stp	x29, x30, [sp, #-48]!
   26e78:	stp	x22, x21, [sp, #16]
   26e7c:	stp	x20, x19, [sp, #32]
   26e80:	mov	x29, sp
   26e84:	ldrb	w8, [x1]
   26e88:	mov	x19, x3
   26e8c:	mov	x20, x2
   26e90:	mov	x22, x1
   26e94:	tst	w8, #0xe
   26e98:	mov	x21, x0
   26e9c:	b.eq	26ecc <PyInit__decimal@@Base+0x20418>  // b.none
   26ea0:	mov	x0, x21
   26ea4:	mov	x1, x22
   26ea8:	mov	x2, x20
   26eac:	mov	x3, x19
   26eb0:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   26eb4:	cbz	w0, 26ec8 <PyInit__decimal@@Base+0x20414>
   26eb8:	ldp	x20, x19, [sp, #32]
   26ebc:	ldp	x22, x21, [sp, #16]
   26ec0:	ldp	x29, x30, [sp], #48
   26ec4:	ret
   26ec8:	ldrb	w8, [x22]
   26ecc:	tst	w8, #0xe
   26ed0:	b.ne	26ef4 <PyInit__decimal@@Base+0x20440>  // b.any
   26ed4:	ldr	x9, [x22, #40]
   26ed8:	ldr	x10, [x22, #24]
   26edc:	add	x9, x9, x10, lsl #3
   26ee0:	ldur	x9, [x9, #-8]
   26ee4:	cbnz	x9, 26ef4 <PyInit__decimal@@Base+0x20440>
   26ee8:	ldr	w9, [x20, #36]
   26eec:	cmp	w9, #0x3
   26ef0:	b.ne	26fa0 <PyInit__decimal@@Base+0x204ec>  // b.any
   26ef4:	cmp	x21, x22
   26ef8:	b.eq	26f84 <PyInit__decimal@@Base+0x204d0>  // b.none
   26efc:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   26f00:	ldr	x9, [x22, #24]
   26f04:	ldr	x11, [x10, #1344]
   26f08:	ldr	x10, [x21, #32]
   26f0c:	cmp	x11, x9
   26f10:	csel	x1, x9, x11, lt  // lt = tstop
   26f14:	cmp	x1, x10
   26f18:	b.eq	26f58 <PyInit__decimal@@Base+0x204a4>  // b.none
   26f1c:	ldrb	w11, [x21]
   26f20:	tbnz	w11, #5, 26f38 <PyInit__decimal@@Base+0x20484>
   26f24:	mov	x0, x21
   26f28:	mov	x2, x19
   26f2c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   26f30:	cbnz	w0, 26f50 <PyInit__decimal@@Base+0x2049c>
   26f34:	b	26f84 <PyInit__decimal@@Base+0x204d0>
   26f38:	cmp	x1, x10
   26f3c:	b.le	26f58 <PyInit__decimal@@Base+0x204a4>
   26f40:	mov	x0, x21
   26f44:	mov	x2, x19
   26f48:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   26f4c:	cbz	w0, 26f84 <PyInit__decimal@@Base+0x204d0>
   26f50:	ldr	x9, [x22, #24]
   26f54:	ldrb	w8, [x22]
   26f58:	ldrb	w10, [x21]
   26f5c:	ldr	x0, [x21, #40]
   26f60:	bfxil	w10, w8, #0, #4
   26f64:	strb	w10, [x21]
   26f68:	ldur	q0, [x22, #8]
   26f6c:	str	x9, [x21, #24]
   26f70:	stur	q0, [x21, #8]
   26f74:	ldr	x8, [x22, #24]
   26f78:	ldr	x1, [x22, #40]
   26f7c:	lsl	x2, x8, #3
   26f80:	bl	63c0 <memcpy@plt>
   26f84:	mov	x0, x21
   26f88:	mov	x1, x20
   26f8c:	mov	x2, x19
   26f90:	ldp	x20, x19, [sp, #32]
   26f94:	ldp	x22, x21, [sp, #16]
   26f98:	ldp	x29, x30, [sp], #48
   26f9c:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   26fa0:	mov	x0, x21
   26fa4:	mov	x1, x22
   26fa8:	mov	x2, x19
   26fac:	bl	2340c <PyInit__decimal@@Base+0x1c958>
   26fb0:	b	26f84 <PyInit__decimal@@Base+0x204d0>
   26fb4:	stp	x29, x30, [sp, #-64]!
   26fb8:	str	x23, [sp, #16]
   26fbc:	stp	x22, x21, [sp, #32]
   26fc0:	stp	x20, x19, [sp, #48]
   26fc4:	mov	x29, sp
   26fc8:	ldrb	w8, [x1]
   26fcc:	mov	x19, x4
   26fd0:	mov	x23, x3
   26fd4:	mov	x20, x2
   26fd8:	mov	x22, x1
   26fdc:	tst	w8, #0xe
   26fe0:	mov	x21, x0
   26fe4:	b.ne	26ff4 <PyInit__decimal@@Base+0x20540>  // b.any
   26fe8:	ldrb	w8, [x20]
   26fec:	tst	w8, #0xe
   26ff0:	b.eq	27050 <PyInit__decimal@@Base+0x2059c>  // b.none
   26ff4:	mov	x0, x21
   26ff8:	mov	x1, x22
   26ffc:	mov	x2, x20
   27000:	mov	x3, x23
   27004:	mov	x4, x19
   27008:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   2700c:	cbz	w0, 27024 <PyInit__decimal@@Base+0x20570>
   27010:	ldp	x20, x19, [sp, #48]
   27014:	ldp	x22, x21, [sp, #32]
   27018:	ldr	x23, [sp, #16]
   2701c:	ldp	x29, x30, [sp], #64
   27020:	ret
   27024:	ldrb	w8, [x20]
   27028:	mov	x0, x21
   2702c:	mov	x1, x22
   27030:	mov	x2, x20
   27034:	mov	x4, x19
   27038:	ldp	x20, x19, [sp, #48]
   2703c:	ldp	x22, x21, [sp, #32]
   27040:	ldr	x23, [sp, #16]
   27044:	and	w3, w8, #0x1
   27048:	ldp	x29, x30, [sp], #64
   2704c:	b	2708c <PyInit__decimal@@Base+0x205d8>
   27050:	and	w3, w8, #0x1
   27054:	mov	x0, x21
   27058:	mov	x1, x22
   2705c:	mov	x2, x20
   27060:	mov	x4, x23
   27064:	mov	x5, x19
   27068:	bl	27200 <PyInit__decimal@@Base+0x2074c>
   2706c:	mov	x0, x21
   27070:	mov	x1, x23
   27074:	mov	x2, x19
   27078:	ldp	x20, x19, [sp, #48]
   2707c:	ldp	x22, x21, [sp, #32]
   27080:	ldr	x23, [sp, #16]
   27084:	ldp	x29, x30, [sp], #64
   27088:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   2708c:	sub	sp, sp, #0x40
   27090:	stp	x29, x30, [sp, #16]
   27094:	stp	x22, x21, [sp, #32]
   27098:	stp	x20, x19, [sp, #48]
   2709c:	add	x29, sp, #0x10
   270a0:	ldrb	w8, [x1]
   270a4:	mov	w21, w3
   270a8:	mov	x19, x0
   270ac:	tbnz	w8, #1, 27108 <PyInit__decimal@@Base+0x20654>
   270b0:	ldrb	w8, [x19]
   270b4:	tbnz	w8, #5, 270f8 <PyInit__decimal@@Base+0x20644>
   270b8:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   270bc:	ldr	x9, [x19, #32]
   270c0:	ldr	x1, [x20, #1344]
   270c4:	cmp	x9, x1
   270c8:	b.le	270f8 <PyInit__decimal@@Base+0x20644>
   270cc:	strb	wzr, [sp, #4]
   270d0:	ldr	x0, [x19, #40]
   270d4:	add	x3, sp, #0x4
   270d8:	mov	w2, #0x8                   	// #8
   270dc:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   270e0:	str	x0, [x19, #40]
   270e4:	ldrb	w8, [sp, #4]
   270e8:	cbnz	w8, 270f4 <PyInit__decimal@@Base+0x20640>
   270ec:	ldr	x8, [x20, #1344]
   270f0:	str	x8, [x19, #32]
   270f4:	ldrb	w8, [x19]
   270f8:	and	w8, w8, #0xf0
   270fc:	orr	w8, w8, w21
   27100:	str	xzr, [x19, #24]
   27104:	b	27170 <PyInit__decimal@@Base+0x206bc>
   27108:	and	w22, w8, #0x1
   2710c:	cmp	w22, w21, uxtb
   27110:	b.eq	2711c <PyInit__decimal@@Base+0x20668>  // b.none
   27114:	ldrb	w8, [x2]
   27118:	tbnz	w8, #1, 27190 <PyInit__decimal@@Base+0x206dc>
   2711c:	ldrb	w8, [x19]
   27120:	tbnz	w8, #5, 27164 <PyInit__decimal@@Base+0x206b0>
   27124:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   27128:	ldr	x9, [x19, #32]
   2712c:	ldr	x1, [x20, #1344]
   27130:	cmp	x9, x1
   27134:	b.le	27164 <PyInit__decimal@@Base+0x206b0>
   27138:	strb	wzr, [sp, #8]
   2713c:	ldr	x0, [x19, #40]
   27140:	add	x3, sp, #0x8
   27144:	mov	w2, #0x8                   	// #8
   27148:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2714c:	str	x0, [x19, #40]
   27150:	ldrb	w8, [sp, #8]
   27154:	cbnz	w8, 27160 <PyInit__decimal@@Base+0x206ac>
   27158:	ldr	x8, [x20, #1344]
   2715c:	str	x8, [x19, #32]
   27160:	ldrb	w8, [x19]
   27164:	and	w8, w8, #0xf0
   27168:	str	xzr, [x19, #24]
   2716c:	orr	w8, w22, w8
   27170:	orr	w8, w8, #0x2
   27174:	strb	w8, [x19]
   27178:	stp	xzr, xzr, [x19, #8]
   2717c:	ldp	x20, x19, [sp, #48]
   27180:	ldp	x22, x21, [sp, #32]
   27184:	ldp	x29, x30, [sp, #16]
   27188:	add	sp, sp, #0x40
   2718c:	ret
   27190:	ldrb	w8, [x19]
   27194:	mov	x20, x4
   27198:	tbnz	w8, #5, 271dc <PyInit__decimal@@Base+0x20728>
   2719c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   271a0:	ldr	x9, [x19, #32]
   271a4:	ldr	x1, [x21, #1344]
   271a8:	cmp	x9, x1
   271ac:	b.le	271dc <PyInit__decimal@@Base+0x20728>
   271b0:	sturb	wzr, [x29, #-4]
   271b4:	ldr	x0, [x19, #40]
   271b8:	sub	x3, x29, #0x4
   271bc:	mov	w2, #0x8                   	// #8
   271c0:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   271c4:	str	x0, [x19, #40]
   271c8:	ldurb	w8, [x29, #-4]
   271cc:	cbnz	w8, 271d8 <PyInit__decimal@@Base+0x20724>
   271d0:	ldr	x8, [x21, #1344]
   271d4:	str	x8, [x19, #32]
   271d8:	ldrb	w8, [x19]
   271dc:	and	w8, w8, #0xf0
   271e0:	orr	w8, w8, #0x4
   271e4:	stp	xzr, xzr, [x19, #16]
   271e8:	strb	w8, [x19]
   271ec:	str	xzr, [x19, #8]
   271f0:	ldr	w8, [x20]
   271f4:	orr	w8, w8, #0x100
   271f8:	str	w8, [x20]
   271fc:	b	2717c <PyInit__decimal@@Base+0x206c8>
   27200:	stp	x29, x30, [sp, #-96]!
   27204:	stp	x28, x27, [sp, #16]
   27208:	stp	x26, x25, [sp, #32]
   2720c:	stp	x24, x23, [sp, #48]
   27210:	stp	x22, x21, [sp, #64]
   27214:	stp	x20, x19, [sp, #80]
   27218:	mov	x29, sp
   2721c:	sub	sp, sp, #0x280
   27220:	mov	w9, #0x40                  	// #64
   27224:	stp	xzr, x9, [sp, #88]
   27228:	mov	w9, #0x1                   	// #1
   2722c:	str	x9, [sp, #56]
   27230:	dup	v0.2d, x9
   27234:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3154c>
   27238:	stur	q0, [sp, #32]
   2723c:	ldr	q0, [x9, #3296]
   27240:	mov	w8, #0x30                  	// #48
   27244:	strb	w8, [sp, #64]
   27248:	add	x8, sp, #0x70
   2724c:	str	x8, [sp, #104]
   27250:	mov	w8, #0x90                  	// #144
   27254:	add	x9, sp, #0x38
   27258:	stp	xzr, xzr, [sp, #72]
   2725c:	strb	w8, [sp, #8]
   27260:	str	x9, [sp, #48]
   27264:	stur	q0, [sp, #16]
   27268:	ldr	x8, [x1, #8]
   2726c:	ldr	x9, [x2, #8]
   27270:	mov	x21, x5
   27274:	mov	x25, x4
   27278:	mov	w20, w3
   2727c:	mov	x24, x2
   27280:	mov	x23, x1
   27284:	cmp	x8, x9
   27288:	mov	x19, x0
   2728c:	b.ne	272a0 <PyInit__decimal@@Base+0x207ec>  // b.any
   27290:	str	x25, [sp]
   27294:	mov	w22, wzr
   27298:	mov	x1, x23
   2729c:	b	2735c <PyInit__decimal@@Base+0x208a8>
   272a0:	cmp	x9, x8
   272a4:	csel	x1, x24, x23, gt
   272a8:	ldr	x8, [x1, #40]
   272ac:	ldr	x9, [x1, #24]
   272b0:	cset	w22, gt
   272b4:	csel	x24, x23, x24, gt
   272b8:	add	x8, x8, x9, lsl #3
   272bc:	ldur	x8, [x8, #-8]
   272c0:	cbz	x8, 27358 <PyInit__decimal@@Base+0x208a4>
   272c4:	ldr	x11, [x25]
   272c8:	ldp	x9, x8, [x1, #8]
   272cc:	ldp	x10, x12, [x24, #8]
   272d0:	mvn	x13, x11
   272d4:	cmp	x8, x11
   272d8:	add	x8, x8, x13
   272dc:	csel	x8, xzr, x8, gt
   272e0:	add	x11, x10, x12
   272e4:	add	x8, x9, x8
   272e8:	sub	x8, x8, #0x1
   272ec:	sub	x11, x11, #0x1
   272f0:	cmp	x11, x8
   272f4:	b.ge	27340 <PyInit__decimal@@Base+0x2088c>  // b.tcont
   272f8:	ldrb	w9, [x24]
   272fc:	mov	w10, #0x1                   	// #1
   27300:	dup	v0.2d, x10
   27304:	mov	w10, #0x90                  	// #144
   27308:	bfxil	w10, w9, #0, #4
   2730c:	str	x8, [sp, #16]
   27310:	stur	q0, [sp, #24]
   27314:	strb	w10, [sp, #8]
   27318:	ldr	x9, [x24, #40]
   2731c:	ldr	x10, [x24, #24]
   27320:	add	x24, sp, #0x8
   27324:	add	x9, x9, x10, lsl #3
   27328:	ldur	x9, [x9, #-8]
   2732c:	mov	x10, x8
   27330:	cmp	x9, #0x0
   27334:	cset	w9, ne  // ne = any
   27338:	str	x9, [sp, #56]
   2733c:	ldr	x9, [x1, #8]
   27340:	sub	x2, x9, x10
   27344:	add	x0, sp, #0x40
   27348:	mov	x3, x21
   2734c:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   27350:	cbz	w0, 274f8 <PyInit__decimal@@Base+0x20a44>
   27354:	add	x1, sp, #0x40
   27358:	str	x25, [sp]
   2735c:	ldr	x8, [x24, #8]
   27360:	adrp	x26, 53000 <PyInit__decimal@@Base+0x4c54c>
   27364:	str	x8, [x19, #8]
   27368:	ldr	x8, [x1, #24]
   2736c:	ldr	x9, [x24, #24]
   27370:	cmp	x8, x9
   27374:	csel	x27, x24, x1, lt  // lt = tstop
   27378:	ldr	x25, [x27, #24]
   2737c:	ldr	x9, [x26, #1344]
   27380:	ldr	x8, [x19, #32]
   27384:	csel	x28, x1, x24, lt  // lt = tstop
   27388:	cinc	w24, w22, lt  // lt = tstop
   2738c:	cmp	x9, x25
   27390:	csel	x1, x25, x9, lt  // lt = tstop
   27394:	cmp	x1, x8
   27398:	b.eq	273d0 <PyInit__decimal@@Base+0x2091c>  // b.none
   2739c:	ldrb	w9, [x19]
   273a0:	tbnz	w9, #5, 273b8 <PyInit__decimal@@Base+0x20904>
   273a4:	mov	x0, x19
   273a8:	mov	x2, x21
   273ac:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   273b0:	cbnz	w0, 273d0 <PyInit__decimal@@Base+0x2091c>
   273b4:	b	27734 <PyInit__decimal@@Base+0x20c80>
   273b8:	cmp	x1, x8
   273bc:	b.le	273d0 <PyInit__decimal@@Base+0x2091c>
   273c0:	mov	x0, x19
   273c4:	mov	x2, x21
   273c8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   273cc:	cbz	w0, 27734 <PyInit__decimal@@Base+0x20c80>
   273d0:	ldrb	w8, [x23]
   273d4:	and	w8, w8, #0x1
   273d8:	cmp	w8, w20, uxtb
   273dc:	b.ne	2743c <PyInit__decimal@@Base+0x20988>  // b.any
   273e0:	ldr	x0, [x19, #40]
   273e4:	ldr	x1, [x27, #40]
   273e8:	ldr	x2, [x28, #40]
   273ec:	ldr	x3, [x27, #24]
   273f0:	ldr	x4, [x28, #24]
   273f4:	bl	1b0c0 <PyInit__decimal@@Base+0x1460c>
   273f8:	cbz	x0, 274f0 <PyInit__decimal@@Base+0x20a3c>
   273fc:	ldr	x23, [x27, #24]
   27400:	ldr	x9, [x26, #1344]
   27404:	ldr	x8, [x19, #32]
   27408:	mov	x22, x0
   2740c:	add	x25, x23, #0x1
   27410:	cmp	x9, x25
   27414:	csinc	x1, x9, x23, ge  // ge = tcont
   27418:	cmp	x1, x8
   2741c:	b.eq	275f0 <PyInit__decimal@@Base+0x20b3c>  // b.none
   27420:	ldrb	w9, [x19]
   27424:	tbnz	w9, #5, 275d8 <PyInit__decimal@@Base+0x20b24>
   27428:	mov	x0, x19
   2742c:	mov	x2, x21
   27430:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   27434:	cbnz	w0, 275f0 <PyInit__decimal@@Base+0x20b3c>
   27438:	b	27734 <PyInit__decimal@@Base+0x20c80>
   2743c:	ldr	x3, [x27, #24]
   27440:	ldr	x8, [x28, #24]
   27444:	cmp	x3, x8
   27448:	b.ne	27488 <PyInit__decimal@@Base+0x209d4>  // b.any
   2744c:	sub	x8, x3, #0x1
   27450:	tbnz	x8, #63, 27488 <PyInit__decimal@@Base+0x209d4>
   27454:	ldr	x9, [x27, #40]
   27458:	ldr	x10, [x28, #40]
   2745c:	lsl	x11, x8, #3
   27460:	sub	x8, x8, #0x1
   27464:	ldr	x9, [x9, x11]
   27468:	ldr	x10, [x10, x11]
   2746c:	cmp	x9, x10
   27470:	b.eq	27450 <PyInit__decimal@@Base+0x2099c>  // b.none
   27474:	csel	x8, x28, x27, cc  // cc = lo, ul, last
   27478:	ldr	x3, [x8, #24]
   2747c:	csel	x28, x27, x28, cc  // cc = lo, ul, last
   27480:	cinc	w24, w24, cc  // cc = lo, ul, last
   27484:	mov	x27, x8
   27488:	ldr	x0, [x19, #40]
   2748c:	ldr	x1, [x27, #40]
   27490:	ldr	x2, [x28, #40]
   27494:	ldr	x4, [x28, #24]
   27498:	bl	1b378 <PyInit__decimal@@Base+0x148c4>
   2749c:	ldr	x8, [x19, #40]
   274a0:	ldr	x9, [x27, #24]
   274a4:	sub	x8, x8, #0x8
   274a8:	mov	x25, x9
   274ac:	cmp	x9, #0x2
   274b0:	b.lt	274c0 <PyInit__decimal@@Base+0x20a0c>  // b.tstop
   274b4:	ldr	x10, [x8, x25, lsl #3]
   274b8:	sub	x9, x25, #0x1
   274bc:	cbz	x10, 274a8 <PyInit__decimal@@Base+0x209f4>
   274c0:	ldr	x9, [x26, #1344]
   274c4:	ldr	x8, [x19, #32]
   274c8:	cmp	x9, x25
   274cc:	csel	x1, x25, x9, lt  // lt = tstop
   274d0:	cmp	x1, x8
   274d4:	b.eq	27578 <PyInit__decimal@@Base+0x20ac4>  // b.none
   274d8:	ldrb	w9, [x19]
   274dc:	tbnz	w9, #5, 27564 <PyInit__decimal@@Base+0x20ab0>
   274e0:	mov	x0, x19
   274e4:	mov	x2, x21
   274e8:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   274ec:	b	27578 <PyInit__decimal@@Base+0x20ac4>
   274f0:	ldr	x8, [x19, #40]
   274f4:	b	275f8 <PyInit__decimal@@Base+0x20b44>
   274f8:	ldrb	w8, [x19]
   274fc:	tbnz	w8, #5, 27540 <PyInit__decimal@@Base+0x20a8c>
   27500:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   27504:	ldr	x9, [x19, #32]
   27508:	ldr	x1, [x20, #1344]
   2750c:	cmp	x9, x1
   27510:	b.le	27540 <PyInit__decimal@@Base+0x20a8c>
   27514:	sturb	wzr, [x29, #-12]
   27518:	ldr	x0, [x19, #40]
   2751c:	sub	x3, x29, #0xc
   27520:	mov	w2, #0x8                   	// #8
   27524:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   27528:	str	x0, [x19, #40]
   2752c:	ldurb	w8, [x29, #-12]
   27530:	cbnz	w8, 2753c <PyInit__decimal@@Base+0x20a88>
   27534:	ldr	x8, [x20, #1344]
   27538:	str	x8, [x19, #32]
   2753c:	ldrb	w8, [x19]
   27540:	and	w8, w8, #0xf0
   27544:	orr	w8, w8, #0x4
   27548:	stp	xzr, xzr, [x19, #16]
   2754c:	strb	w8, [x19]
   27550:	str	xzr, [x19, #8]
   27554:	ldr	w8, [x21]
   27558:	orr	w8, w8, #0x200
   2755c:	str	w8, [x21]
   27560:	b	27734 <PyInit__decimal@@Base+0x20c80>
   27564:	cmp	x1, x8
   27568:	b.le	27578 <PyInit__decimal@@Base+0x20ac4>
   2756c:	mov	x0, x19
   27570:	mov	x2, x21
   27574:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   27578:	str	x25, [x19, #24]
   2757c:	tbnz	w24, #0, 27588 <PyInit__decimal@@Base+0x20ad4>
   27580:	ldrb	w8, [x23]
   27584:	and	w20, w8, #0x1
   27588:	ldrb	w8, [x19]
   2758c:	ldr	x10, [x19, #40]
   27590:	and	w8, w8, #0xfffffff0
   27594:	orr	w9, w8, w20
   27598:	strb	w9, [x19]
   2759c:	add	x8, x10, x25, lsl #3
   275a0:	ldur	x8, [x8, #-8]
   275a4:	cbnz	x8, 27614 <PyInit__decimal@@Base+0x20b60>
   275a8:	and	w8, w9, #0xfe
   275ac:	strb	w8, [x19]
   275b0:	ldr	x8, [sp]
   275b4:	ldr	w8, [x8, #36]
   275b8:	cmp	w8, #0x3
   275bc:	b.ne	275d0 <PyInit__decimal@@Base+0x20b1c>  // b.any
   275c0:	mov	x8, xzr
   275c4:	orr	w9, w9, #0x1
   275c8:	strb	w9, [x19]
   275cc:	b	27614 <PyInit__decimal@@Base+0x20b60>
   275d0:	mov	x8, xzr
   275d4:	b	27614 <PyInit__decimal@@Base+0x20b60>
   275d8:	cmp	x1, x8
   275dc:	b.le	275f0 <PyInit__decimal@@Base+0x20b3c>
   275e0:	mov	x0, x19
   275e4:	mov	x2, x21
   275e8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   275ec:	cbz	w0, 27734 <PyInit__decimal@@Base+0x20c80>
   275f0:	ldr	x8, [x19, #40]
   275f4:	str	x22, [x8, x23, lsl #3]
   275f8:	ldrb	w9, [x19]
   275fc:	str	x25, [x19, #24]
   27600:	add	x8, x8, x25, lsl #3
   27604:	and	w9, w9, #0xf0
   27608:	orr	w9, w9, w20
   2760c:	strb	w9, [x19]
   27610:	ldur	x8, [x8, #-8]
   27614:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   27618:	add	x9, x9, #0x370
   2761c:	ldr	x10, [x9, #72]
   27620:	cmp	x10, x8
   27624:	b.ls	27650 <PyInit__decimal@@Base+0x20b9c>  // b.plast
   27628:	ldr	x10, [x9, #32]
   2762c:	cmp	x10, x8
   27630:	b.ls	27678 <PyInit__decimal@@Base+0x20bc4>  // b.plast
   27634:	ldr	x10, [x9, #16]
   27638:	cmp	x10, x8
   2763c:	b.ls	276bc <PyInit__decimal@@Base+0x20c08>  // b.plast
   27640:	ldr	x9, [x9, #8]
   27644:	cmp	x9, x8
   27648:	mov	w8, #0x1                   	// #1
   2764c:	b	27720 <PyInit__decimal@@Base+0x20c6c>
   27650:	ldr	x10, [x9, #112]
   27654:	cmp	x10, x8
   27658:	b.ls	27694 <PyInit__decimal@@Base+0x20be0>  // b.plast
   2765c:	ldr	x10, [x9, #88]
   27660:	cmp	x10, x8
   27664:	b.ls	276cc <PyInit__decimal@@Base+0x20c18>  // b.plast
   27668:	ldr	x9, [x9, #80]
   2766c:	cmp	x9, x8
   27670:	mov	w8, #0xa                   	// #10
   27674:	b	27720 <PyInit__decimal@@Base+0x20c6c>
   27678:	ldr	x10, [x9, #48]
   2767c:	cmp	x10, x8
   27680:	b.ls	276e8 <PyInit__decimal@@Base+0x20c34>  // b.plast
   27684:	ldr	x9, [x9, #40]
   27688:	cmp	x9, x8
   2768c:	mov	w8, #0x5                   	// #5
   27690:	b	27720 <PyInit__decimal@@Base+0x20c6c>
   27694:	ldr	x10, [x9, #144]
   27698:	cmp	x10, x8
   2769c:	b.ls	27704 <PyInit__decimal@@Base+0x20c50>  // b.plast
   276a0:	ldr	x10, [x9, #128]
   276a4:	cmp	x10, x8
   276a8:	b.ls	27714 <PyInit__decimal@@Base+0x20c60>  // b.plast
   276ac:	ldr	x9, [x9, #120]
   276b0:	cmp	x9, x8
   276b4:	mov	w8, #0xf                   	// #15
   276b8:	b	27720 <PyInit__decimal@@Base+0x20c6c>
   276bc:	ldr	x9, [x9, #24]
   276c0:	cmp	x9, x8
   276c4:	mov	w8, #0x3                   	// #3
   276c8:	b	27720 <PyInit__decimal@@Base+0x20c6c>
   276cc:	ldr	x10, [x9, #104]
   276d0:	cmp	x10, x8
   276d4:	b.ls	27784 <PyInit__decimal@@Base+0x20cd0>  // b.plast
   276d8:	ldr	x9, [x9, #96]
   276dc:	cmp	x9, x8
   276e0:	mov	w8, #0xc                   	// #12
   276e4:	b	27720 <PyInit__decimal@@Base+0x20c6c>
   276e8:	ldr	x10, [x9, #64]
   276ec:	cmp	x10, x8
   276f0:	b.ls	2778c <PyInit__decimal@@Base+0x20cd8>  // b.plast
   276f4:	ldr	x9, [x9, #56]
   276f8:	cmp	x9, x8
   276fc:	mov	w8, #0x7                   	// #7
   27700:	b	27720 <PyInit__decimal@@Base+0x20c6c>
   27704:	ldr	x9, [x9, #152]
   27708:	cmp	x9, x8
   2770c:	mov	w8, #0x13                  	// #19
   27710:	b	27720 <PyInit__decimal@@Base+0x20c6c>
   27714:	ldr	x9, [x9, #136]
   27718:	cmp	x9, x8
   2771c:	mov	w8, #0x11                  	// #17
   27720:	cinc	x8, x8, ls  // ls = plast
   27724:	mov	w9, #0x13                  	// #19
   27728:	madd	x8, x25, x9, x8
   2772c:	sub	x8, x8, #0x13
   27730:	str	x8, [x19, #16]
   27734:	ldrb	w8, [sp, #64]
   27738:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2773c:	cmp	w8, #0x1f
   27740:	b.hi	27754 <PyInit__decimal@@Base+0x20ca0>  // b.pmore
   27744:	ldr	x8, [x19, #1376]
   27748:	ldr	x0, [sp, #104]
   2774c:	blr	x8
   27750:	ldrb	w8, [sp, #64]
   27754:	tbnz	w8, #4, 27764 <PyInit__decimal@@Base+0x20cb0>
   27758:	ldr	x8, [x19, #1376]
   2775c:	add	x0, sp, #0x40
   27760:	blr	x8
   27764:	add	sp, sp, #0x280
   27768:	ldp	x20, x19, [sp, #80]
   2776c:	ldp	x22, x21, [sp, #64]
   27770:	ldp	x24, x23, [sp, #48]
   27774:	ldp	x26, x25, [sp, #32]
   27778:	ldp	x28, x27, [sp, #16]
   2777c:	ldp	x29, x30, [sp], #96
   27780:	ret
   27784:	mov	w8, #0xe                   	// #14
   27788:	b	27724 <PyInit__decimal@@Base+0x20c70>
   2778c:	mov	w8, #0x9                   	// #9
   27790:	b	27724 <PyInit__decimal@@Base+0x20c70>
   27794:	stp	x29, x30, [sp, #-64]!
   27798:	str	x23, [sp, #16]
   2779c:	stp	x22, x21, [sp, #32]
   277a0:	stp	x20, x19, [sp, #48]
   277a4:	mov	x29, sp
   277a8:	ldrb	w8, [x1]
   277ac:	mov	x19, x4
   277b0:	mov	x23, x3
   277b4:	mov	x20, x2
   277b8:	mov	x22, x1
   277bc:	tst	w8, #0xe
   277c0:	mov	x21, x0
   277c4:	b.ne	277d4 <PyInit__decimal@@Base+0x20d20>  // b.any
   277c8:	ldrb	w8, [x20]
   277cc:	tst	w8, #0xe
   277d0:	b.eq	27834 <PyInit__decimal@@Base+0x20d80>  // b.none
   277d4:	mov	x0, x21
   277d8:	mov	x1, x22
   277dc:	mov	x2, x20
   277e0:	mov	x3, x23
   277e4:	mov	x4, x19
   277e8:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   277ec:	cbz	w0, 27804 <PyInit__decimal@@Base+0x20d50>
   277f0:	ldp	x20, x19, [sp, #48]
   277f4:	ldp	x22, x21, [sp, #32]
   277f8:	ldr	x23, [sp, #16]
   277fc:	ldp	x29, x30, [sp], #64
   27800:	ret
   27804:	ldrb	w8, [x20]
   27808:	mov	x0, x21
   2780c:	mov	x1, x22
   27810:	mov	x2, x20
   27814:	mov	x4, x19
   27818:	ldp	x20, x19, [sp, #48]
   2781c:	ldp	x22, x21, [sp, #32]
   27820:	ldr	x23, [sp, #16]
   27824:	mvn	w8, w8
   27828:	and	w3, w8, #0x1
   2782c:	ldp	x29, x30, [sp], #64
   27830:	b	2708c <PyInit__decimal@@Base+0x205d8>
   27834:	mvn	w8, w8
   27838:	and	w3, w8, #0x1
   2783c:	mov	x0, x21
   27840:	mov	x1, x22
   27844:	mov	x2, x20
   27848:	mov	x4, x23
   2784c:	mov	x5, x19
   27850:	bl	27200 <PyInit__decimal@@Base+0x2074c>
   27854:	mov	x0, x21
   27858:	mov	x1, x23
   2785c:	mov	x2, x19
   27860:	ldp	x20, x19, [sp, #48]
   27864:	ldp	x22, x21, [sp, #32]
   27868:	ldr	x23, [sp, #16]
   2786c:	ldp	x29, x30, [sp], #64
   27870:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   27874:	stp	x29, x30, [sp, #-64]!
   27878:	stp	x28, x23, [sp, #16]
   2787c:	stp	x22, x21, [sp, #32]
   27880:	stp	x20, x19, [sp, #48]
   27884:	mov	x29, sp
   27888:	sub	sp, sp, #0x260
   2788c:	mov	x23, x0
   27890:	mov	w8, #0x30                  	// #48
   27894:	mov	w9, #0x40                  	// #64
   27898:	add	x10, sp, #0x30
   2789c:	sub	x0, x29, #0x30
   278a0:	mov	x19, x4
   278a4:	mov	x20, x3
   278a8:	mov	x21, x2
   278ac:	mov	x22, x1
   278b0:	stp	xzr, xzr, [sp, #8]
   278b4:	strb	w8, [sp]
   278b8:	stp	xzr, x9, [sp, #24]
   278bc:	str	x10, [sp, #40]
   278c0:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   278c4:	mov	x0, sp
   278c8:	sub	x2, x29, #0x30
   278cc:	mov	x1, x21
   278d0:	mov	x3, x19
   278d4:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   278d8:	mov	x2, sp
   278dc:	mov	x0, x23
   278e0:	mov	x1, x22
   278e4:	mov	x3, x20
   278e8:	mov	x4, x19
   278ec:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   278f0:	ldrb	w8, [sp]
   278f4:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   278f8:	cmp	w8, #0x1f
   278fc:	b.hi	27910 <PyInit__decimal@@Base+0x20e5c>  // b.pmore
   27900:	ldr	x8, [x19, #1376]
   27904:	ldr	x0, [sp, #40]
   27908:	blr	x8
   2790c:	ldrb	w8, [sp]
   27910:	tbnz	w8, #4, 27920 <PyInit__decimal@@Base+0x20e6c>
   27914:	ldr	x8, [x19, #1376]
   27918:	mov	x0, sp
   2791c:	blr	x8
   27920:	add	sp, sp, #0x260
   27924:	ldp	x20, x19, [sp, #48]
   27928:	ldp	x22, x21, [sp, #32]
   2792c:	ldp	x28, x23, [sp, #16]
   27930:	ldp	x29, x30, [sp], #64
   27934:	ret
   27938:	stp	x29, x30, [sp, #-64]!
   2793c:	stp	x28, x23, [sp, #16]
   27940:	stp	x22, x21, [sp, #32]
   27944:	stp	x20, x19, [sp, #48]
   27948:	mov	x29, sp
   2794c:	sub	sp, sp, #0x260
   27950:	mov	x23, x0
   27954:	mov	w8, #0x30                  	// #48
   27958:	mov	w9, #0x40                  	// #64
   2795c:	add	x10, sp, #0x30
   27960:	sub	x0, x29, #0x30
   27964:	mov	x19, x4
   27968:	mov	x20, x3
   2796c:	mov	x21, x2
   27970:	mov	x22, x1
   27974:	stp	xzr, xzr, [sp, #8]
   27978:	strb	w8, [sp]
   2797c:	stp	xzr, x9, [sp, #24]
   27980:	str	x10, [sp, #40]
   27984:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   27988:	mov	x0, sp
   2798c:	sub	x2, x29, #0x30
   27990:	mov	x1, x21
   27994:	mov	x3, x19
   27998:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   2799c:	mov	x2, sp
   279a0:	mov	x0, x23
   279a4:	mov	x1, x22
   279a8:	mov	x3, x20
   279ac:	mov	x4, x19
   279b0:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   279b4:	ldrb	w8, [sp]
   279b8:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   279bc:	cmp	w8, #0x1f
   279c0:	b.hi	279d4 <PyInit__decimal@@Base+0x20f20>  // b.pmore
   279c4:	ldr	x8, [x19, #1376]
   279c8:	ldr	x0, [sp, #40]
   279cc:	blr	x8
   279d0:	ldrb	w8, [sp]
   279d4:	tbnz	w8, #4, 279e4 <PyInit__decimal@@Base+0x20f30>
   279d8:	ldr	x8, [x19, #1376]
   279dc:	mov	x0, sp
   279e0:	blr	x8
   279e4:	add	sp, sp, #0x260
   279e8:	ldp	x20, x19, [sp, #48]
   279ec:	ldp	x22, x21, [sp, #32]
   279f0:	ldp	x28, x23, [sp, #16]
   279f4:	ldp	x29, x30, [sp], #64
   279f8:	ret
   279fc:	stp	x29, x30, [sp, #-64]!
   27a00:	stp	x28, x23, [sp, #16]
   27a04:	stp	x22, x21, [sp, #32]
   27a08:	stp	x20, x19, [sp, #48]
   27a0c:	mov	x29, sp
   27a10:	sub	sp, sp, #0x260
   27a14:	mov	x23, x0
   27a18:	mov	w8, #0x30                  	// #48
   27a1c:	mov	w9, #0x40                  	// #64
   27a20:	add	x10, sp, #0x30
   27a24:	sub	x0, x29, #0x30
   27a28:	mov	x19, x4
   27a2c:	mov	x20, x3
   27a30:	mov	x21, x2
   27a34:	mov	x22, x1
   27a38:	stp	xzr, xzr, [sp, #8]
   27a3c:	strb	w8, [sp]
   27a40:	stp	xzr, x9, [sp, #24]
   27a44:	str	x10, [sp, #40]
   27a48:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   27a4c:	mov	x0, sp
   27a50:	sub	x2, x29, #0x30
   27a54:	mov	x1, x21
   27a58:	mov	x3, x19
   27a5c:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   27a60:	mov	x2, sp
   27a64:	mov	x0, x23
   27a68:	mov	x1, x22
   27a6c:	mov	x3, x20
   27a70:	mov	x4, x19
   27a74:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   27a78:	ldrb	w8, [sp]
   27a7c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   27a80:	cmp	w8, #0x1f
   27a84:	b.hi	27a98 <PyInit__decimal@@Base+0x20fe4>  // b.pmore
   27a88:	ldr	x8, [x19, #1376]
   27a8c:	ldr	x0, [sp, #40]
   27a90:	blr	x8
   27a94:	ldrb	w8, [sp]
   27a98:	tbnz	w8, #4, 27aa8 <PyInit__decimal@@Base+0x20ff4>
   27a9c:	ldr	x8, [x19, #1376]
   27aa0:	mov	x0, sp
   27aa4:	blr	x8
   27aa8:	add	sp, sp, #0x260
   27aac:	ldp	x20, x19, [sp, #48]
   27ab0:	ldp	x22, x21, [sp, #32]
   27ab4:	ldp	x28, x23, [sp, #16]
   27ab8:	ldp	x29, x30, [sp], #64
   27abc:	ret
   27ac0:	stp	x29, x30, [sp, #-64]!
   27ac4:	stp	x28, x23, [sp, #16]
   27ac8:	stp	x22, x21, [sp, #32]
   27acc:	stp	x20, x19, [sp, #48]
   27ad0:	mov	x29, sp
   27ad4:	sub	sp, sp, #0x260
   27ad8:	mov	x23, x0
   27adc:	mov	w8, #0x30                  	// #48
   27ae0:	mov	w9, #0x40                  	// #64
   27ae4:	add	x10, sp, #0x30
   27ae8:	sub	x0, x29, #0x30
   27aec:	mov	x19, x4
   27af0:	mov	x20, x3
   27af4:	mov	x21, x2
   27af8:	mov	x22, x1
   27afc:	stp	xzr, xzr, [sp, #8]
   27b00:	strb	w8, [sp]
   27b04:	stp	xzr, x9, [sp, #24]
   27b08:	str	x10, [sp, #40]
   27b0c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   27b10:	mov	x0, sp
   27b14:	sub	x2, x29, #0x30
   27b18:	mov	x1, x21
   27b1c:	mov	x3, x19
   27b20:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   27b24:	mov	x2, sp
   27b28:	mov	x0, x23
   27b2c:	mov	x1, x22
   27b30:	mov	x3, x20
   27b34:	mov	x4, x19
   27b38:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   27b3c:	ldrb	w8, [sp]
   27b40:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   27b44:	cmp	w8, #0x1f
   27b48:	b.hi	27b5c <PyInit__decimal@@Base+0x210a8>  // b.pmore
   27b4c:	ldr	x8, [x19, #1376]
   27b50:	ldr	x0, [sp, #40]
   27b54:	blr	x8
   27b58:	ldrb	w8, [sp]
   27b5c:	tbnz	w8, #4, 27b6c <PyInit__decimal@@Base+0x210b8>
   27b60:	ldr	x8, [x19, #1376]
   27b64:	mov	x0, sp
   27b68:	blr	x8
   27b6c:	add	sp, sp, #0x260
   27b70:	ldp	x20, x19, [sp, #48]
   27b74:	ldp	x22, x21, [sp, #32]
   27b78:	ldp	x28, x23, [sp, #16]
   27b7c:	ldp	x29, x30, [sp], #64
   27b80:	ret
   27b84:	stp	x29, x30, [sp, #-64]!
   27b88:	stp	x28, x23, [sp, #16]
   27b8c:	stp	x22, x21, [sp, #32]
   27b90:	stp	x20, x19, [sp, #48]
   27b94:	mov	x29, sp
   27b98:	sub	sp, sp, #0x260
   27b9c:	mov	x22, x0
   27ba0:	mov	w8, #0x30                  	// #48
   27ba4:	mov	w9, #0x40                  	// #64
   27ba8:	add	x10, sp, #0x30
   27bac:	sub	x0, x29, #0x30
   27bb0:	mov	x19, x4
   27bb4:	mov	x20, x3
   27bb8:	mov	x21, x1
   27bbc:	sxtw	x23, w2
   27bc0:	stp	xzr, xzr, [sp, #8]
   27bc4:	strb	w8, [sp]
   27bc8:	stp	xzr, x9, [sp, #24]
   27bcc:	str	x10, [sp, #40]
   27bd0:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   27bd4:	mov	x0, sp
   27bd8:	sub	x2, x29, #0x30
   27bdc:	mov	x1, x23
   27be0:	mov	x3, x19
   27be4:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   27be8:	mov	x2, sp
   27bec:	mov	x0, x22
   27bf0:	mov	x1, x21
   27bf4:	mov	x3, x20
   27bf8:	mov	x4, x19
   27bfc:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   27c00:	ldrb	w8, [sp]
   27c04:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   27c08:	cmp	w8, #0x1f
   27c0c:	b.hi	27c20 <PyInit__decimal@@Base+0x2116c>  // b.pmore
   27c10:	ldr	x8, [x19, #1376]
   27c14:	ldr	x0, [sp, #40]
   27c18:	blr	x8
   27c1c:	ldrb	w8, [sp]
   27c20:	tbnz	w8, #4, 27c30 <PyInit__decimal@@Base+0x2117c>
   27c24:	ldr	x8, [x19, #1376]
   27c28:	mov	x0, sp
   27c2c:	blr	x8
   27c30:	add	sp, sp, #0x260
   27c34:	ldp	x20, x19, [sp, #48]
   27c38:	ldp	x22, x21, [sp, #32]
   27c3c:	ldp	x28, x23, [sp, #16]
   27c40:	ldp	x29, x30, [sp], #64
   27c44:	ret
   27c48:	stp	x29, x30, [sp, #-64]!
   27c4c:	stp	x28, x23, [sp, #16]
   27c50:	stp	x22, x21, [sp, #32]
   27c54:	stp	x20, x19, [sp, #48]
   27c58:	mov	x29, sp
   27c5c:	sub	sp, sp, #0x260
   27c60:	mov	x22, x0
   27c64:	mov	w8, #0x30                  	// #48
   27c68:	mov	w9, #0x40                  	// #64
   27c6c:	add	x10, sp, #0x30
   27c70:	sub	x0, x29, #0x30
   27c74:	mov	x19, x4
   27c78:	mov	x20, x3
   27c7c:	mov	x21, x1
   27c80:	mov	w23, w2
   27c84:	stp	xzr, xzr, [sp, #8]
   27c88:	strb	w8, [sp]
   27c8c:	stp	xzr, x9, [sp, #24]
   27c90:	str	x10, [sp, #40]
   27c94:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   27c98:	mov	x0, sp
   27c9c:	sub	x2, x29, #0x30
   27ca0:	mov	x1, x23
   27ca4:	mov	x3, x19
   27ca8:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   27cac:	mov	x2, sp
   27cb0:	mov	x0, x22
   27cb4:	mov	x1, x21
   27cb8:	mov	x3, x20
   27cbc:	mov	x4, x19
   27cc0:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   27cc4:	ldrb	w8, [sp]
   27cc8:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   27ccc:	cmp	w8, #0x1f
   27cd0:	b.hi	27ce4 <PyInit__decimal@@Base+0x21230>  // b.pmore
   27cd4:	ldr	x8, [x19, #1376]
   27cd8:	ldr	x0, [sp, #40]
   27cdc:	blr	x8
   27ce0:	ldrb	w8, [sp]
   27ce4:	tbnz	w8, #4, 27cf4 <PyInit__decimal@@Base+0x21240>
   27ce8:	ldr	x8, [x19, #1376]
   27cec:	mov	x0, sp
   27cf0:	blr	x8
   27cf4:	add	sp, sp, #0x260
   27cf8:	ldp	x20, x19, [sp, #48]
   27cfc:	ldp	x22, x21, [sp, #32]
   27d00:	ldp	x28, x23, [sp, #16]
   27d04:	ldp	x29, x30, [sp], #64
   27d08:	ret
   27d0c:	stp	x29, x30, [sp, #-64]!
   27d10:	stp	x28, x23, [sp, #16]
   27d14:	stp	x22, x21, [sp, #32]
   27d18:	stp	x20, x19, [sp, #48]
   27d1c:	mov	x29, sp
   27d20:	sub	sp, sp, #0x260
   27d24:	mov	x23, x0
   27d28:	mov	w8, #0x30                  	// #48
   27d2c:	mov	w9, #0x40                  	// #64
   27d30:	add	x10, sp, #0x30
   27d34:	sub	x0, x29, #0x30
   27d38:	mov	x19, x4
   27d3c:	mov	x20, x3
   27d40:	mov	x21, x2
   27d44:	mov	x22, x1
   27d48:	stp	xzr, xzr, [sp, #8]
   27d4c:	strb	w8, [sp]
   27d50:	stp	xzr, x9, [sp, #24]
   27d54:	str	x10, [sp, #40]
   27d58:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   27d5c:	mov	x0, sp
   27d60:	sub	x2, x29, #0x30
   27d64:	mov	x1, x21
   27d68:	mov	x3, x19
   27d6c:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   27d70:	mov	x2, sp
   27d74:	mov	x0, x23
   27d78:	mov	x1, x22
   27d7c:	mov	x3, x20
   27d80:	mov	x4, x19
   27d84:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   27d88:	ldrb	w8, [sp]
   27d8c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   27d90:	cmp	w8, #0x1f
   27d94:	b.hi	27da8 <PyInit__decimal@@Base+0x212f4>  // b.pmore
   27d98:	ldr	x8, [x19, #1376]
   27d9c:	ldr	x0, [sp, #40]
   27da0:	blr	x8
   27da4:	ldrb	w8, [sp]
   27da8:	tbnz	w8, #4, 27db8 <PyInit__decimal@@Base+0x21304>
   27dac:	ldr	x8, [x19, #1376]
   27db0:	mov	x0, sp
   27db4:	blr	x8
   27db8:	add	sp, sp, #0x260
   27dbc:	ldp	x20, x19, [sp, #48]
   27dc0:	ldp	x22, x21, [sp, #32]
   27dc4:	ldp	x28, x23, [sp, #16]
   27dc8:	ldp	x29, x30, [sp], #64
   27dcc:	ret
   27dd0:	stp	x29, x30, [sp, #-64]!
   27dd4:	stp	x28, x23, [sp, #16]
   27dd8:	stp	x22, x21, [sp, #32]
   27ddc:	stp	x20, x19, [sp, #48]
   27de0:	mov	x29, sp
   27de4:	sub	sp, sp, #0x260
   27de8:	mov	x23, x0
   27dec:	mov	w8, #0x30                  	// #48
   27df0:	mov	w9, #0x40                  	// #64
   27df4:	add	x10, sp, #0x30
   27df8:	sub	x0, x29, #0x30
   27dfc:	mov	x19, x4
   27e00:	mov	x20, x3
   27e04:	mov	x21, x2
   27e08:	mov	x22, x1
   27e0c:	stp	xzr, xzr, [sp, #8]
   27e10:	strb	w8, [sp]
   27e14:	stp	xzr, x9, [sp, #24]
   27e18:	str	x10, [sp, #40]
   27e1c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   27e20:	mov	x0, sp
   27e24:	sub	x2, x29, #0x30
   27e28:	mov	x1, x21
   27e2c:	mov	x3, x19
   27e30:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   27e34:	mov	x2, sp
   27e38:	mov	x0, x23
   27e3c:	mov	x1, x22
   27e40:	mov	x3, x20
   27e44:	mov	x4, x19
   27e48:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   27e4c:	ldrb	w8, [sp]
   27e50:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   27e54:	cmp	w8, #0x1f
   27e58:	b.hi	27e6c <PyInit__decimal@@Base+0x213b8>  // b.pmore
   27e5c:	ldr	x8, [x19, #1376]
   27e60:	ldr	x0, [sp, #40]
   27e64:	blr	x8
   27e68:	ldrb	w8, [sp]
   27e6c:	tbnz	w8, #4, 27e7c <PyInit__decimal@@Base+0x213c8>
   27e70:	ldr	x8, [x19, #1376]
   27e74:	mov	x0, sp
   27e78:	blr	x8
   27e7c:	add	sp, sp, #0x260
   27e80:	ldp	x20, x19, [sp, #48]
   27e84:	ldp	x22, x21, [sp, #32]
   27e88:	ldp	x28, x23, [sp, #16]
   27e8c:	ldp	x29, x30, [sp], #64
   27e90:	ret
   27e94:	stp	x29, x30, [sp, #-64]!
   27e98:	stp	x28, x23, [sp, #16]
   27e9c:	stp	x22, x21, [sp, #32]
   27ea0:	stp	x20, x19, [sp, #48]
   27ea4:	mov	x29, sp
   27ea8:	sub	sp, sp, #0x260
   27eac:	mov	x22, x0
   27eb0:	mov	w8, #0x30                  	// #48
   27eb4:	mov	w9, #0x40                  	// #64
   27eb8:	add	x10, sp, #0x30
   27ebc:	sub	x0, x29, #0x30
   27ec0:	mov	x19, x4
   27ec4:	mov	x20, x3
   27ec8:	mov	x21, x1
   27ecc:	sxtw	x23, w2
   27ed0:	stp	xzr, xzr, [sp, #8]
   27ed4:	strb	w8, [sp]
   27ed8:	stp	xzr, x9, [sp, #24]
   27edc:	str	x10, [sp, #40]
   27ee0:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   27ee4:	mov	x0, sp
   27ee8:	sub	x2, x29, #0x30
   27eec:	mov	x1, x23
   27ef0:	mov	x3, x19
   27ef4:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   27ef8:	mov	x2, sp
   27efc:	mov	x0, x22
   27f00:	mov	x1, x21
   27f04:	mov	x3, x20
   27f08:	mov	x4, x19
   27f0c:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   27f10:	ldrb	w8, [sp]
   27f14:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   27f18:	cmp	w8, #0x1f
   27f1c:	b.hi	27f30 <PyInit__decimal@@Base+0x2147c>  // b.pmore
   27f20:	ldr	x8, [x19, #1376]
   27f24:	ldr	x0, [sp, #40]
   27f28:	blr	x8
   27f2c:	ldrb	w8, [sp]
   27f30:	tbnz	w8, #4, 27f40 <PyInit__decimal@@Base+0x2148c>
   27f34:	ldr	x8, [x19, #1376]
   27f38:	mov	x0, sp
   27f3c:	blr	x8
   27f40:	add	sp, sp, #0x260
   27f44:	ldp	x20, x19, [sp, #48]
   27f48:	ldp	x22, x21, [sp, #32]
   27f4c:	ldp	x28, x23, [sp, #16]
   27f50:	ldp	x29, x30, [sp], #64
   27f54:	ret
   27f58:	stp	x29, x30, [sp, #-64]!
   27f5c:	stp	x28, x23, [sp, #16]
   27f60:	stp	x22, x21, [sp, #32]
   27f64:	stp	x20, x19, [sp, #48]
   27f68:	mov	x29, sp
   27f6c:	sub	sp, sp, #0x260
   27f70:	mov	x22, x0
   27f74:	mov	w8, #0x30                  	// #48
   27f78:	mov	w9, #0x40                  	// #64
   27f7c:	add	x10, sp, #0x30
   27f80:	sub	x0, x29, #0x30
   27f84:	mov	x19, x4
   27f88:	mov	x20, x3
   27f8c:	mov	x21, x1
   27f90:	mov	w23, w2
   27f94:	stp	xzr, xzr, [sp, #8]
   27f98:	strb	w8, [sp]
   27f9c:	stp	xzr, x9, [sp, #24]
   27fa0:	str	x10, [sp, #40]
   27fa4:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   27fa8:	mov	x0, sp
   27fac:	sub	x2, x29, #0x30
   27fb0:	mov	x1, x23
   27fb4:	mov	x3, x19
   27fb8:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   27fbc:	mov	x2, sp
   27fc0:	mov	x0, x22
   27fc4:	mov	x1, x21
   27fc8:	mov	x3, x20
   27fcc:	mov	x4, x19
   27fd0:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   27fd4:	ldrb	w8, [sp]
   27fd8:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   27fdc:	cmp	w8, #0x1f
   27fe0:	b.hi	27ff4 <PyInit__decimal@@Base+0x21540>  // b.pmore
   27fe4:	ldr	x8, [x19, #1376]
   27fe8:	ldr	x0, [sp, #40]
   27fec:	blr	x8
   27ff0:	ldrb	w8, [sp]
   27ff4:	tbnz	w8, #4, 28004 <PyInit__decimal@@Base+0x21550>
   27ff8:	ldr	x8, [x19, #1376]
   27ffc:	mov	x0, sp
   28000:	blr	x8
   28004:	add	sp, sp, #0x260
   28008:	ldp	x20, x19, [sp, #48]
   2800c:	ldp	x22, x21, [sp, #32]
   28010:	ldp	x28, x23, [sp, #16]
   28014:	ldp	x29, x30, [sp], #64
   28018:	ret
   2801c:	stp	x29, x30, [sp, #-64]!
   28020:	stp	x28, x23, [sp, #16]
   28024:	stp	x22, x21, [sp, #32]
   28028:	stp	x20, x19, [sp, #48]
   2802c:	mov	x29, sp
   28030:	sub	sp, sp, #0x260
   28034:	mov	x23, x0
   28038:	mov	w8, #0x30                  	// #48
   2803c:	mov	w9, #0x40                  	// #64
   28040:	add	x10, sp, #0x30
   28044:	sub	x0, x29, #0x30
   28048:	mov	x19, x4
   2804c:	mov	x20, x3
   28050:	mov	x21, x2
   28054:	mov	x22, x1
   28058:	stp	xzr, xzr, [sp, #8]
   2805c:	strb	w8, [sp]
   28060:	stp	xzr, x9, [sp, #24]
   28064:	str	x10, [sp, #40]
   28068:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2806c:	mov	x0, sp
   28070:	sub	x2, x29, #0x30
   28074:	mov	x1, x21
   28078:	mov	x3, x19
   2807c:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   28080:	mov	x2, sp
   28084:	mov	x0, x23
   28088:	mov	x1, x22
   2808c:	mov	x3, x20
   28090:	mov	x4, x19
   28094:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   28098:	ldrb	w8, [sp]
   2809c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   280a0:	cmp	w8, #0x1f
   280a4:	b.hi	280b8 <PyInit__decimal@@Base+0x21604>  // b.pmore
   280a8:	ldr	x8, [x19, #1376]
   280ac:	ldr	x0, [sp, #40]
   280b0:	blr	x8
   280b4:	ldrb	w8, [sp]
   280b8:	tbnz	w8, #4, 280c8 <PyInit__decimal@@Base+0x21614>
   280bc:	ldr	x8, [x19, #1376]
   280c0:	mov	x0, sp
   280c4:	blr	x8
   280c8:	add	sp, sp, #0x260
   280cc:	ldp	x20, x19, [sp, #48]
   280d0:	ldp	x22, x21, [sp, #32]
   280d4:	ldp	x28, x23, [sp, #16]
   280d8:	ldp	x29, x30, [sp], #64
   280dc:	ret
   280e0:	stp	x29, x30, [sp, #-64]!
   280e4:	stp	x28, x23, [sp, #16]
   280e8:	stp	x22, x21, [sp, #32]
   280ec:	stp	x20, x19, [sp, #48]
   280f0:	mov	x29, sp
   280f4:	sub	sp, sp, #0x260
   280f8:	mov	x23, x0
   280fc:	mov	w8, #0x30                  	// #48
   28100:	mov	w9, #0x40                  	// #64
   28104:	add	x10, sp, #0x30
   28108:	sub	x0, x29, #0x30
   2810c:	mov	x19, x4
   28110:	mov	x20, x3
   28114:	mov	x21, x2
   28118:	mov	x22, x1
   2811c:	stp	xzr, xzr, [sp, #8]
   28120:	strb	w8, [sp]
   28124:	stp	xzr, x9, [sp, #24]
   28128:	str	x10, [sp, #40]
   2812c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   28130:	mov	x0, sp
   28134:	sub	x2, x29, #0x30
   28138:	mov	x1, x21
   2813c:	mov	x3, x19
   28140:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   28144:	mov	x2, sp
   28148:	mov	x0, x23
   2814c:	mov	x1, x22
   28150:	mov	x3, x20
   28154:	mov	x4, x19
   28158:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   2815c:	ldrb	w8, [sp]
   28160:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   28164:	cmp	w8, #0x1f
   28168:	b.hi	2817c <PyInit__decimal@@Base+0x216c8>  // b.pmore
   2816c:	ldr	x8, [x19, #1376]
   28170:	ldr	x0, [sp, #40]
   28174:	blr	x8
   28178:	ldrb	w8, [sp]
   2817c:	tbnz	w8, #4, 2818c <PyInit__decimal@@Base+0x216d8>
   28180:	ldr	x8, [x19, #1376]
   28184:	mov	x0, sp
   28188:	blr	x8
   2818c:	add	sp, sp, #0x260
   28190:	ldp	x20, x19, [sp, #48]
   28194:	ldp	x22, x21, [sp, #32]
   28198:	ldp	x28, x23, [sp, #16]
   2819c:	ldp	x29, x30, [sp], #64
   281a0:	ret
   281a4:	mov	x8, x0
   281a8:	mov	x5, x4
   281ac:	mov	x4, x3
   281b0:	mov	x3, x2
   281b4:	mov	w0, #0x1                   	// #1
   281b8:	mov	x2, x1
   281bc:	mov	x1, x8
   281c0:	b	281c4 <PyInit__decimal@@Base+0x21710>
   281c4:	stp	x29, x30, [sp, #-96]!
   281c8:	stp	x28, x27, [sp, #16]
   281cc:	stp	x26, x25, [sp, #32]
   281d0:	stp	x24, x23, [sp, #48]
   281d4:	stp	x22, x21, [sp, #64]
   281d8:	stp	x20, x19, [sp, #80]
   281dc:	mov	x29, sp
   281e0:	sub	sp, sp, #0x490
   281e4:	mov	w8, #0x30                  	// #48
   281e8:	mov	w9, #0x40                  	// #64
   281ec:	add	x10, sp, #0x280
   281f0:	str	xzr, [sp, #608]
   281f4:	str	xzr, [sp, #600]
   281f8:	strb	w8, [sp, #592]
   281fc:	str	xzr, [sp, #616]
   28200:	str	x9, [sp, #624]
   28204:	str	x10, [sp, #632]
   28208:	ldrb	w8, [x2]
   2820c:	ldrb	w9, [x3]
   28210:	mov	x20, x5
   28214:	mov	x21, x4
   28218:	mov	x24, x3
   2821c:	orr	w10, w8, w9
   28220:	mov	x22, x2
   28224:	mov	x19, x1
   28228:	tst	w10, #0xe
   2822c:	b.eq	2828c <PyInit__decimal@@Base+0x217d8>  // b.none
   28230:	mov	x0, x19
   28234:	mov	x1, x22
   28238:	mov	x2, x24
   2823c:	mov	x3, x21
   28240:	mov	x4, x20
   28244:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   28248:	cbnz	w0, 28a3c <PyInit__decimal@@Base+0x21f88>
   2824c:	ldrb	w9, [x22]
   28250:	ldrb	w10, [x24]
   28254:	tbnz	w9, #1, 28384 <PyInit__decimal@@Base+0x218d0>
   28258:	ldr	x8, [x21, #16]
   2825c:	ldr	x11, [x21]
   28260:	eor	w9, w10, w9
   28264:	and	w1, w9, #0x1
   28268:	mov	x0, x19
   2826c:	sub	x8, x8, x11
   28270:	add	x3, x8, #0x1
   28274:	mov	x2, xzr
   28278:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2827c:	ldr	w8, [x20]
   28280:	orr	w8, w8, #0x1
   28284:	str	w8, [x20]
   28288:	b	28a3c <PyInit__decimal@@Base+0x21f88>
   2828c:	ldr	x10, [x24, #40]
   28290:	ldr	x11, [x24, #24]
   28294:	ldr	x12, [x22, #40]
   28298:	ldr	x13, [x22, #24]
   2829c:	and	w27, w8, #0x1
   282a0:	add	x10, x10, x11, lsl #3
   282a4:	ldur	x11, [x10, #-8]
   282a8:	add	x10, x12, x13, lsl #3
   282ac:	ldur	x10, [x10, #-8]
   282b0:	and	w28, w9, #0x1
   282b4:	cbz	x11, 2830c <PyInit__decimal@@Base+0x21858>
   282b8:	cbz	x10, 283f4 <PyInit__decimal@@Base+0x21940>
   282bc:	ldp	x11, x9, [x22, #8]
   282c0:	ldr	x10, [x21]
   282c4:	mov	w23, w0
   282c8:	str	x11, [sp, #24]
   282cc:	ldp	x11, x8, [x24, #8]
   282d0:	sub	x8, x8, x9
   282d4:	add	x8, x8, x10
   282d8:	add	x26, x8, #0x1
   282dc:	cmp	x26, #0x1
   282e0:	mvn	x25, x8
   282e4:	str	x11, [sp, #16]
   282e8:	b.lt	28480 <PyInit__decimal@@Base+0x219cc>  // b.tstop
   282ec:	add	x0, sp, #0x250
   282f0:	mov	x1, x22
   282f4:	mov	x2, x26
   282f8:	mov	x3, x20
   282fc:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   28300:	add	x22, sp, #0x250
   28304:	cbnz	w0, 284a0 <PyInit__decimal@@Base+0x219ec>
   28308:	b	28660 <PyInit__decimal@@Base+0x21bac>
   2830c:	cbz	x10, 28510 <PyInit__decimal@@Base+0x21a5c>
   28310:	ldrb	w8, [x19]
   28314:	eor	w21, w28, w27
   28318:	tbnz	w8, #5, 2835c <PyInit__decimal@@Base+0x218a8>
   2831c:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   28320:	ldr	x9, [x19, #32]
   28324:	ldr	x1, [x22, #1344]
   28328:	cmp	x9, x1
   2832c:	b.le	2835c <PyInit__decimal@@Base+0x218a8>
   28330:	strb	wzr, [sp, #80]
   28334:	ldr	x0, [x19, #40]
   28338:	add	x3, sp, #0x50
   2833c:	mov	w2, #0x8                   	// #8
   28340:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28344:	str	x0, [x19, #40]
   28348:	ldrb	w8, [sp, #80]
   2834c:	cbnz	w8, 28358 <PyInit__decimal@@Base+0x218a4>
   28350:	ldr	x8, [x22, #1344]
   28354:	str	x8, [x19, #32]
   28358:	ldrb	w8, [x19]
   2835c:	and	w8, w8, #0xf0
   28360:	orr	w8, w21, w8
   28364:	orr	w8, w8, #0x2
   28368:	stp	xzr, xzr, [x19, #16]
   2836c:	strb	w8, [x19]
   28370:	str	xzr, [x19, #8]
   28374:	ldr	w8, [x20]
   28378:	orr	w8, w8, #0x4
   2837c:	str	w8, [x20]
   28380:	b	28a3c <PyInit__decimal@@Base+0x21f88>
   28384:	tbnz	w10, #1, 28414 <PyInit__decimal@@Base+0x21960>
   28388:	ldrb	w8, [x19]
   2838c:	eor	w9, w10, w9
   28390:	and	w20, w9, #0x1
   28394:	tbnz	w8, #5, 283d8 <PyInit__decimal@@Base+0x21924>
   28398:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2839c:	ldr	x9, [x19, #32]
   283a0:	ldr	x1, [x21, #1344]
   283a4:	cmp	x9, x1
   283a8:	b.le	283d8 <PyInit__decimal@@Base+0x21924>
   283ac:	strb	wzr, [sp, #80]
   283b0:	ldr	x0, [x19, #40]
   283b4:	add	x3, sp, #0x50
   283b8:	mov	w2, #0x8                   	// #8
   283bc:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   283c0:	str	x0, [x19, #40]
   283c4:	ldrb	w8, [sp, #80]
   283c8:	cbnz	w8, 283d4 <PyInit__decimal@@Base+0x21920>
   283cc:	ldr	x8, [x21, #1344]
   283d0:	str	x8, [x19, #32]
   283d4:	ldrb	w8, [x19]
   283d8:	and	w8, w8, #0xf0
   283dc:	orr	w8, w20, w8
   283e0:	orr	w8, w8, #0x2
   283e4:	stp	xzr, xzr, [x19, #16]
   283e8:	strb	w8, [x19]
   283ec:	str	xzr, [x19, #8]
   283f0:	b	28a3c <PyInit__decimal@@Base+0x21f88>
   283f4:	ldr	x8, [x22, #8]
   283f8:	ldr	x9, [x24, #8]
   283fc:	eor	w1, w28, w27
   28400:	mov	x0, x19
   28404:	mov	x2, xzr
   28408:	sub	x3, x8, x9
   2840c:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   28410:	b	28a2c <PyInit__decimal@@Base+0x21f78>
   28414:	ldrb	w8, [x19]
   28418:	tbnz	w8, #5, 2845c <PyInit__decimal@@Base+0x219a8>
   2841c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   28420:	ldr	x9, [x19, #32]
   28424:	ldr	x1, [x21, #1344]
   28428:	cmp	x9, x1
   2842c:	b.le	2845c <PyInit__decimal@@Base+0x219a8>
   28430:	strb	wzr, [sp, #80]
   28434:	ldr	x0, [x19, #40]
   28438:	add	x3, sp, #0x50
   2843c:	mov	w2, #0x8                   	// #8
   28440:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28444:	str	x0, [x19, #40]
   28448:	ldrb	w8, [sp, #80]
   2844c:	cbnz	w8, 28458 <PyInit__decimal@@Base+0x219a4>
   28450:	ldr	x8, [x21, #1344]
   28454:	str	x8, [x19, #32]
   28458:	ldrb	w8, [x19]
   2845c:	and	w8, w8, #0xf0
   28460:	orr	w8, w8, #0x4
   28464:	stp	xzr, xzr, [x19, #16]
   28468:	strb	w8, [x19]
   2846c:	str	xzr, [x19, #8]
   28470:	ldr	w8, [x20]
   28474:	orr	w8, w8, #0x100
   28478:	str	w8, [x20]
   2847c:	b	28a3c <PyInit__decimal@@Base+0x21f88>
   28480:	tbz	x26, #63, 284a0 <PyInit__decimal@@Base+0x219ec>
   28484:	add	x0, sp, #0x250
   28488:	mov	x1, x24
   2848c:	mov	x2, x25
   28490:	mov	x3, x20
   28494:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   28498:	add	x24, sp, #0x250
   2849c:	cbz	w0, 28660 <PyInit__decimal@@Base+0x21bac>
   284a0:	ldr	x9, [x22, #24]
   284a4:	ldr	x5, [x24, #24]
   284a8:	cmp	x24, x19
   284ac:	str	x26, [sp, #8]
   284b0:	cset	w8, eq  // eq = none
   284b4:	sub	x9, x9, x5
   284b8:	cmp	x22, x19
   284bc:	add	x26, x9, #0x1
   284c0:	cset	w9, eq  // eq = none
   284c4:	cmp	x26, x5
   284c8:	cset	w10, gt
   284cc:	and	w10, w8, w10
   284d0:	tbnz	w10, #0, 284dc <PyInit__decimal@@Base+0x21a28>
   284d4:	orr	w8, w8, w9
   284d8:	cbnz	w8, 28598 <PyInit__decimal@@Base+0x21ae4>
   284dc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   284e0:	ldr	x9, [x8, #1344]
   284e4:	ldr	x8, [x19, #32]
   284e8:	cmp	x9, x26
   284ec:	csel	x1, x26, x9, lt  // lt = tstop
   284f0:	cmp	x1, x8
   284f4:	b.eq	28598 <PyInit__decimal@@Base+0x21ae4>  // b.none
   284f8:	ldrb	w9, [x19]
   284fc:	tbnz	w9, #5, 2857c <PyInit__decimal@@Base+0x21ac8>
   28500:	mov	x0, x19
   28504:	mov	x2, x20
   28508:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2850c:	b	28590 <PyInit__decimal@@Base+0x21adc>
   28510:	ldrb	w8, [x19]
   28514:	tbnz	w8, #5, 28558 <PyInit__decimal@@Base+0x21aa4>
   28518:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2851c:	ldr	x9, [x19, #32]
   28520:	ldr	x1, [x21, #1344]
   28524:	cmp	x9, x1
   28528:	b.le	28558 <PyInit__decimal@@Base+0x21aa4>
   2852c:	strb	wzr, [sp, #80]
   28530:	ldr	x0, [x19, #40]
   28534:	add	x3, sp, #0x50
   28538:	mov	w2, #0x8                   	// #8
   2853c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28540:	str	x0, [x19, #40]
   28544:	ldrb	w8, [sp, #80]
   28548:	cbnz	w8, 28554 <PyInit__decimal@@Base+0x21aa0>
   2854c:	ldr	x8, [x21, #1344]
   28550:	str	x8, [x19, #32]
   28554:	ldrb	w8, [x19]
   28558:	and	w8, w8, #0xf0
   2855c:	orr	w8, w8, #0x4
   28560:	stp	xzr, xzr, [x19, #16]
   28564:	strb	w8, [x19]
   28568:	str	xzr, [x19, #8]
   2856c:	ldr	w8, [x20]
   28570:	orr	w8, w8, #0x10
   28574:	str	w8, [x20]
   28578:	b	28a3c <PyInit__decimal@@Base+0x21f88>
   2857c:	cmp	x1, x8
   28580:	b.le	28598 <PyInit__decimal@@Base+0x21ae4>
   28584:	mov	x0, x19
   28588:	mov	x2, x20
   2858c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   28590:	cbz	w0, 28660 <PyInit__decimal@@Base+0x21bac>
   28594:	ldr	x5, [x24, #24]
   28598:	cmp	x5, #0x1
   2859c:	b.ne	285c0 <PyInit__decimal@@Base+0x21b0c>  // b.any
   285a0:	ldr	x8, [x24, #40]
   285a4:	ldr	x0, [x19, #40]
   285a8:	ldr	x1, [x22, #40]
   285ac:	ldr	x2, [x22, #24]
   285b0:	ldr	x3, [x8]
   285b4:	bl	1b690 <PyInit__decimal@@Base+0x14bdc>
   285b8:	mov	x22, x0
   285bc:	b	285e8 <PyInit__decimal@@Base+0x21b34>
   285c0:	cmp	x5, #0x400
   285c4:	b.gt	286cc <PyInit__decimal@@Base+0x21c18>
   285c8:	ldr	x0, [x19, #40]
   285cc:	ldr	x2, [x22, #40]
   285d0:	ldr	x3, [x24, #40]
   285d4:	ldr	x4, [x22, #24]
   285d8:	mov	x1, xzr
   285dc:	bl	1b728 <PyInit__decimal@@Base+0x14c74>
   285e0:	tbnz	w0, #31, 28660 <PyInit__decimal@@Base+0x21bac>
   285e4:	mov	w22, w0
   285e8:	ldp	x9, x8, [sp, #16]
   285ec:	ldr	x10, [x19, #40]
   285f0:	sub	x8, x8, x9
   285f4:	add	x13, x8, x25
   285f8:	mov	w8, #0x13                  	// #19
   285fc:	msub	x9, x26, x8, x8
   28600:	sub	x8, x10, #0x8
   28604:	mov	x24, x26
   28608:	cmp	x26, #0x2
   2860c:	mov	x25, x9
   28610:	b.lt	28624 <PyInit__decimal@@Base+0x21b70>  // b.tstop
   28614:	ldr	x10, [x8, x24, lsl #3]
   28618:	sub	x26, x24, #0x1
   2861c:	add	x9, x25, #0x13
   28620:	cbz	x10, 28604 <PyInit__decimal@@Base+0x21b50>
   28624:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   28628:	ldr	x9, [x8, #1344]
   2862c:	ldr	x8, [x19, #32]
   28630:	ldr	x15, [sp, #8]
   28634:	cmp	x9, x24
   28638:	csel	x1, x24, x9, lt  // lt = tstop
   2863c:	cmp	x1, x8
   28640:	b.eq	287c4 <PyInit__decimal@@Base+0x21d10>  // b.none
   28644:	ldrb	w9, [x19]
   28648:	tbnz	w9, #5, 287a4 <PyInit__decimal@@Base+0x21cf0>
   2864c:	mov	x0, x19
   28650:	mov	x2, x20
   28654:	mov	x26, x13
   28658:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2865c:	b	287bc <PyInit__decimal@@Base+0x21d08>
   28660:	ldrb	w8, [x19]
   28664:	tbnz	w8, #5, 286a8 <PyInit__decimal@@Base+0x21bf4>
   28668:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   2866c:	ldr	x9, [x19, #32]
   28670:	ldr	x1, [x22, #1344]
   28674:	cmp	x9, x1
   28678:	b.le	286a8 <PyInit__decimal@@Base+0x21bf4>
   2867c:	strb	wzr, [sp, #80]
   28680:	ldr	x0, [x19, #40]
   28684:	add	x3, sp, #0x50
   28688:	mov	w2, #0x8                   	// #8
   2868c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28690:	str	x0, [x19, #40]
   28694:	ldrb	w8, [sp, #80]
   28698:	cbnz	w8, 286a4 <PyInit__decimal@@Base+0x21bf0>
   2869c:	ldr	x8, [x22, #1344]
   286a0:	str	x8, [x19, #32]
   286a4:	ldrb	w8, [x19]
   286a8:	and	w8, w8, #0xf0
   286ac:	orr	w8, w8, #0x4
   286b0:	stp	xzr, xzr, [x19, #16]
   286b4:	strb	w8, [x19]
   286b8:	str	xzr, [x19, #8]
   286bc:	ldr	w8, [x20]
   286c0:	orr	w8, w8, #0x200
   286c4:	str	w8, [x20]
   286c8:	b	289f8 <PyInit__decimal@@Base+0x21f44>
   286cc:	mov	w8, #0x30                  	// #48
   286d0:	mov	w9, #0x40                  	// #64
   286d4:	add	x10, sp, #0x50
   286d8:	add	x1, sp, #0x20
   286dc:	mov	x0, x19
   286e0:	mov	x2, x22
   286e4:	mov	x3, x24
   286e8:	mov	x4, x20
   286ec:	stp	xzr, xzr, [sp, #40]
   286f0:	strb	w8, [sp, #32]
   286f4:	stp	xzr, x9, [sp, #56]
   286f8:	str	x10, [sp, #72]
   286fc:	bl	359f4 <PyInit__decimal@@Base+0x2ef40>
   28700:	ldrb	w8, [x19]
   28704:	tst	w8, #0xe
   28708:	b.ne	28718 <PyInit__decimal@@Base+0x21c64>  // b.any
   2870c:	ldrb	w9, [sp, #32]
   28710:	tst	w9, #0xe
   28714:	b.eq	28a5c <PyInit__decimal@@Base+0x21fa8>  // b.none
   28718:	tbnz	w8, #5, 2875c <PyInit__decimal@@Base+0x21ca8>
   2871c:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   28720:	ldr	x9, [x19, #32]
   28724:	ldr	x1, [x22, #1344]
   28728:	cmp	x9, x1
   2872c:	b.le	2875c <PyInit__decimal@@Base+0x21ca8>
   28730:	sturb	wzr, [x29, #-12]
   28734:	ldr	x0, [x19, #40]
   28738:	sub	x3, x29, #0xc
   2873c:	mov	w2, #0x8                   	// #8
   28740:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28744:	str	x0, [x19, #40]
   28748:	ldurb	w8, [x29, #-12]
   2874c:	cbnz	w8, 28758 <PyInit__decimal@@Base+0x21ca4>
   28750:	ldr	x8, [x22, #1344]
   28754:	str	x8, [x19, #32]
   28758:	ldrb	w8, [x19]
   2875c:	and	w8, w8, #0xf0
   28760:	orr	w8, w8, #0x4
   28764:	stp	xzr, xzr, [x19, #16]
   28768:	strb	w8, [x19]
   2876c:	str	xzr, [x19, #8]
   28770:	ldrb	w8, [sp, #32]
   28774:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   28778:	cmp	w8, #0x1f
   2877c:	b.hi	28790 <PyInit__decimal@@Base+0x21cdc>  // b.pmore
   28780:	ldr	x8, [x22, #1376]
   28784:	ldr	x0, [sp, #72]
   28788:	blr	x8
   2878c:	ldrb	w8, [sp, #32]
   28790:	tbnz	w8, #4, 289f8 <PyInit__decimal@@Base+0x21f44>
   28794:	ldr	x8, [x22, #1376]
   28798:	add	x0, sp, #0x20
   2879c:	blr	x8
   287a0:	b	289f8 <PyInit__decimal@@Base+0x21f44>
   287a4:	cmp	x1, x8
   287a8:	b.le	287c4 <PyInit__decimal@@Base+0x21d10>
   287ac:	mov	x0, x19
   287b0:	mov	x2, x20
   287b4:	mov	x26, x13
   287b8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   287bc:	ldr	x15, [sp, #8]
   287c0:	mov	x13, x26
   287c4:	ldrb	w11, [x19]
   287c8:	ldr	x8, [x19, #40]
   287cc:	eor	w9, w28, w27
   287d0:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   287d4:	and	w11, w11, #0xf0
   287d8:	orr	w9, w11, w9
   287dc:	str	x24, [x19, #24]
   287e0:	add	x10, x10, #0x370
   287e4:	add	x12, x8, x24, lsl #3
   287e8:	strb	w9, [x19]
   287ec:	ldur	x9, [x12, #-8]
   287f0:	ldr	x11, [x10, #72]
   287f4:	cmp	x11, x9
   287f8:	b.ls	28824 <PyInit__decimal@@Base+0x21d70>  // b.plast
   287fc:	ldr	x11, [x10, #32]
   28800:	cmp	x11, x9
   28804:	b.ls	2884c <PyInit__decimal@@Base+0x21d98>  // b.plast
   28808:	ldr	x11, [x10, #16]
   2880c:	cmp	x11, x9
   28810:	b.ls	28890 <PyInit__decimal@@Base+0x21ddc>  // b.plast
   28814:	ldr	x10, [x10, #8]
   28818:	cmp	x10, x9
   2881c:	mov	w9, #0x1                   	// #1
   28820:	b	288f4 <PyInit__decimal@@Base+0x21e40>
   28824:	ldr	x11, [x10, #112]
   28828:	cmp	x11, x9
   2882c:	b.ls	28868 <PyInit__decimal@@Base+0x21db4>  // b.plast
   28830:	ldr	x11, [x10, #88]
   28834:	cmp	x11, x9
   28838:	b.ls	288a0 <PyInit__decimal@@Base+0x21dec>  // b.plast
   2883c:	ldr	x10, [x10, #80]
   28840:	cmp	x10, x9
   28844:	mov	w9, #0xa                   	// #10
   28848:	b	288f4 <PyInit__decimal@@Base+0x21e40>
   2884c:	ldr	x11, [x10, #48]
   28850:	cmp	x11, x9
   28854:	b.ls	288bc <PyInit__decimal@@Base+0x21e08>  // b.plast
   28858:	ldr	x10, [x10, #40]
   2885c:	cmp	x10, x9
   28860:	mov	w9, #0x5                   	// #5
   28864:	b	288f4 <PyInit__decimal@@Base+0x21e40>
   28868:	ldr	x11, [x10, #144]
   2886c:	cmp	x11, x9
   28870:	b.ls	288d8 <PyInit__decimal@@Base+0x21e24>  // b.plast
   28874:	ldr	x11, [x10, #128]
   28878:	cmp	x11, x9
   2887c:	b.ls	288e8 <PyInit__decimal@@Base+0x21e34>  // b.plast
   28880:	ldr	x10, [x10, #120]
   28884:	cmp	x10, x9
   28888:	mov	w9, #0xf                   	// #15
   2888c:	b	288f4 <PyInit__decimal@@Base+0x21e40>
   28890:	ldr	x10, [x10, #24]
   28894:	cmp	x10, x9
   28898:	mov	w9, #0x3                   	// #3
   2889c:	b	288f4 <PyInit__decimal@@Base+0x21e40>
   288a0:	ldr	x11, [x10, #104]
   288a4:	cmp	x11, x9
   288a8:	b.ls	2897c <PyInit__decimal@@Base+0x21ec8>  // b.plast
   288ac:	ldr	x10, [x10, #96]
   288b0:	cmp	x10, x9
   288b4:	mov	w9, #0xc                   	// #12
   288b8:	b	288f4 <PyInit__decimal@@Base+0x21e40>
   288bc:	ldr	x11, [x10, #64]
   288c0:	cmp	x11, x9
   288c4:	b.ls	28984 <PyInit__decimal@@Base+0x21ed0>  // b.plast
   288c8:	ldr	x10, [x10, #56]
   288cc:	cmp	x10, x9
   288d0:	mov	w9, #0x7                   	// #7
   288d4:	b	288f4 <PyInit__decimal@@Base+0x21e40>
   288d8:	ldr	x10, [x10, #152]
   288dc:	cmp	x10, x9
   288e0:	mov	w9, #0x13                  	// #19
   288e4:	b	288f4 <PyInit__decimal@@Base+0x21e40>
   288e8:	ldr	x10, [x10, #136]
   288ec:	cmp	x10, x9
   288f0:	mov	w9, #0x11                  	// #17
   288f4:	cinc	x9, x9, ls  // ls = plast
   288f8:	sub	x9, x9, x25
   288fc:	str	x9, [x19, #16]
   28900:	cbz	x22, 28938 <PyInit__decimal@@Base+0x21e84>
   28904:	ldr	x9, [x8]
   28908:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   2890c:	movk	x10, #0xcccd
   28910:	mov	w11, #0xa                   	// #10
   28914:	umulh	x10, x9, x10
   28918:	lsr	x10, x10, #3
   2891c:	msub	x10, x10, x11, x9
   28920:	cmp	x10, #0x5
   28924:	b.eq	2892c <PyInit__decimal@@Base+0x21e78>  // b.none
   28928:	cbnz	x10, 289f4 <PyInit__decimal@@Base+0x21f40>
   2892c:	add	x9, x9, #0x1
   28930:	str	x9, [x8]
   28934:	b	289f4 <PyInit__decimal@@Base+0x21f40>
   28938:	cmp	w23, #0x1
   2893c:	b.ne	289f4 <PyInit__decimal@@Base+0x21f40>  // b.any
   28940:	cmp	x15, #0x1
   28944:	b.lt	289f4 <PyInit__decimal@@Base+0x21f40>  // b.tstop
   28948:	cmp	x24, #0x1
   2894c:	b.lt	28970 <PyInit__decimal@@Base+0x21ebc>  // b.tstop
   28950:	mov	x9, xzr
   28954:	mov	x11, xzr
   28958:	ldr	x10, [x8, x11, lsl #3]
   2895c:	cbnz	x10, 2898c <PyInit__decimal@@Base+0x21ed8>
   28960:	add	x11, x11, #0x1
   28964:	cmp	x24, x11
   28968:	add	x9, x9, #0x13
   2896c:	b.ne	28958 <PyInit__decimal@@Base+0x21ea4>  // b.any
   28970:	mov	x23, x13
   28974:	mov	x9, xzr
   28978:	b	289d8 <PyInit__decimal@@Base+0x21f24>
   2897c:	mov	w9, #0xe                   	// #14
   28980:	b	288f8 <PyInit__decimal@@Base+0x21e44>
   28984:	mov	w9, #0x9                   	// #9
   28988:	b	288f8 <PyInit__decimal@@Base+0x21e44>
   2898c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   28990:	movk	x8, #0xcccd
   28994:	mul	x11, x10, x8
   28998:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   2899c:	ror	x11, x11, #1
   289a0:	movk	x12, #0x1999, lsl #48
   289a4:	mov	x23, x13
   289a8:	cmp	x11, x12
   289ac:	b.hi	289d8 <PyInit__decimal@@Base+0x21f24>  // b.pmore
   289b0:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
   289b4:	movk	x11, #0x999a
   289b8:	movk	x11, #0x1999, lsl #48
   289bc:	umulh	x10, x10, x8
   289c0:	lsr	x10, x10, #3
   289c4:	mul	x12, x10, x8
   289c8:	ror	x12, x12, #1
   289cc:	cmp	x12, x11
   289d0:	add	x9, x9, #0x1
   289d4:	b.cc	289bc <PyInit__decimal@@Base+0x21f08>  // b.lo, b.ul, b.last
   289d8:	cmp	x9, x15
   289dc:	csel	x22, x15, x9, gt
   289e0:	mov	x0, x19
   289e4:	mov	x1, x22
   289e8:	bl	23ebc <PyInit__decimal@@Base+0x1d408>
   289ec:	mov	x13, x23
   289f0:	add	x13, x22, x23
   289f4:	str	x13, [x19, #8]
   289f8:	ldrb	w8, [sp, #592]
   289fc:	cmp	w8, #0x1f
   28a00:	b.hi	28a18 <PyInit__decimal@@Base+0x21f64>  // b.pmore
   28a04:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   28a08:	ldr	x8, [x8, #1376]
   28a0c:	ldr	x0, [sp, #632]
   28a10:	blr	x8
   28a14:	ldrb	w8, [sp, #592]
   28a18:	tbnz	w8, #4, 28a2c <PyInit__decimal@@Base+0x21f78>
   28a1c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   28a20:	ldr	x8, [x8, #1376]
   28a24:	add	x0, sp, #0x250
   28a28:	blr	x8
   28a2c:	mov	x0, x19
   28a30:	mov	x1, x21
   28a34:	mov	x2, x20
   28a38:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   28a3c:	add	sp, sp, #0x490
   28a40:	ldp	x20, x19, [sp, #80]
   28a44:	ldp	x22, x21, [sp, #64]
   28a48:	ldp	x24, x23, [sp, #48]
   28a4c:	ldp	x26, x25, [sp, #32]
   28a50:	ldp	x28, x27, [sp, #16]
   28a54:	ldp	x29, x30, [sp], #96
   28a58:	ret
   28a5c:	ldr	x0, [sp, #72]
   28a60:	ldr	x8, [sp, #56]
   28a64:	add	x8, x0, x8, lsl #3
   28a68:	ldur	x8, [x8, #-8]
   28a6c:	cmp	x8, #0x0
   28a70:	cset	w22, ne  // ne = any
   28a74:	cmp	w9, #0x1f
   28a78:	b.hi	28a8c <PyInit__decimal@@Base+0x21fd8>  // b.pmore
   28a7c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   28a80:	ldr	x8, [x8, #1376]
   28a84:	blr	x8
   28a88:	ldrb	w9, [sp, #32]
   28a8c:	tbnz	w9, #4, 28aa0 <PyInit__decimal@@Base+0x21fec>
   28a90:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   28a94:	ldr	x8, [x8, #1376]
   28a98:	add	x0, sp, #0x20
   28a9c:	blr	x8
   28aa0:	ldr	x26, [x19, #24]
   28aa4:	b	285e8 <PyInit__decimal@@Base+0x21b34>
   28aa8:	sub	sp, sp, #0x70
   28aac:	stp	x29, x30, [sp, #32]
   28ab0:	str	x25, [sp, #48]
   28ab4:	stp	x24, x23, [sp, #64]
   28ab8:	stp	x22, x21, [sp, #80]
   28abc:	stp	x20, x19, [sp, #96]
   28ac0:	add	x29, sp, #0x20
   28ac4:	ldrb	w8, [x2]
   28ac8:	ldrb	w9, [x3]
   28acc:	mov	x19, x5
   28ad0:	mov	x23, x4
   28ad4:	mov	x25, x3
   28ad8:	eor	w10, w9, w8
   28adc:	orr	w8, w8, w9
   28ae0:	mov	x24, x2
   28ae4:	mov	x20, x1
   28ae8:	mov	x21, x0
   28aec:	tst	w8, #0xe
   28af0:	and	w22, w10, #0x1
   28af4:	b.eq	28b58 <PyInit__decimal@@Base+0x220a4>  // b.none
   28af8:	mov	x0, x21
   28afc:	mov	x1, x24
   28b00:	mov	x2, x25
   28b04:	mov	x3, x23
   28b08:	mov	x4, x19
   28b0c:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   28b10:	cbz	w0, 28bc0 <PyInit__decimal@@Base+0x2210c>
   28b14:	cmp	x20, x21
   28b18:	b.eq	28f18 <PyInit__decimal@@Base+0x22464>  // b.none
   28b1c:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   28b20:	ldr	x8, [x21, #24]
   28b24:	ldr	x10, [x9, #1344]
   28b28:	ldr	x9, [x20, #32]
   28b2c:	cmp	x10, x8
   28b30:	csel	x1, x8, x10, lt  // lt = tstop
   28b34:	cmp	x1, x9
   28b38:	b.eq	28d48 <PyInit__decimal@@Base+0x22294>  // b.none
   28b3c:	ldrb	w10, [x20]
   28b40:	tbnz	w10, #5, 28d2c <PyInit__decimal@@Base+0x22278>
   28b44:	mov	x0, x20
   28b48:	mov	x2, x19
   28b4c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   28b50:	cbnz	w0, 28d44 <PyInit__decimal@@Base+0x22290>
   28b54:	b	28f18 <PyInit__decimal@@Base+0x22464>
   28b58:	ldr	x8, [x25, #40]
   28b5c:	ldr	x9, [x25, #24]
   28b60:	add	x8, x8, x9, lsl #3
   28b64:	ldur	x8, [x8, #-8]
   28b68:	cbz	x8, 28c10 <PyInit__decimal@@Base+0x2215c>
   28b6c:	mov	x0, x21
   28b70:	mov	x1, x20
   28b74:	mov	x2, x24
   28b78:	mov	x3, x25
   28b7c:	mov	x4, x23
   28b80:	mov	x5, x19
   28b84:	bl	29024 <PyInit__decimal@@Base+0x22570>
   28b88:	mov	x0, x21
   28b8c:	mov	x1, x23
   28b90:	mov	x2, x19
   28b94:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   28b98:	mov	x0, x20
   28b9c:	mov	x1, x23
   28ba0:	mov	x2, x19
   28ba4:	ldp	x20, x19, [sp, #96]
   28ba8:	ldp	x22, x21, [sp, #80]
   28bac:	ldp	x24, x23, [sp, #64]
   28bb0:	ldr	x25, [sp, #48]
   28bb4:	ldp	x29, x30, [sp, #32]
   28bb8:	add	sp, sp, #0x70
   28bbc:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   28bc0:	ldrb	w8, [x24]
   28bc4:	ldrb	w9, [x25]
   28bc8:	tbnz	w8, #1, 28cd4 <PyInit__decimal@@Base+0x22220>
   28bcc:	tbz	w9, #1, 29020 <PyInit__decimal@@Base+0x2256c>
   28bd0:	cmp	x20, x24
   28bd4:	b.eq	28f80 <PyInit__decimal@@Base+0x224cc>  // b.none
   28bd8:	adrp	x25, 53000 <PyInit__decimal@@Base+0x4c54c>
   28bdc:	ldr	x9, [x24, #24]
   28be0:	ldr	x11, [x25, #1344]
   28be4:	ldr	x10, [x20, #32]
   28be8:	cmp	x11, x9
   28bec:	csel	x1, x9, x11, lt  // lt = tstop
   28bf0:	cmp	x1, x10
   28bf4:	b.eq	28f54 <PyInit__decimal@@Base+0x224a0>  // b.none
   28bf8:	ldrb	w11, [x20]
   28bfc:	tbnz	w11, #5, 28f34 <PyInit__decimal@@Base+0x22480>
   28c00:	mov	x0, x20
   28c04:	mov	x2, x19
   28c08:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   28c0c:	b	28f48 <PyInit__decimal@@Base+0x22494>
   28c10:	ldr	x8, [x24, #40]
   28c14:	ldr	x9, [x24, #24]
   28c18:	add	x8, x8, x9, lsl #3
   28c1c:	ldur	x9, [x8, #-8]
   28c20:	ldrb	w8, [x21]
   28c24:	cbz	x9, 28e54 <PyInit__decimal@@Base+0x223a0>
   28c28:	tbnz	w8, #5, 28c6c <PyInit__decimal@@Base+0x221b8>
   28c2c:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   28c30:	ldr	x9, [x21, #32]
   28c34:	ldr	x1, [x23, #1344]
   28c38:	cmp	x9, x1
   28c3c:	b.le	28c6c <PyInit__decimal@@Base+0x221b8>
   28c40:	strb	wzr, [sp, #12]
   28c44:	ldr	x0, [x21, #40]
   28c48:	add	x3, sp, #0xc
   28c4c:	mov	w2, #0x8                   	// #8
   28c50:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28c54:	str	x0, [x21, #40]
   28c58:	ldrb	w8, [sp, #12]
   28c5c:	cbnz	w8, 28c68 <PyInit__decimal@@Base+0x221b4>
   28c60:	ldr	x8, [x23, #1344]
   28c64:	str	x8, [x21, #32]
   28c68:	ldrb	w8, [x21]
   28c6c:	and	w8, w8, #0xf0
   28c70:	orr	w8, w22, w8
   28c74:	orr	w8, w8, #0x2
   28c78:	stp	xzr, xzr, [x21, #16]
   28c7c:	strb	w8, [x21]
   28c80:	str	xzr, [x21, #8]
   28c84:	ldrb	w8, [x20]
   28c88:	tbnz	w8, #5, 28ccc <PyInit__decimal@@Base+0x22218>
   28c8c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   28c90:	ldr	x9, [x20, #32]
   28c94:	ldr	x1, [x21, #1344]
   28c98:	cmp	x9, x1
   28c9c:	b.le	28ccc <PyInit__decimal@@Base+0x22218>
   28ca0:	strb	wzr, [sp, #8]
   28ca4:	ldr	x0, [x20, #40]
   28ca8:	add	x3, sp, #0x8
   28cac:	mov	w2, #0x8                   	// #8
   28cb0:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28cb4:	str	x0, [x20, #40]
   28cb8:	ldrb	w8, [sp, #8]
   28cbc:	cbnz	w8, 28cc8 <PyInit__decimal@@Base+0x22214>
   28cc0:	ldr	x8, [x21, #1344]
   28cc4:	str	x8, [x20, #32]
   28cc8:	ldrb	w8, [x20]
   28ccc:	mov	w9, #0x104                 	// #260
   28cd0:	b	28ef8 <PyInit__decimal@@Base+0x22444>
   28cd4:	ldrb	w8, [x21]
   28cd8:	tbz	w9, #1, 28d90 <PyInit__decimal@@Base+0x222dc>
   28cdc:	tbnz	w8, #5, 28d20 <PyInit__decimal@@Base+0x2226c>
   28ce0:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   28ce4:	ldr	x9, [x21, #32]
   28ce8:	ldr	x1, [x22, #1344]
   28cec:	cmp	x9, x1
   28cf0:	b.le	28d20 <PyInit__decimal@@Base+0x2226c>
   28cf4:	strb	wzr, [sp, #16]
   28cf8:	ldr	x0, [x21, #40]
   28cfc:	add	x3, sp, #0x10
   28d00:	mov	w2, #0x8                   	// #8
   28d04:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28d08:	str	x0, [x21, #40]
   28d0c:	ldrb	w8, [sp, #16]
   28d10:	cbnz	w8, 28d1c <PyInit__decimal@@Base+0x22268>
   28d14:	ldr	x8, [x22, #1344]
   28d18:	str	x8, [x21, #32]
   28d1c:	ldrb	w8, [x21]
   28d20:	and	w8, w8, #0xf0
   28d24:	orr	w8, w8, #0x4
   28d28:	b	28de0 <PyInit__decimal@@Base+0x2232c>
   28d2c:	cmp	x1, x9
   28d30:	b.le	28d48 <PyInit__decimal@@Base+0x22294>
   28d34:	mov	x0, x20
   28d38:	mov	x2, x19
   28d3c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   28d40:	cbz	w0, 28f18 <PyInit__decimal@@Base+0x22464>
   28d44:	ldr	x8, [x21, #24]
   28d48:	ldrb	w9, [x21]
   28d4c:	ldrb	w10, [x20]
   28d50:	ldr	x0, [x20, #40]
   28d54:	ldr	x25, [sp, #48]
   28d58:	bfxil	w10, w9, #0, #4
   28d5c:	strb	w10, [x20]
   28d60:	ldur	q0, [x21, #8]
   28d64:	str	x8, [x20, #24]
   28d68:	stur	q0, [x20, #8]
   28d6c:	ldr	x8, [x21, #24]
   28d70:	ldr	x1, [x21, #40]
   28d74:	ldp	x20, x19, [sp, #96]
   28d78:	ldp	x22, x21, [sp, #80]
   28d7c:	ldp	x24, x23, [sp, #64]
   28d80:	ldp	x29, x30, [sp, #32]
   28d84:	lsl	x2, x8, #3
   28d88:	add	sp, sp, #0x70
   28d8c:	b	63c0 <memcpy@plt>
   28d90:	tbnz	w8, #5, 28dd4 <PyInit__decimal@@Base+0x22320>
   28d94:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   28d98:	ldr	x9, [x21, #32]
   28d9c:	ldr	x1, [x23, #1344]
   28da0:	cmp	x9, x1
   28da4:	b.le	28dd4 <PyInit__decimal@@Base+0x22320>
   28da8:	sturb	wzr, [x29, #-12]
   28dac:	ldr	x0, [x21, #40]
   28db0:	sub	x3, x29, #0xc
   28db4:	mov	w2, #0x8                   	// #8
   28db8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28dbc:	str	x0, [x21, #40]
   28dc0:	ldurb	w8, [x29, #-12]
   28dc4:	cbnz	w8, 28dd0 <PyInit__decimal@@Base+0x2231c>
   28dc8:	ldr	x8, [x23, #1344]
   28dcc:	str	x8, [x21, #32]
   28dd0:	ldrb	w8, [x21]
   28dd4:	and	w8, w8, #0xf0
   28dd8:	orr	w8, w22, w8
   28ddc:	orr	w8, w8, #0x2
   28de0:	strb	w8, [x21]
   28de4:	stp	xzr, xzr, [x21, #16]
   28de8:	str	xzr, [x21, #8]
   28dec:	ldrb	w8, [x20]
   28df0:	tbnz	w8, #5, 28e34 <PyInit__decimal@@Base+0x22380>
   28df4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   28df8:	ldr	x9, [x20, #32]
   28dfc:	ldr	x1, [x21, #1344]
   28e00:	cmp	x9, x1
   28e04:	b.le	28e34 <PyInit__decimal@@Base+0x22380>
   28e08:	sturb	wzr, [x29, #-8]
   28e0c:	ldr	x0, [x20, #40]
   28e10:	sub	x3, x29, #0x8
   28e14:	mov	w2, #0x8                   	// #8
   28e18:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28e1c:	str	x0, [x20, #40]
   28e20:	ldurb	w8, [x29, #-8]
   28e24:	cbnz	w8, 28e30 <PyInit__decimal@@Base+0x2237c>
   28e28:	ldr	x8, [x21, #1344]
   28e2c:	str	x8, [x20, #32]
   28e30:	ldrb	w8, [x20]
   28e34:	and	w8, w8, #0xf0
   28e38:	orr	w8, w8, #0x4
   28e3c:	stp	xzr, xzr, [x20, #16]
   28e40:	strb	w8, [x20]
   28e44:	str	xzr, [x20, #8]
   28e48:	ldr	w8, [x19]
   28e4c:	orr	w8, w8, #0x100
   28e50:	b	28f14 <PyInit__decimal@@Base+0x22460>
   28e54:	tbnz	w8, #5, 28e98 <PyInit__decimal@@Base+0x223e4>
   28e58:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   28e5c:	ldr	x9, [x21, #32]
   28e60:	ldr	x1, [x22, #1344]
   28e64:	cmp	x9, x1
   28e68:	b.le	28e98 <PyInit__decimal@@Base+0x223e4>
   28e6c:	strb	wzr, [x29, #28]
   28e70:	ldr	x0, [x21, #40]
   28e74:	add	x3, x29, #0x1c
   28e78:	mov	w2, #0x8                   	// #8
   28e7c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28e80:	str	x0, [x21, #40]
   28e84:	ldrb	w8, [x29, #28]
   28e88:	cbnz	w8, 28e94 <PyInit__decimal@@Base+0x223e0>
   28e8c:	ldr	x8, [x22, #1344]
   28e90:	str	x8, [x21, #32]
   28e94:	ldrb	w8, [x21]
   28e98:	and	w8, w8, #0xf0
   28e9c:	orr	w8, w8, #0x4
   28ea0:	stp	xzr, xzr, [x21, #16]
   28ea4:	strb	w8, [x21]
   28ea8:	str	xzr, [x21, #8]
   28eac:	ldrb	w8, [x20]
   28eb0:	tbnz	w8, #5, 28ef4 <PyInit__decimal@@Base+0x22440>
   28eb4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   28eb8:	ldr	x9, [x20, #32]
   28ebc:	ldr	x1, [x21, #1344]
   28ec0:	cmp	x9, x1
   28ec4:	b.le	28ef4 <PyInit__decimal@@Base+0x22440>
   28ec8:	strb	wzr, [x29, #24]
   28ecc:	ldr	x0, [x20, #40]
   28ed0:	add	x3, x29, #0x18
   28ed4:	mov	w2, #0x8                   	// #8
   28ed8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28edc:	str	x0, [x20, #40]
   28ee0:	ldrb	w8, [x29, #24]
   28ee4:	cbnz	w8, 28ef0 <PyInit__decimal@@Base+0x2243c>
   28ee8:	ldr	x8, [x21, #1344]
   28eec:	str	x8, [x20, #32]
   28ef0:	ldrb	w8, [x20]
   28ef4:	mov	w9, #0x10                  	// #16
   28ef8:	and	w8, w8, #0xf0
   28efc:	orr	w8, w8, #0x4
   28f00:	stp	xzr, xzr, [x20, #16]
   28f04:	strb	w8, [x20]
   28f08:	str	xzr, [x20, #8]
   28f0c:	ldr	w8, [x19]
   28f10:	orr	w8, w8, w9
   28f14:	str	w8, [x19]
   28f18:	ldp	x20, x19, [sp, #96]
   28f1c:	ldp	x22, x21, [sp, #80]
   28f20:	ldp	x24, x23, [sp, #64]
   28f24:	ldr	x25, [sp, #48]
   28f28:	ldp	x29, x30, [sp, #32]
   28f2c:	add	sp, sp, #0x70
   28f30:	ret
   28f34:	cmp	x1, x10
   28f38:	b.le	28f54 <PyInit__decimal@@Base+0x224a0>
   28f3c:	mov	x0, x20
   28f40:	mov	x2, x19
   28f44:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   28f48:	cbz	w0, 28fbc <PyInit__decimal@@Base+0x22508>
   28f4c:	ldr	x9, [x24, #24]
   28f50:	ldrb	w8, [x24]
   28f54:	ldrb	w10, [x20]
   28f58:	ldr	x0, [x20, #40]
   28f5c:	bfxil	w10, w8, #0, #4
   28f60:	strb	w10, [x20]
   28f64:	ldur	q0, [x24, #8]
   28f68:	str	x9, [x20, #24]
   28f6c:	stur	q0, [x20, #8]
   28f70:	ldr	x8, [x24, #24]
   28f74:	ldr	x1, [x24, #40]
   28f78:	lsl	x2, x8, #3
   28f7c:	bl	63c0 <memcpy@plt>
   28f80:	mov	x0, x20
   28f84:	mov	x1, x23
   28f88:	mov	x2, x19
   28f8c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   28f90:	mov	x0, x21
   28f94:	mov	w1, w22
   28f98:	ldp	x20, x19, [sp, #96]
   28f9c:	ldp	x22, x21, [sp, #80]
   28fa0:	ldp	x24, x23, [sp, #64]
   28fa4:	ldr	x25, [sp, #48]
   28fa8:	ldp	x29, x30, [sp, #32]
   28fac:	mov	x2, xzr
   28fb0:	mov	x3, xzr
   28fb4:	add	sp, sp, #0x70
   28fb8:	b	21f1c <PyInit__decimal@@Base+0x1b468>
   28fbc:	ldrb	w8, [x21]
   28fc0:	tbnz	w8, #5, 29000 <PyInit__decimal@@Base+0x2254c>
   28fc4:	ldr	x9, [x21, #32]
   28fc8:	ldr	x1, [x25, #1344]
   28fcc:	cmp	x9, x1
   28fd0:	b.le	29000 <PyInit__decimal@@Base+0x2254c>
   28fd4:	sturb	wzr, [x29, #-4]
   28fd8:	ldr	x0, [x21, #40]
   28fdc:	sub	x3, x29, #0x4
   28fe0:	mov	w2, #0x8                   	// #8
   28fe4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   28fe8:	str	x0, [x21, #40]
   28fec:	ldurb	w8, [x29, #-4]
   28ff0:	cbnz	w8, 28ffc <PyInit__decimal@@Base+0x22548>
   28ff4:	ldr	x8, [x25, #1344]
   28ff8:	str	x8, [x21, #32]
   28ffc:	ldrb	w8, [x21]
   29000:	and	w8, w8, #0xf0
   29004:	orr	w8, w8, #0x4
   29008:	stp	xzr, xzr, [x21, #16]
   2900c:	strb	w8, [x21]
   29010:	str	xzr, [x21, #8]
   29014:	ldr	w8, [x19]
   29018:	orr	w8, w8, #0x200
   2901c:	b	28f14 <PyInit__decimal@@Base+0x22460>
   29020:	bl	6700 <abort@plt>
   29024:	stp	x29, x30, [sp, #-96]!
   29028:	stp	x28, x27, [sp, #16]
   2902c:	stp	x26, x25, [sp, #32]
   29030:	stp	x24, x23, [sp, #48]
   29034:	stp	x22, x21, [sp, #64]
   29038:	stp	x20, x19, [sp, #80]
   2903c:	mov	x29, sp
   29040:	sub	sp, sp, #0x250
   29044:	mov	w8, #0x30                  	// #48
   29048:	mov	w9, #0x40                  	// #64
   2904c:	add	x10, sp, #0x40
   29050:	stp	xzr, xzr, [sp, #24]
   29054:	strb	w8, [sp, #16]
   29058:	stp	xzr, x9, [sp, #40]
   2905c:	str	x10, [sp, #56]
   29060:	mov	x19, x1
   29064:	ldr	x1, [x2, #40]
   29068:	ldr	x10, [x2, #24]
   2906c:	ldrb	w9, [x2]
   29070:	ldrb	w12, [x3]
   29074:	ldr	x11, [x2, #8]
   29078:	ldr	x8, [x3, #8]
   2907c:	add	x13, x1, x10, lsl #3
   29080:	ldur	x13, [x13, #-8]
   29084:	mov	x24, x2
   29088:	and	w27, w9, #0x1
   2908c:	and	w12, w12, #0x1
   29090:	subs	x2, x11, x8
   29094:	mov	x22, x5
   29098:	mov	x20, x0
   2909c:	eor	w21, w12, w27
   290a0:	csel	x26, x8, x11, gt
   290a4:	cbz	x13, 291c8 <PyInit__decimal@@Base+0x22714>
   290a8:	ldr	x12, [x24, #16]
   290ac:	ldr	x13, [x3, #16]
   290b0:	mov	x25, x3
   290b4:	add	x14, x2, x12
   290b8:	subs	x13, x14, x13
   290bc:	b.mi	2920c <PyInit__decimal@@Base+0x22758>  // b.first
   290c0:	ldr	x9, [x4]
   290c4:	mov	x23, x4
   290c8:	cmp	x13, x9
   290cc:	b.le	2922c <PyInit__decimal@@Base+0x22778>
   290d0:	ldr	w8, [x22]
   290d4:	orr	w8, w8, #0x8
   290d8:	str	w8, [x22]
   290dc:	ldrb	w8, [x20]
   290e0:	tbnz	w8, #5, 29124 <PyInit__decimal@@Base+0x22670>
   290e4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   290e8:	ldr	x9, [x20, #32]
   290ec:	ldr	x1, [x21, #1344]
   290f0:	cmp	x9, x1
   290f4:	b.le	29124 <PyInit__decimal@@Base+0x22670>
   290f8:	sturb	wzr, [x29, #-12]
   290fc:	ldr	x0, [x20, #40]
   29100:	sub	x3, x29, #0xc
   29104:	mov	w2, #0x8                   	// #8
   29108:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2910c:	str	x0, [x20, #40]
   29110:	ldurb	w8, [x29, #-12]
   29114:	cbnz	w8, 29120 <PyInit__decimal@@Base+0x2266c>
   29118:	ldr	x8, [x21, #1344]
   2911c:	str	x8, [x20, #32]
   29120:	ldrb	w8, [x20]
   29124:	and	w8, w8, #0xf0
   29128:	orr	w8, w8, #0x4
   2912c:	stp	xzr, xzr, [x20, #16]
   29130:	strb	w8, [x20]
   29134:	str	xzr, [x20, #8]
   29138:	ldrb	w8, [x19]
   2913c:	tbnz	w8, #5, 29180 <PyInit__decimal@@Base+0x226cc>
   29140:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   29144:	ldr	x9, [x19, #32]
   29148:	ldr	x1, [x20, #1344]
   2914c:	cmp	x9, x1
   29150:	b.le	29180 <PyInit__decimal@@Base+0x226cc>
   29154:	sturb	wzr, [x29, #-12]
   29158:	ldr	x0, [x19, #40]
   2915c:	sub	x3, x29, #0xc
   29160:	mov	w2, #0x8                   	// #8
   29164:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   29168:	str	x0, [x19, #40]
   2916c:	ldurb	w8, [x29, #-12]
   29170:	cbnz	w8, 2917c <PyInit__decimal@@Base+0x226c8>
   29174:	ldr	x8, [x20, #1344]
   29178:	str	x8, [x19, #32]
   2917c:	ldrb	w8, [x19]
   29180:	and	w8, w8, #0xf0
   29184:	orr	w8, w8, #0x4
   29188:	stp	xzr, xzr, [x19, #16]
   2918c:	strb	w8, [x19]
   29190:	str	xzr, [x19, #8]
   29194:	ldrb	w8, [sp, #16]
   29198:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2919c:	cmp	w8, #0x1f
   291a0:	b.hi	291b4 <PyInit__decimal@@Base+0x22700>  // b.pmore
   291a4:	ldr	x8, [x19, #1376]
   291a8:	ldr	x0, [sp, #56]
   291ac:	blr	x8
   291b0:	ldrb	w8, [sp, #16]
   291b4:	tbnz	w8, #4, 29308 <PyInit__decimal@@Base+0x22854>
   291b8:	ldr	x8, [x19, #1376]
   291bc:	add	x0, sp, #0x10
   291c0:	blr	x8
   291c4:	b	29308 <PyInit__decimal@@Base+0x22854>
   291c8:	cmp	x19, x24
   291cc:	b.eq	292f0 <PyInit__decimal@@Base+0x2283c>  // b.none
   291d0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   291d4:	ldr	x8, [x8, #1344]
   291d8:	ldr	x12, [x19, #32]
   291dc:	cmp	x8, x10
   291e0:	csel	x8, x10, x8, lt  // lt = tstop
   291e4:	cmp	x8, x12
   291e8:	b.eq	292c8 <PyInit__decimal@@Base+0x22814>  // b.none
   291ec:	ldrb	w13, [x19]
   291f0:	tbnz	w13, #5, 2929c <PyInit__decimal@@Base+0x227e8>
   291f4:	mov	x0, x19
   291f8:	mov	x1, x8
   291fc:	mov	x2, x22
   29200:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   29204:	cbnz	w0, 292b8 <PyInit__decimal@@Base+0x22804>
   29208:	b	290dc <PyInit__decimal@@Base+0x22628>
   2920c:	cmp	x11, x8
   29210:	b.le	2925c <PyInit__decimal@@Base+0x227a8>
   29214:	mov	x0, x19
   29218:	mov	x1, x24
   2921c:	mov	x3, x22
   29220:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   29224:	cbnz	w0, 292f0 <PyInit__decimal@@Base+0x2283c>
   29228:	b	290dc <PyInit__decimal@@Base+0x22628>
   2922c:	cmp	x11, x8
   29230:	str	x26, [sp, #8]
   29234:	b.eq	29344 <PyInit__decimal@@Base+0x22890>  // b.none
   29238:	cmp	x2, #0x1
   2923c:	b.lt	29328 <PyInit__decimal@@Base+0x22874>  // b.tstop
   29240:	add	x0, sp, #0x10
   29244:	mov	x1, x24
   29248:	mov	x3, x22
   2924c:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   29250:	add	x24, sp, #0x10
   29254:	cbnz	w0, 29344 <PyInit__decimal@@Base+0x22890>
   29258:	b	290dc <PyInit__decimal@@Base+0x22628>
   2925c:	cmp	x19, x24
   29260:	b.eq	292f4 <PyInit__decimal@@Base+0x22840>  // b.none
   29264:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   29268:	ldr	x8, [x8, #1344]
   2926c:	ldr	x13, [x19, #32]
   29270:	cmp	x8, x10
   29274:	csel	x8, x10, x8, lt  // lt = tstop
   29278:	cmp	x8, x13
   2927c:	b.eq	293d4 <PyInit__decimal@@Base+0x22920>  // b.none
   29280:	ldrb	w14, [x19]
   29284:	tbnz	w14, #5, 293a8 <PyInit__decimal@@Base+0x228f4>
   29288:	mov	x0, x19
   2928c:	mov	x1, x8
   29290:	mov	x2, x22
   29294:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   29298:	b	293c0 <PyInit__decimal@@Base+0x2290c>
   2929c:	cmp	x8, x12
   292a0:	b.le	292c8 <PyInit__decimal@@Base+0x22814>
   292a4:	mov	x0, x19
   292a8:	mov	x1, x8
   292ac:	mov	x2, x22
   292b0:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   292b4:	cbz	w0, 290dc <PyInit__decimal@@Base+0x22628>
   292b8:	ldr	x10, [x24, #24]
   292bc:	ldrb	w9, [x24]
   292c0:	ldr	x11, [x24, #8]
   292c4:	ldr	x1, [x24, #40]
   292c8:	ldrb	w8, [x19]
   292cc:	str	x11, [x19, #8]
   292d0:	ldr	x0, [x19, #40]
   292d4:	bfxil	w8, w9, #0, #4
   292d8:	strb	w8, [x19]
   292dc:	ldr	x8, [x24, #16]
   292e0:	stp	x8, x10, [x19, #16]
   292e4:	ldr	x8, [x24, #24]
   292e8:	lsl	x2, x8, #3
   292ec:	bl	63c0 <memcpy@plt>
   292f0:	str	x26, [x19, #8]
   292f4:	mov	x0, x20
   292f8:	mov	w1, w21
   292fc:	mov	x2, xzr
   29300:	mov	x3, xzr
   29304:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   29308:	add	sp, sp, #0x250
   2930c:	ldp	x20, x19, [sp, #80]
   29310:	ldp	x22, x21, [sp, #64]
   29314:	ldp	x24, x23, [sp, #48]
   29318:	ldp	x26, x25, [sp, #32]
   2931c:	ldp	x28, x27, [sp, #16]
   29320:	ldp	x29, x30, [sp], #96
   29324:	ret
   29328:	neg	x2, x2
   2932c:	add	x0, sp, #0x10
   29330:	mov	x1, x25
   29334:	mov	x3, x22
   29338:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   2933c:	add	x25, sp, #0x10
   29340:	cbz	w0, 290dc <PyInit__decimal@@Base+0x22628>
   29344:	ldr	x8, [x24, #24]
   29348:	ldr	x28, [x25, #24]
   2934c:	cmp	x24, x20
   29350:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
   29354:	sub	x9, x8, x28
   29358:	add	x26, x9, #0x1
   2935c:	b.ne	29368 <PyInit__decimal@@Base+0x228b4>  // b.any
   29360:	cmp	x26, x8
   29364:	b.lt	2941c <PyInit__decimal@@Base+0x22968>  // b.tstop
   29368:	cmp	x25, x20
   2936c:	b.ne	29378 <PyInit__decimal@@Base+0x228c4>  // b.any
   29370:	cmp	x26, x28
   29374:	b.lt	2941c <PyInit__decimal@@Base+0x22968>  // b.tstop
   29378:	ldr	x9, [x12, #1344]
   2937c:	ldr	x8, [x20, #32]
   29380:	cmp	x9, x26
   29384:	csel	x1, x26, x9, lt  // lt = tstop
   29388:	cmp	x1, x8
   2938c:	b.eq	2941c <PyInit__decimal@@Base+0x22968>  // b.none
   29390:	ldrb	w9, [x20]
   29394:	tbnz	w9, #5, 293fc <PyInit__decimal@@Base+0x22948>
   29398:	mov	x0, x20
   2939c:	mov	x2, x22
   293a0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   293a4:	b	29410 <PyInit__decimal@@Base+0x2295c>
   293a8:	cmp	x8, x13
   293ac:	b.le	293d4 <PyInit__decimal@@Base+0x22920>
   293b0:	mov	x0, x19
   293b4:	mov	x1, x8
   293b8:	mov	x2, x22
   293bc:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   293c0:	cbz	w0, 290dc <PyInit__decimal@@Base+0x22628>
   293c4:	ldp	x12, x10, [x24, #16]
   293c8:	ldrb	w9, [x24]
   293cc:	ldr	x11, [x24, #8]
   293d0:	ldr	x1, [x24, #40]
   293d4:	ldrb	w8, [x19]
   293d8:	stp	x11, x12, [x19, #8]
   293dc:	str	x10, [x19, #24]
   293e0:	ldr	x0, [x19, #40]
   293e4:	bfxil	w8, w9, #0, #4
   293e8:	strb	w8, [x19]
   293ec:	ldr	x8, [x24, #24]
   293f0:	lsl	x2, x8, #3
   293f4:	bl	63c0 <memcpy@plt>
   293f8:	b	292f4 <PyInit__decimal@@Base+0x22840>
   293fc:	cmp	x1, x8
   29400:	b.le	2941c <PyInit__decimal@@Base+0x22968>
   29404:	mov	x0, x20
   29408:	mov	x2, x22
   2940c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   29410:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
   29414:	cbz	w0, 290dc <PyInit__decimal@@Base+0x22628>
   29418:	ldr	x28, [x25, #24]
   2941c:	cmp	x24, x19
   29420:	b.ne	29434 <PyInit__decimal@@Base+0x22980>  // b.any
   29424:	ldr	x8, [x24, #24]
   29428:	mov	x5, x28
   2942c:	cmp	x28, x8
   29430:	b.lt	29494 <PyInit__decimal@@Base+0x229e0>  // b.tstop
   29434:	ldr	x9, [x12, #1344]
   29438:	ldr	x8, [x19, #32]
   2943c:	mov	x5, x28
   29440:	cmp	x9, x28
   29444:	csel	x1, x28, x9, lt  // lt = tstop
   29448:	cmp	x1, x8
   2944c:	b.eq	29494 <PyInit__decimal@@Base+0x229e0>  // b.none
   29450:	ldrb	w9, [x19]
   29454:	tbnz	w9, #5, 29470 <PyInit__decimal@@Base+0x229bc>
   29458:	mov	x0, x19
   2945c:	mov	x2, x22
   29460:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   29464:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
   29468:	cbnz	w0, 29490 <PyInit__decimal@@Base+0x229dc>
   2946c:	b	290dc <PyInit__decimal@@Base+0x22628>
   29470:	cmp	x1, x8
   29474:	mov	x5, x28
   29478:	b.le	29494 <PyInit__decimal@@Base+0x229e0>
   2947c:	mov	x0, x19
   29480:	mov	x2, x22
   29484:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   29488:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
   2948c:	cbz	w0, 290dc <PyInit__decimal@@Base+0x22628>
   29490:	ldr	x5, [x25, #24]
   29494:	cmp	x5, #0x1
   29498:	b.ne	294d4 <PyInit__decimal@@Base+0x22a20>  // b.any
   2949c:	ldr	x2, [x24, #24]
   294a0:	ldr	x0, [x20, #40]
   294a4:	cmp	x2, #0x1
   294a8:	b.ne	2950c <PyInit__decimal@@Base+0x22a58>  // b.any
   294ac:	ldr	x8, [x24, #40]
   294b0:	ldr	x9, [x25, #40]
   294b4:	ldr	x10, [x19, #40]
   294b8:	ldr	x8, [x8]
   294bc:	ldr	x9, [x9]
   294c0:	udiv	x11, x8, x9
   294c4:	msub	x8, x11, x9, x8
   294c8:	str	x11, [x0]
   294cc:	str	x8, [x10]
   294d0:	b	29528 <PyInit__decimal@@Base+0x22a74>
   294d4:	cmp	x5, #0x400
   294d8:	b.gt	29590 <PyInit__decimal@@Base+0x22adc>
   294dc:	ldr	x0, [x20, #40]
   294e0:	ldr	x1, [x19, #40]
   294e4:	ldr	x2, [x24, #40]
   294e8:	ldr	x3, [x25, #40]
   294ec:	ldr	x4, [x24, #24]
   294f0:	bl	1b728 <PyInit__decimal@@Base+0x14c74>
   294f4:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
   294f8:	cmn	w0, #0x1
   294fc:	b.ne	29528 <PyInit__decimal@@Base+0x22a74>  // b.any
   29500:	ldr	w8, [x22]
   29504:	orr	w8, w8, #0x200
   29508:	b	290d8 <PyInit__decimal@@Base+0x22624>
   2950c:	ldr	x8, [x25, #40]
   29510:	ldr	x1, [x24, #40]
   29514:	ldr	x3, [x8]
   29518:	bl	1b690 <PyInit__decimal@@Base+0x14bdc>
   2951c:	ldr	x8, [x19, #40]
   29520:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
   29524:	str	x0, [x8]
   29528:	ldr	x8, [x20, #40]
   2952c:	mov	w10, #0x13                  	// #19
   29530:	mul	x10, x26, x10
   29534:	sub	x9, x26, #0x1
   29538:	sub	x10, x10, #0x13
   2953c:	add	x24, x9, #0x1
   29540:	mov	x25, x9
   29544:	cmp	x24, #0x2
   29548:	mov	x26, x10
   2954c:	b.lt	29560 <PyInit__decimal@@Base+0x22aac>  // b.tstop
   29550:	ldr	x11, [x8, x25, lsl #3]
   29554:	sub	x9, x25, #0x1
   29558:	sub	x10, x26, #0x13
   2955c:	cbz	x11, 2953c <PyInit__decimal@@Base+0x22a88>
   29560:	ldr	x9, [x12, #1344]
   29564:	ldr	x8, [x20, #32]
   29568:	cmp	x9, x24
   2956c:	csinc	x1, x9, x25, ge  // ge = tcont
   29570:	cmp	x1, x8
   29574:	b.eq	295e8 <PyInit__decimal@@Base+0x22b34>  // b.none
   29578:	ldrb	w9, [x20]
   2957c:	tbnz	w9, #5, 295d0 <PyInit__decimal@@Base+0x22b1c>
   29580:	mov	x0, x20
   29584:	mov	x2, x22
   29588:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2958c:	b	295e4 <PyInit__decimal@@Base+0x22b30>
   29590:	mov	x0, x20
   29594:	mov	x1, x19
   29598:	mov	x2, x24
   2959c:	mov	x3, x25
   295a0:	mov	x4, x22
   295a4:	bl	359f4 <PyInit__decimal@@Base+0x2ef40>
   295a8:	ldrb	w8, [x20]
   295ac:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
   295b0:	tst	w8, #0xe
   295b4:	b.ne	290dc <PyInit__decimal@@Base+0x22628>  // b.any
   295b8:	ldrb	w8, [x19]
   295bc:	tst	w8, #0xe
   295c0:	b.ne	290dc <PyInit__decimal@@Base+0x22628>  // b.any
   295c4:	ldr	x26, [x20, #24]
   295c8:	ldr	x28, [x19, #24]
   295cc:	b	29528 <PyInit__decimal@@Base+0x22a74>
   295d0:	cmp	x1, x8
   295d4:	b.le	295e8 <PyInit__decimal@@Base+0x22b34>
   295d8:	mov	x0, x20
   295dc:	mov	x2, x22
   295e0:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   295e4:	adrp	x12, 53000 <PyInit__decimal@@Base+0x4c54c>
   295e8:	ldr	x8, [x20, #40]
   295ec:	str	x24, [x20, #24]
   295f0:	adrp	x24, 3f000 <PyInit__decimal@@Base+0x3854c>
   295f4:	add	x24, x24, #0x370
   295f8:	ldr	x8, [x8, x25, lsl #3]
   295fc:	ldr	x25, [x24, #72]
   29600:	cmp	x25, x8
   29604:	b.ls	29630 <PyInit__decimal@@Base+0x22b7c>  // b.plast
   29608:	ldr	x9, [x24, #32]
   2960c:	cmp	x9, x8
   29610:	b.ls	29658 <PyInit__decimal@@Base+0x22ba4>  // b.plast
   29614:	ldr	x9, [x24, #16]
   29618:	cmp	x9, x8
   2961c:	b.ls	2969c <PyInit__decimal@@Base+0x22be8>  // b.plast
   29620:	ldr	x9, [x24, #8]
   29624:	cmp	x9, x8
   29628:	mov	w8, #0x1                   	// #1
   2962c:	b	29700 <PyInit__decimal@@Base+0x22c4c>
   29630:	ldr	x9, [x24, #112]
   29634:	cmp	x9, x8
   29638:	b.ls	29674 <PyInit__decimal@@Base+0x22bc0>  // b.plast
   2963c:	ldr	x9, [x24, #88]
   29640:	cmp	x9, x8
   29644:	b.ls	296ac <PyInit__decimal@@Base+0x22bf8>  // b.plast
   29648:	ldr	x9, [x24, #80]
   2964c:	cmp	x9, x8
   29650:	mov	w8, #0xa                   	// #10
   29654:	b	29700 <PyInit__decimal@@Base+0x22c4c>
   29658:	ldr	x9, [x24, #48]
   2965c:	cmp	x9, x8
   29660:	b.ls	296c8 <PyInit__decimal@@Base+0x22c14>  // b.plast
   29664:	ldr	x9, [x24, #40]
   29668:	cmp	x9, x8
   2966c:	mov	w8, #0x5                   	// #5
   29670:	b	29700 <PyInit__decimal@@Base+0x22c4c>
   29674:	ldr	x9, [x24, #144]
   29678:	cmp	x9, x8
   2967c:	b.ls	296e4 <PyInit__decimal@@Base+0x22c30>  // b.plast
   29680:	ldr	x9, [x24, #128]
   29684:	cmp	x9, x8
   29688:	b.ls	296f4 <PyInit__decimal@@Base+0x22c40>  // b.plast
   2968c:	ldr	x9, [x24, #120]
   29690:	cmp	x9, x8
   29694:	mov	w8, #0xf                   	// #15
   29698:	b	29700 <PyInit__decimal@@Base+0x22c4c>
   2969c:	ldr	x9, [x24, #24]
   296a0:	cmp	x9, x8
   296a4:	mov	w8, #0x3                   	// #3
   296a8:	b	29700 <PyInit__decimal@@Base+0x22c4c>
   296ac:	ldr	x9, [x24, #104]
   296b0:	cmp	x9, x8
   296b4:	b.ls	29850 <PyInit__decimal@@Base+0x22d9c>  // b.plast
   296b8:	ldr	x9, [x24, #96]
   296bc:	cmp	x9, x8
   296c0:	mov	w8, #0xc                   	// #12
   296c4:	b	29700 <PyInit__decimal@@Base+0x22c4c>
   296c8:	ldr	x9, [x24, #64]
   296cc:	cmp	x9, x8
   296d0:	b.ls	29858 <PyInit__decimal@@Base+0x22da4>  // b.plast
   296d4:	ldr	x9, [x24, #56]
   296d8:	cmp	x9, x8
   296dc:	mov	w8, #0x7                   	// #7
   296e0:	b	29700 <PyInit__decimal@@Base+0x22c4c>
   296e4:	ldr	x9, [x24, #152]
   296e8:	cmp	x9, x8
   296ec:	mov	w8, #0x13                  	// #19
   296f0:	b	29700 <PyInit__decimal@@Base+0x22c4c>
   296f4:	ldr	x9, [x24, #136]
   296f8:	cmp	x9, x8
   296fc:	mov	w8, #0x11                  	// #17
   29700:	cinc	x8, x8, ls  // ls = plast
   29704:	ldrb	w9, [x20]
   29708:	add	x8, x8, x26
   2970c:	stp	xzr, x8, [x20, #8]
   29710:	and	w9, w9, #0xf0
   29714:	orr	w9, w9, w21
   29718:	strb	w9, [x20]
   2971c:	ldr	x9, [x23]
   29720:	cmp	x8, x9
   29724:	b.gt	290d0 <PyInit__decimal@@Base+0x2261c>
   29728:	ldr	x8, [x19, #40]
   2972c:	mov	w10, #0x13                  	// #19
   29730:	mul	x10, x28, x10
   29734:	sub	x9, x28, #0x1
   29738:	sub	x10, x10, #0x13
   2973c:	add	x23, x9, #0x1
   29740:	mov	x21, x9
   29744:	cmp	x23, #0x2
   29748:	mov	x20, x10
   2974c:	b.lt	29760 <PyInit__decimal@@Base+0x22cac>  // b.tstop
   29750:	ldr	x11, [x8, x21, lsl #3]
   29754:	sub	x9, x21, #0x1
   29758:	sub	x10, x20, #0x13
   2975c:	cbz	x11, 2973c <PyInit__decimal@@Base+0x22c88>
   29760:	ldr	x9, [x12, #1344]
   29764:	ldr	x8, [x19, #32]
   29768:	ldr	x26, [sp, #8]
   2976c:	cmp	x9, x23
   29770:	csinc	x1, x9, x21, ge  // ge = tcont
   29774:	cmp	x1, x8
   29778:	b.eq	297a8 <PyInit__decimal@@Base+0x22cf4>  // b.none
   2977c:	ldrb	w9, [x19]
   29780:	tbnz	w9, #5, 29794 <PyInit__decimal@@Base+0x22ce0>
   29784:	mov	x0, x19
   29788:	mov	x2, x22
   2978c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   29790:	b	297a8 <PyInit__decimal@@Base+0x22cf4>
   29794:	cmp	x1, x8
   29798:	b.le	297a8 <PyInit__decimal@@Base+0x22cf4>
   2979c:	mov	x0, x19
   297a0:	mov	x2, x22
   297a4:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   297a8:	ldr	x8, [x19, #40]
   297ac:	str	x23, [x19, #24]
   297b0:	ldr	x8, [x8, x21, lsl #3]
   297b4:	cmp	x25, x8
   297b8:	b.ls	297e4 <PyInit__decimal@@Base+0x22d30>  // b.plast
   297bc:	ldr	x9, [x24, #32]
   297c0:	cmp	x9, x8
   297c4:	b.ls	2980c <PyInit__decimal@@Base+0x22d58>  // b.plast
   297c8:	ldr	x9, [x24, #16]
   297cc:	cmp	x9, x8
   297d0:	b.ls	29860 <PyInit__decimal@@Base+0x22dac>  // b.plast
   297d4:	ldr	x9, [x24, #8]
   297d8:	cmp	x9, x8
   297dc:	mov	w8, #0x1                   	// #1
   297e0:	b	298c4 <PyInit__decimal@@Base+0x22e10>
   297e4:	ldr	x9, [x24, #112]
   297e8:	cmp	x9, x8
   297ec:	b.ls	29828 <PyInit__decimal@@Base+0x22d74>  // b.plast
   297f0:	ldr	x9, [x24, #88]
   297f4:	cmp	x9, x8
   297f8:	b.ls	29870 <PyInit__decimal@@Base+0x22dbc>  // b.plast
   297fc:	ldr	x9, [x24, #80]
   29800:	cmp	x9, x8
   29804:	mov	w8, #0xa                   	// #10
   29808:	b	298c4 <PyInit__decimal@@Base+0x22e10>
   2980c:	ldr	x9, [x24, #48]
   29810:	cmp	x9, x8
   29814:	b.ls	2988c <PyInit__decimal@@Base+0x22dd8>  // b.plast
   29818:	ldr	x9, [x24, #40]
   2981c:	cmp	x9, x8
   29820:	mov	w8, #0x5                   	// #5
   29824:	b	298c4 <PyInit__decimal@@Base+0x22e10>
   29828:	ldr	x9, [x24, #144]
   2982c:	cmp	x9, x8
   29830:	b.ls	298a8 <PyInit__decimal@@Base+0x22df4>  // b.plast
   29834:	ldr	x9, [x24, #128]
   29838:	cmp	x9, x8
   2983c:	b.ls	298b8 <PyInit__decimal@@Base+0x22e04>  // b.plast
   29840:	ldr	x9, [x24, #120]
   29844:	cmp	x9, x8
   29848:	mov	w8, #0xf                   	// #15
   2984c:	b	298c4 <PyInit__decimal@@Base+0x22e10>
   29850:	mov	w8, #0xe                   	// #14
   29854:	b	29704 <PyInit__decimal@@Base+0x22c50>
   29858:	mov	w8, #0x9                   	// #9
   2985c:	b	29704 <PyInit__decimal@@Base+0x22c50>
   29860:	ldr	x9, [x24, #24]
   29864:	cmp	x9, x8
   29868:	mov	w8, #0x3                   	// #3
   2986c:	b	298c4 <PyInit__decimal@@Base+0x22e10>
   29870:	ldr	x9, [x24, #104]
   29874:	cmp	x9, x8
   29878:	b.ls	298e4 <PyInit__decimal@@Base+0x22e30>  // b.plast
   2987c:	ldr	x9, [x24, #96]
   29880:	cmp	x9, x8
   29884:	mov	w8, #0xc                   	// #12
   29888:	b	298c4 <PyInit__decimal@@Base+0x22e10>
   2988c:	ldr	x9, [x24, #64]
   29890:	cmp	x9, x8
   29894:	b.ls	298ec <PyInit__decimal@@Base+0x22e38>  // b.plast
   29898:	ldr	x9, [x24, #56]
   2989c:	cmp	x9, x8
   298a0:	mov	w8, #0x7                   	// #7
   298a4:	b	298c4 <PyInit__decimal@@Base+0x22e10>
   298a8:	ldr	x9, [x24, #152]
   298ac:	cmp	x9, x8
   298b0:	mov	w8, #0x13                  	// #19
   298b4:	b	298c4 <PyInit__decimal@@Base+0x22e10>
   298b8:	ldr	x9, [x24, #136]
   298bc:	cmp	x9, x8
   298c0:	mov	w8, #0x11                  	// #17
   298c4:	cinc	x8, x8, ls  // ls = plast
   298c8:	ldrb	w9, [x19]
   298cc:	add	x8, x8, x20
   298d0:	stp	x26, x8, [x19, #8]
   298d4:	and	w9, w9, #0xf0
   298d8:	orr	w9, w9, w27
   298dc:	strb	w9, [x19]
   298e0:	b	29194 <PyInit__decimal@@Base+0x226e0>
   298e4:	mov	w8, #0xe                   	// #14
   298e8:	b	298c8 <PyInit__decimal@@Base+0x22e14>
   298ec:	mov	w8, #0x9                   	// #9
   298f0:	b	298c8 <PyInit__decimal@@Base+0x22e14>
   298f4:	stp	x29, x30, [sp, #-80]!
   298f8:	str	x28, [sp, #16]
   298fc:	stp	x24, x23, [sp, #32]
   29900:	stp	x22, x21, [sp, #48]
   29904:	stp	x20, x19, [sp, #64]
   29908:	mov	x29, sp
   2990c:	sub	sp, sp, #0x230
   29910:	mov	w8, #0x30                  	// #48
   29914:	mov	w9, #0x40                  	// #64
   29918:	add	x10, sp, #0x30
   2991c:	stp	xzr, xzr, [sp, #8]
   29920:	strb	w8, [sp]
   29924:	stp	xzr, x9, [sp, #24]
   29928:	str	x10, [sp, #40]
   2992c:	ldrb	w8, [x1]
   29930:	ldrb	w9, [x2]
   29934:	mov	x20, x4
   29938:	mov	x22, x3
   2993c:	mov	x23, x2
   29940:	eor	w10, w9, w8
   29944:	orr	w8, w8, w9
   29948:	mov	x24, x1
   2994c:	mov	x19, x0
   29950:	tst	w8, #0xe
   29954:	and	w21, w10, #0x1
   29958:	b.eq	299a0 <PyInit__decimal@@Base+0x22eec>  // b.none
   2995c:	mov	x0, x19
   29960:	mov	x1, x24
   29964:	mov	x2, x23
   29968:	mov	x3, x22
   2996c:	mov	x4, x20
   29970:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   29974:	cbnz	w0, 29bc8 <PyInit__decimal@@Base+0x23114>
   29978:	ldrb	w8, [x24]
   2997c:	ldrb	w9, [x23]
   29980:	tbnz	w8, #1, 29a98 <PyInit__decimal@@Base+0x22fe4>
   29984:	tbz	w9, #1, 29be4 <PyInit__decimal@@Base+0x23130>
   29988:	mov	x0, x19
   2998c:	mov	w1, w21
   29990:	mov	x2, xzr
   29994:	mov	x3, xzr
   29998:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2999c:	b	29bc8 <PyInit__decimal@@Base+0x23114>
   299a0:	ldr	x8, [x23, #40]
   299a4:	ldr	x9, [x23, #24]
   299a8:	add	x8, x8, x9, lsl #3
   299ac:	ldur	x8, [x8, #-8]
   299b0:	cbz	x8, 29a18 <PyInit__decimal@@Base+0x22f64>
   299b4:	mov	x1, sp
   299b8:	mov	x0, x19
   299bc:	mov	x2, x24
   299c0:	mov	x3, x23
   299c4:	mov	x4, x22
   299c8:	mov	x5, x20
   299cc:	bl	29024 <PyInit__decimal@@Base+0x22570>
   299d0:	ldrb	w8, [sp]
   299d4:	cmp	w8, #0x1f
   299d8:	b.hi	299f0 <PyInit__decimal@@Base+0x22f3c>  // b.pmore
   299dc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   299e0:	ldr	x8, [x8, #1376]
   299e4:	ldr	x0, [sp, #40]
   299e8:	blr	x8
   299ec:	ldrb	w8, [sp]
   299f0:	tbnz	w8, #4, 29a04 <PyInit__decimal@@Base+0x22f50>
   299f4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   299f8:	ldr	x8, [x8, #1376]
   299fc:	mov	x0, sp
   29a00:	blr	x8
   29a04:	mov	x0, x19
   29a08:	mov	x1, x22
   29a0c:	mov	x2, x20
   29a10:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   29a14:	b	29bc8 <PyInit__decimal@@Base+0x23114>
   29a18:	ldr	x8, [x24, #40]
   29a1c:	ldr	x9, [x24, #24]
   29a20:	add	x8, x8, x9, lsl #3
   29a24:	ldur	x9, [x8, #-8]
   29a28:	ldrb	w8, [x19]
   29a2c:	cbz	x9, 29b64 <PyInit__decimal@@Base+0x230b0>
   29a30:	tbnz	w8, #5, 29a74 <PyInit__decimal@@Base+0x22fc0>
   29a34:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   29a38:	ldr	x9, [x19, #32]
   29a3c:	ldr	x1, [x22, #1344]
   29a40:	cmp	x9, x1
   29a44:	b.le	29a74 <PyInit__decimal@@Base+0x22fc0>
   29a48:	strb	wzr, [x29, #28]
   29a4c:	ldr	x0, [x19, #40]
   29a50:	add	x3, x29, #0x1c
   29a54:	mov	w2, #0x8                   	// #8
   29a58:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   29a5c:	str	x0, [x19, #40]
   29a60:	ldrb	w8, [x29, #28]
   29a64:	cbnz	w8, 29a70 <PyInit__decimal@@Base+0x22fbc>
   29a68:	ldr	x8, [x22, #1344]
   29a6c:	str	x8, [x19, #32]
   29a70:	ldrb	w8, [x19]
   29a74:	and	w8, w8, #0xf0
   29a78:	orr	w8, w21, w8
   29a7c:	orr	w8, w8, #0x2
   29a80:	stp	xzr, xzr, [x19, #16]
   29a84:	strb	w8, [x19]
   29a88:	str	xzr, [x19, #8]
   29a8c:	ldr	w8, [x20]
   29a90:	orr	w8, w8, #0x4
   29a94:	b	29bc4 <PyInit__decimal@@Base+0x23110>
   29a98:	ldrb	w8, [x19]
   29a9c:	tbnz	w9, #1, 29b00 <PyInit__decimal@@Base+0x2304c>
   29aa0:	tbnz	w8, #5, 29ae4 <PyInit__decimal@@Base+0x23030>
   29aa4:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   29aa8:	ldr	x9, [x19, #32]
   29aac:	ldr	x1, [x20, #1344]
   29ab0:	cmp	x9, x1
   29ab4:	b.le	29ae4 <PyInit__decimal@@Base+0x23030>
   29ab8:	strb	wzr, [x29, #28]
   29abc:	ldr	x0, [x19, #40]
   29ac0:	add	x3, x29, #0x1c
   29ac4:	mov	w2, #0x8                   	// #8
   29ac8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   29acc:	str	x0, [x19, #40]
   29ad0:	ldrb	w8, [x29, #28]
   29ad4:	cbnz	w8, 29ae0 <PyInit__decimal@@Base+0x2302c>
   29ad8:	ldr	x8, [x20, #1344]
   29adc:	str	x8, [x19, #32]
   29ae0:	ldrb	w8, [x19]
   29ae4:	and	w8, w8, #0xf0
   29ae8:	orr	w8, w21, w8
   29aec:	orr	w8, w8, #0x2
   29af0:	stp	xzr, xzr, [x19, #16]
   29af4:	strb	w8, [x19]
   29af8:	str	xzr, [x19, #8]
   29afc:	b	29bc8 <PyInit__decimal@@Base+0x23114>
   29b00:	tbnz	w8, #5, 29b44 <PyInit__decimal@@Base+0x23090>
   29b04:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   29b08:	ldr	x9, [x19, #32]
   29b0c:	ldr	x1, [x21, #1344]
   29b10:	cmp	x9, x1
   29b14:	b.le	29b44 <PyInit__decimal@@Base+0x23090>
   29b18:	strb	wzr, [x29, #28]
   29b1c:	ldr	x0, [x19, #40]
   29b20:	add	x3, x29, #0x1c
   29b24:	mov	w2, #0x8                   	// #8
   29b28:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   29b2c:	str	x0, [x19, #40]
   29b30:	ldrb	w8, [x29, #28]
   29b34:	cbnz	w8, 29b40 <PyInit__decimal@@Base+0x2308c>
   29b38:	ldr	x8, [x21, #1344]
   29b3c:	str	x8, [x19, #32]
   29b40:	ldrb	w8, [x19]
   29b44:	and	w8, w8, #0xf0
   29b48:	orr	w8, w8, #0x4
   29b4c:	stp	xzr, xzr, [x19, #16]
   29b50:	strb	w8, [x19]
   29b54:	str	xzr, [x19, #8]
   29b58:	ldr	w8, [x20]
   29b5c:	orr	w8, w8, #0x100
   29b60:	b	29bc4 <PyInit__decimal@@Base+0x23110>
   29b64:	tbnz	w8, #5, 29ba8 <PyInit__decimal@@Base+0x230f4>
   29b68:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   29b6c:	ldr	x9, [x19, #32]
   29b70:	ldr	x1, [x21, #1344]
   29b74:	cmp	x9, x1
   29b78:	b.le	29ba8 <PyInit__decimal@@Base+0x230f4>
   29b7c:	strb	wzr, [x29, #28]
   29b80:	ldr	x0, [x19, #40]
   29b84:	add	x3, x29, #0x1c
   29b88:	mov	w2, #0x8                   	// #8
   29b8c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   29b90:	str	x0, [x19, #40]
   29b94:	ldrb	w8, [x29, #28]
   29b98:	cbnz	w8, 29ba4 <PyInit__decimal@@Base+0x230f0>
   29b9c:	ldr	x8, [x21, #1344]
   29ba0:	str	x8, [x19, #32]
   29ba4:	ldrb	w8, [x19]
   29ba8:	and	w8, w8, #0xf0
   29bac:	orr	w8, w8, #0x4
   29bb0:	stp	xzr, xzr, [x19, #16]
   29bb4:	strb	w8, [x19]
   29bb8:	str	xzr, [x19, #8]
   29bbc:	ldr	w8, [x20]
   29bc0:	orr	w8, w8, #0x10
   29bc4:	str	w8, [x20]
   29bc8:	add	sp, sp, #0x230
   29bcc:	ldp	x20, x19, [sp, #64]
   29bd0:	ldp	x22, x21, [sp, #48]
   29bd4:	ldp	x24, x23, [sp, #32]
   29bd8:	ldr	x28, [sp, #16]
   29bdc:	ldp	x29, x30, [sp], #80
   29be0:	ret
   29be4:	bl	6700 <abort@plt>
   29be8:	stp	x29, x30, [sp, #-64]!
   29bec:	stp	x28, x23, [sp, #16]
   29bf0:	stp	x22, x21, [sp, #32]
   29bf4:	stp	x20, x19, [sp, #48]
   29bf8:	mov	x29, sp
   29bfc:	sub	sp, sp, #0x260
   29c00:	mov	x23, x0
   29c04:	mov	w8, #0x30                  	// #48
   29c08:	mov	w9, #0x40                  	// #64
   29c0c:	add	x10, sp, #0x30
   29c10:	sub	x0, x29, #0x30
   29c14:	mov	x19, x4
   29c18:	mov	x20, x3
   29c1c:	mov	x21, x2
   29c20:	mov	x22, x1
   29c24:	stp	xzr, xzr, [sp, #8]
   29c28:	strb	w8, [sp]
   29c2c:	stp	xzr, x9, [sp, #24]
   29c30:	str	x10, [sp, #40]
   29c34:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   29c38:	mov	x0, sp
   29c3c:	sub	x2, x29, #0x30
   29c40:	mov	x1, x21
   29c44:	mov	x3, x19
   29c48:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   29c4c:	mov	x3, sp
   29c50:	mov	w0, #0x1                   	// #1
   29c54:	mov	x1, x23
   29c58:	mov	x2, x22
   29c5c:	mov	x4, x20
   29c60:	mov	x5, x19
   29c64:	bl	281c4 <PyInit__decimal@@Base+0x21710>
   29c68:	ldrb	w8, [sp]
   29c6c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   29c70:	cmp	w8, #0x1f
   29c74:	b.hi	29c88 <PyInit__decimal@@Base+0x231d4>  // b.pmore
   29c78:	ldr	x8, [x19, #1376]
   29c7c:	ldr	x0, [sp, #40]
   29c80:	blr	x8
   29c84:	ldrb	w8, [sp]
   29c88:	tbnz	w8, #4, 29c98 <PyInit__decimal@@Base+0x231e4>
   29c8c:	ldr	x8, [x19, #1376]
   29c90:	mov	x0, sp
   29c94:	blr	x8
   29c98:	add	sp, sp, #0x260
   29c9c:	ldp	x20, x19, [sp, #48]
   29ca0:	ldp	x22, x21, [sp, #32]
   29ca4:	ldp	x28, x23, [sp, #16]
   29ca8:	ldp	x29, x30, [sp], #64
   29cac:	ret
   29cb0:	stp	x29, x30, [sp, #-64]!
   29cb4:	stp	x28, x23, [sp, #16]
   29cb8:	stp	x22, x21, [sp, #32]
   29cbc:	stp	x20, x19, [sp, #48]
   29cc0:	mov	x29, sp
   29cc4:	sub	sp, sp, #0x260
   29cc8:	mov	x23, x0
   29ccc:	mov	w8, #0x30                  	// #48
   29cd0:	mov	w9, #0x40                  	// #64
   29cd4:	add	x10, sp, #0x30
   29cd8:	sub	x0, x29, #0x30
   29cdc:	mov	x19, x4
   29ce0:	mov	x20, x3
   29ce4:	mov	x21, x2
   29ce8:	mov	x22, x1
   29cec:	stp	xzr, xzr, [sp, #8]
   29cf0:	strb	w8, [sp]
   29cf4:	stp	xzr, x9, [sp, #24]
   29cf8:	str	x10, [sp, #40]
   29cfc:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   29d00:	mov	x0, sp
   29d04:	sub	x2, x29, #0x30
   29d08:	mov	x1, x21
   29d0c:	mov	x3, x19
   29d10:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   29d14:	mov	x3, sp
   29d18:	mov	w0, #0x1                   	// #1
   29d1c:	mov	x1, x23
   29d20:	mov	x2, x22
   29d24:	mov	x4, x20
   29d28:	mov	x5, x19
   29d2c:	bl	281c4 <PyInit__decimal@@Base+0x21710>
   29d30:	ldrb	w8, [sp]
   29d34:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   29d38:	cmp	w8, #0x1f
   29d3c:	b.hi	29d50 <PyInit__decimal@@Base+0x2329c>  // b.pmore
   29d40:	ldr	x8, [x19, #1376]
   29d44:	ldr	x0, [sp, #40]
   29d48:	blr	x8
   29d4c:	ldrb	w8, [sp]
   29d50:	tbnz	w8, #4, 29d60 <PyInit__decimal@@Base+0x232ac>
   29d54:	ldr	x8, [x19, #1376]
   29d58:	mov	x0, sp
   29d5c:	blr	x8
   29d60:	add	sp, sp, #0x260
   29d64:	ldp	x20, x19, [sp, #48]
   29d68:	ldp	x22, x21, [sp, #32]
   29d6c:	ldp	x28, x23, [sp, #16]
   29d70:	ldp	x29, x30, [sp], #64
   29d74:	ret
   29d78:	stp	x29, x30, [sp, #-64]!
   29d7c:	stp	x28, x23, [sp, #16]
   29d80:	stp	x22, x21, [sp, #32]
   29d84:	stp	x20, x19, [sp, #48]
   29d88:	mov	x29, sp
   29d8c:	sub	sp, sp, #0x260
   29d90:	mov	x22, x0
   29d94:	mov	w8, #0x30                  	// #48
   29d98:	mov	w9, #0x40                  	// #64
   29d9c:	add	x10, sp, #0x30
   29da0:	sub	x0, x29, #0x30
   29da4:	mov	x19, x4
   29da8:	mov	x20, x3
   29dac:	mov	x21, x1
   29db0:	sxtw	x23, w2
   29db4:	stp	xzr, xzr, [sp, #8]
   29db8:	strb	w8, [sp]
   29dbc:	stp	xzr, x9, [sp, #24]
   29dc0:	str	x10, [sp, #40]
   29dc4:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   29dc8:	mov	x0, sp
   29dcc:	sub	x2, x29, #0x30
   29dd0:	mov	x1, x23
   29dd4:	mov	x3, x19
   29dd8:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   29ddc:	mov	x3, sp
   29de0:	mov	w0, #0x1                   	// #1
   29de4:	mov	x1, x22
   29de8:	mov	x2, x21
   29dec:	mov	x4, x20
   29df0:	mov	x5, x19
   29df4:	bl	281c4 <PyInit__decimal@@Base+0x21710>
   29df8:	ldrb	w8, [sp]
   29dfc:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   29e00:	cmp	w8, #0x1f
   29e04:	b.hi	29e18 <PyInit__decimal@@Base+0x23364>  // b.pmore
   29e08:	ldr	x8, [x19, #1376]
   29e0c:	ldr	x0, [sp, #40]
   29e10:	blr	x8
   29e14:	ldrb	w8, [sp]
   29e18:	tbnz	w8, #4, 29e28 <PyInit__decimal@@Base+0x23374>
   29e1c:	ldr	x8, [x19, #1376]
   29e20:	mov	x0, sp
   29e24:	blr	x8
   29e28:	add	sp, sp, #0x260
   29e2c:	ldp	x20, x19, [sp, #48]
   29e30:	ldp	x22, x21, [sp, #32]
   29e34:	ldp	x28, x23, [sp, #16]
   29e38:	ldp	x29, x30, [sp], #64
   29e3c:	ret
   29e40:	stp	x29, x30, [sp, #-64]!
   29e44:	stp	x28, x23, [sp, #16]
   29e48:	stp	x22, x21, [sp, #32]
   29e4c:	stp	x20, x19, [sp, #48]
   29e50:	mov	x29, sp
   29e54:	sub	sp, sp, #0x260
   29e58:	mov	x22, x0
   29e5c:	mov	w8, #0x30                  	// #48
   29e60:	mov	w9, #0x40                  	// #64
   29e64:	add	x10, sp, #0x30
   29e68:	sub	x0, x29, #0x30
   29e6c:	mov	x19, x4
   29e70:	mov	x20, x3
   29e74:	mov	x21, x1
   29e78:	mov	w23, w2
   29e7c:	stp	xzr, xzr, [sp, #8]
   29e80:	strb	w8, [sp]
   29e84:	stp	xzr, x9, [sp, #24]
   29e88:	str	x10, [sp, #40]
   29e8c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   29e90:	mov	x0, sp
   29e94:	sub	x2, x29, #0x30
   29e98:	mov	x1, x23
   29e9c:	mov	x3, x19
   29ea0:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   29ea4:	mov	x3, sp
   29ea8:	mov	w0, #0x1                   	// #1
   29eac:	mov	x1, x22
   29eb0:	mov	x2, x21
   29eb4:	mov	x4, x20
   29eb8:	mov	x5, x19
   29ebc:	bl	281c4 <PyInit__decimal@@Base+0x21710>
   29ec0:	ldrb	w8, [sp]
   29ec4:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   29ec8:	cmp	w8, #0x1f
   29ecc:	b.hi	29ee0 <PyInit__decimal@@Base+0x2342c>  // b.pmore
   29ed0:	ldr	x8, [x19, #1376]
   29ed4:	ldr	x0, [sp, #40]
   29ed8:	blr	x8
   29edc:	ldrb	w8, [sp]
   29ee0:	tbnz	w8, #4, 29ef0 <PyInit__decimal@@Base+0x2343c>
   29ee4:	ldr	x8, [x19, #1376]
   29ee8:	mov	x0, sp
   29eec:	blr	x8
   29ef0:	add	sp, sp, #0x260
   29ef4:	ldp	x20, x19, [sp, #48]
   29ef8:	ldp	x22, x21, [sp, #32]
   29efc:	ldp	x28, x23, [sp, #16]
   29f00:	ldp	x29, x30, [sp], #64
   29f04:	ret
   29f08:	stp	x29, x30, [sp, #-64]!
   29f0c:	stp	x28, x23, [sp, #16]
   29f10:	stp	x22, x21, [sp, #32]
   29f14:	stp	x20, x19, [sp, #48]
   29f18:	mov	x29, sp
   29f1c:	sub	sp, sp, #0x260
   29f20:	mov	x23, x0
   29f24:	mov	w8, #0x30                  	// #48
   29f28:	mov	w9, #0x40                  	// #64
   29f2c:	add	x10, sp, #0x30
   29f30:	sub	x0, x29, #0x30
   29f34:	mov	x19, x4
   29f38:	mov	x20, x3
   29f3c:	mov	x21, x2
   29f40:	mov	x22, x1
   29f44:	stp	xzr, xzr, [sp, #8]
   29f48:	strb	w8, [sp]
   29f4c:	stp	xzr, x9, [sp, #24]
   29f50:	str	x10, [sp, #40]
   29f54:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   29f58:	mov	x0, sp
   29f5c:	sub	x2, x29, #0x30
   29f60:	mov	x1, x21
   29f64:	mov	x3, x19
   29f68:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   29f6c:	mov	x3, sp
   29f70:	mov	w0, #0x1                   	// #1
   29f74:	mov	x1, x23
   29f78:	mov	x2, x22
   29f7c:	mov	x4, x20
   29f80:	mov	x5, x19
   29f84:	bl	281c4 <PyInit__decimal@@Base+0x21710>
   29f88:	ldrb	w8, [sp]
   29f8c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   29f90:	cmp	w8, #0x1f
   29f94:	b.hi	29fa8 <PyInit__decimal@@Base+0x234f4>  // b.pmore
   29f98:	ldr	x8, [x19, #1376]
   29f9c:	ldr	x0, [sp, #40]
   29fa0:	blr	x8
   29fa4:	ldrb	w8, [sp]
   29fa8:	tbnz	w8, #4, 29fb8 <PyInit__decimal@@Base+0x23504>
   29fac:	ldr	x8, [x19, #1376]
   29fb0:	mov	x0, sp
   29fb4:	blr	x8
   29fb8:	add	sp, sp, #0x260
   29fbc:	ldp	x20, x19, [sp, #48]
   29fc0:	ldp	x22, x21, [sp, #32]
   29fc4:	ldp	x28, x23, [sp, #16]
   29fc8:	ldp	x29, x30, [sp], #64
   29fcc:	ret
   29fd0:	stp	x29, x30, [sp, #-64]!
   29fd4:	stp	x28, x23, [sp, #16]
   29fd8:	stp	x22, x21, [sp, #32]
   29fdc:	stp	x20, x19, [sp, #48]
   29fe0:	mov	x29, sp
   29fe4:	sub	sp, sp, #0x260
   29fe8:	mov	x23, x0
   29fec:	mov	w8, #0x30                  	// #48
   29ff0:	mov	w9, #0x40                  	// #64
   29ff4:	add	x10, sp, #0x30
   29ff8:	sub	x0, x29, #0x30
   29ffc:	mov	x19, x4
   2a000:	mov	x20, x3
   2a004:	mov	x21, x2
   2a008:	mov	x22, x1
   2a00c:	stp	xzr, xzr, [sp, #8]
   2a010:	strb	w8, [sp]
   2a014:	stp	xzr, x9, [sp, #24]
   2a018:	str	x10, [sp, #40]
   2a01c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2a020:	mov	x0, sp
   2a024:	sub	x2, x29, #0x30
   2a028:	mov	x1, x21
   2a02c:	mov	x3, x19
   2a030:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   2a034:	mov	x3, sp
   2a038:	mov	w0, #0x1                   	// #1
   2a03c:	mov	x1, x23
   2a040:	mov	x2, x22
   2a044:	mov	x4, x20
   2a048:	mov	x5, x19
   2a04c:	bl	281c4 <PyInit__decimal@@Base+0x21710>
   2a050:	ldrb	w8, [sp]
   2a054:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2a058:	cmp	w8, #0x1f
   2a05c:	b.hi	2a070 <PyInit__decimal@@Base+0x235bc>  // b.pmore
   2a060:	ldr	x8, [x19, #1376]
   2a064:	ldr	x0, [sp, #40]
   2a068:	blr	x8
   2a06c:	ldrb	w8, [sp]
   2a070:	tbnz	w8, #4, 2a080 <PyInit__decimal@@Base+0x235cc>
   2a074:	ldr	x8, [x19, #1376]
   2a078:	mov	x0, sp
   2a07c:	blr	x8
   2a080:	add	sp, sp, #0x260
   2a084:	ldp	x20, x19, [sp, #48]
   2a088:	ldp	x22, x21, [sp, #32]
   2a08c:	ldp	x28, x23, [sp, #16]
   2a090:	ldp	x29, x30, [sp], #64
   2a094:	ret
   2a098:	stp	x29, x30, [sp, #-96]!
   2a09c:	stp	x28, x27, [sp, #16]
   2a0a0:	stp	x26, x25, [sp, #32]
   2a0a4:	stp	x24, x23, [sp, #48]
   2a0a8:	stp	x22, x21, [sp, #64]
   2a0ac:	stp	x20, x19, [sp, #80]
   2a0b0:	mov	x29, sp
   2a0b4:	sub	sp, sp, #0x930
   2a0b8:	ldrb	w10, [x1]
   2a0bc:	mov	x20, x3
   2a0c0:	mov	x22, x2
   2a0c4:	mov	x21, x1
   2a0c8:	tst	w10, #0xe
   2a0cc:	mov	x19, x0
   2a0d0:	b.eq	2a154 <PyInit__decimal@@Base+0x236a0>  // b.none
   2a0d4:	mov	x0, x19
   2a0d8:	mov	x1, x21
   2a0dc:	mov	x2, x22
   2a0e0:	mov	x3, x20
   2a0e4:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   2a0e8:	cbnz	w0, 2a70c <PyInit__decimal@@Base+0x23c58>
   2a0ec:	ldrb	w8, [x21]
   2a0f0:	tbnz	w8, #0, 2a268 <PyInit__decimal@@Base+0x237b4>
   2a0f4:	ldrb	w8, [x19]
   2a0f8:	tbnz	w8, #5, 2a13c <PyInit__decimal@@Base+0x23688>
   2a0fc:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   2a100:	ldr	x9, [x19, #32]
   2a104:	ldr	x1, [x20, #1344]
   2a108:	cmp	x9, x1
   2a10c:	b.le	2a13c <PyInit__decimal@@Base+0x23688>
   2a110:	strb	wzr, [sp, #1760]
   2a114:	ldr	x0, [x19, #40]
   2a118:	add	x3, sp, #0x6e0
   2a11c:	mov	w2, #0x8                   	// #8
   2a120:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2a124:	str	x0, [x19, #40]
   2a128:	ldrb	w8, [sp, #1760]
   2a12c:	cbnz	w8, 2a138 <PyInit__decimal@@Base+0x23684>
   2a130:	ldr	x8, [x20, #1344]
   2a134:	str	x8, [x19, #32]
   2a138:	ldrb	w8, [x19]
   2a13c:	and	w8, w8, #0xf0
   2a140:	orr	w8, w8, #0x2
   2a144:	stp	xzr, xzr, [x19, #16]
   2a148:	strb	w8, [x19]
   2a14c:	str	xzr, [x19, #8]
   2a150:	b	2a70c <PyInit__decimal@@Base+0x23c58>
   2a154:	ldr	x1, [x21, #40]
   2a158:	ldr	x9, [x21, #24]
   2a15c:	add	x8, x1, x9, lsl #3
   2a160:	ldur	x8, [x8, #-8]
   2a164:	cbz	x8, 2a258 <PyInit__decimal@@Base+0x237a4>
   2a168:	ldp	q2, q0, [x22, #16]
   2a16c:	ldr	q1, [x22]
   2a170:	add	x24, sp, #0x250
   2a174:	mov	w8, #0x6                   	// #6
   2a178:	str	q0, [x24, #1712]
   2a17c:	str	q2, [x24, #1696]
   2a180:	str	q1, [x24, #1680]
   2a184:	stur	w8, [x29, #-44]
   2a188:	ldr	w8, [x22, #44]
   2a18c:	cbz	w8, 2a280 <PyInit__decimal@@Base+0x237cc>
   2a190:	mov	w8, #0x30                  	// #48
   2a194:	add	x12, sp, #0x6e0
   2a198:	strb	w8, [sp, #1712]
   2a19c:	str	x12, [x24, #1160]
   2a1a0:	add	x12, sp, #0x4b0
   2a1a4:	strb	w8, [sp, #1152]
   2a1a8:	strb	w8, [sp, #592]
   2a1ac:	strb	w8, [sp, #32]
   2a1b0:	add	x8, sp, #0x20
   2a1b4:	mov	w11, #0x40                  	// #64
   2a1b8:	str	x12, [x24, #600]
   2a1bc:	add	x12, sp, #0x280
   2a1c0:	cmp	x8, x21
   2a1c4:	stp	x11, x12, [x24, #32]
   2a1c8:	add	x12, sp, #0x50
   2a1cc:	cset	w8, eq  // eq = none
   2a1d0:	cmp	x19, x21
   2a1d4:	stp	xzr, xzr, [sp, #40]
   2a1d8:	str	xzr, [x24, #1128]
   2a1dc:	str	xzr, [x24, #1144]
   2a1e0:	str	xzr, [x24, #1136]
   2a1e4:	str	x11, [x24, #1152]
   2a1e8:	str	xzr, [x24, #568]
   2a1ec:	str	xzr, [x24, #584]
   2a1f0:	str	xzr, [x24, #576]
   2a1f4:	str	x11, [x24, #592]
   2a1f8:	stp	xzr, xzr, [x24, #8]
   2a1fc:	str	xzr, [x24, #24]
   2a200:	stp	xzr, x11, [sp, #56]
   2a204:	str	x12, [sp, #72]
   2a208:	b.ne	2a338 <PyInit__decimal@@Base+0x23884>  // b.any
   2a20c:	tbnz	w8, #0, 2a338 <PyInit__decimal@@Base+0x23884>
   2a210:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   2a214:	ldr	x8, [x23, #1344]
   2a218:	cmp	x8, x9
   2a21c:	csel	x8, x9, x8, lt  // lt = tstop
   2a220:	cmp	x8, #0x41
   2a224:	b.lt	2a30c <PyInit__decimal@@Base+0x23858>  // b.tstop
   2a228:	add	x0, sp, #0x20
   2a22c:	mov	x1, x8
   2a230:	mov	x2, x20
   2a234:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2a238:	cbz	w0, 2a774 <PyInit__decimal@@Base+0x23cc0>
   2a23c:	ldrb	w8, [sp, #32]
   2a240:	ldr	x9, [x21, #24]
   2a244:	ldrb	w10, [x21]
   2a248:	ldr	x0, [sp, #72]
   2a24c:	ldr	x1, [x21, #40]
   2a250:	and	w8, w8, #0xfffffff0
   2a254:	b	2a314 <PyInit__decimal@@Base+0x23860>
   2a258:	mov	w2, #0x1                   	// #1
   2a25c:	mov	x0, x19
   2a260:	mov	w1, wzr
   2a264:	b	2a274 <PyInit__decimal@@Base+0x237c0>
   2a268:	mov	x0, x19
   2a26c:	mov	w1, wzr
   2a270:	mov	x2, xzr
   2a274:	mov	x3, xzr
   2a278:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2a27c:	b	2a70c <PyInit__decimal@@Base+0x23c58>
   2a280:	sub	x2, x29, #0x50
   2a284:	mov	x0, x19
   2a288:	mov	x1, x21
   2a28c:	mov	x3, x20
   2a290:	bl	2a7dc <PyInit__decimal@@Base+0x23d28>
   2a294:	ldrb	w8, [x19]
   2a298:	tst	w8, #0xe
   2a29c:	b.eq	2a594 <PyInit__decimal@@Base+0x23ae0>  // b.none
   2a2a0:	ldp	x8, x10, [x19, #8]
   2a2a4:	ldr	x9, [x24, #1696]
   2a2a8:	add	x10, x8, x10
   2a2ac:	sub	x10, x10, #0x1
   2a2b0:	cmp	x10, x9
   2a2b4:	b.ge	2a2f8 <PyInit__decimal@@Base+0x23844>  // b.tcont
   2a2b8:	ldrb	w10, [x19]
   2a2bc:	tst	w10, #0xe
   2a2c0:	b.ne	2a2d8 <PyInit__decimal@@Base+0x23824>  // b.any
   2a2c4:	ldr	x10, [x19, #40]
   2a2c8:	ldr	x11, [x19, #24]
   2a2cc:	add	x10, x10, x11, lsl #3
   2a2d0:	ldur	x10, [x10, #-8]
   2a2d4:	cbz	x10, 2a2f8 <PyInit__decimal@@Base+0x23844>
   2a2d8:	ldr	x10, [x24, #1680]
   2a2dc:	sub	x9, x9, x10
   2a2e0:	add	x9, x9, #0x1
   2a2e4:	cmp	x8, x9
   2a2e8:	b.ge	2a2f8 <PyInit__decimal@@Base+0x23844>  // b.tcont
   2a2ec:	ldr	w8, [x20]
   2a2f0:	orr	w8, w8, #0x4000
   2a2f4:	str	w8, [x20]
   2a2f8:	sub	x1, x29, #0x50
   2a2fc:	mov	x0, x19
   2a300:	mov	x2, x20
   2a304:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2a308:	b	2a70c <PyInit__decimal@@Base+0x23c58>
   2a30c:	add	x0, sp, #0x50
   2a310:	mov	w8, #0x30                  	// #48
   2a314:	and	w10, w10, #0xf
   2a318:	orr	w8, w8, w10
   2a31c:	strb	w8, [sp, #32]
   2a320:	ldur	q0, [x21, #8]
   2a324:	lsl	x2, x9, #3
   2a328:	str	x9, [sp, #56]
   2a32c:	stur	q0, [sp, #40]
   2a330:	bl	63c0 <memcpy@plt>
   2a334:	add	x21, sp, #0x20
   2a338:	stur	wzr, [x29, #-40]
   2a33c:	adrp	x26, 3f000 <PyInit__decimal@@Base+0x3854c>
   2a340:	adrp	x9, 40000 <PyInit__decimal@@Base+0x3954c>
   2a344:	add	x26, x26, #0x370
   2a348:	ldr	x10, [x22]
   2a34c:	ldr	q0, [x9, #96]
   2a350:	ldr	x28, [x26, #72]
   2a354:	sub	x8, x29, #0x50
   2a358:	mov	w25, #0x1                   	// #1
   2a35c:	add	x23, x8, #0x1c
   2a360:	add	x27, x10, #0x3
   2a364:	str	q0, [sp]
   2a368:	b	2a37c <PyInit__decimal@@Base+0x238c8>
   2a36c:	ldr	w8, [x20]
   2a370:	orr	w8, w8, #0x100
   2a374:	str	w8, [x20]
   2a378:	add	x27, x27, #0x13
   2a37c:	sub	x2, x29, #0x50
   2a380:	add	x3, sp, #0x1c
   2a384:	mov	x0, x19
   2a388:	mov	x1, x21
   2a38c:	str	x27, [x24, #1680]
   2a390:	str	wzr, [sp, #28]
   2a394:	bl	2a7dc <PyInit__decimal@@Base+0x23d28>
   2a398:	ldr	w8, [sp, #28]
   2a39c:	ldr	w9, [x20]
   2a3a0:	ldr	q0, [sp]
   2a3a4:	tst	w8, #0x4000
   2a3a8:	orr	w9, w9, w8
   2a3ac:	str	w9, [x20]
   2a3b0:	ldrb	w11, [sp, #592]
   2a3b4:	ldp	x9, x10, [x19, #8]
   2a3b8:	ldr	x8, [x24, #1680]
   2a3bc:	and	w11, w11, #0xf0
   2a3c0:	strb	w11, [sp, #592]
   2a3c4:	ldr	x11, [x24, #40]
   2a3c8:	add	x10, x10, x9
   2a3cc:	sub	x8, x10, x8
   2a3d0:	csel	x8, x8, x9, eq  // eq = none
   2a3d4:	str	x8, [x24, #8]
   2a3d8:	str	q0, [x11]
   2a3dc:	str	x25, [x24, #24]
   2a3e0:	ldr	x8, [x11]
   2a3e4:	cmp	x28, x8
   2a3e8:	b.ls	2a414 <PyInit__decimal@@Base+0x23960>  // b.plast
   2a3ec:	ldr	x9, [x26, #32]
   2a3f0:	cmp	x9, x8
   2a3f4:	b.ls	2a43c <PyInit__decimal@@Base+0x23988>  // b.plast
   2a3f8:	ldr	x9, [x26, #16]
   2a3fc:	cmp	x9, x8
   2a400:	b.ls	2a480 <PyInit__decimal@@Base+0x239cc>  // b.plast
   2a404:	ldr	x9, [x26, #8]
   2a408:	cmp	x9, x8
   2a40c:	cinc	x8, x25, ls  // ls = plast
   2a410:	b	2a4e8 <PyInit__decimal@@Base+0x23a34>
   2a414:	ldr	x9, [x26, #112]
   2a418:	cmp	x9, x8
   2a41c:	b.ls	2a458 <PyInit__decimal@@Base+0x239a4>  // b.plast
   2a420:	ldr	x9, [x26, #88]
   2a424:	cmp	x9, x8
   2a428:	b.ls	2a490 <PyInit__decimal@@Base+0x239dc>  // b.plast
   2a42c:	ldr	x9, [x26, #80]
   2a430:	cmp	x9, x8
   2a434:	mov	w8, #0xa                   	// #10
   2a438:	b	2a4e4 <PyInit__decimal@@Base+0x23a30>
   2a43c:	ldr	x9, [x26, #48]
   2a440:	cmp	x9, x8
   2a444:	b.ls	2a4ac <PyInit__decimal@@Base+0x239f8>  // b.plast
   2a448:	ldr	x9, [x26, #40]
   2a44c:	cmp	x9, x8
   2a450:	mov	w8, #0x5                   	// #5
   2a454:	b	2a4e4 <PyInit__decimal@@Base+0x23a30>
   2a458:	ldr	x9, [x26, #144]
   2a45c:	cmp	x9, x8
   2a460:	b.ls	2a4c8 <PyInit__decimal@@Base+0x23a14>  // b.plast
   2a464:	ldr	x9, [x26, #128]
   2a468:	cmp	x9, x8
   2a46c:	b.ls	2a4d8 <PyInit__decimal@@Base+0x23a24>  // b.plast
   2a470:	ldr	x9, [x26, #120]
   2a474:	cmp	x9, x8
   2a478:	mov	w8, #0xf                   	// #15
   2a47c:	b	2a4e4 <PyInit__decimal@@Base+0x23a30>
   2a480:	ldr	x9, [x26, #24]
   2a484:	cmp	x9, x8
   2a488:	mov	w8, #0x3                   	// #3
   2a48c:	b	2a4e4 <PyInit__decimal@@Base+0x23a30>
   2a490:	ldr	x9, [x26, #104]
   2a494:	cmp	x9, x8
   2a498:	b.ls	2a584 <PyInit__decimal@@Base+0x23ad0>  // b.plast
   2a49c:	ldr	x9, [x26, #96]
   2a4a0:	cmp	x9, x8
   2a4a4:	mov	w8, #0xc                   	// #12
   2a4a8:	b	2a4e4 <PyInit__decimal@@Base+0x23a30>
   2a4ac:	ldr	x9, [x26, #64]
   2a4b0:	cmp	x9, x8
   2a4b4:	b.ls	2a58c <PyInit__decimal@@Base+0x23ad8>  // b.plast
   2a4b8:	ldr	x9, [x26, #56]
   2a4bc:	cmp	x9, x8
   2a4c0:	mov	w8, #0x7                   	// #7
   2a4c4:	b	2a4e4 <PyInit__decimal@@Base+0x23a30>
   2a4c8:	ldr	x9, [x26, #152]
   2a4cc:	cmp	x9, x8
   2a4d0:	mov	w8, #0x13                  	// #19
   2a4d4:	b	2a4e4 <PyInit__decimal@@Base+0x23a30>
   2a4d8:	ldr	x9, [x26, #136]
   2a4dc:	cmp	x9, x8
   2a4e0:	mov	w8, #0x11                  	// #17
   2a4e4:	cinc	x8, x8, ls  // ls = plast
   2a4e8:	str	x8, [x24, #16]
   2a4ec:	ldr	x8, [x22]
   2a4f0:	add	x0, sp, #0x6b0
   2a4f4:	add	x2, sp, #0x250
   2a4f8:	sub	x3, x29, #0x50
   2a4fc:	mov	x1, x19
   2a500:	mov	x4, x23
   2a504:	str	x8, [x24, #1680]
   2a508:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   2a50c:	add	x0, sp, #0x480
   2a510:	add	x2, sp, #0x250
   2a514:	sub	x3, x29, #0x50
   2a518:	mov	x1, x19
   2a51c:	mov	x4, x23
   2a520:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   2a524:	ldrb	w8, [x19]
   2a528:	tst	w8, #0xe
   2a52c:	b.ne	2a5e0 <PyInit__decimal@@Base+0x23b2c>  // b.any
   2a530:	ldr	x9, [x19, #40]
   2a534:	ldr	x10, [x19, #24]
   2a538:	add	x9, x9, x10, lsl #3
   2a53c:	ldur	x9, [x9, #-8]
   2a540:	cbz	x9, 2a5e0 <PyInit__decimal@@Base+0x23b2c>
   2a544:	ldrb	w8, [sp, #1712]
   2a548:	tst	w8, #0xe
   2a54c:	b.ne	2a55c <PyInit__decimal@@Base+0x23aa8>  // b.any
   2a550:	ldrb	w9, [sp, #1152]
   2a554:	tst	w9, #0xe
   2a558:	b.eq	2a570 <PyInit__decimal@@Base+0x23abc>  // b.none
   2a55c:	tst	w8, #0xc
   2a560:	b.ne	2a36c <PyInit__decimal@@Base+0x238b8>  // b.any
   2a564:	ldrb	w8, [sp, #1152]
   2a568:	tst	w8, #0xc
   2a56c:	b.ne	2a36c <PyInit__decimal@@Base+0x238b8>  // b.any
   2a570:	add	x0, sp, #0x6b0
   2a574:	add	x1, sp, #0x480
   2a578:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2a57c:	cbnz	w0, 2a378 <PyInit__decimal@@Base+0x238c4>
   2a580:	b	2a5dc <PyInit__decimal@@Base+0x23b28>
   2a584:	mov	w8, #0xe                   	// #14
   2a588:	b	2a4e8 <PyInit__decimal@@Base+0x23a34>
   2a58c:	mov	w8, #0x9                   	// #9
   2a590:	b	2a4e8 <PyInit__decimal@@Base+0x23a34>
   2a594:	ldr	x8, [x19, #40]
   2a598:	ldr	x9, [x19, #24]
   2a59c:	add	x8, x8, x9, lsl #3
   2a5a0:	ldur	x8, [x8, #-8]
   2a5a4:	cbz	x8, 2a2a0 <PyInit__decimal@@Base+0x237ec>
   2a5a8:	ldr	x8, [x19, #16]
   2a5ac:	ldr	x9, [x24, #1680]
   2a5b0:	subs	x21, x9, x8
   2a5b4:	b.le	2a2a0 <PyInit__decimal@@Base+0x237ec>
   2a5b8:	mov	x0, x19
   2a5bc:	mov	x1, x19
   2a5c0:	mov	x2, x21
   2a5c4:	mov	x3, x20
   2a5c8:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   2a5cc:	ldr	x8, [x19, #8]
   2a5d0:	sub	x8, x8, x21
   2a5d4:	str	x8, [x19, #8]
   2a5d8:	b	2a2a0 <PyInit__decimal@@Base+0x237ec>
   2a5dc:	ldrb	w8, [x19]
   2a5e0:	ldr	w9, [x22, #40]
   2a5e4:	tst	w8, #0xe
   2a5e8:	stur	w9, [x29, #-40]
   2a5ec:	b.eq	2a72c <PyInit__decimal@@Base+0x23c78>  // b.none
   2a5f0:	ldp	x8, x10, [x19, #8]
   2a5f4:	ldr	x9, [x24, #1696]
   2a5f8:	add	x10, x8, x10
   2a5fc:	sub	x10, x10, #0x1
   2a600:	cmp	x10, x9
   2a604:	b.ge	2a648 <PyInit__decimal@@Base+0x23b94>  // b.tcont
   2a608:	ldrb	w10, [x19]
   2a60c:	tst	w10, #0xe
   2a610:	b.ne	2a628 <PyInit__decimal@@Base+0x23b74>  // b.any
   2a614:	ldr	x10, [x19, #40]
   2a618:	ldr	x11, [x19, #24]
   2a61c:	add	x10, x10, x11, lsl #3
   2a620:	ldur	x10, [x10, #-8]
   2a624:	cbz	x10, 2a648 <PyInit__decimal@@Base+0x23b94>
   2a628:	ldr	x10, [x24, #1680]
   2a62c:	sub	x9, x9, x10
   2a630:	add	x9, x9, #0x1
   2a634:	cmp	x8, x9
   2a638:	b.ge	2a648 <PyInit__decimal@@Base+0x23b94>  // b.tcont
   2a63c:	ldr	w8, [x20]
   2a640:	orr	w8, w8, #0x4000
   2a644:	str	w8, [x20]
   2a648:	sub	x1, x29, #0x50
   2a64c:	mov	x0, x19
   2a650:	mov	x2, x20
   2a654:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2a658:	ldrb	w8, [sp, #1712]
   2a65c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2a660:	cmp	w8, #0x1f
   2a664:	b.hi	2a678 <PyInit__decimal@@Base+0x23bc4>  // b.pmore
   2a668:	ldr	x8, [x19, #1376]
   2a66c:	ldr	x0, [x24, #1160]
   2a670:	blr	x8
   2a674:	ldrb	w8, [sp, #1712]
   2a678:	tbnz	w8, #4, 2a688 <PyInit__decimal@@Base+0x23bd4>
   2a67c:	ldr	x8, [x19, #1376]
   2a680:	add	x0, sp, #0x6b0
   2a684:	blr	x8
   2a688:	ldrb	w8, [sp, #1152]
   2a68c:	cmp	w8, #0x1f
   2a690:	b.hi	2a6a4 <PyInit__decimal@@Base+0x23bf0>  // b.pmore
   2a694:	ldr	x8, [x19, #1376]
   2a698:	ldr	x0, [x24, #600]
   2a69c:	blr	x8
   2a6a0:	ldrb	w8, [sp, #1152]
   2a6a4:	tbnz	w8, #4, 2a6b4 <PyInit__decimal@@Base+0x23c00>
   2a6a8:	ldr	x8, [x19, #1376]
   2a6ac:	add	x0, sp, #0x480
   2a6b0:	blr	x8
   2a6b4:	ldrb	w8, [sp, #592]
   2a6b8:	cmp	w8, #0x1f
   2a6bc:	b.hi	2a6d0 <PyInit__decimal@@Base+0x23c1c>  // b.pmore
   2a6c0:	ldr	x8, [x19, #1376]
   2a6c4:	ldr	x0, [x24, #40]
   2a6c8:	blr	x8
   2a6cc:	ldrb	w8, [sp, #592]
   2a6d0:	tbnz	w8, #4, 2a6e0 <PyInit__decimal@@Base+0x23c2c>
   2a6d4:	ldr	x8, [x19, #1376]
   2a6d8:	add	x0, sp, #0x250
   2a6dc:	blr	x8
   2a6e0:	ldrb	w8, [sp, #32]
   2a6e4:	cmp	w8, #0x1f
   2a6e8:	b.hi	2a6fc <PyInit__decimal@@Base+0x23c48>  // b.pmore
   2a6ec:	ldr	x8, [x19, #1376]
   2a6f0:	ldr	x0, [sp, #72]
   2a6f4:	blr	x8
   2a6f8:	ldrb	w8, [sp, #32]
   2a6fc:	tbnz	w8, #4, 2a70c <PyInit__decimal@@Base+0x23c58>
   2a700:	ldr	x8, [x19, #1376]
   2a704:	add	x0, sp, #0x20
   2a708:	blr	x8
   2a70c:	add	sp, sp, #0x930
   2a710:	ldp	x20, x19, [sp, #80]
   2a714:	ldp	x22, x21, [sp, #64]
   2a718:	ldp	x24, x23, [sp, #48]
   2a71c:	ldp	x26, x25, [sp, #32]
   2a720:	ldp	x28, x27, [sp, #16]
   2a724:	ldp	x29, x30, [sp], #96
   2a728:	ret
   2a72c:	ldr	x8, [x19, #40]
   2a730:	ldr	x9, [x19, #24]
   2a734:	add	x8, x8, x9, lsl #3
   2a738:	ldur	x8, [x8, #-8]
   2a73c:	cbz	x8, 2a5f0 <PyInit__decimal@@Base+0x23b3c>
   2a740:	ldr	x8, [x19, #16]
   2a744:	ldr	x9, [x24, #1680]
   2a748:	subs	x21, x9, x8
   2a74c:	b.le	2a5f0 <PyInit__decimal@@Base+0x23b3c>
   2a750:	mov	x0, x19
   2a754:	mov	x1, x19
   2a758:	mov	x2, x21
   2a75c:	mov	x3, x20
   2a760:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   2a764:	ldr	x8, [x19, #8]
   2a768:	sub	x8, x8, x21
   2a76c:	str	x8, [x19, #8]
   2a770:	b	2a5f0 <PyInit__decimal@@Base+0x23b3c>
   2a774:	ldrb	w8, [x21]
   2a778:	tbnz	w8, #5, 2a7b8 <PyInit__decimal@@Base+0x23d04>
   2a77c:	ldr	x9, [x21, #32]
   2a780:	ldr	x1, [x23, #1344]
   2a784:	cmp	x9, x1
   2a788:	b.le	2a7b8 <PyInit__decimal@@Base+0x23d04>
   2a78c:	sturb	wzr, [x29, #-20]
   2a790:	ldr	x0, [x21, #40]
   2a794:	sub	x3, x29, #0x14
   2a798:	mov	w2, #0x8                   	// #8
   2a79c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2a7a0:	str	x0, [x21, #40]
   2a7a4:	ldurb	w8, [x29, #-20]
   2a7a8:	cbnz	w8, 2a7b4 <PyInit__decimal@@Base+0x23d00>
   2a7ac:	ldr	x8, [x23, #1344]
   2a7b0:	str	x8, [x21, #32]
   2a7b4:	ldrb	w8, [x21]
   2a7b8:	and	w8, w8, #0xf0
   2a7bc:	orr	w8, w8, #0x4
   2a7c0:	stp	xzr, xzr, [x21, #16]
   2a7c4:	strb	w8, [x21]
   2a7c8:	str	xzr, [x21, #8]
   2a7cc:	ldr	w8, [x20]
   2a7d0:	orr	w8, w8, #0x200
   2a7d4:	str	w8, [x20]
   2a7d8:	b	2a70c <PyInit__decimal@@Base+0x23c58>
   2a7dc:	stp	x29, x30, [sp, #-96]!
   2a7e0:	stp	x28, x27, [sp, #16]
   2a7e4:	stp	x26, x25, [sp, #32]
   2a7e8:	stp	x24, x23, [sp, #48]
   2a7ec:	stp	x22, x21, [sp, #64]
   2a7f0:	stp	x20, x19, [sp, #80]
   2a7f4:	mov	x29, sp
   2a7f8:	sub	sp, sp, #0x510
   2a7fc:	mov	w8, #0x30                  	// #48
   2a800:	add	x10, sp, #0x2a0
   2a804:	str	x10, [sp, #664]
   2a808:	add	x10, sp, #0x70
   2a80c:	strb	w8, [sp, #624]
   2a810:	strb	w8, [sp, #64]
   2a814:	mov	w8, #0x1                   	// #1
   2a818:	str	x10, [sp, #104]
   2a81c:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3154c>
   2a820:	dup	v0.2d, x8
   2a824:	stur	q0, [sp, #32]
   2a828:	ldr	q0, [x10, #3296]
   2a82c:	mov	w9, #0x40                  	// #64
   2a830:	str	x9, [sp, #656]
   2a834:	stp	xzr, x9, [sp, #88]
   2a838:	mov	w9, #0x90                  	// #144
   2a83c:	add	x10, sp, #0x38
   2a840:	str	xzr, [sp, #632]
   2a844:	str	xzr, [sp, #640]
   2a848:	stp	xzr, xzr, [sp, #72]
   2a84c:	str	xzr, [sp, #648]
   2a850:	stp	x10, x8, [sp, #48]
   2a854:	strb	w9, [sp, #8]
   2a858:	stur	q0, [sp, #16]
   2a85c:	ldr	x8, [x1, #40]
   2a860:	ldr	x9, [x1, #24]
   2a864:	mov	x20, x0
   2a868:	add	x10, x8, x9, lsl #3
   2a86c:	ldur	x10, [x10, #-8]
   2a870:	cbz	x10, 2a900 <PyInit__decimal@@Base+0x23e4c>
   2a874:	ldp	x11, x10, [x1, #8]
   2a878:	mov	x19, x3
   2a87c:	mov	x22, x2
   2a880:	mov	x21, x1
   2a884:	add	x12, x11, x10
   2a888:	bic	x23, x12, x12, asr #63
   2a88c:	cmp	x23, #0x14
   2a890:	b.lt	2a918 <PyInit__decimal@@Base+0x23e64>  // b.tstop
   2a894:	ldrb	w8, [x21]
   2a898:	tbnz	w8, #0, 2a9f0 <PyInit__decimal@@Base+0x23f3c>
   2a89c:	ldrb	w8, [x20]
   2a8a0:	tbnz	w8, #5, 2a8e4 <PyInit__decimal@@Base+0x23e30>
   2a8a4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2a8a8:	ldr	x9, [x20, #32]
   2a8ac:	ldr	x1, [x21, #1344]
   2a8b0:	cmp	x9, x1
   2a8b4:	b.le	2a8e4 <PyInit__decimal@@Base+0x23e30>
   2a8b8:	sturb	wzr, [x29, #-64]
   2a8bc:	ldr	x0, [x20, #40]
   2a8c0:	sub	x3, x29, #0x40
   2a8c4:	mov	w2, #0x8                   	// #8
   2a8c8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2a8cc:	str	x0, [x20, #40]
   2a8d0:	ldurb	w8, [x29, #-64]
   2a8d4:	cbnz	w8, 2a8e0 <PyInit__decimal@@Base+0x23e2c>
   2a8d8:	ldr	x8, [x21, #1344]
   2a8dc:	str	x8, [x20, #32]
   2a8e0:	ldrb	w8, [x20]
   2a8e4:	and	w8, w8, #0xf0
   2a8e8:	orr	w8, w8, #0x2
   2a8ec:	stp	xzr, xzr, [x20, #16]
   2a8f0:	str	xzr, [x20, #8]
   2a8f4:	strb	w8, [x20]
   2a8f8:	mov	w8, #0x1840                	// #6208
   2a8fc:	b	2aa14 <PyInit__decimal@@Base+0x23f60>
   2a900:	mov	w2, #0x1                   	// #1
   2a904:	mov	x0, x20
   2a908:	mov	w1, wzr
   2a90c:	mov	x3, xzr
   2a910:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2a914:	b	2aef4 <PyInit__decimal@@Base+0x24440>
   2a918:	mov	w12, #0x9                   	// #9
   2a91c:	mov	w13, #0x90                  	// #144
   2a920:	stur	x12, [x29, #-16]
   2a924:	sturb	w13, [x29, #-64]
   2a928:	ldr	x13, [x22]
   2a92c:	mov	w14, #0x1                   	// #1
   2a930:	sub	x12, x29, #0x10
   2a934:	dup	v0.2d, x14
   2a938:	stp	x14, x12, [x29, #-32]
   2a93c:	mvn	x12, x13
   2a940:	stur	q0, [x29, #-48]
   2a944:	stur	x12, [x29, #-56]
   2a948:	ldrb	w12, [x21]
   2a94c:	stp	x11, x10, [x29, #-104]
   2a950:	stur	x9, [x29, #-88]
   2a954:	ldr	x9, [x21, #32]
   2a958:	mov	w10, #0x50                  	// #80
   2a95c:	and	w11, w12, #0xe
   2a960:	sub	x0, x29, #0x70
   2a964:	stp	x9, x8, [x29, #-80]
   2a968:	orr	w8, w11, w10
   2a96c:	sub	x1, x29, #0x40
   2a970:	sturb	w8, [x29, #-112]
   2a974:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2a978:	cmp	w0, #0x0
   2a97c:	b.le	2aa20 <PyInit__decimal@@Base+0x23f6c>
   2a980:	sub	x0, x29, #0x40
   2a984:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2a988:	ldr	x8, [x22]
   2a98c:	mov	w9, #0xa                   	// #10
   2a990:	mov	w10, #0x6                   	// #6
   2a994:	stur	w10, [x29, #-28]
   2a998:	add	x8, x23, x8
   2a99c:	add	x8, x8, #0x2
   2a9a0:	cmp	x8, #0xa
   2a9a4:	csel	x8, x8, x9, gt
   2a9a8:	cmp	x20, x21
   2a9ac:	stur	x8, [x29, #-64]
   2a9b0:	b.eq	2aa8c <PyInit__decimal@@Base+0x23fd8>  // b.none
   2a9b4:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2a9b8:	ldr	x8, [x21, #24]
   2a9bc:	ldr	x10, [x9, #1344]
   2a9c0:	ldr	x9, [x20, #32]
   2a9c4:	cmp	x10, x8
   2a9c8:	csel	x1, x8, x10, lt  // lt = tstop
   2a9cc:	cmp	x1, x9
   2a9d0:	b.eq	2aa58 <PyInit__decimal@@Base+0x23fa4>  // b.none
   2a9d4:	ldrb	w10, [x20]
   2a9d8:	tbnz	w10, #5, 2aa3c <PyInit__decimal@@Base+0x23f88>
   2a9dc:	mov	x0, x20
   2a9e0:	mov	x2, x19
   2a9e4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2a9e8:	cbnz	w0, 2aa54 <PyInit__decimal@@Base+0x23fa0>
   2a9ec:	b	2aef4 <PyInit__decimal@@Base+0x24440>
   2a9f0:	ldr	x8, [x22, #16]
   2a9f4:	ldr	x9, [x22]
   2a9f8:	mov	x0, x20
   2a9fc:	mov	w1, wzr
   2aa00:	mov	x2, xzr
   2aa04:	sub	x8, x8, x9
   2aa08:	add	x3, x8, #0x1
   2aa0c:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2aa10:	mov	w8, #0x7041                	// #28737
   2aa14:	ldr	w9, [x19]
   2aa18:	orr	w8, w9, w8
   2aa1c:	b	2aef0 <PyInit__decimal@@Base+0x2443c>
   2aa20:	mov	w2, #0x1                   	// #1
   2aa24:	mov	x0, x20
   2aa28:	mov	w1, wzr
   2aa2c:	mov	x3, xzr
   2aa30:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2aa34:	ldr	w8, [x19]
   2aa38:	b	2aee8 <PyInit__decimal@@Base+0x24434>
   2aa3c:	cmp	x1, x9
   2aa40:	b.le	2aa58 <PyInit__decimal@@Base+0x23fa4>
   2aa44:	mov	x0, x20
   2aa48:	mov	x2, x19
   2aa4c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2aa50:	cbz	w0, 2aef4 <PyInit__decimal@@Base+0x24440>
   2aa54:	ldr	x8, [x21, #24]
   2aa58:	ldrb	w9, [x21]
   2aa5c:	ldrb	w10, [x20]
   2aa60:	ldr	x0, [x20, #40]
   2aa64:	bfxil	w10, w9, #0, #4
   2aa68:	strb	w10, [x20]
   2aa6c:	ldur	q0, [x21, #8]
   2aa70:	str	x8, [x20, #24]
   2aa74:	stur	q0, [x20, #8]
   2aa78:	ldr	x8, [x21, #24]
   2aa7c:	ldr	x1, [x21, #40]
   2aa80:	lsl	x2, x8, #3
   2aa84:	bl	63c0 <memcpy@plt>
   2aa88:	ldur	x8, [x29, #-64]
   2aa8c:	mov	x21, x20
   2aa90:	ldr	x9, [x21, #8]!
   2aa94:	mov	x10, #0x10000000000000      	// #4503599627370496
   2aa98:	cmp	x8, x10
   2aa9c:	sub	x9, x9, x23
   2aaa0:	str	x9, [x21]
   2aaa4:	b.le	2ab10 <PyInit__decimal@@Base+0x2405c>
   2aaa8:	ldrb	w8, [x20]
   2aaac:	tbnz	w8, #5, 2aaf0 <PyInit__decimal@@Base+0x2403c>
   2aab0:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   2aab4:	ldr	x9, [x20, #32]
   2aab8:	ldr	x1, [x22, #1344]
   2aabc:	cmp	x9, x1
   2aac0:	b.le	2aaf0 <PyInit__decimal@@Base+0x2403c>
   2aac4:	sturb	wzr, [x29, #-112]
   2aac8:	ldr	x0, [x20, #40]
   2aacc:	sub	x3, x29, #0x70
   2aad0:	mov	w2, #0x8                   	// #8
   2aad4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2aad8:	str	x0, [x20, #40]
   2aadc:	ldurb	w8, [x29, #-112]
   2aae0:	cbnz	w8, 2aaec <PyInit__decimal@@Base+0x24038>
   2aae4:	ldr	x8, [x22, #1344]
   2aae8:	str	x8, [x20, #32]
   2aaec:	ldrb	w8, [x20]
   2aaf0:	and	w8, w8, #0xf0
   2aaf4:	orr	w8, w8, #0x4
   2aaf8:	strb	w8, [x20]
   2aafc:	stp	xzr, xzr, [x21]
   2ab00:	str	xzr, [x21, #16]
   2ab04:	ldr	w8, [x19]
   2ab08:	orr	w8, w8, #0x100
   2ab0c:	b	2aef0 <PyInit__decimal@@Base+0x2443c>
   2ab10:	adrp	x24, 3f000 <PyInit__decimal@@Base+0x3854c>
   2ab14:	add	x24, x24, #0x370
   2ab18:	ldr	x25, [x24, #72]
   2ab1c:	cmp	x25, x8
   2ab20:	b.ls	2ab4c <PyInit__decimal@@Base+0x24098>  // b.plast
   2ab24:	ldr	x10, [x24, #32]
   2ab28:	cmp	x10, x8
   2ab2c:	b.ls	2ab74 <PyInit__decimal@@Base+0x240c0>  // b.plast
   2ab30:	ldr	x10, [x24, #16]
   2ab34:	cmp	x10, x8
   2ab38:	b.ls	2abb8 <PyInit__decimal@@Base+0x24104>  // b.plast
   2ab3c:	ldr	x10, [x24, #8]
   2ab40:	cmp	x10, x8
   2ab44:	mov	w10, #0x1                   	// #1
   2ab48:	b	2ac1c <PyInit__decimal@@Base+0x24168>
   2ab4c:	ldr	x10, [x24, #112]
   2ab50:	cmp	x10, x8
   2ab54:	b.ls	2ab90 <PyInit__decimal@@Base+0x240dc>  // b.plast
   2ab58:	ldr	x10, [x24, #88]
   2ab5c:	cmp	x10, x8
   2ab60:	b.ls	2abc8 <PyInit__decimal@@Base+0x24114>  // b.plast
   2ab64:	ldr	x10, [x24, #80]
   2ab68:	cmp	x10, x8
   2ab6c:	mov	w10, #0xa                   	// #10
   2ab70:	b	2ac1c <PyInit__decimal@@Base+0x24168>
   2ab74:	ldr	x10, [x24, #48]
   2ab78:	cmp	x10, x8
   2ab7c:	b.ls	2abe4 <PyInit__decimal@@Base+0x24130>  // b.plast
   2ab80:	ldr	x10, [x24, #40]
   2ab84:	cmp	x10, x8
   2ab88:	mov	w10, #0x5                   	// #5
   2ab8c:	b	2ac1c <PyInit__decimal@@Base+0x24168>
   2ab90:	ldr	x10, [x24, #144]
   2ab94:	cmp	x10, x8
   2ab98:	b.ls	2ac00 <PyInit__decimal@@Base+0x2414c>  // b.plast
   2ab9c:	ldr	x10, [x24, #128]
   2aba0:	cmp	x10, x8
   2aba4:	b.ls	2ac10 <PyInit__decimal@@Base+0x2415c>  // b.plast
   2aba8:	ldr	x10, [x24, #120]
   2abac:	cmp	x10, x8
   2abb0:	mov	w10, #0xf                   	// #15
   2abb4:	b	2ac1c <PyInit__decimal@@Base+0x24168>
   2abb8:	ldr	x10, [x24, #24]
   2abbc:	cmp	x10, x8
   2abc0:	mov	w10, #0x3                   	// #3
   2abc4:	b	2ac1c <PyInit__decimal@@Base+0x24168>
   2abc8:	ldr	x10, [x24, #104]
   2abcc:	cmp	x10, x8
   2abd0:	b.ls	2af14 <PyInit__decimal@@Base+0x24460>  // b.plast
   2abd4:	ldr	x10, [x24, #96]
   2abd8:	cmp	x10, x8
   2abdc:	mov	w10, #0xc                   	// #12
   2abe0:	b	2ac1c <PyInit__decimal@@Base+0x24168>
   2abe4:	ldr	x10, [x24, #64]
   2abe8:	cmp	x10, x8
   2abec:	b.ls	2af1c <PyInit__decimal@@Base+0x24468>  // b.plast
   2abf0:	ldr	x10, [x24, #56]
   2abf4:	cmp	x10, x8
   2abf8:	mov	w10, #0x7                   	// #7
   2abfc:	b	2ac1c <PyInit__decimal@@Base+0x24168>
   2ac00:	ldr	x10, [x24, #152]
   2ac04:	cmp	x10, x8
   2ac08:	mov	w10, #0x13                  	// #19
   2ac0c:	b	2ac1c <PyInit__decimal@@Base+0x24168>
   2ac10:	ldr	x10, [x24, #136]
   2ac14:	cmp	x10, x8
   2ac18:	mov	w10, #0x11                  	// #17
   2ac1c:	cinc	x10, x10, ls  // ls = plast
   2ac20:	ldr	x11, [x20, #16]
   2ac24:	scvtf	d0, x8
   2ac28:	adrp	x8, 40000 <PyInit__decimal@@Base+0x3954c>
   2ac2c:	adrp	x12, 40000 <PyInit__decimal@@Base+0x3954c>
   2ac30:	ldr	d1, [x8, #160]
   2ac34:	ldr	d2, [x12, #168]
   2ac38:	add	x8, x9, x11
   2ac3c:	mvn	x8, x8
   2ac40:	fmul	d0, d0, d1
   2ac44:	add	x8, x8, x10
   2ac48:	fadd	d0, d0, d2
   2ac4c:	scvtf	d1, x8
   2ac50:	fdiv	d0, d0, d1
   2ac54:	fcvtps	x22, d0
   2ac58:	cmp	x22, #0x3
   2ac5c:	b.le	2ac90 <PyInit__decimal@@Base+0x241dc>
   2ac60:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   2ac64:	cmp	x22, x8
   2ac68:	b.eq	2aaa8 <PyInit__decimal@@Base+0x23ff4>  // b.none
   2ac6c:	add	x0, sp, #0x40
   2ac70:	mov	w2, #0x1                   	// #1
   2ac74:	mov	w1, wzr
   2ac78:	mov	x3, xzr
   2ac7c:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2ac80:	cmp	x22, #0x2
   2ac84:	b.lt	2ae54 <PyInit__decimal@@Base+0x243a0>  // b.tstop
   2ac88:	sub	x26, x22, #0x1
   2ac8c:	b	2aca8 <PyInit__decimal@@Base+0x241f4>
   2ac90:	add	x0, sp, #0x40
   2ac94:	mov	w2, #0x1                   	// #1
   2ac98:	mov	w1, wzr
   2ac9c:	mov	x3, xzr
   2aca0:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2aca4:	mov	w26, #0x2                   	// #2
   2aca8:	sub	x8, x29, #0x40
   2acac:	adrp	x21, 50000 <PyInit__decimal@@Base+0x4954c>
   2acb0:	mov	w28, #0x13                  	// #19
   2acb4:	add	x21, x21, #0xc88
   2acb8:	mov	w27, #0xa                   	// #10
   2acbc:	add	x22, x8, #0x1c
   2acc0:	b	2ad20 <PyInit__decimal@@Base+0x2426c>
   2acc4:	ldr	x10, [x24, #152]
   2acc8:	cmp	x10, x9
   2accc:	cinc	x9, x28, ls  // ls = plast
   2acd0:	madd	x8, x8, x28, x9
   2acd4:	sub	x8, x8, #0x13
   2acd8:	add	x1, sp, #0x270
   2acdc:	add	x3, sp, #0x8
   2ace0:	sub	x4, x29, #0x40
   2ace4:	mov	w0, #0x1                   	// #1
   2ace8:	mov	x2, x20
   2acec:	mov	x5, x22
   2acf0:	str	x8, [sp, #24]
   2acf4:	bl	281c4 <PyInit__decimal@@Base+0x21710>
   2acf8:	add	x0, sp, #0x40
   2acfc:	add	x1, sp, #0x40
   2ad00:	add	x2, sp, #0x270
   2ad04:	sub	x4, x29, #0x40
   2ad08:	mov	x3, x21
   2ad0c:	mov	x5, x22
   2ad10:	bl	2af24 <PyInit__decimal@@Base+0x24470>
   2ad14:	sub	x26, x26, #0x1
   2ad18:	cmp	x26, #0x0
   2ad1c:	b.le	2ae54 <PyInit__decimal@@Base+0x243a0>
   2ad20:	ldr	x9, [sp, #48]
   2ad24:	str	x26, [x9]
   2ad28:	ldr	x8, [sp, #32]
   2ad2c:	add	x9, x9, x8, lsl #3
   2ad30:	ldur	x9, [x9, #-8]
   2ad34:	cmp	x25, x9
   2ad38:	b.ls	2ad68 <PyInit__decimal@@Base+0x242b4>  // b.plast
   2ad3c:	ldr	x10, [x24, #32]
   2ad40:	cmp	x10, x9
   2ad44:	b.ls	2ad90 <PyInit__decimal@@Base+0x242dc>  // b.plast
   2ad48:	ldr	x10, [x24, #16]
   2ad4c:	cmp	x10, x9
   2ad50:	b.ls	2addc <PyInit__decimal@@Base+0x24328>  // b.plast
   2ad54:	ldr	x10, [x24, #8]
   2ad58:	cmp	x10, x9
   2ad5c:	mov	w9, #0x1                   	// #1
   2ad60:	cinc	x9, x9, ls  // ls = plast
   2ad64:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2ad68:	ldr	x10, [x24, #112]
   2ad6c:	cmp	x10, x9
   2ad70:	b.ls	2adb0 <PyInit__decimal@@Base+0x242fc>  // b.plast
   2ad74:	ldr	x10, [x24, #88]
   2ad78:	cmp	x10, x9
   2ad7c:	b.ls	2adf0 <PyInit__decimal@@Base+0x2433c>  // b.plast
   2ad80:	ldr	x10, [x24, #80]
   2ad84:	cmp	x10, x9
   2ad88:	cinc	x9, x27, ls  // ls = plast
   2ad8c:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2ad90:	ldr	x10, [x24, #48]
   2ad94:	cmp	x10, x9
   2ad98:	b.ls	2ae10 <PyInit__decimal@@Base+0x2435c>  // b.plast
   2ad9c:	ldr	x10, [x24, #40]
   2ada0:	cmp	x10, x9
   2ada4:	mov	w9, #0x5                   	// #5
   2ada8:	cinc	x9, x9, ls  // ls = plast
   2adac:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2adb0:	ldr	x10, [x24, #144]
   2adb4:	cmp	x10, x9
   2adb8:	b.ls	2acc4 <PyInit__decimal@@Base+0x24210>  // b.plast
   2adbc:	ldr	x10, [x24, #128]
   2adc0:	cmp	x10, x9
   2adc4:	b.ls	2ae30 <PyInit__decimal@@Base+0x2437c>  // b.plast
   2adc8:	ldr	x10, [x24, #120]
   2adcc:	cmp	x10, x9
   2add0:	mov	w9, #0xf                   	// #15
   2add4:	cinc	x9, x9, ls  // ls = plast
   2add8:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2addc:	ldr	x10, [x24, #24]
   2ade0:	cmp	x10, x9
   2ade4:	mov	w9, #0x3                   	// #3
   2ade8:	cinc	x9, x9, ls  // ls = plast
   2adec:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2adf0:	ldr	x10, [x24, #104]
   2adf4:	cmp	x10, x9
   2adf8:	b.ls	2ae44 <PyInit__decimal@@Base+0x24390>  // b.plast
   2adfc:	ldr	x10, [x24, #96]
   2ae00:	cmp	x10, x9
   2ae04:	mov	w9, #0xc                   	// #12
   2ae08:	cinc	x9, x9, ls  // ls = plast
   2ae0c:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2ae10:	ldr	x10, [x24, #64]
   2ae14:	cmp	x10, x9
   2ae18:	b.ls	2ae4c <PyInit__decimal@@Base+0x24398>  // b.plast
   2ae1c:	ldr	x10, [x24, #56]
   2ae20:	cmp	x10, x9
   2ae24:	mov	w9, #0x7                   	// #7
   2ae28:	cinc	x9, x9, ls  // ls = plast
   2ae2c:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2ae30:	ldr	x10, [x24, #136]
   2ae34:	cmp	x10, x9
   2ae38:	mov	w9, #0x11                  	// #17
   2ae3c:	cinc	x9, x9, ls  // ls = plast
   2ae40:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2ae44:	mov	w9, #0xe                   	// #14
   2ae48:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2ae4c:	mov	w9, #0x9                   	// #9
   2ae50:	b	2acd0 <PyInit__decimal@@Base+0x2421c>
   2ae54:	ldr	x2, [x24, x23, lsl #3]
   2ae58:	add	x1, sp, #0x40
   2ae5c:	sub	x4, x29, #0x40
   2ae60:	mov	x0, x20
   2ae64:	mov	w3, wzr
   2ae68:	mov	x5, x19
   2ae6c:	bl	36a54 <PyInit__decimal@@Base+0x2ffa0>
   2ae70:	ldrb	w8, [sp, #624]
   2ae74:	cmp	w8, #0x1f
   2ae78:	b.hi	2ae90 <PyInit__decimal@@Base+0x243dc>  // b.pmore
   2ae7c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ae80:	ldr	x8, [x8, #1376]
   2ae84:	ldr	x0, [sp, #664]
   2ae88:	blr	x8
   2ae8c:	ldrb	w8, [sp, #624]
   2ae90:	tbnz	w8, #4, 2aea4 <PyInit__decimal@@Base+0x243f0>
   2ae94:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ae98:	ldr	x8, [x8, #1376]
   2ae9c:	add	x0, sp, #0x270
   2aea0:	blr	x8
   2aea4:	ldrb	w8, [sp, #64]
   2aea8:	cmp	w8, #0x1f
   2aeac:	b.hi	2aec4 <PyInit__decimal@@Base+0x24410>  // b.pmore
   2aeb0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2aeb4:	ldr	x8, [x8, #1376]
   2aeb8:	ldr	x0, [sp, #104]
   2aebc:	blr	x8
   2aec0:	ldrb	w8, [sp, #64]
   2aec4:	tbnz	w8, #4, 2aed8 <PyInit__decimal@@Base+0x24424>
   2aec8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2aecc:	ldr	x8, [x8, #1376]
   2aed0:	add	x0, sp, #0x40
   2aed4:	blr	x8
   2aed8:	ldur	w8, [x29, #-36]
   2aedc:	ldr	w9, [x19]
   2aee0:	and	w8, w8, #0x3fe
   2aee4:	orr	w8, w8, w9
   2aee8:	mov	w9, #0x1040                	// #4160
   2aeec:	orr	w8, w8, w9
   2aef0:	str	w8, [x19]
   2aef4:	add	sp, sp, #0x510
   2aef8:	ldp	x20, x19, [sp, #80]
   2aefc:	ldp	x22, x21, [sp, #64]
   2af00:	ldp	x24, x23, [sp, #48]
   2af04:	ldp	x26, x25, [sp, #32]
   2af08:	ldp	x28, x27, [sp, #16]
   2af0c:	ldp	x29, x30, [sp], #96
   2af10:	ret
   2af14:	mov	w10, #0xe                   	// #14
   2af18:	b	2ac20 <PyInit__decimal@@Base+0x2416c>
   2af1c:	mov	w10, #0x9                   	// #9
   2af20:	b	2ac20 <PyInit__decimal@@Base+0x2416c>
   2af24:	stp	x29, x30, [sp, #-80]!
   2af28:	str	x25, [sp, #16]
   2af2c:	stp	x24, x23, [sp, #32]
   2af30:	stp	x22, x21, [sp, #48]
   2af34:	stp	x20, x19, [sp, #64]
   2af38:	mov	x29, sp
   2af3c:	mov	x19, x5
   2af40:	mov	x21, x4
   2af44:	mov	x24, x2
   2af48:	mov	x25, x1
   2af4c:	mov	x20, x0
   2af50:	cmp	x0, x3
   2af54:	str	wzr, [x29, #24]
   2af58:	b.eq	2af68 <PyInit__decimal@@Base+0x244b4>  // b.none
   2af5c:	mov	x22, x3
   2af60:	mov	x23, xzr
   2af64:	b	2afb0 <PyInit__decimal@@Base+0x244fc>
   2af68:	ldr	x0, [x20, #24]
   2af6c:	bl	203cc <PyInit__decimal@@Base+0x19918>
   2af70:	cbz	x0, 2b048 <PyInit__decimal@@Base+0x24594>
   2af74:	ldr	x8, [x20, #24]
   2af78:	mov	x22, x0
   2af7c:	ldr	x0, [x0, #40]
   2af80:	ldr	x1, [x20, #40]
   2af84:	lsl	x2, x8, #3
   2af88:	bl	63c0 <memcpy@plt>
   2af8c:	ldrb	w8, [x20]
   2af90:	ldrb	w9, [x22]
   2af94:	mov	x23, x22
   2af98:	bfxil	w9, w8, #0, #4
   2af9c:	strb	w9, [x22]
   2afa0:	ldur	q0, [x20, #8]
   2afa4:	stur	q0, [x22, #8]
   2afa8:	ldr	x8, [x20, #24]
   2afac:	str	x8, [x22, #24]
   2afb0:	add	x4, x29, #0x18
   2afb4:	mov	x0, x20
   2afb8:	mov	x1, x25
   2afbc:	mov	x2, x24
   2afc0:	mov	x3, x21
   2afc4:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   2afc8:	ldrb	w8, [x29, #25]
   2afcc:	tbnz	w8, #0, 2afe8 <PyInit__decimal@@Base+0x24534>
   2afd0:	add	x4, x29, #0x18
   2afd4:	mov	x0, x20
   2afd8:	mov	x1, x20
   2afdc:	mov	x2, x22
   2afe0:	mov	x3, x21
   2afe4:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   2afe8:	cbz	x23, 2b020 <PyInit__decimal@@Base+0x2456c>
   2afec:	ldrb	w8, [x23]
   2aff0:	cmp	w8, #0x1f
   2aff4:	b.hi	2b00c <PyInit__decimal@@Base+0x24558>  // b.pmore
   2aff8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2affc:	ldr	x8, [x8, #1376]
   2b000:	ldr	x0, [x23, #40]
   2b004:	blr	x8
   2b008:	ldrb	w8, [x23]
   2b00c:	tbnz	w8, #4, 2b020 <PyInit__decimal@@Base+0x2456c>
   2b010:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2b014:	ldr	x8, [x8, #1376]
   2b018:	mov	x0, x23
   2b01c:	blr	x8
   2b020:	ldr	w8, [x29, #24]
   2b024:	ldr	w9, [x19]
   2b028:	ldr	x25, [sp, #16]
   2b02c:	orr	w8, w9, w8
   2b030:	str	w8, [x19]
   2b034:	ldp	x20, x19, [sp, #64]
   2b038:	ldp	x22, x21, [sp, #48]
   2b03c:	ldp	x24, x23, [sp, #32]
   2b040:	ldp	x29, x30, [sp], #80
   2b044:	ret
   2b048:	ldrb	w8, [x20]
   2b04c:	tbnz	w8, #5, 2b090 <PyInit__decimal@@Base+0x245dc>
   2b050:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2b054:	ldr	x9, [x20, #32]
   2b058:	ldr	x1, [x21, #1344]
   2b05c:	cmp	x9, x1
   2b060:	b.le	2b090 <PyInit__decimal@@Base+0x245dc>
   2b064:	strb	wzr, [x29, #28]
   2b068:	ldr	x0, [x20, #40]
   2b06c:	add	x3, x29, #0x1c
   2b070:	mov	w2, #0x8                   	// #8
   2b074:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2b078:	str	x0, [x20, #40]
   2b07c:	ldrb	w8, [x29, #28]
   2b080:	cbnz	w8, 2b08c <PyInit__decimal@@Base+0x245d8>
   2b084:	ldr	x8, [x21, #1344]
   2b088:	str	x8, [x20, #32]
   2b08c:	ldrb	w8, [x20]
   2b090:	and	w8, w8, #0xf0
   2b094:	orr	w8, w8, #0x4
   2b098:	strb	w8, [x20]
   2b09c:	mov	w8, #0x200                 	// #512
   2b0a0:	stp	xzr, xzr, [x20, #16]
   2b0a4:	str	xzr, [x20, #8]
   2b0a8:	b	2b024 <PyInit__decimal@@Base+0x24570>
   2b0ac:	stp	x29, x30, [sp, #-96]!
   2b0b0:	stp	x28, x27, [sp, #16]
   2b0b4:	stp	x26, x25, [sp, #32]
   2b0b8:	stp	x24, x23, [sp, #48]
   2b0bc:	stp	x22, x21, [sp, #64]
   2b0c0:	stp	x20, x19, [sp, #80]
   2b0c4:	mov	x29, sp
   2b0c8:	sub	sp, sp, #0x220
   2b0cc:	ldrb	w8, [x1]
   2b0d0:	mov	x20, x4
   2b0d4:	mov	x21, x2
   2b0d8:	mov	x22, x1
   2b0dc:	tst	w8, #0xe
   2b0e0:	mov	x19, x0
   2b0e4:	b.ne	2b0f4 <PyInit__decimal@@Base+0x24640>  // b.any
   2b0e8:	ldrb	w8, [x21]
   2b0ec:	tst	w8, #0xe
   2b0f0:	b.eq	2b1c4 <PyInit__decimal@@Base+0x24710>  // b.none
   2b0f4:	mov	x0, x19
   2b0f8:	mov	x1, x22
   2b0fc:	mov	x2, x21
   2b100:	mov	x4, x20
   2b104:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   2b108:	cbnz	w0, 2b8ac <PyInit__decimal@@Base+0x24df8>
   2b10c:	ldrb	w8, [x22]
   2b110:	tbnz	w8, #1, 2b138 <PyInit__decimal@@Base+0x24684>
   2b114:	tst	w8, #0xe
   2b118:	b.ne	2b130 <PyInit__decimal@@Base+0x2467c>  // b.any
   2b11c:	ldr	x9, [x22, #40]
   2b120:	ldr	x10, [x22, #24]
   2b124:	add	x9, x9, x10, lsl #3
   2b128:	ldur	x9, [x9, #-8]
   2b12c:	cbz	x9, 2b4f4 <PyInit__decimal@@Base+0x24a40>
   2b130:	ldrb	w10, [x21]
   2b134:	b	2b158 <PyInit__decimal@@Base+0x246a4>
   2b138:	ldrb	w10, [x21]
   2b13c:	tst	w10, #0xe
   2b140:	b.ne	2b158 <PyInit__decimal@@Base+0x246a4>  // b.any
   2b144:	ldr	x9, [x21, #40]
   2b148:	ldr	x11, [x21, #24]
   2b14c:	add	x9, x9, x11, lsl #3
   2b150:	ldur	x9, [x9, #-8]
   2b154:	cbz	x9, 2b4f4 <PyInit__decimal@@Base+0x24a40>
   2b158:	ldrb	w9, [x19]
   2b15c:	eor	w8, w10, w8
   2b160:	and	w20, w8, #0x1
   2b164:	tbnz	w9, #5, 2b1a8 <PyInit__decimal@@Base+0x246f4>
   2b168:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2b16c:	ldr	x8, [x19, #32]
   2b170:	ldr	x1, [x21, #1344]
   2b174:	cmp	x8, x1
   2b178:	b.le	2b1a8 <PyInit__decimal@@Base+0x246f4>
   2b17c:	strb	wzr, [sp, #24]
   2b180:	ldr	x0, [x19, #40]
   2b184:	add	x3, sp, #0x18
   2b188:	mov	w2, #0x8                   	// #8
   2b18c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2b190:	str	x0, [x19, #40]
   2b194:	ldrb	w8, [sp, #24]
   2b198:	cbnz	w8, 2b1a4 <PyInit__decimal@@Base+0x246f0>
   2b19c:	ldr	x8, [x21, #1344]
   2b1a0:	str	x8, [x19, #32]
   2b1a4:	ldrb	w9, [x19]
   2b1a8:	and	w8, w9, #0xf0
   2b1ac:	orr	w8, w20, w8
   2b1b0:	orr	w8, w8, #0x2
   2b1b4:	stp	xzr, xzr, [x19, #16]
   2b1b8:	strb	w8, [x19]
   2b1bc:	str	xzr, [x19, #8]
   2b1c0:	b	2b8ac <PyInit__decimal@@Base+0x24df8>
   2b1c4:	ldr	x8, [x21, #24]
   2b1c8:	ldr	x9, [x22, #24]
   2b1cc:	cmp	x8, x9
   2b1d0:	csel	x27, x21, x22, gt
   2b1d4:	csel	x28, x22, x21, gt
   2b1d8:	ldr	x26, [x27, #24]
   2b1dc:	ldr	x25, [x28, #24]
   2b1e0:	cmp	x26, #0x1
   2b1e4:	add	x23, x25, x26
   2b1e8:	str	x23, [sp, #16]
   2b1ec:	b.ne	2b2fc <PyInit__decimal@@Base+0x24848>  // b.any
   2b1f0:	ldr	x8, [x27, #40]
   2b1f4:	ldr	x9, [x28, #40]
   2b1f8:	mov	x10, #0x89e80000            	// #2313682944
   2b1fc:	adrp	x11, 3f000 <PyInit__decimal@@Base+0x3854c>
   2b200:	ldr	x8, [x8]
   2b204:	ldr	x9, [x9]
   2b208:	movk	x10, #0x2304, lsl #32
   2b20c:	ldr	x11, [x11, #1040]
   2b210:	movk	x10, #0x8ac7, lsl #48
   2b214:	umulh	x12, x9, x8
   2b218:	mul	x8, x9, x8
   2b21c:	asr	x9, x8, #63
   2b220:	sub	x13, x12, x9
   2b224:	and	x9, x9, x10
   2b228:	add	x9, x9, x8
   2b22c:	umulh	x14, x13, x11
   2b230:	mul	x11, x13, x11
   2b234:	mvn	x9, x9
   2b238:	add	x14, x14, x12
   2b23c:	cmp	x9, x11
   2b240:	cinc	x9, x14, cc  // cc = lo, ul, last
   2b244:	mvn	x9, x9
   2b248:	mov	x13, #0x76180000            	// #1981284352
   2b24c:	umulh	x11, x9, x10
   2b250:	mul	x14, x9, x10
   2b254:	movk	x13, #0xdcfb, lsl #32
   2b258:	adds	x8, x14, x8
   2b25c:	add	x11, x12, x11
   2b260:	ldr	x24, [x19, #40]
   2b264:	movk	x13, #0x7538, lsl #48
   2b268:	cinc	x11, x11, cs  // cs = hs, nlast
   2b26c:	add	x11, x11, x13
   2b270:	and	x10, x11, x10
   2b274:	sub	x9, x11, x9
   2b278:	add	x8, x10, x8
   2b27c:	stp	x8, x9, [x24]
   2b280:	ldrb	w9, [x22]
   2b284:	ldrb	w10, [x21]
   2b288:	ldrb	w8, [x19]
   2b28c:	eor	w9, w10, w9
   2b290:	and	w10, w8, #0xf0
   2b294:	bfxil	w10, w9, #0, #1
   2b298:	strb	w10, [x19]
   2b29c:	ldr	x9, [x27, #8]
   2b2a0:	ldr	x10, [x28, #8]
   2b2a4:	add	x9, x10, x9
   2b2a8:	sub	x10, x24, #0x8
   2b2ac:	str	x9, [x19, #8]
   2b2b0:	mov	x9, x23
   2b2b4:	cmp	x23, #0x2
   2b2b8:	b.lt	2b2c8 <PyInit__decimal@@Base+0x24814>  // b.tstop
   2b2bc:	ldr	x11, [x10, x9, lsl #3]
   2b2c0:	sub	x23, x9, #0x1
   2b2c4:	cbz	x11, 2b2b0 <PyInit__decimal@@Base+0x247fc>
   2b2c8:	str	x9, [x19, #24]
   2b2cc:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2b2d0:	ldr	x11, [x10, #1344]
   2b2d4:	ldr	x10, [x19, #32]
   2b2d8:	cmp	x11, x9
   2b2dc:	csel	x1, x9, x11, lt  // lt = tstop
   2b2e0:	cmp	x1, x10
   2b2e4:	b.eq	2b5b8 <PyInit__decimal@@Base+0x24b04>  // b.none
   2b2e8:	tbnz	w8, #5, 2b5a4 <PyInit__decimal@@Base+0x24af0>
   2b2ec:	mov	x0, x19
   2b2f0:	mov	x2, x20
   2b2f4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2b2f8:	b	2b5b8 <PyInit__decimal@@Base+0x24b04>
   2b2fc:	cmp	x23, #0x40
   2b300:	b.hi	2b560 <PyInit__decimal@@Base+0x24aac>  // b.pmore
   2b304:	cmp	x26, #0x2
   2b308:	b.ne	2b670 <PyInit__decimal@@Base+0x24bbc>  // b.any
   2b30c:	ldr	x11, [x27, #40]
   2b310:	ldr	x12, [x28, #40]
   2b314:	mov	x8, #0x89e80000            	// #2313682944
   2b318:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   2b31c:	ldr	x13, [x11]
   2b320:	ldr	x14, [x12]
   2b324:	movk	x8, #0x2304, lsl #32
   2b328:	ldr	x10, [x10, #1040]
   2b32c:	movk	x8, #0x8ac7, lsl #48
   2b330:	umulh	x15, x14, x13
   2b334:	mul	x13, x14, x13
   2b338:	asr	x14, x13, #63
   2b33c:	and	x16, x14, x8
   2b340:	sub	x14, x15, x14
   2b344:	add	x16, x16, x13
   2b348:	umulh	x17, x14, x10
   2b34c:	mul	x14, x14, x10
   2b350:	mvn	x16, x16
   2b354:	add	x17, x17, x15
   2b358:	cmp	x16, x14
   2b35c:	cinc	x14, x17, cc  // cc = lo, ul, last
   2b360:	mvn	x14, x14
   2b364:	mov	x9, #0x76180000            	// #1981284352
   2b368:	umulh	x16, x14, x8
   2b36c:	mul	x17, x14, x8
   2b370:	movk	x9, #0xdcfb, lsl #32
   2b374:	adds	x13, x17, x13
   2b378:	add	x15, x15, x16
   2b37c:	movk	x9, #0x7538, lsl #48
   2b380:	cinc	x15, x15, cs  // cs = hs, nlast
   2b384:	add	x15, x15, x9
   2b388:	sub	x14, x15, x14
   2b38c:	and	x15, x15, x8
   2b390:	add	x13, x15, x13
   2b394:	stp	x13, x14, [sp, #24]
   2b398:	ldr	x13, [x11, #8]
   2b39c:	ldr	x15, [x12]
   2b3a0:	umulh	x16, x15, x13
   2b3a4:	mul	x13, x15, x13
   2b3a8:	adds	x13, x14, x13
   2b3ac:	asr	x15, x13, #63
   2b3b0:	cinc	x14, x16, cs  // cs = hs, nlast
   2b3b4:	and	x16, x15, x8
   2b3b8:	sub	x15, x14, x15
   2b3bc:	add	x16, x16, x13
   2b3c0:	umulh	x17, x15, x10
   2b3c4:	mul	x15, x15, x10
   2b3c8:	mvn	x16, x16
   2b3cc:	add	x17, x14, x17
   2b3d0:	cmp	x16, x15
   2b3d4:	cinc	x15, x17, cc  // cc = lo, ul, last
   2b3d8:	mvn	x15, x15
   2b3dc:	umulh	x16, x15, x8
   2b3e0:	mul	x17, x15, x8
   2b3e4:	adds	x17, x13, x17
   2b3e8:	add	x13, x14, x16
   2b3ec:	cinc	x13, x13, cs  // cs = hs, nlast
   2b3f0:	add	x14, x13, x9
   2b3f4:	sub	x13, x14, x15
   2b3f8:	and	x14, x14, x8
   2b3fc:	cmp	x25, #0x1
   2b400:	add	x14, x14, x17
   2b404:	stp	x14, x13, [sp, #32]
   2b408:	b.eq	2b7bc <PyInit__decimal@@Base+0x24d08>  // b.none
   2b40c:	ldr	x15, [x11]
   2b410:	ldr	x16, [x12, #8]
   2b414:	umulh	x17, x16, x15
   2b418:	mul	x15, x16, x15
   2b41c:	adds	x14, x14, x15
   2b420:	asr	x16, x14, #63
   2b424:	cinc	x15, x17, cs  // cs = hs, nlast
   2b428:	and	x17, x16, x8
   2b42c:	sub	x16, x15, x16
   2b430:	add	x17, x17, x14
   2b434:	umulh	x18, x16, x10
   2b438:	mul	x16, x16, x10
   2b43c:	mvn	x17, x17
   2b440:	add	x18, x15, x18
   2b444:	cmp	x17, x16
   2b448:	cinc	x16, x18, cc  // cc = lo, ul, last
   2b44c:	mvn	x16, x16
   2b450:	add	x15, x15, x9
   2b454:	umulh	x17, x16, x8
   2b458:	mul	x18, x16, x8
   2b45c:	adds	x14, x14, x18
   2b460:	add	x15, x15, x17
   2b464:	cinc	x15, x15, cs  // cs = hs, nlast
   2b468:	sub	x16, x15, x16
   2b46c:	and	x15, x15, x8
   2b470:	add	x14, x15, x14
   2b474:	str	x16, [sp, #48]
   2b478:	str	x14, [sp, #32]
   2b47c:	ldr	x11, [x11, #8]
   2b480:	ldr	x12, [x12, #8]
   2b484:	umulh	x14, x12, x11
   2b488:	mul	x11, x12, x11
   2b48c:	adds	x11, x13, x11
   2b490:	cinc	x12, x14, cs  // cs = hs, nlast
   2b494:	adds	x11, x16, x11
   2b498:	asr	x13, x11, #63
   2b49c:	cinc	x12, x12, cs  // cs = hs, nlast
   2b4a0:	and	x14, x13, x8
   2b4a4:	sub	x13, x12, x13
   2b4a8:	add	x14, x14, x11
   2b4ac:	umulh	x15, x13, x10
   2b4b0:	mul	x10, x13, x10
   2b4b4:	mvn	x13, x14
   2b4b8:	add	x9, x12, x9
   2b4bc:	add	x12, x12, x15
   2b4c0:	cmp	x13, x10
   2b4c4:	cinc	x10, x12, cc  // cc = lo, ul, last
   2b4c8:	mvn	x10, x10
   2b4cc:	umulh	x12, x10, x8
   2b4d0:	mul	x13, x10, x8
   2b4d4:	adds	x11, x11, x13
   2b4d8:	add	x9, x9, x12
   2b4dc:	cinc	x9, x9, cs  // cs = hs, nlast
   2b4e0:	and	x8, x9, x8
   2b4e4:	sub	x10, x9, x10
   2b4e8:	add	x8, x8, x11
   2b4ec:	stp	x8, x10, [sp, #40]
   2b4f0:	b	2b7bc <PyInit__decimal@@Base+0x24d08>
   2b4f4:	ldrb	w8, [x19]
   2b4f8:	tbnz	w8, #5, 2b53c <PyInit__decimal@@Base+0x24a88>
   2b4fc:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2b500:	ldr	x9, [x19, #32]
   2b504:	ldr	x1, [x21, #1344]
   2b508:	cmp	x9, x1
   2b50c:	b.le	2b53c <PyInit__decimal@@Base+0x24a88>
   2b510:	strb	wzr, [sp, #24]
   2b514:	ldr	x0, [x19, #40]
   2b518:	add	x3, sp, #0x18
   2b51c:	mov	w2, #0x8                   	// #8
   2b520:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2b524:	str	x0, [x19, #40]
   2b528:	ldrb	w8, [sp, #24]
   2b52c:	cbnz	w8, 2b538 <PyInit__decimal@@Base+0x24a84>
   2b530:	ldr	x8, [x21, #1344]
   2b534:	str	x8, [x19, #32]
   2b538:	ldrb	w8, [x19]
   2b53c:	and	w8, w8, #0xf0
   2b540:	orr	w8, w8, #0x4
   2b544:	stp	xzr, xzr, [x19, #16]
   2b548:	strb	w8, [x19]
   2b54c:	str	xzr, [x19, #8]
   2b550:	ldr	w8, [x20]
   2b554:	orr	w8, w8, #0x100
   2b558:	str	w8, [x20]
   2b55c:	b	2b8ac <PyInit__decimal@@Base+0x24df8>
   2b560:	cmp	x25, #0x100
   2b564:	b.gt	2b6ac <PyInit__decimal@@Base+0x24bf8>
   2b568:	mov	w1, #0x8                   	// #8
   2b56c:	mov	x0, x23
   2b570:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   2b574:	cbz	x0, 2ba50 <PyInit__decimal@@Base+0x24f9c>
   2b578:	ldr	x3, [x28, #24]
   2b57c:	mov	x24, x0
   2b580:	cmp	x3, #0x1
   2b584:	b.ne	2b8dc <PyInit__decimal@@Base+0x24e28>  // b.any
   2b588:	ldr	x8, [x28, #40]
   2b58c:	ldr	x1, [x27, #40]
   2b590:	ldr	x2, [x27, #24]
   2b594:	mov	x0, x24
   2b598:	ldr	x3, [x8]
   2b59c:	bl	1b504 <PyInit__decimal@@Base+0x14a50>
   2b5a0:	b	2ba18 <PyInit__decimal@@Base+0x24f64>
   2b5a4:	cmp	x1, x10
   2b5a8:	b.le	2b5b8 <PyInit__decimal@@Base+0x24b04>
   2b5ac:	mov	x0, x19
   2b5b0:	mov	x2, x20
   2b5b4:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2b5b8:	ldr	x9, [x19, #40]
   2b5bc:	ldr	x8, [x19, #24]
   2b5c0:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   2b5c4:	add	x10, x10, #0x370
   2b5c8:	ldr	x11, [x10, #72]
   2b5cc:	add	x9, x9, x8, lsl #3
   2b5d0:	ldur	x9, [x9, #-8]
   2b5d4:	cmp	x11, x9
   2b5d8:	b.ls	2b604 <PyInit__decimal@@Base+0x24b50>  // b.plast
   2b5dc:	ldr	x11, [x10, #32]
   2b5e0:	cmp	x11, x9
   2b5e4:	b.ls	2b62c <PyInit__decimal@@Base+0x24b78>  // b.plast
   2b5e8:	ldr	x11, [x10, #16]
   2b5ec:	cmp	x11, x9
   2b5f0:	b.ls	2b74c <PyInit__decimal@@Base+0x24c98>  // b.plast
   2b5f4:	ldr	x10, [x10, #8]
   2b5f8:	cmp	x10, x9
   2b5fc:	mov	w9, #0x1                   	// #1
   2b600:	b	2b898 <PyInit__decimal@@Base+0x24de4>
   2b604:	ldr	x11, [x10, #112]
   2b608:	cmp	x11, x9
   2b60c:	b.ls	2b648 <PyInit__decimal@@Base+0x24b94>  // b.plast
   2b610:	ldr	x11, [x10, #88]
   2b614:	cmp	x11, x9
   2b618:	b.ls	2b75c <PyInit__decimal@@Base+0x24ca8>  // b.plast
   2b61c:	ldr	x10, [x10, #80]
   2b620:	cmp	x10, x9
   2b624:	mov	w9, #0xa                   	// #10
   2b628:	b	2b898 <PyInit__decimal@@Base+0x24de4>
   2b62c:	ldr	x11, [x10, #48]
   2b630:	cmp	x11, x9
   2b634:	b.ls	2b778 <PyInit__decimal@@Base+0x24cc4>  // b.plast
   2b638:	ldr	x10, [x10, #40]
   2b63c:	cmp	x10, x9
   2b640:	mov	w9, #0x5                   	// #5
   2b644:	b	2b898 <PyInit__decimal@@Base+0x24de4>
   2b648:	ldr	x11, [x10, #144]
   2b64c:	cmp	x11, x9
   2b650:	b.ls	2b794 <PyInit__decimal@@Base+0x24ce0>  // b.plast
   2b654:	ldr	x11, [x10, #128]
   2b658:	cmp	x11, x9
   2b65c:	b.ls	2b88c <PyInit__decimal@@Base+0x24dd8>  // b.plast
   2b660:	ldr	x10, [x10, #120]
   2b664:	cmp	x10, x9
   2b668:	mov	w9, #0xf                   	// #15
   2b66c:	b	2b898 <PyInit__decimal@@Base+0x24de4>
   2b670:	cbz	x23, 2b688 <PyInit__decimal@@Base+0x24bd4>
   2b674:	lsl	x2, x23, #3
   2b678:	add	x0, sp, #0x18
   2b67c:	mov	w1, wzr
   2b680:	bl	65b0 <memset@plt>
   2b684:	ldr	x25, [x28, #24]
   2b688:	cmp	x25, #0x1
   2b68c:	b.ne	2b7a4 <PyInit__decimal@@Base+0x24cf0>  // b.any
   2b690:	ldr	x8, [x28, #40]
   2b694:	ldr	x1, [x27, #40]
   2b698:	ldr	x2, [x27, #24]
   2b69c:	add	x0, sp, #0x18
   2b6a0:	ldr	x3, [x8]
   2b6a4:	bl	1b504 <PyInit__decimal@@Base+0x14a50>
   2b6a8:	b	2b7bc <PyInit__decimal@@Base+0x24d08>
   2b6ac:	cmp	x23, #0x400
   2b6b0:	b.hi	2b7f0 <PyInit__decimal@@Base+0x24d3c>  // b.pmore
   2b6b4:	mvn	x8, x25
   2b6b8:	cmp	x26, x8
   2b6bc:	b.hi	2babc <PyInit__decimal@@Base+0x25008>  // b.pmore
   2b6c0:	add	x8, x26, #0x1
   2b6c4:	lsr	x8, x8, #1
   2b6c8:	add	x8, x8, #0x1
   2b6cc:	mov	w9, #0x3                   	// #3
   2b6d0:	umulh	x9, x8, x9
   2b6d4:	cmp	xzr, x9
   2b6d8:	b.ne	2baf0 <PyInit__decimal@@Base+0x2503c>  // b.any
   2b6dc:	ldr	x9, [x27, #40]
   2b6e0:	add	x8, x8, x8, lsl #1
   2b6e4:	mov	w1, #0x8                   	// #8
   2b6e8:	str	x9, [sp]
   2b6ec:	ldr	x9, [x28, #40]
   2b6f0:	str	x9, [sp, #8]
   2b6f4:	add	x9, x23, #0x1
   2b6f8:	cmp	x8, x9
   2b6fc:	csel	x0, x8, x9, hi  // hi = pmore
   2b700:	str	x0, [sp, #16]
   2b704:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   2b708:	cbz	x0, 2ba50 <PyInit__decimal@@Base+0x24f9c>
   2b70c:	mov	x24, x0
   2b710:	mov	w1, #0x10                  	// #16
   2b714:	mov	x0, x26
   2b718:	bl	37064 <PyInit__decimal@@Base+0x305b0>
   2b71c:	cbz	x0, 2b9b4 <PyInit__decimal@@Base+0x24f00>
   2b720:	mov	w1, #0x8                   	// #8
   2b724:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   2b728:	cbz	x0, 2b9a0 <PyInit__decimal@@Base+0x24eec>
   2b72c:	ldp	x1, x2, [sp]
   2b730:	mov	x23, x0
   2b734:	mov	x0, x24
   2b738:	mov	x3, x23
   2b73c:	mov	x4, x26
   2b740:	mov	x5, x25
   2b744:	bl	37134 <PyInit__decimal@@Base+0x30680>
   2b748:	b	2ba08 <PyInit__decimal@@Base+0x24f54>
   2b74c:	ldr	x10, [x10, #24]
   2b750:	cmp	x10, x9
   2b754:	mov	w9, #0x3                   	// #3
   2b758:	b	2b898 <PyInit__decimal@@Base+0x24de4>
   2b75c:	ldr	x11, [x10, #104]
   2b760:	cmp	x11, x9
   2b764:	b.ls	2b8cc <PyInit__decimal@@Base+0x24e18>  // b.plast
   2b768:	ldr	x10, [x10, #96]
   2b76c:	cmp	x10, x9
   2b770:	mov	w9, #0xc                   	// #12
   2b774:	b	2b898 <PyInit__decimal@@Base+0x24de4>
   2b778:	ldr	x11, [x10, #64]
   2b77c:	cmp	x11, x9
   2b780:	b.ls	2b8d4 <PyInit__decimal@@Base+0x24e20>  // b.plast
   2b784:	ldr	x10, [x10, #56]
   2b788:	cmp	x10, x9
   2b78c:	mov	w9, #0x7                   	// #7
   2b790:	b	2b898 <PyInit__decimal@@Base+0x24de4>
   2b794:	ldr	x10, [x10, #152]
   2b798:	cmp	x10, x9
   2b79c:	mov	w9, #0x13                  	// #19
   2b7a0:	b	2b898 <PyInit__decimal@@Base+0x24de4>
   2b7a4:	ldr	x1, [x28, #40]
   2b7a8:	ldr	x2, [x27, #40]
   2b7ac:	ldr	x4, [x27, #24]
   2b7b0:	add	x0, sp, #0x18
   2b7b4:	mov	x3, x25
   2b7b8:	bl	1b5ac <PyInit__decimal@@Base+0x14af8>
   2b7bc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2b7c0:	ldr	x9, [x8, #1344]
   2b7c4:	ldr	x8, [x19, #32]
   2b7c8:	cmp	x9, x23
   2b7cc:	csel	x1, x23, x9, lt  // lt = tstop
   2b7d0:	cmp	x1, x8
   2b7d4:	b.eq	2b834 <PyInit__decimal@@Base+0x24d80>  // b.none
   2b7d8:	ldrb	w9, [x19]
   2b7dc:	tbnz	w9, #5, 2b81c <PyInit__decimal@@Base+0x24d68>
   2b7e0:	mov	x0, x19
   2b7e4:	mov	x2, x20
   2b7e8:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2b7ec:	b	2b830 <PyInit__decimal@@Base+0x24d7c>
   2b7f0:	ldr	x0, [x27, #40]
   2b7f4:	ldr	x1, [x28, #40]
   2b7f8:	mov	x8, #0x300000000           	// #12884901888
   2b7fc:	cmp	x23, x8
   2b800:	b.hi	2b928 <PyInit__decimal@@Base+0x24e74>  // b.pmore
   2b804:	add	x4, sp, #0x10
   2b808:	mov	x2, x26
   2b80c:	mov	x3, x25
   2b810:	bl	36c90 <PyInit__decimal@@Base+0x301dc>
   2b814:	mov	x24, x0
   2b818:	b	2ba18 <PyInit__decimal@@Base+0x24f64>
   2b81c:	cmp	x1, x8
   2b820:	b.le	2b834 <PyInit__decimal@@Base+0x24d80>
   2b824:	mov	x0, x19
   2b828:	mov	x2, x20
   2b82c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2b830:	cbz	w0, 2b8ac <PyInit__decimal@@Base+0x24df8>
   2b834:	ldr	x24, [x19, #40]
   2b838:	cbz	x23, 2b280 <PyInit__decimal@@Base+0x247cc>
   2b83c:	cmp	x23, #0x4
   2b840:	b.cc	2b868 <PyInit__decimal@@Base+0x24db4>  // b.lo, b.ul, b.last
   2b844:	lsl	x8, x23, #3
   2b848:	add	x9, sp, #0x18
   2b84c:	add	x10, x24, x8
   2b850:	add	x11, x9, x8
   2b854:	cmp	x9, x10
   2b858:	cset	w8, cc  // cc = lo, ul, last
   2b85c:	cmp	x24, x11
   2b860:	b.cs	2b8f4 <PyInit__decimal@@Base+0x24e40>  // b.hs, b.nlast
   2b864:	tbz	w8, #0, 2b8f4 <PyInit__decimal@@Base+0x24e40>
   2b868:	mov	x8, xzr
   2b86c:	add	x9, sp, #0x18
   2b870:	lsl	x10, x8, #3
   2b874:	ldr	x11, [x9, x10]
   2b878:	add	x8, x8, #0x1
   2b87c:	cmp	x23, x8
   2b880:	str	x11, [x24, x10]
   2b884:	b.ne	2b870 <PyInit__decimal@@Base+0x24dbc>  // b.any
   2b888:	b	2b280 <PyInit__decimal@@Base+0x247cc>
   2b88c:	ldr	x10, [x10, #136]
   2b890:	cmp	x10, x9
   2b894:	mov	w9, #0x11                  	// #17
   2b898:	cinc	x9, x9, ls  // ls = plast
   2b89c:	mov	w10, #0x13                  	// #19
   2b8a0:	madd	x8, x8, x10, x9
   2b8a4:	sub	x8, x8, #0x13
   2b8a8:	str	x8, [x19, #16]
   2b8ac:	add	sp, sp, #0x220
   2b8b0:	ldp	x20, x19, [sp, #80]
   2b8b4:	ldp	x22, x21, [sp, #64]
   2b8b8:	ldp	x24, x23, [sp, #48]
   2b8bc:	ldp	x26, x25, [sp, #32]
   2b8c0:	ldp	x28, x27, [sp, #16]
   2b8c4:	ldp	x29, x30, [sp], #96
   2b8c8:	ret
   2b8cc:	mov	w9, #0xe                   	// #14
   2b8d0:	b	2b89c <PyInit__decimal@@Base+0x24de8>
   2b8d4:	mov	w9, #0x9                   	// #9
   2b8d8:	b	2b89c <PyInit__decimal@@Base+0x24de8>
   2b8dc:	ldr	x1, [x28, #40]
   2b8e0:	ldr	x2, [x27, #40]
   2b8e4:	ldr	x4, [x27, #24]
   2b8e8:	mov	x0, x24
   2b8ec:	bl	1b5ac <PyInit__decimal@@Base+0x14af8>
   2b8f0:	b	2ba18 <PyInit__decimal@@Base+0x24f64>
   2b8f4:	and	x8, x23, #0xfffffffffffffffc
   2b8f8:	mov	x10, xzr
   2b8fc:	mov	x11, x8
   2b900:	add	x12, x9, x10
   2b904:	ldp	q0, q1, [x12]
   2b908:	add	x12, x24, x10
   2b90c:	subs	x11, x11, #0x4
   2b910:	add	x10, x10, #0x20
   2b914:	stp	q0, q1, [x12]
   2b918:	b.ne	2b900 <PyInit__decimal@@Base+0x24e4c>  // b.any
   2b91c:	cmp	x23, x8
   2b920:	b.eq	2b280 <PyInit__decimal@@Base+0x247cc>  // b.none
   2b924:	b	2b86c <PyInit__decimal@@Base+0x24db8>
   2b928:	mvn	x8, x25
   2b92c:	cmp	x26, x8
   2b930:	b.hi	2babc <PyInit__decimal@@Base+0x25008>  // b.pmore
   2b934:	cmn	x23, #0x1
   2b938:	b.eq	2babc <PyInit__decimal@@Base+0x25008>  // b.none
   2b93c:	add	x8, x26, #0x1
   2b940:	lsr	x8, x8, #1
   2b944:	add	x8, x8, #0x1
   2b948:	mov	w9, #0x3                   	// #3
   2b94c:	umulh	x9, x8, x9
   2b950:	cmp	xzr, x9
   2b954:	stp	x1, x0, [sp]
   2b958:	b.ne	2baf0 <PyInit__decimal@@Base+0x2503c>  // b.any
   2b95c:	add	x9, x23, #0x1
   2b960:	add	x8, x8, x8, lsl #1
   2b964:	cmp	x8, x9
   2b968:	csel	x0, x8, x9, hi  // hi = pmore
   2b96c:	mov	w1, #0x8                   	// #8
   2b970:	str	x0, [sp, #16]
   2b974:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   2b978:	cbz	x0, 2ba50 <PyInit__decimal@@Base+0x24f9c>
   2b97c:	mov	x24, x0
   2b980:	mov	x1, #0x180000000           	// #6442450944
   2b984:	mov	x0, x26
   2b988:	bl	37064 <PyInit__decimal@@Base+0x305b0>
   2b98c:	cbz	x0, 2b9d0 <PyInit__decimal@@Base+0x24f1c>
   2b990:	mov	w1, #0x8                   	// #8
   2b994:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   2b998:	mov	x23, x0
   2b99c:	cbnz	x0, 2b9d4 <PyInit__decimal@@Base+0x24f20>
   2b9a0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2b9a4:	ldr	x8, [x8, #1376]
   2b9a8:	mov	x0, x24
   2b9ac:	blr	x8
   2b9b0:	b	2ba50 <PyInit__decimal@@Base+0x24f9c>
   2b9b4:	ldp	x1, x2, [sp]
   2b9b8:	mov	x0, x24
   2b9bc:	mov	x3, xzr
   2b9c0:	mov	x4, x26
   2b9c4:	mov	x5, x25
   2b9c8:	bl	37134 <PyInit__decimal@@Base+0x30680>
   2b9cc:	b	2ba18 <PyInit__decimal@@Base+0x24f64>
   2b9d0:	mov	x23, xzr
   2b9d4:	ldp	x2, x1, [sp]
   2b9d8:	mov	x0, x24
   2b9dc:	mov	x3, x23
   2b9e0:	mov	x4, x26
   2b9e4:	mov	x5, x25
   2b9e8:	bl	373f8 <PyInit__decimal@@Base+0x30944>
   2b9ec:	cbnz	w0, 2ba04 <PyInit__decimal@@Base+0x24f50>
   2b9f0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2b9f4:	ldr	x8, [x8, #1376]
   2b9f8:	mov	x0, x24
   2b9fc:	blr	x8
   2ba00:	mov	x24, xzr
   2ba04:	cbz	x23, 2ba18 <PyInit__decimal@@Base+0x24f64>
   2ba08:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ba0c:	ldr	x8, [x8, #1376]
   2ba10:	mov	x0, x23
   2ba14:	blr	x8
   2ba18:	cbz	x24, 2ba50 <PyInit__decimal@@Base+0x24f9c>
   2ba1c:	ldrb	w8, [x19]
   2ba20:	cmp	w8, #0x1f
   2ba24:	b.hi	2ba3c <PyInit__decimal@@Base+0x24f88>  // b.pmore
   2ba28:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ba2c:	ldr	x8, [x8, #1376]
   2ba30:	ldr	x0, [x19, #40]
   2ba34:	blr	x8
   2ba38:	ldrb	w8, [x19]
   2ba3c:	ldr	x23, [sp, #16]
   2ba40:	and	w8, w8, #0x1f
   2ba44:	strb	w8, [x19]
   2ba48:	stp	x23, x24, [x19, #32]
   2ba4c:	b	2b280 <PyInit__decimal@@Base+0x247cc>
   2ba50:	ldrb	w8, [x19]
   2ba54:	tbnz	w8, #5, 2ba98 <PyInit__decimal@@Base+0x24fe4>
   2ba58:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ba5c:	ldr	x9, [x19, #32]
   2ba60:	ldr	x1, [x21, #1344]
   2ba64:	cmp	x9, x1
   2ba68:	b.le	2ba98 <PyInit__decimal@@Base+0x24fe4>
   2ba6c:	strb	wzr, [sp, #24]
   2ba70:	ldr	x0, [x19, #40]
   2ba74:	add	x3, sp, #0x18
   2ba78:	mov	w2, #0x8                   	// #8
   2ba7c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2ba80:	str	x0, [x19, #40]
   2ba84:	ldrb	w8, [sp, #24]
   2ba88:	cbnz	w8, 2ba94 <PyInit__decimal@@Base+0x24fe0>
   2ba8c:	ldr	x8, [x21, #1344]
   2ba90:	str	x8, [x19, #32]
   2ba94:	ldrb	w8, [x19]
   2ba98:	and	w8, w8, #0xf0
   2ba9c:	orr	w8, w8, #0x4
   2baa0:	stp	xzr, xzr, [x19, #16]
   2baa4:	strb	w8, [x19]
   2baa8:	str	xzr, [x19, #8]
   2baac:	ldr	w8, [x20]
   2bab0:	orr	w8, w8, #0x200
   2bab4:	str	w8, [x20]
   2bab8:	b	2b8ac <PyInit__decimal@@Base+0x24df8>
   2babc:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
   2bac0:	ldr	x19, [x19, #3904]
   2bac4:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   2bac8:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x3854c>
   2bacc:	add	x1, x1, #0xaa
   2bad0:	ldr	x0, [x19]
   2bad4:	add	x2, x2, #0xb9
   2bad8:	mov	w3, #0x253                 	// #595
   2badc:	bl	69b0 <fprintf@plt>
   2bae0:	ldr	x3, [x19]
   2bae4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   2bae8:	add	x0, x0, #0x18d
   2baec:	b	2bb20 <PyInit__decimal@@Base+0x2506c>
   2baf0:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
   2baf4:	ldr	x19, [x19, #3904]
   2baf8:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   2bafc:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x3854c>
   2bb00:	add	x1, x1, #0xaa
   2bb04:	ldr	x0, [x19]
   2bb08:	add	x2, x2, #0xb9
   2bb0c:	mov	w3, #0x26c                 	// #620
   2bb10:	bl	69b0 <fprintf@plt>
   2bb14:	ldr	x3, [x19]
   2bb18:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   2bb1c:	add	x0, x0, #0x1b7
   2bb20:	mov	w1, #0x29                  	// #41
   2bb24:	mov	w2, #0x1                   	// #1
   2bb28:	bl	6870 <fwrite@plt>
   2bb2c:	ldr	x1, [x19]
   2bb30:	mov	w0, #0xa                   	// #10
   2bb34:	bl	64f0 <fputc@plt>
   2bb38:	bl	6700 <abort@plt>
   2bb3c:	stp	x29, x30, [sp, #-80]!
   2bb40:	str	x28, [sp, #16]
   2bb44:	stp	x24, x23, [sp, #32]
   2bb48:	stp	x22, x21, [sp, #48]
   2bb4c:	stp	x20, x19, [sp, #64]
   2bb50:	mov	x29, sp
   2bb54:	sub	sp, sp, #0x4d0
   2bb58:	mov	w9, #0x30                  	// #48
   2bb5c:	strb	w9, [sp, #576]
   2bb60:	mov	w9, #0x40                  	// #64
   2bb64:	str	x9, [sp, #608]
   2bb68:	add	x9, sp, #0x270
   2bb6c:	str	x9, [sp, #616]
   2bb70:	mov	w9, #0x90                  	// #144
   2bb74:	strb	w9, [sp, #520]
   2bb78:	mov	w9, #0x1                   	// #1
   2bb7c:	add	x8, sp, #0x208
   2bb80:	dup	v0.2d, x9
   2bb84:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3154c>
   2bb88:	stur	q0, [x8, #24]
   2bb8c:	ldr	q0, [x9, #3264]
   2bb90:	mov	x19, x2
   2bb94:	mov	x21, x1
   2bb98:	mov	w9, #0xa                   	// #10
   2bb9c:	stur	q0, [x8, #8]
   2bba0:	mov	w8, #0x4c0                 	// #1216
   2bba4:	sub	x8, x8, x1
   2bba8:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   2bbac:	str	x9, [sp, #568]
   2bbb0:	add	x9, sp, #0x238
   2bbb4:	bic	x2, x8, x8, asr #63
   2bbb8:	add	x1, x1, #0xc58
   2bbbc:	mov	x3, x19
   2bbc0:	mov	x20, x0
   2bbc4:	str	xzr, [sp, #584]
   2bbc8:	str	xzr, [sp, #592]
   2bbcc:	str	xzr, [sp, #600]
   2bbd0:	str	x9, [sp, #560]
   2bbd4:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   2bbd8:	cmn	x0, #0x1
   2bbdc:	b.eq	2bc38 <PyInit__decimal@@Base+0x25184>  // b.none
   2bbe0:	ldr	x8, [x20, #16]
   2bbe4:	mov	w9, #0x1                   	// #1
   2bbe8:	mov	x22, x0
   2bbec:	sub	x0, x29, #0x60
   2bbf0:	sub	x8, x9, x8
   2bbf4:	str	x8, [x20, #8]
   2bbf8:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2bbfc:	cmp	x21, #0x4bf
   2bc00:	b.gt	2bca0 <PyInit__decimal@@Base+0x251ec>
   2bc04:	ldur	w8, [x29, #-60]
   2bc08:	stur	x21, [x29, #-96]
   2bc0c:	cmp	w8, #0x7
   2bc10:	b.hi	2c044 <PyInit__decimal@@Base+0x25590>  // b.pmore
   2bc14:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   2bc18:	add	x9, x9, #0x71a
   2bc1c:	adr	x10, 2bc2c <PyInit__decimal@@Base+0x25178>
   2bc20:	ldrh	w11, [x9, x8, lsl #1]
   2bc24:	add	x10, x10, x11, lsl #2
   2bc28:	br	x10
   2bc2c:	cmp	x22, #0x0
   2bc30:	cset	w8, ne  // ne = any
   2bc34:	b	2be90 <PyInit__decimal@@Base+0x253dc>
   2bc38:	ldrb	w8, [x20]
   2bc3c:	tbnz	w8, #5, 2bc80 <PyInit__decimal@@Base+0x251cc>
   2bc40:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2bc44:	ldr	x9, [x20, #32]
   2bc48:	ldr	x1, [x21, #1344]
   2bc4c:	cmp	x9, x1
   2bc50:	b.le	2bc80 <PyInit__decimal@@Base+0x251cc>
   2bc54:	strb	wzr, [sp, #8]
   2bc58:	ldr	x0, [x20, #40]
   2bc5c:	add	x3, sp, #0x8
   2bc60:	mov	w2, #0x8                   	// #8
   2bc64:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2bc68:	str	x0, [x20, #40]
   2bc6c:	ldrb	w8, [sp, #8]
   2bc70:	cbnz	w8, 2bc7c <PyInit__decimal@@Base+0x251c8>
   2bc74:	ldr	x8, [x21, #1344]
   2bc78:	str	x8, [x20, #32]
   2bc7c:	ldrb	w8, [x20]
   2bc80:	and	w8, w8, #0xf0
   2bc84:	orr	w8, w8, #0x4
   2bc88:	stp	xzr, xzr, [x20, #16]
   2bc8c:	strb	w8, [x20]
   2bc90:	str	xzr, [x20, #8]
   2bc94:	ldr	w8, [x19]
   2bc98:	orr	w8, w8, #0x200
   2bc9c:	b	2c050 <PyInit__decimal@@Base+0x2559c>
   2bca0:	sub	x0, x29, #0x30
   2bca4:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2bca8:	mov	w8, #0x8                   	// #8
   2bcac:	stur	w8, [x29, #-12]
   2bcb0:	ldr	x8, [x20, #8]
   2bcb4:	add	x10, x21, #0x2
   2bcb8:	neg	x8, x8
   2bcbc:	cmp	x10, x8
   2bcc0:	b.le	2bde0 <PyInit__decimal@@Base+0x2532c>
   2bcc4:	mov	w9, #0xffffffff            	// #-1
   2bcc8:	add	x11, sp, #0x8
   2bccc:	add	x12, x10, #0x2
   2bcd0:	add	x10, x10, #0x3
   2bcd4:	cmp	x12, #0x0
   2bcd8:	csel	x10, x10, x12, lt  // lt = tstop
   2bcdc:	asr	x10, x10, #1
   2bce0:	add	w9, w9, #0x1
   2bce4:	cmp	x10, x8
   2bce8:	str	x10, [x11, w9, sxtw #3]
   2bcec:	b.gt	2bccc <PyInit__decimal@@Base+0x25218>
   2bcf0:	tbnz	w9, #31, 2bde0 <PyInit__decimal@@Base+0x2532c>
   2bcf4:	ldrb	w8, [x20]
   2bcf8:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
   2bcfc:	mov	w23, w9
   2bd00:	add	x24, sp, #0x8
   2bd04:	add	x22, x22, #0xc88
   2bd08:	ldr	x9, [x24, x23, lsl #3]
   2bd0c:	eor	w8, w8, #0x1
   2bd10:	add	x0, sp, #0x240
   2bd14:	sub	x2, x29, #0x30
   2bd18:	lsl	x9, x9, #1
   2bd1c:	add	x9, x9, #0x3
   2bd20:	mov	x1, x20
   2bd24:	mov	x3, x19
   2bd28:	stur	x9, [x29, #-48]
   2bd2c:	strb	w8, [x20]
   2bd30:	bl	2a7dc <PyInit__decimal@@Base+0x23d28>
   2bd34:	ldrb	w8, [x20]
   2bd38:	add	x0, sp, #0x240
   2bd3c:	add	x1, sp, #0x208
   2bd40:	add	x2, sp, #0x240
   2bd44:	eor	w8, w8, #0x1
   2bd48:	sub	x3, x29, #0x30
   2bd4c:	mov	x4, x19
   2bd50:	strb	w8, [x20]
   2bd54:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   2bd58:	add	x0, sp, #0x240
   2bd5c:	sub	x1, x29, #0x30
   2bd60:	mov	x2, x19
   2bd64:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2bd68:	add	x0, sp, #0x240
   2bd6c:	add	x1, sp, #0x240
   2bd70:	sub	x3, x29, #0x60
   2bd74:	mov	x2, x22
   2bd78:	mov	x4, x19
   2bd7c:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   2bd80:	add	x2, sp, #0x240
   2bd84:	sub	x3, x29, #0x60
   2bd88:	mov	x0, x20
   2bd8c:	mov	x1, x20
   2bd90:	mov	x4, x19
   2bd94:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   2bd98:	ldrb	w8, [x20]
   2bd9c:	tst	w8, #0xe
   2bda0:	b.ne	2bdac <PyInit__decimal@@Base+0x252f8>  // b.any
   2bda4:	subs	x23, x23, #0x1
   2bda8:	b.ge	2bd08 <PyInit__decimal@@Base+0x25254>  // b.tcont
   2bdac:	ldrb	w8, [sp, #576]
   2bdb0:	cmp	w8, #0x1f
   2bdb4:	b.hi	2bdcc <PyInit__decimal@@Base+0x25318>  // b.pmore
   2bdb8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2bdbc:	ldr	x8, [x8, #1376]
   2bdc0:	ldr	x0, [sp, #616]
   2bdc4:	blr	x8
   2bdc8:	ldrb	w8, [sp, #576]
   2bdcc:	tbnz	w8, #4, 2bde0 <PyInit__decimal@@Base+0x2532c>
   2bdd0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2bdd4:	ldr	x8, [x8, #1376]
   2bdd8:	add	x0, sp, #0x240
   2bddc:	blr	x8
   2bde0:	sub	x1, x29, #0x60
   2bde4:	mov	x0, x20
   2bde8:	mov	x2, x19
   2bdec:	stur	x21, [x29, #-96]
   2bdf0:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2bdf4:	b	2c054 <PyInit__decimal@@Base+0x255a0>
   2bdf8:	cbz	x22, 2c044 <PyInit__decimal@@Base+0x25590>
   2bdfc:	ldrb	w8, [x20]
   2be00:	mvn	w8, w8
   2be04:	and	w8, w8, #0x1
   2be08:	b	2be90 <PyInit__decimal@@Base+0x253dc>
   2be0c:	cbz	x22, 2c044 <PyInit__decimal@@Base+0x25590>
   2be10:	ldrb	w8, [x20]
   2be14:	and	w8, w8, #0x1
   2be18:	b	2be90 <PyInit__decimal@@Base+0x253dc>
   2be1c:	cmp	x22, #0x4
   2be20:	cset	w8, hi  // hi = pmore
   2be24:	b	2be90 <PyInit__decimal@@Base+0x253dc>
   2be28:	cmp	x22, #0x5
   2be2c:	cset	w8, hi  // hi = pmore
   2be30:	b	2be90 <PyInit__decimal@@Base+0x253dc>
   2be34:	cmp	x22, #0x5
   2be38:	b.hi	2be94 <PyInit__decimal@@Base+0x253e0>  // b.pmore
   2be3c:	b.ne	2c044 <PyInit__decimal@@Base+0x25590>  // b.any
   2be40:	ldr	x8, [x20, #40]
   2be44:	ldr	w8, [x8]
   2be48:	and	w8, w8, #0x1
   2be4c:	b	2be90 <PyInit__decimal@@Base+0x253dc>
   2be50:	ldr	x8, [x20, #40]
   2be54:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   2be58:	movk	x9, #0xcccd
   2be5c:	mov	w10, #0xa                   	// #10
   2be60:	ldr	x8, [x8]
   2be64:	cmp	x22, #0x0
   2be68:	cset	w11, ne  // ne = any
   2be6c:	umulh	x9, x8, x9
   2be70:	lsr	x9, x9, #3
   2be74:	msub	w8, w9, w10, w8
   2be78:	cmp	w8, #0x0
   2be7c:	cset	w9, eq  // eq = none
   2be80:	cmp	w8, #0x5
   2be84:	cset	w8, eq  // eq = none
   2be88:	orr	w8, w9, w8
   2be8c:	and	w8, w11, w8
   2be90:	cbz	w8, 2c044 <PyInit__decimal@@Base+0x25590>
   2be94:	ldr	x0, [x20, #40]
   2be98:	ldr	x1, [x20, #24]
   2be9c:	bl	1b324 <PyInit__decimal@@Base+0x14870>
   2bea0:	cbz	x0, 2bedc <PyInit__decimal@@Base+0x25428>
   2bea4:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2bea8:	ldr	x10, [x9, #1344]
   2beac:	ldp	x8, x9, [x20, #24]
   2beb0:	add	x11, x8, #0x1
   2beb4:	cmp	x10, x11
   2beb8:	csinc	x1, x10, x8, ge  // ge = tcont
   2bebc:	cmp	x1, x9
   2bec0:	b.eq	2bf04 <PyInit__decimal@@Base+0x25450>  // b.none
   2bec4:	ldrb	w10, [x20]
   2bec8:	tbnz	w10, #5, 2bee8 <PyInit__decimal@@Base+0x25434>
   2becc:	mov	x0, x20
   2bed0:	mov	x2, x19
   2bed4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2bed8:	b	2befc <PyInit__decimal@@Base+0x25448>
   2bedc:	ldr	x9, [x20, #40]
   2bee0:	ldr	x8, [x20, #24]
   2bee4:	b	2bf1c <PyInit__decimal@@Base+0x25468>
   2bee8:	cmp	x1, x9
   2beec:	b.le	2bf04 <PyInit__decimal@@Base+0x25450>
   2bef0:	mov	x0, x20
   2bef4:	mov	x2, x19
   2bef8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2befc:	cbz	w0, 2c044 <PyInit__decimal@@Base+0x25590>
   2bf00:	ldr	x8, [x20, #24]
   2bf04:	ldr	x9, [x20, #40]
   2bf08:	mov	w10, #0x1                   	// #1
   2bf0c:	str	x10, [x9, x8, lsl #3]
   2bf10:	ldr	x8, [x20, #24]
   2bf14:	add	x8, x8, #0x1
   2bf18:	str	x8, [x20, #24]
   2bf1c:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   2bf20:	add	x9, x9, x8, lsl #3
   2bf24:	add	x10, x10, #0x370
   2bf28:	ldur	x9, [x9, #-8]
   2bf2c:	ldr	x11, [x10, #72]
   2bf30:	cmp	x11, x9
   2bf34:	b.ls	2bf60 <PyInit__decimal@@Base+0x254ac>  // b.plast
   2bf38:	ldr	x11, [x10, #32]
   2bf3c:	cmp	x11, x9
   2bf40:	b.ls	2bf88 <PyInit__decimal@@Base+0x254d4>  // b.plast
   2bf44:	ldr	x11, [x10, #16]
   2bf48:	cmp	x11, x9
   2bf4c:	b.ls	2bfcc <PyInit__decimal@@Base+0x25518>  // b.plast
   2bf50:	ldr	x10, [x10, #8]
   2bf54:	cmp	x10, x9
   2bf58:	mov	w9, #0x1                   	// #1
   2bf5c:	b	2c030 <PyInit__decimal@@Base+0x2557c>
   2bf60:	ldr	x11, [x10, #112]
   2bf64:	cmp	x11, x9
   2bf68:	b.ls	2bfa4 <PyInit__decimal@@Base+0x254f0>  // b.plast
   2bf6c:	ldr	x11, [x10, #88]
   2bf70:	cmp	x11, x9
   2bf74:	b.ls	2bfdc <PyInit__decimal@@Base+0x25528>  // b.plast
   2bf78:	ldr	x10, [x10, #80]
   2bf7c:	cmp	x10, x9
   2bf80:	mov	w9, #0xa                   	// #10
   2bf84:	b	2c030 <PyInit__decimal@@Base+0x2557c>
   2bf88:	ldr	x11, [x10, #48]
   2bf8c:	cmp	x11, x9
   2bf90:	b.ls	2bff8 <PyInit__decimal@@Base+0x25544>  // b.plast
   2bf94:	ldr	x10, [x10, #40]
   2bf98:	cmp	x10, x9
   2bf9c:	mov	w9, #0x5                   	// #5
   2bfa0:	b	2c030 <PyInit__decimal@@Base+0x2557c>
   2bfa4:	ldr	x11, [x10, #144]
   2bfa8:	cmp	x11, x9
   2bfac:	b.ls	2c014 <PyInit__decimal@@Base+0x25560>  // b.plast
   2bfb0:	ldr	x11, [x10, #128]
   2bfb4:	cmp	x11, x9
   2bfb8:	b.ls	2c024 <PyInit__decimal@@Base+0x25570>  // b.plast
   2bfbc:	ldr	x10, [x10, #120]
   2bfc0:	cmp	x10, x9
   2bfc4:	mov	w9, #0xf                   	// #15
   2bfc8:	b	2c030 <PyInit__decimal@@Base+0x2557c>
   2bfcc:	ldr	x10, [x10, #24]
   2bfd0:	cmp	x10, x9
   2bfd4:	mov	w9, #0x3                   	// #3
   2bfd8:	b	2c030 <PyInit__decimal@@Base+0x2557c>
   2bfdc:	ldr	x11, [x10, #104]
   2bfe0:	cmp	x11, x9
   2bfe4:	b.ls	2c070 <PyInit__decimal@@Base+0x255bc>  // b.plast
   2bfe8:	ldr	x10, [x10, #96]
   2bfec:	cmp	x10, x9
   2bff0:	mov	w9, #0xc                   	// #12
   2bff4:	b	2c030 <PyInit__decimal@@Base+0x2557c>
   2bff8:	ldr	x11, [x10, #64]
   2bffc:	cmp	x11, x9
   2c000:	b.ls	2c078 <PyInit__decimal@@Base+0x255c4>  // b.plast
   2c004:	ldr	x10, [x10, #56]
   2c008:	cmp	x10, x9
   2c00c:	mov	w9, #0x7                   	// #7
   2c010:	b	2c030 <PyInit__decimal@@Base+0x2557c>
   2c014:	ldr	x10, [x10, #152]
   2c018:	cmp	x10, x9
   2c01c:	mov	w9, #0x13                  	// #19
   2c020:	b	2c030 <PyInit__decimal@@Base+0x2557c>
   2c024:	ldr	x10, [x10, #136]
   2c028:	cmp	x10, x9
   2c02c:	mov	w9, #0x11                  	// #17
   2c030:	cinc	x9, x9, ls  // ls = plast
   2c034:	mov	w10, #0x13                  	// #19
   2c038:	madd	x8, x8, x10, x9
   2c03c:	sub	x8, x8, #0x13
   2c040:	str	x8, [x20, #16]
   2c044:	ldr	w8, [x19]
   2c048:	mov	w9, #0x1040                	// #4160
   2c04c:	orr	w8, w8, w9
   2c050:	str	w8, [x19]
   2c054:	add	sp, sp, #0x4d0
   2c058:	ldp	x20, x19, [sp, #64]
   2c05c:	ldp	x22, x21, [sp, #48]
   2c060:	ldp	x24, x23, [sp, #32]
   2c064:	ldr	x28, [sp, #16]
   2c068:	ldp	x29, x30, [sp], #80
   2c06c:	ret
   2c070:	mov	w9, #0xe                   	// #14
   2c074:	b	2c034 <PyInit__decimal@@Base+0x25580>
   2c078:	mov	w9, #0x9                   	// #9
   2c07c:	b	2c034 <PyInit__decimal@@Base+0x25580>
   2c080:	stp	x29, x30, [sp, #-48]!
   2c084:	str	x21, [sp, #16]
   2c088:	stp	x20, x19, [sp, #32]
   2c08c:	mov	x29, sp
   2c090:	mov	x19, x4
   2c094:	mov	x20, x3
   2c098:	mov	x21, x0
   2c09c:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   2c0a0:	mov	x0, x21
   2c0a4:	mov	x1, x20
   2c0a8:	mov	x2, x19
   2c0ac:	ldp	x20, x19, [sp, #32]
   2c0b0:	ldr	x21, [sp, #16]
   2c0b4:	ldp	x29, x30, [sp], #48
   2c0b8:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   2c0bc:	stp	x29, x30, [sp, #-96]!
   2c0c0:	stp	x28, x27, [sp, #16]
   2c0c4:	stp	x26, x25, [sp, #32]
   2c0c8:	stp	x24, x23, [sp, #48]
   2c0cc:	stp	x22, x21, [sp, #64]
   2c0d0:	stp	x20, x19, [sp, #80]
   2c0d4:	mov	x29, sp
   2c0d8:	sub	sp, sp, #0x910
   2c0dc:	ldrb	w8, [x1]
   2c0e0:	mov	x20, x3
   2c0e4:	mov	x22, x2
   2c0e8:	mov	x21, x1
   2c0ec:	tst	w8, #0xe
   2c0f0:	mov	x19, x0
   2c0f4:	b.eq	2c16c <PyInit__decimal@@Base+0x256b8>  // b.none
   2c0f8:	mov	x0, x19
   2c0fc:	mov	x1, x21
   2c100:	mov	x2, x22
   2c104:	mov	x3, x20
   2c108:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   2c10c:	cbnz	w0, 2c434 <PyInit__decimal@@Base+0x25980>
   2c110:	ldrb	w9, [x21]
   2c114:	ldrb	w8, [x19]
   2c118:	tbnz	w9, #0, 2c250 <PyInit__decimal@@Base+0x2579c>
   2c11c:	tbnz	w8, #5, 2c160 <PyInit__decimal@@Base+0x256ac>
   2c120:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   2c124:	ldr	x9, [x19, #32]
   2c128:	ldr	x1, [x20, #1344]
   2c12c:	cmp	x9, x1
   2c130:	b.le	2c160 <PyInit__decimal@@Base+0x256ac>
   2c134:	strb	wzr, [sp, #1744]
   2c138:	ldr	x0, [x19, #40]
   2c13c:	add	x3, sp, #0x6d0
   2c140:	mov	w2, #0x8                   	// #8
   2c144:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2c148:	str	x0, [x19, #40]
   2c14c:	ldrb	w8, [sp, #1744]
   2c150:	cbnz	w8, 2c15c <PyInit__decimal@@Base+0x256a8>
   2c154:	ldr	x8, [x20, #1344]
   2c158:	str	x8, [x19, #32]
   2c15c:	ldrb	w8, [x19]
   2c160:	and	w8, w8, #0xf0
   2c164:	str	xzr, [x19, #24]
   2c168:	b	2c428 <PyInit__decimal@@Base+0x25974>
   2c16c:	ldr	x9, [x21, #40]
   2c170:	ldr	x10, [x21, #24]
   2c174:	add	x9, x9, x10, lsl #3
   2c178:	ldur	x9, [x9, #-8]
   2c17c:	cbz	x9, 2c1f8 <PyInit__decimal@@Base+0x25744>
   2c180:	tbnz	w8, #0, 2c258 <PyInit__decimal@@Base+0x257a4>
   2c184:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   2c188:	add	x1, x1, #0xc88
   2c18c:	mov	x0, x21
   2c190:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2c194:	cbz	w0, 2c2c4 <PyInit__decimal@@Base+0x25810>
   2c198:	mov	x23, x21
   2c19c:	ldr	x8, [x23, #8]!
   2c1a0:	adrp	x24, 3f000 <PyInit__decimal@@Base+0x3854c>
   2c1a4:	add	x24, x24, #0x370
   2c1a8:	ldr	x25, [x24, #72]
   2c1ac:	ldr	x9, [x23, #8]
   2c1b0:	add	x10, x8, x9
   2c1b4:	sub	x26, x10, #0x1
   2c1b8:	eor	x10, x26, x26, asr #63
   2c1bc:	lsl	x10, x10, #1
   2c1c0:	cmp	x10, #0x0
   2c1c4:	cneg	x10, x10, mi  // mi = first
   2c1c8:	cmp	x25, x10
   2c1cc:	b.ls	2c2dc <PyInit__decimal@@Base+0x25828>  // b.plast
   2c1d0:	ldr	x11, [x24, #32]
   2c1d4:	cmp	x11, x10
   2c1d8:	b.ls	2c304 <PyInit__decimal@@Base+0x25850>  // b.plast
   2c1dc:	ldr	x11, [x24, #16]
   2c1e0:	cmp	x11, x10
   2c1e4:	b.ls	2c348 <PyInit__decimal@@Base+0x25894>  // b.plast
   2c1e8:	ldr	x11, [x24, #8]
   2c1ec:	cmp	x11, x10
   2c1f0:	mov	w10, #0x1                   	// #1
   2c1f4:	b	2c3ac <PyInit__decimal@@Base+0x258f8>
   2c1f8:	ldrb	w8, [x19]
   2c1fc:	tbnz	w8, #5, 2c240 <PyInit__decimal@@Base+0x2578c>
   2c200:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   2c204:	ldr	x9, [x19, #32]
   2c208:	ldr	x1, [x20, #1344]
   2c20c:	cmp	x9, x1
   2c210:	b.le	2c240 <PyInit__decimal@@Base+0x2578c>
   2c214:	strb	wzr, [sp, #1744]
   2c218:	ldr	x0, [x19, #40]
   2c21c:	add	x3, sp, #0x6d0
   2c220:	mov	w2, #0x8                   	// #8
   2c224:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2c228:	str	x0, [x19, #40]
   2c22c:	ldrb	w8, [sp, #1744]
   2c230:	cbnz	w8, 2c23c <PyInit__decimal@@Base+0x25788>
   2c234:	ldr	x8, [x20, #1344]
   2c238:	str	x8, [x19, #32]
   2c23c:	ldrb	w8, [x19]
   2c240:	and	w8, w8, #0xf0
   2c244:	str	xzr, [x19, #24]
   2c248:	orr	w8, w8, #0x3
   2c24c:	b	2c42c <PyInit__decimal@@Base+0x25978>
   2c250:	tbz	w8, #5, 2c260 <PyInit__decimal@@Base+0x257ac>
   2c254:	b	2c2a0 <PyInit__decimal@@Base+0x257ec>
   2c258:	ldrb	w8, [x19]
   2c25c:	tbnz	w8, #5, 2c2a0 <PyInit__decimal@@Base+0x257ec>
   2c260:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2c264:	ldr	x9, [x19, #32]
   2c268:	ldr	x1, [x21, #1344]
   2c26c:	cmp	x9, x1
   2c270:	b.le	2c2a0 <PyInit__decimal@@Base+0x257ec>
   2c274:	strb	wzr, [sp, #1744]
   2c278:	ldr	x0, [x19, #40]
   2c27c:	add	x3, sp, #0x6d0
   2c280:	mov	w2, #0x8                   	// #8
   2c284:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2c288:	str	x0, [x19, #40]
   2c28c:	ldrb	w8, [sp, #1744]
   2c290:	cbnz	w8, 2c29c <PyInit__decimal@@Base+0x257e8>
   2c294:	ldr	x8, [x21, #1344]
   2c298:	str	x8, [x19, #32]
   2c29c:	ldrb	w8, [x19]
   2c2a0:	and	w8, w8, #0xf0
   2c2a4:	orr	w8, w8, #0x4
   2c2a8:	stp	xzr, xzr, [x19, #16]
   2c2ac:	strb	w8, [x19]
   2c2b0:	str	xzr, [x19, #8]
   2c2b4:	ldr	w8, [x20]
   2c2b8:	orr	w8, w8, #0x100
   2c2bc:	str	w8, [x20]
   2c2c0:	b	2c434 <PyInit__decimal@@Base+0x25980>
   2c2c4:	mov	x0, x19
   2c2c8:	mov	w1, wzr
   2c2cc:	mov	x2, xzr
   2c2d0:	mov	x3, xzr
   2c2d4:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2c2d8:	b	2c434 <PyInit__decimal@@Base+0x25980>
   2c2dc:	ldr	x11, [x24, #112]
   2c2e0:	cmp	x11, x10
   2c2e4:	b.ls	2c320 <PyInit__decimal@@Base+0x2586c>  // b.plast
   2c2e8:	ldr	x11, [x24, #88]
   2c2ec:	cmp	x11, x10
   2c2f0:	b.ls	2c358 <PyInit__decimal@@Base+0x258a4>  // b.plast
   2c2f4:	ldr	x11, [x24, #80]
   2c2f8:	cmp	x11, x10
   2c2fc:	mov	w10, #0xa                   	// #10
   2c300:	b	2c3ac <PyInit__decimal@@Base+0x258f8>
   2c304:	ldr	x11, [x24, #48]
   2c308:	cmp	x11, x10
   2c30c:	b.ls	2c374 <PyInit__decimal@@Base+0x258c0>  // b.plast
   2c310:	ldr	x11, [x24, #40]
   2c314:	cmp	x11, x10
   2c318:	mov	w10, #0x5                   	// #5
   2c31c:	b	2c3ac <PyInit__decimal@@Base+0x258f8>
   2c320:	ldr	x11, [x24, #144]
   2c324:	cmp	x11, x10
   2c328:	b.ls	2c390 <PyInit__decimal@@Base+0x258dc>  // b.plast
   2c32c:	ldr	x11, [x24, #128]
   2c330:	cmp	x11, x10
   2c334:	b.ls	2c3a0 <PyInit__decimal@@Base+0x258ec>  // b.plast
   2c338:	ldr	x11, [x24, #120]
   2c33c:	cmp	x11, x10
   2c340:	mov	w10, #0xf                   	// #15
   2c344:	b	2c3ac <PyInit__decimal@@Base+0x258f8>
   2c348:	ldr	x11, [x24, #24]
   2c34c:	cmp	x11, x10
   2c350:	mov	w10, #0x3                   	// #3
   2c354:	b	2c3ac <PyInit__decimal@@Base+0x258f8>
   2c358:	ldr	x11, [x24, #104]
   2c35c:	cmp	x11, x10
   2c360:	b.ls	2c964 <PyInit__decimal@@Base+0x25eb0>  // b.plast
   2c364:	ldr	x11, [x24, #96]
   2c368:	cmp	x11, x10
   2c36c:	mov	w10, #0xc                   	// #12
   2c370:	b	2c3ac <PyInit__decimal@@Base+0x258f8>
   2c374:	ldr	x11, [x24, #64]
   2c378:	cmp	x11, x10
   2c37c:	b.ls	2c96c <PyInit__decimal@@Base+0x25eb8>  // b.plast
   2c380:	ldr	x11, [x24, #56]
   2c384:	cmp	x11, x10
   2c388:	mov	w10, #0x7                   	// #7
   2c38c:	b	2c3ac <PyInit__decimal@@Base+0x258f8>
   2c390:	ldr	x11, [x24, #152]
   2c394:	cmp	x11, x10
   2c398:	mov	w10, #0x13                  	// #19
   2c39c:	b	2c3ac <PyInit__decimal@@Base+0x258f8>
   2c3a0:	ldr	x11, [x24, #136]
   2c3a4:	cmp	x11, x10
   2c3a8:	mov	w10, #0x11                  	// #17
   2c3ac:	cinc	x10, x10, ls  // ls = plast
   2c3b0:	ldr	x11, [x22, #8]
   2c3b4:	sub	x10, x10, #0x1
   2c3b8:	cmp	x11, x10
   2c3bc:	b.ge	2c454 <PyInit__decimal@@Base+0x259a0>  // b.tcont
   2c3c0:	ldr	w8, [x20]
   2c3c4:	mov	w9, #0x1840                	// #6208
   2c3c8:	orr	w8, w8, w9
   2c3cc:	str	w8, [x20]
   2c3d0:	ldrb	w8, [x19]
   2c3d4:	tbnz	w8, #5, 2c418 <PyInit__decimal@@Base+0x25964>
   2c3d8:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   2c3dc:	ldr	x9, [x19, #32]
   2c3e0:	ldr	x1, [x20, #1344]
   2c3e4:	cmp	x9, x1
   2c3e8:	b.le	2c418 <PyInit__decimal@@Base+0x25964>
   2c3ec:	strb	wzr, [sp, #1744]
   2c3f0:	ldr	x0, [x19, #40]
   2c3f4:	add	x3, sp, #0x6d0
   2c3f8:	mov	w2, #0x8                   	// #8
   2c3fc:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2c400:	str	x0, [x19, #40]
   2c404:	ldrb	w8, [sp, #1744]
   2c408:	cbnz	w8, 2c414 <PyInit__decimal@@Base+0x25960>
   2c40c:	ldr	x8, [x20, #1344]
   2c410:	str	x8, [x19, #32]
   2c414:	ldrb	w8, [x19]
   2c418:	lsr	x9, x26, #63
   2c41c:	and	w8, w8, #0xf0
   2c420:	str	xzr, [x19, #24]
   2c424:	orr	w8, w8, w9
   2c428:	orr	w8, w8, #0x2
   2c42c:	strb	w8, [x19]
   2c430:	stp	xzr, xzr, [x19, #8]
   2c434:	add	sp, sp, #0x910
   2c438:	ldp	x20, x19, [sp, #80]
   2c43c:	ldp	x22, x21, [sp, #64]
   2c440:	ldp	x24, x23, [sp, #48]
   2c444:	ldp	x26, x25, [sp, #32]
   2c448:	ldp	x28, x27, [sp, #16]
   2c44c:	ldp	x29, x30, [sp], #96
   2c450:	ret
   2c454:	ldp	q1, q0, [x22, #16]
   2c458:	ldr	q2, [x22]
   2c45c:	mov	w10, #0x6                   	// #6
   2c460:	stp	q1, q0, [x29, #-48]
   2c464:	stur	q2, [x29, #-64]
   2c468:	stur	w10, [x29, #-28]
   2c46c:	ldr	w10, [x22, #44]
   2c470:	cbz	w10, 2c540 <PyInit__decimal@@Base+0x25a8c>
   2c474:	mov	w10, #0x30                  	// #48
   2c478:	add	x12, sp, #0x6d0
   2c47c:	str	x12, [sp, #1736]
   2c480:	add	x12, sp, #0x4a0
   2c484:	strb	w10, [sp, #1696]
   2c488:	strb	w10, [sp, #1136]
   2c48c:	strb	w10, [sp, #576]
   2c490:	strb	w10, [sp, #16]
   2c494:	add	x10, sp, #0x10
   2c498:	str	x12, [sp, #1176]
   2c49c:	add	x12, sp, #0x270
   2c4a0:	cmp	x10, x21
   2c4a4:	mov	w11, #0x40                  	// #64
   2c4a8:	str	x12, [sp, #616]
   2c4ac:	add	x12, sp, #0x40
   2c4b0:	cset	w10, eq  // eq = none
   2c4b4:	cmp	x19, x21
   2c4b8:	str	xzr, [sp, #1704]
   2c4bc:	str	xzr, [sp, #1712]
   2c4c0:	str	xzr, [sp, #1144]
   2c4c4:	str	xzr, [sp, #1152]
   2c4c8:	str	xzr, [sp, #584]
   2c4cc:	str	xzr, [sp, #592]
   2c4d0:	stp	xzr, xzr, [sp, #24]
   2c4d4:	str	xzr, [sp, #1720]
   2c4d8:	str	x11, [sp, #1728]
   2c4dc:	str	xzr, [sp, #1160]
   2c4e0:	str	x11, [sp, #1168]
   2c4e4:	str	xzr, [sp, #600]
   2c4e8:	str	x11, [sp, #608]
   2c4ec:	stp	xzr, x11, [sp, #40]
   2c4f0:	str	x12, [sp, #56]
   2c4f4:	b.ne	2c5f0 <PyInit__decimal@@Base+0x25b3c>  // b.any
   2c4f8:	tbnz	w10, #0, 2c5f0 <PyInit__decimal@@Base+0x25b3c>
   2c4fc:	adrp	x26, 53000 <PyInit__decimal@@Base+0x4c54c>
   2c500:	ldr	x10, [x21, #24]
   2c504:	ldr	x11, [x26, #1344]
   2c508:	cmp	x11, x10
   2c50c:	csel	x1, x10, x11, lt  // lt = tstop
   2c510:	cmp	x1, #0x41
   2c514:	b.lt	2c5c0 <PyInit__decimal@@Base+0x25b0c>  // b.tstop
   2c518:	add	x0, sp, #0x10
   2c51c:	mov	x2, x20
   2c520:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2c524:	cbz	w0, 2c974 <PyInit__decimal@@Base+0x25ec0>
   2c528:	ldrb	w11, [sp, #16]
   2c52c:	ldp	x9, x10, [x21, #16]
   2c530:	ldr	x8, [x21, #8]
   2c534:	ldr	x0, [sp, #56]
   2c538:	and	w11, w11, #0xfffffff0
   2c53c:	b	2c5c8 <PyInit__decimal@@Base+0x25b14>
   2c540:	sub	x2, x29, #0x40
   2c544:	mov	x0, x19
   2c548:	mov	x1, x21
   2c54c:	mov	x3, x20
   2c550:	bl	2c9dc <PyInit__decimal@@Base+0x25f28>
   2c554:	ldp	x8, x10, [x19, #8]
   2c558:	ldur	x9, [x29, #-48]
   2c55c:	add	x10, x8, x10
   2c560:	sub	x10, x10, #0x1
   2c564:	cmp	x10, x9
   2c568:	b.ge	2c5ac <PyInit__decimal@@Base+0x25af8>  // b.tcont
   2c56c:	ldrb	w10, [x19]
   2c570:	tst	w10, #0xe
   2c574:	b.ne	2c58c <PyInit__decimal@@Base+0x25ad8>  // b.any
   2c578:	ldr	x10, [x19, #40]
   2c57c:	ldr	x11, [x19, #24]
   2c580:	add	x10, x10, x11, lsl #3
   2c584:	ldur	x10, [x10, #-8]
   2c588:	cbz	x10, 2c5ac <PyInit__decimal@@Base+0x25af8>
   2c58c:	ldur	x10, [x29, #-64]
   2c590:	sub	x9, x9, x10
   2c594:	add	x9, x9, #0x1
   2c598:	cmp	x8, x9
   2c59c:	b.ge	2c5ac <PyInit__decimal@@Base+0x25af8>  // b.tcont
   2c5a0:	ldr	w8, [x20]
   2c5a4:	orr	w8, w8, #0x4000
   2c5a8:	str	w8, [x20]
   2c5ac:	sub	x1, x29, #0x40
   2c5b0:	mov	x0, x19
   2c5b4:	mov	x2, x20
   2c5b8:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2c5bc:	b	2c434 <PyInit__decimal@@Base+0x25980>
   2c5c0:	add	x0, sp, #0x40
   2c5c4:	mov	w11, #0x30                  	// #48
   2c5c8:	ldrb	w12, [x21]
   2c5cc:	stp	x8, x9, [sp, #24]
   2c5d0:	str	x10, [sp, #40]
   2c5d4:	lsl	x2, x10, #3
   2c5d8:	and	w8, w12, #0xf
   2c5dc:	orr	w8, w11, w8
   2c5e0:	strb	w8, [sp, #16]
   2c5e4:	ldr	x1, [x21, #40]
   2c5e8:	bl	63c0 <memcpy@plt>
   2c5ec:	add	x21, sp, #0x10
   2c5f0:	stur	wzr, [x29, #-24]
   2c5f4:	adrp	x9, 40000 <PyInit__decimal@@Base+0x3954c>
   2c5f8:	ldr	x10, [x22]
   2c5fc:	ldr	q0, [x9, #96]
   2c600:	sub	x8, x29, #0x40
   2c604:	mov	w26, #0x1                   	// #1
   2c608:	add	x23, x8, #0x1c
   2c60c:	add	x28, x10, #0x3
   2c610:	mov	w27, #0x13                  	// #19
   2c614:	str	q0, [sp]
   2c618:	b	2c62c <PyInit__decimal@@Base+0x25b78>
   2c61c:	ldr	w8, [x20]
   2c620:	orr	w8, w8, #0x100
   2c624:	str	w8, [x20]
   2c628:	add	x28, x28, #0x13
   2c62c:	sub	x2, x29, #0x40
   2c630:	mov	x0, x19
   2c634:	mov	x1, x21
   2c638:	mov	x3, x20
   2c63c:	stur	x28, [x29, #-64]
   2c640:	bl	2c9dc <PyInit__decimal@@Base+0x25f28>
   2c644:	ldp	x8, x9, [x19, #8]
   2c648:	ldrb	w10, [sp, #576]
   2c64c:	ldur	x11, [x29, #-64]
   2c650:	ldr	x12, [sp, #616]
   2c654:	ldr	q0, [sp]
   2c658:	add	x8, x9, x8
   2c65c:	and	w9, w10, #0xf0
   2c660:	sub	x8, x8, x11
   2c664:	strb	w9, [sp, #576]
   2c668:	str	x8, [sp, #584]
   2c66c:	str	q0, [x12]
   2c670:	str	x26, [sp, #600]
   2c674:	ldr	x8, [x12]
   2c678:	cmp	x25, x8
   2c67c:	b.ls	2c6a8 <PyInit__decimal@@Base+0x25bf4>  // b.plast
   2c680:	ldr	x9, [x24, #32]
   2c684:	cmp	x9, x8
   2c688:	b.ls	2c6d4 <PyInit__decimal@@Base+0x25c20>  // b.plast
   2c68c:	ldr	x9, [x24, #16]
   2c690:	cmp	x9, x8
   2c694:	b.ls	2c720 <PyInit__decimal@@Base+0x25c6c>  // b.plast
   2c698:	ldr	x9, [x24, #8]
   2c69c:	cmp	x9, x8
   2c6a0:	cinc	x8, x26, ls  // ls = plast
   2c6a4:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c6a8:	ldr	x9, [x24, #112]
   2c6ac:	cmp	x9, x8
   2c6b0:	b.ls	2c6f4 <PyInit__decimal@@Base+0x25c40>  // b.plast
   2c6b4:	ldr	x9, [x24, #88]
   2c6b8:	cmp	x9, x8
   2c6bc:	b.ls	2c734 <PyInit__decimal@@Base+0x25c80>  // b.plast
   2c6c0:	ldr	x9, [x24, #80]
   2c6c4:	cmp	x9, x8
   2c6c8:	mov	w8, #0xa                   	// #10
   2c6cc:	cinc	x8, x8, ls  // ls = plast
   2c6d0:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c6d4:	ldr	x9, [x24, #48]
   2c6d8:	cmp	x9, x8
   2c6dc:	b.ls	2c754 <PyInit__decimal@@Base+0x25ca0>  // b.plast
   2c6e0:	ldr	x9, [x24, #40]
   2c6e4:	cmp	x9, x8
   2c6e8:	mov	w8, #0x5                   	// #5
   2c6ec:	cinc	x8, x8, ls  // ls = plast
   2c6f0:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c6f4:	ldr	x9, [x24, #144]
   2c6f8:	cmp	x9, x8
   2c6fc:	b.ls	2c774 <PyInit__decimal@@Base+0x25cc0>  // b.plast
   2c700:	ldr	x9, [x24, #128]
   2c704:	cmp	x9, x8
   2c708:	b.ls	2c784 <PyInit__decimal@@Base+0x25cd0>  // b.plast
   2c70c:	ldr	x9, [x24, #120]
   2c710:	cmp	x9, x8
   2c714:	mov	w8, #0xf                   	// #15
   2c718:	cinc	x8, x8, ls  // ls = plast
   2c71c:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c720:	ldr	x9, [x24, #24]
   2c724:	cmp	x9, x8
   2c728:	mov	w8, #0x3                   	// #3
   2c72c:	cinc	x8, x8, ls  // ls = plast
   2c730:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c734:	ldr	x9, [x24, #104]
   2c738:	cmp	x9, x8
   2c73c:	b.ls	2c798 <PyInit__decimal@@Base+0x25ce4>  // b.plast
   2c740:	ldr	x9, [x24, #96]
   2c744:	cmp	x9, x8
   2c748:	mov	w8, #0xc                   	// #12
   2c74c:	cinc	x8, x8, ls  // ls = plast
   2c750:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c754:	ldr	x9, [x24, #64]
   2c758:	cmp	x9, x8
   2c75c:	b.ls	2c7a0 <PyInit__decimal@@Base+0x25cec>  // b.plast
   2c760:	ldr	x9, [x24, #56]
   2c764:	cmp	x9, x8
   2c768:	mov	w8, #0x7                   	// #7
   2c76c:	cinc	x8, x8, ls  // ls = plast
   2c770:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c774:	ldr	x9, [x24, #152]
   2c778:	cmp	x9, x8
   2c77c:	cinc	x8, x27, ls  // ls = plast
   2c780:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c784:	ldr	x9, [x24, #136]
   2c788:	cmp	x9, x8
   2c78c:	mov	w8, #0x11                  	// #17
   2c790:	cinc	x8, x8, ls  // ls = plast
   2c794:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c798:	mov	w8, #0xe                   	// #14
   2c79c:	b	2c7a4 <PyInit__decimal@@Base+0x25cf0>
   2c7a0:	mov	w8, #0x9                   	// #9
   2c7a4:	str	x8, [sp, #592]
   2c7a8:	ldr	x8, [x22]
   2c7ac:	add	x0, sp, #0x6a0
   2c7b0:	add	x2, sp, #0x240
   2c7b4:	sub	x3, x29, #0x40
   2c7b8:	mov	x1, x19
   2c7bc:	mov	x4, x23
   2c7c0:	stur	x8, [x29, #-64]
   2c7c4:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   2c7c8:	add	x0, sp, #0x470
   2c7cc:	add	x2, sp, #0x240
   2c7d0:	sub	x3, x29, #0x40
   2c7d4:	mov	x1, x19
   2c7d8:	mov	x4, x23
   2c7dc:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   2c7e0:	ldrb	w8, [x19]
   2c7e4:	tst	w8, #0xe
   2c7e8:	b.ne	2c83c <PyInit__decimal@@Base+0x25d88>  // b.any
   2c7ec:	ldr	x8, [x19, #40]
   2c7f0:	ldr	x9, [x19, #24]
   2c7f4:	add	x8, x8, x9, lsl #3
   2c7f8:	ldur	x8, [x8, #-8]
   2c7fc:	cbz	x8, 2c83c <PyInit__decimal@@Base+0x25d88>
   2c800:	ldrb	w8, [sp, #1696]
   2c804:	tst	w8, #0xe
   2c808:	b.ne	2c818 <PyInit__decimal@@Base+0x25d64>  // b.any
   2c80c:	ldrb	w9, [sp, #1136]
   2c810:	tst	w9, #0xe
   2c814:	b.eq	2c82c <PyInit__decimal@@Base+0x25d78>  // b.none
   2c818:	tst	w8, #0xc
   2c81c:	b.ne	2c61c <PyInit__decimal@@Base+0x25b68>  // b.any
   2c820:	ldrb	w8, [sp, #1136]
   2c824:	tst	w8, #0xc
   2c828:	b.ne	2c61c <PyInit__decimal@@Base+0x25b68>  // b.any
   2c82c:	add	x0, sp, #0x6a0
   2c830:	add	x1, sp, #0x470
   2c834:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2c838:	cbnz	w0, 2c628 <PyInit__decimal@@Base+0x25b74>
   2c83c:	ldr	w8, [x22, #40]
   2c840:	ldur	x9, [x29, #-48]
   2c844:	stur	w8, [x29, #-24]
   2c848:	ldp	x8, x10, [x19, #8]
   2c84c:	add	x10, x8, x10
   2c850:	sub	x10, x10, #0x1
   2c854:	cmp	x10, x9
   2c858:	b.ge	2c89c <PyInit__decimal@@Base+0x25de8>  // b.tcont
   2c85c:	ldrb	w10, [x19]
   2c860:	tst	w10, #0xe
   2c864:	b.ne	2c87c <PyInit__decimal@@Base+0x25dc8>  // b.any
   2c868:	ldr	x10, [x19, #40]
   2c86c:	ldr	x11, [x19, #24]
   2c870:	add	x10, x10, x11, lsl #3
   2c874:	ldur	x10, [x10, #-8]
   2c878:	cbz	x10, 2c89c <PyInit__decimal@@Base+0x25de8>
   2c87c:	ldur	x10, [x29, #-64]
   2c880:	sub	x9, x9, x10
   2c884:	add	x9, x9, #0x1
   2c888:	cmp	x8, x9
   2c88c:	b.ge	2c89c <PyInit__decimal@@Base+0x25de8>  // b.tcont
   2c890:	ldr	w8, [x20]
   2c894:	orr	w8, w8, #0x4000
   2c898:	str	w8, [x20]
   2c89c:	sub	x1, x29, #0x40
   2c8a0:	mov	x0, x19
   2c8a4:	mov	x2, x20
   2c8a8:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2c8ac:	ldrb	w8, [sp, #1696]
   2c8b0:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2c8b4:	cmp	w8, #0x1f
   2c8b8:	b.hi	2c8cc <PyInit__decimal@@Base+0x25e18>  // b.pmore
   2c8bc:	ldr	x8, [x19, #1376]
   2c8c0:	ldr	x0, [sp, #1736]
   2c8c4:	blr	x8
   2c8c8:	ldrb	w8, [sp, #1696]
   2c8cc:	tbnz	w8, #4, 2c8dc <PyInit__decimal@@Base+0x25e28>
   2c8d0:	ldr	x8, [x19, #1376]
   2c8d4:	add	x0, sp, #0x6a0
   2c8d8:	blr	x8
   2c8dc:	ldrb	w8, [sp, #1136]
   2c8e0:	cmp	w8, #0x1f
   2c8e4:	b.hi	2c8f8 <PyInit__decimal@@Base+0x25e44>  // b.pmore
   2c8e8:	ldr	x8, [x19, #1376]
   2c8ec:	ldr	x0, [sp, #1176]
   2c8f0:	blr	x8
   2c8f4:	ldrb	w8, [sp, #1136]
   2c8f8:	tbnz	w8, #4, 2c908 <PyInit__decimal@@Base+0x25e54>
   2c8fc:	ldr	x8, [x19, #1376]
   2c900:	add	x0, sp, #0x470
   2c904:	blr	x8
   2c908:	ldrb	w8, [sp, #576]
   2c90c:	cmp	w8, #0x1f
   2c910:	b.hi	2c924 <PyInit__decimal@@Base+0x25e70>  // b.pmore
   2c914:	ldr	x8, [x19, #1376]
   2c918:	ldr	x0, [sp, #616]
   2c91c:	blr	x8
   2c920:	ldrb	w8, [sp, #576]
   2c924:	tbnz	w8, #4, 2c934 <PyInit__decimal@@Base+0x25e80>
   2c928:	ldr	x8, [x19, #1376]
   2c92c:	add	x0, sp, #0x240
   2c930:	blr	x8
   2c934:	ldrb	w8, [sp, #16]
   2c938:	cmp	w8, #0x1f
   2c93c:	b.hi	2c950 <PyInit__decimal@@Base+0x25e9c>  // b.pmore
   2c940:	ldr	x8, [x19, #1376]
   2c944:	ldr	x0, [sp, #56]
   2c948:	blr	x8
   2c94c:	ldrb	w8, [sp, #16]
   2c950:	tbnz	w8, #4, 2c434 <PyInit__decimal@@Base+0x25980>
   2c954:	ldr	x8, [x19, #1376]
   2c958:	add	x0, sp, #0x10
   2c95c:	blr	x8
   2c960:	b	2c434 <PyInit__decimal@@Base+0x25980>
   2c964:	mov	w10, #0xe                   	// #14
   2c968:	b	2c3b0 <PyInit__decimal@@Base+0x258fc>
   2c96c:	mov	w10, #0x9                   	// #9
   2c970:	b	2c3b0 <PyInit__decimal@@Base+0x258fc>
   2c974:	ldrb	w8, [x21]
   2c978:	tbnz	w8, #5, 2c9b8 <PyInit__decimal@@Base+0x25f04>
   2c97c:	ldr	x9, [x21, #32]
   2c980:	ldr	x1, [x26, #1344]
   2c984:	cmp	x9, x1
   2c988:	b.le	2c9b8 <PyInit__decimal@@Base+0x25f04>
   2c98c:	sturb	wzr, [x29, #-12]
   2c990:	ldr	x0, [x21, #40]
   2c994:	sub	x3, x29, #0xc
   2c998:	mov	w2, #0x8                   	// #8
   2c99c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2c9a0:	str	x0, [x21, #40]
   2c9a4:	ldurb	w8, [x29, #-12]
   2c9a8:	cbnz	w8, 2c9b4 <PyInit__decimal@@Base+0x25f00>
   2c9ac:	ldr	x8, [x26, #1344]
   2c9b0:	str	x8, [x21, #32]
   2c9b4:	ldrb	w8, [x21]
   2c9b8:	and	w8, w8, #0xf0
   2c9bc:	orr	w8, w8, #0x4
   2c9c0:	strb	w8, [x21]
   2c9c4:	stp	xzr, xzr, [x23]
   2c9c8:	str	xzr, [x23, #16]
   2c9cc:	ldr	w8, [x20]
   2c9d0:	orr	w8, w8, #0x200
   2c9d4:	str	w8, [x20]
   2c9d8:	b	2c434 <PyInit__decimal@@Base+0x25980>
   2c9dc:	stp	x29, x30, [sp, #-96]!
   2c9e0:	stp	x28, x27, [sp, #16]
   2c9e4:	stp	x26, x25, [sp, #32]
   2c9e8:	stp	x24, x23, [sp, #48]
   2c9ec:	stp	x22, x21, [sp, #64]
   2c9f0:	stp	x20, x19, [sp, #80]
   2c9f4:	mov	x29, sp
   2c9f8:	sub	sp, sp, #0x900
   2c9fc:	mov	w9, #0x30                  	// #48
   2ca00:	add	x11, sp, #0x468
   2ca04:	strb	w9, [sp, #1640]
   2ca08:	strb	w9, [sp, #1080]
   2ca0c:	strb	w9, [sp, #520]
   2ca10:	add	x9, sp, #0x668
   2ca14:	mov	x19, x3
   2ca18:	mov	x21, x2
   2ca1c:	mov	x22, x1
   2ca20:	mov	x20, x0
   2ca24:	mov	w10, #0x40                  	// #64
   2ca28:	add	x8, sp, #0x698
   2ca2c:	str	x11, [sp, #1120]
   2ca30:	add	x11, sp, #0x238
   2ca34:	cmp	x9, x1
   2ca38:	adrp	x25, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ca3c:	str	xzr, [sp, #1648]
   2ca40:	str	xzr, [sp, #1656]
   2ca44:	str	xzr, [sp, #1088]
   2ca48:	str	xzr, [sp, #1096]
   2ca4c:	str	xzr, [sp, #528]
   2ca50:	str	xzr, [sp, #536]
   2ca54:	str	xzr, [sp, #1664]
   2ca58:	str	x10, [sp, #1672]
   2ca5c:	str	x8, [sp, #1680]
   2ca60:	str	xzr, [sp, #1104]
   2ca64:	str	x10, [sp, #1112]
   2ca68:	str	xzr, [sp, #544]
   2ca6c:	str	x10, [sp, #552]
   2ca70:	str	x11, [sp, #560]
   2ca74:	b.eq	2cab0 <PyInit__decimal@@Base+0x25ffc>  // b.none
   2ca78:	ldr	x8, [x22, #24]
   2ca7c:	ldr	x9, [x25, #1344]
   2ca80:	cmp	x9, x8
   2ca84:	csel	x1, x8, x9, lt  // lt = tstop
   2ca88:	cmp	x1, #0x41
   2ca8c:	b.lt	2cabc <PyInit__decimal@@Base+0x26008>  // b.tstop
   2ca90:	add	x0, sp, #0x668
   2ca94:	mov	x2, x19
   2ca98:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2ca9c:	cbz	w0, 2ccbc <PyInit__decimal@@Base+0x26208>
   2caa0:	ldr	x8, [x22, #24]
   2caa4:	ldrb	w9, [sp, #1640]
   2caa8:	ldr	x0, [sp, #1680]
   2caac:	b	2cac4 <PyInit__decimal@@Base+0x26010>
   2cab0:	mov	x9, xzr
   2cab4:	mov	x10, xzr
   2cab8:	b	2caf8 <PyInit__decimal@@Base+0x26044>
   2cabc:	add	x0, sp, #0x698
   2cac0:	mov	w9, #0x30                  	// #48
   2cac4:	ldrb	w10, [x22]
   2cac8:	lsl	x2, x8, #3
   2cacc:	bfxil	w9, w10, #0, #4
   2cad0:	strb	w9, [sp, #1640]
   2cad4:	ldur	q0, [x22, #8]
   2cad8:	add	x9, sp, #0x571
   2cadc:	str	x8, [sp, #1664]
   2cae0:	stur	q0, [x9, #255]
   2cae4:	ldr	x1, [x22, #40]
   2cae8:	bl	63c0 <memcpy@plt>
   2caec:	ldr	x8, [sp, #1680]
   2caf0:	ldr	x10, [sp, #1656]
   2caf4:	ldr	x9, [sp, #1664]
   2caf8:	mov	x11, #0x435f                	// #17247
   2cafc:	movk	x11, #0xd79, lsl #16
   2cb00:	movk	x11, #0x35e5, lsl #32
   2cb04:	movk	x11, #0xd794, lsl #48
   2cb08:	umulh	x11, x10, x11
   2cb0c:	mov	w12, #0x13                  	// #19
   2cb10:	add	x13, x8, x9, lsl #3
   2cb14:	lsr	x11, x11, #4
   2cb18:	msub	x10, x11, x12, x10
   2cb1c:	ldur	x23, [x13, #-8]
   2cb20:	cmp	x10, #0x0
   2cb24:	csel	x10, x12, x10, eq  // eq = none
   2cb28:	adrp	x28, 3f000 <PyInit__decimal@@Base+0x3854c>
   2cb2c:	cmp	x10, #0x3
   2cb30:	add	x28, x28, #0x370
   2cb34:	b.cs	2cb78 <PyInit__decimal@@Base+0x260c4>  // b.hs, b.nlast
   2cb38:	cmp	x9, #0x2
   2cb3c:	b.lt	2cb64 <PyInit__decimal@@Base+0x260b0>  // b.tstop
   2cb40:	mov	w11, #0x3                   	// #3
   2cb44:	add	x8, x8, x9, lsl #3
   2cb48:	add	x9, x28, x10, lsl #3
   2cb4c:	sub	x10, x11, x10
   2cb50:	ldur	x8, [x8, #-16]
   2cb54:	ldr	x9, [x9, #128]
   2cb58:	ldr	x10, [x28, x10, lsl #3]
   2cb5c:	udiv	x8, x8, x9
   2cb60:	madd	x23, x10, x23, x8
   2cb64:	cmp	x23, #0x9
   2cb68:	b.hi	2cb8c <PyInit__decimal@@Base+0x260d8>  // b.pmore
   2cb6c:	add	x8, x23, x23, lsl #2
   2cb70:	lsl	x23, x8, #1
   2cb74:	b	2cb94 <PyInit__decimal@@Base+0x260e0>
   2cb78:	add	x8, x28, x10, lsl #3
   2cb7c:	ldur	x8, [x8, #-24]
   2cb80:	udiv	x23, x23, x8
   2cb84:	cmp	x23, #0x9
   2cb88:	b.ls	2cb6c <PyInit__decimal@@Base+0x260b8>  // b.plast
   2cb8c:	cmp	x23, #0x63
   2cb90:	b.hi	2cb9c <PyInit__decimal@@Base+0x260e8>  // b.pmore
   2cb94:	add	x8, x23, x23, lsl #2
   2cb98:	lsl	x23, x8, #1
   2cb9c:	ldrb	w8, [x20]
   2cba0:	ldp	x22, x24, [x22, #8]
   2cba4:	sub	x27, x23, #0x64
   2cba8:	tbnz	w8, #5, 2cbe8 <PyInit__decimal@@Base+0x26134>
   2cbac:	ldr	x9, [x20, #32]
   2cbb0:	ldr	x1, [x25, #1344]
   2cbb4:	cmp	x9, x1
   2cbb8:	b.le	2cbe8 <PyInit__decimal@@Base+0x26134>
   2cbbc:	strb	wzr, [sp, #8]
   2cbc0:	ldr	x0, [x20, #40]
   2cbc4:	add	x3, sp, #0x8
   2cbc8:	mov	w2, #0x8                   	// #8
   2cbcc:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2cbd0:	str	x0, [x20, #40]
   2cbd4:	ldrb	w8, [sp, #8]
   2cbd8:	cbnz	w8, 2cbe4 <PyInit__decimal@@Base+0x26130>
   2cbdc:	ldr	x8, [x25, #1344]
   2cbe0:	str	x8, [x20, #32]
   2cbe4:	ldrb	w8, [x20]
   2cbe8:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   2cbec:	add	x9, x9, #0x958
   2cbf0:	ldr	x10, [x20, #40]
   2cbf4:	ldrh	w9, [x9, x27, lsl #1]
   2cbf8:	and	w8, w8, #0xf0
   2cbfc:	mov	x11, #0xfffffffffffffffd    	// #-3
   2cc00:	mov	x26, x20
   2cc04:	mov	w12, #0x1                   	// #1
   2cc08:	strb	w8, [x20]
   2cc0c:	str	x9, [x10]
   2cc10:	str	x11, [x26, #8]!
   2cc14:	str	x12, [x26, #16]
   2cc18:	ldr	x9, [x10]
   2cc1c:	ldr	x10, [x28, #72]
   2cc20:	cmp	x10, x9
   2cc24:	b.ls	2cc50 <PyInit__decimal@@Base+0x2619c>  // b.plast
   2cc28:	ldr	x10, [x28, #32]
   2cc2c:	cmp	x10, x9
   2cc30:	b.ls	2cc78 <PyInit__decimal@@Base+0x261c4>  // b.plast
   2cc34:	ldr	x10, [x28, #16]
   2cc38:	cmp	x10, x9
   2cc3c:	b.ls	2cd18 <PyInit__decimal@@Base+0x26264>  // b.plast
   2cc40:	ldr	x10, [x28, #8]
   2cc44:	cmp	x10, x9
   2cc48:	mov	w9, #0x1                   	// #1
   2cc4c:	b	2cd7c <PyInit__decimal@@Base+0x262c8>
   2cc50:	ldr	x10, [x28, #112]
   2cc54:	cmp	x10, x9
   2cc58:	b.ls	2cc94 <PyInit__decimal@@Base+0x261e0>  // b.plast
   2cc5c:	ldr	x10, [x28, #88]
   2cc60:	cmp	x10, x9
   2cc64:	b.ls	2cd28 <PyInit__decimal@@Base+0x26274>  // b.plast
   2cc68:	ldr	x10, [x28, #80]
   2cc6c:	cmp	x10, x9
   2cc70:	mov	w9, #0xa                   	// #10
   2cc74:	b	2cd7c <PyInit__decimal@@Base+0x262c8>
   2cc78:	ldr	x10, [x28, #48]
   2cc7c:	cmp	x10, x9
   2cc80:	b.ls	2cd44 <PyInit__decimal@@Base+0x26290>  // b.plast
   2cc84:	ldr	x10, [x28, #40]
   2cc88:	cmp	x10, x9
   2cc8c:	mov	w9, #0x5                   	// #5
   2cc90:	b	2cd7c <PyInit__decimal@@Base+0x262c8>
   2cc94:	ldr	x10, [x28, #144]
   2cc98:	cmp	x10, x9
   2cc9c:	b.ls	2cd60 <PyInit__decimal@@Base+0x262ac>  // b.plast
   2cca0:	ldr	x10, [x28, #128]
   2cca4:	cmp	x10, x9
   2cca8:	b.ls	2cd70 <PyInit__decimal@@Base+0x262bc>  // b.plast
   2ccac:	ldr	x10, [x28, #120]
   2ccb0:	cmp	x10, x9
   2ccb4:	mov	w9, #0xf                   	// #15
   2ccb8:	b	2cd7c <PyInit__decimal@@Base+0x262c8>
   2ccbc:	ldrb	w8, [x20]
   2ccc0:	tbnz	w8, #5, 2cd00 <PyInit__decimal@@Base+0x2624c>
   2ccc4:	ldr	x9, [x20, #32]
   2ccc8:	ldr	x1, [x25, #1344]
   2cccc:	cmp	x9, x1
   2ccd0:	b.le	2cd00 <PyInit__decimal@@Base+0x2624c>
   2ccd4:	strb	wzr, [sp, #8]
   2ccd8:	ldr	x0, [x20, #40]
   2ccdc:	add	x3, sp, #0x8
   2cce0:	mov	w2, #0x8                   	// #8
   2cce4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2cce8:	str	x0, [x20, #40]
   2ccec:	ldrb	w8, [sp, #8]
   2ccf0:	cbnz	w8, 2ccfc <PyInit__decimal@@Base+0x26248>
   2ccf4:	ldr	x8, [x25, #1344]
   2ccf8:	str	x8, [x20, #32]
   2ccfc:	ldrb	w8, [x20]
   2cd00:	and	w8, w8, #0xf0
   2cd04:	orr	w8, w8, #0x4
   2cd08:	stp	xzr, xzr, [x20, #16]
   2cd0c:	strb	w8, [x20]
   2cd10:	str	xzr, [x20, #8]
   2cd14:	b	2ce88 <PyInit__decimal@@Base+0x263d4>
   2cd18:	ldr	x10, [x28, #24]
   2cd1c:	cmp	x10, x9
   2cd20:	mov	w9, #0x3                   	// #3
   2cd24:	b	2cd7c <PyInit__decimal@@Base+0x262c8>
   2cd28:	ldr	x10, [x28, #104]
   2cd2c:	cmp	x10, x9
   2cd30:	b.ls	2d120 <PyInit__decimal@@Base+0x2666c>  // b.plast
   2cd34:	ldr	x10, [x28, #96]
   2cd38:	cmp	x10, x9
   2cd3c:	mov	w9, #0xc                   	// #12
   2cd40:	b	2cd7c <PyInit__decimal@@Base+0x262c8>
   2cd44:	ldr	x10, [x28, #64]
   2cd48:	cmp	x10, x9
   2cd4c:	b.ls	2d128 <PyInit__decimal@@Base+0x26674>  // b.plast
   2cd50:	ldr	x10, [x28, #56]
   2cd54:	cmp	x10, x9
   2cd58:	mov	w9, #0x7                   	// #7
   2cd5c:	b	2cd7c <PyInit__decimal@@Base+0x262c8>
   2cd60:	ldr	x10, [x28, #152]
   2cd64:	cmp	x10, x9
   2cd68:	mov	w9, #0x13                  	// #19
   2cd6c:	b	2cd7c <PyInit__decimal@@Base+0x262c8>
   2cd70:	ldr	x10, [x28, #136]
   2cd74:	cmp	x10, x9
   2cd78:	mov	w9, #0x11                  	// #17
   2cd7c:	cinc	x9, x9, ls  // ls = plast
   2cd80:	cmp	x27, #0x190
   2cd84:	str	x9, [x20, #16]
   2cd88:	b.hi	2cda4 <PyInit__decimal@@Base+0x262f0>  // b.pmore
   2cd8c:	mov	w8, #0x1                   	// #1
   2cd90:	add	x9, x22, x24
   2cd94:	sub	x8, x8, x24
   2cd98:	str	x8, [sp, #1648]
   2cd9c:	sub	x22, x9, #0x1
   2cda0:	b	2cdb8 <PyInit__decimal@@Base+0x26304>
   2cda4:	neg	x9, x24
   2cda8:	add	x22, x22, x24
   2cdac:	orr	w8, w8, #0x1
   2cdb0:	str	x9, [sp, #1648]
   2cdb4:	strb	w8, [x20]
   2cdb8:	sub	x0, x29, #0x68
   2cdbc:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2cdc0:	sub	x0, x29, #0x38
   2cdc4:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2cdc8:	mov	w8, #0x8                   	// #8
   2cdcc:	stur	w8, [x29, #-20]
   2cdd0:	ldr	x8, [x21]
   2cdd4:	sub	x9, x23, #0x74
   2cdd8:	cmp	x9, #0x310
   2cddc:	add	x27, x8, #0x2
   2cde0:	b.cc	2cef8 <PyInit__decimal@@Base+0x26444>  // b.lo, b.ul, b.last
   2cde4:	cbnz	x22, 2cef8 <PyInit__decimal@@Base+0x26444>
   2cde8:	adrp	x24, 50000 <PyInit__decimal@@Base+0x4954c>
   2cdec:	add	x24, x24, #0xc88
   2cdf0:	add	x0, sp, #0x668
   2cdf4:	mov	x1, x24
   2cdf8:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2cdfc:	sub	x8, x29, #0x68
   2ce00:	mov	w23, w0
   2ce04:	add	x5, x8, #0x1c
   2ce08:	add	x0, sp, #0x208
   2ce0c:	add	x1, sp, #0x668
   2ce10:	sub	x4, x29, #0x68
   2ce14:	mov	w3, #0x1                   	// #1
   2ce18:	mov	x2, x24
   2ce1c:	bl	27200 <PyInit__decimal@@Base+0x2074c>
   2ce20:	ldurh	w8, [x29, #-76]
   2ce24:	mov	w9, #0x3be                 	// #958
   2ce28:	tst	w8, w9
   2ce2c:	b.eq	2ce98 <PyInit__decimal@@Base+0x263e4>  // b.none
   2ce30:	ldrb	w8, [x20]
   2ce34:	tbnz	w8, #5, 2ce74 <PyInit__decimal@@Base+0x263c0>
   2ce38:	ldr	x9, [x20, #32]
   2ce3c:	ldr	x1, [x25, #1344]
   2ce40:	cmp	x9, x1
   2ce44:	b.le	2ce74 <PyInit__decimal@@Base+0x263c0>
   2ce48:	strb	wzr, [sp, #8]
   2ce4c:	ldr	x0, [x20, #40]
   2ce50:	add	x3, sp, #0x8
   2ce54:	mov	w2, #0x8                   	// #8
   2ce58:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2ce5c:	str	x0, [x20, #40]
   2ce60:	ldrb	w8, [sp, #8]
   2ce64:	cbnz	w8, 2ce70 <PyInit__decimal@@Base+0x263bc>
   2ce68:	ldr	x8, [x25, #1344]
   2ce6c:	str	x8, [x20, #32]
   2ce70:	ldrb	w8, [x20]
   2ce74:	and	w8, w8, #0xf0
   2ce78:	orr	w8, w8, #0x4
   2ce7c:	strb	w8, [x20]
   2ce80:	stp	xzr, xzr, [x26]
   2ce84:	str	xzr, [x26, #16]
   2ce88:	ldr	w8, [x19]
   2ce8c:	orr	w8, w8, #0x200
   2ce90:	str	w8, [x19]
   2ce94:	b	2d068 <PyInit__decimal@@Base+0x265b4>
   2ce98:	ldr	x8, [sp, #528]
   2ce9c:	tbz	w23, #31, 2cea8 <PyInit__decimal@@Base+0x263f4>
   2cea0:	add	x8, x8, #0x1
   2cea4:	str	x8, [sp, #528]
   2cea8:	ldr	x11, [x21, #16]
   2ceac:	ldr	x12, [x21]
   2ceb0:	ldr	x9, [sp, #536]
   2ceb4:	sub	x10, x8, #0x1
   2ceb8:	sub	x11, x11, x12
   2cebc:	add	x13, x10, x9
   2cec0:	add	x11, x11, #0x1
   2cec4:	cmp	x13, x11
   2cec8:	b.ge	2cee4 <PyInit__decimal@@Base+0x26430>  // b.tcont
   2cecc:	lsr	w1, w23, #31
   2ced0:	sub	x3, x11, #0x1
   2ced4:	mov	w2, #0x1                   	// #1
   2ced8:	mov	x0, x20
   2cedc:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2cee0:	b	2d068 <PyInit__decimal@@Base+0x265b4>
   2cee4:	add	x8, x8, x9
   2cee8:	sub	x8, x8, #0x2
   2ceec:	and	x8, x8, x8, asr #63
   2cef0:	sub	x27, x27, x8
   2cef4:	str	x10, [sp, #528]
   2cef8:	cmp	x27, #0x3
   2cefc:	b.lt	2d028 <PyInit__decimal@@Base+0x26574>  // b.tstop
   2cf00:	mov	w9, #0xffffffff            	// #-1
   2cf04:	add	x8, sp, #0x8
   2cf08:	mov	x10, x27
   2cf0c:	add	x11, x10, #0x2
   2cf10:	add	x10, x10, #0x3
   2cf14:	cmp	x11, #0x0
   2cf18:	csel	x10, x10, x11, lt  // lt = tstop
   2cf1c:	add	w9, w9, #0x1
   2cf20:	asr	x10, x10, #1
   2cf24:	cmp	x11, #0x5
   2cf28:	str	x10, [x8, w9, sxtw #3]
   2cf2c:	b.gt	2cf0c <PyInit__decimal@@Base+0x26458>
   2cf30:	tbnz	w9, #31, 2d028 <PyInit__decimal@@Base+0x26574>
   2cf34:	ldrb	w8, [x20]
   2cf38:	adrp	x21, 50000 <PyInit__decimal@@Base+0x4954c>
   2cf3c:	mov	w25, w9
   2cf40:	add	x26, sp, #0x8
   2cf44:	add	x21, x21, #0xc88
   2cf48:	ldr	x9, [x26, x25, lsl #3]
   2cf4c:	eor	w8, w8, #0x1
   2cf50:	add	x0, sp, #0x208
   2cf54:	sub	x2, x29, #0x38
   2cf58:	lsl	x9, x9, #1
   2cf5c:	add	x9, x9, #0x3
   2cf60:	mov	x1, x20
   2cf64:	mov	x3, x19
   2cf68:	stur	x9, [x29, #-56]
   2cf6c:	strb	w8, [x20]
   2cf70:	bl	2a7dc <PyInit__decimal@@Base+0x23d28>
   2cf74:	ldrb	w8, [x20]
   2cf78:	eor	w8, w8, #0x1
   2cf7c:	strb	w8, [x20]
   2cf80:	ldr	x8, [sp, #1656]
   2cf84:	ldur	x9, [x29, #-56]
   2cf88:	subs	x24, x8, x9
   2cf8c:	b.le	2cfb8 <PyInit__decimal@@Base+0x26504>
   2cf90:	add	x0, sp, #0x438
   2cf94:	add	x1, sp, #0x668
   2cf98:	mov	x2, x24
   2cf9c:	mov	x3, x19
   2cfa0:	add	x23, sp, #0x438
   2cfa4:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   2cfa8:	ldr	x8, [sp, #1088]
   2cfac:	add	x8, x8, x24
   2cfb0:	str	x8, [sp, #1088]
   2cfb4:	b	2cfbc <PyInit__decimal@@Base+0x26508>
   2cfb8:	add	x23, sp, #0x668
   2cfbc:	add	x0, sp, #0x208
   2cfc0:	add	x2, sp, #0x208
   2cfc4:	sub	x3, x29, #0x38
   2cfc8:	mov	x1, x23
   2cfcc:	mov	x4, x19
   2cfd0:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   2cfd4:	add	x0, sp, #0x208
   2cfd8:	sub	x1, x29, #0x38
   2cfdc:	mov	x2, x19
   2cfe0:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2cfe4:	add	x0, sp, #0x208
   2cfe8:	add	x1, sp, #0x208
   2cfec:	sub	x3, x29, #0x68
   2cff0:	mov	x2, x21
   2cff4:	mov	x4, x19
   2cff8:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   2cffc:	add	x2, sp, #0x208
   2d000:	sub	x3, x29, #0x68
   2d004:	mov	x0, x20
   2d008:	mov	x1, x20
   2d00c:	mov	x4, x19
   2d010:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   2d014:	ldrb	w8, [x20]
   2d018:	tst	w8, #0xe
   2d01c:	b.ne	2d028 <PyInit__decimal@@Base+0x26574>  // b.any
   2d020:	subs	x25, x25, #0x1
   2d024:	b.ge	2cf48 <PyInit__decimal@@Base+0x26494>  // b.tcont
   2d028:	add	x1, x27, #0x1
   2d02c:	add	x0, sp, #0x668
   2d030:	mov	x2, x19
   2d034:	bl	2bb3c <PyInit__decimal@@Base+0x25088>
   2d038:	add	x0, sp, #0x208
   2d03c:	add	x1, sp, #0x668
   2d040:	sub	x3, x29, #0x68
   2d044:	mov	x2, x22
   2d048:	mov	x4, x19
   2d04c:	bl	2e798 <PyInit__decimal@@Base+0x27ce4>
   2d050:	add	x1, sp, #0x208
   2d054:	sub	x3, x29, #0x68
   2d058:	mov	x0, x20
   2d05c:	mov	x2, x20
   2d060:	mov	x4, x19
   2d064:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   2d068:	ldr	w8, [x19]
   2d06c:	mov	w9, #0x1040                	// #4160
   2d070:	orr	w8, w8, w9
   2d074:	str	w8, [x19]
   2d078:	ldrb	w8, [sp, #1640]
   2d07c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2d080:	cmp	w8, #0x1f
   2d084:	b.hi	2d098 <PyInit__decimal@@Base+0x265e4>  // b.pmore
   2d088:	ldr	x8, [x19, #1376]
   2d08c:	ldr	x0, [sp, #1680]
   2d090:	blr	x8
   2d094:	ldrb	w8, [sp, #1640]
   2d098:	tbnz	w8, #4, 2d0a8 <PyInit__decimal@@Base+0x265f4>
   2d09c:	ldr	x8, [x19, #1376]
   2d0a0:	add	x0, sp, #0x668
   2d0a4:	blr	x8
   2d0a8:	ldrb	w8, [sp, #1080]
   2d0ac:	cmp	w8, #0x1f
   2d0b0:	b.hi	2d0c4 <PyInit__decimal@@Base+0x26610>  // b.pmore
   2d0b4:	ldr	x8, [x19, #1376]
   2d0b8:	ldr	x0, [sp, #1120]
   2d0bc:	blr	x8
   2d0c0:	ldrb	w8, [sp, #1080]
   2d0c4:	tbnz	w8, #4, 2d0d4 <PyInit__decimal@@Base+0x26620>
   2d0c8:	ldr	x8, [x19, #1376]
   2d0cc:	add	x0, sp, #0x438
   2d0d0:	blr	x8
   2d0d4:	ldrb	w8, [sp, #520]
   2d0d8:	cmp	w8, #0x1f
   2d0dc:	b.hi	2d0f0 <PyInit__decimal@@Base+0x2663c>  // b.pmore
   2d0e0:	ldr	x8, [x19, #1376]
   2d0e4:	ldr	x0, [sp, #560]
   2d0e8:	blr	x8
   2d0ec:	ldrb	w8, [sp, #520]
   2d0f0:	tbnz	w8, #4, 2d100 <PyInit__decimal@@Base+0x2664c>
   2d0f4:	ldr	x8, [x19, #1376]
   2d0f8:	add	x0, sp, #0x208
   2d0fc:	blr	x8
   2d100:	add	sp, sp, #0x900
   2d104:	ldp	x20, x19, [sp, #80]
   2d108:	ldp	x22, x21, [sp, #64]
   2d10c:	ldp	x24, x23, [sp, #48]
   2d110:	ldp	x26, x25, [sp, #32]
   2d114:	ldp	x28, x27, [sp, #16]
   2d118:	ldp	x29, x30, [sp], #96
   2d11c:	ret
   2d120:	mov	w9, #0xe                   	// #14
   2d124:	b	2cd80 <PyInit__decimal@@Base+0x262cc>
   2d128:	mov	w9, #0x9                   	// #9
   2d12c:	b	2cd80 <PyInit__decimal@@Base+0x262cc>
   2d130:	stp	x29, x30, [sp, #-96]!
   2d134:	stp	x28, x27, [sp, #16]
   2d138:	stp	x26, x25, [sp, #32]
   2d13c:	stp	x24, x23, [sp, #48]
   2d140:	stp	x22, x21, [sp, #64]
   2d144:	stp	x20, x19, [sp, #80]
   2d148:	mov	x29, sp
   2d14c:	sub	sp, sp, #0x910
   2d150:	ldp	q1, q0, [x2, #16]
   2d154:	ldr	q2, [x2]
   2d158:	mov	w8, #0x6                   	// #6
   2d15c:	mov	x20, x3
   2d160:	stp	q1, q0, [x29, #-48]
   2d164:	stur	q2, [x29, #-64]
   2d168:	stur	w8, [x29, #-28]
   2d16c:	ldrb	w10, [x1]
   2d170:	mov	x22, x2
   2d174:	mov	x21, x1
   2d178:	mov	x19, x0
   2d17c:	tst	w10, #0xe
   2d180:	b.eq	2d1f8 <PyInit__decimal@@Base+0x26744>  // b.none
   2d184:	mov	x0, x19
   2d188:	mov	x1, x21
   2d18c:	mov	x2, x22
   2d190:	mov	x3, x20
   2d194:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   2d198:	cbnz	w0, 2d604 <PyInit__decimal@@Base+0x26b50>
   2d19c:	ldrb	w9, [x21]
   2d1a0:	ldrb	w8, [x19]
   2d1a4:	tbnz	w9, #0, 2d2a4 <PyInit__decimal@@Base+0x267f0>
   2d1a8:	tbnz	w8, #5, 2d1ec <PyInit__decimal@@Base+0x26738>
   2d1ac:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   2d1b0:	ldr	x9, [x19, #32]
   2d1b4:	ldr	x1, [x20, #1344]
   2d1b8:	cmp	x9, x1
   2d1bc:	b.le	2d1ec <PyInit__decimal@@Base+0x26738>
   2d1c0:	strb	wzr, [sp, #1744]
   2d1c4:	ldr	x0, [x19, #40]
   2d1c8:	add	x3, sp, #0x6d0
   2d1cc:	mov	w2, #0x8                   	// #8
   2d1d0:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2d1d4:	str	x0, [x19, #40]
   2d1d8:	ldrb	w8, [sp, #1744]
   2d1dc:	cbnz	w8, 2d1e8 <PyInit__decimal@@Base+0x26734>
   2d1e0:	ldr	x8, [x20, #1344]
   2d1e4:	str	x8, [x19, #32]
   2d1e8:	ldrb	w8, [x19]
   2d1ec:	and	w8, w8, #0xf0
   2d1f0:	str	xzr, [x19, #24]
   2d1f4:	b	2d5f8 <PyInit__decimal@@Base+0x26b44>
   2d1f8:	ldr	x1, [x21, #40]
   2d1fc:	ldr	x9, [x21, #24]
   2d200:	add	x8, x1, x9, lsl #3
   2d204:	ldur	x8, [x8, #-8]
   2d208:	cbz	x8, 2d24c <PyInit__decimal@@Base+0x26798>
   2d20c:	tbnz	w10, #0, 2d2ac <PyInit__decimal@@Base+0x267f8>
   2d210:	adrp	x24, 3f000 <PyInit__decimal@@Base+0x3854c>
   2d214:	add	x24, x24, #0x370
   2d218:	ldr	x25, [x24, #72]
   2d21c:	cmp	x25, x8
   2d220:	b.ls	2d318 <PyInit__decimal@@Base+0x26864>  // b.plast
   2d224:	ldr	x11, [x24, #32]
   2d228:	cmp	x11, x8
   2d22c:	b.ls	2d340 <PyInit__decimal@@Base+0x2688c>  // b.plast
   2d230:	ldr	x11, [x24, #16]
   2d234:	cmp	x11, x8
   2d238:	b.ls	2d384 <PyInit__decimal@@Base+0x268d0>  // b.plast
   2d23c:	ldr	x11, [x24, #8]
   2d240:	cmp	x11, x8
   2d244:	mov	w11, #0x1                   	// #1
   2d248:	b	2d3e8 <PyInit__decimal@@Base+0x26934>
   2d24c:	ldrb	w8, [x19]
   2d250:	tbnz	w8, #5, 2d294 <PyInit__decimal@@Base+0x267e0>
   2d254:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   2d258:	ldr	x9, [x19, #32]
   2d25c:	ldr	x1, [x20, #1344]
   2d260:	cmp	x9, x1
   2d264:	b.le	2d294 <PyInit__decimal@@Base+0x267e0>
   2d268:	strb	wzr, [sp, #1744]
   2d26c:	ldr	x0, [x19, #40]
   2d270:	add	x3, sp, #0x6d0
   2d274:	mov	w2, #0x8                   	// #8
   2d278:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2d27c:	str	x0, [x19, #40]
   2d280:	ldrb	w8, [sp, #1744]
   2d284:	cbnz	w8, 2d290 <PyInit__decimal@@Base+0x267dc>
   2d288:	ldr	x8, [x20, #1344]
   2d28c:	str	x8, [x19, #32]
   2d290:	ldrb	w8, [x19]
   2d294:	and	w8, w8, #0xf0
   2d298:	str	xzr, [x19, #24]
   2d29c:	orr	w8, w8, #0x3
   2d2a0:	b	2d5fc <PyInit__decimal@@Base+0x26b48>
   2d2a4:	tbz	w8, #5, 2d2b4 <PyInit__decimal@@Base+0x26800>
   2d2a8:	b	2d2f4 <PyInit__decimal@@Base+0x26840>
   2d2ac:	ldrb	w8, [x19]
   2d2b0:	tbnz	w8, #5, 2d2f4 <PyInit__decimal@@Base+0x26840>
   2d2b4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2d2b8:	ldr	x9, [x19, #32]
   2d2bc:	ldr	x1, [x21, #1344]
   2d2c0:	cmp	x9, x1
   2d2c4:	b.le	2d2f4 <PyInit__decimal@@Base+0x26840>
   2d2c8:	strb	wzr, [sp, #1744]
   2d2cc:	ldr	x0, [x19, #40]
   2d2d0:	add	x3, sp, #0x6d0
   2d2d4:	mov	w2, #0x8                   	// #8
   2d2d8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2d2dc:	str	x0, [x19, #40]
   2d2e0:	ldrb	w8, [sp, #1744]
   2d2e4:	cbnz	w8, 2d2f0 <PyInit__decimal@@Base+0x2683c>
   2d2e8:	ldr	x8, [x21, #1344]
   2d2ec:	str	x8, [x19, #32]
   2d2f0:	ldrb	w8, [x19]
   2d2f4:	and	w8, w8, #0xf0
   2d2f8:	orr	w8, w8, #0x4
   2d2fc:	stp	xzr, xzr, [x19, #16]
   2d300:	strb	w8, [x19]
   2d304:	str	xzr, [x19, #8]
   2d308:	ldr	w8, [x20]
   2d30c:	orr	w8, w8, #0x100
   2d310:	str	w8, [x20]
   2d314:	b	2d604 <PyInit__decimal@@Base+0x26b50>
   2d318:	ldr	x11, [x24, #112]
   2d31c:	cmp	x11, x8
   2d320:	b.ls	2d35c <PyInit__decimal@@Base+0x268a8>  // b.plast
   2d324:	ldr	x11, [x24, #88]
   2d328:	cmp	x11, x8
   2d32c:	b.ls	2d394 <PyInit__decimal@@Base+0x268e0>  // b.plast
   2d330:	ldr	x11, [x24, #80]
   2d334:	cmp	x11, x8
   2d338:	mov	w11, #0xa                   	// #10
   2d33c:	b	2d3e8 <PyInit__decimal@@Base+0x26934>
   2d340:	ldr	x11, [x24, #48]
   2d344:	cmp	x11, x8
   2d348:	b.ls	2d3b0 <PyInit__decimal@@Base+0x268fc>  // b.plast
   2d34c:	ldr	x11, [x24, #40]
   2d350:	cmp	x11, x8
   2d354:	mov	w11, #0x5                   	// #5
   2d358:	b	2d3e8 <PyInit__decimal@@Base+0x26934>
   2d35c:	ldr	x11, [x24, #144]
   2d360:	cmp	x11, x8
   2d364:	b.ls	2d3cc <PyInit__decimal@@Base+0x26918>  // b.plast
   2d368:	ldr	x11, [x24, #128]
   2d36c:	cmp	x11, x8
   2d370:	b.ls	2d3dc <PyInit__decimal@@Base+0x26928>  // b.plast
   2d374:	ldr	x11, [x24, #120]
   2d378:	cmp	x11, x8
   2d37c:	mov	w11, #0xf                   	// #15
   2d380:	b	2d3e8 <PyInit__decimal@@Base+0x26934>
   2d384:	ldr	x11, [x24, #24]
   2d388:	cmp	x11, x8
   2d38c:	mov	w11, #0x3                   	// #3
   2d390:	b	2d3e8 <PyInit__decimal@@Base+0x26934>
   2d394:	ldr	x11, [x24, #104]
   2d398:	cmp	x11, x8
   2d39c:	b.ls	2d560 <PyInit__decimal@@Base+0x26aac>  // b.plast
   2d3a0:	ldr	x11, [x24, #96]
   2d3a4:	cmp	x11, x8
   2d3a8:	mov	w11, #0xc                   	// #12
   2d3ac:	b	2d3e8 <PyInit__decimal@@Base+0x26934>
   2d3b0:	ldr	x11, [x24, #64]
   2d3b4:	cmp	x11, x8
   2d3b8:	b.ls	2d568 <PyInit__decimal@@Base+0x26ab4>  // b.plast
   2d3bc:	ldr	x11, [x24, #56]
   2d3c0:	cmp	x11, x8
   2d3c4:	mov	w11, #0x7                   	// #7
   2d3c8:	b	2d3e8 <PyInit__decimal@@Base+0x26934>
   2d3cc:	ldr	x11, [x24, #152]
   2d3d0:	cmp	x11, x8
   2d3d4:	mov	w11, #0x13                  	// #19
   2d3d8:	b	2d3e8 <PyInit__decimal@@Base+0x26934>
   2d3dc:	ldr	x11, [x24, #136]
   2d3e0:	cmp	x11, x8
   2d3e4:	mov	w11, #0x11                  	// #17
   2d3e8:	cinc	x11, x11, ls  // ls = plast
   2d3ec:	add	x11, x24, x11, lsl #3
   2d3f0:	ldur	x11, [x11, #-8]
   2d3f4:	cmp	x11, x8
   2d3f8:	b.ne	2d410 <PyInit__decimal@@Base+0x2695c>  // b.any
   2d3fc:	sub	x8, x9, #0x2
   2d400:	tbnz	x8, #63, 2d488 <PyInit__decimal@@Base+0x269d4>
   2d404:	ldr	x11, [x1, x8, lsl #3]
   2d408:	sub	x8, x8, #0x1
   2d40c:	cbz	x11, 2d400 <PyInit__decimal@@Base+0x2694c>
   2d410:	mov	x23, x21
   2d414:	ldr	x11, [x23, #8]!
   2d418:	ldr	x12, [x23, #8]
   2d41c:	add	x8, x11, x12
   2d420:	sub	x26, x8, #0x1
   2d424:	eor	x8, x26, x26, asr #63
   2d428:	cmp	x8, #0x0
   2d42c:	cneg	x8, x8, mi  // mi = first
   2d430:	cmp	x25, x8
   2d434:	b.ls	2d460 <PyInit__decimal@@Base+0x269ac>  // b.plast
   2d438:	ldr	x13, [x24, #32]
   2d43c:	cmp	x13, x8
   2d440:	b.ls	2d4c4 <PyInit__decimal@@Base+0x26a10>  // b.plast
   2d444:	ldr	x13, [x24, #16]
   2d448:	cmp	x13, x8
   2d44c:	b.ls	2d508 <PyInit__decimal@@Base+0x26a54>  // b.plast
   2d450:	ldr	x13, [x24, #8]
   2d454:	cmp	x13, x8
   2d458:	mov	w8, #0x1                   	// #1
   2d45c:	b	2d57c <PyInit__decimal@@Base+0x26ac8>
   2d460:	ldr	x13, [x24, #112]
   2d464:	cmp	x13, x8
   2d468:	b.ls	2d4e0 <PyInit__decimal@@Base+0x26a2c>  // b.plast
   2d46c:	ldr	x13, [x24, #88]
   2d470:	cmp	x13, x8
   2d474:	b.ls	2d518 <PyInit__decimal@@Base+0x26a64>  // b.plast
   2d478:	ldr	x13, [x24, #80]
   2d47c:	cmp	x13, x8
   2d480:	mov	w8, #0xa                   	// #10
   2d484:	b	2d57c <PyInit__decimal@@Base+0x26ac8>
   2d488:	ldp	x8, x9, [x21, #8]
   2d48c:	mov	w10, #0x1                   	// #1
   2d490:	mov	x0, x19
   2d494:	mov	x3, xzr
   2d498:	add	x8, x8, x9
   2d49c:	subs	x9, x8, #0x1
   2d4a0:	sub	x8, x10, x8
   2d4a4:	csel	x2, x9, x8, pl  // pl = nfrst
   2d4a8:	lsr	x1, x9, #63
   2d4ac:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2d4b0:	sub	x1, x29, #0x40
   2d4b4:	mov	x0, x19
   2d4b8:	mov	x2, x20
   2d4bc:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2d4c0:	b	2d604 <PyInit__decimal@@Base+0x26b50>
   2d4c4:	ldr	x13, [x24, #48]
   2d4c8:	cmp	x13, x8
   2d4cc:	b.ls	2d534 <PyInit__decimal@@Base+0x26a80>  // b.plast
   2d4d0:	ldr	x13, [x24, #40]
   2d4d4:	cmp	x13, x8
   2d4d8:	mov	w8, #0x5                   	// #5
   2d4dc:	b	2d57c <PyInit__decimal@@Base+0x26ac8>
   2d4e0:	ldr	x13, [x24, #144]
   2d4e4:	cmp	x13, x8
   2d4e8:	b.ls	2d550 <PyInit__decimal@@Base+0x26a9c>  // b.plast
   2d4ec:	ldr	x13, [x24, #128]
   2d4f0:	cmp	x13, x8
   2d4f4:	b.ls	2d570 <PyInit__decimal@@Base+0x26abc>  // b.plast
   2d4f8:	ldr	x13, [x24, #120]
   2d4fc:	cmp	x13, x8
   2d500:	mov	w8, #0xf                   	// #15
   2d504:	b	2d57c <PyInit__decimal@@Base+0x26ac8>
   2d508:	ldr	x13, [x24, #24]
   2d50c:	cmp	x13, x8
   2d510:	mov	w8, #0x3                   	// #3
   2d514:	b	2d57c <PyInit__decimal@@Base+0x26ac8>
   2d518:	ldr	x13, [x24, #104]
   2d51c:	cmp	x13, x8
   2d520:	b.ls	2db10 <PyInit__decimal@@Base+0x2705c>  // b.plast
   2d524:	ldr	x13, [x24, #96]
   2d528:	cmp	x13, x8
   2d52c:	mov	w8, #0xc                   	// #12
   2d530:	b	2d57c <PyInit__decimal@@Base+0x26ac8>
   2d534:	ldr	x13, [x24, #64]
   2d538:	cmp	x13, x8
   2d53c:	b.ls	2db18 <PyInit__decimal@@Base+0x27064>  // b.plast
   2d540:	ldr	x13, [x24, #56]
   2d544:	cmp	x13, x8
   2d548:	mov	w8, #0x7                   	// #7
   2d54c:	b	2d57c <PyInit__decimal@@Base+0x26ac8>
   2d550:	ldr	x13, [x24, #152]
   2d554:	cmp	x13, x8
   2d558:	mov	w8, #0x13                  	// #19
   2d55c:	b	2d57c <PyInit__decimal@@Base+0x26ac8>
   2d560:	mov	w11, #0xe                   	// #14
   2d564:	b	2d3ec <PyInit__decimal@@Base+0x26938>
   2d568:	mov	w11, #0x9                   	// #9
   2d56c:	b	2d3ec <PyInit__decimal@@Base+0x26938>
   2d570:	ldr	x13, [x24, #136]
   2d574:	cmp	x13, x8
   2d578:	mov	w8, #0x11                  	// #17
   2d57c:	cinc	x8, x8, ls  // ls = plast
   2d580:	ldr	x13, [x22, #8]
   2d584:	sub	x8, x8, #0x1
   2d588:	cmp	x13, x8
   2d58c:	b.ge	2d624 <PyInit__decimal@@Base+0x26b70>  // b.tcont
   2d590:	ldr	w8, [x20]
   2d594:	mov	w9, #0x1840                	// #6208
   2d598:	orr	w8, w8, w9
   2d59c:	str	w8, [x20]
   2d5a0:	ldrb	w8, [x19]
   2d5a4:	tbnz	w8, #5, 2d5e8 <PyInit__decimal@@Base+0x26b34>
   2d5a8:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   2d5ac:	ldr	x9, [x19, #32]
   2d5b0:	ldr	x1, [x20, #1344]
   2d5b4:	cmp	x9, x1
   2d5b8:	b.le	2d5e8 <PyInit__decimal@@Base+0x26b34>
   2d5bc:	strb	wzr, [sp, #1744]
   2d5c0:	ldr	x0, [x19, #40]
   2d5c4:	add	x3, sp, #0x6d0
   2d5c8:	mov	w2, #0x8                   	// #8
   2d5cc:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2d5d0:	str	x0, [x19, #40]
   2d5d4:	ldrb	w8, [sp, #1744]
   2d5d8:	cbnz	w8, 2d5e4 <PyInit__decimal@@Base+0x26b30>
   2d5dc:	ldr	x8, [x20, #1344]
   2d5e0:	str	x8, [x19, #32]
   2d5e4:	ldrb	w8, [x19]
   2d5e8:	lsr	x9, x26, #63
   2d5ec:	and	w8, w8, #0xf0
   2d5f0:	str	xzr, [x19, #24]
   2d5f4:	orr	w8, w8, w9
   2d5f8:	orr	w8, w8, #0x2
   2d5fc:	strb	w8, [x19]
   2d600:	stp	xzr, xzr, [x19, #8]
   2d604:	add	sp, sp, #0x910
   2d608:	ldp	x20, x19, [sp, #80]
   2d60c:	ldp	x22, x21, [sp, #64]
   2d610:	ldp	x24, x23, [sp, #48]
   2d614:	ldp	x26, x25, [sp, #32]
   2d618:	ldp	x28, x27, [sp, #16]
   2d61c:	ldp	x29, x30, [sp], #96
   2d620:	ret
   2d624:	ldr	w8, [x22, #44]
   2d628:	cbz	w8, 2d700 <PyInit__decimal@@Base+0x26c4c>
   2d62c:	mov	w8, #0x30                  	// #48
   2d630:	add	x14, sp, #0x6d0
   2d634:	str	x14, [sp, #1736]
   2d638:	add	x14, sp, #0x4a0
   2d63c:	strb	w8, [sp, #1696]
   2d640:	strb	w8, [sp, #1136]
   2d644:	strb	w8, [sp, #576]
   2d648:	strb	w8, [sp, #16]
   2d64c:	add	x8, sp, #0x10
   2d650:	str	x14, [sp, #1176]
   2d654:	add	x14, sp, #0x270
   2d658:	cmp	x8, x21
   2d65c:	mov	w13, #0x40                  	// #64
   2d660:	str	x14, [sp, #616]
   2d664:	add	x14, sp, #0x40
   2d668:	cset	w8, eq  // eq = none
   2d66c:	cmp	x19, x21
   2d670:	str	xzr, [sp, #1704]
   2d674:	str	xzr, [sp, #1712]
   2d678:	str	xzr, [sp, #1144]
   2d67c:	str	xzr, [sp, #1152]
   2d680:	str	xzr, [sp, #584]
   2d684:	str	xzr, [sp, #592]
   2d688:	stp	xzr, xzr, [sp, #24]
   2d68c:	str	xzr, [sp, #1720]
   2d690:	str	x13, [sp, #1728]
   2d694:	str	xzr, [sp, #1160]
   2d698:	str	x13, [sp, #1168]
   2d69c:	str	xzr, [sp, #600]
   2d6a0:	str	x13, [sp, #608]
   2d6a4:	stp	xzr, x13, [sp, #40]
   2d6a8:	str	x14, [sp, #56]
   2d6ac:	b.ne	2d798 <PyInit__decimal@@Base+0x26ce4>  // b.any
   2d6b0:	tbnz	w8, #0, 2d798 <PyInit__decimal@@Base+0x26ce4>
   2d6b4:	adrp	x26, 53000 <PyInit__decimal@@Base+0x4c54c>
   2d6b8:	ldr	x8, [x26, #1344]
   2d6bc:	cmp	x8, x9
   2d6c0:	csel	x8, x9, x8, lt  // lt = tstop
   2d6c4:	cmp	x8, #0x41
   2d6c8:	b.lt	2d770 <PyInit__decimal@@Base+0x26cbc>  // b.tstop
   2d6cc:	add	x0, sp, #0x10
   2d6d0:	mov	x1, x8
   2d6d4:	mov	x2, x20
   2d6d8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2d6dc:	cbz	w0, 2db20 <PyInit__decimal@@Base+0x2706c>
   2d6e0:	ldrb	w8, [sp, #16]
   2d6e4:	ldp	x12, x9, [x21, #16]
   2d6e8:	ldrb	w10, [x21]
   2d6ec:	ldr	x11, [x21, #8]
   2d6f0:	ldr	x0, [sp, #56]
   2d6f4:	ldr	x1, [x21, #40]
   2d6f8:	and	w8, w8, #0xfffffff0
   2d6fc:	b	2d778 <PyInit__decimal@@Base+0x26cc4>
   2d700:	sub	x3, x29, #0x40
   2d704:	mov	w0, #0x1                   	// #1
   2d708:	mov	x1, x19
   2d70c:	mov	x2, x21
   2d710:	mov	x4, x20
   2d714:	bl	2db84 <PyInit__decimal@@Base+0x270d0>
   2d718:	ldp	x8, x10, [x19, #8]
   2d71c:	ldur	x9, [x29, #-48]
   2d720:	add	x10, x8, x10
   2d724:	sub	x10, x10, #0x1
   2d728:	cmp	x10, x9
   2d72c:	b.ge	2d604 <PyInit__decimal@@Base+0x26b50>  // b.tcont
   2d730:	ldrb	w10, [x19]
   2d734:	tst	w10, #0xe
   2d738:	b.ne	2d750 <PyInit__decimal@@Base+0x26c9c>  // b.any
   2d73c:	ldr	x10, [x19, #40]
   2d740:	ldr	x11, [x19, #24]
   2d744:	add	x10, x10, x11, lsl #3
   2d748:	ldur	x10, [x10, #-8]
   2d74c:	cbz	x10, 2d604 <PyInit__decimal@@Base+0x26b50>
   2d750:	ldur	x10, [x29, #-64]
   2d754:	sub	x9, x9, x10
   2d758:	add	x9, x9, #0x1
   2d75c:	cmp	x8, x9
   2d760:	b.ge	2d604 <PyInit__decimal@@Base+0x26b50>  // b.tcont
   2d764:	ldr	w8, [x20]
   2d768:	orr	w8, w8, #0x4000
   2d76c:	b	2d310 <PyInit__decimal@@Base+0x2685c>
   2d770:	add	x0, sp, #0x40
   2d774:	mov	w8, #0x30                  	// #48
   2d778:	and	w10, w10, #0xf
   2d77c:	orr	w8, w8, w10
   2d780:	lsl	x2, x9, #3
   2d784:	stp	x11, x12, [sp, #24]
   2d788:	str	x9, [sp, #40]
   2d78c:	strb	w8, [sp, #16]
   2d790:	bl	63c0 <memcpy@plt>
   2d794:	add	x21, sp, #0x10
   2d798:	stur	wzr, [x29, #-24]
   2d79c:	adrp	x9, 40000 <PyInit__decimal@@Base+0x3954c>
   2d7a0:	ldr	x10, [x22]
   2d7a4:	ldr	q0, [x9, #96]
   2d7a8:	sub	x8, x29, #0x40
   2d7ac:	mov	w26, #0x1                   	// #1
   2d7b0:	add	x23, x8, #0x1c
   2d7b4:	add	x28, x10, #0x3
   2d7b8:	mov	w27, #0x13                  	// #19
   2d7bc:	str	q0, [sp]
   2d7c0:	b	2d7d4 <PyInit__decimal@@Base+0x26d20>
   2d7c4:	ldr	w8, [x20]
   2d7c8:	orr	w8, w8, #0x100
   2d7cc:	str	w8, [x20]
   2d7d0:	add	x28, x28, #0x13
   2d7d4:	sub	x3, x29, #0x40
   2d7d8:	mov	w0, wzr
   2d7dc:	mov	x1, x19
   2d7e0:	mov	x2, x21
   2d7e4:	mov	x4, x20
   2d7e8:	stur	x28, [x29, #-64]
   2d7ec:	bl	2db84 <PyInit__decimal@@Base+0x270d0>
   2d7f0:	ldp	x8, x9, [x19, #8]
   2d7f4:	ldrb	w10, [sp, #576]
   2d7f8:	ldur	x11, [x29, #-64]
   2d7fc:	ldr	x12, [sp, #616]
   2d800:	ldr	q0, [sp]
   2d804:	add	x8, x9, x8
   2d808:	and	w9, w10, #0xf0
   2d80c:	sub	x8, x8, x11
   2d810:	strb	w9, [sp, #576]
   2d814:	str	x8, [sp, #584]
   2d818:	str	q0, [x12]
   2d81c:	str	x26, [sp, #600]
   2d820:	ldr	x8, [x12]
   2d824:	cmp	x25, x8
   2d828:	b.ls	2d854 <PyInit__decimal@@Base+0x26da0>  // b.plast
   2d82c:	ldr	x9, [x24, #32]
   2d830:	cmp	x9, x8
   2d834:	b.ls	2d880 <PyInit__decimal@@Base+0x26dcc>  // b.plast
   2d838:	ldr	x9, [x24, #16]
   2d83c:	cmp	x9, x8
   2d840:	b.ls	2d8cc <PyInit__decimal@@Base+0x26e18>  // b.plast
   2d844:	ldr	x9, [x24, #8]
   2d848:	cmp	x9, x8
   2d84c:	cinc	x8, x26, ls  // ls = plast
   2d850:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d854:	ldr	x9, [x24, #112]
   2d858:	cmp	x9, x8
   2d85c:	b.ls	2d8a0 <PyInit__decimal@@Base+0x26dec>  // b.plast
   2d860:	ldr	x9, [x24, #88]
   2d864:	cmp	x9, x8
   2d868:	b.ls	2d8e0 <PyInit__decimal@@Base+0x26e2c>  // b.plast
   2d86c:	ldr	x9, [x24, #80]
   2d870:	cmp	x9, x8
   2d874:	mov	w8, #0xa                   	// #10
   2d878:	cinc	x8, x8, ls  // ls = plast
   2d87c:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d880:	ldr	x9, [x24, #48]
   2d884:	cmp	x9, x8
   2d888:	b.ls	2d900 <PyInit__decimal@@Base+0x26e4c>  // b.plast
   2d88c:	ldr	x9, [x24, #40]
   2d890:	cmp	x9, x8
   2d894:	mov	w8, #0x5                   	// #5
   2d898:	cinc	x8, x8, ls  // ls = plast
   2d89c:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d8a0:	ldr	x9, [x24, #144]
   2d8a4:	cmp	x9, x8
   2d8a8:	b.ls	2d920 <PyInit__decimal@@Base+0x26e6c>  // b.plast
   2d8ac:	ldr	x9, [x24, #128]
   2d8b0:	cmp	x9, x8
   2d8b4:	b.ls	2d930 <PyInit__decimal@@Base+0x26e7c>  // b.plast
   2d8b8:	ldr	x9, [x24, #120]
   2d8bc:	cmp	x9, x8
   2d8c0:	mov	w8, #0xf                   	// #15
   2d8c4:	cinc	x8, x8, ls  // ls = plast
   2d8c8:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d8cc:	ldr	x9, [x24, #24]
   2d8d0:	cmp	x9, x8
   2d8d4:	mov	w8, #0x3                   	// #3
   2d8d8:	cinc	x8, x8, ls  // ls = plast
   2d8dc:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d8e0:	ldr	x9, [x24, #104]
   2d8e4:	cmp	x9, x8
   2d8e8:	b.ls	2d944 <PyInit__decimal@@Base+0x26e90>  // b.plast
   2d8ec:	ldr	x9, [x24, #96]
   2d8f0:	cmp	x9, x8
   2d8f4:	mov	w8, #0xc                   	// #12
   2d8f8:	cinc	x8, x8, ls  // ls = plast
   2d8fc:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d900:	ldr	x9, [x24, #64]
   2d904:	cmp	x9, x8
   2d908:	b.ls	2d94c <PyInit__decimal@@Base+0x26e98>  // b.plast
   2d90c:	ldr	x9, [x24, #56]
   2d910:	cmp	x9, x8
   2d914:	mov	w8, #0x7                   	// #7
   2d918:	cinc	x8, x8, ls  // ls = plast
   2d91c:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d920:	ldr	x9, [x24, #152]
   2d924:	cmp	x9, x8
   2d928:	cinc	x8, x27, ls  // ls = plast
   2d92c:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d930:	ldr	x9, [x24, #136]
   2d934:	cmp	x9, x8
   2d938:	mov	w8, #0x11                  	// #17
   2d93c:	cinc	x8, x8, ls  // ls = plast
   2d940:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d944:	mov	w8, #0xe                   	// #14
   2d948:	b	2d950 <PyInit__decimal@@Base+0x26e9c>
   2d94c:	mov	w8, #0x9                   	// #9
   2d950:	str	x8, [sp, #592]
   2d954:	ldr	x8, [x22]
   2d958:	add	x0, sp, #0x6a0
   2d95c:	add	x2, sp, #0x240
   2d960:	sub	x3, x29, #0x40
   2d964:	mov	x1, x19
   2d968:	mov	x4, x23
   2d96c:	stur	x8, [x29, #-64]
   2d970:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   2d974:	add	x0, sp, #0x470
   2d978:	add	x2, sp, #0x240
   2d97c:	sub	x3, x29, #0x40
   2d980:	mov	x1, x19
   2d984:	mov	x4, x23
   2d988:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   2d98c:	ldrb	w8, [x19]
   2d990:	tst	w8, #0xe
   2d994:	b.ne	2d9e8 <PyInit__decimal@@Base+0x26f34>  // b.any
   2d998:	ldr	x8, [x19, #40]
   2d99c:	ldr	x9, [x19, #24]
   2d9a0:	add	x8, x8, x9, lsl #3
   2d9a4:	ldur	x8, [x8, #-8]
   2d9a8:	cbz	x8, 2d9e8 <PyInit__decimal@@Base+0x26f34>
   2d9ac:	ldrb	w8, [sp, #1696]
   2d9b0:	tst	w8, #0xe
   2d9b4:	b.ne	2d9c4 <PyInit__decimal@@Base+0x26f10>  // b.any
   2d9b8:	ldrb	w9, [sp, #1136]
   2d9bc:	tst	w9, #0xe
   2d9c0:	b.eq	2d9d8 <PyInit__decimal@@Base+0x26f24>  // b.none
   2d9c4:	tst	w8, #0xc
   2d9c8:	b.ne	2d7c4 <PyInit__decimal@@Base+0x26d10>  // b.any
   2d9cc:	ldrb	w8, [sp, #1136]
   2d9d0:	tst	w8, #0xc
   2d9d4:	b.ne	2d7c4 <PyInit__decimal@@Base+0x26d10>  // b.any
   2d9d8:	add	x0, sp, #0x6a0
   2d9dc:	add	x1, sp, #0x470
   2d9e0:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2d9e4:	cbnz	w0, 2d7d0 <PyInit__decimal@@Base+0x26d1c>
   2d9e8:	ldr	w8, [x22, #40]
   2d9ec:	ldur	x9, [x29, #-48]
   2d9f0:	stur	w8, [x29, #-24]
   2d9f4:	ldp	x8, x10, [x19, #8]
   2d9f8:	add	x10, x8, x10
   2d9fc:	sub	x10, x10, #0x1
   2da00:	cmp	x10, x9
   2da04:	b.ge	2da48 <PyInit__decimal@@Base+0x26f94>  // b.tcont
   2da08:	ldrb	w10, [x19]
   2da0c:	tst	w10, #0xe
   2da10:	b.ne	2da28 <PyInit__decimal@@Base+0x26f74>  // b.any
   2da14:	ldr	x10, [x19, #40]
   2da18:	ldr	x11, [x19, #24]
   2da1c:	add	x10, x10, x11, lsl #3
   2da20:	ldur	x10, [x10, #-8]
   2da24:	cbz	x10, 2da48 <PyInit__decimal@@Base+0x26f94>
   2da28:	ldur	x10, [x29, #-64]
   2da2c:	sub	x9, x9, x10
   2da30:	add	x9, x9, #0x1
   2da34:	cmp	x8, x9
   2da38:	b.ge	2da48 <PyInit__decimal@@Base+0x26f94>  // b.tcont
   2da3c:	ldr	w8, [x20]
   2da40:	orr	w8, w8, #0x4000
   2da44:	str	w8, [x20]
   2da48:	sub	x1, x29, #0x40
   2da4c:	mov	x0, x19
   2da50:	mov	x2, x20
   2da54:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2da58:	ldrb	w8, [sp, #1696]
   2da5c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2da60:	cmp	w8, #0x1f
   2da64:	b.hi	2da78 <PyInit__decimal@@Base+0x26fc4>  // b.pmore
   2da68:	ldr	x8, [x19, #1376]
   2da6c:	ldr	x0, [sp, #1736]
   2da70:	blr	x8
   2da74:	ldrb	w8, [sp, #1696]
   2da78:	tbnz	w8, #4, 2da88 <PyInit__decimal@@Base+0x26fd4>
   2da7c:	ldr	x8, [x19, #1376]
   2da80:	add	x0, sp, #0x6a0
   2da84:	blr	x8
   2da88:	ldrb	w8, [sp, #1136]
   2da8c:	cmp	w8, #0x1f
   2da90:	b.hi	2daa4 <PyInit__decimal@@Base+0x26ff0>  // b.pmore
   2da94:	ldr	x8, [x19, #1376]
   2da98:	ldr	x0, [sp, #1176]
   2da9c:	blr	x8
   2daa0:	ldrb	w8, [sp, #1136]
   2daa4:	tbnz	w8, #4, 2dab4 <PyInit__decimal@@Base+0x27000>
   2daa8:	ldr	x8, [x19, #1376]
   2daac:	add	x0, sp, #0x470
   2dab0:	blr	x8
   2dab4:	ldrb	w8, [sp, #576]
   2dab8:	cmp	w8, #0x1f
   2dabc:	b.hi	2dad0 <PyInit__decimal@@Base+0x2701c>  // b.pmore
   2dac0:	ldr	x8, [x19, #1376]
   2dac4:	ldr	x0, [sp, #616]
   2dac8:	blr	x8
   2dacc:	ldrb	w8, [sp, #576]
   2dad0:	tbnz	w8, #4, 2dae0 <PyInit__decimal@@Base+0x2702c>
   2dad4:	ldr	x8, [x19, #1376]
   2dad8:	add	x0, sp, #0x240
   2dadc:	blr	x8
   2dae0:	ldrb	w8, [sp, #16]
   2dae4:	cmp	w8, #0x1f
   2dae8:	b.hi	2dafc <PyInit__decimal@@Base+0x27048>  // b.pmore
   2daec:	ldr	x8, [x19, #1376]
   2daf0:	ldr	x0, [sp, #56]
   2daf4:	blr	x8
   2daf8:	ldrb	w8, [sp, #16]
   2dafc:	tbnz	w8, #4, 2d604 <PyInit__decimal@@Base+0x26b50>
   2db00:	ldr	x8, [x19, #1376]
   2db04:	add	x0, sp, #0x10
   2db08:	blr	x8
   2db0c:	b	2d604 <PyInit__decimal@@Base+0x26b50>
   2db10:	mov	w8, #0xe                   	// #14
   2db14:	b	2d580 <PyInit__decimal@@Base+0x26acc>
   2db18:	mov	w8, #0x9                   	// #9
   2db1c:	b	2d580 <PyInit__decimal@@Base+0x26acc>
   2db20:	ldrb	w8, [x21]
   2db24:	tbnz	w8, #5, 2db64 <PyInit__decimal@@Base+0x270b0>
   2db28:	ldr	x9, [x21, #32]
   2db2c:	ldr	x1, [x26, #1344]
   2db30:	cmp	x9, x1
   2db34:	b.le	2db64 <PyInit__decimal@@Base+0x270b0>
   2db38:	sturb	wzr, [x29, #-12]
   2db3c:	ldr	x0, [x21, #40]
   2db40:	sub	x3, x29, #0xc
   2db44:	mov	w2, #0x8                   	// #8
   2db48:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2db4c:	str	x0, [x21, #40]
   2db50:	ldurb	w8, [x29, #-12]
   2db54:	cbnz	w8, 2db60 <PyInit__decimal@@Base+0x270ac>
   2db58:	ldr	x8, [x26, #1344]
   2db5c:	str	x8, [x21, #32]
   2db60:	ldrb	w8, [x21]
   2db64:	and	w8, w8, #0xf0
   2db68:	orr	w8, w8, #0x4
   2db6c:	strb	w8, [x21]
   2db70:	stp	xzr, xzr, [x23]
   2db74:	str	xzr, [x23, #16]
   2db78:	ldr	w8, [x20]
   2db7c:	orr	w8, w8, #0x200
   2db80:	b	2d310 <PyInit__decimal@@Base+0x2685c>
   2db84:	stp	x29, x30, [sp, #-64]!
   2db88:	stp	x28, x23, [sp, #16]
   2db8c:	stp	x22, x21, [sp, #32]
   2db90:	stp	x20, x19, [sp, #48]
   2db94:	mov	x29, sp
   2db98:	sub	sp, sp, #0x260
   2db9c:	mov	w23, w0
   2dba0:	mov	w8, #0x30                  	// #48
   2dba4:	mov	w9, #0x40                  	// #64
   2dba8:	add	x10, sp, #0x30
   2dbac:	sub	x0, x29, #0x30
   2dbb0:	mov	x19, x4
   2dbb4:	mov	x21, x3
   2dbb8:	mov	x22, x2
   2dbbc:	mov	x20, x1
   2dbc0:	stp	xzr, xzr, [sp, #8]
   2dbc4:	strb	w8, [sp]
   2dbc8:	stp	xzr, x9, [sp, #24]
   2dbcc:	str	x10, [sp, #40]
   2dbd0:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2dbd4:	ldr	x8, [x21]
   2dbd8:	sub	x2, x29, #0x30
   2dbdc:	mov	x0, x20
   2dbe0:	mov	x1, x22
   2dbe4:	add	x8, x8, #0x3
   2dbe8:	mov	x3, x19
   2dbec:	stur	x8, [x29, #-48]
   2dbf0:	bl	2c9dc <PyInit__decimal@@Base+0x25f28>
   2dbf4:	ldur	x1, [x29, #-48]
   2dbf8:	mov	x0, sp
   2dbfc:	mov	x2, x19
   2dc00:	bl	2bb3c <PyInit__decimal@@Base+0x25088>
   2dc04:	cmp	w23, #0x1
   2dc08:	b.ne	2dc24 <PyInit__decimal@@Base+0x27170>  // b.any
   2dc0c:	ldp	q1, q0, [x21, #16]
   2dc10:	ldr	q2, [x21]
   2dc14:	mov	w8, #0x6                   	// #6
   2dc18:	stp	q1, q0, [x29, #-32]
   2dc1c:	stur	q2, [x29, #-48]
   2dc20:	stur	w8, [x29, #-12]
   2dc24:	mov	x3, sp
   2dc28:	sub	x4, x29, #0x30
   2dc2c:	mov	w0, wzr
   2dc30:	mov	x1, x20
   2dc34:	mov	x2, x20
   2dc38:	mov	x5, x19
   2dc3c:	bl	281c4 <PyInit__decimal@@Base+0x21710>
   2dc40:	ldrb	w8, [sp]
   2dc44:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2dc48:	cmp	w8, #0x1f
   2dc4c:	b.hi	2dc60 <PyInit__decimal@@Base+0x271ac>  // b.pmore
   2dc50:	ldr	x8, [x19, #1376]
   2dc54:	ldr	x0, [sp, #40]
   2dc58:	blr	x8
   2dc5c:	ldrb	w8, [sp]
   2dc60:	tbnz	w8, #4, 2dc70 <PyInit__decimal@@Base+0x271bc>
   2dc64:	ldr	x8, [x19, #1376]
   2dc68:	mov	x0, sp
   2dc6c:	blr	x8
   2dc70:	add	sp, sp, #0x260
   2dc74:	ldp	x20, x19, [sp, #48]
   2dc78:	ldp	x22, x21, [sp, #32]
   2dc7c:	ldp	x28, x23, [sp, #16]
   2dc80:	ldp	x29, x30, [sp], #64
   2dc84:	ret
   2dc88:	stp	x29, x30, [sp, #-64]!
   2dc8c:	str	x23, [sp, #16]
   2dc90:	stp	x22, x21, [sp, #32]
   2dc94:	stp	x20, x19, [sp, #48]
   2dc98:	mov	x29, sp
   2dc9c:	ldrb	w8, [x1]
   2dca0:	ldrb	w9, [x2]
   2dca4:	mov	x19, x4
   2dca8:	mov	x20, x3
   2dcac:	mov	x22, x2
   2dcb0:	mov	x23, x1
   2dcb4:	mov	x21, x0
   2dcb8:	tbz	w8, #2, 2dd08 <PyInit__decimal@@Base+0x27254>
   2dcbc:	and	w10, w9, #0xc
   2dcc0:	cbnz	w10, 2dd08 <PyInit__decimal@@Base+0x27254>
   2dcc4:	cmp	x21, x22
   2dcc8:	b.eq	2dea8 <PyInit__decimal@@Base+0x273f4>  // b.none
   2dccc:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2dcd0:	ldr	x8, [x22, #24]
   2dcd4:	ldr	x11, [x10, #1344]
   2dcd8:	ldr	x10, [x21, #32]
   2dcdc:	cmp	x11, x8
   2dce0:	csel	x1, x8, x11, lt  // lt = tstop
   2dce4:	cmp	x1, x10
   2dce8:	b.eq	2de34 <PyInit__decimal@@Base+0x27380>  // b.none
   2dcec:	ldrb	w11, [x21]
   2dcf0:	tbnz	w11, #5, 2de14 <PyInit__decimal@@Base+0x27360>
   2dcf4:	mov	x0, x21
   2dcf8:	mov	x2, x19
   2dcfc:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2dd00:	cbnz	w0, 2de2c <PyInit__decimal@@Base+0x27378>
   2dd04:	b	2dea8 <PyInit__decimal@@Base+0x273f4>
   2dd08:	tst	w8, #0xc
   2dd0c:	b.ne	2dd58 <PyInit__decimal@@Base+0x272a4>  // b.any
   2dd10:	tbz	w9, #2, 2dd58 <PyInit__decimal@@Base+0x272a4>
   2dd14:	cmp	x21, x23
   2dd18:	b.eq	2dea8 <PyInit__decimal@@Base+0x273f4>  // b.none
   2dd1c:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2dd20:	ldr	x9, [x23, #24]
   2dd24:	ldr	x11, [x10, #1344]
   2dd28:	ldr	x10, [x21, #32]
   2dd2c:	cmp	x11, x9
   2dd30:	csel	x1, x9, x11, lt  // lt = tstop
   2dd34:	cmp	x1, x10
   2dd38:	b.eq	2de7c <PyInit__decimal@@Base+0x273c8>  // b.none
   2dd3c:	ldrb	w11, [x21]
   2dd40:	tbnz	w11, #5, 2de5c <PyInit__decimal@@Base+0x273a8>
   2dd44:	mov	x0, x21
   2dd48:	mov	x2, x19
   2dd4c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2dd50:	cbnz	w0, 2de74 <PyInit__decimal@@Base+0x273c0>
   2dd54:	b	2dea8 <PyInit__decimal@@Base+0x273f4>
   2dd58:	mov	x0, x21
   2dd5c:	mov	x1, x23
   2dd60:	mov	x2, x22
   2dd64:	mov	x3, x20
   2dd68:	mov	x4, x19
   2dd6c:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   2dd70:	cbz	w0, 2dd88 <PyInit__decimal@@Base+0x272d4>
   2dd74:	ldp	x20, x19, [sp, #48]
   2dd78:	ldp	x22, x21, [sp, #32]
   2dd7c:	ldr	x23, [sp, #16]
   2dd80:	ldp	x29, x30, [sp], #64
   2dd84:	ret
   2dd88:	mov	x0, x23
   2dd8c:	mov	x1, x22
   2dd90:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2dd94:	cbnz	w0, 2ddd0 <PyInit__decimal@@Base+0x2731c>
   2dd98:	ldrb	w8, [x23]
   2dd9c:	ldrb	w9, [x22]
   2dda0:	and	w10, w8, #0x1
   2dda4:	and	w9, w9, #0x1
   2dda8:	subs	w0, w9, w10
   2ddac:	b.ne	2ddd0 <PyInit__decimal@@Base+0x2731c>  // b.any
   2ddb0:	ldr	x9, [x23, #8]
   2ddb4:	ldr	x10, [x22, #8]
   2ddb8:	ubfiz	w8, w8, #1, #1
   2ddbc:	mov	w11, #0x1                   	// #1
   2ddc0:	sub	w11, w11, w8
   2ddc4:	sub	w8, w8, #0x1
   2ddc8:	cmp	x9, x10
   2ddcc:	csel	w0, w8, w11, lt  // lt = tstop
   2ddd0:	tbnz	w0, #31, 2dec8 <PyInit__decimal@@Base+0x27414>
   2ddd4:	cmp	x21, x23
   2ddd8:	b.eq	2dea8 <PyInit__decimal@@Base+0x273f4>  // b.none
   2dddc:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2dde0:	ldr	x8, [x23, #24]
   2dde4:	ldr	x10, [x9, #1344]
   2dde8:	ldr	x9, [x21, #32]
   2ddec:	cmp	x10, x8
   2ddf0:	csel	x1, x8, x10, lt  // lt = tstop
   2ddf4:	cmp	x1, x9
   2ddf8:	b.eq	2df20 <PyInit__decimal@@Base+0x2746c>  // b.none
   2ddfc:	ldrb	w10, [x21]
   2de00:	tbnz	w10, #5, 2df04 <PyInit__decimal@@Base+0x27450>
   2de04:	mov	x0, x21
   2de08:	mov	x2, x19
   2de0c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2de10:	b	2df18 <PyInit__decimal@@Base+0x27464>
   2de14:	cmp	x1, x10
   2de18:	b.le	2de34 <PyInit__decimal@@Base+0x27380>
   2de1c:	mov	x0, x21
   2de20:	mov	x2, x19
   2de24:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2de28:	cbz	w0, 2dea8 <PyInit__decimal@@Base+0x273f4>
   2de2c:	ldr	x8, [x22, #24]
   2de30:	ldrb	w9, [x22]
   2de34:	ldrb	w10, [x21]
   2de38:	ldr	x0, [x21, #40]
   2de3c:	bfxil	w10, w9, #0, #4
   2de40:	strb	w10, [x21]
   2de44:	ldur	q0, [x22, #8]
   2de48:	str	x8, [x21, #24]
   2de4c:	stur	q0, [x21, #8]
   2de50:	ldr	x8, [x22, #24]
   2de54:	ldr	x1, [x22, #40]
   2de58:	b	2dea0 <PyInit__decimal@@Base+0x273ec>
   2de5c:	cmp	x1, x10
   2de60:	b.le	2de7c <PyInit__decimal@@Base+0x273c8>
   2de64:	mov	x0, x21
   2de68:	mov	x2, x19
   2de6c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2de70:	cbz	w0, 2dea8 <PyInit__decimal@@Base+0x273f4>
   2de74:	ldr	x9, [x23, #24]
   2de78:	ldrb	w8, [x23]
   2de7c:	ldrb	w10, [x21]
   2de80:	bfxil	w10, w8, #0, #4
   2de84:	strb	w10, [x21]
   2de88:	ldur	q0, [x23, #8]
   2de8c:	str	x9, [x21, #24]
   2de90:	stur	q0, [x21, #8]
   2de94:	ldr	x0, [x21, #40]
   2de98:	ldr	x8, [x23, #24]
   2de9c:	ldr	x1, [x23, #40]
   2dea0:	lsl	x2, x8, #3
   2dea4:	bl	63c0 <memcpy@plt>
   2dea8:	mov	x0, x21
   2deac:	mov	x1, x20
   2deb0:	mov	x2, x19
   2deb4:	ldp	x20, x19, [sp, #48]
   2deb8:	ldp	x22, x21, [sp, #32]
   2debc:	ldr	x23, [sp, #16]
   2dec0:	ldp	x29, x30, [sp], #64
   2dec4:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   2dec8:	cmp	x21, x22
   2decc:	b.eq	2dea8 <PyInit__decimal@@Base+0x273f4>  // b.none
   2ded0:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ded4:	ldr	x8, [x22, #24]
   2ded8:	ldr	x10, [x9, #1344]
   2dedc:	ldr	x9, [x21, #32]
   2dee0:	cmp	x10, x8
   2dee4:	csel	x1, x8, x10, lt  // lt = tstop
   2dee8:	cmp	x1, x9
   2deec:	b.eq	2de30 <PyInit__decimal@@Base+0x2737c>  // b.none
   2def0:	ldrb	w10, [x21]
   2def4:	tbz	w10, #5, 2dcf4 <PyInit__decimal@@Base+0x27240>
   2def8:	cmp	x1, x9
   2defc:	b.gt	2de1c <PyInit__decimal@@Base+0x27368>
   2df00:	b	2de30 <PyInit__decimal@@Base+0x2737c>
   2df04:	cmp	x1, x9
   2df08:	b.le	2df20 <PyInit__decimal@@Base+0x2746c>
   2df0c:	mov	x0, x21
   2df10:	mov	x2, x19
   2df14:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2df18:	cbz	w0, 2dea8 <PyInit__decimal@@Base+0x273f4>
   2df1c:	ldr	x8, [x23, #24]
   2df20:	ldrb	w9, [x23]
   2df24:	ldrb	w10, [x21]
   2df28:	bfxil	w10, w9, #0, #4
   2df2c:	strb	w10, [x21]
   2df30:	ldur	q0, [x23, #8]
   2df34:	str	x8, [x21, #24]
   2df38:	b	2de90 <PyInit__decimal@@Base+0x273dc>
   2df3c:	stp	x29, x30, [sp, #-64]!
   2df40:	str	x23, [sp, #16]
   2df44:	stp	x22, x21, [sp, #32]
   2df48:	stp	x20, x19, [sp, #48]
   2df4c:	mov	x29, sp
   2df50:	ldrb	w8, [x1]
   2df54:	ldrb	w9, [x2]
   2df58:	mov	x19, x4
   2df5c:	mov	x20, x3
   2df60:	mov	x22, x2
   2df64:	mov	x23, x1
   2df68:	mov	x21, x0
   2df6c:	tbz	w8, #2, 2dfbc <PyInit__decimal@@Base+0x27508>
   2df70:	and	w10, w9, #0xc
   2df74:	cbnz	w10, 2dfbc <PyInit__decimal@@Base+0x27508>
   2df78:	cmp	x21, x22
   2df7c:	b.eq	2e15c <PyInit__decimal@@Base+0x276a8>  // b.none
   2df80:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2df84:	ldr	x8, [x22, #24]
   2df88:	ldr	x11, [x10, #1344]
   2df8c:	ldr	x10, [x21, #32]
   2df90:	cmp	x11, x8
   2df94:	csel	x1, x8, x11, lt  // lt = tstop
   2df98:	cmp	x1, x10
   2df9c:	b.eq	2e0e8 <PyInit__decimal@@Base+0x27634>  // b.none
   2dfa0:	ldrb	w11, [x21]
   2dfa4:	tbnz	w11, #5, 2e0c8 <PyInit__decimal@@Base+0x27614>
   2dfa8:	mov	x0, x21
   2dfac:	mov	x2, x19
   2dfb0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2dfb4:	cbnz	w0, 2e0e0 <PyInit__decimal@@Base+0x2762c>
   2dfb8:	b	2e15c <PyInit__decimal@@Base+0x276a8>
   2dfbc:	tst	w8, #0xc
   2dfc0:	b.ne	2e00c <PyInit__decimal@@Base+0x27558>  // b.any
   2dfc4:	tbz	w9, #2, 2e00c <PyInit__decimal@@Base+0x27558>
   2dfc8:	cmp	x21, x23
   2dfcc:	b.eq	2e15c <PyInit__decimal@@Base+0x276a8>  // b.none
   2dfd0:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2dfd4:	ldr	x9, [x23, #24]
   2dfd8:	ldr	x11, [x10, #1344]
   2dfdc:	ldr	x10, [x21, #32]
   2dfe0:	cmp	x11, x9
   2dfe4:	csel	x1, x9, x11, lt  // lt = tstop
   2dfe8:	cmp	x1, x10
   2dfec:	b.eq	2e130 <PyInit__decimal@@Base+0x2767c>  // b.none
   2dff0:	ldrb	w11, [x21]
   2dff4:	tbnz	w11, #5, 2e110 <PyInit__decimal@@Base+0x2765c>
   2dff8:	mov	x0, x21
   2dffc:	mov	x2, x19
   2e000:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e004:	cbnz	w0, 2e128 <PyInit__decimal@@Base+0x27674>
   2e008:	b	2e15c <PyInit__decimal@@Base+0x276a8>
   2e00c:	mov	x0, x21
   2e010:	mov	x1, x23
   2e014:	mov	x2, x22
   2e018:	mov	x3, x20
   2e01c:	mov	x4, x19
   2e020:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   2e024:	cbz	w0, 2e03c <PyInit__decimal@@Base+0x27588>
   2e028:	ldp	x20, x19, [sp, #48]
   2e02c:	ldp	x22, x21, [sp, #32]
   2e030:	ldr	x23, [sp, #16]
   2e034:	ldp	x29, x30, [sp], #64
   2e038:	ret
   2e03c:	mov	x0, x23
   2e040:	mov	x1, x22
   2e044:	bl	23a80 <PyInit__decimal@@Base+0x1cfcc>
   2e048:	cbnz	w0, 2e084 <PyInit__decimal@@Base+0x275d0>
   2e04c:	ldrb	w8, [x23]
   2e050:	ldrb	w9, [x22]
   2e054:	and	w10, w8, #0x1
   2e058:	and	w9, w9, #0x1
   2e05c:	subs	w0, w9, w10
   2e060:	b.ne	2e084 <PyInit__decimal@@Base+0x275d0>  // b.any
   2e064:	ldr	x9, [x23, #8]
   2e068:	ldr	x10, [x22, #8]
   2e06c:	ubfiz	w8, w8, #1, #1
   2e070:	mov	w11, #0x1                   	// #1
   2e074:	sub	w11, w11, w8
   2e078:	sub	w8, w8, #0x1
   2e07c:	cmp	x9, x10
   2e080:	csel	w0, w8, w11, lt  // lt = tstop
   2e084:	tbnz	w0, #31, 2e17c <PyInit__decimal@@Base+0x276c8>
   2e088:	cmp	x21, x23
   2e08c:	b.eq	2e15c <PyInit__decimal@@Base+0x276a8>  // b.none
   2e090:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e094:	ldr	x8, [x23, #24]
   2e098:	ldr	x10, [x9, #1344]
   2e09c:	ldr	x9, [x21, #32]
   2e0a0:	cmp	x10, x8
   2e0a4:	csel	x1, x8, x10, lt  // lt = tstop
   2e0a8:	cmp	x1, x9
   2e0ac:	b.eq	2e1d4 <PyInit__decimal@@Base+0x27720>  // b.none
   2e0b0:	ldrb	w10, [x21]
   2e0b4:	tbnz	w10, #5, 2e1b8 <PyInit__decimal@@Base+0x27704>
   2e0b8:	mov	x0, x21
   2e0bc:	mov	x2, x19
   2e0c0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e0c4:	b	2e1cc <PyInit__decimal@@Base+0x27718>
   2e0c8:	cmp	x1, x10
   2e0cc:	b.le	2e0e8 <PyInit__decimal@@Base+0x27634>
   2e0d0:	mov	x0, x21
   2e0d4:	mov	x2, x19
   2e0d8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e0dc:	cbz	w0, 2e15c <PyInit__decimal@@Base+0x276a8>
   2e0e0:	ldr	x8, [x22, #24]
   2e0e4:	ldrb	w9, [x22]
   2e0e8:	ldrb	w10, [x21]
   2e0ec:	ldr	x0, [x21, #40]
   2e0f0:	bfxil	w10, w9, #0, #4
   2e0f4:	strb	w10, [x21]
   2e0f8:	ldur	q0, [x22, #8]
   2e0fc:	str	x8, [x21, #24]
   2e100:	stur	q0, [x21, #8]
   2e104:	ldr	x8, [x22, #24]
   2e108:	ldr	x1, [x22, #40]
   2e10c:	b	2e154 <PyInit__decimal@@Base+0x276a0>
   2e110:	cmp	x1, x10
   2e114:	b.le	2e130 <PyInit__decimal@@Base+0x2767c>
   2e118:	mov	x0, x21
   2e11c:	mov	x2, x19
   2e120:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e124:	cbz	w0, 2e15c <PyInit__decimal@@Base+0x276a8>
   2e128:	ldr	x9, [x23, #24]
   2e12c:	ldrb	w8, [x23]
   2e130:	ldrb	w10, [x21]
   2e134:	bfxil	w10, w8, #0, #4
   2e138:	strb	w10, [x21]
   2e13c:	ldur	q0, [x23, #8]
   2e140:	str	x9, [x21, #24]
   2e144:	stur	q0, [x21, #8]
   2e148:	ldr	x0, [x21, #40]
   2e14c:	ldr	x8, [x23, #24]
   2e150:	ldr	x1, [x23, #40]
   2e154:	lsl	x2, x8, #3
   2e158:	bl	63c0 <memcpy@plt>
   2e15c:	mov	x0, x21
   2e160:	mov	x1, x20
   2e164:	mov	x2, x19
   2e168:	ldp	x20, x19, [sp, #48]
   2e16c:	ldp	x22, x21, [sp, #32]
   2e170:	ldr	x23, [sp, #16]
   2e174:	ldp	x29, x30, [sp], #64
   2e178:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   2e17c:	cmp	x21, x22
   2e180:	b.eq	2e15c <PyInit__decimal@@Base+0x276a8>  // b.none
   2e184:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e188:	ldr	x8, [x22, #24]
   2e18c:	ldr	x10, [x9, #1344]
   2e190:	ldr	x9, [x21, #32]
   2e194:	cmp	x10, x8
   2e198:	csel	x1, x8, x10, lt  // lt = tstop
   2e19c:	cmp	x1, x9
   2e1a0:	b.eq	2e0e4 <PyInit__decimal@@Base+0x27630>  // b.none
   2e1a4:	ldrb	w10, [x21]
   2e1a8:	tbz	w10, #5, 2dfa8 <PyInit__decimal@@Base+0x274f4>
   2e1ac:	cmp	x1, x9
   2e1b0:	b.gt	2e0d0 <PyInit__decimal@@Base+0x2761c>
   2e1b4:	b	2e0e4 <PyInit__decimal@@Base+0x27630>
   2e1b8:	cmp	x1, x9
   2e1bc:	b.le	2e1d4 <PyInit__decimal@@Base+0x27720>
   2e1c0:	mov	x0, x21
   2e1c4:	mov	x2, x19
   2e1c8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e1cc:	cbz	w0, 2e15c <PyInit__decimal@@Base+0x276a8>
   2e1d0:	ldr	x8, [x23, #24]
   2e1d4:	ldrb	w9, [x23]
   2e1d8:	ldrb	w10, [x21]
   2e1dc:	bfxil	w10, w9, #0, #4
   2e1e0:	strb	w10, [x21]
   2e1e4:	ldur	q0, [x23, #8]
   2e1e8:	str	x8, [x21, #24]
   2e1ec:	b	2e144 <PyInit__decimal@@Base+0x27690>
   2e1f0:	stp	x29, x30, [sp, #-64]!
   2e1f4:	str	x23, [sp, #16]
   2e1f8:	stp	x22, x21, [sp, #32]
   2e1fc:	stp	x20, x19, [sp, #48]
   2e200:	mov	x29, sp
   2e204:	ldrb	w8, [x1]
   2e208:	ldrb	w9, [x2]
   2e20c:	mov	x19, x4
   2e210:	mov	x20, x3
   2e214:	mov	x22, x2
   2e218:	mov	x23, x1
   2e21c:	mov	x21, x0
   2e220:	tbz	w8, #2, 2e270 <PyInit__decimal@@Base+0x277bc>
   2e224:	and	w10, w9, #0xc
   2e228:	cbnz	w10, 2e270 <PyInit__decimal@@Base+0x277bc>
   2e22c:	cmp	x21, x22
   2e230:	b.eq	2e46c <PyInit__decimal@@Base+0x279b8>  // b.none
   2e234:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e238:	ldr	x8, [x22, #24]
   2e23c:	ldr	x11, [x10, #1344]
   2e240:	ldr	x10, [x21, #32]
   2e244:	cmp	x11, x8
   2e248:	csel	x1, x8, x11, lt  // lt = tstop
   2e24c:	cmp	x1, x10
   2e250:	b.eq	2e440 <PyInit__decimal@@Base+0x2798c>  // b.none
   2e254:	ldrb	w11, [x21]
   2e258:	tbnz	w11, #5, 2e37c <PyInit__decimal@@Base+0x278c8>
   2e25c:	mov	x0, x21
   2e260:	mov	x2, x19
   2e264:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e268:	cbnz	w0, 2e438 <PyInit__decimal@@Base+0x27984>
   2e26c:	b	2e46c <PyInit__decimal@@Base+0x279b8>
   2e270:	tst	w8, #0xc
   2e274:	b.ne	2e2c0 <PyInit__decimal@@Base+0x2780c>  // b.any
   2e278:	tbz	w9, #2, 2e2c0 <PyInit__decimal@@Base+0x2780c>
   2e27c:	cmp	x21, x23
   2e280:	b.eq	2e46c <PyInit__decimal@@Base+0x279b8>  // b.none
   2e284:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e288:	ldr	x9, [x23, #24]
   2e28c:	ldr	x11, [x10, #1344]
   2e290:	ldr	x10, [x21, #32]
   2e294:	cmp	x11, x9
   2e298:	csel	x1, x9, x11, lt  // lt = tstop
   2e29c:	cmp	x1, x10
   2e2a0:	b.eq	2e3b8 <PyInit__decimal@@Base+0x27904>  // b.none
   2e2a4:	ldrb	w11, [x21]
   2e2a8:	tbnz	w11, #5, 2e398 <PyInit__decimal@@Base+0x278e4>
   2e2ac:	mov	x0, x21
   2e2b0:	mov	x2, x19
   2e2b4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e2b8:	cbnz	w0, 2e3b0 <PyInit__decimal@@Base+0x278fc>
   2e2bc:	b	2e46c <PyInit__decimal@@Base+0x279b8>
   2e2c0:	mov	x0, x21
   2e2c4:	mov	x1, x23
   2e2c8:	mov	x2, x22
   2e2cc:	mov	x3, x20
   2e2d0:	mov	x4, x19
   2e2d4:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   2e2d8:	cbz	w0, 2e2f0 <PyInit__decimal@@Base+0x2783c>
   2e2dc:	ldp	x20, x19, [sp, #48]
   2e2e0:	ldp	x22, x21, [sp, #32]
   2e2e4:	ldr	x23, [sp, #16]
   2e2e8:	ldp	x29, x30, [sp], #64
   2e2ec:	ret
   2e2f0:	mov	x0, x23
   2e2f4:	mov	x1, x22
   2e2f8:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2e2fc:	cbnz	w0, 2e338 <PyInit__decimal@@Base+0x27884>
   2e300:	ldrb	w8, [x23]
   2e304:	ldrb	w9, [x22]
   2e308:	and	w10, w8, #0x1
   2e30c:	and	w9, w9, #0x1
   2e310:	subs	w0, w9, w10
   2e314:	b.ne	2e338 <PyInit__decimal@@Base+0x27884>  // b.any
   2e318:	ldr	x9, [x23, #8]
   2e31c:	ldr	x10, [x22, #8]
   2e320:	ubfiz	w8, w8, #1, #1
   2e324:	mov	w11, #0x1                   	// #1
   2e328:	sub	w11, w11, w8
   2e32c:	sub	w8, w8, #0x1
   2e330:	cmp	x9, x10
   2e334:	csel	w0, w8, w11, lt  // lt = tstop
   2e338:	tbnz	w0, #31, 2e3e0 <PyInit__decimal@@Base+0x2792c>
   2e33c:	cmp	x21, x22
   2e340:	b.eq	2e46c <PyInit__decimal@@Base+0x279b8>  // b.none
   2e344:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e348:	ldr	x8, [x22, #24]
   2e34c:	ldr	x10, [x9, #1344]
   2e350:	ldr	x9, [x21, #32]
   2e354:	cmp	x10, x8
   2e358:	csel	x1, x8, x10, lt  // lt = tstop
   2e35c:	cmp	x1, x9
   2e360:	b.eq	2e43c <PyInit__decimal@@Base+0x27988>  // b.none
   2e364:	ldrb	w10, [x21]
   2e368:	tbnz	w10, #5, 2e420 <PyInit__decimal@@Base+0x2796c>
   2e36c:	mov	x0, x21
   2e370:	mov	x2, x19
   2e374:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e378:	b	2e434 <PyInit__decimal@@Base+0x27980>
   2e37c:	cmp	x1, x10
   2e380:	b.le	2e440 <PyInit__decimal@@Base+0x2798c>
   2e384:	mov	x0, x21
   2e388:	mov	x2, x19
   2e38c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e390:	cbnz	w0, 2e438 <PyInit__decimal@@Base+0x27984>
   2e394:	b	2e46c <PyInit__decimal@@Base+0x279b8>
   2e398:	cmp	x1, x10
   2e39c:	b.le	2e3b8 <PyInit__decimal@@Base+0x27904>
   2e3a0:	mov	x0, x21
   2e3a4:	mov	x2, x19
   2e3a8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e3ac:	cbz	w0, 2e46c <PyInit__decimal@@Base+0x279b8>
   2e3b0:	ldr	x9, [x23, #24]
   2e3b4:	ldrb	w8, [x23]
   2e3b8:	ldrb	w10, [x21]
   2e3bc:	bfxil	w10, w8, #0, #4
   2e3c0:	strb	w10, [x21]
   2e3c4:	ldur	q0, [x23, #8]
   2e3c8:	str	x9, [x21, #24]
   2e3cc:	stur	q0, [x21, #8]
   2e3d0:	ldr	x0, [x21, #40]
   2e3d4:	ldr	x8, [x23, #24]
   2e3d8:	ldr	x1, [x23, #40]
   2e3dc:	b	2e464 <PyInit__decimal@@Base+0x279b0>
   2e3e0:	cmp	x21, x23
   2e3e4:	b.eq	2e46c <PyInit__decimal@@Base+0x279b8>  // b.none
   2e3e8:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e3ec:	ldr	x8, [x23, #24]
   2e3f0:	ldr	x10, [x9, #1344]
   2e3f4:	ldr	x9, [x21, #32]
   2e3f8:	cmp	x10, x8
   2e3fc:	csel	x1, x8, x10, lt  // lt = tstop
   2e400:	cmp	x1, x9
   2e404:	b.eq	2e4a8 <PyInit__decimal@@Base+0x279f4>  // b.none
   2e408:	ldrb	w10, [x21]
   2e40c:	tbnz	w10, #5, 2e48c <PyInit__decimal@@Base+0x279d8>
   2e410:	mov	x0, x21
   2e414:	mov	x2, x19
   2e418:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e41c:	b	2e4a0 <PyInit__decimal@@Base+0x279ec>
   2e420:	cmp	x1, x9
   2e424:	b.le	2e43c <PyInit__decimal@@Base+0x27988>
   2e428:	mov	x0, x21
   2e42c:	mov	x2, x19
   2e430:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e434:	cbz	w0, 2e46c <PyInit__decimal@@Base+0x279b8>
   2e438:	ldr	x8, [x22, #24]
   2e43c:	ldrb	w9, [x22]
   2e440:	ldrb	w10, [x21]
   2e444:	ldr	x0, [x21, #40]
   2e448:	bfxil	w10, w9, #0, #4
   2e44c:	strb	w10, [x21]
   2e450:	ldur	q0, [x22, #8]
   2e454:	str	x8, [x21, #24]
   2e458:	stur	q0, [x21, #8]
   2e45c:	ldr	x8, [x22, #24]
   2e460:	ldr	x1, [x22, #40]
   2e464:	lsl	x2, x8, #3
   2e468:	bl	63c0 <memcpy@plt>
   2e46c:	mov	x0, x21
   2e470:	mov	x1, x20
   2e474:	mov	x2, x19
   2e478:	ldp	x20, x19, [sp, #48]
   2e47c:	ldp	x22, x21, [sp, #32]
   2e480:	ldr	x23, [sp, #16]
   2e484:	ldp	x29, x30, [sp], #64
   2e488:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   2e48c:	cmp	x1, x9
   2e490:	b.le	2e4a8 <PyInit__decimal@@Base+0x279f4>
   2e494:	mov	x0, x21
   2e498:	mov	x2, x19
   2e49c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e4a0:	cbz	w0, 2e46c <PyInit__decimal@@Base+0x279b8>
   2e4a4:	ldr	x8, [x23, #24]
   2e4a8:	ldrb	w9, [x23]
   2e4ac:	ldrb	w10, [x21]
   2e4b0:	bfxil	w10, w9, #0, #4
   2e4b4:	strb	w10, [x21]
   2e4b8:	ldur	q0, [x23, #8]
   2e4bc:	str	x8, [x21, #24]
   2e4c0:	b	2e3cc <PyInit__decimal@@Base+0x27918>
   2e4c4:	stp	x29, x30, [sp, #-64]!
   2e4c8:	str	x23, [sp, #16]
   2e4cc:	stp	x22, x21, [sp, #32]
   2e4d0:	stp	x20, x19, [sp, #48]
   2e4d4:	mov	x29, sp
   2e4d8:	ldrb	w8, [x1]
   2e4dc:	ldrb	w9, [x2]
   2e4e0:	mov	x19, x4
   2e4e4:	mov	x20, x3
   2e4e8:	mov	x22, x2
   2e4ec:	mov	x23, x1
   2e4f0:	mov	x21, x0
   2e4f4:	tbz	w8, #2, 2e544 <PyInit__decimal@@Base+0x27a90>
   2e4f8:	and	w10, w9, #0xc
   2e4fc:	cbnz	w10, 2e544 <PyInit__decimal@@Base+0x27a90>
   2e500:	cmp	x21, x22
   2e504:	b.eq	2e740 <PyInit__decimal@@Base+0x27c8c>  // b.none
   2e508:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e50c:	ldr	x8, [x22, #24]
   2e510:	ldr	x11, [x10, #1344]
   2e514:	ldr	x10, [x21, #32]
   2e518:	cmp	x11, x8
   2e51c:	csel	x1, x8, x11, lt  // lt = tstop
   2e520:	cmp	x1, x10
   2e524:	b.eq	2e714 <PyInit__decimal@@Base+0x27c60>  // b.none
   2e528:	ldrb	w11, [x21]
   2e52c:	tbnz	w11, #5, 2e650 <PyInit__decimal@@Base+0x27b9c>
   2e530:	mov	x0, x21
   2e534:	mov	x2, x19
   2e538:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e53c:	cbnz	w0, 2e70c <PyInit__decimal@@Base+0x27c58>
   2e540:	b	2e740 <PyInit__decimal@@Base+0x27c8c>
   2e544:	tst	w8, #0xc
   2e548:	b.ne	2e594 <PyInit__decimal@@Base+0x27ae0>  // b.any
   2e54c:	tbz	w9, #2, 2e594 <PyInit__decimal@@Base+0x27ae0>
   2e550:	cmp	x21, x23
   2e554:	b.eq	2e740 <PyInit__decimal@@Base+0x27c8c>  // b.none
   2e558:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e55c:	ldr	x9, [x23, #24]
   2e560:	ldr	x11, [x10, #1344]
   2e564:	ldr	x10, [x21, #32]
   2e568:	cmp	x11, x9
   2e56c:	csel	x1, x9, x11, lt  // lt = tstop
   2e570:	cmp	x1, x10
   2e574:	b.eq	2e68c <PyInit__decimal@@Base+0x27bd8>  // b.none
   2e578:	ldrb	w11, [x21]
   2e57c:	tbnz	w11, #5, 2e66c <PyInit__decimal@@Base+0x27bb8>
   2e580:	mov	x0, x21
   2e584:	mov	x2, x19
   2e588:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e58c:	cbnz	w0, 2e684 <PyInit__decimal@@Base+0x27bd0>
   2e590:	b	2e740 <PyInit__decimal@@Base+0x27c8c>
   2e594:	mov	x0, x21
   2e598:	mov	x1, x23
   2e59c:	mov	x2, x22
   2e5a0:	mov	x3, x20
   2e5a4:	mov	x4, x19
   2e5a8:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   2e5ac:	cbz	w0, 2e5c4 <PyInit__decimal@@Base+0x27b10>
   2e5b0:	ldp	x20, x19, [sp, #48]
   2e5b4:	ldp	x22, x21, [sp, #32]
   2e5b8:	ldr	x23, [sp, #16]
   2e5bc:	ldp	x29, x30, [sp], #64
   2e5c0:	ret
   2e5c4:	mov	x0, x23
   2e5c8:	mov	x1, x22
   2e5cc:	bl	23a80 <PyInit__decimal@@Base+0x1cfcc>
   2e5d0:	cbnz	w0, 2e60c <PyInit__decimal@@Base+0x27b58>
   2e5d4:	ldrb	w8, [x23]
   2e5d8:	ldrb	w9, [x22]
   2e5dc:	and	w10, w8, #0x1
   2e5e0:	and	w9, w9, #0x1
   2e5e4:	subs	w0, w9, w10
   2e5e8:	b.ne	2e60c <PyInit__decimal@@Base+0x27b58>  // b.any
   2e5ec:	ldr	x9, [x23, #8]
   2e5f0:	ldr	x10, [x22, #8]
   2e5f4:	ubfiz	w8, w8, #1, #1
   2e5f8:	mov	w11, #0x1                   	// #1
   2e5fc:	sub	w11, w11, w8
   2e600:	sub	w8, w8, #0x1
   2e604:	cmp	x9, x10
   2e608:	csel	w0, w8, w11, lt  // lt = tstop
   2e60c:	tbnz	w0, #31, 2e6b4 <PyInit__decimal@@Base+0x27c00>
   2e610:	cmp	x21, x22
   2e614:	b.eq	2e740 <PyInit__decimal@@Base+0x27c8c>  // b.none
   2e618:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e61c:	ldr	x8, [x22, #24]
   2e620:	ldr	x10, [x9, #1344]
   2e624:	ldr	x9, [x21, #32]
   2e628:	cmp	x10, x8
   2e62c:	csel	x1, x8, x10, lt  // lt = tstop
   2e630:	cmp	x1, x9
   2e634:	b.eq	2e710 <PyInit__decimal@@Base+0x27c5c>  // b.none
   2e638:	ldrb	w10, [x21]
   2e63c:	tbnz	w10, #5, 2e6f4 <PyInit__decimal@@Base+0x27c40>
   2e640:	mov	x0, x21
   2e644:	mov	x2, x19
   2e648:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e64c:	b	2e708 <PyInit__decimal@@Base+0x27c54>
   2e650:	cmp	x1, x10
   2e654:	b.le	2e714 <PyInit__decimal@@Base+0x27c60>
   2e658:	mov	x0, x21
   2e65c:	mov	x2, x19
   2e660:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e664:	cbnz	w0, 2e70c <PyInit__decimal@@Base+0x27c58>
   2e668:	b	2e740 <PyInit__decimal@@Base+0x27c8c>
   2e66c:	cmp	x1, x10
   2e670:	b.le	2e68c <PyInit__decimal@@Base+0x27bd8>
   2e674:	mov	x0, x21
   2e678:	mov	x2, x19
   2e67c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e680:	cbz	w0, 2e740 <PyInit__decimal@@Base+0x27c8c>
   2e684:	ldr	x9, [x23, #24]
   2e688:	ldrb	w8, [x23]
   2e68c:	ldrb	w10, [x21]
   2e690:	bfxil	w10, w8, #0, #4
   2e694:	strb	w10, [x21]
   2e698:	ldur	q0, [x23, #8]
   2e69c:	str	x9, [x21, #24]
   2e6a0:	stur	q0, [x21, #8]
   2e6a4:	ldr	x0, [x21, #40]
   2e6a8:	ldr	x8, [x23, #24]
   2e6ac:	ldr	x1, [x23, #40]
   2e6b0:	b	2e738 <PyInit__decimal@@Base+0x27c84>
   2e6b4:	cmp	x21, x23
   2e6b8:	b.eq	2e740 <PyInit__decimal@@Base+0x27c8c>  // b.none
   2e6bc:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e6c0:	ldr	x8, [x23, #24]
   2e6c4:	ldr	x10, [x9, #1344]
   2e6c8:	ldr	x9, [x21, #32]
   2e6cc:	cmp	x10, x8
   2e6d0:	csel	x1, x8, x10, lt  // lt = tstop
   2e6d4:	cmp	x1, x9
   2e6d8:	b.eq	2e77c <PyInit__decimal@@Base+0x27cc8>  // b.none
   2e6dc:	ldrb	w10, [x21]
   2e6e0:	tbnz	w10, #5, 2e760 <PyInit__decimal@@Base+0x27cac>
   2e6e4:	mov	x0, x21
   2e6e8:	mov	x2, x19
   2e6ec:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2e6f0:	b	2e774 <PyInit__decimal@@Base+0x27cc0>
   2e6f4:	cmp	x1, x9
   2e6f8:	b.le	2e710 <PyInit__decimal@@Base+0x27c5c>
   2e6fc:	mov	x0, x21
   2e700:	mov	x2, x19
   2e704:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e708:	cbz	w0, 2e740 <PyInit__decimal@@Base+0x27c8c>
   2e70c:	ldr	x8, [x22, #24]
   2e710:	ldrb	w9, [x22]
   2e714:	ldrb	w10, [x21]
   2e718:	ldr	x0, [x21, #40]
   2e71c:	bfxil	w10, w9, #0, #4
   2e720:	strb	w10, [x21]
   2e724:	ldur	q0, [x22, #8]
   2e728:	str	x8, [x21, #24]
   2e72c:	stur	q0, [x21, #8]
   2e730:	ldr	x8, [x22, #24]
   2e734:	ldr	x1, [x22, #40]
   2e738:	lsl	x2, x8, #3
   2e73c:	bl	63c0 <memcpy@plt>
   2e740:	mov	x0, x21
   2e744:	mov	x1, x20
   2e748:	mov	x2, x19
   2e74c:	ldp	x20, x19, [sp, #48]
   2e750:	ldp	x22, x21, [sp, #32]
   2e754:	ldr	x23, [sp, #16]
   2e758:	ldp	x29, x30, [sp], #64
   2e75c:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   2e760:	cmp	x1, x9
   2e764:	b.le	2e77c <PyInit__decimal@@Base+0x27cc8>
   2e768:	mov	x0, x21
   2e76c:	mov	x2, x19
   2e770:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2e774:	cbz	w0, 2e740 <PyInit__decimal@@Base+0x27c8c>
   2e778:	ldr	x8, [x23, #24]
   2e77c:	ldrb	w9, [x23]
   2e780:	ldrb	w10, [x21]
   2e784:	bfxil	w10, w9, #0, #4
   2e788:	strb	w10, [x21]
   2e78c:	ldur	q0, [x23, #8]
   2e790:	str	x8, [x21, #24]
   2e794:	b	2e6a0 <PyInit__decimal@@Base+0x27bec>
   2e798:	stp	x29, x30, [sp, #-64]!
   2e79c:	stp	x28, x23, [sp, #16]
   2e7a0:	stp	x22, x21, [sp, #32]
   2e7a4:	stp	x20, x19, [sp, #48]
   2e7a8:	mov	x29, sp
   2e7ac:	sub	sp, sp, #0x260
   2e7b0:	mov	x23, x0
   2e7b4:	mov	w8, #0x30                  	// #48
   2e7b8:	mov	w9, #0x40                  	// #64
   2e7bc:	add	x10, sp, #0x30
   2e7c0:	sub	x0, x29, #0x30
   2e7c4:	mov	x19, x4
   2e7c8:	mov	x20, x3
   2e7cc:	mov	x21, x2
   2e7d0:	mov	x22, x1
   2e7d4:	stp	xzr, xzr, [sp, #8]
   2e7d8:	strb	w8, [sp]
   2e7dc:	stp	xzr, x9, [sp, #24]
   2e7e0:	str	x10, [sp, #40]
   2e7e4:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2e7e8:	mov	x0, sp
   2e7ec:	sub	x2, x29, #0x30
   2e7f0:	mov	x1, x21
   2e7f4:	mov	x3, x19
   2e7f8:	bl	217fc <PyInit__decimal@@Base+0x1ad48>
   2e7fc:	mov	x2, sp
   2e800:	mov	x0, x23
   2e804:	mov	x1, x22
   2e808:	mov	x3, x20
   2e80c:	mov	x4, x19
   2e810:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   2e814:	mov	x0, x23
   2e818:	mov	x1, x20
   2e81c:	mov	x2, x19
   2e820:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2e824:	ldrb	w8, [sp]
   2e828:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e82c:	cmp	w8, #0x1f
   2e830:	b.hi	2e844 <PyInit__decimal@@Base+0x27d90>  // b.pmore
   2e834:	ldr	x8, [x19, #1376]
   2e838:	ldr	x0, [sp, #40]
   2e83c:	blr	x8
   2e840:	ldrb	w8, [sp]
   2e844:	tbnz	w8, #4, 2e854 <PyInit__decimal@@Base+0x27da0>
   2e848:	ldr	x8, [x19, #1376]
   2e84c:	mov	x0, sp
   2e850:	blr	x8
   2e854:	add	sp, sp, #0x260
   2e858:	ldp	x20, x19, [sp, #48]
   2e85c:	ldp	x22, x21, [sp, #32]
   2e860:	ldp	x28, x23, [sp, #16]
   2e864:	ldp	x29, x30, [sp], #64
   2e868:	ret
   2e86c:	stp	x29, x30, [sp, #-64]!
   2e870:	stp	x28, x23, [sp, #16]
   2e874:	stp	x22, x21, [sp, #32]
   2e878:	stp	x20, x19, [sp, #48]
   2e87c:	mov	x29, sp
   2e880:	sub	sp, sp, #0x260
   2e884:	mov	x23, x0
   2e888:	mov	w8, #0x30                  	// #48
   2e88c:	mov	w9, #0x40                  	// #64
   2e890:	add	x10, sp, #0x30
   2e894:	sub	x0, x29, #0x30
   2e898:	mov	x19, x4
   2e89c:	mov	x20, x3
   2e8a0:	mov	x21, x2
   2e8a4:	mov	x22, x1
   2e8a8:	stp	xzr, xzr, [sp, #8]
   2e8ac:	strb	w8, [sp]
   2e8b0:	stp	xzr, x9, [sp, #24]
   2e8b4:	str	x10, [sp, #40]
   2e8b8:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2e8bc:	mov	x0, sp
   2e8c0:	sub	x2, x29, #0x30
   2e8c4:	mov	x1, x21
   2e8c8:	mov	x3, x19
   2e8cc:	bl	21ca8 <PyInit__decimal@@Base+0x1b1f4>
   2e8d0:	mov	x2, sp
   2e8d4:	mov	x0, x23
   2e8d8:	mov	x1, x22
   2e8dc:	mov	x3, x20
   2e8e0:	mov	x4, x19
   2e8e4:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   2e8e8:	mov	x0, x23
   2e8ec:	mov	x1, x20
   2e8f0:	mov	x2, x19
   2e8f4:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2e8f8:	ldrb	w8, [sp]
   2e8fc:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   2e900:	cmp	w8, #0x1f
   2e904:	b.hi	2e918 <PyInit__decimal@@Base+0x27e64>  // b.pmore
   2e908:	ldr	x8, [x19, #1376]
   2e90c:	ldr	x0, [sp, #40]
   2e910:	blr	x8
   2e914:	ldrb	w8, [sp]
   2e918:	tbnz	w8, #4, 2e928 <PyInit__decimal@@Base+0x27e74>
   2e91c:	ldr	x8, [x19, #1376]
   2e920:	mov	x0, sp
   2e924:	blr	x8
   2e928:	add	sp, sp, #0x260
   2e92c:	ldp	x20, x19, [sp, #48]
   2e930:	ldp	x22, x21, [sp, #32]
   2e934:	ldp	x28, x23, [sp, #16]
   2e938:	ldp	x29, x30, [sp], #64
   2e93c:	ret
   2e940:	sxtw	x2, w2
   2e944:	b	2e798 <PyInit__decimal@@Base+0x27ce4>
   2e948:	mov	w2, w2
   2e94c:	b	2e86c <PyInit__decimal@@Base+0x27db8>
   2e950:	b	2e798 <PyInit__decimal@@Base+0x27ce4>
   2e954:	b	2e86c <PyInit__decimal@@Base+0x27db8>
   2e958:	sub	sp, sp, #0xa0
   2e95c:	stp	x29, x30, [sp, #112]
   2e960:	stp	x22, x21, [sp, #128]
   2e964:	stp	x20, x19, [sp, #144]
   2e968:	add	x29, sp, #0x70
   2e96c:	mov	w9, #0x90                  	// #144
   2e970:	strb	w9, [sp, #8]
   2e974:	ldr	x9, [x2, #16]
   2e978:	ldr	x10, [x2]
   2e97c:	mov	w8, #0x1                   	// #1
   2e980:	dup	v0.2d, x8
   2e984:	stur	q0, [sp, #24]
   2e988:	sub	x11, x9, x10
   2e98c:	str	x11, [sp, #16]
   2e990:	add	x11, sp, #0x38
   2e994:	str	x8, [sp, #40]
   2e998:	stp	x11, x8, [sp, #48]
   2e99c:	ldrb	w8, [x1]
   2e9a0:	mov	x21, x3
   2e9a4:	mov	x22, x2
   2e9a8:	mov	x19, x1
   2e9ac:	tst	w8, #0xe
   2e9b0:	mov	x20, x0
   2e9b4:	b.eq	2ea14 <PyInit__decimal@@Base+0x27f60>  // b.none
   2e9b8:	mov	x0, x20
   2e9bc:	mov	x1, x19
   2e9c0:	mov	x2, x22
   2e9c4:	mov	x3, x21
   2e9c8:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   2e9cc:	cbnz	w0, 2eb60 <PyInit__decimal@@Base+0x280ac>
   2e9d0:	ldrb	w8, [x19]
   2e9d4:	tbnz	w8, #0, 2ea7c <PyInit__decimal@@Base+0x27fc8>
   2e9d8:	ldrb	w8, [x20]
   2e9dc:	mov	x0, x20
   2e9e0:	mov	x1, x22
   2e9e4:	mov	x2, x21
   2e9e8:	and	w8, w8, #0xf0
   2e9ec:	strb	w8, [x20]
   2e9f0:	bl	21358 <PyInit__decimal@@Base+0x1a8a4>
   2e9f4:	ldrb	w8, [x20]
   2e9f8:	tst	w8, #0xc
   2e9fc:	b.ne	2eb60 <PyInit__decimal@@Base+0x280ac>  // b.any
   2ea00:	ldp	x9, x8, [x22]
   2ea04:	sub	x8, x8, x9
   2ea08:	add	x8, x8, #0x1
   2ea0c:	str	x8, [x20, #8]
   2ea10:	b	2eb60 <PyInit__decimal@@Base+0x280ac>
   2ea14:	stur	x10, [x29, #-48]
   2ea18:	ldr	x10, [x22, #8]
   2ea1c:	adrp	x11, 40000 <PyInit__decimal@@Base+0x3954c>
   2ea20:	stp	x9, xzr, [x29, #-32]
   2ea24:	ldr	d0, [x11, #176]
   2ea28:	stur	x10, [x29, #-40]
   2ea2c:	ldr	x9, [x22, #40]
   2ea30:	cmp	x20, x19
   2ea34:	stur	d0, [x29, #-16]
   2ea38:	stur	x9, [x29, #-8]
   2ea3c:	b.eq	2eb08 <PyInit__decimal@@Base+0x28054>  // b.none
   2ea40:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ea44:	ldr	x9, [x19, #24]
   2ea48:	ldr	x11, [x10, #1344]
   2ea4c:	ldr	x10, [x20, #32]
   2ea50:	cmp	x11, x9
   2ea54:	csel	x1, x9, x11, lt  // lt = tstop
   2ea58:	cmp	x1, x10
   2ea5c:	b.eq	2eadc <PyInit__decimal@@Base+0x28028>  // b.none
   2ea60:	ldrb	w11, [x20]
   2ea64:	tbnz	w11, #5, 2eabc <PyInit__decimal@@Base+0x28008>
   2ea68:	mov	x0, x20
   2ea6c:	mov	x2, x21
   2ea70:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2ea74:	cbnz	w0, 2ead4 <PyInit__decimal@@Base+0x28020>
   2ea78:	b	2eb60 <PyInit__decimal@@Base+0x280ac>
   2ea7c:	cmp	x20, x19
   2ea80:	b.eq	2eb60 <PyInit__decimal@@Base+0x280ac>  // b.none
   2ea84:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ea88:	ldr	x9, [x19, #24]
   2ea8c:	ldr	x11, [x10, #1344]
   2ea90:	ldr	x10, [x20, #32]
   2ea94:	cmp	x11, x9
   2ea98:	csel	x1, x9, x11, lt  // lt = tstop
   2ea9c:	cmp	x1, x10
   2eaa0:	b.eq	2eb94 <PyInit__decimal@@Base+0x280e0>  // b.none
   2eaa4:	ldrb	w11, [x20]
   2eaa8:	tbnz	w11, #5, 2eb74 <PyInit__decimal@@Base+0x280c0>
   2eaac:	mov	x0, x20
   2eab0:	mov	x2, x21
   2eab4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2eab8:	b	2eb88 <PyInit__decimal@@Base+0x280d4>
   2eabc:	cmp	x1, x10
   2eac0:	b.le	2eadc <PyInit__decimal@@Base+0x28028>
   2eac4:	mov	x0, x20
   2eac8:	mov	x2, x21
   2eacc:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2ead0:	cbz	w0, 2eb60 <PyInit__decimal@@Base+0x280ac>
   2ead4:	ldr	x9, [x19, #24]
   2ead8:	ldrb	w8, [x19]
   2eadc:	ldrb	w10, [x20]
   2eae0:	ldr	x0, [x20, #40]
   2eae4:	bfxil	w10, w8, #0, #4
   2eae8:	strb	w10, [x20]
   2eaec:	ldur	q0, [x19, #8]
   2eaf0:	str	x9, [x20, #24]
   2eaf4:	stur	q0, [x20, #8]
   2eaf8:	ldr	x8, [x19, #24]
   2eafc:	ldr	x1, [x19, #40]
   2eb00:	lsl	x2, x8, #3
   2eb04:	bl	63c0 <memcpy@plt>
   2eb08:	sub	x8, x29, #0x30
   2eb0c:	add	x22, x8, #0x1c
   2eb10:	sub	x1, x29, #0x30
   2eb14:	mov	x0, x20
   2eb18:	mov	x2, x22
   2eb1c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2eb20:	ldur	w8, [x29, #-20]
   2eb24:	tst	w8, #0x3fe
   2eb28:	b.ne	2eb4c <PyInit__decimal@@Base+0x28098>  // b.any
   2eb2c:	add	x2, sp, #0x8
   2eb30:	sub	x3, x29, #0x30
   2eb34:	mov	x0, x20
   2eb38:	mov	x1, x19
   2eb3c:	mov	x4, x22
   2eb40:	stur	wzr, [x29, #-20]
   2eb44:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   2eb48:	ldur	w8, [x29, #-20]
   2eb4c:	ldr	w9, [x21]
   2eb50:	mov	w10, #0x3be                 	// #958
   2eb54:	and	w8, w8, w10
   2eb58:	orr	w8, w9, w8
   2eb5c:	str	w8, [x21]
   2eb60:	ldp	x20, x19, [sp, #144]
   2eb64:	ldp	x22, x21, [sp, #128]
   2eb68:	ldp	x29, x30, [sp, #112]
   2eb6c:	add	sp, sp, #0xa0
   2eb70:	ret
   2eb74:	cmp	x1, x10
   2eb78:	b.le	2eb94 <PyInit__decimal@@Base+0x280e0>
   2eb7c:	mov	x0, x20
   2eb80:	mov	x2, x21
   2eb84:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2eb88:	cbz	w0, 2eb60 <PyInit__decimal@@Base+0x280ac>
   2eb8c:	ldr	x9, [x19, #24]
   2eb90:	ldrb	w8, [x19]
   2eb94:	ldrb	w10, [x20]
   2eb98:	ldr	x0, [x20, #40]
   2eb9c:	bfxil	w10, w8, #0, #4
   2eba0:	strb	w10, [x20]
   2eba4:	ldur	q0, [x19, #8]
   2eba8:	str	x9, [x20, #24]
   2ebac:	stur	q0, [x20, #8]
   2ebb0:	ldr	x8, [x19, #24]
   2ebb4:	ldr	x1, [x19, #40]
   2ebb8:	lsl	x2, x8, #3
   2ebbc:	bl	63c0 <memcpy@plt>
   2ebc0:	b	2eb60 <PyInit__decimal@@Base+0x280ac>
   2ebc4:	sub	sp, sp, #0xa0
   2ebc8:	stp	x29, x30, [sp, #112]
   2ebcc:	stp	x22, x21, [sp, #128]
   2ebd0:	stp	x20, x19, [sp, #144]
   2ebd4:	add	x29, sp, #0x70
   2ebd8:	mov	w9, #0x90                  	// #144
   2ebdc:	strb	w9, [sp, #8]
   2ebe0:	ldr	x9, [x2, #16]
   2ebe4:	ldr	x10, [x2]
   2ebe8:	mov	w8, #0x1                   	// #1
   2ebec:	dup	v0.2d, x8
   2ebf0:	stur	q0, [sp, #24]
   2ebf4:	sub	x11, x9, x10
   2ebf8:	str	x11, [sp, #16]
   2ebfc:	add	x11, sp, #0x38
   2ec00:	str	x8, [sp, #40]
   2ec04:	stp	x11, x8, [sp, #48]
   2ec08:	ldrb	w8, [x1]
   2ec0c:	mov	x21, x3
   2ec10:	mov	x22, x2
   2ec14:	mov	x20, x1
   2ec18:	tst	w8, #0xe
   2ec1c:	mov	x19, x0
   2ec20:	b.eq	2ec84 <PyInit__decimal@@Base+0x281d0>  // b.none
   2ec24:	mov	x0, x19
   2ec28:	mov	x1, x20
   2ec2c:	mov	x2, x22
   2ec30:	mov	x3, x21
   2ec34:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   2ec38:	cbnz	w0, 2edd8 <PyInit__decimal@@Base+0x28324>
   2ec3c:	ldrb	w8, [x20]
   2ec40:	tbnz	w8, #0, 2ecec <PyInit__decimal@@Base+0x28238>
   2ec44:	cmp	x19, x20
   2ec48:	b.eq	2edd8 <PyInit__decimal@@Base+0x28324>  // b.none
   2ec4c:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ec50:	ldr	x9, [x20, #24]
   2ec54:	ldr	x11, [x10, #1344]
   2ec58:	ldr	x10, [x19, #32]
   2ec5c:	cmp	x11, x9
   2ec60:	csel	x1, x9, x11, lt  // lt = tstop
   2ec64:	cmp	x1, x10
   2ec68:	b.eq	2ee0c <PyInit__decimal@@Base+0x28358>  // b.none
   2ec6c:	ldrb	w11, [x19]
   2ec70:	tbnz	w11, #5, 2edec <PyInit__decimal@@Base+0x28338>
   2ec74:	mov	x0, x19
   2ec78:	mov	x2, x21
   2ec7c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2ec80:	b	2ee00 <PyInit__decimal@@Base+0x2834c>
   2ec84:	stur	x10, [x29, #-48]
   2ec88:	ldr	x10, [x22, #8]
   2ec8c:	adrp	x11, 40000 <PyInit__decimal@@Base+0x3954c>
   2ec90:	stp	x9, xzr, [x29, #-32]
   2ec94:	ldr	d0, [x11, #184]
   2ec98:	stur	x10, [x29, #-40]
   2ec9c:	ldr	x9, [x22, #40]
   2eca0:	cmp	x19, x20
   2eca4:	stur	d0, [x29, #-16]
   2eca8:	stur	x9, [x29, #-8]
   2ecac:	b.eq	2ed80 <PyInit__decimal@@Base+0x282cc>  // b.none
   2ecb0:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ecb4:	ldr	x9, [x20, #24]
   2ecb8:	ldr	x11, [x10, #1344]
   2ecbc:	ldr	x10, [x19, #32]
   2ecc0:	cmp	x11, x9
   2ecc4:	csel	x1, x9, x11, lt  // lt = tstop
   2ecc8:	cmp	x1, x10
   2eccc:	b.eq	2ed54 <PyInit__decimal@@Base+0x282a0>  // b.none
   2ecd0:	ldrb	w11, [x19]
   2ecd4:	tbnz	w11, #5, 2ed34 <PyInit__decimal@@Base+0x28280>
   2ecd8:	mov	x0, x19
   2ecdc:	mov	x2, x21
   2ece0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2ece4:	cbnz	w0, 2ed4c <PyInit__decimal@@Base+0x28298>
   2ece8:	b	2edd8 <PyInit__decimal@@Base+0x28324>
   2ecec:	ldrb	w8, [x19]
   2ecf0:	mov	x0, x19
   2ecf4:	mov	x1, x22
   2ecf8:	mov	x2, x21
   2ecfc:	and	w8, w8, #0xf0
   2ed00:	strb	w8, [x19]
   2ed04:	bl	21358 <PyInit__decimal@@Base+0x1a8a4>
   2ed08:	ldrb	w8, [x19]
   2ed0c:	tst	w8, #0xc
   2ed10:	b.ne	2edd8 <PyInit__decimal@@Base+0x28324>  // b.any
   2ed14:	and	w8, w8, #0xf0
   2ed18:	orr	w8, w8, #0x1
   2ed1c:	strb	w8, [x19]
   2ed20:	ldp	x9, x8, [x22]
   2ed24:	sub	x8, x8, x9
   2ed28:	add	x8, x8, #0x1
   2ed2c:	str	x8, [x19, #8]
   2ed30:	b	2edd8 <PyInit__decimal@@Base+0x28324>
   2ed34:	cmp	x1, x10
   2ed38:	b.le	2ed54 <PyInit__decimal@@Base+0x282a0>
   2ed3c:	mov	x0, x19
   2ed40:	mov	x2, x21
   2ed44:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2ed48:	cbz	w0, 2edd8 <PyInit__decimal@@Base+0x28324>
   2ed4c:	ldr	x9, [x20, #24]
   2ed50:	ldrb	w8, [x20]
   2ed54:	ldrb	w10, [x19]
   2ed58:	ldr	x0, [x19, #40]
   2ed5c:	bfxil	w10, w8, #0, #4
   2ed60:	strb	w10, [x19]
   2ed64:	ldur	q0, [x20, #8]
   2ed68:	str	x9, [x19, #24]
   2ed6c:	stur	q0, [x19, #8]
   2ed70:	ldr	x8, [x20, #24]
   2ed74:	ldr	x1, [x20, #40]
   2ed78:	lsl	x2, x8, #3
   2ed7c:	bl	63c0 <memcpy@plt>
   2ed80:	sub	x8, x29, #0x30
   2ed84:	add	x22, x8, #0x1c
   2ed88:	sub	x1, x29, #0x30
   2ed8c:	mov	x0, x19
   2ed90:	mov	x2, x22
   2ed94:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2ed98:	ldur	w8, [x29, #-20]
   2ed9c:	tst	w8, #0x3fe
   2eda0:	b.ne	2edc4 <PyInit__decimal@@Base+0x28310>  // b.any
   2eda4:	add	x2, sp, #0x8
   2eda8:	sub	x3, x29, #0x30
   2edac:	mov	x0, x19
   2edb0:	mov	x1, x20
   2edb4:	mov	x4, x22
   2edb8:	stur	wzr, [x29, #-20]
   2edbc:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   2edc0:	ldur	w8, [x29, #-20]
   2edc4:	ldr	w9, [x21]
   2edc8:	mov	w10, #0x3be                 	// #958
   2edcc:	and	w8, w8, w10
   2edd0:	orr	w8, w9, w8
   2edd4:	str	w8, [x21]
   2edd8:	ldp	x20, x19, [sp, #144]
   2eddc:	ldp	x22, x21, [sp, #128]
   2ede0:	ldp	x29, x30, [sp, #112]
   2ede4:	add	sp, sp, #0xa0
   2ede8:	ret
   2edec:	cmp	x1, x10
   2edf0:	b.le	2ee0c <PyInit__decimal@@Base+0x28358>
   2edf4:	mov	x0, x19
   2edf8:	mov	x2, x21
   2edfc:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2ee00:	cbz	w0, 2edd8 <PyInit__decimal@@Base+0x28324>
   2ee04:	ldr	x9, [x20, #24]
   2ee08:	ldrb	w8, [x20]
   2ee0c:	ldrb	w10, [x19]
   2ee10:	ldr	x0, [x19, #40]
   2ee14:	bfxil	w10, w8, #0, #4
   2ee18:	strb	w10, [x19]
   2ee1c:	ldur	q0, [x20, #8]
   2ee20:	str	x9, [x19, #24]
   2ee24:	stur	q0, [x19, #8]
   2ee28:	ldr	x8, [x20, #24]
   2ee2c:	ldr	x1, [x20, #40]
   2ee30:	lsl	x2, x8, #3
   2ee34:	bl	63c0 <memcpy@plt>
   2ee38:	b	2edd8 <PyInit__decimal@@Base+0x28324>
   2ee3c:	stp	x29, x30, [sp, #-64]!
   2ee40:	str	x23, [sp, #16]
   2ee44:	stp	x22, x21, [sp, #32]
   2ee48:	stp	x20, x19, [sp, #48]
   2ee4c:	mov	x29, sp
   2ee50:	mov	x19, x4
   2ee54:	mov	x21, x3
   2ee58:	mov	x23, x2
   2ee5c:	mov	x22, x1
   2ee60:	mov	x20, x0
   2ee64:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   2ee68:	cbz	w0, 2ee80 <PyInit__decimal@@Base+0x283cc>
   2ee6c:	ldp	x20, x19, [sp, #48]
   2ee70:	ldp	x22, x21, [sp, #32]
   2ee74:	ldr	x23, [sp, #16]
   2ee78:	ldp	x29, x30, [sp], #64
   2ee7c:	ret
   2ee80:	mov	x0, x22
   2ee84:	mov	x1, x23
   2ee88:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2ee8c:	cbz	w0, 2ef00 <PyInit__decimal@@Base+0x2844c>
   2ee90:	tbnz	w0, #31, 2ef24 <PyInit__decimal@@Base+0x28470>
   2ee94:	mov	x0, x20
   2ee98:	mov	x1, x22
   2ee9c:	mov	x2, x21
   2eea0:	mov	x3, x19
   2eea4:	bl	2e958 <PyInit__decimal@@Base+0x27ea4>
   2eea8:	ldrb	w8, [x20]
   2eeac:	tbnz	w8, #1, 2ef40 <PyInit__decimal@@Base+0x2848c>
   2eeb0:	ldp	x9, x10, [x20, #8]
   2eeb4:	ldr	x11, [x21, #16]
   2eeb8:	add	x9, x9, x10
   2eebc:	sub	x9, x9, #0x1
   2eec0:	cmp	x9, x11
   2eec4:	b.ge	2ee6c <PyInit__decimal@@Base+0x283b8>  // b.tcont
   2eec8:	ldr	w9, [x19]
   2eecc:	mov	w10, #0x7040                	// #28736
   2eed0:	tst	w8, #0xe
   2eed4:	orr	w10, w9, w10
   2eed8:	str	w10, [x19]
   2eedc:	b.ne	2ee6c <PyInit__decimal@@Base+0x283b8>  // b.any
   2eee0:	ldr	x8, [x20, #40]
   2eee4:	ldr	x10, [x20, #24]
   2eee8:	add	x8, x8, x10, lsl #3
   2eeec:	ldur	x8, [x8, #-8]
   2eef0:	cbnz	x8, 2ee6c <PyInit__decimal@@Base+0x283b8>
   2eef4:	mov	w8, #0x7041                	// #28737
   2eef8:	orr	w8, w9, w8
   2eefc:	b	2ef4c <PyInit__decimal@@Base+0x28498>
   2ef00:	mov	x0, x20
   2ef04:	mov	x1, x22
   2ef08:	mov	x2, x23
   2ef0c:	mov	x3, x19
   2ef10:	ldp	x20, x19, [sp, #48]
   2ef14:	ldp	x22, x21, [sp, #32]
   2ef18:	ldr	x23, [sp, #16]
   2ef1c:	ldp	x29, x30, [sp], #64
   2ef20:	b	2357c <PyInit__decimal@@Base+0x1cac8>
   2ef24:	mov	x0, x20
   2ef28:	mov	x1, x22
   2ef2c:	mov	x2, x21
   2ef30:	mov	x3, x19
   2ef34:	bl	2ebc4 <PyInit__decimal@@Base+0x28110>
   2ef38:	ldrb	w8, [x20]
   2ef3c:	tbz	w8, #1, 2eeb0 <PyInit__decimal@@Base+0x283fc>
   2ef40:	ldr	w8, [x19]
   2ef44:	mov	w9, #0x1840                	// #6208
   2ef48:	orr	w8, w8, w9
   2ef4c:	str	w8, [x19]
   2ef50:	b	2ee6c <PyInit__decimal@@Base+0x283b8>
   2ef54:	stp	x29, x30, [sp, #-96]!
   2ef58:	stp	x28, x27, [sp, #16]
   2ef5c:	stp	x26, x25, [sp, #32]
   2ef60:	stp	x24, x23, [sp, #48]
   2ef64:	stp	x22, x21, [sp, #64]
   2ef68:	stp	x20, x19, [sp, #80]
   2ef6c:	mov	x29, sp
   2ef70:	sub	sp, sp, #0x530
   2ef74:	ldrb	w8, [x1]
   2ef78:	mov	x20, x4
   2ef7c:	mov	x21, x3
   2ef80:	mov	x23, x2
   2ef84:	mov	x24, x1
   2ef88:	tst	w8, #0xe
   2ef8c:	mov	x19, x0
   2ef90:	b.ne	2efa0 <PyInit__decimal@@Base+0x284ec>  // b.any
   2ef94:	ldrb	w8, [x23]
   2ef98:	tst	w8, #0xe
   2ef9c:	b.eq	2efc0 <PyInit__decimal@@Base+0x2850c>  // b.none
   2efa0:	mov	x0, x19
   2efa4:	mov	x1, x24
   2efa8:	mov	x2, x23
   2efac:	mov	x3, x21
   2efb0:	mov	x4, x20
   2efb4:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   2efb8:	cbnz	w0, 2f894 <PyInit__decimal@@Base+0x28de0>
   2efbc:	ldrb	w8, [x23]
   2efc0:	ands	w9, w8, #0xe
   2efc4:	b.eq	2efd4 <PyInit__decimal@@Base+0x28520>  // b.none
   2efc8:	mov	w26, wzr
   2efcc:	mov	w22, wzr
   2efd0:	b	2f0ec <PyInit__decimal@@Base+0x28638>
   2efd4:	ldr	x10, [x23, #40]
   2efd8:	ldr	x13, [x23, #24]
   2efdc:	add	x11, x10, x13, lsl #3
   2efe0:	ldur	x11, [x11, #-8]
   2efe4:	cbz	x11, 2f06c <PyInit__decimal@@Base+0x285b8>
   2efe8:	cmp	x13, #0x1
   2efec:	b.lt	2f010 <PyInit__decimal@@Base+0x2855c>  // b.tstop
   2eff0:	mov	x12, xzr
   2eff4:	mov	x15, x10
   2eff8:	ldr	x14, [x15]
   2effc:	cbnz	x14, 2f018 <PyInit__decimal@@Base+0x28564>
   2f000:	add	x12, x12, #0x13
   2f004:	subs	x13, x13, #0x1
   2f008:	add	x15, x15, #0x8
   2f00c:	b.ne	2eff8 <PyInit__decimal@@Base+0x28544>  // b.any
   2f010:	mov	x12, xzr
   2f014:	b	2f060 <PyInit__decimal@@Base+0x285ac>
   2f018:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   2f01c:	movk	x13, #0xcccd
   2f020:	mul	x15, x14, x13
   2f024:	mov	x16, #0x9999999999999999    	// #-7378697629483820647
   2f028:	ror	x15, x15, #1
   2f02c:	movk	x16, #0x1999, lsl #48
   2f030:	cmp	x15, x16
   2f034:	b.hi	2f060 <PyInit__decimal@@Base+0x285ac>  // b.pmore
   2f038:	mov	x15, #0x9999999999999999    	// #-7378697629483820647
   2f03c:	movk	x15, #0x999a
   2f040:	movk	x15, #0x1999, lsl #48
   2f044:	umulh	x14, x14, x13
   2f048:	lsr	x14, x14, #3
   2f04c:	mul	x16, x14, x13
   2f050:	ror	x16, x16, #1
   2f054:	cmp	x16, x15
   2f058:	add	x12, x12, #0x1
   2f05c:	b.cc	2f044 <PyInit__decimal@@Base+0x28590>  // b.lo, b.ul, b.last
   2f060:	ldr	x13, [x23, #8]
   2f064:	cmn	x13, x12
   2f068:	b.mi	2efc8 <PyInit__decimal@@Base+0x28514>  // b.first
   2f06c:	ldrb	w12, [x24]
   2f070:	tbnz	w12, #0, 2f07c <PyInit__decimal@@Base+0x285c8>
   2f074:	mov	w22, wzr
   2f078:	b	2f0e8 <PyInit__decimal@@Base+0x28634>
   2f07c:	cbz	x11, 2f08c <PyInit__decimal@@Base+0x285d8>
   2f080:	ldr	x11, [x23, #8]
   2f084:	tbnz	x11, #63, 2f094 <PyInit__decimal@@Base+0x285e0>
   2f088:	cbz	x11, 2f0d8 <PyInit__decimal@@Base+0x28624>
   2f08c:	mov	w10, wzr
   2f090:	b	2f0e0 <PyInit__decimal@@Base+0x2862c>
   2f094:	mov	x13, #0x435f                	// #17247
   2f098:	movk	x13, #0xd79, lsl #16
   2f09c:	movk	x13, #0x35e5, lsl #32
   2f0a0:	neg	x12, x11
   2f0a4:	movk	x13, #0xd794, lsl #48
   2f0a8:	umulh	x12, x12, x13
   2f0ac:	mov	x14, #0xffffffffffffffed    	// #-19
   2f0b0:	neg	x11, x11
   2f0b4:	lsr	x12, x12, #4
   2f0b8:	madd	x11, x12, x14, x11
   2f0bc:	ldr	x10, [x10, x12, lsl #3]
   2f0c0:	adrp	x12, 3f000 <PyInit__decimal@@Base+0x3854c>
   2f0c4:	add	x12, x12, #0x370
   2f0c8:	ldr	x11, [x12, x11, lsl #3]
   2f0cc:	udiv	x10, x10, x11
   2f0d0:	and	w10, w10, #0x1
   2f0d4:	b	2f0e0 <PyInit__decimal@@Base+0x2862c>
   2f0d8:	ldr	w10, [x10]
   2f0dc:	and	w10, w10, #0x1
   2f0e0:	cmp	w10, #0x0
   2f0e4:	cset	w22, ne  // ne = any
   2f0e8:	mov	w26, #0x1                   	// #1
   2f0ec:	ldrb	w10, [x24]
   2f0f0:	tst	w10, #0xe
   2f0f4:	b.ne	2f10c <PyInit__decimal@@Base+0x28658>  // b.any
   2f0f8:	ldr	x11, [x24, #40]
   2f0fc:	ldr	x12, [x24, #24]
   2f100:	add	x11, x11, x12, lsl #3
   2f104:	ldur	x11, [x11, #-8]
   2f108:	cbz	x11, 2f2a4 <PyInit__decimal@@Base+0x287f0>
   2f10c:	tbnz	w10, #0, 2f1a4 <PyInit__decimal@@Base+0x286f0>
   2f110:	tbz	w8, #1, 2f1ac <PyInit__decimal@@Base+0x286f8>
   2f114:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   2f118:	add	x1, x1, #0xc88
   2f11c:	mov	x0, x24
   2f120:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2f124:	cbz	w0, 2f358 <PyInit__decimal@@Base+0x288a4>
   2f128:	ldrb	w8, [x23]
   2f12c:	mov	w9, #0x1                   	// #1
   2f130:	ubfiz	w8, w8, #1, #1
   2f134:	sub	w8, w9, w8
   2f138:	mul	w8, w8, w0
   2f13c:	tbnz	w8, #31, 2f2c0 <PyInit__decimal@@Base+0x2880c>
   2f140:	ldrb	w8, [x19]
   2f144:	tbnz	w8, #5, 2f188 <PyInit__decimal@@Base+0x286d4>
   2f148:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   2f14c:	ldr	x9, [x19, #32]
   2f150:	ldr	x1, [x20, #1344]
   2f154:	cmp	x9, x1
   2f158:	b.le	2f188 <PyInit__decimal@@Base+0x286d4>
   2f15c:	strb	wzr, [sp, #600]
   2f160:	ldr	x0, [x19, #40]
   2f164:	add	x3, sp, #0x258
   2f168:	mov	w2, #0x8                   	// #8
   2f16c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2f170:	str	x0, [x19, #40]
   2f174:	ldrb	w8, [sp, #600]
   2f178:	cbnz	w8, 2f184 <PyInit__decimal@@Base+0x286d0>
   2f17c:	ldr	x8, [x20, #1344]
   2f180:	str	x8, [x19, #32]
   2f184:	ldrb	w8, [x19]
   2f188:	and	w8, w8, #0xf0
   2f18c:	orr	w8, w22, w8
   2f190:	orr	w8, w8, #0x2
   2f194:	stp	xzr, xzr, [x19, #16]
   2f198:	strb	w8, [x19]
   2f19c:	str	xzr, [x19, #8]
   2f1a0:	b	2f894 <PyInit__decimal@@Base+0x28de0>
   2f1a4:	tbnz	w8, #1, 2f2f0 <PyInit__decimal@@Base+0x2883c>
   2f1a8:	cbz	w26, 2f2f0 <PyInit__decimal@@Base+0x2883c>
   2f1ac:	cbz	w9, 2f274 <PyInit__decimal@@Base+0x287c0>
   2f1b0:	mov	w9, wzr
   2f1b4:	tbnz	w10, #1, 2f290 <PyInit__decimal@@Base+0x287dc>
   2f1b8:	cbnz	w9, 2f294 <PyInit__decimal@@Base+0x287e0>
   2f1bc:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   2f1c0:	add	x1, x1, #0xc88
   2f1c4:	mov	x0, x24
   2f1c8:	str	wzr, [sp, #600]
   2f1cc:	bl	23a80 <PyInit__decimal@@Base+0x1cfcc>
   2f1d0:	cbz	w0, 2f3a8 <PyInit__decimal@@Base+0x288f4>
   2f1d4:	ldrb	w8, [x24]
   2f1d8:	ldr	x27, [x23, #8]
   2f1dc:	ldr	x9, [x24, #8]
   2f1e0:	and	w8, w8, #0xe
   2f1e4:	mov	w10, #0x50                  	// #80
   2f1e8:	orr	w10, w8, w10
   2f1ec:	stur	x9, [x29, #-96]
   2f1f0:	ldr	q0, [x24, #16]
   2f1f4:	stur	q0, [x29, #-88]
   2f1f8:	fmov	x8, d0
   2f1fc:	ldr	q0, [x24, #32]
   2f200:	sturb	w10, [x29, #-104]
   2f204:	add	x8, x8, x9
   2f208:	mov	w9, #0x30                  	// #48
   2f20c:	stur	q0, [x29, #-72]
   2f210:	ldr	x28, [x23, #16]
   2f214:	sturb	w9, [x29, #-56]
   2f218:	mov	w9, #0x40                  	// #64
   2f21c:	sub	x25, x8, #0x1
   2f220:	stp	xzr, x9, [x29, #-32]
   2f224:	add	x9, sp, #0x28
   2f228:	cmp	x25, #0x1
   2f22c:	stur	x9, [x29, #-16]
   2f230:	stp	xzr, xzr, [x29, #-48]
   2f234:	b.lt	2f3e8 <PyInit__decimal@@Base+0x28934>  // b.tstop
   2f238:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   2f23c:	add	x8, x8, #0x370
   2f240:	ldr	x9, [x8, #72]
   2f244:	cmp	x9, x25
   2f248:	b.ls	2f430 <PyInit__decimal@@Base+0x2897c>  // b.plast
   2f24c:	ldr	x9, [x8, #32]
   2f250:	cmp	x9, x25
   2f254:	b.ls	2f4c0 <PyInit__decimal@@Base+0x28a0c>  // b.plast
   2f258:	ldr	x9, [x8, #16]
   2f25c:	cmp	x9, x25
   2f260:	b.ls	2f628 <PyInit__decimal@@Base+0x28b74>  // b.plast
   2f264:	ldr	x8, [x8, #8]
   2f268:	cmp	x8, x25
   2f26c:	mov	w8, #0x1                   	// #1
   2f270:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f274:	ldr	x9, [x23, #40]
   2f278:	ldr	x11, [x23, #24]
   2f27c:	add	x9, x9, x11, lsl #3
   2f280:	ldur	x9, [x9, #-8]
   2f284:	cmp	x9, #0x0
   2f288:	cset	w9, eq  // eq = none
   2f28c:	tbz	w10, #1, 2f1b8 <PyInit__decimal@@Base+0x28704>
   2f290:	cbz	w9, 2f3a0 <PyInit__decimal@@Base+0x288ec>
   2f294:	mov	w2, #0x1                   	// #1
   2f298:	mov	x0, x19
   2f29c:	mov	w1, w22
   2f2a0:	b	2f2cc <PyInit__decimal@@Base+0x28818>
   2f2a4:	cbnz	w9, 2f2bc <PyInit__decimal@@Base+0x28808>
   2f2a8:	ldr	x9, [x23, #40]
   2f2ac:	ldr	x10, [x23, #24]
   2f2b0:	add	x9, x9, x10, lsl #3
   2f2b4:	ldur	x9, [x9, #-8]
   2f2b8:	cbz	x9, 2f2f0 <PyInit__decimal@@Base+0x2883c>
   2f2bc:	tbnz	w8, #0, 2f140 <PyInit__decimal@@Base+0x2868c>
   2f2c0:	mov	x0, x19
   2f2c4:	mov	w1, w22
   2f2c8:	mov	x2, xzr
   2f2cc:	mov	x3, xzr
   2f2d0:	add	sp, sp, #0x530
   2f2d4:	ldp	x20, x19, [sp, #80]
   2f2d8:	ldp	x22, x21, [sp, #64]
   2f2dc:	ldp	x24, x23, [sp, #48]
   2f2e0:	ldp	x26, x25, [sp, #32]
   2f2e4:	ldp	x28, x27, [sp, #16]
   2f2e8:	ldp	x29, x30, [sp], #96
   2f2ec:	b	21f1c <PyInit__decimal@@Base+0x1b468>
   2f2f0:	ldrb	w8, [x19]
   2f2f4:	tbnz	w8, #5, 2f338 <PyInit__decimal@@Base+0x28884>
   2f2f8:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2f2fc:	ldr	x9, [x19, #32]
   2f300:	ldr	x1, [x21, #1344]
   2f304:	cmp	x9, x1
   2f308:	b.le	2f338 <PyInit__decimal@@Base+0x28884>
   2f30c:	strb	wzr, [sp, #600]
   2f310:	ldr	x0, [x19, #40]
   2f314:	add	x3, sp, #0x258
   2f318:	mov	w2, #0x8                   	// #8
   2f31c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2f320:	str	x0, [x19, #40]
   2f324:	ldrb	w8, [sp, #600]
   2f328:	cbnz	w8, 2f334 <PyInit__decimal@@Base+0x28880>
   2f32c:	ldr	x8, [x21, #1344]
   2f330:	str	x8, [x19, #32]
   2f334:	ldrb	w8, [x19]
   2f338:	and	w8, w8, #0xf0
   2f33c:	orr	w8, w8, #0x4
   2f340:	stp	xzr, xzr, [x19, #16]
   2f344:	strb	w8, [x19]
   2f348:	str	xzr, [x19, #8]
   2f34c:	ldr	w8, [x20]
   2f350:	orr	w8, w8, #0x100
   2f354:	b	2f890 <PyInit__decimal@@Base+0x28ddc>
   2f358:	ldr	x21, [x21]
   2f35c:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   2f360:	add	x1, x1, #0xc88
   2f364:	mov	x0, x19
   2f368:	sub	x2, x21, #0x1
   2f36c:	mov	x3, x20
   2f370:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   2f374:	ldrb	w8, [x19]
   2f378:	mov	w9, #0x1                   	// #1
   2f37c:	sub	x9, x9, x21
   2f380:	str	x9, [x19, #8]
   2f384:	and	w8, w8, #0xf0
   2f388:	orr	w8, w8, w22
   2f38c:	strb	w8, [x19]
   2f390:	ldr	w8, [x20]
   2f394:	mov	w9, #0x1040                	// #4160
   2f398:	orr	w8, w8, w9
   2f39c:	b	2f890 <PyInit__decimal@@Base+0x28ddc>
   2f3a0:	tbz	w8, #0, 2f140 <PyInit__decimal@@Base+0x2868c>
   2f3a4:	b	2f2c0 <PyInit__decimal@@Base+0x2880c>
   2f3a8:	ldr	x9, [x23, #40]
   2f3ac:	ldr	x10, [x23, #24]
   2f3b0:	add	x8, x9, x10, lsl #3
   2f3b4:	ldur	x8, [x8, #-8]
   2f3b8:	cbz	x8, 2f558 <PyInit__decimal@@Base+0x28aa4>
   2f3bc:	cmp	x10, #0x1
   2f3c0:	b.lt	2f3e0 <PyInit__decimal@@Base+0x2892c>  // b.tstop
   2f3c4:	mov	x8, xzr
   2f3c8:	ldr	x11, [x9]
   2f3cc:	cbnz	x11, 2f504 <PyInit__decimal@@Base+0x28a50>
   2f3d0:	add	x8, x8, #0x13
   2f3d4:	subs	x10, x10, #0x1
   2f3d8:	add	x9, x9, #0x8
   2f3dc:	b.ne	2f3c8 <PyInit__decimal@@Base+0x28914>  // b.any
   2f3e0:	mov	x8, xzr
   2f3e4:	b	2f54c <PyInit__decimal@@Base+0x28a98>
   2f3e8:	cmn	x25, #0x2
   2f3ec:	b.gt	2f458 <PyInit__decimal@@Base+0x289a4>
   2f3f0:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   2f3f4:	add	x9, x9, #0x370
   2f3f8:	ldr	x10, [x9, #72]
   2f3fc:	neg	x8, x8
   2f400:	cmp	x10, x8
   2f404:	b.ls	2f5d4 <PyInit__decimal@@Base+0x28b20>  // b.plast
   2f408:	ldr	x10, [x9, #32]
   2f40c:	cmp	x10, x8
   2f410:	b.ls	2f6e0 <PyInit__decimal@@Base+0x28c2c>  // b.plast
   2f414:	ldr	x10, [x9, #16]
   2f418:	cmp	x10, x8
   2f41c:	b.ls	2f730 <PyInit__decimal@@Base+0x28c7c>  // b.plast
   2f420:	ldr	x9, [x9, #8]
   2f424:	cmp	x9, x8
   2f428:	mov	w8, #0x1                   	// #1
   2f42c:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f430:	ldr	x9, [x8, #112]
   2f434:	cmp	x9, x25
   2f438:	b.ls	2f4dc <PyInit__decimal@@Base+0x28a28>  // b.plast
   2f43c:	ldr	x9, [x8, #88]
   2f440:	cmp	x9, x25
   2f444:	b.ls	2f638 <PyInit__decimal@@Base+0x28b84>  // b.plast
   2f448:	ldr	x8, [x8, #80]
   2f44c:	cmp	x8, x25
   2f450:	mov	w8, #0xa                   	// #10
   2f454:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f458:	add	x0, sp, #0x258
   2f45c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2f460:	adrp	x2, 50000 <PyInit__decimal@@Base+0x4954c>
   2f464:	add	x2, x2, #0xc88
   2f468:	sub	x0, x29, #0x38
   2f46c:	sub	x1, x29, #0x68
   2f470:	add	x3, sp, #0x258
   2f474:	mov	x4, x20
   2f478:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   2f47c:	ldurb	w8, [x29, #-56]
   2f480:	tst	w8, #0xe
   2f484:	b.eq	2f680 <PyInit__decimal@@Base+0x28bcc>  // b.none
   2f488:	cmp	w8, #0x1f
   2f48c:	b.hi	2f4a4 <PyInit__decimal@@Base+0x289f0>  // b.pmore
   2f490:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2f494:	ldr	x8, [x8, #1376]
   2f498:	ldur	x0, [x29, #-16]
   2f49c:	blr	x8
   2f4a0:	ldurb	w8, [x29, #-56]
   2f4a4:	tbnz	w8, #4, 2f6d8 <PyInit__decimal@@Base+0x28c24>
   2f4a8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2f4ac:	ldr	x8, [x8, #1376]
   2f4b0:	sub	x0, x29, #0x38
   2f4b4:	blr	x8
   2f4b8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
   2f4bc:	b	2f820 <PyInit__decimal@@Base+0x28d6c>
   2f4c0:	ldr	x9, [x8, #48]
   2f4c4:	cmp	x9, x25
   2f4c8:	b.ls	2f654 <PyInit__decimal@@Base+0x28ba0>  // b.plast
   2f4cc:	ldr	x8, [x8, #40]
   2f4d0:	cmp	x8, x25
   2f4d4:	mov	w8, #0x5                   	// #5
   2f4d8:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f4dc:	ldr	x9, [x8, #144]
   2f4e0:	cmp	x9, x25
   2f4e4:	b.ls	2f670 <PyInit__decimal@@Base+0x28bbc>  // b.plast
   2f4e8:	ldr	x9, [x8, #128]
   2f4ec:	cmp	x9, x25
   2f4f0:	b.ls	2f724 <PyInit__decimal@@Base+0x28c70>  // b.plast
   2f4f4:	ldr	x8, [x8, #120]
   2f4f8:	cmp	x8, x25
   2f4fc:	mov	w8, #0xf                   	// #15
   2f500:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f504:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   2f508:	movk	x9, #0xcccd
   2f50c:	mul	x10, x11, x9
   2f510:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   2f514:	ror	x10, x10, #1
   2f518:	movk	x12, #0x1999, lsl #48
   2f51c:	cmp	x10, x12
   2f520:	b.hi	2f54c <PyInit__decimal@@Base+0x28a98>  // b.pmore
   2f524:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
   2f528:	movk	x10, #0x999a
   2f52c:	movk	x10, #0x1999, lsl #48
   2f530:	umulh	x11, x11, x9
   2f534:	lsr	x11, x11, #3
   2f538:	mul	x12, x11, x9
   2f53c:	ror	x12, x12, #1
   2f540:	cmp	x12, x10
   2f544:	add	x8, x8, #0x1
   2f548:	b.cc	2f530 <PyInit__decimal@@Base+0x28a7c>  // b.lo, b.ul, b.last
   2f54c:	ldr	x27, [x23, #8]
   2f550:	cmn	x27, x8
   2f554:	b.mi	2f5b0 <PyInit__decimal@@Base+0x28afc>  // b.first
   2f558:	ldrb	w8, [x23]
   2f55c:	tbnz	w8, #0, 2f598 <PyInit__decimal@@Base+0x28ae4>
   2f560:	ldr	x8, [x24, #8]
   2f564:	add	x4, sp, #0x258
   2f568:	mov	x0, x19
   2f56c:	mov	x1, x23
   2f570:	neg	x2, x8
   2f574:	mov	x3, x21
   2f578:	bl	2e798 <PyInit__decimal@@Base+0x27ce4>
   2f57c:	ldr	w8, [sp, #600]
   2f580:	mov	w9, #0x3be                 	// #958
   2f584:	ands	w8, w8, w9
   2f588:	b.eq	2f5fc <PyInit__decimal@@Base+0x28b48>  // b.none
   2f58c:	ldr	w9, [x20]
   2f590:	orr	w8, w9, w8
   2f594:	b	2f890 <PyInit__decimal@@Base+0x28ddc>
   2f598:	mov	w2, #0x1                   	// #1
   2f59c:	mov	x0, x19
   2f5a0:	mov	w1, w22
   2f5a4:	mov	x3, xzr
   2f5a8:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2f5ac:	b	2f894 <PyInit__decimal@@Base+0x28de0>
   2f5b0:	ldrb	w8, [x24]
   2f5b4:	tbnz	w8, #0, 2f1dc <PyInit__decimal@@Base+0x28728>
   2f5b8:	ldr	x8, [x21]
   2f5bc:	ldr	w9, [x20]
   2f5c0:	mov	w10, #0x1040                	// #4160
   2f5c4:	sub	x23, x8, #0x1
   2f5c8:	orr	w8, w9, w10
   2f5cc:	str	w8, [x20]
   2f5d0:	b	2f7d4 <PyInit__decimal@@Base+0x28d20>
   2f5d4:	ldr	x10, [x9, #112]
   2f5d8:	cmp	x10, x8
   2f5dc:	b.ls	2f6fc <PyInit__decimal@@Base+0x28c48>  // b.plast
   2f5e0:	ldr	x10, [x9, #88]
   2f5e4:	cmp	x10, x8
   2f5e8:	b.ls	2f740 <PyInit__decimal@@Base+0x28c8c>  // b.plast
   2f5ec:	ldr	x9, [x9, #80]
   2f5f0:	cmp	x9, x8
   2f5f4:	mov	w8, #0xa                   	// #10
   2f5f8:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f5fc:	add	x2, sp, #0x258
   2f600:	mov	w0, wzr
   2f604:	mov	x1, x19
   2f608:	bl	222d8 <PyInit__decimal@@Base+0x1b824>
   2f60c:	ldr	w8, [sp, #600]
   2f610:	tbnz	w8, #8, 2f7b0 <PyInit__decimal@@Base+0x28cfc>
   2f614:	ldrb	w9, [x19]
   2f618:	tbnz	x0, #63, 2f798 <PyInit__decimal@@Base+0x28ce4>
   2f61c:	tst	w9, #0x1
   2f620:	cneg	x23, x0, ne  // ne = any
   2f624:	b	2f7b4 <PyInit__decimal@@Base+0x28d00>
   2f628:	ldr	x8, [x8, #24]
   2f62c:	cmp	x8, x25
   2f630:	mov	w8, #0x3                   	// #3
   2f634:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f638:	ldr	x9, [x8, #104]
   2f63c:	cmp	x9, x25
   2f640:	b.ls	2f75c <PyInit__decimal@@Base+0x28ca8>  // b.plast
   2f644:	ldr	x8, [x8, #96]
   2f648:	cmp	x8, x25
   2f64c:	mov	w8, #0xc                   	// #12
   2f650:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f654:	ldr	x9, [x8, #64]
   2f658:	cmp	x9, x25
   2f65c:	b.ls	2f780 <PyInit__decimal@@Base+0x28ccc>  // b.plast
   2f660:	ldr	x8, [x8, #56]
   2f664:	cmp	x8, x25
   2f668:	mov	w8, #0x7                   	// #7
   2f66c:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f670:	ldr	x8, [x8, #152]
   2f674:	cmp	x8, x25
   2f678:	mov	w8, #0x13                  	// #19
   2f67c:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f680:	ldp	x9, x10, [x29, #-48]
   2f684:	cmp	w8, #0x1f
   2f688:	stp	x10, x9, [sp, #8]
   2f68c:	b.hi	2f6a8 <PyInit__decimal@@Base+0x28bf4>  // b.pmore
   2f690:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2f694:	ldr	x8, [x8, #1376]
   2f698:	ldur	x0, [x29, #-16]
   2f69c:	blr	x8
   2f6a0:	ldp	x10, x9, [sp, #8]
   2f6a4:	ldurb	w8, [x29, #-56]
   2f6a8:	tbnz	w8, #4, 2f6c0 <PyInit__decimal@@Base+0x28c0c>
   2f6ac:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2f6b0:	ldr	x8, [x8, #1376]
   2f6b4:	sub	x0, x29, #0x38
   2f6b8:	blr	x8
   2f6bc:	ldp	x10, x9, [sp, #8]
   2f6c0:	cmp	x25, #0x0
   2f6c4:	mov	x8, #0xfffffffffffffffd    	// #-3
   2f6c8:	cinc	x8, x8, ne  // ne = any
   2f6cc:	add	x8, x9, x8
   2f6d0:	add	x10, x8, x10
   2f6d4:	b	2f820 <PyInit__decimal@@Base+0x28d6c>
   2f6d8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
   2f6dc:	b	2f820 <PyInit__decimal@@Base+0x28d6c>
   2f6e0:	ldr	x10, [x9, #48]
   2f6e4:	cmp	x10, x8
   2f6e8:	b.ls	2f764 <PyInit__decimal@@Base+0x28cb0>  // b.plast
   2f6ec:	ldr	x9, [x9, #40]
   2f6f0:	cmp	x9, x8
   2f6f4:	mov	w8, #0x5                   	// #5
   2f6f8:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f6fc:	ldr	x10, [x9, #144]
   2f700:	cmp	x10, x8
   2f704:	b.ls	2f788 <PyInit__decimal@@Base+0x28cd4>  // b.plast
   2f708:	ldr	x10, [x9, #128]
   2f70c:	cmp	x10, x8
   2f710:	b.ls	2f80c <PyInit__decimal@@Base+0x28d58>  // b.plast
   2f714:	ldr	x9, [x9, #120]
   2f718:	cmp	x9, x8
   2f71c:	mov	w8, #0xf                   	// #15
   2f720:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f724:	ldr	x8, [x8, #136]
   2f728:	cmp	x8, x25
   2f72c:	b	2f814 <PyInit__decimal@@Base+0x28d60>
   2f730:	ldr	x9, [x9, #24]
   2f734:	cmp	x9, x8
   2f738:	mov	w8, #0x3                   	// #3
   2f73c:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f740:	ldr	x10, [x9, #104]
   2f744:	cmp	x10, x8
   2f748:	b.ls	2f75c <PyInit__decimal@@Base+0x28ca8>  // b.plast
   2f74c:	ldr	x9, [x9, #96]
   2f750:	cmp	x9, x8
   2f754:	mov	w8, #0xc                   	// #12
   2f758:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f75c:	mov	w8, #0xe                   	// #14
   2f760:	b	2f81c <PyInit__decimal@@Base+0x28d68>
   2f764:	ldr	x10, [x9, #64]
   2f768:	cmp	x10, x8
   2f76c:	b.ls	2f780 <PyInit__decimal@@Base+0x28ccc>  // b.plast
   2f770:	ldr	x9, [x9, #56]
   2f774:	cmp	x9, x8
   2f778:	mov	w8, #0x7                   	// #7
   2f77c:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f780:	mov	w8, #0x9                   	// #9
   2f784:	b	2f81c <PyInit__decimal@@Base+0x28d68>
   2f788:	ldr	x9, [x9, #152]
   2f78c:	cmp	x9, x8
   2f790:	mov	w8, #0x13                  	// #19
   2f794:	b	2f818 <PyInit__decimal@@Base+0x28d64>
   2f798:	mov	x23, #0x8000000000000000    	// #-9223372036854775808
   2f79c:	cmp	x0, x23
   2f7a0:	b.ne	2f7a8 <PyInit__decimal@@Base+0x28cf4>  // b.any
   2f7a4:	tbnz	w9, #0, 2f7d4 <PyInit__decimal@@Base+0x28d20>
   2f7a8:	orr	w8, w8, #0x100
   2f7ac:	str	w8, [sp, #600]
   2f7b0:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
   2f7b4:	ldr	x8, [x21]
   2f7b8:	sub	x8, x8, #0x1
   2f7bc:	cmp	x23, x8
   2f7c0:	b.le	2f7d4 <PyInit__decimal@@Base+0x28d20>
   2f7c4:	ldr	w9, [x20]
   2f7c8:	mov	x23, x8
   2f7cc:	orr	w9, w9, #0x1000
   2f7d0:	str	w9, [x20]
   2f7d4:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   2f7d8:	add	x1, x1, #0xc88
   2f7dc:	mov	x0, x19
   2f7e0:	mov	x2, x23
   2f7e4:	mov	x3, x20
   2f7e8:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   2f7ec:	cbz	w0, 2f894 <PyInit__decimal@@Base+0x28de0>
   2f7f0:	ldrb	w8, [x19]
   2f7f4:	neg	x9, x23
   2f7f8:	str	x9, [x19, #8]
   2f7fc:	and	w8, w8, #0xf0
   2f800:	orr	w8, w8, w22
   2f804:	strb	w8, [x19]
   2f808:	b	2f894 <PyInit__decimal@@Base+0x28de0>
   2f80c:	ldr	x9, [x9, #136]
   2f810:	cmp	x9, x8
   2f814:	mov	w8, #0x11                  	// #17
   2f818:	cinc	x8, x8, ls  // ls = plast
   2f81c:	sub	x10, x8, #0x1
   2f820:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   2f824:	cmp	x10, x8
   2f828:	b.ne	2f8b4 <PyInit__decimal@@Base+0x28e00>  // b.any
   2f82c:	ldrb	w8, [x19]
   2f830:	tbnz	w8, #5, 2f874 <PyInit__decimal@@Base+0x28dc0>
   2f834:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   2f838:	ldr	x9, [x19, #32]
   2f83c:	ldr	x1, [x21, #1344]
   2f840:	cmp	x9, x1
   2f844:	b.le	2f874 <PyInit__decimal@@Base+0x28dc0>
   2f848:	strb	wzr, [sp, #600]
   2f84c:	ldr	x0, [x19, #40]
   2f850:	add	x3, sp, #0x258
   2f854:	mov	w2, #0x8                   	// #8
   2f858:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2f85c:	str	x0, [x19, #40]
   2f860:	ldrb	w8, [sp, #600]
   2f864:	cbnz	w8, 2f870 <PyInit__decimal@@Base+0x28dbc>
   2f868:	ldr	x8, [x21, #1344]
   2f86c:	str	x8, [x19, #32]
   2f870:	ldrb	w8, [x19]
   2f874:	and	w8, w8, #0xf0
   2f878:	orr	w8, w8, #0x4
   2f87c:	stp	xzr, xzr, [x19, #16]
   2f880:	strb	w8, [x19]
   2f884:	str	xzr, [x19, #8]
   2f888:	ldr	w8, [x20]
   2f88c:	orr	w8, w8, #0x200
   2f890:	str	w8, [x20]
   2f894:	add	sp, sp, #0x530
   2f898:	ldp	x20, x19, [sp, #80]
   2f89c:	ldp	x22, x21, [sp, #64]
   2f8a0:	ldp	x24, x23, [sp, #48]
   2f8a4:	ldp	x26, x25, [sp, #32]
   2f8a8:	ldp	x28, x27, [sp, #16]
   2f8ac:	ldp	x29, x30, [sp], #96
   2f8b0:	ret
   2f8b4:	ldp	x9, x11, [x29, #-96]
   2f8b8:	ldrb	w8, [x23]
   2f8bc:	add	x12, x27, x28
   2f8c0:	add	x9, x9, x11
   2f8c4:	sub	x9, x9, #0x1
   2f8c8:	lsr	x11, x9, #63
   2f8cc:	and	w9, w8, #0x1
   2f8d0:	cmp	w9, w11
   2f8d4:	sub	x11, x12, #0x1
   2f8d8:	b.ne	2f92c <PyInit__decimal@@Base+0x28e78>  // b.any
   2f8dc:	ldr	x12, [x21, #8]
   2f8e0:	adrp	x13, 3f000 <PyInit__decimal@@Base+0x3854c>
   2f8e4:	add	x13, x13, #0x370
   2f8e8:	ldr	x14, [x13, #72]
   2f8ec:	cmp	x12, #0x0
   2f8f0:	cneg	x12, x12, mi  // mi = first
   2f8f4:	adrp	x28, 50000 <PyInit__decimal@@Base+0x4954c>
   2f8f8:	cmp	x14, x12
   2f8fc:	add	x28, x28, #0xc88
   2f900:	b.ls	2f988 <PyInit__decimal@@Base+0x28ed4>  // b.plast
   2f904:	ldr	x14, [x13, #32]
   2f908:	cmp	x14, x12
   2f90c:	b.ls	2f9d8 <PyInit__decimal@@Base+0x28f24>  // b.plast
   2f910:	ldr	x14, [x13, #16]
   2f914:	cmp	x14, x12
   2f918:	b.ls	2fa60 <PyInit__decimal@@Base+0x28fac>  // b.plast
   2f91c:	ldr	x13, [x13, #8]
   2f920:	cmp	x13, x12
   2f924:	mov	w12, #0x1                   	// #1
   2f928:	b	2fb1c <PyInit__decimal@@Base+0x29068>
   2f92c:	ldr	x12, [x21, #16]
   2f930:	ldr	x13, [x21]
   2f934:	adrp	x14, 3f000 <PyInit__decimal@@Base+0x3854c>
   2f938:	add	x14, x14, #0x370
   2f93c:	ldr	x15, [x14, #72]
   2f940:	sub	x13, x12, x13
   2f944:	adds	x12, x13, #0x1
   2f948:	mvn	x16, x13
   2f94c:	csinc	x13, x16, x13, mi  // mi = first
   2f950:	adrp	x28, 50000 <PyInit__decimal@@Base+0x4954c>
   2f954:	cmp	x15, x13
   2f958:	add	x28, x28, #0xc88
   2f95c:	b.ls	2f9b0 <PyInit__decimal@@Base+0x28efc>  // b.plast
   2f960:	ldr	x15, [x14, #32]
   2f964:	cmp	x15, x13
   2f968:	b.ls	2f9f4 <PyInit__decimal@@Base+0x28f40>  // b.plast
   2f96c:	ldr	x15, [x14, #16]
   2f970:	cmp	x15, x13
   2f974:	b.ls	2fa70 <PyInit__decimal@@Base+0x28fbc>  // b.plast
   2f978:	ldr	x14, [x14, #8]
   2f97c:	cmp	x14, x13
   2f980:	mov	w13, #0x1                   	// #1
   2f984:	b	2fb50 <PyInit__decimal@@Base+0x2909c>
   2f988:	ldr	x14, [x13, #112]
   2f98c:	cmp	x14, x12
   2f990:	b.ls	2fa10 <PyInit__decimal@@Base+0x28f5c>  // b.plast
   2f994:	ldr	x14, [x13, #88]
   2f998:	cmp	x14, x12
   2f99c:	b.ls	2fa80 <PyInit__decimal@@Base+0x28fcc>  // b.plast
   2f9a0:	ldr	x13, [x13, #80]
   2f9a4:	cmp	x13, x12
   2f9a8:	mov	w12, #0xa                   	// #10
   2f9ac:	b	2fb1c <PyInit__decimal@@Base+0x29068>
   2f9b0:	ldr	x15, [x14, #112]
   2f9b4:	cmp	x15, x13
   2f9b8:	b.ls	2fa38 <PyInit__decimal@@Base+0x28f84>  // b.plast
   2f9bc:	ldr	x15, [x14, #88]
   2f9c0:	cmp	x15, x13
   2f9c4:	b.ls	2fa9c <PyInit__decimal@@Base+0x28fe8>  // b.plast
   2f9c8:	ldr	x14, [x14, #80]
   2f9cc:	cmp	x14, x13
   2f9d0:	mov	w13, #0xa                   	// #10
   2f9d4:	b	2fb50 <PyInit__decimal@@Base+0x2909c>
   2f9d8:	ldr	x14, [x13, #48]
   2f9dc:	cmp	x14, x12
   2f9e0:	b.ls	2fab8 <PyInit__decimal@@Base+0x29004>  // b.plast
   2f9e4:	ldr	x13, [x13, #40]
   2f9e8:	cmp	x13, x12
   2f9ec:	mov	w12, #0x5                   	// #5
   2f9f0:	b	2fb1c <PyInit__decimal@@Base+0x29068>
   2f9f4:	ldr	x15, [x14, #48]
   2f9f8:	cmp	x15, x13
   2f9fc:	b.ls	2fad4 <PyInit__decimal@@Base+0x29020>  // b.plast
   2fa00:	ldr	x14, [x14, #40]
   2fa04:	cmp	x14, x13
   2fa08:	mov	w13, #0x5                   	// #5
   2fa0c:	b	2fb50 <PyInit__decimal@@Base+0x2909c>
   2fa10:	ldr	x14, [x13, #144]
   2fa14:	cmp	x14, x12
   2fa18:	b.ls	2faf0 <PyInit__decimal@@Base+0x2903c>  // b.plast
   2fa1c:	ldr	x14, [x13, #128]
   2fa20:	cmp	x14, x12
   2fa24:	b.ls	2fb10 <PyInit__decimal@@Base+0x2905c>  // b.plast
   2fa28:	ldr	x13, [x13, #120]
   2fa2c:	cmp	x13, x12
   2fa30:	mov	w12, #0xf                   	// #15
   2fa34:	b	2fb1c <PyInit__decimal@@Base+0x29068>
   2fa38:	ldr	x15, [x14, #144]
   2fa3c:	cmp	x15, x13
   2fa40:	b.ls	2fb00 <PyInit__decimal@@Base+0x2904c>  // b.plast
   2fa44:	ldr	x15, [x14, #128]
   2fa48:	cmp	x15, x13
   2fa4c:	b.ls	2fb44 <PyInit__decimal@@Base+0x29090>  // b.plast
   2fa50:	ldr	x14, [x14, #120]
   2fa54:	cmp	x14, x13
   2fa58:	mov	w13, #0xf                   	// #15
   2fa5c:	b	2fb50 <PyInit__decimal@@Base+0x2909c>
   2fa60:	ldr	x13, [x13, #24]
   2fa64:	cmp	x13, x12
   2fa68:	mov	w12, #0x3                   	// #3
   2fa6c:	b	2fb1c <PyInit__decimal@@Base+0x29068>
   2fa70:	ldr	x14, [x14, #24]
   2fa74:	cmp	x14, x13
   2fa78:	mov	w13, #0x3                   	// #3
   2fa7c:	b	2fb50 <PyInit__decimal@@Base+0x2909c>
   2fa80:	ldr	x14, [x13, #104]
   2fa84:	cmp	x14, x12
   2fa88:	b.ls	2ff50 <PyInit__decimal@@Base+0x2949c>  // b.plast
   2fa8c:	ldr	x13, [x13, #96]
   2fa90:	cmp	x13, x12
   2fa94:	mov	w12, #0xc                   	// #12
   2fa98:	b	2fb1c <PyInit__decimal@@Base+0x29068>
   2fa9c:	ldr	x15, [x14, #104]
   2faa0:	cmp	x15, x13
   2faa4:	b.ls	2ff58 <PyInit__decimal@@Base+0x294a4>  // b.plast
   2faa8:	ldr	x14, [x14, #96]
   2faac:	cmp	x14, x13
   2fab0:	mov	w13, #0xc                   	// #12
   2fab4:	b	2fb50 <PyInit__decimal@@Base+0x2909c>
   2fab8:	ldr	x14, [x13, #64]
   2fabc:	cmp	x14, x12
   2fac0:	b.ls	2ff60 <PyInit__decimal@@Base+0x294ac>  // b.plast
   2fac4:	ldr	x13, [x13, #56]
   2fac8:	cmp	x13, x12
   2facc:	mov	w12, #0x7                   	// #7
   2fad0:	b	2fb1c <PyInit__decimal@@Base+0x29068>
   2fad4:	ldr	x15, [x14, #64]
   2fad8:	cmp	x15, x13
   2fadc:	b.ls	2ff68 <PyInit__decimal@@Base+0x294b4>  // b.plast
   2fae0:	ldr	x14, [x14, #56]
   2fae4:	cmp	x14, x13
   2fae8:	mov	w13, #0x7                   	// #7
   2faec:	b	2fb50 <PyInit__decimal@@Base+0x2909c>
   2faf0:	ldr	x13, [x13, #152]
   2faf4:	cmp	x13, x12
   2faf8:	mov	w12, #0x13                  	// #19
   2fafc:	b	2fb1c <PyInit__decimal@@Base+0x29068>
   2fb00:	ldr	x14, [x14, #152]
   2fb04:	cmp	x14, x13
   2fb08:	mov	w13, #0x13                  	// #19
   2fb0c:	b	2fb50 <PyInit__decimal@@Base+0x2909c>
   2fb10:	ldr	x13, [x13, #136]
   2fb14:	cmp	x13, x12
   2fb18:	mov	w12, #0x11                  	// #17
   2fb1c:	cinc	x12, x12, ls  // ls = plast
   2fb20:	add	x10, x10, x11
   2fb24:	cmp	x10, x12
   2fb28:	b.le	2fb78 <PyInit__decimal@@Base+0x290c4>
   2fb2c:	mov	x3, #0x1                   	// #1
   2fb30:	movk	x3, #0x4ec8, lsl #16
   2fb34:	movk	x3, #0x6d67, lsl #32
   2fb38:	mov	w2, #0x1                   	// #1
   2fb3c:	movk	x3, #0x1bc1, lsl #48
   2fb40:	b	2fb68 <PyInit__decimal@@Base+0x290b4>
   2fb44:	ldr	x14, [x14, #136]
   2fb48:	cmp	x14, x13
   2fb4c:	mov	w13, #0x11                  	// #17
   2fb50:	cinc	x13, x13, ls  // ls = plast
   2fb54:	add	x10, x10, x11
   2fb58:	cmp	x10, x13
   2fb5c:	b.le	2fb78 <PyInit__decimal@@Base+0x290c4>
   2fb60:	sub	x3, x12, #0x1
   2fb64:	mov	w2, #0x1                   	// #1
   2fb68:	mov	x0, x19
   2fb6c:	mov	w1, w22
   2fb70:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   2fb74:	b	303bc <PyInit__decimal@@Base+0x29908>
   2fb78:	sub	x27, x29, #0xd8
   2fb7c:	cbz	w26, 2fc3c <PyInit__decimal@@Base+0x29188>
   2fb80:	mov	w10, #0x40                  	// #64
   2fb84:	add	x11, sp, #0x28
   2fb88:	mov	w8, #0x30                  	// #48
   2fb8c:	stp	x10, x11, [x29, #-184]
   2fb90:	add	x11, sp, #0x258
   2fb94:	stp	xzr, xzr, [x29, #-208]
   2fb98:	str	xzr, [sp, #560]
   2fb9c:	str	xzr, [sp, #568]
   2fba0:	sturb	w8, [x29, #-216]
   2fba4:	stur	xzr, [x29, #-192]
   2fba8:	strb	w8, [sp, #552]
   2fbac:	str	xzr, [sp, #576]
   2fbb0:	str	x10, [sp, #584]
   2fbb4:	str	x11, [sp, #592]
   2fbb8:	ldur	q0, [x21, #8]
   2fbbc:	ldr	x8, [x21]
   2fbc0:	adrp	x11, 3f000 <PyInit__decimal@@Base+0x3854c>
   2fbc4:	stur	q0, [x27, #56]
   2fbc8:	stur	xzr, [x29, #-144]
   2fbcc:	ldr	w10, [x21, #44]
   2fbd0:	ldr	d0, [x11, #1256]
   2fbd4:	stp	wzr, w10, [x29, #-128]
   2fbd8:	ldp	x11, x10, [x23, #8]
   2fbdc:	stur	d0, [x29, #-136]
   2fbe0:	add	x8, x8, x10
   2fbe4:	add	x8, x8, x11
   2fbe8:	add	x8, x8, #0x2
   2fbec:	stur	x8, [x29, #-168]
   2fbf0:	cbnz	w9, 2fca8 <PyInit__decimal@@Base+0x291f4>
   2fbf4:	sub	x8, x29, #0xd8
   2fbf8:	cmp	x8, x24
   2fbfc:	b.eq	2fecc <PyInit__decimal@@Base+0x29418>  // b.none
   2fc00:	adrp	x25, 53000 <PyInit__decimal@@Base+0x4c54c>
   2fc04:	ldr	x8, [x24, #24]
   2fc08:	ldr	x9, [x25, #1344]
   2fc0c:	cmp	x9, x8
   2fc10:	csel	x1, x8, x9, lt  // lt = tstop
   2fc14:	cmp	x1, #0x41
   2fc18:	b.lt	2fea0 <PyInit__decimal@@Base+0x293ec>  // b.tstop
   2fc1c:	sub	x0, x29, #0xd8
   2fc20:	mov	x2, x20
   2fc24:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2fc28:	cbz	w0, 2ffd4 <PyInit__decimal@@Base+0x29520>
   2fc2c:	ldr	x8, [x24, #24]
   2fc30:	ldurb	w9, [x29, #-216]
   2fc34:	ldur	x0, [x29, #-176]
   2fc38:	b	2fea8 <PyInit__decimal@@Base+0x293f4>
   2fc3c:	sub	x12, x29, #0x38
   2fc40:	mov	w9, #0x30                  	// #48
   2fc44:	mov	w10, #0x40                  	// #64
   2fc48:	add	x11, sp, #0x28
   2fc4c:	cmp	x12, x23
   2fc50:	stp	xzr, xzr, [x29, #-48]
   2fc54:	sturb	w9, [x29, #-56]
   2fc58:	stp	xzr, x10, [x29, #-32]
   2fc5c:	stur	x11, [x29, #-16]
   2fc60:	b.eq	2fd58 <PyInit__decimal@@Base+0x292a4>  // b.none
   2fc64:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   2fc68:	ldr	x9, [x23, #24]
   2fc6c:	ldr	x10, [x22, #1344]
   2fc70:	cmp	x10, x9
   2fc74:	csel	x1, x9, x10, lt  // lt = tstop
   2fc78:	cmp	x1, #0x41
   2fc7c:	b.lt	2fd2c <PyInit__decimal@@Base+0x29278>  // b.tstop
   2fc80:	sub	x0, x29, #0x38
   2fc84:	mov	x2, x20
   2fc88:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   2fc8c:	cbz	w0, 2ff70 <PyInit__decimal@@Base+0x294bc>
   2fc90:	ldurb	w10, [x29, #-56]
   2fc94:	ldr	x9, [x23, #24]
   2fc98:	ldur	x0, [x29, #-16]
   2fc9c:	ldrb	w8, [x23]
   2fca0:	and	w10, w10, #0xfffffff0
   2fca4:	b	2fd34 <PyInit__decimal@@Base+0x29280>
   2fca8:	adrp	x2, 50000 <PyInit__decimal@@Base+0x4954c>
   2fcac:	add	x8, x8, #0x1
   2fcb0:	add	x2, x2, #0xc88
   2fcb4:	sub	x1, x29, #0xd8
   2fcb8:	sub	x4, x29, #0xa8
   2fcbc:	mov	w0, #0x1                   	// #1
   2fcc0:	mov	x3, x24
   2fcc4:	mov	x5, x20
   2fcc8:	stur	x8, [x29, #-168]
   2fccc:	bl	281c4 <PyInit__decimal@@Base+0x21710>
   2fcd0:	ldrh	w8, [x20]
   2fcd4:	mov	w9, #0x3be                 	// #958
   2fcd8:	tst	w8, w9
   2fcdc:	b.eq	2fecc <PyInit__decimal@@Base+0x29418>  // b.none
   2fce0:	ldrb	w8, [x19]
   2fce4:	tbnz	w8, #5, 30340 <PyInit__decimal@@Base+0x2988c>
   2fce8:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   2fcec:	ldr	x9, [x19, #32]
   2fcf0:	ldr	x1, [x22, #1344]
   2fcf4:	cmp	x9, x1
   2fcf8:	b.le	30340 <PyInit__decimal@@Base+0x2988c>
   2fcfc:	sturb	wzr, [x29, #-56]
   2fd00:	ldr	x0, [x19, #40]
   2fd04:	sub	x3, x29, #0x38
   2fd08:	mov	w2, #0x8                   	// #8
   2fd0c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2fd10:	str	x0, [x19, #40]
   2fd14:	ldurb	w8, [x29, #-56]
   2fd18:	cbnz	w8, 2fd24 <PyInit__decimal@@Base+0x29270>
   2fd1c:	ldr	x8, [x22, #1344]
   2fd20:	str	x8, [x19, #32]
   2fd24:	ldrb	w8, [x19]
   2fd28:	b	30340 <PyInit__decimal@@Base+0x2988c>
   2fd2c:	add	x0, sp, #0x28
   2fd30:	mov	w10, #0x30                  	// #48
   2fd34:	and	w8, w8, #0xf
   2fd38:	orr	w8, w8, w10
   2fd3c:	sturb	w8, [x29, #-56]
   2fd40:	ldur	q0, [x23, #8]
   2fd44:	lsl	x2, x9, #3
   2fd48:	stur	q0, [x27, #168]
   2fd4c:	stur	x9, [x29, #-32]
   2fd50:	ldr	x1, [x23, #40]
   2fd54:	bl	63c0 <memcpy@plt>
   2fd58:	add	x0, sp, #0x258
   2fd5c:	add	x22, sp, #0x258
   2fd60:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   2fd64:	ldr	x8, [x24, #16]
   2fd68:	ldr	x9, [x21]
   2fd6c:	mov	w10, #0x6                   	// #6
   2fd70:	str	w10, [sp, #636]
   2fd74:	add	x22, x22, #0x1c
   2fd78:	cmp	x8, x9
   2fd7c:	csel	x8, x8, x9, gt
   2fd80:	add	x8, x8, #0x17
   2fd84:	str	x8, [sp, #600]
   2fd88:	ldr	w8, [x21, #44]
   2fd8c:	add	x2, sp, #0x258
   2fd90:	mov	x0, x19
   2fd94:	mov	x1, x24
   2fd98:	mov	x3, x22
   2fd9c:	str	w8, [sp, #644]
   2fda0:	bl	2c0bc <PyInit__decimal@@Base+0x25608>
   2fda4:	sub	x2, x29, #0x38
   2fda8:	add	x3, sp, #0x258
   2fdac:	mov	x0, x19
   2fdb0:	mov	x1, x19
   2fdb4:	mov	x4, x22
   2fdb8:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   2fdbc:	add	x1, sp, #0x258
   2fdc0:	mov	x0, x19
   2fdc4:	mov	x2, x22
   2fdc8:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   2fdcc:	add	x2, sp, #0x258
   2fdd0:	mov	x0, x19
   2fdd4:	mov	x1, x19
   2fdd8:	mov	x3, x20
   2fddc:	bl	2a098 <PyInit__decimal@@Base+0x235e4>
   2fde0:	ldurb	w8, [x29, #-56]
   2fde4:	cmp	w8, #0x1f
   2fde8:	b.hi	2fe00 <PyInit__decimal@@Base+0x2934c>  // b.pmore
   2fdec:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2fdf0:	ldr	x8, [x8, #1376]
   2fdf4:	ldur	x0, [x29, #-16]
   2fdf8:	blr	x8
   2fdfc:	ldurb	w8, [x29, #-56]
   2fe00:	tbnz	w8, #4, 2fe14 <PyInit__decimal@@Base+0x29360>
   2fe04:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   2fe08:	ldr	x8, [x8, #1376]
   2fe0c:	sub	x0, x29, #0x38
   2fe10:	blr	x8
   2fe14:	ldr	w9, [sp, #628]
   2fe18:	ldr	w10, [x20]
   2fe1c:	ldrb	w8, [x19]
   2fe20:	and	w9, w9, #0x3fe
   2fe24:	orr	w9, w10, w9
   2fe28:	mov	w10, #0x1040                	// #4160
   2fe2c:	orr	w9, w9, w10
   2fe30:	tst	w8, #0xe
   2fe34:	str	w9, [x20]
   2fe38:	b.ne	2fe78 <PyInit__decimal@@Base+0x293c4>  // b.any
   2fe3c:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   2fe40:	add	x1, x1, #0xc88
   2fe44:	mov	x0, x19
   2fe48:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   2fe4c:	cbnz	w0, 2fe78 <PyInit__decimal@@Base+0x293c4>
   2fe50:	ldr	x22, [x21]
   2fe54:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   2fe58:	add	x1, x1, #0xc88
   2fe5c:	mov	x0, x19
   2fe60:	sub	x2, x22, #0x1
   2fe64:	mov	x3, x20
   2fe68:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   2fe6c:	mov	w8, #0x1                   	// #1
   2fe70:	sub	x8, x8, x22
   2fe74:	str	x8, [x19, #8]
   2fe78:	ldrb	w8, [x19]
   2fe7c:	tbz	w8, #1, 303bc <PyInit__decimal@@Base+0x29908>
   2fe80:	mov	x3, #0x1                   	// #1
   2fe84:	movk	x3, #0x4ec8, lsl #16
   2fe88:	movk	x3, #0x6d67, lsl #32
   2fe8c:	mov	w2, #0x1                   	// #1
   2fe90:	movk	x3, #0x1bc1, lsl #48
   2fe94:	mov	x0, x19
   2fe98:	mov	w1, wzr
   2fe9c:	b	2fb70 <PyInit__decimal@@Base+0x290bc>
   2fea0:	add	x0, sp, #0x28
   2fea4:	mov	w9, #0x30                  	// #48
   2fea8:	ldrb	w10, [x24]
   2feac:	lsl	x2, x8, #3
   2feb0:	bfxil	w9, w10, #0, #4
   2feb4:	sturb	w9, [x29, #-216]
   2feb8:	ldur	q0, [x24, #8]
   2febc:	stur	q0, [x27, #8]
   2fec0:	stur	x8, [x29, #-192]
   2fec4:	ldr	x1, [x24, #40]
   2fec8:	bl	63c0 <memcpy@plt>
   2fecc:	sub	x8, x29, #0xa8
   2fed0:	add	x2, x8, #0x1c
   2fed4:	mov	w0, wzr
   2fed8:	mov	x1, x23
   2fedc:	bl	222d8 <PyInit__decimal@@Base+0x1b824>
   2fee0:	ldurb	w8, [x29, #-139]
   2fee4:	tbnz	w8, #0, 2ff0c <PyInit__decimal@@Base+0x29458>
   2fee8:	mov	x2, x0
   2feec:	sub	x1, x29, #0xd8
   2fef0:	sub	x4, x29, #0xa8
   2fef4:	mov	x0, x19
   2fef8:	mov	w3, w22
   2fefc:	mov	x5, x20
   2ff00:	bl	36a54 <PyInit__decimal@@Base+0x2ffa0>
   2ff04:	ldrb	w8, [x19]
   2ff08:	b	302d8 <PyInit__decimal@@Base+0x29824>
   2ff0c:	add	x8, sp, #0x228
   2ff10:	cmp	x8, x23
   2ff14:	b.eq	30060 <PyInit__decimal@@Base+0x295ac>  // b.none
   2ff18:	adrp	x24, 53000 <PyInit__decimal@@Base+0x4c54c>
   2ff1c:	ldr	x8, [x23, #24]
   2ff20:	ldr	x10, [x24, #1344]
   2ff24:	ldr	x9, [sp, #584]
   2ff28:	cmp	x10, x8
   2ff2c:	csel	x1, x8, x10, lt  // lt = tstop
   2ff30:	cmp	x1, x9
   2ff34:	b.eq	30030 <PyInit__decimal@@Base+0x2957c>  // b.none
   2ff38:	ldrb	w10, [sp, #552]
   2ff3c:	tbnz	w10, #5, 30014 <PyInit__decimal@@Base+0x29560>
   2ff40:	add	x0, sp, #0x228
   2ff44:	mov	x2, x20
   2ff48:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   2ff4c:	b	30028 <PyInit__decimal@@Base+0x29574>
   2ff50:	mov	w12, #0xe                   	// #14
   2ff54:	b	2fb20 <PyInit__decimal@@Base+0x2906c>
   2ff58:	mov	w13, #0xe                   	// #14
   2ff5c:	b	2fb54 <PyInit__decimal@@Base+0x290a0>
   2ff60:	mov	w12, #0x9                   	// #9
   2ff64:	b	2fb20 <PyInit__decimal@@Base+0x2906c>
   2ff68:	mov	w13, #0x9                   	// #9
   2ff6c:	b	2fb54 <PyInit__decimal@@Base+0x290a0>
   2ff70:	ldrb	w8, [x19]
   2ff74:	tbnz	w8, #5, 2ffb4 <PyInit__decimal@@Base+0x29500>
   2ff78:	ldr	x9, [x19, #32]
   2ff7c:	ldr	x1, [x22, #1344]
   2ff80:	cmp	x9, x1
   2ff84:	b.le	2ffb4 <PyInit__decimal@@Base+0x29500>
   2ff88:	strb	wzr, [sp, #600]
   2ff8c:	ldr	x0, [x19, #40]
   2ff90:	add	x3, sp, #0x258
   2ff94:	mov	w2, #0x8                   	// #8
   2ff98:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   2ff9c:	str	x0, [x19, #40]
   2ffa0:	ldrb	w8, [sp, #600]
   2ffa4:	cbnz	w8, 2ffb0 <PyInit__decimal@@Base+0x294fc>
   2ffa8:	ldr	x8, [x22, #1344]
   2ffac:	str	x8, [x19, #32]
   2ffb0:	ldrb	w8, [x19]
   2ffb4:	and	w8, w8, #0xf0
   2ffb8:	orr	w8, w8, #0x4
   2ffbc:	stp	xzr, xzr, [x19, #16]
   2ffc0:	strb	w8, [x19]
   2ffc4:	str	xzr, [x19, #8]
   2ffc8:	ldr	w9, [x20]
   2ffcc:	orr	w9, w9, #0x200
   2ffd0:	b	2fe30 <PyInit__decimal@@Base+0x2937c>
   2ffd4:	ldrb	w8, [x19]
   2ffd8:	tbnz	w8, #5, 30340 <PyInit__decimal@@Base+0x2988c>
   2ffdc:	ldr	x9, [x19, #32]
   2ffe0:	ldr	x1, [x25, #1344]
   2ffe4:	cmp	x9, x1
   2ffe8:	b.le	30340 <PyInit__decimal@@Base+0x2988c>
   2ffec:	sturb	wzr, [x29, #-56]
   2fff0:	ldr	x0, [x19, #40]
   2fff4:	sub	x3, x29, #0x38
   2fff8:	mov	w2, #0x8                   	// #8
   2fffc:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   30000:	str	x0, [x19, #40]
   30004:	ldurb	w8, [x29, #-56]
   30008:	cbnz	w8, 2fd24 <PyInit__decimal@@Base+0x29270>
   3000c:	ldr	x8, [x25, #1344]
   30010:	b	2fd20 <PyInit__decimal@@Base+0x2926c>
   30014:	cmp	x1, x9
   30018:	b.le	30030 <PyInit__decimal@@Base+0x2957c>
   3001c:	add	x0, sp, #0x228
   30020:	mov	x2, x20
   30024:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   30028:	cbz	w0, 30300 <PyInit__decimal@@Base+0x2984c>
   3002c:	ldr	x8, [x23, #24]
   30030:	ldrb	w9, [x23]
   30034:	ldrb	w10, [sp, #552]
   30038:	lsl	x2, x8, #3
   3003c:	bfxil	w10, w9, #0, #4
   30040:	strb	w10, [sp, #552]
   30044:	ldur	q0, [x23, #8]
   30048:	add	x9, sp, #0x131
   3004c:	str	x8, [sp, #576]
   30050:	stur	q0, [x9, #255]
   30054:	ldr	x0, [sp, #592]
   30058:	ldr	x1, [x23, #40]
   3005c:	bl	63c0 <memcpy@plt>
   30060:	adrp	x11, 38000 <PyInit__decimal@@Base+0x3154c>
   30064:	ldr	q1, [x11, #3296]
   30068:	mov	w10, #0x1                   	// #1
   3006c:	mov	w8, #0x2                   	// #2
   30070:	mov	w9, #0x90                  	// #144
   30074:	sub	x12, x29, #0x78
   30078:	dup	v0.2d, x10
   3007c:	sub	x0, x29, #0x38
   30080:	stur	wzr, [x29, #-112]
   30084:	stur	x8, [x29, #-120]
   30088:	sturb	w9, [x29, #-104]
   3008c:	stur	q0, [x27, #136]
   30090:	str	q1, [sp, #16]
   30094:	stur	q1, [x27, #120]
   30098:	stur	x12, [x29, #-64]
   3009c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   300a0:	cmp	x19, x28
   300a4:	b.eq	30120 <PyInit__decimal@@Base+0x2966c>  // b.none
   300a8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   300ac:	ldr	x9, [x8, #1344]
   300b0:	ldr	x8, [x19, #32]
   300b4:	cmp	x9, #0x1
   300b8:	csinc	x1, x9, xzr, gt
   300bc:	cmp	x1, x8
   300c0:	b.eq	300f4 <PyInit__decimal@@Base+0x29640>  // b.none
   300c4:	ldrb	w9, [x19]
   300c8:	tbnz	w9, #5, 300dc <PyInit__decimal@@Base+0x29628>
   300cc:	mov	x0, x19
   300d0:	mov	x2, x20
   300d4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   300d8:	b	300f0 <PyInit__decimal@@Base+0x2963c>
   300dc:	cmp	x1, x8
   300e0:	b.le	300f4 <PyInit__decimal@@Base+0x29640>
   300e4:	mov	x0, x19
   300e8:	mov	x2, x20
   300ec:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   300f0:	cbz	w0, 30120 <PyInit__decimal@@Base+0x2966c>
   300f4:	ldrb	w8, [x19]
   300f8:	ldr	q0, [sp, #16]
   300fc:	mov	w9, #0x1                   	// #1
   30100:	str	x9, [x19, #24]
   30104:	and	w8, w8, #0xf0
   30108:	stur	q0, [x19, #8]
   3010c:	strb	w8, [x19]
   30110:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   30114:	ldr	x10, [x19, #40]
   30118:	ldr	x8, [x8, #1384]
   3011c:	str	x8, [x10]
   30120:	ldrb	w9, [sp, #552]
   30124:	mov	x23, #0x435f                	// #17247
   30128:	movk	x23, #0xd79, lsl #16
   3012c:	movk	x23, #0x35e5, lsl #32
   30130:	adrp	x25, 3f000 <PyInit__decimal@@Base+0x3854c>
   30134:	movk	x23, #0xd794, lsl #48
   30138:	mov	x24, #0xffffffffffffffed    	// #-19
   3013c:	add	x25, x25, #0x370
   30140:	ldr	x8, [sp, #592]
   30144:	ldr	x10, [sp, #576]
   30148:	tst	w9, #0xe
   3014c:	add	x10, x8, x10, lsl #3
   30150:	ldur	x10, [x10, #-8]
   30154:	b.eq	30160 <PyInit__decimal@@Base+0x296ac>  // b.none
   30158:	cbnz	x10, 30164 <PyInit__decimal@@Base+0x296b0>
   3015c:	b	301f8 <PyInit__decimal@@Base+0x29744>
   30160:	cbz	x10, 302c8 <PyInit__decimal@@Base+0x29814>
   30164:	ldr	x9, [sp, #560]
   30168:	tbnz	x9, #63, 30178 <PyInit__decimal@@Base+0x296c4>
   3016c:	cbnz	x9, 301f8 <PyInit__decimal@@Base+0x29744>
   30170:	ldr	x8, [x8]
   30174:	b	30198 <PyInit__decimal@@Base+0x296e4>
   30178:	neg	x10, x9
   3017c:	umulh	x10, x10, x23
   30180:	neg	x9, x9
   30184:	lsr	x10, x10, #4
   30188:	madd	x9, x10, x24, x9
   3018c:	ldr	x8, [x8, x10, lsl #3]
   30190:	ldr	x9, [x25, x9, lsl #3]
   30194:	udiv	x8, x8, x9
   30198:	tbz	w8, #0, 301f8 <PyInit__decimal@@Base+0x29744>
   3019c:	sub	x2, x29, #0xd8
   301a0:	sub	x3, x29, #0xa8
   301a4:	sub	x4, x29, #0x70
   301a8:	mov	x0, x19
   301ac:	mov	x1, x19
   301b0:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   301b4:	sub	x1, x29, #0xa8
   301b8:	sub	x2, x29, #0x70
   301bc:	mov	x0, x19
   301c0:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   301c4:	ldur	w9, [x29, #-112]
   301c8:	ldr	w8, [x20]
   301cc:	orr	w8, w8, w9
   301d0:	str	w8, [x20]
   301d4:	ldrb	w8, [x19]
   301d8:	tst	w8, #0xe
   301dc:	b.ne	302cc <PyInit__decimal@@Base+0x29818>  // b.any
   301e0:	tbz	w9, #0, 301f8 <PyInit__decimal@@Base+0x29744>
   301e4:	ldr	x9, [x19, #40]
   301e8:	ldr	x10, [x19, #24]
   301ec:	add	x9, x9, x10, lsl #3
   301f0:	ldur	x9, [x9, #-8]
   301f4:	cbz	x9, 302cc <PyInit__decimal@@Base+0x29818>
   301f8:	sub	x0, x29, #0xd8
   301fc:	sub	x1, x29, #0xd8
   30200:	sub	x2, x29, #0xd8
   30204:	sub	x3, x29, #0xa8
   30208:	sub	x4, x29, #0x70
   3020c:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   30210:	sub	x0, x29, #0xd8
   30214:	sub	x1, x29, #0xa8
   30218:	sub	x2, x29, #0x70
   3021c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   30220:	add	x0, sp, #0x228
   30224:	add	x1, sp, #0x228
   30228:	sub	x2, x29, #0x68
   3022c:	sub	x3, x29, #0x38
   30230:	sub	x4, x29, #0x70
   30234:	bl	298f4 <PyInit__decimal@@Base+0x22e40>
   30238:	ldurb	w8, [x29, #-216]
   3023c:	tst	w8, #0xc
   30240:	b.ne	30250 <PyInit__decimal@@Base+0x2979c>  // b.any
   30244:	ldrb	w9, [sp, #552]
   30248:	tst	w9, #0xc
   3024c:	b.eq	30140 <PyInit__decimal@@Base+0x2968c>  // b.none
   30250:	ldur	w9, [x29, #-112]
   30254:	ldrb	w8, [x19]
   30258:	mov	w10, #0x3be                 	// #958
   3025c:	and	w23, w9, w10
   30260:	tbnz	w8, #5, 302a4 <PyInit__decimal@@Base+0x297f0>
   30264:	adrp	x24, 53000 <PyInit__decimal@@Base+0x4c54c>
   30268:	ldr	x9, [x19, #32]
   3026c:	ldr	x1, [x24, #1344]
   30270:	cmp	x9, x1
   30274:	b.le	302a4 <PyInit__decimal@@Base+0x297f0>
   30278:	sturb	wzr, [x29, #-108]
   3027c:	ldr	x0, [x19, #40]
   30280:	sub	x3, x29, #0x6c
   30284:	mov	w2, #0x8                   	// #8
   30288:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   3028c:	str	x0, [x19, #40]
   30290:	ldurb	w8, [x29, #-108]
   30294:	cbnz	w8, 302a0 <PyInit__decimal@@Base+0x297ec>
   30298:	ldr	x8, [x24, #1344]
   3029c:	str	x8, [x19, #32]
   302a0:	ldrb	w8, [x19]
   302a4:	and	w8, w8, #0xf0
   302a8:	orr	w8, w8, #0x4
   302ac:	stp	xzr, xzr, [x19, #16]
   302b0:	strb	w8, [x19]
   302b4:	str	xzr, [x19, #8]
   302b8:	ldr	w9, [x20]
   302bc:	orr	w9, w9, w23
   302c0:	str	w9, [x20]
   302c4:	b	302d8 <PyInit__decimal@@Base+0x29824>
   302c8:	ldrb	w8, [x19]
   302cc:	and	w8, w8, #0xfe
   302d0:	orr	w8, w8, w22
   302d4:	strb	w8, [x19]
   302d8:	tbz	w8, #1, 30354 <PyInit__decimal@@Base+0x298a0>
   302dc:	mov	x3, #0x1                   	// #1
   302e0:	movk	x3, #0x4ec8, lsl #16
   302e4:	movk	x3, #0x6d67, lsl #32
   302e8:	mov	w2, #0x1                   	// #1
   302ec:	movk	x3, #0x1bc1, lsl #48
   302f0:	mov	x0, x19
   302f4:	mov	w1, w22
   302f8:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   302fc:	b	30354 <PyInit__decimal@@Base+0x298a0>
   30300:	ldrb	w8, [x19]
   30304:	tbnz	w8, #5, 30340 <PyInit__decimal@@Base+0x2988c>
   30308:	ldr	x9, [x19, #32]
   3030c:	ldr	x1, [x24, #1344]
   30310:	cmp	x9, x1
   30314:	b.le	30340 <PyInit__decimal@@Base+0x2988c>
   30318:	sturb	wzr, [x29, #-56]
   3031c:	ldr	x0, [x19, #40]
   30320:	sub	x3, x29, #0x38
   30324:	mov	w2, #0x8                   	// #8
   30328:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   3032c:	str	x0, [x19, #40]
   30330:	ldurb	w8, [x29, #-56]
   30334:	cbnz	w8, 2fd24 <PyInit__decimal@@Base+0x29270>
   30338:	ldr	x8, [x24, #1344]
   3033c:	b	2fd20 <PyInit__decimal@@Base+0x2926c>
   30340:	and	w8, w8, #0xf0
   30344:	orr	w8, w8, #0x4
   30348:	stp	xzr, xzr, [x19, #16]
   3034c:	strb	w8, [x19]
   30350:	str	xzr, [x19, #8]
   30354:	ldurb	w8, [x29, #-216]
   30358:	cmp	w8, #0x1f
   3035c:	b.hi	30374 <PyInit__decimal@@Base+0x298c0>  // b.pmore
   30360:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   30364:	ldr	x8, [x8, #1376]
   30368:	ldur	x0, [x29, #-176]
   3036c:	blr	x8
   30370:	ldurb	w8, [x29, #-216]
   30374:	tbnz	w8, #4, 30388 <PyInit__decimal@@Base+0x298d4>
   30378:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   3037c:	ldr	x8, [x8, #1376]
   30380:	sub	x0, x29, #0xd8
   30384:	blr	x8
   30388:	ldrb	w8, [sp, #552]
   3038c:	cmp	w8, #0x1f
   30390:	b.hi	303a8 <PyInit__decimal@@Base+0x298f4>  // b.pmore
   30394:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   30398:	ldr	x8, [x8, #1376]
   3039c:	ldr	x0, [sp, #592]
   303a0:	blr	x8
   303a4:	ldrb	w8, [sp, #552]
   303a8:	tbnz	w8, #4, 303bc <PyInit__decimal@@Base+0x29908>
   303ac:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   303b0:	ldr	x8, [x8, #1376]
   303b4:	add	x0, sp, #0x228
   303b8:	blr	x8
   303bc:	mov	x0, x19
   303c0:	mov	x1, x21
   303c4:	mov	x2, x20
   303c8:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   303cc:	b	2f894 <PyInit__decimal@@Base+0x28de0>
   303d0:	stp	x29, x30, [sp, #-96]!
   303d4:	stp	x28, x27, [sp, #16]
   303d8:	stp	x26, x25, [sp, #32]
   303dc:	stp	x24, x23, [sp, #48]
   303e0:	stp	x22, x21, [sp, #64]
   303e4:	stp	x20, x19, [sp, #80]
   303e8:	mov	x29, sp
   303ec:	sub	sp, sp, #0x9b0
   303f0:	add	x10, sp, #0x740
   303f4:	str	x10, [sp, #1848]
   303f8:	add	x10, sp, #0x510
   303fc:	str	x10, [sp, #1288]
   30400:	add	x10, sp, #0x2e0
   30404:	str	x10, [sp, #728]
   30408:	add	x10, sp, #0xb0
   3040c:	str	x10, [sp, #168]
   30410:	mov	w10, #0x1                   	// #1
   30414:	dup	v0.2d, x10
   30418:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3154c>
   3041c:	stur	q0, [sp, #96]
   30420:	ldr	q0, [x10, #3296]
   30424:	mov	w8, #0x30                  	// #48
   30428:	mov	w9, #0x40                  	// #64
   3042c:	strb	w8, [sp, #1808]
   30430:	strb	w8, [sp, #1248]
   30434:	strb	w8, [sp, #688]
   30438:	strb	w8, [sp, #128]
   3043c:	mov	w8, #0x2                   	// #2
   30440:	str	x9, [sp, #1840]
   30444:	str	x9, [sp, #1280]
   30448:	str	x9, [sp, #720]
   3044c:	stp	xzr, x9, [sp, #152]
   30450:	mov	w9, #0x90                  	// #144
   30454:	add	x10, sp, #0x78
   30458:	str	xzr, [sp, #1816]
   3045c:	str	xzr, [sp, #1824]
   30460:	str	xzr, [sp, #1256]
   30464:	str	xzr, [sp, #1264]
   30468:	str	xzr, [sp, #696]
   3046c:	str	xzr, [sp, #704]
   30470:	stp	xzr, xzr, [sp, #136]
   30474:	str	xzr, [sp, #1832]
   30478:	str	xzr, [sp, #1272]
   3047c:	str	xzr, [sp, #712]
   30480:	stp	x10, x8, [sp, #112]
   30484:	strb	w9, [sp, #72]
   30488:	stur	q0, [sp, #80]
   3048c:	ldrb	w10, [x1]
   30490:	ldrb	w8, [x2]
   30494:	mov	x20, x5
   30498:	mov	x21, x4
   3049c:	mov	x24, x3
   304a0:	orr	w9, w10, w8
   304a4:	mov	x23, x2
   304a8:	mov	x22, x1
   304ac:	tst	w9, #0xe
   304b0:	mov	x19, x0
   304b4:	b.ne	304c4 <PyInit__decimal@@Base+0x29a10>  // b.any
   304b8:	ldrb	w9, [x24]
   304bc:	tst	w9, #0xe
   304c0:	b.eq	30504 <PyInit__decimal@@Base+0x29a50>  // b.none
   304c4:	ldrb	w9, [x24]
   304c8:	orr	w11, w8, w10
   304cc:	orr	w11, w11, w9
   304d0:	tst	w11, #0xc
   304d4:	b.eq	308f8 <PyInit__decimal@@Base+0x29e44>  // b.none
   304d8:	tbnz	w10, #3, 304fc <PyInit__decimal@@Base+0x29a48>
   304dc:	tbnz	w8, #3, 30544 <PyInit__decimal@@Base+0x29a90>
   304e0:	tbnz	w9, #3, 30560 <PyInit__decimal@@Base+0x29aac>
   304e4:	tbnz	w10, #2, 30554 <PyInit__decimal@@Base+0x29aa0>
   304e8:	tst	w8, #0x4
   304ec:	csel	x22, x24, x23, eq  // eq = none
   304f0:	cmp	x22, x19
   304f4:	b.ne	30578 <PyInit__decimal@@Base+0x29ac4>  // b.any
   304f8:	b	30600 <PyInit__decimal@@Base+0x29b4c>
   304fc:	ldr	w8, [x20]
   30500:	b	30568 <PyInit__decimal@@Base+0x29ab4>
   30504:	ldr	x12, [x22, #40]
   30508:	ldr	x13, [x22, #24]
   3050c:	add	x9, x12, x13, lsl #3
   30510:	ldur	x9, [x9, #-8]
   30514:	cbz	x9, 30674 <PyInit__decimal@@Base+0x29bc0>
   30518:	cmp	x13, #0x1
   3051c:	b.lt	3053c <PyInit__decimal@@Base+0x29a88>  // b.tstop
   30520:	mov	x11, xzr
   30524:	ldr	x14, [x12]
   30528:	cbnz	x14, 30620 <PyInit__decimal@@Base+0x29b6c>
   3052c:	add	x11, x11, #0x13
   30530:	subs	x13, x13, #0x1
   30534:	add	x12, x12, #0x8
   30538:	b.ne	30524 <PyInit__decimal@@Base+0x29a70>  // b.any
   3053c:	mov	x11, xzr
   30540:	b	30668 <PyInit__decimal@@Base+0x29bb4>
   30544:	ldr	w8, [x20]
   30548:	mov	x22, x23
   3054c:	orr	w8, w8, #0x100
   30550:	str	w8, [x20]
   30554:	cmp	x22, x19
   30558:	b.ne	30578 <PyInit__decimal@@Base+0x29ac4>  // b.any
   3055c:	b	30600 <PyInit__decimal@@Base+0x29b4c>
   30560:	ldr	w8, [x20]
   30564:	mov	x22, x24
   30568:	orr	w8, w8, #0x100
   3056c:	str	w8, [x20]
   30570:	cmp	x22, x19
   30574:	b.eq	30600 <PyInit__decimal@@Base+0x29b4c>  // b.none
   30578:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   3057c:	ldr	x8, [x22, #24]
   30580:	ldr	x10, [x9, #1344]
   30584:	ldr	x9, [x19, #32]
   30588:	cmp	x10, x8
   3058c:	csel	x1, x8, x10, lt  // lt = tstop
   30590:	cmp	x1, x9
   30594:	b.eq	305d0 <PyInit__decimal@@Base+0x29b1c>  // b.none
   30598:	ldrb	w10, [x19]
   3059c:	tbnz	w10, #5, 305b4 <PyInit__decimal@@Base+0x29b00>
   305a0:	mov	x0, x19
   305a4:	mov	x2, x20
   305a8:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   305ac:	cbnz	w0, 305cc <PyInit__decimal@@Base+0x29b18>
   305b0:	b	30600 <PyInit__decimal@@Base+0x29b4c>
   305b4:	cmp	x1, x9
   305b8:	b.le	305d0 <PyInit__decimal@@Base+0x29b1c>
   305bc:	mov	x0, x19
   305c0:	mov	x2, x20
   305c4:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   305c8:	cbz	w0, 30600 <PyInit__decimal@@Base+0x29b4c>
   305cc:	ldr	x8, [x22, #24]
   305d0:	ldrb	w9, [x22]
   305d4:	ldrb	w10, [x19]
   305d8:	ldr	x0, [x19, #40]
   305dc:	bfxil	w10, w9, #0, #4
   305e0:	strb	w10, [x19]
   305e4:	ldur	q0, [x22, #8]
   305e8:	str	x8, [x19, #24]
   305ec:	stur	q0, [x19, #8]
   305f0:	ldr	x8, [x22, #24]
   305f4:	ldr	x1, [x22, #40]
   305f8:	lsl	x2, x8, #3
   305fc:	bl	63c0 <memcpy@plt>
   30600:	ldrb	w8, [x19]
   30604:	mov	x0, x19
   30608:	mov	x1, x21
   3060c:	and	w8, w8, #0xfffffff1
   30610:	orr	w8, w8, #0x4
   30614:	strb	w8, [x19]
   30618:	bl	22944 <PyInit__decimal@@Base+0x1be90>
   3061c:	b	30960 <PyInit__decimal@@Base+0x29eac>
   30620:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
   30624:	movk	x12, #0xcccd
   30628:	mul	x13, x14, x12
   3062c:	mov	x15, #0x9999999999999999    	// #-7378697629483820647
   30630:	ror	x13, x13, #1
   30634:	movk	x15, #0x1999, lsl #48
   30638:	cmp	x13, x15
   3063c:	b.hi	30668 <PyInit__decimal@@Base+0x29bb4>  // b.pmore
   30640:	mov	x13, #0x9999999999999999    	// #-7378697629483820647
   30644:	movk	x13, #0x999a
   30648:	movk	x13, #0x1999, lsl #48
   3064c:	umulh	x14, x14, x12
   30650:	lsr	x14, x14, #3
   30654:	mul	x15, x14, x12
   30658:	ror	x15, x15, #1
   3065c:	cmp	x15, x13
   30660:	add	x11, x11, #0x1
   30664:	b.cc	3064c <PyInit__decimal@@Base+0x29b98>  // b.lo, b.ul, b.last
   30668:	ldr	x12, [x22, #8]
   3066c:	cmn	x12, x11
   30670:	b.mi	308f8 <PyInit__decimal@@Base+0x29e44>  // b.first
   30674:	ldr	x12, [x23, #40]
   30678:	ldr	x14, [x23, #24]
   3067c:	add	x11, x12, x14, lsl #3
   30680:	ldur	x11, [x11, #-8]
   30684:	cbz	x11, 3070c <PyInit__decimal@@Base+0x29c58>
   30688:	cmp	x14, #0x1
   3068c:	b.lt	306b0 <PyInit__decimal@@Base+0x29bfc>  // b.tstop
   30690:	mov	x13, xzr
   30694:	mov	x16, x12
   30698:	ldr	x15, [x16]
   3069c:	cbnz	x15, 306b8 <PyInit__decimal@@Base+0x29c04>
   306a0:	add	x13, x13, #0x13
   306a4:	subs	x14, x14, #0x1
   306a8:	add	x16, x16, #0x8
   306ac:	b.ne	30698 <PyInit__decimal@@Base+0x29be4>  // b.any
   306b0:	mov	x13, xzr
   306b4:	b	30700 <PyInit__decimal@@Base+0x29c4c>
   306b8:	mov	x14, #0xcccccccccccccccc    	// #-3689348814741910324
   306bc:	movk	x14, #0xcccd
   306c0:	mul	x16, x15, x14
   306c4:	mov	x17, #0x9999999999999999    	// #-7378697629483820647
   306c8:	ror	x16, x16, #1
   306cc:	movk	x17, #0x1999, lsl #48
   306d0:	cmp	x16, x17
   306d4:	b.hi	30700 <PyInit__decimal@@Base+0x29c4c>  // b.pmore
   306d8:	mov	x16, #0x9999999999999999    	// #-7378697629483820647
   306dc:	movk	x16, #0x999a
   306e0:	movk	x16, #0x1999, lsl #48
   306e4:	umulh	x15, x15, x14
   306e8:	lsr	x15, x15, #3
   306ec:	mul	x17, x15, x14
   306f0:	ror	x17, x17, #1
   306f4:	cmp	x17, x16
   306f8:	add	x13, x13, #0x1
   306fc:	b.cc	306e4 <PyInit__decimal@@Base+0x29c30>  // b.lo, b.ul, b.last
   30700:	ldr	x14, [x23, #8]
   30704:	cmn	x14, x13
   30708:	b.mi	308f8 <PyInit__decimal@@Base+0x29e44>  // b.first
   3070c:	ldr	x14, [x24, #40]
   30710:	ldr	x15, [x24, #24]
   30714:	add	x13, x14, x15, lsl #3
   30718:	ldur	x13, [x13, #-8]
   3071c:	cbz	x13, 308f8 <PyInit__decimal@@Base+0x29e44>
   30720:	cmp	x15, #0x1
   30724:	b.lt	30744 <PyInit__decimal@@Base+0x29c90>  // b.tstop
   30728:	mov	x13, xzr
   3072c:	ldr	x16, [x14]
   30730:	cbnz	x16, 3074c <PyInit__decimal@@Base+0x29c98>
   30734:	add	x13, x13, #0x13
   30738:	subs	x15, x15, #0x1
   3073c:	add	x14, x14, #0x8
   30740:	b.ne	3072c <PyInit__decimal@@Base+0x29c78>  // b.any
   30744:	mov	x13, xzr
   30748:	b	30794 <PyInit__decimal@@Base+0x29ce0>
   3074c:	mov	x14, #0xcccccccccccccccc    	// #-3689348814741910324
   30750:	movk	x14, #0xcccd
   30754:	mul	x15, x16, x14
   30758:	mov	x17, #0x9999999999999999    	// #-7378697629483820647
   3075c:	ror	x15, x15, #1
   30760:	movk	x17, #0x1999, lsl #48
   30764:	cmp	x15, x17
   30768:	b.hi	30794 <PyInit__decimal@@Base+0x29ce0>  // b.pmore
   3076c:	mov	x15, #0x9999999999999999    	// #-7378697629483820647
   30770:	movk	x15, #0x999a
   30774:	movk	x15, #0x1999, lsl #48
   30778:	umulh	x16, x16, x14
   3077c:	lsr	x16, x16, #3
   30780:	mul	x17, x16, x14
   30784:	ror	x17, x17, #1
   30788:	cmp	x17, x15
   3078c:	add	x13, x13, #0x1
   30790:	b.cc	30778 <PyInit__decimal@@Base+0x29cc4>  // b.lo, b.ul, b.last
   30794:	ldr	x14, [x24, #8]
   30798:	cmn	x14, x13
   3079c:	b.mi	308f8 <PyInit__decimal@@Base+0x29e44>  // b.first
   307a0:	ldr	x13, [x24, #16]
   307a4:	ldr	x15, [x21]
   307a8:	add	x13, x14, x13
   307ac:	cmp	x13, x15
   307b0:	b.gt	308f8 <PyInit__decimal@@Base+0x29e44>
   307b4:	mov	w21, wzr
   307b8:	tbz	w10, #0, 30820 <PyInit__decimal@@Base+0x29d6c>
   307bc:	cbz	x11, 30820 <PyInit__decimal@@Base+0x29d6c>
   307c0:	ldr	x10, [x23, #8]
   307c4:	tbnz	x10, #63, 307d4 <PyInit__decimal@@Base+0x29d20>
   307c8:	cbz	x10, 30818 <PyInit__decimal@@Base+0x29d64>
   307cc:	mov	w21, wzr
   307d0:	b	30820 <PyInit__decimal@@Base+0x29d6c>
   307d4:	mov	x14, #0x435f                	// #17247
   307d8:	movk	x14, #0xd79, lsl #16
   307dc:	movk	x14, #0x35e5, lsl #32
   307e0:	neg	x13, x10
   307e4:	movk	x14, #0xd794, lsl #48
   307e8:	umulh	x13, x13, x14
   307ec:	mov	x15, #0xffffffffffffffed    	// #-19
   307f0:	neg	x10, x10
   307f4:	lsr	x13, x13, #4
   307f8:	madd	x10, x13, x15, x10
   307fc:	ldr	x12, [x12, x13, lsl #3]
   30800:	adrp	x13, 3f000 <PyInit__decimal@@Base+0x3854c>
   30804:	add	x13, x13, #0x370
   30808:	ldr	x10, [x13, x10, lsl #3]
   3080c:	udiv	x10, x12, x10
   30810:	and	w21, w10, #0x1
   30814:	b	30820 <PyInit__decimal@@Base+0x29d6c>
   30818:	ldrb	w10, [x12]
   3081c:	and	w21, w10, #0x1
   30820:	cbz	x11, 308d0 <PyInit__decimal@@Base+0x29e1c>
   30824:	tbnz	w8, #0, 308f8 <PyInit__decimal@@Base+0x29e44>
   30828:	cbz	x9, 30980 <PyInit__decimal@@Base+0x29ecc>
   3082c:	sub	x0, x29, #0x70
   30830:	str	q0, [sp]
   30834:	sub	x25, x29, #0x70
   30838:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   3083c:	add	x4, x25, #0x1c
   30840:	add	x0, sp, #0x2b0
   30844:	sub	x3, x29, #0x70
   30848:	mov	x1, x24
   3084c:	mov	x2, xzr
   30850:	bl	32658 <PyInit__decimal@@Base+0x2bba4>
   30854:	ldur	w8, [x29, #-84]
   30858:	mov	w9, #0x3be                 	// #958
   3085c:	ands	w24, w8, w9
   30860:	b.eq	30998 <PyInit__decimal@@Base+0x29ee4>  // b.none
   30864:	ldrb	w8, [x19]
   30868:	tbnz	w8, #5, 308ac <PyInit__decimal@@Base+0x29df8>
   3086c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   30870:	ldr	x9, [x19, #32]
   30874:	ldr	x1, [x21, #1344]
   30878:	cmp	x9, x1
   3087c:	b.le	308ac <PyInit__decimal@@Base+0x29df8>
   30880:	sturb	wzr, [x29, #-64]
   30884:	ldr	x0, [x19, #40]
   30888:	sub	x3, x29, #0x40
   3088c:	mov	w2, #0x8                   	// #8
   30890:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   30894:	str	x0, [x19, #40]
   30898:	ldurb	w8, [x29, #-64]
   3089c:	cbnz	w8, 308a8 <PyInit__decimal@@Base+0x29df4>
   308a0:	ldr	x8, [x21, #1344]
   308a4:	str	x8, [x19, #32]
   308a8:	ldrb	w8, [x19]
   308ac:	and	w8, w8, #0xf0
   308b0:	orr	w8, w8, #0x4
   308b4:	stp	xzr, xzr, [x19, #16]
   308b8:	strb	w8, [x19]
   308bc:	str	xzr, [x19, #8]
   308c0:	ldr	w8, [x20]
   308c4:	orr	w8, w8, w24
   308c8:	str	w8, [x20]
   308cc:	b	30ea0 <PyInit__decimal@@Base+0x2a3ec>
   308d0:	cbz	x9, 308f8 <PyInit__decimal@@Base+0x29e44>
   308d4:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   308d8:	add	x1, x1, #0xc88
   308dc:	mov	x0, x24
   308e0:	bl	23a80 <PyInit__decimal@@Base+0x1cfcc>
   308e4:	cmp	w0, #0x0
   308e8:	cset	w2, ne  // ne = any
   308ec:	mov	x0, x19
   308f0:	mov	w1, w21
   308f4:	b	3098c <PyInit__decimal@@Base+0x29ed8>
   308f8:	ldrb	w8, [x19]
   308fc:	tbnz	w8, #5, 30940 <PyInit__decimal@@Base+0x29e8c>
   30900:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   30904:	ldr	x9, [x19, #32]
   30908:	ldr	x1, [x21, #1344]
   3090c:	cmp	x9, x1
   30910:	b.le	30940 <PyInit__decimal@@Base+0x29e8c>
   30914:	sturb	wzr, [x29, #-64]
   30918:	ldr	x0, [x19, #40]
   3091c:	sub	x3, x29, #0x40
   30920:	mov	w2, #0x8                   	// #8
   30924:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   30928:	str	x0, [x19, #40]
   3092c:	ldurb	w8, [x29, #-64]
   30930:	cbnz	w8, 3093c <PyInit__decimal@@Base+0x29e88>
   30934:	ldr	x8, [x21, #1344]
   30938:	str	x8, [x19, #32]
   3093c:	ldrb	w8, [x19]
   30940:	and	w8, w8, #0xf0
   30944:	orr	w8, w8, #0x4
   30948:	stp	xzr, xzr, [x19, #16]
   3094c:	strb	w8, [x19]
   30950:	str	xzr, [x19, #8]
   30954:	ldr	w8, [x20]
   30958:	orr	w8, w8, #0x100
   3095c:	str	w8, [x20]
   30960:	add	sp, sp, #0x9b0
   30964:	ldp	x20, x19, [sp, #80]
   30968:	ldp	x22, x21, [sp, #64]
   3096c:	ldp	x24, x23, [sp, #48]
   30970:	ldp	x26, x25, [sp, #32]
   30974:	ldp	x28, x27, [sp, #16]
   30978:	ldp	x29, x30, [sp], #96
   3097c:	ret
   30980:	mov	x0, x19
   30984:	mov	w1, w21
   30988:	mov	x2, xzr
   3098c:	mov	x3, xzr
   30990:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   30994:	b	30960 <PyInit__decimal@@Base+0x29eac>
   30998:	ldrb	w8, [sp, #688]
   3099c:	add	x9, sp, #0x710
   309a0:	add	x1, sp, #0x710
   309a4:	sub	x3, x29, #0x70
   309a8:	and	w8, w8, #0xfe
   309ac:	mov	w0, #0x1                   	// #1
   309b0:	mov	x2, x22
   309b4:	mov	x4, x20
   309b8:	add	x25, x9, #0x8
   309bc:	stur	wzr, [x29, #-84]
   309c0:	strb	w8, [sp, #688]
   309c4:	bl	32c34 <PyInit__decimal@@Base+0x2c180>
   309c8:	ldrb	w8, [sp, #1808]
   309cc:	ldr	x24, [sp, #1816]
   309d0:	add	x1, sp, #0x4e0
   309d4:	sub	x3, x29, #0x70
   309d8:	and	w8, w8, #0xfe
   309dc:	mov	w0, #0x1                   	// #1
   309e0:	mov	x2, x23
   309e4:	mov	x4, x20
   309e8:	strb	w8, [sp, #1808]
   309ec:	str	xzr, [sp, #1816]
   309f0:	bl	32c34 <PyInit__decimal@@Base+0x2c180>
   309f4:	ldr	x23, [sp, #1256]
   309f8:	add	x0, sp, #0x710
   309fc:	add	x1, sp, #0x710
   30a00:	add	x2, sp, #0x2b0
   30a04:	sub	x3, x29, #0x70
   30a08:	mov	x4, x20
   30a0c:	str	xzr, [sp, #1256]
   30a10:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
   30a14:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   30a18:	add	x1, x1, #0xc88
   30a1c:	mov	x0, x19
   30a20:	mov	x2, x24
   30a24:	mov	x3, x20
   30a28:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   30a2c:	add	x2, sp, #0x2b0
   30a30:	sub	x3, x29, #0x70
   30a34:	mov	x0, x19
   30a38:	mov	x1, x19
   30a3c:	mov	x4, x20
   30a40:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
   30a44:	add	x0, sp, #0x710
   30a48:	add	x1, sp, #0x710
   30a4c:	sub	x3, x29, #0x70
   30a50:	sub	x4, x29, #0x40
   30a54:	mov	x2, x19
   30a58:	stur	wzr, [x29, #-64]
   30a5c:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   30a60:	add	x0, sp, #0x710
   30a64:	sub	x1, x29, #0x70
   30a68:	sub	x2, x29, #0x40
   30a6c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   30a70:	ldur	w9, [x29, #-64]
   30a74:	ldr	w8, [x20]
   30a78:	mov	w10, #0x1041                	// #4161
   30a7c:	tst	w9, w10
   30a80:	orr	w8, w8, w9
   30a84:	str	w8, [x20]
   30a88:	b.eq	30af4 <PyInit__decimal@@Base+0x2a040>  // b.none
   30a8c:	ldrb	w9, [sp, #1808]
   30a90:	tbnz	w9, #5, 30ad8 <PyInit__decimal@@Base+0x2a024>
   30a94:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   30a98:	ldr	x10, [sp, #1840]
   30a9c:	ldr	x1, [x22, #1344]
   30aa0:	cmp	x10, x1
   30aa4:	b.le	30ad8 <PyInit__decimal@@Base+0x2a024>
   30aa8:	ldr	x0, [sp, #1848]
   30aac:	add	x3, sp, #0x10
   30ab0:	mov	w2, #0x8                   	// #8
   30ab4:	strb	wzr, [sp, #16]
   30ab8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   30abc:	ldrb	w8, [sp, #16]
   30ac0:	str	x0, [sp, #1848]
   30ac4:	cbnz	w8, 30ad0 <PyInit__decimal@@Base+0x2a01c>
   30ac8:	ldr	x8, [x22, #1344]
   30acc:	str	x8, [sp, #1840]
   30ad0:	ldrb	w9, [sp, #1808]
   30ad4:	ldr	w8, [x20]
   30ad8:	and	w9, w9, #0xf0
   30adc:	orr	w8, w8, #0x100
   30ae0:	orr	w9, w9, #0x4
   30ae4:	strb	w9, [sp, #1808]
   30ae8:	stp	xzr, xzr, [x25]
   30aec:	str	xzr, [x25, #16]
   30af0:	str	w8, [x20]
   30af4:	add	x0, sp, #0x710
   30af8:	add	x1, sp, #0x710
   30afc:	add	x2, sp, #0x2b0
   30b00:	sub	x3, x29, #0x70
   30b04:	mov	x4, x20
   30b08:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
   30b0c:	ldrb	w8, [sp, #1808]
   30b10:	tst	w8, #0xe
   30b14:	b.ne	30e44 <PyInit__decimal@@Base+0x2a390>  // b.any
   30b18:	ldrb	w9, [sp, #1248]
   30b1c:	tst	w9, #0xe
   30b20:	b.ne	30e44 <PyInit__decimal@@Base+0x2a390>  // b.any
   30b24:	ldrb	w9, [sp, #688]
   30b28:	tst	w9, #0xe
   30b2c:	b.ne	30e44 <PyInit__decimal@@Base+0x2a390>  // b.any
   30b30:	cmp	x23, #0x1
   30b34:	b.lt	30da8 <PyInit__decimal@@Base+0x2a2f4>  // b.tstop
   30b38:	add	x8, sp, #0x80
   30b3c:	mov	x24, xzr
   30b40:	adrp	x26, 53000 <PyInit__decimal@@Base+0x4c54c>
   30b44:	add	x27, x8, #0x8
   30b48:	mov	w28, #0x1041                	// #4161
   30b4c:	b	30b8c <PyInit__decimal@@Base+0x2a0d8>
   30b50:	ldr	q0, [sp, #1808]
   30b54:	ldr	q1, [sp, #1824]
   30b58:	ldp	q2, q3, [sp, #128]
   30b5c:	add	x24, x24, #0x1
   30b60:	cmp	x24, x23
   30b64:	stp	q0, q1, [sp, #128]
   30b68:	ldr	q0, [sp, #160]
   30b6c:	ldr	q1, [sp, #1840]
   30b70:	stp	q2, q3, [sp, #16]
   30b74:	str	q2, [sp, #1808]
   30b78:	str	q0, [sp, #48]
   30b7c:	str	q1, [sp, #160]
   30b80:	str	q3, [sp, #1824]
   30b84:	str	q0, [sp, #1840]
   30b88:	b.eq	30da4 <PyInit__decimal@@Base+0x2a2f0>  // b.none
   30b8c:	sub	x0, x29, #0x40
   30b90:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   30b94:	ldr	x9, [x26, #1344]
   30b98:	ldr	x8, [sp, #160]
   30b9c:	ldr	q0, [sp]
   30ba0:	cmp	x9, #0x1
   30ba4:	csinc	x1, x9, xzr, gt
   30ba8:	cmp	x1, x8
   30bac:	b.eq	30be4 <PyInit__decimal@@Base+0x2a130>  // b.none
   30bb0:	ldrb	w9, [sp, #128]
   30bb4:	tbnz	w9, #5, 30bc8 <PyInit__decimal@@Base+0x2a114>
   30bb8:	add	x0, sp, #0x80
   30bbc:	mov	x2, x20
   30bc0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   30bc4:	b	30bdc <PyInit__decimal@@Base+0x2a128>
   30bc8:	cmp	x1, x8
   30bcc:	b.le	30be4 <PyInit__decimal@@Base+0x2a130>
   30bd0:	add	x0, sp, #0x80
   30bd4:	mov	x2, x20
   30bd8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   30bdc:	ldr	q0, [sp]
   30be0:	cbz	w0, 30c0c <PyInit__decimal@@Base+0x2a158>
   30be4:	ldrb	w8, [sp, #128]
   30be8:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   30bec:	ldr	x9, [sp, #168]
   30bf0:	ldr	x10, [x10, #1384]
   30bf4:	mov	w11, #0x1                   	// #1
   30bf8:	and	w8, w8, #0xf0
   30bfc:	stur	q0, [sp, #136]
   30c00:	str	x11, [sp, #152]
   30c04:	strb	w8, [sp, #128]
   30c08:	str	x10, [x9]
   30c0c:	mov	w22, #0xa                   	// #10
   30c10:	b	30c58 <PyInit__decimal@@Base+0x2a1a4>
   30c14:	ldrb	w9, [sp, #1808]
   30c18:	ldr	w8, [x20]
   30c1c:	and	w9, w9, #0xf0
   30c20:	orr	w8, w8, #0x100
   30c24:	orr	w9, w9, #0x4
   30c28:	strb	w9, [sp, #1808]
   30c2c:	stp	xzr, xzr, [x25]
   30c30:	str	xzr, [x25, #16]
   30c34:	str	w8, [x20]
   30c38:	add	x0, sp, #0x710
   30c3c:	add	x1, sp, #0x710
   30c40:	add	x2, sp, #0x2b0
   30c44:	sub	x3, x29, #0x40
   30c48:	mov	x4, x20
   30c4c:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
   30c50:	lsr	x22, x22, #1
   30c54:	cbz	x22, 30b50 <PyInit__decimal@@Base+0x2a09c>
   30c58:	tbz	w22, #0, 30d1c <PyInit__decimal@@Base+0x2a268>
   30c5c:	add	x0, sp, #0x80
   30c60:	add	x1, sp, #0x80
   30c64:	add	x2, sp, #0x710
   30c68:	sub	x3, x29, #0x40
   30c6c:	sub	x4, x29, #0x10
   30c70:	stur	wzr, [x29, #-16]
   30c74:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   30c78:	add	x0, sp, #0x80
   30c7c:	sub	x1, x29, #0x40
   30c80:	sub	x2, x29, #0x10
   30c84:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   30c88:	ldur	w9, [x29, #-16]
   30c8c:	ldr	w8, [x20]
   30c90:	tst	w9, w28
   30c94:	orr	w8, w8, w9
   30c98:	str	w8, [x20]
   30c9c:	b.eq	30d04 <PyInit__decimal@@Base+0x2a250>  // b.none
   30ca0:	ldrb	w9, [sp, #128]
   30ca4:	tbnz	w9, #5, 30ce8 <PyInit__decimal@@Base+0x2a234>
   30ca8:	ldr	x10, [sp, #160]
   30cac:	ldr	x1, [x26, #1344]
   30cb0:	cmp	x10, x1
   30cb4:	b.le	30ce8 <PyInit__decimal@@Base+0x2a234>
   30cb8:	ldr	x0, [sp, #168]
   30cbc:	sub	x3, x29, #0xc
   30cc0:	mov	w2, #0x8                   	// #8
   30cc4:	sturb	wzr, [x29, #-12]
   30cc8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   30ccc:	ldurb	w8, [x29, #-12]
   30cd0:	str	x0, [sp, #168]
   30cd4:	cbnz	w8, 30ce0 <PyInit__decimal@@Base+0x2a22c>
   30cd8:	ldr	x8, [x26, #1344]
   30cdc:	str	x8, [sp, #160]
   30ce0:	ldrb	w9, [sp, #128]
   30ce4:	ldr	w8, [x20]
   30ce8:	and	w9, w9, #0xf0
   30cec:	orr	w8, w8, #0x100
   30cf0:	orr	w9, w9, #0x4
   30cf4:	strb	w9, [sp, #128]
   30cf8:	stp	xzr, xzr, [x27]
   30cfc:	str	xzr, [x27, #16]
   30d00:	str	w8, [x20]
   30d04:	add	x0, sp, #0x80
   30d08:	add	x1, sp, #0x80
   30d0c:	add	x2, sp, #0x2b0
   30d10:	sub	x3, x29, #0x40
   30d14:	mov	x4, x20
   30d18:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
   30d1c:	add	x0, sp, #0x710
   30d20:	add	x1, sp, #0x710
   30d24:	add	x2, sp, #0x710
   30d28:	sub	x3, x29, #0x40
   30d2c:	sub	x4, x29, #0x10
   30d30:	stur	wzr, [x29, #-16]
   30d34:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   30d38:	add	x0, sp, #0x710
   30d3c:	sub	x1, x29, #0x40
   30d40:	sub	x2, x29, #0x10
   30d44:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   30d48:	ldur	w9, [x29, #-16]
   30d4c:	ldr	w8, [x20]
   30d50:	tst	w9, w28
   30d54:	orr	w8, w8, w9
   30d58:	str	w8, [x20]
   30d5c:	b.eq	30c38 <PyInit__decimal@@Base+0x2a184>  // b.none
   30d60:	ldrb	w9, [sp, #1808]
   30d64:	tbnz	w9, #5, 30c1c <PyInit__decimal@@Base+0x2a168>
   30d68:	ldr	x10, [sp, #1840]
   30d6c:	ldr	x1, [x26, #1344]
   30d70:	cmp	x10, x1
   30d74:	b.le	30c1c <PyInit__decimal@@Base+0x2a168>
   30d78:	ldr	x0, [sp, #1848]
   30d7c:	sub	x3, x29, #0xc
   30d80:	mov	w2, #0x8                   	// #8
   30d84:	sturb	wzr, [x29, #-12]
   30d88:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   30d8c:	ldurb	w8, [x29, #-12]
   30d90:	str	x0, [sp, #1848]
   30d94:	cbnz	w8, 30c14 <PyInit__decimal@@Base+0x2a160>
   30d98:	ldr	x8, [x26, #1344]
   30d9c:	str	x8, [sp, #1840]
   30da0:	b	30c14 <PyInit__decimal@@Base+0x2a160>
   30da4:	ldrb	w8, [sp, #1808]
   30da8:	tst	w8, #0xe
   30dac:	adrp	x8, 50000 <PyInit__decimal@@Base+0x4954c>
   30db0:	add	x8, x8, #0xc88
   30db4:	b.ne	30e44 <PyInit__decimal@@Base+0x2a390>  // b.any
   30db8:	cmp	x19, x8
   30dbc:	b.eq	30e38 <PyInit__decimal@@Base+0x2a384>  // b.none
   30dc0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   30dc4:	ldr	x9, [x8, #1344]
   30dc8:	ldr	x8, [x19, #32]
   30dcc:	cmp	x9, #0x1
   30dd0:	csinc	x1, x9, xzr, gt
   30dd4:	cmp	x1, x8
   30dd8:	b.eq	30e0c <PyInit__decimal@@Base+0x2a358>  // b.none
   30ddc:	ldrb	w9, [x19]
   30de0:	tbnz	w9, #5, 30df4 <PyInit__decimal@@Base+0x2a340>
   30de4:	mov	x0, x19
   30de8:	mov	x2, x20
   30dec:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   30df0:	b	30e08 <PyInit__decimal@@Base+0x2a354>
   30df4:	cmp	x1, x8
   30df8:	b.le	30e0c <PyInit__decimal@@Base+0x2a358>
   30dfc:	mov	x0, x19
   30e00:	mov	x2, x20
   30e04:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   30e08:	cbz	w0, 30e38 <PyInit__decimal@@Base+0x2a384>
   30e0c:	ldrb	w8, [x19]
   30e10:	ldr	q0, [sp]
   30e14:	mov	w9, #0x1                   	// #1
   30e18:	str	x9, [x19, #24]
   30e1c:	and	w8, w8, #0xf0
   30e20:	stur	q0, [x19, #8]
   30e24:	strb	w8, [x19]
   30e28:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   30e2c:	ldr	x10, [x19, #40]
   30e30:	ldr	x8, [x8, #1384]
   30e34:	str	x8, [x10]
   30e38:	ldrb	w8, [sp, #1248]
   30e3c:	tst	w8, #0xe
   30e40:	b.eq	30f58 <PyInit__decimal@@Base+0x2a4a4>  // b.none
   30e44:	ldrb	w8, [x19]
   30e48:	tbnz	w8, #5, 30e8c <PyInit__decimal@@Base+0x2a3d8>
   30e4c:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   30e50:	ldr	x9, [x19, #32]
   30e54:	ldr	x1, [x20, #1344]
   30e58:	cmp	x9, x1
   30e5c:	b.le	30e8c <PyInit__decimal@@Base+0x2a3d8>
   30e60:	sturb	wzr, [x29, #-64]
   30e64:	ldr	x0, [x19, #40]
   30e68:	sub	x3, x29, #0x40
   30e6c:	mov	w2, #0x8                   	// #8
   30e70:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   30e74:	str	x0, [x19, #40]
   30e78:	ldurb	w8, [x29, #-64]
   30e7c:	cbnz	w8, 30e88 <PyInit__decimal@@Base+0x2a3d4>
   30e80:	ldr	x8, [x20, #1344]
   30e84:	str	x8, [x19, #32]
   30e88:	ldrb	w8, [x19]
   30e8c:	and	w8, w8, #0xf0
   30e90:	orr	w8, w8, #0x4
   30e94:	stp	xzr, xzr, [x19, #16]
   30e98:	strb	w8, [x19]
   30e9c:	str	xzr, [x19, #8]
   30ea0:	ldrb	w8, [sp, #1808]
   30ea4:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   30ea8:	cmp	w8, #0x1f
   30eac:	b.hi	30ec0 <PyInit__decimal@@Base+0x2a40c>  // b.pmore
   30eb0:	ldr	x8, [x19, #1376]
   30eb4:	ldr	x0, [sp, #1848]
   30eb8:	blr	x8
   30ebc:	ldrb	w8, [sp, #1808]
   30ec0:	tbnz	w8, #4, 30ed0 <PyInit__decimal@@Base+0x2a41c>
   30ec4:	ldr	x8, [x19, #1376]
   30ec8:	add	x0, sp, #0x710
   30ecc:	blr	x8
   30ed0:	ldrb	w8, [sp, #1248]
   30ed4:	cmp	w8, #0x1f
   30ed8:	b.hi	30eec <PyInit__decimal@@Base+0x2a438>  // b.pmore
   30edc:	ldr	x8, [x19, #1376]
   30ee0:	ldr	x0, [sp, #1288]
   30ee4:	blr	x8
   30ee8:	ldrb	w8, [sp, #1248]
   30eec:	tbnz	w8, #4, 30efc <PyInit__decimal@@Base+0x2a448>
   30ef0:	ldr	x8, [x19, #1376]
   30ef4:	add	x0, sp, #0x4e0
   30ef8:	blr	x8
   30efc:	ldrb	w8, [sp, #688]
   30f00:	cmp	w8, #0x1f
   30f04:	b.hi	30f18 <PyInit__decimal@@Base+0x2a464>  // b.pmore
   30f08:	ldr	x8, [x19, #1376]
   30f0c:	ldr	x0, [sp, #728]
   30f10:	blr	x8
   30f14:	ldrb	w8, [sp, #688]
   30f18:	tbnz	w8, #4, 30f28 <PyInit__decimal@@Base+0x2a474>
   30f1c:	ldr	x8, [x19, #1376]
   30f20:	add	x0, sp, #0x2b0
   30f24:	blr	x8
   30f28:	ldrb	w8, [sp, #128]
   30f2c:	cmp	w8, #0x1f
   30f30:	b.hi	30f44 <PyInit__decimal@@Base+0x2a490>  // b.pmore
   30f34:	ldr	x8, [x19, #1376]
   30f38:	ldr	x0, [sp, #168]
   30f3c:	blr	x8
   30f40:	ldrb	w8, [sp, #128]
   30f44:	tbnz	w8, #4, 30960 <PyInit__decimal@@Base+0x29eac>
   30f48:	ldr	x8, [x19, #1376]
   30f4c:	add	x0, sp, #0x80
   30f50:	blr	x8
   30f54:	b	30960 <PyInit__decimal@@Base+0x29eac>
   30f58:	mov	x23, #0x435f                	// #17247
   30f5c:	movk	x23, #0xd79, lsl #16
   30f60:	movk	x23, #0x35e5, lsl #32
   30f64:	adrp	x26, 3f000 <PyInit__decimal@@Base+0x3854c>
   30f68:	add	x22, x19, #0x8
   30f6c:	movk	x23, #0xd794, lsl #48
   30f70:	mov	x24, #0xffffffffffffffed    	// #-19
   30f74:	add	x26, x26, #0x370
   30f78:	mov	w27, #0x1041                	// #4161
   30f7c:	adrp	x28, 53000 <PyInit__decimal@@Base+0x4c54c>
   30f80:	b	30fe4 <PyInit__decimal@@Base+0x2a530>
   30f84:	ldrb	w9, [sp, #1808]
   30f88:	ldr	w8, [x20]
   30f8c:	and	w9, w9, #0xf0
   30f90:	orr	w8, w8, #0x100
   30f94:	orr	w9, w9, #0x4
   30f98:	strb	w9, [sp, #1808]
   30f9c:	stp	xzr, xzr, [x25]
   30fa0:	str	xzr, [x25, #16]
   30fa4:	str	w8, [x20]
   30fa8:	add	x0, sp, #0x710
   30fac:	add	x1, sp, #0x710
   30fb0:	add	x2, sp, #0x2b0
   30fb4:	sub	x3, x29, #0x70
   30fb8:	mov	x4, x20
   30fbc:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
   30fc0:	add	x0, sp, #0x4e0
   30fc4:	add	x1, sp, #0x4e0
   30fc8:	add	x2, sp, #0x48
   30fcc:	sub	x3, x29, #0x70
   30fd0:	mov	x4, x20
   30fd4:	bl	298f4 <PyInit__decimal@@Base+0x22e40>
   30fd8:	ldrb	w8, [sp, #1248]
   30fdc:	tst	w8, #0xe
   30fe0:	b.ne	30e44 <PyInit__decimal@@Base+0x2a390>  // b.any
   30fe4:	ldr	x8, [sp, #1288]
   30fe8:	ldr	x9, [sp, #1272]
   30fec:	add	x9, x8, x9, lsl #3
   30ff0:	ldur	x9, [x9, #-8]
   30ff4:	cbz	x9, 31178 <PyInit__decimal@@Base+0x2a6c4>
   30ff8:	ldr	x9, [sp, #1256]
   30ffc:	tbnz	x9, #63, 3100c <PyInit__decimal@@Base+0x2a558>
   31000:	cbnz	x9, 310f0 <PyInit__decimal@@Base+0x2a63c>
   31004:	ldr	x8, [x8]
   31008:	b	3102c <PyInit__decimal@@Base+0x2a578>
   3100c:	neg	x10, x9
   31010:	umulh	x10, x10, x23
   31014:	neg	x9, x9
   31018:	lsr	x10, x10, #4
   3101c:	madd	x9, x10, x24, x9
   31020:	ldr	x8, [x8, x10, lsl #3]
   31024:	ldr	x9, [x26, x9, lsl #3]
   31028:	udiv	x8, x8, x9
   3102c:	tbz	w8, #0, 310f0 <PyInit__decimal@@Base+0x2a63c>
   31030:	add	x2, sp, #0x710
   31034:	sub	x3, x29, #0x70
   31038:	sub	x4, x29, #0x40
   3103c:	mov	x0, x19
   31040:	mov	x1, x19
   31044:	stur	wzr, [x29, #-64]
   31048:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   3104c:	sub	x1, x29, #0x70
   31050:	sub	x2, x29, #0x40
   31054:	mov	x0, x19
   31058:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   3105c:	ldur	w8, [x29, #-64]
   31060:	ldr	w9, [x20]
   31064:	tst	w8, w27
   31068:	orr	w9, w9, w8
   3106c:	str	w9, [x20]
   31070:	b.eq	310d8 <PyInit__decimal@@Base+0x2a624>  // b.none
   31074:	ldrb	w8, [x19]
   31078:	tbnz	w8, #5, 310b8 <PyInit__decimal@@Base+0x2a604>
   3107c:	ldr	x9, [x19, #32]
   31080:	ldr	x1, [x28, #1344]
   31084:	cmp	x9, x1
   31088:	b.le	310b8 <PyInit__decimal@@Base+0x2a604>
   3108c:	sturb	wzr, [x29, #-16]
   31090:	ldr	x0, [x19, #40]
   31094:	sub	x3, x29, #0x10
   31098:	mov	w2, #0x8                   	// #8
   3109c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   310a0:	str	x0, [x19, #40]
   310a4:	ldurb	w8, [x29, #-16]
   310a8:	cbnz	w8, 310b4 <PyInit__decimal@@Base+0x2a600>
   310ac:	ldr	x8, [x28, #1344]
   310b0:	str	x8, [x19, #32]
   310b4:	ldrb	w8, [x19]
   310b8:	and	w8, w8, #0xf0
   310bc:	orr	w8, w8, #0x4
   310c0:	strb	w8, [x19]
   310c4:	stp	xzr, xzr, [x22]
   310c8:	str	xzr, [x22, #16]
   310cc:	ldr	w8, [x20]
   310d0:	orr	w8, w8, #0x100
   310d4:	str	w8, [x20]
   310d8:	add	x2, sp, #0x2b0
   310dc:	sub	x3, x29, #0x70
   310e0:	mov	x0, x19
   310e4:	mov	x1, x19
   310e8:	mov	x4, x20
   310ec:	bl	3129c <PyInit__decimal@@Base+0x2a7e8>
   310f0:	add	x0, sp, #0x710
   310f4:	add	x1, sp, #0x710
   310f8:	add	x2, sp, #0x710
   310fc:	sub	x3, x29, #0x70
   31100:	sub	x4, x29, #0x40
   31104:	stur	wzr, [x29, #-64]
   31108:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   3110c:	add	x0, sp, #0x710
   31110:	sub	x1, x29, #0x70
   31114:	sub	x2, x29, #0x40
   31118:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   3111c:	ldur	w9, [x29, #-64]
   31120:	ldr	w8, [x20]
   31124:	tst	w9, w27
   31128:	orr	w8, w8, w9
   3112c:	str	w8, [x20]
   31130:	b.eq	30fa8 <PyInit__decimal@@Base+0x2a4f4>  // b.none
   31134:	ldrb	w9, [sp, #1808]
   31138:	tbnz	w9, #5, 30f8c <PyInit__decimal@@Base+0x2a4d8>
   3113c:	ldr	x10, [sp, #1840]
   31140:	ldr	x1, [x28, #1344]
   31144:	cmp	x10, x1
   31148:	b.le	30f8c <PyInit__decimal@@Base+0x2a4d8>
   3114c:	ldr	x0, [sp, #1848]
   31150:	sub	x3, x29, #0x10
   31154:	mov	w2, #0x8                   	// #8
   31158:	sturb	wzr, [x29, #-16]
   3115c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   31160:	ldurb	w8, [x29, #-16]
   31164:	str	x0, [sp, #1848]
   31168:	cbnz	w8, 30f84 <PyInit__decimal@@Base+0x2a4d0>
   3116c:	ldr	x8, [x28, #1344]
   31170:	str	x8, [sp, #1840]
   31174:	b	30f84 <PyInit__decimal@@Base+0x2a4d0>
   31178:	ldrb	w8, [sp, #1808]
   3117c:	tst	w8, #0xe
   31180:	b.ne	30e44 <PyInit__decimal@@Base+0x2a390>  // b.any
   31184:	ldrb	w8, [sp, #688]
   31188:	tst	w8, #0xe
   3118c:	b.ne	30e44 <PyInit__decimal@@Base+0x2a390>  // b.any
   31190:	ldrb	w8, [x19]
   31194:	tst	w8, #0xe
   31198:	b.ne	30e44 <PyInit__decimal@@Base+0x2a390>  // b.any
   3119c:	and	w8, w8, #0xfe
   311a0:	orr	w8, w8, w21
   311a4:	strb	w8, [x19]
   311a8:	b	30ea0 <PyInit__decimal@@Base+0x2a3ec>
   311ac:	stp	x29, x30, [sp, #-48]!
   311b0:	str	x21, [sp, #16]
   311b4:	stp	x20, x19, [sp, #32]
   311b8:	mov	x29, sp
   311bc:	mov	x8, #0xfffd                	// #65533
   311c0:	movk	x8, #0x4ec7, lsl #16
   311c4:	mov	x9, #0xfffe                	// #65534
   311c8:	movk	x8, #0x6d67, lsl #32
   311cc:	movk	x9, #0xf62b, lsl #16
   311d0:	movk	x8, #0x1bc1, lsl #48
   311d4:	movk	x9, #0x241a, lsl #32
   311d8:	add	x8, x2, x8
   311dc:	movk	x9, #0x29a2, lsl #48
   311e0:	mov	x19, x4
   311e4:	cmp	x8, x9
   311e8:	mov	x20, x0
   311ec:	b.cc	31268 <PyInit__decimal@@Base+0x2a7b4>  // b.lo, b.ul, b.last
   311f0:	ldrb	w8, [x20]
   311f4:	tbnz	w8, #5, 31238 <PyInit__decimal@@Base+0x2a784>
   311f8:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   311fc:	ldr	x9, [x20, #32]
   31200:	ldr	x1, [x21, #1344]
   31204:	cmp	x9, x1
   31208:	b.le	31238 <PyInit__decimal@@Base+0x2a784>
   3120c:	strb	wzr, [x29, #28]
   31210:	ldr	x0, [x20, #40]
   31214:	add	x3, x29, #0x1c
   31218:	mov	w2, #0x8                   	// #8
   3121c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   31220:	str	x0, [x20, #40]
   31224:	ldrb	w8, [x29, #28]
   31228:	cbnz	w8, 31234 <PyInit__decimal@@Base+0x2a780>
   3122c:	ldr	x8, [x21, #1344]
   31230:	str	x8, [x20, #32]
   31234:	ldrb	w8, [x20]
   31238:	and	w8, w8, #0xf0
   3123c:	orr	w8, w8, #0x4
   31240:	stp	xzr, xzr, [x20, #16]
   31244:	strb	w8, [x20]
   31248:	str	xzr, [x20, #8]
   3124c:	ldr	w8, [x19]
   31250:	ldr	x21, [sp, #16]
   31254:	orr	w8, w8, #0x100
   31258:	str	w8, [x19]
   3125c:	ldp	x20, x19, [sp, #32]
   31260:	ldp	x29, x30, [sp], #48
   31264:	ret
   31268:	mov	x0, x20
   3126c:	mov	x4, x19
   31270:	ldp	x20, x19, [sp, #32]
   31274:	ldr	x21, [sp, #16]
   31278:	ldp	x29, x30, [sp], #48
   3127c:	b	32658 <PyInit__decimal@@Base+0x2bba4>
   31280:	mov	x8, x0
   31284:	mov	x4, x3
   31288:	mov	x3, x2
   3128c:	mov	w0, #0x1                   	// #1
   31290:	mov	x2, x1
   31294:	mov	x1, x8
   31298:	b	32c34 <PyInit__decimal@@Base+0x2c180>
   3129c:	stp	x29, x30, [sp, #-64]!
   312a0:	stp	x28, x23, [sp, #16]
   312a4:	stp	x22, x21, [sp, #32]
   312a8:	stp	x20, x19, [sp, #48]
   312ac:	mov	x29, sp
   312b0:	sub	sp, sp, #0x240
   312b4:	mov	w8, #0x30                  	// #48
   312b8:	strb	w8, [sp, #8]
   312bc:	mov	w8, #0x40                  	// #64
   312c0:	stp	xzr, x8, [sp, #32]
   312c4:	add	x8, sp, #0x38
   312c8:	stp	xzr, xzr, [sp, #16]
   312cc:	str	x8, [sp, #48]
   312d0:	ldrb	w8, [x1]
   312d4:	mov	x19, x4
   312d8:	mov	x21, x3
   312dc:	mov	x23, x2
   312e0:	mov	x22, x1
   312e4:	tst	w8, #0xe
   312e8:	mov	x20, x0
   312ec:	b.ne	312fc <PyInit__decimal@@Base+0x2a848>  // b.any
   312f0:	ldrb	w8, [x23]
   312f4:	tst	w8, #0xe
   312f8:	b.eq	313b4 <PyInit__decimal@@Base+0x2a900>  // b.none
   312fc:	mov	x0, x20
   31300:	mov	x1, x22
   31304:	mov	x2, x23
   31308:	mov	x3, x21
   3130c:	mov	x4, x19
   31310:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   31314:	cbnz	w0, 314b8 <PyInit__decimal@@Base+0x2aa04>
   31318:	ldrb	w8, [x22]
   3131c:	tbnz	w8, #1, 31368 <PyInit__decimal@@Base+0x2a8b4>
   31320:	ldrb	w9, [x23]
   31324:	tbz	w9, #1, 31538 <PyInit__decimal@@Base+0x2aa84>
   31328:	cmp	x20, x22
   3132c:	b.eq	314a8 <PyInit__decimal@@Base+0x2a9f4>  // b.none
   31330:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   31334:	ldr	x9, [x22, #24]
   31338:	ldr	x11, [x10, #1344]
   3133c:	ldr	x10, [x20, #32]
   31340:	cmp	x11, x9
   31344:	csel	x1, x9, x11, lt  // lt = tstop
   31348:	cmp	x1, x10
   3134c:	b.eq	3147c <PyInit__decimal@@Base+0x2a9c8>  // b.none
   31350:	ldrb	w11, [x20]
   31354:	tbnz	w11, #5, 3145c <PyInit__decimal@@Base+0x2a9a8>
   31358:	mov	x0, x20
   3135c:	mov	x2, x19
   31360:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   31364:	b	31470 <PyInit__decimal@@Base+0x2a9bc>
   31368:	ldrb	w8, [x20]
   3136c:	tbnz	w8, #5, 31438 <PyInit__decimal@@Base+0x2a984>
   31370:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   31374:	ldr	x9, [x20, #32]
   31378:	ldr	x1, [x21, #1344]
   3137c:	cmp	x9, x1
   31380:	b.le	31438 <PyInit__decimal@@Base+0x2a984>
   31384:	sturb	wzr, [x29, #-4]
   31388:	ldr	x0, [x20, #40]
   3138c:	sub	x3, x29, #0x4
   31390:	mov	w2, #0x8                   	// #8
   31394:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   31398:	str	x0, [x20, #40]
   3139c:	ldurb	w8, [x29, #-4]
   313a0:	cbnz	w8, 313ac <PyInit__decimal@@Base+0x2a8f8>
   313a4:	ldr	x8, [x21, #1344]
   313a8:	str	x8, [x20, #32]
   313ac:	ldrb	w8, [x20]
   313b0:	b	31438 <PyInit__decimal@@Base+0x2a984>
   313b4:	ldr	x8, [x23, #40]
   313b8:	ldr	x9, [x23, #24]
   313bc:	add	x8, x8, x9, lsl #3
   313c0:	ldur	x8, [x8, #-8]
   313c4:	cbz	x8, 3141c <PyInit__decimal@@Base+0x2a968>
   313c8:	add	x0, sp, #0x8
   313cc:	mov	x1, x20
   313d0:	mov	x2, x22
   313d4:	mov	x3, x23
   313d8:	mov	x4, x21
   313dc:	mov	x5, x19
   313e0:	bl	29024 <PyInit__decimal@@Base+0x22570>
   313e4:	ldrb	w8, [sp, #8]
   313e8:	cmp	w8, #0x1f
   313ec:	b.hi	31404 <PyInit__decimal@@Base+0x2a950>  // b.pmore
   313f0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   313f4:	ldr	x8, [x8, #1376]
   313f8:	ldr	x0, [sp, #48]
   313fc:	blr	x8
   31400:	ldrb	w8, [sp, #8]
   31404:	tbnz	w8, #4, 314a8 <PyInit__decimal@@Base+0x2a9f4>
   31408:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   3140c:	ldr	x8, [x8, #1376]
   31410:	add	x0, sp, #0x8
   31414:	blr	x8
   31418:	b	314a8 <PyInit__decimal@@Base+0x2a9f4>
   3141c:	ldr	x8, [x22, #40]
   31420:	ldr	x9, [x22, #24]
   31424:	add	x8, x8, x9, lsl #3
   31428:	ldur	x9, [x8, #-8]
   3142c:	ldrb	w8, [x20]
   31430:	cbz	x9, 314d0 <PyInit__decimal@@Base+0x2aa1c>
   31434:	tbz	w8, #5, 31370 <PyInit__decimal@@Base+0x2a8bc>
   31438:	and	w8, w8, #0xf0
   3143c:	orr	w8, w8, #0x4
   31440:	stp	xzr, xzr, [x20, #16]
   31444:	strb	w8, [x20]
   31448:	str	xzr, [x20, #8]
   3144c:	ldr	w8, [x19]
   31450:	orr	w8, w8, #0x100
   31454:	str	w8, [x19]
   31458:	b	314b8 <PyInit__decimal@@Base+0x2aa04>
   3145c:	cmp	x1, x10
   31460:	b.le	3147c <PyInit__decimal@@Base+0x2a9c8>
   31464:	mov	x0, x20
   31468:	mov	x2, x19
   3146c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   31470:	cbz	w0, 314a8 <PyInit__decimal@@Base+0x2a9f4>
   31474:	ldr	x9, [x22, #24]
   31478:	ldrb	w8, [x22]
   3147c:	ldrb	w10, [x20]
   31480:	ldr	x0, [x20, #40]
   31484:	bfxil	w10, w8, #0, #4
   31488:	strb	w10, [x20]
   3148c:	ldur	q0, [x22, #8]
   31490:	str	x9, [x20, #24]
   31494:	stur	q0, [x20, #8]
   31498:	ldr	x8, [x22, #24]
   3149c:	ldr	x1, [x22, #40]
   314a0:	lsl	x2, x8, #3
   314a4:	bl	63c0 <memcpy@plt>
   314a8:	mov	x0, x20
   314ac:	mov	x1, x21
   314b0:	mov	x2, x19
   314b4:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   314b8:	add	sp, sp, #0x240
   314bc:	ldp	x20, x19, [sp, #48]
   314c0:	ldp	x22, x21, [sp, #32]
   314c4:	ldp	x28, x23, [sp, #16]
   314c8:	ldp	x29, x30, [sp], #64
   314cc:	ret
   314d0:	tbnz	w8, #5, 31514 <PyInit__decimal@@Base+0x2aa60>
   314d4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   314d8:	ldr	x9, [x20, #32]
   314dc:	ldr	x1, [x21, #1344]
   314e0:	cmp	x9, x1
   314e4:	b.le	31514 <PyInit__decimal@@Base+0x2aa60>
   314e8:	sturb	wzr, [x29, #-4]
   314ec:	ldr	x0, [x20, #40]
   314f0:	sub	x3, x29, #0x4
   314f4:	mov	w2, #0x8                   	// #8
   314f8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   314fc:	str	x0, [x20, #40]
   31500:	ldurb	w8, [x29, #-4]
   31504:	cbnz	w8, 31510 <PyInit__decimal@@Base+0x2aa5c>
   31508:	ldr	x8, [x21, #1344]
   3150c:	str	x8, [x20, #32]
   31510:	ldrb	w8, [x20]
   31514:	and	w8, w8, #0xf0
   31518:	orr	w8, w8, #0x4
   3151c:	stp	xzr, xzr, [x20, #16]
   31520:	strb	w8, [x20]
   31524:	str	xzr, [x20, #8]
   31528:	ldr	w8, [x19]
   3152c:	orr	w8, w8, #0x10
   31530:	str	w8, [x19]
   31534:	b	314b8 <PyInit__decimal@@Base+0x2aa04>
   31538:	bl	6700 <abort@plt>
   3153c:	sub	sp, sp, #0x60
   31540:	stp	x29, x30, [sp, #32]
   31544:	stp	x24, x23, [sp, #48]
   31548:	stp	x22, x21, [sp, #64]
   3154c:	stp	x20, x19, [sp, #80]
   31550:	add	x29, sp, #0x20
   31554:	ldrb	w8, [x1]
   31558:	mov	x20, x4
   3155c:	mov	x21, x3
   31560:	mov	x23, x2
   31564:	mov	x22, x1
   31568:	tst	w8, #0xe
   3156c:	mov	x19, x0
   31570:	b.ne	31580 <PyInit__decimal@@Base+0x2aacc>  // b.any
   31574:	ldrb	w9, [x23]
   31578:	tst	w9, #0xe
   3157c:	b.eq	315f8 <PyInit__decimal@@Base+0x2ab44>  // b.none
   31580:	mov	x0, x19
   31584:	mov	x1, x22
   31588:	mov	x2, x23
   3158c:	mov	x3, x21
   31590:	mov	x4, x20
   31594:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   31598:	cbnz	w0, 31728 <PyInit__decimal@@Base+0x2ac74>
   3159c:	ldrb	w8, [x22]
   315a0:	tbz	w8, #1, 315ac <PyInit__decimal@@Base+0x2aaf8>
   315a4:	ldrb	w9, [x23]
   315a8:	tbnz	w9, #1, 31660 <PyInit__decimal@@Base+0x2abac>
   315ac:	ldrb	w8, [x19]
   315b0:	tbnz	w8, #5, 31708 <PyInit__decimal@@Base+0x2ac54>
   315b4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   315b8:	ldr	x9, [x19, #32]
   315bc:	ldr	x1, [x21, #1344]
   315c0:	cmp	x9, x1
   315c4:	b.le	31708 <PyInit__decimal@@Base+0x2ac54>
   315c8:	sturb	wzr, [x29, #-12]
   315cc:	ldr	x0, [x19, #40]
   315d0:	sub	x3, x29, #0xc
   315d4:	mov	w2, #0x8                   	// #8
   315d8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   315dc:	str	x0, [x19, #40]
   315e0:	ldurb	w8, [x29, #-12]
   315e4:	cbnz	w8, 315f0 <PyInit__decimal@@Base+0x2ab3c>
   315e8:	ldr	x8, [x21, #1344]
   315ec:	str	x8, [x19, #32]
   315f0:	ldrb	w8, [x19]
   315f4:	b	31708 <PyInit__decimal@@Base+0x2ac54>
   315f8:	ldr	x23, [x23, #8]
   315fc:	ldr	x9, [x21, #8]
   31600:	cmp	x23, x9
   31604:	b.gt	31620 <PyInit__decimal@@Base+0x2ab6c>
   31608:	ldr	x10, [x21, #16]
   3160c:	ldr	x9, [x21]
   31610:	sub	x10, x10, x9
   31614:	add	x10, x10, #0x1
   31618:	cmp	x23, x10
   3161c:	b.ge	316a0 <PyInit__decimal@@Base+0x2abec>  // b.tcont
   31620:	ldrb	w8, [x19]
   31624:	tbnz	w8, #5, 31708 <PyInit__decimal@@Base+0x2ac54>
   31628:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   3162c:	ldr	x9, [x19, #32]
   31630:	ldr	x1, [x21, #1344]
   31634:	cmp	x9, x1
   31638:	b.le	31708 <PyInit__decimal@@Base+0x2ac54>
   3163c:	sturb	wzr, [x29, #-8]
   31640:	ldr	x0, [x19, #40]
   31644:	sub	x3, x29, #0x8
   31648:	mov	w2, #0x8                   	// #8
   3164c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   31650:	str	x0, [x19, #40]
   31654:	ldurb	w8, [x29, #-8]
   31658:	cbnz	w8, 315f0 <PyInit__decimal@@Base+0x2ab3c>
   3165c:	b	315e8 <PyInit__decimal@@Base+0x2ab34>
   31660:	cmp	x19, x22
   31664:	b.eq	31728 <PyInit__decimal@@Base+0x2ac74>  // b.none
   31668:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   3166c:	ldr	x9, [x22, #24]
   31670:	ldr	x11, [x10, #1344]
   31674:	ldr	x10, [x19, #32]
   31678:	cmp	x11, x9
   3167c:	csel	x1, x9, x11, lt  // lt = tstop
   31680:	cmp	x1, x10
   31684:	b.eq	31798 <PyInit__decimal@@Base+0x2ace4>  // b.none
   31688:	ldrb	w11, [x19]
   3168c:	tbnz	w11, #5, 31778 <PyInit__decimal@@Base+0x2acc4>
   31690:	mov	x0, x19
   31694:	mov	x2, x20
   31698:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   3169c:	b	3178c <PyInit__decimal@@Base+0x2acd8>
   316a0:	ldr	x10, [x22, #40]
   316a4:	ldr	x11, [x22, #24]
   316a8:	add	x10, x10, x11, lsl #3
   316ac:	ldur	x10, [x10, #-8]
   316b0:	cbz	x10, 31740 <PyInit__decimal@@Base+0x2ac8c>
   316b4:	ldp	x8, x10, [x22, #8]
   316b8:	sub	x2, x8, x23
   316bc:	add	x8, x10, x2
   316c0:	cmp	x8, x9
   316c4:	b.le	317d8 <PyInit__decimal@@Base+0x2ad24>
   316c8:	ldrb	w8, [x19]
   316cc:	tbnz	w8, #5, 31708 <PyInit__decimal@@Base+0x2ac54>
   316d0:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   316d4:	ldr	x9, [x19, #32]
   316d8:	ldr	x1, [x21, #1344]
   316dc:	cmp	x9, x1
   316e0:	b.le	31708 <PyInit__decimal@@Base+0x2ac54>
   316e4:	sturb	wzr, [x29, #-4]
   316e8:	ldr	x0, [x19, #40]
   316ec:	sub	x3, x29, #0x4
   316f0:	mov	w2, #0x8                   	// #8
   316f4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   316f8:	str	x0, [x19, #40]
   316fc:	ldurb	w8, [x29, #-4]
   31700:	cbnz	w8, 315f0 <PyInit__decimal@@Base+0x2ab3c>
   31704:	b	315e8 <PyInit__decimal@@Base+0x2ab34>
   31708:	and	w8, w8, #0xf0
   3170c:	orr	w8, w8, #0x4
   31710:	stp	xzr, xzr, [x19, #16]
   31714:	strb	w8, [x19]
   31718:	str	xzr, [x19, #8]
   3171c:	ldr	w8, [x20]
   31720:	orr	w8, w8, #0x100
   31724:	str	w8, [x20]
   31728:	ldp	x20, x19, [sp, #80]
   3172c:	ldp	x22, x21, [sp, #64]
   31730:	ldp	x24, x23, [sp, #48]
   31734:	ldp	x29, x30, [sp, #32]
   31738:	add	sp, sp, #0x60
   3173c:	ret
   31740:	and	w1, w8, #0x1
   31744:	mov	x0, x19
   31748:	mov	x2, xzr
   3174c:	mov	x3, x23
   31750:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   31754:	mov	x0, x19
   31758:	mov	x1, x21
   3175c:	mov	x2, x20
   31760:	ldp	x20, x19, [sp, #80]
   31764:	ldp	x22, x21, [sp, #64]
   31768:	ldp	x24, x23, [sp, #48]
   3176c:	ldp	x29, x30, [sp, #32]
   31770:	add	sp, sp, #0x60
   31774:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   31778:	cmp	x1, x10
   3177c:	b.le	31798 <PyInit__decimal@@Base+0x2ace4>
   31780:	mov	x0, x19
   31784:	mov	x2, x20
   31788:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   3178c:	cbz	w0, 31728 <PyInit__decimal@@Base+0x2ac74>
   31790:	ldr	x9, [x22, #24]
   31794:	ldrb	w8, [x22]
   31798:	ldrb	w10, [x19]
   3179c:	ldr	x0, [x19, #40]
   317a0:	bfxil	w10, w8, #0, #4
   317a4:	strb	w10, [x19]
   317a8:	ldur	q0, [x22, #8]
   317ac:	str	x9, [x19, #24]
   317b0:	stur	q0, [x19, #8]
   317b4:	ldr	x8, [x22, #24]
   317b8:	ldr	x1, [x22, #40]
   317bc:	ldp	x20, x19, [sp, #80]
   317c0:	ldp	x22, x21, [sp, #64]
   317c4:	ldp	x24, x23, [sp, #48]
   317c8:	ldp	x29, x30, [sp, #32]
   317cc:	lsl	x2, x8, #3
   317d0:	add	sp, sp, #0x60
   317d4:	b	63c0 <memcpy@plt>
   317d8:	tbnz	x2, #63, 317fc <PyInit__decimal@@Base+0x2ad48>
   317dc:	mov	x0, x19
   317e0:	mov	x1, x22
   317e4:	mov	x3, x20
   317e8:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   317ec:	cbz	w0, 31728 <PyInit__decimal@@Base+0x2ac74>
   317f0:	mov	w8, wzr
   317f4:	str	x23, [x19, #8]
   317f8:	b	31b1c <PyInit__decimal@@Base+0x2b068>
   317fc:	neg	x2, x2
   31800:	mov	x0, x19
   31804:	mov	x1, x22
   31808:	mov	x3, x20
   3180c:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   31810:	cmn	x0, #0x1
   31814:	b.eq	31728 <PyInit__decimal@@Base+0x2ac74>  // b.none
   31818:	mov	x24, x19
   3181c:	str	x23, [x24, #8]!
   31820:	ldr	w8, [x21, #36]
   31824:	mov	x22, x0
   31828:	cmp	w8, #0x7
   3182c:	b.hi	31b0c <PyInit__decimal@@Base+0x2b058>  // b.pmore
   31830:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   31834:	add	x9, x9, #0x72a
   31838:	adr	x10, 31848 <PyInit__decimal@@Base+0x2ad94>
   3183c:	ldrb	w11, [x9, x8]
   31840:	add	x10, x10, x11, lsl #2
   31844:	br	x10
   31848:	cmp	x22, #0x0
   3184c:	cset	w8, ne  // ne = any
   31850:	b	318ec <PyInit__decimal@@Base+0x2ae38>
   31854:	cbz	x22, 31b0c <PyInit__decimal@@Base+0x2b058>
   31858:	ldrb	w8, [x19]
   3185c:	mvn	w8, w8
   31860:	and	w8, w8, #0x1
   31864:	b	318ec <PyInit__decimal@@Base+0x2ae38>
   31868:	cbz	x22, 31b0c <PyInit__decimal@@Base+0x2b058>
   3186c:	ldrb	w8, [x19]
   31870:	and	w8, w8, #0x1
   31874:	b	318ec <PyInit__decimal@@Base+0x2ae38>
   31878:	cmp	x22, #0x4
   3187c:	cset	w8, hi  // hi = pmore
   31880:	b	318ec <PyInit__decimal@@Base+0x2ae38>
   31884:	cmp	x22, #0x5
   31888:	cset	w8, hi  // hi = pmore
   3188c:	b	318ec <PyInit__decimal@@Base+0x2ae38>
   31890:	cmp	x22, #0x5
   31894:	b.hi	318f0 <PyInit__decimal@@Base+0x2ae3c>  // b.pmore
   31898:	b.ne	31b0c <PyInit__decimal@@Base+0x2b058>  // b.any
   3189c:	ldr	x8, [x19, #40]
   318a0:	ldr	w8, [x8]
   318a4:	and	w8, w8, #0x1
   318a8:	b	318ec <PyInit__decimal@@Base+0x2ae38>
   318ac:	ldr	x8, [x19, #40]
   318b0:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   318b4:	movk	x9, #0xcccd
   318b8:	mov	w10, #0xa                   	// #10
   318bc:	ldr	x8, [x8]
   318c0:	cmp	x22, #0x0
   318c4:	cset	w11, ne  // ne = any
   318c8:	umulh	x9, x8, x9
   318cc:	lsr	x9, x9, #3
   318d0:	msub	w8, w9, w10, w8
   318d4:	cmp	w8, #0x0
   318d8:	cset	w9, eq  // eq = none
   318dc:	cmp	w8, #0x5
   318e0:	cset	w8, eq  // eq = none
   318e4:	orr	w8, w9, w8
   318e8:	and	w8, w11, w8
   318ec:	cbz	w8, 31b0c <PyInit__decimal@@Base+0x2b058>
   318f0:	ldr	x0, [x19, #40]
   318f4:	ldr	x1, [x19, #24]
   318f8:	bl	1b324 <PyInit__decimal@@Base+0x14870>
   318fc:	cbz	x0, 31938 <PyInit__decimal@@Base+0x2ae84>
   31900:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   31904:	ldr	x10, [x9, #1344]
   31908:	ldp	x8, x9, [x19, #24]
   3190c:	add	x11, x8, #0x1
   31910:	cmp	x10, x11
   31914:	csinc	x1, x10, x8, ge  // ge = tcont
   31918:	cmp	x1, x9
   3191c:	b.eq	31960 <PyInit__decimal@@Base+0x2aeac>  // b.none
   31920:	ldrb	w10, [x19]
   31924:	tbnz	w10, #5, 31944 <PyInit__decimal@@Base+0x2ae90>
   31928:	mov	x0, x19
   3192c:	mov	x2, x20
   31930:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   31934:	b	31958 <PyInit__decimal@@Base+0x2aea4>
   31938:	ldr	x0, [x19, #40]
   3193c:	ldr	x8, [x19, #24]
   31940:	b	31978 <PyInit__decimal@@Base+0x2aec4>
   31944:	cmp	x1, x9
   31948:	b.le	31960 <PyInit__decimal@@Base+0x2aeac>
   3194c:	mov	x0, x19
   31950:	mov	x2, x20
   31954:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   31958:	cbz	w0, 31728 <PyInit__decimal@@Base+0x2ac74>
   3195c:	ldr	x8, [x19, #24]
   31960:	ldr	x0, [x19, #40]
   31964:	mov	w9, #0x1                   	// #1
   31968:	str	x9, [x0, x8, lsl #3]
   3196c:	ldr	x8, [x19, #24]
   31970:	add	x8, x8, #0x1
   31974:	str	x8, [x19, #24]
   31978:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   3197c:	add	x9, x0, x8, lsl #3
   31980:	add	x10, x10, #0x370
   31984:	ldur	x9, [x9, #-8]
   31988:	ldr	x11, [x10, #72]
   3198c:	cmp	x11, x9
   31990:	b.ls	319bc <PyInit__decimal@@Base+0x2af08>  // b.plast
   31994:	ldr	x11, [x10, #32]
   31998:	cmp	x11, x9
   3199c:	b.ls	319e4 <PyInit__decimal@@Base+0x2af30>  // b.plast
   319a0:	ldr	x11, [x10, #16]
   319a4:	cmp	x11, x9
   319a8:	b.ls	31a28 <PyInit__decimal@@Base+0x2af74>  // b.plast
   319ac:	ldr	x10, [x10, #8]
   319b0:	cmp	x10, x9
   319b4:	mov	w9, #0x1                   	// #1
   319b8:	b	31a8c <PyInit__decimal@@Base+0x2afd8>
   319bc:	ldr	x11, [x10, #112]
   319c0:	cmp	x11, x9
   319c4:	b.ls	31a00 <PyInit__decimal@@Base+0x2af4c>  // b.plast
   319c8:	ldr	x11, [x10, #88]
   319cc:	cmp	x11, x9
   319d0:	b.ls	31a38 <PyInit__decimal@@Base+0x2af84>  // b.plast
   319d4:	ldr	x10, [x10, #80]
   319d8:	cmp	x10, x9
   319dc:	mov	w9, #0xa                   	// #10
   319e0:	b	31a8c <PyInit__decimal@@Base+0x2afd8>
   319e4:	ldr	x11, [x10, #48]
   319e8:	cmp	x11, x9
   319ec:	b.ls	31a54 <PyInit__decimal@@Base+0x2afa0>  // b.plast
   319f0:	ldr	x10, [x10, #40]
   319f4:	cmp	x10, x9
   319f8:	mov	w9, #0x5                   	// #5
   319fc:	b	31a8c <PyInit__decimal@@Base+0x2afd8>
   31a00:	ldr	x11, [x10, #144]
   31a04:	cmp	x11, x9
   31a08:	b.ls	31a70 <PyInit__decimal@@Base+0x2afbc>  // b.plast
   31a0c:	ldr	x11, [x10, #128]
   31a10:	cmp	x11, x9
   31a14:	b.ls	31a80 <PyInit__decimal@@Base+0x2afcc>  // b.plast
   31a18:	ldr	x10, [x10, #120]
   31a1c:	cmp	x10, x9
   31a20:	mov	w9, #0xf                   	// #15
   31a24:	b	31a8c <PyInit__decimal@@Base+0x2afd8>
   31a28:	ldr	x10, [x10, #24]
   31a2c:	cmp	x10, x9
   31a30:	mov	w9, #0x3                   	// #3
   31a34:	b	31a8c <PyInit__decimal@@Base+0x2afd8>
   31a38:	ldr	x11, [x10, #104]
   31a3c:	cmp	x11, x9
   31a40:	b.ls	31bc0 <PyInit__decimal@@Base+0x2b10c>  // b.plast
   31a44:	ldr	x10, [x10, #96]
   31a48:	cmp	x10, x9
   31a4c:	mov	w9, #0xc                   	// #12
   31a50:	b	31a8c <PyInit__decimal@@Base+0x2afd8>
   31a54:	ldr	x11, [x10, #64]
   31a58:	cmp	x11, x9
   31a5c:	b.ls	31bc8 <PyInit__decimal@@Base+0x2b114>  // b.plast
   31a60:	ldr	x10, [x10, #56]
   31a64:	cmp	x10, x9
   31a68:	mov	w9, #0x7                   	// #7
   31a6c:	b	31a8c <PyInit__decimal@@Base+0x2afd8>
   31a70:	ldr	x10, [x10, #152]
   31a74:	cmp	x10, x9
   31a78:	mov	w9, #0x13                  	// #19
   31a7c:	b	31a8c <PyInit__decimal@@Base+0x2afd8>
   31a80:	ldr	x10, [x10, #136]
   31a84:	cmp	x10, x9
   31a88:	mov	w9, #0x11                  	// #17
   31a8c:	cinc	x9, x9, ls  // ls = plast
   31a90:	mov	w10, #0x13                  	// #19
   31a94:	madd	x8, x8, x10, x9
   31a98:	sub	x8, x8, #0x13
   31a9c:	str	x8, [x19, #16]
   31aa0:	ldr	x9, [x21]
   31aa4:	cmp	x8, x9
   31aa8:	b.le	31b08 <PyInit__decimal@@Base+0x2b054>
   31aac:	ldrb	w8, [x19]
   31ab0:	tbnz	w8, #5, 31af0 <PyInit__decimal@@Base+0x2b03c>
   31ab4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   31ab8:	ldr	x9, [x19, #32]
   31abc:	ldr	x1, [x21, #1344]
   31ac0:	cmp	x9, x1
   31ac4:	b.le	31af0 <PyInit__decimal@@Base+0x2b03c>
   31ac8:	add	x3, sp, #0x10
   31acc:	mov	w2, #0x8                   	// #8
   31ad0:	strb	wzr, [sp, #16]
   31ad4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   31ad8:	str	x0, [x19, #40]
   31adc:	ldrb	w8, [sp, #16]
   31ae0:	cbnz	w8, 31aec <PyInit__decimal@@Base+0x2b038>
   31ae4:	ldr	x8, [x21, #1344]
   31ae8:	str	x8, [x19, #32]
   31aec:	ldrb	w8, [x19]
   31af0:	and	w8, w8, #0xf0
   31af4:	orr	w8, w8, #0x4
   31af8:	strb	w8, [x19]
   31afc:	stp	xzr, xzr, [x24]
   31b00:	str	xzr, [x24, #16]
   31b04:	b	3171c <PyInit__decimal@@Base+0x2ac68>
   31b08:	ldr	x23, [x24]
   31b0c:	cmp	x22, #0x0
   31b10:	mov	w8, #0x1040                	// #4160
   31b14:	mov	w9, #0x1000                	// #4096
   31b18:	csel	w8, w9, w8, eq  // eq = none
   31b1c:	ldr	x9, [x19, #16]
   31b20:	ldr	x10, [x21, #8]
   31b24:	add	x9, x23, x9
   31b28:	sub	x9, x9, #0x1
   31b2c:	cmp	x9, x10
   31b30:	b.gt	31b4c <PyInit__decimal@@Base+0x2b098>
   31b34:	ldr	x10, [x21, #16]
   31b38:	ldr	x11, [x21]
   31b3c:	sub	x10, x10, x11
   31b40:	add	x10, x10, #0x1
   31b44:	cmp	x9, x10
   31b48:	b.ge	31bb0 <PyInit__decimal@@Base+0x2b0fc>  // b.tcont
   31b4c:	ldrb	w8, [x19]
   31b50:	add	x21, x19, #0x8
   31b54:	tbnz	w8, #5, 31b98 <PyInit__decimal@@Base+0x2b0e4>
   31b58:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   31b5c:	ldr	x9, [x19, #32]
   31b60:	ldr	x1, [x22, #1344]
   31b64:	cmp	x9, x1
   31b68:	b.le	31b98 <PyInit__decimal@@Base+0x2b0e4>
   31b6c:	strb	wzr, [sp, #12]
   31b70:	ldr	x0, [x19, #40]
   31b74:	add	x3, sp, #0xc
   31b78:	mov	w2, #0x8                   	// #8
   31b7c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   31b80:	str	x0, [x19, #40]
   31b84:	ldrb	w8, [sp, #12]
   31b88:	cbnz	w8, 31b94 <PyInit__decimal@@Base+0x2b0e0>
   31b8c:	ldr	x8, [x22, #1344]
   31b90:	str	x8, [x19, #32]
   31b94:	ldrb	w8, [x19]
   31b98:	and	w8, w8, #0xf0
   31b9c:	orr	w8, w8, #0x4
   31ba0:	strb	w8, [x19]
   31ba4:	stp	xzr, xzr, [x21]
   31ba8:	str	xzr, [x21, #16]
   31bac:	b	3171c <PyInit__decimal@@Base+0x2ac68>
   31bb0:	ldr	w9, [x20]
   31bb4:	orr	w8, w9, w8
   31bb8:	str	w8, [x20]
   31bbc:	b	31754 <PyInit__decimal@@Base+0x2aca0>
   31bc0:	mov	w9, #0xe                   	// #14
   31bc4:	b	31a90 <PyInit__decimal@@Base+0x2afdc>
   31bc8:	mov	w9, #0x9                   	// #9
   31bcc:	b	31a90 <PyInit__decimal@@Base+0x2afdc>
   31bd0:	stp	x29, x30, [sp, #-64]!
   31bd4:	str	x23, [sp, #16]
   31bd8:	stp	x22, x21, [sp, #32]
   31bdc:	stp	x20, x19, [sp, #48]
   31be0:	mov	x29, sp
   31be4:	ldrb	w23, [x1]
   31be8:	mov	x22, x3
   31bec:	mov	x20, x2
   31bf0:	mov	x21, x1
   31bf4:	tst	w23, #0xe
   31bf8:	mov	x19, x0
   31bfc:	b.eq	31c5c <PyInit__decimal@@Base+0x2b1a8>  // b.none
   31c00:	mov	x0, x19
   31c04:	mov	x1, x21
   31c08:	mov	x2, x20
   31c0c:	mov	x3, x22
   31c10:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   31c14:	cmp	x19, x21
   31c18:	b.eq	31e5c <PyInit__decimal@@Base+0x2b3a8>  // b.none
   31c1c:	cbnz	w0, 31e5c <PyInit__decimal@@Base+0x2b3a8>
   31c20:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   31c24:	ldr	x8, [x21, #24]
   31c28:	ldr	x10, [x9, #1344]
   31c2c:	ldr	x9, [x19, #32]
   31c30:	cmp	x10, x8
   31c34:	csel	x1, x8, x10, lt  // lt = tstop
   31c38:	cmp	x1, x9
   31c3c:	b.eq	31cc4 <PyInit__decimal@@Base+0x2b210>  // b.none
   31c40:	ldrb	w10, [x19]
   31c44:	tbnz	w10, #5, 31ca8 <PyInit__decimal@@Base+0x2b1f4>
   31c48:	mov	x0, x19
   31c4c:	mov	x2, x22
   31c50:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   31c54:	cbnz	w0, 31cc0 <PyInit__decimal@@Base+0x2b20c>
   31c58:	b	31e5c <PyInit__decimal@@Base+0x2b3a8>
   31c5c:	cmp	x19, x21
   31c60:	b.eq	31d54 <PyInit__decimal@@Base+0x2b2a0>  // b.none
   31c64:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   31c68:	ldr	x8, [x21, #24]
   31c6c:	ldr	x10, [x9, #1344]
   31c70:	ldr	x9, [x19, #32]
   31c74:	cmp	x10, x8
   31c78:	csel	x1, x8, x10, lt  // lt = tstop
   31c7c:	cmp	x1, x9
   31c80:	b.ne	31c8c <PyInit__decimal@@Base+0x2b1d8>  // b.any
   31c84:	mov	w9, w23
   31c88:	b	31d28 <PyInit__decimal@@Base+0x2b274>
   31c8c:	ldrb	w10, [x19]
   31c90:	tbnz	w10, #5, 31d04 <PyInit__decimal@@Base+0x2b250>
   31c94:	mov	x0, x19
   31c98:	mov	x2, x22
   31c9c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   31ca0:	cbnz	w0, 31d20 <PyInit__decimal@@Base+0x2b26c>
   31ca4:	b	31e5c <PyInit__decimal@@Base+0x2b3a8>
   31ca8:	cmp	x1, x9
   31cac:	b.le	31cc4 <PyInit__decimal@@Base+0x2b210>
   31cb0:	mov	x0, x19
   31cb4:	mov	x2, x22
   31cb8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   31cbc:	cbz	w0, 31e5c <PyInit__decimal@@Base+0x2b3a8>
   31cc0:	ldr	x8, [x21, #24]
   31cc4:	ldrb	w9, [x21]
   31cc8:	ldrb	w10, [x19]
   31ccc:	ldr	x0, [x19, #40]
   31cd0:	ldr	x23, [sp, #16]
   31cd4:	bfxil	w10, w9, #0, #4
   31cd8:	strb	w10, [x19]
   31cdc:	ldur	q0, [x21, #8]
   31ce0:	str	x8, [x19, #24]
   31ce4:	stur	q0, [x19, #8]
   31ce8:	ldr	x8, [x21, #24]
   31cec:	ldr	x1, [x21, #40]
   31cf0:	ldp	x20, x19, [sp, #48]
   31cf4:	ldp	x22, x21, [sp, #32]
   31cf8:	lsl	x2, x8, #3
   31cfc:	ldp	x29, x30, [sp], #64
   31d00:	b	63c0 <memcpy@plt>
   31d04:	cmp	x1, x9
   31d08:	mov	w9, w23
   31d0c:	b.le	31d28 <PyInit__decimal@@Base+0x2b274>
   31d10:	mov	x0, x19
   31d14:	mov	x2, x22
   31d18:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   31d1c:	cbz	w0, 31e5c <PyInit__decimal@@Base+0x2b3a8>
   31d20:	ldr	x8, [x21, #24]
   31d24:	ldrb	w9, [x21]
   31d28:	ldrb	w10, [x19]
   31d2c:	ldr	x0, [x19, #40]
   31d30:	bfxil	w10, w9, #0, #4
   31d34:	strb	w10, [x19]
   31d38:	ldur	q0, [x21, #8]
   31d3c:	str	x8, [x19, #24]
   31d40:	stur	q0, [x19, #8]
   31d44:	ldr	x8, [x21, #24]
   31d48:	ldr	x1, [x21, #40]
   31d4c:	lsl	x2, x8, #3
   31d50:	bl	63c0 <memcpy@plt>
   31d54:	mov	x0, x19
   31d58:	mov	x1, x20
   31d5c:	mov	x2, x22
   31d60:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   31d64:	ldrb	w8, [x19]
   31d68:	tst	w8, #0xe
   31d6c:	b.ne	31e5c <PyInit__decimal@@Base+0x2b3a8>  // b.any
   31d70:	ldr	x9, [x19, #40]
   31d74:	ldr	x10, [x19, #24]
   31d78:	add	x8, x9, x10, lsl #3
   31d7c:	ldur	x8, [x8, #-8]
   31d80:	cbz	x8, 31db0 <PyInit__decimal@@Base+0x2b2fc>
   31d84:	cmp	x10, #0x1
   31d88:	b.lt	31da8 <PyInit__decimal@@Base+0x2b2f4>  // b.tstop
   31d8c:	mov	x8, xzr
   31d90:	ldr	x11, [x9]
   31d94:	cbnz	x11, 31dd4 <PyInit__decimal@@Base+0x2b320>
   31d98:	add	x8, x8, #0x13
   31d9c:	subs	x10, x10, #0x1
   31da0:	add	x9, x9, #0x8
   31da4:	b.ne	31d90 <PyInit__decimal@@Base+0x2b2dc>  // b.any
   31da8:	mov	x8, xzr
   31dac:	b	31e1c <PyInit__decimal@@Base+0x2b368>
   31db0:	and	w1, w23, #0x1
   31db4:	mov	x0, x19
   31db8:	ldp	x20, x19, [sp, #48]
   31dbc:	ldp	x22, x21, [sp, #32]
   31dc0:	ldr	x23, [sp, #16]
   31dc4:	mov	x2, xzr
   31dc8:	mov	x3, xzr
   31dcc:	ldp	x29, x30, [sp], #64
   31dd0:	b	21f1c <PyInit__decimal@@Base+0x1b468>
   31dd4:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   31dd8:	movk	x9, #0xcccd
   31ddc:	mul	x10, x11, x9
   31de0:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   31de4:	ror	x10, x10, #1
   31de8:	movk	x12, #0x1999, lsl #48
   31dec:	cmp	x10, x12
   31df0:	b.hi	31e1c <PyInit__decimal@@Base+0x2b368>  // b.pmore
   31df4:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
   31df8:	movk	x10, #0x999a
   31dfc:	movk	x10, #0x1999, lsl #48
   31e00:	umulh	x11, x11, x9
   31e04:	lsr	x11, x11, #3
   31e08:	mul	x12, x11, x9
   31e0c:	ror	x12, x12, #1
   31e10:	cmp	x12, x10
   31e14:	add	x8, x8, #0x1
   31e18:	b.cc	31e00 <PyInit__decimal@@Base+0x2b34c>  // b.lo, b.ul, b.last
   31e1c:	ldr	w10, [x20, #40]
   31e20:	ldr	x9, [x20, #8]
   31e24:	cbz	w10, 31e34 <PyInit__decimal@@Base+0x2b380>
   31e28:	ldr	x10, [x20]
   31e2c:	sub	x9, x9, x10
   31e30:	add	x9, x9, #0x1
   31e34:	ldr	x10, [x19, #8]
   31e38:	mov	x0, x19
   31e3c:	sub	x9, x9, x10
   31e40:	cmp	x8, x9
   31e44:	csel	x20, x9, x8, gt
   31e48:	mov	x1, x20
   31e4c:	bl	23ebc <PyInit__decimal@@Base+0x1d408>
   31e50:	ldr	x8, [x19, #8]
   31e54:	add	x8, x20, x8
   31e58:	str	x8, [x19, #8]
   31e5c:	ldp	x20, x19, [sp, #48]
   31e60:	ldp	x22, x21, [sp, #32]
   31e64:	ldr	x23, [sp, #16]
   31e68:	ldp	x29, x30, [sp], #64
   31e6c:	ret
   31e70:	stp	x29, x30, [sp, #-96]!
   31e74:	stp	x28, x27, [sp, #16]
   31e78:	stp	x26, x25, [sp, #32]
   31e7c:	stp	x24, x23, [sp, #48]
   31e80:	stp	x22, x21, [sp, #64]
   31e84:	stp	x20, x19, [sp, #80]
   31e88:	mov	x29, sp
   31e8c:	sub	sp, sp, #0x4a0
   31e90:	add	x10, sp, #0x260
   31e94:	mov	w8, #0x30                  	// #48
   31e98:	mov	w9, #0x40                  	// #64
   31e9c:	str	x10, [sp, #600]
   31ea0:	add	x10, sp, #0x30
   31ea4:	str	xzr, [sp, #568]
   31ea8:	str	xzr, [sp, #576]
   31eac:	stp	xzr, xzr, [sp, #8]
   31eb0:	strb	w8, [sp, #560]
   31eb4:	str	xzr, [sp, #584]
   31eb8:	str	x9, [sp, #592]
   31ebc:	strb	w8, [sp]
   31ec0:	stp	xzr, x9, [sp, #24]
   31ec4:	str	x10, [sp, #40]
   31ec8:	ldrb	w8, [x1]
   31ecc:	mov	x19, x4
   31ed0:	mov	x21, x3
   31ed4:	mov	x23, x2
   31ed8:	mov	x22, x1
   31edc:	tst	w8, #0xe
   31ee0:	mov	x20, x0
   31ee4:	b.ne	31ef4 <PyInit__decimal@@Base+0x2b440>  // b.any
   31ee8:	ldrb	w10, [x23]
   31eec:	tst	w10, #0xe
   31ef0:	b.eq	31fac <PyInit__decimal@@Base+0x2b4f8>  // b.none
   31ef4:	mov	x0, x20
   31ef8:	mov	x1, x22
   31efc:	mov	x2, x23
   31f00:	mov	x3, x21
   31f04:	mov	x4, x19
   31f08:	bl	22c00 <PyInit__decimal@@Base+0x1c14c>
   31f0c:	cbnz	w0, 32178 <PyInit__decimal@@Base+0x2b6c4>
   31f10:	ldrb	w8, [x22]
   31f14:	tbnz	w8, #1, 31f60 <PyInit__decimal@@Base+0x2b4ac>
   31f18:	ldrb	w9, [x23]
   31f1c:	tbz	w9, #1, 32654 <PyInit__decimal@@Base+0x2bba0>
   31f20:	cmp	x20, x22
   31f24:	b.eq	32168 <PyInit__decimal@@Base+0x2b6b4>  // b.none
   31f28:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   31f2c:	ldr	x9, [x22, #24]
   31f30:	ldr	x11, [x10, #1344]
   31f34:	ldr	x10, [x20, #32]
   31f38:	cmp	x11, x9
   31f3c:	csel	x1, x9, x11, lt  // lt = tstop
   31f40:	cmp	x1, x10
   31f44:	b.eq	3207c <PyInit__decimal@@Base+0x2b5c8>  // b.none
   31f48:	ldrb	w11, [x20]
   31f4c:	tbnz	w11, #5, 3205c <PyInit__decimal@@Base+0x2b5a8>
   31f50:	mov	x0, x20
   31f54:	mov	x2, x19
   31f58:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   31f5c:	b	32070 <PyInit__decimal@@Base+0x2b5bc>
   31f60:	ldrb	w8, [x20]
   31f64:	tbnz	w8, #5, 32038 <PyInit__decimal@@Base+0x2b584>
   31f68:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   31f6c:	ldr	x9, [x20, #32]
   31f70:	ldr	x1, [x21, #1344]
   31f74:	cmp	x9, x1
   31f78:	b.le	32038 <PyInit__decimal@@Base+0x2b584>
   31f7c:	sturb	wzr, [x29, #-64]
   31f80:	ldr	x0, [x20, #40]
   31f84:	sub	x3, x29, #0x40
   31f88:	mov	w2, #0x8                   	// #8
   31f8c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   31f90:	str	x0, [x20, #40]
   31f94:	ldurb	w8, [x29, #-64]
   31f98:	cbnz	w8, 31fa4 <PyInit__decimal@@Base+0x2b4f0>
   31f9c:	ldr	x8, [x21, #1344]
   31fa0:	str	x8, [x20, #32]
   31fa4:	ldrb	w8, [x20]
   31fa8:	b	32038 <PyInit__decimal@@Base+0x2b584>
   31fac:	ldr	x1, [x23, #40]
   31fb0:	ldr	x9, [x23, #24]
   31fb4:	add	x8, x1, x9, lsl #3
   31fb8:	ldur	x8, [x8, #-8]
   31fbc:	cbz	x8, 3201c <PyInit__decimal@@Base+0x2b568>
   31fc0:	add	x8, sp, #0x230
   31fc4:	cmp	x8, x23
   31fc8:	cset	w8, eq  // eq = none
   31fcc:	cmp	x20, x23
   31fd0:	b.ne	320d8 <PyInit__decimal@@Base+0x2b624>  // b.any
   31fd4:	tbnz	w8, #0, 320d8 <PyInit__decimal@@Base+0x2b624>
   31fd8:	adrp	x24, 53000 <PyInit__decimal@@Base+0x4c54c>
   31fdc:	ldr	x8, [x24, #1344]
   31fe0:	cmp	x8, x9
   31fe4:	csel	x8, x9, x8, lt  // lt = tstop
   31fe8:	cmp	x8, #0x41
   31fec:	b.lt	320ac <PyInit__decimal@@Base+0x2b5f8>  // b.tstop
   31ff0:	add	x0, sp, #0x230
   31ff4:	mov	x1, x8
   31ff8:	mov	x2, x19
   31ffc:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   32000:	cbz	w0, 32288 <PyInit__decimal@@Base+0x2b7d4>
   32004:	ldr	x9, [x23, #24]
   32008:	ldrb	w10, [x23]
   3200c:	ldrb	w8, [sp, #560]
   32010:	ldr	x0, [sp, #600]
   32014:	ldr	x1, [x23, #40]
   32018:	b	320b4 <PyInit__decimal@@Base+0x2b600>
   3201c:	ldr	x8, [x22, #40]
   32020:	ldr	x9, [x22, #24]
   32024:	add	x8, x8, x9, lsl #3
   32028:	ldur	x9, [x8, #-8]
   3202c:	ldrb	w8, [x20]
   32030:	cbz	x9, 32198 <PyInit__decimal@@Base+0x2b6e4>
   32034:	tbz	w8, #5, 31f68 <PyInit__decimal@@Base+0x2b4b4>
   32038:	and	w8, w8, #0xf0
   3203c:	orr	w8, w8, #0x4
   32040:	stp	xzr, xzr, [x20, #16]
   32044:	strb	w8, [x20]
   32048:	str	xzr, [x20, #8]
   3204c:	ldr	w8, [x19]
   32050:	orr	w8, w8, #0x100
   32054:	str	w8, [x19]
   32058:	b	32178 <PyInit__decimal@@Base+0x2b6c4>
   3205c:	cmp	x1, x10
   32060:	b.le	3207c <PyInit__decimal@@Base+0x2b5c8>
   32064:	mov	x0, x20
   32068:	mov	x2, x19
   3206c:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   32070:	cbz	w0, 32168 <PyInit__decimal@@Base+0x2b6b4>
   32074:	ldr	x9, [x22, #24]
   32078:	ldrb	w8, [x22]
   3207c:	ldrb	w10, [x20]
   32080:	ldr	x0, [x20, #40]
   32084:	bfxil	w10, w8, #0, #4
   32088:	strb	w10, [x20]
   3208c:	ldur	q0, [x22, #8]
   32090:	str	x9, [x20, #24]
   32094:	stur	q0, [x20, #8]
   32098:	ldr	x8, [x22, #24]
   3209c:	ldr	x1, [x22, #40]
   320a0:	lsl	x2, x8, #3
   320a4:	bl	63c0 <memcpy@plt>
   320a8:	b	32168 <PyInit__decimal@@Base+0x2b6b4>
   320ac:	add	x0, sp, #0x260
   320b0:	mov	w8, #0x30                  	// #48
   320b4:	bfxil	w8, w10, #0, #4
   320b8:	strb	w8, [sp, #560]
   320bc:	ldur	q0, [x23, #8]
   320c0:	add	x8, sp, #0x139
   320c4:	lsl	x2, x9, #3
   320c8:	str	x9, [sp, #584]
   320cc:	stur	q0, [x8, #255]
   320d0:	bl	63c0 <memcpy@plt>
   320d4:	add	x23, sp, #0x230
   320d8:	mov	x0, sp
   320dc:	mov	x1, x20
   320e0:	mov	x2, x22
   320e4:	mov	x3, x23
   320e8:	mov	x4, x21
   320ec:	mov	x5, x19
   320f0:	bl	29024 <PyInit__decimal@@Base+0x22570>
   320f4:	ldrb	w8, [sp]
   320f8:	tst	w8, #0xc
   320fc:	b.ne	3210c <PyInit__decimal@@Base+0x2b658>  // b.any
   32100:	ldrb	w8, [x20]
   32104:	tst	w8, #0xc
   32108:	b.eq	32200 <PyInit__decimal@@Base+0x2b74c>  // b.none
   3210c:	ldrb	w8, [sp, #560]
   32110:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   32114:	cmp	w8, #0x1f
   32118:	b.hi	3212c <PyInit__decimal@@Base+0x2b678>  // b.pmore
   3211c:	ldr	x8, [x22, #1376]
   32120:	ldr	x0, [sp, #600]
   32124:	blr	x8
   32128:	ldrb	w8, [sp, #560]
   3212c:	tbnz	w8, #4, 3213c <PyInit__decimal@@Base+0x2b688>
   32130:	ldr	x8, [x22, #1376]
   32134:	add	x0, sp, #0x230
   32138:	blr	x8
   3213c:	ldrb	w8, [sp]
   32140:	cmp	w8, #0x1f
   32144:	b.hi	32158 <PyInit__decimal@@Base+0x2b6a4>  // b.pmore
   32148:	ldr	x8, [x22, #1376]
   3214c:	ldr	x0, [sp, #40]
   32150:	blr	x8
   32154:	ldrb	w8, [sp]
   32158:	tbnz	w8, #4, 32168 <PyInit__decimal@@Base+0x2b6b4>
   3215c:	ldr	x8, [x22, #1376]
   32160:	mov	x0, sp
   32164:	blr	x8
   32168:	mov	x0, x20
   3216c:	mov	x1, x21
   32170:	mov	x2, x19
   32174:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   32178:	add	sp, sp, #0x4a0
   3217c:	ldp	x20, x19, [sp, #80]
   32180:	ldp	x22, x21, [sp, #64]
   32184:	ldp	x24, x23, [sp, #48]
   32188:	ldp	x26, x25, [sp, #32]
   3218c:	ldp	x28, x27, [sp, #16]
   32190:	ldp	x29, x30, [sp], #96
   32194:	ret
   32198:	tbnz	w8, #5, 321dc <PyInit__decimal@@Base+0x2b728>
   3219c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   321a0:	ldr	x9, [x20, #32]
   321a4:	ldr	x1, [x21, #1344]
   321a8:	cmp	x9, x1
   321ac:	b.le	321dc <PyInit__decimal@@Base+0x2b728>
   321b0:	sturb	wzr, [x29, #-64]
   321b4:	ldr	x0, [x20, #40]
   321b8:	sub	x3, x29, #0x40
   321bc:	mov	w2, #0x8                   	// #8
   321c0:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   321c4:	str	x0, [x20, #40]
   321c8:	ldurb	w8, [x29, #-64]
   321cc:	cbnz	w8, 321d8 <PyInit__decimal@@Base+0x2b724>
   321d0:	ldr	x8, [x21, #1344]
   321d4:	str	x8, [x20, #32]
   321d8:	ldrb	w8, [x20]
   321dc:	and	w8, w8, #0xf0
   321e0:	orr	w8, w8, #0x4
   321e4:	stp	xzr, xzr, [x20, #16]
   321e8:	strb	w8, [x20]
   321ec:	str	xzr, [x20, #8]
   321f0:	ldr	w8, [x19]
   321f4:	orr	w8, w8, #0x10
   321f8:	str	w8, [x19]
   321fc:	b	32178 <PyInit__decimal@@Base+0x2b6c4>
   32200:	ldr	x8, [x20, #40]
   32204:	ldr	x9, [x20, #24]
   32208:	add	x8, x8, x9, lsl #3
   3220c:	ldur	x8, [x8, #-8]
   32210:	cbz	x8, 3210c <PyInit__decimal@@Base+0x2b658>
   32214:	mov	x24, x20
   32218:	ldp	x8, x9, [x23, #8]
   3221c:	ldr	x10, [x24, #8]!
   32220:	add	x8, x8, x9
   32224:	ldr	x11, [x24, #8]
   32228:	sub	x8, x8, x10
   3222c:	sub	x8, x8, x11
   32230:	add	x8, x8, #0x1
   32234:	cmp	x8, #0x2
   32238:	b.hi	3210c <PyInit__decimal@@Base+0x2b658>  // b.pmore
   3223c:	ldr	x8, [sp, #40]
   32240:	ldr	x11, [sp, #24]
   32244:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   32248:	add	x9, x9, #0x370
   3224c:	ldr	x12, [x9, #72]
   32250:	add	x10, x8, x11, lsl #3
   32254:	ldur	x10, [x10, #-8]
   32258:	cmp	x12, x10
   3225c:	b.ls	322f0 <PyInit__decimal@@Base+0x2b83c>  // b.plast
   32260:	ldr	x12, [x9, #32]
   32264:	cmp	x12, x10
   32268:	b.ls	32318 <PyInit__decimal@@Base+0x2b864>  // b.plast
   3226c:	ldr	x12, [x9, #16]
   32270:	cmp	x12, x10
   32274:	b.ls	3235c <PyInit__decimal@@Base+0x2b8a8>  // b.plast
   32278:	ldr	x12, [x9, #8]
   3227c:	cmp	x12, x10
   32280:	mov	w12, #0x1                   	// #1
   32284:	b	323c0 <PyInit__decimal@@Base+0x2b90c>
   32288:	ldrb	w8, [x23]
   3228c:	tbnz	w8, #5, 322cc <PyInit__decimal@@Base+0x2b818>
   32290:	ldr	x9, [x23, #32]
   32294:	ldr	x1, [x24, #1344]
   32298:	cmp	x9, x1
   3229c:	b.le	322cc <PyInit__decimal@@Base+0x2b818>
   322a0:	sturb	wzr, [x29, #-64]
   322a4:	ldr	x0, [x23, #40]
   322a8:	sub	x3, x29, #0x40
   322ac:	mov	w2, #0x8                   	// #8
   322b0:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   322b4:	str	x0, [x23, #40]
   322b8:	ldurb	w8, [x29, #-64]
   322bc:	cbnz	w8, 322c8 <PyInit__decimal@@Base+0x2b814>
   322c0:	ldr	x8, [x24, #1344]
   322c4:	str	x8, [x23, #32]
   322c8:	ldrb	w8, [x23]
   322cc:	and	w8, w8, #0xf0
   322d0:	orr	w8, w8, #0x4
   322d4:	stp	xzr, xzr, [x23, #16]
   322d8:	strb	w8, [x23]
   322dc:	str	xzr, [x23, #8]
   322e0:	ldr	w8, [x19]
   322e4:	orr	w8, w8, #0x200
   322e8:	str	w8, [x19]
   322ec:	b	32178 <PyInit__decimal@@Base+0x2b6c4>
   322f0:	ldr	x12, [x9, #112]
   322f4:	cmp	x12, x10
   322f8:	b.ls	32334 <PyInit__decimal@@Base+0x2b880>  // b.plast
   322fc:	ldr	x12, [x9, #88]
   32300:	cmp	x12, x10
   32304:	b.ls	3236c <PyInit__decimal@@Base+0x2b8b8>  // b.plast
   32308:	ldr	x12, [x9, #80]
   3230c:	cmp	x12, x10
   32310:	mov	w12, #0xa                   	// #10
   32314:	b	323c0 <PyInit__decimal@@Base+0x2b90c>
   32318:	ldr	x12, [x9, #48]
   3231c:	cmp	x12, x10
   32320:	b.ls	32388 <PyInit__decimal@@Base+0x2b8d4>  // b.plast
   32324:	ldr	x12, [x9, #40]
   32328:	cmp	x12, x10
   3232c:	mov	w12, #0x5                   	// #5
   32330:	b	323c0 <PyInit__decimal@@Base+0x2b90c>
   32334:	ldr	x12, [x9, #144]
   32338:	cmp	x12, x10
   3233c:	b.ls	323a4 <PyInit__decimal@@Base+0x2b8f0>  // b.plast
   32340:	ldr	x12, [x9, #128]
   32344:	cmp	x12, x10
   32348:	b.ls	323b4 <PyInit__decimal@@Base+0x2b900>  // b.plast
   3234c:	ldr	x12, [x9, #120]
   32350:	cmp	x12, x10
   32354:	mov	w12, #0xf                   	// #15
   32358:	b	323c0 <PyInit__decimal@@Base+0x2b90c>
   3235c:	ldr	x12, [x9, #24]
   32360:	cmp	x12, x10
   32364:	mov	w12, #0x3                   	// #3
   32368:	b	323c0 <PyInit__decimal@@Base+0x2b90c>
   3236c:	ldr	x12, [x9, #104]
   32370:	cmp	x12, x10
   32374:	b.ls	325f8 <PyInit__decimal@@Base+0x2bb44>  // b.plast
   32378:	ldr	x12, [x9, #96]
   3237c:	cmp	x12, x10
   32380:	mov	w12, #0xc                   	// #12
   32384:	b	323c0 <PyInit__decimal@@Base+0x2b90c>
   32388:	ldr	x12, [x9, #64]
   3238c:	cmp	x12, x10
   32390:	b.ls	32600 <PyInit__decimal@@Base+0x2bb4c>  // b.plast
   32394:	ldr	x12, [x9, #56]
   32398:	cmp	x12, x10
   3239c:	mov	w12, #0x7                   	// #7
   323a0:	b	323c0 <PyInit__decimal@@Base+0x2b90c>
   323a4:	ldr	x12, [x9, #152]
   323a8:	cmp	x12, x10
   323ac:	mov	w12, #0x13                  	// #19
   323b0:	b	323c0 <PyInit__decimal@@Base+0x2b90c>
   323b4:	ldr	x12, [x9, #136]
   323b8:	cmp	x12, x10
   323bc:	mov	w12, #0x11                  	// #17
   323c0:	cinc	x12, x12, ls  // ls = plast
   323c4:	ldr	x12, [x9, x12, lsl #3]
   323c8:	sub	x12, x12, #0x1
   323cc:	cmp	x12, x10
   323d0:	b.ne	323f8 <PyInit__decimal@@Base+0x2b944>  // b.any
   323d4:	mov	x12, #0xffffffff89e7ffff    	// #-1981284353
   323d8:	movk	x12, #0x2304, lsl #32
   323dc:	sub	x11, x11, #0x2
   323e0:	movk	x12, #0x8ac7, lsl #48
   323e4:	tbnz	x11, #63, 32400 <PyInit__decimal@@Base+0x2b94c>
   323e8:	ldr	x13, [x8, x11, lsl #3]
   323ec:	sub	x11, x11, #0x1
   323f0:	cmp	x13, x12
   323f4:	b.eq	323e4 <PyInit__decimal@@Base+0x2b930>  // b.none
   323f8:	mov	w25, wzr
   323fc:	b	32404 <PyInit__decimal@@Base+0x2b950>
   32400:	mov	w25, #0x1                   	// #1
   32404:	ldr	x26, [sp, #16]
   32408:	cbz	x10, 32418 <PyInit__decimal@@Base+0x2b964>
   3240c:	ldr	x10, [sp, #8]
   32410:	tbnz	x10, #63, 32420 <PyInit__decimal@@Base+0x2b96c>
   32414:	cbz	x10, 3245c <PyInit__decimal@@Base+0x2b9a8>
   32418:	mov	w27, wzr
   3241c:	b	32464 <PyInit__decimal@@Base+0x2b9b0>
   32420:	mov	x12, #0x435f                	// #17247
   32424:	movk	x12, #0xd79, lsl #16
   32428:	movk	x12, #0x35e5, lsl #32
   3242c:	neg	x11, x10
   32430:	movk	x12, #0xd794, lsl #48
   32434:	umulh	x11, x11, x12
   32438:	mov	x13, #0xffffffffffffffed    	// #-19
   3243c:	neg	x10, x10
   32440:	lsr	x11, x11, #4
   32444:	madd	x10, x11, x13, x10
   32448:	ldr	x8, [x8, x11, lsl #3]
   3244c:	ldr	x9, [x9, x10, lsl #3]
   32450:	udiv	x8, x8, x9
   32454:	and	w27, w8, #0x1
   32458:	b	32464 <PyInit__decimal@@Base+0x2b9b0>
   3245c:	ldr	w8, [x8]
   32460:	and	w27, w8, #0x1
   32464:	sub	x0, x29, #0x40
   32468:	sub	x28, x29, #0x40
   3246c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   32470:	ldrb	w8, [x22]
   32474:	ldrb	w9, [x23]
   32478:	add	x5, x28, #0x1c
   3247c:	mov	x0, sp
   32480:	and	w8, w8, #0x1
   32484:	and	w9, w9, #0x1
   32488:	eor	w10, w8, #0x1
   3248c:	cmp	w8, w9
   32490:	csel	w3, w10, w9, eq  // eq = none
   32494:	sub	x4, x29, #0x40
   32498:	mov	x1, x20
   3249c:	mov	x2, x23
   324a0:	bl	27200 <PyInit__decimal@@Base+0x2074c>
   324a4:	ldur	w8, [x29, #-36]
   324a8:	mov	w9, #0x3be                 	// #958
   324ac:	ands	w22, w8, w9
   324b0:	b.eq	32520 <PyInit__decimal@@Base+0x2ba6c>  // b.none
   324b4:	ldrb	w8, [x20]
   324b8:	tbnz	w8, #5, 324fc <PyInit__decimal@@Base+0x2ba48>
   324bc:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   324c0:	ldr	x9, [x20, #32]
   324c4:	ldr	x1, [x23, #1344]
   324c8:	cmp	x9, x1
   324cc:	b.le	324fc <PyInit__decimal@@Base+0x2ba48>
   324d0:	sturb	wzr, [x29, #-12]
   324d4:	ldr	x0, [x20, #40]
   324d8:	sub	x3, x29, #0xc
   324dc:	mov	w2, #0x8                   	// #8
   324e0:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   324e4:	str	x0, [x20, #40]
   324e8:	ldurb	w8, [x29, #-12]
   324ec:	cbnz	w8, 324f8 <PyInit__decimal@@Base+0x2ba44>
   324f0:	ldr	x8, [x23, #1344]
   324f4:	str	x8, [x20, #32]
   324f8:	ldrb	w8, [x20]
   324fc:	and	w8, w8, #0xf0
   32500:	orr	w8, w8, #0x4
   32504:	strb	w8, [x20]
   32508:	stp	xzr, xzr, [x24]
   3250c:	str	xzr, [x24, #16]
   32510:	ldr	w8, [x19]
   32514:	orr	w8, w8, w22
   32518:	str	w8, [x19]
   3251c:	b	3210c <PyInit__decimal@@Base+0x2b658>
   32520:	mov	x0, sp
   32524:	mov	x1, x20
   32528:	bl	23a80 <PyInit__decimal@@Base+0x1cfcc>
   3252c:	tbnz	w0, #31, 32538 <PyInit__decimal@@Base+0x2ba84>
   32530:	cbz	w27, 3210c <PyInit__decimal@@Base+0x2b658>
   32534:	cbnz	w0, 3210c <PyInit__decimal@@Base+0x2b658>
   32538:	cbz	w25, 325b4 <PyInit__decimal@@Base+0x2bb00>
   3253c:	ldr	x8, [x21]
   32540:	cmp	x26, x8
   32544:	b.ne	325b4 <PyInit__decimal@@Base+0x2bb00>  // b.any
   32548:	ldrb	w8, [x20]
   3254c:	tbnz	w8, #5, 32590 <PyInit__decimal@@Base+0x2badc>
   32550:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   32554:	ldr	x9, [x20, #32]
   32558:	ldr	x1, [x22, #1344]
   3255c:	cmp	x9, x1
   32560:	b.le	32590 <PyInit__decimal@@Base+0x2badc>
   32564:	sturb	wzr, [x29, #-12]
   32568:	ldr	x0, [x20, #40]
   3256c:	sub	x3, x29, #0xc
   32570:	mov	w2, #0x8                   	// #8
   32574:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   32578:	str	x0, [x20, #40]
   3257c:	ldurb	w8, [x29, #-12]
   32580:	cbnz	w8, 3258c <PyInit__decimal@@Base+0x2bad8>
   32584:	ldr	x8, [x22, #1344]
   32588:	str	x8, [x20, #32]
   3258c:	ldrb	w8, [x20]
   32590:	and	w8, w8, #0xf0
   32594:	orr	w8, w8, #0x4
   32598:	strb	w8, [x20]
   3259c:	stp	xzr, xzr, [x24]
   325a0:	str	xzr, [x24, #16]
   325a4:	ldr	w8, [x19]
   325a8:	orr	w8, w8, #0x8
   325ac:	str	w8, [x19]
   325b0:	b	3210c <PyInit__decimal@@Base+0x2b658>
   325b4:	mov	x8, sp
   325b8:	cmp	x8, x20
   325bc:	b.eq	3210c <PyInit__decimal@@Base+0x2b658>  // b.none
   325c0:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   325c4:	ldr	x8, [sp, #24]
   325c8:	ldr	x10, [x9, #1344]
   325cc:	ldr	x9, [x20, #32]
   325d0:	cmp	x10, x8
   325d4:	csel	x1, x8, x10, lt  // lt = tstop
   325d8:	cmp	x1, x9
   325dc:	b.eq	32624 <PyInit__decimal@@Base+0x2bb70>  // b.none
   325e0:	ldrb	w10, [x20]
   325e4:	tbnz	w10, #5, 32608 <PyInit__decimal@@Base+0x2bb54>
   325e8:	mov	x0, x20
   325ec:	mov	x2, x19
   325f0:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   325f4:	b	3261c <PyInit__decimal@@Base+0x2bb68>
   325f8:	mov	w12, #0xe                   	// #14
   325fc:	b	323c4 <PyInit__decimal@@Base+0x2b910>
   32600:	mov	w12, #0x9                   	// #9
   32604:	b	323c4 <PyInit__decimal@@Base+0x2b910>
   32608:	cmp	x1, x9
   3260c:	b.le	32624 <PyInit__decimal@@Base+0x2bb70>
   32610:	mov	x0, x20
   32614:	mov	x2, x19
   32618:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   3261c:	cbz	w0, 3210c <PyInit__decimal@@Base+0x2b658>
   32620:	ldr	x8, [sp, #24]
   32624:	ldrb	w9, [sp]
   32628:	ldrb	w10, [x20]
   3262c:	ldr	x0, [x20, #40]
   32630:	lsl	x2, x8, #3
   32634:	bfxil	w10, w9, #0, #4
   32638:	strb	w10, [x20]
   3263c:	ldur	q0, [sp, #8]
   32640:	str	x8, [x20, #24]
   32644:	stur	q0, [x20, #8]
   32648:	ldr	x1, [sp, #40]
   3264c:	bl	63c0 <memcpy@plt>
   32650:	b	3210c <PyInit__decimal@@Base+0x2b658>
   32654:	bl	6700 <abort@plt>
   32658:	stp	x29, x30, [sp, #-64]!
   3265c:	str	x23, [sp, #16]
   32660:	stp	x22, x21, [sp, #32]
   32664:	stp	x20, x19, [sp, #48]
   32668:	mov	x29, sp
   3266c:	ldrb	w8, [x1]
   32670:	mov	x20, x4
   32674:	mov	x22, x1
   32678:	mov	x19, x0
   3267c:	tst	w8, #0xe
   32680:	b.eq	326c8 <PyInit__decimal@@Base+0x2bc14>  // b.none
   32684:	cmp	x19, x22
   32688:	b.eq	32aec <PyInit__decimal@@Base+0x2c038>  // b.none
   3268c:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   32690:	ldr	x9, [x22, #24]
   32694:	ldr	x11, [x10, #1344]
   32698:	ldr	x10, [x19, #32]
   3269c:	cmp	x11, x9
   326a0:	csel	x1, x9, x11, lt  // lt = tstop
   326a4:	cmp	x1, x10
   326a8:	b.eq	327c0 <PyInit__decimal@@Base+0x2bd0c>  // b.none
   326ac:	ldrb	w11, [x19]
   326b0:	tbnz	w11, #5, 327a0 <PyInit__decimal@@Base+0x2bcec>
   326b4:	mov	x0, x19
   326b8:	mov	x2, x20
   326bc:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   326c0:	cbnz	w0, 327b8 <PyInit__decimal@@Base+0x2bd04>
   326c4:	b	32aec <PyInit__decimal@@Base+0x2c038>
   326c8:	ldr	x9, [x22, #40]
   326cc:	ldr	x10, [x22, #24]
   326d0:	mov	x23, x2
   326d4:	add	x9, x9, x10, lsl #3
   326d8:	ldur	x9, [x9, #-8]
   326dc:	cbz	x9, 3277c <PyInit__decimal@@Base+0x2bcc8>
   326e0:	ldr	x8, [x22, #8]
   326e4:	mov	x21, x3
   326e8:	subs	x2, x8, x23
   326ec:	b.mi	327fc <PyInit__decimal@@Base+0x2bd48>  // b.first
   326f0:	ldr	x8, [x22, #16]
   326f4:	mov	x9, #0x1                   	// #1
   326f8:	movk	x9, #0xa764, lsl #16
   326fc:	movk	x9, #0xb6b3, lsl #32
   32700:	add	x8, x8, x2
   32704:	movk	x9, #0xde0, lsl #48
   32708:	cmp	x8, x9
   3270c:	b.lt	32850 <PyInit__decimal@@Base+0x2bd9c>  // b.tstop
   32710:	ldrb	w8, [x19]
   32714:	tbnz	w8, #5, 32758 <PyInit__decimal@@Base+0x2bca4>
   32718:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   3271c:	ldr	x9, [x19, #32]
   32720:	ldr	x1, [x21, #1344]
   32724:	cmp	x9, x1
   32728:	b.le	32758 <PyInit__decimal@@Base+0x2bca4>
   3272c:	strb	wzr, [x29, #28]
   32730:	ldr	x0, [x19, #40]
   32734:	add	x3, x29, #0x1c
   32738:	mov	w2, #0x8                   	// #8
   3273c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   32740:	str	x0, [x19, #40]
   32744:	ldrb	w8, [x29, #28]
   32748:	cbnz	w8, 32754 <PyInit__decimal@@Base+0x2bca0>
   3274c:	ldr	x8, [x21, #1344]
   32750:	str	x8, [x19, #32]
   32754:	ldrb	w8, [x19]
   32758:	and	w8, w8, #0xf0
   3275c:	orr	w8, w8, #0x4
   32760:	stp	xzr, xzr, [x19, #16]
   32764:	strb	w8, [x19]
   32768:	str	xzr, [x19, #8]
   3276c:	ldr	w8, [x20]
   32770:	orr	w8, w8, #0x100
   32774:	str	w8, [x20]
   32778:	b	32aec <PyInit__decimal@@Base+0x2c038>
   3277c:	mov	x0, x19
   32780:	mov	x3, x23
   32784:	ldp	x20, x19, [sp, #48]
   32788:	ldp	x22, x21, [sp, #32]
   3278c:	ldr	x23, [sp, #16]
   32790:	and	w1, w8, #0x1
   32794:	mov	x2, xzr
   32798:	ldp	x29, x30, [sp], #64
   3279c:	b	21f1c <PyInit__decimal@@Base+0x1b468>
   327a0:	cmp	x1, x10
   327a4:	b.le	327c0 <PyInit__decimal@@Base+0x2bd0c>
   327a8:	mov	x0, x19
   327ac:	mov	x2, x20
   327b0:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   327b4:	cbz	w0, 32aec <PyInit__decimal@@Base+0x2c038>
   327b8:	ldr	x9, [x22, #24]
   327bc:	ldrb	w8, [x22]
   327c0:	ldrb	w10, [x19]
   327c4:	ldr	x0, [x19, #40]
   327c8:	ldr	x23, [sp, #16]
   327cc:	bfxil	w10, w8, #0, #4
   327d0:	strb	w10, [x19]
   327d4:	ldur	q0, [x22, #8]
   327d8:	str	x9, [x19, #24]
   327dc:	stur	q0, [x19, #8]
   327e0:	ldr	x8, [x22, #24]
   327e4:	ldr	x1, [x22, #40]
   327e8:	ldp	x20, x19, [sp, #48]
   327ec:	ldp	x22, x21, [sp, #32]
   327f0:	lsl	x2, x8, #3
   327f4:	ldp	x29, x30, [sp], #64
   327f8:	b	63c0 <memcpy@plt>
   327fc:	neg	x2, x2
   32800:	mov	x0, x19
   32804:	mov	x1, x22
   32808:	mov	x3, x20
   3280c:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   32810:	cmn	x0, #0x1
   32814:	b.eq	32aec <PyInit__decimal@@Base+0x2c038>  // b.none
   32818:	str	x23, [x19, #8]
   3281c:	ldr	w8, [x21, #36]
   32820:	mov	x22, x0
   32824:	cmp	w8, #0x7
   32828:	b.hi	32ac4 <PyInit__decimal@@Base+0x2c010>  // b.pmore
   3282c:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   32830:	add	x9, x9, #0x732
   32834:	adr	x10, 32844 <PyInit__decimal@@Base+0x2bd90>
   32838:	ldrb	w11, [x9, x8]
   3283c:	add	x10, x10, x11, lsl #2
   32840:	br	x10
   32844:	cmp	x22, #0x0
   32848:	cset	w8, ne  // ne = any
   3284c:	b	32904 <PyInit__decimal@@Base+0x2be50>
   32850:	mov	x0, x19
   32854:	mov	x1, x22
   32858:	mov	x3, x20
   3285c:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   32860:	cbz	w0, 32aec <PyInit__decimal@@Base+0x2c038>
   32864:	str	x23, [x19, #8]
   32868:	b	32ae0 <PyInit__decimal@@Base+0x2c02c>
   3286c:	cbz	x22, 3295c <PyInit__decimal@@Base+0x2bea8>
   32870:	ldrb	w8, [x19]
   32874:	mvn	w8, w8
   32878:	and	w8, w8, #0x1
   3287c:	b	32904 <PyInit__decimal@@Base+0x2be50>
   32880:	cbz	x22, 3295c <PyInit__decimal@@Base+0x2bea8>
   32884:	ldrb	w8, [x19]
   32888:	and	w8, w8, #0x1
   3288c:	b	32904 <PyInit__decimal@@Base+0x2be50>
   32890:	cmp	x22, #0x4
   32894:	cset	w8, hi  // hi = pmore
   32898:	b	32904 <PyInit__decimal@@Base+0x2be50>
   3289c:	cmp	x22, #0x5
   328a0:	cset	w8, hi  // hi = pmore
   328a4:	b	32904 <PyInit__decimal@@Base+0x2be50>
   328a8:	cmp	x22, #0x5
   328ac:	b.hi	32908 <PyInit__decimal@@Base+0x2be54>  // b.pmore
   328b0:	b.ne	32ac4 <PyInit__decimal@@Base+0x2c010>  // b.any
   328b4:	ldr	x8, [x19, #40]
   328b8:	ldr	w8, [x8]
   328bc:	and	w8, w8, #0x1
   328c0:	b	32904 <PyInit__decimal@@Base+0x2be50>
   328c4:	ldr	x8, [x19, #40]
   328c8:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   328cc:	movk	x9, #0xcccd
   328d0:	mov	w10, #0xa                   	// #10
   328d4:	ldr	x8, [x8]
   328d8:	cmp	x22, #0x0
   328dc:	cset	w11, ne  // ne = any
   328e0:	umulh	x9, x8, x9
   328e4:	lsr	x9, x9, #3
   328e8:	msub	w8, w9, w10, w8
   328ec:	cmp	w8, #0x0
   328f0:	cset	w9, eq  // eq = none
   328f4:	cmp	w8, #0x5
   328f8:	cset	w8, eq  // eq = none
   328fc:	orr	w8, w9, w8
   32900:	and	w8, w11, w8
   32904:	cbz	w8, 32ac4 <PyInit__decimal@@Base+0x2c010>
   32908:	ldr	x0, [x19, #40]
   3290c:	ldr	x1, [x19, #24]
   32910:	bl	1b324 <PyInit__decimal@@Base+0x14870>
   32914:	cbz	x0, 32950 <PyInit__decimal@@Base+0x2be9c>
   32918:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   3291c:	ldr	x10, [x9, #1344]
   32920:	ldp	x8, x9, [x19, #24]
   32924:	add	x11, x8, #0x1
   32928:	cmp	x10, x11
   3292c:	csinc	x1, x10, x8, ge  // ge = tcont
   32930:	cmp	x1, x9
   32934:	b.eq	32984 <PyInit__decimal@@Base+0x2bed0>  // b.none
   32938:	ldrb	w10, [x19]
   3293c:	tbnz	w10, #5, 32968 <PyInit__decimal@@Base+0x2beb4>
   32940:	mov	x0, x19
   32944:	mov	x2, x20
   32948:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   3294c:	b	3297c <PyInit__decimal@@Base+0x2bec8>
   32950:	ldr	x9, [x19, #40]
   32954:	ldr	x8, [x19, #24]
   32958:	b	3299c <PyInit__decimal@@Base+0x2bee8>
   3295c:	ldr	w8, [x20]
   32960:	orr	w8, w8, #0x1000
   32964:	b	32adc <PyInit__decimal@@Base+0x2c028>
   32968:	cmp	x1, x9
   3296c:	b.le	32984 <PyInit__decimal@@Base+0x2bed0>
   32970:	mov	x0, x19
   32974:	mov	x2, x20
   32978:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   3297c:	cbz	w0, 32ac4 <PyInit__decimal@@Base+0x2c010>
   32980:	ldr	x8, [x19, #24]
   32984:	ldr	x9, [x19, #40]
   32988:	mov	w10, #0x1                   	// #1
   3298c:	str	x10, [x9, x8, lsl #3]
   32990:	ldr	x8, [x19, #24]
   32994:	add	x8, x8, #0x1
   32998:	str	x8, [x19, #24]
   3299c:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   329a0:	add	x9, x9, x8, lsl #3
   329a4:	add	x10, x10, #0x370
   329a8:	ldur	x9, [x9, #-8]
   329ac:	ldr	x11, [x10, #72]
   329b0:	cmp	x11, x9
   329b4:	b.ls	329e0 <PyInit__decimal@@Base+0x2bf2c>  // b.plast
   329b8:	ldr	x11, [x10, #32]
   329bc:	cmp	x11, x9
   329c0:	b.ls	32a08 <PyInit__decimal@@Base+0x2bf54>  // b.plast
   329c4:	ldr	x11, [x10, #16]
   329c8:	cmp	x11, x9
   329cc:	b.ls	32a4c <PyInit__decimal@@Base+0x2bf98>  // b.plast
   329d0:	ldr	x10, [x10, #8]
   329d4:	cmp	x10, x9
   329d8:	mov	w9, #0x1                   	// #1
   329dc:	b	32ab0 <PyInit__decimal@@Base+0x2bffc>
   329e0:	ldr	x11, [x10, #112]
   329e4:	cmp	x11, x9
   329e8:	b.ls	32a24 <PyInit__decimal@@Base+0x2bf70>  // b.plast
   329ec:	ldr	x11, [x10, #88]
   329f0:	cmp	x11, x9
   329f4:	b.ls	32a5c <PyInit__decimal@@Base+0x2bfa8>  // b.plast
   329f8:	ldr	x10, [x10, #80]
   329fc:	cmp	x10, x9
   32a00:	mov	w9, #0xa                   	// #10
   32a04:	b	32ab0 <PyInit__decimal@@Base+0x2bffc>
   32a08:	ldr	x11, [x10, #48]
   32a0c:	cmp	x11, x9
   32a10:	b.ls	32a78 <PyInit__decimal@@Base+0x2bfc4>  // b.plast
   32a14:	ldr	x10, [x10, #40]
   32a18:	cmp	x10, x9
   32a1c:	mov	w9, #0x5                   	// #5
   32a20:	b	32ab0 <PyInit__decimal@@Base+0x2bffc>
   32a24:	ldr	x11, [x10, #144]
   32a28:	cmp	x11, x9
   32a2c:	b.ls	32a94 <PyInit__decimal@@Base+0x2bfe0>  // b.plast
   32a30:	ldr	x11, [x10, #128]
   32a34:	cmp	x11, x9
   32a38:	b.ls	32aa4 <PyInit__decimal@@Base+0x2bff0>  // b.plast
   32a3c:	ldr	x10, [x10, #120]
   32a40:	cmp	x10, x9
   32a44:	mov	w9, #0xf                   	// #15
   32a48:	b	32ab0 <PyInit__decimal@@Base+0x2bffc>
   32a4c:	ldr	x10, [x10, #24]
   32a50:	cmp	x10, x9
   32a54:	mov	w9, #0x3                   	// #3
   32a58:	b	32ab0 <PyInit__decimal@@Base+0x2bffc>
   32a5c:	ldr	x11, [x10, #104]
   32a60:	cmp	x11, x9
   32a64:	b.ls	32b38 <PyInit__decimal@@Base+0x2c084>  // b.plast
   32a68:	ldr	x10, [x10, #96]
   32a6c:	cmp	x10, x9
   32a70:	mov	w9, #0xc                   	// #12
   32a74:	b	32ab0 <PyInit__decimal@@Base+0x2bffc>
   32a78:	ldr	x11, [x10, #64]
   32a7c:	cmp	x11, x9
   32a80:	b.ls	32b40 <PyInit__decimal@@Base+0x2c08c>  // b.plast
   32a84:	ldr	x10, [x10, #56]
   32a88:	cmp	x10, x9
   32a8c:	mov	w9, #0x7                   	// #7
   32a90:	b	32ab0 <PyInit__decimal@@Base+0x2bffc>
   32a94:	ldr	x10, [x10, #152]
   32a98:	cmp	x10, x9
   32a9c:	mov	w9, #0x13                  	// #19
   32aa0:	b	32ab0 <PyInit__decimal@@Base+0x2bffc>
   32aa4:	ldr	x10, [x10, #136]
   32aa8:	cmp	x10, x9
   32aac:	mov	w9, #0x11                  	// #17
   32ab0:	cinc	x9, x9, ls  // ls = plast
   32ab4:	mov	w10, #0x13                  	// #19
   32ab8:	madd	x8, x8, x10, x9
   32abc:	sub	x8, x8, #0x13
   32ac0:	str	x8, [x19, #16]
   32ac4:	ldr	w8, [x20]
   32ac8:	orr	w9, w8, #0x1000
   32acc:	str	w9, [x20]
   32ad0:	cbz	x22, 32ae0 <PyInit__decimal@@Base+0x2c02c>
   32ad4:	mov	w9, #0x1040                	// #4160
   32ad8:	orr	w8, w8, w9
   32adc:	str	w8, [x20]
   32ae0:	ldrb	w8, [x19]
   32ae4:	tst	w8, #0xe
   32ae8:	b.eq	32b00 <PyInit__decimal@@Base+0x2c04c>  // b.none
   32aec:	ldp	x20, x19, [sp, #48]
   32af0:	ldp	x22, x21, [sp, #32]
   32af4:	ldr	x23, [sp, #16]
   32af8:	ldp	x29, x30, [sp], #64
   32afc:	ret
   32b00:	ldr	x8, [x19, #40]
   32b04:	ldr	x9, [x19, #24]
   32b08:	add	x8, x8, x9, lsl #3
   32b0c:	ldur	x8, [x8, #-8]
   32b10:	cbz	x8, 32aec <PyInit__decimal@@Base+0x2c038>
   32b14:	ldp	x8, x9, [x19, #8]
   32b18:	ldr	x10, [x21, #16]
   32b1c:	add	x8, x8, x9
   32b20:	sub	x8, x8, #0x1
   32b24:	cmp	x8, x10
   32b28:	b.ge	32aec <PyInit__decimal@@Base+0x2c038>  // b.tcont
   32b2c:	ldr	w8, [x20]
   32b30:	orr	w8, w8, #0x2000
   32b34:	b	32774 <PyInit__decimal@@Base+0x2bcc0>
   32b38:	mov	w9, #0xe                   	// #14
   32b3c:	b	32ab4 <PyInit__decimal@@Base+0x2c000>
   32b40:	mov	w9, #0x9                   	// #9
   32b44:	b	32ab4 <PyInit__decimal@@Base+0x2c000>
   32b48:	stp	x29, x30, [sp, #-48]!
   32b4c:	str	x21, [sp, #16]
   32b50:	stp	x20, x19, [sp, #32]
   32b54:	mov	x29, sp
   32b58:	mov	x8, #0xfffc                	// #65532
   32b5c:	movk	x8, #0xf62b, lsl #16
   32b60:	mov	x9, #0xfffd                	// #65533
   32b64:	movk	x8, #0x241a, lsl #32
   32b68:	movk	x9, #0x9d8f, lsl #16
   32b6c:	movk	x8, #0x29a2, lsl #48
   32b70:	movk	x9, #0xdace, lsl #32
   32b74:	add	x8, x2, x8
   32b78:	movk	x9, #0x3782, lsl #48
   32b7c:	mov	x19, x4
   32b80:	cmp	x8, x9
   32b84:	mov	x20, x0
   32b88:	b.cc	32c04 <PyInit__decimal@@Base+0x2c150>  // b.lo, b.ul, b.last
   32b8c:	ldrb	w8, [x20]
   32b90:	tbnz	w8, #5, 32bd4 <PyInit__decimal@@Base+0x2c120>
   32b94:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   32b98:	ldr	x9, [x20, #32]
   32b9c:	ldr	x1, [x21, #1344]
   32ba0:	cmp	x9, x1
   32ba4:	b.le	32bd4 <PyInit__decimal@@Base+0x2c120>
   32ba8:	strb	wzr, [x29, #28]
   32bac:	ldr	x0, [x20, #40]
   32bb0:	add	x3, x29, #0x1c
   32bb4:	mov	w2, #0x8                   	// #8
   32bb8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   32bbc:	str	x0, [x20, #40]
   32bc0:	ldrb	w8, [x29, #28]
   32bc4:	cbnz	w8, 32bd0 <PyInit__decimal@@Base+0x2c11c>
   32bc8:	ldr	x8, [x21, #1344]
   32bcc:	str	x8, [x20, #32]
   32bd0:	ldrb	w8, [x20]
   32bd4:	and	w8, w8, #0xf0
   32bd8:	orr	w8, w8, #0x4
   32bdc:	stp	xzr, xzr, [x20, #16]
   32be0:	strb	w8, [x20]
   32be4:	str	xzr, [x20, #8]
   32be8:	ldr	w8, [x19]
   32bec:	ldr	x21, [sp, #16]
   32bf0:	orr	w8, w8, #0x100
   32bf4:	str	w8, [x19]
   32bf8:	ldp	x20, x19, [sp, #32]
   32bfc:	ldp	x29, x30, [sp], #48
   32c00:	ret
   32c04:	mov	x0, x20
   32c08:	mov	x4, x19
   32c0c:	ldp	x20, x19, [sp, #32]
   32c10:	ldr	x21, [sp, #16]
   32c14:	ldp	x29, x30, [sp], #48
   32c18:	b	32658 <PyInit__decimal@@Base+0x2bba4>
   32c1c:	mov	x4, x3
   32c20:	mov	x3, x2
   32c24:	mov	x2, x1
   32c28:	mov	x1, x0
   32c2c:	mov	w0, wzr
   32c30:	b	32c34 <PyInit__decimal@@Base+0x2c180>
   32c34:	stp	x29, x30, [sp, #-64]!
   32c38:	str	x23, [sp, #16]
   32c3c:	stp	x22, x21, [sp, #32]
   32c40:	stp	x20, x19, [sp, #48]
   32c44:	mov	x29, sp
   32c48:	ldrb	w8, [x2]
   32c4c:	mov	x20, x4
   32c50:	mov	x23, x3
   32c54:	mov	x22, x2
   32c58:	mov	x19, x1
   32c5c:	tst	w8, #0xe
   32c60:	b.eq	32cc0 <PyInit__decimal@@Base+0x2c20c>  // b.none
   32c64:	mov	x0, x19
   32c68:	mov	x1, x22
   32c6c:	mov	x2, x23
   32c70:	mov	x3, x20
   32c74:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   32c78:	cmp	x19, x22
   32c7c:	b.eq	330ac <PyInit__decimal@@Base+0x2c5f8>  // b.none
   32c80:	cbnz	w0, 330ac <PyInit__decimal@@Base+0x2c5f8>
   32c84:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   32c88:	ldr	x8, [x22, #24]
   32c8c:	ldr	x10, [x9, #1344]
   32c90:	ldr	x9, [x19, #32]
   32c94:	cmp	x10, x8
   32c98:	csel	x1, x8, x10, lt  // lt = tstop
   32c9c:	cmp	x1, x9
   32ca0:	b.eq	32d9c <PyInit__decimal@@Base+0x2c2e8>  // b.none
   32ca4:	ldrb	w10, [x19]
   32ca8:	tbnz	w10, #5, 32d80 <PyInit__decimal@@Base+0x2c2cc>
   32cac:	mov	x0, x19
   32cb0:	mov	x2, x20
   32cb4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   32cb8:	cbnz	w0, 32d98 <PyInit__decimal@@Base+0x2c2e4>
   32cbc:	b	330ac <PyInit__decimal@@Base+0x2c5f8>
   32cc0:	ldr	x9, [x22, #8]
   32cc4:	tbnz	x9, #63, 32d0c <PyInit__decimal@@Base+0x2c258>
   32cc8:	cmp	x19, x22
   32ccc:	b.eq	330ac <PyInit__decimal@@Base+0x2c5f8>  // b.none
   32cd0:	adrp	x11, 53000 <PyInit__decimal@@Base+0x4c54c>
   32cd4:	ldr	x10, [x22, #24]
   32cd8:	ldr	x12, [x11, #1344]
   32cdc:	ldr	x11, [x19, #32]
   32ce0:	cmp	x12, x10
   32ce4:	csel	x1, x10, x12, lt  // lt = tstop
   32ce8:	cmp	x1, x11
   32cec:	b.eq	32e04 <PyInit__decimal@@Base+0x2c350>  // b.none
   32cf0:	ldrb	w12, [x19]
   32cf4:	tbnz	w12, #5, 32de0 <PyInit__decimal@@Base+0x2c32c>
   32cf8:	mov	x0, x19
   32cfc:	mov	x2, x20
   32d00:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   32d04:	cbnz	w0, 32df8 <PyInit__decimal@@Base+0x2c344>
   32d08:	b	330ac <PyInit__decimal@@Base+0x2c5f8>
   32d0c:	ldr	x10, [x22, #40]
   32d10:	ldr	x11, [x22, #24]
   32d14:	add	x10, x10, x11, lsl #3
   32d18:	ldur	x10, [x10, #-8]
   32d1c:	cbz	x10, 32dbc <PyInit__decimal@@Base+0x2c308>
   32d20:	mov	w21, w0
   32d24:	neg	x2, x9
   32d28:	mov	x0, x19
   32d2c:	mov	x1, x22
   32d30:	mov	x3, x20
   32d34:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   32d38:	cmn	x0, #0x1
   32d3c:	b.eq	330ac <PyInit__decimal@@Base+0x2c5f8>  // b.none
   32d40:	cmp	w21, #0x1
   32d44:	str	xzr, [x19, #8]
   32d48:	b.hi	330ac <PyInit__decimal@@Base+0x2c5f8>  // b.pmore
   32d4c:	ldr	w8, [x23, #36]
   32d50:	mov	x22, x0
   32d54:	cmp	w8, #0x7
   32d58:	b.hi	3308c <PyInit__decimal@@Base+0x2c5d8>  // b.pmore
   32d5c:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   32d60:	add	x9, x9, #0x73a
   32d64:	adr	x10, 32d74 <PyInit__decimal@@Base+0x2c2c0>
   32d68:	ldrb	w11, [x9, x8]
   32d6c:	add	x10, x10, x11, lsl #2
   32d70:	br	x10
   32d74:	cmp	x22, #0x0
   32d78:	cset	w8, ne  // ne = any
   32d7c:	b	32ed8 <PyInit__decimal@@Base+0x2c424>
   32d80:	cmp	x1, x9
   32d84:	b.le	32d9c <PyInit__decimal@@Base+0x2c2e8>
   32d88:	mov	x0, x19
   32d8c:	mov	x2, x20
   32d90:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   32d94:	cbz	w0, 330ac <PyInit__decimal@@Base+0x2c5f8>
   32d98:	ldr	x8, [x22, #24]
   32d9c:	ldrb	w9, [x22]
   32da0:	ldrb	w10, [x19]
   32da4:	bfxil	w10, w9, #0, #4
   32da8:	strb	w10, [x19]
   32dac:	ldur	q0, [x22, #8]
   32db0:	str	x8, [x19, #24]
   32db4:	stur	q0, [x19, #8]
   32db8:	b	32e1c <PyInit__decimal@@Base+0x2c368>
   32dbc:	mov	x0, x19
   32dc0:	ldp	x20, x19, [sp, #48]
   32dc4:	ldp	x22, x21, [sp, #32]
   32dc8:	ldr	x23, [sp, #16]
   32dcc:	and	w1, w8, #0x1
   32dd0:	mov	x2, xzr
   32dd4:	mov	x3, xzr
   32dd8:	ldp	x29, x30, [sp], #64
   32ddc:	b	21f1c <PyInit__decimal@@Base+0x1b468>
   32de0:	cmp	x1, x11
   32de4:	b.le	32e04 <PyInit__decimal@@Base+0x2c350>
   32de8:	mov	x0, x19
   32dec:	mov	x2, x20
   32df0:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   32df4:	cbz	w0, 330ac <PyInit__decimal@@Base+0x2c5f8>
   32df8:	ldr	x10, [x22, #24]
   32dfc:	ldrb	w8, [x22]
   32e00:	ldr	x9, [x22, #8]
   32e04:	ldrb	w11, [x19]
   32e08:	str	x9, [x19, #8]
   32e0c:	bfxil	w11, w8, #0, #4
   32e10:	strb	w11, [x19]
   32e14:	ldr	x8, [x22, #16]
   32e18:	stp	x8, x10, [x19, #16]
   32e1c:	ldr	x8, [x22, #24]
   32e20:	ldr	x0, [x19, #40]
   32e24:	ldr	x1, [x22, #40]
   32e28:	ldp	x20, x19, [sp, #48]
   32e2c:	ldp	x22, x21, [sp, #32]
   32e30:	ldr	x23, [sp, #16]
   32e34:	lsl	x2, x8, #3
   32e38:	ldp	x29, x30, [sp], #64
   32e3c:	b	63c0 <memcpy@plt>
   32e40:	cbz	x22, 3308c <PyInit__decimal@@Base+0x2c5d8>
   32e44:	ldrb	w8, [x19]
   32e48:	mvn	w8, w8
   32e4c:	and	w8, w8, #0x1
   32e50:	b	32ed8 <PyInit__decimal@@Base+0x2c424>
   32e54:	cbz	x22, 3308c <PyInit__decimal@@Base+0x2c5d8>
   32e58:	ldrb	w8, [x19]
   32e5c:	and	w8, w8, #0x1
   32e60:	b	32ed8 <PyInit__decimal@@Base+0x2c424>
   32e64:	cmp	x22, #0x4
   32e68:	cset	w8, hi  // hi = pmore
   32e6c:	b	32ed8 <PyInit__decimal@@Base+0x2c424>
   32e70:	cmp	x22, #0x5
   32e74:	cset	w8, hi  // hi = pmore
   32e78:	b	32ed8 <PyInit__decimal@@Base+0x2c424>
   32e7c:	cmp	x22, #0x5
   32e80:	b.hi	32edc <PyInit__decimal@@Base+0x2c428>  // b.pmore
   32e84:	b.ne	3308c <PyInit__decimal@@Base+0x2c5d8>  // b.any
   32e88:	ldr	x8, [x19, #40]
   32e8c:	ldr	w8, [x8]
   32e90:	and	w8, w8, #0x1
   32e94:	b	32ed8 <PyInit__decimal@@Base+0x2c424>
   32e98:	ldr	x8, [x19, #40]
   32e9c:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   32ea0:	movk	x9, #0xcccd
   32ea4:	mov	w10, #0xa                   	// #10
   32ea8:	ldr	x8, [x8]
   32eac:	cmp	x22, #0x0
   32eb0:	cset	w11, ne  // ne = any
   32eb4:	umulh	x9, x8, x9
   32eb8:	lsr	x9, x9, #3
   32ebc:	msub	w8, w9, w10, w8
   32ec0:	cmp	w8, #0x0
   32ec4:	cset	w9, eq  // eq = none
   32ec8:	cmp	w8, #0x5
   32ecc:	cset	w8, eq  // eq = none
   32ed0:	orr	w8, w9, w8
   32ed4:	and	w8, w11, w8
   32ed8:	cbz	w8, 3308c <PyInit__decimal@@Base+0x2c5d8>
   32edc:	ldr	x0, [x19, #40]
   32ee0:	ldr	x1, [x19, #24]
   32ee4:	bl	1b324 <PyInit__decimal@@Base+0x14870>
   32ee8:	cbz	x0, 32f24 <PyInit__decimal@@Base+0x2c470>
   32eec:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   32ef0:	ldr	x10, [x9, #1344]
   32ef4:	ldp	x8, x9, [x19, #24]
   32ef8:	add	x11, x8, #0x1
   32efc:	cmp	x10, x11
   32f00:	csinc	x1, x10, x8, ge  // ge = tcont
   32f04:	cmp	x1, x9
   32f08:	b.eq	32f4c <PyInit__decimal@@Base+0x2c498>  // b.none
   32f0c:	ldrb	w10, [x19]
   32f10:	tbnz	w10, #5, 32f30 <PyInit__decimal@@Base+0x2c47c>
   32f14:	mov	x0, x19
   32f18:	mov	x2, x20
   32f1c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   32f20:	b	32f44 <PyInit__decimal@@Base+0x2c490>
   32f24:	ldr	x9, [x19, #40]
   32f28:	ldr	x8, [x19, #24]
   32f2c:	b	32f64 <PyInit__decimal@@Base+0x2c4b0>
   32f30:	cmp	x1, x9
   32f34:	b.le	32f4c <PyInit__decimal@@Base+0x2c498>
   32f38:	mov	x0, x19
   32f3c:	mov	x2, x20
   32f40:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   32f44:	cbz	w0, 3308c <PyInit__decimal@@Base+0x2c5d8>
   32f48:	ldr	x8, [x19, #24]
   32f4c:	ldr	x9, [x19, #40]
   32f50:	mov	w10, #0x1                   	// #1
   32f54:	str	x10, [x9, x8, lsl #3]
   32f58:	ldr	x8, [x19, #24]
   32f5c:	add	x8, x8, #0x1
   32f60:	str	x8, [x19, #24]
   32f64:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   32f68:	add	x9, x9, x8, lsl #3
   32f6c:	add	x10, x10, #0x370
   32f70:	ldur	x9, [x9, #-8]
   32f74:	ldr	x11, [x10, #72]
   32f78:	cmp	x11, x9
   32f7c:	b.ls	32fa8 <PyInit__decimal@@Base+0x2c4f4>  // b.plast
   32f80:	ldr	x11, [x10, #32]
   32f84:	cmp	x11, x9
   32f88:	b.ls	32fd0 <PyInit__decimal@@Base+0x2c51c>  // b.plast
   32f8c:	ldr	x11, [x10, #16]
   32f90:	cmp	x11, x9
   32f94:	b.ls	33014 <PyInit__decimal@@Base+0x2c560>  // b.plast
   32f98:	ldr	x10, [x10, #8]
   32f9c:	cmp	x10, x9
   32fa0:	mov	w9, #0x1                   	// #1
   32fa4:	b	33078 <PyInit__decimal@@Base+0x2c5c4>
   32fa8:	ldr	x11, [x10, #112]
   32fac:	cmp	x11, x9
   32fb0:	b.ls	32fec <PyInit__decimal@@Base+0x2c538>  // b.plast
   32fb4:	ldr	x11, [x10, #88]
   32fb8:	cmp	x11, x9
   32fbc:	b.ls	33024 <PyInit__decimal@@Base+0x2c570>  // b.plast
   32fc0:	ldr	x10, [x10, #80]
   32fc4:	cmp	x10, x9
   32fc8:	mov	w9, #0xa                   	// #10
   32fcc:	b	33078 <PyInit__decimal@@Base+0x2c5c4>
   32fd0:	ldr	x11, [x10, #48]
   32fd4:	cmp	x11, x9
   32fd8:	b.ls	33040 <PyInit__decimal@@Base+0x2c58c>  // b.plast
   32fdc:	ldr	x10, [x10, #40]
   32fe0:	cmp	x10, x9
   32fe4:	mov	w9, #0x5                   	// #5
   32fe8:	b	33078 <PyInit__decimal@@Base+0x2c5c4>
   32fec:	ldr	x11, [x10, #144]
   32ff0:	cmp	x11, x9
   32ff4:	b.ls	3305c <PyInit__decimal@@Base+0x2c5a8>  // b.plast
   32ff8:	ldr	x11, [x10, #128]
   32ffc:	cmp	x11, x9
   33000:	b.ls	3306c <PyInit__decimal@@Base+0x2c5b8>  // b.plast
   33004:	ldr	x10, [x10, #120]
   33008:	cmp	x10, x9
   3300c:	mov	w9, #0xf                   	// #15
   33010:	b	33078 <PyInit__decimal@@Base+0x2c5c4>
   33014:	ldr	x10, [x10, #24]
   33018:	cmp	x10, x9
   3301c:	mov	w9, #0x3                   	// #3
   33020:	b	33078 <PyInit__decimal@@Base+0x2c5c4>
   33024:	ldr	x11, [x10, #104]
   33028:	cmp	x11, x9
   3302c:	b.ls	330c0 <PyInit__decimal@@Base+0x2c60c>  // b.plast
   33030:	ldr	x10, [x10, #96]
   33034:	cmp	x10, x9
   33038:	mov	w9, #0xc                   	// #12
   3303c:	b	33078 <PyInit__decimal@@Base+0x2c5c4>
   33040:	ldr	x11, [x10, #64]
   33044:	cmp	x11, x9
   33048:	b.ls	330c8 <PyInit__decimal@@Base+0x2c614>  // b.plast
   3304c:	ldr	x10, [x10, #56]
   33050:	cmp	x10, x9
   33054:	mov	w9, #0x7                   	// #7
   33058:	b	33078 <PyInit__decimal@@Base+0x2c5c4>
   3305c:	ldr	x10, [x10, #152]
   33060:	cmp	x10, x9
   33064:	mov	w9, #0x13                  	// #19
   33068:	b	33078 <PyInit__decimal@@Base+0x2c5c4>
   3306c:	ldr	x10, [x10, #136]
   33070:	cmp	x10, x9
   33074:	mov	w9, #0x11                  	// #17
   33078:	cinc	x9, x9, ls  // ls = plast
   3307c:	mov	w10, #0x13                  	// #19
   33080:	madd	x8, x8, x10, x9
   33084:	sub	x8, x8, #0x13
   33088:	str	x8, [x19, #16]
   3308c:	cbnz	w21, 330ac <PyInit__decimal@@Base+0x2c5f8>
   33090:	ldr	w8, [x20]
   33094:	orr	w9, w8, #0x1000
   33098:	str	w9, [x20]
   3309c:	cbz	x22, 330ac <PyInit__decimal@@Base+0x2c5f8>
   330a0:	mov	w9, #0x1040                	// #4160
   330a4:	orr	w8, w8, w9
   330a8:	str	w8, [x20]
   330ac:	ldp	x20, x19, [sp, #48]
   330b0:	ldp	x22, x21, [sp, #32]
   330b4:	ldr	x23, [sp, #16]
   330b8:	ldp	x29, x30, [sp], #64
   330bc:	ret
   330c0:	mov	w9, #0xe                   	// #14
   330c4:	b	3307c <PyInit__decimal@@Base+0x2c5c8>
   330c8:	mov	w9, #0x9                   	// #9
   330cc:	b	3307c <PyInit__decimal@@Base+0x2c5c8>
   330d0:	mov	x8, x0
   330d4:	mov	x4, x3
   330d8:	mov	x3, x2
   330dc:	mov	w0, #0x2                   	// #2
   330e0:	mov	x2, x1
   330e4:	mov	x1, x8
   330e8:	b	32c34 <PyInit__decimal@@Base+0x2c180>
   330ec:	sub	sp, sp, #0x40
   330f0:	stp	x29, x30, [sp, #48]
   330f4:	add	x29, sp, #0x30
   330f8:	ldp	q1, q0, [x2, #16]
   330fc:	ldr	q2, [x2]
   33100:	mov	x8, x1
   33104:	mov	x4, x3
   33108:	mov	x1, x0
   3310c:	mov	w9, #0x3                   	// #3
   33110:	mov	x3, sp
   33114:	mov	w0, #0x1                   	// #1
   33118:	mov	x2, x8
   3311c:	stp	q1, q0, [sp, #16]
   33120:	str	q2, [sp]
   33124:	str	w9, [sp, #36]
   33128:	bl	32c34 <PyInit__decimal@@Base+0x2c180>
   3312c:	ldp	x29, x30, [sp, #48]
   33130:	add	sp, sp, #0x40
   33134:	ret
   33138:	sub	sp, sp, #0x40
   3313c:	stp	x29, x30, [sp, #48]
   33140:	add	x29, sp, #0x30
   33144:	ldp	q1, q0, [x2, #16]
   33148:	ldr	q2, [x2]
   3314c:	mov	x8, x1
   33150:	mov	x4, x3
   33154:	mov	x1, x0
   33158:	mov	w9, #0x2                   	// #2
   3315c:	mov	x3, sp
   33160:	mov	w0, #0x1                   	// #1
   33164:	mov	x2, x8
   33168:	stp	q1, q0, [sp, #16]
   3316c:	str	q2, [sp]
   33170:	str	w9, [sp, #36]
   33174:	bl	32c34 <PyInit__decimal@@Base+0x2c180>
   33178:	ldp	x29, x30, [sp, #48]
   3317c:	add	sp, sp, #0x40
   33180:	ret
   33184:	ldrb	w8, [x0]
   33188:	tst	w8, #0xe
   3318c:	b.ne	3319c <PyInit__decimal@@Base+0x2c6e8>  // b.any
   33190:	ldrb	w9, [x1]
   33194:	tst	w9, #0xe
   33198:	b.eq	331d0 <PyInit__decimal@@Base+0x2c71c>  // b.none
   3319c:	tst	w8, #0xc
   331a0:	b.eq	331b8 <PyInit__decimal@@Base+0x2c704>  // b.none
   331a4:	ldrb	w9, [x1]
   331a8:	tst	w9, #0xc
   331ac:	b.eq	331b8 <PyInit__decimal@@Base+0x2c704>  // b.none
   331b0:	mov	w0, #0x1                   	// #1
   331b4:	ret
   331b8:	tbnz	w8, #1, 331c4 <PyInit__decimal@@Base+0x2c710>
   331bc:	mov	w0, wzr
   331c0:	ret
   331c4:	ldrb	w8, [x1]
   331c8:	ubfx	w0, w8, #1, #1
   331cc:	ret
   331d0:	ldr	x8, [x0, #8]
   331d4:	ldr	x9, [x1, #8]
   331d8:	cmp	x8, x9
   331dc:	cset	w0, eq  // eq = none
   331e0:	ret
   331e4:	stp	x29, x30, [sp, #-96]!
   331e8:	stp	x28, x27, [sp, #16]
   331ec:	stp	x26, x25, [sp, #32]
   331f0:	stp	x24, x23, [sp, #48]
   331f4:	stp	x22, x21, [sp, #64]
   331f8:	stp	x20, x19, [sp, #80]
   331fc:	mov	x29, sp
   33200:	sub	sp, sp, #0x770
   33204:	ldrb	w8, [x1]
   33208:	mov	x19, x3
   3320c:	mov	x21, x2
   33210:	mov	x23, x1
   33214:	tst	w8, #0xe
   33218:	mov	x20, x0
   3321c:	b.eq	33270 <PyInit__decimal@@Base+0x2c7bc>  // b.none
   33220:	mov	x0, x20
   33224:	mov	x1, x23
   33228:	mov	x2, x21
   3322c:	mov	x3, x19
   33230:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   33234:	cbnz	w0, 33b24 <PyInit__decimal@@Base+0x2d070>
   33238:	ldrb	w8, [x23]
   3323c:	tbnz	w8, #0, 33374 <PyInit__decimal@@Base+0x2c8c0>
   33240:	ldr	x8, [x21, #16]
   33244:	ldr	x9, [x21]
   33248:	mov	x0, x20
   3324c:	mov	w1, wzr
   33250:	mov	x2, xzr
   33254:	sub	x8, x8, x9
   33258:	add	x3, x8, #0x1
   3325c:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   33260:	ldr	w8, [x19]
   33264:	orr	w8, w8, #0x1
   33268:	str	w8, [x19]
   3326c:	b	33b24 <PyInit__decimal@@Base+0x2d070>
   33270:	ldr	x10, [x23, #40]
   33274:	ldr	x0, [x23, #24]
   33278:	and	w22, w8, #0x1
   3327c:	add	x9, x10, x0, lsl #3
   33280:	ldur	x9, [x9, #-8]
   33284:	cbz	x9, 333e0 <PyInit__decimal@@Base+0x2c92c>
   33288:	cbnz	w22, 33374 <PyInit__decimal@@Base+0x2c8c0>
   3328c:	mov	w9, #0x50                  	// #80
   33290:	bfxil	w9, w8, #0, #4
   33294:	ldr	x24, [x21]
   33298:	stur	wzr, [x29, #-12]
   3329c:	mov	x25, x23
   332a0:	sturb	w9, [x29, #-160]
   332a4:	ldr	x8, [x25, #8]!
   332a8:	adrp	x14, 40000 <PyInit__decimal@@Base+0x3954c>
   332ac:	ldr	x9, [x23, #16]
   332b0:	ldr	q1, [x14, #112]
   332b4:	mov	w13, #0x1                   	// #1
   332b8:	add	x11, sp, #0x200
   332bc:	mov	w12, #0x90                  	// #144
   332c0:	adrp	x15, 38000 <PyInit__decimal@@Base+0x3154c>
   332c4:	dup	v0.2d, x13
   332c8:	stp	x8, x9, [x29, #-152]
   332cc:	stur	x0, [x29, #-136]
   332d0:	ldr	x14, [x23, #32]
   332d4:	strb	w12, [sp, #568]
   332d8:	stp	q1, q0, [x11, #64]
   332dc:	ldr	q1, [x15, #3296]
   332e0:	and	x15, x8, #0xfffffffffffffffe
   332e4:	neg	x16, x15
   332e8:	cmp	x16, #0x0
   332ec:	sub	x13, x13, x15
   332f0:	csneg	x26, x13, x15, lt  // lt = tstop
   332f4:	add	x13, sp, #0x4d0
   332f8:	str	x13, [sp, #1224]
   332fc:	mov	w13, #0x30                  	// #48
   33300:	strb	w13, [sp, #1184]
   33304:	strb	w13, [sp, #624]
   33308:	mov	w13, #0x40                  	// #64
   3330c:	str	x13, [sp, #1216]
   33310:	str	x13, [sp, #656]
   33314:	add	x13, sp, #0x2a0
   33318:	str	x13, [sp, #664]
   3331c:	mov	w13, #0x5                   	// #5
   33320:	str	x13, [sp, #616]
   33324:	add	x13, sp, #0x268
   33328:	str	x13, [sp, #608]
   3332c:	mov	w13, #0x3                   	// #3
   33330:	strb	w12, [sp, #512]
   33334:	stur	q0, [x11, #24]
   33338:	stur	q1, [x11, #8]
   3333c:	add	x11, sp, #0x230
   33340:	cmp	x20, x23
   33344:	str	xzr, [sp, #1208]
   33348:	str	xzr, [sp, #648]
   3334c:	str	x13, [sp, #560]
   33350:	str	xzr, [sp, #1192]
   33354:	str	xzr, [sp, #1200]
   33358:	str	xzr, [sp, #632]
   3335c:	str	xzr, [sp, #640]
   33360:	stp	x14, x10, [x29, #-128]
   33364:	str	x11, [sp, #552]
   33368:	b.eq	33450 <PyInit__decimal@@Base+0x2c99c>  // b.none
   3336c:	sub	x22, x29, #0xa0
   33370:	b	33498 <PyInit__decimal@@Base+0x2c9e4>
   33374:	ldrb	w8, [x20]
   33378:	tbnz	w8, #5, 333bc <PyInit__decimal@@Base+0x2c908>
   3337c:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   33380:	ldr	x9, [x20, #32]
   33384:	ldr	x1, [x21, #1344]
   33388:	cmp	x9, x1
   3338c:	b.le	333bc <PyInit__decimal@@Base+0x2c908>
   33390:	strb	wzr, [sp, #1232]
   33394:	ldr	x0, [x20, #40]
   33398:	add	x3, sp, #0x4d0
   3339c:	mov	w2, #0x8                   	// #8
   333a0:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   333a4:	str	x0, [x20, #40]
   333a8:	ldrb	w8, [sp, #1232]
   333ac:	cbnz	w8, 333b8 <PyInit__decimal@@Base+0x2c904>
   333b0:	ldr	x8, [x21, #1344]
   333b4:	str	x8, [x20, #32]
   333b8:	ldrb	w8, [x20]
   333bc:	and	w8, w8, #0xf0
   333c0:	orr	w8, w8, #0x4
   333c4:	stp	xzr, xzr, [x20, #16]
   333c8:	strb	w8, [x20]
   333cc:	str	xzr, [x20, #8]
   333d0:	ldr	w8, [x19]
   333d4:	orr	w8, w8, #0x100
   333d8:	str	w8, [x19]
   333dc:	b	33b24 <PyInit__decimal@@Base+0x2d070>
   333e0:	ldrb	w8, [x20]
   333e4:	tbnz	w8, #5, 33428 <PyInit__decimal@@Base+0x2c974>
   333e8:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   333ec:	ldr	x9, [x20, #32]
   333f0:	ldr	x1, [x21, #1344]
   333f4:	cmp	x9, x1
   333f8:	b.le	33428 <PyInit__decimal@@Base+0x2c974>
   333fc:	strb	wzr, [sp, #1232]
   33400:	ldr	x0, [x20, #40]
   33404:	add	x3, sp, #0x4d0
   33408:	mov	w2, #0x8                   	// #8
   3340c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   33410:	str	x0, [x20, #40]
   33414:	ldrb	w8, [sp, #1232]
   33418:	cbnz	w8, 33424 <PyInit__decimal@@Base+0x2c970>
   3341c:	ldr	x8, [x21, #1344]
   33420:	str	x8, [x20, #32]
   33424:	ldrb	w8, [x20]
   33428:	and	w8, w8, #0xf0
   3342c:	orr	w8, w22, w8
   33430:	orr	w8, w8, #0x2
   33434:	stp	xzr, xzr, [x20, #16]
   33438:	strb	w8, [x20]
   3343c:	str	xzr, [x20, #8]
   33440:	ldr	w8, [x19]
   33444:	orr	w8, w8, #0x4
   33448:	str	w8, [x19]
   3344c:	b	33b24 <PyInit__decimal@@Base+0x2d070>
   33450:	bl	203cc <PyInit__decimal@@Base+0x19918>
   33454:	cbz	x0, 33754 <PyInit__decimal@@Base+0x2cca0>
   33458:	ldr	x8, [x23, #24]
   3345c:	mov	x22, x0
   33460:	ldr	x0, [x0, #40]
   33464:	ldr	x1, [x23, #40]
   33468:	lsl	x2, x8, #3
   3346c:	bl	63c0 <memcpy@plt>
   33470:	ldrb	w8, [x23]
   33474:	ldrb	w9, [x22]
   33478:	bfxil	w9, w8, #0, #4
   3347c:	strb	w9, [x22]
   33480:	ldr	x8, [x23, #8]
   33484:	str	x8, [x22, #8]
   33488:	ldr	x9, [x23, #16]
   3348c:	str	x9, [x22, #16]
   33490:	ldr	x0, [x23, #24]
   33494:	str	x0, [x22, #24]
   33498:	adrp	x23, 3f000 <PyInit__decimal@@Base+0x3854c>
   3349c:	add	w8, w9, w8
   334a0:	add	x23, x23, #0x370
   334a4:	tbnz	w8, #0, 3352c <PyInit__decimal@@Base+0x2ca78>
   334a8:	mov	x12, #0x435f                	// #17247
   334ac:	movk	x12, #0xd79, lsl #16
   334b0:	movk	x12, #0x35e5, lsl #32
   334b4:	movk	x12, #0xd794, lsl #48
   334b8:	ldr	x11, [x22, #40]
   334bc:	umulh	x12, x9, x12
   334c0:	mov	w8, #0x2                   	// #2
   334c4:	cmp	x9, #0x8
   334c8:	mov	w10, #0x8                   	// #8
   334cc:	mov	w13, #0x13                  	// #19
   334d0:	lsr	x12, x12, #4
   334d4:	sub	x8, x8, x9
   334d8:	csel	x10, x9, x10, lt  // lt = tstop
   334dc:	msub	x9, x12, x13, x9
   334e0:	str	x8, [x22, #8]
   334e4:	cmp	x9, #0x0
   334e8:	add	x12, x11, x0, lsl #3
   334ec:	csel	x13, x13, x9, eq  // eq = none
   334f0:	ldur	x9, [x12, #-8]
   334f4:	and	x14, x10, #0xffffffff
   334f8:	subs	x12, x13, x14
   334fc:	b.cs	335b0 <PyInit__decimal@@Base+0x2cafc>  // b.hs, b.nlast
   33500:	cmp	x0, #0x2
   33504:	b.lt	335b8 <PyInit__decimal@@Base+0x2cb04>  // b.tstop
   33508:	add	x11, x11, x0, lsl #3
   3350c:	add	x12, x23, x12, lsl #3
   33510:	sub	x13, x14, x13
   33514:	ldur	x11, [x11, #-16]
   33518:	ldr	x12, [x12, #152]
   3351c:	ldr	x13, [x23, x13, lsl #3]
   33520:	udiv	x11, x11, x12
   33524:	madd	x9, x13, x9, x11
   33528:	b	335b8 <PyInit__decimal@@Base+0x2cb04>
   3352c:	mov	x12, #0x435f                	// #17247
   33530:	movk	x12, #0xd79, lsl #16
   33534:	movk	x12, #0x35e5, lsl #32
   33538:	movk	x12, #0xd794, lsl #48
   3353c:	ldr	x11, [x22, #40]
   33540:	umulh	x12, x9, x12
   33544:	mov	w8, #0x1                   	// #1
   33548:	cmp	x9, #0x7
   3354c:	mov	w10, #0x7                   	// #7
   33550:	mov	w13, #0x13                  	// #19
   33554:	lsr	x12, x12, #4
   33558:	sub	x8, x8, x9
   3355c:	csel	x10, x9, x10, lt  // lt = tstop
   33560:	msub	x9, x12, x13, x9
   33564:	str	x8, [x22, #8]
   33568:	cmp	x9, #0x0
   3356c:	add	x12, x11, x0, lsl #3
   33570:	csel	x13, x13, x9, eq  // eq = none
   33574:	ldur	x9, [x12, #-8]
   33578:	and	x14, x10, #0xffffffff
   3357c:	subs	x12, x13, x14
   33580:	b.cs	335c8 <PyInit__decimal@@Base+0x2cb14>  // b.hs, b.nlast
   33584:	cmp	x0, #0x2
   33588:	b.lt	335d0 <PyInit__decimal@@Base+0x2cb1c>  // b.tstop
   3358c:	add	x11, x11, x0, lsl #3
   33590:	add	x12, x23, x12, lsl #3
   33594:	sub	x13, x14, x13
   33598:	ldur	x11, [x11, #-16]
   3359c:	ldr	x12, [x12, #152]
   335a0:	ldr	x13, [x23, x13, lsl #3]
   335a4:	udiv	x11, x11, x12
   335a8:	madd	x9, x13, x9, x11
   335ac:	b	335d0 <PyInit__decimal@@Base+0x2cb1c>
   335b0:	ldr	x11, [x23, x12, lsl #3]
   335b4:	udiv	x9, x9, x11
   335b8:	cmp	w10, #0x7
   335bc:	b.gt	335ec <PyInit__decimal@@Base+0x2cb38>
   335c0:	mov	x11, #0x800000000           	// #34359738368
   335c4:	b	335dc <PyInit__decimal@@Base+0x2cb28>
   335c8:	ldr	x11, [x23, x12, lsl #3]
   335cc:	udiv	x9, x9, x11
   335d0:	cmp	w10, #0x6
   335d4:	b.gt	335ec <PyInit__decimal@@Base+0x2cb38>
   335d8:	mov	x11, #0x700000000           	// #30064771072
   335dc:	sub	x10, x11, x10, lsl #32
   335e0:	asr	x10, x10, #29
   335e4:	ldr	x10, [x23, x10]
   335e8:	mul	x9, x10, x9
   335ec:	ldr	x10, [x25]
   335f0:	asr	x25, x26, #1
   335f4:	mov	w12, #0x3e8                 	// #1000
   335f8:	mov	w11, #0x2710                	// #10000
   335fc:	b	33604 <PyInit__decimal@@Base+0x2cb50>
   33600:	sub	x11, x27, #0x1
   33604:	add	x13, x12, x11
   33608:	lsr	x27, x13, #1
   3360c:	mul	x14, x27, x27
   33610:	cmp	x14, x9
   33614:	b.hi	33600 <PyInit__decimal@@Base+0x2cb4c>  // b.pmore
   33618:	orr	x12, x13, #0x1
   3361c:	add	x12, x14, x12
   33620:	cmp	x12, x9
   33624:	b.hi	33630 <PyInit__decimal@@Base+0x2cb7c>  // b.pmore
   33628:	add	x12, x27, #0x1
   3362c:	b	33604 <PyInit__decimal@@Base+0x2cb50>
   33630:	ldrb	w9, [x20]
   33634:	sub	x8, x10, x8
   33638:	cmp	x8, #0x0
   3363c:	cinc	x26, x8, lt  // lt = tstop
   33640:	tbnz	w9, #5, 33684 <PyInit__decimal@@Base+0x2cbd0>
   33644:	adrp	x28, 53000 <PyInit__decimal@@Base+0x4c54c>
   33648:	ldr	x8, [x20, #32]
   3364c:	ldr	x1, [x28, #1344]
   33650:	cmp	x8, x1
   33654:	b.le	33684 <PyInit__decimal@@Base+0x2cbd0>
   33658:	strb	wzr, [sp]
   3365c:	ldr	x0, [x20, #40]
   33660:	mov	x3, sp
   33664:	mov	w2, #0x8                   	// #8
   33668:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   3366c:	str	x0, [x20, #40]
   33670:	ldrb	w8, [sp]
   33674:	cbnz	w8, 33680 <PyInit__decimal@@Base+0x2cbcc>
   33678:	ldr	x8, [x28, #1344]
   3367c:	str	x8, [x20, #32]
   33680:	ldrb	w9, [x20]
   33684:	ldr	x10, [x20, #40]
   33688:	and	w8, w9, #0xf0
   3368c:	mov	w9, #0xca00                	// #51712
   33690:	movk	w9, #0x3b9a, lsl #16
   33694:	mov	w11, #0x1                   	// #1
   33698:	mov	x12, #0xfffffffffffffffa    	// #-6
   3369c:	strb	w8, [x20]
   336a0:	udiv	x8, x9, x27
   336a4:	str	x8, [x10]
   336a8:	str	x11, [x20, #24]
   336ac:	str	x12, [x20, #8]
   336b0:	ldr	x8, [x10]
   336b4:	ldr	x9, [x23, #72]
   336b8:	cmp	x9, x8
   336bc:	b.ls	336e8 <PyInit__decimal@@Base+0x2cc34>  // b.plast
   336c0:	ldr	x9, [x23, #32]
   336c4:	cmp	x9, x8
   336c8:	b.ls	33710 <PyInit__decimal@@Base+0x2cc5c>  // b.plast
   336cc:	ldr	x9, [x23, #16]
   336d0:	cmp	x9, x8
   336d4:	b.ls	337bc <PyInit__decimal@@Base+0x2cd08>  // b.plast
   336d8:	ldr	x9, [x23, #8]
   336dc:	cmp	x9, x8
   336e0:	mov	w8, #0x1                   	// #1
   336e4:	b	33820 <PyInit__decimal@@Base+0x2cd6c>
   336e8:	ldr	x9, [x23, #112]
   336ec:	cmp	x9, x8
   336f0:	b.ls	3372c <PyInit__decimal@@Base+0x2cc78>  // b.plast
   336f4:	ldr	x9, [x23, #88]
   336f8:	cmp	x9, x8
   336fc:	b.ls	337cc <PyInit__decimal@@Base+0x2cd18>  // b.plast
   33700:	ldr	x9, [x23, #80]
   33704:	cmp	x9, x8
   33708:	mov	w8, #0xa                   	// #10
   3370c:	b	33820 <PyInit__decimal@@Base+0x2cd6c>
   33710:	ldr	x9, [x23, #48]
   33714:	cmp	x9, x8
   33718:	b.ls	337e8 <PyInit__decimal@@Base+0x2cd34>  // b.plast
   3371c:	ldr	x9, [x23, #40]
   33720:	cmp	x9, x8
   33724:	mov	w8, #0x5                   	// #5
   33728:	b	33820 <PyInit__decimal@@Base+0x2cd6c>
   3372c:	ldr	x9, [x23, #144]
   33730:	cmp	x9, x8
   33734:	b.ls	33804 <PyInit__decimal@@Base+0x2cd50>  // b.plast
   33738:	ldr	x9, [x23, #128]
   3373c:	cmp	x9, x8
   33740:	b.ls	33814 <PyInit__decimal@@Base+0x2cd60>  // b.plast
   33744:	ldr	x9, [x23, #120]
   33748:	cmp	x9, x8
   3374c:	mov	w8, #0xf                   	// #15
   33750:	b	33820 <PyInit__decimal@@Base+0x2cd6c>
   33754:	ldrb	w8, [x23]
   33758:	tbnz	w8, #5, 3379c <PyInit__decimal@@Base+0x2cce8>
   3375c:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   33760:	ldr	x9, [x23, #32]
   33764:	ldr	x1, [x22, #1344]
   33768:	cmp	x9, x1
   3376c:	b.le	3379c <PyInit__decimal@@Base+0x2cce8>
   33770:	strb	wzr, [sp]
   33774:	ldr	x0, [x23, #40]
   33778:	mov	x3, sp
   3377c:	mov	w2, #0x8                   	// #8
   33780:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   33784:	str	x0, [x23, #40]
   33788:	ldrb	w8, [sp]
   3378c:	cbnz	w8, 33798 <PyInit__decimal@@Base+0x2cce4>
   33790:	ldr	x8, [x22, #1344]
   33794:	str	x8, [x23, #32]
   33798:	ldrb	w8, [x23]
   3379c:	and	w8, w8, #0xf0
   337a0:	orr	w8, w8, #0x4
   337a4:	strb	w8, [x23]
   337a8:	stp	xzr, xzr, [x25]
   337ac:	str	xzr, [x25, #16]
   337b0:	ldr	w8, [x19]
   337b4:	orr	w8, w8, #0x200
   337b8:	b	33b10 <PyInit__decimal@@Base+0x2d05c>
   337bc:	ldr	x9, [x23, #24]
   337c0:	cmp	x9, x8
   337c4:	mov	w8, #0x3                   	// #3
   337c8:	b	33820 <PyInit__decimal@@Base+0x2cd6c>
   337cc:	ldr	x9, [x23, #104]
   337d0:	cmp	x9, x8
   337d4:	b.ls	33b44 <PyInit__decimal@@Base+0x2d090>  // b.plast
   337d8:	ldr	x9, [x23, #96]
   337dc:	cmp	x9, x8
   337e0:	mov	w8, #0xc                   	// #12
   337e4:	b	33820 <PyInit__decimal@@Base+0x2cd6c>
   337e8:	ldr	x9, [x23, #64]
   337ec:	cmp	x9, x8
   337f0:	b.ls	33b4c <PyInit__decimal@@Base+0x2d098>  // b.plast
   337f4:	ldr	x9, [x23, #56]
   337f8:	cmp	x9, x8
   337fc:	mov	w8, #0x7                   	// #7
   33800:	b	33820 <PyInit__decimal@@Base+0x2cd6c>
   33804:	ldr	x9, [x23, #152]
   33808:	cmp	x9, x8
   3380c:	mov	w8, #0x13                  	// #19
   33810:	b	33820 <PyInit__decimal@@Base+0x2cd6c>
   33814:	ldr	x9, [x23, #136]
   33818:	cmp	x9, x8
   3381c:	mov	w8, #0x11                  	// #17
   33820:	cinc	x8, x8, ls  // ls = plast
   33824:	sub	x0, x29, #0x70
   33828:	asr	x26, x26, #1
   3382c:	str	x8, [x20, #16]
   33830:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   33834:	sub	x0, x29, #0x40
   33838:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   3383c:	add	x9, x24, #0x3
   33840:	mov	w8, #0x8                   	// #8
   33844:	cmp	x9, #0x4
   33848:	stur	w8, [x29, #-28]
   3384c:	b.lt	3399c <PyInit__decimal@@Base+0x2cee8>  // b.tstop
   33850:	mov	w8, #0xffffffff            	// #-1
   33854:	mov	x10, sp
   33858:	add	x11, x9, #0x3
   3385c:	add	x9, x9, #0x4
   33860:	cmp	x11, #0x0
   33864:	csel	x9, x9, x11, lt  // lt = tstop
   33868:	add	w8, w8, #0x1
   3386c:	asr	x9, x9, #1
   33870:	cmp	x11, #0x7
   33874:	str	x9, [x10, w8, sxtw #3]
   33878:	b.gt	33858 <PyInit__decimal@@Base+0x2cda4>
   3387c:	tbnz	w8, #31, 3399c <PyInit__decimal@@Base+0x2cee8>
   33880:	mov	w27, w8
   33884:	mov	x28, sp
   33888:	b	33928 <PyInit__decimal@@Base+0x2ce74>
   3388c:	add	x0, sp, #0x270
   33890:	add	x2, sp, #0x4a0
   33894:	sub	x3, x29, #0x40
   33898:	sub	x4, x29, #0xc
   3389c:	mov	x1, x23
   338a0:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   338a4:	add	x0, sp, #0x270
   338a8:	sub	x1, x29, #0x40
   338ac:	sub	x2, x29, #0xc
   338b0:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   338b4:	add	x0, sp, #0x270
   338b8:	add	x1, sp, #0x200
   338bc:	add	x2, sp, #0x270
   338c0:	sub	x3, x29, #0x70
   338c4:	sub	x4, x29, #0xc
   338c8:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   338cc:	add	x2, sp, #0x270
   338d0:	sub	x3, x29, #0x40
   338d4:	sub	x4, x29, #0xc
   338d8:	mov	x0, x20
   338dc:	mov	x1, x20
   338e0:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   338e4:	sub	x1, x29, #0x40
   338e8:	sub	x2, x29, #0xc
   338ec:	mov	x0, x20
   338f0:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   338f4:	add	x2, sp, #0x238
   338f8:	sub	x3, x29, #0x70
   338fc:	sub	x4, x29, #0xc
   33900:	mov	x0, x20
   33904:	mov	x1, x20
   33908:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   3390c:	sub	x1, x29, #0x70
   33910:	sub	x2, x29, #0xc
   33914:	mov	x0, x20
   33918:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   3391c:	cmp	x27, #0x0
   33920:	sub	x27, x27, #0x1
   33924:	b.le	3399c <PyInit__decimal@@Base+0x2cee8>
   33928:	ldr	x8, [x28, x27, lsl #3]
   3392c:	add	x0, sp, #0x4a0
   33930:	sub	x3, x29, #0x70
   33934:	sub	x4, x29, #0xc
   33938:	lsl	x8, x8, #1
   3393c:	add	x8, x8, #0x2
   33940:	mov	x1, x20
   33944:	mov	x2, x20
   33948:	stur	x8, [x29, #-64]
   3394c:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   33950:	add	x0, sp, #0x4a0
   33954:	sub	x1, x29, #0x70
   33958:	sub	x2, x29, #0xc
   3395c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   33960:	ldr	x8, [x22, #16]
   33964:	ldur	x9, [x29, #-64]
   33968:	mov	x23, x22
   3396c:	subs	x24, x8, x9
   33970:	b.le	3388c <PyInit__decimal@@Base+0x2cdd8>
   33974:	add	x0, sp, #0x270
   33978:	sub	x3, x29, #0xc
   3397c:	mov	x1, x22
   33980:	mov	x2, x24
   33984:	add	x23, sp, #0x270
   33988:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   3398c:	ldr	x8, [sp, #632]
   33990:	add	x8, x8, x24
   33994:	str	x8, [sp, #632]
   33998:	b	3388c <PyInit__decimal@@Base+0x2cdd8>
   3399c:	ldr	x8, [x20, #8]
   339a0:	ldr	x10, [x20, #24]
   339a4:	sub	x8, x8, x26
   339a8:	cmp	x10, #0x1
   339ac:	str	x8, [x20, #8]
   339b0:	b.lt	339d4 <PyInit__decimal@@Base+0x2cf20>  // b.tstop
   339b4:	ldr	x12, [x20, #40]
   339b8:	mov	x9, xzr
   339bc:	ldr	x11, [x12]
   339c0:	cbnz	x11, 339dc <PyInit__decimal@@Base+0x2cf28>
   339c4:	add	x9, x9, #0x13
   339c8:	subs	x10, x10, #0x1
   339cc:	add	x12, x12, #0x8
   339d0:	b.ne	339bc <PyInit__decimal@@Base+0x2cf08>  // b.any
   339d4:	mov	x9, xzr
   339d8:	b	33a24 <PyInit__decimal@@Base+0x2cf70>
   339dc:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   339e0:	movk	x10, #0xcccd
   339e4:	mul	x12, x11, x10
   339e8:	mov	x13, #0x9999999999999999    	// #-7378697629483820647
   339ec:	ror	x12, x12, #1
   339f0:	movk	x13, #0x1999, lsl #48
   339f4:	cmp	x12, x13
   339f8:	b.hi	33a24 <PyInit__decimal@@Base+0x2cf70>  // b.pmore
   339fc:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   33a00:	movk	x12, #0x999a
   33a04:	movk	x12, #0x1999, lsl #48
   33a08:	umulh	x11, x11, x10
   33a0c:	lsr	x11, x11, #3
   33a10:	mul	x13, x11, x10
   33a14:	ror	x13, x13, #1
   33a18:	cmp	x13, x12
   33a1c:	add	x9, x9, #0x1
   33a20:	b.cc	33a08 <PyInit__decimal@@Base+0x2cf54>  // b.lo, b.ul, b.last
   33a24:	sub	x8, x25, x8
   33a28:	cmp	x9, x8
   33a2c:	csel	x23, x8, x9, gt
   33a30:	cmp	x23, #0x1
   33a34:	b.lt	33a50 <PyInit__decimal@@Base+0x2cf9c>  // b.tstop
   33a38:	mov	x0, x20
   33a3c:	mov	x1, x23
   33a40:	bl	23ebc <PyInit__decimal@@Base+0x1d408>
   33a44:	ldr	x8, [x20, #8]
   33a48:	add	x8, x8, x23
   33a4c:	str	x8, [x20, #8]
   33a50:	ldrb	w8, [sp, #1184]
   33a54:	cmp	w8, #0x1f
   33a58:	b.hi	33a70 <PyInit__decimal@@Base+0x2cfbc>  // b.pmore
   33a5c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   33a60:	ldr	x8, [x8, #1376]
   33a64:	ldr	x0, [sp, #1224]
   33a68:	blr	x8
   33a6c:	ldrb	w8, [sp, #1184]
   33a70:	tbnz	w8, #4, 33a84 <PyInit__decimal@@Base+0x2cfd0>
   33a74:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   33a78:	ldr	x8, [x8, #1376]
   33a7c:	add	x0, sp, #0x4a0
   33a80:	blr	x8
   33a84:	ldrb	w8, [sp, #624]
   33a88:	cmp	w8, #0x1f
   33a8c:	b.hi	33aa4 <PyInit__decimal@@Base+0x2cff0>  // b.pmore
   33a90:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   33a94:	ldr	x8, [x8, #1376]
   33a98:	ldr	x0, [sp, #664]
   33a9c:	blr	x8
   33aa0:	ldrb	w8, [sp, #624]
   33aa4:	tbnz	w8, #4, 33ab8 <PyInit__decimal@@Base+0x2d004>
   33aa8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   33aac:	ldr	x8, [x8, #1376]
   33ab0:	add	x0, sp, #0x270
   33ab4:	blr	x8
   33ab8:	sub	x8, x29, #0xa0
   33abc:	cmp	x22, x8
   33ac0:	b.eq	33af8 <PyInit__decimal@@Base+0x2d044>  // b.none
   33ac4:	ldrb	w8, [x22]
   33ac8:	cmp	w8, #0x1f
   33acc:	b.hi	33ae4 <PyInit__decimal@@Base+0x2d030>  // b.pmore
   33ad0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   33ad4:	ldr	x8, [x8, #1376]
   33ad8:	ldr	x0, [x22, #40]
   33adc:	blr	x8
   33ae0:	ldrb	w8, [x22]
   33ae4:	tbnz	w8, #4, 33af8 <PyInit__decimal@@Base+0x2d044>
   33ae8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   33aec:	ldr	x8, [x8, #1376]
   33af0:	mov	x0, x22
   33af4:	blr	x8
   33af8:	ldur	w8, [x29, #-12]
   33afc:	ldr	w9, [x19]
   33b00:	and	w8, w8, #0x3fe
   33b04:	orr	w8, w9, w8
   33b08:	mov	w9, #0x1040                	// #4160
   33b0c:	orr	w8, w8, w9
   33b10:	mov	x0, x20
   33b14:	mov	x1, x21
   33b18:	mov	x2, x19
   33b1c:	str	w8, [x19]
   33b20:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   33b24:	add	sp, sp, #0x770
   33b28:	ldp	x20, x19, [sp, #80]
   33b2c:	ldp	x22, x21, [sp, #64]
   33b30:	ldp	x24, x23, [sp, #48]
   33b34:	ldp	x26, x25, [sp, #32]
   33b38:	ldp	x28, x27, [sp, #16]
   33b3c:	ldp	x29, x30, [sp], #96
   33b40:	ret
   33b44:	mov	w8, #0xe                   	// #14
   33b48:	b	33824 <PyInit__decimal@@Base+0x2cd70>
   33b4c:	mov	w8, #0x9                   	// #9
   33b50:	b	33824 <PyInit__decimal@@Base+0x2cd70>
   33b54:	stp	x29, x30, [sp, #-96]!
   33b58:	stp	x28, x27, [sp, #16]
   33b5c:	stp	x26, x25, [sp, #32]
   33b60:	stp	x24, x23, [sp, #48]
   33b64:	stp	x22, x21, [sp, #64]
   33b68:	stp	x20, x19, [sp, #80]
   33b6c:	mov	x29, sp
   33b70:	sub	sp, sp, #0x730
   33b74:	add	x10, sp, #0x4e0
   33b78:	str	x10, [sp, #1240]
   33b7c:	add	x10, sp, #0x2b0
   33b80:	str	x10, [sp, #680]
   33b84:	add	x10, sp, #0x80
   33b88:	str	x10, [sp, #120]
   33b8c:	mov	w10, #0x1                   	// #1
   33b90:	dup	v0.2d, x10
   33b94:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3154c>
   33b98:	stur	q0, [sp, #48]
   33b9c:	ldr	q0, [x10, #3296]
   33ba0:	mov	w8, #0x30                  	// #48
   33ba4:	mov	w9, #0x40                  	// #64
   33ba8:	strb	w8, [sp, #1200]
   33bac:	strb	w8, [sp, #640]
   33bb0:	strb	w8, [sp, #80]
   33bb4:	mov	w8, #0x2                   	// #2
   33bb8:	str	x9, [sp, #1232]
   33bbc:	str	x9, [sp, #672]
   33bc0:	stp	xzr, x9, [sp, #104]
   33bc4:	mov	w9, #0x90                  	// #144
   33bc8:	add	x10, sp, #0x48
   33bcc:	str	xzr, [sp, #1208]
   33bd0:	str	xzr, [sp, #1216]
   33bd4:	str	xzr, [sp, #648]
   33bd8:	str	xzr, [sp, #656]
   33bdc:	stp	xzr, xzr, [sp, #88]
   33be0:	str	xzr, [sp, #1224]
   33be4:	str	xzr, [sp, #664]
   33be8:	stp	x10, x8, [sp, #64]
   33bec:	strb	w9, [sp, #24]
   33bf0:	stur	q0, [sp, #32]
   33bf4:	ldr	x9, [x1, #8]
   33bf8:	ldrb	w8, [x1]
   33bfc:	mov	x19, x3
   33c00:	mov	x21, x2
   33c04:	and	x10, x9, #0xfffffffffffffffe
   33c08:	tst	x9, #0xfffffffffffffffe
   33c0c:	orr	x9, x10, #0x1
   33c10:	mov	x23, x1
   33c14:	csel	x9, x9, x10, lt  // lt = tstop
   33c18:	tst	w8, #0xe
   33c1c:	mov	x20, x0
   33c20:	b.eq	33ca4 <PyInit__decimal@@Base+0x2d1f0>  // b.none
   33c24:	mov	x0, x20
   33c28:	mov	x1, x23
   33c2c:	mov	x2, x21
   33c30:	mov	x3, x19
   33c34:	bl	22798 <PyInit__decimal@@Base+0x1bce4>
   33c38:	cbnz	w0, 34390 <PyInit__decimal@@Base+0x2d8dc>
   33c3c:	ldrb	w9, [x23]
   33c40:	ldrb	w8, [x20]
   33c44:	tbnz	w9, #0, 33d34 <PyInit__decimal@@Base+0x2d280>
   33c48:	tbnz	w8, #5, 33c8c <PyInit__decimal@@Base+0x2d1d8>
   33c4c:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   33c50:	ldr	x9, [x20, #32]
   33c54:	ldr	x1, [x19, #1344]
   33c58:	cmp	x9, x1
   33c5c:	b.le	33c8c <PyInit__decimal@@Base+0x2d1d8>
   33c60:	sturb	wzr, [x29, #-80]
   33c64:	ldr	x0, [x20, #40]
   33c68:	sub	x3, x29, #0x50
   33c6c:	mov	w2, #0x8                   	// #8
   33c70:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   33c74:	str	x0, [x20, #40]
   33c78:	ldurb	w8, [x29, #-80]
   33c7c:	cbnz	w8, 33c88 <PyInit__decimal@@Base+0x2d1d4>
   33c80:	ldr	x8, [x19, #1344]
   33c84:	str	x8, [x20, #32]
   33c88:	ldrb	w8, [x20]
   33c8c:	and	w8, w8, #0xf0
   33c90:	orr	w8, w8, #0x2
   33c94:	stp	xzr, xzr, [x20, #16]
   33c98:	strb	w8, [x20]
   33c9c:	str	xzr, [x20, #8]
   33ca0:	b	34390 <PyInit__decimal@@Base+0x2d8dc>
   33ca4:	ldr	x10, [x23, #40]
   33ca8:	ldr	x11, [x23, #24]
   33cac:	asr	x22, x9, #1
   33cb0:	and	w1, w8, #0x1
   33cb4:	add	x10, x10, x11, lsl #3
   33cb8:	ldur	x10, [x10, #-8]
   33cbc:	cbz	x10, 33d18 <PyInit__decimal@@Base+0x2d264>
   33cc0:	cbnz	w1, 33d3c <PyInit__decimal@@Base+0x2d288>
   33cc4:	sub	x0, x29, #0x50
   33cc8:	add	x25, sp, #0x4b0
   33ccc:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   33cd0:	ldr	x24, [x21]
   33cd4:	add	x8, sp, #0x4b0
   33cd8:	cmp	x8, x23
   33cdc:	b.eq	33df0 <PyInit__decimal@@Base+0x2d33c>  // b.none
   33ce0:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   33ce4:	ldr	x8, [x23, #24]
   33ce8:	ldr	x10, [x9, #1344]
   33cec:	ldr	x9, [sp, #1232]
   33cf0:	cmp	x10, x8
   33cf4:	csel	x1, x8, x10, lt  // lt = tstop
   33cf8:	cmp	x1, x9
   33cfc:	b.eq	33dc4 <PyInit__decimal@@Base+0x2d310>  // b.none
   33d00:	ldrb	w10, [sp, #1200]
   33d04:	tbnz	w10, #5, 33da8 <PyInit__decimal@@Base+0x2d2f4>
   33d08:	add	x0, sp, #0x4b0
   33d0c:	mov	x2, x19
   33d10:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   33d14:	b	33dbc <PyInit__decimal@@Base+0x2d308>
   33d18:	mov	x0, x20
   33d1c:	mov	x2, xzr
   33d20:	mov	x3, x22
   33d24:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   33d28:	mov	x0, x20
   33d2c:	mov	x1, x21
   33d30:	b	34388 <PyInit__decimal@@Base+0x2d8d4>
   33d34:	tbz	w8, #5, 33d44 <PyInit__decimal@@Base+0x2d290>
   33d38:	b	33d84 <PyInit__decimal@@Base+0x2d2d0>
   33d3c:	ldrb	w8, [x20]
   33d40:	tbnz	w8, #5, 33d84 <PyInit__decimal@@Base+0x2d2d0>
   33d44:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   33d48:	ldr	x9, [x20, #32]
   33d4c:	ldr	x1, [x21, #1344]
   33d50:	cmp	x9, x1
   33d54:	b.le	33d84 <PyInit__decimal@@Base+0x2d2d0>
   33d58:	sturb	wzr, [x29, #-80]
   33d5c:	ldr	x0, [x20, #40]
   33d60:	sub	x3, x29, #0x50
   33d64:	mov	w2, #0x8                   	// #8
   33d68:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   33d6c:	str	x0, [x20, #40]
   33d70:	ldurb	w8, [x29, #-80]
   33d74:	cbnz	w8, 33d80 <PyInit__decimal@@Base+0x2d2cc>
   33d78:	ldr	x8, [x21, #1344]
   33d7c:	str	x8, [x20, #32]
   33d80:	ldrb	w8, [x20]
   33d84:	and	w8, w8, #0xf0
   33d88:	orr	w8, w8, #0x4
   33d8c:	stp	xzr, xzr, [x20, #16]
   33d90:	strb	w8, [x20]
   33d94:	str	xzr, [x20, #8]
   33d98:	ldr	w8, [x19]
   33d9c:	orr	w8, w8, #0x100
   33da0:	str	w8, [x19]
   33da4:	b	34390 <PyInit__decimal@@Base+0x2d8dc>
   33da8:	cmp	x1, x9
   33dac:	b.le	33dc4 <PyInit__decimal@@Base+0x2d310>
   33db0:	add	x0, sp, #0x4b0
   33db4:	mov	x2, x19
   33db8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   33dbc:	cbz	w0, 34264 <PyInit__decimal@@Base+0x2d7b0>
   33dc0:	ldr	x8, [x23, #24]
   33dc4:	ldrb	w9, [x23]
   33dc8:	ldrb	w10, [sp, #1200]
   33dcc:	lsl	x2, x8, #3
   33dd0:	bfxil	w10, w9, #0, #4
   33dd4:	strb	w10, [sp, #1200]
   33dd8:	ldur	q0, [x23, #8]
   33ddc:	stur	q0, [x25, #8]
   33de0:	str	x8, [sp, #1224]
   33de4:	ldr	x0, [sp, #1240]
   33de8:	ldr	x1, [x23, #40]
   33dec:	bl	63c0 <memcpy@plt>
   33df0:	str	xzr, [sp, #1208]
   33df4:	ldrb	w8, [x23, #8]
   33df8:	tbnz	w8, #0, 33e0c <PyInit__decimal@@Base+0x2d358>
   33dfc:	ldr	x8, [x23, #16]
   33e00:	add	x8, x8, #0x1
   33e04:	asr	x8, x8, #1
   33e08:	b	33e30 <PyInit__decimal@@Base+0x2d37c>
   33e0c:	add	x0, sp, #0x4b0
   33e10:	add	x1, sp, #0x4b0
   33e14:	mov	w2, #0x1                   	// #1
   33e18:	mov	x3, x19
   33e1c:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   33e20:	cbz	w0, 34264 <PyInit__decimal@@Base+0x2d7b0>
   33e24:	ldr	x8, [x23, #16]
   33e28:	asr	x8, x8, #1
   33e2c:	add	x8, x8, #0x1
   33e30:	add	x24, x24, #0x1
   33e34:	subs	x23, x24, x8
   33e38:	b.mi	33e5c <PyInit__decimal@@Base+0x2d3a8>  // b.first
   33e3c:	lsl	x2, x23, #1
   33e40:	add	x0, sp, #0x4b0
   33e44:	add	x1, sp, #0x4b0
   33e48:	mov	x3, x19
   33e4c:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   33e50:	cbz	w0, 34264 <PyInit__decimal@@Base+0x2d7b0>
   33e54:	mov	w28, #0x1                   	// #1
   33e58:	b	33e70 <PyInit__decimal@@Base+0x2d3bc>
   33e5c:	neg	x1, x23, lsl #1
   33e60:	add	x0, sp, #0x4b0
   33e64:	bl	23ebc <PyInit__decimal@@Base+0x1d408>
   33e68:	cmp	x0, #0x0
   33e6c:	cset	w28, eq  // eq = none
   33e70:	adrp	x1, 50000 <PyInit__decimal@@Base+0x4954c>
   33e74:	add	x1, x1, #0xc88
   33e78:	mov	x0, x20
   33e7c:	mov	x2, x24
   33e80:	mov	x3, x19
   33e84:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   33e88:	cbz	w0, 34264 <PyInit__decimal@@Base+0x2d7b0>
   33e8c:	sub	x8, x29, #0x50
   33e90:	add	x24, x8, #0x1c
   33e94:	add	x0, sp, #0x280
   33e98:	add	x1, sp, #0x50
   33e9c:	add	x2, sp, #0x4b0
   33ea0:	sub	x4, x29, #0x50
   33ea4:	mov	x3, x20
   33ea8:	mov	x5, x24
   33eac:	bl	29024 <PyInit__decimal@@Base+0x22570>
   33eb0:	ldrb	w8, [x20]
   33eb4:	tst	w8, #0xe
   33eb8:	b.ne	33ec8 <PyInit__decimal@@Base+0x2d414>  // b.any
   33ebc:	ldrb	w9, [sp, #640]
   33ec0:	tst	w9, #0xe
   33ec4:	b.eq	33f38 <PyInit__decimal@@Base+0x2d484>  // b.none
   33ec8:	ldur	w9, [x29, #-52]
   33ecc:	mov	w10, #0x3be                 	// #958
   33ed0:	and	w22, w9, w10
   33ed4:	tbnz	w8, #5, 33f18 <PyInit__decimal@@Base+0x2d464>
   33ed8:	adrp	x23, 53000 <PyInit__decimal@@Base+0x4c54c>
   33edc:	ldr	x9, [x20, #32]
   33ee0:	ldr	x1, [x23, #1344]
   33ee4:	cmp	x9, x1
   33ee8:	b.le	33f18 <PyInit__decimal@@Base+0x2d464>
   33eec:	sturb	wzr, [x29, #-24]
   33ef0:	ldr	x0, [x20, #40]
   33ef4:	sub	x3, x29, #0x18
   33ef8:	mov	w2, #0x8                   	// #8
   33efc:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   33f00:	str	x0, [x20, #40]
   33f04:	ldurb	w8, [x29, #-24]
   33f08:	cbnz	w8, 33f14 <PyInit__decimal@@Base+0x2d460>
   33f0c:	ldr	x8, [x23, #1344]
   33f10:	str	x8, [x20, #32]
   33f14:	ldrb	w8, [x20]
   33f18:	and	w8, w8, #0xf0
   33f1c:	orr	w8, w8, #0x4
   33f20:	stp	xzr, xzr, [x20, #16]
   33f24:	strb	w8, [x20]
   33f28:	str	xzr, [x20, #8]
   33f2c:	ldr	w8, [x19]
   33f30:	orr	w8, w8, w22
   33f34:	b	342c8 <PyInit__decimal@@Base+0x2d814>
   33f38:	add	x8, sp, #0x50
   33f3c:	sub	x9, x22, x23
   33f40:	add	x26, x20, #0x8
   33f44:	mov	w27, #0x1041                	// #4161
   33f48:	add	x8, x8, #0x8
   33f4c:	stp	x8, x9, [sp, #8]
   33f50:	add	x1, sp, #0x280
   33f54:	mov	x0, x20
   33f58:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   33f5c:	cmp	w0, #0x1
   33f60:	b.lt	34060 <PyInit__decimal@@Base+0x2d5ac>  // b.tstop
   33f64:	add	x2, sp, #0x280
   33f68:	sub	x3, x29, #0x50
   33f6c:	sub	x4, x29, #0x18
   33f70:	mov	x0, x20
   33f74:	mov	x1, x20
   33f78:	stur	wzr, [x29, #-24]
   33f7c:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   33f80:	ldur	w10, [x29, #-24]
   33f84:	ldur	w8, [x29, #-52]
   33f88:	tst	w10, w27
   33f8c:	orr	w9, w8, w10
   33f90:	stur	w9, [x29, #-52]
   33f94:	ldrb	w8, [x20]
   33f98:	b.eq	34004 <PyInit__decimal@@Base+0x2d550>  // b.none
   33f9c:	tbnz	w8, #5, 33fe8 <PyInit__decimal@@Base+0x2d534>
   33fa0:	adrp	x11, 53000 <PyInit__decimal@@Base+0x4c54c>
   33fa4:	ldr	x10, [x20, #32]
   33fa8:	ldr	x1, [x11, #1344]
   33fac:	cmp	x10, x1
   33fb0:	b.le	33fe8 <PyInit__decimal@@Base+0x2d534>
   33fb4:	sturb	wzr, [x29, #-20]
   33fb8:	ldr	x0, [x20, #40]
   33fbc:	sub	x3, x29, #0x14
   33fc0:	mov	w2, #0x8                   	// #8
   33fc4:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   33fc8:	str	x0, [x20, #40]
   33fcc:	ldurb	w8, [x29, #-20]
   33fd0:	cbnz	w8, 33fe0 <PyInit__decimal@@Base+0x2d52c>
   33fd4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   33fd8:	ldr	x8, [x8, #1344]
   33fdc:	str	x8, [x20, #32]
   33fe0:	ldrb	w8, [x20]
   33fe4:	ldur	w9, [x29, #-52]
   33fe8:	and	w8, w8, #0xf0
   33fec:	orr	w9, w9, #0x100
   33ff0:	orr	w8, w8, #0x4
   33ff4:	strb	w8, [x20]
   33ff8:	stp	xzr, xzr, [x26]
   33ffc:	str	xzr, [x26, #16]
   34000:	stur	w9, [x29, #-52]
   34004:	tst	w8, #0xe
   34008:	b.ne	34180 <PyInit__decimal@@Base+0x2d6cc>  // b.any
   3400c:	add	x1, sp, #0x50
   34010:	add	x3, sp, #0x18
   34014:	sub	x4, x29, #0x50
   34018:	mov	x0, x20
   3401c:	mov	x2, x20
   34020:	mov	x5, x24
   34024:	bl	29024 <PyInit__decimal@@Base+0x22570>
   34028:	add	x0, sp, #0x280
   3402c:	add	x1, sp, #0x50
   34030:	add	x2, sp, #0x4b0
   34034:	sub	x4, x29, #0x50
   34038:	mov	x3, x20
   3403c:	mov	x5, x24
   34040:	bl	29024 <PyInit__decimal@@Base+0x22570>
   34044:	ldrb	w8, [x20]
   34048:	tst	w8, #0xe
   3404c:	b.ne	33ec8 <PyInit__decimal@@Base+0x2d414>  // b.any
   34050:	ldrb	w9, [sp, #640]
   34054:	tst	w9, #0xe
   34058:	b.eq	33f50 <PyInit__decimal@@Base+0x2d49c>  // b.none
   3405c:	b	33ec8 <PyInit__decimal@@Base+0x2d414>
   34060:	cbz	w28, 341f8 <PyInit__decimal@@Base+0x2d744>
   34064:	add	x0, sp, #0x50
   34068:	sub	x3, x29, #0x50
   3406c:	sub	x4, x29, #0x18
   34070:	mov	x1, x20
   34074:	mov	x2, x20
   34078:	stur	wzr, [x29, #-24]
   3407c:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   34080:	add	x0, sp, #0x50
   34084:	sub	x1, x29, #0x50
   34088:	sub	x2, x29, #0x18
   3408c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   34090:	ldur	w10, [x29, #-24]
   34094:	ldur	w8, [x29, #-52]
   34098:	ldrb	w9, [sp, #80]
   3409c:	mov	w11, #0x1041                	// #4161
   340a0:	tst	w10, w11
   340a4:	orr	w8, w8, w10
   340a8:	stur	w8, [x29, #-52]
   340ac:	b.eq	3411c <PyInit__decimal@@Base+0x2d668>  // b.none
   340b0:	tbnz	w9, #5, 340fc <PyInit__decimal@@Base+0x2d648>
   340b4:	adrp	x11, 53000 <PyInit__decimal@@Base+0x4c54c>
   340b8:	ldr	x10, [sp, #112]
   340bc:	ldr	x1, [x11, #1344]
   340c0:	cmp	x10, x1
   340c4:	b.le	340fc <PyInit__decimal@@Base+0x2d648>
   340c8:	ldr	x0, [sp, #120]
   340cc:	sub	x3, x29, #0x14
   340d0:	mov	w2, #0x8                   	// #8
   340d4:	sturb	wzr, [x29, #-20]
   340d8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   340dc:	ldurb	w8, [x29, #-20]
   340e0:	str	x0, [sp, #120]
   340e4:	cbnz	w8, 340f4 <PyInit__decimal@@Base+0x2d640>
   340e8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   340ec:	ldr	x8, [x8, #1344]
   340f0:	str	x8, [sp, #112]
   340f4:	ldrb	w9, [sp, #80]
   340f8:	ldur	w8, [x29, #-52]
   340fc:	ldr	x10, [sp, #8]
   34100:	and	w9, w9, #0xf0
   34104:	orr	w8, w8, #0x100
   34108:	orr	w9, w9, #0x4
   3410c:	strb	w9, [sp, #80]
   34110:	stp	xzr, xzr, [x10]
   34114:	str	xzr, [x10, #16]
   34118:	stur	w8, [x29, #-52]
   3411c:	tst	w9, #0xe
   34120:	b.eq	341e8 <PyInit__decimal@@Base+0x2d734>  // b.none
   34124:	ldrb	w9, [x20]
   34128:	mov	w10, #0x3be                 	// #958
   3412c:	and	w22, w8, w10
   34130:	tbnz	w9, #5, 34178 <PyInit__decimal@@Base+0x2d6c4>
   34134:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   34138:	ldr	x8, [x20, #32]
   3413c:	ldr	x1, [x10, #1344]
   34140:	cmp	x8, x1
   34144:	b.le	34178 <PyInit__decimal@@Base+0x2d6c4>
   34148:	sturb	wzr, [x29, #-24]
   3414c:	ldr	x0, [x20, #40]
   34150:	sub	x3, x29, #0x18
   34154:	mov	w2, #0x8                   	// #8
   34158:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   3415c:	str	x0, [x20, #40]
   34160:	ldurb	w8, [x29, #-24]
   34164:	cbnz	w8, 34174 <PyInit__decimal@@Base+0x2d6c0>
   34168:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   3416c:	ldr	x8, [x8, #1344]
   34170:	str	x8, [x20, #32]
   34174:	ldrb	w9, [x20]
   34178:	and	w8, w9, #0xf0
   3417c:	b	341d4 <PyInit__decimal@@Base+0x2d720>
   34180:	mov	w10, #0x3be                 	// #958
   34184:	and	w22, w9, w10
   34188:	tbnz	w8, #5, 341d0 <PyInit__decimal@@Base+0x2d71c>
   3418c:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   34190:	ldr	x9, [x20, #32]
   34194:	ldr	x1, [x10, #1344]
   34198:	cmp	x9, x1
   3419c:	b.le	341d0 <PyInit__decimal@@Base+0x2d71c>
   341a0:	sturb	wzr, [x29, #-24]
   341a4:	ldr	x0, [x20, #40]
   341a8:	sub	x3, x29, #0x18
   341ac:	mov	w2, #0x8                   	// #8
   341b0:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   341b4:	str	x0, [x20, #40]
   341b8:	ldurb	w8, [x29, #-24]
   341bc:	cbnz	w8, 341cc <PyInit__decimal@@Base+0x2d718>
   341c0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   341c4:	ldr	x8, [x8, #1344]
   341c8:	str	x8, [x20, #32]
   341cc:	ldrb	w8, [x20]
   341d0:	and	w8, w8, #0xf0
   341d4:	orr	w8, w8, #0x4
   341d8:	strb	w8, [x20]
   341dc:	stp	xzr, xzr, [x26]
   341e0:	str	xzr, [x26, #16]
   341e4:	b	33f2c <PyInit__decimal@@Base+0x2d478>
   341e8:	add	x0, sp, #0x50
   341ec:	add	x1, sp, #0x4b0
   341f0:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   341f4:	cbz	w0, 34238 <PyInit__decimal@@Base+0x2d784>
   341f8:	ldr	x8, [x20, #40]
   341fc:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   34200:	movk	x10, #0xcccd
   34204:	mov	w11, #0xa                   	// #10
   34208:	ldr	x9, [x8]
   3420c:	umulh	x10, x9, x10
   34210:	lsr	x10, x10, #3
   34214:	msub	w10, w10, w11, w9
   34218:	cmp	w10, #0x5
   3421c:	b.eq	34224 <PyInit__decimal@@Base+0x2d770>  // b.none
   34220:	cbnz	w10, 3422c <PyInit__decimal@@Base+0x2d778>
   34224:	add	x9, x9, #0x1
   34228:	str	x9, [x8]
   3422c:	ldr	x22, [sp, #16]
   34230:	str	x22, [x26]
   34234:	b	342cc <PyInit__decimal@@Base+0x2d818>
   34238:	tbnz	x23, #63, 3424c <PyInit__decimal@@Base+0x2d798>
   3423c:	mov	x0, x20
   34240:	mov	x1, x23
   34244:	bl	23ebc <PyInit__decimal@@Base+0x1d408>
   34248:	b	34230 <PyInit__decimal@@Base+0x2d77c>
   3424c:	neg	x2, x23
   34250:	mov	x0, x20
   34254:	mov	x1, x20
   34258:	mov	x3, x19
   3425c:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   34260:	cbnz	w0, 34230 <PyInit__decimal@@Base+0x2d77c>
   34264:	ldrb	w8, [x20]
   34268:	tbnz	w8, #5, 342ac <PyInit__decimal@@Base+0x2d7f8>
   3426c:	adrp	x22, 53000 <PyInit__decimal@@Base+0x4c54c>
   34270:	ldr	x9, [x20, #32]
   34274:	ldr	x1, [x22, #1344]
   34278:	cmp	x9, x1
   3427c:	b.le	342ac <PyInit__decimal@@Base+0x2d7f8>
   34280:	sturb	wzr, [x29, #-24]
   34284:	ldr	x0, [x20, #40]
   34288:	sub	x3, x29, #0x18
   3428c:	mov	w2, #0x8                   	// #8
   34290:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   34294:	str	x0, [x20, #40]
   34298:	ldurb	w8, [x29, #-24]
   3429c:	cbnz	w8, 342a8 <PyInit__decimal@@Base+0x2d7f4>
   342a0:	ldr	x8, [x22, #1344]
   342a4:	str	x8, [x20, #32]
   342a8:	ldrb	w8, [x20]
   342ac:	and	w8, w8, #0xf0
   342b0:	orr	w8, w8, #0x4
   342b4:	stp	xzr, xzr, [x20, #16]
   342b8:	strb	w8, [x20]
   342bc:	str	xzr, [x20, #8]
   342c0:	ldr	w8, [x19]
   342c4:	orr	w8, w8, #0x200
   342c8:	str	w8, [x19]
   342cc:	ldrb	w8, [sp, #1200]
   342d0:	cmp	w8, #0x1f
   342d4:	b.hi	342ec <PyInit__decimal@@Base+0x2d838>  // b.pmore
   342d8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   342dc:	ldr	x8, [x8, #1376]
   342e0:	ldr	x0, [sp, #1240]
   342e4:	blr	x8
   342e8:	ldrb	w8, [sp, #1200]
   342ec:	tbnz	w8, #4, 34300 <PyInit__decimal@@Base+0x2d84c>
   342f0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   342f4:	ldr	x8, [x8, #1376]
   342f8:	add	x0, sp, #0x4b0
   342fc:	blr	x8
   34300:	ldrb	w8, [sp, #640]
   34304:	cmp	w8, #0x1f
   34308:	b.hi	34320 <PyInit__decimal@@Base+0x2d86c>  // b.pmore
   3430c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34310:	ldr	x8, [x8, #1376]
   34314:	ldr	x0, [sp, #680]
   34318:	blr	x8
   3431c:	ldrb	w8, [sp, #640]
   34320:	tbnz	w8, #4, 34334 <PyInit__decimal@@Base+0x2d880>
   34324:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34328:	ldr	x8, [x8, #1376]
   3432c:	add	x0, sp, #0x280
   34330:	blr	x8
   34334:	ldrb	w8, [sp, #80]
   34338:	cmp	w8, #0x1f
   3433c:	b.hi	34354 <PyInit__decimal@@Base+0x2d8a0>  // b.pmore
   34340:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34344:	ldr	x8, [x8, #1376]
   34348:	ldr	x0, [sp, #120]
   3434c:	blr	x8
   34350:	ldrb	w8, [sp, #80]
   34354:	tbnz	w8, #4, 34368 <PyInit__decimal@@Base+0x2d8b4>
   34358:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   3435c:	ldr	x8, [x8, #1376]
   34360:	add	x0, sp, #0x50
   34364:	blr	x8
   34368:	ldp	q1, q0, [x21, #16]
   3436c:	ldr	q2, [x21]
   34370:	mov	w8, #0x6                   	// #6
   34374:	sub	x1, x29, #0x50
   34378:	stp	q1, q0, [x25, #576]
   3437c:	str	q2, [x25, #560]
   34380:	stur	w8, [x29, #-44]
   34384:	mov	x0, x20
   34388:	mov	x2, x19
   3438c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   34390:	add	sp, sp, #0x730
   34394:	ldp	x20, x19, [sp, #80]
   34398:	ldp	x22, x21, [sp, #64]
   3439c:	ldp	x24, x23, [sp, #48]
   343a0:	ldp	x26, x25, [sp, #32]
   343a4:	ldp	x28, x27, [sp, #16]
   343a8:	ldp	x29, x30, [sp], #96
   343ac:	ret
   343b0:	str	d8, [sp, #-32]!
   343b4:	stp	x29, x30, [sp, #8]
   343b8:	str	x19, [sp, #24]
   343bc:	mov	x29, sp
   343c0:	ldrb	w8, [x0]
   343c4:	tst	w8, #0xe
   343c8:	b.ne	343e0 <PyInit__decimal@@Base+0x2d92c>  // b.any
   343cc:	ldr	x8, [x0, #40]
   343d0:	ldr	x9, [x0, #24]
   343d4:	add	x8, x8, x9, lsl #3
   343d8:	ldur	x8, [x8, #-8]
   343dc:	cbz	x8, 3442c <PyInit__decimal@@Base+0x2d978>
   343e0:	ldp	x9, x8, [x0, #8]
   343e4:	mov	x19, #0xffffffffffffffff    	// #-1
   343e8:	add	x8, x9, x8
   343ec:	mov	x9, #0xbcfe                	// #48382
   343f0:	movk	x9, #0xa84f, lsl #16
   343f4:	movk	x9, #0xa209, lsl #32
   343f8:	movk	x9, #0x9, lsl #48
   343fc:	cmp	x8, x9
   34400:	b.hi	34430 <PyInit__decimal@@Base+0x2d97c>  // b.pmore
   34404:	ucvtf	d0, w1
   34408:	ucvtf	d8, x8
   3440c:	bl	6560 <log10@plt>
   34410:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
   34414:	fdiv	d0, d8, d0
   34418:	fmov	d1, x8
   3441c:	fcvtzu	x9, d0
   34420:	fcmp	d0, d1
   34424:	csinc	x19, x19, x9, gt
   34428:	b	34430 <PyInit__decimal@@Base+0x2d97c>
   3442c:	mov	w19, #0x1                   	// #1
   34430:	mov	x0, x19
   34434:	ldr	x19, [sp, #24]
   34438:	ldp	x29, x30, [sp, #8]
   3443c:	ldr	d8, [sp], #32
   34440:	ret
   34444:	str	d8, [sp, #-112]!
   34448:	stp	x29, x30, [sp, #16]
   3444c:	stp	x28, x27, [sp, #32]
   34450:	stp	x26, x25, [sp, #48]
   34454:	stp	x24, x23, [sp, #64]
   34458:	stp	x22, x21, [sp, #80]
   3445c:	stp	x20, x19, [sp, #96]
   34460:	mov	x29, sp
   34464:	sub	sp, sp, #0x240
   34468:	mov	w8, #0x30                  	// #48
   3446c:	strb	w8, [sp, #8]
   34470:	mov	w8, #0x40                  	// #64
   34474:	stp	xzr, x8, [sp, #32]
   34478:	add	x8, sp, #0x38
   3447c:	stp	xzr, xzr, [sp, #16]
   34480:	str	x8, [sp, #48]
   34484:	ldrb	w8, [x3]
   34488:	mov	x19, x4
   3448c:	tst	w8, #0xe
   34490:	b.eq	344cc <PyInit__decimal@@Base+0x2da18>  // b.none
   34494:	ldr	w8, [x19]
   34498:	mov	x22, #0xffffffffffffffff    	// #-1
   3449c:	orr	w8, w8, #0x100
   344a0:	str	w8, [x19]
   344a4:	mov	x0, x22
   344a8:	add	sp, sp, #0x240
   344ac:	ldp	x20, x19, [sp, #96]
   344b0:	ldp	x22, x21, [sp, #80]
   344b4:	ldp	x24, x23, [sp, #64]
   344b8:	ldp	x26, x25, [sp, #48]
   344bc:	ldp	x28, x27, [sp, #32]
   344c0:	ldp	x29, x30, [sp, #16]
   344c4:	ldr	d8, [sp], #112
   344c8:	ret
   344cc:	ldr	x11, [x3, #40]
   344d0:	ldr	x12, [x3, #24]
   344d4:	mov	x23, x3
   344d8:	mov	w22, w2
   344dc:	mov	x21, x1
   344e0:	add	x9, x11, x12, lsl #3
   344e4:	ldur	x9, [x9, #-8]
   344e8:	mov	x20, x0
   344ec:	cbz	x9, 34570 <PyInit__decimal@@Base+0x2dabc>
   344f0:	cmp	x12, #0x1
   344f4:	b.lt	34514 <PyInit__decimal@@Base+0x2da60>  // b.tstop
   344f8:	mov	x10, xzr
   344fc:	ldr	x13, [x11]
   34500:	cbnz	x13, 3451c <PyInit__decimal@@Base+0x2da68>
   34504:	add	x10, x10, #0x13
   34508:	subs	x12, x12, #0x1
   3450c:	add	x11, x11, #0x8
   34510:	b.ne	344fc <PyInit__decimal@@Base+0x2da48>  // b.any
   34514:	mov	x10, xzr
   34518:	b	34564 <PyInit__decimal@@Base+0x2dab0>
   3451c:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   34520:	movk	x11, #0xcccd
   34524:	mul	x12, x13, x11
   34528:	mov	x14, #0x9999999999999999    	// #-7378697629483820647
   3452c:	ror	x12, x12, #1
   34530:	movk	x14, #0x1999, lsl #48
   34534:	cmp	x12, x14
   34538:	b.hi	34564 <PyInit__decimal@@Base+0x2dab0>  // b.pmore
   3453c:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   34540:	movk	x12, #0x999a
   34544:	movk	x12, #0x1999, lsl #48
   34548:	umulh	x13, x13, x11
   3454c:	lsr	x13, x13, #3
   34550:	mul	x14, x13, x11
   34554:	ror	x14, x14, #1
   34558:	cmp	x14, x12
   3455c:	add	x10, x10, #0x1
   34560:	b.cc	34548 <PyInit__decimal@@Base+0x2da94>  // b.lo, b.ul, b.last
   34564:	ldr	x11, [x23, #8]
   34568:	cmn	x11, x10
   3456c:	b.mi	34494 <PyInit__decimal@@Base+0x2d9e0>  // b.first
   34570:	ldr	x0, [x20]
   34574:	cbz	x0, 345a4 <PyInit__decimal@@Base+0x2daf0>
   34578:	mov	w26, wzr
   3457c:	tst	w8, #0xe
   34580:	b.ne	34624 <PyInit__decimal@@Base+0x2db70>  // b.any
   34584:	ldr	x8, [x23, #40]
   34588:	ldr	x9, [x23, #24]
   3458c:	add	x8, x8, x9, lsl #3
   34590:	ldur	x8, [x8, #-8]
   34594:	cbnz	x8, 34624 <PyInit__decimal@@Base+0x2db70>
   34598:	strh	wzr, [x0]
   3459c:	mov	w22, #0x1                   	// #1
   345a0:	b	344a4 <PyInit__decimal@@Base+0x2d9f0>
   345a4:	cbz	x9, 345fc <PyInit__decimal@@Base+0x2db48>
   345a8:	ldp	x9, x8, [x23, #8]
   345ac:	add	x8, x9, x8
   345b0:	mov	x9, #0xbcfe                	// #48382
   345b4:	movk	x9, #0xa84f, lsl #16
   345b8:	movk	x9, #0xa209, lsl #32
   345bc:	movk	x9, #0x9, lsl #48
   345c0:	cmp	x8, x9
   345c4:	b.hi	34494 <PyInit__decimal@@Base+0x2d9e0>  // b.pmore
   345c8:	ucvtf	d0, w22
   345cc:	ucvtf	d8, x8
   345d0:	bl	6560 <log10@plt>
   345d4:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
   345d8:	fdiv	d0, d8, d0
   345dc:	fmov	d1, x8
   345e0:	fcmp	d0, d1
   345e4:	b.gt	34494 <PyInit__decimal@@Base+0x2d9e0>
   345e8:	fcvtzu	x8, d0
   345ec:	add	x21, x8, #0x1
   345f0:	cmn	x21, #0x1
   345f4:	b.ne	34600 <PyInit__decimal@@Base+0x2db4c>  // b.any
   345f8:	b	34494 <PyInit__decimal@@Base+0x2d9e0>
   345fc:	mov	w21, #0x1                   	// #1
   34600:	mov	w1, #0x2                   	// #2
   34604:	mov	x0, x21
   34608:	bl	2030c <PyInit__decimal@@Base+0x19858>
   3460c:	str	x0, [x20]
   34610:	cbz	x0, 34714 <PyInit__decimal@@Base+0x2dc60>
   34614:	ldrb	w8, [x23]
   34618:	mov	w26, #0x1                   	// #1
   3461c:	tst	w8, #0xe
   34620:	b.eq	34584 <PyInit__decimal@@Base+0x2dad0>  // b.none
   34624:	ldr	x2, [x23, #8]
   34628:	tbnz	x2, #63, 34644 <PyInit__decimal@@Base+0x2db90>
   3462c:	add	x0, sp, #0x8
   34630:	mov	x1, x23
   34634:	mov	x3, x19
   34638:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   3463c:	cbnz	w0, 34660 <PyInit__decimal@@Base+0x2dbac>
   34640:	b	346fc <PyInit__decimal@@Base+0x2dc48>
   34644:	neg	x2, x2
   34648:	add	x0, sp, #0x8
   3464c:	mov	x1, x23
   34650:	mov	x3, x19
   34654:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   34658:	cmn	x0, #0x1
   3465c:	b.eq	346fc <PyInit__decimal@@Base+0x2dc48>  // b.none
   34660:	ldr	x23, [sp, #48]
   34664:	ldr	x25, [sp, #32]
   34668:	mov	x28, xzr
   3466c:	mov	w24, w22
   34670:	sub	x27, x23, #0x8
   34674:	b	34680 <PyInit__decimal@@Base+0x2dbcc>
   34678:	mov	x28, x22
   3467c:	cbz	x8, 346f4 <PyInit__decimal@@Base+0x2dc40>
   34680:	cmp	x28, x21
   34684:	add	x22, x28, #0x1
   34688:	b.cc	346b4 <PyInit__decimal@@Base+0x2dc00>  // b.lo, b.ul, b.last
   3468c:	strb	wzr, [x29, #12]
   34690:	ldr	x0, [x20]
   34694:	add	x3, x29, #0xc
   34698:	mov	w2, #0x2                   	// #2
   3469c:	mov	x1, x22
   346a0:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   346a4:	str	x0, [x20]
   346a8:	ldrb	w8, [x29, #12]
   346ac:	mov	x21, x22
   346b0:	cbnz	w8, 346fc <PyInit__decimal@@Base+0x2dc48>
   346b4:	mov	x0, x23
   346b8:	mov	x1, x23
   346bc:	mov	x2, x25
   346c0:	mov	x3, x24
   346c4:	bl	1b690 <PyInit__decimal@@Base+0x14bdc>
   346c8:	ldr	x8, [x20]
   346cc:	mov	x9, x25
   346d0:	strh	w0, [x8, x28, lsl #1]
   346d4:	ldr	x8, [x27, x9, lsl #3]
   346d8:	mov	x25, x9
   346dc:	cmp	x9, #0x2
   346e0:	b.lt	34678 <PyInit__decimal@@Base+0x2dbc4>  // b.tstop
   346e4:	sub	x9, x25, #0x1
   346e8:	cbz	x8, 346d4 <PyInit__decimal@@Base+0x2dc20>
   346ec:	mov	w8, #0x1                   	// #1
   346f0:	b	34678 <PyInit__decimal@@Base+0x2dbc4>
   346f4:	cmn	x22, #0x1
   346f8:	b.ne	34724 <PyInit__decimal@@Base+0x2dc70>  // b.any
   346fc:	cbz	w26, 34714 <PyInit__decimal@@Base+0x2dc60>
   34700:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34704:	ldr	x8, [x8, #1376]
   34708:	ldr	x0, [x20]
   3470c:	blr	x8
   34710:	str	xzr, [x20]
   34714:	ldr	w8, [x19]
   34718:	mov	x22, #0xffffffffffffffff    	// #-1
   3471c:	orr	w8, w8, #0x200
   34720:	str	w8, [x19]
   34724:	ldrb	w8, [sp, #8]
   34728:	cmp	w8, #0x1f
   3472c:	b.hi	34744 <PyInit__decimal@@Base+0x2dc90>  // b.pmore
   34730:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34734:	ldr	x8, [x8, #1376]
   34738:	ldr	x0, [sp, #48]
   3473c:	blr	x8
   34740:	ldrb	w8, [sp, #8]
   34744:	tbnz	w8, #4, 344a4 <PyInit__decimal@@Base+0x2d9f0>
   34748:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   3474c:	ldr	x8, [x8, #1376]
   34750:	add	x0, sp, #0x8
   34754:	blr	x8
   34758:	b	344a4 <PyInit__decimal@@Base+0x2d9f0>
   3475c:	str	d8, [sp, #-112]!
   34760:	stp	x29, x30, [sp, #16]
   34764:	stp	x28, x27, [sp, #32]
   34768:	stp	x26, x25, [sp, #48]
   3476c:	stp	x24, x23, [sp, #64]
   34770:	stp	x22, x21, [sp, #80]
   34774:	stp	x20, x19, [sp, #96]
   34778:	mov	x29, sp
   3477c:	sub	sp, sp, #0x240
   34780:	mov	w8, #0x30                  	// #48
   34784:	strb	w8, [sp, #8]
   34788:	mov	w8, #0x40                  	// #64
   3478c:	stp	xzr, x8, [sp, #32]
   34790:	add	x8, sp, #0x38
   34794:	stp	xzr, xzr, [sp, #16]
   34798:	str	x8, [sp, #48]
   3479c:	ldrb	w8, [x3]
   347a0:	mov	x19, x4
   347a4:	tst	w8, #0xe
   347a8:	b.eq	347e4 <PyInit__decimal@@Base+0x2dd30>  // b.none
   347ac:	ldr	w8, [x19]
   347b0:	mov	x22, #0xffffffffffffffff    	// #-1
   347b4:	orr	w8, w8, #0x100
   347b8:	str	w8, [x19]
   347bc:	mov	x0, x22
   347c0:	add	sp, sp, #0x240
   347c4:	ldp	x20, x19, [sp, #96]
   347c8:	ldp	x22, x21, [sp, #80]
   347cc:	ldp	x24, x23, [sp, #64]
   347d0:	ldp	x26, x25, [sp, #48]
   347d4:	ldp	x28, x27, [sp, #32]
   347d8:	ldp	x29, x30, [sp, #16]
   347dc:	ldr	d8, [sp], #112
   347e0:	ret
   347e4:	ldr	x11, [x3, #40]
   347e8:	ldr	x12, [x3, #24]
   347ec:	mov	x23, x3
   347f0:	mov	w22, w2
   347f4:	mov	x21, x1
   347f8:	add	x9, x11, x12, lsl #3
   347fc:	ldur	x9, [x9, #-8]
   34800:	mov	x20, x0
   34804:	cbz	x9, 34888 <PyInit__decimal@@Base+0x2ddd4>
   34808:	cmp	x12, #0x1
   3480c:	b.lt	3482c <PyInit__decimal@@Base+0x2dd78>  // b.tstop
   34810:	mov	x10, xzr
   34814:	ldr	x13, [x11]
   34818:	cbnz	x13, 34834 <PyInit__decimal@@Base+0x2dd80>
   3481c:	add	x10, x10, #0x13
   34820:	subs	x12, x12, #0x1
   34824:	add	x11, x11, #0x8
   34828:	b.ne	34814 <PyInit__decimal@@Base+0x2dd60>  // b.any
   3482c:	mov	x10, xzr
   34830:	b	3487c <PyInit__decimal@@Base+0x2ddc8>
   34834:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   34838:	movk	x11, #0xcccd
   3483c:	mul	x12, x13, x11
   34840:	mov	x14, #0x9999999999999999    	// #-7378697629483820647
   34844:	ror	x12, x12, #1
   34848:	movk	x14, #0x1999, lsl #48
   3484c:	cmp	x12, x14
   34850:	b.hi	3487c <PyInit__decimal@@Base+0x2ddc8>  // b.pmore
   34854:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   34858:	movk	x12, #0x999a
   3485c:	movk	x12, #0x1999, lsl #48
   34860:	umulh	x13, x13, x11
   34864:	lsr	x13, x13, #3
   34868:	mul	x14, x13, x11
   3486c:	ror	x14, x14, #1
   34870:	cmp	x14, x12
   34874:	add	x10, x10, #0x1
   34878:	b.cc	34860 <PyInit__decimal@@Base+0x2ddac>  // b.lo, b.ul, b.last
   3487c:	ldr	x11, [x23, #8]
   34880:	cmn	x11, x10
   34884:	b.mi	347ac <PyInit__decimal@@Base+0x2dcf8>  // b.first
   34888:	ldr	x0, [x20]
   3488c:	cbz	x0, 348bc <PyInit__decimal@@Base+0x2de08>
   34890:	mov	w26, wzr
   34894:	tst	w8, #0xe
   34898:	b.ne	3493c <PyInit__decimal@@Base+0x2de88>  // b.any
   3489c:	ldr	x8, [x23, #40]
   348a0:	ldr	x9, [x23, #24]
   348a4:	add	x8, x8, x9, lsl #3
   348a8:	ldur	x8, [x8, #-8]
   348ac:	cbnz	x8, 3493c <PyInit__decimal@@Base+0x2de88>
   348b0:	str	wzr, [x0]
   348b4:	mov	w22, #0x1                   	// #1
   348b8:	b	347bc <PyInit__decimal@@Base+0x2dd08>
   348bc:	cbz	x9, 34914 <PyInit__decimal@@Base+0x2de60>
   348c0:	ldp	x9, x8, [x23, #8]
   348c4:	add	x8, x9, x8
   348c8:	mov	x9, #0xbcfe                	// #48382
   348cc:	movk	x9, #0xa84f, lsl #16
   348d0:	movk	x9, #0xa209, lsl #32
   348d4:	movk	x9, #0x9, lsl #48
   348d8:	cmp	x8, x9
   348dc:	b.hi	347ac <PyInit__decimal@@Base+0x2dcf8>  // b.pmore
   348e0:	ucvtf	d0, w22
   348e4:	ucvtf	d8, x8
   348e8:	bl	6560 <log10@plt>
   348ec:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
   348f0:	fdiv	d0, d8, d0
   348f4:	fmov	d1, x8
   348f8:	fcmp	d0, d1
   348fc:	b.gt	347ac <PyInit__decimal@@Base+0x2dcf8>
   34900:	fcvtzu	x8, d0
   34904:	add	x21, x8, #0x1
   34908:	cmn	x21, #0x1
   3490c:	b.ne	34918 <PyInit__decimal@@Base+0x2de64>  // b.any
   34910:	b	347ac <PyInit__decimal@@Base+0x2dcf8>
   34914:	mov	w21, #0x1                   	// #1
   34918:	mov	w1, #0x4                   	// #4
   3491c:	mov	x0, x21
   34920:	bl	2030c <PyInit__decimal@@Base+0x19858>
   34924:	str	x0, [x20]
   34928:	cbz	x0, 34a38 <PyInit__decimal@@Base+0x2df84>
   3492c:	ldrb	w8, [x23]
   34930:	mov	w26, #0x1                   	// #1
   34934:	tst	w8, #0xe
   34938:	b.eq	3489c <PyInit__decimal@@Base+0x2dde8>  // b.none
   3493c:	ldr	x2, [x23, #8]
   34940:	tbnz	x2, #63, 3495c <PyInit__decimal@@Base+0x2dea8>
   34944:	add	x0, sp, #0x8
   34948:	mov	x1, x23
   3494c:	mov	x3, x19
   34950:	bl	23d14 <PyInit__decimal@@Base+0x1d260>
   34954:	cbnz	w0, 34978 <PyInit__decimal@@Base+0x2dec4>
   34958:	b	34a20 <PyInit__decimal@@Base+0x2df6c>
   3495c:	neg	x2, x2
   34960:	add	x0, sp, #0x8
   34964:	mov	x1, x23
   34968:	mov	x3, x19
   3496c:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   34970:	cmn	x0, #0x1
   34974:	b.eq	34a20 <PyInit__decimal@@Base+0x2df6c>  // b.none
   34978:	ldr	x23, [sp, #48]
   3497c:	ldr	x25, [sp, #32]
   34980:	mov	x28, xzr
   34984:	mov	w24, w22
   34988:	sub	x27, x23, #0x8
   3498c:	b	34998 <PyInit__decimal@@Base+0x2dee4>
   34990:	mov	x28, x22
   34994:	cbz	x8, 34a18 <PyInit__decimal@@Base+0x2df64>
   34998:	cmp	x28, x21
   3499c:	add	x22, x28, #0x1
   349a0:	b.cc	349cc <PyInit__decimal@@Base+0x2df18>  // b.lo, b.ul, b.last
   349a4:	strb	wzr, [x29, #12]
   349a8:	ldr	x0, [x20]
   349ac:	add	x3, x29, #0xc
   349b0:	mov	w2, #0x4                   	// #4
   349b4:	mov	x1, x22
   349b8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   349bc:	str	x0, [x20]
   349c0:	ldrb	w8, [x29, #12]
   349c4:	mov	x21, x22
   349c8:	cbnz	w8, 34a20 <PyInit__decimal@@Base+0x2df6c>
   349cc:	mov	x4, #0x89e80000            	// #2313682944
   349d0:	movk	x4, #0x2304, lsl #32
   349d4:	movk	x4, #0x8ac7, lsl #48
   349d8:	mov	x0, x23
   349dc:	mov	x1, x23
   349e0:	mov	x2, x25
   349e4:	mov	x3, x24
   349e8:	bl	1c58c <PyInit__decimal@@Base+0x15ad8>
   349ec:	ldr	x8, [x20]
   349f0:	mov	x9, x25
   349f4:	str	w0, [x8, x28, lsl #2]
   349f8:	ldr	x8, [x27, x9, lsl #3]
   349fc:	mov	x25, x9
   34a00:	cmp	x9, #0x2
   34a04:	b.lt	34990 <PyInit__decimal@@Base+0x2dedc>  // b.tstop
   34a08:	sub	x9, x25, #0x1
   34a0c:	cbz	x8, 349f8 <PyInit__decimal@@Base+0x2df44>
   34a10:	mov	w8, #0x1                   	// #1
   34a14:	b	34990 <PyInit__decimal@@Base+0x2dedc>
   34a18:	cmn	x22, #0x1
   34a1c:	b.ne	34a48 <PyInit__decimal@@Base+0x2df94>  // b.any
   34a20:	cbz	w26, 34a38 <PyInit__decimal@@Base+0x2df84>
   34a24:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34a28:	ldr	x8, [x8, #1376]
   34a2c:	ldr	x0, [x20]
   34a30:	blr	x8
   34a34:	str	xzr, [x20]
   34a38:	ldr	w8, [x19]
   34a3c:	mov	x22, #0xffffffffffffffff    	// #-1
   34a40:	orr	w8, w8, #0x200
   34a44:	str	w8, [x19]
   34a48:	ldrb	w8, [sp, #8]
   34a4c:	cmp	w8, #0x1f
   34a50:	b.hi	34a68 <PyInit__decimal@@Base+0x2dfb4>  // b.pmore
   34a54:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34a58:	ldr	x8, [x8, #1376]
   34a5c:	ldr	x0, [sp, #48]
   34a60:	blr	x8
   34a64:	ldrb	w8, [sp, #8]
   34a68:	tbnz	w8, #4, 347bc <PyInit__decimal@@Base+0x2dd08>
   34a6c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34a70:	ldr	x8, [x8, #1376]
   34a74:	add	x0, sp, #0x8
   34a78:	blr	x8
   34a7c:	b	347bc <PyInit__decimal@@Base+0x2dd08>
   34a80:	sub	sp, sp, #0x80
   34a84:	str	d8, [sp, #16]
   34a88:	stp	x29, x30, [sp, #32]
   34a8c:	stp	x28, x27, [sp, #48]
   34a90:	stp	x26, x25, [sp, #64]
   34a94:	stp	x24, x23, [sp, #80]
   34a98:	stp	x22, x21, [sp, #96]
   34a9c:	stp	x20, x19, [sp, #112]
   34aa0:	add	x29, sp, #0x10
   34aa4:	mov	x8, #0x20000000000000      	// #9007199254740992
   34aa8:	mov	x19, x6
   34aac:	cmp	x2, x8
   34ab0:	mov	x20, x0
   34ab4:	b.hi	34b30 <PyInit__decimal@@Base+0x2e07c>  // b.pmore
   34ab8:	ucvtf	d0, w4
   34abc:	mov	x27, x5
   34ac0:	mov	w24, w4
   34ac4:	mov	w23, w3
   34ac8:	mov	x25, x2
   34acc:	mov	x26, x1
   34ad0:	ucvtf	d8, x2
   34ad4:	bl	6560 <log10@plt>
   34ad8:	adrp	x8, 40000 <PyInit__decimal@@Base+0x3954c>
   34adc:	ldr	d1, [x8, #192]
   34ae0:	fmov	d2, #1.900000000000000000e+01
   34ae4:	fdiv	d0, d0, d2
   34ae8:	fmul	d0, d0, d8
   34aec:	fcmp	d0, d1
   34af0:	b.ge	34b30 <PyInit__decimal@@Base+0x2e07c>  // b.tcont
   34af4:	fcvtzs	x8, d0
   34af8:	add	x21, x8, #0x1
   34afc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   34b00:	cmp	x21, x8
   34b04:	b.eq	34b30 <PyInit__decimal@@Base+0x2e07c>  // b.none
   34b08:	mov	w1, #0x8                   	// #8
   34b0c:	mov	x0, x25
   34b10:	bl	2030c <PyInit__decimal@@Base+0x19858>
   34b14:	cbz	x0, 34bbc <PyInit__decimal@@Base+0x2e108>
   34b18:	mov	x22, x0
   34b1c:	cbz	x25, 34c8c <PyInit__decimal@@Base+0x2e1d8>
   34b20:	cmp	x25, #0x3
   34b24:	b.hi	34c24 <PyInit__decimal@@Base+0x2e170>  // b.pmore
   34b28:	mov	x8, xzr
   34b2c:	b	34c70 <PyInit__decimal@@Base+0x2e1bc>
   34b30:	ldrb	w8, [x20]
   34b34:	tbnz	w8, #5, 34b78 <PyInit__decimal@@Base+0x2e0c4>
   34b38:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   34b3c:	ldr	x9, [x20, #32]
   34b40:	ldr	x1, [x21, #1344]
   34b44:	cmp	x9, x1
   34b48:	b.le	34b78 <PyInit__decimal@@Base+0x2e0c4>
   34b4c:	strb	wzr, [x29, #8]
   34b50:	ldr	x0, [x20, #40]
   34b54:	add	x3, x29, #0x8
   34b58:	mov	w2, #0x8                   	// #8
   34b5c:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   34b60:	str	x0, [x20, #40]
   34b64:	ldrb	w8, [x29, #8]
   34b68:	cbnz	w8, 34b74 <PyInit__decimal@@Base+0x2e0c0>
   34b6c:	ldr	x8, [x21, #1344]
   34b70:	str	x8, [x20, #32]
   34b74:	ldrb	w8, [x20]
   34b78:	and	w8, w8, #0xf0
   34b7c:	orr	w8, w8, #0x4
   34b80:	stp	xzr, xzr, [x20, #16]
   34b84:	strb	w8, [x20]
   34b88:	str	xzr, [x20, #8]
   34b8c:	ldr	w8, [x19]
   34b90:	orr	w8, w8, #0x100
   34b94:	str	w8, [x19]
   34b98:	ldp	x20, x19, [sp, #112]
   34b9c:	ldp	x22, x21, [sp, #96]
   34ba0:	ldp	x24, x23, [sp, #80]
   34ba4:	ldp	x26, x25, [sp, #64]
   34ba8:	ldp	x28, x27, [sp, #48]
   34bac:	ldp	x29, x30, [sp, #32]
   34bb0:	ldr	d8, [sp, #16]
   34bb4:	add	sp, sp, #0x80
   34bb8:	ret
   34bbc:	ldrb	w8, [x20]
   34bc0:	tbnz	w8, #5, 34c04 <PyInit__decimal@@Base+0x2e150>
   34bc4:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   34bc8:	ldr	x9, [x20, #32]
   34bcc:	ldr	x1, [x21, #1344]
   34bd0:	cmp	x9, x1
   34bd4:	b.le	34c04 <PyInit__decimal@@Base+0x2e150>
   34bd8:	strb	wzr, [x29, #12]
   34bdc:	ldr	x0, [x20, #40]
   34be0:	add	x3, x29, #0xc
   34be4:	mov	w2, #0x8                   	// #8
   34be8:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   34bec:	str	x0, [x20, #40]
   34bf0:	ldrb	w8, [x29, #12]
   34bf4:	cbnz	w8, 34c00 <PyInit__decimal@@Base+0x2e14c>
   34bf8:	ldr	x8, [x21, #1344]
   34bfc:	str	x8, [x20, #32]
   34c00:	ldrb	w8, [x20]
   34c04:	and	w8, w8, #0xf0
   34c08:	orr	w8, w8, #0x4
   34c0c:	stp	xzr, xzr, [x20, #16]
   34c10:	strb	w8, [x20]
   34c14:	str	xzr, [x20, #8]
   34c18:	ldr	w8, [x19]
   34c1c:	orr	w8, w8, #0x200
   34c20:	b	34b94 <PyInit__decimal@@Base+0x2e0e0>
   34c24:	and	x8, x25, #0xfffffffffffffffc
   34c28:	add	x9, x26, #0x4
   34c2c:	add	x10, x22, #0x10
   34c30:	mov	x11, x8
   34c34:	ldurh	w12, [x9, #-4]
   34c38:	ldrh	w13, [x9]
   34c3c:	ldurh	w14, [x9, #-2]
   34c40:	ldrh	w15, [x9, #2]
   34c44:	fmov	d0, x12
   34c48:	fmov	d1, x13
   34c4c:	mov	v0.d[1], x14
   34c50:	mov	v1.d[1], x15
   34c54:	add	x9, x9, #0x8
   34c58:	subs	x11, x11, #0x4
   34c5c:	stp	q0, q1, [x10, #-16]
   34c60:	add	x10, x10, #0x20
   34c64:	b.ne	34c34 <PyInit__decimal@@Base+0x2e180>  // b.any
   34c68:	cmp	x8, x25
   34c6c:	b.eq	34c8c <PyInit__decimal@@Base+0x2e1d8>  // b.none
   34c70:	sub	x9, x25, x8
   34c74:	add	x10, x22, x8, lsl #3
   34c78:	add	x8, x26, x8, lsl #1
   34c7c:	ldrh	w11, [x8], #2
   34c80:	subs	x9, x9, #0x1
   34c84:	str	x11, [x10], #8
   34c88:	b.ne	34c7c <PyInit__decimal@@Base+0x2e1c8>  // b.any
   34c8c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34c90:	ldr	x9, [x8, #1344]
   34c94:	ldr	x8, [x20, #32]
   34c98:	str	x27, [sp, #8]
   34c9c:	cmp	x9, x21
   34ca0:	csel	x1, x21, x9, lt  // lt = tstop
   34ca4:	cmp	x1, x8
   34ca8:	b.eq	34ce0 <PyInit__decimal@@Base+0x2e22c>  // b.none
   34cac:	ldrb	w9, [x20]
   34cb0:	tbnz	w9, #5, 34cc8 <PyInit__decimal@@Base+0x2e214>
   34cb4:	mov	x0, x20
   34cb8:	mov	x2, x19
   34cbc:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   34cc0:	cbnz	w0, 34ce0 <PyInit__decimal@@Base+0x2e22c>
   34cc4:	b	34ff0 <PyInit__decimal@@Base+0x2e53c>
   34cc8:	cmp	x1, x8
   34ccc:	b.le	34ce0 <PyInit__decimal@@Base+0x2e22c>
   34cd0:	mov	x0, x20
   34cd4:	mov	x2, x19
   34cd8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   34cdc:	cbz	w0, 34ff0 <PyInit__decimal@@Base+0x2e53c>
   34ce0:	subs	x8, x25, #0x1
   34ce4:	ldr	x8, [x22, x8, lsl #3]
   34ce8:	ldr	x0, [x20, #40]
   34cec:	str	x8, [x0]
   34cf0:	b.eq	34e4c <PyInit__decimal@@Base+0x2e398>  // b.none
   34cf4:	sub	x28, x25, #0x2
   34cf8:	mov	w25, w24
   34cfc:	mov	w24, #0x1                   	// #1
   34d00:	mov	x1, x0
   34d04:	mov	x2, x24
   34d08:	mov	x3, x25
   34d0c:	bl	1c46c <PyInit__decimal@@Base+0x159b8>
   34d10:	cbz	x0, 34d64 <PyInit__decimal@@Base+0x2e2b0>
   34d14:	mov	x27, x0
   34d18:	cmp	x24, x21
   34d1c:	add	x26, x24, #0x1
   34d20:	b.lt	34d90 <PyInit__decimal@@Base+0x2e2dc>  // b.tstop
   34d24:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34d28:	ldr	x9, [x8, #1344]
   34d2c:	ldr	x8, [x20, #32]
   34d30:	mov	x21, x26
   34d34:	cmp	x9, x26
   34d38:	csel	x1, x26, x9, lt  // lt = tstop
   34d3c:	cmp	x1, x8
   34d40:	b.eq	34d90 <PyInit__decimal@@Base+0x2e2dc>  // b.none
   34d44:	ldrb	w9, [x20]
   34d48:	tbnz	w9, #5, 34d70 <PyInit__decimal@@Base+0x2e2bc>
   34d4c:	mov	x0, x20
   34d50:	mov	x2, x19
   34d54:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   34d58:	mov	x21, x26
   34d5c:	cbnz	w0, 34d90 <PyInit__decimal@@Base+0x2e2dc>
   34d60:	b	34ff0 <PyInit__decimal@@Base+0x2e53c>
   34d64:	ldr	x0, [x20, #40]
   34d68:	mov	x26, x24
   34d6c:	b	34d98 <PyInit__decimal@@Base+0x2e2e4>
   34d70:	cmp	x1, x8
   34d74:	mov	x21, x26
   34d78:	b.le	34d90 <PyInit__decimal@@Base+0x2e2dc>
   34d7c:	mov	x0, x20
   34d80:	mov	x2, x19
   34d84:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   34d88:	mov	x21, x26
   34d8c:	cbz	w0, 34ff0 <PyInit__decimal@@Base+0x2e53c>
   34d90:	ldr	x0, [x20, #40]
   34d94:	str	x27, [x0, x24, lsl #3]
   34d98:	ldr	x2, [x22, x28, lsl #3]
   34d9c:	mov	x1, x26
   34da0:	bl	1b29c <PyInit__decimal@@Base+0x147e8>
   34da4:	cbz	x0, 34df8 <PyInit__decimal@@Base+0x2e344>
   34da8:	mov	x27, x0
   34dac:	cmp	x26, x21
   34db0:	add	x24, x26, #0x1
   34db4:	b.lt	34e24 <PyInit__decimal@@Base+0x2e370>  // b.tstop
   34db8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34dbc:	ldr	x9, [x8, #1344]
   34dc0:	ldr	x8, [x20, #32]
   34dc4:	mov	x21, x24
   34dc8:	cmp	x9, x24
   34dcc:	csel	x1, x24, x9, lt  // lt = tstop
   34dd0:	cmp	x1, x8
   34dd4:	b.eq	34e24 <PyInit__decimal@@Base+0x2e370>  // b.none
   34dd8:	ldrb	w9, [x20]
   34ddc:	tbnz	w9, #5, 34e04 <PyInit__decimal@@Base+0x2e350>
   34de0:	mov	x0, x20
   34de4:	mov	x2, x19
   34de8:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   34dec:	mov	x21, x24
   34df0:	cbnz	w0, 34e24 <PyInit__decimal@@Base+0x2e370>
   34df4:	b	34ff0 <PyInit__decimal@@Base+0x2e53c>
   34df8:	mov	x24, x26
   34dfc:	cbnz	x28, 34e30 <PyInit__decimal@@Base+0x2e37c>
   34e00:	b	34e3c <PyInit__decimal@@Base+0x2e388>
   34e04:	cmp	x1, x8
   34e08:	mov	x21, x24
   34e0c:	b.le	34e24 <PyInit__decimal@@Base+0x2e370>
   34e10:	mov	x0, x20
   34e14:	mov	x2, x19
   34e18:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   34e1c:	mov	x21, x24
   34e20:	cbz	w0, 34ff0 <PyInit__decimal@@Base+0x2e53c>
   34e24:	ldr	x8, [x20, #40]
   34e28:	str	x27, [x8, x26, lsl #3]
   34e2c:	cbz	x28, 34e3c <PyInit__decimal@@Base+0x2e388>
   34e30:	ldr	x0, [x20, #40]
   34e34:	sub	x28, x28, #0x1
   34e38:	b	34d00 <PyInit__decimal@@Base+0x2e24c>
   34e3c:	cmn	x24, #0x1
   34e40:	b.eq	34ff0 <PyInit__decimal@@Base+0x2e53c>  // b.none
   34e44:	ldr	x0, [x20, #40]
   34e48:	b	34e50 <PyInit__decimal@@Base+0x2e39c>
   34e4c:	mov	w24, #0x1                   	// #1
   34e50:	ldrb	w8, [x20]
   34e54:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   34e58:	str	xzr, [x20, #8]
   34e5c:	str	x24, [x20, #24]
   34e60:	and	w8, w8, #0xfffffff0
   34e64:	orr	w8, w8, w23
   34e68:	add	x9, x0, x24, lsl #3
   34e6c:	add	x10, x10, #0x370
   34e70:	strb	w8, [x20]
   34e74:	ldur	x9, [x9, #-8]
   34e78:	ldr	x11, [x10, #72]
   34e7c:	cmp	x11, x9
   34e80:	b.ls	34eac <PyInit__decimal@@Base+0x2e3f8>  // b.plast
   34e84:	ldr	x11, [x10, #32]
   34e88:	cmp	x11, x9
   34e8c:	b.ls	34ed4 <PyInit__decimal@@Base+0x2e420>  // b.plast
   34e90:	ldr	x11, [x10, #16]
   34e94:	cmp	x11, x9
   34e98:	b.ls	34f18 <PyInit__decimal@@Base+0x2e464>  // b.plast
   34e9c:	ldr	x10, [x10, #8]
   34ea0:	cmp	x10, x9
   34ea4:	mov	w9, #0x1                   	// #1
   34ea8:	b	34f84 <PyInit__decimal@@Base+0x2e4d0>
   34eac:	ldr	x11, [x10, #112]
   34eb0:	cmp	x11, x9
   34eb4:	b.ls	34ef0 <PyInit__decimal@@Base+0x2e43c>  // b.plast
   34eb8:	ldr	x11, [x10, #88]
   34ebc:	cmp	x11, x9
   34ec0:	b.ls	34f28 <PyInit__decimal@@Base+0x2e474>  // b.plast
   34ec4:	ldr	x10, [x10, #80]
   34ec8:	cmp	x10, x9
   34ecc:	mov	w9, #0xa                   	// #10
   34ed0:	b	34f84 <PyInit__decimal@@Base+0x2e4d0>
   34ed4:	ldr	x11, [x10, #48]
   34ed8:	cmp	x11, x9
   34edc:	b.ls	34f4c <PyInit__decimal@@Base+0x2e498>  // b.plast
   34ee0:	ldr	x10, [x10, #40]
   34ee4:	cmp	x10, x9
   34ee8:	mov	w9, #0x5                   	// #5
   34eec:	b	34f84 <PyInit__decimal@@Base+0x2e4d0>
   34ef0:	ldr	x11, [x10, #144]
   34ef4:	cmp	x11, x9
   34ef8:	b.ls	34f68 <PyInit__decimal@@Base+0x2e4b4>  // b.plast
   34efc:	ldr	x11, [x10, #128]
   34f00:	cmp	x11, x9
   34f04:	b.ls	34f78 <PyInit__decimal@@Base+0x2e4c4>  // b.plast
   34f08:	ldr	x10, [x10, #120]
   34f0c:	cmp	x10, x9
   34f10:	mov	w9, #0xf                   	// #15
   34f14:	b	34f84 <PyInit__decimal@@Base+0x2e4d0>
   34f18:	ldr	x10, [x10, #24]
   34f1c:	cmp	x10, x9
   34f20:	mov	w9, #0x3                   	// #3
   34f24:	b	34f84 <PyInit__decimal@@Base+0x2e4d0>
   34f28:	ldr	x11, [x10, #104]
   34f2c:	ldr	x21, [sp, #8]
   34f30:	cmp	x11, x9
   34f34:	b.ls	35020 <PyInit__decimal@@Base+0x2e56c>  // b.plast
   34f38:	ldr	x10, [x10, #96]
   34f3c:	cmp	x10, x9
   34f40:	mov	w9, #0xc                   	// #12
   34f44:	cinc	x9, x9, ls  // ls = plast
   34f48:	b	34f8c <PyInit__decimal@@Base+0x2e4d8>
   34f4c:	ldr	x11, [x10, #64]
   34f50:	cmp	x11, x9
   34f54:	b.ls	35028 <PyInit__decimal@@Base+0x2e574>  // b.plast
   34f58:	ldr	x10, [x10, #56]
   34f5c:	cmp	x10, x9
   34f60:	mov	w9, #0x7                   	// #7
   34f64:	b	34f84 <PyInit__decimal@@Base+0x2e4d0>
   34f68:	ldr	x10, [x10, #152]
   34f6c:	cmp	x10, x9
   34f70:	mov	w9, #0x13                  	// #19
   34f74:	b	34f84 <PyInit__decimal@@Base+0x2e4d0>
   34f78:	ldr	x10, [x10, #136]
   34f7c:	cmp	x10, x9
   34f80:	mov	w9, #0x11                  	// #17
   34f84:	cinc	x9, x9, ls  // ls = plast
   34f88:	ldr	x21, [sp, #8]
   34f8c:	mov	w10, #0x13                  	// #19
   34f90:	madd	x9, x24, x10, x9
   34f94:	sub	x9, x9, #0x13
   34f98:	str	x9, [x20, #16]
   34f9c:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   34fa0:	ldr	x10, [x9, #1344]
   34fa4:	ldr	x9, [x20, #32]
   34fa8:	cmp	x10, x24
   34fac:	csel	x1, x24, x10, lt  // lt = tstop
   34fb0:	cmp	x1, x9
   34fb4:	b.eq	34fe0 <PyInit__decimal@@Base+0x2e52c>  // b.none
   34fb8:	tbnz	w8, #5, 34fcc <PyInit__decimal@@Base+0x2e518>
   34fbc:	mov	x0, x20
   34fc0:	mov	x2, x19
   34fc4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   34fc8:	b	34fe0 <PyInit__decimal@@Base+0x2e52c>
   34fcc:	cmp	x1, x9
   34fd0:	b.le	34fe0 <PyInit__decimal@@Base+0x2e52c>
   34fd4:	mov	x0, x20
   34fd8:	mov	x2, x19
   34fdc:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   34fe0:	mov	x0, x20
   34fe4:	mov	x1, x21
   34fe8:	mov	x2, x19
   34fec:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   34ff0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   34ff4:	ldr	x1, [x8, #1376]
   34ff8:	mov	x0, x22
   34ffc:	ldp	x20, x19, [sp, #112]
   35000:	ldp	x22, x21, [sp, #96]
   35004:	ldp	x24, x23, [sp, #80]
   35008:	ldp	x26, x25, [sp, #64]
   3500c:	ldp	x28, x27, [sp, #48]
   35010:	ldp	x29, x30, [sp, #32]
   35014:	ldr	d8, [sp, #16]
   35018:	add	sp, sp, #0x80
   3501c:	br	x1
   35020:	mov	w9, #0xe                   	// #14
   35024:	b	34f8c <PyInit__decimal@@Base+0x2e4d8>
   35028:	mov	w9, #0x9                   	// #9
   3502c:	b	34f88 <PyInit__decimal@@Base+0x2e4d4>
   35030:	sub	sp, sp, #0x80
   35034:	str	d8, [sp, #16]
   35038:	stp	x29, x30, [sp, #32]
   3503c:	stp	x28, x27, [sp, #48]
   35040:	stp	x26, x25, [sp, #64]
   35044:	stp	x24, x23, [sp, #80]
   35048:	stp	x22, x21, [sp, #96]
   3504c:	stp	x20, x19, [sp, #112]
   35050:	add	x29, sp, #0x10
   35054:	mov	x8, #0x20000000000000      	// #9007199254740992
   35058:	mov	x19, x6
   3505c:	cmp	x2, x8
   35060:	mov	x20, x0
   35064:	b.ls	350f4 <PyInit__decimal@@Base+0x2e640>  // b.plast
   35068:	ldrb	w8, [x20]
   3506c:	tbnz	w8, #5, 350b0 <PyInit__decimal@@Base+0x2e5fc>
   35070:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   35074:	ldr	x9, [x20, #32]
   35078:	ldr	x1, [x21, #1344]
   3507c:	cmp	x9, x1
   35080:	b.le	350b0 <PyInit__decimal@@Base+0x2e5fc>
   35084:	strb	wzr, [x29, #12]
   35088:	ldr	x0, [x20, #40]
   3508c:	add	x3, x29, #0xc
   35090:	mov	w2, #0x8                   	// #8
   35094:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   35098:	str	x0, [x20, #40]
   3509c:	ldrb	w8, [x29, #12]
   350a0:	cbnz	w8, 350ac <PyInit__decimal@@Base+0x2e5f8>
   350a4:	ldr	x8, [x21, #1344]
   350a8:	str	x8, [x20, #32]
   350ac:	ldrb	w8, [x20]
   350b0:	and	w8, w8, #0xf0
   350b4:	orr	w8, w8, #0x4
   350b8:	stp	xzr, xzr, [x20, #16]
   350bc:	strb	w8, [x20]
   350c0:	str	xzr, [x20, #8]
   350c4:	ldr	w8, [x19]
   350c8:	orr	w8, w8, #0x100
   350cc:	str	w8, [x19]
   350d0:	ldp	x20, x19, [sp, #112]
   350d4:	ldp	x22, x21, [sp, #96]
   350d8:	ldp	x24, x23, [sp, #80]
   350dc:	ldp	x26, x25, [sp, #64]
   350e0:	ldp	x28, x27, [sp, #48]
   350e4:	ldp	x29, x30, [sp, #32]
   350e8:	ldr	d8, [sp, #16]
   350ec:	add	sp, sp, #0x80
   350f0:	ret
   350f4:	ucvtf	d0, w4
   350f8:	mov	x21, x5
   350fc:	mov	w25, w4
   35100:	mov	w23, w3
   35104:	mov	x22, x2
   35108:	mov	x24, x1
   3510c:	ucvtf	d8, x2
   35110:	bl	6560 <log10@plt>
   35114:	adrp	x8, 40000 <PyInit__decimal@@Base+0x3954c>
   35118:	ldr	d1, [x8, #192]
   3511c:	fmov	d2, #1.900000000000000000e+01
   35120:	fdiv	d0, d0, d2
   35124:	fmul	d0, d0, d8
   35128:	fcmp	d0, d1
   3512c:	b.ge	35068 <PyInit__decimal@@Base+0x2e5b4>  // b.tcont
   35130:	fcvtzs	x8, d0
   35134:	add	x28, x8, #0x1
   35138:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   3513c:	cmp	x28, x8
   35140:	b.eq	35068 <PyInit__decimal@@Base+0x2e5b4>  // b.none
   35144:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   35148:	ldr	x9, [x8, #1344]
   3514c:	ldr	x8, [x20, #32]
   35150:	str	x21, [sp, #8]
   35154:	cmp	x9, x28
   35158:	csel	x1, x28, x9, lt  // lt = tstop
   3515c:	cmp	x1, x8
   35160:	b.eq	35198 <PyInit__decimal@@Base+0x2e6e4>  // b.none
   35164:	ldrb	w9, [x20]
   35168:	tbnz	w9, #5, 35180 <PyInit__decimal@@Base+0x2e6cc>
   3516c:	mov	x0, x20
   35170:	mov	x2, x19
   35174:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   35178:	cbnz	w0, 35198 <PyInit__decimal@@Base+0x2e6e4>
   3517c:	b	350d0 <PyInit__decimal@@Base+0x2e61c>
   35180:	cmp	x1, x8
   35184:	b.le	35198 <PyInit__decimal@@Base+0x2e6e4>
   35188:	mov	x0, x20
   3518c:	mov	x2, x19
   35190:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   35194:	cbz	w0, 350d0 <PyInit__decimal@@Base+0x2e61c>
   35198:	subs	x8, x22, #0x1
   3519c:	ldr	w8, [x24, x8, lsl #2]
   351a0:	ldr	x0, [x20, #40]
   351a4:	str	x8, [x0]
   351a8:	b.eq	35314 <PyInit__decimal@@Base+0x2e860>  // b.none
   351ac:	mov	w25, w25
   351b0:	sub	x21, x22, #0x2
   351b4:	mov	w22, #0x1                   	// #1
   351b8:	b	351e4 <PyInit__decimal@@Base+0x2e730>
   351bc:	mov	x0, x20
   351c0:	mov	x2, x19
   351c4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   351c8:	mov	x28, x22
   351cc:	cbz	w0, 350d0 <PyInit__decimal@@Base+0x2e61c>
   351d0:	ldr	x8, [x20, #40]
   351d4:	str	x27, [x8, x26, lsl #3]
   351d8:	cbz	x21, 35308 <PyInit__decimal@@Base+0x2e854>
   351dc:	ldr	x0, [x20, #40]
   351e0:	sub	x21, x21, #0x1
   351e4:	mov	x4, #0x89e80000            	// #2313682944
   351e8:	movk	x4, #0x2304, lsl #32
   351ec:	movk	x4, #0x8ac7, lsl #48
   351f0:	mov	x1, x0
   351f4:	mov	x2, x22
   351f8:	mov	x3, x25
   351fc:	bl	1c50c <PyInit__decimal@@Base+0x15a58>
   35200:	cbz	x0, 35254 <PyInit__decimal@@Base+0x2e7a0>
   35204:	mov	x27, x0
   35208:	cmp	x22, x28
   3520c:	add	x26, x22, #0x1
   35210:	b.lt	35280 <PyInit__decimal@@Base+0x2e7cc>  // b.tstop
   35214:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   35218:	ldr	x9, [x8, #1344]
   3521c:	ldr	x8, [x20, #32]
   35220:	mov	x28, x26
   35224:	cmp	x9, x26
   35228:	csel	x1, x26, x9, lt  // lt = tstop
   3522c:	cmp	x1, x8
   35230:	b.eq	35280 <PyInit__decimal@@Base+0x2e7cc>  // b.none
   35234:	ldrb	w9, [x20]
   35238:	tbnz	w9, #5, 35260 <PyInit__decimal@@Base+0x2e7ac>
   3523c:	mov	x0, x20
   35240:	mov	x2, x19
   35244:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   35248:	mov	x28, x26
   3524c:	cbnz	w0, 35280 <PyInit__decimal@@Base+0x2e7cc>
   35250:	b	350d0 <PyInit__decimal@@Base+0x2e61c>
   35254:	ldr	x0, [x20, #40]
   35258:	mov	x26, x22
   3525c:	b	35288 <PyInit__decimal@@Base+0x2e7d4>
   35260:	cmp	x1, x8
   35264:	mov	x28, x26
   35268:	b.le	35280 <PyInit__decimal@@Base+0x2e7cc>
   3526c:	mov	x0, x20
   35270:	mov	x2, x19
   35274:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   35278:	mov	x28, x26
   3527c:	cbz	w0, 350d0 <PyInit__decimal@@Base+0x2e61c>
   35280:	ldr	x0, [x20, #40]
   35284:	str	x27, [x0, x22, lsl #3]
   35288:	ldr	w2, [x24, x21, lsl #2]
   3528c:	mov	x3, #0x89e80000            	// #2313682944
   35290:	movk	x3, #0x2304, lsl #32
   35294:	movk	x3, #0x8ac7, lsl #48
   35298:	mov	x1, x26
   3529c:	bl	1c400 <PyInit__decimal@@Base+0x1594c>
   352a0:	cbz	x0, 35300 <PyInit__decimal@@Base+0x2e84c>
   352a4:	mov	x27, x0
   352a8:	cmp	x26, x28
   352ac:	add	x22, x26, #0x1
   352b0:	b.lt	351d0 <PyInit__decimal@@Base+0x2e71c>  // b.tstop
   352b4:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   352b8:	ldr	x9, [x8, #1344]
   352bc:	ldr	x8, [x20, #32]
   352c0:	mov	x28, x22
   352c4:	cmp	x9, x22
   352c8:	csel	x1, x22, x9, lt  // lt = tstop
   352cc:	cmp	x1, x8
   352d0:	b.eq	351d0 <PyInit__decimal@@Base+0x2e71c>  // b.none
   352d4:	ldrb	w9, [x20]
   352d8:	tbz	w9, #5, 351bc <PyInit__decimal@@Base+0x2e708>
   352dc:	cmp	x1, x8
   352e0:	mov	x28, x22
   352e4:	b.le	351d0 <PyInit__decimal@@Base+0x2e71c>
   352e8:	mov	x0, x20
   352ec:	mov	x2, x19
   352f0:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   352f4:	mov	x28, x22
   352f8:	cbnz	w0, 351d0 <PyInit__decimal@@Base+0x2e71c>
   352fc:	b	350d0 <PyInit__decimal@@Base+0x2e61c>
   35300:	mov	x22, x26
   35304:	cbnz	x21, 351dc <PyInit__decimal@@Base+0x2e728>
   35308:	cmn	x22, #0x1
   3530c:	b.eq	350d0 <PyInit__decimal@@Base+0x2e61c>  // b.none
   35310:	ldr	x0, [x20, #40]
   35314:	ldrb	w8, [x20]
   35318:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   3531c:	str	xzr, [x20, #8]
   35320:	str	x22, [x20, #24]
   35324:	and	w8, w8, #0xfffffff0
   35328:	orr	w8, w8, w23
   3532c:	add	x9, x0, x22, lsl #3
   35330:	add	x10, x10, #0x370
   35334:	strb	w8, [x20]
   35338:	ldur	x9, [x9, #-8]
   3533c:	ldr	x11, [x10, #72]
   35340:	cmp	x11, x9
   35344:	b.ls	35370 <PyInit__decimal@@Base+0x2e8bc>  // b.plast
   35348:	ldr	x11, [x10, #32]
   3534c:	cmp	x11, x9
   35350:	b.ls	35398 <PyInit__decimal@@Base+0x2e8e4>  // b.plast
   35354:	ldr	x11, [x10, #16]
   35358:	cmp	x11, x9
   3535c:	b.ls	353e0 <PyInit__decimal@@Base+0x2e92c>  // b.plast
   35360:	ldr	x10, [x10, #8]
   35364:	cmp	x10, x9
   35368:	mov	w9, #0x1                   	// #1
   3536c:	b	3543c <PyInit__decimal@@Base+0x2e988>
   35370:	ldr	x11, [x10, #112]
   35374:	cmp	x11, x9
   35378:	b.ls	353b4 <PyInit__decimal@@Base+0x2e900>  // b.plast
   3537c:	ldr	x11, [x10, #88]
   35380:	cmp	x11, x9
   35384:	b.ls	353f0 <PyInit__decimal@@Base+0x2e93c>  // b.plast
   35388:	ldr	x10, [x10, #80]
   3538c:	cmp	x10, x9
   35390:	mov	w9, #0xa                   	// #10
   35394:	b	3543c <PyInit__decimal@@Base+0x2e988>
   35398:	ldr	x11, [x10, #48]
   3539c:	cmp	x11, x9
   353a0:	b.ls	35410 <PyInit__decimal@@Base+0x2e95c>  // b.plast
   353a4:	ldr	x10, [x10, #40]
   353a8:	cmp	x10, x9
   353ac:	mov	w9, #0x5                   	// #5
   353b0:	b	3543c <PyInit__decimal@@Base+0x2e988>
   353b4:	ldr	x11, [x10, #144]
   353b8:	cmp	x11, x9
   353bc:	b.ls	35430 <PyInit__decimal@@Base+0x2e97c>  // b.plast
   353c0:	ldr	x11, [x10, #128]
   353c4:	ldr	x21, [sp, #8]
   353c8:	cmp	x11, x9
   353cc:	b.ls	354c8 <PyInit__decimal@@Base+0x2ea14>  // b.plast
   353d0:	ldr	x10, [x10, #120]
   353d4:	cmp	x10, x9
   353d8:	mov	w9, #0xf                   	// #15
   353dc:	b	35440 <PyInit__decimal@@Base+0x2e98c>
   353e0:	ldr	x10, [x10, #24]
   353e4:	cmp	x10, x9
   353e8:	mov	w9, #0x3                   	// #3
   353ec:	b	3543c <PyInit__decimal@@Base+0x2e988>
   353f0:	ldr	x11, [x10, #104]
   353f4:	ldr	x21, [sp, #8]
   353f8:	cmp	x11, x9
   353fc:	b.ls	354d8 <PyInit__decimal@@Base+0x2ea24>  // b.plast
   35400:	ldr	x10, [x10, #96]
   35404:	cmp	x10, x9
   35408:	mov	w9, #0xc                   	// #12
   3540c:	b	35440 <PyInit__decimal@@Base+0x2e98c>
   35410:	ldr	x11, [x10, #64]
   35414:	ldr	x21, [sp, #8]
   35418:	cmp	x11, x9
   3541c:	b.ls	354e0 <PyInit__decimal@@Base+0x2ea2c>  // b.plast
   35420:	ldr	x10, [x10, #56]
   35424:	cmp	x10, x9
   35428:	mov	w9, #0x7                   	// #7
   3542c:	b	35440 <PyInit__decimal@@Base+0x2e98c>
   35430:	ldr	x10, [x10, #152]
   35434:	cmp	x10, x9
   35438:	mov	w9, #0x13                  	// #19
   3543c:	ldr	x21, [sp, #8]
   35440:	cinc	x9, x9, ls  // ls = plast
   35444:	mov	w10, #0x13                  	// #19
   35448:	madd	x9, x22, x10, x9
   3544c:	sub	x9, x9, #0x13
   35450:	str	x9, [x20, #16]
   35454:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   35458:	ldr	x10, [x9, #1344]
   3545c:	ldr	x9, [x20, #32]
   35460:	cmp	x10, x22
   35464:	csel	x1, x22, x10, lt  // lt = tstop
   35468:	cmp	x1, x9
   3546c:	b.eq	35498 <PyInit__decimal@@Base+0x2e9e4>  // b.none
   35470:	tbnz	w8, #5, 35484 <PyInit__decimal@@Base+0x2e9d0>
   35474:	mov	x0, x20
   35478:	mov	x2, x19
   3547c:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   35480:	b	35498 <PyInit__decimal@@Base+0x2e9e4>
   35484:	cmp	x1, x9
   35488:	b.le	35498 <PyInit__decimal@@Base+0x2e9e4>
   3548c:	mov	x0, x20
   35490:	mov	x2, x19
   35494:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   35498:	mov	x0, x20
   3549c:	mov	x1, x21
   354a0:	mov	x2, x19
   354a4:	ldp	x20, x19, [sp, #112]
   354a8:	ldp	x22, x21, [sp, #96]
   354ac:	ldp	x24, x23, [sp, #80]
   354b0:	ldp	x26, x25, [sp, #64]
   354b4:	ldp	x28, x27, [sp, #48]
   354b8:	ldp	x29, x30, [sp, #32]
   354bc:	ldr	d8, [sp, #16]
   354c0:	add	sp, sp, #0x80
   354c4:	b	21960 <PyInit__decimal@@Base+0x1aeac>
   354c8:	ldr	x10, [x10, #136]
   354cc:	cmp	x10, x9
   354d0:	mov	w9, #0x11                  	// #17
   354d4:	b	35440 <PyInit__decimal@@Base+0x2e98c>
   354d8:	mov	w9, #0xe                   	// #14
   354dc:	b	35444 <PyInit__decimal@@Base+0x2e990>
   354e0:	mov	w9, #0x9                   	// #9
   354e4:	b	35444 <PyInit__decimal@@Base+0x2e990>
   354e8:	sub	sp, sp, #0x70
   354ec:	stp	x29, x30, [sp, #32]
   354f0:	stp	x26, x25, [sp, #48]
   354f4:	stp	x24, x23, [sp, #64]
   354f8:	stp	x22, x21, [sp, #80]
   354fc:	stp	x20, x19, [sp, #96]
   35500:	add	x29, sp, #0x20
   35504:	mov	x8, #0x435f                	// #17247
   35508:	movk	x8, #0xd79, lsl #16
   3550c:	movk	x8, #0x35e5, lsl #32
   35510:	movk	x8, #0xd794, lsl #48
   35514:	umulh	x8, x4, x8
   35518:	lsr	x24, x8, #4
   3551c:	mov	x8, #0xffffffffffffffed    	// #-19
   35520:	mov	x20, x3
   35524:	mov	x22, x1
   35528:	madd	x25, x24, x8, x4
   3552c:	mov	x19, x0
   35530:	cbz	x25, 35608 <PyInit__decimal@@Base+0x2eb54>
   35534:	add	x8, x22, x20, lsl #3
   35538:	mov	x23, x2
   3553c:	ldur	x2, [x8, #-8]
   35540:	mov	w8, #0x13                  	// #19
   35544:	sub	x21, x8, x25
   35548:	add	x0, sp, #0x8
   3554c:	add	x1, sp, #0x10
   35550:	mov	x3, x21
   35554:	sub	x26, x23, #0x1
   35558:	bl	35664 <PyInit__decimal@@Base+0x2ebb0>
   3555c:	ldr	x8, [sp, #8]
   35560:	cbz	x8, 35574 <PyInit__decimal@@Base+0x2eac0>
   35564:	ldr	x9, [x19, x26, lsl #3]
   35568:	cmp	x9, x8
   3556c:	b.ne	35640 <PyInit__decimal@@Base+0x2eb8c>  // b.any
   35570:	sub	x26, x23, #0x2
   35574:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   35578:	add	x8, x8, #0x370
   3557c:	ldr	x23, [x8, x25, lsl #3]
   35580:	ldr	x25, [sp, #16]
   35584:	sub	x8, x20, #0x2
   35588:	cmn	x8, #0x1
   3558c:	b.eq	355d8 <PyInit__decimal@@Base+0x2eb24>  // b.none
   35590:	add	x26, x19, x26, lsl #3
   35594:	sub	x22, x22, #0x10
   35598:	ldr	x2, [x22, x20, lsl #3]
   3559c:	add	x0, sp, #0x8
   355a0:	sub	x1, x29, #0x8
   355a4:	mov	x3, x21
   355a8:	bl	35664 <PyInit__decimal@@Base+0x2ebb0>
   355ac:	ldr	x8, [sp, #8]
   355b0:	ldr	x9, [x26]
   355b4:	madd	x8, x25, x23, x8
   355b8:	cmp	x9, x8
   355bc:	b.ne	3563c <PyInit__decimal@@Base+0x2eb88>  // b.any
   355c0:	ldur	x25, [x29, #-8]
   355c4:	sub	x20, x20, #0x1
   355c8:	cmp	x20, #0x1
   355cc:	sub	x26, x26, #0x8
   355d0:	b.ne	35598 <PyInit__decimal@@Base+0x2eae4>  // b.any
   355d4:	str	x25, [sp, #16]
   355d8:	ldr	x8, [x19, x24, lsl #3]
   355dc:	mul	x9, x25, x23
   355e0:	cmp	x8, x9
   355e4:	b.ne	35640 <PyInit__decimal@@Base+0x2eb8c>  // b.any
   355e8:	sub	x8, x19, #0x8
   355ec:	subs	x9, x24, #0x1
   355f0:	b.lt	35634 <PyInit__decimal@@Base+0x2eb80>  // b.tstop
   355f4:	ldr	x10, [x8, x24, lsl #3]
   355f8:	mov	x24, x9
   355fc:	cbz	x10, 355ec <PyInit__decimal@@Base+0x2eb38>
   35600:	mov	w0, #0x1                   	// #1
   35604:	b	35648 <PyInit__decimal@@Base+0x2eb94>
   35608:	add	x8, x19, x24, lsl #3
   3560c:	sub	x8, x8, #0x8
   35610:	sub	x9, x22, #0x8
   35614:	cbz	x20, 355e8 <PyInit__decimal@@Base+0x2eb34>
   35618:	lsl	x10, x20, #3
   3561c:	ldr	x11, [x8, x10]
   35620:	ldr	x10, [x9, x10]
   35624:	sub	x20, x20, #0x1
   35628:	cmp	x11, x10
   3562c:	b.eq	35614 <PyInit__decimal@@Base+0x2eb60>  // b.none
   35630:	b	35640 <PyInit__decimal@@Base+0x2eb8c>
   35634:	mov	w0, wzr
   35638:	b	35648 <PyInit__decimal@@Base+0x2eb94>
   3563c:	str	x25, [sp, #16]
   35640:	mov	w8, #0xffffffff            	// #-1
   35644:	cneg	w0, w8, cs  // cs = hs, nlast
   35648:	ldp	x20, x19, [sp, #96]
   3564c:	ldp	x22, x21, [sp, #80]
   35650:	ldp	x24, x23, [sp, #64]
   35654:	ldp	x26, x25, [sp, #48]
   35658:	ldp	x29, x30, [sp, #32]
   3565c:	add	sp, sp, #0x70
   35660:	ret
   35664:	cmp	x3, #0x9
   35668:	b.hi	3569c <PyInit__decimal@@Base+0x2ebe8>  // b.pmore
   3566c:	cmp	x3, #0x4
   35670:	b.hi	356f0 <PyInit__decimal@@Base+0x2ec3c>  // b.pmore
   35674:	b.hi	359cc <PyInit__decimal@@Base+0x2ef18>  // b.pmore
   35678:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   3567c:	add	x8, x8, #0x751
   35680:	adr	x9, 35690 <PyInit__decimal@@Base+0x2ebdc>
   35684:	ldrb	w10, [x8, x3]
   35688:	add	x9, x9, x10, lsl #2
   3568c:	br	x9
   35690:	str	x2, [x0]
   35694:	str	xzr, [x1]
   35698:	ret
   3569c:	cmp	x3, #0xe
   356a0:	b.hi	3573c <PyInit__decimal@@Base+0x2ec88>  // b.pmore
   356a4:	sub	x8, x3, #0xa
   356a8:	cmp	x8, #0x4
   356ac:	b.hi	359cc <PyInit__decimal@@Base+0x2ef18>  // b.pmore
   356b0:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   356b4:	add	x9, x9, #0x747
   356b8:	adr	x10, 356c8 <PyInit__decimal@@Base+0x2ec14>
   356bc:	ldrb	w11, [x9, x8]
   356c0:	add	x10, x10, x11, lsl #2
   356c4:	br	x10
   356c8:	mov	x8, #0xd5bf                	// #54719
   356cc:	movk	x8, #0xbded, lsl #16
   356d0:	movk	x8, #0xfece, lsl #32
   356d4:	movk	x8, #0xdbe6, lsl #48
   356d8:	mov	x9, #0xffffffffffff1c00    	// #-58368
   356dc:	movk	x9, #0xabf4, lsl #16
   356e0:	umulh	x8, x2, x8
   356e4:	movk	x9, #0xfffd, lsl #32
   356e8:	lsr	x8, x8, #33
   356ec:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   356f0:	sub	x8, x3, #0x5
   356f4:	cmp	x8, #0x4
   356f8:	b.hi	359cc <PyInit__decimal@@Base+0x2ef18>  // b.pmore
   356fc:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   35700:	add	x9, x9, #0x74c
   35704:	adr	x10, 35714 <PyInit__decimal@@Base+0x2ec60>
   35708:	ldrb	w11, [x9, x8]
   3570c:	add	x10, x10, x11, lsl #2
   35710:	br	x10
   35714:	mov	x9, #0x7843                	// #30787
   35718:	movk	x9, #0x71b4, lsl #16
   3571c:	movk	x9, #0x5ac4, lsl #32
   35720:	lsr	x8, x2, #5
   35724:	movk	x9, #0xa7c, lsl #48
   35728:	mov	x10, #0xffffffffffff7960    	// #-34464
   3572c:	umulh	x8, x8, x9
   35730:	movk	x10, #0xfffe, lsl #16
   35734:	lsr	x8, x8, #7
   35738:	b	359c0 <PyInit__decimal@@Base+0x2ef0c>
   3573c:	sub	x8, x3, #0xf
   35740:	cmp	x8, #0x4
   35744:	b.hi	359cc <PyInit__decimal@@Base+0x2ef18>  // b.pmore
   35748:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   3574c:	add	x9, x9, #0x742
   35750:	adr	x10, 35760 <PyInit__decimal@@Base+0x2ecac>
   35754:	ldrb	w11, [x9, x8]
   35758:	add	x10, x10, x11, lsl #2
   3575c:	br	x10
   35760:	mov	x9, #0xeac3                	// #60099
   35764:	movk	x9, #0xf3dc, lsl #16
   35768:	movk	x9, #0x4075, lsl #32
   3576c:	mov	x10, #0x8000                	// #32768
   35770:	lsr	x8, x2, #15
   35774:	movk	x9, #0x2, lsl #48
   35778:	movk	x10, #0x5b39, lsl #16
   3577c:	movk	x10, #0x7281, lsl #32
   35780:	umulh	x8, x8, x9
   35784:	movk	x10, #0xfffc, lsl #48
   35788:	lsr	x8, x8, #20
   3578c:	b	359c0 <PyInit__decimal@@Base+0x2ef0c>
   35790:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   35794:	movk	x8, #0xcccd
   35798:	umulh	x8, x2, x8
   3579c:	mov	x9, #0xfffffffffffffff6    	// #-10
   357a0:	lsr	x8, x8, #3
   357a4:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   357a8:	mov	x9, #0xf5c3                	// #62915
   357ac:	movk	x9, #0x5c28, lsl #16
   357b0:	movk	x9, #0xc28f, lsl #32
   357b4:	lsr	x8, x2, #2
   357b8:	movk	x9, #0x28f5, lsl #48
   357bc:	umulh	x8, x8, x9
   357c0:	mov	x10, #0xffffffffffffff9c    	// #-100
   357c4:	lsr	x8, x8, #2
   357c8:	b	359c0 <PyInit__decimal@@Base+0x2ef0c>
   357cc:	mov	x9, #0xf7cf                	// #63439
   357d0:	movk	x9, #0xe353, lsl #16
   357d4:	movk	x9, #0x9ba5, lsl #32
   357d8:	lsr	x8, x2, #3
   357dc:	movk	x9, #0x20c4, lsl #48
   357e0:	umulh	x8, x8, x9
   357e4:	mov	x10, #0xfffffffffffffc18    	// #-1000
   357e8:	lsr	x8, x8, #4
   357ec:	b	359c0 <PyInit__decimal@@Base+0x2ef0c>
   357f0:	mov	x8, #0x594b                	// #22859
   357f4:	movk	x8, #0x3886, lsl #16
   357f8:	movk	x8, #0xc5d6, lsl #32
   357fc:	movk	x8, #0x346d, lsl #48
   35800:	umulh	x8, x2, x8
   35804:	mov	x9, #0xffffffffffffd8f0    	// #-10000
   35808:	lsr	x8, x8, #11
   3580c:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   35810:	mov	x8, #0xaaff                	// #43775
   35814:	movk	x8, #0xcb24, lsl #16
   35818:	movk	x8, #0xff0b, lsl #32
   3581c:	movk	x8, #0xafeb, lsl #48
   35820:	mov	x9, #0xffffffffffff1800    	// #-59392
   35824:	movk	x9, #0xb789, lsl #16
   35828:	umulh	x8, x2, x8
   3582c:	movk	x9, #0xffe8, lsl #32
   35830:	lsr	x8, x8, #36
   35834:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   35838:	mov	x8, #0x2233                	// #8755
   3583c:	movk	x8, #0x5bd4, lsl #16
   35840:	movk	x8, #0x3302, lsl #32
   35844:	movk	x8, #0x232f, lsl #48
   35848:	mov	x9, #0xfffffffffffff000    	// #-4096
   3584c:	movk	x9, #0x2b5a, lsl #16
   35850:	umulh	x8, x2, x8
   35854:	movk	x9, #0xff17, lsl #32
   35858:	lsr	x8, x8, #37
   3585c:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   35860:	mov	x8, #0x385                 	// #901
   35864:	movk	x8, #0x92ed, lsl #16
   35868:	movk	x8, #0x84d0, lsl #32
   3586c:	movk	x8, #0x384b, lsl #48
   35870:	mov	x9, #0xffffffffffff6000    	// #-40960
   35874:	movk	x9, #0xb18d, lsl #16
   35878:	umulh	x8, x2, x8
   3587c:	movk	x9, #0xf6e7, lsl #32
   35880:	lsr	x8, x8, #41
   35884:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   35888:	mov	x8, #0xcd81                	// #52609
   3588c:	movk	x8, #0x5095, lsl #16
   35890:	movk	x8, #0x4dc3, lsl #32
   35894:	movk	x8, #0xb42, lsl #48
   35898:	mov	x9, #0xffffffffffffc000    	// #-16384
   3589c:	movk	x9, #0xef85, lsl #16
   358a0:	umulh	x8, x2, x8
   358a4:	movk	x9, #0xa50c, lsl #32
   358a8:	lsr	x8, x8, #42
   358ac:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   358b0:	mov	x8, #0x34db                	// #13531
   358b4:	movk	x8, #0xd7b6, lsl #16
   358b8:	movk	x8, #0xde82, lsl #32
   358bc:	movk	x8, #0x431b, lsl #48
   358c0:	mov	x9, #0xffffffffffffbdc0    	// #-16960
   358c4:	umulh	x8, x2, x8
   358c8:	movk	x9, #0xfff0, lsl #16
   358cc:	lsr	x8, x8, #18
   358d0:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   358d4:	mov	x8, #0x42bd                	// #17085
   358d8:	movk	x8, #0xe57a, lsl #16
   358dc:	movk	x8, #0x94d5, lsl #32
   358e0:	movk	x8, #0xd6bf, lsl #48
   358e4:	mov	x9, #0xffffffffffff6980    	// #-38528
   358e8:	umulh	x8, x2, x8
   358ec:	movk	x9, #0xff67, lsl #16
   358f0:	lsr	x8, x8, #23
   358f4:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   358f8:	mov	x8, #0xcefd                	// #52989
   358fc:	movk	x8, #0x8461, lsl #16
   35900:	movk	x8, #0x7711, lsl #32
   35904:	movk	x8, #0xabcc, lsl #48
   35908:	mov	x9, #0xffffffffffff1f00    	// #-57600
   3590c:	umulh	x8, x2, x8
   35910:	movk	x9, #0xfa0a, lsl #16
   35914:	lsr	x8, x8, #26
   35918:	b	35968 <PyInit__decimal@@Base+0x2eeb4>
   3591c:	mov	x9, #0x5a53                	// #23123
   35920:	movk	x9, #0xa09b, lsl #16
   35924:	movk	x9, #0xb82f, lsl #32
   35928:	lsr	x8, x2, #9
   3592c:	movk	x9, #0x44, lsl #48
   35930:	mov	x10, #0xffffffffffff3600    	// #-51712
   35934:	umulh	x8, x8, x9
   35938:	movk	x10, #0xc465, lsl #16
   3593c:	lsr	x8, x8, #11
   35940:	b	359c0 <PyInit__decimal@@Base+0x2ef0c>
   35944:	mov	x8, #0x7857                	// #30807
   35948:	movk	x8, #0xb113, lsl #16
   3594c:	movk	x8, #0x652f, lsl #32
   35950:	movk	x8, #0x39a5, lsl #48
   35954:	mov	x9, #0x903f0000            	// #2420047872
   35958:	movk	x9, #0x790d, lsl #32
   3595c:	umulh	x8, x2, x8
   35960:	movk	x9, #0xffdc, lsl #48
   35964:	lsr	x8, x8, #51
   35968:	str	x8, [x0]
   3596c:	madd	x8, x8, x9, x2
   35970:	b	359c8 <PyInit__decimal@@Base+0x2ef14>
   35974:	mov	x9, #0x1b53                	// #6995
   35978:	movk	x9, #0xd519, lsl #16
   3597c:	lsr	x8, x2, #17
   35980:	movk	x9, #0x5c3b, lsl #32
   35984:	mov	x10, #0xa2760000            	// #2725642240
   35988:	movk	x10, #0xba87, lsl #32
   3598c:	umulh	x8, x8, x9
   35990:	movk	x10, #0xfe9c, lsl #48
   35994:	lsr	x8, x8, #22
   35998:	b	359c0 <PyInit__decimal@@Base+0x2ef0c>
   3599c:	mov	x9, #0x490f                	// #18703
   359a0:	movk	x9, #0x7747, lsl #16
   359a4:	lsr	x8, x2, #18
   359a8:	movk	x9, #0x49c9, lsl #32
   359ac:	mov	x10, #0x589c0000            	// #1486618624
   359b0:	movk	x10, #0x494c, lsl #32
   359b4:	umulh	x8, x8, x9
   359b8:	movk	x10, #0xf21f, lsl #48
   359bc:	lsr	x8, x8, #24
   359c0:	str	x8, [x0]
   359c4:	madd	x8, x8, x10, x2
   359c8:	str	x8, [x1]
   359cc:	ret
   359d0:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   359d4:	movk	x8, #0x2304, lsl #32
   359d8:	movk	x8, #0x8ac7, lsl #48
   359dc:	cmp	x2, x8
   359e0:	csinc	x8, xzr, x8, ls  // ls = plast
   359e4:	cset	w9, hi  // hi = pmore
   359e8:	sub	x8, x2, x8
   359ec:	str	x9, [x0]
   359f0:	b	359c8 <PyInit__decimal@@Base+0x2ef14>
   359f4:	stp	x29, x30, [sp, #-96]!
   359f8:	stp	x28, x27, [sp, #16]
   359fc:	stp	x26, x25, [sp, #32]
   35a00:	stp	x24, x23, [sp, #48]
   35a04:	stp	x22, x21, [sp, #64]
   35a08:	stp	x20, x19, [sp, #80]
   35a0c:	mov	x29, sp
   35a10:	sub	sp, sp, #0x800
   35a14:	ldr	q0, [x2, #16]
   35a18:	ldrb	w8, [x2]
   35a1c:	mov	x27, x4
   35a20:	mov	x24, x3
   35a24:	stur	q0, [sp, #104]
   35a28:	ldr	q0, [x2, #32]
   35a2c:	and	w8, w8, #0x1e
   35a30:	orr	w8, w8, #0x40
   35a34:	mov	x25, x2
   35a38:	stur	q0, [sp, #120]
   35a3c:	ldr	q0, [x3, #16]
   35a40:	ldrb	w9, [x3]
   35a44:	mov	x19, x1
   35a48:	mov	x20, x0
   35a4c:	stur	q0, [sp, #56]
   35a50:	ldr	q0, [x3, #32]
   35a54:	and	w9, w9, #0x1e
   35a58:	cmp	x0, x2
   35a5c:	strb	w8, [sp, #88]
   35a60:	orr	w8, w9, #0x40
   35a64:	str	xzr, [sp, #96]
   35a68:	strb	w8, [sp, #40]
   35a6c:	stur	q0, [sp, #72]
   35a70:	str	xzr, [sp, #48]
   35a74:	b.eq	35a84 <PyInit__decimal@@Base+0x2efd0>  // b.none
   35a78:	cmp	x20, x24
   35a7c:	mov	x22, x20
   35a80:	b.ne	35a90 <PyInit__decimal@@Base+0x2efdc>  // b.any
   35a84:	bl	20460 <PyInit__decimal@@Base+0x199ac>
   35a88:	mov	x22, x0
   35a8c:	cbz	x0, 35c18 <PyInit__decimal@@Base+0x2f164>
   35a90:	cmp	x19, x25
   35a94:	b.eq	35aa4 <PyInit__decimal@@Base+0x2eff0>  // b.none
   35a98:	cmp	x19, x24
   35a9c:	mov	x21, x19
   35aa0:	b.ne	35ab0 <PyInit__decimal@@Base+0x2effc>  // b.any
   35aa4:	bl	20460 <PyInit__decimal@@Base+0x199ac>
   35aa8:	mov	x21, x0
   35aac:	cbz	x0, 35ca0 <PyInit__decimal@@Base+0x2f1ec>
   35ab0:	add	x0, sp, #0x88
   35ab4:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   35ab8:	ldr	x10, [x25, #16]
   35abc:	ldr	x9, [x24, #16]
   35ac0:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   35ac4:	movk	x8, #0xb6b3, lsl #32
   35ac8:	movk	x8, #0xde0, lsl #48
   35acc:	sub	x9, x10, x9
   35ad0:	add	x9, x9, #0x4
   35ad4:	cmp	x10, x8
   35ad8:	str	x9, [sp, #136]
   35adc:	b.gt	35c08 <PyInit__decimal@@Base+0x2f154>
   35ae0:	cmp	x9, x8
   35ae4:	b.gt	35c08 <PyInit__decimal@@Base+0x2f154>
   35ae8:	mov	w10, #0x30                  	// #48
   35aec:	mov	w11, #0x40                  	// #64
   35af0:	add	x12, sp, #0x550
   35af4:	strb	w10, [sp, #1312]
   35af8:	strb	w10, [sp, #752]
   35afc:	mov	w10, #0x1                   	// #1
   35b00:	str	x22, [sp, #32]
   35b04:	add	x8, sp, #0x2b8
   35b08:	str	x12, [sp, #1352]
   35b0c:	mov	w12, #0x90                  	// #144
   35b10:	str	x11, [sp, #1344]
   35b14:	str	x11, [sp, #784]
   35b18:	adrp	x11, 38000 <PyInit__decimal@@Base+0x3154c>
   35b1c:	adrp	x22, 3f000 <PyInit__decimal@@Base+0x3854c>
   35b20:	dup	v1.2d, x10
   35b24:	ldp	x15, x17, [sp, #48]
   35b28:	ldur	q0, [sp, #64]
   35b2c:	strb	w12, [sp, #696]
   35b30:	add	x22, x22, #0x370
   35b34:	mov	x10, #0x435f                	// #17247
   35b38:	stur	q1, [x8, #24]
   35b3c:	ldr	q1, [x11, #3296]
   35b40:	ldr	x9, [sp, #80]
   35b44:	movk	x10, #0xd79, lsl #16
   35b48:	ldr	x23, [x22, #136]
   35b4c:	movk	x10, #0x35e5, lsl #32
   35b50:	add	x13, sp, #0x320
   35b54:	mov	w14, #0x2                   	// #2
   35b58:	movk	x10, #0xd794, lsl #48
   35b5c:	sub	x18, x29, #0xb0
   35b60:	str	x13, [sp, #792]
   35b64:	add	x13, sp, #0x2e8
   35b68:	str	x14, [sp, #744]
   35b6c:	mov	w14, #0x50                  	// #80
   35b70:	stur	q1, [x8, #8]
   35b74:	neg	x8, x17
   35b78:	umulh	x10, x17, x10
   35b7c:	fmov	x11, d0
   35b80:	str	xzr, [sp, #1320]
   35b84:	str	xzr, [sp, #1328]
   35b88:	str	xzr, [sp, #760]
   35b8c:	str	xzr, [sp, #768]
   35b90:	str	xzr, [sp, #1336]
   35b94:	str	xzr, [sp, #776]
   35b98:	mov	w12, #0x13                  	// #19
   35b9c:	stur	q0, [x18, #24]
   35ba0:	sturb	w14, [x29, #-176]
   35ba4:	str	x13, [sp, #736]
   35ba8:	stur	x9, [x29, #-136]
   35bac:	stp	x8, x17, [x29, #-168]
   35bb0:	add	x8, x9, x11, lsl #3
   35bb4:	stp	xzr, x23, [sp, #184]
   35bb8:	lsr	x10, x10, #4
   35bbc:	ldrb	w16, [sp, #40]
   35bc0:	msub	x10, x10, x12, x17
   35bc4:	ldur	x8, [x8, #-8]
   35bc8:	cmp	x10, #0x0
   35bcc:	csel	x12, x12, x10, eq  // eq = none
   35bd0:	cmp	x12, #0x13
   35bd4:	add	x10, sp, #0x88
   35bd8:	b.cs	35c28 <PyInit__decimal@@Base+0x2f174>  // b.hs, b.nlast
   35bdc:	cmp	x11, #0x2
   35be0:	b.lt	35c34 <PyInit__decimal@@Base+0x2f180>  // b.tstop
   35be4:	mov	w13, #0x13                  	// #19
   35be8:	add	x9, x9, x11, lsl #3
   35bec:	sub	x11, x13, x12
   35bf0:	ldur	x9, [x9, #-16]
   35bf4:	ldr	x12, [x22, x12, lsl #3]
   35bf8:	ldr	x11, [x22, x11, lsl #3]
   35bfc:	udiv	x9, x9, x12
   35c00:	madd	x8, x11, x8, x9
   35c04:	b	35c34 <PyInit__decimal@@Base+0x2f180>
   35c08:	ldr	w8, [x27]
   35c0c:	orr	w8, w8, #0x8
   35c10:	str	w8, [x27]
   35c14:	b	36458 <PyInit__decimal@@Base+0x2f9a4>
   35c18:	ldr	w8, [x27]
   35c1c:	orr	w8, w8, #0x200
   35c20:	str	w8, [x27]
   35c24:	b	364d8 <PyInit__decimal@@Base+0x2fa24>
   35c28:	add	x9, x22, x12, lsl #3
   35c2c:	ldur	x9, [x9, #-152]
   35c30:	udiv	x8, x8, x9
   35c34:	ldr	x26, [x22, #72]
   35c38:	add	x24, x10, #0x1c
   35c3c:	str	x15, [sp, #16]
   35c40:	str	w16, [sp, #12]
   35c44:	cmp	x26, x8
   35c48:	str	x17, [sp]
   35c4c:	b.ls	35c78 <PyInit__decimal@@Base+0x2f1c4>  // b.plast
   35c50:	ldr	x9, [x22, #32]
   35c54:	cmp	x9, x8
   35c58:	b.ls	35cb0 <PyInit__decimal@@Base+0x2f1fc>  // b.plast
   35c5c:	ldr	x9, [x22, #16]
   35c60:	cmp	x9, x8
   35c64:	b.ls	35cf4 <PyInit__decimal@@Base+0x2f240>  // b.plast
   35c68:	ldr	x9, [x22, #8]
   35c6c:	cmp	x9, x8
   35c70:	mov	w9, #0x1                   	// #1
   35c74:	b	35d54 <PyInit__decimal@@Base+0x2f2a0>
   35c78:	ldr	x9, [x22, #112]
   35c7c:	cmp	x9, x8
   35c80:	b.ls	35ccc <PyInit__decimal@@Base+0x2f218>  // b.plast
   35c84:	ldr	x9, [x22, #88]
   35c88:	cmp	x9, x8
   35c8c:	b.ls	35d04 <PyInit__decimal@@Base+0x2f250>  // b.plast
   35c90:	ldr	x9, [x22, #80]
   35c94:	cmp	x9, x8
   35c98:	mov	w9, #0xa                   	// #10
   35c9c:	b	35d54 <PyInit__decimal@@Base+0x2f2a0>
   35ca0:	ldr	w8, [x27]
   35ca4:	orr	w8, w8, #0x200
   35ca8:	str	w8, [x27]
   35cac:	b	36458 <PyInit__decimal@@Base+0x2f9a4>
   35cb0:	ldr	x9, [x22, #48]
   35cb4:	cmp	x9, x8
   35cb8:	b.ls	35d20 <PyInit__decimal@@Base+0x2f26c>  // b.plast
   35cbc:	ldr	x9, [x22, #40]
   35cc0:	cmp	x9, x8
   35cc4:	mov	w9, #0x5                   	// #5
   35cc8:	b	35d54 <PyInit__decimal@@Base+0x2f2a0>
   35ccc:	ldr	x9, [x22, #144]
   35cd0:	cmp	x9, x8
   35cd4:	b.ls	35d3c <PyInit__decimal@@Base+0x2f288>  // b.plast
   35cd8:	ldr	x9, [x22, #128]
   35cdc:	cmp	x9, x8
   35ce0:	b.ls	35d4c <PyInit__decimal@@Base+0x2f298>  // b.plast
   35ce4:	ldr	x9, [x22, #120]
   35ce8:	cmp	x9, x8
   35cec:	mov	w9, #0xf                   	// #15
   35cf0:	b	35d54 <PyInit__decimal@@Base+0x2f2a0>
   35cf4:	ldr	x9, [x22, #24]
   35cf8:	cmp	x9, x8
   35cfc:	mov	w9, #0x3                   	// #3
   35d00:	b	35d54 <PyInit__decimal@@Base+0x2f2a0>
   35d04:	ldr	x9, [x22, #104]
   35d08:	cmp	x9, x8
   35d0c:	b.ls	35ef8 <PyInit__decimal@@Base+0x2f444>  // b.plast
   35d10:	ldr	x9, [x22, #96]
   35d14:	cmp	x9, x8
   35d18:	mov	w9, #0xc                   	// #12
   35d1c:	b	35d54 <PyInit__decimal@@Base+0x2f2a0>
   35d20:	ldr	x9, [x22, #64]
   35d24:	cmp	x9, x8
   35d28:	b.ls	35f00 <PyInit__decimal@@Base+0x2f44c>  // b.plast
   35d2c:	ldr	x9, [x22, #56]
   35d30:	cmp	x9, x8
   35d34:	mov	w9, #0x7                   	// #7
   35d38:	b	35d54 <PyInit__decimal@@Base+0x2f2a0>
   35d3c:	ldr	x9, [x22, #152]
   35d40:	cmp	x9, x8
   35d44:	mov	w9, #0x13                  	// #19
   35d48:	b	35d54 <PyInit__decimal@@Base+0x2f2a0>
   35d4c:	cmp	x23, x8
   35d50:	mov	w9, #0x11                  	// #17
   35d54:	cinc	x9, x9, ls  // ls = plast
   35d58:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   35d5c:	mov	w11, #0x13                  	// #19
   35d60:	ldr	x12, [x10, #1344]
   35d64:	sub	x9, x11, x9
   35d68:	ldr	x10, [x21, #32]
   35d6c:	ldr	x9, [x22, x9, lsl #3]
   35d70:	cmp	x12, #0x2
   35d74:	mov	w11, #0x2                   	// #2
   35d78:	csel	x1, x12, x11, gt
   35d7c:	cmp	x1, x10
   35d80:	mul	x25, x9, x8
   35d84:	b.eq	35db4 <PyInit__decimal@@Base+0x2f300>  // b.none
   35d88:	ldrb	w8, [x21]
   35d8c:	tbnz	w8, #5, 35da0 <PyInit__decimal@@Base+0x2f2ec>
   35d90:	mov	x0, x21
   35d94:	mov	x2, x24
   35d98:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   35d9c:	b	35db4 <PyInit__decimal@@Base+0x2f300>
   35da0:	cmp	x1, x10
   35da4:	b.le	35db4 <PyInit__decimal@@Base+0x2f300>
   35da8:	mov	x0, x21
   35dac:	mov	x2, x24
   35db0:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   35db4:	ldr	x0, [x21, #40]
   35db8:	add	x1, sp, #0xb8
   35dbc:	mov	w2, #0x2                   	// #2
   35dc0:	mov	x3, x25
   35dc4:	bl	1b690 <PyInit__decimal@@Base+0x14bdc>
   35dc8:	ldrb	w8, [x21]
   35dcc:	mov	x9, #0xffffffffffffffef    	// #-17
   35dd0:	mov	x28, x21
   35dd4:	mov	w10, #0x1                   	// #1
   35dd8:	and	w8, w8, #0xf0
   35ddc:	strb	w8, [x21]
   35de0:	str	x9, [x28, #8]!
   35de4:	ldr	x9, [x21, #40]
   35de8:	str	x27, [sp, #24]
   35dec:	ldr	x8, [x9, #8]
   35df0:	cmp	x8, #0x0
   35df4:	cinc	x8, x10, ne  // ne = any
   35df8:	str	x8, [x21, #24]
   35dfc:	add	x9, x9, x8, lsl #3
   35e00:	ldur	x9, [x9, #-8]
   35e04:	cmp	x26, x9
   35e08:	b.ls	35e34 <PyInit__decimal@@Base+0x2f380>  // b.plast
   35e0c:	ldr	x10, [x22, #32]
   35e10:	cmp	x10, x9
   35e14:	b.ls	35e5c <PyInit__decimal@@Base+0x2f3a8>  // b.plast
   35e18:	ldr	x10, [x22, #16]
   35e1c:	cmp	x10, x9
   35e20:	b.ls	35ea0 <PyInit__decimal@@Base+0x2f3ec>  // b.plast
   35e24:	ldr	x10, [x22, #8]
   35e28:	cmp	x10, x9
   35e2c:	mov	w9, #0x1                   	// #1
   35e30:	b	35f10 <PyInit__decimal@@Base+0x2f45c>
   35e34:	ldr	x10, [x22, #112]
   35e38:	cmp	x10, x9
   35e3c:	b.ls	35e78 <PyInit__decimal@@Base+0x2f3c4>  // b.plast
   35e40:	ldr	x10, [x22, #88]
   35e44:	cmp	x10, x9
   35e48:	b.ls	35eb0 <PyInit__decimal@@Base+0x2f3fc>  // b.plast
   35e4c:	ldr	x10, [x22, #80]
   35e50:	cmp	x10, x9
   35e54:	mov	w9, #0xa                   	// #10
   35e58:	b	35f10 <PyInit__decimal@@Base+0x2f45c>
   35e5c:	ldr	x10, [x22, #48]
   35e60:	cmp	x10, x9
   35e64:	b.ls	35ecc <PyInit__decimal@@Base+0x2f418>  // b.plast
   35e68:	ldr	x10, [x22, #40]
   35e6c:	cmp	x10, x9
   35e70:	mov	w9, #0x5                   	// #5
   35e74:	b	35f10 <PyInit__decimal@@Base+0x2f45c>
   35e78:	ldr	x10, [x22, #144]
   35e7c:	cmp	x10, x9
   35e80:	b.ls	35ee8 <PyInit__decimal@@Base+0x2f434>  // b.plast
   35e84:	ldr	x10, [x22, #128]
   35e88:	cmp	x10, x9
   35e8c:	b.ls	35f08 <PyInit__decimal@@Base+0x2f454>  // b.plast
   35e90:	ldr	x10, [x22, #120]
   35e94:	cmp	x10, x9
   35e98:	mov	w9, #0xf                   	// #15
   35e9c:	b	35f10 <PyInit__decimal@@Base+0x2f45c>
   35ea0:	ldr	x10, [x22, #24]
   35ea4:	cmp	x10, x9
   35ea8:	mov	w9, #0x3                   	// #3
   35eac:	b	35f10 <PyInit__decimal@@Base+0x2f45c>
   35eb0:	ldr	x10, [x22, #104]
   35eb4:	cmp	x10, x9
   35eb8:	b.ls	368a0 <PyInit__decimal@@Base+0x2fdec>  // b.plast
   35ebc:	ldr	x10, [x22, #96]
   35ec0:	cmp	x10, x9
   35ec4:	mov	w9, #0xc                   	// #12
   35ec8:	b	35f10 <PyInit__decimal@@Base+0x2f45c>
   35ecc:	ldr	x10, [x22, #64]
   35ed0:	cmp	x10, x9
   35ed4:	b.ls	368a8 <PyInit__decimal@@Base+0x2fdf4>  // b.plast
   35ed8:	ldr	x10, [x22, #56]
   35edc:	cmp	x10, x9
   35ee0:	mov	w9, #0x7                   	// #7
   35ee4:	b	35f10 <PyInit__decimal@@Base+0x2f45c>
   35ee8:	ldr	x10, [x22, #152]
   35eec:	cmp	x10, x9
   35ef0:	mov	w9, #0x13                  	// #19
   35ef4:	b	35f10 <PyInit__decimal@@Base+0x2f45c>
   35ef8:	mov	w9, #0xe                   	// #14
   35efc:	b	35d58 <PyInit__decimal@@Base+0x2f2a4>
   35f00:	mov	w9, #0x9                   	// #9
   35f04:	b	35d58 <PyInit__decimal@@Base+0x2f2a4>
   35f08:	cmp	x23, x9
   35f0c:	mov	w9, #0x11                  	// #17
   35f10:	cinc	x9, x9, ls  // ls = plast
   35f14:	mov	w10, #0x13                  	// #19
   35f18:	madd	x8, x8, x10, x9
   35f1c:	sub	x8, x8, #0x13
   35f20:	sub	x0, x29, #0x48
   35f24:	sub	x22, x29, #0xb0
   35f28:	str	x8, [x21, #16]
   35f2c:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   35f30:	sub	x0, x29, #0x80
   35f34:	bl	1c850 <PyInit__decimal@@Base+0x15d9c>
   35f38:	ldr	x12, [sp, #136]
   35f3c:	adrp	x10, 40000 <PyInit__decimal@@Base+0x3954c>
   35f40:	mov	x11, #0x63                  	// #99
   35f44:	mov	x9, #0xff9d                	// #65437
   35f48:	movk	x11, #0xa764, lsl #16
   35f4c:	ldr	q0, [x10, #128]
   35f50:	mov	w8, #0x8                   	// #8
   35f54:	movk	x9, #0x589b, lsl #16
   35f58:	movk	x11, #0xb6b3, lsl #32
   35f5c:	movk	x9, #0x494c, lsl #32
   35f60:	movk	x11, #0xde0, lsl #48
   35f64:	stur	w8, [x29, #-92]
   35f68:	stur	w8, [x29, #-36]
   35f6c:	add	x8, x12, #0x2
   35f70:	movk	x9, #0xf21f, lsl #48
   35f74:	dup	v1.2d, x11
   35f78:	cmp	x8, #0x11
   35f7c:	stur	x9, [x29, #-112]
   35f80:	stur	q0, [x22, #112]
   35f84:	str	q1, [x22, #48]
   35f88:	b.lt	36250 <PyInit__decimal@@Base+0x2f79c>  // b.tstop
   35f8c:	add	x10, sp, #0x520
   35f90:	mov	w9, #0xffffffff            	// #-1
   35f94:	add	x22, x10, #0x8
   35f98:	add	x10, sp, #0xb8
   35f9c:	add	x11, x8, #0x1
   35fa0:	add	x12, x8, #0x2
   35fa4:	cmp	x11, #0x0
   35fa8:	csinc	x8, x12, x8, lt  // lt = tstop
   35fac:	add	w9, w9, #0x1
   35fb0:	asr	x8, x8, #1
   35fb4:	cmp	x11, #0x21
   35fb8:	str	x8, [x10, w9, sxtw #3]
   35fbc:	b.gt	35f9c <PyInit__decimal@@Base+0x2f4e8>
   35fc0:	tbnz	w9, #31, 36250 <PyInit__decimal@@Base+0x2f79c>
   35fc4:	mov	w27, w9
   35fc8:	mov	w26, #0x1041                	// #4161
   35fcc:	add	x23, sp, #0xb8
   35fd0:	b	36004 <PyInit__decimal@@Base+0x2f550>
   35fd4:	ldrb	w8, [x21]
   35fd8:	and	w8, w8, #0xf0
   35fdc:	orr	w8, w8, #0x4
   35fe0:	strb	w8, [x21]
   35fe4:	stp	xzr, xzr, [x28]
   35fe8:	str	xzr, [x28, #16]
   35fec:	ldr	w8, [sp, #164]
   35ff0:	orr	w8, w8, #0x100
   35ff4:	str	w8, [sp, #164]
   35ff8:	cmp	x27, #0x0
   35ffc:	sub	x27, x27, #0x1
   36000:	b.le	36250 <PyInit__decimal@@Base+0x2f79c>
   36004:	add	x0, sp, #0x520
   36008:	sub	x3, x29, #0x80
   3600c:	sub	x4, x29, #0x18
   36010:	mov	x1, x21
   36014:	mov	x2, x21
   36018:	stur	wzr, [x29, #-24]
   3601c:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   36020:	add	x0, sp, #0x520
   36024:	sub	x1, x29, #0x80
   36028:	sub	x2, x29, #0x18
   3602c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   36030:	ldur	w9, [x29, #-24]
   36034:	ldr	w8, [sp, #164]
   36038:	tst	w9, w26
   3603c:	orr	w8, w8, w9
   36040:	str	w8, [sp, #164]
   36044:	b.eq	360b4 <PyInit__decimal@@Base+0x2f600>  // b.none
   36048:	ldrb	w9, [sp, #1312]
   3604c:	tbnz	w9, #5, 36098 <PyInit__decimal@@Base+0x2f5e4>
   36050:	adrp	x11, 53000 <PyInit__decimal@@Base+0x4c54c>
   36054:	ldr	x10, [sp, #1344]
   36058:	ldr	x1, [x11, #1344]
   3605c:	cmp	x10, x1
   36060:	b.le	36098 <PyInit__decimal@@Base+0x2f5e4>
   36064:	ldr	x0, [sp, #1352]
   36068:	sub	x3, x29, #0x14
   3606c:	mov	w2, #0x8                   	// #8
   36070:	sturb	wzr, [x29, #-20]
   36074:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   36078:	ldurb	w8, [x29, #-20]
   3607c:	str	x0, [sp, #1352]
   36080:	cbnz	w8, 36090 <PyInit__decimal@@Base+0x2f5dc>
   36084:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36088:	ldr	x8, [x8, #1344]
   3608c:	str	x8, [sp, #1344]
   36090:	ldrb	w9, [sp, #1312]
   36094:	ldr	w8, [sp, #164]
   36098:	and	w9, w9, #0xf0
   3609c:	orr	w8, w8, #0x100
   360a0:	orr	w9, w9, #0x4
   360a4:	strb	w9, [sp, #1312]
   360a8:	stp	xzr, xzr, [x22]
   360ac:	str	xzr, [x22, #16]
   360b0:	str	w8, [sp, #164]
   360b4:	ldr	x8, [x23, x27, lsl #3]
   360b8:	ldur	x9, [x29, #-160]
   360bc:	lsl	x8, x8, #1
   360c0:	add	x8, x8, #0x5
   360c4:	subs	x2, x9, x8
   360c8:	stur	x8, [x29, #-72]
   360cc:	b.le	360f4 <PyInit__decimal@@Base+0x2f640>
   360d0:	add	x0, sp, #0x2f0
   360d4:	sub	x1, x29, #0xb0
   360d8:	mov	x3, x24
   360dc:	add	x25, sp, #0x2f0
   360e0:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   360e4:	ldur	x8, [x29, #-72]
   360e8:	neg	x8, x8
   360ec:	str	x8, [sp, #760]
   360f0:	b	360f8 <PyInit__decimal@@Base+0x2f644>
   360f4:	sub	x25, x29, #0xb0
   360f8:	add	x0, sp, #0x2f0
   360fc:	add	x2, sp, #0x520
   36100:	sub	x3, x29, #0x48
   36104:	mov	x1, x25
   36108:	mov	x4, x24
   3610c:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   36110:	add	x0, sp, #0x2f0
   36114:	sub	x1, x29, #0x48
   36118:	mov	x2, x24
   3611c:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   36120:	add	x0, sp, #0x520
   36124:	add	x2, sp, #0x2b8
   36128:	sub	x3, x29, #0x80
   3612c:	sub	x4, x29, #0x18
   36130:	mov	x1, x21
   36134:	stur	wzr, [x29, #-24]
   36138:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   3613c:	add	x0, sp, #0x520
   36140:	sub	x1, x29, #0x80
   36144:	sub	x2, x29, #0x18
   36148:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   3614c:	ldur	w9, [x29, #-24]
   36150:	ldr	w8, [sp, #164]
   36154:	tst	w9, w26
   36158:	orr	w8, w8, w9
   3615c:	str	w8, [sp, #164]
   36160:	b.eq	361d0 <PyInit__decimal@@Base+0x2f71c>  // b.none
   36164:	ldrb	w9, [sp, #1312]
   36168:	tbnz	w9, #5, 361b4 <PyInit__decimal@@Base+0x2f700>
   3616c:	adrp	x11, 53000 <PyInit__decimal@@Base+0x4c54c>
   36170:	ldr	x10, [sp, #1344]
   36174:	ldr	x1, [x11, #1344]
   36178:	cmp	x10, x1
   3617c:	b.le	361b4 <PyInit__decimal@@Base+0x2f700>
   36180:	ldr	x0, [sp, #1352]
   36184:	sub	x3, x29, #0x14
   36188:	mov	w2, #0x8                   	// #8
   3618c:	sturb	wzr, [x29, #-20]
   36190:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   36194:	ldurb	w8, [x29, #-20]
   36198:	str	x0, [sp, #1352]
   3619c:	cbnz	w8, 361ac <PyInit__decimal@@Base+0x2f6f8>
   361a0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   361a4:	ldr	x8, [x8, #1344]
   361a8:	str	x8, [sp, #1344]
   361ac:	ldrb	w9, [sp, #1312]
   361b0:	ldr	w8, [sp, #164]
   361b4:	and	w9, w9, #0xf0
   361b8:	orr	w8, w8, #0x100
   361bc:	orr	w9, w9, #0x4
   361c0:	strb	w9, [sp, #1312]
   361c4:	stp	xzr, xzr, [x22]
   361c8:	str	xzr, [x22, #16]
   361cc:	str	w8, [sp, #164]
   361d0:	add	x1, sp, #0x520
   361d4:	add	x2, sp, #0x2f0
   361d8:	sub	x3, x29, #0x80
   361dc:	sub	x4, x29, #0x18
   361e0:	mov	x0, x21
   361e4:	stur	wzr, [x29, #-24]
   361e8:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   361ec:	ldur	w8, [x29, #-24]
   361f0:	ldr	w9, [sp, #164]
   361f4:	tst	w8, w26
   361f8:	orr	w9, w9, w8
   361fc:	str	w9, [sp, #164]
   36200:	b.eq	35ff8 <PyInit__decimal@@Base+0x2f544>  // b.none
   36204:	ldrb	w8, [x21]
   36208:	tbnz	w8, #5, 35fd8 <PyInit__decimal@@Base+0x2f524>
   3620c:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   36210:	ldr	x9, [x21, #32]
   36214:	ldr	x1, [x10, #1344]
   36218:	cmp	x9, x1
   3621c:	b.le	35fd8 <PyInit__decimal@@Base+0x2f524>
   36220:	sturb	wzr, [x29, #-20]
   36224:	ldr	x0, [x21, #40]
   36228:	sub	x3, x29, #0x14
   3622c:	mov	w2, #0x8                   	// #8
   36230:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   36234:	str	x0, [x21, #40]
   36238:	ldurb	w8, [x29, #-20]
   3623c:	cbnz	w8, 35fd4 <PyInit__decimal@@Base+0x2f520>
   36240:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36244:	ldr	x8, [x8, #1344]
   36248:	str	x8, [x21, #32]
   3624c:	b	35fd4 <PyInit__decimal@@Base+0x2f520>
   36250:	ldrb	w8, [x21]
   36254:	tst	w8, #0xe
   36258:	b.ne	36288 <PyInit__decimal@@Base+0x2f7d4>  // b.any
   3625c:	ldr	w9, [sp, #12]
   36260:	ldr	x11, [sp, #16]
   36264:	ldr	x12, [sp]
   36268:	ldr	x10, [x21, #8]
   3626c:	and	w9, w9, #0x1
   36270:	and	w8, w8, #0xf0
   36274:	add	x11, x12, x11
   36278:	orr	w8, w8, w9
   3627c:	sub	x9, x10, x11
   36280:	str	x9, [x21, #8]
   36284:	strb	w8, [x21]
   36288:	ldrb	w8, [sp, #1312]
   3628c:	ldp	x23, x22, [sp, #24]
   36290:	adrp	x27, 53000 <PyInit__decimal@@Base+0x4c54c>
   36294:	cmp	w8, #0x1f
   36298:	b.hi	362ac <PyInit__decimal@@Base+0x2f7f8>  // b.pmore
   3629c:	ldr	x8, [x27, #1376]
   362a0:	ldr	x0, [sp, #1352]
   362a4:	blr	x8
   362a8:	ldrb	w8, [sp, #1312]
   362ac:	tbnz	w8, #4, 362bc <PyInit__decimal@@Base+0x2f808>
   362b0:	ldr	x8, [x27, #1376]
   362b4:	add	x0, sp, #0x520
   362b8:	blr	x8
   362bc:	ldrb	w8, [sp, #752]
   362c0:	cmp	w8, #0x1f
   362c4:	b.hi	362d8 <PyInit__decimal@@Base+0x2f824>  // b.pmore
   362c8:	ldr	x8, [x27, #1376]
   362cc:	ldr	x0, [sp, #792]
   362d0:	blr	x8
   362d4:	ldrb	w8, [sp, #752]
   362d8:	tbnz	w8, #4, 362e8 <PyInit__decimal@@Base+0x2f834>
   362dc:	ldr	x8, [x27, #1376]
   362e0:	add	x0, sp, #0x2f0
   362e4:	blr	x8
   362e8:	add	x1, sp, #0x88
   362ec:	mov	x0, x21
   362f0:	mov	x2, x24
   362f4:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   362f8:	add	x1, sp, #0x58
   362fc:	add	x3, sp, #0x88
   36300:	mov	x0, x22
   36304:	mov	x2, x21
   36308:	mov	x4, x24
   3630c:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   36310:	ldrb	w8, [x22]
   36314:	tst	w8, #0xe
   36318:	b.eq	36350 <PyInit__decimal@@Base+0x2f89c>  // b.none
   3631c:	tst	w8, #0xc
   36320:	b.eq	36358 <PyInit__decimal@@Base+0x2f8a4>  // b.none
   36324:	ldr	w9, [sp, #164]
   36328:	and	w10, w8, #0x8
   3632c:	and	w8, w8, #0xfffffff1
   36330:	orr	w8, w8, #0x4
   36334:	orr	w9, w9, w10, lsl #5
   36338:	add	x1, sp, #0x88
   3633c:	mov	x0, x22
   36340:	str	w9, [sp, #164]
   36344:	strb	w8, [x22]
   36348:	bl	22944 <PyInit__decimal@@Base+0x1be90>
   3634c:	b	36358 <PyInit__decimal@@Base+0x2f8a4>
   36350:	ldr	x9, [x22, #8]
   36354:	tbnz	x9, #63, 365b0 <PyInit__decimal@@Base+0x2fafc>
   36358:	ldr	x8, [sp, #104]
   3635c:	adrp	x9, 40000 <PyInit__decimal@@Base+0x3954c>
   36360:	ldr	q0, [x9, #144]
   36364:	add	x1, sp, #0x28
   36368:	add	x8, x8, #0x3
   3636c:	add	x3, sp, #0x88
   36370:	mov	x0, x21
   36374:	mov	x2, x22
   36378:	mov	x4, x24
   3637c:	str	x8, [sp, #136]
   36380:	stur	q0, [sp, #144]
   36384:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   36388:	add	x1, sp, #0x58
   3638c:	add	x3, sp, #0x88
   36390:	add	x4, sp, #0x550
   36394:	mov	x0, x21
   36398:	mov	x2, x21
   3639c:	str	wzr, [sp, #1360]
   363a0:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   363a4:	ldr	w9, [sp, #1360]
   363a8:	ldr	w8, [sp, #164]
   363ac:	mov	w10, #0x1041                	// #4161
   363b0:	tst	w9, w10
   363b4:	orr	w8, w8, w9
   363b8:	str	w8, [sp, #164]
   363bc:	b.eq	3642c <PyInit__decimal@@Base+0x2f978>  // b.none
   363c0:	ldrb	w8, [x21]
   363c4:	tbnz	w8, #5, 3640c <PyInit__decimal@@Base+0x2f958>
   363c8:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   363cc:	ldr	x9, [x21, #32]
   363d0:	ldr	x1, [x10, #1344]
   363d4:	cmp	x9, x1
   363d8:	b.le	3640c <PyInit__decimal@@Base+0x2f958>
   363dc:	strb	wzr, [sp, #800]
   363e0:	ldr	x0, [x21, #40]
   363e4:	add	x3, sp, #0x320
   363e8:	mov	w2, #0x8                   	// #8
   363ec:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   363f0:	str	x0, [x21, #40]
   363f4:	ldrb	w8, [sp, #800]
   363f8:	cbnz	w8, 36408 <PyInit__decimal@@Base+0x2f954>
   363fc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36400:	ldr	x8, [x8, #1344]
   36404:	str	x8, [x21, #32]
   36408:	ldrb	w8, [x21]
   3640c:	and	w8, w8, #0xf0
   36410:	orr	w8, w8, #0x4
   36414:	strb	w8, [x21]
   36418:	stp	xzr, xzr, [x28]
   3641c:	str	xzr, [x28, #16]
   36420:	ldr	w8, [sp, #164]
   36424:	orr	w8, w8, #0x100
   36428:	str	w8, [sp, #164]
   3642c:	ldrb	w9, [x22]
   36430:	tst	w9, #0xe
   36434:	b.ne	36444 <PyInit__decimal@@Base+0x2f990>  // b.any
   36438:	ldrb	w9, [x21]
   3643c:	tst	w9, #0xe
   36440:	b.eq	365e8 <PyInit__decimal@@Base+0x2fb34>  // b.none
   36444:	ldr	w9, [x23]
   36448:	mov	w10, #0x3be                 	// #958
   3644c:	and	w8, w8, w10
   36450:	orr	w8, w9, w8
   36454:	str	w8, [x23]
   36458:	cbz	x22, 36498 <PyInit__decimal@@Base+0x2f9e4>
   3645c:	cmp	x22, x20
   36460:	b.eq	36498 <PyInit__decimal@@Base+0x2f9e4>  // b.none
   36464:	ldrb	w8, [x22]
   36468:	cmp	w8, #0x1f
   3646c:	b.hi	36484 <PyInit__decimal@@Base+0x2f9d0>  // b.pmore
   36470:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36474:	ldr	x8, [x8, #1376]
   36478:	ldr	x0, [x22, #40]
   3647c:	blr	x8
   36480:	ldrb	w8, [x22]
   36484:	tbnz	w8, #4, 36498 <PyInit__decimal@@Base+0x2f9e4>
   36488:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   3648c:	ldr	x8, [x8, #1376]
   36490:	mov	x0, x22
   36494:	blr	x8
   36498:	cbz	x21, 364d8 <PyInit__decimal@@Base+0x2fa24>
   3649c:	cmp	x21, x19
   364a0:	b.eq	364d8 <PyInit__decimal@@Base+0x2fa24>  // b.none
   364a4:	ldrb	w8, [x21]
   364a8:	cmp	w8, #0x1f
   364ac:	b.hi	364c4 <PyInit__decimal@@Base+0x2fa10>  // b.pmore
   364b0:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   364b4:	ldr	x8, [x8, #1376]
   364b8:	ldr	x0, [x21, #40]
   364bc:	blr	x8
   364c0:	ldrb	w8, [x21]
   364c4:	tbnz	w8, #4, 364d8 <PyInit__decimal@@Base+0x2fa24>
   364c8:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   364cc:	ldr	x8, [x8, #1376]
   364d0:	mov	x0, x21
   364d4:	blr	x8
   364d8:	ldrb	w8, [x20]
   364dc:	tbnz	w8, #5, 36520 <PyInit__decimal@@Base+0x2fa6c>
   364e0:	adrp	x21, 53000 <PyInit__decimal@@Base+0x4c54c>
   364e4:	ldr	x9, [x20, #32]
   364e8:	ldr	x1, [x21, #1344]
   364ec:	cmp	x9, x1
   364f0:	b.le	36520 <PyInit__decimal@@Base+0x2fa6c>
   364f4:	strb	wzr, [sp, #1360]
   364f8:	ldr	x0, [x20, #40]
   364fc:	add	x3, sp, #0x550
   36500:	mov	w2, #0x8                   	// #8
   36504:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   36508:	str	x0, [x20, #40]
   3650c:	ldrb	w8, [sp, #1360]
   36510:	cbnz	w8, 3651c <PyInit__decimal@@Base+0x2fa68>
   36514:	ldr	x8, [x21, #1344]
   36518:	str	x8, [x20, #32]
   3651c:	ldrb	w8, [x20]
   36520:	and	w8, w8, #0xf0
   36524:	orr	w8, w8, #0x4
   36528:	stp	xzr, xzr, [x20, #16]
   3652c:	strb	w8, [x20]
   36530:	str	xzr, [x20, #8]
   36534:	ldrb	w8, [x19]
   36538:	tbnz	w8, #5, 3657c <PyInit__decimal@@Base+0x2fac8>
   3653c:	adrp	x20, 53000 <PyInit__decimal@@Base+0x4c54c>
   36540:	ldr	x9, [x19, #32]
   36544:	ldr	x1, [x20, #1344]
   36548:	cmp	x9, x1
   3654c:	b.le	3657c <PyInit__decimal@@Base+0x2fac8>
   36550:	strb	wzr, [sp, #1360]
   36554:	ldr	x0, [x19, #40]
   36558:	add	x3, sp, #0x550
   3655c:	mov	w2, #0x8                   	// #8
   36560:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   36564:	str	x0, [x19, #40]
   36568:	ldrb	w8, [sp, #1360]
   3656c:	cbnz	w8, 36578 <PyInit__decimal@@Base+0x2fac4>
   36570:	ldr	x8, [x20, #1344]
   36574:	str	x8, [x19, #32]
   36578:	ldrb	w8, [x19]
   3657c:	and	w8, w8, #0xf0
   36580:	orr	w8, w8, #0x4
   36584:	stp	xzr, xzr, [x19, #16]
   36588:	strb	w8, [x19]
   3658c:	str	xzr, [x19, #8]
   36590:	add	sp, sp, #0x800
   36594:	ldp	x20, x19, [sp, #80]
   36598:	ldp	x22, x21, [sp, #64]
   3659c:	ldp	x24, x23, [sp, #48]
   365a0:	ldp	x26, x25, [sp, #32]
   365a4:	ldp	x28, x27, [sp, #16]
   365a8:	ldp	x29, x30, [sp], #96
   365ac:	ret
   365b0:	ldr	x10, [x22, #40]
   365b4:	ldr	x11, [x22, #24]
   365b8:	add	x10, x10, x11, lsl #3
   365bc:	ldur	x10, [x10, #-8]
   365c0:	cbz	x10, 368b0 <PyInit__decimal@@Base+0x2fdfc>
   365c4:	neg	x2, x9
   365c8:	mov	x0, x22
   365cc:	mov	x1, x22
   365d0:	mov	x3, x24
   365d4:	bl	241dc <PyInit__decimal@@Base+0x1d728>
   365d8:	cmn	x0, #0x1
   365dc:	b.eq	36358 <PyInit__decimal@@Base+0x2f8a4>  // b.none
   365e0:	str	xzr, [x22, #8]
   365e4:	b	36358 <PyInit__decimal@@Base+0x2f8a4>
   365e8:	add	x25, x22, #0x8
   365ec:	mov	w24, #0x4                   	// #4
   365f0:	mov	w26, #0x1041                	// #4161
   365f4:	subs	w24, w24, #0x1
   365f8:	b.eq	36848 <PyInit__decimal@@Base+0x2fd94>  // b.none
   365fc:	adrp	x0, 50000 <PyInit__decimal@@Base+0x4954c>
   36600:	add	x0, x0, #0xcb8
   36604:	mov	x1, x21
   36608:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   3660c:	cmp	w0, #0x1
   36610:	b.ne	366d4 <PyInit__decimal@@Base+0x2fc20>  // b.any
   36614:	add	x2, sp, #0x28
   36618:	add	x3, sp, #0x88
   3661c:	add	x4, sp, #0x550
   36620:	mov	x0, x21
   36624:	mov	x1, x21
   36628:	str	wzr, [sp, #1360]
   3662c:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   36630:	ldr	w8, [sp, #1360]
   36634:	ldr	w9, [sp, #164]
   36638:	tst	w8, w26
   3663c:	orr	w9, w9, w8
   36640:	str	w9, [sp, #164]
   36644:	b.eq	366b4 <PyInit__decimal@@Base+0x2fc00>  // b.none
   36648:	ldrb	w8, [x21]
   3664c:	tbnz	w8, #5, 36694 <PyInit__decimal@@Base+0x2fbe0>
   36650:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   36654:	ldr	x9, [x21, #32]
   36658:	ldr	x1, [x10, #1344]
   3665c:	cmp	x9, x1
   36660:	b.le	36694 <PyInit__decimal@@Base+0x2fbe0>
   36664:	strb	wzr, [sp, #800]
   36668:	ldr	x0, [x21, #40]
   3666c:	add	x3, sp, #0x320
   36670:	mov	w2, #0x8                   	// #8
   36674:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   36678:	str	x0, [x21, #40]
   3667c:	ldrb	w8, [sp, #800]
   36680:	cbnz	w8, 36690 <PyInit__decimal@@Base+0x2fbdc>
   36684:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36688:	ldr	x8, [x8, #1344]
   3668c:	str	x8, [x21, #32]
   36690:	ldrb	w8, [x21]
   36694:	and	w8, w8, #0xf0
   36698:	orr	w8, w8, #0x4
   3669c:	strb	w8, [x21]
   366a0:	stp	xzr, xzr, [x28]
   366a4:	str	xzr, [x28, #16]
   366a8:	ldr	w8, [sp, #164]
   366ac:	orr	w8, w8, #0x100
   366b0:	str	w8, [sp, #164]
   366b4:	adrp	x2, 50000 <PyInit__decimal@@Base+0x4954c>
   366b8:	str	wzr, [sp, #1360]
   366bc:	add	x3, sp, #0x88
   366c0:	add	x4, sp, #0x550
   366c4:	mov	x0, x22
   366c8:	mov	x1, x22
   366cc:	add	x2, x2, #0xce8
   366d0:	b	367a4 <PyInit__decimal@@Base+0x2fcf0>
   366d4:	add	x1, sp, #0x28
   366d8:	mov	x0, x21
   366dc:	bl	23694 <PyInit__decimal@@Base+0x1cbe0>
   366e0:	cmn	w0, #0x1
   366e4:	b.eq	368c8 <PyInit__decimal@@Base+0x2fe14>  // b.none
   366e8:	add	x2, sp, #0x28
   366ec:	add	x3, sp, #0x88
   366f0:	add	x4, sp, #0x550
   366f4:	mov	x0, x21
   366f8:	mov	x1, x21
   366fc:	str	wzr, [sp, #1360]
   36700:	bl	27794 <PyInit__decimal@@Base+0x20ce0>
   36704:	ldr	w8, [sp, #1360]
   36708:	ldr	w9, [sp, #164]
   3670c:	tst	w8, w26
   36710:	orr	w9, w9, w8
   36714:	str	w9, [sp, #164]
   36718:	b.eq	36788 <PyInit__decimal@@Base+0x2fcd4>  // b.none
   3671c:	ldrb	w8, [x21]
   36720:	tbnz	w8, #5, 36768 <PyInit__decimal@@Base+0x2fcb4>
   36724:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   36728:	ldr	x9, [x21, #32]
   3672c:	ldr	x1, [x10, #1344]
   36730:	cmp	x9, x1
   36734:	b.le	36768 <PyInit__decimal@@Base+0x2fcb4>
   36738:	strb	wzr, [sp, #800]
   3673c:	ldr	x0, [x21, #40]
   36740:	add	x3, sp, #0x320
   36744:	mov	w2, #0x8                   	// #8
   36748:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   3674c:	str	x0, [x21, #40]
   36750:	ldrb	w8, [sp, #800]
   36754:	cbnz	w8, 36764 <PyInit__decimal@@Base+0x2fcb0>
   36758:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   3675c:	ldr	x8, [x8, #1344]
   36760:	str	x8, [x21, #32]
   36764:	ldrb	w8, [x21]
   36768:	and	w8, w8, #0xf0
   3676c:	orr	w8, w8, #0x4
   36770:	strb	w8, [x21]
   36774:	stp	xzr, xzr, [x28]
   36778:	str	xzr, [x28, #16]
   3677c:	ldr	w8, [sp, #164]
   36780:	orr	w8, w8, #0x100
   36784:	str	w8, [sp, #164]
   36788:	adrp	x2, 50000 <PyInit__decimal@@Base+0x4954c>
   3678c:	add	x3, sp, #0x88
   36790:	add	x4, sp, #0x550
   36794:	mov	x0, x22
   36798:	mov	x1, x22
   3679c:	add	x2, x2, #0xc88
   367a0:	str	wzr, [sp, #1360]
   367a4:	bl	26fb4 <PyInit__decimal@@Base+0x20500>
   367a8:	ldr	w9, [sp, #1360]
   367ac:	ldr	w8, [sp, #164]
   367b0:	tst	w9, w26
   367b4:	orr	w8, w8, w9
   367b8:	str	w8, [sp, #164]
   367bc:	b.eq	3682c <PyInit__decimal@@Base+0x2fd78>  // b.none
   367c0:	ldrb	w8, [x22]
   367c4:	tbnz	w8, #5, 3680c <PyInit__decimal@@Base+0x2fd58>
   367c8:	adrp	x10, 53000 <PyInit__decimal@@Base+0x4c54c>
   367cc:	ldr	x9, [x22, #32]
   367d0:	ldr	x1, [x10, #1344]
   367d4:	cmp	x9, x1
   367d8:	b.le	3680c <PyInit__decimal@@Base+0x2fd58>
   367dc:	strb	wzr, [sp, #800]
   367e0:	ldr	x0, [x22, #40]
   367e4:	add	x3, sp, #0x320
   367e8:	mov	w2, #0x8                   	// #8
   367ec:	bl	20350 <PyInit__decimal@@Base+0x1989c>
   367f0:	str	x0, [x22, #40]
   367f4:	ldrb	w8, [sp, #800]
   367f8:	cbnz	w8, 36808 <PyInit__decimal@@Base+0x2fd54>
   367fc:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36800:	ldr	x8, [x8, #1344]
   36804:	str	x8, [x22, #32]
   36808:	ldrb	w8, [x22]
   3680c:	and	w8, w8, #0xf0
   36810:	orr	w8, w8, #0x4
   36814:	strb	w8, [x22]
   36818:	stp	xzr, xzr, [x25]
   3681c:	str	xzr, [x25, #16]
   36820:	ldr	w8, [sp, #164]
   36824:	orr	w8, w8, #0x100
   36828:	str	w8, [sp, #164]
   3682c:	ldrb	w9, [x22]
   36830:	tst	w9, #0xe
   36834:	b.ne	36444 <PyInit__decimal@@Base+0x2f990>  // b.any
   36838:	ldrb	w9, [x21]
   3683c:	tst	w9, #0xe
   36840:	b.eq	365f4 <PyInit__decimal@@Base+0x2fb40>  // b.none
   36844:	b	36444 <PyInit__decimal@@Base+0x2f990>
   36848:	adrp	x22, 50000 <PyInit__decimal@@Base+0x4954c>
   3684c:	ldr	x22, [x22, #3904]
   36850:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   36854:	adrp	x2, 40000 <PyInit__decimal@@Base+0x3954c>
   36858:	add	x1, x1, #0x4f8
   3685c:	ldr	x0, [x22]
   36860:	add	x2, x2, #0x114
   36864:	mov	w3, #0x1d0c                	// #7436
   36868:	bl	69b0 <fprintf@plt>
   3686c:	ldr	x3, [x22]
   36870:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   36874:	add	x0, x0, #0x150
   36878:	mov	w1, #0x3c                  	// #60
   3687c:	mov	w2, #0x1                   	// #1
   36880:	bl	6870 <fwrite@plt>
   36884:	ldr	x1, [x22]
   36888:	ldr	x22, [sp, #32]
   3688c:	mov	w0, #0xa                   	// #10
   36890:	bl	64f0 <fputc@plt>
   36894:	ldr	w8, [x23]
   36898:	orr	w8, w8, #0x100
   3689c:	b	36454 <PyInit__decimal@@Base+0x2f9a0>
   368a0:	mov	w9, #0xe                   	// #14
   368a4:	b	35f14 <PyInit__decimal@@Base+0x2f460>
   368a8:	mov	w9, #0x9                   	// #9
   368ac:	b	35f14 <PyInit__decimal@@Base+0x2f460>
   368b0:	and	w1, w8, #0x1
   368b4:	mov	x0, x22
   368b8:	mov	x2, xzr
   368bc:	mov	x3, xzr
   368c0:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   368c4:	b	36358 <PyInit__decimal@@Base+0x2f8a4>
   368c8:	cmp	x22, x20
   368cc:	b.eq	36980 <PyInit__decimal@@Base+0x2fecc>  // b.none
   368d0:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   368d4:	ldr	x8, [x22, #24]
   368d8:	ldr	x10, [x9, #1344]
   368dc:	ldr	x9, [x20, #32]
   368e0:	cmp	x10, x8
   368e4:	csel	x1, x8, x10, lt  // lt = tstop
   368e8:	cmp	x1, x9
   368ec:	b.eq	36924 <PyInit__decimal@@Base+0x2fe70>  // b.none
   368f0:	ldrb	w10, [x20]
   368f4:	tbnz	w10, #5, 36908 <PyInit__decimal@@Base+0x2fe54>
   368f8:	mov	x0, x20
   368fc:	mov	x2, x23
   36900:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   36904:	b	3691c <PyInit__decimal@@Base+0x2fe68>
   36908:	cmp	x1, x9
   3690c:	b.le	36924 <PyInit__decimal@@Base+0x2fe70>
   36910:	mov	x0, x20
   36914:	mov	x2, x23
   36918:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   3691c:	cbz	w0, 36458 <PyInit__decimal@@Base+0x2f9a4>
   36920:	ldr	x8, [x22, #24]
   36924:	ldrb	w9, [x22]
   36928:	ldrb	w10, [x20]
   3692c:	ldr	x0, [x20, #40]
   36930:	bfxil	w10, w9, #0, #4
   36934:	strb	w10, [x20]
   36938:	ldur	q0, [x22, #8]
   3693c:	str	x8, [x20, #24]
   36940:	stur	q0, [x20, #8]
   36944:	ldr	x8, [x22, #24]
   36948:	ldr	x1, [x22, #40]
   3694c:	lsl	x2, x8, #3
   36950:	bl	63c0 <memcpy@plt>
   36954:	ldrb	w8, [x22]
   36958:	cmp	w8, #0x1f
   3695c:	b.hi	36970 <PyInit__decimal@@Base+0x2febc>  // b.pmore
   36960:	ldr	x8, [x27, #1376]
   36964:	ldr	x0, [x22, #40]
   36968:	blr	x8
   3696c:	ldrb	w8, [x22]
   36970:	tbnz	w8, #4, 36980 <PyInit__decimal@@Base+0x2fecc>
   36974:	ldr	x8, [x27, #1376]
   36978:	mov	x0, x22
   3697c:	blr	x8
   36980:	cmp	x21, x19
   36984:	b.eq	36a38 <PyInit__decimal@@Base+0x2ff84>  // b.none
   36988:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   3698c:	ldr	x8, [x21, #24]
   36990:	ldr	x10, [x9, #1344]
   36994:	ldr	x9, [x19, #32]
   36998:	cmp	x10, x8
   3699c:	csel	x1, x8, x10, lt  // lt = tstop
   369a0:	cmp	x1, x9
   369a4:	b.eq	369dc <PyInit__decimal@@Base+0x2ff28>  // b.none
   369a8:	ldrb	w10, [x19]
   369ac:	tbnz	w10, #5, 369c0 <PyInit__decimal@@Base+0x2ff0c>
   369b0:	mov	x0, x19
   369b4:	mov	x2, x23
   369b8:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   369bc:	b	369d4 <PyInit__decimal@@Base+0x2ff20>
   369c0:	cmp	x1, x9
   369c4:	b.le	369dc <PyInit__decimal@@Base+0x2ff28>
   369c8:	mov	x0, x19
   369cc:	mov	x2, x23
   369d0:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   369d4:	cbz	w0, 36458 <PyInit__decimal@@Base+0x2f9a4>
   369d8:	ldr	x8, [x21, #24]
   369dc:	ldrb	w9, [x21]
   369e0:	ldrb	w10, [x19]
   369e4:	ldr	x0, [x19, #40]
   369e8:	bfxil	w10, w9, #0, #4
   369ec:	strb	w10, [x19]
   369f0:	ldur	q0, [x21, #8]
   369f4:	str	x8, [x19, #24]
   369f8:	stur	q0, [x19, #8]
   369fc:	ldr	x8, [x21, #24]
   36a00:	ldr	x1, [x21, #40]
   36a04:	lsl	x2, x8, #3
   36a08:	bl	63c0 <memcpy@plt>
   36a0c:	ldrb	w8, [x21]
   36a10:	cmp	w8, #0x1f
   36a14:	b.hi	36a28 <PyInit__decimal@@Base+0x2ff74>  // b.pmore
   36a18:	ldr	x8, [x27, #1376]
   36a1c:	ldr	x0, [x21, #40]
   36a20:	blr	x8
   36a24:	ldrb	w8, [x21]
   36a28:	tbnz	w8, #4, 36a38 <PyInit__decimal@@Base+0x2ff84>
   36a2c:	ldr	x8, [x27, #1376]
   36a30:	mov	x0, x21
   36a34:	blr	x8
   36a38:	ldr	w8, [sp, #164]
   36a3c:	ldr	w9, [x23]
   36a40:	mov	w10, #0x3be                 	// #958
   36a44:	and	w8, w8, w10
   36a48:	orr	w8, w9, w8
   36a4c:	str	w8, [x23]
   36a50:	b	36590 <PyInit__decimal@@Base+0x2fadc>
   36a54:	stp	x29, x30, [sp, #-80]!
   36a58:	str	x25, [sp, #16]
   36a5c:	stp	x24, x23, [sp, #32]
   36a60:	stp	x22, x21, [sp, #48]
   36a64:	stp	x20, x19, [sp, #64]
   36a68:	mov	x29, sp
   36a6c:	mov	w19, w3
   36a70:	mov	x20, x0
   36a74:	str	wzr, [x29, #28]
   36a78:	cbz	x2, 36ad0 <PyInit__decimal@@Base+0x3001c>
   36a7c:	mov	x21, x5
   36a80:	mov	x22, x4
   36a84:	mov	x23, x2
   36a88:	mov	x24, x1
   36a8c:	cmp	x20, x1
   36a90:	b.eq	36b34 <PyInit__decimal@@Base+0x30080>  // b.none
   36a94:	adrp	x9, 53000 <PyInit__decimal@@Base+0x4c54c>
   36a98:	ldr	x8, [x24, #24]
   36a9c:	ldr	x10, [x9, #1344]
   36aa0:	ldr	x9, [x20, #32]
   36aa4:	cmp	x10, x8
   36aa8:	csel	x1, x8, x10, lt  // lt = tstop
   36aac:	cmp	x1, x9
   36ab0:	b.eq	36b04 <PyInit__decimal@@Base+0x30050>  // b.none
   36ab4:	ldrb	w10, [x20]
   36ab8:	tbnz	w10, #5, 36ae8 <PyInit__decimal@@Base+0x30034>
   36abc:	mov	x0, x20
   36ac0:	mov	x2, x21
   36ac4:	bl	206cc <PyInit__decimal@@Base+0x19c18>
   36ac8:	cbnz	w0, 36b00 <PyInit__decimal@@Base+0x3004c>
   36acc:	b	36c78 <PyInit__decimal@@Base+0x301c4>
   36ad0:	mov	w2, #0x1                   	// #1
   36ad4:	mov	x0, x20
   36ad8:	mov	w1, w19
   36adc:	mov	x3, xzr
   36ae0:	bl	21f1c <PyInit__decimal@@Base+0x1b468>
   36ae4:	b	36c78 <PyInit__decimal@@Base+0x301c4>
   36ae8:	cmp	x1, x9
   36aec:	b.le	36b04 <PyInit__decimal@@Base+0x30050>
   36af0:	mov	x0, x20
   36af4:	mov	x2, x21
   36af8:	bl	20588 <PyInit__decimal@@Base+0x19ad4>
   36afc:	cbz	w0, 36c78 <PyInit__decimal@@Base+0x301c4>
   36b00:	ldr	x8, [x24, #24]
   36b04:	ldrb	w9, [x24]
   36b08:	ldrb	w10, [x20]
   36b0c:	ldr	x0, [x20, #40]
   36b10:	bfxil	w10, w9, #0, #4
   36b14:	strb	w10, [x20]
   36b18:	ldur	q0, [x24, #8]
   36b1c:	str	x8, [x20, #24]
   36b20:	stur	q0, [x20, #8]
   36b24:	ldr	x8, [x24, #24]
   36b28:	ldr	x1, [x24, #40]
   36b2c:	lsl	x2, x8, #3
   36b30:	bl	63c0 <memcpy@plt>
   36b34:	lsr	x8, x23, #32
   36b38:	cmp	x8, #0x0
   36b3c:	csel	x8, x23, x8, eq  // eq = none
   36b40:	lsr	x12, x8, #16
   36b44:	cset	w10, ne  // ne = any
   36b48:	cmp	x12, #0x0
   36b4c:	mov	w9, #0x10                  	// #16
   36b50:	csel	x8, x8, x12, eq  // eq = none
   36b54:	lsl	w11, w10, #5
   36b58:	bfi	w9, w10, #5, #1
   36b5c:	lsr	x10, x8, #8
   36b60:	csel	w9, w11, w9, eq  // eq = none
   36b64:	cmp	x10, #0x0
   36b68:	csel	x8, x8, x10, eq  // eq = none
   36b6c:	orr	w11, w9, #0x8
   36b70:	lsr	x10, x8, #4
   36b74:	csel	w9, w9, w11, eq  // eq = none
   36b78:	cmp	x10, #0x0
   36b7c:	csel	x8, x8, x10, eq  // eq = none
   36b80:	orr	w11, w9, #0x4
   36b84:	lsr	x10, x8, #2
   36b88:	csel	w9, w9, w11, eq  // eq = none
   36b8c:	cmp	x10, #0x0
   36b90:	csel	x8, x8, x10, eq  // eq = none
   36b94:	add	w11, w9, #0x2
   36b98:	lsr	x10, x8, #1
   36b9c:	csel	w9, w9, w11, eq  // eq = none
   36ba0:	cmp	x10, #0x0
   36ba4:	csel	w8, w8, w10, eq  // eq = none
   36ba8:	cinc	w9, w9, ne  // ne = any
   36bac:	add	w8, w9, w8
   36bb0:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   36bb4:	sub	w8, w8, #0x1
   36bb8:	add	x9, x9, #0x170
   36bbc:	ldr	x8, [x9, w8, sxtw #3]
   36bc0:	lsr	x25, x8, #1
   36bc4:	cbnz	x25, 36bdc <PyInit__decimal@@Base+0x30128>
   36bc8:	ldrb	w8, [x20]
   36bcc:	mov	w9, wzr
   36bd0:	b	36c60 <PyInit__decimal@@Base+0x301ac>
   36bd4:	lsr	x25, x25, #1
   36bd8:	cbz	x25, 36c5c <PyInit__decimal@@Base+0x301a8>
   36bdc:	add	x4, x29, #0x1c
   36be0:	mov	x0, x20
   36be4:	mov	x1, x20
   36be8:	mov	x2, x20
   36bec:	mov	x3, x22
   36bf0:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   36bf4:	add	x2, x29, #0x1c
   36bf8:	mov	x0, x20
   36bfc:	mov	x1, x22
   36c00:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   36c04:	tst	x25, x23
   36c08:	b.eq	36c34 <PyInit__decimal@@Base+0x30180>  // b.none
   36c0c:	add	x4, x29, #0x1c
   36c10:	mov	x0, x20
   36c14:	mov	x1, x20
   36c18:	mov	x2, x24
   36c1c:	mov	x3, x22
   36c20:	bl	2b0ac <PyInit__decimal@@Base+0x245f8>
   36c24:	add	x2, x29, #0x1c
   36c28:	mov	x0, x20
   36c2c:	mov	x1, x22
   36c30:	bl	21960 <PyInit__decimal@@Base+0x1aeac>
   36c34:	ldrb	w8, [x20]
   36c38:	tst	w8, #0xe
   36c3c:	b.ne	36c5c <PyInit__decimal@@Base+0x301a8>  // b.any
   36c40:	ldr	x9, [x20, #40]
   36c44:	ldr	x10, [x20, #24]
   36c48:	add	x9, x9, x10, lsl #3
   36c4c:	ldur	x9, [x9, #-8]
   36c50:	cbnz	x9, 36bd4 <PyInit__decimal@@Base+0x30120>
   36c54:	ldrb	w9, [x29, #28]
   36c58:	tbz	w9, #0, 36bd4 <PyInit__decimal@@Base+0x30120>
   36c5c:	ldr	w9, [x29, #28]
   36c60:	ldr	w10, [x21]
   36c64:	and	w8, w8, #0xfe
   36c68:	orr	w8, w8, w19
   36c6c:	orr	w9, w10, w9
   36c70:	str	w9, [x21]
   36c74:	strb	w8, [x20]
   36c78:	ldp	x20, x19, [sp, #64]
   36c7c:	ldp	x22, x21, [sp, #48]
   36c80:	ldp	x24, x23, [sp, #32]
   36c84:	ldr	x25, [sp, #16]
   36c88:	ldp	x29, x30, [sp], #80
   36c8c:	ret
   36c90:	sub	sp, sp, #0x80
   36c94:	stp	x29, x30, [sp, #32]
   36c98:	stp	x28, x27, [sp, #48]
   36c9c:	stp	x26, x25, [sp, #64]
   36ca0:	stp	x24, x23, [sp, #80]
   36ca4:	stp	x22, x21, [sp, #96]
   36ca8:	stp	x20, x19, [sp, #112]
   36cac:	add	x29, sp, #0x20
   36cb0:	mvn	x8, x3
   36cb4:	cmp	x8, x2
   36cb8:	b.cc	37018 <PyInit__decimal@@Base+0x30564>  // b.lo, b.ul, b.last
   36cbc:	add	x23, x3, x2
   36cc0:	lsr	x9, x23, #32
   36cc4:	cmp	x9, #0x0
   36cc8:	csel	x9, x23, x9, eq  // eq = none
   36ccc:	lsr	x12, x9, #16
   36cd0:	cset	w10, ne  // ne = any
   36cd4:	cmp	x12, #0x0
   36cd8:	mov	w8, #0x10                  	// #16
   36cdc:	csel	x9, x9, x12, eq  // eq = none
   36ce0:	lsl	w11, w10, #5
   36ce4:	bfi	w8, w10, #5, #1
   36ce8:	lsr	x10, x9, #8
   36cec:	csel	w8, w11, w8, eq  // eq = none
   36cf0:	cmp	x10, #0x0
   36cf4:	csel	x9, x9, x10, eq  // eq = none
   36cf8:	orr	w11, w8, #0x8
   36cfc:	lsr	x10, x9, #4
   36d00:	csel	w8, w8, w11, eq  // eq = none
   36d04:	cmp	x10, #0x0
   36d08:	csel	x9, x9, x10, eq  // eq = none
   36d0c:	orr	w11, w8, #0x4
   36d10:	lsr	x10, x9, #2
   36d14:	csel	w8, w8, w11, eq  // eq = none
   36d18:	cmp	x10, #0x0
   36d1c:	csel	x9, x9, x10, eq  // eq = none
   36d20:	add	w11, w8, #0x2
   36d24:	lsr	x10, x9, #1
   36d28:	csel	w8, w8, w11, eq  // eq = none
   36d2c:	cmp	x10, #0x0
   36d30:	csel	w9, w9, w10, eq  // eq = none
   36d34:	cinc	w8, w8, ne  // ne = any
   36d38:	add	w8, w8, w9
   36d3c:	sub	w8, w8, #0x1
   36d40:	mov	x20, x4
   36d44:	mov	x25, x3
   36d48:	mov	x27, x2
   36d4c:	mov	x24, x1
   36d50:	mov	x26, x0
   36d54:	cmp	x23, #0x400
   36d58:	sxtw	x8, w8
   36d5c:	str	x23, [x4]
   36d60:	b.hi	36d84 <PyInit__decimal@@Base+0x302d0>  // b.pmore
   36d64:	mov	w9, #0x1                   	// #1
   36d68:	lsl	x8, x9, x8
   36d6c:	cmp	x8, x23
   36d70:	cset	w9, ne  // ne = any
   36d74:	lsl	x23, x8, x9
   36d78:	cmn	x23, #0x1
   36d7c:	b.ne	36df0 <PyInit__decimal@@Base+0x3033c>  // b.any
   36d80:	b	36de8 <PyInit__decimal@@Base+0x30334>
   36d84:	mov	x9, #0x100000000           	// #4294967296
   36d88:	cmp	x23, x9
   36d8c:	b.hi	36dc0 <PyInit__decimal@@Base+0x3030c>  // b.pmore
   36d90:	mov	w9, #0x1                   	// #1
   36d94:	lsl	x8, x9, x8
   36d98:	cmp	x8, x23
   36d9c:	b.eq	36df0 <PyInit__decimal@@Base+0x3033c>  // b.none
   36da0:	lsr	x9, x8, #1
   36da4:	add	x8, x9, x8
   36da8:	cmp	x8, x23
   36dac:	csel	x9, x9, xzr, cc  // cc = lo, ul, last
   36db0:	add	x23, x9, x8
   36db4:	cmn	x23, #0x1
   36db8:	b.ne	36df0 <PyInit__decimal@@Base+0x3033c>  // b.any
   36dbc:	b	36de8 <PyInit__decimal@@Base+0x30334>
   36dc0:	mov	x8, #0x180000000           	// #6442450944
   36dc4:	movk	x8, #0x1
   36dc8:	cmp	x23, x8
   36dcc:	b.cs	36dd8 <PyInit__decimal@@Base+0x30324>  // b.hs, b.nlast
   36dd0:	mov	x23, #0x180000000           	// #6442450944
   36dd4:	b	36df0 <PyInit__decimal@@Base+0x3033c>
   36dd8:	mov	x8, #0x300000000           	// #12884901888
   36ddc:	cmp	x23, x8
   36de0:	mov	x23, #0x300000000           	// #12884901888
   36de4:	b.ls	36df0 <PyInit__decimal@@Base+0x3033c>  // b.plast
   36de8:	mov	x19, xzr
   36dec:	b	36f88 <PyInit__decimal@@Base+0x304d4>
   36df0:	mov	w1, #0x8                   	// #8
   36df4:	mov	x0, x23
   36df8:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   36dfc:	mov	x19, x0
   36e00:	cbz	x0, 36f88 <PyInit__decimal@@Base+0x304d4>
   36e04:	mov	w1, #0x8                   	// #8
   36e08:	mov	x0, x23
   36e0c:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   36e10:	mov	x21, x0
   36e14:	cbz	x0, 36f48 <PyInit__decimal@@Base+0x30494>
   36e18:	mov	w1, #0x8                   	// #8
   36e1c:	mov	x0, x23
   36e20:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   36e24:	mov	x22, x0
   36e28:	cbz	x0, 36f4c <PyInit__decimal@@Base+0x30498>
   36e2c:	lsl	x27, x27, #3
   36e30:	mov	x0, x19
   36e34:	mov	x1, x26
   36e38:	mov	x2, x27
   36e3c:	bl	63c0 <memcpy@plt>
   36e40:	mov	x0, x21
   36e44:	mov	x1, x26
   36e48:	mov	x2, x27
   36e4c:	bl	63c0 <memcpy@plt>
   36e50:	mov	x0, x22
   36e54:	mov	x1, x26
   36e58:	mov	x2, x27
   36e5c:	bl	63c0 <memcpy@plt>
   36e60:	cmp	x26, x24
   36e64:	b.eq	36fac <PyInit__decimal@@Base+0x304f8>  // b.none
   36e68:	mov	w1, #0x8                   	// #8
   36e6c:	mov	x0, x23
   36e70:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   36e74:	cbz	x0, 36f4c <PyInit__decimal@@Base+0x30498>
   36e78:	lsl	x27, x25, #3
   36e7c:	mov	x1, x24
   36e80:	mov	x2, x27
   36e84:	mov	x26, x0
   36e88:	bl	63c0 <memcpy@plt>
   36e8c:	mov	x0, x19
   36e90:	mov	x1, x26
   36e94:	mov	x2, x23
   36e98:	mov	w3, wzr
   36e9c:	bl	1ca64 <PyInit__decimal@@Base+0x15fb0>
   36ea0:	cbz	w0, 37004 <PyInit__decimal@@Base+0x30550>
   36ea4:	mov	x0, x26
   36ea8:	mov	x1, x24
   36eac:	mov	x2, x27
   36eb0:	bl	63c0 <memcpy@plt>
   36eb4:	subs	x8, x23, x25
   36eb8:	add	x28, x26, x25, lsl #3
   36ebc:	lsl	x25, x8, #3
   36ec0:	stur	x8, [x29, #-8]
   36ec4:	b.eq	36ed8 <PyInit__decimal@@Base+0x30424>  // b.none
   36ec8:	mov	x0, x28
   36ecc:	mov	w1, wzr
   36ed0:	mov	x2, x25
   36ed4:	bl	65b0 <memset@plt>
   36ed8:	mov	w3, #0x1                   	// #1
   36edc:	mov	x0, x21
   36ee0:	mov	x1, x26
   36ee4:	mov	x2, x23
   36ee8:	stp	x25, x28, [sp, #8]
   36eec:	bl	1ca64 <PyInit__decimal@@Base+0x15fb0>
   36ef0:	cbz	w0, 37004 <PyInit__decimal@@Base+0x30550>
   36ef4:	mov	x0, x26
   36ef8:	mov	x1, x24
   36efc:	mov	x2, x27
   36f00:	bl	63c0 <memcpy@plt>
   36f04:	ldur	x8, [x29, #-8]
   36f08:	cbz	x8, 36f18 <PyInit__decimal@@Base+0x30464>
   36f0c:	ldp	x2, x0, [sp, #8]
   36f10:	mov	w1, wzr
   36f14:	bl	65b0 <memset@plt>
   36f18:	mov	w3, #0x2                   	// #2
   36f1c:	mov	x0, x22
   36f20:	mov	x1, x26
   36f24:	mov	x2, x23
   36f28:	bl	1ca64 <PyInit__decimal@@Base+0x15fb0>
   36f2c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36f30:	ldr	x8, [x8, #1376]
   36f34:	mov	w23, w0
   36f38:	mov	x0, x26
   36f3c:	blr	x8
   36f40:	cbnz	w23, 36fe8 <PyInit__decimal@@Base+0x30534>
   36f44:	b	36f4c <PyInit__decimal@@Base+0x30498>
   36f48:	mov	x22, xzr
   36f4c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36f50:	ldr	x8, [x8, #1376]
   36f54:	mov	x0, x19
   36f58:	blr	x8
   36f5c:	mov	x19, xzr
   36f60:	cbz	x21, 36f74 <PyInit__decimal@@Base+0x304c0>
   36f64:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36f68:	ldr	x8, [x8, #1376]
   36f6c:	mov	x0, x21
   36f70:	blr	x8
   36f74:	cbz	x22, 36f88 <PyInit__decimal@@Base+0x304d4>
   36f78:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   36f7c:	ldr	x8, [x8, #1376]
   36f80:	mov	x0, x22
   36f84:	blr	x8
   36f88:	mov	x0, x19
   36f8c:	ldp	x20, x19, [sp, #112]
   36f90:	ldp	x22, x21, [sp, #96]
   36f94:	ldp	x24, x23, [sp, #80]
   36f98:	ldp	x26, x25, [sp, #64]
   36f9c:	ldp	x28, x27, [sp, #48]
   36fa0:	ldp	x29, x30, [sp, #32]
   36fa4:	add	sp, sp, #0x80
   36fa8:	ret
   36fac:	mov	x0, x19
   36fb0:	mov	x1, x23
   36fb4:	mov	w2, wzr
   36fb8:	bl	1cc78 <PyInit__decimal@@Base+0x161c4>
   36fbc:	cbz	w0, 36f4c <PyInit__decimal@@Base+0x30498>
   36fc0:	mov	w2, #0x1                   	// #1
   36fc4:	mov	x0, x21
   36fc8:	mov	x1, x23
   36fcc:	bl	1cc78 <PyInit__decimal@@Base+0x161c4>
   36fd0:	cbz	w0, 36f4c <PyInit__decimal@@Base+0x30498>
   36fd4:	mov	w2, #0x2                   	// #2
   36fd8:	mov	x0, x22
   36fdc:	mov	x1, x23
   36fe0:	bl	1cc78 <PyInit__decimal@@Base+0x161c4>
   36fe4:	cbz	w0, 36f4c <PyInit__decimal@@Base+0x30498>
   36fe8:	ldr	x3, [x20]
   36fec:	mov	x0, x19
   36ff0:	mov	x1, x21
   36ff4:	mov	x2, x22
   36ff8:	bl	1cf40 <PyInit__decimal@@Base+0x1648c>
   36ffc:	cbnz	x21, 36f64 <PyInit__decimal@@Base+0x304b0>
   37000:	b	36f74 <PyInit__decimal@@Base+0x304c0>
   37004:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   37008:	ldr	x8, [x8, #1376]
   3700c:	mov	x0, x26
   37010:	blr	x8
   37014:	b	36f4c <PyInit__decimal@@Base+0x30498>
   37018:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
   3701c:	ldr	x19, [x19, #3904]
   37020:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   37024:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x3854c>
   37028:	add	x1, x1, #0xaa
   3702c:	ldr	x0, [x19]
   37030:	add	x2, x2, #0xb9
   37034:	mov	w3, #0x253                 	// #595
   37038:	bl	69b0 <fprintf@plt>
   3703c:	ldr	x3, [x19]
   37040:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   37044:	add	x0, x0, #0x18d
   37048:	mov	w1, #0x29                  	// #41
   3704c:	mov	w2, #0x1                   	// #1
   37050:	bl	6870 <fwrite@plt>
   37054:	ldr	x1, [x19]
   37058:	mov	w0, #0xa                   	// #10
   3705c:	bl	64f0 <fputc@plt>
   37060:	bl	6700 <abort@plt>
   37064:	stp	x29, x30, [sp, #-32]!
   37068:	str	x19, [sp, #16]
   3706c:	mov	x29, sp
   37070:	cmp	x0, x1
   37074:	b.ls	370a4 <PyInit__decimal@@Base+0x305f0>  // b.plast
   37078:	add	x8, x0, #0x1
   3707c:	lsr	x8, x8, #1
   37080:	add	x0, x8, #0x1
   37084:	adds	x19, x0, x0
   37088:	b.cs	370b4 <PyInit__decimal@@Base+0x30600>  // b.hs, b.nlast
   3708c:	bl	37064 <PyInit__decimal@@Base+0x305b0>
   37090:	mvn	x8, x0
   37094:	cmp	x19, x8
   37098:	b.hi	370e8 <PyInit__decimal@@Base+0x30634>  // b.pmore
   3709c:	add	x0, x0, x19
   370a0:	b	370a8 <PyInit__decimal@@Base+0x305f4>
   370a4:	mov	x0, xzr
   370a8:	ldr	x19, [sp, #16]
   370ac:	ldp	x29, x30, [sp], #32
   370b0:	ret
   370b4:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
   370b8:	ldr	x19, [x19, #3904]
   370bc:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   370c0:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x3854c>
   370c4:	add	x1, x1, #0xaa
   370c8:	ldr	x0, [x19]
   370cc:	add	x2, x2, #0xb9
   370d0:	mov	w3, #0x26c                 	// #620
   370d4:	bl	69b0 <fprintf@plt>
   370d8:	ldr	x3, [x19]
   370dc:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   370e0:	add	x0, x0, #0x1b7
   370e4:	b	37118 <PyInit__decimal@@Base+0x30664>
   370e8:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
   370ec:	ldr	x19, [x19, #3904]
   370f0:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   370f4:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x3854c>
   370f8:	add	x1, x1, #0xaa
   370fc:	ldr	x0, [x19]
   37100:	add	x2, x2, #0xb9
   37104:	mov	w3, #0x253                 	// #595
   37108:	bl	69b0 <fprintf@plt>
   3710c:	ldr	x3, [x19]
   37110:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   37114:	add	x0, x0, #0x18d
   37118:	mov	w1, #0x29                  	// #41
   3711c:	mov	w2, #0x1                   	// #1
   37120:	bl	6870 <fwrite@plt>
   37124:	ldr	x1, [x19]
   37128:	mov	w0, #0xa                   	// #10
   3712c:	bl	64f0 <fputc@plt>
   37130:	bl	6700 <abort@plt>
   37134:	sub	sp, sp, #0x80
   37138:	stp	x29, x30, [sp, #32]
   3713c:	stp	x28, x27, [sp, #48]
   37140:	stp	x26, x25, [sp, #64]
   37144:	stp	x24, x23, [sp, #80]
   37148:	stp	x22, x21, [sp, #96]
   3714c:	stp	x20, x19, [sp, #112]
   37150:	add	x29, sp, #0x20
   37154:	mov	x24, x5
   37158:	mov	x25, x4
   3715c:	mov	x21, x2
   37160:	mov	x23, x1
   37164:	cmp	x4, #0x10
   37168:	mov	x20, x0
   3716c:	b.hi	371a4 <PyInit__decimal@@Base+0x306f0>  // b.pmore
   37170:	mov	x0, x20
   37174:	mov	x1, x23
   37178:	mov	x2, x21
   3717c:	mov	x3, x25
   37180:	mov	x4, x24
   37184:	ldp	x20, x19, [sp, #112]
   37188:	ldp	x22, x21, [sp, #96]
   3718c:	ldp	x24, x23, [sp, #80]
   37190:	ldp	x26, x25, [sp, #64]
   37194:	ldp	x28, x27, [sp, #48]
   37198:	ldp	x29, x30, [sp, #32]
   3719c:	add	sp, sp, #0x80
   371a0:	b	1b5ac <PyInit__decimal@@Base+0x14af8>
   371a4:	add	x27, x25, #0x1
   371a8:	lsr	x22, x27, #1
   371ac:	mov	x19, x3
   371b0:	cmp	x22, x24
   371b4:	b.cs	37318 <PyInit__decimal@@Base+0x30864>  // b.hs, b.nlast
   371b8:	lsl	x26, x22, #3
   371bc:	mov	x0, x19
   371c0:	mov	x1, x23
   371c4:	mov	x2, x26
   371c8:	bl	63c0 <memcpy@plt>
   371cc:	sub	x25, x25, x22
   371d0:	add	x1, x23, x26
   371d4:	mov	x0, x19
   371d8:	mov	x2, x25
   371dc:	str	xzr, [x19, x26]
   371e0:	str	x1, [sp, #16]
   371e4:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   371e8:	add	x28, x22, #0x1
   371ec:	stur	x27, [x29, #-8]
   371f0:	add	x27, x19, x28, lsl #3
   371f4:	mov	x0, x27
   371f8:	mov	x1, x21
   371fc:	mov	x2, x26
   37200:	bl	63c0 <memcpy@plt>
   37204:	sub	x24, x24, x22
   37208:	add	x8, x28, x22
   3720c:	add	x1, x21, x26
   37210:	mov	x0, x27
   37214:	mov	x2, x24
   37218:	stp	x1, x20, [sp]
   3721c:	str	xzr, [x19, x8, lsl #3]
   37220:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   37224:	add	x26, x20, x26
   37228:	add	x3, x19, x28, lsl #4
   3722c:	mov	x0, x26
   37230:	mov	x1, x19
   37234:	mov	x2, x27
   37238:	mov	x4, x28
   3723c:	mov	x5, x28
   37240:	bl	37134 <PyInit__decimal@@Base+0x30680>
   37244:	mov	w27, #0x8                   	// #8
   37248:	bfi	x27, x25, #4, #60
   3724c:	mov	x0, x19
   37250:	mov	w1, wzr
   37254:	mov	x2, x27
   37258:	bl	65b0 <memset@plt>
   3725c:	ldr	x1, [sp, #16]
   37260:	ldr	x2, [sp]
   37264:	add	x3, x19, x27
   37268:	mov	x0, x19
   3726c:	mov	x4, x25
   37270:	mov	x5, x24
   37274:	bl	37134 <PyInit__decimal@@Base+0x30680>
   37278:	ldur	x28, [x29, #-8]
   3727c:	ldr	x27, [sp, #8]
   37280:	add	x24, x25, x24
   37284:	mov	x1, x19
   37288:	and	x20, x28, #0xfffffffffffffffe
   3728c:	add	x0, x27, x20, lsl #3
   37290:	mov	x2, x24
   37294:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   37298:	mov	x0, x26
   3729c:	mov	x1, x19
   372a0:	mov	x2, x24
   372a4:	bl	1b498 <PyInit__decimal@@Base+0x149e4>
   372a8:	lsl	x8, x28, #3
   372ac:	orr	x24, x8, #0x8
   372b0:	mov	x0, x19
   372b4:	mov	w1, wzr
   372b8:	mov	x2, x24
   372bc:	bl	65b0 <memset@plt>
   372c0:	add	x3, x19, x24
   372c4:	mov	x0, x19
   372c8:	mov	x1, x23
   372cc:	mov	x2, x21
   372d0:	mov	x4, x22
   372d4:	mov	x5, x22
   372d8:	bl	37134 <PyInit__decimal@@Base+0x30680>
   372dc:	mov	x0, x27
   372e0:	mov	x1, x19
   372e4:	mov	x2, x20
   372e8:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   372ec:	mov	x0, x26
   372f0:	mov	x1, x19
   372f4:	mov	x2, x20
   372f8:	ldp	x20, x19, [sp, #112]
   372fc:	ldp	x22, x21, [sp, #96]
   37300:	ldp	x24, x23, [sp, #80]
   37304:	ldp	x26, x25, [sp, #64]
   37308:	ldp	x28, x27, [sp, #48]
   3730c:	ldp	x29, x30, [sp, #32]
   37310:	add	sp, sp, #0x80
   37314:	b	1b498 <PyInit__decimal@@Base+0x149e4>
   37318:	sub	x25, x25, x22
   3731c:	mov	w26, #0x8                   	// #8
   37320:	cmp	x25, x24
   37324:	b.cs	37358 <PyInit__decimal@@Base+0x308a4>  // b.hs, b.nlast
   37328:	bfi	x26, x24, #4, #60
   3732c:	mov	x0, x19
   37330:	mov	w1, wzr
   37334:	mov	x2, x26
   37338:	bl	65b0 <memset@plt>
   3733c:	add	x2, x23, x22, lsl #3
   37340:	add	x3, x19, x26
   37344:	mov	x0, x19
   37348:	mov	x1, x21
   3734c:	mov	x4, x24
   37350:	mov	x5, x25
   37354:	b	37384 <PyInit__decimal@@Base+0x308d0>
   37358:	bfi	x26, x25, #4, #60
   3735c:	mov	x0, x19
   37360:	mov	w1, wzr
   37364:	mov	x2, x26
   37368:	bl	65b0 <memset@plt>
   3736c:	add	x1, x23, x22, lsl #3
   37370:	add	x3, x19, x26
   37374:	mov	x0, x19
   37378:	mov	x2, x21
   3737c:	mov	x4, x25
   37380:	mov	x5, x24
   37384:	bl	37134 <PyInit__decimal@@Base+0x30680>
   37388:	add	x0, x20, x22, lsl #3
   3738c:	add	x2, x25, x24
   37390:	mov	x1, x19
   37394:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   37398:	lsl	x8, x27, #3
   3739c:	orr	x25, x8, #0x8
   373a0:	mov	x0, x19
   373a4:	mov	w1, wzr
   373a8:	mov	x2, x25
   373ac:	bl	65b0 <memset@plt>
   373b0:	add	x3, x19, x25
   373b4:	mov	x0, x19
   373b8:	mov	x1, x23
   373bc:	mov	x2, x21
   373c0:	mov	x4, x22
   373c4:	mov	x5, x24
   373c8:	bl	37134 <PyInit__decimal@@Base+0x30680>
   373cc:	add	x2, x22, x24
   373d0:	mov	x0, x20
   373d4:	mov	x1, x19
   373d8:	ldp	x20, x19, [sp, #112]
   373dc:	ldp	x22, x21, [sp, #96]
   373e0:	ldp	x24, x23, [sp, #80]
   373e4:	ldp	x26, x25, [sp, #64]
   373e8:	ldp	x28, x27, [sp, #48]
   373ec:	ldp	x29, x30, [sp, #32]
   373f0:	add	sp, sp, #0x80
   373f4:	b	1b20c <PyInit__decimal@@Base+0x14758>
   373f8:	sub	sp, sp, #0x90
   373fc:	stp	x29, x30, [sp, #48]
   37400:	stp	x28, x27, [sp, #64]
   37404:	stp	x26, x25, [sp, #80]
   37408:	stp	x24, x23, [sp, #96]
   3740c:	stp	x22, x21, [sp, #112]
   37410:	stp	x20, x19, [sp, #128]
   37414:	add	x29, sp, #0x30
   37418:	mov	x8, #0x180000000           	// #6442450944
   3741c:	mov	x24, x5
   37420:	mov	x25, x4
   37424:	mov	x21, x2
   37428:	mov	x22, x1
   3742c:	cmp	x4, x8
   37430:	mov	x27, x0
   37434:	b.hi	3745c <PyInit__decimal@@Base+0x309a8>  // b.pmore
   37438:	cmp	x24, #0xc0
   3743c:	b.hi	375cc <PyInit__decimal@@Base+0x30b18>  // b.pmore
   37440:	mov	x0, x27
   37444:	mov	x1, x21
   37448:	mov	x2, x22
   3744c:	mov	x3, x24
   37450:	mov	x4, x25
   37454:	bl	1b5ac <PyInit__decimal@@Base+0x14af8>
   37458:	b	376e8 <PyInit__decimal@@Base+0x30c34>
   3745c:	add	x19, x25, #0x1
   37460:	lsr	x23, x19, #1
   37464:	mov	x20, x3
   37468:	cmp	x23, x24
   3746c:	b.cs	37614 <PyInit__decimal@@Base+0x30b60>  // b.hs, b.nlast
   37470:	str	x19, [sp, #8]
   37474:	lsl	x19, x23, #3
   37478:	mov	x0, x20
   3747c:	mov	x1, x22
   37480:	mov	x2, x19
   37484:	bl	63c0 <memcpy@plt>
   37488:	add	x1, x22, x19
   3748c:	sub	x2, x25, x23
   37490:	mov	x0, x20
   37494:	str	xzr, [x20, x19]
   37498:	str	x1, [sp, #24]
   3749c:	stur	x2, [x29, #-16]
   374a0:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   374a4:	add	x26, x23, #0x1
   374a8:	add	x25, x20, x26, lsl #3
   374ac:	mov	x0, x25
   374b0:	mov	x1, x21
   374b4:	mov	x2, x19
   374b8:	bl	63c0 <memcpy@plt>
   374bc:	add	x28, x21, x19
   374c0:	sub	x24, x24, x23
   374c4:	add	x8, x26, x23
   374c8:	mov	x0, x25
   374cc:	mov	x1, x28
   374d0:	mov	x2, x24
   374d4:	str	xzr, [x20, x8, lsl #3]
   374d8:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   374dc:	str	x27, [sp, #16]
   374e0:	add	x27, x27, x19
   374e4:	add	x3, x20, x26, lsl #4
   374e8:	mov	x0, x27
   374ec:	mov	x1, x20
   374f0:	mov	x2, x25
   374f4:	mov	x4, x26
   374f8:	mov	x5, x26
   374fc:	bl	373f8 <PyInit__decimal@@Base+0x30944>
   37500:	cbz	w0, 376ec <PyInit__decimal@@Base+0x30c38>
   37504:	ldur	x25, [x29, #-16]
   37508:	mov	w19, #0x8                   	// #8
   3750c:	mov	x0, x20
   37510:	mov	w1, wzr
   37514:	bfi	x19, x25, #4, #60
   37518:	mov	x2, x19
   3751c:	bl	65b0 <memset@plt>
   37520:	ldr	x1, [sp, #24]
   37524:	add	x3, x20, x19
   37528:	mov	x0, x20
   3752c:	mov	x2, x28
   37530:	mov	x4, x25
   37534:	mov	x5, x24
   37538:	bl	373f8 <PyInit__decimal@@Base+0x30944>
   3753c:	cbz	w0, 376ec <PyInit__decimal@@Base+0x30c38>
   37540:	ldp	x28, x25, [sp, #8]
   37544:	ldur	x8, [x29, #-16]
   37548:	mov	x1, x20
   3754c:	and	x26, x28, #0xfffffffffffffffe
   37550:	add	x19, x8, x24
   37554:	add	x0, x25, x26, lsl #3
   37558:	mov	x2, x19
   3755c:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   37560:	mov	x0, x27
   37564:	mov	x1, x20
   37568:	mov	x2, x19
   3756c:	bl	1b498 <PyInit__decimal@@Base+0x149e4>
   37570:	lsl	x8, x28, #3
   37574:	orr	x19, x8, #0x8
   37578:	mov	x0, x20
   3757c:	mov	w1, wzr
   37580:	mov	x2, x19
   37584:	bl	65b0 <memset@plt>
   37588:	add	x3, x20, x19
   3758c:	mov	x0, x20
   37590:	mov	x1, x22
   37594:	mov	x2, x21
   37598:	mov	x4, x23
   3759c:	mov	x5, x23
   375a0:	bl	373f8 <PyInit__decimal@@Base+0x30944>
   375a4:	cbz	w0, 376ec <PyInit__decimal@@Base+0x30c38>
   375a8:	mov	x0, x25
   375ac:	mov	x1, x20
   375b0:	mov	x2, x26
   375b4:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   375b8:	mov	x0, x27
   375bc:	mov	x1, x20
   375c0:	mov	x2, x26
   375c4:	bl	1b498 <PyInit__decimal@@Base+0x149e4>
   375c8:	b	376e8 <PyInit__decimal@@Base+0x30c34>
   375cc:	sub	x4, x29, #0x8
   375d0:	mov	x0, x22
   375d4:	mov	x1, x21
   375d8:	mov	x2, x25
   375dc:	mov	x3, x24
   375e0:	bl	36c90 <PyInit__decimal@@Base+0x301dc>
   375e4:	cbz	x0, 376ec <PyInit__decimal@@Base+0x30c38>
   375e8:	mov	x20, x0
   375ec:	add	x8, x24, x25
   375f0:	lsl	x2, x8, #3
   375f4:	mov	x0, x27
   375f8:	mov	x1, x20
   375fc:	bl	63c0 <memcpy@plt>
   37600:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   37604:	ldr	x8, [x8, #1376]
   37608:	mov	x0, x20
   3760c:	blr	x8
   37610:	b	376e8 <PyInit__decimal@@Base+0x30c34>
   37614:	sub	x25, x25, x23
   37618:	mov	w26, #0x8                   	// #8
   3761c:	cmp	x25, x24
   37620:	b.cs	3765c <PyInit__decimal@@Base+0x30ba8>  // b.hs, b.nlast
   37624:	bfi	x26, x24, #4, #60
   37628:	mov	x0, x20
   3762c:	mov	w1, wzr
   37630:	mov	x2, x26
   37634:	bl	65b0 <memset@plt>
   37638:	add	x2, x22, x23, lsl #3
   3763c:	add	x3, x20, x26
   37640:	mov	x0, x20
   37644:	mov	x1, x21
   37648:	mov	x4, x24
   3764c:	mov	x5, x25
   37650:	bl	373f8 <PyInit__decimal@@Base+0x30944>
   37654:	cbnz	w0, 37690 <PyInit__decimal@@Base+0x30bdc>
   37658:	b	376ec <PyInit__decimal@@Base+0x30c38>
   3765c:	bfi	x26, x25, #4, #60
   37660:	mov	x0, x20
   37664:	mov	w1, wzr
   37668:	mov	x2, x26
   3766c:	bl	65b0 <memset@plt>
   37670:	add	x1, x22, x23, lsl #3
   37674:	add	x3, x20, x26
   37678:	mov	x0, x20
   3767c:	mov	x2, x21
   37680:	mov	x4, x25
   37684:	mov	x5, x24
   37688:	bl	373f8 <PyInit__decimal@@Base+0x30944>
   3768c:	cbz	w0, 376ec <PyInit__decimal@@Base+0x30c38>
   37690:	add	x0, x27, x23, lsl #3
   37694:	add	x2, x25, x24
   37698:	mov	x1, x20
   3769c:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   376a0:	lsl	x8, x19, #3
   376a4:	orr	x25, x8, #0x8
   376a8:	mov	x0, x20
   376ac:	mov	w1, wzr
   376b0:	mov	x2, x25
   376b4:	bl	65b0 <memset@plt>
   376b8:	add	x3, x20, x25
   376bc:	mov	x0, x20
   376c0:	mov	x1, x22
   376c4:	mov	x2, x21
   376c8:	mov	x4, x23
   376cc:	mov	x5, x24
   376d0:	bl	373f8 <PyInit__decimal@@Base+0x30944>
   376d4:	cbz	w0, 376ec <PyInit__decimal@@Base+0x30c38>
   376d8:	add	x2, x23, x24
   376dc:	mov	x0, x27
   376e0:	mov	x1, x20
   376e4:	bl	1b20c <PyInit__decimal@@Base+0x14758>
   376e8:	mov	w0, #0x1                   	// #1
   376ec:	ldp	x20, x19, [sp, #128]
   376f0:	ldp	x22, x21, [sp, #112]
   376f4:	ldp	x24, x23, [sp, #96]
   376f8:	ldp	x26, x25, [sp, #80]
   376fc:	ldp	x28, x27, [sp, #64]
   37700:	ldp	x29, x30, [sp, #48]
   37704:	add	sp, sp, #0x90
   37708:	ret
   3770c:	stp	x29, x30, [sp, #-48]!
   37710:	stp	x22, x21, [sp, #16]
   37714:	stp	x20, x19, [sp, #32]
   37718:	mov	x29, sp
   3771c:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   37720:	sbfiz	x8, x2, #3, #32
   37724:	add	x9, x9, #0x120
   37728:	ldr	x19, [x9, x8]
   3772c:	adrp	x9, 3f000 <PyInit__decimal@@Base+0x3854c>
   37730:	add	x9, x9, #0x138
   37734:	ldr	x20, [x9, x8]
   37738:	sub	x8, x19, #0x1
   3773c:	cmn	w1, #0x1
   37740:	udiv	x22, x8, x0
   37744:	mov	w21, #0x1                   	// #1
   37748:	b.eq	37790 <PyInit__decimal@@Base+0x30cdc>  // b.none
   3774c:	cmp	x8, x0
   37750:	b.cs	37774 <PyInit__decimal@@Base+0x30cc0>  // b.hs, b.nlast
   37754:	b	37798 <PyInit__decimal@@Base+0x30ce4>
   37758:	mov	x0, x20
   3775c:	mov	x1, x20
   37760:	mov	x2, x19
   37764:	bl	37884 <PyInit__decimal@@Base+0x30dd0>
   37768:	lsr	x22, x22, #1
   3776c:	mov	x20, x0
   37770:	cbz	x22, 37798 <PyInit__decimal@@Base+0x30ce4>
   37774:	tbz	w22, #0, 37758 <PyInit__decimal@@Base+0x30ca4>
   37778:	mov	x0, x21
   3777c:	mov	x1, x20
   37780:	mov	x2, x19
   37784:	bl	37884 <PyInit__decimal@@Base+0x30dd0>
   37788:	mov	x21, x0
   3778c:	b	37758 <PyInit__decimal@@Base+0x30ca4>
   37790:	subs	x22, x8, x22
   37794:	b.ne	377c8 <PyInit__decimal@@Base+0x30d14>  // b.any
   37798:	mov	x0, x21
   3779c:	ldp	x20, x19, [sp, #32]
   377a0:	ldp	x22, x21, [sp, #16]
   377a4:	ldp	x29, x30, [sp], #48
   377a8:	ret
   377ac:	mov	x0, x20
   377b0:	mov	x1, x20
   377b4:	mov	x2, x19
   377b8:	bl	37884 <PyInit__decimal@@Base+0x30dd0>
   377bc:	lsr	x22, x22, #1
   377c0:	mov	x20, x0
   377c4:	cbz	x22, 37798 <PyInit__decimal@@Base+0x30ce4>
   377c8:	tbz	w22, #0, 377ac <PyInit__decimal@@Base+0x30cf8>
   377cc:	mov	x0, x21
   377d0:	mov	x1, x20
   377d4:	mov	x2, x19
   377d8:	bl	37884 <PyInit__decimal@@Base+0x30dd0>
   377dc:	mov	x21, x0
   377e0:	b	377ac <PyInit__decimal@@Base+0x30cf8>
   377e4:	stp	x29, x30, [sp, #-64]!
   377e8:	stp	x24, x23, [sp, #16]
   377ec:	stp	x22, x21, [sp, #32]
   377f0:	stp	x20, x19, [sp, #48]
   377f4:	mov	x29, sp
   377f8:	lsr	x19, x0, #1
   377fc:	mov	w23, w2
   37800:	mov	w22, w1
   37804:	mov	x24, x0
   37808:	mov	w0, #0x18                  	// #24
   3780c:	mov	w2, #0x8                   	// #8
   37810:	mov	x1, x19
   37814:	bl	203a0 <PyInit__decimal@@Base+0x198ec>
   37818:	mov	x20, x0
   3781c:	cbz	x0, 3786c <PyInit__decimal@@Base+0x30db8>
   37820:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   37824:	add	x8, x8, #0x120
   37828:	ldr	x21, [x8, w23, sxtw #3]
   3782c:	mov	x0, x24
   37830:	mov	w1, w22
   37834:	mov	w2, w23
   37838:	bl	3770c <PyInit__decimal@@Base+0x30c58>
   3783c:	str	w23, [x20]
   37840:	stp	x21, x0, [x20, #8]
   37844:	cbz	x19, 3786c <PyInit__decimal@@Base+0x30db8>
   37848:	mov	x22, x0
   3784c:	add	x23, x20, #0x18
   37850:	mov	w0, #0x1                   	// #1
   37854:	mov	x1, x22
   37858:	mov	x2, x21
   3785c:	str	x0, [x23], #8
   37860:	bl	37884 <PyInit__decimal@@Base+0x30dd0>
   37864:	subs	x19, x19, #0x1
   37868:	b.ne	37854 <PyInit__decimal@@Base+0x30da0>  // b.any
   3786c:	mov	x0, x20
   37870:	ldp	x20, x19, [sp, #48]
   37874:	ldp	x22, x21, [sp, #32]
   37878:	ldp	x24, x23, [sp, #16]
   3787c:	ldp	x29, x30, [sp], #64
   37880:	ret
   37884:	umulh	x8, x1, x0
   37888:	mul	x9, x1, x0
   3788c:	tbnz	x2, #32, 378d8 <PyInit__decimal@@Base+0x30e24>
   37890:	tbnz	x2, #34, 37904 <PyInit__decimal@@Base+0x30e50>
   37894:	subs	x9, x9, x8
   37898:	lsr	x10, x8, #24
   3789c:	cset	w11, cc  // cc = lo, ul, last
   378a0:	adds	x8, x9, x8, lsl #40
   378a4:	sub	x9, x10, x11
   378a8:	cinc	x9, x9, cs  // cs = hs, nlast
   378ac:	subs	x8, x8, x9
   378b0:	lsr	x10, x9, #24
   378b4:	cset	w11, cc  // cc = lo, ul, last
   378b8:	adds	x8, x8, x9, lsl #40
   378bc:	sub	x9, x10, x11
   378c0:	cinc	x9, x9, cs  // cs = hs, nlast
   378c4:	subs	x8, x8, x9
   378c8:	lsr	x10, x9, #24
   378cc:	cset	w11, cc  // cc = lo, ul, last
   378d0:	adds	x8, x8, x9, lsl #40
   378d4:	b	37944 <PyInit__decimal@@Base+0x30e90>
   378d8:	subs	x9, x9, x8
   378dc:	lsr	x10, x8, #32
   378e0:	cset	w11, cc  // cc = lo, ul, last
   378e4:	adds	x8, x9, x8, lsl #32
   378e8:	sub	x9, x10, x11
   378ec:	cinc	x9, x9, cs  // cs = hs, nlast
   378f0:	subs	x8, x8, x9
   378f4:	lsr	x10, x9, #32
   378f8:	cset	w11, cc  // cc = lo, ul, last
   378fc:	adds	x8, x8, x9, lsl #32
   37900:	b	37944 <PyInit__decimal@@Base+0x30e90>
   37904:	subs	x9, x9, x8
   37908:	lsr	x10, x8, #30
   3790c:	cset	w11, cc  // cc = lo, ul, last
   37910:	adds	x8, x9, x8, lsl #34
   37914:	sub	x9, x10, x11
   37918:	cinc	x9, x9, cs  // cs = hs, nlast
   3791c:	subs	x8, x8, x9
   37920:	lsr	x10, x9, #30
   37924:	cset	w11, cc  // cc = lo, ul, last
   37928:	adds	x8, x8, x9, lsl #34
   3792c:	sub	x9, x10, x11
   37930:	cinc	x9, x9, cs  // cs = hs, nlast
   37934:	subs	x8, x8, x9
   37938:	lsr	x10, x9, #30
   3793c:	cset	w11, cc  // cc = lo, ul, last
   37940:	adds	x8, x8, x9, lsl #34
   37944:	sub	x9, x10, x11
   37948:	cset	w10, cs  // cs = hs, nlast
   3794c:	sbfx	x10, x10, #0, #1
   37950:	cmp	x9, x10
   37954:	ccmp	x8, x2, #0x2, eq  // eq = none
   37958:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   3795c:	sub	x0, x8, x9
   37960:	ret
   37964:	stp	x29, x30, [sp, #-32]!
   37968:	stp	x20, x19, [sp, #16]
   3796c:	mov	x29, sp
   37970:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   37974:	add	x8, x8, #0x120
   37978:	ldr	x19, [x8, w2, sxtw #3]
   3797c:	mov	x20, x0
   37980:	mov	w0, #0x3                   	// #3
   37984:	bl	3770c <PyInit__decimal@@Base+0x30c58>
   37988:	mov	w8, #0x1                   	// #1
   3798c:	mov	x1, x0
   37990:	mov	x2, x19
   37994:	stp	x8, x0, [x20]
   37998:	bl	37884 <PyInit__decimal@@Base+0x30dd0>
   3799c:	mov	x1, x0
   379a0:	mov	w0, #0x1                   	// #1
   379a4:	mov	x2, x19
   379a8:	bl	37884 <PyInit__decimal@@Base+0x30dd0>
   379ac:	str	x0, [x20, #16]
   379b0:	ldp	x20, x19, [sp, #16]
   379b4:	ldp	x29, x30, [sp], #32
   379b8:	ret
   379bc:	sub	sp, sp, #0xa0
   379c0:	stp	x29, x30, [sp, #64]
   379c4:	stp	x28, x27, [sp, #80]
   379c8:	stp	x26, x25, [sp, #96]
   379cc:	stp	x24, x23, [sp, #112]
   379d0:	stp	x22, x21, [sp, #128]
   379d4:	stp	x20, x19, [sp, #144]
   379d8:	add	x29, sp, #0x40
   379dc:	lsr	x8, x1, #32
   379e0:	cmp	x8, #0x0
   379e4:	mov	w9, #0x10                  	// #16
   379e8:	cset	w11, ne  // ne = any
   379ec:	csel	x8, x1, x8, eq  // eq = none
   379f0:	lsl	w12, w11, #5
   379f4:	bfi	w9, w11, #5, #1
   379f8:	lsr	x11, x8, #16
   379fc:	cmp	x11, #0x0
   37a00:	csel	x8, x8, x11, eq  // eq = none
   37a04:	lsr	x11, x8, #8
   37a08:	csel	w9, w12, w9, eq  // eq = none
   37a0c:	cmp	x11, #0x0
   37a10:	csel	x8, x8, x11, eq  // eq = none
   37a14:	orr	w12, w9, #0x8
   37a18:	lsr	x11, x8, #4
   37a1c:	csel	w9, w9, w12, eq  // eq = none
   37a20:	cmp	x11, #0x0
   37a24:	csel	x8, x8, x11, eq  // eq = none
   37a28:	orr	w12, w9, #0x4
   37a2c:	lsr	x11, x8, #2
   37a30:	csel	w9, w9, w12, eq  // eq = none
   37a34:	cmp	x11, #0x0
   37a38:	csel	x8, x8, x11, eq  // eq = none
   37a3c:	add	w12, w9, #0x2
   37a40:	lsr	x11, x8, #1
   37a44:	csel	w9, w9, w12, eq  // eq = none
   37a48:	cmp	x11, #0x0
   37a4c:	csel	w8, w8, w11, eq  // eq = none
   37a50:	cinc	w9, w9, ne  // ne = any
   37a54:	add	w8, w9, w8
   37a58:	sub	w8, w8, #0x1
   37a5c:	sxtw	x8, w8
   37a60:	lsr	x9, x8, #1
   37a64:	mov	w10, #0x1                   	// #1
   37a68:	sub	x20, x8, x9
   37a6c:	lsl	x21, x10, x9
   37a70:	lsl	x28, x10, x20
   37a74:	mov	w23, w2
   37a78:	mov	x24, x1
   37a7c:	mov	x1, x28
   37a80:	mov	x2, x21
   37a84:	mov	x22, x0
   37a88:	stur	x9, [x29, #-16]
   37a8c:	bl	381a0 <PyInit__decimal@@Base+0x316ec>
   37a90:	cbz	w0, 37ca0 <PyInit__decimal@@Base+0x311ec>
   37a94:	mov	w1, #0xffffffff            	// #-1
   37a98:	mov	x0, x28
   37a9c:	mov	w2, w23
   37aa0:	bl	377e4 <PyInit__decimal@@Base+0x30d30>
   37aa4:	cbz	x0, 37ca0 <PyInit__decimal@@Base+0x311ec>
   37aa8:	add	x27, x22, x24, lsl #3
   37aac:	mov	x26, x0
   37ab0:	cmp	x27, x22
   37ab4:	b.ls	37adc <PyInit__decimal@@Base+0x31028>  // b.plast
   37ab8:	lsl	x19, x28, #3
   37abc:	mov	x25, x22
   37ac0:	mov	x0, x25
   37ac4:	mov	x1, x28
   37ac8:	mov	x2, x26
   37acc:	bl	1d21c <PyInit__decimal@@Base+0x16768>
   37ad0:	add	x25, x25, x19
   37ad4:	cmp	x25, x27
   37ad8:	b.cc	37ac0 <PyInit__decimal@@Base+0x3100c>  // b.lo, b.ul, b.last
   37adc:	mov	x0, x22
   37ae0:	mov	x1, x21
   37ae4:	mov	x2, x28
   37ae8:	bl	381a0 <PyInit__decimal@@Base+0x316ec>
   37aec:	cbz	w0, 37c28 <PyInit__decimal@@Base+0x31174>
   37af0:	mov	w1, #0xffffffff            	// #-1
   37af4:	mov	x0, x24
   37af8:	mov	w2, w23
   37afc:	stp	x27, x26, [sp]
   37b00:	str	w23, [sp, #20]
   37b04:	bl	3770c <PyInit__decimal@@Base+0x30c58>
   37b08:	stur	x0, [x29, #-24]
   37b0c:	cbz	x20, 37c14 <PyInit__decimal@@Base+0x31160>
   37b10:	ldr	w9, [sp, #20]
   37b14:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   37b18:	add	x8, x8, #0x120
   37b1c:	mov	w20, #0x1                   	// #1
   37b20:	ldr	x25, [x8, w9, sxtw #3]
   37b24:	stp	x28, x22, [sp, #24]
   37b28:	ldur	x27, [x29, #-24]
   37b2c:	mov	w26, #0x1                   	// #1
   37b30:	mov	x19, x20
   37b34:	b	37b54 <PyInit__decimal@@Base+0x310a0>
   37b38:	mov	x0, x27
   37b3c:	mov	x1, x27
   37b40:	mov	x2, x25
   37b44:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37b48:	lsr	x19, x19, #1
   37b4c:	mov	x27, x0
   37b50:	cbz	x19, 37b70 <PyInit__decimal@@Base+0x310bc>
   37b54:	tbz	w19, #0, 37b38 <PyInit__decimal@@Base+0x31084>
   37b58:	mov	x0, x26
   37b5c:	mov	x1, x27
   37b60:	mov	x2, x25
   37b64:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37b68:	mov	x26, x0
   37b6c:	b	37b38 <PyInit__decimal@@Base+0x31084>
   37b70:	mov	x0, x26
   37b74:	mov	x1, x26
   37b78:	mov	x2, x25
   37b7c:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37b80:	ldur	x8, [x29, #-16]
   37b84:	mov	x27, x0
   37b88:	mov	x23, xzr
   37b8c:	mov	w28, #0x1                   	// #1
   37b90:	lsl	x8, x20, x8
   37b94:	add	x19, x22, x8, lsl #3
   37b98:	stur	x20, [x29, #-8]
   37b9c:	add	x22, x19, x23, lsl #3
   37ba0:	ldp	x0, x20, [x22]
   37ba4:	mov	x1, x28
   37ba8:	mov	x2, x25
   37bac:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37bb0:	mov	x24, x0
   37bb4:	mov	x0, x20
   37bb8:	mov	x1, x26
   37bbc:	mov	x2, x25
   37bc0:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37bc4:	mov	x20, x0
   37bc8:	mov	x0, x28
   37bcc:	mov	x1, x27
   37bd0:	mov	x2, x25
   37bd4:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37bd8:	mov	x28, x0
   37bdc:	mov	x0, x26
   37be0:	mov	x1, x27
   37be4:	mov	x2, x25
   37be8:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37bec:	add	x23, x23, #0x2
   37bf0:	mov	x26, x0
   37bf4:	cmp	x23, x21
   37bf8:	stp	x24, x20, [x22]
   37bfc:	b.cc	37b9c <PyInit__decimal@@Base+0x310e8>  // b.lo, b.ul, b.last
   37c00:	ldur	x20, [x29, #-8]
   37c04:	ldp	x28, x22, [sp, #24]
   37c08:	add	x20, x20, #0x1
   37c0c:	cmp	x20, x28
   37c10:	b.cc	37b28 <PyInit__decimal@@Base+0x31074>  // b.lo, b.ul, b.last
   37c14:	cmp	x21, x28
   37c18:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   37c1c:	b.ne	37c40 <PyInit__decimal@@Base+0x3118c>  // b.any
   37c20:	ldp	x24, x23, [sp]
   37c24:	b	37c68 <PyInit__decimal@@Base+0x311b4>
   37c28:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   37c2c:	ldr	x8, [x8, #1376]
   37c30:	mov	x0, x26
   37c34:	blr	x8
   37c38:	mov	w0, wzr
   37c3c:	b	37ca0 <PyInit__decimal@@Base+0x311ec>
   37c40:	ldr	x8, [x19, #1376]
   37c44:	ldr	x0, [sp, #8]
   37c48:	blr	x8
   37c4c:	ldr	w2, [sp, #20]
   37c50:	mov	w1, #0xffffffff            	// #-1
   37c54:	mov	x0, x21
   37c58:	bl	377e4 <PyInit__decimal@@Base+0x30d30>
   37c5c:	ldr	x24, [sp]
   37c60:	mov	x23, x0
   37c64:	cbz	x0, 37ca0 <PyInit__decimal@@Base+0x311ec>
   37c68:	cmp	x24, x22
   37c6c:	b.ls	37c90 <PyInit__decimal@@Base+0x311dc>  // b.plast
   37c70:	lsl	x20, x21, #3
   37c74:	mov	x0, x22
   37c78:	mov	x1, x21
   37c7c:	mov	x2, x23
   37c80:	bl	1d21c <PyInit__decimal@@Base+0x16768>
   37c84:	add	x22, x22, x20
   37c88:	cmp	x22, x24
   37c8c:	b.cc	37c74 <PyInit__decimal@@Base+0x311c0>  // b.lo, b.ul, b.last
   37c90:	ldr	x8, [x19, #1376]
   37c94:	mov	x0, x23
   37c98:	blr	x8
   37c9c:	mov	w0, #0x1                   	// #1
   37ca0:	ldp	x20, x19, [sp, #144]
   37ca4:	ldp	x22, x21, [sp, #128]
   37ca8:	ldp	x24, x23, [sp, #112]
   37cac:	ldp	x26, x25, [sp, #96]
   37cb0:	ldp	x28, x27, [sp, #80]
   37cb4:	ldp	x29, x30, [sp, #64]
   37cb8:	add	sp, sp, #0xa0
   37cbc:	ret
   37cc0:	umulh	x8, x1, x0
   37cc4:	mul	x9, x1, x0
   37cc8:	tbnz	x2, #32, 37d14 <PyInit__decimal@@Base+0x31260>
   37ccc:	tbnz	x2, #34, 37d40 <PyInit__decimal@@Base+0x3128c>
   37cd0:	subs	x9, x9, x8
   37cd4:	lsr	x10, x8, #24
   37cd8:	cset	w11, cc  // cc = lo, ul, last
   37cdc:	adds	x8, x9, x8, lsl #40
   37ce0:	sub	x9, x10, x11
   37ce4:	cinc	x9, x9, cs  // cs = hs, nlast
   37ce8:	subs	x8, x8, x9
   37cec:	lsr	x10, x9, #24
   37cf0:	cset	w11, cc  // cc = lo, ul, last
   37cf4:	adds	x8, x8, x9, lsl #40
   37cf8:	sub	x9, x10, x11
   37cfc:	cinc	x9, x9, cs  // cs = hs, nlast
   37d00:	subs	x8, x8, x9
   37d04:	lsr	x10, x9, #24
   37d08:	cset	w11, cc  // cc = lo, ul, last
   37d0c:	adds	x8, x8, x9, lsl #40
   37d10:	b	37d80 <PyInit__decimal@@Base+0x312cc>
   37d14:	subs	x9, x9, x8
   37d18:	lsr	x10, x8, #32
   37d1c:	cset	w11, cc  // cc = lo, ul, last
   37d20:	adds	x8, x9, x8, lsl #32
   37d24:	sub	x9, x10, x11
   37d28:	cinc	x9, x9, cs  // cs = hs, nlast
   37d2c:	subs	x8, x8, x9
   37d30:	lsr	x10, x9, #32
   37d34:	cset	w11, cc  // cc = lo, ul, last
   37d38:	adds	x8, x8, x9, lsl #32
   37d3c:	b	37d80 <PyInit__decimal@@Base+0x312cc>
   37d40:	subs	x9, x9, x8
   37d44:	lsr	x10, x8, #30
   37d48:	cset	w11, cc  // cc = lo, ul, last
   37d4c:	adds	x8, x9, x8, lsl #34
   37d50:	sub	x9, x10, x11
   37d54:	cinc	x9, x9, cs  // cs = hs, nlast
   37d58:	subs	x8, x8, x9
   37d5c:	lsr	x10, x9, #30
   37d60:	cset	w11, cc  // cc = lo, ul, last
   37d64:	adds	x8, x8, x9, lsl #34
   37d68:	sub	x9, x10, x11
   37d6c:	cinc	x9, x9, cs  // cs = hs, nlast
   37d70:	subs	x8, x8, x9
   37d74:	lsr	x10, x9, #30
   37d78:	cset	w11, cc  // cc = lo, ul, last
   37d7c:	adds	x8, x8, x9, lsl #34
   37d80:	sub	x9, x10, x11
   37d84:	cset	w10, cs  // cs = hs, nlast
   37d88:	sbfx	x10, x10, #0, #1
   37d8c:	cmp	x9, x10
   37d90:	ccmp	x8, x2, #0x2, eq  // eq = none
   37d94:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   37d98:	sub	x0, x8, x9
   37d9c:	ret
   37da0:	sub	sp, sp, #0xa0
   37da4:	stp	x29, x30, [sp, #64]
   37da8:	stp	x28, x27, [sp, #80]
   37dac:	stp	x26, x25, [sp, #96]
   37db0:	stp	x24, x23, [sp, #112]
   37db4:	stp	x22, x21, [sp, #128]
   37db8:	stp	x20, x19, [sp, #144]
   37dbc:	add	x29, sp, #0x40
   37dc0:	lsr	x8, x1, #32
   37dc4:	cmp	x8, #0x0
   37dc8:	csel	x8, x1, x8, eq  // eq = none
   37dcc:	lsr	x12, x8, #16
   37dd0:	cset	w10, ne  // ne = any
   37dd4:	cmp	x12, #0x0
   37dd8:	mov	w9, #0x10                  	// #16
   37ddc:	csel	x8, x8, x12, eq  // eq = none
   37de0:	lsl	w11, w10, #5
   37de4:	bfi	w9, w10, #5, #1
   37de8:	lsr	x10, x8, #8
   37dec:	csel	w9, w11, w9, eq  // eq = none
   37df0:	cmp	x10, #0x0
   37df4:	csel	x8, x8, x10, eq  // eq = none
   37df8:	orr	w11, w9, #0x8
   37dfc:	lsr	x10, x8, #4
   37e00:	csel	w9, w9, w11, eq  // eq = none
   37e04:	cmp	x10, #0x0
   37e08:	csel	x8, x8, x10, eq  // eq = none
   37e0c:	orr	w11, w9, #0x4
   37e10:	lsr	x10, x8, #2
   37e14:	csel	w9, w9, w11, eq  // eq = none
   37e18:	cmp	x10, #0x0
   37e1c:	csel	x8, x8, x10, eq  // eq = none
   37e20:	add	w11, w9, #0x2
   37e24:	lsr	x10, x8, #1
   37e28:	csel	w9, w9, w11, eq  // eq = none
   37e2c:	cmp	x10, #0x0
   37e30:	csel	w8, w8, w10, eq  // eq = none
   37e34:	cinc	w9, w9, ne  // ne = any
   37e38:	add	w8, w9, w8
   37e3c:	sub	w8, w8, #0x1
   37e40:	sxtw	x19, w8
   37e44:	lsr	x25, x19, #1
   37e48:	mov	w20, #0x1                   	// #1
   37e4c:	lsl	x21, x20, x25
   37e50:	mov	x24, x1
   37e54:	mov	x23, x0
   37e58:	mov	w1, #0x1                   	// #1
   37e5c:	mov	x0, x21
   37e60:	mov	w22, w2
   37e64:	bl	377e4 <PyInit__decimal@@Base+0x30d30>
   37e68:	cbz	x0, 38090 <PyInit__decimal@@Base+0x315dc>
   37e6c:	sub	x19, x19, x25
   37e70:	add	x28, x23, x24, lsl #3
   37e74:	mov	x27, x0
   37e78:	cmp	x28, x23
   37e7c:	lsl	x26, x20, x19
   37e80:	stur	x25, [x29, #-16]
   37e84:	b.ls	37eac <PyInit__decimal@@Base+0x313f8>  // b.plast
   37e88:	lsl	x20, x21, #3
   37e8c:	mov	x25, x23
   37e90:	mov	x0, x25
   37e94:	mov	x1, x21
   37e98:	mov	x2, x27
   37e9c:	bl	1d21c <PyInit__decimal@@Base+0x16768>
   37ea0:	add	x25, x25, x20
   37ea4:	cmp	x25, x28
   37ea8:	b.cc	37e90 <PyInit__decimal@@Base+0x313dc>  // b.lo, b.ul, b.last
   37eac:	mov	w1, #0x1                   	// #1
   37eb0:	mov	x0, x24
   37eb4:	mov	w2, w22
   37eb8:	str	x28, [sp]
   37ebc:	str	x27, [sp, #16]
   37ec0:	str	w22, [sp, #12]
   37ec4:	bl	3770c <PyInit__decimal@@Base+0x30c58>
   37ec8:	stur	x0, [x29, #-24]
   37ecc:	cbz	x19, 37fd4 <PyInit__decimal@@Base+0x31520>
   37ed0:	ldr	w9, [sp, #12]
   37ed4:	adrp	x8, 3f000 <PyInit__decimal@@Base+0x3854c>
   37ed8:	add	x8, x8, #0x120
   37edc:	mov	w20, #0x1                   	// #1
   37ee0:	ldr	x25, [x8, w9, sxtw #3]
   37ee4:	stp	x26, x23, [sp, #24]
   37ee8:	ldur	x27, [x29, #-24]
   37eec:	mov	w26, #0x1                   	// #1
   37ef0:	mov	x19, x20
   37ef4:	b	37f14 <PyInit__decimal@@Base+0x31460>
   37ef8:	mov	x0, x27
   37efc:	mov	x1, x27
   37f00:	mov	x2, x25
   37f04:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37f08:	lsr	x19, x19, #1
   37f0c:	mov	x27, x0
   37f10:	cbz	x19, 37f30 <PyInit__decimal@@Base+0x3147c>
   37f14:	tbz	w19, #0, 37ef8 <PyInit__decimal@@Base+0x31444>
   37f18:	mov	x0, x26
   37f1c:	mov	x1, x27
   37f20:	mov	x2, x25
   37f24:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37f28:	mov	x26, x0
   37f2c:	b	37ef8 <PyInit__decimal@@Base+0x31444>
   37f30:	mov	x0, x26
   37f34:	mov	x1, x26
   37f38:	mov	x2, x25
   37f3c:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37f40:	ldur	x8, [x29, #-16]
   37f44:	mov	x27, x0
   37f48:	mov	x22, xzr
   37f4c:	mov	w28, #0x1                   	// #1
   37f50:	lsl	x8, x20, x8
   37f54:	add	x24, x23, x8, lsl #3
   37f58:	stur	x20, [x29, #-8]
   37f5c:	add	x23, x24, x22, lsl #3
   37f60:	ldp	x0, x20, [x23]
   37f64:	mov	x1, x28
   37f68:	mov	x2, x25
   37f6c:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37f70:	mov	x19, x0
   37f74:	mov	x0, x20
   37f78:	mov	x1, x26
   37f7c:	mov	x2, x25
   37f80:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37f84:	mov	x20, x0
   37f88:	mov	x0, x28
   37f8c:	mov	x1, x27
   37f90:	mov	x2, x25
   37f94:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37f98:	mov	x28, x0
   37f9c:	mov	x0, x26
   37fa0:	mov	x1, x27
   37fa4:	mov	x2, x25
   37fa8:	bl	37cc0 <PyInit__decimal@@Base+0x3120c>
   37fac:	add	x22, x22, #0x2
   37fb0:	mov	x26, x0
   37fb4:	cmp	x22, x21
   37fb8:	stp	x19, x20, [x23]
   37fbc:	b.cc	37f5c <PyInit__decimal@@Base+0x314a8>  // b.lo, b.ul, b.last
   37fc0:	ldur	x20, [x29, #-8]
   37fc4:	ldp	x26, x23, [sp, #24]
   37fc8:	add	x20, x20, #0x1
   37fcc:	cmp	x20, x26
   37fd0:	b.cc	37ee8 <PyInit__decimal@@Base+0x31434>  // b.lo, b.ul, b.last
   37fd4:	mov	x0, x23
   37fd8:	mov	x1, x26
   37fdc:	mov	x2, x21
   37fe0:	bl	381a0 <PyInit__decimal@@Base+0x316ec>
   37fe4:	cbz	w0, 38000 <PyInit__decimal@@Base+0x3154c>
   37fe8:	cmp	x26, x21
   37fec:	adrp	x19, 53000 <PyInit__decimal@@Base+0x4c54c>
   37ff0:	b.ne	38018 <PyInit__decimal@@Base+0x31564>  // b.any
   37ff4:	ldr	x24, [sp, #16]
   37ff8:	ldr	x25, [sp]
   37ffc:	b	38040 <PyInit__decimal@@Base+0x3158c>
   38000:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   38004:	ldr	x8, [x8, #1376]
   38008:	ldr	x0, [sp, #16]
   3800c:	blr	x8
   38010:	mov	w0, wzr
   38014:	b	38090 <PyInit__decimal@@Base+0x315dc>
   38018:	ldr	x8, [x19, #1376]
   3801c:	ldr	x0, [sp, #16]
   38020:	blr	x8
   38024:	ldr	w2, [sp, #12]
   38028:	mov	w1, #0x1                   	// #1
   3802c:	mov	x0, x26
   38030:	bl	377e4 <PyInit__decimal@@Base+0x30d30>
   38034:	ldr	x25, [sp]
   38038:	mov	x24, x0
   3803c:	cbz	x0, 38090 <PyInit__decimal@@Base+0x315dc>
   38040:	cmp	x25, x23
   38044:	b.ls	3806c <PyInit__decimal@@Base+0x315b8>  // b.plast
   38048:	lsl	x22, x26, #3
   3804c:	mov	x20, x23
   38050:	mov	x0, x20
   38054:	mov	x1, x26
   38058:	mov	x2, x24
   3805c:	bl	1d21c <PyInit__decimal@@Base+0x16768>
   38060:	add	x20, x20, x22
   38064:	cmp	x20, x25
   38068:	b.cc	38050 <PyInit__decimal@@Base+0x3159c>  // b.lo, b.ul, b.last
   3806c:	ldr	x8, [x19, #1376]
   38070:	mov	x0, x24
   38074:	blr	x8
   38078:	mov	x0, x23
   3807c:	mov	x1, x21
   38080:	mov	x2, x26
   38084:	bl	381a0 <PyInit__decimal@@Base+0x316ec>
   38088:	cmp	w0, #0x0
   3808c:	cset	w0, ne  // ne = any
   38090:	ldp	x20, x19, [sp, #144]
   38094:	ldp	x22, x21, [sp, #128]
   38098:	ldp	x24, x23, [sp, #112]
   3809c:	ldp	x26, x25, [sp, #96]
   380a0:	ldp	x28, x27, [sp, #80]
   380a4:	ldp	x29, x30, [sp, #64]
   380a8:	add	sp, sp, #0xa0
   380ac:	ret
   380b0:	cbz	x2, 3819c <PyInit__decimal@@Base+0x316e8>
   380b4:	cmp	x3, #0x3
   380b8:	cset	w15, hi  // hi = pmore
   380bc:	cmp	x2, #0x1
   380c0:	and	x9, x3, #0xfffffffffffffffc
   380c4:	cset	w16, eq  // eq = none
   380c8:	mov	x8, xzr
   380cc:	add	x10, x0, #0x10
   380d0:	lsl	x11, x2, #5
   380d4:	add	x12, x1, #0x10
   380d8:	lsl	x13, x3, #3
   380dc:	mul	x14, x9, x2
   380e0:	and	w15, w15, w16
   380e4:	lsl	x16, x2, #3
   380e8:	b	38100 <PyInit__decimal@@Base+0x3164c>
   380ec:	add	x8, x8, #0x1
   380f0:	add	x10, x10, #0x8
   380f4:	cmp	x8, x2
   380f8:	add	x12, x12, x13
   380fc:	b.eq	3819c <PyInit__decimal@@Base+0x316e8>  // b.none
   38100:	cbz	x3, 380ec <PyInit__decimal@@Base+0x31638>
   38104:	mul	x17, x8, x3
   38108:	cbz	w15, 38134 <PyInit__decimal@@Base+0x31680>
   3810c:	add	x4, x17, x3
   38110:	add	x18, x0, x8, lsl #3
   38114:	add	x4, x1, x4, lsl #3
   38118:	cmp	x18, x4
   3811c:	b.cs	38160 <PyInit__decimal@@Base+0x316ac>  // b.hs, b.nlast
   38120:	add	x18, x8, x3
   38124:	add	x18, x0, x18, lsl #3
   38128:	add	x4, x1, x17, lsl #3
   3812c:	cmp	x4, x18
   38130:	b.cs	38160 <PyInit__decimal@@Base+0x316ac>  // b.hs, b.nlast
   38134:	mov	x4, xzr
   38138:	mov	x18, x8
   3813c:	sub	x4, x3, x4
   38140:	add	x17, x1, x17, lsl #3
   38144:	add	x18, x0, x18, lsl #3
   38148:	ldr	x5, [x17], #8
   3814c:	subs	x4, x4, #0x1
   38150:	str	x5, [x18]
   38154:	add	x18, x18, x16
   38158:	b.ne	38148 <PyInit__decimal@@Base+0x31694>  // b.any
   3815c:	b	380ec <PyInit__decimal@@Base+0x31638>
   38160:	add	x17, x17, x9
   38164:	add	x18, x8, x14
   38168:	mov	x4, x9
   3816c:	mov	x5, x12
   38170:	mov	x6, x10
   38174:	ldp	q0, q1, [x5, #-16]
   38178:	subs	x4, x4, #0x4
   3817c:	add	x5, x5, #0x20
   38180:	stp	q0, q1, [x6, #-16]
   38184:	add	x6, x6, x11
   38188:	b.ne	38174 <PyInit__decimal@@Base+0x316c0>  // b.any
   3818c:	cmp	x9, x3
   38190:	mov	x4, x9
   38194:	b.eq	380ec <PyInit__decimal@@Base+0x31638>  // b.none
   38198:	b	3813c <PyInit__decimal@@Base+0x31688>
   3819c:	ret
   381a0:	stp	x29, x30, [sp, #-48]!
   381a4:	stp	x22, x21, [sp, #16]
   381a8:	stp	x20, x19, [sp, #32]
   381ac:	mov	x29, sp
   381b0:	umulh	x8, x2, x1
   381b4:	cmp	xzr, x8
   381b8:	b.ne	3828c <PyInit__decimal@@Base+0x317d8>  // b.any
   381bc:	mov	x21, x2
   381c0:	mov	x19, x1
   381c4:	mov	x20, x0
   381c8:	cmp	x2, x1
   381cc:	b.ne	381e0 <PyInit__decimal@@Base+0x3172c>  // b.any
   381d0:	mov	x0, x20
   381d4:	mov	x1, x21
   381d8:	bl	382d8 <PyInit__decimal@@Base+0x31824>
   381dc:	b	38278 <PyInit__decimal@@Base+0x317c4>
   381e0:	adds	x8, x19, x19
   381e4:	b.cs	3828c <PyInit__decimal@@Base+0x317d8>  // b.hs, b.nlast
   381e8:	cmp	x8, x21
   381ec:	mul	x22, x21, x19
   381f0:	b.ne	38230 <PyInit__decimal@@Base+0x3177c>  // b.any
   381f4:	mov	x0, x20
   381f8:	mov	x1, x19
   381fc:	mov	x2, x21
   38200:	mov	w3, wzr
   38204:	bl	386b4 <PyInit__decimal@@Base+0x31c00>
   38208:	cbz	w0, 3827c <PyInit__decimal@@Base+0x317c8>
   3820c:	mov	x0, x20
   38210:	mov	x1, x19
   38214:	bl	382d8 <PyInit__decimal@@Base+0x31824>
   38218:	lsl	x8, x22, #2
   3821c:	and	x8, x8, #0xfffffffffffffff8
   38220:	add	x0, x20, x8
   38224:	mov	x1, x19
   38228:	bl	382d8 <PyInit__decimal@@Base+0x31824>
   3822c:	b	38278 <PyInit__decimal@@Base+0x317c4>
   38230:	adds	x8, x21, x21
   38234:	b.cs	3828c <PyInit__decimal@@Base+0x317d8>  // b.hs, b.nlast
   38238:	cmp	x8, x19
   3823c:	b.ne	382d4 <PyInit__decimal@@Base+0x31820>  // b.any
   38240:	mov	x0, x20
   38244:	mov	x1, x21
   38248:	bl	382d8 <PyInit__decimal@@Base+0x31824>
   3824c:	lsl	x8, x22, #2
   38250:	and	x8, x8, #0xfffffffffffffff8
   38254:	add	x0, x20, x8
   38258:	mov	x1, x21
   3825c:	bl	382d8 <PyInit__decimal@@Base+0x31824>
   38260:	mov	w3, #0x1                   	// #1
   38264:	mov	x0, x20
   38268:	mov	x1, x21
   3826c:	mov	x2, x19
   38270:	bl	386b4 <PyInit__decimal@@Base+0x31c00>
   38274:	cbz	w0, 3827c <PyInit__decimal@@Base+0x317c8>
   38278:	mov	w0, #0x1                   	// #1
   3827c:	ldp	x20, x19, [sp, #32]
   38280:	ldp	x22, x21, [sp, #16]
   38284:	ldp	x29, x30, [sp], #48
   38288:	ret
   3828c:	adrp	x19, 50000 <PyInit__decimal@@Base+0x4954c>
   38290:	ldr	x19, [x19, #3904]
   38294:	adrp	x1, 3f000 <PyInit__decimal@@Base+0x3854c>
   38298:	adrp	x2, 3f000 <PyInit__decimal@@Base+0x3854c>
   3829c:	add	x1, x1, #0xaa
   382a0:	ldr	x0, [x19]
   382a4:	add	x2, x2, #0xb9
   382a8:	mov	w3, #0x26c                 	// #620
   382ac:	bl	69b0 <fprintf@plt>
   382b0:	ldr	x3, [x19]
   382b4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x3954c>
   382b8:	add	x0, x0, #0x1b7
   382bc:	mov	w1, #0x29                  	// #41
   382c0:	mov	w2, #0x1                   	// #1
   382c4:	bl	6870 <fwrite@plt>
   382c8:	ldr	x1, [x19]
   382cc:	mov	w0, #0xa                   	// #10
   382d0:	bl	64f0 <fputc@plt>
   382d4:	bl	6700 <abort@plt>
   382d8:	stp	x29, x30, [sp, #-96]!
   382dc:	stp	x28, x27, [sp, #16]
   382e0:	stp	x26, x25, [sp, #32]
   382e4:	stp	x24, x23, [sp, #48]
   382e8:	stp	x22, x21, [sp, #64]
   382ec:	stp	x20, x19, [sp, #80]
   382f0:	mov	x29, sp
   382f4:	sub	sp, sp, #0x40, lsl #12
   382f8:	sub	sp, sp, #0x60
   382fc:	mov	x8, x1
   38300:	str	x1, [sp, #56]
   38304:	mov	x28, x8
   38308:	cmp	x8, #0x80
   3830c:	lsr	x8, x8, #1
   38310:	b.hi	38304 <PyInit__decimal@@Base+0x31850>  // b.pmore
   38314:	ldr	x8, [sp, #56]
   38318:	cbz	x8, 38690 <PyInit__decimal@@Base+0x31bdc>
   3831c:	ldr	x8, [sp, #56]
   38320:	add	x10, sp, #0x20, lsl #12
   38324:	lsl	x21, x28, #3
   38328:	add	x10, x10, #0x58
   3832c:	lsl	x27, x8, #3
   38330:	add	x8, x27, #0x8
   38334:	add	x9, x10, x21
   38338:	add	x10, x10, #0x18
   3833c:	add	x11, sp, #0x58
   38340:	str	x10, [sp, #40]
   38344:	mul	x10, x27, x28
   38348:	mul	x8, x8, x28
   3834c:	str	x10, [sp, #48]
   38350:	add	x10, x11, x21
   38354:	str	x8, [sp]
   38358:	add	x8, x9, #0x10
   3835c:	str	x8, [sp, #32]
   38360:	add	x8, x10, #0x10
   38364:	mov	x19, xzr
   38368:	sub	x26, x28, #0x1
   3836c:	lsl	x20, x28, #5
   38370:	add	x25, x21, #0x8
   38374:	str	x8, [sp, #24]
   38378:	add	x8, x11, #0x18
   3837c:	str	x8, [sp, #16]
   38380:	b	3839c <PyInit__decimal@@Base+0x318e8>
   38384:	ldp	x8, x19, [sp, #56]
   38388:	add	x19, x19, x28
   3838c:	cmp	x19, x8
   38390:	ldp	x8, x0, [sp]
   38394:	add	x0, x0, x8
   38398:	b.cs	38690 <PyInit__decimal@@Base+0x31bdc>  // b.hs, b.nlast
   3839c:	stp	x0, x0, [sp, #72]
   383a0:	str	x0, [sp, #8]
   383a4:	str	x19, [sp, #64]
   383a8:	b	383d4 <PyInit__decimal@@Base+0x31920>
   383ac:	ldp	x9, x8, [sp, #72]
   383b0:	add	x19, x19, x28
   383b4:	add	x8, x8, x21
   383b8:	str	x8, [sp, #80]
   383bc:	ldr	x8, [sp, #56]
   383c0:	cmp	x19, x8
   383c4:	ldr	x8, [sp, #48]
   383c8:	add	x9, x9, x8
   383cc:	str	x9, [sp, #72]
   383d0:	b.cs	38384 <PyInit__decimal@@Base+0x318d0>  // b.hs, b.nlast
   383d4:	cbz	x28, 384e0 <PyInit__decimal@@Base+0x31a2c>
   383d8:	ldr	x23, [sp, #80]
   383dc:	add	x22, sp, #0x20, lsl #12
   383e0:	add	x22, x22, #0x58
   383e4:	mov	x24, x28
   383e8:	mov	x0, x22
   383ec:	mov	x1, x23
   383f0:	mov	x2, x21
   383f4:	bl	63c0 <memcpy@plt>
   383f8:	subs	x24, x24, #0x1
   383fc:	add	x23, x23, x27
   38400:	add	x22, x22, x21
   38404:	b.ne	383e8 <PyInit__decimal@@Base+0x31934>  // b.any
   38408:	add	x1, sp, #0x20, lsl #12
   3840c:	add	x1, x1, #0x58
   38410:	cbz	x28, 384e0 <PyInit__decimal@@Base+0x31a2c>
   38414:	ldp	x10, x9, [sp, #32]
   38418:	mov	x8, xzr
   3841c:	mov	x11, x26
   38420:	b	38438 <PyInit__decimal@@Base+0x31984>
   38424:	sub	x11, x11, #0x1
   38428:	add	x10, x10, x25
   3842c:	cmp	x8, x28
   38430:	add	x9, x9, x25
   38434:	b.eq	384e0 <PyInit__decimal@@Base+0x31a2c>  // b.none
   38438:	mov	x13, x8
   3843c:	add	x8, x8, #0x1
   38440:	cmp	x8, x28
   38444:	b.cs	38424 <PyInit__decimal@@Base+0x31970>  // b.hs, b.nlast
   38448:	sub	x15, x26, x13
   3844c:	madd	x12, x8, x28, x13
   38450:	cmp	x15, #0x4
   38454:	madd	x13, x13, x28, x8
   38458:	b.cc	384b0 <PyInit__decimal@@Base+0x319fc>  // b.lo, b.ul, b.last
   3845c:	cmp	x28, #0x1
   38460:	mov	x14, x8
   38464:	b.ne	384b4 <PyInit__decimal@@Base+0x31a00>  // b.any
   38468:	and	x17, x15, #0xfffffffffffffffc
   3846c:	and	x16, x11, #0xfffffffffffffffc
   38470:	add	x14, x8, x17
   38474:	add	x13, x13, x17
   38478:	madd	x12, x17, x28, x12
   3847c:	mov	x18, x9
   38480:	mov	x0, x10
   38484:	ldp	q0, q3, [x18, #-16]
   38488:	ldp	q1, q2, [x0, #-16]
   3848c:	subs	x16, x16, #0x4
   38490:	stp	q1, q2, [x18, #-16]
   38494:	stp	q0, q3, [x0, #-16]
   38498:	add	x0, x0, x20
   3849c:	add	x18, x18, #0x20
   384a0:	b.ne	38484 <PyInit__decimal@@Base+0x319d0>  // b.any
   384a4:	cmp	x15, x17
   384a8:	b.eq	38424 <PyInit__decimal@@Base+0x31970>  // b.none
   384ac:	b	384b4 <PyInit__decimal@@Base+0x31a00>
   384b0:	mov	x14, x8
   384b4:	sub	x14, x28, x14
   384b8:	add	x13, x1, x13, lsl #3
   384bc:	add	x12, x1, x12, lsl #3
   384c0:	ldr	x15, [x12]
   384c4:	ldr	x16, [x13]
   384c8:	subs	x14, x14, #0x1
   384cc:	str	x15, [x13], #8
   384d0:	str	x16, [x12]
   384d4:	add	x12, x12, x21
   384d8:	b.ne	384c0 <PyInit__decimal@@Base+0x31a0c>  // b.any
   384dc:	b	38424 <PyInit__decimal@@Base+0x31970>
   384e0:	ldr	x8, [sp, #64]
   384e4:	cmp	x8, x19
   384e8:	b.ne	38524 <PyInit__decimal@@Base+0x31a70>  // b.any
   384ec:	cbz	x28, 383ac <PyInit__decimal@@Base+0x318f8>
   384f0:	ldr	x23, [sp, #80]
   384f4:	add	x22, sp, #0x20, lsl #12
   384f8:	add	x22, x22, #0x58
   384fc:	mov	x24, x28
   38500:	mov	x0, x23
   38504:	mov	x1, x22
   38508:	mov	x2, x21
   3850c:	bl	63c0 <memcpy@plt>
   38510:	subs	x24, x24, #0x1
   38514:	add	x22, x22, x21
   38518:	add	x23, x23, x27
   3851c:	b.ne	38500 <PyInit__decimal@@Base+0x31a4c>  // b.any
   38520:	b	383ac <PyInit__decimal@@Base+0x318f8>
   38524:	cbz	x28, 383ac <PyInit__decimal@@Base+0x318f8>
   38528:	ldr	x23, [sp, #72]
   3852c:	add	x22, sp, #0x58
   38530:	mov	x24, x28
   38534:	mov	x0, x22
   38538:	mov	x1, x23
   3853c:	mov	x2, x21
   38540:	bl	63c0 <memcpy@plt>
   38544:	subs	x24, x24, #0x1
   38548:	add	x23, x23, x27
   3854c:	add	x22, x22, x21
   38550:	b.ne	38534 <PyInit__decimal@@Base+0x31a80>  // b.any
   38554:	cbz	x28, 383ac <PyInit__decimal@@Base+0x318f8>
   38558:	ldp	x9, x10, [sp, #16]
   3855c:	mov	x8, xzr
   38560:	mov	x11, x26
   38564:	add	x1, sp, #0x58
   38568:	b	38580 <PyInit__decimal@@Base+0x31acc>
   3856c:	sub	x11, x11, #0x1
   38570:	add	x10, x10, x25
   38574:	cmp	x8, x28
   38578:	add	x9, x9, x25
   3857c:	b.eq	38628 <PyInit__decimal@@Base+0x31b74>  // b.none
   38580:	mov	x13, x8
   38584:	add	x8, x8, #0x1
   38588:	cmp	x8, x28
   3858c:	b.cs	3856c <PyInit__decimal@@Base+0x31ab8>  // b.hs, b.nlast
   38590:	sub	x15, x26, x13
   38594:	madd	x12, x8, x28, x13
   38598:	cmp	x15, #0x4
   3859c:	madd	x13, x13, x28, x8
   385a0:	b.cc	385f8 <PyInit__decimal@@Base+0x31b44>  // b.lo, b.ul, b.last
   385a4:	cmp	x28, #0x1
   385a8:	mov	x14, x8
   385ac:	b.ne	385fc <PyInit__decimal@@Base+0x31b48>  // b.any
   385b0:	and	x17, x15, #0xfffffffffffffffc
   385b4:	and	x16, x11, #0xfffffffffffffffc
   385b8:	add	x14, x8, x17
   385bc:	add	x13, x13, x17
   385c0:	madd	x12, x17, x28, x12
   385c4:	mov	x18, x9
   385c8:	mov	x0, x10
   385cc:	ldp	q0, q3, [x18, #-16]
   385d0:	ldp	q1, q2, [x0, #-16]
   385d4:	subs	x16, x16, #0x4
   385d8:	stp	q1, q2, [x18, #-16]
   385dc:	stp	q0, q3, [x0, #-16]
   385e0:	add	x0, x0, x20
   385e4:	add	x18, x18, #0x20
   385e8:	b.ne	385cc <PyInit__decimal@@Base+0x31b18>  // b.any
   385ec:	cmp	x15, x17
   385f0:	b.eq	3856c <PyInit__decimal@@Base+0x31ab8>  // b.none
   385f4:	b	385fc <PyInit__decimal@@Base+0x31b48>
   385f8:	mov	x14, x8
   385fc:	sub	x14, x28, x14
   38600:	add	x13, x1, x13, lsl #3
   38604:	add	x12, x1, x12, lsl #3
   38608:	ldr	x15, [x12]
   3860c:	ldr	x16, [x13]
   38610:	subs	x14, x14, #0x1
   38614:	str	x15, [x13], #8
   38618:	str	x16, [x12]
   3861c:	add	x12, x12, x21
   38620:	b.ne	38608 <PyInit__decimal@@Base+0x31b54>  // b.any
   38624:	b	3856c <PyInit__decimal@@Base+0x31ab8>
   38628:	cbz	x28, 383ac <PyInit__decimal@@Base+0x318f8>
   3862c:	ldr	x23, [sp, #72]
   38630:	add	x22, sp, #0x20, lsl #12
   38634:	add	x22, x22, #0x58
   38638:	mov	x24, x28
   3863c:	mov	x0, x23
   38640:	mov	x1, x22
   38644:	mov	x2, x21
   38648:	bl	63c0 <memcpy@plt>
   3864c:	subs	x24, x24, #0x1
   38650:	add	x22, x22, x21
   38654:	add	x23, x23, x27
   38658:	b.ne	3863c <PyInit__decimal@@Base+0x31b88>  // b.any
   3865c:	cbz	x28, 383ac <PyInit__decimal@@Base+0x318f8>
   38660:	ldr	x23, [sp, #80]
   38664:	add	x22, sp, #0x58
   38668:	mov	x24, x28
   3866c:	mov	x0, x23
   38670:	mov	x1, x22
   38674:	mov	x2, x21
   38678:	bl	63c0 <memcpy@plt>
   3867c:	subs	x24, x24, #0x1
   38680:	add	x22, x22, x21
   38684:	add	x23, x23, x27
   38688:	b.ne	3866c <PyInit__decimal@@Base+0x31bb8>  // b.any
   3868c:	b	383ac <PyInit__decimal@@Base+0x318f8>
   38690:	add	sp, sp, #0x40, lsl #12
   38694:	add	sp, sp, #0x60
   38698:	ldp	x20, x19, [sp, #80]
   3869c:	ldp	x22, x21, [sp, #64]
   386a0:	ldp	x24, x23, [sp, #48]
   386a4:	ldp	x26, x25, [sp, #32]
   386a8:	ldp	x28, x27, [sp, #16]
   386ac:	ldp	x29, x30, [sp], #96
   386b0:	ret
   386b4:	stp	x29, x30, [sp, #-96]!
   386b8:	stp	x28, x27, [sp, #16]
   386bc:	stp	x26, x25, [sp, #32]
   386c0:	stp	x24, x23, [sp, #48]
   386c4:	stp	x22, x21, [sp, #64]
   386c8:	stp	x20, x19, [sp, #80]
   386cc:	mov	x29, sp
   386d0:	sub	sp, sp, #0x10, lsl #12
   386d4:	sub	sp, sp, #0x80
   386d8:	mov	x19, x2
   386dc:	mov	x20, x1
   386e0:	mov	x21, x0
   386e4:	mov	x23, x1
   386e8:	cbz	w3, 386f8 <PyInit__decimal@@Base+0x31c44>
   386ec:	cmp	w3, #0x1
   386f0:	b.ne	38964 <PyInit__decimal@@Base+0x31eb0>  // b.any
   386f4:	mov	w23, #0x2                   	// #2
   386f8:	lsr	x8, x20, #3
   386fc:	add	x0, x8, #0x1
   38700:	mov	w1, #0x8                   	// #8
   38704:	bl	20330 <PyInit__decimal@@Base+0x1987c>
   38708:	cbz	x0, 38940 <PyInit__decimal@@Base+0x31e8c>
   3870c:	mov	x22, x0
   38710:	str	x23, [sp, #32]
   38714:	str	x19, [sp, #104]
   38718:	cbz	x20, 3892c <PyInit__decimal@@Base+0x31e78>
   3871c:	ldr	x8, [sp, #104]
   38720:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   38724:	mov	w27, #0x1                   	// #1
   38728:	add	x10, x10, #0x170
   3872c:	sub	x9, x8, #0x1
   38730:	lsr	x8, x8, #1
   38734:	str	x9, [sp, #24]
   38738:	str	x8, [sp, #40]
   3873c:	stp	x20, x21, [sp]
   38740:	b	3875c <PyInit__decimal@@Base+0x31ca8>
   38744:	ldr	x20, [sp]
   38748:	add	x27, x27, #0x2
   3874c:	adrp	x10, 3f000 <PyInit__decimal@@Base+0x3854c>
   38750:	add	x10, x10, #0x170
   38754:	cmp	x27, x20
   38758:	b.hi	3892c <PyInit__decimal@@Base+0x31e78>  // b.pmore
   3875c:	lsr	x20, x27, #6
   38760:	and	x8, x27, #0x3f
   38764:	ldr	x9, [x22, x20, lsl #3]
   38768:	ldr	x8, [x10, x8, lsl #3]
   3876c:	ldr	x28, [sp, #40]
   38770:	tst	x8, x9
   38774:	str	x8, [sp, #72]
   38778:	b.ne	38744 <PyInit__decimal@@Base+0x31c90>  // b.any
   3877c:	cbz	x28, 38744 <PyInit__decimal@@Base+0x31c90>
   38780:	ldr	x19, [sp, #104]
   38784:	ldp	x23, x9, [sp, #24]
   38788:	add	x26, sp, #0x8, lsl #12
   3878c:	mov	x3, xzr
   38790:	mul	x8, x27, x19
   38794:	lsl	x8, x8, #2
   38798:	mul	x25, x27, x9
   3879c:	and	x8, x8, #0xfffffffffffffff8
   387a0:	add	x8, x21, x8
   387a4:	umulh	x1, x27, x9
   387a8:	mov	x0, x25
   387ac:	mov	x2, x23
   387b0:	add	x24, sp, #0x78
   387b4:	add	x26, x26, #0x78
   387b8:	str	x8, [sp, #64]
   387bc:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   387c0:	msub	x9, x23, x0, x25
   387c4:	mul	x8, x9, x19
   387c8:	mov	x10, xzr
   387cc:	mov	x19, x9
   387d0:	lsr	x8, x8, #1
   387d4:	stp	x8, x9, [sp, #48]
   387d8:	str	x27, [sp, #80]
   387dc:	str	x20, [sp, #16]
   387e0:	b	38838 <PyInit__decimal@@Base+0x31d84>
   387e4:	ldr	x8, [sp, #48]
   387e8:	mov	x27, x26
   387ec:	ldr	x9, [sp, #96]
   387f0:	add	x8, x21, x8, lsl #3
   387f4:	mov	x1, x26
   387f8:	mov	x2, x25
   387fc:	add	x0, x8, x9, lsl #3
   38800:	mov	x19, x24
   38804:	bl	63c0 <memcpy@plt>
   38808:	lsl	x8, x20, #3
   3880c:	ldr	x9, [x22, x8]
   38810:	ldr	x10, [sp, #72]
   38814:	mov	x24, x27
   38818:	mov	x26, x19
   3881c:	ldr	x27, [sp, #80]
   38820:	orr	x9, x9, x10
   38824:	ldr	x10, [sp, #88]
   38828:	ldr	x19, [sp, #56]
   3882c:	str	x9, [x22, x8]
   38830:	cmp	x10, x28
   38834:	b.cs	38744 <PyInit__decimal@@Base+0x31c90>  // b.hs, b.nlast
   38838:	ldr	x9, [sp, #64]
   3883c:	add	x11, x10, #0x1, lsl #12
   38840:	sub	x8, x28, x10
   38844:	lsl	x8, x8, #3
   38848:	add	x1, x9, x10, lsl #3
   3884c:	cmp	x11, x28
   38850:	mov	w9, #0x8000                	// #32768
   38854:	csel	x25, x9, x8, cc  // cc = lo, ul, last
   38858:	mov	x0, x26
   3885c:	mov	x2, x25
   38860:	str	x11, [sp, #88]
   38864:	mov	x23, x10
   38868:	bl	63c0 <memcpy@plt>
   3886c:	cmp	x19, x27
   38870:	str	x23, [sp, #96]
   38874:	b.eq	387e4 <PyInit__decimal@@Base+0x31d30>  // b.none
   38878:	add	x8, x21, x23, lsl #3
   3887c:	str	x8, [sp, #112]
   38880:	ldr	x8, [sp, #48]
   38884:	ldr	x28, [sp, #80]
   38888:	mov	x20, x22
   3888c:	ldp	x22, x23, [sp, #24]
   38890:	adrp	x21, 3f000 <PyInit__decimal@@Base+0x3854c>
   38894:	add	x21, x21, #0x170
   38898:	ldr	x9, [sp, #112]
   3889c:	mov	x27, x24
   388a0:	mov	x24, x26
   388a4:	mov	x0, x27
   388a8:	add	x26, x9, x8, lsl #3
   388ac:	mov	x1, x26
   388b0:	mov	x2, x25
   388b4:	bl	63c0 <memcpy@plt>
   388b8:	mov	x0, x26
   388bc:	mov	x1, x24
   388c0:	mov	x2, x25
   388c4:	bl	63c0 <memcpy@plt>
   388c8:	lsr	x9, x19, #3
   388cc:	and	x8, x19, #0x3f
   388d0:	and	x9, x9, #0x1ffffffffffffff8
   388d4:	ldr	x8, [x21, x8, lsl #3]
   388d8:	ldr	x10, [x20, x9]
   388dc:	mul	x26, x19, x23
   388e0:	umulh	x1, x19, x23
   388e4:	mov	x0, x26
   388e8:	orr	x8, x10, x8
   388ec:	mov	x2, x22
   388f0:	mov	x3, xzr
   388f4:	str	x8, [x20, x9]
   388f8:	bl	38968 <PyInit__decimal@@Base+0x31eb4>
   388fc:	ldr	x8, [sp, #104]
   38900:	msub	x19, x22, x0, x26
   38904:	cmp	x19, x28
   38908:	mov	x26, x27
   3890c:	mul	x8, x19, x8
   38910:	lsr	x8, x8, #1
   38914:	b.ne	38898 <PyInit__decimal@@Base+0x31de4>  // b.any
   38918:	ldr	x28, [sp, #40]
   3891c:	mov	x22, x20
   38920:	ldp	x21, x20, [sp, #8]
   38924:	mov	x26, x27
   38928:	b	387ec <PyInit__decimal@@Base+0x31d38>
   3892c:	adrp	x8, 53000 <PyInit__decimal@@Base+0x4c54c>
   38930:	ldr	x8, [x8, #1376]
   38934:	mov	x0, x22
   38938:	blr	x8
   3893c:	mov	w0, #0x1                   	// #1
   38940:	add	sp, sp, #0x10, lsl #12
   38944:	add	sp, sp, #0x80
   38948:	ldp	x20, x19, [sp, #80]
   3894c:	ldp	x22, x21, [sp, #64]
   38950:	ldp	x24, x23, [sp, #48]
   38954:	ldp	x26, x25, [sp, #32]
   38958:	ldp	x28, x27, [sp, #16]
   3895c:	ldp	x29, x30, [sp], #96
   38960:	ret
   38964:	bl	6700 <abort@plt>
   38968:	mov	x4, x2
   3896c:	mov	x5, x0
   38970:	mov	x6, x1
   38974:	cbnz	x3, 38a10 <PyInit__decimal@@Base+0x31f5c>
   38978:	cmp	x2, x1
   3897c:	b.ls	38b24 <PyInit__decimal@@Base+0x32070>  // b.plast
   38980:	clz	x0, x2
   38984:	cbz	x0, 389a0 <PyInit__decimal@@Base+0x31eec>
   38988:	neg	w1, w0
   3898c:	lsl	x2, x6, x0
   38990:	lsl	x4, x4, x0
   38994:	lsr	x6, x5, x1
   38998:	orr	x6, x6, x2
   3899c:	lsl	x5, x5, x0
   389a0:	lsr	x3, x4, #32
   389a4:	and	x7, x4, #0xffffffff
   389a8:	udiv	x2, x6, x3
   389ac:	mov	x0, x2
   389b0:	msub	x2, x2, x3, x6
   389b4:	mul	x6, x7, x0
   389b8:	extr	x1, x2, x5, #32
   389bc:	cmp	x6, x1
   389c0:	b.ls	389d4 <PyInit__decimal@@Base+0x31f20>  // b.plast
   389c4:	adds	x1, x4, x1
   389c8:	ccmp	x6, x1, #0x0, cc  // cc = lo, ul, last
   389cc:	b.hi	38c94 <PyInit__decimal@@Base+0x321e0>  // b.pmore
   389d0:	sub	x0, x0, #0x1
   389d4:	sub	x1, x1, x6
   389d8:	udiv	x6, x1, x3
   389dc:	msub	x1, x6, x3, x1
   389e0:	mov	x2, x6
   389e4:	mul	x7, x7, x6
   389e8:	bfi	x5, x1, #32, #32
   389ec:	cmp	x7, x5
   389f0:	b.ls	38a04 <PyInit__decimal@@Base+0x31f50>  // b.plast
   389f4:	adds	x5, x4, x5
   389f8:	ccmp	x7, x5, #0x0, cc  // cc = lo, ul, last
   389fc:	cinc	x2, x6, ls  // ls = plast
   38a00:	sub	x2, x2, #0x2
   38a04:	orr	x0, x2, x0, lsl #32
   38a08:	mov	x1, #0x0                   	// #0
   38a0c:	ret
   38a10:	cmp	x3, x1
   38a14:	b.ls	38a24 <PyInit__decimal@@Base+0x31f70>  // b.plast
   38a18:	mov	x1, #0x0                   	// #0
   38a1c:	mov	x0, #0x0                   	// #0
   38a20:	ret
   38a24:	clz	x7, x3
   38a28:	cbz	x7, 38c3c <PyInit__decimal@@Base+0x32188>
   38a2c:	mov	x4, #0x40                  	// #64
   38a30:	sub	x4, x4, x7
   38a34:	lsl	x3, x3, x7
   38a38:	lsr	x5, x2, x4
   38a3c:	orr	x3, x5, x3
   38a40:	lsr	x6, x1, x4
   38a44:	and	x8, x3, #0xffffffff
   38a48:	lsr	x10, x3, #32
   38a4c:	lsr	x4, x0, x4
   38a50:	lsl	x1, x1, x7
   38a54:	orr	x1, x4, x1
   38a58:	lsl	x2, x2, x7
   38a5c:	udiv	x5, x6, x10
   38a60:	mov	x4, x5
   38a64:	msub	x5, x5, x10, x6
   38a68:	mul	x6, x8, x4
   38a6c:	extr	x5, x5, x1, #32
   38a70:	cmp	x6, x5
   38a74:	b.ls	38a88 <PyInit__decimal@@Base+0x31fd4>  // b.plast
   38a78:	adds	x5, x3, x5
   38a7c:	ccmp	x6, x5, #0x0, cc  // cc = lo, ul, last
   38a80:	b.hi	38c7c <PyInit__decimal@@Base+0x321c8>  // b.pmore
   38a84:	sub	x4, x4, #0x1
   38a88:	sub	x6, x5, x6
   38a8c:	udiv	x9, x6, x10
   38a90:	msub	x6, x9, x10, x6
   38a94:	mov	x5, x9
   38a98:	mul	x8, x8, x9
   38a9c:	bfi	x1, x6, #32, #32
   38aa0:	cmp	x8, x1
   38aa4:	b.ls	38ab8 <PyInit__decimal@@Base+0x32004>  // b.plast
   38aa8:	adds	x1, x3, x1
   38aac:	ccmp	x8, x1, #0x0, cc  // cc = lo, ul, last
   38ab0:	b.hi	38c64 <PyInit__decimal@@Base+0x321b0>  // b.pmore
   38ab4:	sub	x5, x9, #0x1
   38ab8:	orr	x4, x5, x4, lsl #32
   38abc:	and	x9, x2, #0xffffffff
   38ac0:	mov	w5, w5
   38ac4:	lsr	x2, x2, #32
   38ac8:	lsr	x6, x4, #32
   38acc:	sub	x1, x1, x8
   38ad0:	mov	x10, #0x100000000           	// #4294967296
   38ad4:	mul	x11, x5, x9
   38ad8:	mul	x8, x6, x9
   38adc:	madd	x5, x5, x2, x8
   38ae0:	mul	x2, x6, x2
   38ae4:	add	x3, x5, x11, lsr #32
   38ae8:	add	x5, x2, x10
   38aec:	cmp	x8, x3
   38af0:	csel	x2, x5, x2, hi  // hi = pmore
   38af4:	add	x2, x2, x3, lsr #32
   38af8:	cmp	x1, x2
   38afc:	b.cc	38b18 <PyInit__decimal@@Base+0x32064>  // b.lo, b.ul, b.last
   38b00:	and	x11, x11, #0xffffffff
   38b04:	lsl	x0, x0, x7
   38b08:	add	x3, x11, x3, lsl #32
   38b0c:	cmp	x0, x3
   38b10:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   38b14:	b.ne	38c4c <PyInit__decimal@@Base+0x32198>  // b.any
   38b18:	sub	x0, x4, #0x1
   38b1c:	mov	x1, #0x0                   	// #0
   38b20:	ret
   38b24:	cbnz	x2, 38b30 <PyInit__decimal@@Base+0x3207c>
   38b28:	mov	x2, #0x1                   	// #1
   38b2c:	udiv	x4, x2, x4
   38b30:	clz	x8, x4
   38b34:	cbnz	x8, 38bac <PyInit__decimal@@Base+0x320f8>
   38b38:	lsr	x6, x4, #32
   38b3c:	and	x7, x4, #0xffffffff
   38b40:	sub	x2, x1, x4
   38b44:	mov	x1, #0x1                   	// #1
   38b48:	udiv	x3, x2, x6
   38b4c:	mov	x0, x3
   38b50:	msub	x3, x3, x6, x2
   38b54:	mul	x8, x0, x7
   38b58:	extr	x2, x3, x5, #32
   38b5c:	cmp	x8, x2
   38b60:	b.ls	38b74 <PyInit__decimal@@Base+0x320c0>  // b.plast
   38b64:	adds	x2, x4, x2
   38b68:	ccmp	x8, x2, #0x0, cc  // cc = lo, ul, last
   38b6c:	b.hi	38c88 <PyInit__decimal@@Base+0x321d4>  // b.pmore
   38b70:	sub	x0, x0, #0x1
   38b74:	sub	x2, x2, x8
   38b78:	udiv	x8, x2, x6
   38b7c:	msub	x2, x8, x6, x2
   38b80:	mov	x3, x8
   38b84:	mul	x7, x8, x7
   38b88:	bfi	x5, x2, #32, #32
   38b8c:	cmp	x7, x5
   38b90:	b.ls	38ba4 <PyInit__decimal@@Base+0x320f0>  // b.plast
   38b94:	adds	x4, x4, x5
   38b98:	ccmp	x7, x4, #0x0, cc  // cc = lo, ul, last
   38b9c:	cinc	x3, x8, ls  // ls = plast
   38ba0:	sub	x3, x3, #0x2
   38ba4:	orr	x0, x3, x0, lsl #32
   38ba8:	ret
   38bac:	lsl	x4, x4, x8
   38bb0:	mov	x3, #0x40                  	// #64
   38bb4:	sub	x3, x3, x8
   38bb8:	lsr	x6, x4, #32
   38bbc:	lsl	x2, x1, x8
   38bc0:	and	x7, x4, #0xffffffff
   38bc4:	lsr	x1, x1, x3
   38bc8:	lsr	x3, x0, x3
   38bcc:	orr	x3, x3, x2
   38bd0:	udiv	x2, x1, x6
   38bd4:	lsl	x5, x0, x8
   38bd8:	msub	x1, x2, x6, x1
   38bdc:	mov	x0, x2
   38be0:	mul	x2, x7, x2
   38be4:	extr	x1, x1, x3, #32
   38be8:	cmp	x2, x1
   38bec:	b.ls	38c00 <PyInit__decimal@@Base+0x3214c>  // b.plast
   38bf0:	adds	x1, x4, x1
   38bf4:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
   38bf8:	b.hi	38c58 <PyInit__decimal@@Base+0x321a4>  // b.pmore
   38bfc:	sub	x0, x0, #0x1
   38c00:	sub	x1, x1, x2
   38c04:	udiv	x2, x1, x6
   38c08:	msub	x1, x2, x6, x1
   38c0c:	mov	x8, x2
   38c10:	mul	x2, x7, x2
   38c14:	bfi	x3, x1, #32, #32
   38c18:	cmp	x2, x3
   38c1c:	b.ls	38c30 <PyInit__decimal@@Base+0x3217c>  // b.plast
   38c20:	adds	x3, x4, x3
   38c24:	ccmp	x2, x3, #0x0, cc  // cc = lo, ul, last
   38c28:	b.hi	38c70 <PyInit__decimal@@Base+0x321bc>  // b.pmore
   38c2c:	sub	x8, x8, #0x1
   38c30:	sub	x2, x3, x2
   38c34:	orr	x1, x8, x0, lsl #32
   38c38:	b	38b48 <PyInit__decimal@@Base+0x32094>
   38c3c:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
   38c40:	mov	x1, #0x0                   	// #0
   38c44:	cset	x0, ls  // ls = plast
   38c48:	ret
   38c4c:	mov	x0, x4
   38c50:	mov	x1, #0x0                   	// #0
   38c54:	ret
   38c58:	sub	x0, x0, #0x2
   38c5c:	add	x1, x1, x4
   38c60:	b	38c00 <PyInit__decimal@@Base+0x3214c>
   38c64:	sub	x5, x9, #0x2
   38c68:	add	x1, x1, x3
   38c6c:	b	38ab8 <PyInit__decimal@@Base+0x32004>
   38c70:	sub	x8, x8, #0x2
   38c74:	add	x3, x3, x4
   38c78:	b	38c30 <PyInit__decimal@@Base+0x3217c>
   38c7c:	sub	x4, x4, #0x2
   38c80:	add	x5, x5, x3
   38c84:	b	38a88 <PyInit__decimal@@Base+0x31fd4>
   38c88:	sub	x0, x0, #0x2
   38c8c:	add	x2, x2, x4
   38c90:	b	38b74 <PyInit__decimal@@Base+0x320c0>
   38c94:	sub	x0, x0, #0x2
   38c98:	add	x1, x1, x4
   38c9c:	b	389d4 <PyInit__decimal@@Base+0x31f20>

Disassembly of section .fini:

0000000000038ca0 <.fini>:
   38ca0:	stp	x29, x30, [sp, #-16]!
   38ca4:	mov	x29, sp
   38ca8:	ldp	x29, x30, [sp], #16
   38cac:	ret
