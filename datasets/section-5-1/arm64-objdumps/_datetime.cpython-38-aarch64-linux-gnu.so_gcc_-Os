
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_datetime.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000046b8 <.init>:
    46b8:	stp	x29, x30, [sp, #-16]!
    46bc:	mov	x29, sp
    46c0:	bl	4c10 <PyNumber_FloorDivide@plt+0x10>
    46c4:	ldp	x29, x30, [sp], #16
    46c8:	ret

Disassembly of section .plt:

00000000000046d0 <memcpy@plt-0x20>:
    46d0:	stp	x16, x30, [sp, #-16]!
    46d4:	adrp	x16, 21000 <PyInit__datetime@@Base+0x14918>
    46d8:	ldr	x17, [x16, #4088]
    46dc:	add	x16, x16, #0xff8
    46e0:	br	x17
    46e4:	nop
    46e8:	nop
    46ec:	nop

00000000000046f0 <memcpy@plt>:
    46f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    46f4:	ldr	x17, [x16]
    46f8:	add	x16, x16, #0x0
    46fc:	br	x17

0000000000004700 <PyUnicode_FromFormat@plt>:
    4700:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4704:	ldr	x17, [x16, #8]
    4708:	add	x16, x16, #0x8
    470c:	br	x17

0000000000004710 <_PyUnicode_Ready@plt>:
    4710:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4714:	ldr	x17, [x16, #16]
    4718:	add	x16, x16, #0x10
    471c:	br	x17

0000000000004720 <PyDict_SetItemString@plt>:
    4720:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4724:	ldr	x17, [x16, #24]
    4728:	add	x16, x16, #0x18
    472c:	br	x17

0000000000004730 <strlen@plt>:
    4730:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4734:	ldr	x17, [x16, #32]
    4738:	add	x16, x16, #0x20
    473c:	br	x17

0000000000004740 <PyModule_AddIntConstant@plt>:
    4740:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4744:	ldr	x17, [x16, #40]
    4748:	add	x16, x16, #0x28
    474c:	br	x17

0000000000004750 <PyArg_ParseTupleAndKeywords@plt>:
    4750:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4754:	ldr	x17, [x16, #48]
    4758:	add	x16, x16, #0x30
    475c:	br	x17

0000000000004760 <_PyObject_LookupAttrId@plt>:
    4760:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4764:	ldr	x17, [x16, #56]
    4768:	add	x16, x16, #0x38
    476c:	br	x17

0000000000004770 <_PyBytes_Resize@plt>:
    4770:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4774:	ldr	x17, [x16, #64]
    4778:	add	x16, x16, #0x40
    477c:	br	x17

0000000000004780 <PyObject_CallMethod@plt>:
    4780:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4784:	ldr	x17, [x16, #72]
    4788:	add	x16, x16, #0x48
    478c:	br	x17

0000000000004790 <PyLong_FromDouble@plt>:
    4790:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4794:	ldr	x17, [x16, #80]
    4798:	add	x16, x16, #0x50
    479c:	br	x17

00000000000047a0 <_PyUnicode_Copy@plt>:
    47a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    47a4:	ldr	x17, [x16, #88]
    47a8:	add	x16, x16, #0x58
    47ac:	br	x17

00000000000047b0 <_PyTime_ObjectToTimeval@plt>:
    47b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    47b4:	ldr	x17, [x16, #96]
    47b8:	add	x16, x16, #0x60
    47bc:	br	x17

00000000000047c0 <PyNumber_Add@plt>:
    47c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    47c4:	ldr	x17, [x16, #104]
    47c8:	add	x16, x16, #0x68
    47cc:	br	x17

00000000000047d0 <__cxa_finalize@plt>:
    47d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    47d4:	ldr	x17, [x16, #112]
    47d8:	add	x16, x16, #0x70
    47dc:	br	x17

00000000000047e0 <sprintf@plt>:
    47e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    47e4:	ldr	x17, [x16, #120]
    47e8:	add	x16, x16, #0x78
    47ec:	br	x17

00000000000047f0 <_PyTime_GetSystemClock@plt>:
    47f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    47f4:	ldr	x17, [x16, #128]
    47f8:	add	x16, x16, #0x80
    47fc:	br	x17

0000000000004800 <PyBytes_FromStringAndSize@plt>:
    4800:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4804:	ldr	x17, [x16, #136]
    4808:	add	x16, x16, #0x88
    480c:	br	x17

0000000000004810 <_Py_Dealloc@plt>:
    4810:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4814:	ldr	x17, [x16, #144]
    4818:	add	x16, x16, #0x90
    481c:	br	x17

0000000000004820 <PyErr_NoMemory@plt>:
    4820:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4824:	ldr	x17, [x16, #152]
    4828:	add	x16, x16, #0x98
    482c:	br	x17

0000000000004830 <PyNumber_Multiply@plt>:
    4830:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4834:	ldr	x17, [x16, #160]
    4838:	add	x16, x16, #0xa0
    483c:	br	x17

0000000000004840 <_PyTime_AsTimevalTime_t@plt>:
    4840:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4844:	ldr	x17, [x16, #168]
    4848:	add	x16, x16, #0xa8
    484c:	br	x17

0000000000004850 <PyObject_Str@plt>:
    4850:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4854:	ldr	x17, [x16, #176]
    4858:	add	x16, x16, #0xb0
    485c:	br	x17

0000000000004860 <PyUnicode_WriteChar@plt>:
    4860:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4864:	ldr	x17, [x16, #184]
    4868:	add	x16, x16, #0xb8
    486c:	br	x17

0000000000004870 <_PyArg_UnpackKeywords@plt>:
    4870:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4874:	ldr	x17, [x16, #192]
    4878:	add	x16, x16, #0xc0
    487c:	br	x17

0000000000004880 <PyErr_SetString@plt>:
    4880:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4884:	ldr	x17, [x16, #200]
    4888:	add	x16, x16, #0xc8
    488c:	br	x17

0000000000004890 <PyObject_Malloc@plt>:
    4890:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4894:	ldr	x17, [x16, #208]
    4898:	add	x16, x16, #0xd0
    489c:	br	x17

00000000000048a0 <PyErr_ExceptionMatches@plt>:
    48a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    48a4:	ldr	x17, [x16, #216]
    48a8:	add	x16, x16, #0xd8
    48ac:	br	x17

00000000000048b0 <_Py_HashBytes@plt>:
    48b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    48b4:	ldr	x17, [x16, #224]
    48b8:	add	x16, x16, #0xe0
    48bc:	br	x17

00000000000048c0 <PyOS_snprintf@plt>:
    48c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    48c4:	ldr	x17, [x16, #232]
    48c8:	add	x16, x16, #0xe8
    48cc:	br	x17

00000000000048d0 <PyUnicode_GetLength@plt>:
    48d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    48d4:	ldr	x17, [x16, #240]
    48d8:	add	x16, x16, #0xf0
    48dc:	br	x17

00000000000048e0 <PyFloat_FromDouble@plt>:
    48e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    48e4:	ldr	x17, [x16, #248]
    48e8:	add	x16, x16, #0xf8
    48ec:	br	x17

00000000000048f0 <PyType_Ready@plt>:
    48f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    48f4:	ldr	x17, [x16, #256]
    48f8:	add	x16, x16, #0x100
    48fc:	br	x17

0000000000004900 <PyLong_FromLong@plt>:
    4900:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4904:	ldr	x17, [x16, #264]
    4908:	add	x16, x16, #0x108
    490c:	br	x17

0000000000004910 <_PyLong_DivmodNear@plt>:
    4910:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4914:	ldr	x17, [x16, #272]
    4918:	add	x16, x16, #0x110
    491c:	br	x17

0000000000004920 <PyUnicode_DecodeLocale@plt>:
    4920:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4924:	ldr	x17, [x16, #280]
    4928:	add	x16, x16, #0x118
    492c:	br	x17

0000000000004930 <PyNumber_And@plt>:
    4930:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4934:	ldr	x17, [x16, #288]
    4938:	add	x16, x16, #0x120
    493c:	br	x17

0000000000004940 <__gmon_start__@plt>:
    4940:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4944:	ldr	x17, [x16, #296]
    4948:	add	x16, x16, #0x128
    494c:	br	x17

0000000000004950 <PyObject_CallFunction@plt>:
    4950:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4954:	ldr	x17, [x16, #304]
    4958:	add	x16, x16, #0x130
    495c:	br	x17

0000000000004960 <PyUnicode_AsLatin1String@plt>:
    4960:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4964:	ldr	x17, [x16, #312]
    4968:	add	x16, x16, #0x138
    496c:	br	x17

0000000000004970 <PyTuple_New@plt>:
    4970:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4974:	ldr	x17, [x16, #320]
    4978:	add	x16, x16, #0x140
    497c:	br	x17

0000000000004980 <PyNumber_Remainder@plt>:
    4980:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4984:	ldr	x17, [x16, #328]
    4988:	add	x16, x16, #0x148
    498c:	br	x17

0000000000004990 <PyArg_UnpackTuple@plt>:
    4990:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4994:	ldr	x17, [x16, #336]
    4998:	add	x16, x16, #0x150
    499c:	br	x17

00000000000049a0 <Py_BuildValue@plt>:
    49a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    49a4:	ldr	x17, [x16, #344]
    49a8:	add	x16, x16, #0x158
    49ac:	br	x17

00000000000049b0 <PyErr_Occurred@plt>:
    49b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    49b4:	ldr	x17, [x16, #352]
    49b8:	add	x16, x16, #0x160
    49bc:	br	x17

00000000000049c0 <PyModule_Create2@plt>:
    49c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    49c4:	ldr	x17, [x16, #360]
    49c8:	add	x16, x16, #0x168
    49cc:	br	x17

00000000000049d0 <PyImport_ImportModuleNoBlock@plt>:
    49d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    49d4:	ldr	x17, [x16, #368]
    49d8:	add	x16, x16, #0x170
    49dc:	br	x17

00000000000049e0 <memcmp@plt>:
    49e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    49e4:	ldr	x17, [x16, #376]
    49e8:	add	x16, x16, #0x178
    49ec:	br	x17

00000000000049f0 <strcmp@plt>:
    49f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    49f4:	ldr	x17, [x16, #384]
    49f8:	add	x16, x16, #0x180
    49fc:	br	x17

0000000000004a00 <_Py_CheckFunctionResult@plt>:
    4a00:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a04:	ldr	x17, [x16, #392]
    4a08:	add	x16, x16, #0x188
    4a0c:	br	x17

0000000000004a10 <PyFloat_AsDouble@plt>:
    4a10:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a14:	ldr	x17, [x16, #400]
    4a18:	add	x16, x16, #0x190
    4a1c:	br	x17

0000000000004a20 <PyObject_IsTrue@plt>:
    4a20:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a24:	ldr	x17, [x16, #408]
    4a28:	add	x16, x16, #0x198
    4a2c:	br	x17

0000000000004a30 <PyArg_ParseTuple@plt>:
    4a30:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a34:	ldr	x17, [x16, #416]
    4a38:	add	x16, x16, #0x1a0
    4a3c:	br	x17

0000000000004a40 <Py_FatalError@plt>:
    4a40:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a44:	ldr	x17, [x16, #424]
    4a48:	add	x16, x16, #0x1a8
    4a4c:	br	x17

0000000000004a50 <PyObject_Hash@plt>:
    4a50:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a54:	ldr	x17, [x16, #432]
    4a58:	add	x16, x16, #0x1b0
    4a5c:	br	x17

0000000000004a60 <_PyObject_CallMethodId@plt>:
    4a60:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a64:	ldr	x17, [x16, #440]
    4a68:	add	x16, x16, #0x1b8
    4a6c:	br	x17

0000000000004a70 <_PyTime_ObjectToTime_t@plt>:
    4a70:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a74:	ldr	x17, [x16, #448]
    4a78:	add	x16, x16, #0x1c0
    4a7c:	br	x17

0000000000004a80 <modf@plt>:
    4a80:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a84:	ldr	x17, [x16, #456]
    4a88:	add	x16, x16, #0x1c8
    4a8c:	br	x17

0000000000004a90 <PyLong_AsDouble@plt>:
    4a90:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4a94:	ldr	x17, [x16, #464]
    4a98:	add	x16, x16, #0x1d0
    4a9c:	br	x17

0000000000004aa0 <_PyLong_AsTime_t@plt>:
    4aa0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4aa4:	ldr	x17, [x16, #472]
    4aa8:	add	x16, x16, #0x1d8
    4aac:	br	x17

0000000000004ab0 <_PyTraceMalloc_NewReference@plt>:
    4ab0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4ab4:	ldr	x17, [x16, #480]
    4ab8:	add	x16, x16, #0x1e0
    4abc:	br	x17

0000000000004ac0 <_PyObject_GetDictPtr@plt>:
    4ac0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4ac4:	ldr	x17, [x16, #488]
    4ac8:	add	x16, x16, #0x1e8
    4acc:	br	x17

0000000000004ad0 <PyUnicode_FromString@plt>:
    4ad0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4ad4:	ldr	x17, [x16, #496]
    4ad8:	add	x16, x16, #0x1f0
    4adc:	br	x17

0000000000004ae0 <_PyObject_CallMethodIdObjArgs@plt>:
    4ae0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4ae4:	ldr	x17, [x16, #504]
    4ae8:	add	x16, x16, #0x1f8
    4aec:	br	x17

0000000000004af0 <PyType_GetFlags@plt>:
    4af0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4af4:	ldr	x17, [x16, #512]
    4af8:	add	x16, x16, #0x200
    4afc:	br	x17

0000000000004b00 <PyModule_AddObject@plt>:
    4b00:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b04:	ldr	x17, [x16, #520]
    4b08:	add	x16, x16, #0x208
    4b0c:	br	x17

0000000000004b10 <PyBytes_AsString@plt>:
    4b10:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b14:	ldr	x17, [x16, #528]
    4b18:	add	x16, x16, #0x210
    4b1c:	br	x17

0000000000004b20 <PyCapsule_New@plt>:
    4b20:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b24:	ldr	x17, [x16, #536]
    4b28:	add	x16, x16, #0x218
    4b2c:	br	x17

0000000000004b30 <PyType_IsSubtype@plt>:
    4b30:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b34:	ldr	x17, [x16, #544]
    4b38:	add	x16, x16, #0x220
    4b3c:	br	x17

0000000000004b40 <PyUnicode_AsUTF8AndSize@plt>:
    4b40:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b44:	ldr	x17, [x16, #552]
    4b48:	add	x16, x16, #0x228
    4b4c:	br	x17

0000000000004b50 <PyTuple_Size@plt>:
    4b50:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b54:	ldr	x17, [x16, #560]
    4b58:	add	x16, x16, #0x230
    4b5c:	br	x17

0000000000004b60 <PyErr_Format@plt>:
    4b60:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b64:	ldr	x17, [x16, #568]
    4b68:	add	x16, x16, #0x238
    4b6c:	br	x17

0000000000004b70 <PyNumber_Divmod@plt>:
    4b70:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b74:	ldr	x17, [x16, #576]
    4b78:	add	x16, x16, #0x240
    4b7c:	br	x17

0000000000004b80 <PyUnicode_FromStringAndSize@plt>:
    4b80:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b84:	ldr	x17, [x16, #584]
    4b88:	add	x16, x16, #0x248
    4b8c:	br	x17

0000000000004b90 <_PyObject_MakeTpCall@plt>:
    4b90:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4b94:	ldr	x17, [x16, #592]
    4b98:	add	x16, x16, #0x250
    4b9c:	br	x17

0000000000004ba0 <PyUnicode_AppendAndDel@plt>:
    4ba0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4ba4:	ldr	x17, [x16, #600]
    4ba8:	add	x16, x16, #0x258
    4bac:	br	x17

0000000000004bb0 <_PyLong_AsInt@plt>:
    4bb0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4bb4:	ldr	x17, [x16, #608]
    4bb8:	add	x16, x16, #0x260
    4bbc:	br	x17

0000000000004bc0 <_PyTime_localtime@plt>:
    4bc0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4bc4:	ldr	x17, [x16, #616]
    4bc8:	add	x16, x16, #0x268
    4bcc:	br	x17

0000000000004bd0 <PyTuple_Pack@plt>:
    4bd0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4bd4:	ldr	x17, [x16, #624]
    4bd8:	add	x16, x16, #0x270
    4bdc:	br	x17

0000000000004be0 <PyNumber_TrueDivide@plt>:
    4be0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4be4:	ldr	x17, [x16, #632]
    4be8:	add	x16, x16, #0x278
    4bec:	br	x17

0000000000004bf0 <PyUnicode_Substring@plt>:
    4bf0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4bf4:	ldr	x17, [x16, #640]
    4bf8:	add	x16, x16, #0x280
    4bfc:	br	x17

0000000000004c00 <PyNumber_FloorDivide@plt>:
    4c00:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4c04:	ldr	x17, [x16, #648]
    4c08:	add	x16, x16, #0x288
    4c0c:	br	x17

Disassembly of section .text:

0000000000004c10 <PyInit__datetime@@Base-0x7ad8>:
    4c10:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    4c14:	ldr	x0, [x0, #4000]
    4c18:	cbz	x0, 4c20 <PyNumber_FloorDivide@plt+0x20>
    4c1c:	b	4940 <__gmon_start__@plt>
    4c20:	ret
    4c24:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    4c28:	add	x0, x0, #0xf70
    4c2c:	adrp	x1, 23000 <PyInit__datetime@@Base+0x16918>
    4c30:	add	x1, x1, #0xf70
    4c34:	cmp	x1, x0
    4c38:	b.eq	4c50 <PyNumber_FloorDivide@plt+0x50>  // b.none
    4c3c:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    4c40:	ldr	x1, [x1, #3936]
    4c44:	cbz	x1, 4c50 <PyNumber_FloorDivide@plt+0x50>
    4c48:	mov	x16, x1
    4c4c:	br	x16
    4c50:	ret
    4c54:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    4c58:	add	x0, x0, #0xf70
    4c5c:	adrp	x1, 23000 <PyInit__datetime@@Base+0x16918>
    4c60:	add	x1, x1, #0xf70
    4c64:	sub	x1, x1, x0
    4c68:	mov	x2, #0x2                   	// #2
    4c6c:	asr	x1, x1, #3
    4c70:	sdiv	x1, x1, x2
    4c74:	cbz	x1, 4c8c <PyNumber_FloorDivide@plt+0x8c>
    4c78:	adrp	x2, 21000 <PyInit__datetime@@Base+0x14918>
    4c7c:	ldr	x2, [x2, #4056]
    4c80:	cbz	x2, 4c8c <PyNumber_FloorDivide@plt+0x8c>
    4c84:	mov	x16, x2
    4c88:	br	x16
    4c8c:	ret
    4c90:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    4c94:	ldrb	w1, [x0, #3952]
    4c98:	cbnz	w1, 4cdc <PyNumber_FloorDivide@plt+0xdc>
    4c9c:	stp	x29, x30, [sp, #-32]!
    4ca0:	mov	x29, sp
    4ca4:	str	x19, [sp, #16]
    4ca8:	mov	x19, x0
    4cac:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    4cb0:	ldr	x0, [x0, #3952]
    4cb4:	cbz	x0, 4cc4 <PyNumber_FloorDivide@plt+0xc4>
    4cb8:	adrp	x0, 22000 <PyInit__datetime@@Base+0x15918>
    4cbc:	ldr	x0, [x0, #656]
    4cc0:	bl	47d0 <__cxa_finalize@plt>
    4cc4:	bl	4c24 <PyNumber_FloorDivide@plt+0x24>
    4cc8:	mov	w0, #0x1                   	// #1
    4ccc:	strb	w0, [x19, #3952]
    4cd0:	ldr	x19, [sp, #16]
    4cd4:	ldp	x29, x30, [sp], #32
    4cd8:	ret
    4cdc:	ret
    4ce0:	b	4c54 <PyNumber_FloorDivide@plt+0x54>
    4ce4:	mov	w3, w0
    4ce8:	sdiv	w0, w0, w1
    4cec:	msub	w3, w0, w1, w3
    4cf0:	tbnz	w3, #31, 4cfc <PyNumber_FloorDivide@plt+0xfc>
    4cf4:	str	w3, [x2]
    4cf8:	ret
    4cfc:	add	w1, w1, w3
    4d00:	sub	w0, w0, #0x1
    4d04:	str	w1, [x2]
    4d08:	b	4cf8 <PyNumber_FloorDivide@plt+0xf8>
    4d0c:	tst	x0, #0x3
    4d10:	b.ne	4d3c <PyNumber_FloorDivide@plt+0x13c>  // b.any
    4d14:	mov	w2, #0x64                  	// #100
    4d18:	udiv	w1, w0, w2
    4d1c:	msub	w1, w1, w2, w0
    4d20:	cbnz	w1, 4d44 <PyNumber_FloorDivide@plt+0x144>
    4d24:	mov	w2, #0x190                 	// #400
    4d28:	udiv	w1, w0, w2
    4d2c:	msub	w0, w1, w2, w0
    4d30:	cmp	w0, #0x0
    4d34:	cset	w0, eq  // eq = none
    4d38:	ret
    4d3c:	mov	w0, #0x0                   	// #0
    4d40:	b	4d38 <PyNumber_FloorDivide@plt+0x138>
    4d44:	mov	w0, #0x1                   	// #1
    4d48:	b	4d38 <PyNumber_FloorDivide@plt+0x138>
    4d4c:	mov	w3, w1
    4d50:	cmp	w1, #0x2
    4d54:	b.ne	4d84 <PyNumber_FloorDivide@plt+0x184>  // b.any
    4d58:	stp	x29, x30, [sp, #-16]!
    4d5c:	mov	x29, sp
    4d60:	bl	4d0c <PyNumber_FloorDivide@plt+0x10c>
    4d64:	cbnz	w0, 4d7c <PyNumber_FloorDivide@plt+0x17c>
    4d68:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    4d6c:	add	x0, x0, #0x73c
    4d70:	ldr	w0, [x0, w3, sxtw #2]
    4d74:	ldp	x29, x30, [sp], #16
    4d78:	ret
    4d7c:	mov	w0, #0x1d                  	// #29
    4d80:	b	4d74 <PyNumber_FloorDivide@plt+0x174>
    4d84:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    4d88:	add	x0, x0, #0x73c
    4d8c:	ldr	w0, [x0, w3, sxtw #2]
    4d90:	ret
    4d94:	sub	w4, w0, #0x1
    4d98:	mov	w6, #0x3ab1                	// #15025
    4d9c:	movk	w6, #0x2, lsl #16
    4da0:	mov	x8, x3
    4da4:	mov	x7, x1
    4da8:	mov	w1, #0x16d                 	// #365
    4dac:	sdiv	w5, w4, w6
    4db0:	mov	w0, #0x19                  	// #25
    4db4:	msub	w4, w5, w6, w4
    4db8:	mov	w6, #0x8eac                	// #36524
    4dbc:	sdiv	w3, w4, w6
    4dc0:	msub	w6, w3, w6, w4
    4dc4:	mov	w4, #0x5b5                 	// #1461
    4dc8:	sdiv	w9, w6, w4
    4dcc:	msub	w6, w9, w4, w6
    4dd0:	mov	w4, #0x190                 	// #400
    4dd4:	madd	w0, w3, w0, w9
    4dd8:	sdiv	w1, w6, w1
    4ddc:	add	w0, w1, w0, lsl #2
    4de0:	cmp	w1, #0x4
    4de4:	ccmp	w3, #0x4, #0x4, ne  // ne = any
    4de8:	madd	w0, w5, w4, w0
    4dec:	add	w0, w0, #0x1
    4df0:	str	w0, [x7]
    4df4:	b.ne	4e14 <PyNumber_FloorDivide@plt+0x214>  // b.any
    4df8:	sub	w0, w0, #0x1
    4dfc:	str	w0, [x7]
    4e00:	mov	w0, #0xc                   	// #12
    4e04:	str	w0, [x2]
    4e08:	mov	w0, #0x1f                  	// #31
    4e0c:	str	w0, [x8]
    4e10:	ret
    4e14:	cmp	w1, #0x3
    4e18:	b.ne	4e94 <PyNumber_FloorDivide@plt+0x294>  // b.any
    4e1c:	cmp	w9, #0x18
    4e20:	ccmp	w3, #0x3, #0x4, eq  // eq = none
    4e24:	cset	w3, eq  // eq = none
    4e28:	mov	w0, #0x16d                 	// #365
    4e2c:	adrp	x1, e000 <PyInit__datetime@@Base+0x1918>
    4e30:	add	x1, x1, #0x73c
    4e34:	sdiv	w4, w6, w0
    4e38:	add	x1, x1, #0x34
    4e3c:	msub	w4, w4, w0, w6
    4e40:	add	w0, w4, #0x32
    4e44:	asr	w0, w0, #5
    4e48:	str	w0, [x2]
    4e4c:	cmp	w0, #0x2
    4e50:	csel	w3, w3, wzr, gt
    4e54:	ldr	w5, [x1, w0, sxtw #2]
    4e58:	add	w5, w5, w3
    4e5c:	cmp	w4, w5
    4e60:	b.ge	4e9c <PyNumber_FloorDivide@plt+0x29c>  // b.tcont
    4e64:	stp	x29, x30, [sp, #-16]!
    4e68:	sub	w1, w0, #0x1
    4e6c:	mov	x29, sp
    4e70:	str	w1, [x2]
    4e74:	ldr	w0, [x7]
    4e78:	bl	4d4c <PyNumber_FloorDivide@plt+0x14c>
    4e7c:	sub	w5, w5, w0
    4e80:	add	w4, w4, #0x1
    4e84:	ldp	x29, x30, [sp], #16
    4e88:	sub	w4, w4, w5
    4e8c:	str	w4, [x8]
    4e90:	ret
    4e94:	mov	w3, #0x0                   	// #0
    4e98:	b	4e28 <PyNumber_FloorDivide@plt+0x228>
    4e9c:	add	w4, w4, #0x1
    4ea0:	sub	w4, w4, w5
    4ea4:	str	w4, [x8]
    4ea8:	ret
    4eac:	mov	x4, x0
    4eb0:	ldr	w0, [x1]
    4eb4:	mov	x3, x1
    4eb8:	cmp	w2, w0
    4ebc:	b.hi	4ee8 <PyNumber_FloorDivide@plt+0x2e8>  // b.pmore
    4ec0:	stp	x29, x30, [sp, #-16]!
    4ec4:	mov	w1, w2
    4ec8:	mov	x2, x3
    4ecc:	mov	x29, sp
    4ed0:	bl	4ce4 <PyNumber_FloorDivide@plt+0xe4>
    4ed4:	ldr	w1, [x4]
    4ed8:	ldp	x29, x30, [sp], #16
    4edc:	add	w1, w1, w0
    4ee0:	str	w1, [x4]
    4ee4:	ret
    4ee8:	ret
    4eec:	mov	x3, x0
    4ef0:	add	x0, x0, x2
    4ef4:	mov	w5, #0xa                   	// #10
    4ef8:	cmp	x3, x0
    4efc:	b.ne	4f04 <PyNumber_FloorDivide@plt+0x304>  // b.any
    4f00:	ret
    4f04:	ldrb	w2, [x3], #1
    4f08:	sub	w2, w2, #0x30
    4f0c:	cmp	w2, #0x9
    4f10:	b.hi	4f24 <PyNumber_FloorDivide@plt+0x324>  // b.pmore
    4f14:	ldr	w4, [x1]
    4f18:	madd	w2, w4, w5, w2
    4f1c:	str	w2, [x1]
    4f20:	b	4ef8 <PyNumber_FloorDivide@plt+0x2f8>
    4f24:	mov	x0, #0x0                   	// #0
    4f28:	b	4f00 <PyNumber_FloorDivide@plt+0x300>
    4f2c:	mov	x7, x2
    4f30:	mov	x6, x3
    4f34:	stp	x29, x30, [sp, #-16]!
    4f38:	mov	x2, #0x4                   	// #4
    4f3c:	mov	x29, sp
    4f40:	bl	4eec <PyNumber_FloorDivide@plt+0x2ec>
    4f44:	cbnz	x0, 4f54 <PyNumber_FloorDivide@plt+0x354>
    4f48:	mov	w0, #0xffffffff            	// #-1
    4f4c:	ldp	x29, x30, [sp], #16
    4f50:	ret
    4f54:	ldrb	w1, [x0], #1
    4f58:	cmp	w1, #0x2d
    4f5c:	b.eq	4f68 <PyNumber_FloorDivide@plt+0x368>  // b.none
    4f60:	mov	w0, #0xfffffffe            	// #-2
    4f64:	b	4f4c <PyNumber_FloorDivide@plt+0x34c>
    4f68:	mov	x1, x7
    4f6c:	mov	x2, #0x2                   	// #2
    4f70:	bl	4eec <PyNumber_FloorDivide@plt+0x2ec>
    4f74:	cbz	x0, 4f48 <PyNumber_FloorDivide@plt+0x348>
    4f78:	ldrb	w1, [x0], #1
    4f7c:	cmp	w1, #0x2d
    4f80:	b.ne	4f60 <PyNumber_FloorDivide@plt+0x360>  // b.any
    4f84:	mov	x1, x6
    4f88:	mov	x2, #0x2                   	// #2
    4f8c:	bl	4eec <PyNumber_FloorDivide@plt+0x2ec>
    4f90:	cmp	x0, #0x0
    4f94:	csetm	w0, eq  // eq = none
    4f98:	b	4f4c <PyNumber_FloorDivide@plt+0x34c>
    4f9c:	stp	x29, x30, [sp, #-48]!
    4fa0:	mov	x6, x1
    4fa4:	mov	x7, x5
    4fa8:	mov	x29, sp
    4fac:	add	x9, sp, #0x18
    4fb0:	mov	x8, #0x0                   	// #0
    4fb4:	stp	x2, x3, [sp, #24]
    4fb8:	str	x4, [sp, #40]
    4fbc:	ldr	x1, [x9, x8, lsl #3]
    4fc0:	mov	x2, #0x2                   	// #2
    4fc4:	bl	4eec <PyNumber_FloorDivide@plt+0x2ec>
    4fc8:	cbnz	x0, 4fd8 <PyNumber_FloorDivide@plt+0x3d8>
    4fcc:	mov	w0, #0xfffffffd            	// #-3
    4fd0:	ldp	x29, x30, [sp], #48
    4fd4:	ret
    4fd8:	ldrb	w1, [x0], #1
    4fdc:	cmp	x6, x0
    4fe0:	b.hi	4ff0 <PyNumber_FloorDivide@plt+0x3f0>  // b.pmore
    4fe4:	cmp	w1, #0x0
    4fe8:	cset	w0, ne  // ne = any
    4fec:	b	4fd0 <PyNumber_FloorDivide@plt+0x3d0>
    4ff0:	cmp	w1, #0x3a
    4ff4:	b.ne	5048 <PyNumber_FloorDivide@plt+0x448>  // b.any
    4ff8:	add	x8, x8, #0x1
    4ffc:	cmp	x8, #0x3
    5000:	b.ne	4fbc <PyNumber_FloorDivide@plt+0x3bc>  // b.any
    5004:	sub	x6, x6, x0
    5008:	cmp	x6, #0x6
    500c:	ccmp	x6, #0x3, #0x4, ne  // ne = any
    5010:	b.ne	4fcc <PyNumber_FloorDivide@plt+0x3cc>  // b.any
    5014:	mov	x2, x6
    5018:	mov	x1, x7
    501c:	bl	4eec <PyNumber_FloorDivide@plt+0x2ec>
    5020:	cbz	x0, 4fcc <PyNumber_FloorDivide@plt+0x3cc>
    5024:	cmp	x6, #0x3
    5028:	b.ne	503c <PyNumber_FloorDivide@plt+0x43c>  // b.any
    502c:	ldr	w1, [x7]
    5030:	mov	w2, #0x3e8                 	// #1000
    5034:	mul	w1, w1, w2
    5038:	str	w1, [x7]
    503c:	ldrb	w0, [x0]
    5040:	cmp	w0, #0x0
    5044:	b	4fe8 <PyNumber_FloorDivide@plt+0x3e8>
    5048:	cmp	w1, #0x2e
    504c:	b.eq	5004 <PyNumber_FloorDivide@plt+0x404>  // b.none
    5050:	mov	w0, #0xfffffffc            	// #-4
    5054:	b	4fd0 <PyNumber_FloorDivide@plt+0x3d0>
    5058:	mov	x12, x7
    505c:	add	x11, x0, x1
    5060:	mov	x10, x0
    5064:	stp	x29, x30, [sp, #-32]!
    5068:	mov	x13, x6
    506c:	mov	w6, #0x2d                  	// #45
    5070:	mov	x29, sp
    5074:	ldrb	w1, [x10]
    5078:	cmp	w1, #0x2b
    507c:	ccmp	w1, w6, #0x4, ne  // ne = any
    5080:	b.eq	5090 <PyNumber_FloorDivide@plt+0x490>  // b.none
    5084:	add	x10, x10, #0x1
    5088:	cmp	x11, x10
    508c:	b.hi	5074 <PyNumber_FloorDivide@plt+0x474>  // b.pmore
    5090:	mov	x1, x10
    5094:	bl	4f9c <PyNumber_FloorDivide@plt+0x39c>
    5098:	tbnz	w0, #31, 50b0 <PyNumber_FloorDivide@plt+0x4b0>
    509c:	cmp	x10, x11
    50a0:	b.ne	50b8 <PyNumber_FloorDivide@plt+0x4b8>  // b.any
    50a4:	cmp	w0, #0x1
    50a8:	b.ne	5148 <PyNumber_FloorDivide@plt+0x548>  // b.any
    50ac:	mov	w0, #0xfffffffb            	// #-5
    50b0:	ldp	x29, x30, [sp], #32
    50b4:	ret
    50b8:	sub	x1, x11, x10
    50bc:	cmp	x1, #0x10
    50c0:	b.hi	50ac <PyNumber_FloorDivide@plt+0x4ac>  // b.pmore
    50c4:	mov	x0, #0x240                 	// #576
    50c8:	movk	x0, #0x1, lsl #16
    50cc:	lsr	x0, x0, x1
    50d0:	tbz	w0, #0, 50ac <PyNumber_FloorDivide@plt+0x4ac>
    50d4:	mov	x0, x10
    50d8:	mov	w10, #0x1                   	// #1
    50dc:	add	x3, sp, #0x18
    50e0:	add	x2, sp, #0x14
    50e4:	mov	x5, x12
    50e8:	add	x4, sp, #0x1c
    50ec:	ldrb	w1, [x0], #1
    50f0:	stp	wzr, wzr, [sp, #20]
    50f4:	cmp	w1, #0x2d
    50f8:	mov	x1, x11
    50fc:	cneg	w14, w10, eq  // eq = none
    5100:	str	wzr, [sp, #28]
    5104:	bl	4f9c <PyNumber_FloorDivide@plt+0x39c>
    5108:	ldr	w1, [sp, #24]
    510c:	mov	w2, #0x3c                  	// #60
    5110:	mov	w3, #0xe10                 	// #3600
    5114:	mul	w2, w1, w2
    5118:	ldr	w1, [sp, #20]
    511c:	madd	w1, w1, w3, w2
    5120:	ldr	w2, [sp, #28]
    5124:	add	w1, w1, w2
    5128:	mul	w1, w1, w14
    512c:	str	w1, [x13]
    5130:	ldr	w1, [x12]
    5134:	mul	w1, w1, w14
    5138:	str	w1, [x12]
    513c:	cbnz	w0, 50ac <PyNumber_FloorDivide@plt+0x4ac>
    5140:	mov	w0, w10
    5144:	b	50b0 <PyNumber_FloorDivide@plt+0x4b0>
    5148:	mov	w0, #0x0                   	// #0
    514c:	b	50b0 <PyNumber_FloorDivide@plt+0x4b0>
    5150:	stp	x29, x30, [sp, #-32]!
    5154:	mov	x29, sp
    5158:	stp	x19, x20, [sp, #16]
    515c:	mov	x20, x0
    5160:	adrp	x0, 22000 <PyInit__datetime@@Base+0x15918>
    5164:	add	x0, x0, #0xab8
    5168:	mov	x19, x1
    516c:	mov	x1, #0x0                   	// #0
    5170:	ldr	x2, [x0, #304]
    5174:	blr	x2
    5178:	cbz	x0, 51a0 <PyNumber_FloorDivide@plt+0x5a0>
    517c:	ldr	x1, [x20]
    5180:	add	x1, x1, #0x1
    5184:	str	x1, [x20]
    5188:	str	x20, [x0, #16]
    518c:	cbz	x19, 519c <PyNumber_FloorDivide@plt+0x59c>
    5190:	ldr	x1, [x19]
    5194:	add	x1, x1, #0x1
    5198:	str	x1, [x19]
    519c:	str	x19, [x0, #24]
    51a0:	ldp	x19, x20, [sp, #16]
    51a4:	ldp	x29, x30, [sp], #32
    51a8:	ret
    51ac:	ldr	x1, [x0, #24]
    51b0:	cbnz	x1, 51c4 <PyNumber_FloorDivide@plt+0x5c4>
    51b4:	ldr	w0, [x0, #32]
    51b8:	cmp	w0, #0x0
    51bc:	cset	w0, ne  // ne = any
    51c0:	ret
    51c4:	mov	w0, #0x1                   	// #1
    51c8:	b	51c0 <PyNumber_FloorDivide@plt+0x5c0>
    51cc:	ldrb	w1, [x0, #24]
    51d0:	cbz	w1, 51e8 <PyNumber_FloorDivide@plt+0x5e8>
    51d4:	ldr	x0, [x0, #32]
    51d8:	ldr	x1, [x0]
    51dc:	add	x1, x1, #0x1
    51e0:	str	x1, [x0]
    51e4:	ret
    51e8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    51ec:	ldr	x0, [x0, #4024]
    51f0:	b	51d8 <PyNumber_FloorDivide@plt+0x5d8>
    51f4:	ldrb	w1, [x0, #24]
    51f8:	cbz	w1, 5210 <PyNumber_FloorDivide@plt+0x610>
    51fc:	ldr	x0, [x0, #40]
    5200:	ldr	x1, [x0]
    5204:	add	x1, x1, #0x1
    5208:	str	x1, [x0]
    520c:	ret
    5210:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5214:	ldr	x0, [x0, #4024]
    5218:	b	5200 <PyNumber_FloorDivide@plt+0x600>
    521c:	ldrb	w0, [x0, #31]
    5220:	b	4900 <PyLong_FromLong@plt>
    5224:	ldrb	w2, [x0, #29]
    5228:	ldrb	w1, [x0, #28]
    522c:	ldrb	w0, [x0, #30]
    5230:	lsl	w2, w2, #8
    5234:	orr	w1, w2, w1, lsl #16
    5238:	orr	w0, w1, w0
    523c:	sxtw	x0, w0
    5240:	b	4900 <PyLong_FromLong@plt>
    5244:	ldrb	w0, [x0, #27]
    5248:	b	4900 <PyLong_FromLong@plt>
    524c:	ldrb	w0, [x0, #26]
    5250:	b	4900 <PyLong_FromLong@plt>
    5254:	ldrb	w0, [x0, #25]
    5258:	b	4900 <PyLong_FromLong@plt>
    525c:	ldrb	w0, [x0, #35]
    5260:	b	4900 <PyLong_FromLong@plt>
    5264:	ldrb	w2, [x0, #33]
    5268:	ldrb	w1, [x0, #32]
    526c:	ldrb	w0, [x0, #34]
    5270:	lsl	w2, w2, #8
    5274:	orr	w1, w2, w1, lsl #16
    5278:	orr	w0, w1, w0
    527c:	sxtw	x0, w0
    5280:	b	4900 <PyLong_FromLong@plt>
    5284:	ldrb	w0, [x0, #31]
    5288:	b	4900 <PyLong_FromLong@plt>
    528c:	ldrb	w0, [x0, #30]
    5290:	b	4900 <PyLong_FromLong@plt>
    5294:	ldrb	w0, [x0, #29]
    5298:	b	4900 <PyLong_FromLong@plt>
    529c:	ldrb	w0, [x0, #28]
    52a0:	b	4900 <PyLong_FromLong@plt>
    52a4:	ldrb	w0, [x0, #27]
    52a8:	b	4900 <PyLong_FromLong@plt>
    52ac:	ldurh	w0, [x0, #25]
    52b0:	rev16	w0, w0
    52b4:	and	x0, x0, #0xffff
    52b8:	b	4900 <PyLong_FromLong@plt>
    52bc:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    52c0:	add	x1, x1, #0xab8
    52c4:	add	x1, x1, #0x1a0
    52c8:	mov	x2, #0x0                   	// #0
    52cc:	b	4a60 <_PyObject_CallMethodId@plt>
    52d0:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    52d4:	add	x1, x1, #0xab8
    52d8:	add	x1, x1, #0x1a0
    52dc:	adrp	x3, d000 <PyInit__datetime@@Base+0x918>
    52e0:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    52e4:	add	x3, x3, #0x384
    52e8:	add	x2, x2, #0x250
    52ec:	b	4a60 <_PyObject_CallMethodId@plt>
    52f0:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    52f4:	add	x1, x1, #0xab8
    52f8:	add	x1, x1, #0x1a0
    52fc:	mov	x2, #0x0                   	// #0
    5300:	b	4a60 <_PyObject_CallMethodId@plt>
    5304:	stp	x29, x30, [sp, #-16]!
    5308:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    530c:	adrp	x2, c000 <PyNumber_FloorDivide@plt+0x7400>
    5310:	mov	x29, sp
    5314:	ldr	x0, [x0, #3928]
    5318:	add	x2, x2, #0xe28
    531c:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    5320:	add	x1, x1, #0xe32
    5324:	ldr	x0, [x0]
    5328:	bl	4b60 <PyErr_Format@plt>
    532c:	mov	x0, #0x0                   	// #0
    5330:	ldp	x29, x30, [sp], #16
    5334:	ret
    5338:	stp	x29, x30, [sp, #-32]!
    533c:	mov	x5, x4
    5340:	mov	x29, sp
    5344:	stp	w2, w1, [sp, #20]
    5348:	str	w0, [sp, #28]
    534c:	cbz	w3, 539c <PyNumber_FloorDivide@plt+0x79c>
    5350:	mov	w0, #0x423f                	// #16959
    5354:	movk	w0, #0xf, lsl #16
    5358:	cmp	w2, w0
    535c:	b.ls	5374 <PyNumber_FloorDivide@plt+0x774>  // b.plast
    5360:	mov	w2, #0x4240                	// #16960
    5364:	add	x1, sp, #0x14
    5368:	add	x0, sp, #0x18
    536c:	movk	w2, #0xf, lsl #16
    5370:	bl	4eac <PyNumber_FloorDivide@plt+0x2ac>
    5374:	ldr	w1, [sp, #24]
    5378:	mov	w0, #0x517f                	// #20863
    537c:	movk	w0, #0x1, lsl #16
    5380:	cmp	w1, w0
    5384:	b.ls	539c <PyNumber_FloorDivide@plt+0x79c>  // b.plast
    5388:	mov	w2, #0x5180                	// #20864
    538c:	add	x1, sp, #0x18
    5390:	add	x0, sp, #0x1c
    5394:	movk	w2, #0x1, lsl #16
    5398:	bl	4eac <PyNumber_FloorDivide@plt+0x2ac>
    539c:	ldr	w2, [sp, #28]
    53a0:	mov	w3, #0xc9ff                	// #51711
    53a4:	movk	w3, #0x3b9a, lsl #16
    53a8:	mov	w0, #0x93fe                	// #37886
    53ac:	add	w1, w2, w3
    53b0:	movk	w0, #0x7735, lsl #16
    53b4:	cmp	w1, w0
    53b8:	b.hi	53d8 <PyNumber_FloorDivide@plt+0x7d8>  // b.pmore
    53bc:	ldr	x2, [x5, #304]
    53c0:	mov	x0, x5
    53c4:	mov	x1, #0x0                   	// #0
    53c8:	blr	x2
    53cc:	cbnz	x0, 53f8 <PyNumber_FloorDivide@plt+0x7f8>
    53d0:	ldp	x29, x30, [sp], #32
    53d4:	ret
    53d8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    53dc:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    53e0:	add	x1, x1, #0xe58
    53e4:	ldr	x0, [x0, #4008]
    53e8:	ldr	x0, [x0]
    53ec:	bl	4b60 <PyErr_Format@plt>
    53f0:	mov	x0, #0x0                   	// #0
    53f4:	b	53d0 <PyNumber_FloorDivide@plt+0x7d0>
    53f8:	mov	x1, #0xffffffffffffffff    	// #-1
    53fc:	str	x1, [x0, #16]
    5400:	ldr	w1, [sp, #28]
    5404:	str	w1, [x0, #24]
    5408:	ldr	w1, [sp, #24]
    540c:	str	w1, [x0, #28]
    5410:	ldr	w1, [sp, #20]
    5414:	str	w1, [x0, #32]
    5418:	b	53d0 <PyNumber_FloorDivide@plt+0x7d0>
    541c:	ldp	w1, w2, [x0, #28]
    5420:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    5424:	ldr	w0, [x0, #24]
    5428:	add	x4, x4, #0x298
    542c:	neg	w2, w2
    5430:	neg	w1, w1
    5434:	neg	w0, w0
    5438:	mov	w3, #0x1                   	// #1
    543c:	b	5338 <PyNumber_FloorDivide@plt+0x738>
    5440:	ldp	w1, w2, [x0, #28]
    5444:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    5448:	ldr	w0, [x0, #24]
    544c:	add	x4, x4, #0x298
    5450:	mov	w3, #0x0                   	// #0
    5454:	b	5338 <PyNumber_FloorDivide@plt+0x738>
    5458:	ldr	w1, [x0, #24]
    545c:	tbz	w1, #31, 5464 <PyNumber_FloorDivide@plt+0x864>
    5460:	b	541c <PyNumber_FloorDivide@plt+0x81c>
    5464:	b	5440 <PyNumber_FloorDivide@plt+0x840>
    5468:	cmp	w1, #0x5
    546c:	b.hi	54dc <PyNumber_FloorDivide@plt+0x8dc>  // b.pmore
    5470:	adrp	x2, e000 <PyInit__datetime@@Base+0x1918>
    5474:	add	x2, x2, #0x734
    5478:	ldrb	w1, [x2, w1, uxtw]
    547c:	adr	x2, 5488 <PyNumber_FloorDivide@plt+0x888>
    5480:	add	x1, x2, w1, sxtb #2
    5484:	br	x1
    5488:	cbnz	w0, 54a8 <PyNumber_FloorDivide@plt+0x8a8>
    548c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5490:	ldr	x0, [x0, #4040]
    5494:	ldr	x1, [x0]
    5498:	add	x1, x1, #0x1
    549c:	str	x1, [x0]
    54a0:	ret
    54a4:	cbnz	w0, 548c <PyNumber_FloorDivide@plt+0x88c>
    54a8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    54ac:	ldr	x0, [x0, #3992]
    54b0:	b	5494 <PyNumber_FloorDivide@plt+0x894>
    54b4:	tbz	w0, #31, 54a8 <PyNumber_FloorDivide@plt+0x8a8>
    54b8:	b	548c <PyNumber_FloorDivide@plt+0x88c>
    54bc:	cmp	w0, #0x0
    54c0:	b.le	54a8 <PyNumber_FloorDivide@plt+0x8a8>
    54c4:	b	548c <PyNumber_FloorDivide@plt+0x88c>
    54c8:	cmp	w0, #0x0
    54cc:	b.gt	54a8 <PyNumber_FloorDivide@plt+0x8a8>
    54d0:	b	548c <PyNumber_FloorDivide@plt+0x88c>
    54d4:	tbnz	w0, #31, 54a8 <PyNumber_FloorDivide@plt+0x8a8>
    54d8:	b	548c <PyNumber_FloorDivide@plt+0x88c>
    54dc:	stp	x29, x30, [sp, #-16]!
    54e0:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    54e4:	add	x0, x0, #0xe7b
    54e8:	mov	x29, sp
    54ec:	bl	4a40 <Py_FatalError@plt>
    54f0:	adrp	x2, 23000 <PyInit__datetime@@Base+0x16918>
    54f4:	ldr	x1, [x0, #8]
    54f8:	ldr	x2, [x2, #3960]
    54fc:	ldr	x1, [x1, #24]
    5500:	cmp	x2, x0
    5504:	b.ne	5514 <PyNumber_FloorDivide@plt+0x914>  // b.any
    5508:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    550c:	add	x0, x0, #0xe9b
    5510:	b	4700 <PyUnicode_FromFormat@plt>
    5514:	ldp	x2, x3, [x0, #16]
    5518:	cbnz	x3, 5528 <PyNumber_FloorDivide@plt+0x928>
    551c:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    5520:	add	x0, x0, #0xea2
    5524:	b	4700 <PyUnicode_FromFormat@plt>
    5528:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    552c:	add	x0, x0, #0xea9
    5530:	b	4700 <PyUnicode_FromFormat@plt>
    5534:	stp	x29, x30, [sp, #-32]!
    5538:	mov	x5, x0
    553c:	mov	w1, #0x3c                  	// #60
    5540:	mov	x29, sp
    5544:	ldr	w4, [x0, #32]
    5548:	add	x2, sp, #0x18
    554c:	ldr	w0, [x0, #28]
    5550:	str	w0, [sp, #24]
    5554:	bl	4ce4 <PyNumber_FloorDivide@plt+0xe4>
    5558:	str	w0, [sp, #28]
    555c:	mov	w1, #0x3c                  	// #60
    5560:	add	x2, sp, #0x1c
    5564:	bl	4ce4 <PyNumber_FloorDivide@plt+0xe4>
    5568:	ldr	w1, [x5, #24]
    556c:	cbz	w1, 55e8 <PyNumber_FloorDivide@plt+0x9e8>
    5570:	cmn	w1, #0x1
    5574:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    5578:	cset	w3, eq  // eq = none
    557c:	cmp	w1, #0x1
    5580:	csinc	w3, w3, wzr, ne  // ne = any
    5584:	cbz	w4, 55bc <PyNumber_FloorDivide@plt+0x9bc>
    5588:	mov	w6, w4
    558c:	cmp	w3, #0x0
    5590:	ldp	w5, w4, [sp, #24]
    5594:	adrp	x7, d000 <PyInit__datetime@@Base+0x918>
    5598:	add	x7, x7, #0x250
    559c:	add	x2, x2, #0xf77
    55a0:	mov	w3, w0
    55a4:	csel	x2, x7, x2, eq  // eq = none
    55a8:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    55ac:	add	x0, x0, #0xeb4
    55b0:	bl	4700 <PyUnicode_FromFormat@plt>
    55b4:	ldp	x29, x30, [sp], #32
    55b8:	ret
    55bc:	ldp	w5, w4, [sp, #24]
    55c0:	cmp	w3, #0x0
    55c4:	adrp	x6, d000 <PyInit__datetime@@Base+0x918>
    55c8:	add	x6, x6, #0x250
    55cc:	add	x2, x2, #0xf77
    55d0:	mov	w3, w0
    55d4:	csel	x2, x6, x2, eq  // eq = none
    55d8:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    55dc:	add	x0, x0, #0xed0
    55e0:	bl	4700 <PyUnicode_FromFormat@plt>
    55e4:	b	55b4 <PyNumber_FloorDivide@plt+0x9b4>
    55e8:	ldp	w3, w2, [sp, #24]
    55ec:	mov	w1, w0
    55f0:	cbz	w4, 5604 <PyNumber_FloorDivide@plt+0xa04>
    55f4:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    55f8:	add	x0, x0, #0xebe
    55fc:	bl	4700 <PyUnicode_FromFormat@plt>
    5600:	b	55b4 <PyNumber_FloorDivide@plt+0x9b4>
    5604:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    5608:	add	x0, x0, #0xeda
    560c:	bl	4700 <PyUnicode_FromFormat@plt>
    5610:	b	55b4 <PyNumber_FloorDivide@plt+0x9b4>
    5614:	ldrb	w3, [x0, #28]
    5618:	ldrb	w2, [x0, #27]
    561c:	ldurh	w1, [x0, #25]
    5620:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    5624:	add	x0, x0, #0xee7
    5628:	rev16	w1, w1
    562c:	and	w1, w1, #0xffff
    5630:	b	4700 <PyUnicode_FromFormat@plt>
    5634:	ldr	x1, [x0, #8]
    5638:	ldrb	w4, [x0, #28]
    563c:	ldrb	w3, [x0, #27]
    5640:	ldr	x1, [x1, #24]
    5644:	ldurh	w2, [x0, #25]
    5648:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    564c:	add	x0, x0, #0xef6
    5650:	rev16	w2, w2
    5654:	and	w2, w2, #0xffff
    5658:	b	4700 <PyUnicode_FromFormat@plt>
    565c:	stp	x29, x30, [sp, #-32]!
    5660:	mov	x29, sp
    5664:	stp	x19, x20, [sp, #16]
    5668:	mov	x19, x0
    566c:	mov	x20, x1
    5670:	mov	x0, x1
    5674:	str	x1, [x19, #8]
    5678:	bl	4af0 <PyType_GetFlags@plt>
    567c:	tbz	w0, #9, 568c <PyNumber_FloorDivide@plt+0xa8c>
    5680:	ldr	x0, [x20]
    5684:	add	x0, x0, #0x1
    5688:	str	x0, [x20]
    568c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5690:	ldr	x0, [x0, #3984]
    5694:	ldr	w0, [x0, #4]
    5698:	cbz	w0, 56a4 <PyNumber_FloorDivide@plt+0xaa4>
    569c:	mov	x0, x19
    56a0:	bl	4ab0 <_PyTraceMalloc_NewReference@plt>
    56a4:	mov	x0, #0x1                   	// #1
    56a8:	str	x0, [x19]
    56ac:	mov	x0, x19
    56b0:	ldp	x19, x20, [sp, #16]
    56b4:	ldp	x29, x30, [sp], #32
    56b8:	ret
    56bc:	stp	x29, x30, [sp, #-32]!
    56c0:	cmp	x1, #0x0
    56c4:	mov	x1, #0x28                  	// #40
    56c8:	mov	x29, sp
    56cc:	stp	x19, x20, [sp, #16]
    56d0:	mov	x20, x0
    56d4:	mov	x0, #0x20                  	// #32
    56d8:	csel	x0, x1, x0, ne  // ne = any
    56dc:	bl	4890 <PyObject_Malloc@plt>
    56e0:	cbnz	x0, 56f0 <PyNumber_FloorDivide@plt+0xaf0>
    56e4:	ldp	x19, x20, [sp, #16]
    56e8:	ldp	x29, x30, [sp], #32
    56ec:	b	4820 <PyErr_NoMemory@plt>
    56f0:	mov	x19, x0
    56f4:	mov	x1, x20
    56f8:	bl	565c <PyNumber_FloorDivide@plt+0xa5c>
    56fc:	mov	x0, x19
    5700:	ldp	x19, x20, [sp, #16]
    5704:	ldp	x29, x30, [sp], #32
    5708:	ret
    570c:	stp	x29, x30, [sp, #-32]!
    5710:	cmp	x1, #0x0
    5714:	mov	x1, #0x30                  	// #48
    5718:	mov	x29, sp
    571c:	stp	x19, x20, [sp, #16]
    5720:	mov	x20, x0
    5724:	mov	x0, #0x28                  	// #40
    5728:	csel	x0, x1, x0, ne  // ne = any
    572c:	bl	4890 <PyObject_Malloc@plt>
    5730:	cbnz	x0, 5740 <PyNumber_FloorDivide@plt+0xb40>
    5734:	ldp	x19, x20, [sp, #16]
    5738:	ldp	x29, x30, [sp], #32
    573c:	b	4820 <PyErr_NoMemory@plt>
    5740:	mov	x19, x0
    5744:	mov	x1, x20
    5748:	bl	565c <PyNumber_FloorDivide@plt+0xa5c>
    574c:	mov	x0, x19
    5750:	ldp	x19, x20, [sp, #16]
    5754:	ldp	x29, x30, [sp], #32
    5758:	ret
    575c:	stp	x29, x30, [sp, #-32]!
    5760:	mov	x1, #0x4                   	// #4
    5764:	add	x0, x0, #0x19
    5768:	mov	x29, sp
    576c:	str	x19, [sp, #16]
    5770:	ldur	x19, [x0, #-17]
    5774:	bl	4800 <PyBytes_FromStringAndSize@plt>
    5778:	mov	x1, x0
    577c:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    5780:	add	x0, x0, #0xf05
    5784:	bl	49a0 <Py_BuildValue@plt>
    5788:	mov	x1, x19
    578c:	mov	x2, x0
    5790:	ldr	x19, [sp, #16]
    5794:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    5798:	ldp	x29, x30, [sp], #32
    579c:	add	x0, x0, #0xf09
    57a0:	b	49a0 <Py_BuildValue@plt>
    57a4:	stp	x29, x30, [sp, #-48]!
    57a8:	mov	x29, sp
    57ac:	add	x2, sp, #0x28
    57b0:	str	x19, [sp, #16]
    57b4:	mov	x19, x0
    57b8:	mov	x0, x1
    57bc:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    57c0:	add	x1, x1, #0xf0e
    57c4:	bl	4a30 <PyArg_ParseTuple@plt>
    57c8:	cbz	w0, 580c <PyNumber_FloorDivide@plt+0xc0c>
    57cc:	ldr	x0, [sp, #40]
    57d0:	bl	48d0 <PyUnicode_GetLength@plt>
    57d4:	cbnz	x0, 57ec <PyNumber_FloorDivide@plt+0xbec>
    57d8:	mov	x0, x19
    57dc:	bl	4850 <PyObject_Str@plt>
    57e0:	ldr	x19, [sp, #16]
    57e4:	ldp	x29, x30, [sp], #48
    57e8:	ret
    57ec:	ldr	x2, [sp, #40]
    57f0:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    57f4:	add	x1, x1, #0xab8
    57f8:	mov	x0, x19
    57fc:	add	x1, x1, #0x1b8
    5800:	mov	x3, #0x0                   	// #0
    5804:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    5808:	b	57e0 <PyNumber_FloorDivide@plt+0xbe0>
    580c:	mov	x0, #0x0                   	// #0
    5810:	b	57e0 <PyNumber_FloorDivide@plt+0xbe0>
    5814:	stp	x29, x30, [sp, #-64]!
    5818:	mov	x29, sp
    581c:	add	x3, sp, #0x38
    5820:	add	x2, sp, #0x30
    5824:	stp	x19, x20, [sp, #16]
    5828:	mov	x20, x0
    582c:	mov	x0, x1
    5830:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    5834:	add	x1, x1, #0xf1b
    5838:	str	x21, [sp, #32]
    583c:	bl	4a30 <PyArg_ParseTuple@plt>
    5840:	cbnz	w0, 5858 <PyNumber_FloorDivide@plt+0xc58>
    5844:	mov	x0, #0x0                   	// #0
    5848:	ldp	x19, x20, [sp, #16]
    584c:	ldr	x21, [sp, #32]
    5850:	ldp	x29, x30, [sp], #64
    5854:	ret
    5858:	adrp	x1, 23000 <PyInit__datetime@@Base+0x16918>
    585c:	add	x21, x1, #0xf78
    5860:	mov	x19, x1
    5864:	ldr	x0, [x21, #8]
    5868:	cbz	x0, 5894 <PyNumber_FloorDivide@plt+0xc94>
    586c:	add	x6, x19, #0xf78
    5870:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    5874:	ldp	x3, x4, [sp, #48]
    5878:	add	x1, x1, #0xab8
    587c:	ldr	x0, [x6, #8]
    5880:	mov	x2, x20
    5884:	add	x1, x1, #0x1d0
    5888:	mov	x5, #0x0                   	// #0
    588c:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    5890:	b	5848 <PyNumber_FloorDivide@plt+0xc48>
    5894:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    5898:	add	x0, x0, #0xf27
    589c:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    58a0:	str	x0, [x21, #8]
    58a4:	cbnz	x0, 586c <PyNumber_FloorDivide@plt+0xc6c>
    58a8:	b	5844 <PyNumber_FloorDivide@plt+0xc44>
    58ac:	stp	x29, x30, [sp, #-32]!
    58b0:	mov	x29, sp
    58b4:	str	x19, [sp, #16]
    58b8:	mov	x19, x0
    58bc:	ldr	x0, [x0, #16]
    58c0:	cmn	x0, #0x1
    58c4:	b.ne	58d8 <PyNumber_FloorDivide@plt+0xcd8>  // b.any
    58c8:	add	x0, x19, #0x19
    58cc:	mov	x1, #0x4                   	// #4
    58d0:	bl	48b0 <_Py_HashBytes@plt>
    58d4:	str	x0, [x19, #16]
    58d8:	ldr	x0, [x19, #16]
    58dc:	ldr	x19, [sp, #16]
    58e0:	ldp	x29, x30, [sp], #32
    58e4:	ret
    58e8:	mov	x3, x0
    58ec:	ldr	w0, [x1, #24]
    58f0:	ldr	w2, [x3, #24]
    58f4:	subs	w0, w2, w0
    58f8:	b.ne	5918 <PyNumber_FloorDivide@plt+0xd18>  // b.any
    58fc:	ldr	w0, [x1, #28]
    5900:	ldr	w2, [x3, #28]
    5904:	subs	w0, w2, w0
    5908:	b.ne	5918 <PyNumber_FloorDivide@plt+0xd18>  // b.any
    590c:	ldr	w1, [x1, #32]
    5910:	ldr	w0, [x3, #32]
    5914:	sub	w0, w0, w1
    5918:	ret
    591c:	stp	x29, x30, [sp, #-32]!
    5920:	adrp	x2, 22000 <PyInit__datetime@@Base+0x15918>
    5924:	add	x1, x2, #0x298
    5928:	mov	x29, sp
    592c:	stp	x19, x20, [sp, #16]
    5930:	mov	x20, x0
    5934:	add	x1, x1, #0x1a0
    5938:	ldr	x0, [x0, #8]
    593c:	mov	x19, x2
    5940:	cmp	x0, x1
    5944:	b.ne	5974 <PyNumber_FloorDivide@plt+0xd74>  // b.any
    5948:	ldrb	w0, [x20, #24]
    594c:	cbnz	w0, 5980 <PyNumber_FloorDivide@plt+0xd80>
    5950:	ldr	x0, [x20, #8]
    5954:	add	x1, x19, #0x298
    5958:	add	x1, x1, #0x340
    595c:	cmp	x0, x1
    5960:	b.ne	5990 <PyNumber_FloorDivide@plt+0xd90>  // b.any
    5964:	ldrb	w0, [x20, #24]
    5968:	cbnz	w0, 599c <PyNumber_FloorDivide@plt+0xd9c>
    596c:	mov	x0, #0x0                   	// #0
    5970:	b	5984 <PyNumber_FloorDivide@plt+0xd84>
    5974:	bl	4b30 <PyType_IsSubtype@plt>
    5978:	cbnz	w0, 5948 <PyNumber_FloorDivide@plt+0xd48>
    597c:	b	5950 <PyNumber_FloorDivide@plt+0xd50>
    5980:	ldr	x0, [x20, #40]
    5984:	ldp	x19, x20, [sp, #16]
    5988:	ldp	x29, x30, [sp], #32
    598c:	ret
    5990:	bl	4b30 <PyType_IsSubtype@plt>
    5994:	cbnz	w0, 5964 <PyNumber_FloorDivide@plt+0xd64>
    5998:	b	596c <PyNumber_FloorDivide@plt+0xd6c>
    599c:	ldr	x0, [x20, #32]
    59a0:	b	5984 <PyNumber_FloorDivide@plt+0xd84>
    59a4:	stp	x29, x30, [sp, #-32]!
    59a8:	mov	x29, sp
    59ac:	str	x19, [sp, #16]
    59b0:	mov	x19, x0
    59b4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    59b8:	ldr	x0, [x0, #4024]
    59bc:	cmp	x19, x0
    59c0:	b.ne	59d4 <PyNumber_FloorDivide@plt+0xdd4>  // b.any
    59c4:	mov	w0, #0x0                   	// #0
    59c8:	ldr	x19, [sp, #16]
    59cc:	ldp	x29, x30, [sp], #32
    59d0:	ret
    59d4:	ldr	x0, [x19, #8]
    59d8:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    59dc:	add	x1, x1, #0x298
    59e0:	add	x1, x1, #0x4e0
    59e4:	cmp	x0, x1
    59e8:	b.eq	59c4 <PyNumber_FloorDivide@plt+0xdc4>  // b.none
    59ec:	bl	4b30 <PyType_IsSubtype@plt>
    59f0:	cbnz	w0, 59c4 <PyNumber_FloorDivide@plt+0xdc4>
    59f4:	ldr	x0, [x19, #8]
    59f8:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    59fc:	add	x1, x1, #0xf31
    5a00:	ldr	x2, [x0, #24]
    5a04:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5a08:	ldr	x0, [x0, #3976]
    5a0c:	ldr	x0, [x0]
    5a10:	bl	4b60 <PyErr_Format@plt>
    5a14:	mov	w0, #0xffffffff            	// #-1
    5a18:	b	59c8 <PyNumber_FloorDivide@plt+0xdc8>
    5a1c:	stp	x29, x30, [sp, #-64]!
    5a20:	mov	x29, sp
    5a24:	stp	x19, x20, [sp, #16]
    5a28:	mov	x20, x1
    5a2c:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    5a30:	stp	x21, x22, [sp, #32]
    5a34:	mov	x21, x0
    5a38:	mov	x19, x2
    5a3c:	ldr	x0, [x1, #4024]
    5a40:	str	x23, [sp, #48]
    5a44:	mov	x22, x1
    5a48:	cmp	x2, x0
    5a4c:	cset	w23, ne  // ne = any
    5a50:	b.eq	5a90 <PyNumber_FloorDivide@plt+0xe90>  // b.none
    5a54:	mov	x0, x2
    5a58:	bl	59a4 <PyNumber_FloorDivide@plt+0xda4>
    5a5c:	tbz	w0, #31, 5a90 <PyNumber_FloorDivide@plt+0xe90>
    5a60:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5a64:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    5a68:	add	x1, x1, #0xf75
    5a6c:	ldr	x0, [x0, #3976]
    5a70:	ldr	x0, [x0]
    5a74:	bl	4880 <PyErr_SetString@plt>
    5a78:	mov	x0, #0x0                   	// #0
    5a7c:	ldp	x19, x20, [sp, #16]
    5a80:	ldp	x21, x22, [sp, #32]
    5a84:	ldr	x23, [sp, #48]
    5a88:	ldp	x29, x30, [sp], #64
    5a8c:	ret
    5a90:	ldr	x2, [x21, #304]
    5a94:	and	x1, x23, #0x1
    5a98:	mov	x0, x21
    5a9c:	blr	x2
    5aa0:	cbz	x0, 5a7c <PyNumber_FloorDivide@plt+0xe7c>
    5aa4:	ldr	w1, [x20, #32]
    5aa8:	stur	w1, [x0, #25]
    5aac:	ldrh	w1, [x20, #36]
    5ab0:	sturh	w1, [x0, #29]
    5ab4:	mov	x1, #0xffffffffffffffff    	// #-1
    5ab8:	str	x1, [x0, #16]
    5abc:	ldr	x1, [x22, #4024]
    5ac0:	strb	w23, [x0, #24]
    5ac4:	cmp	x19, x1
    5ac8:	b.eq	5adc <PyNumber_FloorDivide@plt+0xedc>  // b.none
    5acc:	ldr	x1, [x19]
    5ad0:	add	x1, x1, #0x1
    5ad4:	str	x1, [x19]
    5ad8:	str	x19, [x0, #32]
    5adc:	ldrsb	w1, [x20, #32]
    5ae0:	tbz	w1, #31, 5afc <PyNumber_FloorDivide@plt+0xefc>
    5ae4:	ldrb	w1, [x0, #25]
    5ae8:	sub	w1, w1, #0x80
    5aec:	strb	w1, [x0, #25]
    5af0:	mov	w1, #0x1                   	// #1
    5af4:	strb	w1, [x0, #31]
    5af8:	b	5a7c <PyNumber_FloorDivide@plt+0xe7c>
    5afc:	strb	wzr, [x0, #31]
    5b00:	b	5a7c <PyNumber_FloorDivide@plt+0xe7c>
    5b04:	stp	x29, x30, [sp, #-64]!
    5b08:	mov	x29, sp
    5b0c:	stp	x19, x20, [sp, #16]
    5b10:	mov	x20, x1
    5b14:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    5b18:	stp	x21, x22, [sp, #32]
    5b1c:	mov	x21, x0
    5b20:	mov	x19, x2
    5b24:	ldr	x0, [x1, #4024]
    5b28:	str	x23, [sp, #48]
    5b2c:	mov	x22, x1
    5b30:	cmp	x2, x0
    5b34:	cset	w23, ne  // ne = any
    5b38:	b.eq	5b78 <PyNumber_FloorDivide@plt+0xf78>  // b.none
    5b3c:	mov	x0, x2
    5b40:	bl	59a4 <PyNumber_FloorDivide@plt+0xda4>
    5b44:	tbz	w0, #31, 5b78 <PyNumber_FloorDivide@plt+0xf78>
    5b48:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5b4c:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    5b50:	add	x1, x1, #0xf75
    5b54:	ldr	x0, [x0, #3976]
    5b58:	ldr	x0, [x0]
    5b5c:	bl	4880 <PyErr_SetString@plt>
    5b60:	mov	x0, #0x0                   	// #0
    5b64:	ldp	x19, x20, [sp, #16]
    5b68:	ldp	x21, x22, [sp, #32]
    5b6c:	ldr	x23, [sp, #48]
    5b70:	ldp	x29, x30, [sp], #64
    5b74:	ret
    5b78:	ldr	x2, [x21, #304]
    5b7c:	and	x1, x23, #0x1
    5b80:	mov	x0, x21
    5b84:	blr	x2
    5b88:	cbz	x0, 5b64 <PyNumber_FloorDivide@plt+0xf64>
    5b8c:	ldr	x1, [x20, #32]
    5b90:	stur	x1, [x0, #25]
    5b94:	ldrh	w1, [x20, #40]
    5b98:	sturh	w1, [x0, #33]
    5b9c:	mov	x1, #0xffffffffffffffff    	// #-1
    5ba0:	str	x1, [x0, #16]
    5ba4:	ldr	x1, [x22, #4024]
    5ba8:	strb	w23, [x0, #24]
    5bac:	cmp	x19, x1
    5bb0:	b.eq	5bc4 <PyNumber_FloorDivide@plt+0xfc4>  // b.none
    5bb4:	ldr	x1, [x19]
    5bb8:	add	x1, x1, #0x1
    5bbc:	str	x1, [x19]
    5bc0:	str	x19, [x0, #40]
    5bc4:	ldrsb	w1, [x20, #34]
    5bc8:	tbz	w1, #31, 5be4 <PyNumber_FloorDivide@plt+0xfe4>
    5bcc:	ldrb	w1, [x0, #27]
    5bd0:	sub	w1, w1, #0x80
    5bd4:	strb	w1, [x0, #27]
    5bd8:	mov	w1, #0x1                   	// #1
    5bdc:	strb	w1, [x0, #35]
    5be0:	b	5b64 <PyNumber_FloorDivide@plt+0xf64>
    5be4:	strb	wzr, [x0, #35]
    5be8:	b	5b64 <PyNumber_FloorDivide@plt+0xf64>
    5bec:	stp	x29, x30, [sp, #-16]!
    5bf0:	mov	x2, x0
    5bf4:	mov	x3, x1
    5bf8:	mov	x29, sp
    5bfc:	cbnz	x1, 5c24 <PyNumber_FloorDivide@plt+0x1024>
    5c00:	bl	51ac <PyNumber_FloorDivide@plt+0x5ac>
    5c04:	cbnz	w0, 5c24 <PyNumber_FloorDivide@plt+0x1024>
    5c08:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    5c0c:	ldr	x0, [x0, #3960]
    5c10:	ldr	x1, [x0]
    5c14:	add	x1, x1, #0x1
    5c18:	str	x1, [x0]
    5c1c:	ldp	x29, x30, [sp], #16
    5c20:	ret
    5c24:	ldr	x1, [x2, #24]
    5c28:	mov	x0, #0xffffffff            	// #4294967295
    5c2c:	cmp	x1, x0
    5c30:	b.ne	5c40 <PyNumber_FloorDivide@plt+0x1040>  // b.any
    5c34:	ldr	w0, [x2, #32]
    5c38:	cmp	w0, #0x0
    5c3c:	b.le	5c50 <PyNumber_FloorDivide@plt+0x1050>
    5c40:	ldr	w0, [x2, #24]
    5c44:	add	w0, w0, #0x1
    5c48:	cmp	w0, #0x1
    5c4c:	b.ls	5c70 <PyNumber_FloorDivide@plt+0x1070>  // b.plast
    5c50:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5c54:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    5c58:	add	x1, x1, #0xf8a
    5c5c:	ldr	x0, [x0, #3968]
    5c60:	ldr	x0, [x0]
    5c64:	bl	4b60 <PyErr_Format@plt>
    5c68:	mov	x0, #0x0                   	// #0
    5c6c:	b	5c1c <PyNumber_FloorDivide@plt+0x101c>
    5c70:	ldp	x29, x30, [sp], #16
    5c74:	mov	x1, x3
    5c78:	mov	x0, x2
    5c7c:	b	5150 <PyNumber_FloorDivide@plt+0x550>
    5c80:	stp	x29, x30, [sp, #-32]!
    5c84:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    5c88:	add	x3, x3, #0xab8
    5c8c:	mov	x29, sp
    5c90:	mov	x0, x1
    5c94:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    5c98:	mov	x1, x2
    5c9c:	add	x6, sp, #0x18
    5ca0:	adrp	x2, c000 <PyNumber_FloorDivide@plt+0x7400>
    5ca4:	add	x5, sp, #0x10
    5ca8:	add	x4, x4, #0x298
    5cac:	add	x3, x3, #0x1e8
    5cb0:	add	x2, x2, #0xfec
    5cb4:	str	xzr, [sp, #24]
    5cb8:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    5cbc:	cbz	w0, 5cd0 <PyNumber_FloorDivide@plt+0x10d0>
    5cc0:	ldp	x0, x1, [sp, #16]
    5cc4:	bl	5bec <PyNumber_FloorDivide@plt+0xfec>
    5cc8:	ldp	x29, x30, [sp], #32
    5ccc:	ret
    5cd0:	mov	x0, #0x0                   	// #0
    5cd4:	b	5cc8 <PyNumber_FloorDivide@plt+0x10c8>
    5cd8:	stp	x29, x30, [sp, #-32]!
    5cdc:	mov	x29, sp
    5ce0:	stp	x19, x20, [sp, #16]
    5ce4:	mov	x19, x0
    5ce8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5cec:	ldr	x0, [x0, #4024]
    5cf0:	cmp	x19, x0
    5cf4:	b.ne	5d08 <PyNumber_FloorDivide@plt+0x1108>  // b.any
    5cf8:	mov	w0, #0x0                   	// #0
    5cfc:	ldp	x19, x20, [sp, #16]
    5d00:	ldp	x29, x30, [sp], #32
    5d04:	ret
    5d08:	ldr	x0, [x19, #8]
    5d0c:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    5d10:	add	x3, x3, #0x298
    5d14:	mov	x20, x1
    5d18:	add	x1, x3, #0x1a0
    5d1c:	cmp	x0, x1
    5d20:	b.eq	5cf8 <PyNumber_FloorDivide@plt+0x10f8>  // b.none
    5d24:	bl	4b30 <PyType_IsSubtype@plt>
    5d28:	cbnz	w0, 5cf8 <PyNumber_FloorDivide@plt+0x10f8>
    5d2c:	ldr	x0, [x19, #8]
    5d30:	mov	x2, x20
    5d34:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    5d38:	add	x1, x1, #0xffa
    5d3c:	ldr	x3, [x0, #24]
    5d40:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5d44:	ldr	x0, [x0, #3976]
    5d48:	ldr	x0, [x0]
    5d4c:	bl	4b60 <PyErr_Format@plt>
    5d50:	mov	w0, #0xffffffff            	// #-1
    5d54:	b	5cfc <PyNumber_FloorDivide@plt+0x10fc>
    5d58:	stp	x29, x30, [sp, #-16]!
    5d5c:	mov	x0, x1
    5d60:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    5d64:	mov	x29, sp
    5d68:	add	x1, x1, #0x3a
    5d6c:	bl	5cd8 <PyNumber_FloorDivide@plt+0x10d8>
    5d70:	cmn	w0, #0x1
    5d74:	b.eq	5d94 <PyNumber_FloorDivide@plt+0x1194>  // b.none
    5d78:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5d7c:	ldr	x0, [x0, #4024]
    5d80:	ldr	x1, [x0]
    5d84:	add	x1, x1, #0x1
    5d88:	str	x1, [x0]
    5d8c:	ldp	x29, x30, [sp], #16
    5d90:	ret
    5d94:	mov	x0, #0x0                   	// #0
    5d98:	b	5d8c <PyNumber_FloorDivide@plt+0x118c>
    5d9c:	stp	x29, x30, [sp, #-32]!
    5da0:	mov	x29, sp
    5da4:	str	x19, [sp, #16]
    5da8:	mov	x19, x0
    5dac:	mov	x0, x1
    5db0:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    5db4:	add	x1, x1, #0xe28
    5db8:	bl	5cd8 <PyNumber_FloorDivide@plt+0x10d8>
    5dbc:	cmn	w0, #0x1
    5dc0:	b.eq	5de0 <PyNumber_FloorDivide@plt+0x11e0>  // b.none
    5dc4:	ldr	x0, [x19, #16]
    5dc8:	ldr	x1, [x0]
    5dcc:	add	x1, x1, #0x1
    5dd0:	str	x1, [x0]
    5dd4:	ldr	x19, [sp, #16]
    5dd8:	ldp	x29, x30, [sp], #32
    5ddc:	ret
    5de0:	mov	x0, #0x0                   	// #0
    5de4:	b	5dd4 <PyNumber_FloorDivide@plt+0x11d4>
    5de8:	stp	x29, x30, [sp, #-48]!
    5dec:	mov	x29, sp
    5df0:	stp	x19, x20, [sp, #16]
    5df4:	mov	x19, x0
    5df8:	mov	x20, x1
    5dfc:	ldr	x0, [x0, #8]
    5e00:	stp	x21, x22, [sp, #32]
    5e04:	adrp	x21, 22000 <PyInit__datetime@@Base+0x15918>
    5e08:	add	x1, x21, #0x298
    5e0c:	adrp	x22, 21000 <PyInit__datetime@@Base+0x14918>
    5e10:	cmp	x0, x1
    5e14:	b.ne	5e60 <PyNumber_FloorDivide@plt+0x1260>  // b.any
    5e18:	ldr	x0, [x20, #8]
    5e1c:	add	x1, x21, #0x298
    5e20:	cmp	x0, x1
    5e24:	b.ne	5e88 <PyNumber_FloorDivide@plt+0x1288>  // b.any
    5e28:	ldp	w5, w6, [x19, #24]
    5e2c:	add	x4, x21, #0x298
    5e30:	ldr	w7, [x19, #32]
    5e34:	mov	w3, #0x1                   	// #1
    5e38:	ldp	w0, w1, [x20, #24]
    5e3c:	ldr	w2, [x20, #32]
    5e40:	sub	w1, w6, w1
    5e44:	sub	w0, w5, w0
    5e48:	sub	w2, w7, w2
    5e4c:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    5e50:	ldr	x1, [x22, #3960]
    5e54:	cmp	x0, x1
    5e58:	b.ne	5e78 <PyNumber_FloorDivide@plt+0x1278>  // b.any
    5e5c:	b	5e68 <PyNumber_FloorDivide@plt+0x1268>
    5e60:	bl	4b30 <PyType_IsSubtype@plt>
    5e64:	cbnz	w0, 5e18 <PyNumber_FloorDivide@plt+0x1218>
    5e68:	ldr	x0, [x22, #3960]
    5e6c:	ldr	x1, [x0]
    5e70:	add	x1, x1, #0x1
    5e74:	str	x1, [x0]
    5e78:	ldp	x19, x20, [sp, #16]
    5e7c:	ldp	x21, x22, [sp, #32]
    5e80:	ldp	x29, x30, [sp], #48
    5e84:	ret
    5e88:	bl	4b30 <PyType_IsSubtype@plt>
    5e8c:	cbnz	w0, 5e28 <PyNumber_FloorDivide@plt+0x1228>
    5e90:	b	5e68 <PyNumber_FloorDivide@plt+0x1268>
    5e94:	stp	x29, x30, [sp, #-16]!
    5e98:	sub	w6, w0, #0x1
    5e9c:	mov	w4, w2
    5ea0:	mov	x29, sp
    5ea4:	mov	w2, #0x270e                	// #9998
    5ea8:	cmp	w6, w2
    5eac:	b.ls	5ed8 <PyNumber_FloorDivide@plt+0x12d8>  // b.plast
    5eb0:	mov	w2, w0
    5eb4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5eb8:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    5ebc:	add	x1, x1, #0x3e
    5ec0:	ldr	x0, [x0, #3968]
    5ec4:	ldr	x0, [x0]
    5ec8:	bl	4b60 <PyErr_Format@plt>
    5ecc:	mov	w0, #0xffffffff            	// #-1
    5ed0:	ldp	x29, x30, [sp], #16
    5ed4:	ret
    5ed8:	sub	w3, w1, #0x1
    5edc:	cmp	w3, #0xb
    5ee0:	b.ls	5f00 <PyNumber_FloorDivide@plt+0x1300>  // b.plast
    5ee4:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    5ee8:	add	x1, x1, #0x56
    5eec:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5ef0:	ldr	x0, [x0, #3968]
    5ef4:	ldr	x0, [x0]
    5ef8:	bl	4880 <PyErr_SetString@plt>
    5efc:	b	5ecc <PyNumber_FloorDivide@plt+0x12cc>
    5f00:	cmp	w4, #0x0
    5f04:	b.le	5f1c <PyNumber_FloorDivide@plt+0x131c>
    5f08:	bl	4d4c <PyNumber_FloorDivide@plt+0x14c>
    5f0c:	mov	w1, w0
    5f10:	cmp	w1, w4
    5f14:	mov	w0, #0x0                   	// #0
    5f18:	b.ge	5ed0 <PyNumber_FloorDivide@plt+0x12d0>  // b.tcont
    5f1c:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    5f20:	add	x1, x1, #0x6d
    5f24:	b	5eec <PyNumber_FloorDivide@plt+0x12ec>
    5f28:	stp	x29, x30, [sp, #-48]!
    5f2c:	mov	x29, sp
    5f30:	stp	x19, x20, [sp, #16]
    5f34:	mov	w19, w0
    5f38:	mov	x20, x3
    5f3c:	stp	x21, x22, [sp, #32]
    5f40:	mov	w22, w1
    5f44:	mov	w21, w2
    5f48:	bl	5e94 <PyNumber_FloorDivide@plt+0x1294>
    5f4c:	tbnz	w0, #31, 5f8c <PyNumber_FloorDivide@plt+0x138c>
    5f50:	ldr	x2, [x20, #304]
    5f54:	mov	x0, x20
    5f58:	mov	x1, #0x0                   	// #0
    5f5c:	blr	x2
    5f60:	cbz	x0, 5f7c <PyNumber_FloorDivide@plt+0x137c>
    5f64:	rev16	w19, w19
    5f68:	mov	x1, #0xffffffffffffffff    	// #-1
    5f6c:	str	x1, [x0, #16]
    5f70:	sturh	w19, [x0, #25]
    5f74:	strb	w22, [x0, #27]
    5f78:	strb	w21, [x0, #28]
    5f7c:	ldp	x19, x20, [sp, #16]
    5f80:	ldp	x21, x22, [sp, #32]
    5f84:	ldp	x29, x30, [sp], #48
    5f88:	ret
    5f8c:	mov	x0, #0x0                   	// #0
    5f90:	b	5f7c <PyNumber_FloorDivide@plt+0x137c>
    5f94:	ldrb	w2, [x0, #28]
    5f98:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    5f9c:	ldrb	w1, [x0, #27]
    5fa0:	add	x3, x3, #0x298
    5fa4:	ldurh	w4, [x0, #25]
    5fa8:	add	x3, x3, #0x680
    5fac:	rev16	w4, w4
    5fb0:	and	w0, w4, #0xffff
    5fb4:	b	5f28 <PyNumber_FloorDivide@plt+0x1328>
    5fb8:	stp	x29, x30, [sp, #-16]!
    5fbc:	cmp	w0, #0x17
    5fc0:	mov	x29, sp
    5fc4:	b.ls	5fec <PyNumber_FloorDivide@plt+0x13ec>  // b.plast
    5fc8:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    5fcc:	add	x1, x1, #0x8b
    5fd0:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    5fd4:	ldr	x0, [x0, #3968]
    5fd8:	ldr	x0, [x0]
    5fdc:	bl	4880 <PyErr_SetString@plt>
    5fe0:	mov	w0, #0xffffffff            	// #-1
    5fe4:	ldp	x29, x30, [sp], #16
    5fe8:	ret
    5fec:	cmp	w1, #0x3b
    5ff0:	b.ls	6000 <PyNumber_FloorDivide@plt+0x1400>  // b.plast
    5ff4:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    5ff8:	add	x1, x1, #0xa1
    5ffc:	b	5fd0 <PyNumber_FloorDivide@plt+0x13d0>
    6000:	cmp	w2, #0x3b
    6004:	b.ls	6014 <PyNumber_FloorDivide@plt+0x1414>  // b.plast
    6008:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    600c:	add	x1, x1, #0xb9
    6010:	b	5fd0 <PyNumber_FloorDivide@plt+0x13d0>
    6014:	mov	w0, #0x423f                	// #16959
    6018:	movk	w0, #0xf, lsl #16
    601c:	cmp	w3, w0
    6020:	b.ls	6030 <PyNumber_FloorDivide@plt+0x1430>  // b.plast
    6024:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6028:	add	x1, x1, #0xd1
    602c:	b	5fd0 <PyNumber_FloorDivide@plt+0x13d0>
    6030:	cmp	w4, #0x1
    6034:	mov	w0, #0x0                   	// #0
    6038:	b.ls	5fe4 <PyNumber_FloorDivide@plt+0x13e4>  // b.plast
    603c:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6040:	add	x1, x1, #0xf2
    6044:	b	5fd0 <PyNumber_FloorDivide@plt+0x13d0>
    6048:	stp	x29, x30, [sp, #-96]!
    604c:	mov	x29, sp
    6050:	stp	x19, x20, [sp, #16]
    6054:	mov	x19, x4
    6058:	mov	w20, w3
    605c:	mov	w4, w5
    6060:	stp	x21, x22, [sp, #32]
    6064:	mov	w22, w5
    6068:	stp	x23, x24, [sp, #48]
    606c:	mov	w24, w1
    6070:	mov	w23, w2
    6074:	stp	x25, x26, [sp, #64]
    6078:	mov	w25, w0
    607c:	mov	x26, x6
    6080:	str	x27, [sp, #80]
    6084:	bl	5fb8 <PyNumber_FloorDivide@plt+0x13b8>
    6088:	tbz	w0, #31, 60ac <PyNumber_FloorDivide@plt+0x14ac>
    608c:	mov	x0, #0x0                   	// #0
    6090:	ldp	x19, x20, [sp, #16]
    6094:	ldp	x21, x22, [sp, #32]
    6098:	ldp	x23, x24, [sp, #48]
    609c:	ldp	x25, x26, [sp, #64]
    60a0:	ldr	x27, [sp, #80]
    60a4:	ldp	x29, x30, [sp], #96
    60a8:	ret
    60ac:	mov	x0, x19
    60b0:	bl	59a4 <PyNumber_FloorDivide@plt+0xda4>
    60b4:	tbnz	w0, #31, 608c <PyNumber_FloorDivide@plt+0x148c>
    60b8:	adrp	x21, 21000 <PyInit__datetime@@Base+0x14918>
    60bc:	mov	x0, x26
    60c0:	ldr	x2, [x26, #304]
    60c4:	ldr	x21, [x21, #4024]
    60c8:	cmp	x19, x21
    60cc:	cset	w27, ne  // ne = any
    60d0:	cset	x1, ne  // ne = any
    60d4:	blr	x2
    60d8:	cbz	x0, 608c <PyNumber_FloorDivide@plt+0x148c>
    60dc:	mov	x1, #0xffffffffffffffff    	// #-1
    60e0:	str	x1, [x0, #16]
    60e4:	asr	w1, w20, #16
    60e8:	rev16	w20, w20
    60ec:	strb	w27, [x0, #24]
    60f0:	cmp	x19, x21
    60f4:	strb	w25, [x0, #25]
    60f8:	strb	w24, [x0, #26]
    60fc:	strb	w23, [x0, #27]
    6100:	strb	w1, [x0, #28]
    6104:	sturh	w20, [x0, #29]
    6108:	b.eq	611c <PyNumber_FloorDivide@plt+0x151c>  // b.none
    610c:	ldr	x1, [x19]
    6110:	add	x1, x1, #0x1
    6114:	str	x1, [x19]
    6118:	str	x19, [x0, #32]
    611c:	strb	w22, [x0, #31]
    6120:	b	6090 <PyNumber_FloorDivide@plt+0x1490>
    6124:	mov	x6, x5
    6128:	mov	w5, #0x0                   	// #0
    612c:	b	6048 <PyNumber_FloorDivide@plt+0x1448>
    6130:	mov	x5, x0
    6134:	ldrb	w0, [x0, #29]
    6138:	ldrb	w4, [x5, #33]
    613c:	ldrb	w3, [x5, #32]
    6140:	ldrb	w1, [x5, #30]
    6144:	lsl	w4, w4, #8
    6148:	ldrb	w2, [x5, #31]
    614c:	orr	w3, w4, w3, lsl #16
    6150:	ldrb	w4, [x5, #34]
    6154:	orr	w3, w3, w4
    6158:	ldrb	w4, [x5, #24]
    615c:	cbz	w4, 6178 <PyNumber_FloorDivide@plt+0x1578>
    6160:	ldr	x4, [x5, #40]
    6164:	adrp	x6, 22000 <PyInit__datetime@@Base+0x15918>
    6168:	ldrb	w5, [x5, #35]
    616c:	add	x6, x6, #0x298
    6170:	add	x6, x6, #0x340
    6174:	b	6048 <PyNumber_FloorDivide@plt+0x1448>
    6178:	adrp	x4, 21000 <PyInit__datetime@@Base+0x14918>
    617c:	ldr	x4, [x4, #4024]
    6180:	b	6164 <PyNumber_FloorDivide@plt+0x1564>
    6184:	ldrb	w3, [x0, #33]
    6188:	adrp	x4, 21000 <PyInit__datetime@@Base+0x14918>
    618c:	ldrb	w1, [x0, #32]
    6190:	adrp	x6, 22000 <PyInit__datetime@@Base+0x15918>
    6194:	ldrb	w5, [x0, #35]
    6198:	add	x6, x6, #0x298
    619c:	lsl	w3, w3, #8
    61a0:	ldrb	w2, [x0, #31]
    61a4:	orr	w1, w3, w1, lsl #16
    61a8:	ldrb	w3, [x0, #34]
    61ac:	ldr	x4, [x4, #4024]
    61b0:	orr	w3, w1, w3
    61b4:	ldrb	w1, [x0, #30]
    61b8:	add	x6, x6, #0x340
    61bc:	ldrb	w0, [x0, #29]
    61c0:	b	6048 <PyNumber_FloorDivide@plt+0x1448>
    61c4:	stp	x29, x30, [sp, #-96]!
    61c8:	mov	x29, sp
    61cc:	stp	x19, x20, [sp, #16]
    61d0:	mov	w20, w0
    61d4:	mov	w19, w6
    61d8:	stp	x21, x22, [sp, #32]
    61dc:	mov	w22, w4
    61e0:	mov	w21, w5
    61e4:	stp	x23, x24, [sp, #48]
    61e8:	mov	w24, w2
    61ec:	mov	w23, w3
    61f0:	stp	x25, x26, [sp, #64]
    61f4:	mov	w25, w1
    61f8:	stp	x27, x28, [sp, #80]
    61fc:	mov	x27, x7
    6200:	bl	5e94 <PyNumber_FloorDivide@plt+0x1294>
    6204:	tbz	w0, #31, 6228 <PyNumber_FloorDivide@plt+0x1628>
    6208:	mov	x0, #0x0                   	// #0
    620c:	ldp	x19, x20, [sp, #16]
    6210:	ldp	x21, x22, [sp, #32]
    6214:	ldp	x23, x24, [sp, #48]
    6218:	ldp	x25, x26, [sp, #64]
    621c:	ldp	x27, x28, [sp, #80]
    6220:	ldp	x29, x30, [sp], #96
    6224:	ret
    6228:	ldr	w4, [sp, #96]
    622c:	mov	w3, w19
    6230:	mov	w2, w21
    6234:	mov	w1, w22
    6238:	mov	w0, w23
    623c:	bl	5fb8 <PyNumber_FloorDivide@plt+0x13b8>
    6240:	tbnz	w0, #31, 6208 <PyNumber_FloorDivide@plt+0x1608>
    6244:	mov	x0, x27
    6248:	bl	59a4 <PyNumber_FloorDivide@plt+0xda4>
    624c:	tbnz	w0, #31, 6208 <PyNumber_FloorDivide@plt+0x1608>
    6250:	adrp	x2, 21000 <PyInit__datetime@@Base+0x14918>
    6254:	ldr	x0, [sp, #104]
    6258:	ldr	x26, [x2, #4024]
    625c:	ldr	x4, [x0, #304]
    6260:	cmp	x27, x26
    6264:	cset	w28, ne  // ne = any
    6268:	cset	x1, ne  // ne = any
    626c:	blr	x4
    6270:	cbz	x0, 6208 <PyNumber_FloorDivide@plt+0x1608>
    6274:	mov	x1, #0xffffffffffffffff    	// #-1
    6278:	rev16	w20, w20
    627c:	str	x1, [x0, #16]
    6280:	asr	w1, w19, #16
    6284:	rev16	w19, w19
    6288:	strb	w28, [x0, #24]
    628c:	sturh	w20, [x0, #25]
    6290:	cmp	x27, x26
    6294:	strb	w25, [x0, #27]
    6298:	strb	w24, [x0, #28]
    629c:	strb	w23, [x0, #29]
    62a0:	strb	w22, [x0, #30]
    62a4:	strb	w21, [x0, #31]
    62a8:	strb	w1, [x0, #32]
    62ac:	sturh	w19, [x0, #33]
    62b0:	b.eq	62c4 <PyNumber_FloorDivide@plt+0x16c4>  // b.none
    62b4:	ldr	x1, [x27]
    62b8:	add	x1, x1, #0x1
    62bc:	str	x1, [x27]
    62c0:	str	x27, [x0, #40]
    62c4:	ldrb	w1, [sp, #96]
    62c8:	strb	w1, [x0, #35]
    62cc:	b	620c <PyNumber_FloorDivide@plt+0x160c>
    62d0:	sub	sp, sp, #0x20
    62d4:	stp	x29, x30, [sp, #16]
    62d8:	add	x29, sp, #0x10
    62dc:	ldr	x8, [sp, #32]
    62e0:	str	wzr, [sp]
    62e4:	str	x8, [sp, #8]
    62e8:	bl	61c4 <PyNumber_FloorDivide@plt+0x15c4>
    62ec:	ldp	x29, x30, [sp, #16]
    62f0:	add	sp, sp, #0x20
    62f4:	ret
    62f8:	ldr	x17, [sp, #8]
    62fc:	adrp	x8, 22000 <PyInit__datetime@@Base+0x15918>
    6300:	add	x8, x8, #0x298
    6304:	mov	w15, w6
    6308:	add	x8, x8, #0x1a0
    630c:	mov	x16, x7
    6310:	cmp	x17, x8
    6314:	b.ne	631c <PyNumber_FloorDivide@plt+0x171c>  // b.any
    6318:	b	61c4 <PyNumber_FloorDivide@plt+0x15c4>
    631c:	mov	w7, w5
    6320:	mov	w6, w4
    6324:	mov	w5, w3
    6328:	mov	w4, w2
    632c:	mov	w3, w1
    6330:	mov	w2, w0
    6334:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6338:	mov	x0, x17
    633c:	add	x1, x1, #0x10d
    6340:	str	w15, [sp]
    6344:	str	x16, [sp, #8]
    6348:	b	4950 <PyObject_CallFunction@plt>
    634c:	sub	sp, sp, #0x50
    6350:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    6354:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    6358:	add	x4, x4, #0x298
    635c:	add	x3, x3, #0xab8
    6360:	add	x6, x4, #0x340
    6364:	stp	x29, x30, [sp, #16]
    6368:	add	x29, sp, #0x10
    636c:	add	x7, sp, #0x40
    6370:	add	x5, sp, #0x38
    6374:	str	x19, [sp, #32]
    6378:	mov	x19, x0
    637c:	mov	x0, x1
    6380:	mov	x1, x2
    6384:	add	x2, sp, #0x48
    6388:	str	x2, [sp]
    638c:	add	x4, x4, #0x680
    6390:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    6394:	add	x3, x3, #0x200
    6398:	add	x2, x2, #0x116
    639c:	str	xzr, [sp, #72]
    63a0:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    63a4:	cbz	w0, 642c <PyNumber_FloorDivide@plt+0x182c>
    63a8:	ldp	x7, x0, [sp, #64]
    63ac:	cbnz	x0, 63c0 <PyNumber_FloorDivide@plt+0x17c0>
    63b0:	ldrb	w0, [x7, #24]
    63b4:	cbz	w0, 6420 <PyNumber_FloorDivide@plt+0x1820>
    63b8:	ldr	x0, [x7, #32]
    63bc:	str	x0, [sp, #72]
    63c0:	ldrb	w1, [x7, #29]
    63c4:	ldr	x0, [sp, #56]
    63c8:	ldrb	w6, [x7, #28]
    63cc:	lsl	w1, w1, #8
    63d0:	ldrb	w9, [x7, #30]
    63d4:	ldurh	w8, [x0, #25]
    63d8:	ldrb	w5, [x7, #27]
    63dc:	orr	w6, w1, w6, lsl #16
    63e0:	ldrb	w4, [x7, #26]
    63e4:	rev16	w8, w8
    63e8:	ldrb	w3, [x7, #25]
    63ec:	orr	w6, w6, w9
    63f0:	ldrb	w2, [x0, #28]
    63f4:	ldrb	w1, [x0, #27]
    63f8:	str	x19, [sp, #8]
    63fc:	ldrb	w0, [x7, #31]
    6400:	ldr	x7, [sp, #72]
    6404:	str	w0, [sp]
    6408:	and	w0, w8, #0xffff
    640c:	bl	62f8 <PyNumber_FloorDivide@plt+0x16f8>
    6410:	ldp	x29, x30, [sp, #16]
    6414:	ldr	x19, [sp, #32]
    6418:	add	sp, sp, #0x50
    641c:	ret
    6420:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    6424:	ldr	x0, [x0, #4024]
    6428:	b	63bc <PyNumber_FloorDivide@plt+0x17bc>
    642c:	mov	x0, #0x0                   	// #0
    6430:	b	6410 <PyNumber_FloorDivide@plt+0x1810>
    6434:	adrp	x6, 22000 <PyInit__datetime@@Base+0x15918>
    6438:	add	x6, x6, #0x298
    643c:	add	x9, x6, #0x680
    6440:	cmp	x3, x9
    6444:	b.ne	644c <PyNumber_FloorDivide@plt+0x184c>  // b.any
    6448:	b	5f28 <PyNumber_FloorDivide@plt+0x1328>
    644c:	add	x6, x6, #0x1a0
    6450:	mov	x5, x3
    6454:	cmp	x3, x6
    6458:	b.ne	6494 <PyNumber_FloorDivide@plt+0x1894>  // b.any
    645c:	sub	sp, sp, #0x20
    6460:	adrp	x7, 21000 <PyInit__datetime@@Base+0x14918>
    6464:	mov	w6, #0x0                   	// #0
    6468:	mov	w4, #0x0                   	// #0
    646c:	mov	w3, #0x0                   	// #0
    6470:	stp	x29, x30, [sp, #16]
    6474:	add	x29, sp, #0x10
    6478:	ldr	x7, [x7, #4024]
    647c:	str	x5, [sp]
    6480:	mov	w5, #0x0                   	// #0
    6484:	bl	62d0 <PyNumber_FloorDivide@plt+0x16d0>
    6488:	ldp	x29, x30, [sp, #16]
    648c:	add	sp, sp, #0x20
    6490:	ret
    6494:	mov	w4, w2
    6498:	mov	w3, w1
    649c:	mov	w2, w0
    64a0:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    64a4:	mov	x0, x5
    64a8:	add	x1, x1, #0x6bf
    64ac:	b	4950 <PyObject_CallFunction@plt>
    64b0:	stp	x29, x30, [sp, #-96]!
    64b4:	mov	w2, #0x0                   	// #0
    64b8:	mov	x29, sp
    64bc:	str	x19, [sp, #16]
    64c0:	mov	x19, x0
    64c4:	mov	x0, x1
    64c8:	add	x1, sp, #0x20
    64cc:	bl	4a70 <_PyTime_ObjectToTime_t@plt>
    64d0:	cmn	w0, #0x1
    64d4:	b.ne	64e8 <PyNumber_FloorDivide@plt+0x18e8>  // b.any
    64d8:	mov	x0, #0x0                   	// #0
    64dc:	ldr	x19, [sp, #16]
    64e0:	ldp	x29, x30, [sp], #96
    64e4:	ret
    64e8:	ldr	x0, [sp, #32]
    64ec:	add	x1, sp, #0x28
    64f0:	bl	4bc0 <_PyTime_localtime@plt>
    64f4:	cbnz	w0, 64d8 <PyNumber_FloorDivide@plt+0x18d8>
    64f8:	ldp	w2, w1, [sp, #52]
    64fc:	mov	x3, x19
    6500:	ldr	w0, [sp, #60]
    6504:	add	w1, w1, #0x1
    6508:	add	w0, w0, #0x76c
    650c:	bl	6434 <PyNumber_FloorDivide@plt+0x1834>
    6510:	b	64dc <PyNumber_FloorDivide@plt+0x18dc>
    6514:	stp	x29, x30, [sp, #-48]!
    6518:	mov	x3, #0x1                   	// #1
    651c:	mov	x2, x3
    6520:	mov	x29, sp
    6524:	add	x4, sp, #0x28
    6528:	str	x19, [sp, #16]
    652c:	mov	x19, x0
    6530:	mov	x0, x1
    6534:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6538:	add	x1, x1, #0x74e
    653c:	bl	4990 <PyArg_UnpackTuple@plt>
    6540:	cbz	w0, 655c <PyNumber_FloorDivide@plt+0x195c>
    6544:	ldr	x1, [sp, #40]
    6548:	mov	x0, x19
    654c:	bl	64b0 <PyNumber_FloorDivide@plt+0x18b0>
    6550:	ldr	x19, [sp, #16]
    6554:	ldp	x29, x30, [sp], #48
    6558:	ret
    655c:	mov	x0, #0x0                   	// #0
    6560:	b	6550 <PyNumber_FloorDivide@plt+0x1950>
    6564:	b	64b0 <PyNumber_FloorDivide@plt+0x18b0>
    6568:	stp	x29, x30, [sp, #-48]!
    656c:	mov	x29, sp
    6570:	add	x2, sp, #0x20
    6574:	str	x19, [sp, #16]
    6578:	mov	x19, x0
    657c:	mov	x0, x1
    6580:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6584:	add	x1, x1, #0x125
    6588:	bl	4a30 <PyArg_ParseTuple@plt>
    658c:	cbz	w0, 65b4 <PyNumber_FloorDivide@plt+0x19b4>
    6590:	ldr	w0, [sp, #32]
    6594:	cmp	w0, #0x0
    6598:	b.gt	65bc <PyNumber_FloorDivide@plt+0x19bc>
    659c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    65a0:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    65a4:	add	x1, x1, #0x133
    65a8:	ldr	x0, [x0, #3968]
    65ac:	ldr	x0, [x0]
    65b0:	bl	4880 <PyErr_SetString@plt>
    65b4:	mov	x0, #0x0                   	// #0
    65b8:	b	65dc <PyNumber_FloorDivide@plt+0x19dc>
    65bc:	add	x3, sp, #0x2c
    65c0:	add	x2, sp, #0x28
    65c4:	add	x1, sp, #0x24
    65c8:	bl	4d94 <PyNumber_FloorDivide@plt+0x194>
    65cc:	ldp	w0, w1, [sp, #36]
    65d0:	mov	x3, x19
    65d4:	ldr	w2, [sp, #44]
    65d8:	bl	6434 <PyNumber_FloorDivide@plt+0x1834>
    65dc:	ldr	x19, [sp, #16]
    65e0:	ldp	x29, x30, [sp], #48
    65e4:	ret
    65e8:	stp	x29, x30, [sp, #-64]!
    65ec:	mov	x29, sp
    65f0:	stp	x19, x20, [sp, #16]
    65f4:	mov	x20, x0
    65f8:	ldr	x0, [x1, #8]
    65fc:	ldr	x0, [x0, #168]
    6600:	tbnz	w0, #28, 6624 <PyNumber_FloorDivide@plt+0x1a24>
    6604:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    6608:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    660c:	add	x1, x1, #0x148
    6610:	ldr	x0, [x0, #3976]
    6614:	ldr	x0, [x0]
    6618:	bl	4880 <PyErr_SetString@plt>
    661c:	mov	x0, #0x0                   	// #0
    6620:	b	6670 <PyNumber_FloorDivide@plt+0x1a70>
    6624:	mov	x19, x1
    6628:	add	x1, sp, #0x38
    662c:	mov	x0, x19
    6630:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    6634:	cbz	x0, 667c <PyNumber_FloorDivide@plt+0x1a7c>
    6638:	ldr	x1, [sp, #56]
    663c:	stp	wzr, wzr, [sp, #44]
    6640:	str	wzr, [sp, #52]
    6644:	cmp	x1, #0xa
    6648:	b.ne	667c <PyNumber_FloorDivide@plt+0x1a7c>  // b.any
    664c:	add	x3, sp, #0x34
    6650:	add	x2, sp, #0x30
    6654:	add	x1, sp, #0x2c
    6658:	bl	4f2c <PyNumber_FloorDivide@plt+0x32c>
    665c:	tbnz	w0, #31, 667c <PyNumber_FloorDivide@plt+0x1a7c>
    6660:	ldp	w0, w1, [sp, #44]
    6664:	mov	x3, x20
    6668:	ldr	w2, [sp, #52]
    666c:	bl	6434 <PyNumber_FloorDivide@plt+0x1834>
    6670:	ldp	x19, x20, [sp, #16]
    6674:	ldp	x29, x30, [sp], #64
    6678:	ret
    667c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    6680:	mov	x2, x19
    6684:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6688:	add	x1, x1, #0x16c
    668c:	ldr	x0, [x0, #3968]
    6690:	ldr	x0, [x0]
    6694:	bl	4b60 <PyErr_Format@plt>
    6698:	b	661c <PyNumber_FloorDivide@plt+0x1a1c>
    669c:	ldp	x1, x2, [x0, #16]
    66a0:	cbnz	x2, 66b0 <PyNumber_FloorDivide@plt+0x1ab0>
    66a4:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    66a8:	add	x0, x0, #0x189
    66ac:	b	49a0 <Py_BuildValue@plt>
    66b0:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    66b4:	add	x0, x0, #0x18d
    66b8:	b	49a0 <Py_BuildValue@plt>
    66bc:	ldr	x1, [x0]
    66c0:	sub	x1, x1, #0x1
    66c4:	str	x1, [x0]
    66c8:	cbnz	x1, 66d0 <PyNumber_FloorDivide@plt+0x1ad0>
    66cc:	b	4810 <_Py_Dealloc@plt>
    66d0:	ret
    66d4:	stp	x29, x30, [sp, #-32]!
    66d8:	mov	x29, sp
    66dc:	stp	x19, x20, [sp, #16]
    66e0:	mov	x19, x0
    66e4:	ldr	x0, [x0, #16]
    66e8:	cmn	x0, #0x1
    66ec:	b.ne	671c <PyNumber_FloorDivide@plt+0x1b1c>  // b.any
    66f0:	ldp	w1, w2, [x19, #24]
    66f4:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    66f8:	ldr	w3, [x19, #32]
    66fc:	add	x0, x0, #0x6bf
    6700:	bl	49a0 <Py_BuildValue@plt>
    6704:	mov	x20, x0
    6708:	cbz	x0, 671c <PyNumber_FloorDivide@plt+0x1b1c>
    670c:	bl	4a50 <PyObject_Hash@plt>
    6710:	str	x0, [x19, #16]
    6714:	mov	x0, x20
    6718:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    671c:	ldr	x0, [x19, #16]
    6720:	ldp	x19, x20, [sp, #16]
    6724:	ldp	x29, x30, [sp], #32
    6728:	ret
    672c:	ldr	x0, [x0, #16]
    6730:	b	66d4 <PyNumber_FloorDivide@plt+0x1ad4>
    6734:	stp	x29, x30, [sp, #-32]!
    6738:	mov	x29, sp
    673c:	str	x19, [sp, #16]
    6740:	mov	x19, x0
    6744:	ldr	x0, [x0, #16]
    6748:	cbz	x0, 6754 <PyNumber_FloorDivide@plt+0x1b54>
    674c:	str	xzr, [x19, #16]
    6750:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6754:	ldr	x0, [x19, #24]
    6758:	cbz	x0, 6764 <PyNumber_FloorDivide@plt+0x1b64>
    675c:	str	xzr, [x19, #24]
    6760:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6764:	ldr	x0, [x19, #8]
    6768:	ldr	x1, [x0, #320]
    676c:	mov	x0, x19
    6770:	ldr	x19, [sp, #16]
    6774:	mov	x16, x1
    6778:	ldp	x29, x30, [sp], #32
    677c:	br	x16
    6780:	cbz	x0, 6788 <PyNumber_FloorDivide@plt+0x1b88>
    6784:	b	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6788:	ret
    678c:	stp	x29, x30, [sp, #-32]!
    6790:	mov	x29, sp
    6794:	str	x19, [sp, #16]
    6798:	mov	x19, x0
    679c:	ldrb	w0, [x0, #24]
    67a0:	cbz	w0, 67ac <PyNumber_FloorDivide@plt+0x1bac>
    67a4:	ldr	x0, [x19, #32]
    67a8:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    67ac:	ldr	x0, [x19, #8]
    67b0:	ldr	x1, [x0, #320]
    67b4:	mov	x0, x19
    67b8:	ldr	x19, [sp, #16]
    67bc:	mov	x16, x1
    67c0:	ldp	x29, x30, [sp], #32
    67c4:	br	x16
    67c8:	stp	x29, x30, [sp, #-32]!
    67cc:	mov	x29, sp
    67d0:	str	x19, [sp, #16]
    67d4:	mov	x19, x0
    67d8:	ldrb	w0, [x0, #24]
    67dc:	cbz	w0, 67e8 <PyNumber_FloorDivide@plt+0x1be8>
    67e0:	ldr	x0, [x19, #40]
    67e4:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    67e8:	ldr	x0, [x19, #8]
    67ec:	ldr	x1, [x0, #320]
    67f0:	mov	x0, x19
    67f4:	ldr	x19, [sp, #16]
    67f8:	mov	x16, x1
    67fc:	ldp	x29, x30, [sp], #32
    6800:	br	x16
    6804:	sub	sp, sp, #0x70
    6808:	stp	x29, x30, [sp, #16]
    680c:	add	x29, sp, #0x10
    6810:	stp	x21, x22, [sp, #48]
    6814:	adrp	x21, 21000 <PyInit__datetime@@Base+0x14918>
    6818:	mov	x22, x0
    681c:	ldr	x0, [x21, #4024]
    6820:	str	x0, [sp, #104]
    6824:	ldr	x0, [x1, #16]
    6828:	stp	x19, x20, [sp, #32]
    682c:	mov	x20, x1
    6830:	str	x23, [sp, #64]
    6834:	sub	x1, x0, #0x1
    6838:	stp	wzr, wzr, [sp, #84]
    683c:	mov	x23, x2
    6840:	stp	wzr, wzr, [sp, #92]
    6844:	cmp	x1, #0x1
    6848:	str	wzr, [sp, #100]
    684c:	b.hi	69e8 <PyNumber_FloorDivide@plt+0x1de8>  // b.pmore
    6850:	cmp	x0, #0x2
    6854:	ldr	x19, [x20, #24]
    6858:	b.ne	6864 <PyNumber_FloorDivide@plt+0x1c64>  // b.any
    685c:	ldr	x0, [x20, #32]
    6860:	str	x0, [sp, #104]
    6864:	ldr	x0, [x19, #8]
    6868:	ldr	x0, [x0, #168]
    686c:	tbz	w0, #27, 68a4 <PyNumber_FloorDivide@plt+0x1ca4>
    6870:	ldr	x0, [x19, #16]
    6874:	cmp	x0, #0x6
    6878:	b.ne	69e0 <PyNumber_FloorDivide@plt+0x1de0>  // b.any
    687c:	ldrb	w0, [x19, #32]
    6880:	and	w0, w0, #0x7f
    6884:	cmp	w0, #0x17
    6888:	b.hi	69e0 <PyNumber_FloorDivide@plt+0x1de0>  // b.pmore
    688c:	ldr	x2, [sp, #104]
    6890:	mov	x1, x19
    6894:	mov	x0, x22
    6898:	bl	5a1c <PyNumber_FloorDivide@plt+0xe1c>
    689c:	mov	x19, x0
    68a0:	b	6948 <PyNumber_FloorDivide@plt+0x1d48>
    68a4:	tbz	w0, #28, 69e0 <PyNumber_FloorDivide@plt+0x1de0>
    68a8:	ldrsb	w0, [x19, #32]
    68ac:	tbz	w0, #31, 6938 <PyNumber_FloorDivide@plt+0x1d38>
    68b0:	ldr	x0, [x19, #16]
    68b4:	cmp	x0, #0x6
    68b8:	b.ne	69e0 <PyNumber_FloorDivide@plt+0x1de0>  // b.any
    68bc:	ldrb	w5, [x19, #32]
    68c0:	and	w1, w5, #0x1c
    68c4:	and	w0, w5, #0x20
    68c8:	cmp	w1, #0x4
    68cc:	b.ne	696c <PyNumber_FloorDivide@plt+0x1d6c>  // b.any
    68d0:	cbz	w0, 6964 <PyNumber_FloorDivide@plt+0x1d64>
    68d4:	add	x3, x19, #0x30
    68d8:	add	x4, x19, #0x48
    68dc:	tst	x5, #0x40
    68e0:	csel	x3, x4, x3, eq  // eq = none
    68e4:	ldrb	w0, [x3]
    68e8:	and	w0, w0, #0x7f
    68ec:	cmp	w0, #0x17
    68f0:	cset	w0, ls  // ls = plast
    68f4:	cbz	w0, 69e0 <PyNumber_FloorDivide@plt+0x1de0>
    68f8:	mov	x0, x19
    68fc:	bl	4960 <PyUnicode_AsLatin1String@plt>
    6900:	mov	x19, x0
    6904:	cbnz	x0, 69bc <PyNumber_FloorDivide@plt+0x1dbc>
    6908:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    690c:	ldr	x0, [x0, #4032]
    6910:	ldr	x0, [x0]
    6914:	bl	48a0 <PyErr_ExceptionMatches@plt>
    6918:	cbz	w0, 6944 <PyNumber_FloorDivide@plt+0x1d44>
    691c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    6920:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6924:	add	x1, x1, #0x192
    6928:	ldr	x0, [x0, #3968]
    692c:	ldr	x0, [x0]
    6930:	bl	4880 <PyErr_SetString@plt>
    6934:	b	6948 <PyNumber_FloorDivide@plt+0x1d48>
    6938:	mov	x0, x19
    693c:	bl	4710 <_PyUnicode_Ready@plt>
    6940:	cbz	w0, 68b0 <PyNumber_FloorDivide@plt+0x1cb0>
    6944:	mov	x19, #0x0                   	// #0
    6948:	mov	x0, x19
    694c:	ldp	x29, x30, [sp, #16]
    6950:	ldp	x19, x20, [sp, #32]
    6954:	ldp	x21, x22, [sp, #48]
    6958:	ldr	x23, [sp, #64]
    695c:	add	sp, sp, #0x70
    6960:	ret
    6964:	ldr	x3, [x19, #72]
    6968:	b	68e4 <PyNumber_FloorDivide@plt+0x1ce4>
    696c:	cmp	w1, #0x8
    6970:	b.ne	6998 <PyNumber_FloorDivide@plt+0x1d98>  // b.any
    6974:	cbz	w0, 6990 <PyNumber_FloorDivide@plt+0x1d90>
    6978:	add	x3, x19, #0x30
    697c:	add	x4, x19, #0x48
    6980:	tst	x5, #0x40
    6984:	csel	x3, x4, x3, eq  // eq = none
    6988:	ldrh	w0, [x3]
    698c:	b	68e8 <PyNumber_FloorDivide@plt+0x1ce8>
    6990:	ldr	x3, [x19, #72]
    6994:	b	6988 <PyNumber_FloorDivide@plt+0x1d88>
    6998:	cbz	w0, 69b4 <PyNumber_FloorDivide@plt+0x1db4>
    699c:	add	x3, x19, #0x30
    69a0:	add	x4, x19, #0x48
    69a4:	tst	x5, #0x40
    69a8:	csel	x3, x4, x3, eq  // eq = none
    69ac:	ldr	w0, [x3]
    69b0:	b	68e8 <PyNumber_FloorDivide@plt+0x1ce8>
    69b4:	ldr	x3, [x19, #72]
    69b8:	b	69ac <PyNumber_FloorDivide@plt+0x1dac>
    69bc:	ldr	x2, [sp, #104]
    69c0:	mov	x1, x0
    69c4:	mov	x0, x22
    69c8:	bl	5a1c <PyNumber_FloorDivide@plt+0xe1c>
    69cc:	mov	x20, x0
    69d0:	mov	x0, x19
    69d4:	mov	x19, x20
    69d8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    69dc:	b	6948 <PyNumber_FloorDivide@plt+0x1d48>
    69e0:	ldr	x21, [x21, #4024]
    69e4:	str	x21, [sp, #104]
    69e8:	add	x0, sp, #0x64
    69ec:	str	x0, [sp, #8]
    69f0:	add	x0, sp, #0x68
    69f4:	str	x0, [sp]
    69f8:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    69fc:	add	x3, x3, #0xab8
    6a00:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    6a04:	add	x7, sp, #0x60
    6a08:	add	x6, sp, #0x5c
    6a0c:	add	x5, sp, #0x58
    6a10:	add	x4, sp, #0x54
    6a14:	add	x3, x3, #0x220
    6a18:	add	x2, x2, #0x430
    6a1c:	mov	x1, x23
    6a20:	mov	x0, x20
    6a24:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    6a28:	cbz	w0, 6944 <PyNumber_FloorDivide@plt+0x1d44>
    6a2c:	ldp	w0, w1, [sp, #84]
    6a30:	mov	x6, x22
    6a34:	ldp	w2, w3, [sp, #92]
    6a38:	ldr	w5, [sp, #100]
    6a3c:	ldr	x4, [sp, #104]
    6a40:	bl	6048 <PyNumber_FloorDivide@plt+0x1448>
    6a44:	b	689c <PyNumber_FloorDivide@plt+0x1c9c>
    6a48:	stp	x29, x30, [sp, #-48]!
    6a4c:	mov	x29, sp
    6a50:	stp	x19, x20, [sp, #16]
    6a54:	mov	x20, x0
    6a58:	add	x0, x0, #0x19
    6a5c:	str	x21, [sp, #32]
    6a60:	mov	w21, w1
    6a64:	mov	x1, #0x6                   	// #6
    6a68:	bl	4800 <PyBytes_FromStringAndSize@plt>
    6a6c:	mov	x19, x0
    6a70:	cbz	x0, 6ac8 <PyNumber_FloorDivide@plt+0x1ec8>
    6a74:	cmp	w21, #0x3
    6a78:	b.le	6a90 <PyNumber_FloorDivide@plt+0x1e90>
    6a7c:	ldrb	w0, [x20, #31]
    6a80:	cbz	w0, 6a90 <PyNumber_FloorDivide@plt+0x1e90>
    6a84:	ldrb	w0, [x19, #32]
    6a88:	orr	w0, w0, #0xffffff80
    6a8c:	strb	w0, [x19, #32]
    6a90:	ldrb	w0, [x20, #24]
    6a94:	mov	x1, x19
    6a98:	cbz	w0, 6ab0 <PyNumber_FloorDivide@plt+0x1eb0>
    6a9c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    6aa0:	ldr	x2, [x20, #32]
    6aa4:	ldr	x0, [x0, #4024]
    6aa8:	cmp	x2, x0
    6aac:	b.ne	6adc <PyNumber_FloorDivide@plt+0x1edc>  // b.any
    6ab0:	mov	x0, #0x1                   	// #1
    6ab4:	bl	4bd0 <PyTuple_Pack@plt>
    6ab8:	mov	x20, x0
    6abc:	mov	x0, x19
    6ac0:	mov	x19, x20
    6ac4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6ac8:	mov	x0, x19
    6acc:	ldp	x19, x20, [sp, #16]
    6ad0:	ldr	x21, [sp, #32]
    6ad4:	ldp	x29, x30, [sp], #48
    6ad8:	ret
    6adc:	mov	x0, #0x2                   	// #2
    6ae0:	bl	4bd0 <PyTuple_Pack@plt>
    6ae4:	b	6ab8 <PyNumber_FloorDivide@plt+0x1eb8>
    6ae8:	stp	x29, x30, [sp, #-32]!
    6aec:	mov	w1, #0x2                   	// #2
    6af0:	mov	x29, sp
    6af4:	str	x19, [sp, #16]
    6af8:	ldr	x19, [x0, #8]
    6afc:	bl	6a48 <PyNumber_FloorDivide@plt+0x1e48>
    6b00:	mov	x2, x0
    6b04:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    6b08:	mov	x1, x19
    6b0c:	add	x0, x0, #0xf09
    6b10:	ldr	x19, [sp, #16]
    6b14:	ldp	x29, x30, [sp], #32
    6b18:	b	49a0 <Py_BuildValue@plt>
    6b1c:	stp	x29, x30, [sp, #-48]!
    6b20:	mov	x29, sp
    6b24:	add	x2, sp, #0x2c
    6b28:	stp	x19, x20, [sp, #16]
    6b2c:	mov	x19, x0
    6b30:	mov	x0, x1
    6b34:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6b38:	add	x1, x1, #0x201
    6b3c:	bl	4a30 <PyArg_ParseTuple@plt>
    6b40:	cbz	w0, 6b74 <PyNumber_FloorDivide@plt+0x1f74>
    6b44:	ldr	w1, [sp, #44]
    6b48:	mov	x0, x19
    6b4c:	ldr	x20, [x19, #8]
    6b50:	bl	6a48 <PyNumber_FloorDivide@plt+0x1e48>
    6b54:	mov	x2, x0
    6b58:	mov	x1, x20
    6b5c:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    6b60:	add	x0, x0, #0xf09
    6b64:	bl	49a0 <Py_BuildValue@plt>
    6b68:	ldp	x19, x20, [sp, #16]
    6b6c:	ldp	x29, x30, [sp], #48
    6b70:	ret
    6b74:	mov	x0, #0x0                   	// #0
    6b78:	b	6b68 <PyNumber_FloorDivide@plt+0x1f68>
    6b7c:	sub	sp, sp, #0x50
    6b80:	stp	x29, x30, [sp, #16]
    6b84:	add	x29, sp, #0x10
    6b88:	stp	x19, x20, [sp, #32]
    6b8c:	mov	x19, x0
    6b90:	mov	x0, x1
    6b94:	mov	x1, x2
    6b98:	ldrb	w2, [x19, #25]
    6b9c:	str	w2, [sp, #52]
    6ba0:	ldrb	w2, [x19, #26]
    6ba4:	str	w2, [sp, #56]
    6ba8:	ldrb	w2, [x19, #27]
    6bac:	str	w2, [sp, #60]
    6bb0:	ldrb	w2, [x19, #29]
    6bb4:	ldrb	w3, [x19, #28]
    6bb8:	lsl	w2, w2, #8
    6bbc:	orr	w3, w2, w3, lsl #16
    6bc0:	ldrb	w2, [x19, #30]
    6bc4:	orr	w3, w3, w2
    6bc8:	ldrb	w2, [x19, #24]
    6bcc:	str	w3, [sp, #64]
    6bd0:	cbz	w2, 6c38 <PyNumber_FloorDivide@plt+0x2038>
    6bd4:	ldr	x3, [x19, #32]
    6bd8:	str	x3, [sp, #72]
    6bdc:	ldrb	w2, [x19, #31]
    6be0:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    6be4:	str	w2, [sp, #68]
    6be8:	add	x2, sp, #0x44
    6bec:	str	x2, [sp, #8]
    6bf0:	add	x2, sp, #0x48
    6bf4:	str	x2, [sp]
    6bf8:	add	x3, x3, #0xab8
    6bfc:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    6c00:	add	x7, sp, #0x40
    6c04:	add	x6, sp, #0x3c
    6c08:	add	x5, sp, #0x38
    6c0c:	add	x4, sp, #0x34
    6c10:	add	x3, x3, #0x220
    6c14:	add	x2, x2, #0x211
    6c18:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    6c1c:	cbnz	w0, 6c44 <PyNumber_FloorDivide@plt+0x2044>
    6c20:	mov	x19, #0x0                   	// #0
    6c24:	mov	x0, x19
    6c28:	ldp	x29, x30, [sp, #16]
    6c2c:	ldp	x19, x20, [sp, #32]
    6c30:	add	sp, sp, #0x50
    6c34:	ret
    6c38:	adrp	x3, 21000 <PyInit__datetime@@Base+0x14918>
    6c3c:	ldr	x3, [x3, #4024]
    6c40:	b	6bd8 <PyNumber_FloorDivide@plt+0x1fd8>
    6c44:	ldr	w0, [sp, #68]
    6c48:	cmp	w0, #0x1
    6c4c:	b.ls	6c6c <PyNumber_FloorDivide@plt+0x206c>  // b.plast
    6c50:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    6c54:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6c58:	add	x1, x1, #0xf2
    6c5c:	ldr	x0, [x0, #3968]
    6c60:	ldr	x0, [x0]
    6c64:	bl	4880 <PyErr_SetString@plt>
    6c68:	b	6c20 <PyNumber_FloorDivide@plt+0x2020>
    6c6c:	ldp	w1, w2, [sp, #52]
    6c70:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    6c74:	ldp	w3, w4, [sp, #60]
    6c78:	add	x0, x0, #0x110
    6c7c:	ldr	x5, [sp, #72]
    6c80:	bl	49a0 <Py_BuildValue@plt>
    6c84:	mov	x20, x0
    6c88:	cbz	x0, 6c20 <PyNumber_FloorDivide@plt+0x2020>
    6c8c:	mov	x1, x0
    6c90:	mov	x2, #0x0                   	// #0
    6c94:	ldr	x0, [x19, #8]
    6c98:	bl	6804 <PyNumber_FloorDivide@plt+0x1c04>
    6c9c:	mov	x19, x0
    6ca0:	cbz	x0, 6cac <PyNumber_FloorDivide@plt+0x20ac>
    6ca4:	ldr	w0, [sp, #68]
    6ca8:	strb	w0, [x19, #31]
    6cac:	mov	x0, x20
    6cb0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6cb4:	b	6c24 <PyNumber_FloorDivide@plt+0x2024>
    6cb8:	stp	x29, x30, [sp, #-96]!
    6cbc:	mov	x29, sp
    6cc0:	stp	x21, x22, [sp, #32]
    6cc4:	mov	x21, x0
    6cc8:	ldr	x0, [x2, #8]
    6ccc:	stp	x23, x24, [sp, #48]
    6cd0:	mov	x23, x1
    6cd4:	stp	x19, x20, [sp, #16]
    6cd8:	mov	x19, x2
    6cdc:	mov	x20, x3
    6ce0:	ldr	x1, [x0, #168]
    6ce4:	str	d8, [sp, #64]
    6ce8:	tbz	w1, #24, 6d38 <PyNumber_FloorDivide@plt+0x2138>
    6cec:	mov	x1, x3
    6cf0:	mov	x0, x2
    6cf4:	bl	4830 <PyNumber_Multiply@plt>
    6cf8:	mov	x19, x0
    6cfc:	cbz	x0, 6d1c <PyNumber_FloorDivide@plt+0x211c>
    6d00:	mov	x1, x0
    6d04:	mov	x0, x23
    6d08:	bl	47c0 <PyNumber_Add@plt>
    6d0c:	mov	x20, x0
    6d10:	mov	x0, x19
    6d14:	mov	x19, x20
    6d18:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6d1c:	mov	x0, x19
    6d20:	ldr	d8, [sp, #64]
    6d24:	ldp	x19, x20, [sp, #16]
    6d28:	ldp	x21, x22, [sp, #32]
    6d2c:	ldp	x23, x24, [sp, #48]
    6d30:	ldp	x29, x30, [sp], #96
    6d34:	ret
    6d38:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    6d3c:	mov	x22, x4
    6d40:	ldr	x1, [x1, #3944]
    6d44:	cmp	x0, x1
    6d48:	b.ne	6d90 <PyNumber_FloorDivide@plt+0x2190>  // b.any
    6d4c:	mov	x0, x19
    6d50:	bl	4a10 <PyFloat_AsDouble@plt>
    6d54:	fmov	d8, d0
    6d58:	fmov	d0, #-1.000000000000000000e+00
    6d5c:	fcmp	d8, d0
    6d60:	b.eq	6dc0 <PyNumber_FloorDivide@plt+0x21c0>  // b.none
    6d64:	fmov	d0, d8
    6d68:	add	x24, sp, #0x58
    6d6c:	mov	x0, x24
    6d70:	bl	4a80 <modf@plt>
    6d74:	fmov	d8, d0
    6d78:	ldr	d0, [sp, #88]
    6d7c:	bl	4790 <PyLong_FromDouble@plt>
    6d80:	mov	x19, x0
    6d84:	cbnz	x0, 6dcc <PyNumber_FloorDivide@plt+0x21cc>
    6d88:	mov	x19, #0x0                   	// #0
    6d8c:	b	6d1c <PyNumber_FloorDivide@plt+0x211c>
    6d90:	bl	4b30 <PyType_IsSubtype@plt>
    6d94:	cbnz	w0, 6d4c <PyNumber_FloorDivide@plt+0x214c>
    6d98:	ldr	x0, [x19, #8]
    6d9c:	mov	x2, x21
    6da0:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6da4:	add	x1, x1, #0x222
    6da8:	ldr	x3, [x0, #24]
    6dac:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    6db0:	ldr	x0, [x0, #3976]
    6db4:	ldr	x0, [x0]
    6db8:	bl	4b60 <PyErr_Format@plt>
    6dbc:	b	6d88 <PyNumber_FloorDivide@plt+0x2188>
    6dc0:	bl	49b0 <PyErr_Occurred@plt>
    6dc4:	cbnz	x0, 6d88 <PyNumber_FloorDivide@plt+0x2188>
    6dc8:	b	6d64 <PyNumber_FloorDivide@plt+0x2164>
    6dcc:	mov	x1, x20
    6dd0:	bl	4830 <PyNumber_Multiply@plt>
    6dd4:	mov	x21, x0
    6dd8:	mov	x0, x19
    6ddc:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6de0:	cbz	x21, 6d88 <PyNumber_FloorDivide@plt+0x2188>
    6de4:	mov	x1, x21
    6de8:	mov	x0, x23
    6dec:	bl	47c0 <PyNumber_Add@plt>
    6df0:	mov	x19, x0
    6df4:	mov	x0, x21
    6df8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6dfc:	cbz	x19, 6d88 <PyNumber_FloorDivide@plt+0x2188>
    6e00:	fcmp	d8, #0.0
    6e04:	b.eq	6d1c <PyNumber_FloorDivide@plt+0x211c>  // b.none
    6e08:	mov	x0, x20
    6e0c:	bl	4a90 <PyLong_AsDouble@plt>
    6e10:	fmul	d0, d8, d0
    6e14:	mov	x0, x24
    6e18:	bl	4a80 <modf@plt>
    6e1c:	fmov	d8, d0
    6e20:	ldr	d0, [sp, #88]
    6e24:	bl	4790 <PyLong_FromDouble@plt>
    6e28:	mov	x20, x0
    6e2c:	cbnz	x0, 6e3c <PyNumber_FloorDivide@plt+0x223c>
    6e30:	mov	x0, x19
    6e34:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6e38:	b	6d88 <PyNumber_FloorDivide@plt+0x2188>
    6e3c:	mov	x1, x0
    6e40:	mov	x0, x19
    6e44:	bl	47c0 <PyNumber_Add@plt>
    6e48:	mov	x21, x0
    6e4c:	mov	x0, x19
    6e50:	mov	x19, x21
    6e54:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6e58:	mov	x0, x20
    6e5c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6e60:	ldr	d1, [x22]
    6e64:	fadd	d0, d1, d8
    6e68:	str	d0, [x22]
    6e6c:	b	6d1c <PyNumber_FloorDivide@plt+0x211c>
    6e70:	stp	x29, x30, [sp, #-32]!
    6e74:	mov	x29, sp
    6e78:	str	x19, [sp, #16]
    6e7c:	bl	4b70 <PyNumber_Divmod@plt>
    6e80:	mov	x19, x0
    6e84:	cbz	x0, 6ebc <PyNumber_FloorDivide@plt+0x22bc>
    6e88:	ldr	x0, [x0, #8]
    6e8c:	ldr	x1, [x0, #168]
    6e90:	tbnz	w1, #26, 6ecc <PyNumber_FloorDivide@plt+0x22cc>
    6e94:	ldr	x2, [x0, #24]
    6e98:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6e9c:	add	x1, x1, #0x252
    6ea0:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    6ea4:	ldr	x0, [x0, #3976]
    6ea8:	ldr	x0, [x0]
    6eac:	bl	4b60 <PyErr_Format@plt>
    6eb0:	mov	x0, x19
    6eb4:	mov	x19, #0x0                   	// #0
    6eb8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6ebc:	mov	x0, x19
    6ec0:	ldr	x19, [sp, #16]
    6ec4:	ldp	x29, x30, [sp], #32
    6ec8:	ret
    6ecc:	ldr	x2, [x19, #16]
    6ed0:	cmp	x2, #0x2
    6ed4:	b.eq	6ebc <PyNumber_FloorDivide@plt+0x22bc>  // b.none
    6ed8:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    6edc:	add	x1, x1, #0x27c
    6ee0:	b	6ea0 <PyNumber_FloorDivide@plt+0x22a0>
    6ee4:	stp	x29, x30, [sp, #-64]!
    6ee8:	mov	x29, sp
    6eec:	stp	x21, x22, [sp, #32]
    6ef0:	adrp	x22, 23000 <PyInit__datetime@@Base+0x16918>
    6ef4:	add	x22, x22, #0xf78
    6ef8:	stp	x23, x24, [sp, #48]
    6efc:	mov	x24, x1
    6f00:	ldr	x1, [x22, #16]
    6f04:	stp	x19, x20, [sp, #16]
    6f08:	bl	6e70 <PyNumber_FloorDivide@plt+0x2270>
    6f0c:	mov	x20, x0
    6f10:	cbz	x0, 6f30 <PyNumber_FloorDivide@plt+0x2330>
    6f14:	ldr	x0, [x0, #32]
    6f18:	bl	4bb0 <_PyLong_AsInt@plt>
    6f1c:	mov	w21, w0
    6f20:	cmn	w0, #0x1
    6f24:	b.ne	6f3c <PyNumber_FloorDivide@plt+0x233c>  // b.any
    6f28:	bl	49b0 <PyErr_Occurred@plt>
    6f2c:	cbz	x0, 701c <PyNumber_FloorDivide@plt+0x241c>
    6f30:	mov	x21, #0x0                   	// #0
    6f34:	mov	x19, #0x0                   	// #0
    6f38:	b	6fe4 <PyNumber_FloorDivide@plt+0x23e4>
    6f3c:	mov	w0, #0x423f                	// #16959
    6f40:	movk	w0, #0xf, lsl #16
    6f44:	cmp	w21, w0
    6f48:	b.hi	701c <PyNumber_FloorDivide@plt+0x241c>  // b.pmore
    6f4c:	ldr	x19, [x20, #24]
    6f50:	ldr	x0, [x19]
    6f54:	add	x0, x0, #0x1
    6f58:	str	x0, [x19]
    6f5c:	mov	x0, x20
    6f60:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6f64:	ldr	x1, [x22, #24]
    6f68:	mov	x0, x19
    6f6c:	bl	6e70 <PyNumber_FloorDivide@plt+0x2270>
    6f70:	mov	x20, x0
    6f74:	cbz	x0, 7014 <PyNumber_FloorDivide@plt+0x2414>
    6f78:	mov	x0, x19
    6f7c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    6f80:	ldr	x0, [x20, #32]
    6f84:	bl	4bb0 <_PyLong_AsInt@plt>
    6f88:	mov	w22, w0
    6f8c:	cmn	w0, #0x1
    6f90:	b.eq	6f28 <PyNumber_FloorDivide@plt+0x2328>  // b.none
    6f94:	mov	w0, #0x517f                	// #20863
    6f98:	movk	w0, #0x1, lsl #16
    6f9c:	cmp	w22, w0
    6fa0:	b.hi	701c <PyNumber_FloorDivide@plt+0x241c>  // b.pmore
    6fa4:	ldr	x19, [x20, #24]
    6fa8:	ldr	x0, [x19]
    6fac:	add	x0, x0, #0x1
    6fb0:	str	x0, [x19]
    6fb4:	mov	x0, x19
    6fb8:	bl	4bb0 <_PyLong_AsInt@plt>
    6fbc:	mov	w23, w0
    6fc0:	cmn	w0, #0x1
    6fc4:	b.eq	700c <PyNumber_FloorDivide@plt+0x240c>  // b.none
    6fc8:	mov	w2, w21
    6fcc:	mov	x4, x24
    6fd0:	mov	w1, w22
    6fd4:	mov	w0, w23
    6fd8:	mov	w3, #0x0                   	// #0
    6fdc:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    6fe0:	mov	x21, x0
    6fe4:	mov	x0, x20
    6fe8:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    6fec:	mov	x0, x19
    6ff0:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    6ff4:	mov	x0, x21
    6ff8:	ldp	x19, x20, [sp, #16]
    6ffc:	ldp	x21, x22, [sp, #32]
    7000:	ldp	x23, x24, [sp, #48]
    7004:	ldp	x29, x30, [sp], #64
    7008:	ret
    700c:	bl	49b0 <PyErr_Occurred@plt>
    7010:	cbz	x0, 6fc8 <PyNumber_FloorDivide@plt+0x23c8>
    7014:	mov	x21, #0x0                   	// #0
    7018:	b	6fe4 <PyNumber_FloorDivide@plt+0x23e4>
    701c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    7020:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    7024:	add	x1, x1, #0x2a2
    7028:	ldr	x0, [x0, #3976]
    702c:	ldr	x0, [x0]
    7030:	bl	4880 <PyErr_SetString@plt>
    7034:	b	6f30 <PyNumber_FloorDivide@plt+0x2330>
    7038:	sub	sp, sp, #0xa0
    703c:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    7040:	add	x3, x3, #0xab8
    7044:	add	x7, sp, #0x78
    7048:	add	x6, sp, #0x70
    704c:	add	x5, sp, #0x68
    7050:	stp	x29, x30, [sp, #32]
    7054:	add	x29, sp, #0x20
    7058:	add	x4, sp, #0x60
    705c:	add	x3, x3, #0x258
    7060:	stp	x21, x22, [sp, #64]
    7064:	mov	x22, x0
    7068:	mov	x0, x1
    706c:	mov	x1, x2
    7070:	add	x2, sp, #0x90
    7074:	str	x2, [sp, #16]
    7078:	add	x2, sp, #0x88
    707c:	str	x2, [sp, #8]
    7080:	add	x2, sp, #0x80
    7084:	str	x2, [sp]
    7088:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    708c:	add	x2, x2, #0x2c9
    7090:	stp	x19, x20, [sp, #48]
    7094:	str	d8, [sp, #80]
    7098:	stp	xzr, xzr, [sp, #96]
    709c:	stp	xzr, xzr, [sp, #112]
    70a0:	stp	xzr, xzr, [sp, #128]
    70a4:	str	xzr, [sp, #144]
    70a8:	str	xzr, [sp, #152]
    70ac:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    70b0:	cbnz	w0, 70d4 <PyNumber_FloorDivide@plt+0x24d4>
    70b4:	mov	x20, #0x0                   	// #0
    70b8:	mov	x0, x20
    70bc:	ldr	d8, [sp, #80]
    70c0:	ldp	x29, x30, [sp, #32]
    70c4:	ldp	x19, x20, [sp, #48]
    70c8:	ldp	x21, x22, [sp, #64]
    70cc:	add	sp, sp, #0xa0
    70d0:	ret
    70d4:	mov	x0, #0x0                   	// #0
    70d8:	bl	4900 <PyLong_FromLong@plt>
    70dc:	mov	x19, x0
    70e0:	cbz	x0, 70b4 <PyNumber_FloorDivide@plt+0x24b4>
    70e4:	ldr	x2, [sp, #112]
    70e8:	cbz	x2, 7120 <PyNumber_FloorDivide@plt+0x2520>
    70ec:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    70f0:	add	x4, sp, #0x98
    70f4:	mov	x1, x19
    70f8:	ldr	x0, [x0, #4048]
    70fc:	ldr	x3, [x0]
    7100:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    7104:	add	x0, x0, #0x2da
    7108:	bl	6cb8 <PyNumber_FloorDivide@plt+0x20b8>
    710c:	mov	x20, x0
    7110:	mov	x0, x19
    7114:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7118:	cbz	x20, 70b4 <PyNumber_FloorDivide@plt+0x24b4>
    711c:	mov	x19, x20
    7120:	ldr	x2, [sp, #120]
    7124:	cbz	x2, 7158 <PyNumber_FloorDivide@plt+0x2558>
    7128:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    712c:	add	x4, sp, #0x98
    7130:	mov	x1, x19
    7134:	ldr	x3, [x0, #3992]
    7138:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    713c:	add	x0, x0, #0x2e7
    7140:	bl	6cb8 <PyNumber_FloorDivide@plt+0x20b8>
    7144:	mov	x20, x0
    7148:	mov	x0, x19
    714c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7150:	cbz	x20, 70b4 <PyNumber_FloorDivide@plt+0x24b4>
    7154:	mov	x19, x20
    7158:	ldr	x2, [sp, #104]
    715c:	cbz	x2, 7190 <PyNumber_FloorDivide@plt+0x2590>
    7160:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    7164:	add	x4, sp, #0x98
    7168:	mov	x1, x19
    716c:	ldr	x3, [x0, #3976]
    7170:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    7174:	add	x0, x0, #0x622
    7178:	bl	6cb8 <PyNumber_FloorDivide@plt+0x20b8>
    717c:	mov	x20, x0
    7180:	mov	x0, x19
    7184:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7188:	cbz	x20, 70b4 <PyNumber_FloorDivide@plt+0x24b4>
    718c:	mov	x19, x20
    7190:	ldr	x2, [sp, #128]
    7194:	cbz	x2, 71c8 <PyNumber_FloorDivide@plt+0x25c8>
    7198:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    719c:	add	x4, sp, #0x98
    71a0:	mov	x1, x19
    71a4:	ldr	x3, [x0, #4000]
    71a8:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    71ac:	add	x0, x0, #0x2f4
    71b0:	bl	6cb8 <PyNumber_FloorDivide@plt+0x20b8>
    71b4:	mov	x20, x0
    71b8:	mov	x0, x19
    71bc:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    71c0:	cbz	x20, 70b4 <PyNumber_FloorDivide@plt+0x24b4>
    71c4:	mov	x19, x20
    71c8:	ldr	x2, [sp, #136]
    71cc:	cbz	x2, 7200 <PyNumber_FloorDivide@plt+0x2600>
    71d0:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    71d4:	add	x4, sp, #0x98
    71d8:	mov	x1, x19
    71dc:	ldr	x3, [x0, #4008]
    71e0:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    71e4:	add	x0, x0, #0x2fc
    71e8:	bl	6cb8 <PyNumber_FloorDivide@plt+0x20b8>
    71ec:	mov	x20, x0
    71f0:	mov	x0, x19
    71f4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    71f8:	cbz	x20, 70b4 <PyNumber_FloorDivide@plt+0x24b4>
    71fc:	mov	x19, x20
    7200:	ldr	x2, [sp, #96]
    7204:	cbz	x2, 7238 <PyNumber_FloorDivide@plt+0x2638>
    7208:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    720c:	add	x4, sp, #0x98
    7210:	mov	x1, x19
    7214:	ldr	x3, [x0, #4016]
    7218:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    721c:	add	x0, x0, #0x302
    7220:	bl	6cb8 <PyNumber_FloorDivide@plt+0x20b8>
    7224:	mov	x20, x0
    7228:	mov	x0, x19
    722c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7230:	cbz	x20, 70b4 <PyNumber_FloorDivide@plt+0x24b4>
    7234:	mov	x19, x20
    7238:	ldr	x2, [sp, #144]
    723c:	cbz	x2, 7270 <PyNumber_FloorDivide@plt+0x2670>
    7240:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    7244:	add	x4, sp, #0x98
    7248:	mov	x1, x19
    724c:	ldr	x3, [x0, #4024]
    7250:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    7254:	add	x0, x0, #0x307
    7258:	bl	6cb8 <PyNumber_FloorDivide@plt+0x20b8>
    725c:	mov	x20, x0
    7260:	mov	x0, x19
    7264:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7268:	cbz	x20, 70b4 <PyNumber_FloorDivide@plt+0x24b4>
    726c:	mov	x19, x20
    7270:	ldr	d1, [sp, #152]
    7274:	fcmp	d1, #0.0
    7278:	b.eq	7330 <PyNumber_FloorDivide@plt+0x2730>  // b.none
    727c:	frinta	d0, d1
    7280:	fmov	d8, #5.000000000000000000e-01
    7284:	fabd	d1, d0, d1
    7288:	fcmp	d1, d8
    728c:	b.ne	72f8 <PyNumber_FloorDivide@plt+0x26f8>  // b.any
    7290:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    7294:	ldr	x0, [x0, #4048]
    7298:	ldr	x1, [x0]
    729c:	mov	x0, x19
    72a0:	bl	4930 <PyNumber_And@plt>
    72a4:	mov	x20, x0
    72a8:	cbnz	x0, 72b8 <PyNumber_FloorDivide@plt+0x26b8>
    72ac:	mov	x0, x19
    72b0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    72b4:	b	70b8 <PyNumber_FloorDivide@plt+0x24b8>
    72b8:	bl	4a20 <PyObject_IsTrue@plt>
    72bc:	mov	w21, w0
    72c0:	mov	x0, x20
    72c4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    72c8:	cmn	w21, #0x1
    72cc:	b.ne	72dc <PyNumber_FloorDivide@plt+0x26dc>  // b.any
    72d0:	mov	x0, x19
    72d4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    72d8:	b	70b4 <PyNumber_FloorDivide@plt+0x24b4>
    72dc:	scvtf	d1, w21
    72e0:	ldr	d0, [sp, #152]
    72e4:	fadd	d0, d1, d0
    72e8:	fmul	d0, d0, d8
    72ec:	frinta	d0, d0
    72f0:	fadd	d0, d0, d0
    72f4:	fsub	d0, d0, d1
    72f8:	fcvtzs	x0, d0
    72fc:	bl	4900 <PyLong_FromLong@plt>
    7300:	mov	x20, x0
    7304:	cbz	x0, 72ac <PyNumber_FloorDivide@plt+0x26ac>
    7308:	mov	x1, x0
    730c:	mov	x0, x19
    7310:	bl	47c0 <PyNumber_Add@plt>
    7314:	mov	x21, x0
    7318:	mov	x0, x20
    731c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7320:	mov	x0, x19
    7324:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7328:	cbz	x21, 70b4 <PyNumber_FloorDivide@plt+0x24b4>
    732c:	mov	x19, x21
    7330:	mov	x1, x22
    7334:	mov	x0, x19
    7338:	bl	6ee4 <PyNumber_FloorDivide@plt+0x22e4>
    733c:	mov	x20, x0
    7340:	b	72ac <PyNumber_FloorDivide@plt+0x26ac>
    7344:	stp	x29, x30, [sp, #-64]!
    7348:	mov	x29, sp
    734c:	stp	x21, x22, [sp, #32]
    7350:	mov	x22, x0
    7354:	ldrsw	x0, [x0, #24]
    7358:	stp	x19, x20, [sp, #16]
    735c:	str	x23, [sp, #48]
    7360:	bl	4900 <PyLong_FromLong@plt>
    7364:	mov	x19, x0
    7368:	cbz	x0, 7400 <PyNumber_FloorDivide@plt+0x2800>
    736c:	adrp	x23, 23000 <PyInit__datetime@@Base+0x16918>
    7370:	add	x23, x23, #0xf78
    7374:	ldr	x1, [x23, #24]
    7378:	bl	4830 <PyNumber_Multiply@plt>
    737c:	mov	x20, x0
    7380:	cbz	x0, 744c <PyNumber_FloorDivide@plt+0x284c>
    7384:	mov	x0, x19
    7388:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    738c:	ldrsw	x0, [x22, #28]
    7390:	bl	4900 <PyLong_FromLong@plt>
    7394:	mov	x19, x0
    7398:	cbz	x0, 744c <PyNumber_FloorDivide@plt+0x284c>
    739c:	mov	x1, x20
    73a0:	bl	47c0 <PyNumber_Add@plt>
    73a4:	mov	x21, x0
    73a8:	cbz	x0, 7410 <PyNumber_FloorDivide@plt+0x2810>
    73ac:	mov	x0, x19
    73b0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    73b4:	mov	x0, x20
    73b8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    73bc:	ldr	x1, [x23, #16]
    73c0:	mov	x0, x21
    73c4:	bl	4830 <PyNumber_Multiply@plt>
    73c8:	mov	x19, x0
    73cc:	cbz	x0, 7444 <PyNumber_FloorDivide@plt+0x2844>
    73d0:	mov	x0, x21
    73d4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    73d8:	ldrsw	x0, [x22, #32]
    73dc:	bl	4900 <PyLong_FromLong@plt>
    73e0:	mov	x20, x0
    73e4:	cbz	x0, 744c <PyNumber_FloorDivide@plt+0x284c>
    73e8:	mov	x1, x0
    73ec:	mov	x0, x19
    73f0:	bl	47c0 <PyNumber_Add@plt>
    73f4:	mov	x22, x0
    73f8:	mov	x21, #0x0                   	// #0
    73fc:	b	7414 <PyNumber_FloorDivide@plt+0x2814>
    7400:	mov	x22, #0x0                   	// #0
    7404:	mov	x21, #0x0                   	// #0
    7408:	mov	x20, #0x0                   	// #0
    740c:	b	7414 <PyNumber_FloorDivide@plt+0x2814>
    7410:	mov	x22, #0x0                   	// #0
    7414:	mov	x0, x19
    7418:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    741c:	mov	x0, x20
    7420:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    7424:	mov	x0, x21
    7428:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    742c:	mov	x0, x22
    7430:	ldp	x19, x20, [sp, #16]
    7434:	ldp	x21, x22, [sp, #32]
    7438:	ldr	x23, [sp, #48]
    743c:	ldp	x29, x30, [sp], #64
    7440:	ret
    7444:	mov	x22, #0x0                   	// #0
    7448:	b	7408 <PyNumber_FloorDivide@plt+0x2808>
    744c:	mov	x22, #0x0                   	// #0
    7450:	b	73f8 <PyNumber_FloorDivide@plt+0x27f8>
    7454:	stp	x29, x30, [sp, #-32]!
    7458:	mov	x29, sp
    745c:	stp	x19, x20, [sp, #16]
    7460:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    7464:	mov	x19, x0
    7468:	cbz	x0, 7488 <PyNumber_FloorDivide@plt+0x2888>
    746c:	adrp	x1, 23000 <PyInit__datetime@@Base+0x16918>
    7470:	ldr	x1, [x1, #3976]
    7474:	bl	4be0 <PyNumber_TrueDivide@plt>
    7478:	mov	x20, x0
    747c:	mov	x0, x19
    7480:	mov	x19, x20
    7484:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7488:	mov	x0, x19
    748c:	ldp	x19, x20, [sp, #16]
    7490:	ldp	x29, x30, [sp], #32
    7494:	ret
    7498:	stp	x29, x30, [sp, #-32]!
    749c:	mov	x29, sp
    74a0:	str	x19, [sp, #16]
    74a4:	bl	4910 <_PyLong_DivmodNear@plt>
    74a8:	mov	x19, x0
    74ac:	cbz	x0, 74c4 <PyNumber_FloorDivide@plt+0x28c4>
    74b0:	ldr	x19, [x0, #24]
    74b4:	ldr	x1, [x19]
    74b8:	add	x1, x1, #0x1
    74bc:	str	x1, [x19]
    74c0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    74c4:	mov	x0, x19
    74c8:	ldr	x19, [sp, #16]
    74cc:	ldp	x29, x30, [sp], #32
    74d0:	ret
    74d4:	stp	x29, x30, [sp, #-48]!
    74d8:	mov	x29, sp
    74dc:	stp	x19, x20, [sp, #16]
    74e0:	mov	x20, x1
    74e4:	stp	x21, x22, [sp, #32]
    74e8:	mov	w22, w2
    74ec:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    74f0:	mov	x19, x0
    74f4:	cbz	x0, 75f4 <PyNumber_FloorDivide@plt+0x29f4>
    74f8:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    74fc:	add	x1, x1, #0xab8
    7500:	add	x1, x1, #0x298
    7504:	mov	x0, x20
    7508:	mov	x2, #0x0                   	// #0
    750c:	bl	4a60 <_PyObject_CallMethodId@plt>
    7510:	mov	x21, x0
    7514:	cbz	x0, 754c <PyNumber_FloorDivide@plt+0x294c>
    7518:	ldr	x1, [x0, #8]
    751c:	ldr	x2, [x1, #168]
    7520:	tbnz	w2, #26, 7554 <PyNumber_FloorDivide@plt+0x2954>
    7524:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    7528:	ldr	x2, [x1, #24]
    752c:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    7530:	ldr	x0, [x0, #3976]
    7534:	add	x1, x1, #0x30d
    7538:	ldr	x0, [x0]
    753c:	bl	4b60 <PyErr_Format@plt>
    7540:	mov	x0, x21
    7544:	mov	x21, #0x0                   	// #0
    7548:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    754c:	mov	x20, #0x0                   	// #0
    7550:	b	75e0 <PyNumber_FloorDivide@plt+0x29e0>
    7554:	bl	4b50 <PyTuple_Size@plt>
    7558:	cmp	x0, #0x2
    755c:	b.eq	757c <PyNumber_FloorDivide@plt+0x297c>  // b.none
    7560:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    7564:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    7568:	add	x1, x1, #0x35a
    756c:	ldr	x0, [x0, #3968]
    7570:	ldr	x0, [x0]
    7574:	bl	4880 <PyErr_SetString@plt>
    7578:	b	7540 <PyNumber_FloorDivide@plt+0x2940>
    757c:	add	x0, x21, w22, sxtw #3
    7580:	ldr	x1, [x0, #24]
    7584:	mov	x0, x19
    7588:	bl	4830 <PyNumber_Multiply@plt>
    758c:	mov	x20, x0
    7590:	mov	x0, x19
    7594:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7598:	cbz	x20, 75dc <PyNumber_FloorDivide@plt+0x29dc>
    759c:	eor	w22, w22, #0x1
    75a0:	mov	x0, x20
    75a4:	add	x22, x21, w22, sxtw #3
    75a8:	ldr	x1, [x22, #24]
    75ac:	bl	7498 <PyNumber_FloorDivide@plt+0x2898>
    75b0:	mov	x19, x0
    75b4:	mov	x0, x20
    75b8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    75bc:	cbz	x19, 754c <PyNumber_FloorDivide@plt+0x294c>
    75c0:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    75c4:	add	x1, x1, #0x298
    75c8:	mov	x0, x19
    75cc:	bl	6ee4 <PyNumber_FloorDivide@plt+0x22e4>
    75d0:	mov	x20, x0
    75d4:	mov	x0, x19
    75d8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    75dc:	mov	x19, #0x0                   	// #0
    75e0:	mov	x0, x19
    75e4:	mov	x19, x20
    75e8:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    75ec:	mov	x0, x21
    75f0:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    75f4:	mov	x0, x19
    75f8:	ldp	x19, x20, [sp, #16]
    75fc:	ldp	x21, x22, [sp, #32]
    7600:	ldp	x29, x30, [sp], #48
    7604:	ret
    7608:	stp	x29, x30, [sp, #-48]!
    760c:	mov	x29, sp
    7610:	str	x21, [sp, #32]
    7614:	mov	x21, x0
    7618:	ldr	x0, [x0, #8]
    761c:	stp	x19, x20, [sp, #16]
    7620:	mov	x20, x1
    7624:	adrp	x19, 22000 <PyInit__datetime@@Base+0x15918>
    7628:	add	x1, x19, #0x298
    762c:	cmp	x0, x1
    7630:	b.ne	765c <PyNumber_FloorDivide@plt+0x2a5c>  // b.any
    7634:	ldr	x0, [x20, #8]
    7638:	add	x19, x19, #0x298
    763c:	cmp	x0, x19
    7640:	b.ne	768c <PyNumber_FloorDivide@plt+0x2a8c>  // b.any
    7644:	mov	x0, x21
    7648:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    764c:	mov	x21, x0
    7650:	cbnz	x0, 76c4 <PyNumber_FloorDivide@plt+0x2ac4>
    7654:	mov	x19, #0x0                   	// #0
    7658:	b	7678 <PyNumber_FloorDivide@plt+0x2a78>
    765c:	bl	4b30 <PyType_IsSubtype@plt>
    7660:	cbnz	w0, 7634 <PyNumber_FloorDivide@plt+0x2a34>
    7664:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    7668:	ldr	x19, [x19, #3960]
    766c:	ldr	x0, [x19]
    7670:	add	x0, x0, #0x1
    7674:	str	x0, [x19]
    7678:	mov	x0, x19
    767c:	ldp	x19, x20, [sp, #16]
    7680:	ldr	x21, [sp, #32]
    7684:	ldp	x29, x30, [sp], #48
    7688:	ret
    768c:	mov	x1, x19
    7690:	bl	4b30 <PyType_IsSubtype@plt>
    7694:	cbnz	w0, 7644 <PyNumber_FloorDivide@plt+0x2a44>
    7698:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    769c:	ldr	x0, [x20, #8]
    76a0:	ldr	x1, [x1, #3944]
    76a4:	cmp	x0, x1
    76a8:	b.ne	7718 <PyNumber_FloorDivide@plt+0x2b18>  // b.any
    76ac:	mov	x1, x20
    76b0:	mov	x0, x21
    76b4:	mov	w2, #0x1                   	// #1
    76b8:	bl	74d4 <PyNumber_FloorDivide@plt+0x28d4>
    76bc:	mov	x19, x0
    76c0:	b	7704 <PyNumber_FloorDivide@plt+0x2b04>
    76c4:	mov	x0, x20
    76c8:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    76cc:	mov	x19, x0
    76d0:	cbnz	x0, 76e0 <PyNumber_FloorDivide@plt+0x2ae0>
    76d4:	mov	x0, x21
    76d8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    76dc:	b	7678 <PyNumber_FloorDivide@plt+0x2a78>
    76e0:	mov	x1, x0
    76e4:	mov	x0, x21
    76e8:	bl	4be0 <PyNumber_TrueDivide@plt>
    76ec:	mov	x20, x0
    76f0:	mov	x0, x21
    76f4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    76f8:	mov	x0, x19
    76fc:	mov	x19, x20
    7700:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7704:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    7708:	ldr	x0, [x0, #3960]
    770c:	cmp	x19, x0
    7710:	b.ne	7678 <PyNumber_FloorDivide@plt+0x2a78>  // b.any
    7714:	b	7664 <PyNumber_FloorDivide@plt+0x2a64>
    7718:	bl	4b30 <PyType_IsSubtype@plt>
    771c:	cbnz	w0, 76ac <PyNumber_FloorDivide@plt+0x2aac>
    7720:	ldr	x0, [x20, #8]
    7724:	ldr	x0, [x0, #168]
    7728:	tbz	w0, #24, 7664 <PyNumber_FloorDivide@plt+0x2a64>
    772c:	mov	x0, x21
    7730:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    7734:	mov	x21, x0
    7738:	cbz	x0, 7654 <PyNumber_FloorDivide@plt+0x2a54>
    773c:	mov	x1, x20
    7740:	bl	7498 <PyNumber_FloorDivide@plt+0x2898>
    7744:	mov	x20, x0
    7748:	mov	x0, x21
    774c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7750:	cbz	x20, 7654 <PyNumber_FloorDivide@plt+0x2a54>
    7754:	mov	x1, x19
    7758:	mov	x0, x20
    775c:	bl	6ee4 <PyNumber_FloorDivide@plt+0x22e4>
    7760:	mov	x19, x0
    7764:	mov	x0, x20
    7768:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    776c:	b	7704 <PyNumber_FloorDivide@plt+0x2b04>
    7770:	stp	x29, x30, [sp, #-48]!
    7774:	mov	x29, sp
    7778:	stp	x19, x20, [sp, #16]
    777c:	mov	x20, x1
    7780:	str	x21, [sp, #32]
    7784:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    7788:	mov	x19, x0
    778c:	cbz	x0, 77ac <PyNumber_FloorDivide@plt+0x2bac>
    7790:	mov	x0, x20
    7794:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    7798:	mov	x20, x0
    779c:	cbnz	x0, 77c0 <PyNumber_FloorDivide@plt+0x2bc0>
    77a0:	mov	x0, x19
    77a4:	mov	x19, #0x0                   	// #0
    77a8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    77ac:	mov	x0, x19
    77b0:	ldp	x19, x20, [sp, #16]
    77b4:	ldr	x21, [sp, #32]
    77b8:	ldp	x29, x30, [sp], #48
    77bc:	ret
    77c0:	mov	x1, x0
    77c4:	mov	x0, x19
    77c8:	bl	4c00 <PyNumber_FloorDivide@plt>
    77cc:	mov	x21, x0
    77d0:	mov	x0, x19
    77d4:	mov	x19, x21
    77d8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    77dc:	mov	x0, x20
    77e0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    77e4:	b	77ac <PyNumber_FloorDivide@plt+0x2bac>
    77e8:	stp	x29, x30, [sp, #-32]!
    77ec:	mov	x29, sp
    77f0:	stp	x19, x20, [sp, #16]
    77f4:	mov	x19, x0
    77f8:	mov	x0, x1
    77fc:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    7800:	cbnz	x0, 7818 <PyNumber_FloorDivide@plt+0x2c18>
    7804:	mov	x20, #0x0                   	// #0
    7808:	mov	x0, x20
    780c:	ldp	x19, x20, [sp, #16]
    7810:	ldp	x29, x30, [sp], #32
    7814:	ret
    7818:	mov	x1, x0
    781c:	mov	x20, x0
    7820:	mov	x0, x19
    7824:	bl	4830 <PyNumber_Multiply@plt>
    7828:	mov	x19, x0
    782c:	mov	x0, x20
    7830:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7834:	cbz	x19, 7804 <PyNumber_FloorDivide@plt+0x2c04>
    7838:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    783c:	add	x1, x1, #0x298
    7840:	mov	x0, x19
    7844:	bl	6ee4 <PyNumber_FloorDivide@plt+0x22e4>
    7848:	mov	x20, x0
    784c:	mov	x0, x19
    7850:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7854:	b	7808 <PyNumber_FloorDivide@plt+0x2c08>
    7858:	stp	x29, x30, [sp, #-48]!
    785c:	mov	x29, sp
    7860:	stp	x19, x20, [sp, #16]
    7864:	mov	x19, x0
    7868:	mov	x20, x1
    786c:	ldr	x0, [x0, #8]
    7870:	str	x21, [sp, #32]
    7874:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    7878:	add	x1, x1, #0x298
    787c:	cmp	x0, x1
    7880:	adrp	x21, 21000 <PyInit__datetime@@Base+0x14918>
    7884:	b.ne	78b0 <PyNumber_FloorDivide@plt+0x2cb0>  // b.any
    7888:	ldr	x0, [x20, #8]
    788c:	ldr	x1, [x0, #168]
    7890:	tbz	w1, #24, 78d0 <PyNumber_FloorDivide@plt+0x2cd0>
    7894:	mov	x1, x19
    7898:	mov	x0, x20
    789c:	bl	77e8 <PyNumber_FloorDivide@plt+0x2be8>
    78a0:	ldr	x1, [x21, #3960]
    78a4:	cmp	x0, x1
    78a8:	b.ne	790c <PyNumber_FloorDivide@plt+0x2d0c>  // b.any
    78ac:	b	78fc <PyNumber_FloorDivide@plt+0x2cfc>
    78b0:	bl	4b30 <PyType_IsSubtype@plt>
    78b4:	cbnz	w0, 7888 <PyNumber_FloorDivide@plt+0x2c88>
    78b8:	ldr	x0, [x19, #8]
    78bc:	ldr	x1, [x0, #168]
    78c0:	tbz	w1, #24, 791c <PyNumber_FloorDivide@plt+0x2d1c>
    78c4:	mov	x1, x20
    78c8:	mov	x0, x19
    78cc:	b	789c <PyNumber_FloorDivide@plt+0x2c9c>
    78d0:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    78d4:	ldr	x1, [x1, #3944]
    78d8:	cmp	x0, x1
    78dc:	b.ne	78f4 <PyNumber_FloorDivide@plt+0x2cf4>  // b.any
    78e0:	mov	x1, x20
    78e4:	mov	x0, x19
    78e8:	mov	w2, #0x0                   	// #0
    78ec:	bl	74d4 <PyNumber_FloorDivide@plt+0x28d4>
    78f0:	b	78a0 <PyNumber_FloorDivide@plt+0x2ca0>
    78f4:	bl	4b30 <PyType_IsSubtype@plt>
    78f8:	cbnz	w0, 78e0 <PyNumber_FloorDivide@plt+0x2ce0>
    78fc:	ldr	x0, [x21, #3960]
    7900:	ldr	x1, [x0]
    7904:	add	x1, x1, #0x1
    7908:	str	x1, [x0]
    790c:	ldp	x19, x20, [sp, #16]
    7910:	ldr	x21, [sp, #32]
    7914:	ldp	x29, x30, [sp], #48
    7918:	ret
    791c:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    7920:	ldr	x1, [x1, #3944]
    7924:	cmp	x0, x1
    7928:	b.ne	793c <PyNumber_FloorDivide@plt+0x2d3c>  // b.any
    792c:	mov	x1, x19
    7930:	mov	x0, x20
    7934:	mov	w2, #0x0                   	// #0
    7938:	b	78ec <PyNumber_FloorDivide@plt+0x2cec>
    793c:	bl	4b30 <PyType_IsSubtype@plt>
    7940:	cbnz	w0, 792c <PyNumber_FloorDivide@plt+0x2d2c>
    7944:	b	78fc <PyNumber_FloorDivide@plt+0x2cfc>
    7948:	stp	x29, x30, [sp, #-48]!
    794c:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    7950:	mov	x29, sp
    7954:	stp	x19, x20, [sp, #16]
    7958:	add	x20, x2, #0xf77
    795c:	str	x21, [sp, #32]
    7960:	mov	x21, x0
    7964:	mov	x0, x20
    7968:	bl	4ad0 <PyUnicode_FromString@plt>
    796c:	cbnz	x0, 7988 <PyNumber_FloorDivide@plt+0x2d88>
    7970:	mov	x20, #0x0                   	// #0
    7974:	mov	x0, x20
    7978:	ldp	x19, x20, [sp, #16]
    797c:	ldr	x21, [sp, #32]
    7980:	ldp	x29, x30, [sp], #48
    7984:	ret
    7988:	ldr	w1, [x21, #24]
    798c:	mov	x19, x0
    7990:	cbz	w1, 7a6c <PyNumber_FloorDivide@plt+0x2e6c>
    7994:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    7998:	add	x0, x0, #0x386
    799c:	bl	4700 <PyUnicode_FromFormat@plt>
    79a0:	mov	x20, x0
    79a4:	mov	x0, x19
    79a8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    79ac:	cbz	x20, 7970 <PyNumber_FloorDivide@plt+0x2d70>
    79b0:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    79b4:	mov	x19, x20
    79b8:	add	x2, x2, #0x383
    79bc:	ldr	w3, [x21, #28]
    79c0:	cbz	w3, 79f0 <PyNumber_FloorDivide@plt+0x2df0>
    79c4:	mov	x1, x19
    79c8:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    79cc:	add	x0, x0, #0x38e
    79d0:	bl	4700 <PyUnicode_FromFormat@plt>
    79d4:	mov	x20, x0
    79d8:	mov	x0, x19
    79dc:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    79e0:	cbz	x20, 7970 <PyNumber_FloorDivide@plt+0x2d70>
    79e4:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    79e8:	mov	x19, x20
    79ec:	add	x2, x2, #0x383
    79f0:	ldr	w3, [x21, #32]
    79f4:	cbz	w3, 7a1c <PyNumber_FloorDivide@plt+0x2e1c>
    79f8:	mov	x1, x19
    79fc:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    7a00:	add	x0, x0, #0x39d
    7a04:	bl	4700 <PyUnicode_FromFormat@plt>
    7a08:	mov	x20, x0
    7a0c:	mov	x0, x19
    7a10:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7a14:	cbz	x20, 7970 <PyNumber_FloorDivide@plt+0x2d70>
    7a18:	mov	x19, x20
    7a1c:	ldr	x0, [x19, #16]
    7a20:	cbnz	x0, 7a44 <PyNumber_FloorDivide@plt+0x2e44>
    7a24:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    7a28:	add	x0, x0, #0x3b1
    7a2c:	bl	4ad0 <PyUnicode_FromString@plt>
    7a30:	mov	x20, x0
    7a34:	mov	x0, x19
    7a38:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7a3c:	cbz	x20, 7970 <PyNumber_FloorDivide@plt+0x2d70>
    7a40:	mov	x19, x20
    7a44:	ldr	x0, [x21, #8]
    7a48:	mov	x2, x19
    7a4c:	ldr	x1, [x0, #24]
    7a50:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    7a54:	add	x0, x0, #0x3b3
    7a58:	bl	4700 <PyUnicode_FromFormat@plt>
    7a5c:	mov	x20, x0
    7a60:	mov	x0, x19
    7a64:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7a68:	b	7974 <PyNumber_FloorDivide@plt+0x2d74>
    7a6c:	mov	x2, x20
    7a70:	b	79bc <PyNumber_FloorDivide@plt+0x2dbc>
    7a74:	sub	sp, sp, #0xa0
    7a78:	stp	x29, x30, [sp, #48]
    7a7c:	add	x29, sp, #0x30
    7a80:	stp	x21, x22, [sp, #80]
    7a84:	adrp	x22, 21000 <PyInit__datetime@@Base+0x14918>
    7a88:	mov	x21, x1
    7a8c:	stp	x19, x20, [sp, #64]
    7a90:	mov	x20, x0
    7a94:	ldr	x0, [x22, #4024]
    7a98:	str	x0, [sp, #152]
    7a9c:	ldr	x0, [x1, #16]
    7aa0:	str	x23, [sp, #96]
    7aa4:	stp	wzr, wzr, [sp, #132]
    7aa8:	mov	x23, x2
    7aac:	stp	wzr, wzr, [sp, #140]
    7ab0:	sub	x1, x0, #0x1
    7ab4:	str	wzr, [sp, #148]
    7ab8:	cmp	x1, #0x1
    7abc:	b.hi	7c6c <PyNumber_FloorDivide@plt+0x306c>  // b.pmore
    7ac0:	cmp	x0, #0x2
    7ac4:	ldr	x19, [x21, #24]
    7ac8:	b.ne	7ad4 <PyNumber_FloorDivide@plt+0x2ed4>  // b.any
    7acc:	ldr	x0, [x21, #32]
    7ad0:	str	x0, [sp, #152]
    7ad4:	ldr	x0, [x19, #8]
    7ad8:	ldr	x0, [x0, #168]
    7adc:	tbz	w0, #27, 7b18 <PyNumber_FloorDivide@plt+0x2f18>
    7ae0:	ldr	x0, [x19, #16]
    7ae4:	cmp	x0, #0xa
    7ae8:	b.ne	7c64 <PyNumber_FloorDivide@plt+0x3064>  // b.any
    7aec:	ldrb	w0, [x19, #34]
    7af0:	and	w0, w0, #0x7f
    7af4:	sub	w0, w0, #0x1
    7af8:	cmp	w0, #0xb
    7afc:	b.hi	7c64 <PyNumber_FloorDivide@plt+0x3064>  // b.pmore
    7b00:	ldr	x2, [sp, #152]
    7b04:	mov	x1, x19
    7b08:	mov	x0, x20
    7b0c:	bl	5b04 <PyNumber_FloorDivide@plt+0xf04>
    7b10:	mov	x19, x0
    7b14:	b	7bc0 <PyNumber_FloorDivide@plt+0x2fc0>
    7b18:	tbz	w0, #28, 7c64 <PyNumber_FloorDivide@plt+0x3064>
    7b1c:	ldrsb	w0, [x19, #32]
    7b20:	tbz	w0, #31, 7bb0 <PyNumber_FloorDivide@plt+0x2fb0>
    7b24:	ldr	x0, [x19, #16]
    7b28:	cmp	x0, #0xa
    7b2c:	b.ne	7c64 <PyNumber_FloorDivide@plt+0x3064>  // b.any
    7b30:	ldrb	w1, [x19, #32]
    7b34:	and	w2, w1, #0x1c
    7b38:	and	w0, w1, #0x20
    7b3c:	cmp	w2, #0x4
    7b40:	b.ne	7be8 <PyNumber_FloorDivide@plt+0x2fe8>  // b.any
    7b44:	cbz	w0, 7bdc <PyNumber_FloorDivide@plt+0x2fdc>
    7b48:	add	x0, x19, #0x32
    7b4c:	add	x3, x19, #0x4a
    7b50:	tst	x1, #0x40
    7b54:	csel	x0, x3, x0, eq  // eq = none
    7b58:	ldrb	w0, [x0]
    7b5c:	and	w0, w0, #0x7f
    7b60:	sub	w0, w0, #0x1
    7b64:	cmp	w0, #0xb
    7b68:	cset	w0, ls  // ls = plast
    7b6c:	cbz	w0, 7c64 <PyNumber_FloorDivide@plt+0x3064>
    7b70:	mov	x0, x19
    7b74:	bl	4960 <PyUnicode_AsLatin1String@plt>
    7b78:	mov	x19, x0
    7b7c:	cbnz	x0, 7c40 <PyNumber_FloorDivide@plt+0x3040>
    7b80:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    7b84:	ldr	x0, [x0, #4032]
    7b88:	ldr	x0, [x0]
    7b8c:	bl	48a0 <PyErr_ExceptionMatches@plt>
    7b90:	cbz	w0, 7bbc <PyNumber_FloorDivide@plt+0x2fbc>
    7b94:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    7b98:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    7b9c:	add	x1, x1, #0x3ba
    7ba0:	ldr	x0, [x0, #3968]
    7ba4:	ldr	x0, [x0]
    7ba8:	bl	4880 <PyErr_SetString@plt>
    7bac:	b	7bc0 <PyNumber_FloorDivide@plt+0x2fc0>
    7bb0:	mov	x0, x19
    7bb4:	bl	4710 <_PyUnicode_Ready@plt>
    7bb8:	cbz	w0, 7b24 <PyNumber_FloorDivide@plt+0x2f24>
    7bbc:	mov	x19, #0x0                   	// #0
    7bc0:	mov	x0, x19
    7bc4:	ldp	x29, x30, [sp, #48]
    7bc8:	ldp	x19, x20, [sp, #64]
    7bcc:	ldp	x21, x22, [sp, #80]
    7bd0:	ldr	x23, [sp, #96]
    7bd4:	add	sp, sp, #0xa0
    7bd8:	ret
    7bdc:	ldr	x0, [x19, #72]
    7be0:	add	x0, x0, #0x2
    7be4:	b	7b58 <PyNumber_FloorDivide@plt+0x2f58>
    7be8:	cmp	w2, #0x8
    7bec:	b.ne	7c18 <PyNumber_FloorDivide@plt+0x3018>  // b.any
    7bf0:	cbz	w0, 7c0c <PyNumber_FloorDivide@plt+0x300c>
    7bf4:	add	x3, x19, #0x34
    7bf8:	add	x0, x19, #0x4c
    7bfc:	tst	x1, #0x40
    7c00:	csel	x3, x0, x3, eq  // eq = none
    7c04:	ldrh	w0, [x3]
    7c08:	b	7b5c <PyNumber_FloorDivide@plt+0x2f5c>
    7c0c:	ldr	x3, [x19, #72]
    7c10:	add	x3, x3, #0x4
    7c14:	b	7c04 <PyNumber_FloorDivide@plt+0x3004>
    7c18:	cbz	w0, 7c34 <PyNumber_FloorDivide@plt+0x3034>
    7c1c:	add	x3, x19, #0x38
    7c20:	add	x4, x19, #0x50
    7c24:	tst	x1, #0x40
    7c28:	csel	x3, x4, x3, eq  // eq = none
    7c2c:	ldr	w0, [x3]
    7c30:	b	7b5c <PyNumber_FloorDivide@plt+0x2f5c>
    7c34:	ldr	x3, [x19, #72]
    7c38:	add	x3, x3, #0x8
    7c3c:	b	7c2c <PyNumber_FloorDivide@plt+0x302c>
    7c40:	ldr	x2, [sp, #152]
    7c44:	mov	x1, x0
    7c48:	mov	x0, x20
    7c4c:	bl	5b04 <PyNumber_FloorDivide@plt+0xf04>
    7c50:	mov	x20, x0
    7c54:	mov	x0, x19
    7c58:	mov	x19, x20
    7c5c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7c60:	b	7bc0 <PyNumber_FloorDivide@plt+0x2fc0>
    7c64:	ldr	x22, [x22, #4024]
    7c68:	str	x22, [sp, #152]
    7c6c:	add	x0, sp, #0x94
    7c70:	str	x0, [sp, #32]
    7c74:	add	x0, sp, #0x98
    7c78:	str	x0, [sp, #24]
    7c7c:	add	x0, sp, #0x90
    7c80:	str	x0, [sp, #16]
    7c84:	add	x0, sp, #0x8c
    7c88:	str	x0, [sp, #8]
    7c8c:	add	x0, sp, #0x88
    7c90:	str	x0, [sp]
    7c94:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    7c98:	add	x3, x3, #0xab8
    7c9c:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    7ca0:	add	x7, sp, #0x84
    7ca4:	add	x6, sp, #0x80
    7ca8:	add	x5, sp, #0x7c
    7cac:	add	x4, sp, #0x78
    7cb0:	add	x3, x3, #0x2b0
    7cb4:	add	x2, x2, #0x42d
    7cb8:	mov	x1, x23
    7cbc:	mov	x0, x21
    7cc0:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    7cc4:	cbz	w0, 7bbc <PyNumber_FloorDivide@plt+0x2fbc>
    7cc8:	ldr	w0, [sp, #148]
    7ccc:	ldp	w1, w2, [sp, #124]
    7cd0:	str	w0, [sp]
    7cd4:	ldp	w3, w4, [sp, #132]
    7cd8:	str	x20, [sp, #8]
    7cdc:	ldp	w5, w6, [sp, #140]
    7ce0:	ldr	w0, [sp, #120]
    7ce4:	ldr	x7, [sp, #152]
    7ce8:	bl	61c4 <PyNumber_FloorDivide@plt+0x15c4>
    7cec:	b	7b10 <PyNumber_FloorDivide@plt+0x2f10>
    7cf0:	stp	x29, x30, [sp, #-48]!
    7cf4:	mov	x29, sp
    7cf8:	stp	x19, x20, [sp, #16]
    7cfc:	mov	x20, x0
    7d00:	add	x0, x0, #0x19
    7d04:	str	x21, [sp, #32]
    7d08:	mov	w21, w1
    7d0c:	mov	x1, #0xa                   	// #10
    7d10:	bl	4800 <PyBytes_FromStringAndSize@plt>
    7d14:	mov	x19, x0
    7d18:	cbz	x0, 7d70 <PyNumber_FloorDivide@plt+0x3170>
    7d1c:	cmp	w21, #0x3
    7d20:	b.le	7d38 <PyNumber_FloorDivide@plt+0x3138>
    7d24:	ldrb	w0, [x20, #35]
    7d28:	cbz	w0, 7d38 <PyNumber_FloorDivide@plt+0x3138>
    7d2c:	ldrb	w0, [x19, #34]
    7d30:	orr	w0, w0, #0xffffff80
    7d34:	strb	w0, [x19, #34]
    7d38:	ldrb	w0, [x20, #24]
    7d3c:	mov	x1, x19
    7d40:	cbz	w0, 7d58 <PyNumber_FloorDivide@plt+0x3158>
    7d44:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    7d48:	ldr	x2, [x20, #40]
    7d4c:	ldr	x0, [x0, #4024]
    7d50:	cmp	x2, x0
    7d54:	b.ne	7d84 <PyNumber_FloorDivide@plt+0x3184>  // b.any
    7d58:	mov	x0, #0x1                   	// #1
    7d5c:	bl	4bd0 <PyTuple_Pack@plt>
    7d60:	mov	x20, x0
    7d64:	mov	x0, x19
    7d68:	mov	x19, x20
    7d6c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7d70:	mov	x0, x19
    7d74:	ldp	x19, x20, [sp, #16]
    7d78:	ldr	x21, [sp, #32]
    7d7c:	ldp	x29, x30, [sp], #48
    7d80:	ret
    7d84:	mov	x0, #0x2                   	// #2
    7d88:	bl	4bd0 <PyTuple_Pack@plt>
    7d8c:	b	7d60 <PyNumber_FloorDivide@plt+0x3160>
    7d90:	stp	x29, x30, [sp, #-32]!
    7d94:	mov	w1, #0x2                   	// #2
    7d98:	mov	x29, sp
    7d9c:	str	x19, [sp, #16]
    7da0:	ldr	x19, [x0, #8]
    7da4:	bl	7cf0 <PyNumber_FloorDivide@plt+0x30f0>
    7da8:	mov	x2, x0
    7dac:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    7db0:	mov	x1, x19
    7db4:	add	x0, x0, #0xf09
    7db8:	ldr	x19, [sp, #16]
    7dbc:	ldp	x29, x30, [sp], #32
    7dc0:	b	49a0 <Py_BuildValue@plt>
    7dc4:	stp	x29, x30, [sp, #-48]!
    7dc8:	mov	x29, sp
    7dcc:	add	x2, sp, #0x2c
    7dd0:	stp	x19, x20, [sp, #16]
    7dd4:	mov	x19, x0
    7dd8:	mov	x0, x1
    7ddc:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    7de0:	add	x1, x1, #0x201
    7de4:	bl	4a30 <PyArg_ParseTuple@plt>
    7de8:	cbz	w0, 7e1c <PyNumber_FloorDivide@plt+0x321c>
    7dec:	ldr	w1, [sp, #44]
    7df0:	mov	x0, x19
    7df4:	ldr	x20, [x19, #8]
    7df8:	bl	7cf0 <PyNumber_FloorDivide@plt+0x30f0>
    7dfc:	mov	x2, x0
    7e00:	mov	x1, x20
    7e04:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    7e08:	add	x0, x0, #0xf09
    7e0c:	bl	49a0 <Py_BuildValue@plt>
    7e10:	ldp	x19, x20, [sp, #16]
    7e14:	ldp	x29, x30, [sp], #48
    7e18:	ret
    7e1c:	mov	x0, #0x0                   	// #0
    7e20:	b	7e10 <PyNumber_FloorDivide@plt+0x3210>
    7e24:	stp	x29, x30, [sp, #-112]!
    7e28:	mov	x29, sp
    7e2c:	add	x1, sp, #0x38
    7e30:	stp	x19, x20, [sp, #16]
    7e34:	str	x21, [sp, #32]
    7e38:	bl	4bc0 <_PyTime_localtime@plt>
    7e3c:	cbz	w0, 7e58 <PyNumber_FloorDivide@plt+0x3258>
    7e40:	mov	x19, #0x0                   	// #0
    7e44:	mov	x0, x19
    7e48:	ldp	x19, x20, [sp, #16]
    7e4c:	ldr	x21, [sp, #32]
    7e50:	ldp	x29, x30, [sp], #112
    7e54:	ret
    7e58:	ldr	w1, [sp, #96]
    7e5c:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    7e60:	mov	w3, #0x1                   	// #1
    7e64:	add	x4, x4, #0x298
    7e68:	mov	w2, #0x0                   	// #0
    7e6c:	ldr	x19, [sp, #104]
    7e70:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    7e74:	mov	x20, x0
    7e78:	cbz	x0, 7e40 <PyNumber_FloorDivide@plt+0x3240>
    7e7c:	cbz	x19, 7e98 <PyNumber_FloorDivide@plt+0x3298>
    7e80:	mov	x0, x19
    7e84:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    7e88:	add	x1, x1, #0x439
    7e8c:	bl	4920 <PyUnicode_DecodeLocale@plt>
    7e90:	mov	x19, x0
    7e94:	cbz	x0, 7eb4 <PyNumber_FloorDivide@plt+0x32b4>
    7e98:	mov	x1, x19
    7e9c:	mov	x0, x20
    7ea0:	bl	5bec <PyNumber_FloorDivide@plt+0xfec>
    7ea4:	mov	x21, x0
    7ea8:	mov	x0, x19
    7eac:	mov	x19, x21
    7eb0:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    7eb4:	mov	x0, x20
    7eb8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    7ebc:	b	7e44 <PyNumber_FloorDivide@plt+0x3244>
    7ec0:	sub	sp, sp, #0x80
    7ec4:	stp	x29, x30, [sp, #48]
    7ec8:	add	x29, sp, #0x30
    7ecc:	stp	x19, x20, [sp, #64]
    7ed0:	mov	x19, x0
    7ed4:	mov	x0, x1
    7ed8:	mov	x1, x2
    7edc:	ldurh	w3, [x19, #25]
    7ee0:	ldrb	w2, [x19, #27]
    7ee4:	rev16	w3, w3
    7ee8:	and	w3, w3, #0xffff
    7eec:	stp	w3, w2, [sp, #88]
    7ef0:	ldrb	w2, [x19, #28]
    7ef4:	str	w2, [sp, #96]
    7ef8:	ldrb	w2, [x19, #29]
    7efc:	str	w2, [sp, #100]
    7f00:	ldrb	w2, [x19, #30]
    7f04:	str	w2, [sp, #104]
    7f08:	ldrb	w2, [x19, #31]
    7f0c:	str	w2, [sp, #108]
    7f10:	ldrb	w2, [x19, #33]
    7f14:	ldrb	w3, [x19, #32]
    7f18:	lsl	w2, w2, #8
    7f1c:	orr	w3, w2, w3, lsl #16
    7f20:	ldrb	w2, [x19, #34]
    7f24:	orr	w3, w3, w2
    7f28:	ldrb	w2, [x19, #24]
    7f2c:	str	w3, [sp, #112]
    7f30:	cbz	w2, 7fb0 <PyNumber_FloorDivide@plt+0x33b0>
    7f34:	ldr	x3, [x19, #40]
    7f38:	str	x3, [sp, #120]
    7f3c:	ldrb	w2, [x19, #35]
    7f40:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    7f44:	str	w2, [sp, #116]
    7f48:	add	x2, sp, #0x74
    7f4c:	str	x2, [sp, #32]
    7f50:	add	x2, sp, #0x78
    7f54:	str	x2, [sp, #24]
    7f58:	add	x2, sp, #0x70
    7f5c:	str	x2, [sp, #16]
    7f60:	add	x2, sp, #0x6c
    7f64:	str	x2, [sp, #8]
    7f68:	add	x2, sp, #0x68
    7f6c:	str	x2, [sp]
    7f70:	add	x3, x3, #0xab8
    7f74:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    7f78:	add	x7, sp, #0x64
    7f7c:	add	x6, sp, #0x60
    7f80:	add	x5, sp, #0x5c
    7f84:	add	x4, sp, #0x58
    7f88:	add	x3, x3, #0x2b0
    7f8c:	add	x2, x2, #0x449
    7f90:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    7f94:	cbnz	w0, 7fbc <PyNumber_FloorDivide@plt+0x33bc>
    7f98:	mov	x19, #0x0                   	// #0
    7f9c:	mov	x0, x19
    7fa0:	ldp	x29, x30, [sp, #48]
    7fa4:	ldp	x19, x20, [sp, #64]
    7fa8:	add	sp, sp, #0x80
    7fac:	ret
    7fb0:	adrp	x3, 21000 <PyInit__datetime@@Base+0x14918>
    7fb4:	ldr	x3, [x3, #4024]
    7fb8:	b	7f38 <PyNumber_FloorDivide@plt+0x3338>
    7fbc:	ldr	w0, [sp, #116]
    7fc0:	cmp	w0, #0x1
    7fc4:	b.ls	7fe4 <PyNumber_FloorDivide@plt+0x33e4>  // b.plast
    7fc8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    7fcc:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    7fd0:	add	x1, x1, #0xf2
    7fd4:	ldr	x0, [x0, #3968]
    7fd8:	ldr	x0, [x0]
    7fdc:	bl	4880 <PyErr_SetString@plt>
    7fe0:	b	7f98 <PyNumber_FloorDivide@plt+0x3398>
    7fe4:	ldp	w1, w2, [sp, #88]
    7fe8:	ldp	w3, w4, [sp, #96]
    7fec:	ldp	w5, w6, [sp, #104]
    7ff0:	ldr	w7, [sp, #112]
    7ff4:	ldr	x0, [sp, #120]
    7ff8:	str	x0, [sp]
    7ffc:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    8000:	add	x0, x0, #0x10d
    8004:	bl	49a0 <Py_BuildValue@plt>
    8008:	mov	x20, x0
    800c:	cbz	x0, 7f98 <PyNumber_FloorDivide@plt+0x3398>
    8010:	mov	x1, x0
    8014:	mov	x2, #0x0                   	// #0
    8018:	ldr	x0, [x19, #8]
    801c:	bl	7a74 <PyNumber_FloorDivide@plt+0x2e74>
    8020:	mov	x19, x0
    8024:	cbz	x0, 8030 <PyNumber_FloorDivide@plt+0x3430>
    8028:	ldr	w0, [sp, #116]
    802c:	strb	w0, [x19, #35]
    8030:	mov	x0, x20
    8034:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8038:	b	7f9c <PyNumber_FloorDivide@plt+0x339c>
    803c:	stp	x29, x30, [sp, #-48]!
    8040:	mov	x29, sp
    8044:	stp	x19, x20, [sp, #16]
    8048:	stp	x21, x22, [sp, #32]
    804c:	mov	x22, x0
    8050:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    8054:	add	x0, x0, #0x6f9
    8058:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    805c:	cbnz	x0, 8078 <PyNumber_FloorDivide@plt+0x3478>
    8060:	mov	x20, #0x0                   	// #0
    8064:	mov	x0, x20
    8068:	ldp	x19, x20, [sp, #16]
    806c:	ldp	x21, x22, [sp, #32]
    8070:	ldp	x29, x30, [sp], #48
    8074:	ret
    8078:	adrp	x20, 22000 <PyInit__datetime@@Base+0x15918>
    807c:	add	x20, x20, #0xab8
    8080:	add	x1, x20, #0x300
    8084:	mov	x2, #0x0                   	// #0
    8088:	mov	x21, x0
    808c:	bl	4a60 <_PyObject_CallMethodId@plt>
    8090:	mov	x19, x0
    8094:	mov	x0, x21
    8098:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    809c:	cbz	x19, 8060 <PyNumber_FloorDivide@plt+0x3460>
    80a0:	add	x1, x20, #0x318
    80a4:	mov	x2, x19
    80a8:	mov	x3, #0x0                   	// #0
    80ac:	mov	x0, x22
    80b0:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    80b4:	mov	x20, x0
    80b8:	mov	x0, x19
    80bc:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    80c0:	b	8064 <PyNumber_FloorDivide@plt+0x3464>
    80c4:	mov	x1, x0
    80c8:	ldr	x0, [x0, #24]
    80cc:	cbz	x0, 80e0 <PyNumber_FloorDivide@plt+0x34e0>
    80d0:	ldr	x1, [x0]
    80d4:	add	x1, x1, #0x1
    80d8:	str	x1, [x0]
    80dc:	ret
    80e0:	stp	x29, x30, [sp, #-48]!
    80e4:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    80e8:	mov	x29, sp
    80ec:	ldr	x0, [x0, #3960]
    80f0:	stp	x19, x20, [sp, #16]
    80f4:	cmp	x1, x0
    80f8:	b.eq	8110 <PyNumber_FloorDivide@plt+0x3510>  // b.none
    80fc:	ldr	x0, [x1, #16]
    8100:	ldr	x1, [x0, #24]
    8104:	cbnz	x1, 8128 <PyNumber_FloorDivide@plt+0x3528>
    8108:	ldr	w1, [x0, #32]
    810c:	cbnz	w1, 8128 <PyNumber_FloorDivide@plt+0x3528>
    8110:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    8114:	add	x0, x0, #0x2ff
    8118:	bl	4ad0 <PyUnicode_FromString@plt>
    811c:	ldp	x19, x20, [sp, #16]
    8120:	ldp	x29, x30, [sp], #48
    8124:	ret
    8128:	ldr	w1, [x0, #24]
    812c:	tbz	w1, #31, 818c <PyNumber_FloorDivide@plt+0x358c>
    8130:	bl	541c <PyNumber_FloorDivide@plt+0x81c>
    8134:	cbz	x0, 811c <PyNumber_FloorDivide@plt+0x351c>
    8138:	mov	w19, #0x2d                  	// #45
    813c:	ldp	w1, w20, [x0, #28]
    8140:	str	w1, [sp, #44]
    8144:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8148:	ldr	w0, [sp, #44]
    814c:	add	x2, sp, #0x2c
    8150:	mov	w1, #0x3c                  	// #60
    8154:	bl	4ce4 <PyNumber_FloorDivide@plt+0xe4>
    8158:	str	w0, [sp, #40]
    815c:	add	x2, sp, #0x28
    8160:	mov	w1, #0x3c                  	// #60
    8164:	bl	4ce4 <PyNumber_FloorDivide@plt+0xe4>
    8168:	mov	w2, w0
    816c:	cbz	w20, 81a0 <PyNumber_FloorDivide@plt+0x35a0>
    8170:	ldp	w3, w4, [sp, #40]
    8174:	mov	w5, w20
    8178:	mov	w1, w19
    817c:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    8180:	add	x0, x0, #0x45d
    8184:	bl	4700 <PyUnicode_FromFormat@plt>
    8188:	b	811c <PyNumber_FloorDivide@plt+0x351c>
    818c:	ldr	x1, [x0]
    8190:	mov	w19, #0x2b                  	// #43
    8194:	add	x1, x1, #0x1
    8198:	str	x1, [x0]
    819c:	b	813c <PyNumber_FloorDivide@plt+0x353c>
    81a0:	ldp	w3, w4, [sp, #40]
    81a4:	mov	w1, w19
    81a8:	cbz	w4, 81bc <PyNumber_FloorDivide@plt+0x35bc>
    81ac:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    81b0:	add	x0, x0, #0x476
    81b4:	bl	4700 <PyUnicode_FromFormat@plt>
    81b8:	b	811c <PyNumber_FloorDivide@plt+0x351c>
    81bc:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    81c0:	add	x0, x0, #0x48a
    81c4:	bl	4700 <PyUnicode_FromFormat@plt>
    81c8:	b	811c <PyNumber_FloorDivide@plt+0x351c>
    81cc:	stp	x29, x30, [sp, #-32]!
    81d0:	mov	x29, sp
    81d4:	str	x19, [sp, #16]
    81d8:	mov	x19, x0
    81dc:	mov	x0, x1
    81e0:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    81e4:	add	x1, x1, #0x499
    81e8:	bl	5cd8 <PyNumber_FloorDivide@plt+0x10d8>
    81ec:	cmn	w0, #0x1
    81f0:	b.eq	8204 <PyNumber_FloorDivide@plt+0x3604>  // b.none
    81f4:	mov	x0, x19
    81f8:	ldr	x19, [sp, #16]
    81fc:	ldp	x29, x30, [sp], #32
    8200:	b	80c4 <PyNumber_FloorDivide@plt+0x34c4>
    8204:	mov	x0, #0x0                   	// #0
    8208:	ldr	x19, [sp, #16]
    820c:	ldp	x29, x30, [sp], #32
    8210:	ret
    8214:	stp	x29, x30, [sp, #-48]!
    8218:	mov	x29, sp
    821c:	stp	x19, x20, [sp, #16]
    8220:	adrp	x20, 21000 <PyInit__datetime@@Base+0x14918>
    8224:	ldr	x20, [x20, #4024]
    8228:	str	x21, [sp, #32]
    822c:	cmp	x0, x20
    8230:	b.ne	8258 <PyNumber_FloorDivide@plt+0x3658>  // b.any
    8234:	mov	x19, x0
    8238:	ldr	x0, [x0]
    823c:	add	x0, x0, #0x1
    8240:	str	x0, [x19]
    8244:	mov	x0, x19
    8248:	ldp	x19, x20, [sp, #16]
    824c:	ldr	x21, [sp, #32]
    8250:	ldp	x29, x30, [sp], #48
    8254:	ret
    8258:	mov	x3, x2
    825c:	mov	x21, x1
    8260:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    8264:	add	x2, x2, #0x114
    8268:	bl	4780 <PyObject_CallMethod@plt>
    826c:	mov	x19, x0
    8270:	cmp	x0, x20
    8274:	b.eq	8244 <PyNumber_FloorDivide@plt+0x3644>  // b.none
    8278:	cbz	x0, 8244 <PyNumber_FloorDivide@plt+0x3644>
    827c:	ldr	x0, [x0, #8]
    8280:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    8284:	add	x1, x1, #0x298
    8288:	cmp	x0, x1
    828c:	b.ne	82e4 <PyNumber_FloorDivide@plt+0x36e4>  // b.any
    8290:	ldr	x1, [x19, #24]
    8294:	mov	x0, #0xffffffff            	// #4294967295
    8298:	cmp	x1, x0
    829c:	b.ne	82ac <PyNumber_FloorDivide@plt+0x36ac>  // b.any
    82a0:	ldr	w0, [x19, #32]
    82a4:	cmp	w0, #0x0
    82a8:	b.le	82bc <PyNumber_FloorDivide@plt+0x36bc>
    82ac:	ldr	w0, [x19, #24]
    82b0:	add	w0, w0, #0x1
    82b4:	cmp	w0, #0x1
    82b8:	b.ls	8244 <PyNumber_FloorDivide@plt+0x3644>  // b.plast
    82bc:	mov	x0, x19
    82c0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    82c4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    82c8:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    82cc:	add	x1, x1, #0x4a0
    82d0:	ldr	x0, [x0, #3968]
    82d4:	ldr	x0, [x0]
    82d8:	bl	4b60 <PyErr_Format@plt>
    82dc:	mov	x19, #0x0                   	// #0
    82e0:	b	8244 <PyNumber_FloorDivide@plt+0x3644>
    82e4:	bl	4b30 <PyType_IsSubtype@plt>
    82e8:	cbnz	w0, 8290 <PyNumber_FloorDivide@plt+0x3690>
    82ec:	ldr	x0, [x19, #8]
    82f0:	mov	x2, x21
    82f4:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    82f8:	add	x1, x1, #0x4fa
    82fc:	ldr	x3, [x0, #24]
    8300:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    8304:	ldr	x0, [x0, #3976]
    8308:	ldr	x0, [x0]
    830c:	bl	4b60 <PyErr_Format@plt>
    8310:	mov	x0, x19
    8314:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8318:	b	82dc <PyNumber_FloorDivide@plt+0x36dc>
    831c:	stp	x29, x30, [sp, #-32]!
    8320:	mov	w3, w0
    8324:	cmp	w0, #0x1
    8328:	mov	x29, sp
    832c:	stp	x19, x20, [sp, #16]
    8330:	b.ne	8390 <PyNumber_FloorDivide@plt+0x3790>  // b.any
    8334:	cbnz	w1, 8350 <PyNumber_FloorDivide@plt+0x3750>
    8338:	adrp	x0, 23000 <PyInit__datetime@@Base+0x16918>
    833c:	ldr	x19, [x0, #3960]
    8340:	ldr	x0, [x19]
    8344:	add	x0, x0, #0x1
    8348:	str	x0, [x19]
    834c:	b	8380 <PyNumber_FloorDivide@plt+0x3780>
    8350:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    8354:	mov	w0, #0x0                   	// #0
    8358:	add	x4, x4, #0x298
    835c:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    8360:	mov	x19, x0
    8364:	cbz	x0, 8380 <PyNumber_FloorDivide@plt+0x3780>
    8368:	mov	x1, #0x0                   	// #0
    836c:	bl	5bec <PyNumber_FloorDivide@plt+0xfec>
    8370:	mov	x20, x0
    8374:	mov	x0, x19
    8378:	mov	x19, x20
    837c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8380:	mov	x0, x19
    8384:	ldp	x19, x20, [sp, #16]
    8388:	ldp	x29, x30, [sp], #32
    838c:	ret
    8390:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    8394:	ldr	x19, [x19, #4024]
    8398:	b	8340 <PyNumber_FloorDivide@plt+0x3740>
    839c:	stp	x29, x30, [sp, #-64]!
    83a0:	mov	x29, sp
    83a4:	stp	x19, x20, [sp, #16]
    83a8:	mov	x20, x0
    83ac:	ldr	x0, [x1, #8]
    83b0:	ldr	x0, [x0, #168]
    83b4:	tbnz	w0, #28, 83d8 <PyNumber_FloorDivide@plt+0x37d8>
    83b8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    83bc:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    83c0:	add	x1, x1, #0x148
    83c4:	ldr	x0, [x0, #3976]
    83c8:	ldr	x0, [x0]
    83cc:	bl	4880 <PyErr_SetString@plt>
    83d0:	mov	x19, #0x0                   	// #0
    83d4:	b	8468 <PyNumber_FloorDivide@plt+0x3868>
    83d8:	mov	x19, x1
    83dc:	add	x1, sp, #0x38
    83e0:	mov	x0, x19
    83e4:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    83e8:	cbz	x0, 84a0 <PyNumber_FloorDivide@plt+0x38a0>
    83ec:	ldr	x1, [sp, #56]
    83f0:	add	x7, sp, #0x34
    83f4:	add	x6, sp, #0x30
    83f8:	add	x5, sp, #0x2c
    83fc:	add	x4, sp, #0x28
    8400:	add	x3, sp, #0x24
    8404:	add	x2, sp, #0x20
    8408:	stp	wzr, wzr, [sp, #32]
    840c:	stp	wzr, wzr, [sp, #40]
    8410:	str	wzr, [sp, #52]
    8414:	bl	5058 <PyNumber_FloorDivide@plt+0x458>
    8418:	tbnz	w0, #31, 84a0 <PyNumber_FloorDivide@plt+0x38a0>
    841c:	ldp	w1, w2, [sp, #48]
    8420:	bl	831c <PyNumber_FloorDivide@plt+0x371c>
    8424:	mov	x19, x0
    8428:	cbz	x0, 8468 <PyNumber_FloorDivide@plt+0x3868>
    842c:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    8430:	add	x4, x4, #0x298
    8434:	add	x4, x4, #0x340
    8438:	ldp	w0, w1, [sp, #32]
    843c:	cmp	x20, x4
    8440:	ldp	w2, w3, [sp, #40]
    8444:	b.ne	8478 <PyNumber_FloorDivide@plt+0x3878>  // b.any
    8448:	mov	x6, x20
    844c:	mov	x4, x19
    8450:	mov	w5, #0x0                   	// #0
    8454:	bl	6048 <PyNumber_FloorDivide@plt+0x1448>
    8458:	mov	x20, x0
    845c:	mov	x0, x19
    8460:	mov	x19, x20
    8464:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8468:	mov	x0, x19
    846c:	ldp	x19, x20, [sp, #16]
    8470:	ldp	x29, x30, [sp], #64
    8474:	ret
    8478:	mov	w5, w3
    847c:	mov	w4, w2
    8480:	mov	w3, w1
    8484:	mov	w2, w0
    8488:	mov	x6, x19
    848c:	mov	x0, x20
    8490:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    8494:	add	x1, x1, #0x110
    8498:	bl	4950 <PyObject_CallFunction@plt>
    849c:	b	8458 <PyNumber_FloorDivide@plt+0x3858>
    84a0:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    84a4:	mov	x2, x19
    84a8:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    84ac:	add	x1, x1, #0x16c
    84b0:	ldr	x0, [x0, #3968]
    84b4:	ldr	x0, [x0]
    84b8:	bl	4b60 <PyErr_Format@plt>
    84bc:	b	83d0 <PyNumber_FloorDivide@plt+0x37d0>
    84c0:	sub	sp, sp, #0x70
    84c4:	stp	x29, x30, [sp, #16]
    84c8:	add	x29, sp, #0x10
    84cc:	stp	x21, x22, [sp, #48]
    84d0:	mov	x21, x0
    84d4:	ldr	x0, [x1, #8]
    84d8:	stp	x19, x20, [sp, #32]
    84dc:	ldr	x0, [x0, #168]
    84e0:	tbnz	w0, #28, 8504 <PyNumber_FloorDivide@plt+0x3904>
    84e4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    84e8:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    84ec:	add	x1, x1, #0x148
    84f0:	ldr	x0, [x0, #3976]
    84f4:	ldr	x0, [x0]
    84f8:	bl	4880 <PyErr_SetString@plt>
    84fc:	mov	x19, #0x0                   	// #0
    8500:	b	8738 <PyNumber_FloorDivide@plt+0x3b38>
    8504:	mov	x19, x1
    8508:	mov	x0, x1
    850c:	bl	48d0 <PyUnicode_GetLength@plt>
    8510:	tbz	x0, #63, 8524 <PyNumber_FloorDivide@plt+0x3924>
    8514:	mov	x20, #0x0                   	// #0
    8518:	mov	x0, x20
    851c:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    8520:	b	84fc <PyNumber_FloorDivide@plt+0x38fc>
    8524:	cmp	x0, #0xa
    8528:	b.le	856c <PyNumber_FloorDivide@plt+0x396c>
    852c:	ldrb	w2, [x19, #32]
    8530:	and	w0, w2, #0x1c
    8534:	cmp	w0, #0x4
    8538:	b.eq	856c <PyNumber_FloorDivide@plt+0x396c>  // b.none
    853c:	and	w3, w2, #0x20
    8540:	cmp	w0, #0x8
    8544:	b.ne	85d0 <PyNumber_FloorDivide@plt+0x39d0>  // b.any
    8548:	cbz	w3, 85c4 <PyNumber_FloorDivide@plt+0x39c4>
    854c:	add	x0, x19, #0x44
    8550:	add	x1, x19, #0x5c
    8554:	tst	x2, #0x40
    8558:	csel	x0, x1, x0, eq  // eq = none
    855c:	ldrh	w1, [x0]
    8560:	mov	w0, #0xd7ff                	// #55295
    8564:	cmp	w1, w0
    8568:	b.hi	861c <PyNumber_FloorDivide@plt+0x3a1c>  // b.pmore
    856c:	ldr	x0, [x19]
    8570:	mov	x20, x19
    8574:	add	x0, x0, #0x1
    8578:	str	x0, [x19]
    857c:	add	x1, sp, #0x68
    8580:	mov	x0, x20
    8584:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    8588:	mov	x8, x0
    858c:	cbnz	x0, 8684 <PyNumber_FloorDivide@plt+0x3a84>
    8590:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    8594:	ldr	x0, [x0, #4032]
    8598:	ldr	x0, [x0]
    859c:	bl	48a0 <PyErr_ExceptionMatches@plt>
    85a0:	cbz	w0, 8518 <PyNumber_FloorDivide@plt+0x3918>
    85a4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    85a8:	mov	x2, x19
    85ac:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    85b0:	add	x1, x1, #0x16c
    85b4:	ldr	x0, [x0, #3968]
    85b8:	ldr	x0, [x0]
    85bc:	bl	4b60 <PyErr_Format@plt>
    85c0:	b	8518 <PyNumber_FloorDivide@plt+0x3918>
    85c4:	ldr	x0, [x19, #72]
    85c8:	add	x0, x0, #0x14
    85cc:	b	855c <PyNumber_FloorDivide@plt+0x395c>
    85d0:	cbz	w3, 8610 <PyNumber_FloorDivide@plt+0x3a10>
    85d4:	add	x0, x19, #0x58
    85d8:	add	x1, x19, #0x70
    85dc:	tst	x2, #0x40
    85e0:	csel	x0, x1, x0, eq  // eq = none
    85e4:	ldr	w1, [x0]
    85e8:	mov	w0, #0xd7ff                	// #55295
    85ec:	cmp	w1, w0
    85f0:	b.ls	856c <PyNumber_FloorDivide@plt+0x396c>  // b.plast
    85f4:	cbz	w3, 8678 <PyNumber_FloorDivide@plt+0x3a78>
    85f8:	add	x0, x19, #0x58
    85fc:	add	x1, x19, #0x70
    8600:	tst	x2, #0x40
    8604:	csel	x0, x1, x0, eq  // eq = none
    8608:	ldr	w1, [x0]
    860c:	b	8634 <PyNumber_FloorDivide@plt+0x3a34>
    8610:	ldr	x0, [x19, #72]
    8614:	add	x0, x0, #0x28
    8618:	b	85e4 <PyNumber_FloorDivide@plt+0x39e4>
    861c:	cbz	w3, 866c <PyNumber_FloorDivide@plt+0x3a6c>
    8620:	add	x0, x19, #0x44
    8624:	add	x1, x19, #0x5c
    8628:	tst	x2, #0x40
    862c:	csel	x0, x1, x0, eq  // eq = none
    8630:	ldrh	w1, [x0]
    8634:	mov	w0, #0xdfff                	// #57343
    8638:	cmp	w1, w0
    863c:	b.hi	856c <PyNumber_FloorDivide@plt+0x396c>  // b.pmore
    8640:	mov	x0, x19
    8644:	bl	47a0 <_PyUnicode_Copy@plt>
    8648:	mov	x20, x0
    864c:	cbz	x0, 8514 <PyNumber_FloorDivide@plt+0x3914>
    8650:	mov	w2, #0x54                  	// #84
    8654:	mov	x1, #0xa                   	// #10
    8658:	bl	4860 <PyUnicode_WriteChar@plt>
    865c:	cbz	w0, 857c <PyNumber_FloorDivide@plt+0x397c>
    8660:	mov	x0, x20
    8664:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8668:	b	8514 <PyNumber_FloorDivide@plt+0x3914>
    866c:	ldr	x0, [x19, #72]
    8670:	add	x0, x0, #0x14
    8674:	b	8630 <PyNumber_FloorDivide@plt+0x3a30>
    8678:	ldr	x0, [x19, #72]
    867c:	add	x0, x0, #0x28
    8680:	b	8608 <PyNumber_FloorDivide@plt+0x3a08>
    8684:	add	x3, sp, #0x4c
    8688:	add	x2, sp, #0x48
    868c:	add	x1, sp, #0x44
    8690:	stp	wzr, wzr, [sp, #68]
    8694:	stp	wzr, wzr, [sp, #76]
    8698:	stp	wzr, wzr, [sp, #84]
    869c:	stp	wzr, wzr, [sp, #92]
    86a0:	str	wzr, [sp, #100]
    86a4:	bl	4f2c <PyNumber_FloorDivide@plt+0x32c>
    86a8:	cbnz	w0, 86f0 <PyNumber_FloorDivide@plt+0x3af0>
    86ac:	ldr	x1, [sp, #104]
    86b0:	cmp	x1, #0xa
    86b4:	b.le	86f4 <PyNumber_FloorDivide@plt+0x3af4>
    86b8:	ldrsb	w0, [x8, #10]
    86bc:	ldrb	w2, [x8, #10]
    86c0:	tbnz	w0, #31, 8750 <PyNumber_FloorDivide@plt+0x3b50>
    86c4:	add	x0, x8, #0xb
    86c8:	sub	x8, x0, x8
    86cc:	add	x7, sp, #0x64
    86d0:	sub	x1, x1, x8
    86d4:	add	x6, sp, #0x60
    86d8:	add	x5, sp, #0x5c
    86dc:	add	x4, sp, #0x58
    86e0:	add	x3, sp, #0x54
    86e4:	add	x2, sp, #0x50
    86e8:	str	x1, [sp, #104]
    86ec:	bl	5058 <PyNumber_FloorDivide@plt+0x458>
    86f0:	tbnz	w0, #31, 85a4 <PyNumber_FloorDivide@plt+0x39a4>
    86f4:	ldp	w1, w2, [sp, #96]
    86f8:	bl	831c <PyNumber_FloorDivide@plt+0x371c>
    86fc:	mov	x22, x0
    8700:	cbz	x0, 8518 <PyNumber_FloorDivide@plt+0x3918>
    8704:	mov	x7, x0
    8708:	ldr	w6, [sp, #92]
    870c:	ldp	w0, w1, [sp, #68]
    8710:	str	wzr, [sp]
    8714:	ldp	w2, w3, [sp, #76]
    8718:	str	x21, [sp, #8]
    871c:	ldp	w4, w5, [sp, #84]
    8720:	bl	62f8 <PyNumber_FloorDivide@plt+0x16f8>
    8724:	mov	x19, x0
    8728:	mov	x0, x22
    872c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8730:	mov	x0, x20
    8734:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8738:	mov	x0, x19
    873c:	ldp	x29, x30, [sp, #16]
    8740:	ldp	x19, x20, [sp, #32]
    8744:	ldp	x21, x22, [sp, #48]
    8748:	add	sp, sp, #0x70
    874c:	ret
    8750:	and	w2, w2, #0xf0
    8754:	cmp	w2, #0xe0
    8758:	b.eq	8770 <PyNumber_FloorDivide@plt+0x3b70>  // b.none
    875c:	add	x3, x8, #0xc
    8760:	add	x0, x8, #0xe
    8764:	cmp	w2, #0xf0
    8768:	csel	x0, x0, x3, eq  // eq = none
    876c:	b	86c8 <PyNumber_FloorDivide@plt+0x3ac8>
    8770:	add	x0, x8, #0xd
    8774:	b	86c8 <PyNumber_FloorDivide@plt+0x3ac8>
    8778:	stp	x29, x30, [sp, #-32]!
    877c:	mov	x29, sp
    8780:	stp	x19, x20, [sp, #16]
    8784:	adrp	x20, 21000 <PyInit__datetime@@Base+0x14918>
    8788:	ldr	x20, [x20, #4024]
    878c:	cmp	x0, x20
    8790:	b.ne	87b4 <PyNumber_FloorDivide@plt+0x3bb4>  // b.any
    8794:	mov	x19, x0
    8798:	ldr	x0, [x0]
    879c:	add	x0, x0, #0x1
    87a0:	str	x0, [x19]
    87a4:	mov	x0, x19
    87a8:	ldp	x19, x20, [sp, #16]
    87ac:	ldp	x29, x30, [sp], #32
    87b0:	ret
    87b4:	mov	x2, x1
    87b8:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    87bc:	add	x1, x1, #0xab8
    87c0:	mov	x3, #0x0                   	// #0
    87c4:	add	x1, x1, #0x330
    87c8:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    87cc:	mov	x19, x0
    87d0:	cbz	x0, 87a4 <PyNumber_FloorDivide@plt+0x3ba4>
    87d4:	cmp	x0, x20
    87d8:	b.eq	87a4 <PyNumber_FloorDivide@plt+0x3ba4>  // b.none
    87dc:	ldr	x0, [x0, #8]
    87e0:	ldr	x1, [x0, #168]
    87e4:	tbnz	w1, #28, 87a4 <PyNumber_FloorDivide@plt+0x3ba4>
    87e8:	ldr	x2, [x0, #24]
    87ec:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    87f0:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    87f4:	add	x1, x1, #0x532
    87f8:	ldr	x0, [x0, #3976]
    87fc:	ldr	x0, [x0]
    8800:	bl	4b60 <PyErr_Format@plt>
    8804:	mov	x0, x19
    8808:	mov	x19, #0x0                   	// #0
    880c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8810:	b	87a4 <PyNumber_FloorDivide@plt+0x3ba4>
    8814:	ldrb	w2, [x0, #24]
    8818:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    881c:	cbz	w2, 882c <PyNumber_FloorDivide@plt+0x3c2c>
    8820:	ldr	x0, [x0, #32]
    8824:	ldr	x1, [x1, #4024]
    8828:	b	8778 <PyNumber_FloorDivide@plt+0x3b78>
    882c:	ldr	x0, [x1, #4024]
    8830:	b	8824 <PyNumber_FloorDivide@plt+0x3c24>
    8834:	mov	x1, x0
    8838:	ldrb	w0, [x0, #24]
    883c:	cbz	w0, 8848 <PyNumber_FloorDivide@plt+0x3c48>
    8840:	ldr	x0, [x1, #40]
    8844:	b	8778 <PyNumber_FloorDivide@plt+0x3b78>
    8848:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    884c:	ldr	x0, [x0, #4024]
    8850:	b	8844 <PyNumber_FloorDivide@plt+0x3c44>
    8854:	stp	x29, x30, [sp, #-48]!
    8858:	mov	x29, sp
    885c:	str	x21, [sp, #32]
    8860:	mov	x21, x1
    8864:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    8868:	stp	x19, x20, [sp, #16]
    886c:	mov	x19, x0
    8870:	ldr	x1, [x1, #4024]
    8874:	cmp	x21, x1
    8878:	b.eq	88bc <PyNumber_FloorDivide@plt+0x3cbc>  // b.none
    887c:	ldr	x2, [x0, #16]
    8880:	mov	x1, #0x0                   	// #0
    8884:	sub	x2, x2, #0x1
    8888:	bl	4bf0 <PyUnicode_Substring@plt>
    888c:	mov	x20, x0
    8890:	mov	x0, x19
    8894:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8898:	cbz	x20, 88d0 <PyNumber_FloorDivide@plt+0x3cd0>
    889c:	mov	x2, x21
    88a0:	mov	x1, x20
    88a4:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    88a8:	add	x0, x0, #0x569
    88ac:	bl	4700 <PyUnicode_FromFormat@plt>
    88b0:	mov	x19, x0
    88b4:	mov	x0, x20
    88b8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    88bc:	mov	x0, x19
    88c0:	ldp	x19, x20, [sp, #16]
    88c4:	ldr	x21, [sp, #32]
    88c8:	ldp	x29, x30, [sp], #48
    88cc:	ret
    88d0:	mov	x19, #0x0                   	// #0
    88d4:	b	88bc <PyNumber_FloorDivide@plt+0x3cbc>
    88d8:	stp	x29, x30, [sp, #-48]!
    88dc:	mov	x29, sp
    88e0:	ldr	x2, [x0, #16]
    88e4:	str	x21, [sp, #32]
    88e8:	mov	w21, w1
    88ec:	mov	x1, #0x0                   	// #0
    88f0:	sub	x2, x2, #0x1
    88f4:	stp	x19, x20, [sp, #16]
    88f8:	mov	x20, x0
    88fc:	bl	4bf0 <PyUnicode_Substring@plt>
    8900:	mov	x19, x0
    8904:	mov	x0, x20
    8908:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    890c:	cbz	x19, 8934 <PyNumber_FloorDivide@plt+0x3d34>
    8910:	mov	x1, x19
    8914:	mov	w2, w21
    8918:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    891c:	add	x0, x0, #0x578
    8920:	bl	4700 <PyUnicode_FromFormat@plt>
    8924:	mov	x20, x0
    8928:	mov	x0, x19
    892c:	mov	x19, x20
    8930:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8934:	mov	x0, x19
    8938:	ldp	x19, x20, [sp, #16]
    893c:	ldr	x21, [sp, #32]
    8940:	ldp	x29, x30, [sp], #48
    8944:	ret
    8948:	sub	sp, sp, #0x30
    894c:	stp	x29, x30, [sp, #16]
    8950:	add	x29, sp, #0x10
    8954:	str	x19, [sp, #32]
    8958:	mov	x19, x0
    895c:	ldrb	w2, [x0, #33]
    8960:	ldrb	w7, [x0, #31]
    8964:	ldrb	w3, [x0, #27]
    8968:	ldrb	w4, [x0, #28]
    896c:	lsl	w2, w2, #8
    8970:	ldrb	w5, [x0, #29]
    8974:	ldrb	w6, [x0, #30]
    8978:	ldr	x0, [x0, #8]
    897c:	ldr	x1, [x0, #24]
    8980:	ldrb	w0, [x19, #32]
    8984:	orr	w0, w2, w0, lsl #16
    8988:	ldrb	w2, [x19, #34]
    898c:	orr	w0, w0, w2
    8990:	ldurh	w2, [x19, #25]
    8994:	rev16	w2, w2
    8998:	and	w2, w2, #0xffff
    899c:	cbz	w0, 89c8 <PyNumber_FloorDivide@plt+0x3dc8>
    89a0:	str	w0, [sp]
    89a4:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    89a8:	add	x0, x0, #0x585
    89ac:	bl	4700 <PyUnicode_FromFormat@plt>
    89b0:	cbnz	x0, 89ec <PyNumber_FloorDivide@plt+0x3dec>
    89b4:	mov	x0, #0x0                   	// #0
    89b8:	ldp	x29, x30, [sp, #16]
    89bc:	ldr	x19, [sp, #32]
    89c0:	add	sp, sp, #0x30
    89c4:	ret
    89c8:	cbz	w7, 89dc <PyNumber_FloorDivide@plt+0x3ddc>
    89cc:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    89d0:	add	x0, x0, #0x5a4
    89d4:	bl	4700 <PyUnicode_FromFormat@plt>
    89d8:	b	89b0 <PyNumber_FloorDivide@plt+0x3db0>
    89dc:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    89e0:	add	x0, x0, #0x5bf
    89e4:	bl	4700 <PyUnicode_FromFormat@plt>
    89e8:	b	89b0 <PyNumber_FloorDivide@plt+0x3db0>
    89ec:	ldrb	w1, [x19, #35]
    89f0:	cbz	w1, 89fc <PyNumber_FloorDivide@plt+0x3dfc>
    89f4:	bl	88d8 <PyNumber_FloorDivide@plt+0x3cd8>
    89f8:	cbz	x0, 89b4 <PyNumber_FloorDivide@plt+0x3db4>
    89fc:	ldrb	w1, [x19, #24]
    8a00:	cbz	w1, 89b8 <PyNumber_FloorDivide@plt+0x3db8>
    8a04:	ldp	x29, x30, [sp, #16]
    8a08:	ldr	x1, [x19, #40]
    8a0c:	ldr	x19, [sp, #32]
    8a10:	add	sp, sp, #0x30
    8a14:	b	8854 <PyNumber_FloorDivide@plt+0x3c54>
    8a18:	stp	x29, x30, [sp, #-48]!
    8a1c:	mov	x29, sp
    8a20:	stp	x19, x20, [sp, #16]
    8a24:	mov	x20, x0
    8a28:	mov	x19, x1
    8a2c:	ldr	x0, [x0, #8]
    8a30:	stp	x21, x22, [sp, #32]
    8a34:	adrp	x22, 22000 <PyInit__datetime@@Base+0x15918>
    8a38:	add	x1, x22, #0x298
    8a3c:	cmp	x0, x1
    8a40:	b.ne	8a6c <PyNumber_FloorDivide@plt+0x3e6c>  // b.any
    8a44:	ldr	x0, [x19, #8]
    8a48:	add	x1, x22, #0x298
    8a4c:	cmp	x0, x1
    8a50:	b.ne	8a9c <PyNumber_FloorDivide@plt+0x3e9c>  // b.any
    8a54:	mov	x0, x20
    8a58:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    8a5c:	mov	x21, x0
    8a60:	cbnz	x0, 8aa8 <PyNumber_FloorDivide@plt+0x3ea8>
    8a64:	mov	x19, #0x0                   	// #0
    8a68:	b	8a88 <PyNumber_FloorDivide@plt+0x3e88>
    8a6c:	bl	4b30 <PyType_IsSubtype@plt>
    8a70:	cbnz	w0, 8a44 <PyNumber_FloorDivide@plt+0x3e44>
    8a74:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    8a78:	ldr	x19, [x19, #3960]
    8a7c:	ldr	x0, [x19]
    8a80:	add	x0, x0, #0x1
    8a84:	str	x0, [x19]
    8a88:	mov	x0, x19
    8a8c:	ldp	x19, x20, [sp, #16]
    8a90:	ldp	x21, x22, [sp, #32]
    8a94:	ldp	x29, x30, [sp], #48
    8a98:	ret
    8a9c:	bl	4b30 <PyType_IsSubtype@plt>
    8aa0:	cbnz	w0, 8a54 <PyNumber_FloorDivide@plt+0x3e54>
    8aa4:	b	8a74 <PyNumber_FloorDivide@plt+0x3e74>
    8aa8:	mov	x0, x19
    8aac:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    8ab0:	mov	x19, x0
    8ab4:	cbnz	x0, 8ac4 <PyNumber_FloorDivide@plt+0x3ec4>
    8ab8:	mov	x0, x21
    8abc:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8ac0:	b	8a88 <PyNumber_FloorDivide@plt+0x3e88>
    8ac4:	mov	x1, x0
    8ac8:	mov	x0, x21
    8acc:	bl	6e70 <PyNumber_FloorDivide@plt+0x2270>
    8ad0:	mov	x20, x0
    8ad4:	mov	x0, x21
    8ad8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8adc:	mov	x0, x19
    8ae0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8ae4:	cbz	x20, 8a64 <PyNumber_FloorDivide@plt+0x3e64>
    8ae8:	ldr	x0, [x20, #32]
    8aec:	add	x1, x22, #0x298
    8af0:	bl	6ee4 <PyNumber_FloorDivide@plt+0x22e4>
    8af4:	mov	x19, x0
    8af8:	cbnz	x0, 8b04 <PyNumber_FloorDivide@plt+0x3f04>
    8afc:	mov	x0, x20
    8b00:	b	8abc <PyNumber_FloorDivide@plt+0x3ebc>
    8b04:	ldr	x1, [x20, #24]
    8b08:	mov	x2, x0
    8b0c:	mov	x0, #0x2                   	// #2
    8b10:	bl	4bd0 <PyTuple_Pack@plt>
    8b14:	mov	x21, x0
    8b18:	mov	x0, x19
    8b1c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8b20:	mov	x0, x20
    8b24:	mov	x19, x21
    8b28:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8b2c:	b	8a88 <PyNumber_FloorDivide@plt+0x3e88>
    8b30:	stp	x29, x30, [sp, #-48]!
    8b34:	mov	x29, sp
    8b38:	stp	x19, x20, [sp, #16]
    8b3c:	mov	x20, x0
    8b40:	mov	x19, x1
    8b44:	ldr	x0, [x0, #8]
    8b48:	stp	x21, x22, [sp, #32]
    8b4c:	adrp	x22, 22000 <PyInit__datetime@@Base+0x15918>
    8b50:	add	x1, x22, #0x298
    8b54:	cmp	x0, x1
    8b58:	b.ne	8b84 <PyNumber_FloorDivide@plt+0x3f84>  // b.any
    8b5c:	ldr	x0, [x19, #8]
    8b60:	add	x1, x22, #0x298
    8b64:	cmp	x0, x1
    8b68:	b.ne	8bb4 <PyNumber_FloorDivide@plt+0x3fb4>  // b.any
    8b6c:	mov	x0, x20
    8b70:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    8b74:	mov	x20, x0
    8b78:	cbnz	x0, 8bc0 <PyNumber_FloorDivide@plt+0x3fc0>
    8b7c:	mov	x19, #0x0                   	// #0
    8b80:	b	8ba0 <PyNumber_FloorDivide@plt+0x3fa0>
    8b84:	bl	4b30 <PyType_IsSubtype@plt>
    8b88:	cbnz	w0, 8b5c <PyNumber_FloorDivide@plt+0x3f5c>
    8b8c:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    8b90:	ldr	x19, [x19, #3960]
    8b94:	ldr	x0, [x19]
    8b98:	add	x0, x0, #0x1
    8b9c:	str	x0, [x19]
    8ba0:	mov	x0, x19
    8ba4:	ldp	x19, x20, [sp, #16]
    8ba8:	ldp	x21, x22, [sp, #32]
    8bac:	ldp	x29, x30, [sp], #48
    8bb0:	ret
    8bb4:	bl	4b30 <PyType_IsSubtype@plt>
    8bb8:	cbnz	w0, 8b6c <PyNumber_FloorDivide@plt+0x3f6c>
    8bbc:	b	8b8c <PyNumber_FloorDivide@plt+0x3f8c>
    8bc0:	mov	x0, x19
    8bc4:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    8bc8:	mov	x19, x0
    8bcc:	cbnz	x0, 8bdc <PyNumber_FloorDivide@plt+0x3fdc>
    8bd0:	mov	x0, x20
    8bd4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8bd8:	b	8ba0 <PyNumber_FloorDivide@plt+0x3fa0>
    8bdc:	mov	x1, x0
    8be0:	mov	x0, x20
    8be4:	bl	4980 <PyNumber_Remainder@plt>
    8be8:	mov	x21, x0
    8bec:	mov	x0, x20
    8bf0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8bf4:	mov	x0, x19
    8bf8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8bfc:	cbz	x21, 8b7c <PyNumber_FloorDivide@plt+0x3f7c>
    8c00:	add	x1, x22, #0x298
    8c04:	mov	x0, x21
    8c08:	bl	6ee4 <PyNumber_FloorDivide@plt+0x22e4>
    8c0c:	mov	x19, x0
    8c10:	mov	x0, x21
    8c14:	b	8bd4 <PyNumber_FloorDivide@plt+0x3fd4>
    8c18:	stp	x29, x30, [sp, #-32]!
    8c1c:	mov	x3, #0x0                   	// #0
    8c20:	mov	x29, sp
    8c24:	ldr	x1, [x0, #8]
    8c28:	ldr	x2, [x1, #56]
    8c2c:	ldr	x1, [x1, #168]
    8c30:	str	x19, [sp, #16]
    8c34:	mov	x19, x0
    8c38:	tbz	w1, #11, 8c44 <PyNumber_FloorDivide@plt+0x4044>
    8c3c:	ldr	x4, [x0, x2]
    8c40:	cbnz	x4, 8c5c <PyNumber_FloorDivide@plt+0x405c>
    8c44:	mov	x0, x19
    8c48:	mov	x2, #0x0                   	// #0
    8c4c:	ldr	x19, [sp, #16]
    8c50:	mov	x1, #0x0                   	// #0
    8c54:	ldp	x29, x30, [sp], #32
    8c58:	b	4b90 <_PyObject_MakeTpCall@plt>
    8c5c:	mov	x2, #0x0                   	// #0
    8c60:	mov	x1, #0x0                   	// #0
    8c64:	blr	x4
    8c68:	mov	x1, x0
    8c6c:	mov	x0, x19
    8c70:	mov	x2, #0x0                   	// #0
    8c74:	ldr	x19, [sp, #16]
    8c78:	ldp	x29, x30, [sp], #32
    8c7c:	b	4a00 <_Py_CheckFunctionResult@plt>
    8c80:	mov	x2, x0
    8c84:	ldrb	w0, [x0, #24]
    8c88:	cbz	w0, 8c9c <PyNumber_FloorDivide@plt+0x409c>
    8c8c:	ldr	x0, [x2, #40]
    8c90:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    8c94:	add	x1, x1, #0xe28
    8c98:	b	8214 <PyNumber_FloorDivide@plt+0x3614>
    8c9c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    8ca0:	ldr	x0, [x0, #4024]
    8ca4:	b	8c90 <PyNumber_FloorDivide@plt+0x4090>
    8ca8:	sub	sp, sp, #0x30
    8cac:	mov	x8, x0
    8cb0:	stp	x29, x30, [sp, #16]
    8cb4:	add	x29, sp, #0x10
    8cb8:	stp	x19, x20, [sp, #32]
    8cbc:	ldrb	w7, [x8, #33]
    8cc0:	ldrb	w6, [x8, #32]
    8cc4:	ldurh	w0, [x0, #25]
    8cc8:	lsl	w7, w7, #8
    8ccc:	ldrb	w1, [x8, #27]
    8cd0:	orr	w6, w7, w6, lsl #16
    8cd4:	ldrb	w7, [x8, #34]
    8cd8:	rev16	w0, w0
    8cdc:	ldrb	w2, [x8, #28]
    8ce0:	orr	w6, w6, w7
    8ce4:	ldrb	w7, [x8, #24]
    8ce8:	ldrb	w3, [x8, #29]
    8cec:	and	w0, w0, #0xffff
    8cf0:	ldrb	w4, [x8, #30]
    8cf4:	ldrb	w5, [x8, #31]
    8cf8:	cbz	w7, 8d50 <PyNumber_FloorDivide@plt+0x4150>
    8cfc:	ldr	x7, [x8, #40]
    8d00:	ldr	x9, [x8, #8]
    8d04:	str	x9, [sp, #8]
    8d08:	ldrb	w8, [x8, #35]
    8d0c:	cmp	w8, #0x0
    8d10:	cset	w8, eq  // eq = none
    8d14:	str	w8, [sp]
    8d18:	bl	61c4 <PyNumber_FloorDivide@plt+0x15c4>
    8d1c:	mov	x19, x0
    8d20:	cbz	x0, 8d3c <PyNumber_FloorDivide@plt+0x413c>
    8d24:	mov	x1, #0x0                   	// #0
    8d28:	bl	8c80 <PyNumber_FloorDivide@plt+0x4080>
    8d2c:	mov	x20, x0
    8d30:	mov	x0, x19
    8d34:	mov	x19, x20
    8d38:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8d3c:	mov	x0, x19
    8d40:	ldp	x29, x30, [sp, #16]
    8d44:	ldp	x19, x20, [sp, #32]
    8d48:	add	sp, sp, #0x30
    8d4c:	ret
    8d50:	adrp	x7, 21000 <PyInit__datetime@@Base+0x14918>
    8d54:	ldr	x7, [x7, #4024]
    8d58:	b	8d00 <PyNumber_FloorDivide@plt+0x4100>
    8d5c:	stp	x29, x30, [sp, #-48]!
    8d60:	mov	x29, sp
    8d64:	stp	x19, x20, [sp, #16]
    8d68:	mov	x20, x2
    8d6c:	mov	x19, x3
    8d70:	str	x21, [sp, #32]
    8d74:	mov	x21, x1
    8d78:	bl	8ca8 <PyNumber_FloorDivide@plt+0x40a8>
    8d7c:	cbnz	x0, 8d98 <PyNumber_FloorDivide@plt+0x4198>
    8d80:	mov	w19, #0xffffffff            	// #-1
    8d84:	mov	w0, w19
    8d88:	ldp	x19, x20, [sp, #16]
    8d8c:	ldr	x21, [sp, #32]
    8d90:	ldp	x29, x30, [sp], #48
    8d94:	ret
    8d98:	mov	x4, x0
    8d9c:	cmp	x0, x20
    8da0:	b.eq	8db0 <PyNumber_FloorDivide@plt+0x41b0>  // b.none
    8da4:	mov	x1, x20
    8da8:	bl	58e8 <PyNumber_FloorDivide@plt+0xce8>
    8dac:	cbnz	w0, 8dec <PyNumber_FloorDivide@plt+0x41ec>
    8db0:	mov	x0, x4
    8db4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8db8:	mov	x0, x21
    8dbc:	bl	8ca8 <PyNumber_FloorDivide@plt+0x40a8>
    8dc0:	mov	x4, x0
    8dc4:	cbz	x0, 8d80 <PyNumber_FloorDivide@plt+0x4180>
    8dc8:	cmp	x0, x19
    8dcc:	b.eq	8df4 <PyNumber_FloorDivide@plt+0x41f4>  // b.none
    8dd0:	mov	x1, x19
    8dd4:	bl	58e8 <PyNumber_FloorDivide@plt+0xce8>
    8dd8:	cmp	w0, #0x0
    8ddc:	cset	w19, ne  // ne = any
    8de0:	mov	x0, x4
    8de4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8de8:	b	8d84 <PyNumber_FloorDivide@plt+0x4184>
    8dec:	mov	w19, #0x1                   	// #1
    8df0:	b	8de0 <PyNumber_FloorDivide@plt+0x41e0>
    8df4:	mov	w19, #0x0                   	// #0
    8df8:	b	8de0 <PyNumber_FloorDivide@plt+0x41e0>
    8dfc:	mov	x2, x0
    8e00:	ldrb	w0, [x0, #24]
    8e04:	cbz	w0, 8e18 <PyNumber_FloorDivide@plt+0x4218>
    8e08:	ldr	x0, [x2, #40]
    8e0c:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    8e10:	add	x1, x1, #0x3a
    8e14:	b	8214 <PyNumber_FloorDivide@plt+0x3614>
    8e18:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    8e1c:	ldr	x0, [x0, #4024]
    8e20:	b	8e0c <PyNumber_FloorDivide@plt+0x420c>
    8e24:	ldrb	w1, [x0, #24]
    8e28:	adrp	x2, 21000 <PyInit__datetime@@Base+0x14918>
    8e2c:	cbz	w1, 8e44 <PyNumber_FloorDivide@plt+0x4244>
    8e30:	ldr	x0, [x0, #32]
    8e34:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    8e38:	ldr	x2, [x2, #4024]
    8e3c:	add	x1, x1, #0xe28
    8e40:	b	8214 <PyNumber_FloorDivide@plt+0x3614>
    8e44:	ldr	x0, [x2, #4024]
    8e48:	b	8e34 <PyNumber_FloorDivide@plt+0x4234>
    8e4c:	stp	x29, x30, [sp, #-64]!
    8e50:	mov	x29, sp
    8e54:	stp	x23, x24, [sp, #48]
    8e58:	mov	x23, x0
    8e5c:	adrp	x24, 22000 <PyInit__datetime@@Base+0x15918>
    8e60:	ldr	x0, [x1, #8]
    8e64:	stp	x19, x20, [sp, #16]
    8e68:	mov	w19, w2
    8e6c:	add	x2, x24, #0x298
    8e70:	stp	x21, x22, [sp, #32]
    8e74:	mov	x22, x1
    8e78:	add	x1, x2, #0x340
    8e7c:	cmp	x0, x1
    8e80:	b.eq	8eb8 <PyNumber_FloorDivide@plt+0x42b8>  // b.none
    8e84:	bl	4b30 <PyType_IsSubtype@plt>
    8e88:	cbnz	w0, 8eb8 <PyNumber_FloorDivide@plt+0x42b8>
    8e8c:	adrp	x20, 21000 <PyInit__datetime@@Base+0x14918>
    8e90:	ldr	x20, [x20, #3960]
    8e94:	ldr	x0, [x20]
    8e98:	add	x0, x0, #0x1
    8e9c:	str	x0, [x20]
    8ea0:	mov	x0, x20
    8ea4:	ldp	x19, x20, [sp, #16]
    8ea8:	ldp	x21, x22, [sp, #32]
    8eac:	ldp	x23, x24, [sp, #48]
    8eb0:	ldp	x29, x30, [sp], #64
    8eb4:	ret
    8eb8:	ldrb	w0, [x23, #24]
    8ebc:	cbz	w0, 8f00 <PyNumber_FloorDivide@plt+0x4300>
    8ec0:	ldr	x1, [x23, #32]
    8ec4:	ldrb	w0, [x22, #24]
    8ec8:	cbz	w0, 8f0c <PyNumber_FloorDivide@plt+0x430c>
    8ecc:	ldr	x0, [x22, #32]
    8ed0:	cmp	x1, x0
    8ed4:	b.ne	8f18 <PyNumber_FloorDivide@plt+0x4318>  // b.any
    8ed8:	add	x1, x22, #0x19
    8edc:	add	x0, x23, #0x19
    8ee0:	mov	x2, #0x6                   	// #6
    8ee4:	bl	49e0 <memcmp@plt>
    8ee8:	mov	w1, w19
    8eec:	ldp	x19, x20, [sp, #16]
    8ef0:	ldp	x21, x22, [sp, #32]
    8ef4:	ldp	x23, x24, [sp, #48]
    8ef8:	ldp	x29, x30, [sp], #64
    8efc:	b	5468 <PyNumber_FloorDivide@plt+0x868>
    8f00:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    8f04:	ldr	x1, [x1, #4024]
    8f08:	b	8ec4 <PyNumber_FloorDivide@plt+0x42c4>
    8f0c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    8f10:	ldr	x0, [x0, #4024]
    8f14:	b	8ed0 <PyNumber_FloorDivide@plt+0x42d0>
    8f18:	mov	x0, x23
    8f1c:	mov	x1, #0x0                   	// #0
    8f20:	bl	8e24 <PyNumber_FloorDivide@plt+0x4224>
    8f24:	mov	x20, x0
    8f28:	cbz	x0, 8ea0 <PyNumber_FloorDivide@plt+0x42a0>
    8f2c:	mov	x0, x22
    8f30:	mov	x1, #0x0                   	// #0
    8f34:	bl	8e24 <PyNumber_FloorDivide@plt+0x4224>
    8f38:	mov	x21, x0
    8f3c:	cbz	x0, 90c0 <PyNumber_FloorDivide@plt+0x44c0>
    8f40:	cmp	x20, x0
    8f44:	b.ne	8f7c <PyNumber_FloorDivide@plt+0x437c>  // b.any
    8f48:	add	x1, x22, #0x19
    8f4c:	add	x0, x23, #0x19
    8f50:	mov	x2, #0x6                   	// #6
    8f54:	bl	49e0 <memcmp@plt>
    8f58:	mov	w1, w19
    8f5c:	bl	5468 <PyNumber_FloorDivide@plt+0x868>
    8f60:	mov	x19, x0
    8f64:	mov	x0, x20
    8f68:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    8f6c:	mov	x0, x21
    8f70:	mov	x20, x19
    8f74:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    8f78:	b	8ea0 <PyNumber_FloorDivide@plt+0x42a0>
    8f7c:	ldr	x0, [x20, #8]
    8f80:	add	x1, x24, #0x298
    8f84:	cmp	x0, x1
    8f88:	b.ne	8fb0 <PyNumber_FloorDivide@plt+0x43b0>  // b.any
    8f8c:	ldr	x0, [x21, #8]
    8f90:	add	x1, x24, #0x298
    8f94:	cmp	x0, x1
    8f98:	b.ne	9068 <PyNumber_FloorDivide@plt+0x4468>  // b.any
    8f9c:	mov	x1, x21
    8fa0:	mov	x0, x20
    8fa4:	bl	58e8 <PyNumber_FloorDivide@plt+0xce8>
    8fa8:	cbz	w0, 8f48 <PyNumber_FloorDivide@plt+0x4348>
    8fac:	b	8fb8 <PyNumber_FloorDivide@plt+0x43b8>
    8fb0:	bl	4b30 <PyType_IsSubtype@plt>
    8fb4:	cbnz	w0, 8f8c <PyNumber_FloorDivide@plt+0x438c>
    8fb8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    8fbc:	ldr	x0, [x0, #4024]
    8fc0:	cmp	x20, x0
    8fc4:	b.eq	9074 <PyNumber_FloorDivide@plt+0x4474>  // b.none
    8fc8:	cmp	x21, x0
    8fcc:	b.eq	9074 <PyNumber_FloorDivide@plt+0x4474>  // b.none
    8fd0:	ldrb	w2, [x23, #26]
    8fd4:	mov	w5, #0x3c                  	// #60
    8fd8:	ldrb	w3, [x23, #25]
    8fdc:	mov	w4, #0xe10                 	// #3600
    8fe0:	ldrb	w1, [x22, #27]
    8fe4:	ldrb	w0, [x23, #27]
    8fe8:	mul	w2, w2, w5
    8fec:	madd	w3, w3, w4, w2
    8ff0:	sub	w0, w0, w1
    8ff4:	ldrb	w1, [x22, #26]
    8ff8:	add	w3, w3, w0
    8ffc:	ldrb	w0, [x22, #25]
    9000:	mul	w1, w1, w5
    9004:	madd	w0, w0, w4, w1
    9008:	mov	w1, #0xae80                	// #44672
    900c:	sub	w0, w3, w0
    9010:	movk	w1, #0xfffe, lsl #16
    9014:	ldp	w3, w2, [x20, #24]
    9018:	madd	w3, w3, w1, w0
    901c:	sub	w3, w3, w2
    9020:	ldp	w0, w2, [x21, #24]
    9024:	msub	w0, w0, w1, w2
    9028:	adds	w0, w3, w0
    902c:	b.ne	8f58 <PyNumber_FloorDivide@plt+0x4358>  // b.any
    9030:	ldrb	w0, [x23, #29]
    9034:	ldrb	w2, [x22, #29]
    9038:	ldrb	w3, [x23, #28]
    903c:	ldrb	w1, [x22, #28]
    9040:	lsl	w0, w0, #8
    9044:	lsl	w2, w2, #8
    9048:	orr	w3, w0, w3, lsl #16
    904c:	ldrb	w0, [x23, #30]
    9050:	orr	w1, w2, w1, lsl #16
    9054:	ldrb	w2, [x22, #30]
    9058:	orr	w0, w3, w0
    905c:	orr	w1, w1, w2
    9060:	sub	w0, w0, w1
    9064:	b	8f58 <PyNumber_FloorDivide@plt+0x4358>
    9068:	bl	4b30 <PyType_IsSubtype@plt>
    906c:	cbnz	w0, 8f9c <PyNumber_FloorDivide@plt+0x439c>
    9070:	b	8fb8 <PyNumber_FloorDivide@plt+0x43b8>
    9074:	cmp	w19, #0x2
    9078:	b.ne	9094 <PyNumber_FloorDivide@plt+0x4494>  // b.any
    907c:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    9080:	ldr	x19, [x19, #3992]
    9084:	ldr	x0, [x19]
    9088:	add	x0, x0, #0x1
    908c:	str	x0, [x19]
    9090:	b	8f64 <PyNumber_FloorDivide@plt+0x4364>
    9094:	cmp	w19, #0x3
    9098:	b.ne	90a8 <PyNumber_FloorDivide@plt+0x44a8>  // b.any
    909c:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    90a0:	ldr	x19, [x19, #4040]
    90a4:	b	9084 <PyNumber_FloorDivide@plt+0x4484>
    90a8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    90ac:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    90b0:	add	x1, x1, #0x5d6
    90b4:	ldr	x0, [x0, #3976]
    90b8:	ldr	x0, [x0]
    90bc:	bl	4880 <PyErr_SetString@plt>
    90c0:	mov	x19, #0x0                   	// #0
    90c4:	b	8f64 <PyNumber_FloorDivide@plt+0x4364>
    90c8:	stp	x29, x30, [sp, #-64]!
    90cc:	mov	x29, sp
    90d0:	stp	x21, x22, [sp, #32]
    90d4:	ldr	x22, [x0, #16]
    90d8:	stp	x19, x20, [sp, #16]
    90dc:	mov	x19, x0
    90e0:	str	x23, [sp, #48]
    90e4:	cmn	x22, #0x1
    90e8:	b.ne	91b0 <PyNumber_FloorDivide@plt+0x45b0>  // b.any
    90ec:	ldrb	w0, [x0, #31]
    90f0:	cbz	w0, 915c <PyNumber_FloorDivide@plt+0x455c>
    90f4:	ldrb	w4, [x19, #29]
    90f8:	ldrb	w3, [x19, #28]
    90fc:	ldrb	w0, [x19, #25]
    9100:	lsl	w4, w4, #8
    9104:	ldrb	w1, [x19, #26]
    9108:	orr	w3, w4, w3, lsl #16
    910c:	ldrb	w4, [x19, #30]
    9110:	ldrb	w2, [x19, #27]
    9114:	orr	w3, w3, w4
    9118:	ldrb	w4, [x19, #24]
    911c:	cbz	w4, 9150 <PyNumber_FloorDivide@plt+0x4550>
    9120:	ldr	x4, [x19, #32]
    9124:	mov	w5, #0x0                   	// #0
    9128:	ldr	x6, [x19, #8]
    912c:	bl	6048 <PyNumber_FloorDivide@plt+0x1448>
    9130:	mov	x21, x0
    9134:	cbnz	x0, 916c <PyNumber_FloorDivide@plt+0x456c>
    9138:	mov	x0, x22
    913c:	ldp	x19, x20, [sp, #16]
    9140:	ldp	x21, x22, [sp, #32]
    9144:	ldr	x23, [sp, #48]
    9148:	ldp	x29, x30, [sp], #64
    914c:	ret
    9150:	adrp	x4, 21000 <PyInit__datetime@@Base+0x14918>
    9154:	ldr	x4, [x4, #4024]
    9158:	b	9124 <PyNumber_FloorDivide@plt+0x4524>
    915c:	ldr	x0, [x19]
    9160:	mov	x21, x19
    9164:	add	x0, x0, #0x1
    9168:	str	x0, [x19]
    916c:	mov	x1, #0x0                   	// #0
    9170:	mov	x0, x21
    9174:	bl	8e24 <PyNumber_FloorDivide@plt+0x4224>
    9178:	mov	x20, x0
    917c:	mov	x0, x21
    9180:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9184:	cbz	x20, 9138 <PyNumber_FloorDivide@plt+0x4538>
    9188:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    918c:	ldr	x0, [x0, #4024]
    9190:	cmp	x20, x0
    9194:	b.ne	91b8 <PyNumber_FloorDivide@plt+0x45b8>  // b.any
    9198:	add	x0, x19, #0x19
    919c:	mov	x1, #0x6                   	// #6
    91a0:	bl	48b0 <_Py_HashBytes@plt>
    91a4:	str	x0, [x19, #16]
    91a8:	mov	x0, x20
    91ac:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    91b0:	ldr	x22, [x19, #16]
    91b4:	b	9138 <PyNumber_FloorDivide@plt+0x4538>
    91b8:	ldrb	w0, [x19, #29]
    91bc:	mov	w3, #0x3c                  	// #60
    91c0:	ldrb	w2, [x19, #28]
    91c4:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    91c8:	ldrb	w1, [x19, #26]
    91cc:	add	x4, x4, #0x298
    91d0:	lsl	w0, w0, #8
    91d4:	ldrb	w5, [x19, #30]
    91d8:	orr	w2, w0, w2, lsl #16
    91dc:	ldrb	w0, [x19, #25]
    91e0:	orr	w2, w2, w5
    91e4:	mul	w1, w1, w3
    91e8:	mov	w3, #0xe10                 	// #3600
    91ec:	madd	w0, w0, w3, w1
    91f0:	ldrb	w1, [x19, #27]
    91f4:	mov	w3, #0x1                   	// #1
    91f8:	add	w1, w0, w1
    91fc:	mov	w0, #0x0                   	// #0
    9200:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    9204:	mov	x23, x0
    9208:	cbnz	x0, 9218 <PyNumber_FloorDivide@plt+0x4618>
    920c:	mov	x0, x20
    9210:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9214:	b	9138 <PyNumber_FloorDivide@plt+0x4538>
    9218:	mov	x1, x20
    921c:	bl	5de8 <PyNumber_FloorDivide@plt+0x11e8>
    9220:	mov	x21, x0
    9224:	mov	x0, x23
    9228:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    922c:	cbz	x21, 920c <PyNumber_FloorDivide@plt+0x460c>
    9230:	mov	x0, x21
    9234:	bl	4a50 <PyObject_Hash@plt>
    9238:	str	x0, [x19, #16]
    923c:	mov	x0, x21
    9240:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9244:	b	91a8 <PyNumber_FloorDivide@plt+0x45a8>
    9248:	ldrb	w1, [x0, #24]
    924c:	adrp	x2, 21000 <PyInit__datetime@@Base+0x14918>
    9250:	cbz	w1, 9268 <PyNumber_FloorDivide@plt+0x4668>
    9254:	ldr	x0, [x0, #32]
    9258:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    925c:	ldr	x2, [x2, #4024]
    9260:	add	x1, x1, #0x3a
    9264:	b	8214 <PyNumber_FloorDivide@plt+0x3614>
    9268:	ldr	x0, [x2, #4024]
    926c:	b	9258 <PyNumber_FloorDivide@plt+0x4658>
    9270:	stp	x29, x30, [sp, #-16]!
    9274:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    9278:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    927c:	mov	x29, sp
    9280:	ldr	x0, [x0, #3928]
    9284:	add	x2, x2, #0x3a
    9288:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    928c:	add	x1, x1, #0xe32
    9290:	ldr	x0, [x0]
    9294:	bl	4b60 <PyErr_Format@plt>
    9298:	mov	x0, #0x0                   	// #0
    929c:	ldp	x29, x30, [sp], #16
    92a0:	ret
    92a4:	stp	x29, x30, [sp, #-16]!
    92a8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    92ac:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    92b0:	mov	x29, sp
    92b4:	ldr	x0, [x0, #3928]
    92b8:	add	x2, x2, #0x499
    92bc:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    92c0:	add	x1, x1, #0xe32
    92c4:	ldr	x0, [x0]
    92c8:	bl	4b60 <PyErr_Format@plt>
    92cc:	mov	x0, #0x0                   	// #0
    92d0:	ldp	x29, x30, [sp], #16
    92d4:	ret
    92d8:	stp	x29, x30, [sp, #-64]!
    92dc:	mov	x29, sp
    92e0:	stp	x19, x20, [sp, #16]
    92e4:	adrp	x19, 22000 <PyInit__datetime@@Base+0x15918>
    92e8:	add	x1, x19, #0xab8
    92ec:	add	x2, sp, #0x30
    92f0:	add	x1, x1, #0x348
    92f4:	str	x21, [sp, #32]
    92f8:	mov	x21, x0
    92fc:	bl	4760 <_PyObject_LookupAttrId@plt>
    9300:	tbz	w0, #31, 931c <PyNumber_FloorDivide@plt+0x471c>
    9304:	mov	x19, #0x0                   	// #0
    9308:	mov	x0, x19
    930c:	ldp	x19, x20, [sp, #16]
    9310:	ldr	x21, [sp, #32]
    9314:	ldp	x29, x30, [sp], #64
    9318:	ret
    931c:	ldr	x0, [sp, #48]
    9320:	cbz	x0, 935c <PyNumber_FloorDivide@plt+0x475c>
    9324:	bl	8c18 <PyNumber_FloorDivide@plt+0x4018>
    9328:	mov	x20, x0
    932c:	ldr	x0, [sp, #48]
    9330:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9334:	cbz	x20, 9304 <PyNumber_FloorDivide@plt+0x4704>
    9338:	add	x19, x19, #0xab8
    933c:	add	x2, sp, #0x38
    9340:	add	x1, x19, #0x360
    9344:	mov	x0, x21
    9348:	bl	4760 <_PyObject_LookupAttrId@plt>
    934c:	tbz	w0, #31, 936c <PyNumber_FloorDivide@plt+0x476c>
    9350:	mov	x0, x20
    9354:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9358:	b	9304 <PyNumber_FloorDivide@plt+0x4704>
    935c:	mov	x0, #0x0                   	// #0
    9360:	bl	4970 <PyTuple_New@plt>
    9364:	mov	x20, x0
    9368:	b	9334 <PyNumber_FloorDivide@plt+0x4734>
    936c:	ldr	x0, [sp, #56]
    9370:	cbz	x0, 9394 <PyNumber_FloorDivide@plt+0x4794>
    9374:	bl	8c18 <PyNumber_FloorDivide@plt+0x4018>
    9378:	mov	x19, x0
    937c:	ldr	x0, [sp, #56]
    9380:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9384:	cbnz	x19, 93c0 <PyNumber_FloorDivide@plt+0x47c0>
    9388:	mov	x0, x20
    938c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9390:	b	9308 <PyNumber_FloorDivide@plt+0x4708>
    9394:	mov	x0, x21
    9398:	bl	4ac0 <_PyObject_GetDictPtr@plt>
    939c:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    93a0:	cbz	x0, 93f4 <PyNumber_FloorDivide@plt+0x47f4>
    93a4:	ldr	x19, [x0]
    93a8:	cbz	x19, 93f4 <PyNumber_FloorDivide@plt+0x47f4>
    93ac:	ldr	x0, [x19, #16]
    93b0:	cbz	x0, 93f4 <PyNumber_FloorDivide@plt+0x47f4>
    93b4:	ldr	x0, [x19]
    93b8:	add	x0, x0, #0x1
    93bc:	str	x0, [x19]
    93c0:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    93c4:	ldr	x0, [x0, #4024]
    93c8:	cmp	x19, x0
    93cc:	b.ne	93fc <PyNumber_FloorDivide@plt+0x47fc>  // b.any
    93d0:	mov	x0, x19
    93d4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    93d8:	ldr	x1, [x21, #8]
    93dc:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    93e0:	mov	x2, x20
    93e4:	add	x0, x0, #0xf09
    93e8:	bl	49a0 <Py_BuildValue@plt>
    93ec:	mov	x19, x0
    93f0:	b	9308 <PyNumber_FloorDivide@plt+0x4708>
    93f4:	ldr	x19, [x1, #4024]
    93f8:	b	93b4 <PyNumber_FloorDivide@plt+0x47b4>
    93fc:	ldr	x1, [x21, #8]
    9400:	mov	x3, x19
    9404:	mov	x2, x20
    9408:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    940c:	add	x0, x0, #0x608
    9410:	bl	49a0 <Py_BuildValue@plt>
    9414:	b	93ec <PyNumber_FloorDivide@plt+0x47ec>
    9418:	stp	x29, x30, [sp, #-48]!
    941c:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    9420:	mov	x29, sp
    9424:	stp	x19, x20, [sp, #16]
    9428:	mov	x20, x0
    942c:	mov	x19, x1
    9430:	ldr	x0, [x1, #8]
    9434:	str	x21, [sp, #32]
    9438:	add	x1, x3, #0x298
    943c:	mov	w21, w2
    9440:	cmp	x0, x1
    9444:	b.ne	9468 <PyNumber_FloorDivide@plt+0x4868>  // b.any
    9448:	mov	x1, x19
    944c:	mov	x0, x20
    9450:	bl	58e8 <PyNumber_FloorDivide@plt+0xce8>
    9454:	mov	w1, w21
    9458:	ldp	x19, x20, [sp, #16]
    945c:	ldr	x21, [sp, #32]
    9460:	ldp	x29, x30, [sp], #48
    9464:	b	5468 <PyNumber_FloorDivide@plt+0x868>
    9468:	bl	4b30 <PyType_IsSubtype@plt>
    946c:	cbnz	w0, 9448 <PyNumber_FloorDivide@plt+0x4848>
    9470:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    9474:	ldp	x19, x20, [sp, #16]
    9478:	ldr	x0, [x0, #3960]
    947c:	ldr	x21, [sp, #32]
    9480:	ldr	x1, [x0]
    9484:	add	x1, x1, #0x1
    9488:	str	x1, [x0]
    948c:	ldp	x29, x30, [sp], #48
    9490:	ret
    9494:	stp	x29, x30, [sp, #-48]!
    9498:	mov	x29, sp
    949c:	stp	x19, x20, [sp, #16]
    94a0:	str	x21, [sp, #32]
    94a4:	mov	x21, x0
    94a8:	sub	w0, w2, #0x2
    94ac:	cmp	w0, #0x1
    94b0:	b.ls	94d8 <PyNumber_FloorDivide@plt+0x48d8>  // b.plast
    94b4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    94b8:	ldp	x19, x20, [sp, #16]
    94bc:	ldr	x0, [x0, #3960]
    94c0:	ldr	x21, [sp, #32]
    94c4:	ldr	x1, [x0]
    94c8:	add	x1, x1, #0x1
    94cc:	str	x1, [x0]
    94d0:	ldp	x29, x30, [sp], #48
    94d4:	ret
    94d8:	mov	x19, x1
    94dc:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    94e0:	add	x1, x1, #0xab8
    94e4:	mov	w20, w2
    94e8:	ldr	x0, [x19, #8]
    94ec:	cmp	x0, x1
    94f0:	b.eq	94fc <PyNumber_FloorDivide@plt+0x48fc>  // b.none
    94f4:	bl	4b30 <PyType_IsSubtype@plt>
    94f8:	cbz	w0, 94b4 <PyNumber_FloorDivide@plt+0x48b4>
    94fc:	mov	w2, w20
    9500:	ldr	x1, [x19, #16]
    9504:	ldr	x0, [x21, #16]
    9508:	ldp	x19, x20, [sp, #16]
    950c:	ldr	x21, [sp, #32]
    9510:	ldp	x29, x30, [sp], #48
    9514:	b	9418 <PyNumber_FloorDivide@plt+0x4818>
    9518:	stp	x29, x30, [sp, #-48]!
    951c:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    9520:	add	x3, x3, #0x298
    9524:	mov	x29, sp
    9528:	stp	x19, x20, [sp, #16]
    952c:	mov	x20, x0
    9530:	mov	x19, x1
    9534:	ldr	x0, [x1, #8]
    9538:	str	x21, [sp, #32]
    953c:	add	x1, x3, #0x680
    9540:	mov	w21, w2
    9544:	cmp	x0, x1
    9548:	b.ne	9570 <PyNumber_FloorDivide@plt+0x4970>  // b.any
    954c:	add	x1, x19, #0x19
    9550:	add	x0, x20, #0x19
    9554:	mov	x2, #0x4                   	// #4
    9558:	bl	49e0 <memcmp@plt>
    955c:	mov	w1, w21
    9560:	ldp	x19, x20, [sp, #16]
    9564:	ldr	x21, [sp, #32]
    9568:	ldp	x29, x30, [sp], #48
    956c:	b	5468 <PyNumber_FloorDivide@plt+0x868>
    9570:	bl	4b30 <PyType_IsSubtype@plt>
    9574:	cbnz	w0, 954c <PyNumber_FloorDivide@plt+0x494c>
    9578:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    957c:	ldp	x19, x20, [sp, #16]
    9580:	ldr	x0, [x0, #3960]
    9584:	ldr	x21, [sp, #32]
    9588:	ldr	x1, [x0]
    958c:	add	x1, x1, #0x1
    9590:	str	x1, [x0]
    9594:	ldp	x29, x30, [sp], #48
    9598:	ret
    959c:	sub	sp, sp, #0x60
    95a0:	stp	x29, x30, [sp, #16]
    95a4:	add	x29, sp, #0x10
    95a8:	stp	x19, x20, [sp, #32]
    95ac:	mov	x20, x0
    95b0:	mov	x0, x2
    95b4:	mov	x2, x3
    95b8:	stp	x21, x22, [sp, #48]
    95bc:	mov	x21, x1
    95c0:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    95c4:	add	x1, x1, #0xe28
    95c8:	str	x23, [sp, #64]
    95cc:	bl	8214 <PyNumber_FloorDivide@plt+0x3614>
    95d0:	cbnz	x0, 95f4 <PyNumber_FloorDivide@plt+0x49f4>
    95d4:	mov	w19, #0xffffffff            	// #-1
    95d8:	mov	w0, w19
    95dc:	ldp	x29, x30, [sp, #16]
    95e0:	ldp	x19, x20, [sp, #32]
    95e4:	ldp	x21, x22, [sp, #48]
    95e8:	ldr	x23, [sp, #64]
    95ec:	add	sp, sp, #0x60
    95f0:	ret
    95f4:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    95f8:	mov	x19, x0
    95fc:	ldr	x1, [x1, #4024]
    9600:	cmp	x0, x1
    9604:	b.ne	9618 <PyNumber_FloorDivide@plt+0x4a18>  // b.any
    9608:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    960c:	strb	wzr, [x20]
    9610:	mov	w19, #0x0                   	// #0
    9614:	b	95d8 <PyNumber_FloorDivide@plt+0x49d8>
    9618:	ldr	w1, [x0, #24]
    961c:	tbz	w1, #31, 96a8 <PyNumber_FloorDivide@plt+0x4aa8>
    9620:	bl	541c <PyNumber_FloorDivide@plt+0x81c>
    9624:	mov	x22, x0
    9628:	mov	x0, x19
    962c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9630:	cbz	x22, 95d4 <PyNumber_FloorDivide@plt+0x49d4>
    9634:	mov	x19, x22
    9638:	mov	w22, #0x2d                  	// #45
    963c:	ldp	w0, w23, [x19, #28]
    9640:	str	w0, [sp, #92]
    9644:	mov	x0, x19
    9648:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    964c:	ldr	w0, [sp, #92]
    9650:	add	x2, sp, #0x5c
    9654:	mov	w1, #0x3c                  	// #60
    9658:	bl	4ce4 <PyNumber_FloorDivide@plt+0xe4>
    965c:	str	w0, [sp, #88]
    9660:	add	x2, sp, #0x58
    9664:	mov	w1, #0x3c                  	// #60
    9668:	bl	4ce4 <PyNumber_FloorDivide@plt+0xe4>
    966c:	ldr	w19, [sp, #92]
    9670:	mov	w4, w0
    9674:	cbz	w23, 96b0 <PyNumber_FloorDivide@plt+0x4ab0>
    9678:	ldr	w6, [sp, #88]
    967c:	mov	x7, x21
    9680:	str	w19, [sp]
    9684:	mov	x5, x21
    9688:	str	w23, [sp, #8]
    968c:	mov	w3, w22
    9690:	mov	x0, x20
    9694:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    9698:	mov	x1, #0x64                  	// #100
    969c:	add	x2, x2, #0x60e
    96a0:	bl	48c0 <PyOS_snprintf@plt>
    96a4:	b	9610 <PyNumber_FloorDivide@plt+0x4a10>
    96a8:	mov	w22, #0x2b                  	// #43
    96ac:	b	963c <PyNumber_FloorDivide@plt+0x4a3c>
    96b0:	ldr	w6, [sp, #88]
    96b4:	cbz	w19, 96e0 <PyNumber_FloorDivide@plt+0x4ae0>
    96b8:	str	w19, [sp]
    96bc:	mov	x7, x21
    96c0:	mov	x5, x21
    96c4:	mov	w3, w22
    96c8:	mov	x0, x20
    96cc:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    96d0:	mov	x1, #0x64                  	// #100
    96d4:	add	x2, x2, #0x626
    96d8:	bl	48c0 <PyOS_snprintf@plt>
    96dc:	b	9610 <PyNumber_FloorDivide@plt+0x4a10>
    96e0:	mov	x5, x21
    96e4:	mov	w3, w22
    96e8:	mov	x0, x20
    96ec:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    96f0:	mov	x1, #0x64                  	// #100
    96f4:	add	x2, x2, #0x639
    96f8:	bl	48c0 <PyOS_snprintf@plt>
    96fc:	b	95d8 <PyNumber_FloorDivide@plt+0x49d8>
    9700:	sub	sp, sp, #0xd0
    9704:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    9708:	add	x3, x3, #0xab8
    970c:	add	x5, sp, #0x58
    9710:	add	x4, sp, #0x54
    9714:	add	x3, x3, #0x378
    9718:	stp	x29, x30, [sp, #16]
    971c:	add	x29, sp, #0x10
    9720:	stp	x19, x20, [sp, #32]
    9724:	mov	x19, x0
    9728:	mov	x0, x1
    972c:	stp	x21, x22, [sp, #48]
    9730:	mov	x1, x2
    9734:	mov	w2, #0x54                  	// #84
    9738:	stp	x23, x24, [sp, #64]
    973c:	str	w2, [sp, #84]
    9740:	ldrb	w2, [x19, #33]
    9744:	ldrb	w21, [x19, #32]
    9748:	stp	xzr, xzr, [sp, #88]
    974c:	lsl	w2, w2, #8
    9750:	orr	w21, w2, w21, lsl #16
    9754:	ldrb	w2, [x19, #34]
    9758:	orr	w21, w21, w2
    975c:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    9760:	add	x2, x2, #0x646
    9764:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    9768:	cbnz	w0, 9774 <PyNumber_FloorDivide@plt+0x4b74>
    976c:	mov	x0, #0x0                   	// #0
    9770:	b	9888 <PyNumber_FloorDivide@plt+0x4c88>
    9774:	ldr	x23, [sp, #88]
    9778:	adrp	x22, 21000 <PyInit__datetime@@Base+0x14918>
    977c:	cbz	x23, 9794 <PyNumber_FloorDivide@plt+0x4b94>
    9780:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    9784:	mov	x0, x23
    9788:	add	x1, x1, #0x654
    978c:	bl	49f0 <strcmp@plt>
    9790:	cbnz	w0, 9818 <PyNumber_FloorDivide@plt+0x4c18>
    9794:	cmp	w21, #0x0
    9798:	mov	x20, #0x2                   	// #2
    979c:	mov	x0, #0x4                   	// #4
    97a0:	csel	x20, x20, x0, eq  // eq = none
    97a4:	add	x22, x22, #0xc18
    97a8:	ldrb	w7, [x19, #31]
    97ac:	add	x20, x22, x20, lsl #4
    97b0:	ldrb	w6, [x19, #30]
    97b4:	ldrb	w5, [x19, #29]
    97b8:	ldrb	w3, [x19, #28]
    97bc:	ldrb	w2, [x19, #27]
    97c0:	ldr	w4, [sp, #84]
    97c4:	ldr	x0, [x20, #8]
    97c8:	ldurh	w1, [x19, #25]
    97cc:	str	w21, [sp]
    97d0:	rev16	w1, w1
    97d4:	and	w1, w1, #0xffff
    97d8:	bl	4700 <PyUnicode_FromFormat@plt>
    97dc:	str	x0, [sp, #96]
    97e0:	cbz	x0, 976c <PyNumber_FloorDivide@plt+0x4b6c>
    97e4:	ldrb	w1, [x19, #24]
    97e8:	cbz	w1, 9888 <PyNumber_FloorDivide@plt+0x4c88>
    97ec:	ldr	x2, [x19, #40]
    97f0:	add	x20, sp, #0x68
    97f4:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    97f8:	mov	x3, x19
    97fc:	add	x1, x1, #0x659
    9800:	mov	x0, x20
    9804:	bl	959c <PyNumber_FloorDivide@plt+0x499c>
    9808:	tbz	w0, #31, 9870 <PyNumber_FloorDivide@plt+0x4c70>
    980c:	ldr	x0, [sp, #96]
    9810:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9814:	b	976c <PyNumber_FloorDivide@plt+0x4b6c>
    9818:	add	x24, x22, #0xc18
    981c:	mov	x20, #0x0                   	// #0
    9820:	lsl	x0, x20, #4
    9824:	ldr	x1, [x0, x24]
    9828:	mov	x0, x23
    982c:	bl	49f0 <strcmp@plt>
    9830:	cbnz	w0, 9848 <PyNumber_FloorDivide@plt+0x4c48>
    9834:	cmp	x20, #0x3
    9838:	b.ne	97a4 <PyNumber_FloorDivide@plt+0x4ba4>  // b.any
    983c:	mov	w0, #0x3e8                 	// #1000
    9840:	udiv	w21, w21, w0
    9844:	b	97a4 <PyNumber_FloorDivide@plt+0x4ba4>
    9848:	add	x20, x20, #0x1
    984c:	cmp	x20, #0x5
    9850:	b.ne	9820 <PyNumber_FloorDivide@plt+0x4c20>  // b.any
    9854:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    9858:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    985c:	add	x1, x1, #0x65b
    9860:	ldr	x0, [x0, #3968]
    9864:	ldr	x0, [x0]
    9868:	bl	4b60 <PyErr_Format@plt>
    986c:	b	976c <PyNumber_FloorDivide@plt+0x4b6c>
    9870:	mov	x0, x20
    9874:	bl	4ad0 <PyUnicode_FromString@plt>
    9878:	mov	x1, x0
    987c:	add	x0, sp, #0x60
    9880:	bl	4ba0 <PyUnicode_AppendAndDel@plt>
    9884:	ldr	x0, [sp, #96]
    9888:	ldp	x29, x30, [sp, #16]
    988c:	ldp	x19, x20, [sp, #32]
    9890:	ldp	x21, x22, [sp, #48]
    9894:	ldp	x23, x24, [sp, #64]
    9898:	add	sp, sp, #0xd0
    989c:	ret
    98a0:	stp	x29, x30, [sp, #-192]!
    98a4:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    98a8:	add	x3, x3, #0xab8
    98ac:	mov	x29, sp
    98b0:	stp	x19, x20, [sp, #16]
    98b4:	mov	x20, x0
    98b8:	mov	x0, x1
    98bc:	stp	x21, x22, [sp, #32]
    98c0:	mov	x1, x2
    98c4:	add	x4, sp, #0x48
    98c8:	stp	x23, x24, [sp, #48]
    98cc:	add	x3, x3, #0x390
    98d0:	ldrb	w2, [x20, #29]
    98d4:	ldrb	w21, [x20, #28]
    98d8:	str	xzr, [sp, #72]
    98dc:	lsl	w2, w2, #8
    98e0:	orr	w21, w2, w21, lsl #16
    98e4:	ldrb	w2, [x20, #30]
    98e8:	orr	w21, w21, w2
    98ec:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    98f0:	add	x2, x2, #0x672
    98f4:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    98f8:	cbnz	w0, 9904 <PyNumber_FloorDivide@plt+0x4d04>
    98fc:	mov	x0, #0x0                   	// #0
    9900:	b	9a10 <PyNumber_FloorDivide@plt+0x4e10>
    9904:	ldr	x23, [sp, #72]
    9908:	adrp	x22, 21000 <PyInit__datetime@@Base+0x14918>
    990c:	cbz	x23, 9924 <PyNumber_FloorDivide@plt+0x4d24>
    9910:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    9914:	mov	x0, x23
    9918:	add	x1, x1, #0x654
    991c:	bl	49f0 <strcmp@plt>
    9920:	cbnz	w0, 999c <PyNumber_FloorDivide@plt+0x4d9c>
    9924:	cmp	w21, #0x0
    9928:	mov	x19, #0x2                   	// #2
    992c:	mov	x0, #0x4                   	// #4
    9930:	csel	x19, x19, x0, eq  // eq = none
    9934:	add	x22, x22, #0xc18
    9938:	ldrb	w3, [x20, #27]
    993c:	add	x19, x22, x19, lsl #4
    9940:	ldrb	w2, [x20, #26]
    9944:	ldrb	w1, [x20, #25]
    9948:	mov	w4, w21
    994c:	ldr	x0, [x19, #88]
    9950:	bl	4700 <PyUnicode_FromFormat@plt>
    9954:	str	x0, [sp, #80]
    9958:	cbz	x0, 98fc <PyNumber_FloorDivide@plt+0x4cfc>
    995c:	ldrb	w1, [x20, #24]
    9960:	cbz	w1, 9a10 <PyNumber_FloorDivide@plt+0x4e10>
    9964:	adrp	x3, 21000 <PyInit__datetime@@Base+0x14918>
    9968:	ldr	x2, [x20, #32]
    996c:	ldr	x3, [x3, #4024]
    9970:	cmp	x2, x3
    9974:	b.eq	9a10 <PyNumber_FloorDivide@plt+0x4e10>  // b.none
    9978:	add	x19, sp, #0x58
    997c:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    9980:	mov	x0, x19
    9984:	add	x1, x1, #0x659
    9988:	bl	959c <PyNumber_FloorDivide@plt+0x499c>
    998c:	tbz	w0, #31, 99f8 <PyNumber_FloorDivide@plt+0x4df8>
    9990:	ldr	x0, [sp, #80]
    9994:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9998:	b	98fc <PyNumber_FloorDivide@plt+0x4cfc>
    999c:	add	x24, x22, #0xc18
    99a0:	mov	x19, #0x0                   	// #0
    99a4:	add	x24, x24, #0x50
    99a8:	lsl	x0, x19, #4
    99ac:	ldr	x1, [x0, x24]
    99b0:	mov	x0, x23
    99b4:	bl	49f0 <strcmp@plt>
    99b8:	cbnz	w0, 99d0 <PyNumber_FloorDivide@plt+0x4dd0>
    99bc:	cmp	x19, #0x3
    99c0:	b.ne	9934 <PyNumber_FloorDivide@plt+0x4d34>  // b.any
    99c4:	mov	w0, #0x3e8                 	// #1000
    99c8:	udiv	w21, w21, w0
    99cc:	b	9934 <PyNumber_FloorDivide@plt+0x4d34>
    99d0:	add	x19, x19, #0x1
    99d4:	cmp	x19, #0x5
    99d8:	b.ne	99a8 <PyNumber_FloorDivide@plt+0x4da8>  // b.any
    99dc:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    99e0:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    99e4:	add	x1, x1, #0x65b
    99e8:	ldr	x0, [x0, #3968]
    99ec:	ldr	x0, [x0]
    99f0:	bl	4b60 <PyErr_Format@plt>
    99f4:	b	98fc <PyNumber_FloorDivide@plt+0x4cfc>
    99f8:	mov	x0, x19
    99fc:	bl	4ad0 <PyUnicode_FromString@plt>
    9a00:	mov	x1, x0
    9a04:	add	x0, sp, #0x50
    9a08:	bl	4ba0 <PyUnicode_AppendAndDel@plt>
    9a0c:	ldr	x0, [sp, #80]
    9a10:	ldp	x19, x20, [sp, #16]
    9a14:	ldp	x21, x22, [sp, #32]
    9a18:	ldp	x23, x24, [sp, #48]
    9a1c:	ldp	x29, x30, [sp], #192
    9a20:	ret
    9a24:	stp	x29, x30, [sp, #-256]!
    9a28:	mov	x29, sp
    9a2c:	stp	x19, x20, [sp, #16]
    9a30:	mov	x20, x0
    9a34:	mov	x0, x1
    9a38:	add	x1, sp, #0x80
    9a3c:	stp	x21, x22, [sp, #32]
    9a40:	stp	x23, x24, [sp, #48]
    9a44:	stp	x25, x26, [sp, #64]
    9a48:	stp	x27, x28, [sp, #80]
    9a4c:	stp	x3, x2, [sp, #104]
    9a50:	str	xzr, [sp, #136]
    9a54:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    9a58:	mov	x28, x0
    9a5c:	cbz	x0, 9b74 <PyNumber_FloorDivide@plt+0x4f74>
    9a60:	ldr	x21, [sp, #128]
    9a64:	mov	x0, #0x7ffffffe            	// #2147483646
    9a68:	cmp	x21, x0
    9a6c:	b.le	9a88 <PyNumber_FloorDivide@plt+0x4e88>
    9a70:	mov	x25, #0x0                   	// #0
    9a74:	mov	x22, #0x0                   	// #0
    9a78:	bl	4820 <PyErr_NoMemory@plt>
    9a7c:	mov	x19, #0x0                   	// #0
    9a80:	mov	x27, #0x0                   	// #0
    9a84:	b	9b50 <PyNumber_FloorDivide@plt+0x4f50>
    9a88:	add	x21, x21, #0x1
    9a8c:	mov	x0, #0x0                   	// #0
    9a90:	mov	x1, x21
    9a94:	bl	4800 <PyBytes_FromStringAndSize@plt>
    9a98:	str	x0, [sp, #136]
    9a9c:	mov	x27, x0
    9aa0:	cbz	x0, 9e94 <PyNumber_FloorDivide@plt+0x5294>
    9aa4:	bl	4b10 <PyBytes_AsString@plt>
    9aa8:	add	x24, sp, #0x98
    9aac:	mov	x23, x0
    9ab0:	adrp	x0, 22000 <PyInit__datetime@@Base+0x15918>
    9ab4:	add	x0, x0, #0x298
    9ab8:	mov	x26, #0x0                   	// #0
    9abc:	add	x0, x0, #0x1a0
    9ac0:	mov	x25, #0x0                   	// #0
    9ac4:	mov	x22, #0x0                   	// #0
    9ac8:	mov	x19, #0x0                   	// #0
    9acc:	str	x0, [sp, #120]
    9ad0:	mov	x0, x28
    9ad4:	ldrb	w1, [x0], #1
    9ad8:	cbnz	w1, 9b94 <PyNumber_FloorDivide@plt+0x4f94>
    9adc:	mov	x1, x26
    9ae0:	add	x0, sp, #0x88
    9ae4:	bl	4770 <_PyBytes_Resize@plt>
    9ae8:	tbnz	w0, #31, 9a80 <PyNumber_FloorDivide@plt+0x4e80>
    9aec:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    9af0:	add	x0, x0, #0x6f9
    9af4:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    9af8:	mov	x27, x0
    9afc:	cbz	x0, 9b50 <PyNumber_FloorDivide@plt+0x4f50>
    9b00:	ldr	x0, [sp, #136]
    9b04:	add	x0, x0, #0x20
    9b08:	bl	4ad0 <PyUnicode_FromString@plt>
    9b0c:	mov	x20, x0
    9b10:	cbz	x0, 9b44 <PyNumber_FloorDivide@plt+0x4f44>
    9b14:	ldr	x3, [sp, #112]
    9b18:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    9b1c:	add	x1, x1, #0xab8
    9b20:	mov	x2, x0
    9b24:	add	x1, x1, #0x1b8
    9b28:	mov	x4, #0x0                   	// #0
    9b2c:	mov	x0, x27
    9b30:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    9b34:	mov	x21, x0
    9b38:	mov	x0, x20
    9b3c:	mov	x20, x21
    9b40:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9b44:	mov	x0, x27
    9b48:	mov	x27, x20
    9b4c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9b50:	mov	x0, x25
    9b54:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    9b58:	mov	x0, x19
    9b5c:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    9b60:	mov	x0, x22
    9b64:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    9b68:	ldr	x0, [sp, #136]
    9b6c:	mov	x28, x27
    9b70:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    9b74:	mov	x0, x28
    9b78:	ldp	x19, x20, [sp, #16]
    9b7c:	ldp	x21, x22, [sp, #32]
    9b80:	ldp	x23, x24, [sp, #48]
    9b84:	ldp	x25, x26, [sp, #64]
    9b88:	ldp	x27, x28, [sp, #80]
    9b8c:	ldp	x29, x30, [sp], #256
    9b90:	ret
    9b94:	cmp	w1, #0x25
    9b98:	b.eq	9be4 <PyNumber_FloorDivide@plt+0x4fe4>  // b.none
    9b9c:	mov	x1, #0x1                   	// #1
    9ba0:	str	x0, [sp, #96]
    9ba4:	str	x1, [sp, #144]
    9ba8:	ldr	x0, [sp, #144]
    9bac:	cbz	x0, 9bdc <PyNumber_FloorDivide@plt+0x4fdc>
    9bb0:	add	x27, sp, #0x88
    9bb4:	ldr	x2, [sp, #144]
    9bb8:	add	x0, x2, x26
    9bbc:	cmp	x0, x21
    9bc0:	b.hi	9e5c <PyNumber_FloorDivide@plt+0x525c>  // b.pmore
    9bc4:	mov	x0, x23
    9bc8:	mov	x1, x28
    9bcc:	bl	46f0 <memcpy@plt>
    9bd0:	ldr	x0, [sp, #144]
    9bd4:	add	x23, x23, x0
    9bd8:	add	x26, x26, x0
    9bdc:	ldr	x28, [sp, #96]
    9be0:	b	9ad0 <PyNumber_FloorDivide@plt+0x4ed0>
    9be4:	add	x1, x28, #0x2
    9be8:	str	x1, [sp, #96]
    9bec:	ldrb	w1, [x28, #1]
    9bf0:	cbz	w1, 9b9c <PyNumber_FloorDivide@plt+0x4f9c>
    9bf4:	cmp	w1, #0x7a
    9bf8:	b.ne	9c88 <PyNumber_FloorDivide@plt+0x5088>  // b.any
    9bfc:	cbnz	x19, 9c78 <PyNumber_FloorDivide@plt+0x5078>
    9c00:	mov	x0, x20
    9c04:	bl	591c <PyNumber_FloorDivide@plt+0xd1c>
    9c08:	adrp	x4, d000 <PyInit__datetime@@Base+0x918>
    9c0c:	add	x27, x4, #0xf77
    9c10:	mov	x28, x0
    9c14:	mov	x1, #0x0                   	// #0
    9c18:	mov	x0, x27
    9c1c:	bl	4800 <PyBytes_FromStringAndSize@plt>
    9c20:	mov	x19, x0
    9c24:	cbz	x0, 9a7c <PyNumber_FloorDivide@plt+0x4e7c>
    9c28:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    9c2c:	ldr	x0, [x0, #4024]
    9c30:	cmp	x28, x0
    9c34:	b.eq	9c78 <PyNumber_FloorDivide@plt+0x5078>  // b.none
    9c38:	cbz	x28, 9c78 <PyNumber_FloorDivide@plt+0x5078>
    9c3c:	ldr	x3, [sp, #104]
    9c40:	mov	x2, x28
    9c44:	mov	x1, x27
    9c48:	mov	x0, x24
    9c4c:	bl	959c <PyNumber_FloorDivide@plt+0x499c>
    9c50:	tbnz	w0, #31, 9a80 <PyNumber_FloorDivide@plt+0x4e80>
    9c54:	mov	x0, x19
    9c58:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9c5c:	mov	x0, x24
    9c60:	bl	4730 <strlen@plt>
    9c64:	mov	x1, x0
    9c68:	mov	x0, x24
    9c6c:	bl	4800 <PyBytes_FromStringAndSize@plt>
    9c70:	mov	x19, x0
    9c74:	cbz	x0, 9a7c <PyNumber_FloorDivide@plt+0x4e7c>
    9c78:	ldr	x0, [x19, #16]
    9c7c:	add	x28, x19, #0x20
    9c80:	str	x0, [sp, #144]
    9c84:	b	9ba8 <PyNumber_FloorDivide@plt+0x4fa8>
    9c88:	cmp	w1, #0x5a
    9c8c:	b.ne	9d88 <PyNumber_FloorDivide@plt+0x5188>  // b.any
    9c90:	cbnz	x22, 9d80 <PyNumber_FloorDivide@plt+0x5180>
    9c94:	mov	x0, x20
    9c98:	bl	591c <PyNumber_FloorDivide@plt+0xd1c>
    9c9c:	mov	x1, #0x0                   	// #0
    9ca0:	mov	x28, x0
    9ca4:	mov	x0, #0x0                   	// #0
    9ca8:	bl	4b80 <PyUnicode_FromStringAndSize@plt>
    9cac:	mov	x27, x0
    9cb0:	cbz	x0, 9b50 <PyNumber_FloorDivide@plt+0x4f50>
    9cb4:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    9cb8:	ldr	x0, [x1, #4024]
    9cbc:	cmp	x28, x0
    9cc0:	b.eq	9cf0 <PyNumber_FloorDivide@plt+0x50f0>  // b.none
    9cc4:	cbz	x28, 9cf0 <PyNumber_FloorDivide@plt+0x50f0>
    9cc8:	ldr	x1, [sp, #104]
    9ccc:	mov	x0, x28
    9cd0:	bl	8778 <PyNumber_FloorDivide@plt+0x3b78>
    9cd4:	mov	x28, x0
    9cd8:	cbz	x0, 9d74 <PyNumber_FloorDivide@plt+0x5174>
    9cdc:	adrp	x2, 21000 <PyInit__datetime@@Base+0x14918>
    9ce0:	ldr	x1, [x2, #4024]
    9ce4:	cmp	x0, x1
    9ce8:	b.ne	9d0c <PyNumber_FloorDivide@plt+0x510c>  // b.any
    9cec:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9cf0:	add	x1, sp, #0x90
    9cf4:	mov	x0, x27
    9cf8:	mov	x22, x27
    9cfc:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    9d00:	mov	x28, x0
    9d04:	cbnz	x0, 9ba8 <PyNumber_FloorDivide@plt+0x4fa8>
    9d08:	b	9a80 <PyNumber_FloorDivide@plt+0x4e80>
    9d0c:	mov	x0, x27
    9d10:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9d14:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    9d18:	add	x1, x1, #0xab8
    9d1c:	add	x1, x1, #0x3a0
    9d20:	adrp	x4, d000 <PyInit__datetime@@Base+0x918>
    9d24:	adrp	x3, d000 <PyInit__datetime@@Base+0x918>
    9d28:	add	x4, x4, #0x67f
    9d2c:	add	x3, x3, #0x680
    9d30:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    9d34:	add	x2, x2, #0x682
    9d38:	mov	x0, x28
    9d3c:	bl	4a60 <_PyObject_CallMethodId@plt>
    9d40:	mov	x27, x0
    9d44:	mov	x0, x28
    9d48:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9d4c:	cbz	x27, 9ea4 <PyNumber_FloorDivide@plt+0x52a4>
    9d50:	ldr	x0, [x27, #8]
    9d54:	ldr	x0, [x0, #168]
    9d58:	tbnz	w0, #28, 9cf0 <PyNumber_FloorDivide@plt+0x50f0>
    9d5c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    9d60:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    9d64:	add	x1, x1, #0x685
    9d68:	ldr	x0, [x0, #3976]
    9d6c:	ldr	x0, [x0]
    9d70:	bl	4880 <PyErr_SetString@plt>
    9d74:	mov	x0, x27
    9d78:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9d7c:	b	9a80 <PyNumber_FloorDivide@plt+0x4e80>
    9d80:	mov	x27, x22
    9d84:	b	9cf0 <PyNumber_FloorDivide@plt+0x50f0>
    9d88:	cmp	w1, #0x66
    9d8c:	b.ne	9e54 <PyNumber_FloorDivide@plt+0x5254>  // b.any
    9d90:	cbnz	x25, 9e3c <PyNumber_FloorDivide@plt+0x523c>
    9d94:	ldr	x0, [x20, #8]
    9d98:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    9d9c:	add	x25, x1, #0x298
    9da0:	adrp	x27, c000 <PyNumber_FloorDivide@plt+0x7400>
    9da4:	add	x1, x25, #0x340
    9da8:	cmp	x0, x1
    9dac:	b.ne	9df8 <PyNumber_FloorDivide@plt+0x51f8>  // b.any
    9db0:	ldrb	w2, [x20, #29]
    9db4:	ldrb	w0, [x20, #28]
    9db8:	lsl	w2, w2, #8
    9dbc:	orr	w0, w2, w0, lsl #16
    9dc0:	ldrb	w2, [x20, #30]
    9dc4:	orr	w2, w0, w2
    9dc8:	add	x1, x27, #0xecb
    9dcc:	mov	x0, x24
    9dd0:	bl	47e0 <sprintf@plt>
    9dd4:	mov	x0, x24
    9dd8:	bl	4730 <strlen@plt>
    9ddc:	mov	x1, x0
    9de0:	mov	x0, x24
    9de4:	bl	4800 <PyBytes_FromStringAndSize@plt>
    9de8:	mov	x27, x0
    9dec:	cbnz	x0, 9e40 <PyNumber_FloorDivide@plt+0x5240>
    9df0:	mov	x25, #0x0                   	// #0
    9df4:	b	9b50 <PyNumber_FloorDivide@plt+0x4f50>
    9df8:	bl	4b30 <PyType_IsSubtype@plt>
    9dfc:	cbnz	w0, 9db0 <PyNumber_FloorDivide@plt+0x51b0>
    9e00:	ldr	x0, [x20, #8]
    9e04:	add	x25, x25, #0x1a0
    9e08:	cmp	x0, x25
    9e0c:	b.ne	9e28 <PyNumber_FloorDivide@plt+0x5228>  // b.any
    9e10:	ldrb	w2, [x20, #33]
    9e14:	ldrb	w0, [x20, #32]
    9e18:	lsl	w2, w2, #8
    9e1c:	orr	w0, w2, w0, lsl #16
    9e20:	ldrb	w2, [x20, #34]
    9e24:	b	9dc4 <PyNumber_FloorDivide@plt+0x51c4>
    9e28:	ldr	x1, [sp, #120]
    9e2c:	bl	4b30 <PyType_IsSubtype@plt>
    9e30:	cbnz	w0, 9e10 <PyNumber_FloorDivide@plt+0x5210>
    9e34:	mov	w2, #0x0                   	// #0
    9e38:	b	9dc8 <PyNumber_FloorDivide@plt+0x51c8>
    9e3c:	mov	x27, x25
    9e40:	ldr	x0, [x27, #16]
    9e44:	add	x28, x27, #0x20
    9e48:	mov	x25, x27
    9e4c:	str	x0, [sp, #144]
    9e50:	b	9ba8 <PyNumber_FloorDivide@plt+0x4fa8>
    9e54:	mov	x0, #0x2                   	// #2
    9e58:	b	9c80 <PyNumber_FloorDivide@plt+0x5080>
    9e5c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9e60:	cmp	x21, x0
    9e64:	b.ls	9e70 <PyNumber_FloorDivide@plt+0x5270>  // b.plast
    9e68:	bl	4820 <PyErr_NoMemory@plt>
    9e6c:	b	9a80 <PyNumber_FloorDivide@plt+0x4e80>
    9e70:	lsl	x21, x21, #1
    9e74:	mov	x0, x27
    9e78:	mov	x1, x21
    9e7c:	bl	4770 <_PyBytes_Resize@plt>
    9e80:	tbnz	w0, #31, 9a80 <PyNumber_FloorDivide@plt+0x4e80>
    9e84:	ldr	x0, [sp, #136]
    9e88:	bl	4b10 <PyBytes_AsString@plt>
    9e8c:	add	x23, x0, x26
    9e90:	b	9bb4 <PyNumber_FloorDivide@plt+0x4fb4>
    9e94:	mov	x25, #0x0                   	// #0
    9e98:	mov	x22, #0x0                   	// #0
    9e9c:	mov	x19, #0x0                   	// #0
    9ea0:	b	9b50 <PyNumber_FloorDivide@plt+0x4f50>
    9ea4:	mov	x22, #0x0                   	// #0
    9ea8:	b	9b50 <PyNumber_FloorDivide@plt+0x4f50>
    9eac:	sub	sp, sp, #0x40
    9eb0:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    9eb4:	add	x3, x3, #0xab8
    9eb8:	add	x4, sp, #0x38
    9ebc:	add	x3, x3, #0x3b8
    9ec0:	stp	x29, x30, [sp, #16]
    9ec4:	add	x29, sp, #0x10
    9ec8:	stp	x19, x20, [sp, #32]
    9ecc:	mov	x19, x0
    9ed0:	mov	x0, x1
    9ed4:	mov	x1, x2
    9ed8:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    9edc:	add	x2, x2, #0x6ae
    9ee0:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    9ee4:	cbnz	w0, 9f00 <PyNumber_FloorDivide@plt+0x5300>
    9ee8:	mov	x19, #0x0                   	// #0
    9eec:	mov	x0, x19
    9ef0:	ldp	x29, x30, [sp, #16]
    9ef4:	ldp	x19, x20, [sp, #32]
    9ef8:	add	sp, sp, #0x40
    9efc:	ret
    9f00:	mov	w3, #0x1                   	// #1
    9f04:	mov	w0, #0xffffffff            	// #-1
    9f08:	str	w3, [sp]
    9f0c:	mov	w2, w3
    9f10:	str	w0, [sp, #8]
    9f14:	mov	w7, #0x0                   	// #0
    9f18:	mov	w1, #0x76c                 	// #1900
    9f1c:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    9f20:	ldrb	w6, [x19, #27]
    9f24:	add	x0, x0, #0x6b9
    9f28:	ldrb	w5, [x19, #26]
    9f2c:	ldrb	w4, [x19, #25]
    9f30:	bl	49a0 <Py_BuildValue@plt>
    9f34:	mov	x20, x0
    9f38:	cbz	x0, 9ee8 <PyNumber_FloorDivide@plt+0x52e8>
    9f3c:	adrp	x3, 21000 <PyInit__datetime@@Base+0x14918>
    9f40:	mov	x2, x0
    9f44:	ldr	x1, [sp, #56]
    9f48:	mov	x0, x19
    9f4c:	ldr	x3, [x3, #4024]
    9f50:	bl	9a24 <PyNumber_FloorDivide@plt+0x4e24>
    9f54:	mov	x19, x0
    9f58:	mov	x0, x20
    9f5c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9f60:	b	9eec <PyNumber_FloorDivide@plt+0x52ec>
    9f64:	stp	x29, x30, [sp, #-48]!
    9f68:	mov	x29, sp
    9f6c:	stp	x19, x20, [sp, #16]
    9f70:	adrp	x19, 22000 <PyInit__datetime@@Base+0x15918>
    9f74:	add	x19, x19, #0xab8
    9f78:	mov	x20, x0
    9f7c:	add	x4, sp, #0x28
    9f80:	mov	x0, x1
    9f84:	add	x3, x19, #0x3c8
    9f88:	mov	x1, x2
    9f8c:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    9f90:	add	x2, x2, #0x6ae
    9f94:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    9f98:	cbnz	w0, 9fb0 <PyNumber_FloorDivide@plt+0x53b0>
    9f9c:	mov	x20, #0x0                   	// #0
    9fa0:	mov	x0, x20
    9fa4:	ldp	x19, x20, [sp, #16]
    9fa8:	ldp	x29, x30, [sp], #48
    9fac:	ret
    9fb0:	add	x1, x19, #0x3d8
    9fb4:	mov	x0, x20
    9fb8:	mov	x2, #0x0                   	// #0
    9fbc:	bl	4a60 <_PyObject_CallMethodId@plt>
    9fc0:	mov	x19, x0
    9fc4:	cbz	x0, 9f9c <PyNumber_FloorDivide@plt+0x539c>
    9fc8:	ldr	x1, [sp, #40]
    9fcc:	mov	x3, x20
    9fd0:	mov	x2, x0
    9fd4:	mov	x0, x20
    9fd8:	bl	9a24 <PyNumber_FloorDivide@plt+0x4e24>
    9fdc:	mov	x20, x0
    9fe0:	mov	x0, x19
    9fe4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    9fe8:	b	9fa0 <PyNumber_FloorDivide@plt+0x53a0>
    9fec:	stp	x29, x30, [sp, #-32]!
    9ff0:	mov	x29, sp
    9ff4:	ldp	w1, w2, [x0, #24]
    9ff8:	ldr	w3, [x0, #32]
    9ffc:	str	x19, [sp, #16]
    a000:	ldr	x19, [x0, #8]
    a004:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    a008:	add	x0, x0, #0x6bf
    a00c:	bl	49a0 <Py_BuildValue@plt>
    a010:	mov	x1, x19
    a014:	mov	x2, x0
    a018:	ldr	x19, [sp, #16]
    a01c:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    a020:	ldp	x29, x30, [sp], #32
    a024:	add	x0, x0, #0x6c3
    a028:	b	49a0 <Py_BuildValue@plt>
    a02c:	sub	w3, w0, #0x1
    a030:	mov	w4, #0x4                   	// #4
    a034:	mov	w5, w2
    a038:	mov	w6, #0x190                 	// #400
    a03c:	cmp	w1, #0x2
    a040:	sdiv	w2, w3, w4
    a044:	mov	w4, #0x16d                 	// #365
    a048:	madd	w4, w3, w4, w2
    a04c:	mov	w2, #0xffffff9c            	// #-100
    a050:	sdiv	w2, w3, w2
    a054:	sdiv	w3, w3, w6
    a058:	add	w3, w2, w3
    a05c:	adrp	x2, e000 <PyInit__datetime@@Base+0x1918>
    a060:	add	x2, x2, #0x73c
    a064:	add	w3, w4, w3
    a068:	add	x2, x2, #0x34
    a06c:	ldr	w4, [x2, w1, sxtw #2]
    a070:	b.le	a098 <PyNumber_FloorDivide@plt+0x5498>
    a074:	stp	x29, x30, [sp, #-16]!
    a078:	mov	x29, sp
    a07c:	bl	4d0c <PyNumber_FloorDivide@plt+0x10c>
    a080:	cmp	w0, #0x0
    a084:	cinc	w4, w4, ne  // ne = any
    a088:	add	w0, w5, w4
    a08c:	add	w0, w0, w3
    a090:	ldp	x29, x30, [sp], #16
    a094:	ret
    a098:	add	w0, w5, w4
    a09c:	add	w0, w0, w3
    a0a0:	ret
    a0a4:	stp	x29, x30, [sp, #-16]!
    a0a8:	mov	w2, #0x1                   	// #1
    a0ac:	mov	w1, w2
    a0b0:	mov	x29, sp
    a0b4:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    a0b8:	add	w3, w0, #0x6
    a0bc:	mov	w2, #0x7                   	// #7
    a0c0:	sdiv	w1, w3, w2
    a0c4:	msub	w1, w1, w2, w3
    a0c8:	sub	w0, w0, w1
    a0cc:	cmp	w1, #0x3
    a0d0:	b.le	a0d8 <PyNumber_FloorDivide@plt+0x54d8>
    a0d4:	add	w0, w0, w2
    a0d8:	ldp	x29, x30, [sp], #16
    a0dc:	ret
    a0e0:	stp	x29, x30, [sp, #-64]!
    a0e4:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    a0e8:	add	x3, x3, #0xab8
    a0ec:	mov	x29, sp
    a0f0:	stp	x19, x20, [sp, #16]
    a0f4:	add	x20, sp, #0x30
    a0f8:	mov	x19, x0
    a0fc:	str	x21, [sp, #32]
    a100:	add	x21, sp, #0x38
    a104:	mov	x0, x1
    a108:	add	x5, sp, #0x34
    a10c:	mov	x1, x2
    a110:	mov	x4, x20
    a114:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    a118:	add	x3, x3, #0x3f0
    a11c:	add	x2, x2, #0x6c6
    a120:	mov	x6, x21
    a124:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    a128:	cbnz	w0, a160 <PyNumber_FloorDivide@plt+0x5560>
    a12c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    a130:	ldr	x0, [x0, #4008]
    a134:	ldr	x0, [x0]
    a138:	bl	48a0 <PyErr_ExceptionMatches@plt>
    a13c:	cbz	w0, a158 <PyNumber_FloorDivide@plt+0x5558>
    a140:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    a144:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    a148:	add	x1, x1, #0x6da
    a14c:	ldr	x0, [x0, #3968]
    a150:	ldr	x0, [x0]
    a154:	bl	4b60 <PyErr_Format@plt>
    a158:	mov	x0, #0x0                   	// #0
    a15c:	b	a24c <PyNumber_FloorDivide@plt+0x564c>
    a160:	ldr	w7, [sp, #48]
    a164:	mov	w0, #0x270e                	// #9998
    a168:	sub	w1, w7, #0x1
    a16c:	cmp	w1, w0
    a170:	b.ls	a194 <PyNumber_FloorDivide@plt+0x5594>  // b.plast
    a174:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    a178:	mov	w2, w7
    a17c:	add	x1, x1, #0x6fe
    a180:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    a184:	ldr	x0, [x0, #3968]
    a188:	ldr	x0, [x0]
    a18c:	bl	4b60 <PyErr_Format@plt>
    a190:	b	a158 <PyNumber_FloorDivide@plt+0x5558>
    a194:	ldr	w9, [sp, #52]
    a198:	sub	w8, w9, #0x1
    a19c:	cmp	w8, #0x33
    a1a0:	b.ls	a1f8 <PyNumber_FloorDivide@plt+0x55f8>  // b.plast
    a1a4:	cmp	w9, #0x35
    a1a8:	b.ne	a1e8 <PyNumber_FloorDivide@plt+0x55e8>  // b.any
    a1ac:	mov	w2, #0x1                   	// #1
    a1b0:	mov	w0, w7
    a1b4:	mov	w1, w2
    a1b8:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    a1bc:	add	w2, w0, #0x6
    a1c0:	mov	w0, #0x7                   	// #7
    a1c4:	sdiv	w1, w2, w0
    a1c8:	msub	w1, w1, w0, w2
    a1cc:	cmp	w1, #0x3
    a1d0:	b.eq	a1f8 <PyNumber_FloorDivide@plt+0x55f8>  // b.none
    a1d4:	cmp	w1, #0x2
    a1d8:	b.ne	a1e8 <PyNumber_FloorDivide@plt+0x55e8>  // b.any
    a1dc:	mov	w0, w7
    a1e0:	bl	4d0c <PyNumber_FloorDivide@plt+0x10c>
    a1e4:	cbnz	w0, a1f8 <PyNumber_FloorDivide@plt+0x55f8>
    a1e8:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    a1ec:	mov	w2, w9
    a1f0:	add	x1, x1, #0x717
    a1f4:	b	a180 <PyNumber_FloorDivide@plt+0x5580>
    a1f8:	ldr	w2, [sp, #56]
    a1fc:	sub	w10, w2, #0x1
    a200:	cmp	w10, #0x6
    a204:	b.ls	a214 <PyNumber_FloorDivide@plt+0x5614>  // b.plast
    a208:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    a20c:	add	x1, x1, #0x728
    a210:	b	a180 <PyNumber_FloorDivide@plt+0x5580>
    a214:	mov	w0, w7
    a218:	bl	a0a4 <PyNumber_FloorDivide@plt+0x54a4>
    a21c:	mov	w1, #0x7                   	// #7
    a220:	mov	x3, x21
    a224:	add	x2, sp, #0x3c
    a228:	str	w9, [sp, #60]
    a22c:	madd	w8, w8, w1, w10
    a230:	mov	x1, x20
    a234:	add	w0, w8, w0
    a238:	bl	4d94 <PyNumber_FloorDivide@plt+0x194>
    a23c:	ldr	w0, [sp, #48]
    a240:	mov	x3, x19
    a244:	ldp	w2, w1, [sp, #56]
    a248:	bl	6434 <PyNumber_FloorDivide@plt+0x1834>
    a24c:	ldp	x19, x20, [sp, #16]
    a250:	ldr	x21, [sp, #32]
    a254:	ldp	x29, x30, [sp], #64
    a258:	ret
    a25c:	stp	x29, x30, [sp, #-16]!
    a260:	mov	x29, sp
    a264:	ldurh	w3, [x0, #25]
    a268:	ldrb	w2, [x0, #28]
    a26c:	ldrb	w1, [x0, #27]
    a270:	rev16	w3, w3
    a274:	and	w0, w3, #0xffff
    a278:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    a27c:	sxtw	x0, w0
    a280:	ldp	x29, x30, [sp], #16
    a284:	b	4900 <PyLong_FromLong@plt>
    a288:	stp	x29, x30, [sp, #-16]!
    a28c:	sxtw	x8, w4
    a290:	sub	w4, w0, #0x1
    a294:	mov	x29, sp
    a298:	sxtw	x9, w3
    a29c:	mov	w3, #0x270e                	// #9998
    a2a0:	cmp	w4, w3
    a2a4:	b.ls	a2d0 <PyNumber_FloorDivide@plt+0x56d0>  // b.plast
    a2a8:	mov	w2, w0
    a2ac:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    a2b0:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    a2b4:	add	x1, x1, #0x3e
    a2b8:	ldr	x0, [x0, #3968]
    a2bc:	ldr	x0, [x0]
    a2c0:	bl	4b60 <PyErr_Format@plt>
    a2c4:	mov	x0, #0xffffffffffffffff    	// #-1
    a2c8:	ldp	x29, x30, [sp], #16
    a2cc:	ret
    a2d0:	sxtw	x7, w5
    a2d4:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    a2d8:	mov	w3, #0x18                  	// #24
    a2dc:	mov	x5, #0x3c                  	// #60
    a2e0:	smaddl	x0, w0, w3, x9
    a2e4:	madd	x0, x0, x5, x8
    a2e8:	madd	x0, x0, x5, x7
    a2ec:	b	a2c8 <PyNumber_FloorDivide@plt+0x56c8>
    a2f0:	mov	x2, #0xffffffffffffb780    	// #-18560
    a2f4:	stp	x29, x30, [sp, #-80]!
    a2f8:	movk	x2, #0x886c, lsl #16
    a2fc:	movk	x2, #0xfff1, lsl #32
    a300:	mov	x29, sp
    a304:	add	x1, sp, #0x18
    a308:	add	x0, x0, x2
    a30c:	bl	4bc0 <_PyTime_localtime@plt>
    a310:	cbnz	w0, a334 <PyNumber_FloorDivide@plt+0x5734>
    a314:	ldp	w5, w4, [sp, #24]
    a318:	ldp	w3, w2, [sp, #32]
    a31c:	ldp	w1, w0, [sp, #40]
    a320:	add	w1, w1, #0x1
    a324:	add	w0, w0, #0x76c
    a328:	bl	a288 <PyNumber_FloorDivide@plt+0x5688>
    a32c:	ldp	x29, x30, [sp], #80
    a330:	ret
    a334:	mov	x0, #0xffffffffffffffff    	// #-1
    a338:	b	a32c <PyNumber_FloorDivide@plt+0x572c>
    a33c:	stp	x29, x30, [sp, #-80]!
    a340:	mov	x29, sp
    a344:	stp	x19, x20, [sp, #16]
    a348:	stp	x21, x22, [sp, #32]
    a34c:	stp	x23, x24, [sp, #48]
    a350:	mov	w23, w6
    a354:	str	x25, [sp, #64]
    a358:	bl	a288 <PyNumber_FloorDivide@plt+0x5688>
    a35c:	mov	x22, x0
    a360:	bl	a2f0 <PyNumber_FloorDivide@plt+0x56f0>
    a364:	cmn	x0, #0x1
    a368:	b.ne	a38c <PyNumber_FloorDivide@plt+0x578c>  // b.any
    a36c:	mov	x20, #0xffffffffffffffff    	// #-1
    a370:	mov	x0, x20
    a374:	ldp	x19, x20, [sp, #16]
    a378:	ldp	x21, x22, [sp, #32]
    a37c:	ldp	x23, x24, [sp, #48]
    a380:	ldr	x25, [sp, #64]
    a384:	ldp	x29, x30, [sp], #80
    a388:	ret
    a38c:	lsl	x19, x22, #1
    a390:	mov	x21, x0
    a394:	sub	x20, x19, x0
    a398:	mov	x0, x20
    a39c:	bl	a2f0 <PyNumber_FloorDivide@plt+0x56f0>
    a3a0:	mov	x25, x0
    a3a4:	cmn	x0, #0x1
    a3a8:	b.eq	a36c <PyNumber_FloorDivide@plt+0x576c>  // b.none
    a3ac:	cmp	x22, x0
    a3b0:	b.ne	a420 <PyNumber_FloorDivide@plt+0x5820>  // b.any
    a3b4:	cmp	w23, #0x0
    a3b8:	mov	x24, #0x5180                	// #20864
    a3bc:	movk	x24, #0x1, lsl #16
    a3c0:	add	x19, x20, x24
    a3c4:	sub	x24, x20, x24
    a3c8:	csel	x24, x24, x19, eq  // eq = none
    a3cc:	mov	x0, x24
    a3d0:	bl	a2f0 <PyNumber_FloorDivide@plt+0x56f0>
    a3d4:	cmn	x0, #0x1
    a3d8:	b.eq	a36c <PyNumber_FloorDivide@plt+0x576c>  // b.none
    a3dc:	sub	x19, x0, x24
    a3e0:	sub	x21, x21, x22
    a3e4:	cmp	x21, x19
    a3e8:	b.eq	a370 <PyNumber_FloorDivide@plt+0x5770>  // b.none
    a3ec:	sub	x19, x22, x19
    a3f0:	mov	x0, x19
    a3f4:	bl	a2f0 <PyNumber_FloorDivide@plt+0x56f0>
    a3f8:	cmn	x0, #0x1
    a3fc:	b.eq	a36c <PyNumber_FloorDivide@plt+0x576c>  // b.none
    a400:	cmp	x22, x0
    a404:	b.eq	a434 <PyNumber_FloorDivide@plt+0x5834>  // b.none
    a408:	cmp	x22, x25
    a40c:	b.eq	a370 <PyNumber_FloorDivide@plt+0x5770>  // b.none
    a410:	cmp	x20, x19
    a414:	cbz	w23, a42c <PyNumber_FloorDivide@plt+0x582c>
    a418:	csel	x20, x20, x19, le
    a41c:	b	a370 <PyNumber_FloorDivide@plt+0x5770>
    a420:	sub	x19, x21, x19
    a424:	add	x19, x19, x0
    a428:	b	a3ec <PyNumber_FloorDivide@plt+0x57ec>
    a42c:	csel	x20, x20, x19, ge  // ge = tcont
    a430:	b	a370 <PyNumber_FloorDivide@plt+0x5770>
    a434:	mov	x20, x19
    a438:	b	a370 <PyNumber_FloorDivide@plt+0x5770>
    a43c:	sub	sp, sp, #0xc0
    a440:	stp	x29, x30, [sp, #16]
    a444:	add	x29, sp, #0x10
    a448:	stp	x19, x20, [sp, #32]
    a44c:	mov	x19, x2
    a450:	stp	x21, x22, [sp, #48]
    a454:	mov	x22, x4
    a458:	stp	x23, x24, [sp, #64]
    a45c:	mov	x23, x1
    a460:	add	x1, sp, #0x88
    a464:	stp	x25, x26, [sp, #80]
    a468:	stp	x27, x28, [sp, #96]
    a46c:	str	x0, [sp, #112]
    a470:	mov	x0, x2
    a474:	str	w3, [sp, #124]
    a478:	blr	x23
    a47c:	cbz	w0, a4a4 <PyNumber_FloorDivide@plt+0x58a4>
    a480:	mov	x0, #0x0                   	// #0
    a484:	ldp	x29, x30, [sp, #16]
    a488:	ldp	x19, x20, [sp, #32]
    a48c:	ldp	x21, x22, [sp, #48]
    a490:	ldp	x23, x24, [sp, #64]
    a494:	ldp	x25, x26, [sp, #80]
    a498:	ldp	x27, x28, [sp, #96]
    a49c:	add	sp, sp, #0xc0
    a4a0:	ret
    a4a4:	mov	w21, w0
    a4a8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    a4ac:	ldp	w20, w24, [sp, #136]
    a4b0:	mov	w5, #0x3b                  	// #59
    a4b4:	ldp	w27, w26, [sp, #152]
    a4b8:	cmp	w20, #0x3b
    a4bc:	ldr	x0, [x0, #4024]
    a4c0:	csel	w20, w20, w5, le
    a4c4:	ldp	w25, w28, [sp, #144]
    a4c8:	add	w26, w26, #0x76c
    a4cc:	add	w27, w27, #0x1
    a4d0:	cmp	x22, x0
    a4d4:	b.ne	a55c <PyNumber_FloorDivide@plt+0x595c>  // b.any
    a4d8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    a4dc:	ldr	x0, [x0, #4064]
    a4e0:	cmp	x23, x0
    a4e4:	b.ne	a55c <PyNumber_FloorDivide@plt+0x595c>  // b.any
    a4e8:	mov	w5, w20
    a4ec:	mov	w4, w24
    a4f0:	mov	w3, w25
    a4f4:	mov	w2, w28
    a4f8:	mov	w1, w27
    a4fc:	mov	w0, w26
    a500:	bl	a288 <PyNumber_FloorDivide@plt+0x5688>
    a504:	mov	x23, x0
    a508:	mov	x0, #0xf700                	// #63232
    a50c:	movk	x0, #0x7791, lsl #16
    a510:	movk	x0, #0xe, lsl #32
    a514:	add	x0, x19, x0
    a518:	bl	a2f0 <PyNumber_FloorDivide@plt+0x56f0>
    a51c:	cmn	x0, #0x1
    a520:	b.eq	a480 <PyNumber_FloorDivide@plt+0x5880>  // b.none
    a524:	sub	x1, x23, #0x15, lsl #12
    a528:	sub	x1, x1, #0x180
    a52c:	subs	x0, x1, x0
    a530:	b.pl	a55c <PyNumber_FloorDivide@plt+0x595c>  // b.nfrst
    a534:	mov	x2, #0x4880                	// #18560
    a538:	movk	x2, #0x7793, lsl #16
    a53c:	movk	x2, #0xe, lsl #32
    a540:	add	x19, x19, x2
    a544:	add	x0, x19, x0
    a548:	bl	a2f0 <PyNumber_FloorDivide@plt+0x56f0>
    a54c:	cmn	x0, #0x1
    a550:	b.eq	a480 <PyNumber_FloorDivide@plt+0x5880>  // b.none
    a554:	cmp	x23, x0
    a558:	cset	w21, eq  // eq = none
    a55c:	ldr	w6, [sp, #124]
    a560:	mov	x7, x22
    a564:	ldr	x0, [sp, #112]
    a568:	str	w21, [sp]
    a56c:	str	x0, [sp, #8]
    a570:	mov	w5, w20
    a574:	mov	w4, w24
    a578:	mov	w3, w25
    a57c:	mov	w2, w28
    a580:	mov	w1, w27
    a584:	mov	w0, w26
    a588:	bl	62f8 <PyNumber_FloorDivide@plt+0x16f8>
    a58c:	b	a484 <PyNumber_FloorDivide@plt+0x5884>
    a590:	stp	x29, x30, [sp, #-64]!
    a594:	mov	x29, sp
    a598:	stp	x19, x20, [sp, #16]
    a59c:	mov	x19, x0
    a5a0:	mov	x20, x1
    a5a4:	mov	x0, x2
    a5a8:	add	x1, sp, #0x30
    a5ac:	add	x2, sp, #0x38
    a5b0:	str	x21, [sp, #32]
    a5b4:	mov	x21, x3
    a5b8:	mov	w3, #0x2                   	// #2
    a5bc:	bl	47b0 <_PyTime_ObjectToTimeval@plt>
    a5c0:	cmn	w0, #0x1
    a5c4:	b.eq	a5f0 <PyNumber_FloorDivide@plt+0x59f0>  // b.none
    a5c8:	ldr	w3, [sp, #56]
    a5cc:	mov	x4, x21
    a5d0:	ldr	x2, [sp, #48]
    a5d4:	mov	x1, x20
    a5d8:	mov	x0, x19
    a5dc:	bl	a43c <PyNumber_FloorDivide@plt+0x583c>
    a5e0:	ldp	x19, x20, [sp, #16]
    a5e4:	ldr	x21, [sp, #32]
    a5e8:	ldp	x29, x30, [sp], #64
    a5ec:	ret
    a5f0:	mov	x0, #0x0                   	// #0
    a5f4:	b	a5e0 <PyNumber_FloorDivide@plt+0x59e0>
    a5f8:	stp	x29, x30, [sp, #-64]!
    a5fc:	mov	x29, sp
    a600:	stp	x19, x20, [sp, #16]
    a604:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    a608:	adrp	x20, 22000 <PyInit__datetime@@Base+0x15918>
    a60c:	ldr	x19, [x19, #4024]
    a610:	add	x20, x20, #0xab8
    a614:	add	x5, sp, #0x38
    a618:	add	x4, sp, #0x30
    a61c:	add	x3, x20, #0x410
    a620:	str	x21, [sp, #32]
    a624:	mov	x21, x0
    a628:	mov	x0, x1
    a62c:	mov	x1, x2
    a630:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    a634:	add	x2, x2, #0x74a
    a638:	str	x19, [sp, #56]
    a63c:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    a640:	cbnz	w0, a65c <PyNumber_FloorDivide@plt+0x5a5c>
    a644:	mov	x3, #0x0                   	// #0
    a648:	mov	x0, x3
    a64c:	ldp	x19, x20, [sp, #16]
    a650:	ldr	x21, [sp, #32]
    a654:	ldp	x29, x30, [sp], #64
    a658:	ret
    a65c:	ldr	x0, [sp, #56]
    a660:	bl	59a4 <PyNumber_FloorDivide@plt+0xda4>
    a664:	tbnz	w0, #31, a644 <PyNumber_FloorDivide@plt+0x5a44>
    a668:	ldp	x2, x3, [sp, #48]
    a66c:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    a670:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    a674:	ldr	x1, [x1, #4016]
    a678:	ldr	x0, [x0, #4064]
    a67c:	cmp	x3, x19
    a680:	csel	x1, x0, x1, eq  // eq = none
    a684:	mov	x0, x21
    a688:	bl	a590 <PyNumber_FloorDivide@plt+0x5990>
    a68c:	mov	x3, x0
    a690:	cbz	x0, a644 <PyNumber_FloorDivide@plt+0x5a44>
    a694:	ldr	x0, [sp, #56]
    a698:	cmp	x0, x19
    a69c:	b.eq	a648 <PyNumber_FloorDivide@plt+0x5a48>  // b.none
    a6a0:	add	x1, x20, #0x428
    a6a4:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    a6a8:	add	x2, x2, #0x6c4
    a6ac:	bl	4a60 <_PyObject_CallMethodId@plt>
    a6b0:	mov	x3, x0
    a6b4:	b	a648 <PyNumber_FloorDivide@plt+0x5a48>
    a6b8:	stp	x29, x30, [sp, #-48]!
    a6bc:	mov	x29, sp
    a6c0:	add	x2, sp, #0x28
    a6c4:	str	x19, [sp, #16]
    a6c8:	mov	x19, x0
    a6cc:	mov	x0, x1
    a6d0:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    a6d4:	add	x1, x1, #0x75c
    a6d8:	bl	4a30 <PyArg_ParseTuple@plt>
    a6dc:	cbz	w0, a708 <PyNumber_FloorDivide@plt+0x5b08>
    a6e0:	adrp	x3, 21000 <PyInit__datetime@@Base+0x14918>
    a6e4:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    a6e8:	ldr	x2, [sp, #40]
    a6ec:	mov	x0, x19
    a6f0:	ldr	x3, [x3, #4024]
    a6f4:	ldr	x1, [x1, #4016]
    a6f8:	bl	a590 <PyNumber_FloorDivide@plt+0x5990>
    a6fc:	ldr	x19, [sp, #16]
    a700:	ldp	x29, x30, [sp], #48
    a704:	ret
    a708:	mov	x0, #0x0                   	// #0
    a70c:	b	a6fc <PyNumber_FloorDivide@plt+0x5afc>
    a710:	stp	x29, x30, [sp, #-64]!
    a714:	mov	x29, sp
    a718:	stp	x19, x20, [sp, #16]
    a71c:	mov	x20, x1
    a720:	mov	x19, x0
    a724:	str	x21, [sp, #32]
    a728:	mov	x21, x2
    a72c:	bl	47f0 <_PyTime_GetSystemClock@plt>
    a730:	add	x2, sp, #0x34
    a734:	add	x1, sp, #0x38
    a738:	mov	w3, #0x0                   	// #0
    a73c:	bl	4840 <_PyTime_AsTimevalTime_t@plt>
    a740:	tbnz	w0, #31, a76c <PyNumber_FloorDivide@plt+0x5b6c>
    a744:	ldr	w3, [sp, #52]
    a748:	mov	x4, x21
    a74c:	ldr	x2, [sp, #56]
    a750:	mov	x1, x20
    a754:	mov	x0, x19
    a758:	bl	a43c <PyNumber_FloorDivide@plt+0x583c>
    a75c:	ldp	x19, x20, [sp, #16]
    a760:	ldr	x21, [sp, #32]
    a764:	ldp	x29, x30, [sp], #64
    a768:	ret
    a76c:	mov	x0, #0x0                   	// #0
    a770:	b	a75c <PyNumber_FloorDivide@plt+0x5b5c>
    a774:	adrp	x2, 21000 <PyInit__datetime@@Base+0x14918>
    a778:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    a77c:	ldr	x2, [x2, #4024]
    a780:	ldr	x1, [x1, #4016]
    a784:	b	a710 <PyNumber_FloorDivide@plt+0x5b10>
    a788:	sub	sp, sp, #0x50
    a78c:	stp	x29, x30, [sp, #16]
    a790:	add	x29, sp, #0x10
    a794:	stp	x19, x20, [sp, #32]
    a798:	mov	x20, x0
    a79c:	mov	x0, x1
    a7a0:	str	x21, [sp, #48]
    a7a4:	mov	x1, x2
    a7a8:	cbz	x3, a808 <PyNumber_FloorDivide@plt+0x5c08>
    a7ac:	ldr	x2, [x3, #16]
    a7b0:	add	x19, x2, x1
    a7b4:	cbnz	x3, a7c4 <PyNumber_FloorDivide@plt+0x5bc4>
    a7b8:	cmp	x0, #0x0
    a7bc:	ccmp	x1, #0x1, #0x2, ne  // ne = any
    a7c0:	b.ls	a810 <PyNumber_FloorDivide@plt+0x5c10>  // b.plast
    a7c4:	add	x2, sp, #0x48
    a7c8:	str	x2, [sp]
    a7cc:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    a7d0:	add	x4, x4, #0xab8
    a7d4:	add	x4, x4, #0x440
    a7d8:	mov	w7, #0x0                   	// #0
    a7dc:	mov	w6, #0x1                   	// #1
    a7e0:	mov	w5, #0x0                   	// #0
    a7e4:	mov	x2, #0x0                   	// #0
    a7e8:	bl	4870 <_PyArg_UnpackKeywords@plt>
    a7ec:	cbnz	x0, a810 <PyNumber_FloorDivide@plt+0x5c10>
    a7f0:	mov	x0, #0x0                   	// #0
    a7f4:	ldp	x29, x30, [sp, #16]
    a7f8:	ldp	x19, x20, [sp, #32]
    a7fc:	ldr	x21, [sp, #48]
    a800:	add	sp, sp, #0x50
    a804:	ret
    a808:	mov	x2, #0x0                   	// #0
    a80c:	b	a7b0 <PyNumber_FloorDivide@plt+0x5bb0>
    a810:	cbz	x19, a880 <PyNumber_FloorDivide@plt+0x5c80>
    a814:	ldr	x19, [x0]
    a818:	mov	x0, x19
    a81c:	bl	59a4 <PyNumber_FloorDivide@plt+0xda4>
    a820:	tbnz	w0, #31, a7f0 <PyNumber_FloorDivide@plt+0x5bf0>
    a824:	adrp	x21, 21000 <PyInit__datetime@@Base+0x14918>
    a828:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    a82c:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    a830:	mov	x2, x19
    a834:	ldr	x21, [x21, #4024]
    a838:	ldr	x0, [x0, #4016]
    a83c:	cmp	x19, x21
    a840:	ldr	x1, [x1, #4064]
    a844:	csel	x1, x1, x0, eq  // eq = none
    a848:	mov	x0, x20
    a84c:	bl	a710 <PyNumber_FloorDivide@plt+0x5b10>
    a850:	cbz	x0, a7f0 <PyNumber_FloorDivide@plt+0x5bf0>
    a854:	cmp	x19, x21
    a858:	b.eq	a7f4 <PyNumber_FloorDivide@plt+0x5bf4>  // b.none
    a85c:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    a860:	add	x1, x1, #0xab8
    a864:	mov	x3, x0
    a868:	add	x1, x1, #0x428
    a86c:	mov	x0, x19
    a870:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    a874:	add	x2, x2, #0x6c4
    a878:	bl	4a60 <_PyObject_CallMethodId@plt>
    a87c:	b	a7f4 <PyNumber_FloorDivide@plt+0x5bf4>
    a880:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    a884:	ldr	x19, [x19, #4024]
    a888:	b	a818 <PyNumber_FloorDivide@plt+0x5c18>
    a88c:	stp	x29, x30, [sp, #-16]!
    a890:	mov	x7, x0
    a894:	mov	x8, x1
    a898:	mov	x29, sp
    a89c:	ldr	w5, [x0]
    a8a0:	mov	x10, x2
    a8a4:	ldr	w4, [x1]
    a8a8:	mov	w0, w5
    a8ac:	mov	w1, w4
    a8b0:	bl	4d4c <PyNumber_FloorDivide@plt+0x14c>
    a8b4:	ldr	w9, [x10]
    a8b8:	cmp	w9, #0x0
    a8bc:	b.le	a8e0 <PyNumber_FloorDivide@plt+0x5ce0>
    a8c0:	cmp	w9, w0
    a8c4:	b.gt	a91c <PyNumber_FloorDivide@plt+0x5d1c>
    a8c8:	ldr	w0, [x7]
    a8cc:	mov	w1, #0x270e                	// #9998
    a8d0:	sub	w0, w0, #0x1
    a8d4:	cmp	w0, w1
    a8d8:	b.ls	a9b8 <PyNumber_FloorDivide@plt+0x5db8>  // b.plast
    a8dc:	b	a984 <PyNumber_FloorDivide@plt+0x5d84>
    a8e0:	b.ne	a91c <PyNumber_FloorDivide@plt+0x5d1c>  // b.any
    a8e4:	sub	w1, w4, #0x1
    a8e8:	str	w1, [x8]
    a8ec:	cmp	w1, #0x0
    a8f0:	ldr	w0, [x7]
    a8f4:	b.le	a904 <PyNumber_FloorDivide@plt+0x5d04>
    a8f8:	bl	4d4c <PyNumber_FloorDivide@plt+0x14c>
    a8fc:	str	w0, [x10]
    a900:	b	a8c8 <PyNumber_FloorDivide@plt+0x5cc8>
    a904:	sub	w0, w0, #0x1
    a908:	str	w0, [x7]
    a90c:	mov	w0, #0xc                   	// #12
    a910:	str	w0, [x8]
    a914:	mov	w0, #0x1f                  	// #31
    a918:	b	a8fc <PyNumber_FloorDivide@plt+0x5cfc>
    a91c:	add	w0, w0, #0x1
    a920:	cmp	w9, w0
    a924:	b.ne	a958 <PyNumber_FloorDivide@plt+0x5d58>  // b.any
    a928:	add	w4, w4, #0x1
    a92c:	str	w4, [x8]
    a930:	mov	w0, #0x1                   	// #1
    a934:	str	w0, [x10]
    a938:	ldr	w1, [x8]
    a93c:	cmp	w1, #0xc
    a940:	b.le	a8c8 <PyNumber_FloorDivide@plt+0x5cc8>
    a944:	str	w0, [x8]
    a948:	ldr	w0, [x7]
    a94c:	add	w0, w0, #0x1
    a950:	str	w0, [x7]
    a954:	b	a8c8 <PyNumber_FloorDivide@plt+0x5cc8>
    a958:	mov	w1, w4
    a95c:	mov	w0, w5
    a960:	mov	w2, #0x1                   	// #1
    a964:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    a968:	add	w9, w9, w0
    a96c:	mov	w1, #0xb9da                	// #47578
    a970:	sub	w0, w9, #0x1
    a974:	sub	w9, w9, #0x2
    a978:	movk	w1, #0x37, lsl #16
    a97c:	cmp	w9, w1
    a980:	b.ls	a9a8 <PyNumber_FloorDivide@plt+0x5da8>  // b.plast
    a984:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    a988:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    a98c:	add	x1, x1, #0x76f
    a990:	ldr	x0, [x0, #4008]
    a994:	ldr	x0, [x0]
    a998:	bl	4880 <PyErr_SetString@plt>
    a99c:	mov	w0, #0xffffffff            	// #-1
    a9a0:	ldp	x29, x30, [sp], #16
    a9a4:	ret
    a9a8:	mov	x3, x10
    a9ac:	mov	x2, x8
    a9b0:	mov	x1, x7
    a9b4:	bl	4d94 <PyNumber_FloorDivide@plt+0x194>
    a9b8:	mov	w0, #0x0                   	// #0
    a9bc:	b	a9a0 <PyNumber_FloorDivide@plt+0x5da0>
    a9c0:	sub	sp, sp, #0x50
    a9c4:	add	x6, sp, #0x48
    a9c8:	stp	x29, x30, [sp, #16]
    a9cc:	add	x29, sp, #0x10
    a9d0:	str	x19, [sp, #32]
    a9d4:	mov	x19, x0
    a9d8:	ldurh	w0, [x0, #25]
    a9dc:	ldrb	w3, [x19, #28]
    a9e0:	rev16	w0, w0
    a9e4:	and	w0, w0, #0xffff
    a9e8:	str	w0, [sp, #52]
    a9ec:	ldrb	w0, [x19, #27]
    a9f0:	str	w0, [sp, #56]
    a9f4:	ldr	w0, [x1, #24]
    a9f8:	madd	w0, w2, w0, w3
    a9fc:	ldrb	w3, [x19, #31]
    aa00:	str	w0, [sp, #60]
    aa04:	ldrb	w0, [x19, #29]
    aa08:	str	w0, [sp, #64]
    aa0c:	ldrb	w0, [x19, #30]
    aa10:	str	w0, [sp, #68]
    aa14:	ldp	w0, w1, [x1, #28]
    aa18:	madd	w0, w2, w0, w3
    aa1c:	ldrb	w3, [x19, #33]
    aa20:	str	w0, [sp, #72]
    aa24:	ldrb	w0, [x19, #32]
    aa28:	lsl	w3, w3, #8
    aa2c:	orr	w0, w3, w0, lsl #16
    aa30:	ldrb	w3, [x19, #34]
    aa34:	orr	w0, w0, w3
    aa38:	madd	w2, w2, w1, w0
    aa3c:	mov	x0, x6
    aa40:	str	w2, [sp, #76]
    aa44:	add	x1, sp, #0x4c
    aa48:	mov	w2, #0x4240                	// #16960
    aa4c:	movk	w2, #0xf, lsl #16
    aa50:	bl	4eac <PyNumber_FloorDivide@plt+0x2ac>
    aa54:	add	x5, sp, #0x44
    aa58:	mov	x1, x6
    aa5c:	mov	x0, x5
    aa60:	mov	w2, #0x3c                  	// #60
    aa64:	bl	4eac <PyNumber_FloorDivide@plt+0x2ac>
    aa68:	mov	x1, x5
    aa6c:	add	x6, sp, #0x40
    aa70:	mov	w2, #0x3c                  	// #60
    aa74:	mov	x0, x6
    aa78:	bl	4eac <PyNumber_FloorDivide@plt+0x2ac>
    aa7c:	mov	x1, x6
    aa80:	add	x5, sp, #0x3c
    aa84:	mov	w2, #0x18                  	// #24
    aa88:	mov	x0, x5
    aa8c:	bl	4eac <PyNumber_FloorDivide@plt+0x2ac>
    aa90:	mov	x2, x5
    aa94:	add	x1, sp, #0x38
    aa98:	add	x0, sp, #0x34
    aa9c:	bl	a88c <PyNumber_FloorDivide@plt+0x5c8c>
    aaa0:	tbnz	w0, #31, aaec <PyNumber_FloorDivide@plt+0x5eec>
    aaa4:	ldrb	w7, [x19, #24]
    aaa8:	ldp	w0, w1, [sp, #52]
    aaac:	ldp	w2, w3, [sp, #60]
    aab0:	ldp	w4, w5, [sp, #68]
    aab4:	ldr	w6, [sp, #76]
    aab8:	cbz	w7, aae0 <PyNumber_FloorDivide@plt+0x5ee0>
    aabc:	ldr	x7, [x19, #40]
    aac0:	ldr	x8, [x19, #8]
    aac4:	str	wzr, [sp]
    aac8:	str	x8, [sp, #8]
    aacc:	bl	62f8 <PyNumber_FloorDivide@plt+0x16f8>
    aad0:	ldp	x29, x30, [sp, #16]
    aad4:	ldr	x19, [sp, #32]
    aad8:	add	sp, sp, #0x50
    aadc:	ret
    aae0:	adrp	x7, 21000 <PyInit__datetime@@Base+0x14918>
    aae4:	ldr	x7, [x7, #4024]
    aae8:	b	aac0 <PyNumber_FloorDivide@plt+0x5ec0>
    aaec:	mov	x0, #0x0                   	// #0
    aaf0:	b	aad0 <PyNumber_FloorDivide@plt+0x5ed0>
    aaf4:	stp	x29, x30, [sp, #-48]!
    aaf8:	adrp	x2, 22000 <PyInit__datetime@@Base+0x15918>
    aafc:	mov	x29, sp
    ab00:	stp	x19, x20, [sp, #16]
    ab04:	mov	x20, x0
    ab08:	mov	x19, x2
    ab0c:	ldr	x0, [x0, #8]
    ab10:	stp	x21, x22, [sp, #32]
    ab14:	add	x22, x2, #0x298
    ab18:	mov	x21, x1
    ab1c:	add	x1, x22, #0x1a0
    ab20:	cmp	x0, x1
    ab24:	b.ne	ab54 <PyNumber_FloorDivide@plt+0x5f54>  // b.any
    ab28:	ldr	x0, [x21, #8]
    ab2c:	add	x1, x19, #0x298
    ab30:	cmp	x0, x1
    ab34:	b.ne	ab78 <PyNumber_FloorDivide@plt+0x5f78>  // b.any
    ab38:	mov	x1, x21
    ab3c:	mov	x0, x20
    ab40:	mov	w2, #0x1                   	// #1
    ab44:	ldp	x19, x20, [sp, #16]
    ab48:	ldp	x21, x22, [sp, #32]
    ab4c:	ldp	x29, x30, [sp], #48
    ab50:	b	a9c0 <PyNumber_FloorDivide@plt+0x5dc0>
    ab54:	bl	4b30 <PyType_IsSubtype@plt>
    ab58:	cbnz	w0, ab28 <PyNumber_FloorDivide@plt+0x5f28>
    ab5c:	ldr	x0, [x20, #8]
    ab60:	cmp	x0, x22
    ab64:	b.ne	aba4 <PyNumber_FloorDivide@plt+0x5fa4>  // b.any
    ab68:	mov	x1, x20
    ab6c:	mov	x0, x21
    ab70:	mov	w2, #0x1                   	// #1
    ab74:	b	ab44 <PyNumber_FloorDivide@plt+0x5f44>
    ab78:	bl	4b30 <PyType_IsSubtype@plt>
    ab7c:	cbnz	w0, ab38 <PyNumber_FloorDivide@plt+0x5f38>
    ab80:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    ab84:	ldp	x19, x20, [sp, #16]
    ab88:	ldr	x0, [x0, #3960]
    ab8c:	ldp	x21, x22, [sp, #32]
    ab90:	ldr	x1, [x0]
    ab94:	add	x1, x1, #0x1
    ab98:	str	x1, [x0]
    ab9c:	ldp	x29, x30, [sp], #48
    aba0:	ret
    aba4:	mov	x1, x22
    aba8:	bl	4b30 <PyType_IsSubtype@plt>
    abac:	cbz	w0, ab80 <PyNumber_FloorDivide@plt+0x5f80>
    abb0:	b	ab68 <PyNumber_FloorDivide@plt+0x5f68>
    abb4:	stp	x29, x30, [sp, #-32]!
    abb8:	mov	x29, sp
    abbc:	stp	x19, x20, [sp, #16]
    abc0:	mov	x20, x0
    abc4:	mov	x19, x1
    abc8:	ldr	x0, [x1, #8]
    abcc:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    abd0:	add	x1, x1, #0x298
    abd4:	add	x1, x1, #0x1a0
    abd8:	cmp	x0, x1
    abdc:	b.eq	ac10 <PyNumber_FloorDivide@plt+0x6010>  // b.none
    abe0:	bl	4b30 <PyType_IsSubtype@plt>
    abe4:	cbnz	w0, ac10 <PyNumber_FloorDivide@plt+0x6010>
    abe8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    abec:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    abf0:	add	x1, x1, #0x787
    abf4:	ldr	x0, [x0, #3976]
    abf8:	ldr	x0, [x0]
    abfc:	bl	4880 <PyErr_SetString@plt>
    ac00:	mov	x0, #0x0                   	// #0
    ac04:	ldp	x19, x20, [sp, #16]
    ac08:	ldp	x29, x30, [sp], #32
    ac0c:	ret
    ac10:	ldrb	w0, [x19, #24]
    ac14:	cbz	w0, ac24 <PyNumber_FloorDivide@plt+0x6024>
    ac18:	ldr	x0, [x19, #40]
    ac1c:	cmp	x0, x20
    ac20:	b.eq	ac38 <PyNumber_FloorDivide@plt+0x6038>  // b.none
    ac24:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    ac28:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    ac2c:	add	x1, x1, #0x7ac
    ac30:	ldr	x0, [x0, #3968]
    ac34:	b	abf8 <PyNumber_FloorDivide@plt+0x5ff8>
    ac38:	mov	x0, x19
    ac3c:	mov	w2, #0x1                   	// #1
    ac40:	ldr	x1, [x20, #16]
    ac44:	ldp	x19, x20, [sp, #16]
    ac48:	ldp	x29, x30, [sp], #32
    ac4c:	b	a9c0 <PyNumber_FloorDivide@plt+0x5dc0>
    ac50:	stp	x29, x30, [sp, #-80]!
    ac54:	mov	x29, sp
    ac58:	stp	x19, x20, [sp, #16]
    ac5c:	mov	x19, x0
    ac60:	ldr	x0, [x1, #8]
    ac64:	stp	x21, x22, [sp, #32]
    ac68:	mov	x22, x1
    ac6c:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    ac70:	add	x1, x1, #0x298
    ac74:	stp	x23, x24, [sp, #48]
    ac78:	add	x1, x1, #0x1a0
    ac7c:	cmp	x0, x1
    ac80:	str	x25, [sp, #64]
    ac84:	b.eq	acb0 <PyNumber_FloorDivide@plt+0x60b0>  // b.none
    ac88:	bl	4b30 <PyType_IsSubtype@plt>
    ac8c:	cbnz	w0, acb0 <PyNumber_FloorDivide@plt+0x60b0>
    ac90:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    ac94:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    ac98:	add	x1, x1, #0x787
    ac9c:	ldr	x0, [x0, #3976]
    aca0:	ldr	x0, [x0]
    aca4:	bl	4880 <PyErr_SetString@plt>
    aca8:	mov	x21, #0x0                   	// #0
    acac:	b	ae5c <PyNumber_FloorDivide@plt+0x625c>
    acb0:	ldrb	w0, [x22, #24]
    acb4:	cbz	w0, acd8 <PyNumber_FloorDivide@plt+0x60d8>
    acb8:	ldr	x1, [x22, #40]
    acbc:	cmp	x1, x19
    acc0:	b.eq	ace4 <PyNumber_FloorDivide@plt+0x60e4>  // b.none
    acc4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    acc8:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    accc:	add	x1, x1, #0x7ac
    acd0:	ldr	x0, [x0, #3968]
    acd4:	b	aca0 <PyNumber_FloorDivide@plt+0x60a0>
    acd8:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    acdc:	ldr	x1, [x1, #4024]
    ace0:	b	acbc <PyNumber_FloorDivide@plt+0x60bc>
    ace4:	mov	x0, x22
    ace8:	mov	x1, #0x0                   	// #0
    acec:	bl	8c80 <PyNumber_FloorDivide@plt+0x4080>
    acf0:	mov	x21, x0
    acf4:	cbz	x0, ae5c <PyNumber_FloorDivide@plt+0x625c>
    acf8:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    acfc:	mov	x25, x1
    ad00:	ldr	x24, [x1, #4024]
    ad04:	cmp	x0, x24
    ad08:	b.ne	ad34 <PyNumber_FloorDivide@plt+0x6134>  // b.any
    ad0c:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    ad10:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    ad14:	mov	x23, #0x0                   	// #0
    ad18:	add	x1, x1, #0x7cb
    ad1c:	ldr	x0, [x0, #3968]
    ad20:	mov	x19, #0x0                   	// #0
    ad24:	ldr	x0, [x0]
    ad28:	bl	4880 <PyErr_SetString@plt>
    ad2c:	mov	x20, #0x0                   	// #0
    ad30:	b	adec <PyNumber_FloorDivide@plt+0x61ec>
    ad34:	mov	x0, x22
    ad38:	mov	x1, #0x0                   	// #0
    ad3c:	bl	8dfc <PyNumber_FloorDivide@plt+0x41fc>
    ad40:	mov	x19, x0
    ad44:	cbz	x0, ad68 <PyNumber_FloorDivide@plt+0x6168>
    ad48:	cmp	x0, x24
    ad4c:	b.ne	ad70 <PyNumber_FloorDivide@plt+0x6170>  // b.any
    ad50:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    ad54:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    ad58:	add	x1, x1, #0x7f9
    ad5c:	ldr	x0, [x0, #3968]
    ad60:	ldr	x0, [x0]
    ad64:	bl	4880 <PyErr_SetString@plt>
    ad68:	mov	x23, #0x0                   	// #0
    ad6c:	b	ad2c <PyNumber_FloorDivide@plt+0x612c>
    ad70:	mov	x1, x0
    ad74:	mov	x0, x21
    ad78:	bl	5de8 <PyNumber_FloorDivide@plt+0x11e8>
    ad7c:	mov	x23, x0
    ad80:	cbz	x0, ad2c <PyNumber_FloorDivide@plt+0x612c>
    ad84:	mov	x1, x0
    ad88:	mov	w2, #0x1                   	// #1
    ad8c:	mov	x0, x22
    ad90:	bl	a9c0 <PyNumber_FloorDivide@plt+0x5dc0>
    ad94:	mov	x20, x0
    ad98:	cbz	x0, adec <PyNumber_FloorDivide@plt+0x61ec>
    ad9c:	mov	x0, x19
    ada0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    ada4:	ldrb	w0, [x22, #24]
    ada8:	cbz	w0, ae10 <PyNumber_FloorDivide@plt+0x6210>
    adac:	ldr	x0, [x22, #40]
    adb0:	mov	x2, x20
    adb4:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    adb8:	add	x1, x1, #0x3a
    adbc:	bl	8214 <PyNumber_FloorDivide@plt+0x3614>
    adc0:	mov	x19, x0
    adc4:	cbz	x0, adec <PyNumber_FloorDivide@plt+0x61ec>
    adc8:	ldr	x1, [x25, #4024]
    adcc:	cmp	x0, x1
    add0:	b.ne	ae18 <PyNumber_FloorDivide@plt+0x6218>  // b.any
    add4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    add8:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    addc:	add	x1, x1, #0x821
    ade0:	ldr	x0, [x0, #3968]
    ade4:	ldr	x0, [x0]
    ade8:	bl	4880 <PyErr_SetString@plt>
    adec:	mov	x0, x21
    adf0:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    adf4:	mov	x0, x19
    adf8:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    adfc:	mov	x0, x23
    ae00:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    ae04:	mov	x0, x20
    ae08:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    ae0c:	b	aca8 <PyNumber_FloorDivide@plt+0x60a8>
    ae10:	mov	x0, x24
    ae14:	b	adb0 <PyNumber_FloorDivide@plt+0x61b0>
    ae18:	bl	51ac <PyNumber_FloorDivide@plt+0x5ac>
    ae1c:	cbz	w0, ae78 <PyNumber_FloorDivide@plt+0x6278>
    ae20:	mov	x1, x19
    ae24:	mov	w2, #0x1                   	// #1
    ae28:	mov	x0, x20
    ae2c:	bl	a9c0 <PyNumber_FloorDivide@plt+0x5dc0>
    ae30:	mov	x22, x0
    ae34:	mov	x0, x20
    ae38:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    ae3c:	cbz	x22, ad2c <PyNumber_FloorDivide@plt+0x612c>
    ae40:	mov	x0, x23
    ae44:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    ae48:	mov	x0, x19
    ae4c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    ae50:	mov	x0, x21
    ae54:	mov	x21, x22
    ae58:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    ae5c:	mov	x0, x21
    ae60:	ldp	x19, x20, [sp, #16]
    ae64:	ldp	x21, x22, [sp, #32]
    ae68:	ldp	x23, x24, [sp, #48]
    ae6c:	ldr	x25, [sp, #64]
    ae70:	ldp	x29, x30, [sp], #80
    ae74:	ret
    ae78:	mov	x22, x20
    ae7c:	b	ae40 <PyNumber_FloorDivide@plt+0x6240>
    ae80:	stp	x29, x30, [sp, #-48]!
    ae84:	mov	x29, sp
    ae88:	str	x19, [sp, #16]
    ae8c:	mov	x19, x0
    ae90:	ldurh	w0, [x0, #25]
    ae94:	rev16	w0, w0
    ae98:	and	w0, w0, #0xffff
    ae9c:	str	w0, [sp, #36]
    aea0:	ldrb	w0, [x19, #27]
    aea4:	str	w0, [sp, #40]
    aea8:	ldrb	w0, [x19, #28]
    aeac:	cbz	w2, aeb4 <PyNumber_FloorDivide@plt+0x62b4>
    aeb0:	neg	w1, w1
    aeb4:	add	w1, w0, w1
    aeb8:	add	x2, sp, #0x2c
    aebc:	add	x0, sp, #0x24
    aec0:	str	w1, [sp, #44]
    aec4:	add	x1, sp, #0x28
    aec8:	bl	a88c <PyNumber_FloorDivide@plt+0x5c8c>
    aecc:	tbnz	w0, #31, aeec <PyNumber_FloorDivide@plt+0x62ec>
    aed0:	ldp	w0, w1, [sp, #36]
    aed4:	ldr	w2, [sp, #44]
    aed8:	ldr	x3, [x19, #8]
    aedc:	bl	6434 <PyNumber_FloorDivide@plt+0x1834>
    aee0:	ldr	x19, [sp, #16]
    aee4:	ldp	x29, x30, [sp], #48
    aee8:	ret
    aeec:	mov	x0, #0x0                   	// #0
    aef0:	b	aee0 <PyNumber_FloorDivide@plt+0x62e0>
    aef4:	stp	x29, x30, [sp, #-64]!
    aef8:	mov	x29, sp
    aefc:	stp	x19, x20, [sp, #16]
    af00:	mov	x19, x0
    af04:	mov	x20, x1
    af08:	ldr	x0, [x0, #8]
    af0c:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    af10:	stp	x21, x22, [sp, #32]
    af14:	add	x22, x1, #0x298
    af18:	add	x21, x22, #0x1a0
    af1c:	str	x23, [sp, #48]
    af20:	cmp	x0, x21
    af24:	b.ne	af50 <PyNumber_FloorDivide@plt+0x6350>  // b.any
    af28:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    af2c:	ldp	x19, x20, [sp, #16]
    af30:	ldr	x0, [x0, #3960]
    af34:	ldp	x21, x22, [sp, #32]
    af38:	ldr	x1, [x0]
    af3c:	ldr	x23, [sp, #48]
    af40:	add	x1, x1, #0x1
    af44:	str	x1, [x0]
    af48:	ldp	x29, x30, [sp], #64
    af4c:	ret
    af50:	mov	x23, x1
    af54:	mov	x1, x21
    af58:	bl	4b30 <PyType_IsSubtype@plt>
    af5c:	cbnz	w0, af28 <PyNumber_FloorDivide@plt+0x6328>
    af60:	ldr	x0, [x20, #8]
    af64:	cmp	x0, x21
    af68:	b.eq	af28 <PyNumber_FloorDivide@plt+0x6328>  // b.none
    af6c:	mov	x1, x21
    af70:	bl	4b30 <PyType_IsSubtype@plt>
    af74:	cbnz	w0, af28 <PyNumber_FloorDivide@plt+0x6328>
    af78:	ldr	x0, [x19, #8]
    af7c:	add	x1, x22, #0x680
    af80:	cmp	x0, x1
    af84:	b.ne	afb8 <PyNumber_FloorDivide@plt+0x63b8>  // b.any
    af88:	ldr	x0, [x20, #8]
    af8c:	add	x1, x23, #0x298
    af90:	cmp	x0, x1
    af94:	b.ne	afdc <PyNumber_FloorDivide@plt+0x63dc>  // b.any
    af98:	ldr	w1, [x20, #24]
    af9c:	mov	x0, x19
    afa0:	mov	w2, #0x0                   	// #0
    afa4:	ldp	x19, x20, [sp, #16]
    afa8:	ldp	x21, x22, [sp, #32]
    afac:	ldr	x23, [sp, #48]
    afb0:	ldp	x29, x30, [sp], #64
    afb4:	b	ae80 <PyNumber_FloorDivide@plt+0x6280>
    afb8:	bl	4b30 <PyType_IsSubtype@plt>
    afbc:	cbnz	w0, af88 <PyNumber_FloorDivide@plt+0x6388>
    afc0:	ldr	x0, [x19, #8]
    afc4:	cmp	x0, x22
    afc8:	b.ne	afe8 <PyNumber_FloorDivide@plt+0x63e8>  // b.any
    afcc:	ldr	w1, [x19, #24]
    afd0:	mov	x0, x20
    afd4:	mov	w2, #0x0                   	// #0
    afd8:	b	afa4 <PyNumber_FloorDivide@plt+0x63a4>
    afdc:	bl	4b30 <PyType_IsSubtype@plt>
    afe0:	cbz	w0, af28 <PyNumber_FloorDivide@plt+0x6328>
    afe4:	b	af98 <PyNumber_FloorDivide@plt+0x6398>
    afe8:	mov	x1, x22
    afec:	bl	4b30 <PyType_IsSubtype@plt>
    aff0:	cbz	w0, af28 <PyNumber_FloorDivide@plt+0x6328>
    aff4:	b	afcc <PyNumber_FloorDivide@plt+0x63cc>
    aff8:	stp	x29, x30, [sp, #-64]!
    affc:	mov	x29, sp
    b000:	stp	x19, x20, [sp, #16]
    b004:	mov	x20, x0
    b008:	ldr	x0, [x0, #8]
    b00c:	stp	x21, x22, [sp, #32]
    b010:	adrp	x21, 22000 <PyInit__datetime@@Base+0x15918>
    b014:	add	x22, x21, #0x298
    b018:	str	x23, [sp, #48]
    b01c:	add	x23, x22, #0x1a0
    b020:	cmp	x0, x23
    b024:	b.ne	b050 <PyNumber_FloorDivide@plt+0x6450>  // b.any
    b028:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    b02c:	ldp	x19, x20, [sp, #16]
    b030:	ldr	x0, [x0, #3960]
    b034:	ldp	x21, x22, [sp, #32]
    b038:	ldr	x1, [x0]
    b03c:	ldr	x23, [sp, #48]
    b040:	add	x1, x1, #0x1
    b044:	str	x1, [x0]
    b048:	ldp	x29, x30, [sp], #64
    b04c:	ret
    b050:	mov	x19, x1
    b054:	mov	x1, x23
    b058:	bl	4b30 <PyType_IsSubtype@plt>
    b05c:	cbnz	w0, b028 <PyNumber_FloorDivide@plt+0x6428>
    b060:	ldr	x0, [x19, #8]
    b064:	cmp	x0, x23
    b068:	b.eq	b028 <PyNumber_FloorDivide@plt+0x6428>  // b.none
    b06c:	mov	x1, x23
    b070:	bl	4b30 <PyType_IsSubtype@plt>
    b074:	cbnz	w0, b028 <PyNumber_FloorDivide@plt+0x6428>
    b078:	ldr	x0, [x20, #8]
    b07c:	add	x1, x22, #0x680
    b080:	cmp	x0, x1
    b084:	b.ne	b0f8 <PyNumber_FloorDivide@plt+0x64f8>  // b.any
    b088:	ldr	x0, [x19, #8]
    b08c:	add	x22, x21, #0x298
    b090:	add	x1, x22, #0x680
    b094:	cmp	x0, x1
    b098:	b.ne	b104 <PyNumber_FloorDivide@plt+0x6504>  // b.any
    b09c:	ldrb	w2, [x20, #28]
    b0a0:	ldrb	w1, [x20, #27]
    b0a4:	ldurh	w0, [x20, #25]
    b0a8:	rev16	w0, w0
    b0ac:	and	w0, w0, #0xffff
    b0b0:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    b0b4:	ldrb	w2, [x19, #28]
    b0b8:	mov	w7, w0
    b0bc:	ldrb	w1, [x19, #27]
    b0c0:	ldurh	w0, [x19, #25]
    b0c4:	rev16	w0, w0
    b0c8:	and	w0, w0, #0xffff
    b0cc:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    b0d0:	add	x4, x21, #0x298
    b0d4:	sub	w0, w7, w0
    b0d8:	ldp	x19, x20, [sp, #16]
    b0dc:	mov	w3, #0x0                   	// #0
    b0e0:	ldp	x21, x22, [sp, #32]
    b0e4:	mov	w2, #0x0                   	// #0
    b0e8:	ldr	x23, [sp, #48]
    b0ec:	mov	w1, #0x0                   	// #0
    b0f0:	ldp	x29, x30, [sp], #64
    b0f4:	b	5338 <PyNumber_FloorDivide@plt+0x738>
    b0f8:	bl	4b30 <PyType_IsSubtype@plt>
    b0fc:	cbnz	w0, b088 <PyNumber_FloorDivide@plt+0x6488>
    b100:	b	b028 <PyNumber_FloorDivide@plt+0x6428>
    b104:	bl	4b30 <PyType_IsSubtype@plt>
    b108:	cbnz	w0, b09c <PyNumber_FloorDivide@plt+0x649c>
    b10c:	ldr	x0, [x19, #8]
    b110:	cmp	x0, x22
    b114:	b.ne	b138 <PyNumber_FloorDivide@plt+0x6538>  // b.any
    b118:	ldr	w1, [x19, #24]
    b11c:	mov	x0, x20
    b120:	ldp	x19, x20, [sp, #16]
    b124:	mov	w2, #0x1                   	// #1
    b128:	ldp	x21, x22, [sp, #32]
    b12c:	ldr	x23, [sp, #48]
    b130:	ldp	x29, x30, [sp], #64
    b134:	b	ae80 <PyNumber_FloorDivide@plt+0x6280>
    b138:	mov	x1, x22
    b13c:	bl	4b30 <PyType_IsSubtype@plt>
    b140:	cbz	w0, b028 <PyNumber_FloorDivide@plt+0x6428>
    b144:	b	b118 <PyNumber_FloorDivide@plt+0x6518>
    b148:	stp	x29, x30, [sp, #-32]!
    b14c:	mov	x8, x0
    b150:	mov	x29, sp
    b154:	ldurh	w7, [x0, #25]
    b158:	rev16	w7, w7
    b15c:	and	w7, w7, #0xffff
    b160:	mov	w0, w7
    b164:	bl	a0a4 <PyNumber_FloorDivide@plt+0x54a4>
    b168:	ldrb	w2, [x8, #28]
    b16c:	ldrb	w1, [x8, #27]
    b170:	mov	w10, w0
    b174:	mov	w0, w7
    b178:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    b17c:	mov	w9, w0
    b180:	add	x11, sp, #0x1c
    b184:	sub	w0, w0, w10
    b188:	mov	x2, x11
    b18c:	mov	w1, #0x7                   	// #7
    b190:	bl	4ce4 <PyNumber_FloorDivide@plt+0xe4>
    b194:	tbz	w0, #31, b1dc <PyNumber_FloorDivide@plt+0x65dc>
    b198:	sub	w7, w7, #0x1
    b19c:	mov	w0, w7
    b1a0:	bl	a0a4 <PyNumber_FloorDivide@plt+0x54a4>
    b1a4:	mov	x2, x11
    b1a8:	sub	w0, w9, w0
    b1ac:	mov	w1, #0x7                   	// #7
    b1b0:	bl	4ce4 <PyNumber_FloorDivide@plt+0xe4>
    b1b4:	mov	w8, w0
    b1b8:	ldr	w3, [sp, #28]
    b1bc:	add	w2, w8, #0x1
    b1c0:	mov	w1, w7
    b1c4:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    b1c8:	add	w3, w3, #0x1
    b1cc:	add	x0, x0, #0x6bf
    b1d0:	bl	49a0 <Py_BuildValue@plt>
    b1d4:	ldp	x29, x30, [sp], #32
    b1d8:	ret
    b1dc:	mov	w8, w0
    b1e0:	cmp	w0, #0x33
    b1e4:	b.le	b1b8 <PyNumber_FloorDivide@plt+0x65b8>
    b1e8:	add	w10, w7, #0x1
    b1ec:	mov	w0, w10
    b1f0:	bl	a0a4 <PyNumber_FloorDivide@plt+0x54a4>
    b1f4:	cmp	w0, w9
    b1f8:	csel	w7, w7, w10, gt
    b1fc:	csel	w8, w8, wzr, gt
    b200:	b	b1b8 <PyNumber_FloorDivide@plt+0x65b8>
    b204:	stp	x29, x30, [sp, #-64]!
    b208:	mov	x29, sp
    b20c:	stp	x21, x22, [sp, #32]
    b210:	mov	x21, x0
    b214:	ldr	x0, [x0, #8]
    b218:	stp	x19, x20, [sp, #16]
    b21c:	mov	x20, x1
    b220:	stp	x23, x24, [sp, #48]
    b224:	adrp	x24, 22000 <PyInit__datetime@@Base+0x15918>
    b228:	add	x1, x24, #0x298
    b22c:	add	x1, x1, #0x1a0
    b230:	cmp	x0, x1
    b234:	b.ne	b290 <PyNumber_FloorDivide@plt+0x6690>  // b.any
    b238:	ldr	x0, [x20, #8]
    b23c:	add	x19, x24, #0x298
    b240:	add	x1, x19, #0x1a0
    b244:	cmp	x0, x1
    b248:	b.ne	b2c4 <PyNumber_FloorDivide@plt+0x66c4>  // b.any
    b24c:	ldrb	w0, [x21, #24]
    b250:	cbnz	w0, b2f0 <PyNumber_FloorDivide@plt+0x66f0>
    b254:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    b258:	ldr	x1, [x1, #4024]
    b25c:	ldrb	w0, [x20, #24]
    b260:	cbz	w0, b2f8 <PyNumber_FloorDivide@plt+0x66f8>
    b264:	ldr	x0, [x20, #40]
    b268:	cmp	x1, x0
    b26c:	b.ne	b304 <PyNumber_FloorDivide@plt+0x6704>  // b.any
    b270:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    b274:	ldr	x19, [x19, #4024]
    b278:	mov	x22, x19
    b27c:	ldr	x0, [x19]
    b280:	add	x0, x0, #0x2
    b284:	str	x0, [x19]
    b288:	mov	x23, #0x0                   	// #0
    b28c:	b	b3b8 <PyNumber_FloorDivide@plt+0x67b8>
    b290:	bl	4b30 <PyType_IsSubtype@plt>
    b294:	cbnz	w0, b238 <PyNumber_FloorDivide@plt+0x6638>
    b298:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    b29c:	ldr	x19, [x19, #3960]
    b2a0:	ldr	x0, [x19]
    b2a4:	add	x0, x0, #0x1
    b2a8:	str	x0, [x19]
    b2ac:	mov	x0, x19
    b2b0:	ldp	x19, x20, [sp, #16]
    b2b4:	ldp	x21, x22, [sp, #32]
    b2b8:	ldp	x23, x24, [sp, #48]
    b2bc:	ldp	x29, x30, [sp], #64
    b2c0:	ret
    b2c4:	bl	4b30 <PyType_IsSubtype@plt>
    b2c8:	cbnz	w0, b24c <PyNumber_FloorDivide@plt+0x664c>
    b2cc:	ldr	x0, [x20, #8]
    b2d0:	cmp	x0, x19
    b2d4:	b.ne	b4b8 <PyNumber_FloorDivide@plt+0x68b8>  // b.any
    b2d8:	mov	x1, x20
    b2dc:	mov	x0, x21
    b2e0:	mov	w2, #0xffffffff            	// #-1
    b2e4:	bl	a9c0 <PyNumber_FloorDivide@plt+0x5dc0>
    b2e8:	mov	x19, x0
    b2ec:	b	b4a4 <PyNumber_FloorDivide@plt+0x68a4>
    b2f0:	ldr	x1, [x21, #40]
    b2f4:	b	b25c <PyNumber_FloorDivide@plt+0x665c>
    b2f8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    b2fc:	ldr	x0, [x0, #4024]
    b300:	b	b268 <PyNumber_FloorDivide@plt+0x6668>
    b304:	mov	x0, x21
    b308:	mov	x1, #0x0                   	// #0
    b30c:	bl	8c80 <PyNumber_FloorDivide@plt+0x4080>
    b310:	mov	x22, x0
    b314:	cbnz	x0, b320 <PyNumber_FloorDivide@plt+0x6720>
    b318:	mov	x19, #0x0                   	// #0
    b31c:	b	b2ac <PyNumber_FloorDivide@plt+0x66ac>
    b320:	mov	x0, x20
    b324:	mov	x1, #0x0                   	// #0
    b328:	bl	8c80 <PyNumber_FloorDivide@plt+0x4080>
    b32c:	mov	x19, x0
    b330:	cbnz	x0, b340 <PyNumber_FloorDivide@plt+0x6740>
    b334:	mov	x0, x22
    b338:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b33c:	b	b2ac <PyNumber_FloorDivide@plt+0x66ac>
    b340:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    b344:	ldr	x0, [x0, #4024]
    b348:	cmp	x22, x0
    b34c:	cset	w1, ne  // ne = any
    b350:	cmp	x19, x0
    b354:	cset	w0, ne  // ne = any
    b358:	cmp	w1, w0
    b35c:	b.eq	b38c <PyNumber_FloorDivide@plt+0x678c>  // b.none
    b360:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    b364:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    b368:	add	x1, x1, #0x85d
    b36c:	ldr	x0, [x0, #3976]
    b370:	ldr	x0, [x0]
    b374:	bl	4880 <PyErr_SetString@plt>
    b378:	mov	x0, x22
    b37c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b380:	mov	x0, x19
    b384:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b388:	b	b318 <PyNumber_FloorDivide@plt+0x6718>
    b38c:	cmp	x22, x19
    b390:	b.eq	b288 <PyNumber_FloorDivide@plt+0x6688>  // b.none
    b394:	mov	x1, x19
    b398:	mov	x0, x22
    b39c:	bl	58e8 <PyNumber_FloorDivide@plt+0xce8>
    b3a0:	cbz	w0, b288 <PyNumber_FloorDivide@plt+0x6688>
    b3a4:	mov	x1, x19
    b3a8:	mov	x0, x22
    b3ac:	bl	5de8 <PyNumber_FloorDivide@plt+0x11e8>
    b3b0:	mov	x23, x0
    b3b4:	cbz	x0, b378 <PyNumber_FloorDivide@plt+0x6778>
    b3b8:	mov	x0, x22
    b3bc:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b3c0:	mov	x0, x19
    b3c4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b3c8:	ldrb	w2, [x21, #28]
    b3cc:	ldrb	w1, [x21, #27]
    b3d0:	ldurh	w0, [x21, #25]
    b3d4:	rev16	w0, w0
    b3d8:	and	w0, w0, #0xffff
    b3dc:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    b3e0:	ldrb	w2, [x20, #28]
    b3e4:	mov	w7, w0
    b3e8:	ldrb	w1, [x20, #27]
    b3ec:	ldurh	w0, [x20, #25]
    b3f0:	rev16	w0, w0
    b3f4:	and	w0, w0, #0xffff
    b3f8:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    b3fc:	ldrb	w2, [x21, #33]
    b400:	add	x4, x24, #0x298
    b404:	ldrb	w6, [x21, #32]
    b408:	sub	w0, w7, w0
    b40c:	ldrb	w1, [x20, #32]
    b410:	lsl	w2, w2, #8
    b414:	ldrb	w5, [x21, #29]
    b418:	orr	w6, w2, w6, lsl #16
    b41c:	ldrb	w2, [x21, #34]
    b420:	ldrb	w3, [x20, #30]
    b424:	orr	w6, w6, w2
    b428:	ldrb	w2, [x20, #33]
    b42c:	lsl	w2, w2, #8
    b430:	orr	w1, w2, w1, lsl #16
    b434:	ldrb	w2, [x20, #34]
    b438:	orr	w2, w1, w2
    b43c:	ldrb	w1, [x20, #29]
    b440:	sub	w2, w6, w2
    b444:	sub	w5, w5, w1
    b448:	ldrb	w1, [x21, #30]
    b44c:	sub	w1, w1, w3
    b450:	mov	w3, #0x3c                  	// #60
    b454:	mul	w1, w1, w3
    b458:	mov	w3, #0xe10                 	// #3600
    b45c:	madd	w5, w5, w3, w1
    b460:	ldrb	w3, [x20, #31]
    b464:	ldrb	w1, [x21, #31]
    b468:	sub	w1, w1, w3
    b46c:	mov	w3, #0x1                   	// #1
    b470:	add	w1, w5, w1
    b474:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    b478:	mov	x19, x0
    b47c:	cbz	x0, b318 <PyNumber_FloorDivide@plt+0x6718>
    b480:	cbz	x23, b4a4 <PyNumber_FloorDivide@plt+0x68a4>
    b484:	mov	x1, x23
    b488:	bl	5de8 <PyNumber_FloorDivide@plt+0x11e8>
    b48c:	mov	x20, x0
    b490:	mov	x0, x19
    b494:	mov	x19, x20
    b498:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b49c:	mov	x0, x23
    b4a0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b4a4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    b4a8:	ldr	x0, [x0, #3960]
    b4ac:	cmp	x19, x0
    b4b0:	b.ne	b2ac <PyNumber_FloorDivide@plt+0x66ac>  // b.any
    b4b4:	b	b298 <PyNumber_FloorDivide@plt+0x6698>
    b4b8:	mov	x1, x19
    b4bc:	bl	4b30 <PyType_IsSubtype@plt>
    b4c0:	cbnz	w0, b2d8 <PyNumber_FloorDivide@plt+0x66d8>
    b4c4:	b	b298 <PyNumber_FloorDivide@plt+0x6698>
    b4c8:	sub	sp, sp, #0x70
    b4cc:	add	x4, sp, #0x68
    b4d0:	stp	x29, x30, [sp, #16]
    b4d4:	add	x29, sp, #0x10
    b4d8:	stp	x21, x22, [sp, #48]
    b4dc:	adrp	x22, 21000 <PyInit__datetime@@Base+0x14918>
    b4e0:	ldr	x21, [x22, #4024]
    b4e4:	stp	x23, x24, [sp, #64]
    b4e8:	adrp	x23, 22000 <PyInit__datetime@@Base+0x15918>
    b4ec:	add	x3, x23, #0xab8
    b4f0:	stp	x19, x20, [sp, #32]
    b4f4:	add	x3, x3, #0x480
    b4f8:	mov	x19, x0
    b4fc:	mov	x0, x1
    b500:	mov	x1, x2
    b504:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    b508:	add	x2, x2, #0x894
    b50c:	str	x25, [sp, #80]
    b510:	str	x21, [sp, #104]
    b514:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    b518:	cbnz	w0, b524 <PyNumber_FloorDivide@plt+0x6924>
    b51c:	mov	x19, #0x0                   	// #0
    b520:	b	b5b4 <PyNumber_FloorDivide@plt+0x69b4>
    b524:	ldr	x0, [sp, #104]
    b528:	bl	59a4 <PyNumber_FloorDivide@plt+0xda4>
    b52c:	cmn	w0, #0x1
    b530:	b.eq	b51c <PyNumber_FloorDivide@plt+0x691c>  // b.none
    b534:	ldrb	w0, [x19, #24]
    b538:	cbz	w0, b548 <PyNumber_FloorDivide@plt+0x6948>
    b53c:	ldr	x20, [x19, #40]
    b540:	cmp	x20, x21
    b544:	b.ne	b5d4 <PyNumber_FloorDivide@plt+0x69d4>  // b.any
    b548:	ldrb	w6, [x19, #35]
    b54c:	ldrb	w5, [x19, #31]
    b550:	ldrb	w4, [x19, #30]
    b554:	ldrb	w3, [x19, #29]
    b558:	ldrb	w2, [x19, #28]
    b55c:	ldrb	w1, [x19, #27]
    b560:	ldurh	w0, [x19, #25]
    b564:	rev16	w0, w0
    b568:	and	w0, w0, #0xffff
    b56c:	bl	a33c <PyNumber_FloorDivide@plt+0x573c>
    b570:	cmn	x0, #0x1
    b574:	b.eq	b51c <PyNumber_FloorDivide@plt+0x691c>  // b.none
    b578:	mov	x1, #0xffffffffffffb780    	// #-18560
    b57c:	movk	x1, #0x886c, lsl #16
    b580:	movk	x1, #0xfff1, lsl #32
    b584:	add	x0, x0, x1
    b588:	bl	7e24 <PyNumber_FloorDivide@plt+0x3224>
    b58c:	mov	x20, x0
    b590:	cbz	x0, b51c <PyNumber_FloorDivide@plt+0x691c>
    b594:	ldr	x0, [sp, #104]
    b598:	cmp	x0, x20
    b59c:	b.ne	b5e4 <PyNumber_FloorDivide@plt+0x69e4>  // b.any
    b5a0:	mov	x0, x20
    b5a4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b5a8:	ldr	x0, [x19]
    b5ac:	add	x0, x0, #0x1
    b5b0:	str	x0, [x19]
    b5b4:	mov	x0, x19
    b5b8:	ldp	x29, x30, [sp, #16]
    b5bc:	ldp	x19, x20, [sp, #32]
    b5c0:	ldp	x21, x22, [sp, #48]
    b5c4:	ldp	x23, x24, [sp, #64]
    b5c8:	ldr	x25, [sp, #80]
    b5cc:	add	sp, sp, #0x70
    b5d0:	ret
    b5d4:	ldr	x0, [x20]
    b5d8:	add	x0, x0, #0x1
    b5dc:	str	x0, [x20]
    b5e0:	b	b594 <PyNumber_FloorDivide@plt+0x6994>
    b5e4:	mov	x2, x19
    b5e8:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    b5ec:	add	x1, x1, #0xe28
    b5f0:	mov	x0, x20
    b5f4:	bl	8214 <PyNumber_FloorDivide@plt+0x3614>
    b5f8:	mov	x21, x0
    b5fc:	mov	x0, x20
    b600:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b604:	cbz	x21, b51c <PyNumber_FloorDivide@plt+0x691c>
    b608:	ldr	x0, [x22, #4024]
    b60c:	cmp	x21, x0
    b610:	b.ne	b620 <PyNumber_FloorDivide@plt+0x6a20>  // b.any
    b614:	mov	x0, x21
    b618:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b61c:	b	b548 <PyNumber_FloorDivide@plt+0x6948>
    b620:	ldr	x0, [x21, #8]
    b624:	adrp	x24, 22000 <PyInit__datetime@@Base+0x15918>
    b628:	add	x1, x24, #0x298
    b62c:	cmp	x0, x1
    b630:	b.eq	b668 <PyNumber_FloorDivide@plt+0x6a68>  // b.none
    b634:	bl	4b30 <PyType_IsSubtype@plt>
    b638:	cbnz	w0, b668 <PyNumber_FloorDivide@plt+0x6a68>
    b63c:	mov	x0, x21
    b640:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b644:	ldr	x0, [x21, #8]
    b648:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    b64c:	add	x1, x1, #0x8a2
    b650:	ldr	x2, [x0, #24]
    b654:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    b658:	ldr	x0, [x0, #3976]
    b65c:	ldr	x0, [x0]
    b660:	bl	4b60 <PyErr_Format@plt>
    b664:	b	b51c <PyNumber_FloorDivide@plt+0x691c>
    b668:	mov	x1, x21
    b66c:	mov	w2, #0xffffffff            	// #-1
    b670:	mov	x0, x19
    b674:	bl	a9c0 <PyNumber_FloorDivide@plt+0x5dc0>
    b678:	mov	x19, x0
    b67c:	mov	x0, x21
    b680:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b684:	cbz	x19, b51c <PyNumber_FloorDivide@plt+0x691c>
    b688:	ldrb	w0, [x19, #24]
    b68c:	adrp	x21, 23000 <PyInit__datetime@@Base+0x16918>
    b690:	ldr	x7, [x21, #3960]
    b694:	cbnz	w0, b730 <PyNumber_FloorDivide@plt+0x6b30>
    b698:	ldrb	w8, [x19, #33]
    b69c:	ldrb	w6, [x19, #32]
    b6a0:	ldrb	w1, [x19, #27]
    b6a4:	lsl	w8, w8, #8
    b6a8:	ldrb	w2, [x19, #28]
    b6ac:	ldrb	w3, [x19, #29]
    b6b0:	orr	w6, w8, w6, lsl #16
    b6b4:	ldrb	w4, [x19, #30]
    b6b8:	ldrb	w8, [x19, #34]
    b6bc:	ldrb	w5, [x19, #31]
    b6c0:	ldrb	w9, [x19, #35]
    b6c4:	orr	w6, w6, w8
    b6c8:	ldr	x10, [x19, #8]
    b6cc:	ldurh	w0, [x19, #25]
    b6d0:	str	w9, [sp]
    b6d4:	str	x10, [sp, #8]
    b6d8:	rev16	w0, w0
    b6dc:	and	w0, w0, #0xffff
    b6e0:	bl	61c4 <PyNumber_FloorDivide@plt+0x15c4>
    b6e4:	mov	x20, x0
    b6e8:	mov	x0, x19
    b6ec:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b6f0:	cbz	x20, b51c <PyNumber_FloorDivide@plt+0x691c>
    b6f4:	ldr	x22, [x22, #4024]
    b6f8:	ldr	x0, [sp, #104]
    b6fc:	ldr	x25, [x20, #40]
    b700:	cmp	x0, x22
    b704:	b.ne	b80c <PyNumber_FloorDivide@plt+0x6c0c>  // b.any
    b708:	add	x21, x21, #0xf78
    b70c:	mov	x0, x20
    b710:	ldr	x1, [x21, #72]
    b714:	bl	b204 <PyNumber_FloorDivide@plt+0x6604>
    b718:	mov	x19, x0
    b71c:	cbnz	x0, b750 <PyNumber_FloorDivide@plt+0x6b50>
    b720:	str	xzr, [sp, #104]
    b724:	mov	x0, x20
    b728:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b72c:	b	b51c <PyNumber_FloorDivide@plt+0x691c>
    b730:	ldr	x1, [x7]
    b734:	mov	x20, x19
    b738:	ldr	x0, [x19, #40]
    b73c:	add	x1, x1, #0x1
    b740:	str	x7, [x19, #40]
    b744:	str	x1, [x7]
    b748:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b74c:	b	b6f4 <PyNumber_FloorDivide@plt+0x6af4>
    b750:	add	x4, x24, #0x298
    b754:	mov	w3, #0x0                   	// #0
    b758:	mov	w2, #0x0                   	// #0
    b75c:	mov	w1, #0x1                   	// #1
    b760:	mov	w0, #0x0                   	// #0
    b764:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    b768:	mov	x22, x0
    b76c:	cbnz	x0, b77c <PyNumber_FloorDivide@plt+0x6b7c>
    b770:	mov	x0, x19
    b774:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b778:	b	b720 <PyNumber_FloorDivide@plt+0x6b20>
    b77c:	mov	x1, x0
    b780:	mov	x0, x19
    b784:	bl	7770 <PyNumber_FloorDivide@plt+0x2b70>
    b788:	mov	x21, x0
    b78c:	mov	x0, x22
    b790:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b794:	mov	x0, x19
    b798:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b79c:	cbz	x21, b720 <PyNumber_FloorDivide@plt+0x6b20>
    b7a0:	mov	x0, x21
    b7a4:	bl	4aa0 <_PyLong_AsTime_t@plt>
    b7a8:	mov	x19, x0
    b7ac:	mov	x0, x21
    b7b0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b7b4:	cmn	x19, #0x1
    b7b8:	b.ne	b7c4 <PyNumber_FloorDivide@plt+0x6bc4>  // b.any
    b7bc:	bl	49b0 <PyErr_Occurred@plt>
    b7c0:	cbnz	x0, b720 <PyNumber_FloorDivide@plt+0x6b20>
    b7c4:	mov	x0, x19
    b7c8:	bl	7e24 <PyNumber_FloorDivide@plt+0x3224>
    b7cc:	str	x0, [sp, #104]
    b7d0:	cbz	x0, b724 <PyNumber_FloorDivide@plt+0x6b24>
    b7d4:	ldr	x0, [sp, #104]
    b7d8:	str	x0, [x20, #40]
    b7dc:	mov	x0, x25
    b7e0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b7e4:	ldr	x0, [sp, #104]
    b7e8:	add	x1, x23, #0xab8
    b7ec:	mov	x2, x20
    b7f0:	add	x1, x1, #0x428
    b7f4:	mov	x3, #0x0                   	// #0
    b7f8:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    b7fc:	mov	x19, x0
    b800:	mov	x0, x20
    b804:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b808:	b	b5b4 <PyNumber_FloorDivide@plt+0x69b4>
    b80c:	ldr	x1, [x0]
    b810:	add	x1, x1, #0x1
    b814:	str	x1, [x0]
    b818:	b	b7d4 <PyNumber_FloorDivide@plt+0x6bd4>
    b81c:	stp	x29, x30, [sp, #-32]!
    b820:	mov	x29, sp
    b824:	stp	x19, x20, [sp, #16]
    b828:	mov	x19, x0
    b82c:	ldrb	w1, [x0, #24]
    b830:	cbz	w1, b888 <PyNumber_FloorDivide@plt+0x6c88>
    b834:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    b838:	ldr	x2, [x0, #40]
    b83c:	ldr	x1, [x1, #4024]
    b840:	cmp	x2, x1
    b844:	b.eq	b888 <PyNumber_FloorDivide@plt+0x6c88>  // b.none
    b848:	adrp	x1, 23000 <PyInit__datetime@@Base+0x16918>
    b84c:	ldr	x1, [x1, #4032]
    b850:	bl	b204 <PyNumber_FloorDivide@plt+0x6604>
    b854:	mov	x20, x0
    b858:	cbnz	x0, b870 <PyNumber_FloorDivide@plt+0x6c70>
    b85c:	mov	x19, #0x0                   	// #0
    b860:	mov	x0, x19
    b864:	ldp	x19, x20, [sp, #16]
    b868:	ldp	x29, x30, [sp], #32
    b86c:	ret
    b870:	mov	x1, #0x0                   	// #0
    b874:	bl	7454 <PyNumber_FloorDivide@plt+0x2854>
    b878:	mov	x19, x0
    b87c:	mov	x0, x20
    b880:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    b884:	b	b860 <PyNumber_FloorDivide@plt+0x6c60>
    b888:	ldrb	w6, [x19, #35]
    b88c:	ldrb	w5, [x19, #31]
    b890:	ldrb	w4, [x19, #30]
    b894:	ldrb	w3, [x19, #29]
    b898:	ldrb	w2, [x19, #28]
    b89c:	ldrb	w1, [x19, #27]
    b8a0:	ldurh	w0, [x19, #25]
    b8a4:	rev16	w0, w0
    b8a8:	and	w0, w0, #0xffff
    b8ac:	bl	a33c <PyNumber_FloorDivide@plt+0x573c>
    b8b0:	cmn	x0, #0x1
    b8b4:	b.eq	b85c <PyNumber_FloorDivide@plt+0x6c5c>  // b.none
    b8b8:	ldrb	w2, [x19, #33]
    b8bc:	ldrb	w1, [x19, #32]
    b8c0:	lsl	w2, w2, #8
    b8c4:	orr	w1, w2, w1, lsl #16
    b8c8:	ldrb	w2, [x19, #34]
    b8cc:	ldp	x19, x20, [sp, #16]
    b8d0:	orr	w1, w1, w2
    b8d4:	ldp	x29, x30, [sp], #32
    b8d8:	scvtf	d0, w1
    b8dc:	mov	x1, #0x848000000000        	// #145685290680320
    b8e0:	movk	x1, #0x412e, lsl #48
    b8e4:	fmov	d1, x1
    b8e8:	mov	x1, #0xffffffffffffb780    	// #-18560
    b8ec:	fdiv	d0, d0, d1
    b8f0:	movk	x1, #0x886c, lsl #16
    b8f4:	movk	x1, #0xfff1, lsl #32
    b8f8:	add	x0, x0, x1
    b8fc:	scvtf	d1, x0
    b900:	fadd	d0, d0, d1
    b904:	b	48e0 <PyFloat_FromDouble@plt>
    b908:	stp	x29, x30, [sp, #-64]!
    b90c:	mov	x29, sp
    b910:	stp	x23, x24, [sp, #48]
    b914:	mov	x23, x0
    b918:	adrp	x24, 22000 <PyInit__datetime@@Base+0x15918>
    b91c:	ldr	x0, [x1, #8]
    b920:	stp	x19, x20, [sp, #16]
    b924:	add	x19, x24, #0x298
    b928:	stp	x21, x22, [sp, #32]
    b92c:	mov	x20, x1
    b930:	add	x1, x19, #0x1a0
    b934:	mov	w22, w2
    b938:	cmp	x0, x1
    b93c:	b.eq	b9e4 <PyNumber_FloorDivide@plt+0x6de4>  // b.none
    b940:	bl	4b30 <PyType_IsSubtype@plt>
    b944:	cbnz	w0, b9e4 <PyNumber_FloorDivide@plt+0x6de4>
    b948:	ldr	x0, [x20, #8]
    b94c:	add	x1, x19, #0x680
    b950:	cmp	x0, x1
    b954:	b.ne	b98c <PyNumber_FloorDivide@plt+0x6d8c>  // b.any
    b958:	cmp	w22, #0x2
    b95c:	b.ne	b9a0 <PyNumber_FloorDivide@plt+0x6da0>  // b.any
    b960:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    b964:	ldr	x19, [x19, #3992]
    b968:	ldr	x0, [x19]
    b96c:	add	x0, x0, #0x1
    b970:	str	x0, [x19]
    b974:	mov	x0, x19
    b978:	ldp	x19, x20, [sp, #16]
    b97c:	ldp	x21, x22, [sp, #32]
    b980:	ldp	x23, x24, [sp, #48]
    b984:	ldp	x29, x30, [sp], #64
    b988:	ret
    b98c:	bl	4b30 <PyType_IsSubtype@plt>
    b990:	cbnz	w0, b958 <PyNumber_FloorDivide@plt+0x6d58>
    b994:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    b998:	ldr	x19, [x19, #3960]
    b99c:	b	b968 <PyNumber_FloorDivide@plt+0x6d68>
    b9a0:	cmp	w22, #0x3
    b9a4:	b.ne	b9b4 <PyNumber_FloorDivide@plt+0x6db4>  // b.any
    b9a8:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    b9ac:	ldr	x19, [x19, #4040]
    b9b0:	b	b968 <PyNumber_FloorDivide@plt+0x6d68>
    b9b4:	ldr	x0, [x23, #8]
    b9b8:	mov	x19, #0x0                   	// #0
    b9bc:	ldr	x1, [x20, #8]
    b9c0:	ldr	x2, [x0, #24]
    b9c4:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    b9c8:	ldr	x3, [x1, #24]
    b9cc:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    b9d0:	ldr	x0, [x0, #3976]
    b9d4:	add	x1, x1, #0x8da
    b9d8:	ldr	x0, [x0]
    b9dc:	bl	4b60 <PyErr_Format@plt>
    b9e0:	b	b974 <PyNumber_FloorDivide@plt+0x6d74>
    b9e4:	ldrb	w0, [x23, #24]
    b9e8:	cbz	w0, ba2c <PyNumber_FloorDivide@plt+0x6e2c>
    b9ec:	ldr	x1, [x23, #40]
    b9f0:	ldrb	w0, [x20, #24]
    b9f4:	cbz	w0, ba38 <PyNumber_FloorDivide@plt+0x6e38>
    b9f8:	ldr	x0, [x20, #40]
    b9fc:	cmp	x1, x0
    ba00:	b.ne	ba44 <PyNumber_FloorDivide@plt+0x6e44>  // b.any
    ba04:	add	x1, x20, #0x19
    ba08:	add	x0, x23, #0x19
    ba0c:	mov	x2, #0xa                   	// #10
    ba10:	bl	49e0 <memcmp@plt>
    ba14:	mov	w1, w22
    ba18:	ldp	x19, x20, [sp, #16]
    ba1c:	ldp	x21, x22, [sp, #32]
    ba20:	ldp	x23, x24, [sp, #48]
    ba24:	ldp	x29, x30, [sp], #64
    ba28:	b	5468 <PyNumber_FloorDivide@plt+0x868>
    ba2c:	adrp	x1, 21000 <PyInit__datetime@@Base+0x14918>
    ba30:	ldr	x1, [x1, #4024]
    ba34:	b	b9f0 <PyNumber_FloorDivide@plt+0x6df0>
    ba38:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    ba3c:	ldr	x0, [x0, #4024]
    ba40:	b	b9fc <PyNumber_FloorDivide@plt+0x6dfc>
    ba44:	mov	x0, x23
    ba48:	mov	x1, #0x0                   	// #0
    ba4c:	bl	8c80 <PyNumber_FloorDivide@plt+0x4080>
    ba50:	mov	x19, x0
    ba54:	cbz	x0, b974 <PyNumber_FloorDivide@plt+0x6d74>
    ba58:	mov	x0, x20
    ba5c:	mov	x1, #0x0                   	// #0
    ba60:	bl	8c80 <PyNumber_FloorDivide@plt+0x4080>
    ba64:	mov	x21, x0
    ba68:	cbnz	x0, ba74 <PyNumber_FloorDivide@plt+0x6e74>
    ba6c:	mov	x20, #0x0                   	// #0
    ba70:	b	baa4 <PyNumber_FloorDivide@plt+0x6ea4>
    ba74:	cmp	x19, x0
    ba78:	b.ne	babc <PyNumber_FloorDivide@plt+0x6ebc>  // b.any
    ba7c:	add	x1, x20, #0x19
    ba80:	add	x0, x23, #0x19
    ba84:	mov	x2, #0xa                   	// #10
    ba88:	bl	49e0 <memcmp@plt>
    ba8c:	sub	w1, w22, #0x2
    ba90:	cmp	w1, #0x1
    ba94:	b.ls	bb80 <PyNumber_FloorDivide@plt+0x6f80>  // b.plast
    ba98:	mov	w1, w22
    ba9c:	bl	5468 <PyNumber_FloorDivide@plt+0x868>
    baa0:	mov	x20, x0
    baa4:	mov	x0, x19
    baa8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    baac:	mov	x0, x21
    bab0:	mov	x19, x20
    bab4:	bl	6780 <PyNumber_FloorDivide@plt+0x1b80>
    bab8:	b	b974 <PyNumber_FloorDivide@plt+0x6d74>
    babc:	ldr	x0, [x19, #8]
    bac0:	add	x1, x24, #0x298
    bac4:	cmp	x0, x1
    bac8:	b.ne	baf0 <PyNumber_FloorDivide@plt+0x6ef0>  // b.any
    bacc:	ldr	x0, [x21, #8]
    bad0:	add	x1, x24, #0x298
    bad4:	cmp	x0, x1
    bad8:	b.ne	bb74 <PyNumber_FloorDivide@plt+0x6f74>  // b.any
    badc:	mov	x1, x21
    bae0:	mov	x0, x19
    bae4:	bl	58e8 <PyNumber_FloorDivide@plt+0xce8>
    bae8:	cbz	w0, ba7c <PyNumber_FloorDivide@plt+0x6e7c>
    baec:	b	baf8 <PyNumber_FloorDivide@plt+0x6ef8>
    baf0:	bl	4b30 <PyType_IsSubtype@plt>
    baf4:	cbnz	w0, bacc <PyNumber_FloorDivide@plt+0x6ecc>
    baf8:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    bafc:	ldr	x0, [x0, #4024]
    bb00:	cmp	x19, x0
    bb04:	b.eq	bbac <PyNumber_FloorDivide@plt+0x6fac>  // b.none
    bb08:	cmp	x21, x0
    bb0c:	b.eq	bbac <PyNumber_FloorDivide@plt+0x6fac>  // b.none
    bb10:	mov	x1, x20
    bb14:	mov	x0, x23
    bb18:	bl	b204 <PyNumber_FloorDivide@plt+0x6604>
    bb1c:	cbz	x0, ba6c <PyNumber_FloorDivide@plt+0x6e6c>
    bb20:	ldr	w24, [x0, #24]
    bb24:	cbnz	w24, bb30 <PyNumber_FloorDivide@plt+0x6f30>
    bb28:	ldp	w24, w1, [x0, #28]
    bb2c:	orr	w24, w24, w1
    bb30:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    bb34:	sub	w0, w22, #0x2
    bb38:	cmp	w0, #0x1
    bb3c:	b.hi	bb68 <PyNumber_FloorDivide@plt+0x6f68>  // b.pmore
    bb40:	cbnz	w24, bb68 <PyNumber_FloorDivide@plt+0x6f68>
    bb44:	mov	x3, x21
    bb48:	mov	x2, x19
    bb4c:	mov	x1, x20
    bb50:	mov	x0, x23
    bb54:	bl	8d5c <PyNumber_FloorDivide@plt+0x415c>
    bb58:	cmn	w0, #0x1
    bb5c:	b.eq	ba6c <PyNumber_FloorDivide@plt+0x6e6c>  // b.none
    bb60:	cmp	w0, #0x0
    bb64:	cset	w24, ne  // ne = any
    bb68:	mov	w1, w22
    bb6c:	mov	w0, w24
    bb70:	b	ba9c <PyNumber_FloorDivide@plt+0x6e9c>
    bb74:	bl	4b30 <PyType_IsSubtype@plt>
    bb78:	cbnz	w0, badc <PyNumber_FloorDivide@plt+0x6edc>
    bb7c:	b	baf8 <PyNumber_FloorDivide@plt+0x6ef8>
    bb80:	cbnz	w0, ba98 <PyNumber_FloorDivide@plt+0x6e98>
    bb84:	mov	x3, x21
    bb88:	mov	x2, x19
    bb8c:	mov	x1, x20
    bb90:	mov	x0, x23
    bb94:	bl	8d5c <PyNumber_FloorDivide@plt+0x415c>
    bb98:	cmn	w0, #0x1
    bb9c:	b.eq	ba6c <PyNumber_FloorDivide@plt+0x6e6c>  // b.none
    bba0:	cmp	w0, #0x0
    bba4:	cset	w0, ne  // ne = any
    bba8:	b	ba98 <PyNumber_FloorDivide@plt+0x6e98>
    bbac:	cmp	w22, #0x2
    bbb0:	b.ne	bbcc <PyNumber_FloorDivide@plt+0x6fcc>  // b.any
    bbb4:	adrp	x20, 21000 <PyInit__datetime@@Base+0x14918>
    bbb8:	ldr	x20, [x20, #3992]
    bbbc:	ldr	x0, [x20]
    bbc0:	add	x0, x0, #0x1
    bbc4:	str	x0, [x20]
    bbc8:	b	baa4 <PyNumber_FloorDivide@plt+0x6ea4>
    bbcc:	cmp	w22, #0x3
    bbd0:	b.ne	bbe0 <PyNumber_FloorDivide@plt+0x6fe0>  // b.any
    bbd4:	adrp	x20, 21000 <PyInit__datetime@@Base+0x14918>
    bbd8:	ldr	x20, [x20, #4040]
    bbdc:	b	bbbc <PyNumber_FloorDivide@plt+0x6fbc>
    bbe0:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    bbe4:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    bbe8:	add	x1, x1, #0x8f1
    bbec:	ldr	x0, [x0, #3976]
    bbf0:	ldr	x0, [x0]
    bbf4:	bl	4880 <PyErr_SetString@plt>
    bbf8:	b	ba6c <PyNumber_FloorDivide@plt+0x6e6c>
    bbfc:	sub	sp, sp, #0x50
    bc00:	stp	x29, x30, [sp, #16]
    bc04:	add	x29, sp, #0x10
    bc08:	stp	x21, x22, [sp, #48]
    bc0c:	ldr	x22, [x0, #16]
    bc10:	stp	x19, x20, [sp, #32]
    bc14:	mov	x19, x0
    bc18:	str	x23, [sp, #64]
    bc1c:	cmn	x22, #0x1
    bc20:	b.ne	bd04 <PyNumber_FloorDivide@plt+0x7104>  // b.any
    bc24:	ldrb	w0, [x0, #35]
    bc28:	cbz	w0, bcb0 <PyNumber_FloorDivide@plt+0x70b0>
    bc2c:	ldrb	w7, [x19, #33]
    bc30:	ldrb	w6, [x19, #32]
    bc34:	ldurh	w0, [x19, #25]
    bc38:	lsl	w7, w7, #8
    bc3c:	ldrb	w1, [x19, #27]
    bc40:	orr	w6, w7, w6, lsl #16
    bc44:	ldrb	w7, [x19, #34]
    bc48:	rev16	w0, w0
    bc4c:	ldrb	w2, [x19, #28]
    bc50:	orr	w6, w6, w7
    bc54:	ldrb	w7, [x19, #24]
    bc58:	ldrb	w3, [x19, #29]
    bc5c:	and	w0, w0, #0xffff
    bc60:	ldrb	w4, [x19, #30]
    bc64:	ldrb	w5, [x19, #31]
    bc68:	cbz	w7, bca4 <PyNumber_FloorDivide@plt+0x70a4>
    bc6c:	ldr	x7, [x19, #40]
    bc70:	ldr	x8, [x19, #8]
    bc74:	str	wzr, [sp]
    bc78:	str	x8, [sp, #8]
    bc7c:	bl	61c4 <PyNumber_FloorDivide@plt+0x15c4>
    bc80:	mov	x21, x0
    bc84:	cbnz	x0, bcc0 <PyNumber_FloorDivide@plt+0x70c0>
    bc88:	mov	x0, x22
    bc8c:	ldp	x29, x30, [sp, #16]
    bc90:	ldp	x19, x20, [sp, #32]
    bc94:	ldp	x21, x22, [sp, #48]
    bc98:	ldr	x23, [sp, #64]
    bc9c:	add	sp, sp, #0x50
    bca0:	ret
    bca4:	adrp	x7, 21000 <PyInit__datetime@@Base+0x14918>
    bca8:	ldr	x7, [x7, #4024]
    bcac:	b	bc70 <PyNumber_FloorDivide@plt+0x7070>
    bcb0:	ldr	x0, [x19]
    bcb4:	mov	x21, x19
    bcb8:	add	x0, x0, #0x1
    bcbc:	str	x0, [x19]
    bcc0:	mov	x1, #0x0                   	// #0
    bcc4:	mov	x0, x21
    bcc8:	bl	8c80 <PyNumber_FloorDivide@plt+0x4080>
    bccc:	mov	x20, x0
    bcd0:	mov	x0, x21
    bcd4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    bcd8:	cbz	x20, bc88 <PyNumber_FloorDivide@plt+0x7088>
    bcdc:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    bce0:	ldr	x0, [x0, #4024]
    bce4:	cmp	x20, x0
    bce8:	b.ne	bd0c <PyNumber_FloorDivide@plt+0x710c>  // b.any
    bcec:	add	x0, x19, #0x19
    bcf0:	mov	x1, #0xa                   	// #10
    bcf4:	bl	48b0 <_Py_HashBytes@plt>
    bcf8:	str	x0, [x19, #16]
    bcfc:	mov	x0, x20
    bd00:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    bd04:	ldr	x22, [x19, #16]
    bd08:	b	bc88 <PyNumber_FloorDivide@plt+0x7088>
    bd0c:	ldrb	w2, [x19, #28]
    bd10:	ldrb	w1, [x19, #27]
    bd14:	ldurh	w0, [x19, #25]
    bd18:	rev16	w0, w0
    bd1c:	and	w0, w0, #0xffff
    bd20:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    bd24:	ldrb	w1, [x19, #33]
    bd28:	mov	w4, #0x3c                  	// #60
    bd2c:	ldrb	w2, [x19, #32]
    bd30:	ldrb	w3, [x19, #30]
    bd34:	lsl	w1, w1, #8
    bd38:	ldrb	w6, [x19, #34]
    bd3c:	orr	w2, w1, w2, lsl #16
    bd40:	ldrb	w1, [x19, #29]
    bd44:	ldrb	w5, [x19, #31]
    bd48:	orr	w2, w2, w6
    bd4c:	mul	w3, w3, w4
    bd50:	mov	w4, #0xe10                 	// #3600
    bd54:	madd	w1, w1, w4, w3
    bd58:	adrp	x4, 22000 <PyInit__datetime@@Base+0x15918>
    bd5c:	mov	w3, #0x1                   	// #1
    bd60:	add	x4, x4, #0x298
    bd64:	add	w1, w1, w5
    bd68:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    bd6c:	mov	x23, x0
    bd70:	cbnz	x0, bd80 <PyNumber_FloorDivide@plt+0x7180>
    bd74:	mov	x0, x20
    bd78:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    bd7c:	b	bc88 <PyNumber_FloorDivide@plt+0x7088>
    bd80:	mov	x1, x20
    bd84:	bl	5de8 <PyNumber_FloorDivide@plt+0x11e8>
    bd88:	mov	x21, x0
    bd8c:	mov	x0, x23
    bd90:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    bd94:	cbz	x21, bd74 <PyNumber_FloorDivide@plt+0x7174>
    bd98:	mov	x0, x21
    bd9c:	bl	4a50 <PyObject_Hash@plt>
    bda0:	str	x0, [x19, #16]
    bda4:	mov	x0, x21
    bda8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    bdac:	b	bcfc <PyNumber_FloorDivide@plt+0x70fc>
    bdb0:	stp	x29, x30, [sp, #-16]!
    bdb4:	mov	x29, sp
    bdb8:	ldurh	w3, [x0, #25]
    bdbc:	ldrb	w2, [x0, #28]
    bdc0:	ldrb	w1, [x0, #27]
    bdc4:	rev16	w3, w3
    bdc8:	and	w0, w3, #0xffff
    bdcc:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    bdd0:	add	w0, w0, #0x6
    bdd4:	mov	w2, #0x7                   	// #7
    bdd8:	ldp	x29, x30, [sp], #16
    bddc:	sdiv	w1, w0, w2
    bde0:	msub	w0, w1, w2, w0
    bde4:	sxtw	x0, w0
    bde8:	b	4900 <PyLong_FromLong@plt>
    bdec:	stp	x29, x30, [sp, #-16]!
    bdf0:	mov	x29, sp
    bdf4:	ldurh	w3, [x0, #25]
    bdf8:	ldrb	w2, [x0, #28]
    bdfc:	ldrb	w1, [x0, #27]
    be00:	rev16	w3, w3
    be04:	and	w0, w3, #0xffff
    be08:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    be0c:	add	w1, w0, #0x6
    be10:	mov	w2, #0x7                   	// #7
    be14:	ldp	x29, x30, [sp], #16
    be18:	sdiv	w0, w1, w2
    be1c:	msub	w0, w0, w2, w1
    be20:	add	w0, w0, #0x1
    be24:	sxtw	x0, w0
    be28:	b	4900 <PyLong_FromLong@plt>
    be2c:	stp	x29, x30, [sp, #-16]!
    be30:	mov	w11, w1
    be34:	mov	w12, w2
    be38:	mov	x29, sp
    be3c:	ldurh	w7, [x0, #25]
    be40:	mov	w13, w3
    be44:	ldrb	w9, [x0, #27]
    be48:	ldrb	w14, [x0, #28]
    be4c:	rev16	w7, w7
    be50:	and	w7, w7, #0xffff
    be54:	mov	w1, w9
    be58:	mov	w2, w14
    be5c:	mov	w0, w7
    be60:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    be64:	add	w0, w0, #0x6
    be68:	mov	w1, #0x7                   	// #7
    be6c:	adrp	x8, 21000 <PyInit__datetime@@Base+0x14918>
    be70:	add	x8, x8, #0xc18
    be74:	sub	w9, w9, #0x1
    be78:	sdiv	w10, w0, w1
    be7c:	add	x2, x8, #0xa0
    be80:	add	x8, x8, #0x100
    be84:	mov	w6, w13
    be88:	ldp	x29, x30, [sp], #16
    be8c:	mov	w5, w12
    be90:	msub	w0, w10, w1, w0
    be94:	mov	w4, w11
    be98:	ldr	x2, [x2, w9, sxtw #3]
    be9c:	mov	w3, w14
    bea0:	ldr	x1, [x8, w0, sxtw #3]
    bea4:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    bea8:	add	x0, x0, #0x927
    beac:	b	4700 <PyUnicode_FromFormat@plt>
    beb0:	ldrb	w3, [x0, #31]
    beb4:	ldrb	w2, [x0, #30]
    beb8:	ldrb	w1, [x0, #29]
    bebc:	b	be2c <PyNumber_FloorDivide@plt+0x722c>
    bec0:	mov	w3, #0x0                   	// #0
    bec4:	mov	w2, #0x0                   	// #0
    bec8:	mov	w1, #0x0                   	// #0
    becc:	b	be2c <PyNumber_FloorDivide@plt+0x722c>
    bed0:	sub	sp, sp, #0x60
    bed4:	stp	x29, x30, [sp, #16]
    bed8:	add	x29, sp, #0x10
    bedc:	stp	x19, x20, [sp, #32]
    bee0:	mov	w20, w1
    bee4:	stp	x21, x22, [sp, #48]
    bee8:	mov	w21, w0
    beec:	mov	w22, w2
    bef0:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    bef4:	add	x0, x0, #0x6f9
    bef8:	stp	x23, x24, [sp, #64]
    befc:	mov	w23, w3
    bf00:	mov	w24, w4
    bf04:	stp	x25, x26, [sp, #80]
    bf08:	mov	w25, w5
    bf0c:	mov	w26, w6
    bf10:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    bf14:	mov	x19, x0
    bf18:	cbz	x0, bfa8 <PyNumber_FloorDivide@plt+0x73a8>
    bf1c:	mov	w1, w20
    bf20:	mov	w2, w22
    bf24:	mov	w0, w21
    bf28:	bl	a02c <PyNumber_FloorDivide@plt+0x542c>
    bf2c:	add	w0, w0, #0x6
    bf30:	mov	w1, #0x7                   	// #7
    bf34:	cmp	w20, #0x2
    bf38:	sdiv	w7, w0, w1
    bf3c:	msub	w7, w7, w1, w0
    bf40:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    bf44:	add	x0, x0, #0x73c
    bf48:	add	x0, x0, #0x34
    bf4c:	ldr	w8, [x0, w20, sxtw #2]
    bf50:	b.le	bf64 <PyNumber_FloorDivide@plt+0x7364>
    bf54:	mov	w0, w21
    bf58:	bl	4d0c <PyNumber_FloorDivide@plt+0x10c>
    bf5c:	cmp	w0, #0x0
    bf60:	cinc	w8, w8, ne  // ne = any
    bf64:	add	w8, w22, w8
    bf68:	str	w8, [sp]
    bf6c:	str	w26, [sp, #8]
    bf70:	mov	w2, w20
    bf74:	mov	w6, w25
    bf78:	mov	w5, w24
    bf7c:	mov	w4, w23
    bf80:	mov	w3, w22
    bf84:	mov	w1, w21
    bf88:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    bf8c:	add	x0, x0, #0x6b9
    bf90:	bl	49a0 <Py_BuildValue@plt>
    bf94:	mov	x20, x0
    bf98:	cbnz	x0, bfc8 <PyNumber_FloorDivide@plt+0x73c8>
    bf9c:	mov	x0, x19
    bfa0:	mov	x19, #0x0                   	// #0
    bfa4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    bfa8:	mov	x0, x19
    bfac:	ldp	x29, x30, [sp, #16]
    bfb0:	ldp	x19, x20, [sp, #32]
    bfb4:	ldp	x21, x22, [sp, #48]
    bfb8:	ldp	x23, x24, [sp, #64]
    bfbc:	ldp	x25, x26, [sp, #80]
    bfc0:	add	sp, sp, #0x60
    bfc4:	ret
    bfc8:	adrp	x1, 22000 <PyInit__datetime@@Base+0x15918>
    bfcc:	add	x1, x1, #0xab8
    bfd0:	mov	x2, x0
    bfd4:	add	x1, x1, #0x490
    bfd8:	mov	x3, #0x0                   	// #0
    bfdc:	mov	x0, x19
    bfe0:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    bfe4:	mov	x21, x0
    bfe8:	mov	x0, x19
    bfec:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    bff0:	mov	x0, x20
    bff4:	mov	x19, x21
    bff8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    bffc:	b	bfa8 <PyNumber_FloorDivide@plt+0x73a8>
    c000:	ldrb	w2, [x0, #28]
    c004:	mov	w6, #0xffffffff            	// #-1
    c008:	ldrb	w1, [x0, #27]
    c00c:	mov	w5, #0x0                   	// #0
    c010:	ldurh	w7, [x0, #25]
    c014:	mov	w4, #0x0                   	// #0
    c018:	mov	w3, #0x0                   	// #0
    c01c:	rev16	w7, w7
    c020:	and	w0, w7, #0xffff
    c024:	b	bed0 <PyNumber_FloorDivide@plt+0x72d0>
    c028:	stp	x29, x30, [sp, #-80]!
    c02c:	mov	x29, sp
    c030:	stp	x19, x20, [sp, #16]
    c034:	mov	x19, x0
    c038:	stp	x21, x22, [sp, #32]
    c03c:	stp	x23, x24, [sp, #48]
    c040:	str	x25, [sp, #64]
    c044:	ldrb	w0, [x0, #24]
    c048:	cbz	w0, c060 <PyNumber_FloorDivide@plt+0x7460>
    c04c:	adrp	x21, 21000 <PyInit__datetime@@Base+0x14918>
    c050:	ldr	x0, [x19, #40]
    c054:	ldr	x21, [x21, #4024]
    c058:	cmp	x0, x21
    c05c:	b.ne	c0c8 <PyNumber_FloorDivide@plt+0x74c8>  // b.any
    c060:	ldr	x0, [x19]
    c064:	add	x0, x0, #0x1
    c068:	str	x0, [x19]
    c06c:	ldurh	w20, [x19, #25]
    c070:	mov	x0, x19
    c074:	ldrb	w21, [x19, #27]
    c078:	ldrb	w22, [x19, #28]
    c07c:	rev16	w20, w20
    c080:	ldrb	w23, [x19, #29]
    c084:	and	w20, w20, #0xffff
    c088:	ldrb	w24, [x19, #30]
    c08c:	ldrb	w25, [x19, #31]
    c090:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c094:	mov	w4, w24
    c098:	mov	w3, w23
    c09c:	mov	w5, w25
    c0a0:	mov	w2, w22
    c0a4:	mov	w1, w21
    c0a8:	mov	w0, w20
    c0ac:	ldp	x19, x20, [sp, #16]
    c0b0:	mov	w6, #0x0                   	// #0
    c0b4:	ldp	x21, x22, [sp, #32]
    c0b8:	ldp	x23, x24, [sp, #48]
    c0bc:	ldr	x25, [sp, #64]
    c0c0:	ldp	x29, x30, [sp], #80
    c0c4:	b	bed0 <PyNumber_FloorDivide@plt+0x72d0>
    c0c8:	mov	x2, x19
    c0cc:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    c0d0:	add	x1, x1, #0xe28
    c0d4:	bl	8214 <PyNumber_FloorDivide@plt+0x3614>
    c0d8:	mov	x20, x0
    c0dc:	cbz	x0, c110 <PyNumber_FloorDivide@plt+0x7510>
    c0e0:	cmp	x0, x21
    c0e4:	b.ne	c0f0 <PyNumber_FloorDivide@plt+0x74f0>  // b.any
    c0e8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c0ec:	b	c060 <PyNumber_FloorDivide@plt+0x7460>
    c0f0:	mov	x1, x0
    c0f4:	mov	w2, #0xffffffff            	// #-1
    c0f8:	mov	x0, x19
    c0fc:	bl	a9c0 <PyNumber_FloorDivide@plt+0x5dc0>
    c100:	mov	x19, x0
    c104:	mov	x0, x20
    c108:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c10c:	cbnz	x19, c06c <PyNumber_FloorDivide@plt+0x746c>
    c110:	mov	x0, #0x0                   	// #0
    c114:	ldp	x19, x20, [sp, #16]
    c118:	ldp	x21, x22, [sp, #32]
    c11c:	ldp	x23, x24, [sp, #48]
    c120:	ldr	x25, [sp, #64]
    c124:	ldp	x29, x30, [sp], #80
    c128:	ret
    c12c:	stp	x29, x30, [sp, #-32]!
    c130:	mov	x29, sp
    c134:	stp	x19, x20, [sp, #16]
    c138:	mov	x19, x0
    c13c:	ldrb	w0, [x0, #24]
    c140:	cbz	w0, c1c0 <PyNumber_FloorDivide@plt+0x75c0>
    c144:	adrp	x20, 21000 <PyInit__datetime@@Base+0x14918>
    c148:	ldr	x0, [x19, #40]
    c14c:	ldr	x20, [x20, #4024]
    c150:	cmp	x0, x20
    c154:	b.eq	c1c0 <PyNumber_FloorDivide@plt+0x75c0>  // b.none
    c158:	mov	x2, x19
    c15c:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    c160:	add	x1, x1, #0x3a
    c164:	bl	8214 <PyNumber_FloorDivide@plt+0x3614>
    c168:	mov	x2, x0
    c16c:	cbz	x0, c1c8 <PyNumber_FloorDivide@plt+0x75c8>
    c170:	cmp	x0, x20
    c174:	b.eq	c1b8 <PyNumber_FloorDivide@plt+0x75b8>  // b.none
    c178:	bl	51ac <PyNumber_FloorDivide@plt+0x5ac>
    c17c:	mov	w20, w0
    c180:	mov	x0, x2
    c184:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c188:	ldurh	w0, [x19, #25]
    c18c:	mov	w6, w20
    c190:	ldrb	w5, [x19, #31]
    c194:	ldrb	w4, [x19, #30]
    c198:	rev16	w0, w0
    c19c:	ldrb	w3, [x19, #29]
    c1a0:	and	w0, w0, #0xffff
    c1a4:	ldrb	w2, [x19, #28]
    c1a8:	ldrb	w1, [x19, #27]
    c1ac:	ldp	x19, x20, [sp, #16]
    c1b0:	ldp	x29, x30, [sp], #32
    c1b4:	b	bed0 <PyNumber_FloorDivide@plt+0x72d0>
    c1b8:	mov	w20, #0xffffffff            	// #-1
    c1bc:	b	c180 <PyNumber_FloorDivide@plt+0x7580>
    c1c0:	mov	w20, #0xffffffff            	// #-1
    c1c4:	b	c188 <PyNumber_FloorDivide@plt+0x7588>
    c1c8:	ldp	x19, x20, [sp, #16]
    c1cc:	ldp	x29, x30, [sp], #32
    c1d0:	ret
    c1d4:	stp	x29, x30, [sp, #-48]!
    c1d8:	mov	x29, sp
    c1dc:	stp	x19, x20, [sp, #16]
    c1e0:	mov	x20, x0
    c1e4:	adrp	x19, 22000 <PyInit__datetime@@Base+0x15918>
    c1e8:	ldr	x0, [x0, #8]
    c1ec:	stp	x21, x22, [sp, #32]
    c1f0:	mov	x22, x1
    c1f4:	add	x1, x19, #0x298
    c1f8:	cmp	x0, x1
    c1fc:	b.ne	c224 <PyNumber_FloorDivide@plt+0x7624>  // b.any
    c200:	ldr	x0, [x22, #8]
    c204:	ldr	x1, [x0, #168]
    c208:	tbz	w1, #24, c298 <PyNumber_FloorDivide@plt+0x7698>
    c20c:	mov	x0, x20
    c210:	bl	7344 <PyNumber_FloorDivide@plt+0x2744>
    c214:	mov	x21, x0
    c218:	cbnz	x0, c254 <PyNumber_FloorDivide@plt+0x7654>
    c21c:	mov	x19, #0x0                   	// #0
    c220:	b	c240 <PyNumber_FloorDivide@plt+0x7640>
    c224:	bl	4b30 <PyType_IsSubtype@plt>
    c228:	cbnz	w0, c200 <PyNumber_FloorDivide@plt+0x7600>
    c22c:	adrp	x19, 21000 <PyInit__datetime@@Base+0x14918>
    c230:	ldr	x19, [x19, #3960]
    c234:	ldr	x0, [x19]
    c238:	add	x0, x0, #0x1
    c23c:	str	x0, [x19]
    c240:	mov	x0, x19
    c244:	ldp	x19, x20, [sp, #16]
    c248:	ldp	x21, x22, [sp, #32]
    c24c:	ldp	x29, x30, [sp], #48
    c250:	ret
    c254:	mov	x1, x22
    c258:	bl	4c00 <PyNumber_FloorDivide@plt>
    c25c:	mov	x20, x0
    c260:	mov	x0, x21
    c264:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c268:	cbz	x20, c21c <PyNumber_FloorDivide@plt+0x761c>
    c26c:	add	x1, x19, #0x298
    c270:	mov	x0, x20
    c274:	bl	6ee4 <PyNumber_FloorDivide@plt+0x22e4>
    c278:	mov	x19, x0
    c27c:	mov	x0, x20
    c280:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c284:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    c288:	ldr	x0, [x0, #3960]
    c28c:	cmp	x19, x0
    c290:	b.ne	c240 <PyNumber_FloorDivide@plt+0x7640>  // b.any
    c294:	b	c22c <PyNumber_FloorDivide@plt+0x762c>
    c298:	add	x1, x19, #0x298
    c29c:	cmp	x0, x1
    c2a0:	b.ne	c2b8 <PyNumber_FloorDivide@plt+0x76b8>  // b.any
    c2a4:	mov	x1, x22
    c2a8:	mov	x0, x20
    c2ac:	bl	7770 <PyNumber_FloorDivide@plt+0x2b70>
    c2b0:	mov	x19, x0
    c2b4:	b	c284 <PyNumber_FloorDivide@plt+0x7684>
    c2b8:	bl	4b30 <PyType_IsSubtype@plt>
    c2bc:	cbnz	w0, c2a4 <PyNumber_FloorDivide@plt+0x76a4>
    c2c0:	b	c22c <PyNumber_FloorDivide@plt+0x762c>
    c2c4:	stp	x29, x30, [sp, #-48]!
    c2c8:	mov	x29, sp
    c2cc:	stp	x19, x20, [sp, #16]
    c2d0:	mov	x19, x0
    c2d4:	mov	x20, x1
    c2d8:	ldr	x0, [x0, #8]
    c2dc:	stp	x21, x22, [sp, #32]
    c2e0:	adrp	x21, 22000 <PyInit__datetime@@Base+0x15918>
    c2e4:	add	x1, x21, #0x298
    c2e8:	adrp	x22, 21000 <PyInit__datetime@@Base+0x14918>
    c2ec:	cmp	x0, x1
    c2f0:	b.ne	c33c <PyNumber_FloorDivide@plt+0x773c>  // b.any
    c2f4:	ldr	x0, [x20, #8]
    c2f8:	add	x1, x21, #0x298
    c2fc:	cmp	x0, x1
    c300:	b.ne	c364 <PyNumber_FloorDivide@plt+0x7764>  // b.any
    c304:	ldp	w5, w6, [x19, #24]
    c308:	add	x4, x21, #0x298
    c30c:	ldr	w7, [x19, #32]
    c310:	mov	w3, #0x1                   	// #1
    c314:	ldp	w0, w1, [x20, #24]
    c318:	ldr	w2, [x20, #32]
    c31c:	add	w1, w6, w1
    c320:	add	w0, w5, w0
    c324:	add	w2, w7, w2
    c328:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    c32c:	ldr	x1, [x22, #3960]
    c330:	cmp	x0, x1
    c334:	b.ne	c354 <PyNumber_FloorDivide@plt+0x7754>  // b.any
    c338:	b	c344 <PyNumber_FloorDivide@plt+0x7744>
    c33c:	bl	4b30 <PyType_IsSubtype@plt>
    c340:	cbnz	w0, c2f4 <PyNumber_FloorDivide@plt+0x76f4>
    c344:	ldr	x0, [x22, #3960]
    c348:	ldr	x1, [x0]
    c34c:	add	x1, x1, #0x1
    c350:	str	x1, [x0]
    c354:	ldp	x19, x20, [sp, #16]
    c358:	ldp	x21, x22, [sp, #32]
    c35c:	ldp	x29, x30, [sp], #48
    c360:	ret
    c364:	bl	4b30 <PyType_IsSubtype@plt>
    c368:	cbnz	w0, c304 <PyNumber_FloorDivide@plt+0x7704>
    c36c:	b	c344 <PyNumber_FloorDivide@plt+0x7744>
    c370:	stp	x29, x30, [sp, #-32]!
    c374:	mov	x29, sp
    c378:	stp	x19, x20, [sp, #16]
    c37c:	mov	x19, x0
    c380:	ldrb	w5, [x0, #28]
    c384:	ldrb	w2, [x0, #25]
    c388:	ldrb	w3, [x0, #26]
    c38c:	ldrb	w4, [x0, #27]
    c390:	ldrb	w20, [x0, #31]
    c394:	ldr	x0, [x0, #8]
    c398:	ldr	x1, [x0, #24]
    c39c:	ldrb	w0, [x19, #29]
    c3a0:	lsl	w0, w0, #8
    c3a4:	orr	w5, w0, w5, lsl #16
    c3a8:	ldrb	w0, [x19, #30]
    c3ac:	orr	w5, w5, w0
    c3b0:	cbz	w5, c3f0 <PyNumber_FloorDivide@plt+0x77f0>
    c3b4:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    c3b8:	add	x0, x0, #0x945
    c3bc:	bl	4700 <PyUnicode_FromFormat@plt>
    c3c0:	cbz	x0, c3d4 <PyNumber_FloorDivide@plt+0x77d4>
    c3c4:	ldrb	w1, [x19, #24]
    c3c8:	cbz	w1, c3d4 <PyNumber_FloorDivide@plt+0x77d4>
    c3cc:	ldr	x1, [x19, #32]
    c3d0:	bl	8854 <PyNumber_FloorDivide@plt+0x3c54>
    c3d4:	cmp	x0, #0x0
    c3d8:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    c3dc:	b.eq	c414 <PyNumber_FloorDivide@plt+0x7814>  // b.none
    c3e0:	mov	w1, w20
    c3e4:	ldp	x19, x20, [sp, #16]
    c3e8:	ldp	x29, x30, [sp], #32
    c3ec:	b	88d8 <PyNumber_FloorDivide@plt+0x3cd8>
    c3f0:	cbz	w4, c404 <PyNumber_FloorDivide@plt+0x7804>
    c3f4:	adrp	x0, c000 <PyNumber_FloorDivide@plt+0x7400>
    c3f8:	add	x0, x0, #0xef6
    c3fc:	bl	4700 <PyUnicode_FromFormat@plt>
    c400:	b	c3c0 <PyNumber_FloorDivide@plt+0x77c0>
    c404:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    c408:	add	x0, x0, #0x958
    c40c:	bl	4700 <PyUnicode_FromFormat@plt>
    c410:	b	c3c0 <PyNumber_FloorDivide@plt+0x77c0>
    c414:	ldp	x19, x20, [sp, #16]
    c418:	ldp	x29, x30, [sp], #32
    c41c:	ret
    c420:	stp	x29, x30, [sp, #-64]!
    c424:	mov	x29, sp
    c428:	stp	x19, x20, [sp, #16]
    c42c:	mov	x20, x1
    c430:	ldr	x1, [x1, #16]
    c434:	stp	x21, x22, [sp, #32]
    c438:	mov	x21, x0
    c43c:	mov	x22, x2
    c440:	cmp	x1, #0x1
    c444:	b.ne	c5f0 <PyNumber_FloorDivide@plt+0x79f0>  // b.any
    c448:	ldr	x19, [x20, #24]
    c44c:	ldr	x1, [x19, #8]
    c450:	ldr	x1, [x1, #168]
    c454:	tbz	w1, #27, c4ac <PyNumber_FloorDivide@plt+0x78ac>
    c458:	ldr	x1, [x19, #16]
    c45c:	cmp	x1, #0x4
    c460:	b.ne	c5f0 <PyNumber_FloorDivide@plt+0x79f0>  // b.any
    c464:	ldrb	w1, [x19, #34]
    c468:	sub	w1, w1, #0x1
    c46c:	cmp	w1, #0xb
    c470:	b.hi	c5f0 <PyNumber_FloorDivide@plt+0x79f0>  // b.pmore
    c474:	ldr	x2, [x0, #304]
    c478:	mov	x1, #0x0                   	// #0
    c47c:	blr	x2
    c480:	mov	x20, x0
    c484:	cbz	x0, c498 <PyNumber_FloorDivide@plt+0x7898>
    c488:	ldr	w0, [x19, #32]
    c48c:	stur	w0, [x20, #25]
    c490:	mov	x0, #0xffffffffffffffff    	// #-1
    c494:	str	x0, [x20, #16]
    c498:	mov	x0, x20
    c49c:	ldp	x19, x20, [sp, #16]
    c4a0:	ldp	x21, x22, [sp, #32]
    c4a4:	ldp	x29, x30, [sp], #64
    c4a8:	ret
    c4ac:	tbz	w1, #28, c5f0 <PyNumber_FloorDivide@plt+0x79f0>
    c4b0:	ldrsb	w0, [x19, #32]
    c4b4:	tbz	w0, #31, c540 <PyNumber_FloorDivide@plt+0x7940>
    c4b8:	ldr	x0, [x19, #16]
    c4bc:	cmp	x0, #0x4
    c4c0:	b.ne	c5f0 <PyNumber_FloorDivide@plt+0x79f0>  // b.any
    c4c4:	ldrb	w0, [x19, #32]
    c4c8:	and	w2, w0, #0x1c
    c4cc:	and	w1, w0, #0x20
    c4d0:	cmp	w2, #0x4
    c4d4:	b.ne	c560 <PyNumber_FloorDivide@plt+0x7960>  // b.any
    c4d8:	cbz	w1, c554 <PyNumber_FloorDivide@plt+0x7954>
    c4dc:	add	x3, x19, #0x32
    c4e0:	add	x4, x19, #0x4a
    c4e4:	tst	x0, #0x40
    c4e8:	csel	x3, x4, x3, eq  // eq = none
    c4ec:	ldrb	w0, [x3]
    c4f0:	sub	w0, w0, #0x1
    c4f4:	cmp	w0, #0xb
    c4f8:	cset	w0, ls  // ls = plast
    c4fc:	cbz	w0, c5f0 <PyNumber_FloorDivide@plt+0x79f0>
    c500:	mov	x0, x19
    c504:	bl	4960 <PyUnicode_AsLatin1String@plt>
    c508:	mov	x20, x0
    c50c:	cbnz	x0, c5b8 <PyNumber_FloorDivide@plt+0x79b8>
    c510:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    c514:	ldr	x0, [x0, #4032]
    c518:	ldr	x0, [x0]
    c51c:	bl	48a0 <PyErr_ExceptionMatches@plt>
    c520:	cbz	w0, c54c <PyNumber_FloorDivide@plt+0x794c>
    c524:	adrp	x0, 21000 <PyInit__datetime@@Base+0x14918>
    c528:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    c52c:	add	x1, x1, #0x963
    c530:	ldr	x0, [x0, #3968]
    c534:	ldr	x0, [x0]
    c538:	bl	4880 <PyErr_SetString@plt>
    c53c:	b	c498 <PyNumber_FloorDivide@plt+0x7898>
    c540:	mov	x0, x19
    c544:	bl	4710 <_PyUnicode_Ready@plt>
    c548:	cbz	w0, c4b8 <PyNumber_FloorDivide@plt+0x78b8>
    c54c:	mov	x20, #0x0                   	// #0
    c550:	b	c498 <PyNumber_FloorDivide@plt+0x7898>
    c554:	ldr	x3, [x19, #72]
    c558:	add	x3, x3, #0x2
    c55c:	b	c4ec <PyNumber_FloorDivide@plt+0x78ec>
    c560:	cmp	w2, #0x8
    c564:	b.ne	c590 <PyNumber_FloorDivide@plt+0x7990>  // b.any
    c568:	cbz	w1, c584 <PyNumber_FloorDivide@plt+0x7984>
    c56c:	add	x3, x19, #0x34
    c570:	add	x4, x19, #0x4c
    c574:	tst	x0, #0x40
    c578:	csel	x3, x4, x3, eq  // eq = none
    c57c:	ldrh	w0, [x3]
    c580:	b	c4f0 <PyNumber_FloorDivide@plt+0x78f0>
    c584:	ldr	x3, [x19, #72]
    c588:	add	x3, x3, #0x4
    c58c:	b	c57c <PyNumber_FloorDivide@plt+0x797c>
    c590:	cbz	w1, c5ac <PyNumber_FloorDivide@plt+0x79ac>
    c594:	add	x3, x19, #0x38
    c598:	add	x4, x19, #0x50
    c59c:	tst	x0, #0x40
    c5a0:	csel	x3, x4, x3, eq  // eq = none
    c5a4:	ldr	w0, [x3]
    c5a8:	b	c4f0 <PyNumber_FloorDivide@plt+0x78f0>
    c5ac:	ldr	x3, [x19, #72]
    c5b0:	add	x3, x3, #0x8
    c5b4:	b	c5a4 <PyNumber_FloorDivide@plt+0x79a4>
    c5b8:	ldr	x2, [x21, #304]
    c5bc:	mov	x0, x21
    c5c0:	mov	x1, #0x0                   	// #0
    c5c4:	blr	x2
    c5c8:	mov	x19, x0
    c5cc:	cbz	x0, c5e0 <PyNumber_FloorDivide@plt+0x79e0>
    c5d0:	ldr	w0, [x20, #32]
    c5d4:	stur	w0, [x19, #25]
    c5d8:	mov	x0, #0xffffffffffffffff    	// #-1
    c5dc:	str	x0, [x19, #16]
    c5e0:	mov	x0, x20
    c5e4:	mov	x20, x19
    c5e8:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c5ec:	b	c498 <PyNumber_FloorDivide@plt+0x7898>
    c5f0:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    c5f4:	add	x3, x3, #0xab8
    c5f8:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    c5fc:	add	x6, sp, #0x3c
    c600:	add	x5, sp, #0x38
    c604:	add	x4, sp, #0x34
    c608:	add	x3, x3, #0x4a8
    c60c:	add	x2, x2, #0x6bf
    c610:	mov	x1, x22
    c614:	mov	x0, x20
    c618:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    c61c:	cbz	w0, c54c <PyNumber_FloorDivide@plt+0x794c>
    c620:	ldp	w0, w1, [sp, #52]
    c624:	mov	x3, x21
    c628:	ldr	w2, [sp, #60]
    c62c:	bl	5f28 <PyNumber_FloorDivide@plt+0x1328>
    c630:	mov	x20, x0
    c634:	b	c498 <PyNumber_FloorDivide@plt+0x7898>
    c638:	stp	x29, x30, [sp, #-48]!
    c63c:	adrp	x3, 22000 <PyInit__datetime@@Base+0x15918>
    c640:	add	x3, x3, #0xab8
    c644:	mov	x29, sp
    c648:	stp	x19, x20, [sp, #16]
    c64c:	mov	x19, x0
    c650:	mov	x0, x1
    c654:	mov	x1, x2
    c658:	add	x6, sp, #0x2c
    c65c:	ldurh	w2, [x19, #25]
    c660:	add	x5, sp, #0x28
    c664:	add	x4, sp, #0x24
    c668:	add	x3, x3, #0x4a8
    c66c:	rev16	w2, w2
    c670:	and	w2, w2, #0xffff
    c674:	str	w2, [sp, #36]
    c678:	ldrb	w2, [x19, #27]
    c67c:	str	w2, [sp, #40]
    c680:	ldrb	w2, [x19, #28]
    c684:	str	w2, [sp, #44]
    c688:	adrp	x2, d000 <PyInit__datetime@@Base+0x918>
    c68c:	add	x2, x2, #0x9d2
    c690:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    c694:	cbnz	w0, c6ac <PyNumber_FloorDivide@plt+0x7aac>
    c698:	mov	x19, #0x0                   	// #0
    c69c:	mov	x0, x19
    c6a0:	ldp	x19, x20, [sp, #16]
    c6a4:	ldp	x29, x30, [sp], #48
    c6a8:	ret
    c6ac:	ldp	w1, w2, [sp, #36]
    c6b0:	adrp	x0, d000 <PyInit__datetime@@Base+0x918>
    c6b4:	ldr	w3, [sp, #44]
    c6b8:	add	x0, x0, #0x6bf
    c6bc:	bl	49a0 <Py_BuildValue@plt>
    c6c0:	mov	x20, x0
    c6c4:	cbz	x0, c698 <PyNumber_FloorDivide@plt+0x7a98>
    c6c8:	mov	x1, x0
    c6cc:	mov	x2, #0x0                   	// #0
    c6d0:	ldr	x0, [x19, #8]
    c6d4:	bl	c420 <PyNumber_FloorDivide@plt+0x7820>
    c6d8:	mov	x19, x0
    c6dc:	mov	x0, x20
    c6e0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c6e4:	b	c69c <PyNumber_FloorDivide@plt+0x7a9c>

000000000000c6e8 <PyInit__datetime@@Base>:
    c6e8:	sub	sp, sp, #0x80
    c6ec:	mov	w1, #0x3f5                 	// #1013
    c6f0:	stp	x29, x30, [sp, #16]
    c6f4:	add	x29, sp, #0x10
    c6f8:	stp	x21, x22, [sp, #48]
    c6fc:	adrp	x22, 22000 <PyInit__datetime@@Base+0x15918>
    c700:	add	x22, x22, #0xab8
    c704:	add	x0, x22, #0x4c8
    c708:	stp	x19, x20, [sp, #32]
    c70c:	stp	x23, x24, [sp, #64]
    c710:	stp	x25, x26, [sp, #80]
    c714:	stp	x27, x28, [sp, #96]
    c718:	bl	49c0 <PyModule_Create2@plt>
    c71c:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c720:	adrp	x20, 22000 <PyInit__datetime@@Base+0x15918>
    c724:	add	x21, x20, #0x298
    c728:	mov	x19, x0
    c72c:	add	x0, x21, #0x680
    c730:	bl	48f0 <PyType_Ready@plt>
    c734:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c738:	add	x0, x21, #0x1a0
    c73c:	bl	48f0 <PyType_Ready@plt>
    c740:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c744:	mov	x0, x21
    c748:	bl	48f0 <PyType_Ready@plt>
    c74c:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c750:	add	x0, x21, #0x340
    c754:	bl	48f0 <PyType_Ready@plt>
    c758:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c75c:	add	x0, x21, #0x4e0
    c760:	bl	48f0 <PyType_Ready@plt>
    c764:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c768:	mov	x0, x22
    c76c:	bl	48f0 <PyType_Ready@plt>
    c770:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c774:	mov	x4, x21
    c778:	mov	w3, #0x0                   	// #0
    c77c:	mov	w2, #0x1                   	// #1
    c780:	mov	w1, #0x0                   	// #0
    c784:	mov	w0, #0x0                   	// #0
    c788:	ldr	x25, [x21, #264]
    c78c:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    c790:	mov	x23, x0
    c794:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c798:	mov	x2, x0
    c79c:	adrp	x22, d000 <PyInit__datetime@@Base+0x918>
    c7a0:	mov	x0, x25
    c7a4:	add	x1, x22, #0x9df
    c7a8:	bl	4720 <PyDict_SetItemString@plt>
    c7ac:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c7b0:	mov	x0, x23
    c7b4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c7b8:	mov	w0, #0x3601                	// #13825
    c7bc:	mov	x4, x21
    c7c0:	mov	w3, #0x0                   	// #0
    c7c4:	mov	w2, #0x0                   	// #0
    c7c8:	mov	w1, #0x0                   	// #0
    c7cc:	movk	w0, #0xc465, lsl #16
    c7d0:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    c7d4:	mov	x21, x0
    c7d8:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c7dc:	adrp	x23, d000 <PyInit__datetime@@Base+0x918>
    c7e0:	add	x27, x23, #0x9ea
    c7e4:	mov	x2, x0
    c7e8:	mov	x1, x27
    c7ec:	mov	x0, x25
    c7f0:	bl	4720 <PyDict_SetItemString@plt>
    c7f4:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c7f8:	mov	x0, x21
    c7fc:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c800:	add	x21, x20, #0x298
    c804:	mov	w2, #0x423f                	// #16959
    c808:	mov	w1, #0x517f                	// #20863
    c80c:	mov	w0, #0xc9ff                	// #51711
    c810:	mov	x4, x21
    c814:	mov	w3, #0x0                   	// #0
    c818:	movk	w2, #0xf, lsl #16
    c81c:	movk	w1, #0x1, lsl #16
    c820:	movk	w0, #0x3b9a, lsl #16
    c824:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    c828:	mov	x24, x0
    c82c:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c830:	adrp	x28, d000 <PyInit__datetime@@Base+0x918>
    c834:	add	x26, x28, #0x9ee
    c838:	mov	x2, x0
    c83c:	mov	x1, x26
    c840:	mov	x0, x25
    c844:	bl	4720 <PyDict_SetItemString@plt>
    c848:	str	x28, [sp, #112]
    c84c:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c850:	mov	x0, x24
    c854:	add	x28, x21, #0x680
    c858:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c85c:	mov	w2, #0x1                   	// #1
    c860:	mov	x3, x28
    c864:	mov	w1, w2
    c868:	mov	w0, w2
    c86c:	ldr	x25, [x21, #1928]
    c870:	bl	5f28 <PyNumber_FloorDivide@plt+0x1328>
    c874:	mov	x24, x0
    c878:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c87c:	mov	x2, x0
    c880:	mov	x1, x27
    c884:	mov	x0, x25
    c888:	bl	4720 <PyDict_SetItemString@plt>
    c88c:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c890:	mov	x0, x24
    c894:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c898:	mov	x3, x28
    c89c:	mov	w2, #0x1f                  	// #31
    c8a0:	mov	w1, #0xc                   	// #12
    c8a4:	mov	w0, #0x270f                	// #9999
    c8a8:	bl	5f28 <PyNumber_FloorDivide@plt+0x1328>
    c8ac:	mov	x24, x0
    c8b0:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c8b4:	mov	x2, x0
    c8b8:	mov	x1, x26
    c8bc:	mov	x0, x25
    c8c0:	bl	4720 <PyDict_SetItemString@plt>
    c8c4:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c8c8:	mov	x0, x24
    c8cc:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c8d0:	mov	x4, x21
    c8d4:	mov	w3, #0x0                   	// #0
    c8d8:	mov	w2, #0x0                   	// #0
    c8dc:	mov	w1, #0x0                   	// #0
    c8e0:	mov	w0, #0x1                   	// #1
    c8e4:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    c8e8:	mov	x24, x0
    c8ec:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c8f0:	mov	x2, x0
    c8f4:	add	x1, x22, #0x9df
    c8f8:	mov	x0, x25
    c8fc:	bl	4720 <PyDict_SetItemString@plt>
    c900:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c904:	mov	x0, x24
    c908:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c90c:	add	x6, x21, #0x340
    c910:	adrp	x21, 21000 <PyInit__datetime@@Base+0x14918>
    c914:	mov	w5, #0x0                   	// #0
    c918:	mov	w3, #0x0                   	// #0
    c91c:	ldr	x4, [x21, #4024]
    c920:	mov	w2, #0x0                   	// #0
    c924:	mov	w1, #0x0                   	// #0
    c928:	mov	w0, #0x0                   	// #0
    c92c:	ldr	x25, [x6, #264]
    c930:	bl	6048 <PyNumber_FloorDivide@plt+0x1448>
    c934:	mov	x24, x0
    c938:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c93c:	mov	x2, x0
    c940:	mov	x28, x27
    c944:	mov	x1, x27
    c948:	mov	x0, x25
    c94c:	bl	4720 <PyDict_SetItemString@plt>
    c950:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c954:	mov	x0, x24
    c958:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c95c:	ldr	x21, [x21, #4024]
    c960:	add	x24, x20, #0x298
    c964:	mov	w3, #0x423f                	// #16959
    c968:	mov	w2, #0x3b                  	// #59
    c96c:	add	x6, x24, #0x340
    c970:	mov	x4, x21
    c974:	mov	w1, w2
    c978:	mov	w5, #0x0                   	// #0
    c97c:	movk	w3, #0xf, lsl #16
    c980:	mov	w0, #0x17                  	// #23
    c984:	bl	6048 <PyNumber_FloorDivide@plt+0x1448>
    c988:	mov	x26, x0
    c98c:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c990:	mov	x2, x0
    c994:	ldr	x0, [sp, #112]
    c998:	add	x27, x0, #0x9ee
    c99c:	mov	x0, x25
    c9a0:	mov	x1, x27
    c9a4:	bl	4720 <PyDict_SetItemString@plt>
    c9a8:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c9ac:	mov	x0, x26
    c9b0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c9b4:	mov	x4, x24
    c9b8:	mov	w3, #0x0                   	// #0
    c9bc:	mov	w2, #0x1                   	// #1
    c9c0:	mov	w1, #0x0                   	// #0
    c9c4:	mov	w0, #0x0                   	// #0
    c9c8:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    c9cc:	mov	x26, x0
    c9d0:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    c9d4:	mov	x2, x0
    c9d8:	add	x1, x22, #0x9df
    c9dc:	mov	x0, x25
    c9e0:	bl	4720 <PyDict_SetItemString@plt>
    c9e4:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    c9e8:	mov	x0, x26
    c9ec:	add	x26, x24, #0x1a0
    c9f0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    c9f4:	ldr	x25, [x24, #680]
    c9f8:	str	wzr, [sp]
    c9fc:	str	x26, [sp, #8]
    ca00:	mov	w2, #0x1                   	// #1
    ca04:	mov	x7, x21
    ca08:	mov	w1, w2
    ca0c:	mov	w0, w2
    ca10:	mov	w6, #0x0                   	// #0
    ca14:	mov	w5, #0x0                   	// #0
    ca18:	mov	w4, #0x0                   	// #0
    ca1c:	mov	w3, #0x0                   	// #0
    ca20:	bl	61c4 <PyNumber_FloorDivide@plt+0x15c4>
    ca24:	mov	x2, x0
    ca28:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    ca2c:	mov	x1, x28
    ca30:	mov	x0, x25
    ca34:	str	x2, [sp, #120]
    ca38:	bl	4720 <PyDict_SetItemString@plt>
    ca3c:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    ca40:	ldr	x2, [sp, #120]
    ca44:	mov	x0, x2
    ca48:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    ca4c:	str	wzr, [sp]
    ca50:	str	x26, [sp, #8]
    ca54:	mov	w6, #0x423f                	// #16959
    ca58:	mov	x7, x21
    ca5c:	mov	w5, #0x3b                  	// #59
    ca60:	movk	w6, #0xf, lsl #16
    ca64:	mov	w4, w5
    ca68:	mov	w3, #0x17                  	// #23
    ca6c:	mov	w2, #0x1f                  	// #31
    ca70:	mov	w1, #0xc                   	// #12
    ca74:	mov	w0, #0x270f                	// #9999
    ca78:	bl	61c4 <PyNumber_FloorDivide@plt+0x15c4>
    ca7c:	mov	x21, x0
    ca80:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    ca84:	mov	x2, x0
    ca88:	mov	x1, x27
    ca8c:	mov	x0, x25
    ca90:	bl	4720 <PyDict_SetItemString@plt>
    ca94:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    ca98:	mov	x0, x21
    ca9c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    caa0:	mov	x4, x24
    caa4:	mov	w3, #0x0                   	// #0
    caa8:	mov	w2, #0x1                   	// #1
    caac:	mov	w1, #0x0                   	// #0
    cab0:	mov	w0, #0x0                   	// #0
    cab4:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    cab8:	mov	x21, x0
    cabc:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    cac0:	mov	x2, x0
    cac4:	add	x1, x22, #0x9df
    cac8:	mov	x0, x25
    cacc:	bl	4720 <PyDict_SetItemString@plt>
    cad0:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    cad4:	adrp	x22, 22000 <PyInit__datetime@@Base+0x15918>
    cad8:	add	x26, x22, #0xab8
    cadc:	mov	x0, x21
    cae0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    cae4:	mov	x4, x24
    cae8:	mov	x20, x24
    caec:	mov	w3, #0x0                   	// #0
    caf0:	mov	w2, #0x0                   	// #0
    caf4:	mov	w1, #0x0                   	// #0
    caf8:	mov	w0, #0x0                   	// #0
    cafc:	ldr	x25, [x26, #264]
    cb00:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    cb04:	mov	x24, x0
    cb08:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    cb0c:	mov	x1, #0x0                   	// #0
    cb10:	bl	5150 <PyNumber_FloorDivide@plt+0x550>
    cb14:	mov	x21, x0
    cb18:	mov	x0, x24
    cb1c:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    cb20:	cbz	x21, cdf0 <PyInit__datetime@@Base+0x708>
    cb24:	adrp	x1, c000 <PyNumber_FloorDivide@plt+0x7400>
    cb28:	mov	x2, x21
    cb2c:	add	x1, x1, #0xe9e
    cb30:	mov	x0, x25
    cb34:	bl	4720 <PyDict_SetItemString@plt>
    cb38:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    cb3c:	adrp	x24, 23000 <PyInit__datetime@@Base+0x16918>
    cb40:	mov	x4, x20
    cb44:	mov	w3, #0x1                   	// #1
    cb48:	mov	w2, #0x0                   	// #0
    cb4c:	str	x21, [x24, #3960]
    cb50:	mov	w1, #0x3c                  	// #60
    cb54:	mov	w0, #0xffffffff            	// #-1
    cb58:	str	x21, [x26, #1368]
    cb5c:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    cb60:	mov	x26, x0
    cb64:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    cb68:	mov	x1, #0x0                   	// #0
    cb6c:	bl	5150 <PyNumber_FloorDivide@plt+0x550>
    cb70:	mov	x21, x0
    cb74:	mov	x0, x26
    cb78:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    cb7c:	cbz	x21, cdf0 <PyInit__datetime@@Base+0x708>
    cb80:	mov	x2, x21
    cb84:	mov	x1, x28
    cb88:	mov	x0, x25
    cb8c:	bl	4720 <PyDict_SetItemString@plt>
    cb90:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    cb94:	mov	x0, x21
    cb98:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    cb9c:	mov	w1, #0x5144                	// #20804
    cba0:	mov	x4, x20
    cba4:	mov	w3, #0x0                   	// #0
    cba8:	mov	w2, #0x0                   	// #0
    cbac:	movk	w1, #0x1, lsl #16
    cbb0:	mov	w0, #0x0                   	// #0
    cbb4:	bl	5338 <PyNumber_FloorDivide@plt+0x738>
    cbb8:	mov	x21, x0
    cbbc:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    cbc0:	mov	x1, #0x0                   	// #0
    cbc4:	bl	5150 <PyNumber_FloorDivide@plt+0x550>
    cbc8:	mov	x20, x0
    cbcc:	mov	x0, x21
    cbd0:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    cbd4:	cbz	x20, cdf0 <PyInit__datetime@@Base+0x708>
    cbd8:	ldr	x0, [sp, #112]
    cbdc:	mov	x2, x20
    cbe0:	add	x1, x0, #0x9ee
    cbe4:	mov	x0, x25
    cbe8:	bl	4720 <PyDict_SetItemString@plt>
    cbec:	tbnz	w0, #31, cdf0 <PyInit__datetime@@Base+0x708>
    cbf0:	mov	x0, x20
    cbf4:	bl	66bc <PyNumber_FloorDivide@plt+0x1abc>
    cbf8:	ldr	x7, [x24, #3960]
    cbfc:	add	x20, x24, #0xf78
    cc00:	adrp	x25, 22000 <PyInit__datetime@@Base+0x15918>
    cc04:	add	x21, x25, #0x298
    cc08:	add	x23, x21, #0x1a0
    cc0c:	str	wzr, [sp]
    cc10:	str	x23, [sp, #8]
    cc14:	mov	w2, #0x1                   	// #1
    cc18:	mov	w6, #0x0                   	// #0
    cc1c:	mov	w1, w2
    cc20:	mov	w5, #0x0                   	// #0
    cc24:	mov	w4, #0x0                   	// #0
    cc28:	mov	w3, #0x0                   	// #0
    cc2c:	mov	w0, #0x7b2                 	// #1970
    cc30:	bl	61c4 <PyNumber_FloorDivide@plt+0x15c4>
    cc34:	str	x0, [x20, #72]
    cc38:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    cc3c:	mov	x2, #0x1                   	// #1
    cc40:	mov	x0, x19
    cc44:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    cc48:	add	x1, x1, #0x9f2
    cc4c:	bl	4740 <PyModule_AddIntConstant@plt>
    cc50:	mov	x2, #0x270f                	// #9999
    cc54:	mov	x0, x19
    cc58:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    cc5c:	add	x1, x1, #0x9fa
    cc60:	bl	4740 <PyModule_AddIntConstant@plt>
    cc64:	ldr	x0, [x21, #1664]
    cc68:	add	x2, x21, #0x680
    cc6c:	adrp	x1, e000 <PyInit__datetime@@Base+0x1918>
    cc70:	add	x1, x1, #0x72c
    cc74:	add	x0, x0, #0x1
    cc78:	str	x0, [x21, #1664]
    cc7c:	mov	x0, x19
    cc80:	bl	4b00 <PyModule_AddObject@plt>
    cc84:	ldr	x0, [x21, #416]
    cc88:	mov	x2, x23
    cc8c:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    cc90:	add	x1, x1, #0x7a3
    cc94:	add	x0, x0, #0x1
    cc98:	str	x0, [x21, #416]
    cc9c:	mov	x0, x19
    cca0:	bl	4b00 <PyModule_AddObject@plt>
    cca4:	ldr	x0, [x21, #832]
    cca8:	add	x2, x21, #0x340
    ccac:	adrp	x1, e000 <PyInit__datetime@@Base+0x1918>
    ccb0:	add	x1, x1, #0x6f9
    ccb4:	add	x0, x0, #0x1
    ccb8:	str	x0, [x21, #832]
    ccbc:	mov	x0, x19
    ccc0:	bl	4b00 <PyModule_AddObject@plt>
    ccc4:	ldr	x0, [x25, #664]
    ccc8:	mov	x2, x21
    cccc:	adrp	x1, e000 <PyInit__datetime@@Base+0x1918>
    ccd0:	add	x1, x1, #0x707
    ccd4:	add	x0, x0, #0x1
    ccd8:	str	x0, [x25, #664]
    ccdc:	mov	x0, x19
    cce0:	bl	4b00 <PyModule_AddObject@plt>
    cce4:	ldr	x0, [x21, #1248]
    cce8:	add	x2, x21, #0x4e0
    ccec:	adrp	x1, e000 <PyInit__datetime@@Base+0x1918>
    ccf0:	add	x1, x1, #0x6e9
    ccf4:	add	x0, x0, #0x1
    ccf8:	str	x0, [x21, #1248]
    ccfc:	mov	x0, x19
    cd00:	add	x21, x22, #0xab8
    cd04:	bl	4b00 <PyModule_AddObject@plt>
    cd08:	ldr	x0, [x22, #2744]
    cd0c:	mov	x2, x21
    cd10:	adrp	x1, e000 <PyInit__datetime@@Base+0x1918>
    cd14:	add	x1, x1, #0x6d7
    cd18:	add	x0, x0, #0x1
    cd1c:	str	x0, [x22, #2744]
    cd20:	mov	x0, x19
    cd24:	bl	4b00 <PyModule_AddObject@plt>
    cd28:	mov	x2, #0x0                   	// #0
    cd2c:	add	x0, x21, #0x530
    cd30:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    cd34:	add	x1, x1, #0xa02
    cd38:	bl	4b20 <PyCapsule_New@plt>
    cd3c:	mov	x2, x0
    cd40:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    cd44:	adrp	x1, d000 <PyInit__datetime@@Base+0x918>
    cd48:	add	x1, x1, #0xa0b
    cd4c:	mov	x0, x19
    cd50:	bl	4b00 <PyModule_AddObject@plt>
    cd54:	mov	x0, #0x3e8                 	// #1000
    cd58:	bl	4900 <PyLong_FromLong@plt>
    cd5c:	str	x0, [x20, #32]
    cd60:	mov	x0, #0x4240                	// #16960
    cd64:	movk	x0, #0xf, lsl #16
    cd68:	bl	4900 <PyLong_FromLong@plt>
    cd6c:	str	x0, [x20, #16]
    cd70:	mov	x0, #0x8700                	// #34560
    cd74:	movk	x0, #0x393, lsl #16
    cd78:	bl	4900 <PyLong_FromLong@plt>
    cd7c:	str	x0, [x20, #40]
    cd80:	mov	x0, #0x5180                	// #20864
    cd84:	movk	x0, #0x1, lsl #16
    cd88:	bl	4900 <PyLong_FromLong@plt>
    cd8c:	ldr	x1, [x20, #32]
    cd90:	str	x0, [x20, #24]
    cd94:	cbz	x1, cdf0 <PyInit__datetime@@Base+0x708>
    cd98:	ldr	x1, [x20, #16]
    cd9c:	cbz	x1, cdf0 <PyInit__datetime@@Base+0x708>
    cda0:	ldr	x1, [x20, #40]
    cda4:	cbz	x1, cdf0 <PyInit__datetime@@Base+0x708>
    cda8:	cbz	x0, cdf0 <PyInit__datetime@@Base+0x708>
    cdac:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    cdb0:	ldr	d0, [x0, #3104]
    cdb4:	bl	4790 <PyLong_FromDouble@plt>
    cdb8:	str	x0, [x20, #48]
    cdbc:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    cdc0:	ldr	d0, [x0, #3112]
    cdc4:	bl	4790 <PyLong_FromDouble@plt>
    cdc8:	str	x0, [x20, #56]
    cdcc:	adrp	x0, e000 <PyInit__datetime@@Base+0x1918>
    cdd0:	ldr	d0, [x0, #3120]
    cdd4:	bl	4790 <PyLong_FromDouble@plt>
    cdd8:	str	x0, [x20, #64]
    cddc:	ldr	x1, [x20, #48]
    cde0:	cbz	x1, cdf0 <PyInit__datetime@@Base+0x708>
    cde4:	ldr	x1, [x20, #56]
    cde8:	cbz	x1, cdf0 <PyInit__datetime@@Base+0x708>
    cdec:	cbnz	x0, cdf4 <PyInit__datetime@@Base+0x70c>
    cdf0:	mov	x19, #0x0                   	// #0
    cdf4:	mov	x0, x19
    cdf8:	ldp	x29, x30, [sp, #16]
    cdfc:	ldp	x19, x20, [sp, #32]
    ce00:	ldp	x21, x22, [sp, #48]
    ce04:	ldp	x23, x24, [sp, #64]
    ce08:	ldp	x25, x26, [sp, #80]
    ce0c:	ldp	x27, x28, [sp, #96]
    ce10:	add	sp, sp, #0x80
    ce14:	ret

Disassembly of section .fini:

000000000000ce18 <.fini>:
    ce18:	stp	x29, x30, [sp, #-16]!
    ce1c:	mov	x29, sp
    ce20:	ldp	x29, x30, [sp], #16
    ce24:	ret
