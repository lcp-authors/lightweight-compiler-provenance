
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//intdiv.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000870 <.init>:
 870:	stp	x29, x30, [sp, #-16]!
 874:	mov	x29, sp
 878:	bl	990 <fprintf@plt+0x10>
 87c:	ldp	x29, x30, [sp], #16
 880:	ret

Disassembly of section .plt:

0000000000000890 <memcpy@plt-0x20>:
 890:	stp	x16, x30, [sp, #-16]!
 894:	adrp	x16, 11000 <dl_load@@Base+0x1059c>
 898:	ldr	x17, [x16, #4088]
 89c:	add	x16, x16, #0xff8
 8a0:	br	x17
 8a4:	nop
 8a8:	nop
 8ac:	nop

00000000000008b0 <memcpy@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16]
 8b8:	add	x16, x16, #0x0
 8bc:	br	x17

00000000000008c0 <exit@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #8]
 8c8:	add	x16, x16, #0x8
 8cc:	br	x17

00000000000008d0 <__gmpz_tdiv_qr@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #16]
 8d8:	add	x16, x16, #0x10
 8dc:	br	x17

00000000000008e0 <__cxa_finalize@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #24]
 8e8:	add	x16, x16, #0x18
 8ec:	br	x17

00000000000008f0 <mpfr_get_z@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #32]
 8f8:	add	x16, x16, #0x20
 8fc:	br	x17

0000000000000900 <memset@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #40]
 908:	add	x16, x16, #0x28
 90c:	br	x17

0000000000000910 <__gmpz_set_d@plt>:
 910:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 914:	ldr	x17, [x16, #48]
 918:	add	x16, x16, #0x30
 91c:	br	x17

0000000000000920 <__gmon_start__@plt>:
 920:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 924:	ldr	x17, [x16, #56]
 928:	add	x16, x16, #0x38
 92c:	br	x17

0000000000000930 <__gmpz_clear@plt>:
 930:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 934:	ldr	x17, [x16, #64]
 938:	add	x16, x16, #0x40
 93c:	br	x17

0000000000000940 <fmod@plt>:
 940:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 944:	ldr	x17, [x16, #72]
 948:	add	x16, x16, #0x48
 94c:	br	x17

0000000000000950 <__gmpz_init@plt>:
 950:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 954:	ldr	x17, [x16, #80]
 958:	add	x16, x16, #0x50
 95c:	br	x17

0000000000000960 <mpfr_number_p@plt>:
 960:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 964:	ldr	x17, [x16, #88]
 968:	add	x16, x16, #0x58
 96c:	br	x17

0000000000000970 <gettext@plt>:
 970:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 974:	ldr	x17, [x16, #96]
 978:	add	x16, x16, #0x60
 97c:	br	x17

0000000000000980 <fprintf@plt>:
 980:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 984:	ldr	x17, [x16, #104]
 988:	add	x16, x16, #0x68
 98c:	br	x17

Disassembly of section .text:

0000000000000990 <dl_load@@Base-0xd4>:
     990:	adrp	x0, 11000 <dl_load@@Base+0x1059c>
     994:	ldr	x0, [x0, #4056]
     998:	cbz	x0, 9a0 <fprintf@plt+0x20>
     99c:	b	920 <__gmon_start__@plt>
     9a0:	ret
     9a4:	nop
     9a8:	adrp	x0, 12000 <dl_load@@Base+0x1159c>
     9ac:	add	x0, x0, #0xb0
     9b0:	adrp	x1, 12000 <dl_load@@Base+0x1159c>
     9b4:	add	x1, x1, #0xb0
     9b8:	cmp	x1, x0
     9bc:	b.eq	9d4 <fprintf@plt+0x54>  // b.none
     9c0:	adrp	x1, 11000 <dl_load@@Base+0x1059c>
     9c4:	ldr	x1, [x1, #4032]
     9c8:	cbz	x1, 9d4 <fprintf@plt+0x54>
     9cc:	mov	x16, x1
     9d0:	br	x16
     9d4:	ret
     9d8:	adrp	x0, 12000 <dl_load@@Base+0x1159c>
     9dc:	add	x0, x0, #0xb0
     9e0:	adrp	x1, 12000 <dl_load@@Base+0x1159c>
     9e4:	add	x1, x1, #0xb0
     9e8:	sub	x1, x1, x0
     9ec:	lsr	x2, x1, #63
     9f0:	add	x1, x2, x1, asr #3
     9f4:	cmp	xzr, x1, asr #1
     9f8:	asr	x1, x1, #1
     9fc:	b.eq	a14 <fprintf@plt+0x94>  // b.none
     a00:	adrp	x2, 11000 <dl_load@@Base+0x1059c>
     a04:	ldr	x2, [x2, #4064]
     a08:	cbz	x2, a14 <fprintf@plt+0x94>
     a0c:	mov	x16, x2
     a10:	br	x16
     a14:	ret
     a18:	stp	x29, x30, [sp, #-32]!
     a1c:	mov	x29, sp
     a20:	str	x19, [sp, #16]
     a24:	adrp	x19, 12000 <dl_load@@Base+0x1159c>
     a28:	ldrb	w0, [x19, #176]
     a2c:	cbnz	w0, a54 <fprintf@plt+0xd4>
     a30:	adrp	x0, 11000 <dl_load@@Base+0x1059c>
     a34:	ldr	x0, [x0, #4040]
     a38:	cbz	x0, a48 <fprintf@plt+0xc8>
     a3c:	adrp	x0, 12000 <dl_load@@Base+0x1159c>
     a40:	ldr	x0, [x0, #112]
     a44:	bl	8e0 <__cxa_finalize@plt>
     a48:	bl	9a8 <fprintf@plt+0x28>
     a4c:	mov	w0, #0x1                   	// #1
     a50:	strb	w0, [x19, #176]
     a54:	ldr	x19, [sp, #16]
     a58:	ldp	x29, x30, [sp], #32
     a5c:	ret
     a60:	b	9d8 <fprintf@plt+0x58>

0000000000000a64 <dl_load@@Base>:
     a64:	sub	sp, sp, #0x60
     a68:	stp	x29, x30, [sp, #80]
     a6c:	add	x29, sp, #0x50
     a70:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     a74:	add	x8, x8, #0xb8
     a78:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
     a7c:	add	x9, x9, #0xc0
     a80:	adrp	x10, 12000 <dl_load@@Base+0x1159c>
     a84:	add	x10, x10, #0x78
     a88:	stur	x0, [x29, #-8]
     a8c:	stur	x1, [x29, #-16]
     a90:	stur	wzr, [x29, #-36]
     a94:	ldur	x11, [x29, #-8]
     a98:	str	x11, [x8]
     a9c:	ldur	x11, [x29, #-16]
     aa0:	str	x11, [x9]
     aa4:	ldr	x11, [x8]
     aa8:	ldr	w12, [x11]
     aac:	cmp	w12, #0x2
     ab0:	str	x8, [sp, #32]
     ab4:	str	x9, [sp, #24]
     ab8:	str	x10, [sp, #16]
     abc:	b.ne	ad8 <dl_load@@Base+0x74>  // b.any
     ac0:	ldr	x8, [sp, #32]
     ac4:	ldr	x9, [x8]
     ac8:	ldr	w10, [x9, #4]
     acc:	cmp	w10, #0x0
     ad0:	cset	w10, ge  // ge = tcont
     ad4:	tbnz	w10, #0, b38 <dl_load@@Base+0xd4>
     ad8:	adrp	x8, 11000 <dl_load@@Base+0x1059c>
     adc:	ldr	x8, [x8, #4048]
     ae0:	ldr	x0, [x8]
     ae4:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     ae8:	add	x1, x1, #0x6b8
     aec:	str	x8, [sp, #8]
     af0:	bl	980 <fprintf@plt>
     af4:	ldr	x8, [sp, #8]
     af8:	ldr	x9, [x8]
     afc:	ldr	x10, [sp, #32]
     b00:	ldr	x11, [x10]
     b04:	ldr	w4, [x11]
     b08:	ldr	x11, [x10]
     b0c:	ldr	w5, [x11, #4]
     b10:	mov	x0, x9
     b14:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     b18:	add	x1, x1, #0x6dd
     b1c:	mov	w2, #0x2                   	// #2
     b20:	mov	w12, wzr
     b24:	mov	w3, w12
     b28:	bl	980 <fprintf@plt>
     b2c:	mov	w12, #0x1                   	// #1
     b30:	mov	w0, w12
     b34:	bl	8c0 <exit@plt>
     b38:	stur	xzr, [x29, #-24]
     b3c:	mov	x8, #0x1                   	// #1
     b40:	stur	x8, [x29, #-32]
     b44:	ldur	x8, [x29, #-24]
     b48:	ldur	x9, [x29, #-32]
     b4c:	cmp	x8, x9
     b50:	b.cs	c00 <dl_load@@Base+0x19c>  // b.hs, b.nlast
     b54:	ldur	x8, [x29, #-24]
     b58:	mov	x9, #0x30                  	// #48
     b5c:	mul	x8, x9, x8
     b60:	ldr	x9, [sp, #16]
     b64:	add	x8, x9, x8
     b68:	ldr	x8, [x8]
     b6c:	cbnz	x8, b74 <dl_load@@Base+0x110>
     b70:	b	c00 <dl_load@@Base+0x19c>
     b74:	ldr	x8, [sp, #32]
     b78:	ldr	x9, [x8]
     b7c:	mov	x10, #0x30                  	// #48
     b80:	ldr	x9, [x9, #48]
     b84:	ldr	x11, [sp, #24]
     b88:	ldr	x0, [x11]
     b8c:	ldur	x12, [x29, #-24]
     b90:	mul	x10, x10, x12
     b94:	ldr	x12, [sp, #16]
     b98:	add	x2, x12, x10
     b9c:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     ba0:	add	x1, x1, #0x6dc
     ba4:	blr	x9
     ba8:	cbnz	w0, bf0 <dl_load@@Base+0x18c>
     bac:	ldr	x8, [sp, #32]
     bb0:	ldr	x9, [x8]
     bb4:	ldr	x9, [x9, #104]
     bb8:	ldr	x10, [sp, #24]
     bbc:	ldr	x0, [x10]
     bc0:	ldur	x11, [x29, #-24]
     bc4:	mov	x12, #0x30                  	// #48
     bc8:	mul	x11, x12, x11
     bcc:	ldr	x12, [sp, #16]
     bd0:	add	x11, x12, x11
     bd4:	ldr	x2, [x11]
     bd8:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     bdc:	add	x1, x1, #0x710
     be0:	blr	x9
     be4:	ldur	w13, [x29, #-36]
     be8:	add	w13, w13, #0x1
     bec:	stur	w13, [x29, #-36]
     bf0:	ldur	x8, [x29, #-24]
     bf4:	add	x8, x8, #0x1
     bf8:	stur	x8, [x29, #-24]
     bfc:	b	b44 <dl_load@@Base+0xe0>
     c00:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     c04:	add	x8, x8, #0xc8
     c08:	ldr	x8, [x8]
     c0c:	cbz	x8, c50 <dl_load@@Base+0x1ec>
     c10:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     c14:	add	x8, x8, #0xc8
     c18:	ldr	x8, [x8]
     c1c:	blr	x8
     c20:	cbnz	w0, c50 <dl_load@@Base+0x1ec>
     c24:	ldr	x8, [sp, #32]
     c28:	ldr	x9, [x8]
     c2c:	ldr	x9, [x9, #104]
     c30:	ldr	x10, [sp, #24]
     c34:	ldr	x0, [x10]
     c38:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     c3c:	add	x1, x1, #0x729
     c40:	blr	x9
     c44:	ldur	w11, [x29, #-36]
     c48:	add	w11, w11, #0x1
     c4c:	stur	w11, [x29, #-36]
     c50:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     c54:	add	x8, x8, #0xa8
     c58:	ldr	x8, [x8]
     c5c:	cbz	x8, c84 <dl_load@@Base+0x220>
     c60:	ldr	x8, [sp, #32]
     c64:	ldr	x9, [x8]
     c68:	ldr	x9, [x9, #88]
     c6c:	ldr	x10, [sp, #24]
     c70:	ldr	x0, [x10]
     c74:	adrp	x11, 12000 <dl_load@@Base+0x1159c>
     c78:	add	x11, x11, #0xa8
     c7c:	ldr	x1, [x11]
     c80:	blr	x9
     c84:	ldur	w8, [x29, #-36]
     c88:	cmp	w8, #0x0
     c8c:	cset	w8, eq  // eq = none
     c90:	and	w0, w8, #0x1
     c94:	ldp	x29, x30, [sp, #80]
     c98:	add	sp, sp, #0x60
     c9c:	ret
     ca0:	sub	sp, sp, #0x1d0
     ca4:	stp	x29, x30, [sp, #432]
     ca8:	str	x28, [sp, #448]
     cac:	add	x29, sp, #0x1b0
     cb0:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     cb4:	add	x8, x8, #0xb8
     cb8:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
     cbc:	add	x9, x9, #0xc0
     cc0:	mov	x10, xzr
     cc4:	mov	w11, #0x1                   	// #1
     cc8:	sub	x3, x29, #0x40
     ccc:	stur	w0, [x29, #-12]
     cd0:	stur	x1, [x29, #-24]
     cd4:	stur	x2, [x29, #-32]
     cd8:	ldr	x12, [x8]
     cdc:	ldr	x12, [x12, #152]
     ce0:	ldr	x0, [x9]
     ce4:	mov	x1, x10
     ce8:	mov	w2, w11
     cec:	str	x8, [sp, #192]
     cf0:	str	x9, [sp, #184]
     cf4:	blr	x12
     cf8:	cbnz	w0, d54 <dl_load@@Base+0x2f0>
     cfc:	ldr	x8, [sp, #192]
     d00:	ldr	x9, [x8]
     d04:	ldr	x9, [x9, #104]
     d08:	ldr	x10, [sp, #184]
     d0c:	ldr	x0, [x10]
     d10:	adrp	x11, 1000 <dl_load@@Base+0x59c>
     d14:	add	x11, x11, #0x757
     d18:	str	x0, [sp, #176]
     d1c:	mov	x0, x11
     d20:	str	x9, [sp, #168]
     d24:	bl	970 <gettext@plt>
     d28:	ldr	x8, [sp, #176]
     d2c:	str	x0, [sp, #160]
     d30:	mov	x0, x8
     d34:	ldr	x1, [sp, #160]
     d38:	ldr	x9, [sp, #168]
     d3c:	blr	x9
     d40:	ldur	x0, [x29, #-24]
     d44:	fmov	d0, #-1.000000000000000000e+00
     d48:	bl	11fc <dl_load@@Base+0x798>
     d4c:	stur	x0, [x29, #-8]
     d50:	b	11e8 <dl_load@@Base+0x784>
     d54:	ldr	x8, [sp, #192]
     d58:	ldr	x9, [x8]
     d5c:	ldr	x9, [x9, #152]
     d60:	ldr	x10, [sp, #184]
     d64:	ldr	x0, [x10]
     d68:	mov	x1, #0x1                   	// #1
     d6c:	mov	w2, #0x1                   	// #1
     d70:	sub	x3, x29, #0x60
     d74:	blr	x9
     d78:	cbnz	w0, dd4 <dl_load@@Base+0x370>
     d7c:	ldr	x8, [sp, #192]
     d80:	ldr	x9, [x8]
     d84:	ldr	x9, [x9, #104]
     d88:	ldr	x10, [sp, #184]
     d8c:	ldr	x0, [x10]
     d90:	adrp	x11, 1000 <dl_load@@Base+0x59c>
     d94:	add	x11, x11, #0x77e
     d98:	str	x0, [sp, #152]
     d9c:	mov	x0, x11
     da0:	str	x9, [sp, #144]
     da4:	bl	970 <gettext@plt>
     da8:	ldr	x8, [sp, #152]
     dac:	str	x0, [sp, #136]
     db0:	mov	x0, x8
     db4:	ldr	x1, [sp, #136]
     db8:	ldr	x9, [sp, #144]
     dbc:	blr	x9
     dc0:	ldur	x0, [x29, #-24]
     dc4:	fmov	d0, #-1.000000000000000000e+00
     dc8:	bl	11fc <dl_load@@Base+0x798>
     dcc:	stur	x0, [x29, #-8]
     dd0:	b	11e8 <dl_load@@Base+0x784>
     dd4:	ldr	x8, [sp, #192]
     dd8:	ldr	x9, [x8]
     ddc:	ldr	x9, [x9, #152]
     de0:	ldr	x10, [sp, #184]
     de4:	ldr	x0, [x10]
     de8:	mov	x1, #0x2                   	// #2
     dec:	mov	w2, #0x5                   	// #5
     df0:	sub	x3, x29, #0x80
     df4:	blr	x9
     df8:	cbnz	w0, e54 <dl_load@@Base+0x3f0>
     dfc:	ldr	x8, [sp, #192]
     e00:	ldr	x9, [x8]
     e04:	ldr	x9, [x9, #104]
     e08:	ldr	x10, [sp, #184]
     e0c:	ldr	x0, [x10]
     e10:	adrp	x11, 1000 <dl_load@@Base+0x59c>
     e14:	add	x11, x11, #0x7a6
     e18:	str	x0, [sp, #128]
     e1c:	mov	x0, x11
     e20:	str	x9, [sp, #120]
     e24:	bl	970 <gettext@plt>
     e28:	ldr	x8, [sp, #128]
     e2c:	str	x0, [sp, #112]
     e30:	mov	x0, x8
     e34:	ldr	x1, [sp, #112]
     e38:	ldr	x9, [sp, #120]
     e3c:	blr	x9
     e40:	ldur	x0, [x29, #-24]
     e44:	fmov	d0, #-1.000000000000000000e+00
     e48:	bl	11fc <dl_load@@Base+0x798>
     e4c:	stur	x0, [x29, #-8]
     e50:	b	11e8 <dl_load@@Base+0x784>
     e54:	sub	x8, x29, #0x80
     e58:	ldr	x8, [x8, #8]
     e5c:	stur	x8, [x29, #-136]
     e60:	ldr	x8, [sp, #192]
     e64:	ldr	x9, [x8]
     e68:	ldr	x9, [x9, #256]
     e6c:	ldr	x10, [sp, #184]
     e70:	ldr	x0, [x10]
     e74:	ldur	x1, [x29, #-136]
     e78:	blr	x9
     e7c:	ldur	w11, [x29, #-48]
     e80:	cbnz	w11, f74 <dl_load@@Base+0x510>
     e84:	ldur	w8, [x29, #-80]
     e88:	cbnz	w8, f74 <dl_load@@Base+0x510>
     e8c:	ldur	d0, [x29, #-56]
     e90:	bl	1234 <dl_load@@Base+0x7d0>
     e94:	stur	d0, [x29, #-144]
     e98:	ldur	d0, [x29, #-88]
     e9c:	bl	1234 <dl_load@@Base+0x7d0>
     ea0:	stur	d0, [x29, #-152]
     ea4:	ldur	d0, [x29, #-152]
     ea8:	fcmp	d0, #0.0
     eac:	cset	w8, eq  // eq = none
     eb0:	tbnz	w8, #0, eb8 <dl_load@@Base+0x454>
     eb4:	b	f10 <dl_load@@Base+0x4ac>
     eb8:	ldr	x8, [sp, #192]
     ebc:	ldr	x9, [x8]
     ec0:	ldr	x9, [x9, #104]
     ec4:	ldr	x10, [sp, #184]
     ec8:	ldr	x0, [x10]
     ecc:	adrp	x11, 1000 <dl_load@@Base+0x59c>
     ed0:	add	x11, x11, #0x7ce
     ed4:	str	x0, [sp, #104]
     ed8:	mov	x0, x11
     edc:	str	x9, [sp, #96]
     ee0:	bl	970 <gettext@plt>
     ee4:	ldr	x8, [sp, #104]
     ee8:	str	x0, [sp, #88]
     eec:	mov	x0, x8
     ef0:	ldr	x1, [sp, #88]
     ef4:	ldr	x9, [sp, #96]
     ef8:	blr	x9
     efc:	ldur	x0, [x29, #-24]
     f00:	fmov	d0, #-1.000000000000000000e+00
     f04:	bl	11fc <dl_load@@Base+0x798>
     f08:	stur	x0, [x29, #-8]
     f0c:	b	11e8 <dl_load@@Base+0x784>
     f10:	ldur	d0, [x29, #-144]
     f14:	ldur	d1, [x29, #-152]
     f18:	fdiv	d0, d0, d1
     f1c:	bl	1234 <dl_load@@Base+0x7d0>
     f20:	stur	d0, [x29, #-160]
     f24:	ldur	d0, [x29, #-144]
     f28:	ldur	d1, [x29, #-152]
     f2c:	bl	940 <fmod@plt>
     f30:	stur	d0, [x29, #-168]
     f34:	ldur	d0, [x29, #-168]
     f38:	bl	1234 <dl_load@@Base+0x7d0>
     f3c:	stur	d0, [x29, #-168]
     f40:	ldur	x0, [x29, #-136]
     f44:	ldur	d0, [x29, #-160]
     f48:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     f4c:	add	x1, x1, #0x7f1
     f50:	mov	x2, #0x8                   	// #8
     f54:	bl	1278 <dl_load@@Base+0x814>
     f58:	ldur	x0, [x29, #-136]
     f5c:	ldur	d0, [x29, #-168]
     f60:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     f64:	add	x1, x1, #0x7fa
     f68:	mov	x2, #0x9                   	// #9
     f6c:	bl	1278 <dl_load@@Base+0x814>
     f70:	b	11d8 <dl_load@@Base+0x774>
     f74:	sub	x0, x29, #0x40
     f78:	sub	x1, x29, #0xc8
     f7c:	bl	132c <dl_load@@Base+0x8c8>
     f80:	stur	x0, [x29, #-176]
     f84:	cbnz	x0, fe0 <dl_load@@Base+0x57c>
     f88:	ldr	x8, [sp, #192]
     f8c:	ldr	x9, [x8]
     f90:	ldr	x9, [x9, #104]
     f94:	ldr	x10, [sp, #184]
     f98:	ldr	x0, [x10]
     f9c:	adrp	x11, 1000 <dl_load@@Base+0x59c>
     fa0:	add	x11, x11, #0x804
     fa4:	str	x0, [sp, #80]
     fa8:	mov	x0, x11
     fac:	str	x9, [sp, #72]
     fb0:	bl	970 <gettext@plt>
     fb4:	ldr	x8, [sp, #80]
     fb8:	str	x0, [sp, #64]
     fbc:	mov	x0, x8
     fc0:	ldr	x1, [sp, #64]
     fc4:	ldr	x9, [sp, #72]
     fc8:	blr	x9
     fcc:	ldur	x0, [x29, #-24]
     fd0:	fmov	d0, #-1.000000000000000000e+00
     fd4:	bl	11fc <dl_load@@Base+0x798>
     fd8:	stur	x0, [x29, #-8]
     fdc:	b	11e8 <dl_load@@Base+0x784>
     fe0:	sub	x0, x29, #0x60
     fe4:	add	x1, sp, #0xd8
     fe8:	bl	132c <dl_load@@Base+0x8c8>
     fec:	stur	x0, [x29, #-184]
     ff0:	cbnz	x0, 1064 <dl_load@@Base+0x600>
     ff4:	ldr	x8, [sp, #192]
     ff8:	ldr	x9, [x8]
     ffc:	ldr	x9, [x9, #104]
    1000:	ldr	x10, [sp, #184]
    1004:	ldr	x0, [x10]
    1008:	adrp	x11, 1000 <dl_load@@Base+0x59c>
    100c:	add	x11, x11, #0x824
    1010:	str	x0, [sp, #56]
    1014:	mov	x0, x11
    1018:	str	x9, [sp, #48]
    101c:	bl	970 <gettext@plt>
    1020:	ldr	x8, [sp, #56]
    1024:	str	x0, [sp, #40]
    1028:	mov	x0, x8
    102c:	ldr	x1, [sp, #40]
    1030:	ldr	x9, [sp, #48]
    1034:	blr	x9
    1038:	ldur	x8, [x29, #-176]
    103c:	sub	x9, x29, #0xc8
    1040:	cmp	x8, x9
    1044:	b.ne	1050 <dl_load@@Base+0x5ec>  // b.any
    1048:	ldur	x0, [x29, #-176]
    104c:	bl	930 <__gmpz_clear@plt>
    1050:	ldur	x0, [x29, #-24]
    1054:	fmov	d0, #-1.000000000000000000e+00
    1058:	bl	11fc <dl_load@@Base+0x798>
    105c:	stur	x0, [x29, #-8]
    1060:	b	11e8 <dl_load@@Base+0x784>
    1064:	ldur	x8, [x29, #-184]
    1068:	ldr	w9, [x8, #4]
    106c:	cmp	w9, #0x0
    1070:	cset	w9, ge  // ge = tcont
    1074:	tbnz	w9, #0, 1084 <dl_load@@Base+0x620>
    1078:	mov	w8, #0xffffffff            	// #-1
    107c:	str	w8, [sp, #36]
    1080:	b	109c <dl_load@@Base+0x638>
    1084:	ldur	x8, [x29, #-184]
    1088:	ldr	w9, [x8, #4]
    108c:	cmp	w9, #0x0
    1090:	cset	w9, gt
    1094:	and	w9, w9, #0x1
    1098:	str	w9, [sp, #36]
    109c:	ldr	w8, [sp, #36]
    10a0:	cbnz	w8, 112c <dl_load@@Base+0x6c8>
    10a4:	ldr	x8, [sp, #192]
    10a8:	ldr	x9, [x8]
    10ac:	ldr	x9, [x9, #104]
    10b0:	ldr	x10, [sp, #184]
    10b4:	ldr	x0, [x10]
    10b8:	adrp	x11, 1000 <dl_load@@Base+0x59c>
    10bc:	add	x11, x11, #0x7ce
    10c0:	str	x0, [sp, #24]
    10c4:	mov	x0, x11
    10c8:	str	x9, [sp, #16]
    10cc:	bl	970 <gettext@plt>
    10d0:	ldr	x8, [sp, #24]
    10d4:	str	x0, [sp, #8]
    10d8:	mov	x0, x8
    10dc:	ldr	x1, [sp, #8]
    10e0:	ldr	x9, [sp, #16]
    10e4:	blr	x9
    10e8:	ldur	x8, [x29, #-176]
    10ec:	sub	x9, x29, #0xc8
    10f0:	cmp	x8, x9
    10f4:	b.ne	1100 <dl_load@@Base+0x69c>  // b.any
    10f8:	ldur	x0, [x29, #-176]
    10fc:	bl	930 <__gmpz_clear@plt>
    1100:	ldur	x8, [x29, #-184]
    1104:	add	x9, sp, #0xd8
    1108:	cmp	x8, x9
    110c:	b.ne	1118 <dl_load@@Base+0x6b4>  // b.any
    1110:	ldur	x0, [x29, #-184]
    1114:	bl	930 <__gmpz_clear@plt>
    1118:	ldur	x0, [x29, #-24]
    111c:	fmov	d0, #-1.000000000000000000e+00
    1120:	bl	11fc <dl_load@@Base+0x798>
    1124:	stur	x0, [x29, #-8]
    1128:	b	11e8 <dl_load@@Base+0x784>
    112c:	ldr	x8, [sp, #192]
    1130:	ldr	x9, [x8]
    1134:	ldr	x9, [x9, #320]
    1138:	ldr	x10, [sp, #184]
    113c:	ldr	x0, [x10]
    1140:	blr	x9
    1144:	str	x0, [sp, #208]
    1148:	ldr	x8, [sp, #192]
    114c:	ldr	x9, [x8]
    1150:	ldr	x9, [x9, #320]
    1154:	ldr	x10, [sp, #184]
    1158:	ldr	x0, [x10]
    115c:	blr	x9
    1160:	str	x0, [sp, #200]
    1164:	ldr	x0, [sp, #208]
    1168:	ldr	x1, [sp, #200]
    116c:	ldur	x2, [x29, #-176]
    1170:	ldur	x3, [x29, #-184]
    1174:	bl	8d0 <__gmpz_tdiv_qr@plt>
    1178:	ldur	x0, [x29, #-136]
    117c:	ldr	x3, [sp, #208]
    1180:	adrp	x1, 1000 <dl_load@@Base+0x59c>
    1184:	add	x1, x1, #0x7f1
    1188:	mov	x2, #0x8                   	// #8
    118c:	bl	146c <dl_load@@Base+0xa08>
    1190:	ldur	x0, [x29, #-136]
    1194:	ldr	x3, [sp, #200]
    1198:	adrp	x1, 1000 <dl_load@@Base+0x59c>
    119c:	add	x1, x1, #0x7fa
    11a0:	mov	x2, #0x9                   	// #9
    11a4:	bl	146c <dl_load@@Base+0xa08>
    11a8:	ldur	x8, [x29, #-176]
    11ac:	sub	x9, x29, #0xc8
    11b0:	cmp	x8, x9
    11b4:	b.ne	11c0 <dl_load@@Base+0x75c>  // b.any
    11b8:	ldur	x0, [x29, #-176]
    11bc:	bl	930 <__gmpz_clear@plt>
    11c0:	ldur	x8, [x29, #-184]
    11c4:	add	x9, sp, #0xd8
    11c8:	cmp	x8, x9
    11cc:	b.ne	11d8 <dl_load@@Base+0x774>  // b.any
    11d0:	ldur	x0, [x29, #-184]
    11d4:	bl	930 <__gmpz_clear@plt>
    11d8:	ldur	x0, [x29, #-24]
    11dc:	fmov	d0, xzr
    11e0:	bl	11fc <dl_load@@Base+0x798>
    11e4:	stur	x0, [x29, #-8]
    11e8:	ldur	x0, [x29, #-8]
    11ec:	ldr	x28, [sp, #448]
    11f0:	ldp	x29, x30, [sp, #432]
    11f4:	add	sp, sp, #0x1d0
    11f8:	ret
    11fc:	sub	sp, sp, #0x10
    1200:	mov	w8, #0x1                   	// #1
    1204:	str	d0, [sp, #8]
    1208:	str	x0, [sp]
    120c:	ldr	x9, [sp]
    1210:	str	w8, [x9]
    1214:	ldr	x9, [sp, #8]
    1218:	ldr	x10, [sp]
    121c:	str	x9, [x10, #8]
    1220:	ldr	x9, [sp]
    1224:	str	wzr, [x9, #16]
    1228:	ldr	x0, [sp]
    122c:	add	sp, sp, #0x10
    1230:	ret
    1234:	sub	sp, sp, #0x10
    1238:	str	d0, [sp, #8]
    123c:	ldr	d0, [sp, #8]
    1240:	fcmp	d0, #0.0
    1244:	cset	w8, ge  // ge = tcont
    1248:	tbnz	w8, #0, 1250 <dl_load@@Base+0x7ec>
    124c:	b	1260 <dl_load@@Base+0x7fc>
    1250:	ldr	d0, [sp, #8]
    1254:	frintm	d0, d0
    1258:	str	d0, [sp, #8]
    125c:	b	126c <dl_load@@Base+0x808>
    1260:	ldr	d0, [sp, #8]
    1264:	frintp	d0, d0
    1268:	str	d0, [sp, #8]
    126c:	ldr	d0, [sp, #8]
    1270:	add	sp, sp, #0x10
    1274:	ret
    1278:	sub	sp, sp, #0xa0
    127c:	stp	x29, x30, [sp, #144]
    1280:	add	x29, sp, #0x90
    1284:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
    1288:	add	x8, x8, #0xb8
    128c:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
    1290:	add	x9, x9, #0xc0
    1294:	mov	w4, #0x1                   	// #1
    1298:	sub	x5, x29, #0x40
    129c:	add	x10, sp, #0x30
    12a0:	stur	x0, [x29, #-8]
    12a4:	stur	x1, [x29, #-16]
    12a8:	stur	x2, [x29, #-24]
    12ac:	stur	d0, [x29, #-32]
    12b0:	ldr	x11, [x8]
    12b4:	ldr	x11, [x11, #232]
    12b8:	ldr	x0, [x9]
    12bc:	ldur	x1, [x29, #-8]
    12c0:	ldr	x8, [x8]
    12c4:	ldr	x9, [x9]
    12c8:	ldur	x2, [x29, #-16]
    12cc:	ldur	x3, [x29, #-24]
    12d0:	str	x0, [sp, #40]
    12d4:	mov	x0, x8
    12d8:	str	x1, [sp, #32]
    12dc:	mov	x1, x9
    12e0:	str	x10, [sp, #24]
    12e4:	str	x11, [sp, #16]
    12e8:	bl	1520 <dl_load@@Base+0xabc>
    12ec:	ldur	d0, [x29, #-32]
    12f0:	ldr	x8, [sp, #24]
    12f4:	str	x0, [sp, #8]
    12f8:	mov	x0, x8
    12fc:	bl	11fc <dl_load@@Base+0x798>
    1300:	ldr	x8, [sp, #40]
    1304:	str	x0, [sp]
    1308:	mov	x0, x8
    130c:	ldr	x1, [sp, #32]
    1310:	ldr	x2, [sp, #8]
    1314:	ldr	x3, [sp]
    1318:	ldr	x9, [sp, #16]
    131c:	blr	x9
    1320:	ldp	x29, x30, [sp, #144]
    1324:	add	sp, sp, #0xa0
    1328:	ret
    132c:	sub	sp, sp, #0x50
    1330:	stp	x29, x30, [sp, #64]
    1334:	add	x29, sp, #0x40
    1338:	stur	x0, [x29, #-16]
    133c:	stur	x1, [x29, #-24]
    1340:	ldur	x8, [x29, #-16]
    1344:	ldr	w9, [x8, #16]
    1348:	stur	w9, [x29, #-28]
    134c:	cbz	w9, 13d0 <dl_load@@Base+0x96c>
    1350:	b	1354 <dl_load@@Base+0x8f0>
    1354:	ldur	w8, [x29, #-28]
    1358:	cmp	w8, #0x1
    135c:	b.eq	138c <dl_load@@Base+0x928>  // b.none
    1360:	b	1364 <dl_load@@Base+0x900>
    1364:	ldur	w8, [x29, #-28]
    1368:	cmp	w8, #0x2
    136c:	cset	w9, eq  // eq = none
    1370:	eor	w9, w9, #0x1
    1374:	tbnz	w9, #0, 1400 <dl_load@@Base+0x99c>
    1378:	b	137c <dl_load@@Base+0x918>
    137c:	ldur	x8, [x29, #-16]
    1380:	ldr	x8, [x8, #24]
    1384:	stur	x8, [x29, #-8]
    1388:	b	145c <dl_load@@Base+0x9f8>
    138c:	ldur	x8, [x29, #-16]
    1390:	ldr	x0, [x8, #24]
    1394:	bl	960 <mpfr_number_p@plt>
    1398:	cbnz	w0, 13a8 <dl_load@@Base+0x944>
    139c:	mov	x8, xzr
    13a0:	stur	x8, [x29, #-8]
    13a4:	b	145c <dl_load@@Base+0x9f8>
    13a8:	ldur	x0, [x29, #-24]
    13ac:	bl	950 <__gmpz_init@plt>
    13b0:	ldur	x0, [x29, #-24]
    13b4:	ldur	x8, [x29, #-16]
    13b8:	ldr	x1, [x8, #24]
    13bc:	mov	w2, #0x1                   	// #1
    13c0:	bl	8f0 <mpfr_get_z@plt>
    13c4:	ldur	x8, [x29, #-24]
    13c8:	stur	x8, [x29, #-8]
    13cc:	b	145c <dl_load@@Base+0x9f8>
    13d0:	ldur	x0, [x29, #-24]
    13d4:	bl	950 <__gmpz_init@plt>
    13d8:	ldur	x0, [x29, #-24]
    13dc:	ldur	x8, [x29, #-16]
    13e0:	ldr	d0, [x8, #8]
    13e4:	str	x0, [sp, #24]
    13e8:	bl	1234 <dl_load@@Base+0x7d0>
    13ec:	ldr	x0, [sp, #24]
    13f0:	bl	910 <__gmpz_set_d@plt>
    13f4:	ldur	x8, [x29, #-24]
    13f8:	stur	x8, [x29, #-8]
    13fc:	b	145c <dl_load@@Base+0x9f8>
    1400:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
    1404:	add	x8, x8, #0xb8
    1408:	ldr	x8, [x8]
    140c:	ldr	x8, [x8, #96]
    1410:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
    1414:	add	x9, x9, #0xc0
    1418:	ldr	x0, [x9]
    141c:	adrp	x9, 1000 <dl_load@@Base+0x59c>
    1420:	add	x9, x9, #0x872
    1424:	str	x0, [sp, #16]
    1428:	mov	x0, x9
    142c:	str	x8, [sp, #8]
    1430:	bl	970 <gettext@plt>
    1434:	ldur	x8, [x29, #-16]
    1438:	ldr	w2, [x8, #16]
    143c:	ldr	x8, [sp, #16]
    1440:	str	x0, [sp]
    1444:	mov	x0, x8
    1448:	ldr	x1, [sp]
    144c:	ldr	x9, [sp, #8]
    1450:	blr	x9
    1454:	mov	x8, xzr
    1458:	stur	x8, [x29, #-8]
    145c:	ldur	x0, [x29, #-8]
    1460:	ldp	x29, x30, [sp, #64]
    1464:	add	sp, sp, #0x50
    1468:	ret
    146c:	sub	sp, sp, #0xa0
    1470:	stp	x29, x30, [sp, #144]
    1474:	add	x29, sp, #0x90
    1478:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
    147c:	add	x8, x8, #0xb8
    1480:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
    1484:	add	x9, x9, #0xc0
    1488:	mov	w4, #0x1                   	// #1
    148c:	sub	x5, x29, #0x40
    1490:	add	x10, sp, #0x30
    1494:	stur	x0, [x29, #-8]
    1498:	stur	x1, [x29, #-16]
    149c:	stur	x2, [x29, #-24]
    14a0:	stur	x3, [x29, #-32]
    14a4:	ldr	x11, [x8]
    14a8:	ldr	x11, [x11, #232]
    14ac:	ldr	x0, [x9]
    14b0:	ldur	x1, [x29, #-8]
    14b4:	ldr	x8, [x8]
    14b8:	ldr	x9, [x9]
    14bc:	ldur	x2, [x29, #-16]
    14c0:	ldur	x3, [x29, #-24]
    14c4:	str	x0, [sp, #40]
    14c8:	mov	x0, x8
    14cc:	str	x1, [sp, #32]
    14d0:	mov	x1, x9
    14d4:	str	x10, [sp, #24]
    14d8:	str	x11, [sp, #16]
    14dc:	bl	1520 <dl_load@@Base+0xabc>
    14e0:	ldur	x8, [x29, #-32]
    14e4:	str	x0, [sp, #8]
    14e8:	mov	x0, x8
    14ec:	ldr	x1, [sp, #24]
    14f0:	bl	166c <dl_load@@Base+0xc08>
    14f4:	ldr	x8, [sp, #40]
    14f8:	str	x0, [sp]
    14fc:	mov	x0, x8
    1500:	ldr	x1, [sp, #32]
    1504:	ldr	x2, [sp, #8]
    1508:	ldr	x3, [sp]
    150c:	ldr	x9, [sp, #16]
    1510:	blr	x9
    1514:	ldp	x29, x30, [sp, #144]
    1518:	add	sp, sp, #0xa0
    151c:	ret
    1520:	sub	sp, sp, #0x40
    1524:	stp	x29, x30, [sp, #48]
    1528:	add	x29, sp, #0x30
    152c:	mov	w6, #0x2                   	// #2
    1530:	stur	x0, [x29, #-8]
    1534:	stur	x1, [x29, #-16]
    1538:	str	x2, [sp, #24]
    153c:	str	x3, [sp, #16]
    1540:	str	w4, [sp, #12]
    1544:	str	x5, [sp]
    1548:	ldur	x0, [x29, #-8]
    154c:	ldur	x1, [x29, #-16]
    1550:	ldr	x2, [sp, #24]
    1554:	ldr	x3, [sp, #16]
    1558:	ldr	w4, [sp, #12]
    155c:	ldr	x5, [sp]
    1560:	bl	1570 <dl_load@@Base+0xb0c>
    1564:	ldp	x29, x30, [sp, #48]
    1568:	add	sp, sp, #0x40
    156c:	ret
    1570:	sub	sp, sp, #0x50
    1574:	stp	x29, x30, [sp, #64]
    1578:	add	x29, sp, #0x40
    157c:	mov	x8, xzr
    1580:	mov	x9, #0x20                  	// #32
    1584:	mov	w10, wzr
    1588:	stur	x0, [x29, #-8]
    158c:	stur	x1, [x29, #-16]
    1590:	stur	x2, [x29, #-24]
    1594:	str	x3, [sp, #32]
    1598:	str	w4, [sp, #28]
    159c:	str	x5, [sp, #16]
    15a0:	str	w6, [sp, #12]
    15a4:	str	x8, [sp]
    15a8:	ldr	x0, [sp, #16]
    15ac:	mov	w1, w10
    15b0:	mov	x2, x9
    15b4:	bl	900 <memset@plt>
    15b8:	ldr	w10, [sp, #12]
    15bc:	ldr	x8, [sp, #16]
    15c0:	str	w10, [x8]
    15c4:	ldr	x8, [sp, #32]
    15c8:	ldr	x9, [sp, #16]
    15cc:	str	x8, [x9, #16]
    15d0:	ldr	w10, [sp, #28]
    15d4:	cbz	w10, 1650 <dl_load@@Base+0xbec>
    15d8:	ldur	x8, [x29, #-8]
    15dc:	ldr	x8, [x8, #280]
    15e0:	ldr	x9, [sp, #32]
    15e4:	add	x0, x9, #0x1
    15e8:	blr	x8
    15ec:	str	x0, [sp]
    15f0:	cbnz	x0, 161c <dl_load@@Base+0xbb8>
    15f4:	ldur	x8, [x29, #-8]
    15f8:	ldr	x8, [x8, #96]
    15fc:	ldur	x0, [x29, #-16]
    1600:	ldr	x9, [sp, #32]
    1604:	add	x3, x9, #0x1
    1608:	adrp	x1, 1000 <dl_load@@Base+0x59c>
    160c:	add	x1, x1, #0x846
    1610:	adrp	x2, 1000 <dl_load@@Base+0x59c>
    1614:	add	x2, x2, #0x864
    1618:	blr	x8
    161c:	ldr	x0, [sp]
    1620:	ldur	x1, [x29, #-24]
    1624:	ldr	x2, [sp, #32]
    1628:	bl	8b0 <memcpy@plt>
    162c:	ldr	x8, [sp]
    1630:	ldr	x9, [sp, #32]
    1634:	add	x8, x8, x9
    1638:	mov	w10, #0x0                   	// #0
    163c:	strb	w10, [x8]
    1640:	ldr	x8, [sp]
    1644:	ldr	x9, [sp, #16]
    1648:	str	x8, [x9, #8]
    164c:	b	165c <dl_load@@Base+0xbf8>
    1650:	ldur	x8, [x29, #-24]
    1654:	ldr	x9, [sp, #16]
    1658:	str	x8, [x9, #8]
    165c:	ldr	x0, [sp, #16]
    1660:	ldp	x29, x30, [sp, #64]
    1664:	add	sp, sp, #0x50
    1668:	ret
    166c:	sub	sp, sp, #0x10
    1670:	mov	w8, #0x1                   	// #1
    1674:	mov	w9, #0x2                   	// #2
    1678:	str	x0, [sp, #8]
    167c:	str	x1, [sp]
    1680:	ldr	x10, [sp]
    1684:	str	w8, [x10]
    1688:	ldr	x10, [sp]
    168c:	str	w9, [x10, #16]
    1690:	ldr	x10, [sp, #8]
    1694:	ldr	x11, [sp]
    1698:	str	x10, [x11, #24]
    169c:	ldr	x0, [sp]
    16a0:	add	sp, sp, #0x10
    16a4:	ret

Disassembly of section .fini:

00000000000016a8 <.fini>:
    16a8:	stp	x29, x30, [sp, #-16]!
    16ac:	mov	x29, sp
    16b0:	ldp	x29, x30, [sp], #16
    16b4:	ret
