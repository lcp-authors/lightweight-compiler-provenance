
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdflags_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b68 <_init>:
 b68:	stp	x29, x30, [sp, #-16]!
 b6c:	mov	x29, sp
 b70:	bl	ca0 <call_weak_fn>
 b74:	ldp	x29, x30, [sp], #16
 b78:	ret

Disassembly of section .plt:

0000000000000b80 <.plt>:
 b80:	stp	x16, x30, [sp, #-16]!
 b84:	adrp	x16, 11000 <__FRAME_END__+0xf388>
 b88:	ldr	x17, [x16, #4088]
 b8c:	add	x16, x16, #0xff8
 b90:	br	x17
 b94:	nop
 b98:	nop
 b9c:	nop

0000000000000ba0 <strtok@plt>:
 ba0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ba4:	ldr	x17, [x16]
 ba8:	add	x16, x16, #0x0
 bac:	br	x17

0000000000000bb0 <builtin_error@plt>:
 bb0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bb4:	ldr	x17, [x16, #8]
 bb8:	add	x16, x16, #0x8
 bbc:	br	x17

0000000000000bc0 <__cxa_finalize@plt>:
 bc0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bc4:	ldr	x17, [x16, #16]
 bc8:	add	x16, x16, #0x10
 bcc:	br	x17

0000000000000bd0 <builtin_help@plt>:
 bd0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bd4:	ldr	x17, [x16, #24]
 bd8:	add	x16, x16, #0x18
 bdc:	br	x17

0000000000000be0 <builtin_usage@plt>:
 be0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 be4:	ldr	x17, [x16, #32]
 be8:	add	x16, x16, #0x20
 bec:	br	x17

0000000000000bf0 <strerror@plt>:
 bf0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #40]
 bf8:	add	x16, x16, #0x28
 bfc:	br	x17

0000000000000c00 <__gmon_start__@plt>:
 c00:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c04:	ldr	x17, [x16, #48]
 c08:	add	x16, x16, #0x30
 c0c:	br	x17

0000000000000c10 <strcmp@plt>:
 c10:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c14:	ldr	x17, [x16, #56]
 c18:	add	x16, x16, #0x38
 c1c:	br	x17

0000000000000c20 <internal_getopt@plt>:
 c20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c24:	ldr	x17, [x16, #64]
 c28:	add	x16, x16, #0x40
 c2c:	br	x17

0000000000000c30 <reset_internal_getopt@plt>:
 c30:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c34:	ldr	x17, [x16, #72]
 c38:	add	x16, x16, #0x48
 c3c:	br	x17

0000000000000c40 <fcntl@plt>:
 c40:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c44:	ldr	x17, [x16, #80]
 c48:	add	x16, x16, #0x50
 c4c:	br	x17

0000000000000c50 <legal_number@plt>:
 c50:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c54:	ldr	x17, [x16, #88]
 c58:	add	x16, x16, #0x58
 c5c:	br	x17

0000000000000c60 <printf@plt>:
 c60:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c64:	ldr	x17, [x16, #96]
 c68:	add	x16, x16, #0x60
 c6c:	br	x17

0000000000000c70 <__errno_location@plt>:
 c70:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c74:	ldr	x17, [x16, #104]
 c78:	add	x16, x16, #0x68
 c7c:	br	x17

0000000000000c80 <putchar@plt>:
 c80:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c84:	ldr	x17, [x16, #112]
 c88:	add	x16, x16, #0x70
 c8c:	br	x17

0000000000000c90 <getdtablesize@plt>:
 c90:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c94:	ldr	x17, [x16, #120]
 c98:	add	x16, x16, #0x78
 c9c:	br	x17

Disassembly of section .text:

0000000000000ca0 <call_weak_fn>:
     ca0:	adrp	x0, 11000 <__FRAME_END__+0xf388>
     ca4:	ldr	x0, [x0, #4040]
     ca8:	cbz	x0, cb0 <call_weak_fn+0x10>
     cac:	b	c00 <__gmon_start__@plt>
     cb0:	ret

0000000000000cb4 <deregister_tm_clones>:
     cb4:	stp	x29, x30, [sp, #-32]!
     cb8:	mov	x29, sp
     cbc:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cc0:	add	x0, x0, #0x128
     cc4:	str	x0, [sp, #24]
     cc8:	ldr	x0, [sp, #24]
     ccc:	str	x0, [sp, #24]
     cd0:	ldr	x1, [sp, #24]
     cd4:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cd8:	add	x0, x0, #0x128
     cdc:	cmp	x1, x0
     ce0:	b.eq	d18 <deregister_tm_clones+0x64>  // b.none
     ce4:	adrp	x0, 11000 <__FRAME_END__+0xf388>
     ce8:	ldr	x0, [x0, #4024]
     cec:	str	x0, [sp, #16]
     cf0:	ldr	x0, [sp, #16]
     cf4:	str	x0, [sp, #16]
     cf8:	ldr	x0, [sp, #16]
     cfc:	cmp	x0, #0x0
     d00:	b.eq	d1c <deregister_tm_clones+0x68>  // b.none
     d04:	ldr	x1, [sp, #16]
     d08:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d0c:	add	x0, x0, #0x128
     d10:	blr	x1
     d14:	b	d1c <deregister_tm_clones+0x68>
     d18:	nop
     d1c:	ldp	x29, x30, [sp], #32
     d20:	ret

0000000000000d24 <register_tm_clones>:
     d24:	stp	x29, x30, [sp, #-48]!
     d28:	mov	x29, sp
     d2c:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d30:	add	x0, x0, #0x128
     d34:	str	x0, [sp, #40]
     d38:	ldr	x0, [sp, #40]
     d3c:	str	x0, [sp, #40]
     d40:	ldr	x1, [sp, #40]
     d44:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d48:	add	x0, x0, #0x128
     d4c:	sub	x0, x1, x0
     d50:	asr	x0, x0, #3
     d54:	lsr	x1, x0, #63
     d58:	add	x0, x1, x0
     d5c:	asr	x0, x0, #1
     d60:	str	x0, [sp, #32]
     d64:	ldr	x0, [sp, #32]
     d68:	cmp	x0, #0x0
     d6c:	b.eq	da8 <register_tm_clones+0x84>  // b.none
     d70:	adrp	x0, 11000 <__FRAME_END__+0xf388>
     d74:	ldr	x0, [x0, #4064]
     d78:	str	x0, [sp, #24]
     d7c:	ldr	x0, [sp, #24]
     d80:	str	x0, [sp, #24]
     d84:	ldr	x0, [sp, #24]
     d88:	cmp	x0, #0x0
     d8c:	b.eq	dac <register_tm_clones+0x88>  // b.none
     d90:	ldr	x2, [sp, #24]
     d94:	ldr	x1, [sp, #32]
     d98:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d9c:	add	x0, x0, #0x128
     da0:	blr	x2
     da4:	b	dac <register_tm_clones+0x88>
     da8:	nop
     dac:	ldp	x29, x30, [sp], #48
     db0:	ret

0000000000000db4 <__do_global_dtors_aux>:
     db4:	stp	x29, x30, [sp, #-16]!
     db8:	mov	x29, sp
     dbc:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     dc0:	add	x0, x0, #0x128
     dc4:	ldrb	w0, [x0]
     dc8:	and	x0, x0, #0xff
     dcc:	cmp	x0, #0x0
     dd0:	b.ne	e0c <__do_global_dtors_aux+0x58>  // b.any
     dd4:	adrp	x0, 11000 <__FRAME_END__+0xf388>
     dd8:	ldr	x0, [x0, #4032]
     ddc:	cmp	x0, #0x0
     de0:	b.eq	df4 <__do_global_dtors_aux+0x40>  // b.none
     de4:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     de8:	add	x0, x0, #0x80
     dec:	ldr	x0, [x0]
     df0:	bl	bc0 <__cxa_finalize@plt>
     df4:	bl	cb4 <deregister_tm_clones>
     df8:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     dfc:	add	x0, x0, #0x128
     e00:	mov	w1, #0x1                   	// #1
     e04:	strb	w1, [x0]
     e08:	b	e10 <__do_global_dtors_aux+0x5c>
     e0c:	nop
     e10:	ldp	x29, x30, [sp], #16
     e14:	ret

0000000000000e18 <frame_dummy>:
     e18:	stp	x29, x30, [sp, #-16]!
     e1c:	mov	x29, sp
     e20:	bl	d24 <register_tm_clones>
     e24:	nop
     e28:	ldp	x29, x30, [sp], #16
     e2c:	ret

0000000000000e30 <getallflags>:
     e30:	sub	sp, sp, #0x10
     e34:	str	wzr, [sp, #8]
     e38:	ldr	w0, [sp, #8]
     e3c:	str	w0, [sp, #12]
     e40:	b	e74 <getallflags+0x44>
     e44:	adrp	x0, 11000 <__FRAME_END__+0xf388>
     e48:	add	x1, x0, #0xd30
     e4c:	ldrsw	x0, [sp, #12]
     e50:	lsl	x0, x0, #4
     e54:	add	x0, x1, x0
     e58:	ldr	w0, [x0, #8]
     e5c:	ldr	w1, [sp, #8]
     e60:	orr	w0, w1, w0
     e64:	str	w0, [sp, #8]
     e68:	ldr	w0, [sp, #12]
     e6c:	add	w0, w0, #0x1
     e70:	str	w0, [sp, #12]
     e74:	ldr	w0, [sp, #12]
     e78:	cmp	w0, #0x9
     e7c:	b.ls	e44 <getallflags+0x14>  // b.plast
     e80:	ldr	w0, [sp, #8]
     e84:	add	sp, sp, #0x10
     e88:	ret

0000000000000e8c <getflags>:
     e8c:	stp	x29, x30, [sp, #-48]!
     e90:	mov	x29, sp
     e94:	str	w0, [sp, #28]
     e98:	str	w1, [sp, #24]
     e9c:	mov	w1, #0x1                   	// #1
     ea0:	ldr	w0, [sp, #28]
     ea4:	bl	c40 <fcntl@plt>
     ea8:	str	w0, [sp, #40]
     eac:	ldr	w0, [sp, #40]
     eb0:	cmn	w0, #0x1
     eb4:	b.ne	eec <getflags+0x60>  // b.any
     eb8:	ldr	w0, [sp, #24]
     ebc:	cmp	w0, #0x0
     ec0:	b.eq	ee4 <getflags+0x58>  // b.none
     ec4:	bl	c70 <__errno_location@plt>
     ec8:	ldr	w0, [x0]
     ecc:	bl	bf0 <strerror@plt>
     ed0:	mov	x2, x0
     ed4:	ldr	w1, [sp, #28]
     ed8:	adrp	x0, 1000 <printone+0x94>
     edc:	add	x0, x0, #0x6d8
     ee0:	bl	bb0 <builtin_error@plt>
     ee4:	mov	w0, #0xffffffff            	// #-1
     ee8:	b	f64 <getflags+0xd8>
     eec:	mov	w1, #0x3                   	// #3
     ef0:	ldr	w0, [sp, #28]
     ef4:	bl	c40 <fcntl@plt>
     ef8:	str	w0, [sp, #44]
     efc:	ldr	w0, [sp, #44]
     f00:	cmn	w0, #0x1
     f04:	b.ne	f3c <getflags+0xb0>  // b.any
     f08:	ldr	w0, [sp, #24]
     f0c:	cmp	w0, #0x0
     f10:	b.eq	f34 <getflags+0xa8>  // b.none
     f14:	bl	c70 <__errno_location@plt>
     f18:	ldr	w0, [x0]
     f1c:	bl	bf0 <strerror@plt>
     f20:	mov	x2, x0
     f24:	ldr	w1, [sp, #28]
     f28:	adrp	x0, 1000 <printone+0x94>
     f2c:	add	x0, x0, #0x6f8
     f30:	bl	bb0 <builtin_error@plt>
     f34:	mov	w0, #0xffffffff            	// #-1
     f38:	b	f64 <getflags+0xd8>
     f3c:	ldr	w0, [sp, #40]
     f40:	cmp	w0, #0x0
     f44:	b.eq	f54 <getflags+0xc8>  // b.none
     f48:	ldr	w0, [sp, #44]
     f4c:	orr	w0, w0, #0x80000
     f50:	str	w0, [sp, #44]
     f54:	bl	e30 <getallflags>
     f58:	mov	w1, w0
     f5c:	ldr	w0, [sp, #44]
     f60:	and	w0, w1, w0
     f64:	ldp	x29, x30, [sp], #48
     f68:	ret

0000000000000f6c <printone>:
     f6c:	stp	x29, x30, [sp, #-48]!
     f70:	mov	x29, sp
     f74:	str	w0, [sp, #28]
     f78:	str	w1, [sp, #24]
     f7c:	str	w2, [sp, #20]
     f80:	ldr	w1, [sp, #24]
     f84:	ldr	w0, [sp, #28]
     f88:	bl	e8c <getflags>
     f8c:	str	w0, [sp, #44]
     f90:	ldr	w0, [sp, #44]
     f94:	cmn	w0, #0x1
     f98:	b.eq	10e0 <printone+0x174>  // b.none
     f9c:	ldr	w1, [sp, #28]
     fa0:	adrp	x0, 1000 <printone+0x94>
     fa4:	add	x0, x0, #0x718
     fa8:	bl	c60 <printf@plt>
     fac:	str	xzr, [sp, #32]
     fb0:	b	10c8 <printone+0x15c>
     fb4:	adrp	x0, 11000 <__FRAME_END__+0xf388>
     fb8:	add	x1, x0, #0xd30
     fbc:	ldr	x0, [sp, #32]
     fc0:	lsl	x0, x0, #4
     fc4:	add	x0, x1, x0
     fc8:	ldr	w1, [x0, #8]
     fcc:	ldr	w0, [sp, #44]
     fd0:	and	w0, w1, w0
     fd4:	cmp	w0, #0x0
     fd8:	b.eq	1054 <printone+0xe8>  // b.none
     fdc:	ldr	w0, [sp, #20]
     fe0:	cmp	w0, #0x0
     fe4:	b.eq	ff4 <printone+0x88>  // b.none
     fe8:	adrp	x0, 1000 <printone+0x94>
     fec:	add	x0, x0, #0x720
     ff0:	b	ffc <printone+0x90>
     ff4:	adrp	x0, 1000 <printone+0x94>
     ff8:	add	x0, x0, #0x728
     ffc:	adrp	x1, 11000 <__FRAME_END__+0xf388>
    1000:	add	x2, x1, #0xd30
    1004:	ldr	x1, [sp, #32]
    1008:	lsl	x1, x1, #4
    100c:	add	x1, x2, x1
    1010:	ldr	x1, [x1]
    1014:	mov	x2, x1
    1018:	mov	x1, x0
    101c:	adrp	x0, 1000 <printone+0x94>
    1020:	add	x0, x0, #0x730
    1024:	bl	c60 <printf@plt>
    1028:	adrp	x0, 11000 <__FRAME_END__+0xf388>
    102c:	add	x1, x0, #0xd30
    1030:	ldr	x0, [sp, #32]
    1034:	lsl	x0, x0, #4
    1038:	add	x0, x1, x0
    103c:	ldr	w0, [x0, #8]
    1040:	mvn	w0, w0
    1044:	ldr	w1, [sp, #44]
    1048:	and	w0, w1, w0
    104c:	str	w0, [sp, #44]
    1050:	b	1088 <printone+0x11c>
    1054:	ldr	w0, [sp, #20]
    1058:	cmp	w0, #0x0
    105c:	b.eq	10b8 <printone+0x14c>  // b.none
    1060:	adrp	x0, 11000 <__FRAME_END__+0xf388>
    1064:	add	x1, x0, #0xd30
    1068:	ldr	x0, [sp, #32]
    106c:	lsl	x0, x0, #4
    1070:	add	x0, x1, x0
    1074:	ldr	x0, [x0]
    1078:	mov	x1, x0
    107c:	adrp	x0, 1000 <printone+0x94>
    1080:	add	x0, x0, #0x738
    1084:	bl	c60 <printf@plt>
    1088:	ldr	w0, [sp, #44]
    108c:	cmp	w0, #0x0
    1090:	b.ne	10ac <printone+0x140>  // b.any
    1094:	ldr	w0, [sp, #20]
    1098:	cmp	w0, #0x0
    109c:	b.eq	10bc <printone+0x150>  // b.none
    10a0:	ldr	x0, [sp, #32]
    10a4:	cmp	x0, #0x9
    10a8:	b.eq	10bc <printone+0x150>  // b.none
    10ac:	mov	w0, #0x2c                  	// #44
    10b0:	bl	c80 <putchar@plt>
    10b4:	b	10bc <printone+0x150>
    10b8:	nop
    10bc:	ldr	x0, [sp, #32]
    10c0:	add	x0, x0, #0x1
    10c4:	str	x0, [sp, #32]
    10c8:	ldr	x0, [sp, #32]
    10cc:	cmp	x0, #0x9
    10d0:	b.ls	fb4 <printone+0x48>  // b.plast
    10d4:	mov	w0, #0xa                   	// #10
    10d8:	bl	c80 <putchar@plt>
    10dc:	b	10e4 <printone+0x178>
    10e0:	nop
    10e4:	ldp	x29, x30, [sp], #48
    10e8:	ret

00000000000010ec <parseflags>:
    10ec:	stp	x29, x30, [sp, #-80]!
    10f0:	mov	x29, sp
    10f4:	str	x0, [sp, #40]
    10f8:	str	x1, [sp, #32]
    10fc:	str	x2, [sp, #24]
    1100:	str	wzr, [sp, #60]
    1104:	ldr	x0, [sp, #24]
    1108:	str	wzr, [x0]
    110c:	ldr	x0, [sp, #24]
    1110:	ldr	w1, [x0]
    1114:	ldr	x0, [sp, #32]
    1118:	str	w1, [x0]
    111c:	adrp	x0, 1000 <printone+0x94>
    1120:	add	x1, x0, #0x740
    1124:	ldr	x0, [sp, #40]
    1128:	bl	ba0 <strtok@plt>
    112c:	str	x0, [sp, #40]
    1130:	b	1238 <parseflags+0x14c>
    1134:	ldr	x0, [sp, #40]
    1138:	ldrb	w0, [x0]
    113c:	cmp	w0, #0x2b
    1140:	b.eq	1150 <parseflags+0x64>  // b.none
    1144:	cmp	w0, #0x2d
    1148:	b.eq	1168 <parseflags+0x7c>  // b.none
    114c:	b	1180 <parseflags+0x94>
    1150:	ldr	x0, [sp, #32]
    1154:	str	x0, [sp, #72]
    1158:	ldr	x0, [sp, #40]
    115c:	add	x0, x0, #0x1
    1160:	str	x0, [sp, #40]
    1164:	b	118c <parseflags+0xa0>
    1168:	ldr	x0, [sp, #24]
    116c:	str	x0, [sp, #72]
    1170:	ldr	x0, [sp, #40]
    1174:	add	x0, x0, #0x1
    1178:	str	x0, [sp, #40]
    117c:	b	118c <parseflags+0xa0>
    1180:	add	x0, sp, #0x3c
    1184:	str	x0, [sp, #72]
    1188:	nop
    118c:	str	xzr, [sp, #64]
    1190:	b	11fc <parseflags+0x110>
    1194:	adrp	x0, 11000 <__FRAME_END__+0xf388>
    1198:	add	x1, x0, #0xd30
    119c:	ldr	x0, [sp, #64]
    11a0:	lsl	x0, x0, #4
    11a4:	add	x0, x1, x0
    11a8:	ldr	x0, [x0]
    11ac:	mov	x1, x0
    11b0:	ldr	x0, [sp, #40]
    11b4:	bl	c10 <strcmp@plt>
    11b8:	cmp	w0, #0x0
    11bc:	b.ne	11f0 <parseflags+0x104>  // b.any
    11c0:	ldr	x0, [sp, #72]
    11c4:	ldr	w1, [x0]
    11c8:	adrp	x0, 11000 <__FRAME_END__+0xf388>
    11cc:	add	x2, x0, #0xd30
    11d0:	ldr	x0, [sp, #64]
    11d4:	lsl	x0, x0, #4
    11d8:	add	x0, x2, x0
    11dc:	ldr	w0, [x0, #8]
    11e0:	orr	w1, w1, w0
    11e4:	ldr	x0, [sp, #72]
    11e8:	str	w1, [x0]
    11ec:	b	1208 <parseflags+0x11c>
    11f0:	ldr	x0, [sp, #64]
    11f4:	add	x0, x0, #0x1
    11f8:	str	x0, [sp, #64]
    11fc:	ldr	x0, [sp, #64]
    1200:	cmp	x0, #0x9
    1204:	b.ls	1194 <parseflags+0xa8>  // b.plast
    1208:	ldr	x0, [sp, #64]
    120c:	cmp	x0, #0xa
    1210:	b.ne	1224 <parseflags+0x138>  // b.any
    1214:	ldr	x1, [sp, #40]
    1218:	adrp	x0, 1000 <printone+0x94>
    121c:	add	x0, x0, #0x748
    1220:	bl	bb0 <builtin_error@plt>
    1224:	adrp	x0, 1000 <printone+0x94>
    1228:	add	x1, x0, #0x740
    122c:	mov	x0, #0x0                   	// #0
    1230:	bl	ba0 <strtok@plt>
    1234:	str	x0, [sp, #40]
    1238:	ldr	x0, [sp, #40]
    123c:	cmp	x0, #0x0
    1240:	b.ne	1134 <parseflags+0x48>  // b.any
    1244:	ldr	w0, [sp, #60]
    1248:	ldp	x29, x30, [sp], #80
    124c:	ret

0000000000001250 <setone>:
    1250:	stp	x29, x30, [sp, #-64]!
    1254:	mov	x29, sp
    1258:	str	w0, [sp, #28]
    125c:	str	x1, [sp, #16]
    1260:	str	w2, [sp, #24]
    1264:	mov	w1, #0x1                   	// #1
    1268:	ldr	w0, [sp, #28]
    126c:	bl	e8c <getflags>
    1270:	str	w0, [sp, #56]
    1274:	ldr	w0, [sp, #56]
    1278:	cmn	w0, #0x1
    127c:	b.eq	13cc <setone+0x17c>  // b.none
    1280:	add	x1, sp, #0x2c
    1284:	add	x0, sp, #0x30
    1288:	mov	x2, x1
    128c:	mov	x1, x0
    1290:	ldr	x0, [sp, #16]
    1294:	bl	10ec <parseflags>
    1298:	mov	w0, #0xffffffff            	// #-1
    129c:	str	w0, [sp, #60]
    12a0:	ldr	w0, [sp, #48]
    12a4:	and	w0, w0, #0x80000
    12a8:	cmp	w0, #0x0
    12ac:	b.eq	12c8 <setone+0x78>  // b.none
    12b0:	ldr	w0, [sp, #56]
    12b4:	and	w0, w0, #0x80000
    12b8:	cmp	w0, #0x0
    12bc:	b.ne	12c8 <setone+0x78>  // b.any
    12c0:	mov	w0, #0x1                   	// #1
    12c4:	str	w0, [sp, #60]
    12c8:	ldr	w0, [sp, #44]
    12cc:	and	w0, w0, #0x80000
    12d0:	cmp	w0, #0x0
    12d4:	b.eq	12ec <setone+0x9c>  // b.none
    12d8:	ldr	w0, [sp, #56]
    12dc:	and	w0, w0, #0x80000
    12e0:	cmp	w0, #0x0
    12e4:	b.eq	12ec <setone+0x9c>  // b.none
    12e8:	str	wzr, [sp, #60]
    12ec:	ldr	w0, [sp, #60]
    12f0:	cmn	w0, #0x1
    12f4:	b.eq	1330 <setone+0xe0>  // b.none
    12f8:	ldr	w2, [sp, #60]
    12fc:	mov	w1, #0x2                   	// #2
    1300:	ldr	w0, [sp, #28]
    1304:	bl	c40 <fcntl@plt>
    1308:	cmn	w0, #0x1
    130c:	b.ne	1330 <setone+0xe0>  // b.any
    1310:	bl	c70 <__errno_location@plt>
    1314:	ldr	w0, [x0]
    1318:	bl	bf0 <strerror@plt>
    131c:	mov	x2, x0
    1320:	ldr	w1, [sp, #28]
    1324:	adrp	x0, 1000 <printone+0x94>
    1328:	add	x0, x0, #0x760
    132c:	bl	bb0 <builtin_error@plt>
    1330:	ldr	w0, [sp, #48]
    1334:	and	w0, w0, #0xfff7ffff
    1338:	str	w0, [sp, #48]
    133c:	ldr	w0, [sp, #44]
    1340:	and	w0, w0, #0xfff7ffff
    1344:	str	w0, [sp, #44]
    1348:	ldr	w0, [sp, #56]
    134c:	and	w0, w0, #0xfff7ffff
    1350:	str	w0, [sp, #56]
    1354:	ldr	w0, [sp, #56]
    1358:	str	w0, [sp, #52]
    135c:	ldr	w0, [sp, #48]
    1360:	ldr	w1, [sp, #52]
    1364:	orr	w0, w1, w0
    1368:	str	w0, [sp, #52]
    136c:	ldr	w0, [sp, #44]
    1370:	mvn	w0, w0
    1374:	ldr	w1, [sp, #52]
    1378:	and	w0, w1, w0
    137c:	str	w0, [sp, #52]
    1380:	ldr	w1, [sp, #52]
    1384:	ldr	w0, [sp, #56]
    1388:	cmp	w1, w0
    138c:	b.eq	13d0 <setone+0x180>  // b.none
    1390:	ldr	w2, [sp, #52]
    1394:	mov	w1, #0x4                   	// #4
    1398:	ldr	w0, [sp, #28]
    139c:	bl	c40 <fcntl@plt>
    13a0:	cmn	w0, #0x1
    13a4:	b.ne	13d0 <setone+0x180>  // b.any
    13a8:	bl	c70 <__errno_location@plt>
    13ac:	ldr	w0, [x0]
    13b0:	bl	bf0 <strerror@plt>
    13b4:	mov	x2, x0
    13b8:	ldr	w1, [sp, #28]
    13bc:	adrp	x0, 1000 <printone+0x94>
    13c0:	add	x0, x0, #0x780
    13c4:	bl	bb0 <builtin_error@plt>
    13c8:	b	13d0 <setone+0x180>
    13cc:	nop
    13d0:	ldp	x29, x30, [sp], #64
    13d4:	ret

00000000000013d8 <getmaxfd>:
    13d8:	stp	x29, x30, [sp, #-32]!
    13dc:	mov	x29, sp
    13e0:	bl	c90 <getdtablesize@plt>
    13e4:	str	w0, [sp, #28]
    13e8:	ldr	w0, [sp, #28]
    13ec:	cmp	w0, #0x0
    13f0:	b.gt	13fc <getmaxfd+0x24>
    13f4:	mov	w0, #0x100                 	// #256
    13f8:	str	w0, [sp, #28]
    13fc:	ldr	w0, [sp, #28]
    1400:	sub	w0, w0, #0x1
    1404:	str	w0, [sp, #28]
    1408:	b	1434 <getmaxfd+0x5c>
    140c:	add	x0, sp, #0x18
    1410:	mov	x2, x0
    1414:	mov	w1, #0x1                   	// #1
    1418:	ldr	w0, [sp, #28]
    141c:	bl	c40 <fcntl@plt>
    1420:	cmn	w0, #0x1
    1424:	b.ne	1444 <getmaxfd+0x6c>  // b.any
    1428:	ldr	w0, [sp, #28]
    142c:	sub	w0, w0, #0x1
    1430:	str	w0, [sp, #28]
    1434:	ldr	w0, [sp, #28]
    1438:	cmp	w0, #0x0
    143c:	b.gt	140c <getmaxfd+0x34>
    1440:	b	1448 <getmaxfd+0x70>
    1444:	nop
    1448:	ldr	w0, [sp, #28]
    144c:	ldp	x29, x30, [sp], #32
    1450:	ret

0000000000001454 <fdflags_builtin>:
    1454:	stp	x29, x30, [sp, #-80]!
    1458:	mov	x29, sp
    145c:	str	x0, [sp, #24]
    1460:	str	wzr, [sp, #68]
    1464:	ldr	w0, [sp, #68]
    1468:	str	w0, [sp, #64]
    146c:	bl	c30 <reset_internal_getopt@plt>
    1470:	b	14e4 <fdflags_builtin+0x90>
    1474:	ldr	w0, [sp, #76]
    1478:	cmp	w0, #0x76
    147c:	b.eq	14c0 <fdflags_builtin+0x6c>  // b.none
    1480:	ldr	w0, [sp, #76]
    1484:	cmp	w0, #0x76
    1488:	b.gt	14d8 <fdflags_builtin+0x84>
    148c:	ldr	w0, [sp, #76]
    1490:	cmn	w0, #0x63
    1494:	b.eq	14cc <fdflags_builtin+0x78>  // b.none
    1498:	ldr	w0, [sp, #76]
    149c:	cmp	w0, #0x73
    14a0:	b.ne	14d8 <fdflags_builtin+0x84>  // b.any
    14a4:	mov	w0, #0x1                   	// #1
    14a8:	str	w0, [sp, #64]
    14ac:	adrp	x0, 11000 <__FRAME_END__+0xf388>
    14b0:	ldr	x0, [x0, #4048]
    14b4:	ldr	x0, [x0]
    14b8:	str	x0, [sp, #56]
    14bc:	b	14e4 <fdflags_builtin+0x90>
    14c0:	mov	w0, #0x1                   	// #1
    14c4:	str	w0, [sp, #68]
    14c8:	b	14e4 <fdflags_builtin+0x90>
    14cc:	bl	bd0 <builtin_help@plt>
    14d0:	mov	w0, #0x102                 	// #258
    14d4:	b	1668 <fdflags_builtin+0x214>
    14d8:	bl	be0 <builtin_usage@plt>
    14dc:	mov	w0, #0x102                 	// #258
    14e0:	b	1668 <fdflags_builtin+0x214>
    14e4:	adrp	x0, 1000 <printone+0x94>
    14e8:	add	x1, x0, #0x7a0
    14ec:	ldr	x0, [sp, #24]
    14f0:	bl	c20 <internal_getopt@plt>
    14f4:	str	w0, [sp, #76]
    14f8:	ldr	w0, [sp, #76]
    14fc:	cmn	w0, #0x1
    1500:	b.ne	1474 <fdflags_builtin+0x20>  // b.any
    1504:	adrp	x0, 11000 <__FRAME_END__+0xf388>
    1508:	ldr	x0, [x0, #4056]
    150c:	ldr	x0, [x0]
    1510:	str	x0, [sp, #24]
    1514:	ldr	x0, [sp, #24]
    1518:	cmp	x0, #0x0
    151c:	b.ne	1534 <fdflags_builtin+0xe0>  // b.any
    1520:	ldr	w0, [sp, #64]
    1524:	cmp	w0, #0x0
    1528:	b.eq	1534 <fdflags_builtin+0xe0>  // b.none
    152c:	mov	w0, #0x0                   	// #0
    1530:	b	1668 <fdflags_builtin+0x214>
    1534:	ldr	x0, [sp, #24]
    1538:	cmp	x0, #0x0
    153c:	b.ne	15b4 <fdflags_builtin+0x160>  // b.any
    1540:	bl	13d8 <getmaxfd>
    1544:	str	w0, [sp, #40]
    1548:	ldr	w0, [sp, #40]
    154c:	cmp	w0, #0x0
    1550:	b.ge	1578 <fdflags_builtin+0x124>  // b.tcont
    1554:	bl	c70 <__errno_location@plt>
    1558:	ldr	w0, [x0]
    155c:	bl	bf0 <strerror@plt>
    1560:	mov	x1, x0
    1564:	adrp	x0, 1000 <printone+0x94>
    1568:	add	x0, x0, #0x7a8
    156c:	bl	bb0 <builtin_error@plt>
    1570:	mov	w0, #0x1                   	// #1
    1574:	b	1668 <fdflags_builtin+0x214>
    1578:	str	wzr, [sp, #72]
    157c:	b	159c <fdflags_builtin+0x148>
    1580:	ldr	w2, [sp, #68]
    1584:	mov	w1, #0x0                   	// #0
    1588:	ldr	w0, [sp, #72]
    158c:	bl	f6c <printone>
    1590:	ldr	w0, [sp, #72]
    1594:	add	w0, w0, #0x1
    1598:	str	w0, [sp, #72]
    159c:	ldr	w1, [sp, #72]
    15a0:	ldr	w0, [sp, #40]
    15a4:	cmp	w1, w0
    15a8:	b.lt	1580 <fdflags_builtin+0x12c>  // b.tstop
    15ac:	mov	w0, #0x0                   	// #0
    15b0:	b	1668 <fdflags_builtin+0x214>
    15b4:	str	wzr, [sp, #76]
    15b8:	ldr	x0, [sp, #24]
    15bc:	str	x0, [sp, #48]
    15c0:	b	1658 <fdflags_builtin+0x204>
    15c4:	ldr	x0, [sp, #48]
    15c8:	ldr	x0, [x0, #8]
    15cc:	ldr	x0, [x0]
    15d0:	add	x1, sp, #0x20
    15d4:	bl	c50 <legal_number@plt>
    15d8:	cmp	w0, #0x0
    15dc:	b.eq	15ec <fdflags_builtin+0x198>  // b.none
    15e0:	ldr	x0, [sp, #32]
    15e4:	cmp	x0, #0x0
    15e8:	b.ge	1614 <fdflags_builtin+0x1c0>  // b.tcont
    15ec:	ldr	x0, [sp, #48]
    15f0:	ldr	x0, [x0, #8]
    15f4:	ldr	x0, [x0]
    15f8:	mov	x1, x0
    15fc:	adrp	x0, 1000 <printone+0x94>
    1600:	add	x0, x0, #0x7c0
    1604:	bl	bb0 <builtin_error@plt>
    1608:	mov	w0, #0x1                   	// #1
    160c:	str	w0, [sp, #76]
    1610:	b	164c <fdflags_builtin+0x1f8>
    1614:	ldr	x0, [sp, #32]
    1618:	str	w0, [sp, #44]
    161c:	ldr	w0, [sp, #64]
    1620:	cmp	w0, #0x0
    1624:	b.eq	163c <fdflags_builtin+0x1e8>  // b.none
    1628:	ldr	w2, [sp, #68]
    162c:	ldr	x1, [sp, #56]
    1630:	ldr	w0, [sp, #44]
    1634:	bl	1250 <setone>
    1638:	b	164c <fdflags_builtin+0x1f8>
    163c:	ldr	w2, [sp, #68]
    1640:	mov	w1, #0x1                   	// #1
    1644:	ldr	w0, [sp, #44]
    1648:	bl	f6c <printone>
    164c:	ldr	x0, [sp, #48]
    1650:	ldr	x0, [x0]
    1654:	str	x0, [sp, #48]
    1658:	ldr	x0, [sp, #48]
    165c:	cmp	x0, #0x0
    1660:	b.ne	15c4 <fdflags_builtin+0x170>  // b.any
    1664:	ldr	w0, [sp, #76]
    1668:	ldp	x29, x30, [sp], #80
    166c:	ret

Disassembly of section .fini:

0000000000001670 <_fini>:
    1670:	stp	x29, x30, [sp, #-16]!
    1674:	mov	x29, sp
    1678:	ldp	x29, x30, [sp], #16
    167c:	ret
