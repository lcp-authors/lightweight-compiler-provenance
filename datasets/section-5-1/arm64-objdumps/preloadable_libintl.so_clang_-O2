
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//preloadable_libintl.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001c38 <.init>:
    1c38:	stp	x29, x30, [sp, #-16]!
    1c3c:	mov	x29, sp
    1c40:	bl	2130 <libintl_ngettext@plt+0x10>
    1c44:	ldp	x29, x30, [sp], #16
    1c48:	ret

Disassembly of section .plt:

0000000000001c50 <memcpy@plt-0x20>:
    1c50:	stp	x16, x30, [sp, #-16]!
    1c54:	adrp	x16, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    1c58:	ldr	x17, [x16, #4088]
    1c5c:	add	x16, x16, #0xff8
    1c60:	br	x17
    1c64:	nop
    1c68:	nop
    1c6c:	nop

0000000000001c70 <memcpy@plt>:
    1c70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16]
    1c78:	add	x16, x16, #0x0
    1c7c:	br	x17

0000000000001c80 <libintl_dngettext@plt>:
    1c80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #8]
    1c88:	add	x16, x16, #0x8
    1c8c:	br	x17

0000000000001c90 <pthread_rwlockattr_init@plt>:
    1c90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #16]
    1c98:	add	x16, x16, #0x10
    1c9c:	br	x17

0000000000001ca0 <getcwd@plt>:
    1ca0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #24]
    1ca8:	add	x16, x16, #0x18
    1cac:	br	x17

0000000000001cb0 <strtoul@plt>:
    1cb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #32]
    1cb8:	add	x16, x16, #0x20
    1cbc:	br	x17

0000000000001cc0 <strlen@plt>:
    1cc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #40]
    1cc8:	add	x16, x16, #0x28
    1ccc:	br	x17

0000000000001cd0 <raise@plt>:
    1cd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #48]
    1cd8:	add	x16, x16, #0x30
    1cdc:	br	x17

0000000000001ce0 <pthread_mutexattr_settype@plt>:
    1ce0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #56]
    1ce8:	add	x16, x16, #0x38
    1cec:	br	x17

0000000000001cf0 <pthread_rwlock_rdlock@plt>:
    1cf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #64]
    1cf8:	add	x16, x16, #0x40
    1cfc:	br	x17

0000000000001d00 <getegid@plt>:
    1d00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #72]
    1d08:	add	x16, x16, #0x48
    1d0c:	br	x17

0000000000001d10 <geteuid@plt>:
    1d10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #80]
    1d18:	add	x16, x16, #0x50
    1d1c:	br	x17

0000000000001d20 <pthread_rwlock_init@plt>:
    1d20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #88]
    1d28:	add	x16, x16, #0x58
    1d2c:	br	x17

0000000000001d30 <pthread_rwlockattr_setkind_np@plt>:
    1d30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #96]
    1d38:	add	x16, x16, #0x60
    1d3c:	br	x17

0000000000001d40 <fgets_unlocked@plt>:
    1d40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #104]
    1d48:	add	x16, x16, #0x68
    1d4c:	br	x17

0000000000001d50 <__cxa_finalize@plt>:
    1d50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #112]
    1d58:	add	x16, x16, #0x70
    1d5c:	br	x17

0000000000001d60 <getuid@plt>:
    1d60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #120]
    1d68:	add	x16, x16, #0x78
    1d6c:	br	x17

0000000000001d70 <putc@plt>:
    1d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #128]
    1d78:	add	x16, x16, #0x80
    1d7c:	br	x17

0000000000001d80 <qsort@plt>:
    1d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #136]
    1d88:	add	x16, x16, #0x88
    1d8c:	br	x17

0000000000001d90 <libintl_textdomain@plt>:
    1d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #144]
    1d98:	add	x16, x16, #0x90
    1d9c:	br	x17

0000000000001da0 <libintl_dcgettext@plt>:
    1da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #152]
    1da8:	add	x16, x16, #0x98
    1dac:	br	x17

0000000000001db0 <__ctype_tolower_loc@plt>:
    1db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #160]
    1db8:	add	x16, x16, #0xa0
    1dbc:	br	x17

0000000000001dc0 <tfind@plt>:
    1dc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #168]
    1dc8:	add	x16, x16, #0xa8
    1dcc:	br	x17

0000000000001dd0 <stpcpy@plt>:
    1dd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #176]
    1dd8:	add	x16, x16, #0xb0
    1ddc:	br	x17

0000000000001de0 <fclose@plt>:
    1de0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #184]
    1de8:	add	x16, x16, #0xb8
    1dec:	br	x17

0000000000001df0 <nl_langinfo@plt>:
    1df0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #192]
    1df8:	add	x16, x16, #0xc0
    1dfc:	br	x17

0000000000001e00 <fopen@plt>:
    1e00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #200]
    1e08:	add	x16, x16, #0xc8
    1e0c:	br	x17

0000000000001e10 <malloc@plt>:
    1e10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #208]
    1e18:	add	x16, x16, #0xd0
    1e1c:	br	x17

0000000000001e20 <pthread_rwlock_destroy@plt>:
    1e20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #216]
    1e28:	add	x16, x16, #0xd8
    1e2c:	br	x17

0000000000001e30 <open@plt>:
    1e30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #224]
    1e38:	add	x16, x16, #0xe0
    1e3c:	br	x17

0000000000001e40 <strncmp@plt>:
    1e40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #232]
    1e48:	add	x16, x16, #0xe8
    1e4c:	br	x17

0000000000001e50 <_nl_expand_alias@plt>:
    1e50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #240]
    1e58:	add	x16, x16, #0xf0
    1e5c:	br	x17

0000000000001e60 <libintl_dcngettext@plt>:
    1e60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #248]
    1e68:	add	x16, x16, #0xf8
    1e6c:	br	x17

0000000000001e70 <tsearch@plt>:
    1e70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #256]
    1e78:	add	x16, x16, #0x100
    1e7c:	br	x17

0000000000001e80 <libintl_bind_textdomain_codeset@plt>:
    1e80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #264]
    1e88:	add	x16, x16, #0x108
    1e8c:	br	x17

0000000000001e90 <libintl_bindtextdomain@plt>:
    1e90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #272]
    1e98:	add	x16, x16, #0x110
    1e9c:	br	x17

0000000000001ea0 <calloc@plt>:
    1ea0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #280]
    1ea8:	add	x16, x16, #0x118
    1eac:	br	x17

0000000000001eb0 <argz_stringify@plt>:
    1eb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #288]
    1eb8:	add	x16, x16, #0x120
    1ebc:	br	x17

0000000000001ec0 <strcasecmp@plt>:
    1ec0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #296]
    1ec8:	add	x16, x16, #0x128
    1ecc:	br	x17

0000000000001ed0 <realloc@plt>:
    1ed0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #304]
    1ed8:	add	x16, x16, #0x130
    1edc:	br	x17

0000000000001ee0 <strdup@plt>:
    1ee0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #312]
    1ee8:	add	x16, x16, #0x138
    1eec:	br	x17

0000000000001ef0 <pthread_mutex_init@plt>:
    1ef0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #320]
    1ef8:	add	x16, x16, #0x140
    1efc:	br	x17

0000000000001f00 <close@plt>:
    1f00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #328]
    1f08:	add	x16, x16, #0x148
    1f0c:	br	x17

0000000000001f10 <__gmon_start__@plt>:
    1f10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #336]
    1f18:	add	x16, x16, #0x150
    1f1c:	br	x17

0000000000001f20 <abort@plt>:
    1f20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #344]
    1f28:	add	x16, x16, #0x158
    1f2c:	br	x17

0000000000001f30 <pthread_rwlock_wrlock@plt>:
    1f30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #352]
    1f38:	add	x16, x16, #0x160
    1f3c:	br	x17

0000000000001f40 <dcgettext@plt>:
    1f40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #360]
    1f48:	add	x16, x16, #0x168
    1f4c:	br	x17

0000000000001f50 <argz_count@plt>:
    1f50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #368]
    1f58:	add	x16, x16, #0x170
    1f5c:	br	x17

0000000000001f60 <strcmp@plt>:
    1f60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #376]
    1f68:	add	x16, x16, #0x178
    1f6c:	br	x17

0000000000001f70 <iconv@plt>:
    1f70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #384]
    1f78:	add	x16, x16, #0x180
    1f7c:	br	x17

0000000000001f80 <__ctype_b_loc@plt>:
    1f80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #392]
    1f88:	add	x16, x16, #0x188
    1f8c:	br	x17

0000000000001f90 <mmap@plt>:
    1f90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #400]
    1f98:	add	x16, x16, #0x190
    1f9c:	br	x17

0000000000001fa0 <uselocale@plt>:
    1fa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #408]
    1fa8:	add	x16, x16, #0x198
    1fac:	br	x17

0000000000001fb0 <free@plt>:
    1fb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #416]
    1fb8:	add	x16, x16, #0x1a0
    1fbc:	br	x17

0000000000001fc0 <getgid@plt>:
    1fc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #424]
    1fc8:	add	x16, x16, #0x1a8
    1fcc:	br	x17

0000000000001fd0 <pthread_rwlock_unlock@plt>:
    1fd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #432]
    1fd8:	add	x16, x16, #0x1b0
    1fdc:	br	x17

0000000000001fe0 <libintl_dgettext@plt>:
    1fe0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #440]
    1fe8:	add	x16, x16, #0x1b8
    1fec:	br	x17

0000000000001ff0 <strchr@plt>:
    1ff0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #448]
    1ff8:	add	x16, x16, #0x1c0
    1ffc:	br	x17

0000000000002000 <fwrite@plt>:
    2000:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #456]
    2008:	add	x16, x16, #0x1c8
    200c:	br	x17

0000000000002010 <munmap@plt>:
    2010:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #464]
    2018:	add	x16, x16, #0x1d0
    201c:	br	x17

0000000000002020 <strcpy@plt>:
    2020:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2024:	ldr	x17, [x16, #472]
    2028:	add	x16, x16, #0x1d8
    202c:	br	x17

0000000000002030 <iconv_open@plt>:
    2030:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2034:	ldr	x17, [x16, #480]
    2038:	add	x16, x16, #0x1e0
    203c:	br	x17

0000000000002040 <read@plt>:
    2040:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2044:	ldr	x17, [x16, #488]
    2048:	add	x16, x16, #0x1e8
    204c:	br	x17

0000000000002050 <pthread_mutexattr_init@plt>:
    2050:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2054:	ldr	x17, [x16, #496]
    2058:	add	x16, x16, #0x1f0
    205c:	br	x17

0000000000002060 <__fxstat@plt>:
    2060:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2064:	ldr	x17, [x16, #504]
    2068:	add	x16, x16, #0x1f8
    206c:	br	x17

0000000000002070 <pthread_mutexattr_destroy@plt>:
    2070:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2074:	ldr	x17, [x16, #512]
    2078:	add	x16, x16, #0x200
    207c:	br	x17

0000000000002080 <strstr@plt>:
    2080:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2084:	ldr	x17, [x16, #520]
    2088:	add	x16, x16, #0x208
    208c:	br	x17

0000000000002090 <pthread_rwlockattr_destroy@plt>:
    2090:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2094:	ldr	x17, [x16, #528]
    2098:	add	x16, x16, #0x210
    209c:	br	x17

00000000000020a0 <__fsetlocking@plt>:
    20a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16, #536]
    20a8:	add	x16, x16, #0x218
    20ac:	br	x17

00000000000020b0 <strcspn@plt>:
    20b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #544]
    20b8:	add	x16, x16, #0x220
    20bc:	br	x17

00000000000020c0 <__errno_location@plt>:
    20c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #552]
    20c8:	add	x16, x16, #0x228
    20cc:	br	x17

00000000000020d0 <getenv@plt>:
    20d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #560]
    20d8:	add	x16, x16, #0x230
    20dc:	br	x17

00000000000020e0 <pthread_mutex_lock@plt>:
    20e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #568]
    20e8:	add	x16, x16, #0x238
    20ec:	br	x17

00000000000020f0 <pthread_mutex_unlock@plt>:
    20f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #576]
    20f8:	add	x16, x16, #0x240
    20fc:	br	x17

0000000000002100 <libintl_gettext@plt>:
    2100:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #584]
    2108:	add	x16, x16, #0x248
    210c:	br	x17

0000000000002110 <setlocale@plt>:
    2110:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #592]
    2118:	add	x16, x16, #0x250
    211c:	br	x17

0000000000002120 <libintl_ngettext@plt>:
    2120:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #600]
    2128:	add	x16, x16, #0x258
    212c:	br	x17

Disassembly of section .text:

0000000000002130 <libintl_bindtextdomain@@Base-0xd4>:
    2130:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2134:	ldr	x0, [x0, #4016]
    2138:	cbz	x0, 2140 <libintl_ngettext@plt+0x20>
    213c:	b	1f10 <__gmon_start__@plt>
    2140:	ret
    2144:	nop
    2148:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    214c:	add	x0, x0, #0x350
    2150:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    2154:	add	x1, x1, #0x350
    2158:	cmp	x1, x0
    215c:	b.eq	2174 <libintl_ngettext@plt+0x54>  // b.none
    2160:	adrp	x1, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2164:	ldr	x1, [x1, #3984]
    2168:	cbz	x1, 2174 <libintl_ngettext@plt+0x54>
    216c:	mov	x16, x1
    2170:	br	x16
    2174:	ret
    2178:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    217c:	add	x0, x0, #0x350
    2180:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    2184:	add	x1, x1, #0x350
    2188:	sub	x1, x1, x0
    218c:	lsr	x2, x1, #63
    2190:	add	x1, x2, x1, asr #3
    2194:	cmp	xzr, x1, asr #1
    2198:	asr	x1, x1, #1
    219c:	b.eq	21b4 <libintl_ngettext@plt+0x94>  // b.none
    21a0:	adrp	x2, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    21a4:	ldr	x2, [x2, #4056]
    21a8:	cbz	x2, 21b4 <libintl_ngettext@plt+0x94>
    21ac:	mov	x16, x2
    21b0:	br	x16
    21b4:	ret
    21b8:	stp	x29, x30, [sp, #-32]!
    21bc:	mov	x29, sp
    21c0:	str	x19, [sp, #16]
    21c4:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    21c8:	ldrb	w0, [x19, #848]
    21cc:	cbnz	w0, 21f4 <libintl_ngettext@plt+0xd4>
    21d0:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    21d4:	ldr	x0, [x0, #3992]
    21d8:	cbz	x0, 21e8 <libintl_ngettext@plt+0xc8>
    21dc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    21e0:	ldr	x0, [x0, #608]
    21e4:	bl	1d50 <__cxa_finalize@plt>
    21e8:	bl	2148 <libintl_ngettext@plt+0x28>
    21ec:	mov	w0, #0x1                   	// #1
    21f0:	strb	w0, [x19, #848]
    21f4:	ldr	x19, [sp, #16]
    21f8:	ldp	x29, x30, [sp], #32
    21fc:	ret
    2200:	b	2178 <libintl_ngettext@plt+0x58>

0000000000002204 <libintl_bindtextdomain@@Base>:
    2204:	sub	sp, sp, #0x20
    2208:	str	x1, [sp, #8]
    220c:	add	x1, sp, #0x8
    2210:	mov	x2, xzr
    2214:	stp	x29, x30, [sp, #16]
    2218:	add	x29, sp, #0x10
    221c:	bl	2230 <libintl_bindtextdomain@@Base+0x2c>
    2220:	ldr	x0, [sp, #8]
    2224:	ldp	x29, x30, [sp, #16]
    2228:	add	sp, sp, #0x20
    222c:	ret
    2230:	stp	x29, x30, [sp, #-96]!
    2234:	stp	x20, x19, [sp, #80]
    2238:	mov	x19, x2
    223c:	mov	x20, x1
    2240:	stp	x28, x27, [sp, #16]
    2244:	stp	x26, x25, [sp, #32]
    2248:	stp	x24, x23, [sp, #48]
    224c:	stp	x22, x21, [sp, #64]
    2250:	mov	x29, sp
    2254:	cbz	x0, 22d8 <libintl_bindtextdomain@@Base+0xd4>
    2258:	ldrb	w8, [x0]
    225c:	mov	x21, x0
    2260:	cbz	w8, 22d8 <libintl_bindtextdomain@@Base+0xd4>
    2264:	adrp	x25, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2268:	ldr	x25, [x25, #4064]
    226c:	cbz	x25, 2280 <libintl_bindtextdomain@@Base+0x7c>
    2270:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2274:	ldr	x0, [x0, #4048]
    2278:	bl	1f30 <pthread_rwlock_wrlock@plt>
    227c:	cbnz	w0, 2558 <libintl_bindtextdomain@@Base+0x354>
    2280:	adrp	x26, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2284:	ldr	x26, [x26, #4000]
    2288:	ldr	x22, [x26]
    228c:	cbz	x22, 22c0 <libintl_bindtextdomain@@Base+0xbc>
    2290:	add	x1, x22, #0x18
    2294:	mov	x0, x21
    2298:	bl	1f60 <strcmp@plt>
    229c:	cmp	w0, #0x0
    22a0:	cset	w8, eq  // eq = none
    22a4:	cset	w9, lt  // lt = tstop
    22a8:	csel	x10, xzr, x22, lt  // lt = tstop
    22ac:	csel	x24, x22, x10, eq  // eq = none
    22b0:	cmp	w9, w8
    22b4:	b.ne	22ec <libintl_bindtextdomain@@Base+0xe8>  // b.any
    22b8:	ldr	x22, [x24]
    22bc:	cbnz	x22, 2290 <libintl_bindtextdomain@@Base+0x8c>
    22c0:	cbz	x20, 2340 <libintl_bindtextdomain@@Base+0x13c>
    22c4:	ldr	x8, [x20]
    22c8:	mov	w27, wzr
    22cc:	cbnz	x8, 2350 <libintl_bindtextdomain@@Base+0x14c>
    22d0:	cbnz	x19, 2348 <libintl_bindtextdomain@@Base+0x144>
    22d4:	b	23cc <libintl_bindtextdomain@@Base+0x1c8>
    22d8:	cbz	x20, 22e0 <libintl_bindtextdomain@@Base+0xdc>
    22dc:	str	xzr, [x20]
    22e0:	cbz	x19, 253c <libintl_bindtextdomain@@Base+0x338>
    22e4:	str	xzr, [x19]
    22e8:	b	253c <libintl_bindtextdomain@@Base+0x338>
    22ec:	cbz	x24, 23c0 <libintl_bindtextdomain@@Base+0x1bc>
    22f0:	cbz	x20, 2474 <libintl_bindtextdomain@@Base+0x270>
    22f4:	ldr	x23, [x20]
    22f8:	ldr	x21, [x24, #8]
    22fc:	cbz	x23, 246c <libintl_bindtextdomain@@Base+0x268>
    2300:	mov	x0, x23
    2304:	mov	x1, x21
    2308:	bl	1f60 <strcmp@plt>
    230c:	cbz	w0, 246c <libintl_bindtextdomain@@Base+0x268>
    2310:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2314:	ldr	x22, [x22, #4040]
    2318:	mov	x0, x23
    231c:	mov	x1, x22
    2320:	bl	1f60 <strcmp@plt>
    2324:	cbz	w0, 24a8 <libintl_bindtextdomain@@Base+0x2a4>
    2328:	mov	x0, x23
    232c:	bl	1ee0 <strdup@plt>
    2330:	mov	x21, x0
    2334:	cbz	x0, 246c <libintl_bindtextdomain@@Base+0x268>
    2338:	ldr	x0, [x24, #8]
    233c:	b	24b0 <libintl_bindtextdomain@@Base+0x2ac>
    2340:	mov	w27, #0x1                   	// #1
    2344:	cbz	x19, 23cc <libintl_bindtextdomain@@Base+0x1c8>
    2348:	ldr	x8, [x19]
    234c:	cbz	x8, 23cc <libintl_bindtextdomain@@Base+0x1c8>
    2350:	mov	x0, x21
    2354:	bl	1cc0 <strlen@plt>
    2358:	mov	x23, x0
    235c:	add	x0, x0, #0x19
    2360:	bl	1e10 <malloc@plt>
    2364:	cbz	x0, 2494 <libintl_bindtextdomain@@Base+0x290>
    2368:	mov	x22, x0
    236c:	add	x2, x23, #0x1
    2370:	add	x0, x0, #0x18
    2374:	mov	x1, x21
    2378:	bl	1c70 <memcpy@plt>
    237c:	adrp	x28, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2380:	ldr	x28, [x28, #4040]
    2384:	mov	x23, x28
    2388:	tbnz	w27, #0, 23ec <libintl_bindtextdomain@@Base+0x1e8>
    238c:	ldr	x24, [x20]
    2390:	cbz	x24, 23e0 <libintl_bindtextdomain@@Base+0x1dc>
    2394:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2398:	ldr	x23, [x23, #4040]
    239c:	mov	x0, x24
    23a0:	mov	x1, x23
    23a4:	bl	1f60 <strcmp@plt>
    23a8:	cbz	w0, 23e8 <libintl_bindtextdomain@@Base+0x1e4>
    23ac:	mov	x0, x24
    23b0:	bl	1ee0 <strdup@plt>
    23b4:	mov	x23, x0
    23b8:	cbnz	x0, 23e8 <libintl_bindtextdomain@@Base+0x1e4>
    23bc:	b	248c <libintl_bindtextdomain@@Base+0x288>
    23c0:	cbnz	x20, 22c4 <libintl_bindtextdomain@@Base+0xc0>
    23c4:	mov	w27, #0x1                   	// #1
    23c8:	cbnz	x19, 2348 <libintl_bindtextdomain@@Base+0x144>
    23cc:	tbnz	w27, #0, 249c <libintl_bindtextdomain@@Base+0x298>
    23d0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    23d4:	ldr	x8, [x8, #4040]
    23d8:	str	x8, [x20]
    23dc:	b	249c <libintl_bindtextdomain@@Base+0x298>
    23e0:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    23e4:	ldr	x23, [x23, #4040]
    23e8:	str	x23, [x20]
    23ec:	str	x23, [x22, #8]
    23f0:	cbz	x19, 240c <libintl_bindtextdomain@@Base+0x208>
    23f4:	ldr	x0, [x19]
    23f8:	cbz	x0, 2404 <libintl_bindtextdomain@@Base+0x200>
    23fc:	bl	1ee0 <strdup@plt>
    2400:	cbz	x0, 247c <libintl_bindtextdomain@@Base+0x278>
    2404:	str	x0, [x19]
    2408:	b	2410 <libintl_bindtextdomain@@Base+0x20c>
    240c:	mov	x0, xzr
    2410:	ldr	x19, [x26]
    2414:	str	x0, [x22, #16]
    2418:	cbz	x19, 242c <libintl_bindtextdomain@@Base+0x228>
    241c:	add	x1, x19, #0x18
    2420:	mov	x0, x21
    2424:	bl	1f60 <strcmp@plt>
    2428:	tbz	w0, #31, 2440 <libintl_bindtextdomain@@Base+0x23c>
    242c:	str	x19, [x22]
    2430:	adrp	x20, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2434:	ldr	x20, [x20, #4000]
    2438:	str	x22, [x20]
    243c:	b	2514 <libintl_bindtextdomain@@Base+0x310>
    2440:	mov	x20, x19
    2444:	ldr	x19, [x19]
    2448:	cbz	x19, 2460 <libintl_bindtextdomain@@Base+0x25c>
    244c:	add	x1, x19, #0x18
    2450:	mov	x0, x21
    2454:	bl	1f60 <strcmp@plt>
    2458:	cmp	w0, #0x0
    245c:	b.gt	2440 <libintl_bindtextdomain@@Base+0x23c>
    2460:	str	x19, [x22]
    2464:	str	x22, [x20]
    2468:	b	2514 <libintl_bindtextdomain@@Base+0x310>
    246c:	mov	w22, wzr
    2470:	b	24c4 <libintl_bindtextdomain@@Base+0x2c0>
    2474:	mov	w22, wzr
    2478:	b	24c8 <libintl_bindtextdomain@@Base+0x2c4>
    247c:	ldr	x0, [x22, #8]
    2480:	cmp	x0, x28
    2484:	b.eq	248c <libintl_bindtextdomain@@Base+0x288>  // b.none
    2488:	bl	1fb0 <free@plt>
    248c:	mov	x0, x22
    2490:	bl	1fb0 <free@plt>
    2494:	tbnz	w27, #0, 249c <libintl_bindtextdomain@@Base+0x298>
    2498:	str	xzr, [x20]
    249c:	cbz	x19, 2528 <libintl_bindtextdomain@@Base+0x324>
    24a0:	str	xzr, [x19]
    24a4:	b	2528 <libintl_bindtextdomain@@Base+0x324>
    24a8:	mov	x0, x21
    24ac:	mov	x21, x22
    24b0:	cmp	x0, x22
    24b4:	b.eq	24bc <libintl_bindtextdomain@@Base+0x2b8>  // b.none
    24b8:	bl	1fb0 <free@plt>
    24bc:	mov	w22, #0x1                   	// #1
    24c0:	str	x21, [x24, #8]
    24c4:	str	x21, [x20]
    24c8:	cbz	x19, 2510 <libintl_bindtextdomain@@Base+0x30c>
    24cc:	ldr	x21, [x19]
    24d0:	ldr	x20, [x24, #16]
    24d4:	cbz	x21, 250c <libintl_bindtextdomain@@Base+0x308>
    24d8:	cbz	x20, 24ec <libintl_bindtextdomain@@Base+0x2e8>
    24dc:	mov	x0, x21
    24e0:	mov	x1, x20
    24e4:	bl	1f60 <strcmp@plt>
    24e8:	cbz	w0, 250c <libintl_bindtextdomain@@Base+0x308>
    24ec:	mov	x0, x21
    24f0:	bl	1ee0 <strdup@plt>
    24f4:	mov	x20, x0
    24f8:	cbz	x0, 250c <libintl_bindtextdomain@@Base+0x308>
    24fc:	ldr	x0, [x24, #16]
    2500:	bl	1fb0 <free@plt>
    2504:	mov	w22, #0x1                   	// #1
    2508:	str	x20, [x24, #16]
    250c:	str	x20, [x19]
    2510:	cbz	w22, 2528 <libintl_bindtextdomain@@Base+0x324>
    2514:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2518:	ldr	x8, [x8, #4032]
    251c:	ldr	w9, [x8]
    2520:	add	w9, w9, #0x1
    2524:	str	w9, [x8]
    2528:	cbz	x25, 253c <libintl_bindtextdomain@@Base+0x338>
    252c:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    2530:	ldr	x0, [x0, #4048]
    2534:	bl	1fd0 <pthread_rwlock_unlock@plt>
    2538:	cbnz	w0, 2558 <libintl_bindtextdomain@@Base+0x354>
    253c:	ldp	x20, x19, [sp, #80]
    2540:	ldp	x22, x21, [sp, #64]
    2544:	ldp	x24, x23, [sp, #48]
    2548:	ldp	x26, x25, [sp, #32]
    254c:	ldp	x28, x27, [sp, #16]
    2550:	ldp	x29, x30, [sp], #96
    2554:	ret
    2558:	bl	1f20 <abort@plt>

000000000000255c <libintl_bind_textdomain_codeset@@Base>:
    255c:	sub	sp, sp, #0x20
    2560:	str	x1, [sp, #8]
    2564:	add	x2, sp, #0x8
    2568:	mov	x1, xzr
    256c:	stp	x29, x30, [sp, #16]
    2570:	add	x29, sp, #0x10
    2574:	bl	2230 <libintl_bindtextdomain@@Base+0x2c>
    2578:	ldr	x0, [sp, #8]
    257c:	ldp	x29, x30, [sp, #16]
    2580:	add	sp, sp, #0x20
    2584:	ret

0000000000002588 <libintl_dcgettext@@Base>:
    2588:	mov	w5, w2
    258c:	mov	x2, xzr
    2590:	mov	w3, wzr
    2594:	mov	x4, xzr
    2598:	b	46c0 <libintl_textdomain@@Base+0x818>

000000000000259c <libintl_dgettext@@Base>:
    259c:	mov	w2, #0x5                   	// #5
    25a0:	b	1da0 <libintl_dcgettext@plt>

00000000000025a4 <libintl_gettext@@Base>:
    25a4:	mov	w2, #0x5                   	// #5
    25a8:	mov	x1, x0
    25ac:	mov	x0, xzr
    25b0:	b	1da0 <libintl_dcgettext@plt>
    25b4:	sub	sp, sp, #0x90
    25b8:	stp	x29, x30, [sp, #64]
    25bc:	stp	x26, x25, [sp, #80]
    25c0:	stp	x24, x23, [sp, #96]
    25c4:	stp	x22, x21, [sp, #112]
    25c8:	stp	x20, x19, [sp, #128]
    25cc:	adrp	x26, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    25d0:	ldr	x26, [x26, #4064]
    25d4:	mov	x19, x3
    25d8:	mov	x22, x2
    25dc:	mov	x20, x1
    25e0:	mov	x23, x0
    25e4:	add	x29, sp, #0x40
    25e8:	cbz	x26, 2668 <libintl_gettext@@Base+0xc4>
    25ec:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    25f0:	add	x0, x0, #0x268
    25f4:	bl	1cf0 <pthread_rwlock_rdlock@plt>
    25f8:	cbnz	w0, 283c <libintl_gettext@@Base+0x298>
    25fc:	mov	x0, x23
    2600:	bl	1cc0 <strlen@plt>
    2604:	add	x2, x0, #0x1
    2608:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    260c:	add	x0, x0, #0x358
    2610:	mov	x1, x23
    2614:	mov	w3, wzr
    2618:	mov	x4, x20
    261c:	mov	x5, xzr
    2620:	mov	x6, xzr
    2624:	mov	x7, xzr
    2628:	str	wzr, [sp, #16]
    262c:	stp	xzr, x22, [sp]
    2630:	bl	3fd0 <libintl_textdomain@@Base+0x128>
    2634:	mov	x21, x0
    2638:	cbz	x26, 264c <libintl_gettext@@Base+0xa8>
    263c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    2640:	add	x0, x0, #0x268
    2644:	bl	1fd0 <pthread_rwlock_unlock@plt>
    2648:	cbnz	w0, 283c <libintl_gettext@@Base+0x298>
    264c:	cbz	x21, 26a8 <libintl_gettext@@Base+0x104>
    2650:	ldr	w8, [x21, #8]
    2654:	cmp	w8, #0x0
    2658:	b.le	2794 <libintl_gettext@@Base+0x1f0>
    265c:	ldr	x8, [x21, #16]
    2660:	cbnz	x8, 27e4 <libintl_gettext@@Base+0x240>
    2664:	b	27a8 <libintl_gettext@@Base+0x204>
    2668:	mov	x0, x23
    266c:	bl	1cc0 <strlen@plt>
    2670:	add	x2, x0, #0x1
    2674:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    2678:	add	x0, x0, #0x358
    267c:	mov	x1, x23
    2680:	mov	w3, wzr
    2684:	mov	x4, x20
    2688:	mov	x5, xzr
    268c:	mov	x6, xzr
    2690:	mov	x7, xzr
    2694:	str	wzr, [sp, #16]
    2698:	stp	xzr, x22, [sp]
    269c:	bl	3fd0 <libintl_textdomain@@Base+0x128>
    26a0:	mov	x21, x0
    26a4:	cbnz	x21, 2650 <libintl_gettext@@Base+0xac>
    26a8:	mov	x0, x20
    26ac:	bl	1e50 <_nl_expand_alias@plt>
    26b0:	mov	x24, x0
    26b4:	cbz	x0, 26c8 <libintl_gettext@@Base+0x124>
    26b8:	mov	x0, x24
    26bc:	bl	1ee0 <strdup@plt>
    26c0:	mov	x20, x0
    26c4:	cbz	x0, 27e0 <libintl_gettext@@Base+0x23c>
    26c8:	sub	x1, x29, #0x8
    26cc:	sub	x2, x29, #0x10
    26d0:	sub	x3, x29, #0x18
    26d4:	add	x4, sp, #0x20
    26d8:	add	x5, sp, #0x18
    26dc:	mov	x0, x20
    26e0:	bl	44e4 <libintl_textdomain@@Base+0x63c>
    26e4:	cmn	w0, #0x1
    26e8:	b.eq	27e0 <libintl_gettext@@Base+0x23c>  // b.none
    26ec:	mov	w25, w0
    26f0:	cbz	x26, 2704 <libintl_gettext@@Base+0x160>
    26f4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    26f8:	add	x0, x0, #0x268
    26fc:	bl	1f30 <pthread_rwlock_wrlock@plt>
    2700:	cbnz	w0, 283c <libintl_gettext@@Base+0x298>
    2704:	mov	x0, x23
    2708:	bl	1cc0 <strlen@plt>
    270c:	ldp	x8, x4, [x29, #-16]
    2710:	ldur	x5, [x29, #-24]
    2714:	ldp	x7, x6, [sp, #24]
    2718:	add	x2, x0, #0x1
    271c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    2720:	mov	w9, #0x1                   	// #1
    2724:	add	x0, x0, #0x358
    2728:	mov	x1, x23
    272c:	mov	w3, w25
    2730:	str	w9, [sp, #16]
    2734:	stp	x8, x22, [sp]
    2738:	bl	3fd0 <libintl_textdomain@@Base+0x128>
    273c:	mov	x21, x0
    2740:	cbz	x26, 2754 <libintl_gettext@@Base+0x1b0>
    2744:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    2748:	add	x0, x0, #0x268
    274c:	bl	1fd0 <pthread_rwlock_unlock@plt>
    2750:	cbnz	w0, 283c <libintl_gettext@@Base+0x298>
    2754:	cbz	x21, 2784 <libintl_gettext@@Base+0x1e0>
    2758:	ldr	w8, [x21, #8]
    275c:	cmp	w8, #0x0
    2760:	b.gt	2770 <libintl_gettext@@Base+0x1cc>
    2764:	mov	x0, x21
    2768:	mov	x1, x19
    276c:	bl	2884 <libintl_gettext@@Base+0x2e0>
    2770:	ldr	x8, [x21, #16]
    2774:	cbz	x8, 2804 <libintl_gettext@@Base+0x260>
    2778:	cbz	x24, 2784 <libintl_gettext@@Base+0x1e0>
    277c:	mov	x0, x20
    2780:	bl	1fb0 <free@plt>
    2784:	tbz	w25, #0, 27e4 <libintl_gettext@@Base+0x240>
    2788:	ldr	x0, [sp, #24]
    278c:	bl	1fb0 <free@plt>
    2790:	b	27e4 <libintl_gettext@@Base+0x240>
    2794:	mov	x0, x21
    2798:	mov	x1, x19
    279c:	bl	2884 <libintl_gettext@@Base+0x2e0>
    27a0:	ldr	x8, [x21, #16]
    27a4:	cbnz	x8, 27e4 <libintl_gettext@@Base+0x240>
    27a8:	ldr	x0, [x21, #32]
    27ac:	cbz	x0, 27e4 <libintl_gettext@@Base+0x240>
    27b0:	add	x20, x21, #0x28
    27b4:	ldr	w8, [x0, #8]
    27b8:	cmp	w8, #0x0
    27bc:	b.gt	27cc <libintl_gettext@@Base+0x228>
    27c0:	mov	x1, x19
    27c4:	bl	2884 <libintl_gettext@@Base+0x2e0>
    27c8:	ldur	x0, [x20, #-8]
    27cc:	ldr	x8, [x0, #16]
    27d0:	cbnz	x8, 27e4 <libintl_gettext@@Base+0x240>
    27d4:	ldr	x0, [x20], #8
    27d8:	cbnz	x0, 27b4 <libintl_gettext@@Base+0x210>
    27dc:	b	27e4 <libintl_gettext@@Base+0x240>
    27e0:	mov	x21, xzr
    27e4:	mov	x0, x21
    27e8:	ldp	x20, x19, [sp, #128]
    27ec:	ldp	x22, x21, [sp, #112]
    27f0:	ldp	x24, x23, [sp, #96]
    27f4:	ldp	x26, x25, [sp, #80]
    27f8:	ldp	x29, x30, [sp, #64]
    27fc:	add	sp, sp, #0x90
    2800:	ret
    2804:	ldr	x0, [x21, #32]
    2808:	cbz	x0, 2778 <libintl_gettext@@Base+0x1d4>
    280c:	add	x22, x21, #0x28
    2810:	ldr	w8, [x0, #8]
    2814:	cmp	w8, #0x0
    2818:	b.gt	2828 <libintl_gettext@@Base+0x284>
    281c:	mov	x1, x19
    2820:	bl	2884 <libintl_gettext@@Base+0x2e0>
    2824:	ldur	x0, [x22, #-8]
    2828:	ldr	x8, [x0, #16]
    282c:	cbnz	x8, 2778 <libintl_gettext@@Base+0x1d4>
    2830:	ldr	x0, [x22], #8
    2834:	cbnz	x0, 2810 <libintl_gettext@@Base+0x26c>
    2838:	b	2778 <libintl_gettext@@Base+0x1d4>
    283c:	bl	1f20 <abort@plt>
    2840:	ldrb	w9, [x0]
    2844:	cbz	w9, 287c <libintl_gettext@@Base+0x2d8>
    2848:	mov	x8, x0
    284c:	mov	x0, xzr
    2850:	add	x8, x8, #0x1
    2854:	lsl	x10, x0, #4
    2858:	add	x10, x10, w9, uxtb
    285c:	ldrb	w9, [x8], #1
    2860:	and	x11, x10, #0xf0000000
    2864:	and	x12, x10, #0xffffffff0fffffff
    2868:	eor	x11, x12, x11, lsr #24
    286c:	tst	x10, #0xf0000000
    2870:	csel	x0, x10, x11, eq  // eq = none
    2874:	cbnz	w9, 2854 <libintl_gettext@@Base+0x2b0>
    2878:	ret
    287c:	mov	x0, xzr
    2880:	ret
    2884:	stp	x29, x30, [sp, #-96]!
    2888:	stp	x28, x27, [sp, #16]
    288c:	stp	x26, x25, [sp, #32]
    2890:	stp	x24, x23, [sp, #48]
    2894:	stp	x22, x21, [sp, #64]
    2898:	stp	x20, x19, [sp, #80]
    289c:	mov	x29, sp
    28a0:	sub	sp, sp, #0x130
    28a4:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    28a8:	ldr	x24, [x24, #4064]
    28ac:	mov	x20, x1
    28b0:	mov	x19, x0
    28b4:	cbz	x24, 28c8 <libintl_gettext@@Base+0x324>
    28b8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    28bc:	add	x0, x0, #0x2a0
    28c0:	bl	20e0 <pthread_mutex_lock@plt>
    28c4:	cbnz	w0, 38b0 <libintl_gettext@@Base+0x130c>
    28c8:	ldr	w8, [x19, #8]
    28cc:	cbz	w8, 28d8 <libintl_gettext@@Base+0x334>
    28d0:	cbnz	x24, 3880 <libintl_gettext@@Base+0x12dc>
    28d4:	b	3890 <libintl_gettext@@Base+0x12ec>
    28d8:	ldr	x0, [x19]
    28dc:	mov	w8, #0xffffffff            	// #-1
    28e0:	str	w8, [x19, #8]
    28e4:	str	xzr, [x19, #16]
    28e8:	cbz	x0, 3874 <libintl_gettext@@Base+0x12d0>
    28ec:	mov	w1, wzr
    28f0:	bl	1e30 <open@plt>
    28f4:	cmn	w0, #0x1
    28f8:	b.eq	3874 <libintl_gettext@@Base+0x12d0>  // b.none
    28fc:	mov	w23, w0
    2900:	sub	x2, x29, #0x88
    2904:	mov	w0, wzr
    2908:	mov	w1, w23
    290c:	bl	2060 <__fxstat@plt>
    2910:	cbnz	w0, 3718 <libintl_gettext@@Base+0x1174>
    2914:	ldur	x21, [x29, #-88]
    2918:	cmp	x21, #0x30
    291c:	b.cc	3718 <libintl_gettext@@Base+0x1174>  // b.lo, b.ul, b.last
    2920:	mov	w2, #0x1                   	// #1
    2924:	mov	w3, #0x2                   	// #2
    2928:	mov	x0, xzr
    292c:	mov	x1, x21
    2930:	mov	w4, w23
    2934:	mov	x5, xzr
    2938:	mov	w25, #0x1                   	// #1
    293c:	bl	1f90 <mmap@plt>
    2940:	cmn	x0, #0x1
    2944:	b.eq	36b8 <libintl_gettext@@Base+0x1114>  // b.none
    2948:	mov	x22, x0
    294c:	mov	w0, w23
    2950:	bl	1f00 <close@plt>
    2954:	ldr	w8, [x22]
    2958:	mov	w9, #0x12de                	// #4830
    295c:	movk	w9, #0x9504, lsl #16
    2960:	cmp	w8, w9
    2964:	b.eq	2978 <libintl_gettext@@Base+0x3d4>  // b.none
    2968:	mov	w9, #0x495                 	// #1173
    296c:	movk	w9, #0xde12, lsl #16
    2970:	cmp	w8, w9
    2974:	b.ne	2a24 <libintl_gettext@@Base+0x480>  // b.any
    2978:	mov	w0, #0xc8                  	// #200
    297c:	bl	1e10 <malloc@plt>
    2980:	cbz	x0, 2a24 <libintl_gettext@@Base+0x480>
    2984:	str	x0, [x19, #16]
    2988:	str	x22, [x0]
    298c:	str	w25, [x0, #8]
    2990:	str	x21, [x0, #16]
    2994:	ldr	w1, [x22]
    2998:	mov	w8, #0x12de                	// #4830
    299c:	movk	w8, #0x9504, lsl #16
    29a0:	stur	w25, [x29, #-172]
    29a4:	cmp	w1, w8
    29a8:	cset	w9, ne  // ne = any
    29ac:	stur	x21, [x29, #-192]
    29b0:	stur	w9, [x29, #-184]
    29b4:	str	w9, [x0, #24]
    29b8:	str	xzr, [x0, #32]
    29bc:	mov	x10, x22
    29c0:	ldr	w9, [x10, #4]!
    29c4:	mov	x23, x0
    29c8:	stur	x10, [x29, #-200]
    29cc:	rev	w10, w9
    29d0:	csel	w9, w10, w9, ne  // ne = any
    29d4:	asr	w10, w9, #16
    29d8:	cmp	w10, #0x1
    29dc:	b.hi	3840 <libintl_gettext@@Base+0x129c>  // b.pmore
    29e0:	ldr	w10, [x22, #8]
    29e4:	cmp	w1, w8
    29e8:	b.eq	2a44 <libintl_gettext@@Base+0x4a0>  // b.none
    29ec:	rev	w8, w10
    29f0:	mov	x13, x23
    29f4:	str	w8, [x13, #40]!
    29f8:	ldr	w8, [x22, #12]
    29fc:	rev	w8, w8
    2a00:	add	x8, x22, x8
    2a04:	str	x8, [x13, #8]
    2a08:	ldr	w8, [x22, #16]
    2a0c:	rev	w8, w8
    2a10:	add	x8, x22, x8
    2a14:	str	x8, [x13, #16]
    2a18:	ldr	w8, [x22, #20]
    2a1c:	rev	w8, w8
    2a20:	b	2a68 <libintl_gettext@@Base+0x4c4>
    2a24:	cbz	w25, 2a38 <libintl_gettext@@Base+0x494>
    2a28:	mov	x0, x22
    2a2c:	mov	x1, x21
    2a30:	bl	2010 <munmap@plt>
    2a34:	b	3874 <libintl_gettext@@Base+0x12d0>
    2a38:	mov	x0, x22
    2a3c:	bl	1fb0 <free@plt>
    2a40:	b	3874 <libintl_gettext@@Base+0x12d0>
    2a44:	mov	x13, x23
    2a48:	str	w10, [x13, #40]!
    2a4c:	ldr	w8, [x22, #12]
    2a50:	add	x8, x22, x8
    2a54:	str	x8, [x13, #8]
    2a58:	ldr	w8, [x22, #16]
    2a5c:	add	x8, x22, x8
    2a60:	str	x8, [x13, #16]
    2a64:	ldr	w8, [x22, #20]
    2a68:	ldur	w14, [x29, #-184]
    2a6c:	cmp	w8, #0x3
    2a70:	str	w8, [x23, #88]
    2a74:	b.cc	2a98 <libintl_gettext@@Base+0x4f4>  // b.lo, b.ul, b.last
    2a78:	ldr	w10, [x22, #24]
    2a7c:	mov	w11, #0x12de                	// #4830
    2a80:	movk	w11, #0x9504, lsl #16
    2a84:	cmp	w1, w11
    2a88:	rev	w12, w10
    2a8c:	csel	w10, w12, w10, ne  // ne = any
    2a90:	add	x10, x22, x10
    2a94:	b	2a9c <libintl_gettext@@Base+0x4f8>
    2a98:	mov	x10, xzr
    2a9c:	tst	w9, #0xffff
    2aa0:	str	x10, [x23, #96]
    2aa4:	str	w14, [x23, #104]
    2aa8:	b.eq	3668 <libintl_gettext@@Base+0x10c4>  // b.none
    2aac:	stur	x13, [x29, #-208]
    2ab0:	cbz	x10, 3840 <libintl_gettext@@Base+0x129c>
    2ab4:	ldr	w9, [x22, #36]
    2ab8:	mov	w11, #0x12de                	// #4830
    2abc:	movk	w11, #0x9504, lsl #16
    2ac0:	cmp	w1, w11
    2ac4:	rev	w10, w9
    2ac8:	csel	w9, w10, w9, ne  // ne = any
    2acc:	cbz	w9, 3668 <libintl_gettext@@Base+0x10c4>
    2ad0:	ldr	w10, [x22, #28]
    2ad4:	cmp	w1, w11
    2ad8:	b.eq	2aec <libintl_gettext@@Base+0x548>  // b.none
    2adc:	ldr	w11, [x22, #32]
    2ae0:	rev	w10, w10
    2ae4:	rev	w11, w11
    2ae8:	b	2af0 <libintl_gettext@@Base+0x54c>
    2aec:	ldr	w11, [x22, #32]
    2af0:	mov	w13, w10
    2af4:	stur	x13, [x29, #-168]
    2af8:	lsl	x13, x13, #3
    2afc:	add	x13, x13, #0xf
    2b00:	mov	x12, sp
    2b04:	and	x13, x13, #0xffffffff0
    2b08:	sub	x12, x12, x13
    2b0c:	stur	x12, [x29, #-160]
    2b10:	mov	sp, x12
    2b14:	stur	w1, [x29, #-152]
    2b18:	cbz	w10, 3054 <libintl_gettext@@Base+0xab0>
    2b1c:	ldp	x26, x21, [x29, #-168]
    2b20:	mov	x14, #0x1001                	// #4097
    2b24:	add	x10, x22, w11, uxtw
    2b28:	mov	w11, #0x12de                	// #4830
    2b2c:	adrp	x12, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    2b30:	movk	x14, #0x2082, lsl #16
    2b34:	adrp	x15, 6000 <libintl_ngettext@@Base+0x700>
    2b38:	adrp	x16, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    2b3c:	adrp	x5, 6000 <libintl_ngettext@@Base+0x700>
    2b40:	adrp	x17, 6000 <libintl_ngettext@@Base+0x700>
    2b44:	adrp	x18, 6000 <libintl_ngettext@@Base+0x700>
    2b48:	adrp	x0, 6000 <libintl_ngettext@@Base+0x700>
    2b4c:	adrp	x2, 6000 <libintl_ngettext@@Base+0x700>
    2b50:	adrp	x3, 6000 <libintl_ngettext@@Base+0x700>
    2b54:	adrp	x7, 6000 <libintl_ngettext@@Base+0x700>
    2b58:	adrp	x4, 6000 <libintl_ngettext@@Base+0x700>
    2b5c:	adrp	x6, 6000 <libintl_ngettext@@Base+0x700>
    2b60:	movk	w11, #0x9504, lsl #16
    2b64:	add	x12, x12, #0x316
    2b68:	mov	w13, #0x1                   	// #1
    2b6c:	movk	x14, #0x1, lsl #32
    2b70:	add	x15, x15, #0xb70
    2b74:	add	x16, x16, #0x2be
    2b78:	add	x5, x5, #0xf3c
    2b7c:	add	x17, x17, #0xf45
    2b80:	add	x18, x18, #0xf48
    2b84:	add	x0, x0, #0xefa
    2b88:	add	x2, x2, #0xd24
    2b8c:	add	x3, x3, #0xd2c
    2b90:	add	x7, x7, #0xdf2
    2b94:	add	x4, x4, #0xbd2
    2b98:	add	x6, x6, #0xb90
    2b9c:	ldr	w25, [x10, #4]
    2ba0:	cmp	w1, w11
    2ba4:	b.eq	2bb8 <libintl_gettext@@Base+0x614>  // b.none
    2ba8:	ldr	w27, [x10]
    2bac:	rev	w25, w25
    2bb0:	rev	w27, w27
    2bb4:	b	2bbc <libintl_gettext@@Base+0x618>
    2bb8:	ldr	w27, [x10]
    2bbc:	cbz	w27, 3840 <libintl_gettext@@Base+0x129c>
    2bc0:	add	x28, x22, w25, uxtw
    2bc4:	sub	w25, w27, #0x1
    2bc8:	ldrb	w25, [x28, w25, uxtw]
    2bcc:	cbnz	w25, 3840 <libintl_gettext@@Base+0x129c>
    2bd0:	ldrb	w25, [x28]
    2bd4:	cmp	w25, #0x49
    2bd8:	b.eq	2c70 <libintl_gettext@@Base+0x6cc>  // b.none
    2bdc:	cmp	w25, #0x50
    2be0:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2be4:	ldrb	w25, [x28, #1]
    2be8:	cmp	w25, #0x52
    2bec:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2bf0:	ldrb	w25, [x28, #2]
    2bf4:	cmp	w25, #0x49
    2bf8:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2bfc:	ldrb	w25, [x28, #3]
    2c00:	sub	w30, w25, #0x58
    2c04:	cmp	w30, #0x20
    2c08:	b.hi	2c78 <libintl_gettext@@Base+0x6d4>  // b.pmore
    2c0c:	lsl	x25, x13, x30
    2c10:	tst	x25, x14
    2c14:	b.eq	2c78 <libintl_gettext@@Base+0x6d4>  // b.none
    2c18:	ldrb	w25, [x28, #4]
    2c1c:	sub	w25, w25, #0x31
    2c20:	cmp	w25, #0x1f
    2c24:	b.hi	2c78 <libintl_gettext@@Base+0x6d4>  // b.pmore
    2c28:	adr	x27, 2c38 <libintl_gettext@@Base+0x694>
    2c2c:	ldrb	w1, [x15, x25]
    2c30:	add	x27, x27, x1, lsl #2
    2c34:	br	x27
    2c38:	ldrb	w1, [x28, #5]
    2c3c:	cmp	w1, #0x36
    2c40:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2c44:	ldrb	w1, [x28, #6]
    2c48:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2c4c:	cmp	w30, #0x20
    2c50:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2c54:	adrp	x27, 6000 <libintl_ngettext@@Base+0x700>
    2c58:	add	x27, x27, #0xeb8
    2c5c:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2c60:	ldrh	w25, [x27, x30, lsl #1]
    2c64:	add	x1, x1, x25, lsl #2
    2c68:	mov	x28, x16
    2c6c:	br	x1
    2c70:	ldrb	w1, [x28, #1]
    2c74:	cbz	w1, 2c94 <libintl_gettext@@Base+0x6f0>
    2c78:	mov	x28, xzr
    2c7c:	ldur	w1, [x29, #-152]
    2c80:	str	x28, [x21], #8
    2c84:	subs	x26, x26, #0x1
    2c88:	add	x10, x10, #0x8
    2c8c:	b.ne	2b9c <libintl_gettext@@Base+0x5f8>  // b.any
    2c90:	b	3054 <libintl_gettext@@Base+0xab0>
    2c94:	mov	x28, x12
    2c98:	b	2c7c <libintl_gettext@@Base+0x6d8>
    2c9c:	ldrb	w1, [x28, #5]
    2ca0:	cmp	w1, #0x32
    2ca4:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2ca8:	ldrb	w1, [x28, #6]
    2cac:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2cb0:	cmp	w30, #0x20
    2cb4:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2cb8:	adrp	x27, 6000 <libintl_ngettext@@Base+0x700>
    2cbc:	add	x27, x27, #0xe76
    2cc0:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2cc4:	ldrh	w25, [x27, x30, lsl #1]
    2cc8:	add	x1, x1, x25, lsl #2
    2ccc:	mov	x28, x16
    2cd0:	br	x1
    2cd4:	ldrb	w1, [x28, #5]
    2cd8:	cmp	w1, #0x34
    2cdc:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2ce0:	ldrb	w1, [x28, #6]
    2ce4:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2ce8:	cmp	w30, #0x20
    2cec:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2cf0:	adrp	x27, 6000 <libintl_ngettext@@Base+0x700>
    2cf4:	add	x27, x27, #0xe34
    2cf8:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2cfc:	ldrh	w25, [x27, x30, lsl #1]
    2d00:	add	x1, x1, x25, lsl #2
    2d04:	mov	x28, x5
    2d08:	br	x1
    2d0c:	ldrb	w1, [x28, #5]
    2d10:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2d14:	cmp	w30, #0x20
    2d18:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2d1c:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2d20:	ldrh	w25, [x0, x30, lsl #1]
    2d24:	add	x1, x1, x25, lsl #2
    2d28:	mov	x28, x16
    2d2c:	br	x1
    2d30:	adrp	x28, 6000 <libintl_ngettext@@Base+0x700>
    2d34:	add	x28, x28, #0xf86
    2d38:	b	2c7c <libintl_gettext@@Base+0x6d8>
    2d3c:	ldrb	w1, [x28, #5]
    2d40:	cmp	w1, #0x41
    2d44:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2d48:	ldrb	w1, [x28, #6]
    2d4c:	cmp	w1, #0x53
    2d50:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2d54:	ldrb	w1, [x28, #7]
    2d58:	cmp	w1, #0x54
    2d5c:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2d60:	ldrb	w1, [x28, #8]
    2d64:	sub	w25, w1, #0x31
    2d68:	cmp	w25, #0x7
    2d6c:	b.hi	2c78 <libintl_gettext@@Base+0x6d4>  // b.pmore
    2d70:	adrp	x17, 6000 <libintl_ngettext@@Base+0x700>
    2d74:	add	x17, x17, #0xc14
    2d78:	adr	x1, 2c78 <libintl_gettext@@Base+0x6d4>
    2d7c:	ldrb	w27, [x17, x25]
    2d80:	add	x1, x1, x27, lsl #2
    2d84:	adrp	x17, 6000 <libintl_ngettext@@Base+0x700>
    2d88:	add	x17, x17, #0xf45
    2d8c:	br	x1
    2d90:	ldrb	w1, [x28, #9]
    2d94:	cmp	w1, #0x36
    2d98:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2d9c:	ldrb	w1, [x28, #10]
    2da0:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2da4:	cmp	w30, #0x20
    2da8:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2dac:	adrp	x27, 6000 <libintl_ngettext@@Base+0x700>
    2db0:	add	x27, x27, #0xca0
    2db4:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2db8:	ldrh	w25, [x27, x30, lsl #1]
    2dbc:	add	x1, x1, x25, lsl #2
    2dc0:	mov	x28, x5
    2dc4:	br	x1
    2dc8:	ldrb	w1, [x28, #5]
    2dcc:	cmp	w1, #0x45
    2dd0:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2dd4:	ldrb	w1, [x28, #6]
    2dd8:	cmp	w1, #0x41
    2ddc:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2de0:	ldrb	w1, [x28, #7]
    2de4:	cmp	w1, #0x53
    2de8:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2dec:	ldrb	w1, [x28, #8]
    2df0:	cmp	w1, #0x54
    2df4:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2df8:	ldrb	w1, [x28, #9]
    2dfc:	sub	w25, w1, #0x31
    2e00:	cmp	w25, #0x7
    2e04:	b.hi	2c78 <libintl_gettext@@Base+0x6d4>  // b.pmore
    2e08:	adr	x1, 2c78 <libintl_gettext@@Base+0x6d4>
    2e0c:	ldrb	w27, [x2, x25]
    2e10:	add	x1, x1, x27, lsl #2
    2e14:	br	x1
    2e18:	ldrb	w1, [x28, #10]
    2e1c:	cmp	w1, #0x36
    2e20:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2e24:	ldrb	w1, [x28, #11]
    2e28:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2e2c:	cmp	w30, #0x20
    2e30:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2e34:	adrp	x27, 6000 <libintl_ngettext@@Base+0x700>
    2e38:	add	x27, x27, #0xdb0
    2e3c:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2e40:	ldrh	w25, [x27, x30, lsl #1]
    2e44:	add	x1, x1, x25, lsl #2
    2e48:	mov	x28, x16
    2e4c:	br	x1
    2e50:	ldrb	w1, [x28, #5]
    2e54:	cmp	w1, #0x41
    2e58:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2e5c:	ldrb	w1, [x28, #6]
    2e60:	cmp	w1, #0x58
    2e64:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2e68:	ldrb	w1, [x28, #7]
    2e6c:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2e70:	cmp	w30, #0x20
    2e74:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2e78:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2e7c:	ldrh	w25, [x4, x30, lsl #1]
    2e80:	add	x1, x1, x25, lsl #2
    2e84:	mov	x28, x5
    2e88:	br	x1
    2e8c:	ldrb	w1, [x28, #5]
    2e90:	cmp	w1, #0x54
    2e94:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2e98:	ldrb	w1, [x28, #6]
    2e9c:	cmp	w1, #0x52
    2ea0:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2ea4:	ldrb	w1, [x28, #7]
    2ea8:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2eac:	cmp	w30, #0x20
    2eb0:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2eb4:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2eb8:	ldrh	w25, [x6, x30, lsl #1]
    2ebc:	add	x1, x1, x25, lsl #2
    2ec0:	mov	x28, x5
    2ec4:	br	x1
    2ec8:	adrp	x28, 6000 <libintl_ngettext@@Base+0x700>
    2ecc:	add	x28, x28, #0xf4b
    2ed0:	b	2c7c <libintl_gettext@@Base+0x6d8>
    2ed4:	ldrb	w1, [x28, #9]
    2ed8:	cmp	w1, #0x32
    2edc:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2ee0:	ldrb	w1, [x28, #10]
    2ee4:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2ee8:	cmp	w30, #0x20
    2eec:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2ef0:	adrp	x27, 6000 <libintl_ngettext@@Base+0x700>
    2ef4:	add	x27, x27, #0xc5e
    2ef8:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2efc:	ldrh	w25, [x27, x30, lsl #1]
    2f00:	add	x1, x1, x25, lsl #2
    2f04:	mov	x28, x5
    2f08:	br	x1
    2f0c:	ldrb	w1, [x28, #9]
    2f10:	cmp	w1, #0x34
    2f14:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2f18:	ldrb	w1, [x28, #10]
    2f1c:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2f20:	cmp	w30, #0x20
    2f24:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2f28:	adrp	x27, 6000 <libintl_ngettext@@Base+0x700>
    2f2c:	add	x27, x27, #0xc1c
    2f30:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2f34:	ldrh	w25, [x27, x30, lsl #1]
    2f38:	add	x1, x1, x25, lsl #2
    2f3c:	mov	x28, x5
    2f40:	br	x1
    2f44:	ldrb	w1, [x28, #9]
    2f48:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2f4c:	cmp	w30, #0x20
    2f50:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2f54:	adrp	x27, 6000 <libintl_ngettext@@Base+0x700>
    2f58:	add	x27, x27, #0xce2
    2f5c:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2f60:	ldrh	w25, [x27, x30, lsl #1]
    2f64:	add	x1, x1, x25, lsl #2
    2f68:	mov	x28, x16
    2f6c:	br	x1
    2f70:	ldrb	w1, [x28, #10]
    2f74:	cmp	w1, #0x32
    2f78:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2f7c:	ldrb	w1, [x28, #11]
    2f80:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2f84:	cmp	w30, #0x20
    2f88:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2f8c:	adrp	x27, 6000 <libintl_ngettext@@Base+0x700>
    2f90:	add	x27, x27, #0xd6e
    2f94:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2f98:	ldrh	w25, [x27, x30, lsl #1]
    2f9c:	add	x1, x1, x25, lsl #2
    2fa0:	mov	x28, x16
    2fa4:	br	x1
    2fa8:	ldrb	w1, [x28, #10]
    2fac:	cmp	w1, #0x34
    2fb0:	b.ne	2c78 <libintl_gettext@@Base+0x6d4>  // b.any
    2fb4:	ldrb	w1, [x28, #11]
    2fb8:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    2fbc:	cmp	w30, #0x20
    2fc0:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    2fc4:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    2fc8:	ldrh	w25, [x3, x30, lsl #1]
    2fcc:	add	x1, x1, x25, lsl #2
    2fd0:	mov	x28, x5
    2fd4:	br	x1
    2fd8:	adrp	x28, 6000 <libintl_ngettext@@Base+0x700>
    2fdc:	add	x28, x28, #0xf3f
    2fe0:	b	2c7c <libintl_gettext@@Base+0x6d8>
    2fe4:	adrp	x28, 6000 <libintl_ngettext@@Base+0x700>
    2fe8:	add	x28, x28, #0xf42
    2fec:	b	2c7c <libintl_gettext@@Base+0x6d8>
    2ff0:	mov	x28, x17
    2ff4:	b	2c7c <libintl_gettext@@Base+0x6d8>
    2ff8:	mov	x28, x18
    2ffc:	b	2c7c <libintl_gettext@@Base+0x6d8>
    3000:	ldrb	w1, [x28, #10]
    3004:	cbnz	w1, 2c78 <libintl_gettext@@Base+0x6d4>
    3008:	cmp	w30, #0x20
    300c:	b.hi	38b0 <libintl_gettext@@Base+0x130c>  // b.pmore
    3010:	adr	x1, 2c7c <libintl_gettext@@Base+0x6d8>
    3014:	ldrh	w25, [x7, x30, lsl #1]
    3018:	add	x1, x1, x25, lsl #2
    301c:	mov	x28, x16
    3020:	br	x1
    3024:	adrp	x28, 6000 <libintl_ngettext@@Base+0x700>
    3028:	add	x28, x28, #0xf40
    302c:	b	2c7c <libintl_gettext@@Base+0x6d8>
    3030:	adrp	x28, 6000 <libintl_ngettext@@Base+0x700>
    3034:	add	x28, x28, #0xf43
    3038:	b	2c7c <libintl_gettext@@Base+0x6d8>
    303c:	adrp	x28, 6000 <libintl_ngettext@@Base+0x700>
    3040:	add	x28, x28, #0xf46
    3044:	b	2c7c <libintl_gettext@@Base+0x6d8>
    3048:	adrp	x28, 6000 <libintl_ngettext@@Base+0x700>
    304c:	add	x28, x28, #0xf49
    3050:	b	2c7c <libintl_gettext@@Base+0x6d8>
    3054:	ldr	w10, [x22, #40]
    3058:	mov	w11, #0x12de                	// #4830
    305c:	movk	w11, #0x9504, lsl #16
    3060:	cmp	w1, w11
    3064:	b.eq	3078 <libintl_gettext@@Base+0xad4>  // b.none
    3068:	ldr	w11, [x22, #44]
    306c:	rev	w10, w10
    3070:	rev	w11, w11
    3074:	b	307c <libintl_gettext@@Base+0xad8>
    3078:	ldr	w11, [x22, #44]
    307c:	mov	w8, w8
    3080:	lsl	x12, x8, #2
    3084:	mov	w8, w9
    3088:	mov	w13, #0x12de                	// #4830
    308c:	mov	x27, xzr
    3090:	add	x10, x22, w10, uxtw
    3094:	add	x11, x22, w11, uxtw
    3098:	stur	x8, [x29, #-216]
    309c:	movk	w13, #0x9504, lsl #16
    30a0:	sub	x8, x29, #0x8
    30a4:	stur	wzr, [x29, #-236]
    30a8:	stur	x12, [x8, #-256]
    30ac:	stur	x12, [x29, #-248]
    30b0:	stp	x11, x10, [x29, #-232]
    30b4:	ldr	w8, [x10, x27, lsl #2]
    30b8:	cmp	w1, w13
    30bc:	b.eq	30e0 <libintl_gettext@@Base+0xb3c>  // b.none
    30c0:	rev	w8, w8
    30c4:	add	x8, x22, x8
    30c8:	ldr	w9, [x8]
    30cc:	ldr	w10, [x8, #8]
    30d0:	add	x8, x8, #0x4
    30d4:	rev	w9, w9
    30d8:	rev	w10, w10
    30dc:	b	30f0 <libintl_gettext@@Base+0xb4c>
    30e0:	add	x8, x22, x8
    30e4:	ldr	w9, [x8]
    30e8:	ldr	w10, [x8, #8]
    30ec:	add	x8, x8, #0x4
    30f0:	cmn	w10, #0x1
    30f4:	add	x26, x22, w9, uxtw
    30f8:	b.eq	3178 <libintl_gettext@@Base+0xbd4>  // b.none
    30fc:	mov	x9, xzr
    3100:	add	x25, x8, #0x4
    3104:	mov	w28, #0x1                   	// #1
    3108:	ldur	w8, [x25, #-4]
    310c:	cmp	w1, w13
    3110:	b.eq	3124 <libintl_gettext@@Base+0xb80>  // b.none
    3114:	ldr	w10, [x25]
    3118:	rev	w11, w8
    311c:	rev	w10, w10
    3120:	b	312c <libintl_gettext@@Base+0xb88>
    3124:	ldr	w10, [x25]
    3128:	mov	w11, w8
    312c:	mov	w11, w11
    3130:	cmn	w10, #0x1
    3134:	add	x21, x9, x11
    3138:	b.eq	3184 <libintl_gettext@@Base+0xbe0>  // b.none
    313c:	ldur	x8, [x29, #-168]
    3140:	cmp	w10, w8
    3144:	b.cs	3840 <libintl_gettext@@Base+0x129c>  // b.hs, b.nlast
    3148:	ldur	x8, [x29, #-160]
    314c:	add	x26, x26, x11
    3150:	ldr	x0, [x8, w10, uxtw #3]
    3154:	cmp	x0, #0x0
    3158:	csel	w28, wzr, w28, eq  // eq = none
    315c:	bl	1cc0 <strlen@plt>
    3160:	ldur	w1, [x29, #-152]
    3164:	mov	w13, #0x12de                	// #4830
    3168:	movk	w13, #0x9504, lsl #16
    316c:	add	x9, x0, x21
    3170:	add	x25, x25, #0x8
    3174:	b	3108 <libintl_gettext@@Base+0xb64>
    3178:	ldr	w8, [x8]
    317c:	mov	x21, xzr
    3180:	mov	w28, #0x1                   	// #1
    3184:	rev	w9, w8
    3188:	cmp	w1, w13
    318c:	csel	w8, w9, w8, ne  // ne = any
    3190:	cbz	w8, 3840 <libintl_gettext@@Base+0x129c>
    3194:	sub	w8, w8, #0x1
    3198:	ldrb	w8, [x26, w8, uxtw]
    319c:	cbnz	w8, 3840 <libintl_gettext@@Base+0x129c>
    31a0:	cbz	w28, 31d8 <libintl_gettext@@Base+0xc34>
    31a4:	ldur	x8, [x29, #-232]
    31a8:	cmp	w1, w13
    31ac:	stur	x27, [x29, #-256]
    31b0:	ldr	w8, [x8, x27, lsl #2]
    31b4:	b.eq	31e0 <libintl_gettext@@Base+0xc3c>  // b.none
    31b8:	rev	w8, w8
    31bc:	add	x8, x22, x8
    31c0:	ldr	w9, [x8]
    31c4:	ldr	w10, [x8, #8]
    31c8:	add	x8, x8, #0x4
    31cc:	rev	w9, w9
    31d0:	rev	w10, w10
    31d4:	b	31f0 <libintl_gettext@@Base+0xc4c>
    31d8:	ldur	x10, [x29, #-224]
    31dc:	b	32c4 <libintl_gettext@@Base+0xd20>
    31e0:	add	x8, x22, x8
    31e4:	ldr	w9, [x8]
    31e8:	ldr	w10, [x8, #8]
    31ec:	add	x8, x8, #0x4
    31f0:	cmn	w10, #0x1
    31f4:	add	x26, x22, w9, uxtw
    31f8:	b.eq	3274 <libintl_gettext@@Base+0xcd0>  // b.none
    31fc:	mov	x9, xzr
    3200:	add	x25, x8, #0x4
    3204:	ldur	w8, [x25, #-4]
    3208:	cmp	w1, w13
    320c:	b.eq	3220 <libintl_gettext@@Base+0xc7c>  // b.none
    3210:	ldr	w10, [x25]
    3214:	rev	w11, w8
    3218:	rev	w10, w10
    321c:	b	3228 <libintl_gettext@@Base+0xc84>
    3220:	ldr	w10, [x25]
    3224:	mov	w11, w8
    3228:	mov	w11, w11
    322c:	cmn	w10, #0x1
    3230:	add	x27, x9, x11
    3234:	b.eq	3280 <libintl_gettext@@Base+0xcdc>  // b.none
    3238:	ldur	x8, [x29, #-168]
    323c:	cmp	w10, w8
    3240:	b.cs	3840 <libintl_gettext@@Base+0x129c>  // b.hs, b.nlast
    3244:	ldur	x8, [x29, #-160]
    3248:	add	x26, x26, x11
    324c:	ldr	x0, [x8, w10, uxtw #3]
    3250:	cmp	x0, #0x0
    3254:	csel	w28, wzr, w28, eq  // eq = none
    3258:	bl	1cc0 <strlen@plt>
    325c:	ldur	w1, [x29, #-152]
    3260:	mov	w13, #0x12de                	// #4830
    3264:	movk	w13, #0x9504, lsl #16
    3268:	add	x9, x0, x27
    326c:	add	x25, x25, #0x8
    3270:	b	3204 <libintl_gettext@@Base+0xc60>
    3274:	ldr	w8, [x8]
    3278:	mov	x27, xzr
    327c:	mov	w28, #0x1                   	// #1
    3280:	rev	w9, w8
    3284:	cmp	w1, w13
    3288:	csel	w8, w9, w8, ne  // ne = any
    328c:	cbz	w8, 3840 <libintl_gettext@@Base+0x129c>
    3290:	sub	w8, w8, #0x1
    3294:	ldrb	w8, [x26, w8, uxtw]
    3298:	cbnz	w8, 3840 <libintl_gettext@@Base+0x129c>
    329c:	cbz	w28, 32bc <libintl_gettext@@Base+0xd18>
    32a0:	ldur	w8, [x29, #-236]
    32a4:	add	w8, w8, #0x1
    32a8:	stur	w8, [x29, #-236]
    32ac:	ldur	x8, [x29, #-248]
    32b0:	add	x8, x21, x8
    32b4:	add	x8, x8, x27
    32b8:	stur	x8, [x29, #-248]
    32bc:	ldur	x10, [x29, #-224]
    32c0:	ldur	x27, [x29, #-256]
    32c4:	ldur	x8, [x29, #-216]
    32c8:	add	x27, x27, #0x1
    32cc:	cmp	x27, x8
    32d0:	b.cc	30b4 <libintl_gettext@@Base+0xb10>  // b.lo, b.ul, b.last
    32d4:	ldur	w8, [x29, #-236]
    32d8:	cbz	w8, 3668 <libintl_gettext@@Base+0x10c4>
    32dc:	ldur	x9, [x29, #-248]
    32e0:	lsl	w8, w8, #1
    32e4:	add	x0, x9, w8, uxtw #4
    32e8:	bl	1e10 <malloc@plt>
    32ec:	cbz	x0, 3840 <libintl_gettext@@Base+0x129c>
    32f0:	ldur	w8, [x29, #-236]
    32f4:	sub	x9, x29, #0x20
    32f8:	sub	x10, x29, #0x10
    32fc:	ldur	x13, [x29, #-200]
    3300:	mov	w8, w8
    3304:	stur	x8, [x9, #-256]
    3308:	lsl	x8, x8, #4
    330c:	sub	x9, x29, #0x18
    3310:	stur	x0, [x9, #-256]
    3314:	add	x9, x0, x8
    3318:	stur	x9, [x10, #-256]
    331c:	add	x8, x9, x8
    3320:	sub	x9, x29, #0x28
    3324:	stur	x8, [x9, #-256]
    3328:	sub	x9, x29, #0x8
    332c:	ldur	x9, [x9, #-256]
    3330:	ldur	x14, [x29, #-160]
    3334:	ldur	w15, [x29, #-184]
    3338:	ldp	x17, x16, [x29, #-232]
    333c:	mov	x1, xzr
    3340:	mov	w18, wzr
    3344:	add	x25, x8, x9
    3348:	add	x8, x22, #0x8
    334c:	str	x0, [x23, #32]
    3350:	stur	x8, [x29, #-248]
    3354:	mov	w8, #0x1                   	// #1
    3358:	mov	w9, #0x1                   	// #1
    335c:	b	3378 <libintl_gettext@@Base+0xdd4>
    3360:	mov	w8, wzr
    3364:	cmp	w8, #0x0
    3368:	cset	w10, ne  // ne = any
    336c:	and	w10, w10, w9
    3370:	mov	w9, wzr
    3374:	tbz	w10, #0, 33f4 <libintl_gettext@@Base+0xe50>
    3378:	tst	w9, #0x1
    337c:	csel	x10, x16, x17, ne  // ne = any
    3380:	ldr	w10, [x10, x1, lsl #2]
    3384:	cbz	w15, 33a4 <libintl_gettext@@Base+0xe00>
    3388:	rev	w10, w10
    338c:	add	x10, x13, x10
    3390:	ldr	w11, [x10, #4]
    3394:	rev	w12, w11
    3398:	cmn	w12, #0x1
    339c:	b.ne	33b8 <libintl_gettext@@Base+0xe14>  // b.any
    33a0:	b	3364 <libintl_gettext@@Base+0xdc0>
    33a4:	add	x10, x13, x10
    33a8:	ldr	w11, [x10, #4]
    33ac:	mov	w12, w11
    33b0:	cmn	w12, #0x1
    33b4:	b.eq	3364 <libintl_gettext@@Base+0xdc0>  // b.none
    33b8:	rev	w12, w11
    33bc:	cmp	w15, #0x0
    33c0:	csel	w11, w11, w12, eq  // eq = none
    33c4:	cmn	w11, #0x1
    33c8:	b.eq	3364 <libintl_gettext@@Base+0xdc0>  // b.none
    33cc:	add	x10, x10, #0xc
    33d0:	ldr	x11, [x14, w11, uxtw #3]
    33d4:	cbz	x11, 3360 <libintl_gettext@@Base+0xdbc>
    33d8:	ldr	w11, [x10], #8
    33dc:	cmp	w15, #0x0
    33e0:	rev	w12, w11
    33e4:	csel	w11, w11, w12, eq  // eq = none
    33e8:	cmn	w11, #0x1
    33ec:	b.ne	33d0 <libintl_gettext@@Base+0xe2c>  // b.any
    33f0:	b	3364 <libintl_gettext@@Base+0xdc0>
    33f4:	cbz	w8, 3650 <libintl_gettext@@Base+0x10ac>
    33f8:	ldr	w8, [x16, x1, lsl #2]
    33fc:	mov	w12, w18
    3400:	stur	w18, [x29, #-168]
    3404:	cbz	w15, 3418 <libintl_gettext@@Base+0xe74>
    3408:	rev	w8, w8
    340c:	ldr	w9, [x22, x8]
    3410:	rev	w9, w9
    3414:	b	341c <libintl_gettext@@Base+0xe78>
    3418:	ldr	w9, [x22, x8]
    341c:	add	x10, x13, x8
    3420:	ldr	w11, [x10, #4]
    3424:	add	x26, x22, w9, uxtw
    3428:	cmp	w15, #0x0
    342c:	stur	x1, [x29, #-152]
    3430:	rev	w9, w11
    3434:	csel	w9, w11, w9, eq  // eq = none
    3438:	cmn	w9, #0x1
    343c:	sub	x9, x29, #0x18
    3440:	ldur	x9, [x9, #-256]
    3444:	add	x11, x9, x12, lsl #4
    3448:	b.eq	3514 <libintl_gettext@@Base+0xf70>  // b.none
    344c:	stur	x11, [x29, #-256]
    3450:	str	x25, [x11, #8]!
    3454:	sub	x9, x29, #0x8
    3458:	stur	x11, [x9, #-256]
    345c:	ldur	x9, [x29, #-248]
    3460:	stur	x12, [x29, #-184]
    3464:	add	x21, x9, x8
    3468:	ldur	w8, [x21, #-4]
    346c:	cbnz	w15, 34ac <libintl_gettext@@Base+0xf08>
    3470:	b	34bc <libintl_gettext@@Base+0xf18>
    3474:	ldur	x8, [x29, #-160]
    3478:	ldr	x27, [x8, w28, uxtw #3]
    347c:	mov	x0, x27
    3480:	bl	1cc0 <strlen@plt>
    3484:	mov	x28, x0
    3488:	mov	x0, x25
    348c:	mov	x1, x27
    3490:	mov	x2, x28
    3494:	bl	1c70 <memcpy@plt>
    3498:	ldr	w15, [x23, #24]
    349c:	add	x25, x25, x28
    34a0:	add	x21, x21, #0x8
    34a4:	ldur	w8, [x21, #-4]
    34a8:	cbz	w15, 34bc <libintl_gettext@@Base+0xf18>
    34ac:	ldr	w9, [x21]
    34b0:	rev	w8, w8
    34b4:	rev	w28, w9
    34b8:	b	34c0 <libintl_gettext@@Base+0xf1c>
    34bc:	ldr	w28, [x21]
    34c0:	cbz	w8, 34e0 <libintl_gettext@@Base+0xf3c>
    34c4:	mov	w27, w8
    34c8:	mov	x0, x25
    34cc:	mov	x1, x26
    34d0:	mov	x2, x27
    34d4:	bl	1c70 <memcpy@plt>
    34d8:	add	x25, x25, x27
    34dc:	add	x26, x26, x27
    34e0:	cmn	w28, #0x1
    34e4:	b.ne	3474 <libintl_gettext@@Base+0xed0>  // b.any
    34e8:	sub	x8, x29, #0x8
    34ec:	ldur	x8, [x8, #-256]
    34f0:	ldr	w15, [x23, #24]
    34f4:	ldur	x9, [x29, #-256]
    34f8:	ldur	x13, [x29, #-200]
    34fc:	ldr	x8, [x8]
    3500:	ldur	x1, [x29, #-152]
    3504:	ldur	x12, [x29, #-184]
    3508:	sub	x8, x25, x8
    350c:	str	x8, [x9]
    3510:	b	3528 <libintl_gettext@@Base+0xf84>
    3514:	ldr	w8, [x10]
    3518:	cmp	w15, #0x0
    351c:	rev	w9, w8
    3520:	csel	w8, w8, w9, eq  // eq = none
    3524:	stp	x8, x26, [x11]
    3528:	ldur	x17, [x29, #-232]
    352c:	ldr	w8, [x17, x1, lsl #2]
    3530:	cbz	w15, 3544 <libintl_gettext@@Base+0xfa0>
    3534:	rev	w8, w8
    3538:	ldr	w9, [x22, x8]
    353c:	rev	w9, w9
    3540:	b	3548 <libintl_gettext@@Base+0xfa4>
    3544:	ldr	w9, [x22, x8]
    3548:	add	x10, x13, x8
    354c:	ldr	w11, [x10, #4]
    3550:	add	x26, x22, w9, uxtw
    3554:	cmp	w15, #0x0
    3558:	rev	w9, w11
    355c:	csel	w9, w11, w9, eq  // eq = none
    3560:	cmn	w9, #0x1
    3564:	sub	x9, x29, #0x10
    3568:	ldur	x9, [x9, #-256]
    356c:	add	x11, x9, x12, lsl #4
    3570:	b.eq	362c <libintl_gettext@@Base+0x1088>  // b.none
    3574:	ldur	x9, [x29, #-248]
    3578:	stur	x11, [x29, #-184]
    357c:	str	x25, [x11, #8]!
    3580:	stur	x11, [x29, #-256]
    3584:	add	x21, x9, x8
    3588:	ldur	w8, [x21, #-4]
    358c:	cbnz	w15, 35cc <libintl_gettext@@Base+0x1028>
    3590:	b	35dc <libintl_gettext@@Base+0x1038>
    3594:	ldur	x8, [x29, #-160]
    3598:	ldr	x27, [x8, w28, uxtw #3]
    359c:	mov	x0, x27
    35a0:	bl	1cc0 <strlen@plt>
    35a4:	mov	x28, x0
    35a8:	mov	x0, x25
    35ac:	mov	x1, x27
    35b0:	mov	x2, x28
    35b4:	bl	1c70 <memcpy@plt>
    35b8:	ldr	w15, [x23, #24]
    35bc:	add	x25, x25, x28
    35c0:	add	x21, x21, #0x8
    35c4:	ldur	w8, [x21, #-4]
    35c8:	cbz	w15, 35dc <libintl_gettext@@Base+0x1038>
    35cc:	ldr	w9, [x21]
    35d0:	rev	w8, w8
    35d4:	rev	w28, w9
    35d8:	b	35e0 <libintl_gettext@@Base+0x103c>
    35dc:	ldr	w28, [x21]
    35e0:	cbz	w8, 3600 <libintl_gettext@@Base+0x105c>
    35e4:	mov	w27, w8
    35e8:	mov	x0, x25
    35ec:	mov	x1, x26
    35f0:	mov	x2, x27
    35f4:	bl	1c70 <memcpy@plt>
    35f8:	add	x25, x25, x27
    35fc:	add	x26, x26, x27
    3600:	cmn	w28, #0x1
    3604:	b.ne	3594 <libintl_gettext@@Base+0xff0>  // b.any
    3608:	ldur	x8, [x29, #-256]
    360c:	ldur	x9, [x29, #-184]
    3610:	ldur	x13, [x29, #-200]
    3614:	ldur	x17, [x29, #-232]
    3618:	ldr	x8, [x8]
    361c:	ldur	x1, [x29, #-152]
    3620:	sub	x8, x25, x8
    3624:	str	x8, [x9]
    3628:	b	3640 <libintl_gettext@@Base+0x109c>
    362c:	ldr	w8, [x10]
    3630:	cmp	w15, #0x0
    3634:	rev	w9, w8
    3638:	csel	w8, w8, w9, eq  // eq = none
    363c:	stp	x8, x26, [x11]
    3640:	ldur	w18, [x29, #-168]
    3644:	ldur	x14, [x29, #-160]
    3648:	ldur	x16, [x29, #-224]
    364c:	add	w18, w18, #0x1
    3650:	ldur	x8, [x29, #-216]
    3654:	add	x1, x1, #0x1
    3658:	cmp	x1, x8
    365c:	b.cs	3724 <libintl_gettext@@Base+0x1180>  // b.hs, b.nlast
    3660:	ldr	w15, [x23, #24]
    3664:	b	3354 <libintl_gettext@@Base+0xdb0>
    3668:	str	wzr, [x23, #64]
    366c:	stp	xzr, xzr, [x23, #72]
    3670:	stp	xzr, xzr, [x23, #112]
    3674:	cbz	x24, 3684 <libintl_gettext@@Base+0x10e0>
    3678:	add	x0, x23, #0x80
    367c:	bl	61f0 <libintl_ngettext@@Base+0x8f0>
    3680:	cbnz	w0, 38b0 <libintl_gettext@@Base+0x130c>
    3684:	adrp	x2, 6000 <libintl_ngettext@@Base+0x700>
    3688:	add	x2, x2, #0xfad
    368c:	sub	x4, x29, #0x90
    3690:	mov	x0, x19
    3694:	mov	x1, x20
    3698:	mov	w3, wzr
    369c:	bl	4f98 <libintl_textdomain@@Base+0x10f0>
    36a0:	cmn	x0, #0x1
    36a4:	b.eq	3830 <libintl_gettext@@Base+0x128c>  // b.none
    36a8:	add	x1, x23, #0xb8
    36ac:	add	x2, x23, #0xc0
    36b0:	bl	60bc <libintl_ngettext@@Base+0x7bc>
    36b4:	b	3874 <libintl_gettext@@Base+0x12d0>
    36b8:	mov	x0, x21
    36bc:	bl	1e10 <malloc@plt>
    36c0:	cbz	x0, 3718 <libintl_gettext@@Base+0x1174>
    36c4:	mov	x22, x0
    36c8:	mov	x26, x0
    36cc:	mov	x27, x21
    36d0:	b	36e0 <libintl_gettext@@Base+0x113c>
    36d4:	add	x26, x26, x0
    36d8:	sub	x21, x21, x0
    36dc:	cbz	x21, 3824 <libintl_gettext@@Base+0x1280>
    36e0:	mov	w0, w23
    36e4:	mov	x1, x26
    36e8:	mov	x2, x21
    36ec:	bl	2040 <read@plt>
    36f0:	cmp	x0, #0x0
    36f4:	b.gt	36d4 <libintl_gettext@@Base+0x1130>
    36f8:	cmn	x0, #0x1
    36fc:	b.ne	3710 <libintl_gettext@@Base+0x116c>  // b.any
    3700:	bl	20c0 <__errno_location@plt>
    3704:	ldr	w8, [x0]
    3708:	cmp	w8, #0x4
    370c:	b.eq	36dc <libintl_gettext@@Base+0x1138>  // b.none
    3710:	mov	x0, x22
    3714:	bl	1fb0 <free@plt>
    3718:	mov	w0, w23
    371c:	bl	1f00 <close@plt>
    3720:	b	3874 <libintl_gettext@@Base+0x12d0>
    3724:	ldur	w8, [x29, #-236]
    3728:	cmp	w18, w8
    372c:	b.ne	38b0 <libintl_gettext@@Base+0x130c>  // b.any
    3730:	sub	x9, x29, #0x28
    3734:	ldr	w8, [x23, #88]
    3738:	ldur	x28, [x9, #-256]
    373c:	cbz	w8, 3770 <libintl_gettext@@Base+0x11cc>
    3740:	ldr	w9, [x23, #104]
    3744:	ldr	x10, [x23, #96]
    3748:	mov	x11, xzr
    374c:	lsl	x12, x11, #2
    3750:	ldr	w13, [x10, x12]
    3754:	cmp	w9, #0x0
    3758:	add	x11, x11, #0x1
    375c:	rev	w14, w13
    3760:	csel	w13, w13, w14, eq  // eq = none
    3764:	cmp	x11, x8
    3768:	str	w13, [x28, x12]
    376c:	b.cc	374c <libintl_gettext@@Base+0x11a8>  // b.lo, b.ul, b.last
    3770:	sub	x8, x29, #0x18
    3774:	ldur	x26, [x8, #-256]
    3778:	sub	x8, x29, #0x20
    377c:	ldur	x25, [x29, #-208]
    3780:	ldur	x27, [x8, #-256]
    3784:	mov	x21, xzr
    3788:	b	37a4 <libintl_gettext@@Base+0x1200>
    378c:	ldr	w8, [x25]
    3790:	add	x21, x21, #0x1
    3794:	cmp	x21, x27
    3798:	add	w8, w8, w21
    379c:	str	w8, [x9]
    37a0:	b.cs	37fc <libintl_gettext@@Base+0x1258>  // b.hs, b.nlast
    37a4:	add	x8, x26, x21, lsl #4
    37a8:	ldr	x0, [x8, #8]
    37ac:	bl	2840 <libintl_gettext@@Base+0x29c>
    37b0:	ldr	w10, [x23, #88]
    37b4:	udiv	w8, w0, w10
    37b8:	msub	w8, w8, w10, w0
    37bc:	add	x9, x28, w8, uxtw #2
    37c0:	ldr	w11, [x9]
    37c4:	cbz	w11, 378c <libintl_gettext@@Base+0x11e8>
    37c8:	sub	w9, w10, #0x2
    37cc:	udiv	w11, w0, w9
    37d0:	msub	w9, w11, w9, w0
    37d4:	add	w9, w9, #0x1
    37d8:	sub	w10, w10, w9
    37dc:	neg	w11, w10
    37e0:	cmp	w8, w10
    37e4:	csel	w12, w9, w11, cc  // cc = lo, ul, last
    37e8:	add	w8, w12, w8
    37ec:	ldr	w12, [x28, w8, uxtw #2]
    37f0:	cbnz	w12, 37e0 <libintl_gettext@@Base+0x123c>
    37f4:	add	x9, x28, w8, uxtw #2
    37f8:	b	378c <libintl_gettext@@Base+0x11e8>
    37fc:	ldur	w8, [x29, #-236]
    3800:	str	x28, [x23, #96]
    3804:	str	wzr, [x23, #104]
    3808:	str	w8, [x23, #64]
    380c:	sub	x8, x29, #0x10
    3810:	ldur	x8, [x8, #-256]
    3814:	stp	x26, x8, [x23, #72]
    3818:	stp	xzr, xzr, [x23, #112]
    381c:	cbnz	x24, 3678 <libintl_gettext@@Base+0x10d4>
    3820:	b	3684 <libintl_gettext@@Base+0x10e0>
    3824:	mov	w25, wzr
    3828:	mov	x21, x27
    382c:	b	294c <libintl_gettext@@Base+0x3a8>
    3830:	cbz	x24, 3840 <libintl_gettext@@Base+0x129c>
    3834:	add	x0, x23, #0x80
    3838:	bl	1e20 <pthread_rwlock_destroy@plt>
    383c:	cbnz	w0, 38b0 <libintl_gettext@@Base+0x130c>
    3840:	ldr	x0, [x23, #32]
    3844:	bl	1fb0 <free@plt>
    3848:	ldur	w8, [x29, #-172]
    384c:	cbz	w8, 3860 <libintl_gettext@@Base+0x12bc>
    3850:	ldur	x1, [x29, #-192]
    3854:	mov	x0, x22
    3858:	bl	2010 <munmap@plt>
    385c:	b	3868 <libintl_gettext@@Base+0x12c4>
    3860:	mov	x0, x22
    3864:	bl	1fb0 <free@plt>
    3868:	mov	x0, x23
    386c:	bl	1fb0 <free@plt>
    3870:	str	xzr, [x19, #16]
    3874:	mov	w8, #0x1                   	// #1
    3878:	str	w8, [x19, #8]
    387c:	cbz	x24, 3890 <libintl_gettext@@Base+0x12ec>
    3880:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3884:	add	x0, x0, #0x2a0
    3888:	bl	20f0 <pthread_mutex_unlock@plt>
    388c:	cbnz	w0, 38b0 <libintl_gettext@@Base+0x130c>
    3890:	mov	sp, x29
    3894:	ldp	x20, x19, [sp, #80]
    3898:	ldp	x22, x21, [sp, #64]
    389c:	ldp	x24, x23, [sp, #48]
    38a0:	ldp	x26, x25, [sp, #32]
    38a4:	ldp	x28, x27, [sp, #16]
    38a8:	ldp	x29, x30, [sp], #96
    38ac:	ret
    38b0:	bl	1f20 <abort@plt>

00000000000038b4 <_nl_expand_alias@@Base>:
    38b4:	stp	x29, x30, [sp, #-96]!
    38b8:	stp	x28, x27, [sp, #16]
    38bc:	stp	x26, x25, [sp, #32]
    38c0:	stp	x24, x23, [sp, #48]
    38c4:	stp	x22, x21, [sp, #64]
    38c8:	stp	x20, x19, [sp, #80]
    38cc:	adrp	x20, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    38d0:	ldr	x20, [x20, #4064]
    38d4:	mov	x19, x0
    38d8:	mov	x29, sp
    38dc:	cbz	x20, 38f0 <_nl_expand_alias@@Base+0x3c>
    38e0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    38e4:	add	x0, x0, #0x368
    38e8:	bl	20e0 <pthread_mutex_lock@plt>
    38ec:	cbnz	w0, 3a10 <_nl_expand_alias@@Base+0x15c>
    38f0:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    38f4:	ldr	x8, [x21, #864]
    38f8:	cbnz	x8, 3908 <_nl_expand_alias@@Base+0x54>
    38fc:	adrp	x8, 6000 <libintl_ngettext@@Base+0x700>
    3900:	add	x8, x8, #0xfad
    3904:	str	x8, [x21, #864]
    3908:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    390c:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3910:	ldr	x25, [x22, #920]
    3914:	cbz	x25, 3964 <_nl_expand_alias@@Base+0xb0>
    3918:	ldr	x24, [x23, #928]
    391c:	mov	x26, xzr
    3920:	b	3938 <_nl_expand_alias@@Base+0x84>
    3924:	add	x26, x27, #0x1
    3928:	mov	x27, x25
    392c:	cmp	x26, x27
    3930:	mov	x25, x27
    3934:	b.cs	3964 <_nl_expand_alias@@Base+0xb0>  // b.hs, b.nlast
    3938:	add	x8, x25, x26
    393c:	lsr	x27, x8, #1
    3940:	add	x28, x24, x27, lsl #4
    3944:	ldr	x1, [x28]
    3948:	mov	x0, x19
    394c:	bl	1ec0 <strcasecmp@plt>
    3950:	tbnz	w0, #31, 392c <_nl_expand_alias@@Base+0x78>
    3954:	cbnz	w0, 3924 <_nl_expand_alias@@Base+0x70>
    3958:	b	39d8 <_nl_expand_alias@@Base+0x124>
    395c:	mov	x0, xzr
    3960:	cbnz	xzr, 3910 <_nl_expand_alias@@Base+0x5c>
    3964:	ldr	x0, [x21, #864]
    3968:	ldrb	w8, [x0]
    396c:	cmp	w8, #0x3a
    3970:	b.eq	397c <_nl_expand_alias@@Base+0xc8>  // b.none
    3974:	cbnz	w8, 398c <_nl_expand_alias@@Base+0xd8>
    3978:	b	39cc <_nl_expand_alias@@Base+0x118>
    397c:	ldrb	w8, [x0, #1]!
    3980:	cmp	w8, #0x3a
    3984:	b.eq	397c <_nl_expand_alias@@Base+0xc8>  // b.none
    3988:	str	x0, [x21, #864]
    398c:	add	x9, x0, #0x1
    3990:	ands	w8, w8, #0xff
    3994:	b.eq	39b0 <_nl_expand_alias@@Base+0xfc>  // b.none
    3998:	cmp	w8, #0x3a
    399c:	b.eq	39b0 <_nl_expand_alias@@Base+0xfc>  // b.none
    39a0:	str	x9, [x21, #864]
    39a4:	ldrb	w8, [x9], #1
    39a8:	ands	w8, w8, #0xff
    39ac:	b.ne	3998 <_nl_expand_alias@@Base+0xe4>  // b.any
    39b0:	sub	x8, x9, #0x1
    39b4:	cmp	x0, x8
    39b8:	b.cs	395c <_nl_expand_alias@@Base+0xa8>  // b.hs, b.nlast
    39bc:	sub	w1, w8, w0
    39c0:	bl	3a20 <_nl_expand_alias@@Base+0x16c>
    39c4:	cbz	x0, 3964 <_nl_expand_alias@@Base+0xb0>
    39c8:	b	3910 <_nl_expand_alias@@Base+0x5c>
    39cc:	mov	x19, xzr
    39d0:	cbnz	x20, 39e0 <_nl_expand_alias@@Base+0x12c>
    39d4:	b	39f0 <_nl_expand_alias@@Base+0x13c>
    39d8:	ldr	x19, [x28, #8]
    39dc:	cbz	x20, 39f0 <_nl_expand_alias@@Base+0x13c>
    39e0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    39e4:	add	x0, x0, #0x368
    39e8:	bl	20f0 <pthread_mutex_unlock@plt>
    39ec:	cbnz	w0, 3a10 <_nl_expand_alias@@Base+0x15c>
    39f0:	mov	x0, x19
    39f4:	ldp	x20, x19, [sp, #80]
    39f8:	ldp	x22, x21, [sp, #64]
    39fc:	ldp	x24, x23, [sp, #48]
    3a00:	ldp	x26, x25, [sp, #32]
    3a04:	ldp	x28, x27, [sp, #16]
    3a08:	ldp	x29, x30, [sp], #96
    3a0c:	ret
    3a10:	bl	1f20 <abort@plt>
    3a14:	ldr	x0, [x0]
    3a18:	ldr	x1, [x1]
    3a1c:	b	1ec0 <strcasecmp@plt>
    3a20:	stp	x29, x30, [sp, #-96]!
    3a24:	stp	x28, x27, [sp, #16]
    3a28:	stp	x26, x25, [sp, #32]
    3a2c:	stp	x24, x23, [sp, #48]
    3a30:	stp	x22, x21, [sp, #64]
    3a34:	stp	x20, x19, [sp, #80]
    3a38:	mov	x29, sp
    3a3c:	sub	sp, sp, #0x1d0
    3a40:	sxtw	x20, w1
    3a44:	add	x9, x20, #0x1d
    3a48:	and	x9, x9, #0xfffffffffffffff0
    3a4c:	mov	x10, sp
    3a50:	sub	x21, x10, x9
    3a54:	mov	x19, sp
    3a58:	mov	x8, x0
    3a5c:	mov	sp, x21
    3a60:	mov	x0, x21
    3a64:	mov	x1, x8
    3a68:	mov	x2, x20
    3a6c:	bl	1c70 <memcpy@plt>
    3a70:	adrp	x8, 6000 <libintl_ngettext@@Base+0x700>
    3a74:	add	x8, x8, #0xf4e
    3a78:	ldr	x9, [x8]
    3a7c:	ldur	x8, [x8, #6]
    3a80:	add	x10, x21, x20
    3a84:	sub	x1, x29, #0x10
    3a88:	mov	x0, x21
    3a8c:	str	x9, [x10]
    3a90:	stur	x8, [x10, #6]
    3a94:	bl	6488 <libintl_set_relocation_prefix@@Base+0x19c>
    3a98:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    3a9c:	add	x1, x1, #0x2ad
    3aa0:	bl	1e00 <fopen@plt>
    3aa4:	ldur	x8, [x29, #-16]
    3aa8:	mov	x21, x0
    3aac:	mov	x0, x8
    3ab0:	bl	1fb0 <free@plt>
    3ab4:	cbz	x21, 3e3c <_nl_expand_alias@@Base+0x588>
    3ab8:	mov	w1, #0x2                   	// #2
    3abc:	mov	x0, x21
    3ac0:	bl	20a0 <__fsetlocking@plt>
    3ac4:	ldrb	w8, [x21]
    3ac8:	tbnz	w8, #4, 3e44 <_nl_expand_alias@@Base+0x590>
    3acc:	add	x8, x19, #0x30
    3ad0:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3ad4:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3ad8:	sub	x9, x8, #0x1
    3adc:	orr	x8, x8, #0x1
    3ae0:	str	x9, [x19, #40]
    3ae4:	stp	xzr, x8, [x19, #24]
    3ae8:	b	3b7c <_nl_expand_alias@@Base+0x2c8>
    3aec:	ldr	x0, [x22, #960]
    3af0:	mov	x22, x26
    3af4:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3af8:	ldr	x27, [x26, #920]
    3afc:	add	x28, x0, x20
    3b00:	mov	x26, x0
    3b04:	mov	x0, x28
    3b08:	mov	x1, x23
    3b0c:	mov	x2, x25
    3b10:	bl	1c70 <memcpy@plt>
    3b14:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3b18:	ldr	x8, [x8, #928]
    3b1c:	mov	x1, x24
    3b20:	ldr	x24, [x19, #8]
    3b24:	add	x20, x20, x25
    3b28:	add	x23, x26, x20
    3b2c:	add	x25, x8, x27, lsl #4
    3b30:	mov	x0, x23
    3b34:	mov	x2, x24
    3b38:	str	x28, [x25]
    3b3c:	str	x20, [x22, #944]
    3b40:	bl	1c70 <memcpy@plt>
    3b44:	add	x8, x20, x24
    3b48:	str	x23, [x25, #8]
    3b4c:	add	x9, x27, #0x1
    3b50:	str	x8, [x22, #944]
    3b54:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3b58:	str	x9, [x8, #920]
    3b5c:	ldp	x20, x8, [x19, #16]
    3b60:	mov	x26, x22
    3b64:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3b68:	add	x8, x8, #0x1
    3b6c:	str	x8, [x19, #24]
    3b70:	cbz	x20, 3c34 <_nl_expand_alias@@Base+0x380>
    3b74:	ldrb	w8, [x21]
    3b78:	tbnz	w8, #4, 3e54 <_nl_expand_alias@@Base+0x5a0>
    3b7c:	add	x0, x19, #0x30
    3b80:	mov	w1, #0x190                 	// #400
    3b84:	mov	x2, x21
    3b88:	bl	1d40 <fgets_unlocked@plt>
    3b8c:	cbz	x0, 3e54 <_nl_expand_alias@@Base+0x5a0>
    3b90:	add	x0, x19, #0x30
    3b94:	mov	w1, #0xa                   	// #10
    3b98:	bl	1ff0 <strchr@plt>
    3b9c:	mov	x20, x0
    3ba0:	bl	1f80 <__ctype_b_loc@plt>
    3ba4:	ldr	x8, [x0]
    3ba8:	ldp	x10, x23, [x19, #32]
    3bac:	ldrb	w11, [x23, #1]!
    3bb0:	mov	x9, x10
    3bb4:	add	x10, x10, #0x1
    3bb8:	ldrh	w12, [x8, x11, lsl #1]
    3bbc:	tbnz	w12, #13, 3bac <_nl_expand_alias@@Base+0x2f8>
    3bc0:	cbz	w11, 3b70 <_nl_expand_alias@@Base+0x2bc>
    3bc4:	cmp	w11, #0x23
    3bc8:	b.eq	3b70 <_nl_expand_alias@@Base+0x2bc>  // b.none
    3bcc:	ldrb	w10, [x9]
    3bd0:	cbz	x10, 3be8 <_nl_expand_alias@@Base+0x334>
    3bd4:	ldrh	w10, [x8, x10, lsl #1]
    3bd8:	add	x9, x9, #0x1
    3bdc:	tbz	w10, #13, 3bcc <_nl_expand_alias@@Base+0x318>
    3be0:	sturb	wzr, [x9, #-1]
    3be4:	ldr	x8, [x0]
    3be8:	sub	x24, x9, #0x1
    3bec:	add	x10, x9, #0x1
    3bf0:	adrp	x13, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3bf4:	ldrb	w11, [x24, #1]!
    3bf8:	mov	x9, x10
    3bfc:	add	x10, x10, #0x1
    3c00:	ldrh	w12, [x8, x11, lsl #1]
    3c04:	tbnz	w12, #13, 3bf4 <_nl_expand_alias@@Base+0x340>
    3c08:	cbz	w11, 3b70 <_nl_expand_alias@@Base+0x2bc>
    3c0c:	ldrb	w10, [x9]
    3c10:	cbz	x10, 3c60 <_nl_expand_alias@@Base+0x3ac>
    3c14:	ldrh	w11, [x8, x10, lsl #1]
    3c18:	add	x9, x9, #0x1
    3c1c:	tbz	w11, #13, 3c0c <_nl_expand_alias@@Base+0x358>
    3c20:	cmp	w10, #0xa
    3c24:	b.ne	3c5c <_nl_expand_alias@@Base+0x3a8>  // b.any
    3c28:	mov	w8, #0xa00                 	// #2560
    3c2c:	sturh	w8, [x9, #-1]
    3c30:	b	3c60 <_nl_expand_alias@@Base+0x3ac>
    3c34:	add	x0, x19, #0x30
    3c38:	mov	w1, #0x190                 	// #400
    3c3c:	mov	x2, x21
    3c40:	bl	1d40 <fgets_unlocked@plt>
    3c44:	cbz	x0, 3b74 <_nl_expand_alias@@Base+0x2c0>
    3c48:	add	x0, x19, #0x30
    3c4c:	mov	w1, #0xa                   	// #10
    3c50:	bl	1ff0 <strchr@plt>
    3c54:	cbz	x0, 3c34 <_nl_expand_alias@@Base+0x380>
    3c58:	b	3b74 <_nl_expand_alias@@Base+0x2c0>
    3c5c:	sturb	wzr, [x9, #-1]
    3c60:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3c64:	ldr	x9, [x13, #920]
    3c68:	ldr	x8, [x8, #936]
    3c6c:	str	x20, [x19, #16]
    3c70:	cmp	x9, x8
    3c74:	b.cc	3cac <_nl_expand_alias@@Base+0x3f8>  // b.lo, b.ul, b.last
    3c78:	adrp	x10, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3c7c:	ldr	x0, [x10, #928]
    3c80:	lsl	x9, x8, #1
    3c84:	cmp	x8, #0x0
    3c88:	mov	w8, #0x64                  	// #100
    3c8c:	csel	x20, x8, x9, eq  // eq = none
    3c90:	lsl	x1, x20, #4
    3c94:	bl	1ed0 <realloc@plt>
    3c98:	cbz	x0, 3e54 <_nl_expand_alias@@Base+0x5a0>
    3c9c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3ca0:	str	x0, [x8, #928]
    3ca4:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3ca8:	str	x20, [x8, #936]
    3cac:	mov	x0, x23
    3cb0:	bl	1cc0 <strlen@plt>
    3cb4:	add	x25, x0, #0x1
    3cb8:	mov	x0, x24
    3cbc:	bl	1cc0 <strlen@plt>
    3cc0:	ldr	x20, [x26, #944]
    3cc4:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3cc8:	ldr	x8, [x8, #952]
    3ccc:	add	x9, x0, #0x1
    3cd0:	str	x9, [x19, #8]
    3cd4:	add	x9, x9, x25
    3cd8:	add	x10, x9, x20
    3cdc:	cmp	x10, x8
    3ce0:	b.ls	3aec <_nl_expand_alias@@Base+0x238>  // b.plast
    3ce4:	ldr	x0, [x22, #960]
    3ce8:	cmp	x9, #0x400
    3cec:	mov	w10, #0x400                 	// #1024
    3cf0:	csel	x9, x9, x10, hi  // hi = pmore
    3cf4:	add	x28, x9, x8
    3cf8:	mov	x1, x28
    3cfc:	bl	1ed0 <realloc@plt>
    3d00:	cbz	x0, 3e54 <_nl_expand_alias@@Base+0x5a0>
    3d04:	ldr	x8, [x22, #960]
    3d08:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3d0c:	ldr	x27, [x9, #920]
    3d10:	cmp	x8, x0
    3d14:	b.eq	3d1c <_nl_expand_alias@@Base+0x468>  // b.none
    3d18:	cbnz	x27, 3d34 <_nl_expand_alias@@Base+0x480>
    3d1c:	ldr	x20, [x26, #944]
    3d20:	str	x0, [x22, #960]
    3d24:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3d28:	mov	x22, x26
    3d2c:	str	x28, [x8, #952]
    3d30:	b	3afc <_nl_expand_alias@@Base+0x248>
    3d34:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3d38:	ldr	x10, [x9, #928]
    3d3c:	cmp	x27, #0x4
    3d40:	sub	x8, x0, x8
    3d44:	b.cs	3d50 <_nl_expand_alias@@Base+0x49c>  // b.hs, b.nlast
    3d48:	mov	x9, xzr
    3d4c:	b	3e10 <_nl_expand_alias@@Base+0x55c>
    3d50:	sub	x9, x27, #0x1
    3d54:	mvn	x13, x10
    3d58:	cmp	xzr, x9, lsr #60
    3d5c:	lsl	x12, x9, #4
    3d60:	mov	x17, x0
    3d64:	mov	x14, x26
    3d68:	mov	x15, x27
    3d6c:	cset	w11, ne  // ne = any
    3d70:	cmp	x12, x13
    3d74:	mov	x9, xzr
    3d78:	b.hi	3e00 <_nl_expand_alias@@Base+0x54c>  // b.pmore
    3d7c:	tbnz	w11, #0, 3e00 <_nl_expand_alias@@Base+0x54c>
    3d80:	add	x13, x10, #0x8
    3d84:	mvn	x13, x13
    3d88:	cmp	x12, x13
    3d8c:	b.hi	3e00 <_nl_expand_alias@@Base+0x54c>  // b.pmore
    3d90:	mov	x26, x14
    3d94:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3d98:	mov	x27, x15
    3d9c:	mov	x0, x17
    3da0:	tbnz	w11, #0, 3e10 <_nl_expand_alias@@Base+0x55c>
    3da4:	and	x9, x27, #0xfffffffffffffffc
    3da8:	add	x11, x10, #0x20
    3dac:	mov	x12, x9
    3db0:	sub	x13, x11, #0x20
    3db4:	ld2	{v0.2d, v1.2d}, [x11]
    3db8:	ld2	{v2.2d, v3.2d}, [x13]
    3dbc:	dup	v4.2d, x8
    3dc0:	subs	x12, x12, #0x4
    3dc4:	add	v5.2d, v0.2d, v4.2d
    3dc8:	add	v16.2d, v2.2d, v4.2d
    3dcc:	add	v6.2d, v1.2d, v4.2d
    3dd0:	add	v17.2d, v3.2d, v4.2d
    3dd4:	st2	{v16.2d, v17.2d}, [x13]
    3dd8:	st2	{v5.2d, v6.2d}, [x11]
    3ddc:	add	x11, x11, #0x40
    3de0:	b.ne	3db0 <_nl_expand_alias@@Base+0x4fc>  // b.any
    3de4:	mov	x27, x15
    3de8:	cmp	x15, x9
    3dec:	mov	x26, x14
    3df0:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3df4:	mov	x0, x17
    3df8:	b.eq	3d1c <_nl_expand_alias@@Base+0x468>  // b.none
    3dfc:	b	3e10 <_nl_expand_alias@@Base+0x55c>
    3e00:	mov	x26, x14
    3e04:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3e08:	mov	x27, x15
    3e0c:	mov	x0, x17
    3e10:	add	x10, x10, x9, lsl #4
    3e14:	add	x10, x10, #0x8
    3e18:	ldp	x11, x12, [x10, #-8]
    3e1c:	add	x9, x9, #0x1
    3e20:	cmp	x9, x27
    3e24:	add	x11, x11, x8
    3e28:	add	x12, x12, x8
    3e2c:	stp	x11, x12, [x10, #-8]
    3e30:	add	x10, x10, #0x10
    3e34:	b.cc	3e18 <_nl_expand_alias@@Base+0x564>  // b.lo, b.ul, b.last
    3e38:	b	3d1c <_nl_expand_alias@@Base+0x468>
    3e3c:	mov	x20, xzr
    3e40:	b	3e84 <_nl_expand_alias@@Base+0x5d0>
    3e44:	mov	x0, x21
    3e48:	bl	1de0 <fclose@plt>
    3e4c:	mov	x20, xzr
    3e50:	b	3e84 <_nl_expand_alias@@Base+0x5d0>
    3e54:	mov	x0, x21
    3e58:	bl	1de0 <fclose@plt>
    3e5c:	ldr	x20, [x19, #24]
    3e60:	cbz	x20, 3e84 <_nl_expand_alias@@Base+0x5d0>
    3e64:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3e68:	ldr	x0, [x8, #928]
    3e6c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    3e70:	ldr	x1, [x8, #920]
    3e74:	adrp	x3, 3000 <libintl_gettext@@Base+0xa5c>
    3e78:	add	x3, x3, #0xa14
    3e7c:	mov	w2, #0x10                  	// #16
    3e80:	bl	1d80 <qsort@plt>
    3e84:	mov	x0, x20
    3e88:	mov	sp, x29
    3e8c:	ldp	x20, x19, [sp, #80]
    3e90:	ldp	x22, x21, [sp, #64]
    3e94:	ldp	x24, x23, [sp, #48]
    3e98:	ldp	x26, x25, [sp, #32]
    3e9c:	ldp	x28, x27, [sp, #16]
    3ea0:	ldp	x29, x30, [sp], #96
    3ea4:	ret

0000000000003ea8 <libintl_textdomain@@Base>:
    3ea8:	stp	x29, x30, [sp, #-64]!
    3eac:	stp	x24, x23, [sp, #16]
    3eb0:	stp	x22, x21, [sp, #32]
    3eb4:	stp	x20, x19, [sp, #48]
    3eb8:	mov	x29, sp
    3ebc:	cbz	x0, 3f3c <libintl_textdomain@@Base+0x94>
    3ec0:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    3ec4:	ldr	x22, [x22, #4064]
    3ec8:	mov	x20, x0
    3ecc:	cbz	x22, 3ee0 <libintl_textdomain@@Base+0x38>
    3ed0:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    3ed4:	ldr	x0, [x0, #4048]
    3ed8:	bl	1f30 <pthread_rwlock_wrlock@plt>
    3edc:	cbnz	w0, 3fcc <libintl_textdomain@@Base+0x124>
    3ee0:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    3ee4:	ldr	x23, [x23, #4008]
    3ee8:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    3eec:	ldrb	w8, [x20]
    3ef0:	ldr	x19, [x23]
    3ef4:	ldr	x24, [x24, #4024]
    3ef8:	cbz	w8, 3f4c <libintl_textdomain@@Base+0xa4>
    3efc:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    3f00:	ldr	x21, [x21, #4024]
    3f04:	mov	x0, x20
    3f08:	mov	x1, x21
    3f0c:	bl	1f60 <strcmp@plt>
    3f10:	cbz	w0, 3f50 <libintl_textdomain@@Base+0xa8>
    3f14:	mov	x0, x20
    3f18:	mov	x1, x19
    3f1c:	bl	1f60 <strcmp@plt>
    3f20:	cbz	w0, 3fb0 <libintl_textdomain@@Base+0x108>
    3f24:	mov	x0, x20
    3f28:	bl	1ee0 <strdup@plt>
    3f2c:	mov	x21, x0
    3f30:	cbnz	x0, 3f50 <libintl_textdomain@@Base+0xa8>
    3f34:	mov	x19, xzr
    3f38:	b	3f84 <libintl_textdomain@@Base+0xdc>
    3f3c:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    3f40:	ldr	x8, [x8, #4008]
    3f44:	ldr	x19, [x8]
    3f48:	b	3f98 <libintl_textdomain@@Base+0xf0>
    3f4c:	mov	x21, x24
    3f50:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    3f54:	ldr	x8, [x8, #4032]
    3f58:	cmp	x19, x24
    3f5c:	str	x21, [x23]
    3f60:	ldr	w9, [x8]
    3f64:	add	w9, w9, #0x1
    3f68:	str	w9, [x8]
    3f6c:	b.eq	3f80 <libintl_textdomain@@Base+0xd8>  // b.none
    3f70:	cmp	x19, x21
    3f74:	b.eq	3f80 <libintl_textdomain@@Base+0xd8>  // b.none
    3f78:	mov	x0, x19
    3f7c:	bl	1fb0 <free@plt>
    3f80:	mov	x19, x21
    3f84:	cbz	x22, 3f98 <libintl_textdomain@@Base+0xf0>
    3f88:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    3f8c:	ldr	x0, [x0, #4048]
    3f90:	bl	1fd0 <pthread_rwlock_unlock@plt>
    3f94:	cbnz	w0, 3fcc <libintl_textdomain@@Base+0x124>
    3f98:	mov	x0, x19
    3f9c:	ldp	x20, x19, [sp, #48]
    3fa0:	ldp	x22, x21, [sp, #32]
    3fa4:	ldp	x24, x23, [sp, #16]
    3fa8:	ldp	x29, x30, [sp], #64
    3fac:	ret
    3fb0:	cbz	x19, 3f84 <libintl_textdomain@@Base+0xdc>
    3fb4:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    3fb8:	ldr	x8, [x8, #4032]
    3fbc:	ldr	w9, [x8]
    3fc0:	add	w9, w9, #0x1
    3fc4:	str	w9, [x8]
    3fc8:	b	3f84 <libintl_textdomain@@Base+0xdc>
    3fcc:	bl	1f20 <abort@plt>
    3fd0:	sub	sp, sp, #0xc0
    3fd4:	stp	x29, x30, [sp, #96]
    3fd8:	add	x29, sp, #0x60
    3fdc:	stp	x28, x27, [sp, #112]
    3fe0:	stp	x26, x25, [sp, #128]
    3fe4:	stp	x24, x23, [sp, #144]
    3fe8:	stp	x22, x21, [sp, #160]
    3fec:	stp	x20, x19, [sp, #176]
    3ff0:	stp	x6, x7, [x29, #-24]
    3ff4:	ldrb	w8, [x4]
    3ff8:	mov	x23, x0
    3ffc:	mov	x0, x4
    4000:	stur	x5, [x29, #-32]
    4004:	cmp	w8, #0x2f
    4008:	mov	w26, w3
    400c:	str	x1, [sp, #48]
    4010:	csel	x27, xzr, x2, eq  // eq = none
    4014:	stur	x4, [x29, #-40]
    4018:	bl	1cc0 <strlen@plt>
    401c:	mov	x25, x0
    4020:	mov	x19, xzr
    4024:	tbz	w26, #2, 4034 <libintl_textdomain@@Base+0x18c>
    4028:	ldur	x0, [x29, #-32]
    402c:	bl	1cc0 <strlen@plt>
    4030:	add	x19, x0, #0x1
    4034:	tbz	w26, #1, 4050 <libintl_textdomain@@Base+0x1a8>
    4038:	ldur	x0, [x29, #-24]
    403c:	bl	1cc0 <strlen@plt>
    4040:	add	x20, x0, #0x1
    4044:	tbnz	w26, #0, 4058 <libintl_textdomain@@Base+0x1b0>
    4048:	mov	x21, xzr
    404c:	b	4064 <libintl_textdomain@@Base+0x1bc>
    4050:	mov	x20, xzr
    4054:	tbz	w26, #0, 4048 <libintl_textdomain@@Base+0x1a0>
    4058:	ldur	x0, [x29, #-16]
    405c:	bl	1cc0 <strlen@plt>
    4060:	add	x21, x0, #0x1
    4064:	ldp	x24, x8, [x29, #96]
    4068:	stur	x8, [x29, #-8]
    406c:	tbz	w26, #3, 4080 <libintl_textdomain@@Base+0x1d8>
    4070:	mov	x0, x24
    4074:	bl	1cc0 <strlen@plt>
    4078:	add	x22, x0, #0x1
    407c:	b	4084 <libintl_textdomain@@Base+0x1dc>
    4080:	mov	x22, xzr
    4084:	ldur	x0, [x29, #-8]
    4088:	bl	1cc0 <strlen@plt>
    408c:	add	x8, x25, x27
    4090:	add	x8, x8, x19
    4094:	add	x8, x8, x20
    4098:	add	x8, x8, x21
    409c:	add	x8, x8, x22
    40a0:	add	x8, x8, x0
    40a4:	add	x0, x8, #0x2
    40a8:	bl	1e10 <malloc@plt>
    40ac:	cbz	x0, 4174 <libintl_textdomain@@Base+0x2cc>
    40b0:	mov	x28, x0
    40b4:	cbz	x27, 40e4 <libintl_textdomain@@Base+0x23c>
    40b8:	ldr	x1, [sp, #48]
    40bc:	mov	x0, x28
    40c0:	mov	x2, x27
    40c4:	bl	1c70 <memcpy@plt>
    40c8:	mov	w2, #0x3a                  	// #58
    40cc:	mov	x0, x28
    40d0:	mov	x1, x27
    40d4:	bl	1eb0 <argz_stringify@plt>
    40d8:	add	x0, x28, x27
    40dc:	mov	w8, #0x2f                  	// #47
    40e0:	sturb	w8, [x0, #-1]
    40e4:	ldur	x1, [x29, #-40]
    40e8:	bl	1dd0 <stpcpy@plt>
    40ec:	tbnz	w26, #2, 417c <libintl_textdomain@@Base+0x2d4>
    40f0:	tbnz	w26, #1, 4190 <libintl_textdomain@@Base+0x2e8>
    40f4:	tbnz	w26, #0, 41a4 <libintl_textdomain@@Base+0x2fc>
    40f8:	tbz	w26, #3, 410c <libintl_textdomain@@Base+0x264>
    40fc:	mov	w8, #0x40                  	// #64
    4100:	strb	w8, [x0], #1
    4104:	mov	x1, x24
    4108:	bl	1dd0 <stpcpy@plt>
    410c:	ldur	x1, [x29, #-8]
    4110:	ldr	w20, [x29, #112]
    4114:	mov	w8, #0x2f                  	// #47
    4118:	strb	w8, [x0], #1
    411c:	bl	1dd0 <stpcpy@plt>
    4120:	ldr	x25, [x23]
    4124:	cbz	x25, 41bc <libintl_textdomain@@Base+0x314>
    4128:	mov	x19, x23
    412c:	b	4138 <libintl_textdomain@@Base+0x290>
    4130:	ldr	x25, [x25, #24]
    4134:	cbz	x25, 416c <libintl_textdomain@@Base+0x2c4>
    4138:	ldr	x0, [x25]
    413c:	cbz	x0, 4130 <libintl_textdomain@@Base+0x288>
    4140:	mov	x1, x28
    4144:	bl	1f60 <strcmp@plt>
    4148:	cmp	w0, #0x0
    414c:	add	x8, x25, #0x18
    4150:	cset	w9, eq  // eq = none
    4154:	cset	w10, lt  // lt = tstop
    4158:	csel	x11, xzr, x25, lt  // lt = tstop
    415c:	csel	x19, x8, x19, gt
    4160:	csel	x25, x25, x11, eq  // eq = none
    4164:	cmp	w10, w9
    4168:	b.eq	4130 <libintl_textdomain@@Base+0x288>  // b.none
    416c:	cbnz	w20, 41c4 <libintl_textdomain@@Base+0x31c>
    4170:	b	43a4 <libintl_textdomain@@Base+0x4fc>
    4174:	mov	x25, xzr
    4178:	b	43bc <libintl_textdomain@@Base+0x514>
    417c:	ldur	x1, [x29, #-32]
    4180:	mov	w8, #0x5f                  	// #95
    4184:	strb	w8, [x0], #1
    4188:	bl	1dd0 <stpcpy@plt>
    418c:	tbz	w26, #1, 40f4 <libintl_textdomain@@Base+0x24c>
    4190:	ldur	x1, [x29, #-24]
    4194:	mov	w8, #0x2e                  	// #46
    4198:	strb	w8, [x0], #1
    419c:	bl	1dd0 <stpcpy@plt>
    41a0:	tbz	w26, #0, 40f8 <libintl_textdomain@@Base+0x250>
    41a4:	ldur	x1, [x29, #-16]
    41a8:	mov	w8, #0x2e                  	// #46
    41ac:	strb	w8, [x0], #1
    41b0:	bl	1dd0 <stpcpy@plt>
    41b4:	tbnz	w26, #3, 40fc <libintl_textdomain@@Base+0x254>
    41b8:	b	410c <libintl_textdomain@@Base+0x264>
    41bc:	mov	x19, x23
    41c0:	cbz	w20, 43a4 <libintl_textdomain@@Base+0x4fc>
    41c4:	cbnz	x25, 43a4 <libintl_textdomain@@Base+0x4fc>
    41c8:	cbz	x27, 41e0 <libintl_textdomain@@Base+0x338>
    41cc:	ldr	x0, [sp, #48]
    41d0:	mov	x1, x27
    41d4:	bl	1f50 <argz_count@plt>
    41d8:	mov	x20, x0
    41dc:	b	41e4 <libintl_textdomain@@Base+0x33c>
    41e0:	mov	w20, #0x1                   	// #1
    41e4:	mov	w8, #0xffffd555            	// #-10923
    41e8:	mov	w9, #0x5555                	// #21845
    41ec:	and	w8, w8, w26, asr #1
    41f0:	and	w9, w26, w9
    41f4:	mov	w10, #0xfffff333            	// #-3277
    41f8:	add	w8, w8, w9
    41fc:	mov	w9, #0x3333                	// #13107
    4200:	and	w10, w10, w8, asr #2
    4204:	and	w8, w8, w9
    4208:	add	w8, w10, w8
    420c:	mov	w9, #0xf0f                 	// #3855
    4210:	add	w8, w8, w8, lsr #4
    4214:	and	w8, w8, w9
    4218:	add	w8, w8, w8, lsr #8
    421c:	and	w8, w8, #0x1f
    4220:	lsl	x8, x20, x8
    4224:	cmp	x20, #0x1
    4228:	cinc	x8, x8, hi  // hi = pmore
    422c:	lsl	x8, x8, #3
    4230:	add	x0, x8, #0x28
    4234:	bl	1e10 <malloc@plt>
    4238:	mov	x25, x0
    423c:	cbz	x0, 43a4 <libintl_textdomain@@Base+0x4fc>
    4240:	cmp	x20, #0x2
    4244:	mov	w8, #0x3                   	// #3
    4248:	cset	w9, cc  // cc = lo, ul, last
    424c:	cmp	x20, #0x1
    4250:	cset	w10, hi  // hi = pmore
    4254:	bics	wzr, w8, w26
    4258:	cset	w8, eq  // eq = none
    425c:	orr	w8, w8, w10
    4260:	str	x28, [x25]
    4264:	str	xzr, [x25, #16]
    4268:	str	w8, [x25, #8]
    426c:	ldr	x8, [x19]
    4270:	subs	w28, w26, w9
    4274:	str	x8, [x25, #24]
    4278:	str	x25, [x19]
    427c:	b.mi	43b0 <libintl_textdomain@@Base+0x508>  // b.first
    4280:	ldr	x9, [sp, #48]
    4284:	cmp	x27, #0x0
    4288:	cset	w8, eq  // eq = none
    428c:	str	x20, [sp, #40]
    4290:	cmp	x9, #0x0
    4294:	add	x21, x9, x27
    4298:	cset	w9, eq  // eq = none
    429c:	mov	x19, xzr
    42a0:	mvn	w10, w26
    42a4:	add	x20, x25, #0x20
    42a8:	orr	w26, w9, w8
    42ac:	mov	w22, #0x1                   	// #1
    42b0:	str	w10, [sp, #36]
    42b4:	str	x27, [sp, #24]
    42b8:	b	4300 <libintl_textdomain@@Base+0x458>
    42bc:	ldur	x8, [x29, #-8]
    42c0:	ldr	x1, [sp, #48]
    42c4:	ldp	x4, x5, [x29, #-40]
    42c8:	ldp	x6, x7, [x29, #-24]
    42cc:	mov	x0, x23
    42d0:	mov	x2, x27
    42d4:	mov	w3, w28
    42d8:	str	w22, [sp, #16]
    42dc:	stp	x24, x8, [sp]
    42e0:	bl	3fd0 <libintl_textdomain@@Base+0x128>
    42e4:	ldr	w10, [sp, #36]
    42e8:	add	x8, x19, #0x1
    42ec:	str	x0, [x20, x19, lsl #3]
    42f0:	mov	x19, x8
    42f4:	cmp	w28, #0x0
    42f8:	sub	w28, w28, #0x1
    42fc:	b.le	43b4 <libintl_textdomain@@Base+0x50c>
    4300:	tst	w28, w10
    4304:	b.ne	42f4 <libintl_textdomain@@Base+0x44c>  // b.any
    4308:	and	w8, w28, #0x3
    430c:	cmp	w8, #0x3
    4310:	b.eq	42f4 <libintl_textdomain@@Base+0x44c>  // b.none
    4314:	ldr	x8, [sp, #40]
    4318:	cmp	x8, #0x2
    431c:	b.cc	42bc <libintl_textdomain@@Base+0x414>  // b.lo, b.ul, b.last
    4320:	mov	x27, x23
    4324:	mov	x23, xzr
    4328:	b	4370 <libintl_textdomain@@Base+0x4c8>
    432c:	ldr	x23, [sp, #48]
    4330:	tbnz	w26, #0, 4394 <libintl_textdomain@@Base+0x4ec>
    4334:	mov	x0, x23
    4338:	bl	1cc0 <strlen@plt>
    433c:	ldur	x8, [x29, #-8]
    4340:	ldp	x4, x5, [x29, #-40]
    4344:	ldp	x6, x7, [x29, #-24]
    4348:	add	x2, x0, #0x1
    434c:	mov	x0, x27
    4350:	mov	x1, x23
    4354:	mov	w3, w28
    4358:	str	w22, [sp, #16]
    435c:	stp	x24, x8, [sp]
    4360:	bl	3fd0 <libintl_textdomain@@Base+0x128>
    4364:	add	x8, x19, #0x1
    4368:	str	x0, [x20, x19, lsl #3]
    436c:	mov	x19, x8
    4370:	cbz	x23, 432c <libintl_textdomain@@Base+0x484>
    4374:	cmp	x21, x23
    4378:	b.ls	438c <libintl_textdomain@@Base+0x4e4>  // b.plast
    437c:	mov	x0, x23
    4380:	bl	1cc0 <strlen@plt>
    4384:	add	x8, x23, x0
    4388:	add	x23, x8, #0x1
    438c:	cmp	x23, x21
    4390:	b.cc	4334 <libintl_textdomain@@Base+0x48c>  // b.lo, b.ul, b.last
    4394:	mov	x23, x27
    4398:	ldr	x27, [sp, #24]
    439c:	ldr	w10, [sp, #36]
    43a0:	b	42f4 <libintl_textdomain@@Base+0x44c>
    43a4:	mov	x0, x28
    43a8:	bl	1fb0 <free@plt>
    43ac:	b	43bc <libintl_textdomain@@Base+0x514>
    43b0:	mov	x19, xzr
    43b4:	add	x8, x25, x19, lsl #3
    43b8:	str	xzr, [x8, #32]
    43bc:	mov	x0, x25
    43c0:	ldp	x20, x19, [sp, #176]
    43c4:	ldp	x22, x21, [sp, #160]
    43c8:	ldp	x24, x23, [sp, #144]
    43cc:	ldp	x26, x25, [sp, #128]
    43d0:	ldp	x28, x27, [sp, #112]
    43d4:	ldp	x29, x30, [sp, #96]
    43d8:	add	sp, sp, #0xc0
    43dc:	ret
    43e0:	stp	x29, x30, [sp, #-64]!
    43e4:	stp	x20, x19, [sp, #48]
    43e8:	mov	x19, x1
    43ec:	mov	x20, x0
    43f0:	stp	x24, x23, [sp, #16]
    43f4:	stp	x22, x21, [sp, #32]
    43f8:	mov	x29, sp
    43fc:	cbz	x1, 4450 <libintl_textdomain@@Base+0x5a8>
    4400:	bl	1f80 <__ctype_b_loc@plt>
    4404:	ldr	x10, [x0]
    4408:	mov	x9, xzr
    440c:	mov	w8, #0x1                   	// #1
    4410:	mov	w11, #0x408                 	// #1032
    4414:	mov	x12, x20
    4418:	mov	x13, x19
    441c:	ldrb	w14, [x12], #1
    4420:	ldrh	w14, [x10, x14, lsl #1]
    4424:	bics	wzr, w11, w14
    4428:	ubfx	x14, x14, #3, #1
    442c:	csel	w8, wzr, w8, eq  // eq = none
    4430:	subs	x13, x13, #0x1
    4434:	add	x9, x9, x14
    4438:	b.ne	441c <libintl_textdomain@@Base+0x574>  // b.any
    443c:	add	x9, x9, #0x1
    4440:	cbnz	w8, 4454 <libintl_textdomain@@Base+0x5ac>
    4444:	mov	w22, wzr
    4448:	mov	x8, xzr
    444c:	b	445c <libintl_textdomain@@Base+0x5b4>
    4450:	mov	w9, #0x1                   	// #1
    4454:	mov	w22, #0x1                   	// #1
    4458:	mov	w8, #0x3                   	// #3
    445c:	add	x0, x9, x8
    4460:	bl	1e10 <malloc@plt>
    4464:	mov	x21, x0
    4468:	cbz	x0, 44cc <libintl_textdomain@@Base+0x624>
    446c:	mov	x23, x21
    4470:	cbz	w22, 4484 <libintl_textdomain@@Base+0x5dc>
    4474:	mov	w8, #0x7369                	// #29545
    4478:	movk	w8, #0x6f, lsl #16
    447c:	mov	x23, x21
    4480:	str	w8, [x23], #3
    4484:	cbz	x19, 44c8 <libintl_textdomain@@Base+0x620>
    4488:	bl	1f80 <__ctype_b_loc@plt>
    448c:	mov	x22, x0
    4490:	b	44b0 <libintl_textdomain@@Base+0x608>
    4494:	bl	1db0 <__ctype_tolower_loc@plt>
    4498:	ldr	x8, [x0]
    449c:	ldr	w24, [x8, x24, lsl #2]
    44a0:	strb	w24, [x23], #1
    44a4:	subs	x19, x19, #0x1
    44a8:	add	x20, x20, #0x1
    44ac:	b.eq	44c8 <libintl_textdomain@@Base+0x620>  // b.none
    44b0:	ldr	x8, [x22]
    44b4:	ldrb	w24, [x20]
    44b8:	ldrh	w8, [x8, x24, lsl #1]
    44bc:	tbnz	w8, #10, 4494 <libintl_textdomain@@Base+0x5ec>
    44c0:	tbnz	w8, #11, 44a0 <libintl_textdomain@@Base+0x5f8>
    44c4:	b	44a4 <libintl_textdomain@@Base+0x5fc>
    44c8:	strb	wzr, [x23]
    44cc:	mov	x0, x21
    44d0:	ldp	x20, x19, [sp, #48]
    44d4:	ldp	x22, x21, [sp, #32]
    44d8:	ldp	x24, x23, [sp, #16]
    44dc:	ldp	x29, x30, [sp], #64
    44e0:	ret
    44e4:	stp	x29, x30, [sp, #-80]!
    44e8:	mov	x11, #0x1                   	// #1
    44ec:	movk	x11, #0x4, lsl #16
    44f0:	stp	x24, x23, [sp, #32]
    44f4:	stp	x22, x21, [sp, #48]
    44f8:	stp	x20, x19, [sp, #64]
    44fc:	mov	x22, x5
    4500:	mov	x19, x4
    4504:	mov	x20, x3
    4508:	mov	x21, x2
    450c:	mov	x24, x0
    4510:	mov	x9, xzr
    4514:	mov	w10, #0x1                   	// #1
    4518:	movk	x11, #0x2, lsl #48
    451c:	stp	x26, x25, [sp, #16]
    4520:	mov	x29, sp
    4524:	str	xzr, [x2]
    4528:	str	xzr, [x3]
    452c:	str	xzr, [x4]
    4530:	str	xzr, [x5]
    4534:	str	x0, [x1]
    4538:	ldrb	w8, [x24, x9]
    453c:	sub	w12, w8, #0x2e
    4540:	cmp	w12, #0x31
    4544:	b.hi	4554 <libintl_textdomain@@Base+0x6ac>  // b.pmore
    4548:	lsl	x12, x10, x12
    454c:	tst	x12, x11
    4550:	b.ne	4560 <libintl_textdomain@@Base+0x6b8>  // b.any
    4554:	cbz	w8, 4560 <libintl_textdomain@@Base+0x6b8>
    4558:	add	x9, x9, #0x1
    455c:	b	4538 <libintl_textdomain@@Base+0x690>
    4560:	cbz	x9, 45b0 <libintl_textdomain@@Base+0x708>
    4564:	cmp	w8, #0x5f
    4568:	b.ne	45c4 <libintl_textdomain@@Base+0x71c>  // b.any
    456c:	add	x25, x24, x9
    4570:	strb	wzr, [x25], #1
    4574:	str	x25, [x20]
    4578:	ldrb	w8, [x25]
    457c:	cbz	w8, 459c <libintl_textdomain@@Base+0x6f4>
    4580:	cmp	w8, #0x2e
    4584:	b.eq	459c <libintl_textdomain@@Base+0x6f4>  // b.none
    4588:	cmp	w8, #0x40
    458c:	b.eq	459c <libintl_textdomain@@Base+0x6f4>  // b.none
    4590:	add	x25, x25, #0x1
    4594:	ldrb	w8, [x25]
    4598:	cbnz	w8, 4580 <libintl_textdomain@@Base+0x6d8>
    459c:	mov	w26, #0x4                   	// #4
    45a0:	cmp	w8, #0x2e
    45a4:	b.eq	45d4 <libintl_textdomain@@Base+0x72c>  // b.none
    45a8:	mov	w23, w26
    45ac:	b	464c <libintl_textdomain@@Base+0x7a4>
    45b0:	mov	x0, x24
    45b4:	bl	1cc0 <strlen@plt>
    45b8:	mov	w23, wzr
    45bc:	add	x25, x24, x0
    45c0:	b	464c <libintl_textdomain@@Base+0x7a4>
    45c4:	mov	w26, wzr
    45c8:	add	x25, x24, x9
    45cc:	cmp	w8, #0x2e
    45d0:	b.ne	45a8 <libintl_textdomain@@Base+0x700>  // b.any
    45d4:	mov	x0, x25
    45d8:	mov	x1, xzr
    45dc:	strb	wzr, [x0], #1
    45e0:	str	x0, [x19]
    45e4:	ldrb	w8, [x0, x1]
    45e8:	orr	w8, w8, #0x40
    45ec:	cmp	w8, #0x40
    45f0:	b.eq	45fc <libintl_textdomain@@Base+0x754>  // b.none
    45f4:	add	x1, x1, #0x1
    45f8:	b	45e4 <libintl_textdomain@@Base+0x73c>
    45fc:	add	x8, x25, x1
    4600:	add	x25, x8, #0x1
    4604:	orr	w23, w26, #0x2
    4608:	cbz	x1, 464c <libintl_textdomain@@Base+0x7a4>
    460c:	ldrb	w8, [x0]
    4610:	cbz	w8, 464c <libintl_textdomain@@Base+0x7a4>
    4614:	bl	43e0 <libintl_textdomain@@Base+0x538>
    4618:	str	x0, [x22]
    461c:	cbz	x0, 463c <libintl_textdomain@@Base+0x794>
    4620:	mov	x24, x0
    4624:	ldr	x0, [x19]
    4628:	mov	x1, x24
    462c:	bl	1f60 <strcmp@plt>
    4630:	cbz	w0, 4644 <libintl_textdomain@@Base+0x79c>
    4634:	orr	w23, w26, #0x3
    4638:	b	464c <libintl_textdomain@@Base+0x7a4>
    463c:	mov	w23, #0xffffffff            	// #-1
    4640:	b	46a4 <libintl_textdomain@@Base+0x7fc>
    4644:	mov	x0, x24
    4648:	bl	1fb0 <free@plt>
    464c:	ldrb	w8, [x25]
    4650:	cmp	w8, #0x40
    4654:	b.ne	4670 <libintl_textdomain@@Base+0x7c8>  // b.any
    4658:	strb	wzr, [x25], #1
    465c:	str	x25, [x21]
    4660:	ldrb	w8, [x25]
    4664:	orr	w9, w23, #0x8
    4668:	cmp	w8, #0x0
    466c:	csel	w23, w23, w9, eq  // eq = none
    4670:	ldr	x8, [x20]
    4674:	cbz	x8, 4688 <libintl_textdomain@@Base+0x7e0>
    4678:	ldrb	w8, [x8]
    467c:	and	w9, w23, #0xfffffffb
    4680:	cmp	w8, #0x0
    4684:	csel	w23, w9, w23, eq  // eq = none
    4688:	ldr	x8, [x19]
    468c:	cbz	x8, 46a4 <libintl_textdomain@@Base+0x7fc>
    4690:	ldrb	w8, [x8]
    4694:	and	w9, w23, #0xfffffffd
    4698:	cmp	w8, #0x0
    469c:	csel	w0, w9, w23, eq  // eq = none
    46a0:	b	46a8 <libintl_textdomain@@Base+0x800>
    46a4:	mov	w0, w23
    46a8:	ldp	x20, x19, [sp, #64]
    46ac:	ldp	x22, x21, [sp, #48]
    46b0:	ldp	x24, x23, [sp, #32]
    46b4:	ldp	x26, x25, [sp, #16]
    46b8:	ldp	x29, x30, [sp], #80
    46bc:	ret
    46c0:	stp	x29, x30, [sp, #-96]!
    46c4:	stp	x28, x27, [sp, #16]
    46c8:	stp	x26, x25, [sp, #32]
    46cc:	stp	x24, x23, [sp, #48]
    46d0:	stp	x22, x21, [sp, #64]
    46d4:	stp	x20, x19, [sp, #80]
    46d8:	mov	x29, sp
    46dc:	sub	sp, sp, #0x90
    46e0:	cbz	x1, 475c <libintl_textdomain@@Base+0x8b4>
    46e4:	mov	w22, w5
    46e8:	mov	x23, x4
    46ec:	mov	w28, w3
    46f0:	mov	x21, x1
    46f4:	mov	x19, x0
    46f8:	stur	x2, [x29, #-120]
    46fc:	bl	20c0 <__errno_location@plt>
    4700:	adrp	x27, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    4704:	ldr	w24, [x0]
    4708:	ldr	x27, [x27, #4064]
    470c:	mov	x26, x0
    4710:	cbz	x27, 4724 <libintl_textdomain@@Base+0x87c>
    4714:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4718:	add	x0, x0, #0x2d8
    471c:	bl	1cf0 <pthread_rwlock_rdlock@plt>
    4720:	cbnz	w0, 4f14 <libintl_textdomain@@Base+0x106c>
    4724:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4728:	ldr	x8, [x8, #720]
    472c:	cmp	x19, #0x0
    4730:	stur	xzr, [x29, #-40]
    4734:	stur	x21, [x29, #-16]
    4738:	csel	x25, x8, x19, eq  // eq = none
    473c:	cmp	w22, #0x6
    4740:	stur	x25, [x29, #-72]
    4744:	stur	w22, [x29, #-64]
    4748:	b.hi	4764 <libintl_textdomain@@Base+0x8bc>  // b.pmore
    474c:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    4750:	add	x8, x8, #0xd50
    4754:	ldr	x20, [x8, w22, sxtw #3]
    4758:	b	476c <libintl_textdomain@@Base+0x8c4>
    475c:	mov	x20, xzr
    4760:	b	4ea8 <libintl_textdomain@@Base+0x1000>
    4764:	adrp	x20, 6000 <libintl_ngettext@@Base+0x700>
    4768:	add	x20, x20, #0xfff
    476c:	mov	w0, w22
    4770:	mov	x1, x20
    4774:	bl	64c0 <libintl_set_relocation_prefix@@Base+0x1d4>
    4778:	adrp	x8, 6000 <libintl_ngettext@@Base+0x700>
    477c:	add	x8, x8, #0xfad
    4780:	cmp	x0, #0x0
    4784:	csel	x19, x8, x0, eq  // eq = none
    4788:	stur	x19, [x29, #-56]
    478c:	cbz	x27, 480c <libintl_textdomain@@Base+0x964>
    4790:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4794:	add	x0, x0, #0x310
    4798:	bl	1cf0 <pthread_rwlock_rdlock@plt>
    479c:	cbnz	w0, 4f14 <libintl_textdomain@@Base+0x106c>
    47a0:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    47a4:	adrp	x2, 4000 <libintl_textdomain@@Base+0x158>
    47a8:	add	x1, x1, #0x3c8
    47ac:	add	x2, x2, #0xf18
    47b0:	sub	x0, x29, #0x48
    47b4:	bl	1dc0 <tfind@plt>
    47b8:	cbz	x27, 4804 <libintl_textdomain@@Base+0x95c>
    47bc:	mov	x27, x20
    47c0:	mov	w20, w24
    47c4:	mov	w24, w28
    47c8:	mov	x28, x23
    47cc:	mov	w23, w22
    47d0:	mov	x22, x0
    47d4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    47d8:	add	x0, x0, #0x310
    47dc:	bl	1fd0 <pthread_rwlock_unlock@plt>
    47e0:	cbnz	w0, 4f14 <libintl_textdomain@@Base+0x106c>
    47e4:	mov	x0, x22
    47e8:	mov	w22, w23
    47ec:	mov	x23, x28
    47f0:	mov	w28, w24
    47f4:	mov	w24, w20
    47f8:	mov	x20, x27
    47fc:	adrp	x27, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    4800:	ldr	x27, [x27, #4064]
    4804:	cbnz	x0, 4828 <libintl_textdomain@@Base+0x980>
    4808:	b	48a4 <libintl_textdomain@@Base+0x9fc>
    480c:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4810:	adrp	x2, 4000 <libintl_textdomain@@Base+0x158>
    4814:	add	x1, x1, #0x3c8
    4818:	add	x2, x2, #0xf18
    481c:	sub	x0, x29, #0x48
    4820:	bl	1dc0 <tfind@plt>
    4824:	cbz	x0, 48a4 <libintl_textdomain@@Base+0x9fc>
    4828:	adrp	x9, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    482c:	ldr	x8, [x0]
    4830:	ldr	x9, [x9, #4032]
    4834:	ldr	w10, [x8, #24]
    4838:	ldr	w9, [x9]
    483c:	cmp	w10, w9
    4840:	b.ne	48a4 <libintl_textdomain@@Base+0x9fc>  // b.any
    4844:	cbz	w28, 4a20 <libintl_textdomain@@Base+0xb78>
    4848:	ldp	x9, x19, [x8, #32]
    484c:	ldr	x21, [x8, #48]
    4850:	mov	x1, x23
    4854:	ldr	x20, [x9, #16]
    4858:	ldr	x0, [x20, #184]
    485c:	bl	5734 <libintl_textdomain@@Base+0x188c>
    4860:	ldr	x8, [x20, #192]
    4864:	add	x21, x19, x21
    4868:	mov	x20, x19
    486c:	cmp	x0, x8
    4870:	csel	x8, x0, xzr, cc  // cc = lo, ul, last
    4874:	add	x22, x8, #0x1
    4878:	subs	x22, x22, #0x1
    487c:	b.eq	489c <libintl_textdomain@@Base+0x9f4>  // b.none
    4880:	mov	x0, x20
    4884:	bl	1cc0 <strlen@plt>
    4888:	add	x8, x20, x0
    488c:	add	x20, x8, #0x1
    4890:	cmp	x20, x21
    4894:	b.cc	4878 <libintl_textdomain@@Base+0x9d0>  // b.lo, b.ul, b.last
    4898:	mov	x20, x19
    489c:	cbnz	x27, 4a28 <libintl_textdomain@@Base+0xb80>
    48a0:	b	4a38 <libintl_textdomain@@Base+0xb90>
    48a4:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    48a8:	ldr	w8, [x8, #976]
    48ac:	stur	x19, [x29, #-128]
    48b0:	stur	x0, [x29, #-104]
    48b4:	cbnz	w8, 48f4 <libintl_textdomain@@Base+0xa4c>
    48b8:	bl	1d60 <getuid@plt>
    48bc:	mov	w19, w0
    48c0:	bl	1d10 <geteuid@plt>
    48c4:	cmp	w19, w0
    48c8:	b.ne	48e8 <libintl_textdomain@@Base+0xa40>  // b.any
    48cc:	bl	1fc0 <getgid@plt>
    48d0:	mov	w19, w0
    48d4:	bl	1d00 <getegid@plt>
    48d8:	cmp	w19, w0
    48dc:	mov	w8, #0xffffffff            	// #-1
    48e0:	cneg	w8, w8, ne  // ne = any
    48e4:	b	48ec <libintl_textdomain@@Base+0xa44>
    48e8:	mov	w8, #0x1                   	// #1
    48ec:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    48f0:	str	w8, [x9, #976]
    48f4:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    48f8:	ldr	x19, [x8, #3272]
    48fc:	mov	x27, x23
    4900:	stp	w28, w24, [x29, #-96]
    4904:	stp	x26, x21, [x29, #-88]
    4908:	stur	x23, [x29, #-112]
    490c:	stur	w22, [x29, #-132]
    4910:	cbz	x19, 4954 <libintl_textdomain@@Base+0xaac>
    4914:	adrp	x23, 6000 <libintl_ngettext@@Base+0x700>
    4918:	add	x23, x23, #0xf70
    491c:	add	x1, x19, #0x18
    4920:	mov	x0, x25
    4924:	bl	1f60 <strcmp@plt>
    4928:	cmp	w0, #0x0
    492c:	cset	w8, eq  // eq = none
    4930:	cset	w9, lt  // lt = tstop
    4934:	csel	x10, xzr, x19, lt  // lt = tstop
    4938:	csel	x24, x19, x10, eq  // eq = none
    493c:	cmp	w9, w8
    4940:	b.ne	4960 <libintl_textdomain@@Base+0xab8>  // b.any
    4944:	ldr	x19, [x24]
    4948:	cbnz	x19, 491c <libintl_textdomain@@Base+0xa74>
    494c:	mov	x24, xzr
    4950:	b	4a48 <libintl_textdomain@@Base+0xba0>
    4954:	adrp	x23, 6000 <libintl_ngettext@@Base+0x700>
    4958:	mov	x24, xzr
    495c:	b	4a44 <libintl_textdomain@@Base+0xb9c>
    4960:	cbz	x24, 4a40 <libintl_textdomain@@Base+0xb98>
    4964:	ldr	x23, [x24, #8]
    4968:	ldrb	w8, [x23]
    496c:	cmp	w8, #0x2f
    4970:	b.eq	4a48 <libintl_textdomain@@Base+0xba0>  // b.none
    4974:	mov	x0, x23
    4978:	bl	1cc0 <strlen@plt>
    497c:	mov	w8, #0x1012                	// #4114
    4980:	add	x8, x0, x8
    4984:	and	x8, x8, #0xfffffffffffffff0
    4988:	mov	x9, sp
    498c:	mov	x21, x0
    4990:	sub	x19, x9, x8
    4994:	mov	sp, x19
    4998:	mov	w1, #0x1002                	// #4098
    499c:	mov	x0, x19
    49a0:	str	wzr, [x26]
    49a4:	bl	1ca0 <getcwd@plt>
    49a8:	cbnz	x0, 49fc <libintl_textdomain@@Base+0xb54>
    49ac:	add	x22, x21, #0x1
    49b0:	mov	w21, #0x1002                	// #4098
    49b4:	ldr	w8, [x26]
    49b8:	cmp	w8, #0x22
    49bc:	b.ne	4e2c <libintl_textdomain@@Base+0xf84>  // b.any
    49c0:	add	x8, x21, x21, lsr #1
    49c4:	add	x21, x8, #0x20
    49c8:	add	x8, x22, x21
    49cc:	add	x8, x8, #0xf
    49d0:	and	x8, x8, #0xfffffffffffffff0
    49d4:	mov	x9, sp
    49d8:	sub	x19, x9, x8
    49dc:	mov	sp, x19
    49e0:	ldur	x26, [x29, #-88]
    49e4:	mov	x0, x19
    49e8:	mov	x1, x21
    49ec:	str	wzr, [x26]
    49f0:	bl	1ca0 <getcwd@plt>
    49f4:	cbz	x0, 49b4 <libintl_textdomain@@Base+0xb0c>
    49f8:	ldur	w22, [x29, #-132]
    49fc:	mov	x0, x19
    4a00:	bl	1cc0 <strlen@plt>
    4a04:	add	x0, x19, x0
    4a08:	mov	w8, #0x2f                  	// #47
    4a0c:	strh	w8, [x0], #1
    4a10:	mov	x1, x23
    4a14:	bl	1dd0 <stpcpy@plt>
    4a18:	mov	x23, x19
    4a1c:	b	4a48 <libintl_textdomain@@Base+0xba0>
    4a20:	ldr	x20, [x8, #40]
    4a24:	cbz	x27, 4a38 <libintl_textdomain@@Base+0xb90>
    4a28:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4a2c:	add	x0, x0, #0x2d8
    4a30:	bl	1fd0 <pthread_rwlock_unlock@plt>
    4a34:	cbnz	w0, 4f14 <libintl_textdomain@@Base+0x106c>
    4a38:	str	w24, [x26]
    4a3c:	b	4ea8 <libintl_textdomain@@Base+0x1000>
    4a40:	adrp	x23, 6000 <libintl_ngettext@@Base+0x700>
    4a44:	add	x23, x23, #0xf70
    4a48:	mov	w0, w22
    4a4c:	mov	x1, x20
    4a50:	bl	64c0 <libintl_set_relocation_prefix@@Base+0x1d4>
    4a54:	cbnz	x0, 4a68 <libintl_textdomain@@Base+0xbc0>
    4a58:	mov	w0, w22
    4a5c:	mov	x1, x20
    4a60:	bl	66ac <libintl_set_relocation_prefix@@Base+0x3c0>
    4a64:	cbz	x0, 4ecc <libintl_textdomain@@Base+0x1024>
    4a68:	mov	x19, x0
    4a6c:	mov	w21, wzr
    4a70:	adrp	x1, 6000 <libintl_ngettext@@Base+0x700>
    4a74:	add	x1, x1, #0xfe2
    4a78:	mov	x0, x19
    4a7c:	bl	1f60 <strcmp@plt>
    4a80:	cbz	w0, 4ab0 <libintl_textdomain@@Base+0xc08>
    4a84:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    4a88:	add	x0, x0, #0x6
    4a8c:	bl	20d0 <getenv@plt>
    4a90:	cbz	x0, 4aa0 <libintl_textdomain@@Base+0xbf8>
    4a94:	ldrb	w8, [x0]
    4a98:	mov	x26, x0
    4a9c:	cbnz	w8, 4ab4 <libintl_textdomain@@Base+0xc0c>
    4aa0:	cbz	w21, 4ab0 <libintl_textdomain@@Base+0xc08>
    4aa4:	bl	64b8 <libintl_set_relocation_prefix@@Base+0x1cc>
    4aa8:	mov	x26, x0
    4aac:	cbnz	x0, 4ab4 <libintl_textdomain@@Base+0xc0c>
    4ab0:	mov	x26, x19
    4ab4:	mov	x0, x25
    4ab8:	bl	1cc0 <strlen@plt>
    4abc:	mov	x21, x0
    4ac0:	mov	x0, x20
    4ac4:	bl	1cc0 <strlen@plt>
    4ac8:	add	x8, x21, x0
    4acc:	add	x8, x8, #0x14
    4ad0:	and	x8, x8, #0xfffffffffffffff0
    4ad4:	mov	x9, sp
    4ad8:	sub	x28, x9, x8
    4adc:	mov	sp, x28
    4ae0:	mov	x0, x28
    4ae4:	mov	x1, x20
    4ae8:	bl	1dd0 <stpcpy@plt>
    4aec:	mov	x19, x0
    4af0:	mov	w8, #0x2f                  	// #47
    4af4:	strh	w8, [x19], #1
    4af8:	mov	x0, x19
    4afc:	mov	x1, x25
    4b00:	mov	x2, x21
    4b04:	bl	1c70 <memcpy@plt>
    4b08:	mov	w8, #0x6d2e                	// #27950
    4b0c:	movk	w8, #0x6f, lsl #16
    4b10:	mov	x0, x26
    4b14:	str	w8, [x19, x21]
    4b18:	bl	1cc0 <strlen@plt>
    4b1c:	add	x9, x0, #0x10
    4b20:	mov	x8, sp
    4b24:	and	x9, x9, #0xfffffffffffffff0
    4b28:	sub	x27, x8, x9
    4b2c:	mov	sp, x27
    4b30:	b	4b38 <libintl_textdomain@@Base+0xc90>
    4b34:	add	x26, x26, #0x1
    4b38:	ldrb	w8, [x26]
    4b3c:	cbz	w8, 4ba0 <libintl_textdomain@@Base+0xcf8>
    4b40:	cmp	w8, #0x3a
    4b44:	b.eq	4b34 <libintl_textdomain@@Base+0xc8c>  // b.none
    4b48:	mov	x9, xzr
    4b4c:	ands	w10, w8, #0xff
    4b50:	b.eq	4b74 <libintl_textdomain@@Base+0xccc>  // b.none
    4b54:	cmp	w10, #0x3a
    4b58:	b.eq	4b74 <libintl_textdomain@@Base+0xccc>  // b.none
    4b5c:	add	x10, x26, x9
    4b60:	strb	w8, [x27, x9]
    4b64:	ldrb	w8, [x10, #1]
    4b68:	add	x9, x9, #0x1
    4b6c:	ands	w10, w8, #0xff
    4b70:	b.ne	4b54 <libintl_textdomain@@Base+0xcac>  // b.any
    4b74:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4b78:	ldr	w8, [x8, #976]
    4b7c:	add	x26, x26, x9
    4b80:	strb	wzr, [x27, x9]
    4b84:	cmp	w8, #0x1
    4b88:	b.ne	4ba8 <libintl_textdomain@@Base+0xd00>  // b.any
    4b8c:	mov	w1, #0x2f                  	// #47
    4b90:	mov	x0, x27
    4b94:	bl	1ff0 <strchr@plt>
    4b98:	cbnz	x0, 4b38 <libintl_textdomain@@Base+0xc90>
    4b9c:	b	4ba8 <libintl_textdomain@@Base+0xd00>
    4ba0:	mov	w8, #0x43                  	// #67
    4ba4:	strh	w8, [x27]
    4ba8:	adrp	x1, 6000 <libintl_ngettext@@Base+0x700>
    4bac:	mov	x0, x27
    4bb0:	add	x1, x1, #0xfe2
    4bb4:	mov	x22, x23
    4bb8:	bl	1f60 <strcmp@plt>
    4bbc:	cbz	w0, 4e2c <libintl_textdomain@@Base+0xf84>
    4bc0:	adrp	x1, 6000 <libintl_ngettext@@Base+0x700>
    4bc4:	mov	x0, x27
    4bc8:	add	x1, x1, #0xf82
    4bcc:	bl	1f60 <strcmp@plt>
    4bd0:	cbz	w0, 4e2c <libintl_textdomain@@Base+0xf84>
    4bd4:	mov	x0, x22
    4bd8:	mov	x1, x27
    4bdc:	mov	x2, x28
    4be0:	mov	x3, x24
    4be4:	mov	x23, x22
    4be8:	bl	25b4 <libintl_gettext@@Base+0x10>
    4bec:	cbz	x0, 4b38 <libintl_textdomain@@Base+0xc90>
    4bf0:	ldur	x2, [x29, #-80]
    4bf4:	sub	x4, x29, #0x8
    4bf8:	mov	w3, #0x1                   	// #1
    4bfc:	mov	x1, x24
    4c00:	mov	x19, x0
    4c04:	bl	4f98 <libintl_textdomain@@Base+0x10f0>
    4c08:	cbz	x0, 4c18 <libintl_textdomain@@Base+0xd70>
    4c0c:	mov	x20, x0
    4c10:	cbnz	x20, 4c78 <libintl_textdomain@@Base+0xdd0>
    4c14:	b	4b38 <libintl_textdomain@@Base+0xc90>
    4c18:	ldr	x0, [x19, #32]
    4c1c:	cbz	x0, 4c70 <libintl_textdomain@@Base+0xdc8>
    4c20:	add	x23, x19, #0x28
    4c24:	ldur	x2, [x29, #-80]
    4c28:	sub	x4, x29, #0x8
    4c2c:	mov	w3, #0x1                   	// #1
    4c30:	mov	x1, x24
    4c34:	bl	4f98 <libintl_textdomain@@Base+0x10f0>
    4c38:	cbnz	x0, 4c54 <libintl_textdomain@@Base+0xdac>
    4c3c:	ldr	x0, [x23], #8
    4c40:	cbnz	x0, 4c24 <libintl_textdomain@@Base+0xd7c>
    4c44:	mov	x20, xzr
    4c48:	mov	x23, x22
    4c4c:	cbnz	x20, 4c78 <libintl_textdomain@@Base+0xdd0>
    4c50:	b	4b38 <libintl_textdomain@@Base+0xc90>
    4c54:	mov	x20, x0
    4c58:	cmn	x0, #0x1
    4c5c:	b.eq	4e2c <libintl_textdomain@@Base+0xf84>  // b.none
    4c60:	ldur	x19, [x23, #-8]
    4c64:	mov	x23, x22
    4c68:	cbnz	x20, 4c78 <libintl_textdomain@@Base+0xdd0>
    4c6c:	b	4b38 <libintl_textdomain@@Base+0xc90>
    4c70:	mov	x20, xzr
    4c74:	cbz	x20, 4b38 <libintl_textdomain@@Base+0xc90>
    4c78:	cmn	x20, #0x1
    4c7c:	b.eq	4e2c <libintl_textdomain@@Base+0xf84>  // b.none
    4c80:	ldur	x10, [x29, #-104]
    4c84:	cbz	x10, 4d24 <libintl_textdomain@@Base+0xe7c>
    4c88:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    4c8c:	ldr	x8, [x8, #4032]
    4c90:	ldr	x9, [x10]
    4c94:	adrp	x28, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    4c98:	ldr	w8, [x8]
    4c9c:	str	x19, [x9, #32]
    4ca0:	str	w8, [x9, #24]
    4ca4:	ldr	x8, [x10]
    4ca8:	str	x20, [x8, #40]
    4cac:	ldur	x8, [x29, #-8]
    4cb0:	ldr	x9, [x10]
    4cb4:	str	x8, [x9, #48]
    4cb8:	ldr	x28, [x28, #4064]
    4cbc:	ldur	x8, [x29, #-88]
    4cc0:	ldur	w9, [x29, #-92]
    4cc4:	str	w9, [x8]
    4cc8:	ldur	w8, [x29, #-96]
    4ccc:	cbz	w8, 4d1c <libintl_textdomain@@Base+0xe74>
    4cd0:	ldr	x19, [x19, #16]
    4cd4:	ldur	x1, [x29, #-112]
    4cd8:	ldur	x21, [x29, #-8]
    4cdc:	ldr	x0, [x19, #184]
    4ce0:	bl	5734 <libintl_textdomain@@Base+0x188c>
    4ce4:	ldr	x8, [x19, #192]
    4ce8:	add	x21, x20, x21
    4cec:	mov	x19, x20
    4cf0:	cmp	x0, x8
    4cf4:	csel	x8, x0, xzr, cc  // cc = lo, ul, last
    4cf8:	add	x22, x8, #0x1
    4cfc:	subs	x22, x22, #0x1
    4d00:	b.eq	4e10 <libintl_textdomain@@Base+0xf68>  // b.none
    4d04:	mov	x0, x19
    4d08:	bl	1cc0 <strlen@plt>
    4d0c:	add	x8, x19, x0
    4d10:	add	x19, x8, #0x1
    4d14:	cmp	x19, x21
    4d18:	b.cc	4cfc <libintl_textdomain@@Base+0xe54>  // b.lo, b.ul, b.last
    4d1c:	cbnz	x28, 4e18 <libintl_textdomain@@Base+0xf70>
    4d20:	b	4ea8 <libintl_textdomain@@Base+0x1000>
    4d24:	ldur	x22, [x29, #-80]
    4d28:	mov	x0, x22
    4d2c:	bl	1cc0 <strlen@plt>
    4d30:	ldur	x23, [x29, #-128]
    4d34:	mov	x26, x0
    4d38:	mov	x0, x23
    4d3c:	bl	1cc0 <strlen@plt>
    4d40:	add	x8, x21, x26
    4d44:	add	x8, x8, x0
    4d48:	add	x0, x8, #0x3b
    4d4c:	bl	1e10 <malloc@plt>
    4d50:	adrp	x28, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    4d54:	ldr	x28, [x28, #4064]
    4d58:	cbz	x0, 4cbc <libintl_textdomain@@Base+0xe14>
    4d5c:	add	x26, x26, #0x1
    4d60:	add	x27, x0, #0x38
    4d64:	mov	x24, x0
    4d68:	mov	x0, x27
    4d6c:	mov	x1, x22
    4d70:	mov	x2, x26
    4d74:	bl	1c70 <memcpy@plt>
    4d78:	add	x22, x27, x26
    4d7c:	add	x2, x21, #0x1
    4d80:	mov	x0, x22
    4d84:	mov	x1, x25
    4d88:	bl	1c70 <memcpy@plt>
    4d8c:	add	x8, x22, x21
    4d90:	add	x0, x8, #0x1
    4d94:	mov	x1, x23
    4d98:	bl	2020 <strcpy@plt>
    4d9c:	ldur	w8, [x29, #-132]
    4da0:	str	x22, [x24]
    4da4:	str	x0, [x24, #16]
    4da8:	str	w8, [x24, #8]
    4dac:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    4db0:	ldr	x8, [x8, #4032]
    4db4:	ldur	x9, [x29, #-8]
    4db8:	stp	x19, x20, [x24, #32]
    4dbc:	ldr	w8, [x8]
    4dc0:	str	x9, [x24, #48]
    4dc4:	str	w8, [x24, #24]
    4dc8:	cbz	x28, 4edc <libintl_textdomain@@Base+0x1034>
    4dcc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4dd0:	add	x0, x0, #0x310
    4dd4:	bl	1f30 <pthread_rwlock_wrlock@plt>
    4dd8:	cbnz	w0, 4f14 <libintl_textdomain@@Base+0x106c>
    4ddc:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4de0:	adrp	x2, 4000 <libintl_textdomain@@Base+0x158>
    4de4:	add	x1, x1, #0x3c8
    4de8:	add	x2, x2, #0xf18
    4dec:	mov	x0, x24
    4df0:	bl	1e70 <tsearch@plt>
    4df4:	mov	x21, x0
    4df8:	cbz	x28, 4ef8 <libintl_textdomain@@Base+0x1050>
    4dfc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4e00:	add	x0, x0, #0x310
    4e04:	bl	1fd0 <pthread_rwlock_unlock@plt>
    4e08:	cbz	w0, 4ef8 <libintl_textdomain@@Base+0x1050>
    4e0c:	b	4f14 <libintl_textdomain@@Base+0x106c>
    4e10:	mov	x20, x19
    4e14:	cbz	x28, 4ea8 <libintl_textdomain@@Base+0x1000>
    4e18:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4e1c:	add	x0, x0, #0x2d8
    4e20:	bl	1fd0 <pthread_rwlock_unlock@plt>
    4e24:	cbz	w0, 4ea8 <libintl_textdomain@@Base+0x1000>
    4e28:	b	4f14 <libintl_textdomain@@Base+0x106c>
    4e2c:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    4e30:	ldur	w20, [x29, #-92]
    4e34:	ldr	x8, [x8, #4064]
    4e38:	cbz	x8, 4e4c <libintl_textdomain@@Base+0xfa4>
    4e3c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4e40:	add	x0, x0, #0x2d8
    4e44:	bl	1fd0 <pthread_rwlock_unlock@plt>
    4e48:	cbnz	w0, 4f14 <libintl_textdomain@@Base+0x106c>
    4e4c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4e50:	ldr	w8, [x8, #976]
    4e54:	ldur	x19, [x29, #-88]
    4e58:	ldp	x23, x21, [x29, #-120]
    4e5c:	ldur	w22, [x29, #-96]
    4e60:	cmp	w8, #0x1
    4e64:	b.eq	4e94 <libintl_textdomain@@Base+0xfec>  // b.none
    4e68:	adrp	x0, 6000 <libintl_ngettext@@Base+0x700>
    4e6c:	add	x0, x0, #0xf88
    4e70:	bl	20d0 <getenv@plt>
    4e74:	cbz	x0, 4e94 <libintl_textdomain@@Base+0xfec>
    4e78:	ldrb	w8, [x0]
    4e7c:	cbz	w8, 4e94 <libintl_textdomain@@Base+0xfec>
    4e80:	ldur	x2, [x29, #-80]
    4e84:	mov	x1, x25
    4e88:	mov	x3, x23
    4e8c:	mov	w4, w22
    4e90:	bl	6764 <libintl_set_relocation_prefix@@Base+0x478>
    4e94:	ldur	x8, [x29, #-80]
    4e98:	cmp	x21, #0x1
    4e9c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    4ea0:	str	w20, [x19]
    4ea4:	csel	x20, x8, x23, eq  // eq = none
    4ea8:	mov	x0, x20
    4eac:	mov	sp, x29
    4eb0:	ldp	x20, x19, [sp, #80]
    4eb4:	ldp	x22, x21, [sp, #64]
    4eb8:	ldp	x24, x23, [sp, #48]
    4ebc:	ldp	x26, x25, [sp, #32]
    4ec0:	ldp	x28, x27, [sp, #16]
    4ec4:	ldp	x29, x30, [sp], #96
    4ec8:	ret
    4ecc:	mov	w21, #0x1                   	// #1
    4ed0:	bl	6718 <libintl_set_relocation_prefix@@Base+0x42c>
    4ed4:	mov	x19, x0
    4ed8:	b	4a70 <libintl_textdomain@@Base+0xbc8>
    4edc:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    4ee0:	adrp	x2, 4000 <libintl_textdomain@@Base+0x158>
    4ee4:	add	x1, x1, #0x3c8
    4ee8:	add	x2, x2, #0xf18
    4eec:	mov	x0, x24
    4ef0:	bl	1e70 <tsearch@plt>
    4ef4:	mov	x21, x0
    4ef8:	cbz	x21, 4f08 <libintl_textdomain@@Base+0x1060>
    4efc:	ldr	x8, [x21]
    4f00:	cmp	x8, x24
    4f04:	b.eq	4cbc <libintl_textdomain@@Base+0xe14>  // b.none
    4f08:	mov	x0, x24
    4f0c:	bl	1fb0 <free@plt>
    4f10:	b	4cbc <libintl_textdomain@@Base+0xe14>
    4f14:	bl	1f20 <abort@plt>
    4f18:	stp	x29, x30, [sp, #-32]!
    4f1c:	stp	x20, x19, [sp, #16]
    4f20:	ldr	x8, [x0, #32]
    4f24:	mov	x19, x1
    4f28:	mov	x20, x0
    4f2c:	add	x0, x0, #0x38
    4f30:	mov	x29, sp
    4f34:	cbnz	x8, 4f3c <libintl_textdomain@@Base+0x1094>
    4f38:	ldr	x0, [x0]
    4f3c:	ldr	x8, [x19, #32]
    4f40:	add	x1, x19, #0x38
    4f44:	cbz	x8, 4f54 <libintl_textdomain@@Base+0x10ac>
    4f48:	bl	1f60 <strcmp@plt>
    4f4c:	cbnz	w0, 4f8c <libintl_textdomain@@Base+0x10e4>
    4f50:	b	4f60 <libintl_textdomain@@Base+0x10b8>
    4f54:	ldr	x1, [x1]
    4f58:	bl	1f60 <strcmp@plt>
    4f5c:	cbnz	w0, 4f8c <libintl_textdomain@@Base+0x10e4>
    4f60:	ldr	x0, [x20]
    4f64:	ldr	x1, [x19]
    4f68:	bl	1f60 <strcmp@plt>
    4f6c:	cbnz	w0, 4f8c <libintl_textdomain@@Base+0x10e4>
    4f70:	ldr	x0, [x20, #16]
    4f74:	ldr	x1, [x19, #16]
    4f78:	bl	1f60 <strcmp@plt>
    4f7c:	cbnz	w0, 4f8c <libintl_textdomain@@Base+0x10e4>
    4f80:	ldr	w8, [x20, #8]
    4f84:	ldr	w9, [x19, #8]
    4f88:	sub	w0, w8, w9
    4f8c:	ldp	x20, x19, [sp, #16]
    4f90:	ldp	x29, x30, [sp], #32
    4f94:	ret
    4f98:	stp	x29, x30, [sp, #-96]!
    4f9c:	stp	x28, x27, [sp, #16]
    4fa0:	stp	x26, x25, [sp, #32]
    4fa4:	stp	x24, x23, [sp, #48]
    4fa8:	stp	x22, x21, [sp, #64]
    4fac:	stp	x20, x19, [sp, #80]
    4fb0:	mov	x29, sp
    4fb4:	sub	sp, sp, #0x50
    4fb8:	ldr	w8, [x0, #8]
    4fbc:	mov	x28, x4
    4fc0:	mov	w25, w3
    4fc4:	mov	x20, x2
    4fc8:	mov	x22, x0
    4fcc:	cmp	w8, #0x0
    4fd0:	mov	x23, x1
    4fd4:	b.le	4fe4 <libintl_textdomain@@Base+0x113c>
    4fd8:	ldr	x27, [x22, #16]
    4fdc:	cbnz	x27, 4ff8 <libintl_textdomain@@Base+0x1150>
    4fe0:	b	566c <libintl_textdomain@@Base+0x17c4>
    4fe4:	mov	x0, x22
    4fe8:	mov	x1, x23
    4fec:	bl	2884 <libintl_gettext@@Base+0x2e0>
    4ff0:	ldr	x27, [x22, #16]
    4ff4:	cbz	x27, 566c <libintl_textdomain@@Base+0x17c4>
    4ff8:	ldr	x8, [x27, #96]
    4ffc:	ldr	w21, [x27, #40]
    5000:	stur	x21, [x29, #-40]
    5004:	cbz	x8, 5120 <libintl_textdomain@@Base+0x1278>
    5008:	mov	x0, x20
    500c:	stur	w25, [x29, #-68]
    5010:	bl	1cc0 <strlen@plt>
    5014:	mov	x21, x0
    5018:	mov	x0, x20
    501c:	bl	2840 <libintl_gettext@@Base+0x29c>
    5020:	ldr	w9, [x27, #88]
    5024:	ldr	x25, [x27, #96]
    5028:	ldr	w19, [x27, #104]
    502c:	udiv	w8, w0, w9
    5030:	msub	w26, w8, w9, w0
    5034:	ldr	w8, [x25, w26, uxtw #2]
    5038:	cmp	w19, #0x0
    503c:	rev	w10, w8
    5040:	csel	w8, w8, w10, eq  // eq = none
    5044:	cbz	w8, 566c <libintl_textdomain@@Base+0x17c4>
    5048:	sub	w10, w9, #0x2
    504c:	udiv	w11, w0, w10
    5050:	msub	w10, w11, w10, w0
    5054:	stp	x22, x23, [x29, #-64]
    5058:	add	w22, w10, #0x1
    505c:	stur	x21, [x29, #-48]
    5060:	and	x23, x21, #0xffffffff
    5064:	sub	w21, w9, w22
    5068:	stur	x28, [x29, #-80]
    506c:	neg	w28, w21
    5070:	b	50a0 <libintl_textdomain@@Base+0x11f8>
    5074:	mov	x0, x20
    5078:	bl	1f60 <strcmp@plt>
    507c:	cbz	w0, 5174 <libintl_textdomain@@Base+0x12cc>
    5080:	cmp	w26, w21
    5084:	csel	w8, w22, w28, cc  // cc = lo, ul, last
    5088:	add	w26, w8, w26
    508c:	ldr	w8, [x25, w26, uxtw #2]
    5090:	cmp	w19, #0x0
    5094:	rev	w9, w8
    5098:	csel	w8, w8, w9, eq  // eq = none
    509c:	cbz	w8, 566c <libintl_textdomain@@Base+0x17c4>
    50a0:	ldur	x9, [x29, #-40]
    50a4:	sub	w24, w8, #0x1
    50a8:	cmp	w24, w9
    50ac:	b.cs	50fc <libintl_textdomain@@Base+0x1254>  // b.hs, b.nlast
    50b0:	ldr	x8, [x27, #48]
    50b4:	mov	w9, w24
    50b8:	lsl	x10, x9, #3
    50bc:	ldr	w11, [x8, x10]
    50c0:	ldr	w10, [x27, #24]
    50c4:	rev	w12, w11
    50c8:	cmp	w10, #0x0
    50cc:	csel	w11, w11, w12, eq  // eq = none
    50d0:	ldur	x12, [x29, #-48]
    50d4:	cmp	w11, w12
    50d8:	b.cc	5080 <libintl_textdomain@@Base+0x11d8>  // b.lo, b.ul, b.last
    50dc:	add	x8, x8, x9, lsl #3
    50e0:	ldr	w8, [x8, #4]
    50e4:	ldr	x9, [x27]
    50e8:	cmp	w10, #0x0
    50ec:	rev	w11, w8
    50f0:	csel	w8, w8, w11, eq  // eq = none
    50f4:	add	x1, x9, x8
    50f8:	b	5074 <libintl_textdomain@@Base+0x11cc>
    50fc:	ldr	x8, [x27, #72]
    5100:	sub	w9, w24, w9
    5104:	lsl	x10, x9, #4
    5108:	ldr	x10, [x8, x10]
    510c:	cmp	x10, x23
    5110:	b.ls	5080 <libintl_textdomain@@Base+0x11d8>  // b.plast
    5114:	add	x8, x8, x9, lsl #4
    5118:	ldr	x1, [x8, #8]
    511c:	b	5074 <libintl_textdomain@@Base+0x11cc>
    5120:	mov	x19, xzr
    5124:	cmp	x19, x21
    5128:	b.cs	566c <libintl_textdomain@@Base+0x17c4>  // b.hs, b.nlast
    512c:	ldr	x8, [x27, #48]
    5130:	add	x9, x19, x21
    5134:	lsr	x26, x9, #1
    5138:	ldr	w9, [x27, #24]
    513c:	add	x8, x8, x26, lsl #3
    5140:	ldr	w8, [x8, #4]
    5144:	ldr	x10, [x27]
    5148:	cmp	w9, #0x0
    514c:	mov	x0, x20
    5150:	rev	w11, w8
    5154:	csel	w8, w8, w11, eq  // eq = none
    5158:	add	x1, x10, x8
    515c:	bl	1f60 <strcmp@plt>
    5160:	cmp	w0, #0x0
    5164:	csel	x21, x26, x21, lt  // lt = tstop
    5168:	csinc	x19, x19, x26, le
    516c:	cbnz	w0, 5124 <libintl_textdomain@@Base+0x127c>
    5170:	b	5184 <libintl_textdomain@@Base+0x12dc>
    5174:	ldur	x28, [x29, #-80]
    5178:	ldp	x22, x23, [x29, #-64]
    517c:	ldur	w25, [x29, #-68]
    5180:	mov	w26, w24
    5184:	ldur	x8, [x29, #-40]
    5188:	subs	x8, x26, x8
    518c:	b.cs	51bc <libintl_textdomain@@Base+0x1314>  // b.hs, b.nlast
    5190:	ldr	x10, [x27, #56]
    5194:	ldr	x8, [x27]
    5198:	ldr	w12, [x27, #24]
    519c:	lsl	x11, x26, #3
    51a0:	add	x9, x10, x26, lsl #3
    51a4:	ldr	w9, [x9, #4]
    51a8:	cbz	w12, 51d0 <libintl_textdomain@@Base+0x1328>
    51ac:	ldr	w10, [x10, x11]
    51b0:	rev	w9, w9
    51b4:	rev	w10, w10
    51b8:	b	51d4 <libintl_textdomain@@Base+0x132c>
    51bc:	ldr	x9, [x27, #80]
    51c0:	add	x8, x9, x8, lsl #4
    51c4:	ldp	x24, x20, [x8]
    51c8:	cbnz	w25, 51e0 <libintl_textdomain@@Base+0x1338>
    51cc:	b	54f8 <libintl_textdomain@@Base+0x1650>
    51d0:	ldr	w10, [x10, x11]
    51d4:	add	x20, x8, w9, uxtw
    51d8:	add	w24, w10, #0x1
    51dc:	cbz	w25, 54f8 <libintl_textdomain@@Base+0x1650>
    51e0:	stp	x22, x23, [x29, #-64]
    51e4:	cbz	x23, 51f4 <libintl_textdomain@@Base+0x134c>
    51e8:	ldur	x8, [x29, #-56]
    51ec:	ldr	x23, [x8, #16]
    51f0:	cbnz	x23, 5268 <libintl_textdomain@@Base+0x13c0>
    51f4:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    51f8:	ldrb	w8, [x19, #1056]
    51fc:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    5200:	tbnz	w8, #0, 5258 <libintl_textdomain@@Base+0x13b0>
    5204:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5208:	add	x0, x0, #0xf
    520c:	bl	20d0 <getenv@plt>
    5210:	cbz	x0, 5250 <libintl_textdomain@@Base+0x13a8>
    5214:	ldrb	w8, [x0]
    5218:	mov	x23, x0
    521c:	cbz	w8, 5250 <libintl_textdomain@@Base+0x13a8>
    5220:	mov	x0, x23
    5224:	bl	1cc0 <strlen@plt>
    5228:	add	x22, x0, #0x1
    522c:	mov	x0, x22
    5230:	bl	1e10 <malloc@plt>
    5234:	mov	x25, x0
    5238:	cbz	x0, 524c <libintl_textdomain@@Base+0x13a4>
    523c:	mov	x0, x25
    5240:	mov	x1, x23
    5244:	mov	x2, x22
    5248:	bl	1c70 <memcpy@plt>
    524c:	str	x25, [x21, #1048]
    5250:	mov	w8, #0x1                   	// #1
    5254:	strb	w8, [x19, #1056]
    5258:	ldr	x23, [x21, #1048]
    525c:	cbnz	x23, 5268 <libintl_textdomain@@Base+0x13c0>
    5260:	bl	61b4 <libintl_ngettext@@Base+0x8b4>
    5264:	mov	x23, x0
    5268:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    526c:	ldr	x8, [x8, #4064]
    5270:	cbz	x8, 5280 <libintl_textdomain@@Base+0x13d8>
    5274:	add	x0, x27, #0x80
    5278:	bl	1cf0 <pthread_rwlock_rdlock@plt>
    527c:	cbnz	w0, 5730 <libintl_textdomain@@Base+0x1888>
    5280:	ldr	x8, [x27, #120]
    5284:	add	x19, x8, #0x1
    5288:	add	x8, x8, x8, lsl #1
    528c:	lsl	x8, x8, #3
    5290:	sub	x19, x19, #0x1
    5294:	cbz	x19, 52c0 <libintl_textdomain@@Base+0x1418>
    5298:	ldr	x21, [x27, #112]
    529c:	mov	x1, x23
    52a0:	sub	x22, x8, #0x18
    52a4:	add	x9, x21, x8
    52a8:	ldur	x0, [x9, #-24]
    52ac:	bl	1f60 <strcmp@plt>
    52b0:	mov	x8, x22
    52b4:	cbnz	w0, 5290 <libintl_textdomain@@Base+0x13e8>
    52b8:	add	x25, x21, x22
    52bc:	b	52c4 <libintl_textdomain@@Base+0x141c>
    52c0:	mov	x25, xzr
    52c4:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    52c8:	ldr	x8, [x8, #4064]
    52cc:	cbz	x8, 52dc <libintl_textdomain@@Base+0x1434>
    52d0:	add	x0, x27, #0x80
    52d4:	bl	1fd0 <pthread_rwlock_unlock@plt>
    52d8:	cbnz	w0, 5730 <libintl_textdomain@@Base+0x1888>
    52dc:	cbnz	x25, 54c8 <libintl_textdomain@@Base+0x1620>
    52e0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    52e4:	ldr	x8, [x8, #4064]
    52e8:	cbz	x8, 52f8 <libintl_textdomain@@Base+0x1450>
    52ec:	add	x0, x27, #0x80
    52f0:	bl	1f30 <pthread_rwlock_wrlock@plt>
    52f4:	cbnz	w0, 5730 <libintl_textdomain@@Base+0x1888>
    52f8:	ldr	x25, [x27, #120]
    52fc:	add	x8, x25, x25, lsl #1
    5300:	add	x19, x25, #0x1
    5304:	lsl	x8, x8, #3
    5308:	sub	x19, x19, #0x1
    530c:	cbz	x19, 5338 <libintl_textdomain@@Base+0x1490>
    5310:	ldr	x21, [x27, #112]
    5314:	mov	x1, x23
    5318:	sub	x22, x8, #0x18
    531c:	add	x9, x21, x8
    5320:	ldur	x0, [x9, #-24]
    5324:	bl	1f60 <strcmp@plt>
    5328:	mov	x8, x22
    532c:	cbnz	w0, 5308 <libintl_textdomain@@Base+0x1460>
    5330:	add	x25, x21, x22
    5334:	b	54b0 <libintl_textdomain@@Base+0x1608>
    5338:	ldr	x0, [x27, #112]
    533c:	cbz	x0, 5354 <libintl_textdomain@@Base+0x14ac>
    5340:	mov	w8, #0x18                  	// #24
    5344:	orr	x9, xzr, #0x18
    5348:	madd	x1, x25, x8, x9
    534c:	bl	1ed0 <realloc@plt>
    5350:	b	5364 <libintl_textdomain@@Base+0x14bc>
    5354:	mov	w8, #0x18                  	// #24
    5358:	orr	x9, xzr, #0x18
    535c:	madd	x0, x25, x8, x9
    5360:	bl	1e10 <malloc@plt>
    5364:	mov	x21, x0
    5368:	cbz	x0, 5718 <libintl_textdomain@@Base+0x1870>
    536c:	mov	x0, x23
    5370:	str	x21, [x27, #112]
    5374:	bl	1ee0 <strdup@plt>
    5378:	cbz	x0, 5718 <libintl_textdomain@@Base+0x1870>
    537c:	mov	w8, #0x18                  	// #24
    5380:	stur	x25, [x29, #-48]
    5384:	madd	x25, x25, x8, x21
    5388:	mov	x23, x0
    538c:	str	x0, [x25]
    5390:	ldp	x0, x1, [x29, #-64]
    5394:	adrp	x2, 6000 <libintl_ngettext@@Base+0x700>
    5398:	mov	x8, #0xffffffffffffffff    	// #-1
    539c:	mov	x22, x25
    53a0:	add	x2, x2, #0xfad
    53a4:	sub	x4, x29, #0x8
    53a8:	mov	w3, wzr
    53ac:	str	x8, [x22, #8]!
    53b0:	bl	4f98 <libintl_textdomain@@Base+0x10f0>
    53b4:	cbz	x0, 5494 <libintl_textdomain@@Base+0x15ec>
    53b8:	cmn	x0, #0x1
    53bc:	b.eq	5710 <libintl_textdomain@@Base+0x1868>  // b.none
    53c0:	adrp	x1, 6000 <libintl_ngettext@@Base+0x700>
    53c4:	add	x1, x1, #0xfa1
    53c8:	bl	2080 <strstr@plt>
    53cc:	cbz	x0, 5494 <libintl_textdomain@@Base+0x15ec>
    53d0:	stp	x22, x21, [x29, #-64]
    53d4:	add	x22, x0, #0x8
    53d8:	adrp	x1, 6000 <libintl_ngettext@@Base+0x700>
    53dc:	add	x1, x1, #0xfaa
    53e0:	mov	x0, x22
    53e4:	bl	20b0 <strcspn@plt>
    53e8:	add	x8, x0, #0x10
    53ec:	and	x8, x8, #0xfffffffffffffff0
    53f0:	mov	x9, sp
    53f4:	sub	x21, x9, x8
    53f8:	mov	x19, x0
    53fc:	mov	sp, x21
    5400:	mov	x0, x21
    5404:	mov	x1, x22
    5408:	mov	x2, x19
    540c:	bl	1c70 <memcpy@plt>
    5410:	mov	w1, #0x2f                  	// #47
    5414:	mov	x0, x23
    5418:	strb	wzr, [x21, x19]
    541c:	bl	1ff0 <strchr@plt>
    5420:	cbnz	x0, 5480 <libintl_textdomain@@Base+0x15d8>
    5424:	mov	x0, x23
    5428:	bl	1cc0 <strlen@plt>
    542c:	add	x9, x0, #0x1a
    5430:	mov	x8, sp
    5434:	and	x9, x9, #0xfffffffffffffff0
    5438:	mov	x19, x21
    543c:	sub	x21, x8, x9
    5440:	mov	x22, x0
    5444:	mov	sp, x21
    5448:	mov	x0, x21
    544c:	mov	x1, x23
    5450:	mov	x2, x22
    5454:	bl	1c70 <memcpy@plt>
    5458:	adrp	x8, 6000 <libintl_ngettext@@Base+0x700>
    545c:	add	x8, x8, #0xfae
    5460:	ldr	x8, [x8]
    5464:	mov	w10, #0x494c                	// #18764
    5468:	add	x9, x21, x22
    546c:	movk	w10, #0x54, lsl #16
    5470:	mov	x23, x21
    5474:	mov	x21, x19
    5478:	stur	w10, [x9, #7]
    547c:	str	x8, [x9]
    5480:	mov	x0, x23
    5484:	mov	x1, x21
    5488:	bl	2030 <iconv_open@plt>
    548c:	ldp	x8, x21, [x29, #-64]
    5490:	str	x0, [x8]
    5494:	ldur	x9, [x29, #-48]
    5498:	mov	w8, #0x18                  	// #24
    549c:	madd	x8, x9, x8, x21
    54a0:	str	xzr, [x8, #16]
    54a4:	ldr	x8, [x27, #120]
    54a8:	add	x8, x8, #0x1
    54ac:	str	x8, [x27, #120]
    54b0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    54b4:	ldr	x8, [x8, #4064]
    54b8:	cbz	x8, 54c8 <libintl_textdomain@@Base+0x1620>
    54bc:	add	x0, x27, #0x80
    54c0:	bl	1fd0 <pthread_rwlock_unlock@plt>
    54c4:	cbnz	w0, 5730 <libintl_textdomain@@Base+0x1888>
    54c8:	ldr	x8, [x25, #8]
    54cc:	cmn	x8, #0x1
    54d0:	b.eq	54f8 <libintl_textdomain@@Base+0x1650>  // b.none
    54d4:	ldr	x8, [x25, #16]
    54d8:	cbz	x8, 5694 <libintl_textdomain@@Base+0x17ec>
    54dc:	cmn	x8, #0x1
    54e0:	b.eq	55e8 <libintl_textdomain@@Base+0x1740>  // b.none
    54e4:	ldr	x8, [x8, x26, lsl #3]
    54e8:	cbz	x8, 5500 <libintl_textdomain@@Base+0x1658>
    54ec:	ldr	x8, [x25, #16]
    54f0:	ldr	x20, [x8, x26, lsl #3]
    54f4:	ldr	x24, [x20], #8
    54f8:	str	x24, [x28]
    54fc:	b	5670 <libintl_textdomain@@Base+0x17c8>
    5500:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    5504:	ldr	x8, [x8, #4064]
    5508:	cbz	x8, 551c <libintl_textdomain@@Base+0x1674>
    550c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    5510:	add	x0, x0, #0x3d8
    5514:	bl	20e0 <pthread_mutex_lock@plt>
    5518:	cbnz	w0, 5730 <libintl_textdomain@@Base+0x1888>
    551c:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    5520:	ldr	x0, [x22, #1032]
    5524:	mov	w19, wzr
    5528:	mov	x21, xzr
    552c:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    5530:	mov	w27, #0xff0                 	// #4080
    5534:	b	5554 <libintl_textdomain@@Base+0x16ac>
    5538:	mov	w0, #0xff0                 	// #4080
    553c:	str	x27, [x23, #1040]
    5540:	bl	1e10 <malloc@plt>
    5544:	mov	w19, #0x1                   	// #1
    5548:	cbz	x0, 55c4 <libintl_textdomain@@Base+0x171c>
    554c:	str	x0, [x22, #1032]
    5550:	mov	x21, x0
    5554:	ldr	x8, [x23, #1040]
    5558:	add	x9, x0, #0x8
    555c:	stp	x24, x20, [x29, #-16]
    5560:	stur	x9, [x29, #-24]
    5564:	subs	x8, x8, #0x8
    5568:	b.cc	55a0 <libintl_textdomain@@Base+0x16f8>  // b.lo, b.ul, b.last
    556c:	stur	x8, [x29, #-32]
    5570:	ldr	x0, [x25, #8]
    5574:	sub	x1, x29, #0x8
    5578:	sub	x2, x29, #0x10
    557c:	sub	x3, x29, #0x18
    5580:	sub	x4, x29, #0x20
    5584:	bl	1f70 <iconv@plt>
    5588:	cmn	x0, #0x1
    558c:	b.ne	55f0 <libintl_textdomain@@Base+0x1748>  // b.any
    5590:	bl	20c0 <__errno_location@plt>
    5594:	ldr	w8, [x0]
    5598:	cmp	w8, #0x7
    559c:	b.ne	5650 <libintl_textdomain@@Base+0x17a8>  // b.any
    55a0:	cmp	w19, #0x1
    55a4:	b.lt	5538 <libintl_textdomain@@Base+0x1690>  // b.tstop
    55a8:	add	w19, w19, #0x1
    55ac:	mul	w8, w19, w27
    55b0:	sxtw	x1, w8
    55b4:	mov	x0, x21
    55b8:	str	x1, [x23, #1040]
    55bc:	bl	1ed0 <realloc@plt>
    55c0:	cbnz	x0, 554c <libintl_textdomain@@Base+0x16a4>
    55c4:	str	xzr, [x22, #1032]
    55c8:	str	xzr, [x23, #1040]
    55cc:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    55d0:	ldr	x8, [x8, #4064]
    55d4:	cbz	x8, 55e8 <libintl_textdomain@@Base+0x1740>
    55d8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    55dc:	add	x0, x0, #0x3d8
    55e0:	bl	20f0 <pthread_mutex_unlock@plt>
    55e4:	cbnz	w0, 5730 <libintl_textdomain@@Base+0x1888>
    55e8:	mov	x20, #0xffffffffffffffff    	// #-1
    55ec:	b	5670 <libintl_textdomain@@Base+0x17c8>
    55f0:	ldur	x8, [x29, #-24]
    55f4:	ldr	x9, [x22, #1032]
    55f8:	sub	x10, x8, x9
    55fc:	sub	x10, x10, #0x8
    5600:	str	x10, [x9]
    5604:	ldr	x10, [x25, #16]
    5608:	str	x9, [x10, x26, lsl #3]
    560c:	ldr	x9, [x22, #1032]
    5610:	ldr	x10, [x23, #1040]
    5614:	sub	x9, x9, x8
    5618:	add	x9, x10, x9
    561c:	and	x10, x9, #0x7
    5620:	and	x9, x9, #0xfffffffffffffff8
    5624:	add	x8, x8, x10
    5628:	str	x8, [x22, #1032]
    562c:	str	x9, [x23, #1040]
    5630:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    5634:	ldr	x8, [x8, #4064]
    5638:	cbz	x8, 54ec <libintl_textdomain@@Base+0x1644>
    563c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    5640:	add	x0, x0, #0x3d8
    5644:	bl	20f0 <pthread_mutex_unlock@plt>
    5648:	cbz	w0, 54ec <libintl_textdomain@@Base+0x1644>
    564c:	b	5730 <libintl_textdomain@@Base+0x1888>
    5650:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    5654:	ldr	x8, [x8, #4064]
    5658:	cbz	x8, 566c <libintl_textdomain@@Base+0x17c4>
    565c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    5660:	add	x0, x0, #0x3d8
    5664:	bl	20f0 <pthread_mutex_unlock@plt>
    5668:	cbnz	w0, 5730 <libintl_textdomain@@Base+0x1888>
    566c:	mov	x20, xzr
    5670:	mov	x0, x20
    5674:	mov	sp, x29
    5678:	ldp	x20, x19, [sp, #80]
    567c:	ldp	x22, x21, [sp, #64]
    5680:	ldp	x24, x23, [sp, #48]
    5684:	ldp	x26, x25, [sp, #32]
    5688:	ldp	x28, x27, [sp, #16]
    568c:	ldp	x29, x30, [sp], #96
    5690:	ret
    5694:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    5698:	ldr	x8, [x8, #4064]
    569c:	mov	x19, x28
    56a0:	cbz	x8, 56bc <libintl_textdomain@@Base+0x1814>
    56a4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    56a8:	add	x0, x0, #0x3d8
    56ac:	bl	20e0 <pthread_mutex_lock@plt>
    56b0:	cbnz	w0, 5730 <libintl_textdomain@@Base+0x1888>
    56b4:	ldr	x8, [x25, #16]
    56b8:	cbnz	x8, 56e4 <libintl_textdomain@@Base+0x183c>
    56bc:	ldr	w8, [x27, #64]
    56c0:	ldur	x9, [x29, #-40]
    56c4:	mov	w1, #0x8                   	// #8
    56c8:	add	w0, w8, w9
    56cc:	bl	1ea0 <calloc@plt>
    56d0:	mov	x28, x19
    56d4:	str	x0, [x25, #16]
    56d8:	cbnz	x0, 551c <libintl_textdomain@@Base+0x1674>
    56dc:	mov	x8, #0xffffffffffffffff    	// #-1
    56e0:	str	x8, [x25, #16]
    56e4:	adrp	x9, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    56e8:	ldr	x9, [x9, #4064]
    56ec:	mov	x28, x19
    56f0:	cbz	x9, 54dc <libintl_textdomain@@Base+0x1634>
    56f4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    56f8:	add	x0, x0, #0x3d8
    56fc:	bl	20f0 <pthread_mutex_unlock@plt>
    5700:	cbnz	w0, 5730 <libintl_textdomain@@Base+0x1888>
    5704:	ldr	x8, [x25, #16]
    5708:	mov	x28, x19
    570c:	b	54dc <libintl_textdomain@@Base+0x1634>
    5710:	mov	x0, x23
    5714:	bl	1fb0 <free@plt>
    5718:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    571c:	ldr	x8, [x8, #4064]
    5720:	cbz	x8, 55e8 <libintl_textdomain@@Base+0x1740>
    5724:	add	x0, x27, #0x80
    5728:	bl	1fd0 <pthread_rwlock_unlock@plt>
    572c:	cbz	w0, 55e8 <libintl_textdomain@@Base+0x1740>
    5730:	bl	1f20 <abort@plt>
    5734:	stp	x29, x30, [sp, #-48]!
    5738:	stp	x22, x21, [sp, #16]
    573c:	stp	x20, x19, [sp, #32]
    5740:	mov	x19, x1
    5744:	mov	x20, x0
    5748:	mov	w21, #0x8                   	// #8
    574c:	mov	w22, #0x10                  	// #16
    5750:	mov	x29, sp
    5754:	ldr	w8, [x20]
    5758:	cmp	w8, #0x3
    575c:	b.ne	577c <libintl_textdomain@@Base+0x18d4>  // b.any
    5760:	ldr	x0, [x20, #8]!
    5764:	mov	x1, x19
    5768:	bl	5734 <libintl_textdomain@@Base+0x188c>
    576c:	cmp	x0, #0x0
    5770:	csel	x8, x22, x21, eq  // eq = none
    5774:	ldr	x20, [x20, x8]
    5778:	b	5754 <libintl_textdomain@@Base+0x18ac>
    577c:	cmp	w8, #0x2
    5780:	b.eq	57a8 <libintl_textdomain@@Base+0x1900>  // b.none
    5784:	cmp	w8, #0x1
    5788:	b.eq	57d8 <libintl_textdomain@@Base+0x1930>  // b.none
    578c:	cbnz	w8, 584c <libintl_textdomain@@Base+0x19a4>
    5790:	ldr	w8, [x20, #4]
    5794:	cbz	w8, 5850 <libintl_textdomain@@Base+0x19a8>
    5798:	cmp	w8, #0x1
    579c:	b.ne	584c <libintl_textdomain@@Base+0x19a4>  // b.any
    57a0:	ldr	x19, [x20, #8]
    57a4:	b	5850 <libintl_textdomain@@Base+0x19a8>
    57a8:	ldr	x0, [x20, #8]
    57ac:	mov	x1, x19
    57b0:	bl	5734 <libintl_textdomain@@Base+0x188c>
    57b4:	ldr	w8, [x20, #4]
    57b8:	mov	x21, x0
    57bc:	cmp	w8, #0xe
    57c0:	b.eq	57f0 <libintl_textdomain@@Base+0x1948>  // b.none
    57c4:	cmp	w8, #0xf
    57c8:	b.ne	580c <libintl_textdomain@@Base+0x1964>  // b.any
    57cc:	cbz	x21, 57f4 <libintl_textdomain@@Base+0x194c>
    57d0:	mov	w19, #0x1                   	// #1
    57d4:	b	5850 <libintl_textdomain@@Base+0x19a8>
    57d8:	ldr	x0, [x20, #8]
    57dc:	mov	x1, x19
    57e0:	bl	5734 <libintl_textdomain@@Base+0x188c>
    57e4:	cmp	x0, #0x0
    57e8:	cset	w0, eq  // eq = none
    57ec:	b	5854 <libintl_textdomain@@Base+0x19ac>
    57f0:	cbz	x21, 584c <libintl_textdomain@@Base+0x19a4>
    57f4:	ldr	x0, [x20, #16]
    57f8:	mov	x1, x19
    57fc:	bl	5734 <libintl_textdomain@@Base+0x188c>
    5800:	cmp	x0, #0x0
    5804:	cset	w0, ne  // ne = any
    5808:	b	5854 <libintl_textdomain@@Base+0x19ac>
    580c:	ldr	x0, [x20, #16]
    5810:	mov	x1, x19
    5814:	bl	5734 <libintl_textdomain@@Base+0x188c>
    5818:	ldr	w8, [x20, #4]
    581c:	sub	w8, w8, #0x3
    5820:	cmp	w8, #0xa
    5824:	b.hi	584c <libintl_textdomain@@Base+0x19a4>  // b.pmore
    5828:	adrp	x9, 6000 <libintl_ngettext@@Base+0x700>
    582c:	add	x9, x9, #0xf5c
    5830:	adr	x10, 5844 <libintl_textdomain@@Base+0x199c>
    5834:	ldrb	w11, [x9, x8]
    5838:	add	x10, x10, x11, lsl #2
    583c:	mov	x19, x0
    5840:	br	x10
    5844:	mul	x19, x19, x21
    5848:	b	5850 <libintl_textdomain@@Base+0x19a8>
    584c:	mov	x19, xzr
    5850:	mov	x0, x19
    5854:	ldp	x20, x19, [sp, #32]
    5858:	ldp	x22, x21, [sp, #16]
    585c:	ldp	x29, x30, [sp], #48
    5860:	ret
    5864:	cbnz	x19, 5870 <libintl_textdomain@@Base+0x19c8>
    5868:	mov	w0, #0x8                   	// #8
    586c:	bl	1cd0 <raise@plt>
    5870:	udiv	x19, x21, x19
    5874:	b	5850 <libintl_textdomain@@Base+0x19a8>
    5878:	cbnz	x19, 5884 <libintl_textdomain@@Base+0x19dc>
    587c:	mov	w0, #0x8                   	// #8
    5880:	bl	1cd0 <raise@plt>
    5884:	udiv	x8, x21, x19
    5888:	msub	x19, x8, x19, x21
    588c:	b	5850 <libintl_textdomain@@Base+0x19a8>
    5890:	add	x19, x19, x21
    5894:	b	5850 <libintl_textdomain@@Base+0x19a8>
    5898:	sub	x19, x21, x19
    589c:	b	5850 <libintl_textdomain@@Base+0x19a8>
    58a0:	cmp	x21, x19
    58a4:	cset	w19, cc  // cc = lo, ul, last
    58a8:	b	5850 <libintl_textdomain@@Base+0x19a8>
    58ac:	cmp	x21, x19
    58b0:	cset	w19, hi  // hi = pmore
    58b4:	b	5850 <libintl_textdomain@@Base+0x19a8>
    58b8:	cmp	x21, x19
    58bc:	cset	w19, ls  // ls = plast
    58c0:	b	5850 <libintl_textdomain@@Base+0x19a8>
    58c4:	cmp	x21, x19
    58c8:	cset	w19, cs  // cs = hs, nlast
    58cc:	b	5850 <libintl_textdomain@@Base+0x19a8>
    58d0:	cmp	x21, x19
    58d4:	cset	w19, eq  // eq = none
    58d8:	b	5850 <libintl_textdomain@@Base+0x19a8>
    58dc:	cmp	x21, x19
    58e0:	cset	w19, ne  // ne = any
    58e4:	b	5850 <libintl_textdomain@@Base+0x19a8>

00000000000058e8 <libintl_dcngettext@@Base>:
    58e8:	mov	w5, w4
    58ec:	mov	x4, x3
    58f0:	mov	w3, #0x1                   	// #1
    58f4:	b	46c0 <libintl_textdomain@@Base+0x818>

00000000000058f8 <libintl_dngettext@@Base>:
    58f8:	mov	w4, #0x5                   	// #5
    58fc:	b	1e60 <libintl_dcngettext@plt>

0000000000005900 <libintl_ngettext@@Base>:
    5900:	mov	x3, x2
    5904:	mov	x2, x1
    5908:	mov	w4, #0x5                   	// #5
    590c:	mov	x1, x0
    5910:	mov	x0, xzr
    5914:	b	1e60 <libintl_dcngettext@plt>
    5918:	str	d12, [sp, #-144]!
    591c:	stp	d11, d10, [sp, #16]
    5920:	stp	d9, d8, [sp, #32]
    5924:	stp	x29, x30, [sp, #48]
    5928:	stp	x28, x27, [sp, #64]
    592c:	stp	x26, x25, [sp, #80]
    5930:	stp	x24, x23, [sp, #96]
    5934:	stp	x22, x21, [sp, #112]
    5938:	stp	x20, x19, [sp, #128]
    593c:	mov	x29, sp
    5940:	sub	sp, sp, #0x800
    5944:	add	x8, sp, #0x28
    5948:	str	x8, [x29, #8]
    594c:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5950:	ldr	d8, [x8, #64]
    5954:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5958:	ldr	d9, [x8, #56]
    595c:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5960:	ldr	d10, [x8, #48]
    5964:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5968:	ldr	d11, [x8, #40]
    596c:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5970:	ldr	d12, [x8, #32]
    5974:	mov	w27, #0x28c                 	// #652
    5978:	adrp	x24, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    597c:	mov	w19, #0x160                 	// #352
    5980:	stp	xzr, x0, [sp, #16]
    5984:	str	xzr, [sp, #8]
    5988:	str	wzr, [sp, #36]
    598c:	mov	w28, wzr
    5990:	movk	w27, #0x102, lsl #16
    5994:	mov	w22, #0xfffffffe            	// #-2
    5998:	mov	w21, #0xc8                  	// #200
    599c:	add	x24, x24, #0xc7
    59a0:	movk	w19, #0x4bc, lsl #16
    59a4:	add	x23, sp, #0x668
    59a8:	add	x26, sp, #0x28
    59ac:	add	x20, sp, #0x668
    59b0:	add	x8, x20, x21, lsl #1
    59b4:	sub	x8, x8, #0x2
    59b8:	cmp	x8, x23
    59bc:	strh	w28, [x23]
    59c0:	b.hi	5a78 <libintl_ngettext@@Base+0x178>  // b.pmore
    59c4:	lsr	x8, x21, #4
    59c8:	cmp	x8, #0x270
    59cc:	b.hi	602c <libintl_ngettext@@Base+0x72c>  // b.pmore
    59d0:	ubfx	x9, x21, #3, #60
    59d4:	lsl	x8, x21, #1
    59d8:	cmp	x9, #0x271
    59dc:	mov	w9, #0x2710                	// #10000
    59e0:	csel	x21, x8, x9, cc  // cc = lo, ul, last
    59e4:	mov	w8, #0xa                   	// #10
    59e8:	orr	x9, xzr, #0x7
    59ec:	madd	x0, x21, x8, x9
    59f0:	mov	x19, x24
    59f4:	bl	1e10 <malloc@plt>
    59f8:	cbz	x0, 602c <libintl_ngettext@@Base+0x72c>
    59fc:	sub	x8, x23, x20
    5a00:	asr	x26, x8, #1
    5a04:	add	x23, x26, #0x1
    5a08:	lsl	x2, x23, #1
    5a0c:	mov	x1, x20
    5a10:	mov	x24, x0
    5a14:	bl	1c70 <memcpy@plt>
    5a18:	lsl	x8, x21, #1
    5a1c:	add	x8, x8, #0x7
    5a20:	ldr	x1, [x29, #8]
    5a24:	and	x8, x8, #0xfffffffffffffff8
    5a28:	add	x25, x24, x8
    5a2c:	lsl	x2, x23, #3
    5a30:	mov	x0, x25
    5a34:	bl	1c70 <memcpy@plt>
    5a38:	add	x8, sp, #0x668
    5a3c:	cmp	x20, x8
    5a40:	b.eq	5a4c <libintl_ngettext@@Base+0x14c>  // b.none
    5a44:	mov	x0, x20
    5a48:	bl	1fb0 <free@plt>
    5a4c:	add	x8, x24, x21, lsl #1
    5a50:	add	x23, x24, x26, lsl #1
    5a54:	sub	x8, x8, #0x2
    5a58:	cmp	x8, x23
    5a5c:	b.ls	6054 <libintl_ngettext@@Base+0x754>  // b.plast
    5a60:	mov	x20, x24
    5a64:	mov	x24, x19
    5a68:	mov	w19, #0x160                 	// #352
    5a6c:	add	x26, x25, x26, lsl #3
    5a70:	movk	w19, #0x4bc, lsl #16
    5a74:	str	x25, [x29, #8]
    5a78:	cmp	w28, #0x9
    5a7c:	b.eq	604c <libintl_ngettext@@Base+0x74c>  // b.none
    5a80:	lsr	x9, x27, x28
    5a84:	sxtw	x8, w28
    5a88:	tbnz	w9, #0, 5ca8 <libintl_ngettext@@Base+0x3a8>
    5a8c:	cmn	w22, #0x2
    5a90:	b.ne	5c34 <libintl_ngettext@@Base+0x334>  // b.any
    5a94:	ldr	x9, [sp, #24]
    5a98:	ldr	x9, [x9]
    5a9c:	add	x9, x9, #0x1
    5aa0:	ldurb	w22, [x9, #-1]
    5aa4:	cmp	w22, #0x9
    5aa8:	b.eq	5a9c <libintl_ngettext@@Base+0x19c>  // b.none
    5aac:	cmp	w22, #0x20
    5ab0:	b.eq	5a9c <libintl_ngettext@@Base+0x19c>  // b.none
    5ab4:	cbnz	w22, 5ac0 <libintl_ngettext@@Base+0x1c0>
    5ab8:	sub	x9, x9, #0x1
    5abc:	b	5c2c <libintl_ngettext@@Base+0x32c>
    5ac0:	sub	w10, w22, #0xa
    5ac4:	cmp	w10, #0x72
    5ac8:	b.hi	5b4c <libintl_ngettext@@Base+0x24c>  // b.pmore
    5acc:	adrp	x13, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5ad0:	add	x13, x13, #0x48
    5ad4:	adr	x11, 5ae4 <libintl_ngettext@@Base+0x1e4>
    5ad8:	ldrb	w12, [x13, x10]
    5adc:	add	x11, x11, x12, lsl #2
    5ae0:	br	x11
    5ae4:	ldrb	w10, [x9]
    5ae8:	sub	w11, w10, #0x30
    5aec:	cmp	w11, #0x9
    5af0:	sub	x11, x22, #0x30
    5af4:	b.hi	5b18 <libintl_ngettext@@Base+0x218>  // b.pmore
    5af8:	mov	w13, #0xa                   	// #10
    5afc:	mul	x11, x11, x13
    5b00:	add	x11, x11, w10, uxtb
    5b04:	ldrb	w10, [x9, #1]!
    5b08:	sub	x11, x11, #0x30
    5b0c:	sub	w12, w10, #0x30
    5b10:	cmp	w12, #0xa
    5b14:	b.cc	5afc <libintl_ngettext@@Base+0x1fc>  // b.lo, b.ul, b.last
    5b18:	lsr	x10, x11, #32
    5b1c:	stp	x10, x11, [sp, #8]
    5b20:	mov	w22, #0x106                 	// #262
    5b24:	b	5c2c <libintl_ngettext@@Base+0x32c>
    5b28:	mov	w22, wzr
    5b2c:	b	5ab8 <libintl_ngettext@@Base+0x1b8>
    5b30:	mov	x10, x9
    5b34:	ldrb	w11, [x10], #1
    5b38:	cmp	w11, w22
    5b3c:	csel	x9, x10, x9, eq  // eq = none
    5b40:	mov	w10, #0x100                 	// #256
    5b44:	csel	w22, w22, w10, eq  // eq = none
    5b48:	b	5c2c <libintl_ngettext@@Base+0x32c>
    5b4c:	mov	w22, #0x100                 	// #256
    5b50:	b	5c2c <libintl_ngettext@@Base+0x32c>
    5b54:	mov	x10, x9
    5b58:	ldrb	w11, [x10], #1
    5b5c:	ldr	x12, [sp, #16]
    5b60:	cmp	w11, #0x3d
    5b64:	mov	w11, #0xd                   	// #13
    5b68:	csel	w12, w11, w12, eq  // eq = none
    5b6c:	csel	x9, x10, x9, eq  // eq = none
    5b70:	mov	w10, #0x21                  	// #33
    5b74:	mov	w11, #0x102                 	// #258
    5b78:	str	x12, [sp, #16]
    5b7c:	csel	w22, w11, w10, eq  // eq = none
    5b80:	b	5c2c <libintl_ngettext@@Base+0x32c>
    5b84:	mov	w10, #0x5                   	// #5
    5b88:	b	5bb0 <libintl_ngettext@@Base+0x2b0>
    5b8c:	mov	w10, #0x3                   	// #3
    5b90:	b	5bb0 <libintl_ngettext@@Base+0x2b0>
    5b94:	mov	w10, #0x6                   	// #6
    5b98:	b	5ba0 <libintl_ngettext@@Base+0x2a0>
    5b9c:	mov	w10, #0x7                   	// #7
    5ba0:	mov	w22, #0x104                 	// #260
    5ba4:	str	x10, [sp, #16]
    5ba8:	b	5c2c <libintl_ngettext@@Base+0x32c>
    5bac:	mov	w10, #0x4                   	// #4
    5bb0:	mov	w22, #0x105                 	// #261
    5bb4:	str	x10, [sp, #16]
    5bb8:	b	5c2c <libintl_ngettext@@Base+0x32c>
    5bbc:	mov	x10, x9
    5bc0:	ldrb	w11, [x10], #1
    5bc4:	mov	w12, #0x8                   	// #8
    5bc8:	cmp	w11, #0x3d
    5bcc:	mov	w11, #0xa                   	// #10
    5bd0:	csel	w11, w11, w12, eq  // eq = none
    5bd4:	b	5c20 <libintl_ngettext@@Base+0x320>
    5bd8:	mov	x10, x9
    5bdc:	ldrb	w11, [x10], #1
    5be0:	ldr	x12, [sp, #16]
    5be4:	cmp	w11, #0x3d
    5be8:	mov	w11, #0xc                   	// #12
    5bec:	csel	w12, w11, w12, eq  // eq = none
    5bf0:	csel	x9, x10, x9, eq  // eq = none
    5bf4:	mov	w10, #0x102                 	// #258
    5bf8:	mov	w11, #0x100                 	// #256
    5bfc:	str	x12, [sp, #16]
    5c00:	csel	w22, w10, w11, eq  // eq = none
    5c04:	b	5c2c <libintl_ngettext@@Base+0x32c>
    5c08:	mov	x10, x9
    5c0c:	ldrb	w11, [x10], #1
    5c10:	mov	w12, #0xb                   	// #11
    5c14:	cmp	w11, #0x3d
    5c18:	mov	w11, #0x9                   	// #9
    5c1c:	csel	w11, w12, w11, eq  // eq = none
    5c20:	str	x11, [sp, #16]
    5c24:	csel	x9, x10, x9, eq  // eq = none
    5c28:	mov	w22, #0x103                 	// #259
    5c2c:	ldr	x10, [sp, #24]
    5c30:	str	x9, [x10]
    5c34:	ldrsb	w9, [x24, x8]
    5c38:	cmp	w22, #0x1
    5c3c:	b.lt	5c58 <libintl_ngettext@@Base+0x358>  // b.tstop
    5c40:	cmp	w22, #0x106
    5c44:	b.hi	5c64 <libintl_ngettext@@Base+0x364>  // b.pmore
    5c48:	adrp	x10, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5c4c:	add	x10, x10, #0xe2
    5c50:	ldrb	w10, [x10, w22, uxtw]
    5c54:	b	5c68 <libintl_ngettext@@Base+0x368>
    5c58:	mov	w10, wzr
    5c5c:	mov	w22, wzr
    5c60:	b	5c68 <libintl_ngettext@@Base+0x368>
    5c64:	mov	w10, #0x2                   	// #2
    5c68:	add	w9, w10, w9
    5c6c:	cmp	w9, #0x36
    5c70:	b.hi	5ca8 <libintl_ngettext@@Base+0x3a8>  // b.pmore
    5c74:	adrp	x11, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5c78:	add	x11, x11, #0x1e9
    5c7c:	ldrsb	w11, [x11, x9]
    5c80:	cmp	w10, w11
    5c84:	b.ne	5ca8 <libintl_ngettext@@Base+0x3a8>  // b.any
    5c88:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5c8c:	add	x8, x8, #0x220
    5c90:	ldrb	w28, [x8, x9]
    5c94:	orr	x8, x9, #0x1
    5c98:	cmp	x8, #0x25
    5c9c:	b.ne	5d80 <libintl_ngettext@@Base+0x480>  // b.any
    5ca0:	neg	w8, w28
    5ca4:	b	5cc4 <libintl_ngettext@@Base+0x3c4>
    5ca8:	mov	w9, #0xfd33                	// #64819
    5cac:	movk	w9, #0x205, lsl #16
    5cb0:	lsr	x9, x9, x8
    5cb4:	tbnz	w9, #0, 5d44 <libintl_ngettext@@Base+0x444>
    5cb8:	adrp	x9, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5cbc:	add	x9, x9, #0x257
    5cc0:	ldrb	w8, [x9, x8]
    5cc4:	adrp	x9, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5cc8:	sxtw	x25, w8
    5ccc:	add	x9, x9, #0x272
    5cd0:	ldrb	w28, [x9, x25]
    5cd4:	mov	w9, #0x1                   	// #1
    5cd8:	sub	w8, w8, #0x2
    5cdc:	cmp	w8, #0xb
    5ce0:	sub	x9, x9, x28
    5ce4:	ldr	x0, [x26, x9, lsl #3]
    5ce8:	b.hi	5ee4 <libintl_ngettext@@Base+0x5e4>  // b.pmore
    5cec:	adrp	x11, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5cf0:	add	x11, x11, #0xbb
    5cf4:	adr	x9, 5d04 <libintl_ngettext@@Base+0x404>
    5cf8:	ldrb	w10, [x11, x8]
    5cfc:	add	x9, x9, x10, lsl #2
    5d00:	br	x9
    5d04:	ldur	x8, [x26, #-16]
    5d08:	ldr	x24, [x26]
    5d0c:	mov	x19, x8
    5d10:	cbz	x8, 5ec0 <libintl_ngettext@@Base+0x5c0>
    5d14:	cbz	x24, 5ec0 <libintl_ngettext@@Base+0x5c0>
    5d18:	ldur	w8, [x26, #-8]
    5d1c:	mov	w0, #0x20                  	// #32
    5d20:	str	w8, [sp]
    5d24:	bl	1e10 <malloc@plt>
    5d28:	cbz	x0, 5ec0 <libintl_ngettext@@Base+0x5c0>
    5d2c:	mov	w8, #0x2                   	// #2
    5d30:	str	w8, [x0]
    5d34:	ldr	w8, [sp]
    5d38:	str	w8, [x0, #4]
    5d3c:	stp	x19, x24, [x0, #8]
    5d40:	b	5ed4 <libintl_ngettext@@Base+0x5d4>
    5d44:	ldr	w8, [sp, #36]
    5d48:	cmp	w8, #0x3
    5d4c:	b.eq	5d70 <libintl_ngettext@@Base+0x470>  // b.none
    5d50:	cbnz	w8, 5db4 <libintl_ngettext@@Base+0x4b4>
    5d54:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5d58:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5d5c:	mov	w2, #0x5                   	// #5
    5d60:	add	x0, x0, #0x294
    5d64:	add	x1, x1, #0x2a2
    5d68:	bl	1f40 <dcgettext@plt>
    5d6c:	b	5db4 <libintl_ngettext@@Base+0x4b4>
    5d70:	cmp	w22, #0x0
    5d74:	b.le	5db0 <libintl_ngettext@@Base+0x4b0>
    5d78:	mov	w22, #0xfffffffe            	// #-2
    5d7c:	b	5db4 <libintl_ngettext@@Base+0x4b4>
    5d80:	ldr	w9, [sp, #36]
    5d84:	mov	w22, #0xfffffffe            	// #-2
    5d88:	sub	w8, w9, #0x1
    5d8c:	cmp	w9, #0x0
    5d90:	ldr	x9, [sp, #16]
    5d94:	csel	w8, wzr, w8, eq  // eq = none
    5d98:	str	w8, [sp, #36]
    5d9c:	ldr	x8, [sp, #8]
    5da0:	mov	w9, w9
    5da4:	bfi	x9, x8, #32, #32
    5da8:	str	x9, [x26, #8]!
    5dac:	b	5f50 <libintl_ngettext@@Base+0x650>
    5db0:	cbz	w22, 5fe4 <libintl_ngettext@@Base+0x6e4>
    5db4:	add	x26, x26, #0x8
    5db8:	lsr	x8, x27, x28
    5dbc:	tbnz	w8, #0, 5de4 <libintl_ngettext@@Base+0x4e4>
    5dc0:	sxtw	x8, w28
    5dc4:	lsr	x9, x19, x8
    5dc8:	tbz	w9, #0, 5de4 <libintl_ngettext@@Base+0x4e4>
    5dcc:	ldrsb	x8, [x24, x8]
    5dd0:	adds	x8, x8, #0x1
    5dd4:	b.ne	5de4 <libintl_ngettext@@Base+0x4e4>  // b.any
    5dd8:	orr	x8, x8, #0x1
    5ddc:	cmp	x8, #0x25
    5de0:	b.ne	5e00 <libintl_ngettext@@Base+0x500>  // b.any
    5de4:	cmp	x20, x23
    5de8:	b.eq	5fe4 <libintl_ngettext@@Base+0x6e4>  // b.none
    5dec:	ldrsh	w28, [x23, #-2]!
    5df0:	sub	x26, x26, #0x8
    5df4:	lsr	x8, x27, x28
    5df8:	tbz	w8, #0, 5dc0 <libintl_ngettext@@Base+0x4c0>
    5dfc:	b	5de4 <libintl_ngettext@@Base+0x4e4>
    5e00:	ldp	x9, x8, [sp, #8]
    5e04:	mov	w28, #0x7                   	// #7
    5e08:	mov	w8, w8
    5e0c:	bfi	x8, x9, #32, #32
    5e10:	str	x8, [x26]
    5e14:	mov	w8, #0x3                   	// #3
    5e18:	str	w8, [sp, #36]
    5e1c:	b	5f50 <libintl_ngettext@@Base+0x650>
    5e20:	ldr	x8, [x26]
    5e24:	cbz	x8, 5fe4 <libintl_ngettext@@Base+0x6e4>
    5e28:	ldr	x9, [sp, #24]
    5e2c:	str	x8, [x9, #8]
    5e30:	b	5ee4 <libintl_ngettext@@Base+0x5e4>
    5e34:	ldur	x8, [x26, #-32]
    5e38:	ldur	x19, [x26, #-16]
    5e3c:	ldr	x24, [x26]
    5e40:	str	x8, [sp]
    5e44:	cbz	x8, 5fb4 <libintl_ngettext@@Base+0x6b4>
    5e48:	cbz	x19, 5fb4 <libintl_ngettext@@Base+0x6b4>
    5e4c:	cbz	x24, 5fb4 <libintl_ngettext@@Base+0x6b4>
    5e50:	mov	w0, #0x20                  	// #32
    5e54:	bl	1e10 <malloc@plt>
    5e58:	cbz	x0, 5fb4 <libintl_ngettext@@Base+0x6b4>
    5e5c:	ldr	x8, [sp]
    5e60:	str	d8, [x0]
    5e64:	str	x24, [x0, #24]
    5e68:	stp	x8, x19, [x0, #8]
    5e6c:	b	5ed4 <libintl_ngettext@@Base+0x5d4>
    5e70:	ldur	x8, [x26, #-16]
    5e74:	ldr	x24, [x26]
    5e78:	mov	x19, x8
    5e7c:	cbz	x8, 5ec0 <libintl_ngettext@@Base+0x5c0>
    5e80:	cbz	x24, 5ec0 <libintl_ngettext@@Base+0x5c0>
    5e84:	mov	w0, #0x20                  	// #32
    5e88:	bl	1e10 <malloc@plt>
    5e8c:	cbz	x0, 5ec0 <libintl_ngettext@@Base+0x5c0>
    5e90:	str	d9, [x0]
    5e94:	b	5d3c <libintl_ngettext@@Base+0x43c>
    5e98:	ldur	x8, [x26, #-16]
    5e9c:	ldr	x24, [x26]
    5ea0:	mov	x19, x8
    5ea4:	cbz	x8, 5ec0 <libintl_ngettext@@Base+0x5c0>
    5ea8:	cbz	x24, 5ec0 <libintl_ngettext@@Base+0x5c0>
    5eac:	mov	w0, #0x20                  	// #32
    5eb0:	bl	1e10 <malloc@plt>
    5eb4:	cbz	x0, 5ec0 <libintl_ngettext@@Base+0x5c0>
    5eb8:	str	d10, [x0]
    5ebc:	b	5d3c <libintl_ngettext@@Base+0x43c>
    5ec0:	mov	x0, x24
    5ec4:	bl	6060 <libintl_ngettext@@Base+0x760>
    5ec8:	mov	x0, x19
    5ecc:	bl	6060 <libintl_ngettext@@Base+0x760>
    5ed0:	mov	x0, xzr
    5ed4:	adrp	x24, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5ed8:	mov	w19, #0x160                 	// #352
    5edc:	add	x24, x24, #0xc7
    5ee0:	movk	w19, #0x4bc, lsl #16
    5ee4:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5ee8:	add	x8, x8, #0x280
    5eec:	ldrb	w8, [x8, x25]
    5ef0:	sub	x26, x26, x28, lsl #3
    5ef4:	adrp	x9, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5ef8:	sub	x23, x23, x28, lsl #1
    5efc:	str	x0, [x26, #8]!
    5f00:	sub	x8, x8, #0x10
    5f04:	add	x9, x9, #0x28e
    5f08:	ldrsb	w9, [x9, x8]
    5f0c:	ldrsh	w10, [x23]
    5f10:	add	w9, w10, w9
    5f14:	cmp	w9, #0x36
    5f18:	b.hi	5f44 <libintl_ngettext@@Base+0x644>  // b.pmore
    5f1c:	adrp	x11, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5f20:	add	x11, x11, #0x1e9
    5f24:	ldrsb	w11, [x11, x9]
    5f28:	and	w10, w10, #0xffff
    5f2c:	cmp	w10, w11, uxth
    5f30:	b.ne	5f44 <libintl_ngettext@@Base+0x644>  // b.any
    5f34:	adrp	x8, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5f38:	add	x8, x8, #0x220
    5f3c:	ldrb	w28, [x8, x9]
    5f40:	b	5f50 <libintl_ngettext@@Base+0x650>
    5f44:	adrp	x9, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    5f48:	add	x9, x9, #0x291
    5f4c:	ldrsb	w28, [x9, x8]
    5f50:	add	x23, x23, #0x2
    5f54:	b	59b0 <libintl_ngettext@@Base+0xb0>
    5f58:	mov	x19, x24
    5f5c:	ldr	x24, [x26]
    5f60:	cbz	x24, 5fcc <libintl_ngettext@@Base+0x6cc>
    5f64:	mov	w0, #0x20                  	// #32
    5f68:	bl	1e10 <malloc@plt>
    5f6c:	cbz	x0, 5fcc <libintl_ngettext@@Base+0x6cc>
    5f70:	str	d11, [x0]
    5f74:	str	x24, [x0, #8]
    5f78:	b	5fd8 <libintl_ngettext@@Base+0x6d8>
    5f7c:	mov	w0, #0x20                  	// #32
    5f80:	bl	1e10 <malloc@plt>
    5f84:	cbz	x0, 5ee4 <libintl_ngettext@@Base+0x5e4>
    5f88:	str	xzr, [x0]
    5f8c:	b	5ee4 <libintl_ngettext@@Base+0x5e4>
    5f90:	mov	w0, #0x20                  	// #32
    5f94:	bl	1e10 <malloc@plt>
    5f98:	cbz	x0, 5ee4 <libintl_ngettext@@Base+0x5e4>
    5f9c:	ldr	x8, [x26]
    5fa0:	str	d12, [x0]
    5fa4:	str	x8, [x0, #8]
    5fa8:	b	5ee4 <libintl_ngettext@@Base+0x5e4>
    5fac:	ldur	x0, [x26, #-8]
    5fb0:	b	5ee4 <libintl_ngettext@@Base+0x5e4>
    5fb4:	mov	x0, x24
    5fb8:	bl	6060 <libintl_ngettext@@Base+0x760>
    5fbc:	mov	x0, x19
    5fc0:	bl	6060 <libintl_ngettext@@Base+0x760>
    5fc4:	ldr	x0, [sp]
    5fc8:	b	5ecc <libintl_ngettext@@Base+0x5cc>
    5fcc:	mov	x0, x24
    5fd0:	bl	6060 <libintl_ngettext@@Base+0x760>
    5fd4:	mov	x0, xzr
    5fd8:	mov	x24, x19
    5fdc:	mov	w19, #0x160                 	// #352
    5fe0:	b	5ee0 <libintl_ngettext@@Base+0x5e0>
    5fe4:	mov	w19, #0x1                   	// #1
    5fe8:	add	x8, sp, #0x668
    5fec:	cmp	x20, x8
    5ff0:	b.eq	5ffc <libintl_ngettext@@Base+0x6fc>  // b.none
    5ff4:	mov	x0, x20
    5ff8:	bl	1fb0 <free@plt>
    5ffc:	mov	w0, w19
    6000:	add	sp, sp, #0x800
    6004:	ldp	x20, x19, [sp, #128]
    6008:	ldp	x22, x21, [sp, #112]
    600c:	ldp	x24, x23, [sp, #96]
    6010:	ldp	x26, x25, [sp, #80]
    6014:	ldp	x28, x27, [sp, #64]
    6018:	ldp	x29, x30, [sp, #48]
    601c:	ldp	d9, d8, [sp, #32]
    6020:	ldp	d11, d10, [sp, #16]
    6024:	ldr	d12, [sp], #144
    6028:	ret
    602c:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    6030:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    6034:	add	x0, x0, #0x294
    6038:	add	x1, x1, #0x2af
    603c:	mov	w2, #0x5                   	// #5
    6040:	bl	1f40 <dcgettext@plt>
    6044:	mov	w19, #0x2                   	// #2
    6048:	b	5fe8 <libintl_ngettext@@Base+0x6e8>
    604c:	mov	w19, wzr
    6050:	b	5fe8 <libintl_ngettext@@Base+0x6e8>
    6054:	mov	w19, #0x1                   	// #1
    6058:	mov	x20, x24
    605c:	b	5ff4 <libintl_ngettext@@Base+0x6f4>
    6060:	cbz	x0, 60b8 <libintl_ngettext@@Base+0x7b8>
    6064:	stp	x29, x30, [sp, #-32]!
    6068:	ldr	w8, [x0]
    606c:	str	x19, [sp, #16]
    6070:	mov	x19, x0
    6074:	mov	x29, sp
    6078:	cmp	w8, #0x1
    607c:	b.eq	60a0 <libintl_ngettext@@Base+0x7a0>  // b.none
    6080:	cmp	w8, #0x2
    6084:	b.eq	6098 <libintl_ngettext@@Base+0x798>  // b.none
    6088:	cmp	w8, #0x3
    608c:	b.ne	60a8 <libintl_ngettext@@Base+0x7a8>  // b.any
    6090:	ldr	x0, [x19, #24]
    6094:	bl	6060 <libintl_ngettext@@Base+0x760>
    6098:	ldr	x0, [x19, #16]
    609c:	bl	6060 <libintl_ngettext@@Base+0x760>
    60a0:	ldr	x0, [x19, #8]
    60a4:	bl	6060 <libintl_ngettext@@Base+0x760>
    60a8:	mov	x0, x19
    60ac:	ldr	x19, [sp, #16]
    60b0:	ldp	x29, x30, [sp], #32
    60b4:	b	1fb0 <free@plt>
    60b8:	ret
    60bc:	sub	sp, sp, #0x50
    60c0:	stp	x20, x19, [sp, #64]
    60c4:	mov	x19, x2
    60c8:	mov	x20, x1
    60cc:	stp	x29, x30, [sp, #16]
    60d0:	str	x23, [sp, #32]
    60d4:	stp	x22, x21, [sp, #48]
    60d8:	add	x29, sp, #0x10
    60dc:	cbz	x0, 617c <libintl_ngettext@@Base+0x87c>
    60e0:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    60e4:	add	x1, x1, #0x300
    60e8:	mov	x22, x0
    60ec:	bl	2080 <strstr@plt>
    60f0:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    60f4:	mov	x21, x0
    60f8:	add	x1, x1, #0x308
    60fc:	mov	x0, x22
    6100:	bl	2080 <strstr@plt>
    6104:	cbz	x21, 617c <libintl_ngettext@@Base+0x87c>
    6108:	mov	x22, x0
    610c:	cbz	x0, 617c <libintl_ngettext@@Base+0x87c>
    6110:	ldrb	w23, [x22, #9]!
    6114:	cbz	w23, 617c <libintl_ngettext@@Base+0x87c>
    6118:	bl	1f80 <__ctype_b_loc@plt>
    611c:	ldr	x8, [x0]
    6120:	and	x9, x23, #0xff
    6124:	ldrh	w9, [x8, x9, lsl #1]
    6128:	tbz	w9, #13, 6138 <libintl_ngettext@@Base+0x838>
    612c:	ldrb	w23, [x22, #1]!
    6130:	cbnz	w23, 6120 <libintl_ngettext@@Base+0x820>
    6134:	b	617c <libintl_ngettext@@Base+0x87c>
    6138:	sub	w8, w23, #0x30
    613c:	and	w8, w8, #0xff
    6140:	cmp	w8, #0x9
    6144:	b.hi	617c <libintl_ngettext@@Base+0x87c>  // b.pmore
    6148:	add	x1, x29, #0x18
    614c:	mov	w2, #0xa                   	// #10
    6150:	mov	x0, x22
    6154:	bl	1cb0 <strtoul@plt>
    6158:	ldr	x8, [x29, #24]
    615c:	cmp	x8, x22
    6160:	b.eq	617c <libintl_ngettext@@Base+0x87c>  // b.none
    6164:	str	x0, [x19]
    6168:	add	x8, x21, #0x7
    616c:	mov	x0, sp
    6170:	str	x8, [sp]
    6174:	bl	5918 <libintl_ngettext@@Base+0x18>
    6178:	cbz	w0, 61a8 <libintl_ngettext@@Base+0x8a8>
    617c:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    6180:	add	x8, x8, #0xd88
    6184:	mov	w9, #0x2                   	// #2
    6188:	str	x8, [x20]
    618c:	str	x9, [x19]
    6190:	ldp	x20, x19, [sp, #64]
    6194:	ldp	x22, x21, [sp, #48]
    6198:	ldr	x23, [sp, #32]
    619c:	ldp	x29, x30, [sp, #16]
    61a0:	add	sp, sp, #0x50
    61a4:	ret
    61a8:	ldr	x8, [sp, #8]
    61ac:	str	x8, [x20]
    61b0:	b	6190 <libintl_ngettext@@Base+0x890>
    61b4:	stp	x29, x30, [sp, #-16]!
    61b8:	mov	w0, #0xe                   	// #14
    61bc:	mov	x29, sp
    61c0:	bl	1df0 <nl_langinfo@plt>
    61c4:	adrp	x8, 6000 <libintl_ngettext@@Base+0x700>
    61c8:	add	x8, x8, #0xfad
    61cc:	cmp	x0, #0x0
    61d0:	csel	x8, x8, x0, eq  // eq = none
    61d4:	ldrb	w9, [x8]
    61d8:	adrp	x10, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    61dc:	add	x10, x10, #0x312
    61e0:	cmp	w9, #0x0
    61e4:	csel	x0, x10, x8, eq  // eq = none
    61e8:	ldp	x29, x30, [sp], #16
    61ec:	ret
    61f0:	sub	sp, sp, #0x30
    61f4:	stp	x20, x19, [sp, #32]
    61f8:	mov	x19, x0
    61fc:	add	x0, sp, #0x8
    6200:	stp	x29, x30, [sp, #16]
    6204:	add	x29, sp, #0x10
    6208:	bl	1c90 <pthread_rwlockattr_init@plt>
    620c:	mov	w20, w0
    6210:	cbnz	w0, 6240 <libintl_ngettext@@Base+0x940>
    6214:	add	x0, sp, #0x8
    6218:	mov	w1, #0x2                   	// #2
    621c:	bl	1d30 <pthread_rwlockattr_setkind_np@plt>
    6220:	mov	w20, w0
    6224:	cbnz	w0, 6238 <libintl_ngettext@@Base+0x938>
    6228:	add	x1, sp, #0x8
    622c:	mov	x0, x19
    6230:	bl	1d20 <pthread_rwlock_init@plt>
    6234:	mov	w20, w0
    6238:	add	x0, sp, #0x8
    623c:	bl	2090 <pthread_rwlockattr_destroy@plt>
    6240:	mov	w0, w20
    6244:	ldp	x20, x19, [sp, #32]
    6248:	ldp	x29, x30, [sp, #16]
    624c:	add	sp, sp, #0x30
    6250:	ret
    6254:	sub	sp, sp, #0x30
    6258:	stp	x20, x19, [sp, #32]
    625c:	mov	x19, x0
    6260:	add	x0, sp, #0x8
    6264:	stp	x29, x30, [sp, #16]
    6268:	add	x29, sp, #0x10
    626c:	bl	2050 <pthread_mutexattr_init@plt>
    6270:	mov	w20, w0
    6274:	cbnz	w0, 62b8 <libintl_ngettext@@Base+0x9b8>
    6278:	add	x0, sp, #0x8
    627c:	mov	w1, #0x1                   	// #1
    6280:	bl	1ce0 <pthread_mutexattr_settype@plt>
    6284:	cbz	w0, 6298 <libintl_ngettext@@Base+0x998>
    6288:	mov	w20, w0
    628c:	add	x0, sp, #0x8
    6290:	bl	2070 <pthread_mutexattr_destroy@plt>
    6294:	b	62b8 <libintl_ngettext@@Base+0x9b8>
    6298:	add	x1, sp, #0x8
    629c:	mov	x0, x19
    62a0:	bl	1ef0 <pthread_mutex_init@plt>
    62a4:	mov	w19, w0
    62a8:	add	x0, sp, #0x8
    62ac:	bl	2070 <pthread_mutexattr_destroy@plt>
    62b0:	cmp	w19, #0x0
    62b4:	csel	w20, w0, w19, eq  // eq = none
    62b8:	mov	w0, w20
    62bc:	ldp	x20, x19, [sp, #32]
    62c0:	ldp	x29, x30, [sp, #16]
    62c4:	add	sp, sp, #0x30
    62c8:	ret
    62cc:	ldrb	w8, [x0]
    62d0:	cbz	w8, 62dc <libintl_ngettext@@Base+0x9dc>
    62d4:	mov	w0, wzr
    62d8:	ret
    62dc:	mov	w8, #0xff                  	// #255
    62e0:	strb	w8, [x0]
    62e4:	mov	w0, #0x1                   	// #1
    62e8:	ret

00000000000062ec <libintl_set_relocation_prefix@@Base>:
    62ec:	stp	x29, x30, [sp, #-64]!
    62f0:	str	x23, [sp, #16]
    62f4:	stp	x22, x21, [sp, #32]
    62f8:	stp	x20, x19, [sp, #48]
    62fc:	mov	x29, sp
    6300:	cbz	x0, 6384 <libintl_set_relocation_prefix@@Base+0x98>
    6304:	mov	x19, x1
    6308:	cbz	x1, 6384 <libintl_set_relocation_prefix@@Base+0x98>
    630c:	mov	x1, x19
    6310:	mov	x20, x0
    6314:	bl	1f60 <strcmp@plt>
    6318:	cbz	w0, 6384 <libintl_set_relocation_prefix@@Base+0x98>
    631c:	mov	x0, x20
    6320:	bl	1cc0 <strlen@plt>
    6324:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    6328:	mov	x21, x0
    632c:	str	x0, [x8, #1080]
    6330:	mov	x0, x19
    6334:	bl	1cc0 <strlen@plt>
    6338:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    633c:	add	x22, x21, #0x1
    6340:	add	x21, x0, #0x1
    6344:	str	x0, [x8, #1088]
    6348:	add	x0, x21, x22
    634c:	bl	1e10 <malloc@plt>
    6350:	cbz	x0, 6384 <libintl_set_relocation_prefix@@Base+0x98>
    6354:	mov	x1, x20
    6358:	mov	x2, x22
    635c:	mov	x23, x0
    6360:	bl	1c70 <memcpy@plt>
    6364:	add	x20, x23, x22
    6368:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    636c:	mov	x0, x20
    6370:	mov	x1, x19
    6374:	mov	x2, x21
    6378:	str	x23, [x8, #1064]
    637c:	bl	1c70 <memcpy@plt>
    6380:	b	6390 <libintl_set_relocation_prefix@@Base+0xa4>
    6384:	mov	x20, xzr
    6388:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    638c:	str	xzr, [x8, #1064]
    6390:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    6394:	str	x20, [x8, #1072]
    6398:	ldp	x20, x19, [sp, #48]
    639c:	ldp	x22, x21, [sp, #32]
    63a0:	ldr	x23, [sp, #16]
    63a4:	ldp	x29, x30, [sp], #64
    63a8:	ret
    63ac:	stp	x29, x30, [sp, #-64]!
    63b0:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    63b4:	ldr	x1, [x8, #1064]
    63b8:	stp	x20, x19, [sp, #48]
    63bc:	mov	x19, x0
    63c0:	str	x23, [sp, #16]
    63c4:	stp	x22, x21, [sp, #32]
    63c8:	mov	x29, sp
    63cc:	cbz	x1, 63f4 <libintl_set_relocation_prefix@@Base+0x108>
    63d0:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    63d4:	ldr	x20, [x8, #1072]
    63d8:	cbz	x20, 63f4 <libintl_set_relocation_prefix@@Base+0x108>
    63dc:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    63e0:	ldr	x21, [x8, #1080]
    63e4:	mov	x0, x19
    63e8:	mov	x2, x21
    63ec:	bl	1e40 <strncmp@plt>
    63f0:	cbz	w0, 640c <libintl_set_relocation_prefix@@Base+0x120>
    63f4:	mov	x0, x19
    63f8:	ldp	x20, x19, [sp, #48]
    63fc:	ldp	x22, x21, [sp, #32]
    6400:	ldr	x23, [sp, #16]
    6404:	ldp	x29, x30, [sp], #64
    6408:	ret
    640c:	add	x21, x19, x21
    6410:	ldrb	w8, [x21]
    6414:	cmp	w8, #0x2f
    6418:	b.eq	6444 <libintl_set_relocation_prefix@@Base+0x158>  // b.none
    641c:	cbnz	w8, 63f4 <libintl_set_relocation_prefix@@Base+0x108>
    6420:	mov	x0, x20
    6424:	bl	1cc0 <strlen@plt>
    6428:	add	x0, x0, #0x1
    642c:	bl	1e10 <malloc@plt>
    6430:	cbz	x0, 63f4 <libintl_set_relocation_prefix@@Base+0x108>
    6434:	mov	x1, x20
    6438:	bl	2020 <strcpy@plt>
    643c:	mov	x19, x0
    6440:	b	63f4 <libintl_set_relocation_prefix@@Base+0x108>
    6444:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    6448:	ldr	x22, [x8, #1088]
    644c:	mov	x0, x21
    6450:	bl	1cc0 <strlen@plt>
    6454:	add	x8, x22, x0
    6458:	add	x0, x8, #0x1
    645c:	bl	1e10 <malloc@plt>
    6460:	cbz	x0, 63f4 <libintl_set_relocation_prefix@@Base+0x108>
    6464:	mov	x1, x20
    6468:	mov	x2, x22
    646c:	mov	x23, x0
    6470:	bl	1c70 <memcpy@plt>
    6474:	add	x0, x23, x22
    6478:	mov	x1, x21
    647c:	bl	2020 <strcpy@plt>
    6480:	mov	x19, x23
    6484:	b	63f4 <libintl_set_relocation_prefix@@Base+0x108>
    6488:	stp	x29, x30, [sp, #-32]!
    648c:	stp	x20, x19, [sp, #16]
    6490:	mov	x29, sp
    6494:	mov	x19, x1
    6498:	mov	x20, x0
    649c:	bl	63ac <libintl_set_relocation_prefix@@Base+0xc0>
    64a0:	cmp	x0, x20
    64a4:	csel	x8, xzr, x0, eq  // eq = none
    64a8:	str	x8, [x19]
    64ac:	ldp	x20, x19, [sp, #16]
    64b0:	ldp	x29, x30, [sp], #32
    64b4:	ret
    64b8:	mov	x0, xzr
    64bc:	ret
    64c0:	stp	x29, x30, [sp, #-32]!
    64c4:	stp	x20, x19, [sp, #16]
    64c8:	mov	w19, w0
    64cc:	mov	x0, xzr
    64d0:	mov	x29, sp
    64d4:	bl	1fa0 <uselocale@plt>
    64d8:	cmn	x0, #0x1
    64dc:	b.eq	6504 <libintl_set_relocation_prefix@@Base+0x218>  // b.none
    64e0:	mov	x20, x0
    64e4:	mov	w0, #0xffff                	// #65535
    64e8:	bfi	w0, w19, #16, #16
    64ec:	bl	1df0 <nl_langinfo@plt>
    64f0:	ldrb	w8, [x0]
    64f4:	cbnz	w8, 6508 <libintl_set_relocation_prefix@@Base+0x21c>
    64f8:	add	x8, x20, w19, sxtw #3
    64fc:	ldr	x0, [x8, #128]
    6500:	b	6508 <libintl_set_relocation_prefix@@Base+0x21c>
    6504:	mov	x0, xzr
    6508:	ldp	x20, x19, [sp, #16]
    650c:	ldp	x29, x30, [sp], #32
    6510:	ret
    6514:	stp	x29, x30, [sp, #-64]!
    6518:	stp	x20, x19, [sp, #48]
    651c:	mov	w20, w0
    6520:	mov	x0, xzr
    6524:	stp	x24, x23, [sp, #16]
    6528:	stp	x22, x21, [sp, #32]
    652c:	mov	x29, sp
    6530:	bl	1fa0 <uselocale@plt>
    6534:	cmn	x0, #0x1
    6538:	b.eq	65a4 <libintl_set_relocation_prefix@@Base+0x2b8>  // b.none
    653c:	mov	x21, x0
    6540:	mov	w0, #0xffff                	// #65535
    6544:	bfi	w0, w20, #16, #16
    6548:	bl	1df0 <nl_langinfo@plt>
    654c:	ldrb	w8, [x0]
    6550:	mov	x19, x0
    6554:	cbz	w8, 6598 <libintl_set_relocation_prefix@@Base+0x2ac>
    6558:	cbz	x19, 65a4 <libintl_set_relocation_prefix@@Base+0x2b8>
    655c:	ldrb	w9, [x19]
    6560:	cbz	w9, 65ac <libintl_set_relocation_prefix@@Base+0x2c0>
    6564:	mov	x8, xzr
    6568:	add	x10, x19, #0x1
    656c:	ror	x8, x8, #55
    6570:	add	x8, x8, w9, uxtb
    6574:	ldrb	w9, [x10], #1
    6578:	cbnz	w9, 656c <libintl_set_relocation_prefix@@Base+0x280>
    657c:	mov	x9, #0xff00ff00ff00ff00    	// #-71777214294589696
    6580:	movk	x9, #0xff01
    6584:	umulh	x9, x8, x9
    6588:	lsr	x9, x9, #8
    658c:	add	x9, x9, x9, lsl #8
    6590:	sub	x22, x8, x9
    6594:	b	65b0 <libintl_set_relocation_prefix@@Base+0x2c4>
    6598:	add	x8, x21, w20, sxtw #3
    659c:	ldr	x19, [x8, #128]
    65a0:	cbnz	x19, 655c <libintl_set_relocation_prefix@@Base+0x270>
    65a4:	mov	x20, xzr
    65a8:	b	6690 <libintl_set_relocation_prefix@@Base+0x3a4>
    65ac:	mov	x22, xzr
    65b0:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    65b4:	add	x23, x23, #0x448
    65b8:	ldr	x21, [x23, x22, lsl #3]
    65bc:	cbz	x21, 65dc <libintl_set_relocation_prefix@@Base+0x2f0>
    65c0:	add	x20, x21, #0x8
    65c4:	mov	x0, x20
    65c8:	mov	x1, x19
    65cc:	bl	1f60 <strcmp@plt>
    65d0:	cbz	w0, 6690 <libintl_set_relocation_prefix@@Base+0x3a4>
    65d4:	ldr	x21, [x21]
    65d8:	cbnz	x21, 65c0 <libintl_set_relocation_prefix@@Base+0x2d4>
    65dc:	mov	x0, x19
    65e0:	bl	1cc0 <strlen@plt>
    65e4:	add	x8, x0, #0x10
    65e8:	mov	x21, x0
    65ec:	and	x0, x8, #0xfffffffffffffff8
    65f0:	bl	1e10 <malloc@plt>
    65f4:	cbz	x0, 6664 <libintl_set_relocation_prefix@@Base+0x378>
    65f8:	mov	x20, x0
    65fc:	add	x2, x21, #0x1
    6600:	add	x0, x0, #0x8
    6604:	mov	x1, x19
    6608:	bl	1c70 <memcpy@plt>
    660c:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    6610:	ldr	x21, [x21, #4064]
    6614:	cbz	x21, 6628 <libintl_set_relocation_prefix@@Base+0x33c>
    6618:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    661c:	add	x0, x0, #0xc50
    6620:	bl	20e0 <pthread_mutex_lock@plt>
    6624:	cbnz	w0, 66a8 <libintl_set_relocation_prefix@@Base+0x3bc>
    6628:	ldr	x24, [x23, x22, lsl #3]
    662c:	cbz	x24, 6648 <libintl_set_relocation_prefix@@Base+0x35c>
    6630:	add	x0, x24, #0x8
    6634:	mov	x1, x19
    6638:	bl	1f60 <strcmp@plt>
    663c:	cbz	w0, 6670 <libintl_set_relocation_prefix@@Base+0x384>
    6640:	ldr	x24, [x24]
    6644:	cbnz	x24, 6630 <libintl_set_relocation_prefix@@Base+0x344>
    6648:	lsl	x8, x22, #3
    664c:	ldr	x9, [x23, x8]
    6650:	mov	x24, x20
    6654:	str	x9, [x20]
    6658:	str	x20, [x23, x8]
    665c:	cbnz	x21, 667c <libintl_set_relocation_prefix@@Base+0x390>
    6660:	b	668c <libintl_set_relocation_prefix@@Base+0x3a0>
    6664:	adrp	x20, 6000 <libintl_ngettext@@Base+0x700>
    6668:	add	x20, x20, #0xfe2
    666c:	b	6690 <libintl_set_relocation_prefix@@Base+0x3a4>
    6670:	mov	x0, x20
    6674:	bl	1fb0 <free@plt>
    6678:	cbz	x21, 668c <libintl_set_relocation_prefix@@Base+0x3a0>
    667c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    6680:	add	x0, x0, #0xc50
    6684:	bl	20f0 <pthread_mutex_unlock@plt>
    6688:	cbnz	w0, 66a8 <libintl_set_relocation_prefix@@Base+0x3bc>
    668c:	add	x20, x24, #0x8
    6690:	mov	x0, x20
    6694:	ldp	x20, x19, [sp, #48]
    6698:	ldp	x22, x21, [sp, #32]
    669c:	ldp	x24, x23, [sp, #16]
    66a0:	ldp	x29, x30, [sp], #64
    66a4:	ret
    66a8:	bl	1f20 <abort@plt>
    66ac:	mov	x1, xzr
    66b0:	b	2110 <setlocale@plt>
    66b4:	stp	x29, x30, [sp, #-32]!
    66b8:	adrp	x0, 6000 <libintl_ngettext@@Base+0x700>
    66bc:	add	x0, x0, #0xff8
    66c0:	str	x19, [sp, #16]
    66c4:	mov	x29, sp
    66c8:	mov	x19, x1
    66cc:	bl	20d0 <getenv@plt>
    66d0:	cbz	x0, 66dc <libintl_set_relocation_prefix@@Base+0x3f0>
    66d4:	ldrb	w8, [x0]
    66d8:	cbnz	w8, 670c <libintl_set_relocation_prefix@@Base+0x420>
    66dc:	mov	x0, x19
    66e0:	bl	20d0 <getenv@plt>
    66e4:	cbz	x0, 66f0 <libintl_set_relocation_prefix@@Base+0x404>
    66e8:	ldrb	w8, [x0]
    66ec:	cbnz	w8, 670c <libintl_set_relocation_prefix@@Base+0x420>
    66f0:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    66f4:	add	x0, x0, #0x318
    66f8:	bl	20d0 <getenv@plt>
    66fc:	cbz	x0, 6708 <libintl_set_relocation_prefix@@Base+0x41c>
    6700:	ldrb	w8, [x0]
    6704:	cbnz	w8, 670c <libintl_set_relocation_prefix@@Base+0x420>
    6708:	mov	x0, xzr
    670c:	ldr	x19, [sp, #16]
    6710:	ldp	x29, x30, [sp], #32
    6714:	ret
    6718:	adrp	x0, 6000 <libintl_ngettext@@Base+0x700>
    671c:	add	x0, x0, #0xfe2
    6720:	ret
    6724:	stp	x29, x30, [sp, #-32]!
    6728:	str	x19, [sp, #16]
    672c:	mov	x29, sp
    6730:	mov	w19, w0
    6734:	bl	6514 <libintl_set_relocation_prefix@@Base+0x228>
    6738:	cbnz	x0, 6758 <libintl_set_relocation_prefix@@Base+0x46c>
    673c:	mov	w0, w19
    6740:	mov	x1, xzr
    6744:	bl	2110 <setlocale@plt>
    6748:	adrp	x8, 6000 <libintl_ngettext@@Base+0x700>
    674c:	add	x8, x8, #0xfe2
    6750:	cmp	x0, #0x0
    6754:	csel	x0, x8, x0, eq  // eq = none
    6758:	ldr	x19, [sp, #16]
    675c:	ldp	x29, x30, [sp], #32
    6760:	ret
    6764:	stp	x29, x30, [sp, #-64]!
    6768:	stp	x24, x23, [sp, #16]
    676c:	stp	x22, x21, [sp, #32]
    6770:	stp	x20, x19, [sp, #48]
    6774:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0x104a8>
    6778:	ldr	x24, [x24, #4064]
    677c:	mov	w19, w4
    6780:	mov	x20, x3
    6784:	mov	x21, x2
    6788:	mov	x22, x1
    678c:	mov	x23, x0
    6790:	mov	x29, sp
    6794:	cbz	x24, 67e8 <libintl_set_relocation_prefix@@Base+0x4fc>
    6798:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    679c:	add	x0, x0, #0xc80
    67a0:	bl	20e0 <pthread_mutex_lock@plt>
    67a4:	cbnz	w0, 6810 <libintl_set_relocation_prefix@@Base+0x524>
    67a8:	mov	x0, x23
    67ac:	mov	x1, x22
    67b0:	mov	x2, x21
    67b4:	mov	x3, x20
    67b8:	mov	w4, w19
    67bc:	bl	6814 <libintl_set_relocation_prefix@@Base+0x528>
    67c0:	cbz	x24, 67d4 <libintl_set_relocation_prefix@@Base+0x4e8>
    67c4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    67c8:	add	x0, x0, #0xc80
    67cc:	bl	20f0 <pthread_mutex_unlock@plt>
    67d0:	cbnz	w0, 6810 <libintl_set_relocation_prefix@@Base+0x524>
    67d4:	ldp	x20, x19, [sp, #48]
    67d8:	ldp	x22, x21, [sp, #32]
    67dc:	ldp	x24, x23, [sp, #16]
    67e0:	ldp	x29, x30, [sp], #64
    67e4:	ret
    67e8:	mov	x0, x23
    67ec:	mov	x1, x22
    67f0:	mov	x2, x21
    67f4:	mov	x3, x20
    67f8:	mov	w4, w19
    67fc:	ldp	x20, x19, [sp, #48]
    6800:	ldp	x22, x21, [sp, #32]
    6804:	ldp	x24, x23, [sp, #16]
    6808:	ldp	x29, x30, [sp], #64
    680c:	b	6814 <libintl_set_relocation_prefix@@Base+0x528>
    6810:	bl	1f20 <abort@plt>
    6814:	stp	x29, x30, [sp, #-96]!
    6818:	str	x27, [sp, #16]
    681c:	stp	x26, x25, [sp, #32]
    6820:	stp	x24, x23, [sp, #48]
    6824:	stp	x22, x21, [sp, #64]
    6828:	stp	x20, x19, [sp, #80]
    682c:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    6830:	ldr	x25, [x27, #3248]
    6834:	mov	w20, w4
    6838:	mov	x19, x3
    683c:	mov	x22, x2
    6840:	mov	x23, x1
    6844:	mov	x24, x0
    6848:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x114a8>
    684c:	mov	x29, sp
    6850:	cbz	x25, 6888 <libintl_set_relocation_prefix@@Base+0x59c>
    6854:	mov	x0, x24
    6858:	mov	x1, x25
    685c:	bl	1f60 <strcmp@plt>
    6860:	ldr	x21, [x26, #3256]
    6864:	cbz	w0, 68c4 <libintl_set_relocation_prefix@@Base+0x5d8>
    6868:	cbz	x21, 687c <libintl_set_relocation_prefix@@Base+0x590>
    686c:	mov	x0, x21
    6870:	bl	1de0 <fclose@plt>
    6874:	ldr	x25, [x27, #3248]
    6878:	str	xzr, [x26, #3256]
    687c:	mov	x0, x25
    6880:	bl	1fb0 <free@plt>
    6884:	str	xzr, [x27, #3248]
    6888:	mov	x0, x24
    688c:	bl	1cc0 <strlen@plt>
    6890:	add	x0, x0, #0x1
    6894:	bl	1e10 <malloc@plt>
    6898:	str	x0, [x27, #3248]
    689c:	cbz	x0, 69a8 <libintl_set_relocation_prefix@@Base+0x6bc>
    68a0:	mov	x1, x24
    68a4:	bl	2020 <strcpy@plt>
    68a8:	adrp	x1, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    68ac:	add	x1, x1, #0x31d
    68b0:	mov	x0, x24
    68b4:	bl	1e00 <fopen@plt>
    68b8:	mov	x21, x0
    68bc:	str	x0, [x26, #3256]
    68c0:	cbz	x0, 69a8 <libintl_set_relocation_prefix@@Base+0x6bc>
    68c4:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    68c8:	add	x0, x0, #0x31f
    68cc:	mov	w1, #0x7                   	// #7
    68d0:	mov	w2, #0x1                   	// #1
    68d4:	mov	x3, x21
    68d8:	bl	2000 <fwrite@plt>
    68dc:	mov	x0, x23
    68e0:	bl	1cc0 <strlen@plt>
    68e4:	add	x2, x23, x0
    68e8:	mov	x0, x21
    68ec:	mov	x1, x23
    68f0:	bl	6a00 <libintl_set_relocation_prefix@@Base+0x714>
    68f4:	mov	w1, #0x4                   	// #4
    68f8:	mov	x0, x22
    68fc:	bl	1ff0 <strchr@plt>
    6900:	cbz	x0, 6934 <libintl_set_relocation_prefix@@Base+0x648>
    6904:	mov	x23, x0
    6908:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    690c:	add	x0, x0, #0x327
    6910:	mov	w1, #0x9                   	// #9
    6914:	mov	w2, #0x1                   	// #1
    6918:	mov	x3, x21
    691c:	bl	2000 <fwrite@plt>
    6920:	mov	x0, x21
    6924:	mov	x1, x22
    6928:	mov	x2, x23
    692c:	bl	6a00 <libintl_set_relocation_prefix@@Base+0x714>
    6930:	add	x22, x23, #0x1
    6934:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    6938:	add	x0, x0, #0x331
    693c:	mov	w1, #0x7                   	// #7
    6940:	mov	w2, #0x1                   	// #1
    6944:	mov	x3, x21
    6948:	bl	2000 <fwrite@plt>
    694c:	mov	x0, x22
    6950:	bl	1cc0 <strlen@plt>
    6954:	add	x2, x22, x0
    6958:	mov	x0, x21
    695c:	mov	x1, x22
    6960:	bl	6a00 <libintl_set_relocation_prefix@@Base+0x714>
    6964:	cbz	w20, 69c4 <libintl_set_relocation_prefix@@Base+0x6d8>
    6968:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    696c:	add	x0, x0, #0x339
    6970:	mov	w1, #0xe                   	// #14
    6974:	mov	w2, #0x1                   	// #1
    6978:	mov	x3, x21
    697c:	bl	2000 <fwrite@plt>
    6980:	mov	x0, x19
    6984:	bl	1cc0 <strlen@plt>
    6988:	add	x2, x19, x0
    698c:	mov	x0, x21
    6990:	mov	x1, x19
    6994:	bl	6a00 <libintl_set_relocation_prefix@@Base+0x714>
    6998:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    699c:	add	x0, x0, #0x348
    69a0:	mov	w1, #0xe                   	// #14
    69a4:	b	69d0 <libintl_set_relocation_prefix@@Base+0x6e4>
    69a8:	ldp	x20, x19, [sp, #80]
    69ac:	ldp	x22, x21, [sp, #64]
    69b0:	ldp	x24, x23, [sp, #48]
    69b4:	ldp	x26, x25, [sp, #32]
    69b8:	ldr	x27, [sp, #16]
    69bc:	ldp	x29, x30, [sp], #96
    69c0:	ret
    69c4:	adrp	x0, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    69c8:	add	x0, x0, #0x357
    69cc:	mov	w1, #0xb                   	// #11
    69d0:	mov	w2, #0x1                   	// #1
    69d4:	mov	x3, x21
    69d8:	bl	2000 <fwrite@plt>
    69dc:	mov	x1, x21
    69e0:	ldp	x20, x19, [sp, #80]
    69e4:	ldp	x22, x21, [sp, #64]
    69e8:	ldp	x24, x23, [sp, #48]
    69ec:	ldp	x26, x25, [sp, #32]
    69f0:	ldr	x27, [sp, #16]
    69f4:	mov	w0, #0xa                   	// #10
    69f8:	ldp	x29, x30, [sp], #96
    69fc:	b	1d70 <putc@plt>
    6a00:	stp	x29, x30, [sp, #-64]!
    6a04:	stp	x20, x19, [sp, #48]
    6a08:	mov	x19, x0
    6a0c:	stp	x22, x21, [sp, #32]
    6a10:	mov	x21, x1
    6a14:	mov	w0, #0x22                  	// #34
    6a18:	mov	x1, x19
    6a1c:	stp	x24, x23, [sp, #16]
    6a20:	mov	x29, sp
    6a24:	mov	x20, x2
    6a28:	bl	1d70 <putc@plt>
    6a2c:	cmp	x21, x20
    6a30:	b.eq	6ac0 <libintl_set_relocation_prefix@@Base+0x7d4>  // b.none
    6a34:	adrp	x22, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    6a38:	adrp	x23, 7000 <bind_textdomain_codeset@@Base+0x4a8>
    6a3c:	sub	x24, x20, #0x1
    6a40:	add	x22, x22, #0x363
    6a44:	add	x23, x23, #0x367
    6a48:	b	6a70 <libintl_set_relocation_prefix@@Base+0x784>
    6a4c:	mov	w0, #0x5c                  	// #92
    6a50:	mov	x1, x19
    6a54:	bl	1d70 <putc@plt>
    6a58:	ldrb	w0, [x21]
    6a5c:	mov	x1, x19
    6a60:	bl	1d70 <putc@plt>
    6a64:	add	x21, x21, #0x1
    6a68:	cmp	x20, x21
    6a6c:	b.eq	6ac0 <libintl_set_relocation_prefix@@Base+0x7d4>  // b.none
    6a70:	ldrb	w0, [x21]
    6a74:	cmp	w0, #0x5c
    6a78:	b.eq	6a4c <libintl_set_relocation_prefix@@Base+0x760>  // b.none
    6a7c:	cmp	w0, #0x22
    6a80:	b.eq	6a4c <libintl_set_relocation_prefix@@Base+0x760>  // b.none
    6a84:	cmp	w0, #0xa
    6a88:	b.ne	6a5c <libintl_set_relocation_prefix@@Base+0x770>  // b.any
    6a8c:	mov	w1, #0x3                   	// #3
    6a90:	mov	w2, #0x1                   	// #1
    6a94:	mov	x0, x22
    6a98:	mov	x3, x19
    6a9c:	bl	2000 <fwrite@plt>
    6aa0:	cmp	x24, x21
    6aa4:	b.eq	6adc <libintl_set_relocation_prefix@@Base+0x7f0>  // b.none
    6aa8:	mov	w1, #0x2                   	// #2
    6aac:	mov	w2, #0x1                   	// #1
    6ab0:	mov	x0, x23
    6ab4:	mov	x3, x19
    6ab8:	bl	2000 <fwrite@plt>
    6abc:	b	6a64 <libintl_set_relocation_prefix@@Base+0x778>
    6ac0:	mov	x1, x19
    6ac4:	ldp	x20, x19, [sp, #48]
    6ac8:	ldp	x22, x21, [sp, #32]
    6acc:	ldp	x24, x23, [sp, #16]
    6ad0:	mov	w0, #0x22                  	// #34
    6ad4:	ldp	x29, x30, [sp], #64
    6ad8:	b	1d70 <putc@plt>
    6adc:	ldp	x20, x19, [sp, #48]
    6ae0:	ldp	x22, x21, [sp, #32]
    6ae4:	ldp	x24, x23, [sp, #16]
    6ae8:	ldp	x29, x30, [sp], #64
    6aec:	ret
    6af0:	adds	x8, x0, x1
    6af4:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    6af8:	ret
    6afc:	adds	x8, x0, x1
    6b00:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
    6b04:	adds	x8, x8, x2
    6b08:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    6b0c:	ret
    6b10:	adds	x8, x0, x1
    6b14:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
    6b18:	adds	x8, x8, x2
    6b1c:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
    6b20:	adds	x8, x8, x3
    6b24:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    6b28:	ret
    6b2c:	cmp	x0, x1
    6b30:	csel	x0, x1, x0, cc  // cc = lo, ul, last
    6b34:	ret

0000000000006b38 <gettext@@Base>:
    6b38:	b	2100 <libintl_gettext@plt>

0000000000006b3c <dgettext@@Base>:
    6b3c:	b	1fe0 <libintl_dgettext@plt>

0000000000006b40 <dcgettext@@Base>:
    6b40:	b	1da0 <libintl_dcgettext@plt>

0000000000006b44 <ngettext@@Base>:
    6b44:	b	2120 <libintl_ngettext@plt>

0000000000006b48 <dngettext@@Base>:
    6b48:	b	1c80 <libintl_dngettext@plt>

0000000000006b4c <dcngettext@@Base>:
    6b4c:	b	1e60 <libintl_dcngettext@plt>

0000000000006b50 <textdomain@@Base>:
    6b50:	b	1d90 <libintl_textdomain@plt>

0000000000006b54 <bindtextdomain@@Base>:
    6b54:	b	1e90 <libintl_bindtextdomain@plt>

0000000000006b58 <bind_textdomain_codeset@@Base>:
    6b58:	b	1e80 <libintl_bind_textdomain_codeset@plt>

Disassembly of section .fini:

0000000000006b5c <.fini>:
    6b5c:	stp	x29, x30, [sp, #-16]!
    6b60:	mov	x29, sp
    6b64:	ldp	x29, x30, [sp], #16
    6b68:	ret
