
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//genl_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404cd0 <.init>:
  404cd0:	stp	x29, x30, [sp, #-16]!
  404cd4:	mov	x29, sp
  404cd8:	bl	4052d0 <_start@@Base+0x50>
  404cdc:	ldp	x29, x30, [sp], #16
  404ce0:	ret

Disassembly of section .plt:

0000000000404cf0 <memcpy@plt-0x20>:
  404cf0:	stp	x16, x30, [sp, #-16]!
  404cf4:	adrp	x16, 41e000 <_IO_stdin_used@@Base+0x10428>
  404cf8:	ldr	x17, [x16, #4088]
  404cfc:	add	x16, x16, #0xff8
  404d00:	br	x17
  404d04:	nop
  404d08:	nop
  404d0c:	nop

0000000000404d10 <memcpy@plt>:
  404d10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16]
  404d18:	add	x16, x16, #0x0
  404d1c:	br	x17

0000000000404d20 <recvmsg@plt>:
  404d20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #8]
  404d28:	add	x16, x16, #0x8
  404d2c:	br	x17

0000000000404d30 <strtoul@plt>:
  404d30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #16]
  404d38:	add	x16, x16, #0x10
  404d3c:	br	x17

0000000000404d40 <strlen@plt>:
  404d40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #24]
  404d48:	add	x16, x16, #0x18
  404d4c:	br	x17

0000000000404d50 <exit@plt>:
  404d50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #32]
  404d58:	add	x16, x16, #0x20
  404d5c:	br	x17

0000000000404d60 <perror@plt>:
  404d60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #40]
  404d68:	add	x16, x16, #0x28
  404d6c:	br	x17

0000000000404d70 <strtoll@plt>:
  404d70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #48]
  404d78:	add	x16, x16, #0x30
  404d7c:	br	x17

0000000000404d80 <strtod@plt>:
  404d80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #56]
  404d88:	add	x16, x16, #0x38
  404d8c:	br	x17

0000000000404d90 <geteuid@plt>:
  404d90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #64]
  404d98:	add	x16, x16, #0x40
  404d9c:	br	x17

0000000000404da0 <sethostent@plt>:
  404da0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #72]
  404da8:	add	x16, x16, #0x48
  404dac:	br	x17

0000000000404db0 <bind@plt>:
  404db0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #80]
  404db8:	add	x16, x16, #0x50
  404dbc:	br	x17

0000000000404dc0 <ftell@plt>:
  404dc0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #88]
  404dc8:	add	x16, x16, #0x58
  404dcc:	br	x17

0000000000404dd0 <sprintf@plt>:
  404dd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #96]
  404dd8:	add	x16, x16, #0x60
  404ddc:	br	x17

0000000000404de0 <getuid@plt>:
  404de0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #104]
  404de8:	add	x16, x16, #0x68
  404dec:	br	x17

0000000000404df0 <putc@plt>:
  404df0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #112]
  404df8:	add	x16, x16, #0x70
  404dfc:	br	x17

0000000000404e00 <strftime@plt>:
  404e00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #120]
  404e08:	add	x16, x16, #0x78
  404e0c:	br	x17

0000000000404e10 <fputc@plt>:
  404e10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #128]
  404e18:	add	x16, x16, #0x80
  404e1c:	br	x17

0000000000404e20 <dlopen@plt>:
  404e20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #136]
  404e28:	add	x16, x16, #0x88
  404e2c:	br	x17

0000000000404e30 <snprintf@plt>:
  404e30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #144]
  404e38:	add	x16, x16, #0x90
  404e3c:	br	x17

0000000000404e40 <fileno@plt>:
  404e40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #152]
  404e48:	add	x16, x16, #0x98
  404e4c:	br	x17

0000000000404e50 <localtime@plt>:
  404e50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #160]
  404e58:	add	x16, x16, #0xa0
  404e5c:	br	x17

0000000000404e60 <fclose@plt>:
  404e60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #168]
  404e68:	add	x16, x16, #0xa8
  404e6c:	br	x17

0000000000404e70 <time@plt>:
  404e70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #176]
  404e78:	add	x16, x16, #0xb0
  404e7c:	br	x17

0000000000404e80 <malloc@plt>:
  404e80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #184]
  404e88:	add	x16, x16, #0xb8
  404e8c:	br	x17

0000000000404e90 <setsockopt@plt>:
  404e90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #192]
  404e98:	add	x16, x16, #0xc0
  404e9c:	br	x17

0000000000404ea0 <dlsym@plt>:
  404ea0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #200]
  404ea8:	add	x16, x16, #0xc8
  404eac:	br	x17

0000000000404eb0 <__isoc99_fscanf@plt>:
  404eb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #208]
  404eb8:	add	x16, x16, #0xd0
  404ebc:	br	x17

0000000000404ec0 <__libc_start_main@plt>:
  404ec0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #216]
  404ec8:	add	x16, x16, #0xd8
  404ecc:	br	x17

0000000000404ed0 <strcat@plt>:
  404ed0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #224]
  404ed8:	add	x16, x16, #0xe0
  404edc:	br	x17

0000000000404ee0 <if_indextoname@plt>:
  404ee0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #232]
  404ee8:	add	x16, x16, #0xe8
  404eec:	br	x17

0000000000404ef0 <memset@plt>:
  404ef0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #240]
  404ef8:	add	x16, x16, #0xf0
  404efc:	br	x17

0000000000404f00 <gettimeofday@plt>:
  404f00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #248]
  404f08:	add	x16, x16, #0xf8
  404f0c:	br	x17

0000000000404f10 <sendmsg@plt>:
  404f10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #256]
  404f18:	add	x16, x16, #0x100
  404f1c:	br	x17

0000000000404f20 <calloc@plt>:
  404f20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #264]
  404f28:	add	x16, x16, #0x108
  404f2c:	br	x17

0000000000404f30 <cap_get_flag@plt>:
  404f30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #272]
  404f38:	add	x16, x16, #0x110
  404f3c:	br	x17

0000000000404f40 <bcmp@plt>:
  404f40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #280]
  404f48:	add	x16, x16, #0x118
  404f4c:	br	x17

0000000000404f50 <strcasecmp@plt>:
  404f50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #288]
  404f58:	add	x16, x16, #0x120
  404f5c:	br	x17

0000000000404f60 <realloc@plt>:
  404f60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #296]
  404f68:	add	x16, x16, #0x128
  404f6c:	br	x17

0000000000404f70 <cap_set_proc@plt>:
  404f70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #304]
  404f78:	add	x16, x16, #0x130
  404f7c:	br	x17

0000000000404f80 <strdup@plt>:
  404f80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #312]
  404f88:	add	x16, x16, #0x138
  404f8c:	br	x17

0000000000404f90 <strerror@plt>:
  404f90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #320]
  404f98:	add	x16, x16, #0x140
  404f9c:	br	x17

0000000000404fa0 <close@plt>:
  404fa0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #328]
  404fa8:	add	x16, x16, #0x148
  404fac:	br	x17

0000000000404fb0 <strrchr@plt>:
  404fb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #336]
  404fb8:	add	x16, x16, #0x150
  404fbc:	br	x17

0000000000404fc0 <recv@plt>:
  404fc0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #344]
  404fc8:	add	x16, x16, #0x158
  404fcc:	br	x17

0000000000404fd0 <__gmon_start__@plt>:
  404fd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #352]
  404fd8:	add	x16, x16, #0x160
  404fdc:	br	x17

0000000000404fe0 <abort@plt>:
  404fe0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #360]
  404fe8:	add	x16, x16, #0x168
  404fec:	br	x17

0000000000404ff0 <feof@plt>:
  404ff0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #368]
  404ff8:	add	x16, x16, #0x170
  404ffc:	br	x17

0000000000405000 <strcmp@plt>:
  405000:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #376]
  405008:	add	x16, x16, #0x178
  40500c:	br	x17

0000000000405010 <__ctype_b_loc@plt>:
  405010:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #384]
  405018:	add	x16, x16, #0x180
  40501c:	br	x17

0000000000405020 <strtol@plt>:
  405020:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #392]
  405028:	add	x16, x16, #0x188
  40502c:	br	x17

0000000000405030 <cap_get_proc@plt>:
  405030:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #400]
  405038:	add	x16, x16, #0x190
  40503c:	br	x17

0000000000405040 <fread@plt>:
  405040:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #408]
  405048:	add	x16, x16, #0x198
  40504c:	br	x17

0000000000405050 <gethostbyaddr@plt>:
  405050:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #416]
  405058:	add	x16, x16, #0x1a0
  40505c:	br	x17

0000000000405060 <free@plt>:
  405060:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #424]
  405068:	add	x16, x16, #0x1a8
  40506c:	br	x17

0000000000405070 <inet_pton@plt>:
  405070:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #432]
  405078:	add	x16, x16, #0x1b0
  40507c:	br	x17

0000000000405080 <send@plt>:
  405080:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #440]
  405088:	add	x16, x16, #0x1b8
  40508c:	br	x17

0000000000405090 <strspn@plt>:
  405090:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #448]
  405098:	add	x16, x16, #0x1c0
  40509c:	br	x17

00000000004050a0 <strchr@plt>:
  4050a0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #456]
  4050a8:	add	x16, x16, #0x1c8
  4050ac:	br	x17

00000000004050b0 <strtoull@plt>:
  4050b0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #464]
  4050b8:	add	x16, x16, #0x1d0
  4050bc:	br	x17

00000000004050c0 <fwrite@plt>:
  4050c0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #472]
  4050c8:	add	x16, x16, #0x1d8
  4050cc:	br	x17

00000000004050d0 <socket@plt>:
  4050d0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #480]
  4050d8:	add	x16, x16, #0x1e0
  4050dc:	br	x17

00000000004050e0 <fflush@plt>:
  4050e0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #488]
  4050e8:	add	x16, x16, #0x1e8
  4050ec:	br	x17

00000000004050f0 <strcpy@plt>:
  4050f0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #496]
  4050f8:	add	x16, x16, #0x1f0
  4050fc:	br	x17

0000000000405100 <fopen64@plt>:
  405100:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #504]
  405108:	add	x16, x16, #0x1f8
  40510c:	br	x17

0000000000405110 <cap_clear@plt>:
  405110:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #512]
  405118:	add	x16, x16, #0x200
  40511c:	br	x17

0000000000405120 <isatty@plt>:
  405120:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #520]
  405128:	add	x16, x16, #0x208
  40512c:	br	x17

0000000000405130 <sysconf@plt>:
  405130:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #528]
  405138:	add	x16, x16, #0x210
  40513c:	br	x17

0000000000405140 <asctime@plt>:
  405140:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #536]
  405148:	add	x16, x16, #0x218
  40514c:	br	x17

0000000000405150 <cap_free@plt>:
  405150:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #544]
  405158:	add	x16, x16, #0x220
  40515c:	br	x17

0000000000405160 <if_nametoindex@plt>:
  405160:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #552]
  405168:	add	x16, x16, #0x228
  40516c:	br	x17

0000000000405170 <strchrnul@plt>:
  405170:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #560]
  405178:	add	x16, x16, #0x230
  40517c:	br	x17

0000000000405180 <strstr@plt>:
  405180:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #568]
  405188:	add	x16, x16, #0x238
  40518c:	br	x17

0000000000405190 <__isoc99_sscanf@plt>:
  405190:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405194:	ldr	x17, [x16, #576]
  405198:	add	x16, x16, #0x240
  40519c:	br	x17

00000000004051a0 <strncpy@plt>:
  4051a0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051a4:	ldr	x17, [x16, #584]
  4051a8:	add	x16, x16, #0x248
  4051ac:	br	x17

00000000004051b0 <strcspn@plt>:
  4051b0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051b4:	ldr	x17, [x16, #592]
  4051b8:	add	x16, x16, #0x250
  4051bc:	br	x17

00000000004051c0 <vfprintf@plt>:
  4051c0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051c4:	ldr	x17, [x16, #600]
  4051c8:	add	x16, x16, #0x258
  4051cc:	br	x17

00000000004051d0 <printf@plt>:
  4051d0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051d4:	ldr	x17, [x16, #608]
  4051d8:	add	x16, x16, #0x260
  4051dc:	br	x17

00000000004051e0 <__assert_fail@plt>:
  4051e0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051e4:	ldr	x17, [x16, #616]
  4051e8:	add	x16, x16, #0x268
  4051ec:	br	x17

00000000004051f0 <__errno_location@plt>:
  4051f0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051f4:	ldr	x17, [x16, #624]
  4051f8:	add	x16, x16, #0x270
  4051fc:	br	x17

0000000000405200 <getenv@plt>:
  405200:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405204:	ldr	x17, [x16, #632]
  405208:	add	x16, x16, #0x278
  40520c:	br	x17

0000000000405210 <putchar@plt>:
  405210:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405214:	ldr	x17, [x16, #640]
  405218:	add	x16, x16, #0x280
  40521c:	br	x17

0000000000405220 <__getdelim@plt>:
  405220:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405224:	ldr	x17, [x16, #648]
  405228:	add	x16, x16, #0x288
  40522c:	br	x17

0000000000405230 <getsockname@plt>:
  405230:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405234:	ldr	x17, [x16, #656]
  405238:	add	x16, x16, #0x290
  40523c:	br	x17

0000000000405240 <fprintf@plt>:
  405240:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405244:	ldr	x17, [x16, #664]
  405248:	add	x16, x16, #0x298
  40524c:	br	x17

0000000000405250 <fgets@plt>:
  405250:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405254:	ldr	x17, [x16, #672]
  405258:	add	x16, x16, #0x2a0
  40525c:	br	x17

0000000000405260 <inet_ntop@plt>:
  405260:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405264:	ldr	x17, [x16, #680]
  405268:	add	x16, x16, #0x2a8
  40526c:	br	x17

0000000000405270 <ferror@plt>:
  405270:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405274:	ldr	x17, [x16, #688]
  405278:	add	x16, x16, #0x2b0
  40527c:	br	x17

Disassembly of section .text:

0000000000405280 <_start@@Base>:
  405280:	mov	x29, #0x0                   	// #0
  405284:	mov	x30, #0x0                   	// #0
  405288:	mov	x5, x0
  40528c:	ldr	x1, [sp]
  405290:	add	x2, sp, #0x8
  405294:	mov	x6, sp
  405298:	movz	x0, #0x0, lsl #48
  40529c:	movk	x0, #0x0, lsl #32
  4052a0:	movk	x0, #0x40, lsl #16
  4052a4:	movk	x0, #0x538c
  4052a8:	movz	x3, #0x0, lsl #48
  4052ac:	movk	x3, #0x0, lsl #32
  4052b0:	movk	x3, #0x40, lsl #16
  4052b4:	movk	x3, #0xdb40
  4052b8:	movz	x4, #0x0, lsl #48
  4052bc:	movk	x4, #0x0, lsl #32
  4052c0:	movk	x4, #0x40, lsl #16
  4052c4:	movk	x4, #0xdbc0
  4052c8:	bl	404ec0 <__libc_start_main@plt>
  4052cc:	bl	404fe0 <abort@plt>
  4052d0:	adrp	x0, 41e000 <_IO_stdin_used@@Base+0x10428>
  4052d4:	ldr	x0, [x0, #4040]
  4052d8:	cbz	x0, 4052e0 <_start@@Base+0x60>
  4052dc:	b	404fd0 <__gmon_start__@plt>
  4052e0:	ret
  4052e4:	nop
  4052e8:	adrp	x0, 41f000 <memcpy@GLIBC_2.17>
  4052ec:	add	x0, x0, #0x300
  4052f0:	adrp	x1, 41f000 <memcpy@GLIBC_2.17>
  4052f4:	add	x1, x1, #0x300
  4052f8:	cmp	x1, x0
  4052fc:	b.eq	405314 <_start@@Base+0x94>  // b.none
  405300:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405304:	ldr	x1, [x1, #3040]
  405308:	cbz	x1, 405314 <_start@@Base+0x94>
  40530c:	mov	x16, x1
  405310:	br	x16
  405314:	ret
  405318:	adrp	x0, 41f000 <memcpy@GLIBC_2.17>
  40531c:	add	x0, x0, #0x300
  405320:	adrp	x1, 41f000 <memcpy@GLIBC_2.17>
  405324:	add	x1, x1, #0x300
  405328:	sub	x1, x1, x0
  40532c:	lsr	x2, x1, #63
  405330:	add	x1, x2, x1, asr #3
  405334:	cmp	xzr, x1, asr #1
  405338:	asr	x1, x1, #1
  40533c:	b.eq	405354 <_start@@Base+0xd4>  // b.none
  405340:	adrp	x2, 40d000 <addattr64@@Base+0x20>
  405344:	ldr	x2, [x2, #3048]
  405348:	cbz	x2, 405354 <_start@@Base+0xd4>
  40534c:	mov	x16, x2
  405350:	br	x16
  405354:	ret
  405358:	stp	x29, x30, [sp, #-32]!
  40535c:	mov	x29, sp
  405360:	str	x19, [sp, #16]
  405364:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  405368:	ldrb	w0, [x19, #784]
  40536c:	cbnz	w0, 40537c <_start@@Base+0xfc>
  405370:	bl	4052e8 <_start@@Base+0x68>
  405374:	mov	w0, #0x1                   	// #1
  405378:	strb	w0, [x19, #784]
  40537c:	ldr	x19, [sp, #16]
  405380:	ldp	x29, x30, [sp], #32
  405384:	ret
  405388:	b	405318 <_start@@Base+0x98>

000000000040538c <main@@Base>:
  40538c:	sub	sp, sp, #0x170
  405390:	cmp	w0, #0x2
  405394:	stp	x29, x30, [sp, #272]
  405398:	stp	x28, x27, [sp, #288]
  40539c:	stp	x26, x25, [sp, #304]
  4053a0:	stp	x24, x23, [sp, #320]
  4053a4:	stp	x22, x21, [sp, #336]
  4053a8:	stp	x20, x19, [sp, #352]
  4053ac:	add	x29, sp, #0x110
  4053b0:	b.lt	4055d0 <main@@Base+0x244>  // b.tstop
  4053b4:	adrp	x22, 40d000 <addattr64@@Base+0x20>
  4053b8:	adrp	x26, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  4053bc:	adrp	x23, 40d000 <addattr64@@Base+0x20>
  4053c0:	adrp	x24, 40d000 <addattr64@@Base+0x20>
  4053c4:	adrp	x27, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  4053c8:	adrp	x25, 40d000 <addattr64@@Base+0x20>
  4053cc:	adrp	x28, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  4053d0:	sub	w20, w0, #0x1
  4053d4:	add	x19, x1, #0x8
  4053d8:	add	x22, x22, #0xbf0
  4053dc:	add	x26, x26, #0xd74
  4053e0:	add	x23, x23, #0xbf7
  4053e4:	add	x24, x24, #0xc03
  4053e8:	add	x27, x27, #0xd70
  4053ec:	add	x25, x25, #0xc0c
  4053f0:	add	x28, x28, #0xd78
  4053f4:	b	405418 <main@@Base+0x8c>
  4053f8:	ldr	w9, [x8]
  4053fc:	add	w10, w20, #0x1
  405400:	sub	w20, w20, #0x1
  405404:	cmp	w10, #0x2
  405408:	add	w9, w9, #0x1
  40540c:	add	x19, x19, #0x8
  405410:	str	w9, [x8]
  405414:	b.le	4055d0 <main@@Base+0x244>
  405418:	ldr	x21, [x19]
  40541c:	ldrb	w8, [x21]
  405420:	cmp	w8, #0x2d
  405424:	b.ne	4054b8 <main@@Base+0x12c>  // b.any
  405428:	mov	x0, x21
  40542c:	mov	x1, x22
  405430:	bl	40764c <matches@@Base>
  405434:	mov	x8, x26
  405438:	tbz	w0, #0, 4053f8 <main@@Base+0x6c>
  40543c:	ldr	x0, [x19]
  405440:	mov	x1, x23
  405444:	bl	40764c <matches@@Base>
  405448:	mov	x8, x26
  40544c:	tbz	w0, #0, 4053f8 <main@@Base+0x6c>
  405450:	ldr	x0, [x19]
  405454:	mov	x1, x24
  405458:	bl	40764c <matches@@Base>
  40545c:	mov	x8, x27
  405460:	tbz	w0, #0, 4053f8 <main@@Base+0x6c>
  405464:	ldr	x0, [x19]
  405468:	mov	x1, x25
  40546c:	bl	40764c <matches@@Base>
  405470:	mov	x8, x28
  405474:	tbz	w0, #0, 4053f8 <main@@Base+0x6c>
  405478:	ldr	x0, [x19]
  40547c:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405480:	add	x1, x1, #0xc11
  405484:	bl	40764c <matches@@Base>
  405488:	tbz	w0, #0, 4055d4 <main@@Base+0x248>
  40548c:	ldr	x0, [x19]
  405490:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405494:	add	x1, x1, #0xc37
  405498:	bl	40764c <matches@@Base>
  40549c:	tbz	w0, #0, 4055d0 <main@@Base+0x244>
  4054a0:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4054a4:	ldr	x0, [x8, #768]
  4054a8:	ldr	x2, [x19]
  4054ac:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  4054b0:	add	x1, x1, #0xc3d
  4054b4:	b	405604 <main@@Base+0x278>
  4054b8:	adrp	x23, 41f000 <memcpy@GLIBC_2.17>
  4054bc:	ldr	x22, [x23, #792]
  4054c0:	cbz	x22, 4054dc <main@@Base+0x150>
  4054c4:	add	x0, x22, #0x8
  4054c8:	mov	x1, x21
  4054cc:	bl	405000 <strcmp@plt>
  4054d0:	cbz	w0, 40559c <main@@Base+0x210>
  4054d4:	ldr	x22, [x22]
  4054d8:	cbnz	x22, 4054c4 <main@@Base+0x138>
  4054dc:	adrp	x2, 40d000 <addattr64@@Base+0x20>
  4054e0:	add	x2, x2, #0xd0d
  4054e4:	add	x0, sp, #0x8
  4054e8:	mov	w1, #0x100                 	// #256
  4054ec:	mov	x3, x21
  4054f0:	bl	404e30 <snprintf@plt>
  4054f4:	add	x0, sp, #0x8
  4054f8:	mov	w1, #0x1                   	// #1
  4054fc:	bl	404e20 <dlopen@plt>
  405500:	mov	x22, x0
  405504:	cbnz	x0, 40552c <main@@Base+0x1a0>
  405508:	adrp	x24, 41f000 <memcpy@GLIBC_2.17>
  40550c:	ldr	x22, [x24, #800]
  405510:	cbnz	x22, 40552c <main@@Base+0x1a0>
  405514:	mov	w1, #0x1                   	// #1
  405518:	mov	x0, xzr
  40551c:	bl	404e20 <dlopen@plt>
  405520:	mov	x22, x0
  405524:	str	x0, [x24, #800]
  405528:	cbz	x0, 405558 <main@@Base+0x1cc>
  40552c:	adrp	x2, 40d000 <addattr64@@Base+0x20>
  405530:	add	x2, x2, #0xd13
  405534:	add	x0, sp, #0x8
  405538:	mov	w1, #0x100                 	// #256
  40553c:	mov	x3, x21
  405540:	bl	404e30 <snprintf@plt>
  405544:	add	x1, sp, #0x8
  405548:	mov	x0, x22
  40554c:	bl	404ea0 <dlsym@plt>
  405550:	mov	x22, x0
  405554:	cbnz	x0, 405590 <main@@Base+0x204>
  405558:	mov	w0, #0x1                   	// #1
  40555c:	mov	w1, #0x28                  	// #40
  405560:	bl	404f20 <calloc@plt>
  405564:	cbz	x0, 4055f0 <main@@Base+0x264>
  405568:	mov	x22, x0
  40556c:	add	x0, x0, #0x8
  405570:	mov	w2, #0xf                   	// #15
  405574:	mov	x1, x21
  405578:	bl	4051a0 <strncpy@plt>
  40557c:	adrp	x8, 405000 <strcmp@plt>
  405580:	adrp	x9, 405000 <strcmp@plt>
  405584:	add	x8, x8, #0x63c
  405588:	add	x9, x9, #0x67c
  40558c:	stp	x8, x9, [x22, #24]
  405590:	ldr	x8, [x23, #792]
  405594:	str	x8, [x22]
  405598:	str	x22, [x23, #792]
  40559c:	ldr	x8, [x22, #24]
  4055a0:	mov	x0, x22
  4055a4:	mov	w1, w20
  4055a8:	mov	x2, x19
  4055ac:	blr	x8
  4055b0:	ldp	x20, x19, [sp, #352]
  4055b4:	ldp	x22, x21, [sp, #336]
  4055b8:	ldp	x24, x23, [sp, #320]
  4055bc:	ldp	x26, x25, [sp, #304]
  4055c0:	ldp	x28, x27, [sp, #288]
  4055c4:	ldp	x29, x30, [sp, #272]
  4055c8:	add	sp, sp, #0x170
  4055cc:	ret
  4055d0:	bl	405610 <main@@Base+0x284>
  4055d4:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  4055d8:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  4055dc:	add	x0, x0, #0xc1a
  4055e0:	add	x1, x1, #0xd6a
  4055e4:	bl	4051d0 <printf@plt>
  4055e8:	mov	w0, wzr
  4055ec:	bl	404d50 <exit@plt>
  4055f0:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4055f4:	ldr	x0, [x8, #768]
  4055f8:	ldr	x2, [x19]
  4055fc:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405600:	add	x1, x1, #0xc68
  405604:	bl	405240 <fprintf@plt>
  405608:	mov	w0, #0xffffffff            	// #-1
  40560c:	bl	404d50 <exit@plt>
  405610:	stp	x29, x30, [sp, #-16]!
  405614:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405618:	ldr	x3, [x8, #768]
  40561c:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405620:	add	x0, x0, #0xc75
  405624:	mov	w1, #0x97                  	// #151
  405628:	mov	w2, #0x1                   	// #1
  40562c:	mov	x29, sp
  405630:	bl	4050c0 <fwrite@plt>
  405634:	mov	w0, #0xffffffff            	// #-1
  405638:	bl	404d50 <exit@plt>
  40563c:	cbnz	w1, 405648 <main@@Base+0x2bc>
  405640:	mov	w0, wzr
  405644:	ret
  405648:	stp	x29, x30, [sp, #-16]!
  40564c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405650:	ldr	x8, [x8, #768]
  405654:	ldr	x3, [x2]
  405658:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  40565c:	add	x2, x0, #0x8
  405660:	add	x1, x1, #0xd20
  405664:	mov	x0, x8
  405668:	mov	x29, sp
  40566c:	bl	405240 <fprintf@plt>
  405670:	mov	w0, #0xffffffff            	// #-1
  405674:	ldp	x29, x30, [sp], #16
  405678:	ret
  40567c:	stp	x29, x30, [sp, #-16]!
  405680:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405684:	mov	x3, x1
  405688:	add	x0, x0, #0xd54
  40568c:	mov	w1, #0x15                  	// #21
  405690:	mov	w2, #0x1                   	// #1
  405694:	mov	x29, sp
  405698:	bl	4050c0 <fwrite@plt>
  40569c:	mov	w0, wzr
  4056a0:	ldp	x29, x30, [sp], #16
  4056a4:	ret
  4056a8:	sub	sp, sp, #0x60
  4056ac:	cmp	w1, #0x1
  4056b0:	stp	x29, x30, [sp, #64]
  4056b4:	stp	x20, x19, [sp, #80]
  4056b8:	add	x29, sp, #0x40
  4056bc:	b.le	405798 <main@@Base+0x40c>
  4056c0:	ldr	x0, [x2, #8]
  4056c4:	mov	w20, w1
  4056c8:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  4056cc:	add	x1, x1, #0xd8a
  4056d0:	mov	x19, x2
  4056d4:	bl	40764c <matches@@Base>
  4056d8:	tbz	w0, #0, 40573c <main@@Base+0x3b0>
  4056dc:	ldr	x0, [x19, #8]
  4056e0:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  4056e4:	add	x1, x1, #0xd92
  4056e8:	bl	40764c <matches@@Base>
  4056ec:	tbz	w0, #0, 40577c <main@@Base+0x3f0>
  4056f0:	ldr	x0, [x19, #8]
  4056f4:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  4056f8:	add	x1, x1, #0xd96
  4056fc:	bl	40764c <matches@@Base>
  405700:	tbz	w0, #0, 40572c <main@@Base+0x3a0>
  405704:	ldr	x0, [x19, #8]
  405708:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  40570c:	add	x1, x1, #0xd9b
  405710:	bl	40764c <matches@@Base>
  405714:	tbz	w0, #0, 40572c <main@@Base+0x3a0>
  405718:	ldr	x0, [x19, #8]
  40571c:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405720:	add	x1, x1, #0xda0
  405724:	bl	40764c <matches@@Base>
  405728:	tbnz	w0, #0, 4057d4 <main@@Base+0x448>
  40572c:	sub	w1, w20, #0x2
  405730:	add	x2, x19, #0x10
  405734:	mov	w0, wzr
  405738:	b	405788 <main@@Base+0x3fc>
  40573c:	add	x0, sp, #0x8
  405740:	mov	w1, #0x8000                	// #32768
  405744:	mov	w2, #0x10                  	// #16
  405748:	bl	40b5bc <rtnl_open_byproto@@Base>
  40574c:	tbnz	w0, #31, 4057b0 <main@@Base+0x424>
  405750:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405754:	ldr	x2, [x8, #776]
  405758:	adrp	x1, 405000 <strcmp@plt>
  40575c:	add	x1, x1, #0xa90
  405760:	add	x0, sp, #0x8
  405764:	bl	40c984 <rtnl_listen@@Base>
  405768:	asr	w0, w0, #31
  40576c:	ldp	x20, x19, [sp, #80]
  405770:	ldp	x29, x30, [sp, #64]
  405774:	add	sp, sp, #0x60
  405778:	ret
  40577c:	sub	w1, w20, #0x2
  405780:	add	x2, x19, #0x10
  405784:	mov	w0, #0x3                   	// #3
  405788:	ldp	x20, x19, [sp, #80]
  40578c:	ldp	x29, x30, [sp, #64]
  405790:	add	sp, sp, #0x60
  405794:	b	405828 <main@@Base+0x49c>
  405798:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  40579c:	ldr	x3, [x8, #768]
  4057a0:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  4057a4:	add	x0, x0, #0xd71
  4057a8:	mov	w1, #0x18                  	// #24
  4057ac:	b	4057c4 <main@@Base+0x438>
  4057b0:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4057b4:	ldr	x3, [x8, #768]
  4057b8:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  4057bc:	add	x0, x0, #0xdd4
  4057c0:	mov	w1, #0x22                  	// #34
  4057c4:	mov	w2, #0x1                   	// #1
  4057c8:	bl	4050c0 <fwrite@plt>
  4057cc:	mov	w0, #0xffffffff            	// #-1
  4057d0:	b	40576c <main@@Base+0x3e0>
  4057d4:	ldr	x0, [x19, #8]
  4057d8:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  4057dc:	add	x1, x1, #0xc38
  4057e0:	bl	40764c <matches@@Base>
  4057e4:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4057e8:	ldr	x3, [x8, #768]
  4057ec:	tbz	w0, #0, 405808 <main@@Base+0x47c>
  4057f0:	ldr	x2, [x19, #8]
  4057f4:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  4057f8:	add	x1, x1, #0xda4
  4057fc:	mov	x0, x3
  405800:	bl	405240 <fprintf@plt>
  405804:	b	4057cc <main@@Base+0x440>
  405808:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40580c:	add	x0, x0, #0x30
  405810:	mov	w1, #0x9f                  	// #159
  405814:	b	4057c4 <main@@Base+0x438>
  405818:	mov	x2, x1
  40581c:	mov	x1, x0
  405820:	mov	x0, xzr
  405824:	b	405a90 <main@@Base+0x704>
  405828:	stp	x29, x30, [sp, #-48]!
  40582c:	stp	x28, x21, [sp, #16]
  405830:	stp	x20, x19, [sp, #32]
  405834:	mov	x29, sp
  405838:	sub	sp, sp, #0x1, lsl #12
  40583c:	sub	sp, sp, #0x70
  405840:	add	x8, sp, #0x10
  405844:	mov	x19, x2
  405848:	mov	w20, w1
  40584c:	mov	w21, w0
  405850:	add	x0, x8, #0x8
  405854:	mov	w2, #0x100c                	// #4108
  405858:	mov	w1, wzr
  40585c:	bl	404ef0 <memset@plt>
  405860:	mov	x8, #0x14                  	// #20
  405864:	movk	x8, #0x10, lsl #32
  405868:	movk	x8, #0x5, lsl #48
  40586c:	mov	w9, #0x3                   	// #3
  405870:	sub	x0, x29, #0x38
  405874:	mov	w2, #0x10                  	// #16
  405878:	mov	w1, wzr
  40587c:	stp	xzr, x8, [sp, #8]
  405880:	strb	w9, [sp, #32]
  405884:	bl	40b5bc <rtnl_open_byproto@@Base>
  405888:	tbnz	w0, #31, 405a6c <main@@Base+0x6e0>
  40588c:	cbz	w21, 4058f4 <main@@Base+0x568>
  405890:	cmp	w21, #0x3
  405894:	b.ne	40599c <main@@Base+0x610>  // b.any
  405898:	cmp	w20, #0x2
  40589c:	b.ne	4059cc <main@@Base+0x640>  // b.any
  4058a0:	ldr	x0, [x19]
  4058a4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4058a8:	add	x1, x1, #0x53b
  4058ac:	bl	40764c <matches@@Base>
  4058b0:	tbz	w0, #0, 405940 <main@@Base+0x5b4>
  4058b4:	ldr	x0, [x19]
  4058b8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4058bc:	add	x1, x1, #0x5ee
  4058c0:	bl	40764c <matches@@Base>
  4058c4:	tbnz	w0, #0, 405a34 <main@@Base+0x6a8>
  4058c8:	ldr	x1, [x19, #8]
  4058cc:	sub	x0, x29, #0x48
  4058d0:	mov	w2, wzr
  4058d4:	bl	406520 <get_u16@@Base>
  4058d8:	cbnz	w0, 405a48 <main@@Base+0x6bc>
  4058dc:	add	x0, sp, #0x10
  4058e0:	sub	x3, x29, #0x48
  4058e4:	mov	w1, #0x80                  	// #128
  4058e8:	mov	w2, #0x1                   	// #1
  4058ec:	mov	w4, #0x2                   	// #2
  4058f0:	b	40596c <main@@Base+0x5e0>
  4058f4:	ldur	w8, [x29, #-28]
  4058f8:	mov	w9, #0x301                 	// #769
  4058fc:	sub	x0, x29, #0x38
  405900:	add	x1, sp, #0x10
  405904:	add	w8, w8, #0x1
  405908:	mov	w2, #0x14                  	// #20
  40590c:	strh	w9, [sp, #22]
  405910:	stp	w8, w8, [x29, #-28]
  405914:	str	w8, [sp, #24]
  405918:	bl	40bf64 <rtnl_send@@Base>
  40591c:	tbnz	w0, #31, 4059f0 <main@@Base+0x664>
  405920:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405924:	ldr	x2, [x8, #776]
  405928:	adrp	x1, 405000 <strcmp@plt>
  40592c:	add	x1, x1, #0x818
  405930:	sub	x0, x29, #0x38
  405934:	mov	w3, wzr
  405938:	bl	40c1a4 <rtnl_dump_filter_nc@@Base>
  40593c:	b	40599c <main@@Base+0x610>
  405940:	ldr	x1, [x19, #8]
  405944:	sub	x0, x29, #0x48
  405948:	mov	w2, #0x10                  	// #16
  40594c:	bl	408c00 <strlcpy@@Base>
  405950:	sub	x0, x29, #0x48
  405954:	bl	404d40 <strlen@plt>
  405958:	add	w4, w0, #0x1
  40595c:	add	x0, sp, #0x10
  405960:	sub	x3, x29, #0x48
  405964:	mov	w1, #0x80                  	// #128
  405968:	mov	w2, #0x2                   	// #2
  40596c:	bl	40ce00 <addattr_l@@Base>
  405970:	sub	x0, x29, #0x38
  405974:	add	x1, sp, #0x10
  405978:	add	x2, sp, #0x8
  40597c:	bl	40c4f0 <rtnl_talk@@Base>
  405980:	tbnz	w0, #31, 405a04 <main@@Base+0x678>
  405984:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405988:	ldr	x1, [sp, #8]
  40598c:	ldr	x2, [x8, #776]
  405990:	mov	x0, xzr
  405994:	bl	405a90 <main@@Base+0x704>
  405998:	tbnz	w0, #31, 405a1c <main@@Base+0x690>
  40599c:	mov	w19, wzr
  4059a0:	ldr	x0, [sp, #8]
  4059a4:	bl	405060 <free@plt>
  4059a8:	sub	x0, x29, #0x38
  4059ac:	bl	40b58c <rtnl_close@@Base>
  4059b0:	mov	w0, w19
  4059b4:	add	sp, sp, #0x1, lsl #12
  4059b8:	add	sp, sp, #0x70
  4059bc:	ldp	x20, x19, [sp, #32]
  4059c0:	ldp	x28, x21, [sp, #16]
  4059c4:	ldp	x29, x30, [sp], #48
  4059c8:	ret
  4059cc:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4059d0:	ldr	x3, [x8, #768]
  4059d4:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  4059d8:	add	x0, x0, #0xfb1
  4059dc:	mov	w1, #0x17                  	// #23
  4059e0:	mov	w2, #0x1                   	// #1
  4059e4:	bl	4050c0 <fwrite@plt>
  4059e8:	mov	w19, #0xffffffff            	// #-1
  4059ec:	b	4059b0 <main@@Base+0x624>
  4059f0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  4059f4:	add	x0, x0, #0x13
  4059f8:	bl	404d60 <perror@plt>
  4059fc:	mov	w19, #0xffffffff            	// #-1
  405a00:	b	4059a0 <main@@Base+0x614>
  405a04:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405a08:	ldr	x3, [x8, #768]
  405a0c:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405a10:	add	x0, x0, #0xfe5
  405a14:	mov	w1, #0x1c                  	// #28
  405a18:	b	405a5c <main@@Base+0x6d0>
  405a1c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405a20:	ldr	x3, [x8, #768]
  405a24:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  405a28:	add	x0, x0, #0x2
  405a2c:	mov	w1, #0x10                  	// #16
  405a30:	b	405a5c <main@@Base+0x6d0>
  405a34:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405a38:	ldr	x3, [x8, #768]
  405a3c:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405a40:	add	x0, x0, #0xfd7
  405a44:	b	405a58 <main@@Base+0x6cc>
  405a48:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405a4c:	ldr	x3, [x8, #768]
  405a50:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405a54:	add	x0, x0, #0xfc9
  405a58:	mov	w1, #0xd                   	// #13
  405a5c:	mov	w2, #0x1                   	// #1
  405a60:	bl	4050c0 <fwrite@plt>
  405a64:	mov	w19, #0xffffffff            	// #-1
  405a68:	b	4059a0 <main@@Base+0x614>
  405a6c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405a70:	ldr	x3, [x8, #768]
  405a74:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405a78:	add	x0, x0, #0xf8d
  405a7c:	mov	w1, #0x23                  	// #35
  405a80:	mov	w2, #0x1                   	// #1
  405a84:	bl	4050c0 <fwrite@plt>
  405a88:	mov	w0, #0x1                   	// #1
  405a8c:	bl	404d50 <exit@plt>
  405a90:	stp	x29, x30, [sp, #-96]!
  405a94:	stp	x28, x27, [sp, #16]
  405a98:	stp	x26, x25, [sp, #32]
  405a9c:	stp	x24, x23, [sp, #48]
  405aa0:	stp	x22, x21, [sp, #64]
  405aa4:	stp	x20, x19, [sp, #80]
  405aa8:	mov	x29, sp
  405aac:	sub	sp, sp, #0x870
  405ab0:	ldrh	w3, [x1, #4]
  405ab4:	ldr	w8, [x1]
  405ab8:	cmp	w3, #0x10
  405abc:	b.ne	405e8c <main@@Base+0xb00>  // b.any
  405ac0:	mov	x19, x2
  405ac4:	ldrb	w2, [x1, #16]
  405ac8:	cmp	w2, #0x8
  405acc:	b.hi	405ea8 <main@@Base+0xb1c>  // b.pmore
  405ad0:	mov	w9, #0x1                   	// #1
  405ad4:	lsl	w9, w9, w2
  405ad8:	mov	w10, #0x18e                 	// #398
  405adc:	tst	w9, w10
  405ae0:	b.eq	405ea8 <main@@Base+0xb1c>  // b.none
  405ae4:	subs	w3, w8, #0x14
  405ae8:	b.mi	405ec0 <main@@Base+0xb34>  // b.first
  405aec:	add	x2, x1, #0x14
  405af0:	sub	x0, x29, #0x60
  405af4:	mov	w1, #0x7                   	// #7
  405af8:	bl	40d6a4 <parse_rtattr@@Base>
  405afc:	ldur	x8, [x29, #-80]
  405b00:	cbz	x8, 405b18 <main@@Base+0x78c>
  405b04:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405b08:	add	x2, x8, #0x4
  405b0c:	add	x1, x1, #0xe6f
  405b10:	mov	x0, x19
  405b14:	bl	405240 <fprintf@plt>
  405b18:	ldur	x8, [x29, #-88]
  405b1c:	cbz	x8, 405b34 <main@@Base+0x7a8>
  405b20:	ldrh	w2, [x8, #4]
  405b24:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405b28:	add	x1, x1, #0xe7a
  405b2c:	mov	x0, x19
  405b30:	bl	405240 <fprintf@plt>
  405b34:	ldur	x20, [x29, #-72]
  405b38:	cbz	x20, 405e7c <main@@Base+0xaf0>
  405b3c:	ldr	w2, [x20, #4]
  405b40:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405b44:	add	x1, x1, #0xe85
  405b48:	mov	x0, x19
  405b4c:	bl	405240 <fprintf@plt>
  405b50:	ldr	w27, [x20, #4]
  405b54:	ldur	x8, [x29, #-64]
  405b58:	cbz	x8, 405b70 <main@@Base+0x7e4>
  405b5c:	ldr	w2, [x8, #4]
  405b60:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405b64:	add	x1, x1, #0xe95
  405b68:	mov	x0, x19
  405b6c:	bl	405240 <fprintf@plt>
  405b70:	ldur	x8, [x29, #-56]
  405b74:	cbz	x8, 405b8c <main@@Base+0x800>
  405b78:	ldr	w2, [x8, #4]
  405b7c:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405b80:	add	x1, x1, #0xea7
  405b84:	mov	x0, x19
  405b88:	bl	405240 <fprintf@plt>
  405b8c:	mov	w0, #0xa                   	// #10
  405b90:	mov	x1, x19
  405b94:	bl	404e10 <fputc@plt>
  405b98:	ldur	x2, [x29, #-48]
  405b9c:	cbz	x2, 405d50 <main@@Base+0x9c4>
  405ba0:	ldrh	w8, [x2], #4
  405ba4:	add	x0, sp, #0x8
  405ba8:	mov	w1, #0x100                 	// #256
  405bac:	add	x28, sp, #0x8
  405bb0:	sub	w3, w8, #0x4
  405bb4:	bl	40d6a4 <parse_rtattr@@Base>
  405bb8:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405bbc:	add	x0, x0, #0xeb9
  405bc0:	mov	w1, #0x16                  	// #22
  405bc4:	mov	w2, #0x1                   	// #1
  405bc8:	mov	x3, x19
  405bcc:	bl	4050c0 <fwrite@plt>
  405bd0:	adrp	x21, 40d000 <addattr64@@Base+0x20>
  405bd4:	adrp	x22, 40d000 <addattr64@@Base+0x20>
  405bd8:	adrp	x23, 40d000 <addattr64@@Base+0x20>
  405bdc:	adrp	x24, 40d000 <addattr64@@Base+0x20>
  405be0:	adrp	x25, 40d000 <addattr64@@Base+0x20>
  405be4:	mov	x20, xzr
  405be8:	add	x21, x21, #0xed0
  405bec:	add	x22, x22, #0xed8
  405bf0:	add	x23, x23, #0xf24
  405bf4:	add	x24, x24, #0xf3e
  405bf8:	add	x25, x25, #0xf1a
  405bfc:	b	405c2c <main@@Base+0x8a0>
  405c00:	mov	w1, #0x17                  	// #23
  405c04:	mov	w2, #0x1                   	// #1
  405c08:	mov	x0, x22
  405c0c:	mov	x3, x19
  405c10:	bl	4050c0 <fwrite@plt>
  405c14:	mov	w0, #0xa                   	// #10
  405c18:	mov	x1, x19
  405c1c:	bl	404e10 <fputc@plt>
  405c20:	add	x20, x20, #0x1
  405c24:	cmp	x20, #0x100
  405c28:	b.eq	405d44 <main@@Base+0x9b8>  // b.none
  405c2c:	ldr	x8, [x28, x20, lsl #3]
  405c30:	cbz	x8, 405c20 <main@@Base+0x894>
  405c34:	mov	x0, x19
  405c38:	mov	x1, x21
  405c3c:	mov	w2, w20
  405c40:	bl	405240 <fprintf@plt>
  405c44:	ldr	x2, [x28, x20, lsl #3]
  405c48:	cbz	x2, 405c00 <main@@Base+0x874>
  405c4c:	ldrh	w8, [x2], #4
  405c50:	sub	x0, x29, #0x20
  405c54:	mov	w1, #0x2                   	// #2
  405c58:	sub	w3, w8, #0x4
  405c5c:	bl	40d6a4 <parse_rtattr@@Base>
  405c60:	ldur	x8, [x29, #-24]
  405c64:	cbz	x8, 405c78 <main@@Base+0x8ec>
  405c68:	ldr	w2, [x8, #4]
  405c6c:	mov	x0, x19
  405c70:	mov	x1, x25
  405c74:	bl	405240 <fprintf@plt>
  405c78:	cmp	w27, #0x2
  405c7c:	b.cc	405c14 <main@@Base+0x888>  // b.lo, b.ul, b.last
  405c80:	ldur	x8, [x29, #-16]
  405c84:	cbz	x8, 405c14 <main@@Base+0x888>
  405c88:	ldr	w26, [x8, #4]
  405c8c:	mov	x0, x19
  405c90:	mov	x1, x23
  405c94:	mov	w2, w26
  405c98:	bl	405240 <fprintf@plt>
  405c9c:	cbz	w26, 405cdc <main@@Base+0x950>
  405ca0:	mov	w1, #0x3                   	// #3
  405ca4:	mov	w2, #0x1                   	// #1
  405ca8:	mov	x0, x24
  405cac:	mov	x3, x19
  405cb0:	bl	4050c0 <fwrite@plt>
  405cb4:	tbnz	w26, #0, 405cec <main@@Base+0x960>
  405cb8:	tbnz	w26, #1, 405d08 <main@@Base+0x97c>
  405cbc:	tbnz	w26, #2, 405d24 <main@@Base+0x998>
  405cc0:	tbz	w26, #3, 405cdc <main@@Base+0x950>
  405cc4:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405cc8:	mov	w1, #0xb                   	// #11
  405ccc:	mov	w2, #0x1                   	// #1
  405cd0:	add	x0, x0, #0xf76
  405cd4:	mov	x3, x19
  405cd8:	bl	4050c0 <fwrite@plt>
  405cdc:	mov	w0, #0xa                   	// #10
  405ce0:	mov	x1, x19
  405ce4:	bl	404e10 <fputc@plt>
  405ce8:	b	405c14 <main@@Base+0x888>
  405cec:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405cf0:	mov	w1, #0x1b                  	// #27
  405cf4:	mov	w2, #0x1                   	// #1
  405cf8:	add	x0, x0, #0xf42
  405cfc:	mov	x3, x19
  405d00:	bl	4050c0 <fwrite@plt>
  405d04:	tbz	w26, #1, 405cbc <main@@Base+0x930>
  405d08:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405d0c:	mov	w1, #0xa                   	// #10
  405d10:	mov	w2, #0x1                   	// #1
  405d14:	add	x0, x0, #0xf5e
  405d18:	mov	x3, x19
  405d1c:	bl	4050c0 <fwrite@plt>
  405d20:	tbz	w26, #2, 405cc0 <main@@Base+0x934>
  405d24:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405d28:	mov	w1, #0xc                   	// #12
  405d2c:	mov	w2, #0x1                   	// #1
  405d30:	add	x0, x0, #0xf69
  405d34:	mov	x3, x19
  405d38:	bl	4050c0 <fwrite@plt>
  405d3c:	tbnz	w26, #3, 405cc4 <main@@Base+0x938>
  405d40:	b	405cdc <main@@Base+0x950>
  405d44:	mov	w0, #0xa                   	// #10
  405d48:	mov	x1, x19
  405d4c:	bl	404e10 <fputc@plt>
  405d50:	ldur	x2, [x29, #-40]
  405d54:	cbz	x2, 405e50 <main@@Base+0xac4>
  405d58:	ldrh	w8, [x2], #4
  405d5c:	add	x0, sp, #0x8
  405d60:	mov	w1, #0x100                 	// #256
  405d64:	add	x25, sp, #0x8
  405d68:	sub	w3, w8, #0x4
  405d6c:	bl	40d6a4 <parse_rtattr@@Base>
  405d70:	adrp	x0, 40d000 <addattr64@@Base+0x20>
  405d74:	add	x0, x0, #0xef0
  405d78:	mov	w1, #0x13                  	// #19
  405d7c:	mov	w2, #0x1                   	// #1
  405d80:	mov	x3, x19
  405d84:	bl	4050c0 <fwrite@plt>
  405d88:	adrp	x21, 40d000 <addattr64@@Base+0x20>
  405d8c:	adrp	x22, 40d000 <addattr64@@Base+0x20>
  405d90:	adrp	x23, 40d000 <addattr64@@Base+0x20>
  405d94:	adrp	x24, 40d000 <addattr64@@Base+0x20>
  405d98:	mov	x20, xzr
  405d9c:	add	x21, x21, #0xed0
  405da0:	add	x22, x22, #0xf04
  405da4:	add	x23, x23, #0xf82
  405da8:	add	x24, x24, #0xf1a
  405dac:	b	405ddc <main@@Base+0xa50>
  405db0:	mov	w1, #0x15                  	// #21
  405db4:	mov	w2, #0x1                   	// #1
  405db8:	mov	x0, x22
  405dbc:	mov	x3, x19
  405dc0:	bl	4050c0 <fwrite@plt>
  405dc4:	mov	w0, #0xa                   	// #10
  405dc8:	mov	x1, x19
  405dcc:	bl	404e10 <fputc@plt>
  405dd0:	add	x20, x20, #0x1
  405dd4:	cmp	x20, #0x100
  405dd8:	b.eq	405e44 <main@@Base+0xab8>  // b.none
  405ddc:	ldr	x8, [x25, x20, lsl #3]
  405de0:	cbz	x8, 405dd0 <main@@Base+0xa44>
  405de4:	mov	x0, x19
  405de8:	mov	x1, x21
  405dec:	mov	w2, w20
  405df0:	bl	405240 <fprintf@plt>
  405df4:	ldr	x2, [x25, x20, lsl #3]
  405df8:	cbz	x2, 405db0 <main@@Base+0xa24>
  405dfc:	ldrh	w8, [x2], #4
  405e00:	sub	x0, x29, #0x20
  405e04:	mov	w1, #0x2                   	// #2
  405e08:	sub	w3, w8, #0x4
  405e0c:	bl	40d6a4 <parse_rtattr@@Base>
  405e10:	ldur	x8, [x29, #-16]
  405e14:	cbz	x8, 405e28 <main@@Base+0xa9c>
  405e18:	ldr	w2, [x8, #4]
  405e1c:	mov	x0, x19
  405e20:	mov	x1, x24
  405e24:	bl	405240 <fprintf@plt>
  405e28:	ldur	x8, [x29, #-24]
  405e2c:	cbz	x8, 405dc4 <main@@Base+0xa38>
  405e30:	add	x2, x8, #0x4
  405e34:	mov	x0, x19
  405e38:	mov	x1, x23
  405e3c:	bl	405240 <fprintf@plt>
  405e40:	b	405dc4 <main@@Base+0xa38>
  405e44:	mov	w0, #0xa                   	// #10
  405e48:	mov	x1, x19
  405e4c:	bl	404e10 <fputc@plt>
  405e50:	mov	x0, x19
  405e54:	bl	4050e0 <fflush@plt>
  405e58:	mov	w0, wzr
  405e5c:	add	sp, sp, #0x870
  405e60:	ldp	x20, x19, [sp, #80]
  405e64:	ldp	x22, x21, [sp, #64]
  405e68:	ldp	x24, x23, [sp, #48]
  405e6c:	ldp	x26, x25, [sp, #32]
  405e70:	ldp	x28, x27, [sp, #16]
  405e74:	ldp	x29, x30, [sp], #96
  405e78:	ret
  405e7c:	mov	w27, #0x1                   	// #1
  405e80:	ldur	x8, [x29, #-64]
  405e84:	cbnz	x8, 405b5c <main@@Base+0x7d0>
  405e88:	b	405b70 <main@@Base+0x7e4>
  405e8c:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  405e90:	ldr	x0, [x9, #768]
  405e94:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405e98:	add	x1, x1, #0xdf7
  405e9c:	mov	w2, w8
  405ea0:	bl	405240 <fprintf@plt>
  405ea4:	b	405e58 <main@@Base+0xacc>
  405ea8:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405eac:	ldr	x0, [x8, #768]
  405eb0:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405eb4:	add	x1, x1, #0xe2f
  405eb8:	bl	405240 <fprintf@plt>
  405ebc:	b	405e58 <main@@Base+0xacc>
  405ec0:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405ec4:	ldr	x0, [x8, #768]
  405ec8:	adrp	x1, 40d000 <addattr64@@Base+0x20>
  405ecc:	add	x1, x1, #0xe4e
  405ed0:	mov	w2, w3
  405ed4:	bl	405240 <fprintf@plt>
  405ed8:	mov	w0, #0xffffffff            	// #-1
  405edc:	b	405e5c <main@@Base+0xad0>

0000000000405ee0 <read_prop@@Base>:
  405ee0:	sub	sp, sp, #0x110
  405ee4:	stp	x20, x19, [sp, #256]
  405ee8:	mov	x19, x2
  405eec:	mov	x20, x1
  405ef0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  405ef4:	mov	x3, x0
  405ef8:	add	x2, x2, #0x1a4
  405efc:	add	x0, sp, #0x60
  405f00:	mov	w1, #0x80                  	// #128
  405f04:	mov	x4, x20
  405f08:	stp	x29, x30, [sp, #224]
  405f0c:	stp	x28, x21, [sp, #240]
  405f10:	add	x29, sp, #0xe0
  405f14:	bl	404e30 <snprintf@plt>
  405f18:	cmp	w0, #0x1
  405f1c:	b.lt	405fc8 <read_prop@@Base+0xe8>  // b.tstop
  405f20:	cmp	w0, #0x80
  405f24:	b.cs	405fc8 <read_prop@@Base+0xe8>  // b.hs, b.nlast
  405f28:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  405f2c:	add	x1, x1, #0x803
  405f30:	add	x0, sp, #0x60
  405f34:	bl	405100 <fopen64@plt>
  405f38:	cbz	x0, 405fec <read_prop@@Base+0x10c>
  405f3c:	mov	x21, x0
  405f40:	add	x0, sp, #0x10
  405f44:	mov	w1, #0x50                  	// #80
  405f48:	mov	x2, x21
  405f4c:	bl	405250 <fgets@plt>
  405f50:	cbz	x0, 406020 <read_prop@@Base+0x140>
  405f54:	add	x0, sp, #0x10
  405f58:	mov	w1, #0xa                   	// #10
  405f5c:	add	x20, sp, #0x10
  405f60:	bl	4050a0 <strchr@plt>
  405f64:	cbz	x0, 405f6c <read_prop@@Base+0x8c>
  405f68:	strb	wzr, [x0]
  405f6c:	mov	x0, x21
  405f70:	bl	404e60 <fclose@plt>
  405f74:	add	x0, sp, #0x10
  405f78:	add	x1, sp, #0x8
  405f7c:	mov	w2, wzr
  405f80:	bl	405020 <strtol@plt>
  405f84:	ldr	x8, [sp, #8]
  405f88:	cmp	x20, x8
  405f8c:	b.eq	40604c <read_prop@@Base+0x16c>  // b.none
  405f90:	ldrb	w8, [x8]
  405f94:	cbnz	w8, 40604c <read_prop@@Base+0x16c>
  405f98:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
  405f9c:	add	x8, x0, x8
  405fa0:	mov	x20, x0
  405fa4:	cmp	x8, #0x1
  405fa8:	b.hi	405fbc <read_prop@@Base+0xdc>  // b.pmore
  405fac:	bl	4051f0 <__errno_location@plt>
  405fb0:	ldr	w8, [x0]
  405fb4:	cmp	w8, #0x22
  405fb8:	b.eq	40606c <read_prop@@Base+0x18c>  // b.none
  405fbc:	mov	w0, wzr
  405fc0:	str	x20, [x19]
  405fc4:	b	4060b8 <read_prop@@Base+0x1d8>
  405fc8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  405fcc:	ldr	x8, [x8, #3992]
  405fd0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  405fd4:	add	x0, x0, #0x1b9
  405fd8:	mov	w1, #0x26                  	// #38
  405fdc:	ldr	x3, [x8]
  405fe0:	mov	w2, #0x1                   	// #1
  405fe4:	bl	4050c0 <fwrite@plt>
  405fe8:	b	4060b4 <read_prop@@Base+0x1d4>
  405fec:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  405ff0:	ldr	x8, [x8, #3992]
  405ff4:	ldr	x19, [x8]
  405ff8:	bl	4051f0 <__errno_location@plt>
  405ffc:	ldr	w0, [x0]
  406000:	bl	404f90 <strerror@plt>
  406004:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  406008:	mov	x3, x0
  40600c:	add	x1, x1, #0x1e0
  406010:	add	x2, sp, #0x60
  406014:	mov	x0, x19
  406018:	bl	405240 <fprintf@plt>
  40601c:	b	4060b4 <read_prop@@Base+0x1d4>
  406020:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  406024:	ldr	x8, [x8, #3992]
  406028:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40602c:	add	x1, x1, #0x1ee
  406030:	add	x3, sp, #0x60
  406034:	ldr	x0, [x8]
  406038:	mov	x2, x20
  40603c:	bl	405240 <fprintf@plt>
  406040:	mov	x0, x21
  406044:	bl	404e60 <fclose@plt>
  406048:	b	406098 <read_prop@@Base+0x1b8>
  40604c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  406050:	ldr	x8, [x8, #3992]
  406054:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  406058:	add	x1, x1, #0x21d
  40605c:	add	x2, sp, #0x10
  406060:	ldr	x0, [x8]
  406064:	add	x3, sp, #0x60
  406068:	b	406094 <read_prop@@Base+0x1b4>
  40606c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  406070:	ldr	x8, [x8, #3992]
  406074:	mov	w0, #0x22                  	// #34
  406078:	ldr	x19, [x8]
  40607c:	bl	404f90 <strerror@plt>
  406080:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  406084:	mov	x3, x0
  406088:	add	x1, x1, #0x244
  40608c:	add	x2, sp, #0x60
  406090:	mov	x0, x19
  406094:	bl	405240 <fprintf@plt>
  406098:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40609c:	ldr	x8, [x8, #3992]
  4060a0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4060a4:	add	x1, x1, #0x252
  4060a8:	add	x2, sp, #0x60
  4060ac:	ldr	x0, [x8]
  4060b0:	bl	405240 <fprintf@plt>
  4060b4:	mov	w0, #0xffffffff            	// #-1
  4060b8:	ldp	x20, x19, [sp, #256]
  4060bc:	ldp	x28, x21, [sp, #240]
  4060c0:	ldp	x29, x30, [sp, #224]
  4060c4:	add	sp, sp, #0x110
  4060c8:	ret

00000000004060cc <get_hex@@Base>:
  4060cc:	sub	w8, w0, #0x41
  4060d0:	and	w8, w8, #0xff
  4060d4:	cmp	w8, #0x6
  4060d8:	and	w8, w0, #0xff
  4060dc:	b.cs	4060ec <get_hex@@Base+0x20>  // b.hs, b.nlast
  4060e0:	mov	w9, #0xffffffc9            	// #-55
  4060e4:	add	w0, w9, w8
  4060e8:	ret
  4060ec:	sub	w9, w0, #0x61
  4060f0:	and	w9, w9, #0xff
  4060f4:	cmp	w9, #0x6
  4060f8:	b.cs	406108 <get_hex@@Base+0x3c>  // b.hs, b.nlast
  4060fc:	mov	w9, #0xffffffa9            	// #-87
  406100:	add	w0, w9, w8
  406104:	ret
  406108:	sub	w9, w0, #0x30
  40610c:	and	w9, w9, #0xff
  406110:	sub	w8, w8, #0x30
  406114:	cmp	w9, #0xa
  406118:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
  40611c:	ret

0000000000406120 <get_integer@@Base>:
  406120:	sub	sp, sp, #0x30
  406124:	stp	x29, x30, [sp, #16]
  406128:	stp	x20, x19, [sp, #32]
  40612c:	add	x29, sp, #0x10
  406130:	cbz	x1, 406170 <get_integer@@Base+0x50>
  406134:	ldrb	w8, [x1]
  406138:	mov	x20, x1
  40613c:	cbz	w8, 406170 <get_integer@@Base+0x50>
  406140:	mov	x19, x0
  406144:	add	x1, sp, #0x8
  406148:	mov	x0, x20
  40614c:	bl	405020 <strtol@plt>
  406150:	ldr	x9, [sp, #8]
  406154:	mov	x8, x0
  406158:	mov	w0, #0xffffffff            	// #-1
  40615c:	cbz	x9, 406174 <get_integer@@Base+0x54>
  406160:	cmp	x9, x20
  406164:	b.eq	406174 <get_integer@@Base+0x54>  // b.none
  406168:	ldrb	w9, [x9]
  40616c:	cbz	w9, 406184 <get_integer@@Base+0x64>
  406170:	mov	w0, #0xffffffff            	// #-1
  406174:	ldp	x20, x19, [sp, #32]
  406178:	ldp	x29, x30, [sp, #16]
  40617c:	add	sp, sp, #0x30
  406180:	ret
  406184:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  406188:	add	x9, x8, x9
  40618c:	cmp	x9, #0x2
  406190:	mov	w0, #0xffffffff            	// #-1
  406194:	b.cc	406174 <get_integer@@Base+0x54>  // b.lo, b.ul, b.last
  406198:	mov	w9, #0x80000000            	// #-2147483648
  40619c:	add	x9, x8, x9
  4061a0:	lsr	x9, x9, #32
  4061a4:	cbnz	x9, 406174 <get_integer@@Base+0x54>
  4061a8:	mov	w0, wzr
  4061ac:	str	w8, [x19]
  4061b0:	b	406174 <get_integer@@Base+0x54>

00000000004061b4 <mask2bits@@Base>:
  4061b4:	rev	w8, w0
  4061b8:	neg	w9, w8
  4061bc:	bics	wzr, w9, w8
  4061c0:	b.eq	4061cc <mask2bits@@Base+0x18>  // b.none
  4061c4:	mov	w0, #0xffffffff            	// #-1
  4061c8:	ret
  4061cc:	cbz	w0, 4061e0 <mask2bits@@Base+0x2c>
  4061d0:	mov	w0, wzr
  4061d4:	lsl	w8, w8, #1
  4061d8:	add	w0, w0, #0x1
  4061dc:	cbnz	w8, 4061d4 <mask2bits@@Base+0x20>
  4061e0:	ret

00000000004061e4 <get_unsigned@@Base>:
  4061e4:	sub	sp, sp, #0x30
  4061e8:	stp	x29, x30, [sp, #16]
  4061ec:	stp	x20, x19, [sp, #32]
  4061f0:	add	x29, sp, #0x10
  4061f4:	cbz	x1, 40624c <get_unsigned@@Base+0x68>
  4061f8:	ldrb	w8, [x1]
  4061fc:	mov	x20, x1
  406200:	cbz	w8, 40624c <get_unsigned@@Base+0x68>
  406204:	mov	x19, x0
  406208:	add	x1, sp, #0x8
  40620c:	mov	x0, x20
  406210:	bl	404d30 <strtoul@plt>
  406214:	ldr	x9, [sp, #8]
  406218:	mov	x8, x0
  40621c:	mov	w0, #0xffffffff            	// #-1
  406220:	cbz	x9, 406250 <get_unsigned@@Base+0x6c>
  406224:	cmp	x9, x20
  406228:	b.eq	406250 <get_unsigned@@Base+0x6c>  // b.none
  40622c:	ldrb	w9, [x9]
  406230:	mov	w0, #0xffffffff            	// #-1
  406234:	cbnz	w9, 406250 <get_unsigned@@Base+0x6c>
  406238:	lsr	x9, x8, #32
  40623c:	cbnz	x9, 406250 <get_unsigned@@Base+0x6c>
  406240:	mov	w0, wzr
  406244:	str	w8, [x19]
  406248:	b	406250 <get_unsigned@@Base+0x6c>
  40624c:	mov	w0, #0xffffffff            	// #-1
  406250:	ldp	x20, x19, [sp, #32]
  406254:	ldp	x29, x30, [sp, #16]
  406258:	add	sp, sp, #0x30
  40625c:	ret

0000000000406260 <get_time_rtt@@Base>:
  406260:	sub	sp, sp, #0x50
  406264:	stp	x22, x21, [sp, #48]
  406268:	mov	x22, x1
  40626c:	stp	x20, x19, [sp, #64]
  406270:	mov	x19, x0
  406274:	mov	w1, #0x2e                  	// #46
  406278:	mov	x0, x22
  40627c:	str	d8, [sp, #16]
  406280:	stp	x29, x30, [sp, #24]
  406284:	str	x23, [sp, #40]
  406288:	add	x29, sp, #0x10
  40628c:	mov	x21, x2
  406290:	bl	4050a0 <strchr@plt>
  406294:	add	x1, sp, #0x8
  406298:	cbz	x0, 4062f8 <get_time_rtt@@Base+0x98>
  40629c:	mov	x0, x22
  4062a0:	bl	404d80 <strtod@plt>
  4062a4:	fcmp	d0, #0.0
  4062a8:	b.mi	4063cc <get_time_rtt@@Base+0x16c>  // b.first
  4062ac:	ldr	x20, [sp, #8]
  4062b0:	mov	w0, #0xffffffff            	// #-1
  4062b4:	cbz	x20, 406400 <get_time_rtt@@Base+0x1a0>
  4062b8:	cmp	x20, x22
  4062bc:	b.eq	406400 <get_time_rtt@@Base+0x1a0>  // b.none
  4062c0:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  4062c4:	mov	v8.16b, v0.16b
  4062c8:	fmov	d0, x8
  4062cc:	fcmp	d8, d0
  4062d0:	b.ne	4062ec <get_time_rtt@@Base+0x8c>  // b.any
  4062d4:	bl	4051f0 <__errno_location@plt>
  4062d8:	ldr	w8, [x0]
  4062dc:	cmp	w8, #0x22
  4062e0:	b.eq	4063cc <get_time_rtt@@Base+0x16c>  // b.none
  4062e4:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  4062e8:	fmov	d8, x8
  4062ec:	cmp	x20, x22
  4062f0:	b.ne	406340 <get_time_rtt@@Base+0xe0>  // b.any
  4062f4:	b	4063cc <get_time_rtt@@Base+0x16c>
  4062f8:	mov	x0, x22
  4062fc:	mov	w2, wzr
  406300:	bl	404d30 <strtoul@plt>
  406304:	ldr	x20, [sp, #8]
  406308:	mov	x23, x0
  40630c:	mov	w0, #0xffffffff            	// #-1
  406310:	cbz	x20, 406400 <get_time_rtt@@Base+0x1a0>
  406314:	cmp	x20, x22
  406318:	b.eq	406400 <get_time_rtt@@Base+0x1a0>  // b.none
  40631c:	cmn	x23, #0x1
  406320:	b.ne	406334 <get_time_rtt@@Base+0xd4>  // b.any
  406324:	bl	4051f0 <__errno_location@plt>
  406328:	ldr	w8, [x0]
  40632c:	cmp	w8, #0x22
  406330:	b.eq	4063cc <get_time_rtt@@Base+0x16c>  // b.none
  406334:	ucvtf	d8, x23
  406338:	cmp	x20, x22
  40633c:	b.eq	4063cc <get_time_rtt@@Base+0x16c>  // b.none
  406340:	mov	w8, #0x1                   	// #1
  406344:	str	w8, [x21]
  406348:	ldrb	w8, [x20]
  40634c:	cbz	w8, 4063e4 <get_time_rtt@@Base+0x184>
  406350:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  406354:	add	x1, x1, #0x250
  406358:	mov	x0, x20
  40635c:	str	wzr, [x21]
  406360:	bl	404f50 <strcasecmp@plt>
  406364:	cbz	w0, 4063d4 <get_time_rtt@@Base+0x174>
  406368:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40636c:	add	x1, x1, #0x267
  406370:	mov	x0, x20
  406374:	bl	404f50 <strcasecmp@plt>
  406378:	cbz	w0, 4063d4 <get_time_rtt@@Base+0x174>
  40637c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  406380:	add	x1, x1, #0x26c
  406384:	mov	x0, x20
  406388:	bl	404f50 <strcasecmp@plt>
  40638c:	cbz	w0, 4063d4 <get_time_rtt@@Base+0x174>
  406390:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  406394:	add	x1, x1, #0x5fb
  406398:	mov	x0, x20
  40639c:	bl	404f50 <strcasecmp@plt>
  4063a0:	cbz	w0, 4063e4 <get_time_rtt@@Base+0x184>
  4063a4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4063a8:	add	x1, x1, #0x266
  4063ac:	mov	x0, x20
  4063b0:	bl	404f50 <strcasecmp@plt>
  4063b4:	cbz	w0, 4063e4 <get_time_rtt@@Base+0x184>
  4063b8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4063bc:	add	x1, x1, #0x26b
  4063c0:	mov	x0, x20
  4063c4:	bl	404f50 <strcasecmp@plt>
  4063c8:	cbz	w0, 4063e4 <get_time_rtt@@Base+0x184>
  4063cc:	mov	w0, #0xffffffff            	// #-1
  4063d0:	b	406400 <get_time_rtt@@Base+0x1a0>
  4063d4:	mov	x8, #0x400000000000        	// #70368744177664
  4063d8:	movk	x8, #0x408f, lsl #48
  4063dc:	fmov	d0, x8
  4063e0:	fmul	d8, d8, d0
  4063e4:	fcvtzu	w8, d8
  4063e8:	ucvtf	d0, w8
  4063ec:	fcmp	d8, d0
  4063f0:	cset	w9, gt
  4063f4:	add	w8, w9, w8
  4063f8:	mov	w0, wzr
  4063fc:	str	w8, [x19]
  406400:	ldp	x20, x19, [sp, #64]
  406404:	ldp	x22, x21, [sp, #48]
  406408:	ldr	x23, [sp, #40]
  40640c:	ldp	x29, x30, [sp, #24]
  406410:	ldr	d8, [sp, #16]
  406414:	add	sp, sp, #0x50
  406418:	ret

000000000040641c <get_u64@@Base>:
  40641c:	stp	x29, x30, [sp, #-48]!
  406420:	str	x21, [sp, #16]
  406424:	stp	x20, x19, [sp, #32]
  406428:	mov	x29, sp
  40642c:	cbz	x1, 40646c <get_u64@@Base+0x50>
  406430:	ldrb	w8, [x1]
  406434:	mov	x21, x1
  406438:	cbz	w8, 40646c <get_u64@@Base+0x50>
  40643c:	mov	x19, x0
  406440:	add	x1, x29, #0x18
  406444:	mov	x0, x21
  406448:	bl	4050b0 <strtoull@plt>
  40644c:	ldr	x8, [x29, #24]
  406450:	mov	x20, x0
  406454:	mov	w0, #0xffffffff            	// #-1
  406458:	cbz	x8, 406470 <get_u64@@Base+0x54>
  40645c:	cmp	x8, x21
  406460:	b.eq	406470 <get_u64@@Base+0x54>  // b.none
  406464:	ldrb	w8, [x8]
  406468:	cbz	w8, 406480 <get_u64@@Base+0x64>
  40646c:	mov	w0, #0xffffffff            	// #-1
  406470:	ldp	x20, x19, [sp, #32]
  406474:	ldr	x21, [sp, #16]
  406478:	ldp	x29, x30, [sp], #48
  40647c:	ret
  406480:	cmn	x20, #0x1
  406484:	b.ne	406498 <get_u64@@Base+0x7c>  // b.any
  406488:	bl	4051f0 <__errno_location@plt>
  40648c:	ldr	w8, [x0]
  406490:	cmp	w8, #0x22
  406494:	b.eq	40646c <get_u64@@Base+0x50>  // b.none
  406498:	mov	w0, wzr
  40649c:	str	x20, [x19]
  4064a0:	b	406470 <get_u64@@Base+0x54>

00000000004064a4 <get_u32@@Base>:
  4064a4:	sub	sp, sp, #0x30
  4064a8:	stp	x29, x30, [sp, #16]
  4064ac:	stp	x20, x19, [sp, #32]
  4064b0:	add	x29, sp, #0x10
  4064b4:	cbz	x1, 40650c <get_u32@@Base+0x68>
  4064b8:	ldrb	w8, [x1]
  4064bc:	mov	x20, x1
  4064c0:	cbz	w8, 40650c <get_u32@@Base+0x68>
  4064c4:	mov	x19, x0
  4064c8:	add	x1, sp, #0x8
  4064cc:	mov	x0, x20
  4064d0:	bl	404d30 <strtoul@plt>
  4064d4:	ldr	x9, [sp, #8]
  4064d8:	mov	x8, x0
  4064dc:	mov	w0, #0xffffffff            	// #-1
  4064e0:	cbz	x9, 406510 <get_u32@@Base+0x6c>
  4064e4:	cmp	x9, x20
  4064e8:	b.eq	406510 <get_u32@@Base+0x6c>  // b.none
  4064ec:	ldrb	w9, [x9]
  4064f0:	mov	w0, #0xffffffff            	// #-1
  4064f4:	cbnz	w9, 406510 <get_u32@@Base+0x6c>
  4064f8:	lsr	x9, x8, #32
  4064fc:	cbnz	x9, 406510 <get_u32@@Base+0x6c>
  406500:	mov	w0, wzr
  406504:	str	w8, [x19]
  406508:	b	406510 <get_u32@@Base+0x6c>
  40650c:	mov	w0, #0xffffffff            	// #-1
  406510:	ldp	x20, x19, [sp, #32]
  406514:	ldp	x29, x30, [sp, #16]
  406518:	add	sp, sp, #0x30
  40651c:	ret

0000000000406520 <get_u16@@Base>:
  406520:	sub	sp, sp, #0x30
  406524:	stp	x29, x30, [sp, #16]
  406528:	stp	x20, x19, [sp, #32]
  40652c:	add	x29, sp, #0x10
  406530:	cbz	x1, 406588 <get_u16@@Base+0x68>
  406534:	ldrb	w8, [x1]
  406538:	mov	x20, x1
  40653c:	cbz	w8, 406588 <get_u16@@Base+0x68>
  406540:	mov	x19, x0
  406544:	add	x1, sp, #0x8
  406548:	mov	x0, x20
  40654c:	bl	404d30 <strtoul@plt>
  406550:	ldr	x9, [sp, #8]
  406554:	mov	x8, x0
  406558:	mov	w0, #0xffffffff            	// #-1
  40655c:	cbz	x9, 40658c <get_u16@@Base+0x6c>
  406560:	cmp	x9, x20
  406564:	b.eq	40658c <get_u16@@Base+0x6c>  // b.none
  406568:	ldrb	w9, [x9]
  40656c:	mov	w0, #0xffffffff            	// #-1
  406570:	cbnz	w9, 40658c <get_u16@@Base+0x6c>
  406574:	lsr	x9, x8, #16
  406578:	cbnz	x9, 40658c <get_u16@@Base+0x6c>
  40657c:	mov	w0, wzr
  406580:	strh	w8, [x19]
  406584:	b	40658c <get_u16@@Base+0x6c>
  406588:	mov	w0, #0xffffffff            	// #-1
  40658c:	ldp	x20, x19, [sp, #32]
  406590:	ldp	x29, x30, [sp, #16]
  406594:	add	sp, sp, #0x30
  406598:	ret

000000000040659c <get_u8@@Base>:
  40659c:	sub	sp, sp, #0x30
  4065a0:	stp	x29, x30, [sp, #16]
  4065a4:	stp	x20, x19, [sp, #32]
  4065a8:	add	x29, sp, #0x10
  4065ac:	cbz	x1, 406604 <get_u8@@Base+0x68>
  4065b0:	ldrb	w8, [x1]
  4065b4:	mov	x20, x1
  4065b8:	cbz	w8, 406604 <get_u8@@Base+0x68>
  4065bc:	mov	x19, x0
  4065c0:	add	x1, sp, #0x8
  4065c4:	mov	x0, x20
  4065c8:	bl	404d30 <strtoul@plt>
  4065cc:	ldr	x9, [sp, #8]
  4065d0:	mov	x8, x0
  4065d4:	mov	w0, #0xffffffff            	// #-1
  4065d8:	cbz	x9, 406608 <get_u8@@Base+0x6c>
  4065dc:	cmp	x9, x20
  4065e0:	b.eq	406608 <get_u8@@Base+0x6c>  // b.none
  4065e4:	ldrb	w9, [x9]
  4065e8:	mov	w0, #0xffffffff            	// #-1
  4065ec:	cbnz	w9, 406608 <get_u8@@Base+0x6c>
  4065f0:	cmp	x8, #0xff
  4065f4:	b.hi	406608 <get_u8@@Base+0x6c>  // b.pmore
  4065f8:	mov	w0, wzr
  4065fc:	strb	w8, [x19]
  406600:	b	406608 <get_u8@@Base+0x6c>
  406604:	mov	w0, #0xffffffff            	// #-1
  406608:	ldp	x20, x19, [sp, #32]
  40660c:	ldp	x29, x30, [sp, #16]
  406610:	add	sp, sp, #0x30
  406614:	ret

0000000000406618 <get_s64@@Base>:
  406618:	sub	sp, sp, #0x40
  40661c:	stp	x29, x30, [sp, #16]
  406620:	stp	x22, x21, [sp, #32]
  406624:	stp	x20, x19, [sp, #48]
  406628:	add	x29, sp, #0x10
  40662c:	mov	w22, w2
  406630:	mov	x21, x1
  406634:	mov	x19, x0
  406638:	bl	4051f0 <__errno_location@plt>
  40663c:	str	wzr, [x0]
  406640:	cbz	x21, 406680 <get_s64@@Base+0x68>
  406644:	ldrb	w8, [x21]
  406648:	cbz	w8, 406680 <get_s64@@Base+0x68>
  40664c:	mov	x20, x0
  406650:	add	x1, sp, #0x8
  406654:	mov	x0, x21
  406658:	mov	w2, w22
  40665c:	bl	404d70 <strtoll@plt>
  406660:	ldr	x9, [sp, #8]
  406664:	mov	x8, x0
  406668:	mov	w0, #0xffffffff            	// #-1
  40666c:	cbz	x9, 406684 <get_s64@@Base+0x6c>
  406670:	cmp	x9, x21
  406674:	b.eq	406684 <get_s64@@Base+0x6c>  // b.none
  406678:	ldrb	w9, [x9]
  40667c:	cbz	w9, 406698 <get_s64@@Base+0x80>
  406680:	mov	w0, #0xffffffff            	// #-1
  406684:	ldp	x20, x19, [sp, #48]
  406688:	ldp	x22, x21, [sp, #32]
  40668c:	ldp	x29, x30, [sp, #16]
  406690:	add	sp, sp, #0x40
  406694:	ret
  406698:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  40669c:	add	x9, x8, x9
  4066a0:	cmp	x9, #0x1
  4066a4:	b.hi	4066b4 <get_s64@@Base+0x9c>  // b.pmore
  4066a8:	ldr	w9, [x20]
  4066ac:	cmp	w9, #0x22
  4066b0:	b.eq	406680 <get_s64@@Base+0x68>  // b.none
  4066b4:	mov	w0, wzr
  4066b8:	str	x8, [x19]
  4066bc:	b	406684 <get_s64@@Base+0x6c>

00000000004066c0 <get_s32@@Base>:
  4066c0:	stp	x29, x30, [sp, #-48]!
  4066c4:	str	x21, [sp, #16]
  4066c8:	stp	x20, x19, [sp, #32]
  4066cc:	mov	x29, sp
  4066d0:	mov	w21, w2
  4066d4:	mov	x20, x1
  4066d8:	mov	x19, x0
  4066dc:	bl	4051f0 <__errno_location@plt>
  4066e0:	str	wzr, [x0]
  4066e4:	cbz	x20, 406720 <get_s32@@Base+0x60>
  4066e8:	ldrb	w8, [x20]
  4066ec:	cbz	w8, 406720 <get_s32@@Base+0x60>
  4066f0:	add	x1, x29, #0x18
  4066f4:	mov	x0, x20
  4066f8:	mov	w2, w21
  4066fc:	bl	405020 <strtol@plt>
  406700:	ldr	x9, [x29, #24]
  406704:	mov	x8, x0
  406708:	mov	w0, #0xffffffff            	// #-1
  40670c:	cbz	x9, 406724 <get_s32@@Base+0x64>
  406710:	cmp	x9, x20
  406714:	b.eq	406724 <get_s32@@Base+0x64>  // b.none
  406718:	ldrb	w9, [x9]
  40671c:	cbz	w9, 406734 <get_s32@@Base+0x74>
  406720:	mov	w0, #0xffffffff            	// #-1
  406724:	ldp	x20, x19, [sp, #32]
  406728:	ldr	x21, [sp, #16]
  40672c:	ldp	x29, x30, [sp], #48
  406730:	ret
  406734:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  406738:	add	x9, x8, x9
  40673c:	cmp	x9, #0x2
  406740:	mov	w0, #0xffffffff            	// #-1
  406744:	b.cc	406724 <get_s32@@Base+0x64>  // b.lo, b.ul, b.last
  406748:	mov	w9, #0x80000000            	// #-2147483648
  40674c:	add	x9, x8, x9
  406750:	lsr	x9, x9, #32
  406754:	cbnz	x9, 406724 <get_s32@@Base+0x64>
  406758:	mov	w0, wzr
  40675c:	str	w8, [x19]
  406760:	b	406724 <get_s32@@Base+0x64>

0000000000406764 <get_be64@@Base>:
  406764:	stp	x29, x30, [sp, #-48]!
  406768:	str	x21, [sp, #16]
  40676c:	stp	x20, x19, [sp, #32]
  406770:	mov	x29, sp
  406774:	cbz	x1, 4067ac <get_be64@@Base+0x48>
  406778:	ldrb	w8, [x1]
  40677c:	mov	x21, x1
  406780:	cbz	w8, 4067ac <get_be64@@Base+0x48>
  406784:	mov	x19, x0
  406788:	add	x1, x29, #0x18
  40678c:	mov	x0, x21
  406790:	bl	4050b0 <strtoull@plt>
  406794:	ldr	x8, [x29, #24]
  406798:	cbz	x8, 4067ac <get_be64@@Base+0x48>
  40679c:	cmp	x8, x21
  4067a0:	b.eq	4067ac <get_be64@@Base+0x48>  // b.none
  4067a4:	ldrb	w8, [x8]
  4067a8:	cbz	w8, 4067c0 <get_be64@@Base+0x5c>
  4067ac:	mov	w0, #0xffffffff            	// #-1
  4067b0:	ldp	x20, x19, [sp, #32]
  4067b4:	ldr	x21, [sp, #16]
  4067b8:	ldp	x29, x30, [sp], #48
  4067bc:	ret
  4067c0:	mov	x20, x0
  4067c4:	cmn	x0, #0x1
  4067c8:	b.ne	4067dc <get_be64@@Base+0x78>  // b.any
  4067cc:	bl	4051f0 <__errno_location@plt>
  4067d0:	ldr	w8, [x0]
  4067d4:	cmp	w8, #0x22
  4067d8:	b.eq	4067ac <get_be64@@Base+0x48>  // b.none
  4067dc:	lsr	x9, x20, #32
  4067e0:	rev	w8, w20
  4067e4:	rev	w9, w9
  4067e8:	mov	w0, wzr
  4067ec:	bfi	x9, x8, #32, #32
  4067f0:	str	x9, [x19]
  4067f4:	b	4067b0 <get_be64@@Base+0x4c>

00000000004067f8 <get_be32@@Base>:
  4067f8:	sub	sp, sp, #0x30
  4067fc:	stp	x29, x30, [sp, #16]
  406800:	stp	x20, x19, [sp, #32]
  406804:	add	x29, sp, #0x10
  406808:	cbz	x1, 406854 <get_be32@@Base+0x5c>
  40680c:	ldrb	w8, [x1]
  406810:	mov	x20, x1
  406814:	cbz	w8, 406854 <get_be32@@Base+0x5c>
  406818:	mov	x19, x0
  40681c:	add	x1, sp, #0x8
  406820:	mov	x0, x20
  406824:	bl	404d30 <strtoul@plt>
  406828:	ldr	x8, [sp, #8]
  40682c:	cbz	x8, 406854 <get_be32@@Base+0x5c>
  406830:	cmp	x8, x20
  406834:	b.eq	406854 <get_be32@@Base+0x5c>  // b.none
  406838:	lsr	x9, x0, #32
  40683c:	cbnz	x9, 406854 <get_be32@@Base+0x5c>
  406840:	ldrb	w8, [x8]
  406844:	cbnz	w8, 406854 <get_be32@@Base+0x5c>
  406848:	rev	w9, w0
  40684c:	str	w9, [x19]
  406850:	b	406858 <get_be32@@Base+0x60>
  406854:	mov	w8, #0xffffffff            	// #-1
  406858:	ldp	x20, x19, [sp, #32]
  40685c:	ldp	x29, x30, [sp, #16]
  406860:	mov	w0, w8
  406864:	add	sp, sp, #0x30
  406868:	ret

000000000040686c <get_be16@@Base>:
  40686c:	sub	sp, sp, #0x30
  406870:	stp	x29, x30, [sp, #16]
  406874:	stp	x20, x19, [sp, #32]
  406878:	add	x29, sp, #0x10
  40687c:	cbz	x1, 4068cc <get_be16@@Base+0x60>
  406880:	ldrb	w8, [x1]
  406884:	mov	x20, x1
  406888:	cbz	w8, 4068cc <get_be16@@Base+0x60>
  40688c:	mov	x19, x0
  406890:	add	x1, sp, #0x8
  406894:	mov	x0, x20
  406898:	bl	404d30 <strtoul@plt>
  40689c:	ldr	x8, [sp, #8]
  4068a0:	cbz	x8, 4068cc <get_be16@@Base+0x60>
  4068a4:	cmp	x8, x20
  4068a8:	b.eq	4068cc <get_be16@@Base+0x60>  // b.none
  4068ac:	lsr	x9, x0, #16
  4068b0:	cbnz	x9, 4068cc <get_be16@@Base+0x60>
  4068b4:	ldrb	w8, [x8]
  4068b8:	cbnz	w8, 4068cc <get_be16@@Base+0x60>
  4068bc:	rev	w9, w0
  4068c0:	lsr	w9, w9, #16
  4068c4:	strh	w9, [x19]
  4068c8:	b	4068d0 <get_be16@@Base+0x64>
  4068cc:	mov	w8, #0xffffffff            	// #-1
  4068d0:	ldp	x20, x19, [sp, #32]
  4068d4:	ldp	x29, x30, [sp, #16]
  4068d8:	mov	w0, w8
  4068dc:	add	sp, sp, #0x30
  4068e0:	ret

00000000004068e4 <get_addr64@@Base>:
  4068e4:	sub	sp, sp, #0x30
  4068e8:	stp	x20, x19, [sp, #32]
  4068ec:	mov	x20, x1
  4068f0:	mov	x19, x0
  4068f4:	mov	x1, sp
  4068f8:	mov	w2, #0x10                  	// #16
  4068fc:	mov	x0, x20
  406900:	stp	x29, x30, [sp, #16]
  406904:	add	x29, sp, #0x10
  406908:	bl	404d30 <strtoul@plt>
  40690c:	lsr	x8, x0, #16
  406910:	cbnz	x8, 406a00 <get_addr64@@Base+0x11c>
  406914:	ldr	x8, [sp]
  406918:	cmp	x8, x20
  40691c:	b.eq	406a00 <get_addr64@@Base+0x11c>  // b.none
  406920:	rev	w9, w0
  406924:	lsr	w9, w9, #16
  406928:	strh	w9, [sp, #8]
  40692c:	ldrb	w9, [x8]
  406930:	cbz	w9, 406a14 <get_addr64@@Base+0x130>
  406934:	cmp	w9, #0x3a
  406938:	b.ne	406a00 <get_addr64@@Base+0x11c>  // b.any
  40693c:	add	x20, x8, #0x1
  406940:	mov	x1, sp
  406944:	mov	w2, #0x10                  	// #16
  406948:	mov	x0, x20
  40694c:	bl	404d30 <strtoul@plt>
  406950:	lsr	x8, x0, #16
  406954:	cbnz	x8, 406a00 <get_addr64@@Base+0x11c>
  406958:	ldr	x8, [sp]
  40695c:	cmp	x8, x20
  406960:	b.eq	406a00 <get_addr64@@Base+0x11c>  // b.none
  406964:	rev	w9, w0
  406968:	lsr	w9, w9, #16
  40696c:	strh	w9, [sp, #10]
  406970:	ldrb	w9, [x8]
  406974:	cbz	w9, 406a14 <get_addr64@@Base+0x130>
  406978:	cmp	w9, #0x3a
  40697c:	b.ne	406a00 <get_addr64@@Base+0x11c>  // b.any
  406980:	add	x20, x8, #0x1
  406984:	mov	x1, sp
  406988:	mov	w2, #0x10                  	// #16
  40698c:	mov	x0, x20
  406990:	bl	404d30 <strtoul@plt>
  406994:	lsr	x8, x0, #16
  406998:	cbnz	x8, 406a00 <get_addr64@@Base+0x11c>
  40699c:	ldr	x8, [sp]
  4069a0:	cmp	x8, x20
  4069a4:	b.eq	406a00 <get_addr64@@Base+0x11c>  // b.none
  4069a8:	rev	w9, w0
  4069ac:	lsr	w9, w9, #16
  4069b0:	strh	w9, [sp, #12]
  4069b4:	ldrb	w9, [x8]
  4069b8:	cbz	w9, 406a14 <get_addr64@@Base+0x130>
  4069bc:	cmp	w9, #0x3a
  4069c0:	b.ne	406a00 <get_addr64@@Base+0x11c>  // b.any
  4069c4:	add	x20, x8, #0x1
  4069c8:	mov	x1, sp
  4069cc:	mov	w2, #0x10                  	// #16
  4069d0:	mov	x0, x20
  4069d4:	bl	404d30 <strtoul@plt>
  4069d8:	lsr	x8, x0, #16
  4069dc:	cbnz	x8, 406a00 <get_addr64@@Base+0x11c>
  4069e0:	ldr	x8, [sp]
  4069e4:	cmp	x8, x20
  4069e8:	b.eq	406a00 <get_addr64@@Base+0x11c>  // b.none
  4069ec:	rev	w9, w0
  4069f0:	lsr	w9, w9, #16
  4069f4:	strh	w9, [sp, #14]
  4069f8:	ldrb	w8, [x8]
  4069fc:	cbz	w8, 406a14 <get_addr64@@Base+0x130>
  406a00:	mov	w0, #0xffffffff            	// #-1
  406a04:	ldp	x20, x19, [sp, #32]
  406a08:	ldp	x29, x30, [sp, #16]
  406a0c:	add	sp, sp, #0x30
  406a10:	ret
  406a14:	ldr	x8, [sp, #8]
  406a18:	mov	w0, #0x1                   	// #1
  406a1c:	str	x8, [x19]
  406a20:	b	406a04 <get_addr64@@Base+0x120>

0000000000406a24 <get_addr_1@@Base>:
  406a24:	stp	x29, x30, [sp, #-48]!
  406a28:	stp	x20, x19, [sp, #32]
  406a2c:	mov	x20, x1
  406a30:	movi	v0.2d, #0x0
  406a34:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  406a38:	str	x21, [sp, #16]
  406a3c:	mov	x19, x0
  406a40:	str	xzr, [x0, #256]
  406a44:	stp	q0, q0, [x0, #224]
  406a48:	stp	q0, q0, [x0, #192]
  406a4c:	stp	q0, q0, [x0, #160]
  406a50:	stp	q0, q0, [x0, #128]
  406a54:	stp	q0, q0, [x0, #96]
  406a58:	stp	q0, q0, [x0, #64]
  406a5c:	stp	q0, q0, [x0, #32]
  406a60:	stp	q0, q0, [x0]
  406a64:	add	x1, x1, #0x5d7
  406a68:	mov	x0, x20
  406a6c:	mov	x29, sp
  406a70:	mov	w21, w2
  406a74:	bl	405000 <strcmp@plt>
  406a78:	cbz	w0, 406af4 <get_addr_1@@Base+0xd0>
  406a7c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  406a80:	add	x1, x1, #0x5df
  406a84:	mov	x0, x20
  406a88:	bl	405000 <strcmp@plt>
  406a8c:	cbz	w0, 406ad8 <get_addr_1@@Base+0xb4>
  406a90:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  406a94:	add	x1, x1, #0x5e3
  406a98:	mov	x0, x20
  406a9c:	bl	405000 <strcmp@plt>
  406aa0:	cbz	w0, 406ad8 <get_addr_1@@Base+0xb4>
  406aa4:	cmp	w21, #0x11
  406aa8:	b.ne	406b40 <get_addr_1@@Base+0x11c>  // b.any
  406aac:	add	x0, x19, #0x8
  406ab0:	mov	w1, #0x100                 	// #256
  406ab4:	mov	x2, x20
  406ab8:	bl	409c24 <ll_addr_a2n@@Base>
  406abc:	tbnz	w0, #31, 406b00 <get_addr_1@@Base+0xdc>
  406ac0:	mov	w8, #0x11                  	// #17
  406ac4:	lsl	w9, w0, #3
  406ac8:	strh	w0, [x19, #2]
  406acc:	strh	w8, [x19, #6]
  406ad0:	strh	w9, [x19, #4]
  406ad4:	b	406c0c <get_addr_1@@Base+0x1e8>
  406ad8:	orr	w8, w21, #0x10
  406adc:	cmp	w8, #0x1c
  406ae0:	b.eq	406b00 <get_addr_1@@Base+0xdc>  // b.none
  406ae4:	strh	w21, [x19, #6]
  406ae8:	mov	w8, #0xfffe0000            	// #-131072
  406aec:	stur	w8, [x19, #2]
  406af0:	b	406c0c <get_addr_1@@Base+0x1e8>
  406af4:	orr	w8, w21, #0x10
  406af8:	cmp	w8, #0x1c
  406afc:	b.ne	406b08 <get_addr_1@@Base+0xe4>  // b.any
  406b00:	mov	w0, #0xffffffff            	// #-1
  406b04:	b	406ca4 <get_addr_1@@Base+0x280>
  406b08:	and	w8, w21, #0xffff
  406b0c:	sub	w8, w8, #0x2
  406b10:	cmp	w8, #0x1a
  406b14:	strh	w21, [x19, #6]
  406b18:	b.hi	406bec <get_addr_1@@Base+0x1c8>  // b.pmore
  406b1c:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  406b20:	add	x9, x9, #0xd0
  406b24:	adr	x10, 406b38 <get_addr_1@@Base+0x114>
  406b28:	ldrb	w11, [x9, x8]
  406b2c:	add	x10, x10, x11, lsl #2
  406b30:	mov	w8, #0x10                  	// #16
  406b34:	br	x10
  406b38:	mov	w8, #0x2                   	// #2
  406b3c:	b	406bf8 <get_addr_1@@Base+0x1d4>
  406b40:	mov	w1, #0x3a                  	// #58
  406b44:	mov	x0, x20
  406b48:	bl	4050a0 <strchr@plt>
  406b4c:	cbz	x0, 406b84 <get_addr_1@@Base+0x160>
  406b50:	mov	w8, #0xa                   	// #10
  406b54:	cmp	w21, #0xa
  406b58:	strh	w8, [x19, #6]
  406b5c:	b.eq	406b64 <get_addr_1@@Base+0x140>  // b.none
  406b60:	cbnz	w21, 406b00 <get_addr_1@@Base+0xdc>
  406b64:	add	x2, x19, #0x8
  406b68:	mov	w0, #0xa                   	// #10
  406b6c:	mov	x1, x20
  406b70:	bl	405070 <inet_pton@plt>
  406b74:	cmp	w0, #0x1
  406b78:	b.lt	406b00 <get_addr_1@@Base+0xdc>  // b.tstop
  406b7c:	mov	w8, #0xffff0010            	// #-65520
  406b80:	b	406aec <get_addr_1@@Base+0xc8>
  406b84:	cmp	w21, #0x1c
  406b88:	b.ne	406cb4 <get_addr_1@@Base+0x290>  // b.any
  406b8c:	add	x21, x19, #0x8
  406b90:	mov	w8, #0x1c                  	// #28
  406b94:	mov	w0, #0x1c                  	// #28
  406b98:	mov	w3, #0x100                 	// #256
  406b9c:	mov	x1, x20
  406ba0:	mov	x2, x21
  406ba4:	strh	w8, [x19, #6]
  406ba8:	bl	40aab0 <mpls_pton@@Base>
  406bac:	cmp	w0, #0x1
  406bb0:	b.lt	406b00 <get_addr_1@@Base+0xdc>  // b.tstop
  406bb4:	mov	w9, #0x4                   	// #4
  406bb8:	mov	x8, xzr
  406bbc:	movk	w9, #0x14, lsl #16
  406bc0:	stur	w9, [x19, #2]
  406bc4:	cmp	x8, #0x40
  406bc8:	b.eq	406c0c <get_addr_1@@Base+0x1e8>  // b.none
  406bcc:	ldr	w9, [x21, x8, lsl #2]
  406bd0:	add	x8, x8, #0x1
  406bd4:	tbz	w9, #16, 406bc4 <get_addr_1@@Base+0x1a0>
  406bd8:	lsl	w8, w8, #2
  406bdc:	strh	w8, [x19, #2]
  406be0:	b	406c0c <get_addr_1@@Base+0x1e8>
  406be4:	mov	w8, #0x4                   	// #4
  406be8:	b	406bf8 <get_addr_1@@Base+0x1d4>
  406bec:	mov	w8, wzr
  406bf0:	b	406bf8 <get_addr_1@@Base+0x1d4>
  406bf4:	mov	w8, #0xa                   	// #10
  406bf8:	strh	w8, [x19, #2]
  406bfc:	mov	w8, #0xfffe                	// #65534
  406c00:	mov	w9, #0x1                   	// #1
  406c04:	strh	w8, [x19, #4]
  406c08:	strh	w9, [x19]
  406c0c:	ldrh	w8, [x19, #6]
  406c10:	cmp	w8, #0xa
  406c14:	b.eq	406c3c <get_addr_1@@Base+0x218>  // b.none
  406c18:	cmp	w8, #0x2
  406c1c:	b.ne	406c64 <get_addr_1@@Base+0x240>  // b.any
  406c20:	ldr	w9, [x19, #8]
  406c24:	cbz	w9, 406c94 <get_addr_1@@Base+0x270>
  406c28:	ldrh	w8, [x19]
  406c2c:	and	w9, w9, #0xf0
  406c30:	cmp	w9, #0xe0
  406c34:	b.eq	406c54 <get_addr_1@@Base+0x230>  // b.none
  406c38:	b	406c88 <get_addr_1@@Base+0x264>
  406c3c:	ldr	w9, [x19, #8]
  406c40:	cbz	w9, 406c6c <get_addr_1@@Base+0x248>
  406c44:	ldrh	w8, [x19]
  406c48:	mvn	w9, w9
  406c4c:	tst	w9, #0xff
  406c50:	b.ne	406c88 <get_addr_1@@Base+0x264>  // b.any
  406c54:	mov	w9, #0xa                   	// #10
  406c58:	mov	w0, wzr
  406c5c:	orr	w8, w8, w9
  406c60:	b	406ca0 <get_addr_1@@Base+0x27c>
  406c64:	mov	w0, wzr
  406c68:	b	406ca4 <get_addr_1@@Base+0x280>
  406c6c:	ldr	w8, [x19, #12]
  406c70:	cbnz	w8, 406c84 <get_addr_1@@Base+0x260>
  406c74:	ldr	w8, [x19, #16]
  406c78:	cbnz	w8, 406c84 <get_addr_1@@Base+0x260>
  406c7c:	ldr	w8, [x19, #20]
  406c80:	cbz	w8, 406c94 <get_addr_1@@Base+0x270>
  406c84:	ldrh	w8, [x19]
  406c88:	mov	w0, wzr
  406c8c:	orr	w8, w8, #0x2
  406c90:	b	406ca0 <get_addr_1@@Base+0x27c>
  406c94:	ldrh	w8, [x19]
  406c98:	mov	w0, wzr
  406c9c:	orr	w8, w8, #0x6
  406ca0:	strh	w8, [x19]
  406ca4:	ldp	x20, x19, [sp, #32]
  406ca8:	ldr	x21, [sp, #16]
  406cac:	ldp	x29, x30, [sp], #48
  406cb0:	ret
  406cb4:	mov	w8, #0x2                   	// #2
  406cb8:	tst	w21, #0xfffffffd
  406cbc:	strh	w8, [x19, #6]
  406cc0:	b.ne	406b00 <get_addr_1@@Base+0xdc>  // b.any
  406cc4:	add	x1, x29, #0x18
  406cc8:	mov	x0, x20
  406ccc:	mov	w2, wzr
  406cd0:	bl	404d30 <strtoul@plt>
  406cd4:	cmp	x0, #0xff
  406cd8:	b.hi	406b00 <get_addr_1@@Base+0xdc>  // b.pmore
  406cdc:	ldr	x8, [x29, #24]
  406ce0:	cmp	x8, x20
  406ce4:	b.eq	406b00 <get_addr_1@@Base+0xdc>  // b.none
  406ce8:	strb	w0, [x19, #8]
  406cec:	ldrb	w9, [x8]
  406cf0:	cbz	w9, 406da8 <get_addr_1@@Base+0x384>
  406cf4:	cmp	w9, #0x2e
  406cf8:	b.ne	406b00 <get_addr_1@@Base+0xdc>  // b.any
  406cfc:	add	x20, x8, #0x1
  406d00:	add	x1, x29, #0x18
  406d04:	mov	x0, x20
  406d08:	mov	w2, wzr
  406d0c:	bl	404d30 <strtoul@plt>
  406d10:	cmp	x0, #0xff
  406d14:	b.hi	406b00 <get_addr_1@@Base+0xdc>  // b.pmore
  406d18:	ldr	x8, [x29, #24]
  406d1c:	cmp	x8, x20
  406d20:	b.eq	406b00 <get_addr_1@@Base+0xdc>  // b.none
  406d24:	strb	w0, [x19, #9]
  406d28:	ldrb	w9, [x8]
  406d2c:	cbz	w9, 406da8 <get_addr_1@@Base+0x384>
  406d30:	cmp	w9, #0x2e
  406d34:	b.ne	406b00 <get_addr_1@@Base+0xdc>  // b.any
  406d38:	add	x20, x8, #0x1
  406d3c:	add	x1, x29, #0x18
  406d40:	mov	x0, x20
  406d44:	mov	w2, wzr
  406d48:	bl	404d30 <strtoul@plt>
  406d4c:	cmp	x0, #0xff
  406d50:	b.hi	406b00 <get_addr_1@@Base+0xdc>  // b.pmore
  406d54:	ldr	x8, [x29, #24]
  406d58:	cmp	x8, x20
  406d5c:	b.eq	406b00 <get_addr_1@@Base+0xdc>  // b.none
  406d60:	strb	w0, [x19, #10]
  406d64:	ldrb	w9, [x8]
  406d68:	cbz	w9, 406da8 <get_addr_1@@Base+0x384>
  406d6c:	cmp	w9, #0x2e
  406d70:	b.ne	406b00 <get_addr_1@@Base+0xdc>  // b.any
  406d74:	add	x20, x8, #0x1
  406d78:	add	x1, x29, #0x18
  406d7c:	mov	x0, x20
  406d80:	mov	w2, wzr
  406d84:	bl	404d30 <strtoul@plt>
  406d88:	cmp	x0, #0xff
  406d8c:	b.hi	406b00 <get_addr_1@@Base+0xdc>  // b.pmore
  406d90:	ldr	x8, [x29, #24]
  406d94:	cmp	x8, x20
  406d98:	b.eq	406b00 <get_addr_1@@Base+0xdc>  // b.none
  406d9c:	strb	w0, [x19, #11]
  406da0:	ldrb	w8, [x8]
  406da4:	cbnz	w8, 406b00 <get_addr_1@@Base+0xdc>
  406da8:	mov	w8, #0xffff0004            	// #-65532
  406dac:	b	406aec <get_addr_1@@Base+0xc8>

0000000000406db0 <af_bit_len@@Base>:
  406db0:	sub	w8, w0, #0x2
  406db4:	cmp	w8, #0x1a
  406db8:	b.hi	406de0 <af_bit_len@@Base+0x30>  // b.pmore
  406dbc:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  406dc0:	add	x9, x9, #0xeb
  406dc4:	adr	x10, 406dd8 <af_bit_len@@Base+0x28>
  406dc8:	ldrb	w11, [x9, x8]
  406dcc:	add	x10, x10, x11, lsl #2
  406dd0:	mov	w0, #0x80                  	// #128
  406dd4:	br	x10
  406dd8:	mov	w0, #0x20                  	// #32
  406ddc:	ret
  406de0:	mov	w0, wzr
  406de4:	ret
  406de8:	mov	w0, #0x50                  	// #80
  406dec:	ret
  406df0:	mov	w0, #0x10                  	// #16
  406df4:	ret
  406df8:	mov	w0, #0x14                  	// #20
  406dfc:	ret

0000000000406e00 <get_prefix_1@@Base>:
  406e00:	sub	sp, sp, #0x150
  406e04:	stp	x22, x21, [sp, #304]
  406e08:	mov	x22, x1
  406e0c:	stp	x20, x19, [sp, #320]
  406e10:	mov	x19, x0
  406e14:	mov	w1, #0x2f                  	// #47
  406e18:	mov	x0, x22
  406e1c:	stp	x29, x30, [sp, #272]
  406e20:	stp	x28, x23, [sp, #288]
  406e24:	add	x29, sp, #0x110
  406e28:	mov	w21, w2
  406e2c:	mov	w23, #0x2f                  	// #47
  406e30:	bl	4050a0 <strchr@plt>
  406e34:	mov	x20, x0
  406e38:	cbz	x0, 406e60 <get_prefix_1@@Base+0x60>
  406e3c:	mov	x0, x19
  406e40:	mov	x1, x22
  406e44:	mov	w2, w21
  406e48:	strb	wzr, [x20]
  406e4c:	bl	406a24 <get_addr_1@@Base>
  406e50:	mov	w8, w0
  406e54:	strb	w23, [x20]
  406e58:	cbnz	w8, 406fa0 <get_prefix_1@@Base+0x1a0>
  406e5c:	b	406e78 <get_prefix_1@@Base+0x78>
  406e60:	mov	x0, x19
  406e64:	mov	x1, x22
  406e68:	mov	w2, w21
  406e6c:	bl	406a24 <get_addr_1@@Base>
  406e70:	mov	w8, w0
  406e74:	cbnz	w8, 406fa0 <get_prefix_1@@Base+0x1a0>
  406e78:	ldrh	w8, [x19, #6]
  406e7c:	sub	w8, w8, #0x2
  406e80:	cmp	w8, #0x1a
  406e84:	b.hi	406eb4 <get_prefix_1@@Base+0xb4>  // b.pmore
  406e88:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  406e8c:	add	x9, x9, #0x106
  406e90:	adr	x10, 406ea4 <get_prefix_1@@Base+0xa4>
  406e94:	ldrb	w11, [x9, x8]
  406e98:	add	x10, x10, x11, lsl #2
  406e9c:	mov	w21, #0x80                  	// #128
  406ea0:	br	x10
  406ea4:	mov	w21, #0x20                  	// #32
  406ea8:	ldrh	w8, [x19, #4]
  406eac:	cbnz	x20, 406ee0 <get_prefix_1@@Base+0xe0>
  406eb0:	b	406f7c <get_prefix_1@@Base+0x17c>
  406eb4:	mov	w21, wzr
  406eb8:	ldrh	w8, [x19, #4]
  406ebc:	cbnz	x20, 406ee0 <get_prefix_1@@Base+0xe0>
  406ec0:	b	406f7c <get_prefix_1@@Base+0x17c>
  406ec4:	mov	w21, #0x50                  	// #80
  406ec8:	ldrh	w8, [x19, #4]
  406ecc:	cbnz	x20, 406ee0 <get_prefix_1@@Base+0xe0>
  406ed0:	b	406f7c <get_prefix_1@@Base+0x17c>
  406ed4:	mov	w21, #0x10                  	// #16
  406ed8:	ldrh	w8, [x19, #4]
  406edc:	cbz	x20, 406f7c <get_prefix_1@@Base+0x17c>
  406ee0:	mov	w9, #0xfffe                	// #65534
  406ee4:	cmp	w8, w9
  406ee8:	b.eq	406f68 <get_prefix_1@@Base+0x168>  // b.none
  406eec:	ldrb	w8, [x20, #1]!
  406ef0:	cbz	w8, 406f34 <get_prefix_1@@Base+0x134>
  406ef4:	sub	x1, x29, #0x8
  406ef8:	mov	x0, x20
  406efc:	mov	w2, wzr
  406f00:	bl	404d30 <strtoul@plt>
  406f04:	ldur	x8, [x29, #-8]
  406f08:	cbz	x8, 406f34 <get_prefix_1@@Base+0x134>
  406f0c:	cmp	x8, x20
  406f10:	b.eq	406f34 <get_prefix_1@@Base+0x134>  // b.none
  406f14:	lsr	x9, x0, #32
  406f18:	cbnz	x9, 406f34 <get_prefix_1@@Base+0x134>
  406f1c:	ldrb	w8, [x8]
  406f20:	cbnz	w8, 406f34 <get_prefix_1@@Base+0x134>
  406f24:	cmp	w0, w21
  406f28:	cset	w9, ls  // ls = plast
  406f2c:	b.hi	406f68 <get_prefix_1@@Base+0x168>  // b.pmore
  406f30:	b	406f8c <get_prefix_1@@Base+0x18c>
  406f34:	mov	x0, sp
  406f38:	mov	w2, #0x2                   	// #2
  406f3c:	mov	x1, x20
  406f40:	bl	406a24 <get_addr_1@@Base>
  406f44:	cbnz	w0, 406f68 <get_prefix_1@@Base+0x168>
  406f48:	ldrh	w8, [sp, #6]
  406f4c:	cmp	w8, #0x2
  406f50:	b.ne	406f68 <get_prefix_1@@Base+0x168>  // b.any
  406f54:	ldr	w9, [sp, #8]
  406f58:	rev	w8, w9
  406f5c:	neg	w10, w8
  406f60:	bics	wzr, w10, w8
  406f64:	b.eq	406fbc <get_prefix_1@@Base+0x1bc>  // b.none
  406f68:	mov	w8, #0xffffffff            	// #-1
  406f6c:	b	406fa0 <get_prefix_1@@Base+0x1a0>
  406f70:	mov	w21, #0x14                  	// #20
  406f74:	ldrh	w8, [x19, #4]
  406f78:	cbnz	x20, 406ee0 <get_prefix_1@@Base+0xe0>
  406f7c:	mov	w10, #0xfffe                	// #65534
  406f80:	cmp	w8, w10
  406f84:	mov	w9, wzr
  406f88:	csel	w0, wzr, w21, eq  // eq = none
  406f8c:	ldrh	w10, [x19]
  406f90:	mov	w8, wzr
  406f94:	strh	w0, [x19, #4]
  406f98:	orr	w9, w10, w9
  406f9c:	strh	w9, [x19]
  406fa0:	ldp	x20, x19, [sp, #320]
  406fa4:	ldp	x22, x21, [sp, #304]
  406fa8:	ldp	x28, x23, [sp, #288]
  406fac:	ldp	x29, x30, [sp, #272]
  406fb0:	mov	w0, w8
  406fb4:	add	sp, sp, #0x150
  406fb8:	ret
  406fbc:	mov	w0, wzr
  406fc0:	cbz	w9, 406fd4 <get_prefix_1@@Base+0x1d4>
  406fc4:	lsl	w8, w8, #1
  406fc8:	add	w0, w0, #0x1
  406fcc:	cbnz	w8, 406fc4 <get_prefix_1@@Base+0x1c4>
  406fd0:	b	406f24 <get_prefix_1@@Base+0x124>
  406fd4:	mov	w9, #0x1                   	// #1
  406fd8:	b	406f8c <get_prefix_1@@Base+0x18c>

0000000000406fdc <get_addr@@Base>:
  406fdc:	stp	x29, x30, [sp, #-48]!
  406fe0:	str	x21, [sp, #16]
  406fe4:	stp	x20, x19, [sp, #32]
  406fe8:	mov	x29, sp
  406fec:	mov	w20, w2
  406ff0:	mov	x19, x1
  406ff4:	bl	406a24 <get_addr_1@@Base>
  406ff8:	cbnz	w0, 40700c <get_addr@@Base+0x30>
  406ffc:	ldp	x20, x19, [sp, #32]
  407000:	ldr	x21, [sp, #16]
  407004:	ldp	x29, x30, [sp], #48
  407008:	ret
  40700c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  407010:	ldr	x8, [x8, #3992]
  407014:	mov	w0, w20
  407018:	ldr	x21, [x8]
  40701c:	bl	407040 <get_addr@@Base+0x64>
  407020:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407024:	mov	x2, x0
  407028:	add	x1, x1, #0x271
  40702c:	mov	x0, x21
  407030:	mov	x3, x19
  407034:	bl	405240 <fprintf@plt>
  407038:	mov	w0, #0x1                   	// #1
  40703c:	bl	404d50 <exit@plt>
  407040:	cmp	w0, #0x1c
  407044:	b.hi	407078 <get_addr@@Base+0x9c>  // b.pmore
  407048:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  40704c:	mov	w8, w0
  407050:	add	x9, x9, #0x121
  407054:	adr	x10, 40706c <get_addr@@Base+0x90>
  407058:	ldrb	w11, [x9, x8]
  40705c:	add	x10, x10, x11, lsl #2
  407060:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407064:	add	x0, x0, #0x5e7
  407068:	br	x10
  40706c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407070:	add	x0, x0, #0x4c5
  407074:	ret
  407078:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40707c:	add	x0, x0, #0x4c1
  407080:	ret
  407084:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407088:	add	x0, x0, #0x4d0
  40708c:	ret
  407090:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407094:	add	x0, x0, #0x4d9
  407098:	ret
  40709c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  4070a0:	add	x0, x0, #0xb91
  4070a4:	ret
  4070a8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  4070ac:	add	x0, x0, #0x4d4
  4070b0:	ret
  4070b4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  4070b8:	add	x0, x0, #0x4ca
  4070bc:	ret

00000000004070c0 <get_addr_rta@@Base>:
  4070c0:	ldrh	w8, [x1], #4
  4070c4:	sub	w8, w8, #0x6
  4070c8:	ror	w9, w8, #1
  4070cc:	cmp	w9, #0x7
  4070d0:	mov	w8, #0xffffffff            	// #-1
  4070d4:	b.hi	407208 <get_addr_rta@@Base+0x148>  // b.pmore
  4070d8:	adrp	x10, 40e000 <_IO_stdin_used@@Base+0x428>
  4070dc:	add	x10, x10, #0x13e
  4070e0:	adr	x11, 4070f0 <get_addr_rta@@Base+0x30>
  4070e4:	ldrb	w12, [x10, x9]
  4070e8:	add	x11, x11, x12, lsl #2
  4070ec:	br	x11
  4070f0:	mov	w8, #0xc                   	// #12
  4070f4:	mov	w9, #0x2                   	// #2
  4070f8:	strh	w8, [x0, #6]
  4070fc:	strh	w9, [x0, #2]
  407100:	ldrh	w9, [x1]
  407104:	strh	w9, [x0, #8]
  407108:	cbnz	w2, 407174 <get_addr_rta@@Base+0xb4>
  40710c:	b	407184 <get_addr_rta@@Base+0xc4>
  407110:	mov	w8, #0x2                   	// #2
  407114:	mov	w9, #0x4                   	// #4
  407118:	strh	w8, [x0, #6]
  40711c:	strh	w9, [x0, #2]
  407120:	ldr	w9, [x1]
  407124:	str	w9, [x0, #8]
  407128:	cbnz	w2, 407174 <get_addr_rta@@Base+0xb4>
  40712c:	b	407184 <get_addr_rta@@Base+0xc4>
  407130:	mov	w8, #0x4                   	// #4
  407134:	mov	w9, #0xa                   	// #10
  407138:	strh	w8, [x0, #6]
  40713c:	strh	w9, [x0, #2]
  407140:	ldrh	w9, [x1, #8]
  407144:	ldr	x10, [x1]
  407148:	strh	w9, [x0, #16]
  40714c:	str	x10, [x0, #8]
  407150:	cbnz	w2, 407174 <get_addr_rta@@Base+0xb4>
  407154:	b	407184 <get_addr_rta@@Base+0xc4>
  407158:	mov	w8, #0xa                   	// #10
  40715c:	mov	w9, #0x10                  	// #16
  407160:	strh	w8, [x0, #6]
  407164:	strh	w9, [x0, #2]
  407168:	ldr	q0, [x1]
  40716c:	stur	q0, [x0, #8]
  407170:	cbz	w2, 407184 <get_addr_rta@@Base+0xc4>
  407174:	cmp	w8, w2
  407178:	b.eq	407184 <get_addr_rta@@Base+0xc4>  // b.none
  40717c:	mov	w0, #0xfffffffe            	// #-2
  407180:	ret
  407184:	mov	w9, #0xffff                	// #65535
  407188:	cmp	w8, #0xa
  40718c:	strh	w9, [x0, #4]
  407190:	strh	wzr, [x0]
  407194:	b.eq	4071bc <get_addr_rta@@Base+0xfc>  // b.none
  407198:	cmp	w8, #0x2
  40719c:	mov	w8, wzr
  4071a0:	b.ne	407208 <get_addr_rta@@Base+0x148>  // b.any
  4071a4:	ldr	w8, [x0, #8]
  4071a8:	cbz	w8, 407200 <get_addr_rta@@Base+0x140>
  4071ac:	and	w8, w8, #0xf0
  4071b0:	cmp	w8, #0xe0
  4071b4:	b.eq	4071d0 <get_addr_rta@@Base+0x110>  // b.none
  4071b8:	b	4071f4 <get_addr_rta@@Base+0x134>
  4071bc:	ldr	w8, [x0, #8]
  4071c0:	cbz	w8, 4071dc <get_addr_rta@@Base+0x11c>
  4071c4:	mvn	w8, w8
  4071c8:	tst	w8, #0xff
  4071cc:	b.ne	4071f4 <get_addr_rta@@Base+0x134>  // b.any
  4071d0:	mov	w8, wzr
  4071d4:	mov	w9, #0xa                   	// #10
  4071d8:	b	407204 <get_addr_rta@@Base+0x144>
  4071dc:	ldr	w8, [x0, #12]
  4071e0:	cbnz	w8, 4071f4 <get_addr_rta@@Base+0x134>
  4071e4:	ldr	w8, [x0, #16]
  4071e8:	cbnz	w8, 4071f4 <get_addr_rta@@Base+0x134>
  4071ec:	ldr	w8, [x0, #20]
  4071f0:	cbz	w8, 407200 <get_addr_rta@@Base+0x140>
  4071f4:	mov	w8, wzr
  4071f8:	mov	w9, #0x2                   	// #2
  4071fc:	b	407204 <get_addr_rta@@Base+0x144>
  407200:	mov	w9, #0x6                   	// #6
  407204:	strh	w9, [x0]
  407208:	mov	w0, w8
  40720c:	ret

0000000000407210 <get_prefix@@Base>:
  407210:	stp	x29, x30, [sp, #-48]!
  407214:	stp	x20, x19, [sp, #32]
  407218:	mov	x19, x1
  40721c:	cmp	w2, #0x11
  407220:	str	x21, [sp, #16]
  407224:	mov	x29, sp
  407228:	b.eq	40724c <get_prefix@@Base+0x3c>  // b.none
  40722c:	mov	x1, x19
  407230:	mov	w20, w2
  407234:	bl	406e00 <get_prefix_1@@Base>
  407238:	cbnz	w0, 407270 <get_prefix@@Base+0x60>
  40723c:	ldp	x20, x19, [sp, #32]
  407240:	ldr	x21, [sp, #16]
  407244:	ldp	x29, x30, [sp], #48
  407248:	ret
  40724c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  407250:	ldr	x8, [x8, #3992]
  407254:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407258:	add	x1, x1, #0x2a2
  40725c:	mov	x2, x19
  407260:	ldr	x0, [x8]
  407264:	bl	405240 <fprintf@plt>
  407268:	mov	w0, #0x1                   	// #1
  40726c:	bl	404d50 <exit@plt>
  407270:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  407274:	ldr	x8, [x8, #3992]
  407278:	mov	w0, w20
  40727c:	ldr	x21, [x8]
  407280:	bl	407040 <get_addr@@Base+0x64>
  407284:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407288:	mov	x2, x0
  40728c:	add	x1, x1, #0x2ea
  407290:	mov	x0, x21
  407294:	mov	x3, x19
  407298:	bl	405240 <fprintf@plt>
  40729c:	mov	w0, #0x1                   	// #1
  4072a0:	bl	404d50 <exit@plt>

00000000004072a4 <get_addr32@@Base>:
  4072a4:	sub	sp, sp, #0x130
  4072a8:	stp	x28, x19, [sp, #288]
  4072ac:	mov	x19, x0
  4072b0:	add	x0, sp, #0x8
  4072b4:	mov	w2, #0x2                   	// #2
  4072b8:	mov	x1, x19
  4072bc:	stp	x29, x30, [sp, #272]
  4072c0:	add	x29, sp, #0x110
  4072c4:	bl	406a24 <get_addr_1@@Base>
  4072c8:	cbnz	w0, 4072e0 <get_addr32@@Base+0x3c>
  4072cc:	ldr	w0, [sp, #16]
  4072d0:	ldp	x28, x19, [sp, #288]
  4072d4:	ldp	x29, x30, [sp, #272]
  4072d8:	add	sp, sp, #0x130
  4072dc:	ret
  4072e0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  4072e4:	ldr	x8, [x8, #3992]
  4072e8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4072ec:	add	x1, x1, #0x31a
  4072f0:	mov	x2, x19
  4072f4:	ldr	x0, [x8]
  4072f8:	bl	405240 <fprintf@plt>
  4072fc:	mov	w0, #0x1                   	// #1
  407300:	bl	404d50 <exit@plt>

0000000000407304 <incomplete_command@@Base>:
  407304:	stp	x29, x30, [sp, #-16]!
  407308:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40730c:	ldr	x8, [x8, #3992]
  407310:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407314:	add	x0, x0, #0x34d
  407318:	mov	w1, #0x30                  	// #48
  40731c:	ldr	x3, [x8]
  407320:	mov	w2, #0x1                   	// #1
  407324:	mov	x29, sp
  407328:	bl	4050c0 <fwrite@plt>
  40732c:	mov	w0, #0xffffffff            	// #-1
  407330:	bl	404d50 <exit@plt>

0000000000407334 <missarg@@Base>:
  407334:	stp	x29, x30, [sp, #-16]!
  407338:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40733c:	ldr	x8, [x8, #3992]
  407340:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407344:	mov	x2, x0
  407348:	add	x1, x1, #0x37e
  40734c:	ldr	x8, [x8]
  407350:	mov	x29, sp
  407354:	mov	x0, x8
  407358:	bl	405240 <fprintf@plt>
  40735c:	mov	w0, #0xffffffff            	// #-1
  407360:	bl	404d50 <exit@plt>

0000000000407364 <invarg@@Base>:
  407364:	stp	x29, x30, [sp, #-16]!
  407368:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40736c:	ldr	x8, [x8, #3992]
  407370:	mov	x2, x1
  407374:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407378:	mov	x3, x0
  40737c:	ldr	x8, [x8]
  407380:	add	x1, x1, #0x3a0
  407384:	mov	x29, sp
  407388:	mov	x0, x8
  40738c:	bl	405240 <fprintf@plt>
  407390:	mov	w0, #0xffffffff            	// #-1
  407394:	bl	404d50 <exit@plt>

0000000000407398 <duparg@@Base>:
  407398:	stp	x29, x30, [sp, #-16]!
  40739c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  4073a0:	ldr	x8, [x8, #3992]
  4073a4:	mov	x3, x1
  4073a8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4073ac:	mov	x2, x0
  4073b0:	ldr	x8, [x8]
  4073b4:	add	x1, x1, #0x3c3
  4073b8:	mov	x29, sp
  4073bc:	mov	x0, x8
  4073c0:	bl	405240 <fprintf@plt>
  4073c4:	mov	w0, #0xffffffff            	// #-1
  4073c8:	bl	404d50 <exit@plt>

00000000004073cc <duparg2@@Base>:
  4073cc:	stp	x29, x30, [sp, #-16]!
  4073d0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  4073d4:	ldr	x8, [x8, #3992]
  4073d8:	mov	x3, x1
  4073dc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4073e0:	mov	x2, x0
  4073e4:	ldr	x8, [x8]
  4073e8:	add	x1, x1, #0x3f5
  4073ec:	mov	x29, sp
  4073f0:	mov	x0, x8
  4073f4:	bl	405240 <fprintf@plt>
  4073f8:	mov	w0, #0xffffffff            	// #-1
  4073fc:	bl	404d50 <exit@plt>

0000000000407400 <nodev@@Base>:
  407400:	stp	x29, x30, [sp, #-16]!
  407404:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  407408:	ldr	x8, [x8, #3992]
  40740c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407410:	mov	x2, x0
  407414:	add	x1, x1, #0x42d
  407418:	ldr	x8, [x8]
  40741c:	mov	x29, sp
  407420:	mov	x0, x8
  407424:	bl	405240 <fprintf@plt>
  407428:	mov	w0, #0xffffffff            	// #-1
  40742c:	ldp	x29, x30, [sp], #16
  407430:	ret

0000000000407434 <check_ifname@@Base>:
  407434:	stp	x29, x30, [sp, #-32]!
  407438:	stp	x20, x19, [sp, #16]
  40743c:	mov	x29, sp
  407440:	mov	x19, x0
  407444:	bl	404d40 <strlen@plt>
  407448:	cmp	x0, #0xf
  40744c:	b.hi	407494 <check_ifname@@Base+0x60>  // b.pmore
  407450:	ldrb	w20, [x19]
  407454:	cbz	w20, 407494 <check_ifname@@Base+0x60>
  407458:	add	x19, x19, #0x1
  40745c:	ands	w8, w20, #0xff
  407460:	b.eq	40748c <check_ifname@@Base+0x58>  // b.none
  407464:	cmp	w8, #0x2f
  407468:	b.eq	407494 <check_ifname@@Base+0x60>  // b.none
  40746c:	bl	405010 <__ctype_b_loc@plt>
  407470:	ldr	x8, [x0]
  407474:	and	x9, x20, #0xff
  407478:	ldrh	w8, [x8, x9, lsl #1]
  40747c:	tbnz	w8, #13, 407494 <check_ifname@@Base+0x60>
  407480:	ldrb	w20, [x19], #1
  407484:	ands	w8, w20, #0xff
  407488:	b.ne	407464 <check_ifname@@Base+0x30>  // b.any
  40748c:	mov	w0, wzr
  407490:	b	407498 <check_ifname@@Base+0x64>
  407494:	mov	w0, #0xffffffff            	// #-1
  407498:	ldp	x20, x19, [sp, #16]
  40749c:	ldp	x29, x30, [sp], #32
  4074a0:	ret

00000000004074a4 <check_altifname@@Base>:
  4074a4:	stp	x29, x30, [sp, #-32]!
  4074a8:	stp	x20, x19, [sp, #16]
  4074ac:	ldrb	w20, [x0]
  4074b0:	mov	x29, sp
  4074b4:	cbz	w20, 4074f4 <check_altifname@@Base+0x50>
  4074b8:	add	x19, x0, #0x1
  4074bc:	ands	w8, w20, #0xff
  4074c0:	b.eq	4074ec <check_altifname@@Base+0x48>  // b.none
  4074c4:	cmp	w8, #0x2f
  4074c8:	b.eq	4074f4 <check_altifname@@Base+0x50>  // b.none
  4074cc:	bl	405010 <__ctype_b_loc@plt>
  4074d0:	ldr	x8, [x0]
  4074d4:	and	x9, x20, #0xff
  4074d8:	ldrh	w8, [x8, x9, lsl #1]
  4074dc:	tbnz	w8, #13, 4074f4 <check_altifname@@Base+0x50>
  4074e0:	ldrb	w20, [x19], #1
  4074e4:	ands	w8, w20, #0xff
  4074e8:	b.ne	4074c4 <check_altifname@@Base+0x20>  // b.any
  4074ec:	mov	w0, wzr
  4074f0:	b	4074f8 <check_altifname@@Base+0x54>
  4074f4:	mov	w0, #0xffffffff            	// #-1
  4074f8:	ldp	x20, x19, [sp, #16]
  4074fc:	ldp	x29, x30, [sp], #32
  407500:	ret

0000000000407504 <get_ifname@@Base>:
  407504:	stp	x29, x30, [sp, #-48]!
  407508:	stp	x20, x19, [sp, #32]
  40750c:	mov	x20, x0
  407510:	mov	x0, x1
  407514:	stp	x22, x21, [sp, #16]
  407518:	mov	x29, sp
  40751c:	mov	x19, x1
  407520:	bl	404d40 <strlen@plt>
  407524:	cmp	x0, #0xf
  407528:	b.hi	407584 <get_ifname@@Base+0x80>  // b.pmore
  40752c:	ldrb	w22, [x19]
  407530:	cbz	w22, 407584 <get_ifname@@Base+0x80>
  407534:	mov	w21, #0x1                   	// #1
  407538:	ands	w8, w22, #0xff
  40753c:	b.eq	40756c <get_ifname@@Base+0x68>  // b.none
  407540:	cmp	w8, #0x2f
  407544:	b.eq	407584 <get_ifname@@Base+0x80>  // b.none
  407548:	bl	405010 <__ctype_b_loc@plt>
  40754c:	ldr	x8, [x0]
  407550:	and	x9, x22, #0xff
  407554:	ldrh	w8, [x8, x9, lsl #1]
  407558:	tbnz	w8, #13, 407584 <get_ifname@@Base+0x80>
  40755c:	ldrb	w22, [x19, x21]
  407560:	add	x21, x21, #0x1
  407564:	ands	w8, w22, #0xff
  407568:	b.ne	407540 <get_ifname@@Base+0x3c>  // b.any
  40756c:	mov	w2, #0x10                  	// #16
  407570:	mov	x0, x20
  407574:	mov	x1, x19
  407578:	bl	4051a0 <strncpy@plt>
  40757c:	mov	w0, wzr
  407580:	b	407588 <get_ifname@@Base+0x84>
  407584:	mov	w0, #0xffffffff            	// #-1
  407588:	ldp	x20, x19, [sp, #32]
  40758c:	ldp	x22, x21, [sp, #16]
  407590:	ldp	x29, x30, [sp], #48
  407594:	ret

0000000000407598 <get_ifname_rta@@Base>:
  407598:	stp	x29, x30, [sp, #-48]!
  40759c:	str	x21, [sp, #16]
  4075a0:	stp	x20, x19, [sp, #32]
  4075a4:	mov	x29, sp
  4075a8:	cbz	x1, 40761c <get_ifname_rta@@Base+0x84>
  4075ac:	add	x19, x1, #0x4
  4075b0:	mov	x0, x19
  4075b4:	bl	404d40 <strlen@plt>
  4075b8:	cmp	x0, #0xf
  4075bc:	b.hi	407604 <get_ifname_rta@@Base+0x6c>  // b.pmore
  4075c0:	ldrb	w21, [x19]
  4075c4:	cbz	w21, 407604 <get_ifname_rta@@Base+0x6c>
  4075c8:	mov	w20, #0x1                   	// #1
  4075cc:	ands	w8, w21, #0xff
  4075d0:	b.eq	407608 <get_ifname_rta@@Base+0x70>  // b.none
  4075d4:	cmp	w8, #0x2f
  4075d8:	b.eq	407604 <get_ifname_rta@@Base+0x6c>  // b.none
  4075dc:	bl	405010 <__ctype_b_loc@plt>
  4075e0:	ldr	x8, [x0]
  4075e4:	and	x9, x21, #0xff
  4075e8:	ldrh	w8, [x8, x9, lsl #1]
  4075ec:	tbnz	w8, #13, 407604 <get_ifname_rta@@Base+0x6c>
  4075f0:	ldrb	w21, [x19, x20]
  4075f4:	add	x20, x20, #0x1
  4075f8:	ands	w8, w21, #0xff
  4075fc:	b.ne	4075d4 <get_ifname_rta@@Base+0x3c>  // b.any
  407600:	b	407608 <get_ifname_rta@@Base+0x70>
  407604:	mov	x19, xzr
  407608:	mov	x0, x19
  40760c:	ldp	x20, x19, [sp, #32]
  407610:	ldr	x21, [sp, #16]
  407614:	ldp	x29, x30, [sp], #48
  407618:	ret
  40761c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  407620:	ldr	x8, [x8, #3992]
  407624:	mov	w19, w0
  407628:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40762c:	add	x1, x1, #0x446
  407630:	ldr	x0, [x8]
  407634:	mov	w2, w19
  407638:	bl	405240 <fprintf@plt>
  40763c:	mov	w0, w19
  407640:	bl	4095a0 <ll_idx_n2a@@Base>
  407644:	mov	x19, x0
  407648:	b	4075b0 <get_ifname_rta@@Base+0x18>

000000000040764c <matches@@Base>:
  40764c:	ldrb	w9, [x0]
  407650:	cbz	w9, 407694 <matches@@Base+0x48>
  407654:	ldrb	w10, [x1]
  407658:	mov	x8, x0
  40765c:	mov	w0, #0x1                   	// #1
  407660:	cbz	w10, 407690 <matches@@Base+0x44>
  407664:	cmp	w9, w10
  407668:	b.ne	407690 <matches@@Base+0x44>  // b.any
  40766c:	add	x8, x8, #0x1
  407670:	add	x9, x1, #0x1
  407674:	ldrb	w11, [x9], #1
  407678:	ldrb	w10, [x8], #1
  40767c:	cbz	w11, 407688 <matches@@Base+0x3c>
  407680:	cmp	w10, w11
  407684:	b.eq	407674 <matches@@Base+0x28>  // b.none
  407688:	cmp	w10, #0x0
  40768c:	cset	w0, ne  // ne = any
  407690:	ret
  407694:	mov	w0, #0x1                   	// #1
  407698:	ret

000000000040769c <inet_addr_match@@Base>:
  40769c:	stp	x29, x30, [sp, #-48]!
  4076a0:	stp	x22, x21, [sp, #16]
  4076a4:	stp	x20, x19, [sp, #32]
  4076a8:	mov	w21, w2
  4076ac:	mov	x19, x1
  4076b0:	asr	w22, w2, #5
  4076b4:	mov	x20, x0
  4076b8:	mov	x29, sp
  4076bc:	cbz	w22, 4076e0 <inet_addr_match@@Base+0x44>
  4076c0:	lsl	w8, w22, #2
  4076c4:	add	x1, x19, #0x8
  4076c8:	add	x0, x20, #0x8
  4076cc:	sxtw	x2, w8
  4076d0:	bl	404f40 <bcmp@plt>
  4076d4:	cbz	w0, 4076e0 <inet_addr_match@@Base+0x44>
  4076d8:	mov	w0, #0xffffffff            	// #-1
  4076dc:	b	407724 <inet_addr_match@@Base+0x88>
  4076e0:	and	w8, w21, #0x1f
  4076e4:	cbz	w8, 407720 <inet_addr_match@@Base+0x84>
  4076e8:	sbfiz	x9, x22, #2, #32
  4076ec:	add	x10, x20, x9
  4076f0:	add	x9, x19, x9
  4076f4:	ldr	w10, [x10, #8]
  4076f8:	ldr	w9, [x9, #8]
  4076fc:	neg	w8, w8
  407700:	mov	w11, #0xffffffff            	// #-1
  407704:	lsl	w8, w11, w8
  407708:	rev	w8, w8
  40770c:	eor	w9, w9, w10
  407710:	tst	w9, w8
  407714:	b.eq	407720 <inet_addr_match@@Base+0x84>  // b.none
  407718:	mov	w0, #0x1                   	// #1
  40771c:	b	407724 <inet_addr_match@@Base+0x88>
  407720:	mov	w0, wzr
  407724:	ldp	x20, x19, [sp, #32]
  407728:	ldp	x22, x21, [sp, #16]
  40772c:	ldp	x29, x30, [sp], #48
  407730:	ret

0000000000407734 <inet_addr_match_rta@@Base>:
  407734:	sub	sp, sp, #0x140
  407738:	stp	x29, x30, [sp, #272]
  40773c:	stp	x28, x21, [sp, #288]
  407740:	stp	x20, x19, [sp, #304]
  407744:	add	x29, sp, #0x110
  407748:	cbz	x1, 407918 <inet_addr_match_rta@@Base+0x1e4>
  40774c:	ldrh	w8, [x0, #6]
  407750:	mov	x19, x0
  407754:	cbz	w8, 407918 <inet_addr_match_rta@@Base+0x1e4>
  407758:	ldrsh	w20, [x19, #4]
  40775c:	cmp	w20, #0x1
  407760:	b.lt	407918 <inet_addr_match_rta@@Base+0x1e4>  // b.tstop
  407764:	ldrh	w9, [x1], #4
  407768:	mov	w0, #0xffffffff            	// #-1
  40776c:	sub	w9, w9, #0x6
  407770:	ror	w9, w9, #1
  407774:	cmp	w9, #0x7
  407778:	b.hi	40791c <inet_addr_match_rta@@Base+0x1e8>  // b.pmore
  40777c:	adrp	x10, 40e000 <_IO_stdin_used@@Base+0x428>
  407780:	add	x10, x10, #0x146
  407784:	adr	x11, 407794 <inet_addr_match_rta@@Base+0x60>
  407788:	ldrb	w12, [x10, x9]
  40778c:	add	x11, x11, x12, lsl #2
  407790:	br	x11
  407794:	mov	w9, #0xc                   	// #12
  407798:	mov	w10, #0x2                   	// #2
  40779c:	strh	w9, [sp, #14]
  4077a0:	strh	w10, [sp, #10]
  4077a4:	ldrh	w10, [x1]
  4077a8:	strh	w10, [sp, #16]
  4077ac:	cmp	w9, w8
  4077b0:	b.ne	4078c8 <inet_addr_match_rta@@Base+0x194>  // b.any
  4077b4:	b	407828 <inet_addr_match_rta@@Base+0xf4>
  4077b8:	mov	w9, #0x2                   	// #2
  4077bc:	mov	w10, #0x4                   	// #4
  4077c0:	strh	w9, [sp, #14]
  4077c4:	strh	w10, [sp, #10]
  4077c8:	ldr	w10, [x1]
  4077cc:	str	w10, [sp, #16]
  4077d0:	cmp	w9, w8
  4077d4:	b.ne	4078c8 <inet_addr_match_rta@@Base+0x194>  // b.any
  4077d8:	b	407828 <inet_addr_match_rta@@Base+0xf4>
  4077dc:	mov	w9, #0x4                   	// #4
  4077e0:	mov	w10, #0xa                   	// #10
  4077e4:	strh	w9, [sp, #14]
  4077e8:	strh	w10, [sp, #10]
  4077ec:	ldrh	w10, [x1, #8]
  4077f0:	ldr	x11, [x1]
  4077f4:	strh	w10, [sp, #24]
  4077f8:	str	x11, [sp, #16]
  4077fc:	cmp	w9, w8
  407800:	b.eq	407828 <inet_addr_match_rta@@Base+0xf4>  // b.none
  407804:	b	4078c8 <inet_addr_match_rta@@Base+0x194>
  407808:	mov	w9, #0xa                   	// #10
  40780c:	mov	w10, #0x10                  	// #16
  407810:	strh	w9, [sp, #14]
  407814:	strh	w10, [sp, #10]
  407818:	ldr	q0, [x1]
  40781c:	stur	q0, [sp, #16]
  407820:	cmp	w9, w8
  407824:	b.ne	4078c8 <inet_addr_match_rta@@Base+0x194>  // b.any
  407828:	and	w8, w8, #0xf
  40782c:	and	x9, x20, #0xffff
  407830:	mov	w10, #0xffff                	// #65535
  407834:	cmp	w8, #0xa
  407838:	strh	w10, [sp, #12]
  40783c:	strh	wzr, [sp, #8]
  407840:	b.eq	407864 <inet_addr_match_rta@@Base+0x130>  // b.none
  407844:	cmp	w8, #0x2
  407848:	b.ne	4078a8 <inet_addr_match_rta@@Base+0x174>  // b.any
  40784c:	ldr	w8, [sp, #16]
  407850:	cbz	w8, 4078a0 <inet_addr_match_rta@@Base+0x16c>
  407854:	and	w8, w8, #0xf0
  407858:	cmp	w8, #0xe0
  40785c:	b.eq	407878 <inet_addr_match_rta@@Base+0x144>  // b.none
  407860:	b	407898 <inet_addr_match_rta@@Base+0x164>
  407864:	ldr	w8, [sp, #16]
  407868:	cbz	w8, 407880 <inet_addr_match_rta@@Base+0x14c>
  40786c:	mvn	w8, w8
  407870:	tst	w8, #0xff
  407874:	b.ne	407898 <inet_addr_match_rta@@Base+0x164>  // b.any
  407878:	mov	w8, #0xa                   	// #10
  40787c:	b	4078a4 <inet_addr_match_rta@@Base+0x170>
  407880:	ldr	w8, [sp, #20]
  407884:	cbnz	w8, 407898 <inet_addr_match_rta@@Base+0x164>
  407888:	ldr	w8, [sp, #24]
  40788c:	cbnz	w8, 407898 <inet_addr_match_rta@@Base+0x164>
  407890:	ldr	w8, [sp, #28]
  407894:	cbz	w8, 4078a0 <inet_addr_match_rta@@Base+0x16c>
  407898:	mov	w8, #0x2                   	// #2
  40789c:	b	4078a4 <inet_addr_match_rta@@Base+0x170>
  4078a0:	mov	w8, #0x6                   	// #6
  4078a4:	strh	w8, [sp, #8]
  4078a8:	lsr	x21, x9, #5
  4078ac:	cbz	w21, 4078d0 <inet_addr_match_rta@@Base+0x19c>
  4078b0:	add	x8, sp, #0x8
  4078b4:	add	x1, x19, #0x8
  4078b8:	add	x0, x8, #0x8
  4078bc:	lsl	x2, x21, #2
  4078c0:	bl	404f40 <bcmp@plt>
  4078c4:	cbz	w0, 4078d0 <inet_addr_match_rta@@Base+0x19c>
  4078c8:	mov	w0, #0xffffffff            	// #-1
  4078cc:	b	40791c <inet_addr_match_rta@@Base+0x1e8>
  4078d0:	and	w8, w20, #0xffff
  4078d4:	and	w8, w8, #0x1f
  4078d8:	cbz	w8, 407918 <inet_addr_match_rta@@Base+0x1e4>
  4078dc:	lsl	x9, x21, #2
  4078e0:	add	x10, sp, #0x8
  4078e4:	add	x10, x10, x9
  4078e8:	add	x9, x19, x9
  4078ec:	ldr	w10, [x10, #8]
  4078f0:	ldr	w9, [x9, #8]
  4078f4:	neg	w8, w8
  4078f8:	mov	w11, #0xffffffff            	// #-1
  4078fc:	lsl	w8, w11, w8
  407900:	rev	w8, w8
  407904:	eor	w9, w9, w10
  407908:	tst	w9, w8
  40790c:	b.eq	407918 <inet_addr_match_rta@@Base+0x1e4>  // b.none
  407910:	mov	w0, #0x1                   	// #1
  407914:	b	40791c <inet_addr_match_rta@@Base+0x1e8>
  407918:	mov	w0, wzr
  40791c:	ldp	x20, x19, [sp, #304]
  407920:	ldp	x28, x21, [sp, #288]
  407924:	ldp	x29, x30, [sp, #272]
  407928:	add	sp, sp, #0x140
  40792c:	ret

0000000000407930 <__get_hz@@Base>:
  407930:	stp	x29, x30, [sp, #-64]!
  407934:	str	x28, [sp, #16]
  407938:	stp	x22, x21, [sp, #32]
  40793c:	stp	x20, x19, [sp, #48]
  407940:	mov	x29, sp
  407944:	sub	sp, sp, #0x400
  407948:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40794c:	add	x0, x0, #0x472
  407950:	bl	405200 <getenv@plt>
  407954:	cbz	x0, 407974 <__get_hz@@Base+0x44>
  407958:	mov	w2, #0xa                   	// #10
  40795c:	mov	x1, xzr
  407960:	bl	405020 <strtol@plt>
  407964:	cmp	w0, #0x0
  407968:	mov	w8, #0x64                  	// #100
  40796c:	csel	w19, w8, w0, eq  // eq = none
  407970:	b	407a18 <__get_hz@@Base+0xe8>
  407974:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407978:	add	x0, x0, #0x475
  40797c:	bl	405200 <getenv@plt>
  407980:	cbz	x0, 407994 <__get_hz@@Base+0x64>
  407984:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  407988:	mov	x3, x0
  40798c:	add	x2, x2, #0x24f
  407990:	b	4079b0 <__get_hz@@Base+0x80>
  407994:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407998:	add	x0, x0, #0x485
  40799c:	bl	405200 <getenv@plt>
  4079a0:	cbz	x0, 407a34 <__get_hz@@Base+0x104>
  4079a4:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  4079a8:	mov	x3, x0
  4079ac:	add	x2, x2, #0x48f
  4079b0:	mov	x0, sp
  4079b4:	mov	w1, #0x3ff                 	// #1023
  4079b8:	bl	404e30 <snprintf@plt>
  4079bc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4079c0:	add	x1, x1, #0x803
  4079c4:	mov	x0, sp
  4079c8:	bl	405100 <fopen64@plt>
  4079cc:	cbz	x0, 407a14 <__get_hz@@Base+0xe4>
  4079d0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4079d4:	add	x1, x1, #0x4ae
  4079d8:	add	x2, x29, #0x1c
  4079dc:	add	x3, x29, #0x18
  4079e0:	mov	x20, x0
  4079e4:	bl	404eb0 <__isoc99_fscanf@plt>
  4079e8:	ldp	w19, w22, [x29, #24]
  4079ec:	mov	w21, w0
  4079f0:	mov	x0, x20
  4079f4:	bl	404e60 <fclose@plt>
  4079f8:	cmp	w21, #0x2
  4079fc:	b.ne	407a14 <__get_hz@@Base+0xe4>  // b.any
  407a00:	mov	w8, #0x4240                	// #16960
  407a04:	movk	w8, #0xf, lsl #16
  407a08:	cmp	w22, w8
  407a0c:	b.ne	407a14 <__get_hz@@Base+0xe4>  // b.any
  407a10:	cbnz	w19, 407a18 <__get_hz@@Base+0xe8>
  407a14:	mov	w19, #0x64                  	// #100
  407a18:	mov	w0, w19
  407a1c:	add	sp, sp, #0x400
  407a20:	ldp	x20, x19, [sp, #48]
  407a24:	ldp	x22, x21, [sp, #32]
  407a28:	ldr	x28, [sp, #16]
  407a2c:	ldp	x29, x30, [sp], #64
  407a30:	ret
  407a34:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x428>
  407a38:	add	x8, x8, #0x49d
  407a3c:	ldr	q0, [x8]
  407a40:	strb	wzr, [sp, #16]
  407a44:	str	q0, [sp]
  407a48:	b	4079bc <__get_hz@@Base+0x8c>

0000000000407a4c <__get_user_hz@@Base>:
  407a4c:	stp	x29, x30, [sp, #-16]!
  407a50:	mov	w0, #0x2                   	// #2
  407a54:	mov	x29, sp
  407a58:	bl	405130 <sysconf@plt>
  407a5c:	ldp	x29, x30, [sp], #16
  407a60:	ret

0000000000407a64 <rt_addr_n2a_r@@Base>:
  407a64:	sub	w9, w0, #0x2
  407a68:	cmp	w9, #0x1a
  407a6c:	b.hi	407abc <rt_addr_n2a_r@@Base+0x58>  // b.pmore
  407a70:	adrp	x10, 40e000 <_IO_stdin_used@@Base+0x428>
  407a74:	add	x10, x10, #0x14e
  407a78:	adr	x11, 407a8c <rt_addr_n2a_r@@Base+0x28>
  407a7c:	ldrb	w12, [x10, x9]
  407a80:	add	x11, x11, x12, lsl #2
  407a84:	mov	x8, x2
  407a88:	br	x11
  407a8c:	mov	x1, x8
  407a90:	mov	x2, x3
  407a94:	mov	w3, w4
  407a98:	b	405260 <inet_ntop@plt>
  407a9c:	ldrh	w9, [x8]
  407aa0:	cmp	w9, #0xa
  407aa4:	b.eq	407aec <rt_addr_n2a_r@@Base+0x88>  // b.none
  407aa8:	cmp	w9, #0x2
  407aac:	b.ne	407abc <rt_addr_n2a_r@@Base+0x58>  // b.any
  407ab0:	add	x1, x8, #0x4
  407ab4:	mov	w0, #0x2                   	// #2
  407ab8:	b	407a90 <rt_addr_n2a_r@@Base+0x2c>
  407abc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407ac0:	add	x0, x0, #0x4c1
  407ac4:	ret
  407ac8:	mov	w2, #0xffff                	// #65535
  407acc:	mov	x0, x8
  407ad0:	b	409b00 <ll_addr_n2a@@Base>
  407ad4:	sxtw	x9, w4
  407ad8:	mov	w0, #0x1c                  	// #28
  407adc:	mov	x1, x8
  407ae0:	mov	x2, x3
  407ae4:	mov	x3, x9
  407ae8:	b	40a9b8 <mpls_ntop@@Base>
  407aec:	add	x1, x8, #0x8
  407af0:	mov	w0, #0xa                   	// #10
  407af4:	b	407a90 <rt_addr_n2a_r@@Base+0x2c>

0000000000407af8 <rt_addr_n2a@@Base>:
  407af8:	adrp	x3, 41f000 <memcpy@GLIBC_2.17>
  407afc:	add	x3, x3, #0x328
  407b00:	mov	w4, #0x100                 	// #256
  407b04:	b	407a64 <rt_addr_n2a_r@@Base>

0000000000407b08 <read_family@@Base>:
  407b08:	stp	x29, x30, [sp, #-32]!
  407b0c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407b10:	add	x1, x1, #0x4c5
  407b14:	str	x19, [sp, #16]
  407b18:	mov	x29, sp
  407b1c:	mov	x19, x0
  407b20:	bl	405000 <strcmp@plt>
  407b24:	cbz	w0, 407b98 <read_family@@Base+0x90>
  407b28:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407b2c:	add	x1, x1, #0x4ca
  407b30:	mov	x0, x19
  407b34:	bl	405000 <strcmp@plt>
  407b38:	cbz	w0, 407ba0 <read_family@@Base+0x98>
  407b3c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407b40:	add	x1, x1, #0xb91
  407b44:	mov	x0, x19
  407b48:	bl	405000 <strcmp@plt>
  407b4c:	cbz	w0, 407ba8 <read_family@@Base+0xa0>
  407b50:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407b54:	add	x1, x1, #0x4d0
  407b58:	mov	x0, x19
  407b5c:	bl	405000 <strcmp@plt>
  407b60:	cbz	w0, 407bb0 <read_family@@Base+0xa8>
  407b64:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407b68:	add	x1, x1, #0x4d4
  407b6c:	mov	x0, x19
  407b70:	bl	405000 <strcmp@plt>
  407b74:	cbz	w0, 407bb8 <read_family@@Base+0xb0>
  407b78:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  407b7c:	add	x1, x1, #0x4d9
  407b80:	mov	x0, x19
  407b84:	bl	405000 <strcmp@plt>
  407b88:	cmp	w0, #0x0
  407b8c:	mov	w8, #0x7                   	// #7
  407b90:	csel	w0, w8, wzr, eq  // eq = none
  407b94:	b	407bbc <read_family@@Base+0xb4>
  407b98:	mov	w0, #0x2                   	// #2
  407b9c:	b	407bbc <read_family@@Base+0xb4>
  407ba0:	mov	w0, #0xa                   	// #10
  407ba4:	b	407bbc <read_family@@Base+0xb4>
  407ba8:	mov	w0, #0x11                  	// #17
  407bac:	b	407bbc <read_family@@Base+0xb4>
  407bb0:	mov	w0, #0x4                   	// #4
  407bb4:	b	407bbc <read_family@@Base+0xb4>
  407bb8:	mov	w0, #0x1c                  	// #28
  407bbc:	ldr	x19, [sp, #16]
  407bc0:	ldp	x29, x30, [sp], #32
  407bc4:	ret

0000000000407bc8 <family_name@@Base>:
  407bc8:	sub	w8, w0, #0x2
  407bcc:	cmp	w8, #0x1a
  407bd0:	b.hi	407c00 <family_name@@Base+0x38>  // b.pmore
  407bd4:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  407bd8:	add	x9, x9, #0x169
  407bdc:	adr	x10, 407bf4 <family_name@@Base+0x2c>
  407be0:	ldrb	w11, [x9, x8]
  407be4:	add	x10, x10, x11, lsl #2
  407be8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407bec:	add	x0, x0, #0x4c5
  407bf0:	br	x10
  407bf4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407bf8:	add	x0, x0, #0x4d0
  407bfc:	ret
  407c00:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407c04:	add	x0, x0, #0x4c1
  407c08:	ret
  407c0c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407c10:	add	x0, x0, #0x4d9
  407c14:	ret
  407c18:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407c1c:	add	x0, x0, #0x4ca
  407c20:	ret
  407c24:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407c28:	add	x0, x0, #0xb91
  407c2c:	ret
  407c30:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  407c34:	add	x0, x0, #0x4d4
  407c38:	ret

0000000000407c3c <format_host_r@@Base>:
  407c3c:	sub	sp, sp, #0x70
  407c40:	stp	x29, x30, [sp, #16]
  407c44:	stp	x28, x27, [sp, #32]
  407c48:	stp	x26, x25, [sp, #48]
  407c4c:	stp	x24, x23, [sp, #64]
  407c50:	stp	x22, x21, [sp, #80]
  407c54:	stp	x20, x19, [sp, #96]
  407c58:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  407c5c:	ldr	x8, [x8, #4064]
  407c60:	mov	x21, x2
  407c64:	mov	w22, w0
  407c68:	add	x29, sp, #0x10
  407c6c:	ldr	w8, [x8]
  407c70:	cbz	w8, 407ca4 <format_host_r@@Base+0x68>
  407c74:	cmp	w1, #0x0
  407c78:	b.le	407cac <format_host_r@@Base+0x70>
  407c7c:	cmp	w22, #0xa
  407c80:	mov	w12, w1
  407c84:	mov	w8, w1
  407c88:	mov	w23, w22
  407c8c:	mov	x24, x21
  407c90:	b.ne	407d48 <format_host_r@@Base+0x10c>  // b.any
  407c94:	ldr	w8, [x21]
  407c98:	cbz	w8, 407cf4 <format_host_r@@Base+0xb8>
  407c9c:	mov	w23, #0xa                   	// #10
  407ca0:	b	407d00 <format_host_r@@Base+0xc4>
  407ca4:	mov	w2, w1
  407ca8:	b	407e8c <format_host_r@@Base+0x250>
  407cac:	sub	w8, w22, #0x2
  407cb0:	cmp	w8, #0x1a
  407cb4:	mov	w2, wzr
  407cb8:	b.hi	407e8c <format_host_r@@Base+0x250>  // b.pmore
  407cbc:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  407cc0:	add	x9, x9, #0x184
  407cc4:	adr	x10, 407c94 <format_host_r@@Base+0x58>
  407cc8:	ldrb	w11, [x9, x8]
  407ccc:	add	x10, x10, x11, lsl #2
  407cd0:	mov	w12, #0x4                   	// #4
  407cd4:	mov	w1, #0x10                  	// #16
  407cd8:	mov	w8, #0x4                   	// #4
  407cdc:	mov	w23, w22
  407ce0:	mov	x24, x21
  407ce4:	br	x10
  407ce8:	mov	w12, #0x2                   	// #2
  407cec:	mov	w8, #0x2                   	// #2
  407cf0:	b	407d18 <format_host_r@@Base+0xdc>
  407cf4:	ldr	w8, [x21, #4]
  407cf8:	mov	w23, #0xa                   	// #10
  407cfc:	cbz	w8, 407d24 <format_host_r@@Base+0xe8>
  407d00:	mov	w12, w1
  407d04:	mov	w8, w1
  407d08:	mov	x24, x21
  407d0c:	b	407d48 <format_host_r@@Base+0x10c>
  407d10:	mov	w12, #0xa                   	// #10
  407d14:	mov	w8, #0xa                   	// #10
  407d18:	mov	w23, w22
  407d1c:	mov	x24, x21
  407d20:	b	407d48 <format_host_r@@Base+0x10c>
  407d24:	ldr	w8, [x21, #8]
  407d28:	add	x9, x21, #0xc
  407d2c:	mov	w10, #0x4                   	// #4
  407d30:	mov	w11, #0x2                   	// #2
  407d34:	cmn	w8, #0x10, lsl #12
  407d38:	csel	w8, w10, w1, eq  // eq = none
  407d3c:	csel	w23, w11, w23, eq  // eq = none
  407d40:	csel	x24, x9, x21, eq  // eq = none
  407d44:	mov	w12, w1
  407d48:	mov	w25, w8
  407d4c:	add	x8, x24, x25
  407d50:	ldur	w8, [x8, #-4]
  407d54:	mov	w9, #0xff01                	// #65281
  407d58:	movk	w9, #0xff00, lsl #16
  407d5c:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  407d60:	mul	x9, x8, x9
  407d64:	lsr	x9, x9, #40
  407d68:	add	w9, w9, w9, lsl #8
  407d6c:	sub	w28, w8, w9
  407d70:	add	x19, x19, #0x530
  407d74:	ldr	x20, [x19, w28, uxtw #3]
  407d78:	mov	w27, w4
  407d7c:	str	w12, [sp, #4]
  407d80:	str	x3, [sp, #8]
  407d84:	cbz	x20, 407dc8 <format_host_r@@Base+0x18c>
  407d88:	mov	x26, x20
  407d8c:	b	407d98 <format_host_r@@Base+0x15c>
  407d90:	ldr	x26, [x26]
  407d94:	cbz	x26, 407dc8 <format_host_r@@Base+0x18c>
  407d98:	ldrh	w8, [x26, #22]
  407d9c:	cmp	w23, w8
  407da0:	b.ne	407d90 <format_host_r@@Base+0x154>  // b.any
  407da4:	ldrh	w8, [x26, #18]
  407da8:	cmp	w25, w8
  407dac:	b.ne	407d90 <format_host_r@@Base+0x154>  // b.any
  407db0:	add	x0, x26, #0x18
  407db4:	mov	x1, x24
  407db8:	mov	x2, x25
  407dbc:	bl	404f40 <bcmp@plt>
  407dc0:	cbnz	w0, 407d90 <format_host_r@@Base+0x154>
  407dc4:	b	407e4c <format_host_r@@Base+0x210>
  407dc8:	mov	w0, #0x118                 	// #280
  407dcc:	bl	404e80 <malloc@plt>
  407dd0:	cbz	x0, 407e80 <format_host_r@@Base+0x244>
  407dd4:	mov	x26, x0
  407dd8:	strh	w23, [x0, #22]
  407ddc:	strh	w25, [x0, #18]
  407de0:	str	xzr, [x0, #8]
  407de4:	add	x0, x0, #0x18
  407de8:	mov	x1, x24
  407dec:	mov	x2, x25
  407df0:	bl	404d10 <memcpy@plt>
  407df4:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  407df8:	ldr	w9, [x8, #1320]
  407dfc:	str	x20, [x26]
  407e00:	str	x26, [x19, x28, lsl #3]
  407e04:	add	w10, w9, #0x1
  407e08:	str	w10, [x8, #1320]
  407e0c:	cbnz	w9, 407e18 <format_host_r@@Base+0x1dc>
  407e10:	mov	w0, #0x1                   	// #1
  407e14:	bl	404da0 <sethostent@plt>
  407e18:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  407e1c:	ldr	x8, [x8, #4016]
  407e20:	ldr	x0, [x8]
  407e24:	bl	4050e0 <fflush@plt>
  407e28:	mov	x0, x24
  407e2c:	mov	w1, w25
  407e30:	mov	w2, w23
  407e34:	bl	405050 <gethostbyaddr@plt>
  407e38:	cbz	x0, 407e4c <format_host_r@@Base+0x210>
  407e3c:	ldr	x0, [x0]
  407e40:	bl	404f80 <strdup@plt>
  407e44:	str	x0, [x26, #8]
  407e48:	b	407e50 <format_host_r@@Base+0x214>
  407e4c:	ldr	x0, [x26, #8]
  407e50:	ldr	x3, [sp, #8]
  407e54:	ldr	w2, [sp, #4]
  407e58:	mov	w4, w27
  407e5c:	cbz	x0, 407e8c <format_host_r@@Base+0x250>
  407e60:	ldp	x20, x19, [sp, #96]
  407e64:	ldp	x22, x21, [sp, #80]
  407e68:	ldp	x24, x23, [sp, #64]
  407e6c:	ldp	x26, x25, [sp, #48]
  407e70:	ldp	x28, x27, [sp, #32]
  407e74:	ldp	x29, x30, [sp, #16]
  407e78:	add	sp, sp, #0x70
  407e7c:	ret
  407e80:	ldr	w2, [sp, #4]
  407e84:	ldr	x3, [sp, #8]
  407e88:	mov	w4, w27
  407e8c:	mov	w0, w22
  407e90:	mov	w1, w2
  407e94:	mov	x2, x21
  407e98:	ldp	x20, x19, [sp, #96]
  407e9c:	ldp	x22, x21, [sp, #80]
  407ea0:	ldp	x24, x23, [sp, #64]
  407ea4:	ldp	x26, x25, [sp, #48]
  407ea8:	ldp	x28, x27, [sp, #32]
  407eac:	ldp	x29, x30, [sp, #16]
  407eb0:	add	sp, sp, #0x70
  407eb4:	b	407a64 <rt_addr_n2a_r@@Base>

0000000000407eb8 <format_host@@Base>:
  407eb8:	adrp	x3, 41f000 <memcpy@GLIBC_2.17>
  407ebc:	add	x3, x3, #0x428
  407ec0:	mov	w4, #0x100                 	// #256
  407ec4:	b	407c3c <format_host_r@@Base>

0000000000407ec8 <hexstring_n2a@@Base>:
  407ec8:	stp	x29, x30, [sp, #-80]!
  407ecc:	stp	x20, x19, [sp, #64]
  407ed0:	mov	x19, x2
  407ed4:	cmp	w3, #0x3
  407ed8:	str	x25, [sp, #16]
  407edc:	stp	x24, x23, [sp, #32]
  407ee0:	stp	x22, x21, [sp, #48]
  407ee4:	mov	x29, sp
  407ee8:	b.lt	407f3c <hexstring_n2a@@Base+0x74>  // b.tstop
  407eec:	cmp	w1, #0x1
  407ef0:	b.lt	407f3c <hexstring_n2a@@Base+0x74>  // b.tstop
  407ef4:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x428>
  407ef8:	mov	w20, w3
  407efc:	mov	x21, x0
  407f00:	mov	x24, xzr
  407f04:	mov	w25, w1
  407f08:	add	x22, x22, #0x63f
  407f0c:	mov	x23, x19
  407f10:	ldrb	w2, [x21, x24]
  407f14:	mov	x0, x23
  407f18:	mov	x1, x22
  407f1c:	bl	404dd0 <sprintf@plt>
  407f20:	cmp	w20, #0x5
  407f24:	b.lt	407f3c <hexstring_n2a@@Base+0x74>  // b.tstop
  407f28:	add	x24, x24, #0x1
  407f2c:	add	x23, x23, #0x2
  407f30:	cmp	x24, x25
  407f34:	sub	w20, w20, #0x2
  407f38:	b.cc	407f10 <hexstring_n2a@@Base+0x48>  // b.lo, b.ul, b.last
  407f3c:	mov	x0, x19
  407f40:	ldp	x20, x19, [sp, #64]
  407f44:	ldp	x22, x21, [sp, #48]
  407f48:	ldp	x24, x23, [sp, #32]
  407f4c:	ldr	x25, [sp, #16]
  407f50:	ldp	x29, x30, [sp], #80
  407f54:	ret

0000000000407f58 <hexstring_a2n@@Base>:
  407f58:	sub	sp, sp, #0x50
  407f5c:	stp	x29, x30, [sp, #16]
  407f60:	stp	x24, x23, [sp, #32]
  407f64:	stp	x22, x21, [sp, #48]
  407f68:	stp	x20, x19, [sp, #64]
  407f6c:	add	x29, sp, #0x10
  407f70:	mov	x20, x3
  407f74:	mov	w22, w2
  407f78:	mov	x19, x1
  407f7c:	mov	x21, x0
  407f80:	bl	404d40 <strlen@plt>
  407f84:	tbnz	w0, #0, 40800c <hexstring_a2n@@Base+0xb4>
  407f88:	cbz	w22, 408014 <hexstring_a2n@@Base+0xbc>
  407f8c:	mov	x23, xzr
  407f90:	mov	w24, w22
  407f94:	mov	x0, x21
  407f98:	bl	404d40 <strlen@plt>
  407f9c:	cmp	x0, #0x2
  407fa0:	b.cc	408018 <hexstring_a2n@@Base+0xc0>  // b.lo, b.ul, b.last
  407fa4:	add	x0, sp, #0x4
  407fa8:	mov	w2, #0x2                   	// #2
  407fac:	mov	x1, x21
  407fb0:	bl	4051a0 <strncpy@plt>
  407fb4:	strb	wzr, [sp, #6]
  407fb8:	bl	4051f0 <__errno_location@plt>
  407fbc:	mov	x22, x0
  407fc0:	str	wzr, [x0]
  407fc4:	add	x0, sp, #0x4
  407fc8:	add	x1, sp, #0x8
  407fcc:	mov	w2, #0x10                  	// #16
  407fd0:	bl	404d30 <strtoul@plt>
  407fd4:	ldr	w8, [x22]
  407fd8:	cbnz	w8, 40800c <hexstring_a2n@@Base+0xb4>
  407fdc:	cmp	w0, #0xff
  407fe0:	b.hi	40800c <hexstring_a2n@@Base+0xb4>  // b.pmore
  407fe4:	ldr	x8, [sp, #8]
  407fe8:	ldrb	w8, [x8]
  407fec:	cbnz	w8, 40800c <hexstring_a2n@@Base+0xb4>
  407ff0:	strb	w0, [x19, x23]
  407ff4:	add	x23, x23, #0x1
  407ff8:	cmp	x24, x23
  407ffc:	add	x21, x21, #0x2
  408000:	b.ne	407f94 <hexstring_a2n@@Base+0x3c>  // b.any
  408004:	mov	w23, w24
  408008:	b	408018 <hexstring_a2n@@Base+0xc0>
  40800c:	mov	x19, xzr
  408010:	b	408020 <hexstring_a2n@@Base+0xc8>
  408014:	mov	w23, wzr
  408018:	cbz	x20, 408020 <hexstring_a2n@@Base+0xc8>
  40801c:	str	w23, [x20]
  408020:	mov	x0, x19
  408024:	ldp	x20, x19, [sp, #64]
  408028:	ldp	x22, x21, [sp, #48]
  40802c:	ldp	x24, x23, [sp, #32]
  408030:	ldp	x29, x30, [sp, #16]
  408034:	add	sp, sp, #0x50
  408038:	ret

000000000040803c <hex2mem@@Base>:
  40803c:	cmp	w2, #0x1
  408040:	b.lt	4080e0 <hex2mem@@Base+0xa4>  // b.tstop
  408044:	mov	w8, w2
  408048:	add	x9, x0, #0x1
  40804c:	ldurb	w10, [x9, #-1]
  408050:	sub	w11, w10, #0x41
  408054:	cmp	w11, #0x5
  408058:	b.hi	408064 <hex2mem@@Base+0x28>  // b.pmore
  40805c:	sub	w10, w10, #0x37
  408060:	b	408084 <hex2mem@@Base+0x48>
  408064:	sub	w11, w10, #0x61
  408068:	cmp	w11, #0x5
  40806c:	b.hi	408078 <hex2mem@@Base+0x3c>  // b.pmore
  408070:	sub	w10, w10, #0x57
  408074:	b	408084 <hex2mem@@Base+0x48>
  408078:	sub	w10, w10, #0x30
  40807c:	cmp	w10, #0x9
  408080:	b.hi	4080e8 <hex2mem@@Base+0xac>  // b.pmore
  408084:	tbnz	w10, #31, 4080e8 <hex2mem@@Base+0xac>
  408088:	lsl	w10, w10, #4
  40808c:	strb	w10, [x1]
  408090:	ldrb	w11, [x9]
  408094:	sub	w12, w11, #0x41
  408098:	cmp	w12, #0x5
  40809c:	b.hi	4080a8 <hex2mem@@Base+0x6c>  // b.pmore
  4080a0:	sub	w11, w11, #0x37
  4080a4:	b	4080c8 <hex2mem@@Base+0x8c>
  4080a8:	sub	w12, w11, #0x61
  4080ac:	cmp	w12, #0x5
  4080b0:	b.hi	4080bc <hex2mem@@Base+0x80>  // b.pmore
  4080b4:	sub	w11, w11, #0x57
  4080b8:	b	4080c8 <hex2mem@@Base+0x8c>
  4080bc:	sub	w11, w11, #0x30
  4080c0:	cmp	w11, #0x9
  4080c4:	b.hi	4080e8 <hex2mem@@Base+0xac>  // b.pmore
  4080c8:	tbnz	w11, #31, 4080e8 <hex2mem@@Base+0xac>
  4080cc:	orr	w10, w10, w11
  4080d0:	subs	x8, x8, #0x1
  4080d4:	strb	w10, [x1], #1
  4080d8:	add	x9, x9, #0x2
  4080dc:	b.ne	40804c <hex2mem@@Base+0x10>  // b.any
  4080e0:	mov	w0, wzr
  4080e4:	ret
  4080e8:	mov	w0, #0xffffffff            	// #-1
  4080ec:	ret

00000000004080f0 <addr64_n2a@@Base>:
  4080f0:	stp	x29, x30, [sp, #-48]!
  4080f4:	stp	x22, x21, [sp, #16]
  4080f8:	mov	x21, x0
  4080fc:	stp	x20, x19, [sp, #32]
  408100:	mov	x19, x2
  408104:	rev	w8, w21
  408108:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  40810c:	adrp	x4, 40e000 <_IO_stdin_used@@Base+0x428>
  408110:	mov	x20, x1
  408114:	lsr	w3, w8, #16
  408118:	add	x2, x2, #0x4e2
  40811c:	add	x4, x4, #0x4e0
  408120:	mov	x0, x1
  408124:	mov	x1, x19
  408128:	mov	x29, sp
  40812c:	bl	404e30 <snprintf@plt>
  408130:	tbnz	w0, #31, 4081c0 <addr64_n2a@@Base+0xd0>
  408134:	ubfx	x8, x21, #16, #16
  408138:	mov	w22, w0
  40813c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  408140:	adrp	x4, 40e000 <_IO_stdin_used@@Base+0x428>
  408144:	rev16	w3, w8
  408148:	add	x0, x20, x22
  40814c:	sub	x1, x19, x22
  408150:	add	x2, x2, #0x4e2
  408154:	add	x4, x4, #0x4e0
  408158:	bl	404e30 <snprintf@plt>
  40815c:	tbnz	w0, #31, 4081c0 <addr64_n2a@@Base+0xd0>
  408160:	lsr	x8, x21, #32
  408164:	add	x22, x22, w0, uxtw
  408168:	rev	w8, w8
  40816c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  408170:	adrp	x4, 40e000 <_IO_stdin_used@@Base+0x428>
  408174:	add	x0, x20, x22
  408178:	lsr	w3, w8, #16
  40817c:	sub	x1, x19, x22
  408180:	add	x2, x2, #0x4e2
  408184:	add	x4, x4, #0x4e0
  408188:	bl	404e30 <snprintf@plt>
  40818c:	tbnz	w0, #31, 4081c0 <addr64_n2a@@Base+0xd0>
  408190:	lsr	x8, x21, #48
  408194:	add	x21, x22, w0, uxtw
  408198:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  40819c:	adrp	x4, 40d000 <addattr64@@Base+0x20>
  4081a0:	rev16	w3, w8
  4081a4:	add	x0, x20, x21
  4081a8:	sub	x1, x19, x21
  4081ac:	add	x2, x2, #0x4e2
  4081b0:	add	x4, x4, #0xecf
  4081b4:	bl	404e30 <snprintf@plt>
  4081b8:	tbnz	w0, #31, 4081c0 <addr64_n2a@@Base+0xd0>
  4081bc:	add	w0, w0, w21
  4081c0:	ldp	x20, x19, [sp, #32]
  4081c4:	ldp	x22, x21, [sp, #16]
  4081c8:	ldp	x29, x30, [sp], #48
  4081cc:	ret

00000000004081d0 <print_escape_buf@@Base>:
  4081d0:	stp	x29, x30, [sp, #-64]!
  4081d4:	stp	x24, x23, [sp, #16]
  4081d8:	stp	x22, x21, [sp, #32]
  4081dc:	stp	x20, x19, [sp, #48]
  4081e0:	mov	x29, sp
  4081e4:	cbz	x1, 408254 <print_escape_buf@@Base+0x84>
  4081e8:	mov	x19, x2
  4081ec:	mov	x20, x1
  4081f0:	mov	x21, x0
  4081f4:	bl	405010 <__ctype_b_loc@plt>
  4081f8:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x428>
  4081fc:	mov	x22, x0
  408200:	add	x23, x23, #0x4e7
  408204:	b	408220 <print_escape_buf@@Base+0x50>
  408208:	mov	x0, x23
  40820c:	mov	w1, w24
  408210:	bl	4051d0 <printf@plt>
  408214:	subs	x20, x20, #0x1
  408218:	add	x21, x21, #0x1
  40821c:	b.eq	408254 <print_escape_buf@@Base+0x84>  // b.none
  408220:	ldrb	w24, [x21]
  408224:	cmp	x24, #0x5c
  408228:	b.eq	408208 <print_escape_buf@@Base+0x38>  // b.none
  40822c:	ldr	x8, [x22]
  408230:	ldrh	w8, [x8, x24, lsl #1]
  408234:	tbz	w8, #14, 408208 <print_escape_buf@@Base+0x38>
  408238:	mov	x0, x19
  40823c:	mov	w1, w24
  408240:	bl	4050a0 <strchr@plt>
  408244:	cbnz	x0, 408208 <print_escape_buf@@Base+0x38>
  408248:	mov	w0, w24
  40824c:	bl	405210 <putchar@plt>
  408250:	b	408214 <print_escape_buf@@Base+0x44>
  408254:	ldp	x20, x19, [sp, #48]
  408258:	ldp	x22, x21, [sp, #32]
  40825c:	ldp	x24, x23, [sp, #16]
  408260:	ldp	x29, x30, [sp], #64
  408264:	ret

0000000000408268 <print_timestamp@@Base>:
  408268:	sub	sp, sp, #0x60
  40826c:	stp	x29, x30, [sp, #64]
  408270:	add	x29, sp, #0x40
  408274:	stp	x20, x19, [sp, #80]
  408278:	mov	x19, x0
  40827c:	sub	x0, x29, #0x10
  408280:	mov	x1, xzr
  408284:	bl	404f00 <gettimeofday@plt>
  408288:	sub	x0, x29, #0x10
  40828c:	bl	404e50 <localtime@plt>
  408290:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  408294:	ldr	x8, [x8, #4032]
  408298:	mov	x3, x0
  40829c:	ldr	w8, [x8]
  4082a0:	cbz	w8, 4082d0 <print_timestamp@@Base+0x68>
  4082a4:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  4082a8:	add	x2, x2, #0x4ed
  4082ac:	add	x0, sp, #0x8
  4082b0:	mov	w1, #0x28                  	// #40
  4082b4:	bl	404e00 <strftime@plt>
  4082b8:	ldur	x3, [x29, #-8]
  4082bc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4082c0:	add	x1, x1, #0x4ff
  4082c4:	add	x2, sp, #0x8
  4082c8:	mov	x0, x19
  4082cc:	b	4082fc <print_timestamp@@Base+0x94>
  4082d0:	mov	x0, x3
  4082d4:	bl	405140 <asctime@plt>
  4082d8:	mov	x20, x0
  4082dc:	bl	404d40 <strlen@plt>
  4082e0:	add	x8, x0, x20
  4082e4:	sturb	wzr, [x8, #-1]
  4082e8:	ldur	x3, [x29, #-8]
  4082ec:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4082f0:	add	x1, x1, #0x50b
  4082f4:	mov	x0, x19
  4082f8:	mov	x2, x20
  4082fc:	bl	405240 <fprintf@plt>
  408300:	ldp	x20, x19, [sp, #80]
  408304:	ldp	x29, x30, [sp, #64]
  408308:	mov	w0, wzr
  40830c:	add	sp, sp, #0x60
  408310:	ret

0000000000408314 <print_name_and_link@@Base>:
  408314:	sub	sp, sp, #0x70
  408318:	stp	x29, x30, [sp, #64]
  40831c:	stp	x22, x21, [sp, #80]
  408320:	stp	x20, x19, [sp, #96]
  408324:	ldr	x8, [x2, #40]
  408328:	mov	x20, x1
  40832c:	mov	x19, x0
  408330:	add	x29, sp, #0x40
  408334:	cbz	x8, 40836c <print_name_and_link@@Base+0x58>
  408338:	ldr	w22, [x8, #4]
  40833c:	cbz	w22, 408374 <print_name_and_link@@Base+0x60>
  408340:	ldr	x8, [x2, #296]
  408344:	cbz	x8, 4083a0 <print_name_and_link@@Base+0x8c>
  408348:	bl	409e6c <is_json_context@@Base>
  40834c:	tbz	w0, #0, 4083ec <print_name_and_link@@Base+0xd8>
  408350:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  408354:	add	x2, x2, #0x523
  408358:	mov	w0, #0x2                   	// #2
  40835c:	mov	w1, #0x6                   	// #6
  408360:	mov	x3, xzr
  408364:	mov	w4, w22
  408368:	bl	409f94 <print_color_int@@Base>
  40836c:	mov	w22, wzr
  408370:	b	408430 <print_name_and_link@@Base+0x11c>
  408374:	bl	409e6c <is_json_context@@Base>
  408378:	tbz	w0, #0, 408404 <print_name_and_link@@Base+0xf0>
  40837c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  408380:	add	x2, x2, #0xb91
  408384:	mov	w0, #0x2                   	// #2
  408388:	mov	w1, #0x6                   	// #6
  40838c:	mov	x3, xzr
  408390:	mov	x4, xzr
  408394:	bl	40a634 <print_color_null@@Base>
  408398:	mov	w22, wzr
  40839c:	b	408430 <print_name_and_link@@Base+0x11c>
  4083a0:	mov	w0, w22
  4083a4:	bl	4095dc <ll_index_to_name@@Base>
  4083a8:	mov	x21, x0
  4083ac:	bl	409e6c <is_json_context@@Base>
  4083b0:	tbz	w0, #0, 4083d4 <print_name_and_link@@Base+0xc0>
  4083b4:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  4083b8:	add	x2, x2, #0xb91
  4083bc:	mov	w0, #0x2                   	// #2
  4083c0:	mov	w1, #0x6                   	// #6
  4083c4:	mov	x3, xzr
  4083c8:	mov	x4, x21
  4083cc:	bl	40a3f4 <print_color_string@@Base>
  4083d0:	mov	x21, xzr
  4083d4:	mov	w0, w22
  4083d8:	bl	409800 <ll_index_to_flags@@Base>
  4083dc:	mvn	w8, w0
  4083e0:	and	w22, w8, #0x1
  4083e4:	cbnz	x21, 408410 <print_name_and_link@@Base+0xfc>
  4083e8:	b	408430 <print_name_and_link@@Base+0x11c>
  4083ec:	mov	w0, w22
  4083f0:	bl	4095a0 <ll_idx_n2a@@Base>
  4083f4:	mov	x21, x0
  4083f8:	mov	w22, wzr
  4083fc:	cbnz	x21, 408410 <print_name_and_link@@Base+0xfc>
  408400:	b	408430 <print_name_and_link@@Base+0x11c>
  408404:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x428>
  408408:	mov	w22, wzr
  40840c:	add	x21, x21, #0x52e
  408410:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  408414:	add	x2, x2, #0x533
  408418:	mov	x0, sp
  40841c:	mov	w1, #0x40                  	// #64
  408420:	mov	x3, x20
  408424:	mov	x4, x21
  408428:	bl	404e30 <snprintf@plt>
  40842c:	mov	x20, sp
  408430:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  408434:	add	x2, x2, #0x539
  408438:	mov	w0, #0x4                   	// #4
  40843c:	mov	w1, wzr
  408440:	mov	x3, x19
  408444:	mov	x4, x20
  408448:	bl	40a3f4 <print_color_string@@Base>
  40844c:	mov	w0, w22
  408450:	ldp	x20, x19, [sp, #96]
  408454:	ldp	x22, x21, [sp, #80]
  408458:	ldp	x29, x30, [sp, #64]
  40845c:	add	sp, sp, #0x70
  408460:	ret

0000000000408464 <getcmdline@@Base>:
  408464:	sub	sp, sp, #0x70
  408468:	stp	x22, x21, [sp, #80]
  40846c:	mov	x21, x2
  408470:	mov	w2, #0xa                   	// #10
  408474:	mov	x3, x21
  408478:	stp	x29, x30, [sp, #16]
  40847c:	stp	x28, x27, [sp, #32]
  408480:	stp	x26, x25, [sp, #48]
  408484:	stp	x24, x23, [sp, #64]
  408488:	stp	x20, x19, [sp, #96]
  40848c:	add	x29, sp, #0x10
  408490:	mov	x19, x1
  408494:	mov	x22, x0
  408498:	bl	405220 <__getdelim@plt>
  40849c:	mov	x20, x0
  4084a0:	tbnz	x0, #63, 4085f4 <getcmdline@@Base+0x190>
  4084a4:	adrp	x28, 41e000 <_IO_stdin_used@@Base+0x10428>
  4084a8:	ldr	x28, [x28, #4000]
  4084ac:	mov	w1, #0x23                  	// #35
  4084b0:	ldr	w8, [x28]
  4084b4:	add	w8, w8, #0x1
  4084b8:	str	w8, [x28]
  4084bc:	ldr	x23, [x22]
  4084c0:	mov	x0, x23
  4084c4:	bl	4050a0 <strchr@plt>
  4084c8:	cbz	x0, 4084d4 <getcmdline@@Base+0x70>
  4084cc:	strb	wzr, [x0]
  4084d0:	ldr	x23, [x22]
  4084d4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4084d8:	add	x1, x1, #0x540
  4084dc:	mov	x0, x23
  4084e0:	bl	405180 <strstr@plt>
  4084e4:	cbz	x0, 4085f4 <getcmdline@@Base+0x190>
  4084e8:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x428>
  4084ec:	mov	x25, x0
  4084f0:	add	x23, x23, #0x540
  4084f4:	add	x0, sp, #0x8
  4084f8:	mov	x1, sp
  4084fc:	mov	w2, #0xa                   	// #10
  408500:	mov	x3, x21
  408504:	stp	xzr, xzr, [sp]
  408508:	bl	405220 <__getdelim@plt>
  40850c:	mov	x24, x0
  408510:	tbnz	x0, #63, 4085a4 <getcmdline@@Base+0x140>
  408514:	ldr	w8, [x28]
  408518:	mov	w1, #0x23                  	// #35
  40851c:	add	w8, w8, #0x1
  408520:	str	w8, [x28]
  408524:	strb	wzr, [x25]
  408528:	ldr	x25, [sp, #8]
  40852c:	mov	x0, x25
  408530:	bl	4050a0 <strchr@plt>
  408534:	cbz	x0, 408540 <getcmdline@@Base+0xdc>
  408538:	strb	wzr, [x0]
  40853c:	ldr	x25, [sp, #8]
  408540:	ldr	x26, [x22]
  408544:	mov	x0, x26
  408548:	bl	404d40 <strlen@plt>
  40854c:	mov	x27, x0
  408550:	mov	x0, x25
  408554:	bl	404d40 <strlen@plt>
  408558:	add	x8, x27, x0
  40855c:	add	x1, x8, #0x1
  408560:	mov	x0, x26
  408564:	str	x1, [x19]
  408568:	bl	404f60 <realloc@plt>
  40856c:	str	x0, [x22]
  408570:	cbz	x0, 4085cc <getcmdline@@Base+0x168>
  408574:	ldr	x1, [sp, #8]
  408578:	add	x8, x20, x24
  40857c:	sub	x20, x8, #0x2
  408580:	bl	404ed0 <strcat@plt>
  408584:	ldr	x0, [sp, #8]
  408588:	bl	405060 <free@plt>
  40858c:	ldr	x0, [x22]
  408590:	mov	x1, x23
  408594:	bl	405180 <strstr@plt>
  408598:	mov	x25, x0
  40859c:	cbnz	x0, 4084f4 <getcmdline@@Base+0x90>
  4085a0:	b	4085f4 <getcmdline@@Base+0x190>
  4085a4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  4085a8:	ldr	x8, [x8, #3992]
  4085ac:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  4085b0:	add	x0, x0, #0x543
  4085b4:	mov	w1, #0x1a                  	// #26
  4085b8:	ldr	x3, [x8]
  4085bc:	mov	w2, #0x1                   	// #1
  4085c0:	bl	4050c0 <fwrite@plt>
  4085c4:	mov	x20, x24
  4085c8:	b	4085f4 <getcmdline@@Base+0x190>
  4085cc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  4085d0:	ldr	x8, [x8, #3992]
  4085d4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  4085d8:	add	x0, x0, #0x55e
  4085dc:	mov	w1, #0xe                   	// #14
  4085e0:	ldr	x3, [x8]
  4085e4:	mov	w2, #0x1                   	// #1
  4085e8:	bl	4050c0 <fwrite@plt>
  4085ec:	str	xzr, [x19]
  4085f0:	mov	x20, #0xffffffffffffffff    	// #-1
  4085f4:	mov	x0, x20
  4085f8:	ldp	x20, x19, [sp, #96]
  4085fc:	ldp	x22, x21, [sp, #80]
  408600:	ldp	x24, x23, [sp, #64]
  408604:	ldp	x26, x25, [sp, #48]
  408608:	ldp	x28, x27, [sp, #32]
  40860c:	ldp	x29, x30, [sp, #16]
  408610:	add	sp, sp, #0x70
  408614:	ret

0000000000408618 <makeargs@@Base>:
  408618:	stp	x29, x30, [sp, #-64]!
  40861c:	stp	x24, x23, [sp, #16]
  408620:	stp	x22, x21, [sp, #32]
  408624:	stp	x20, x19, [sp, #48]
  408628:	ldrb	w8, [x0]
  40862c:	mov	x19, x1
  408630:	mov	x29, sp
  408634:	cbz	w8, 4086cc <makeargs@@Base+0xb4>
  408638:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x428>
  40863c:	mov	x22, x0
  408640:	mov	w20, wzr
  408644:	sub	w23, w2, #0x1
  408648:	add	x21, x21, #0x19f
  40864c:	b	408684 <makeargs@@Base+0x6c>
  408650:	mov	x0, x22
  408654:	mov	x1, x21
  408658:	add	w24, w20, #0x1
  40865c:	str	x22, [x19, w20, sxtw #3]
  408660:	bl	4051b0 <strcspn@plt>
  408664:	add	x0, x22, x0
  408668:	ldrb	w8, [x0]
  40866c:	mov	w20, w24
  408670:	cbz	w8, 4086d0 <makeargs@@Base+0xb8>
  408674:	mov	x22, x0
  408678:	ldrb	w8, [x22, #1]!
  40867c:	strb	wzr, [x0]
  408680:	cbz	w8, 4086d0 <makeargs@@Base+0xb8>
  408684:	mov	x0, x22
  408688:	mov	x1, x21
  40868c:	bl	405090 <strspn@plt>
  408690:	add	x22, x22, x0
  408694:	ldrb	w1, [x22]
  408698:	cbz	w1, 4086d0 <makeargs@@Base+0xb8>
  40869c:	cmp	w20, w23
  4086a0:	b.ge	4086ec <makeargs@@Base+0xd4>  // b.tcont
  4086a4:	cmp	w1, #0x27
  4086a8:	b.eq	4086b4 <makeargs@@Base+0x9c>  // b.none
  4086ac:	cmp	w1, #0x22
  4086b0:	b.ne	408650 <makeargs@@Base+0x38>  // b.any
  4086b4:	add	x0, x22, #0x1
  4086b8:	str	x0, [x19, w20, sxtw #3]
  4086bc:	bl	4050a0 <strchr@plt>
  4086c0:	cbz	x0, 408704 <makeargs@@Base+0xec>
  4086c4:	add	w20, w20, #0x1
  4086c8:	b	408674 <makeargs@@Base+0x5c>
  4086cc:	mov	w20, wzr
  4086d0:	str	xzr, [x19, w20, sxtw #3]
  4086d4:	mov	w0, w20
  4086d8:	ldp	x20, x19, [sp, #48]
  4086dc:	ldp	x22, x21, [sp, #32]
  4086e0:	ldp	x24, x23, [sp, #16]
  4086e4:	ldp	x29, x30, [sp], #64
  4086e8:	ret
  4086ec:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  4086f0:	ldr	x8, [x8, #3992]
  4086f4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  4086f8:	add	x0, x0, #0x56d
  4086fc:	mov	w1, #0x1e                  	// #30
  408700:	b	408718 <makeargs@@Base+0x100>
  408704:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  408708:	ldr	x8, [x8, #3992]
  40870c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  408710:	add	x0, x0, #0x58c
  408714:	mov	w1, #0x1b                  	// #27
  408718:	ldr	x3, [x8]
  40871c:	mov	w2, #0x1                   	// #1
  408720:	bl	4050c0 <fwrite@plt>
  408724:	mov	w0, #0x1                   	// #1
  408728:	bl	404d50 <exit@plt>

000000000040872c <print_nlmsg_timestamp@@Base>:
  40872c:	stp	x29, x30, [sp, #-48]!
  408730:	str	x21, [sp, #16]
  408734:	stp	x20, x19, [sp, #32]
  408738:	ldp	w8, w19, [x1, #16]
  40873c:	mov	x29, sp
  408740:	mov	x20, x0
  408744:	add	x0, x29, #0x18
  408748:	str	x8, [x29, #24]
  40874c:	bl	404e50 <localtime@plt>
  408750:	bl	405140 <asctime@plt>
  408754:	mov	x21, x0
  408758:	bl	404d40 <strlen@plt>
  40875c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408760:	add	x8, x0, x21
  408764:	add	x1, x1, #0x5a8
  408768:	mov	x0, x20
  40876c:	mov	x2, x21
  408770:	mov	x3, x19
  408774:	sturb	wzr, [x8, #-1]
  408778:	bl	405240 <fprintf@plt>
  40877c:	ldp	x20, x19, [sp, #32]
  408780:	ldr	x21, [sp, #16]
  408784:	ldp	x29, x30, [sp], #48
  408788:	ret

000000000040878c <int_to_str@@Base>:
  40878c:	stp	x29, x30, [sp, #-32]!
  408790:	str	x19, [sp, #16]
  408794:	mov	x19, x1
  408798:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40879c:	mov	w2, w0
  4087a0:	add	x1, x1, #0x5be
  4087a4:	mov	x0, x19
  4087a8:	mov	x29, sp
  4087ac:	bl	404dd0 <sprintf@plt>
  4087b0:	mov	x0, x19
  4087b4:	ldr	x19, [sp, #16]
  4087b8:	ldp	x29, x30, [sp], #32
  4087bc:	ret

00000000004087c0 <get_guid@@Base>:
  4087c0:	stp	x29, x30, [sp, #-48]!
  4087c4:	stp	x20, x19, [sp, #32]
  4087c8:	mov	x19, x0
  4087cc:	mov	x0, x1
  4087d0:	str	x21, [sp, #16]
  4087d4:	mov	x29, sp
  4087d8:	mov	x20, x1
  4087dc:	bl	404d40 <strlen@plt>
  4087e0:	cmp	x0, #0x17
  4087e4:	b.ne	408a28 <get_guid@@Base+0x268>  // b.any
  4087e8:	mov	x21, x20
  4087ec:	ldrb	w8, [x21, #2]!
  4087f0:	cmp	w8, #0x3a
  4087f4:	b.ne	408a28 <get_guid@@Base+0x268>  // b.any
  4087f8:	ldrb	w8, [x20, #5]
  4087fc:	cmp	w8, #0x3a
  408800:	b.ne	408a28 <get_guid@@Base+0x268>  // b.any
  408804:	ldrb	w8, [x20, #8]
  408808:	cmp	w8, #0x3a
  40880c:	b.ne	408a28 <get_guid@@Base+0x268>  // b.any
  408810:	ldrb	w8, [x20, #11]
  408814:	cmp	w8, #0x3a
  408818:	b.ne	408a28 <get_guid@@Base+0x268>  // b.any
  40881c:	ldrb	w8, [x20, #14]
  408820:	cmp	w8, #0x3a
  408824:	b.ne	408a28 <get_guid@@Base+0x268>  // b.any
  408828:	ldrb	w8, [x20, #17]
  40882c:	cmp	w8, #0x3a
  408830:	b.ne	408a28 <get_guid@@Base+0x268>  // b.any
  408834:	ldrb	w8, [x20, #20]
  408838:	cmp	w8, #0x3a
  40883c:	b.ne	408a28 <get_guid@@Base+0x268>  // b.any
  408840:	add	x1, x29, #0x18
  408844:	mov	w2, #0x10                  	// #16
  408848:	mov	x0, x20
  40884c:	str	xzr, [x19]
  408850:	bl	404d30 <strtoul@plt>
  408854:	mov	x8, x0
  408858:	cmp	x0, #0xff
  40885c:	mov	w0, #0xffffffff            	// #-1
  408860:	b.hi	408a2c <get_guid@@Base+0x26c>  // b.pmore
  408864:	ldr	x9, [x29, #24]
  408868:	cmp	x9, x21
  40886c:	b.ne	408a2c <get_guid@@Base+0x26c>  // b.any
  408870:	ldr	x9, [x19]
  408874:	add	x0, x20, #0x3
  408878:	add	x1, x29, #0x18
  40887c:	mov	w2, #0x10                  	// #16
  408880:	orr	x8, x9, x8, lsl #56
  408884:	str	x8, [x19]
  408888:	bl	404d30 <strtoul@plt>
  40888c:	mov	x8, x0
  408890:	cmp	x0, #0xff
  408894:	mov	w0, #0xffffffff            	// #-1
  408898:	b.hi	408a2c <get_guid@@Base+0x26c>  // b.pmore
  40889c:	ldr	x9, [x29, #24]
  4088a0:	add	x10, x20, #0x5
  4088a4:	cmp	x9, x10
  4088a8:	b.ne	408a2c <get_guid@@Base+0x26c>  // b.any
  4088ac:	ldr	x9, [x19]
  4088b0:	add	x0, x20, #0x6
  4088b4:	add	x1, x29, #0x18
  4088b8:	mov	w2, #0x10                  	// #16
  4088bc:	orr	x8, x9, x8, lsl #48
  4088c0:	str	x8, [x19]
  4088c4:	bl	404d30 <strtoul@plt>
  4088c8:	mov	x8, x0
  4088cc:	cmp	x0, #0xff
  4088d0:	mov	w0, #0xffffffff            	// #-1
  4088d4:	b.hi	408a2c <get_guid@@Base+0x26c>  // b.pmore
  4088d8:	ldr	x9, [x29, #24]
  4088dc:	add	x10, x20, #0x8
  4088e0:	cmp	x9, x10
  4088e4:	b.ne	408a2c <get_guid@@Base+0x26c>  // b.any
  4088e8:	ldr	x9, [x19]
  4088ec:	add	x0, x20, #0x9
  4088f0:	add	x1, x29, #0x18
  4088f4:	mov	w2, #0x10                  	// #16
  4088f8:	orr	x8, x9, x8, lsl #40
  4088fc:	str	x8, [x19]
  408900:	bl	404d30 <strtoul@plt>
  408904:	mov	x8, x0
  408908:	cmp	x0, #0xff
  40890c:	mov	w0, #0xffffffff            	// #-1
  408910:	b.hi	408a2c <get_guid@@Base+0x26c>  // b.pmore
  408914:	ldr	x9, [x29, #24]
  408918:	add	x10, x20, #0xb
  40891c:	cmp	x9, x10
  408920:	b.ne	408a2c <get_guid@@Base+0x26c>  // b.any
  408924:	ldr	x9, [x19]
  408928:	add	x0, x20, #0xc
  40892c:	add	x1, x29, #0x18
  408930:	mov	w2, #0x10                  	// #16
  408934:	orr	x8, x9, x8, lsl #32
  408938:	str	x8, [x19]
  40893c:	bl	404d30 <strtoul@plt>
  408940:	mov	x8, x0
  408944:	cmp	x0, #0xff
  408948:	mov	w0, #0xffffffff            	// #-1
  40894c:	b.hi	408a2c <get_guid@@Base+0x26c>  // b.pmore
  408950:	ldr	x9, [x29, #24]
  408954:	add	x10, x20, #0xe
  408958:	cmp	x9, x10
  40895c:	b.ne	408a2c <get_guid@@Base+0x26c>  // b.any
  408960:	ldr	x9, [x19]
  408964:	add	x0, x20, #0xf
  408968:	add	x1, x29, #0x18
  40896c:	mov	w2, #0x10                  	// #16
  408970:	orr	x8, x9, x8, lsl #24
  408974:	str	x8, [x19]
  408978:	bl	404d30 <strtoul@plt>
  40897c:	mov	x8, x0
  408980:	cmp	x0, #0xff
  408984:	mov	w0, #0xffffffff            	// #-1
  408988:	b.hi	408a2c <get_guid@@Base+0x26c>  // b.pmore
  40898c:	ldr	x9, [x29, #24]
  408990:	add	x10, x20, #0x11
  408994:	cmp	x9, x10
  408998:	b.ne	408a2c <get_guid@@Base+0x26c>  // b.any
  40899c:	ldr	x9, [x19]
  4089a0:	add	x0, x20, #0x12
  4089a4:	add	x1, x29, #0x18
  4089a8:	mov	w2, #0x10                  	// #16
  4089ac:	orr	x8, x9, x8, lsl #16
  4089b0:	str	x8, [x19]
  4089b4:	bl	404d30 <strtoul@plt>
  4089b8:	mov	x8, x0
  4089bc:	cmp	x0, #0xff
  4089c0:	mov	w0, #0xffffffff            	// #-1
  4089c4:	b.hi	408a2c <get_guid@@Base+0x26c>  // b.pmore
  4089c8:	ldr	x9, [x29, #24]
  4089cc:	add	x10, x20, #0x14
  4089d0:	cmp	x9, x10
  4089d4:	b.ne	408a2c <get_guid@@Base+0x26c>  // b.any
  4089d8:	ldr	x9, [x19]
  4089dc:	add	x0, x20, #0x15
  4089e0:	add	x1, x29, #0x18
  4089e4:	mov	w2, #0x10                  	// #16
  4089e8:	orr	x8, x9, x8, lsl #8
  4089ec:	str	x8, [x19]
  4089f0:	bl	404d30 <strtoul@plt>
  4089f4:	mov	x8, x0
  4089f8:	cmp	x0, #0xff
  4089fc:	mov	w0, #0xffffffff            	// #-1
  408a00:	b.hi	408a2c <get_guid@@Base+0x26c>  // b.pmore
  408a04:	ldr	x9, [x29, #24]
  408a08:	add	x10, x20, #0x17
  408a0c:	cmp	x9, x10
  408a10:	b.ne	408a2c <get_guid@@Base+0x26c>  // b.any
  408a14:	ldr	x9, [x19]
  408a18:	mov	w0, wzr
  408a1c:	orr	x8, x9, x8
  408a20:	str	x8, [x19]
  408a24:	b	408a2c <get_guid@@Base+0x26c>
  408a28:	mov	w0, #0xffffffff            	// #-1
  408a2c:	ldp	x20, x19, [sp, #32]
  408a30:	ldr	x21, [sp, #16]
  408a34:	ldp	x29, x30, [sp], #48
  408a38:	ret

0000000000408a3c <get_real_family@@Base>:
  408a3c:	cmp	w0, #0x5
  408a40:	mov	w0, w1
  408a44:	b.ne	408a5c <get_real_family@@Base+0x20>  // b.any
  408a48:	cmp	w0, #0x80
  408a4c:	b.eq	408a60 <get_real_family@@Base+0x24>  // b.none
  408a50:	cmp	w0, #0x81
  408a54:	b.ne	408a5c <get_real_family@@Base+0x20>  // b.any
  408a58:	mov	w0, #0xa                   	// #10
  408a5c:	ret
  408a60:	mov	w0, #0x2                   	// #2
  408a64:	ret

0000000000408a68 <get_rtnl_link_stats_rta@@Base>:
  408a68:	stp	x29, x30, [sp, #-64]!
  408a6c:	stp	x28, x23, [sp, #16]
  408a70:	stp	x22, x21, [sp, #32]
  408a74:	stp	x20, x19, [sp, #48]
  408a78:	mov	x29, sp
  408a7c:	sub	sp, sp, #0x9b0
  408a80:	ldr	x23, [x1, #184]
  408a84:	mov	x19, x0
  408a88:	cbz	x23, 408a98 <get_rtnl_link_stats_rta@@Base+0x30>
  408a8c:	mov	w20, #0xc0                  	// #192
  408a90:	mov	x21, x19
  408a94:	b	408aa8 <get_rtnl_link_stats_rta@@Base+0x40>
  408a98:	ldr	x23, [x1, #56]
  408a9c:	cbz	x23, 408b70 <get_rtnl_link_stats_rta@@Base+0x108>
  408aa0:	sub	x21, x29, #0x60
  408aa4:	mov	w20, #0x60                  	// #96
  408aa8:	ldrh	w8, [x23]
  408aac:	sub	x22, x8, #0x4
  408ab0:	subs	w8, w20, w22
  408ab4:	b.le	408acc <get_rtnl_link_stats_rta@@Base+0x64>
  408ab8:	add	x0, x21, x22
  408abc:	sxtw	x2, w8
  408ac0:	mov	w1, wzr
  408ac4:	bl	404ef0 <memset@plt>
  408ac8:	b	408ad0 <get_rtnl_link_stats_rta@@Base+0x68>
  408acc:	mov	x22, x20
  408ad0:	add	x1, x23, #0x4
  408ad4:	mov	x0, x21
  408ad8:	mov	x2, x22
  408adc:	bl	404d10 <memcpy@plt>
  408ae0:	cmp	x21, x19
  408ae4:	b.eq	408b54 <get_rtnl_link_stats_rta@@Base+0xec>  // b.none
  408ae8:	add	x8, x21, #0x60
  408aec:	add	x9, x21, #0x4
  408af0:	cmp	x8, x9
  408af4:	csel	x9, x8, x9, hi  // hi = pmore
  408af8:	mvn	x10, x21
  408afc:	add	x9, x9, x10
  408b00:	lsr	x9, x9, #2
  408b04:	cbz	x9, 408b3c <get_rtnl_link_stats_rta@@Base+0xd4>
  408b08:	add	x11, x9, #0x1
  408b0c:	and	x12, x11, #0x7ffffffffffffffe
  408b10:	add	x9, x19, x12, lsl #3
  408b14:	add	x10, x21, x12, lsl #2
  408b18:	mov	x13, x12
  408b1c:	ldr	d0, [x21], #8
  408b20:	subs	x13, x13, #0x2
  408b24:	uxtl	v0.2d, v0.2s
  408b28:	str	q0, [x19], #16
  408b2c:	b.ne	408b1c <get_rtnl_link_stats_rta@@Base+0xb4>  // b.any
  408b30:	cmp	x11, x12
  408b34:	b.ne	408b44 <get_rtnl_link_stats_rta@@Base+0xdc>  // b.any
  408b38:	b	408b54 <get_rtnl_link_stats_rta@@Base+0xec>
  408b3c:	mov	x9, x19
  408b40:	mov	x10, x21
  408b44:	ldr	w11, [x10], #4
  408b48:	cmp	x10, x8
  408b4c:	str	x11, [x9], #8
  408b50:	b.cc	408b44 <get_rtnl_link_stats_rta@@Base+0xdc>  // b.lo, b.ul, b.last
  408b54:	mov	w0, w20
  408b58:	add	sp, sp, #0x9b0
  408b5c:	ldp	x20, x19, [sp, #48]
  408b60:	ldp	x22, x21, [sp, #32]
  408b64:	ldp	x28, x23, [sp, #16]
  408b68:	ldp	x29, x30, [sp], #64
  408b6c:	ret
  408b70:	ldr	x2, [x1, #96]
  408b74:	cbz	x2, 408bf8 <get_rtnl_link_stats_rta@@Base+0x190>
  408b78:	ldrh	w8, [x2], #4
  408b7c:	add	x0, sp, #0x8
  408b80:	mov	w1, #0x128                 	// #296
  408b84:	sub	w3, w8, #0x4
  408b88:	bl	40d6a4 <parse_rtattr@@Base>
  408b8c:	ldr	x8, [sp, #32]
  408b90:	cbz	x8, 408bf0 <get_rtnl_link_stats_rta@@Base+0x188>
  408b94:	movi	v0.2d, #0x0
  408b98:	stp	q0, q0, [x19, #160]
  408b9c:	stp	q0, q0, [x19, #128]
  408ba0:	stp	q0, q0, [x19, #96]
  408ba4:	stp	q0, q0, [x19, #64]
  408ba8:	stp	q0, q0, [x19, #32]
  408bac:	stp	q0, q0, [x19]
  408bb0:	ldur	x9, [x8, #12]
  408bb4:	str	x9, [x19]
  408bb8:	ldur	x9, [x8, #20]
  408bbc:	str	x9, [x19, #16]
  408bc0:	ldur	x9, [x8, #44]
  408bc4:	str	x9, [x19, #8]
  408bc8:	ldur	x9, [x8, #52]
  408bcc:	str	x9, [x19, #24]
  408bd0:	ldur	x9, [x8, #108]
  408bd4:	str	x9, [x19, #32]
  408bd8:	ldur	x9, [x8, #116]
  408bdc:	str	x9, [x19, #40]
  408be0:	ldur	x9, [x8, #188]
  408be4:	str	x9, [x19, #64]
  408be8:	ldur	x8, [x8, #252]
  408bec:	str	x8, [x19, #104]
  408bf0:	mov	w20, #0xc0                  	// #192
  408bf4:	b	408b54 <get_rtnl_link_stats_rta@@Base+0xec>
  408bf8:	mov	w20, #0xffffffff            	// #-1
  408bfc:	b	408b54 <get_rtnl_link_stats_rta@@Base+0xec>

0000000000408c00 <strlcpy@@Base>:
  408c00:	stp	x29, x30, [sp, #-48]!
  408c04:	stp	x20, x19, [sp, #32]
  408c08:	mov	x19, x0
  408c0c:	mov	x0, x1
  408c10:	stp	x22, x21, [sp, #16]
  408c14:	mov	x29, sp
  408c18:	mov	x22, x2
  408c1c:	mov	x21, x1
  408c20:	bl	404d40 <strlen@plt>
  408c24:	mov	x20, x0
  408c28:	cbz	x22, 408c4c <strlcpy@@Base+0x4c>
  408c2c:	sub	x8, x22, #0x1
  408c30:	cmp	x20, x8
  408c34:	csel	x22, x20, x8, cc  // cc = lo, ul, last
  408c38:	mov	x0, x19
  408c3c:	mov	x1, x21
  408c40:	mov	x2, x22
  408c44:	bl	404d10 <memcpy@plt>
  408c48:	strb	wzr, [x19, x22]
  408c4c:	mov	x0, x20
  408c50:	ldp	x20, x19, [sp, #32]
  408c54:	ldp	x22, x21, [sp, #16]
  408c58:	ldp	x29, x30, [sp], #48
  408c5c:	ret

0000000000408c60 <strlcat@@Base>:
  408c60:	stp	x29, x30, [sp, #-64]!
  408c64:	str	x23, [sp, #16]
  408c68:	stp	x22, x21, [sp, #32]
  408c6c:	stp	x20, x19, [sp, #48]
  408c70:	mov	x29, sp
  408c74:	mov	x21, x2
  408c78:	mov	x20, x1
  408c7c:	mov	x22, x0
  408c80:	bl	404d40 <strlen@plt>
  408c84:	mov	x19, x0
  408c88:	cmp	x0, x21
  408c8c:	b.cs	408ccc <strlcat@@Base+0x6c>  // b.hs, b.nlast
  408c90:	mov	x0, x20
  408c94:	sub	x23, x21, x19
  408c98:	bl	404d40 <strlen@plt>
  408c9c:	mov	x21, x0
  408ca0:	cbz	x23, 408cd8 <strlcat@@Base+0x78>
  408ca4:	sub	x8, x23, #0x1
  408ca8:	cmp	x21, x8
  408cac:	add	x22, x22, x19
  408cb0:	csel	x23, x21, x8, cc  // cc = lo, ul, last
  408cb4:	mov	x0, x22
  408cb8:	mov	x1, x20
  408cbc:	mov	x2, x23
  408cc0:	bl	404d10 <memcpy@plt>
  408cc4:	strb	wzr, [x22, x23]
  408cc8:	b	408cd8 <strlcat@@Base+0x78>
  408ccc:	mov	x0, x20
  408cd0:	bl	404d40 <strlen@plt>
  408cd4:	mov	x21, x0
  408cd8:	add	x0, x21, x19
  408cdc:	ldp	x20, x19, [sp, #48]
  408ce0:	ldp	x22, x21, [sp, #32]
  408ce4:	ldr	x23, [sp, #16]
  408ce8:	ldp	x29, x30, [sp], #64
  408cec:	ret

0000000000408cf0 <drop_cap@@Base>:
  408cf0:	stp	x29, x30, [sp, #-32]!
  408cf4:	str	x19, [sp, #16]
  408cf8:	mov	x29, sp
  408cfc:	bl	404de0 <getuid@plt>
  408d00:	cbz	w0, 408d54 <drop_cap@@Base+0x64>
  408d04:	bl	404d90 <geteuid@plt>
  408d08:	cbz	w0, 408d54 <drop_cap@@Base+0x64>
  408d0c:	bl	405030 <cap_get_proc@plt>
  408d10:	cbz	x0, 408d60 <drop_cap@@Base+0x70>
  408d14:	add	x3, x29, #0x1c
  408d18:	mov	w1, #0xc                   	// #12
  408d1c:	mov	w2, #0x2                   	// #2
  408d20:	mov	x19, x0
  408d24:	bl	404f30 <cap_get_flag@plt>
  408d28:	cbnz	w0, 408d60 <drop_cap@@Base+0x70>
  408d2c:	ldr	w8, [x29, #28]
  408d30:	cbnz	w8, 408d4c <drop_cap@@Base+0x5c>
  408d34:	mov	x0, x19
  408d38:	bl	405110 <cap_clear@plt>
  408d3c:	cbnz	w0, 408d60 <drop_cap@@Base+0x70>
  408d40:	mov	x0, x19
  408d44:	bl	404f70 <cap_set_proc@plt>
  408d48:	cbnz	w0, 408d60 <drop_cap@@Base+0x70>
  408d4c:	mov	x0, x19
  408d50:	bl	405150 <cap_free@plt>
  408d54:	ldr	x19, [sp, #16]
  408d58:	ldp	x29, x30, [sp], #32
  408d5c:	ret
  408d60:	mov	w0, #0x1                   	// #1
  408d64:	bl	404d50 <exit@plt>

0000000000408d68 <get_time@@Base>:
  408d68:	sub	sp, sp, #0x40
  408d6c:	str	x21, [sp, #40]
  408d70:	mov	x21, x1
  408d74:	stp	x20, x19, [sp, #48]
  408d78:	mov	x19, x0
  408d7c:	add	x1, sp, #0x8
  408d80:	mov	x0, x21
  408d84:	str	d8, [sp, #16]
  408d88:	stp	x29, x30, [sp, #24]
  408d8c:	add	x29, sp, #0x10
  408d90:	bl	404d80 <strtod@plt>
  408d94:	ldr	x20, [sp, #8]
  408d98:	cmp	x20, x21
  408d9c:	b.eq	408e60 <get_time@@Base+0xf8>  // b.none
  408da0:	ldrb	w8, [x20]
  408da4:	mov	v8.16b, v0.16b
  408da8:	cbz	w8, 408e78 <get_time@@Base+0x110>
  408dac:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408db0:	add	x1, x1, #0x250
  408db4:	mov	x0, x20
  408db8:	bl	404f50 <strcasecmp@plt>
  408dbc:	cbz	w0, 408e68 <get_time@@Base+0x100>
  408dc0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408dc4:	add	x1, x1, #0x267
  408dc8:	mov	x0, x20
  408dcc:	bl	404f50 <strcasecmp@plt>
  408dd0:	cbz	w0, 408e68 <get_time@@Base+0x100>
  408dd4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408dd8:	add	x1, x1, #0x26c
  408ddc:	mov	x0, x20
  408de0:	bl	404f50 <strcasecmp@plt>
  408de4:	cbz	w0, 408e68 <get_time@@Base+0x100>
  408de8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408dec:	add	x1, x1, #0x5fb
  408df0:	mov	x0, x20
  408df4:	bl	404f50 <strcasecmp@plt>
  408df8:	cbz	w0, 408e9c <get_time@@Base+0x134>
  408dfc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408e00:	add	x1, x1, #0x266
  408e04:	mov	x0, x20
  408e08:	bl	404f50 <strcasecmp@plt>
  408e0c:	cbz	w0, 408e9c <get_time@@Base+0x134>
  408e10:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408e14:	add	x1, x1, #0x26b
  408e18:	mov	x0, x20
  408e1c:	bl	404f50 <strcasecmp@plt>
  408e20:	cbz	w0, 408e9c <get_time@@Base+0x134>
  408e24:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408e28:	add	x1, x1, #0x614
  408e2c:	mov	x0, x20
  408e30:	bl	404f50 <strcasecmp@plt>
  408e34:	cbz	w0, 408e78 <get_time@@Base+0x110>
  408e38:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408e3c:	add	x1, x1, #0x5c1
  408e40:	mov	x0, x20
  408e44:	bl	404f50 <strcasecmp@plt>
  408e48:	cbz	w0, 408e78 <get_time@@Base+0x110>
  408e4c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408e50:	add	x1, x1, #0x5c6
  408e54:	mov	x0, x20
  408e58:	bl	404f50 <strcasecmp@plt>
  408e5c:	cbz	w0, 408e78 <get_time@@Base+0x110>
  408e60:	mov	w0, #0xffffffff            	// #-1
  408e64:	b	408e84 <get_time@@Base+0x11c>
  408e68:	mov	x8, #0x848000000000        	// #145685290680320
  408e6c:	movk	x8, #0x412e, lsl #48
  408e70:	fmov	d0, x8
  408e74:	fmul	d8, d8, d0
  408e78:	fcvtzu	w8, d8
  408e7c:	mov	w0, wzr
  408e80:	str	w8, [x19]
  408e84:	ldp	x20, x19, [sp, #48]
  408e88:	ldr	x21, [sp, #40]
  408e8c:	ldp	x29, x30, [sp, #24]
  408e90:	ldr	d8, [sp, #16]
  408e94:	add	sp, sp, #0x40
  408e98:	ret
  408e9c:	mov	x8, #0x400000000000        	// #70368744177664
  408ea0:	movk	x8, #0x408f, lsl #48
  408ea4:	b	408e70 <get_time@@Base+0x108>

0000000000408ea8 <sprint_time@@Base>:
  408ea8:	stp	x29, x30, [sp, #-32]!
  408eac:	mov	w8, #0x4240                	// #16960
  408eb0:	movk	w8, #0xf, lsl #16
  408eb4:	str	x19, [sp, #16]
  408eb8:	mov	x19, x1
  408ebc:	cmp	w0, w8
  408ec0:	ucvtf	d0, w0
  408ec4:	mov	x29, sp
  408ec8:	b.cc	408ee8 <sprint_time@@Base+0x40>  // b.lo, b.ul, b.last
  408ecc:	mov	x8, #0x848000000000        	// #145685290680320
  408ed0:	movk	x8, #0x412e, lsl #48
  408ed4:	fmov	d1, x8
  408ed8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  408edc:	fdiv	d0, d0, d1
  408ee0:	add	x2, x2, #0x5f1
  408ee4:	b	408f0c <sprint_time@@Base+0x64>
  408ee8:	mov	w3, w0
  408eec:	cmp	w0, #0x3e8
  408ef0:	b.cc	408f1c <sprint_time@@Base+0x74>  // b.lo, b.ul, b.last
  408ef4:	mov	x8, #0x400000000000        	// #70368744177664
  408ef8:	movk	x8, #0x408f, lsl #48
  408efc:	fmov	d1, x8
  408f00:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  408f04:	fdiv	d0, d0, d1
  408f08:	add	x2, x2, #0x5f7
  408f0c:	mov	w1, #0x3f                  	// #63
  408f10:	mov	x0, x19
  408f14:	bl	404e30 <snprintf@plt>
  408f18:	b	408f30 <sprint_time@@Base+0x88>
  408f1c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  408f20:	add	x2, x2, #0x5fe
  408f24:	mov	w1, #0x3f                  	// #63
  408f28:	mov	x0, x19
  408f2c:	bl	404e30 <snprintf@plt>
  408f30:	mov	x0, x19
  408f34:	ldr	x19, [sp, #16]
  408f38:	ldp	x29, x30, [sp], #32
  408f3c:	ret

0000000000408f40 <get_time64@@Base>:
  408f40:	sub	sp, sp, #0x40
  408f44:	str	x21, [sp, #40]
  408f48:	mov	x21, x1
  408f4c:	stp	x20, x19, [sp, #48]
  408f50:	mov	x19, x0
  408f54:	add	x1, sp, #0x8
  408f58:	mov	x0, x21
  408f5c:	str	d8, [sp, #16]
  408f60:	stp	x29, x30, [sp, #24]
  408f64:	add	x29, sp, #0x10
  408f68:	bl	404d80 <strtod@plt>
  408f6c:	ldr	x20, [sp, #8]
  408f70:	cmp	x20, x21
  408f74:	b.eq	409074 <get_time64@@Base+0x134>  // b.none
  408f78:	ldrb	w8, [x20]
  408f7c:	mov	v8.16b, v0.16b
  408f80:	cbz	w8, 40908c <get_time64@@Base+0x14c>
  408f84:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408f88:	add	x1, x1, #0x250
  408f8c:	mov	x0, x20
  408f90:	bl	404f50 <strcasecmp@plt>
  408f94:	cbz	w0, 40907c <get_time64@@Base+0x13c>
  408f98:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408f9c:	add	x1, x1, #0x267
  408fa0:	mov	x0, x20
  408fa4:	bl	404f50 <strcasecmp@plt>
  408fa8:	cbz	w0, 40907c <get_time64@@Base+0x13c>
  408fac:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408fb0:	add	x1, x1, #0x26c
  408fb4:	mov	x0, x20
  408fb8:	bl	404f50 <strcasecmp@plt>
  408fbc:	cbz	w0, 40907c <get_time64@@Base+0x13c>
  408fc0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408fc4:	add	x1, x1, #0x5fb
  408fc8:	mov	x0, x20
  408fcc:	bl	404f50 <strcasecmp@plt>
  408fd0:	cbz	w0, 4090b0 <get_time64@@Base+0x170>
  408fd4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408fd8:	add	x1, x1, #0x266
  408fdc:	mov	x0, x20
  408fe0:	bl	404f50 <strcasecmp@plt>
  408fe4:	cbz	w0, 4090b0 <get_time64@@Base+0x170>
  408fe8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  408fec:	add	x1, x1, #0x26b
  408ff0:	mov	x0, x20
  408ff4:	bl	404f50 <strcasecmp@plt>
  408ff8:	cbz	w0, 4090b0 <get_time64@@Base+0x170>
  408ffc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  409000:	add	x1, x1, #0x614
  409004:	mov	x0, x20
  409008:	bl	404f50 <strcasecmp@plt>
  40900c:	cbz	w0, 4090bc <get_time64@@Base+0x17c>
  409010:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  409014:	add	x1, x1, #0x5c1
  409018:	mov	x0, x20
  40901c:	bl	404f50 <strcasecmp@plt>
  409020:	cbz	w0, 4090bc <get_time64@@Base+0x17c>
  409024:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  409028:	add	x1, x1, #0x5c6
  40902c:	mov	x0, x20
  409030:	bl	404f50 <strcasecmp@plt>
  409034:	cbz	w0, 4090bc <get_time64@@Base+0x17c>
  409038:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40903c:	add	x1, x1, #0x61b
  409040:	mov	x0, x20
  409044:	bl	404f50 <strcasecmp@plt>
  409048:	cbz	w0, 40908c <get_time64@@Base+0x14c>
  40904c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  409050:	add	x1, x1, #0x5cc
  409054:	mov	x0, x20
  409058:	bl	404f50 <strcasecmp@plt>
  40905c:	cbz	w0, 40908c <get_time64@@Base+0x14c>
  409060:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  409064:	add	x1, x1, #0x5d1
  409068:	mov	x0, x20
  40906c:	bl	404f50 <strcasecmp@plt>
  409070:	cbz	w0, 40908c <get_time64@@Base+0x14c>
  409074:	mov	w0, #0xffffffff            	// #-1
  409078:	b	409098 <get_time64@@Base+0x158>
  40907c:	mov	x8, #0xcd6500000000        	// #225833675390976
  409080:	movk	x8, #0x41cd, lsl #48
  409084:	fmov	d0, x8
  409088:	fmul	d8, d8, d0
  40908c:	fcvtzs	x8, d8
  409090:	mov	w0, wzr
  409094:	str	x8, [x19]
  409098:	ldp	x20, x19, [sp, #48]
  40909c:	ldr	x21, [sp, #40]
  4090a0:	ldp	x29, x30, [sp, #24]
  4090a4:	ldr	d8, [sp, #16]
  4090a8:	add	sp, sp, #0x40
  4090ac:	ret
  4090b0:	mov	x8, #0x848000000000        	// #145685290680320
  4090b4:	movk	x8, #0x412e, lsl #48
  4090b8:	b	409084 <get_time64@@Base+0x144>
  4090bc:	mov	x8, #0x400000000000        	// #70368744177664
  4090c0:	movk	x8, #0x408f, lsl #48
  4090c4:	b	409084 <get_time64@@Base+0x144>

00000000004090c8 <sprint_time64@@Base>:
  4090c8:	stp	x29, x30, [sp, #-32]!
  4090cc:	mov	w8, #0xca00                	// #51712
  4090d0:	movk	w8, #0x3b9a, lsl #16
  4090d4:	str	x19, [sp, #16]
  4090d8:	mov	x19, x1
  4090dc:	cmp	x0, x8
  4090e0:	scvtf	d0, x0
  4090e4:	mov	x29, sp
  4090e8:	b.lt	409108 <sprint_time64@@Base+0x40>  // b.tstop
  4090ec:	mov	x8, #0xcd6500000000        	// #225833675390976
  4090f0:	movk	x8, #0x41cd, lsl #48
  4090f4:	fmov	d1, x8
  4090f8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  4090fc:	fdiv	d0, d0, d1
  409100:	add	x2, x2, #0x603
  409104:	b	409158 <sprint_time64@@Base+0x90>
  409108:	mov	w8, #0x4240                	// #16960
  40910c:	movk	w8, #0xf, lsl #16
  409110:	mov	x3, x0
  409114:	cmp	x0, x8
  409118:	b.lt	409138 <sprint_time64@@Base+0x70>  // b.tstop
  40911c:	mov	x8, #0x848000000000        	// #145685290680320
  409120:	movk	x8, #0x412e, lsl #48
  409124:	fmov	d1, x8
  409128:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  40912c:	fdiv	d0, d0, d1
  409130:	add	x2, x2, #0x609
  409134:	b	409158 <sprint_time64@@Base+0x90>
  409138:	cmp	x3, #0x3e8
  40913c:	b.lt	409174 <sprint_time64@@Base+0xac>  // b.tstop
  409140:	mov	x8, #0x400000000000        	// #70368744177664
  409144:	movk	x8, #0x408f, lsl #48
  409148:	fmov	d1, x8
  40914c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  409150:	fdiv	d0, d0, d1
  409154:	add	x2, x2, #0x610
  409158:	mov	w1, #0x3f                  	// #63
  40915c:	mov	x0, x19
  409160:	bl	404e30 <snprintf@plt>
  409164:	mov	x0, x19
  409168:	ldr	x19, [sp, #16]
  40916c:	ldp	x29, x30, [sp], #32
  409170:	ret
  409174:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  409178:	add	x2, x2, #0x617
  40917c:	mov	w1, #0x3f                  	// #63
  409180:	mov	x0, x19
  409184:	bl	404e30 <snprintf@plt>
  409188:	b	409164 <sprint_time64@@Base+0x9c>

000000000040918c <namehash@@Base>:
  40918c:	ldrb	w8, [x0]
  409190:	cbz	w8, 4091b0 <namehash@@Base+0x24>
  409194:	add	x9, x0, #0x1
  409198:	mov	w0, #0x1505                	// #5381
  40919c:	add	w10, w0, w0, lsl #5
  4091a0:	add	w0, w10, w8, uxtb
  4091a4:	ldrb	w8, [x9], #1
  4091a8:	cbnz	w8, 40919c <namehash@@Base+0x10>
  4091ac:	ret
  4091b0:	mov	w0, #0x1505                	// #5381
  4091b4:	ret

00000000004091b8 <ll_remember_index@@Base>:
  4091b8:	stp	x29, x30, [sp, #-96]!
  4091bc:	stp	x28, x27, [sp, #16]
  4091c0:	stp	x26, x25, [sp, #32]
  4091c4:	stp	x24, x23, [sp, #48]
  4091c8:	stp	x22, x21, [sp, #64]
  4091cc:	stp	x20, x19, [sp, #80]
  4091d0:	mov	x29, sp
  4091d4:	sub	sp, sp, #0x1b0
  4091d8:	ldrh	w8, [x0, #4]
  4091dc:	and	w9, w8, #0xfffe
  4091e0:	cmp	w9, #0x10
  4091e4:	b.ne	409270 <ll_remember_index@@Base+0xb8>  // b.any
  4091e8:	ldr	w9, [x0]
  4091ec:	mov	x21, x0
  4091f0:	subs	w3, w9, #0x20
  4091f4:	b.cs	409200 <ll_remember_index@@Base+0x48>  // b.hs, b.nlast
  4091f8:	mov	w0, #0xffffffff            	// #-1
  4091fc:	b	409274 <ll_remember_index@@Base+0xbc>
  409200:	ldr	w9, [x21, #20]
  409204:	adrp	x11, 41f000 <memcpy@GLIBC_2.17>
  409208:	add	x11, x11, #0xd60
  40920c:	and	x10, x9, #0x3ff
  409210:	ldr	x19, [x11, x10, lsl #3]
  409214:	cbz	x19, 40922c <ll_remember_index@@Base+0x74>
  409218:	ldr	w10, [x19, #36]
  40921c:	cmp	w10, w9
  409220:	b.eq	40922c <ll_remember_index@@Base+0x74>  // b.none
  409224:	ldr	x19, [x19]
  409228:	cbnz	x19, 409218 <ll_remember_index@@Base+0x60>
  40922c:	cmp	w8, #0x11
  409230:	b.ne	4092cc <ll_remember_index@@Base+0x114>  // b.any
  409234:	cbz	x19, 409270 <ll_remember_index@@Base+0xb8>
  409238:	ldr	x8, [x19, #48]
  40923c:	sub	x0, x8, #0x30
  409240:	cmp	x19, x0
  409244:	b.ne	4092b4 <ll_remember_index@@Base+0xfc>  // b.any
  409248:	ldp	x8, x9, [x19, #16]
  40924c:	str	x8, [x9]
  409250:	cbz	x8, 409258 <ll_remember_index@@Base+0xa0>
  409254:	str	x9, [x8, #8]
  409258:	ldp	x8, x9, [x19]
  40925c:	str	x8, [x9]
  409260:	cbz	x8, 409268 <ll_remember_index@@Base+0xb0>
  409264:	str	x9, [x8, #8]
  409268:	mov	x0, x19
  40926c:	bl	405060 <free@plt>
  409270:	mov	w0, wzr
  409274:	add	sp, sp, #0x1b0
  409278:	ldp	x20, x19, [sp, #80]
  40927c:	ldp	x22, x21, [sp, #64]
  409280:	ldp	x24, x23, [sp, #48]
  409284:	ldp	x26, x25, [sp, #32]
  409288:	ldp	x28, x27, [sp, #16]
  40928c:	ldp	x29, x30, [sp], #96
  409290:	ret
  409294:	ldp	x8, x9, [x8]
  409298:	str	x9, [x8, #8]
  40929c:	str	x8, [x9]
  4092a0:	bl	405060 <free@plt>
  4092a4:	sub	x0, x20, #0x30
  4092a8:	cmp	x19, x0
  4092ac:	mov	x8, x20
  4092b0:	b.eq	409248 <ll_remember_index@@Base+0x90>  // b.none
  4092b4:	ldp	x9, x10, [x8, #-32]
  4092b8:	ldr	x20, [x8]
  4092bc:	str	x9, [x10]
  4092c0:	cbz	x9, 409294 <ll_remember_index@@Base+0xdc>
  4092c4:	str	x10, [x9, #8]
  4092c8:	b	409294 <ll_remember_index@@Base+0xdc>
  4092cc:	add	x2, x21, #0x20
  4092d0:	mov	x0, sp
  4092d4:	mov	w1, #0x35                  	// #53
  4092d8:	mov	w4, #0x8000                	// #32768
  4092dc:	add	x20, x21, #0x10
  4092e0:	bl	40d75c <parse_rtattr_flags@@Base>
  4092e4:	ldr	x22, [sp, #24]
  4092e8:	cbz	x19, 40934c <ll_remember_index@@Base+0x194>
  4092ec:	cbz	x22, 409408 <ll_remember_index@@Base+0x250>
  4092f0:	ldr	w8, [x21, #24]
  4092f4:	add	x21, x22, #0x4
  4092f8:	add	x0, x19, #0x40
  4092fc:	mov	x1, x21
  409300:	str	w8, [x19, #32]
  409304:	bl	405000 <strcmp@plt>
  409308:	cbz	w0, 409408 <ll_remember_index@@Base+0x250>
  40930c:	mov	x8, x19
  409310:	ldr	x9, [x8, #16]!
  409314:	ldr	x10, [x8, #8]
  409318:	str	x9, [x10]
  40931c:	cbz	x9, 409324 <ll_remember_index@@Base+0x16c>
  409320:	str	x10, [x9, #8]
  409324:	ldrb	w9, [x21]
  409328:	cbz	w9, 4093e0 <ll_remember_index@@Base+0x228>
  40932c:	add	x10, x22, #0x5
  409330:	mov	w11, #0x1505                	// #5381
  409334:	add	w11, w11, w11, lsl #5
  409338:	add	w11, w11, w9, uxtb
  40933c:	ldrb	w9, [x10], #1
  409340:	cbnz	w9, 409334 <ll_remember_index@@Base+0x17c>
  409344:	and	w9, w11, #0x3ff
  409348:	b	4093e4 <ll_remember_index@@Base+0x22c>
  40934c:	cbz	x22, 409270 <ll_remember_index@@Base+0xb8>
  409350:	add	x1, x22, #0x4
  409354:	mov	x0, x20
  409358:	mov	x2, xzr
  40935c:	bl	4099e8 <ll_init_map@@Base+0x94>
  409360:	cbz	x0, 409274 <ll_remember_index@@Base+0xbc>
  409364:	ldr	x8, [sp, #416]
  409368:	cbz	x8, 409270 <ll_remember_index@@Base+0xb8>
  40936c:	ldrh	w9, [x8]
  409370:	cmp	w9, #0x8
  409374:	b.cc	409270 <ll_remember_index@@Base+0xb8>  // b.lo, b.ul, b.last
  409378:	mov	x19, x0
  40937c:	add	x21, x8, #0x4
  409380:	sub	w22, w9, #0x4
  409384:	b	4093a4 <ll_remember_index@@Base+0x1ec>
  409388:	add	w8, w8, #0x3
  40938c:	and	w8, w8, #0x1fffc
  409390:	sub	w22, w22, w8
  409394:	mov	w0, wzr
  409398:	cmp	w22, #0x3
  40939c:	add	x21, x21, x8
  4093a0:	b.le	409274 <ll_remember_index@@Base+0xbc>
  4093a4:	ldrh	w8, [x21]
  4093a8:	mov	w0, wzr
  4093ac:	cmp	w8, #0x4
  4093b0:	b.cc	409274 <ll_remember_index@@Base+0xbc>  // b.lo, b.ul, b.last
  4093b4:	cmp	w22, w8
  4093b8:	b.lt	409274 <ll_remember_index@@Base+0xbc>  // b.tstop
  4093bc:	ldrh	w9, [x21, #2]
  4093c0:	cmp	w9, #0x35
  4093c4:	b.ne	409388 <ll_remember_index@@Base+0x1d0>  // b.any
  4093c8:	add	x1, x21, #0x4
  4093cc:	mov	x0, x20
  4093d0:	mov	x2, x19
  4093d4:	bl	4099e8 <ll_init_map@@Base+0x94>
  4093d8:	ldrh	w8, [x21]
  4093dc:	b	409388 <ll_remember_index@@Base+0x1d0>
  4093e0:	mov	w9, #0x105                 	// #261
  4093e4:	adrp	x10, 421000 <stdout@@GLIBC_2.17+0x1cf8>
  4093e8:	add	x10, x10, #0xd60
  4093ec:	add	x9, x10, x9, lsl #3
  4093f0:	ldr	x10, [x9]
  4093f4:	str	x10, [x8]
  4093f8:	cbz	x10, 409400 <ll_remember_index@@Base+0x248>
  4093fc:	str	x8, [x10, #8]
  409400:	str	x8, [x9]
  409404:	str	x9, [x19, #24]
  409408:	ldr	x23, [sp, #416]
  40940c:	cbz	x23, 40954c <ll_remember_index@@Base+0x394>
  409410:	ldrh	w8, [x23]
  409414:	ldr	x22, [x19, #48]
  409418:	cmp	w8, #0x8
  40941c:	sub	x21, x22, #0x30
  409420:	b.cc	40948c <ll_remember_index@@Base+0x2d4>  // b.lo, b.ul, b.last
  409424:	add	x24, x23, #0x4
  409428:	sub	w25, w8, #0x4
  40942c:	mov	x26, x21
  409430:	b	40944c <ll_remember_index@@Base+0x294>
  409434:	add	w8, w27, #0x3
  409438:	and	x8, x8, #0x1fffc
  40943c:	sub	w25, w25, w8
  409440:	cmp	w25, #0x3
  409444:	add	x24, x24, x8
  409448:	b.le	40948c <ll_remember_index@@Base+0x2d4>
  40944c:	ldrh	w27, [x24]
  409450:	cmp	w27, #0x4
  409454:	b.cc	40948c <ll_remember_index@@Base+0x2d4>  // b.lo, b.ul, b.last
  409458:	cmp	w25, w27
  40945c:	b.lt	40948c <ll_remember_index@@Base+0x2d4>  // b.tstop
  409460:	ldrh	w8, [x24, #2]
  409464:	cmp	w8, #0x35
  409468:	b.ne	409434 <ll_remember_index@@Base+0x27c>  // b.any
  40946c:	cbz	x26, 40948c <ll_remember_index@@Base+0x2d4>
  409470:	add	x0, x24, #0x4
  409474:	add	x1, x26, #0x40
  409478:	bl	405000 <strcmp@plt>
  40947c:	cbnz	w0, 40948c <ll_remember_index@@Base+0x2d4>
  409480:	ldr	x8, [x26, #48]
  409484:	sub	x26, x8, #0x30
  409488:	b	409434 <ll_remember_index@@Base+0x27c>
  40948c:	cmp	x19, x21
  409490:	b.ne	4094bc <ll_remember_index@@Base+0x304>  // b.any
  409494:	b	4094d8 <ll_remember_index@@Base+0x320>
  409498:	ldp	x9, x8, [x22]
  40949c:	mov	x0, x21
  4094a0:	str	x8, [x9, #8]
  4094a4:	str	x9, [x8]
  4094a8:	bl	405060 <free@plt>
  4094ac:	sub	x21, x23, #0x30
  4094b0:	cmp	x19, x21
  4094b4:	mov	x22, x23
  4094b8:	b.eq	4094d4 <ll_remember_index@@Base+0x31c>  // b.none
  4094bc:	ldp	x8, x9, [x22, #-32]
  4094c0:	ldr	x23, [x22]
  4094c4:	str	x8, [x9]
  4094c8:	cbz	x8, 409498 <ll_remember_index@@Base+0x2e0>
  4094cc:	str	x9, [x8, #8]
  4094d0:	b	409498 <ll_remember_index@@Base+0x2e0>
  4094d4:	ldr	x23, [sp, #416]
  4094d8:	cbz	x23, 409270 <ll_remember_index@@Base+0xb8>
  4094dc:	ldrh	w8, [x23]
  4094e0:	cmp	w8, #0x8
  4094e4:	b.cc	409270 <ll_remember_index@@Base+0xb8>  // b.lo, b.ul, b.last
  4094e8:	add	x21, x23, #0x4
  4094ec:	sub	w22, w8, #0x4
  4094f0:	b	409510 <ll_remember_index@@Base+0x358>
  4094f4:	add	w8, w8, #0x3
  4094f8:	and	w8, w8, #0x1fffc
  4094fc:	sub	w22, w22, w8
  409500:	mov	w0, wzr
  409504:	cmp	w22, #0x3
  409508:	add	x21, x21, x8
  40950c:	b.le	409274 <ll_remember_index@@Base+0xbc>
  409510:	ldrh	w8, [x21]
  409514:	mov	w0, wzr
  409518:	cmp	w8, #0x4
  40951c:	b.cc	409274 <ll_remember_index@@Base+0xbc>  // b.lo, b.ul, b.last
  409520:	cmp	w22, w8
  409524:	b.lt	409274 <ll_remember_index@@Base+0xbc>  // b.tstop
  409528:	ldrh	w9, [x21, #2]
  40952c:	cmp	w9, #0x35
  409530:	b.ne	4094f4 <ll_remember_index@@Base+0x33c>  // b.any
  409534:	add	x1, x21, #0x4
  409538:	mov	x0, x20
  40953c:	mov	x2, x19
  409540:	bl	4099e8 <ll_init_map@@Base+0x94>
  409544:	ldrh	w8, [x21]
  409548:	b	4094f4 <ll_remember_index@@Base+0x33c>
  40954c:	ldr	x9, [x19, #48]
  409550:	sub	x8, x9, #0x30
  409554:	cmp	x19, x8
  409558:	b.ne	409588 <ll_remember_index@@Base+0x3d0>  // b.any
  40955c:	b	409270 <ll_remember_index@@Base+0xb8>
  409560:	ldp	x9, x10, [x9]
  409564:	mov	x0, x8
  409568:	str	x10, [x9, #8]
  40956c:	str	x9, [x10]
  409570:	bl	405060 <free@plt>
  409574:	sub	x8, x20, #0x30
  409578:	mov	w0, wzr
  40957c:	cmp	x19, x8
  409580:	mov	x9, x20
  409584:	b.eq	409274 <ll_remember_index@@Base+0xbc>  // b.none
  409588:	ldp	x10, x11, [x9, #-32]
  40958c:	ldr	x20, [x9]
  409590:	str	x10, [x11]
  409594:	cbz	x10, 409560 <ll_remember_index@@Base+0x3a8>
  409598:	str	x11, [x10, #8]
  40959c:	b	409560 <ll_remember_index@@Base+0x3a8>

00000000004095a0 <ll_idx_n2a@@Base>:
  4095a0:	stp	x29, x30, [sp, #-32]!
  4095a4:	str	x19, [sp, #16]
  4095a8:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  4095ac:	add	x19, x19, #0xd38
  4095b0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  4095b4:	mov	w3, w0
  4095b8:	add	x2, x2, #0x61e
  4095bc:	mov	w1, #0x10                  	// #16
  4095c0:	mov	x0, x19
  4095c4:	mov	x29, sp
  4095c8:	bl	404e30 <snprintf@plt>
  4095cc:	mov	x0, x19
  4095d0:	ldr	x19, [sp, #16]
  4095d4:	ldp	x29, x30, [sp], #32
  4095d8:	ret

00000000004095dc <ll_index_to_name@@Base>:
  4095dc:	stp	x29, x30, [sp, #-48]!
  4095e0:	str	x21, [sp, #16]
  4095e4:	stp	x20, x19, [sp, #32]
  4095e8:	mov	x29, sp
  4095ec:	cbz	w0, 409688 <ll_index_to_name@@Base+0xac>
  4095f0:	adrp	x21, 41f000 <memcpy@GLIBC_2.17>
  4095f4:	and	w20, w0, #0x3ff
  4095f8:	add	x21, x21, #0xd60
  4095fc:	ldr	x8, [x21, w20, uxtw #3]
  409600:	mov	w19, w0
  409604:	cbz	x8, 40961c <ll_index_to_name@@Base+0x40>
  409608:	ldr	w9, [x8, #36]
  40960c:	cmp	w9, w19
  409610:	b.eq	409694 <ll_index_to_name@@Base+0xb8>  // b.none
  409614:	ldr	x8, [x8]
  409618:	cbnz	x8, 409608 <ll_index_to_name@@Base+0x2c>
  40961c:	mov	x0, xzr
  409620:	mov	w1, w19
  409624:	bl	4096ac <ll_index_to_name@@Base+0xd0>
  409628:	cmp	w0, w19
  40962c:	b.ne	40964c <ll_index_to_name@@Base+0x70>  // b.any
  409630:	ldr	x8, [x21, x20, lsl #3]
  409634:	cbz	x8, 40964c <ll_index_to_name@@Base+0x70>
  409638:	ldr	w9, [x8, #36]
  40963c:	cmp	w9, w19
  409640:	b.eq	409694 <ll_index_to_name@@Base+0xb8>  // b.none
  409644:	ldr	x8, [x8]
  409648:	cbnz	x8, 409638 <ll_index_to_name@@Base+0x5c>
  40964c:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  409650:	add	x20, x20, #0xd48
  409654:	mov	w0, w19
  409658:	mov	x1, x20
  40965c:	bl	404ee0 <if_indextoname@plt>
  409660:	cbnz	x0, 409698 <ll_index_to_name@@Base+0xbc>
  409664:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  409668:	add	x20, x20, #0xd48
  40966c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  409670:	add	x2, x2, #0x61e
  409674:	mov	w1, #0x10                  	// #16
  409678:	mov	x0, x20
  40967c:	mov	w3, w19
  409680:	bl	404e30 <snprintf@plt>
  409684:	b	409698 <ll_index_to_name@@Base+0xbc>
  409688:	adrp	x20, 40e000 <_IO_stdin_used@@Base+0x428>
  40968c:	add	x20, x20, #0x623
  409690:	b	409698 <ll_index_to_name@@Base+0xbc>
  409694:	add	x20, x8, #0x40
  409698:	mov	x0, x20
  40969c:	ldp	x20, x19, [sp, #32]
  4096a0:	ldr	x21, [sp, #16]
  4096a4:	ldp	x29, x30, [sp], #48
  4096a8:	ret
  4096ac:	stp	x29, x30, [sp, #-48]!
  4096b0:	str	x28, [sp, #16]
  4096b4:	stp	x20, x19, [sp, #32]
  4096b8:	mov	x29, sp
  4096bc:	sub	sp, sp, #0x460
  4096c0:	add	x8, sp, #0x40
  4096c4:	mov	w20, w1
  4096c8:	mov	x19, x0
  4096cc:	add	x0, x8, #0x8
  4096d0:	mov	w2, #0x418                 	// #1048
  4096d4:	mov	w1, wzr
  4096d8:	bl	404ef0 <memset@plt>
  4096dc:	mov	x8, #0x20                  	// #32
  4096e0:	movk	x8, #0x12, lsl #32
  4096e4:	movk	x8, #0x1, lsl #48
  4096e8:	movi	v0.2d, #0x0
  4096ec:	mov	x0, sp
  4096f0:	mov	w1, wzr
  4096f4:	str	w20, [sp, #84]
  4096f8:	str	xzr, [sp, #48]
  4096fc:	str	x8, [sp, #64]
  409700:	stp	q0, q0, [sp, #16]
  409704:	str	q0, [sp]
  409708:	bl	40b75c <rtnl_open@@Base>
  40970c:	tbnz	w0, #31, 409798 <ll_index_to_name@@Base+0x1bc>
  409710:	add	x0, sp, #0x40
  409714:	mov	w1, #0x420                 	// #1056
  409718:	mov	w2, #0x1d                  	// #29
  40971c:	mov	w3, #0x9                   	// #9
  409720:	bl	40cf70 <addattr32@@Base>
  409724:	cbz	x19, 409760 <ll_index_to_name@@Base+0x184>
  409728:	mov	x0, x19
  40972c:	bl	407434 <check_ifname@@Base>
  409730:	cmp	w0, #0x0
  409734:	mov	w8, #0x35                  	// #53
  409738:	mov	w9, #0x3                   	// #3
  40973c:	mov	x0, x19
  409740:	csel	w20, w9, w8, eq  // eq = none
  409744:	bl	404d40 <strlen@plt>
  409748:	add	w4, w0, #0x1
  40974c:	add	x0, sp, #0x40
  409750:	mov	w1, #0x420                 	// #1056
  409754:	mov	w2, w20
  409758:	mov	x3, x19
  40975c:	bl	40ce00 <addattr_l@@Base>
  409760:	mov	x0, sp
  409764:	add	x1, sp, #0x40
  409768:	add	x2, x29, #0x18
  40976c:	bl	40c8ec <rtnl_talk_suppress_rtnl_errmsg@@Base>
  409770:	tbnz	w0, #31, 4097a0 <ll_index_to_name@@Base+0x1c4>
  409774:	ldr	x0, [x29, #24]
  409778:	bl	4091b8 <ll_remember_index@@Base>
  40977c:	ldr	x8, [x29, #24]
  409780:	mov	w19, w0
  409784:	cbnz	w0, 40978c <ll_index_to_name@@Base+0x1b0>
  409788:	ldr	w19, [x8, #20]
  40978c:	mov	x0, x8
  409790:	bl	405060 <free@plt>
  409794:	b	4097a4 <ll_index_to_name@@Base+0x1c8>
  409798:	mov	w19, wzr
  40979c:	b	4097ac <ll_index_to_name@@Base+0x1d0>
  4097a0:	mov	w19, wzr
  4097a4:	mov	x0, sp
  4097a8:	bl	40b58c <rtnl_close@@Base>
  4097ac:	mov	w0, w19
  4097b0:	add	sp, sp, #0x460
  4097b4:	ldp	x20, x19, [sp, #32]
  4097b8:	ldr	x28, [sp, #16]
  4097bc:	ldp	x29, x30, [sp], #48
  4097c0:	ret

00000000004097c4 <ll_index_to_type@@Base>:
  4097c4:	cbz	w0, 4097f0 <ll_index_to_type@@Base+0x2c>
  4097c8:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  4097cc:	and	w8, w0, #0x3ff
  4097d0:	add	x9, x9, #0xd60
  4097d4:	ldr	x8, [x9, w8, uxtw #3]
  4097d8:	cbz	x8, 4097f0 <ll_index_to_type@@Base+0x2c>
  4097dc:	ldr	w9, [x8, #36]
  4097e0:	cmp	w9, w0
  4097e4:	b.eq	4097f8 <ll_index_to_type@@Base+0x34>  // b.none
  4097e8:	ldr	x8, [x8]
  4097ec:	cbnz	x8, 4097dc <ll_index_to_type@@Base+0x18>
  4097f0:	mov	w0, #0xffffffff            	// #-1
  4097f4:	ret
  4097f8:	ldrh	w0, [x8, #40]
  4097fc:	ret

0000000000409800 <ll_index_to_flags@@Base>:
  409800:	cbz	w0, 409838 <ll_index_to_flags@@Base+0x38>
  409804:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  409808:	and	w8, w0, #0x3ff
  40980c:	add	x9, x9, #0xd60
  409810:	ldr	x8, [x9, w8, uxtw #3]
  409814:	cbz	x8, 40982c <ll_index_to_flags@@Base+0x2c>
  409818:	ldr	w9, [x8, #36]
  40981c:	cmp	w9, w0
  409820:	b.eq	409834 <ll_index_to_flags@@Base+0x34>  // b.none
  409824:	ldr	x8, [x8]
  409828:	cbnz	x8, 409818 <ll_index_to_flags@@Base+0x18>
  40982c:	mov	w0, #0xffffffff            	// #-1
  409830:	ret
  409834:	ldr	w0, [x8, #32]
  409838:	ret

000000000040983c <ll_name_to_index@@Base>:
  40983c:	sub	sp, sp, #0x30
  409840:	stp	x29, x30, [sp, #16]
  409844:	stp	x20, x19, [sp, #32]
  409848:	add	x29, sp, #0x10
  40984c:	cbz	x0, 4098ec <ll_name_to_index@@Base+0xb0>
  409850:	ldrb	w8, [x0]
  409854:	mov	x19, x0
  409858:	cbz	w8, 40987c <ll_name_to_index@@Base+0x40>
  40985c:	add	x9, x19, #0x1
  409860:	mov	w10, #0x1505                	// #5381
  409864:	add	w10, w10, w10, lsl #5
  409868:	add	w10, w10, w8, uxtb
  40986c:	ldrb	w8, [x9], #1
  409870:	cbnz	w8, 409864 <ll_name_to_index@@Base+0x28>
  409874:	and	w8, w10, #0x3ff
  409878:	b	409880 <ll_name_to_index@@Base+0x44>
  40987c:	mov	w8, #0x105                 	// #261
  409880:	adrp	x9, 421000 <stdout@@GLIBC_2.17+0x1cf8>
  409884:	add	x9, x9, #0xd60
  409888:	ldr	x20, [x9, x8, lsl #3]
  40988c:	cbz	x20, 4098a8 <ll_name_to_index@@Base+0x6c>
  409890:	add	x0, x20, #0x30
  409894:	mov	x1, x19
  409898:	bl	405000 <strcmp@plt>
  40989c:	cbz	w0, 4098e8 <ll_name_to_index@@Base+0xac>
  4098a0:	ldr	x20, [x20]
  4098a4:	cbnz	x20, 409890 <ll_name_to_index@@Base+0x54>
  4098a8:	mov	x0, x19
  4098ac:	mov	w1, wzr
  4098b0:	bl	4096ac <ll_index_to_name@@Base+0xd0>
  4098b4:	cbnz	w0, 4098ec <ll_name_to_index@@Base+0xb0>
  4098b8:	mov	x0, x19
  4098bc:	bl	405160 <if_nametoindex@plt>
  4098c0:	cbnz	w0, 4098ec <ll_name_to_index@@Base+0xb0>
  4098c4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  4098c8:	add	x1, x1, #0x61e
  4098cc:	sub	x2, x29, #0x4
  4098d0:	mov	x0, x19
  4098d4:	bl	405190 <__isoc99_sscanf@plt>
  4098d8:	ldur	w8, [x29, #-4]
  4098dc:	cmp	w0, #0x1
  4098e0:	csel	w0, w8, wzr, eq  // eq = none
  4098e4:	b	4098ec <ll_name_to_index@@Base+0xb0>
  4098e8:	ldr	w0, [x20, #20]
  4098ec:	ldp	x20, x19, [sp, #32]
  4098f0:	ldp	x29, x30, [sp, #16]
  4098f4:	add	sp, sp, #0x30
  4098f8:	ret

00000000004098fc <ll_drop_by_index@@Base>:
  4098fc:	adrp	x10, 41f000 <memcpy@GLIBC_2.17>
  409900:	and	w9, w0, #0x3ff
  409904:	add	x10, x10, #0xd60
  409908:	mov	w8, w0
  40990c:	ldr	x0, [x10, w9, uxtw #3]
  409910:	cbz	x0, 40992c <ll_drop_by_index@@Base+0x30>
  409914:	ldr	w10, [x0, #36]
  409918:	ldr	x9, [x0]
  40991c:	cmp	w10, w8
  409920:	b.eq	409930 <ll_drop_by_index@@Base+0x34>  // b.none
  409924:	mov	x0, x9
  409928:	cbnz	x9, 409914 <ll_drop_by_index@@Base+0x18>
  40992c:	ret
  409930:	ldr	x8, [x0, #8]
  409934:	str	x9, [x8]
  409938:	cbz	x9, 409940 <ll_drop_by_index@@Base+0x44>
  40993c:	str	x8, [x9, #8]
  409940:	ldp	x8, x9, [x0, #16]
  409944:	str	x8, [x9]
  409948:	cbz	x8, 409950 <ll_drop_by_index@@Base+0x54>
  40994c:	str	x9, [x8, #8]
  409950:	b	405060 <free@plt>

0000000000409954 <ll_init_map@@Base>:
  409954:	stp	x29, x30, [sp, #-32]!
  409958:	stp	x20, x19, [sp, #16]
  40995c:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  409960:	ldrb	w8, [x20, #3416]
  409964:	mov	x29, sp
  409968:	tbnz	w8, #0, 4099a0 <ll_init_map@@Base+0x4c>
  40996c:	mov	w1, wzr
  409970:	mov	x19, x0
  409974:	bl	40bc34 <rtnl_linkdump_req@@Base>
  409978:	tbnz	w0, #31, 4099ac <ll_init_map@@Base+0x58>
  40997c:	adrp	x1, 41e000 <_IO_stdin_used@@Base+0x10428>
  409980:	ldr	x1, [x1, #4008]
  409984:	mov	x0, x19
  409988:	mov	x2, xzr
  40998c:	mov	w3, wzr
  409990:	bl	40c1a4 <rtnl_dump_filter_nc@@Base>
  409994:	tbnz	w0, #31, 4099c0 <ll_init_map@@Base+0x6c>
  409998:	mov	w8, #0x1                   	// #1
  40999c:	strb	w8, [x20, #3416]
  4099a0:	ldp	x20, x19, [sp, #16]
  4099a4:	ldp	x29, x30, [sp], #32
  4099a8:	ret
  4099ac:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  4099b0:	add	x0, x0, #0x625
  4099b4:	bl	404d60 <perror@plt>
  4099b8:	mov	w0, #0x1                   	// #1
  4099bc:	bl	404d50 <exit@plt>
  4099c0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  4099c4:	ldr	x8, [x8, #3992]
  4099c8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  4099cc:	add	x0, x0, #0x2
  4099d0:	mov	w1, #0x10                  	// #16
  4099d4:	ldr	x3, [x8]
  4099d8:	mov	w2, #0x1                   	// #1
  4099dc:	bl	4050c0 <fwrite@plt>
  4099e0:	mov	w0, #0x1                   	// #1
  4099e4:	bl	404d50 <exit@plt>
  4099e8:	stp	x29, x30, [sp, #-48]!
  4099ec:	stp	x22, x21, [sp, #16]
  4099f0:	mov	x22, x0
  4099f4:	mov	x0, x1
  4099f8:	stp	x20, x19, [sp, #32]
  4099fc:	mov	x29, sp
  409a00:	mov	x21, x2
  409a04:	mov	x20, x1
  409a08:	bl	404d40 <strlen@plt>
  409a0c:	add	x0, x0, #0x41
  409a10:	bl	404e80 <malloc@plt>
  409a14:	mov	x19, x0
  409a18:	cbz	x0, 409aec <ll_init_map@@Base+0x198>
  409a1c:	ldr	w8, [x22, #4]
  409a20:	add	x0, x19, #0x40
  409a24:	mov	x1, x20
  409a28:	str	w8, [x19, #36]
  409a2c:	bl	4050f0 <strcpy@plt>
  409a30:	ldrh	w8, [x22, #2]
  409a34:	strh	w8, [x19, #40]
  409a38:	ldr	w8, [x22, #8]
  409a3c:	str	w8, [x19, #32]
  409a40:	cbz	x21, 409a84 <ll_init_map@@Base+0x130>
  409a44:	ldr	x9, [x21, #56]
  409a48:	add	x8, x19, #0x30
  409a4c:	add	x10, x21, #0x30
  409a50:	str	x8, [x21, #56]
  409a54:	stp	x10, x9, [x19, #48]
  409a58:	str	x8, [x9]
  409a5c:	ldrb	w8, [x20]
  409a60:	cbz	w8, 409ac0 <ll_init_map@@Base+0x16c>
  409a64:	add	x9, x20, #0x1
  409a68:	mov	w10, #0x1505                	// #5381
  409a6c:	add	w10, w10, w10, lsl #5
  409a70:	add	w10, w10, w8, uxtb
  409a74:	ldrb	w8, [x9], #1
  409a78:	cbnz	w8, 409a6c <ll_init_map@@Base+0x118>
  409a7c:	and	w8, w10, #0x3ff
  409a80:	b	409ac4 <ll_init_map@@Base+0x170>
  409a84:	ldr	w8, [x22, #4]
  409a88:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  409a8c:	add	x9, x9, #0xd60
  409a90:	and	x8, x8, #0x3ff
  409a94:	add	x8, x9, x8, lsl #3
  409a98:	ldr	x9, [x8]
  409a9c:	str	x9, [x19]
  409aa0:	cbz	x9, 409aa8 <ll_init_map@@Base+0x154>
  409aa4:	str	x19, [x9, #8]
  409aa8:	str	x19, [x8]
  409aac:	str	x8, [x19, #8]
  409ab0:	add	x8, x19, #0x30
  409ab4:	stp	x8, x8, [x19, #48]
  409ab8:	ldrb	w8, [x20]
  409abc:	cbnz	w8, 409a64 <ll_init_map@@Base+0x110>
  409ac0:	mov	w8, #0x105                 	// #261
  409ac4:	adrp	x9, 421000 <stdout@@GLIBC_2.17+0x1cf8>
  409ac8:	add	x9, x9, #0xd60
  409acc:	add	x8, x9, x8, lsl #3
  409ad0:	ldr	x10, [x8]
  409ad4:	mov	x9, x19
  409ad8:	str	x10, [x9, #16]!
  409adc:	cbz	x10, 409ae4 <ll_init_map@@Base+0x190>
  409ae0:	str	x9, [x10, #8]
  409ae4:	str	x9, [x8]
  409ae8:	str	x8, [x19, #24]
  409aec:	mov	x0, x19
  409af0:	ldp	x20, x19, [sp, #32]
  409af4:	ldp	x22, x21, [sp, #16]
  409af8:	ldp	x29, x30, [sp], #48
  409afc:	ret

0000000000409b00 <ll_addr_n2a@@Base>:
  409b00:	stp	x29, x30, [sp, #-80]!
  409b04:	stp	x22, x21, [sp, #48]
  409b08:	stp	x20, x19, [sp, #64]
  409b0c:	mov	w19, w4
  409b10:	mov	x20, x3
  409b14:	mov	w22, w1
  409b18:	cmp	w1, #0x10
  409b1c:	mov	x21, x0
  409b20:	stp	x26, x25, [sp, #16]
  409b24:	stp	x24, x23, [sp, #32]
  409b28:	mov	x29, sp
  409b2c:	b.eq	409b60 <ll_addr_n2a@@Base+0x60>  // b.none
  409b30:	cmp	w22, #0x4
  409b34:	b.ne	409b98 <ll_addr_n2a@@Base+0x98>  // b.any
  409b38:	sub	w8, w2, #0x300
  409b3c:	cmp	w8, #0xa
  409b40:	b.hi	409b98 <ll_addr_n2a@@Base+0x98>  // b.pmore
  409b44:	mov	w9, #0x1                   	// #1
  409b48:	lsl	w8, w9, w8
  409b4c:	mov	w9, #0x501                 	// #1281
  409b50:	tst	w8, w9
  409b54:	b.eq	409b98 <ll_addr_n2a@@Base+0x98>  // b.none
  409b58:	mov	w0, #0x2                   	// #2
  409b5c:	b	409b74 <ll_addr_n2a@@Base+0x74>
  409b60:	cmp	w2, #0x337
  409b64:	b.eq	409b70 <ll_addr_n2a@@Base+0x70>  // b.none
  409b68:	cmp	w2, #0x301
  409b6c:	b.ne	409b98 <ll_addr_n2a@@Base+0x98>  // b.any
  409b70:	mov	w0, #0xa                   	// #10
  409b74:	mov	x1, x21
  409b78:	mov	x2, x20
  409b7c:	mov	w3, w19
  409b80:	ldp	x20, x19, [sp, #64]
  409b84:	ldp	x22, x21, [sp, #48]
  409b88:	ldp	x24, x23, [sp, #32]
  409b8c:	ldp	x26, x25, [sp, #16]
  409b90:	ldp	x29, x30, [sp], #80
  409b94:	b	405260 <inet_ntop@plt>
  409b98:	ldrb	w3, [x21]
  409b9c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  409ba0:	sxtw	x1, w19
  409ba4:	add	x2, x2, #0x63f
  409ba8:	mov	x0, x20
  409bac:	bl	404e30 <snprintf@plt>
  409bb0:	cmp	w22, #0x2
  409bb4:	b.lt	409c08 <ll_addr_n2a@@Base+0x108>  // b.tstop
  409bb8:	cmp	w19, #0x3
  409bbc:	b.lt	409c08 <ll_addr_n2a@@Base+0x108>  // b.tstop
  409bc0:	mov	w23, w22
  409bc4:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x428>
  409bc8:	sub	w24, w19, #0x2
  409bcc:	mov	w25, #0x2                   	// #2
  409bd0:	mov	w26, #0x1                   	// #1
  409bd4:	add	x22, x22, #0x63e
  409bd8:	ldrb	w3, [x21, x26]
  409bdc:	add	x0, x20, x25
  409be0:	sxtw	x1, w24
  409be4:	mov	x2, x22
  409be8:	bl	404e30 <snprintf@plt>
  409bec:	add	x26, x26, #0x1
  409bf0:	cmp	x26, x23
  409bf4:	b.cs	409c08 <ll_addr_n2a@@Base+0x108>  // b.hs, b.nlast
  409bf8:	add	x25, x25, #0x3
  409bfc:	cmp	w25, w19
  409c00:	sub	w24, w24, #0x3
  409c04:	b.lt	409bd8 <ll_addr_n2a@@Base+0xd8>  // b.tstop
  409c08:	mov	x0, x20
  409c0c:	ldp	x20, x19, [sp, #64]
  409c10:	ldp	x22, x21, [sp, #48]
  409c14:	ldp	x24, x23, [sp, #32]
  409c18:	ldp	x26, x25, [sp, #16]
  409c1c:	ldp	x29, x30, [sp], #80
  409c20:	ret

0000000000409c24 <ll_addr_a2n@@Base>:
  409c24:	sub	sp, sp, #0x160
  409c28:	stp	x22, x21, [sp, #320]
  409c2c:	stp	x20, x19, [sp, #336]
  409c30:	mov	w21, w1
  409c34:	mov	x20, x0
  409c38:	mov	w1, #0x2e                  	// #46
  409c3c:	mov	x0, x2
  409c40:	stp	x29, x30, [sp, #272]
  409c44:	str	x28, [sp, #288]
  409c48:	stp	x24, x23, [sp, #304]
  409c4c:	add	x29, sp, #0x110
  409c50:	mov	x19, x2
  409c54:	bl	4050a0 <strchr@plt>
  409c58:	cbz	x0, 409c80 <ll_addr_a2n@@Base+0x5c>
  409c5c:	add	x0, sp, #0x8
  409c60:	mov	w2, #0x2                   	// #2
  409c64:	mov	x1, x19
  409c68:	bl	406a24 <get_addr_1@@Base>
  409c6c:	cbnz	w0, 409d04 <ll_addr_a2n@@Base+0xe0>
  409c70:	cmp	w21, #0x4
  409c74:	b.ge	409cf4 <ll_addr_a2n@@Base+0xd0>  // b.tcont
  409c78:	mov	w0, #0xffffffff            	// #-1
  409c7c:	b	409d30 <ll_addr_a2n@@Base+0x10c>
  409c80:	cmp	w21, #0x1
  409c84:	b.lt	409d28 <ll_addr_a2n@@Base+0x104>  // b.tstop
  409c88:	mov	w24, w21
  409c8c:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x428>
  409c90:	mov	x23, xzr
  409c94:	add	x21, x21, #0x65d
  409c98:	mov	w1, #0x3a                  	// #58
  409c9c:	mov	x0, x19
  409ca0:	bl	4050a0 <strchr@plt>
  409ca4:	mov	x22, x0
  409ca8:	cbz	x0, 409cb0 <ll_addr_a2n@@Base+0x8c>
  409cac:	strb	wzr, [x22], #1
  409cb0:	add	x2, sp, #0x8
  409cb4:	mov	x0, x19
  409cb8:	mov	x1, x21
  409cbc:	bl	405190 <__isoc99_sscanf@plt>
  409cc0:	cmp	w0, #0x1
  409cc4:	b.ne	409d04 <ll_addr_a2n@@Base+0xe0>  // b.any
  409cc8:	ldr	w8, [sp, #8]
  409ccc:	cmp	w8, #0xff
  409cd0:	b.hi	409d04 <ll_addr_a2n@@Base+0xe0>  // b.pmore
  409cd4:	strb	w8, [x20, x23]
  409cd8:	cbz	x22, 409d2c <ll_addr_a2n@@Base+0x108>
  409cdc:	add	x23, x23, #0x1
  409ce0:	cmp	x24, x23
  409ce4:	mov	x19, x22
  409ce8:	b.ne	409c98 <ll_addr_a2n@@Base+0x74>  // b.any
  409cec:	mov	w23, w24
  409cf0:	b	409d2c <ll_addr_a2n@@Base+0x108>
  409cf4:	ldr	w8, [sp, #16]
  409cf8:	mov	w0, #0x4                   	// #4
  409cfc:	str	w8, [x20]
  409d00:	b	409d30 <ll_addr_a2n@@Base+0x10c>
  409d04:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  409d08:	ldr	x8, [x8, #3992]
  409d0c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  409d10:	add	x1, x1, #0x644
  409d14:	mov	x2, x19
  409d18:	ldr	x0, [x8]
  409d1c:	bl	405240 <fprintf@plt>
  409d20:	mov	w0, #0xffffffff            	// #-1
  409d24:	b	409d30 <ll_addr_a2n@@Base+0x10c>
  409d28:	mov	w23, wzr
  409d2c:	add	w0, w23, #0x1
  409d30:	ldp	x20, x19, [sp, #336]
  409d34:	ldp	x22, x21, [sp, #320]
  409d38:	ldp	x24, x23, [sp, #304]
  409d3c:	ldr	x28, [sp, #288]
  409d40:	ldp	x29, x30, [sp, #272]
  409d44:	add	sp, sp, #0x160
  409d48:	ret

0000000000409d4c <new_json_obj@@Base>:
  409d4c:	stp	x29, x30, [sp, #-32]!
  409d50:	str	x19, [sp, #16]
  409d54:	mov	x29, sp
  409d58:	cbz	w0, 409da0 <new_json_obj@@Base+0x54>
  409d5c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  409d60:	ldr	x8, [x8, #4016]
  409d64:	ldr	x0, [x8]
  409d68:	bl	40ab9c <jsonw_new@@Base>
  409d6c:	adrp	x19, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409d70:	str	x0, [x19, #3424]
  409d74:	cbz	x0, 409dac <new_json_obj@@Base+0x60>
  409d78:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  409d7c:	ldr	x8, [x8, #4056]
  409d80:	ldr	w8, [x8]
  409d84:	cbz	w8, 409d94 <new_json_obj@@Base+0x48>
  409d88:	mov	w1, #0x1                   	// #1
  409d8c:	bl	40ac38 <jsonw_pretty@@Base>
  409d90:	ldr	x0, [x19, #3424]
  409d94:	ldr	x19, [sp, #16]
  409d98:	ldp	x29, x30, [sp], #32
  409d9c:	b	40b078 <jsonw_start_array@@Base>
  409da0:	ldr	x19, [sp, #16]
  409da4:	ldp	x29, x30, [sp], #32
  409da8:	ret
  409dac:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  409db0:	add	x0, x0, #0x67f
  409db4:	bl	404d60 <perror@plt>
  409db8:	mov	w0, #0x1                   	// #1
  409dbc:	bl	404d50 <exit@plt>

0000000000409dc0 <delete_json_obj@@Base>:
  409dc0:	stp	x29, x30, [sp, #-16]!
  409dc4:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409dc8:	ldr	x0, [x8, #3424]
  409dcc:	mov	x29, sp
  409dd0:	cbz	x0, 409de8 <delete_json_obj@@Base+0x28>
  409dd4:	bl	40b0e4 <jsonw_end_array@@Base>
  409dd8:	adrp	x0, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409ddc:	add	x0, x0, #0xd60
  409de0:	ldp	x29, x30, [sp], #16
  409de4:	b	40abd0 <jsonw_destroy@@Base>
  409de8:	ldp	x29, x30, [sp], #16
  409dec:	ret

0000000000409df0 <new_json_obj_plain@@Base>:
  409df0:	stp	x29, x30, [sp, #-16]!
  409df4:	mov	x29, sp
  409df8:	cbz	w0, 409e34 <new_json_obj_plain@@Base+0x44>
  409dfc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  409e00:	ldr	x8, [x8, #4016]
  409e04:	ldr	x0, [x8]
  409e08:	bl	40ab9c <jsonw_new@@Base>
  409e0c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409e10:	str	x0, [x8, #3424]
  409e14:	cbz	x0, 409e3c <new_json_obj_plain@@Base+0x4c>
  409e18:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  409e1c:	ldr	x8, [x8, #4056]
  409e20:	ldr	w8, [x8]
  409e24:	cbz	w8, 409e34 <new_json_obj_plain@@Base+0x44>
  409e28:	mov	w1, #0x1                   	// #1
  409e2c:	ldp	x29, x30, [sp], #16
  409e30:	b	40ac38 <jsonw_pretty@@Base>
  409e34:	ldp	x29, x30, [sp], #16
  409e38:	ret
  409e3c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  409e40:	add	x0, x0, #0x67f
  409e44:	bl	404d60 <perror@plt>
  409e48:	mov	w0, #0x1                   	// #1
  409e4c:	bl	404d50 <exit@plt>

0000000000409e50 <delete_json_obj_plain@@Base>:
  409e50:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409e54:	ldr	x8, [x8, #3424]
  409e58:	cbz	x8, 409e68 <delete_json_obj_plain@@Base+0x18>
  409e5c:	adrp	x0, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409e60:	add	x0, x0, #0xd60
  409e64:	b	40abd0 <jsonw_destroy@@Base>
  409e68:	ret

0000000000409e6c <is_json_context@@Base>:
  409e6c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409e70:	ldr	x8, [x8, #3424]
  409e74:	cmp	x8, #0x0
  409e78:	cset	w0, ne  // ne = any
  409e7c:	ret

0000000000409e80 <get_json_writer@@Base>:
  409e80:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409e84:	ldr	x0, [x8, #3424]
  409e88:	ret

0000000000409e8c <open_json_object@@Base>:
  409e8c:	stp	x29, x30, [sp, #-32]!
  409e90:	str	x19, [sp, #16]
  409e94:	adrp	x19, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409e98:	ldr	x8, [x19, #3424]
  409e9c:	mov	x29, sp
  409ea0:	cbz	x8, 409ec8 <open_json_object@@Base+0x3c>
  409ea4:	mov	x1, x0
  409ea8:	cbz	x0, 409eb8 <open_json_object@@Base+0x2c>
  409eac:	mov	x0, x8
  409eb0:	bl	40ac44 <jsonw_name@@Base>
  409eb4:	ldr	x8, [x19, #3424]
  409eb8:	ldr	x19, [sp, #16]
  409ebc:	mov	x0, x8
  409ec0:	ldp	x29, x30, [sp], #32
  409ec4:	b	40af60 <jsonw_start_object@@Base>
  409ec8:	ldr	x19, [sp, #16]
  409ecc:	ldp	x29, x30, [sp], #32
  409ed0:	ret

0000000000409ed4 <close_json_object@@Base>:
  409ed4:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409ed8:	ldr	x0, [x8, #3424]
  409edc:	cbz	x0, 409ee4 <close_json_object@@Base+0x10>
  409ee0:	b	40afb0 <jsonw_end_object@@Base>
  409ee4:	ret

0000000000409ee8 <open_json_array@@Base>:
  409ee8:	stp	x29, x30, [sp, #-32]!
  409eec:	str	x19, [sp, #16]
  409ef0:	adrp	x19, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409ef4:	ldr	x8, [x19, #3424]
  409ef8:	tst	w0, #0x6
  409efc:	mov	x29, sp
  409f00:	b.eq	409f28 <open_json_array@@Base+0x40>  // b.none
  409f04:	cbz	x8, 409f2c <open_json_array@@Base+0x44>
  409f08:	cbz	x1, 409f18 <open_json_array@@Base+0x30>
  409f0c:	mov	x0, x8
  409f10:	bl	40ac44 <jsonw_name@@Base>
  409f14:	ldr	x8, [x19, #3424]
  409f18:	ldr	x19, [sp, #16]
  409f1c:	mov	x0, x8
  409f20:	ldp	x29, x30, [sp], #32
  409f24:	b	40b078 <jsonw_start_array@@Base>
  409f28:	cbnz	x8, 409f4c <open_json_array@@Base+0x64>
  409f2c:	mov	w8, #0x5                   	// #5
  409f30:	tst	w0, w8
  409f34:	b.eq	409f4c <open_json_array@@Base+0x64>  // b.none
  409f38:	ldr	x19, [sp, #16]
  409f3c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  409f40:	add	x0, x0, #0x24f
  409f44:	ldp	x29, x30, [sp], #32
  409f48:	b	4051d0 <printf@plt>
  409f4c:	ldr	x19, [sp, #16]
  409f50:	ldp	x29, x30, [sp], #32
  409f54:	ret

0000000000409f58 <close_json_array@@Base>:
  409f58:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409f5c:	ldr	x8, [x8, #3424]
  409f60:	tst	w0, #0x6
  409f64:	b.eq	409f74 <close_json_array@@Base+0x1c>  // b.none
  409f68:	cbz	x8, 409f78 <close_json_array@@Base+0x20>
  409f6c:	mov	x0, x8
  409f70:	b	40b0e4 <jsonw_end_array@@Base>
  409f74:	cbnz	x8, 409f90 <close_json_array@@Base+0x38>
  409f78:	mov	w8, #0x5                   	// #5
  409f7c:	tst	w0, w8
  409f80:	b.eq	409f90 <close_json_array@@Base+0x38>  // b.none
  409f84:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  409f88:	add	x0, x0, #0x24f
  409f8c:	b	4051d0 <printf@plt>
  409f90:	ret

0000000000409f94 <print_color_int@@Base>:
  409f94:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409f98:	ldr	x8, [x8, #3424]
  409f9c:	tst	w0, #0x6
  409fa0:	b.eq	409fbc <print_color_int@@Base+0x28>  // b.none
  409fa4:	cbz	x8, 409fc0 <print_color_int@@Base+0x2c>
  409fa8:	mov	x0, x8
  409fac:	cbz	x2, 409fe8 <print_color_int@@Base+0x54>
  409fb0:	mov	x1, x2
  409fb4:	mov	w2, w4
  409fb8:	b	40b468 <jsonw_int_field@@Base>
  409fbc:	cbnz	x8, 409fe4 <print_color_int@@Base+0x50>
  409fc0:	mov	w8, #0x5                   	// #5
  409fc4:	tst	w0, w8
  409fc8:	b.eq	409fe4 <print_color_int@@Base+0x50>  // b.none
  409fcc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  409fd0:	ldr	x8, [x8, #4016]
  409fd4:	mov	x2, x3
  409fd8:	mov	w3, w4
  409fdc:	ldr	x0, [x8]
  409fe0:	b	40a850 <color_fprintf@@Base>
  409fe4:	ret
  409fe8:	mov	w1, w4
  409fec:	b	40b214 <jsonw_int@@Base>

0000000000409ff0 <print_color_s64@@Base>:
  409ff0:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  409ff4:	ldr	x8, [x8, #3424]
  409ff8:	tst	w0, #0x6
  409ffc:	b.eq	40a018 <print_color_s64@@Base+0x28>  // b.none
  40a000:	cbz	x8, 40a01c <print_color_s64@@Base+0x2c>
  40a004:	mov	x0, x8
  40a008:	cbz	x2, 40a044 <print_color_s64@@Base+0x54>
  40a00c:	mov	x1, x2
  40a010:	mov	x2, x4
  40a014:	b	40b49c <jsonw_s64_field@@Base>
  40a018:	cbnz	x8, 40a040 <print_color_s64@@Base+0x50>
  40a01c:	mov	w8, #0x5                   	// #5
  40a020:	tst	w0, w8
  40a024:	b.eq	40a040 <print_color_s64@@Base+0x50>  // b.none
  40a028:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a02c:	ldr	x8, [x8, #4016]
  40a030:	mov	x2, x3
  40a034:	mov	x3, x4
  40a038:	ldr	x0, [x8]
  40a03c:	b	40a850 <color_fprintf@@Base>
  40a040:	ret
  40a044:	mov	x1, x4
  40a048:	b	40b224 <jsonw_s64@@Base>

000000000040a04c <print_color_hhu@@Base>:
  40a04c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a050:	ldr	x8, [x8, #3424]
  40a054:	tst	w0, #0x6
  40a058:	b.eq	40a074 <print_color_hhu@@Base+0x28>  // b.none
  40a05c:	cbz	x8, 40a078 <print_color_hhu@@Base+0x2c>
  40a060:	mov	x0, x8
  40a064:	cbz	x2, 40a0a4 <print_color_hhu@@Base+0x58>
  40a068:	mov	x1, x2
  40a06c:	mov	w2, w4
  40a070:	b	40b398 <jsonw_hhu_field@@Base>
  40a074:	cbnz	x8, 40a0a0 <print_color_hhu@@Base+0x54>
  40a078:	mov	w8, #0x5                   	// #5
  40a07c:	tst	w0, w8
  40a080:	b.eq	40a0a0 <print_color_hhu@@Base+0x54>  // b.none
  40a084:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a088:	ldr	x8, [x8, #4016]
  40a08c:	mov	x2, x3
  40a090:	ldr	x0, [x8]
  40a094:	and	w8, w4, #0xff
  40a098:	mov	w3, w8
  40a09c:	b	40a850 <color_fprintf@@Base>
  40a0a0:	ret
  40a0a4:	mov	w1, w4
  40a0a8:	b	40b1a4 <jsonw_hhu@@Base>

000000000040a0ac <print_color_hu@@Base>:
  40a0ac:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a0b0:	ldr	x8, [x8, #3424]
  40a0b4:	tst	w0, #0x6
  40a0b8:	b.eq	40a0d4 <print_color_hu@@Base+0x28>  // b.none
  40a0bc:	cbz	x8, 40a0d8 <print_color_hu@@Base+0x2c>
  40a0c0:	mov	x0, x8
  40a0c4:	cbz	x2, 40a104 <print_color_hu@@Base+0x58>
  40a0c8:	mov	x1, x2
  40a0cc:	mov	w2, w4
  40a0d0:	b	40b3cc <jsonw_hu_field@@Base>
  40a0d4:	cbnz	x8, 40a100 <print_color_hu@@Base+0x54>
  40a0d8:	mov	w8, #0x5                   	// #5
  40a0dc:	tst	w0, w8
  40a0e0:	b.eq	40a100 <print_color_hu@@Base+0x54>  // b.none
  40a0e4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a0e8:	ldr	x8, [x8, #4016]
  40a0ec:	mov	x2, x3
  40a0f0:	ldr	x0, [x8]
  40a0f4:	and	w8, w4, #0xffff
  40a0f8:	mov	w3, w8
  40a0fc:	b	40a850 <color_fprintf@@Base>
  40a100:	ret
  40a104:	mov	w1, w4
  40a108:	b	40b1b4 <jsonw_hu@@Base>

000000000040a10c <print_color_uint@@Base>:
  40a10c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a110:	ldr	x8, [x8, #3424]
  40a114:	tst	w0, #0x6
  40a118:	b.eq	40a134 <print_color_uint@@Base+0x28>  // b.none
  40a11c:	cbz	x8, 40a138 <print_color_uint@@Base+0x2c>
  40a120:	mov	x0, x8
  40a124:	cbz	x2, 40a160 <print_color_uint@@Base+0x54>
  40a128:	mov	x1, x2
  40a12c:	mov	w2, w4
  40a130:	b	40b2fc <jsonw_uint_field@@Base>
  40a134:	cbnz	x8, 40a15c <print_color_uint@@Base+0x50>
  40a138:	mov	w8, #0x5                   	// #5
  40a13c:	tst	w0, w8
  40a140:	b.eq	40a15c <print_color_uint@@Base+0x50>  // b.none
  40a144:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a148:	ldr	x8, [x8, #4016]
  40a14c:	mov	x2, x3
  40a150:	mov	w3, w4
  40a154:	ldr	x0, [x8]
  40a158:	b	40a850 <color_fprintf@@Base>
  40a15c:	ret
  40a160:	mov	w1, w4
  40a164:	b	40b1c4 <jsonw_uint@@Base>

000000000040a168 <print_color_u64@@Base>:
  40a168:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a16c:	ldr	x8, [x8, #3424]
  40a170:	tst	w0, #0x6
  40a174:	b.eq	40a190 <print_color_u64@@Base+0x28>  // b.none
  40a178:	cbz	x8, 40a194 <print_color_u64@@Base+0x2c>
  40a17c:	mov	x0, x8
  40a180:	cbz	x2, 40a1bc <print_color_u64@@Base+0x54>
  40a184:	mov	x1, x2
  40a188:	mov	x2, x4
  40a18c:	b	40b330 <jsonw_u64_field@@Base>
  40a190:	cbnz	x8, 40a1b8 <print_color_u64@@Base+0x50>
  40a194:	mov	w8, #0x5                   	// #5
  40a198:	tst	w0, w8
  40a19c:	b.eq	40a1b8 <print_color_u64@@Base+0x50>  // b.none
  40a1a0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a1a4:	ldr	x8, [x8, #4016]
  40a1a8:	mov	x2, x3
  40a1ac:	mov	x3, x4
  40a1b0:	ldr	x0, [x8]
  40a1b4:	b	40a850 <color_fprintf@@Base>
  40a1b8:	ret
  40a1bc:	mov	x1, x4
  40a1c0:	b	40b1d4 <jsonw_u64@@Base>

000000000040a1c4 <print_color_luint@@Base>:
  40a1c4:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a1c8:	ldr	x8, [x8, #3424]
  40a1cc:	tst	w0, #0x6
  40a1d0:	b.eq	40a1ec <print_color_luint@@Base+0x28>  // b.none
  40a1d4:	cbz	x8, 40a1f0 <print_color_luint@@Base+0x2c>
  40a1d8:	mov	x0, x8
  40a1dc:	cbz	x2, 40a218 <print_color_luint@@Base+0x54>
  40a1e0:	mov	x1, x2
  40a1e4:	mov	x2, x4
  40a1e8:	b	40b400 <jsonw_luint_field@@Base>
  40a1ec:	cbnz	x8, 40a214 <print_color_luint@@Base+0x50>
  40a1f0:	mov	w8, #0x5                   	// #5
  40a1f4:	tst	w0, w8
  40a1f8:	b.eq	40a214 <print_color_luint@@Base+0x50>  // b.none
  40a1fc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a200:	ldr	x8, [x8, #4016]
  40a204:	mov	x2, x3
  40a208:	mov	x3, x4
  40a20c:	ldr	x0, [x8]
  40a210:	b	40a850 <color_fprintf@@Base>
  40a214:	ret
  40a218:	mov	x1, x4
  40a21c:	b	40b1f4 <jsonw_luint@@Base>

000000000040a220 <print_color_lluint@@Base>:
  40a220:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a224:	ldr	x8, [x8, #3424]
  40a228:	tst	w0, #0x6
  40a22c:	b.eq	40a248 <print_color_lluint@@Base+0x28>  // b.none
  40a230:	cbz	x8, 40a24c <print_color_lluint@@Base+0x2c>
  40a234:	mov	x0, x8
  40a238:	cbz	x2, 40a274 <print_color_lluint@@Base+0x54>
  40a23c:	mov	x1, x2
  40a240:	mov	x2, x4
  40a244:	b	40b434 <jsonw_lluint_field@@Base>
  40a248:	cbnz	x8, 40a270 <print_color_lluint@@Base+0x50>
  40a24c:	mov	w8, #0x5                   	// #5
  40a250:	tst	w0, w8
  40a254:	b.eq	40a270 <print_color_lluint@@Base+0x50>  // b.none
  40a258:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a25c:	ldr	x8, [x8, #4016]
  40a260:	mov	x2, x3
  40a264:	mov	x3, x4
  40a268:	ldr	x0, [x8]
  40a26c:	b	40a850 <color_fprintf@@Base>
  40a270:	ret
  40a274:	mov	x1, x4
  40a278:	b	40b204 <jsonw_lluint@@Base>

000000000040a27c <print_color_float@@Base>:
  40a27c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a280:	ldr	x8, [x8, #3424]
  40a284:	tst	w0, #0x6
  40a288:	b.eq	40a2a0 <print_color_float@@Base+0x24>  // b.none
  40a28c:	cbz	x8, 40a2a4 <print_color_float@@Base+0x28>
  40a290:	mov	x0, x8
  40a294:	cbz	x2, 40a2c8 <print_color_float@@Base+0x4c>
  40a298:	mov	x1, x2
  40a29c:	b	40b2c0 <jsonw_float_field@@Base>
  40a2a0:	cbnz	x8, 40a2c4 <print_color_float@@Base+0x48>
  40a2a4:	mov	w8, #0x5                   	// #5
  40a2a8:	tst	w0, w8
  40a2ac:	b.eq	40a2c4 <print_color_float@@Base+0x48>  // b.none
  40a2b0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a2b4:	ldr	x8, [x8, #4016]
  40a2b8:	mov	x2, x3
  40a2bc:	ldr	x0, [x8]
  40a2c0:	b	40a850 <color_fprintf@@Base>
  40a2c4:	ret
  40a2c8:	b	40b198 <jsonw_float@@Base>

000000000040a2cc <print_uint_name_value@@Base>:
  40a2cc:	sub	sp, sp, #0x60
  40a2d0:	stp	x20, x19, [sp, #80]
  40a2d4:	mov	x20, x0
  40a2d8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  40a2dc:	mov	w19, w1
  40a2e0:	add	x2, x2, #0x660
  40a2e4:	mov	x0, sp
  40a2e8:	mov	w1, #0x40                  	// #64
  40a2ec:	mov	x3, x20
  40a2f0:	stp	x29, x30, [sp, #64]
  40a2f4:	add	x29, sp, #0x40
  40a2f8:	bl	404e30 <snprintf@plt>
  40a2fc:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a300:	ldr	x0, [x8, #3424]
  40a304:	cbz	x0, 40a31c <print_uint_name_value@@Base+0x50>
  40a308:	cbz	x20, 40a33c <print_uint_name_value@@Base+0x70>
  40a30c:	mov	x1, x20
  40a310:	mov	w2, w19
  40a314:	bl	40b2fc <jsonw_uint_field@@Base>
  40a318:	b	40a344 <print_uint_name_value@@Base+0x78>
  40a31c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a320:	ldr	x8, [x8, #4016]
  40a324:	mov	x2, sp
  40a328:	mov	w1, #0x6                   	// #6
  40a32c:	mov	w3, w19
  40a330:	ldr	x0, [x8]
  40a334:	bl	40a850 <color_fprintf@@Base>
  40a338:	b	40a344 <print_uint_name_value@@Base+0x78>
  40a33c:	mov	w1, w19
  40a340:	bl	40b1c4 <jsonw_uint@@Base>
  40a344:	ldp	x20, x19, [sp, #80]
  40a348:	ldp	x29, x30, [sp, #64]
  40a34c:	add	sp, sp, #0x60
  40a350:	ret

000000000040a354 <print_string_name_value@@Base>:
  40a354:	sub	sp, sp, #0x60
  40a358:	stp	x20, x19, [sp, #80]
  40a35c:	mov	x20, x0
  40a360:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  40a364:	mov	x19, x1
  40a368:	add	x2, x2, #0x667
  40a36c:	mov	x0, sp
  40a370:	mov	w1, #0x40                  	// #64
  40a374:	mov	x3, x20
  40a378:	stp	x29, x30, [sp, #64]
  40a37c:	add	x29, sp, #0x40
  40a380:	bl	404e30 <snprintf@plt>
  40a384:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a388:	ldr	x0, [x8, #3424]
  40a38c:	cbz	x0, 40a3a4 <print_string_name_value@@Base+0x50>
  40a390:	cbz	x20, 40a3c4 <print_string_name_value@@Base+0x70>
  40a394:	cbnz	x19, 40a3c4 <print_string_name_value@@Base+0x70>
  40a398:	mov	x1, x20
  40a39c:	bl	40ac44 <jsonw_name@@Base>
  40a3a0:	b	40a3e4 <print_string_name_value@@Base+0x90>
  40a3a4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a3a8:	ldr	x8, [x8, #4016]
  40a3ac:	mov	x2, sp
  40a3b0:	mov	w1, #0x6                   	// #6
  40a3b4:	mov	x3, x19
  40a3b8:	ldr	x0, [x8]
  40a3bc:	bl	40a850 <color_fprintf@@Base>
  40a3c0:	b	40a3e4 <print_string_name_value@@Base+0x90>
  40a3c4:	cbnz	x20, 40a3d8 <print_string_name_value@@Base+0x84>
  40a3c8:	cbz	x19, 40a3d8 <print_string_name_value@@Base+0x84>
  40a3cc:	mov	x1, x19
  40a3d0:	bl	40b128 <jsonw_string@@Base>
  40a3d4:	b	40a3e4 <print_string_name_value@@Base+0x90>
  40a3d8:	mov	x1, x20
  40a3dc:	mov	x2, x19
  40a3e0:	bl	40b234 <jsonw_string_field@@Base>
  40a3e4:	ldp	x20, x19, [sp, #80]
  40a3e8:	ldp	x29, x30, [sp, #64]
  40a3ec:	add	sp, sp, #0x60
  40a3f0:	ret

000000000040a3f4 <print_color_string@@Base>:
  40a3f4:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a3f8:	ldr	x8, [x8, #3424]
  40a3fc:	tst	w0, #0x6
  40a400:	b.eq	40a41c <print_color_string@@Base+0x28>  // b.none
  40a404:	cbz	x8, 40a420 <print_color_string@@Base+0x2c>
  40a408:	cbz	x2, 40a448 <print_color_string@@Base+0x54>
  40a40c:	cbnz	x4, 40a448 <print_color_string@@Base+0x54>
  40a410:	mov	x0, x8
  40a414:	mov	x1, x2
  40a418:	b	40ac44 <jsonw_name@@Base>
  40a41c:	cbnz	x8, 40a444 <print_color_string@@Base+0x50>
  40a420:	mov	w8, #0x5                   	// #5
  40a424:	tst	w0, w8
  40a428:	b.eq	40a444 <print_color_string@@Base+0x50>  // b.none
  40a42c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a430:	ldr	x8, [x8, #4016]
  40a434:	mov	x2, x3
  40a438:	mov	x3, x4
  40a43c:	ldr	x0, [x8]
  40a440:	b	40a850 <color_fprintf@@Base>
  40a444:	ret
  40a448:	cbnz	x2, 40a45c <print_color_string@@Base+0x68>
  40a44c:	cbz	x4, 40a45c <print_color_string@@Base+0x68>
  40a450:	mov	x0, x8
  40a454:	mov	x1, x4
  40a458:	b	40b128 <jsonw_string@@Base>
  40a45c:	mov	x0, x8
  40a460:	mov	x1, x2
  40a464:	mov	x2, x4
  40a468:	b	40b234 <jsonw_string_field@@Base>

000000000040a46c <print_color_bool@@Base>:
  40a46c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a470:	ldr	x8, [x8, #3424]
  40a474:	tst	w0, #0x6
  40a478:	b.eq	40a498 <print_color_bool@@Base+0x2c>  // b.none
  40a47c:	cbz	x8, 40a49c <print_color_bool@@Base+0x30>
  40a480:	cbz	x2, 40a4dc <print_color_bool@@Base+0x70>
  40a484:	and	w9, w4, #0x1
  40a488:	mov	x0, x8
  40a48c:	mov	x1, x2
  40a490:	mov	w2, w9
  40a494:	b	40b278 <jsonw_bool_field@@Base>
  40a498:	cbnz	x8, 40a4d8 <print_color_bool@@Base+0x6c>
  40a49c:	mov	w8, #0x5                   	// #5
  40a4a0:	tst	w0, w8
  40a4a4:	b.eq	40a4d8 <print_color_bool@@Base+0x6c>  // b.none
  40a4a8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a4ac:	ldr	x8, [x8, #4016]
  40a4b0:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  40a4b4:	add	x9, x9, #0x66e
  40a4b8:	tst	w4, #0x1
  40a4bc:	ldr	x0, [x8]
  40a4c0:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x428>
  40a4c4:	add	x8, x8, #0x673
  40a4c8:	csel	x8, x9, x8, ne  // ne = any
  40a4cc:	mov	x2, x3
  40a4d0:	mov	x3, x8
  40a4d4:	b	40a850 <color_fprintf@@Base>
  40a4d8:	ret
  40a4dc:	and	w1, w4, #0x1
  40a4e0:	mov	x0, x8
  40a4e4:	b	40b168 <jsonw_bool@@Base>

000000000040a4e8 <print_color_0xhex@@Base>:
  40a4e8:	sub	sp, sp, #0x60
  40a4ec:	stp	x29, x30, [sp, #64]
  40a4f0:	stp	x20, x19, [sp, #80]
  40a4f4:	adrp	x20, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a4f8:	ldr	x8, [x20, #3424]
  40a4fc:	tst	w0, #0x6
  40a500:	add	x29, sp, #0x40
  40a504:	b.eq	40a544 <print_color_0xhex@@Base+0x5c>  // b.none
  40a508:	cbz	x8, 40a544 <print_color_0xhex@@Base+0x5c>
  40a50c:	mov	x19, x2
  40a510:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  40a514:	add	x2, x2, #0x679
  40a518:	mov	x0, sp
  40a51c:	mov	w1, #0x40                  	// #64
  40a520:	mov	x3, x4
  40a524:	bl	404e30 <snprintf@plt>
  40a528:	ldr	x0, [x20, #3424]
  40a52c:	cbz	x0, 40a580 <print_color_0xhex@@Base+0x98>
  40a530:	cbz	x19, 40a578 <print_color_0xhex@@Base+0x90>
  40a534:	mov	x2, sp
  40a538:	mov	x1, x19
  40a53c:	bl	40b234 <jsonw_string_field@@Base>
  40a540:	b	40a580 <print_color_0xhex@@Base+0x98>
  40a544:	mov	w9, #0x5                   	// #5
  40a548:	tst	w0, w9
  40a54c:	b.eq	40a580 <print_color_0xhex@@Base+0x98>  // b.none
  40a550:	cbnz	x8, 40a580 <print_color_0xhex@@Base+0x98>
  40a554:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a558:	ldr	x8, [x8, #4016]
  40a55c:	ldp	x20, x19, [sp, #80]
  40a560:	ldp	x29, x30, [sp, #64]
  40a564:	mov	x2, x3
  40a568:	ldr	x0, [x8]
  40a56c:	mov	x3, x4
  40a570:	add	sp, sp, #0x60
  40a574:	b	40a850 <color_fprintf@@Base>
  40a578:	mov	x1, sp
  40a57c:	bl	40b128 <jsonw_string@@Base>
  40a580:	ldp	x20, x19, [sp, #80]
  40a584:	ldp	x29, x30, [sp, #64]
  40a588:	add	sp, sp, #0x60
  40a58c:	ret

000000000040a590 <print_color_hex@@Base>:
  40a590:	sub	sp, sp, #0x60
  40a594:	stp	x29, x30, [sp, #64]
  40a598:	stp	x20, x19, [sp, #80]
  40a59c:	adrp	x20, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a5a0:	ldr	x8, [x20, #3424]
  40a5a4:	tst	w0, #0x6
  40a5a8:	add	x29, sp, #0x40
  40a5ac:	b.eq	40a5e8 <print_color_hex@@Base+0x58>  // b.none
  40a5b0:	cbz	x8, 40a5e8 <print_color_hex@@Base+0x58>
  40a5b4:	mov	x19, x2
  40a5b8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  40a5bc:	add	x2, x2, #0x65d
  40a5c0:	mov	x0, sp
  40a5c4:	mov	w1, #0x40                  	// #64
  40a5c8:	mov	w3, w4
  40a5cc:	bl	404e30 <snprintf@plt>
  40a5d0:	ldr	x0, [x20, #3424]
  40a5d4:	cbz	x19, 40a61c <print_color_hex@@Base+0x8c>
  40a5d8:	mov	x2, sp
  40a5dc:	mov	x1, x19
  40a5e0:	bl	40b234 <jsonw_string_field@@Base>
  40a5e4:	b	40a624 <print_color_hex@@Base+0x94>
  40a5e8:	mov	w9, #0x5                   	// #5
  40a5ec:	tst	w0, w9
  40a5f0:	b.eq	40a624 <print_color_hex@@Base+0x94>  // b.none
  40a5f4:	cbnz	x8, 40a624 <print_color_hex@@Base+0x94>
  40a5f8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a5fc:	ldr	x8, [x8, #4016]
  40a600:	ldp	x20, x19, [sp, #80]
  40a604:	ldp	x29, x30, [sp, #64]
  40a608:	mov	x2, x3
  40a60c:	ldr	x0, [x8]
  40a610:	mov	w3, w4
  40a614:	add	sp, sp, #0x60
  40a618:	b	40a850 <color_fprintf@@Base>
  40a61c:	mov	x1, sp
  40a620:	bl	40b128 <jsonw_string@@Base>
  40a624:	ldp	x20, x19, [sp, #80]
  40a628:	ldp	x29, x30, [sp, #64]
  40a62c:	add	sp, sp, #0x60
  40a630:	ret

000000000040a634 <print_color_null@@Base>:
  40a634:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a638:	ldr	x8, [x8, #3424]
  40a63c:	tst	w0, #0x6
  40a640:	b.eq	40a658 <print_color_null@@Base+0x24>  // b.none
  40a644:	cbz	x8, 40a65c <print_color_null@@Base+0x28>
  40a648:	mov	x0, x8
  40a64c:	cbz	x2, 40a684 <print_color_null@@Base+0x50>
  40a650:	mov	x1, x2
  40a654:	b	40b4d0 <jsonw_null_field@@Base>
  40a658:	cbnz	x8, 40a680 <print_color_null@@Base+0x4c>
  40a65c:	mov	w8, #0x5                   	// #5
  40a660:	tst	w0, w8
  40a664:	b.eq	40a680 <print_color_null@@Base+0x4c>  // b.none
  40a668:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a66c:	ldr	x8, [x8, #4016]
  40a670:	mov	x2, x3
  40a674:	mov	x3, x4
  40a678:	ldr	x0, [x8]
  40a67c:	b	40a850 <color_fprintf@@Base>
  40a680:	ret
  40a684:	b	40b18c <jsonw_null@@Base>

000000000040a688 <print_nl@@Base>:
  40a688:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a68c:	ldr	x8, [x8, #3424]
  40a690:	cbz	x8, 40a698 <print_nl@@Base+0x10>
  40a694:	ret
  40a698:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a69c:	ldr	x8, [x8, #4048]
  40a6a0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40a6a4:	add	x0, x0, #0x24f
  40a6a8:	ldr	x1, [x8]
  40a6ac:	b	4051d0 <printf@plt>

000000000040a6b0 <check_enable_color@@Base>:
  40a6b0:	stp	x29, x30, [sp, #-32]!
  40a6b4:	str	x19, [sp, #16]
  40a6b8:	mov	w19, wzr
  40a6bc:	mov	x29, sp
  40a6c0:	cbz	w0, 40a74c <check_enable_color@@Base+0x9c>
  40a6c4:	cbnz	w1, 40a74c <check_enable_color@@Base+0x9c>
  40a6c8:	cmp	w0, #0x2
  40a6cc:	b.eq	40a6e8 <check_enable_color@@Base+0x38>  // b.none
  40a6d0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a6d4:	ldr	x8, [x8, #4016]
  40a6d8:	ldr	x0, [x8]
  40a6dc:	bl	404e40 <fileno@plt>
  40a6e0:	bl	405120 <isatty@plt>
  40a6e4:	cbz	w0, 40a738 <check_enable_color@@Base+0x88>
  40a6e8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40a6ec:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a6f0:	mov	w19, #0x1                   	// #1
  40a6f4:	add	x0, x0, #0x6a4
  40a6f8:	strb	w19, [x8, #3432]
  40a6fc:	bl	405200 <getenv@plt>
  40a700:	cbz	x0, 40a74c <check_enable_color@@Base+0x9c>
  40a704:	mov	w1, #0x3b                  	// #59
  40a708:	bl	404fb0 <strrchr@plt>
  40a70c:	cbz	x0, 40a748 <check_enable_color@@Base+0x98>
  40a710:	ldrb	w8, [x0, #1]
  40a714:	sub	w9, w8, #0x30
  40a718:	cmp	w9, #0x7
  40a71c:	b.cs	40a740 <check_enable_color@@Base+0x90>  // b.hs, b.nlast
  40a720:	ldrb	w8, [x0, #2]
  40a724:	mov	w19, #0x1                   	// #1
  40a728:	cbnz	w8, 40a74c <check_enable_color@@Base+0x9c>
  40a72c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a730:	strb	w19, [x8, #3436]
  40a734:	b	40a74c <check_enable_color@@Base+0x9c>
  40a738:	mov	w19, wzr
  40a73c:	b	40a74c <check_enable_color@@Base+0x9c>
  40a740:	cmp	w8, #0x38
  40a744:	b.eq	40a720 <check_enable_color@@Base+0x70>  // b.none
  40a748:	mov	w19, #0x1                   	// #1
  40a74c:	mov	w0, w19
  40a750:	ldr	x19, [sp, #16]
  40a754:	ldp	x29, x30, [sp], #32
  40a758:	ret

000000000040a75c <matches_color@@Base>:
  40a75c:	stp	x29, x30, [sp, #-48]!
  40a760:	str	x21, [sp, #16]
  40a764:	stp	x20, x19, [sp, #32]
  40a768:	mov	x29, sp
  40a76c:	cbz	x1, 40a7d0 <matches_color@@Base+0x74>
  40a770:	mov	x19, x1
  40a774:	mov	x20, x0
  40a778:	bl	404d40 <strlen@plt>
  40a77c:	add	x9, x0, #0x10
  40a780:	mov	x8, sp
  40a784:	and	x9, x9, #0xfffffffffffffff0
  40a788:	sub	x21, x8, x9
  40a78c:	add	x2, x0, #0x1
  40a790:	mov	sp, x21
  40a794:	mov	x0, x21
  40a798:	mov	x1, x20
  40a79c:	bl	404d10 <memcpy@plt>
  40a7a0:	mov	w1, #0x3d                  	// #61
  40a7a4:	mov	x0, x21
  40a7a8:	bl	405170 <strchrnul@plt>
  40a7ac:	ldrb	w8, [x0]
  40a7b0:	mov	x20, x0
  40a7b4:	cbz	w8, 40a7bc <matches_color@@Base+0x60>
  40a7b8:	strb	wzr, [x20], #1
  40a7bc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40a7c0:	add	x1, x1, #0x68b
  40a7c4:	mov	x0, x21
  40a7c8:	bl	40764c <matches@@Base>
  40a7cc:	tbz	w0, #0, 40a7d8 <matches_color@@Base+0x7c>
  40a7d0:	mov	w0, wzr
  40a7d4:	b	40a830 <matches_color@@Base+0xd4>
  40a7d8:	ldrb	w8, [x20]
  40a7dc:	cbz	w8, 40a824 <matches_color@@Base+0xc8>
  40a7e0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40a7e4:	add	x1, x1, #0x692
  40a7e8:	mov	x0, x20
  40a7ec:	bl	405000 <strcmp@plt>
  40a7f0:	cbz	w0, 40a824 <matches_color@@Base+0xc8>
  40a7f4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40a7f8:	add	x1, x1, #0x699
  40a7fc:	mov	x0, x20
  40a800:	bl	405000 <strcmp@plt>
  40a804:	cbz	w0, 40a844 <matches_color@@Base+0xe8>
  40a808:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40a80c:	add	x1, x1, #0x69e
  40a810:	mov	x0, x20
  40a814:	bl	405000 <strcmp@plt>
  40a818:	cbnz	w0, 40a7d0 <matches_color@@Base+0x74>
  40a81c:	str	wzr, [x19]
  40a820:	b	40a82c <matches_color@@Base+0xd0>
  40a824:	mov	w8, #0x2                   	// #2
  40a828:	str	w8, [x19]
  40a82c:	mov	w0, #0x1                   	// #1
  40a830:	mov	sp, x29
  40a834:	ldp	x20, x19, [sp, #32]
  40a838:	ldr	x21, [sp, #16]
  40a83c:	ldp	x29, x30, [sp], #48
  40a840:	ret
  40a844:	mov	w0, #0x1                   	// #1
  40a848:	str	w0, [x19]
  40a84c:	b	40a830 <matches_color@@Base+0xd4>

000000000040a850 <color_fprintf@@Base>:
  40a850:	sub	sp, sp, #0x130
  40a854:	stp	x29, x30, [sp, #240]
  40a858:	add	x29, sp, #0xf0
  40a85c:	mov	x8, #0xffffffffffffffd8    	// #-40
  40a860:	mov	x9, sp
  40a864:	sub	x10, x29, #0x68
  40a868:	stp	x20, x19, [sp, #288]
  40a86c:	mov	x20, x2
  40a870:	mov	x19, x0
  40a874:	movk	x8, #0xff80, lsl #32
  40a878:	add	x11, x29, #0x40
  40a87c:	cmp	w1, #0x6
  40a880:	add	x9, x9, #0x80
  40a884:	add	x10, x10, #0x28
  40a888:	str	x28, [sp, #256]
  40a88c:	stp	x22, x21, [sp, #272]
  40a890:	stp	x3, x4, [x29, #-104]
  40a894:	stp	x5, x6, [x29, #-88]
  40a898:	stur	x7, [x29, #-72]
  40a89c:	stp	q1, q2, [sp, #16]
  40a8a0:	stp	q3, q4, [sp, #48]
  40a8a4:	str	q0, [sp]
  40a8a8:	stp	q5, q6, [sp, #80]
  40a8ac:	str	q7, [sp, #112]
  40a8b0:	stp	x9, x8, [x29, #-16]
  40a8b4:	stp	x11, x10, [x29, #-32]
  40a8b8:	b.eq	40a948 <color_fprintf@@Base+0xf8>  // b.none
  40a8bc:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a8c0:	ldrb	w8, [x8, #3432]
  40a8c4:	cbz	w8, 40a948 <color_fprintf@@Base+0xf8>
  40a8c8:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3cf8>
  40a8cc:	ldrb	w8, [x8, #3436]
  40a8d0:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  40a8d4:	adrp	x10, 40e000 <_IO_stdin_used@@Base+0x428>
  40a8d8:	add	x9, x9, #0x734
  40a8dc:	add	x10, x10, #0x718
  40a8e0:	cmp	w8, #0x0
  40a8e4:	csel	x8, x10, x9, ne  // ne = any
  40a8e8:	ldr	w8, [x8, w1, uxtw #2]
  40a8ec:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40a8f0:	add	x9, x9, #0xd00
  40a8f4:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x428>
  40a8f8:	ldr	x2, [x9, x8, lsl #3]
  40a8fc:	add	x21, x21, #0x24f
  40a900:	mov	x0, x19
  40a904:	mov	x1, x21
  40a908:	bl	405240 <fprintf@plt>
  40a90c:	ldp	q0, q1, [x29, #-32]
  40a910:	mov	w22, w0
  40a914:	sub	x2, x29, #0x40
  40a918:	mov	x0, x19
  40a91c:	mov	x1, x20
  40a920:	stp	q0, q1, [x29, #-64]
  40a924:	bl	4051c0 <vfprintf@plt>
  40a928:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  40a92c:	add	w20, w0, w22
  40a930:	add	x2, x2, #0x710
  40a934:	mov	x0, x19
  40a938:	mov	x1, x21
  40a93c:	bl	405240 <fprintf@plt>
  40a940:	add	w0, w20, w0
  40a944:	b	40a960 <color_fprintf@@Base+0x110>
  40a948:	ldp	q0, q1, [x29, #-32]
  40a94c:	sub	x2, x29, #0x40
  40a950:	mov	x0, x19
  40a954:	mov	x1, x20
  40a958:	stp	q0, q1, [x29, #-64]
  40a95c:	bl	4051c0 <vfprintf@plt>
  40a960:	ldp	x20, x19, [sp, #288]
  40a964:	ldp	x22, x21, [sp, #272]
  40a968:	ldr	x28, [sp, #256]
  40a96c:	ldp	x29, x30, [sp, #240]
  40a970:	add	sp, sp, #0x130
  40a974:	ret

000000000040a978 <ifa_family_color@@Base>:
  40a978:	and	w8, w0, #0xff
  40a97c:	mov	w9, #0x6                   	// #6
  40a980:	mov	w10, #0x3                   	// #3
  40a984:	cmp	w8, #0xa
  40a988:	csel	w9, w10, w9, eq  // eq = none
  40a98c:	cmp	w8, #0x2
  40a990:	csel	w0, w8, w9, eq  // eq = none
  40a994:	ret

000000000040a998 <oper_state_color@@Base>:
  40a998:	and	w8, w0, #0xff
  40a99c:	mov	w9, #0x5                   	// #5
  40a9a0:	cmp	w8, #0x2
  40a9a4:	cinc	w9, w9, ne  // ne = any
  40a9a8:	cmp	w8, #0x6
  40a9ac:	mov	w8, #0x4                   	// #4
  40a9b0:	csel	w0, w8, w9, eq  // eq = none
  40a9b4:	ret

000000000040a9b8 <mpls_ntop@@Base>:
  40a9b8:	stp	x29, x30, [sp, #-80]!
  40a9bc:	stp	x26, x25, [sp, #16]
  40a9c0:	stp	x24, x23, [sp, #32]
  40a9c4:	stp	x22, x21, [sp, #48]
  40a9c8:	stp	x20, x19, [sp, #64]
  40a9cc:	mov	x29, sp
  40a9d0:	mov	x21, x3
  40a9d4:	mov	x19, x2
  40a9d8:	mov	x22, x1
  40a9dc:	mov	w20, w0
  40a9e0:	bl	4051f0 <__errno_location@plt>
  40a9e4:	cmp	w20, #0x1c
  40a9e8:	mov	x20, x0
  40a9ec:	b.ne	40aa80 <mpls_ntop@@Base+0xc8>  // b.any
  40a9f0:	str	wzr, [x20]
  40a9f4:	ldr	w8, [x22]
  40a9f8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x428>
  40a9fc:	add	x2, x2, #0x664
  40aa00:	mov	x0, x19
  40aa04:	rev	w26, w8
  40aa08:	lsr	w3, w26, #12
  40aa0c:	mov	x1, x21
  40aa10:	bl	404e30 <snprintf@plt>
  40aa14:	sxtw	x8, w0
  40aa18:	cmp	x8, x21
  40aa1c:	b.cs	40aa88 <mpls_ntop@@Base+0xd0>  // b.hs, b.nlast
  40aa20:	add	x24, x22, #0x4
  40aa24:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x428>
  40aa28:	add	x22, x22, #0x664
  40aa2c:	mov	w25, #0x2f                  	// #47
  40aa30:	mov	x23, x19
  40aa34:	b	40aa64 <mpls_ntop@@Base+0xac>
  40aa38:	mov	x21, xzr
  40aa3c:	ldr	w8, [x24], #4
  40aa40:	mov	x0, x23
  40aa44:	mov	x1, x21
  40aa48:	mov	x2, x22
  40aa4c:	rev	w26, w8
  40aa50:	lsr	w3, w26, #12
  40aa54:	bl	404e30 <snprintf@plt>
  40aa58:	sxtw	x8, w0
  40aa5c:	cmp	x21, x8
  40aa60:	b.ls	40aa88 <mpls_ntop@@Base+0xd0>  // b.plast
  40aa64:	tbnz	w26, #8, 40aa94 <mpls_ntop@@Base+0xdc>
  40aa68:	subs	x9, x21, x8
  40aa6c:	add	x23, x23, x8
  40aa70:	b.eq	40aa38 <mpls_ntop@@Base+0x80>  // b.none
  40aa74:	strb	w25, [x23], #1
  40aa78:	sub	x21, x9, #0x1
  40aa7c:	b	40aa3c <mpls_ntop@@Base+0x84>
  40aa80:	mov	w8, #0x61                  	// #97
  40aa84:	b	40aa8c <mpls_ntop@@Base+0xd4>
  40aa88:	mov	w8, #0xfffffff9            	// #-7
  40aa8c:	mov	x19, xzr
  40aa90:	str	w8, [x20]
  40aa94:	mov	x0, x19
  40aa98:	ldp	x20, x19, [sp, #64]
  40aa9c:	ldp	x22, x21, [sp, #48]
  40aaa0:	ldp	x24, x23, [sp, #32]
  40aaa4:	ldp	x26, x25, [sp, #16]
  40aaa8:	ldp	x29, x30, [sp], #80
  40aaac:	ret

000000000040aab0 <mpls_pton@@Base>:
  40aab0:	sub	sp, sp, #0x40
  40aab4:	stp	x29, x30, [sp, #16]
  40aab8:	stp	x22, x21, [sp, #32]
  40aabc:	stp	x20, x19, [sp, #48]
  40aac0:	add	x29, sp, #0x10
  40aac4:	mov	x21, x3
  40aac8:	mov	x19, x2
  40aacc:	mov	x20, x1
  40aad0:	mov	w22, w0
  40aad4:	bl	4051f0 <__errno_location@plt>
  40aad8:	cmp	w22, #0x1c
  40aadc:	b.ne	40ab68 <mpls_pton@@Base+0xb8>  // b.any
  40aae0:	lsr	x21, x21, #2
  40aae4:	str	wzr, [x0]
  40aae8:	cbz	w21, 40ab40 <mpls_pton@@Base+0x90>
  40aaec:	add	x1, sp, #0x8
  40aaf0:	mov	x0, x20
  40aaf4:	mov	w2, wzr
  40aaf8:	bl	404d30 <strtoul@plt>
  40aafc:	mov	x8, x0
  40ab00:	lsr	x9, x0, #20
  40ab04:	mov	w0, wzr
  40ab08:	cbnz	x9, 40ab74 <mpls_pton@@Base+0xc4>
  40ab0c:	ldr	x9, [sp, #8]
  40ab10:	cmp	x9, x20
  40ab14:	b.eq	40ab74 <mpls_pton@@Base+0xc4>  // b.none
  40ab18:	lsl	w8, w8, #12
  40ab1c:	rev	w8, w8
  40ab20:	str	w8, [x19]
  40ab24:	ldrb	w10, [x9]
  40ab28:	cmp	w10, #0x2f
  40ab2c:	b.ne	40ab88 <mpls_pton@@Base+0xd8>  // b.any
  40ab30:	add	x20, x9, #0x1
  40ab34:	subs	w21, w21, #0x1
  40ab38:	add	x19, x19, #0x4
  40ab3c:	b.ne	40aaec <mpls_pton@@Base+0x3c>  // b.any
  40ab40:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40ab44:	ldr	x8, [x8, #3992]
  40ab48:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40ab4c:	add	x0, x0, #0x750
  40ab50:	mov	w1, #0x18                  	// #24
  40ab54:	ldr	x3, [x8]
  40ab58:	mov	w2, #0x1                   	// #1
  40ab5c:	bl	4050c0 <fwrite@plt>
  40ab60:	mov	w0, wzr
  40ab64:	b	40ab74 <mpls_pton@@Base+0xc4>
  40ab68:	mov	w8, #0x61                  	// #97
  40ab6c:	str	w8, [x0]
  40ab70:	mov	w0, #0xffffffff            	// #-1
  40ab74:	ldp	x20, x19, [sp, #48]
  40ab78:	ldp	x22, x21, [sp, #32]
  40ab7c:	ldp	x29, x30, [sp, #16]
  40ab80:	add	sp, sp, #0x40
  40ab84:	ret
  40ab88:	cbnz	w10, 40ab60 <mpls_pton@@Base+0xb0>
  40ab8c:	orr	w8, w8, #0x10000
  40ab90:	str	w8, [x19]
  40ab94:	mov	w0, #0x1                   	// #1
  40ab98:	b	40ab74 <mpls_pton@@Base+0xc4>

000000000040ab9c <jsonw_new@@Base>:
  40ab9c:	stp	x29, x30, [sp, #-32]!
  40aba0:	str	x19, [sp, #16]
  40aba4:	mov	x19, x0
  40aba8:	mov	w0, #0x10                  	// #16
  40abac:	mov	x29, sp
  40abb0:	bl	404e80 <malloc@plt>
  40abb4:	cbz	x0, 40abc4 <jsonw_new@@Base+0x28>
  40abb8:	str	x19, [x0]
  40abbc:	str	wzr, [x0, #8]
  40abc0:	strh	wzr, [x0, #12]
  40abc4:	ldr	x19, [sp, #16]
  40abc8:	ldp	x29, x30, [sp], #32
  40abcc:	ret

000000000040abd0 <jsonw_destroy@@Base>:
  40abd0:	stp	x29, x30, [sp, #-32]!
  40abd4:	stp	x20, x19, [sp, #16]
  40abd8:	ldr	x20, [x0]
  40abdc:	mov	x29, sp
  40abe0:	ldr	w8, [x20, #8]
  40abe4:	cbnz	w8, 40ac18 <jsonw_destroy@@Base+0x48>
  40abe8:	ldr	x1, [x20]
  40abec:	mov	x19, x0
  40abf0:	mov	w0, #0xa                   	// #10
  40abf4:	bl	404e10 <fputc@plt>
  40abf8:	ldr	x0, [x20]
  40abfc:	bl	4050e0 <fflush@plt>
  40ac00:	mov	x0, x20
  40ac04:	bl	405060 <free@plt>
  40ac08:	str	xzr, [x19]
  40ac0c:	ldp	x20, x19, [sp, #16]
  40ac10:	ldp	x29, x30, [sp], #32
  40ac14:	ret
  40ac18:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40ac1c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40ac20:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x428>
  40ac24:	add	x0, x0, #0x791
  40ac28:	add	x1, x1, #0x7a2
  40ac2c:	add	x3, x3, #0x7b0
  40ac30:	mov	w2, #0x6e                  	// #110
  40ac34:	bl	4051e0 <__assert_fail@plt>

000000000040ac38 <jsonw_pretty@@Base>:
  40ac38:	and	w8, w1, #0x1
  40ac3c:	strb	w8, [x0, #12]
  40ac40:	ret

000000000040ac44 <jsonw_name@@Base>:
  40ac44:	stp	x29, x30, [sp, #-48]!
  40ac48:	stp	x22, x21, [sp, #16]
  40ac4c:	stp	x20, x19, [sp, #32]
  40ac50:	mov	x19, x0
  40ac54:	ldrb	w0, [x0, #13]
  40ac58:	mov	x20, x1
  40ac5c:	mov	x29, sp
  40ac60:	cbz	w0, 40ac6c <jsonw_name@@Base+0x28>
  40ac64:	ldr	x1, [x19]
  40ac68:	bl	404df0 <putc@plt>
  40ac6c:	ldrb	w8, [x19, #12]
  40ac70:	mov	w9, #0x2c                  	// #44
  40ac74:	strb	w9, [x19, #13]
  40ac78:	cbz	w8, 40acc0 <jsonw_name@@Base+0x7c>
  40ac7c:	ldr	x1, [x19]
  40ac80:	mov	w0, #0xa                   	// #10
  40ac84:	bl	404df0 <putc@plt>
  40ac88:	ldr	w8, [x19, #8]
  40ac8c:	cbz	w8, 40acc0 <jsonw_name@@Base+0x7c>
  40ac90:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x428>
  40ac94:	mov	w22, wzr
  40ac98:	add	x21, x21, #0x7f7
  40ac9c:	ldr	x3, [x19]
  40aca0:	mov	w1, #0x4                   	// #4
  40aca4:	mov	w2, #0x1                   	// #1
  40aca8:	mov	x0, x21
  40acac:	bl	4050c0 <fwrite@plt>
  40acb0:	ldr	w8, [x19, #8]
  40acb4:	add	w22, w22, #0x1
  40acb8:	cmp	w22, w8
  40acbc:	b.cc	40ac9c <jsonw_name@@Base+0x58>  // b.lo, b.ul, b.last
  40acc0:	mov	x0, x19
  40acc4:	mov	x1, x20
  40acc8:	strb	wzr, [x19, #13]
  40accc:	bl	40ad0c <jsonw_name@@Base+0xc8>
  40acd0:	ldr	x1, [x19]
  40acd4:	mov	w0, #0x3a                  	// #58
  40acd8:	bl	404df0 <putc@plt>
  40acdc:	ldrb	w8, [x19, #12]
  40ace0:	cbz	w8, 40acfc <jsonw_name@@Base+0xb8>
  40ace4:	ldr	x1, [x19]
  40ace8:	ldp	x20, x19, [sp, #32]
  40acec:	ldp	x22, x21, [sp, #16]
  40acf0:	mov	w0, #0x20                  	// #32
  40acf4:	ldp	x29, x30, [sp], #48
  40acf8:	b	404df0 <putc@plt>
  40acfc:	ldp	x20, x19, [sp, #32]
  40ad00:	ldp	x22, x21, [sp, #16]
  40ad04:	ldp	x29, x30, [sp], #48
  40ad08:	ret
  40ad0c:	stp	x29, x30, [sp, #-96]!
  40ad10:	stp	x28, x27, [sp, #16]
  40ad14:	stp	x26, x25, [sp, #32]
  40ad18:	stp	x24, x23, [sp, #48]
  40ad1c:	stp	x22, x21, [sp, #64]
  40ad20:	stp	x20, x19, [sp, #80]
  40ad24:	ldr	x8, [x0]
  40ad28:	mov	x19, x0
  40ad2c:	mov	x20, x1
  40ad30:	mov	w0, #0x22                  	// #34
  40ad34:	mov	x1, x8
  40ad38:	mov	x29, sp
  40ad3c:	bl	404df0 <putc@plt>
  40ad40:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x428>
  40ad44:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x428>
  40ad48:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x428>
  40ad4c:	adrp	x24, 40e000 <_IO_stdin_used@@Base+0x428>
  40ad50:	adrp	x25, 40e000 <_IO_stdin_used@@Base+0x428>
  40ad54:	adrp	x26, 40e000 <_IO_stdin_used@@Base+0x428>
  40ad58:	adrp	x27, 40e000 <_IO_stdin_used@@Base+0x428>
  40ad5c:	adrp	x28, 40e000 <_IO_stdin_used@@Base+0x428>
  40ad60:	add	x21, x21, #0x769
  40ad64:	add	x22, x22, #0x808
  40ad68:	add	x23, x23, #0x7fc
  40ad6c:	add	x24, x24, #0x7ff
  40ad70:	add	x25, x25, #0x805
  40ad74:	add	x26, x26, #0x802
  40ad78:	add	x27, x27, #0x80e
  40ad7c:	add	x28, x28, #0x811
  40ad80:	b	40ad90 <jsonw_name@@Base+0x14c>
  40ad84:	ldr	x1, [x19]
  40ad88:	bl	404df0 <putc@plt>
  40ad8c:	add	x20, x20, #0x1
  40ad90:	ldrb	w0, [x20]
  40ad94:	cmp	w0, #0x27
  40ad98:	b.hi	40adc8 <jsonw_name@@Base+0x184>  // b.pmore
  40ad9c:	adr	x8, 40ad84 <jsonw_name@@Base+0x140>
  40ada0:	ldrb	w9, [x21, x0]
  40ada4:	add	x8, x8, x9, lsl #2
  40ada8:	br	x8
  40adac:	ldr	x3, [x19]
  40adb0:	mov	w1, #0x2                   	// #2
  40adb4:	mov	w2, #0x1                   	// #1
  40adb8:	mov	x0, x22
  40adbc:	bl	4050c0 <fwrite@plt>
  40adc0:	add	x20, x20, #0x1
  40adc4:	b	40ad90 <jsonw_name@@Base+0x14c>
  40adc8:	cmp	w0, #0x5c
  40adcc:	b.ne	40ad84 <jsonw_name@@Base+0x140>  // b.any
  40add0:	ldr	x3, [x19]
  40add4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40add8:	mov	w1, #0x2                   	// #2
  40addc:	mov	w2, #0x1                   	// #1
  40ade0:	add	x0, x0, #0x80b
  40ade4:	bl	4050c0 <fwrite@plt>
  40ade8:	add	x20, x20, #0x1
  40adec:	b	40ad90 <jsonw_name@@Base+0x14c>
  40adf0:	ldr	x3, [x19]
  40adf4:	mov	w1, #0x2                   	// #2
  40adf8:	mov	w2, #0x1                   	// #1
  40adfc:	mov	x0, x23
  40ae00:	bl	4050c0 <fwrite@plt>
  40ae04:	add	x20, x20, #0x1
  40ae08:	b	40ad90 <jsonw_name@@Base+0x14c>
  40ae0c:	ldr	x3, [x19]
  40ae10:	mov	w1, #0x2                   	// #2
  40ae14:	mov	w2, #0x1                   	// #1
  40ae18:	mov	x0, x24
  40ae1c:	bl	4050c0 <fwrite@plt>
  40ae20:	add	x20, x20, #0x1
  40ae24:	b	40ad90 <jsonw_name@@Base+0x14c>
  40ae28:	ldr	x3, [x19]
  40ae2c:	mov	w1, #0x2                   	// #2
  40ae30:	mov	w2, #0x1                   	// #1
  40ae34:	mov	x0, x25
  40ae38:	bl	4050c0 <fwrite@plt>
  40ae3c:	add	x20, x20, #0x1
  40ae40:	b	40ad90 <jsonw_name@@Base+0x14c>
  40ae44:	ldr	x3, [x19]
  40ae48:	mov	w1, #0x2                   	// #2
  40ae4c:	mov	w2, #0x1                   	// #1
  40ae50:	mov	x0, x26
  40ae54:	bl	4050c0 <fwrite@plt>
  40ae58:	add	x20, x20, #0x1
  40ae5c:	b	40ad90 <jsonw_name@@Base+0x14c>
  40ae60:	ldr	x3, [x19]
  40ae64:	mov	w1, #0x2                   	// #2
  40ae68:	mov	w2, #0x1                   	// #1
  40ae6c:	mov	x0, x27
  40ae70:	bl	4050c0 <fwrite@plt>
  40ae74:	add	x20, x20, #0x1
  40ae78:	b	40ad90 <jsonw_name@@Base+0x14c>
  40ae7c:	ldr	x3, [x19]
  40ae80:	mov	w1, #0x2                   	// #2
  40ae84:	mov	w2, #0x1                   	// #1
  40ae88:	mov	x0, x28
  40ae8c:	bl	4050c0 <fwrite@plt>
  40ae90:	add	x20, x20, #0x1
  40ae94:	b	40ad90 <jsonw_name@@Base+0x14c>
  40ae98:	ldr	x1, [x19]
  40ae9c:	ldp	x20, x19, [sp, #80]
  40aea0:	ldp	x22, x21, [sp, #64]
  40aea4:	ldp	x24, x23, [sp, #48]
  40aea8:	ldp	x26, x25, [sp, #32]
  40aeac:	ldp	x28, x27, [sp, #16]
  40aeb0:	mov	w0, #0x22                  	// #34
  40aeb4:	ldp	x29, x30, [sp], #96
  40aeb8:	b	404df0 <putc@plt>

000000000040aebc <jsonw_printf@@Base>:
  40aebc:	sub	sp, sp, #0x120
  40aec0:	stp	x29, x30, [sp, #240]
  40aec4:	add	x29, sp, #0xf0
  40aec8:	mov	x8, #0xffffffffffffffd0    	// #-48
  40aecc:	mov	x9, sp
  40aed0:	sub	x10, x29, #0x70
  40aed4:	movk	x8, #0xff80, lsl #32
  40aed8:	add	x11, x29, #0x30
  40aedc:	add	x9, x9, #0x80
  40aee0:	add	x10, x10, #0x30
  40aee4:	stp	x20, x19, [sp, #272]
  40aee8:	stp	x2, x3, [x29, #-112]
  40aeec:	stp	x4, x5, [x29, #-96]
  40aef0:	stp	x6, x7, [x29, #-80]
  40aef4:	stp	q1, q2, [sp, #16]
  40aef8:	stp	q3, q4, [sp, #48]
  40aefc:	str	q0, [sp]
  40af00:	stp	q5, q6, [sp, #80]
  40af04:	str	q7, [sp, #112]
  40af08:	stp	x9, x8, [x29, #-16]
  40af0c:	stp	x11, x10, [x29, #-32]
  40af10:	mov	x19, x0
  40af14:	ldrb	w0, [x0, #13]
  40af18:	mov	x20, x1
  40af1c:	str	x28, [sp, #256]
  40af20:	cbz	w0, 40af2c <jsonw_printf@@Base+0x70>
  40af24:	ldr	x1, [x19]
  40af28:	bl	404df0 <putc@plt>
  40af2c:	mov	w8, #0x2c                  	// #44
  40af30:	strb	w8, [x19, #13]
  40af34:	ldp	q0, q1, [x29, #-32]
  40af38:	ldr	x0, [x19]
  40af3c:	sub	x2, x29, #0x40
  40af40:	mov	x1, x20
  40af44:	stp	q0, q1, [x29, #-64]
  40af48:	bl	4051c0 <vfprintf@plt>
  40af4c:	ldp	x20, x19, [sp, #272]
  40af50:	ldr	x28, [sp, #256]
  40af54:	ldp	x29, x30, [sp, #240]
  40af58:	add	sp, sp, #0x120
  40af5c:	ret

000000000040af60 <jsonw_start_object@@Base>:
  40af60:	stp	x29, x30, [sp, #-32]!
  40af64:	str	x19, [sp, #16]
  40af68:	mov	x19, x0
  40af6c:	ldrb	w0, [x0, #13]
  40af70:	mov	x29, sp
  40af74:	cbz	w0, 40af80 <jsonw_start_object@@Base+0x20>
  40af78:	ldr	x1, [x19]
  40af7c:	bl	404df0 <putc@plt>
  40af80:	ldr	x1, [x19]
  40af84:	mov	w8, #0x2c                  	// #44
  40af88:	mov	w0, #0x7b                  	// #123
  40af8c:	strb	w8, [x19, #13]
  40af90:	bl	404df0 <putc@plt>
  40af94:	ldr	w8, [x19, #8]
  40af98:	strb	wzr, [x19, #13]
  40af9c:	add	w8, w8, #0x1
  40afa0:	str	w8, [x19, #8]
  40afa4:	ldr	x19, [sp, #16]
  40afa8:	ldp	x29, x30, [sp], #32
  40afac:	ret

000000000040afb0 <jsonw_end_object@@Base>:
  40afb0:	mov	w1, #0x7d                  	// #125
  40afb4:	b	40afb8 <jsonw_end_object@@Base+0x8>
  40afb8:	stp	x29, x30, [sp, #-48]!
  40afbc:	stp	x22, x21, [sp, #16]
  40afc0:	stp	x20, x19, [sp, #32]
  40afc4:	ldr	w8, [x0, #8]
  40afc8:	mov	x29, sp
  40afcc:	cbz	w8, 40b058 <jsonw_end_object@@Base+0xa8>
  40afd0:	ldrb	w9, [x0, #13]
  40afd4:	mov	x19, x0
  40afd8:	mov	w20, w1
  40afdc:	sub	w8, w8, #0x1
  40afe0:	str	w8, [x0, #8]
  40afe4:	cbz	w9, 40b034 <jsonw_end_object@@Base+0x84>
  40afe8:	ldrb	w8, [x19, #12]
  40afec:	cbz	w8, 40b034 <jsonw_end_object@@Base+0x84>
  40aff0:	ldr	x1, [x19]
  40aff4:	mov	w0, #0xa                   	// #10
  40aff8:	bl	404df0 <putc@plt>
  40affc:	ldr	w8, [x19, #8]
  40b000:	cbz	w8, 40b034 <jsonw_end_object@@Base+0x84>
  40b004:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x428>
  40b008:	mov	w22, wzr
  40b00c:	add	x21, x21, #0x7f7
  40b010:	ldr	x3, [x19]
  40b014:	mov	w1, #0x4                   	// #4
  40b018:	mov	w2, #0x1                   	// #1
  40b01c:	mov	x0, x21
  40b020:	bl	4050c0 <fwrite@plt>
  40b024:	ldr	w8, [x19, #8]
  40b028:	add	w22, w22, #0x1
  40b02c:	cmp	w22, w8
  40b030:	b.cc	40b010 <jsonw_end_object@@Base+0x60>  // b.lo, b.ul, b.last
  40b034:	ldr	x1, [x19]
  40b038:	mov	w0, w20
  40b03c:	bl	404df0 <putc@plt>
  40b040:	mov	w8, #0x2c                  	// #44
  40b044:	strb	w8, [x19, #13]
  40b048:	ldp	x20, x19, [sp, #32]
  40b04c:	ldp	x22, x21, [sp, #16]
  40b050:	ldp	x29, x30, [sp], #48
  40b054:	ret
  40b058:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40b05c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b060:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x428>
  40b064:	add	x0, x0, #0x814
  40b068:	add	x1, x1, #0x7a2
  40b06c:	add	x3, x3, #0x824
  40b070:	mov	w2, #0x85                  	// #133
  40b074:	bl	4051e0 <__assert_fail@plt>

000000000040b078 <jsonw_start_array@@Base>:
  40b078:	stp	x29, x30, [sp, #-32]!
  40b07c:	str	x19, [sp, #16]
  40b080:	mov	x19, x0
  40b084:	ldrb	w0, [x0, #13]
  40b088:	mov	x29, sp
  40b08c:	cbz	w0, 40b098 <jsonw_start_array@@Base+0x20>
  40b090:	ldr	x1, [x19]
  40b094:	bl	404df0 <putc@plt>
  40b098:	ldr	x1, [x19]
  40b09c:	mov	w8, #0x2c                  	// #44
  40b0a0:	mov	w0, #0x5b                  	// #91
  40b0a4:	strb	w8, [x19, #13]
  40b0a8:	bl	404df0 <putc@plt>
  40b0ac:	ldr	w8, [x19, #8]
  40b0b0:	ldrb	w9, [x19, #12]
  40b0b4:	strb	wzr, [x19, #13]
  40b0b8:	add	w8, w8, #0x1
  40b0bc:	str	w8, [x19, #8]
  40b0c0:	cbz	w9, 40b0d8 <jsonw_start_array@@Base+0x60>
  40b0c4:	ldr	x1, [x19]
  40b0c8:	ldr	x19, [sp, #16]
  40b0cc:	mov	w0, #0x20                  	// #32
  40b0d0:	ldp	x29, x30, [sp], #32
  40b0d4:	b	404df0 <putc@plt>
  40b0d8:	ldr	x19, [sp, #16]
  40b0dc:	ldp	x29, x30, [sp], #32
  40b0e0:	ret

000000000040b0e4 <jsonw_end_array@@Base>:
  40b0e4:	stp	x29, x30, [sp, #-32]!
  40b0e8:	ldrb	w8, [x0, #12]
  40b0ec:	str	x19, [sp, #16]
  40b0f0:	mov	x19, x0
  40b0f4:	mov	x29, sp
  40b0f8:	cbz	w8, 40b110 <jsonw_end_array@@Base+0x2c>
  40b0fc:	ldrb	w8, [x19, #13]
  40b100:	cbz	w8, 40b110 <jsonw_end_array@@Base+0x2c>
  40b104:	ldr	x1, [x19]
  40b108:	mov	w0, #0x20                  	// #32
  40b10c:	bl	404df0 <putc@plt>
  40b110:	strb	wzr, [x19, #13]
  40b114:	mov	x0, x19
  40b118:	ldr	x19, [sp, #16]
  40b11c:	mov	w1, #0x5d                  	// #93
  40b120:	ldp	x29, x30, [sp], #32
  40b124:	b	40afb8 <jsonw_end_object@@Base+0x8>

000000000040b128 <jsonw_string@@Base>:
  40b128:	stp	x29, x30, [sp, #-32]!
  40b12c:	stp	x20, x19, [sp, #16]
  40b130:	mov	x19, x0
  40b134:	ldrb	w0, [x0, #13]
  40b138:	mov	x20, x1
  40b13c:	mov	x29, sp
  40b140:	cbz	w0, 40b14c <jsonw_string@@Base+0x24>
  40b144:	ldr	x1, [x19]
  40b148:	bl	404df0 <putc@plt>
  40b14c:	mov	w8, #0x2c                  	// #44
  40b150:	strb	w8, [x19, #13]
  40b154:	mov	x0, x19
  40b158:	mov	x1, x20
  40b15c:	ldp	x20, x19, [sp, #16]
  40b160:	ldp	x29, x30, [sp], #32
  40b164:	b	40ad0c <jsonw_name@@Base+0xc8>

000000000040b168 <jsonw_bool@@Base>:
  40b168:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x428>
  40b16c:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  40b170:	add	x8, x8, #0x673
  40b174:	add	x9, x9, #0x66e
  40b178:	tst	w1, #0x1
  40b17c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b180:	csel	x2, x9, x8, ne  // ne = any
  40b184:	add	x1, x1, #0x24f
  40b188:	b	40aebc <jsonw_printf@@Base>

000000000040b18c <jsonw_null@@Base>:
  40b18c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b190:	add	x1, x1, #0x7d5
  40b194:	b	40aebc <jsonw_printf@@Base>

000000000040b198 <jsonw_float@@Base>:
  40b198:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b19c:	add	x1, x1, #0x7da
  40b1a0:	b	40aebc <jsonw_printf@@Base>

000000000040b1a4 <jsonw_hhu@@Base>:
  40b1a4:	and	w2, w1, #0xff
  40b1a8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b1ac:	add	x1, x1, #0x7dd
  40b1b0:	b	40aebc <jsonw_printf@@Base>

000000000040b1b4 <jsonw_hu@@Base>:
  40b1b4:	and	w2, w1, #0xffff
  40b1b8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b1bc:	add	x1, x1, #0x7e2
  40b1c0:	b	40aebc <jsonw_printf@@Base>

000000000040b1c4 <jsonw_uint@@Base>:
  40b1c4:	mov	w2, w1
  40b1c8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b1cc:	add	x1, x1, #0x664
  40b1d0:	b	40aebc <jsonw_printf@@Base>

000000000040b1d4 <jsonw_u64@@Base>:
  40b1d4:	mov	x2, x1
  40b1d8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b1dc:	add	x1, x1, #0x7e6
  40b1e0:	b	40aebc <jsonw_printf@@Base>

000000000040b1e4 <jsonw_xint@@Base>:
  40b1e4:	mov	x2, x1
  40b1e8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b1ec:	add	x1, x1, #0x7ea
  40b1f0:	b	40aebc <jsonw_printf@@Base>

000000000040b1f4 <jsonw_luint@@Base>:
  40b1f4:	mov	x2, x1
  40b1f8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b1fc:	add	x1, x1, #0x7e6
  40b200:	b	40aebc <jsonw_printf@@Base>

000000000040b204 <jsonw_lluint@@Base>:
  40b204:	mov	x2, x1
  40b208:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b20c:	add	x1, x1, #0x7ee
  40b210:	b	40aebc <jsonw_printf@@Base>

000000000040b214 <jsonw_int@@Base>:
  40b214:	mov	w2, w1
  40b218:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b21c:	add	x1, x1, #0x5be
  40b220:	b	40aebc <jsonw_printf@@Base>

000000000040b224 <jsonw_s64@@Base>:
  40b224:	mov	x2, x1
  40b228:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b22c:	add	x1, x1, #0x7f3
  40b230:	b	40aebc <jsonw_printf@@Base>

000000000040b234 <jsonw_string_field@@Base>:
  40b234:	stp	x29, x30, [sp, #-32]!
  40b238:	stp	x20, x19, [sp, #16]
  40b23c:	mov	x29, sp
  40b240:	mov	x19, x2
  40b244:	mov	x20, x0
  40b248:	bl	40ac44 <jsonw_name@@Base>
  40b24c:	ldrb	w0, [x20, #13]
  40b250:	cbz	w0, 40b25c <jsonw_string_field@@Base+0x28>
  40b254:	ldr	x1, [x20]
  40b258:	bl	404df0 <putc@plt>
  40b25c:	mov	w8, #0x2c                  	// #44
  40b260:	strb	w8, [x20, #13]
  40b264:	mov	x0, x20
  40b268:	mov	x1, x19
  40b26c:	ldp	x20, x19, [sp, #16]
  40b270:	ldp	x29, x30, [sp], #32
  40b274:	b	40ad0c <jsonw_name@@Base+0xc8>

000000000040b278 <jsonw_bool_field@@Base>:
  40b278:	stp	x29, x30, [sp, #-32]!
  40b27c:	stp	x20, x19, [sp, #16]
  40b280:	mov	x29, sp
  40b284:	mov	w19, w2
  40b288:	mov	x20, x0
  40b28c:	bl	40ac44 <jsonw_name@@Base>
  40b290:	tst	w19, #0x1
  40b294:	mov	x0, x20
  40b298:	ldp	x20, x19, [sp, #16]
  40b29c:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x428>
  40b2a0:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x428>
  40b2a4:	add	x8, x8, #0x673
  40b2a8:	add	x9, x9, #0x66e
  40b2ac:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b2b0:	csel	x2, x9, x8, ne  // ne = any
  40b2b4:	add	x1, x1, #0x24f
  40b2b8:	ldp	x29, x30, [sp], #32
  40b2bc:	b	40aebc <jsonw_printf@@Base>

000000000040b2c0 <jsonw_float_field@@Base>:
  40b2c0:	str	d8, [sp, #-32]!
  40b2c4:	stp	x29, x30, [sp, #8]
  40b2c8:	str	x19, [sp, #24]
  40b2cc:	mov	x29, sp
  40b2d0:	mov	v8.16b, v0.16b
  40b2d4:	mov	x19, x0
  40b2d8:	bl	40ac44 <jsonw_name@@Base>
  40b2dc:	mov	x0, x19
  40b2e0:	ldr	x19, [sp, #24]
  40b2e4:	ldp	x29, x30, [sp, #8]
  40b2e8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b2ec:	add	x1, x1, #0x7da
  40b2f0:	mov	v0.16b, v8.16b
  40b2f4:	ldr	d8, [sp], #32
  40b2f8:	b	40aebc <jsonw_printf@@Base>

000000000040b2fc <jsonw_uint_field@@Base>:
  40b2fc:	stp	x29, x30, [sp, #-32]!
  40b300:	stp	x20, x19, [sp, #16]
  40b304:	mov	x29, sp
  40b308:	mov	w19, w2
  40b30c:	mov	x20, x0
  40b310:	bl	40ac44 <jsonw_name@@Base>
  40b314:	mov	x0, x20
  40b318:	mov	w2, w19
  40b31c:	ldp	x20, x19, [sp, #16]
  40b320:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b324:	add	x1, x1, #0x664
  40b328:	ldp	x29, x30, [sp], #32
  40b32c:	b	40aebc <jsonw_printf@@Base>

000000000040b330 <jsonw_u64_field@@Base>:
  40b330:	stp	x29, x30, [sp, #-32]!
  40b334:	stp	x20, x19, [sp, #16]
  40b338:	mov	x29, sp
  40b33c:	mov	x19, x2
  40b340:	mov	x20, x0
  40b344:	bl	40ac44 <jsonw_name@@Base>
  40b348:	mov	x0, x20
  40b34c:	mov	x2, x19
  40b350:	ldp	x20, x19, [sp, #16]
  40b354:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b358:	add	x1, x1, #0x7e6
  40b35c:	ldp	x29, x30, [sp], #32
  40b360:	b	40aebc <jsonw_printf@@Base>

000000000040b364 <jsonw_xint_field@@Base>:
  40b364:	stp	x29, x30, [sp, #-32]!
  40b368:	stp	x20, x19, [sp, #16]
  40b36c:	mov	x29, sp
  40b370:	mov	x19, x2
  40b374:	mov	x20, x0
  40b378:	bl	40ac44 <jsonw_name@@Base>
  40b37c:	mov	x0, x20
  40b380:	mov	x2, x19
  40b384:	ldp	x20, x19, [sp, #16]
  40b388:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b38c:	add	x1, x1, #0x7ea
  40b390:	ldp	x29, x30, [sp], #32
  40b394:	b	40aebc <jsonw_printf@@Base>

000000000040b398 <jsonw_hhu_field@@Base>:
  40b398:	stp	x29, x30, [sp, #-32]!
  40b39c:	stp	x20, x19, [sp, #16]
  40b3a0:	mov	x29, sp
  40b3a4:	mov	w19, w2
  40b3a8:	mov	x20, x0
  40b3ac:	bl	40ac44 <jsonw_name@@Base>
  40b3b0:	and	w2, w19, #0xff
  40b3b4:	mov	x0, x20
  40b3b8:	ldp	x20, x19, [sp, #16]
  40b3bc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b3c0:	add	x1, x1, #0x7dd
  40b3c4:	ldp	x29, x30, [sp], #32
  40b3c8:	b	40aebc <jsonw_printf@@Base>

000000000040b3cc <jsonw_hu_field@@Base>:
  40b3cc:	stp	x29, x30, [sp, #-32]!
  40b3d0:	stp	x20, x19, [sp, #16]
  40b3d4:	mov	x29, sp
  40b3d8:	mov	w19, w2
  40b3dc:	mov	x20, x0
  40b3e0:	bl	40ac44 <jsonw_name@@Base>
  40b3e4:	and	w2, w19, #0xffff
  40b3e8:	mov	x0, x20
  40b3ec:	ldp	x20, x19, [sp, #16]
  40b3f0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b3f4:	add	x1, x1, #0x7e2
  40b3f8:	ldp	x29, x30, [sp], #32
  40b3fc:	b	40aebc <jsonw_printf@@Base>

000000000040b400 <jsonw_luint_field@@Base>:
  40b400:	stp	x29, x30, [sp, #-32]!
  40b404:	stp	x20, x19, [sp, #16]
  40b408:	mov	x29, sp
  40b40c:	mov	x19, x2
  40b410:	mov	x20, x0
  40b414:	bl	40ac44 <jsonw_name@@Base>
  40b418:	mov	x0, x20
  40b41c:	mov	x2, x19
  40b420:	ldp	x20, x19, [sp, #16]
  40b424:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b428:	add	x1, x1, #0x7e6
  40b42c:	ldp	x29, x30, [sp], #32
  40b430:	b	40aebc <jsonw_printf@@Base>

000000000040b434 <jsonw_lluint_field@@Base>:
  40b434:	stp	x29, x30, [sp, #-32]!
  40b438:	stp	x20, x19, [sp, #16]
  40b43c:	mov	x29, sp
  40b440:	mov	x19, x2
  40b444:	mov	x20, x0
  40b448:	bl	40ac44 <jsonw_name@@Base>
  40b44c:	mov	x0, x20
  40b450:	mov	x2, x19
  40b454:	ldp	x20, x19, [sp, #16]
  40b458:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b45c:	add	x1, x1, #0x7ee
  40b460:	ldp	x29, x30, [sp], #32
  40b464:	b	40aebc <jsonw_printf@@Base>

000000000040b468 <jsonw_int_field@@Base>:
  40b468:	stp	x29, x30, [sp, #-32]!
  40b46c:	stp	x20, x19, [sp, #16]
  40b470:	mov	x29, sp
  40b474:	mov	w19, w2
  40b478:	mov	x20, x0
  40b47c:	bl	40ac44 <jsonw_name@@Base>
  40b480:	mov	x0, x20
  40b484:	mov	w2, w19
  40b488:	ldp	x20, x19, [sp, #16]
  40b48c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b490:	add	x1, x1, #0x5be
  40b494:	ldp	x29, x30, [sp], #32
  40b498:	b	40aebc <jsonw_printf@@Base>

000000000040b49c <jsonw_s64_field@@Base>:
  40b49c:	stp	x29, x30, [sp, #-32]!
  40b4a0:	stp	x20, x19, [sp, #16]
  40b4a4:	mov	x29, sp
  40b4a8:	mov	x19, x2
  40b4ac:	mov	x20, x0
  40b4b0:	bl	40ac44 <jsonw_name@@Base>
  40b4b4:	mov	x0, x20
  40b4b8:	mov	x2, x19
  40b4bc:	ldp	x20, x19, [sp, #16]
  40b4c0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b4c4:	add	x1, x1, #0x7f3
  40b4c8:	ldp	x29, x30, [sp], #32
  40b4cc:	b	40aebc <jsonw_printf@@Base>

000000000040b4d0 <jsonw_null_field@@Base>:
  40b4d0:	stp	x29, x30, [sp, #-32]!
  40b4d4:	str	x19, [sp, #16]
  40b4d8:	mov	x29, sp
  40b4dc:	mov	x19, x0
  40b4e0:	bl	40ac44 <jsonw_name@@Base>
  40b4e4:	mov	x0, x19
  40b4e8:	ldr	x19, [sp, #16]
  40b4ec:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b4f0:	add	x1, x1, #0x7d5
  40b4f4:	ldp	x29, x30, [sp], #32
  40b4f8:	b	40aebc <jsonw_printf@@Base>

000000000040b4fc <nl_dump_ext_ack@@Base>:
  40b4fc:	mov	w0, wzr
  40b500:	ret

000000000040b504 <nl_dump_ext_ack_done@@Base>:
  40b504:	mov	w0, wzr
  40b508:	ret

000000000040b50c <rtnl_set_strict_dump@@Base>:
  40b50c:	stp	x29, x30, [sp, #-32]!
  40b510:	mov	x29, sp
  40b514:	mov	w8, #0x1                   	// #1
  40b518:	str	w8, [x29, #28]
  40b51c:	str	x19, [sp, #16]
  40b520:	mov	x19, x0
  40b524:	ldr	w0, [x0]
  40b528:	add	x3, x29, #0x1c
  40b52c:	mov	w1, #0x10e                 	// #270
  40b530:	mov	w2, #0xc                   	// #12
  40b534:	mov	w4, #0x4                   	// #4
  40b538:	bl	404e90 <setsockopt@plt>
  40b53c:	tbnz	w0, #31, 40b54c <rtnl_set_strict_dump@@Base+0x40>
  40b540:	ldr	w8, [x19, #48]
  40b544:	orr	w8, w8, #0x4
  40b548:	str	w8, [x19, #48]
  40b54c:	ldr	x19, [sp, #16]
  40b550:	ldp	x29, x30, [sp], #32
  40b554:	ret

000000000040b558 <rtnl_add_nl_group@@Base>:
  40b558:	sub	sp, sp, #0x20
  40b55c:	stp	x29, x30, [sp, #16]
  40b560:	add	x29, sp, #0x10
  40b564:	stur	w1, [x29, #-4]
  40b568:	ldr	w0, [x0]
  40b56c:	sub	x3, x29, #0x4
  40b570:	mov	w1, #0x10e                 	// #270
  40b574:	mov	w2, #0x1                   	// #1
  40b578:	mov	w4, #0x4                   	// #4
  40b57c:	bl	404e90 <setsockopt@plt>
  40b580:	ldp	x29, x30, [sp, #16]
  40b584:	add	sp, sp, #0x20
  40b588:	ret

000000000040b58c <rtnl_close@@Base>:
  40b58c:	stp	x29, x30, [sp, #-32]!
  40b590:	str	x19, [sp, #16]
  40b594:	mov	x19, x0
  40b598:	ldr	w0, [x0]
  40b59c:	mov	x29, sp
  40b5a0:	tbnz	w0, #31, 40b5b0 <rtnl_close@@Base+0x24>
  40b5a4:	bl	404fa0 <close@plt>
  40b5a8:	mov	w8, #0xffffffff            	// #-1
  40b5ac:	str	w8, [x19]
  40b5b0:	ldr	x19, [sp, #16]
  40b5b4:	ldp	x29, x30, [sp], #32
  40b5b8:	ret

000000000040b5bc <rtnl_open_byproto@@Base>:
  40b5bc:	sub	sp, sp, #0x40
  40b5c0:	stp	x29, x30, [sp, #16]
  40b5c4:	stp	x20, x19, [sp, #48]
  40b5c8:	add	x29, sp, #0x10
  40b5cc:	mov	w20, w1
  40b5d0:	mov	w8, #0x8000                	// #32768
  40b5d4:	mov	w9, #0x1                   	// #1
  40b5d8:	movi	v0.2d, #0x0
  40b5dc:	mov	w1, #0x3                   	// #3
  40b5e0:	str	x21, [sp, #32]
  40b5e4:	mov	x19, x0
  40b5e8:	str	w8, [x29, #24]
  40b5ec:	stur	w9, [x29, #-4]
  40b5f0:	stp	q0, q0, [x0, #16]
  40b5f4:	str	xzr, [x0, #48]
  40b5f8:	str	q0, [x0]
  40b5fc:	str	w2, [x0, #36]
  40b600:	mov	w0, #0x10                  	// #16
  40b604:	movk	w1, #0x8, lsl #16
  40b608:	bl	4050d0 <socket@plt>
  40b60c:	str	w0, [x19]
  40b610:	tbnz	w0, #31, 40b6d8 <rtnl_open_byproto@@Base+0x11c>
  40b614:	add	x3, x29, #0x18
  40b618:	mov	w1, #0x1                   	// #1
  40b61c:	mov	w2, #0x7                   	// #7
  40b620:	mov	w4, #0x4                   	// #4
  40b624:	bl	404e90 <setsockopt@plt>
  40b628:	tbnz	w0, #31, 40b6e4 <rtnl_open_byproto@@Base+0x128>
  40b62c:	adrp	x3, 41e000 <_IO_stdin_used@@Base+0x10428>
  40b630:	ldr	w0, [x19]
  40b634:	ldr	x3, [x3, #4024]
  40b638:	mov	w1, #0x1                   	// #1
  40b63c:	mov	w2, #0x8                   	// #8
  40b640:	mov	w4, #0x4                   	// #4
  40b644:	bl	404e90 <setsockopt@plt>
  40b648:	tbnz	w0, #31, 40b6f0 <rtnl_open_byproto@@Base+0x134>
  40b64c:	ldr	w0, [x19]
  40b650:	sub	x3, x29, #0x4
  40b654:	mov	w1, #0x10e                 	// #270
  40b658:	mov	w2, #0xb                   	// #11
  40b65c:	mov	w4, #0x4                   	// #4
  40b660:	bl	404e90 <setsockopt@plt>
  40b664:	mov	x21, x19
  40b668:	str	xzr, [x21, #4]!
  40b66c:	mov	w8, #0x10                  	// #16
  40b670:	strh	w8, [x21]
  40b674:	ldr	w0, [x19]
  40b678:	mov	w2, #0xc                   	// #12
  40b67c:	mov	x1, x21
  40b680:	str	w20, [x19, #12]
  40b684:	mov	w20, #0xc                   	// #12
  40b688:	bl	404db0 <bind@plt>
  40b68c:	tbnz	w0, #31, 40b6fc <rtnl_open_byproto@@Base+0x140>
  40b690:	str	w20, [x29, #28]
  40b694:	ldr	w0, [x19]
  40b698:	add	x2, x29, #0x1c
  40b69c:	mov	x1, x21
  40b6a0:	bl	405230 <getsockname@plt>
  40b6a4:	tbnz	w0, #31, 40b708 <rtnl_open_byproto@@Base+0x14c>
  40b6a8:	ldr	w2, [x29, #28]
  40b6ac:	cmp	w2, #0xc
  40b6b0:	b.ne	40b718 <rtnl_open_byproto@@Base+0x15c>  // b.any
  40b6b4:	ldrh	w2, [x21]
  40b6b8:	cmp	w2, #0x10
  40b6bc:	b.ne	40b72c <rtnl_open_byproto@@Base+0x170>  // b.any
  40b6c0:	mov	x0, xzr
  40b6c4:	bl	404e70 <time@plt>
  40b6c8:	mov	x8, x0
  40b6cc:	mov	w0, wzr
  40b6d0:	str	w8, [x19, #28]
  40b6d4:	b	40b748 <rtnl_open_byproto@@Base+0x18c>
  40b6d8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40b6dc:	add	x0, x0, #0x849
  40b6e0:	b	40b710 <rtnl_open_byproto@@Base+0x154>
  40b6e4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40b6e8:	add	x0, x0, #0x864
  40b6ec:	b	40b710 <rtnl_open_byproto@@Base+0x154>
  40b6f0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40b6f4:	add	x0, x0, #0x86e
  40b6f8:	b	40b710 <rtnl_open_byproto@@Base+0x154>
  40b6fc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40b700:	add	x0, x0, #0x878
  40b704:	b	40b710 <rtnl_open_byproto@@Base+0x154>
  40b708:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40b70c:	add	x0, x0, #0x893
  40b710:	bl	404d60 <perror@plt>
  40b714:	b	40b744 <rtnl_open_byproto@@Base+0x188>
  40b718:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40b71c:	ldr	x8, [x8, #3992]
  40b720:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b724:	add	x1, x1, #0x8a6
  40b728:	b	40b73c <rtnl_open_byproto@@Base+0x180>
  40b72c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40b730:	ldr	x8, [x8, #3992]
  40b734:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40b738:	add	x1, x1, #0x8bf
  40b73c:	ldr	x0, [x8]
  40b740:	bl	405240 <fprintf@plt>
  40b744:	mov	w0, #0xffffffff            	// #-1
  40b748:	ldp	x20, x19, [sp, #48]
  40b74c:	ldr	x21, [sp, #32]
  40b750:	ldp	x29, x30, [sp, #16]
  40b754:	add	sp, sp, #0x40
  40b758:	ret

000000000040b75c <rtnl_open@@Base>:
  40b75c:	mov	w2, wzr
  40b760:	b	40b5bc <rtnl_open_byproto@@Base>

000000000040b764 <rtnl_nexthopdump_req@@Base>:
  40b764:	sub	sp, sp, #0xc0
  40b768:	mov	x8, #0x18                  	// #24
  40b76c:	movk	x8, #0x6a, lsl #32
  40b770:	movi	v0.2d, #0x0
  40b774:	movk	x8, #0x301, lsl #48
  40b778:	stp	x29, x30, [sp, #160]
  40b77c:	stur	q0, [sp, #144]
  40b780:	stur	q0, [sp, #132]
  40b784:	stur	q0, [sp, #116]
  40b788:	stur	q0, [sp, #100]
  40b78c:	stur	q0, [sp, #84]
  40b790:	stur	q0, [sp, #68]
  40b794:	stur	q0, [sp, #52]
  40b798:	stur	q0, [sp, #36]
  40b79c:	stur	q0, [sp, #20]
  40b7a0:	str	x8, [sp, #8]
  40b7a4:	ldr	w8, [x0, #28]
  40b7a8:	str	x19, [sp, #176]
  40b7ac:	mov	x19, x0
  40b7b0:	add	x29, sp, #0xa0
  40b7b4:	add	w8, w8, #0x1
  40b7b8:	stp	w8, w8, [x0, #28]
  40b7bc:	str	w8, [sp, #16]
  40b7c0:	strb	w1, [sp, #24]
  40b7c4:	cbz	x2, 40b7d8 <rtnl_nexthopdump_req@@Base+0x74>
  40b7c8:	add	x0, sp, #0x8
  40b7cc:	mov	w1, #0x98                  	// #152
  40b7d0:	blr	x2
  40b7d4:	cbnz	w0, 40b7ec <rtnl_nexthopdump_req@@Base+0x88>
  40b7d8:	ldr	w0, [x19]
  40b7dc:	add	x1, sp, #0x8
  40b7e0:	mov	w2, #0x98                  	// #152
  40b7e4:	mov	w3, wzr
  40b7e8:	bl	405080 <send@plt>
  40b7ec:	ldr	x19, [sp, #176]
  40b7f0:	ldp	x29, x30, [sp, #160]
  40b7f4:	add	sp, sp, #0xc0
  40b7f8:	ret

000000000040b7fc <rtnl_addrdump_req@@Base>:
  40b7fc:	sub	sp, sp, #0xc0
  40b800:	mov	x8, #0x18                  	// #24
  40b804:	movk	x8, #0x16, lsl #32
  40b808:	movi	v0.2d, #0x0
  40b80c:	movk	x8, #0x301, lsl #48
  40b810:	stp	x29, x30, [sp, #160]
  40b814:	stur	q0, [sp, #144]
  40b818:	stur	q0, [sp, #132]
  40b81c:	stur	q0, [sp, #116]
  40b820:	stur	q0, [sp, #100]
  40b824:	stur	q0, [sp, #84]
  40b828:	stur	q0, [sp, #68]
  40b82c:	stur	q0, [sp, #52]
  40b830:	stur	q0, [sp, #36]
  40b834:	stur	q0, [sp, #20]
  40b838:	str	x8, [sp, #8]
  40b83c:	ldr	w8, [x0, #28]
  40b840:	str	x19, [sp, #176]
  40b844:	mov	x19, x0
  40b848:	add	x29, sp, #0xa0
  40b84c:	add	w8, w8, #0x1
  40b850:	stp	w8, w8, [x0, #28]
  40b854:	str	w8, [sp, #16]
  40b858:	strb	w1, [sp, #24]
  40b85c:	cbz	x2, 40b870 <rtnl_addrdump_req@@Base+0x74>
  40b860:	add	x0, sp, #0x8
  40b864:	mov	w1, #0x98                  	// #152
  40b868:	blr	x2
  40b86c:	cbnz	w0, 40b884 <rtnl_addrdump_req@@Base+0x88>
  40b870:	ldr	w0, [x19]
  40b874:	add	x1, sp, #0x8
  40b878:	mov	w2, #0x98                  	// #152
  40b87c:	mov	w3, wzr
  40b880:	bl	405080 <send@plt>
  40b884:	ldr	x19, [sp, #176]
  40b888:	ldp	x29, x30, [sp, #160]
  40b88c:	add	sp, sp, #0xc0
  40b890:	ret

000000000040b894 <rtnl_addrlbldump_req@@Base>:
  40b894:	sub	sp, sp, #0x30
  40b898:	mov	x8, #0x1c                  	// #28
  40b89c:	movk	x8, #0x4a, lsl #32
  40b8a0:	movk	x8, #0x301, lsl #48
  40b8a4:	stp	x29, x30, [sp, #32]
  40b8a8:	str	x8, [sp]
  40b8ac:	ldr	w8, [x0, #28]
  40b8b0:	mov	w2, #0x1c                  	// #28
  40b8b4:	mov	w3, wzr
  40b8b8:	add	x29, sp, #0x20
  40b8bc:	add	w8, w8, #0x1
  40b8c0:	stp	w8, w8, [x0, #28]
  40b8c4:	stp	w8, wzr, [sp, #8]
  40b8c8:	strb	w1, [sp, #16]
  40b8cc:	stur	xzr, [sp, #17]
  40b8d0:	str	wzr, [sp, #24]
  40b8d4:	ldr	w0, [x0]
  40b8d8:	mov	x1, sp
  40b8dc:	bl	405080 <send@plt>
  40b8e0:	ldp	x29, x30, [sp, #32]
  40b8e4:	add	sp, sp, #0x30
  40b8e8:	ret

000000000040b8ec <rtnl_routedump_req@@Base>:
  40b8ec:	sub	sp, sp, #0xc0
  40b8f0:	mov	x8, #0x1c                  	// #28
  40b8f4:	movk	x8, #0x1a, lsl #32
  40b8f8:	movi	v0.2d, #0x0
  40b8fc:	movk	x8, #0x301, lsl #48
  40b900:	stp	x29, x30, [sp, #160]
  40b904:	stur	q0, [sp, #140]
  40b908:	stur	q0, [sp, #124]
  40b90c:	stur	q0, [sp, #108]
  40b910:	stur	q0, [sp, #92]
  40b914:	stur	q0, [sp, #76]
  40b918:	stur	q0, [sp, #60]
  40b91c:	stur	q0, [sp, #44]
  40b920:	stur	q0, [sp, #28]
  40b924:	stur	q0, [sp, #12]
  40b928:	str	x8, [sp]
  40b92c:	ldr	w8, [x0, #28]
  40b930:	str	x19, [sp, #176]
  40b934:	mov	x19, x0
  40b938:	add	x29, sp, #0xa0
  40b93c:	add	w8, w8, #0x1
  40b940:	stp	w8, w8, [x0, #28]
  40b944:	str	w8, [sp, #8]
  40b948:	strb	w1, [sp, #16]
  40b94c:	cbz	x2, 40b960 <rtnl_routedump_req@@Base+0x74>
  40b950:	mov	x0, sp
  40b954:	mov	w1, #0x9c                  	// #156
  40b958:	blr	x2
  40b95c:	cbnz	w0, 40b974 <rtnl_routedump_req@@Base+0x88>
  40b960:	ldr	w0, [x19]
  40b964:	mov	x1, sp
  40b968:	mov	w2, #0x9c                  	// #156
  40b96c:	mov	w3, wzr
  40b970:	bl	405080 <send@plt>
  40b974:	ldr	x19, [sp, #176]
  40b978:	ldp	x29, x30, [sp, #160]
  40b97c:	add	sp, sp, #0xc0
  40b980:	ret

000000000040b984 <rtnl_ruledump_req@@Base>:
  40b984:	sub	sp, sp, #0x30
  40b988:	mov	x8, #0x1c                  	// #28
  40b98c:	movk	x8, #0x22, lsl #32
  40b990:	movk	x8, #0x301, lsl #48
  40b994:	stp	x29, x30, [sp, #32]
  40b998:	str	x8, [sp]
  40b99c:	ldr	w8, [x0, #28]
  40b9a0:	mov	w2, #0x1c                  	// #28
  40b9a4:	mov	w3, wzr
  40b9a8:	add	x29, sp, #0x20
  40b9ac:	add	w8, w8, #0x1
  40b9b0:	stp	w8, w8, [x0, #28]
  40b9b4:	stp	w8, wzr, [sp, #8]
  40b9b8:	strb	w1, [sp, #16]
  40b9bc:	stur	xzr, [sp, #17]
  40b9c0:	str	wzr, [sp, #24]
  40b9c4:	ldr	w0, [x0]
  40b9c8:	mov	x1, sp
  40b9cc:	bl	405080 <send@plt>
  40b9d0:	ldp	x29, x30, [sp, #32]
  40b9d4:	add	sp, sp, #0x30
  40b9d8:	ret

000000000040b9dc <rtnl_neighdump_req@@Base>:
  40b9dc:	sub	sp, sp, #0x140
  40b9e0:	mov	x9, #0x1c                  	// #28
  40b9e4:	mov	x8, sp
  40b9e8:	movi	v0.2d, #0x0
  40b9ec:	movk	x9, #0x1e, lsl #32
  40b9f0:	movk	x9, #0x301, lsl #48
  40b9f4:	stur	q0, [x8, #252]
  40b9f8:	stur	q0, [x8, #236]
  40b9fc:	stur	q0, [x8, #220]
  40ba00:	stur	q0, [x8, #204]
  40ba04:	stur	q0, [x8, #188]
  40ba08:	stur	q0, [x8, #172]
  40ba0c:	stur	q0, [x8, #156]
  40ba10:	stur	q0, [x8, #140]
  40ba14:	add	x8, x8, #0xc
  40ba18:	stp	x29, x30, [sp, #288]
  40ba1c:	stp	x28, x19, [sp, #304]
  40ba20:	stur	q0, [sp, #124]
  40ba24:	stur	q0, [sp, #108]
  40ba28:	stur	q0, [sp, #92]
  40ba2c:	stur	q0, [sp, #76]
  40ba30:	stur	q0, [sp, #60]
  40ba34:	stur	q0, [sp, #44]
  40ba38:	stur	q0, [sp, #28]
  40ba3c:	stur	q0, [sp, #12]
  40ba40:	str	q0, [x8, #256]
  40ba44:	str	x9, [sp]
  40ba48:	ldr	w8, [x0, #28]
  40ba4c:	mov	x19, x0
  40ba50:	add	x29, sp, #0x120
  40ba54:	add	w8, w8, #0x1
  40ba58:	stp	w8, w8, [x0, #28]
  40ba5c:	str	w8, [sp, #8]
  40ba60:	strb	w1, [sp, #16]
  40ba64:	cbz	x2, 40ba78 <rtnl_neighdump_req@@Base+0x9c>
  40ba68:	mov	x0, sp
  40ba6c:	mov	w1, #0x11c                 	// #284
  40ba70:	blr	x2
  40ba74:	cbnz	w0, 40ba8c <rtnl_neighdump_req@@Base+0xb0>
  40ba78:	ldr	w0, [x19]
  40ba7c:	mov	x1, sp
  40ba80:	mov	w2, #0x11c                 	// #284
  40ba84:	mov	w3, wzr
  40ba88:	bl	405080 <send@plt>
  40ba8c:	ldp	x28, x19, [sp, #304]
  40ba90:	ldp	x29, x30, [sp, #288]
  40ba94:	add	sp, sp, #0x140
  40ba98:	ret

000000000040ba9c <rtnl_neightbldump_req@@Base>:
  40ba9c:	sub	sp, sp, #0x30
  40baa0:	mov	x8, #0x14                  	// #20
  40baa4:	movk	x8, #0x42, lsl #32
  40baa8:	movk	x8, #0x301, lsl #48
  40baac:	stp	x29, x30, [sp, #32]
  40bab0:	str	x8, [sp, #8]
  40bab4:	ldr	w8, [x0, #28]
  40bab8:	mov	w2, #0x14                  	// #20
  40babc:	mov	w3, wzr
  40bac0:	add	x29, sp, #0x20
  40bac4:	add	w8, w8, #0x1
  40bac8:	stp	w8, w8, [x0, #28]
  40bacc:	stp	w8, wzr, [sp, #16]
  40bad0:	strb	w1, [sp, #24]
  40bad4:	strb	wzr, [sp, #25]
  40bad8:	strh	wzr, [sp, #26]
  40badc:	ldr	w0, [x0]
  40bae0:	add	x1, sp, #0x8
  40bae4:	bl	405080 <send@plt>
  40bae8:	ldp	x29, x30, [sp, #32]
  40baec:	add	sp, sp, #0x30
  40baf0:	ret

000000000040baf4 <rtnl_mdbdump_req@@Base>:
  40baf4:	sub	sp, sp, #0x30
  40baf8:	mov	x8, #0x18                  	// #24
  40bafc:	movk	x8, #0x56, lsl #32
  40bb00:	movk	x8, #0x301, lsl #48
  40bb04:	stp	x29, x30, [sp, #32]
  40bb08:	str	x8, [sp, #8]
  40bb0c:	ldr	w8, [x0, #28]
  40bb10:	mov	w2, #0x18                  	// #24
  40bb14:	mov	w3, wzr
  40bb18:	add	x29, sp, #0x20
  40bb1c:	add	w8, w8, #0x1
  40bb20:	stp	w8, w8, [x0, #28]
  40bb24:	stp	w8, wzr, [sp, #16]
  40bb28:	strb	w1, [sp, #24]
  40bb2c:	str	wzr, [sp, #28]
  40bb30:	ldr	w0, [x0]
  40bb34:	add	x1, sp, #0x8
  40bb38:	bl	405080 <send@plt>
  40bb3c:	ldp	x29, x30, [sp, #32]
  40bb40:	add	sp, sp, #0x30
  40bb44:	ret

000000000040bb48 <rtnl_netconfdump_req@@Base>:
  40bb48:	sub	sp, sp, #0x30
  40bb4c:	mov	x8, #0x14                  	// #20
  40bb50:	movk	x8, #0x52, lsl #32
  40bb54:	movk	x8, #0x301, lsl #48
  40bb58:	stp	x29, x30, [sp, #32]
  40bb5c:	str	x8, [sp, #8]
  40bb60:	ldr	w8, [x0, #28]
  40bb64:	mov	w2, #0x14                  	// #20
  40bb68:	mov	w3, wzr
  40bb6c:	add	x29, sp, #0x20
  40bb70:	add	w8, w8, #0x1
  40bb74:	stp	w8, w8, [x0, #28]
  40bb78:	stp	w8, wzr, [sp, #16]
  40bb7c:	strb	w1, [sp, #24]
  40bb80:	ldr	w0, [x0]
  40bb84:	add	x1, sp, #0x8
  40bb88:	bl	405080 <send@plt>
  40bb8c:	ldp	x29, x30, [sp, #32]
  40bb90:	add	sp, sp, #0x30
  40bb94:	ret

000000000040bb98 <rtnl_nsiddump_req_filter_fn@@Base>:
  40bb98:	stp	x29, x30, [sp, #-48]!
  40bb9c:	stp	x28, x21, [sp, #16]
  40bba0:	stp	x20, x19, [sp, #32]
  40bba4:	mov	x29, sp
  40bba8:	sub	sp, sp, #0x420
  40bbac:	add	x8, sp, #0x8
  40bbb0:	mov	x20, x2
  40bbb4:	mov	w21, w1
  40bbb8:	mov	x19, x0
  40bbbc:	add	x0, x8, #0xc
  40bbc0:	mov	w2, #0x408                 	// #1032
  40bbc4:	mov	w1, wzr
  40bbc8:	bl	404ef0 <memset@plt>
  40bbcc:	mov	x8, #0x14                  	// #20
  40bbd0:	movk	x8, #0x5a, lsl #32
  40bbd4:	movk	x8, #0x301, lsl #48
  40bbd8:	str	x8, [sp, #8]
  40bbdc:	ldr	w8, [x19, #28]
  40bbe0:	add	w8, w8, #0x1
  40bbe4:	stp	w8, w8, [x19, #28]
  40bbe8:	str	w8, [sp, #16]
  40bbec:	strb	w21, [sp, #24]
  40bbf0:	cbz	x20, 40bc1c <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40bbf4:	add	x0, sp, #0x8
  40bbf8:	mov	w1, #0x414                 	// #1044
  40bbfc:	blr	x20
  40bc00:	cbnz	w0, 40bc20 <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40bc04:	ldr	w0, [x19]
  40bc08:	ldr	w2, [sp, #8]
  40bc0c:	add	x1, sp, #0x8
  40bc10:	mov	w3, wzr
  40bc14:	bl	405080 <send@plt>
  40bc18:	b	40bc20 <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40bc1c:	mov	w0, #0xffffffea            	// #-22
  40bc20:	add	sp, sp, #0x420
  40bc24:	ldp	x20, x19, [sp, #32]
  40bc28:	ldp	x28, x21, [sp, #16]
  40bc2c:	ldp	x29, x30, [sp], #48
  40bc30:	ret

000000000040bc34 <rtnl_linkdump_req@@Base>:
  40bc34:	sub	sp, sp, #0x40
  40bc38:	stp	x29, x30, [sp, #48]
  40bc3c:	add	x29, sp, #0x30
  40bc40:	cbz	w1, 40bc80 <rtnl_linkdump_req@@Base+0x4c>
  40bc44:	mov	x8, #0x20                  	// #32
  40bc48:	movk	x8, #0x12, lsl #32
  40bc4c:	movk	x8, #0x301, lsl #48
  40bc50:	str	x8, [sp, #8]
  40bc54:	ldr	w8, [x0, #28]
  40bc58:	mov	w2, #0x20                  	// #32
  40bc5c:	add	w8, w8, #0x1
  40bc60:	stp	w8, w8, [x0, #28]
  40bc64:	stp	w8, wzr, [sp, #16]
  40bc68:	strb	w1, [sp, #24]
  40bc6c:	stur	xzr, [sp, #25]
  40bc70:	str	xzr, [sp, #32]
  40bc74:	ldr	w0, [x0]
  40bc78:	add	x1, sp, #0x8
  40bc7c:	b	40bcc8 <rtnl_linkdump_req@@Base+0x94>
  40bc80:	mov	x8, #0x28                  	// #40
  40bc84:	movk	x8, #0x12, lsl #32
  40bc88:	movk	x8, #0x301, lsl #48
  40bc8c:	str	x8, [sp, #8]
  40bc90:	ldr	w8, [x0, #28]
  40bc94:	mov	x9, #0x8                   	// #8
  40bc98:	movk	x9, #0x1d, lsl #16
  40bc9c:	movk	x9, #0x1, lsl #32
  40bca0:	add	w8, w8, #0x1
  40bca4:	stp	w8, w8, [x0, #28]
  40bca8:	str	w8, [sp, #16]
  40bcac:	stur	xzr, [sp, #28]
  40bcb0:	stur	xzr, [sp, #20]
  40bcb4:	str	wzr, [sp, #36]
  40bcb8:	str	x9, [sp, #40]
  40bcbc:	ldr	w0, [x0]
  40bcc0:	add	x1, sp, #0x8
  40bcc4:	mov	w2, #0x28                  	// #40
  40bcc8:	mov	w3, wzr
  40bccc:	bl	405080 <send@plt>
  40bcd0:	ldp	x29, x30, [sp, #48]
  40bcd4:	add	sp, sp, #0x40
  40bcd8:	ret

000000000040bcdc <rtnl_linkdump_req_filter@@Base>:
  40bcdc:	sub	sp, sp, #0x40
  40bce0:	cmp	w1, #0x7
  40bce4:	stp	x29, x30, [sp, #48]
  40bce8:	add	x29, sp, #0x30
  40bcec:	b.eq	40bcf4 <rtnl_linkdump_req_filter@@Base+0x18>  // b.none
  40bcf0:	cbnz	w1, 40bd3c <rtnl_linkdump_req_filter@@Base+0x60>
  40bcf4:	mov	x8, #0x28                  	// #40
  40bcf8:	movk	x8, #0x12, lsl #32
  40bcfc:	movk	x8, #0x301, lsl #48
  40bd00:	str	x8, [sp, #8]
  40bd04:	ldr	w8, [x0, #28]
  40bd08:	mov	w9, #0x8                   	// #8
  40bd0c:	movk	w9, #0x1d, lsl #16
  40bd10:	add	w8, w8, #0x1
  40bd14:	stp	w8, w8, [x0, #28]
  40bd18:	stp	w8, wzr, [sp, #16]
  40bd1c:	strb	w1, [sp, #24]
  40bd20:	stur	xzr, [sp, #25]
  40bd24:	str	xzr, [sp, #32]
  40bd28:	stp	w9, w2, [sp, #40]
  40bd2c:	ldr	w0, [x0]
  40bd30:	add	x1, sp, #0x8
  40bd34:	mov	w2, #0x28                  	// #40
  40bd38:	b	40bd74 <rtnl_linkdump_req_filter@@Base+0x98>
  40bd3c:	mov	x8, #0x20                  	// #32
  40bd40:	movk	x8, #0x12, lsl #32
  40bd44:	movk	x8, #0x301, lsl #48
  40bd48:	str	x8, [sp, #8]
  40bd4c:	ldr	w8, [x0, #28]
  40bd50:	mov	w2, #0x20                  	// #32
  40bd54:	add	w8, w8, #0x1
  40bd58:	stp	w8, w8, [x0, #28]
  40bd5c:	stp	w8, wzr, [sp, #16]
  40bd60:	strb	w1, [sp, #24]
  40bd64:	stur	xzr, [sp, #25]
  40bd68:	str	xzr, [sp, #32]
  40bd6c:	ldr	w0, [x0]
  40bd70:	add	x1, sp, #0x8
  40bd74:	mov	w3, wzr
  40bd78:	bl	405080 <send@plt>
  40bd7c:	ldp	x29, x30, [sp, #48]
  40bd80:	add	sp, sp, #0x40
  40bd84:	ret

000000000040bd88 <rtnl_linkdump_req_filter_fn@@Base>:
  40bd88:	stp	x29, x30, [sp, #-48]!
  40bd8c:	stp	x28, x21, [sp, #16]
  40bd90:	stp	x20, x19, [sp, #32]
  40bd94:	mov	x29, sp
  40bd98:	sub	sp, sp, #0x420
  40bd9c:	mov	x21, x2
  40bda0:	mov	w20, w1
  40bda4:	cmp	w1, #0x11
  40bda8:	mov	x19, x0
  40bdac:	b.eq	40bdb4 <rtnl_linkdump_req_filter_fn@@Base+0x2c>  // b.none
  40bdb0:	cbnz	w20, 40be10 <rtnl_linkdump_req_filter_fn@@Base+0x88>
  40bdb4:	mov	x8, sp
  40bdb8:	add	x0, x8, #0xc
  40bdbc:	mov	w2, #0x414                 	// #1044
  40bdc0:	mov	w1, wzr
  40bdc4:	bl	404ef0 <memset@plt>
  40bdc8:	mov	x8, #0x20                  	// #32
  40bdcc:	movk	x8, #0x12, lsl #32
  40bdd0:	movk	x8, #0x301, lsl #48
  40bdd4:	str	x8, [sp]
  40bdd8:	ldr	w8, [x19, #28]
  40bddc:	add	w8, w8, #0x1
  40bde0:	stp	w8, w8, [x19, #28]
  40bde4:	str	w8, [sp, #8]
  40bde8:	strb	w20, [sp, #16]
  40bdec:	cbz	x21, 40be54 <rtnl_linkdump_req_filter_fn@@Base+0xcc>
  40bdf0:	mov	x0, sp
  40bdf4:	mov	w1, #0x420                 	// #1056
  40bdf8:	blr	x21
  40bdfc:	cbnz	w0, 40be58 <rtnl_linkdump_req_filter_fn@@Base+0xd0>
  40be00:	ldr	w0, [x19]
  40be04:	ldr	w2, [sp]
  40be08:	mov	x1, sp
  40be0c:	b	40be48 <rtnl_linkdump_req_filter_fn@@Base+0xc0>
  40be10:	mov	x8, #0x20                  	// #32
  40be14:	movk	x8, #0x12, lsl #32
  40be18:	movk	x8, #0x301, lsl #48
  40be1c:	str	x8, [sp]
  40be20:	ldr	w8, [x19, #28]
  40be24:	mov	x1, sp
  40be28:	mov	w2, #0x20                  	// #32
  40be2c:	add	w8, w8, #0x1
  40be30:	stp	w8, w8, [x19, #28]
  40be34:	stp	w8, wzr, [sp, #8]
  40be38:	strb	w20, [sp, #16]
  40be3c:	stur	xzr, [sp, #17]
  40be40:	str	xzr, [sp, #24]
  40be44:	ldr	w0, [x19]
  40be48:	mov	w3, wzr
  40be4c:	bl	405080 <send@plt>
  40be50:	b	40be58 <rtnl_linkdump_req_filter_fn@@Base+0xd0>
  40be54:	mov	w0, #0xffffffea            	// #-22
  40be58:	add	sp, sp, #0x420
  40be5c:	ldp	x20, x19, [sp, #32]
  40be60:	ldp	x28, x21, [sp, #16]
  40be64:	ldp	x29, x30, [sp], #48
  40be68:	ret

000000000040be6c <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40be6c:	sub	sp, sp, #0xc0
  40be70:	mov	x9, #0x20                  	// #32
  40be74:	movk	x9, #0x1e, lsl #32
  40be78:	movi	v0.2d, #0x0
  40be7c:	movk	x9, #0x301, lsl #48
  40be80:	stp	x29, x30, [sp, #160]
  40be84:	str	wzr, [sp, #156]
  40be88:	stur	q0, [sp, #140]
  40be8c:	stur	q0, [sp, #124]
  40be90:	stur	q0, [sp, #108]
  40be94:	stur	q0, [sp, #92]
  40be98:	stur	q0, [sp, #76]
  40be9c:	stur	q0, [sp, #60]
  40bea0:	stur	q0, [sp, #44]
  40bea4:	stur	q0, [sp, #28]
  40bea8:	stur	q0, [sp, #12]
  40beac:	str	x9, [sp]
  40beb0:	ldr	w9, [x0, #28]
  40beb4:	str	x19, [sp, #176]
  40beb8:	mov	x8, x1
  40bebc:	mov	x19, x0
  40bec0:	add	w9, w9, #0x1
  40bec4:	stp	w9, w9, [x0, #28]
  40bec8:	str	w9, [sp, #8]
  40becc:	mov	w9, #0x7                   	// #7
  40bed0:	mov	x0, sp
  40bed4:	mov	w1, #0xa0                  	// #160
  40bed8:	add	x29, sp, #0xa0
  40bedc:	strb	w9, [sp, #16]
  40bee0:	blr	x8
  40bee4:	cbnz	w0, 40befc <rtnl_fdb_linkdump_req_filter_fn@@Base+0x90>
  40bee8:	ldr	w0, [x19]
  40beec:	mov	x1, sp
  40bef0:	mov	w2, #0xa0                  	// #160
  40bef4:	mov	w3, wzr
  40bef8:	bl	405080 <send@plt>
  40befc:	ldr	x19, [sp, #176]
  40bf00:	ldp	x29, x30, [sp, #160]
  40bf04:	add	sp, sp, #0xc0
  40bf08:	ret

000000000040bf0c <rtnl_statsdump_req_filter@@Base>:
  40bf0c:	sub	sp, sp, #0x30
  40bf10:	mov	x8, #0x1c                  	// #28
  40bf14:	movk	x8, #0x5e, lsl #32
  40bf18:	movk	x8, #0x301, lsl #48
  40bf1c:	stp	x29, x30, [sp, #32]
  40bf20:	stp	xzr, xzr, [sp, #8]
  40bf24:	str	x8, [sp]
  40bf28:	ldr	w8, [x0, #28]
  40bf2c:	mov	w3, wzr
  40bf30:	add	x29, sp, #0x20
  40bf34:	add	w8, w8, #0x1
  40bf38:	stp	w8, w8, [x0, #28]
  40bf3c:	stp	w8, wzr, [sp, #8]
  40bf40:	strb	w1, [sp, #16]
  40bf44:	str	w2, [sp, #24]
  40bf48:	ldr	w0, [x0]
  40bf4c:	mov	x1, sp
  40bf50:	mov	w2, #0x1c                  	// #28
  40bf54:	bl	405080 <send@plt>
  40bf58:	ldp	x29, x30, [sp, #32]
  40bf5c:	add	sp, sp, #0x30
  40bf60:	ret

000000000040bf64 <rtnl_send@@Base>:
  40bf64:	stp	x29, x30, [sp, #-16]!
  40bf68:	ldr	w0, [x0]
  40bf6c:	mov	w3, wzr
  40bf70:	sxtw	x2, w2
  40bf74:	mov	x29, sp
  40bf78:	bl	405080 <send@plt>
  40bf7c:	ldp	x29, x30, [sp], #16
  40bf80:	ret

000000000040bf84 <rtnl_send_check@@Base>:
  40bf84:	stp	x29, x30, [sp, #-32]!
  40bf88:	stp	x28, x19, [sp, #16]
  40bf8c:	mov	x29, sp
  40bf90:	sub	sp, sp, #0x400
  40bf94:	mov	x19, x0
  40bf98:	ldr	w0, [x0]
  40bf9c:	mov	w3, wzr
  40bfa0:	sxtw	x2, w2
  40bfa4:	bl	405080 <send@plt>
  40bfa8:	mov	x8, x0
  40bfac:	tbnz	w8, #31, 40c048 <rtnl_send_check@@Base+0xc4>
  40bfb0:	ldr	w0, [x19]
  40bfb4:	mov	x1, sp
  40bfb8:	mov	w2, #0x400                 	// #1024
  40bfbc:	mov	w3, #0x42                  	// #66
  40bfc0:	bl	404fc0 <recv@plt>
  40bfc4:	tbnz	w0, #31, 40c018 <rtnl_send_check@@Base+0x94>
  40bfc8:	cmp	w0, #0x10
  40bfcc:	b.lt	40c010 <rtnl_send_check@@Base+0x8c>  // b.tstop
  40bfd0:	mov	x9, sp
  40bfd4:	ldr	w10, [x9]
  40bfd8:	mov	w8, wzr
  40bfdc:	cmp	w10, #0x10
  40bfe0:	b.cc	40c048 <rtnl_send_check@@Base+0xc4>  // b.lo, b.ul, b.last
  40bfe4:	cmp	w10, w0
  40bfe8:	b.hi	40c048 <rtnl_send_check@@Base+0xc4>  // b.pmore
  40bfec:	ldrh	w8, [x9, #4]
  40bff0:	cmp	w8, #0x2
  40bff4:	b.eq	40c02c <rtnl_send_check@@Base+0xa8>  // b.none
  40bff8:	add	w8, w10, #0x3
  40bffc:	and	w8, w8, #0xfffffffc
  40c000:	sub	w0, w0, w8
  40c004:	cmp	w0, #0xf
  40c008:	add	x9, x9, x8
  40c00c:	b.gt	40bfd4 <rtnl_send_check@@Base+0x50>
  40c010:	mov	w8, wzr
  40c014:	b	40c048 <rtnl_send_check@@Base+0xc4>
  40c018:	bl	4051f0 <__errno_location@plt>
  40c01c:	ldr	w8, [x0]
  40c020:	cmp	w8, #0xb
  40c024:	csetm	w8, ne  // ne = any
  40c028:	b	40c048 <rtnl_send_check@@Base+0xc4>
  40c02c:	cmp	w10, #0x23
  40c030:	b.ls	40c05c <rtnl_send_check@@Base+0xd8>  // b.plast
  40c034:	ldr	w8, [x9, #16]
  40c038:	neg	w19, w8
  40c03c:	bl	4051f0 <__errno_location@plt>
  40c040:	str	w19, [x0]
  40c044:	mov	w8, #0xffffffff            	// #-1
  40c048:	mov	w0, w8
  40c04c:	add	sp, sp, #0x400
  40c050:	ldp	x28, x19, [sp, #16]
  40c054:	ldp	x29, x30, [sp], #32
  40c058:	ret
  40c05c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c060:	ldr	x8, [x8, #3992]
  40c064:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c068:	add	x0, x0, #0x8d8
  40c06c:	mov	w1, #0x10                  	// #16
  40c070:	ldr	x3, [x8]
  40c074:	mov	w2, #0x1                   	// #1
  40c078:	bl	4050c0 <fwrite@plt>
  40c07c:	b	40c044 <rtnl_send_check@@Base+0xc0>

000000000040c080 <rtnl_dump_request@@Base>:
  40c080:	sub	sp, sp, #0x90
  40c084:	stp	x29, x30, [sp, #128]
  40c088:	add	x29, sp, #0x80
  40c08c:	add	w8, w3, #0x10
  40c090:	mov	w9, #0x301                 	// #769
  40c094:	sturh	w1, [x29, #-12]
  40c098:	adrp	x10, 40e000 <_IO_stdin_used@@Base+0x428>
  40c09c:	stur	w8, [x29, #-16]
  40c0a0:	sturh	w9, [x29, #-10]
  40c0a4:	add	x10, x10, #0xbe0
  40c0a8:	ldr	w8, [x0, #28]
  40c0ac:	ldr	x13, [x10]
  40c0b0:	ldr	w10, [x10, #8]
  40c0b4:	sub	x11, x29, #0x10
  40c0b8:	mov	w12, #0x10                  	// #16
  40c0bc:	sxtw	x9, w3
  40c0c0:	add	w8, w8, #0x1
  40c0c4:	stp	w8, w8, [x0, #28]
  40c0c8:	stur	x13, [x29, #-32]
  40c0cc:	sub	x13, x29, #0x20
  40c0d0:	stur	w10, [x29, #-24]
  40c0d4:	mov	w10, #0xc                   	// #12
  40c0d8:	stp	x11, x12, [sp, #64]
  40c0dc:	add	x11, sp, #0x40
  40c0e0:	stp	x2, x9, [sp, #80]
  40c0e4:	mov	w9, #0x2                   	// #2
  40c0e8:	stp	w8, wzr, [x29, #-8]
  40c0ec:	str	x13, [sp, #8]
  40c0f0:	str	w10, [sp, #16]
  40c0f4:	stp	x11, x9, [sp, #24]
  40c0f8:	stp	xzr, xzr, [sp, #40]
  40c0fc:	str	wzr, [sp, #56]
  40c100:	ldr	w0, [x0]
  40c104:	add	x1, sp, #0x8
  40c108:	mov	w2, wzr
  40c10c:	bl	404f10 <sendmsg@plt>
  40c110:	ldp	x29, x30, [sp, #128]
  40c114:	add	sp, sp, #0x90
  40c118:	ret

000000000040c11c <rtnl_dump_request_n@@Base>:
  40c11c:	sub	sp, sp, #0x70
  40c120:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x428>
  40c124:	add	x8, x8, #0xbe0
  40c128:	ldr	x9, [x8]
  40c12c:	ldr	w8, [x8, #8]
  40c130:	stp	x29, x30, [sp, #96]
  40c134:	add	x29, sp, #0x60
  40c138:	stur	x9, [x29, #-16]
  40c13c:	stur	w8, [x29, #-8]
  40c140:	ldr	w8, [x1]
  40c144:	sub	x10, x29, #0x10
  40c148:	mov	w9, #0xc                   	// #12
  40c14c:	str	x10, [sp, #8]
  40c150:	sub	x10, x29, #0x20
  40c154:	str	w9, [sp, #16]
  40c158:	mov	w9, #0x1                   	// #1
  40c15c:	stp	x10, x9, [sp, #24]
  40c160:	mov	w9, #0x301                 	// #769
  40c164:	stp	xzr, xzr, [sp, #40]
  40c168:	str	wzr, [sp, #56]
  40c16c:	stp	x1, x8, [x29, #-32]
  40c170:	strh	w9, [x1, #6]
  40c174:	str	wzr, [x1, #12]
  40c178:	ldr	w8, [x0, #28]
  40c17c:	mov	w2, wzr
  40c180:	add	w8, w8, #0x1
  40c184:	stp	w8, w8, [x0, #28]
  40c188:	str	w8, [x1, #8]
  40c18c:	ldr	w0, [x0]
  40c190:	add	x1, sp, #0x8
  40c194:	bl	404f10 <sendmsg@plt>
  40c198:	ldp	x29, x30, [sp, #96]
  40c19c:	add	sp, sp, #0x70
  40c1a0:	ret

000000000040c1a4 <rtnl_dump_filter_nc@@Base>:
  40c1a4:	sub	sp, sp, #0xf0
  40c1a8:	stp	x29, x30, [sp, #144]
  40c1ac:	add	x29, sp, #0x90
  40c1b0:	sub	x8, x29, #0x10
  40c1b4:	mov	w9, #0xc                   	// #12
  40c1b8:	str	x8, [sp, #56]
  40c1bc:	sub	x8, x29, #0x20
  40c1c0:	str	w9, [sp, #64]
  40c1c4:	mov	w9, #0x1                   	// #1
  40c1c8:	stp	x28, x27, [sp, #160]
  40c1cc:	stp	x26, x25, [sp, #176]
  40c1d0:	stp	x24, x23, [sp, #192]
  40c1d4:	stp	x22, x21, [sp, #208]
  40c1d8:	stp	x20, x19, [sp, #224]
  40c1dc:	stp	x1, x2, [sp]
  40c1e0:	strh	w3, [sp, #16]
  40c1e4:	stp	xzr, xzr, [sp, #32]
  40c1e8:	str	xzr, [sp, #24]
  40c1ec:	stp	xzr, xzr, [sp, #88]
  40c1f0:	stp	x8, x9, [sp, #72]
  40c1f4:	str	wzr, [sp, #104]
  40c1f8:	mov	x19, x0
  40c1fc:	ldr	w0, [x0]
  40c200:	mov	x20, x1
  40c204:	add	x1, sp, #0x38
  40c208:	add	x2, sp, #0x30
  40c20c:	bl	40d9b8 <__parse_rtattr_nested_compat@@Base+0x110>
  40c210:	mov	w22, w0
  40c214:	tbnz	w0, #31, 40c3ec <rtnl_dump_filter_nc@@Base+0x248>
  40c218:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x428>
  40c21c:	mov	w27, wzr
  40c220:	add	x21, x21, #0x97e
  40c224:	ldr	x3, [x19, #40]
  40c228:	cbz	x3, 40c240 <rtnl_dump_filter_nc@@Base+0x9c>
  40c22c:	ldr	x0, [sp, #48]
  40c230:	add	w8, w22, #0x3
  40c234:	and	w2, w8, #0xfffffffc
  40c238:	mov	w1, #0x1                   	// #1
  40c23c:	bl	4050c0 <fwrite@plt>
  40c240:	cbz	x20, 40c35c <rtnl_dump_filter_nc@@Base+0x1b8>
  40c244:	mov	w26, wzr
  40c248:	mov	x28, sp
  40c24c:	b	40c25c <rtnl_dump_filter_nc@@Base+0xb8>
  40c250:	mov	w23, w22
  40c254:	ldr	x8, [x28, #24]!
  40c258:	cbz	x8, 40c328 <rtnl_dump_filter_nc@@Base+0x184>
  40c25c:	cmp	w22, #0x10
  40c260:	b.lt	40c250 <rtnl_dump_filter_nc@@Base+0xac>  // b.tstop
  40c264:	ldr	x24, [sp, #48]
  40c268:	mov	w23, w22
  40c26c:	b	40c288 <rtnl_dump_filter_nc@@Base+0xe4>
  40c270:	add	w8, w8, #0x3
  40c274:	and	w8, w8, #0xfffffffc
  40c278:	sub	w23, w23, w8
  40c27c:	cmp	w23, #0xf
  40c280:	add	x24, x24, x8
  40c284:	b.le	40c254 <rtnl_dump_filter_nc@@Base+0xb0>
  40c288:	ldr	w8, [x24]
  40c28c:	cmp	w8, #0x10
  40c290:	b.cc	40c254 <rtnl_dump_filter_nc@@Base+0xb0>  // b.lo, b.ul, b.last
  40c294:	cmp	w8, w23
  40c298:	b.hi	40c254 <rtnl_dump_filter_nc@@Base+0xb0>  // b.pmore
  40c29c:	ldrh	w9, [x28, #16]
  40c2a0:	ldrh	w10, [x24, #6]
  40c2a4:	bic	w9, w10, w9
  40c2a8:	strh	w9, [x24, #6]
  40c2ac:	ldur	w10, [x29, #-12]
  40c2b0:	cbnz	w10, 40c270 <rtnl_dump_filter_nc@@Base+0xcc>
  40c2b4:	ldr	w10, [x24, #12]
  40c2b8:	ldr	w11, [x19, #8]
  40c2bc:	cmp	w10, w11
  40c2c0:	b.ne	40c270 <rtnl_dump_filter_nc@@Base+0xcc>  // b.any
  40c2c4:	ldr	w10, [x24, #8]
  40c2c8:	ldr	w11, [x19, #32]
  40c2cc:	cmp	w10, w11
  40c2d0:	b.ne	40c270 <rtnl_dump_filter_nc@@Base+0xcc>  // b.any
  40c2d4:	ldrh	w10, [x24, #4]
  40c2d8:	tst	w9, #0x10
  40c2dc:	csinc	w27, w27, wzr, eq  // eq = none
  40c2e0:	cmp	w10, #0x2
  40c2e4:	b.eq	40c390 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.none
  40c2e8:	cmp	w10, #0x3
  40c2ec:	b.eq	40c310 <rtnl_dump_filter_nc@@Base+0x16c>  // b.none
  40c2f0:	ldr	x9, [x19, #40]
  40c2f4:	cbnz	x9, 40c270 <rtnl_dump_filter_nc@@Base+0xcc>
  40c2f8:	ldp	x8, x1, [x28]
  40c2fc:	mov	x0, x24
  40c300:	blr	x8
  40c304:	tbnz	w0, #31, 40c3dc <rtnl_dump_filter_nc@@Base+0x238>
  40c308:	ldr	w8, [x24]
  40c30c:	b	40c270 <rtnl_dump_filter_nc@@Base+0xcc>
  40c310:	cmp	w8, #0x13
  40c314:	b.ls	40c41c <rtnl_dump_filter_nc@@Base+0x278>  // b.plast
  40c318:	ldr	w24, [x24, #16]
  40c31c:	tbnz	w24, #31, 40c458 <rtnl_dump_filter_nc@@Base+0x2b4>
  40c320:	mov	w26, #0x1                   	// #1
  40c324:	b	40c254 <rtnl_dump_filter_nc@@Base+0xb0>
  40c328:	ldr	x0, [sp, #48]
  40c32c:	bl	405060 <free@plt>
  40c330:	cbnz	w26, 40c410 <rtnl_dump_filter_nc@@Base+0x26c>
  40c334:	ldrb	w8, [sp, #104]
  40c338:	tbnz	w8, #5, 40c370 <rtnl_dump_filter_nc@@Base+0x1cc>
  40c33c:	cbnz	w23, 40c4cc <rtnl_dump_filter_nc@@Base+0x328>
  40c340:	ldr	w0, [x19]
  40c344:	add	x1, sp, #0x38
  40c348:	add	x2, sp, #0x30
  40c34c:	bl	40d9b8 <__parse_rtattr_nested_compat@@Base+0x110>
  40c350:	mov	w22, w0
  40c354:	tbz	w0, #31, 40c224 <rtnl_dump_filter_nc@@Base+0x80>
  40c358:	b	40c3ec <rtnl_dump_filter_nc@@Base+0x248>
  40c35c:	ldr	x0, [sp, #48]
  40c360:	bl	405060 <free@plt>
  40c364:	mov	w23, wzr
  40c368:	ldrb	w8, [sp, #104]
  40c36c:	tbz	w8, #5, 40c33c <rtnl_dump_filter_nc@@Base+0x198>
  40c370:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c374:	ldr	x8, [x8, #3992]
  40c378:	mov	w1, #0x12                  	// #18
  40c37c:	mov	w2, #0x1                   	// #1
  40c380:	mov	x0, x21
  40c384:	ldr	x3, [x8]
  40c388:	bl	4050c0 <fwrite@plt>
  40c38c:	b	40c340 <rtnl_dump_filter_nc@@Base+0x19c>
  40c390:	cmp	w8, #0x23
  40c394:	b.ls	40c434 <rtnl_dump_filter_nc@@Base+0x290>  // b.plast
  40c398:	ldr	w8, [x24, #16]
  40c39c:	neg	w20, w8
  40c3a0:	bl	4051f0 <__errno_location@plt>
  40c3a4:	str	w20, [x0]
  40c3a8:	ldr	w8, [x19, #36]
  40c3ac:	cmp	w8, #0x4
  40c3b0:	b.ne	40c3c4 <rtnl_dump_filter_nc@@Base+0x220>  // b.any
  40c3b4:	cmp	w20, #0x2
  40c3b8:	b.eq	40c3cc <rtnl_dump_filter_nc@@Base+0x228>  // b.none
  40c3bc:	cmp	w20, #0x5f
  40c3c0:	b.eq	40c3cc <rtnl_dump_filter_nc@@Base+0x228>  // b.none
  40c3c4:	ldrb	w8, [x19, #48]
  40c3c8:	tbz	w8, #1, 40c494 <rtnl_dump_filter_nc@@Base+0x2f0>
  40c3cc:	ldr	x0, [sp, #48]
  40c3d0:	bl	405060 <free@plt>
  40c3d4:	mov	w22, #0xffffffff            	// #-1
  40c3d8:	b	40c3ec <rtnl_dump_filter_nc@@Base+0x248>
  40c3dc:	mov	w25, w0
  40c3e0:	ldr	x0, [sp, #48]
  40c3e4:	bl	405060 <free@plt>
  40c3e8:	mov	w22, w25
  40c3ec:	mov	w0, w22
  40c3f0:	ldp	x20, x19, [sp, #224]
  40c3f4:	ldp	x22, x21, [sp, #208]
  40c3f8:	ldp	x24, x23, [sp, #192]
  40c3fc:	ldp	x26, x25, [sp, #176]
  40c400:	ldp	x28, x27, [sp, #160]
  40c404:	ldp	x29, x30, [sp, #144]
  40c408:	add	sp, sp, #0xf0
  40c40c:	ret
  40c410:	cbnz	w27, 40c4a4 <rtnl_dump_filter_nc@@Base+0x300>
  40c414:	mov	w22, wzr
  40c418:	b	40c3ec <rtnl_dump_filter_nc@@Base+0x248>
  40c41c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c420:	ldr	x8, [x8, #3992]
  40c424:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c428:	add	x0, x0, #0xb36
  40c42c:	mov	w1, #0xf                   	// #15
  40c430:	b	40c448 <rtnl_dump_filter_nc@@Base+0x2a4>
  40c434:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c438:	ldr	x8, [x8, #3992]
  40c43c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c440:	add	x0, x0, #0x8d8
  40c444:	mov	w1, #0x10                  	// #16
  40c448:	ldr	x3, [x8]
  40c44c:	mov	w2, #0x1                   	// #1
  40c450:	bl	4050c0 <fwrite@plt>
  40c454:	b	40c3cc <rtnl_dump_filter_nc@@Base+0x228>
  40c458:	neg	w19, w24
  40c45c:	bl	4051f0 <__errno_location@plt>
  40c460:	cmn	w24, #0x2
  40c464:	str	w19, [x0]
  40c468:	b.eq	40c3cc <rtnl_dump_filter_nc@@Base+0x228>  // b.none
  40c46c:	cmp	w19, #0x5f
  40c470:	b.eq	40c3cc <rtnl_dump_filter_nc@@Base+0x228>  // b.none
  40c474:	cmp	w19, #0x5a
  40c478:	b.ne	40c494 <rtnl_dump_filter_nc@@Base+0x2f0>  // b.any
  40c47c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c480:	ldr	x8, [x8, #3992]
  40c484:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c488:	add	x0, x0, #0xb46
  40c48c:	mov	w1, #0x24                  	// #36
  40c490:	b	40c448 <rtnl_dump_filter_nc@@Base+0x2a4>
  40c494:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c498:	add	x0, x0, #0xb6b
  40c49c:	bl	404d60 <perror@plt>
  40c4a0:	b	40c3cc <rtnl_dump_filter_nc@@Base+0x228>
  40c4a4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c4a8:	ldr	x8, [x8, #3992]
  40c4ac:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c4b0:	add	x0, x0, #0xae6
  40c4b4:	mov	w1, #0x2e                  	// #46
  40c4b8:	ldr	x3, [x8]
  40c4bc:	mov	w2, #0x1                   	// #1
  40c4c0:	bl	4050c0 <fwrite@plt>
  40c4c4:	mov	w22, wzr
  40c4c8:	b	40c3ec <rtnl_dump_filter_nc@@Base+0x248>
  40c4cc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c4d0:	ldr	x8, [x8, #3992]
  40c4d4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40c4d8:	add	x1, x1, #0x991
  40c4dc:	mov	w2, w23
  40c4e0:	ldr	x0, [x8]
  40c4e4:	bl	405240 <fprintf@plt>
  40c4e8:	mov	w0, #0x1                   	// #1
  40c4ec:	bl	404d50 <exit@plt>

000000000040c4f0 <rtnl_talk@@Base>:
  40c4f0:	sub	sp, sp, #0x20
  40c4f4:	stp	x29, x30, [sp, #16]
  40c4f8:	ldr	w8, [x1]
  40c4fc:	mov	x3, x2
  40c500:	mov	w2, #0x1                   	// #1
  40c504:	mov	w4, #0x1                   	// #1
  40c508:	stp	x1, x8, [sp]
  40c50c:	mov	x1, sp
  40c510:	add	x29, sp, #0x10
  40c514:	bl	40c52c <rtnl_talk_iov@@Base+0x8>
  40c518:	ldp	x29, x30, [sp, #16]
  40c51c:	add	sp, sp, #0x20
  40c520:	ret

000000000040c524 <rtnl_talk_iov@@Base>:
  40c524:	mov	w4, #0x1                   	// #1
  40c528:	b	40c52c <rtnl_talk_iov@@Base+0x8>
  40c52c:	sub	sp, sp, #0xd0
  40c530:	stp	x29, x30, [sp, #112]
  40c534:	add	x29, sp, #0x70
  40c538:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x428>
  40c53c:	sub	x9, x29, #0x10
  40c540:	add	x8, x8, #0xbe0
  40c544:	str	x9, [sp, #24]
  40c548:	mov	w9, #0xc                   	// #12
  40c54c:	str	w9, [sp, #32]
  40c550:	ldr	x9, [x8]
  40c554:	ldr	w8, [x8, #8]
  40c558:	stp	x22, x21, [sp, #176]
  40c55c:	stp	x20, x19, [sp, #192]
  40c560:	mov	w22, w4
  40c564:	mov	x19, x3
  40c568:	mov	x20, x2
  40c56c:	mov	x21, x0
  40c570:	stp	x28, x27, [sp, #128]
  40c574:	stp	x26, x25, [sp, #144]
  40c578:	stp	x24, x23, [sp, #160]
  40c57c:	stp	x1, x2, [sp, #40]
  40c580:	stp	xzr, xzr, [sp, #56]
  40c584:	stur	x9, [x29, #-16]
  40c588:	stur	w8, [x29, #-8]
  40c58c:	str	wzr, [sp, #72]
  40c590:	cbz	x2, 40c5d4 <rtnl_talk_iov@@Base+0xb0>
  40c594:	ldr	w27, [x21, #28]
  40c598:	mov	x8, x20
  40c59c:	b	40c5ac <rtnl_talk_iov@@Base+0x88>
  40c5a0:	subs	x8, x8, #0x1
  40c5a4:	add	x1, x1, #0x10
  40c5a8:	b.eq	40c5cc <rtnl_talk_iov@@Base+0xa8>  // b.none
  40c5ac:	ldr	x9, [x1]
  40c5b0:	add	w27, w27, #0x1
  40c5b4:	str	w27, [x9, #8]
  40c5b8:	cbnz	x19, 40c5a0 <rtnl_talk_iov@@Base+0x7c>
  40c5bc:	ldrh	w10, [x9, #6]
  40c5c0:	orr	w10, w10, #0x4
  40c5c4:	strh	w10, [x9, #6]
  40c5c8:	b	40c5a0 <rtnl_talk_iov@@Base+0x7c>
  40c5cc:	str	w27, [x21, #28]
  40c5d0:	b	40c5d8 <rtnl_talk_iov@@Base+0xb4>
  40c5d4:	mov	w27, wzr
  40c5d8:	ldr	w0, [x21]
  40c5dc:	add	x1, sp, #0x18
  40c5e0:	mov	w2, wzr
  40c5e4:	bl	404f10 <sendmsg@plt>
  40c5e8:	tbnz	w0, #31, 40c87c <rtnl_talk_iov@@Base+0x358>
  40c5ec:	sub	x8, x29, #0x20
  40c5f0:	mov	w9, #0x1                   	// #1
  40c5f4:	stp	x8, x9, [sp, #40]
  40c5f8:	ldr	w0, [x21]
  40c5fc:	add	x1, sp, #0x18
  40c600:	add	x2, sp, #0x10
  40c604:	bl	40d9b8 <__parse_rtattr_nested_compat@@Base+0x110>
  40c608:	mov	w25, w0
  40c60c:	tbnz	w0, #31, 40c858 <rtnl_talk_iov@@Base+0x334>
  40c610:	adrp	x11, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c614:	ldr	x11, [x11, #3992]
  40c618:	mov	w9, w27
  40c61c:	adrp	x13, 40e000 <_IO_stdin_used@@Base+0x428>
  40c620:	mov	w24, wzr
  40c624:	eor	w12, w22, #0x1
  40c628:	mov	w8, #0x1                   	// #1
  40c62c:	sub	x23, x9, x20
  40c630:	add	x13, x13, #0x97e
  40c634:	mov	w28, w24
  40c638:	sxtw	x24, w8
  40c63c:	ldr	w2, [sp, #32]
  40c640:	cmp	w2, #0xc
  40c644:	b.ne	40c8c0 <rtnl_talk_iov@@Base+0x39c>  // b.any
  40c648:	cmp	w25, #0x10
  40c64c:	b.cc	40c7b8 <rtnl_talk_iov@@Base+0x294>  // b.lo, b.ul, b.last
  40c650:	ldr	x22, [sp, #16]
  40c654:	b	40c670 <rtnl_talk_iov@@Base+0x14c>
  40c658:	add	w8, w26, #0x3
  40c65c:	and	x8, x8, #0xfffffffc
  40c660:	sub	w25, w25, w8
  40c664:	cmp	w25, #0xf
  40c668:	add	x22, x22, x8
  40c66c:	b.ls	40c7b8 <rtnl_talk_iov@@Base+0x294>  // b.plast
  40c670:	ldr	w26, [x22]
  40c674:	cmp	w26, w25
  40c678:	b.gt	40c82c <rtnl_talk_iov@@Base+0x308>
  40c67c:	sub	w8, w26, #0x10
  40c680:	tbnz	w8, #31, 40c82c <rtnl_talk_iov@@Base+0x308>
  40c684:	ldur	w9, [x29, #-12]
  40c688:	cbnz	w9, 40c658 <rtnl_talk_iov@@Base+0x134>
  40c68c:	ldr	w9, [x22, #12]
  40c690:	ldr	w10, [x21, #8]
  40c694:	cmp	w9, w10
  40c698:	b.ne	40c658 <rtnl_talk_iov@@Base+0x134>  // b.any
  40c69c:	ldr	w9, [x22, #8]
  40c6a0:	cmp	w9, w27
  40c6a4:	b.hi	40c658 <rtnl_talk_iov@@Base+0x134>  // b.pmore
  40c6a8:	cmp	x23, x9
  40c6ac:	b.hi	40c658 <rtnl_talk_iov@@Base+0x134>  // b.pmore
  40c6b0:	ldrh	w9, [x22, #4]
  40c6b4:	cmp	w9, #0x2
  40c6b8:	b.eq	40c6f4 <rtnl_talk_iov@@Base+0x1d0>  // b.none
  40c6bc:	cbnz	x19, 40c81c <rtnl_talk_iov@@Base+0x2f8>
  40c6c0:	ldr	x3, [x11]
  40c6c4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c6c8:	mov	w1, #0x14                  	// #20
  40c6cc:	mov	w2, #0x1                   	// #1
  40c6d0:	add	x0, x0, #0xbb3
  40c6d4:	str	w12, [sp, #12]
  40c6d8:	bl	4050c0 <fwrite@plt>
  40c6dc:	adrp	x11, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c6e0:	ldr	w12, [sp, #12]
  40c6e4:	ldr	x11, [x11, #3992]
  40c6e8:	adrp	x13, 40e000 <_IO_stdin_used@@Base+0x428>
  40c6ec:	add	x13, x13, #0x97e
  40c6f0:	b	40c658 <rtnl_talk_iov@@Base+0x134>
  40c6f4:	cmp	w8, #0x13
  40c6f8:	b.ls	40c88c <rtnl_talk_iov@@Base+0x368>  // b.plast
  40c6fc:	ldr	w26, [x22, #16]
  40c700:	str	w12, [sp, #12]
  40c704:	cbz	w26, 40c72c <rtnl_talk_iov@@Base+0x208>
  40c708:	neg	w25, w26
  40c70c:	bl	4051f0 <__errno_location@plt>
  40c710:	str	w25, [x0]
  40c714:	ldr	w8, [x21, #36]
  40c718:	ldr	w9, [sp, #12]
  40c71c:	cmp	w8, #0x4
  40c720:	cset	w8, eq  // eq = none
  40c724:	orr	w8, w8, w9
  40c728:	tbz	w8, #0, 40c73c <rtnl_talk_iov@@Base+0x218>
  40c72c:	ldr	x0, [sp, #16]
  40c730:	cbz	x19, 40c770 <rtnl_talk_iov@@Base+0x24c>
  40c734:	str	x0, [x19]
  40c738:	b	40c774 <rtnl_talk_iov@@Base+0x250>
  40c73c:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c740:	ldr	w8, [x22, #16]
  40c744:	ldr	x9, [x9, #3992]
  40c748:	neg	w0, w8
  40c74c:	ldr	x25, [x9]
  40c750:	bl	404f90 <strerror@plt>
  40c754:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40c758:	mov	x2, x0
  40c75c:	mov	x0, x25
  40c760:	add	x1, x1, #0xbc8
  40c764:	bl	405240 <fprintf@plt>
  40c768:	ldr	x0, [sp, #16]
  40c76c:	cbnz	x19, 40c734 <rtnl_talk_iov@@Base+0x210>
  40c770:	bl	405060 <free@plt>
  40c774:	cmp	x24, x20
  40c778:	b.cs	40c8a0 <rtnl_talk_iov@@Base+0x37c>  // b.hs, b.nlast
  40c77c:	ldr	w0, [x21]
  40c780:	add	x1, sp, #0x18
  40c784:	add	x2, sp, #0x10
  40c788:	bl	40d9b8 <__parse_rtattr_nested_compat@@Base+0x110>
  40c78c:	adrp	x11, 41e000 <_IO_stdin_used@@Base+0x10428>
  40c790:	ldr	x11, [x11, #3992]
  40c794:	ldr	w12, [sp, #12]
  40c798:	add	x8, x24, #0x1
  40c79c:	adrp	x13, 40e000 <_IO_stdin_used@@Base+0x428>
  40c7a0:	mov	w25, w0
  40c7a4:	mov	w28, w24
  40c7a8:	mov	x24, x8
  40c7ac:	add	x13, x13, #0x97e
  40c7b0:	tbz	w0, #31, 40c63c <rtnl_talk_iov@@Base+0x118>
  40c7b4:	b	40c858 <rtnl_talk_iov@@Base+0x334>
  40c7b8:	ldr	x0, [sp, #16]
  40c7bc:	mov	x28, x13
  40c7c0:	mov	w26, w12
  40c7c4:	mov	x22, x11
  40c7c8:	bl	405060 <free@plt>
  40c7cc:	ldrb	w8, [sp, #72]
  40c7d0:	tbnz	w8, #5, 40c804 <rtnl_talk_iov@@Base+0x2e0>
  40c7d4:	cbnz	w25, 40c8ac <rtnl_talk_iov@@Base+0x388>
  40c7d8:	ldr	w0, [x21]
  40c7dc:	add	x1, sp, #0x18
  40c7e0:	add	x2, sp, #0x10
  40c7e4:	bl	40d9b8 <__parse_rtattr_nested_compat@@Base+0x110>
  40c7e8:	mov	w25, w0
  40c7ec:	add	x8, x24, #0x1
  40c7f0:	mov	x11, x22
  40c7f4:	mov	w12, w26
  40c7f8:	mov	x13, x28
  40c7fc:	tbz	w0, #31, 40c634 <rtnl_talk_iov@@Base+0x110>
  40c800:	b	40c858 <rtnl_talk_iov@@Base+0x334>
  40c804:	ldr	x3, [x22]
  40c808:	mov	w1, #0x12                  	// #18
  40c80c:	mov	w2, #0x1                   	// #1
  40c810:	mov	x0, x28
  40c814:	bl	4050c0 <fwrite@plt>
  40c818:	b	40c7d8 <rtnl_talk_iov@@Base+0x2b4>
  40c81c:	ldr	x8, [sp, #16]
  40c820:	mov	w25, wzr
  40c824:	str	x8, [x19]
  40c828:	b	40c858 <rtnl_talk_iov@@Base+0x334>
  40c82c:	ldrb	w8, [sp, #72]
  40c830:	ldr	x3, [x11]
  40c834:	tbz	w8, #5, 40c8d0 <rtnl_talk_iov@@Base+0x3ac>
  40c838:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c83c:	add	x0, x0, #0x94d
  40c840:	mov	w1, #0x12                  	// #18
  40c844:	mov	w2, #0x1                   	// #1
  40c848:	bl	4050c0 <fwrite@plt>
  40c84c:	ldr	x0, [sp, #16]
  40c850:	bl	405060 <free@plt>
  40c854:	mov	w25, #0xffffffff            	// #-1
  40c858:	mov	w0, w25
  40c85c:	ldp	x20, x19, [sp, #192]
  40c860:	ldp	x22, x21, [sp, #176]
  40c864:	ldp	x24, x23, [sp, #160]
  40c868:	ldp	x26, x25, [sp, #144]
  40c86c:	ldp	x28, x27, [sp, #128]
  40c870:	ldp	x29, x30, [sp, #112]
  40c874:	add	sp, sp, #0xd0
  40c878:	ret
  40c87c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c880:	add	x0, x0, #0xb7d
  40c884:	bl	404d60 <perror@plt>
  40c888:	b	40c854 <rtnl_talk_iov@@Base+0x330>
  40c88c:	ldr	x3, [x11]
  40c890:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c894:	add	x0, x0, #0x8d8
  40c898:	mov	w1, #0x10                  	// #16
  40c89c:	b	40c844 <rtnl_talk_iov@@Base+0x320>
  40c8a0:	cmp	w26, #0x0
  40c8a4:	csinv	w25, wzr, w28, eq  // eq = none
  40c8a8:	b	40c858 <rtnl_talk_iov@@Base+0x334>
  40c8ac:	ldr	x0, [x22]
  40c8b0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40c8b4:	add	x1, x1, #0x991
  40c8b8:	mov	w2, w25
  40c8bc:	b	40c8e0 <rtnl_talk_iov@@Base+0x3bc>
  40c8c0:	ldr	x0, [x11]
  40c8c4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40c8c8:	add	x1, x1, #0xb96
  40c8cc:	b	40c8e0 <rtnl_talk_iov@@Base+0x3bc>
  40c8d0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40c8d4:	add	x1, x1, #0x960
  40c8d8:	mov	x0, x3
  40c8dc:	mov	w2, w26
  40c8e0:	bl	405240 <fprintf@plt>
  40c8e4:	mov	w0, #0x1                   	// #1
  40c8e8:	bl	404d50 <exit@plt>

000000000040c8ec <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40c8ec:	sub	sp, sp, #0x20
  40c8f0:	stp	x29, x30, [sp, #16]
  40c8f4:	ldr	w8, [x1]
  40c8f8:	mov	x3, x2
  40c8fc:	mov	w2, #0x1                   	// #1
  40c900:	mov	w4, wzr
  40c904:	stp	x1, x8, [sp]
  40c908:	mov	x1, sp
  40c90c:	add	x29, sp, #0x10
  40c910:	bl	40c52c <rtnl_talk_iov@@Base+0x8>
  40c914:	ldp	x29, x30, [sp, #16]
  40c918:	add	sp, sp, #0x20
  40c91c:	ret

000000000040c920 <rtnl_listen_all_nsid@@Base>:
  40c920:	stp	x29, x30, [sp, #-32]!
  40c924:	mov	x29, sp
  40c928:	mov	w8, #0x1                   	// #1
  40c92c:	str	w8, [x29, #28]
  40c930:	str	x19, [sp, #16]
  40c934:	mov	x19, x0
  40c938:	ldr	w0, [x0]
  40c93c:	add	x3, x29, #0x1c
  40c940:	mov	w1, #0x10e                 	// #270
  40c944:	mov	w2, #0x8                   	// #8
  40c948:	mov	w4, #0x4                   	// #4
  40c94c:	bl	404e90 <setsockopt@plt>
  40c950:	tbnz	w0, #31, 40c970 <rtnl_listen_all_nsid@@Base+0x50>
  40c954:	ldr	w8, [x19, #48]
  40c958:	mov	w0, wzr
  40c95c:	orr	w8, w8, #0x1
  40c960:	str	w8, [x19, #48]
  40c964:	ldr	x19, [sp, #16]
  40c968:	ldp	x29, x30, [sp], #32
  40c96c:	ret
  40c970:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40c974:	add	x0, x0, #0x8e9
  40c978:	bl	404d60 <perror@plt>
  40c97c:	mov	w0, #0xffffffff            	// #-1
  40c980:	b	40c964 <rtnl_listen_all_nsid@@Base+0x44>

000000000040c984 <rtnl_listen@@Base>:
  40c984:	stp	x29, x30, [sp, #-96]!
  40c988:	stp	x28, x27, [sp, #16]
  40c98c:	stp	x26, x25, [sp, #32]
  40c990:	stp	x24, x23, [sp, #48]
  40c994:	stp	x22, x21, [sp, #64]
  40c998:	stp	x20, x19, [sp, #80]
  40c99c:	mov	x29, sp
  40c9a0:	sub	sp, sp, #0x6, lsl #12
  40c9a4:	sub	sp, sp, #0x70
  40c9a8:	sub	x27, x29, #0x60
  40c9ac:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x428>
  40c9b0:	sub	x9, x29, #0x18
  40c9b4:	mov	w10, #0xc                   	// #12
  40c9b8:	add	x8, x8, #0xbe0
  40c9bc:	stur	x9, [x29, #-96]
  40c9c0:	sub	x9, x29, #0x28
  40c9c4:	str	w10, [x27, #8]
  40c9c8:	mov	w10, #0x1                   	// #1
  40c9cc:	stp	x9, x10, [x29, #-80]
  40c9d0:	ldr	x9, [x8]
  40c9d4:	ldr	w8, [x8, #8]
  40c9d8:	stp	xzr, xzr, [x29, #-64]
  40c9dc:	str	wzr, [x27, #48]
  40c9e0:	stur	x9, [x29, #-24]
  40c9e4:	str	w8, [x27, #80]
  40c9e8:	ldrb	w8, [x0, #48]
  40c9ec:	mov	x19, x2
  40c9f0:	mov	x20, x0
  40c9f4:	mov	x21, x1
  40c9f8:	tbz	w8, #0, 40ca08 <rtnl_listen@@Base+0x84>
  40c9fc:	add	x8, sp, #0x10
  40ca00:	mov	w9, #0x2000                	// #8192
  40ca04:	stp	x8, x9, [x29, #-64]
  40ca08:	adrp	x28, 41e000 <_IO_stdin_used@@Base+0x10428>
  40ca0c:	ldr	x28, [x28, #3992]
  40ca10:	add	x8, sp, #0x2, lsl #12
  40ca14:	add	x8, x8, #0x10
  40ca18:	mov	w22, #0x4000                	// #16384
  40ca1c:	mov	w23, #0xffffffff            	// #-1
  40ca20:	stur	x8, [x29, #-40]
  40ca24:	stur	x22, [x29, #-32]
  40ca28:	ldr	w0, [x20]
  40ca2c:	sub	x1, x29, #0x60
  40ca30:	mov	w2, wzr
  40ca34:	bl	404d20 <recvmsg@plt>
  40ca38:	mov	x24, x0
  40ca3c:	tbnz	w24, #31, 40cab8 <rtnl_listen@@Base+0x134>
  40ca40:	cbz	w24, 40cbf8 <rtnl_listen@@Base+0x274>
  40ca44:	ldr	w2, [x27, #8]
  40ca48:	cmp	w2, #0xc
  40ca4c:	b.ne	40cc0c <rtnl_listen@@Base+0x288>  // b.any
  40ca50:	ldrb	w8, [x20, #48]
  40ca54:	tbnz	w8, #0, 40cb04 <rtnl_listen@@Base+0x180>
  40ca58:	cmp	w24, #0x10
  40ca5c:	b.cc	40caa8 <rtnl_listen@@Base+0x124>  // b.lo, b.ul, b.last
  40ca60:	add	x25, sp, #0x2, lsl #12
  40ca64:	add	x25, x25, #0x10
  40ca68:	ldr	w26, [x25]
  40ca6c:	cmp	w26, w24
  40ca70:	b.gt	40cbb0 <rtnl_listen@@Base+0x22c>
  40ca74:	sub	w8, w26, #0x10
  40ca78:	tbnz	w8, #31, 40cbb0 <rtnl_listen@@Base+0x22c>
  40ca7c:	add	x0, sp, #0x8
  40ca80:	mov	x1, x25
  40ca84:	mov	x2, x19
  40ca88:	blr	x21
  40ca8c:	tbnz	w0, #31, 40cbd4 <rtnl_listen@@Base+0x250>
  40ca90:	add	w8, w26, #0x3
  40ca94:	and	x8, x8, #0xfffffffc
  40ca98:	sub	w24, w24, w8
  40ca9c:	cmp	w24, #0xf
  40caa0:	add	x25, x25, x8
  40caa4:	b.hi	40ca68 <rtnl_listen@@Base+0xe4>  // b.pmore
  40caa8:	ldrb	w8, [x27, #48]
  40caac:	tbnz	w8, #5, 40cb94 <rtnl_listen@@Base+0x210>
  40cab0:	cbz	w24, 40ca24 <rtnl_listen@@Base+0xa0>
  40cab4:	b	40cc1c <rtnl_listen@@Base+0x298>
  40cab8:	bl	4051f0 <__errno_location@plt>
  40cabc:	mov	x24, x0
  40cac0:	ldr	w0, [x0]
  40cac4:	cmp	w0, #0x4
  40cac8:	b.eq	40ca24 <rtnl_listen@@Base+0xa0>  // b.none
  40cacc:	cmp	w0, #0xb
  40cad0:	b.eq	40ca24 <rtnl_listen@@Base+0xa0>  // b.none
  40cad4:	ldr	x25, [x28]
  40cad8:	bl	404f90 <strerror@plt>
  40cadc:	ldr	w3, [x24]
  40cae0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40cae4:	mov	x2, x0
  40cae8:	mov	x0, x25
  40caec:	add	x1, x1, #0x901
  40caf0:	bl	405240 <fprintf@plt>
  40caf4:	ldr	w8, [x24]
  40caf8:	cmp	w8, #0x69
  40cafc:	b.eq	40ca24 <rtnl_listen@@Base+0xa0>  // b.none
  40cb00:	b	40cbd0 <rtnl_listen@@Base+0x24c>
  40cb04:	ldur	x10, [x29, #-64]
  40cb08:	str	w23, [sp, #8]
  40cb0c:	cbz	x10, 40ca58 <rtnl_listen@@Base+0xd4>
  40cb10:	ldur	x8, [x29, #-56]
  40cb14:	cmp	x8, #0x10
  40cb18:	b.cc	40ca58 <rtnl_listen@@Base+0xd4>  // b.lo, b.ul, b.last
  40cb1c:	add	x8, x10, x8
  40cb20:	mov	x9, x10
  40cb24:	ldr	w10, [x10, #8]
  40cb28:	cmp	w10, #0x10e
  40cb2c:	b.ne	40cb50 <rtnl_listen@@Base+0x1cc>  // b.any
  40cb30:	ldr	w10, [x9, #12]
  40cb34:	cmp	w10, #0x8
  40cb38:	b.ne	40cb50 <rtnl_listen@@Base+0x1cc>  // b.any
  40cb3c:	ldr	x10, [x9]
  40cb40:	cmp	x10, #0x14
  40cb44:	b.ne	40cb50 <rtnl_listen@@Base+0x1cc>  // b.any
  40cb48:	ldr	w10, [x9, #16]
  40cb4c:	str	w10, [sp, #8]
  40cb50:	ldr	x10, [x9]
  40cb54:	cmp	x10, #0x10
  40cb58:	b.cc	40ca58 <rtnl_listen@@Base+0xd4>  // b.lo, b.ul, b.last
  40cb5c:	add	x10, x10, #0x7
  40cb60:	and	x10, x10, #0xfffffffffffffff8
  40cb64:	add	x10, x9, x10
  40cb68:	add	x11, x10, #0x10
  40cb6c:	cmp	x11, x8
  40cb70:	b.hi	40ca58 <rtnl_listen@@Base+0xd4>  // b.pmore
  40cb74:	ldr	x11, [x10]
  40cb78:	add	x11, x11, #0x7
  40cb7c:	and	x11, x11, #0xfffffffffffffff8
  40cb80:	add	x11, x10, x11
  40cb84:	cmp	x11, x8
  40cb88:	b.hi	40ca58 <rtnl_listen@@Base+0xd4>  // b.pmore
  40cb8c:	cbnz	x9, 40cb20 <rtnl_listen@@Base+0x19c>
  40cb90:	b	40ca58 <rtnl_listen@@Base+0xd4>
  40cb94:	ldr	x3, [x28]
  40cb98:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40cb9c:	mov	w1, #0x12                  	// #18
  40cba0:	mov	w2, #0x1                   	// #1
  40cba4:	add	x0, x0, #0x97e
  40cba8:	bl	4050c0 <fwrite@plt>
  40cbac:	b	40ca24 <rtnl_listen@@Base+0xa0>
  40cbb0:	ldrb	w8, [x27, #48]
  40cbb4:	ldr	x3, [x28]
  40cbb8:	tbz	w8, #5, 40cc30 <rtnl_listen@@Base+0x2ac>
  40cbbc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40cbc0:	add	x0, x0, #0x94d
  40cbc4:	mov	w1, #0x12                  	// #18
  40cbc8:	mov	w2, #0x1                   	// #1
  40cbcc:	bl	4050c0 <fwrite@plt>
  40cbd0:	mov	w0, #0xffffffff            	// #-1
  40cbd4:	add	sp, sp, #0x6, lsl #12
  40cbd8:	add	sp, sp, #0x70
  40cbdc:	ldp	x20, x19, [sp, #80]
  40cbe0:	ldp	x22, x21, [sp, #64]
  40cbe4:	ldp	x24, x23, [sp, #48]
  40cbe8:	ldp	x26, x25, [sp, #32]
  40cbec:	ldp	x28, x27, [sp, #16]
  40cbf0:	ldp	x29, x30, [sp], #96
  40cbf4:	ret
  40cbf8:	ldr	x3, [x28]
  40cbfc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40cc00:	add	x0, x0, #0x920
  40cc04:	mov	w1, #0xf                   	// #15
  40cc08:	b	40cbc8 <rtnl_listen@@Base+0x244>
  40cc0c:	ldr	x0, [x28]
  40cc10:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40cc14:	add	x1, x1, #0x930
  40cc18:	b	40cc40 <rtnl_listen@@Base+0x2bc>
  40cc1c:	ldr	x0, [x28]
  40cc20:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40cc24:	add	x1, x1, #0x991
  40cc28:	mov	w2, w24
  40cc2c:	b	40cc40 <rtnl_listen@@Base+0x2bc>
  40cc30:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40cc34:	add	x1, x1, #0x960
  40cc38:	mov	x0, x3
  40cc3c:	mov	w2, w26
  40cc40:	bl	405240 <fprintf@plt>
  40cc44:	mov	w0, #0x1                   	// #1
  40cc48:	bl	404d50 <exit@plt>

000000000040cc4c <rtnl_from_file@@Base>:
  40cc4c:	stp	x29, x30, [sp, #-64]!
  40cc50:	stp	x28, x23, [sp, #16]
  40cc54:	stp	x22, x21, [sp, #32]
  40cc58:	stp	x20, x19, [sp, #48]
  40cc5c:	mov	x29, sp
  40cc60:	sub	sp, sp, #0x4, lsl #12
  40cc64:	mov	x8, sp
  40cc68:	mov	x20, x2
  40cc6c:	mov	x21, x1
  40cc70:	mov	x19, x0
  40cc74:	add	x22, x8, #0x10
  40cc78:	mov	x0, sp
  40cc7c:	mov	w1, #0x1                   	// #1
  40cc80:	mov	w2, #0x10                  	// #16
  40cc84:	mov	x3, x19
  40cc88:	bl	405040 <fread@plt>
  40cc8c:	cmp	x0, #0x10
  40cc90:	b.ne	40cd14 <rtnl_from_file@@Base+0xc8>  // b.any
  40cc94:	ldr	w23, [sp]
  40cc98:	cmp	w23, #0x4, lsl #12
  40cc9c:	b.hi	40cce4 <rtnl_from_file@@Base+0x98>  // b.pmore
  40cca0:	sub	w8, w23, #0x10
  40cca4:	tbnz	w8, #31, 40cce4 <rtnl_from_file@@Base+0x98>
  40cca8:	sub	w8, w23, #0xd
  40ccac:	and	w23, w8, #0xfffffffc
  40ccb0:	mov	w1, #0x1                   	// #1
  40ccb4:	mov	x0, x22
  40ccb8:	mov	x2, x23
  40ccbc:	mov	x3, x19
  40ccc0:	bl	405040 <fread@plt>
  40ccc4:	cmp	x0, x23
  40ccc8:	b.ne	40cd2c <rtnl_from_file@@Base+0xe0>  // b.any
  40cccc:	mov	x1, sp
  40ccd0:	mov	x0, xzr
  40ccd4:	mov	x2, x20
  40ccd8:	blr	x21
  40ccdc:	tbz	w0, #31, 40cc78 <rtnl_from_file@@Base+0x2c>
  40cce0:	b	40cd48 <rtnl_from_file@@Base+0xfc>
  40cce4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40cce8:	ldr	x8, [x8, #3992]
  40ccec:	mov	x0, x19
  40ccf0:	ldr	x20, [x8]
  40ccf4:	bl	404dc0 <ftell@plt>
  40ccf8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40ccfc:	mov	x3, x0
  40cd00:	add	x1, x1, #0x9e1
  40cd04:	mov	x0, x20
  40cd08:	mov	w2, w23
  40cd0c:	bl	405240 <fprintf@plt>
  40cd10:	b	40cd44 <rtnl_from_file@@Base+0xf8>
  40cd14:	cbnz	x0, 40cd2c <rtnl_from_file@@Base+0xe0>
  40cd18:	mov	x0, x19
  40cd1c:	bl	404ff0 <feof@plt>
  40cd20:	cbz	w0, 40cd2c <rtnl_from_file@@Base+0xe0>
  40cd24:	mov	w0, wzr
  40cd28:	b	40cd48 <rtnl_from_file@@Base+0xfc>
  40cd2c:	mov	x0, x19
  40cd30:	bl	405270 <ferror@plt>
  40cd34:	cbnz	w0, 40cd60 <rtnl_from_file@@Base+0x114>
  40cd38:	mov	x0, x19
  40cd3c:	bl	404ff0 <feof@plt>
  40cd40:	cbnz	w0, 40cd70 <rtnl_from_file@@Base+0x124>
  40cd44:	mov	w0, #0xffffffff            	// #-1
  40cd48:	add	sp, sp, #0x4, lsl #12
  40cd4c:	ldp	x20, x19, [sp, #48]
  40cd50:	ldp	x22, x21, [sp, #32]
  40cd54:	ldp	x28, x23, [sp, #16]
  40cd58:	ldp	x29, x30, [sp], #64
  40cd5c:	ret
  40cd60:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40cd64:	add	x0, x0, #0x9a8
  40cd68:	bl	404d60 <perror@plt>
  40cd6c:	b	40cd38 <rtnl_from_file@@Base+0xec>
  40cd70:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40cd74:	ldr	x8, [x8, #3992]
  40cd78:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40cd7c:	add	x0, x0, #0x9be
  40cd80:	mov	w1, #0x22                  	// #34
  40cd84:	ldr	x3, [x8]
  40cd88:	mov	w2, #0x1                   	// #1
  40cd8c:	bl	4050c0 <fwrite@plt>
  40cd90:	b	40cd44 <rtnl_from_file@@Base+0xf8>

000000000040cd94 <addattr@@Base>:
  40cd94:	stp	x29, x30, [sp, #-16]!
  40cd98:	ldr	w9, [x0]
  40cd9c:	mov	x29, sp
  40cda0:	add	w9, w9, #0x3
  40cda4:	and	x10, x9, #0xfffffffc
  40cda8:	add	w9, w10, #0x4
  40cdac:	cmp	w9, w1
  40cdb0:	b.hi	40cdd8 <addattr@@Base+0x44>  // b.pmore
  40cdb4:	mov	w8, wzr
  40cdb8:	add	x10, x0, x10
  40cdbc:	mov	w11, #0x4                   	// #4
  40cdc0:	strh	w2, [x10, #2]
  40cdc4:	strh	w11, [x10]
  40cdc8:	str	w9, [x0]
  40cdcc:	mov	w0, w8
  40cdd0:	ldp	x29, x30, [sp], #16
  40cdd4:	ret
  40cdd8:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40cddc:	ldr	x9, [x9, #3992]
  40cde0:	mov	w8, w1
  40cde4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40cde8:	add	x1, x1, #0xa04
  40cdec:	ldr	x0, [x9]
  40cdf0:	mov	w2, w8
  40cdf4:	bl	405240 <fprintf@plt>
  40cdf8:	mov	w8, #0xffffffff            	// #-1
  40cdfc:	b	40cdcc <addattr@@Base+0x38>

000000000040ce00 <addattr_l@@Base>:
  40ce00:	stp	x29, x30, [sp, #-32]!
  40ce04:	stp	x20, x19, [sp, #16]
  40ce08:	ldr	w9, [x0]
  40ce0c:	add	w10, w4, #0x7
  40ce10:	and	w10, w10, #0xfffffffc
  40ce14:	mov	x29, sp
  40ce18:	add	w9, w9, #0x3
  40ce1c:	and	x9, x9, #0xfffffffc
  40ce20:	add	w20, w9, w10
  40ce24:	cmp	w20, w1
  40ce28:	b.hi	40ce68 <addattr_l@@Base+0x68>  // b.pmore
  40ce2c:	mov	x19, x0
  40ce30:	add	x8, x0, x9
  40ce34:	add	w9, w4, #0x4
  40ce38:	strh	w2, [x8, #2]
  40ce3c:	strh	w9, [x8]
  40ce40:	cbz	w4, 40ce54 <addattr_l@@Base+0x54>
  40ce44:	sxtw	x2, w4
  40ce48:	add	x0, x8, #0x4
  40ce4c:	mov	x1, x3
  40ce50:	bl	404d10 <memcpy@plt>
  40ce54:	mov	w0, wzr
  40ce58:	str	w20, [x19]
  40ce5c:	ldp	x20, x19, [sp, #16]
  40ce60:	ldp	x29, x30, [sp], #32
  40ce64:	ret
  40ce68:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40ce6c:	ldr	x9, [x9, #3992]
  40ce70:	mov	w8, w1
  40ce74:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40ce78:	add	x1, x1, #0xa04
  40ce7c:	ldr	x0, [x9]
  40ce80:	mov	w2, w8
  40ce84:	bl	405240 <fprintf@plt>
  40ce88:	mov	w0, #0xffffffff            	// #-1
  40ce8c:	b	40ce5c <addattr_l@@Base+0x5c>

000000000040ce90 <addattr8@@Base>:
  40ce90:	stp	x29, x30, [sp, #-16]!
  40ce94:	ldr	w9, [x0]
  40ce98:	mov	x29, sp
  40ce9c:	add	w9, w9, #0x3
  40cea0:	and	x10, x9, #0xfffffffc
  40cea4:	add	w9, w10, #0x8
  40cea8:	cmp	w9, w1
  40ceac:	b.hi	40ced8 <addattr8@@Base+0x48>  // b.pmore
  40ceb0:	mov	w8, wzr
  40ceb4:	add	x10, x0, x10
  40ceb8:	mov	w11, #0x5                   	// #5
  40cebc:	strh	w2, [x10, #2]
  40cec0:	strh	w11, [x10]
  40cec4:	strb	w3, [x10, #4]
  40cec8:	str	w9, [x0]
  40cecc:	mov	w0, w8
  40ced0:	ldp	x29, x30, [sp], #16
  40ced4:	ret
  40ced8:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40cedc:	ldr	x9, [x9, #3992]
  40cee0:	mov	w8, w1
  40cee4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40cee8:	add	x1, x1, #0xa04
  40ceec:	ldr	x0, [x9]
  40cef0:	mov	w2, w8
  40cef4:	bl	405240 <fprintf@plt>
  40cef8:	mov	w8, #0xffffffff            	// #-1
  40cefc:	b	40cecc <addattr8@@Base+0x3c>

000000000040cf00 <addattr16@@Base>:
  40cf00:	stp	x29, x30, [sp, #-16]!
  40cf04:	ldr	w9, [x0]
  40cf08:	mov	x29, sp
  40cf0c:	add	w9, w9, #0x3
  40cf10:	and	x10, x9, #0xfffffffc
  40cf14:	add	w9, w10, #0x8
  40cf18:	cmp	w9, w1
  40cf1c:	b.hi	40cf48 <addattr16@@Base+0x48>  // b.pmore
  40cf20:	mov	w8, wzr
  40cf24:	add	x10, x0, x10
  40cf28:	mov	w11, #0x6                   	// #6
  40cf2c:	strh	w2, [x10, #2]
  40cf30:	strh	w11, [x10]
  40cf34:	strh	w3, [x10, #4]
  40cf38:	str	w9, [x0]
  40cf3c:	mov	w0, w8
  40cf40:	ldp	x29, x30, [sp], #16
  40cf44:	ret
  40cf48:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40cf4c:	ldr	x9, [x9, #3992]
  40cf50:	mov	w8, w1
  40cf54:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40cf58:	add	x1, x1, #0xa04
  40cf5c:	ldr	x0, [x9]
  40cf60:	mov	w2, w8
  40cf64:	bl	405240 <fprintf@plt>
  40cf68:	mov	w8, #0xffffffff            	// #-1
  40cf6c:	b	40cf3c <addattr16@@Base+0x3c>

000000000040cf70 <addattr32@@Base>:
  40cf70:	stp	x29, x30, [sp, #-16]!
  40cf74:	ldr	w9, [x0]
  40cf78:	mov	x29, sp
  40cf7c:	add	w9, w9, #0x3
  40cf80:	and	x10, x9, #0xfffffffc
  40cf84:	add	w9, w10, #0x8
  40cf88:	cmp	w9, w1
  40cf8c:	b.hi	40cfb8 <addattr32@@Base+0x48>  // b.pmore
  40cf90:	mov	w8, wzr
  40cf94:	add	x10, x0, x10
  40cf98:	mov	w11, #0x8                   	// #8
  40cf9c:	strh	w2, [x10, #2]
  40cfa0:	strh	w11, [x10]
  40cfa4:	str	w3, [x10, #4]
  40cfa8:	str	w9, [x0]
  40cfac:	mov	w0, w8
  40cfb0:	ldp	x29, x30, [sp], #16
  40cfb4:	ret
  40cfb8:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40cfbc:	ldr	x9, [x9, #3992]
  40cfc0:	mov	w8, w1
  40cfc4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40cfc8:	add	x1, x1, #0xa04
  40cfcc:	ldr	x0, [x9]
  40cfd0:	mov	w2, w8
  40cfd4:	bl	405240 <fprintf@plt>
  40cfd8:	mov	w8, #0xffffffff            	// #-1
  40cfdc:	b	40cfac <addattr32@@Base+0x3c>

000000000040cfe0 <addattr64@@Base>:
  40cfe0:	stp	x29, x30, [sp, #-16]!
  40cfe4:	ldr	w9, [x0]
  40cfe8:	mov	x29, sp
  40cfec:	add	w9, w9, #0x3
  40cff0:	and	x10, x9, #0xfffffffc
  40cff4:	add	w9, w10, #0xc
  40cff8:	cmp	w9, w1
  40cffc:	b.hi	40d028 <addattr64@@Base+0x48>  // b.pmore
  40d000:	mov	w8, wzr
  40d004:	add	x10, x0, x10
  40d008:	mov	w11, #0xc                   	// #12
  40d00c:	strh	w2, [x10, #2]
  40d010:	strh	w11, [x10]
  40d014:	stur	x3, [x10, #4]
  40d018:	str	w9, [x0]
  40d01c:	mov	w0, w8
  40d020:	ldp	x29, x30, [sp], #16
  40d024:	ret
  40d028:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d02c:	ldr	x9, [x9, #3992]
  40d030:	mov	w8, w1
  40d034:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d038:	add	x1, x1, #0xa04
  40d03c:	ldr	x0, [x9]
  40d040:	mov	w2, w8
  40d044:	bl	405240 <fprintf@plt>
  40d048:	mov	w8, #0xffffffff            	// #-1
  40d04c:	b	40d01c <addattr64@@Base+0x3c>

000000000040d050 <addattrstrz@@Base>:
  40d050:	stp	x29, x30, [sp, #-64]!
  40d054:	stp	x20, x19, [sp, #48]
  40d058:	mov	x19, x0
  40d05c:	mov	x0, x3
  40d060:	str	x23, [sp, #16]
  40d064:	stp	x22, x21, [sp, #32]
  40d068:	mov	x29, sp
  40d06c:	mov	x20, x3
  40d070:	mov	w21, w2
  40d074:	mov	w22, w1
  40d078:	bl	404d40 <strlen@plt>
  40d07c:	ldr	w8, [x19]
  40d080:	add	w9, w0, #0x8
  40d084:	and	w9, w9, #0xfffffffc
  40d088:	add	w8, w8, #0x3
  40d08c:	and	x8, x8, #0xfffffffc
  40d090:	add	w23, w8, w9
  40d094:	cmp	w23, w22
  40d098:	b.hi	40d0e0 <addattrstrz@@Base+0x90>  // b.pmore
  40d09c:	add	w9, w0, #0x1
  40d0a0:	sxtw	x2, w9
  40d0a4:	add	x8, x19, x8
  40d0a8:	add	w9, w2, #0x4
  40d0ac:	strh	w21, [x8, #2]
  40d0b0:	strh	w9, [x8]
  40d0b4:	cbz	w2, 40d0c4 <addattrstrz@@Base+0x74>
  40d0b8:	add	x0, x8, #0x4
  40d0bc:	mov	x1, x20
  40d0c0:	bl	404d10 <memcpy@plt>
  40d0c4:	mov	w0, wzr
  40d0c8:	str	w23, [x19]
  40d0cc:	ldp	x20, x19, [sp, #48]
  40d0d0:	ldp	x22, x21, [sp, #32]
  40d0d4:	ldr	x23, [sp, #16]
  40d0d8:	ldp	x29, x30, [sp], #64
  40d0dc:	ret
  40d0e0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d0e4:	ldr	x8, [x8, #3992]
  40d0e8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d0ec:	add	x1, x1, #0xa04
  40d0f0:	mov	w2, w22
  40d0f4:	ldr	x0, [x8]
  40d0f8:	bl	405240 <fprintf@plt>
  40d0fc:	mov	w0, #0xffffffff            	// #-1
  40d100:	b	40d0cc <addattrstrz@@Base+0x7c>

000000000040d104 <addraw_l@@Base>:
  40d104:	stp	x29, x30, [sp, #-48]!
  40d108:	stp	x22, x21, [sp, #16]
  40d10c:	stp	x20, x19, [sp, #32]
  40d110:	ldr	w9, [x0]
  40d114:	add	w10, w3, #0x3
  40d118:	and	w22, w10, #0xfffffffc
  40d11c:	mov	x29, sp
  40d120:	add	w9, w9, #0x3
  40d124:	and	w9, w9, #0xfffffffc
  40d128:	add	w10, w9, w22
  40d12c:	cmp	w10, w1
  40d130:	b.hi	40d198 <addraw_l@@Base+0x94>  // b.pmore
  40d134:	mov	w20, w3
  40d138:	sxtw	x21, w20
  40d13c:	mov	x19, x0
  40d140:	add	x0, x0, w9, uxtw
  40d144:	mov	x1, x2
  40d148:	mov	x2, x21
  40d14c:	bl	404d10 <memcpy@plt>
  40d150:	ldr	w8, [x19]
  40d154:	sub	w2, w22, w20
  40d158:	mov	w1, wzr
  40d15c:	add	w8, w8, #0x3
  40d160:	and	w8, w8, #0xfffffffc
  40d164:	add	x8, x19, x8
  40d168:	add	x0, x8, x21
  40d16c:	bl	404ef0 <memset@plt>
  40d170:	ldr	w8, [x19]
  40d174:	mov	w0, wzr
  40d178:	add	w8, w8, #0x3
  40d17c:	and	w8, w8, #0xfffffffc
  40d180:	add	w8, w8, w22
  40d184:	str	w8, [x19]
  40d188:	ldp	x20, x19, [sp, #32]
  40d18c:	ldp	x22, x21, [sp, #16]
  40d190:	ldp	x29, x30, [sp], #48
  40d194:	ret
  40d198:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d19c:	ldr	x9, [x9, #3992]
  40d1a0:	mov	w8, w1
  40d1a4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d1a8:	add	x1, x1, #0xa33
  40d1ac:	ldr	x0, [x9]
  40d1b0:	mov	w2, w8
  40d1b4:	bl	405240 <fprintf@plt>
  40d1b8:	mov	w0, #0xffffffff            	// #-1
  40d1bc:	b	40d188 <addraw_l@@Base+0x84>

000000000040d1c0 <addattr_nest@@Base>:
  40d1c0:	stp	x29, x30, [sp, #-32]!
  40d1c4:	ldr	w9, [x0]
  40d1c8:	str	x19, [sp, #16]
  40d1cc:	mov	x29, sp
  40d1d0:	add	w9, w9, #0x3
  40d1d4:	and	w10, w9, #0xfffffffc
  40d1d8:	add	w9, w10, #0x4
  40d1dc:	cmp	w9, w1
  40d1e0:	add	x19, x0, x10
  40d1e4:	b.hi	40d208 <addattr_nest@@Base+0x48>  // b.pmore
  40d1e8:	mov	w8, #0x4                   	// #4
  40d1ec:	strh	w2, [x19, #2]
  40d1f0:	strh	w8, [x19]
  40d1f4:	str	w9, [x0]
  40d1f8:	mov	x0, x19
  40d1fc:	ldr	x19, [sp, #16]
  40d200:	ldp	x29, x30, [sp], #32
  40d204:	ret
  40d208:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d20c:	ldr	x9, [x9, #3992]
  40d210:	mov	w8, w1
  40d214:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d218:	add	x1, x1, #0xa04
  40d21c:	ldr	x0, [x9]
  40d220:	mov	w2, w8
  40d224:	bl	405240 <fprintf@plt>
  40d228:	b	40d1f8 <addattr_nest@@Base+0x38>

000000000040d22c <addattr_nest_end@@Base>:
  40d22c:	ldr	w8, [x0]
  40d230:	add	w9, w8, #0x3
  40d234:	and	w9, w9, #0xfffc
  40d238:	add	w9, w0, w9
  40d23c:	sub	w9, w9, w1
  40d240:	mov	w0, w8
  40d244:	strh	w9, [x1]
  40d248:	ret

000000000040d24c <addattr_nest_compat@@Base>:
  40d24c:	stp	x29, x30, [sp, #-64]!
  40d250:	stp	x22, x21, [sp, #32]
  40d254:	stp	x20, x19, [sp, #48]
  40d258:	ldr	w8, [x0]
  40d25c:	add	w9, w4, #0x7
  40d260:	and	w9, w9, #0xfffffffc
  40d264:	str	x23, [sp, #16]
  40d268:	add	w8, w8, #0x3
  40d26c:	and	w8, w8, #0xfffffffc
  40d270:	add	w23, w8, w9
  40d274:	mov	w20, w2
  40d278:	mov	w22, w1
  40d27c:	mov	x21, x0
  40d280:	cmp	w23, w1
  40d284:	add	x19, x0, x8
  40d288:	mov	x29, sp
  40d28c:	b.hi	40d2f4 <addattr_nest_compat@@Base+0xa8>  // b.pmore
  40d290:	add	w8, w4, #0x4
  40d294:	strh	w20, [x19, #2]
  40d298:	strh	w8, [x19]
  40d29c:	cbz	w4, 40d2b0 <addattr_nest_compat@@Base+0x64>
  40d2a0:	sxtw	x2, w4
  40d2a4:	add	x0, x19, #0x4
  40d2a8:	mov	x1, x3
  40d2ac:	bl	404d10 <memcpy@plt>
  40d2b0:	str	w23, [x21]
  40d2b4:	add	w8, w23, #0x3
  40d2b8:	and	w9, w8, #0xfffffffc
  40d2bc:	add	w8, w9, #0x4
  40d2c0:	cmp	w8, w22
  40d2c4:	b.hi	40d318 <addattr_nest_compat@@Base+0xcc>  // b.pmore
  40d2c8:	add	x9, x21, x9
  40d2cc:	mov	w10, #0x4                   	// #4
  40d2d0:	strh	w20, [x9, #2]
  40d2d4:	strh	w10, [x9]
  40d2d8:	str	w8, [x21]
  40d2dc:	mov	x0, x19
  40d2e0:	ldp	x20, x19, [sp, #48]
  40d2e4:	ldp	x22, x21, [sp, #32]
  40d2e8:	ldr	x23, [sp, #16]
  40d2ec:	ldp	x29, x30, [sp], #64
  40d2f0:	ret
  40d2f4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d2f8:	ldr	x8, [x8, #3992]
  40d2fc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d300:	add	x1, x1, #0xa04
  40d304:	mov	w2, w22
  40d308:	ldr	x0, [x8]
  40d30c:	bl	405240 <fprintf@plt>
  40d310:	ldr	w23, [x21]
  40d314:	b	40d2b4 <addattr_nest_compat@@Base+0x68>
  40d318:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d31c:	ldr	x8, [x8, #3992]
  40d320:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d324:	add	x1, x1, #0xa04
  40d328:	mov	w2, w22
  40d32c:	ldr	x0, [x8]
  40d330:	bl	405240 <fprintf@plt>
  40d334:	b	40d2dc <addattr_nest_compat@@Base+0x90>

000000000040d338 <addattr_nest_compat_end@@Base>:
  40d338:	ldrh	w9, [x1]
  40d33c:	ldr	w8, [x0]
  40d340:	add	w9, w9, #0x3
  40d344:	add	w10, w8, #0x3
  40d348:	and	x9, x9, #0x1fffc
  40d34c:	and	w10, w10, #0xfffffffc
  40d350:	add	x9, x1, x9
  40d354:	add	w10, w0, w10
  40d358:	sub	w11, w10, w1
  40d35c:	sub	w10, w10, w9
  40d360:	mov	w0, w8
  40d364:	strh	w11, [x1]
  40d368:	strh	w10, [x9]
  40d36c:	ret

000000000040d370 <rta_addattr32@@Base>:
  40d370:	stp	x29, x30, [sp, #-16]!
  40d374:	ldrh	w9, [x0]
  40d378:	mov	x29, sp
  40d37c:	add	w9, w9, #0x3
  40d380:	and	x9, x9, #0x1fffc
  40d384:	add	w10, w9, #0x8
  40d388:	cmp	w10, w1
  40d38c:	b.hi	40d3c4 <rta_addattr32@@Base+0x54>  // b.pmore
  40d390:	add	x9, x0, x9
  40d394:	mov	w10, #0x8                   	// #8
  40d398:	strh	w2, [x9, #2]
  40d39c:	strh	w10, [x9]
  40d3a0:	str	w3, [x9, #4]
  40d3a4:	ldrh	w9, [x0]
  40d3a8:	mov	w8, wzr
  40d3ac:	add	w9, w9, #0xb
  40d3b0:	and	w9, w9, #0xfffc
  40d3b4:	strh	w9, [x0]
  40d3b8:	mov	w0, w8
  40d3bc:	ldp	x29, x30, [sp], #16
  40d3c0:	ret
  40d3c4:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d3c8:	ldr	x9, [x9, #3992]
  40d3cc:	mov	w8, w1
  40d3d0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d3d4:	add	x1, x1, #0xa61
  40d3d8:	ldr	x0, [x9]
  40d3dc:	mov	w2, w8
  40d3e0:	bl	405240 <fprintf@plt>
  40d3e4:	mov	w8, #0xffffffff            	// #-1
  40d3e8:	b	40d3b8 <rta_addattr32@@Base+0x48>

000000000040d3ec <rta_addattr_l@@Base>:
  40d3ec:	stp	x29, x30, [sp, #-32]!
  40d3f0:	stp	x20, x19, [sp, #16]
  40d3f4:	ldrh	w9, [x0]
  40d3f8:	add	w10, w4, #0x7
  40d3fc:	and	w20, w10, #0xfffffffc
  40d400:	mov	x29, sp
  40d404:	add	w9, w9, #0x3
  40d408:	and	x9, x9, #0x1fffc
  40d40c:	add	w10, w9, w20
  40d410:	cmp	w10, w1
  40d414:	b.hi	40d464 <rta_addattr_l@@Base+0x78>  // b.pmore
  40d418:	mov	x19, x0
  40d41c:	add	x8, x0, x9
  40d420:	add	w9, w4, #0x4
  40d424:	strh	w2, [x8, #2]
  40d428:	strh	w9, [x8]
  40d42c:	cbz	w4, 40d440 <rta_addattr_l@@Base+0x54>
  40d430:	sxtw	x2, w4
  40d434:	add	x0, x8, #0x4
  40d438:	mov	x1, x3
  40d43c:	bl	404d10 <memcpy@plt>
  40d440:	ldrh	w8, [x19]
  40d444:	mov	w0, wzr
  40d448:	add	w8, w8, #0x3
  40d44c:	and	w8, w8, #0xfffc
  40d450:	add	w8, w8, w20
  40d454:	strh	w8, [x19]
  40d458:	ldp	x20, x19, [sp, #16]
  40d45c:	ldp	x29, x30, [sp], #32
  40d460:	ret
  40d464:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d468:	ldr	x9, [x9, #3992]
  40d46c:	mov	w8, w1
  40d470:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d474:	add	x1, x1, #0xa96
  40d478:	ldr	x0, [x9]
  40d47c:	mov	w2, w8
  40d480:	bl	405240 <fprintf@plt>
  40d484:	mov	w0, #0xffffffff            	// #-1
  40d488:	b	40d458 <rta_addattr_l@@Base+0x6c>

000000000040d48c <rta_addattr8@@Base>:
  40d48c:	stp	x29, x30, [sp, #-16]!
  40d490:	ldrh	w9, [x0]
  40d494:	mov	x29, sp
  40d498:	add	w9, w9, #0x3
  40d49c:	and	x9, x9, #0x1fffc
  40d4a0:	add	w10, w9, #0x8
  40d4a4:	cmp	w10, w1
  40d4a8:	b.hi	40d4e0 <rta_addattr8@@Base+0x54>  // b.pmore
  40d4ac:	add	x9, x0, x9
  40d4b0:	mov	w10, #0x5                   	// #5
  40d4b4:	strh	w2, [x9, #2]
  40d4b8:	strh	w10, [x9]
  40d4bc:	strb	w3, [x9, #4]
  40d4c0:	ldrh	w9, [x0]
  40d4c4:	mov	w8, wzr
  40d4c8:	add	w9, w9, #0xb
  40d4cc:	and	w9, w9, #0xfffc
  40d4d0:	strh	w9, [x0]
  40d4d4:	mov	w0, w8
  40d4d8:	ldp	x29, x30, [sp], #16
  40d4dc:	ret
  40d4e0:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d4e4:	ldr	x9, [x9, #3992]
  40d4e8:	mov	w8, w1
  40d4ec:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d4f0:	add	x1, x1, #0xa96
  40d4f4:	ldr	x0, [x9]
  40d4f8:	mov	w2, w8
  40d4fc:	bl	405240 <fprintf@plt>
  40d500:	mov	w8, #0xffffffff            	// #-1
  40d504:	b	40d4d4 <rta_addattr8@@Base+0x48>

000000000040d508 <rta_addattr16@@Base>:
  40d508:	stp	x29, x30, [sp, #-16]!
  40d50c:	ldrh	w9, [x0]
  40d510:	mov	x29, sp
  40d514:	add	w9, w9, #0x3
  40d518:	and	x9, x9, #0x1fffc
  40d51c:	add	w10, w9, #0x8
  40d520:	cmp	w10, w1
  40d524:	b.hi	40d55c <rta_addattr16@@Base+0x54>  // b.pmore
  40d528:	add	x9, x0, x9
  40d52c:	mov	w10, #0x6                   	// #6
  40d530:	strh	w2, [x9, #2]
  40d534:	strh	w10, [x9]
  40d538:	strh	w3, [x9, #4]
  40d53c:	ldrh	w9, [x0]
  40d540:	mov	w8, wzr
  40d544:	add	w9, w9, #0xb
  40d548:	and	w9, w9, #0xfffc
  40d54c:	strh	w9, [x0]
  40d550:	mov	w0, w8
  40d554:	ldp	x29, x30, [sp], #16
  40d558:	ret
  40d55c:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d560:	ldr	x9, [x9, #3992]
  40d564:	mov	w8, w1
  40d568:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d56c:	add	x1, x1, #0xa96
  40d570:	ldr	x0, [x9]
  40d574:	mov	w2, w8
  40d578:	bl	405240 <fprintf@plt>
  40d57c:	mov	w8, #0xffffffff            	// #-1
  40d580:	b	40d550 <rta_addattr16@@Base+0x48>

000000000040d584 <rta_addattr64@@Base>:
  40d584:	stp	x29, x30, [sp, #-16]!
  40d588:	ldrh	w9, [x0]
  40d58c:	mov	x29, sp
  40d590:	add	w9, w9, #0x3
  40d594:	and	x9, x9, #0x1fffc
  40d598:	add	w10, w9, #0xc
  40d59c:	cmp	w10, w1
  40d5a0:	b.hi	40d5d8 <rta_addattr64@@Base+0x54>  // b.pmore
  40d5a4:	add	x9, x0, x9
  40d5a8:	mov	w10, #0xc                   	// #12
  40d5ac:	strh	w2, [x9, #2]
  40d5b0:	strh	w10, [x9]
  40d5b4:	stur	x3, [x9, #4]
  40d5b8:	ldrh	w9, [x0]
  40d5bc:	mov	w8, wzr
  40d5c0:	add	w9, w9, #0xf
  40d5c4:	and	w9, w9, #0xfffc
  40d5c8:	strh	w9, [x0]
  40d5cc:	mov	w0, w8
  40d5d0:	ldp	x29, x30, [sp], #16
  40d5d4:	ret
  40d5d8:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d5dc:	ldr	x9, [x9, #3992]
  40d5e0:	mov	w8, w1
  40d5e4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d5e8:	add	x1, x1, #0xa96
  40d5ec:	ldr	x0, [x9]
  40d5f0:	mov	w2, w8
  40d5f4:	bl	405240 <fprintf@plt>
  40d5f8:	mov	w8, #0xffffffff            	// #-1
  40d5fc:	b	40d5cc <rta_addattr64@@Base+0x48>

000000000040d600 <rta_nest@@Base>:
  40d600:	stp	x29, x30, [sp, #-32]!
  40d604:	ldrh	w9, [x0]
  40d608:	str	x19, [sp, #16]
  40d60c:	mov	x29, sp
  40d610:	add	w9, w9, #0x3
  40d614:	and	x9, x9, #0x1fffc
  40d618:	add	w10, w9, #0x4
  40d61c:	cmp	w10, w1
  40d620:	add	x19, x0, x9
  40d624:	b.hi	40d660 <rta_nest@@Base+0x60>  // b.pmore
  40d628:	mov	w8, #0x4                   	// #4
  40d62c:	strh	w2, [x19, #2]
  40d630:	strh	w8, [x19]
  40d634:	ldrh	w8, [x0]
  40d638:	add	w8, w8, #0x7
  40d63c:	and	w8, w8, #0xfffc
  40d640:	strh	w8, [x0]
  40d644:	ldrh	w8, [x19, #2]
  40d648:	mov	x0, x19
  40d64c:	orr	w8, w8, #0x8000
  40d650:	strh	w8, [x19, #2]
  40d654:	ldr	x19, [sp, #16]
  40d658:	ldp	x29, x30, [sp], #32
  40d65c:	ret
  40d660:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d664:	ldr	x9, [x9, #3992]
  40d668:	mov	w8, w1
  40d66c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d670:	add	x1, x1, #0xa96
  40d674:	ldr	x0, [x9]
  40d678:	mov	w2, w8
  40d67c:	bl	405240 <fprintf@plt>
  40d680:	b	40d644 <rta_nest@@Base+0x44>

000000000040d684 <rta_nest_end@@Base>:
  40d684:	ldrh	w8, [x0]
  40d688:	add	w8, w8, #0x3
  40d68c:	and	w8, w8, #0xfffc
  40d690:	add	w8, w0, w8
  40d694:	sub	w8, w8, w1
  40d698:	strh	w8, [x1]
  40d69c:	ldrh	w0, [x0]
  40d6a0:	ret

000000000040d6a4 <parse_rtattr@@Base>:
  40d6a4:	stp	x29, x30, [sp, #-48]!
  40d6a8:	add	w8, w1, #0x1
  40d6ac:	stp	x22, x21, [sp, #16]
  40d6b0:	stp	x20, x19, [sp, #32]
  40d6b4:	mov	x20, x2
  40d6b8:	mov	w21, w1
  40d6bc:	sbfiz	x2, x8, #3, #32
  40d6c0:	mov	w1, wzr
  40d6c4:	mov	x29, sp
  40d6c8:	mov	w19, w3
  40d6cc:	mov	x22, x0
  40d6d0:	bl	404ef0 <memset@plt>
  40d6d4:	cmp	w19, #0x4
  40d6d8:	b.ge	40d72c <parse_rtattr@@Base+0x88>  // b.tcont
  40d6dc:	cbz	w19, 40d700 <parse_rtattr@@Base+0x5c>
  40d6e0:	ldrh	w3, [x20]
  40d6e4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d6e8:	ldr	x8, [x8, #3992]
  40d6ec:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d6f0:	add	x1, x1, #0xacb
  40d6f4:	mov	w2, w19
  40d6f8:	ldr	x0, [x8]
  40d6fc:	bl	405240 <fprintf@plt>
  40d700:	ldp	x20, x19, [sp, #32]
  40d704:	ldp	x22, x21, [sp, #16]
  40d708:	mov	w0, wzr
  40d70c:	ldp	x29, x30, [sp], #48
  40d710:	ret
  40d714:	add	w8, w3, #0x3
  40d718:	and	x8, x8, #0x1fffc
  40d71c:	sub	w19, w19, w8
  40d720:	cmp	w19, #0x3
  40d724:	add	x20, x20, x8
  40d728:	b.le	40d6dc <parse_rtattr@@Base+0x38>
  40d72c:	ldrh	w3, [x20]
  40d730:	cmp	x3, #0x4
  40d734:	b.cc	40d6e4 <parse_rtattr@@Base+0x40>  // b.lo, b.ul, b.last
  40d738:	cmp	w19, w3
  40d73c:	b.lt	40d6e4 <parse_rtattr@@Base+0x40>  // b.tstop
  40d740:	ldrh	w8, [x20, #2]
  40d744:	cmp	w8, w21
  40d748:	b.gt	40d714 <parse_rtattr@@Base+0x70>
  40d74c:	ldr	x9, [x22, x8, lsl #3]
  40d750:	cbnz	x9, 40d714 <parse_rtattr@@Base+0x70>
  40d754:	str	x20, [x22, x8, lsl #3]
  40d758:	b	40d714 <parse_rtattr@@Base+0x70>

000000000040d75c <parse_rtattr_flags@@Base>:
  40d75c:	stp	x29, x30, [sp, #-64]!
  40d760:	add	w8, w1, #0x1
  40d764:	stp	x22, x21, [sp, #32]
  40d768:	stp	x20, x19, [sp, #48]
  40d76c:	mov	x20, x2
  40d770:	mov	w21, w1
  40d774:	sbfiz	x2, x8, #3, #32
  40d778:	mov	w1, wzr
  40d77c:	str	x23, [sp, #16]
  40d780:	mov	x29, sp
  40d784:	mov	w23, w4
  40d788:	mov	w19, w3
  40d78c:	mov	x22, x0
  40d790:	bl	404ef0 <memset@plt>
  40d794:	cmp	w19, #0x4
  40d798:	b.lt	40d7f4 <parse_rtattr_flags@@Base+0x98>  // b.tstop
  40d79c:	mvn	w8, w23
  40d7a0:	b	40d7bc <parse_rtattr_flags@@Base+0x60>
  40d7a4:	add	w9, w3, #0x3
  40d7a8:	and	x9, x9, #0x1fffc
  40d7ac:	sub	w19, w19, w9
  40d7b0:	cmp	w19, #0x3
  40d7b4:	add	x20, x20, x9
  40d7b8:	b.le	40d7f4 <parse_rtattr_flags@@Base+0x98>
  40d7bc:	ldrh	w3, [x20]
  40d7c0:	cmp	x3, #0x4
  40d7c4:	b.cc	40d7fc <parse_rtattr_flags@@Base+0xa0>  // b.lo, b.ul, b.last
  40d7c8:	cmp	w19, w3
  40d7cc:	b.lt	40d7fc <parse_rtattr_flags@@Base+0xa0>  // b.tstop
  40d7d0:	ldrh	w9, [x20, #2]
  40d7d4:	and	w9, w9, w8
  40d7d8:	cmp	w21, w9, uxth
  40d7dc:	b.lt	40d7a4 <parse_rtattr_flags@@Base+0x48>  // b.tstop
  40d7e0:	and	x9, x9, #0xffff
  40d7e4:	ldr	x10, [x22, x9, lsl #3]
  40d7e8:	cbnz	x10, 40d7a4 <parse_rtattr_flags@@Base+0x48>
  40d7ec:	str	x20, [x22, x9, lsl #3]
  40d7f0:	b	40d7a4 <parse_rtattr_flags@@Base+0x48>
  40d7f4:	cbz	w19, 40d818 <parse_rtattr_flags@@Base+0xbc>
  40d7f8:	ldrh	w3, [x20]
  40d7fc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d800:	ldr	x8, [x8, #3992]
  40d804:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d808:	add	x1, x1, #0xacb
  40d80c:	mov	w2, w19
  40d810:	ldr	x0, [x8]
  40d814:	bl	405240 <fprintf@plt>
  40d818:	ldp	x20, x19, [sp, #48]
  40d81c:	ldp	x22, x21, [sp, #32]
  40d820:	ldr	x23, [sp, #16]
  40d824:	mov	w0, wzr
  40d828:	ldp	x29, x30, [sp], #64
  40d82c:	ret

000000000040d830 <parse_rtattr_one@@Base>:
  40d830:	stp	x29, x30, [sp, #-16]!
  40d834:	cmp	w2, #0x4
  40d838:	mov	x29, sp
  40d83c:	b.lt	40d878 <parse_rtattr_one@@Base+0x48>  // b.tstop
  40d840:	ldrh	w3, [x1]
  40d844:	cmp	x3, #0x4
  40d848:	b.cc	40d880 <parse_rtattr_one@@Base+0x50>  // b.lo, b.ul, b.last
  40d84c:	cmp	w2, w3
  40d850:	b.lt	40d880 <parse_rtattr_one@@Base+0x50>  // b.tstop
  40d854:	ldrh	w8, [x1, #2]
  40d858:	cmp	w8, w0
  40d85c:	b.eq	40d89c <parse_rtattr_one@@Base+0x6c>  // b.none
  40d860:	add	w8, w3, #0x3
  40d864:	and	x8, x8, #0x1fffc
  40d868:	sub	w2, w2, w8
  40d86c:	cmp	w2, #0x3
  40d870:	add	x1, x1, x8
  40d874:	b.gt	40d840 <parse_rtattr_one@@Base+0x10>
  40d878:	cbz	w2, 40d898 <parse_rtattr_one@@Base+0x68>
  40d87c:	ldrh	w3, [x1]
  40d880:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d884:	ldr	x8, [x8, #3992]
  40d888:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d88c:	add	x1, x1, #0xacb
  40d890:	ldr	x0, [x8]
  40d894:	bl	405240 <fprintf@plt>
  40d898:	mov	x1, xzr
  40d89c:	mov	x0, x1
  40d8a0:	ldp	x29, x30, [sp], #16
  40d8a4:	ret

000000000040d8a8 <__parse_rtattr_nested_compat@@Base>:
  40d8a8:	stp	x29, x30, [sp, #-64]!
  40d8ac:	stp	x22, x21, [sp, #32]
  40d8b0:	stp	x20, x19, [sp, #48]
  40d8b4:	ldrh	w8, [x2]
  40d8b8:	str	x23, [sp, #16]
  40d8bc:	mov	x29, sp
  40d8c0:	sub	x8, x8, #0x4
  40d8c4:	cmp	x8, w3, sxtw
  40d8c8:	b.cs	40d8d4 <__parse_rtattr_nested_compat@@Base+0x2c>  // b.hs, b.nlast
  40d8cc:	mov	w0, #0xffffffff            	// #-1
  40d8d0:	b	40d95c <__parse_rtattr_nested_compat@@Base+0xb4>
  40d8d4:	add	w9, w3, #0x3
  40d8d8:	and	x9, x9, #0xfffffffc
  40d8dc:	add	x10, x9, #0x4
  40d8e0:	mov	w20, w1
  40d8e4:	mov	x21, x0
  40d8e8:	cmp	x8, x10
  40d8ec:	b.cs	40d908 <__parse_rtattr_nested_compat@@Base+0x60>  // b.hs, b.nlast
  40d8f0:	add	w8, w20, #0x1
  40d8f4:	sbfiz	x2, x8, #3, #32
  40d8f8:	mov	x0, x21
  40d8fc:	mov	w1, wzr
  40d900:	bl	404ef0 <memset@plt>
  40d904:	b	40d958 <__parse_rtattr_nested_compat@@Base+0xb0>
  40d908:	add	x8, x2, x9
  40d90c:	ldrh	w23, [x8, #4]
  40d910:	add	w9, w20, #0x1
  40d914:	sbfiz	x2, x9, #3, #32
  40d918:	mov	x0, x21
  40d91c:	mov	w1, wzr
  40d920:	add	x22, x8, #0x8
  40d924:	sub	w19, w23, #0x4
  40d928:	bl	404ef0 <memset@plt>
  40d92c:	cmp	w23, #0x8
  40d930:	b.cs	40d988 <__parse_rtattr_nested_compat@@Base+0xe0>  // b.hs, b.nlast
  40d934:	cbz	w19, 40d958 <__parse_rtattr_nested_compat@@Base+0xb0>
  40d938:	ldrh	w3, [x22]
  40d93c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40d940:	ldr	x8, [x8, #3992]
  40d944:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40d948:	add	x1, x1, #0xacb
  40d94c:	mov	w2, w19
  40d950:	ldr	x0, [x8]
  40d954:	bl	405240 <fprintf@plt>
  40d958:	mov	w0, wzr
  40d95c:	ldp	x20, x19, [sp, #48]
  40d960:	ldp	x22, x21, [sp, #32]
  40d964:	ldr	x23, [sp, #16]
  40d968:	ldp	x29, x30, [sp], #64
  40d96c:	ret
  40d970:	add	w8, w3, #0x3
  40d974:	and	x8, x8, #0x1fffc
  40d978:	sub	w19, w19, w8
  40d97c:	cmp	w19, #0x3
  40d980:	add	x22, x22, x8
  40d984:	b.le	40d934 <__parse_rtattr_nested_compat@@Base+0x8c>
  40d988:	ldrh	w3, [x22]
  40d98c:	cmp	x3, #0x4
  40d990:	b.cc	40d93c <__parse_rtattr_nested_compat@@Base+0x94>  // b.lo, b.ul, b.last
  40d994:	cmp	w19, w3
  40d998:	b.lt	40d93c <__parse_rtattr_nested_compat@@Base+0x94>  // b.tstop
  40d99c:	ldrh	w8, [x22, #2]
  40d9a0:	cmp	w8, w20
  40d9a4:	b.gt	40d970 <__parse_rtattr_nested_compat@@Base+0xc8>
  40d9a8:	ldr	x9, [x21, x8, lsl #3]
  40d9ac:	cbnz	x9, 40d970 <__parse_rtattr_nested_compat@@Base+0xc8>
  40d9b0:	str	x22, [x21, x8, lsl #3]
  40d9b4:	b	40d970 <__parse_rtattr_nested_compat@@Base+0xc8>
  40d9b8:	stp	x29, x30, [sp, #-64]!
  40d9bc:	stp	x24, x23, [sp, #16]
  40d9c0:	stp	x22, x21, [sp, #32]
  40d9c4:	stp	x20, x19, [sp, #48]
  40d9c8:	ldr	x24, [x1, #16]
  40d9cc:	mov	x19, x2
  40d9d0:	mov	w2, #0x22                  	// #34
  40d9d4:	mov	x29, sp
  40d9d8:	mov	x21, x1
  40d9dc:	mov	w22, w0
  40d9e0:	stp	xzr, xzr, [x24]
  40d9e4:	bl	40da7c <__parse_rtattr_nested_compat@@Base+0x1d4>
  40d9e8:	mov	w20, w0
  40d9ec:	tbnz	w0, #31, 40da3c <__parse_rtattr_nested_compat@@Base+0x194>
  40d9f0:	cmp	w20, #0x8, lsl #12
  40d9f4:	mov	w8, #0x8000                	// #32768
  40d9f8:	csel	w20, w20, w8, gt
  40d9fc:	mov	x0, x20
  40da00:	bl	404e80 <malloc@plt>
  40da04:	cbz	x0, 40da54 <__parse_rtattr_nested_compat@@Base+0x1ac>
  40da08:	mov	x23, x0
  40da0c:	stp	x0, x20, [x24]
  40da10:	mov	w0, w22
  40da14:	mov	x1, x21
  40da18:	mov	w2, wzr
  40da1c:	bl	40da7c <__parse_rtattr_nested_compat@@Base+0x1d4>
  40da20:	mov	w20, w0
  40da24:	tbnz	w0, #31, 40da34 <__parse_rtattr_nested_compat@@Base+0x18c>
  40da28:	cbz	x19, 40da34 <__parse_rtattr_nested_compat@@Base+0x18c>
  40da2c:	str	x23, [x19]
  40da30:	b	40da3c <__parse_rtattr_nested_compat@@Base+0x194>
  40da34:	mov	x0, x23
  40da38:	bl	405060 <free@plt>
  40da3c:	mov	w0, w20
  40da40:	ldp	x20, x19, [sp, #48]
  40da44:	ldp	x22, x21, [sp, #32]
  40da48:	ldp	x24, x23, [sp, #16]
  40da4c:	ldp	x29, x30, [sp], #64
  40da50:	ret
  40da54:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40da58:	ldr	x8, [x8, #3992]
  40da5c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40da60:	add	x0, x0, #0xb15
  40da64:	mov	w1, #0x20                  	// #32
  40da68:	ldr	x3, [x8]
  40da6c:	mov	w2, #0x1                   	// #1
  40da70:	bl	4050c0 <fwrite@plt>
  40da74:	mov	w20, #0xfffffff4            	// #-12
  40da78:	b	40da3c <__parse_rtattr_nested_compat@@Base+0x194>
  40da7c:	stp	x29, x30, [sp, #-48]!
  40da80:	stp	x22, x21, [sp, #16]
  40da84:	stp	x20, x19, [sp, #32]
  40da88:	mov	x29, sp
  40da8c:	mov	w20, w2
  40da90:	mov	x21, x1
  40da94:	mov	w22, w0
  40da98:	bl	404d20 <recvmsg@plt>
  40da9c:	tbnz	w0, #31, 40dacc <__parse_rtattr_nested_compat@@Base+0x224>
  40daa0:	cbnz	w0, 40db30 <__parse_rtattr_nested_compat@@Base+0x288>
  40daa4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40daa8:	ldr	x8, [x8, #3992]
  40daac:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x428>
  40dab0:	add	x0, x0, #0x920
  40dab4:	mov	w1, #0xf                   	// #15
  40dab8:	ldr	x3, [x8]
  40dabc:	mov	w2, #0x1                   	// #1
  40dac0:	bl	4050c0 <fwrite@plt>
  40dac4:	mov	w0, #0xffffffc3            	// #-61
  40dac8:	b	40db30 <__parse_rtattr_nested_compat@@Base+0x288>
  40dacc:	bl	4051f0 <__errno_location@plt>
  40dad0:	mov	x19, x0
  40dad4:	b	40daec <__parse_rtattr_nested_compat@@Base+0x244>
  40dad8:	mov	w0, w22
  40dadc:	mov	x1, x21
  40dae0:	mov	w2, w20
  40dae4:	bl	404d20 <recvmsg@plt>
  40dae8:	tbz	w0, #31, 40daa0 <__parse_rtattr_nested_compat@@Base+0x1f8>
  40daec:	ldr	w0, [x19]
  40daf0:	cmp	w0, #0xb
  40daf4:	b.eq	40dad8 <__parse_rtattr_nested_compat@@Base+0x230>  // b.none
  40daf8:	cmp	w0, #0x4
  40dafc:	b.eq	40dad8 <__parse_rtattr_nested_compat@@Base+0x230>  // b.none
  40db00:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10428>
  40db04:	ldr	x8, [x8, #3992]
  40db08:	ldr	x20, [x8]
  40db0c:	bl	404f90 <strerror@plt>
  40db10:	ldr	w3, [x19]
  40db14:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x428>
  40db18:	mov	x2, x0
  40db1c:	add	x1, x1, #0x901
  40db20:	mov	x0, x20
  40db24:	bl	405240 <fprintf@plt>
  40db28:	ldr	w8, [x19]
  40db2c:	neg	w0, w8
  40db30:	ldp	x20, x19, [sp, #32]
  40db34:	ldp	x22, x21, [sp, #16]
  40db38:	ldp	x29, x30, [sp], #48
  40db3c:	ret

000000000040db40 <__libc_csu_init@@Base>:
  40db40:	stp	x29, x30, [sp, #-64]!
  40db44:	mov	x29, sp
  40db48:	stp	x19, x20, [sp, #16]
  40db4c:	adrp	x20, 41e000 <_IO_stdin_used@@Base+0x10428>
  40db50:	add	x20, x20, #0xcf8
  40db54:	stp	x21, x22, [sp, #32]
  40db58:	adrp	x21, 41e000 <_IO_stdin_used@@Base+0x10428>
  40db5c:	add	x21, x21, #0xcf0
  40db60:	sub	x20, x20, x21
  40db64:	mov	w22, w0
  40db68:	stp	x23, x24, [sp, #48]
  40db6c:	mov	x23, x1
  40db70:	mov	x24, x2
  40db74:	bl	404cd0 <memcpy@plt-0x40>
  40db78:	cmp	xzr, x20, asr #3
  40db7c:	b.eq	40dba8 <__libc_csu_init@@Base+0x68>  // b.none
  40db80:	asr	x20, x20, #3
  40db84:	mov	x19, #0x0                   	// #0
  40db88:	ldr	x3, [x21, x19, lsl #3]
  40db8c:	mov	x2, x24
  40db90:	add	x19, x19, #0x1
  40db94:	mov	x1, x23
  40db98:	mov	w0, w22
  40db9c:	blr	x3
  40dba0:	cmp	x20, x19
  40dba4:	b.ne	40db88 <__libc_csu_init@@Base+0x48>  // b.any
  40dba8:	ldp	x19, x20, [sp, #16]
  40dbac:	ldp	x21, x22, [sp, #32]
  40dbb0:	ldp	x23, x24, [sp, #48]
  40dbb4:	ldp	x29, x30, [sp], #64
  40dbb8:	ret
  40dbbc:	nop

000000000040dbc0 <__libc_csu_fini@@Base>:
  40dbc0:	ret

Disassembly of section .fini:

000000000040dbc4 <.fini>:
  40dbc4:	stp	x29, x30, [sp, #-16]!
  40dbc8:	mov	x29, sp
  40dbcc:	ldp	x29, x30, [sp], #16
  40dbd0:	ret
