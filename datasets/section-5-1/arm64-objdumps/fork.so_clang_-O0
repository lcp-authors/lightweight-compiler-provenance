
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fork.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000878 <.init>:
 878:	stp	x29, x30, [sp, #-16]!
 87c:	mov	x29, sp
 880:	bl	990 <fprintf@plt+0x10>
 884:	ldp	x29, x30, [sp], #16
 888:	ret

Disassembly of section .plt:

0000000000000890 <memcpy@plt-0x20>:
 890:	stp	x16, x30, [sp, #-16]!
 894:	adrp	x16, 11000 <dl_load@@Base+0x1059c>
 898:	ldr	x17, [x16, #4088]
 89c:	add	x16, x16, #0xff8
 8a0:	br	x17
 8a4:	nop
 8a8:	nop
 8ac:	nop

00000000000008b0 <memcpy@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16]
 8b8:	add	x16, x16, #0x0
 8bc:	br	x17

00000000000008c0 <strlen@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #8]
 8c8:	add	x16, x16, #0x8
 8cc:	br	x17

00000000000008d0 <exit@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #16]
 8d8:	add	x16, x16, #0x10
 8dc:	br	x17

00000000000008e0 <__cxa_finalize@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #24]
 8e8:	add	x16, x16, #0x18
 8ec:	br	x17

00000000000008f0 <fork@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #32]
 8f8:	add	x16, x16, #0x20
 8fc:	br	x17

0000000000000900 <getpid@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #40]
 908:	add	x16, x16, #0x28
 90c:	br	x17

0000000000000910 <getppid@plt>:
 910:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 914:	ldr	x17, [x16, #48]
 918:	add	x16, x16, #0x30
 91c:	br	x17

0000000000000920 <memset@plt>:
 920:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 924:	ldr	x17, [x16, #56]
 928:	add	x16, x16, #0x38
 92c:	br	x17

0000000000000930 <__gmon_start__@plt>:
 930:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 934:	ldr	x17, [x16, #64]
 938:	add	x16, x16, #0x40
 93c:	br	x17

0000000000000940 <wait@plt>:
 940:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 944:	ldr	x17, [x16, #72]
 948:	add	x16, x16, #0x48
 94c:	br	x17

0000000000000950 <__errno_location@plt>:
 950:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 954:	ldr	x17, [x16, #80]
 958:	add	x16, x16, #0x50
 95c:	br	x17

0000000000000960 <waitpid@plt>:
 960:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 964:	ldr	x17, [x16, #88]
 968:	add	x16, x16, #0x58
 96c:	br	x17

0000000000000970 <gettext@plt>:
 970:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 974:	ldr	x17, [x16, #96]
 978:	add	x16, x16, #0x60
 97c:	br	x17

0000000000000980 <fprintf@plt>:
 980:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 984:	ldr	x17, [x16, #104]
 988:	add	x16, x16, #0x68
 98c:	br	x17

Disassembly of section .text:

0000000000000990 <dl_load@@Base-0xd4>:
     990:	adrp	x0, 11000 <dl_load@@Base+0x1059c>
     994:	ldr	x0, [x0, #4056]
     998:	cbz	x0, 9a0 <fprintf@plt+0x20>
     99c:	b	930 <__gmon_start__@plt>
     9a0:	ret
     9a4:	nop
     9a8:	adrp	x0, 12000 <dl_load@@Base+0x1159c>
     9ac:	add	x0, x0, #0x110
     9b0:	adrp	x1, 12000 <dl_load@@Base+0x1159c>
     9b4:	add	x1, x1, #0x110
     9b8:	cmp	x1, x0
     9bc:	b.eq	9d4 <fprintf@plt+0x54>  // b.none
     9c0:	adrp	x1, 11000 <dl_load@@Base+0x1059c>
     9c4:	ldr	x1, [x1, #4032]
     9c8:	cbz	x1, 9d4 <fprintf@plt+0x54>
     9cc:	mov	x16, x1
     9d0:	br	x16
     9d4:	ret
     9d8:	adrp	x0, 12000 <dl_load@@Base+0x1159c>
     9dc:	add	x0, x0, #0x110
     9e0:	adrp	x1, 12000 <dl_load@@Base+0x1159c>
     9e4:	add	x1, x1, #0x110
     9e8:	sub	x1, x1, x0
     9ec:	lsr	x2, x1, #63
     9f0:	add	x1, x2, x1, asr #3
     9f4:	cmp	xzr, x1, asr #1
     9f8:	asr	x1, x1, #1
     9fc:	b.eq	a14 <fprintf@plt+0x94>  // b.none
     a00:	adrp	x2, 11000 <dl_load@@Base+0x1059c>
     a04:	ldr	x2, [x2, #4064]
     a08:	cbz	x2, a14 <fprintf@plt+0x94>
     a0c:	mov	x16, x2
     a10:	br	x16
     a14:	ret
     a18:	stp	x29, x30, [sp, #-32]!
     a1c:	mov	x29, sp
     a20:	str	x19, [sp, #16]
     a24:	adrp	x19, 12000 <dl_load@@Base+0x1159c>
     a28:	ldrb	w0, [x19, #272]
     a2c:	cbnz	w0, a54 <fprintf@plt+0xd4>
     a30:	adrp	x0, 11000 <dl_load@@Base+0x1059c>
     a34:	ldr	x0, [x0, #4040]
     a38:	cbz	x0, a48 <fprintf@plt+0xc8>
     a3c:	adrp	x0, 12000 <dl_load@@Base+0x1159c>
     a40:	ldr	x0, [x0, #112]
     a44:	bl	8e0 <__cxa_finalize@plt>
     a48:	bl	9a8 <fprintf@plt+0x28>
     a4c:	mov	w0, #0x1                   	// #1
     a50:	strb	w0, [x19, #272]
     a54:	ldr	x19, [sp, #16]
     a58:	ldp	x29, x30, [sp], #32
     a5c:	ret
     a60:	b	9d8 <fprintf@plt+0x58>

0000000000000a64 <dl_load@@Base>:
     a64:	sub	sp, sp, #0x60
     a68:	stp	x29, x30, [sp, #80]
     a6c:	add	x29, sp, #0x50
     a70:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     a74:	add	x8, x8, #0x118
     a78:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
     a7c:	add	x9, x9, #0x120
     a80:	adrp	x10, 12000 <dl_load@@Base+0x1159c>
     a84:	add	x10, x10, #0x78
     a88:	stur	x0, [x29, #-8]
     a8c:	stur	x1, [x29, #-16]
     a90:	stur	wzr, [x29, #-36]
     a94:	ldur	x11, [x29, #-8]
     a98:	str	x11, [x8]
     a9c:	ldur	x11, [x29, #-16]
     aa0:	str	x11, [x9]
     aa4:	ldr	x11, [x8]
     aa8:	ldr	w12, [x11]
     aac:	cmp	w12, #0x2
     ab0:	str	x8, [sp, #32]
     ab4:	str	x9, [sp, #24]
     ab8:	str	x10, [sp, #16]
     abc:	b.ne	ad8 <dl_load@@Base+0x74>  // b.any
     ac0:	ldr	x8, [sp, #32]
     ac4:	ldr	x9, [x8]
     ac8:	ldr	w10, [x9, #4]
     acc:	cmp	w10, #0x0
     ad0:	cset	w10, ge  // ge = tcont
     ad4:	tbnz	w10, #0, b38 <dl_load@@Base+0xd4>
     ad8:	adrp	x8, 11000 <dl_load@@Base+0x1059c>
     adc:	ldr	x8, [x8, #4048]
     ae0:	ldr	x0, [x8]
     ae4:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     ae8:	add	x1, x1, #0x214
     aec:	str	x8, [sp, #8]
     af0:	bl	980 <fprintf@plt>
     af4:	ldr	x8, [sp, #8]
     af8:	ldr	x9, [x8]
     afc:	ldr	x10, [sp, #32]
     b00:	ldr	x11, [x10]
     b04:	ldr	w4, [x11]
     b08:	ldr	x11, [x10]
     b0c:	ldr	w5, [x11, #4]
     b10:	mov	x0, x9
     b14:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     b18:	add	x1, x1, #0x237
     b1c:	mov	w2, #0x2                   	// #2
     b20:	mov	w12, wzr
     b24:	mov	w3, w12
     b28:	bl	980 <fprintf@plt>
     b2c:	mov	w12, #0x1                   	// #1
     b30:	mov	w0, w12
     b34:	bl	8d0 <exit@plt>
     b38:	stur	xzr, [x29, #-24]
     b3c:	mov	x8, #0x3                   	// #3
     b40:	stur	x8, [x29, #-32]
     b44:	ldur	x8, [x29, #-24]
     b48:	ldur	x9, [x29, #-32]
     b4c:	cmp	x8, x9
     b50:	b.cs	c00 <dl_load@@Base+0x19c>  // b.hs, b.nlast
     b54:	ldur	x8, [x29, #-24]
     b58:	mov	x9, #0x30                  	// #48
     b5c:	mul	x8, x9, x8
     b60:	ldr	x9, [sp, #16]
     b64:	add	x8, x9, x8
     b68:	ldr	x8, [x8]
     b6c:	cbnz	x8, b74 <dl_load@@Base+0x110>
     b70:	b	c00 <dl_load@@Base+0x19c>
     b74:	ldr	x8, [sp, #32]
     b78:	ldr	x9, [x8]
     b7c:	mov	x10, #0x30                  	// #48
     b80:	ldr	x9, [x9, #48]
     b84:	ldr	x11, [sp, #24]
     b88:	ldr	x0, [x11]
     b8c:	ldur	x12, [x29, #-24]
     b90:	mul	x10, x10, x12
     b94:	ldr	x12, [sp, #16]
     b98:	add	x2, x12, x10
     b9c:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     ba0:	add	x1, x1, #0x236
     ba4:	blr	x9
     ba8:	cbnz	w0, bf0 <dl_load@@Base+0x18c>
     bac:	ldr	x8, [sp, #32]
     bb0:	ldr	x9, [x8]
     bb4:	ldr	x9, [x9, #104]
     bb8:	ldr	x10, [sp, #24]
     bbc:	ldr	x0, [x10]
     bc0:	ldur	x11, [x29, #-24]
     bc4:	mov	x12, #0x30                  	// #48
     bc8:	mul	x11, x12, x11
     bcc:	ldr	x12, [sp, #16]
     bd0:	add	x11, x12, x11
     bd4:	ldr	x2, [x11]
     bd8:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     bdc:	add	x1, x1, #0x26a
     be0:	blr	x9
     be4:	ldur	w13, [x29, #-36]
     be8:	add	w13, w13, #0x1
     bec:	stur	w13, [x29, #-36]
     bf0:	ldur	x8, [x29, #-24]
     bf4:	add	x8, x8, #0x1
     bf8:	stur	x8, [x29, #-24]
     bfc:	b	b44 <dl_load@@Base+0xe0>
     c00:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     c04:	add	x8, x8, #0x128
     c08:	ldr	x8, [x8]
     c0c:	cbz	x8, c50 <dl_load@@Base+0x1ec>
     c10:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     c14:	add	x8, x8, #0x128
     c18:	ldr	x8, [x8]
     c1c:	blr	x8
     c20:	cbnz	w0, c50 <dl_load@@Base+0x1ec>
     c24:	ldr	x8, [sp, #32]
     c28:	ldr	x9, [x8]
     c2c:	ldr	x9, [x9, #104]
     c30:	ldr	x10, [sp, #24]
     c34:	ldr	x0, [x10]
     c38:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     c3c:	add	x1, x1, #0x281
     c40:	blr	x9
     c44:	ldur	w11, [x29, #-36]
     c48:	add	w11, w11, #0x1
     c4c:	stur	w11, [x29, #-36]
     c50:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     c54:	add	x8, x8, #0x108
     c58:	ldr	x8, [x8]
     c5c:	cbz	x8, c84 <dl_load@@Base+0x220>
     c60:	ldr	x8, [sp, #32]
     c64:	ldr	x9, [x8]
     c68:	ldr	x9, [x9, #88]
     c6c:	ldr	x10, [sp, #24]
     c70:	ldr	x0, [x10]
     c74:	adrp	x11, 12000 <dl_load@@Base+0x1159c>
     c78:	add	x11, x11, #0x108
     c7c:	ldr	x1, [x11]
     c80:	blr	x9
     c84:	ldur	w8, [x29, #-36]
     c88:	cmp	w8, #0x0
     c8c:	cset	w8, eq  // eq = none
     c90:	and	w0, w8, #0x1
     c94:	ldp	x29, x30, [sp, #80]
     c98:	add	sp, sp, #0x60
     c9c:	ret
     ca0:	sub	sp, sp, #0xa0
     ca4:	stp	x29, x30, [sp, #144]
     ca8:	add	x29, sp, #0x90
     cac:	mov	w8, #0xffffffff            	// #-1
     cb0:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
     cb4:	add	x9, x9, #0x118
     cb8:	adrp	x10, 12000 <dl_load@@Base+0x1159c>
     cbc:	add	x10, x10, #0x120
     cc0:	stur	w0, [x29, #-4]
     cc4:	stur	x1, [x29, #-16]
     cc8:	stur	x2, [x29, #-24]
     ccc:	stur	w8, [x29, #-28]
     cd0:	str	x9, [sp, #72]
     cd4:	str	x10, [sp, #64]
     cd8:	bl	8f0 <fork@plt>
     cdc:	stur	w0, [x29, #-28]
     ce0:	ldur	w8, [x29, #-28]
     ce4:	cmp	w8, #0x0
     ce8:	cset	w8, ge  // ge = tcont
     cec:	tbnz	w8, #0, d24 <dl_load@@Base+0x2c0>
     cf0:	ldr	x8, [sp, #72]
     cf4:	ldr	x9, [x8]
     cf8:	ldr	x9, [x9, #128]
     cfc:	ldr	x10, [sp, #64]
     d00:	ldr	x0, [x10]
     d04:	str	x9, [sp, #56]
     d08:	str	x0, [sp, #48]
     d0c:	bl	950 <__errno_location@plt>
     d10:	ldr	w1, [x0]
     d14:	ldr	x0, [sp, #48]
     d18:	ldr	x8, [sp, #56]
     d1c:	blr	x8
     d20:	b	e10 <dl_load@@Base+0x3ac>
     d24:	ldur	w8, [x29, #-28]
     d28:	cbnz	w8, e10 <dl_load@@Base+0x3ac>
     d2c:	ldr	x8, [sp, #72]
     d30:	ldr	x9, [x8]
     d34:	ldr	x9, [x9, #168]
     d38:	ldr	x10, [sp, #64]
     d3c:	ldr	x0, [x10]
     d40:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     d44:	add	x1, x1, #0x236
     d48:	adrp	x2, 1000 <dl_load@@Base+0x59c>
     d4c:	add	x2, x2, #0x2b8
     d50:	mov	w3, #0x5                   	// #5
     d54:	sub	x4, x29, #0x40
     d58:	blr	x9
     d5c:	cbz	w0, e10 <dl_load@@Base+0x3ac>
     d60:	ldur	w8, [x29, #-64]
     d64:	cmp	w8, #0x5
     d68:	b.eq	dc4 <dl_load@@Base+0x360>  // b.none
     d6c:	ldr	x8, [sp, #72]
     d70:	ldr	x9, [x8]
     d74:	ldr	w10, [x9, #24]
     d78:	cbz	w10, dc0 <dl_load@@Base+0x35c>
     d7c:	ldr	x8, [sp, #72]
     d80:	ldr	x9, [x8]
     d84:	ldr	x9, [x9, #112]
     d88:	ldr	x10, [sp, #64]
     d8c:	ldr	x0, [x10]
     d90:	adrp	x11, 1000 <dl_load@@Base+0x59c>
     d94:	add	x11, x11, #0x2c1
     d98:	str	x0, [sp, #40]
     d9c:	mov	x0, x11
     da0:	str	x9, [sp, #32]
     da4:	bl	970 <gettext@plt>
     da8:	ldr	x8, [sp, #40]
     dac:	str	x0, [sp, #24]
     db0:	mov	x0, x8
     db4:	ldr	x1, [sp, #24]
     db8:	ldr	x9, [sp, #32]
     dbc:	blr	x9
     dc0:	b	e10 <dl_load@@Base+0x3ac>
     dc4:	sub	x8, x29, #0x40
     dc8:	ldr	x0, [x8, #8]
     dcc:	str	x8, [sp, #16]
     dd0:	str	x0, [sp, #8]
     dd4:	bl	900 <getpid@plt>
     dd8:	scvtf	d0, w0
     ddc:	ldr	x0, [sp, #8]
     de0:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     de4:	add	x1, x1, #0x2e2
     de8:	bl	f9c <dl_load@@Base+0x538>
     dec:	ldr	x8, [sp, #16]
     df0:	ldr	x0, [x8, #8]
     df4:	str	x0, [sp]
     df8:	bl	910 <getppid@plt>
     dfc:	scvtf	d0, w0
     e00:	ldr	x0, [sp]
     e04:	adrp	x1, 1000 <dl_load@@Base+0x59c>
     e08:	add	x1, x1, #0x2e1
     e0c:	bl	f9c <dl_load@@Base+0x538>
     e10:	ldur	w8, [x29, #-28]
     e14:	scvtf	d0, w8
     e18:	ldur	x0, [x29, #-16]
     e1c:	bl	1080 <dl_load@@Base+0x61c>
     e20:	ldp	x29, x30, [sp, #144]
     e24:	add	sp, sp, #0xa0
     e28:	ret
     e2c:	sub	sp, sp, #0x60
     e30:	stp	x29, x30, [sp, #80]
     e34:	add	x29, sp, #0x50
     e38:	mov	w8, #0xffffffff            	// #-1
     e3c:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
     e40:	add	x9, x9, #0x118
     e44:	adrp	x10, 12000 <dl_load@@Base+0x1159c>
     e48:	add	x10, x10, #0x120
     e4c:	mov	x11, xzr
     e50:	mov	w12, #0x1                   	// #1
     e54:	add	x3, sp, #0x18
     e58:	stur	w0, [x29, #-4]
     e5c:	stur	x1, [x29, #-16]
     e60:	stur	x2, [x29, #-24]
     e64:	str	w8, [sp, #20]
     e68:	str	wzr, [sp, #16]
     e6c:	ldr	x9, [x9]
     e70:	ldr	x9, [x9, #152]
     e74:	ldr	x0, [x10]
     e78:	mov	x1, x11
     e7c:	mov	w2, w12
     e80:	blr	x9
     e84:	cbz	w0, ef4 <dl_load@@Base+0x490>
     e88:	mov	w8, #0x3                   	// #3
     e8c:	str	w8, [sp, #16]
     e90:	ldr	d0, [sp, #32]
     e94:	fcvtzs	w0, d0
     e98:	ldr	w2, [sp, #16]
     e9c:	mov	x9, xzr
     ea0:	mov	x1, x9
     ea4:	bl	960 <waitpid@plt>
     ea8:	str	w0, [sp, #20]
     eac:	ldr	w8, [sp, #20]
     eb0:	cmp	w8, #0x0
     eb4:	cset	w8, ge  // ge = tcont
     eb8:	tbnz	w8, #0, ef4 <dl_load@@Base+0x490>
     ebc:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     ec0:	add	x8, x8, #0x118
     ec4:	ldr	x8, [x8]
     ec8:	ldr	x8, [x8, #128]
     ecc:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
     ed0:	add	x9, x9, #0x120
     ed4:	ldr	x0, [x9]
     ed8:	str	x8, [sp, #8]
     edc:	str	x0, [sp]
     ee0:	bl	950 <__errno_location@plt>
     ee4:	ldr	w1, [x0]
     ee8:	ldr	x0, [sp]
     eec:	ldr	x8, [sp, #8]
     ef0:	blr	x8
     ef4:	ldr	w8, [sp, #20]
     ef8:	scvtf	d0, w8
     efc:	ldur	x0, [x29, #-16]
     f00:	bl	1080 <dl_load@@Base+0x61c>
     f04:	ldp	x29, x30, [sp, #80]
     f08:	add	sp, sp, #0x60
     f0c:	ret
     f10:	sub	sp, sp, #0x40
     f14:	stp	x29, x30, [sp, #48]
     f18:	add	x29, sp, #0x30
     f1c:	mov	x8, xzr
     f20:	stur	w0, [x29, #-4]
     f24:	stur	x1, [x29, #-16]
     f28:	str	x2, [sp, #24]
     f2c:	mov	x0, x8
     f30:	bl	940 <wait@plt>
     f34:	str	w0, [sp, #20]
     f38:	ldr	w9, [sp, #20]
     f3c:	cmp	w9, #0x0
     f40:	cset	w9, ge  // ge = tcont
     f44:	tbnz	w9, #0, f80 <dl_load@@Base+0x51c>
     f48:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     f4c:	add	x8, x8, #0x118
     f50:	ldr	x8, [x8]
     f54:	ldr	x8, [x8, #128]
     f58:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
     f5c:	add	x9, x9, #0x120
     f60:	ldr	x0, [x9]
     f64:	str	x8, [sp, #8]
     f68:	str	x0, [sp]
     f6c:	bl	950 <__errno_location@plt>
     f70:	ldr	w1, [x0]
     f74:	ldr	x0, [sp]
     f78:	ldr	x8, [sp, #8]
     f7c:	blr	x8
     f80:	ldr	w8, [sp, #20]
     f84:	scvtf	d0, w8
     f88:	ldur	x0, [x29, #-16]
     f8c:	bl	1080 <dl_load@@Base+0x61c>
     f90:	ldp	x29, x30, [sp, #48]
     f94:	add	sp, sp, #0x40
     f98:	ret
     f9c:	sub	sp, sp, #0xd0
     fa0:	stp	x29, x30, [sp, #192]
     fa4:	add	x29, sp, #0xc0
     fa8:	adrp	x8, 12000 <dl_load@@Base+0x1159c>
     fac:	add	x8, x8, #0x118
     fb0:	adrp	x9, 12000 <dl_load@@Base+0x1159c>
     fb4:	add	x9, x9, #0x120
     fb8:	mov	w4, #0x1                   	// #1
     fbc:	sub	x5, x29, #0x38
     fc0:	sub	x10, x29, #0x58
     fc4:	stur	x0, [x29, #-8]
     fc8:	stur	x1, [x29, #-16]
     fcc:	stur	d0, [x29, #-24]
     fd0:	ldr	x11, [x8]
     fd4:	ldr	x11, [x11, #232]
     fd8:	ldr	x0, [x9]
     fdc:	ldur	x1, [x29, #-8]
     fe0:	ldr	x8, [x8]
     fe4:	ldr	x9, [x9]
     fe8:	ldur	x2, [x29, #-16]
     fec:	ldur	x12, [x29, #-16]
     ff0:	str	x0, [sp, #96]
     ff4:	mov	x0, x12
     ff8:	str	w4, [sp, #92]
     ffc:	str	x5, [sp, #80]
    1000:	str	x10, [sp, #72]
    1004:	str	x11, [sp, #64]
    1008:	str	x1, [sp, #56]
    100c:	str	x8, [sp, #48]
    1010:	str	x9, [sp, #40]
    1014:	str	x2, [sp, #32]
    1018:	bl	8c0 <strlen@plt>
    101c:	ldr	x8, [sp, #48]
    1020:	str	x0, [sp, #24]
    1024:	mov	x0, x8
    1028:	ldr	x1, [sp, #40]
    102c:	ldr	x2, [sp, #32]
    1030:	ldr	x3, [sp, #24]
    1034:	ldr	w4, [sp, #92]
    1038:	ldr	x5, [sp, #80]
    103c:	bl	10b8 <dl_load@@Base+0x654>
    1040:	ldur	d0, [x29, #-24]
    1044:	ldr	x8, [sp, #72]
    1048:	str	x0, [sp, #16]
    104c:	mov	x0, x8
    1050:	bl	1080 <dl_load@@Base+0x61c>
    1054:	ldr	x8, [sp, #96]
    1058:	str	x0, [sp, #8]
    105c:	mov	x0, x8
    1060:	ldr	x1, [sp, #56]
    1064:	ldr	x2, [sp, #16]
    1068:	ldr	x3, [sp, #8]
    106c:	ldr	x9, [sp, #64]
    1070:	blr	x9
    1074:	ldp	x29, x30, [sp, #192]
    1078:	add	sp, sp, #0xd0
    107c:	ret
    1080:	sub	sp, sp, #0x10
    1084:	mov	w8, #0x1                   	// #1
    1088:	str	d0, [sp, #8]
    108c:	str	x0, [sp]
    1090:	ldr	x9, [sp]
    1094:	str	w8, [x9]
    1098:	ldr	x9, [sp, #8]
    109c:	ldr	x10, [sp]
    10a0:	str	x9, [x10, #8]
    10a4:	ldr	x9, [sp]
    10a8:	str	wzr, [x9, #16]
    10ac:	ldr	x0, [sp]
    10b0:	add	sp, sp, #0x10
    10b4:	ret
    10b8:	sub	sp, sp, #0x40
    10bc:	stp	x29, x30, [sp, #48]
    10c0:	add	x29, sp, #0x30
    10c4:	mov	w6, #0x2                   	// #2
    10c8:	stur	x0, [x29, #-8]
    10cc:	stur	x1, [x29, #-16]
    10d0:	str	x2, [sp, #24]
    10d4:	str	x3, [sp, #16]
    10d8:	str	w4, [sp, #12]
    10dc:	str	x5, [sp]
    10e0:	ldur	x0, [x29, #-8]
    10e4:	ldur	x1, [x29, #-16]
    10e8:	ldr	x2, [sp, #24]
    10ec:	ldr	x3, [sp, #16]
    10f0:	ldr	w4, [sp, #12]
    10f4:	ldr	x5, [sp]
    10f8:	bl	1108 <dl_load@@Base+0x6a4>
    10fc:	ldp	x29, x30, [sp, #48]
    1100:	add	sp, sp, #0x40
    1104:	ret
    1108:	sub	sp, sp, #0x50
    110c:	stp	x29, x30, [sp, #64]
    1110:	add	x29, sp, #0x40
    1114:	mov	x8, xzr
    1118:	mov	x9, #0x20                  	// #32
    111c:	mov	w10, wzr
    1120:	stur	x0, [x29, #-8]
    1124:	stur	x1, [x29, #-16]
    1128:	stur	x2, [x29, #-24]
    112c:	str	x3, [sp, #32]
    1130:	str	w4, [sp, #28]
    1134:	str	x5, [sp, #16]
    1138:	str	w6, [sp, #12]
    113c:	str	x8, [sp]
    1140:	ldr	x0, [sp, #16]
    1144:	mov	w1, w10
    1148:	mov	x2, x9
    114c:	bl	920 <memset@plt>
    1150:	ldr	w10, [sp, #12]
    1154:	ldr	x8, [sp, #16]
    1158:	str	w10, [x8]
    115c:	ldr	x8, [sp, #32]
    1160:	ldr	x9, [sp, #16]
    1164:	str	x8, [x9, #16]
    1168:	ldr	w10, [sp, #28]
    116c:	cbz	w10, 11e8 <dl_load@@Base+0x784>
    1170:	ldur	x8, [x29, #-8]
    1174:	ldr	x8, [x8, #280]
    1178:	ldr	x9, [sp, #32]
    117c:	add	x0, x9, #0x1
    1180:	blr	x8
    1184:	str	x0, [sp]
    1188:	cbnz	x0, 11b4 <dl_load@@Base+0x750>
    118c:	ldur	x8, [x29, #-8]
    1190:	ldr	x8, [x8, #96]
    1194:	ldur	x0, [x29, #-16]
    1198:	ldr	x9, [sp, #32]
    119c:	add	x3, x9, #0x1
    11a0:	adrp	x1, 1000 <dl_load@@Base+0x59c>
    11a4:	add	x1, x1, #0x2e6
    11a8:	adrp	x2, 1000 <dl_load@@Base+0x59c>
    11ac:	add	x2, x2, #0x304
    11b0:	blr	x8
    11b4:	ldr	x0, [sp]
    11b8:	ldur	x1, [x29, #-24]
    11bc:	ldr	x2, [sp, #32]
    11c0:	bl	8b0 <memcpy@plt>
    11c4:	ldr	x8, [sp]
    11c8:	ldr	x9, [sp, #32]
    11cc:	add	x8, x8, x9
    11d0:	mov	w10, #0x0                   	// #0
    11d4:	strb	w10, [x8]
    11d8:	ldr	x8, [sp]
    11dc:	ldr	x9, [sp, #16]
    11e0:	str	x8, [x9, #8]
    11e4:	b	11f4 <dl_load@@Base+0x790>
    11e8:	ldur	x8, [x29, #-24]
    11ec:	ldr	x9, [sp, #16]
    11f0:	str	x8, [x9, #8]
    11f4:	ldr	x0, [sp, #16]
    11f8:	ldp	x29, x30, [sp, #64]
    11fc:	add	sp, sp, #0x50
    1200:	ret

Disassembly of section .fini:

0000000000001204 <.fini>:
    1204:	stp	x29, x30, [sp, #-16]!
    1208:	mov	x29, sp
    120c:	ldp	x29, x30, [sp], #16
    1210:	ret
