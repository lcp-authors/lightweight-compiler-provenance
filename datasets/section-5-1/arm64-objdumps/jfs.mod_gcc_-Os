
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//jfs.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xfe8>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	mov	x29, sp
       8:	ldr	x0, [x0, #80]
       c:	bl	0 <grub_free>
      10:	adrp	x0, 0 <grub_mod_init-0xfe8>
      14:	ldr	x0, [x0]
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_dl_unref>
      20:	mov	w0, #0x0                   	// #0
      24:	ldp	x29, x30, [sp], #16
      28:	ret
      2c:	nop
	...
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	stp	x19, x20, [sp, #16]
      44:	mov	x20, x0
      48:	mov	x0, #0x4c0                 	// #1216
      4c:	bl	0 <grub_malloc>
      50:	cbnz	x0, 5c <grub_mod_init-0xf8c>
      54:	mov	x19, #0x0                   	// #0
      58:	b	140 <grub_mod_init-0xea8>
      5c:	mov	x19, x0
      60:	mov	x4, x0
      64:	mov	x3, #0xa8                  	// #168
      68:	mov	x0, x20
      6c:	mov	x2, #0x0                   	// #0
      70:	mov	x1, #0x40                  	// #64
      74:	bl	0 <grub_disk_read>
      78:	cbnz	w0, a4 <grub_mod_init-0xf44>
      7c:	adrp	x0, 0 <grub_mod_init-0xfe8>
      80:	mov	x2, #0x4                   	// #4
      84:	ldr	x1, [x0]
      88:	mov	x0, x19
      8c:	bl	0 <grub_strncmp>
      90:	cbz	w0, d4 <grub_mod_init-0xf14>
      94:	adrp	x0, 0 <grub_mod_init-0xfe8>
      98:	ldr	x1, [x0]
      9c:	mov	w0, #0x9                   	// #9
      a0:	bl	0 <grub_error>
      a4:	mov	x0, x19
      a8:	bl	0 <grub_free>
      ac:	adrp	x0, 0 <grub_mod_init-0xfe8>
      b0:	ldr	x0, [x0]
      b4:	ldr	w0, [x0]
      b8:	cmp	w0, #0xb
      bc:	b.ne	54 <grub_mod_init-0xf94>  // b.any
      c0:	adrp	x0, 0 <grub_mod_init-0xfe8>
      c4:	ldr	x1, [x0]
      c8:	mov	w0, #0x9                   	// #9
      cc:	bl	0 <grub_error>
      d0:	b	54 <grub_mod_init-0xf94>
      d4:	ldr	w2, [x19, #16]
      d8:	cbz	w2, 94 <grub_mod_init-0xf54>
      dc:	ldrh	w1, [x19, #20]
      e0:	mov	w0, #0x1                   	// #1
      e4:	lsl	w0, w0, w1
      e8:	cmp	w2, w0
      ec:	b.ne	94 <grub_mod_init-0xf54>  // b.any
      f0:	cmp	w1, #0x8
      f4:	b.ls	94 <grub_mod_init-0xf54>  // b.plast
      f8:	add	x0, x19, #0x400
      fc:	str	x20, [x19, #168]
     100:	add	x4, x19, #0xb0
     104:	mov	x3, #0x200                 	// #512
     108:	mov	x2, #0x0                   	// #0
     10c:	mov	x1, #0x68                  	// #104
     110:	stur	xzr, [x0, #180]
     114:	mov	x0, x20
     118:	bl	0 <grub_disk_read>
     11c:	cbnz	w0, a4 <grub_mod_init-0xf44>
     120:	ldr	w0, [x19, #36]
     124:	mov	w1, #0xd                   	// #13
     128:	mov	w2, #0xb                   	// #11
     12c:	tst	x0, #0x200000
     130:	ubfx	x0, x0, #30, #1
     134:	csel	w1, w1, w2, eq  // eq = none
     138:	str	w0, [x19, #1200]
     13c:	str	w1, [x19, #1212]
     140:	mov	x0, x19
     144:	ldp	x19, x20, [sp, #16]
     148:	ldp	x29, x30, [sp], #32
     14c:	ret
	...
     168:	sub	sp, sp, #0x80
     16c:	stp	x29, x30, [sp, #80]
     170:	add	x29, sp, #0x50
     174:	stp	x19, x20, [sp, #96]
     178:	mov	x20, x1
     17c:	ldr	x19, [x0]
     180:	adrp	x0, 0 <grub_mod_init-0xfe8>
     184:	str	x21, [sp, #112]
     188:	ldr	x21, [x0]
     18c:	ldr	x0, [x21]
     190:	bl	0 <grub_dl_ref>
     194:	mov	x0, x19
     198:	bl	38 <grub_mod_init-0xfb0>
     19c:	mov	x19, x0
     1a0:	cbz	x0, 248 <grub_mod_init-0xda0>
     1a4:	ldrb	w7, [x0, #142]
     1a8:	ldrb	w6, [x0, #141]
     1ac:	ldrb	w5, [x0, #140]
     1b0:	ldrb	w4, [x0, #139]
     1b4:	ldrb	w3, [x0, #138]
     1b8:	ldrb	w2, [x0, #137]
     1bc:	ldrb	w1, [x0, #136]
     1c0:	ldrb	w0, [x0, #151]
     1c4:	str	w0, [sp, #64]
     1c8:	ldrb	w0, [x19, #150]
     1cc:	str	w0, [sp, #56]
     1d0:	ldrb	w0, [x19, #149]
     1d4:	str	w0, [sp, #48]
     1d8:	ldrb	w0, [x19, #148]
     1dc:	str	w0, [sp, #40]
     1e0:	ldrb	w0, [x19, #147]
     1e4:	str	w0, [sp, #32]
     1e8:	ldrb	w0, [x19, #146]
     1ec:	str	w0, [sp, #24]
     1f0:	ldrb	w0, [x19, #145]
     1f4:	str	w0, [sp, #16]
     1f8:	ldrb	w0, [x19, #144]
     1fc:	str	w0, [sp, #8]
     200:	ldrb	w0, [x19, #143]
     204:	str	w0, [sp]
     208:	adrp	x0, 0 <grub_mod_init-0xfe8>
     20c:	ldr	x0, [x0]
     210:	bl	0 <grub_xasprintf>
     214:	str	x0, [x20]
     218:	ldr	x0, [x21]
     21c:	bl	0 <grub_dl_unref>
     220:	mov	x0, x19
     224:	bl	0 <grub_free>
     228:	adrp	x0, 0 <grub_mod_init-0xfe8>
     22c:	ldp	x29, x30, [sp, #80]
     230:	ldr	x0, [x0]
     234:	ldp	x19, x20, [sp, #96]
     238:	ldr	w0, [x0]
     23c:	ldr	x21, [sp, #112]
     240:	add	sp, sp, #0x80
     244:	ret
     248:	str	xzr, [x20]
     24c:	b	218 <grub_mod_init-0xdd0>
	...
     268:	stp	x29, x30, [sp, #-32]!
     26c:	mov	x29, sp
     270:	ldr	x0, [x0]
     274:	stp	x19, x20, [sp, #16]
     278:	mov	x20, x1
     27c:	bl	38 <grub_mod_init-0xfb0>
     280:	mov	x19, x0
     284:	cbz	x0, 2f8 <grub_mod_init-0xcf0>
     288:	ldrb	w0, [x0, #152]
     28c:	cmp	w0, #0x1f
     290:	b.hi	2ec <grub_mod_init-0xcfc>  // b.pmore
     294:	add	x2, x19, #0x6f
     298:	add	x3, x19, #0x64
     29c:	add	x0, x19, #0x65
     2a0:	cmp	x2, x3
     2a4:	b.ne	2d8 <grub_mod_init-0xd10>  // b.any
     2a8:	sub	x2, x2, x0
     2ac:	add	x1, x2, #0x1
     2b0:	bl	0 <grub_strndup>
     2b4:	str	x0, [x20]
     2b8:	mov	x0, x19
     2bc:	bl	0 <grub_free>
     2c0:	adrp	x0, 0 <grub_mod_init-0xfe8>
     2c4:	ldp	x19, x20, [sp, #16]
     2c8:	ldr	x0, [x0]
     2cc:	ldp	x29, x30, [sp], #32
     2d0:	ldr	w0, [x0]
     2d4:	ret
     2d8:	ldrb	w1, [x2]
     2dc:	cmp	w1, #0x20
     2e0:	b.ne	2a8 <grub_mod_init-0xd40>  // b.any
     2e4:	sub	x2, x2, #0x1
     2e8:	b	2a0 <grub_mod_init-0xd48>
     2ec:	add	x0, x19, #0x98
     2f0:	mov	x1, #0x10                  	// #16
     2f4:	b	2b0 <grub_mod_init-0xd38>
     2f8:	str	xzr, [x20]
     2fc:	b	2b8 <grub_mod_init-0xd30>
	...
     308:	stp	x29, x30, [sp, #-64]!
     30c:	mov	x29, sp
     310:	ldrh	w4, [x0, #18]
     314:	stp	x23, x24, [sp, #48]
     318:	mov	x23, x2
     31c:	sub	w4, w4, #0x2
     320:	mov	x24, x1
     324:	stp	x19, x20, [sp, #16]
     328:	stp	x21, x22, [sp, #32]
     32c:	mov	x21, x3
     330:	mov	w22, #0xffffffff            	// #-1
     334:	mov	x3, x1
     338:	mov	w1, #0x0                   	// #0
     33c:	cmp	w4, w1
     340:	b.gt	354 <grub_mod_init-0xc94>
     344:	cmn	w22, #0x1
     348:	b.ne	3bc <grub_mod_init-0xc2c>  // b.any
     34c:	mov	x19, #0xffffffffffffffff    	// #-1
     350:	b	390 <grub_mod_init-0xc58>
     354:	ldrb	w2, [x0, #16]
     358:	ldr	w5, [x3, #4]
     35c:	mov	w19, w5
     360:	tbz	w2, #1, 3a8 <grub_mod_init-0xc40>
     364:	cmp	x21, x19
     368:	b.cc	3b0 <grub_mod_init-0xc38>  // b.lo, b.ul, b.last
     36c:	ldrb	w2, [x3, #10]
     370:	ldrh	w6, [x3, #8]
     374:	add	w2, w6, w2, lsl #16
     378:	add	w2, w2, w5
     37c:	cmp	x2, x21
     380:	b.ls	3b0 <grub_mod_init-0xc38>  // b.plast
     384:	ldr	w0, [x3, #12]
     388:	sub	x19, x21, x19
     38c:	add	x19, x19, x0
     390:	mov	x0, x19
     394:	ldp	x19, x20, [sp, #16]
     398:	ldp	x21, x22, [sp, #32]
     39c:	ldp	x23, x24, [sp, #48]
     3a0:	ldp	x29, x30, [sp], #64
     3a4:	ret
     3a8:	cmp	x21, x19
     3ac:	csel	w22, w22, w1, cc  // cc = lo, ul, last
     3b0:	add	w1, w1, #0x1
     3b4:	add	x3, x3, #0x10
     3b8:	b	33c <grub_mod_init-0xcac>
     3bc:	mov	x0, #0x1000                	// #4096
     3c0:	bl	0 <grub_zalloc>
     3c4:	mov	x20, x0
     3c8:	cbz	x0, 34c <grub_mod_init-0xc9c>
     3cc:	add	x22, x24, w22, sxtw #4
     3d0:	ldrh	w0, [x23, #20]
     3d4:	mov	x4, x20
     3d8:	mov	x3, #0x1000                	// #4096
     3dc:	sub	w0, w0, #0x9
     3e0:	mov	x2, #0x0                   	// #0
     3e4:	ldr	w1, [x22, #12]
     3e8:	lsl	x1, x1, x0
     3ec:	ldr	x0, [x23, #168]
     3f0:	bl	0 <grub_disk_read>
     3f4:	cbnz	w0, 41c <grub_mod_init-0xbcc>
     3f8:	mov	x3, x21
     3fc:	mov	x2, x23
     400:	add	x1, x20, #0x20
     404:	mov	x0, x20
     408:	bl	308 <grub_mod_init-0xce0>
     40c:	mov	x19, x0
     410:	mov	x0, x20
     414:	bl	0 <grub_free>
     418:	b	390 <grub_mod_init-0xc58>
     41c:	mov	x19, #0xffffffffffffffff    	// #-1
     420:	b	410 <grub_mod_init-0xbd8>
     424:	sub	sp, sp, #0x430
     428:	lsr	w3, w1, #12
     42c:	add	w3, w3, #0x1
     430:	and	x3, x3, #0x1fffff
     434:	stp	x29, x30, [sp]
     438:	mov	x29, sp
     43c:	stp	x19, x20, [sp, #16]
     440:	mov	x19, x0
     444:	mov	w20, w1
     448:	add	x1, x0, #0x1b0
     44c:	stp	x21, x22, [sp, #32]
     450:	mov	x22, x2
     454:	mov	x2, x0
     458:	add	x0, x0, #0x190
     45c:	bl	308 <grub_mod_init-0xce0>
     460:	mov	x1, x0
     464:	adrp	x0, 0 <grub_mod_init-0xfe8>
     468:	ldr	x21, [x0]
     46c:	ldr	w0, [x21]
     470:	cbnz	w0, 4dc <grub_mod_init-0xb0c>
     474:	ldrh	w5, [x19, #20]
     478:	add	x4, sp, #0x30
     47c:	ldr	x0, [x19, #168]
     480:	sub	w5, w5, #0x9
     484:	mov	x3, #0x400                 	// #1024
     488:	mov	x2, #0xc00                 	// #3072
     48c:	lsl	x1, x1, x5
     490:	bl	0 <grub_disk_read>
     494:	cbz	w0, 4a0 <grub_mod_init-0xb48>
     498:	ldr	w0, [x21]
     49c:	b	4dc <grub_mod_init-0xb0c>
     4a0:	ubfx	x0, x20, #5, #7
     4a4:	add	x1, sp, #0x34
     4a8:	and	x20, x20, #0x1f
     4ac:	mov	x4, x22
     4b0:	lsl	x0, x0, #3
     4b4:	mov	x3, #0x200                 	// #512
     4b8:	mov	x2, #0x0                   	// #0
     4bc:	ldr	w1, [x1, x0]
     4c0:	ldrh	w0, [x19, #20]
     4c4:	sub	w0, w0, #0x9
     4c8:	lsl	x1, x1, x0
     4cc:	add	x1, x20, x1
     4d0:	ldr	x0, [x19, #168]
     4d4:	bl	0 <grub_disk_read>
     4d8:	cbnz	w0, 498 <grub_mod_init-0xb50>
     4dc:	ldp	x29, x30, [sp]
     4e0:	ldp	x19, x20, [sp, #16]
     4e4:	ldp	x21, x22, [sp, #32]
     4e8:	add	sp, sp, #0x430
     4ec:	ret
	...
     4f8:	stp	x29, x30, [sp, #-48]!
     4fc:	mov	x29, sp
     500:	stp	x21, x22, [sp, #32]
     504:	mov	x21, x0
     508:	ldr	w0, [x1, #52]
     50c:	stp	x19, x20, [sp, #16]
     510:	and	w0, w0, #0xf000
     514:	cmp	w0, #0x4, lsl #12
     518:	b.eq	544 <grub_mod_init-0xaa4>  // b.none
     51c:	adrp	x0, 0 <grub_mod_init-0xfe8>
     520:	ldr	x1, [x0]
     524:	mov	w0, #0x4                   	// #4
     528:	bl	0 <grub_error>
     52c:	mov	x19, #0x0                   	// #0
     530:	mov	x0, x19
     534:	ldp	x19, x20, [sp, #16]
     538:	ldp	x21, x22, [sp, #32]
     53c:	ldp	x29, x30, [sp], #48
     540:	ret
     544:	mov	x20, x1
     548:	mov	x0, #0x43d                 	// #1085
     54c:	bl	0 <grub_zalloc>
     550:	mov	x19, x0
     554:	cbz	x0, 530 <grub_mod_init-0xab8>
     558:	ldrb	w0, [x20, #240]
     55c:	add	x22, x20, #0xe0
     560:	stur	x21, [x19, #12]
     564:	stur	x20, [x19, #20]
     568:	tbz	w0, #1, 584 <grub_mod_init-0xa64>
     56c:	add	x0, x20, #0xf8
     570:	stp	x0, x22, [x19, #32]
     574:	ldrb	w0, [x20, #241]
     578:	str	x22, [x19, #48]
     57c:	str	w0, [x19, #28]
     580:	b	530 <grub_mod_init-0xab8>
     584:	ldr	w0, [x21, #16]
     588:	bl	0 <grub_malloc>
     58c:	stur	x0, [x19, #4]
     590:	cbnz	x0, 5a0 <grub_mod_init-0xa48>
     594:	mov	x0, x19
     598:	bl	0 <grub_free>
     59c:	b	52c <grub_mod_init-0xabc>
     5a0:	ldrb	w0, [x20, #248]
     5a4:	add	x0, x22, x0, lsl #5
     5a8:	ldr	w1, [x0, #4]
     5ac:	ldrh	w0, [x21, #20]
     5b0:	sub	w0, w0, #0x9
     5b4:	lsl	x1, x1, x0
     5b8:	ldr	w3, [x21, #16]
     5bc:	mov	x2, #0x0                   	// #0
     5c0:	ldur	x4, [x19, #4]
     5c4:	ldr	x0, [x21, #168]
     5c8:	bl	0 <grub_disk_read>
     5cc:	cbz	w0, 5dc <grub_mod_init-0xa0c>
     5d0:	ldur	x0, [x19, #4]
     5d4:	bl	0 <grub_free>
     5d8:	b	594 <grub_mod_init-0xa54>
     5dc:	ldur	x2, [x19, #4]
     5e0:	ldrh	w1, [x21, #20]
     5e4:	ldrb	w0, [x2, #21]
     5e8:	sub	w3, w1, #0x9
     5ec:	ubfiz	x0, x0, #5, #8
     5f0:	ldrb	w4, [x2, x0]
     5f4:	add	x4, x2, x4, lsl #5
     5f8:	ldr	w1, [x4, #4]
     5fc:	lsl	w1, w1, w3
     600:	ldrb	w3, [x2, #16]
     604:	tbz	w3, #1, 5b8 <grub_mod_init-0xa30>
     608:	add	x0, x2, x0
     60c:	stp	x0, x2, [x19, #32]
     610:	ldrb	w0, [x2, #17]
     614:	str	x2, [x19, #48]
     618:	b	57c <grub_mod_init-0xa6c>
     61c:	nop
	...
     628:	cbz	x0, 654 <grub_mod_init-0x994>
     62c:	stp	x29, x30, [sp, #-32]!
     630:	mov	x29, sp
     634:	str	x19, [sp, #16]
     638:	mov	x19, x0
     63c:	ldur	x0, [x0, #4]
     640:	bl	0 <grub_free>
     644:	mov	x0, x19
     648:	ldr	x19, [sp, #16]
     64c:	ldp	x29, x30, [sp], #32
     650:	b	0 <grub_free>
     654:	ret
     658:	stp	x29, x30, [sp, #-128]!
     65c:	mov	x29, sp
     660:	stp	x21, x22, [sp, #32]
     664:	mov	x22, x4
     668:	ldr	w21, [x0, #16]
     66c:	stp	x19, x20, [sp, #16]
     670:	mov	x19, x0
     674:	ldrh	w20, [x0, #20]
     678:	add	x21, x21, x3
     67c:	stp	x25, x26, [sp, #64]
     680:	add	x25, x0, #0x3b0
     684:	add	x26, x0, #0x390
     688:	sub	x0, x4, #0x1
     68c:	add	x21, x21, x0
     690:	stp	x23, x24, [sp, #48]
     694:	mov	x23, x3
     698:	lsr	x21, x21, x20
     69c:	mov	x24, x5
     6a0:	stp	x27, x28, [sp, #80]
     6a4:	sub	x28, x21, #0x1
     6a8:	add	w0, w4, w3
     6ac:	adrp	x27, 0 <grub_mod_init-0xfe8>
     6b0:	lsr	x20, x3, x20
     6b4:	stp	x1, x2, [sp, #96]
     6b8:	str	w0, [sp, #116]
     6bc:	cmp	x20, x21
     6c0:	b.cc	6cc <grub_mod_init-0x91c>  // b.lo, b.ul, b.last
     6c4:	mov	x0, x22
     6c8:	b	700 <grub_mod_init-0x8e8>
     6cc:	ldr	w7, [x19, #16]
     6d0:	mov	x3, x20
     6d4:	mov	x2, x19
     6d8:	mov	x1, x25
     6dc:	mov	x0, x26
     6e0:	str	w7, [sp, #120]
     6e4:	bl	308 <grub_mod_init-0xce0>
     6e8:	mov	x10, x0
     6ec:	ldr	x5, [x27]
     6f0:	ldr	w7, [sp, #120]
     6f4:	ldr	w0, [x5]
     6f8:	cbz	w0, 71c <grub_mod_init-0x8cc>
     6fc:	mov	x0, #0xffffffffffffffff    	// #-1
     700:	ldp	x19, x20, [sp, #16]
     704:	ldp	x21, x22, [sp, #32]
     708:	ldp	x23, x24, [sp, #48]
     70c:	ldp	x25, x26, [sp, #64]
     710:	ldp	x27, x28, [sp, #80]
     714:	ldp	x29, x30, [sp], #128
     718:	ret
     71c:	cmp	x28, x20
     720:	b.ne	7b8 <grub_mod_init-0x830>  // b.any
     724:	ldr	w0, [x19, #16]
     728:	ldr	w1, [sp, #116]
     72c:	sub	w6, w0, #0x1
     730:	ands	w6, w1, w6
     734:	csel	w6, w6, w0, ne  // ne = any
     738:	ldrh	w3, [x19, #20]
     73c:	lsr	x0, x23, x3
     740:	cmp	x0, x20
     744:	b.ne	7c0 <grub_mod_init-0x828>  // b.any
     748:	sub	w2, w7, #0x1
     74c:	and	w0, w2, w23
     750:	and	w2, w2, w23
     754:	sub	w6, w6, w0
     758:	ldr	x0, [x19, #168]
     75c:	mov	x4, x24
     760:	ldr	x1, [sp, #96]
     764:	str	x2, [sp, #120]
     768:	str	x1, [x0, #48]
     76c:	ldr	x1, [sp, #104]
     770:	str	x1, [x0, #56]
     774:	sub	w1, w3, #0x9
     778:	mov	w3, w6
     77c:	lsl	x1, x10, x1
     780:	bl	0 <grub_disk_read>
     784:	ldr	x0, [x19, #168]
     788:	str	xzr, [x0, #48]
     78c:	adrp	x0, 0 <grub_mod_init-0xfe8>
     790:	add	x0, x0, #0x0
     794:	ldr	x5, [x0]
     798:	ldr	w0, [x5]
     79c:	cbnz	w0, 6fc <grub_mod_init-0x8ec>
     7a0:	ldr	x2, [sp, #120]
     7a4:	add	x20, x20, #0x1
     7a8:	ldr	w0, [x19, #16]
     7ac:	sub	x2, x0, x2
     7b0:	add	x24, x24, x2
     7b4:	b	6bc <grub_mod_init-0x92c>
     7b8:	mov	w6, w7
     7bc:	b	738 <grub_mod_init-0x8b0>
     7c0:	mov	x2, #0x0                   	// #0
     7c4:	b	758 <grub_mod_init-0x890>
	...
     7d0:	mov	x5, x1
     7d4:	mov	x4, x2
     7d8:	ldp	x1, x2, [x0, #88]
     7dc:	ldr	x3, [x0, #24]
     7e0:	ldr	x0, [x0, #80]
     7e4:	b	658 <grub_mod_init-0x990>
     7e8:	sub	sp, sp, #0x220
     7ec:	stp	x29, x30, [sp]
     7f0:	mov	x29, sp
     7f4:	str	x19, [sp, #16]
     7f8:	mov	x19, x0
     7fc:	ldr	w1, [x19]
     800:	ldr	w0, [x19, #28]
     804:	cmp	w1, w0
     808:	b.ne	888 <grub_mod_init-0x760>  // b.any
     80c:	ldur	x0, [x19, #20]
     810:	ldrb	w0, [x0, #240]
     814:	tbnz	w0, #1, a98 <grub_mod_init-0x550>
     818:	ldur	x4, [x19, #4]
     81c:	ldr	x5, [x4]
     820:	cbz	x5, a98 <grub_mod_init-0x550>
     824:	ldur	x0, [x19, #12]
     828:	mov	x2, #0x0                   	// #0
     82c:	ldrh	w1, [x0, #20]
     830:	ldr	w3, [x0, #16]
     834:	ldr	x0, [x0, #168]
     838:	sub	w1, w1, #0x9
     83c:	lsl	x1, x5, x1
     840:	bl	0 <grub_disk_read>
     844:	cbz	w0, 864 <grub_mod_init-0x784>
     848:	adrp	x0, 0 <grub_mod_init-0xfe8>
     84c:	ldr	x0, [x0]
     850:	ldr	w0, [x0]
     854:	ldp	x29, x30, [sp]
     858:	ldr	x19, [sp, #16]
     85c:	add	sp, sp, #0x220
     860:	ret
     864:	ldur	x0, [x19, #4]
     868:	ldrb	w1, [x0, #21]
     86c:	str	x0, [x19, #48]
     870:	ubfiz	x1, x1, #5, #8
     874:	add	x1, x0, x1
     878:	stp	x1, x0, [x19, #32]
     87c:	ldrb	w0, [x0, #17]
     880:	str	wzr, [x19]
     884:	str	w0, [x19, #28]
     888:	ldr	w4, [x19]
     88c:	ldr	x0, [x19, #32]
     890:	ldrb	w1, [x0, w4, sxtw]
     894:	add	w4, w4, #0x1
     898:	ldr	x0, [x19, #40]
     89c:	add	x1, x0, x1, lsl #5
     8a0:	ldrb	w0, [x1, #5]
     8a4:	cbnz	w0, 8b0 <grub_mod_init-0x738>
     8a8:	str	w4, [x19]
     8ac:	b	7fc <grub_mod_init-0x7ec>
     8b0:	ldur	x2, [x19, #12]
     8b4:	add	x3, sp, #0x20
     8b8:	add	x8, x1, #0x6
     8bc:	mov	x5, #0x0                   	// #0
     8c0:	ldr	w6, [x2, #1212]
     8c4:	cmp	w6, w0
     8c8:	csel	w2, w6, w0, le
     8cc:	sxtw	x7, w2
     8d0:	cmp	x7, x5
     8d4:	b.ne	978 <grub_mod_init-0x670>  // b.any
     8d8:	add	x5, x19, #0x400
     8dc:	ldr	w7, [x1]
     8e0:	stur	w7, [x5, #57]
     8e4:	ldrb	w1, [x1, #4]
     8e8:	cmp	w1, #0xff
     8ec:	b.eq	940 <grub_mod_init-0x6a8>  // b.none
     8f0:	ldr	x7, [x19, #48]
     8f4:	sub	w0, w0, w6
     8f8:	mov	w9, #0xf                   	// #15
     8fc:	cmp	w0, #0xf
     900:	sbfiz	x1, x1, #5, #32
     904:	csel	w8, w0, w9, le
     908:	add	x6, x7, x1
     90c:	add	x11, x3, w2, sxtw #1
     910:	add	x6, x6, #0x2
     914:	sxtw	x10, w8
     918:	mov	x5, #0x0                   	// #0
     91c:	cmp	x10, x5
     920:	b.ne	988 <grub_mod_init-0x660>  // b.any
     924:	ldrb	w1, [x7, x1]
     928:	add	w2, w2, w8
     92c:	sub	w0, w0, #0xf
     930:	cmp	w1, #0xff
     934:	b.eq	940 <grub_mod_init-0x6a8>  // b.none
     938:	cmp	w0, #0x0
     93c:	b.gt	8fc <grub_mod_init-0x6ec>
     940:	mov	x0, x19
     944:	sxtw	x6, w2
     948:	mov	w7, #0xffff2800            	// #-55296
     94c:	mov	w2, #0x0                   	// #0
     950:	mov	w8, #0xffff2400            	// #-56320
     954:	mov	w9, #0x3f                  	// #63
     958:	mov	w10, #0x2400                	// #9216
     95c:	str	w4, [x0], #56
     960:	sub	x6, x6, #0x1
     964:	cmn	x6, #0x1
     968:	b.ne	998 <grub_mod_init-0x650>  // b.any
     96c:	strb	wzr, [x0]
     970:	mov	w0, #0x0                   	// #0
     974:	b	854 <grub_mod_init-0x794>
     978:	ldrh	w9, [x8, x5, lsl #1]
     97c:	strh	w9, [x3, x5, lsl #1]
     980:	add	x5, x5, #0x1
     984:	b	8d0 <grub_mod_init-0x718>
     988:	ldrh	w12, [x6, x5, lsl #1]
     98c:	strh	w12, [x11, x5, lsl #1]
     990:	add	x5, x5, #0x1
     994:	b	91c <grub_mod_init-0x6cc>
     998:	mov	x4, x3
     99c:	ldrh	w1, [x4], #2
     9a0:	cbz	w2, a08 <grub_mod_init-0x5e0>
     9a4:	add	w5, w1, w8
     9a8:	cmp	w5, #0x3ff
     9ac:	b.hi	9fc <grub_mod_init-0x5ec>  // b.pmore
     9b0:	add	w2, w2, w7
     9b4:	add	x0, x0, #0x4
     9b8:	add	w1, w1, w2, lsl #10
     9bc:	add	w1, w1, w10
     9c0:	lsr	w2, w1, #18
     9c4:	orr	w2, w2, #0xfffffff0
     9c8:	sturb	w2, [x0, #-4]
     9cc:	ubfx	x2, x1, #12, #6
     9d0:	orr	w2, w2, #0xffffff80
     9d4:	sturb	w2, [x0, #-3]
     9d8:	ubfx	x2, x1, #6, #6
     9dc:	and	w1, w1, #0x3f
     9e0:	orr	w2, w2, #0xffffff80
     9e4:	orr	w1, w1, #0xffffff80
     9e8:	sturb	w2, [x0, #-2]
     9ec:	sturb	w1, [x0, #-1]
     9f0:	mov	w2, #0x0                   	// #0
     9f4:	mov	x3, x4
     9f8:	b	960 <grub_mod_init-0x688>
     9fc:	mov	x4, x3
     a00:	strb	w9, [x0], #1
     a04:	b	9f0 <grub_mod_init-0x5f8>
     a08:	cmp	w1, #0x7f
     a0c:	b.hi	a18 <grub_mod_init-0x5d0>  // b.pmore
     a10:	strb	w1, [x0], #1
     a14:	b	9f4 <grub_mod_init-0x5f4>
     a18:	cmp	w1, #0x7ff
     a1c:	b.hi	a44 <grub_mod_init-0x5a4>  // b.pmore
     a20:	mov	x3, x0
     a24:	lsr	w5, w1, #6
     a28:	orr	w5, w5, #0xffffffc0
     a2c:	and	w1, w1, #0x3f
     a30:	orr	w1, w1, #0xffffff80
     a34:	strb	w5, [x3], #2
     a38:	strb	w1, [x0, #1]
     a3c:	mov	x0, x3
     a40:	b	9f4 <grub_mod_init-0x5f4>
     a44:	add	w3, w1, w7
     a48:	cmp	w3, #0x3ff
     a4c:	b.ls	a90 <grub_mod_init-0x558>  // b.plast
     a50:	add	w3, w1, w8
     a54:	cmp	w3, #0x3ff
     a58:	b.hi	a64 <grub_mod_init-0x584>  // b.pmore
     a5c:	strb	w9, [x0], #1
     a60:	b	9f4 <grub_mod_init-0x5f4>
     a64:	lsr	w3, w1, #12
     a68:	add	x0, x0, #0x3
     a6c:	orr	w3, w3, #0xffffffe0
     a70:	sturb	w3, [x0, #-3]
     a74:	ubfx	x3, x1, #6, #6
     a78:	and	w1, w1, #0x3f
     a7c:	orr	w3, w3, #0xffffff80
     a80:	orr	w1, w1, #0xffffff80
     a84:	sturb	w3, [x0, #-2]
     a88:	sturb	w1, [x0, #-1]
     a8c:	b	9f4 <grub_mod_init-0x5f4>
     a90:	mov	w2, w1
     a94:	b	9f4 <grub_mod_init-0x5f4>
     a98:	mov	w0, #0xb                   	// #11
     a9c:	b	854 <grub_mod_init-0x794>
	...
     aa8:	stp	x29, x30, [sp, #-128]!
     aac:	mov	x29, sp
     ab0:	stp	x21, x22, [sp, #32]
     ab4:	add	x22, x0, #0x2b0
     ab8:	stp	x19, x20, [sp, #16]
     abc:	mov	x19, x0
     ac0:	stp	x23, x24, [sp, #48]
     ac4:	mov	x23, x1
     ac8:	mov	w1, w2
     acc:	mov	x2, x22
     ad0:	stp	x25, x26, [sp, #64]
     ad4:	stp	x27, x28, [sp, #80]
     ad8:	bl	424 <grub_mod_init-0xbc4>
     adc:	cbz	w0, b0c <grub_mod_init-0x4dc>
     ae0:	adrp	x0, 0 <grub_mod_init-0xfe8>
     ae4:	ldr	x0, [x0]
     ae8:	ldr	w20, [x0]
     aec:	mov	w0, w20
     af0:	ldp	x19, x20, [sp, #16]
     af4:	ldp	x21, x22, [sp, #32]
     af8:	ldp	x23, x24, [sp, #48]
     afc:	ldp	x25, x26, [sp, #64]
     b00:	ldp	x27, x28, [sp, #80]
     b04:	ldp	x29, x30, [sp], #128
     b08:	ret
     b0c:	mov	x21, x23
     b10:	mov	w20, w0
     b14:	adrp	x24, 0 <grub_mod_init-0xfe8>
     b18:	add	x0, x19, #0x3b0
     b1c:	str	x0, [sp, #120]
     b20:	mov	x27, x21
     b24:	ldrb	w0, [x27]
     b28:	cmp	w0, #0x2f
     b2c:	b.eq	b8c <grub_mod_init-0x45c>  // b.none
     b30:	cbz	w0, aec <grub_mod_init-0x4fc>
     b34:	mov	x21, x27
     b38:	ldrb	w1, [x21, #1]!
     b3c:	cmp	w1, #0x2f
     b40:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     b44:	b.ne	b38 <grub_mod_init-0x4b0>  // b.any
     b48:	cmp	w0, #0x2e
     b4c:	b.ne	b94 <grub_mod_init-0x454>  // b.any
     b50:	add	x0, x27, #0x1
     b54:	cmp	x21, x0
     b58:	b.eq	b20 <grub_mod_init-0x4c8>  // b.none
     b5c:	ldrb	w0, [x27, #1]
     b60:	cmp	w0, #0x2e
     b64:	b.ne	b94 <grub_mod_init-0x454>  // b.any
     b68:	add	x0, x27, #0x2
     b6c:	cmp	x21, x0
     b70:	b.ne	b94 <grub_mod_init-0x454>  // b.any
     b74:	ldr	w1, [x19, #932]
     b78:	mov	x2, x22
     b7c:	mov	x0, x19
     b80:	bl	424 <grub_mod_init-0xbc4>
     b84:	cbnz	w0, ae0 <grub_mod_init-0x508>
     b88:	b	b20 <grub_mod_init-0x4c8>
     b8c:	add	x27, x27, #0x1
     b90:	b	b24 <grub_mod_init-0x4c4>
     b94:	mov	x1, x22
     b98:	mov	x0, x19
     b9c:	bl	4f8 <grub_mod_init-0xaf0>
     ba0:	mov	x25, x0
     ba4:	cbz	x0, ae0 <grub_mod_init-0x508>
     ba8:	sub	x26, x21, x27
     bac:	add	x28, x0, #0x38
     bb0:	sub	x0, x26, #0x1
     bb4:	str	x0, [sp, #104]
     bb8:	add	x0, x25, x26
     bbc:	str	x0, [sp, #112]
     bc0:	mov	x0, x25
     bc4:	bl	7e8 <grub_mod_init-0x800>
     bc8:	cmp	w0, #0xb
     bcc:	b.ne	c04 <grub_mod_init-0x3e4>  // b.any
     bd0:	mov	x0, x25
     bd4:	bl	628 <grub_mod_init-0x9c0>
     bd8:	adrp	x0, 0 <grub_mod_init-0xfe8>
     bdc:	mov	x2, x23
     be0:	ldp	x19, x20, [sp, #16]
     be4:	ldr	x1, [x0]
     be8:	mov	w0, #0x5                   	// #5
     bec:	ldp	x21, x22, [sp, #32]
     bf0:	ldp	x23, x24, [sp, #48]
     bf4:	ldp	x25, x26, [sp, #64]
     bf8:	ldp	x27, x28, [sp, #80]
     bfc:	ldp	x29, x30, [sp], #128
     c00:	b	0 <grub_error>
     c04:	ldr	w0, [x19, #1200]
     c08:	cbz	w0, d14 <grub_mod_init-0x2d4>
     c0c:	cbz	x26, d0c <grub_mod_init-0x2dc>
     c10:	mov	x6, #0x0                   	// #0
     c14:	ldrb	w3, [x27, x6]
     c18:	ldrb	w0, [x28, x6]
     c1c:	sub	w8, w3, #0x41
     c20:	sub	w7, w0, #0x41
     c24:	cbz	w3, c64 <grub_mod_init-0x384>
     c28:	mov	w9, w3
     c2c:	cbz	w0, c64 <grub_mod_init-0x384>
     c30:	ldr	x1, [sp, #104]
     c34:	cmp	x6, x1
     c38:	b.eq	c64 <grub_mod_init-0x384>  // b.none
     c3c:	cmp	w8, #0x19
     c40:	b.hi	c48 <grub_mod_init-0x3a0>  // b.pmore
     c44:	add	w9, w3, #0x20
     c48:	mov	w10, w0
     c4c:	cmp	w7, #0x19
     c50:	b.hi	c58 <grub_mod_init-0x390>  // b.pmore
     c54:	add	w10, w0, #0x20
     c58:	add	x6, x6, #0x1
     c5c:	cmp	w10, w9
     c60:	b.eq	c14 <grub_mod_init-0x3d4>  // b.none
     c64:	cmp	w8, #0x19
     c68:	b.hi	c70 <grub_mod_init-0x378>  // b.pmore
     c6c:	add	w3, w3, #0x20
     c70:	cmp	w7, #0x19
     c74:	b.hi	c7c <grub_mod_init-0x36c>  // b.pmore
     c78:	add	w0, w0, #0x20
     c7c:	sub	w3, w3, w0
     c80:	cmp	w3, #0x0
     c84:	cset	w0, eq  // eq = none
     c88:	cbz	w0, bc0 <grub_mod_init-0x428>
     c8c:	ldr	x0, [sp, #112]
     c90:	ldrb	w0, [x0, #56]
     c94:	cbnz	w0, bc0 <grub_mod_init-0x428>
     c98:	add	x0, x25, #0x400
     c9c:	ldr	w28, [x19, #696]
     ca0:	ldur	w27, [x0, #57]
     ca4:	mov	x0, x25
     ca8:	bl	628 <grub_mod_init-0x9c0>
     cac:	mov	x2, x22
     cb0:	mov	w1, w27
     cb4:	mov	x0, x19
     cb8:	bl	424 <grub_mod_init-0xbc4>
     cbc:	cbnz	w0, b20 <grub_mod_init-0x4c8>
     cc0:	ldr	w0, [x19, #740]
     cc4:	and	w0, w0, #0xf000
     cc8:	cmp	w0, #0xa, lsl #12
     ccc:	b.ne	b20 <grub_mod_init-0x4c8>  // b.any
     cd0:	ldr	w0, [x19, #1208]
     cd4:	ldr	x25, [x19, #712]
     cd8:	add	w0, w0, #0x1
     cdc:	str	w0, [x19, #1208]
     ce0:	cmp	w0, #0x8
     ce4:	b.le	d2c <grub_mod_init-0x2bc>
     ce8:	adrp	x0, 0 <grub_mod_init-0xfe8>
     cec:	ldr	x1, [x0]
     cf0:	mov	w0, #0x19                  	// #25
     cf4:	bl	0 <grub_error>
     cf8:	ldr	x0, [x24]
     cfc:	ldr	w0, [x0]
     d00:	cbz	w0, b20 <grub_mod_init-0x4c8>
     d04:	mov	w20, w0
     d08:	b	aec <grub_mod_init-0x4fc>
     d0c:	mov	w3, #0x0                   	// #0
     d10:	b	c80 <grub_mod_init-0x368>
     d14:	mov	x2, x26
     d18:	mov	x1, x28
     d1c:	mov	x0, x27
     d20:	bl	0 <grub_strncmp>
     d24:	cmp	w0, #0x0
     d28:	b	c84 <grub_mod_init-0x364>
     d2c:	add	x0, x25, #0x1
     d30:	bl	0 <grub_malloc>
     d34:	mov	x27, x0
     d38:	cbz	x0, cf8 <grub_mod_init-0x2f0>
     d3c:	cmp	x25, #0x100
     d40:	b.hi	d74 <grub_mod_init-0x274>  // b.pmore
     d44:	ldr	x1, [sp, #120]
     d48:	mov	x2, x25
     d4c:	bl	0 <grub_memmove>
     d50:	strb	wzr, [x27, x25]
     d54:	mov	x1, x27
     d58:	ldrb	w0, [x27]
     d5c:	cmp	w0, #0x2f
     d60:	mov	w0, #0x2                   	// #2
     d64:	csel	w2, w28, w0, ne  // ne = any
     d68:	mov	x0, x19
     d6c:	bl	aa8 <grub_mod_init-0x540>
     d70:	b	d94 <grub_mod_init-0x254>
     d74:	mov	x5, x0
     d78:	mov	x4, x25
     d7c:	mov	x0, x19
     d80:	mov	x3, #0x0                   	// #0
     d84:	mov	x2, #0x0                   	// #0
     d88:	mov	x1, #0x0                   	// #0
     d8c:	bl	658 <grub_mod_init-0x990>
     d90:	tbz	x0, #63, d50 <grub_mod_init-0x298>
     d94:	mov	x0, x27
     d98:	bl	0 <grub_free>
     d9c:	b	cf8 <grub_mod_init-0x2f0>
	...
     db8:	stp	x29, x30, [sp, #-64]!
     dbc:	mov	x29, sp
     dc0:	stp	x19, x20, [sp, #16]
     dc4:	mov	x20, x0
     dc8:	adrp	x0, 0 <grub_mod_init-0xfe8>
     dcc:	str	x23, [sp, #48]
     dd0:	ldr	x23, [x0]
     dd4:	stp	x21, x22, [sp, #32]
     dd8:	mov	x21, x1
     ddc:	ldr	x0, [x23]
     de0:	bl	0 <grub_dl_ref>
     de4:	ldr	x0, [x20, #8]
     de8:	ldr	x0, [x0]
     dec:	bl	38 <grub_mod_init-0xfb0>
     df0:	mov	x19, x0
     df4:	adrp	x1, 0 <grub_mod_init-0xfe8>
     df8:	ldr	x22, [x1]
     dfc:	cbz	x0, e34 <grub_mod_init-0x1b4>
     e00:	mov	x1, x21
     e04:	mov	w2, #0x2                   	// #2
     e08:	bl	aa8 <grub_mod_init-0x540>
     e0c:	ldr	w0, [x22]
     e10:	cbnz	w0, e34 <grub_mod_init-0x1b4>
     e14:	ldr	w1, [x19, #740]
     e18:	and	w1, w1, #0xf000
     e1c:	cmp	w1, #0x8, lsl #12
     e20:	b.eq	e4c <grub_mod_init-0x19c>  // b.none
     e24:	adrp	x0, 0 <grub_mod_init-0xfe8>
     e28:	ldr	x1, [x0]
     e2c:	mov	w0, #0x4                   	// #4
     e30:	bl	0 <grub_error>
     e34:	ldr	x0, [x23]
     e38:	bl	0 <grub_dl_unref>
     e3c:	mov	x0, x19
     e40:	bl	0 <grub_free>
     e44:	ldr	w0, [x22]
     e48:	b	e58 <grub_mod_init-0x190>
     e4c:	ldr	x1, [x19, #712]
     e50:	str	x1, [x20, #64]
     e54:	str	x19, [x20, #80]
     e58:	ldp	x19, x20, [sp, #16]
     e5c:	ldp	x21, x22, [sp, #32]
     e60:	ldr	x23, [sp, #48]
     e64:	ldp	x29, x30, [sp], #64
     e68:	ret
     e6c:	nop
	...
     e88:	sub	sp, sp, #0x260
     e8c:	stp	x29, x30, [sp]
     e90:	mov	x29, sp
     e94:	stp	x19, x20, [sp, #16]
     e98:	mov	x20, x0
     e9c:	adrp	x0, 0 <grub_mod_init-0xfe8>
     ea0:	stp	x23, x24, [sp, #48]
     ea4:	mov	x19, x1
     ea8:	ldr	x23, [x0]
     eac:	stp	x21, x22, [sp, #32]
     eb0:	mov	x21, x2
     eb4:	mov	x22, x3
     eb8:	ldr	x0, [x23]
     ebc:	str	x25, [sp, #64]
     ec0:	bl	0 <grub_dl_ref>
     ec4:	ldr	x0, [x20]
     ec8:	bl	38 <grub_mod_init-0xfb0>
     ecc:	mov	x20, x0
     ed0:	cbnz	x0, f18 <grub_mod_init-0xd0>
     ed4:	mov	x19, #0x0                   	// #0
     ed8:	mov	x0, x19
     edc:	bl	628 <grub_mod_init-0x9c0>
     ee0:	mov	x0, x20
     ee4:	bl	0 <grub_free>
     ee8:	ldr	x0, [x23]
     eec:	bl	0 <grub_dl_unref>
     ef0:	adrp	x0, 0 <grub_mod_init-0xfe8>
     ef4:	ldp	x29, x30, [sp]
     ef8:	ldr	x0, [x0]
     efc:	ldp	x19, x20, [sp, #16]
     f00:	ldr	w0, [x0]
     f04:	ldp	x21, x22, [sp, #32]
     f08:	ldp	x23, x24, [sp, #48]
     f0c:	ldr	x25, [sp, #64]
     f10:	add	sp, sp, #0x260
     f14:	ret
     f18:	mov	x1, x19
     f1c:	mov	w2, #0x2                   	// #2
     f20:	bl	aa8 <grub_mod_init-0x540>
     f24:	cbnz	w0, ed4 <grub_mod_init-0x114>
     f28:	add	x1, x20, #0x2b0
     f2c:	mov	x0, x20
     f30:	bl	4f8 <grub_mod_init-0xaf0>
     f34:	mov	x19, x0
     f38:	cbz	x0, ed4 <grub_mod_init-0x114>
     f3c:	add	x24, x0, #0x400
     f40:	add	x25, x0, #0x38
     f44:	mov	x0, x19
     f48:	bl	7e8 <grub_mod_init-0x800>
     f4c:	cmp	w0, #0xb
     f50:	b.ne	f70 <grub_mod_init-0x78>  // b.any
     f54:	adrp	x0, 0 <grub_mod_init-0xfe8>
     f58:	ldr	x0, [x0]
     f5c:	ldr	w1, [x0]
     f60:	cmp	w1, #0xb
     f64:	b.ne	ed8 <grub_mod_init-0x110>  // b.any
     f68:	str	wzr, [x0]
     f6c:	b	ed8 <grub_mod_init-0x110>
     f70:	mov	x2, #0x10                  	// #16
     f74:	mov	w1, #0x0                   	// #0
     f78:	add	x0, sp, #0x50
     f7c:	bl	0 <grub_memset>
     f80:	ldur	w1, [x24, #57]
     f84:	add	x2, sp, #0x60
     f88:	mov	x0, x20
     f8c:	bl	424 <grub_mod_init-0xbc4>
     f90:	cbnz	w0, ed8 <grub_mod_init-0x110>
     f94:	ldr	w0, [sp, #148]
     f98:	mov	x2, x22
     f9c:	ldrb	w1, [sp, #80]
     fa0:	and	w0, w0, #0xf000
     fa4:	cmp	w0, #0x4, lsl #12
     fa8:	and	w1, w1, #0xfffffffc
     fac:	cset	w0, eq  // eq = none
     fb0:	orr	w0, w0, #0x2
     fb4:	orr	w0, w0, w1
     fb8:	strb	w0, [sp, #80]
     fbc:	ldr	w0, [sp, #168]
     fc0:	add	x1, sp, #0x50
     fc4:	str	w0, [sp, #84]
     fc8:	mov	x0, x25
     fcc:	blr	x21
     fd0:	cbz	w0, f44 <grub_mod_init-0xa4>
     fd4:	b	ed8 <grub_mod_init-0x110>
	...

0000000000000fe8 <grub_mod_init>:
     fe8:	stp	x29, x30, [sp, #-32]!
     fec:	mov	x29, sp
     ff0:	str	x19, [sp, #16]
     ff4:	mov	x19, x0
     ff8:	adrp	x0, 0 <grub_mod_init-0xfe8>
     ffc:	ldr	x1, [x0]
    1000:	adrp	x0, 0 <grub_mod_init-0xfe8>
    1004:	ldr	x0, [x0]
    1008:	bl	0 <grub_list_push>
    100c:	adrp	x0, 0 <grub_mod_init-0xfe8>
    1010:	ldr	x0, [x0]
    1014:	str	x19, [x0]
    1018:	ldr	x19, [sp, #16]
    101c:	ldp	x29, x30, [sp], #32
    1020:	ret
    1024:	nop
	...

0000000000001040 <grub_mod_fini>:
    1040:	adrp	x0, 0 <grub_mod_init-0xfe8>
    1044:	ldr	x0, [x0]
    1048:	b	0 <grub_list_remove>
    104c:	nop
	...
