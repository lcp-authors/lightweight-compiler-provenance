
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM1364.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000658 <.init>:
 658:	stp	x29, x30, [sp, #-16]!
 65c:	mov	x29, sp
 660:	bl	6f0 <__assert_fail@plt+0x10>
 664:	ldp	x29, x30, [sp], #16
 668:	ret

Disassembly of section .plt:

0000000000000670 <__cxa_finalize@plt-0x20>:
 670:	stp	x16, x30, [sp, #-16]!
 674:	adrp	x16, 33000 <gconv@@Base+0x327b0>
 678:	ldr	x17, [x16, #4088]
 67c:	add	x16, x16, #0xff8
 680:	br	x17
 684:	nop
 688:	nop
 68c:	nop

0000000000000690 <__cxa_finalize@plt>:
 690:	adrp	x16, 34000 <__cxa_finalize@GLIBC_2.17>
 694:	ldr	x17, [x16]
 698:	add	x16, x16, #0x0
 69c:	br	x17

00000000000006a0 <__stack_chk_fail@plt>:
 6a0:	adrp	x16, 34000 <__cxa_finalize@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #8]
 6a8:	add	x16, x16, #0x8
 6ac:	br	x17

00000000000006b0 <__gmon_start__@plt>:
 6b0:	adrp	x16, 34000 <__cxa_finalize@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #16]
 6b8:	add	x16, x16, #0x10
 6bc:	br	x17

00000000000006c0 <strcmp@plt>:
 6c0:	adrp	x16, 34000 <__cxa_finalize@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #24]
 6c8:	add	x16, x16, #0x18
 6cc:	br	x17

00000000000006d0 <_dl_mcount_wrapper_check@plt>:
 6d0:	adrp	x16, 34000 <__cxa_finalize@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #32]
 6d8:	add	x16, x16, #0x20
 6dc:	br	x17

00000000000006e0 <__assert_fail@plt>:
 6e0:	adrp	x16, 34000 <__cxa_finalize@GLIBC_2.17>
 6e4:	ldr	x17, [x16, #40]
 6e8:	add	x16, x16, #0x28
 6ec:	br	x17

Disassembly of section .text:

00000000000006f0 <gconv_init@@Base-0xd8>:
     6f0:	adrp	x0, 33000 <gconv@@Base+0x327b0>
     6f4:	ldr	x0, [x0, #4048]
     6f8:	cbz	x0, 700 <__assert_fail@plt+0x20>
     6fc:	b	6b0 <__gmon_start__@plt>
     700:	ret
     704:	nop
     708:	adrp	x0, 34000 <gconv@@Base+0x337b0>
     70c:	add	x0, x0, #0x38
     710:	adrp	x1, 34000 <gconv@@Base+0x337b0>
     714:	add	x1, x1, #0x38
     718:	cmp	x1, x0
     71c:	b.eq	734 <__assert_fail@plt+0x54>  // b.none
     720:	adrp	x1, 33000 <gconv@@Base+0x327b0>
     724:	ldr	x1, [x1, #4024]
     728:	cbz	x1, 734 <__assert_fail@plt+0x54>
     72c:	mov	x16, x1
     730:	br	x16
     734:	ret
     738:	adrp	x0, 34000 <gconv@@Base+0x337b0>
     73c:	add	x0, x0, #0x38
     740:	adrp	x1, 34000 <gconv@@Base+0x337b0>
     744:	add	x1, x1, #0x38
     748:	sub	x1, x1, x0
     74c:	lsr	x2, x1, #63
     750:	add	x1, x2, x1, asr #3
     754:	cmp	xzr, x1, asr #1
     758:	asr	x1, x1, #1
     75c:	b.eq	774 <__assert_fail@plt+0x94>  // b.none
     760:	adrp	x2, 33000 <gconv@@Base+0x327b0>
     764:	ldr	x2, [x2, #4064]
     768:	cbz	x2, 774 <__assert_fail@plt+0x94>
     76c:	mov	x16, x2
     770:	br	x16
     774:	ret
     778:	stp	x29, x30, [sp, #-32]!
     77c:	mov	x29, sp
     780:	str	x19, [sp, #16]
     784:	adrp	x19, 34000 <gconv@@Base+0x337b0>
     788:	ldrb	w0, [x19, #56]
     78c:	cbnz	w0, 7b4 <__assert_fail@plt+0xd4>
     790:	adrp	x0, 33000 <gconv@@Base+0x327b0>
     794:	ldr	x0, [x0, #4032]
     798:	cbz	x0, 7a8 <__assert_fail@plt+0xc8>
     79c:	adrp	x0, 34000 <gconv@@Base+0x337b0>
     7a0:	ldr	x0, [x0, #48]
     7a4:	bl	690 <__cxa_finalize@plt>
     7a8:	bl	708 <__assert_fail@plt+0x28>
     7ac:	mov	w0, #0x1                   	// #1
     7b0:	strb	w0, [x19, #56]
     7b4:	ldr	x19, [sp, #16]
     7b8:	ldp	x29, x30, [sp], #32
     7bc:	ret
     7c0:	b	738 <__assert_fail@plt+0x58>
     7c4:	nop

00000000000007c8 <gconv_init@@Base>:
     7c8:	stp	x29, x30, [sp, #-32]!
     7cc:	mov	x29, sp
     7d0:	stp	x19, x20, [sp, #16]
     7d4:	mov	x19, x0
     7d8:	adrp	x20, 1000 <gconv@@Base+0x7b0>
     7dc:	ldr	x0, [x0, #24]
     7e0:	add	x20, x20, #0xa78
     7e4:	mov	x1, x20
     7e8:	bl	6c0 <strcmp@plt>
     7ec:	cbnz	w0, 81c <gconv_init@@Base+0x54>
     7f0:	mov	x1, #0x1                   	// #1
     7f4:	mov	x0, #0x400000004           	// #17179869188
     7f8:	movk	x1, #0x2, lsl #32
     7fc:	stp	x1, x0, [x19, #72]
     800:	str	xzr, [x19, #96]
     804:	mov	w1, #0x1                   	// #1
     808:	mov	w0, #0x0                   	// #0
     80c:	str	w1, [x19, #88]
     810:	ldp	x19, x20, [sp, #16]
     814:	ldp	x29, x30, [sp], #32
     818:	ret
     81c:	ldr	x0, [x19, #32]
     820:	mov	x1, x20
     824:	bl	6c0 <strcmp@plt>
     828:	cbnz	w0, 848 <gconv_init@@Base+0x80>
     82c:	mov	x1, #0x1                   	// #1
     830:	mov	x0, #0xffffffffffffffff    	// #-1
     834:	mov	x2, #0x400000004           	// #17179869188
     838:	movk	x1, #0x2, lsl #32
     83c:	stp	x2, x1, [x19, #72]
     840:	str	x0, [x19, #96]
     844:	b	804 <gconv_init@@Base+0x3c>
     848:	mov	w0, #0x1                   	// #1
     84c:	b	810 <gconv_init@@Base+0x48>

0000000000000850 <gconv@@Base>:
     850:	stp	x29, x30, [sp, #-224]!
     854:	mov	x14, x0
     858:	mov	x29, sp
     85c:	stp	x19, x20, [sp, #16]
     860:	mov	x20, x1
     864:	adrp	x1, 33000 <gconv@@Base+0x327b0>
     868:	mov	x19, x3
     86c:	add	x3, x0, #0x68
     870:	ldr	x1, [x1, #4056]
     874:	stp	x21, x22, [sp, #32]
     878:	ldr	w0, [x20, #16]
     87c:	ldr	x8, [x1]
     880:	str	x8, [sp, #216]
     884:	mov	x8, #0x0                   	// #0
     888:	add	x1, x20, #0x30
     88c:	stp	x23, x24, [sp, #48]
     890:	mov	x22, #0x0                   	// #0
     894:	mov	x23, x5
     898:	stp	x25, x26, [sp, #64]
     89c:	mov	w24, w7
     8a0:	stp	x27, x28, [sp, #80]
     8a4:	mov	x28, x2
     8a8:	and	w2, w0, #0x1
     8ac:	str	x4, [sp, #104]
     8b0:	stp	x3, x1, [sp, #144]
     8b4:	tbnz	w0, #0, 8d4 <gconv@@Base+0x84>
     8b8:	ldr	x1, [x14, #104]
     8bc:	ldr	x22, [x14, #144]
     8c0:	cbz	x1, 8d4 <gconv@@Base+0x84>
     8c4:	adrp	x1, 33000 <gconv@@Base+0x327b0>
     8c8:	ldr	x1, [x1, #4040]
     8cc:	ldr	x1, [x1]
     8d0:	eor	x22, x22, x1
     8d4:	cbnz	w6, 1244 <gconv@@Base+0x9f4>
     8d8:	ldr	x3, [sp, #104]
     8dc:	add	x1, sp, #0xc0
     8e0:	ldr	x9, [x20, #32]
     8e4:	cmp	x3, #0x0
     8e8:	csel	x2, x20, x3, eq  // eq = none
     8ec:	cmp	x23, #0x0
     8f0:	csel	x1, x1, xzr, ne  // ne = any
     8f4:	ldr	w11, [x9]
     8f8:	ldr	x26, [x2]
     8fc:	str	x1, [sp, #176]
     900:	str	xzr, [sp, #192]
     904:	ldr	x27, [x28]
     908:	ldr	x21, [x20, #8]
     90c:	cbnz	w24, d78 <gconv@@Base+0x528>
     910:	mov	x18, x28
     914:	adrp	x10, 1000 <gconv@@Base+0x7b0>
     918:	mov	x28, x27
     91c:	add	x1, x10, #0xc48
     920:	mov	x25, x9
     924:	mov	w27, w11
     928:	add	x13, x1, #0x88
     92c:	str	x23, [sp, #160]
     930:	str	x1, [sp, #184]
     934:	add	x1, sp, #0xc8
     938:	str	x1, [sp, #168]
     93c:	nop
     940:	ldr	x1, [x14, #96]
     944:	and	w12, w27, #0xfffffff8
     948:	cmp	x19, x28
     94c:	cbz	x1, a54 <gconv@@Base+0x204>
     950:	b.eq	12bc <gconv@@Base+0xa6c>  // b.none
     954:	add	x5, x28, #0x4
     958:	cmp	x19, x5
     95c:	b.cc	1014 <gconv@@Base+0x7c4>  // b.lo, b.ul, b.last
     960:	cmp	x21, x26
     964:	b.ls	1028 <gconv@@Base+0x7d8>  // b.plast
     968:	ldur	w3, [x5, #-4]
     96c:	adrp	x17, 2000 <gconv@@Base+0x17b0>
     970:	mov	w7, #0xfffe                	// #65534
     974:	and	w8, w0, #0x2
     978:	mov	w6, w12
     97c:	add	x17, x17, #0xe8
     980:	mov	x23, x26
     984:	sub	x16, x5, #0x4
     988:	cmp	w3, w7
     98c:	mov	w30, #0x1c00                	// #7168
     990:	mov	w11, #0xe                   	// #14
     994:	mov	w9, #0xf                   	// #15
     998:	b.hi	a34 <gconv@@Base+0x1e4>  // b.pmore
     99c:	cmp	w3, #0x9f
     9a0:	mov	x1, x13
     9a4:	mov	w2, #0xa2                  	// #162
     9a8:	b.hi	9b8 <gconv@@Base+0x168>  // b.pmore
     9ac:	b	c2c <gconv@@Base+0x3dc>
     9b0:	ldrh	w2, [x0, #10]
     9b4:	mov	x1, x0
     9b8:	cmp	w3, w2
     9bc:	add	x0, x1, #0x8
     9c0:	b.hi	9b0 <gconv@@Base+0x160>  // b.pmore
     9c4:	ldrh	w0, [x0]
     9c8:	cmp	w3, w0
     9cc:	b.cc	ba4 <gconv@@Base+0x354>  // b.lo, b.ul, b.last
     9d0:	ldr	w1, [x1, #12]
     9d4:	add	w1, w3, w1
     9d8:	add	x0, x10, #0xc48
     9dc:	add	x0, x0, #0x3b8
     9e0:	ldrb	w0, [x0, w1, uxtw]
     9e4:	cmp	w0, #0x0
     9e8:	ccmp	w3, #0x0, #0x4, eq  // eq = none
     9ec:	b.ne	ba4 <gconv@@Base+0x354>  // b.any
     9f0:	cmp	w6, #0x40
     9f4:	add	x1, x23, #0x1
     9f8:	b.eq	d58 <gconv@@Base+0x508>  // b.none
     9fc:	strb	w0, [x23]
     a00:	mov	x23, x1
     a04:	cmp	x19, x5
     a08:	b.eq	c24 <gconv@@Base+0x3d4>  // b.none
     a0c:	add	x0, x5, #0x4
     a10:	cmp	x19, x0
     a14:	b.cc	c34 <gconv@@Base+0x3e4>  // b.lo, b.ul, b.last
     a18:	cmp	x21, x23
     a1c:	b.ls	d50 <gconv@@Base+0x500>  // b.plast
     a20:	mov	x5, x0
     a24:	sub	x16, x5, #0x4
     a28:	ldur	w3, [x5, #-4]
     a2c:	cmp	w3, w7
     a30:	b.ls	99c <gconv@@Base+0x14c>  // b.plast
     a34:	cmp	w30, w3, lsr #7
     a38:	b.eq	a04 <gconv@@Base+0x1b4>  // b.none
     a3c:	ldr	x0, [sp, #176]
     a40:	cbz	x0, a48 <gconv@@Base+0x1f8>
     a44:	cbnz	w8, ec8 <gconv@@Base+0x678>
     a48:	mov	x5, x16
     a4c:	mov	w8, #0x6                   	// #6
     a50:	b	c38 <gconv@@Base+0x3e8>
     a54:	b.eq	1220 <gconv@@Base+0x9d0>  // b.none
     a58:	add	x5, x26, #0x4
     a5c:	cmp	x21, x5
     a60:	b.cc	1200 <gconv@@Base+0x9b0>  // b.lo, b.ul, b.last
     a64:	and	w30, w0, #0x2
     a68:	adrp	x7, 14000 <gconv@@Base+0x137b0>
     a6c:	ldr	x0, [sp, #184]
     a70:	mov	w6, w12
     a74:	add	x7, x7, #0x100
     a78:	mov	x2, x28
     a7c:	mov	x23, x26
     a80:	add	x8, x0, #0x1b8
     a84:	mov	w16, #0x4040                	// #16448
     a88:	mov	w17, #0xffff                	// #65535
     a8c:	ldrb	w0, [x2]
     a90:	cmp	w0, #0xe
     a94:	b.eq	fd0 <gconv@@Base+0x780>  // b.none
     a98:	cmp	w0, #0xf
     a9c:	b.eq	fe4 <gconv@@Base+0x794>  // b.none
     aa0:	cbnz	w6, b28 <gconv@@Base+0x2d8>
     aa4:	mov	w1, w0
     aa8:	cmp	w0, #0x0
     aac:	ldrh	w0, [x8, x1, lsl #1]
     ab0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     ab4:	b.eq	11e4 <gconv@@Base+0x994>  // b.none
     ab8:	str	w0, [x23]
     abc:	mov	x23, x5
     ac0:	add	x2, x2, #0x1
     ac4:	cmp	x2, x19
     ac8:	b.eq	122c <gconv@@Base+0x9dc>  // b.none
     acc:	add	x5, x23, #0x4
     ad0:	cmp	x21, x5
     ad4:	b.cs	a8c <gconv@@Base+0x23c>  // b.hs, b.nlast
     ad8:	mov	w8, #0x5                   	// #5
     adc:	ldr	x0, [sp, #104]
     ae0:	str	x2, [x18]
     ae4:	str	w6, [x25]
     ae8:	cbz	x0, c48 <gconv@@Base+0x3f8>
     aec:	str	x23, [x0]
     af0:	adrp	x0, 33000 <gconv@@Base+0x327b0>
     af4:	ldr	x0, [x0, #4056]
     af8:	ldr	x1, [sp, #216]
     afc:	ldr	x0, [x0]
     b00:	eor	x0, x1, x0
     b04:	cbnz	x0, 1a14 <gconv@@Base+0x11c4>
     b08:	mov	w0, w8
     b0c:	ldp	x19, x20, [sp, #16]
     b10:	ldp	x21, x22, [sp, #32]
     b14:	ldp	x23, x24, [sp, #48]
     b18:	ldp	x25, x26, [sp, #64]
     b1c:	ldp	x27, x28, [sp, #80]
     b20:	ldp	x29, x30, [sp], #224
     b24:	ret
     b28:	cmp	w6, #0x40
     b2c:	b.ne	1a18 <gconv@@Base+0x11c8>  // b.any
     b30:	add	x1, x2, #0x1
     b34:	cmp	x19, x1
     b38:	b.ls	123c <gconv@@Base+0x9ec>  // b.plast
     b3c:	ldrb	w1, [x2, #1]
     b40:	add	w0, w1, w0, lsl #8
     b44:	add	x1, x10, #0xc48
     b48:	cmp	w0, w16
     b4c:	b.ls	1234 <gconv@@Base+0x9e4>  // b.plast
     b50:	mov	w3, #0x419d                	// #16797
     b54:	b	b5c <gconv@@Base+0x30c>
     b58:	ldrh	w3, [x1, #10]
     b5c:	add	x1, x1, #0x8
     b60:	cmp	w0, w3
     b64:	b.hi	b58 <gconv@@Base+0x308>  // b.pmore
     b68:	ldrh	w3, [x1]
     b6c:	cmp	w3, w17
     b70:	b.eq	103c <gconv@@Base+0x7ec>  // b.none
     b74:	cmp	w0, w3
     b78:	b.cc	103c <gconv@@Base+0x7ec>  // b.lo, b.ul, b.last
     b7c:	ldr	w1, [x1, #4]
     b80:	cmp	w0, #0x0
     b84:	add	w0, w0, w1
     b88:	ldrh	w0, [x7, x0, lsl #1]
     b8c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     b90:	b.eq	103c <gconv@@Base+0x7ec>  // b.none
     b94:	add	x2, x2, #0x2
     b98:	str	w0, [x23]
     b9c:	mov	x23, x5
     ba0:	b	ac4 <gconv@@Base+0x274>
     ba4:	add	x1, x10, #0xc48
     ba8:	cmp	w3, #0x1c2
     bac:	add	x1, x1, #0x130
     bb0:	mov	w2, #0x2dd                 	// #733
     bb4:	b.hi	bc4 <gconv@@Base+0x374>  // b.pmore
     bb8:	b	1214 <gconv@@Base+0x9c4>
     bbc:	ldrh	w2, [x0, #10]
     bc0:	mov	x1, x0
     bc4:	cmp	w3, w2
     bc8:	add	x0, x1, #0x8
     bcc:	b.hi	bbc <gconv@@Base+0x36c>  // b.pmore
     bd0:	ldrh	w1, [x1, #8]
     bd4:	cmp	w3, w1
     bd8:	b.cc	11c8 <gconv@@Base+0x978>  // b.lo, b.ul, b.last
     bdc:	ldr	w0, [x0, #4]
     be0:	add	w0, w3, w0
     be4:	lsl	x0, x0, #1
     be8:	add	x2, x0, x17
     bec:	ldrb	w0, [x0, x17]
     bf0:	cmp	w0, #0x0
     bf4:	ccmp	w3, #0x0, #0x4, eq  // eq = none
     bf8:	b.ne	11c8 <gconv@@Base+0x978>  // b.any
     bfc:	cbz	w6, ebc <gconv@@Base+0x66c>
     c00:	add	x1, x23, #0x2
     c04:	cmp	x21, x1
     c08:	b.cc	12b0 <gconv@@Base+0xa60>  // b.lo, b.ul, b.last
     c0c:	strb	w0, [x23]
     c10:	cmp	x19, x5
     c14:	ldrb	w0, [x2, #1]
     c18:	strb	w0, [x23, #1]
     c1c:	mov	x23, x1
     c20:	b.ne	a0c <gconv@@Base+0x1bc>  // b.any
     c24:	mov	w8, #0x4                   	// #4
     c28:	b	c38 <gconv@@Base+0x3e8>
     c2c:	mov	w1, w3
     c30:	b	9d8 <gconv@@Base+0x188>
     c34:	mov	w8, #0x7                   	// #7
     c38:	ldr	x0, [sp, #104]
     c3c:	str	x5, [x18]
     c40:	str	w6, [x25]
     c44:	cbnz	x0, aec <gconv@@Base+0x29c>
     c48:	ldp	w1, w0, [x20, #16]
     c4c:	add	w0, w0, #0x1
     c50:	str	w0, [x20, #20]
     c54:	tbnz	w1, #0, ff0 <gconv@@Base+0x7a0>
     c58:	stp	x14, x13, [sp, #112]
     c5c:	cmp	x26, x23
     c60:	str	w12, [sp, #140]
     c64:	b.cs	ce4 <gconv@@Base+0x494>  // b.hs, b.nlast
     c68:	ldr	x1, [x20]
     c6c:	mov	x0, x22
     c70:	str	x18, [sp, #128]
     c74:	str	w8, [sp, #136]
     c78:	str	x1, [sp, #200]
     c7c:	bl	6d0 <_dl_mcount_wrapper_check@plt>
     c80:	ldp	x0, x1, [sp, #144]
     c84:	mov	w7, w24
     c88:	ldp	x5, x2, [sp, #160]
     c8c:	mov	x3, x23
     c90:	mov	w6, #0x0                   	// #0
     c94:	mov	x4, #0x0                   	// #0
     c98:	blr	x22
     c9c:	cmp	w0, #0x4
     ca0:	ldr	w8, [sp, #136]
     ca4:	adrp	x10, 1000 <gconv@@Base+0x7b0>
     ca8:	ldp	x14, x13, [sp, #112]
     cac:	ldr	x18, [sp, #128]
     cb0:	b.eq	cdc <gconv@@Base+0x48c>  // b.none
     cb4:	ldr	x5, [sp, #200]
     cb8:	ldr	w12, [sp, #140]
     cbc:	cmp	x5, x23
     cc0:	b.ne	edc <gconv@@Base+0x68c>  // b.any
     cc4:	cbnz	w0, 19b4 <gconv@@Base+0x1164>
     cc8:	ldr	w0, [x20, #16]
     ccc:	ldr	w27, [x25]
     cd0:	ldr	x28, [x18]
     cd4:	ldr	x26, [x20]
     cd8:	b	940 <gconv@@Base+0xf0>
     cdc:	cmp	w8, #0x5
     ce0:	b.eq	cc8 <gconv@@Base+0x478>  // b.none
     ce4:	mov	x28, x18
     ce8:	cmp	w24, #0x0
     cec:	ccmp	w8, #0x7, #0x0, ne  // ne = any
     cf0:	b.ne	af0 <gconv@@Base+0x2a0>  // b.any
     cf4:	ldr	x0, [x28]
     cf8:	sub	x1, x19, x0
     cfc:	cmp	x1, #0x3
     d00:	b.gt	1968 <gconv@@Base+0x1118>
     d04:	ldr	x2, [x20, #32]
     d08:	cmp	x0, x19
     d0c:	add	x0, x0, #0x1
     d10:	add	x3, x2, #0x4
     d14:	b.cs	1960 <gconv@@Base+0x1110>  // b.hs, b.nlast
     d18:	str	x0, [x28]
     d1c:	cmp	x19, x0
     d20:	add	x0, x0, #0x1
     d24:	ldurb	w4, [x0, #-2]
     d28:	strb	w4, [x3], #1
     d2c:	b.ne	d18 <gconv@@Base+0x4c8>  // b.any
     d30:	ldr	w0, [x2]
     d34:	and	w0, w0, #0xfffffff8
     d38:	orr	w0, w0, w1
     d3c:	str	w0, [x2]
     d40:	b	af0 <gconv@@Base+0x2a0>
     d44:	mov	x5, x16
     d48:	mov	x23, x1
     d4c:	mov	w6, #0x0                   	// #0
     d50:	mov	w8, #0x5                   	// #5
     d54:	b	c38 <gconv@@Base+0x3e8>
     d58:	strb	w9, [x23]
     d5c:	cmp	x21, x1
     d60:	b.ls	d44 <gconv@@Base+0x4f4>  // b.plast
     d64:	add	x2, x23, #0x2
     d68:	mov	w6, #0x0                   	// #0
     d6c:	mov	x23, x1
     d70:	mov	x1, x2
     d74:	b	9fc <gconv@@Base+0x1ac>
     d78:	ands	w1, w11, #0x7
     d7c:	b.eq	910 <gconv@@Base+0xc0>  // b.none
     d80:	cbnz	x3, 1878 <gconv@@Base+0x1028>
     d84:	ldr	x2, [x14, #96]
     d88:	and	w6, w11, #0xfffffff8
     d8c:	mov	w5, w1
     d90:	cbz	x2, 1068 <gconv@@Base+0x818>
     d94:	cmp	w5, #0x4
     d98:	b.hi	19a4 <gconv@@Base+0x1154>  // b.pmore
     d9c:	mov	w1, w5
     da0:	cbz	w5, 153c <gconv@@Base+0xcec>
     da4:	add	x4, sp, #0xd0
     da8:	add	x10, x9, #0x3
     dac:	mov	x2, #0x1                   	// #1
     db0:	add	x7, x4, x2
     db4:	ldrb	w8, [x10, x2]
     db8:	cmp	x1, x2
     dbc:	add	x2, x2, #0x1
     dc0:	sturb	w8, [x7, #-1]
     dc4:	b.ne	db0 <gconv@@Base+0x560>  // b.any
     dc8:	mov	x2, #0x4                   	// #4
     dcc:	sub	x2, x2, x1
     dd0:	add	x2, x27, x2
     dd4:	cmp	x19, x2
     dd8:	b.cc	1608 <gconv@@Base+0xdb8>  // b.lo, b.ul, b.last
     ddc:	cmp	x26, x21
     de0:	b.cs	141c <gconv@@Base+0xbcc>  // b.hs, b.nlast
     de4:	add	x4, sp, #0xd0
     de8:	add	x1, x1, #0x1
     dec:	ldrb	w3, [x27], #1
     df0:	add	x2, x4, x1
     df4:	cmp	x1, #0x3
     df8:	ccmp	x19, x27, #0x0, ls  // ls = plast
     dfc:	sturb	w3, [x2, #-1]
     e00:	b.hi	de8 <gconv@@Base+0x598>  // b.pmore
     e04:	ldr	w3, [sp, #208]
     e08:	mov	w1, #0xfffe                	// #65534
     e0c:	cmp	w3, w1
     e10:	b.hi	1710 <gconv@@Base+0xec0>  // b.pmore
     e14:	mov	w4, w3
     e18:	cmp	w3, #0x9f
     e1c:	adrp	x1, 1000 <gconv@@Base+0x7b0>
     e20:	b.ls	e60 <gconv@@Base+0x610>  // b.plast
     e24:	adrp	x1, 1000 <gconv@@Base+0x7b0>
     e28:	add	x4, x1, #0xc48
     e2c:	add	x4, x4, #0x88
     e30:	mov	w7, #0xa2                  	// #162
     e34:	b	e40 <gconv@@Base+0x5f0>
     e38:	ldrh	w7, [x2, #10]
     e3c:	mov	x4, x2
     e40:	cmp	w3, w7
     e44:	add	x2, x4, #0x8
     e48:	b.hi	e38 <gconv@@Base+0x5e8>  // b.pmore
     e4c:	ldrh	w2, [x2]
     e50:	cmp	w3, w2
     e54:	b.cc	1640 <gconv@@Base+0xdf0>  // b.lo, b.ul, b.last
     e58:	ldr	w4, [x4, #12]
     e5c:	add	w4, w3, w4
     e60:	add	x2, x1, #0xc48
     e64:	cmp	w3, #0x0
     e68:	add	x2, x2, #0x3b8
     e6c:	ldrb	w2, [x2, w4, uxtw]
     e70:	ccmp	w2, #0x0, #0x0, ne  // ne = any
     e74:	b.eq	1640 <gconv@@Base+0xdf0>  // b.none
     e78:	cmp	w6, #0x40
     e7c:	add	x0, x26, #0x1
     e80:	b.eq	176c <gconv@@Base+0xf1c>  // b.none
     e84:	strb	w2, [x26]
     e88:	mov	x26, x0
     e8c:	ldr	w11, [x9]
     e90:	and	w5, w11, #0x7
     e94:	tbnz	w11, #2, 1994 <gconv@@Base+0x1144>
     e98:	ldr	x27, [x28]
     e9c:	mov	x1, #0x4                   	// #4
     ea0:	sub	x1, x1, x5
     ea4:	ldr	w0, [x20, #16]
     ea8:	add	x27, x27, x1
     eac:	str	x27, [x28]
     eb0:	and	w11, w11, #0xfffffff8
     eb4:	str	w11, [x9]
     eb8:	b	910 <gconv@@Base+0xc0>
     ebc:	mov	w6, #0x40                  	// #64
     ec0:	strb	w11, [x23], #1
     ec4:	b	c00 <gconv@@Base+0x3b0>
     ec8:	mov	x1, x0
     ecc:	ldr	x0, [x0]
     ed0:	add	x0, x0, #0x1
     ed4:	str	x0, [x1]
     ed8:	b	a04 <gconv@@Base+0x1b4>
     edc:	str	x28, [x18]
     ee0:	cmp	x19, x28
     ee4:	ldr	x1, [x14, #96]
     ee8:	str	w27, [x25]
     eec:	cbz	x1, 1120 <gconv@@Base+0x8d0>
     ef0:	b.eq	182c <gconv@@Base+0xfdc>  // b.none
     ef4:	add	x6, x28, #0x4
     ef8:	cmp	x19, x6
     efc:	b.cc	16e4 <gconv@@Base+0xe94>  // b.lo, b.ul, b.last
     f00:	cmp	x5, x26
     f04:	b.ls	16d4 <gconv@@Base+0xe84>  // b.plast
     f08:	ldr	w11, [x20, #16]
     f0c:	adrp	x15, 2000 <gconv@@Base+0x17b0>
     f10:	ldr	x23, [sp, #176]
     f14:	mov	x17, x26
     f18:	add	x15, x15, #0xe8
     f1c:	and	w11, w11, #0x2
     f20:	mov	w8, #0xfffe                	// #65534
     f24:	mov	w16, #0x1c00                	// #7168
     f28:	mov	w30, #0xe                   	// #14
     f2c:	mov	w9, #0xf                   	// #15
     f30:	ldur	w3, [x6, #-4]
     f34:	sub	x7, x6, #0x4
     f38:	cmp	w3, w8
     f3c:	b.hi	14a8 <gconv@@Base+0xc58>  // b.pmore
     f40:	mov	w1, w3
     f44:	cmp	w3, #0x9f
     f48:	mov	x2, x13
     f4c:	mov	w4, #0xa2                  	// #162
     f50:	b.hi	f60 <gconv@@Base+0x710>  // b.pmore
     f54:	b	f80 <gconv@@Base+0x730>
     f58:	ldrh	w4, [x1, #10]
     f5c:	mov	x2, x1
     f60:	cmp	w3, w4
     f64:	add	x1, x2, #0x8
     f68:	b.hi	f58 <gconv@@Base+0x708>  // b.pmore
     f6c:	ldrh	w1, [x1]
     f70:	cmp	w3, w1
     f74:	b.cc	1424 <gconv@@Base+0xbd4>  // b.lo, b.ul, b.last
     f78:	ldr	w1, [x2, #12]
     f7c:	add	w1, w3, w1
     f80:	add	x2, x10, #0xc48
     f84:	add	x2, x2, #0x3b8
     f88:	ldrb	w1, [x2, w1, uxtw]
     f8c:	cmp	w1, #0x0
     f90:	ccmp	w3, #0x0, #0x4, eq  // eq = none
     f94:	b.ne	1424 <gconv@@Base+0xbd4>  // b.any
     f98:	cmp	w12, #0x40
     f9c:	add	x2, x17, #0x1
     fa0:	b.eq	151c <gconv@@Base+0xccc>  // b.none
     fa4:	strb	w1, [x17]
     fa8:	mov	x17, x2
     fac:	cmp	x19, x6
     fb0:	b.eq	17e0 <gconv@@Base+0xf90>  // b.none
     fb4:	add	x1, x6, #0x4
     fb8:	cmp	x19, x1
     fbc:	b.cc	1504 <gconv@@Base+0xcb4>  // b.lo, b.ul, b.last
     fc0:	cmp	x17, x5
     fc4:	b.cs	14ec <gconv@@Base+0xc9c>  // b.hs, b.nlast
     fc8:	mov	x6, x1
     fcc:	b	f30 <gconv@@Base+0x6e0>
     fd0:	cmp	w6, #0x40
     fd4:	b.eq	fe8 <gconv@@Base+0x798>  // b.none
     fd8:	add	x2, x2, #0x1
     fdc:	mov	w6, #0x40                  	// #64
     fe0:	b	ac4 <gconv@@Base+0x274>
     fe4:	cbnz	w6, 105c <gconv@@Base+0x80c>
     fe8:	mov	w8, #0x6                   	// #6
     fec:	b	adc <gconv@@Base+0x28c>
     ff0:	mov	x25, x23
     ff4:	mov	x28, x18
     ff8:	ldr	x23, [sp, #160]
     ffc:	ldr	x1, [sp, #192]
    1000:	ldr	x0, [x23]
    1004:	str	x25, [x20]
    1008:	add	x0, x0, x1
    100c:	str	x0, [x23]
    1010:	b	ce8 <gconv@@Base+0x498>
    1014:	mov	x5, x28
    1018:	mov	w6, w12
    101c:	mov	x23, x26
    1020:	mov	w8, #0x7                   	// #7
    1024:	b	c38 <gconv@@Base+0x3e8>
    1028:	mov	x5, x28
    102c:	mov	w6, w12
    1030:	mov	x23, x26
    1034:	mov	w8, #0x5                   	// #5
    1038:	b	c38 <gconv@@Base+0x3e8>
    103c:	ldr	x1, [sp, #176]
    1040:	cbz	x1, fe8 <gconv@@Base+0x798>
    1044:	cbz	w30, fe8 <gconv@@Base+0x798>
    1048:	ldr	x0, [x1]
    104c:	add	x2, x2, #0x2
    1050:	add	x0, x0, #0x1
    1054:	str	x0, [x1]
    1058:	b	ac4 <gconv@@Base+0x274>
    105c:	add	x2, x2, #0x1
    1060:	mov	w6, #0x0                   	// #0
    1064:	b	ac4 <gconv@@Base+0x274>
    1068:	cmp	w1, #0x4
    106c:	b.hi	18b8 <gconv@@Base+0x1068>  // b.pmore
    1070:	add	x7, x26, #0x4
    1074:	cbz	w1, 1388 <gconv@@Base+0xb38>
    1078:	ldrb	w2, [x9, #4]
    107c:	tst	w11, #0x6
    1080:	strb	w2, [sp, #208]
    1084:	mov	x2, #0x1                   	// #1
    1088:	b.eq	1098 <gconv@@Base+0x848>  // b.none
    108c:	ldrb	w3, [x9, #5]
    1090:	mov	x2, #0x2                   	// #2
    1094:	strb	w3, [sp, #209]
    1098:	cmp	x21, x7
    109c:	b.cc	141c <gconv@@Base+0xbcc>  // b.lo, b.ul, b.last
    10a0:	add	x4, sp, #0xd0
    10a4:	ldrb	w8, [x27]
    10a8:	add	x3, x2, #0x1
    10ac:	strb	w8, [x4, x2]
    10b0:	ldrb	w2, [sp, #208]
    10b4:	cmp	w2, #0xe
    10b8:	b.eq	184c <gconv@@Base+0xffc>  // b.none
    10bc:	cmp	w2, #0xf
    10c0:	b.eq	1840 <gconv@@Base+0xff0>  // b.none
    10c4:	cbnz	w6, 156c <gconv@@Base+0xd1c>
    10c8:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    10cc:	add	x1, x1, #0xc48
    10d0:	add	x1, x1, #0x1b8
    10d4:	mov	w3, w2
    10d8:	cmp	w2, #0x0
    10dc:	ldrh	w1, [x1, x3, lsl #1]
    10e0:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    10e4:	b.eq	1914 <gconv@@Base+0x10c4>  // b.none
    10e8:	str	w1, [x26]
    10ec:	mov	x26, x7
    10f0:	mov	x0, #0x1                   	// #1
    10f4:	ldr	w11, [x9]
    10f8:	and	w5, w11, #0x7
    10fc:	cmp	x5, x0
    1100:	b.ge	1940 <gconv@@Base+0x10f0>  // b.tcont
    1104:	sub	x0, x0, x5
    1108:	and	w11, w11, #0xfffffff8
    110c:	add	x27, x27, x0
    1110:	ldr	w0, [x20, #16]
    1114:	str	x27, [x28]
    1118:	str	w11, [x9]
    111c:	b	910 <gconv@@Base+0xc0>
    1120:	ldr	w6, [x20, #16]
    1124:	b.eq	182c <gconv@@Base+0xfdc>  // b.none
    1128:	add	x4, x26, #0x4
    112c:	mov	x17, x26
    1130:	cmp	x5, x4
    1134:	b.cc	17f8 <gconv@@Base+0xfa8>  // b.lo, b.ul, b.last
    1138:	ldp	x9, x1, [sp, #176]
    113c:	adrp	x7, 14000 <gconv@@Base+0x137b0>
    1140:	and	w6, w6, #0x2
    1144:	add	x7, x7, #0x100
    1148:	mov	w11, #0x4040                	// #16448
    114c:	mov	w8, #0xffff                	// #65535
    1150:	add	x16, x1, #0x1b8
    1154:	ldrb	w1, [x28]
    1158:	cmp	w1, #0xe
    115c:	b.eq	1558 <gconv@@Base+0xd08>  // b.none
    1160:	cmp	w1, #0xf
    1164:	b.eq	1548 <gconv@@Base+0xcf8>  // b.none
    1168:	cbnz	w12, 12d0 <gconv@@Base+0xa80>
    116c:	mov	w2, w1
    1170:	cmp	w1, #0x0
    1174:	ldrh	w1, [x16, x2, lsl #1]
    1178:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    117c:	b.eq	1730 <gconv@@Base+0xee0>  // b.none
    1180:	str	w1, [x17]
    1184:	mov	x17, x4
    1188:	add	x28, x28, #0x1
    118c:	cmp	x19, x28
    1190:	b.eq	13bc <gconv@@Base+0xb6c>  // b.none
    1194:	add	x4, x17, #0x4
    1198:	cmp	x5, x4
    119c:	b.cs	1154 <gconv@@Base+0x904>  // b.hs, b.nlast
    11a0:	str	x28, [x18]
    11a4:	cmp	x17, x5
    11a8:	str	w12, [x25]
    11ac:	b.ne	13cc <gconv@@Base+0xb7c>  // b.any
    11b0:	cmp	x17, x26
    11b4:	b.ne	cc4 <gconv@@Base+0x474>  // b.any
    11b8:	ldr	w1, [x20, #20]
    11bc:	sub	w1, w1, #0x1
    11c0:	str	w1, [x20, #20]
    11c4:	b	cc4 <gconv@@Base+0x474>
    11c8:	ldr	x1, [sp, #176]
    11cc:	cbz	x1, a48 <gconv@@Base+0x1f8>
    11d0:	cbz	w8, a48 <gconv@@Base+0x1f8>
    11d4:	ldr	x0, [x1]
    11d8:	add	x0, x0, #0x1
    11dc:	str	x0, [x1]
    11e0:	b	a04 <gconv@@Base+0x1b4>
    11e4:	ldr	x1, [sp, #176]
    11e8:	cbz	x1, fe8 <gconv@@Base+0x798>
    11ec:	cbz	w30, fe8 <gconv@@Base+0x798>
    11f0:	ldr	x0, [x1]
    11f4:	add	x0, x0, #0x1
    11f8:	str	x0, [x1]
    11fc:	b	ac0 <gconv@@Base+0x270>
    1200:	mov	x2, x28
    1204:	mov	x23, x26
    1208:	mov	w6, w12
    120c:	mov	w8, #0x5                   	// #5
    1210:	b	adc <gconv@@Base+0x28c>
    1214:	mov	x0, x1
    1218:	mov	w1, #0xa1                  	// #161
    121c:	b	bd4 <gconv@@Base+0x384>
    1220:	mov	x2, x19
    1224:	mov	x23, x26
    1228:	mov	w6, w12
    122c:	mov	w8, #0x4                   	// #4
    1230:	b	adc <gconv@@Base+0x28c>
    1234:	mov	w3, #0x4040                	// #16448
    1238:	b	b74 <gconv@@Base+0x324>
    123c:	mov	w8, #0x7                   	// #7
    1240:	b	adc <gconv@@Base+0x28c>
    1244:	ldr	x0, [sp, #104]
    1248:	cbnz	x0, 1898 <gconv@@Base+0x1048>
    124c:	cmp	w6, #0x1
    1250:	ldr	x26, [x20, #32]
    1254:	b.ne	13ec <gconv@@Base+0xb9c>  // b.any
    1258:	ldr	w19, [x26]
    125c:	ldr	x1, [x20]
    1260:	tst	w19, #0xfffffff8
    1264:	b.eq	1354 <gconv@@Base+0xb04>  // b.none
    1268:	ldr	x0, [x14, #96]
    126c:	cbz	x0, 134c <gconv@@Base+0xafc>
    1270:	ldr	x0, [x20, #8]
    1274:	cmp	x1, x0
    1278:	b.cs	141c <gconv@@Base+0xbcc>  // b.hs, b.nlast
    127c:	mov	x21, x1
    1280:	mov	w0, #0xf                   	// #15
    1284:	strb	w0, [x21], #1
    1288:	ldr	x2, [x20, #32]
    128c:	ldr	w3, [x20, #16]
    1290:	ldr	w0, [x2]
    1294:	and	w0, w0, #0x7
    1298:	str	w0, [x2]
    129c:	tbz	w3, #0, 1794 <gconv@@Base+0xf44>
    12a0:	mov	x1, x21
    12a4:	mov	w8, #0x0                   	// #0
    12a8:	str	x1, [x20]
    12ac:	b	af0 <gconv@@Base+0x2a0>
    12b0:	mov	x5, x16
    12b4:	mov	w8, #0x5                   	// #5
    12b8:	b	c38 <gconv@@Base+0x3e8>
    12bc:	mov	x5, x19
    12c0:	mov	w6, w12
    12c4:	mov	x23, x26
    12c8:	mov	w8, #0x4                   	// #4
    12cc:	b	c38 <gconv@@Base+0x3e8>
    12d0:	cmp	w12, #0x40
    12d4:	b.ne	1a18 <gconv@@Base+0x11c8>  // b.any
    12d8:	add	x2, x28, #0x1
    12dc:	cmp	x19, x2
    12e0:	b.ls	13bc <gconv@@Base+0xb6c>  // b.plast
    12e4:	ldrb	w2, [x28, #1]
    12e8:	add	w2, w2, w1, lsl #8
    12ec:	add	x1, x10, #0xc48
    12f0:	cmp	w2, w11
    12f4:	b.ls	178c <gconv@@Base+0xf3c>  // b.plast
    12f8:	mov	w3, #0x419d                	// #16797
    12fc:	b	1304 <gconv@@Base+0xab4>
    1300:	ldrh	w3, [x1, #10]
    1304:	add	x1, x1, #0x8
    1308:	cmp	w2, w3
    130c:	b.hi	1300 <gconv@@Base+0xab0>  // b.pmore
    1310:	ldrh	w3, [x1]
    1314:	cmp	w3, w8
    1318:	b.eq	185c <gconv@@Base+0x100c>  // b.none
    131c:	cmp	w2, w3
    1320:	b.cc	185c <gconv@@Base+0x100c>  // b.lo, b.ul, b.last
    1324:	ldr	w1, [x1, #4]
    1328:	add	w1, w2, w1
    132c:	ldrh	w1, [x7, x1, lsl #1]
    1330:	cmp	w1, #0x0
    1334:	ccmp	w2, #0x0, #0x4, eq  // eq = none
    1338:	b.ne	185c <gconv@@Base+0x100c>  // b.any
    133c:	add	x28, x28, #0x2
    1340:	str	w1, [x17]
    1344:	mov	x17, x4
    1348:	b	118c <gconv@@Base+0x93c>
    134c:	and	w19, w19, #0x7
    1350:	str	w19, [x26]
    1354:	cbnz	w2, 12a4 <gconv@@Base+0xa54>
    1358:	mov	x0, x22
    135c:	bl	6d0 <_dl_mcount_wrapper_check@plt>
    1360:	ldp	x0, x1, [sp, #144]
    1364:	mov	w7, w24
    1368:	mov	x5, x23
    136c:	mov	w6, #0x1                   	// #1
    1370:	mov	x4, #0x0                   	// #0
    1374:	mov	x3, #0x0                   	// #0
    1378:	mov	x2, #0x0                   	// #0
    137c:	blr	x22
    1380:	mov	w8, w0
    1384:	b	af0 <gconv@@Base+0x2a0>
    1388:	cmp	x21, x7
    138c:	b.cc	141c <gconv@@Base+0xbcc>  // b.lo, b.ul, b.last
    1390:	mov	x8, x27
    1394:	add	x4, sp, #0xd0
    1398:	mov	x2, #0x0                   	// #0
    139c:	ldrb	w10, [x8], #1
    13a0:	add	x3, x2, #0x1
    13a4:	strb	w10, [x4, x2]
    13a8:	cmp	x3, #0x1
    13ac:	ccmp	x19, x8, #0x0, ls  // ls = plast
    13b0:	mov	x2, #0x1                   	// #1
    13b4:	b.hi	139c <gconv@@Base+0xb4c>  // b.pmore
    13b8:	b	10b0 <gconv@@Base+0x860>
    13bc:	str	x28, [x18]
    13c0:	cmp	x5, x17
    13c4:	str	w12, [x25]
    13c8:	b.eq	14cc <gconv@@Base+0xc7c>  // b.none
    13cc:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    13d0:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    13d4:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    13d8:	add	x3, x3, #0xc40
    13dc:	add	x1, x1, #0xa88
    13e0:	add	x0, x0, #0xbb0
    13e4:	mov	w2, #0x2ea                 	// #746
    13e8:	bl	6e0 <__assert_fail@plt>
    13ec:	str	xzr, [x26]
    13f0:	mov	w8, #0x0                   	// #0
    13f4:	ldr	w0, [x20, #16]
    13f8:	tbnz	w0, #0, af0 <gconv@@Base+0x2a0>
    13fc:	mov	x0, x22
    1400:	str	w6, [sp, #104]
    1404:	bl	6d0 <_dl_mcount_wrapper_check@plt>
    1408:	ldr	w6, [sp, #104]
    140c:	mov	w7, w24
    1410:	mov	x5, x23
    1414:	ldp	x0, x1, [sp, #144]
    1418:	b	1370 <gconv@@Base+0xb20>
    141c:	mov	w8, #0x5                   	// #5
    1420:	b	af0 <gconv@@Base+0x2a0>
    1424:	add	x1, x10, #0xc48
    1428:	cmp	w3, #0x1c2
    142c:	add	x1, x1, #0x130
    1430:	mov	w4, #0x2dd                 	// #733
    1434:	b.hi	1444 <gconv@@Base+0xbf4>  // b.pmore
    1438:	b	1748 <gconv@@Base+0xef8>
    143c:	ldrh	w4, [x2, #10]
    1440:	mov	x1, x2
    1444:	cmp	w3, w4
    1448:	add	x2, x1, #0x8
    144c:	b.hi	143c <gconv@@Base+0xbec>  // b.pmore
    1450:	ldrh	w1, [x1, #8]
    1454:	cmp	w3, w1
    1458:	b.cc	16f8 <gconv@@Base+0xea8>  // b.lo, b.ul, b.last
    145c:	ldr	w1, [x2, #4]
    1460:	cmp	w3, #0x0
    1464:	add	w1, w3, w1
    1468:	lsl	x1, x1, #1
    146c:	add	x3, x1, x15
    1470:	ldrb	w2, [x1, x15]
    1474:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    1478:	b.eq	16f8 <gconv@@Base+0xea8>  // b.none
    147c:	cbnz	w12, 1488 <gconv@@Base+0xc38>
    1480:	mov	w12, #0x40                  	// #64
    1484:	strb	w30, [x17], #1
    1488:	add	x1, x17, #0x2
    148c:	cmp	x5, x1
    1490:	b.cc	1754 <gconv@@Base+0xf04>  // b.lo, b.ul, b.last
    1494:	strb	w2, [x17]
    1498:	ldrb	w2, [x3, #1]
    149c:	strb	w2, [x17, #1]
    14a0:	mov	x17, x1
    14a4:	b	fac <gconv@@Base+0x75c>
    14a8:	cmp	w16, w3, lsr #7
    14ac:	b.eq	fac <gconv@@Base+0x75c>  // b.none
    14b0:	cbz	x23, 14b8 <gconv@@Base+0xc68>
    14b4:	cbnz	w11, 1700 <gconv@@Base+0xeb0>
    14b8:	str	x7, [x18]
    14bc:	ldr	x0, [sp, #200]
    14c0:	str	w12, [x25]
    14c4:	cmp	x17, x0
    14c8:	b.ne	13cc <gconv@@Base+0xb7c>  // b.any
    14cc:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    14d0:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    14d4:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    14d8:	add	x3, x3, #0xc40
    14dc:	add	x1, x1, #0xa88
    14e0:	add	x0, x0, #0xbc8
    14e4:	mov	w2, #0x2eb                 	// #747
    14e8:	bl	6e0 <__assert_fail@plt>
    14ec:	str	x6, [x18]
    14f0:	ldr	x1, [sp, #200]
    14f4:	str	w12, [x25]
    14f8:	cmp	x17, x1
    14fc:	b.eq	11b0 <gconv@@Base+0x960>  // b.none
    1500:	b	13cc <gconv@@Base+0xb7c>
    1504:	str	x6, [x18]
    1508:	ldr	x0, [sp, #200]
    150c:	str	w12, [x25]
    1510:	cmp	x17, x0
    1514:	b.eq	14cc <gconv@@Base+0xc7c>  // b.none
    1518:	b	13cc <gconv@@Base+0xb7c>
    151c:	strb	w9, [x17]
    1520:	cmp	x5, x2
    1524:	b.ls	18d8 <gconv@@Base+0x1088>  // b.plast
    1528:	add	x3, x17, #0x2
    152c:	mov	w12, #0x0                   	// #0
    1530:	mov	x17, x2
    1534:	mov	x2, x3
    1538:	b	fa4 <gconv@@Base+0x754>
    153c:	mov	x2, #0x4                   	// #4
    1540:	mov	x1, #0x0                   	// #0
    1544:	b	dd0 <gconv@@Base+0x580>
    1548:	cbz	w12, 13bc <gconv@@Base+0xb6c>
    154c:	add	x28, x28, #0x1
    1550:	mov	w12, #0x0                   	// #0
    1554:	b	118c <gconv@@Base+0x93c>
    1558:	cmp	w12, #0x40
    155c:	b.eq	13bc <gconv@@Base+0xb6c>  // b.none
    1560:	add	x28, x28, #0x1
    1564:	mov	w12, #0x40                  	// #64
    1568:	b	118c <gconv@@Base+0x93c>
    156c:	cmp	w6, #0x40
    1570:	b.ne	18f4 <gconv@@Base+0x10a4>  // b.any
    1574:	add	x6, x4, x3
    1578:	add	x8, x4, #0x1
    157c:	cmp	x6, x8
    1580:	b.ls	19d0 <gconv@@Base+0x1180>  // b.plast
    1584:	ldrb	w1, [sp, #209]
    1588:	mov	w3, #0x4040                	// #16448
    158c:	add	w2, w1, w2, lsl #8
    1590:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1594:	cmp	w2, w3
    1598:	add	x1, x1, #0xc48
    159c:	b.ls	15c8 <gconv@@Base+0xd78>  // b.plast
    15a0:	mov	w3, #0x419d                	// #16797
    15a4:	b	15ac <gconv@@Base+0xd5c>
    15a8:	ldrh	w3, [x1, #10]
    15ac:	add	x1, x1, #0x8
    15b0:	cmp	w2, w3
    15b4:	b.hi	15a8 <gconv@@Base+0xd58>  // b.pmore
    15b8:	ldrh	w3, [x1]
    15bc:	mov	w4, #0xffff                	// #65535
    15c0:	cmp	w3, w4
    15c4:	b.eq	180c <gconv@@Base+0xfbc>  // b.none
    15c8:	cmp	w2, w3
    15cc:	b.cc	180c <gconv@@Base+0xfbc>  // b.lo, b.ul, b.last
    15d0:	ldr	w3, [x1, #4]
    15d4:	cmp	w2, #0x0
    15d8:	adrp	x1, 14000 <gconv@@Base+0x137b0>
    15dc:	add	x1, x1, #0x100
    15e0:	add	w2, w2, w3
    15e4:	ldrh	w1, [x1, x2, lsl #1]
    15e8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    15ec:	b.eq	180c <gconv@@Base+0xfbc>  // b.none
    15f0:	str	w1, [x26]
    15f4:	mov	x0, #0x2                   	// #2
    15f8:	mov	x26, x7
    15fc:	ldr	w11, [x9]
    1600:	and	w5, w11, #0x7
    1604:	b	10fc <gconv@@Base+0x8ac>
    1608:	str	x19, [x28]
    160c:	cmp	x27, x19
    1610:	b.cs	1638 <gconv@@Base+0xde8>  // b.hs, b.nlast
    1614:	add	x1, x1, #0x4
    1618:	sub	x19, x19, x27
    161c:	add	x9, x9, x1
    1620:	mov	x0, #0x0                   	// #0
    1624:	ldrb	w1, [x27, x0]
    1628:	strb	w1, [x9, x0]
    162c:	add	x0, x0, #0x1
    1630:	cmp	x19, x0
    1634:	b.ne	1624 <gconv@@Base+0xdd4>  // b.any
    1638:	mov	w8, #0x7                   	// #7
    163c:	b	af0 <gconv@@Base+0x2a0>
    1640:	add	x1, x1, #0xc48
    1644:	cmp	w3, #0x1c2
    1648:	add	x1, x1, #0x130
    164c:	mov	w4, #0x2dd                 	// #733
    1650:	b.hi	1660 <gconv@@Base+0xe10>  // b.pmore
    1654:	b	1988 <gconv@@Base+0x1138>
    1658:	ldrh	w4, [x2, #10]
    165c:	mov	x1, x2
    1660:	cmp	w3, w4
    1664:	add	x2, x1, #0x8
    1668:	b.hi	1658 <gconv@@Base+0xe08>  // b.pmore
    166c:	ldrh	w1, [x1, #8]
    1670:	cmp	w3, w1
    1674:	b.cc	171c <gconv@@Base+0xecc>  // b.lo, b.ul, b.last
    1678:	ldr	w1, [x2, #4]
    167c:	adrp	x2, 2000 <gconv@@Base+0x17b0>
    1680:	add	x2, x2, #0xe8
    1684:	cmp	w3, #0x0
    1688:	add	w1, w3, w1
    168c:	lsl	x1, x1, #1
    1690:	add	x3, x1, x2
    1694:	ldrb	w1, [x1, x2]
    1698:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    169c:	b.eq	171c <gconv@@Base+0xecc>  // b.none
    16a0:	mov	x0, x26
    16a4:	cbnz	w6, 16b0 <gconv@@Base+0xe60>
    16a8:	mov	w2, #0xe                   	// #14
    16ac:	strb	w2, [x0], #1
    16b0:	add	x26, x0, #0x2
    16b4:	cmp	x21, x26
    16b8:	b.cc	141c <gconv@@Base+0xbcc>  // b.lo, b.ul, b.last
    16bc:	strb	w1, [x0]
    16c0:	ldrb	w1, [x3, #1]
    16c4:	strb	w1, [x0, #1]
    16c8:	ldr	w11, [x9]
    16cc:	and	w5, w11, #0x7
    16d0:	b	e94 <gconv@@Base+0x644>
    16d4:	str	x28, [x18]
    16d8:	str	w12, [x25]
    16dc:	b.eq	11b8 <gconv@@Base+0x968>  // b.none
    16e0:	b	13cc <gconv@@Base+0xb7c>
    16e4:	str	x28, [x18]
    16e8:	cmp	x5, x26
    16ec:	str	w12, [x25]
    16f0:	b.eq	14cc <gconv@@Base+0xc7c>  // b.none
    16f4:	b	13cc <gconv@@Base+0xb7c>
    16f8:	cbz	x23, 14b8 <gconv@@Base+0xc68>
    16fc:	cbz	w11, 14b8 <gconv@@Base+0xc68>
    1700:	ldr	x1, [x23]
    1704:	add	x1, x1, #0x1
    1708:	str	x1, [x23]
    170c:	b	fac <gconv@@Base+0x75c>
    1710:	mov	w1, #0x1c00                	// #7168
    1714:	cmp	w1, w3, lsr #7
    1718:	b.eq	e94 <gconv@@Base+0x644>  // b.none
    171c:	ldr	x1, [sp, #176]
    1720:	cbz	x1, 1728 <gconv@@Base+0xed8>
    1724:	tbnz	w0, #1, 19c0 <gconv@@Base+0x1170>
    1728:	mov	w8, #0x6                   	// #6
    172c:	b	af0 <gconv@@Base+0x2a0>
    1730:	cbz	x9, 13bc <gconv@@Base+0xb6c>
    1734:	cbz	w6, 13bc <gconv@@Base+0xb6c>
    1738:	ldr	x1, [x9]
    173c:	add	x1, x1, #0x1
    1740:	str	x1, [x9]
    1744:	b	1188 <gconv@@Base+0x938>
    1748:	mov	x2, x1
    174c:	mov	w1, #0xa1                  	// #161
    1750:	b	1454 <gconv@@Base+0xc04>
    1754:	str	x7, [x18]
    1758:	ldr	x1, [sp, #200]
    175c:	str	w12, [x25]
    1760:	cmp	x17, x1
    1764:	b.eq	11b0 <gconv@@Base+0x960>  // b.none
    1768:	b	13cc <gconv@@Base+0xb7c>
    176c:	mov	w1, #0xf                   	// #15
    1770:	strb	w1, [x26]
    1774:	cmp	x21, x0
    1778:	b.ls	141c <gconv@@Base+0xbcc>  // b.plast
    177c:	add	x1, x26, #0x2
    1780:	mov	x26, x0
    1784:	mov	x0, x1
    1788:	b	e84 <gconv@@Base+0x634>
    178c:	mov	w3, #0x4040                	// #16448
    1790:	b	131c <gconv@@Base+0xacc>
    1794:	mov	x0, x22
    1798:	str	x1, [sp, #200]
    179c:	bl	6d0 <_dl_mcount_wrapper_check@plt>
    17a0:	ldp	x0, x1, [sp, #144]
    17a4:	mov	w7, w24
    17a8:	mov	x5, x23
    17ac:	mov	x3, x21
    17b0:	add	x2, sp, #0xc8
    17b4:	mov	w6, #0x0                   	// #0
    17b8:	mov	x4, #0x0                   	// #0
    17bc:	blr	x22
    17c0:	mov	w8, w0
    17c4:	cmp	w0, #0x4
    17c8:	b.eq	1358 <gconv@@Base+0xb08>  // b.none
    17cc:	ldr	x0, [sp, #200]
    17d0:	cmp	x0, x21
    17d4:	b.ne	1934 <gconv@@Base+0x10e4>  // b.any
    17d8:	cbnz	w8, af0 <gconv@@Base+0x2a0>
    17dc:	b	1358 <gconv@@Base+0xb08>
    17e0:	str	x19, [x18]
    17e4:	ldr	x0, [sp, #200]
    17e8:	str	w12, [x25]
    17ec:	cmp	x17, x0
    17f0:	b.eq	14cc <gconv@@Base+0xc7c>  // b.none
    17f4:	b	13cc <gconv@@Base+0xb7c>
    17f8:	str	x28, [x18]
    17fc:	cmp	x5, x26
    1800:	str	w12, [x25]
    1804:	b.eq	11b8 <gconv@@Base+0x968>  // b.none
    1808:	b	13cc <gconv@@Base+0xb7c>
    180c:	ldr	x2, [sp, #176]
    1810:	cbz	x2, 1728 <gconv@@Base+0xed8>
    1814:	tbz	w0, #1, 1728 <gconv@@Base+0xed8>
    1818:	ldr	x1, [x2]
    181c:	mov	x0, #0x2                   	// #2
    1820:	add	x1, x1, #0x1
    1824:	str	x1, [x2]
    1828:	b	10fc <gconv@@Base+0x8ac>
    182c:	str	x19, [x18]
    1830:	cmp	x5, x26
    1834:	str	w12, [x25]
    1838:	b.eq	14cc <gconv@@Base+0xc7c>  // b.none
    183c:	b	13cc <gconv@@Base+0xb7c>
    1840:	cbz	w6, 1728 <gconv@@Base+0xed8>
    1844:	mov	x0, #0x1                   	// #1
    1848:	b	10fc <gconv@@Base+0x8ac>
    184c:	cmp	w6, #0x40
    1850:	b.ne	1844 <gconv@@Base+0xff4>  // b.any
    1854:	mov	w8, #0x6                   	// #6
    1858:	b	af0 <gconv@@Base+0x2a0>
    185c:	cbz	x9, 13bc <gconv@@Base+0xb6c>
    1860:	cbz	w6, 13bc <gconv@@Base+0xb6c>
    1864:	ldr	x1, [x9]
    1868:	add	x28, x28, #0x2
    186c:	add	x1, x1, #0x1
    1870:	str	x1, [x9]
    1874:	b	118c <gconv@@Base+0x93c>
    1878:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    187c:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1880:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1884:	add	x3, x3, #0xc40
    1888:	add	x1, x1, #0xa88
    188c:	add	x0, x0, #0xaa0
    1890:	mov	w2, #0x234                 	// #564
    1894:	bl	6e0 <__assert_fail@plt>
    1898:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    189c:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    18a0:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    18a4:	add	x3, x3, #0xc40
    18a8:	add	x1, x1, #0xa88
    18ac:	add	x0, x0, #0xaa0
    18b0:	mov	w2, #0x1a4                 	// #420
    18b4:	bl	6e0 <__assert_fail@plt>
    18b8:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    18bc:	add	x3, x3, #0xc28
    18c0:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    18c4:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    18c8:	add	x1, x1, #0xab8
    18cc:	add	x0, x0, #0xac8
    18d0:	mov	w2, #0x18b                 	// #395
    18d4:	bl	6e0 <__assert_fail@plt>
    18d8:	str	x7, [x18]
    18dc:	ldr	x1, [sp, #200]
    18e0:	str	wzr, [x25]
    18e4:	cmp	x2, x1
    18e8:	b.ne	13cc <gconv@@Base+0xb7c>  // b.any
    18ec:	mov	x17, x2
    18f0:	b	11b0 <gconv@@Base+0x960>
    18f4:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    18f8:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    18fc:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1900:	add	x3, x3, #0xc28
    1904:	add	x1, x1, #0xab8
    1908:	add	x0, x0, #0xaf8
    190c:	mov	w2, #0x1be                 	// #446
    1910:	bl	6e0 <__assert_fail@plt>
    1914:	ldr	x2, [sp, #176]
    1918:	cbz	x2, 1728 <gconv@@Base+0xed8>
    191c:	tbz	w0, #1, 1728 <gconv@@Base+0xed8>
    1920:	ldr	x1, [x2]
    1924:	mov	x0, #0x1                   	// #1
    1928:	add	x1, x1, x0
    192c:	str	x1, [x2]
    1930:	b	10fc <gconv@@Base+0x8ac>
    1934:	str	w19, [x26]
    1938:	cbnz	w8, af0 <gconv@@Base+0x2a0>
    193c:	b	1358 <gconv@@Base+0xb08>
    1940:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1944:	add	x3, x3, #0xc28
    1948:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    194c:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1950:	add	x1, x1, #0xab8
    1954:	add	x0, x0, #0xb08
    1958:	mov	w2, #0x1c9                 	// #457
    195c:	bl	6e0 <__assert_fail@plt>
    1960:	mov	w1, #0x0                   	// #0
    1964:	b	d30 <gconv@@Base+0x4e0>
    1968:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    196c:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1970:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1974:	add	x3, x3, #0xc40
    1978:	add	x1, x1, #0xa88
    197c:	add	x0, x0, #0xbe8
    1980:	mov	w2, #0x31e                 	// #798
    1984:	bl	6e0 <__assert_fail@plt>
    1988:	mov	x2, x1
    198c:	mov	w1, #0xa1                  	// #161
    1990:	b	1670 <gconv@@Base+0xe20>
    1994:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1998:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    199c:	add	x3, x3, #0xc10
    19a0:	b	194c <gconv@@Base+0x10fc>
    19a4:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    19a8:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    19ac:	add	x3, x3, #0xc10
    19b0:	b	18c4 <gconv@@Base+0x1074>
    19b4:	mov	x28, x18
    19b8:	mov	w8, w0
    19bc:	b	ce8 <gconv@@Base+0x498>
    19c0:	ldr	x0, [x1]
    19c4:	add	x0, x0, #0x1
    19c8:	str	x0, [x1]
    19cc:	b	e94 <gconv@@Base+0x644>
    19d0:	add	x4, x4, #0x2
    19d4:	cmp	x6, x4
    19d8:	b.eq	1a48 <gconv@@Base+0x11f8>  // b.none
    19dc:	mov	w0, w1
    19e0:	cmp	x3, #0x40
    19e4:	sub	x0, x3, x0
    19e8:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    19ec:	add	x27, x27, x0
    19f0:	str	x27, [x28]
    19f4:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    19f8:	add	x1, x1, #0xab8
    19fc:	add	x3, x3, #0xc28
    1a00:	b.le	1a38 <gconv@@Base+0x11e8>
    1a04:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1a08:	mov	w2, #0x1e6                 	// #486
    1a0c:	add	x0, x0, #0xb80
    1a10:	bl	6e0 <__assert_fail@plt>
    1a14:	bl	6a0 <__stack_chk_fail@plt>
    1a18:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1a1c:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1a20:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1a24:	add	x3, x3, #0xc00
    1a28:	add	x1, x1, #0xab8
    1a2c:	add	x0, x0, #0xaf8
    1a30:	mov	w2, #0x150                 	// #336
    1a34:	bl	6e0 <__assert_fail@plt>
    1a38:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1a3c:	mov	w2, #0x1e5                 	// #485
    1a40:	add	x0, x0, #0xb58
    1a44:	bl	6e0 <__assert_fail@plt>
    1a48:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1a4c:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1a50:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1a54:	add	x3, x3, #0xc28
    1a58:	add	x1, x1, #0xab8
    1a5c:	add	x0, x0, #0xb30
    1a60:	mov	w2, #0x1db                 	// #475
    1a64:	bl	6e0 <__assert_fail@plt>

Disassembly of section .fini:

0000000000001a68 <.fini>:
    1a68:	stp	x29, x30, [sp, #-16]!
    1a6c:	mov	x29, sp
    1a70:	ldp	x29, x30, [sp], #16
    1a74:	ret
