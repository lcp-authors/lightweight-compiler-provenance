
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cbfs.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x930>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	rev	w0, w0
  10:	add	sp, sp, #0x10
  14:	ret
  18:	stp	x29, x30, [sp, #-32]!
  1c:	mov	x29, sp
  20:	str	x0, [sp, #24]
  24:	ldr	x1, [sp, #24]
  28:	adrp	x0, 0 <grub_mod_init-0x930>
  2c:	add	x0, x0, #0x0
  30:	ldr	x0, [x0]
  34:	bl	0 <grub_list_push>
  38:	nop
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	nop
	...
  50:	stp	x29, x30, [sp, #-32]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #24]
  5c:	ldr	x0, [sp, #24]
  60:	bl	0 <grub_list_remove>
  64:	nop
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	stp	x29, x30, [sp, #-96]!
  74:	mov	x29, sp
  78:	str	x0, [sp, #40]
  7c:	str	x1, [sp, #32]
  80:	str	x2, [sp, #24]
  84:	str	x3, [sp, #16]
  88:	ldr	x0, [sp, #40]
  8c:	ldr	x1, [x0, #16]
  90:	ldr	x0, [sp, #40]
  94:	str	x1, [x0, #8]
  98:	ldr	x0, [sp, #40]
  9c:	ldr	x1, [x0, #8]
  a0:	ldr	x0, [sp, #40]
  a4:	ldr	x0, [x0, #48]
  a8:	cmp	x1, x0
  ac:	b.cc	c4 <grub_mod_init-0x86c>  // b.lo, b.ul, b.last
  b0:	ldr	x0, [sp, #16]
  b4:	mov	w1, #0xffffffff            	// #-1
  b8:	str	w1, [x0]
  bc:	mov	w0, #0x0                   	// #0
  c0:	b	330 <grub_mod_init-0x600>
  c4:	ldr	x0, [sp, #40]
  c8:	ldr	x5, [x0]
  cc:	ldr	x0, [sp, #40]
  d0:	ldr	x0, [x0, #8]
  d4:	add	x1, sp, #0x38
  d8:	mov	x4, x1
  dc:	mov	x3, #0x18                  	// #24
  e0:	mov	x2, x0
  e4:	mov	x1, #0x0                   	// #0
  e8:	mov	x0, x5
  ec:	bl	0 <grub_disk_read>
  f0:	cmp	w0, #0x0
  f4:	b.eq	10c <grub_mod_init-0x824>  // b.none
  f8:	adrp	x0, 0 <grub_mod_init-0x930>
  fc:	add	x0, x0, #0x0
 100:	ldr	x0, [x0]
 104:	ldr	w0, [x0]
 108:	b	330 <grub_mod_init-0x600>
 10c:	add	x3, sp, #0x38
 110:	mov	x2, #0x8                   	// #8
 114:	adrp	x0, 0 <grub_mod_init-0x930>
 118:	add	x0, x0, #0x0
 11c:	ldr	x1, [x0]
 120:	mov	x0, x3
 124:	bl	0 <grub_memcmp>
 128:	cmp	w0, #0x0
 12c:	b.eq	144 <grub_mod_init-0x7ec>  // b.none
 130:	ldr	x0, [sp, #16]
 134:	mov	w1, #0xffffffff            	// #-1
 138:	str	w1, [x0]
 13c:	mov	w0, #0x0                   	// #0
 140:	b	330 <grub_mod_init-0x600>
 144:	ldr	w0, [sp, #64]
 148:	bl	0 <grub_mod_init-0x930>
 14c:	mov	w1, w0
 150:	ldr	x0, [sp, #40]
 154:	str	x1, [x0, #32]
 158:	ldr	w0, [sp, #76]
 15c:	bl	0 <grub_mod_init-0x930>
 160:	mov	w0, w0
 164:	str	x0, [sp, #80]
 168:	ldr	x0, [sp, #16]
 16c:	mov	w1, #0x80008000            	// #-2147450880
 170:	str	w1, [x0]
 174:	ldr	x0, [sp, #80]
 178:	str	x0, [sp, #88]
 17c:	ldr	x0, [sp, #88]
 180:	cmp	x0, #0x17
 184:	b.ls	194 <grub_mod_init-0x79c>  // b.plast
 188:	ldr	x0, [sp, #88]
 18c:	sub	x0, x0, #0x18
 190:	str	x0, [sp, #88]
 194:	ldr	x0, [sp, #88]
 198:	cmp	x0, #0x0
 19c:	b.eq	2d4 <grub_mod_init-0x65c>  // b.none
 1a0:	ldr	x0, [sp, #88]
 1a4:	add	x0, x0, #0x1
 1a8:	bl	0 <grub_malloc>
 1ac:	mov	x1, x0
 1b0:	ldr	x0, [sp, #32]
 1b4:	str	x1, [x0]
 1b8:	ldr	x0, [sp, #32]
 1bc:	ldr	x0, [x0]
 1c0:	cmp	x0, #0x0
 1c4:	b.ne	1dc <grub_mod_init-0x754>  // b.any
 1c8:	adrp	x0, 0 <grub_mod_init-0x930>
 1cc:	add	x0, x0, #0x0
 1d0:	ldr	x0, [x0]
 1d4:	ldr	w0, [x0]
 1d8:	b	330 <grub_mod_init-0x600>
 1dc:	ldr	x0, [sp, #40]
 1e0:	ldr	x5, [x0]
 1e4:	ldr	x0, [sp, #40]
 1e8:	ldr	x0, [x0, #8]
 1ec:	add	x1, x0, #0x18
 1f0:	ldr	x0, [sp, #32]
 1f4:	ldr	x0, [x0]
 1f8:	mov	x4, x0
 1fc:	ldr	x3, [sp, #88]
 200:	mov	x2, x1
 204:	mov	x1, #0x0                   	// #0
 208:	mov	x0, x5
 20c:	bl	0 <grub_disk_read>
 210:	cmp	w0, #0x0
 214:	b.eq	238 <grub_mod_init-0x6f8>  // b.none
 218:	ldr	x0, [sp, #32]
 21c:	ldr	x0, [x0]
 220:	bl	0 <grub_free>
 224:	adrp	x0, 0 <grub_mod_init-0x930>
 228:	add	x0, x0, #0x0
 22c:	ldr	x0, [x0]
 230:	ldr	w0, [x0]
 234:	b	330 <grub_mod_init-0x600>
 238:	ldr	x0, [sp, #32]
 23c:	ldr	x0, [x0]
 240:	ldrb	w0, [x0]
 244:	cmp	w0, #0x0
 248:	b.ne	264 <grub_mod_init-0x6cc>  // b.any
 24c:	ldr	x0, [sp, #32]
 250:	ldr	x0, [x0]
 254:	bl	0 <grub_free>
 258:	ldr	x0, [sp, #32]
 25c:	str	xzr, [x0]
 260:	b	2d8 <grub_mod_init-0x658>
 264:	ldr	x0, [sp, #32]
 268:	ldr	x1, [x0]
 26c:	ldr	x0, [sp, #88]
 270:	add	x0, x1, x0
 274:	strb	wzr, [x0]
 278:	ldr	x0, [sp, #40]
 27c:	ldr	x1, [x0, #8]
 280:	ldr	x0, [sp, #80]
 284:	add	x1, x1, x0
 288:	ldr	x0, [sp, #40]
 28c:	str	x1, [x0, #24]
 290:	ldr	x0, [sp, #40]
 294:	ldr	x1, [x0, #24]
 298:	ldr	x0, [sp, #40]
 29c:	ldr	x0, [x0, #32]
 2a0:	add	x1, x1, x0
 2a4:	ldr	x0, [sp, #40]
 2a8:	ldr	x0, [x0, #56]
 2ac:	add	x0, x1, x0
 2b0:	sub	x1, x0, #0x1
 2b4:	ldr	x0, [sp, #40]
 2b8:	ldr	x0, [x0, #56]
 2bc:	neg	x0, x0
 2c0:	and	x1, x1, x0
 2c4:	ldr	x0, [sp, #40]
 2c8:	str	x1, [x0, #16]
 2cc:	mov	w0, #0x0                   	// #0
 2d0:	b	330 <grub_mod_init-0x600>
 2d4:	nop
 2d8:	ldr	x0, [sp, #40]
 2dc:	ldr	x1, [x0, #8]
 2e0:	ldr	x0, [sp, #80]
 2e4:	add	x1, x1, x0
 2e8:	ldr	x0, [sp, #40]
 2ec:	str	x1, [x0, #24]
 2f0:	ldr	x0, [sp, #40]
 2f4:	ldr	x1, [x0, #24]
 2f8:	ldr	x0, [sp, #40]
 2fc:	ldr	x0, [x0, #32]
 300:	add	x1, x1, x0
 304:	ldr	x0, [sp, #40]
 308:	ldr	x0, [x0, #56]
 30c:	add	x0, x1, x0
 310:	sub	x1, x0, #0x1
 314:	ldr	x0, [sp, #40]
 318:	ldr	x0, [x0, #56]
 31c:	neg	x0, x0
 320:	and	x1, x1, x0
 324:	ldr	x0, [sp, #40]
 328:	str	x1, [x0, #16]
 32c:	b	88 <grub_mod_init-0x8a8>
 330:	ldp	x29, x30, [sp], #96
 334:	ret
	...
 348:	sub	sp, sp, #0x10
 34c:	str	x0, [sp, #8]
 350:	ldr	x0, [sp, #8]
 354:	ldr	x1, [x0, #40]
 358:	ldr	x0, [sp, #8]
 35c:	str	x1, [x0, #16]
 360:	nop
 364:	add	sp, sp, #0x10
 368:	ret
 36c:	stp	x29, x30, [sp, #-48]!
 370:	mov	x29, sp
 374:	str	x19, [sp, #16]
 378:	str	x0, [sp, #40]
 37c:	ldr	x0, [sp, #40]
 380:	ldr	w1, [x0]
 384:	mov	w0, #0x524f                	// #21071
 388:	movk	w0, #0x4342, lsl #16
 38c:	cmp	w1, w0
 390:	b.ne	488 <grub_mod_init-0x4a8>  // b.any
 394:	ldr	x0, [sp, #40]
 398:	ldr	w1, [x0, #4]
 39c:	mov	w0, #0x3131                	// #12593
 3a0:	movk	w0, #0x3131, lsl #16
 3a4:	cmp	w1, w0
 3a8:	b.eq	3c4 <grub_mod_init-0x56c>  // b.none
 3ac:	ldr	x0, [sp, #40]
 3b0:	ldr	w1, [x0, #4]
 3b4:	mov	w0, #0x3131                	// #12593
 3b8:	movk	w0, #0x3231, lsl #16
 3bc:	cmp	w1, w0
 3c0:	b.ne	488 <grub_mod_init-0x4a8>  // b.any
 3c4:	ldr	x0, [sp, #40]
 3c8:	ldr	w0, [x0, #12]
 3cc:	bl	0 <grub_mod_init-0x930>
 3d0:	mov	w19, w0
 3d4:	ldr	x0, [sp, #40]
 3d8:	ldr	w0, [x0, #8]
 3dc:	bl	0 <grub_mod_init-0x930>
 3e0:	cmp	w19, w0
 3e4:	b.cs	488 <grub_mod_init-0x4a8>  // b.hs, b.nlast
 3e8:	ldr	x0, [sp, #40]
 3ec:	ldr	w0, [x0, #20]
 3f0:	bl	0 <grub_mod_init-0x930>
 3f4:	mov	w19, w0
 3f8:	ldr	x0, [sp, #40]
 3fc:	ldr	w0, [x0, #8]
 400:	bl	0 <grub_mod_init-0x930>
 404:	cmp	w19, w0
 408:	b.cs	488 <grub_mod_init-0x4a8>  // b.hs, b.nlast
 40c:	ldr	x0, [sp, #40]
 410:	ldr	w0, [x0, #20]
 414:	bl	0 <grub_mod_init-0x930>
 418:	mov	w19, w0
 41c:	ldr	x0, [sp, #40]
 420:	ldr	w0, [x0, #12]
 424:	bl	0 <grub_mod_init-0x930>
 428:	add	w19, w19, w0
 42c:	ldr	x0, [sp, #40]
 430:	ldr	w0, [x0, #8]
 434:	bl	0 <grub_mod_init-0x930>
 438:	cmp	w19, w0
 43c:	b.cs	488 <grub_mod_init-0x4a8>  // b.hs, b.nlast
 440:	ldr	x0, [sp, #40]
 444:	ldr	w0, [x0, #16]
 448:	cmp	w0, #0x0
 44c:	b.eq	488 <grub_mod_init-0x4a8>  // b.none
 450:	ldr	x0, [sp, #40]
 454:	ldr	w1, [x0, #16]
 458:	ldr	x0, [sp, #40]
 45c:	ldr	w0, [x0, #16]
 460:	sub	w0, w0, #0x1
 464:	and	w0, w1, w0
 468:	cmp	w0, #0x0
 46c:	b.ne	488 <grub_mod_init-0x4a8>  // b.any
 470:	ldr	x0, [sp, #40]
 474:	ldr	w0, [x0, #8]
 478:	cmp	w0, #0x0
 47c:	b.eq	488 <grub_mod_init-0x4a8>  // b.none
 480:	mov	w0, #0x1                   	// #1
 484:	b	48c <grub_mod_init-0x4a4>
 488:	mov	w0, #0x0                   	// #0
 48c:	ldr	x19, [sp, #16]
 490:	ldp	x29, x30, [sp], #48
 494:	ret
 498:	stp	x29, x30, [sp, #-128]!
 49c:	mov	x29, sp
 4a0:	stp	x19, x20, [sp, #16]
 4a4:	str	x0, [sp, #40]
 4a8:	str	xzr, [sp, #120]
 4ac:	ldr	x0, [sp, #40]
 4b0:	bl	0 <grub_disk_get_size>
 4b4:	cmn	x0, #0x1
 4b8:	b.eq	688 <grub_mod_init-0x2a8>  // b.none
 4bc:	ldr	x0, [sp, #40]
 4c0:	bl	0 <grub_disk_get_size>
 4c4:	sub	x0, x0, #0x1
 4c8:	add	x1, sp, #0x54
 4cc:	mov	x4, x1
 4d0:	mov	x3, #0x4                   	// #4
 4d4:	mov	x2, #0x1fc                 	// #508
 4d8:	mov	x1, x0
 4dc:	ldr	x0, [sp, #40]
 4e0:	bl	0 <grub_disk_read>
 4e4:	cmp	w0, #0x0
 4e8:	b.ne	690 <grub_mod_init-0x2a0>  // b.any
 4ec:	ldr	w0, [sp, #84]
 4f0:	str	w0, [sp, #84]
 4f4:	ldr	x0, [sp, #40]
 4f8:	bl	0 <grub_disk_get_size>
 4fc:	lsl	x1, x0, #9
 500:	ldr	w0, [sp, #84]
 504:	sxtw	x0, w0
 508:	add	x0, x1, x0
 50c:	str	x0, [sp, #112]
 510:	add	x0, sp, #0x30
 514:	mov	x4, x0
 518:	mov	x3, #0x20                  	// #32
 51c:	ldr	x2, [sp, #112]
 520:	mov	x1, #0x0                   	// #0
 524:	ldr	x0, [sp, #40]
 528:	bl	0 <grub_disk_read>
 52c:	cmp	w0, #0x0
 530:	b.ne	698 <grub_mod_init-0x298>  // b.any
 534:	add	x0, sp, #0x30
 538:	bl	36c <grub_mod_init-0x5c4>
 53c:	cmp	w0, #0x0
 540:	b.eq	6a0 <grub_mod_init-0x290>  // b.none
 544:	mov	x0, #0x40                  	// #64
 548:	bl	0 <grub_zalloc>
 54c:	str	x0, [sp, #120]
 550:	ldr	x0, [sp, #120]
 554:	cmp	x0, #0x0
 558:	b.eq	6a8 <grub_mod_init-0x288>  // b.none
 55c:	ldr	x0, [sp, #40]
 560:	bl	0 <grub_disk_get_size>
 564:	lsl	x19, x0, #9
 568:	ldr	w0, [sp, #56]
 56c:	bl	0 <grub_mod_init-0x930>
 570:	mov	w20, w0
 574:	ldr	w0, [sp, #68]
 578:	bl	0 <grub_mod_init-0x930>
 57c:	sub	w0, w20, w0
 580:	mov	w0, w0
 584:	sub	x1, x19, x0
 588:	ldr	x0, [sp, #120]
 58c:	str	x1, [x0, #40]
 590:	ldr	x0, [sp, #40]
 594:	bl	0 <grub_disk_get_size>
 598:	lsl	x19, x0, #9
 59c:	ldr	w0, [sp, #60]
 5a0:	bl	0 <grub_mod_init-0x930>
 5a4:	mov	w0, w0
 5a8:	sub	x1, x19, x0
 5ac:	ldr	x0, [sp, #120]
 5b0:	str	x1, [x0, #48]
 5b4:	ldr	w0, [sp, #64]
 5b8:	bl	0 <grub_mod_init-0x930>
 5bc:	mov	w1, w0
 5c0:	ldr	x0, [sp, #120]
 5c4:	str	x1, [x0, #56]
 5c8:	ldr	x0, [sp, #120]
 5cc:	ldr	x19, [x0, #40]
 5d0:	ldr	x0, [sp, #40]
 5d4:	bl	0 <grub_disk_get_size>
 5d8:	lsl	x0, x0, #9
 5dc:	cmp	x19, x0
 5e0:	b.cs	6b0 <grub_mod_init-0x280>  // b.hs, b.nlast
 5e4:	ldr	x0, [sp, #120]
 5e8:	ldr	x19, [x0, #48]
 5ec:	ldr	x0, [sp, #40]
 5f0:	bl	0 <grub_disk_get_size>
 5f4:	lsl	x0, x0, #9
 5f8:	cmp	x19, x0
 5fc:	b.ls	614 <grub_mod_init-0x31c>  // b.plast
 600:	ldr	x0, [sp, #40]
 604:	bl	0 <grub_disk_get_size>
 608:	lsl	x1, x0, #9
 60c:	ldr	x0, [sp, #120]
 610:	str	x1, [x0, #48]
 614:	ldr	x0, [sp, #120]
 618:	ldr	x1, [x0, #40]
 61c:	ldr	x0, [sp, #120]
 620:	str	x1, [x0, #16]
 624:	ldr	x0, [sp, #120]
 628:	ldr	x0, [x0, #40]
 62c:	add	x1, sp, #0x58
 630:	mov	x4, x1
 634:	mov	x3, #0x18                  	// #24
 638:	mov	x2, x0
 63c:	mov	x1, #0x0                   	// #0
 640:	ldr	x0, [sp, #40]
 644:	bl	0 <grub_disk_read>
 648:	cmp	w0, #0x0
 64c:	b.ne	6b8 <grub_mod_init-0x278>  // b.any
 650:	add	x3, sp, #0x58
 654:	mov	x2, #0x8                   	// #8
 658:	adrp	x0, 0 <grub_mod_init-0x930>
 65c:	add	x0, x0, #0x0
 660:	ldr	x1, [x0]
 664:	mov	x0, x3
 668:	bl	0 <grub_memcmp>
 66c:	cmp	w0, #0x0
 670:	b.ne	6c0 <grub_mod_init-0x270>  // b.any
 674:	ldr	x0, [sp, #120]
 678:	ldr	x1, [sp, #40]
 67c:	str	x1, [x0]
 680:	ldr	x0, [sp, #120]
 684:	b	6e4 <grub_mod_init-0x24c>
 688:	nop
 68c:	b	6c4 <grub_mod_init-0x26c>
 690:	nop
 694:	b	6c4 <grub_mod_init-0x26c>
 698:	nop
 69c:	b	6c4 <grub_mod_init-0x26c>
 6a0:	nop
 6a4:	b	6c4 <grub_mod_init-0x26c>
 6a8:	nop
 6ac:	b	6c4 <grub_mod_init-0x26c>
 6b0:	nop
 6b4:	b	6c4 <grub_mod_init-0x26c>
 6b8:	nop
 6bc:	b	6c4 <grub_mod_init-0x26c>
 6c0:	nop
 6c4:	ldr	x0, [sp, #120]
 6c8:	bl	0 <grub_free>
 6cc:	adrp	x0, 0 <grub_mod_init-0x930>
 6d0:	add	x0, x0, #0x0
 6d4:	ldr	x1, [x0]
 6d8:	mov	w0, #0x9                   	// #9
 6dc:	bl	0 <grub_error>
 6e0:	mov	x0, #0x0                   	// #0
 6e4:	ldp	x19, x20, [sp, #16]
 6e8:	ldp	x29, x30, [sp], #128
 6ec:	ret
	...
 700:	stp	x29, x30, [sp, #-64]!
 704:	mov	x29, sp
 708:	str	x0, [sp, #40]
 70c:	str	x1, [sp, #32]
 710:	str	x2, [sp, #24]
 714:	str	x3, [sp, #16]
 718:	ldr	x0, [sp, #40]
 71c:	ldr	x0, [x0]
 720:	bl	498 <grub_mod_init-0x498>
 724:	str	x0, [sp, #56]
 728:	ldr	x0, [sp, #56]
 72c:	cmp	x0, #0x0
 730:	b.ne	748 <grub_mod_init-0x1e8>  // b.any
 734:	adrp	x0, 0 <grub_mod_init-0x930>
 738:	add	x0, x0, #0x0
 73c:	ldr	x0, [x0]
 740:	ldr	w0, [x0]
 744:	b	778 <grub_mod_init-0x1b8>
 748:	ldr	x4, [sp, #16]
 74c:	ldr	x3, [sp, #24]
 750:	ldr	x2, [sp, #32]
 754:	adrp	x0, 0 <grub_mod_init-0x930>
 758:	add	x0, x0, #0x0
 75c:	ldr	x1, [x0]
 760:	ldr	x0, [sp, #56]
 764:	bl	0 <grub_archelp_dir>
 768:	str	w0, [sp, #52]
 76c:	ldr	x0, [sp, #56]
 770:	bl	0 <grub_free>
 774:	ldr	w0, [sp, #52]
 778:	ldp	x29, x30, [sp], #64
 77c:	ret
	...
 790:	stp	x29, x30, [sp, #-48]!
 794:	mov	x29, sp
 798:	str	x0, [sp, #24]
 79c:	str	x1, [sp, #16]
 7a0:	ldr	x0, [sp, #24]
 7a4:	ldr	x0, [x0, #8]
 7a8:	ldr	x0, [x0]
 7ac:	bl	498 <grub_mod_init-0x498>
 7b0:	str	x0, [sp, #40]
 7b4:	ldr	x0, [sp, #40]
 7b8:	cmp	x0, #0x0
 7bc:	b.ne	7d4 <grub_mod_init-0x15c>  // b.any
 7c0:	adrp	x0, 0 <grub_mod_init-0x930>
 7c4:	add	x0, x0, #0x0
 7c8:	ldr	x0, [x0]
 7cc:	ldr	w0, [x0]
 7d0:	b	828 <grub_mod_init-0x108>
 7d4:	ldr	x2, [sp, #16]
 7d8:	adrp	x0, 0 <grub_mod_init-0x930>
 7dc:	add	x0, x0, #0x0
 7e0:	ldr	x1, [x0]
 7e4:	ldr	x0, [sp, #40]
 7e8:	bl	0 <grub_archelp_open>
 7ec:	str	w0, [sp, #36]
 7f0:	ldr	w0, [sp, #36]
 7f4:	cmp	w0, #0x0
 7f8:	b.eq	808 <grub_mod_init-0x128>  // b.none
 7fc:	ldr	x0, [sp, #40]
 800:	bl	0 <grub_free>
 804:	b	824 <grub_mod_init-0x10c>
 808:	ldr	x0, [sp, #24]
 80c:	ldr	x1, [sp, #40]
 810:	str	x1, [x0, #80]
 814:	ldr	x0, [sp, #40]
 818:	ldr	x1, [x0, #32]
 81c:	ldr	x0, [sp, #24]
 820:	str	x1, [x0, #64]
 824:	ldr	w0, [sp, #36]
 828:	ldp	x29, x30, [sp], #48
 82c:	ret
	...
 840:	stp	x29, x30, [sp, #-64]!
 844:	mov	x29, sp
 848:	str	x0, [sp, #40]
 84c:	str	x1, [sp, #32]
 850:	str	x2, [sp, #24]
 854:	ldr	x0, [sp, #40]
 858:	ldr	x0, [x0, #80]
 85c:	str	x0, [sp, #56]
 860:	ldr	x0, [sp, #56]
 864:	ldr	x0, [x0]
 868:	ldr	x1, [sp, #40]
 86c:	ldr	x1, [x1, #88]
 870:	str	x1, [x0, #48]
 874:	ldr	x0, [sp, #56]
 878:	ldr	x0, [x0]
 87c:	ldr	x1, [sp, #40]
 880:	ldr	x1, [x1, #96]
 884:	str	x1, [x0, #56]
 888:	ldr	x0, [sp, #56]
 88c:	ldr	x5, [x0]
 890:	ldr	x0, [sp, #56]
 894:	ldr	x1, [x0, #24]
 898:	ldr	x0, [sp, #40]
 89c:	ldr	x0, [x0, #24]
 8a0:	add	x0, x1, x0
 8a4:	ldr	x4, [sp, #32]
 8a8:	ldr	x3, [sp, #24]
 8ac:	mov	x2, x0
 8b0:	mov	x1, #0x0                   	// #0
 8b4:	mov	x0, x5
 8b8:	bl	0 <grub_disk_read>
 8bc:	cmp	w0, #0x0
 8c0:	b.ne	8cc <grub_mod_init-0x64>  // b.any
 8c4:	ldr	x0, [sp, #24]
 8c8:	b	8d0 <grub_mod_init-0x60>
 8cc:	mov	x0, #0xffffffffffffffff    	// #-1
 8d0:	str	x0, [sp, #48]
 8d4:	ldr	x0, [sp, #56]
 8d8:	ldr	x0, [x0]
 8dc:	str	xzr, [x0, #48]
 8e0:	ldr	x0, [sp, #48]
 8e4:	ldp	x29, x30, [sp], #64
 8e8:	ret
 8ec:	stp	x29, x30, [sp, #-48]!
 8f0:	mov	x29, sp
 8f4:	str	x0, [sp, #24]
 8f8:	ldr	x0, [sp, #24]
 8fc:	ldr	x0, [x0, #80]
 900:	str	x0, [sp, #40]
 904:	ldr	x0, [sp, #40]
 908:	bl	0 <grub_free>
 90c:	adrp	x0, 0 <grub_mod_init-0x930>
 910:	add	x0, x0, #0x0
 914:	ldr	x0, [x0]
 918:	ldr	w0, [x0]
 91c:	ldp	x29, x30, [sp], #48
 920:	ret
 924:	nop
	...

0000000000000930 <grub_mod_init>:
 930:	stp	x29, x30, [sp, #-32]!
 934:	mov	x29, sp
 938:	str	x0, [sp, #24]
 93c:	adrp	x0, 0 <grub_mod_init-0x930>
 940:	add	x0, x0, #0x0
 944:	ldr	x0, [x0]
 948:	bl	18 <grub_mod_init-0x918>
 94c:	nop
 950:	ldp	x29, x30, [sp], #32
 954:	ret
	...

0000000000000960 <grub_mod_fini>:
 960:	stp	x29, x30, [sp, #-16]!
 964:	mov	x29, sp
 968:	adrp	x0, 0 <grub_mod_init-0x930>
 96c:	add	x0, x0, #0x0
 970:	ldr	x0, [x0]
 974:	bl	50 <grub_mod_init-0x8e0>
 978:	nop
 97c:	ldp	x29, x30, [sp], #16
 980:	ret
 984:	nop
	...
