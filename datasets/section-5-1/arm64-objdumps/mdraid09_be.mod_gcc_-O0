
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mdraid09_be.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x3f0>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	rev	w0, w0
  10:	add	sp, sp, #0x10
  14:	ret
  18:	stp	x29, x30, [sp, #-32]!
  1c:	mov	x29, sp
  20:	str	x0, [sp, #24]
  24:	ldr	x1, [sp, #24]
  28:	adrp	x0, 0 <grub_mod_init-0x3f0>
  2c:	add	x0, x0, #0x0
  30:	ldr	x0, [x0]
  34:	bl	0 <grub_list_push>
  38:	nop
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	nop
	...
  50:	stp	x29, x30, [sp, #-32]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #24]
  5c:	ldr	x0, [sp, #24]
  60:	bl	0 <grub_list_remove>
  64:	nop
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	stp	x29, x30, [sp, #-160]!
  74:	mov	x29, sp
  78:	stp	x19, x20, [sp, #16]
  7c:	str	x21, [sp, #32]
  80:	str	x0, [sp, #72]
  84:	str	x1, [sp, #64]
  88:	str	x2, [sp, #56]
  8c:	str	xzr, [sp, #144]
  90:	ldr	x0, [sp, #72]
  94:	bl	0 <grub_disk_get_size>
  98:	str	x0, [sp, #136]
  9c:	ldr	x0, [sp, #136]
  a0:	cmn	x0, #0x1
  a4:	b.ne	b0 <grub_mod_init-0x340>  // b.any
  a8:	mov	x0, #0x0                   	// #0
  ac:	b	3cc <grub_mod_init-0x24>
  b0:	ldr	x0, [sp, #136]
  b4:	and	x0, x0, #0xffffffffffffff80
  b8:	sub	x0, x0, #0x80
  bc:	str	x0, [sp, #128]
  c0:	mov	x0, #0x1000                	// #4096
  c4:	bl	0 <grub_malloc>
  c8:	str	x0, [sp, #144]
  cc:	ldr	x0, [sp, #144]
  d0:	cmp	x0, #0x0
  d4:	b.ne	e0 <grub_mod_init-0x310>  // b.any
  d8:	mov	x0, #0x0                   	// #0
  dc:	b	3cc <grub_mod_init-0x24>
  e0:	ldr	x4, [sp, #144]
  e4:	mov	x3, #0x1000                	// #4096
  e8:	mov	x2, #0x0                   	// #0
  ec:	ldr	x1, [sp, #128]
  f0:	ldr	x0, [sp, #72]
  f4:	bl	0 <grub_disk_read>
  f8:	cmp	w0, #0x0
  fc:	b.ne	394 <grub_mod_init-0x5c>  // b.any
 100:	ldr	x0, [sp, #144]
 104:	ldr	w1, [x0]
 108:	mov	w0, #0x2ba9                	// #11177
 10c:	movk	w0, #0xfc4e, lsl #16
 110:	cmp	w1, w0
 114:	b.ne	39c <grub_mod_init-0x54>  // b.any
 118:	ldr	x0, [sp, #144]
 11c:	ldr	w0, [x0, #4]
 120:	cmp	w0, #0x0
 124:	b.ne	3a4 <grub_mod_init-0x4c>  // b.any
 128:	ldr	x0, [sp, #144]
 12c:	ldr	w1, [x0, #8]
 130:	mov	w0, #0x5a000000            	// #1509949440
 134:	cmp	w1, w0
 138:	b.ne	3a4 <grub_mod_init-0x4c>  // b.any
 13c:	ldr	x0, [sp, #144]
 140:	ldr	w0, [x0, #32]
 144:	bl	0 <grub_mod_init-0x3f0>
 148:	mov	w0, w0
 14c:	lsl	x0, x0, #1
 150:	ldr	x1, [sp, #136]
 154:	cmp	x1, x0
 158:	b.ls	3ac <grub_mod_init-0x44>  // b.plast
 15c:	ldr	x0, [sp, #144]
 160:	ldr	w0, [x0, #28]
 164:	bl	0 <grub_mod_init-0x3f0>
 168:	str	w0, [sp, #156]
 16c:	ldr	w0, [sp, #156]
 170:	cmn	w0, #0x4
 174:	b.ne	180 <grub_mod_init-0x270>  // b.any
 178:	mov	w0, #0x1                   	// #1
 17c:	str	w0, [sp, #156]
 180:	ldr	w0, [sp, #156]
 184:	cmp	w0, #0x0
 188:	b.eq	1e4 <grub_mod_init-0x20c>  // b.none
 18c:	ldr	w0, [sp, #156]
 190:	cmp	w0, #0x1
 194:	b.eq	1e4 <grub_mod_init-0x20c>  // b.none
 198:	ldr	w0, [sp, #156]
 19c:	cmp	w0, #0x4
 1a0:	b.eq	1e4 <grub_mod_init-0x20c>  // b.none
 1a4:	ldr	w0, [sp, #156]
 1a8:	cmp	w0, #0x5
 1ac:	b.eq	1e4 <grub_mod_init-0x20c>  // b.none
 1b0:	ldr	w0, [sp, #156]
 1b4:	cmp	w0, #0x6
 1b8:	b.eq	1e4 <grub_mod_init-0x20c>  // b.none
 1bc:	ldr	w0, [sp, #156]
 1c0:	cmp	w0, #0xa
 1c4:	b.eq	1e4 <grub_mod_init-0x20c>  // b.none
 1c8:	ldr	w2, [sp, #156]
 1cc:	adrp	x0, 0 <grub_mod_init-0x3f0>
 1d0:	add	x0, x0, #0x0
 1d4:	ldr	x1, [x0]
 1d8:	mov	w0, #0x18                  	// #24
 1dc:	bl	0 <grub_error>
 1e0:	b	3c0 <grub_mod_init-0x30>
 1e4:	ldr	x0, [sp, #144]
 1e8:	ldr	w0, [x0, #3968]
 1ec:	bl	0 <grub_mod_init-0x3f0>
 1f0:	mov	w1, w0
 1f4:	mov	w0, #0xffff                	// #65535
 1f8:	cmp	w1, w0
 1fc:	b.eq	3b4 <grub_mod_init-0x3c>  // b.none
 200:	ldr	x0, [sp, #144]
 204:	ldr	w0, [x0, #3968]
 208:	bl	0 <grub_mod_init-0x3f0>
 20c:	mov	w1, w0
 210:	mov	w0, #0xfffe                	// #65534
 214:	cmp	w1, w0
 218:	b.eq	3b4 <grub_mod_init-0x3c>  // b.none
 21c:	mov	x0, #0x10                  	// #16
 220:	bl	0 <grub_malloc>
 224:	str	x0, [sp, #120]
 228:	ldr	x0, [sp, #120]
 22c:	cmp	x0, #0x0
 230:	b.eq	3bc <grub_mod_init-0x34>  // b.none
 234:	ldr	x0, [sp, #144]
 238:	ldr	w0, [x0, #20]
 23c:	bl	0 <grub_mod_init-0x3f0>
 240:	mov	w1, w0
 244:	ldr	x0, [sp, #120]
 248:	str	w1, [x0]
 24c:	ldr	x0, [sp, #144]
 250:	ldr	w1, [x0, #52]
 254:	ldr	x0, [sp, #120]
 258:	add	x19, x0, #0x4
 25c:	mov	w0, w1
 260:	bl	0 <grub_mod_init-0x3f0>
 264:	str	w0, [x19]
 268:	ldr	x0, [sp, #144]
 26c:	ldr	w1, [x0, #56]
 270:	ldr	x0, [sp, #120]
 274:	add	x19, x0, #0x8
 278:	mov	w0, w1
 27c:	bl	0 <grub_mod_init-0x3f0>
 280:	str	w0, [x19]
 284:	ldr	x0, [sp, #144]
 288:	ldr	w1, [x0, #60]
 28c:	ldr	x0, [sp, #120]
 290:	add	x19, x0, #0xc
 294:	mov	w0, w1
 298:	bl	0 <grub_mod_init-0x3f0>
 29c:	str	w0, [x19]
 2a0:	ldr	x0, [sp, #56]
 2a4:	str	xzr, [x0]
 2a8:	ldr	x0, [sp, #64]
 2ac:	str	xzr, [x0, #8]
 2b0:	ldr	x0, [sp, #144]
 2b4:	ldr	w0, [x0, #3968]
 2b8:	bl	0 <grub_mod_init-0x3f0>
 2bc:	mov	w1, w0
 2c0:	ldr	x0, [sp, #64]
 2c4:	str	w1, [x0]
 2c8:	ldr	x0, [sp, #144]
 2cc:	ldr	w0, [x0, #44]
 2d0:	bl	0 <grub_mod_init-0x3f0>
 2d4:	add	x4, sp, #0x50
 2d8:	mov	w3, w0
 2dc:	adrp	x0, 0 <grub_mod_init-0x3f0>
 2e0:	add	x0, x0, #0x0
 2e4:	ldr	x2, [x0]
 2e8:	mov	x1, #0x20                  	// #32
 2ec:	mov	x0, x4
 2f0:	bl	0 <grub_snprintf>
 2f4:	ldr	x0, [sp, #144]
 2f8:	ldr	w0, [x0, #40]
 2fc:	bl	0 <grub_mod_init-0x3f0>
 300:	mov	w21, w0
 304:	ldr	x0, [sp, #144]
 308:	ldr	w0, [x0, #32]
 30c:	cmp	w0, #0x0
 310:	b.eq	32c <grub_mod_init-0xc4>  // b.none
 314:	ldr	x0, [sp, #144]
 318:	ldr	w0, [x0, #32]
 31c:	bl	0 <grub_mod_init-0x3f0>
 320:	mov	w0, w0
 324:	lsl	x19, x0, #1
 328:	b	330 <grub_mod_init-0xc0>
 32c:	ldr	x19, [sp, #128]
 330:	ldr	x0, [sp, #144]
 334:	ldr	w0, [x0, #260]
 338:	bl	0 <grub_mod_init-0x3f0>
 33c:	lsr	w0, w0, #9
 340:	mov	w20, w0
 344:	ldr	x0, [sp, #144]
 348:	ldr	w0, [x0, #256]
 34c:	bl	0 <grub_mod_init-0x3f0>
 350:	mov	w2, w0
 354:	ldr	w1, [sp, #156]
 358:	add	x0, sp, #0x50
 35c:	mov	w7, w1
 360:	mov	w6, w2
 364:	mov	x5, x20
 368:	mov	x4, x19
 36c:	mov	x3, x0
 370:	mov	w2, w21
 374:	ldr	x1, [sp, #120]
 378:	mov	x0, #0x10                  	// #16
 37c:	bl	0 <grub_diskfilter_make_raid>
 380:	str	x0, [sp, #112]
 384:	ldr	x0, [sp, #144]
 388:	bl	0 <grub_free>
 38c:	ldr	x0, [sp, #112]
 390:	b	3cc <grub_mod_init-0x24>
 394:	nop
 398:	b	3c0 <grub_mod_init-0x30>
 39c:	nop
 3a0:	b	3c0 <grub_mod_init-0x30>
 3a4:	nop
 3a8:	b	3c0 <grub_mod_init-0x30>
 3ac:	nop
 3b0:	b	3c0 <grub_mod_init-0x30>
 3b4:	nop
 3b8:	b	3c0 <grub_mod_init-0x30>
 3bc:	nop
 3c0:	ldr	x0, [sp, #144]
 3c4:	bl	0 <grub_free>
 3c8:	mov	x0, #0x0                   	// #0
 3cc:	ldp	x19, x20, [sp, #16]
 3d0:	ldr	x21, [sp, #32]
 3d4:	ldp	x29, x30, [sp], #160
 3d8:	ret
 3dc:	nop
	...

00000000000003f0 <grub_mod_init>:
 3f0:	stp	x29, x30, [sp, #-32]!
 3f4:	mov	x29, sp
 3f8:	str	x0, [sp, #24]
 3fc:	adrp	x0, 0 <grub_mod_init-0x3f0>
 400:	add	x0, x0, #0x0
 404:	ldr	x0, [x0]
 408:	bl	18 <grub_mod_init-0x3d8>
 40c:	nop
 410:	ldp	x29, x30, [sp], #32
 414:	ret
	...

0000000000000420 <grub_mod_fini>:
 420:	stp	x29, x30, [sp, #-16]!
 424:	mov	x29, sp
 428:	adrp	x0, 0 <grub_mod_init-0x3f0>
 42c:	add	x0, x0, #0x0
 430:	ldr	x0, [x0]
 434:	bl	50 <grub_mod_init-0x3a0>
 438:	nop
 43c:	ldp	x29, x30, [sp], #16
 440:	ret
 444:	nop
	...
