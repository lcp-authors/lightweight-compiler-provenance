
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bz2.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001648 <.init>:
    1648:	stp	x29, x30, [sp, #-16]!
    164c:	mov	x29, sp
    1650:	bl	1940 <PyThread_free_lock@plt+0x10>
    1654:	ldp	x29, x30, [sp], #16
    1658:	ret

Disassembly of section .plt:

0000000000001660 <memcpy@plt-0x20>:
    1660:	stp	x16, x30, [sp, #-16]!
    1664:	adrp	x16, 13000 <PyInit__bz2@@Base+0x115ec>
    1668:	ldr	x17, [x16, #4088]
    166c:	add	x16, x16, #0xff8
    1670:	br	x17
    1674:	nop
    1678:	nop
    167c:	nop

0000000000001680 <memcpy@plt>:
    1680:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1684:	ldr	x17, [x16]
    1688:	add	x16, x16, #0x0
    168c:	br	x17

0000000000001690 <memmove@plt>:
    1690:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1694:	ldr	x17, [x16, #8]
    1698:	add	x16, x16, #0x8
    169c:	br	x17

00000000000016a0 <_PyBytes_Resize@plt>:
    16a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16a4:	ldr	x17, [x16, #16]
    16a8:	add	x16, x16, #0x10
    16ac:	br	x17

00000000000016b0 <PyEval_RestoreThread@plt>:
    16b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16b4:	ldr	x17, [x16, #24]
    16b8:	add	x16, x16, #0x18
    16bc:	br	x17

00000000000016c0 <PyMem_Free@plt>:
    16c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16c4:	ldr	x17, [x16, #32]
    16c8:	add	x16, x16, #0x20
    16cc:	br	x17

00000000000016d0 <PyBuffer_Release@plt>:
    16d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16d4:	ldr	x17, [x16, #40]
    16d8:	add	x16, x16, #0x28
    16dc:	br	x17

00000000000016e0 <__cxa_finalize@plt>:
    16e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16e4:	ldr	x17, [x16, #48]
    16e8:	add	x16, x16, #0x30
    16ec:	br	x17

00000000000016f0 <PyMem_RawMalloc@plt>:
    16f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16f4:	ldr	x17, [x16, #56]
    16f8:	add	x16, x16, #0x38
    16fc:	br	x17

0000000000001700 <PyBuffer_IsContiguous@plt>:
    1700:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1704:	ldr	x17, [x16, #64]
    1708:	add	x16, x16, #0x40
    170c:	br	x17

0000000000001710 <PyBytes_FromStringAndSize@plt>:
    1710:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1714:	ldr	x17, [x16, #72]
    1718:	add	x16, x16, #0x48
    171c:	br	x17

0000000000001720 <_Py_Dealloc@plt>:
    1720:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1724:	ldr	x17, [x16, #80]
    1728:	add	x16, x16, #0x50
    172c:	br	x17

0000000000001730 <PyErr_NoMemory@plt>:
    1730:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1734:	ldr	x17, [x16, #88]
    1738:	add	x16, x16, #0x58
    173c:	br	x17

0000000000001740 <PyThread_acquire_lock@plt>:
    1740:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1744:	ldr	x17, [x16, #96]
    1748:	add	x16, x16, #0x60
    174c:	br	x17

0000000000001750 <_PyArg_UnpackKeywords@plt>:
    1750:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1754:	ldr	x17, [x16, #104]
    1758:	add	x16, x16, #0x68
    175c:	br	x17

0000000000001760 <PyErr_SetString@plt>:
    1760:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1764:	ldr	x17, [x16, #112]
    1768:	add	x16, x16, #0x70
    176c:	br	x17

0000000000001770 <BZ2_bzDecompressInit@plt>:
    1770:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1774:	ldr	x17, [x16, #120]
    1778:	add	x16, x16, #0x78
    177c:	br	x17

0000000000001780 <BZ2_bzDecompressEnd@plt>:
    1780:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1784:	ldr	x17, [x16, #128]
    1788:	add	x16, x16, #0x80
    178c:	br	x17

0000000000001790 <PyMem_Realloc@plt>:
    1790:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1794:	ldr	x17, [x16, #136]
    1798:	add	x16, x16, #0x88
    179c:	br	x17

00000000000017a0 <PyErr_SetNone@plt>:
    17a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17a4:	ldr	x17, [x16, #144]
    17a8:	add	x16, x16, #0x90
    17ac:	br	x17

00000000000017b0 <BZ2_bzCompressInit@plt>:
    17b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17b4:	ldr	x17, [x16, #152]
    17b8:	add	x16, x16, #0x98
    17bc:	br	x17

00000000000017c0 <PyType_Ready@plt>:
    17c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17c4:	ldr	x17, [x16, #160]
    17c8:	add	x16, x16, #0xa0
    17cc:	br	x17

00000000000017d0 <PyLong_AsSsize_t@plt>:
    17d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17d4:	ldr	x17, [x16, #168]
    17d8:	add	x16, x16, #0xa8
    17dc:	br	x17

00000000000017e0 <_PyArg_BadArgument@plt>:
    17e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17e4:	ldr	x17, [x16, #176]
    17e8:	add	x16, x16, #0xb0
    17ec:	br	x17

00000000000017f0 <BZ2_bzCompressEnd@plt>:
    17f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17f4:	ldr	x17, [x16, #184]
    17f8:	add	x16, x16, #0xb8
    17fc:	br	x17

0000000000001800 <_PyArg_NoPositional@plt>:
    1800:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1804:	ldr	x17, [x16, #192]
    1808:	add	x16, x16, #0xc0
    180c:	br	x17

0000000000001810 <__gmon_start__@plt>:
    1810:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1814:	ldr	x17, [x16, #200]
    1818:	add	x16, x16, #0xc8
    181c:	br	x17

0000000000001820 <_PyArg_CheckPositional@plt>:
    1820:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1824:	ldr	x17, [x16, #208]
    1828:	add	x16, x16, #0xd0
    182c:	br	x17

0000000000001830 <PyErr_Occurred@plt>:
    1830:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1834:	ldr	x17, [x16, #216]
    1838:	add	x16, x16, #0xd8
    183c:	br	x17

0000000000001840 <PyModule_Create2@plt>:
    1840:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1844:	ldr	x17, [x16, #224]
    1848:	add	x16, x16, #0xe0
    184c:	br	x17

0000000000001850 <BZ2_bzCompress@plt>:
    1850:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1854:	ldr	x17, [x16, #232]
    1858:	add	x16, x16, #0xe8
    185c:	br	x17

0000000000001860 <PyMem_RawFree@plt>:
    1860:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1864:	ldr	x17, [x16, #240]
    1868:	add	x16, x16, #0xf0
    186c:	br	x17

0000000000001870 <PyThread_allocate_lock@plt>:
    1870:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1874:	ldr	x17, [x16, #248]
    1878:	add	x16, x16, #0xf8
    187c:	br	x17

0000000000001880 <BZ2_bzDecompress@plt>:
    1880:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1884:	ldr	x17, [x16, #256]
    1888:	add	x16, x16, #0x100
    188c:	br	x17

0000000000001890 <PyThread_release_lock@plt>:
    1890:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1894:	ldr	x17, [x16, #264]
    1898:	add	x16, x16, #0x108
    189c:	br	x17

00000000000018a0 <PyObject_GetBuffer@plt>:
    18a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18a4:	ldr	x17, [x16, #272]
    18a8:	add	x16, x16, #0x110
    18ac:	br	x17

00000000000018b0 <PyEval_SaveThread@plt>:
    18b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18b4:	ldr	x17, [x16, #280]
    18b8:	add	x16, x16, #0x118
    18bc:	br	x17

00000000000018c0 <PyModule_AddObject@plt>:
    18c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18c4:	ldr	x17, [x16, #288]
    18c8:	add	x16, x16, #0x120
    18cc:	br	x17

00000000000018d0 <PyType_IsSubtype@plt>:
    18d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18d4:	ldr	x17, [x16, #296]
    18d8:	add	x16, x16, #0x128
    18dc:	br	x17

00000000000018e0 <PyErr_Format@plt>:
    18e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18e4:	ldr	x17, [x16, #304]
    18e8:	add	x16, x16, #0x130
    18ec:	br	x17

00000000000018f0 <PyNumber_Index@plt>:
    18f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18f4:	ldr	x17, [x16, #312]
    18f8:	add	x16, x16, #0x138
    18fc:	br	x17

0000000000001900 <_PyArg_NoKeywords@plt>:
    1900:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1904:	ldr	x17, [x16, #320]
    1908:	add	x16, x16, #0x140
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1914:	ldr	x17, [x16, #328]
    1918:	add	x16, x16, #0x148
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1924:	ldr	x17, [x16, #336]
    1928:	add	x16, x16, #0x150
    192c:	br	x17

0000000000001930 <PyThread_free_lock@plt>:
    1930:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1934:	ldr	x17, [x16, #344]
    1938:	add	x16, x16, #0x158
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__bz2@@Base-0xd4>:
    1940:	adrp	x0, 13000 <PyInit__bz2@@Base+0x115ec>
    1944:	ldr	x0, [x0, #4040]
    1948:	cbz	x0, 1950 <PyThread_free_lock@plt+0x20>
    194c:	b	1810 <__gmon_start__@plt>
    1950:	ret
    1954:	nop
    1958:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    195c:	add	x0, x0, #0x690
    1960:	adrp	x1, 14000 <PyInit__bz2@@Base+0x125ec>
    1964:	add	x1, x1, #0x690
    1968:	cmp	x1, x0
    196c:	b.eq	1984 <PyThread_free_lock@plt+0x54>  // b.none
    1970:	adrp	x1, 13000 <PyInit__bz2@@Base+0x115ec>
    1974:	ldr	x1, [x1, #3976]
    1978:	cbz	x1, 1984 <PyThread_free_lock@plt+0x54>
    197c:	mov	x16, x1
    1980:	br	x16
    1984:	ret
    1988:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    198c:	add	x0, x0, #0x690
    1990:	adrp	x1, 14000 <PyInit__bz2@@Base+0x125ec>
    1994:	add	x1, x1, #0x690
    1998:	sub	x1, x1, x0
    199c:	lsr	x2, x1, #63
    19a0:	add	x1, x2, x1, asr #3
    19a4:	cmp	xzr, x1, asr #1
    19a8:	asr	x1, x1, #1
    19ac:	b.eq	19c4 <PyThread_free_lock@plt+0x94>  // b.none
    19b0:	adrp	x2, 13000 <PyInit__bz2@@Base+0x115ec>
    19b4:	ldr	x2, [x2, #4064]
    19b8:	cbz	x2, 19c4 <PyThread_free_lock@plt+0x94>
    19bc:	mov	x16, x2
    19c0:	br	x16
    19c4:	ret
    19c8:	stp	x29, x30, [sp, #-32]!
    19cc:	mov	x29, sp
    19d0:	str	x19, [sp, #16]
    19d4:	adrp	x19, 14000 <PyInit__bz2@@Base+0x125ec>
    19d8:	ldrb	w0, [x19, #1680]
    19dc:	cbnz	w0, 1a04 <PyThread_free_lock@plt+0xd4>
    19e0:	adrp	x0, 13000 <PyInit__bz2@@Base+0x115ec>
    19e4:	ldr	x0, [x0, #3992]
    19e8:	cbz	x0, 19f8 <PyThread_free_lock@plt+0xc8>
    19ec:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    19f0:	ldr	x0, [x0, #352]
    19f4:	bl	16e0 <__cxa_finalize@plt>
    19f8:	bl	1958 <PyThread_free_lock@plt+0x28>
    19fc:	mov	w0, #0x1                   	// #1
    1a00:	strb	w0, [x19, #1680]
    1a04:	ldr	x19, [sp, #16]
    1a08:	ldp	x29, x30, [sp], #32
    1a0c:	ret
    1a10:	b	1988 <PyThread_free_lock@plt+0x58>

0000000000001a14 <PyInit__bz2@@Base>:
    1a14:	stp	x29, x30, [sp, #-32]!
    1a18:	stp	x20, x19, [sp, #16]
    1a1c:	mov	x29, sp
    1a20:	adrp	x19, 14000 <PyInit__bz2@@Base+0x125ec>
    1a24:	add	x19, x19, #0x350
    1a28:	mov	x0, x19
    1a2c:	bl	17c0 <PyType_Ready@plt>
    1a30:	tbnz	w0, #31, 1aac <PyInit__bz2@@Base+0x98>
    1a34:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    1a38:	add	x0, x0, #0x4f0
    1a3c:	bl	17c0 <PyType_Ready@plt>
    1a40:	tbnz	w0, #31, 1aac <PyInit__bz2@@Base+0x98>
    1a44:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    1a48:	add	x0, x0, #0x2e8
    1a4c:	mov	w1, #0x3f5                 	// #1013
    1a50:	bl	1840 <PyModule_Create2@plt>
    1a54:	mov	x20, x0
    1a58:	cbz	x0, 1a9c <PyInit__bz2@@Base+0x88>
    1a5c:	ldr	x8, [x19]
    1a60:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1a64:	add	x1, x1, #0x137
    1a68:	mov	x0, x20
    1a6c:	add	x8, x8, #0x1
    1a70:	mov	x2, x19
    1a74:	str	x8, [x19]
    1a78:	bl	18c0 <PyModule_AddObject@plt>
    1a7c:	ldr	x8, [x19, #416]
    1a80:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1a84:	add	x2, x19, #0x1a0
    1a88:	add	x1, x1, #0x359
    1a8c:	add	x8, x8, #0x1
    1a90:	mov	x0, x20
    1a94:	str	x8, [x19, #416]
    1a98:	bl	18c0 <PyModule_AddObject@plt>
    1a9c:	mov	x0, x20
    1aa0:	ldp	x20, x19, [sp, #16]
    1aa4:	ldp	x29, x30, [sp], #32
    1aa8:	ret
    1aac:	mov	x20, xzr
    1ab0:	mov	x0, x20
    1ab4:	ldp	x20, x19, [sp, #16]
    1ab8:	ldp	x29, x30, [sp], #32
    1abc:	ret
    1ac0:	stp	x29, x30, [sp, #-32]!
    1ac4:	str	x19, [sp, #16]
    1ac8:	mov	x29, sp
    1acc:	mov	x19, x0
    1ad0:	add	x0, x0, #0x10
    1ad4:	bl	17f0 <BZ2_bzCompressEnd@plt>
    1ad8:	ldr	x0, [x19, #104]
    1adc:	cbz	x0, 1ae4 <PyInit__bz2@@Base+0xd0>
    1ae0:	bl	1930 <PyThread_free_lock@plt>
    1ae4:	ldr	x8, [x19, #8]
    1ae8:	mov	x0, x19
    1aec:	ldr	x19, [sp, #16]
    1af0:	ldr	x1, [x8, #320]
    1af4:	ldp	x29, x30, [sp], #32
    1af8:	br	x1
    1afc:	stp	x29, x30, [sp, #-32]!
    1b00:	stp	x20, x19, [sp, #16]
    1b04:	mov	x29, sp
    1b08:	mov	x20, x1
    1b0c:	mov	x19, x0
    1b10:	cbz	x2, 1b3c <PyInit__bz2@@Base+0x128>
    1b14:	ldr	x8, [x19, #8]
    1b18:	adrp	x9, 14000 <PyInit__bz2@@Base+0x125ec>
    1b1c:	add	x9, x9, #0x350
    1b20:	cmp	x8, x9
    1b24:	b.ne	1b3c <PyInit__bz2@@Base+0x128>  // b.any
    1b28:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    1b2c:	add	x0, x0, #0x137
    1b30:	mov	x1, x2
    1b34:	bl	1900 <_PyArg_NoKeywords@plt>
    1b38:	cbz	w0, 1c54 <PyInit__bz2@@Base+0x240>
    1b3c:	ldr	x1, [x20, #16]
    1b40:	cmp	x1, #0x2
    1b44:	b.cc	1b64 <PyInit__bz2@@Base+0x150>  // b.lo, b.ul, b.last
    1b48:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    1b4c:	add	x0, x0, #0x137
    1b50:	mov	w3, #0x1                   	// #1
    1b54:	mov	x2, xzr
    1b58:	bl	1820 <_PyArg_CheckPositional@plt>
    1b5c:	cbz	w0, 1c54 <PyInit__bz2@@Base+0x240>
    1b60:	ldr	x1, [x20, #16]
    1b64:	cmp	x1, #0x1
    1b68:	b.lt	1ba8 <PyInit__bz2@@Base+0x194>  // b.tstop
    1b6c:	ldr	x8, [x20, #24]
    1b70:	ldr	x0, [x8, #8]
    1b74:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1b78:	ldr	x8, [x8, #3984]
    1b7c:	cmp	x0, x8
    1b80:	b.eq	1b94 <PyInit__bz2@@Base+0x180>  // b.none
    1b84:	adrp	x1, 13000 <PyInit__bz2@@Base+0x115ec>
    1b88:	ldr	x1, [x1, #3984]
    1b8c:	bl	18d0 <PyType_IsSubtype@plt>
    1b90:	cbz	w0, 1c10 <PyInit__bz2@@Base+0x1fc>
    1b94:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1b98:	ldr	x8, [x8, #4024]
    1b9c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1ba0:	add	x1, x1, #0x2f1
    1ba4:	b	1c4c <PyInit__bz2@@Base+0x238>
    1ba8:	mov	w20, #0x9                   	// #9
    1bac:	bl	1870 <PyThread_allocate_lock@plt>
    1bb0:	str	x0, [x19, #104]
    1bb4:	cbz	x0, 1bfc <PyInit__bz2@@Base+0x1e8>
    1bb8:	adrp	x8, 2000 <PyInit__bz2@@Base+0x5ec>
    1bbc:	adrp	x9, 2000 <PyInit__bz2@@Base+0x5ec>
    1bc0:	add	x0, x19, #0x10
    1bc4:	add	x8, x8, #0x1a4
    1bc8:	add	x9, x9, #0x1dc
    1bcc:	mov	w1, w20
    1bd0:	mov	w2, wzr
    1bd4:	mov	w3, wzr
    1bd8:	str	x8, [x19, #72]
    1bdc:	stp	x9, xzr, [x19, #80]
    1be0:	bl	17b0 <BZ2_bzCompressInit@plt>
    1be4:	bl	20ac <PyInit__bz2@@Base+0x698>
    1be8:	cbz	w0, 1c58 <PyInit__bz2@@Base+0x244>
    1bec:	ldr	x0, [x19, #104]
    1bf0:	bl	1930 <PyThread_free_lock@plt>
    1bf4:	str	xzr, [x19, #104]
    1bf8:	b	1c54 <PyInit__bz2@@Base+0x240>
    1bfc:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1c00:	ldr	x8, [x8, #4008]
    1c04:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1c08:	add	x1, x1, #0x33c
    1c0c:	b	1c4c <PyInit__bz2@@Base+0x238>
    1c10:	ldr	x0, [x20, #24]
    1c14:	bl	1910 <_PyLong_AsInt@plt>
    1c18:	cmn	w0, #0x1
    1c1c:	b.eq	1c34 <PyInit__bz2@@Base+0x220>  // b.none
    1c20:	sub	w8, w0, #0x1
    1c24:	mov	w20, w0
    1c28:	cmp	w8, #0x9
    1c2c:	b.cc	1bac <PyInit__bz2@@Base+0x198>  // b.lo, b.ul, b.last
    1c30:	b	1c3c <PyInit__bz2@@Base+0x228>
    1c34:	bl	1830 <PyErr_Occurred@plt>
    1c38:	cbnz	x0, 1c54 <PyInit__bz2@@Base+0x240>
    1c3c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1c40:	ldr	x8, [x8, #4016]
    1c44:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1c48:	add	x1, x1, #0x316
    1c4c:	ldr	x0, [x8]
    1c50:	bl	1760 <PyErr_SetString@plt>
    1c54:	mov	w0, #0xffffffff            	// #-1
    1c58:	ldp	x20, x19, [sp, #16]
    1c5c:	ldp	x29, x30, [sp], #32
    1c60:	ret
    1c64:	sub	sp, sp, #0x70
    1c68:	stp	x29, x30, [sp, #80]
    1c6c:	stp	x20, x19, [sp, #96]
    1c70:	add	x29, sp, #0x50
    1c74:	mov	x20, x1
    1c78:	mov	x19, x0
    1c7c:	movi	v0.2d, #0x0
    1c80:	mov	x1, sp
    1c84:	mov	x0, x20
    1c88:	mov	w2, wzr
    1c8c:	stp	q0, q0, [sp, #48]
    1c90:	stp	q0, q0, [sp, #16]
    1c94:	str	q0, [sp]
    1c98:	bl	18a0 <PyObject_GetBuffer@plt>
    1c9c:	cbz	w0, 1ca8 <PyInit__bz2@@Base+0x294>
    1ca0:	mov	x20, xzr
    1ca4:	b	1d60 <PyInit__bz2@@Base+0x34c>
    1ca8:	mov	x0, sp
    1cac:	mov	w1, #0x43                  	// #67
    1cb0:	bl	1700 <PyBuffer_IsContiguous@plt>
    1cb4:	cbz	w0, 1cf0 <PyInit__bz2@@Base+0x2dc>
    1cb8:	ldr	x0, [x19, #104]
    1cbc:	mov	w1, wzr
    1cc0:	bl	1740 <PyThread_acquire_lock@plt>
    1cc4:	cbz	w0, 1d18 <PyInit__bz2@@Base+0x304>
    1cc8:	ldr	w8, [x19, #96]
    1ccc:	cbz	w8, 1d40 <PyInit__bz2@@Base+0x32c>
    1cd0:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1cd4:	ldr	x8, [x8, #4016]
    1cd8:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1cdc:	add	x1, x1, #0x166
    1ce0:	ldr	x0, [x8]
    1ce4:	bl	1760 <PyErr_SetString@plt>
    1ce8:	mov	x20, xzr
    1cec:	b	1d58 <PyInit__bz2@@Base+0x344>
    1cf0:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    1cf4:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1cf8:	adrp	x2, 3000 <PyInit__bz2@@Base+0x15ec>
    1cfc:	add	x0, x0, #0x36b
    1d00:	add	x1, x1, #0x14b
    1d04:	add	x2, x2, #0x154
    1d08:	mov	x3, x20
    1d0c:	bl	17e0 <_PyArg_BadArgument@plt>
    1d10:	mov	x20, xzr
    1d14:	b	1d60 <PyInit__bz2@@Base+0x34c>
    1d18:	bl	18b0 <PyEval_SaveThread@plt>
    1d1c:	ldr	x8, [x19, #104]
    1d20:	mov	x20, x0
    1d24:	mov	w1, #0x1                   	// #1
    1d28:	mov	x0, x8
    1d2c:	bl	1740 <PyThread_acquire_lock@plt>
    1d30:	mov	x0, x20
    1d34:	bl	16b0 <PyEval_RestoreThread@plt>
    1d38:	ldr	w8, [x19, #96]
    1d3c:	cbnz	w8, 1cd0 <PyInit__bz2@@Base+0x2bc>
    1d40:	ldr	x1, [sp]
    1d44:	ldr	x2, [sp, #16]
    1d48:	mov	x0, x19
    1d4c:	mov	w3, wzr
    1d50:	bl	1e2c <PyInit__bz2@@Base+0x418>
    1d54:	mov	x20, x0
    1d58:	ldr	x0, [x19, #104]
    1d5c:	bl	1890 <PyThread_release_lock@plt>
    1d60:	ldr	x8, [sp, #8]
    1d64:	cbz	x8, 1d70 <PyInit__bz2@@Base+0x35c>
    1d68:	mov	x0, sp
    1d6c:	bl	16d0 <PyBuffer_Release@plt>
    1d70:	mov	x0, x20
    1d74:	ldp	x20, x19, [sp, #96]
    1d78:	ldp	x29, x30, [sp, #80]
    1d7c:	add	sp, sp, #0x70
    1d80:	ret
    1d84:	stp	x29, x30, [sp, #-32]!
    1d88:	stp	x20, x19, [sp, #16]
    1d8c:	mov	x29, sp
    1d90:	mov	x19, x0
    1d94:	ldr	x0, [x0, #104]
    1d98:	mov	w1, wzr
    1d9c:	bl	1740 <PyThread_acquire_lock@plt>
    1da0:	cbz	w0, 1dcc <PyInit__bz2@@Base+0x3b8>
    1da4:	ldr	w8, [x19, #96]
    1da8:	cbz	w8, 1df4 <PyInit__bz2@@Base+0x3e0>
    1dac:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1db0:	ldr	x8, [x8, #4016]
    1db4:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1db8:	add	x1, x1, #0x2d8
    1dbc:	ldr	x0, [x8]
    1dc0:	bl	1760 <PyErr_SetString@plt>
    1dc4:	mov	x20, xzr
    1dc8:	b	1e14 <PyInit__bz2@@Base+0x400>
    1dcc:	bl	18b0 <PyEval_SaveThread@plt>
    1dd0:	ldr	x8, [x19, #104]
    1dd4:	mov	x20, x0
    1dd8:	mov	w1, #0x1                   	// #1
    1ddc:	mov	x0, x8
    1de0:	bl	1740 <PyThread_acquire_lock@plt>
    1de4:	mov	x0, x20
    1de8:	bl	16b0 <PyEval_RestoreThread@plt>
    1dec:	ldr	w8, [x19, #96]
    1df0:	cbnz	w8, 1dac <PyInit__bz2@@Base+0x398>
    1df4:	mov	w8, #0x1                   	// #1
    1df8:	mov	w3, #0x2                   	// #2
    1dfc:	mov	x0, x19
    1e00:	mov	x1, xzr
    1e04:	mov	x2, xzr
    1e08:	str	w8, [x19, #96]
    1e0c:	bl	1e2c <PyInit__bz2@@Base+0x418>
    1e10:	mov	x20, x0
    1e14:	ldr	x0, [x19, #104]
    1e18:	bl	1890 <PyThread_release_lock@plt>
    1e1c:	mov	x0, x20
    1e20:	ldp	x20, x19, [sp, #16]
    1e24:	ldp	x29, x30, [sp], #32
    1e28:	ret
    1e2c:	sub	sp, sp, #0x70
    1e30:	stp	x29, x30, [sp, #16]
    1e34:	stp	x28, x27, [sp, #32]
    1e38:	stp	x26, x25, [sp, #48]
    1e3c:	stp	x24, x23, [sp, #64]
    1e40:	stp	x22, x21, [sp, #80]
    1e44:	stp	x20, x19, [sp, #96]
    1e48:	add	x29, sp, #0x10
    1e4c:	mov	x22, x1
    1e50:	mov	x21, x0
    1e54:	mov	w1, #0x2000                	// #8192
    1e58:	mov	x0, xzr
    1e5c:	mov	w19, w3
    1e60:	mov	x20, x2
    1e64:	mov	w24, #0x2000                	// #8192
    1e68:	bl	1710 <PyBytes_FromStringAndSize@plt>
    1e6c:	str	x0, [sp, #8]
    1e70:	cbz	x0, 208c <PyInit__bz2@@Base+0x678>
    1e74:	mov	x23, x21
    1e78:	add	x8, x0, #0x20
    1e7c:	str	x22, [x23, #16]!
    1e80:	str	x8, [x23, #24]
    1e84:	mov	w8, wzr
    1e88:	mov	x22, xzr
    1e8c:	mov	w26, #0xffffffff            	// #-1
    1e90:	str	wzr, [x23, #8]
    1e94:	str	w24, [x23, #32]
    1e98:	cbnz	w19, 1ea4 <PyInit__bz2@@Base+0x490>
    1e9c:	b	1f68 <PyInit__bz2@@Base+0x554>
    1ea0:	ldr	w8, [x21, #24]
    1ea4:	cbz	x20, 1ebc <PyInit__bz2@@Base+0x4a8>
    1ea8:	cbnz	w8, 1ebc <PyInit__bz2@@Base+0x4a8>
    1eac:	cmp	x20, x26
    1eb0:	csel	x8, x20, x26, cc  // cc = lo, ul, last
    1eb4:	sub	x20, x20, x8
    1eb8:	str	w8, [x21, #24]
    1ebc:	ldr	w8, [x21, #48]
    1ec0:	cbnz	w8, 1f14 <PyInit__bz2@@Base+0x500>
    1ec4:	ldr	x8, [sp, #8]
    1ec8:	ldr	x9, [x8, #16]
    1ecc:	subs	x8, x9, x22
    1ed0:	b.ne	1f08 <PyInit__bz2@@Base+0x4f4>  // b.any
    1ed4:	add	x8, x9, x9, lsr #3
    1ed8:	add	x1, x8, #0x6
    1edc:	cmp	x1, x9
    1ee0:	b.ls	2054 <PyInit__bz2@@Base+0x640>  // b.plast
    1ee4:	add	x0, sp, #0x8
    1ee8:	bl	16a0 <_PyBytes_Resize@plt>
    1eec:	tbnz	w0, #31, 206c <PyInit__bz2@@Base+0x658>
    1ef0:	ldr	x8, [sp, #8]
    1ef4:	add	x9, x8, x22
    1ef8:	add	x9, x9, #0x20
    1efc:	str	x9, [x21, #40]
    1f00:	ldr	x8, [x8, #16]
    1f04:	sub	x8, x8, x22
    1f08:	cmp	x8, x26
    1f0c:	csel	x8, x8, x26, cc  // cc = lo, ul, last
    1f10:	str	w8, [x21, #48]
    1f14:	bl	18b0 <PyEval_SaveThread@plt>
    1f18:	ldr	x27, [x21, #40]
    1f1c:	mov	x25, x0
    1f20:	mov	x0, x23
    1f24:	mov	w1, w19
    1f28:	bl	1850 <BZ2_bzCompress@plt>
    1f2c:	ldr	x28, [x21, #40]
    1f30:	mov	w24, w0
    1f34:	mov	x0, x25
    1f38:	bl	16b0 <PyEval_RestoreThread@plt>
    1f3c:	mov	w0, w24
    1f40:	bl	20ac <PyInit__bz2@@Base+0x698>
    1f44:	cbnz	w0, 206c <PyInit__bz2@@Base+0x658>
    1f48:	sub	x8, x28, x27
    1f4c:	cmp	w19, #0x2
    1f50:	add	x22, x8, x22
    1f54:	b.ne	1ea0 <PyInit__bz2@@Base+0x48c>  // b.any
    1f58:	cmp	w24, #0x4
    1f5c:	b.ne	1ea0 <PyInit__bz2@@Base+0x48c>  // b.any
    1f60:	b	202c <PyInit__bz2@@Base+0x618>
    1f64:	ldr	w8, [x21, #24]
    1f68:	cbz	x20, 1f84 <PyInit__bz2@@Base+0x570>
    1f6c:	cbnz	w8, 1f84 <PyInit__bz2@@Base+0x570>
    1f70:	cmp	x20, x26
    1f74:	csel	x8, x20, x26, cc  // cc = lo, ul, last
    1f78:	str	w8, [x21, #24]
    1f7c:	sub	x20, x20, x8
    1f80:	b	1f88 <PyInit__bz2@@Base+0x574>
    1f84:	cbz	w8, 202c <PyInit__bz2@@Base+0x618>
    1f88:	ldr	w8, [x21, #48]
    1f8c:	cbnz	w8, 1fe0 <PyInit__bz2@@Base+0x5cc>
    1f90:	ldr	x8, [sp, #8]
    1f94:	ldr	x9, [x8, #16]
    1f98:	subs	x8, x9, x22
    1f9c:	b.ne	1fd4 <PyInit__bz2@@Base+0x5c0>  // b.any
    1fa0:	add	x8, x9, x9, lsr #3
    1fa4:	add	x1, x8, #0x6
    1fa8:	cmp	x1, x9
    1fac:	b.ls	2054 <PyInit__bz2@@Base+0x640>  // b.plast
    1fb0:	add	x0, sp, #0x8
    1fb4:	bl	16a0 <_PyBytes_Resize@plt>
    1fb8:	tbnz	w0, #31, 206c <PyInit__bz2@@Base+0x658>
    1fbc:	ldr	x8, [sp, #8]
    1fc0:	add	x9, x8, x22
    1fc4:	add	x9, x9, #0x20
    1fc8:	str	x9, [x21, #40]
    1fcc:	ldr	x8, [x8, #16]
    1fd0:	sub	x8, x8, x22
    1fd4:	cmp	x8, x26
    1fd8:	csel	x8, x8, x26, cc  // cc = lo, ul, last
    1fdc:	str	w8, [x21, #48]
    1fe0:	bl	18b0 <PyEval_SaveThread@plt>
    1fe4:	ldr	x27, [x21, #40]
    1fe8:	mov	x25, x0
    1fec:	mov	x0, x23
    1ff0:	mov	w1, wzr
    1ff4:	bl	1850 <BZ2_bzCompress@plt>
    1ff8:	ldr	x28, [x21, #40]
    1ffc:	mov	w24, w0
    2000:	mov	x0, x25
    2004:	bl	16b0 <PyEval_RestoreThread@plt>
    2008:	mov	w0, w24
    200c:	bl	20ac <PyInit__bz2@@Base+0x698>
    2010:	cbnz	w0, 206c <PyInit__bz2@@Base+0x658>
    2014:	sub	x8, x28, x27
    2018:	cmp	w19, #0x2
    201c:	add	x22, x8, x22
    2020:	b.ne	1f64 <PyInit__bz2@@Base+0x550>  // b.any
    2024:	cmp	w24, #0x4
    2028:	b.ne	1f64 <PyInit__bz2@@Base+0x550>  // b.any
    202c:	ldr	x0, [sp, #8]
    2030:	ldr	x8, [x0, #16]
    2034:	cmp	x22, x8
    2038:	b.eq	208c <PyInit__bz2@@Base+0x678>  // b.none
    203c:	add	x0, sp, #0x8
    2040:	mov	x1, x22
    2044:	bl	16a0 <_PyBytes_Resize@plt>
    2048:	tbnz	w0, #31, 206c <PyInit__bz2@@Base+0x658>
    204c:	ldr	x0, [sp, #8]
    2050:	b	208c <PyInit__bz2@@Base+0x678>
    2054:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2058:	ldr	x8, [x8, #4048]
    205c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2060:	add	x1, x1, #0x182
    2064:	ldr	x0, [x8]
    2068:	bl	1760 <PyErr_SetString@plt>
    206c:	ldr	x0, [sp, #8]
    2070:	cbz	x0, 208c <PyInit__bz2@@Base+0x678>
    2074:	ldr	x8, [x0]
    2078:	subs	x8, x8, #0x1
    207c:	str	x8, [x0]
    2080:	b.ne	2088 <PyInit__bz2@@Base+0x674>  // b.any
    2084:	bl	1720 <_Py_Dealloc@plt>
    2088:	mov	x0, xzr
    208c:	ldp	x20, x19, [sp, #96]
    2090:	ldp	x22, x21, [sp, #80]
    2094:	ldp	x24, x23, [sp, #64]
    2098:	ldp	x26, x25, [sp, #48]
    209c:	ldp	x28, x27, [sp, #32]
    20a0:	ldp	x29, x30, [sp, #16]
    20a4:	add	sp, sp, #0x70
    20a8:	ret
    20ac:	stp	x29, x30, [sp, #-16]!
    20b0:	mov	x29, sp
    20b4:	add	w8, w0, #0x9
    20b8:	mov	w2, w0
    20bc:	cmp	w8, #0xd
    20c0:	b.hi	2110 <PyInit__bz2@@Base+0x6fc>  // b.pmore
    20c4:	adrp	x9, 2000 <PyInit__bz2@@Base+0x5ec>
    20c8:	add	x9, x9, #0xa3c
    20cc:	adr	x10, 20e0 <PyInit__bz2@@Base+0x6cc>
    20d0:	ldrb	w11, [x9, x8]
    20d4:	add	x10, x10, x11, lsl #2
    20d8:	mov	w0, wzr
    20dc:	br	x10
    20e0:	ldp	x29, x30, [sp], #16
    20e4:	ret
    20e8:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    20ec:	ldr	x8, [x8, #4032]
    20f0:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    20f4:	add	x1, x1, #0x20a
    20f8:	b	2190 <PyInit__bz2@@Base+0x77c>
    20fc:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2100:	ldr	x8, [x8, #3968]
    2104:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2108:	add	x1, x1, #0x1af
    210c:	b	2190 <PyInit__bz2@@Base+0x77c>
    2110:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2114:	ldr	x8, [x8, #4032]
    2118:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    211c:	add	x1, x1, #0x2b3
    2120:	ldr	x0, [x8]
    2124:	bl	18e0 <PyErr_Format@plt>
    2128:	mov	w0, #0x1                   	// #1
    212c:	ldp	x29, x30, [sp], #16
    2130:	ret
    2134:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2138:	ldr	x8, [x8, #4056]
    213c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2140:	add	x1, x1, #0x230
    2144:	b	2190 <PyInit__bz2@@Base+0x77c>
    2148:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    214c:	ldr	x8, [x8, #4032]
    2150:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2154:	add	x1, x1, #0x21e
    2158:	b	2190 <PyInit__bz2@@Base+0x77c>
    215c:	bl	1730 <PyErr_NoMemory@plt>
    2160:	mov	w0, #0x1                   	// #1
    2164:	ldp	x29, x30, [sp], #16
    2168:	ret
    216c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2170:	ldr	x8, [x8, #4016]
    2174:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2178:	add	x1, x1, #0x1d3
    217c:	b	2190 <PyInit__bz2@@Base+0x77c>
    2180:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2184:	ldr	x8, [x8, #4000]
    2188:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    218c:	add	x1, x1, #0x274
    2190:	ldr	x0, [x8]
    2194:	bl	1760 <PyErr_SetString@plt>
    2198:	mov	w0, #0x1                   	// #1
    219c:	ldp	x29, x30, [sp], #16
    21a0:	ret
    21a4:	orr	w8, w2, w1
    21a8:	tbnz	w8, #31, 21c8 <PyInit__bz2@@Base+0x7b4>
    21ac:	sxtw	x8, w1
    21b0:	cbz	w2, 21d0 <PyInit__bz2@@Base+0x7bc>
    21b4:	sxtw	x9, w2
    21b8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    21bc:	udiv	x10, x10, x9
    21c0:	cmp	x10, x8
    21c4:	b.cs	21d4 <PyInit__bz2@@Base+0x7c0>  // b.hs, b.nlast
    21c8:	mov	x0, xzr
    21cc:	ret
    21d0:	mov	x9, xzr
    21d4:	mul	x0, x9, x8
    21d8:	b	16f0 <PyMem_RawMalloc@plt>
    21dc:	mov	x0, x1
    21e0:	b	1860 <PyMem_RawFree@plt>
    21e4:	stp	x29, x30, [sp, #-32]!
    21e8:	str	x19, [sp, #16]
    21ec:	mov	x29, sp
    21f0:	mov	x19, x0
    21f4:	ldr	x0, [x0, #120]
    21f8:	cbz	x0, 2200 <PyInit__bz2@@Base+0x7ec>
    21fc:	bl	16c0 <PyMem_Free@plt>
    2200:	add	x0, x19, #0x10
    2204:	bl	1780 <BZ2_bzDecompressEnd@plt>
    2208:	ldr	x0, [x19, #104]
    220c:	cbz	x0, 2224 <PyInit__bz2@@Base+0x810>
    2210:	str	xzr, [x19, #104]
    2214:	ldr	x8, [x0]
    2218:	subs	x8, x8, #0x1
    221c:	str	x8, [x0]
    2220:	b.eq	2248 <PyInit__bz2@@Base+0x834>  // b.none
    2224:	ldr	x0, [x19, #144]
    2228:	cbz	x0, 2230 <PyInit__bz2@@Base+0x81c>
    222c:	bl	1930 <PyThread_free_lock@plt>
    2230:	ldr	x8, [x19, #8]
    2234:	mov	x0, x19
    2238:	ldr	x19, [sp, #16]
    223c:	ldr	x1, [x8, #320]
    2240:	ldp	x29, x30, [sp], #32
    2244:	br	x1
    2248:	bl	1720 <_Py_Dealloc@plt>
    224c:	ldr	x0, [x19, #144]
    2250:	cbnz	x0, 222c <PyInit__bz2@@Base+0x818>
    2254:	b	2230 <PyInit__bz2@@Base+0x81c>
    2258:	stp	x29, x30, [sp, #-48]!
    225c:	str	x21, [sp, #16]
    2260:	stp	x20, x19, [sp, #32]
    2264:	mov	x29, sp
    2268:	ldr	x8, [x0, #8]
    226c:	adrp	x21, 14000 <PyInit__bz2@@Base+0x125ec>
    2270:	mov	x20, x2
    2274:	mov	x19, x0
    2278:	add	x21, x21, #0x4f0
    227c:	cbz	x1, 229c <PyInit__bz2@@Base+0x888>
    2280:	cmp	x8, x21
    2284:	b.ne	229c <PyInit__bz2@@Base+0x888>  // b.any
    2288:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    228c:	add	x0, x0, #0x359
    2290:	bl	1800 <_PyArg_NoPositional@plt>
    2294:	cbz	w0, 2384 <PyInit__bz2@@Base+0x970>
    2298:	ldr	x8, [x19, #8]
    229c:	cbz	x20, 22bc <PyInit__bz2@@Base+0x8a8>
    22a0:	cmp	x8, x21
    22a4:	b.ne	22bc <PyInit__bz2@@Base+0x8a8>  // b.any
    22a8:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    22ac:	add	x0, x0, #0x359
    22b0:	mov	x1, x20
    22b4:	bl	1900 <_PyArg_NoKeywords@plt>
    22b8:	cbz	w0, 2384 <PyInit__bz2@@Base+0x970>
    22bc:	bl	1870 <PyThread_allocate_lock@plt>
    22c0:	cbz	x0, 234c <PyInit__bz2@@Base+0x938>
    22c4:	mov	x20, x0
    22c8:	ldr	x0, [x19, #144]
    22cc:	cbz	x0, 22d4 <PyInit__bz2@@Base+0x8c0>
    22d0:	bl	1930 <PyThread_free_lock@plt>
    22d4:	ldr	x21, [x19, #104]
    22d8:	mov	w8, #0x1                   	// #1
    22dc:	mov	x0, xzr
    22e0:	mov	x1, xzr
    22e4:	strb	w8, [x19, #112]
    22e8:	stp	xzr, x20, [x19, #136]
    22ec:	stp	xzr, xzr, [x19, #120]
    22f0:	bl	1710 <PyBytes_FromStringAndSize@plt>
    22f4:	str	x0, [x19, #104]
    22f8:	cbz	x21, 230c <PyInit__bz2@@Base+0x8f8>
    22fc:	ldr	x8, [x21]
    2300:	subs	x8, x8, #0x1
    2304:	str	x8, [x21]
    2308:	b.eq	2368 <PyInit__bz2@@Base+0x954>  // b.none
    230c:	cbz	x0, 2378 <PyInit__bz2@@Base+0x964>
    2310:	add	x0, x19, #0x10
    2314:	mov	w1, wzr
    2318:	mov	w2, wzr
    231c:	bl	1770 <BZ2_bzDecompressInit@plt>
    2320:	bl	20ac <PyInit__bz2@@Base+0x698>
    2324:	cbz	w0, 2388 <PyInit__bz2@@Base+0x974>
    2328:	ldr	x0, [x19, #104]
    232c:	cbz	x0, 2378 <PyInit__bz2@@Base+0x964>
    2330:	str	xzr, [x19, #104]
    2334:	ldr	x8, [x0]
    2338:	subs	x8, x8, #0x1
    233c:	str	x8, [x0]
    2340:	b.ne	2378 <PyInit__bz2@@Base+0x964>  // b.any
    2344:	bl	1720 <_Py_Dealloc@plt>
    2348:	b	2378 <PyInit__bz2@@Base+0x964>
    234c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2350:	ldr	x8, [x8, #4008]
    2354:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2358:	add	x1, x1, #0x33c
    235c:	ldr	x0, [x8]
    2360:	bl	1760 <PyErr_SetString@plt>
    2364:	b	2384 <PyInit__bz2@@Base+0x970>
    2368:	mov	x0, x21
    236c:	bl	1720 <_Py_Dealloc@plt>
    2370:	ldr	x0, [x19, #104]
    2374:	cbnz	x0, 2310 <PyInit__bz2@@Base+0x8fc>
    2378:	ldr	x0, [x19, #144]
    237c:	bl	1930 <PyThread_free_lock@plt>
    2380:	str	xzr, [x19, #144]
    2384:	mov	w0, #0xffffffff            	// #-1
    2388:	ldp	x20, x19, [sp, #32]
    238c:	ldr	x21, [sp, #16]
    2390:	ldp	x29, x30, [sp], #48
    2394:	ret
    2398:	sub	sp, sp, #0xd0
    239c:	stp	x29, x30, [sp, #112]
    23a0:	str	x27, [sp, #128]
    23a4:	stp	x26, x25, [sp, #144]
    23a8:	stp	x24, x23, [sp, #160]
    23ac:	stp	x22, x21, [sp, #176]
    23b0:	stp	x20, x19, [sp, #192]
    23b4:	add	x29, sp, #0x70
    23b8:	mov	x21, x2
    23bc:	mov	x20, x1
    23c0:	mov	x19, x0
    23c4:	cbz	x3, 23d0 <PyInit__bz2@@Base+0x9bc>
    23c8:	ldr	x22, [x3, #16]
    23cc:	b	23d4 <PyInit__bz2@@Base+0x9c0>
    23d0:	mov	x22, xzr
    23d4:	movi	v0.2d, #0x0
    23d8:	stp	q0, q0, [sp, #64]
    23dc:	stp	q0, q0, [sp, #32]
    23e0:	str	q0, [sp, #16]
    23e4:	cbz	x20, 23f8 <PyInit__bz2@@Base+0x9e4>
    23e8:	sub	x8, x21, #0x1
    23ec:	cmp	x8, #0x1
    23f0:	b.hi	23f8 <PyInit__bz2@@Base+0x9e4>  // b.pmore
    23f4:	cbz	x3, 242c <PyInit__bz2@@Base+0xa18>
    23f8:	adrp	x4, 14000 <PyInit__bz2@@Base+0x125ec>
    23fc:	sub	x8, x29, #0x10
    2400:	add	x4, x4, #0x2a8
    2404:	mov	w5, #0x1                   	// #1
    2408:	mov	w6, #0x2                   	// #2
    240c:	mov	x0, x20
    2410:	mov	x1, x21
    2414:	mov	x2, xzr
    2418:	mov	w7, wzr
    241c:	str	x8, [sp]
    2420:	bl	1750 <_PyArg_UnpackKeywords@plt>
    2424:	mov	x20, x0
    2428:	cbz	x0, 2444 <PyInit__bz2@@Base+0xa30>
    242c:	ldr	x0, [x20]
    2430:	add	x1, sp, #0x10
    2434:	mov	w2, wzr
    2438:	bl	18a0 <PyObject_GetBuffer@plt>
    243c:	cbz	w0, 2478 <PyInit__bz2@@Base+0xa64>
    2440:	mov	x20, xzr
    2444:	ldr	x8, [sp, #24]
    2448:	cbz	x8, 2454 <PyInit__bz2@@Base+0xa40>
    244c:	add	x0, sp, #0x10
    2450:	bl	16d0 <PyBuffer_Release@plt>
    2454:	mov	x0, x20
    2458:	ldp	x20, x19, [sp, #192]
    245c:	ldp	x22, x21, [sp, #176]
    2460:	ldp	x24, x23, [sp, #160]
    2464:	ldp	x26, x25, [sp, #144]
    2468:	ldr	x27, [sp, #128]
    246c:	ldp	x29, x30, [sp, #112]
    2470:	add	sp, sp, #0xd0
    2474:	ret
    2478:	add	x0, sp, #0x10
    247c:	mov	w1, #0x43                  	// #67
    2480:	bl	1700 <PyBuffer_IsContiguous@plt>
    2484:	cbz	w0, 2500 <PyInit__bz2@@Base+0xaec>
    2488:	add	x8, x22, x21
    248c:	cmp	x8, #0x1
    2490:	b.ne	2524 <PyInit__bz2@@Base+0xb10>  // b.any
    2494:	mov	x20, #0xffffffffffffffff    	// #-1
    2498:	ldr	x0, [x19, #144]
    249c:	mov	w1, wzr
    24a0:	bl	1740 <PyThread_acquire_lock@plt>
    24a4:	cbnz	w0, 24c8 <PyInit__bz2@@Base+0xab4>
    24a8:	bl	18b0 <PyEval_SaveThread@plt>
    24ac:	ldr	x8, [x19, #144]
    24b0:	mov	x21, x0
    24b4:	mov	w1, #0x1                   	// #1
    24b8:	mov	x0, x8
    24bc:	bl	1740 <PyThread_acquire_lock@plt>
    24c0:	mov	x0, x21
    24c4:	bl	16b0 <PyEval_RestoreThread@plt>
    24c8:	ldrb	w8, [x19, #96]
    24cc:	cbz	w8, 2568 <PyInit__bz2@@Base+0xb54>
    24d0:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    24d4:	ldr	x8, [x8, #4056]
    24d8:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    24dc:	add	x1, x1, #0x38f
    24e0:	ldr	x0, [x8]
    24e4:	bl	1760 <PyErr_SetString@plt>
    24e8:	mov	x20, xzr
    24ec:	ldr	x0, [x19, #144]
    24f0:	bl	1890 <PyThread_release_lock@plt>
    24f4:	ldr	x8, [sp, #24]
    24f8:	cbnz	x8, 244c <PyInit__bz2@@Base+0xa38>
    24fc:	b	2454 <PyInit__bz2@@Base+0xa40>
    2500:	ldr	x3, [x20]
    2504:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    2508:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    250c:	adrp	x2, 3000 <PyInit__bz2@@Base+0x15ec>
    2510:	add	x0, x0, #0x369
    2514:	add	x1, x1, #0x37f
    2518:	add	x2, x2, #0x154
    251c:	bl	17e0 <_PyArg_BadArgument@plt>
    2520:	b	2440 <PyInit__bz2@@Base+0xa2c>
    2524:	ldr	x8, [x20, #8]
    2528:	ldr	x0, [x8, #8]
    252c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2530:	ldr	x8, [x8, #3984]
    2534:	cmp	x0, x8
    2538:	b.eq	254c <PyInit__bz2@@Base+0xb38>  // b.none
    253c:	adrp	x1, 13000 <PyInit__bz2@@Base+0x115ec>
    2540:	ldr	x1, [x1, #3984]
    2544:	bl	18d0 <PyType_IsSubtype@plt>
    2548:	cbz	w0, 25c0 <PyInit__bz2@@Base+0xbac>
    254c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2550:	ldr	x8, [x8, #4024]
    2554:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2558:	add	x1, x1, #0x2f1
    255c:	ldr	x0, [x8]
    2560:	bl	1760 <PyErr_SetString@plt>
    2564:	b	2440 <PyInit__bz2@@Base+0xa2c>
    2568:	ldr	x23, [x19, #16]
    256c:	ldr	x22, [sp, #16]
    2570:	ldr	x21, [sp, #32]
    2574:	cbz	x23, 2604 <PyInit__bz2@@Base+0xbf0>
    2578:	ldp	x24, x8, [x19, #120]
    257c:	ldr	x2, [x19, #136]
    2580:	add	x9, x24, x8
    2584:	add	x10, x23, x2
    2588:	sub	x11, x8, x2
    258c:	cmp	x11, x21
    2590:	sub	x9, x9, x10
    2594:	b.cs	2614 <PyInit__bz2@@Base+0xc00>  // b.hs, b.nlast
    2598:	add	x8, x8, x21
    259c:	sub	x25, x8, x9
    25a0:	mov	x0, x24
    25a4:	mov	x1, x25
    25a8:	bl	1790 <PyMem_Realloc@plt>
    25ac:	cbz	x0, 285c <PyInit__bz2@@Base+0xe48>
    25b0:	sub	x8, x23, x24
    25b4:	stp	x0, x25, [x19, #120]
    25b8:	add	x23, x0, x8
    25bc:	b	262c <PyInit__bz2@@Base+0xc18>
    25c0:	ldr	x0, [x20, #8]
    25c4:	bl	18f0 <PyNumber_Index@plt>
    25c8:	cbz	x0, 25f8 <PyInit__bz2@@Base+0xbe4>
    25cc:	mov	x21, x0
    25d0:	bl	17d0 <PyLong_AsSsize_t@plt>
    25d4:	ldr	x8, [x21]
    25d8:	mov	x20, x0
    25dc:	subs	x8, x8, #0x1
    25e0:	str	x8, [x21]
    25e4:	b.ne	25f0 <PyInit__bz2@@Base+0xbdc>  // b.any
    25e8:	mov	x0, x21
    25ec:	bl	1720 <_Py_Dealloc@plt>
    25f0:	cmn	x20, #0x1
    25f4:	b.ne	2498 <PyInit__bz2@@Base+0xa84>  // b.any
    25f8:	bl	1830 <PyErr_Occurred@plt>
    25fc:	cbnz	x0, 2440 <PyInit__bz2@@Base+0xa2c>
    2600:	b	2494 <PyInit__bz2@@Base+0xa80>
    2604:	mov	w24, wzr
    2608:	str	x22, [x19, #16]
    260c:	str	x21, [x19, #136]
    2610:	b	2654 <PyInit__bz2@@Base+0xc40>
    2614:	cmp	x9, x21
    2618:	b.cs	2630 <PyInit__bz2@@Base+0xc1c>  // b.hs, b.nlast
    261c:	mov	x0, x24
    2620:	mov	x1, x23
    2624:	bl	1690 <memmove@plt>
    2628:	ldr	x23, [x19, #120]
    262c:	str	x23, [x19, #16]
    2630:	ldr	x8, [x19, #136]
    2634:	mov	x1, x22
    2638:	mov	x2, x21
    263c:	add	x0, x23, x8
    2640:	bl	1680 <memcpy@plt>
    2644:	ldr	x8, [x19, #136]
    2648:	mov	w24, #0x1                   	// #1
    264c:	add	x8, x8, x21
    2650:	str	x8, [x19, #136]
    2654:	cmp	x20, #0x2, lsl #12
    2658:	mov	w8, #0x2000                	// #8192
    265c:	csel	x1, x20, x8, cc  // cc = lo, ul, last
    2660:	mov	x0, xzr
    2664:	bl	1710 <PyBytes_FromStringAndSize@plt>
    2668:	str	x0, [x29, #24]
    266c:	cbz	x0, 29cc <PyInit__bz2@@Base+0xfb8>
    2670:	add	x21, x19, #0x10
    2674:	add	x8, x0, #0x20
    2678:	cmp	x20, #0x0
    267c:	mov	x22, xzr
    2680:	mov	w25, #0xffffffff            	// #-1
    2684:	str	x8, [x19, #40]
    2688:	b.gt	2694 <PyInit__bz2@@Base+0xc80>
    268c:	b	2778 <PyInit__bz2@@Base+0xd64>
    2690:	ldr	x0, [x29, #24]
    2694:	ldr	x8, [x0, #16]
    2698:	ldr	x9, [x19, #136]
    269c:	sub	x8, x8, x22
    26a0:	cmp	x8, x25
    26a4:	csel	x8, x8, x25, cc  // cc = lo, ul, last
    26a8:	cmp	x9, x25
    26ac:	str	w8, [x19, #48]
    26b0:	csel	x8, x9, x25, cc  // cc = lo, ul, last
    26b4:	str	w8, [x19, #24]
    26b8:	sub	x8, x9, x8
    26bc:	str	x8, [x19, #136]
    26c0:	bl	18b0 <PyEval_SaveThread@plt>
    26c4:	mov	x23, x0
    26c8:	mov	x0, x21
    26cc:	bl	1880 <BZ2_bzDecompress@plt>
    26d0:	ldr	w8, [x19, #24]
    26d4:	ldr	x9, [x19, #136]
    26d8:	ldr	x26, [x19, #40]
    26dc:	ldr	x27, [x29, #24]
    26e0:	mov	w22, w0
    26e4:	add	x8, x9, x8
    26e8:	mov	x0, x23
    26ec:	str	x8, [x19, #136]
    26f0:	bl	16b0 <PyEval_RestoreThread@plt>
    26f4:	mov	w0, w22
    26f8:	bl	20ac <PyInit__bz2@@Base+0x698>
    26fc:	cbnz	w0, 29b0 <PyInit__bz2@@Base+0xf9c>
    2700:	sub	x8, x26, x27
    2704:	cmp	w22, #0x4
    2708:	sub	x22, x8, #0x20
    270c:	b.eq	2850 <PyInit__bz2@@Base+0xe3c>  // b.none
    2710:	ldr	x8, [x19, #136]
    2714:	cbz	x8, 2888 <PyInit__bz2@@Base+0xe74>
    2718:	ldr	w8, [x19, #48]
    271c:	cbnz	w8, 2690 <PyInit__bz2@@Base+0xc7c>
    2720:	cmp	x22, x20
    2724:	b.eq	2884 <PyInit__bz2@@Base+0xe70>  // b.none
    2728:	ldr	x0, [x29, #24]
    272c:	ldr	x8, [x0, #16]
    2730:	cmp	x22, x8
    2734:	b.ne	2764 <PyInit__bz2@@Base+0xd50>  // b.any
    2738:	add	x8, x22, x22, lsr #3
    273c:	add	x8, x8, #0x6
    2740:	cmp	x8, x20
    2744:	csel	x1, x20, x8, hi  // hi = pmore
    2748:	cmp	x1, x22
    274c:	b.ls	2998 <PyInit__bz2@@Base+0xf84>  // b.plast
    2750:	add	x0, x29, #0x18
    2754:	bl	16a0 <_PyBytes_Resize@plt>
    2758:	cmn	w0, #0x1
    275c:	b.eq	29b0 <PyInit__bz2@@Base+0xf9c>  // b.none
    2760:	ldr	x0, [x29, #24]
    2764:	add	x8, x0, x22
    2768:	add	x8, x8, #0x20
    276c:	str	x8, [x19, #40]
    2770:	b	2694 <PyInit__bz2@@Base+0xc80>
    2774:	ldr	x0, [x29, #24]
    2778:	ldr	x8, [x0, #16]
    277c:	ldr	x9, [x19, #136]
    2780:	sub	x8, x8, x22
    2784:	cmp	x8, x25
    2788:	csel	x8, x8, x25, cc  // cc = lo, ul, last
    278c:	cmp	x9, x25
    2790:	str	w8, [x19, #48]
    2794:	csel	x8, x9, x25, cc  // cc = lo, ul, last
    2798:	str	w8, [x19, #24]
    279c:	sub	x8, x9, x8
    27a0:	str	x8, [x19, #136]
    27a4:	bl	18b0 <PyEval_SaveThread@plt>
    27a8:	mov	x23, x0
    27ac:	mov	x0, x21
    27b0:	bl	1880 <BZ2_bzDecompress@plt>
    27b4:	ldr	w8, [x19, #24]
    27b8:	ldr	x9, [x19, #136]
    27bc:	ldr	x26, [x19, #40]
    27c0:	ldr	x27, [x29, #24]
    27c4:	mov	w22, w0
    27c8:	add	x8, x9, x8
    27cc:	mov	x0, x23
    27d0:	str	x8, [x19, #136]
    27d4:	bl	16b0 <PyEval_RestoreThread@plt>
    27d8:	mov	w0, w22
    27dc:	bl	20ac <PyInit__bz2@@Base+0x698>
    27e0:	cbnz	w0, 29b0 <PyInit__bz2@@Base+0xf9c>
    27e4:	sub	x8, x26, x27
    27e8:	cmp	w22, #0x4
    27ec:	sub	x22, x8, #0x20
    27f0:	b.eq	2850 <PyInit__bz2@@Base+0xe3c>  // b.none
    27f4:	ldr	x8, [x19, #136]
    27f8:	cbz	x8, 2888 <PyInit__bz2@@Base+0xe74>
    27fc:	ldr	w8, [x19, #48]
    2800:	cbnz	w8, 2774 <PyInit__bz2@@Base+0xd60>
    2804:	cmp	x22, x20
    2808:	b.eq	2884 <PyInit__bz2@@Base+0xe70>  // b.none
    280c:	ldr	x0, [x29, #24]
    2810:	ldr	x8, [x0, #16]
    2814:	cmp	x22, x8
    2818:	b.ne	2840 <PyInit__bz2@@Base+0xe2c>  // b.any
    281c:	add	x8, x22, x22, lsr #3
    2820:	add	x1, x8, #0x6
    2824:	cmp	x1, x22
    2828:	b.ls	2998 <PyInit__bz2@@Base+0xf84>  // b.plast
    282c:	add	x0, x29, #0x18
    2830:	bl	16a0 <_PyBytes_Resize@plt>
    2834:	cmn	w0, #0x1
    2838:	b.eq	29b0 <PyInit__bz2@@Base+0xf9c>  // b.none
    283c:	ldr	x0, [x29, #24]
    2840:	add	x8, x0, x22
    2844:	add	x8, x8, #0x20
    2848:	str	x8, [x19, #40]
    284c:	b	2778 <PyInit__bz2@@Base+0xd64>
    2850:	mov	w8, #0x1                   	// #1
    2854:	strb	w8, [x19, #96]
    2858:	b	2888 <PyInit__bz2@@Base+0xe74>
    285c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2860:	ldr	x8, [x8, #4008]
    2864:	ldr	x0, [x8]
    2868:	bl	17a0 <PyErr_SetNone@plt>
    286c:	mov	x20, xzr
    2870:	ldr	x0, [x19, #144]
    2874:	bl	1890 <PyThread_release_lock@plt>
    2878:	ldr	x8, [sp, #24]
    287c:	cbnz	x8, 244c <PyInit__bz2@@Base+0xa38>
    2880:	b	2454 <PyInit__bz2@@Base+0xa40>
    2884:	mov	x22, x20
    2888:	ldr	x20, [x29, #24]
    288c:	ldr	x8, [x20, #16]
    2890:	cmp	x22, x8
    2894:	b.eq	28b0 <PyInit__bz2@@Base+0xe9c>  // b.none
    2898:	add	x0, x29, #0x18
    289c:	mov	x1, x22
    28a0:	bl	16a0 <_PyBytes_Resize@plt>
    28a4:	cmn	w0, #0x1
    28a8:	b.eq	29b0 <PyInit__bz2@@Base+0xf9c>  // b.none
    28ac:	ldr	x20, [x29, #24]
    28b0:	cbz	x20, 29cc <PyInit__bz2@@Base+0xfb8>
    28b4:	ldrb	w8, [x19, #96]
    28b8:	cbz	w8, 292c <PyInit__bz2@@Base+0xf18>
    28bc:	ldr	x1, [x19, #136]
    28c0:	strb	wzr, [x19, #112]
    28c4:	cbz	x1, 29d4 <PyInit__bz2@@Base+0xfc0>
    28c8:	ldr	x0, [x19, #16]
    28cc:	ldr	x21, [x19, #104]
    28d0:	bl	1710 <PyBytes_FromStringAndSize@plt>
    28d4:	str	x0, [x19, #104]
    28d8:	cbz	x21, 28f8 <PyInit__bz2@@Base+0xee4>
    28dc:	ldr	x8, [x21]
    28e0:	subs	x8, x8, #0x1
    28e4:	str	x8, [x21]
    28e8:	b.ne	28f8 <PyInit__bz2@@Base+0xee4>  // b.any
    28ec:	mov	x0, x21
    28f0:	bl	1720 <_Py_Dealloc@plt>
    28f4:	ldr	x0, [x19, #104]
    28f8:	cbnz	x0, 29d4 <PyInit__bz2@@Base+0xfc0>
    28fc:	ldr	x8, [x20]
    2900:	subs	x8, x8, #0x1
    2904:	str	x8, [x20]
    2908:	b.ne	2914 <PyInit__bz2@@Base+0xf00>  // b.any
    290c:	mov	x0, x20
    2910:	bl	1720 <_Py_Dealloc@plt>
    2914:	mov	x20, xzr
    2918:	ldr	x0, [x19, #144]
    291c:	bl	1890 <PyThread_release_lock@plt>
    2920:	ldr	x8, [sp, #24]
    2924:	cbnz	x8, 244c <PyInit__bz2@@Base+0xa38>
    2928:	b	2454 <PyInit__bz2@@Base+0xa40>
    292c:	ldr	x2, [x19, #136]
    2930:	cbz	x2, 29e8 <PyInit__bz2@@Base+0xfd4>
    2934:	strb	wzr, [x19, #112]
    2938:	cbnz	w24, 29d4 <PyInit__bz2@@Base+0xfc0>
    293c:	ldr	x0, [x19, #120]
    2940:	cbz	x0, 295c <PyInit__bz2@@Base+0xf48>
    2944:	ldr	x8, [x19, #128]
    2948:	cmp	x8, x2
    294c:	b.cs	2974 <PyInit__bz2@@Base+0xf60>  // b.hs, b.nlast
    2950:	bl	16c0 <PyMem_Free@plt>
    2954:	ldr	x2, [x19, #136]
    2958:	str	xzr, [x19, #120]
    295c:	mov	x0, x2
    2960:	bl	1920 <PyMem_Malloc@plt>
    2964:	str	x0, [x19, #120]
    2968:	cbz	x0, 2a08 <PyInit__bz2@@Base+0xff4>
    296c:	ldr	x2, [x19, #136]
    2970:	str	x2, [x19, #128]
    2974:	ldr	x1, [x19, #16]
    2978:	bl	1680 <memcpy@plt>
    297c:	ldr	x8, [x19, #120]
    2980:	str	x8, [x19, #16]
    2984:	ldr	x0, [x19, #144]
    2988:	bl	1890 <PyThread_release_lock@plt>
    298c:	ldr	x8, [sp, #24]
    2990:	cbnz	x8, 244c <PyInit__bz2@@Base+0xa38>
    2994:	b	2454 <PyInit__bz2@@Base+0xa40>
    2998:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    299c:	ldr	x8, [x8, #4048]
    29a0:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    29a4:	add	x1, x1, #0x182
    29a8:	ldr	x0, [x8]
    29ac:	bl	1760 <PyErr_SetString@plt>
    29b0:	ldr	x0, [x29, #24]
    29b4:	cbz	x0, 29cc <PyInit__bz2@@Base+0xfb8>
    29b8:	ldr	x8, [x0]
    29bc:	subs	x8, x8, #0x1
    29c0:	str	x8, [x0]
    29c4:	b.ne	29cc <PyInit__bz2@@Base+0xfb8>  // b.any
    29c8:	bl	1720 <_Py_Dealloc@plt>
    29cc:	mov	x20, xzr
    29d0:	str	xzr, [x19, #16]
    29d4:	ldr	x0, [x19, #144]
    29d8:	bl	1890 <PyThread_release_lock@plt>
    29dc:	ldr	x8, [sp, #24]
    29e0:	cbnz	x8, 244c <PyInit__bz2@@Base+0xa38>
    29e4:	b	2454 <PyInit__bz2@@Base+0xa40>
    29e8:	mov	w8, #0x1                   	// #1
    29ec:	str	xzr, [x19, #16]
    29f0:	strb	w8, [x19, #112]
    29f4:	ldr	x0, [x19, #144]
    29f8:	bl	1890 <PyThread_release_lock@plt>
    29fc:	ldr	x8, [sp, #24]
    2a00:	cbnz	x8, 244c <PyInit__bz2@@Base+0xa38>
    2a04:	b	2454 <PyInit__bz2@@Base+0xa40>
    2a08:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2a0c:	ldr	x8, [x8, #4008]
    2a10:	ldr	x0, [x8]
    2a14:	bl	17a0 <PyErr_SetNone@plt>
    2a18:	ldr	x8, [x20]
    2a1c:	subs	x8, x8, #0x1
    2a20:	str	x8, [x20]
    2a24:	b.ne	2914 <PyInit__bz2@@Base+0xf00>  // b.any
    2a28:	b	290c <PyInit__bz2@@Base+0xef8>

Disassembly of section .fini:

0000000000002a2c <.fini>:
    2a2c:	stp	x29, x30, [sp, #-16]!
    2a30:	mov	x29, sp
    2a34:	ldp	x29, x30, [sp], #16
    2a38:	ret
