In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMDebugInfoMSF.a_gcc_-O2:

MappedBlockStream.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>:
       0:	ldr	w0, [x0, #16]
       4:	ret

0000000000000008 <_ZN4llvm3msf25WritableMappedBlockStream9getLengthEv>:
       8:	add	x0, x0, #0x8
       c:	b	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>

0000000000000010 <_ZN4llvm3msf25WritableMappedBlockStream6commitEv>:
      10:	stp	x29, x30, [sp, #-32]!
      14:	add	x0, x0, #0x88
      18:	mov	x29, sp
      1c:	str	x19, [sp, #16]
      20:	mov	x19, x8
      24:	bl	0 <_ZN4llvm23WritableBinaryStreamRef6commitEv>
      28:	mov	x0, x19
      2c:	ldr	x19, [sp, #16]
      30:	ldp	x29, x30, [sp], #32
      34:	ret

0000000000000038 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEixEm.isra.0.part.0>:
      38:	stp	x29, x30, [sp, #-16]!
      3c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
      40:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
      44:	mov	x29, sp
      48:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
      4c:	add	x3, x3, #0x0
      50:	add	x1, x1, #0x0
      54:	add	x0, x0, #0x0
      58:	mov	w2, #0xfa                  	// #250
      5c:	bl	0 <__assert_fail>

0000000000000060 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev>:
      60:	stp	x29, x30, [sp, #-48]!
      64:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
      68:	mov	x29, sp
      6c:	stp	x19, x20, [sp, #16]
      70:	mov	x19, x0
      74:	ldr	w0, [x0, #120]
      78:	ldr	x1, [x1]
      7c:	ldr	x20, [x19, #104]
      80:	str	x21, [sp, #32]
      84:	add	x1, x1, #0x10
      88:	str	x1, [x19]
      8c:	ubfiz	x1, x0, #5, #32
      90:	cbz	w0, d8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x78>
      94:	add	x21, x20, x1
      98:	b	a8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x48>
      9c:	add	x20, x20, #0x20
      a0:	cmp	x21, x20
      a4:	b.eq	cc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x6c>  // b.none
      a8:	ldr	w0, [x20]
      ac:	cmn	w0, #0x3
      b0:	b.hi	9c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x3c>  // b.pmore
      b4:	ldr	x0, [x20, #8]
      b8:	cbz	x0, 9c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x3c>
      bc:	add	x20, x20, #0x20
      c0:	bl	0 <_ZdlPv>
      c4:	cmp	x21, x20
      c8:	b.ne	a8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x48>  // b.any
      cc:	ldr	w1, [x19, #120]
      d0:	ldr	x20, [x19, #104]
      d4:	lsl	x1, x1, #5
      d8:	mov	x0, x20
      dc:	bl	0 <_ZdlPvm>
      e0:	ldr	x20, [x19, #56]
      e4:	cbz	x20, 110 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xb0>
      e8:	adrp	x21, 0 <__pthread_key_create>
      ec:	ldr	x0, [x21]
      f0:	cbz	x0, 128 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xc8>
      f4:	add	x1, x20, #0x8
      f8:	ldaxr	w0, [x1]
      fc:	sub	w2, w0, #0x1
     100:	stlxr	w3, w2, [x1]
     104:	cbnz	w3, f8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x98>
     108:	cmp	w0, #0x1
     10c:	b.eq	13c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xdc>  // b.none
     110:	ldr	x0, [x19, #24]
     114:	cbz	x0, 1a0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x140>
     118:	ldp	x19, x20, [sp, #16]
     11c:	ldr	x21, [sp, #32]
     120:	ldp	x29, x30, [sp], #48
     124:	b	0 <_ZdlPv>
     128:	ldr	w0, [x20, #8]
     12c:	sub	w1, w0, #0x1
     130:	str	w1, [x20, #8]
     134:	cmp	w0, #0x1
     138:	b.ne	110 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xb0>  // b.any
     13c:	ldr	x1, [x20]
     140:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     144:	ldr	x0, [x0]
     148:	ldr	x1, [x1, #16]
     14c:	cmp	x1, x0
     150:	b.ne	1cc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x16c>  // b.any
     154:	ldr	x21, [x21]
     158:	cbz	x21, 1b0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x150>
     15c:	add	x1, x20, #0xc
     160:	ldaxr	w0, [x1]
     164:	sub	w2, w0, #0x1
     168:	stlxr	w3, w2, [x1]
     16c:	cbnz	w3, 160 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x100>
     170:	cmp	w0, #0x1
     174:	b.ne	110 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xb0>  // b.any
     178:	ldr	x1, [x20]
     17c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     180:	ldr	x0, [x0]
     184:	ldr	x2, [x1, #24]
     188:	cmp	x2, x0
     18c:	b.ne	1c0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x160>  // b.any
     190:	ldr	x1, [x1, #8]
     194:	mov	x0, x20
     198:	blr	x1
     19c:	b	110 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xb0>
     1a0:	ldp	x19, x20, [sp, #16]
     1a4:	ldr	x21, [sp, #32]
     1a8:	ldp	x29, x30, [sp], #48
     1ac:	ret
     1b0:	ldr	w0, [x20, #12]
     1b4:	sub	w1, w0, #0x1
     1b8:	str	w1, [x20, #12]
     1bc:	b	170 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x110>
     1c0:	mov	x0, x20
     1c4:	blr	x2
     1c8:	b	110 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xb0>
     1cc:	mov	x0, x20
     1d0:	blr	x1
     1d4:	b	154 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xf4>

00000000000001d8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev>:
     1d8:	stp	x29, x30, [sp, #-48]!
     1dc:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     1e0:	mov	x29, sp
     1e4:	ldr	x1, [x1]
     1e8:	stp	x19, x20, [sp, #16]
     1ec:	mov	x19, x0
     1f0:	ldr	x20, [x0, #144]
     1f4:	str	x21, [sp, #32]
     1f8:	add	x1, x1, #0x10
     1fc:	str	x1, [x0]
     200:	cbz	x20, 230 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x58>
     204:	adrp	x21, 0 <__pthread_key_create>
     208:	ldr	x0, [x21]
     20c:	cbz	x0, 2e8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x110>
     210:	add	x1, x20, #0x8
     214:	ldaxr	w0, [x1]
     218:	sub	w2, w0, #0x1
     21c:	stlxr	w3, w2, [x1]
     220:	cbnz	w3, 214 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x3c>
     224:	cmp	w0, #0x1
     228:	b.eq	2fc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x124>  // b.none
     22c:	nop
     230:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     234:	ldr	w2, [x19, #128]
     238:	ldr	x20, [x19, #112]
     23c:	ldr	x0, [x0]
     240:	ubfiz	x1, x2, #5, #32
     244:	add	x0, x0, #0x10
     248:	str	x0, [x19, #8]
     24c:	cbz	w2, 294 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xbc>
     250:	add	x21, x20, x1
     254:	b	264 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x8c>
     258:	add	x20, x20, #0x20
     25c:	cmp	x21, x20
     260:	b.eq	288 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xb0>  // b.none
     264:	ldr	w0, [x20]
     268:	cmn	w0, #0x3
     26c:	b.hi	258 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x80>  // b.pmore
     270:	ldr	x0, [x20, #8]
     274:	cbz	x0, 258 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x80>
     278:	add	x20, x20, #0x20
     27c:	bl	0 <_ZdlPv>
     280:	cmp	x21, x20
     284:	b.ne	264 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x8c>  // b.any
     288:	ldr	w1, [x19, #128]
     28c:	ldr	x20, [x19, #112]
     290:	lsl	x1, x1, #5
     294:	mov	x0, x20
     298:	bl	0 <_ZdlPvm>
     29c:	ldr	x20, [x19, #64]
     2a0:	cbz	x20, 2d0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xf8>
     2a4:	adrp	x21, 0 <__pthread_key_create>
     2a8:	ldr	x0, [x21]
     2ac:	cbz	x0, 360 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x188>
     2b0:	add	x1, x20, #0x8
     2b4:	ldaxr	w0, [x1]
     2b8:	sub	w2, w0, #0x1
     2bc:	stlxr	w3, w2, [x1]
     2c0:	cbnz	w3, 2b4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xdc>
     2c4:	cmp	w0, #0x1
     2c8:	b.eq	374 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x19c>  // b.none
     2cc:	nop
     2d0:	ldr	x0, [x19, #32]
     2d4:	cbz	x0, 3d8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x200>
     2d8:	ldp	x19, x20, [sp, #16]
     2dc:	ldr	x21, [sp, #32]
     2e0:	ldp	x29, x30, [sp], #48
     2e4:	b	0 <_ZdlPv>
     2e8:	ldr	w0, [x20, #8]
     2ec:	sub	w1, w0, #0x1
     2f0:	str	w1, [x20, #8]
     2f4:	cmp	w0, #0x1
     2f8:	b.ne	230 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x58>  // b.any
     2fc:	ldr	x1, [x20]
     300:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     304:	ldr	x0, [x0]
     308:	ldr	x1, [x1, #16]
     30c:	cmp	x1, x0
     310:	b.ne	42c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x254>  // b.any
     314:	ldr	x21, [x21]
     318:	cbz	x21, 3e8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x210>
     31c:	add	x1, x20, #0xc
     320:	ldaxr	w0, [x1]
     324:	sub	w2, w0, #0x1
     328:	stlxr	w3, w2, [x1]
     32c:	cbnz	w3, 320 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x148>
     330:	cmp	w0, #0x1
     334:	b.ne	230 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x58>  // b.any
     338:	ldr	x1, [x20]
     33c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     340:	ldr	x0, [x0]
     344:	ldr	x2, [x1, #24]
     348:	cmp	x2, x0
     34c:	b.ne	408 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x230>  // b.any
     350:	ldr	x1, [x1, #8]
     354:	mov	x0, x20
     358:	blr	x1
     35c:	b	230 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x58>
     360:	ldr	w0, [x20, #8]
     364:	sub	w1, w0, #0x1
     368:	str	w1, [x20, #8]
     36c:	cmp	w0, #0x1
     370:	b.ne	2d0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xf8>  // b.any
     374:	ldr	x1, [x20]
     378:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     37c:	ldr	x0, [x0]
     380:	ldr	x1, [x1, #16]
     384:	cmp	x1, x0
     388:	b.ne	420 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x248>  // b.any
     38c:	ldr	x21, [x21]
     390:	cbz	x21, 3f8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x220>
     394:	add	x1, x20, #0xc
     398:	ldaxr	w0, [x1]
     39c:	sub	w2, w0, #0x1
     3a0:	stlxr	w3, w2, [x1]
     3a4:	cbnz	w3, 398 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x1c0>
     3a8:	cmp	w0, #0x1
     3ac:	b.ne	2d0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xf8>  // b.any
     3b0:	ldr	x1, [x20]
     3b4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     3b8:	ldr	x0, [x0]
     3bc:	ldr	x2, [x1, #24]
     3c0:	cmp	x2, x0
     3c4:	b.ne	414 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x23c>  // b.any
     3c8:	ldr	x1, [x1, #8]
     3cc:	mov	x0, x20
     3d0:	blr	x1
     3d4:	b	2d0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xf8>
     3d8:	ldp	x19, x20, [sp, #16]
     3dc:	ldr	x21, [sp, #32]
     3e0:	ldp	x29, x30, [sp], #48
     3e4:	ret
     3e8:	ldr	w0, [x20, #12]
     3ec:	sub	w1, w0, #0x1
     3f0:	str	w1, [x20, #12]
     3f4:	b	330 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x158>
     3f8:	ldr	w0, [x20, #12]
     3fc:	sub	w1, w0, #0x1
     400:	str	w1, [x20, #12]
     404:	b	3a8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x1d0>
     408:	mov	x0, x20
     40c:	blr	x2
     410:	b	230 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x58>
     414:	mov	x0, x20
     418:	blr	x2
     41c:	b	2d0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xf8>
     420:	mov	x0, x20
     424:	blr	x1
     428:	b	38c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x1b4>
     42c:	mov	x0, x20
     430:	blr	x1
     434:	b	314 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x13c>

0000000000000438 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev>:
     438:	stp	x29, x30, [sp, #-48]!
     43c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     440:	mov	x29, sp
     444:	ldr	x1, [x1]
     448:	stp	x19, x20, [sp, #16]
     44c:	mov	x19, x0
     450:	ldr	x20, [x0, #144]
     454:	str	x21, [sp, #32]
     458:	add	x1, x1, #0x10
     45c:	str	x1, [x0]
     460:	cbz	x20, 490 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x58>
     464:	adrp	x21, 0 <__pthread_key_create>
     468:	ldr	x0, [x21]
     46c:	cbz	x0, 554 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x11c>
     470:	add	x1, x20, #0x8
     474:	ldaxr	w0, [x1]
     478:	sub	w2, w0, #0x1
     47c:	stlxr	w3, w2, [x1]
     480:	cbnz	w3, 474 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x3c>
     484:	cmp	w0, #0x1
     488:	b.eq	568 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x130>  // b.none
     48c:	nop
     490:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     494:	ldr	w2, [x19, #128]
     498:	ldr	x20, [x19, #112]
     49c:	ldr	x0, [x0]
     4a0:	ubfiz	x1, x2, #5, #32
     4a4:	add	x0, x0, #0x10
     4a8:	str	x0, [x19, #8]
     4ac:	cbz	w2, 4f4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xbc>
     4b0:	add	x21, x20, x1
     4b4:	b	4c4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x8c>
     4b8:	add	x20, x20, #0x20
     4bc:	cmp	x21, x20
     4c0:	b.eq	4e8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xb0>  // b.none
     4c4:	ldr	w0, [x20]
     4c8:	cmn	w0, #0x3
     4cc:	b.hi	4b8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x80>  // b.pmore
     4d0:	ldr	x0, [x20, #8]
     4d4:	cbz	x0, 4b8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x80>
     4d8:	add	x20, x20, #0x20
     4dc:	bl	0 <_ZdlPv>
     4e0:	cmp	x21, x20
     4e4:	b.ne	4c4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x8c>  // b.any
     4e8:	ldr	w1, [x19, #128]
     4ec:	ldr	x20, [x19, #112]
     4f0:	lsl	x1, x1, #5
     4f4:	mov	x0, x20
     4f8:	bl	0 <_ZdlPvm>
     4fc:	ldr	x20, [x19, #64]
     500:	cbz	x20, 530 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xf8>
     504:	adrp	x21, 0 <__pthread_key_create>
     508:	ldr	x0, [x21]
     50c:	cbz	x0, 5cc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x194>
     510:	add	x1, x20, #0x8
     514:	ldaxr	w0, [x1]
     518:	sub	w2, w0, #0x1
     51c:	stlxr	w3, w2, [x1]
     520:	cbnz	w3, 514 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xdc>
     524:	cmp	w0, #0x1
     528:	b.eq	5e0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x1a8>  // b.none
     52c:	nop
     530:	ldr	x0, [x19, #32]
     534:	cbz	x0, 53c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x104>
     538:	bl	0 <_ZdlPv>
     53c:	mov	x0, x19
     540:	mov	x1, #0xb0                  	// #176
     544:	ldp	x19, x20, [sp, #16]
     548:	ldr	x21, [sp, #32]
     54c:	ldp	x29, x30, [sp], #48
     550:	b	0 <_ZdlPvm>
     554:	ldr	w0, [x20, #8]
     558:	sub	w1, w0, #0x1
     55c:	str	w1, [x20, #8]
     560:	cmp	w0, #0x1
     564:	b.ne	490 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x58>  // b.any
     568:	ldr	x1, [x20]
     56c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     570:	ldr	x0, [x0]
     574:	ldr	x1, [x1, #16]
     578:	cmp	x1, x0
     57c:	b.ne	688 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x250>  // b.any
     580:	ldr	x21, [x21]
     584:	cbz	x21, 644 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x20c>
     588:	add	x1, x20, #0xc
     58c:	ldaxr	w0, [x1]
     590:	sub	w2, w0, #0x1
     594:	stlxr	w3, w2, [x1]
     598:	cbnz	w3, 58c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x154>
     59c:	cmp	w0, #0x1
     5a0:	b.ne	490 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x58>  // b.any
     5a4:	ldr	x1, [x20]
     5a8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     5ac:	ldr	x0, [x0]
     5b0:	ldr	x2, [x1, #24]
     5b4:	cmp	x2, x0
     5b8:	b.ne	664 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x22c>  // b.any
     5bc:	ldr	x1, [x1, #8]
     5c0:	mov	x0, x20
     5c4:	blr	x1
     5c8:	b	490 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x58>
     5cc:	ldr	w0, [x20, #8]
     5d0:	sub	w1, w0, #0x1
     5d4:	str	w1, [x20, #8]
     5d8:	cmp	w0, #0x1
     5dc:	b.ne	530 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xf8>  // b.any
     5e0:	ldr	x1, [x20]
     5e4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     5e8:	ldr	x0, [x0]
     5ec:	ldr	x1, [x1, #16]
     5f0:	cmp	x1, x0
     5f4:	b.ne	67c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x244>  // b.any
     5f8:	ldr	x21, [x21]
     5fc:	cbz	x21, 654 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x21c>
     600:	add	x1, x20, #0xc
     604:	ldaxr	w0, [x1]
     608:	sub	w2, w0, #0x1
     60c:	stlxr	w3, w2, [x1]
     610:	cbnz	w3, 604 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x1cc>
     614:	cmp	w0, #0x1
     618:	b.ne	530 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xf8>  // b.any
     61c:	ldr	x1, [x20]
     620:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     624:	ldr	x0, [x0]
     628:	ldr	x2, [x1, #24]
     62c:	cmp	x2, x0
     630:	b.ne	670 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x238>  // b.any
     634:	ldr	x1, [x1, #8]
     638:	mov	x0, x20
     63c:	blr	x1
     640:	b	530 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xf8>
     644:	ldr	w0, [x20, #12]
     648:	sub	w1, w0, #0x1
     64c:	str	w1, [x20, #12]
     650:	b	59c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x164>
     654:	ldr	w0, [x20, #12]
     658:	sub	w1, w0, #0x1
     65c:	str	w1, [x20, #12]
     660:	b	614 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x1dc>
     664:	mov	x0, x20
     668:	blr	x2
     66c:	b	490 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x58>
     670:	mov	x0, x20
     674:	blr	x2
     678:	b	530 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xf8>
     67c:	mov	x0, x20
     680:	blr	x1
     684:	b	5f8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x1c0>
     688:	mov	x0, x20
     68c:	blr	x1
     690:	b	580 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x148>
     694:	nop

0000000000000698 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev>:
     698:	stp	x29, x30, [sp, #-48]!
     69c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     6a0:	mov	x29, sp
     6a4:	stp	x19, x20, [sp, #16]
     6a8:	mov	x19, x0
     6ac:	ldr	w0, [x0, #120]
     6b0:	ldr	x1, [x1]
     6b4:	ldr	x20, [x19, #104]
     6b8:	str	x21, [sp, #32]
     6bc:	add	x1, x1, #0x10
     6c0:	str	x1, [x19]
     6c4:	ubfiz	x1, x0, #5, #32
     6c8:	cbz	w0, 710 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x78>
     6cc:	add	x21, x20, x1
     6d0:	b	6e0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x48>
     6d4:	add	x20, x20, #0x20
     6d8:	cmp	x21, x20
     6dc:	b.eq	704 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x6c>  // b.none
     6e0:	ldr	w0, [x20]
     6e4:	cmn	w0, #0x3
     6e8:	b.hi	6d4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x3c>  // b.pmore
     6ec:	ldr	x0, [x20, #8]
     6f0:	cbz	x0, 6d4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x3c>
     6f4:	add	x20, x20, #0x20
     6f8:	bl	0 <_ZdlPv>
     6fc:	cmp	x21, x20
     700:	b.ne	6e0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x48>  // b.any
     704:	ldr	w1, [x19, #120]
     708:	ldr	x20, [x19, #104]
     70c:	lsl	x1, x1, #5
     710:	mov	x0, x20
     714:	bl	0 <_ZdlPvm>
     718:	ldr	x20, [x19, #56]
     71c:	cbz	x20, 748 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xb0>
     720:	adrp	x21, 0 <__pthread_key_create>
     724:	ldr	x0, [x21]
     728:	cbz	x0, 76c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xd4>
     72c:	add	x1, x20, #0x8
     730:	ldaxr	w0, [x1]
     734:	sub	w2, w0, #0x1
     738:	stlxr	w3, w2, [x1]
     73c:	cbnz	w3, 730 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x98>
     740:	cmp	w0, #0x1
     744:	b.eq	780 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xe8>  // b.none
     748:	ldr	x0, [x19, #24]
     74c:	cbz	x0, 754 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xbc>
     750:	bl	0 <_ZdlPv>
     754:	mov	x0, x19
     758:	mov	x1, #0x80                  	// #128
     75c:	ldp	x19, x20, [sp, #16]
     760:	ldr	x21, [sp, #32]
     764:	ldp	x29, x30, [sp], #48
     768:	b	0 <_ZdlPvm>
     76c:	ldr	w0, [x20, #8]
     770:	sub	w1, w0, #0x1
     774:	str	w1, [x20, #8]
     778:	cmp	w0, #0x1
     77c:	b.ne	748 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xb0>  // b.any
     780:	ldr	x1, [x20]
     784:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     788:	ldr	x0, [x0]
     78c:	ldr	x1, [x1, #16]
     790:	cmp	x1, x0
     794:	b.ne	800 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x168>  // b.any
     798:	ldr	x21, [x21]
     79c:	cbz	x21, 7e4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x14c>
     7a0:	add	x1, x20, #0xc
     7a4:	ldaxr	w0, [x1]
     7a8:	sub	w2, w0, #0x1
     7ac:	stlxr	w3, w2, [x1]
     7b0:	cbnz	w3, 7a4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x10c>
     7b4:	cmp	w0, #0x1
     7b8:	b.ne	748 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xb0>  // b.any
     7bc:	ldr	x1, [x20]
     7c0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     7c4:	ldr	x0, [x0]
     7c8:	ldr	x2, [x1, #24]
     7cc:	cmp	x2, x0
     7d0:	b.ne	7f4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x15c>  // b.any
     7d4:	ldr	x1, [x1, #8]
     7d8:	mov	x0, x20
     7dc:	blr	x1
     7e0:	b	748 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xb0>
     7e4:	ldr	w0, [x20, #12]
     7e8:	sub	w1, w0, #0x1
     7ec:	str	w1, [x20, #12]
     7f0:	b	7b4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x11c>
     7f4:	mov	x0, x20
     7f8:	blr	x2
     7fc:	b	748 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xb0>
     800:	mov	x0, x20
     804:	blr	x1
     808:	b	798 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x100>
     80c:	nop

0000000000000810 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     810:	stp	x29, x30, [sp, #-64]!
     814:	adrp	x5, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     818:	mov	x29, sp
     81c:	stp	x21, x22, [sp, #32]
     820:	mov	x21, x2
     824:	mov	x22, x3
     828:	ldr	x5, [x5]
     82c:	stp	x19, x20, [sp, #16]
     830:	mov	x19, x0
     834:	stp	x23, x24, [sp, #48]
     838:	add	x24, x0, #0x18
     83c:	add	x5, x5, #0x10
     840:	ldr	x2, [x2, #8]
     844:	mov	x23, x4
     848:	ldr	x20, [x21, #16]
     84c:	str	x5, [x0]
     850:	ldr	w0, [x21]
     854:	str	w1, [x19, #8]
     858:	sub	x20, x20, x2
     85c:	str	w0, [x19, #16]
     860:	str	xzr, [x19, #24]
     864:	cmp	xzr, x20, asr #2
     868:	stp	xzr, xzr, [x24, #8]
     86c:	b.eq	934 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x124>  // b.none
     870:	asr	x0, x20, #2
     874:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
     878:	cmp	x0, x1
     87c:	b.hi	93c <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x12c>  // b.pmore
     880:	mov	x0, x20
     884:	bl	0 <_Znwm>
     888:	mov	x5, x0
     88c:	str	x5, [x19, #24]
     890:	add	x20, x5, x20
     894:	stp	x5, x20, [x24, #8]
     898:	ldp	x1, x2, [x21, #8]
     89c:	cmp	x1, x2
     8a0:	sub	x20, x2, x1
     8a4:	b.eq	8b8 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xa8>  // b.none
     8a8:	mov	x0, x5
     8ac:	mov	x2, x20
     8b0:	bl	0 <memmove>
     8b4:	mov	x5, x0
     8b8:	ldp	x1, x0, [x22]
     8bc:	add	x5, x5, x20
     8c0:	str	x5, [x24, #8]
     8c4:	stp	x1, x0, [x19, #48]
     8c8:	cbz	x0, 8ec <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xdc>
     8cc:	adrp	x1, 0 <__pthread_key_create>
     8d0:	ldr	x1, [x1]
     8d4:	cbz	x1, 924 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x114>
     8d8:	add	x0, x0, #0x8
     8dc:	ldaxr	w1, [x0]
     8e0:	add	w1, w1, #0x1
     8e4:	stlxr	w2, w1, [x0]
     8e8:	cbnz	w2, 8dc <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xcc>
     8ec:	ldr	w2, [x22, #24]
     8f0:	ldr	x3, [x22, #16]
     8f4:	ldur	x1, [x22, #28]
     8f8:	ldp	x21, x22, [sp, #32]
     8fc:	str	x3, [x19, #64]
     900:	str	w2, [x19, #72]
     904:	stur	x1, [x19, #76]
     908:	stp	x23, xzr, [x19, #88]
     90c:	stp	xzr, xzr, [x19, #104]
     910:	str	wzr, [x19, #120]
     914:	ldp	x19, x20, [sp, #16]
     918:	ldp	x23, x24, [sp, #48]
     91c:	ldp	x29, x30, [sp], #64
     920:	ret
     924:	ldr	w1, [x0, #8]
     928:	add	w1, w1, #0x1
     92c:	str	w1, [x0, #8]
     930:	b	8ec <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xdc>
     934:	mov	x5, #0x0                   	// #0
     938:	b	88c <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x7c>
     93c:	bl	0 <_ZSt17__throw_bad_allocv>

0000000000000940 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     940:	stp	x29, x30, [sp, #-112]!
     944:	mov	x29, sp
     948:	stp	x19, x20, [sp, #16]
     94c:	mov	x19, x2
     950:	stp	x21, x22, [sp, #32]
     954:	mov	x21, x8
     958:	mov	w22, w0
     95c:	mov	x0, #0x80                  	// #128
     960:	stp	x23, x24, [sp, #48]
     964:	mov	x23, x1
     968:	mov	x24, x3
     96c:	bl	0 <_Znwm>
     970:	ldp	x1, x5, [x19]
     974:	stp	x1, x5, [sp, #72]
     978:	mov	x20, x0
     97c:	cbz	x5, 9a0 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x60>
     980:	adrp	x0, 0 <__pthread_key_create>
     984:	ldr	x0, [x0]
     988:	cbz	x0, a2c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xec>
     98c:	add	x5, x5, #0x8
     990:	ldaxr	w0, [x5]
     994:	add	w0, w0, #0x1
     998:	stlxr	w1, w0, [x5]
     99c:	cbnz	w1, 990 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x50>
     9a0:	ldr	w6, [x19, #24]
     9a4:	mov	x4, x24
     9a8:	ldr	x7, [x19, #16]
     9ac:	mov	x2, x23
     9b0:	ldur	x5, [x19, #28]
     9b4:	mov	w1, w22
     9b8:	add	x3, sp, #0x48
     9bc:	mov	x0, x20
     9c0:	str	x7, [sp, #88]
     9c4:	str	w6, [sp, #96]
     9c8:	stur	x5, [sp, #100]
     9cc:	bl	810 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9d0:	ldr	x19, [sp, #80]
     9d4:	cbz	x19, a00 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
     9d8:	adrp	x22, 0 <__pthread_key_create>
     9dc:	ldr	x0, [x22]
     9e0:	cbz	x0, a3c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xfc>
     9e4:	add	x1, x19, #0x8
     9e8:	ldaxr	w0, [x1]
     9ec:	sub	w2, w0, #0x1
     9f0:	stlxr	w3, w2, [x1]
     9f4:	cbnz	w3, 9e8 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xa8>
     9f8:	cmp	w0, #0x1
     9fc:	b.eq	a50 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x110>  // b.none
     a00:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     a04:	add	x1, x1, #0x0
     a08:	add	x1, x1, #0x10
     a0c:	str	x1, [x20]
     a10:	ldp	x23, x24, [sp, #48]
     a14:	str	x20, [x21]
     a18:	mov	x0, x21
     a1c:	ldp	x19, x20, [sp, #16]
     a20:	ldp	x21, x22, [sp, #32]
     a24:	ldp	x29, x30, [sp], #112
     a28:	ret
     a2c:	ldr	w0, [x5, #8]
     a30:	add	w0, w0, #0x1
     a34:	str	w0, [x5, #8]
     a38:	b	9a0 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x60>
     a3c:	ldr	w0, [x19, #8]
     a40:	sub	w1, w0, #0x1
     a44:	str	w1, [x19, #8]
     a48:	cmp	w0, #0x1
     a4c:	b.ne	a00 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>  // b.any
     a50:	ldr	x1, [x19]
     a54:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     a58:	ldr	x0, [x0]
     a5c:	ldr	x1, [x1, #16]
     a60:	cmp	x1, x0
     a64:	b.ne	ad0 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x190>  // b.any
     a68:	ldr	x22, [x22]
     a6c:	cbz	x22, ab4 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x174>
     a70:	add	x1, x19, #0xc
     a74:	ldaxr	w0, [x1]
     a78:	sub	w2, w0, #0x1
     a7c:	stlxr	w3, w2, [x1]
     a80:	cbnz	w3, a74 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>
     a84:	cmp	w0, #0x1
     a88:	b.ne	a00 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>  // b.any
     a8c:	ldr	x1, [x19]
     a90:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     a94:	ldr	x0, [x0]
     a98:	ldr	x2, [x1, #24]
     a9c:	cmp	x2, x0
     aa0:	b.ne	ac4 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x184>  // b.any
     aa4:	ldr	x1, [x1, #8]
     aa8:	mov	x0, x19
     aac:	blr	x1
     ab0:	b	a00 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
     ab4:	ldr	w0, [x19, #12]
     ab8:	sub	w1, w0, #0x1
     abc:	str	w1, [x19, #12]
     ac0:	b	a84 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x144>
     ac4:	mov	x0, x19
     ac8:	blr	x2
     acc:	b	a00 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
     ad0:	mov	x0, x19
     ad4:	blr	x1
     ad8:	b	a68 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>
     adc:	nop

0000000000000ae0 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     ae0:	stp	x29, x30, [sp, #-176]!
     ae4:	mov	x29, sp
     ae8:	stp	x19, x20, [sp, #16]
     aec:	mov	x19, x0
     af0:	mov	x20, x1
     af4:	ldp	x1, x0, [x0, #64]
     af8:	stp	x21, x22, [sp, #32]
     afc:	stp	x23, x24, [sp, #48]
     b00:	stp	x25, x26, [sp, #64]
     b04:	sub	x0, x0, x1
     b08:	str	x27, [sp, #80]
     b0c:	asr	x0, x0, #4
     b10:	cmp	x0, w2, uxtw
     b14:	b.ls	d68 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x288>  // b.plast
     b18:	mov	w26, w2
     b1c:	mov	x23, x3
     b20:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
     b24:	lsl	x0, x26, #4
     b28:	add	x3, x1, x0
     b2c:	ldr	x21, [x3, #8]
     b30:	stp	xzr, xzr, [sp, #112]
     b34:	str	xzr, [sp, #128]
     b38:	ldr	x27, [x1, x0]
     b3c:	sbfx	x0, x21, #0, #62
     b40:	cmp	x0, x2
     b44:	lsl	x21, x21, #2
     b48:	b.hi	d5c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x27c>  // b.pmore
     b4c:	mov	x22, x8
     b50:	cbz	x0, ca4 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c4>
     b54:	mov	x0, x21
     b58:	bl	0 <_Znwm>
     b5c:	mov	x3, x0
     b60:	add	x24, x0, x21
     b64:	cbz	x21, c88 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a8>
     b68:	ldr	x25, [sp, #112]
     b6c:	mov	x0, x3
     b70:	mov	x2, x21
     b74:	mov	x1, x27
     b78:	bl	0 <memcpy>
     b7c:	mov	x3, x0
     b80:	stp	x3, x24, [sp, #112]
     b84:	str	x24, [sp, #128]
     b88:	cbz	x25, b94 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb4>
     b8c:	mov	x0, x25
     b90:	bl	0 <_ZdlPv>
     b94:	ldp	x1, x0, [x19, #48]
     b98:	cmp	x26, x0
     b9c:	b.cs	d58 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x278>  // b.hs, b.nlast
     ba0:	ldr	w1, [x1, x26, lsl #2]
     ba4:	mov	x0, #0x80                  	// #128
     ba8:	str	w1, [sp, #104]
     bac:	ldr	x19, [x19]
     bb0:	bl	0 <_Znwm>
     bb4:	ldp	x3, x2, [x20]
     bb8:	ldr	w1, [x19, #32]
     bbc:	mov	x19, x0
     bc0:	stp	x3, x2, [sp, #136]
     bc4:	cbz	x2, be8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x108>
     bc8:	adrp	x0, 0 <__pthread_key_create>
     bcc:	ldr	x0, [x0]
     bd0:	cbz	x0, c94 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1b4>
     bd4:	add	x2, x2, #0x8
     bd8:	ldaxr	w0, [x2]
     bdc:	add	w0, w0, #0x1
     be0:	stlxr	w3, w0, [x2]
     be4:	cbnz	w3, bd8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf8>
     be8:	ldr	w6, [x20, #24]
     bec:	mov	x4, x23
     bf0:	ldr	x7, [x20, #16]
     bf4:	add	x3, sp, #0x88
     bf8:	ldur	x5, [x20, #28]
     bfc:	add	x2, sp, #0x68
     c00:	mov	x0, x19
     c04:	str	x7, [sp, #152]
     c08:	str	w6, [sp, #160]
     c0c:	stur	x5, [sp, #164]
     c10:	bl	810 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     c14:	ldr	x20, [sp, #144]
     c18:	cbz	x20, c48 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
     c1c:	adrp	x21, 0 <__pthread_key_create>
     c20:	ldr	x0, [x21]
     c24:	cbz	x0, cb8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d8>
     c28:	add	x1, x20, #0x8
     c2c:	ldaxr	w0, [x1]
     c30:	sub	w2, w0, #0x1
     c34:	stlxr	w3, w2, [x1]
     c38:	cbnz	w3, c2c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x14c>
     c3c:	cmp	w0, #0x1
     c40:	b.eq	ccc <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1ec>  // b.none
     c44:	nop
     c48:	ldr	x0, [sp, #112]
     c4c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     c50:	add	x1, x1, #0x0
     c54:	str	x19, [x22]
     c58:	add	x1, x1, #0x10
     c5c:	str	x1, [x19]
     c60:	cbz	x0, c68 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x188>
     c64:	bl	0 <_ZdlPv>
     c68:	mov	x0, x22
     c6c:	ldp	x19, x20, [sp, #16]
     c70:	ldp	x21, x22, [sp, #32]
     c74:	ldp	x23, x24, [sp, #48]
     c78:	ldp	x25, x26, [sp, #64]
     c7c:	ldr	x27, [sp, #80]
     c80:	ldp	x29, x30, [sp], #176
     c84:	ret
     c88:	mov	x24, x0
     c8c:	ldr	x25, [sp, #112]
     c90:	b	b80 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xa0>
     c94:	ldr	w0, [x2, #8]
     c98:	add	w0, w0, #0x1
     c9c:	str	w0, [x2, #8]
     ca0:	b	be8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x108>
     ca4:	mov	x24, x21
     ca8:	cbz	x21, b94 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb4>
     cac:	mov	x25, #0x0                   	// #0
     cb0:	mov	x3, #0x0                   	// #0
     cb4:	b	b6c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x8c>
     cb8:	ldr	w0, [x20, #8]
     cbc:	sub	w1, w0, #0x1
     cc0:	str	w1, [x20, #8]
     cc4:	cmp	w0, #0x1
     cc8:	b.ne	c48 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>  // b.any
     ccc:	ldr	x1, [x20]
     cd0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     cd4:	ldr	x0, [x0]
     cd8:	ldr	x1, [x1, #16]
     cdc:	cmp	x1, x0
     ce0:	b.ne	d4c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x26c>  // b.any
     ce4:	ldr	x21, [x21]
     ce8:	cbz	x21, d30 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x250>
     cec:	add	x1, x20, #0xc
     cf0:	ldaxr	w0, [x1]
     cf4:	sub	w2, w0, #0x1
     cf8:	stlxr	w3, w2, [x1]
     cfc:	cbnz	w3, cf0 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x210>
     d00:	cmp	w0, #0x1
     d04:	b.ne	c48 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>  // b.any
     d08:	ldr	x1, [x20]
     d0c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     d10:	ldr	x0, [x0]
     d14:	ldr	x2, [x1, #24]
     d18:	cmp	x2, x0
     d1c:	b.ne	d40 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x260>  // b.any
     d20:	ldr	x1, [x1, #8]
     d24:	mov	x0, x20
     d28:	blr	x1
     d2c:	b	c48 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
     d30:	ldr	w0, [x20, #12]
     d34:	sub	w1, w0, #0x1
     d38:	str	w1, [x20, #12]
     d3c:	b	d00 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x220>
     d40:	mov	x0, x20
     d44:	blr	x2
     d48:	b	c48 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
     d4c:	mov	x0, x20
     d50:	blr	x1
     d54:	b	ce4 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x204>
     d58:	bl	38 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEixEm.isra.0.part.0>
     d5c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     d60:	add	x0, x0, #0x0
     d64:	bl	0 <_ZSt20__throw_length_errorPKc>
     d68:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     d6c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     d70:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     d74:	add	x3, x3, #0x0
     d78:	add	x1, x1, #0x0
     d7c:	add	x0, x0, #0x0
     d80:	mov	w2, #0x3e                  	// #62
     d84:	bl	0 <__assert_fail>

0000000000000d88 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     d88:	stp	x29, x30, [sp, #-160]!
     d8c:	mov	x29, sp
     d90:	stp	x19, x20, [sp, #16]
     d94:	mov	x19, x1
     d98:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
     d9c:	ldr	x20, [x0, #40]
     da0:	stp	x21, x22, [sp, #32]
     da4:	mov	x21, x0
     da8:	stp	x23, x24, [sp, #48]
     dac:	sbfx	x0, x20, #0, #62
     db0:	stp	x25, x26, [sp, #64]
     db4:	cmp	x0, x1
     db8:	stp	xzr, xzr, [sp, #96]
     dbc:	str	xzr, [sp, #112]
     dc0:	ldr	x26, [x21, #32]
     dc4:	b.hi	fb0 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x228>  // b.pmore
     dc8:	mov	x22, x8
     dcc:	mov	x23, x2
     dd0:	lsl	x20, x20, #2
     dd4:	cbz	x0, efc <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x174>
     dd8:	mov	x0, x20
     ddc:	bl	0 <_Znwm>
     de0:	mov	x3, x0
     de4:	add	x24, x0, x20
     de8:	cbz	x20, ee0 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x158>
     dec:	ldr	x25, [sp, #96]
     df0:	mov	x0, x3
     df4:	mov	x2, x20
     df8:	mov	x1, x26
     dfc:	bl	0 <memcpy>
     e00:	mov	x3, x0
     e04:	stp	x3, x24, [sp, #96]
     e08:	str	x24, [sp, #112]
     e0c:	cbz	x25, e18 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x90>
     e10:	mov	x0, x25
     e14:	bl	0 <_ZdlPv>
     e18:	ldr	x0, [x21]
     e1c:	ldr	x1, [x19, #8]
     e20:	ldr	w2, [x0, #44]
     e24:	str	w2, [sp, #88]
     e28:	ldr	x2, [x19]
     e2c:	ldr	w0, [x0, #32]
     e30:	stp	x2, x1, [sp, #120]
     e34:	cbz	x1, e58 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd0>
     e38:	adrp	x2, 0 <__pthread_key_create>
     e3c:	ldr	x2, [x2]
     e40:	cbz	x2, eec <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x164>
     e44:	add	x1, x1, #0x8
     e48:	ldaxr	w2, [x1]
     e4c:	add	w2, w2, #0x1
     e50:	stlxr	w3, w2, [x1]
     e54:	cbnz	w3, e48 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
     e58:	ldr	w5, [x19, #24]
     e5c:	mov	x3, x23
     e60:	ldr	x6, [x19, #16]
     e64:	mov	x8, x22
     e68:	ldur	x4, [x19, #28]
     e6c:	add	x2, sp, #0x78
     e70:	add	x1, sp, #0x58
     e74:	str	x6, [sp, #136]
     e78:	str	w5, [sp, #144]
     e7c:	stur	x4, [sp, #148]
     e80:	bl	940 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e84:	ldr	x19, [sp, #128]
     e88:	cbz	x19, eb8 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>
     e8c:	adrp	x20, 0 <__pthread_key_create>
     e90:	ldr	x0, [x20]
     e94:	cbz	x0, f10 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x188>
     e98:	add	x1, x19, #0x8
     e9c:	ldaxr	w0, [x1]
     ea0:	sub	w2, w0, #0x1
     ea4:	stlxr	w3, w2, [x1]
     ea8:	cbnz	w3, e9c <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x114>
     eac:	cmp	w0, #0x1
     eb0:	b.eq	f24 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x19c>  // b.none
     eb4:	nop
     eb8:	ldr	x0, [sp, #96]
     ebc:	cbz	x0, ec4 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x13c>
     ec0:	bl	0 <_ZdlPv>
     ec4:	mov	x0, x22
     ec8:	ldp	x19, x20, [sp, #16]
     ecc:	ldp	x21, x22, [sp, #32]
     ed0:	ldp	x23, x24, [sp, #48]
     ed4:	ldp	x25, x26, [sp, #64]
     ed8:	ldp	x29, x30, [sp], #160
     edc:	ret
     ee0:	mov	x24, x0
     ee4:	ldr	x25, [sp, #96]
     ee8:	b	e04 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x7c>
     eec:	ldr	w2, [x1, #8]
     ef0:	add	w2, w2, #0x1
     ef4:	str	w2, [x1, #8]
     ef8:	b	e58 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd0>
     efc:	mov	x24, x20
     f00:	cbz	x20, e18 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x90>
     f04:	mov	x25, #0x0                   	// #0
     f08:	mov	x3, #0x0                   	// #0
     f0c:	b	df0 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x68>
     f10:	ldr	w0, [x19, #8]
     f14:	sub	w1, w0, #0x1
     f18:	str	w1, [x19, #8]
     f1c:	cmp	w0, #0x1
     f20:	b.ne	eb8 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>  // b.any
     f24:	ldr	x1, [x19]
     f28:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     f2c:	ldr	x0, [x0]
     f30:	ldr	x1, [x1, #16]
     f34:	cmp	x1, x0
     f38:	b.ne	fa4 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x21c>  // b.any
     f3c:	ldr	x20, [x20]
     f40:	cbz	x20, f88 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x200>
     f44:	add	x1, x19, #0xc
     f48:	ldaxr	w0, [x1]
     f4c:	sub	w2, w0, #0x1
     f50:	stlxr	w3, w2, [x1]
     f54:	cbnz	w3, f48 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c0>
     f58:	cmp	w0, #0x1
     f5c:	b.ne	eb8 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>  // b.any
     f60:	ldr	x1, [x19]
     f64:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     f68:	ldr	x0, [x0]
     f6c:	ldr	x2, [x1, #24]
     f70:	cmp	x2, x0
     f74:	b.ne	f98 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x210>  // b.any
     f78:	ldr	x1, [x1, #8]
     f7c:	mov	x0, x19
     f80:	blr	x1
     f84:	b	eb8 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>
     f88:	ldr	w0, [x19, #12]
     f8c:	sub	w1, w0, #0x1
     f90:	str	w1, [x19, #12]
     f94:	b	f58 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d0>
     f98:	mov	x0, x19
     f9c:	blr	x2
     fa0:	b	eb8 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>
     fa4:	mov	x0, x19
     fa8:	blr	x1
     fac:	b	f3c <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1b4>
     fb0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     fb4:	add	x0, x0, #0x0
     fb8:	bl	0 <_ZSt20__throw_length_errorPKc>
     fbc:	nop

0000000000000fc0 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     fc0:	stp	x29, x30, [sp, #-144]!
     fc4:	mov	x29, sp
     fc8:	stp	x19, x20, [sp, #16]
     fcc:	mov	x19, x1
     fd0:	mov	x20, x8
     fd4:	stp	x21, x22, [sp, #32]
     fd8:	mov	x22, x0
     fdc:	mov	w1, #0x0                   	// #0
     fe0:	str	x23, [sp, #48]
     fe4:	add	x23, sp, #0x48
     fe8:	mov	x21, x2
     fec:	mov	x8, x23
     ff0:	mov	w2, #0x0                   	// #0
     ff4:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
     ff8:	ldp	x2, x1, [x19]
     ffc:	ldr	x0, [x22]
    1000:	ldr	w0, [x0, #32]
    1004:	stp	x2, x1, [sp, #104]
    1008:	cbz	x1, 102c <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x6c>
    100c:	adrp	x2, 0 <__pthread_key_create>
    1010:	ldr	x2, [x2]
    1014:	cbz	x2, 10ac <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xec>
    1018:	add	x1, x1, #0x8
    101c:	ldaxr	w2, [x1]
    1020:	add	w2, w2, #0x1
    1024:	stlxr	w3, w2, [x1]
    1028:	cbnz	w3, 101c <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x5c>
    102c:	ldr	w5, [x19, #24]
    1030:	mov	x3, x21
    1034:	ldr	x6, [x19, #16]
    1038:	mov	x1, x23
    103c:	ldur	x4, [x19, #28]
    1040:	mov	x8, x20
    1044:	add	x2, sp, #0x68
    1048:	str	x6, [sp, #120]
    104c:	str	w5, [sp, #128]
    1050:	stur	x4, [sp, #132]
    1054:	bl	940 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1058:	ldr	x19, [sp, #112]
    105c:	cbz	x19, 1088 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
    1060:	adrp	x21, 0 <__pthread_key_create>
    1064:	ldr	x0, [x21]
    1068:	cbz	x0, 10bc <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xfc>
    106c:	add	x1, x19, #0x8
    1070:	ldaxr	w0, [x1]
    1074:	sub	w2, w0, #0x1
    1078:	stlxr	w3, w2, [x1]
    107c:	cbnz	w3, 1070 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb0>
    1080:	cmp	w0, #0x1
    1084:	b.eq	10d0 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x110>  // b.none
    1088:	ldr	x0, [sp, #80]
    108c:	cbz	x0, 1094 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd4>
    1090:	bl	0 <_ZdlPv>
    1094:	mov	x0, x20
    1098:	ldp	x19, x20, [sp, #16]
    109c:	ldp	x21, x22, [sp, #32]
    10a0:	ldr	x23, [sp, #48]
    10a4:	ldp	x29, x30, [sp], #144
    10a8:	ret
    10ac:	ldr	w2, [x1, #8]
    10b0:	add	w2, w2, #0x1
    10b4:	str	w2, [x1, #8]
    10b8:	b	102c <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x6c>
    10bc:	ldr	w0, [x19, #8]
    10c0:	sub	w1, w0, #0x1
    10c4:	str	w1, [x19, #8]
    10c8:	cmp	w0, #0x1
    10cc:	b.ne	1088 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>  // b.any
    10d0:	ldr	x1, [x19]
    10d4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    10d8:	ldr	x0, [x0]
    10dc:	ldr	x1, [x1, #16]
    10e0:	cmp	x1, x0
    10e4:	b.ne	1150 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x190>  // b.any
    10e8:	ldr	x21, [x21]
    10ec:	cbz	x21, 1134 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x174>
    10f0:	add	x1, x19, #0xc
    10f4:	ldaxr	w0, [x1]
    10f8:	sub	w2, w0, #0x1
    10fc:	stlxr	w3, w2, [x1]
    1100:	cbnz	w3, 10f4 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>
    1104:	cmp	w0, #0x1
    1108:	b.ne	1088 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>  // b.any
    110c:	ldr	x1, [x19]
    1110:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1114:	ldr	x0, [x0]
    1118:	ldr	x2, [x1, #24]
    111c:	cmp	x2, x0
    1120:	b.ne	1144 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x184>  // b.any
    1124:	ldr	x1, [x1, #8]
    1128:	mov	x0, x19
    112c:	blr	x1
    1130:	b	1088 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
    1134:	ldr	w0, [x19, #12]
    1138:	sub	w1, w0, #0x1
    113c:	str	w1, [x19, #12]
    1140:	b	1104 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x144>
    1144:	mov	x0, x19
    1148:	blr	x2
    114c:	b	1088 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
    1150:	mov	x0, x19
    1154:	blr	x1
    1158:	b	10e8 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>
    115c:	nop

0000000000001160 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv>:
    1160:	stp	x29, x30, [sp, #-64]!
    1164:	mov	x29, sp
    1168:	stp	x21, x22, [sp, #32]
    116c:	add	x22, x0, #0x60
    1170:	mov	x21, x0
    1174:	stp	x19, x20, [sp, #16]
    1178:	ldr	w20, [x22, #24]
    117c:	stp	x23, x24, [sp, #48]
    1180:	ldr	w23, [x22, #16]
    1184:	cbz	w20, 12cc <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x16c>
    1188:	ldr	x19, [x0, #104]
    118c:	ubfiz	x24, x20, #5, #32
    1190:	mov	w20, w20
    1194:	add	x24, x19, x24
    1198:	b	11a8 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x48>
    119c:	add	x19, x19, #0x20
    11a0:	cmp	x24, x19
    11a4:	b.eq	11cc <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x6c>  // b.none
    11a8:	ldr	w0, [x19]
    11ac:	cmn	w0, #0x3
    11b0:	b.hi	119c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x3c>  // b.pmore
    11b4:	ldr	x0, [x19, #8]
    11b8:	cbz	x0, 119c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x3c>
    11bc:	add	x19, x19, #0x20
    11c0:	bl	0 <_ZdlPv>
    11c4:	cmp	x24, x19
    11c8:	b.ne	11a8 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x48>  // b.any
    11cc:	ldr	w0, [x22, #24]
    11d0:	cbz	w23, 12a0 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x140>
    11d4:	subs	w23, w23, #0x1
    11d8:	b.eq	1318 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1b8>  // b.none
    11dc:	clz	w23, w23
    11e0:	mov	w2, #0x21                  	// #33
    11e4:	sub	w23, w2, w23
    11e8:	mov	w2, #0x1                   	// #1
    11ec:	mov	w1, #0x40                  	// #64
    11f0:	lsl	w2, w2, w23
    11f4:	cmp	w2, w1
    11f8:	csel	w2, w2, w1, ge  // ge = tcont
    11fc:	cmp	w2, w0
    1200:	b.eq	133c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1dc>  // b.none
    1204:	lsl	w2, w2, #2
    1208:	mov	w0, #0xaaab                	// #43691
    120c:	movk	w0, #0xaaaa, lsl #16
    1210:	umull	x2, w2, w0
    1214:	lsr	x2, x2, #33
    1218:	add	w2, w2, #0x1
    121c:	orr	x2, x2, x2, lsr #1
    1220:	orr	x2, x2, x2, lsr #2
    1224:	orr	x2, x2, x2, lsr #4
    1228:	orr	x2, x2, x2, lsr #8
    122c:	orr	x2, x2, x2, lsr #16
    1230:	add	x2, x2, #0x1
    1234:	mov	w23, w2
    1238:	lsl	x19, x2, #5
    123c:	ldr	x0, [x22, #8]
    1240:	lsl	x1, x20, #5
    1244:	bl	0 <_ZdlPvm>
    1248:	str	w23, [x21, #120]
    124c:	mov	x0, x19
    1250:	bl	0 <_Znwm>
    1254:	stp	x0, xzr, [x21, #104]
    1258:	ldr	w1, [x21, #120]
    125c:	sub	w2, w1, #0x1
    1260:	tst	w2, w1
    1264:	b.ne	134c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1ec>  // b.any
    1268:	ubfiz	x1, x1, #5, #32
    126c:	add	x1, x0, x1
    1270:	cmp	x0, x1
    1274:	b.eq	12b8 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x158>  // b.none
    1278:	mov	w2, #0xffffffff            	// #-1
    127c:	nop
    1280:	str	w2, [x0], #32
    1284:	cmp	x1, x0
    1288:	b.ne	1280 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x120>  // b.any
    128c:	ldp	x19, x20, [sp, #16]
    1290:	ldp	x21, x22, [sp, #32]
    1294:	ldp	x23, x24, [sp, #48]
    1298:	ldp	x29, x30, [sp], #64
    129c:	ret
    12a0:	cbz	w0, 1300 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1a0>
    12a4:	ldr	x0, [x22, #8]
    12a8:	lsl	x1, x20, #5
    12ac:	bl	0 <_ZdlPvm>
    12b0:	stp	xzr, xzr, [x21, #104]
    12b4:	str	wzr, [x21, #120]
    12b8:	ldp	x19, x20, [sp, #16]
    12bc:	ldp	x21, x22, [sp, #32]
    12c0:	ldp	x23, x24, [sp, #48]
    12c4:	ldp	x29, x30, [sp], #64
    12c8:	ret
    12cc:	cbz	w23, 1300 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1a0>
    12d0:	subs	w23, w23, #0x1
    12d4:	b.eq	132c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1cc>  // b.none
    12d8:	clz	w23, w23
    12dc:	mov	w2, #0x21                  	// #33
    12e0:	sub	w23, w2, w23
    12e4:	mov	w2, #0x1                   	// #1
    12e8:	mov	w0, #0x40                  	// #64
    12ec:	mov	x20, #0x0                   	// #0
    12f0:	lsl	w2, w2, w23
    12f4:	cmp	w2, w0
    12f8:	csel	w2, w2, w0, ge  // ge = tcont
    12fc:	b	1204 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0xa4>
    1300:	str	xzr, [x21, #112]
    1304:	ldp	x19, x20, [sp, #16]
    1308:	ldp	x21, x22, [sp, #32]
    130c:	ldp	x23, x24, [sp, #48]
    1310:	ldp	x29, x30, [sp], #64
    1314:	ret
    1318:	cmp	w0, #0x40
    131c:	b.eq	136c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x20c>  // b.none
    1320:	mov	x19, #0x1000                	// #4096
    1324:	mov	w23, #0x80                  	// #128
    1328:	b	123c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0xdc>
    132c:	mov	x19, #0x1000                	// #4096
    1330:	mov	w23, #0x80                  	// #128
    1334:	mov	x20, #0x0                   	// #0
    1338:	b	123c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0xdc>
    133c:	str	xzr, [x21, #112]
    1340:	sub	w0, w2, #0x1
    1344:	tst	w0, w2
    1348:	b.eq	13a0 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x240>  // b.none
    134c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1350:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1354:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1358:	add	x3, x3, #0x0
    135c:	add	x1, x1, #0x0
    1360:	add	x0, x0, #0x0
    1364:	mov	w2, #0x15b                 	// #347
    1368:	bl	0 <__assert_fail>
    136c:	mov	x2, #0x800                 	// #2048
    1370:	str	xzr, [x21, #112]
    1374:	ldr	x0, [x21, #104]
    1378:	mov	w1, #0xffffffff            	// #-1
    137c:	add	x2, x0, x2
    1380:	str	w1, [x0], #32
    1384:	cmp	x2, x0
    1388:	b.ne	1380 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x220>  // b.any
    138c:	ldp	x19, x20, [sp, #16]
    1390:	ldp	x21, x22, [sp, #32]
    1394:	ldp	x23, x24, [sp, #48]
    1398:	ldp	x29, x30, [sp], #64
    139c:	ret
    13a0:	ubfiz	x2, x2, #5, #32
    13a4:	b	1374 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x214>

00000000000013a8 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE>:
    13a8:	stp	x29, x30, [sp, #-96]!
    13ac:	mov	x29, sp
    13b0:	stp	x23, x24, [sp, #48]
    13b4:	mov	x23, x0
    13b8:	stp	x27, x28, [sp, #80]
    13bc:	ldr	w27, [x0, #120]
    13c0:	ldr	x24, [x0, #104]
    13c4:	stp	x19, x20, [sp, #16]
    13c8:	ldr	w0, [x0, #112]
    13cc:	stp	x21, x22, [sp, #32]
    13d0:	mov	x21, x2
    13d4:	add	x27, x24, x27, lsl #5
    13d8:	stp	x25, x26, [sp, #64]
    13dc:	mov	w26, w1
    13e0:	ldr	x22, [x23, #96]
    13e4:	cbnz	w0, 1530 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x188>
    13e8:	mov	x24, x27
    13ec:	mov	w20, w26
    13f0:	add	x28, x20, x3
    13f4:	nop
    13f8:	cbz	x24, 1464 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xbc>
    13fc:	ldr	x0, [x23, #96]
    1400:	cmp	x22, x0
    1404:	b.ne	15b4 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x20c>  // b.any
    1408:	cbz	x27, 141c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x74>
    140c:	cmp	x22, x0
    1410:	b.ne	1594 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1ec>  // b.any
    1414:	cmp	x27, x24
    1418:	b.eq	1514 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x16c>  // b.none
    141c:	cmp	x0, x22
    1420:	b.ne	15d4 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x22c>  // b.any
    1424:	ldr	w3, [x24]
    1428:	mov	w2, w3
    142c:	cmp	x28, w3, uxtw
    1430:	b.cs	1470 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xc8>  // b.hs, b.nlast
    1434:	add	x24, x24, #0x20
    1438:	cmp	x27, x24
    143c:	b.cc	1574 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1cc>  // b.lo, b.ul, b.last
    1440:	b.eq	13f8 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x50>  // b.none
    1444:	nop
    1448:	ldr	w0, [x24]
    144c:	cmn	w0, #0x3
    1450:	b.ls	13f8 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x50>  // b.plast
    1454:	add	x24, x24, #0x20
    1458:	cmp	x27, x24
    145c:	b.ne	1448 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xa0>  // b.any
    1460:	cbnz	x24, 13fc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x54>
    1464:	cbz	x27, 1514 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x16c>
    1468:	ldr	x0, [x23, #96]
    146c:	b	140c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x64>
    1470:	ldp	x25, x19, [x24, #8]
    1474:	cmp	x25, x19
    1478:	b.ne	1488 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xe0>  // b.any
    147c:	b	1434 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x8c>
    1480:	ldr	w3, [x24]
    1484:	mov	w2, w3
    1488:	ldr	x0, [x25, #8]
    148c:	add	x2, x2, x0
    1490:	cmp	x20, x2
    1494:	b.hi	14dc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x134>  // b.pmore
    1498:	cmp	w26, w3
    149c:	csel	w1, w26, w3, cs  // cs = hs, nlast
    14a0:	cmp	w28, w2
    14a4:	csel	w2, w28, w2, cc  // cc = lo, ul, last
    14a8:	cmp	w1, w2
    14ac:	b.hi	1554 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1ac>  // b.pmore
    14b0:	cmp	w1, w3
    14b4:	sub	w2, w2, w1
    14b8:	csel	w4, w1, w3, cs  // cs = hs, nlast
    14bc:	cmp	w1, w26
    14c0:	sub	w3, w4, w3
    14c4:	csel	w1, w1, w26, cs  // cs = hs, nlast
    14c8:	ldr	x0, [x25]
    14cc:	sub	w1, w1, w26
    14d0:	add	x1, x1, x21
    14d4:	add	x0, x0, x3
    14d8:	bl	0 <memcpy>
    14dc:	add	x25, x25, #0x10
    14e0:	cmp	x19, x25
    14e4:	b.ne	1480 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xd8>  // b.any
    14e8:	ldr	x0, [x23, #96]
    14ec:	cmp	x22, x0
    14f0:	b.eq	1434 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x8c>  // b.none
    14f4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    14f8:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    14fc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1500:	add	x3, x3, #0x0
    1504:	add	x1, x1, #0x0
    1508:	add	x0, x0, #0x0
    150c:	mov	w2, #0x4cf                 	// #1231
    1510:	bl	0 <__assert_fail>
    1514:	ldp	x19, x20, [sp, #16]
    1518:	ldp	x21, x22, [sp, #32]
    151c:	ldp	x23, x24, [sp, #48]
    1520:	ldp	x25, x26, [sp, #64]
    1524:	ldp	x27, x28, [sp, #80]
    1528:	ldp	x29, x30, [sp], #96
    152c:	ret
    1530:	cmp	x27, x24
    1534:	b.cc	1574 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1cc>  // b.lo, b.ul, b.last
    1538:	b.eq	13ec <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x44>  // b.none
    153c:	ldr	w0, [x24]
    1540:	cmn	w0, #0x3
    1544:	b.ls	13ec <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x44>  // b.plast
    1548:	add	x24, x24, #0x20
    154c:	cmp	x27, x24
    1550:	b	1538 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x190>
    1554:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1558:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    155c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1560:	add	x3, x3, #0x0
    1564:	add	x1, x1, #0x0
    1568:	add	x0, x0, #0x0
    156c:	mov	w2, #0x12a                 	// #298
    1570:	bl	0 <__assert_fail>
    1574:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1578:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    157c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1580:	add	x3, x3, #0x0
    1584:	add	x1, x1, #0x0
    1588:	add	x0, x0, #0x0
    158c:	mov	w2, #0x4e0                 	// #1248
    1590:	bl	0 <__assert_fail>
    1594:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1598:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    159c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15a0:	add	x3, x3, #0x0
    15a4:	add	x1, x1, #0x0
    15a8:	add	x0, x0, #0x0
    15ac:	mov	w2, #0x4c8                 	// #1224
    15b0:	bl	0 <__assert_fail>
    15b4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15b8:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15bc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15c0:	add	x3, x3, #0x0
    15c4:	add	x1, x1, #0x0
    15c8:	add	x0, x0, #0x0
    15cc:	mov	w2, #0x4c7                 	// #1223
    15d0:	bl	0 <__assert_fail>
    15d4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15d8:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15dc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15e0:	add	x3, x3, #0x0
    15e4:	add	x1, x1, #0x0
    15e8:	add	x0, x0, #0x0
    15ec:	mov	w2, #0x4b3                 	// #1203
    15f0:	bl	0 <__assert_fail>
    15f4:	nop

00000000000015f8 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    15f8:	stp	x29, x30, [sp, #-128]!
    15fc:	adrp	x5, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1600:	mov	x29, sp
    1604:	stp	x19, x20, [sp, #16]
    1608:	mov	x19, x0
    160c:	mov	x20, x3
    1610:	stp	x21, x22, [sp, #32]
    1614:	mov	x22, x0
    1618:	add	x21, sp, #0x58
    161c:	ldr	x0, [x5]
    1620:	stp	x23, x24, [sp, #48]
    1624:	mov	x8, x21
    1628:	str	x25, [sp, #64]
    162c:	add	x0, x0, #0x10
    1630:	str	x0, [x22], #8
    1634:	mov	w23, w1
    1638:	mov	x0, x3
    163c:	mov	x24, x2
    1640:	mov	x25, x4
    1644:	bl	0 <_ZNK4llvm23WritableBinaryStreamRefcvNS_15BinaryStreamRefEEv>
    1648:	mov	x3, x21
    164c:	mov	x4, x25
    1650:	mov	x2, x24
    1654:	mov	w1, w23
    1658:	mov	x0, x22
    165c:	bl	810 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1660:	ldr	x21, [sp, #96]
    1664:	cbz	x21, 1690 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x98>
    1668:	adrp	x22, 0 <__pthread_key_create>
    166c:	ldr	x0, [x22]
    1670:	cbz	x0, 16fc <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x104>
    1674:	add	x1, x21, #0x8
    1678:	ldaxr	w0, [x1]
    167c:	sub	w2, w0, #0x1
    1680:	stlxr	w3, w2, [x1]
    1684:	cbnz	w3, 1678 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x80>
    1688:	cmp	w0, #0x1
    168c:	b.eq	1710 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x118>  // b.none
    1690:	ldp	x1, x0, [x20]
    1694:	stp	x1, x0, [x19, #136]
    1698:	cbz	x0, 16bc <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc4>
    169c:	adrp	x1, 0 <__pthread_key_create>
    16a0:	ldr	x1, [x1]
    16a4:	cbz	x1, 16ec <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf4>
    16a8:	add	x0, x0, #0x8
    16ac:	ldaxr	w1, [x0]
    16b0:	add	w1, w1, #0x1
    16b4:	stlxr	w2, w1, [x0]
    16b8:	cbnz	w2, 16ac <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb4>
    16bc:	ldr	w1, [x20, #24]
    16c0:	ldr	x2, [x20, #16]
    16c4:	ldur	x0, [x20, #28]
    16c8:	ldp	x21, x22, [sp, #32]
    16cc:	ldp	x23, x24, [sp, #48]
    16d0:	ldr	x25, [sp, #64]
    16d4:	str	x2, [x19, #152]
    16d8:	str	w1, [x19, #160]
    16dc:	stur	x0, [x19, #164]
    16e0:	ldp	x19, x20, [sp, #16]
    16e4:	ldp	x29, x30, [sp], #128
    16e8:	ret
    16ec:	ldr	w1, [x0, #8]
    16f0:	add	w1, w1, #0x1
    16f4:	str	w1, [x0, #8]
    16f8:	b	16bc <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc4>
    16fc:	ldr	w0, [x21, #8]
    1700:	sub	w1, w0, #0x1
    1704:	str	w1, [x21, #8]
    1708:	cmp	w0, #0x1
    170c:	b.ne	1690 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x98>  // b.any
    1710:	ldr	x1, [x21]
    1714:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1718:	ldr	x0, [x0]
    171c:	ldr	x1, [x1, #16]
    1720:	cmp	x1, x0
    1724:	b.ne	1790 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x198>  // b.any
    1728:	ldr	x22, [x22]
    172c:	cbz	x22, 1774 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x17c>
    1730:	add	x1, x21, #0xc
    1734:	ldaxr	w0, [x1]
    1738:	sub	w2, w0, #0x1
    173c:	stlxr	w3, w2, [x1]
    1740:	cbnz	w3, 1734 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x13c>
    1744:	cmp	w0, #0x1
    1748:	b.ne	1690 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x98>  // b.any
    174c:	ldr	x1, [x21]
    1750:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1754:	ldr	x0, [x0]
    1758:	ldr	x2, [x1, #24]
    175c:	cmp	x2, x0
    1760:	b.ne	1784 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x18c>  // b.any
    1764:	ldr	x1, [x1, #8]
    1768:	mov	x0, x21
    176c:	blr	x1
    1770:	b	1690 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x98>
    1774:	ldr	w0, [x21, #12]
    1778:	sub	w1, w0, #0x1
    177c:	str	w1, [x21, #12]
    1780:	b	1744 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x14c>
    1784:	mov	x0, x21
    1788:	blr	x2
    178c:	b	1690 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x98>
    1790:	mov	x0, x21
    1794:	blr	x1
    1798:	b	1728 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>
    179c:	nop

00000000000017a0 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    17a0:	stp	x29, x30, [sp, #-112]!
    17a4:	mov	x29, sp
    17a8:	stp	x19, x20, [sp, #16]
    17ac:	mov	x19, x2
    17b0:	stp	x21, x22, [sp, #32]
    17b4:	mov	x21, x8
    17b8:	mov	w22, w0
    17bc:	mov	x0, #0xb0                  	// #176
    17c0:	stp	x23, x24, [sp, #48]
    17c4:	mov	x23, x1
    17c8:	mov	x24, x3
    17cc:	bl	0 <_Znwm>
    17d0:	ldp	x1, x5, [x19]
    17d4:	stp	x1, x5, [sp, #72]
    17d8:	mov	x20, x0
    17dc:	cbz	x5, 1800 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x60>
    17e0:	adrp	x0, 0 <__pthread_key_create>
    17e4:	ldr	x0, [x0]
    17e8:	cbz	x0, 188c <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xec>
    17ec:	add	x5, x5, #0x8
    17f0:	ldaxr	w0, [x5]
    17f4:	add	w0, w0, #0x1
    17f8:	stlxr	w1, w0, [x5]
    17fc:	cbnz	w1, 17f0 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x50>
    1800:	ldr	w6, [x19, #24]
    1804:	mov	x4, x24
    1808:	ldr	x7, [x19, #16]
    180c:	mov	x2, x23
    1810:	ldur	x5, [x19, #28]
    1814:	mov	w1, w22
    1818:	add	x3, sp, #0x48
    181c:	mov	x0, x20
    1820:	str	x7, [sp, #88]
    1824:	str	w6, [sp, #96]
    1828:	stur	x5, [sp, #100]
    182c:	bl	15f8 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1830:	ldr	x19, [sp, #80]
    1834:	cbz	x19, 1860 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
    1838:	adrp	x22, 0 <__pthread_key_create>
    183c:	ldr	x0, [x22]
    1840:	cbz	x0, 189c <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xfc>
    1844:	add	x1, x19, #0x8
    1848:	ldaxr	w0, [x1]
    184c:	sub	w2, w0, #0x1
    1850:	stlxr	w3, w2, [x1]
    1854:	cbnz	w3, 1848 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xa8>
    1858:	cmp	w0, #0x1
    185c:	b.eq	18b0 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x110>  // b.none
    1860:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1864:	add	x1, x1, #0x0
    1868:	add	x1, x1, #0x58
    186c:	str	x1, [x20]
    1870:	ldp	x23, x24, [sp, #48]
    1874:	str	x20, [x21]
    1878:	mov	x0, x21
    187c:	ldp	x19, x20, [sp, #16]
    1880:	ldp	x21, x22, [sp, #32]
    1884:	ldp	x29, x30, [sp], #112
    1888:	ret
    188c:	ldr	w0, [x5, #8]
    1890:	add	w0, w0, #0x1
    1894:	str	w0, [x5, #8]
    1898:	b	1800 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x60>
    189c:	ldr	w0, [x19, #8]
    18a0:	sub	w1, w0, #0x1
    18a4:	str	w1, [x19, #8]
    18a8:	cmp	w0, #0x1
    18ac:	b.ne	1860 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>  // b.any
    18b0:	ldr	x1, [x19]
    18b4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    18b8:	ldr	x0, [x0]
    18bc:	ldr	x1, [x1, #16]
    18c0:	cmp	x1, x0
    18c4:	b.ne	1930 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x190>  // b.any
    18c8:	ldr	x22, [x22]
    18cc:	cbz	x22, 1914 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x174>
    18d0:	add	x1, x19, #0xc
    18d4:	ldaxr	w0, [x1]
    18d8:	sub	w2, w0, #0x1
    18dc:	stlxr	w3, w2, [x1]
    18e0:	cbnz	w3, 18d4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>
    18e4:	cmp	w0, #0x1
    18e8:	b.ne	1860 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>  // b.any
    18ec:	ldr	x1, [x19]
    18f0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    18f4:	ldr	x0, [x0]
    18f8:	ldr	x2, [x1, #24]
    18fc:	cmp	x2, x0
    1900:	b.ne	1924 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x184>  // b.any
    1904:	ldr	x1, [x1, #8]
    1908:	mov	x0, x19
    190c:	blr	x1
    1910:	b	1860 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
    1914:	ldr	w0, [x19, #12]
    1918:	sub	w1, w0, #0x1
    191c:	str	w1, [x19, #12]
    1920:	b	18e4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x144>
    1924:	mov	x0, x19
    1928:	blr	x2
    192c:	b	1860 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
    1930:	mov	x0, x19
    1934:	blr	x1
    1938:	b	18c8 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>
    193c:	nop

0000000000001940 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    1940:	stp	x29, x30, [sp, #-176]!
    1944:	mov	x29, sp
    1948:	stp	x19, x20, [sp, #16]
    194c:	mov	x19, x0
    1950:	mov	x20, x1
    1954:	ldp	x1, x0, [x0, #64]
    1958:	stp	x21, x22, [sp, #32]
    195c:	stp	x23, x24, [sp, #48]
    1960:	stp	x25, x26, [sp, #64]
    1964:	sub	x0, x0, x1
    1968:	str	x27, [sp, #80]
    196c:	asr	x0, x0, #4
    1970:	cmp	x0, w2, uxtw
    1974:	b.ls	1bac <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x26c>  // b.plast
    1978:	mov	w24, w2
    197c:	mov	x23, x3
    1980:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
    1984:	lsl	x0, x24, #4
    1988:	add	x3, x1, x0
    198c:	ldr	x21, [x3, #8]
    1990:	stp	xzr, xzr, [sp, #112]
    1994:	str	xzr, [sp, #128]
    1998:	ldr	x27, [x1, x0]
    199c:	sbfx	x0, x21, #0, #62
    19a0:	cmp	x0, x2
    19a4:	lsl	x21, x21, #2
    19a8:	b.hi	1ba0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x260>  // b.pmore
    19ac:	mov	x22, x8
    19b0:	cbz	x0, 1ae8 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a8>
    19b4:	mov	x0, x21
    19b8:	bl	0 <_Znwm>
    19bc:	mov	x3, x0
    19c0:	add	x25, x0, x21
    19c4:	cbz	x21, 1acc <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x18c>
    19c8:	ldr	x26, [sp, #112]
    19cc:	mov	x0, x3
    19d0:	mov	x2, x21
    19d4:	mov	x1, x27
    19d8:	bl	0 <memcpy>
    19dc:	mov	x3, x0
    19e0:	stp	x3, x25, [sp, #112]
    19e4:	str	x25, [sp, #128]
    19e8:	cbz	x26, 19f4 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb4>
    19ec:	mov	x0, x26
    19f0:	bl	0 <_ZdlPv>
    19f4:	ldp	x1, x0, [x19, #48]
    19f8:	cmp	x24, x0
    19fc:	b.cs	1b9c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x25c>  // b.hs, b.nlast
    1a00:	ldr	x0, [x19]
    1a04:	ldr	w1, [x1, x24, lsl #2]
    1a08:	str	w1, [sp, #104]
    1a0c:	ldr	x1, [x20, #8]
    1a10:	ldr	x2, [x20]
    1a14:	ldr	w0, [x0, #32]
    1a18:	stp	x2, x1, [sp, #136]
    1a1c:	cbz	x1, 1a40 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x100>
    1a20:	adrp	x2, 0 <__pthread_key_create>
    1a24:	ldr	x2, [x2]
    1a28:	cbz	x2, 1ad8 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x198>
    1a2c:	add	x1, x1, #0x8
    1a30:	ldaxr	w2, [x1]
    1a34:	add	w2, w2, #0x1
    1a38:	stlxr	w3, w2, [x1]
    1a3c:	cbnz	w3, 1a30 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf0>
    1a40:	ldr	w5, [x20, #24]
    1a44:	mov	x3, x23
    1a48:	ldr	x6, [x20, #16]
    1a4c:	mov	x8, x22
    1a50:	ldur	x4, [x20, #28]
    1a54:	add	x2, sp, #0x88
    1a58:	add	x1, sp, #0x68
    1a5c:	str	x6, [sp, #152]
    1a60:	str	w5, [sp, #160]
    1a64:	stur	x4, [sp, #164]
    1a68:	bl	17a0 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a6c:	ldr	x19, [sp, #144]
    1a70:	cbz	x19, 1aa0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x160>
    1a74:	adrp	x20, 0 <__pthread_key_create>
    1a78:	ldr	x0, [x20]
    1a7c:	cbz	x0, 1afc <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1bc>
    1a80:	add	x1, x19, #0x8
    1a84:	ldaxr	w0, [x1]
    1a88:	sub	w2, w0, #0x1
    1a8c:	stlxr	w3, w2, [x1]
    1a90:	cbnz	w3, 1a84 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x144>
    1a94:	cmp	w0, #0x1
    1a98:	b.eq	1b10 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d0>  // b.none
    1a9c:	nop
    1aa0:	ldr	x0, [sp, #112]
    1aa4:	cbz	x0, 1aac <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x16c>
    1aa8:	bl	0 <_ZdlPv>
    1aac:	mov	x0, x22
    1ab0:	ldp	x19, x20, [sp, #16]
    1ab4:	ldp	x21, x22, [sp, #32]
    1ab8:	ldp	x23, x24, [sp, #48]
    1abc:	ldp	x25, x26, [sp, #64]
    1ac0:	ldr	x27, [sp, #80]
    1ac4:	ldp	x29, x30, [sp], #176
    1ac8:	ret
    1acc:	mov	x25, x0
    1ad0:	ldr	x26, [sp, #112]
    1ad4:	b	19e0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xa0>
    1ad8:	ldr	w2, [x1, #8]
    1adc:	add	w2, w2, #0x1
    1ae0:	str	w2, [x1, #8]
    1ae4:	b	1a40 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x100>
    1ae8:	mov	x25, x21
    1aec:	cbz	x21, 19f4 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb4>
    1af0:	mov	x26, #0x0                   	// #0
    1af4:	mov	x3, #0x0                   	// #0
    1af8:	b	19cc <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x8c>
    1afc:	ldr	w0, [x19, #8]
    1b00:	sub	w1, w0, #0x1
    1b04:	str	w1, [x19, #8]
    1b08:	cmp	w0, #0x1
    1b0c:	b.ne	1aa0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x160>  // b.any
    1b10:	ldr	x1, [x19]
    1b14:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1b18:	ldr	x0, [x0]
    1b1c:	ldr	x1, [x1, #16]
    1b20:	cmp	x1, x0
    1b24:	b.ne	1b90 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x250>  // b.any
    1b28:	ldr	x20, [x20]
    1b2c:	cbz	x20, 1b74 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x234>
    1b30:	add	x1, x19, #0xc
    1b34:	ldaxr	w0, [x1]
    1b38:	sub	w2, w0, #0x1
    1b3c:	stlxr	w3, w2, [x1]
    1b40:	cbnz	w3, 1b34 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1f4>
    1b44:	cmp	w0, #0x1
    1b48:	b.ne	1aa0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x160>  // b.any
    1b4c:	ldr	x1, [x19]
    1b50:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1b54:	ldr	x0, [x0]
    1b58:	ldr	x2, [x1, #24]
    1b5c:	cmp	x2, x0
    1b60:	b.ne	1b84 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x244>  // b.any
    1b64:	ldr	x1, [x1, #8]
    1b68:	mov	x0, x19
    1b6c:	blr	x1
    1b70:	b	1aa0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x160>
    1b74:	ldr	w0, [x19, #12]
    1b78:	sub	w1, w0, #0x1
    1b7c:	str	w1, [x19, #12]
    1b80:	b	1b44 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x204>
    1b84:	mov	x0, x19
    1b88:	blr	x2
    1b8c:	b	1aa0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x160>
    1b90:	mov	x0, x19
    1b94:	blr	x1
    1b98:	b	1b28 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e8>
    1b9c:	bl	38 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEixEm.isra.0.part.0>
    1ba0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1ba4:	add	x0, x0, #0x0
    1ba8:	bl	0 <_ZSt20__throw_length_errorPKc>
    1bac:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1bb0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1bb4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1bb8:	add	x3, x3, #0x0
    1bbc:	add	x1, x1, #0x0
    1bc0:	add	x0, x0, #0x0
    1bc4:	mov	w2, #0x14a                 	// #330
    1bc8:	bl	0 <__assert_fail>
    1bcc:	nop

0000000000001bd0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    1bd0:	stp	x29, x30, [sp, #-160]!
    1bd4:	mov	x29, sp
    1bd8:	stp	x19, x20, [sp, #16]
    1bdc:	mov	x19, x1
    1be0:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
    1be4:	ldr	x20, [x0, #40]
    1be8:	stp	x21, x22, [sp, #32]
    1bec:	mov	x21, x0
    1bf0:	stp	x23, x24, [sp, #48]
    1bf4:	sbfx	x0, x20, #0, #62
    1bf8:	stp	x25, x26, [sp, #64]
    1bfc:	cmp	x0, x1
    1c00:	stp	xzr, xzr, [sp, #96]
    1c04:	str	xzr, [sp, #112]
    1c08:	ldr	x26, [x21, #32]
    1c0c:	b.hi	1df8 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x228>  // b.pmore
    1c10:	mov	x22, x8
    1c14:	mov	x23, x2
    1c18:	lsl	x20, x20, #2
    1c1c:	cbz	x0, 1d44 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x174>
    1c20:	mov	x0, x20
    1c24:	bl	0 <_Znwm>
    1c28:	mov	x3, x0
    1c2c:	add	x24, x0, x20
    1c30:	cbz	x20, 1d28 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x158>
    1c34:	ldr	x25, [sp, #96]
    1c38:	mov	x0, x3
    1c3c:	mov	x2, x20
    1c40:	mov	x1, x26
    1c44:	bl	0 <memcpy>
    1c48:	mov	x3, x0
    1c4c:	stp	x3, x24, [sp, #96]
    1c50:	str	x24, [sp, #112]
    1c54:	cbz	x25, 1c60 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x90>
    1c58:	mov	x0, x25
    1c5c:	bl	0 <_ZdlPv>
    1c60:	ldr	x0, [x21]
    1c64:	ldr	x1, [x19, #8]
    1c68:	ldr	w2, [x0, #44]
    1c6c:	str	w2, [sp, #88]
    1c70:	ldr	x2, [x19]
    1c74:	ldr	w0, [x0, #32]
    1c78:	stp	x2, x1, [sp, #120]
    1c7c:	cbz	x1, 1ca0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd0>
    1c80:	adrp	x2, 0 <__pthread_key_create>
    1c84:	ldr	x2, [x2]
    1c88:	cbz	x2, 1d34 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x164>
    1c8c:	add	x1, x1, #0x8
    1c90:	ldaxr	w2, [x1]
    1c94:	add	w2, w2, #0x1
    1c98:	stlxr	w3, w2, [x1]
    1c9c:	cbnz	w3, 1c90 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
    1ca0:	ldr	w5, [x19, #24]
    1ca4:	mov	x3, x23
    1ca8:	ldr	x6, [x19, #16]
    1cac:	mov	x8, x22
    1cb0:	ldur	x4, [x19, #28]
    1cb4:	add	x2, sp, #0x78
    1cb8:	add	x1, sp, #0x58
    1cbc:	str	x6, [sp, #136]
    1cc0:	str	w5, [sp, #144]
    1cc4:	stur	x4, [sp, #148]
    1cc8:	bl	17a0 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1ccc:	ldr	x19, [sp, #128]
    1cd0:	cbz	x19, 1d00 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>
    1cd4:	adrp	x20, 0 <__pthread_key_create>
    1cd8:	ldr	x0, [x20]
    1cdc:	cbz	x0, 1d58 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x188>
    1ce0:	add	x1, x19, #0x8
    1ce4:	ldaxr	w0, [x1]
    1ce8:	sub	w2, w0, #0x1
    1cec:	stlxr	w3, w2, [x1]
    1cf0:	cbnz	w3, 1ce4 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x114>
    1cf4:	cmp	w0, #0x1
    1cf8:	b.eq	1d6c <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x19c>  // b.none
    1cfc:	nop
    1d00:	ldr	x0, [sp, #96]
    1d04:	cbz	x0, 1d0c <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x13c>
    1d08:	bl	0 <_ZdlPv>
    1d0c:	mov	x0, x22
    1d10:	ldp	x19, x20, [sp, #16]
    1d14:	ldp	x21, x22, [sp, #32]
    1d18:	ldp	x23, x24, [sp, #48]
    1d1c:	ldp	x25, x26, [sp, #64]
    1d20:	ldp	x29, x30, [sp], #160
    1d24:	ret
    1d28:	mov	x24, x0
    1d2c:	ldr	x25, [sp, #96]
    1d30:	b	1c4c <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x7c>
    1d34:	ldr	w2, [x1, #8]
    1d38:	add	w2, w2, #0x1
    1d3c:	str	w2, [x1, #8]
    1d40:	b	1ca0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd0>
    1d44:	mov	x24, x20
    1d48:	cbz	x20, 1c60 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x90>
    1d4c:	mov	x25, #0x0                   	// #0
    1d50:	mov	x3, #0x0                   	// #0
    1d54:	b	1c38 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x68>
    1d58:	ldr	w0, [x19, #8]
    1d5c:	sub	w1, w0, #0x1
    1d60:	str	w1, [x19, #8]
    1d64:	cmp	w0, #0x1
    1d68:	b.ne	1d00 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>  // b.any
    1d6c:	ldr	x1, [x19]
    1d70:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1d74:	ldr	x0, [x0]
    1d78:	ldr	x1, [x1, #16]
    1d7c:	cmp	x1, x0
    1d80:	b.ne	1dec <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x21c>  // b.any
    1d84:	ldr	x20, [x20]
    1d88:	cbz	x20, 1dd0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x200>
    1d8c:	add	x1, x19, #0xc
    1d90:	ldaxr	w0, [x1]
    1d94:	sub	w2, w0, #0x1
    1d98:	stlxr	w3, w2, [x1]
    1d9c:	cbnz	w3, 1d90 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c0>
    1da0:	cmp	w0, #0x1
    1da4:	b.ne	1d00 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>  // b.any
    1da8:	ldr	x1, [x19]
    1dac:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1db0:	ldr	x0, [x0]
    1db4:	ldr	x2, [x1, #24]
    1db8:	cmp	x2, x0
    1dbc:	b.ne	1de0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x210>  // b.any
    1dc0:	ldr	x1, [x1, #8]
    1dc4:	mov	x0, x19
    1dc8:	blr	x1
    1dcc:	b	1d00 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>
    1dd0:	ldr	w0, [x19, #12]
    1dd4:	sub	w1, w0, #0x1
    1dd8:	str	w1, [x19, #12]
    1ddc:	b	1da0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d0>
    1de0:	mov	x0, x19
    1de4:	blr	x2
    1de8:	b	1d00 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>
    1dec:	mov	x0, x19
    1df0:	blr	x1
    1df4:	b	1d84 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1b4>
    1df8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1dfc:	add	x0, x0, #0x0
    1e00:	bl	0 <_ZSt20__throw_length_errorPKc>
    1e04:	nop

0000000000001e08 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>:
    1e08:	stp	x29, x30, [sp, #-320]!
    1e0c:	mov	x29, sp
    1e10:	stp	x19, x20, [sp, #16]
    1e14:	mov	x19, x0
    1e18:	mov	x20, x8
    1e1c:	stp	x21, x22, [sp, #32]
    1e20:	and	w21, w3, #0xff
    1e24:	mov	x22, x2
    1e28:	stp	x27, x28, [sp, #80]
    1e2c:	mov	x28, x1
    1e30:	add	x27, sp, #0x78
    1e34:	mov	w2, w21
    1e38:	mov	x8, x27
    1e3c:	mov	w1, #0x0                   	// #0
    1e40:	stp	x23, x24, [sp, #48]
    1e44:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
    1e48:	add	x23, sp, #0x98
    1e4c:	mov	w2, w21
    1e50:	mov	x0, x19
    1e54:	mov	w1, #0x1                   	// #1
    1e58:	mov	x8, x23
    1e5c:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
    1e60:	ldp	x2, x1, [x28]
    1e64:	ldr	x0, [x19]
    1e68:	ldr	w0, [x0, #32]
    1e6c:	stp	x2, x1, [sp, #264]
    1e70:	cbz	x1, 1e94 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x8c>
    1e74:	adrp	x2, 0 <__pthread_key_create>
    1e78:	ldr	x2, [x2]
    1e7c:	cbz	x2, 2168 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x360>
    1e80:	add	x1, x1, #0x8
    1e84:	ldaxr	w2, [x1]
    1e88:	add	w2, w2, #0x1
    1e8c:	stlxr	w3, w2, [x1]
    1e90:	cbnz	w3, 1e84 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x7c>
    1e94:	ldr	w5, [x28, #24]
    1e98:	add	x21, sp, #0x108
    1e9c:	str	w5, [sp, #288]
    1ea0:	add	x5, sp, #0x200
    1ea4:	ldr	x6, [x28, #16]
    1ea8:	str	x6, [sp, #280]
    1eac:	ldur	x4, [x28, #28]
    1eb0:	stur	x4, [x5, #-220]
    1eb4:	mov	x1, x23
    1eb8:	mov	x2, x21
    1ebc:	add	x8, sp, #0x68
    1ec0:	mov	x3, x22
    1ec4:	bl	17a0 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1ec8:	ldr	x23, [sp, #272]
    1ecc:	cbz	x23, 1ef8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xf0>
    1ed0:	adrp	x24, 0 <__pthread_key_create>
    1ed4:	ldr	x0, [x24]
    1ed8:	cbz	x0, 2178 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x370>
    1edc:	add	x1, x23, #0x8
    1ee0:	ldaxr	w0, [x1]
    1ee4:	sub	w2, w0, #0x1
    1ee8:	stlxr	w3, w2, [x1]
    1eec:	cbnz	w3, 1ee0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xd8>
    1ef0:	cmp	w0, #0x1
    1ef4:	b.eq	218c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x384>  // b.none
    1ef8:	ldr	x1, [sp, #104]
    1efc:	cbz	x1, 21f0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3e8>
    1f00:	ldr	x0, [x19]
    1f04:	stp	x25, x26, [sp, #64]
    1f08:	mov	x23, #0x0                   	// #0
    1f0c:	ldr	w24, [x0, #32]
    1f10:	cbz	x24, 1f30 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x128>
    1f14:	mov	x0, x24
    1f18:	bl	0 <_Znwm>
    1f1c:	mov	w1, #0xff                  	// #255
    1f20:	mov	x2, x24
    1f24:	mov	x23, x0
    1f28:	bl	0 <memset>
    1f2c:	ldr	x1, [sp, #104]
    1f30:	adrp	x25, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1f34:	add	x26, sp, #0x70
    1f38:	add	x25, x25, #0x0
    1f3c:	mov	x0, x21
    1f40:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    1f44:	ldrb	w0, [sp, #304]
    1f48:	cbz	w0, 2038 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x230>
    1f4c:	ldr	w1, [sp, #300]
    1f50:	ldr	w0, [sp, #312]
    1f54:	cmp	w0, w1
    1f58:	b.eq	2070 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x268>  // b.none
    1f5c:	mov	x8, x26
    1f60:	mov	x1, x23
    1f64:	mov	x2, x24
    1f68:	mov	x0, x21
    1f6c:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    1f70:	ldr	x3, [sp, #112]
    1f74:	ands	x3, x3, #0xfffffffffffffffe
    1f78:	b.eq	1f44 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x13c>  // b.none
    1f7c:	adrp	x4, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1f80:	orr	x3, x3, #0x1
    1f84:	add	x5, sp, #0xb8
    1f88:	add	x7, sp, #0xc8
    1f8c:	ldr	x4, [x4]
    1f90:	mov	w6, #0x1                   	// #1
    1f94:	mov	x2, #0x31                  	// #49
    1f98:	add	x19, sp, #0xd8
    1f9c:	add	x4, x4, #0x10
    1fa0:	mov	x0, x19
    1fa4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1fa8:	add	x1, x1, #0x0
    1fac:	str	x3, [sp, #112]
    1fb0:	stp	x7, xzr, [sp, #184]
    1fb4:	strb	wzr, [sp, #200]
    1fb8:	stp	x4, xzr, [sp, #216]
    1fbc:	stp	xzr, xzr, [sp, #232]
    1fc0:	str	w6, [sp, #248]
    1fc4:	str	x5, [sp, #256]
    1fc8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1fcc:	ldp	x3, x2, [x0, #16]
    1fd0:	mov	x1, x0
    1fd4:	cmp	x3, x2
    1fd8:	b.eq	23e0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x5d8>  // b.none
    1fdc:	mov	w0, #0xa                   	// #10
    1fe0:	strb	w0, [x2]
    1fe4:	ldr	x0, [x1, #24]
    1fe8:	add	x0, x0, #0x1
    1fec:	str	x0, [x1, #24]
    1ff0:	ldr	x0, [sp, #112]
    1ff4:	ands	x0, x0, #0xfffffffffffffffe
    1ff8:	b.eq	23a8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x5a0>  // b.none
    1ffc:	ldr	x2, [x0]
    2000:	ldr	x2, [x2, #16]
    2004:	blr	x2
    2008:	ldr	x0, [sp, #224]
    200c:	ldr	x1, [sp, #240]
    2010:	cmp	x1, x0
    2014:	b.eq	2020 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x218>  // b.none
    2018:	mov	x0, x19
    201c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    2020:	ldr	x0, [sp, #256]
    2024:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2028:	mov	w2, #0x2c9                 	// #713
    202c:	add	x1, x1, #0x0
    2030:	ldr	x0, [x0]
    2034:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2038:	ldr	x0, [sp, #288]
    203c:	mov	w1, #0x0                   	// #0
    2040:	cbz	x0, 1f50 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x148>
    2044:	ldr	x1, [x0]
    2048:	ldr	x1, [x1, #40]
    204c:	cmp	x1, x25
    2050:	b.ne	2228 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x420>  // b.any
    2054:	add	x0, x0, #0x8
    2058:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    205c:	ldr	w1, [sp, #296]
    2060:	sub	w1, w0, w1
    2064:	ldr	w0, [sp, #312]
    2068:	cmp	w0, w1
    206c:	b.ne	1f5c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x154>  // b.any
    2070:	ldp	x2, x1, [x28]
    2074:	ldr	x0, [x19]
    2078:	ldr	w0, [x0, #32]
    207c:	stp	x2, x1, [sp, #216]
    2080:	cbz	x1, 20a4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x29c>
    2084:	adrp	x2, 0 <__pthread_key_create>
    2088:	ldr	x2, [x2]
    208c:	cbz	x2, 2240 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x438>
    2090:	add	x1, x1, #0x8
    2094:	ldaxr	w2, [x1]
    2098:	add	w2, w2, #0x1
    209c:	stlxr	w3, w2, [x1]
    20a0:	cbnz	w3, 2094 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x28c>
    20a4:	ldr	w5, [x28, #24]
    20a8:	mov	x3, x22
    20ac:	ldr	x6, [x28, #16]
    20b0:	mov	x1, x27
    20b4:	ldur	x4, [x28, #28]
    20b8:	mov	x8, x20
    20bc:	add	x2, sp, #0xd8
    20c0:	str	x6, [sp, #232]
    20c4:	str	w5, [sp, #240]
    20c8:	stur	x4, [sp, #244]
    20cc:	bl	17a0 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    20d0:	ldr	x19, [sp, #224]
    20d4:	cbz	x19, 2100 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2f8>
    20d8:	adrp	x24, 0 <__pthread_key_create>
    20dc:	ldr	x0, [x24]
    20e0:	cbz	x0, 2250 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x448>
    20e4:	add	x1, x19, #0x8
    20e8:	ldaxr	w0, [x1]
    20ec:	sub	w2, w0, #0x1
    20f0:	stlxr	w3, w2, [x1]
    20f4:	cbnz	w3, 20e8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2e0>
    20f8:	cmp	w0, #0x1
    20fc:	b.eq	22d8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4d0>  // b.none
    2100:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2104:	ldr	x19, [sp, #280]
    2108:	ldr	x1, [x1]
    210c:	add	x1, x1, #0x10
    2110:	str	x1, [sp, #264]
    2114:	cbz	x19, 2140 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x338>
    2118:	adrp	x24, 0 <__pthread_key_create>
    211c:	ldr	x0, [x24]
    2120:	cbz	x0, 2260 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x458>
    2124:	add	x1, x19, #0x8
    2128:	ldaxr	w0, [x1]
    212c:	sub	w2, w0, #0x1
    2130:	stlxr	w3, w2, [x1]
    2134:	cbnz	w3, 2128 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x320>
    2138:	cmp	w0, #0x1
    213c:	b.eq	2270 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x468>  // b.none
    2140:	cbz	x23, 214c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x344>
    2144:	mov	x0, x23
    2148:	bl	0 <_ZdlPv>
    214c:	ldr	x0, [sp, #104]
    2150:	cbz	x0, 23f8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x5f0>
    2154:	ldr	x1, [x0]
    2158:	ldr	x1, [x1, #8]
    215c:	blr	x1
    2160:	ldp	x25, x26, [sp, #64]
    2164:	b	21f4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3ec>
    2168:	ldr	w2, [x1, #8]
    216c:	add	w2, w2, #0x1
    2170:	str	w2, [x1, #8]
    2174:	b	1e94 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x8c>
    2178:	ldr	w0, [x23, #8]
    217c:	sub	w1, w0, #0x1
    2180:	str	w1, [x23, #8]
    2184:	cmp	w0, #0x1
    2188:	b.ne	1ef8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xf0>  // b.any
    218c:	ldr	x1, [x23]
    2190:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2194:	ldr	x0, [x0]
    2198:	ldr	x1, [x1, #16]
    219c:	cmp	x1, x0
    21a0:	b.ne	2348 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x540>  // b.any
    21a4:	ldr	x24, [x24]
    21a8:	cbz	x24, 2230 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x428>
    21ac:	add	x1, x23, #0xc
    21b0:	ldaxr	w0, [x1]
    21b4:	sub	w2, w0, #0x1
    21b8:	stlxr	w3, w2, [x1]
    21bc:	cbnz	w3, 21b0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3a8>
    21c0:	cmp	w0, #0x1
    21c4:	b.ne	1ef8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xf0>  // b.any
    21c8:	ldr	x1, [x23]
    21cc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    21d0:	ldr	x0, [x0]
    21d4:	ldr	x2, [x1, #24]
    21d8:	cmp	x2, x0
    21dc:	b.ne	233c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x534>  // b.any
    21e0:	ldr	x1, [x1, #8]
    21e4:	mov	x0, x23
    21e8:	blr	x1
    21ec:	b	1ef8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xf0>
    21f0:	str	xzr, [x20]
    21f4:	ldr	x0, [sp, #160]
    21f8:	cbz	x0, 2200 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3f8>
    21fc:	bl	0 <_ZdlPv>
    2200:	ldr	x0, [sp, #128]
    2204:	cbz	x0, 220c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x404>
    2208:	bl	0 <_ZdlPv>
    220c:	mov	x0, x20
    2210:	ldp	x19, x20, [sp, #16]
    2214:	ldp	x21, x22, [sp, #32]
    2218:	ldp	x23, x24, [sp, #48]
    221c:	ldp	x27, x28, [sp, #80]
    2220:	ldp	x29, x30, [sp], #320
    2224:	ret
    2228:	blr	x1
    222c:	b	205c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x254>
    2230:	ldr	w0, [x23, #12]
    2234:	sub	w1, w0, #0x1
    2238:	str	w1, [x23, #12]
    223c:	b	21c0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3b8>
    2240:	ldr	w2, [x1, #8]
    2244:	add	w2, w2, #0x1
    2248:	str	w2, [x1, #8]
    224c:	b	20a4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x29c>
    2250:	ldr	w0, [x19, #8]
    2254:	sub	w1, w0, #0x1
    2258:	str	w1, [x19, #8]
    225c:	b	20f8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2f0>
    2260:	ldr	w0, [x19, #8]
    2264:	sub	w1, w0, #0x1
    2268:	str	w1, [x19, #8]
    226c:	b	2138 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x330>
    2270:	ldr	x1, [x19]
    2274:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2278:	ldr	x0, [x0]
    227c:	ldr	x1, [x1, #16]
    2280:	cmp	x1, x0
    2284:	b.ne	2380 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x578>  // b.any
    2288:	ldr	x24, [x24]
    228c:	cbz	x24, 2354 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x54c>
    2290:	add	x1, x19, #0xc
    2294:	ldaxr	w0, [x1]
    2298:	sub	w2, w0, #0x1
    229c:	stlxr	w3, w2, [x1]
    22a0:	cbnz	w3, 2294 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x48c>
    22a4:	cmp	w0, #0x1
    22a8:	b.ne	2140 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x338>  // b.any
    22ac:	ldr	x1, [x19]
    22b0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    22b4:	ldr	x0, [x0]
    22b8:	ldr	x2, [x1, #24]
    22bc:	cmp	x2, x0
    22c0:	b.ne	238c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x584>  // b.any
    22c4:	ldr	x1, [x1, #8]
    22c8:	mov	x0, x19
    22cc:	blr	x1
    22d0:	cbnz	x23, 2144 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x33c>
    22d4:	b	214c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x344>
    22d8:	ldr	x1, [x19]
    22dc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    22e0:	ldr	x0, [x0]
    22e4:	ldr	x1, [x1, #16]
    22e8:	cmp	x1, x0
    22ec:	b.ne	2374 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x56c>  // b.any
    22f0:	ldr	x24, [x24]
    22f4:	cbz	x24, 2364 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x55c>
    22f8:	add	x1, x19, #0xc
    22fc:	ldaxr	w0, [x1]
    2300:	sub	w2, w0, #0x1
    2304:	stlxr	w3, w2, [x1]
    2308:	cbnz	w3, 22fc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4f4>
    230c:	cmp	w0, #0x1
    2310:	b.ne	2100 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2f8>  // b.any
    2314:	ldr	x1, [x19]
    2318:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    231c:	ldr	x0, [x0]
    2320:	ldr	x2, [x1, #24]
    2324:	cmp	x2, x0
    2328:	b.ne	239c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x594>  // b.any
    232c:	ldr	x1, [x1, #8]
    2330:	mov	x0, x19
    2334:	blr	x1
    2338:	b	2100 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2f8>
    233c:	mov	x0, x23
    2340:	blr	x2
    2344:	b	1ef8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xf0>
    2348:	mov	x0, x23
    234c:	blr	x1
    2350:	b	21a4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x39c>
    2354:	ldr	w0, [x19, #12]
    2358:	sub	w1, w0, #0x1
    235c:	str	w1, [x19, #12]
    2360:	b	22a4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x49c>
    2364:	ldr	w0, [x19, #12]
    2368:	sub	w1, w0, #0x1
    236c:	str	w1, [x19, #12]
    2370:	b	230c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x504>
    2374:	mov	x0, x19
    2378:	blr	x1
    237c:	b	22f0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4e8>
    2380:	mov	x0, x19
    2384:	blr	x1
    2388:	b	2288 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x480>
    238c:	mov	x0, x19
    2390:	blr	x2
    2394:	cbnz	x23, 2144 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x33c>
    2398:	b	214c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x344>
    239c:	mov	x0, x19
    23a0:	blr	x2
    23a4:	b	2100 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2f8>
    23a8:	ldp	x0, x2, [x1, #16]
    23ac:	sub	x0, x0, x2
    23b0:	cmp	x0, #0x6
    23b4:	b.ls	2400 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x5f8>  // b.plast
    23b8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    23bc:	add	x0, x0, #0x0
    23c0:	ldr	w3, [x0]
    23c4:	ldur	w0, [x0, #3]
    23c8:	str	w3, [x2]
    23cc:	stur	w0, [x2, #3]
    23d0:	ldr	x0, [x1, #24]
    23d4:	add	x0, x0, #0x7
    23d8:	str	x0, [x1, #24]
    23dc:	b	2008 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x200>
    23e0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    23e4:	add	x1, x1, #0x0
    23e8:	mov	x2, #0x1                   	// #1
    23ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    23f0:	mov	x1, x0
    23f4:	b	1ff0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1e8>
    23f8:	ldp	x25, x26, [sp, #64]
    23fc:	b	21f4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3ec>
    2400:	mov	x0, x1
    2404:	mov	x2, #0x7                   	// #7
    2408:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    240c:	add	x1, x1, #0x0
    2410:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2414:	b	2008 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x200>

0000000000002418 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE>:
    2418:	stp	x29, x30, [sp, #-128]!
    241c:	mov	x29, sp
    2420:	ldr	x4, [x0]
    2424:	stp	x21, x22, [sp, #32]
    2428:	mov	w21, w1
    242c:	stp	x19, x20, [sp, #16]
    2430:	mov	x22, x3
    2434:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2438:	ldr	x1, [x4, #48]
    243c:	stp	x23, x24, [sp, #48]
    2440:	add	x3, x3, #0x0
    2444:	mov	x19, x0
    2448:	mov	x23, x8
    244c:	mov	x24, x2
    2450:	mov	w20, w22
    2454:	cmp	x1, x3
    2458:	b.ne	2514 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xfc>  // b.any
    245c:	ldr	x1, [x4, #40]
    2460:	mov	x0, x19
    2464:	blr	x1
    2468:	cmp	w21, w0
    246c:	b.hi	254c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x134>  // b.pmore
    2470:	ldr	x1, [x19]
    2474:	mov	x0, x19
    2478:	ldr	x1, [x1, #40]
    247c:	blr	x1
    2480:	add	w1, w21, w22
    2484:	cmp	w0, w1
    2488:	b.cc	25a8 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x190>  // b.lo, b.ul, b.last
    248c:	ldr	w4, [x19, #16]
    2490:	stp	x25, x26, [sp, #64]
    2494:	udiv	w26, w21, w4
    2498:	msub	w1, w26, w4, w21
    249c:	cbz	w22, 25d0 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x1b8>
    24a0:	add	x0, x19, #0x88
    24a4:	stp	x27, x28, [sp, #80]
    24a8:	add	x28, sp, #0x78
    24ac:	mov	w27, #0x0                   	// #0
    24b0:	ldr	x2, [x19, #32]
    24b4:	sub	w3, w4, w1
    24b8:	cmp	w3, w20
    24bc:	mov	x8, x28
    24c0:	csel	w25, w3, w20, ls  // ls = plast
    24c4:	csel	w3, w3, w20, ls  // ls = plast
    24c8:	ldr	w5, [x2, w26, uxtw #2]
    24cc:	add	x2, x24, w27, uxtw
    24d0:	str	x0, [sp, #104]
    24d4:	madd	w1, w5, w4, w1
    24d8:	bl	0 <_ZNK4llvm23WritableBinaryStreamRef10writeBytesEjNS_8ArrayRefIhEE>
    24dc:	ldr	x4, [sp, #120]
    24e0:	ldr	x0, [sp, #104]
    24e4:	ands	x4, x4, #0xfffffffffffffffe
    24e8:	b.eq	258c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x174>  // b.none
    24ec:	orr	x4, x4, #0x1
    24f0:	ldp	x25, x26, [sp, #64]
    24f4:	ldp	x27, x28, [sp, #80]
    24f8:	str	x4, [x23]
    24fc:	mov	x0, x23
    2500:	ldp	x19, x20, [sp, #16]
    2504:	ldp	x21, x22, [sp, #32]
    2508:	ldp	x23, x24, [sp, #48]
    250c:	ldp	x29, x30, [sp], #128
    2510:	ret
    2514:	blr	x1
    2518:	cmp	w0, #0x3
    251c:	b.hi	25f4 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x1dc>  // b.pmore
    2520:	ldr	x4, [x19]
    2524:	ldr	x1, [x4, #40]
    2528:	tbz	w0, #1, 245c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x44>
    252c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2530:	add	x0, x0, #0x0
    2534:	cmp	x1, x0
    2538:	b.ne	25c0 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x1a8>  // b.any
    253c:	add	x0, x19, #0x8
    2540:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2544:	cmp	w21, w0
    2548:	b.ls	248c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x74>  // b.plast
    254c:	mov	w1, #0x3                   	// #3
    2550:	add	x8, sp, #0x78
    2554:	add	x0, sp, #0x74
    2558:	str	w1, [sp, #116]
    255c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2560:	ldr	x0, [sp, #120]
    2564:	ands	x0, x0, #0xfffffffffffffffe
    2568:	b.eq	248c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x74>  // b.none
    256c:	orr	x0, x0, #0x1
    2570:	str	x0, [x23]
    2574:	mov	x0, x23
    2578:	ldp	x19, x20, [sp, #16]
    257c:	ldp	x21, x22, [sp, #32]
    2580:	ldp	x23, x24, [sp, #48]
    2584:	ldp	x29, x30, [sp], #128
    2588:	ret
    258c:	add	w27, w27, w25
    2590:	add	w26, w26, #0x1
    2594:	subs	w20, w20, w25
    2598:	b.eq	25cc <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x1b4>  // b.none
    259c:	ldr	w4, [x19, #16]
    25a0:	mov	w1, #0x0                   	// #0
    25a4:	b	24b0 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x98>
    25a8:	mov	w1, #0x1                   	// #1
    25ac:	add	x8, sp, #0x78
    25b0:	add	x0, sp, #0x74
    25b4:	str	w1, [sp, #116]
    25b8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    25bc:	b	2560 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x148>
    25c0:	mov	x0, x19
    25c4:	blr	x1
    25c8:	b	2544 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x12c>
    25cc:	ldp	x27, x28, [sp, #80]
    25d0:	add	x0, x19, #0x8
    25d4:	mov	x2, x24
    25d8:	mov	x3, x22
    25dc:	mov	w1, w21
    25e0:	bl	13a8 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE>
    25e4:	mov	x0, #0x1                   	// #1
    25e8:	ldp	x25, x26, [sp, #64]
    25ec:	str	x0, [x23]
    25f0:	b	24fc <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xe4>
    25f4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    25f8:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    25fc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2600:	add	x3, x3, #0x0
    2604:	add	x1, x1, #0x0
    2608:	add	x0, x0, #0x0
    260c:	mov	w2, #0x5d                  	// #93
    2610:	stp	x25, x26, [sp, #64]
    2614:	stp	x27, x28, [sp, #80]
    2618:	bl	0 <__assert_fail>
    261c:	nop

0000000000002620 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE>:
    2620:	stp	x29, x30, [sp, #-144]!
    2624:	mov	x29, sp
    2628:	stp	x27, x28, [sp, #80]
    262c:	mov	w27, w1
    2630:	ldr	w28, [x0, #8]
    2634:	ldr	x1, [x0]
    2638:	stp	x19, x20, [sp, #16]
    263c:	mov	x19, x0
    2640:	stp	x21, x22, [sp, #32]
    2644:	mov	w20, w3
    2648:	mov	x21, x8
    264c:	ldr	x1, [x1, #40]
    2650:	stp	x23, x24, [sp, #48]
    2654:	mov	x23, x3
    2658:	str	x2, [sp, #104]
    265c:	blr	x1
    2660:	cmp	w27, w0
    2664:	b.hi	278c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x16c>  // b.pmore
    2668:	ldr	x1, [x19]
    266c:	mov	x0, x19
    2670:	ldr	x1, [x1, #40]
    2674:	blr	x1
    2678:	add	w1, w27, w23
    267c:	cmp	w0, w1
    2680:	b.cc	2708 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xe8>  // b.lo, b.ul, b.last
    2684:	cbz	w23, 2780 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x160>
    2688:	udiv	w22, w27, w28
    268c:	add	x24, sp, #0x80
    2690:	stp	x25, x26, [sp, #64]
    2694:	add	x26, x19, #0x30
    2698:	add	x25, sp, #0x78
    269c:	mov	w23, #0x0                   	// #0
    26a0:	msub	w28, w22, w28, w27
    26a4:	ldr	x1, [x19, #24]
    26a8:	mov	x0, x26
    26ac:	ldr	w2, [x19, #8]
    26b0:	mov	x8, x25
    26b4:	mov	x3, x24
    26b8:	ldr	w1, [x1, w22, uxtw #2]
    26bc:	add	w22, w22, #0x1
    26c0:	stp	xzr, xzr, [sp, #128]
    26c4:	mul	w1, w1, w2
    26c8:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
    26cc:	ldr	x0, [sp, #104]
    26d0:	ldr	x1, [sp, #120]
    26d4:	add	x0, x0, w23, uxtw
    26d8:	ands	x1, x1, #0xfffffffffffffffe
    26dc:	b.eq	274c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x12c>  // b.none
    26e0:	orr	x1, x1, #0x1
    26e4:	ldp	x25, x26, [sp, #64]
    26e8:	str	x1, [x21]
    26ec:	mov	x0, x21
    26f0:	ldp	x19, x20, [sp, #16]
    26f4:	ldp	x21, x22, [sp, #32]
    26f8:	ldp	x23, x24, [sp, #48]
    26fc:	ldp	x27, x28, [sp, #80]
    2700:	ldp	x29, x30, [sp], #144
    2704:	ret
    2708:	mov	w1, #0x1                   	// #1
    270c:	add	x8, sp, #0x80
    2710:	add	x0, sp, #0x78
    2714:	str	w1, [sp, #120]
    2718:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    271c:	ldr	x0, [sp, #128]
    2720:	ands	x0, x0, #0xfffffffffffffffe
    2724:	b.eq	2684 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x64>  // b.none
    2728:	orr	x0, x0, #0x1
    272c:	str	x0, [x21]
    2730:	mov	x0, x21
    2734:	ldp	x19, x20, [sp, #16]
    2738:	ldp	x21, x22, [sp, #32]
    273c:	ldp	x23, x24, [sp, #48]
    2740:	ldp	x27, x28, [sp, #80]
    2744:	ldp	x29, x30, [sp], #144
    2748:	ret
    274c:	ldr	w2, [x19, #8]
    2750:	ldr	x1, [sp, #128]
    2754:	sub	w2, w2, w28
    2758:	cmp	w2, w20
    275c:	csel	w27, w2, w20, ls  // ls = plast
    2760:	csel	w2, w2, w20, ls  // ls = plast
    2764:	add	x1, x1, w28, uxtw
    2768:	add	w23, w23, w27
    276c:	bl	0 <memcpy>
    2770:	mov	w28, #0x0                   	// #0
    2774:	subs	w20, w20, w27
    2778:	b.ne	26a4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x84>  // b.any
    277c:	ldp	x25, x26, [sp, #64]
    2780:	mov	x0, #0x1                   	// #1
    2784:	str	x0, [x21]
    2788:	b	26ec <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xcc>
    278c:	mov	w1, #0x3                   	// #3
    2790:	add	x8, sp, #0x80
    2794:	add	x0, sp, #0x78
    2798:	str	w1, [sp, #120]
    279c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    27a0:	b	271c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xfc>
    27a4:	nop

00000000000027a8 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
    27a8:	stp	x29, x30, [sp, #-128]!
    27ac:	mov	x29, sp
    27b0:	stp	x21, x22, [sp, #32]
    27b4:	mov	w21, w1
    27b8:	mov	x22, x8
    27bc:	ldr	x1, [x0]
    27c0:	stp	x19, x20, [sp, #16]
    27c4:	mov	x20, x0
    27c8:	stp	x23, x24, [sp, #48]
    27cc:	mov	x23, x2
    27d0:	ldr	x1, [x1, #40]
    27d4:	stp	x25, x26, [sp, #64]
    27d8:	str	x27, [sp, #80]
    27dc:	blr	x1
    27e0:	cmp	w21, w0
    27e4:	b.hi	2920 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x178>  // b.pmore
    27e8:	ldr	x1, [x20]
    27ec:	mov	x0, x20
    27f0:	add	x26, sp, #0x68
    27f4:	add	x27, sp, #0x70
    27f8:	ldr	x1, [x1, #40]
    27fc:	blr	x1
    2800:	add	w1, w21, #0x1
    2804:	cmp	w0, w1
    2808:	b.cs	2854 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xac>  // b.hs, b.nlast
    280c:	mov	w1, #0x1                   	// #1
    2810:	mov	x0, x26
    2814:	mov	x8, x27
    2818:	str	w1, [sp, #104]
    281c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2820:	ldr	x1, [sp, #112]
    2824:	ands	x1, x1, #0xfffffffffffffffe
    2828:	b.eq	2854 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xac>  // b.none
    282c:	orr	x1, x1, #0x1
    2830:	str	x1, [x22]
    2834:	mov	x0, x22
    2838:	ldp	x19, x20, [sp, #16]
    283c:	ldp	x21, x22, [sp, #32]
    2840:	ldp	x23, x24, [sp, #48]
    2844:	ldp	x25, x26, [sp, #64]
    2848:	ldr	x27, [sp, #80]
    284c:	ldp	x29, x30, [sp], #128
    2850:	ret
    2854:	ldp	x9, x1, [x20, #24]
    2858:	ldr	w25, [x20, #8]
    285c:	udiv	w10, w21, w25
    2860:	sub	x1, x1, x9
    2864:	asr	x1, x1, #2
    2868:	sub	w1, w1, #0x1
    286c:	mov	x24, x10
    2870:	mov	w19, w10
    2874:	add	x5, x9, w10, uxtw #2
    2878:	b	289c <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xf4>
    287c:	add	w4, w19, #0x1
    2880:	ldr	w6, [x5], #4
    2884:	add	w7, w19, #0x1
    2888:	ldr	w4, [x9, x4, lsl #2]
    288c:	sub	w4, w4, #0x1
    2890:	cmp	w4, w6
    2894:	b.ne	28a4 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xfc>  // b.any
    2898:	mov	w19, w7
    289c:	cmp	w1, w19
    28a0:	b.hi	287c <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xd4>  // b.pmore
    28a4:	stp	xzr, xzr, [sp, #112]
    28a8:	add	x0, x20, #0x30
    28ac:	mov	x8, x26
    28b0:	ldr	w1, [x9, x10, lsl #2]
    28b4:	mov	x3, x27
    28b8:	mov	w2, w25
    28bc:	mul	w1, w25, w1
    28c0:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
    28c4:	ldr	x0, [sp, #104]
    28c8:	ands	x0, x0, #0xfffffffffffffffe
    28cc:	b.ne	2940 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x198>  // b.any
    28d0:	ldr	x0, [sp, #120]
    28d4:	msub	w2, w24, w25, w21
    28d8:	cmp	x0, w2, uxtw
    28dc:	b.cc	2968 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x1c0>  // b.lo, b.ul, b.last
    28e0:	sub	w21, w25, w2
    28e4:	sub	w19, w19, w24
    28e8:	ldr	x0, [sp, #112]
    28ec:	mov	x1, #0x1                   	// #1
    28f0:	madd	w19, w19, w25, w21
    28f4:	add	x0, x0, x2
    28f8:	stp	x0, x19, [x23]
    28fc:	mov	x0, x22
    2900:	str	x1, [x22]
    2904:	ldp	x19, x20, [sp, #16]
    2908:	ldp	x21, x22, [sp, #32]
    290c:	ldp	x23, x24, [sp, #48]
    2910:	ldp	x25, x26, [sp, #64]
    2914:	ldr	x27, [sp, #80]
    2918:	ldp	x29, x30, [sp], #128
    291c:	ret
    2920:	mov	w1, #0x3                   	// #3
    2924:	add	x26, sp, #0x68
    2928:	add	x27, sp, #0x70
    292c:	mov	x0, x26
    2930:	mov	x8, x27
    2934:	str	w1, [sp, #104]
    2938:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    293c:	b	2820 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x78>
    2940:	orr	x0, x0, #0x1
    2944:	str	x0, [x22]
    2948:	mov	x0, x22
    294c:	ldp	x19, x20, [sp, #16]
    2950:	ldp	x21, x22, [sp, #32]
    2954:	ldp	x23, x24, [sp, #48]
    2958:	ldp	x25, x26, [sp, #64]
    295c:	ldr	x27, [sp, #80]
    2960:	ldp	x29, x30, [sp], #128
    2964:	ret
    2968:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    296c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2970:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2974:	add	x3, x3, #0x0
    2978:	add	x1, x1, #0x0
    297c:	add	x0, x0, #0x0
    2980:	mov	w2, #0xc6                  	// #198
    2984:	bl	0 <__assert_fail>

0000000000002988 <_ZN4llvm3msf25WritableMappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
    2988:	stp	x29, x30, [sp, #-32]!
    298c:	add	x0, x0, #0x8
    2990:	mov	x29, sp
    2994:	str	x19, [sp, #16]
    2998:	mov	x19, x8
    299c:	bl	27a8 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
    29a0:	mov	x0, x19
    29a4:	ldr	x19, [sp, #16]
    29a8:	ldp	x29, x30, [sp], #32
    29ac:	ret

00000000000029b0 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE>:
    29b0:	stp	x29, x30, [sp, #-192]!
    29b4:	mov	x29, sp
    29b8:	stp	x19, x20, [sp, #16]
    29bc:	mov	w19, w2
    29c0:	mov	x20, x3
    29c4:	cbz	w19, 2a54 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xa4>
    29c8:	ldr	w2, [x0, #8]
    29cc:	stp	x21, x22, [sp, #32]
    29d0:	mov	w3, w2
    29d4:	udiv	w6, w1, w2
    29d8:	msub	w21, w6, w2, w1
    29dc:	sub	w1, w2, w21
    29e0:	cmp	w1, w19
    29e4:	csel	w1, w1, w19, ls  // ls = plast
    29e8:	sub	w1, w19, w1
    29ec:	cbz	w2, 2c30 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x280>
    29f0:	sub	x5, x3, #0x1
    29f4:	mov	w10, w6
    29f8:	add	x5, x5, x1
    29fc:	ldr	x9, [x0, #24]
    2a00:	udiv	x5, x5, x3
    2a04:	ldr	w7, [x9, x10, lsl #2]
    2a08:	mul	x5, x5, x3
    2a0c:	udiv	x5, x5, x3
    2a10:	adds	w5, w5, #0x1
    2a14:	b.eq	2a68 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xb8>  // b.none
    2a18:	add	w5, w5, w7
    2a1c:	mov	w1, w7
    2a20:	add	w1, w1, #0x1
    2a24:	cmp	w1, w5
    2a28:	b.eq	2a68 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xb8>  // b.none
    2a2c:	add	w4, w6, w1
    2a30:	sub	w4, w4, w7
    2a34:	ldr	w4, [x9, x4, lsl #2]
    2a38:	cmp	w1, w4
    2a3c:	b.eq	2a20 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x70>  // b.none
    2a40:	ldp	x21, x22, [sp, #32]
    2a44:	mov	w0, #0x0                   	// #0
    2a48:	ldp	x19, x20, [sp, #16]
    2a4c:	ldp	x29, x30, [sp], #192
    2a50:	ret
    2a54:	stp	xzr, xzr, [x3]
    2a58:	mov	w0, #0x1                   	// #1
    2a5c:	ldp	x19, x20, [sp, #16]
    2a60:	ldp	x29, x30, [sp], #192
    2a64:	ret
    2a68:	stp	xzr, xzr, [sp, #96]
    2a6c:	add	x22, sp, #0x38
    2a70:	add	x0, x0, #0x30
    2a74:	ldr	w1, [x9, x10, lsl #2]
    2a78:	mov	x8, x22
    2a7c:	add	x3, sp, #0x60
    2a80:	mul	w1, w2, w1
    2a84:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
    2a88:	ldr	x0, [sp, #56]
    2a8c:	ands	x1, x0, #0xfffffffffffffffe
    2a90:	b.ne	2ac4 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x114>  // b.any
    2a94:	ldr	x0, [sp, #104]
    2a98:	mov	w2, w21
    2a9c:	cmp	x0, w21, uxtw
    2aa0:	b.cc	2c88 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x2d8>  // b.lo, b.ul, b.last
    2aa4:	ldr	x1, [sp, #96]
    2aa8:	mov	w0, #0x1                   	// #1
    2aac:	ldp	x21, x22, [sp, #32]
    2ab0:	add	x1, x1, x2
    2ab4:	stp	x1, x19, [x20]
    2ab8:	ldp	x19, x20, [sp, #16]
    2abc:	ldp	x29, x30, [sp], #192
    2ac0:	ret
    2ac4:	orr	x2, x1, #0x1
    2ac8:	add	x19, sp, #0x50
    2acc:	add	x1, sp, #0x30
    2ad0:	mov	x0, x19
    2ad4:	add	x8, sp, #0x58
    2ad8:	stp	xzr, xzr, [sp, #56]
    2adc:	stp	xzr, x2, [sp, #72]
    2ae0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2ae4:	ldr	x1, [sp, #88]
    2ae8:	ands	x1, x1, #0xfffffffffffffffe
    2aec:	b.eq	2bc4 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x214>  // b.none
    2af0:	adrp	x4, 0 <_ZTVN4llvm18raw_string_ostreamE>
    2af4:	orr	x3, x1, #0x1
    2af8:	add	x5, sp, #0x70
    2afc:	add	x7, sp, #0x80
    2b00:	ldr	x4, [x4]
    2b04:	mov	w6, #0x1                   	// #1
    2b08:	mov	x2, #0x31                  	// #49
    2b0c:	add	x19, sp, #0x90
    2b10:	add	x4, x4, #0x10
    2b14:	mov	x0, x19
    2b18:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2b1c:	add	x1, x1, #0x0
    2b20:	str	x3, [sp, #88]
    2b24:	stp	x7, xzr, [sp, #112]
    2b28:	strb	wzr, [sp, #128]
    2b2c:	stp	x4, xzr, [sp, #144]
    2b30:	stp	xzr, xzr, [sp, #160]
    2b34:	str	w6, [sp, #176]
    2b38:	str	x5, [sp, #184]
    2b3c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2b40:	ldp	x3, x2, [x0, #16]
    2b44:	mov	x1, x0
    2b48:	cmp	x3, x2
    2b4c:	b.eq	2bac <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x1fc>  // b.none
    2b50:	mov	w0, #0xa                   	// #10
    2b54:	strb	w0, [x2]
    2b58:	ldr	x0, [x1, #24]
    2b5c:	add	x0, x0, #0x1
    2b60:	str	x0, [x1, #24]
    2b64:	ldr	x0, [sp, #88]
    2b68:	ands	x0, x0, #0xfffffffffffffffe
    2b6c:	b.eq	2c50 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x2a0>  // b.none
    2b70:	ldr	x2, [x0]
    2b74:	ldr	x2, [x2, #16]
    2b78:	blr	x2
    2b7c:	ldr	x0, [sp, #152]
    2b80:	ldr	x1, [sp, #168]
    2b84:	cmp	x1, x0
    2b88:	b.eq	2b94 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x1e4>  // b.none
    2b8c:	mov	x0, x19
    2b90:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    2b94:	ldr	x0, [sp, #184]
    2b98:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2b9c:	mov	w2, #0x2c9                 	// #713
    2ba0:	add	x1, x1, #0x0
    2ba4:	ldr	x0, [x0]
    2ba8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2bac:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2bb0:	add	x1, x1, #0x0
    2bb4:	mov	x2, #0x1                   	// #1
    2bb8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2bbc:	mov	x1, x0
    2bc0:	b	2b64 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x1b4>
    2bc4:	ldr	x0, [sp, #80]
    2bc8:	tbnz	w0, #0, 2c10 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x260>
    2bcc:	tst	x0, #0xfffffffffffffffe
    2bd0:	b.ne	2c10 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x260>  // b.any
    2bd4:	ldr	x0, [sp, #72]
    2bd8:	tbnz	w0, #0, 2c18 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x268>
    2bdc:	tst	x0, #0xfffffffffffffffe
    2be0:	b.ne	2c18 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x268>  // b.any
    2be4:	ldr	x0, [sp, #64]
    2be8:	tbnz	w0, #0, 2c20 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x270>
    2bec:	tst	x0, #0xfffffffffffffffe
    2bf0:	b.ne	2c20 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x270>  // b.any
    2bf4:	ldr	x0, [sp, #56]
    2bf8:	tbnz	w0, #0, 2c28 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x278>
    2bfc:	tst	x0, #0xfffffffffffffffe
    2c00:	mov	w0, #0x0                   	// #0
    2c04:	b.ne	2c28 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x278>  // b.any
    2c08:	ldp	x21, x22, [sp, #32]
    2c0c:	b	2a48 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x98>
    2c10:	mov	x0, x19
    2c14:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2c18:	add	x0, sp, #0x48
    2c1c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2c20:	add	x0, sp, #0x40
    2c24:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2c28:	mov	x0, x22
    2c2c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2c30:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c34:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c38:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c3c:	add	x3, x3, #0x0
    2c40:	add	x1, x1, #0x0
    2c44:	add	x0, x0, #0x0
    2c48:	mov	w2, #0x2ce                 	// #718
    2c4c:	bl	0 <__assert_fail>
    2c50:	ldp	x0, x2, [x1, #16]
    2c54:	sub	x0, x0, x2
    2c58:	cmp	x0, #0x6
    2c5c:	b.ls	2ca8 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x2f8>  // b.plast
    2c60:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c64:	add	x0, x0, #0x0
    2c68:	ldr	w3, [x0]
    2c6c:	ldur	w0, [x0, #3]
    2c70:	str	w3, [x2]
    2c74:	stur	w0, [x2, #3]
    2c78:	ldr	x0, [x1, #24]
    2c7c:	add	x0, x0, #0x7
    2c80:	str	x0, [x1, #24]
    2c84:	b	2b7c <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x1cc>
    2c88:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c8c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c90:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c94:	add	x3, x3, #0x0
    2c98:	add	x1, x1, #0x0
    2c9c:	add	x0, x0, #0x0
    2ca0:	mov	w2, #0xc6                  	// #198
    2ca4:	bl	0 <__assert_fail>
    2ca8:	mov	x0, x1
    2cac:	mov	x2, #0x7                   	// #7
    2cb0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2cb4:	add	x1, x1, #0x0
    2cb8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2cbc:	b	2b7c <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x1cc>

0000000000002cc0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>:
    2cc0:	stp	x29, x30, [sp, #-208]!
    2cc4:	mov	x29, sp
    2cc8:	ldr	x4, [x0]
    2ccc:	stp	x19, x20, [sp, #16]
    2cd0:	mov	w19, w1
    2cd4:	stp	x21, x22, [sp, #32]
    2cd8:	mov	x20, x0
    2cdc:	mov	x21, x8
    2ce0:	ldr	x1, [x4, #40]
    2ce4:	stp	x23, x24, [sp, #48]
    2ce8:	mov	x22, x3
    2cec:	str	w2, [sp, #124]
    2cf0:	mov	w23, w2
    2cf4:	blr	x1
    2cf8:	cmp	w0, w19
    2cfc:	b.cc	2e08 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x148>  // b.lo, b.ul, b.last
    2d00:	ldr	x1, [x20]
    2d04:	mov	x0, x20
    2d08:	ldr	x1, [x1, #40]
    2d0c:	blr	x1
    2d10:	add	w2, w23, w19
    2d14:	cmp	w0, w2
    2d18:	b.cs	2d5c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x9c>  // b.hs, b.nlast
    2d1c:	mov	w1, #0x1                   	// #1
    2d20:	add	x8, sp, #0xb0
    2d24:	add	x0, sp, #0x98
    2d28:	str	w1, [sp, #152]
    2d2c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2d30:	ldr	x0, [sp, #176]
    2d34:	ands	x0, x0, #0xfffffffffffffffe
    2d38:	b.eq	2d5c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x9c>  // b.none
    2d3c:	orr	x0, x0, #0x1
    2d40:	str	x0, [x21]
    2d44:	mov	x0, x21
    2d48:	ldp	x19, x20, [sp, #16]
    2d4c:	ldp	x21, x22, [sp, #32]
    2d50:	ldp	x23, x24, [sp, #48]
    2d54:	ldp	x29, x30, [sp], #208
    2d58:	ret
    2d5c:	ldr	w2, [sp, #124]
    2d60:	mov	x3, x22
    2d64:	mov	w1, w19
    2d68:	mov	x0, x20
    2d6c:	bl	29b0 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE>
    2d70:	tst	w0, #0xff
    2d74:	b.ne	2e4c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x18c>  // b.any
    2d78:	ldr	w1, [x20, #120]
    2d7c:	ldr	x2, [x20, #104]
    2d80:	cbz	w1, 2e6c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1ac>
    2d84:	cmn	w19, #0x3
    2d88:	b.hi	3520 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x860>  // b.pmore
    2d8c:	mov	w0, #0x25                  	// #37
    2d90:	sub	w4, w1, #0x1
    2d94:	mul	w0, w19, w0
    2d98:	and	w3, w0, w4
    2d9c:	and	w0, w0, w4
    2da0:	lsl	x3, x3, #5
    2da4:	add	x24, x2, x3
    2da8:	ldr	w3, [x2, x3]
    2dac:	cmp	w3, w19
    2db0:	b.ne	30c8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x408>  // b.any
    2db4:	ubfiz	x1, x1, #5, #32
    2db8:	add	x1, x2, x1
    2dbc:	cmp	x1, x24
    2dc0:	ldr	x23, [x20, #96]
    2dc4:	b.eq	2e78 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1b8>  // b.none
    2dc8:	ldp	x0, x4, [x24, #8]
    2dcc:	cmp	x4, x0
    2dd0:	b.eq	2e78 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1b8>  // b.none
    2dd4:	ldr	w5, [sp, #124]
    2dd8:	b	2de8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x128>
    2ddc:	add	x0, x0, #0x10
    2de0:	cmp	x4, x0
    2de4:	b.eq	2e78 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1b8>  // b.none
    2de8:	ldr	x3, [x0, #8]
    2dec:	cmp	x5, x3
    2df0:	b.hi	2ddc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x11c>  // b.pmore
    2df4:	ldr	x0, [x0]
    2df8:	stp	x0, x5, [x22]
    2dfc:	mov	x0, #0x1                   	// #1
    2e00:	str	x0, [x21]
    2e04:	b	2d44 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x84>
    2e08:	mov	w1, #0x3                   	// #3
    2e0c:	add	x8, sp, #0xb0
    2e10:	add	x0, sp, #0x98
    2e14:	str	w1, [sp, #152]
    2e18:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2e1c:	b	2d30 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x70>
    2e20:	cmp	w0, w19
    2e24:	b.hi	2f08 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x248>  // b.pmore
    2e28:	cmp	w0, w19
    2e2c:	mov	w4, w4
    2e30:	csel	w19, w0, w19, cs  // cs = hs, nlast
    2e34:	sub	w0, w19, w0
    2e38:	add	x1, x0, x4
    2e3c:	cmp	x1, x6
    2e40:	b.hi	3670 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x9b0>  // b.pmore
    2e44:	add	x8, x8, x0
    2e48:	stp	x8, x4, [x22]
    2e4c:	mov	x0, #0x1                   	// #1
    2e50:	str	x0, [x21]
    2e54:	mov	x0, x21
    2e58:	ldp	x19, x20, [sp, #16]
    2e5c:	ldp	x21, x22, [sp, #32]
    2e60:	ldp	x23, x24, [sp, #48]
    2e64:	ldp	x29, x30, [sp], #208
    2e68:	ret
    2e6c:	ldr	x23, [x20, #96]
    2e70:	mov	x24, x2
    2e74:	mov	x1, x2
    2e78:	ldr	w0, [x20, #112]
    2e7c:	cbz	w0, 2f30 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x270>
    2e80:	cmp	x1, x2
    2e84:	b.cc	3444 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x784>  // b.lo, b.ul, b.last
    2e88:	b.eq	2f30 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x270>  // b.none
    2e8c:	ldr	w0, [x2]
    2e90:	cmn	w0, #0x3
    2e94:	b.ls	2ea4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1e4>  // b.plast
    2e98:	add	x2, x2, #0x20
    2e9c:	cmp	x1, x2
    2ea0:	b	2e88 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1c8>
    2ea4:	cbz	x2, 2f38 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x278>
    2ea8:	ldr	x0, [x20, #96]
    2eac:	cmp	x0, x23
    2eb0:	b.ne	346c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x7ac>  // b.any
    2eb4:	cmp	x2, x1
    2eb8:	b.eq	2f70 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2b0>  // b.none
    2ebc:	ldr	w0, [x2]
    2ec0:	ldr	w4, [sp, #124]
    2ec4:	cmp	w0, w19
    2ec8:	add	w3, w4, w19
    2ecc:	ccmp	w3, w0, #0x0, ne  // ne = any
    2ed0:	b.ls	2f08 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x248>  // b.plast
    2ed4:	ldp	x6, x5, [x2, #8]
    2ed8:	cmp	x6, x5
    2edc:	b.eq	2f08 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x248>  // b.none
    2ee0:	ldp	x8, x6, [x5, #-16]
    2ee4:	add	x5, x6, w0, uxtw
    2ee8:	add	w7, w0, w5
    2eec:	cmp	w7, w19
    2ef0:	b.ls	2f08 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x248>  // b.plast
    2ef4:	cmp	w3, w5
    2ef8:	b.cc	2e20 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x160>  // b.lo, b.ul, b.last
    2efc:	cmp	w0, w19
    2f00:	ccmp	w3, w5, #0x0, ls  // ls = plast
    2f04:	b.eq	2e28 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x168>  // b.none
    2f08:	add	x2, x2, #0x20
    2f0c:	cmp	x1, x2
    2f10:	b.cc	3444 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x784>  // b.lo, b.ul, b.last
    2f14:	b.eq	2f30 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x270>  // b.none
    2f18:	ldr	w0, [x2]
    2f1c:	cmn	w0, #0x3
    2f20:	b.ls	2ea4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1e4>  // b.plast
    2f24:	add	x2, x2, #0x20
    2f28:	cmp	x1, x2
    2f2c:	b.ne	2f18 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x258>  // b.any
    2f30:	mov	x2, x1
    2f34:	cbnz	x2, 2ea8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1e8>
    2f38:	cbz	x1, 2f70 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2b0>
    2f3c:	ldr	x0, [x20, #96]
    2f40:	cmp	x0, x23
    2f44:	b.eq	2ebc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1fc>  // b.none
    2f48:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2f4c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2f50:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2f54:	add	x3, x3, #0x0
    2f58:	add	x1, x1, #0x0
    2f5c:	add	x0, x0, #0x0
    2f60:	mov	w2, #0x4c8                 	// #1224
    2f64:	stp	x25, x26, [sp, #64]
    2f68:	stp	x27, x28, [sp, #80]
    2f6c:	bl	0 <__assert_fail>
    2f70:	stp	x25, x26, [sp, #64]
    2f74:	ldr	x26, [x20, #88]
    2f78:	stp	x27, x28, [sp, #80]
    2f7c:	ldr	w27, [sp, #124]
    2f80:	ldr	x0, [x26]
    2f84:	ldr	x1, [x26, #80]
    2f88:	add	x2, x0, #0x7
    2f8c:	and	x2, x2, #0xfffffffffffffff8
    2f90:	add	x1, x1, x27
    2f94:	str	x1, [x26, #80]
    2f98:	sub	x2, x2, x0
    2f9c:	adds	x3, x27, x2
    2fa0:	b.cs	3650 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x990>  // b.hs, b.nlast
    2fa4:	ldr	x1, [x26, #8]
    2fa8:	sub	x1, x1, x0
    2fac:	cmp	x3, x1
    2fb0:	b.ls	30a4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3e4>  // b.plast
    2fb4:	add	x28, x27, #0x7
    2fb8:	cmp	x28, #0x1, lsl #12
    2fbc:	b.ls	30e8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x428>  // b.plast
    2fc0:	mov	x0, x28
    2fc4:	bl	0 <malloc>
    2fc8:	mov	x25, x0
    2fcc:	cbz	x0, 35dc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x91c>
    2fd0:	ldp	w1, w0, [x26, #72]
    2fd4:	cmp	w1, w0
    2fd8:	mov	w0, w0
    2fdc:	b.cs	335c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x69c>  // b.hs, b.nlast
    2fe0:	ldr	x5, [x26, #64]
    2fe4:	ubfiz	x4, x1, #4, #32
    2fe8:	add	x6, x5, x4
    2fec:	mov	w2, w1
    2ff0:	add	x2, x2, #0x1
    2ff4:	str	x25, [x5, x4]
    2ff8:	cmp	x2, x0
    2ffc:	str	x28, [x6, #8]
    3000:	b.hi	35f0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x930>  // b.pmore
    3004:	add	w1, w1, #0x1
    3008:	str	w1, [x26, #72]
    300c:	adds	x2, x25, #0x7
    3010:	b.cs	3630 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x970>  // b.hs, b.nlast
    3014:	and	x2, x2, #0xfffffffffffffff8
    3018:	add	x25, x25, x28
    301c:	add	x27, x27, x2
    3020:	cmp	x27, x25
    3024:	b.hi	3610 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x950>  // b.pmore
    3028:	ldr	w27, [sp, #124]
    302c:	add	x25, sp, #0xb0
    3030:	mov	x0, x20
    3034:	mov	x3, x27
    3038:	mov	x8, x25
    303c:	mov	w1, w19
    3040:	str	x2, [sp, #136]
    3044:	bl	2620 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE>
    3048:	ldr	x0, [sp, #176]
    304c:	ands	x0, x0, #0xfffffffffffffffe
    3050:	b.ne	30b4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3f4>  // b.any
    3054:	ldp	x2, x1, [x20, #96]
    3058:	ldr	w0, [x20, #120]
    305c:	add	x0, x1, x0, lsl #5
    3060:	cbz	x24, 3308 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x648>
    3064:	cmp	x23, x2
    3068:	b.ne	3474 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x7b4>  // b.any
    306c:	cmp	x0, x24
    3070:	b.eq	317c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x4bc>  // b.none
    3074:	add	x0, x24, #0x8
    3078:	add	x2, sp, #0x7c
    307c:	add	x1, sp, #0x88
    3080:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3084:	ldr	w1, [sp, #124]
    3088:	mov	x0, #0x1                   	// #1
    308c:	ldr	x2, [sp, #136]
    3090:	ldp	x25, x26, [sp, #64]
    3094:	ldp	x27, x28, [sp, #80]
    3098:	stp	x2, x1, [x22]
    309c:	str	x0, [x21]
    30a0:	b	2d44 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x84>
    30a4:	add	x2, x0, x2
    30a8:	add	x0, x2, x27
    30ac:	str	x0, [x26]
    30b0:	b	302c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x36c>
    30b4:	orr	x0, x0, #0x1
    30b8:	ldp	x25, x26, [sp, #64]
    30bc:	ldp	x27, x28, [sp, #80]
    30c0:	str	x0, [x21]
    30c4:	b	2d44 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x84>
    30c8:	mov	w5, #0x1                   	// #1
    30cc:	cmn	w3, #0x1
    30d0:	b.ne	3334 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x674>  // b.any
    30d4:	ubfiz	x1, x1, #5, #32
    30d8:	add	x1, x2, x1
    30dc:	mov	x24, x1
    30e0:	ldr	x23, [x20, #96]
    30e4:	b	2e78 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1b8>
    30e8:	ldr	w1, [x26, #24]
    30ec:	mov	x2, #0x40000000000         	// #4398046511104
    30f0:	mov	x28, #0x1000                	// #4096
    30f4:	str	w1, [sp, #104]
    30f8:	lsr	w0, w1, #7
    30fc:	cmp	w0, #0x1e
    3100:	lsl	x28, x28, x0
    3104:	csel	x28, x28, x2, cc  // cc = lo, ul, last
    3108:	mov	x0, x28
    310c:	bl	0 <malloc>
    3110:	mov	x25, x0
    3114:	ldr	w1, [sp, #104]
    3118:	cbz	x0, 35a0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x8e0>
    311c:	ldr	w0, [x26, #28]
    3120:	cmp	w0, w1
    3124:	b.ls	3428 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x768>  // b.plast
    3128:	ldr	x0, [x26, #16]
    312c:	str	x25, [x0, w1, uxtw #3]
    3130:	ldp	w0, w2, [x26, #24]
    3134:	mov	w1, w0
    3138:	add	x1, x1, #0x1
    313c:	cmp	x1, x2
    3140:	b.hi	35f0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x930>  // b.pmore
    3144:	add	w1, w0, #0x1
    3148:	add	x28, x25, x28
    314c:	stp	x25, x28, [x26]
    3150:	adds	x0, x25, #0x7
    3154:	str	w1, [x26, #24]
    3158:	b.cs	3630 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x970>  // b.hs, b.nlast
    315c:	and	x0, x0, #0xfffffffffffffff8
    3160:	add	x1, x27, x0
    3164:	cmp	x28, x1
    3168:	b.cc	3500 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x840>  // b.lo, b.ul, b.last
    316c:	ldr	w27, [sp, #124]
    3170:	mov	x2, x0
    3174:	str	x1, [x26]
    3178:	b	302c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x36c>
    317c:	add	x1, sp, #0x88
    3180:	add	x2, sp, #0x7c
    3184:	add	x0, sp, #0x98
    3188:	stp	xzr, xzr, [sp, #152]
    318c:	str	xzr, [sp, #168]
    3190:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3194:	ldp	x7, x5, [sp, #152]
    3198:	str	w19, [sp, #176]
    319c:	stp	xzr, xzr, [sp, #184]
    31a0:	mov	x6, #0x0                   	// #0
    31a4:	str	xzr, [sp, #200]
    31a8:	sub	x19, x5, x7
    31ac:	cmp	xzr, x19, asr #4
    31b0:	asr	x1, x19, #4
    31b4:	b.eq	31d4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x514>  // b.none
    31b8:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
    31bc:	cmp	x1, x0
    31c0:	b.hi	34dc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x81c>  // b.pmore
    31c4:	mov	x0, x19
    31c8:	bl	0 <_Znwm>
    31cc:	ldp	x7, x5, [sp, #152]
    31d0:	mov	x6, x0
    31d4:	add	x19, x6, x19
    31d8:	stp	x6, x6, [sp, #184]
    31dc:	cmp	x7, x5
    31e0:	str	x19, [sp, #200]
    31e4:	b.eq	34d4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x814>  // b.none
    31e8:	mov	x1, x7
    31ec:	mov	x2, x6
    31f0:	ldp	x4, x3, [x1]
    31f4:	stp	x4, x3, [x2]
    31f8:	add	x1, x1, #0x10
    31fc:	cmp	x5, x1
    3200:	add	x2, x2, #0x10
    3204:	b.ne	31f0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x530>  // b.any
    3208:	sub	x2, x5, x7
    320c:	add	x2, x6, x2
    3210:	ldr	w1, [x20, #120]
    3214:	add	x19, x20, #0x60
    3218:	str	x2, [sp, #192]
    321c:	cbz	w1, 3494 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x7d4>
    3220:	ldr	w4, [sp, #176]
    3224:	cmn	w4, #0x3
    3228:	b.hi	3528 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x868>  // b.pmore
    322c:	mov	w3, #0x25                  	// #37
    3230:	sub	w9, w1, #0x1
    3234:	ldr	x0, [x20, #104]
    3238:	mul	w3, w4, w3
    323c:	and	w5, w3, w9
    3240:	and	w3, w3, w9
    3244:	lsl	x5, x5, #5
    3248:	add	x2, x0, x5
    324c:	ldr	w8, [x0, x5]
    3250:	cmp	w4, w8
    3254:	b.ne	3274 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x5b4>  // b.any
    3258:	cbz	x6, 3264 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x5a4>
    325c:	mov	x0, x6
    3260:	bl	0 <_ZdlPv>
    3264:	ldr	x0, [sp, #152]
    3268:	cbz	x0, 3084 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3c4>
    326c:	bl	0 <_ZdlPv>
    3270:	b	3084 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3c4>
    3274:	mov	w7, #0x1                   	// #1
    3278:	mov	x5, #0x0                   	// #0
    327c:	cmn	w8, #0x1
    3280:	b.ne	3548 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x888>  // b.any
    3284:	ldr	x6, [x20, #96]
    3288:	cmp	x5, #0x0
    328c:	ldr	w3, [x20, #112]
    3290:	add	w0, w1, w1, lsl #1
    3294:	add	x6, x6, #0x1
    3298:	str	x6, [x20, #96]
    329c:	add	w6, w3, #0x1
    32a0:	csel	x2, x2, x5, eq  // eq = none
    32a4:	lsl	w5, w1, #1
    32a8:	cmp	w0, w6, lsl #2
    32ac:	b.ls	34a4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x7e4>  // b.plast
    32b0:	ldr	w5, [x20, #116]
    32b4:	sub	w5, w1, w5
    32b8:	sub	w5, w5, w6
    32bc:	cmp	w5, w1, lsr #3
    32c0:	b.ls	34a8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x7e8>  // b.plast
    32c4:	add	w3, w3, #0x1
    32c8:	str	w3, [x20, #112]
    32cc:	ldr	w0, [x2]
    32d0:	cmn	w0, #0x1
    32d4:	b.eq	32e4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x624>  // b.none
    32d8:	ldr	w0, [x20, #116]
    32dc:	sub	w0, w0, #0x1
    32e0:	str	w0, [x20, #116]
    32e4:	mov	x0, x2
    32e8:	ldr	x1, [sp, #184]
    32ec:	str	w4, [x0], #8
    32f0:	str	x1, [x2, #8]
    32f4:	ldr	x1, [sp, #192]
    32f8:	str	x1, [x0, #8]
    32fc:	ldr	x1, [sp, #200]
    3300:	str	x1, [x0, #16]
    3304:	b	3264 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x5a4>
    3308:	cbz	x0, 317c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x4bc>
    330c:	cmp	x23, x2
    3310:	b.eq	3074 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3b4>  // b.none
    3314:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3318:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    331c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3320:	add	x3, x3, #0x0
    3324:	add	x1, x1, #0x0
    3328:	add	x0, x0, #0x0
    332c:	mov	w2, #0x4b9                 	// #1209
    3330:	bl	0 <__assert_fail>
    3334:	add	w0, w0, w5
    3338:	add	w5, w5, #0x1
    333c:	and	w3, w4, w0
    3340:	and	w0, w4, w0
    3344:	lsl	x3, x3, #5
    3348:	add	x24, x2, x3
    334c:	ldr	w3, [x2, x3]
    3350:	cmp	w3, w19
    3354:	b.eq	2db4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xf4>  // b.none
    3358:	b	30cc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x40c>
    335c:	add	x0, x0, #0x2
    3360:	mov	x5, #0xffffffff            	// #4294967295
    3364:	add	x4, sp, #0xb0
    3368:	add	x2, sp, #0x98
    336c:	orr	x0, x0, x0, lsr #1
    3370:	str	x5, [sp, #176]
    3374:	str	w1, [sp, #120]
    3378:	orr	x0, x0, x0, lsr #2
    337c:	orr	x0, x0, x0, lsr #4
    3380:	orr	x0, x0, x0, lsr #8
    3384:	orr	x6, x0, x0, lsr #16
    3388:	orr	x0, x6, x0, lsr #32
    338c:	add	x0, x0, #0x1
    3390:	str	x0, [sp, #152]
    3394:	cmp	x0, x5
    3398:	csel	x0, x2, x4, ls  // ls = plast
    339c:	ldr	x0, [x0]
    33a0:	str	x0, [sp, #152]
    33a4:	lsl	x2, x0, #4
    33a8:	stp	x0, x2, [sp, #104]
    33ac:	mov	x0, x2
    33b0:	bl	0 <malloc>
    33b4:	mov	x5, x0
    33b8:	ldr	w1, [sp, #120]
    33bc:	ldr	x2, [sp, #112]
    33c0:	cbz	x0, 357c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x8bc>
    33c4:	ldr	x0, [x26, #64]
    33c8:	ubfiz	x1, x1, #4, #32
    33cc:	mov	x2, x5
    33d0:	add	x4, x0, x1
    33d4:	mov	x1, x0
    33d8:	cmp	x0, x4
    33dc:	b.eq	33f8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x738>  // b.none
    33e0:	ldp	x7, x6, [x1]
    33e4:	stp	x7, x6, [x2]
    33e8:	add	x1, x1, #0x10
    33ec:	cmp	x4, x1
    33f0:	add	x2, x2, #0x10
    33f4:	b.ne	33e0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x720>  // b.any
    33f8:	add	x1, x26, #0x50
    33fc:	cmp	x0, x1
    3400:	b.eq	3410 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x750>  // b.none
    3404:	str	x5, [sp, #112]
    3408:	bl	0 <free>
    340c:	ldr	x5, [sp, #112]
    3410:	str	x5, [x26, #64]
    3414:	ldr	x2, [sp, #104]
    3418:	str	w2, [x26, #76]
    341c:	ldr	w1, [x26, #72]
    3420:	and	x0, x2, #0xffffffff
    3424:	b	2fe4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x324>
    3428:	add	x1, x26, #0x20
    342c:	add	x0, x26, #0x10
    3430:	mov	x3, #0x8                   	// #8
    3434:	mov	x2, #0x0                   	// #0
    3438:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    343c:	ldr	w1, [x26, #24]
    3440:	b	3128 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x468>
    3444:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3448:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    344c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3450:	add	x3, x3, #0x0
    3454:	add	x1, x1, #0x0
    3458:	add	x0, x0, #0x0
    345c:	mov	w2, #0x4e0                 	// #1248
    3460:	stp	x25, x26, [sp, #64]
    3464:	stp	x27, x28, [sp, #80]
    3468:	bl	0 <__assert_fail>
    346c:	stp	x25, x26, [sp, #64]
    3470:	stp	x27, x28, [sp, #80]
    3474:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3478:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    347c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3480:	add	x3, x3, #0x0
    3484:	add	x1, x1, #0x0
    3488:	add	x0, x0, #0x0
    348c:	mov	w2, #0x4c7                 	// #1223
    3490:	bl	0 <__assert_fail>
    3494:	ldr	x0, [x20, #96]
    3498:	mov	w5, #0x0                   	// #0
    349c:	add	x0, x0, #0x1
    34a0:	str	x0, [x20, #96]
    34a4:	mov	w1, w5
    34a8:	mov	x0, x19
    34ac:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    34b0:	add	x2, sp, #0x90
    34b4:	mov	x1, x25
    34b8:	mov	x0, x19
    34bc:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    34c0:	ldr	x2, [sp, #144]
    34c4:	cbz	x2, 34e0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x820>
    34c8:	ldr	w3, [x20, #112]
    34cc:	ldr	w4, [sp, #176]
    34d0:	b	32c4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x604>
    34d4:	mov	x2, x6
    34d8:	b	3210 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x550>
    34dc:	bl	0 <_ZSt17__throw_bad_allocv>
    34e0:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    34e4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    34e8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    34ec:	add	x3, x3, #0x0
    34f0:	add	x1, x1, #0x0
    34f4:	add	x0, x0, #0x0
    34f8:	mov	w2, #0x22f                 	// #559
    34fc:	bl	0 <__assert_fail>
    3500:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3504:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3508:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    350c:	add	x3, x3, #0x0
    3510:	add	x1, x1, #0x0
    3514:	add	x0, x0, #0x0
    3518:	mov	w2, #0x105                 	// #261
    351c:	bl	0 <__assert_fail>
    3520:	stp	x25, x26, [sp, #64]
    3524:	stp	x27, x28, [sp, #80]
    3528:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    352c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3530:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3534:	add	x3, x3, #0x0
    3538:	add	x1, x1, #0x0
    353c:	add	x0, x0, #0x0
    3540:	mov	w2, #0x250                 	// #592
    3544:	bl	0 <__assert_fail>
    3548:	add	w3, w3, w7
    354c:	cmp	x5, #0x0
    3550:	and	w10, w9, w3
    3554:	ccmn	w8, #0x2, #0x0, eq  // eq = none
    3558:	csel	x5, x5, x2, ne  // ne = any
    355c:	add	w7, w7, #0x1
    3560:	lsl	x8, x10, #5
    3564:	and	w3, w9, w3
    3568:	add	x2, x0, x10, lsl #5
    356c:	ldr	w8, [x0, x8]
    3570:	cmp	w4, w8
    3574:	b.eq	3258 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x598>  // b.none
    3578:	b	327c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x5bc>
    357c:	cbz	x2, 35b8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x8f8>
    3580:	mov	w1, #0x1                   	// #1
    3584:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3588:	add	x0, x0, #0x0
    358c:	str	x5, [sp, #112]
    3590:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    3594:	ldr	w1, [x26, #72]
    3598:	ldr	x5, [sp, #112]
    359c:	b	33c4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x704>
    35a0:	mov	w1, #0x1                   	// #1
    35a4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    35a8:	add	x0, x0, #0x0
    35ac:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    35b0:	ldr	w1, [x26, #24]
    35b4:	b	311c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x45c>
    35b8:	mov	x0, #0x1                   	// #1
    35bc:	str	x5, [sp, #112]
    35c0:	str	w1, [sp, #120]
    35c4:	bl	0 <malloc>
    35c8:	ldr	x5, [sp, #112]
    35cc:	cbz	x0, 3580 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x8c0>
    35d0:	ldr	w1, [sp, #120]
    35d4:	mov	x5, x0
    35d8:	b	33c4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x704>
    35dc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    35e0:	mov	w1, #0x1                   	// #1
    35e4:	add	x0, x0, #0x0
    35e8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    35ec:	b	2fd0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x310>
    35f0:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    35f4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    35f8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    35fc:	add	x3, x3, #0x0
    3600:	add	x1, x1, #0x0
    3604:	add	x0, x0, #0x0
    3608:	mov	w2, #0x43                  	// #67
    360c:	bl	0 <__assert_fail>
    3610:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3614:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3618:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    361c:	add	x3, x3, #0x0
    3620:	add	x1, x1, #0x0
    3624:	add	x0, x0, #0x0
    3628:	mov	w2, #0xfb                  	// #251
    362c:	bl	0 <__assert_fail>
    3630:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3634:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3638:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    363c:	add	x3, x3, #0x0
    3640:	add	x1, x1, #0x0
    3644:	add	x0, x0, #0x0
    3648:	mov	w2, #0xba                  	// #186
    364c:	bl	0 <__assert_fail>
    3650:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3654:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3658:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    365c:	add	x3, x3, #0x0
    3660:	add	x1, x1, #0x0
    3664:	add	x0, x0, #0x0
    3668:	mov	w2, #0xdc                  	// #220
    366c:	bl	0 <__assert_fail>
    3670:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3674:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3678:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    367c:	add	x3, x3, #0x0
    3680:	add	x1, x1, #0x0
    3684:	add	x0, x0, #0x0
    3688:	mov	w2, #0x169                 	// #361
    368c:	stp	x25, x26, [sp, #64]
    3690:	stp	x27, x28, [sp, #80]
    3694:	bl	0 <__assert_fail>

0000000000003698 <_ZN4llvm3msf25WritableMappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>:
    3698:	stp	x29, x30, [sp, #-32]!
    369c:	add	x0, x0, #0x8
    36a0:	mov	x29, sp
    36a4:	str	x19, [sp, #16]
    36a8:	mov	x19, x8
    36ac:	bl	2cc0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>
    36b0:	mov	x0, x19
    36b4:	ldr	x19, [sp, #16]
    36b8:	ldp	x29, x30, [sp], #32
    36bc:	ret

Disassembly of section .text._ZNSt15_Sp_counted_ptrIDnLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt15_Sp_counted_ptrIDnLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	ret

Disassembly of section .text._ZNK4llvm12BinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm12BinaryStream8getFlagsEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm20WritableBinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm20WritableBinaryStream8getFlagsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3msf17MappedBlockStream9getEndianEv:

0000000000000000 <_ZNK4llvm3msf17MappedBlockStream9getEndianEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3msf25WritableMappedBlockStream9getEndianEv:

0000000000000000 <_ZNK4llvm3msf25WritableMappedBlockStream9getEndianEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	ldr	x1, [x0]
   4:	ldr	x1, [x1, #8]
   8:	mov	x16, x1
   c:	br	x16

Disassembly of section .text._ZN4llvm3msf25WritableMappedBlockStreamD0Ev:

0000000000000000 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x20, [x0, #144]
  1c:	str	x21, [sp, #32]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x0]
  28:	cbz	x20, 58 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x58>
  2c:	adrp	x21, 0 <__pthread_key_create>
  30:	ldr	x0, [x21]
  34:	cbz	x0, 11c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x11c>
  38:	add	x1, x20, #0x8
  3c:	ldaxr	w0, [x1]
  40:	sub	w2, w0, #0x1
  44:	stlxr	w3, w2, [x1]
  48:	cbnz	w3, 3c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x3c>
  4c:	cmp	w0, #0x1
  50:	b.eq	130 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x130>  // b.none
  54:	nop
  58:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
  5c:	ldr	w2, [x19, #128]
  60:	ldr	x20, [x19, #112]
  64:	ldr	x0, [x0]
  68:	ubfiz	x1, x2, #5, #32
  6c:	add	x0, x0, #0x10
  70:	str	x0, [x19, #8]
  74:	cbz	w2, bc <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xbc>
  78:	add	x21, x20, x1
  7c:	b	8c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x8c>
  80:	add	x20, x20, #0x20
  84:	cmp	x21, x20
  88:	b.eq	b0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xb0>  // b.none
  8c:	ldr	w0, [x20]
  90:	cmn	w0, #0x3
  94:	b.hi	80 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x80>  // b.pmore
  98:	ldr	x0, [x20, #8]
  9c:	cbz	x0, 80 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x80>
  a0:	add	x20, x20, #0x20
  a4:	bl	0 <_ZdlPv>
  a8:	cmp	x21, x20
  ac:	b.ne	8c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x8c>  // b.any
  b0:	ldr	w1, [x19, #128]
  b4:	ldr	x20, [x19, #112]
  b8:	lsl	x1, x1, #5
  bc:	mov	x0, x20
  c0:	bl	0 <_ZdlPvm>
  c4:	ldr	x20, [x19, #64]
  c8:	cbz	x20, f8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xf8>
  cc:	adrp	x21, 0 <__pthread_key_create>
  d0:	ldr	x0, [x21]
  d4:	cbz	x0, 194 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x194>
  d8:	add	x1, x20, #0x8
  dc:	ldaxr	w0, [x1]
  e0:	sub	w2, w0, #0x1
  e4:	stlxr	w3, w2, [x1]
  e8:	cbnz	w3, dc <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xdc>
  ec:	cmp	w0, #0x1
  f0:	b.eq	1a8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x1a8>  // b.none
  f4:	nop
  f8:	ldr	x0, [x19, #32]
  fc:	cbz	x0, 104 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x104>
 100:	bl	0 <_ZdlPv>
 104:	mov	x0, x19
 108:	mov	x1, #0xb0                  	// #176
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldr	x21, [sp, #32]
 114:	ldp	x29, x30, [sp], #48
 118:	b	0 <_ZdlPvm>
 11c:	ldr	w0, [x20, #8]
 120:	sub	w1, w0, #0x1
 124:	str	w1, [x20, #8]
 128:	cmp	w0, #0x1
 12c:	b.ne	58 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x58>  // b.any
 130:	ldr	x1, [x20]
 134:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
 138:	ldr	x0, [x0]
 13c:	ldr	x1, [x1, #16]
 140:	cmp	x1, x0
 144:	b.ne	250 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x250>  // b.any
 148:	ldr	x21, [x21]
 14c:	cbz	x21, 20c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x20c>
 150:	add	x1, x20, #0xc
 154:	ldaxr	w0, [x1]
 158:	sub	w2, w0, #0x1
 15c:	stlxr	w3, w2, [x1]
 160:	cbnz	w3, 154 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x154>
 164:	cmp	w0, #0x1
 168:	b.ne	58 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x58>  // b.any
 16c:	ldr	x1, [x20]
 170:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
 174:	ldr	x0, [x0]
 178:	ldr	x2, [x1, #24]
 17c:	cmp	x2, x0
 180:	b.ne	22c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x22c>  // b.any
 184:	ldr	x1, [x1, #8]
 188:	mov	x0, x20
 18c:	blr	x1
 190:	b	58 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x58>
 194:	ldr	w0, [x20, #8]
 198:	sub	w1, w0, #0x1
 19c:	str	w1, [x20, #8]
 1a0:	cmp	w0, #0x1
 1a4:	b.ne	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xf8>  // b.any
 1a8:	ldr	x1, [x20]
 1ac:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
 1b0:	ldr	x0, [x0]
 1b4:	ldr	x1, [x1, #16]
 1b8:	cmp	x1, x0
 1bc:	b.ne	244 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x244>  // b.any
 1c0:	ldr	x21, [x21]
 1c4:	cbz	x21, 21c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x21c>
 1c8:	add	x1, x20, #0xc
 1cc:	ldaxr	w0, [x1]
 1d0:	sub	w2, w0, #0x1
 1d4:	stlxr	w3, w2, [x1]
 1d8:	cbnz	w3, 1cc <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x1cc>
 1dc:	cmp	w0, #0x1
 1e0:	b.ne	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xf8>  // b.any
 1e4:	ldr	x1, [x20]
 1e8:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
 1ec:	ldr	x0, [x0]
 1f0:	ldr	x2, [x1, #24]
 1f4:	cmp	x2, x0
 1f8:	b.ne	238 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x238>  // b.any
 1fc:	ldr	x1, [x1, #8]
 200:	mov	x0, x20
 204:	blr	x1
 208:	b	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xf8>
 20c:	ldr	w0, [x20, #12]
 210:	sub	w1, w0, #0x1
 214:	str	w1, [x20, #12]
 218:	b	164 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x164>
 21c:	ldr	w0, [x20, #12]
 220:	sub	w1, w0, #0x1
 224:	str	w1, [x20, #12]
 228:	b	1dc <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x1dc>
 22c:	mov	x0, x20
 230:	blr	x2
 234:	b	58 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x58>
 238:	mov	x0, x20
 23c:	blr	x2
 240:	b	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xf8>
 244:	mov	x0, x20
 248:	blr	x1
 24c:	b	1c0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x1c0>
 250:	mov	x0, x20
 254:	blr	x1
 258:	b	148 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x148>

Disassembly of section .text._ZN4llvm3msf17MappedBlockStreamD0Ev:

0000000000000000 <_ZN4llvm3msf17MappedBlockStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamD0Ev>
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	w0, [x0, #120]
  18:	ldr	x1, [x1]
  1c:	ldr	x20, [x19, #104]
  20:	str	x21, [sp, #32]
  24:	add	x1, x1, #0x10
  28:	str	x1, [x19]
  2c:	ubfiz	x1, x0, #5, #32
  30:	cbz	w0, 78 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x78>
  34:	add	x21, x20, x1
  38:	b	48 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x48>
  3c:	add	x20, x20, #0x20
  40:	cmp	x21, x20
  44:	b.eq	6c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x6c>  // b.none
  48:	ldr	w0, [x20]
  4c:	cmn	w0, #0x3
  50:	b.hi	3c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x3c>  // b.pmore
  54:	ldr	x0, [x20, #8]
  58:	cbz	x0, 3c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x3c>
  5c:	add	x20, x20, #0x20
  60:	bl	0 <_ZdlPv>
  64:	cmp	x21, x20
  68:	b.ne	48 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x48>  // b.any
  6c:	ldr	w1, [x19, #120]
  70:	ldr	x20, [x19, #104]
  74:	lsl	x1, x1, #5
  78:	mov	x0, x20
  7c:	bl	0 <_ZdlPvm>
  80:	ldr	x20, [x19, #56]
  84:	cbz	x20, b0 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xb0>
  88:	adrp	x21, 0 <__pthread_key_create>
  8c:	ldr	x0, [x21]
  90:	cbz	x0, d4 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xd4>
  94:	add	x1, x20, #0x8
  98:	ldaxr	w0, [x1]
  9c:	sub	w2, w0, #0x1
  a0:	stlxr	w3, w2, [x1]
  a4:	cbnz	w3, 98 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x98>
  a8:	cmp	w0, #0x1
  ac:	b.eq	e8 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xe8>  // b.none
  b0:	ldr	x0, [x19, #24]
  b4:	cbz	x0, bc <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xbc>
  b8:	bl	0 <_ZdlPv>
  bc:	mov	x0, x19
  c0:	mov	x1, #0x80                  	// #128
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldr	x21, [sp, #32]
  cc:	ldp	x29, x30, [sp], #48
  d0:	b	0 <_ZdlPvm>
  d4:	ldr	w0, [x20, #8]
  d8:	sub	w1, w0, #0x1
  dc:	str	w1, [x20, #8]
  e0:	cmp	w0, #0x1
  e4:	b.ne	b0 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xb0>  // b.any
  e8:	ldr	x1, [x20]
  ec:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamD0Ev>
  f0:	ldr	x0, [x0]
  f4:	ldr	x1, [x1, #16]
  f8:	cmp	x1, x0
  fc:	b.ne	168 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x168>  // b.any
 100:	ldr	x21, [x21]
 104:	cbz	x21, 14c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x14c>
 108:	add	x1, x20, #0xc
 10c:	ldaxr	w0, [x1]
 110:	sub	w2, w0, #0x1
 114:	stlxr	w3, w2, [x1]
 118:	cbnz	w3, 10c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x10c>
 11c:	cmp	w0, #0x1
 120:	b.ne	b0 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xb0>  // b.any
 124:	ldr	x1, [x20]
 128:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamD0Ev>
 12c:	ldr	x0, [x0]
 130:	ldr	x2, [x1, #24]
 134:	cmp	x2, x0
 138:	b.ne	15c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x15c>  // b.any
 13c:	ldr	x1, [x1, #8]
 140:	mov	x0, x20
 144:	blr	x1
 148:	b	b0 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xb0>
 14c:	ldr	w0, [x20, #12]
 150:	sub	w1, w0, #0x1
 154:	str	w1, [x20, #12]
 158:	b	11c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x11c>
 15c:	mov	x0, x20
 160:	blr	x2
 164:	b	b0 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xb0>
 168:	mov	x0, x20
 16c:	blr	x1
 170:	b	100 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x100>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD2Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm18BinaryStreamWriterD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	ldr	x19, [x0, #16]
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	cbz	x19, 4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>
  24:	adrp	x20, 0 <__pthread_key_create>
  28:	ldr	x0, [x20]
  2c:	cbz	x0, 58 <_ZN4llvm18BinaryStreamWriterD1Ev+0x58>
  30:	add	x1, x19, #0x8
  34:	ldaxr	w0, [x1]
  38:	sub	w2, w0, #0x1
  3c:	stlxr	w3, w2, [x1]
  40:	cbnz	w3, 34 <_ZN4llvm18BinaryStreamWriterD1Ev+0x34>
  44:	cmp	w0, #0x1
  48:	b.eq	6c <_ZN4llvm18BinaryStreamWriterD1Ev+0x6c>  // b.none
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	ldr	w0, [x19, #8]
  5c:	sub	w1, w0, #0x1
  60:	str	w1, [x19, #8]
  64:	cmp	w0, #0x1
  68:	b.ne	4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>  // b.any
  6c:	ldr	x1, [x19]
  70:	adrp	x0, 0 <_ZN4llvm18BinaryStreamWriterD1Ev>
  74:	ldr	x0, [x0]
  78:	ldr	x1, [x1, #16]
  7c:	cmp	x1, x0
  80:	b.ne	fc <_ZN4llvm18BinaryStreamWriterD1Ev+0xfc>  // b.any
  84:	ldr	x20, [x20]
  88:	cbz	x20, d8 <_ZN4llvm18BinaryStreamWriterD1Ev+0xd8>
  8c:	add	x1, x19, #0xc
  90:	ldaxr	w0, [x1]
  94:	sub	w2, w0, #0x1
  98:	stlxr	w3, w2, [x1]
  9c:	cbnz	w3, 90 <_ZN4llvm18BinaryStreamWriterD1Ev+0x90>
  a0:	cmp	w0, #0x1
  a4:	b.ne	4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>  // b.any
  a8:	ldr	x1, [x19]
  ac:	adrp	x0, 0 <_ZN4llvm18BinaryStreamWriterD1Ev>
  b0:	ldr	x0, [x0]
  b4:	ldr	x2, [x1, #24]
  b8:	cmp	x2, x0
  bc:	b.ne	e8 <_ZN4llvm18BinaryStreamWriterD1Ev+0xe8>  // b.any
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x29, x30, [sp], #32
  cc:	ldr	x1, [x1, #8]
  d0:	mov	x16, x1
  d4:	br	x16
  d8:	ldr	w0, [x19, #12]
  dc:	sub	w1, w0, #0x1
  e0:	str	w1, [x19, #12]
  e4:	b	a0 <_ZN4llvm18BinaryStreamWriterD1Ev+0xa0>
  e8:	mov	x0, x19
  ec:	mov	x16, x2
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x29, x30, [sp], #32
  f8:	br	x16
  fc:	mov	x0, x19
 100:	blr	x1
 104:	b	84 <_ZN4llvm18BinaryStreamWriterD1Ev+0x84>

Disassembly of section .text._ZN4llvm3msf25WritableMappedBlockStreamD2Ev:

0000000000000000 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x20, [x0, #144]
  1c:	str	x21, [sp, #32]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x0]
  28:	cbz	x20, 58 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x58>
  2c:	adrp	x21, 0 <__pthread_key_create>
  30:	ldr	x0, [x21]
  34:	cbz	x0, 110 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x110>
  38:	add	x1, x20, #0x8
  3c:	ldaxr	w0, [x1]
  40:	sub	w2, w0, #0x1
  44:	stlxr	w3, w2, [x1]
  48:	cbnz	w3, 3c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x3c>
  4c:	cmp	w0, #0x1
  50:	b.eq	124 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x124>  // b.none
  54:	nop
  58:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
  5c:	ldr	w2, [x19, #128]
  60:	ldr	x20, [x19, #112]
  64:	ldr	x0, [x0]
  68:	ubfiz	x1, x2, #5, #32
  6c:	add	x0, x0, #0x10
  70:	str	x0, [x19, #8]
  74:	cbz	w2, bc <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xbc>
  78:	add	x21, x20, x1
  7c:	b	8c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x8c>
  80:	add	x20, x20, #0x20
  84:	cmp	x21, x20
  88:	b.eq	b0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xb0>  // b.none
  8c:	ldr	w0, [x20]
  90:	cmn	w0, #0x3
  94:	b.hi	80 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x80>  // b.pmore
  98:	ldr	x0, [x20, #8]
  9c:	cbz	x0, 80 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x80>
  a0:	add	x20, x20, #0x20
  a4:	bl	0 <_ZdlPv>
  a8:	cmp	x21, x20
  ac:	b.ne	8c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x8c>  // b.any
  b0:	ldr	w1, [x19, #128]
  b4:	ldr	x20, [x19, #112]
  b8:	lsl	x1, x1, #5
  bc:	mov	x0, x20
  c0:	bl	0 <_ZdlPvm>
  c4:	ldr	x20, [x19, #64]
  c8:	cbz	x20, f8 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xf8>
  cc:	adrp	x21, 0 <__pthread_key_create>
  d0:	ldr	x0, [x21]
  d4:	cbz	x0, 188 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x188>
  d8:	add	x1, x20, #0x8
  dc:	ldaxr	w0, [x1]
  e0:	sub	w2, w0, #0x1
  e4:	stlxr	w3, w2, [x1]
  e8:	cbnz	w3, dc <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xdc>
  ec:	cmp	w0, #0x1
  f0:	b.eq	19c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x19c>  // b.none
  f4:	nop
  f8:	ldr	x0, [x19, #32]
  fc:	cbz	x0, 200 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x200>
 100:	ldp	x19, x20, [sp, #16]
 104:	ldr	x21, [sp, #32]
 108:	ldp	x29, x30, [sp], #48
 10c:	b	0 <_ZdlPv>
 110:	ldr	w0, [x20, #8]
 114:	sub	w1, w0, #0x1
 118:	str	w1, [x20, #8]
 11c:	cmp	w0, #0x1
 120:	b.ne	58 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x58>  // b.any
 124:	ldr	x1, [x20]
 128:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
 12c:	ldr	x0, [x0]
 130:	ldr	x1, [x1, #16]
 134:	cmp	x1, x0
 138:	b.ne	254 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x254>  // b.any
 13c:	ldr	x21, [x21]
 140:	cbz	x21, 210 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x210>
 144:	add	x1, x20, #0xc
 148:	ldaxr	w0, [x1]
 14c:	sub	w2, w0, #0x1
 150:	stlxr	w3, w2, [x1]
 154:	cbnz	w3, 148 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x148>
 158:	cmp	w0, #0x1
 15c:	b.ne	58 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x58>  // b.any
 160:	ldr	x1, [x20]
 164:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
 168:	ldr	x0, [x0]
 16c:	ldr	x2, [x1, #24]
 170:	cmp	x2, x0
 174:	b.ne	230 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x230>  // b.any
 178:	ldr	x1, [x1, #8]
 17c:	mov	x0, x20
 180:	blr	x1
 184:	b	58 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x58>
 188:	ldr	w0, [x20, #8]
 18c:	sub	w1, w0, #0x1
 190:	str	w1, [x20, #8]
 194:	cmp	w0, #0x1
 198:	b.ne	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xf8>  // b.any
 19c:	ldr	x1, [x20]
 1a0:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
 1a4:	ldr	x0, [x0]
 1a8:	ldr	x1, [x1, #16]
 1ac:	cmp	x1, x0
 1b0:	b.ne	248 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x248>  // b.any
 1b4:	ldr	x21, [x21]
 1b8:	cbz	x21, 220 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x220>
 1bc:	add	x1, x20, #0xc
 1c0:	ldaxr	w0, [x1]
 1c4:	sub	w2, w0, #0x1
 1c8:	stlxr	w3, w2, [x1]
 1cc:	cbnz	w3, 1c0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x1c0>
 1d0:	cmp	w0, #0x1
 1d4:	b.ne	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xf8>  // b.any
 1d8:	ldr	x1, [x20]
 1dc:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
 1e0:	ldr	x0, [x0]
 1e4:	ldr	x2, [x1, #24]
 1e8:	cmp	x2, x0
 1ec:	b.ne	23c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x23c>  // b.any
 1f0:	ldr	x1, [x1, #8]
 1f4:	mov	x0, x20
 1f8:	blr	x1
 1fc:	b	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xf8>
 200:	ldp	x19, x20, [sp, #16]
 204:	ldr	x21, [sp, #32]
 208:	ldp	x29, x30, [sp], #48
 20c:	ret
 210:	ldr	w0, [x20, #12]
 214:	sub	w1, w0, #0x1
 218:	str	w1, [x20, #12]
 21c:	b	158 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x158>
 220:	ldr	w0, [x20, #12]
 224:	sub	w1, w0, #0x1
 228:	str	w1, [x20, #12]
 22c:	b	1d0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x1d0>
 230:	mov	x0, x20
 234:	blr	x2
 238:	b	58 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x58>
 23c:	mov	x0, x20
 240:	blr	x2
 244:	b	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xf8>
 248:	mov	x0, x20
 24c:	blr	x1
 250:	b	1b4 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x1b4>
 254:	mov	x0, x20
 258:	blr	x1
 25c:	b	13c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x13c>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD0Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm18BinaryStreamWriterD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x20, [x0, #16]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x0]
  24:	cbz	x20, 58 <_ZN4llvm18BinaryStreamWriterD0Ev+0x58>
  28:	str	x21, [sp, #32]
  2c:	adrp	x21, 0 <__pthread_key_create>
  30:	ldr	x0, [x21]
  34:	cbz	x0, 6c <_ZN4llvm18BinaryStreamWriterD0Ev+0x6c>
  38:	add	x1, x20, #0x8
  3c:	ldaxr	w0, [x1]
  40:	sub	w2, w0, #0x1
  44:	stlxr	w3, w2, [x1]
  48:	cbnz	w3, 3c <_ZN4llvm18BinaryStreamWriterD0Ev+0x3c>
  4c:	cmp	w0, #0x1
  50:	b.eq	80 <_ZN4llvm18BinaryStreamWriterD0Ev+0x80>  // b.none
  54:	ldr	x21, [sp, #32]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	mov	x1, #0x38                  	// #56
  64:	ldp	x29, x30, [sp], #48
  68:	b	0 <_ZdlPvm>
  6c:	ldr	w0, [x20, #8]
  70:	sub	w1, w0, #0x1
  74:	str	w1, [x20, #8]
  78:	cmp	w0, #0x1
  7c:	b.ne	54 <_ZN4llvm18BinaryStreamWriterD0Ev+0x54>  // b.any
  80:	ldr	x1, [x20]
  84:	adrp	x0, 0 <_ZN4llvm18BinaryStreamWriterD0Ev>
  88:	ldr	x0, [x0]
  8c:	ldr	x1, [x1, #16]
  90:	cmp	x1, x0
  94:	b.ne	108 <_ZN4llvm18BinaryStreamWriterD0Ev+0x108>  // b.any
  98:	ldr	x21, [x21]
  9c:	cbz	x21, e8 <_ZN4llvm18BinaryStreamWriterD0Ev+0xe8>
  a0:	add	x1, x20, #0xc
  a4:	ldaxr	w0, [x1]
  a8:	sub	w2, w0, #0x1
  ac:	stlxr	w3, w2, [x1]
  b0:	cbnz	w3, a4 <_ZN4llvm18BinaryStreamWriterD0Ev+0xa4>
  b4:	cmp	w0, #0x1
  b8:	b.ne	54 <_ZN4llvm18BinaryStreamWriterD0Ev+0x54>  // b.any
  bc:	ldr	x1, [x20]
  c0:	adrp	x0, 0 <_ZN4llvm18BinaryStreamWriterD0Ev>
  c4:	ldr	x0, [x0]
  c8:	ldr	x2, [x1, #24]
  cc:	cmp	x2, x0
  d0:	b.ne	f8 <_ZN4llvm18BinaryStreamWriterD0Ev+0xf8>  // b.any
  d4:	ldr	x1, [x1, #8]
  d8:	mov	x0, x20
  dc:	blr	x1
  e0:	ldr	x21, [sp, #32]
  e4:	b	58 <_ZN4llvm18BinaryStreamWriterD0Ev+0x58>
  e8:	ldr	w0, [x20, #12]
  ec:	sub	w1, w0, #0x1
  f0:	str	w1, [x20, #12]
  f4:	b	b4 <_ZN4llvm18BinaryStreamWriterD0Ev+0xb4>
  f8:	mov	x0, x20
  fc:	blr	x2
 100:	ldr	x21, [sp, #32]
 104:	b	58 <_ZN4llvm18BinaryStreamWriterD0Ev+0x58>
 108:	mov	x0, x20
 10c:	blr	x1
 110:	b	98 <_ZN4llvm18BinaryStreamWriterD0Ev+0x98>

Disassembly of section .text._ZN4llvm3msf17MappedBlockStreamD2Ev:

0000000000000000 <_ZN4llvm3msf17MappedBlockStreamD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamD1Ev>
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	w0, [x0, #120]
  18:	ldr	x1, [x1]
  1c:	ldr	x20, [x19, #104]
  20:	str	x21, [sp, #32]
  24:	add	x1, x1, #0x10
  28:	str	x1, [x19]
  2c:	ubfiz	x1, x0, #5, #32
  30:	cbz	w0, 78 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x78>
  34:	add	x21, x20, x1
  38:	b	48 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x48>
  3c:	add	x20, x20, #0x20
  40:	cmp	x21, x20
  44:	b.eq	6c <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x6c>  // b.none
  48:	ldr	w0, [x20]
  4c:	cmn	w0, #0x3
  50:	b.hi	3c <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x3c>  // b.pmore
  54:	ldr	x0, [x20, #8]
  58:	cbz	x0, 3c <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x3c>
  5c:	add	x20, x20, #0x20
  60:	bl	0 <_ZdlPv>
  64:	cmp	x21, x20
  68:	b.ne	48 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x48>  // b.any
  6c:	ldr	w1, [x19, #120]
  70:	ldr	x20, [x19, #104]
  74:	lsl	x1, x1, #5
  78:	mov	x0, x20
  7c:	bl	0 <_ZdlPvm>
  80:	ldr	x20, [x19, #56]
  84:	cbz	x20, b0 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xb0>
  88:	adrp	x21, 0 <__pthread_key_create>
  8c:	ldr	x0, [x21]
  90:	cbz	x0, c8 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xc8>
  94:	add	x1, x20, #0x8
  98:	ldaxr	w0, [x1]
  9c:	sub	w2, w0, #0x1
  a0:	stlxr	w3, w2, [x1]
  a4:	cbnz	w3, 98 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x98>
  a8:	cmp	w0, #0x1
  ac:	b.eq	dc <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xdc>  // b.none
  b0:	ldr	x0, [x19, #24]
  b4:	cbz	x0, 140 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x140>
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #48
  c4:	b	0 <_ZdlPv>
  c8:	ldr	w0, [x20, #8]
  cc:	sub	w1, w0, #0x1
  d0:	str	w1, [x20, #8]
  d4:	cmp	w0, #0x1
  d8:	b.ne	b0 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xb0>  // b.any
  dc:	ldr	x1, [x20]
  e0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamD1Ev>
  e4:	ldr	x0, [x0]
  e8:	ldr	x1, [x1, #16]
  ec:	cmp	x1, x0
  f0:	b.ne	16c <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x16c>  // b.any
  f4:	ldr	x21, [x21]
  f8:	cbz	x21, 150 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x150>
  fc:	add	x1, x20, #0xc
 100:	ldaxr	w0, [x1]
 104:	sub	w2, w0, #0x1
 108:	stlxr	w3, w2, [x1]
 10c:	cbnz	w3, 100 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x100>
 110:	cmp	w0, #0x1
 114:	b.ne	b0 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xb0>  // b.any
 118:	ldr	x1, [x20]
 11c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamD1Ev>
 120:	ldr	x0, [x0]
 124:	ldr	x2, [x1, #24]
 128:	cmp	x2, x0
 12c:	b.ne	160 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x160>  // b.any
 130:	ldr	x1, [x1, #8]
 134:	mov	x0, x20
 138:	blr	x1
 13c:	b	b0 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xb0>
 140:	ldp	x19, x20, [sp, #16]
 144:	ldr	x21, [sp, #32]
 148:	ldp	x29, x30, [sp], #48
 14c:	ret
 150:	ldr	w0, [x20, #12]
 154:	sub	w1, w0, #0x1
 158:	str	w1, [x20, #12]
 15c:	b	110 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x110>
 160:	mov	x0, x20
 164:	blr	x2
 168:	b	b0 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xb0>
 16c:	mov	x0, x20
 170:	blr	x1
 174:	b	f4 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xf4>

Disassembly of section .text._ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x1, x0
   8:	mov	x0, #0x30                  	// #48
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x8
  18:	ldr	w19, [x1]
  1c:	bl	0 <_Znwm>
  20:	mov	w1, w19
  24:	mov	x19, x0
  28:	orr	x19, x19, #0x1
  2c:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  30:	str	x19, [x20]
  34:	mov	x0, x20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x4, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x24, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	sub	x1, x20, x24
  2c:	cmp	x4, x1, asr #4
  30:	b.eq	150 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.none
  34:	mov	x23, x0
  38:	mov	x26, x2
  3c:	mov	x27, x3
  40:	asr	x0, x1, #4
  44:	sub	x28, x19, x24
  48:	cbz	x0, 138 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x138>
  4c:	cmp	x0, x0, lsl #1
  50:	mov	x25, #0x7ffffffffffffff0    	// #9223372036854775792
  54:	lsl	x0, x0, #1
  58:	b.ls	124 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x124>  // b.plast
  5c:	mov	x0, x25
  60:	bl	0 <_Znwm>
  64:	mov	x22, x0
  68:	add	x25, x0, x25
  6c:	add	x21, x0, #0x10
  70:	add	x0, x22, x28
  74:	ldr	w1, [x27]
  78:	ldr	x2, [x26]
  7c:	str	x2, [x22, x28]
  80:	str	x1, [x0, #8]
  84:	cmp	x19, x24
  88:	b.eq	bc <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xbc>  // b.none
  8c:	mov	x3, x22
  90:	mov	x2, x24
  94:	nop
  98:	ldp	x4, x1, [x2]
  9c:	stp	x4, x1, [x3]
  a0:	add	x2, x2, #0x10
  a4:	cmp	x19, x2
  a8:	add	x3, x3, #0x10
  ac:	b.ne	98 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>  // b.any
  b0:	sub	x21, x19, x24
  b4:	add	x21, x21, #0x10
  b8:	add	x21, x22, x21
  bc:	cmp	x19, x20
  c0:	b.eq	f4 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf4>  // b.none
  c4:	mov	x2, x19
  c8:	mov	x3, x21
  cc:	nop
  d0:	ldr	x1, [x2, #8]
  d4:	str	x1, [x3, #8]
  d8:	ldr	x1, [x2], #16
  dc:	str	x1, [x3]
  e0:	add	x3, x3, #0x10
  e4:	cmp	x2, x20
  e8:	b.ne	d0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>  // b.any
  ec:	sub	x2, x2, x19
  f0:	add	x21, x21, x2
  f4:	cbz	x24, 100 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x100>
  f8:	mov	x0, x24
  fc:	bl	0 <_ZdlPv>
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x27, x28, [sp, #80]
 108:	stp	x22, x21, [x23]
 10c:	str	x25, [x23, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x23, x24, [sp, #48]
 118:	ldp	x25, x26, [sp, #64]
 11c:	ldp	x29, x30, [sp], #96
 120:	ret
 124:	cbnz	x0, 140 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x140>
 128:	mov	x21, #0x10                  	// #16
 12c:	mov	x25, #0x0                   	// #0
 130:	mov	x22, #0x0                   	// #0
 134:	b	70 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x70>
 138:	mov	x25, #0x10                  	// #16
 13c:	b	5c <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x5c>
 140:	cmp	x0, x4
 144:	csel	x0, x0, x4, ls  // ls = plast
 148:	lsl	x25, x0, #4
 14c:	b	5c <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x5c>
 150:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_>:
   0:	mov	x5, x1
   4:	mov	x4, x0
   8:	ldp	x1, x3, [x0, #8]
   c:	cmp	x1, x3
  10:	b.eq	2c <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0x2c>  // b.none
  14:	ldr	w2, [x2]
  18:	add	x0, x1, #0x10
  1c:	ldr	x3, [x5]
  20:	stp	x3, x2, [x1]
  24:	str	x0, [x4, #8]
  28:	ret
  2c:	mov	x3, x2
  30:	mov	x2, x5
  34:	b	0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	mov	x26, x1
  18:	ldp	x23, x25, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x21, x22, [sp, #32]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x25, x23
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	14c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x14c>  // b.none
  34:	mov	x21, x0
  38:	mov	x20, x2
  3c:	asr	x0, x1, #3
  40:	sub	x27, x26, x23
  44:	cbz	x0, 134 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x134>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x24, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	120 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x120>  // b.plast
  58:	mov	x0, x24
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x24, x0, x24
  68:	add	x19, x0, #0x8
  6c:	ldr	x0, [x20]
  70:	str	x0, [x22, x27]
  74:	str	xzr, [x20]
  78:	cmp	x26, x23
  7c:	b.eq	c4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc4>  // b.none
  80:	mov	x20, x22
  84:	mov	x19, x23
  88:	ldr	x0, [x19]
  8c:	str	xzr, [x19]
  90:	str	x0, [x20]
  94:	ldr	x0, [x19]
  98:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  9c:	ldr	x1, [x0]
  a0:	ldr	x1, [x1, #8]
  a4:	blr	x1
  a8:	add	x19, x19, #0x8
  ac:	add	x20, x20, #0x8
  b0:	cmp	x26, x19
  b4:	b.ne	88 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>  // b.any
  b8:	sub	x19, x26, x23
  bc:	add	x19, x19, #0x8
  c0:	add	x19, x22, x19
  c4:	cmp	x26, x25
  c8:	b.eq	f0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf0>  // b.none
  cc:	mov	x2, x26
  d0:	mov	x3, x19
  d4:	nop
  d8:	ldr	x0, [x2], #8
  dc:	str	x0, [x3], #8
  e0:	cmp	x2, x25
  e4:	b.ne	d8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd8>  // b.any
  e8:	sub	x2, x2, x26
  ec:	add	x19, x19, x2
  f0:	cbz	x23, fc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xfc>
  f4:	mov	x0, x23
  f8:	bl	0 <_ZdlPv>
  fc:	ldp	x25, x26, [sp, #64]
 100:	ldr	x27, [sp, #80]
 104:	stp	x22, x19, [x21]
 108:	str	x24, [x21, #16]
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x23, x24, [sp, #48]
 118:	ldp	x29, x30, [sp], #96
 11c:	ret
 120:	cbnz	x0, 13c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x13c>
 124:	mov	x19, #0x8                   	// #8
 128:	mov	x24, #0x0                   	// #0
 12c:	mov	x22, #0x0                   	// #0
 130:	b	6c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x6c>
 134:	mov	x24, #0x8                   	// #8
 138:	b	58 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>
 13c:	cmp	x0, x3
 140:	csel	x0, x0, x3, ls  // ls = plast
 144:	lsl	x24, x0, #3
 148:	b	58 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>
 14c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 150:	add	x0, x0, #0x0
 154:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	ldp	x3, x2, [x0, #8]
   4:	mov	x4, x0
   8:	cmp	x3, x2
   c:	b.eq	24 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x24>  // b.none
  10:	ldr	x0, [x1]
  14:	str	xzr, [x1]
  18:	str	x0, [x3], #8
  1c:	str	x3, [x4, #8]
  20:	ret
  24:	mov	x2, x1
  28:	mov	x1, x3
  2c:	b	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x8
  14:	ldr	x0, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	adrp	x21, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  20:	ldr	x2, [x0]
  24:	ldr	x21, [x21]
  28:	ldr	x2, [x2, #48]
  2c:	mov	x1, x21
  30:	blr	x2
  34:	tst	w0, #0xff
  38:	b.ne	60 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x60>  // b.any
  3c:	ldr	x0, [x19]
  40:	str	xzr, [x19]
  44:	ldp	x21, x22, [sp, #32]
  48:	orr	x0, x0, #0x1
  4c:	str	x0, [x20]
  50:	mov	x0, x20
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	ldr	x22, [x19]
  64:	mov	x1, x21
  68:	mov	x0, x22
  6c:	ldr	x2, [x22]
  70:	ldr	x2, [x2, #48]
  74:	str	xzr, [x19]
  78:	blr	x2
  7c:	tst	w0, #0xff
  80:	b.eq	b0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0xb0>  // b.none
  84:	ldr	x1, [x22]
  88:	mov	x0, #0x1                   	// #1
  8c:	ldr	x1, [x1, #8]
  90:	str	x0, [x20]
  94:	mov	x0, x22
  98:	blr	x1
  9c:	mov	x0, x20
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldp	x29, x30, [sp], #48
  ac:	ret
  b0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  b4:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  b8:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  bc:	add	x3, x3, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x0, x0, #0x0
  c8:	mov	w2, #0x329                 	// #809
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	ldr	x3, [x0]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x8
  14:	stp	x27, x28, [sp, #80]
  18:	ands	x27, x3, #0xfffffffffffffffe
  1c:	b.ne	40 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x40>  // b.any
  20:	str	xzr, [x0]
  24:	mov	x0, #0x1                   	// #1
  28:	str	x0, [x8]
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x27, x28, [sp, #80]
  38:	ldp	x29, x30, [sp], #192
  3c:	ret
  40:	ldr	x2, [x27]
  44:	stp	x21, x22, [sp, #32]
  48:	adrp	x22, 0 <_ZN4llvm9ErrorList2IDE>
  4c:	mov	x20, x1
  50:	str	xzr, [x0]
  54:	ldr	x1, [x22]
  58:	mov	x0, x27
  5c:	ldr	x2, [x2, #48]
  60:	blr	x2
  64:	tst	w0, #0xff
  68:	b.eq	180 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x180>  // b.none
  6c:	stp	x23, x24, [sp, #48]
  70:	mov	x0, #0x1                   	// #1
  74:	ldp	x21, x23, [x27, #8]
  78:	str	x0, [sp, #144]
  7c:	cmp	x23, x21
  80:	b.eq	150 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x150>  // b.none
  84:	adrp	x1, 0 <_ZTVN4llvm9ErrorListE>
  88:	add	x24, sp, #0xa0
  8c:	stp	x25, x26, [sp, #64]
  90:	add	x25, sp, #0x98
  94:	add	x26, sp, #0xb8
  98:	ldr	x1, [x1]
  9c:	add	x2, sp, #0xb0
  a0:	add	x1, x1, #0x10
  a4:	stp	x1, x2, [sp, #104]
  a8:	orr	x0, x0, #0x1
  ac:	str	xzr, [sp, #144]
  b0:	mov	x8, x24
  b4:	str	x0, [sp, #168]
  b8:	mov	x1, x20
  bc:	mov	x0, x25
  c0:	ldr	x2, [x21]
  c4:	str	xzr, [x21]
  c8:	str	x2, [sp, #152]
  cc:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  d0:	ldr	x0, [sp, #168]
  d4:	ands	x0, x0, #0xfffffffffffffffe
  d8:	b.ne	1c0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1c0>  // b.any
  dc:	ldr	x28, [sp, #160]
  e0:	stp	xzr, xzr, [sp, #160]
  e4:	orr	x28, x28, #0x1
  e8:	ldr	x0, [sp, #144]
  ec:	tbnz	w0, #0, 31c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x31c>
  f0:	tst	x0, #0xfffffffffffffffe
  f4:	b.ne	31c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x31c>  // b.any
  f8:	ldr	x1, [sp, #160]
  fc:	orr	x28, x28, x0
 100:	orr	x28, x28, #0x1
 104:	str	x28, [sp, #144]
 108:	tbnz	w1, #0, 374 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x374>
 10c:	tst	x1, #0xfffffffffffffffe
 110:	b.ne	374 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x374>  // b.any
 114:	ldr	x0, [sp, #152]
 118:	cbz	x0, 128 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x128>
 11c:	ldr	x1, [x0]
 120:	ldr	x1, [x1, #8]
 124:	blr	x1
 128:	ldr	x0, [sp, #168]
 12c:	tbnz	w0, #0, 37c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x37c>
 130:	tst	x0, #0xfffffffffffffffe
 134:	b.ne	37c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x37c>  // b.any
 138:	add	x21, x21, #0x8
 13c:	cmp	x23, x21
 140:	ldr	x0, [sp, #144]
 144:	b.ne	a8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xa8>  // b.any
 148:	ldp	x25, x26, [sp, #64]
 14c:	orr	x0, x0, #0x1
 150:	ldr	x1, [x27]
 154:	ldr	x1, [x1, #8]
 158:	str	x0, [x19]
 15c:	mov	x0, x27
 160:	blr	x1
 164:	mov	x0, x19
 168:	ldp	x19, x20, [sp, #16]
 16c:	ldp	x21, x22, [sp, #32]
 170:	ldp	x23, x24, [sp, #48]
 174:	ldp	x27, x28, [sp, #80]
 178:	ldp	x29, x30, [sp], #192
 17c:	ret
 180:	add	x0, sp, #0xb8
 184:	mov	x1, x20
 188:	mov	x8, x19
 18c:	str	x27, [sp, #184]
 190:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 194:	ldr	x0, [sp, #184]
 198:	cbz	x0, 2c8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2c8>
 19c:	ldr	x1, [x0]
 1a0:	ldr	x1, [x1, #8]
 1a4:	blr	x1
 1a8:	mov	x0, x19
 1ac:	ldp	x19, x20, [sp, #16]
 1b0:	ldp	x21, x22, [sp, #32]
 1b4:	ldp	x27, x28, [sp, #80]
 1b8:	ldp	x29, x30, [sp], #192
 1bc:	ret
 1c0:	ldr	x1, [sp, #160]
 1c4:	orr	x28, x0, #0x1
 1c8:	str	x28, [sp, #168]
 1cc:	ands	x1, x1, #0xfffffffffffffffe
 1d0:	b.eq	2c0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2c0>  // b.none
 1d4:	ldr	x4, [x0]
 1d8:	orr	x2, x1, #0x1
 1dc:	str	x2, [sp, #160]
 1e0:	ldr	x28, [x22]
 1e4:	ldr	x2, [x4, #48]
 1e8:	mov	x1, x28
 1ec:	blr	x2
 1f0:	tst	w0, #0xff
 1f4:	ldr	x0, [sp, #160]
 1f8:	b.ne	2d0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2d0>  // b.any
 1fc:	ands	x0, x0, #0xfffffffffffffffe
 200:	mov	x2, #0x0                   	// #0
 204:	b.ne	350 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x350>  // b.any
 208:	ldr	x1, [sp, #168]
 20c:	mov	x0, #0x20                  	// #32
 210:	stp	xzr, xzr, [sp, #160]
 214:	and	x1, x1, #0xfffffffffffffffe
 218:	stp	x2, x1, [sp, #176]
 21c:	bl	0 <_Znwm>
 220:	mov	x28, x0
 224:	mov	x2, x0
 228:	ldr	x0, [sp, #184]
 22c:	ldr	x1, [sp, #104]
 230:	str	x1, [x28], #8
 234:	ldr	x1, [x22]
 238:	stp	x2, x1, [sp, #120]
 23c:	ldr	x4, [x0]
 240:	ldr	x4, [x4, #48]
 244:	str	xzr, [x2, #8]
 248:	stp	xzr, xzr, [x28, #8]
 24c:	blr	x4
 250:	tst	w0, #0xff
 254:	ldr	x1, [sp, #128]
 258:	b.ne	4d4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4d4>  // b.any
 25c:	ldr	x0, [sp, #176]
 260:	ldr	x4, [x0]
 264:	ldr	x4, [x4, #48]
 268:	blr	x4
 26c:	tst	w0, #0xff
 270:	b.ne	4d4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4d4>  // b.any
 274:	mov	x0, x28
 278:	mov	x1, x26
 27c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 280:	ldr	x1, [sp, #112]
 284:	mov	x0, x28
 288:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 28c:	ldr	x0, [sp, #176]
 290:	ldr	x1, [sp, #120]
 294:	orr	x28, x1, #0x1
 298:	cbz	x0, 2a8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2a8>
 29c:	ldr	x1, [x0]
 2a0:	ldr	x1, [x1, #8]
 2a4:	blr	x1
 2a8:	ldr	x0, [sp, #184]
 2ac:	cbz	x0, e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe8>
 2b0:	ldr	x1, [x0]
 2b4:	ldr	x1, [x1, #8]
 2b8:	blr	x1
 2bc:	b	e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe8>
 2c0:	stp	xzr, xzr, [sp, #160]
 2c4:	b	e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe8>
 2c8:	ldp	x21, x22, [sp, #32]
 2cc:	b	2c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2c>
 2d0:	ldr	x1, [sp, #168]
 2d4:	ands	x0, x0, #0xfffffffffffffffe
 2d8:	and	x3, x1, #0xfffffffffffffffe
 2dc:	b.ne	324 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x324>  // b.any
 2e0:	mov	x2, #0x0                   	// #0
 2e4:	add	x0, x3, #0x8
 2e8:	mov	x1, x26
 2ec:	str	xzr, [sp, #160]
 2f0:	str	x2, [sp, #184]
 2f4:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 2f8:	ldr	x0, [sp, #184]
 2fc:	cbz	x0, 30c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x30c>
 300:	ldr	x1, [x0]
 304:	ldr	x1, [x1, #8]
 308:	blr	x1
 30c:	ldr	x28, [sp, #168]
 310:	str	xzr, [sp, #168]
 314:	orr	x28, x28, #0x1
 318:	b	e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe8>
 31c:	add	x0, sp, #0x90
 320:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 324:	ldr	x2, [x0]
 328:	str	x3, [sp, #120]
 32c:	mov	x1, x28
 330:	ldr	x2, [x2, #48]
 334:	blr	x2
 338:	tst	w0, #0xff
 33c:	ldr	x3, [sp, #120]
 340:	b.ne	458 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x458>  // b.any
 344:	ldr	x2, [sp, #160]
 348:	and	x2, x2, #0xfffffffffffffffe
 34c:	b	2e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2e4>
 350:	ldr	x2, [x0]
 354:	mov	x1, x28
 358:	ldr	x2, [x2, #48]
 35c:	blr	x2
 360:	tst	w0, #0xff
 364:	b.ne	384 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x384>  // b.any
 368:	ldr	x2, [sp, #160]
 36c:	and	x2, x2, #0xfffffffffffffffe
 370:	b	208 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x208>
 374:	mov	x0, x24
 378:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 37c:	add	x0, sp, #0xa8
 380:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 384:	ldp	x0, x1, [sp, #160]
 388:	str	xzr, [sp, #168]
 38c:	and	x0, x0, #0xfffffffffffffffe
 390:	and	x1, x1, #0xfffffffffffffffe
 394:	ldr	x3, [x0, #8]!
 398:	str	x3, [sp, #128]
 39c:	ldp	x2, x4, [x0, #8]
 3a0:	str	x1, [sp, #184]
 3a4:	cmp	x2, x4
 3a8:	b.eq	4c4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4c4>  // b.none
 3ac:	cmp	x3, x2
 3b0:	add	x4, x2, #0x8
 3b4:	b.eq	4b4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4b4>  // b.none
 3b8:	mov	x1, x2
 3bc:	ldur	x5, [x2, #-8]
 3c0:	stur	xzr, [x2, #-8]
 3c4:	str	x5, [x1], #-8
 3c8:	str	x4, [x0, #8]
 3cc:	ldr	x0, [sp, #128]
 3d0:	sub	x2, x1, x0
 3d4:	cmp	x2, #0x0
 3d8:	asr	x28, x2, #3
 3dc:	b.gt	3e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3e8>
 3e0:	b	410 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x410>
 3e4:	sub	x1, x1, #0x8
 3e8:	ldp	x4, x0, [x1, #-8]
 3ec:	stp	xzr, x4, [x1, #-8]
 3f0:	cbz	x0, 408 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x408>
 3f4:	ldr	x4, [x0]
 3f8:	str	x1, [sp, #120]
 3fc:	ldr	x4, [x4, #8]
 400:	blr	x4
 404:	ldr	x1, [sp, #120]
 408:	subs	x28, x28, #0x1
 40c:	b.ne	3e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3e4>  // b.any
 410:	ldr	x2, [sp, #128]
 414:	ldr	x1, [sp, #184]
 418:	str	xzr, [sp, #184]
 41c:	ldr	x0, [x2]
 420:	str	x1, [x2]
 424:	cbz	x0, 434 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x434>
 428:	ldr	x1, [x0]
 42c:	ldr	x1, [x1, #8]
 430:	blr	x1
 434:	ldr	x0, [sp, #184]
 438:	cbz	x0, 448 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x448>
 43c:	ldr	x1, [x0]
 440:	ldr	x1, [x1, #8]
 444:	blr	x1
 448:	ldr	x28, [sp, #160]
 44c:	str	xzr, [sp, #160]
 450:	orr	x28, x28, #0x1
 454:	b	e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe8>
 458:	ldr	x1, [sp, #160]
 45c:	str	xzr, [sp, #160]
 460:	add	x0, x3, #0x8
 464:	and	x1, x1, #0xfffffffffffffffe
 468:	str	x1, [sp, #136]
 46c:	ldr	x28, [x1, #8]
 470:	ldr	x1, [x1, #16]
 474:	str	x1, [sp, #128]
 478:	cmp	x28, x1
 47c:	b.eq	4a0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4a0>  // b.none
 480:	mov	x1, x28
 484:	str	x0, [sp, #120]
 488:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 48c:	add	x28, x28, #0x8
 490:	ldr	x0, [sp, #128]
 494:	cmp	x0, x28
 498:	ldr	x0, [sp, #120]
 49c:	b.ne	480 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x480>  // b.any
 4a0:	ldr	x0, [sp, #136]
 4a4:	ldr	x1, [x0]
 4a8:	ldr	x1, [x1, #8]
 4ac:	blr	x1
 4b0:	b	30c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x30c>
 4b4:	str	xzr, [sp, #184]
 4b8:	str	x1, [x3]
 4bc:	str	x4, [x0, #8]
 4c0:	b	434 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x434>
 4c4:	ldr	x1, [sp, #128]
 4c8:	mov	x2, x26
 4cc:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 4d0:	b	434 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x434>
 4d4:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 4d8:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 4dc:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 4e0:	add	x3, x3, #0x0
 4e4:	add	x1, x1, #0x0
 4e8:	add	x0, x0, #0x0
 4ec:	mov	w2, #0x181                 	// #385
 4f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_>:
   0:	ldr	w3, [x0, #24]
   4:	cbz	w3, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_+0x4c>
   8:	ldr	w4, [x1]
   c:	cmn	w4, #0x3
  10:	b.hi	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_+0xb0>  // b.pmore
  14:	mov	w1, #0x25                  	// #37
  18:	sub	w3, w3, #0x1
  1c:	ldr	x5, [x0, #8]
  20:	mul	w0, w4, w1
  24:	and	w1, w0, w3
  28:	and	w0, w0, w3
  2c:	lsl	x1, x1, #5
  30:	add	x6, x5, x1
  34:	ldr	w1, [x5, x1]
  38:	cmp	w4, w1
  3c:	b.ne	58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_+0x58>  // b.any
  40:	mov	w0, #0x1                   	// #1
  44:	str	x6, [x2]
  48:	ret
  4c:	mov	w0, #0x0                   	// #0
  50:	str	xzr, [x2]
  54:	ret
  58:	mov	w8, #0x1                   	// #1
  5c:	mov	x7, #0x0                   	// #0
  60:	cmn	w1, #0x1
  64:	b.ne	7c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_+0x7c>  // b.any
  68:	cmp	x7, #0x0
  6c:	mov	w0, #0x0                   	// #0
  70:	csel	x7, x7, x6, ne  // ne = any
  74:	str	x7, [x2]
  78:	ret
  7c:	add	w0, w8, w0
  80:	cmp	x7, #0x0
  84:	and	w9, w3, w0
  88:	ccmn	w1, #0x2, #0x0, eq  // eq = none
  8c:	csel	x7, x7, x6, ne  // ne = any
  90:	add	w8, w8, #0x1
  94:	lsl	x1, x9, #5
  98:	and	w0, w3, w0
  9c:	add	x6, x5, x1
  a0:	ldr	w1, [x5, x1]
  a4:	cmp	w4, w1
  a8:	b.eq	40 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_+0x40>  // b.none
  ac:	b	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_+0x60>
  b0:	stp	x29, x30, [sp, #-16]!
  b4:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_>
  b8:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_>
  bc:	mov	x29, sp
  c0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPKSB_>
  c4:	add	x3, x3, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x0, x0, #0x0
  d0:	mov	w2, #0x250                 	// #592
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	orr	x2, x1, x1, lsr #1
   c:	mov	x29, sp
  10:	orr	x2, x2, x2, lsr #2
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	orr	x2, x2, x2, lsr #4
  20:	mov	w0, #0x40                  	// #64
  24:	orr	x2, x2, x2, lsr #8
  28:	ldr	w20, [x19, #24]
  2c:	str	x21, [sp, #32]
  30:	orr	x2, x2, x2, lsr #16
  34:	add	x2, x2, #0x1
  38:	cmp	w2, w0
  3c:	csel	w0, w2, w0, cs  // cs = hs, nlast
  40:	str	w0, [x19, #24]
  44:	ldr	x21, [x19, #8]
  48:	ubfiz	x0, x0, #5, #32
  4c:	bl	0 <_Znwm>
  50:	stp	x0, xzr, [x19, #8]
  54:	ldr	w2, [x19, #24]
  58:	sub	w1, w2, #0x1
  5c:	and	w3, w1, w2
  60:	cbz	x21, 168 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x168>
  64:	ubfiz	x1, x20, #5, #32
  68:	add	x7, x21, x1
  6c:	cbnz	w3, 1d8 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x1d8>
  70:	ubfiz	x2, x2, #5, #32
  74:	mov	x3, x0
  78:	add	x2, x0, x2
  7c:	mov	w4, #0xffffffff            	// #-1
  80:	cmp	x0, x2
  84:	b.eq	94 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x94>  // b.none
  88:	str	w4, [x3], #32
  8c:	cmp	x2, x3
  90:	b.ne	88 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x88>  // b.any
  94:	cmp	x7, x21
  98:	mov	x4, x21
  9c:	mov	w8, #0x25                  	// #37
  a0:	b.ne	b4 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xb4>  // b.any
  a4:	b	10c <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x10c>
  a8:	add	x4, x4, #0x20
  ac:	cmp	x7, x4
  b0:	b.eq	10c <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x10c>  // b.none
  b4:	ldr	w6, [x4]
  b8:	cmn	w6, #0x3
  bc:	b.hi	a8 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xa8>  // b.pmore
  c0:	ldr	w3, [x19, #24]
  c4:	cbz	w3, 1f8 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x1f8>
  c8:	mul	w2, w6, w8
  cc:	sub	w3, w3, #0x1
  d0:	and	w5, w2, w3
  d4:	and	w2, w2, w3
  d8:	lsl	x5, x5, #5
  dc:	add	x10, x0, x5
  e0:	ldr	w5, [x0, x5]
  e4:	cmp	w6, w5
  e8:	b.ne	120 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x120>  // b.any
  ec:	adrp	x3, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  f0:	adrp	x1, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  f4:	adrp	x0, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  f8:	add	x3, x3, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x0, x0, #0x0
 104:	mov	w2, #0x17a                 	// #378
 108:	bl	0 <__assert_fail>
 10c:	mov	x0, x21
 110:	ldp	x19, x20, [sp, #16]
 114:	ldr	x21, [sp, #32]
 118:	ldp	x29, x30, [sp], #48
 11c:	b	0 <_ZdlPvm>
 120:	mov	w11, #0x1                   	// #1
 124:	mov	x9, #0x0                   	// #0
 128:	cmn	w5, #0x1
 12c:	b.ne	19c <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x19c>  // b.any
 130:	cmp	x9, #0x0
 134:	csel	x9, x9, x10, ne  // ne = any
 138:	mov	x2, x9
 13c:	ldr	x3, [x4, #8]
 140:	str	w6, [x2], #8
 144:	str	x3, [x9, #8]
 148:	ldr	w3, [x19, #16]
 14c:	ldr	x5, [x4, #16]
 150:	str	x5, [x2, #8]
 154:	add	w3, w3, #0x1
 158:	ldr	x5, [x4, #24]
 15c:	str	x5, [x2, #16]
 160:	str	w3, [x19, #16]
 164:	b	a8 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xa8>
 168:	cbnz	w3, 1d8 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x1d8>
 16c:	ubfiz	x2, x2, #5, #32
 170:	mov	w1, #0xffffffff            	// #-1
 174:	add	x2, x0, x2
 178:	cmp	x0, x2
 17c:	b.eq	18c <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x18c>  // b.none
 180:	str	w1, [x0], #32
 184:	cmp	x2, x0
 188:	b.ne	180 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x180>  // b.any
 18c:	ldp	x19, x20, [sp, #16]
 190:	ldr	x21, [sp, #32]
 194:	ldp	x29, x30, [sp], #48
 198:	ret
 19c:	add	w2, w2, w11
 1a0:	cmp	x9, #0x0
 1a4:	and	w12, w3, w2
 1a8:	ccmn	w5, #0x2, #0x0, eq  // eq = none
 1ac:	csel	x10, x10, x9, eq  // eq = none
 1b0:	add	w11, w11, #0x1
 1b4:	lsl	x5, x12, #5
 1b8:	and	w2, w3, w2
 1bc:	add	x12, x0, x5
 1c0:	ldr	w5, [x0, x5]
 1c4:	cmp	w6, w5
 1c8:	b.eq	ec <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xec>  // b.none
 1cc:	mov	x9, x10
 1d0:	mov	x10, x12
 1d4:	b	128 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x128>
 1d8:	adrp	x3, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
 1dc:	adrp	x1, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
 1e0:	adrp	x0, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
 1e4:	add	x3, x3, #0x0
 1e8:	add	x1, x1, #0x0
 1ec:	add	x0, x0, #0x0
 1f0:	mov	w2, #0x15b                 	// #347
 1f4:	bl	0 <__assert_fail>
 1f8:	mov	x0, #0x0                   	// #0
 1fc:	str	wzr, [x0]
 200:	brk	#0x3e8

MSFBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	w5, w2
       8:	mov	x6, #0x2                   	// #2
       c:	mov	x29, sp
      10:	stp	x19, x20, [sp, #16]
      14:	mov	x19, x0
      18:	add	w0, w2, #0x3f
      1c:	stp	x23, x24, [sp, #48]
      20:	add	x23, x19, #0x20
      24:	mov	w2, #0x3                   	// #3
      28:	stp	x21, x22, [sp, #32]
      2c:	lsr	w22, w0, #6
      30:	lsr	w20, w0, #6
      34:	str	x4, [x19]
      38:	lsl	x24, x22, #3
      3c:	strb	w3, [x19, #8]
      40:	mov	x0, x24
      44:	stur	x6, [x19, #12]
      48:	stp	w1, w2, [x19, #20]
      4c:	stp	xzr, xzr, [x19, #32]
      50:	str	w5, [x23, #16]
      54:	bl	0 <malloc>
      58:	mov	x21, x0
      5c:	cbz	x0, 1e4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e4>
      60:	stp	x21, x22, [x19, #32]
      64:	cbnz	w20, 15c <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x15c>
      68:	ldr	w1, [x23, #16]
      6c:	add	w0, w1, #0x3f
      70:	lsr	w20, w0, #6
      74:	ands	w3, w1, #0x3f
      78:	b.ne	118 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x118>  // b.any
      7c:	stp	xzr, xzr, [x19, #56]
      80:	stp	xzr, xzr, [x19, #72]
      84:	stp	xzr, xzr, [x19, #88]
      88:	cbz	w1, 1c4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c4>
      8c:	ldr	x0, [x19, #40]
      90:	cbz	x0, 1a4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a4>
      94:	ldr	x0, [x19, #32]
      98:	cmp	w1, #0x1
      9c:	ldr	x2, [x0]
      a0:	and	x3, x2, #0xfffffffffffffffe
      a4:	str	x3, [x0]
      a8:	b.ls	1c4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c4>  // b.plast
      ac:	ldr	x3, [x19, #40]
      b0:	cbz	x3, 1a4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a4>
      b4:	and	x3, x2, #0xfffffffffffffffc
      b8:	str	x3, [x0]
      bc:	cmp	w1, #0x2
      c0:	b.eq	1c4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c4>  // b.none
      c4:	ldr	x3, [x19, #40]
      c8:	cbz	x3, 1a4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a4>
      cc:	and	x2, x2, #0xfffffffffffffff8
      d0:	str	x2, [x0]
      d4:	ldr	w2, [x19, #24]
      d8:	cmp	w2, w1
      dc:	b.cs	1c4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c4>  // b.hs, b.nlast
      e0:	ldr	x1, [x19, #40]
      e4:	lsr	w3, w2, #6
      e8:	cmp	x3, x1
      ec:	b.cs	1a4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a4>  // b.hs, b.nlast
      f0:	ldr	x4, [x0, x3, lsl #3]
      f4:	mov	x1, #0x1                   	// #1
      f8:	lsl	x1, x1, x2
      fc:	bic	x1, x4, x1
     100:	str	x1, [x0, x3, lsl #3]
     104:	ldp	x19, x20, [sp, #16]
     108:	ldp	x21, x22, [sp, #32]
     10c:	ldp	x23, x24, [sp, #48]
     110:	ldp	x29, x30, [sp], #64
     114:	ret
     118:	ldr	x4, [x19, #40]
     11c:	sub	w0, w20, #0x1
     120:	mov	x2, #0xffffffffffffffff    	// #-1
     124:	cmp	x0, x4
     128:	lsl	x2, x2, x3
     12c:	b.cs	1a4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a4>  // b.hs, b.nlast
     130:	ldr	x5, [x19, #32]
     134:	add	x4, x19, #0x38
     138:	add	x3, x19, #0x50
     13c:	ldr	x6, [x5, x0, lsl #3]
     140:	bic	x2, x6, x2
     144:	str	x2, [x5, x0, lsl #3]
     148:	str	xzr, [x19, #56]
     14c:	stp	xzr, xzr, [x4, #8]
     150:	str	xzr, [x19, #80]
     154:	stp	xzr, xzr, [x3, #8]
     158:	b	8c <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x8c>
     15c:	mov	w1, #0xffffffff            	// #-1
     160:	mov	x2, x24
     164:	mov	x0, x21
     168:	bl	0 <memset>
     16c:	ldr	w1, [x23, #16]
     170:	add	w20, w1, #0x3f
     174:	lsr	w0, w20, #6
     178:	lsr	w20, w20, #6
     17c:	cmp	x22, x0
     180:	b.ls	74 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x74>  // b.plast
     184:	subs	x22, x22, x0
     188:	b.eq	74 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x74>  // b.none
     18c:	mov	w1, #0x0                   	// #0
     190:	lsl	x2, x22, #3
     194:	add	x0, x21, x0, lsl #3
     198:	bl	0 <memset>
     19c:	ldr	w1, [x23, #16]
     1a0:	b	74 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x74>
     1a4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1a8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1ac:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1b0:	add	x3, x3, #0x0
     1b4:	add	x1, x1, #0x0
     1b8:	add	x0, x0, #0x0
     1bc:	mov	w2, #0x1ab                 	// #427
     1c0:	bl	0 <__assert_fail>
     1c4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1c8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1cc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1d0:	add	x3, x3, #0x0
     1d4:	add	x1, x1, #0x0
     1d8:	add	x0, x0, #0x0
     1dc:	mov	w2, #0x1eb                 	// #491
     1e0:	bl	0 <__assert_fail>
     1e4:	cbz	x24, 1fc <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1fc>
     1e8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1ec:	mov	w1, #0x1                   	// #1
     1f0:	add	x0, x0, #0x0
     1f4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     1f8:	b	60 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x60>
     1fc:	mov	x0, #0x1                   	// #1
     200:	bl	0 <malloc>
     204:	cbz	x0, 1e8 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e8>
     208:	mov	x21, x0
     20c:	b	60 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x60>

0000000000000210 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb>:
     210:	stp	x29, x30, [sp, #-144]!
     214:	cmp	w1, #0x800
     218:	and	w3, w3, #0xff
     21c:	mov	x29, sp
     220:	stp	x19, x20, [sp, #16]
     224:	mov	x19, x8
     228:	b.eq	2c0 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0xb0>  // b.none
     22c:	b.hi	2b8 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0xa8>  // b.pmore
     230:	sub	w4, w1, #0x200
     234:	tst	w4, #0xfffffdff
     238:	b.eq	2c0 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0xb0>  // b.none
     23c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     240:	mov	x20, x0
     244:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     248:	add	x1, x1, #0x0
     24c:	mov	w2, #0x103                 	// #259
     250:	mov	x0, #0x40                  	// #64
     254:	stp	x1, xzr, [sp, #40]
     258:	strh	w2, [sp, #56]
     25c:	bl	0 <_Znwm>
     260:	mov	x2, x20
     264:	mov	x1, #0x5                   	// #5
     268:	mov	x20, x0
     26c:	add	x3, sp, #0x28
     270:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
     274:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     278:	ldrb	w1, [x19, #104]
     27c:	ands	x2, x20, #0xfffffffffffffffe
     280:	ldr	x0, [x0]
     284:	orr	w1, w1, #0x3
     288:	strb	w1, [x19, #104]
     28c:	add	x0, x0, #0x10
     290:	str	x0, [x20]
     294:	b.ne	35c <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x14c>  // b.any
     298:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     29c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2a0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2a4:	add	x3, x3, #0x0
     2a8:	add	x1, x1, #0x0
     2ac:	add	x0, x0, #0x0
     2b0:	mov	w2, #0x1ce                 	// #462
     2b4:	bl	0 <__assert_fail>
     2b8:	cmp	w1, #0x1, lsl #12
     2bc:	b.ne	23c <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x2c>  // b.any
     2c0:	cmp	w2, #0x4
     2c4:	mov	w5, #0x4                   	// #4
     2c8:	mov	x4, x0
     2cc:	csel	w2, w2, w5, cs  // cs = hs, nlast
     2d0:	add	x0, sp, #0x28
     2d4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2d8:	ldrb	w0, [x19, #104]
     2dc:	add	x2, x19, #0x38
     2e0:	ldrb	w3, [sp, #48]
     2e4:	add	x1, x19, #0x50
     2e8:	and	w0, w0, #0xfffffffc
     2ec:	strb	w3, [x19, #8]
     2f0:	orr	w0, w0, #0x2
     2f4:	strb	w0, [x19, #104]
     2f8:	mov	x0, x2
     2fc:	ldr	x4, [sp, #40]
     300:	str	x4, [x19]
     304:	ldr	w4, [sp, #88]
     308:	ldur	x8, [sp, #52]
     30c:	stur	x8, [x19, #12]
     310:	ldur	x5, [sp, #60]
     314:	stur	x5, [x19, #20]
     318:	ldp	x6, x7, [sp, #72]
     31c:	stp	x6, x7, [x19, #32]
     320:	ldr	x3, [sp, #96]
     324:	str	w4, [x19, #48]
     328:	str	x3, [x19, #56]
     32c:	ldr	x3, [sp, #104]
     330:	ldr	x2, [sp, #112]
     334:	stp	x3, x2, [x0, #8]
     338:	ldp	x0, x2, [sp, #120]
     33c:	str	x0, [x19, #80]
     340:	mov	x0, x1
     344:	ldr	x1, [sp, #136]
     348:	stp	x2, x1, [x0, #8]
     34c:	mov	x0, x19
     350:	ldp	x19, x20, [sp, #16]
     354:	ldp	x29, x30, [sp], #144
     358:	ret
     35c:	str	x2, [x19]
     360:	mov	x0, x19
     364:	ldp	x19, x20, [sp, #16]
     368:	ldp	x29, x30, [sp], #144
     36c:	ret

0000000000000370 <_ZN4llvm3msf10MSFBuilder14setFreePageMapEj>:
     370:	str	w1, [x0, #12]
     374:	ret

0000000000000378 <_ZN4llvm3msf10MSFBuilder11setUnknown1Ej>:
     378:	str	w1, [x0, #16]
     37c:	ret

0000000000000380 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv>:
     380:	ldr	w1, [x0, #48]
     384:	add	w1, w1, #0x3f
     388:	cmp	wzr, w1, lsr #6
     38c:	b.eq	3d8 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x58>  // b.none
     390:	mov	x4, x0
     394:	lsr	w2, w1, #6
     398:	mov	x3, #0x0                   	// #0
     39c:	mov	w0, #0x0                   	// #0
     3a0:	ldr	x5, [x4, #40]
     3a4:	nop
     3a8:	cmp	x3, x5
     3ac:	b.eq	3e0 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x60>  // b.none
     3b0:	ldr	x1, [x4, #32]
     3b4:	ldr	d0, [x1, x3, lsl #3]
     3b8:	add	x3, x3, #0x1
     3bc:	cmp	w2, w3
     3c0:	cnt	v0.8b, v0.8b
     3c4:	addv	b0, v0.8b
     3c8:	umov	w1, v0.b[0]
     3cc:	add	w0, w0, w1
     3d0:	b.hi	3a8 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x28>  // b.pmore
     3d4:	ret
     3d8:	mov	w0, #0x0                   	// #0
     3dc:	ret
     3e0:	stp	x29, x30, [sp, #-16]!
     3e4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     3e8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     3ec:	mov	x29, sp
     3f0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     3f4:	add	x3, x3, #0x0
     3f8:	add	x1, x1, #0x0
     3fc:	add	x0, x0, #0x0
     400:	mov	w2, #0x1ab                 	// #427
     404:	bl	0 <__assert_fail>

0000000000000408 <_ZNK4llvm3msf10MSFBuilder18getTotalBlockCountEv>:
     408:	ldr	w0, [x0, #48]
     40c:	ret

0000000000000410 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv>:
     410:	stp	x29, x30, [sp, #-32]!
     414:	mov	x29, sp
     418:	stp	x19, x20, [sp, #16]
     41c:	mov	x20, x0
     420:	bl	408 <_ZNK4llvm3msf10MSFBuilder18getTotalBlockCountEv>
     424:	mov	w19, w0
     428:	mov	x0, x20
     42c:	bl	380 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv>
     430:	sub	w0, w19, w0
     434:	ldp	x19, x20, [sp, #16]
     438:	ldp	x29, x30, [sp], #32
     43c:	ret

0000000000000440 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>:
     440:	stp	x29, x30, [sp, #-16]!
     444:	mov	x29, sp
     448:	ldr	w2, [x0, #48]
     44c:	cmp	w1, w2
     450:	b.cs	484 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj+0x44>  // b.hs, b.nlast
     454:	ldr	x4, [x0, #40]
     458:	lsr	w3, w1, #6
     45c:	mov	x2, #0x1                   	// #1
     460:	cmp	x3, x4
     464:	lsl	x1, x2, x1
     468:	b.cs	4a4 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj+0x64>  // b.hs, b.nlast
     46c:	ldr	x0, [x0, #32]
     470:	ldp	x29, x30, [sp], #16
     474:	ldr	x0, [x0, x3, lsl #3]
     478:	tst	x1, x0
     47c:	cset	w0, ne  // ne = any
     480:	ret
     484:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     488:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     48c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     490:	add	x3, x3, #0x0
     494:	add	x1, x1, #0x0
     498:	add	x0, x0, #0x0
     49c:	mov	w2, #0x1f0                 	// #496
     4a0:	bl	0 <__assert_fail>
     4a4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     4a8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     4ac:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     4b0:	add	x3, x3, #0x0
     4b4:	add	x1, x1, #0x0
     4b8:	add	x0, x0, #0x0
     4bc:	mov	w2, #0x1ab                 	// #427
     4c0:	bl	0 <__assert_fail>
     4c4:	nop

00000000000004c8 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj>:
     4c8:	stp	x29, x30, [sp, #-80]!
     4cc:	mov	x29, sp
     4d0:	stp	x19, x20, [sp, #16]
     4d4:	mov	x19, x0
     4d8:	ldr	w0, [x0, #24]
     4dc:	str	x21, [sp, #32]
     4e0:	mov	x21, x8
     4e4:	cmp	w0, w1
     4e8:	b.eq	640 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x178>  // b.none
     4ec:	ldr	w0, [x19, #48]
     4f0:	mov	w20, w1
     4f4:	cmp	w1, w0
     4f8:	b.cc	578 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0xb0>  // b.lo, b.ul, b.last
     4fc:	ldrb	w0, [x19, #8]
     500:	cbnz	w0, 568 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0xa0>
     504:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     508:	mov	x19, x0
     50c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     510:	add	x1, x1, #0x0
     514:	mov	w2, #0x103                 	// #259
     518:	mov	x0, #0x40                  	// #64
     51c:	stp	x1, xzr, [sp, #56]
     520:	strh	w2, [sp, #72]
     524:	bl	0 <_Znwm>
     528:	mov	x2, x19
     52c:	add	x3, sp, #0x38
     530:	mov	x19, x0
     534:	mov	x1, #0x2                   	// #2
     538:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
     53c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     540:	orr	x0, x19, #0x1
     544:	str	x0, [x21]
     548:	mov	x0, x21
     54c:	ldr	x1, [x1]
     550:	ldr	x21, [sp, #32]
     554:	add	x1, x1, #0x10
     558:	str	x1, [x19]
     55c:	ldp	x19, x20, [sp, #16]
     560:	ldp	x29, x30, [sp], #80
     564:	ret
     568:	add	w1, w1, #0x1
     56c:	add	x0, x19, #0x20
     570:	mov	w2, #0x1                   	// #1
     574:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     578:	mov	w1, w20
     57c:	mov	x0, x19
     580:	bl	440 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>
     584:	tst	w0, #0xff
     588:	b.eq	608 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x140>  // b.none
     58c:	ldr	w0, [x19, #24]
     590:	ldr	w3, [x19, #48]
     594:	cmp	w0, w3
     598:	b.cs	65c <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x194>  // b.hs, b.nlast
     59c:	ldr	x1, [x19, #40]
     5a0:	lsr	w2, w0, #6
     5a4:	cmp	x2, x1
     5a8:	b.cs	67c <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x1b4>  // b.hs, b.nlast
     5ac:	ldr	x1, [x19, #32]
     5b0:	cmp	w20, w3
     5b4:	mov	x4, #0x1                   	// #1
     5b8:	lsl	x0, x4, x0
     5bc:	ldr	x3, [x1, x2, lsl #3]
     5c0:	orr	x0, x3, x0
     5c4:	str	x0, [x1, x2, lsl #3]
     5c8:	b.cs	65c <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x194>  // b.hs, b.nlast
     5cc:	ldr	x2, [x19, #40]
     5d0:	lsr	w0, w20, #6
     5d4:	cmp	x0, x2
     5d8:	b.cs	67c <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x1b4>  // b.hs, b.nlast
     5dc:	ldr	x3, [x1, x0, lsl #3]
     5e0:	lsl	x2, x4, x20
     5e4:	bic	x2, x3, x2
     5e8:	str	x2, [x1, x0, lsl #3]
     5ec:	str	w20, [x19, #24]
     5f0:	mov	x0, x21
     5f4:	str	x4, [x21]
     5f8:	ldp	x19, x20, [sp, #16]
     5fc:	ldr	x21, [sp, #32]
     600:	ldp	x29, x30, [sp], #80
     604:	ret
     608:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     60c:	mov	x19, x0
     610:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     614:	add	x1, x1, #0x0
     618:	mov	w2, #0x103                 	// #259
     61c:	mov	x0, #0x40                  	// #64
     620:	stp	x1, xzr, [sp, #56]
     624:	strh	w2, [sp, #72]
     628:	bl	0 <_Znwm>
     62c:	mov	x2, x19
     630:	add	x3, sp, #0x38
     634:	mov	x19, x0
     638:	mov	x1, #0x6                   	// #6
     63c:	b	538 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x70>
     640:	mov	x0, #0x1                   	// #1
     644:	str	x0, [x8]
     648:	mov	x0, x21
     64c:	ldp	x19, x20, [sp, #16]
     650:	ldr	x21, [sp, #32]
     654:	ldp	x29, x30, [sp], #80
     658:	ret
     65c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     660:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     664:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     668:	add	x3, x3, #0x0
     66c:	add	x1, x1, #0x0
     670:	add	x0, x0, #0x0
     674:	mov	w2, #0x1eb                 	// #491
     678:	bl	0 <__assert_fail>
     67c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     680:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     684:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     688:	add	x3, x3, #0x0
     68c:	add	x1, x1, #0x0
     690:	add	x0, x0, #0x0
     694:	mov	w2, #0x1ab                 	// #427
     698:	bl	0 <__assert_fail>
     69c:	nop

00000000000006a0 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE>:
     6a0:	stp	x29, x30, [sp, #-112]!
     6a4:	mov	x29, sp
     6a8:	ldp	x3, x6, [x0, #56]
     6ac:	stp	x19, x20, [sp, #16]
     6b0:	mov	x20, x0
     6b4:	stp	x21, x22, [sp, #32]
     6b8:	mov	x22, x8
     6bc:	mov	x21, x1
     6c0:	stp	x23, x24, [sp, #48]
     6c4:	cmp	x3, x6
     6c8:	stp	x25, x26, [sp, #64]
     6cc:	b.eq	714 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x74>  // b.none
     6d0:	ldr	w7, [x0, #48]
     6d4:	mov	x8, #0x1                   	// #1
     6d8:	ldr	w0, [x3]
     6dc:	cmp	w0, w7
     6e0:	b.cs	88c <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1ec>  // b.hs, b.nlast
     6e4:	ldr	x4, [x20, #40]
     6e8:	lsr	w1, w0, #6
     6ec:	cmp	x1, x4
     6f0:	b.cs	86c <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1cc>  // b.hs, b.nlast
     6f4:	ldr	x5, [x20, #32]
     6f8:	lsl	x0, x8, x0
     6fc:	add	x3, x3, #0x4
     700:	cmp	x6, x3
     704:	ldr	x4, [x5, x1, lsl #3]
     708:	orr	x0, x4, x0
     70c:	str	x0, [x5, x1, lsl #3]
     710:	b.ne	6d8 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x38>  // b.any
     714:	lsl	x26, x2, #2
     718:	mov	x23, x21
     71c:	add	x24, x21, x26
     720:	mov	x25, #0x1                   	// #1
     724:	cmp	x21, x24
     728:	b.ne	76c <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0xcc>  // b.any
     72c:	b	7f0 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x150>
     730:	ldr	w0, [x20, #48]
     734:	cmp	w19, w0
     738:	b.cs	88c <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1ec>  // b.hs, b.nlast
     73c:	ldr	x1, [x20, #40]
     740:	lsr	w0, w19, #6
     744:	cmp	x0, x1
     748:	b.cs	86c <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1cc>  // b.hs, b.nlast
     74c:	ldr	x2, [x20, #32]
     750:	lsl	x19, x25, x19
     754:	add	x23, x23, #0x4
     758:	cmp	x24, x23
     75c:	ldr	x1, [x2, x0, lsl #3]
     760:	bic	x19, x1, x19
     764:	str	x19, [x2, x0, lsl #3]
     768:	b.eq	7f0 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x150>  // b.none
     76c:	ldr	w19, [x23]
     770:	mov	x0, x20
     774:	mov	w1, w19
     778:	bl	440 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>
     77c:	tst	w0, #0xff
     780:	b.ne	730 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x90>  // b.any
     784:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     788:	mov	x19, x0
     78c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     790:	add	x1, x1, #0x0
     794:	mov	w2, #0x103                 	// #259
     798:	mov	x0, #0x40                  	// #64
     79c:	stp	x1, xzr, [sp, #88]
     7a0:	strh	w2, [sp, #104]
     7a4:	bl	0 <_Znwm>
     7a8:	mov	x2, x19
     7ac:	add	x3, sp, #0x58
     7b0:	mov	x19, x0
     7b4:	mov	x1, #0x1                   	// #1
     7b8:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
     7bc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     7c0:	orr	x0, x19, #0x1
     7c4:	str	x0, [x22]
     7c8:	mov	x0, x22
     7cc:	ldr	x1, [x1]
     7d0:	ldp	x21, x22, [sp, #32]
     7d4:	add	x1, x1, #0x10
     7d8:	str	x1, [x19]
     7dc:	ldp	x19, x20, [sp, #16]
     7e0:	ldp	x23, x24, [sp, #48]
     7e4:	ldp	x25, x26, [sp, #64]
     7e8:	ldp	x29, x30, [sp], #112
     7ec:	ret
     7f0:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
     7f4:	asr	x0, x26, #2
     7f8:	cmp	x1, x26, asr #2
     7fc:	b.cc	8ac <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x20c>  // b.lo, b.ul, b.last
     800:	mov	x3, #0x0                   	// #0
     804:	cbz	x0, 814 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x174>
     808:	mov	x0, x26
     80c:	bl	0 <_Znwm>
     810:	mov	x3, x0
     814:	cmp	x21, x24
     818:	add	x19, x3, x26
     81c:	b.eq	834 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x194>  // b.none
     820:	mov	x0, x3
     824:	mov	x2, x26
     828:	mov	x1, x21
     82c:	bl	0 <memcpy>
     830:	mov	x3, x0
     834:	ldr	x0, [x20, #56]
     838:	stp	x3, x19, [x20, #56]
     83c:	str	x19, [x20, #72]
     840:	cbz	x0, 848 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1a8>
     844:	bl	0 <_ZdlPv>
     848:	mov	x0, #0x1                   	// #1
     84c:	str	x0, [x22]
     850:	mov	x0, x22
     854:	ldp	x19, x20, [sp, #16]
     858:	ldp	x21, x22, [sp, #32]
     85c:	ldp	x23, x24, [sp, #48]
     860:	ldp	x25, x26, [sp, #64]
     864:	ldp	x29, x30, [sp], #112
     868:	ret
     86c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     870:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     874:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     878:	add	x3, x3, #0x0
     87c:	add	x1, x1, #0x0
     880:	add	x0, x0, #0x0
     884:	mov	w2, #0x1ab                 	// #427
     888:	bl	0 <__assert_fail>
     88c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     890:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     894:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     898:	add	x3, x3, #0x0
     89c:	add	x1, x1, #0x0
     8a0:	add	x0, x0, #0x0
     8a4:	mov	w2, #0x1eb                 	// #491
     8a8:	bl	0 <__assert_fail>
     8ac:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     8b0:	add	x0, x0, #0x0
     8b4:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000008b8 <_ZNK4llvm3msf10MSFBuilder13getNumStreamsEv>:
     8b8:	ldp	x1, x0, [x0, #80]
     8bc:	sub	x0, x0, x1
     8c0:	ubfx	x0, x0, #5, #32
     8c4:	ret

00000000000008c8 <_ZNK4llvm3msf10MSFBuilder13getStreamSizeEj>:
     8c8:	ldr	x0, [x0, #80]
     8cc:	ubfiz	x1, x1, #5, #32
     8d0:	ldr	w0, [x0, x1]
     8d4:	ret

00000000000008d8 <_ZNK4llvm3msf10MSFBuilder15getStreamBlocksEj>:
     8d8:	ldr	x2, [x0, #80]
     8dc:	ubfiz	x1, x1, #5, #32
     8e0:	add	x2, x2, x1
     8e4:	ldp	x0, x1, [x2, #8]
     8e8:	sub	x1, x1, x0
     8ec:	asr	x1, x1, #2
     8f0:	ret
     8f4:	nop

00000000000008f8 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv>:
     8f8:	ldp	x2, x6, [x0, #80]
     8fc:	mov	x3, x0
     900:	sub	x1, x6, x2
     904:	cmp	x2, x6
     908:	asr	x1, x1, #5
     90c:	lsl	x1, x1, #2
     910:	add	w0, w1, #0x4
     914:	b.eq	96c <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x74>  // b.none
     918:	stp	x29, x30, [sp, #-16]!
     91c:	mov	x29, sp
     920:	ldr	w4, [x3, #20]
     924:	sub	x7, x4, #0x1
     928:	ldr	w1, [x2]
     92c:	cbz	x4, 970 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x78>
     930:	add	x1, x1, x7
     934:	ldp	x5, x3, [x2, #8]
     938:	udiv	x1, x1, x4
     93c:	mul	x1, x1, x4
     940:	sub	x3, x3, x5
     944:	asr	x3, x3, #2
     948:	udiv	x1, x1, x4
     94c:	cmp	x3, w1, uxtw
     950:	b.ne	990 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x98>  // b.any
     954:	add	x2, x2, #0x20
     958:	add	w0, w0, w1, lsl #2
     95c:	cmp	x6, x2
     960:	b.ne	928 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x30>  // b.any
     964:	ldp	x29, x30, [sp], #16
     968:	ret
     96c:	ret
     970:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     974:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     978:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     97c:	add	x3, x3, #0x0
     980:	add	x1, x1, #0x0
     984:	add	x0, x0, #0x0
     988:	mov	w2, #0x2ce                 	// #718
     98c:	bl	0 <__assert_fail>
     990:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     994:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     998:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     99c:	add	x3, x3, #0x0
     9a0:	add	x1, x1, #0x0
     9a4:	add	x0, x0, #0x0
     9a8:	mov	w2, #0xf3                  	// #243
     9ac:	bl	0 <__assert_fail>

00000000000009b0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>:
     9b0:	stp	x29, x30, [sp, #-176]!
     9b4:	mov	x29, sp
     9b8:	str	w1, [sp, #116]
     9bc:	stp	x2, x3, [sp, #120]
     9c0:	str	x8, [sp, #136]
     9c4:	cbnz	w1, 9dc <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2c>
     9c8:	mov	x0, #0x1                   	// #1
     9cc:	str	x0, [x8]
     9d0:	ldr	x0, [sp, #136]
     9d4:	ldp	x29, x30, [sp], #176
     9d8:	ret
     9dc:	ldr	w4, [x0, #48]
     9e0:	stp	x19, x20, [sp, #16]
     9e4:	add	w3, w4, #0x3f
     9e8:	stp	x21, x22, [sp, #32]
     9ec:	cmp	wzr, w3, lsr #6
     9f0:	stp	x23, x24, [sp, #48]
     9f4:	lsr	w3, w3, #6
     9f8:	mov	x23, x0
     9fc:	stp	x25, x26, [sp, #64]
     a00:	stp	x27, x28, [sp, #80]
     a04:	b.eq	fd4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x624>  // b.none
     a08:	ldr	x6, [x23, #40]
     a0c:	mov	x0, #0x0                   	// #0
     a10:	mov	w2, #0x0                   	// #0
     a14:	nop
     a18:	cmp	x0, x6
     a1c:	b.eq	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.none
     a20:	ldr	x1, [x23, #32]
     a24:	ldr	d0, [x1, x0, lsl #3]
     a28:	add	x0, x0, #0x1
     a2c:	cmp	w3, w0
     a30:	cnt	v0.8b, v0.8b
     a34:	addv	b0, v0.8b
     a38:	umov	w1, v0.b[0]
     a3c:	add	w2, w2, w1
     a40:	b.hi	a18 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x68>  // b.pmore
     a44:	ldr	w0, [sp, #116]
     a48:	cmp	w0, w2
     a4c:	b.ls	f28 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x578>  // b.plast
     a50:	ldrb	w0, [x23, #8]
     a54:	cbz	w0, d7c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x3cc>
     a58:	ldr	w3, [x23, #20]
     a5c:	mov	w20, w4
     a60:	ldr	w0, [sp, #116]
     a64:	add	w21, w0, w4
     a68:	sub	w21, w21, w2
     a6c:	cbz	x3, 1074 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x6c4>
     a70:	add	x20, x20, x3
     a74:	add	x28, x23, #0x20
     a78:	sub	x20, x20, #0x1
     a7c:	mov	x0, x28
     a80:	mov	w1, w21
     a84:	mov	w2, #0x1                   	// #1
     a88:	udiv	x20, x20, x3
     a8c:	mul	x20, x20, x3
     a90:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a94:	add	w20, w20, #0x1
     a98:	cmp	w21, w20
     a9c:	b.ls	f24 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x574>  // b.plast
     aa0:	ldr	x26, [x23, #40]
     aa4:	adrp	x19, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     aa8:	add	x19, x19, #0x0
     aac:	mov	x25, #0xffffffffffffffff    	// #-1
     ab0:	mov	w27, w21
     ab4:	add	w21, w21, #0x2
     ab8:	lsl	x0, x26, #6
     abc:	cmp	x0, w21, uxtw
     ac0:	b.cc	e44 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x494>  // b.lo, b.ul, b.last
     ac4:	ldr	w1, [x28, #16]
     ac8:	cmp	w21, w1
     acc:	b.hi	e00 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x450>  // b.pmore
     ad0:	add	w1, w27, #0x41
     ad4:	str	w21, [x28, #16]
     ad8:	lsr	w0, w1, #6
     adc:	lsr	w27, w1, #6
     ae0:	cmp	x26, x0
     ae4:	b.hi	fdc <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x62c>  // b.pmore
     ae8:	mov	w4, w21
     aec:	ands	w0, w4, #0x3f
     af0:	b.eq	b18 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x168>  // b.none
     af4:	ldr	x2, [x23, #40]
     af8:	sub	w1, w27, #0x1
     afc:	lsl	x0, x25, x0
     b00:	cmp	x1, x2
     b04:	b.cs	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.hs, b.nlast
     b08:	ldr	x2, [x23, #32]
     b0c:	ldr	x3, [x2, x1, lsl #3]
     b10:	bic	x0, x3, x0
     b14:	str	x0, [x2, x1, lsl #3]
     b18:	adds	w3, w20, #0x2
     b1c:	b.cs	1034 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x684>  // b.hs, b.nlast
     b20:	cmp	w3, w4
     b24:	b.hi	1054 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x6a4>  // b.pmore
     b28:	lsr	w1, w3, #6
     b2c:	and	w0, w20, #0x3f
     b30:	cmp	w1, w20, lsr #6
     b34:	lsr	w8, w20, #6
     b38:	ldr	x2, [x23, #40]
     b3c:	b.eq	ef4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x544>  // b.none
     b40:	cmp	x2, x8
     b44:	lsl	x1, x25, x0
     b48:	b.ls	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.plast
     b4c:	ldr	x6, [x23, #32]
     b50:	mov	w2, w20
     b54:	add	x2, x2, #0x3f
     b58:	and	x2, x2, #0xffffffffffffffc0
     b5c:	ldr	x9, [x6, x8, lsl #3]
     b60:	add	w0, w2, #0x40
     b64:	cmp	w3, w0
     b68:	bic	x1, x9, x1
     b6c:	str	x1, [x6, x8, lsl #3]
     b70:	b.cs	b7c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x1cc>  // b.hs, b.nlast
     b74:	b	ffc <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x64c>
     b78:	mov	w0, w1
     b7c:	sub	w1, w0, #0x40
     b80:	ldr	x2, [x23, #40]
     b84:	lsr	w1, w1, #6
     b88:	cmp	x1, x2
     b8c:	b.cs	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.hs, b.nlast
     b90:	str	xzr, [x6, x1, lsl #3]
     b94:	add	w1, w0, #0x40
     b98:	cmp	w3, w1
     b9c:	b.cs	b78 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x1c8>  // b.hs, b.nlast
     ba0:	cmp	w3, w0
     ba4:	ldr	x26, [x23, #40]
     ba8:	b.ls	bd4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x224>  // b.plast
     bac:	lsr	w0, w0, #6
     bb0:	cmp	x26, x0
     bb4:	b.ls	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.plast
     bb8:	ldr	x2, [x6, x0, lsl #3]
     bbc:	mov	x1, #0x1                   	// #1
     bc0:	lsl	x3, x1, x3
     bc4:	neg	x3, x3
     bc8:	and	x3, x2, x3
     bcc:	str	x3, [x6, x0, lsl #3]
     bd0:	ldr	x26, [x23, #40]
     bd4:	ldr	w0, [x23, #20]
     bd8:	add	w20, w20, w0
     bdc:	cmp	w21, w20
     be0:	b.hi	ab0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x100>  // b.pmore
     be4:	sub	w4, w4, #0x1
     be8:	mov	x20, #0x0                   	// #0
     bec:	and	w21, w4, #0x3f
     bf0:	add	w22, w21, #0x1
     bf4:	lsr	w28, w4, #6
     bf8:	lsr	w21, w4, #6
     bfc:	nop
     c00:	cmp	x26, x20
     c04:	mov	w19, w20
     c08:	b.eq	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.none
     c0c:	ldr	x25, [x23, #32]
     c10:	ldr	x27, [x25, x20, lsl #3]
     c14:	cbz	x20, df0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x440>
     c18:	cmp	w19, w21
     c1c:	b.eq	c50 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2a0>  // b.none
     c20:	cbnz	x27, c60 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2b0>
     c24:	cmp	x28, x20
     c28:	add	x20, x20, #0x1
     c2c:	b.ne	c00 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x250>  // b.any
     c30:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     c34:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     c38:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     c3c:	add	x3, x3, #0x0
     c40:	add	x1, x1, #0x0
     c44:	add	x0, x0, #0x0
     c48:	mov	w2, #0x86                  	// #134
     c4c:	bl	0 <__assert_fail>
     c50:	mov	w0, w22
     c54:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     c58:	and	x27, x27, x0
     c5c:	cbz	x27, c24 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x274>
     c60:	rbit	x4, x27
     c64:	mov	x21, #0x0                   	// #0
     c68:	clz	x4, x4
     c6c:	add	w4, w4, w19, lsl #6
     c70:	cmn	w4, #0x1
     c74:	b.eq	c30 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x280>  // b.none
     c78:	ldr	x0, [sp, #128]
     c7c:	cmp	x0, x21
     c80:	b.eq	1024 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x674>  // b.none
     c84:	ldr	x0, [sp, #120]
     c88:	ldr	x1, [x23, #40]
     c8c:	str	w4, [x0, x21, lsl #2]
     c90:	lsr	w0, w4, #6
     c94:	cmp	x0, x1
     c98:	b.cs	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.hs, b.nlast
     c9c:	ldr	x3, [x25, x0, lsl #3]
     ca0:	mov	x1, #0x1                   	// #1
     ca4:	ldr	w2, [x23, #48]
     ca8:	lsl	x1, x1, x4
     cac:	bic	x1, x3, x1
     cb0:	str	x1, [x25, x0, lsl #3]
     cb4:	add	w4, w4, #0x1
     cb8:	cmp	w4, w2
     cbc:	b.hi	1004 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x654>  // b.pmore
     cc0:	b.eq	f34 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x584>  // b.none
     cc4:	sub	w26, w2, #0x1
     cc8:	lsr	w22, w4, #6
     ccc:	lsr	w27, w26, #6
     cd0:	cmp	w27, w4, lsr #6
     cd4:	b.cc	f34 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x584>  // b.lo, b.ul, b.last
     cd8:	ldr	x0, [x23, #40]
     cdc:	and	w19, w4, #0x3f
     ce0:	mov	w24, w22
     ce4:	str	x0, [sp, #104]
     ce8:	b	d04 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x354>
     cec:	cmp	w27, w28
     cf0:	b.eq	d38 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x388>  // b.none
     cf4:	cbnz	x20, d4c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x39c>
     cf8:	add	x24, x24, #0x1
     cfc:	cmp	w27, w24
     d00:	b.cc	10c8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x718>  // b.lo, b.ul, b.last
     d04:	ldr	x0, [sp, #104]
     d08:	mov	w28, w24
     d0c:	cmp	x0, x24
     d10:	b.ls	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.plast
     d14:	cmp	w22, w24
     d18:	ldr	x20, [x25, x24, lsl #3]
     d1c:	b.ne	cec <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x33c>  // b.any
     d20:	mov	w0, w19
     d24:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d28:	cmp	w27, w28
     d2c:	bic	x20, x20, x0
     d30:	b.ne	cf4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x344>  // b.any
     d34:	nop
     d38:	and	w0, w26, #0x3f
     d3c:	add	w0, w0, #0x1
     d40:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d44:	ands	x20, x20, x0
     d48:	b.eq	f34 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x584>  // b.none
     d4c:	rbit	x4, x20
     d50:	clz	x4, x4
     d54:	add	w4, w4, w28, lsl #6
     d58:	ldr	w0, [sp, #116]
     d5c:	add	x21, x21, #0x1
     d60:	subs	w0, w0, #0x1
     d64:	str	w0, [sp, #116]
     d68:	b.ne	c70 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2c0>  // b.any
     d6c:	ldr	x1, [sp, #136]
     d70:	mov	x0, #0x1                   	// #1
     d74:	str	x0, [x1]
     d78:	b	dd0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x420>
     d7c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     d80:	mov	x19, x0
     d84:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d88:	add	x1, x1, #0x0
     d8c:	mov	w2, #0x103                 	// #259
     d90:	mov	x0, #0x40                  	// #64
     d94:	stp	x1, xzr, [sp, #152]
     d98:	strh	w2, [sp, #168]
     d9c:	bl	0 <_Znwm>
     da0:	mov	x2, x19
     da4:	mov	x1, #0x2                   	// #2
     da8:	mov	x19, x0
     dac:	add	x3, sp, #0x98
     db0:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
     db4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     db8:	orr	x0, x19, #0x1
     dbc:	ldr	x2, [sp, #136]
     dc0:	ldr	x1, [x1]
     dc4:	str	x0, [x2]
     dc8:	add	x1, x1, #0x10
     dcc:	str	x1, [x19]
     dd0:	ldp	x19, x20, [sp, #16]
     dd4:	ldp	x21, x22, [sp, #32]
     dd8:	ldp	x23, x24, [sp, #48]
     ddc:	ldp	x25, x26, [sp, #64]
     de0:	ldp	x27, x28, [sp, #80]
     de4:	ldr	x0, [sp, #136]
     de8:	ldp	x29, x30, [sp], #176
     dec:	ret
     df0:	mov	w0, #0x0                   	// #0
     df4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     df8:	bic	x27, x27, x0
     dfc:	b	c18 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x268>
     e00:	add	w2, w1, #0x3f
     e04:	lsr	w0, w2, #6
     e08:	lsr	w22, w2, #6
     e0c:	cmp	x26, x0
     e10:	b.hi	f68 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x5b8>  // b.pmore
     e14:	ands	w1, w1, #0x3f
     e18:	b.eq	ad0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x120>  // b.none
     e1c:	sub	w0, w22, #0x1
     e20:	lsl	x1, x25, x1
     e24:	cmp	x26, x0
     e28:	b.ls	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.plast
     e2c:	ldr	x3, [x23, #32]
     e30:	ldr	x2, [x3, x0, lsl #3]
     e34:	orr	x1, x2, x1
     e38:	str	x1, [x3, x0, lsl #3]
     e3c:	ldr	x26, [x23, #40]
     e40:	b	ad0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x120>
     e44:	add	w3, w27, #0x41
     e48:	lsl	x0, x26, #1
     e4c:	lsr	w22, w3, #6
     e50:	cmp	x22, x26, lsl #1
     e54:	b.cc	f60 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x5b0>  // b.lo, b.ul, b.last
     e58:	cbz	x22, 10d0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x720>
     e5c:	ldr	x0, [x23, #32]
     e60:	lsl	x24, x22, #3
     e64:	mov	x1, x24
     e68:	bl	0 <realloc>
     e6c:	mov	x6, x0
     e70:	cbz	x0, 10b4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x704>
     e74:	stp	x6, x22, [x23, #32]
     e78:	ldr	w1, [x28, #16]
     e7c:	add	w2, w1, #0x3f
     e80:	lsr	w0, w2, #6
     e84:	lsr	w24, w2, #6
     e88:	cmp	x22, x0
     e8c:	b.hi	f90 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x5e0>  // b.pmore
     e90:	ands	w2, w1, #0x3f
     e94:	b.eq	ebc <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x50c>  // b.none
     e98:	sub	w0, w24, #0x1
     e9c:	lsl	x2, x25, x2
     ea0:	cmp	x22, x0
     ea4:	b.ls	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.plast
     ea8:	ldr	x3, [x23, #32]
     eac:	ldr	x4, [x3, x0, lsl #3]
     eb0:	bic	x2, x4, x2
     eb4:	str	x2, [x3, x0, lsl #3]
     eb8:	ldr	x22, [x23, #40]
     ebc:	cmp	x22, w26, uxtw
     ec0:	and	x0, x26, #0xffffffff
     ec4:	b.cc	1094 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x6e4>  // b.lo, b.ul, b.last
     ec8:	mov	x26, x22
     ecc:	subs	x2, x22, x0
     ed0:	b.eq	ac8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x118>  // b.none
     ed4:	ldr	x3, [x23, #32]
     ed8:	mov	w1, #0xffffffff            	// #-1
     edc:	lsl	x2, x2, #3
     ee0:	add	x0, x3, x0, lsl #3
     ee4:	bl	0 <memset>
     ee8:	ldr	w1, [x28, #16]
     eec:	ldr	x26, [x23, #40]
     ef0:	b	ac8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x118>
     ef4:	mov	x1, #0x1                   	// #1
     ef8:	cmp	x2, x8
     efc:	lsl	x3, x1, x3
     f00:	lsl	x0, x1, x0
     f04:	sub	x0, x3, x0
     f08:	b.ls	fb4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x604>  // b.plast
     f0c:	ldr	x1, [x23, #32]
     f10:	ldr	x2, [x1, x8, lsl #3]
     f14:	bic	x0, x2, x0
     f18:	str	x0, [x1, x8, lsl #3]
     f1c:	ldr	x26, [x23, #40]
     f20:	b	bd4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x224>
     f24:	ldr	w4, [x28, #16]
     f28:	cbz	w4, c30 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x280>
     f2c:	ldr	x26, [x23, #40]
     f30:	b	be4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x234>
     f34:	ldr	w0, [sp, #116]
     f38:	cmp	w0, #0x1
     f3c:	b.eq	d6c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x3bc>  // b.none
     f40:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f44:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f48:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f4c:	add	x3, x3, #0x0
     f50:	add	x1, x1, #0x0
     f54:	add	x0, x0, #0x0
     f58:	mov	w2, #0x86                  	// #134
     f5c:	bl	0 <__assert_fail>
     f60:	mov	x22, x0
     f64:	b	e5c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x4ac>
     f68:	subs	x2, x26, x0
     f6c:	b.eq	e14 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x464>  // b.none
     f70:	ldr	x4, [x23, #32]
     f74:	mov	w1, #0xffffffff            	// #-1
     f78:	lsl	x2, x2, #3
     f7c:	add	x0, x4, x0, lsl #3
     f80:	bl	0 <memset>
     f84:	ldr	w1, [x28, #16]
     f88:	ldr	x26, [x23, #40]
     f8c:	b	e14 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x464>
     f90:	subs	x2, x22, x0
     f94:	b.eq	e90 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x4e0>  // b.none
     f98:	mov	w1, #0x0                   	// #0
     f9c:	lsl	x2, x2, #3
     fa0:	add	x0, x6, x0, lsl #3
     fa4:	bl	0 <memset>
     fa8:	ldr	w1, [x28, #16]
     fac:	ldr	x22, [x23, #40]
     fb0:	b	e90 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x4e0>
     fb4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     fb8:	add	x3, x3, #0x0
     fbc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     fc0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     fc4:	add	x1, x1, #0x0
     fc8:	add	x0, x0, #0x0
     fcc:	mov	w2, #0x1ab                 	// #427
     fd0:	bl	0 <__assert_fail>
     fd4:	mov	w2, #0x0                   	// #0
     fd8:	b	a44 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x94>
     fdc:	ldr	x3, [x23, #32]
     fe0:	sub	x2, x26, x0
     fe4:	mov	w1, #0x0                   	// #0
     fe8:	lsl	x2, x2, #3
     fec:	add	x0, x3, x0, lsl #3
     ff0:	bl	0 <memset>
     ff4:	ldr	w4, [x28, #16]
     ff8:	b	aec <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x13c>
     ffc:	mov	w0, w2
    1000:	b	ba0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x1f0>
    1004:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1008:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    100c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1010:	add	x3, x3, #0x0
    1014:	add	x1, x1, #0x0
    1018:	add	x0, x0, #0x0
    101c:	mov	w2, #0xd0                  	// #208
    1020:	bl	0 <__assert_fail>
    1024:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1028:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    102c:	add	x3, x3, #0x0
    1030:	b	fc0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x610>
    1034:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1038:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    103c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1040:	add	x3, x3, #0x0
    1044:	add	x1, x1, #0x0
    1048:	add	x0, x0, #0x0
    104c:	mov	w2, #0x1c2                 	// #450
    1050:	bl	0 <__assert_fail>
    1054:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1058:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    105c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1060:	add	x3, x3, #0x0
    1064:	add	x1, x1, #0x0
    1068:	add	x0, x0, #0x0
    106c:	mov	w2, #0x1c3                 	// #451
    1070:	bl	0 <__assert_fail>
    1074:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1078:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    107c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1080:	add	x3, x3, #0x0
    1084:	add	x1, x1, #0x0
    1088:	add	x0, x0, #0x0
    108c:	mov	w2, #0x2ce                 	// #718
    1090:	bl	0 <__assert_fail>
    1094:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1098:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    109c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    10a0:	add	x3, x3, #0x0
    10a4:	add	x1, x1, #0x0
    10a8:	add	x0, x0, #0x0
    10ac:	mov	w2, #0x174                 	// #372
    10b0:	bl	0 <__assert_fail>
    10b4:	cbnz	x24, 10f0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x740>
    10b8:	mov	x0, #0x1                   	// #1
    10bc:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    10c0:	mov	x6, x0
    10c4:	b	e74 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x4c4>
    10c8:	mov	w4, #0xffffffff            	// #-1
    10cc:	b	d58 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x3a8>
    10d0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    10d4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    10d8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    10dc:	add	x3, x3, #0x0
    10e0:	add	x1, x1, #0x0
    10e4:	add	x0, x0, #0x0
    10e8:	mov	w2, #0x376                 	// #886
    10ec:	bl	0 <__assert_fail>
    10f0:	mov	x0, x19
    10f4:	mov	w1, #0x1                   	// #1
    10f8:	str	x6, [sp, #104]
    10fc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1100:	ldr	x6, [sp, #104]
    1104:	b	e74 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x4c4>

0000000000001108 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE>:
    1108:	stp	x29, x30, [sp, #-176]!
    110c:	mov	x29, sp
    1110:	stp	x19, x20, [sp, #16]
    1114:	mov	x20, x0
    1118:	mov	w0, w1
    111c:	ldr	w1, [x20, #20]
    1120:	cbz	x1, 1688 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x580>
    1124:	stp	x25, x26, [sp, #64]
    1128:	mov	x26, x0
    112c:	sub	x0, x0, #0x1
    1130:	add	x0, x0, x1
    1134:	stp	x27, x28, [sp, #80]
    1138:	mov	x27, x8
    113c:	udiv	x0, x0, x1
    1140:	mul	x0, x0, x1
    1144:	udiv	x0, x0, x1
    1148:	cmp	x3, w0, uxtw
    114c:	and	x0, x0, #0xffffffff
    1150:	b.ne	1310 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x208>  // b.any
    1154:	stp	x21, x22, [sp, #32]
    1158:	lsl	x22, x0, #2
    115c:	add	x25, x2, x22
    1160:	mov	x28, x2
    1164:	cmp	x2, x25
    1168:	b.eq	1610 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x508>  // b.none
    116c:	stp	x23, x24, [sp, #48]
    1170:	adrp	x24, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1174:	ldr	w3, [x20, #48]
    1178:	add	x0, x24, #0x0
    117c:	mov	x7, x2
    1180:	mov	x24, x2
    1184:	str	x0, [sp, #128]
    1188:	ldr	x21, [x20, #40]
    118c:	b	11c4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xbc>
    1190:	lsr	w0, w19, #6
    1194:	mov	x23, #0x1                   	// #1
    1198:	cmp	x0, x21
    119c:	mov	x1, x21
    11a0:	lsl	x19, x23, x19
    11a4:	b.cs	1648 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x540>  // b.hs, b.nlast
    11a8:	ldr	x4, [x20, #32]
    11ac:	ldr	x0, [x4, x0, lsl #3]
    11b0:	tst	x19, x0
    11b4:	b.eq	14d4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x3cc>  // b.none
    11b8:	add	x7, x7, #0x4
    11bc:	cmp	x25, x7
    11c0:	b.eq	1250 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x148>  // b.none
    11c4:	ldr	w19, [x7]
    11c8:	cmp	w19, w3
    11cc:	b.cc	1190 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x88>  // b.lo, b.ul, b.last
    11d0:	add	w0, w19, #0x1
    11d4:	add	w4, w19, #0x1
    11d8:	cmp	x0, x21, lsl #6
    11dc:	mov	x1, x21
    11e0:	b.hi	13f8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2f0>  // b.pmore
    11e4:	cmp	w4, w3
    11e8:	b.hi	13b0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2a8>  // b.pmore
    11ec:	add	w2, w19, #0x40
    11f0:	str	w4, [x20, #48]
    11f4:	add	x23, x20, #0x20
    11f8:	lsr	w0, w2, #6
    11fc:	lsr	w21, w2, #6
    1200:	cmp	x1, x0
    1204:	b.hi	15e8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x4e0>  // b.pmore
    1208:	mov	w3, w4
    120c:	ands	w0, w3, #0x3f
    1210:	b.eq	123c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x134>  // b.none
    1214:	ldr	x1, [x20, #40]
    1218:	sub	w2, w21, #0x1
    121c:	mov	x4, #0xffffffffffffffff    	// #-1
    1220:	cmp	x2, x1
    1224:	lsl	x0, x4, x0
    1228:	b.cs	1648 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x540>  // b.hs, b.nlast
    122c:	ldr	x1, [x20, #32]
    1230:	ldr	x4, [x1, x2, lsl #3]
    1234:	bic	x0, x4, x0
    1238:	str	x0, [x1, x2, lsl #3]
    123c:	cmp	w19, w3
    1240:	b.cs	1668 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x560>  // b.hs, b.nlast
    1244:	ldr	x21, [x20, #40]
    1248:	b	1190 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x88>
    124c:	ldr	x1, [x20, #40]
    1250:	ldr	w0, [x24]
    1254:	lsr	w2, w0, #6
    1258:	cmp	x2, x1
    125c:	b.cs	1648 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x540>  // b.hs, b.nlast
    1260:	ldr	x1, [x4, x2, lsl #3]
    1264:	lsl	x0, x23, x0
    1268:	add	x24, x24, #0x4
    126c:	bic	x0, x1, x0
    1270:	str	x0, [x4, x2, lsl #3]
    1274:	cmp	x25, x24
    1278:	b.ne	124c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x144>  // b.any
    127c:	str	w26, [sp, #144]
    1280:	add	x21, x20, #0x50
    1284:	stp	xzr, xzr, [sp, #152]
    1288:	cbz	x22, 1554 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x44c>
    128c:	mov	x0, x22
    1290:	str	xzr, [sp, #168]
    1294:	bl	0 <_Znwm>
    1298:	add	x19, x0, x22
    129c:	str	x0, [sp, #152]
    12a0:	str	x19, [sp, #168]
    12a4:	mov	x2, x22
    12a8:	mov	x1, x28
    12ac:	bl	0 <memcpy>
    12b0:	ldp	x23, x24, [sp, #48]
    12b4:	mov	x0, x21
    12b8:	add	x1, sp, #0x90
    12bc:	str	x19, [sp, #160]
    12c0:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    12c4:	ldr	x0, [sp, #152]
    12c8:	cbz	x0, 12d0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x1c8>
    12cc:	bl	0 <_ZdlPv>
    12d0:	ldp	x2, x0, [x20, #80]
    12d4:	ldrb	w1, [x27, #8]
    12d8:	and	w1, w1, #0xfffffffc
    12dc:	orr	w1, w1, #0x2
    12e0:	strb	w1, [x27, #8]
    12e4:	sub	x0, x0, x2
    12e8:	ldp	x21, x22, [sp, #32]
    12ec:	asr	x0, x0, #5
    12f0:	sub	x0, x0, #0x1
    12f4:	str	w0, [x27]
    12f8:	mov	x0, x27
    12fc:	ldp	x19, x20, [sp, #16]
    1300:	ldp	x25, x26, [sp, #64]
    1304:	ldp	x27, x28, [sp, #80]
    1308:	ldp	x29, x30, [sp], #176
    130c:	ret
    1310:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
    1314:	mov	x19, x0
    1318:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    131c:	add	x1, x1, #0x0
    1320:	mov	w2, #0x103                 	// #259
    1324:	mov	x0, #0x40                  	// #64
    1328:	stp	x1, xzr, [sp, #144]
    132c:	strh	w2, [sp, #160]
    1330:	bl	0 <_Znwm>
    1334:	mov	x2, x19
    1338:	mov	x1, #0x5                   	// #5
    133c:	mov	x19, x0
    1340:	add	x3, sp, #0x90
    1344:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
    1348:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    134c:	ldrb	w1, [x27, #8]
    1350:	ands	x2, x19, #0xfffffffffffffffe
    1354:	ldr	x0, [x0]
    1358:	orr	w1, w1, #0x3
    135c:	strb	w1, [x27, #8]
    1360:	add	x0, x0, #0x10
    1364:	str	x0, [x19]
    1368:	b.ne	1394 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x28c>  // b.any
    136c:	stp	x21, x22, [sp, #32]
    1370:	stp	x23, x24, [sp, #48]
    1374:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1378:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    137c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1380:	add	x3, x3, #0x0
    1384:	add	x1, x1, #0x0
    1388:	add	x0, x0, #0x0
    138c:	mov	w2, #0x1ce                 	// #462
    1390:	bl	0 <__assert_fail>
    1394:	str	x2, [x27]
    1398:	mov	x0, x27
    139c:	ldp	x19, x20, [sp, #16]
    13a0:	ldp	x25, x26, [sp, #64]
    13a4:	ldp	x27, x28, [sp, #80]
    13a8:	ldp	x29, x30, [sp], #176
    13ac:	ret
    13b0:	add	w2, w3, #0x3f
    13b4:	lsr	w0, w2, #6
    13b8:	lsr	w21, w2, #6
    13bc:	cmp	x0, x1
    13c0:	b.cc	156c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x464>  // b.lo, b.ul, b.last
    13c4:	ands	w3, w3, #0x3f
    13c8:	b.eq	11ec <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xe4>  // b.none
    13cc:	sub	w2, w21, #0x1
    13d0:	mov	x0, #0xffffffffffffffff    	// #-1
    13d4:	cmp	x1, x2
    13d8:	lsl	x3, x0, x3
    13dc:	b.ls	1648 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x540>  // b.plast
    13e0:	ldr	x1, [x20, #32]
    13e4:	ldr	x0, [x1, x2, lsl #3]
    13e8:	orr	x3, x0, x3
    13ec:	str	x3, [x1, x2, lsl #3]
    13f0:	ldr	x1, [x20, #40]
    13f4:	b	11ec <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xe4>
    13f8:	add	w1, w19, #0x40
    13fc:	lsl	x0, x21, #1
    1400:	lsr	w23, w1, #6
    1404:	cmp	x23, x21, lsl #1
    1408:	b.cc	1564 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x45c>  // b.lo, b.ul, b.last
    140c:	cbz	x23, 16d8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x5d0>
    1410:	ldr	x0, [x20, #32]
    1414:	lsl	x1, x23, #3
    1418:	str	x1, [sp, #104]
    141c:	str	w4, [sp, #112]
    1420:	str	x7, [sp, #120]
    1424:	bl	0 <realloc>
    1428:	ldr	w4, [sp, #112]
    142c:	mov	x9, x0
    1430:	ldr	x1, [sp, #104]
    1434:	ldr	x7, [sp, #120]
    1438:	cbz	x0, 16f8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x5f0>
    143c:	add	x10, x20, #0x20
    1440:	stp	x9, x23, [x20, #32]
    1444:	ldr	w3, [x10, #16]
    1448:	add	w1, w3, #0x3f
    144c:	lsr	w0, w1, #6
    1450:	lsr	w8, w1, #6
    1454:	cmp	x0, x23
    1458:	b.cc	15a4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x49c>  // b.lo, b.ul, b.last
    145c:	ands	w0, w3, #0x3f
    1460:	b.eq	148c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x384>  // b.none
    1464:	sub	w1, w8, #0x1
    1468:	mov	x2, #0xffffffffffffffff    	// #-1
    146c:	cmp	x1, x23
    1470:	lsl	x0, x2, x0
    1474:	b.cs	1648 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x540>  // b.hs, b.nlast
    1478:	ldr	x2, [x20, #32]
    147c:	ldr	x8, [x2, x1, lsl #3]
    1480:	bic	x0, x8, x0
    1484:	str	x0, [x2, x1, lsl #3]
    1488:	ldr	x23, [x20, #40]
    148c:	cmp	x23, w21, uxtw
    1490:	and	x21, x21, #0xffffffff
    1494:	b.cc	16b8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x5b0>  // b.lo, b.ul, b.last
    1498:	mov	x1, x23
    149c:	subs	x2, x23, x21
    14a0:	b.eq	11e4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xdc>  // b.none
    14a4:	ldr	x0, [x20, #32]
    14a8:	mov	w1, #0xffffffff            	// #-1
    14ac:	lsl	x2, x2, #3
    14b0:	str	w4, [sp, #104]
    14b4:	stp	x7, x10, [sp, #112]
    14b8:	add	x0, x0, x21, lsl #3
    14bc:	bl	0 <memset>
    14c0:	ldp	x7, x10, [sp, #112]
    14c4:	ldr	w4, [sp, #104]
    14c8:	ldr	x1, [x20, #40]
    14cc:	ldr	w3, [x10, #16]
    14d0:	b	11e4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xdc>
    14d4:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
    14d8:	mov	x19, x0
    14dc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    14e0:	add	x1, x1, #0x0
    14e4:	mov	w2, #0x103                 	// #259
    14e8:	mov	x0, #0x40                  	// #64
    14ec:	stp	x1, xzr, [sp, #144]
    14f0:	strh	w2, [sp, #160]
    14f4:	bl	0 <_Znwm>
    14f8:	mov	x2, x19
    14fc:	mov	x1, x23
    1500:	mov	x19, x0
    1504:	add	x3, sp, #0x90
    1508:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
    150c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1510:	ldrb	w1, [x27, #8]
    1514:	ands	x2, x19, #0xfffffffffffffffe
    1518:	ldr	x0, [x0]
    151c:	orr	w1, w1, #0x3
    1520:	strb	w1, [x27, #8]
    1524:	add	x0, x0, #0x10
    1528:	str	x0, [x19]
    152c:	b.eq	1374 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x26c>  // b.none
    1530:	ldp	x21, x22, [sp, #32]
    1534:	mov	x0, x27
    1538:	ldp	x23, x24, [sp, #48]
    153c:	str	x2, [x27]
    1540:	ldp	x19, x20, [sp, #16]
    1544:	ldp	x25, x26, [sp, #64]
    1548:	ldp	x27, x28, [sp, #80]
    154c:	ldp	x29, x30, [sp], #176
    1550:	ret
    1554:	mov	x0, #0x0                   	// #0
    1558:	mov	x19, #0x0                   	// #0
    155c:	str	xzr, [sp, #168]
    1560:	b	12a4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x19c>
    1564:	mov	x23, x0
    1568:	b	1410 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x308>
    156c:	mov	x23, x20
    1570:	sub	x2, x1, x0
    1574:	mov	w1, #0xffffffff            	// #-1
    1578:	str	w4, [sp, #104]
    157c:	lsl	x2, x2, #3
    1580:	str	x7, [sp, #112]
    1584:	ldr	x3, [x23, #32]!
    1588:	add	x0, x3, x0, lsl #3
    158c:	bl	0 <memset>
    1590:	ldr	w3, [x23, #16]
    1594:	ldr	w4, [sp, #104]
    1598:	ldr	x1, [x20, #40]
    159c:	ldr	x7, [sp, #112]
    15a0:	b	13c4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2bc>
    15a4:	subs	x2, x23, x0
    15a8:	b.eq	145c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x354>  // b.none
    15ac:	lsl	x2, x2, #3
    15b0:	add	x0, x9, x0, lsl #3
    15b4:	mov	w1, #0x0                   	// #0
    15b8:	str	w4, [sp, #104]
    15bc:	str	w8, [sp, #112]
    15c0:	str	x7, [sp, #120]
    15c4:	str	x10, [sp, #136]
    15c8:	bl	0 <memset>
    15cc:	ldr	x10, [sp, #136]
    15d0:	ldr	w4, [sp, #104]
    15d4:	ldr	w8, [sp, #112]
    15d8:	ldr	w3, [x10, #16]
    15dc:	ldr	x23, [x20, #40]
    15e0:	ldr	x7, [sp, #120]
    15e4:	b	145c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x354>
    15e8:	ldr	x3, [x20, #32]
    15ec:	sub	x2, x1, x0
    15f0:	mov	w1, #0x0                   	// #0
    15f4:	str	x7, [sp, #104]
    15f8:	lsl	x2, x2, #3
    15fc:	add	x0, x3, x0, lsl #3
    1600:	bl	0 <memset>
    1604:	ldr	w3, [x23, #16]
    1608:	ldr	x7, [sp, #104]
    160c:	b	120c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x104>
    1610:	str	w26, [sp, #144]
    1614:	add	x21, x20, #0x50
    1618:	stp	xzr, xzr, [sp, #152]
    161c:	cbz	x22, 163c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x534>
    1620:	mov	x0, x22
    1624:	str	xzr, [sp, #168]
    1628:	bl	0 <_Znwm>
    162c:	add	x19, x0, x22
    1630:	str	x0, [sp, #152]
    1634:	str	x19, [sp, #168]
    1638:	b	12b4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x1ac>
    163c:	mov	x19, #0x0                   	// #0
    1640:	str	xzr, [sp, #168]
    1644:	b	12b4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x1ac>
    1648:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    164c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1650:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1654:	add	x3, x3, #0x0
    1658:	add	x1, x1, #0x0
    165c:	add	x0, x0, #0x0
    1660:	mov	w2, #0x1ab                 	// #427
    1664:	bl	0 <__assert_fail>
    1668:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    166c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1670:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1674:	add	x3, x3, #0x0
    1678:	add	x1, x1, #0x0
    167c:	add	x0, x0, #0x0
    1680:	mov	w2, #0x1f0                 	// #496
    1684:	bl	0 <__assert_fail>
    1688:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    168c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1690:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1694:	add	x3, x3, #0x0
    1698:	add	x1, x1, #0x0
    169c:	add	x0, x0, #0x0
    16a0:	mov	w2, #0x2ce                 	// #718
    16a4:	stp	x21, x22, [sp, #32]
    16a8:	stp	x23, x24, [sp, #48]
    16ac:	stp	x25, x26, [sp, #64]
    16b0:	stp	x27, x28, [sp, #80]
    16b4:	bl	0 <__assert_fail>
    16b8:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    16bc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    16c0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    16c4:	add	x3, x3, #0x0
    16c8:	add	x1, x1, #0x0
    16cc:	add	x0, x0, #0x0
    16d0:	mov	w2, #0x174                 	// #372
    16d4:	bl	0 <__assert_fail>
    16d8:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    16dc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    16e0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    16e4:	add	x3, x3, #0x0
    16e8:	add	x1, x1, #0x0
    16ec:	add	x0, x0, #0x0
    16f0:	mov	w2, #0x376                 	// #886
    16f4:	bl	0 <__assert_fail>
    16f8:	cbnz	x1, 171c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x614>
    16fc:	mov	x0, #0x1                   	// #1
    1700:	str	w4, [sp, #104]
    1704:	str	x7, [sp, #112]
    1708:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    170c:	ldr	w4, [sp, #104]
    1710:	mov	x9, x0
    1714:	ldr	x7, [sp, #112]
    1718:	b	143c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x334>
    171c:	ldr	x0, [sp, #128]
    1720:	mov	w1, #0x1                   	// #1
    1724:	str	w4, [sp, #104]
    1728:	stp	x9, x7, [sp, #112]
    172c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1730:	ldr	w4, [sp, #104]
    1734:	ldp	x9, x7, [sp, #112]
    1738:	b	143c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x334>
    173c:	nop

0000000000001740 <_ZN4llvm3msf10MSFBuilder9addStreamEj>:
    1740:	stp	x29, x30, [sp, #-128]!
    1744:	mov	x29, sp
    1748:	stp	x21, x22, [sp, #32]
    174c:	mov	x21, x0
    1750:	ldr	w0, [x0, #20]
    1754:	stp	x19, x20, [sp, #16]
    1758:	stp	x23, x24, [sp, #48]
    175c:	cbz	x0, 18c0 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x180>
    1760:	mov	w2, w1
    1764:	stp	xzr, xzr, [sp, #72]
    1768:	sub	x19, x2, #0x1
    176c:	add	x19, x19, x0
    1770:	str	xzr, [sp, #88]
    1774:	mov	x22, x2
    1778:	mov	x20, x8
    177c:	mov	x2, #0x0                   	// #0
    1780:	udiv	x19, x19, x0
    1784:	mul	x19, x19, x0
    1788:	udiv	x19, x19, x0
    178c:	and	x3, x19, #0xffffffff
    1790:	cbnz	w19, 1898 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x158>
    1794:	add	x23, sp, #0x60
    1798:	mov	x0, x21
    179c:	mov	w1, w19
    17a0:	mov	x8, x23
    17a4:	bl	9b0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
    17a8:	ldr	x0, [sp, #96]
    17ac:	ands	x0, x0, #0xfffffffffffffffe
    17b0:	b.ne	1864 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x124>  // b.any
    17b4:	ldp	x1, x0, [sp, #72]
    17b8:	str	w22, [sp, #96]
    17bc:	stp	xzr, xzr, [sp, #104]
    17c0:	add	x24, x21, #0x50
    17c4:	str	xzr, [sp, #120]
    17c8:	sub	x19, x0, x1
    17cc:	cmp	xzr, x19, asr #2
    17d0:	asr	x2, x19, #2
    17d4:	b.eq	18b4 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x174>  // b.none
    17d8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    17dc:	cmp	x2, x0
    17e0:	b.hi	18e0 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x1a0>  // b.pmore
    17e4:	mov	x0, x19
    17e8:	bl	0 <_Znwm>
    17ec:	mov	x3, x0
    17f0:	ldp	x1, x0, [sp, #72]
    17f4:	sub	x22, x0, x1
    17f8:	add	x19, x3, x19
    17fc:	stp	x3, x3, [sp, #104]
    1800:	cmp	x1, x0
    1804:	str	x19, [sp, #120]
    1808:	b.eq	181c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xdc>  // b.none
    180c:	mov	x0, x3
    1810:	mov	x2, x22
    1814:	bl	0 <memmove>
    1818:	mov	x3, x0
    181c:	add	x3, x3, x22
    1820:	mov	x0, x24
    1824:	mov	x1, x23
    1828:	str	x3, [sp, #112]
    182c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1830:	ldr	x0, [sp, #104]
    1834:	cbz	x0, 183c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xfc>
    1838:	bl	0 <_ZdlPv>
    183c:	ldp	x2, x0, [x21, #80]
    1840:	ldrb	w1, [x20, #8]
    1844:	and	w1, w1, #0xfffffffc
    1848:	orr	w1, w1, #0x2
    184c:	strb	w1, [x20, #8]
    1850:	sub	x0, x0, x2
    1854:	asr	x0, x0, #5
    1858:	sub	x0, x0, #0x1
    185c:	str	w0, [x20]
    1860:	b	1874 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x134>
    1864:	ldrb	w1, [x20, #8]
    1868:	str	x0, [x20]
    186c:	orr	w0, w1, #0x3
    1870:	strb	w0, [x20, #8]
    1874:	ldr	x0, [sp, #72]
    1878:	cbz	x0, 1880 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x140>
    187c:	bl	0 <_ZdlPv>
    1880:	mov	x0, x20
    1884:	ldp	x19, x20, [sp, #16]
    1888:	ldp	x21, x22, [sp, #32]
    188c:	ldp	x23, x24, [sp, #48]
    1890:	ldp	x29, x30, [sp], #128
    1894:	ret
    1898:	mov	x1, x3
    189c:	add	x0, sp, #0x48
    18a0:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    18a4:	ldp	x2, x3, [sp, #72]
    18a8:	sub	x3, x3, x2
    18ac:	asr	x3, x3, #2
    18b0:	b	1794 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x54>
    18b4:	mov	x22, x19
    18b8:	mov	x3, #0x0                   	// #0
    18bc:	b	17f8 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xb8>
    18c0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    18c4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    18c8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    18cc:	add	x3, x3, #0x0
    18d0:	add	x1, x1, #0x0
    18d4:	add	x0, x0, #0x0
    18d8:	mov	w2, #0x2ce                 	// #718
    18dc:	bl	0 <__assert_fail>
    18e0:	bl	0 <_ZSt17__throw_bad_allocv>
    18e4:	nop

00000000000018e8 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj>:
    18e8:	stp	x29, x30, [sp, #-112]!
    18ec:	mov	x29, sp
    18f0:	stp	x19, x20, [sp, #16]
    18f4:	mov	w19, w2
    18f8:	mov	x20, x8
    18fc:	stp	x21, x22, [sp, #32]
    1900:	mov	w21, w1
    1904:	stp	x23, x24, [sp, #48]
    1908:	mov	x23, x0
    190c:	bl	8c8 <_ZNK4llvm3msf10MSFBuilder13getStreamSizeEj>
    1910:	cmp	w0, w19
    1914:	b.eq	1968 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x80>  // b.none
    1918:	ldr	w1, [x23, #20]
    191c:	mov	w2, w19
    1920:	cbz	x1, 1b60 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x278>
    1924:	sub	x2, x2, #0x1
    1928:	sub	x3, x1, #0x1
    192c:	add	x2, x2, x1
    1930:	add	x3, x3, w0, uxtw
    1934:	udiv	x2, x2, x1
    1938:	udiv	x3, x3, x1
    193c:	mul	x2, x2, x1
    1940:	mul	x3, x3, x1
    1944:	udiv	x2, x2, x1
    1948:	udiv	x3, x3, x1
    194c:	cmp	w2, w3
    1950:	b.hi	1988 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0xa0>  // b.pmore
    1954:	ldr	x22, [x23, #80]
    1958:	ubfiz	x21, x21, #5, #32
    195c:	add	x22, x22, x21
    1960:	b.cc	19d4 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0xec>  // b.lo, b.ul, b.last
    1964:	str	w19, [x22]
    1968:	mov	x0, #0x1                   	// #1
    196c:	str	x0, [x20]
    1970:	mov	x0, x20
    1974:	ldp	x19, x20, [sp, #16]
    1978:	ldp	x21, x22, [sp, #32]
    197c:	ldp	x23, x24, [sp, #48]
    1980:	ldp	x29, x30, [sp], #112
    1984:	ret
    1988:	stp	xzr, xzr, [sp, #88]
    198c:	subs	w22, w2, w3
    1990:	mov	x3, #0x0                   	// #0
    1994:	str	xzr, [sp, #104]
    1998:	mov	x2, #0x0                   	// #0
    199c:	b.ne	1b04 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x21c>  // b.any
    19a0:	mov	w1, w22
    19a4:	mov	x0, x23
    19a8:	add	x8, sp, #0x50
    19ac:	bl	9b0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
    19b0:	ldr	x0, [sp, #80]
    19b4:	ands	x1, x0, #0xfffffffffffffffe
    19b8:	b.eq	1ac8 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1e0>  // b.none
    19bc:	ldr	x0, [sp, #88]
    19c0:	orr	x1, x1, #0x1
    19c4:	str	x1, [x20]
    19c8:	cbz	x0, 1970 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x88>
    19cc:	bl	0 <_ZdlPv>
    19d0:	b	1970 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x88>
    19d4:	stp	x25, x26, [sp, #64]
    19d8:	and	x0, x2, #0xffffffff
    19dc:	sub	w3, w3, w2
    19e0:	ldp	x25, x7, [x22, #8]
    19e4:	sub	x7, x7, x25
    19e8:	cmp	x0, x7, asr #2
    19ec:	asr	x7, x7, #2
    19f0:	b.hi	1bd0 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x2e8>  // b.pmore
    19f4:	sub	x1, x7, x0
    19f8:	add	x2, x25, x0, lsl #2
    19fc:	add	x1, x2, x1, lsl #2
    1a00:	cmp	x1, x2
    1a04:	b.eq	1a4c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x164>  // b.none
    1a08:	ldr	w9, [x23, #48]
    1a0c:	mov	x8, #0x1                   	// #1
    1a10:	ldr	w0, [x2]
    1a14:	cmp	w0, w9
    1a18:	b.cs	1b40 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x258>  // b.hs, b.nlast
    1a1c:	ldr	x5, [x23, #40]
    1a20:	lsr	w4, w0, #6
    1a24:	cmp	x4, x5
    1a28:	b.cs	1b20 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x238>  // b.hs, b.nlast
    1a2c:	ldr	x6, [x23, #32]
    1a30:	lsl	x0, x8, x0
    1a34:	add	x2, x2, #0x4
    1a38:	cmp	x1, x2
    1a3c:	ldr	x5, [x6, x4, lsl #3]
    1a40:	orr	x0, x5, x0
    1a44:	str	x0, [x6, x4, lsl #3]
    1a48:	b.ne	1a10 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x128>  // b.any
    1a4c:	cmp	x7, w3, uxtw
    1a50:	b.cc	1ba4 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x2bc>  // b.lo, b.ul, b.last
    1a54:	subs	x3, x7, x3
    1a58:	b.cc	1b84 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x29c>  // b.lo, b.ul, b.last
    1a5c:	sbfx	x0, x3, #0, #62
    1a60:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
    1a64:	lsl	x24, x3, #2
    1a68:	cmp	x0, x1
    1a6c:	b.hi	1bc4 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x2dc>  // b.pmore
    1a70:	mov	x3, #0x0                   	// #0
    1a74:	cbz	x0, 1a84 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x19c>
    1a78:	mov	x0, x24
    1a7c:	bl	0 <_Znwm>
    1a80:	mov	x3, x0
    1a84:	add	x26, x3, x24
    1a88:	cbz	x24, 1aa0 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1b8>
    1a8c:	mov	x0, x3
    1a90:	mov	x2, x24
    1a94:	mov	x1, x25
    1a98:	bl	0 <memcpy>
    1a9c:	mov	x3, x0
    1aa0:	ldr	x0, [x22, #8]
    1aa4:	stp	x3, x26, [x22, #8]
    1aa8:	str	x26, [x22, #24]
    1aac:	cbz	x0, 1ab4 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1cc>
    1ab0:	bl	0 <_ZdlPv>
    1ab4:	ldr	x22, [x23, #80]
    1ab8:	ldp	x25, x26, [sp, #64]
    1abc:	add	x22, x22, x21
    1ac0:	str	w19, [x22]
    1ac4:	b	1968 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x80>
    1ac8:	ldr	x1, [x23, #80]
    1acc:	ubfiz	x21, x21, #5, #32
    1ad0:	ldp	x2, x3, [sp, #88]
    1ad4:	add	x1, x1, x21
    1ad8:	add	x0, x1, #0x8
    1adc:	mov	w4, #0x0                   	// #0
    1ae0:	ldr	x1, [x1, #16]
    1ae4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1ae8:	ldr	x0, [sp, #88]
    1aec:	cbz	x0, 1af4 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x20c>
    1af0:	bl	0 <_ZdlPv>
    1af4:	ldr	x22, [x23, #80]
    1af8:	add	x22, x22, x21
    1afc:	str	w19, [x22]
    1b00:	b	1968 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x80>
    1b04:	mov	w1, w22
    1b08:	add	x0, sp, #0x58
    1b0c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b10:	ldp	x2, x3, [sp, #88]
    1b14:	sub	x3, x3, x2
    1b18:	asr	x3, x3, #2
    1b1c:	b	19a0 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0xb8>
    1b20:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b24:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b28:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b2c:	add	x3, x3, #0x0
    1b30:	add	x1, x1, #0x0
    1b34:	add	x0, x0, #0x0
    1b38:	mov	w2, #0x1ab                 	// #427
    1b3c:	bl	0 <__assert_fail>
    1b40:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b44:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b48:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b4c:	add	x3, x3, #0x0
    1b50:	add	x1, x1, #0x0
    1b54:	add	x0, x0, #0x0
    1b58:	mov	w2, #0x1eb                 	// #491
    1b5c:	bl	0 <__assert_fail>
    1b60:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b64:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b68:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b6c:	add	x3, x3, #0x0
    1b70:	add	x1, x1, #0x0
    1b74:	add	x0, x0, #0x0
    1b78:	mov	w2, #0x2ce                 	// #718
    1b7c:	stp	x25, x26, [sp, #64]
    1b80:	bl	0 <__assert_fail>
    1b84:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b88:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b8c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b90:	add	x3, x3, #0x0
    1b94:	add	x1, x1, #0x0
    1b98:	add	x0, x0, #0x0
    1b9c:	mov	w2, #0xbd                  	// #189
    1ba0:	bl	0 <__assert_fail>
    1ba4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1ba8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1bac:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1bb0:	add	x3, x3, #0x0
    1bb4:	add	x1, x1, #0x0
    1bb8:	add	x0, x0, #0x0
    1bbc:	mov	w2, #0xcc                  	// #204
    1bc0:	bl	0 <__assert_fail>
    1bc4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1bc8:	add	x0, x0, #0x0
    1bcc:	bl	0 <_ZSt20__throw_length_errorPKc>
    1bd0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1bd4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1bd8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1bdc:	add	x3, x3, #0x0
    1be0:	add	x1, x1, #0x0
    1be4:	add	x0, x0, #0x0
    1be8:	mov	w2, #0xc6                  	// #198
    1bec:	bl	0 <__assert_fail>

0000000000001bf0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv>:
    1bf0:	stp	x29, x30, [sp, #-240]!
    1bf4:	mov	x29, sp
    1bf8:	stp	x21, x22, [sp, #32]
    1bfc:	ldr	x21, [x0]
    1c00:	stp	x19, x20, [sp, #16]
    1c04:	mov	x19, x8
    1c08:	stp	x27, x28, [sp, #80]
    1c0c:	mov	x27, x0
    1c10:	ldp	x20, x0, [x21]
    1c14:	ldr	x1, [x21, #80]
    1c18:	add	x1, x1, #0x38
    1c1c:	str	x1, [x21, #80]
    1c20:	sub	x0, x0, x20
    1c24:	cmp	x0, #0x37
    1c28:	b.hi	20c0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4d0>  // b.pmore
    1c2c:	stp	x23, x24, [sp, #48]
    1c30:	mov	x1, #0x40000000000         	// #4398046511104
    1c34:	ldr	w23, [x21, #24]
    1c38:	mov	x22, #0x1000                	// #4096
    1c3c:	lsr	w0, w23, #7
    1c40:	cmp	w0, #0x1e
    1c44:	lsl	x22, x22, x0
    1c48:	csel	x22, x22, x1, cc  // cc = lo, ul, last
    1c4c:	mov	x0, x22
    1c50:	bl	0 <malloc>
    1c54:	mov	x20, x0
    1c58:	cbz	x0, 25e0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x9f0>
    1c5c:	ldr	w0, [x21, #28]
    1c60:	cmp	w23, w0
    1c64:	b.cs	2370 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x780>  // b.hs, b.nlast
    1c68:	ldr	x0, [x21, #16]
    1c6c:	str	x20, [x0, w23, uxtw #3]
    1c70:	ldp	w0, w2, [x21, #24]
    1c74:	mov	w1, w0
    1c78:	add	x1, x1, #0x1
    1c7c:	cmp	x1, x2
    1c80:	b.hi	2634 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa44>  // b.pmore
    1c84:	add	x22, x20, x22
    1c88:	add	w0, w0, #0x1
    1c8c:	stp	x20, x22, [x21]
    1c90:	add	x1, x20, #0x38
    1c94:	cmp	x22, x1
    1c98:	str	w0, [x21, #24]
    1c9c:	b.cc	2610 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa20>  // b.lo, b.ul, b.last
    1ca0:	ldp	x23, x24, [sp, #48]
    1ca4:	str	x1, [x21]
    1ca8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1cac:	add	x1, x1, #0x0
    1cb0:	stp	x20, xzr, [sp, #152]
    1cb4:	mov	x0, x27
    1cb8:	str	xzr, [sp, #168]
    1cbc:	str	wzr, [sp, #176]
    1cc0:	stp	xzr, xzr, [sp, #184]
    1cc4:	stp	xzr, xzr, [sp, #200]
    1cc8:	stp	xzr, xzr, [sp, #216]
    1ccc:	str	xzr, [sp, #232]
    1cd0:	ldp	x2, x3, [x1]
    1cd4:	stp	x2, x3, [x20]
    1cd8:	ldp	x2, x3, [x1, #16]
    1cdc:	stp	x2, x3, [x20, #16]
    1ce0:	ldr	w1, [x27, #24]
    1ce4:	str	w1, [x20, #52]
    1ce8:	ldr	w1, [x27, #20]
    1cec:	str	w1, [x20, #32]
    1cf0:	bl	8f8 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv>
    1cf4:	str	w0, [x20, #44]
    1cf8:	ldr	w0, [x27, #12]
    1cfc:	str	w0, [x20, #36]
    1d00:	ldr	w2, [x20, #44]
    1d04:	ldr	w0, [x27, #16]
    1d08:	str	w0, [x20, #48]
    1d0c:	ldr	w1, [x27, #20]
    1d10:	stp	x23, x24, [sp, #48]
    1d14:	cbz	x1, 24bc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x8cc>
    1d18:	sub	x0, x1, #0x1
    1d1c:	add	x0, x0, x2
    1d20:	ldp	x8, x9, [x27, #56]
    1d24:	udiv	x0, x0, x1
    1d28:	mul	x0, x0, x1
    1d2c:	sub	x21, x9, x8
    1d30:	asr	x21, x21, #2
    1d34:	udiv	x0, x0, x1
    1d38:	and	x22, x0, #0xffffffff
    1d3c:	cmp	x22, x21
    1d40:	b.hi	20cc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4dc>  // b.pmore
    1d44:	b.cc	2124 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x534>  // b.lo, b.ul, b.last
    1d48:	ldr	w7, [x27, #48]
    1d4c:	lsl	x23, x22, #2
    1d50:	str	w7, [x20, #40]
    1d54:	ldr	x20, [x27]
    1d58:	ldp	x21, x0, [x20]
    1d5c:	ldr	x1, [x20, #80]
    1d60:	add	x1, x1, x23
    1d64:	str	x1, [x20, #80]
    1d68:	sub	x0, x0, x21
    1d6c:	cmp	x0, x23
    1d70:	b.cs	21d4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5e4>  // b.hs, b.nlast
    1d74:	cmp	x23, #0x1, lsl #12
    1d78:	b.ls	21ec <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5fc>  // b.plast
    1d7c:	mov	x0, x23
    1d80:	bl	0 <malloc>
    1d84:	mov	x21, x0
    1d88:	cbz	x0, 24a8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x8b8>
    1d8c:	ldp	w0, w3, [x20, #72]
    1d90:	cmp	w0, w3
    1d94:	b.cs	2448 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x858>  // b.hs, b.nlast
    1d98:	ldr	x4, [x20, #64]
    1d9c:	ubfiz	x2, x0, #4, #32
    1da0:	mov	w1, w0
    1da4:	add	x6, x4, x2
    1da8:	add	x1, x1, #0x1
    1dac:	str	x21, [x4, x2]
    1db0:	cmp	x1, w3, uxtw
    1db4:	str	x23, [x6, #8]
    1db8:	b.hi	2634 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa44>  // b.pmore
    1dbc:	add	w0, w0, #0x1
    1dc0:	str	w0, [x20, #72]
    1dc4:	ldr	x0, [x27, #56]
    1dc8:	asr	x3, x23, #2
    1dcc:	add	x3, x0, x3, lsl #2
    1dd0:	mov	x1, x21
    1dd4:	nop
    1dd8:	ldr	w2, [x0], #4
    1ddc:	str	w2, [x1], #4
    1de0:	cmp	x0, x3
    1de4:	b.ne	1dd8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1e8>  // b.any
    1de8:	ldp	x2, x3, [x27, #80]
    1dec:	stp	x21, x22, [sp, #184]
    1df0:	cmp	x2, x3
    1df4:	b.eq	1ff4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x404>  // b.none
    1df8:	ldr	x21, [x27]
    1dfc:	sub	x0, x3, x2
    1e00:	stp	x25, x26, [sp, #64]
    1e04:	asr	x0, x0, #5
    1e08:	ldp	x20, x1, [x21]
    1e0c:	lsl	x22, x0, #2
    1e10:	ldr	x4, [x21, #80]
    1e14:	add	x4, x4, x22
    1e18:	str	x4, [x21, #80]
    1e1c:	sub	x1, x1, x20
    1e20:	cmp	x22, x1
    1e24:	b.ls	2350 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x760>  // b.plast
    1e28:	cmp	x22, #0x1, lsl #12
    1e2c:	b.hi	2290 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x6a0>  // b.pmore
    1e30:	ldr	w24, [x21, #24]
    1e34:	mov	x1, #0x40000000000         	// #4398046511104
    1e38:	mov	x23, #0x1000                	// #4096
    1e3c:	lsr	w0, w24, #7
    1e40:	cmp	w0, #0x1e
    1e44:	lsl	x23, x23, x0
    1e48:	csel	x23, x23, x1, cc  // cc = lo, ul, last
    1e4c:	mov	x0, x23
    1e50:	bl	0 <malloc>
    1e54:	mov	x20, x0
    1e58:	cbz	x0, 252c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x93c>
    1e5c:	ldr	w0, [x21, #28]
    1e60:	cmp	w0, w24
    1e64:	b.ls	248c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x89c>  // b.plast
    1e68:	ldr	x0, [x21, #16]
    1e6c:	str	x20, [x0, w24, uxtw #3]
    1e70:	ldp	w0, w2, [x21, #24]
    1e74:	mov	w1, w0
    1e78:	add	x1, x1, #0x1
    1e7c:	cmp	x1, x2
    1e80:	b.hi	2638 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa48>  // b.pmore
    1e84:	add	x23, x20, x23
    1e88:	add	w0, w0, #0x1
    1e8c:	stp	x20, x23, [x21]
    1e90:	add	x22, x22, x20
    1e94:	cmp	x23, x22
    1e98:	str	w0, [x21, #24]
    1e9c:	b.cc	2614 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa24>  // b.lo, b.ul, b.last
    1ea0:	ldp	x2, x3, [x27, #80]
    1ea4:	str	x22, [x21]
    1ea8:	sub	x0, x3, x2
    1eac:	asr	x0, x0, #5
    1eb0:	ldp	x6, x4, [sp, #216]
    1eb4:	stp	x20, x0, [sp, #200]
    1eb8:	sub	x1, x4, x6
    1ebc:	asr	x1, x1, #4
    1ec0:	cmp	x1, x0
    1ec4:	b.cc	235c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x76c>  // b.lo, b.ul, b.last
    1ec8:	b.ls	1edc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2ec>  // b.plast
    1ecc:	add	x0, x6, x0, lsl #4
    1ed0:	cmp	x4, x0
    1ed4:	b.eq	1edc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2ec>  // b.none
    1ed8:	str	x0, [sp, #224]
    1edc:	cmp	x2, x3
    1ee0:	mov	w26, #0x0                   	// #0
    1ee4:	mov	x24, #0x0                   	// #0
    1ee8:	b.eq	1ff0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x400>  // b.none
    1eec:	adrp	x25, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1ef0:	add	x0, x25, #0x0
    1ef4:	str	x0, [sp, #96]
    1ef8:	lsl	x22, x24, #5
    1efc:	add	x0, x2, x22
    1f00:	ldr	w1, [x2, x22]
    1f04:	str	w1, [x20, x24, lsl #2]
    1f08:	ldr	x25, [x27]
    1f0c:	ldp	x2, x21, [x0, #8]
    1f10:	ldp	x28, x0, [x25]
    1f14:	ldr	x1, [x25, #80]
    1f18:	sub	x21, x21, x2
    1f1c:	add	x1, x1, x21
    1f20:	str	x1, [x25, #80]
    1f24:	sub	x0, x0, x28
    1f28:	cmp	x21, x0
    1f2c:	b.ls	240c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x81c>  // b.plast
    1f30:	cmp	x21, #0x1, lsl #12
    1f34:	b.ls	238c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x79c>  // b.plast
    1f38:	mov	x0, x21
    1f3c:	bl	0 <malloc>
    1f40:	mov	x28, x0
    1f44:	cbz	x0, 25a0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x9b0>
    1f48:	ldp	w0, w3, [x25, #72]
    1f4c:	cmp	w0, w3
    1f50:	b.cs	258c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x99c>  // b.hs, b.nlast
    1f54:	ldr	x7, [x25, #64]
    1f58:	ubfiz	x2, x0, #4, #32
    1f5c:	mov	w1, w0
    1f60:	add	x8, x7, x2
    1f64:	add	x1, x1, #0x1
    1f68:	str	x28, [x7, x2]
    1f6c:	cmp	x1, w3, uxtw
    1f70:	str	x21, [x8, #8]
    1f74:	b.hi	2638 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa48>  // b.pmore
    1f78:	add	w0, w0, #0x1
    1f7c:	str	w0, [x25, #72]
    1f80:	ldr	x2, [x27, #80]
    1f84:	add	x22, x2, x22
    1f88:	ldp	x1, x0, [x22, #8]
    1f8c:	sub	x0, x0, x1
    1f90:	cmp	x0, #0x0
    1f94:	asr	x0, x0, #2
    1f98:	b.le	1fc0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3d0>
    1f9c:	mov	x2, x28
    1fa0:	ldr	w3, [x1], #4
    1fa4:	subs	x0, x0, #0x1
    1fa8:	str	w3, [x2], #4
    1fac:	b.ne	1fa0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3b0>  // b.any
    1fb0:	ldp	x1, x0, [x22, #8]
    1fb4:	ldr	x2, [x27, #80]
    1fb8:	sub	x0, x0, x1
    1fbc:	asr	x0, x0, #2
    1fc0:	ldr	x3, [sp, #216]
    1fc4:	lsl	x24, x24, #4
    1fc8:	ldr	x1, [x27, #88]
    1fcc:	add	x4, x3, x24
    1fd0:	str	x28, [x3, x24]
    1fd4:	add	w24, w26, #0x1
    1fd8:	sub	x1, x1, x2
    1fdc:	mov	x26, x24
    1fe0:	str	x0, [x4, #8]
    1fe4:	asr	x0, x1, #5
    1fe8:	cmp	x0, w24, uxtw
    1fec:	b.hi	1ef8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x308>  // b.pmore
    1ff0:	ldp	x25, x26, [sp, #64]
    1ff4:	ldr	x0, [sp, #168]
    1ff8:	ldr	w1, [x27, #48]
    1ffc:	str	w1, [sp, #176]
    2000:	add	w20, w1, #0x3f
    2004:	lsl	x2, x0, #6
    2008:	cmp	x2, w1, uxtw
    200c:	lsr	w20, w20, #6
    2010:	b.cs	22e8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x6f8>  // b.hs, b.nlast
    2014:	cbz	w20, 24f4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x904>
    2018:	ubfiz	x22, x20, #3, #26
    201c:	mov	x0, x22
    2020:	bl	0 <malloc>
    2024:	mov	x21, x0
    2028:	cbz	x0, 24e0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x8f0>
    202c:	ldr	x1, [x27, #32]
    2030:	mov	x2, x22
    2034:	mov	x0, x21
    2038:	bl	0 <memcpy>
    203c:	ldr	x0, [sp, #160]
    2040:	bl	0 <free>
    2044:	stp	x21, x20, [sp, #160]
    2048:	ldr	w1, [sp, #176]
    204c:	ldrb	w0, [x19, #88]
    2050:	mov	x3, x19
    2054:	ldr	x2, [sp, #152]
    2058:	and	w0, w0, #0xfffffffc
    205c:	orr	w0, w0, #0x2
    2060:	strb	w0, [x19, #88]
    2064:	str	x2, [x3], #8
    2068:	add	x2, x19, #0x40
    206c:	ldp	x4, x5, [sp, #160]
    2070:	stp	x4, x5, [x19, #8]
    2074:	mov	x0, #0x0                   	// #0
    2078:	str	w1, [x3, #16]
    207c:	ldp	x1, x3, [sp, #216]
    2080:	str	x1, [x19, #64]
    2084:	ldp	x4, x5, [sp, #184]
    2088:	mov	x1, x2
    208c:	stp	x4, x5, [x19, #32]
    2090:	ldp	x4, x5, [sp, #200]
    2094:	stp	x4, x5, [x19, #48]
    2098:	ldr	x2, [sp, #232]
    209c:	stp	x3, x2, [x1, #8]
    20a0:	bl	0 <free>
    20a4:	mov	x0, x19
    20a8:	ldp	x19, x20, [sp, #16]
    20ac:	ldp	x21, x22, [sp, #32]
    20b0:	ldp	x23, x24, [sp, #48]
    20b4:	ldp	x27, x28, [sp, #80]
    20b8:	ldp	x29, x30, [sp], #240
    20bc:	ret
    20c0:	add	x0, x20, #0x38
    20c4:	str	x0, [x21]
    20c8:	b	1ca8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xb8>
    20cc:	stp	xzr, xzr, [sp, #128]
    20d0:	subs	w21, w0, w21
    20d4:	mov	x3, #0x0                   	// #0
    20d8:	str	xzr, [sp, #144]
    20dc:	mov	x2, #0x0                   	// #0
    20e0:	b.ne	2274 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x684>  // b.any
    20e4:	mov	w1, w21
    20e8:	mov	x0, x27
    20ec:	add	x8, sp, #0x78
    20f0:	bl	9b0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
    20f4:	ldr	x0, [sp, #120]
    20f8:	ands	x1, x0, #0xfffffffffffffffe
    20fc:	b.ne	21a4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5b4>  // b.any
    2100:	ldp	x2, x3, [sp, #128]
    2104:	add	x0, x27, #0x38
    2108:	ldr	x1, [x27, #64]
    210c:	mov	w4, #0x0                   	// #0
    2110:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2114:	ldr	x0, [sp, #128]
    2118:	cbz	x0, 1d48 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x158>
    211c:	bl	0 <_ZdlPv>
    2120:	b	1d48 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x158>
    2124:	sub	w0, w21, w0
    2128:	cmp	x0, x21
    212c:	b.hi	2658 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa68>  // b.pmore
    2130:	subs	x0, x21, x0
    2134:	b.cc	2568 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x978>  // b.lo, b.ul, b.last
    2138:	add	x1, x8, x0, lsl #2
    213c:	ldr	w7, [x27, #48]
    2140:	mov	x2, x8
    2144:	cmp	x8, x1
    2148:	mov	x10, #0x1                   	// #1
    214c:	b.eq	218c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x59c>  // b.none
    2150:	ldr	w0, [x2]
    2154:	cmp	w0, w7
    2158:	b.cs	2544 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x954>  // b.hs, b.nlast
    215c:	ldr	x4, [x27, #40]
    2160:	lsr	w3, w0, #6
    2164:	cmp	x3, x4
    2168:	b.cs	267c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa8c>  // b.hs, b.nlast
    216c:	ldr	x6, [x27, #32]
    2170:	lsl	x0, x10, x0
    2174:	add	x2, x2, #0x4
    2178:	cmp	x1, x2
    217c:	ldr	x4, [x6, x3, lsl #3]
    2180:	orr	x0, x4, x0
    2184:	str	x0, [x6, x3, lsl #3]
    2188:	b.ne	2150 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x560>  // b.any
    218c:	lsl	x23, x22, #2
    2190:	add	x8, x8, x23
    2194:	cmp	x9, x8
    2198:	b.eq	1d50 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x160>  // b.none
    219c:	str	x8, [x27, #64]
    21a0:	b	1d50 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x160>
    21a4:	str	x1, [x19]
    21a8:	ldrb	w1, [x19, #88]
    21ac:	ldr	x0, [sp, #128]
    21b0:	orr	w1, w1, #0x3
    21b4:	strb	w1, [x19, #88]
    21b8:	cbz	x0, 21c0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5d0>
    21bc:	bl	0 <_ZdlPv>
    21c0:	ldr	x0, [sp, #216]
    21c4:	cbz	x0, 21cc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5dc>
    21c8:	bl	0 <_ZdlPv>
    21cc:	ldr	x0, [sp, #160]
    21d0:	b	20a0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4b0>
    21d4:	add	x0, x21, x23
    21d8:	str	x0, [x20]
    21dc:	asr	x3, x23, #2
    21e0:	ldr	x0, [x27, #56]
    21e4:	cbnz	x23, 1dcc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1dc>
    21e8:	b	1de8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1f8>
    21ec:	stp	x25, x26, [sp, #64]
    21f0:	mov	x1, #0x40000000000         	// #4398046511104
    21f4:	ldr	w25, [x20, #24]
    21f8:	mov	x24, #0x1000                	// #4096
    21fc:	lsr	w0, w25, #7
    2200:	cmp	w0, #0x1e
    2204:	lsl	x24, x24, x0
    2208:	csel	x24, x24, x1, cc  // cc = lo, ul, last
    220c:	mov	x0, x24
    2210:	bl	0 <malloc>
    2214:	mov	x21, x0
    2218:	cbz	x0, 25f8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa08>
    221c:	ldr	w0, [x20, #28]
    2220:	cmp	w25, w0
    2224:	b.cs	245c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x86c>  // b.hs, b.nlast
    2228:	ldr	x0, [x20, #16]
    222c:	str	x21, [x0, w25, uxtw #3]
    2230:	ldp	w0, w2, [x20, #24]
    2234:	mov	w1, w0
    2238:	add	x1, x1, #0x1
    223c:	cmp	x1, x2
    2240:	b.hi	2638 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa48>  // b.pmore
    2244:	add	x24, x21, x24
    2248:	add	w0, w0, #0x1
    224c:	stp	x21, x24, [x20]
    2250:	add	x1, x21, x23
    2254:	cmp	x24, x1
    2258:	str	w0, [x20, #24]
    225c:	b.cc	2614 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa24>  // b.lo, b.ul, b.last
    2260:	asr	x3, x23, #2
    2264:	ldr	x0, [x27, #56]
    2268:	ldp	x25, x26, [sp, #64]
    226c:	str	x1, [x20]
    2270:	b	1dcc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1dc>
    2274:	mov	w1, w21
    2278:	add	x0, sp, #0x80
    227c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2280:	ldp	x2, x3, [sp, #128]
    2284:	sub	x3, x3, x2
    2288:	asr	x3, x3, #2
    228c:	b	20e4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4f4>
    2290:	mov	x0, x22
    2294:	bl	0 <malloc>
    2298:	mov	x20, x0
    229c:	cbz	x0, 2518 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x928>
    22a0:	ldp	w0, w3, [x21, #72]
    22a4:	cmp	w0, w3
    22a8:	b.cs	2478 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x888>  // b.hs, b.nlast
    22ac:	ldr	x4, [x21, #64]
    22b0:	ubfiz	x2, x0, #4, #32
    22b4:	mov	w1, w0
    22b8:	add	x6, x4, x2
    22bc:	add	x1, x1, #0x1
    22c0:	str	x20, [x4, x2]
    22c4:	cmp	x1, w3, uxtw
    22c8:	str	x22, [x6, #8]
    22cc:	b.hi	2638 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa48>  // b.pmore
    22d0:	ldp	x2, x3, [x27, #80]
    22d4:	add	w0, w0, #0x1
    22d8:	str	w0, [x21, #72]
    22dc:	sub	x0, x3, x2
    22e0:	asr	x0, x0, #5
    22e4:	b	1eb0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2c0>
    22e8:	mov	w3, w20
    22ec:	cbnz	w1, 2418 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x828>
    22f0:	cmp	x0, x3
    22f4:	b.ls	204c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x45c>  // b.plast
    22f8:	subs	x2, x0, x3
    22fc:	b.ne	2338 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x748>  // b.any
    2300:	ldr	w1, [sp, #176]
    2304:	ands	w2, w1, #0x3f
    2308:	b.eq	204c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x45c>  // b.none
    230c:	ldr	x3, [sp, #168]
    2310:	sub	w20, w20, #0x1
    2314:	mov	x0, #0xffffffffffffffff    	// #-1
    2318:	cmp	x20, x3
    231c:	lsl	x0, x0, x2
    2320:	b.cs	267c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa8c>  // b.hs, b.nlast
    2324:	ldr	x2, [sp, #160]
    2328:	ldr	x3, [x2, x20, lsl #3]
    232c:	bic	x0, x3, x0
    2330:	str	x0, [x2, x20, lsl #3]
    2334:	b	204c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x45c>
    2338:	ldr	x0, [sp, #160]
    233c:	lsl	x2, x2, #3
    2340:	mov	w1, #0x0                   	// #0
    2344:	add	x0, x0, x3, lsl #3
    2348:	bl	0 <memset>
    234c:	b	2300 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x710>
    2350:	add	x22, x20, x22
    2354:	str	x22, [x21]
    2358:	b	1eb0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2c0>
    235c:	sub	x1, x0, x1
    2360:	add	x0, sp, #0xd8
    2364:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2368:	ldp	x2, x3, [x27, #80]
    236c:	b	1edc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2ec>
    2370:	add	x1, x21, #0x20
    2374:	add	x0, x21, #0x10
    2378:	mov	x3, #0x8                   	// #8
    237c:	mov	x2, #0x0                   	// #0
    2380:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2384:	ldr	w23, [x21, #24]
    2388:	b	1c68 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x78>
    238c:	ldr	w1, [x25, #24]
    2390:	str	w1, [sp, #108]
    2394:	lsr	w0, w1, #7
    2398:	mov	x1, #0x1000                	// #4096
    239c:	cmp	w0, #0x1e
    23a0:	lsl	x0, x1, x0
    23a4:	mov	x1, #0x40000000000         	// #4398046511104
    23a8:	csel	x23, x0, x1, cc  // cc = lo, ul, last
    23ac:	mov	x0, x23
    23b0:	bl	0 <malloc>
    23b4:	ldr	w1, [sp, #108]
    23b8:	mov	x28, x0
    23bc:	cbz	x0, 25cc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x9dc>
    23c0:	ldr	w0, [x25, #28]
    23c4:	cmp	w0, w1
    23c8:	b.ls	25b0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x9c0>  // b.plast
    23cc:	ldr	x0, [x25, #16]
    23d0:	str	x28, [x0, w1, uxtw #3]
    23d4:	ldp	w0, w2, [x25, #24]
    23d8:	mov	w1, w0
    23dc:	add	x1, x1, #0x1
    23e0:	cmp	x1, x2
    23e4:	b.hi	2638 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa48>  // b.pmore
    23e8:	add	x23, x28, x23
    23ec:	add	w0, w0, #0x1
    23f0:	stp	x28, x23, [x25]
    23f4:	add	x21, x21, x28
    23f8:	cmp	x23, x21
    23fc:	str	w0, [x25, #24]
    2400:	b.cc	2614 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa24>  // b.lo, b.ul, b.last
    2404:	str	x21, [x25]
    2408:	b	1f80 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x390>
    240c:	add	x21, x28, x21
    2410:	str	x21, [x25]
    2414:	b	1f80 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x390>
    2418:	ldr	x1, [x27, #32]
    241c:	lsl	x2, x3, #3
    2420:	ldr	x0, [sp, #160]
    2424:	bl	0 <memcpy>
    2428:	ldr	w1, [sp, #176]
    242c:	ldr	x0, [sp, #168]
    2430:	add	w20, w1, #0x3f
    2434:	lsr	w3, w20, #6
    2438:	lsr	w20, w20, #6
    243c:	cmp	x0, x3
    2440:	b.ls	2304 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x714>  // b.plast
    2444:	b	22f8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x708>
    2448:	add	x0, x20, #0x40
    244c:	mov	x1, #0x0                   	// #0
    2450:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2454:	ldp	w0, w3, [x20, #72]
    2458:	b	1d98 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1a8>
    245c:	add	x1, x20, #0x20
    2460:	add	x0, x20, #0x10
    2464:	mov	x3, #0x8                   	// #8
    2468:	mov	x2, #0x0                   	// #0
    246c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2470:	ldr	w25, [x20, #24]
    2474:	b	2228 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x638>
    2478:	add	x0, x21, #0x40
    247c:	mov	x1, #0x0                   	// #0
    2480:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2484:	ldp	w0, w3, [x21, #72]
    2488:	b	22ac <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x6bc>
    248c:	add	x1, x21, #0x20
    2490:	add	x0, x21, #0x10
    2494:	mov	x3, #0x8                   	// #8
    2498:	mov	x2, #0x0                   	// #0
    249c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    24a0:	ldr	w24, [x21, #24]
    24a4:	b	1e68 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x278>
    24a8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    24ac:	mov	w1, #0x1                   	// #1
    24b0:	add	x0, x0, #0x0
    24b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    24b8:	b	1d8c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x19c>
    24bc:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    24c0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    24c4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    24c8:	add	x3, x3, #0x0
    24cc:	add	x1, x1, #0x0
    24d0:	add	x0, x0, #0x0
    24d4:	mov	w2, #0x2ce                 	// #718
    24d8:	stp	x25, x26, [sp, #64]
    24dc:	bl	0 <__assert_fail>
    24e0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    24e4:	mov	w1, #0x1                   	// #1
    24e8:	add	x0, x0, #0x0
    24ec:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    24f0:	b	202c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x43c>
    24f4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    24f8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    24fc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2500:	add	x3, x3, #0x0
    2504:	add	x1, x1, #0x0
    2508:	add	x0, x0, #0x0
    250c:	mov	w2, #0x2dc                 	// #732
    2510:	stp	x25, x26, [sp, #64]
    2514:	bl	0 <__assert_fail>
    2518:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    251c:	mov	w1, #0x1                   	// #1
    2520:	add	x0, x0, #0x0
    2524:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2528:	b	22a0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x6b0>
    252c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2530:	mov	w1, #0x1                   	// #1
    2534:	add	x0, x0, #0x0
    2538:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    253c:	ldr	w24, [x21, #24]
    2540:	b	1e5c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x26c>
    2544:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2548:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    254c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2550:	add	x3, x3, #0x0
    2554:	add	x1, x1, #0x0
    2558:	add	x0, x0, #0x0
    255c:	mov	w2, #0x1eb                 	// #491
    2560:	stp	x25, x26, [sp, #64]
    2564:	bl	0 <__assert_fail>
    2568:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    256c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2570:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2574:	add	x3, x3, #0x0
    2578:	add	x1, x1, #0x0
    257c:	add	x0, x0, #0x0
    2580:	mov	w2, #0xbd                  	// #189
    2584:	stp	x25, x26, [sp, #64]
    2588:	bl	0 <__assert_fail>
    258c:	add	x0, x25, #0x40
    2590:	mov	x1, #0x0                   	// #0
    2594:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2598:	ldp	w0, w3, [x25, #72]
    259c:	b	1f54 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x364>
    25a0:	ldr	x0, [sp, #96]
    25a4:	mov	w1, #0x1                   	// #1
    25a8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    25ac:	b	1f48 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x358>
    25b0:	add	x1, x25, #0x20
    25b4:	add	x0, x25, #0x10
    25b8:	mov	x3, #0x8                   	// #8
    25bc:	mov	x2, #0x0                   	// #0
    25c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    25c4:	ldr	w1, [x25, #24]
    25c8:	b	23cc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x7dc>
    25cc:	ldr	x0, [sp, #96]
    25d0:	mov	w1, #0x1                   	// #1
    25d4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    25d8:	ldr	w1, [x25, #24]
    25dc:	b	23c0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x7d0>
    25e0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    25e4:	mov	w1, #0x1                   	// #1
    25e8:	add	x0, x0, #0x0
    25ec:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    25f0:	ldr	w23, [x21, #24]
    25f4:	b	1c5c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x6c>
    25f8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    25fc:	mov	w1, #0x1                   	// #1
    2600:	add	x0, x0, #0x0
    2604:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2608:	ldr	w25, [x20, #24]
    260c:	b	221c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x62c>
    2610:	stp	x25, x26, [sp, #64]
    2614:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2618:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    261c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2620:	add	x3, x3, #0x0
    2624:	add	x1, x1, #0x0
    2628:	add	x0, x0, #0x0
    262c:	mov	w2, #0x105                 	// #261
    2630:	bl	0 <__assert_fail>
    2634:	stp	x25, x26, [sp, #64]
    2638:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    263c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2640:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2644:	add	x3, x3, #0x0
    2648:	add	x1, x1, #0x0
    264c:	add	x0, x0, #0x0
    2650:	mov	w2, #0x43                  	// #67
    2654:	bl	0 <__assert_fail>
    2658:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    265c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2660:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2664:	add	x3, x3, #0x0
    2668:	add	x1, x1, #0x0
    266c:	add	x0, x0, #0x0
    2670:	mov	w2, #0xcc                  	// #204
    2674:	stp	x25, x26, [sp, #64]
    2678:	bl	0 <__assert_fail>
    267c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2680:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2684:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2688:	add	x3, x3, #0x0
    268c:	add	x1, x1, #0x0
    2690:	add	x0, x0, #0x0
    2694:	mov	w2, #0x1ab                 	// #427
    2698:	stp	x25, x26, [sp, #64]
    269c:	bl	0 <__assert_fail>

00000000000026a0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE>:
    26a0:	sub	sp, sp, #0x210
    26a4:	stp	x29, x30, [sp]
    26a8:	mov	x29, sp
    26ac:	stp	x21, x22, [sp, #32]
    26b0:	add	x21, sp, #0x1b0
    26b4:	stp	x19, x20, [sp, #16]
    26b8:	mov	x20, x0
    26bc:	mov	x19, x8
    26c0:	mov	x8, x21
    26c4:	stp	x23, x24, [sp, #48]
    26c8:	mov	x24, x2
    26cc:	stp	x25, x26, [sp, #64]
    26d0:	mov	x25, x1
    26d4:	mov	x26, x3
    26d8:	bl	1bf0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv>
    26dc:	ldrb	w0, [sp, #520]
    26e0:	and	w1, w0, #0x1
    26e4:	bfi	w0, w1, #1, #1
    26e8:	strb	w0, [sp, #520]
    26ec:	cbz	w1, 2740 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa0>
    26f0:	ldrb	w2, [x19, #72]
    26f4:	and	w0, w0, #0xfffffffd
    26f8:	ldr	x1, [sp, #432]
    26fc:	orr	w2, w2, #0x3
    2700:	strb	w2, [x19, #72]
    2704:	str	xzr, [sp, #432]
    2708:	ands	x1, x1, #0xfffffffffffffffe
    270c:	strb	w0, [sp, #520]
    2710:	b.eq	2d44 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6a4>  // b.none
    2714:	str	x1, [x19]
    2718:	mov	x0, x21
    271c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2720:	mov	x0, x19
    2724:	ldp	x29, x30, [sp]
    2728:	ldp	x19, x20, [sp, #16]
    272c:	ldp	x21, x22, [sp, #32]
    2730:	ldp	x23, x24, [sp, #48]
    2734:	ldp	x25, x26, [sp, #64]
    2738:	add	sp, sp, #0x210
    273c:	ret
    2740:	mov	x22, x26
    2744:	ldr	x0, [sp, #432]
    2748:	str	x0, [x26]
    274c:	ldr	x0, [x22, #8]!
    2750:	bl	0 <free>
    2754:	add	x0, sp, #0x220
    2758:	ldp	x2, x3, [x0, #-104]
    275c:	stp	x2, x3, [x26, #8]
    2760:	ldr	w0, [sp, #456]
    2764:	str	w0, [x22, #16]
    2768:	ldp	x2, x3, [sp, #464]
    276c:	stp	x2, x3, [x26, #32]
    2770:	ldp	x2, x3, [sp, #480]
    2774:	stp	x2, x3, [x26, #48]
    2778:	ldp	x2, x3, [sp, #496]
    277c:	stp	xzr, xzr, [sp, #440]
    2780:	ldr	x0, [x26, #64]
    2784:	stp	x2, x3, [x26, #64]
    2788:	ldr	x2, [sp, #512]
    278c:	str	x2, [x26, #80]
    2790:	str	wzr, [sp, #456]
    2794:	stp	xzr, xzr, [sp, #496]
    2798:	str	xzr, [sp, #512]
    279c:	cbz	x0, 27a4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x104>
    27a0:	bl	0 <_ZdlPv>
    27a4:	ldr	x5, [x26]
    27a8:	add	x23, sp, #0x98
    27ac:	mov	x0, x25
    27b0:	mov	x1, x24
    27b4:	mov	x8, x23
    27b8:	mov	w3, #0x0                   	// #0
    27bc:	ldr	w2, [x5, #32]
    27c0:	ldr	w5, [x5, #40]
    27c4:	mul	w2, w5, w2
    27c8:	bl	0 <_ZN4llvm16FileOutputBuffer6createENS_9StringRefEmj>
    27cc:	ldrb	w0, [sp, #160]
    27d0:	and	w0, w0, #0xfffffffd
    27d4:	strb	w0, [sp, #160]
    27d8:	tbz	w0, #0, 2808 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x168>
    27dc:	ldr	x0, [sp, #152]
    27e0:	str	xzr, [sp, #152]
    27e4:	ands	x0, x0, #0xfffffffffffffffe
    27e8:	b.eq	2d20 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x680>  // b.none
    27ec:	ldrb	w1, [x19, #72]
    27f0:	str	x0, [x19]
    27f4:	orr	w0, w1, #0x3
    27f8:	strb	w0, [x19, #72]
    27fc:	mov	x0, x23
    2800:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2804:	b	2718 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x78>
    2808:	stp	x27, x28, [sp, #80]
    280c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2810:	add	x27, sp, #0xf8
    2814:	ldr	x28, [sp, #152]
    2818:	add	x24, sp, #0x130
    281c:	ldr	x1, [x0]
    2820:	mov	x0, x28
    2824:	ldr	x2, [x28]
    2828:	add	x1, x1, #0x10
    282c:	str	x1, [sp, #360]
    2830:	add	x1, sp, #0x168
    2834:	str	x1, [sp, #96]
    2838:	ldr	x1, [x2]
    283c:	str	xzr, [sp, #152]
    2840:	blr	x1
    2844:	mov	x25, x0
    2848:	ldr	x1, [x28]
    284c:	mov	x0, x28
    2850:	ldr	x1, [x1, #8]
    2854:	blr	x1
    2858:	sub	x3, x0, x25
    285c:	adrp	x2, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2860:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2864:	ldr	x1, [sp, #96]
    2868:	mov	w7, #0x1                   	// #1
    286c:	ldr	x5, [x2]
    2870:	str	w7, [sp, #400]
    2874:	ldr	x6, [x0]
    2878:	add	x5, x5, #0x10
    287c:	mov	x0, x27
    2880:	stp	x3, x5, [sp, #384]
    2884:	add	x6, x6, #0x10
    2888:	stp	x6, x25, [sp, #368]
    288c:	stp	x25, x3, [sp, #408]
    2890:	str	x28, [sp, #424]
    2894:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    2898:	ldr	x1, [x26]
    289c:	mov	x0, x27
    28a0:	mov	x8, x24
    28a4:	mov	x2, #0x38                  	// #56
    28a8:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    28ac:	ldr	x0, [sp, #304]
    28b0:	ands	x0, x0, #0xfffffffffffffffe
    28b4:	b.ne	2c98 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x5f8>  // b.any
    28b8:	ldr	x1, [sp, #96]
    28bc:	mov	x0, x24
    28c0:	ldr	x25, [x20]
    28c4:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    28c8:	mov	x2, x25
    28cc:	add	x8, sp, #0x88
    28d0:	mov	x1, x24
    28d4:	mov	x0, x26
    28d8:	mov	w3, #0x0                   	// #0
    28dc:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>
    28e0:	ldr	x28, [sp, #312]
    28e4:	cbz	x28, 2960 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2c0>
    28e8:	adrp	x1, 0 <__pthread_key_create>
    28ec:	ldr	x0, [x1]
    28f0:	cbz	x0, 2d68 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6c8>
    28f4:	add	x2, x28, #0x8
    28f8:	ldaxr	w0, [x2]
    28fc:	sub	w3, w0, #0x1
    2900:	stlxr	w4, w3, [x2]
    2904:	cbnz	w4, 28f8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x258>
    2908:	cmp	w0, #0x1
    290c:	b.ne	2960 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2c0>  // b.any
    2910:	ldr	x2, [x28]
    2914:	str	x1, [sp, #104]
    2918:	mov	x0, x28
    291c:	ldr	x2, [x2, #16]
    2920:	blr	x2
    2924:	ldr	x1, [sp, #104]
    2928:	ldr	x1, [x1]
    292c:	cbz	x1, 2fa0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x900>
    2930:	add	x1, x28, #0xc
    2934:	ldaxr	w0, [x1]
    2938:	sub	w2, w0, #0x1
    293c:	stlxr	w3, w2, [x1]
    2940:	cbnz	w3, 2934 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x294>
    2944:	cmp	w0, #0x1
    2948:	b.ne	2960 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2c0>  // b.any
    294c:	ldr	x1, [x28]
    2950:	mov	x0, x28
    2954:	ldr	x1, [x1, #24]
    2958:	blr	x1
    295c:	nop
    2960:	ldr	x1, [sp, #96]
    2964:	add	x2, sp, #0xc8
    2968:	mov	x28, x2
    296c:	mov	x0, x24
    2970:	str	x2, [sp, #120]
    2974:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    2978:	mov	x0, x26
    297c:	mov	x2, x25
    2980:	mov	x8, x28
    2984:	mov	x1, x24
    2988:	mov	w3, #0x1                   	// #1
    298c:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>
    2990:	ldr	x0, [sp, #200]
    2994:	cbz	x0, 29a4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x304>
    2998:	ldr	x1, [x0]
    299c:	ldr	x1, [x1, #8]
    29a0:	blr	x1
    29a4:	ldr	x25, [sp, #312]
    29a8:	cbz	x25, 2a20 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x380>
    29ac:	adrp	x1, 0 <__pthread_key_create>
    29b0:	ldr	x2, [x1]
    29b4:	cbz	x2, 2d78 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6d8>
    29b8:	add	x3, x25, #0x8
    29bc:	ldaxr	w2, [x3]
    29c0:	sub	w0, w2, #0x1
    29c4:	stlxr	w4, w0, [x3]
    29c8:	cbnz	w4, 29bc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x31c>
    29cc:	cmp	w2, #0x1
    29d0:	b.ne	2a20 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x380>  // b.any
    29d4:	ldr	x2, [x25]
    29d8:	str	x1, [sp, #104]
    29dc:	mov	x0, x25
    29e0:	ldr	x2, [x2, #16]
    29e4:	blr	x2
    29e8:	ldr	x1, [sp, #104]
    29ec:	ldr	x1, [x1]
    29f0:	cbz	x1, 2fb0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x910>
    29f4:	add	x2, x25, #0xc
    29f8:	ldaxr	w1, [x2]
    29fc:	sub	w0, w1, #0x1
    2a00:	stlxr	w3, w0, [x2]
    2a04:	cbnz	w3, 29f8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x358>
    2a08:	cmp	w1, #0x1
    2a0c:	b.ne	2a20 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x380>  // b.any
    2a10:	ldr	x1, [x25]
    2a14:	mov	x0, x25
    2a18:	ldr	x1, [x1, #24]
    2a1c:	blr	x1
    2a20:	ldr	x1, [sp, #136]
    2a24:	mov	x0, x24
    2a28:	mov	w28, #0x0                   	// #0
    2a2c:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    2a30:	ldr	x0, [x26]
    2a34:	add	x6, x0, #0x28
    2a38:	ldr	w0, [x0, #40]
    2a3c:	cbz	w0, 2bc0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x520>
    2a40:	add	x1, sp, #0x87
    2a44:	add	x8, sp, #0x90
    2a48:	mov	x25, #0x1                   	// #1
    2a4c:	mov	w2, #0x0                   	// #0
    2a50:	strb	wzr, [sp, #135]
    2a54:	b	2a78 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3d8>
    2a58:	ldrb	w5, [sp, #135]
    2a5c:	lsl	w0, w0, w2
    2a60:	add	w2, w2, #0x1
    2a64:	add	w28, w28, #0x1
    2a68:	orr	w0, w0, w5
    2a6c:	strb	w0, [sp, #135]
    2a70:	cmp	w2, #0x8
    2a74:	b.eq	2ad8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x438>  // b.none
    2a78:	ldr	w5, [x6]
    2a7c:	mov	w0, #0x1                   	// #1
    2a80:	cmp	w28, w5
    2a84:	b.cs	2a58 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3b8>  // b.hs, b.nlast
    2a88:	ldr	w0, [x22, #16]
    2a8c:	cmp	w28, w0
    2a90:	b.cs	3248 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xba8>  // b.hs, b.nlast
    2a94:	ldr	x5, [x26, #16]
    2a98:	lsr	w0, w28, #6
    2a9c:	lsl	x9, x25, x28
    2aa0:	cmp	x0, x5
    2aa4:	b.cs	3228 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb88>  // b.hs, b.nlast
    2aa8:	ldr	x5, [x26, #8]
    2aac:	add	w28, w28, #0x1
    2ab0:	ldr	x0, [x5, x0, lsl #3]
    2ab4:	ldrb	w5, [sp, #135]
    2ab8:	tst	x9, x0
    2abc:	cset	w0, ne  // ne = any
    2ac0:	lsl	w0, w0, w2
    2ac4:	orr	w0, w0, w5
    2ac8:	strb	w0, [sp, #135]
    2acc:	add	w2, w2, #0x1
    2ad0:	cmp	w2, #0x8
    2ad4:	b.ne	2a78 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3d8>  // b.any
    2ad8:	mov	x0, x24
    2adc:	mov	x2, #0x1                   	// #1
    2ae0:	stp	x1, x8, [sp, #104]
    2ae4:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    2ae8:	ldr	x0, [sp, #144]
    2aec:	ldp	x1, x8, [sp, #104]
    2af0:	ands	x0, x0, #0xfffffffffffffffe
    2af4:	b.eq	2bac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x50c>  // b.none
    2af8:	adrp	x4, 0 <_ZTVN4llvm18raw_string_ostreamE>
    2afc:	orr	x3, x0, #0x1
    2b00:	ldr	x0, [sp, #120]
    2b04:	add	x5, sp, #0xa8
    2b08:	ldr	x4, [x4]
    2b0c:	add	x6, sp, #0xb8
    2b10:	mov	x2, #0x31                  	// #49
    2b14:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2b18:	add	x4, x4, #0x10
    2b1c:	add	x1, x1, #0x0
    2b20:	str	x3, [sp, #144]
    2b24:	stp	x6, xzr, [sp, #168]
    2b28:	strb	wzr, [sp, #184]
    2b2c:	stp	x4, xzr, [sp, #200]
    2b30:	stp	xzr, xzr, [sp, #216]
    2b34:	str	w25, [sp, #232]
    2b38:	str	x5, [sp, #240]
    2b3c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2b40:	ldp	x3, x2, [x0, #16]
    2b44:	mov	x1, x0
    2b48:	cmp	x3, x2
    2b4c:	b.eq	32c0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc20>  // b.none
    2b50:	mov	w0, #0xa                   	// #10
    2b54:	strb	w0, [x2]
    2b58:	ldr	x0, [x1, #24]
    2b5c:	add	x0, x0, #0x1
    2b60:	str	x0, [x1, #24]
    2b64:	ldr	x0, [sp, #144]
    2b68:	ands	x0, x0, #0xfffffffffffffffe
    2b6c:	b.eq	3268 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbc8>  // b.none
    2b70:	ldr	x2, [x0]
    2b74:	ldr	x2, [x2, #16]
    2b78:	blr	x2
    2b7c:	ldr	x0, [sp, #208]
    2b80:	ldr	x1, [sp, #224]
    2b84:	cmp	x1, x0
    2b88:	b.eq	2b94 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4f4>  // b.none
    2b8c:	ldr	x0, [sp, #120]
    2b90:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    2b94:	ldr	x0, [sp, #240]
    2b98:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2b9c:	mov	w2, #0x2c9                 	// #713
    2ba0:	add	x1, x1, #0x0
    2ba4:	ldr	x0, [x0]
    2ba8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2bac:	ldr	x0, [x26]
    2bb0:	add	x6, x0, #0x28
    2bb4:	ldr	w0, [x0, #40]
    2bb8:	cmp	w0, w28
    2bbc:	b.hi	2a4c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3ac>  // b.pmore
    2bc0:	ldrb	w0, [sp, #344]
    2bc4:	cbz	w0, 2da0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x700>
    2bc8:	ldr	w1, [sp, #340]
    2bcc:	ldr	w0, [sp, #352]
    2bd0:	cmp	w0, w1
    2bd4:	b.ne	32a0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc00>  // b.any
    2bd8:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2bdc:	ldr	x22, [sp, #320]
    2be0:	ldr	x1, [x3]
    2be4:	add	x1, x1, #0x10
    2be8:	str	x1, [sp, #304]
    2bec:	cbz	x22, 2c18 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x578>
    2bf0:	adrp	x1, 0 <__pthread_key_create>
    2bf4:	ldr	x0, [x1]
    2bf8:	cbz	x0, 2f90 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8f0>
    2bfc:	add	x2, x22, #0x8
    2c00:	ldaxr	w0, [x2]
    2c04:	sub	w4, w0, #0x1
    2c08:	stlxr	w5, w4, [x2]
    2c0c:	cbnz	w5, 2c00 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x560>
    2c10:	cmp	w0, #0x1
    2c14:	b.eq	2fc0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x920>  // b.none
    2c18:	ldr	x0, [sp, #136]
    2c1c:	cbz	x0, 2c34 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x594>
    2c20:	ldr	x1, [x0]
    2c24:	str	x3, [sp, #104]
    2c28:	ldr	x1, [x1, #8]
    2c2c:	blr	x1
    2c30:	ldr	x3, [sp, #104]
    2c34:	ldr	x0, [x26]
    2c38:	ldr	x2, [x26, #40]
    2c3c:	ldr	w1, [x0, #32]
    2c40:	ldr	w0, [x0, #52]
    2c44:	umull	x0, w0, w1
    2c48:	str	w0, [sp, #296]
    2c4c:	cbz	x2, 2dc4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x724>
    2c50:	str	x3, [sp, #104]
    2c54:	mov	x0, #0x3fffffff            	// #1073741823
    2c58:	cmp	x2, x0
    2c5c:	b.ls	2f74 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8d4>  // b.plast
    2c60:	ldr	x0, [sp, #120]
    2c64:	mov	w1, #0x2                   	// #2
    2c68:	mov	x8, x24
    2c6c:	str	w1, [sp, #200]
    2c70:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2c74:	ldr	x3, [sp, #104]
    2c78:	ldr	x0, [sp, #304]
    2c7c:	ands	x0, x0, #0xfffffffffffffffe
    2c80:	b.eq	2dc4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x724>  // b.none
    2c84:	ldrb	w1, [x19, #72]
    2c88:	str	x0, [x19]
    2c8c:	orr	w0, w1, #0x3
    2c90:	strb	w0, [x19, #72]
    2c94:	b	2cac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x60c>
    2c98:	ldrb	w1, [x19, #72]
    2c9c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2ca0:	str	x0, [x19]
    2ca4:	orr	w0, w1, #0x3
    2ca8:	strb	w0, [x19, #72]
    2cac:	ldr	x3, [x3]
    2cb0:	ldr	x20, [sp, #264]
    2cb4:	add	x3, x3, #0x10
    2cb8:	str	x3, [sp, #248]
    2cbc:	cbz	x20, 2ce8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x648>
    2cc0:	adrp	x1, 0 <__pthread_key_create>
    2cc4:	ldr	x0, [x1]
    2cc8:	cbz	x0, 2d90 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6f0>
    2ccc:	add	x2, x20, #0x8
    2cd0:	ldaxr	w0, [x2]
    2cd4:	sub	w3, w0, #0x1
    2cd8:	stlxr	w4, w3, [x2]
    2cdc:	cbnz	w4, 2cd0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x630>
    2ce0:	cmp	w0, #0x1
    2ce4:	b.eq	2f24 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x884>  // b.none
    2ce8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2cec:	ldr	x25, [x0]
    2cf0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2cf4:	ldr	x26, [x0]
    2cf8:	add	x25, x25, #0x10
    2cfc:	ldr	x0, [sp, #424]
    2d00:	add	x26, x26, #0x10
    2d04:	stp	x25, x26, [sp, #360]
    2d08:	cbz	x0, 2d88 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6e8>
    2d0c:	ldr	x1, [x0]
    2d10:	ldr	x1, [x1, #40]
    2d14:	blr	x1
    2d18:	ldp	x27, x28, [sp, #80]
    2d1c:	b	27fc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x15c>
    2d20:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2d24:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2d28:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2d2c:	add	x3, x3, #0x0
    2d30:	add	x1, x1, #0x0
    2d34:	add	x0, x0, #0x0
    2d38:	mov	w2, #0x272                 	// #626
    2d3c:	stp	x27, x28, [sp, #80]
    2d40:	bl	0 <__assert_fail>
    2d44:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2d48:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2d4c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2d50:	add	x3, x3, #0x0
    2d54:	add	x1, x1, #0x0
    2d58:	add	x0, x0, #0x0
    2d5c:	mov	w2, #0x1ce                 	// #462
    2d60:	stp	x27, x28, [sp, #80]
    2d64:	bl	0 <__assert_fail>
    2d68:	ldr	w0, [x28, #8]
    2d6c:	sub	w2, w0, #0x1
    2d70:	str	w2, [x28, #8]
    2d74:	b	2908 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x268>
    2d78:	ldr	w2, [x25, #8]
    2d7c:	sub	w3, w2, #0x1
    2d80:	str	w3, [x25, #8]
    2d84:	b	29cc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x32c>
    2d88:	ldp	x27, x28, [sp, #80]
    2d8c:	b	27fc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x15c>
    2d90:	ldr	w0, [x20, #8]
    2d94:	sub	w2, w0, #0x1
    2d98:	str	w2, [x20, #8]
    2d9c:	b	2ce0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x640>
    2da0:	ldr	x0, [sp, #328]
    2da4:	mov	w1, #0x0                   	// #0
    2da8:	cbz	x0, 2bcc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x52c>
    2dac:	ldr	x1, [x0]
    2db0:	ldr	x1, [x1, #40]
    2db4:	blr	x1
    2db8:	ldr	w1, [sp, #336]
    2dbc:	sub	w1, w0, w1
    2dc0:	b	2bcc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x52c>
    2dc4:	ldr	x1, [sp, #96]
    2dc8:	mov	x0, x24
    2dcc:	str	x3, [sp, #104]
    2dd0:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    2dd4:	ldr	x2, [x20]
    2dd8:	add	x8, sp, #0xa8
    2ddc:	mov	x1, x24
    2de0:	mov	x0, x26
    2de4:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2de8:	ldr	x20, [sp, #312]
    2dec:	ldr	x3, [sp, #104]
    2df0:	cbz	x20, 2e1c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x77c>
    2df4:	adrp	x1, 0 <__pthread_key_create>
    2df8:	ldr	x0, [x1]
    2dfc:	cbz	x0, 3028 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x988>
    2e00:	add	x2, x20, #0x8
    2e04:	ldaxr	w0, [x2]
    2e08:	sub	w4, w0, #0x1
    2e0c:	stlxr	w5, w4, [x2]
    2e10:	cbnz	w5, 2e04 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x764>
    2e14:	cmp	w0, #0x1
    2e18:	b.eq	3048 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9a8>  // b.none
    2e1c:	ldr	x1, [sp, #168]
    2e20:	mov	x0, x24
    2e24:	str	x3, [sp, #96]
    2e28:	add	x20, sp, #0x90
    2e2c:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    2e30:	ldr	x0, [sp, #328]
    2e34:	ldr	x22, [x26, #56]
    2e38:	ldr	x1, [x0]
    2e3c:	ldr	x1, [x1, #16]
    2e40:	blr	x1
    2e44:	sub	w0, w0, #0x1
    2e48:	ldr	x8, [sp, #120]
    2e4c:	cmp	w0, #0x1
    2e50:	rev	w2, w22
    2e54:	mov	x0, x24
    2e58:	csel	w22, w22, w2, ls  // ls = plast
    2e5c:	mov	x1, x20
    2e60:	mov	x2, #0x4                   	// #4
    2e64:	str	w22, [sp, #144]
    2e68:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    2e6c:	ldr	x0, [sp, #200]
    2e70:	ldr	x3, [sp, #96]
    2e74:	ands	x0, x0, #0xfffffffffffffffe
    2e78:	b.ne	2eb8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x818>  // b.any
    2e7c:	ldr	x2, [x26, #56]
    2e80:	cbz	x2, 30a0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa00>
    2e84:	str	x3, [sp, #96]
    2e88:	mov	x0, #0x3fffffff            	// #1073741823
    2e8c:	cmp	x2, x0
    2e90:	b.ls	3184 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xae4>  // b.plast
    2e94:	ldr	x8, [sp, #120]
    2e98:	mov	w1, #0x2                   	// #2
    2e9c:	mov	x0, x20
    2ea0:	str	w1, [sp, #144]
    2ea4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2ea8:	ldr	x3, [sp, #96]
    2eac:	ldr	x0, [sp, #200]
    2eb0:	ands	x0, x0, #0xfffffffffffffffe
    2eb4:	b.eq	30a0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa00>  // b.none
    2eb8:	ldrb	w1, [x19, #72]
    2ebc:	str	x0, [x19]
    2ec0:	orr	w0, w1, #0x3
    2ec4:	strb	w0, [x19, #72]
    2ec8:	ldr	x1, [x3]
    2ecc:	ldr	x20, [sp, #320]
    2ed0:	add	x1, x1, #0x10
    2ed4:	str	x1, [sp, #304]
    2ed8:	cbz	x20, 2f04 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x864>
    2edc:	adrp	x1, 0 <__pthread_key_create>
    2ee0:	ldr	x0, [x1]
    2ee4:	cbz	x0, 31a0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb00>
    2ee8:	add	x2, x20, #0x8
    2eec:	ldaxr	w0, [x2]
    2ef0:	sub	w4, w0, #0x1
    2ef4:	stlxr	w5, w4, [x2]
    2ef8:	cbnz	w5, 2eec <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x84c>
    2efc:	cmp	w0, #0x1
    2f00:	b.eq	31c0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb20>  // b.none
    2f04:	ldr	x0, [sp, #168]
    2f08:	cbz	x0, 2cac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x60c>
    2f0c:	ldr	x1, [x0]
    2f10:	str	x3, [sp, #96]
    2f14:	ldr	x1, [x1, #8]
    2f18:	blr	x1
    2f1c:	ldr	x3, [sp, #96]
    2f20:	b	2cac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x60c>
    2f24:	ldr	x2, [x20]
    2f28:	str	x1, [sp, #96]
    2f2c:	mov	x0, x20
    2f30:	ldr	x2, [x2, #16]
    2f34:	blr	x2
    2f38:	ldr	x1, [sp, #96]
    2f3c:	ldr	x1, [x1]
    2f40:	cbz	x1, 3018 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x978>
    2f44:	add	x1, x20, #0xc
    2f48:	ldaxr	w0, [x1]
    2f4c:	sub	w2, w0, #0x1
    2f50:	stlxr	w3, w2, [x1]
    2f54:	cbnz	w3, 2f48 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8a8>
    2f58:	cmp	w0, #0x1
    2f5c:	b.ne	2ce8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x648>  // b.any
    2f60:	ldr	x1, [x20]
    2f64:	mov	x0, x20
    2f68:	ldr	x1, [x1, #24]
    2f6c:	blr	x1
    2f70:	b	2ce8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x648>
    2f74:	ldr	x1, [x26, #32]
    2f78:	lsl	x2, x2, #2
    2f7c:	mov	x0, x27
    2f80:	mov	x8, x24
    2f84:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    2f88:	ldr	x3, [sp, #104]
    2f8c:	b	2c78 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x5d8>
    2f90:	ldr	w0, [x22, #8]
    2f94:	sub	w2, w0, #0x1
    2f98:	str	w2, [x22, #8]
    2f9c:	b	2c10 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x570>
    2fa0:	ldr	w0, [x28, #12]
    2fa4:	sub	w1, w0, #0x1
    2fa8:	str	w1, [x28, #12]
    2fac:	b	2944 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2a4>
    2fb0:	ldr	w1, [x25, #12]
    2fb4:	sub	w2, w1, #0x1
    2fb8:	str	w2, [x25, #12]
    2fbc:	b	2a08 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x368>
    2fc0:	ldr	x2, [x22]
    2fc4:	stp	x3, x1, [sp, #104]
    2fc8:	mov	x0, x22
    2fcc:	ldr	x2, [x2, #16]
    2fd0:	blr	x2
    2fd4:	ldp	x3, x1, [sp, #104]
    2fd8:	ldr	x1, [x1]
    2fdc:	cbz	x1, 3038 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x998>
    2fe0:	add	x1, x22, #0xc
    2fe4:	ldaxr	w0, [x1]
    2fe8:	sub	w2, w0, #0x1
    2fec:	stlxr	w4, w2, [x1]
    2ff0:	cbnz	w4, 2fe4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x944>
    2ff4:	cmp	w0, #0x1
    2ff8:	b.ne	2c18 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x578>  // b.any
    2ffc:	ldr	x1, [x22]
    3000:	str	x3, [sp, #104]
    3004:	mov	x0, x22
    3008:	ldr	x1, [x1, #24]
    300c:	blr	x1
    3010:	ldr	x3, [sp, #104]
    3014:	b	2c18 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x578>
    3018:	ldr	w0, [x20, #12]
    301c:	sub	w1, w0, #0x1
    3020:	str	w1, [x20, #12]
    3024:	b	2f58 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8b8>
    3028:	ldr	w0, [x20, #8]
    302c:	sub	w2, w0, #0x1
    3030:	str	w2, [x20, #8]
    3034:	b	2e14 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x774>
    3038:	ldr	w0, [x22, #12]
    303c:	sub	w1, w0, #0x1
    3040:	str	w1, [x22, #12]
    3044:	b	2ff4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x954>
    3048:	ldr	x2, [x20]
    304c:	stp	x3, x1, [sp, #96]
    3050:	mov	x0, x20
    3054:	ldr	x2, [x2, #16]
    3058:	blr	x2
    305c:	ldp	x3, x1, [sp, #96]
    3060:	ldr	x1, [x1]
    3064:	cbz	x1, 31b0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb10>
    3068:	add	x1, x20, #0xc
    306c:	ldaxr	w0, [x1]
    3070:	sub	w2, w0, #0x1
    3074:	stlxr	w4, w2, [x1]
    3078:	cbnz	w4, 306c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9cc>
    307c:	cmp	w0, #0x1
    3080:	b.ne	2e1c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x77c>  // b.any
    3084:	ldr	x1, [x20]
    3088:	str	x3, [sp, #96]
    308c:	mov	x0, x20
    3090:	ldr	x1, [x1, #24]
    3094:	blr	x1
    3098:	ldr	x3, [sp, #96]
    309c:	b	2e1c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x77c>
    30a0:	ldp	x27, x26, [x26, #64]
    30a4:	mov	x22, #0x3fffffff            	// #1073741823
    30a8:	mov	w25, #0x2                   	// #2
    30ac:	cmp	x26, x27
    30b0:	b.eq	30f4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa54>  // b.none
    30b4:	ldr	x2, [x27, #8]
    30b8:	cbz	x2, 30e8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa48>
    30bc:	str	x3, [sp, #96]
    30c0:	cmp	x2, x22
    30c4:	b.ls	3168 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xac8>  // b.plast
    30c8:	ldr	x8, [sp, #120]
    30cc:	mov	x0, x20
    30d0:	str	w25, [sp, #144]
    30d4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    30d8:	ldr	x3, [sp, #96]
    30dc:	ldr	x0, [sp, #200]
    30e0:	ands	x0, x0, #0xfffffffffffffffe
    30e4:	b.ne	2eb8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x818>  // b.any
    30e8:	add	x27, x27, #0x10
    30ec:	cmp	x26, x27
    30f0:	b.ne	30b4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa14>  // b.any
    30f4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    30f8:	ldrb	w1, [x19, #72]
    30fc:	mov	x4, x19
    3100:	ldr	x0, [x0]
    3104:	and	w1, w1, #0xfffffffc
    3108:	orr	w1, w1, #0x2
    310c:	strb	w1, [x19, #72]
    3110:	add	x0, x0, #0x10
    3114:	str	x0, [x4], #8
    3118:	add	x0, sp, #0x220
    311c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3120:	ldr	x2, [x1]
    3124:	ldp	x6, x7, [x0, #-168]
    3128:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    312c:	stp	x6, x7, [x4, #8]
    3130:	add	x4, sp, #0x220
    3134:	add	x2, x2, #0x10
    3138:	ldr	x0, [x0]
    313c:	str	x2, [x19, #32]
    3140:	ldr	w2, [sp, #400]
    3144:	ldp	x4, x5, [x4, #-136]
    3148:	add	x0, x0, #0x10
    314c:	ldr	x1, [sp, #424]
    3150:	str	x0, [x19, #8]
    3154:	str	w2, [x19, #40]
    3158:	stp	x4, x5, [x19, #48]
    315c:	str	x1, [x19, #64]
    3160:	str	xzr, [sp, #424]
    3164:	b	2ec8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x828>
    3168:	ldr	x1, [x27]
    316c:	lsl	x2, x2, #2
    3170:	ldr	x8, [sp, #120]
    3174:	mov	x0, x24
    3178:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    317c:	ldr	x3, [sp, #96]
    3180:	b	30dc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa3c>
    3184:	ldr	x1, [x26, #48]
    3188:	lsl	x2, x2, #2
    318c:	ldr	x8, [sp, #120]
    3190:	mov	x0, x24
    3194:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    3198:	ldr	x3, [sp, #96]
    319c:	b	2eac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x80c>
    31a0:	ldr	w0, [x20, #8]
    31a4:	sub	w2, w0, #0x1
    31a8:	str	w2, [x20, #8]
    31ac:	b	2efc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x85c>
    31b0:	ldr	w0, [x20, #12]
    31b4:	sub	w1, w0, #0x1
    31b8:	str	w1, [x20, #12]
    31bc:	b	307c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9dc>
    31c0:	ldr	x2, [x20]
    31c4:	stp	x3, x1, [sp, #96]
    31c8:	mov	x0, x20
    31cc:	ldr	x2, [x2, #16]
    31d0:	blr	x2
    31d4:	ldp	x3, x1, [sp, #96]
    31d8:	ldr	x1, [x1]
    31dc:	cbz	x1, 3218 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb78>
    31e0:	add	x1, x20, #0xc
    31e4:	ldaxr	w0, [x1]
    31e8:	sub	w2, w0, #0x1
    31ec:	stlxr	w4, w2, [x1]
    31f0:	cbnz	w4, 31e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb44>
    31f4:	cmp	w0, #0x1
    31f8:	b.ne	2f04 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x864>  // b.any
    31fc:	ldr	x1, [x20]
    3200:	str	x3, [sp, #96]
    3204:	mov	x0, x20
    3208:	ldr	x1, [x1, #24]
    320c:	blr	x1
    3210:	ldr	x3, [sp, #96]
    3214:	b	2f04 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x864>
    3218:	ldr	w0, [x20, #12]
    321c:	sub	w1, w0, #0x1
    3220:	str	w1, [x20, #12]
    3224:	b	31f4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb54>
    3228:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    322c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3230:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3234:	add	x3, x3, #0x0
    3238:	add	x1, x1, #0x0
    323c:	add	x0, x0, #0x0
    3240:	mov	w2, #0x1ab                 	// #427
    3244:	bl	0 <__assert_fail>
    3248:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    324c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3250:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3254:	add	x3, x3, #0x0
    3258:	add	x1, x1, #0x0
    325c:	add	x0, x0, #0x0
    3260:	mov	w2, #0x1f0                 	// #496
    3264:	bl	0 <__assert_fail>
    3268:	ldp	x0, x2, [x1, #16]
    326c:	sub	x0, x0, x2
    3270:	cmp	x0, #0x6
    3274:	b.ls	32d8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc38>  // b.plast
    3278:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    327c:	add	x0, x0, #0x0
    3280:	ldr	w3, [x0]
    3284:	ldur	w0, [x0, #3]
    3288:	str	w3, [x2]
    328c:	stur	w0, [x2, #3]
    3290:	ldr	x0, [x1, #24]
    3294:	add	x0, x0, #0x7
    3298:	str	x0, [x1, #24]
    329c:	b	2b7c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4dc>
    32a0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    32a4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    32a8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    32ac:	add	x3, x3, #0x0
    32b0:	add	x1, x1, #0x0
    32b4:	add	x0, x0, #0x0
    32b8:	mov	w2, #0x14f                 	// #335
    32bc:	bl	0 <__assert_fail>
    32c0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    32c4:	add	x1, x1, #0x0
    32c8:	mov	x2, #0x1                   	// #1
    32cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    32d0:	mov	x1, x0
    32d4:	b	2b64 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4c4>
    32d8:	mov	x0, x1
    32dc:	mov	x2, #0x7                   	// #7
    32e0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    32e4:	add	x1, x1, #0x0
    32e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    32ec:	b	2b7c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4dc>

Disassembly of section .text._ZNK4llvm12BinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm12BinaryStream8getFlagsEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm20WritableBinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm20WritableBinaryStream8getFlagsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm16BinaryByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm16BinaryByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #8]
   4:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStream9getLengthEv:

0000000000000000 <_ZN4llvm16BinaryByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #24]
   4:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStreamD2Ev:

0000000000000000 <_ZN4llvm16BinaryByteStreamD1Ev>:
   0:	ret

Disassembly of section .text._ZNK4llvm23MutableBinaryByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm23MutableBinaryByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #32]
   4:	ret

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream9getLengthEv:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #48]
   4:	ret

Disassembly of section .text._ZNK4llvm20FileBufferByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm20FileBufferByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #40]
   4:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream9getLengthEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #56]
   4:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStreamD2Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStreamD1Ev>:
   0:	adrp	x3, 0 <_ZN4llvm20FileBufferByteStreamD1Ev>
   4:	adrp	x2, 0 <_ZN4llvm20FileBufferByteStreamD1Ev>
   8:	mov	x1, x0
   c:	ldr	x3, [x3]
  10:	ldr	x2, [x2]
  14:	add	x3, x3, #0x10
  18:	ldr	x0, [x0, #64]
  1c:	add	x2, x2, #0x10
  20:	stp	x3, x2, [x1]
  24:	cbz	x0, 38 <_ZN4llvm20FileBufferByteStreamD1Ev+0x38>
  28:	ldr	x1, [x0]
  2c:	ldr	x1, [x1, #40]
  30:	mov	x16, x1
  34:	br	x16
  38:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImplD2Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImplD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStream10StreamImplD1Ev>
   4:	mov	x2, x0
   8:	ldr	x0, [x0, #56]
   c:	ldr	x1, [x1]
  10:	add	x1, x1, #0x10
  14:	str	x1, [x2]
  18:	cbz	x0, 2c <_ZN4llvm20FileBufferByteStream10StreamImplD1Ev+0x2c>
  1c:	ldr	x1, [x0]
  20:	ldr	x1, [x1, #40]
  24:	mov	x16, x1
  28:	br	x16
  2c:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv>:
   0:	adrp	x3, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	adrp	x2, 0 <_ZN4llvm11StringError2IDE>
   8:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   c:	ldr	x3, [x3]
  10:	ldr	x2, [x2]
  14:	cmp	x1, x3
  18:	ldr	x0, [x0]
  1c:	ccmp	x1, x2, #0x4, ne  // ne = any
  20:	ccmp	x1, x0, #0x4, ne  // ne = any
  24:	cset	w0, eq  // eq = none
  28:	ret

Disassembly of section .text._ZN4llvm3msf8MSFErrorD2Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD1Ev>:
   0:	adrp	x2, 0 <_ZTVN4llvm11StringErrorE>
   4:	mov	x1, x0
   8:	add	x3, x0, #0x18
   c:	ldr	x2, [x2]
  10:	ldr	x0, [x0, #8]
  14:	add	x2, x2, #0x10
  18:	str	x2, [x1]
  1c:	cmp	x0, x3
  20:	b.eq	28 <_ZN4llvm3msf8MSFErrorD1Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStreamD0Ev:

0000000000000000 <_ZN4llvm16BinaryByteStreamD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm20FileBufferByteStreamD0Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZN4llvm20FileBufferByteStreamD0Ev>
   8:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStreamD0Ev>
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	ldr	x1, [x1]
  1c:	mov	x19, x0
  20:	ldr	x0, [x0, #64]
  24:	add	x2, x2, #0x10
  28:	add	x1, x1, #0x10
  2c:	stp	x2, x1, [x19]
  30:	cbz	x0, 40 <_ZN4llvm20FileBufferByteStreamD0Ev+0x40>
  34:	ldr	x1, [x0]
  38:	ldr	x1, [x1, #40]
  3c:	blr	x1
  40:	mov	x0, x19
  44:	mov	x1, #0x48                  	// #72
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImplD0Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #56]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 34 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev+0x34>
  28:	ldr	x1, [x0]
  2c:	ldr	x1, [x1, #40]
  30:	blr	x1
  34:	mov	x0, x19
  38:	mov	x1, #0x40                  	// #64
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3msf8MSFErrorD0Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZTVN4llvm11StringErrorE>
   8:	add	x2, x0, #0x18
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #8]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3msf8MSFErrorD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x19
  38:	mov	x1, #0x40                  	// #64
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
   8:	mov	w3, #0x1                   	// #1
   c:	mov	x29, sp
  10:	ldr	x2, [x0]
  14:	strb	wzr, [sp, #96]
  18:	ldr	x1, [x1]
  1c:	stp	x21, x22, [sp, #32]
  20:	add	x21, sp, #0x50
  24:	ldr	x2, [x2, #16]
  28:	add	x4, x21, #0x10
  2c:	add	x1, x1, #0x10
  30:	stp	x19, x20, [sp, #16]
  34:	mov	x19, x8
  38:	str	x23, [sp, #48]
  3c:	add	x23, sp, #0x70
  40:	stp	x4, xzr, [sp, #80]
  44:	stp	x1, xzr, [sp, #112]
  48:	mov	x1, x23
  4c:	stp	xzr, xzr, [sp, #128]
  50:	str	w3, [sp, #144]
  54:	str	x21, [sp, #152]
  58:	blr	x2
  5c:	ldr	x0, [sp, #120]
  60:	ldr	x1, [sp, #136]
  64:	cmp	x1, x0
  68:	b.eq	74 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x74>  // b.none
  6c:	mov	x0, x23
  70:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  74:	ldr	x1, [sp, #152]
  78:	add	x0, x19, #0x10
  7c:	ldr	x20, [x1, #8]
  80:	str	x0, [x19]
  84:	ldr	x22, [x1]
  88:	cmn	x22, x20
  8c:	ccmp	x22, #0x0, #0x0, ne  // ne = any
  90:	b.eq	128 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x128>  // b.none
  94:	str	x20, [sp, #72]
  98:	cmp	x20, #0xf
  9c:	b.hi	f4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xf4>  // b.pmore
  a0:	cmp	x20, #0x1
  a4:	b.ne	ec <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xec>  // b.any
  a8:	ldrb	w1, [x22]
  ac:	strb	w1, [x19, #16]
  b0:	str	x20, [x19, #8]
  b4:	add	x21, x21, #0x10
  b8:	strb	wzr, [x0, x20]
  bc:	mov	x0, x23
  c0:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  c4:	ldr	x0, [sp, #80]
  c8:	cmp	x0, x21
  cc:	b.eq	d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>  // b.none
  d0:	bl	0 <_ZdlPv>
  d4:	mov	x0, x19
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldr	x23, [sp, #48]
  e4:	ldp	x29, x30, [sp], #160
  e8:	ret
  ec:	cbz	x20, b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
  f0:	b	110 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x110>
  f4:	add	x1, sp, #0x48
  f8:	mov	x0, x19
  fc:	mov	x2, #0x0                   	// #0
 100:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 104:	ldr	x1, [sp, #72]
 108:	str	x0, [x19]
 10c:	str	x1, [x19, #16]
 110:	mov	x2, x20
 114:	mov	x1, x22
 118:	bl	0 <memcpy>
 11c:	ldr	x0, [x19]
 120:	ldr	x20, [sp, #72]
 124:	b	b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
 128:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD2Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm18BinaryStreamWriterD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	ldr	x19, [x0, #16]
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	cbz	x19, 4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>
  24:	adrp	x20, 0 <__pthread_key_create>
  28:	ldr	x0, [x20]
  2c:	cbz	x0, 58 <_ZN4llvm18BinaryStreamWriterD1Ev+0x58>
  30:	add	x1, x19, #0x8
  34:	ldaxr	w0, [x1]
  38:	sub	w2, w0, #0x1
  3c:	stlxr	w3, w2, [x1]
  40:	cbnz	w3, 34 <_ZN4llvm18BinaryStreamWriterD1Ev+0x34>
  44:	cmp	w0, #0x1
  48:	b.eq	6c <_ZN4llvm18BinaryStreamWriterD1Ev+0x6c>  // b.none
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	ldr	w0, [x19, #8]
  5c:	sub	w1, w0, #0x1
  60:	str	w1, [x19, #8]
  64:	cmp	w0, #0x1
  68:	b.ne	4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>  // b.any
  6c:	ldr	x1, [x19]
  70:	mov	x0, x19
  74:	ldr	x1, [x1, #16]
  78:	blr	x1
  7c:	ldr	x20, [x20]
  80:	cbz	x20, bc <_ZN4llvm18BinaryStreamWriterD1Ev+0xbc>
  84:	add	x1, x19, #0xc
  88:	ldaxr	w0, [x1]
  8c:	sub	w2, w0, #0x1
  90:	stlxr	w3, w2, [x1]
  94:	cbnz	w3, 88 <_ZN4llvm18BinaryStreamWriterD1Ev+0x88>
  98:	cmp	w0, #0x1
  9c:	b.ne	4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>  // b.any
  a0:	ldr	x1, [x19]
  a4:	mov	x0, x19
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldp	x29, x30, [sp], #32
  b0:	ldr	x1, [x1, #24]
  b4:	mov	x16, x1
  b8:	br	x16
  bc:	ldr	w0, [x19, #12]
  c0:	sub	w1, w0, #0x1
  c4:	str	w1, [x19, #12]
  c8:	b	98 <_ZN4llvm18BinaryStreamWriterD1Ev+0x98>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD0Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm18BinaryStreamWriterD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x20, [x0, #16]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x0]
  24:	cbz	x20, 58 <_ZN4llvm18BinaryStreamWriterD0Ev+0x58>
  28:	str	x21, [sp, #32]
  2c:	adrp	x21, 0 <__pthread_key_create>
  30:	ldr	x0, [x21]
  34:	cbz	x0, 6c <_ZN4llvm18BinaryStreamWriterD0Ev+0x6c>
  38:	add	x1, x20, #0x8
  3c:	ldaxr	w0, [x1]
  40:	sub	w2, w0, #0x1
  44:	stlxr	w3, w2, [x1]
  48:	cbnz	w3, 3c <_ZN4llvm18BinaryStreamWriterD0Ev+0x3c>
  4c:	cmp	w0, #0x1
  50:	b.eq	80 <_ZN4llvm18BinaryStreamWriterD0Ev+0x80>  // b.none
  54:	ldr	x21, [sp, #32]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	mov	x1, #0x38                  	// #56
  64:	ldp	x29, x30, [sp], #48
  68:	b	0 <_ZdlPvm>
  6c:	ldr	w0, [x20, #8]
  70:	sub	w1, w0, #0x1
  74:	str	w1, [x20, #8]
  78:	cmp	w0, #0x1
  7c:	b.ne	54 <_ZN4llvm18BinaryStreamWriterD0Ev+0x54>  // b.any
  80:	ldr	x1, [x20]
  84:	mov	x0, x20
  88:	ldr	x1, [x1, #16]
  8c:	blr	x1
  90:	ldr	x21, [x21]
  94:	cbz	x21, cc <_ZN4llvm18BinaryStreamWriterD0Ev+0xcc>
  98:	add	x1, x20, #0xc
  9c:	ldaxr	w0, [x1]
  a0:	sub	w2, w0, #0x1
  a4:	stlxr	w3, w2, [x1]
  a8:	cbnz	w3, 9c <_ZN4llvm18BinaryStreamWriterD0Ev+0x9c>
  ac:	cmp	w0, #0x1
  b0:	b.ne	54 <_ZN4llvm18BinaryStreamWriterD0Ev+0x54>  // b.any
  b4:	ldr	x1, [x20]
  b8:	mov	x0, x20
  bc:	ldr	x1, [x1, #24]
  c0:	blr	x1
  c4:	ldr	x21, [sp, #32]
  c8:	b	58 <_ZN4llvm18BinaryStreamWriterD0Ev+0x58>
  cc:	ldr	w0, [x20, #12]
  d0:	sub	w1, w0, #0x1
  d4:	str	w1, [x20, #12]
  d8:	b	ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbz	x20, 44 <_ZN4llvm11safe_mallocEm+0x44>
  30:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  34:	mov	w1, #0x1                   	// #1
  38:	add	x0, x0, #0x0
  3c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  40:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  44:	mov	x0, #0x1                   	// #1
  48:	bl	0 <malloc>
  4c:	cbz	x0, 30 <_ZN4llvm11safe_mallocEm+0x30>
  50:	mov	x19, x0
  54:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm9BitVector6resizeEjb:

0000000000000000 <_ZN4llvm9BitVector6resizeEjb>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	ldr	x21, [x0, #8]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	w19, w1
  18:	stp	x23, x24, [sp, #48]
  1c:	mov	x23, x0
  20:	lsl	x1, x21, #6
  24:	and	w24, w2, #0xff
  28:	cmp	x1, w19, uxtw
  2c:	b.cc	60 <_ZN4llvm9BitVector6resizeEjb+0x60>  // b.lo, b.ul, b.last
  30:	ldr	w1, [x0, #16]
  34:	cmp	w19, w1
  38:	b.hi	d8 <_ZN4llvm9BitVector6resizeEjb+0xd8>  // b.pmore
  3c:	str	w19, [x23, #16]
  40:	cmp	w24, #0x0
  44:	ccmp	w19, w1, #0x0, eq  // eq = none
  48:	b.cc	128 <_ZN4llvm9BitVector6resizeEjb+0x128>  // b.lo, b.ul, b.last
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x21, x22, [sp, #32]
  54:	ldp	x23, x24, [sp, #48]
  58:	ldp	x29, x30, [sp], #80
  5c:	ret
  60:	add	w20, w19, #0x3f
  64:	str	x25, [sp, #64]
  68:	lsl	x0, x21, #1
  6c:	lsr	w20, w20, #6
  70:	cmp	x20, x21, lsl #1
  74:	b.cc	1b4 <_ZN4llvm9BitVector6resizeEjb+0x1b4>  // b.lo, b.ul, b.last
  78:	cbz	x20, 294 <_ZN4llvm9BitVector6resizeEjb+0x294>
  7c:	ldr	x0, [x23]
  80:	lsl	x22, x20, #3
  84:	mov	x1, x22
  88:	bl	0 <realloc>
  8c:	mov	x25, x0
  90:	cbz	x0, 280 <_ZN4llvm9BitVector6resizeEjb+0x280>
  94:	ldr	w1, [x23, #16]
  98:	stp	x25, x20, [x23]
  9c:	add	w2, w1, #0x3f
  a0:	lsr	w0, w2, #6
  a4:	lsr	w22, w2, #6
  a8:	cmp	x0, x20
  ac:	b.cc	1e0 <_ZN4llvm9BitVector6resizeEjb+0x1e0>  // b.lo, b.ul, b.last
  b0:	ands	w3, w1, #0x3f
  b4:	b.ne	188 <_ZN4llvm9BitVector6resizeEjb+0x188>  // b.any
  b8:	cmp	x20, w21, uxtw
  bc:	and	x21, x21, #0xffffffff
  c0:	b.cc	2b4 <_ZN4llvm9BitVector6resizeEjb+0x2b4>  // b.lo, b.ul, b.last
  c4:	subs	x20, x20, x21
  c8:	b.ne	224 <_ZN4llvm9BitVector6resizeEjb+0x224>  // b.any
  cc:	cmp	w19, w1
  d0:	ldr	x25, [sp, #64]
  d4:	b.ls	3c <_ZN4llvm9BitVector6resizeEjb+0x3c>  // b.plast
  d8:	add	w2, w1, #0x3f
  dc:	ldr	x3, [x23, #8]
  e0:	lsr	w0, w2, #6
  e4:	lsr	w20, w2, #6
  e8:	cmp	x3, x0
  ec:	b.hi	1bc <_ZN4llvm9BitVector6resizeEjb+0x1bc>  // b.pmore
  f0:	ands	w3, w1, #0x3f
  f4:	b.eq	3c <_ZN4llvm9BitVector6resizeEjb+0x3c>  // b.none
  f8:	mov	x0, #0xffffffffffffffff    	// #-1
  fc:	sub	w2, w20, #0x1
 100:	lsl	x0, x0, x3
 104:	ldr	x3, [x23, #8]
 108:	cmp	x2, x3
 10c:	cbz	w24, 244 <_ZN4llvm9BitVector6resizeEjb+0x244>
 110:	b.cs	25c <_ZN4llvm9BitVector6resizeEjb+0x25c>  // b.hs, b.nlast
 114:	ldr	x3, [x23]
 118:	ldr	x1, [x3, x2, lsl #3]
 11c:	orr	x0, x1, x0
 120:	str	x0, [x3, x2, lsl #3]
 124:	str	w19, [x23, #16]
 128:	add	w19, w19, #0x3f
 12c:	ldr	x2, [x23, #8]
 130:	lsr	w0, w19, #6
 134:	lsr	w19, w19, #6
 138:	cmp	x2, x0
 13c:	b.hi	204 <_ZN4llvm9BitVector6resizeEjb+0x204>  // b.pmore
 140:	ldr	w0, [x23, #16]
 144:	ands	w0, w0, #0x3f
 148:	b.eq	4c <_ZN4llvm9BitVector6resizeEjb+0x4c>  // b.none
 14c:	ldr	x2, [x23, #8]
 150:	sub	w19, w19, #0x1
 154:	mov	x1, #0xffffffffffffffff    	// #-1
 158:	cmp	x19, x2
 15c:	lsl	x0, x1, x0
 160:	b.cs	25c <_ZN4llvm9BitVector6resizeEjb+0x25c>  // b.hs, b.nlast
 164:	ldr	x1, [x23]
 168:	ldp	x21, x22, [sp, #32]
 16c:	ldr	x2, [x1, x19, lsl #3]
 170:	ldp	x23, x24, [sp, #48]
 174:	bic	x0, x2, x0
 178:	str	x0, [x1, x19, lsl #3]
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x29, x30, [sp], #80
 184:	ret
 188:	sub	w2, w22, #0x1
 18c:	mov	x0, #0xffffffffffffffff    	// #-1
 190:	cmp	x2, x20
 194:	lsl	x0, x0, x3
 198:	b.cs	260 <_ZN4llvm9BitVector6resizeEjb+0x260>  // b.hs, b.nlast
 19c:	ldr	x3, [x23]
 1a0:	ldr	x4, [x3, x2, lsl #3]
 1a4:	bic	x0, x4, x0
 1a8:	str	x0, [x3, x2, lsl #3]
 1ac:	ldr	x20, [x23, #8]
 1b0:	b	b8 <_ZN4llvm9BitVector6resizeEjb+0xb8>
 1b4:	mov	x20, x0
 1b8:	b	7c <_ZN4llvm9BitVector6resizeEjb+0x7c>
 1bc:	subs	x3, x3, x0
 1c0:	b.eq	f0 <_ZN4llvm9BitVector6resizeEjb+0xf0>  // b.none
 1c4:	ldr	x4, [x23]
 1c8:	neg	w1, w24
 1cc:	lsl	x2, x3, #3
 1d0:	add	x0, x4, x0, lsl #3
 1d4:	bl	0 <memset>
 1d8:	ldr	w1, [x23, #16]
 1dc:	b	f0 <_ZN4llvm9BitVector6resizeEjb+0xf0>
 1e0:	subs	x2, x20, x0
 1e4:	b.eq	b0 <_ZN4llvm9BitVector6resizeEjb+0xb0>  // b.none
 1e8:	mov	w1, #0x0                   	// #0
 1ec:	lsl	x2, x2, #3
 1f0:	add	x0, x25, x0, lsl #3
 1f4:	bl	0 <memset>
 1f8:	ldr	w1, [x23, #16]
 1fc:	ldr	x20, [x23, #8]
 200:	b	b0 <_ZN4llvm9BitVector6resizeEjb+0xb0>
 204:	subs	x2, x2, x0
 208:	b.eq	140 <_ZN4llvm9BitVector6resizeEjb+0x140>  // b.none
 20c:	ldr	x3, [x23]
 210:	lsl	x2, x2, #3
 214:	mov	w1, #0x0                   	// #0
 218:	add	x0, x3, x0, lsl #3
 21c:	bl	0 <memset>
 220:	b	140 <_ZN4llvm9BitVector6resizeEjb+0x140>
 224:	ldr	x0, [x23]
 228:	neg	w1, w24
 22c:	lsl	x2, x20, #3
 230:	add	x0, x0, x21, lsl #3
 234:	bl	0 <memset>
 238:	ldr	w1, [x23, #16]
 23c:	ldr	x25, [sp, #64]
 240:	b	34 <_ZN4llvm9BitVector6resizeEjb+0x34>
 244:	b.cs	25c <_ZN4llvm9BitVector6resizeEjb+0x25c>  // b.hs, b.nlast
 248:	ldr	x3, [x23]
 24c:	ldr	x4, [x3, x2, lsl #3]
 250:	bic	x0, x4, x0
 254:	str	x0, [x3, x2, lsl #3]
 258:	b	3c <_ZN4llvm9BitVector6resizeEjb+0x3c>
 25c:	str	x25, [sp, #64]
 260:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 264:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 268:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 26c:	add	x3, x3, #0x0
 270:	add	x1, x1, #0x0
 274:	add	x0, x0, #0x0
 278:	mov	w2, #0x1ab                 	// #427
 27c:	bl	0 <__assert_fail>
 280:	cbnz	x22, 2d4 <_ZN4llvm9BitVector6resizeEjb+0x2d4>
 284:	mov	x0, #0x1                   	// #1
 288:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
 28c:	mov	x25, x0
 290:	b	94 <_ZN4llvm9BitVector6resizeEjb+0x94>
 294:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 298:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 29c:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 2a0:	add	x3, x3, #0x0
 2a4:	add	x1, x1, #0x0
 2a8:	add	x0, x0, #0x0
 2ac:	mov	w2, #0x376                 	// #886
 2b0:	bl	0 <__assert_fail>
 2b4:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 2b8:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 2bc:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 2c0:	add	x3, x3, #0x0
 2c4:	add	x1, x1, #0x0
 2c8:	add	x0, x0, #0x0
 2cc:	mov	w2, #0x174                 	// #372
 2d0:	bl	0 <__assert_fail>
 2d4:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 2d8:	mov	w1, #0x1                   	// #1
 2dc:	add	x0, x0, #0x0
 2e0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 2e4:	b	94 <_ZN4llvm9BitVector6resizeEjb+0x94>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 58 <_ZN4llvm11raw_ostreamlsEPKc+0x58>
  14:	mov	x20, x1
  18:	mov	x0, x1
  1c:	str	x21, [sp, #32]
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x21, x1
  34:	b.hi	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.pmore
  38:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  3c:	mov	x2, x21
  40:	mov	x1, x20
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19, #24]
  4c:	add	x0, x0, x21
  50:	ldr	x21, [sp, #32]
  54:	str	x0, [x19, #24]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x2, x21
  6c:	mov	x1, x20
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm16maskTrailingOnesImEET_j:

0000000000000000 <_ZN4llvm16maskTrailingOnesImEET_j>:
   0:	cmp	w0, #0x40
   4:	b.hi	20 <_ZN4llvm16maskTrailingOnesImEET_j+0x20>  // b.pmore
   8:	neg	w1, w0
   c:	cmp	w0, #0x0
  10:	mov	x0, #0xffffffffffffffff    	// #-1
  14:	lsr	x0, x0, x1
  18:	csel	x0, x0, xzr, ne  // ne = any
  1c:	ret
  20:	stp	x29, x30, [sp, #-16]!
  24:	adrp	x3, 0 <_ZN4llvm16maskTrailingOnesImEET_j>
  28:	adrp	x1, 0 <_ZN4llvm16maskTrailingOnesImEET_j>
  2c:	mov	x29, sp
  30:	adrp	x0, 0 <_ZN4llvm16maskTrailingOnesImEET_j>
  34:	add	x3, x3, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x0, x0, #0x0
  40:	mov	w2, #0xfb                  	// #251
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x1, x0
   8:	mov	x0, #0x30                  	// #48
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x8
  18:	ldr	w19, [x1]
  1c:	bl	0 <_Znwm>
  20:	mov	w1, w19
  24:	mov	x19, x0
  28:	orr	x19, x19, #0x1
  2c:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  30:	str	x19, [x20]
  34:	mov	x0, x20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImpl6commitEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #56]
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x28
  14:	mov	x19, x8
  18:	mov	x8, x20
  1c:	ldr	x1, [x0]
  20:	ldr	x1, [x1, #24]
  24:	blr	x1
  28:	ldr	x0, [sp, #40]
  2c:	ands	x0, x0, #0xfffffffffffffffe
  30:	b.eq	44 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv+0x44>  // b.none
  34:	orr	x1, x0, #0x1
  38:	mov	x0, x20
  3c:	str	x1, [sp, #40]
  40:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  44:	mov	x1, #0x1                   	// #1
  48:	str	x1, [x19]
  4c:	mov	x0, x19
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x8
  10:	cbnz	x3, 2c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x2c>
  14:	mov	x0, #0x1                   	// #1
  18:	str	x0, [x8]
  1c:	mov	x0, x20
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #80
  28:	ret
  2c:	str	x23, [sp, #48]
  30:	mov	w23, w1
  34:	ldr	x1, [x0]
  38:	stp	x21, x22, [sp, #32]
  3c:	mov	x19, x0
  40:	mov	x22, x2
  44:	mov	x21, x3
  48:	ldr	x1, [x1, #48]
  4c:	blr	x1
  50:	cmp	w0, #0x3
  54:	b.hi	12c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x12c>  // b.pmore
  58:	ldr	x1, [x19]
  5c:	ldr	x1, [x1, #40]
  60:	tbz	w0, #1, e8 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0xe8>
  64:	mov	x0, x19
  68:	blr	x1
  6c:	cmp	w23, w0
  70:	b.ls	b4 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0xb4>  // b.plast
  74:	mov	w1, #0x3                   	// #3
  78:	add	x8, sp, #0x48
  7c:	add	x0, sp, #0x44
  80:	str	w1, [sp, #68]
  84:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  88:	ldr	x0, [sp, #72]
  8c:	ands	x0, x0, #0xfffffffffffffffe
  90:	b.eq	b4 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0xb4>  // b.none
  94:	orr	x0, x0, #0x1
  98:	ldp	x21, x22, [sp, #32]
  9c:	ldr	x23, [sp, #48]
  a0:	str	x0, [x20]
  a4:	mov	x0, x20
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldp	x29, x30, [sp], #80
  b0:	ret
  b4:	ldr	x0, [x19, #8]
  b8:	mov	x2, x21
  bc:	mov	x1, x22
  c0:	add	x0, x0, w23, uxtw
  c4:	bl	0 <memcpy>
  c8:	mov	x0, #0x1                   	// #1
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldr	x23, [sp, #48]
  d4:	str	x0, [x20]
  d8:	mov	x0, x20
  dc:	ldp	x19, x20, [sp, #16]
  e0:	ldp	x29, x30, [sp], #80
  e4:	ret
  e8:	mov	x0, x19
  ec:	blr	x1
  f0:	cmp	w23, w0
  f4:	b.hi	74 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x74>  // b.pmore
  f8:	ldr	x1, [x19]
  fc:	mov	x0, x19
 100:	ldr	x1, [x1, #40]
 104:	blr	x1
 108:	add	w1, w23, w21
 10c:	cmp	w0, w1
 110:	b.cs	b4 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0xb4>  // b.hs, b.nlast
 114:	mov	w1, #0x1                   	// #1
 118:	add	x8, sp, #0x48
 11c:	add	x0, sp, #0x44
 120:	str	w1, [sp, #68]
 124:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 128:	b	88 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x88>
 12c:	adrp	x3, 0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 130:	adrp	x1, 0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 134:	adrp	x0, 0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 138:	add	x3, x3, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x0, x0, #0x0
 144:	mov	w2, #0x5d                  	// #93
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20FileBufferByteStream6commitEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream6commitEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #64]
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x28
  14:	mov	x19, x8
  18:	mov	x8, x20
  1c:	ldr	x1, [x0]
  20:	ldr	x1, [x1, #24]
  24:	blr	x1
  28:	ldr	x0, [sp, #40]
  2c:	ands	x0, x0, #0xfffffffffffffffe
  30:	b.eq	44 <_ZN4llvm20FileBufferByteStream6commitEv+0x44>  // b.none
  34:	orr	x1, x0, #0x1
  38:	mov	x0, x20
  3c:	str	x1, [sp, #40]
  40:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  44:	mov	x1, #0x1                   	// #1
  48:	str	x1, [x19]
  4c:	mov	x0, x19
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	w19, w1
  14:	ldr	x0, [x0, #48]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x8
  20:	mov	x22, x2
  24:	cmp	w19, w0
  28:	b.hi	a4 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xa4>  // b.pmore
  2c:	add	w1, w19, #0x1
  30:	cmp	w1, w0
  34:	b.ls	78 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x78>  // b.plast
  38:	mov	w1, #0x1                   	// #1
  3c:	add	x8, sp, #0x38
  40:	add	x0, sp, #0x34
  44:	str	w1, [sp, #52]
  48:	bl	0 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  4c:	ldr	x0, [sp, #56]
  50:	ands	x0, x0, #0xfffffffffffffffe
  54:	b.eq	74 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x74>  // b.none
  58:	orr	x0, x0, #0x1
  5c:	str	x0, [x21]
  60:	mov	x0, x21
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x21, x22, [sp, #32]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	ldr	x0, [x20, #48]
  78:	sub	x0, x0, x19
  7c:	ldr	x1, [x20, #40]
  80:	add	x19, x1, x19
  84:	stp	x19, x0, [x22]
  88:	mov	x0, #0x1                   	// #1
  8c:	str	x0, [x21]
  90:	mov	x0, x21
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x21, x22, [sp, #32]
  9c:	ldp	x29, x30, [sp], #64
  a0:	ret
  a4:	mov	w1, #0x3                   	// #3
  a8:	add	x8, sp, #0x38
  ac:	add	x0, sp, #0x34
  b0:	str	w1, [sp, #52]
  b4:	bl	0 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  b8:	b	4c <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x4c>

Disassembly of section .text._ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	w19, w1
  14:	ldr	x0, [x0, #56]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x8
  20:	mov	x22, x2
  24:	cmp	w19, w0
  28:	b.hi	a4 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xa4>  // b.pmore
  2c:	add	w1, w19, #0x1
  30:	cmp	w1, w0
  34:	b.ls	78 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x78>  // b.plast
  38:	mov	w1, #0x1                   	// #1
  3c:	add	x8, sp, #0x38
  40:	add	x0, sp, #0x34
  44:	str	w1, [sp, #52]
  48:	bl	0 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  4c:	ldr	x0, [sp, #56]
  50:	ands	x0, x0, #0xfffffffffffffffe
  54:	b.eq	74 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x74>  // b.none
  58:	orr	x0, x0, #0x1
  5c:	str	x0, [x21]
  60:	mov	x0, x21
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x21, x22, [sp, #32]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	ldr	x0, [x20, #56]
  78:	sub	x0, x0, x19
  7c:	ldr	x1, [x20, #48]
  80:	add	x19, x1, x19
  84:	stp	x19, x0, [x22]
  88:	mov	x0, #0x1                   	// #1
  8c:	str	x0, [x21]
  90:	mov	x0, x21
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x21, x22, [sp, #32]
  9c:	ldp	x29, x30, [sp], #64
  a0:	ret
  a4:	mov	w1, #0x3                   	// #3
  a8:	add	x8, sp, #0x38
  ac:	add	x0, sp, #0x34
  b0:	str	w1, [sp, #52]
  b4:	bl	0 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  b8:	b	4c <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x4c>

Disassembly of section .text._ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	ldr	x1, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x8
  20:	mov	x22, x2
  24:	ldr	x1, [x1, #40]
  28:	blr	x1
  2c:	cmp	w19, w0
  30:	b.hi	b8 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xb8>  // b.pmore
  34:	ldr	x1, [x20]
  38:	mov	x0, x20
  3c:	ldr	x1, [x1, #40]
  40:	blr	x1
  44:	add	w1, w19, #0x1
  48:	cmp	w0, w1
  4c:	b.cs	8c <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x8c>  // b.hs, b.nlast
  50:	mov	w1, #0x1                   	// #1
  54:	add	x8, sp, #0x38
  58:	add	x0, sp, #0x34
  5c:	str	w1, [sp, #52]
  60:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  64:	ldr	x0, [sp, #56]
  68:	ands	x0, x0, #0xfffffffffffffffe
  6c:	b.eq	8c <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x8c>  // b.none
  70:	orr	x0, x0, #0x1
  74:	str	x0, [x21]
  78:	mov	x0, x21
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x21, x22, [sp, #32]
  84:	ldp	x29, x30, [sp], #64
  88:	ret
  8c:	ldp	x1, x0, [x20, #16]
  90:	add	x1, x1, x19
  94:	sub	x19, x0, x19
  98:	stp	x1, x19, [x22]
  9c:	mov	x1, #0x1                   	// #1
  a0:	mov	x0, x21
  a4:	str	x1, [x21]
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldp	x21, x22, [sp, #32]
  b0:	ldp	x29, x30, [sp], #64
  b4:	ret
  b8:	mov	w1, #0x3                   	// #3
  bc:	add	x8, sp, #0x38
  c0:	add	x0, sp, #0x34
  c4:	str	w1, [sp, #52]
  c8:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  cc:	b	64 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x64>

Disassembly of section .text._ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	ldr	x1, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x22, x8
  20:	mov	w21, w2
  24:	ldr	x1, [x1, #40]
  28:	str	x23, [sp, #48]
  2c:	mov	x23, x3
  30:	blr	x1
  34:	cmp	w19, w0
  38:	b.hi	d4 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xd4>  // b.pmore
  3c:	ldr	x1, [x20]
  40:	mov	x0, x20
  44:	ldr	x1, [x1, #40]
  48:	blr	x1
  4c:	add	w1, w19, w21
  50:	cmp	w0, w1
  54:	b.cs	98 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x98>  // b.hs, b.nlast
  58:	mov	w1, #0x1                   	// #1
  5c:	add	x8, sp, #0x48
  60:	add	x0, sp, #0x44
  64:	str	w1, [sp, #68]
  68:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  6c:	ldr	x0, [sp, #72]
  70:	ands	x0, x0, #0xfffffffffffffffe
  74:	b.eq	98 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x98>  // b.none
  78:	orr	x0, x0, #0x1
  7c:	str	x0, [x22]
  80:	mov	x0, x22
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldr	x23, [sp, #48]
  90:	ldp	x29, x30, [sp], #80
  94:	ret
  98:	ldr	x0, [x20, #24]
  9c:	add	x1, x19, x21
  a0:	cmp	x1, x0
  a4:	b.hi	ec <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xec>  // b.pmore
  a8:	ldr	x0, [x20, #16]
  ac:	mov	x1, #0x1                   	// #1
  b0:	add	x19, x0, x19
  b4:	stp	x19, x21, [x23]
  b8:	mov	x0, x22
  bc:	str	x1, [x22]
  c0:	ldp	x19, x20, [sp, #16]
  c4:	ldp	x21, x22, [sp, #32]
  c8:	ldr	x23, [sp, #48]
  cc:	ldp	x29, x30, [sp], #80
  d0:	ret
  d4:	mov	w1, #0x3                   	// #3
  d8:	add	x8, sp, #0x48
  dc:	add	x0, sp, #0x44
  e0:	str	w1, [sp, #68]
  e4:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  e8:	b	6c <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x6c>
  ec:	adrp	x3, 0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  f0:	adrp	x1, 0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  f4:	adrp	x0, 0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  f8:	add	x3, x3, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x0, x0, #0x0
 104:	mov	w2, #0xbd                  	// #189
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	mov	x22, x8
  14:	ldr	x0, [x0, #48]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	w19, w1
  20:	str	x23, [sp, #48]
  24:	mov	w20, w2
  28:	cmp	w19, w0
  2c:	mov	x23, x3
  30:	b.hi	bc <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xbc>  // b.pmore
  34:	add	w1, w19, w20
  38:	cmp	w1, w0
  3c:	b.ls	84 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x84>  // b.plast
  40:	mov	w1, #0x1                   	// #1
  44:	add	x8, sp, #0x48
  48:	add	x0, sp, #0x44
  4c:	str	w1, [sp, #68]
  50:	bl	0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  54:	ldr	x0, [sp, #72]
  58:	ands	x0, x0, #0xfffffffffffffffe
  5c:	b.eq	80 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x80>  // b.none
  60:	orr	x0, x0, #0x1
  64:	str	x0, [x22]
  68:	mov	x0, x22
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x21, x22, [sp, #32]
  74:	ldr	x23, [sp, #48]
  78:	ldp	x29, x30, [sp], #80
  7c:	ret
  80:	ldr	x0, [x21, #48]
  84:	add	x1, x19, x20
  88:	cmp	x1, x0
  8c:	b.hi	d4 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xd4>  // b.pmore
  90:	ldr	x0, [x21, #40]
  94:	mov	x1, #0x1                   	// #1
  98:	add	x19, x0, x19
  9c:	stp	x19, x20, [x23]
  a0:	mov	x0, x22
  a4:	str	x1, [x22]
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldp	x21, x22, [sp, #32]
  b0:	ldr	x23, [sp, #48]
  b4:	ldp	x29, x30, [sp], #80
  b8:	ret
  bc:	mov	w1, #0x3                   	// #3
  c0:	add	x8, sp, #0x48
  c4:	add	x0, sp, #0x44
  c8:	str	w1, [sp, #68]
  cc:	bl	0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  d0:	b	54 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x54>
  d4:	adrp	x3, 0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  d8:	adrp	x1, 0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  dc:	adrp	x0, 0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  e0:	add	x3, x3, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x0, x0, #0x0
  ec:	mov	w2, #0xbd                  	// #189
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	mov	x22, x8
  14:	ldr	x0, [x0, #56]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	w19, w1
  20:	str	x23, [sp, #48]
  24:	mov	w20, w2
  28:	cmp	w19, w0
  2c:	mov	x23, x3
  30:	b.hi	bc <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xbc>  // b.pmore
  34:	add	w1, w19, w20
  38:	cmp	w1, w0
  3c:	b.ls	84 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x84>  // b.plast
  40:	mov	w1, #0x1                   	// #1
  44:	add	x8, sp, #0x48
  48:	add	x0, sp, #0x44
  4c:	str	w1, [sp, #68]
  50:	bl	0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  54:	ldr	x0, [sp, #72]
  58:	ands	x0, x0, #0xfffffffffffffffe
  5c:	b.eq	80 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x80>  // b.none
  60:	orr	x0, x0, #0x1
  64:	str	x0, [x22]
  68:	mov	x0, x22
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x21, x22, [sp, #32]
  74:	ldr	x23, [sp, #48]
  78:	ldp	x29, x30, [sp], #80
  7c:	ret
  80:	ldr	x0, [x21, #56]
  84:	add	x1, x19, x20
  88:	cmp	x1, x0
  8c:	b.hi	d4 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xd4>  // b.pmore
  90:	ldr	x0, [x21, #48]
  94:	mov	x1, #0x1                   	// #1
  98:	add	x19, x0, x19
  9c:	stp	x19, x20, [x23]
  a0:	mov	x0, x22
  a4:	str	x1, [x22]
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldp	x21, x22, [sp, #32]
  b0:	ldr	x23, [sp, #48]
  b4:	ldp	x29, x30, [sp], #80
  b8:	ret
  bc:	mov	w1, #0x3                   	// #3
  c0:	add	x8, sp, #0x48
  c4:	add	x0, sp, #0x44
  c8:	str	w1, [sp, #68]
  cc:	bl	0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  d0:	b	54 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x54>
  d4:	adrp	x3, 0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  d8:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  dc:	adrp	x0, 0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  e0:	add	x3, x3, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x0, x0, #0x0
  ec:	mov	w2, #0xbd                  	// #189
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	cbnz	x3, 2c <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x2c>
  14:	mov	x0, #0x1                   	// #1
  18:	str	x0, [x8]
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #80
  28:	ret
  2c:	stp	x21, x22, [sp, #32]
  30:	mov	w21, w1
  34:	mov	x22, x0
  38:	mov	x20, x3
  3c:	add	x0, x0, #0x8
  40:	str	x23, [sp, #48]
  44:	mov	x23, x2
  48:	bl	0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>
  4c:	cmp	w21, w0
  50:	b.hi	a0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0xa0>  // b.pmore
  54:	add	w1, w21, w20
  58:	cmp	w0, w1
  5c:	b.cs	b8 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0xb8>  // b.hs, b.nlast
  60:	mov	w1, #0x1                   	// #1
  64:	add	x8, sp, #0x48
  68:	add	x0, sp, #0x44
  6c:	str	w1, [sp, #68]
  70:	bl	0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>
  74:	ldr	x0, [sp, #72]
  78:	ands	x0, x0, #0xfffffffffffffffe
  7c:	b.eq	b8 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0xb8>  // b.none
  80:	orr	x0, x0, #0x1
  84:	ldp	x21, x22, [sp, #32]
  88:	ldr	x23, [sp, #48]
  8c:	str	x0, [x19]
  90:	mov	x0, x19
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x29, x30, [sp], #80
  9c:	ret
  a0:	mov	w1, #0x3                   	// #3
  a4:	add	x8, sp, #0x48
  a8:	add	x0, sp, #0x44
  ac:	str	w1, [sp, #68]
  b0:	bl	0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>
  b4:	b	74 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x74>
  b8:	ldr	x0, [x22, #16]
  bc:	mov	x2, x20
  c0:	mov	x1, x23
  c4:	add	x0, x0, w21, uxtw
  c8:	bl	0 <memcpy>
  cc:	mov	x0, #0x1                   	// #1
  d0:	ldp	x21, x22, [sp, #32]
  d4:	ldr	x23, [sp, #48]
  d8:	str	x0, [x19]
  dc:	mov	x0, x19
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	ret

Disassembly of section .text._ZNSt6vectorIjSaIjEE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>:
   0:	cbz	x1, 74 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x74>
   4:	stp	x29, x30, [sp, #-80]!
   8:	mov	x3, #0x1fffffffffffffff    	// #2305843009213693951
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x1
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x0
  20:	ldp	x1, x0, [x0]
  24:	stp	x23, x24, [sp, #48]
  28:	ldr	x2, [x21, #16]
  2c:	sub	x22, x0, x1
  30:	sub	x1, x2, x0
  34:	asr	x23, x22, #2
  38:	cmp	x19, x1, asr #2
  3c:	sub	x2, x3, x23
  40:	b.hi	78 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x78>  // b.pmore
  44:	mov	x2, #0x0                   	// #0
  48:	str	wzr, [x0, x2, lsl #2]
  4c:	add	x2, x2, #0x1
  50:	cmp	x19, x2
  54:	b.ne	48 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x48>  // b.any
  58:	add	x19, x0, x19, lsl #2
  5c:	str	x19, [x21, #8]
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x21, x22, [sp, #32]
  68:	ldp	x23, x24, [sp, #48]
  6c:	ldp	x29, x30, [sp], #80
  70:	ret
  74:	ret
  78:	str	x25, [sp, #64]
  7c:	cmp	x2, x19
  80:	b.cc	118 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x118>  // b.lo, b.ul, b.last
  84:	cmp	x23, x19
  88:	mov	x20, #0x0                   	// #0
  8c:	csel	x24, x23, x19, cs  // cs = hs, nlast
  90:	add	x24, x23, x24
  94:	cmp	x24, x3
  98:	csel	x24, x24, x3, ls  // ls = plast
  9c:	lsl	x24, x24, #2
  a0:	mov	x0, x24
  a4:	bl	0 <_Znwm>
  a8:	mov	x25, x0
  ac:	add	x1, x0, x22
  b0:	str	wzr, [x1, x20, lsl #2]
  b4:	add	x20, x20, #0x1
  b8:	cmp	x19, x20
  bc:	b.ne	b0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xb0>  // b.any
  c0:	ldp	x19, x2, [x21]
  c4:	sub	x2, x2, x19
  c8:	cmp	x2, #0x0
  cc:	b.gt	100 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x100>
  d0:	cbnz	x19, 10c <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x10c>
  d4:	add	x20, x23, x20
  d8:	add	x24, x25, x24
  dc:	str	x24, [x21, #16]
  e0:	add	x20, x25, x20, lsl #2
  e4:	stp	x25, x20, [x21]
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldp	x23, x24, [sp, #48]
  f4:	ldr	x25, [sp, #64]
  f8:	ldp	x29, x30, [sp], #80
  fc:	ret
 100:	mov	x1, x19
 104:	mov	x0, x25
 108:	bl	0 <memmove>
 10c:	mov	x0, x19
 110:	bl	0 <_ZdlPv>
 114:	b	d4 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xd4>
 118:	adrp	x0, 0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>
 11c:	add	x0, x0, #0x0
 120:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm>:
   0:	cbz	x1, 70 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x70>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	ldp	x2, x0, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x20, x1
  24:	ldr	x1, [x21, #16]
  28:	sub	x19, x0, x2
  2c:	sub	x1, x1, x0
  30:	asr	x22, x19, #4
  34:	cmp	x20, x1, asr #4
  38:	sub	x2, x3, x22
  3c:	b.hi	74 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x74>  // b.pmore
  40:	mov	x2, x0
  44:	mov	x3, x20
  48:	stp	xzr, xzr, [x2]
  4c:	subs	x3, x3, #0x1
  50:	add	x2, x2, #0x10
  54:	b.ne	48 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x48>  // b.any
  58:	add	x20, x0, x20, lsl #4
  5c:	str	x20, [x21, #8]
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x21, x22, [sp, #32]
  68:	ldp	x29, x30, [sp], #64
  6c:	ret
  70:	ret
  74:	stp	x23, x24, [sp, #48]
  78:	cmp	x2, x20
  7c:	b.cc	120 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x120>  // b.lo, b.ul, b.last
  80:	cmp	x22, x20
  84:	csel	x23, x22, x20, cs  // cs = hs, nlast
  88:	add	x23, x22, x23
  8c:	cmp	x23, x3
  90:	csel	x23, x23, x3, ls  // ls = plast
  94:	lsl	x23, x23, #4
  98:	mov	x0, x23
  9c:	bl	0 <_Znwm>
  a0:	mov	x1, x20
  a4:	mov	x24, x0
  a8:	add	x2, x0, x19
  ac:	nop
  b0:	stp	xzr, xzr, [x2]
  b4:	subs	x1, x1, #0x1
  b8:	add	x2, x2, #0x10
  bc:	b.ne	b0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xb0>  // b.any
  c0:	ldp	x0, x5, [x21]
  c4:	mov	x1, x24
  c8:	mov	x2, x0
  cc:	cmp	x0, x5
  d0:	b.eq	f0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xf0>  // b.none
  d4:	nop
  d8:	ldp	x4, x3, [x2]
  dc:	stp	x4, x3, [x1]
  e0:	add	x2, x2, #0x10
  e4:	cmp	x5, x2
  e8:	add	x1, x1, #0x10
  ec:	b.ne	d8 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xd8>  // b.any
  f0:	cbz	x0, f8 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xf8>
  f4:	bl	0 <_ZdlPv>
  f8:	add	x20, x22, x20
  fc:	add	x23, x24, x23
 100:	str	x23, [x21, #16]
 104:	add	x20, x24, x20, lsl #4
 108:	stp	x24, x20, [x21]
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x23, x24, [sp, #48]
 118:	ldp	x29, x30, [sp], #64
 11c:	ret
 120:	adrp	x0, 0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x3ffffffffffffff     	// #288230376151711743
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x24, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x20, x24
  2c:	cmp	x3, x1, asr #5
  30:	b.eq	184 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x184>  // b.none
  34:	mov	x23, x0
  38:	mov	x25, x2
  3c:	asr	x0, x1, #5
  40:	sub	x27, x19, x24
  44:	cbz	x0, 16c <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x16c>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x26, #0x7fffffffffffffe0    	// #9223372036854775776
  50:	lsl	x0, x0, #1
  54:	b.ls	158 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x158>  // b.plast
  58:	mov	x0, x26
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x26, x0, x26
  68:	add	x21, x0, #0x20
  6c:	mov	x0, x25
  70:	add	x2, x22, x27
  74:	add	x1, x2, #0x8
  78:	cmp	x19, x24
  7c:	ldr	x3, [x25, #8]
  80:	ldr	w4, [x0], #8
  84:	str	w4, [x22, x27]
  88:	str	x3, [x2, #8]
  8c:	ldp	x3, x2, [x0, #8]
  90:	stp	xzr, xzr, [x0, #8]
  94:	stp	x3, x2, [x1, #8]
  98:	str	xzr, [x25, #8]
  9c:	b.eq	e4 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe4>  // b.none
  a0:	mov	x4, x22
  a4:	mov	x3, x24
  a8:	ldr	x2, [x3, #8]
  ac:	add	x3, x3, #0x20
  b0:	ldur	w1, [x3, #-32]
  b4:	add	x4, x4, #0x20
  b8:	stur	x2, [x4, #-24]
  bc:	stur	w1, [x4, #-32]
  c0:	ldur	x1, [x3, #-16]
  c4:	stur	x1, [x4, #-16]
  c8:	ldur	x1, [x3, #-8]
  cc:	stur	x1, [x4, #-8]
  d0:	cmp	x19, x3
  d4:	b.ne	a8 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa8>  // b.any
  d8:	sub	x21, x19, x24
  dc:	add	x21, x21, #0x20
  e0:	add	x21, x22, x21
  e4:	cmp	x19, x20
  e8:	b.eq	128 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x128>  // b.none
  ec:	mov	x2, x19
  f0:	mov	x3, x21
  f4:	nop
  f8:	ldr	w4, [x2]
  fc:	ldr	x1, [x2, #8]
 100:	str	w4, [x3]
 104:	str	x1, [x3, #8]
 108:	ldp	x4, x1, [x2, #16]
 10c:	stp	x4, x1, [x3, #16]
 110:	add	x2, x2, #0x20
 114:	cmp	x2, x20
 118:	add	x3, x3, #0x20
 11c:	b.ne	f8 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xf8>  // b.any
 120:	sub	x2, x2, x19
 124:	add	x21, x21, x2
 128:	cbz	x24, 134 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x134>
 12c:	mov	x0, x24
 130:	bl	0 <_ZdlPv>
 134:	ldp	x19, x20, [sp, #16]
 138:	ldr	x27, [sp, #80]
 13c:	stp	x22, x21, [x23]
 140:	str	x26, [x23, #16]
 144:	ldp	x21, x22, [sp, #32]
 148:	ldp	x23, x24, [sp, #48]
 14c:	ldp	x25, x26, [sp, #64]
 150:	ldp	x29, x30, [sp], #96
 154:	ret
 158:	cbnz	x0, 174 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x174>
 15c:	mov	x21, #0x20                  	// #32
 160:	mov	x26, #0x0                   	// #0
 164:	mov	x22, #0x0                   	// #0
 168:	b	6c <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x6c>
 16c:	mov	x26, #0x20                  	// #32
 170:	b	58 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x58>
 174:	cmp	x0, x3
 178:	csel	x0, x0, x3, ls  // ls = plast
 17c:	lsl	x26, x0, #5
 180:	b	58 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x58>
 184:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 188:	add	x0, x0, #0x0
 18c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldp	x1, x4, [x0, #8]
   c:	cmp	x1, x4
  10:	b.eq	48 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_+0x48>  // b.none
  14:	mov	x0, x2
  18:	mov	x4, x1
  1c:	ldr	x6, [x2, #8]
  20:	add	x5, x1, #0x20
  24:	ldr	w7, [x0], #8
  28:	str	w7, [x4], #8
  2c:	str	x6, [x1, #8]
  30:	ldp	x6, x1, [x0, #8]
  34:	stp	xzr, xzr, [x0, #8]
  38:	str	xzr, [x2, #8]
  3c:	stp	x6, x1, [x4, #8]
  40:	str	x5, [x3, #8]
  44:	ret
  48:	b	0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>

Disassembly of section .text._ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>:
   0:	cmp	x3, x2
   4:	b.eq	24c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x24c>  // b.none
   8:	stp	x29, x30, [sp, #-96]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldp	x4, x0, [x0, #8]
  1c:	stp	x21, x22, [sp, #32]
  20:	sub	x22, x3, x2
  24:	stp	x23, x24, [sp, #48]
  28:	mov	x21, x1
  2c:	mov	x24, x2
  30:	stp	x25, x26, [sp, #64]
  34:	asr	x20, x22, #2
  38:	sub	x0, x0, x4
  3c:	asr	x0, x0, #2
  40:	cmp	x0, x22, asr #2
  44:	b.cc	b8 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0xb8>  // b.lo, b.ul, b.last
  48:	sub	x23, x4, x1
  4c:	cmp	x20, x23, asr #2
  50:	asr	x25, x23, #2
  54:	b.cs	174 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x174>  // b.hs, b.nlast
  58:	sub	x20, x4, x22
  5c:	mov	x0, x4
  60:	mov	x2, x22
  64:	mov	x1, x20
  68:	bl	0 <memmove>
  6c:	mov	x4, x0
  70:	ldr	x0, [x19, #8]
  74:	cmp	x20, x21
  78:	add	x0, x0, x22
  7c:	str	x0, [x19, #8]
  80:	b.eq	94 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x94>  // b.none
  84:	sub	x2, x20, x21
  88:	mov	x1, x21
  8c:	sub	x0, x4, x2
  90:	bl	0 <memmove>
  94:	mov	x2, x22
  98:	mov	x1, x24
  9c:	mov	x0, x21
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldp	x23, x24, [sp, #48]
  ac:	ldp	x25, x26, [sp, #64]
  b0:	ldp	x29, x30, [sp], #96
  b4:	b	0 <memmove>
  b8:	ldr	x25, [x19]
  bc:	str	x27, [sp, #80]
  c0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  c4:	sub	x4, x4, x25
  c8:	asr	x4, x4, #2
  cc:	sub	x1, x0, x4
  d0:	cmp	x20, x1
  d4:	b.hi	268 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x268>  // b.pmore
  d8:	cmp	x20, x4
  dc:	csel	x20, x20, x4, cs  // cs = hs, nlast
  e0:	adds	x4, x4, x20
  e4:	b.cs	260 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x260>  // b.hs, b.nlast
  e8:	mov	x26, #0x0                   	// #0
  ec:	mov	x23, #0x0                   	// #0
  f0:	cbnz	x4, 214 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x214>
  f4:	subs	x2, x21, x25
  f8:	add	x20, x2, x22
  fc:	add	x27, x23, x2
 100:	add	x20, x23, x20
 104:	b.eq	1f0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1f0>  // b.none
 108:	mov	x1, x25
 10c:	mov	x0, x23
 110:	bl	0 <memmove>
 114:	mov	x2, x22
 118:	mov	x1, x24
 11c:	mov	x0, x27
 120:	bl	0 <memcpy>
 124:	ldr	x0, [x19, #8]
 128:	cmp	x21, x0
 12c:	sub	x0, x0, x21
 130:	b.eq	250 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x250>  // b.none
 134:	mov	x22, x0
 138:	mov	x2, x0
 13c:	mov	x1, x21
 140:	mov	x0, x20
 144:	bl	0 <memcpy>
 148:	add	x20, x20, x22
 14c:	cbnz	x25, 254 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x254>
 150:	ldr	x27, [sp, #80]
 154:	stp	x23, x20, [x19]
 158:	str	x26, [x19, #16]
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x29, x30, [sp], #96
 170:	ret
 174:	add	x22, x2, x23
 178:	mov	x0, x4
 17c:	cmp	x3, x22
 180:	b.eq	198 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x198>  // b.none
 184:	sub	x2, x3, x22
 188:	mov	x1, x22
 18c:	bl	0 <memmove>
 190:	mov	x4, x0
 194:	ldr	x0, [x19, #8]
 198:	sub	x20, x20, x25
 19c:	cmp	x4, x21
 1a0:	add	x0, x0, x20, lsl #2
 1a4:	str	x0, [x19, #8]
 1a8:	b.eq	1bc <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1bc>  // b.none
 1ac:	mov	x2, x23
 1b0:	mov	x1, x21
 1b4:	bl	0 <memmove>
 1b8:	ldr	x0, [x19, #8]
 1bc:	add	x0, x0, x23
 1c0:	str	x0, [x19, #8]
 1c4:	cmp	x24, x22
 1c8:	b.eq	15c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x15c>  // b.none
 1cc:	mov	x2, x23
 1d0:	mov	x1, x24
 1d4:	mov	x0, x21
 1d8:	ldp	x19, x20, [sp, #16]
 1dc:	ldp	x21, x22, [sp, #32]
 1e0:	ldp	x23, x24, [sp, #48]
 1e4:	ldp	x25, x26, [sp, #64]
 1e8:	ldp	x29, x30, [sp], #96
 1ec:	b	0 <memmove>
 1f0:	mov	x2, x22
 1f4:	mov	x1, x24
 1f8:	mov	x0, x27
 1fc:	bl	0 <memcpy>
 200:	ldr	x0, [x19, #8]
 204:	mov	x22, #0x0                   	// #0
 208:	subs	x0, x0, x21
 20c:	b.ne	134 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x134>  // b.any
 210:	b	148 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x148>
 214:	cmp	x4, x0
 218:	csel	x4, x4, x0, ls  // ls = plast
 21c:	lsl	x26, x4, #2
 220:	mov	x0, x26
 224:	bl	0 <_Znwm>
 228:	ldr	x25, [x19]
 22c:	mov	x23, x0
 230:	add	x26, x0, x26
 234:	subs	x2, x21, x25
 238:	add	x20, x2, x22
 23c:	add	x27, x23, x2
 240:	add	x20, x23, x20
 244:	b.ne	108 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x108>  // b.any
 248:	b	1f0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1f0>
 24c:	ret
 250:	add	x20, x20, x0
 254:	mov	x0, x25
 258:	bl	0 <_ZdlPv>
 25c:	b	150 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x150>
 260:	mov	x26, #0x7ffffffffffffffc    	// #9223372036854775804
 264:	b	220 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x220>
 268:	adrp	x0, 0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>
 26c:	add	x0, x0, #0x0
 270:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #88]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #88]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedINS_3msf9MSFLayoutEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	ldrb	w1, [x0, #88]
  10:	tbnz	w1, #1, 64 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEED1Ev+0x64>
  14:	mov	x19, x0
  18:	tbz	w1, #0, 3c <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEED1Ev+0x3c>
  1c:	ldr	x0, [x0]
  20:	cbz	x0, 58 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEED1Ev+0x58>
  24:	ldr	x1, [x0]
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ldr	x1, [x1, #8]
  34:	mov	x16, x1
  38:	br	x16
  3c:	ldr	x0, [x0, #64]
  40:	cbz	x0, 48 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEED1Ev+0x48>
  44:	bl	0 <_ZdlPv>
  48:	ldr	x0, [x19, #8]
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <free>
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
  64:	bl	0 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEED1Ev>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEED1Ev>:
   0:	ldrb	w2, [x0, #8]
   4:	tbnz	w2, #1, 3c <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEED1Ev+0x3c>
   8:	ldr	x0, [x0]
   c:	tbnz	w2, #0, 24 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEED1Ev+0x24>
  10:	cbz	x0, 38 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEED1Ev+0x38>
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #40]
  1c:	mov	x16, x1
  20:	br	x16
  24:	cbz	x0, 38 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEED1Ev+0x38>
  28:	ldr	x1, [x0]
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ret
  3c:	stp	x29, x30, [sp, #-16]!
  40:	mov	x29, sp
  44:	bl	0 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEED1Ev>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x108>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	d8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xd8>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf0>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb0>  // b.none
  98:	ldp	x4, x3, [x1]
  9c:	stp	x4, x3, [x2]
  a0:	add	x1, x1, #0x10
  a4:	cmp	x5, x1
  a8:	add	x2, x2, #0x10
  ac:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x98>  // b.any
  b0:	add	x1, x19, #0x10
  b4:	cmp	x0, x1
  b8:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc0>  // b.none
  bc:	bl	0 <free>
  c0:	str	x20, [x19]
  c4:	str	w21, [x19, #12]
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldr	x21, [sp, #32]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	mov	x0, #0xffffffff0           	// #68719476720
  dc:	mov	w21, #0xffffffff            	// #-1
  e0:	str	x3, [sp, #64]
  e4:	bl	0 <malloc>
  e8:	mov	x20, x0
  ec:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x7c>
  f0:	mov	x20, #0x0                   	// #0
  f4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  f8:	mov	w1, #0x1                   	// #1
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x7c>
 108:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 10c:	mov	w1, #0x1                   	// #1
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 118:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x28>

MSFCommon.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x3, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
   8:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
   c:	mov	x29, sp
  10:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
  14:	add	x3, x3, #0x0
  18:	add	x1, x1, #0x0
  1c:	add	x0, x0, #0x0
  20:	mov	w2, #0x37                  	// #55
  24:	bl	0 <__assert_fail>

0000000000000028 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>:
  28:	stp	x29, x30, [sp, #-64]!
  2c:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
  30:	mov	x29, sp
  34:	stp	x19, x20, [sp, #16]
  38:	mov	x19, x8
  3c:	ldr	x2, [x1]
  40:	ldr	x3, [x0]
  44:	cmp	x3, x2
  48:	b.eq	ac <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x84>  // b.none
  4c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  50:	mov	x20, x0
  54:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
  58:	add	x1, x1, #0x0
  5c:	mov	w2, #0x103                 	// #259
  60:	mov	x0, #0x40                  	// #64
  64:	stp	x1, xzr, [sp, #40]
  68:	strh	w2, [sp, #56]
  6c:	bl	0 <_Znwm>
  70:	mov	x2, x20
  74:	mov	x1, #0x5                   	// #5
  78:	mov	x20, x0
  7c:	add	x3, sp, #0x28
  80:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  84:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
  88:	orr	x0, x20, #0x1
  8c:	str	x0, [x19]
  90:	ldr	x1, [x1]
  94:	add	x1, x1, #0x10
  98:	str	x1, [x20]
  9c:	mov	x0, x19
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x29, x30, [sp], #64
  a8:	ret
  ac:	add	x1, x1, #0x0
  b0:	ldr	x3, [x0, #8]
  b4:	ldr	x2, [x1, #8]
  b8:	cmp	x3, x2
  bc:	b.ne	4c <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x24>  // b.any
  c0:	ldr	x3, [x0, #16]
  c4:	ldr	x2, [x1, #16]
  c8:	cmp	x3, x2
  cc:	b.ne	4c <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x24>  // b.any
  d0:	ldr	x2, [x0, #24]
  d4:	ldr	x1, [x1, #24]
  d8:	cmp	x2, x1
  dc:	b.ne	4c <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x24>  // b.any
  e0:	ldr	w2, [x0, #32]
  e4:	cmp	w2, #0x800
  e8:	b.eq	11c <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xf4>  // b.none
  ec:	b.hi	114 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xec>  // b.pmore
  f0:	sub	w1, w2, #0x200
  f4:	tst	w1, #0xfffffdff
  f8:	b.eq	11c <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xf4>  // b.none
  fc:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 100:	mov	x20, x0
 104:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 108:	mov	w2, #0x103                 	// #259
 10c:	add	x1, x1, #0x0
 110:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x38>
 114:	cmp	w2, #0x1, lsl #12
 118:	b.ne	fc <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xd4>  // b.any
 11c:	ldr	w1, [x0, #44]
 120:	tst	x1, #0x3
 124:	b.eq	140 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x118>  // b.none
 128:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 12c:	mov	x20, x0
 130:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 134:	mov	w2, #0x103                 	// #259
 138:	add	x1, x1, #0x0
 13c:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x38>
 140:	mov	w3, w2
 144:	lsr	w2, w2, #2
 148:	sub	x4, x3, #0x1
 14c:	add	x1, x4, w1, uxtw
 150:	udiv	x1, x1, x3
 154:	mul	x1, x1, x3
 158:	udiv	x1, x1, x3
 15c:	cmp	x2, x1
 160:	b.cc	194 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x16c>  // b.lo, b.ul, b.last
 164:	ldr	w1, [x0, #52]
 168:	cbz	w1, 1ac <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x184>
 16c:	ldr	w2, [x0, #40]
 170:	cmp	w1, w2
 174:	b.cs	1c4 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x19c>  // b.hs, b.nlast
 178:	ldr	w0, [x0, #36]
 17c:	sub	w0, w0, #0x1
 180:	cmp	w0, #0x1
 184:	b.hi	1dc <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x1b4>  // b.pmore
 188:	mov	x0, #0x1                   	// #1
 18c:	str	x0, [x19]
 190:	b	9c <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x74>
 194:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 198:	mov	x20, x0
 19c:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 1a0:	mov	w2, #0x103                 	// #259
 1a4:	add	x1, x1, #0x0
 1a8:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x38>
 1ac:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 1b0:	mov	x20, x0
 1b4:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 1b8:	mov	w2, #0x103                 	// #259
 1bc:	add	x1, x1, #0x0
 1c0:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x38>
 1c4:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 1c8:	mov	x20, x0
 1cc:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 1d0:	mov	w2, #0x103                 	// #259
 1d4:	add	x1, x1, #0x0
 1d8:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x38>
 1dc:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 1e0:	mov	x20, x0
 1e4:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 1e8:	mov	w2, #0x103                 	// #259
 1ec:	add	x1, x1, #0x0
 1f0:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x38>
 1f4:	nop

00000000000001f8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>:
 1f8:	stp	x29, x30, [sp, #-96]!
 1fc:	ands	w2, w2, #0xff
 200:	mov	x29, sp
 204:	stp	x19, x20, [sp, #16]
 208:	add	x19, x8, #0x8
 20c:	stp	x21, x22, [sp, #32]
 210:	stp	x23, x24, [sp, #48]
 214:	mov	x24, x0
 218:	mov	x23, x8
 21c:	stp	x25, x26, [sp, #64]
 220:	and	w25, w1, #0xff
 224:	ldr	x3, [x0]
 228:	str	xzr, [x8, #8]
 22c:	stp	xzr, xzr, [x19, #8]
 230:	add	x5, x3, #0x24
 234:	ldr	w0, [x3, #32]
 238:	ldr	w1, [x3, #40]
 23c:	b.eq	344 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x14c>  // b.none
 240:	ldr	w4, [x3, #36]
 244:	sub	w6, w4, #0x1
 248:	cmp	w6, #0x1
 24c:	b.hi	354 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x15c>  // b.pmore
 250:	mov	w22, #0x3                   	// #3
 254:	sub	w22, w22, w4
 258:	cbnz	w25, 358 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x160>
 25c:	cmp	wzr, w0, lsl #3
 260:	mov	w22, w1
 264:	lsl	w0, w0, #3
 268:	b.eq	3c0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1c8>  // b.none
 26c:	sub	x22, x22, #0x1
 270:	ldr	w20, [x5]
 274:	add	x22, x22, x0
 278:	udiv	x22, x22, x0
 27c:	mul	x22, x22, x0
 280:	udiv	x22, x22, x0
 284:	cbz	w2, 380 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x188>
 288:	sub	w0, w20, #0x1
 28c:	cmp	w0, #0x1
 290:	b.hi	354 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x15c>  // b.pmore
 294:	mov	w0, #0x3                   	// #3
 298:	sub	w20, w0, w20
 29c:	cbz	w22, 318 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x120>
 2a0:	add	x26, sp, #0x58
 2a4:	mov	x3, #0x0                   	// #0
 2a8:	mov	x1, #0x0                   	// #0
 2ac:	mov	w21, #0x0                   	// #0
 2b0:	b	2e4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xec>
 2b4:	ldr	w3, [sp, #88]
 2b8:	add	w21, w21, #0x1
 2bc:	str	w3, [x1]
 2c0:	cmp	w21, w22
 2c4:	ldr	x1, [x19, #8]
 2c8:	ldr	x3, [x24]
 2cc:	add	x1, x1, #0x4
 2d0:	str	x1, [x19, #8]
 2d4:	ldr	w1, [x3, #32]
 2d8:	add	w20, w20, w1
 2dc:	b.eq	318 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x120>  // b.none
 2e0:	ldp	x1, x3, [x19, #8]
 2e4:	str	w20, [x26]
 2e8:	cmp	x1, x3
 2ec:	b.ne	2b4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xbc>  // b.any
 2f0:	mov	x2, x26
 2f4:	mov	x0, x19
 2f8:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 2fc:	add	w21, w21, #0x1
 300:	ldr	x3, [x24]
 304:	cmp	w21, w22
 308:	ldr	w1, [x3, #32]
 30c:	add	w20, w20, w1
 310:	b.ne	2e0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xe8>  // b.any
 314:	nop
 318:	cbz	w25, 394 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x19c>
 31c:	ldr	w0, [x3, #32]
 320:	ldp	x19, x20, [sp, #16]
 324:	ldp	x25, x26, [sp, #64]
 328:	mul	w22, w22, w0
 32c:	str	w22, [x23]
 330:	mov	x0, x23
 334:	ldp	x21, x22, [sp, #32]
 338:	ldp	x23, x24, [sp, #48]
 33c:	ldp	x29, x30, [sp], #96
 340:	ret
 344:	ldr	w22, [x3, #36]
 348:	sub	w4, w22, #0x1
 34c:	cmp	w4, #0x1
 350:	b.ls	258 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x60>  // b.plast
 354:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 358:	sub	w1, w1, w22
 35c:	mov	w4, w0
 360:	cbz	w0, 3c0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1c8>
 364:	sub	x22, x4, #0x1
 368:	ldr	w20, [x5]
 36c:	add	x22, x22, x1
 370:	udiv	x22, x22, x4
 374:	mul	x22, x22, x4
 378:	udiv	x22, x22, x4
 37c:	cbnz	w2, 288 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x90>
 380:	cmp	w20, #0x1
 384:	b.eq	29c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xa4>  // b.none
 388:	cmp	w20, #0x2
 38c:	b.eq	29c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xa4>  // b.none
 390:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 394:	ldr	w22, [x3, #40]
 398:	mov	x0, x23
 39c:	ldp	x19, x20, [sp, #16]
 3a0:	add	x22, x22, #0x7
 3a4:	ldp	x25, x26, [sp, #64]
 3a8:	ubfx	x22, x22, #3, #32
 3ac:	str	w22, [x23]
 3b0:	ldp	x21, x22, [sp, #32]
 3b4:	ldp	x23, x24, [sp, #48]
 3b8:	ldp	x29, x30, [sp], #96
 3bc:	ret
 3c0:	adrp	x3, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 3c4:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 3c8:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 3cc:	add	x3, x3, #0x0
 3d0:	add	x1, x1, #0x0
 3d4:	add	x0, x0, #0x0
 3d8:	mov	w2, #0x2ce                 	// #718
 3dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv>:
   0:	adrp	x3, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	adrp	x2, 0 <_ZN4llvm11StringError2IDE>
   8:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   c:	ldr	x3, [x3]
  10:	ldr	x2, [x2]
  14:	cmp	x1, x3
  18:	ldr	x0, [x0]
  1c:	ccmp	x1, x2, #0x4, ne  // ne = any
  20:	ccmp	x1, x0, #0x4, ne  // ne = any
  24:	cset	w0, eq  // eq = none
  28:	ret

Disassembly of section .text._ZN4llvm3msf8MSFErrorD2Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD1Ev>:
   0:	adrp	x2, 0 <_ZTVN4llvm11StringErrorE>
   4:	mov	x1, x0
   8:	add	x3, x0, #0x18
   c:	ldr	x2, [x2]
  10:	ldr	x0, [x0, #8]
  14:	add	x2, x2, #0x10
  18:	str	x2, [x1]
  1c:	cmp	x0, x3
  20:	b.eq	28 <_ZN4llvm3msf8MSFErrorD1Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm3msf8MSFErrorD0Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZTVN4llvm11StringErrorE>
   8:	add	x2, x0, #0x18
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #8]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3msf8MSFErrorD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x19
  38:	mov	x1, #0x40                  	// #64
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
   8:	mov	w3, #0x1                   	// #1
   c:	mov	x29, sp
  10:	ldr	x2, [x0]
  14:	strb	wzr, [sp, #96]
  18:	ldr	x1, [x1]
  1c:	stp	x21, x22, [sp, #32]
  20:	add	x21, sp, #0x50
  24:	ldr	x2, [x2, #16]
  28:	add	x4, x21, #0x10
  2c:	add	x1, x1, #0x10
  30:	stp	x19, x20, [sp, #16]
  34:	mov	x19, x8
  38:	str	x23, [sp, #48]
  3c:	add	x23, sp, #0x70
  40:	stp	x4, xzr, [sp, #80]
  44:	stp	x1, xzr, [sp, #112]
  48:	mov	x1, x23
  4c:	stp	xzr, xzr, [sp, #128]
  50:	str	w3, [sp, #144]
  54:	str	x21, [sp, #152]
  58:	blr	x2
  5c:	ldr	x0, [sp, #120]
  60:	ldr	x1, [sp, #136]
  64:	cmp	x1, x0
  68:	b.eq	74 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x74>  // b.none
  6c:	mov	x0, x23
  70:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  74:	ldr	x1, [sp, #152]
  78:	add	x0, x19, #0x10
  7c:	ldr	x20, [x1, #8]
  80:	str	x0, [x19]
  84:	ldr	x22, [x1]
  88:	cmn	x22, x20
  8c:	ccmp	x22, #0x0, #0x0, ne  // ne = any
  90:	b.eq	128 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x128>  // b.none
  94:	str	x20, [sp, #72]
  98:	cmp	x20, #0xf
  9c:	b.hi	f4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xf4>  // b.pmore
  a0:	cmp	x20, #0x1
  a4:	b.ne	ec <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xec>  // b.any
  a8:	ldrb	w1, [x22]
  ac:	strb	w1, [x19, #16]
  b0:	str	x20, [x19, #8]
  b4:	add	x21, x21, #0x10
  b8:	strb	wzr, [x0, x20]
  bc:	mov	x0, x23
  c0:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  c4:	ldr	x0, [sp, #80]
  c8:	cmp	x0, x21
  cc:	b.eq	d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>  // b.none
  d0:	bl	0 <_ZdlPv>
  d4:	mov	x0, x19
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldr	x23, [sp, #48]
  e4:	ldp	x29, x30, [sp], #160
  e8:	ret
  ec:	cbz	x20, b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
  f0:	b	110 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x110>
  f4:	add	x1, sp, #0x48
  f8:	mov	x0, x19
  fc:	mov	x2, #0x0                   	// #0
 100:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 104:	ldr	x1, [sp, #72]
 108:	str	x0, [x19]
 10c:	str	x1, [x19, #16]
 110:	mov	x2, x20
 114:	mov	x1, x22
 118:	bl	0 <memcpy>
 11c:	ldr	x0, [x19]
 120:	ldr	x20, [sp, #72]
 124:	b	b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
 128:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x1fffffffffffffff    	// #2305843009213693951
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #2
  30:	b.eq	10c <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #2
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffffc    	// #9223372036854775804
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	w0, [x22]
  6c:	add	x22, x26, #0x4
  70:	str	w0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd0>
 104:	mov	x25, #0x4                   	// #4
 108:	b	58 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #2
 124:	b	58 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>

MSFError.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>:
   0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
   4:	add	x0, x0, #0x0
   8:	ret
   c:	nop

0000000000000010 <_ZN12_GLOBAL__N_116MSFErrorCategoryD1Ev>:
  10:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  14:	add	x1, x1, #0x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	b	0 <_ZNSt3_V214error_categoryD2Ev>
  24:	nop

0000000000000028 <_ZN12_GLOBAL__N_116MSFErrorCategoryD0Ev>:
  28:	stp	x29, x30, [sp, #-32]!
  2c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  30:	add	x1, x1, #0x0
  34:	mov	x29, sp
  38:	add	x1, x1, #0x10
  3c:	str	x19, [sp, #16]
  40:	str	x1, [x0]
  44:	mov	x19, x0
  48:	bl	0 <_ZNSt3_V214error_categoryD2Ev>
  4c:	mov	x0, x19
  50:	mov	x1, #0x8                   	// #8
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZdlPvm>

0000000000000060 <_ZN4llvm14object_creatorIN12_GLOBAL__N_116MSFErrorCategoryEE4callEv>:
  60:	stp	x29, x30, [sp, #-16]!
  64:	mov	x0, #0x8                   	// #8
  68:	mov	x29, sp
  6c:	bl	0 <_Znwm>
  70:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  74:	add	x1, x1, #0x0
  78:	add	x1, x1, #0x10
  7c:	str	x1, [x0]
  80:	ldp	x29, x30, [sp], #16
  84:	ret

0000000000000088 <_ZN4llvm14object_deleterIN12_GLOBAL__N_116MSFErrorCategoryEE4callEPv>:
  88:	cbz	x0, c4 <_ZN4llvm14object_deleterIN12_GLOBAL__N_116MSFErrorCategoryEE4callEPv+0x3c>
  8c:	stp	x29, x30, [sp, #-32]!
  90:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  94:	add	x1, x1, #0x0
  98:	mov	x29, sp
  9c:	add	x1, x1, #0x10
  a0:	str	x19, [sp, #16]
  a4:	str	x1, [x0]
  a8:	mov	x19, x0
  ac:	bl	0 <_ZNSt3_V214error_categoryD2Ev>
  b0:	mov	x0, x19
  b4:	mov	x1, #0x8                   	// #8
  b8:	ldr	x19, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	b	0 <_ZdlPvm>
  c4:	ret

00000000000000c8 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi>:
  c8:	stp	x29, x30, [sp, #-48]!
  cc:	cmp	w1, #0x4
  d0:	mov	x29, sp
  d4:	str	x19, [sp, #16]
  d8:	mov	x19, x8
  dc:	b.eq	250 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x188>  // b.none
  e0:	b.gt	1d4 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x10c>
  e4:	cmp	w1, #0x2
  e8:	b.eq	2bc <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x1f4>  // b.none
  ec:	cmp	w1, #0x3
  f0:	b.ne	160 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x98>  // b.any
  f4:	add	x0, x8, #0x10
  f8:	mov	x3, #0x25                  	// #37
  fc:	str	x0, [x8]
 100:	add	x1, sp, #0x28
 104:	mov	x0, x8
 108:	mov	x2, #0x0                   	// #0
 10c:	str	x3, [sp, #40]
 110:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 114:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 118:	add	x1, x1, #0x0
 11c:	ldr	x2, [sp, #40]
 120:	str	x0, [x19]
 124:	str	x2, [x19, #16]
 128:	ldp	x2, x3, [x1, #16]
 12c:	stp	x2, x3, [x0, #16]
 130:	ldp	x2, x3, [x1]
 134:	stp	x2, x3, [x0]
 138:	ldur	x1, [x1, #29]
 13c:	stur	x1, [x0, #29]
 140:	ldr	x1, [x19]
 144:	ldr	x0, [sp, #40]
 148:	str	x0, [x19, #8]
 14c:	strb	wzr, [x1, x0]
 150:	mov	x0, x19
 154:	ldr	x19, [sp, #16]
 158:	ldp	x29, x30, [sp], #48
 15c:	ret
 160:	cmp	w1, #0x1
 164:	b.ne	364 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x29c>  // b.any
 168:	add	x0, x8, #0x10
 16c:	mov	x3, #0x1e                  	// #30
 170:	str	x0, [x8]
 174:	add	x1, sp, #0x28
 178:	mov	x0, x8
 17c:	mov	x2, #0x0                   	// #0
 180:	str	x3, [sp, #40]
 184:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 188:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 18c:	add	x1, x1, #0x0
 190:	ldr	x2, [sp, #40]
 194:	str	x0, [x19]
 198:	str	x2, [x19, #16]
 19c:	ldr	x2, [x1, #16]
 1a0:	str	x2, [x0, #16]
 1a4:	ldp	x2, x3, [x1]
 1a8:	stp	x2, x3, [x0]
 1ac:	ldur	x1, [x1, #22]
 1b0:	stur	x1, [x0, #22]
 1b4:	ldr	x1, [x19]
 1b8:	ldr	x0, [sp, #40]
 1bc:	str	x0, [x19, #8]
 1c0:	strb	wzr, [x1, x0]
 1c4:	mov	x0, x19
 1c8:	ldr	x19, [sp, #16]
 1cc:	ldp	x29, x30, [sp], #48
 1d0:	ret
 1d4:	cmp	w1, #0x5
 1d8:	b.eq	338 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x270>  // b.none
 1dc:	cmp	w1, #0x6
 1e0:	b.ne	364 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x29c>  // b.any
 1e4:	add	x0, x8, #0x10
 1e8:	mov	x3, #0x1c                  	// #28
 1ec:	str	x0, [x8]
 1f0:	add	x1, sp, #0x28
 1f4:	mov	x0, x8
 1f8:	mov	x2, #0x0                   	// #0
 1fc:	str	x3, [sp, #40]
 200:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 204:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 208:	add	x1, x1, #0x0
 20c:	ldr	x2, [sp, #40]
 210:	str	x2, [x19, #16]
 214:	ldp	x2, x3, [x1]
 218:	str	x0, [x19]
 21c:	stp	x2, x3, [x0]
 220:	ldr	w2, [x1, #24]
 224:	ldr	x1, [x1, #16]
 228:	str	x1, [x0, #16]
 22c:	str	w2, [x0, #24]
 230:	ldr	x1, [x19]
 234:	ldr	x0, [sp, #40]
 238:	str	x0, [x19, #8]
 23c:	strb	wzr, [x1, x0]
 240:	mov	x0, x19
 244:	ldr	x19, [sp, #16]
 248:	ldp	x29, x30, [sp], #48
 24c:	ret
 250:	add	x0, x8, #0x10
 254:	mov	x3, #0x24                  	// #36
 258:	str	x0, [x8]
 25c:	add	x1, sp, #0x28
 260:	mov	x0, x8
 264:	mov	x2, #0x0                   	// #0
 268:	str	x3, [sp, #40]
 26c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 270:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 274:	add	x1, x1, #0x0
 278:	ldr	x2, [sp, #40]
 27c:	str	x2, [x19, #16]
 280:	ldp	x2, x3, [x1]
 284:	str	x0, [x19]
 288:	stp	x2, x3, [x0]
 28c:	ldr	w2, [x1, #32]
 290:	ldp	x4, x5, [x1, #16]
 294:	stp	x4, x5, [x0, #16]
 298:	str	w2, [x0, #32]
 29c:	ldr	x1, [x19]
 2a0:	ldr	x0, [sp, #40]
 2a4:	str	x0, [x19, #8]
 2a8:	strb	wzr, [x1, x0]
 2ac:	mov	x0, x19
 2b0:	ldr	x19, [sp, #16]
 2b4:	ldp	x29, x30, [sp], #48
 2b8:	ret
 2bc:	add	x0, x8, #0x10
 2c0:	mov	x3, #0x45                  	// #69
 2c4:	str	x0, [x8]
 2c8:	add	x1, sp, #0x28
 2cc:	mov	x0, x8
 2d0:	mov	x2, #0x0                   	// #0
 2d4:	str	x3, [sp, #40]
 2d8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 2dc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 2e0:	add	x1, x1, #0x0
 2e4:	ldr	x2, [sp, #40]
 2e8:	str	x0, [x19]
 2ec:	str	x2, [x19, #16]
 2f0:	ldp	x2, x3, [x1, #48]
 2f4:	stp	x2, x3, [x0, #48]
 2f8:	ldp	x2, x3, [x1]
 2fc:	stp	x2, x3, [x0]
 300:	ldp	x2, x3, [x1, #16]
 304:	stp	x2, x3, [x0, #16]
 308:	ldp	x2, x3, [x1, #32]
 30c:	stp	x2, x3, [x0, #32]
 310:	ldur	x1, [x1, #61]
 314:	stur	x1, [x0, #61]
 318:	ldr	x1, [x19]
 31c:	ldr	x0, [sp, #40]
 320:	str	x0, [x19, #8]
 324:	strb	wzr, [x1, x0]
 328:	mov	x0, x19
 32c:	ldr	x19, [sp, #16]
 330:	ldp	x29, x30, [sp], #48
 334:	ret
 338:	add	x0, x8, #0x10
 33c:	mov	x3, #0x24                  	// #36
 340:	str	x0, [x8]
 344:	add	x1, sp, #0x28
 348:	mov	x0, x8
 34c:	mov	x2, #0x0                   	// #0
 350:	str	x3, [sp, #40]
 354:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 358:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 35c:	add	x1, x1, #0x0
 360:	b	278 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x1b0>
 364:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 368:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 36c:	add	x1, x1, #0x0
 370:	add	x0, x0, #0x0
 374:	mov	w2, #0x27                  	// #39
 378:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 37c:	nop

0000000000000380 <_ZN4llvm3msf14MSFErrCategoryEv>:
 380:	stp	x29, x30, [sp, #-32]!
 384:	mov	x29, sp
 388:	str	x19, [sp, #16]
 38c:	adrp	x19, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 390:	add	x0, x19, #0x0
 394:	ldar	x1, [x0]
 398:	cbz	x1, 3b0 <_ZN4llvm3msf14MSFErrCategoryEv+0x30>
 39c:	add	x19, x19, #0x0
 3a0:	ldr	x0, [x19]
 3a4:	ldr	x19, [sp, #16]
 3a8:	ldp	x29, x30, [sp], #32
 3ac:	ret
 3b0:	add	x19, x19, #0x0
 3b4:	adrp	x2, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 3b8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 3bc:	add	x2, x2, #0x0
 3c0:	add	x1, x1, #0x0
 3c4:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
 3c8:	ldr	x0, [x19]
 3cc:	ldr	x19, [sp, #16]
 3d0:	ldp	x29, x30, [sp], #32
 3d4:	ret
