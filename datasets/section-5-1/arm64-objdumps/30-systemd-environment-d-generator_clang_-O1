
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//30-systemd-environment-d-generator_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210ce0 <_start>:
  210ce0:	mov	x29, #0x0                   	// #0
  210ce4:	mov	x30, #0x0                   	// #0
  210ce8:	mov	x5, x0
  210cec:	ldr	x1, [sp]
  210cf0:	add	x2, sp, #0x8
  210cf4:	mov	x6, sp
  210cf8:	movz	x0, #0x0, lsl #48
  210cfc:	movk	x0, #0x0, lsl #32
  210d00:	movk	x0, #0x21, lsl #16
  210d04:	movk	x0, #0xe30
  210d08:	movz	x3, #0x0, lsl #48
  210d0c:	movk	x3, #0x0, lsl #32
  210d10:	movk	x3, #0x21, lsl #16
  210d14:	movk	x3, #0x1248
  210d18:	movz	x4, #0x0, lsl #48
  210d1c:	movk	x4, #0x0, lsl #32
  210d20:	movk	x4, #0x21, lsl #16
  210d24:	movk	x4, #0x12c8
  210d28:	bl	211310 <__libc_start_main@plt>
  210d2c:	bl	211320 <abort@plt>

0000000000210d30 <call_weak_fn>:
  210d30:	adrp	x0, 221000 <strv_join_prefix@plt+0xfbc0>
  210d34:	ldr	x0, [x0, #1584]
  210d38:	cbz	x0, 210d40 <call_weak_fn+0x10>
  210d3c:	b	211330 <__gmon_start__@plt>
  210d40:	ret

0000000000210d44 <deregister_tm_clones>:
  210d44:	adrp	x0, 231000 <_DYNAMIC+0xfba0>
  210d48:	add	x0, x0, #0x6f0
  210d4c:	adrp	x1, 231000 <_DYNAMIC+0xfba0>
  210d50:	add	x1, x1, #0x6f0
  210d54:	cmp	x0, x1
  210d58:	b.eq	210d8c <deregister_tm_clones+0x48>  // b.none
  210d5c:	stp	x29, x30, [sp, #-32]!
  210d60:	mov	x29, sp
  210d64:	adrp	x0, 200000 <__FRAME_END__-0xbe8>
  210d68:	ldr	x0, [x0, #2576]
  210d6c:	str	x0, [sp, #24]
  210d70:	mov	x1, x0
  210d74:	cbz	x1, 210d84 <deregister_tm_clones+0x40>
  210d78:	adrp	x0, 231000 <_DYNAMIC+0xfba0>
  210d7c:	add	x0, x0, #0x6f0
  210d80:	blr	x1
  210d84:	ldp	x29, x30, [sp], #32
  210d88:	ret
  210d8c:	ret

0000000000210d90 <register_tm_clones>:
  210d90:	adrp	x0, 231000 <_DYNAMIC+0xfba0>
  210d94:	add	x0, x0, #0x6f0
  210d98:	adrp	x1, 231000 <_DYNAMIC+0xfba0>
  210d9c:	add	x1, x1, #0x6f0
  210da0:	sub	x0, x0, x1
  210da4:	lsr	x1, x0, #63
  210da8:	add	x0, x1, x0, asr #3
  210dac:	cmp	xzr, x0, asr #1
  210db0:	b.eq	210de8 <register_tm_clones+0x58>  // b.none
  210db4:	stp	x29, x30, [sp, #-32]!
  210db8:	mov	x29, sp
  210dbc:	asr	x1, x0, #1
  210dc0:	adrp	x0, 200000 <__FRAME_END__-0xbe8>
  210dc4:	ldr	x0, [x0, #2584]
  210dc8:	str	x0, [sp, #24]
  210dcc:	mov	x2, x0
  210dd0:	cbz	x2, 210de0 <register_tm_clones+0x50>
  210dd4:	adrp	x0, 231000 <_DYNAMIC+0xfba0>
  210dd8:	add	x0, x0, #0x6f0
  210ddc:	blr	x2
  210de0:	ldp	x29, x30, [sp], #32
  210de4:	ret
  210de8:	ret

0000000000210dec <__do_global_dtors_aux>:
  210dec:	adrp	x0, 231000 <_DYNAMIC+0xfba0>
  210df0:	ldrb	w0, [x0, #1776]
  210df4:	cbnz	w0, 210e18 <__do_global_dtors_aux+0x2c>
  210df8:	stp	x29, x30, [sp, #-16]!
  210dfc:	mov	x29, sp
  210e00:	bl	210d44 <deregister_tm_clones>
  210e04:	adrp	x0, 231000 <_DYNAMIC+0xfba0>
  210e08:	mov	w1, #0x1                   	// #1
  210e0c:	strb	w1, [x0, #1776]
  210e10:	ldp	x29, x30, [sp], #16
  210e14:	ret
  210e18:	ret

0000000000210e1c <frame_dummy>:
  210e1c:	stp	x29, x30, [sp, #-16]!
  210e20:	mov	x29, sp
  210e24:	bl	210d90 <register_tm_clones>
  210e28:	ldp	x29, x30, [sp], #16
  210e2c:	ret

0000000000210e30 <main>:
  210e30:	stp	x29, x30, [sp, #-32]!
  210e34:	str	x19, [sp, #16]
  210e38:	mov	w19, w0
  210e3c:	mov	w0, wzr
  210e40:	mov	x29, sp
  210e44:	bl	211340 <log_parse_environment_realm@plt>
  210e48:	bl	211350 <log_open@plt>
  210e4c:	cmp	w19, #0x2
  210e50:	b.lt	210e94 <main+0x64>  // b.tstop
  210e54:	mov	w0, wzr
  210e58:	bl	211360 <log_get_max_level_realm@plt>
  210e5c:	cmp	w0, #0x3
  210e60:	b.lt	210e8c <main+0x5c>  // b.tstop
  210e64:	adrp	x2, 200000 <__FRAME_END__-0xbe8>
  210e68:	adrp	x4, 200000 <__FRAME_END__-0xbe8>
  210e6c:	adrp	x5, 200000 <__FRAME_END__-0xbe8>
  210e70:	add	x2, x2, #0xa23
  210e74:	add	x4, x4, #0xb65
  210e78:	add	x5, x5, #0xa59
  210e7c:	mov	w0, #0x3                   	// #3
  210e80:	mov	w3, #0x5a                  	// #90
  210e84:	mov	w1, wzr
  210e88:	bl	211370 <log_internal_realm@plt>
  210e8c:	mov	w0, #0x1                   	// #1
  210e90:	b	210edc <main+0xac>
  210e94:	bl	210ee8 <load_and_print>
  210e98:	mov	w19, w0
  210e9c:	tbz	w0, #31, 210ed8 <main+0xa8>
  210ea0:	mov	w0, wzr
  210ea4:	bl	211360 <log_get_max_level_realm@plt>
  210ea8:	cmp	w0, #0x3
  210eac:	b.lt	210ed8 <main+0xa8>  // b.tstop
  210eb0:	adrp	x2, 200000 <__FRAME_END__-0xbe8>
  210eb4:	adrp	x4, 200000 <__FRAME_END__-0xbe8>
  210eb8:	adrp	x5, 200000 <__FRAME_END__-0xbe8>
  210ebc:	add	x2, x2, #0xa23
  210ec0:	add	x4, x4, #0xb65
  210ec4:	add	x5, x5, #0xb40
  210ec8:	mov	w0, #0x3                   	// #3
  210ecc:	mov	w3, #0x60                  	// #96
  210ed0:	mov	w1, w19
  210ed4:	bl	211370 <log_internal_realm@plt>
  210ed8:	lsr	w0, w19, #31
  210edc:	ldr	x19, [sp, #16]
  210ee0:	ldp	x29, x30, [sp], #32
  210ee4:	ret

0000000000210ee8 <load_and_print>:
  210ee8:	sub	sp, sp, #0x60
  210eec:	stp	x29, x30, [sp, #32]
  210ef0:	add	x29, sp, #0x20
  210ef4:	sub	x0, x29, #0x8
  210ef8:	stp	x24, x23, [sp, #48]
  210efc:	stp	x22, x21, [sp, #64]
  210f00:	stp	x20, x19, [sp, #80]
  210f04:	stur	xzr, [x29, #-8]
  210f08:	stp	xzr, xzr, [sp, #8]
  210f0c:	bl	2110d0 <environment_dirs>
  210f10:	tbnz	w0, #31, 211054 <load_and_print+0x16c>
  210f14:	ldur	x4, [x29, #-8]
  210f18:	adrp	x1, 200000 <__FRAME_END__-0xbe8>
  210f1c:	add	x1, x1, #0xb21
  210f20:	add	x0, sp, #0x10
  210f24:	mov	x2, xzr
  210f28:	mov	w3, wzr
  210f2c:	bl	211380 <conf_files_list_strv@plt>
  210f30:	tbnz	w0, #31, 211054 <load_and_print+0x16c>
  210f34:	ldr	x8, [sp, #16]
  210f38:	cbz	x8, 210fb0 <load_and_print+0xc8>
  210f3c:	ldr	x22, [x8]
  210f40:	cbz	x22, 210fb0 <load_and_print+0xc8>
  210f44:	adrp	x19, 200000 <__FRAME_END__-0xbe8>
  210f48:	adrp	x20, 200000 <__FRAME_END__-0xbe8>
  210f4c:	adrp	x21, 200000 <__FRAME_END__-0xbe8>
  210f50:	add	x23, x8, #0x8
  210f54:	add	x19, x19, #0xa23
  210f58:	add	x20, x20, #0xb01
  210f5c:	add	x21, x21, #0xb6a
  210f60:	mov	w0, wzr
  210f64:	bl	211360 <log_get_max_level_realm@plt>
  210f68:	cmp	w0, #0x7
  210f6c:	b.lt	210f90 <load_and_print+0xa8>  // b.tstop
  210f70:	mov	w0, #0x7                   	// #7
  210f74:	mov	w3, #0x3b                  	// #59
  210f78:	mov	w1, wzr
  210f7c:	mov	x2, x19
  210f80:	mov	x4, x20
  210f84:	mov	x5, x21
  210f88:	mov	x6, x22
  210f8c:	bl	211370 <log_internal_realm@plt>
  210f90:	ldur	x2, [x23, #-8]
  210f94:	add	x0, sp, #0x8
  210f98:	mov	x1, xzr
  210f9c:	bl	211390 <merge_env_file@plt>
  210fa0:	cmn	w0, #0xc
  210fa4:	b.eq	21108c <load_and_print+0x1a4>  // b.none
  210fa8:	ldr	x22, [x23], #8
  210fac:	cbnz	x22, 210f60 <load_and_print+0x78>
  210fb0:	ldr	x24, [sp, #8]
  210fb4:	cbz	x24, 21104c <load_and_print+0x164>
  210fb8:	ldr	x8, [x24]
  210fbc:	cbz	x8, 21104c <load_and_print+0x164>
  210fc0:	adrp	x20, 200000 <__FRAME_END__-0xbe8>
  210fc4:	adrp	x21, 200000 <__FRAME_END__-0xbe8>
  210fc8:	adrp	x22, 200000 <__FRAME_END__-0xbe8>
  210fcc:	add	x20, x20, #0xa23
  210fd0:	add	x21, x21, #0xb01
  210fd4:	add	x22, x22, #0xb78
  210fd8:	str	xzr, [sp]
  210fdc:	ldr	x0, [x24]
  210fe0:	mov	w1, #0x3d                  	// #61
  210fe4:	bl	2113a0 <strchr@plt>
  210fe8:	cbz	x0, 211094 <load_and_print+0x1ac>
  210fec:	mov	x23, x0
  210ff0:	add	x0, x0, #0x1
  210ff4:	mov	w1, #0x1                   	// #1
  210ff8:	bl	2113b0 <shell_maybe_quote@plt>
  210ffc:	str	x0, [sp]
  211000:	cbz	x0, 211020 <load_and_print+0x138>
  211004:	ldr	x2, [x24]
  211008:	mov	x3, x0
  21100c:	mov	x0, x22
  211010:	sub	w1, w23, w2
  211014:	bl	2113c0 <printf@plt>
  211018:	mov	w23, #0x1                   	// #1
  21101c:	b	211038 <load_and_print+0x150>
  211020:	mov	w2, #0x4b                  	// #75
  211024:	mov	x1, x20
  211028:	mov	x3, x21
  21102c:	bl	2113d0 <log_oom_internal@plt>
  211030:	mov	w19, w0
  211034:	mov	w23, wzr
  211038:	mov	x0, sp
  21103c:	bl	2111fc <freep>
  211040:	tbz	w23, #0, 211058 <load_and_print+0x170>
  211044:	ldr	x8, [x24, #8]!
  211048:	cbnz	x8, 210fd8 <load_and_print+0xf0>
  21104c:	mov	w19, wzr
  211050:	b	211058 <load_and_print+0x170>
  211054:	mov	w19, w0
  211058:	add	x0, sp, #0x8
  21105c:	bl	2110b4 <strv_freep>
  211060:	add	x0, sp, #0x10
  211064:	bl	2110b4 <strv_freep>
  211068:	sub	x0, x29, #0x8
  21106c:	bl	2110b4 <strv_freep>
  211070:	mov	w0, w19
  211074:	ldp	x20, x19, [sp, #80]
  211078:	ldp	x22, x21, [sp, #64]
  21107c:	ldp	x24, x23, [sp, #48]
  211080:	ldp	x29, x30, [sp, #32]
  211084:	add	sp, sp, #0x60
  211088:	ret
  21108c:	mov	w19, #0xfffffff4            	// #-12
  211090:	b	211058 <load_and_print+0x170>
  211094:	adrp	x1, 200000 <__FRAME_END__-0xbe8>
  211098:	adrp	x2, 200000 <__FRAME_END__-0xbe8>
  21109c:	adrp	x4, 200000 <__FRAME_END__-0xbe8>
  2110a0:	add	x1, x1, #0xaba
  2110a4:	add	x2, x2, #0xa23
  2110a8:	add	x4, x4, #0xb27
  2110ac:	mov	w3, #0x47                  	// #71
  2110b0:	bl	2113e0 <log_assert_failed_realm@plt>

00000000002110b4 <strv_freep>:
  2110b4:	stp	x29, x30, [sp, #-16]!
  2110b8:	ldr	x0, [x0]
  2110bc:	mov	x29, sp
  2110c0:	cbz	x0, 2110c8 <strv_freep+0x14>
  2110c4:	bl	2113f0 <strv_free@plt>
  2110c8:	ldp	x29, x30, [sp], #16
  2110cc:	ret

00000000002110d0 <environment_dirs>:
  2110d0:	sub	sp, sp, #0x40
  2110d4:	stp	x20, x19, [sp, #48]
  2110d8:	mov	x19, x0
  2110dc:	adrp	x0, 200000 <__FRAME_END__-0xbe8>
  2110e0:	adrp	x1, 200000 <__FRAME_END__-0xbe8>
  2110e4:	adrp	x2, 200000 <__FRAME_END__-0xbe8>
  2110e8:	adrp	x3, 200000 <__FRAME_END__-0xbe8>
  2110ec:	stp	x29, x30, [sp, #32]
  2110f0:	add	x29, sp, #0x20
  2110f4:	add	x0, x0, #0xb81
  2110f8:	add	x1, x1, #0xb94
  2110fc:	add	x2, x2, #0xae4
  211100:	add	x3, x3, #0xabf
  211104:	mov	x4, xzr
  211108:	mov	x5, xzr
  21110c:	stur	xzr, [x29, #-8]
  211110:	str	xzr, [sp, #16]
  211114:	bl	211400 <strv_new_internal@plt>
  211118:	stur	x0, [x29, #-8]
  21111c:	cbz	x0, 211174 <environment_dirs+0xa4>
  211120:	adrp	x1, 200000 <__FRAME_END__-0xbe8>
  211124:	add	x1, x1, #0xad6
  211128:	add	x2, sp, #0x10
  21112c:	mov	w0, #0x14                  	// #20
  211130:	bl	211410 <sd_path_home@plt>
  211134:	tbnz	w0, #31, 21116c <environment_dirs+0x9c>
  211138:	ldr	x1, [sp, #16]
  21113c:	sub	x0, x29, #0x8
  211140:	bl	211420 <strv_extend_front@plt>
  211144:	tbnz	w0, #31, 21116c <environment_dirs+0x9c>
  211148:	mov	w0, wzr
  21114c:	bl	211360 <log_get_max_level_realm@plt>
  211150:	cmp	w0, #0x7
  211154:	b.ge	21119c <environment_dirs+0xcc>  // b.tcont
  211158:	ldur	x8, [x29, #-8]
  21115c:	mov	w20, wzr
  211160:	stur	xzr, [x29, #-8]
  211164:	str	x8, [x19]
  211168:	b	211178 <environment_dirs+0xa8>
  21116c:	mov	w20, w0
  211170:	b	211178 <environment_dirs+0xa8>
  211174:	mov	w20, #0xfffffff4            	// #-12
  211178:	add	x0, sp, #0x10
  21117c:	bl	2111fc <freep>
  211180:	sub	x0, x29, #0x8
  211184:	bl	2110b4 <strv_freep>
  211188:	mov	w0, w20
  21118c:	ldp	x20, x19, [sp, #48]
  211190:	ldp	x29, x30, [sp, #32]
  211194:	add	sp, sp, #0x40
  211198:	ret
  21119c:	ldur	x0, [x29, #-8]
  2111a0:	bl	211214 <strv_join>
  2111a4:	mov	x20, x0
  2111a8:	str	x0, [sp, #8]
  2111ac:	mov	w0, wzr
  2111b0:	bl	211360 <log_get_max_level_realm@plt>
  2111b4:	cmp	w0, #0x7
  2111b8:	b.lt	2111f0 <environment_dirs+0x120>  // b.tstop
  2111bc:	mov	x0, x20
  2111c0:	bl	211234 <strna>
  2111c4:	adrp	x2, 200000 <__FRAME_END__-0xbe8>
  2111c8:	adrp	x4, 200000 <__FRAME_END__-0xbe8>
  2111cc:	adrp	x5, 200000 <__FRAME_END__-0xbe8>
  2111d0:	mov	x6, x0
  2111d4:	add	x2, x2, #0xa23
  2111d8:	add	x4, x4, #0xb10
  2111dc:	add	x5, x5, #0xa7a
  2111e0:	mov	w0, #0x7                   	// #7
  2111e4:	mov	w3, #0x23                  	// #35
  2111e8:	mov	w1, wzr
  2111ec:	bl	211370 <log_internal_realm@plt>
  2111f0:	add	x0, sp, #0x8
  2111f4:	bl	2111fc <freep>
  2111f8:	b	211158 <environment_dirs+0x88>

00000000002111fc <freep>:
  2111fc:	stp	x29, x30, [sp, #-16]!
  211200:	ldr	x0, [x0]
  211204:	mov	x29, sp
  211208:	bl	211430 <free@plt>
  21120c:	ldp	x29, x30, [sp], #16
  211210:	ret

0000000000211214 <strv_join>:
  211214:	stp	x29, x30, [sp, #-16]!
  211218:	adrp	x1, 200000 <__FRAME_END__-0xbe8>
  21121c:	add	x1, x1, #0xabc
  211220:	mov	x2, xzr
  211224:	mov	x29, sp
  211228:	bl	211440 <strv_join_prefix@plt>
  21122c:	ldp	x29, x30, [sp], #16
  211230:	ret

0000000000211234 <strna>:
  211234:	adrp	x8, 200000 <__FRAME_END__-0xbe8>
  211238:	add	x8, x8, #0xb61
  21123c:	cmp	x0, #0x0
  211240:	csel	x0, x8, x0, eq  // eq = none
  211244:	ret

0000000000211248 <__libc_csu_init>:
  211248:	stp	x29, x30, [sp, #-64]!
  21124c:	mov	x29, sp
  211250:	stp	x19, x20, [sp, #16]
  211254:	adrp	x20, 221000 <strv_join_prefix@plt+0xfbc0>
  211258:	add	x20, x20, #0x460
  21125c:	stp	x21, x22, [sp, #32]
  211260:	adrp	x21, 221000 <strv_join_prefix@plt+0xfbc0>
  211264:	add	x21, x21, #0x458
  211268:	sub	x20, x20, x21
  21126c:	mov	w22, w0
  211270:	stp	x23, x24, [sp, #48]
  211274:	mov	x23, x1
  211278:	mov	x24, x2
  21127c:	bl	2112cc <_init>
  211280:	cmp	xzr, x20, asr #3
  211284:	b.eq	2112b0 <__libc_csu_init+0x68>  // b.none
  211288:	asr	x20, x20, #3
  21128c:	mov	x19, #0x0                   	// #0
  211290:	ldr	x3, [x21, x19, lsl #3]
  211294:	mov	x2, x24
  211298:	add	x19, x19, #0x1
  21129c:	mov	x1, x23
  2112a0:	mov	w0, w22
  2112a4:	blr	x3
  2112a8:	cmp	x20, x19
  2112ac:	b.ne	211290 <__libc_csu_init+0x48>  // b.any
  2112b0:	ldp	x19, x20, [sp, #16]
  2112b4:	ldp	x21, x22, [sp, #32]
  2112b8:	ldp	x23, x24, [sp, #48]
  2112bc:	ldp	x29, x30, [sp], #64
  2112c0:	ret
  2112c4:	nop

00000000002112c8 <__libc_csu_fini>:
  2112c8:	ret

Disassembly of section .init:

00000000002112cc <_init>:
  2112cc:	stp	x29, x30, [sp, #-16]!
  2112d0:	mov	x29, sp
  2112d4:	bl	210d30 <call_weak_fn>
  2112d8:	ldp	x29, x30, [sp], #16
  2112dc:	ret

Disassembly of section .fini:

00000000002112e0 <_fini>:
  2112e0:	stp	x29, x30, [sp, #-16]!
  2112e4:	mov	x29, sp
  2112e8:	ldp	x29, x30, [sp], #16
  2112ec:	ret

Disassembly of section .plt:

00000000002112f0 <__libc_start_main@plt-0x20>:
  2112f0:	stp	x16, x30, [sp, #-16]!
  2112f4:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  2112f8:	ldr	x17, [x16, #1608]
  2112fc:	add	x16, x16, #0x648
  211300:	br	x17
  211304:	nop
  211308:	nop
  21130c:	nop

0000000000211310 <__libc_start_main@plt>:
  211310:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211314:	ldr	x17, [x16, #1616]
  211318:	add	x16, x16, #0x650
  21131c:	br	x17

0000000000211320 <abort@plt>:
  211320:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211324:	ldr	x17, [x16, #1624]
  211328:	add	x16, x16, #0x658
  21132c:	br	x17

0000000000211330 <__gmon_start__@plt>:
  211330:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211334:	ldr	x17, [x16, #1632]
  211338:	add	x16, x16, #0x660
  21133c:	br	x17

0000000000211340 <log_parse_environment_realm@plt>:
  211340:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211344:	ldr	x17, [x16, #1640]
  211348:	add	x16, x16, #0x668
  21134c:	br	x17

0000000000211350 <log_open@plt>:
  211350:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211354:	ldr	x17, [x16, #1648]
  211358:	add	x16, x16, #0x670
  21135c:	br	x17

0000000000211360 <log_get_max_level_realm@plt>:
  211360:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211364:	ldr	x17, [x16, #1656]
  211368:	add	x16, x16, #0x678
  21136c:	br	x17

0000000000211370 <log_internal_realm@plt>:
  211370:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211374:	ldr	x17, [x16, #1664]
  211378:	add	x16, x16, #0x680
  21137c:	br	x17

0000000000211380 <conf_files_list_strv@plt>:
  211380:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211384:	ldr	x17, [x16, #1672]
  211388:	add	x16, x16, #0x688
  21138c:	br	x17

0000000000211390 <merge_env_file@plt>:
  211390:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211394:	ldr	x17, [x16, #1680]
  211398:	add	x16, x16, #0x690
  21139c:	br	x17

00000000002113a0 <strchr@plt>:
  2113a0:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  2113a4:	ldr	x17, [x16, #1688]
  2113a8:	add	x16, x16, #0x698
  2113ac:	br	x17

00000000002113b0 <shell_maybe_quote@plt>:
  2113b0:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  2113b4:	ldr	x17, [x16, #1696]
  2113b8:	add	x16, x16, #0x6a0
  2113bc:	br	x17

00000000002113c0 <printf@plt>:
  2113c0:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  2113c4:	ldr	x17, [x16, #1704]
  2113c8:	add	x16, x16, #0x6a8
  2113cc:	br	x17

00000000002113d0 <log_oom_internal@plt>:
  2113d0:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  2113d4:	ldr	x17, [x16, #1712]
  2113d8:	add	x16, x16, #0x6b0
  2113dc:	br	x17

00000000002113e0 <log_assert_failed_realm@plt>:
  2113e0:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  2113e4:	ldr	x17, [x16, #1720]
  2113e8:	add	x16, x16, #0x6b8
  2113ec:	br	x17

00000000002113f0 <strv_free@plt>:
  2113f0:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  2113f4:	ldr	x17, [x16, #1728]
  2113f8:	add	x16, x16, #0x6c0
  2113fc:	br	x17

0000000000211400 <strv_new_internal@plt>:
  211400:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211404:	ldr	x17, [x16, #1736]
  211408:	add	x16, x16, #0x6c8
  21140c:	br	x17

0000000000211410 <sd_path_home@plt>:
  211410:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211414:	ldr	x17, [x16, #1744]
  211418:	add	x16, x16, #0x6d0
  21141c:	br	x17

0000000000211420 <strv_extend_front@plt>:
  211420:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211424:	ldr	x17, [x16, #1752]
  211428:	add	x16, x16, #0x6d8
  21142c:	br	x17

0000000000211430 <free@plt>:
  211430:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211434:	ldr	x17, [x16, #1760]
  211438:	add	x16, x16, #0x6e0
  21143c:	br	x17

0000000000211440 <strv_join_prefix@plt>:
  211440:	adrp	x16, 221000 <strv_join_prefix@plt+0xfbc0>
  211444:	ldr	x17, [x16, #1768]
  211448:	add	x16, x16, #0x6e8
  21144c:	br	x17
