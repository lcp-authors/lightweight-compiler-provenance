
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//grep_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402250 <.init>:
  402250:	stp	x29, x30, [sp, #-16]!
  402254:	mov	x29, sp
  402258:	bl	404100 <wcrtomb@plt+0x17e0>
  40225c:	ldp	x29, x30, [sp], #16
  402260:	ret

Disassembly of section .plt:

0000000000402270 <mbrtowc@plt-0x20>:
  402270:	stp	x16, x30, [sp, #-16]!
  402274:	adrp	x16, 448000 <_obstack_memory_used@@Base+0x29510>
  402278:	ldr	x17, [x16, #4088]
  40227c:	add	x16, x16, #0xff8
  402280:	br	x17
  402284:	nop
  402288:	nop
  40228c:	nop

0000000000402290 <mbrtowc@plt>:
  402290:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402294:	ldr	x17, [x16]
  402298:	add	x16, x16, #0x0
  40229c:	br	x17

00000000004022a0 <memcpy@plt>:
  4022a0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4022a4:	ldr	x17, [x16, #8]
  4022a8:	add	x16, x16, #0x8
  4022ac:	br	x17

00000000004022b0 <sigaltstack@plt>:
  4022b0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4022b4:	ldr	x17, [x16, #16]
  4022b8:	add	x16, x16, #0x10
  4022bc:	br	x17

00000000004022c0 <memmove@plt>:
  4022c0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4022c4:	ldr	x17, [x16, #24]
  4022c8:	add	x16, x16, #0x18
  4022cc:	br	x17

00000000004022d0 <isalpha@plt>:
  4022d0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4022d4:	ldr	x17, [x16, #32]
  4022d8:	add	x16, x16, #0x20
  4022dc:	br	x17

00000000004022e0 <_exit@plt>:
  4022e0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4022e4:	ldr	x17, [x16, #40]
  4022e8:	add	x16, x16, #0x28
  4022ec:	br	x17

00000000004022f0 <fwrite_unlocked@plt>:
  4022f0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4022f4:	ldr	x17, [x16, #48]
  4022f8:	add	x16, x16, #0x30
  4022fc:	br	x17

0000000000402300 <strlen@plt>:
  402300:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402304:	ldr	x17, [x16, #56]
  402308:	add	x16, x16, #0x38
  40230c:	br	x17

0000000000402310 <fputs@plt>:
  402310:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402314:	ldr	x17, [x16, #64]
  402318:	add	x16, x16, #0x40
  40231c:	br	x17

0000000000402320 <exit@plt>:
  402320:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402324:	ldr	x17, [x16, #72]
  402328:	add	x16, x16, #0x48
  40232c:	br	x17

0000000000402330 <error@plt>:
  402330:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402334:	ldr	x17, [x16, #80]
  402338:	add	x16, x16, #0x50
  40233c:	br	x17

0000000000402340 <fchdir@plt>:
  402340:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16, #88]
  402348:	add	x16, x16, #0x58
  40234c:	br	x17

0000000000402350 <wctype@plt>:
  402350:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #96]
  402358:	add	x16, x16, #0x60
  40235c:	br	x17

0000000000402360 <__cxa_atexit@plt>:
  402360:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #104]
  402368:	add	x16, x16, #0x68
  40236c:	br	x17

0000000000402370 <iswcntrl@plt>:
  402370:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #112]
  402378:	add	x16, x16, #0x70
  40237c:	br	x17

0000000000402380 <qsort@plt>:
  402380:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #120]
  402388:	add	x16, x16, #0x78
  40238c:	br	x17

0000000000402390 <isblank@plt>:
  402390:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #128]
  402398:	add	x16, x16, #0x80
  40239c:	br	x17

00000000004023a0 <lseek@plt>:
  4023a0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #136]
  4023a8:	add	x16, x16, #0x88
  4023ac:	br	x17

00000000004023b0 <__fpending@plt>:
  4023b0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #144]
  4023b8:	add	x16, x16, #0x90
  4023bc:	br	x17

00000000004023c0 <__ctype_tolower_loc@plt>:
  4023c0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #152]
  4023c8:	add	x16, x16, #0x98
  4023cc:	br	x17

00000000004023d0 <stpcpy@plt>:
  4023d0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #160]
  4023d8:	add	x16, x16, #0xa0
  4023dc:	br	x17

00000000004023e0 <fclose@plt>:
  4023e0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #168]
  4023e8:	add	x16, x16, #0xa8
  4023ec:	br	x17

00000000004023f0 <wctob@plt>:
  4023f0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #176]
  4023f8:	add	x16, x16, #0xb0
  4023fc:	br	x17

0000000000402400 <nl_langinfo@plt>:
  402400:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #184]
  402408:	add	x16, x16, #0xb8
  40240c:	br	x17

0000000000402410 <fopen@plt>:
  402410:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #192]
  402418:	add	x16, x16, #0xc0
  40241c:	br	x17

0000000000402420 <isspace@plt>:
  402420:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #200]
  402428:	add	x16, x16, #0xc8
  40242c:	br	x17

0000000000402430 <iswctype@plt>:
  402430:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #208]
  402438:	add	x16, x16, #0xd0
  40243c:	br	x17

0000000000402440 <malloc@plt>:
  402440:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #216]
  402448:	add	x16, x16, #0xd8
  40244c:	br	x17

0000000000402450 <wcwidth@plt>:
  402450:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #224]
  402458:	add	x16, x16, #0xe0
  40245c:	br	x17

0000000000402460 <open@plt>:
  402460:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #232]
  402468:	add	x16, x16, #0xe8
  40246c:	br	x17

0000000000402470 <splice@plt>:
  402470:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #240]
  402478:	add	x16, x16, #0xf0
  40247c:	br	x17

0000000000402480 <islower@plt>:
  402480:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #248]
  402488:	add	x16, x16, #0xf8
  40248c:	br	x17

0000000000402490 <isxdigit@plt>:
  402490:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #256]
  402498:	add	x16, x16, #0x100
  40249c:	br	x17

00000000004024a0 <__strtol_internal@plt>:
  4024a0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #264]
  4024a8:	add	x16, x16, #0x108
  4024ac:	br	x17

00000000004024b0 <sigemptyset@plt>:
  4024b0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #272]
  4024b8:	add	x16, x16, #0x110
  4024bc:	br	x17

00000000004024c0 <strncmp@plt>:
  4024c0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #280]
  4024c8:	add	x16, x16, #0x118
  4024cc:	br	x17

00000000004024d0 <bindtextdomain@plt>:
  4024d0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #288]
  4024d8:	add	x16, x16, #0x120
  4024dc:	br	x17

00000000004024e0 <isdigit@plt>:
  4024e0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #296]
  4024e8:	add	x16, x16, #0x128
  4024ec:	br	x17

00000000004024f0 <__libc_start_main@plt>:
  4024f0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #304]
  4024f8:	add	x16, x16, #0x130
  4024fc:	br	x17

0000000000402500 <fstatfs@plt>:
  402500:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #312]
  402508:	add	x16, x16, #0x138
  40250c:	br	x17

0000000000402510 <memset@plt>:
  402510:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #320]
  402518:	add	x16, x16, #0x140
  40251c:	br	x17

0000000000402520 <calloc@plt>:
  402520:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #328]
  402528:	add	x16, x16, #0x148
  40252c:	br	x17

0000000000402530 <isupper@plt>:
  402530:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #336]
  402538:	add	x16, x16, #0x150
  40253c:	br	x17

0000000000402540 <readdir@plt>:
  402540:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #344]
  402548:	add	x16, x16, #0x158
  40254c:	br	x17

0000000000402550 <realloc@plt>:
  402550:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #352]
  402558:	add	x16, x16, #0x160
  40255c:	br	x17

0000000000402560 <__ctype_toupper_loc@plt>:
  402560:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #360]
  402568:	add	x16, x16, #0x168
  40256c:	br	x17

0000000000402570 <closedir@plt>:
  402570:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #368]
  402578:	add	x16, x16, #0x170
  40257c:	br	x17

0000000000402580 <close@plt>:
  402580:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #376]
  402588:	add	x16, x16, #0x178
  40258c:	br	x17

0000000000402590 <sigaction@plt>:
  402590:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #384]
  402598:	add	x16, x16, #0x180
  40259c:	br	x17

00000000004025a0 <strrchr@plt>:
  4025a0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #392]
  4025a8:	add	x16, x16, #0x188
  4025ac:	br	x17

00000000004025b0 <__gmon_start__@plt>:
  4025b0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #400]
  4025b8:	add	x16, x16, #0x190
  4025bc:	br	x17

00000000004025c0 <fdopendir@plt>:
  4025c0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #408]
  4025c8:	add	x16, x16, #0x198
  4025cc:	br	x17

00000000004025d0 <write@plt>:
  4025d0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #416]
  4025d8:	add	x16, x16, #0x1a0
  4025dc:	br	x17

00000000004025e0 <btowc@plt>:
  4025e0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #424]
  4025e8:	add	x16, x16, #0x1a8
  4025ec:	br	x17

00000000004025f0 <abort@plt>:
  4025f0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #432]
  4025f8:	add	x16, x16, #0x1b0
  4025fc:	br	x17

0000000000402600 <iscntrl@plt>:
  402600:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #440]
  402608:	add	x16, x16, #0x1b8
  40260c:	br	x17

0000000000402610 <mbsinit@plt>:
  402610:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #448]
  402618:	add	x16, x16, #0x1c0
  40261c:	br	x17

0000000000402620 <__overflow@plt>:
  402620:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #456]
  402628:	add	x16, x16, #0x1c8
  40262c:	br	x17

0000000000402630 <ispunct@plt>:
  402630:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #464]
  402638:	add	x16, x16, #0x1d0
  40263c:	br	x17

0000000000402640 <puts@plt>:
  402640:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #472]
  402648:	add	x16, x16, #0x1d8
  40264c:	br	x17

0000000000402650 <fread_unlocked@plt>:
  402650:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #480]
  402658:	add	x16, x16, #0x1e0
  40265c:	br	x17

0000000000402660 <memcmp@plt>:
  402660:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #488]
  402668:	add	x16, x16, #0x1e8
  40266c:	br	x17

0000000000402670 <textdomain@plt>:
  402670:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #496]
  402678:	add	x16, x16, #0x1f0
  40267c:	br	x17

0000000000402680 <getopt_long@plt>:
  402680:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #504]
  402688:	add	x16, x16, #0x1f8
  40268c:	br	x17

0000000000402690 <strcmp@plt>:
  402690:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #512]
  402698:	add	x16, x16, #0x200
  40269c:	br	x17

00000000004026a0 <__ctype_b_loc@plt>:
  4026a0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #520]
  4026a8:	add	x16, x16, #0x208
  4026ac:	br	x17

00000000004026b0 <free@plt>:
  4026b0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #528]
  4026b8:	add	x16, x16, #0x210
  4026bc:	br	x17

00000000004026c0 <__ctype_get_mb_cur_max@plt>:
  4026c0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #536]
  4026c8:	add	x16, x16, #0x218
  4026cc:	br	x17

00000000004026d0 <mempcpy@plt>:
  4026d0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #544]
  4026d8:	add	x16, x16, #0x220
  4026dc:	br	x17

00000000004026e0 <strchr@plt>:
  4026e0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #552]
  4026e8:	add	x16, x16, #0x228
  4026ec:	br	x17

00000000004026f0 <memrchr@plt>:
  4026f0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #560]
  4026f8:	add	x16, x16, #0x230
  4026fc:	br	x17

0000000000402700 <fnmatch@plt>:
  402700:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #568]
  402708:	add	x16, x16, #0x238
  40270c:	br	x17

0000000000402710 <fflush_unlocked@plt>:
  402710:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #576]
  402718:	add	x16, x16, #0x240
  40271c:	br	x17

0000000000402720 <fcntl@plt>:
  402720:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #584]
  402728:	add	x16, x16, #0x248
  40272c:	br	x17

0000000000402730 <strcpy@plt>:
  402730:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #592]
  402738:	add	x16, x16, #0x250
  40273c:	br	x17

0000000000402740 <dirfd@plt>:
  402740:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #600]
  402748:	add	x16, x16, #0x258
  40274c:	br	x17

0000000000402750 <__lxstat@plt>:
  402750:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #608]
  402758:	add	x16, x16, #0x260
  40275c:	br	x17

0000000000402760 <read@plt>:
  402760:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #616]
  402768:	add	x16, x16, #0x268
  40276c:	br	x17

0000000000402770 <memchr@plt>:
  402770:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #624]
  402778:	add	x16, x16, #0x270
  40277c:	br	x17

0000000000402780 <isatty@plt>:
  402780:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #632]
  402788:	add	x16, x16, #0x278
  40278c:	br	x17

0000000000402790 <sysconf@plt>:
  402790:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #640]
  402798:	add	x16, x16, #0x280
  40279c:	br	x17

00000000004027a0 <fputc_unlocked@plt>:
  4027a0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #648]
  4027a8:	add	x16, x16, #0x288
  4027ac:	br	x17

00000000004027b0 <isgraph@plt>:
  4027b0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #656]
  4027b8:	add	x16, x16, #0x290
  4027bc:	br	x17

00000000004027c0 <iswalnum@plt>:
  4027c0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #664]
  4027c8:	add	x16, x16, #0x298
  4027cc:	br	x17

00000000004027d0 <__fxstat@plt>:
  4027d0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #672]
  4027d8:	add	x16, x16, #0x2a0
  4027dc:	br	x17

00000000004027e0 <strstr@plt>:
  4027e0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #680]
  4027e8:	add	x16, x16, #0x2a8
  4027ec:	br	x17

00000000004027f0 <dcgettext@plt>:
  4027f0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #688]
  4027f8:	add	x16, x16, #0x2b0
  4027fc:	br	x17

0000000000402800 <fputs_unlocked@plt>:
  402800:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #696]
  402808:	add	x16, x16, #0x2b8
  40280c:	br	x17

0000000000402810 <strcoll@plt>:
  402810:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #704]
  402818:	add	x16, x16, #0x2c0
  40281c:	br	x17

0000000000402820 <isalnum@plt>:
  402820:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #712]
  402828:	add	x16, x16, #0x2c8
  40282c:	br	x17

0000000000402830 <towupper@plt>:
  402830:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #720]
  402838:	add	x16, x16, #0x2d0
  40283c:	br	x17

0000000000402840 <iswprint@plt>:
  402840:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #728]
  402848:	add	x16, x16, #0x2d8
  40284c:	br	x17

0000000000402850 <vfprintf@plt>:
  402850:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #736]
  402858:	add	x16, x16, #0x2e0
  40285c:	br	x17

0000000000402860 <openat@plt>:
  402860:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #744]
  402868:	add	x16, x16, #0x2e8
  40286c:	br	x17

0000000000402870 <printf@plt>:
  402870:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #752]
  402878:	add	x16, x16, #0x2f0
  40287c:	br	x17

0000000000402880 <__assert_fail@plt>:
  402880:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #760]
  402888:	add	x16, x16, #0x2f8
  40288c:	br	x17

0000000000402890 <__errno_location@plt>:
  402890:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #768]
  402898:	add	x16, x16, #0x300
  40289c:	br	x17

00000000004028a0 <getenv@plt>:
  4028a0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #776]
  4028a8:	add	x16, x16, #0x308
  4028ac:	br	x17

00000000004028b0 <__xstat@plt>:
  4028b0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #784]
  4028b8:	add	x16, x16, #0x310
  4028bc:	br	x17

00000000004028c0 <towlower@plt>:
  4028c0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #792]
  4028c8:	add	x16, x16, #0x318
  4028cc:	br	x17

00000000004028d0 <fprintf@plt>:
  4028d0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #800]
  4028d8:	add	x16, x16, #0x320
  4028dc:	br	x17

00000000004028e0 <__uflow@plt>:
  4028e0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #808]
  4028e8:	add	x16, x16, #0x328
  4028ec:	br	x17

00000000004028f0 <isprint@plt>:
  4028f0:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #816]
  4028f8:	add	x16, x16, #0x330
  4028fc:	br	x17

0000000000402900 <setlocale@plt>:
  402900:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #824]
  402908:	add	x16, x16, #0x338
  40290c:	br	x17

0000000000402910 <__fxstatat@plt>:
  402910:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #832]
  402918:	add	x16, x16, #0x340
  40291c:	br	x17

0000000000402920 <wcrtomb@plt>:
  402920:	adrp	x16, 449000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #840]
  402928:	add	x16, x16, #0x348
  40292c:	br	x17

Disassembly of section .text:

0000000000402930 <_obstack_begin@@Base-0x1bdb0>:
  402930:	stp	x29, x30, [sp, #-480]!
  402934:	adrp	x6, 449000 <_obstack_memory_used@@Base+0x2a510>
  402938:	mov	x2, #0xffffffffffffffff    	// #-1
  40293c:	mov	x29, sp
  402940:	stp	x25, x26, [sp, #64]
  402944:	mov	w26, w0
  402948:	mov	w0, #0x2                   	// #2
  40294c:	str	w0, [x6, #976]
  402950:	adrp	x6, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  402954:	stp	x27, x28, [sp, #80]
  402958:	adrp	x27, 431000 <_obstack_memory_used@@Base+0x12510>
  40295c:	add	x5, x27, #0xbe0
  402960:	stp	x1, x5, [sp, #128]
  402964:	mov	x1, x5
  402968:	mov	w5, #0xa                   	// #10
  40296c:	strb	w5, [x6, #2264]
  402970:	adrp	x5, 449000 <_obstack_memory_used@@Base+0x2a510>
  402974:	add	x5, x5, #0x480
  402978:	mov	w4, #0xffffffff            	// #-1
  40297c:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  402980:	stp	x19, x20, [sp, #16]
  402984:	mov	w0, #0x6                   	// #6
  402988:	stp	x21, x22, [sp, #32]
  40298c:	stp	x23, x24, [sp, #48]
  402990:	str	w4, [x5, #68]
  402994:	strb	wzr, [x5, #122]
  402998:	str	x2, [x5, #184]
  40299c:	stp	xzr, xzr, [sp, #184]
  4029a0:	stp	xzr, x2, [sp, #200]
  4029a4:	str	x2, [x5, #200]
  4029a8:	str	x3, [x5, #320]
  4029ac:	bl	402900 <setlocale@plt>
  4029b0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  4029b4:	add	x1, x1, #0x388
  4029b8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  4029bc:	add	x0, x0, #0x3a0
  4029c0:	mov	x19, x0
  4029c4:	str	x0, [sp, #152]
  4029c8:	bl	4024d0 <bindtextdomain@plt>
  4029cc:	mov	x0, x19
  4029d0:	bl	402670 <textdomain@plt>
  4029d4:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4029d8:	add	x0, x0, #0x8e0
  4029dc:	bl	414660 <wcrtomb@plt+0x11d40>
  4029e0:	adrp	x0, 405000 <wcrtomb@plt+0x26e0>
  4029e4:	add	x0, x0, #0x198
  4029e8:	bl	42f218 <_obstack_memory_used@@Base+0x10728>
  4029ec:	mov	x0, #0x0                   	// #0
  4029f0:	bl	40d208 <wcrtomb@plt+0xa8e8>
  4029f4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  4029f8:	add	x0, x0, #0x3a8
  4029fc:	bl	4028a0 <getenv@plt>
  402a00:	cbz	x0, 403804 <wcrtomb@plt+0xee4>
  402a04:	ldrb	w1, [x0]
  402a08:	mov	x19, x0
  402a0c:	str	wzr, [sp, #164]
  402a10:	cbnz	w1, 4036ac <wcrtomb@plt+0xd8c>
  402a14:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402a18:	mov	w28, w26
  402a1c:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x11510>
  402a20:	adrp	x22, 449000 <_obstack_memory_used@@Base+0x2a510>
  402a24:	mov	w21, #0x0                   	// #0
  402a28:	add	x20, x20, #0xb10
  402a2c:	add	x22, x22, #0x360
  402a30:	add	x19, sp, #0x160
  402a34:	mov	w26, w21
  402a38:	add	x23, x0, #0x450
  402a3c:	mov	w0, #0xffffffff            	// #-1
  402a40:	str	w0, [sp, #148]
  402a44:	str	wzr, [sp, #160]
  402a48:	ldr	w0, [x23]
  402a4c:	mov	x25, x19
  402a50:	add	x3, x20, #0x230
  402a54:	add	x2, x20, #0x890
  402a58:	mov	w27, w0
  402a5c:	mov	w21, #0x0                   	// #0
  402a60:	str	w0, [sp, #120]
  402a64:	ldr	x1, [sp, #128]
  402a68:	mov	w0, w28
  402a6c:	mov	x4, #0x0                   	// #0
  402a70:	stp	x2, x3, [sp, #104]
  402a74:	bl	402680 <getopt_long@plt>
  402a78:	mov	w24, w0
  402a7c:	sub	w0, w0, #0x30
  402a80:	cmp	w0, #0x9
  402a84:	b.hi	402ab8 <wcrtomb@plt+0x198>  // b.pmore
  402a88:	ldr	w1, [x22, #96]
  402a8c:	cmp	w21, #0x0
  402a90:	mov	x0, x19
  402a94:	ccmp	w1, w27, #0x0, ne  // ne = any
  402a98:	ldp	x2, x3, [sp, #104]
  402a9c:	b.eq	403198 <wcrtomb@plt+0x878>  // b.none
  402aa0:	mov	x25, x0
  402aa4:	mov	w21, #0x1                   	// #1
  402aa8:	str	w27, [x22, #96]
  402aac:	ldr	w27, [x23]
  402ab0:	strb	w24, [x25], #1
  402ab4:	b	402a64 <wcrtomb@plt+0x144>
  402ab8:	cmp	x25, x19
  402abc:	b.eq	402aec <wcrtomb@plt+0x1cc>  // b.none
  402ac0:	ldr	x4, [sp, #136]
  402ac4:	strb	wzr, [x25]
  402ac8:	add	x3, sp, #0xd0
  402acc:	mov	x0, x19
  402ad0:	mov	w2, #0xa                   	// #10
  402ad4:	mov	x1, #0x0                   	// #0
  402ad8:	bl	41b7c0 <wcrtomb@plt+0x18ea0>
  402adc:	cmp	w0, #0x1
  402ae0:	b.hi	403ffc <wcrtomb@plt+0x16dc>  // b.pmore
  402ae4:	ldr	x0, [sp, #208]
  402ae8:	tbnz	x0, #63, 403ffc <wcrtomb@plt+0x16dc>
  402aec:	cmn	w24, #0x1
  402af0:	b.eq	4031c8 <wcrtomb@plt+0x8a8>  // b.none
  402af4:	cmp	w24, #0x109
  402af8:	b.hi	403d44 <wcrtomb@plt+0x1424>  // b.pmore
  402afc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  402b00:	add	x0, x0, #0x8f0
  402b04:	ldrh	w0, [x0, w24, uxtw #1]
  402b08:	adr	x1, 402b14 <wcrtomb@plt+0x1f4>
  402b0c:	add	x0, x1, w0, sxth #2
  402b10:	br	x0
  402b14:	mov	w26, #0xffffffff            	// #-1
  402b18:	b	402a48 <wcrtomb@plt+0x128>
  402b1c:	mov	w26, #0x1                   	// #1
  402b20:	b	402a48 <wcrtomb@plt+0x128>
  402b24:	mov	w0, #0x30a                 	// #778
  402b28:	str	w0, [x22, #92]
  402b2c:	ldr	w0, [sp, #120]
  402b30:	str	w0, [sp, #160]
  402b34:	mov	w0, #0x3                   	// #3
  402b38:	str	w0, [x22, #88]
  402b3c:	b	402a48 <wcrtomb@plt+0x128>
  402b40:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  402b44:	mov	x0, x21
  402b48:	add	x1, x1, #0x470
  402b4c:	bl	402690 <strcmp@plt>
  402b50:	cbnz	w0, 402b68 <wcrtomb@plt+0x248>
  402b54:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402b58:	add	x1, x1, #0x480
  402b5c:	mov	w0, #0x1                   	// #1
  402b60:	str	w0, [x1, #48]
  402b64:	b	402a48 <wcrtomb@plt+0x128>
  402b68:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  402b6c:	mov	x0, x21
  402b70:	add	x1, x1, #0x478
  402b74:	bl	402690 <strcmp@plt>
  402b78:	cbnz	w0, 404098 <wcrtomb@plt+0x1778>
  402b7c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402b80:	add	x1, x1, #0x480
  402b84:	mov	w0, #0x2                   	// #2
  402b88:	str	w0, [x1, #48]
  402b8c:	b	402a48 <wcrtomb@plt+0x128>
  402b90:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  402b94:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402b98:	add	x21, x20, #0x200
  402b9c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  402ba0:	ldr	x5, [x2, #968]
  402ba4:	mov	x3, x21
  402ba8:	ldr	x1, [x1, #1096]
  402bac:	add	x0, x0, #0x438
  402bb0:	add	x2, x20, #0x210
  402bb4:	mov	x4, #0x4                   	// #4
  402bb8:	bl	40d018 <wcrtomb@plt+0xa6f8>
  402bbc:	ldr	w0, [x21, x0, lsl #2]
  402bc0:	ldr	w1, [sp, #120]
  402bc4:	cmp	w0, #0x3
  402bc8:	str	w0, [x22, #88]
  402bcc:	ldr	w0, [sp, #160]
  402bd0:	csel	w0, w0, w1, ne  // ne = any
  402bd4:	str	w0, [sp, #160]
  402bd8:	b	402a48 <wcrtomb@plt+0x128>
  402bdc:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402be0:	add	x1, x1, #0x480
  402be4:	mov	w0, #0x1                   	// #1
  402be8:	strb	w0, [x1, #457]
  402bec:	b	402a48 <wcrtomb@plt+0x128>
  402bf0:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402bf4:	add	x1, x1, #0x480
  402bf8:	mov	w0, #0x1                   	// #1
  402bfc:	strb	w0, [x1, #100]
  402c00:	b	402a48 <wcrtomb@plt+0x128>
  402c04:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402c08:	add	x1, x1, #0x480
  402c0c:	mov	w0, #0x2                   	// #2
  402c10:	str	w0, [x1, #316]
  402c14:	b	402a48 <wcrtomb@plt+0x128>
  402c18:	ldr	w1, [sp, #148]
  402c1c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x10510>
  402c20:	add	x0, x0, #0x328
  402c24:	bl	405068 <wcrtomb@plt+0x2748>
  402c28:	str	w0, [sp, #148]
  402c2c:	b	402a48 <wcrtomb@plt+0x128>
  402c30:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402c34:	add	x0, x0, #0x480
  402c38:	str	wzr, [x0, #68]
  402c3c:	b	402a48 <wcrtomb@plt+0x128>
  402c40:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402c44:	ldr	w1, [sp, #148]
  402c48:	ldr	x0, [x0, #1096]
  402c4c:	bl	405068 <wcrtomb@plt+0x2748>
  402c50:	str	w0, [sp, #148]
  402c54:	b	402a48 <wcrtomb@plt+0x128>
  402c58:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402c5c:	add	x1, x1, #0x480
  402c60:	mov	w0, #0x1                   	// #1
  402c64:	strb	w0, [x1, #460]
  402c68:	b	402a48 <wcrtomb@plt+0x128>
  402c6c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402c70:	add	x1, x1, #0x480
  402c74:	mov	w0, #0x1                   	// #1
  402c78:	strb	w0, [x1, #120]
  402c7c:	b	402a48 <wcrtomb@plt+0x128>
  402c80:	ldr	w1, [sp, #148]
  402c84:	ldr	x0, [sp, #152]
  402c88:	bl	405068 <wcrtomb@plt+0x2748>
  402c8c:	str	w0, [sp, #148]
  402c90:	b	402a48 <wcrtomb@plt+0x128>
  402c94:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402c98:	add	x1, x1, #0x480
  402c9c:	mov	w0, #0x1                   	// #1
  402ca0:	strb	w0, [x1, #304]
  402ca4:	b	402a48 <wcrtomb@plt+0x128>
  402ca8:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402cac:	add	x1, x1, #0x480
  402cb0:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402cb4:	str	wzr, [x0, #976]
  402cb8:	mov	w0, #0x1                   	// #1
  402cbc:	strb	w0, [x1, #233]
  402cc0:	b	402a48 <wcrtomb@plt+0x128>
  402cc4:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402cc8:	add	x1, x1, #0x480
  402ccc:	mov	w0, #0x1                   	// #1
  402cd0:	strb	w0, [x1, #122]
  402cd4:	b	402a48 <wcrtomb@plt+0x128>
  402cd8:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402cdc:	add	x1, x1, #0x480
  402ce0:	mov	w0, #0x1                   	// #1
  402ce4:	strb	w0, [x1, #72]
  402ce8:	b	402a48 <wcrtomb@plt+0x128>
  402cec:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402cf0:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402cf4:	ldr	x4, [sp, #136]
  402cf8:	add	x1, x1, #0x480
  402cfc:	ldr	x0, [x0, #1096]
  402d00:	add	x3, x1, #0x140
  402d04:	mov	w2, #0xa                   	// #10
  402d08:	mov	x1, #0x0                   	// #0
  402d0c:	bl	41b7c0 <wcrtomb@plt+0x18ea0>
  402d10:	cmp	w0, #0x1
  402d14:	b.ls	402a48 <wcrtomb@plt+0x128>  // b.plast
  402d18:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  402d1c:	mov	w2, #0x5                   	// #5
  402d20:	add	x1, x1, #0x450
  402d24:	b	404078 <wcrtomb@plt+0x1758>
  402d28:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402d2c:	add	x1, x1, #0x480
  402d30:	mov	w0, #0x1                   	// #1
  402d34:	str	w0, [x1, #316]
  402d38:	b	402a48 <wcrtomb@plt+0x128>
  402d3c:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  402d40:	mov	w1, #0x1                   	// #1
  402d44:	strb	w1, [x0, #3558]
  402d48:	b	402a48 <wcrtomb@plt+0x128>
  402d4c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402d50:	add	x0, x0, #0x480
  402d54:	ldr	x0, [x0, #272]
  402d58:	cbz	x0, 403c24 <wcrtomb@plt+0x1304>
  402d5c:	adrp	x25, 449000 <_obstack_memory_used@@Base+0x2a510>
  402d60:	cmp	w24, #0x106
  402d64:	mov	w3, #0x70000000            	// #1879048192
  402d68:	mov	w2, #0x10000000            	// #268435456
  402d6c:	ldr	x1, [x25, #1096]
  402d70:	mov	w21, #0x30000000            	// #805306368
  402d74:	csel	w21, w21, w2, eq  // eq = none
  402d78:	mov	w2, #0x50000000            	// #1342177280
  402d7c:	csel	w2, w3, w2, eq  // eq = none
  402d80:	add	x27, x25, #0x448
  402d84:	bl	4154e8 <wcrtomb@plt+0x12bc8>
  402d88:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402d8c:	add	x0, x0, #0x480
  402d90:	ldr	x0, [x0, #280]
  402d94:	cbz	x0, 403c38 <wcrtomb@plt+0x1318>
  402d98:	ldr	x1, [x27]
  402d9c:	mov	w2, w21
  402da0:	bl	4154e8 <wcrtomb@plt+0x12bc8>
  402da4:	b	402a48 <wcrtomb@plt+0x128>
  402da8:	adrp	x25, 449000 <_obstack_memory_used@@Base+0x2a510>
  402dac:	add	x27, x25, #0x448
  402db0:	ldr	x0, [x25, #1096]
  402db4:	bl	4148a8 <wcrtomb@plt+0x11f88>
  402db8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402dbc:	add	x0, x0, #0x480
  402dc0:	ldr	x0, [x0, #288]
  402dc4:	cbz	x0, 403c4c <wcrtomb@plt+0x132c>
  402dc8:	ldr	x1, [x27]
  402dcc:	mov	w2, #0x50000000            	// #1342177280
  402dd0:	bl	4154e8 <wcrtomb@plt+0x12bc8>
  402dd4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402dd8:	add	x0, x0, #0x480
  402ddc:	ldr	x0, [x0, #296]
  402de0:	cbz	x0, 403be0 <wcrtomb@plt+0x12c0>
  402de4:	ldr	x1, [x27]
  402de8:	mov	w2, #0x10000000            	// #268435456
  402dec:	bl	4154e8 <wcrtomb@plt+0x12bc8>
  402df0:	b	402a48 <wcrtomb@plt+0x128>
  402df4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402df8:	ldr	x21, [x0, #1096]
  402dfc:	cbz	x21, 403828 <wcrtomb@plt+0xf08>
  402e00:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  402e04:	mov	x0, x21
  402e08:	add	x1, x1, #0x4a8
  402e0c:	bl	40d2d8 <wcrtomb@plt+0xa9b8>
  402e10:	cbnz	w0, 4035c8 <wcrtomb@plt+0xca8>
  402e14:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402e18:	add	x1, x1, #0x480
  402e1c:	mov	w0, #0x1                   	// #1
  402e20:	str	w0, [x1]
  402e24:	b	402a48 <wcrtomb@plt+0x128>
  402e28:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402e2c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  402e30:	add	x1, x1, #0x468
  402e34:	ldr	x21, [x0, #1096]
  402e38:	mov	x0, x21
  402e3c:	bl	402690 <strcmp@plt>
  402e40:	cbnz	w0, 402b40 <wcrtomb@plt+0x220>
  402e44:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402e48:	add	x0, x0, #0x480
  402e4c:	str	wzr, [x0, #48]
  402e50:	b	402a48 <wcrtomb@plt+0x128>
  402e54:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  402e58:	strb	wzr, [x0, #2264]
  402e5c:	b	402a48 <wcrtomb@plt+0x128>
  402e60:	bl	40c490 <wcrtomb@plt+0x9b70>
  402e64:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  402e68:	mov	w1, #0x1                   	// #1
  402e6c:	strb	w1, [x0, #3556]
  402e70:	b	402a48 <wcrtomb@plt+0x128>
  402e74:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  402e78:	add	x1, x1, #0x480
  402e7c:	mov	w0, #0x1                   	// #1
  402e80:	strb	w0, [x1, #123]
  402e84:	b	402a48 <wcrtomb@plt+0x128>
  402e88:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  402e8c:	mov	w1, #0x1                   	// #1
  402e90:	strb	w1, [x0, #3557]
  402e94:	b	402a48 <wcrtomb@plt+0x128>
  402e98:	adrp	x25, 449000 <_obstack_memory_used@@Base+0x2a510>
  402e9c:	add	x27, x25, #0x448
  402ea0:	ldr	x0, [x25, #1096]
  402ea4:	ldrb	w1, [x0]
  402ea8:	cmp	w1, #0x2d
  402eac:	b.ne	403164 <wcrtomb@plt+0x844>  // b.any
  402eb0:	ldrb	w1, [x0, #1]
  402eb4:	cbnz	w1, 403164 <wcrtomb@plt+0x844>
  402eb8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402ebc:	ldr	x24, [x0, #1120]
  402ec0:	ldr	x21, [sp, #192]
  402ec4:	mov	x1, x21
  402ec8:	b	402ef4 <wcrtomb@plt+0x5d4>
  402ecc:	sub	x2, x2, #0x1
  402ed0:	add	x0, x0, x1
  402ed4:	sub	x2, x2, x1
  402ed8:	mov	x3, x24
  402edc:	mov	x1, #0x1                   	// #1
  402ee0:	bl	402650 <fread_unlocked@plt>
  402ee4:	cbz	x0, 402f34 <wcrtomb@plt+0x614>
  402ee8:	ldr	x1, [sp, #192]
  402eec:	add	x1, x0, x1
  402ef0:	str	x1, [sp, #192]
  402ef4:	ldr	x2, [sp, #200]
  402ef8:	add	x3, x1, #0x1
  402efc:	ldr	x0, [sp, #184]
  402f00:	cmp	x3, x2
  402f04:	b.cc	402ecc <wcrtomb@plt+0x5ac>  // b.lo, b.ul, b.last
  402f08:	add	x1, sp, #0xc8
  402f0c:	bl	41b640 <wcrtomb@plt+0x18d20>
  402f10:	ldp	x2, x1, [sp, #192]
  402f14:	mov	x3, x24
  402f18:	str	x0, [sp, #184]
  402f1c:	sub	x1, x1, #0x1
  402f20:	add	x0, x0, x2
  402f24:	sub	x2, x1, x2
  402f28:	mov	x1, #0x1                   	// #1
  402f2c:	bl	402650 <fread_unlocked@plt>
  402f30:	cbnz	x0, 402ee8 <wcrtomb@plt+0x5c8>
  402f34:	ldr	w0, [x24]
  402f38:	tbnz	w0, #5, 403178 <wcrtomb@plt+0x858>
  402f3c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  402f40:	ldr	x0, [x0, #1120]
  402f44:	cmp	x0, x24
  402f48:	b.eq	402f54 <wcrtomb@plt+0x634>  // b.none
  402f4c:	mov	x0, x24
  402f50:	bl	4023e0 <fclose@plt>
  402f54:	ldp	x0, x1, [sp, #184]
  402f58:	cmp	x1, x21
  402f5c:	b.eq	402f84 <wcrtomb@plt+0x664>  // b.none
  402f60:	add	x2, x0, x1
  402f64:	ldurb	w2, [x2, #-1]
  402f68:	cmp	w2, #0xa
  402f6c:	b.eq	402f84 <wcrtomb@plt+0x664>  // b.none
  402f70:	add	x2, x1, #0x1
  402f74:	str	x2, [sp, #192]
  402f78:	mov	w2, #0xa                   	// #10
  402f7c:	strb	w2, [x0, x1]
  402f80:	ldp	x0, x1, [sp, #184]
  402f84:	sub	x1, x1, x21
  402f88:	ldr	x2, [x27]
  402f8c:	add	x0, x0, x21
  402f90:	bl	4051b0 <wcrtomb@plt+0x2890>
  402f94:	b	402a48 <wcrtomb@plt+0x128>
  402f98:	adrp	x25, 449000 <_obstack_memory_used@@Base+0x2a510>
  402f9c:	ldr	x27, [x25, #1096]
  402fa0:	mov	x0, x27
  402fa4:	bl	402300 <strlen@plt>
  402fa8:	mov	x21, x0
  402fac:	ldp	x24, x0, [sp, #192]
  402fb0:	add	x2, x24, #0x1
  402fb4:	add	x2, x2, x21
  402fb8:	cmp	x2, x0
  402fbc:	ldr	x0, [sp, #184]
  402fc0:	b.hi	40380c <wcrtomb@plt+0xeec>  // b.pmore
  402fc4:	mov	x1, x27
  402fc8:	mov	x2, x21
  402fcc:	add	x0, x0, x24
  402fd0:	bl	4022a0 <memcpy@plt>
  402fd4:	ldp	x3, x0, [sp, #184]
  402fd8:	mov	w4, #0xa                   	// #10
  402fdc:	ldr	x2, [sp, #136]
  402fe0:	add	x0, x21, x0
  402fe4:	add	x1, x0, #0x1
  402fe8:	str	x1, [sp, #192]
  402fec:	add	x1, x21, #0x1
  402ff0:	strb	w4, [x3, x0]
  402ff4:	ldr	x0, [sp, #184]
  402ff8:	add	x0, x0, x24
  402ffc:	bl	4051b0 <wcrtomb@plt+0x2890>
  403000:	b	402a48 <wcrtomb@plt+0x128>
  403004:	ldr	w1, [sp, #148]
  403008:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  40300c:	add	x0, x0, #0x430
  403010:	bl	405068 <wcrtomb@plt+0x2748>
  403014:	str	w0, [sp, #148]
  403018:	b	402a48 <wcrtomb@plt+0x128>
  40301c:	ldr	w1, [sp, #148]
  403020:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  403024:	add	x0, x0, #0x428
  403028:	bl	405068 <wcrtomb@plt+0x2748>
  40302c:	str	w0, [sp, #148]
  403030:	b	402a48 <wcrtomb@plt+0x128>
  403034:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403038:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  40303c:	add	x1, x1, #0x400
  403040:	ldr	x21, [x0, #1096]
  403044:	mov	x0, x21
  403048:	bl	402690 <strcmp@plt>
  40304c:	cbnz	w0, 4035a0 <wcrtomb@plt+0xc80>
  403050:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403054:	add	x1, x1, #0x480
  403058:	mov	w0, #0x1                   	// #1
  40305c:	str	w0, [x1, #308]
  403060:	b	402a48 <wcrtomb@plt+0x128>
  403064:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403068:	add	x1, sp, #0xd0
  40306c:	ldr	x0, [x0, #1096]
  403070:	bl	405370 <wcrtomb@plt+0x2a50>
  403074:	b	402a48 <wcrtomb@plt+0x128>
  403078:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40307c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403080:	add	x1, x1, #0x480
  403084:	ldr	x0, [x0, #1096]
  403088:	add	x1, x1, #0xb8
  40308c:	bl	405370 <wcrtomb@plt+0x2a50>
  403090:	b	402a48 <wcrtomb@plt+0x128>
  403094:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403098:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40309c:	add	x1, x1, #0x480
  4030a0:	ldr	x0, [x0, #1096]
  4030a4:	add	x1, x1, #0xc8
  4030a8:	bl	405370 <wcrtomb@plt+0x2a50>
  4030ac:	b	402a48 <wcrtomb@plt+0x128>
  4030b0:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4030b4:	strb	wzr, [x0, #3558]
  4030b8:	b	402a48 <wcrtomb@plt+0x128>
  4030bc:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4030c0:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  4030c4:	add	x1, x1, #0x480
  4030c8:	ldr	x0, [x0, #1096]
  4030cc:	str	x0, [x1, #472]
  4030d0:	b	402a48 <wcrtomb@plt+0x128>
  4030d4:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  4030d8:	add	x1, x1, #0x480
  4030dc:	mov	w0, #0x1                   	// #1
  4030e0:	strb	w0, [x1, #144]
  4030e4:	b	402a48 <wcrtomb@plt+0x128>
  4030e8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4030ec:	ldr	x0, [x0, #1096]
  4030f0:	str	x0, [x22, #80]
  4030f4:	b	402a48 <wcrtomb@plt+0x128>
  4030f8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4030fc:	add	x0, x0, #0x480
  403100:	ldr	x1, [x0, #272]
  403104:	cbz	x1, 403bf4 <wcrtomb@plt+0x12d4>
  403108:	adrp	x25, 449000 <_obstack_memory_used@@Base+0x2a510>
  40310c:	adrp	x21, 415000 <wcrtomb@plt+0x126e0>
  403110:	add	x21, x21, #0x4e8
  403114:	add	x27, x25, #0x448
  403118:	ldr	x2, [x25, #1096]
  40311c:	mov	x0, x21
  403120:	mov	w4, #0xa                   	// #10
  403124:	mov	w3, #0x50000000            	// #1342177280
  403128:	bl	415a08 <wcrtomb@plt+0x130e8>
  40312c:	cbnz	w0, 403158 <wcrtomb@plt+0x838>
  403130:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403134:	add	x0, x0, #0x480
  403138:	ldr	x1, [x0, #280]
  40313c:	cbz	x1, 403c0c <wcrtomb@plt+0x12ec>
  403140:	ldr	x2, [x27]
  403144:	mov	x0, x21
  403148:	mov	w4, #0xa                   	// #10
  40314c:	mov	w3, #0x10000000            	// #268435456
  403150:	bl	415a08 <wcrtomb@plt+0x130e8>
  403154:	cbz	w0, 402a48 <wcrtomb@plt+0x128>
  403158:	bl	402890 <__errno_location@plt>
  40315c:	mov	x1, x25
  403160:	b	403180 <wcrtomb@plt+0x860>
  403164:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  403168:	add	x1, x1, #0x448
  40316c:	bl	402410 <fopen@plt>
  403170:	mov	x24, x0
  403174:	cbnz	x0, 402ec0 <wcrtomb@plt+0x5a0>
  403178:	bl	402890 <__errno_location@plt>
  40317c:	mov	x1, x25
  403180:	ldr	x3, [x1, #1096]
  403184:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  403188:	ldr	w1, [x0]
  40318c:	add	x2, x2, #0x270
  403190:	mov	w0, #0x2                   	// #2
  403194:	bl	402330 <error@plt>
  403198:	ldrb	w0, [sp, #352]
  40319c:	add	x1, x19, #0x15
  4031a0:	cmp	w0, #0x30
  4031a4:	cset	x0, eq  // eq = none
  4031a8:	sub	x0, x25, x0
  4031ac:	cmp	x0, x1
  4031b0:	b.ne	402aa0 <wcrtomb@plt+0x180>  // b.any
  4031b4:	mov	w1, #0x2e2e                	// #11822
  4031b8:	add	x25, x19, #0x18
  4031bc:	movk	w1, #0x2e, lsl #16
  4031c0:	str	w1, [x0]
  4031c4:	b	402ac0 <wcrtomb@plt+0x1a0>
  4031c8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4031cc:	add	x0, x0, #0x480
  4031d0:	mov	w21, w26
  4031d4:	mov	w26, w28
  4031d8:	ldrb	w0, [x0, #460]
  4031dc:	cbnz	w0, 403ad4 <wcrtomb@plt+0x11b4>
  4031e0:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4031e4:	add	x0, x0, #0x480
  4031e8:	ldr	w0, [x0, #464]
  4031ec:	cbnz	w0, 404090 <wcrtomb@plt+0x1770>
  4031f0:	ldr	x0, [sp, #184]
  4031f4:	cbz	x0, 403898 <wcrtomb@plt+0xf78>
  4031f8:	ldr	x0, [sp, #192]
  4031fc:	cbz	x0, 40367c <wcrtomb@plt+0xd5c>
  403200:	sub	x0, x0, #0x1
  403204:	str	x0, [sp, #192]
  403208:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40320c:	add	x0, x0, #0x480
  403210:	ldrb	w22, [x0, #233]
  403214:	cbz	w22, 403848 <wcrtomb@plt+0xf28>
  403218:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40321c:	add	x0, x0, #0x480
  403220:	mov	w22, #0x0                   	// #0
  403224:	str	wzr, [x0, #316]
  403228:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40322c:	add	x1, x1, #0x480
  403230:	mov	w0, #0x1                   	// #1
  403234:	strb	w0, [x1, #232]
  403238:	strb	wzr, [x1, #457]
  40323c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403240:	add	x0, x0, #0x480
  403244:	ldr	x1, [x0, #200]
  403248:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40324c:	add	x0, x0, #0x480
  403250:	ldrb	w2, [x0, #232]
  403254:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403258:	add	x0, x0, #0x480
  40325c:	ldrb	w0, [x0, #457]
  403260:	orr	w0, w0, w2
  403264:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  403268:	add	x2, x2, #0x480
  40326c:	strb	w0, [x2, #176]
  403270:	tbz	x1, #63, 40327c <wcrtomb@plt+0x95c>
  403274:	ldr	x0, [sp, #208]
  403278:	str	x0, [x2, #200]
  40327c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403280:	add	x0, x0, #0x480
  403284:	ldr	x0, [x0, #184]
  403288:	tbz	x0, #63, 40329c <wcrtomb@plt+0x97c>
  40328c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403290:	add	x1, x1, #0x480
  403294:	ldr	x0, [sp, #208]
  403298:	str	x0, [x1, #184]
  40329c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4032a0:	add	x0, x0, #0x480
  4032a4:	ldr	x0, [x0, #320]
  4032a8:	cbz	x0, 4037ac <wcrtomb@plt+0xe8c>
  4032ac:	ldr	x0, [sp, #192]
  4032b0:	cbz	x0, 403784 <wcrtomb@plt+0xe64>
  4032b4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4032b8:	ldr	w0, [x0, #1152]
  4032bc:	cmp	w0, #0x2
  4032c0:	b.eq	403b20 <wcrtomb@plt+0x1200>  // b.none
  4032c4:	bl	41bfa0 <wcrtomb@plt+0x19680>
  4032c8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4032cc:	ldr	w0, [x0, #1152]
  4032d0:	cbnz	w0, 403b50 <wcrtomb@plt+0x1230>
  4032d4:	mov	x0, #0x1                   	// #1
  4032d8:	adrp	x4, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4032dc:	mov	w1, w0
  4032e0:	add	x4, x4, #0x8e3
  4032e4:	mov	w2, #0x0                   	// #0
  4032e8:	b	4032f8 <wcrtomb@plt+0x9d8>
  4032ec:	add	x0, x0, #0x1
  4032f0:	cmp	x0, #0x100
  4032f4:	b.eq	403330 <wcrtomb@plt+0xa10>  // b.none
  4032f8:	ldrsb	w3, [x4, x0]
  4032fc:	tst	w2, w0
  403300:	ccmp	w3, #0x1, #0x4, eq  // eq = none
  403304:	b.eq	4032ec <wcrtomb@plt+0x9cc>  // b.none
  403308:	mov	w3, w1
  40330c:	lsl	w1, w1, #1
  403310:	cmp	w1, w0
  403314:	b.le	403308 <wcrtomb@plt+0x9e8>
  403318:	orr	w2, w3, w2
  40331c:	add	x0, x0, #0x1
  403320:	mov	w1, w3
  403324:	and	w2, w2, #0xff
  403328:	cmp	x0, #0x100
  40332c:	b.ne	4032f8 <wcrtomb@plt+0x9d8>  // b.any
  403330:	and	x0, x2, #0xff
  403334:	mov	x1, #0x101010101010101     	// #72340172838076673
  403338:	mul	x0, x0, x1
  40333c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403340:	add	x1, x1, #0x480
  403344:	str	x0, [x1, #56]
  403348:	ldr	w0, [sp, #148]
  40334c:	tbnz	w0, #31, 403908 <wcrtomb@plt+0xfe8>
  403350:	cmp	w0, #0x2
  403354:	b.eq	403cd0 <wcrtomb@plt+0x13b0>  // b.none
  403358:	ldr	w0, [sp, #148]
  40335c:	cmp	w0, #0x1
  403360:	b.le	40390c <wcrtomb@plt+0xfec>
  403364:	add	x22, sp, #0xd8
  403368:	ldr	w0, [sp, #148]
  40336c:	adrp	x5, 449000 <_obstack_memory_used@@Base+0x2a510>
  403370:	add	x5, x5, #0x480
  403374:	sbfiz	x3, x0, #5, #32
  403378:	add	x3, x20, x3
  40337c:	ldp	x0, x1, [sp, #184]
  403380:	ldrsw	x2, [x3, #12]
  403384:	ldp	x4, x3, [x3, #16]
  403388:	str	x3, [x5, #136]
  40338c:	blr	x4
  403390:	strb	wzr, [sp, #216]
  403394:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403398:	add	x1, x1, #0x480
  40339c:	adrp	x6, 449000 <_obstack_memory_used@@Base+0x2a510>
  4033a0:	add	x6, x6, #0x480
  4033a4:	strb	wzr, [sp, #218]
  4033a8:	mov	x2, #0x1                   	// #1
  4033ac:	ldr	x5, [x1, #136]
  4033b0:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4033b4:	mov	x3, x19
  4033b8:	mov	x4, #0x0                   	// #0
  4033bc:	ldrb	w1, [x1, #2264]
  4033c0:	strb	w1, [sp, #217]
  4033c4:	add	x1, x22, #0x1
  4033c8:	str	x0, [x6, #128]
  4033cc:	blr	x5
  4033d0:	cmp	x0, #0x0
  4033d4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4033d8:	add	x0, x0, #0x480
  4033dc:	cset	w2, eq  // eq = none
  4033e0:	ldrb	w1, [x0, #123]
  4033e4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4033e8:	cmp	w2, w1
  4033ec:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  4033f0:	add	x2, x2, #0x480
  4033f4:	ldr	w0, [x0, #1104]
  4033f8:	cset	w1, eq  // eq = none
  4033fc:	cmp	w21, #0x0
  403400:	sub	w26, w26, w0
  403404:	strb	w1, [x2, #458]
  403408:	ccmp	w26, #0x1, #0x0, eq  // eq = none
  40340c:	b.gt	40383c <wcrtomb@plt+0xf1c>
  403410:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403414:	ldr	w0, [x0, #952]
  403418:	cmp	w0, #0x3
  40341c:	csetm	w1, eq  // eq = none
  403420:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  403424:	add	x2, x2, #0x480
  403428:	mov	w0, #0x1e                  	// #30
  40342c:	str	w1, [x2, #64]
  403430:	bl	402790 <sysconf@plt>
  403434:	mov	x1, #0xfffffffffffffffa    	// #-6
  403438:	sub	x2, x0, #0x1
  40343c:	movk	x1, #0x7fff, lsl #48
  403440:	cmp	x2, x1
  403444:	b.hi	4040ac <wcrtomb@plt+0x178c>  // b.pmore
  403448:	adrp	x3, 449000 <_obstack_memory_used@@Base+0x2a510>
  40344c:	add	x3, x3, #0x480
  403450:	mov	x4, #0x18000               	// #98304
  403454:	add	x2, x0, #0x8
  403458:	add	x1, x0, x4
  40345c:	str	x0, [x3, #256]
  403460:	udiv	x3, x4, x0
  403464:	msub	x0, x3, x0, x4
  403468:	cmp	x0, #0x0
  40346c:	sub	x0, x1, x0
  403470:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403474:	add	x1, x1, #0x480
  403478:	csel	x0, x0, x4, ne  // ne = any
  40347c:	add	x0, x2, x0
  403480:	str	x0, [x1, #248]
  403484:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  403488:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40348c:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  403490:	add	x1, x1, #0x360
  403494:	add	x2, x2, #0x480
  403498:	str	x0, [x2, #240]
  40349c:	ldr	w0, [x1, #92]
  4034a0:	tbz	w0, #1, 4034ac <wcrtomb@plt+0xb8c>
  4034a4:	ldr	w0, [x2, #308]
  4034a8:	cbz	w0, 403a28 <wcrtomb@plt+0x1108>
  4034ac:	cmp	w26, #0x0
  4034b0:	b.le	403a0c <wcrtomb@plt+0x10ec>
  4034b4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4034b8:	ldrsw	x20, [x0, #1104]
  4034bc:	ldr	x0, [sp, #128]
  4034c0:	add	x20, x0, x20, lsl #3
  4034c4:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x10510>
  4034c8:	adrp	x23, 42f000 <_obstack_memory_used@@Base+0x10510>
  4034cc:	add	x22, x22, #0x270
  4034d0:	add	x23, x23, #0x3d0
  4034d4:	mov	w19, #0x1                   	// #1
  4034d8:	mov	w21, #0x100                 	// #256
  4034dc:	b	403518 <wcrtomb@plt+0xbf8>
  4034e0:	ldrb	w0, [x1, #1]
  4034e4:	cbnz	w0, 403528 <wcrtomb@plt+0xc08>
  4034e8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4034ec:	add	x0, x0, #0x480
  4034f0:	adrp	x3, 449000 <_obstack_memory_used@@Base+0x2a510>
  4034f4:	add	x3, x3, #0x480
  4034f8:	mov	w1, #0x1                   	// #1
  4034fc:	ldr	x2, [x0, #472]
  403500:	mov	w0, #0x0                   	// #0
  403504:	str	x2, [x3, #40]
  403508:	bl	4065a8 <wcrtomb@plt+0x3c88>
  40350c:	and	w19, w19, w0
  403510:	ldr	x0, [x20]
  403514:	cbz	x0, 40356c <wcrtomb@plt+0xc4c>
  403518:	ldr	x1, [x20], #8
  40351c:	ldrb	w0, [x1]
  403520:	cmp	w0, #0x2d
  403524:	b.eq	4034e0 <wcrtomb@plt+0xbc0>  // b.none
  403528:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40352c:	add	x0, x0, #0x480
  403530:	mov	w2, #0x900                 	// #2304
  403534:	ldr	w3, [x0, #308]
  403538:	mov	w0, #0xffffff9c            	// #-100
  40353c:	cmp	w3, #0x2
  403540:	adrp	x3, 449000 <_obstack_memory_used@@Base+0x2a510>
  403544:	add	x3, x3, #0x480
  403548:	csel	w2, w21, w2, ne  // ne = any
  40354c:	str	x1, [x3, #40]
  403550:	bl	417750 <wcrtomb@plt+0x14e30>
  403554:	tbnz	w0, #31, 403760 <wcrtomb@plt+0xe40>
  403558:	mov	w1, #0x1                   	// #1
  40355c:	bl	4065a8 <wcrtomb@plt+0x3c88>
  403560:	and	w19, w19, w0
  403564:	ldr	x0, [x20]
  403568:	cbnz	x0, 403518 <wcrtomb@plt+0xbf8>
  40356c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403570:	add	x0, x0, #0x480
  403574:	ldrb	w1, [x0, #234]
  403578:	mov	w0, #0x2                   	// #2
  40357c:	cmp	w1, #0x0
  403580:	csel	w0, w19, w0, eq  // eq = none
  403584:	ldp	x19, x20, [sp, #16]
  403588:	ldp	x21, x22, [sp, #32]
  40358c:	ldp	x23, x24, [sp, #48]
  403590:	ldp	x25, x26, [sp, #64]
  403594:	ldp	x27, x28, [sp, #80]
  403598:	ldp	x29, x30, [sp], #480
  40359c:	ret
  4035a0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  4035a4:	mov	x0, x21
  4035a8:	add	x1, x1, #0x408
  4035ac:	bl	402690 <strcmp@plt>
  4035b0:	cbnz	w0, 40406c <wcrtomb@plt+0x174c>
  4035b4:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  4035b8:	add	x1, x1, #0x480
  4035bc:	mov	w0, #0x2                   	// #2
  4035c0:	str	w0, [x1, #308]
  4035c4:	b	402a48 <wcrtomb@plt+0x128>
  4035c8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  4035cc:	mov	x0, x21
  4035d0:	add	x1, x1, #0x4b0
  4035d4:	bl	40d2d8 <wcrtomb@plt+0xa9b8>
  4035d8:	cbz	w0, 402e14 <wcrtomb@plt+0x4f4>
  4035dc:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  4035e0:	mov	x0, x21
  4035e4:	add	x1, x1, #0x4b8
  4035e8:	bl	40d2d8 <wcrtomb@plt+0xa9b8>
  4035ec:	cbz	w0, 402e14 <wcrtomb@plt+0x4f4>
  4035f0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  4035f4:	mov	x0, x21
  4035f8:	add	x1, x1, #0x4c0
  4035fc:	bl	40d2d8 <wcrtomb@plt+0xa9b8>
  403600:	cbz	w0, 403a3c <wcrtomb@plt+0x111c>
  403604:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  403608:	mov	x0, x21
  40360c:	add	x1, x1, #0x4c8
  403610:	bl	40d2d8 <wcrtomb@plt+0xa9b8>
  403614:	cbz	w0, 403a3c <wcrtomb@plt+0x111c>
  403618:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  40361c:	mov	x0, x21
  403620:	add	x1, x1, #0x4d0
  403624:	bl	40d2d8 <wcrtomb@plt+0xa9b8>
  403628:	cbz	w0, 403a3c <wcrtomb@plt+0x111c>
  40362c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  403630:	mov	x0, x21
  403634:	add	x1, x1, #0x4d8
  403638:	bl	40d2d8 <wcrtomb@plt+0xa9b8>
  40363c:	cbz	w0, 403828 <wcrtomb@plt+0xf08>
  403640:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  403644:	mov	x0, x21
  403648:	add	x1, x1, #0x4e0
  40364c:	bl	40d2d8 <wcrtomb@plt+0xa9b8>
  403650:	cbz	w0, 403828 <wcrtomb@plt+0xf08>
  403654:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  403658:	mov	x0, x21
  40365c:	add	x1, x1, #0x4e8
  403660:	bl	40d2d8 <wcrtomb@plt+0xa9b8>
  403664:	cbz	w0, 403828 <wcrtomb@plt+0xf08>
  403668:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40366c:	add	x1, x1, #0x480
  403670:	mov	w0, #0x1                   	// #1
  403674:	str	w0, [x1, #464]
  403678:	b	402a48 <wcrtomb@plt+0x128>
  40367c:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  403680:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403684:	add	x0, x0, #0x480
  403688:	adrp	x2, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40368c:	strb	wzr, [x1, #3557]
  403690:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403694:	add	x1, x1, #0x480
  403698:	strb	wzr, [x2, #3556]
  40369c:	ldrb	w0, [x0, #123]
  4036a0:	eor	w0, w0, #0x1
  4036a4:	strb	w0, [x1, #123]
  4036a8:	b	403208 <wcrtomb@plt+0x8e8>
  4036ac:	bl	402300 <strlen@plt>
  4036b0:	add	x0, x0, #0x1
  4036b4:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4036b8:	mov	x21, x0
  4036bc:	mov	x1, x21
  4036c0:	mov	x0, x19
  4036c4:	mov	x2, #0x0                   	// #0
  4036c8:	bl	404f90 <wcrtomb@plt+0x2670>
  4036cc:	mov	w1, #0x7fffffff            	// #2147483647
  4036d0:	sub	w1, w1, w26
  4036d4:	mov	x22, x0
  4036d8:	cmp	x0, w1, sxtw
  4036dc:	b.hi	4040a8 <wcrtomb@plt+0x1788>  // b.pmore
  4036e0:	sxtw	x2, w26
  4036e4:	add	w26, w26, w0
  4036e8:	add	x2, x2, #0x1
  4036ec:	add	x2, x2, x0
  4036f0:	ldr	x20, [sp, #128]
  4036f4:	lsl	x0, x2, #3
  4036f8:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4036fc:	mov	x25, x0
  403700:	mov	x2, x25
  403704:	mov	x1, x21
  403708:	ldr	x3, [x20], #8
  40370c:	mov	x0, x19
  403710:	str	x3, [x2], #8
  403714:	bl	404f90 <wcrtomb@plt+0x2670>
  403718:	add	x3, x2, x0, lsl #3
  40371c:	mov	x1, #0x0                   	// #0
  403720:	ldr	x0, [x20, x1]
  403724:	str	x0, [x3, x1]
  403728:	add	x1, x1, #0x8
  40372c:	cbnz	x0, 403720 <wcrtomb@plt+0xe00>
  403730:	str	w22, [sp, #164]
  403734:	cbz	x22, 403800 <wcrtomb@plt+0xee0>
  403738:	mov	w2, #0x5                   	// #5
  40373c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  403740:	add	x1, x1, #0x3b8
  403744:	bl	4027f0 <dcgettext@plt>
  403748:	mov	w1, #0x0                   	// #0
  40374c:	mov	x2, x0
  403750:	mov	w0, #0x0                   	// #0
  403754:	str	x25, [sp, #128]
  403758:	bl	402330 <error@plt>
  40375c:	b	402a14 <wcrtomb@plt+0xf4>
  403760:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403764:	add	x0, x0, #0x480
  403768:	ldrb	w0, [x0, #304]
  40376c:	cbz	w0, 4037c8 <wcrtomb@plt+0xea8>
  403770:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403774:	add	x1, x1, #0x480
  403778:	mov	w0, #0x1                   	// #1
  40377c:	strb	w0, [x1, #234]
  403780:	b	403510 <wcrtomb@plt+0xbf0>
  403784:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403788:	add	x0, x0, #0x480
  40378c:	ldrb	w0, [x0, #123]
  403790:	cbz	w0, 4032b4 <wcrtomb@plt+0x994>
  403794:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  403798:	ldrb	w0, [x0, #3557]
  40379c:	cbnz	w0, 4032b4 <wcrtomb@plt+0x994>
  4037a0:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4037a4:	ldrb	w0, [x0, #3556]
  4037a8:	cbnz	w0, 4032b4 <wcrtomb@plt+0x994>
  4037ac:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4037b0:	add	x0, x0, #0x480
  4037b4:	ldr	w0, [x0, #316]
  4037b8:	cmp	w0, #0x2
  4037bc:	b.eq	4032b4 <wcrtomb@plt+0x994>  // b.none
  4037c0:	mov	w0, #0x1                   	// #1
  4037c4:	b	403584 <wcrtomb@plt+0xc64>
  4037c8:	bl	402890 <__errno_location@plt>
  4037cc:	ldr	w24, [x0]
  4037d0:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  4037d4:	add	x1, x1, #0x480
  4037d8:	ldr	x1, [x1, #40]
  4037dc:	cbz	x1, 403d24 <wcrtomb@plt+0x1404>
  4037e0:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4037e4:	add	x0, x0, #0x480
  4037e8:	mov	w1, w24
  4037ec:	mov	x2, x22
  4037f0:	ldr	x3, [x0, #40]
  4037f4:	mov	w0, #0x0                   	// #0
  4037f8:	bl	402330 <error@plt>
  4037fc:	b	403770 <wcrtomb@plt+0xe50>
  403800:	str	x25, [sp, #128]
  403804:	str	wzr, [sp, #164]
  403808:	b	402a14 <wcrtomb@plt+0xf4>
  40380c:	add	x1, sp, #0xc8
  403810:	str	x2, [sp, #200]
  403814:	bl	41b640 <wcrtomb@plt+0x18d20>
  403818:	str	x0, [sp, #184]
  40381c:	ldr	x27, [x25, #1096]
  403820:	ldr	x24, [sp, #192]
  403824:	b	402fc4 <wcrtomb@plt+0x6a4>
  403828:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40382c:	add	x1, x1, #0x480
  403830:	mov	w0, #0x2                   	// #2
  403834:	str	w0, [x1]
  403838:	b	402a48 <wcrtomb@plt+0x128>
  40383c:	mvn	w1, w21
  403840:	lsr	w1, w1, #31
  403844:	b	403420 <wcrtomb@plt+0xb00>
  403848:	add	x2, sp, #0xe0
  40384c:	mov	w1, #0x1                   	// #1
  403850:	mov	w0, #0x0                   	// #0
  403854:	bl	4027d0 <__fxstat@plt>
  403858:	cbnz	w0, 403874 <wcrtomb@plt+0xf54>
  40385c:	ldr	w1, [sp, #240]
  403860:	and	w1, w1, #0xf000
  403864:	cmp	w1, #0x8, lsl #12
  403868:	b.eq	403e38 <wcrtomb@plt+0x1518>  // b.none
  40386c:	cmp	w1, #0x2, lsl #12
  403870:	b.eq	403de8 <wcrtomb@plt+0x14c8>  // b.none
  403874:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403878:	add	x0, x0, #0x480
  40387c:	ldrb	w0, [x0, #459]
  403880:	cbnz	w0, 403228 <wcrtomb@plt+0x908>
  403884:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403888:	add	x0, x0, #0x480
  40388c:	ldr	w0, [x0, #316]
  403890:	cbz	w0, 40323c <wcrtomb@plt+0x91c>
  403894:	b	403228 <wcrtomb@plt+0x908>
  403898:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40389c:	ldr	w22, [x0, #1104]
  4038a0:	cmp	w22, w28
  4038a4:	b.ge	403d44 <wcrtomb@plt+0x1424>  // b.tcont
  4038a8:	ldr	x0, [sp, #128]
  4038ac:	ldr	x23, [x0, w22, sxtw #3]
  4038b0:	add	w22, w22, #0x1
  4038b4:	mov	x0, x23
  4038b8:	bl	402300 <strlen@plt>
  4038bc:	mov	x2, x0
  4038c0:	adrp	x3, 449000 <_obstack_memory_used@@Base+0x2a510>
  4038c4:	add	x1, x2, #0x1
  4038c8:	mov	x0, x23
  4038cc:	str	w22, [x3, #1104]
  4038d0:	str	x2, [sp, #192]
  4038d4:	bl	41b6f8 <wcrtomb@plt+0x18dd8>
  4038d8:	ldr	x2, [sp, #136]
  4038dc:	str	x0, [sp, #184]
  4038e0:	ldr	x1, [sp, #192]
  4038e4:	bl	4051b0 <wcrtomb@plt+0x2890>
  4038e8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  4038ec:	add	x0, x0, #0x480
  4038f0:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  4038f4:	add	x1, x1, #0x480
  4038f8:	ldr	x0, [x0, #32]
  4038fc:	add	x0, x0, #0x1
  403900:	str	x0, [x1, #32]
  403904:	b	403208 <wcrtomb@plt+0x8e8>
  403908:	str	wzr, [sp, #148]
  40390c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403910:	add	x0, x0, #0x480
  403914:	ldr	x0, [x0, #32]
  403918:	cmp	x0, #0x1
  40391c:	b.ls	403364 <wcrtomb@plt+0xa44>  // b.plast
  403920:	ldp	x24, x8, [sp, #184]
  403924:	mov	x23, #0x11                  	// #17
  403928:	str	x8, [sp, #112]
  40392c:	movk	x23, #0x220, lsl #16
  403930:	mov	x28, #0x400                 	// #1024
  403934:	movk	x23, #0x14, lsl #32
  403938:	mov	x27, #0x2                   	// #2
  40393c:	movk	x28, #0x80, lsl #32
  403940:	add	x22, sp, #0xd8
  403944:	movk	x23, #0x220, lsl #48
  403948:	add	x0, x8, #0x1
  40394c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  403950:	ldr	x8, [sp, #112]
  403954:	mov	x25, x0
  403958:	movk	x27, #0x6000, lsl #48
  40395c:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  403960:	movk	x28, #0x13fe, lsl #48
  403964:	add	x0, x0, #0xde6
  403968:	str	x25, [sp, #104]
  40396c:	str	x0, [sp, #136]
  403970:	str	x24, [sp, #168]
  403974:	str	xzr, [sp, #216]
  403978:	cbz	x8, 40402c <wcrtomb@plt+0x170c>
  40397c:	ldrb	w2, [x24]
  403980:	cmp	w2, #0x5b
  403984:	b.eq	403a5c <wcrtomb@plt+0x113c>  // b.none
  403988:	b.hi	403a68 <wcrtomb@plt+0x1148>  // b.pmore
  40398c:	cmp	w2, #0x2e
  403990:	b.hi	403a4c <wcrtomb@plt+0x112c>  // b.pmore
  403994:	cmp	w2, #0x23
  403998:	b.ls	4039bc <wcrtomb@plt+0x109c>  // b.plast
  40399c:	mov	x0, #0x1                   	// #1
  4039a0:	mov	x1, #0x441000000000        	// #74835510165504
  4039a4:	lsl	x0, x0, x2
  4039a8:	tst	x0, x1
  4039ac:	b.ne	403a5c <wcrtomb@plt+0x113c>  // b.any
  4039b0:	mov	x1, #0x90000000000         	// #9895604649984
  4039b4:	tst	x0, x1
  4039b8:	b.ne	403a54 <wcrtomb@plt+0x1134>  // b.any
  4039bc:	ldr	x1, [sp, #136]
  4039c0:	adrp	x2, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4039c4:	ldrb	w0, [x24]
  4039c8:	add	x2, x2, #0x8e0
  4039cc:	ldrb	w1, [x1]
  4039d0:	add	x0, x2, x0
  4039d4:	ldrsb	w2, [x0, #3]
  4039d8:	cbz	w1, 403d0c <wcrtomb@plt+0x13ec>
  4039dc:	str	w2, [sp, #152]
  4039e0:	tbnz	w2, #31, 403d64 <wcrtomb@plt+0x1444>
  4039e4:	ldrsw	x2, [sp, #152]
  4039e8:	ldr	x0, [sp, #104]
  4039ec:	mov	x1, x24
  4039f0:	stp	x2, x8, [sp, #104]
  4039f4:	bl	4026d0 <mempcpy@plt>
  4039f8:	ldp	x2, x8, [sp, #104]
  4039fc:	str	x0, [sp, #104]
  403a00:	sub	x8, x8, x2
  403a04:	add	x24, x24, x2
  403a08:	b	403978 <wcrtomb@plt+0x1058>
  403a0c:	ldr	w0, [x1, #88]
  403a10:	cmp	w0, #0x3
  403a14:	ldp	w0, w1, [sp, #160]
  403a18:	ccmp	w0, w1, #0x4, eq  // eq = none
  403a1c:	b.gt	403d4c <wcrtomb@plt+0x142c>
  403a20:	add	x20, x20, #0x1f0
  403a24:	b	4034c4 <wcrtomb@plt+0xba4>
  403a28:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  403a2c:	add	x2, x2, #0x480
  403a30:	mov	w0, #0x1                   	// #1
  403a34:	str	w0, [x2, #308]
  403a38:	b	4034ac <wcrtomb@plt+0xb8c>
  403a3c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403a40:	add	x0, x0, #0x480
  403a44:	str	wzr, [x0]
  403a48:	b	402a48 <wcrtomb@plt+0x128>
  403a4c:	cmp	w2, #0x3f
  403a50:	b.ne	4039bc <wcrtomb@plt+0x109c>  // b.any
  403a54:	ldr	w0, [sp, #148]
  403a58:	cbz	w0, 4039bc <wcrtomb@plt+0x109c>
  403a5c:	mov	x0, x25
  403a60:	bl	4026b0 <free@plt>
  403a64:	b	403368 <wcrtomb@plt+0xa48>
  403a68:	cmp	w2, #0x5c
  403a6c:	b.ne	403ab8 <wcrtomb@plt+0x1198>  // b.any
  403a70:	cmp	x8, #0x1
  403a74:	b.ls	403de0 <wcrtomb@plt+0x14c0>  // b.plast
  403a78:	ldrb	w1, [x24, #1]
  403a7c:	cmp	w1, #0x3c
  403a80:	b.ls	403ee0 <wcrtomb@plt+0x15c0>  // b.plast
  403a84:	sub	w0, w1, #0x3e
  403a88:	and	w1, w0, #0xff
  403a8c:	cmp	w1, #0x3e
  403a90:	b.hi	403aac <wcrtomb@plt+0x118c>  // b.pmore
  403a94:	mov	x0, #0x1                   	// #1
  403a98:	lsl	x0, x0, x1
  403a9c:	tst	x0, x23
  403aa0:	b.ne	403a5c <wcrtomb@plt+0x113c>  // b.any
  403aa4:	tst	x0, x27
  403aa8:	b.ne	403f04 <wcrtomb@plt+0x15e4>  // b.any
  403aac:	add	x24, x24, #0x1
  403ab0:	sub	x8, x8, #0x1
  403ab4:	b	4039bc <wcrtomb@plt+0x109c>
  403ab8:	cmp	w2, #0x5e
  403abc:	b.eq	403a5c <wcrtomb@plt+0x113c>  // b.none
  403ac0:	sub	w0, w2, #0x7b
  403ac4:	and	w0, w0, #0xff
  403ac8:	cmp	w0, #0x1
  403acc:	b.hi	4039bc <wcrtomb@plt+0x109c>  // b.pmore
  403ad0:	b	403a54 <wcrtomb@plt+0x1134>
  403ad4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403ad8:	ldr	x19, [x0, #1112]
  403adc:	bl	415c38 <wcrtomb@plt+0x13318>
  403ae0:	mov	x4, #0x0                   	// #0
  403ae4:	mov	x1, x0
  403ae8:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x11510>
  403aec:	mov	x0, x19
  403af0:	add	x3, x3, #0x4f0
  403af4:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x11510>
  403af8:	add	x2, x2, #0x4f8
  403afc:	bl	41b258 <wcrtomb@plt+0x18938>
  403b00:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  403b04:	add	x1, x1, #0x508
  403b08:	mov	w2, #0x5                   	// #5
  403b0c:	mov	x0, #0x0                   	// #0
  403b10:	bl	4027f0 <dcgettext@plt>
  403b14:	bl	402640 <puts@plt>
  403b18:	mov	w0, #0x0                   	// #0
  403b1c:	b	403584 <wcrtomb@plt+0xc64>
  403b20:	cbnz	w22, 403b34 <wcrtomb@plt+0x1214>
  403b24:	mov	w0, #0x0                   	// #0
  403b28:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403b2c:	str	w0, [x1, #1152]
  403b30:	b	4032c4 <wcrtomb@plt+0x9a4>
  403b34:	bl	41bf60 <wcrtomb@plt+0x19640>
  403b38:	cbz	w0, 403b24 <wcrtomb@plt+0x1204>
  403b3c:	mov	w0, #0x1                   	// #1
  403b40:	bl	402780 <isatty@plt>
  403b44:	cmp	w0, #0x0
  403b48:	cset	w0, ne  // ne = any
  403b4c:	b	403b28 <wcrtomb@plt+0x1208>
  403b50:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  403b54:	add	x0, x0, #0x578
  403b58:	bl	4028a0 <getenv@plt>
  403b5c:	cbz	x0, 403b78 <wcrtomb@plt+0x1258>
  403b60:	ldrb	w1, [x0]
  403b64:	cbz	w1, 403b78 <wcrtomb@plt+0x1258>
  403b68:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403b6c:	add	x2, x1, #0x360
  403b70:	str	x0, [x1, #864]
  403b74:	str	x0, [x2, #8]
  403b78:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  403b7c:	add	x0, x0, #0x588
  403b80:	bl	4028a0 <getenv@plt>
  403b84:	cbz	x0, 4032d4 <wcrtomb@plt+0x9b4>
  403b88:	ldrb	w1, [x0]
  403b8c:	cbz	w1, 4032d4 <wcrtomb@plt+0x9b4>
  403b90:	bl	41b738 <wcrtomb@plt+0x18e18>
  403b94:	mov	x28, x0
  403b98:	mov	x23, x28
  403b9c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  403ba0:	add	x24, x0, #0x380
  403ba4:	mov	x25, #0x0                   	// #0
  403ba8:	ldrb	w27, [x23]
  403bac:	cmp	w27, #0x3a
  403bb0:	ccmp	w27, #0x0, #0x4, ne  // ne = any
  403bb4:	b.eq	403c60 <wcrtomb@plt+0x1340>  // b.none
  403bb8:	cmp	w27, #0x3d
  403bbc:	b.eq	403cb4 <wcrtomb@plt+0x1394>  // b.none
  403bc0:	cbz	x25, 403bd8 <wcrtomb@plt+0x12b8>
  403bc4:	cmp	w27, #0x3b
  403bc8:	b.eq	403bd8 <wcrtomb@plt+0x12b8>  // b.none
  403bcc:	sub	w27, w27, #0x30
  403bd0:	cmp	w27, #0x9
  403bd4:	b.hi	4032d4 <wcrtomb@plt+0x9b4>  // b.pmore
  403bd8:	add	x23, x23, #0x1
  403bdc:	b	403ba8 <wcrtomb@plt+0x1288>
  403be0:	bl	4150c0 <wcrtomb@plt+0x127a0>
  403be4:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403be8:	add	x1, x1, #0x480
  403bec:	str	x0, [x1, #296]
  403bf0:	b	402de4 <wcrtomb@plt+0x4c4>
  403bf4:	bl	4150c0 <wcrtomb@plt+0x127a0>
  403bf8:	mov	x1, x0
  403bfc:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403c00:	add	x0, x0, #0x480
  403c04:	str	x1, [x0, #272]
  403c08:	b	403108 <wcrtomb@plt+0x7e8>
  403c0c:	bl	4150c0 <wcrtomb@plt+0x127a0>
  403c10:	mov	x1, x0
  403c14:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403c18:	add	x0, x0, #0x480
  403c1c:	str	x1, [x0, #280]
  403c20:	b	403140 <wcrtomb@plt+0x820>
  403c24:	bl	4150c0 <wcrtomb@plt+0x127a0>
  403c28:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403c2c:	add	x1, x1, #0x480
  403c30:	str	x0, [x1, #272]
  403c34:	b	402d5c <wcrtomb@plt+0x43c>
  403c38:	bl	4150c0 <wcrtomb@plt+0x127a0>
  403c3c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403c40:	add	x1, x1, #0x480
  403c44:	str	x0, [x1, #280]
  403c48:	b	402d98 <wcrtomb@plt+0x478>
  403c4c:	bl	4150c0 <wcrtomb@plt+0x127a0>
  403c50:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403c54:	add	x1, x1, #0x480
  403c58:	str	x0, [x1, #288]
  403c5c:	b	402dc8 <wcrtomb@plt+0x4a8>
  403c60:	add	x22, x20, #0xc0
  403c64:	mov	x0, x24
  403c68:	strb	wzr, [x23], #1
  403c6c:	b	403c78 <wcrtomb@plt+0x1358>
  403c70:	ldr	x0, [x22, #24]!
  403c74:	cbz	x0, 403c84 <wcrtomb@plt+0x1364>
  403c78:	mov	x1, x28
  403c7c:	bl	402690 <strcmp@plt>
  403c80:	cbnz	w0, 403c70 <wcrtomb@plt+0x1350>
  403c84:	ldr	x0, [x22, #8]
  403c88:	cmp	x25, #0x0
  403c8c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  403c90:	b.eq	403c98 <wcrtomb@plt+0x1378>  // b.none
  403c94:	str	x25, [x0]
  403c98:	ldr	x0, [x22, #16]
  403c9c:	cbz	x0, 403ca4 <wcrtomb@plt+0x1384>
  403ca0:	blr	x0
  403ca4:	cbz	w27, 4032d4 <wcrtomb@plt+0x9b4>
  403ca8:	mov	x28, x23
  403cac:	mov	x25, #0x0                   	// #0
  403cb0:	b	403ba8 <wcrtomb@plt+0x1288>
  403cb4:	cmp	x25, #0x0
  403cb8:	ccmp	x28, x23, #0x4, eq  // eq = none
  403cbc:	b.eq	4032d4 <wcrtomb@plt+0x9b4>  // b.none
  403cc0:	add	x25, x23, #0x1
  403cc4:	strb	wzr, [x23]
  403cc8:	mov	x23, x25
  403ccc:	b	403ba8 <wcrtomb@plt+0x1288>
  403cd0:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  403cd4:	ldrb	w0, [x0, #2272]
  403cd8:	cbnz	w0, 403e88 <wcrtomb@plt+0x1568>
  403cdc:	ldr	x0, [x1, #32]
  403ce0:	cmp	x0, #0x1
  403ce4:	b.ne	403364 <wcrtomb@plt+0xa44>  // b.any
  403ce8:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  403cec:	add	x22, sp, #0xd8
  403cf0:	ldrb	w0, [x0, #3556]
  403cf4:	cbz	w0, 403368 <wcrtomb@plt+0xa48>
  403cf8:	add	x1, sp, #0xc0
  403cfc:	add	x0, sp, #0xb8
  403d00:	str	wzr, [sp, #148]
  403d04:	bl	407cc8 <wcrtomb@plt+0x53a8>
  403d08:	b	403368 <wcrtomb@plt+0xa48>
  403d0c:	sxtb	x2, w2
  403d10:	cmn	x2, #0x2
  403d14:	b.eq	403f10 <wcrtomb@plt+0x15f0>  // b.none
  403d18:	cmp	x2, #0x10
  403d1c:	b.ls	4039e8 <wcrtomb@plt+0x10c8>  // b.plast
  403d20:	b	403a5c <wcrtomb@plt+0x113c>
  403d24:	mov	x1, x23
  403d28:	mov	w2, #0x5                   	// #5
  403d2c:	mov	x0, #0x0                   	// #0
  403d30:	bl	4027f0 <dcgettext@plt>
  403d34:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403d38:	add	x1, x1, #0x480
  403d3c:	str	x0, [x1, #40]
  403d40:	b	4037e0 <wcrtomb@plt+0xec0>
  403d44:	mov	w0, #0x2                   	// #2
  403d48:	bl	407ac8 <wcrtomb@plt+0x51a8>
  403d4c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403d50:	add	x1, x1, #0x480
  403d54:	mov	w0, #0x1                   	// #1
  403d58:	add	x20, x20, #0x1e0
  403d5c:	strb	w0, [x1, #312]
  403d60:	b	4034c4 <wcrtomb@plt+0xba4>
  403d64:	mov	x3, x22
  403d68:	mov	x2, x8
  403d6c:	mov	x1, x24
  403d70:	add	x0, sp, #0xb4
  403d74:	str	x8, [sp, #120]
  403d78:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  403d7c:	str	x0, [sp, #112]
  403d80:	cmp	x0, #0x10
  403d84:	b.hi	403a5c <wcrtomb@plt+0x113c>  // b.pmore
  403d88:	ldr	w0, [sp, #180]
  403d8c:	mov	x1, x19
  403d90:	bl	4147b8 <wcrtomb@plt+0x11e98>
  403d94:	cbnz	w0, 403a5c <wcrtomb@plt+0x113c>
  403d98:	ldp	x2, x8, [sp, #112]
  403d9c:	str	w2, [sp, #152]
  403da0:	sub	w1, w2, #0x1
  403da4:	sxtw	x1, w1
  403da8:	b	403dd4 <wcrtomb@plt+0x14b4>
  403dac:	stp	x1, x8, [sp, #112]
  403db0:	bl	402560 <__ctype_toupper_loc@plt>
  403db4:	ldp	x1, x8, [sp, #112]
  403db8:	ldr	x3, [x0]
  403dbc:	ldrb	w2, [x24, x1]
  403dc0:	sub	x1, x1, #0x1
  403dc4:	ubfiz	x0, x2, #2, #8
  403dc8:	ldr	w0, [x3, x0]
  403dcc:	cmp	w0, w2
  403dd0:	b.ne	403a5c <wcrtomb@plt+0x113c>  // b.any
  403dd4:	cmp	w1, #0x0
  403dd8:	b.gt	403dac <wcrtomb@plt+0x148c>
  403ddc:	b	4039e4 <wcrtomb@plt+0x10c4>
  403de0:	mov	x8, #0x1                   	// #1
  403de4:	b	4039bc <wcrtomb@plt+0x109c>
  403de8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  403dec:	mov	x2, x19
  403df0:	add	x1, x1, #0x568
  403df4:	bl	4028b0 <__xstat@plt>
  403df8:	cbnz	w0, 403e0c <wcrtomb@plt+0x14ec>
  403dfc:	ldr	x1, [sp, #232]
  403e00:	ldr	x0, [sp, #360]
  403e04:	cmp	x1, x0
  403e08:	b.eq	403e14 <wcrtomb@plt+0x14f4>  // b.none
  403e0c:	mov	w22, #0x1                   	// #1
  403e10:	b	403874 <wcrtomb@plt+0xf54>
  403e14:	ldr	x1, [sp, #224]
  403e18:	ldr	x0, [sp, #352]
  403e1c:	cmp	x1, x0
  403e20:	b.ne	403e0c <wcrtomb@plt+0x14ec>  // b.any
  403e24:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  403e28:	add	x1, x1, #0x480
  403e2c:	mov	w0, #0x1                   	// #1
  403e30:	strb	w0, [x1, #459]
  403e34:	b	403874 <wcrtomb@plt+0xf54>
  403e38:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  403e3c:	add	x0, x0, #0x480
  403e40:	add	x0, x0, #0x148
  403e44:	ldp	x4, x5, [sp, #224]
  403e48:	ldp	x2, x3, [sp, #240]
  403e4c:	stp	x4, x5, [x0]
  403e50:	stp	x2, x3, [x0, #16]
  403e54:	ldp	x4, x5, [sp, #256]
  403e58:	stp	x4, x5, [x0, #32]
  403e5c:	ldp	x2, x3, [sp, #272]
  403e60:	stp	x2, x3, [x0, #48]
  403e64:	ldp	x4, x5, [sp, #288]
  403e68:	stp	x4, x5, [x0, #64]
  403e6c:	ldp	x2, x3, [sp, #304]
  403e70:	stp	x2, x3, [x0, #80]
  403e74:	ldp	x4, x5, [sp, #320]
  403e78:	stp	x4, x5, [x0, #96]
  403e7c:	ldp	x2, x3, [sp, #336]
  403e80:	stp	x2, x3, [x0, #112]
  403e84:	b	403874 <wcrtomb@plt+0xf54>
  403e88:	mov	x22, #0x0                   	// #0
  403e8c:	str	xzr, [sp, #352]
  403e90:	ldp	x23, x27, [sp, #184]
  403e94:	b	403ea4 <wcrtomb@plt+0x1584>
  403e98:	cmn	x1, #0x3
  403e9c:	b.hi	403f30 <wcrtomb@plt+0x1610>  // b.pmore
  403ea0:	add	x22, x22, x1
  403ea4:	cmp	x27, x22
  403ea8:	b.ls	403f38 <wcrtomb@plt+0x1618>  // b.plast
  403eac:	ldrb	w1, [x23, x22]
  403eb0:	adrp	x2, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  403eb4:	add	x2, x2, #0x8e0
  403eb8:	add	x0, x23, x22
  403ebc:	add	x1, x2, x1
  403ec0:	ldrsb	x1, [x1, #3]
  403ec4:	cmn	x1, #0x2
  403ec8:	b.ne	403e98 <wcrtomb@plt+0x1578>  // b.any
  403ecc:	sub	x1, x27, x22
  403ed0:	mov	x2, x19
  403ed4:	bl	41e5f0 <wcrtomb@plt+0x1bcd0>
  403ed8:	mov	x1, x0
  403edc:	b	403e98 <wcrtomb@plt+0x1578>
  403ee0:	cmp	w1, #0x9
  403ee4:	b.ls	403aac <wcrtomb@plt+0x118c>  // b.plast
  403ee8:	mov	x0, #0x1                   	// #1
  403eec:	lsl	x0, x0, x1
  403ef0:	tst	x0, x28
  403ef4:	b.ne	403a5c <wcrtomb@plt+0x113c>  // b.any
  403ef8:	mov	x1, #0x90000000000         	// #9895604649984
  403efc:	tst	x0, x1
  403f00:	b.eq	403aac <wcrtomb@plt+0x118c>  // b.none
  403f04:	ldr	w0, [sp, #148]
  403f08:	cbnz	w0, 403aac <wcrtomb@plt+0x118c>
  403f0c:	b	403a5c <wcrtomb@plt+0x113c>
  403f10:	mov	x2, x22
  403f14:	mov	x1, x8
  403f18:	mov	x0, x24
  403f1c:	str	x8, [sp, #112]
  403f20:	bl	41e5f0 <wcrtomb@plt+0x1bcd0>
  403f24:	mov	x2, x0
  403f28:	ldr	x8, [sp, #112]
  403f2c:	b	403d18 <wcrtomb@plt+0x13f8>
  403f30:	add	x22, sp, #0xd8
  403f34:	b	403cf8 <wcrtomb@plt+0x13d8>
  403f38:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  403f3c:	ldrb	w0, [x0, #3558]
  403f40:	cbz	w0, 403364 <wcrtomb@plt+0xa44>
  403f44:	mov	x23, #0x0                   	// #0
  403f48:	add	x22, sp, #0xd8
  403f4c:	mov	x28, x23
  403f50:	str	xzr, [sp, #216]
  403f54:	ldp	x24, x0, [sp, #184]
  403f58:	str	x0, [sp, #104]
  403f5c:	ldr	x0, [sp, #104]
  403f60:	cmp	x28, x0
  403f64:	b.cs	403368 <wcrtomb@plt+0xa48>  // b.hs, b.nlast
  403f68:	ldrb	w0, [x24, x28]
  403f6c:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  403f70:	add	x1, x1, #0x8e0
  403f74:	add	x27, x24, x28
  403f78:	add	x0, x1, x0
  403f7c:	ldrsb	w23, [x0, #3]
  403f80:	tbnz	w23, #31, 403f8c <wcrtomb@plt+0x166c>
  403f84:	add	x28, x28, w23, sxtw
  403f88:	b	403f5c <wcrtomb@plt+0x163c>
  403f8c:	ldr	x0, [sp, #104]
  403f90:	mov	x3, x22
  403f94:	mov	x1, x27
  403f98:	sub	x2, x0, x28
  403f9c:	add	x0, sp, #0xb4
  403fa0:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  403fa4:	mov	x23, x0
  403fa8:	cmp	x0, #0x10
  403fac:	b.hi	403cf8 <wcrtomb@plt+0x13d8>  // b.pmore
  403fb0:	ldr	w0, [sp, #180]
  403fb4:	mov	x1, x19
  403fb8:	bl	4147b8 <wcrtomb@plt+0x11e98>
  403fbc:	cbnz	w0, 403cf8 <wcrtomb@plt+0x13d8>
  403fc0:	sub	w25, w23, #0x1
  403fc4:	sxtw	x25, w25
  403fc8:	b	403fec <wcrtomb@plt+0x16cc>
  403fcc:	bl	402560 <__ctype_toupper_loc@plt>
  403fd0:	ldrb	w1, [x27, x25]
  403fd4:	sub	x25, x25, #0x1
  403fd8:	ldr	x2, [x0]
  403fdc:	ubfiz	x0, x1, #2, #8
  403fe0:	ldr	w0, [x2, x0]
  403fe4:	cmp	w0, w1
  403fe8:	b.ne	403cf8 <wcrtomb@plt+0x13d8>  // b.any
  403fec:	cmp	w25, #0x0
  403ff0:	b.gt	403fcc <wcrtomb@plt+0x16ac>
  403ff4:	add	x28, x28, w23, sxtw
  403ff8:	b	403f5c <wcrtomb@plt+0x163c>
  403ffc:	mov	w2, #0x5                   	// #5
  404000:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  404004:	mov	x0, #0x0                   	// #0
  404008:	add	x1, x1, #0x3a8
  40400c:	bl	4027f0 <dcgettext@plt>
  404010:	mov	x4, x0
  404014:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  404018:	mov	x3, x19
  40401c:	add	x2, x2, #0x3c8
  404020:	mov	w1, #0x0                   	// #0
  404024:	mov	w0, #0x2                   	// #2
  404028:	bl	402330 <error@plt>
  40402c:	ldr	x1, [sp, #104]
  404030:	ldr	x0, [sp, #192]
  404034:	sub	x2, x1, x25
  404038:	ldr	x24, [sp, #168]
  40403c:	cmp	x0, x2
  404040:	b.eq	404060 <wcrtomb@plt+0x1740>  // b.none
  404044:	mov	w3, #0x2                   	// #2
  404048:	mov	x0, x24
  40404c:	mov	x1, x25
  404050:	str	w3, [sp, #148]
  404054:	str	x2, [sp, #192]
  404058:	bl	4022a0 <memcpy@plt>
  40405c:	b	403a5c <wcrtomb@plt+0x113c>
  404060:	mov	w0, #0x2                   	// #2
  404064:	str	w0, [sp, #148]
  404068:	b	403a5c <wcrtomb@plt+0x113c>
  40406c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  404070:	add	x1, x1, #0x410
  404074:	mov	w2, #0x5                   	// #5
  404078:	mov	x0, #0x0                   	// #0
  40407c:	bl	4027f0 <dcgettext@plt>
  404080:	mov	w1, #0x0                   	// #0
  404084:	mov	x2, x0
  404088:	mov	w0, #0x2                   	// #2
  40408c:	bl	402330 <error@plt>
  404090:	mov	w0, #0x0                   	// #0
  404094:	bl	407ac8 <wcrtomb@plt+0x51a8>
  404098:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  40409c:	mov	w2, #0x5                   	// #5
  4040a0:	add	x1, x1, #0x488
  4040a4:	b	404078 <wcrtomb@plt+0x1758>
  4040a8:	bl	41b778 <wcrtomb@plt+0x18e58>
  4040ac:	bl	4025f0 <abort@plt>
  4040b0:	mov	x29, #0x0                   	// #0
  4040b4:	mov	x30, #0x0                   	// #0
  4040b8:	mov	x5, x0
  4040bc:	ldr	x1, [sp]
  4040c0:	add	x2, sp, #0x8
  4040c4:	mov	x6, sp
  4040c8:	movz	x0, #0x0, lsl #48
  4040cc:	movk	x0, #0x0, lsl #32
  4040d0:	movk	x0, #0x40, lsl #16
  4040d4:	movk	x0, #0x2930
  4040d8:	movz	x3, #0x0, lsl #48
  4040dc:	movk	x3, #0x0, lsl #32
  4040e0:	movk	x3, #0x42, lsl #16
  4040e4:	movk	x3, #0xf190
  4040e8:	movz	x4, #0x0, lsl #48
  4040ec:	movk	x4, #0x0, lsl #32
  4040f0:	movk	x4, #0x42, lsl #16
  4040f4:	movk	x4, #0xf210
  4040f8:	bl	4024f0 <__libc_start_main@plt>
  4040fc:	bl	4025f0 <abort@plt>
  404100:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x29510>
  404104:	ldr	x0, [x0, #4064]
  404108:	cbz	x0, 404110 <wcrtomb@plt+0x17f0>
  40410c:	b	4025b0 <__gmon_start__@plt>
  404110:	ret
  404114:	nop
  404118:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40411c:	add	x0, x0, #0x438
  404120:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  404124:	add	x1, x1, #0x438
  404128:	cmp	x1, x0
  40412c:	b.eq	404144 <wcrtomb@plt+0x1824>  // b.none
  404130:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  404134:	ldr	x1, [x1, #584]
  404138:	cbz	x1, 404144 <wcrtomb@plt+0x1824>
  40413c:	mov	x16, x1
  404140:	br	x16
  404144:	ret
  404148:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40414c:	add	x0, x0, #0x438
  404150:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  404154:	add	x1, x1, #0x438
  404158:	sub	x1, x1, x0
  40415c:	lsr	x2, x1, #63
  404160:	add	x1, x2, x1, asr #3
  404164:	cmp	xzr, x1, asr #1
  404168:	asr	x1, x1, #1
  40416c:	b.eq	404184 <wcrtomb@plt+0x1864>  // b.none
  404170:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  404174:	ldr	x2, [x2, #592]
  404178:	cbz	x2, 404184 <wcrtomb@plt+0x1864>
  40417c:	mov	x16, x2
  404180:	br	x16
  404184:	ret
  404188:	stp	x29, x30, [sp, #-32]!
  40418c:	mov	x29, sp
  404190:	str	x19, [sp, #16]
  404194:	adrp	x19, 449000 <_obstack_memory_used@@Base+0x2a510>
  404198:	ldrb	w0, [x19, #1136]
  40419c:	cbnz	w0, 4041ac <wcrtomb@plt+0x188c>
  4041a0:	bl	404118 <wcrtomb@plt+0x17f8>
  4041a4:	mov	w0, #0x1                   	// #1
  4041a8:	strb	w0, [x19, #1136]
  4041ac:	ldr	x19, [sp, #16]
  4041b0:	ldp	x29, x30, [sp], #32
  4041b4:	ret
  4041b8:	b	404148 <wcrtomb@plt+0x1828>
  4041bc:	nop
  4041c0:	stp	x29, x30, [sp, #-16]!
  4041c4:	mov	x3, x0
  4041c8:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  4041cc:	mov	x29, sp
  4041d0:	add	x2, x2, #0x270
  4041d4:	mov	w1, #0x0                   	// #0
  4041d8:	mov	w0, #0x2                   	// #2
  4041dc:	bl	402330 <error@plt>
  4041e0:	stp	x29, x30, [sp, #-32]!
  4041e4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4041e8:	mov	x29, sp
  4041ec:	str	x19, [sp, #16]
  4041f0:	mov	x19, x0
  4041f4:	add	x0, x1, #0x258
  4041f8:	bl	4028a0 <getenv@plt>
  4041fc:	cbz	x0, 40420c <wcrtomb@plt+0x18ec>
  404200:	ldr	x19, [sp, #16]
  404204:	ldp	x29, x30, [sp], #32
  404208:	ret
  40420c:	mov	x0, x19
  404210:	bl	4041c0 <wcrtomb@plt+0x18a0>
  404214:	nop
  404218:	stp	x29, x30, [sp, #-240]!
  40421c:	mov	x3, x1
  404220:	mov	x1, #0x48                  	// #72
  404224:	mov	x29, sp
  404228:	stp	x19, x20, [sp, #16]
  40422c:	mov	x20, x2
  404230:	stp	x21, x22, [sp, #32]
  404234:	mov	x22, x0
  404238:	adrp	x21, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40423c:	stp	x23, x24, [sp, #48]
  404240:	mov	x24, x3
  404244:	stp	x25, x26, [sp, #64]
  404248:	mov	x25, x0
  40424c:	stp	x27, x28, [sp, #80]
  404250:	mov	x28, #0x1                   	// #1
  404254:	mov	x27, #0x0                   	// #0
  404258:	stp	x3, x0, [sp, #136]
  40425c:	mov	x0, #0x1                   	// #1
  404260:	bl	41b6c0 <wcrtomb@plt+0x18da0>
  404264:	mov	x19, x0
  404268:	bl	414388 <wcrtomb@plt+0x11a68>
  40426c:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  404270:	ldrb	w2, [x1, #3558]
  404274:	orr	x1, x20, #0x400000
  404278:	str	x0, [x19, #8]
  40427c:	cmp	w2, #0x0
  404280:	csel	x23, x1, x20, ne  // ne = any
  404284:	add	x1, x22, x24
  404288:	mov	x0, x23
  40428c:	str	x1, [sp, #104]
  404290:	str	x23, [sp, #152]
  404294:	add	x20, x21, #0x8e0
  404298:	bl	42d980 <_obstack_memory_used@@Base+0xee90>
  40429c:	str	x22, [sp, #96]
  4042a0:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4042a4:	mov	x2, x23
  4042a8:	mov	w24, #0x5c                  	// #92
  4042ac:	mov	x23, #0x5555555555555555    	// #6148914691236517205
  4042b0:	ldrb	w1, [x0, #2264]
  4042b4:	movk	x23, #0x155, lsl #48
  4042b8:	ldr	x0, [x19, #8]
  4042bc:	cmp	w1, #0x0
  4042c0:	cset	w3, eq  // eq = none
  4042c4:	mov	x1, x20
  4042c8:	lsl	w3, w3, #1
  4042cc:	bl	414390 <wcrtomb@plt+0x11a70>
  4042d0:	ldrb	w1, [x20, #2]
  4042d4:	mov	x0, #0x40                  	// #64
  4042d8:	ldrb	w2, [x21, #2272]
  4042dc:	mov	x21, #0x0                   	// #0
  4042e0:	eor	w20, w2, #0x1
  4042e4:	orr	w20, w20, w1
  4042e8:	and	w20, w20, #0xff
  4042ec:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4042f0:	cmp	w20, #0x0
  4042f4:	mov	w1, #0x100                 	// #256
  4042f8:	csel	w24, w24, w1, ne  // ne = any
  4042fc:	add	x0, x0, #0x40
  404300:	stp	x0, xzr, [x19, #16]
  404304:	str	xzr, [sp, #112]
  404308:	str	wzr, [sp, #124]
  40430c:	str	xzr, [sp, #160]
  404310:	ldr	x0, [sp, #104]
  404314:	mov	w1, #0xa                   	// #10
  404318:	sub	x26, x0, x25
  40431c:	mov	x0, x25
  404320:	mov	x2, x26
  404324:	bl	402770 <memchr@plt>
  404328:	mov	x22, x0
  40432c:	cbz	x0, 404338 <wcrtomb@plt+0x1a18>
  404330:	sub	x26, x0, x25
  404334:	add	x22, x0, #0x1
  404338:	subs	x20, x26, #0x1
  40433c:	b.mi	4043a0 <wcrtomb@plt+0x1a80>  // b.first
  404340:	add	x20, x25, x20
  404344:	mov	x0, x25
  404348:	mov	w1, #0x5c                  	// #92
  40434c:	sub	x2, x20, x0
  404350:	bl	402770 <memchr@plt>
  404354:	mov	x1, x0
  404358:	cbz	x0, 4043a0 <wcrtomb@plt+0x1a80>
  40435c:	ldrb	w2, [x1, #1]
  404360:	sub	w0, w2, #0x31
  404364:	and	w0, w0, #0xff
  404368:	cmp	w0, #0x8
  40436c:	b.ls	4044e8 <wcrtomb@plt+0x1bc8>  // b.plast
  404370:	cmp	w2, w24
  404374:	add	x0, x1, #0x1
  404378:	b.ne	404348 <wcrtomb@plt+0x1a28>  // b.any
  40437c:	cmp	x20, x0
  404380:	b.eq	4043a0 <wcrtomb@plt+0x1a80>  // b.none
  404384:	add	x0, x1, #0x2
  404388:	mov	w1, #0x5c                  	// #92
  40438c:	sub	x2, x20, x0
  404390:	bl	402770 <memchr@plt>
  404394:	mov	x1, x0
  404398:	cbnz	x0, 40435c <wcrtomb@plt+0x1a3c>
  40439c:	nop
  4043a0:	ldr	x0, [x19, #24]
  4043a4:	add	x0, x0, #0x1
  4043a8:	cmp	x0, x28
  4043ac:	b.cc	4044b0 <wcrtomb@plt+0x1b90>  // b.lo, b.ul, b.last
  4043b0:	ldr	x1, [x19, #16]
  4043b4:	mov	w20, #0x0                   	// #0
  4043b8:	sub	x0, x1, #0x40
  4043bc:	nop
  4043c0:	cmp	x28, x23
  4043c4:	b.cs	4048d4 <wcrtomb@plt+0x1fb4>  // b.hs, b.nlast
  4043c8:	lsr	x1, x28, #1
  4043cc:	add	x1, x1, #0x1
  4043d0:	add	x28, x28, x1
  4043d4:	lsl	x1, x28, #6
  4043d8:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4043dc:	ldr	x2, [x19, #24]
  4043e0:	add	x1, x0, #0x40
  4043e4:	str	x1, [x19, #16]
  4043e8:	add	x3, x2, #0x1
  4043ec:	cmp	x3, x28
  4043f0:	b.cs	4043c0 <wcrtomb@plt+0x1aa0>  // b.hs, b.nlast
  4043f4:	cbz	w20, 4044b0 <wcrtomb@plt+0x1b90>
  4043f8:	lsl	x3, x2, #6
  4043fc:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  404400:	add	x2, x1, x3
  404404:	ldrb	w20, [x0, #3558]
  404408:	mov	x0, #0x0                   	// #0
  40440c:	str	xzr, [x1, x3]
  404410:	str	xzr, [x2, #8]
  404414:	cbnz	w20, 40442c <wcrtomb@plt+0x1b0c>
  404418:	mov	x0, #0x100                 	// #256
  40441c:	str	x2, [sp, #128]
  404420:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  404424:	mov	w20, #0x1                   	// #1
  404428:	ldr	x2, [sp, #128]
  40442c:	stp	x0, xzr, [x2, #32]
  404430:	mov	x1, x26
  404434:	mov	x0, x25
  404438:	add	x25, x27, #0x1
  40443c:	bl	42d900 <_obstack_memory_used@@Base+0xee10>
  404440:	mov	x26, x0
  404444:	cbnz	x0, 40446c <wcrtomb@plt+0x1b4c>
  404448:	cbz	w20, 40445c <wcrtomb@plt+0x1b3c>
  40444c:	ldr	x0, [x19, #24]
  404450:	str	x22, [sp, #96]
  404454:	add	x0, x0, #0x1
  404458:	str	x0, [x19, #24]
  40445c:	cbz	x22, 40455c <wcrtomb@plt+0x1c3c>
  404460:	mov	x27, x25
  404464:	mov	x25, x22
  404468:	b	404310 <wcrtomb@plt+0x19f0>
  40446c:	add	x1, sp, #0xa8
  404470:	mov	x0, x25
  404474:	str	x27, [sp, #168]
  404478:	bl	407a50 <wcrtomb@plt+0x5130>
  40447c:	mov	x3, x0
  404480:	ldrb	w0, [x0]
  404484:	cbz	w0, 4044c4 <wcrtomb@plt+0x1ba4>
  404488:	ldr	x4, [sp, #168]
  40448c:	mov	w0, #0x1                   	// #1
  404490:	mov	x5, x26
  404494:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  404498:	mov	w1, #0x0                   	// #0
  40449c:	add	x2, x2, #0x268
  4044a0:	str	w0, [sp, #124]
  4044a4:	mov	w0, #0x0                   	// #0
  4044a8:	bl	402330 <error@plt>
  4044ac:	b	404448 <wcrtomb@plt+0x1b28>
  4044b0:	add	x2, sp, #0xb0
  4044b4:	mov	w20, #0x0                   	// #0
  4044b8:	mov	x0, #0x0                   	// #0
  4044bc:	stp	xzr, xzr, [sp, #176]
  4044c0:	b	40442c <wcrtomb@plt+0x1b0c>
  4044c4:	mov	w4, #0x1                   	// #1
  4044c8:	mov	x3, x26
  4044cc:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  4044d0:	mov	w1, #0x0                   	// #0
  4044d4:	add	x2, x2, #0x270
  4044d8:	mov	w0, #0x0                   	// #0
  4044dc:	str	w4, [sp, #124]
  4044e0:	bl	402330 <error@plt>
  4044e4:	b	404448 <wcrtomb@plt+0x1b28>
  4044e8:	ldr	x1, [sp, #96]
  4044ec:	cmp	x25, x1
  4044f0:	b.ls	404544 <wcrtomb@plt+0x1c24>  // b.plast
  4044f4:	ldr	x2, [sp, #112]
  4044f8:	sub	x1, x25, x1
  4044fc:	ldr	x0, [sp, #160]
  404500:	str	x1, [sp, #128]
  404504:	add	x20, x2, x1
  404508:	cmp	x20, x0
  40450c:	b.ls	40452c <wcrtomb@plt+0x1c0c>  // b.plast
  404510:	mov	x0, x21
  404514:	add	x1, sp, #0xa0
  404518:	bl	41b640 <wcrtomb@plt+0x18d20>
  40451c:	mov	x21, x0
  404520:	ldr	x1, [sp, #160]
  404524:	cmp	x1, x20
  404528:	b.cc	404510 <wcrtomb@plt+0x1bf0>  // b.lo, b.ul, b.last
  40452c:	ldr	x1, [sp, #96]
  404530:	ldr	x2, [sp, #128]
  404534:	ldr	x0, [sp, #112]
  404538:	str	x20, [sp, #112]
  40453c:	add	x0, x21, x0
  404540:	bl	4022a0 <memcpy@plt>
  404544:	ldp	x1, x2, [x19, #16]
  404548:	mov	w20, #0x1                   	// #1
  40454c:	add	x0, x2, #0x1
  404550:	cmp	x0, x28
  404554:	b.cs	4043b8 <wcrtomb@plt+0x1a98>  // b.hs, b.nlast
  404558:	b	4043f8 <wcrtomb@plt+0x1ad8>
  40455c:	ldr	w0, [sp, #124]
  404560:	cbnz	w0, 4048d8 <wcrtomb@plt+0x1fb8>
  404564:	ldr	x0, [sp, #96]
  404568:	cbz	x0, 404584 <wcrtomb@plt+0x1c64>
  40456c:	ldr	x1, [sp, #144]
  404570:	cmp	x0, x1
  404574:	b.hi	4047f4 <wcrtomb@plt+0x1ed4>  // b.pmore
  404578:	mov	x21, x1
  40457c:	ldr	x0, [sp, #136]
  404580:	str	x0, [sp, #112]
  404584:	cbz	x21, 4045f4 <wcrtomb@plt+0x1cd4>
  404588:	ldp	x20, x0, [x19, #16]
  40458c:	adrp	x2, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  404590:	mov	x1, #0x0                   	// #0
  404594:	ldrb	w2, [x2, #3558]
  404598:	sub	x23, x20, #0x40
  40459c:	add	x0, x0, #0x1
  4045a0:	stp	x23, x0, [x19, #16]
  4045a4:	stp	xzr, xzr, [x20, #-64]
  4045a8:	cbz	w2, 40482c <wcrtomb@plt+0x1f0c>
  4045ac:	stp	x1, xzr, [x20, #-32]
  4045b0:	mov	x2, x23
  4045b4:	mov	x0, x21
  4045b8:	ldr	x1, [sp, #112]
  4045bc:	bl	42d900 <_obstack_memory_used@@Base+0xee10>
  4045c0:	cbz	x0, 4045e0 <wcrtomb@plt+0x1cc0>
  4045c4:	mov	x3, x0
  4045c8:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  4045cc:	add	x2, x2, #0x270
  4045d0:	mov	w1, #0x0                   	// #0
  4045d4:	mov	w0, #0x0                   	// #0
  4045d8:	bl	402330 <error@plt>
  4045dc:	bl	4025f0 <abort@plt>
  4045e0:	ldr	x0, [sp, #144]
  4045e4:	cmp	x21, x0
  4045e8:	b.eq	4045f4 <wcrtomb@plt+0x1cd4>  // b.none
  4045ec:	mov	x0, x21
  4045f0:	bl	4026b0 <free@plt>
  4045f4:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4045f8:	adrp	x21, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4045fc:	ldrb	w0, [x0, #3556]
  404600:	cbnz	w0, 4046b0 <wcrtomb@plt+0x1d90>
  404604:	ldrb	w0, [x21, #3557]
  404608:	ldr	x20, [sp, #144]
  40460c:	cbnz	w0, 4046b0 <wcrtomb@plt+0x1d90>
  404610:	ldr	x2, [x19, #8]
  404614:	mov	x0, x20
  404618:	ldr	x1, [sp, #136]
  40461c:	bl	412df8 <wcrtomb@plt+0x104d8>
  404620:	ldr	x0, [x19, #8]
  404624:	bl	413650 <wcrtomb@plt+0x10d30>
  404628:	mov	x20, x0
  40462c:	cbz	x0, 404674 <wcrtomb@plt+0x1d54>
  404630:	mov	x21, x0
  404634:	mov	w0, #0x0                   	// #0
  404638:	bl	40c510 <wcrtomb@plt+0x9bf0>
  40463c:	mov	x23, x0
  404640:	ldrb	w0, [x21], #3
  404644:	str	x23, [x19]
  404648:	cbnz	w0, 40470c <wcrtomb@plt+0x1dec>
  40464c:	mov	x0, x21
  404650:	bl	402300 <strlen@plt>
  404654:	mov	x1, x21
  404658:	mov	x2, x0
  40465c:	mov	x0, x23
  404660:	bl	4094c0 <wcrtomb@plt+0x6ba0>
  404664:	ldr	x0, [x19]
  404668:	bl	409998 <wcrtomb@plt+0x7078>
  40466c:	mov	x0, x20
  404670:	bl	414380 <wcrtomb@plt+0x11a60>
  404674:	ldr	x2, [x19, #8]
  404678:	mov	w3, #0x1                   	// #1
  40467c:	mov	x1, #0x0                   	// #0
  404680:	mov	x0, #0x0                   	// #0
  404684:	bl	413158 <wcrtomb@plt+0x10838>
  404688:	mov	x0, x22
  40468c:	bl	4026b0 <free@plt>
  404690:	mov	x0, x19
  404694:	ldp	x19, x20, [sp, #16]
  404698:	ldp	x21, x22, [sp, #32]
  40469c:	ldp	x23, x24, [sp, #48]
  4046a0:	ldp	x25, x26, [sp, #64]
  4046a4:	ldp	x27, x28, [sp, #80]
  4046a8:	ldp	x29, x30, [sp], #240
  4046ac:	ret
  4046b0:	ldr	x0, [sp, #136]
  4046b4:	add	x0, x0, #0x2d
  4046b8:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4046bc:	ldrb	w2, [x21, #3557]
  4046c0:	mov	x20, x0
  4046c4:	ldr	x1, [sp, #152]
  4046c8:	and	x1, x1, #0x2000
  4046cc:	cbz	w2, 40479c <wcrtomb@plt+0x1e7c>
  4046d0:	cbnz	x1, 404890 <wcrtomb@plt+0x1f70>
  4046d4:	mov	w1, #0x5c5e                	// #23646
  4046d8:	movk	w1, #0x28, lsl #16
  4046dc:	str	w1, [x0]
  4046e0:	bl	402300 <strlen@plt>
  4046e4:	mov	x21, x0
  4046e8:	ldp	x2, x1, [sp, #136]
  4046ec:	add	x0, x20, x0
  4046f0:	add	x21, x2, x21
  4046f4:	bl	4022a0 <memcpy@plt>
  4046f8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4046fc:	add	x1, x1, #0x2b0
  404700:	add	x22, x20, x21
  404704:	add	x1, x1, #0x40
  404708:	b	4047d8 <wcrtomb@plt+0x1eb8>
  40470c:	ldr	x1, [x19, #56]
  404710:	mov	x0, x21
  404714:	add	x1, x1, #0x1
  404718:	str	x1, [x19, #56]
  40471c:	bl	402300 <strlen@plt>
  404720:	ldrb	w24, [x20, #2]
  404724:	ldrb	w1, [x20, #1]
  404728:	mov	x25, x0
  40472c:	add	x1, x1, x0
  404730:	add	x24, x1, x24
  404734:	mov	x0, x24
  404738:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40473c:	mov	x23, x0
  404740:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  404744:	ldrb	w3, [x19, #64]
  404748:	mov	x2, x25
  40474c:	ldrb	w26, [x1, #2264]
  404750:	mov	x1, x21
  404754:	strb	w26, [x0]
  404758:	ldrb	w0, [x20, #1]
  40475c:	orr	w3, w0, w3
  404760:	strb	w3, [x19, #64]
  404764:	add	x3, x23, w0, uxtb
  404768:	mov	x0, x3
  40476c:	bl	4022a0 <memcpy@plt>
  404770:	mov	x3, x0
  404774:	ldrb	w0, [x20, #2]
  404778:	cbz	w0, 404780 <wcrtomb@plt+0x1e60>
  40477c:	strb	w26, [x3, x25]
  404780:	ldr	x0, [x19]
  404784:	mov	x2, x24
  404788:	mov	x1, x23
  40478c:	bl	4094c0 <wcrtomb@plt+0x6ba0>
  404790:	mov	x0, x23
  404794:	bl	4026b0 <free@plt>
  404798:	b	404664 <wcrtomb@plt+0x1d44>
  40479c:	cbz	x1, 404854 <wcrtomb@plt+0x1f34>
  4047a0:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x10510>
  4047a4:	add	x3, x3, #0x278
  4047a8:	ldp	x2, x1, [sp, #136]
  4047ac:	add	x0, x0, #0x12
  4047b0:	ldp	x4, x5, [x3]
  4047b4:	stp	x4, x5, [x20]
  4047b8:	ldur	w3, [x3, #15]
  4047bc:	stur	w3, [x20, #15]
  4047c0:	add	x21, x2, #0x12
  4047c4:	add	x22, x20, x21
  4047c8:	bl	4022a0 <memcpy@plt>
  4047cc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4047d0:	add	x1, x1, #0x2b0
  4047d4:	add	x1, x1, #0x20
  4047d8:	mov	x0, x22
  4047dc:	bl	4023d0 <stpcpy@plt>
  4047e0:	sub	x0, x0, x22
  4047e4:	mov	x22, x20
  4047e8:	add	x0, x0, x21
  4047ec:	str	x0, [sp, #136]
  4047f0:	b	404610 <wcrtomb@plt+0x1cf0>
  4047f4:	mov	x24, x0
  4047f8:	ldp	x0, x25, [sp, #104]
  4047fc:	sub	x20, x0, x24
  404800:	mov	x0, x21
  404804:	add	x23, x20, x25
  404808:	mov	x1, x23
  40480c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  404810:	mov	x2, x20
  404814:	mov	x21, x0
  404818:	mov	x1, x24
  40481c:	add	x0, x0, x25
  404820:	str	x23, [sp, #112]
  404824:	bl	4022a0 <memcpy@plt>
  404828:	b	404584 <wcrtomb@plt+0x1c64>
  40482c:	mov	x0, #0x100                 	// #256
  404830:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  404834:	mov	x1, x0
  404838:	stp	x1, xzr, [x20, #-32]
  40483c:	mov	x2, x23
  404840:	ldr	x1, [sp, #112]
  404844:	mov	x0, x21
  404848:	bl	42d900 <_obstack_memory_used@@Base+0xee10>
  40484c:	cbnz	x0, 4045c4 <wcrtomb@plt+0x1ca4>
  404850:	b	4045e0 <wcrtomb@plt+0x1cc0>
  404854:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  404858:	add	x1, x1, #0x290
  40485c:	ldp	x2, x3, [x1]
  404860:	stp	x2, x3, [x0]
  404864:	ldur	x1, [x1, #15]
  404868:	stur	x1, [x0, #15]
  40486c:	bl	402300 <strlen@plt>
  404870:	ldp	x2, x1, [sp, #136]
  404874:	add	x21, x2, x0
  404878:	add	x0, x20, x0
  40487c:	bl	4022a0 <memcpy@plt>
  404880:	add	x22, x20, x21
  404884:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  404888:	add	x1, x1, #0x2b0
  40488c:	b	4047d8 <wcrtomb@plt+0x1eb8>
  404890:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  404894:	add	x1, x1, #0x2a8
  404898:	ldrh	w2, [x1]
  40489c:	ldrb	w1, [x1, #2]
  4048a0:	strh	w2, [x0]
  4048a4:	strb	w1, [x0, #2]
  4048a8:	bl	402300 <strlen@plt>
  4048ac:	mov	x21, x0
  4048b0:	ldp	x2, x1, [sp, #136]
  4048b4:	add	x0, x20, x0
  4048b8:	add	x21, x2, x21
  4048bc:	bl	4022a0 <memcpy@plt>
  4048c0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4048c4:	add	x1, x1, #0x2b0
  4048c8:	add	x22, x20, x21
  4048cc:	add	x1, x1, #0x38
  4048d0:	b	4047d8 <wcrtomb@plt+0x1eb8>
  4048d4:	bl	41b778 <wcrtomb@plt+0x18e58>
  4048d8:	mov	w0, #0x2                   	// #2
  4048dc:	bl	402320 <exit@plt>
  4048e0:	stp	x29, x30, [sp, #-272]!
  4048e4:	mov	x29, sp
  4048e8:	stp	x21, x22, [sp, #32]
  4048ec:	ldr	x21, [x0, #8]
  4048f0:	stp	x19, x20, [sp, #16]
  4048f4:	mov	x20, x1
  4048f8:	mov	x19, x2
  4048fc:	stp	x25, x26, [sp, #64]
  404900:	mov	x26, x0
  404904:	mov	x0, x21
  404908:	stp	x27, x28, [sp, #80]
  40490c:	adrp	x28, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  404910:	str	x4, [sp, #96]
  404914:	str	x1, [sp, #192]
  404918:	str	x3, [sp, #216]
  40491c:	bl	412f90 <wcrtomb@plt+0x10670>
  404920:	mov	x1, x0
  404924:	mov	x0, x21
  404928:	str	x1, [sp, #200]
  40492c:	bl	412f98 <wcrtomb@plt+0x10678>
  404930:	and	w0, w0, #0xff
  404934:	str	w0, [sp, #212]
  404938:	add	x2, x20, x19
  40493c:	ldrb	w0, [x28, #2264]
  404940:	cmp	x20, x2
  404944:	str	x20, [sp, #128]
  404948:	str	x2, [sp, #168]
  40494c:	str	w0, [sp, #208]
  404950:	str	x20, [sp, #232]
  404954:	b.cs	404c6c <wcrtomb@plt+0x234c>  // b.hs, b.nlast
  404958:	add	x28, x28, #0x8d8
  40495c:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  404960:	add	x0, x0, #0xde5
  404964:	stp	x23, x24, [sp, #48]
  404968:	str	x0, [sp, #112]
  40496c:	nop
  404970:	ldr	x0, [sp, #96]
  404974:	cbnz	x0, 404a8c <wcrtomb@plt+0x216c>
  404978:	ldr	x0, [x26]
  40497c:	strb	wzr, [sp, #231]
  404980:	str	xzr, [sp, #240]
  404984:	cbz	x0, 404d88 <wcrtomb@plt+0x2468>
  404988:	ldr	x3, [sp, #128]
  40498c:	mov	w4, #0x1                   	// #1
  404990:	ldr	x2, [sp, #168]
  404994:	ldrb	w1, [x26, #64]
  404998:	sub	x19, x2, x3
  40499c:	add	x2, x1, x19
  4049a0:	sub	x1, x3, x1
  4049a4:	add	x3, sp, #0xf8
  4049a8:	bl	40c428 <wcrtomb@plt+0x9b08>
  4049ac:	mov	x20, x0
  4049b0:	tbnz	x0, #63, 404f3c <wcrtomb@plt+0x261c>
  4049b4:	ldr	w1, [sp, #208]
  4049b8:	ldr	x25, [sp, #128]
  4049bc:	ldr	x24, [sp, #192]
  4049c0:	add	x21, x25, x0
  4049c4:	sub	x2, x21, x24
  4049c8:	mov	x0, x24
  4049cc:	bl	4026f0 <memrchr@plt>
  4049d0:	cmp	x0, #0x0
  4049d4:	csinc	x27, x24, x0, eq  // eq = none
  4049d8:	ldr	w0, [sp, #212]
  4049dc:	ldr	x23, [x26, #56]
  4049e0:	cmp	w0, #0x0
  4049e4:	ldr	x22, [sp, #248]
  4049e8:	ccmp	x22, x23, #0x1, ne  // ne = any
  4049ec:	b.lt	404e8c <wcrtomb@plt+0x256c>  // b.tstop
  4049f0:	sub	x0, x21, x27
  4049f4:	mov	x1, #0x10                  	// #16
  4049f8:	cmp	x0, x1
  4049fc:	csel	x0, x0, x1, ge  // ge = tcont
  404a00:	cmp	x0, x20, asr #2
  404a04:	b.lt	404d6c <wcrtomb@plt+0x244c>  // b.tstop
  404a08:	cmp	x0, x19, asr #2
  404a0c:	b.ge	404d84 <wcrtomb@plt+0x2464>  // b.tcont
  404a10:	ldr	x1, [sp, #168]
  404a14:	add	x0, x25, x0, lsl #2
  404a18:	sub	x2, x1, x0
  404a1c:	ldr	w1, [sp, #208]
  404a20:	bl	402770 <memchr@plt>
  404a24:	cbz	x0, 404d84 <wcrtomb@plt+0x2464>
  404a28:	add	x19, x0, #0x1
  404a2c:	cmp	x22, x23
  404a30:	b.ge	404eb0 <wcrtomb@plt+0x2590>  // b.tcont
  404a34:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  404a38:	add	x1, x0, #0x8e0
  404a3c:	ldrb	w0, [x0, #2272]
  404a40:	ldrb	w1, [x1, #2]
  404a44:	eor	w0, w0, #0x1
  404a48:	orr	w0, w0, w1
  404a4c:	tst	w0, #0xff
  404a50:	b.ne	404f28 <wcrtomb@plt+0x2608>  // b.any
  404a54:	ldr	x0, [sp, #232]
  404a58:	cmp	x0, x27
  404a5c:	b.cc	404edc <wcrtomb@plt+0x25bc>  // b.lo, b.ul, b.last
  404a60:	ldr	x3, [sp, #168]
  404a64:	mov	x2, x21
  404a68:	add	x0, sp, #0xe8
  404a6c:	mov	x1, #0x0                   	// #0
  404a70:	bl	40c850 <wcrtomb@plt+0x9f30>
  404a74:	str	x19, [sp, #128]
  404a78:	cbz	x0, 404f2c <wcrtomb@plt+0x260c>
  404a7c:	add	x21, sp, #0xf0
  404a80:	mov	x20, x19
  404a84:	ldr	x1, [sp, #232]
  404a88:	b	404e10 <wcrtomb@plt+0x24f0>
  404a8c:	ldr	x0, [x26, #24]
  404a90:	cbz	x0, 404c68 <wcrtomb@plt+0x2348>
  404a94:	ldr	x0, [sp, #96]
  404a98:	str	x0, [sp, #160]
  404a9c:	ldr	x0, [sp, #168]
  404aa0:	ldr	x27, [sp, #128]
  404aa4:	str	x0, [sp, #128]
  404aa8:	ldr	x1, [sp, #128]
  404aac:	mov	x25, #0x0                   	// #0
  404ab0:	ldr	x3, [sp, #160]
  404ab4:	sub	x0, x1, x27
  404ab8:	sub	x22, x0, #0x1
  404abc:	add	x21, x26, #0x20
  404ac0:	sub	x2, x1, x3
  404ac4:	stp	x2, x0, [sp, #176]
  404ac8:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  404acc:	add	x0, x0, #0xde4
  404ad0:	str	x0, [sp, #104]
  404ad4:	sub	x0, x1, #0x1
  404ad8:	str	x0, [sp, #136]
  404adc:	mov	x0, x26
  404ae0:	sub	x24, x3, x27
  404ae4:	mov	x26, x27
  404ae8:	sub	x20, x2, #0x1
  404aec:	mov	x27, x25
  404af0:	mov	x23, x1
  404af4:	mov	x25, x0
  404af8:	str	xzr, [sp, #120]
  404afc:	nop
  404b00:	ldr	x0, [x25, #16]
  404b04:	lsl	x19, x27, #6
  404b08:	ldrb	w1, [x28]
  404b0c:	mov	x5, x21
  404b10:	add	x0, x0, x19
  404b14:	mov	x4, x20
  404b18:	cmp	w1, #0xa
  404b1c:	mov	x3, x24
  404b20:	cset	w1, eq  // eq = none
  404b24:	mov	x2, x22
  404b28:	ldrb	w6, [x0, #56]
  404b2c:	and	w6, w6, #0x3f
  404b30:	orr	w1, w6, w1, lsl #7
  404b34:	strb	w1, [x0, #56]
  404b38:	mov	x1, x26
  404b3c:	bl	42e460 <_obstack_memory_used@@Base+0xf970>
  404b40:	cmn	x0, #0x1
  404b44:	b.lt	404f18 <wcrtomb@plt+0x25f8>  // b.tstop
  404b48:	b.eq	404c38 <wcrtomb@plt+0x2318>  // b.none
  404b4c:	add	x5, x26, x0
  404b50:	cmp	x23, x5
  404b54:	b.cc	404c38 <wcrtomb@plt+0x2318>  // b.lo, b.ul, b.last
  404b58:	ldr	x1, [x25, #48]
  404b5c:	ldr	x3, [x1]
  404b60:	sub	x3, x3, x0
  404b64:	ldr	x0, [sp, #96]
  404b68:	cbz	x0, 404c88 <wcrtomb@plt+0x2368>
  404b6c:	ldr	x0, [sp, #104]
  404b70:	ldrb	w0, [x0]
  404b74:	cbz	w0, 404cb0 <wcrtomb@plt+0x2390>
  404b78:	ldr	x0, [sp, #112]
  404b7c:	ldrb	w0, [x0]
  404b80:	cbnz	w0, 404ccc <wcrtomb@plt+0x23ac>
  404b84:	stp	x20, x24, [sp, #144]
  404b88:	mov	x20, x26
  404b8c:	mov	x24, x22
  404b90:	mov	x26, x25
  404b94:	mov	x22, x19
  404b98:	mov	x25, x5
  404b9c:	mov	x19, x3
  404ba0:	ldr	x1, [sp, #136]
  404ba4:	add	x0, x25, x19
  404ba8:	bl	40caf0 <wcrtomb@plt+0xa1d0>
  404bac:	cbnz	x0, 404bc4 <wcrtomb@plt+0x22a4>
  404bb0:	ldr	x2, [sp, #136]
  404bb4:	mov	x1, x25
  404bb8:	mov	x0, x20
  404bbc:	bl	40cba0 <wcrtomb@plt+0xa280>
  404bc0:	cbz	x0, 404ee4 <wcrtomb@plt+0x25c4>
  404bc4:	cbnz	x19, 404d20 <wcrtomb@plt+0x2400>
  404bc8:	ldr	x0, [sp, #136]
  404bcc:	cmp	x0, x25
  404bd0:	b.eq	404c28 <wcrtomb@plt+0x2308>  // b.none
  404bd4:	ldr	x0, [x26, #16]
  404bd8:	add	x3, x25, #0x1
  404bdc:	ldr	x1, [sp, #128]
  404be0:	add	x0, x0, x22
  404be4:	mov	x5, x21
  404be8:	mov	x2, x24
  404bec:	sub	x4, x1, x3
  404bf0:	sub	x3, x3, x20
  404bf4:	ldrb	w8, [x0, #56]
  404bf8:	sub	x4, x4, #0x1
  404bfc:	mov	x1, x20
  404c00:	and	w8, w8, #0xffffffbf
  404c04:	strb	w8, [x0, #56]
  404c08:	bl	42e460 <_obstack_memory_used@@Base+0xf970>
  404c0c:	tbnz	x0, #63, 404f00 <wcrtomb@plt+0x25e0>
  404c10:	ldr	x1, [x26, #48]
  404c14:	add	x25, x20, x0
  404c18:	ldr	x19, [x1]
  404c1c:	sub	x19, x19, x0
  404c20:	cmp	x23, x25
  404c24:	b.cs	404ba0 <wcrtomb@plt+0x2280>  // b.hs, b.nlast
  404c28:	mov	x22, x24
  404c2c:	mov	x25, x26
  404c30:	mov	x26, x20
  404c34:	ldp	x20, x24, [sp, #144]
  404c38:	add	x27, x27, #0x1
  404c3c:	ldr	x0, [x25, #24]
  404c40:	cmp	x0, x27
  404c44:	b.hi	404b00 <wcrtomb@plt+0x21e0>  // b.pmore
  404c48:	ldr	x0, [sp, #128]
  404c4c:	mov	x26, x25
  404c50:	cmp	x23, x0
  404c54:	b.cc	404f1c <wcrtomb@plt+0x25fc>  // b.lo, b.ul, b.last
  404c58:	ldr	x0, [sp, #128]
  404c5c:	ldr	x1, [sp, #168]
  404c60:	cmp	x0, x1
  404c64:	b.cc	404970 <wcrtomb@plt+0x2050>  // b.lo, b.ul, b.last
  404c68:	ldp	x23, x24, [sp, #48]
  404c6c:	mov	x0, #0xffffffffffffffff    	// #-1
  404c70:	ldp	x19, x20, [sp, #16]
  404c74:	ldp	x21, x22, [sp, #32]
  404c78:	ldp	x25, x26, [sp, #64]
  404c7c:	ldp	x27, x28, [sp, #80]
  404c80:	ldp	x29, x30, [sp], #272
  404c84:	ret
  404c88:	ldr	x0, [sp, #112]
  404c8c:	ldrb	w0, [x0]
  404c90:	cbnz	w0, 404ccc <wcrtomb@plt+0x23ac>
  404c94:	ldr	x0, [sp, #104]
  404c98:	ldrb	w0, [x0]
  404c9c:	cbnz	w0, 404b84 <wcrtomb@plt+0x2264>
  404ca0:	ldr	x5, [sp, #160]
  404ca4:	ldr	x3, [sp, #176]
  404ca8:	ldr	x0, [sp, #96]
  404cac:	cbz	x0, 404cd8 <wcrtomb@plt+0x23b8>
  404cb0:	cmp	x23, x5
  404cb4:	b.hi	404d14 <wcrtomb@plt+0x23f4>  // b.pmore
  404cb8:	ldr	x0, [sp, #120]
  404cbc:	ccmp	x0, x3, #0x2, eq  // eq = none
  404cc0:	csel	x0, x0, x3, cs  // cs = hs, nlast
  404cc4:	str	x0, [sp, #120]
  404cc8:	b	404c38 <wcrtomb@plt+0x2318>
  404ccc:	cmp	x20, x3
  404cd0:	b.ne	404c38 <wcrtomb@plt+0x2318>  // b.any
  404cd4:	b	404ca0 <wcrtomb@plt+0x2380>
  404cd8:	mov	x27, x26
  404cdc:	ldr	x0, [sp, #184]
  404ce0:	str	x0, [sp, #120]
  404ce4:	mov	x2, x0
  404ce8:	ldr	x0, [sp, #192]
  404cec:	ldr	x1, [sp, #216]
  404cf0:	sub	x0, x27, x0
  404cf4:	ldp	x23, x24, [sp, #48]
  404cf8:	str	x2, [x1]
  404cfc:	ldp	x19, x20, [sp, #16]
  404d00:	ldp	x21, x22, [sp, #32]
  404d04:	ldp	x25, x26, [sp, #64]
  404d08:	ldp	x27, x28, [sp, #80]
  404d0c:	ldp	x29, x30, [sp], #272
  404d10:	ret
  404d14:	mov	x23, x5
  404d18:	str	x3, [sp, #120]
  404d1c:	b	404c38 <wcrtomb@plt+0x2318>
  404d20:	ldr	x0, [x26, #16]
  404d24:	sub	x2, x19, #0x1
  404d28:	ldr	x1, [sp, #160]
  404d2c:	add	x0, x0, x22
  404d30:	add	x2, x25, x2
  404d34:	mov	x4, x21
  404d38:	sub	x2, x2, x1
  404d3c:	sub	x3, x25, x20
  404d40:	ldrb	w8, [x0, #56]
  404d44:	mov	x1, x20
  404d48:	orr	w8, w8, #0x40
  404d4c:	strb	w8, [x0, #56]
  404d50:	bl	42e110 <_obstack_memory_used@@Base+0xf620>
  404d54:	mov	x19, x0
  404d58:	cmn	x0, #0x1
  404d5c:	b.lt	404f18 <wcrtomb@plt+0x25f8>  // b.tstop
  404d60:	cmp	x0, #0x0
  404d64:	b.gt	404c20 <wcrtomb@plt+0x2300>
  404d68:	b	404bc8 <wcrtomb@plt+0x22a8>
  404d6c:	ldr	x1, [sp, #168]
  404d70:	mov	x0, x21
  404d74:	sub	x2, x1, x0
  404d78:	ldr	w1, [sp, #208]
  404d7c:	bl	402770 <memchr@plt>
  404d80:	cbnz	x0, 404a28 <wcrtomb@plt+0x2108>
  404d84:	str	x27, [sp, #128]
  404d88:	ldr	x0, [sp, #200]
  404d8c:	ldr	x19, [sp, #168]
  404d90:	cbz	x0, 404ebc <wcrtomb@plt+0x259c>
  404d94:	ldr	x1, [sp, #128]
  404d98:	add	x21, sp, #0xf0
  404d9c:	mov	x4, x21
  404da0:	mov	x2, x19
  404da4:	mov	x5, #0x0                   	// #0
  404da8:	mov	w3, #0x0                   	// #0
  404dac:	bl	412f80 <wcrtomb@plt+0x10660>
  404db0:	cmp	x0, #0x0
  404db4:	mov	x20, x0
  404db8:	ccmp	x19, x0, #0x4, ne  // ne = any
  404dbc:	b.eq	404ed4 <wcrtomb@plt+0x25b4>  // b.none
  404dc0:	ldr	x0, [sp, #240]
  404dc4:	cbz	x0, 404de0 <wcrtomb@plt+0x24c0>
  404dc8:	ldr	w1, [sp, #208]
  404dcc:	ldr	x0, [sp, #192]
  404dd0:	sub	x2, x20, x0
  404dd4:	bl	4026f0 <memrchr@plt>
  404dd8:	add	x0, x0, #0x1
  404ddc:	str	x0, [sp, #128]
  404de0:	ldr	w1, [sp, #208]
  404de4:	mov	x0, x20
  404de8:	ldr	x19, [sp, #168]
  404dec:	sub	x2, x19, x20
  404df0:	bl	402770 <memchr@plt>
  404df4:	ldr	x1, [sp, #128]
  404df8:	cmp	x0, #0x0
  404dfc:	csinc	x0, x19, x0, eq  // eq = none
  404e00:	str	x0, [sp, #128]
  404e04:	mov	x20, x0
  404e08:	mov	x27, x1
  404e0c:	str	xzr, [sp, #240]
  404e10:	ldr	x0, [x26, #8]
  404e14:	mov	x4, x21
  404e18:	add	x5, sp, #0xe7
  404e1c:	mov	x2, x20
  404e20:	mov	w3, #0x0                   	// #0
  404e24:	bl	412f80 <wcrtomb@plt+0x10660>
  404e28:	cmp	x0, #0x0
  404e2c:	mov	x19, x0
  404e30:	ccmp	x20, x0, #0x4, ne  // ne = any
  404e34:	b.eq	404c58 <wcrtomb@plt+0x2338>  // b.none
  404e38:	ldr	x0, [sp, #240]
  404e3c:	cbz	x0, 404e54 <wcrtomb@plt+0x2534>
  404e40:	ldr	w1, [sp, #208]
  404e44:	ldr	x0, [sp, #192]
  404e48:	sub	x2, x19, x0
  404e4c:	bl	4026f0 <memrchr@plt>
  404e50:	add	x27, x0, #0x1
  404e54:	ldr	w1, [sp, #208]
  404e58:	mov	x0, x19
  404e5c:	ldr	x20, [sp, #168]
  404e60:	sub	x2, x20, x19
  404e64:	bl	402770 <memchr@plt>
  404e68:	ldrb	w1, [sp, #231]
  404e6c:	cmp	x0, #0x0
  404e70:	csinc	x0, x20, x0, eq  // eq = none
  404e74:	str	x0, [sp, #128]
  404e78:	cbz	w1, 404f2c <wcrtomb@plt+0x260c>
  404e7c:	ldr	x0, [x26, #24]
  404e80:	str	x27, [sp, #160]
  404e84:	cbnz	x0, 404aa8 <wcrtomb@plt+0x2188>
  404e88:	b	404c58 <wcrtomb@plt+0x2338>
  404e8c:	ldr	w1, [sp, #208]
  404e90:	ldr	x0, [sp, #168]
  404e94:	sub	x2, x0, x21
  404e98:	mov	x0, x21
  404e9c:	bl	402770 <memchr@plt>
  404ea0:	cbnz	x0, 404a28 <wcrtomb@plt+0x2108>
  404ea4:	cmp	x22, x23
  404ea8:	ldr	x19, [sp, #168]
  404eac:	b.lt	404a34 <wcrtomb@plt+0x2114>  // b.tstop
  404eb0:	ldr	x0, [sp, #200]
  404eb4:	str	x27, [sp, #128]
  404eb8:	cbnz	x0, 404d94 <wcrtomb@plt+0x2474>
  404ebc:	ldr	x1, [sp, #128]
  404ec0:	add	x21, sp, #0xf0
  404ec4:	mov	x20, x19
  404ec8:	str	x19, [sp, #128]
  404ecc:	mov	x27, x1
  404ed0:	b	404e10 <wcrtomb@plt+0x24f0>
  404ed4:	str	x19, [sp, #128]
  404ed8:	b	404c58 <wcrtomb@plt+0x2338>
  404edc:	str	x27, [sp, #232]
  404ee0:	b	404a60 <wcrtomb@plt+0x2140>
  404ee4:	mov	x5, x25
  404ee8:	mov	x22, x24
  404eec:	mov	x25, x26
  404ef0:	mov	x3, x19
  404ef4:	mov	x26, x20
  404ef8:	ldp	x20, x24, [sp, #144]
  404efc:	b	404ca8 <wcrtomb@plt+0x2388>
  404f00:	mov	x22, x24
  404f04:	mov	x25, x26
  404f08:	cmn	x0, #0x1
  404f0c:	mov	x26, x20
  404f10:	ldp	x20, x24, [sp, #144]
  404f14:	b.eq	404c38 <wcrtomb@plt+0x2318>  // b.none
  404f18:	bl	41b778 <wcrtomb@plt+0x18e58>
  404f1c:	mov	x27, x23
  404f20:	ldr	x2, [sp, #120]
  404f24:	b	404ce8 <wcrtomb@plt+0x23c8>
  404f28:	str	x19, [sp, #128]
  404f2c:	ldr	x0, [sp, #128]
  404f30:	sub	x0, x0, x27
  404f34:	str	x0, [sp, #184]
  404f38:	b	404cdc <wcrtomb@plt+0x23bc>
  404f3c:	mov	x0, #0xffffffffffffffff    	// #-1
  404f40:	ldp	x23, x24, [sp, #48]
  404f44:	b	404cfc <wcrtomb@plt+0x23dc>
  404f48:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  404f4c:	add	x1, x0, #0x360
  404f50:	ldr	x1, [x1, #8]
  404f54:	str	x1, [x0, #864]
  404f58:	ret
  404f5c:	nop
  404f60:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  404f64:	mov	w1, #0xffffffff            	// #-1
  404f68:	str	w1, [x0, #1152]
  404f6c:	ret
  404f70:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  404f74:	add	x0, x0, #0x360
  404f78:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  404f7c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  404f80:	add	x2, x2, #0x2f8
  404f84:	add	x1, x1, #0x300
  404f88:	stp	x2, x1, [x0, #16]
  404f8c:	ret
  404f90:	mov	x4, x0
  404f94:	mov	x0, #0x0                   	// #0
  404f98:	ldrb	w3, [x4]
  404f9c:	cmp	w3, #0xd
  404fa0:	b.hi	404fb4 <wcrtomb@plt+0x2694>  // b.pmore
  404fa4:	cmp	w3, #0x8
  404fa8:	b.hi	405030 <wcrtomb@plt+0x2710>  // b.pmore
  404fac:	cbnz	w3, 404fbc <wcrtomb@plt+0x269c>
  404fb0:	ret
  404fb4:	cmp	w3, #0x20
  404fb8:	b.eq	405030 <wcrtomb@plt+0x2710>  // b.none
  404fbc:	cbz	x2, 404fc8 <wcrtomb@plt+0x26a8>
  404fc0:	str	x1, [x2, x0, lsl #3]
  404fc4:	ldrb	w3, [x4]
  404fc8:	mov	x5, x1
  404fcc:	cmp	w3, #0x5c
  404fd0:	mov	x1, x5
  404fd4:	add	x0, x0, #0x1
  404fd8:	add	x6, x4, #0x1
  404fdc:	strb	w3, [x1], #1
  404fe0:	ldrb	w3, [x4, #1]
  404fe4:	b.eq	40501c <wcrtomb@plt+0x26fc>  // b.none
  404fe8:	mov	x4, x6
  404fec:	cmp	w3, #0xd
  404ff0:	cbz	w3, 405038 <wcrtomb@plt+0x2718>
  404ff4:	b.hi	405054 <wcrtomb@plt+0x2734>  // b.pmore
  404ff8:	cmp	w3, #0x8
  404ffc:	b.hi	405048 <wcrtomb@plt+0x2728>  // b.pmore
  405000:	mov	x5, x1
  405004:	mov	x1, x5
  405008:	cmp	w3, #0x5c
  40500c:	add	x6, x4, #0x1
  405010:	strb	w3, [x1], #1
  405014:	ldrb	w3, [x4, #1]
  405018:	b.ne	404fe8 <wcrtomb@plt+0x26c8>  // b.any
  40501c:	cbz	w3, 405040 <wcrtomb@plt+0x2720>
  405020:	sturb	w3, [x1, #-1]
  405024:	add	x4, x4, #0x2
  405028:	ldrb	w3, [x4]
  40502c:	b	404fec <wcrtomb@plt+0x26cc>
  405030:	add	x4, x4, #0x1
  405034:	b	404f98 <wcrtomb@plt+0x2678>
  405038:	mov	x6, x4
  40503c:	nop
  405040:	mov	x4, x6
  405044:	nop
  405048:	add	x1, x5, #0x2
  40504c:	strb	wzr, [x5, #1]
  405050:	b	404f98 <wcrtomb@plt+0x2678>
  405054:	cmp	w3, #0x20
  405058:	b.eq	405048 <wcrtomb@plt+0x2728>  // b.none
  40505c:	mov	x5, x1
  405060:	b	405004 <wcrtomb@plt+0x26e4>
  405064:	nop
  405068:	stp	x29, x30, [sp, #-48]!
  40506c:	mov	x29, sp
  405070:	stp	x19, x20, [sp, #16]
  405074:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x11510>
  405078:	add	x20, x20, #0xb10
  40507c:	mov	x19, x0
  405080:	str	x21, [sp, #32]
  405084:	mov	w21, w1
  405088:	mov	x1, x20
  40508c:	bl	402690 <strcmp@plt>
  405090:	cbz	w0, 405148 <wcrtomb@plt+0x2828>
  405094:	add	x1, x20, #0x20
  405098:	mov	x0, x19
  40509c:	bl	402690 <strcmp@plt>
  4050a0:	cbz	w0, 405164 <wcrtomb@plt+0x2844>
  4050a4:	add	x1, x20, #0x40
  4050a8:	mov	x0, x19
  4050ac:	bl	402690 <strcmp@plt>
  4050b0:	cbz	w0, 40516c <wcrtomb@plt+0x284c>
  4050b4:	add	x1, x20, #0x60
  4050b8:	mov	x0, x19
  4050bc:	bl	402690 <strcmp@plt>
  4050c0:	cbz	w0, 405174 <wcrtomb@plt+0x2854>
  4050c4:	add	x1, x20, #0x80
  4050c8:	mov	x0, x19
  4050cc:	bl	402690 <strcmp@plt>
  4050d0:	cbz	w0, 405144 <wcrtomb@plt+0x2824>
  4050d4:	add	x1, x20, #0xa0
  4050d8:	mov	x0, x19
  4050dc:	bl	402690 <strcmp@plt>
  4050e0:	cbz	w0, 40517c <wcrtomb@plt+0x285c>
  4050e4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4050e8:	mov	x0, x19
  4050ec:	add	x1, x1, #0x328
  4050f0:	bl	402690 <strcmp@plt>
  4050f4:	cbnz	w0, 40511c <wcrtomb@plt+0x27fc>
  4050f8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4050fc:	add	x1, x1, #0x330
  405100:	mov	w2, #0x5                   	// #5
  405104:	mov	x0, #0x0                   	// #0
  405108:	bl	4027f0 <dcgettext@plt>
  40510c:	mov	w1, #0x0                   	// #0
  405110:	mov	x2, x0
  405114:	mov	w0, #0x2                   	// #2
  405118:	bl	402330 <error@plt>
  40511c:	mov	w2, #0x5                   	// #5
  405120:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  405124:	mov	x0, #0x0                   	// #0
  405128:	add	x1, x1, #0x370
  40512c:	bl	4027f0 <dcgettext@plt>
  405130:	mov	x2, x0
  405134:	mov	x3, x19
  405138:	mov	w1, #0x0                   	// #0
  40513c:	mov	w0, #0x2                   	// #2
  405140:	bl	402330 <error@plt>
  405144:	mov	w0, #0x4                   	// #4
  405148:	cmp	w21, #0x0
  40514c:	ccmp	w21, w0, #0x4, ge  // ge = tcont
  405150:	b.ne	405184 <wcrtomb@plt+0x2864>  // b.any
  405154:	ldp	x19, x20, [sp, #16]
  405158:	ldr	x21, [sp, #32]
  40515c:	ldp	x29, x30, [sp], #48
  405160:	ret
  405164:	mov	w0, #0x1                   	// #1
  405168:	b	405148 <wcrtomb@plt+0x2828>
  40516c:	mov	w0, #0x2                   	// #2
  405170:	b	405148 <wcrtomb@plt+0x2828>
  405174:	mov	w0, #0x3                   	// #3
  405178:	b	405148 <wcrtomb@plt+0x2828>
  40517c:	mov	w0, #0x5                   	// #5
  405180:	b	405148 <wcrtomb@plt+0x2828>
  405184:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  405188:	mov	w2, #0x5                   	// #5
  40518c:	add	x1, x1, #0x308
  405190:	b	405104 <wcrtomb@plt+0x27e4>
  405194:	nop
  405198:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40519c:	ldr	w0, [x0, #1156]
  4051a0:	cbz	w0, 4051a8 <wcrtomb@plt+0x2888>
  4051a4:	ret
  4051a8:	b	40d370 <wcrtomb@plt+0xaa50>
  4051ac:	nop
  4051b0:	stp	x29, x30, [sp, #-64]!
  4051b4:	mov	x29, sp
  4051b8:	stp	x21, x22, [sp, #32]
  4051bc:	adrp	x22, 449000 <_obstack_memory_used@@Base+0x2a510>
  4051c0:	add	x22, x22, #0x480
  4051c4:	stp	x19, x20, [sp, #16]
  4051c8:	mov	x21, x1
  4051cc:	mov	x19, x0
  4051d0:	ldp	x4, x3, [x22, #8]
  4051d4:	stp	x23, x24, [sp, #48]
  4051d8:	mov	x24, x2
  4051dc:	ldr	x0, [x22, #24]
  4051e0:	cmp	x4, x3
  4051e4:	b.ls	40524c <wcrtomb@plt+0x292c>  // b.plast
  4051e8:	lsl	x1, x3, #4
  4051ec:	add	x3, x3, #0x1
  4051f0:	add	x2, x0, x1
  4051f4:	str	x3, [x22, #16]
  4051f8:	ldr	x23, [x22, #32]
  4051fc:	add	x21, x19, x21
  405200:	mov	x20, #0x0                   	// #0
  405204:	add	x3, x23, #0x1
  405208:	str	x3, [x2, #8]
  40520c:	str	x24, [x0, x1]
  405210:	b	40521c <wcrtomb@plt+0x28fc>
  405214:	add	x19, x0, #0x1
  405218:	add	x20, x20, #0x1
  40521c:	sub	x2, x21, x19
  405220:	mov	x0, x19
  405224:	mov	w1, #0xa                   	// #10
  405228:	bl	402770 <memchr@plt>
  40522c:	cbnz	x0, 405214 <wcrtomb@plt+0x28f4>
  405230:	add	x20, x23, x20
  405234:	str	x20, [x22, #32]
  405238:	ldp	x19, x20, [sp, #16]
  40523c:	ldp	x21, x22, [sp, #32]
  405240:	ldp	x23, x24, [sp, #48]
  405244:	ldp	x29, x30, [sp], #64
  405248:	ret
  40524c:	cbz	x0, 405280 <wcrtomb@plt+0x2960>
  405250:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  405254:	movk	x1, #0x555, lsl #48
  405258:	cmp	x4, x1
  40525c:	b.cs	405298 <wcrtomb@plt+0x2978>  // b.hs, b.nlast
  405260:	add	x1, x4, #0x1
  405264:	add	x4, x1, x4, lsr #1
  405268:	lsl	x1, x4, #4
  40526c:	str	x4, [x22, #8]
  405270:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  405274:	str	x0, [x22, #24]
  405278:	ldr	x3, [x22, #16]
  40527c:	b	4051e8 <wcrtomb@plt+0x28c8>
  405280:	cbz	x4, 40529c <wcrtomb@plt+0x297c>
  405284:	cmp	xzr, x4, lsr #60
  405288:	lsl	x1, x4, #4
  40528c:	cset	x2, ne  // ne = any
  405290:	tbnz	x4, #59, 405298 <wcrtomb@plt+0x2978>
  405294:	cbz	x2, 40526c <wcrtomb@plt+0x294c>
  405298:	bl	41b778 <wcrtomb@plt+0x18e58>
  40529c:	mov	x1, #0x80                  	// #128
  4052a0:	mov	x4, #0x8                   	// #8
  4052a4:	b	40526c <wcrtomb@plt+0x294c>
  4052a8:	stp	x29, x30, [sp, #-272]!
  4052ac:	adrp	x8, 449000 <_obstack_memory_used@@Base+0x2a510>
  4052b0:	mov	x10, x0
  4052b4:	mov	x29, sp
  4052b8:	add	x12, sp, #0x110
  4052bc:	mov	w9, #0xffffffc8            	// #-56
  4052c0:	ldr	x0, [x8, #1112]
  4052c4:	add	x11, sp, #0xd0
  4052c8:	mov	w8, #0xffffff80            	// #-128
  4052cc:	stp	x12, x12, [sp, #48]
  4052d0:	str	x11, [sp, #64]
  4052d4:	stp	w9, w8, [sp, #72]
  4052d8:	ldp	x12, x13, [sp, #48]
  4052dc:	stp	x12, x13, [sp, #16]
  4052e0:	ldp	x8, x9, [sp, #64]
  4052e4:	stp	x8, x9, [sp, #32]
  4052e8:	str	q0, [sp, #80]
  4052ec:	str	q1, [sp, #96]
  4052f0:	str	q2, [sp, #112]
  4052f4:	str	q3, [sp, #128]
  4052f8:	str	q4, [sp, #144]
  4052fc:	str	q5, [sp, #160]
  405300:	str	q6, [sp, #176]
  405304:	str	q7, [sp, #192]
  405308:	stp	x1, x2, [sp, #216]
  40530c:	mov	x1, x10
  405310:	add	x2, sp, #0x10
  405314:	stp	x3, x4, [sp, #232]
  405318:	stp	x5, x6, [sp, #248]
  40531c:	str	x7, [sp, #264]
  405320:	bl	402850 <vfprintf@plt>
  405324:	tbz	w0, #31, 405338 <wcrtomb@plt+0x2a18>
  405328:	bl	402890 <__errno_location@plt>
  40532c:	ldr	w0, [x0]
  405330:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  405334:	str	w0, [x1, #1156]
  405338:	ldp	x29, x30, [sp], #272
  40533c:	ret
  405340:	stp	x29, x30, [sp, #-16]!
  405344:	mov	w2, #0x5                   	// #5
  405348:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  40534c:	mov	x29, sp
  405350:	add	x1, x1, #0x388
  405354:	mov	x0, #0x0                   	// #0
  405358:	bl	4027f0 <dcgettext@plt>
  40535c:	mov	x2, x0
  405360:	mov	w1, #0x0                   	// #0
  405364:	mov	w0, #0x2                   	// #2
  405368:	bl	402330 <error@plt>
  40536c:	nop
  405370:	stp	x29, x30, [sp, #-32]!
  405374:	mov	x3, x1
  405378:	adrp	x4, 431000 <_obstack_memory_used@@Base+0x12510>
  40537c:	mov	x29, sp
  405380:	add	x4, x4, #0xbe0
  405384:	mov	w2, #0xa                   	// #10
  405388:	stp	x19, x20, [sp, #16]
  40538c:	mov	x19, x1
  405390:	mov	x20, x0
  405394:	mov	x1, #0x0                   	// #0
  405398:	bl	41b7c0 <wcrtomb@plt+0x18ea0>
  40539c:	cmp	w0, #0x1
  4053a0:	b.hi	4053b8 <wcrtomb@plt+0x2a98>  // b.pmore
  4053a4:	ldr	x0, [x19]
  4053a8:	tbnz	x0, #63, 4053b8 <wcrtomb@plt+0x2a98>
  4053ac:	ldp	x19, x20, [sp, #16]
  4053b0:	ldp	x29, x30, [sp], #32
  4053b4:	ret
  4053b8:	mov	w2, #0x5                   	// #5
  4053bc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4053c0:	mov	x0, #0x0                   	// #0
  4053c4:	add	x1, x1, #0x3a8
  4053c8:	bl	4027f0 <dcgettext@plt>
  4053cc:	mov	x4, x0
  4053d0:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  4053d4:	mov	x3, x20
  4053d8:	add	x2, x2, #0x3c8
  4053dc:	mov	w1, #0x0                   	// #0
  4053e0:	mov	w0, #0x2                   	// #2
  4053e4:	bl	402330 <error@plt>
  4053e8:	stp	x29, x30, [sp, #-32]!
  4053ec:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  4053f0:	mov	x29, sp
  4053f4:	ldr	x3, [x2, #1112]
  4053f8:	str	x19, [sp, #16]
  4053fc:	mov	x19, x1
  405400:	mov	x1, #0x1                   	// #1
  405404:	mov	x2, x19
  405408:	bl	4022f0 <fwrite_unlocked@plt>
  40540c:	cmp	x19, x0
  405410:	b.eq	405424 <wcrtomb@plt+0x2b04>  // b.none
  405414:	bl	402890 <__errno_location@plt>
  405418:	ldr	w0, [x0]
  40541c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  405420:	str	w0, [x1, #1156]
  405424:	ldr	x19, [sp, #16]
  405428:	ldp	x29, x30, [sp], #32
  40542c:	ret
  405430:	stp	x29, x30, [sp, #-32]!
  405434:	mov	x29, sp
  405438:	stp	x19, x20, [sp, #16]
  40543c:	adrp	x19, 449000 <_obstack_memory_used@@Base+0x2a510>
  405440:	ldr	w0, [x19, #1152]
  405444:	cbz	w0, 40545c <wcrtomb@plt+0x2b3c>
  405448:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40544c:	add	x0, x0, #0x360
  405450:	ldr	x1, [x0, #32]
  405454:	ldrb	w2, [x1]
  405458:	cbnz	w2, 4054bc <wcrtomb@plt+0x2b9c>
  40545c:	add	x20, x19, #0x480
  405460:	ldr	x0, [x20, #40]
  405464:	cbz	x0, 4054d0 <wcrtomb@plt+0x2bb0>
  405468:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40546c:	ldr	x1, [x1, #1112]
  405470:	bl	402800 <fputs_unlocked@plt>
  405474:	tbz	w0, #31, 405484 <wcrtomb@plt+0x2b64>
  405478:	bl	402890 <__errno_location@plt>
  40547c:	ldr	w0, [x0]
  405480:	str	w0, [x20, #4]
  405484:	ldr	w0, [x19, #1152]
  405488:	cbz	w0, 4054a0 <wcrtomb@plt+0x2b80>
  40548c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  405490:	add	x0, x0, #0x360
  405494:	ldr	x1, [x0, #32]
  405498:	ldrb	w1, [x1]
  40549c:	cbnz	w1, 4054ac <wcrtomb@plt+0x2b8c>
  4054a0:	ldp	x19, x20, [sp, #16]
  4054a4:	ldp	x29, x30, [sp], #32
  4054a8:	ret
  4054ac:	ldp	x19, x20, [sp, #16]
  4054b0:	ldp	x29, x30, [sp], #32
  4054b4:	ldr	x0, [x0, #24]
  4054b8:	b	41bfb0 <wcrtomb@plt+0x19690>
  4054bc:	ldr	x0, [x0, #16]
  4054c0:	add	x20, x19, #0x480
  4054c4:	bl	41bfa8 <wcrtomb@plt+0x19688>
  4054c8:	ldr	x0, [x20, #40]
  4054cc:	cbnz	x0, 405468 <wcrtomb@plt+0x2b48>
  4054d0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4054d4:	mov	w2, #0x5                   	// #5
  4054d8:	add	x1, x1, #0x3d0
  4054dc:	bl	4027f0 <dcgettext@plt>
  4054e0:	str	x0, [x20, #40]
  4054e4:	b	405468 <wcrtomb@plt+0x2b48>
  4054e8:	stp	x29, x30, [sp, #-32]!
  4054ec:	mov	x29, sp
  4054f0:	stp	x19, x20, [sp, #16]
  4054f4:	adrp	x19, 449000 <_obstack_memory_used@@Base+0x2a510>
  4054f8:	and	w20, w0, #0xff
  4054fc:	ldr	w0, [x19, #1152]
  405500:	cbz	w0, 405518 <wcrtomb@plt+0x2bf8>
  405504:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  405508:	add	x0, x0, #0x360
  40550c:	ldr	x1, [x0, #40]
  405510:	ldrb	w2, [x1]
  405514:	cbnz	w2, 405590 <wcrtomb@plt+0x2c70>
  405518:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40551c:	ldr	x0, [x0, #1112]
  405520:	ldp	x1, x2, [x0, #40]
  405524:	cmp	x1, x2
  405528:	b.cs	405560 <wcrtomb@plt+0x2c40>  // b.hs, b.nlast
  40552c:	add	x2, x1, #0x1
  405530:	str	x2, [x0, #40]
  405534:	strb	w20, [x1]
  405538:	ldr	w0, [x19, #1152]
  40553c:	cbz	w0, 405554 <wcrtomb@plt+0x2c34>
  405540:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  405544:	add	x0, x0, #0x360
  405548:	ldr	x1, [x0, #40]
  40554c:	ldrb	w1, [x1]
  405550:	cbnz	w1, 405580 <wcrtomb@plt+0x2c60>
  405554:	ldp	x19, x20, [sp, #16]
  405558:	ldp	x29, x30, [sp], #32
  40555c:	ret
  405560:	mov	w1, w20
  405564:	bl	402620 <__overflow@plt>
  405568:	tbz	w0, #31, 405538 <wcrtomb@plt+0x2c18>
  40556c:	bl	402890 <__errno_location@plt>
  405570:	ldr	w0, [x0]
  405574:	add	x1, x19, #0x480
  405578:	str	w0, [x1, #4]
  40557c:	b	405538 <wcrtomb@plt+0x2c18>
  405580:	ldp	x19, x20, [sp, #16]
  405584:	ldp	x29, x30, [sp], #32
  405588:	ldr	x0, [x0, #24]
  40558c:	b	41bfb0 <wcrtomb@plt+0x19690>
  405590:	ldr	x0, [x0, #16]
  405594:	bl	41bfa8 <wcrtomb@plt+0x19688>
  405598:	b	405518 <wcrtomb@plt+0x2bf8>
  40559c:	nop
  4055a0:	stp	x29, x30, [sp, #-128]!
  4055a4:	mov	x29, sp
  4055a8:	stp	x19, x20, [sp, #16]
  4055ac:	stp	x23, x24, [sp, #48]
  4055b0:	adrp	x23, 449000 <_obstack_memory_used@@Base+0x2a510>
  4055b4:	add	x20, x23, #0x480
  4055b8:	stp	x21, x22, [sp, #32]
  4055bc:	mov	x21, x0
  4055c0:	mov	x22, x1
  4055c4:	ldr	w0, [x20, #48]
  4055c8:	mov	x24, x2
  4055cc:	stp	x25, x26, [sp, #64]
  4055d0:	and	w25, w3, #0xff
  4055d4:	cmp	w0, #0x1
  4055d8:	b.ne	405774 <wcrtomb@plt+0x2e54>  // b.any
  4055dc:	ldr	w0, [x20, #64]
  4055e0:	cbnz	w0, 405838 <wcrtomb@plt+0x2f18>
  4055e4:	ldrb	w0, [x20, #72]
  4055e8:	cbz	w0, 40569c <wcrtomb@plt+0x2d7c>
  4055ec:	ldp	x0, x26, [x20, #80]
  4055f0:	cmp	x0, x24
  4055f4:	b.cs	405654 <wcrtomb@plt+0x2d34>  // b.hs, b.nlast
  4055f8:	cmp	x0, x21
  4055fc:	b.cs	405640 <wcrtomb@plt+0x2d20>  // b.hs, b.nlast
  405600:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  405604:	str	x27, [sp, #80]
  405608:	mov	x27, #0x0                   	// #0
  40560c:	ldrb	w19, [x1, #2264]
  405610:	b	405624 <wcrtomb@plt+0x2d04>
  405614:	add	x0, x0, #0x1
  405618:	add	x27, x27, #0x1
  40561c:	cmp	x21, x0
  405620:	b.ls	405634 <wcrtomb@plt+0x2d14>  // b.plast
  405624:	sub	x2, x21, x0
  405628:	mov	w1, w19
  40562c:	bl	402770 <memchr@plt>
  405630:	cbnz	x0, 405614 <wcrtomb@plt+0x2cf4>
  405634:	adds	x26, x27, x26
  405638:	b.cs	405920 <wcrtomb@plt+0x3000>  // b.hs, b.nlast
  40563c:	ldr	x27, [sp, #80]
  405640:	stp	x21, x26, [x20, #80]
  405644:	adds	x0, x26, #0x1
  405648:	mov	x26, x0
  40564c:	b.cs	40591c <wcrtomb@plt+0x2ffc>  // b.hs, b.nlast
  405650:	stp	x24, x0, [x20, #80]
  405654:	ldr	w0, [x23, #1152]
  405658:	adrp	x19, 449000 <_obstack_memory_used@@Base+0x2a510>
  40565c:	add	x19, x19, #0x360
  405660:	ldr	x24, [x19, #48]
  405664:	cbz	w0, 405670 <wcrtomb@plt+0x2d50>
  405668:	ldrb	w0, [x24]
  40566c:	cbnz	w0, 405880 <wcrtomb@plt+0x2f60>
  405670:	ldr	w1, [x20, #96]
  405674:	mov	x2, x26
  405678:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x10510>
  40567c:	add	x0, x0, #0x3e8
  405680:	bl	4052a8 <wcrtomb@plt+0x2988>
  405684:	ldr	w0, [x23, #1152]
  405688:	cbz	w0, 405694 <wcrtomb@plt+0x2d74>
  40568c:	ldrb	w0, [x24]
  405690:	cbnz	w0, 405874 <wcrtomb@plt+0x2f54>
  405694:	mov	w0, w25
  405698:	bl	4054e8 <wcrtomb@plt+0x2bc8>
  40569c:	ldrb	w0, [x20, #100]
  4056a0:	cbz	w0, 4056f8 <wcrtomb@plt+0x2dd8>
  4056a4:	ldp	x2, x0, [x20, #104]
  4056a8:	sub	x21, x21, x0
  4056ac:	adds	x2, x2, x21
  4056b0:	b.cs	40591c <wcrtomb@plt+0x2ffc>  // b.hs, b.nlast
  4056b4:	ldr	w0, [x23, #1152]
  4056b8:	adrp	x19, 449000 <_obstack_memory_used@@Base+0x2a510>
  4056bc:	add	x19, x19, #0x360
  4056c0:	ldr	x21, [x19, #56]
  4056c4:	cbz	w0, 4056d0 <wcrtomb@plt+0x2db0>
  4056c8:	ldrb	w0, [x21]
  4056cc:	cbnz	w0, 40589c <wcrtomb@plt+0x2f7c>
  4056d0:	ldr	w1, [x20, #96]
  4056d4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x10510>
  4056d8:	add	x0, x0, #0x3e8
  4056dc:	bl	4052a8 <wcrtomb@plt+0x2988>
  4056e0:	ldr	w0, [x23, #1152]
  4056e4:	cbz	w0, 4056f0 <wcrtomb@plt+0x2dd0>
  4056e8:	ldrb	w0, [x21]
  4056ec:	cbnz	w0, 405890 <wcrtomb@plt+0x2f70>
  4056f0:	mov	w0, w25
  4056f4:	bl	4054e8 <wcrtomb@plt+0x2bc8>
  4056f8:	ldrb	w0, [x20, #120]
  4056fc:	cbnz	w0, 405720 <wcrtomb@plt+0x2e00>
  405700:	mov	w19, #0x1                   	// #1
  405704:	mov	w0, w19
  405708:	ldp	x19, x20, [sp, #16]
  40570c:	ldp	x21, x22, [sp, #32]
  405710:	ldp	x23, x24, [sp, #48]
  405714:	ldp	x25, x26, [sp, #64]
  405718:	ldp	x29, x30, [sp], #128
  40571c:	ret
  405720:	ldrb	w0, [x20, #72]
  405724:	ldrb	w2, [x20, #100]
  405728:	ldr	w1, [x20, #64]
  40572c:	orr	w0, w0, w2
  405730:	and	w0, w0, #0xff
  405734:	orr	w0, w0, w1
  405738:	cmp	w0, #0x0
  40573c:	cset	w19, ne  // ne = any
  405740:	cmp	x22, #0x0
  405744:	csel	w19, w19, wzr, ne  // ne = any
  405748:	cbz	w19, 405700 <wcrtomb@plt+0x2de0>
  40574c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  405750:	ldr	x0, [x0, #1112]
  405754:	ldp	x1, x2, [x0, #40]
  405758:	cmp	x1, x2
  40575c:	b.cs	405900 <wcrtomb@plt+0x2fe0>  // b.hs, b.nlast
  405760:	add	x2, x1, #0x1
  405764:	str	x2, [x0, #40]
  405768:	mov	w0, #0x9                   	// #9
  40576c:	strb	w0, [x1]
  405770:	b	405704 <wcrtomb@plt+0x2de4>
  405774:	ldr	x1, [x20, #56]
  405778:	cbz	x1, 4055dc <wcrtomb@plt+0x2cbc>
  40577c:	str	x27, [sp, #80]
  405780:	mov	w0, #0xffffffff            	// #-1
  405784:	mov	x19, x21
  405788:	add	x27, x21, x22
  40578c:	ldrb	w26, [x21, x22]
  405790:	strb	w0, [x21, x22]
  405794:	str	xzr, [sp, #120]
  405798:	b	4057ac <wcrtomb@plt+0x2e8c>
  40579c:	ldrb	w0, [x19]
  4057a0:	tst	x0, x1
  4057a4:	b.ne	4057cc <wcrtomb@plt+0x2eac>  // b.any
  4057a8:	add	x19, x19, #0x1
  4057ac:	tst	x19, #0x7
  4057b0:	b.ne	40579c <wcrtomb@plt+0x2e7c>  // b.any
  4057b4:	ldr	x0, [x19]
  4057b8:	tst	x1, x0
  4057bc:	b.eq	40581c <wcrtomb@plt+0x2efc>  // b.none
  4057c0:	ldrb	w0, [x19]
  4057c4:	tst	x0, x1
  4057c8:	b.eq	4057f8 <wcrtomb@plt+0x2ed8>  // b.none
  4057cc:	cmp	x27, x19
  4057d0:	b.ls	405810 <wcrtomb@plt+0x2ef0>  // b.plast
  4057d4:	add	x2, sp, #0x78
  4057d8:	sub	x1, x27, x19
  4057dc:	mov	x0, x19
  4057e0:	bl	41e5f0 <wcrtomb@plt+0x1bcd0>
  4057e4:	cmn	x0, #0x3
  4057e8:	b.hi	4058b4 <wcrtomb@plt+0x2f94>  // b.pmore
  4057ec:	add	x19, x19, x0
  4057f0:	ldr	x1, [x20, #56]
  4057f4:	b	4057ac <wcrtomb@plt+0x2e8c>
  4057f8:	ldrb	w0, [x19, #1]!
  4057fc:	tst	x0, x1
  405800:	b.eq	4057f8 <wcrtomb@plt+0x2ed8>  // b.none
  405804:	cmp	x27, x19
  405808:	b.hi	4057d4 <wcrtomb@plt+0x2eb4>  // b.pmore
  40580c:	nop
  405810:	strb	w26, [x21, x22]
  405814:	ldr	x27, [sp, #80]
  405818:	b	4055dc <wcrtomb@plt+0x2cbc>
  40581c:	ldr	x0, [x19, #8]!
  405820:	tst	x1, x0
  405824:	b.ne	4057c0 <wcrtomb@plt+0x2ea0>  // b.any
  405828:	ldr	x0, [x19, #8]!
  40582c:	tst	x1, x0
  405830:	b.ne	4057c0 <wcrtomb@plt+0x2ea0>  // b.any
  405834:	b	40581c <wcrtomb@plt+0x2efc>
  405838:	bl	405430 <wcrtomb@plt+0x2b10>
  40583c:	ldr	w0, [x20, #68]
  405840:	cbnz	w0, 405868 <wcrtomb@plt+0x2f48>
  405844:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  405848:	ldr	x0, [x0, #1112]
  40584c:	ldp	x1, x2, [x0, #40]
  405850:	cmp	x1, x2
  405854:	b.cs	4058e4 <wcrtomb@plt+0x2fc4>  // b.hs, b.nlast
  405858:	add	x2, x1, #0x1
  40585c:	str	x2, [x0, #40]
  405860:	strb	wzr, [x1]
  405864:	b	4055e4 <wcrtomb@plt+0x2cc4>
  405868:	mov	w0, w25
  40586c:	bl	4054e8 <wcrtomb@plt+0x2bc8>
  405870:	b	4055e4 <wcrtomb@plt+0x2cc4>
  405874:	ldr	x0, [x19, #24]
  405878:	bl	41bfb0 <wcrtomb@plt+0x19690>
  40587c:	b	405694 <wcrtomb@plt+0x2d74>
  405880:	ldr	x0, [x19, #16]
  405884:	mov	x1, x24
  405888:	bl	41bfa8 <wcrtomb@plt+0x19688>
  40588c:	b	405670 <wcrtomb@plt+0x2d50>
  405890:	ldr	x0, [x19, #24]
  405894:	bl	41bfb0 <wcrtomb@plt+0x19690>
  405898:	b	4056f0 <wcrtomb@plt+0x2dd0>
  40589c:	ldr	x0, [x19, #16]
  4058a0:	mov	x1, x21
  4058a4:	str	x2, [sp, #104]
  4058a8:	bl	41bfa8 <wcrtomb@plt+0x19688>
  4058ac:	ldr	x2, [sp, #104]
  4058b0:	b	4056d0 <wcrtomb@plt+0x2db0>
  4058b4:	mov	w0, #0x1                   	// #1
  4058b8:	strb	w26, [x21, x22]
  4058bc:	strb	w0, [x20, #121]
  4058c0:	mov	w19, #0x0                   	// #0
  4058c4:	mov	w0, w19
  4058c8:	ldp	x19, x20, [sp, #16]
  4058cc:	ldp	x21, x22, [sp, #32]
  4058d0:	ldp	x23, x24, [sp, #48]
  4058d4:	ldp	x25, x26, [sp, #64]
  4058d8:	ldr	x27, [sp, #80]
  4058dc:	ldp	x29, x30, [sp], #128
  4058e0:	ret
  4058e4:	mov	w1, #0x0                   	// #0
  4058e8:	bl	402620 <__overflow@plt>
  4058ec:	tbz	w0, #31, 4055e4 <wcrtomb@plt+0x2cc4>
  4058f0:	bl	402890 <__errno_location@plt>
  4058f4:	ldr	w0, [x0]
  4058f8:	str	w0, [x20, #4]
  4058fc:	b	4055e4 <wcrtomb@plt+0x2cc4>
  405900:	mov	w1, #0x9                   	// #9
  405904:	bl	402620 <__overflow@plt>
  405908:	tbz	w0, #31, 405700 <wcrtomb@plt+0x2de0>
  40590c:	bl	402890 <__errno_location@plt>
  405910:	ldr	w0, [x0]
  405914:	str	w0, [x20, #4]
  405918:	b	405704 <wcrtomb@plt+0x2de4>
  40591c:	str	x27, [sp, #80]
  405920:	bl	405340 <wcrtomb@plt+0x2a20>
  405924:	nop
  405928:	stp	x29, x30, [sp, #-128]!
  40592c:	mov	x29, sp
  405930:	stp	x19, x20, [sp, #16]
  405934:	mov	x20, x1
  405938:	stp	x21, x22, [sp, #32]
  40593c:	adrp	x22, 449000 <_obstack_memory_used@@Base+0x2a510>
  405940:	add	x19, x22, #0x480
  405944:	stp	x23, x24, [sp, #48]
  405948:	mov	x21, x0
  40594c:	and	w23, w2, #0xff
  405950:	ldrb	w1, [x19, #122]
  405954:	cbz	w1, 405af8 <wcrtomb@plt+0x31d8>
  405958:	ldr	w2, [x22, #1152]
  40595c:	cmp	w23, #0x3a
  405960:	ldrb	w3, [x19, #123]
  405964:	cset	w4, eq  // eq = none
  405968:	cmp	w2, #0x0
  40596c:	eor	w0, w4, w3
  405970:	and	w0, w1, w0
  405974:	cbz	w2, 405a30 <wcrtomb@plt+0x3110>
  405978:	ccmp	w3, #0x0, #0x4, lt  // lt = tstop
  40597c:	cset	w2, ne  // ne = any
  405980:	cmp	w2, w4
  405984:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  405988:	add	x5, x2, #0x360
  40598c:	b.eq	405d00 <wcrtomb@plt+0x33e0>  // b.none
  405990:	ldr	x24, [x5, #64]
  405994:	cmp	w23, #0x3a
  405998:	b.eq	405cf8 <wcrtomb@plt+0x33d8>  // b.none
  40599c:	ldr	x23, [x2, #864]
  4059a0:	cbnz	w0, 405b24 <wcrtomb@plt+0x3204>
  4059a4:	ldrb	w0, [x24]
  4059a8:	cbnz	w0, 405a70 <wcrtomb@plt+0x3150>
  4059ac:	ldrb	w0, [x23]
  4059b0:	cbz	w0, 405a34 <wcrtomb@plt+0x3114>
  4059b4:	cmp	w4, w3
  4059b8:	b.eq	405c6c <wcrtomb@plt+0x334c>  // b.none
  4059bc:	stp	x27, x28, [sp, #80]
  4059c0:	cmp	x20, x21
  4059c4:	b.hi	405b30 <wcrtomb@plt+0x3210>  // b.pmore
  4059c8:	mov	x28, x21
  4059cc:	nop
  4059d0:	cbz	x28, 405d40 <wcrtomb@plt+0x3420>
  4059d4:	mov	x21, x28
  4059d8:	ldrb	w0, [x24]
  4059dc:	ldp	x27, x28, [sp, #80]
  4059e0:	cbnz	w0, 405a80 <wcrtomb@plt+0x3160>
  4059e4:	ldrb	w1, [x19, #122]
  4059e8:	cmp	x21, x20
  4059ec:	cset	w0, cc  // cc = lo, ul, last
  4059f0:	eor	w1, w1, #0x1
  4059f4:	tst	w0, w1
  4059f8:	b.eq	405a48 <wcrtomb@plt+0x3128>  // b.none
  4059fc:	mov	x0, x21
  405a00:	sub	x1, x20, x21
  405a04:	bl	4053e8 <wcrtomb@plt+0x2ac8>
  405a08:	ldrb	w0, [x19, #144]
  405a0c:	cbnz	w0, 405a50 <wcrtomb@plt+0x3130>
  405a10:	ldr	w21, [x19, #4]
  405a14:	cbnz	w21, 405d48 <wcrtomb@plt+0x3428>
  405a18:	str	x20, [x19, #152]
  405a1c:	ldp	x19, x20, [sp, #16]
  405a20:	ldp	x21, x22, [sp, #32]
  405a24:	ldp	x23, x24, [sp, #48]
  405a28:	ldp	x29, x30, [sp], #128
  405a2c:	ret
  405a30:	cbnz	w0, 405b1c <wcrtomb@plt+0x31fc>
  405a34:	cmp	x21, x20
  405a38:	eor	w1, w1, #0x1
  405a3c:	cset	w0, cc  // cc = lo, ul, last
  405a40:	tst	w0, w1
  405a44:	b.ne	4059fc <wcrtomb@plt+0x30dc>  // b.any
  405a48:	ldrb	w0, [x19, #144]
  405a4c:	cbz	w0, 405a10 <wcrtomb@plt+0x30f0>
  405a50:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  405a54:	ldr	x0, [x0, #1112]
  405a58:	bl	402710 <fflush_unlocked@plt>
  405a5c:	cbz	w0, 405a10 <wcrtomb@plt+0x30f0>
  405a60:	bl	402890 <__errno_location@plt>
  405a64:	ldr	w21, [x0]
  405a68:	str	w21, [x19, #4]
  405a6c:	b	405a14 <wcrtomb@plt+0x30f4>
  405a70:	cmp	w4, w3
  405a74:	b.eq	405c6c <wcrtomb@plt+0x334c>  // b.none
  405a78:	ldrb	w0, [x23]
  405a7c:	cbnz	w0, 4059bc <wcrtomb@plt+0x309c>
  405a80:	stp	x25, x26, [sp, #64]
  405a84:	cmp	x20, x21
  405a88:	mov	x22, x20
  405a8c:	b.ls	405ab8 <wcrtomb@plt+0x3198>  // b.plast
  405a90:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  405a94:	ldurb	w2, [x20, #-1]
  405a98:	mov	x0, #0xffffffffffffffff    	// #-1
  405a9c:	ldrb	w1, [x1, #2264]
  405aa0:	cmp	w2, w1
  405aa4:	b.eq	405d2c <wcrtomb@plt+0x340c>  // b.none
  405aa8:	ldrb	w1, [x20, x0]
  405aac:	add	x0, x20, x0
  405ab0:	cmp	w1, #0xd
  405ab4:	csel	x22, x0, x22, eq  // eq = none
  405ab8:	subs	x25, x22, x21
  405abc:	b.eq	405c84 <wcrtomb@plt+0x3364>  // b.none
  405ac0:	adrp	x23, 449000 <_obstack_memory_used@@Base+0x2a510>
  405ac4:	add	x23, x23, #0x360
  405ac8:	mov	x1, x24
  405acc:	ldr	x0, [x23, #16]
  405ad0:	bl	41bfa8 <wcrtomb@plt+0x19688>
  405ad4:	mov	x0, x21
  405ad8:	mov	x1, x25
  405adc:	bl	4053e8 <wcrtomb@plt+0x2ac8>
  405ae0:	ldrb	w0, [x24]
  405ae4:	cbnz	w0, 405c78 <wcrtomb@plt+0x3358>
  405ae8:	ldrb	w1, [x19, #122]
  405aec:	mov	x21, x22
  405af0:	ldp	x25, x26, [sp, #64]
  405af4:	b	405a34 <wcrtomb@plt+0x3114>
  405af8:	sub	x1, x20, x0
  405afc:	mov	w3, w23
  405b00:	sub	x1, x1, #0x1
  405b04:	mov	x2, x20
  405b08:	bl	4055a0 <wcrtomb@plt+0x2c80>
  405b0c:	tst	w0, #0xff
  405b10:	b.eq	405a1c <wcrtomb@plt+0x30fc>  // b.none
  405b14:	ldrb	w1, [x19, #122]
  405b18:	b	405958 <wcrtomb@plt+0x3038>
  405b1c:	mov	x23, #0x0                   	// #0
  405b20:	mov	x24, #0x0                   	// #0
  405b24:	cmp	x20, x21
  405b28:	b.ls	405d10 <wcrtomb@plt+0x33f0>  // b.plast
  405b2c:	stp	x27, x28, [sp, #80]
  405b30:	sub	x27, x20, x21
  405b34:	mov	x28, x21
  405b38:	mov	x22, #0x0                   	// #0
  405b3c:	stp	x25, x26, [sp, #64]
  405b40:	adrp	x26, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  405b44:	adrp	x25, 449000 <_obstack_memory_used@@Base+0x2a510>
  405b48:	add	x0, x26, #0x8d8
  405b4c:	add	x25, x25, #0x360
  405b50:	str	x0, [sp, #104]
  405b54:	b	405b78 <wcrtomb@plt+0x3258>
  405b58:	cmp	x22, #0x0
  405b5c:	mov	x0, #0x1                   	// #1
  405b60:	csel	x22, x22, x28, ne  // ne = any
  405b64:	mov	x4, x0
  405b68:	str	x0, [sp, #120]
  405b6c:	add	x28, x26, x4
  405b70:	cmp	x20, x28
  405b74:	b.ls	405c90 <wcrtomb@plt+0x3370>  // b.plast
  405b78:	ldp	x0, x5, [x19, #128]
  405b7c:	mov	x4, x28
  405b80:	add	x3, sp, #0x78
  405b84:	mov	x2, x27
  405b88:	mov	x1, x21
  405b8c:	blr	x5
  405b90:	cmn	x0, #0x1
  405b94:	b.eq	405c90 <wcrtomb@plt+0x3370>  // b.none
  405b98:	add	x26, x21, x0
  405b9c:	cmp	x20, x26
  405ba0:	b.eq	405c90 <wcrtomb@plt+0x3370>  // b.none
  405ba4:	ldr	x1, [sp, #120]
  405ba8:	cbz	x1, 405b58 <wcrtomb@plt+0x3238>
  405bac:	ldrb	w0, [x19, #122]
  405bb0:	cbz	w0, 405c48 <wcrtomb@plt+0x3328>
  405bb4:	ldrb	w2, [x19, #123]
  405bb8:	mov	w0, #0x3a                  	// #58
  405bbc:	mov	w3, #0x2d                  	// #45
  405bc0:	cmp	w2, #0x0
  405bc4:	mov	x2, x20
  405bc8:	csel	w3, w3, w0, ne  // ne = any
  405bcc:	mov	x0, x26
  405bd0:	bl	4055a0 <wcrtomb@plt+0x2c80>
  405bd4:	tst	w0, #0xff
  405bd8:	b.eq	405d20 <wcrtomb@plt+0x3400>  // b.none
  405bdc:	ldr	w0, [x19]
  405be0:	cbz	w0, 405bec <wcrtomb@plt+0x32cc>
  405be4:	ldrb	w0, [x23]
  405be8:	cbnz	w0, 405ccc <wcrtomb@plt+0x33ac>
  405bec:	ldr	x1, [sp, #120]
  405bf0:	mov	x0, x26
  405bf4:	bl	4053e8 <wcrtomb@plt+0x2ac8>
  405bf8:	ldr	w0, [x19]
  405bfc:	cbz	w0, 405c08 <wcrtomb@plt+0x32e8>
  405c00:	ldrb	w0, [x23]
  405c04:	cbnz	w0, 405cc0 <wcrtomb@plt+0x33a0>
  405c08:	ldrb	w0, [x19, #122]
  405c0c:	cbnz	w0, 405c18 <wcrtomb@plt+0x32f8>
  405c10:	ldr	x4, [sp, #120]
  405c14:	b	405b6c <wcrtomb@plt+0x324c>
  405c18:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  405c1c:	ldr	x1, [sp, #104]
  405c20:	ldr	x0, [x0, #1112]
  405c24:	ldrb	w1, [x1]
  405c28:	ldp	x2, x3, [x0, #40]
  405c2c:	cmp	x2, x3
  405c30:	b.cs	405cdc <wcrtomb@plt+0x33bc>  // b.hs, b.nlast
  405c34:	add	x3, x2, #0x1
  405c38:	str	x3, [x0, #40]
  405c3c:	strb	w1, [x2]
  405c40:	ldr	x4, [sp, #120]
  405c44:	b	405b6c <wcrtomb@plt+0x324c>
  405c48:	ldrb	w0, [x24]
  405c4c:	cbnz	w0, 405cb0 <wcrtomb@plt+0x3390>
  405c50:	cmp	x22, #0x0
  405c54:	csel	x22, x22, x28, ne  // ne = any
  405c58:	sub	x1, x26, x22
  405c5c:	mov	x0, x22
  405c60:	mov	x22, #0x0                   	// #0
  405c64:	bl	4053e8 <wcrtomb@plt+0x2ac8>
  405c68:	b	405bdc <wcrtomb@plt+0x32bc>
  405c6c:	cbnz	w1, 405a48 <wcrtomb@plt+0x3128>
  405c70:	ldrb	w0, [x24]
  405c74:	b	4059e0 <wcrtomb@plt+0x30c0>
  405c78:	ldr	x0, [x23, #24]
  405c7c:	mov	x21, x22
  405c80:	bl	41bfb0 <wcrtomb@plt+0x19690>
  405c84:	ldrb	w1, [x19, #122]
  405c88:	ldp	x25, x26, [sp, #64]
  405c8c:	b	405a34 <wcrtomb@plt+0x3114>
  405c90:	ldrb	w0, [x19, #122]
  405c94:	cbnz	w0, 405d08 <wcrtomb@plt+0x33e8>
  405c98:	cbz	x22, 405d18 <wcrtomb@plt+0x33f8>
  405c9c:	ldrb	w0, [x24]
  405ca0:	mov	x21, x22
  405ca4:	ldp	x25, x26, [sp, #64]
  405ca8:	ldp	x27, x28, [sp, #80]
  405cac:	b	4059e0 <wcrtomb@plt+0x30c0>
  405cb0:	ldr	x0, [x25, #16]
  405cb4:	mov	x1, x24
  405cb8:	bl	41bfa8 <wcrtomb@plt+0x19688>
  405cbc:	b	405c50 <wcrtomb@plt+0x3330>
  405cc0:	ldr	x0, [x25, #24]
  405cc4:	bl	41bfb0 <wcrtomb@plt+0x19690>
  405cc8:	b	405c08 <wcrtomb@plt+0x32e8>
  405ccc:	ldr	x0, [x25, #16]
  405cd0:	mov	x1, x23
  405cd4:	bl	41bfa8 <wcrtomb@plt+0x19688>
  405cd8:	b	405bec <wcrtomb@plt+0x32cc>
  405cdc:	bl	402620 <__overflow@plt>
  405ce0:	tbz	w0, #31, 405c10 <wcrtomb@plt+0x32f0>
  405ce4:	bl	402890 <__errno_location@plt>
  405ce8:	ldr	w0, [x0]
  405cec:	str	w0, [x19, #4]
  405cf0:	ldr	x4, [sp, #120]
  405cf4:	b	405b6c <wcrtomb@plt+0x324c>
  405cf8:	ldr	x23, [x5, #8]
  405cfc:	b	4059a0 <wcrtomb@plt+0x3080>
  405d00:	ldr	x24, [x5, #72]
  405d04:	b	405994 <wcrtomb@plt+0x3074>
  405d08:	ldp	x25, x26, [sp, #64]
  405d0c:	ldp	x27, x28, [sp, #80]
  405d10:	cbnz	x20, 405a48 <wcrtomb@plt+0x3128>
  405d14:	b	405a1c <wcrtomb@plt+0x30fc>
  405d18:	ldp	x25, x26, [sp, #64]
  405d1c:	b	4059d0 <wcrtomb@plt+0x30b0>
  405d20:	ldp	x25, x26, [sp, #64]
  405d24:	ldp	x27, x28, [sp, #80]
  405d28:	b	405a1c <wcrtomb@plt+0x30fc>
  405d2c:	add	x22, x20, x0
  405d30:	cmp	x22, x21
  405d34:	b.ls	405ab8 <wcrtomb@plt+0x3198>  // b.plast
  405d38:	mov	x0, #0xfffffffffffffffe    	// #-2
  405d3c:	b	405aa8 <wcrtomb@plt+0x3188>
  405d40:	ldp	x27, x28, [sp, #80]
  405d44:	b	405a1c <wcrtomb@plt+0x30fc>
  405d48:	mov	w2, #0x5                   	// #5
  405d4c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  405d50:	mov	x0, #0x0                   	// #0
  405d54:	add	x1, x1, #0x3f0
  405d58:	stp	x25, x26, [sp, #64]
  405d5c:	stp	x27, x28, [sp, #80]
  405d60:	bl	4027f0 <dcgettext@plt>
  405d64:	mov	w1, w21
  405d68:	mov	x2, x0
  405d6c:	mov	w0, #0x2                   	// #2
  405d70:	bl	402330 <error@plt>
  405d74:	nop
  405d78:	stp	x29, x30, [sp, #-144]!
  405d7c:	cmp	x0, x1
  405d80:	mov	x29, sp
  405d84:	stp	x19, x20, [sp, #16]
  405d88:	adrp	x19, 449000 <_obstack_memory_used@@Base+0x2a510>
  405d8c:	add	x19, x19, #0x480
  405d90:	stp	x21, x22, [sp, #32]
  405d94:	mov	x21, x0
  405d98:	ldr	x0, [x19, #160]
  405d9c:	str	x0, [sp, #120]
  405da0:	b.cs	406234 <wcrtomb@plt+0x3914>  // b.hs, b.nlast
  405da4:	stp	x23, x24, [sp, #48]
  405da8:	adrp	x24, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  405dac:	mov	x23, x1
  405db0:	add	x0, x24, #0x8d8
  405db4:	stp	x25, x26, [sp, #64]
  405db8:	adrp	x26, 449000 <_obstack_memory_used@@Base+0x2a510>
  405dbc:	stp	x27, x28, [sp, #80]
  405dc0:	str	x0, [sp, #104]
  405dc4:	add	x0, x26, #0x360
  405dc8:	str	x0, [sp, #112]
  405dcc:	nop
  405dd0:	ldp	x0, x5, [x19, #128]
  405dd4:	add	x3, sp, #0x88
  405dd8:	sub	x2, x23, x21
  405ddc:	mov	x1, x21
  405de0:	mov	x4, #0x0                   	// #0
  405de4:	blr	x5
  405de8:	cmn	x0, #0x1
  405dec:	b.eq	405e8c <wcrtomb@plt+0x356c>  // b.none
  405df0:	ldrb	w1, [x19, #123]
  405df4:	add	x27, x21, x0
  405df8:	ldr	x20, [sp, #136]
  405dfc:	add	x20, x27, x20
  405e00:	cbnz	w1, 406084 <wcrtomb@plt+0x3764>
  405e04:	cmp	x23, x27
  405e08:	b.eq	4061d0 <wcrtomb@plt+0x38b0>  // b.none
  405e0c:	ldrb	w0, [x19, #176]
  405e10:	mov	x21, x20
  405e14:	ldr	x1, [sp, #104]
  405e18:	ldrb	w22, [x1]
  405e1c:	cbnz	w0, 406004 <wcrtomb@plt+0x36e4>
  405e20:	ldr	x0, [x19, #168]
  405e24:	ldr	x28, [x19, #152]
  405e28:	cmp	x0, #0x0
  405e2c:	b.gt	406094 <wcrtomb@plt+0x3774>
  405e30:	mov	x5, x28
  405e34:	cbz	x28, 4060f4 <wcrtomb@plt+0x37d4>
  405e38:	ldr	x2, [x19, #184]
  405e3c:	cmp	x2, #0x0
  405e40:	b.le	406104 <wcrtomb@plt+0x37e4>
  405e44:	mov	x26, x27
  405e48:	mov	x0, #0x0                   	// #0
  405e4c:	b	405e5c <wcrtomb@plt+0x353c>
  405e50:	add	x0, x0, #0x1
  405e54:	cmp	x0, x2
  405e58:	b.eq	405fa8 <wcrtomb@plt+0x3688>  // b.none
  405e5c:	cmp	x5, x26
  405e60:	b.cs	405e50 <wcrtomb@plt+0x3530>  // b.hs, b.nlast
  405e64:	nop
  405e68:	ldurb	w1, [x26, #-2]
  405e6c:	sub	x26, x26, #0x1
  405e70:	cmp	w1, w22
  405e74:	b.eq	405e50 <wcrtomb@plt+0x3530>  // b.none
  405e78:	ldurb	w1, [x26, #-2]
  405e7c:	sub	x26, x26, #0x1
  405e80:	cmp	w1, w22
  405e84:	b.ne	405e68 <wcrtomb@plt+0x3548>  // b.any
  405e88:	b	405e50 <wcrtomb@plt+0x3530>
  405e8c:	ldrb	w0, [x19, #123]
  405e90:	cbz	w0, 4061d0 <wcrtomb@plt+0x38b0>
  405e94:	str	xzr, [sp, #136]
  405e98:	cmp	x23, x21
  405e9c:	b.ls	405f80 <wcrtomb@plt+0x3660>  // b.plast
  405ea0:	mov	x0, x23
  405ea4:	mov	x20, x23
  405ea8:	ldrb	w25, [x19, #176]
  405eac:	ldr	x1, [sp, #104]
  405eb0:	ldrb	w22, [x1]
  405eb4:	cbz	w25, 4061b8 <wcrtomb@plt+0x3898>
  405eb8:	ldr	x27, [x19, #160]
  405ebc:	mov	x26, x21
  405ec0:	mov	x21, x0
  405ec4:	cmp	x26, x20
  405ec8:	mov	x24, #0x0                   	// #0
  405ecc:	b.cs	405f3c <wcrtomb@plt+0x361c>  // b.hs, b.nlast
  405ed0:	cmp	x24, x27
  405ed4:	b.ge	405f08 <wcrtomb@plt+0x35e8>  // b.tcont
  405ed8:	sub	x2, x20, x26
  405edc:	mov	w1, w22
  405ee0:	mov	x0, x26
  405ee4:	bl	402770 <memchr@plt>
  405ee8:	add	x28, x0, #0x1
  405eec:	cbz	w25, 405f10 <wcrtomb@plt+0x35f0>
  405ef0:	add	x24, x24, #0x1
  405ef4:	cmp	x28, x20
  405ef8:	b.cs	405f34 <wcrtomb@plt+0x3614>  // b.hs, b.nlast
  405efc:	mov	x26, x28
  405f00:	cmp	x24, x27
  405f04:	b.lt	405ed8 <wcrtomb@plt+0x35b8>  // b.tstop
  405f08:	sub	x27, x27, x24
  405f0c:	b	405f3c <wcrtomb@plt+0x361c>
  405f10:	mov	x0, x26
  405f14:	mov	x1, x28
  405f18:	mov	w2, #0x3a                  	// #58
  405f1c:	bl	405928 <wcrtomb@plt+0x3008>
  405f20:	add	x24, x24, #0x1
  405f24:	ldrb	w25, [x19, #176]
  405f28:	cmp	x28, x20
  405f2c:	ldr	x27, [x19, #160]
  405f30:	b.cc	405efc <wcrtomb@plt+0x35dc>  // b.lo, b.ul, b.last
  405f34:	sub	x27, x27, x24
  405f38:	mov	x26, x28
  405f3c:	ldp	x1, x2, [x19, #216]
  405f40:	mov	x0, #0x0                   	// #0
  405f44:	sub	x3, x2, x26
  405f48:	sub	x3, x1, x3
  405f4c:	str	x3, [x19, #208]
  405f50:	cbnz	w25, 405f60 <wcrtomb@plt+0x3640>
  405f54:	ldr	x0, [x19, #200]
  405f58:	cmp	x0, #0x0
  405f5c:	csel	x0, x0, xzr, ge  // ge = tcont
  405f60:	stp	x27, x0, [x19, #160]
  405f64:	mov	w0, #0x1                   	// #1
  405f68:	strb	w0, [x19, #192]
  405f6c:	cbz	x27, 406030 <wcrtomb@plt+0x3710>
  405f70:	ldrb	w0, [x19, #232]
  405f74:	cbnz	w0, 406030 <wcrtomb@plt+0x3710>
  405f78:	cmp	x23, x21
  405f7c:	b.hi	405dd0 <wcrtomb@plt+0x34b0>  // b.pmore
  405f80:	ldr	x1, [sp, #120]
  405f84:	ldr	x0, [x19, #160]
  405f88:	ldp	x19, x20, [sp, #16]
  405f8c:	sub	x0, x1, x0
  405f90:	ldp	x21, x22, [sp, #32]
  405f94:	ldp	x23, x24, [sp, #48]
  405f98:	ldp	x25, x26, [sp, #64]
  405f9c:	ldp	x27, x28, [sp, #80]
  405fa0:	ldp	x29, x30, [sp], #144
  405fa4:	ret
  405fa8:	cmp	x26, x28
  405fac:	ldrb	w0, [x19, #192]
  405fb0:	cset	w1, ne  // ne = any
  405fb4:	tst	w1, w0
  405fb8:	b.eq	405fe8 <wcrtomb@plt+0x36c8>  // b.none
  405fbc:	b	4061d8 <wcrtomb@plt+0x38b8>
  405fc0:	mov	w1, w22
  405fc4:	sub	x2, x27, x26
  405fc8:	mov	x0, x26
  405fcc:	bl	402770 <memchr@plt>
  405fd0:	mov	x1, x0
  405fd4:	mov	x0, x26
  405fd8:	add	x26, x1, #0x1
  405fdc:	mov	w2, #0x2d                  	// #45
  405fe0:	mov	x1, x26
  405fe4:	bl	405928 <wcrtomb@plt+0x3008>
  405fe8:	cmp	x26, x27
  405fec:	b.cc	405fc0 <wcrtomb@plt+0x36a0>  // b.lo, b.ul, b.last
  405ff0:	ldrb	w0, [x19, #123]
  405ff4:	ldrb	w25, [x19, #176]
  405ff8:	cbz	w0, 40605c <wcrtomb@plt+0x373c>
  405ffc:	ldr	x27, [x19, #160]
  406000:	b	405ec4 <wcrtomb@plt+0x35a4>
  406004:	ldr	x27, [x19, #160]
  406008:	sub	x27, x27, #0x1
  40600c:	ldp	x1, x2, [x19, #216]
  406010:	mov	x0, #0x0                   	// #0
  406014:	stp	x27, x0, [x19, #160]
  406018:	mov	w0, #0x1                   	// #1
  40601c:	strb	w0, [x19, #192]
  406020:	sub	x20, x2, x20
  406024:	sub	x20, x1, x20
  406028:	str	x20, [x19, #208]
  40602c:	cbnz	x27, 405f70 <wcrtomb@plt+0x3650>
  406030:	ldrb	w0, [x19, #233]
  406034:	cbnz	w0, 40625c <wcrtomb@plt+0x393c>
  406038:	ldr	x0, [sp, #120]
  40603c:	ldp	x23, x24, [sp, #48]
  406040:	sub	x0, x0, x27
  406044:	ldp	x25, x26, [sp, #64]
  406048:	ldp	x27, x28, [sp, #80]
  40604c:	ldp	x19, x20, [sp, #16]
  406050:	ldp	x21, x22, [sp, #32]
  406054:	ldp	x29, x30, [sp], #144
  406058:	ret
  40605c:	cbnz	w25, 4061a4 <wcrtomb@plt+0x3884>
  406060:	mov	x0, x27
  406064:	mov	x1, x20
  406068:	mov	w2, #0x3a                  	// #58
  40606c:	bl	405928 <wcrtomb@plt+0x3008>
  406070:	ldr	x5, [x19, #160]
  406074:	mov	x26, x20
  406078:	ldrb	w25, [x19, #176]
  40607c:	sub	x27, x5, #0x1
  406080:	b	405f3c <wcrtomb@plt+0x361c>
  406084:	cmp	x27, x21
  406088:	b.hi	406250 <wcrtomb@plt+0x3930>  // b.pmore
  40608c:	mov	x21, x20
  406090:	b	405f78 <wcrtomb@plt+0x3658>
  406094:	cbnz	x28, 4060d8 <wcrtomb@plt+0x37b8>
  406098:	b	4061c4 <wcrtomb@plt+0x38a4>
  40609c:	ldr	x0, [sp, #104]
  4060a0:	sub	x2, x27, x28
  4060a4:	ldrb	w1, [x0]
  4060a8:	mov	x0, x28
  4060ac:	bl	402770 <memchr@plt>
  4060b0:	add	x1, x0, #0x1
  4060b4:	mov	w2, #0x2d                  	// #45
  4060b8:	mov	x0, x28
  4060bc:	bl	405928 <wcrtomb@plt+0x3008>
  4060c0:	ldr	x0, [x19, #168]
  4060c4:	sub	x0, x0, #0x1
  4060c8:	str	x0, [x19, #168]
  4060cc:	cmp	x0, #0x0
  4060d0:	b.le	4060e0 <wcrtomb@plt+0x37c0>
  4060d4:	ldr	x28, [x19, #152]
  4060d8:	cmp	x27, x28
  4060dc:	b.hi	40609c <wcrtomb@plt+0x377c>  // b.pmore
  4060e0:	ldrb	w0, [x19, #176]
  4060e4:	cbnz	w0, 40623c <wcrtomb@plt+0x391c>
  4060e8:	ldr	x28, [x19, #152]
  4060ec:	mov	x5, x28
  4060f0:	cbnz	x28, 405e38 <wcrtomb@plt+0x3518>
  4060f4:	ldr	x2, [x19, #184]
  4060f8:	ldr	x5, [x19, #112]
  4060fc:	cmp	x2, #0x0
  406100:	b.gt	405e44 <wcrtomb@plt+0x3524>
  406104:	b.eq	406110 <wcrtomb@plt+0x37f0>  // b.none
  406108:	ldr	x0, [x19, #200]
  40610c:	tbnz	x0, #63, 4061b0 <wcrtomb@plt+0x3890>
  406110:	cmp	x27, x28
  406114:	ldrb	w0, [x19, #192]
  406118:	cset	w1, ne  // ne = any
  40611c:	tst	w1, w0
  406120:	b.eq	4061b0 <wcrtomb@plt+0x3890>  // b.none
  406124:	ldr	x0, [sp, #112]
  406128:	mov	x26, x27
  40612c:	ldr	x0, [x0, #80]
  406130:	cbz	x0, 405ff0 <wcrtomb@plt+0x36d0>
  406134:	ldr	w1, [x19]
  406138:	cbz	w1, 40614c <wcrtomb@plt+0x382c>
  40613c:	ldr	x1, [sp, #112]
  406140:	ldr	x1, [x1, #40]
  406144:	ldrb	w2, [x1]
  406148:	cbnz	w2, 406220 <wcrtomb@plt+0x3900>
  40614c:	adrp	x28, 449000 <_obstack_memory_used@@Base+0x2a510>
  406150:	ldr	x1, [x28, #1112]
  406154:	bl	402800 <fputs_unlocked@plt>
  406158:	tbz	w0, #31, 406168 <wcrtomb@plt+0x3848>
  40615c:	bl	402890 <__errno_location@plt>
  406160:	ldr	w0, [x0]
  406164:	str	w0, [x19, #4]
  406168:	ldr	w0, [x19]
  40616c:	cbz	w0, 406180 <wcrtomb@plt+0x3860>
  406170:	ldr	x0, [sp, #112]
  406174:	ldr	x0, [x0, #40]
  406178:	ldrb	w0, [x0]
  40617c:	cbnz	w0, 4061e8 <wcrtomb@plt+0x38c8>
  406180:	ldr	x0, [x28, #1112]
  406184:	ldp	x1, x2, [x0, #40]
  406188:	cmp	x1, x2
  40618c:	b.cs	406204 <wcrtomb@plt+0x38e4>  // b.hs, b.nlast
  406190:	add	x2, x1, #0x1
  406194:	str	x2, [x0, #40]
  406198:	mov	w0, #0xa                   	// #10
  40619c:	strb	w0, [x1]
  4061a0:	b	405fe8 <wcrtomb@plt+0x36c8>
  4061a4:	ldr	x5, [x19, #160]
  4061a8:	sub	x27, x5, #0x1
  4061ac:	b	40600c <wcrtomb@plt+0x36ec>
  4061b0:	mov	x26, x27
  4061b4:	b	405ff0 <wcrtomb@plt+0x36d0>
  4061b8:	mov	x27, x21
  4061bc:	mov	x21, x0
  4061c0:	b	405e20 <wcrtomb@plt+0x3500>
  4061c4:	ldr	x28, [x19, #112]
  4061c8:	str	x28, [x19, #152]
  4061cc:	b	4060d8 <wcrtomb@plt+0x37b8>
  4061d0:	ldr	x27, [x19, #160]
  4061d4:	b	406038 <wcrtomb@plt+0x3718>
  4061d8:	ldr	x0, [sp, #112]
  4061dc:	ldr	x0, [x0, #80]
  4061e0:	cbz	x0, 405fe8 <wcrtomb@plt+0x36c8>
  4061e4:	b	406134 <wcrtomb@plt+0x3814>
  4061e8:	ldr	x0, [sp, #112]
  4061ec:	ldr	x0, [x0, #24]
  4061f0:	bl	41bfb0 <wcrtomb@plt+0x19690>
  4061f4:	ldr	x0, [x28, #1112]
  4061f8:	ldp	x1, x2, [x0, #40]
  4061fc:	cmp	x1, x2
  406200:	b.cc	406190 <wcrtomb@plt+0x3870>  // b.lo, b.ul, b.last
  406204:	mov	w1, #0xa                   	// #10
  406208:	bl	402620 <__overflow@plt>
  40620c:	tbz	w0, #31, 405fe8 <wcrtomb@plt+0x36c8>
  406210:	bl	402890 <__errno_location@plt>
  406214:	ldr	w0, [x0]
  406218:	str	w0, [x19, #4]
  40621c:	b	405fe8 <wcrtomb@plt+0x36c8>
  406220:	ldr	x24, [sp, #112]
  406224:	ldr	x0, [x24, #16]
  406228:	bl	41bfa8 <wcrtomb@plt+0x19688>
  40622c:	ldr	x0, [x24, #80]
  406230:	b	40614c <wcrtomb@plt+0x382c>
  406234:	mov	x0, #0x0                   	// #0
  406238:	b	40604c <wcrtomb@plt+0x372c>
  40623c:	ldrb	w25, [x19, #123]
  406240:	mov	x26, x27
  406244:	ldr	x27, [x19, #160]
  406248:	cbnz	w25, 405ec4 <wcrtomb@plt+0x35a4>
  40624c:	b	406008 <wcrtomb@plt+0x36e8>
  406250:	mov	x0, x20
  406254:	mov	x20, x27
  406258:	b	405ea8 <wcrtomb@plt+0x3588>
  40625c:	ldrb	w0, [x19, #234]
  406260:	cbz	w0, 406270 <wcrtomb@plt+0x3950>
  406264:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  406268:	ldr	w0, [x0, #976]
  40626c:	bl	402320 <exit@plt>
  406270:	mov	w0, #0x0                   	// #0
  406274:	bl	402320 <exit@plt>
  406278:	stp	x29, x30, [sp, #-112]!
  40627c:	mov	x29, sp
  406280:	stp	x19, x20, [sp, #16]
  406284:	adrp	x19, 449000 <_obstack_memory_used@@Base+0x2a510>
  406288:	add	x19, x19, #0x480
  40628c:	stp	x23, x24, [sp, #48]
  406290:	ldp	x24, x2, [x19, #240]
  406294:	stp	x25, x26, [sp, #64]
  406298:	ldr	x26, [x19, #224]
  40629c:	stp	x21, x22, [sp, #32]
  4062a0:	mov	x21, x1
  4062a4:	sub	x3, x2, #0x8
  4062a8:	stp	x27, x28, [sp, #80]
  4062ac:	add	x27, x24, x3
  4062b0:	ldr	x23, [x19, #256]
  4062b4:	sub	x20, x27, x26
  4062b8:	sub	x1, x26, x0
  4062bc:	cmp	x20, x23
  4062c0:	b.cc	40642c <wcrtomb@plt+0x3b0c>  // b.lo, b.ul, b.last
  4062c4:	str	x1, [x19, #112]
  4062c8:	udiv	x0, x20, x23
  4062cc:	ldr	w25, [x19, #264]
  4062d0:	mov	w22, #0x1                   	// #1
  4062d4:	msub	x23, x0, x23, x20
  4062d8:	sub	x20, x20, x23
  4062dc:	nop
  4062e0:	mov	w0, w25
  4062e4:	mov	x2, x20
  4062e8:	mov	x1, x26
  4062ec:	bl	41aad8 <wcrtomb@plt+0x181b8>
  4062f0:	cmn	x0, #0x1
  4062f4:	b.eq	4063d0 <wcrtomb@plt+0x3ab0>  // b.none
  4062f8:	ldr	x24, [x19, #216]
  4062fc:	cmp	x0, #0x0
  406300:	ldrb	w1, [x19, #268]
  406304:	cset	w2, eq  // eq = none
  406308:	add	x24, x0, x24
  40630c:	str	x24, [x19, #216]
  406310:	eor	w1, w1, #0x1
  406314:	add	x4, x26, x0
  406318:	orr	w2, w2, w1
  40631c:	ands	w2, w2, #0xff
  406320:	b.ne	40634c <wcrtomb@plt+0x3a2c>  // b.any
  406324:	cmp	x26, x4
  406328:	b.cs	406374 <wcrtomb@plt+0x3a54>  // b.hs, b.nlast
  40632c:	mov	x2, x26
  406330:	b	406340 <wcrtomb@plt+0x3a20>
  406334:	add	x2, x2, #0x1
  406338:	cmp	x2, x4
  40633c:	b.eq	406374 <wcrtomb@plt+0x3a54>  // b.none
  406340:	ldrb	w3, [x2]
  406344:	cbz	w3, 406334 <wcrtomb@plt+0x3a14>
  406348:	mov	w2, #0x1                   	// #1
  40634c:	str	xzr, [x4]
  406350:	mov	w0, w2
  406354:	str	x4, [x19, #224]
  406358:	ldp	x19, x20, [sp, #16]
  40635c:	ldp	x21, x22, [sp, #32]
  406360:	ldp	x23, x24, [sp, #48]
  406364:	ldp	x25, x26, [sp, #64]
  406368:	ldp	x27, x28, [sp, #80]
  40636c:	ldp	x29, x30, [sp], #112
  406370:	ret
  406374:	ldr	x1, [x19, #88]
  406378:	adds	x23, x1, x0
  40637c:	b.cs	406580 <wcrtomb@plt+0x3c60>  // b.hs, b.nlast
  406380:	ldrb	w0, [x19, #269]
  406384:	str	x23, [x19, #88]
  406388:	ldr	w25, [x19, #264]
  40638c:	cbnz	w0, 4062e0 <wcrtomb@plt+0x39c0>
  406390:	mov	x1, x24
  406394:	mov	w0, w25
  406398:	mov	w2, #0x3                   	// #3
  40639c:	bl	4023a0 <lseek@plt>
  4063a0:	tbnz	x0, #63, 4063dc <wcrtomb@plt+0x3abc>
  4063a4:	sub	x24, x0, x24
  4063a8:	adds	x24, x24, x23
  4063ac:	b.cs	406580 <wcrtomb@plt+0x3c60>  // b.hs, b.nlast
  4063b0:	mov	x2, x20
  4063b4:	mov	x1, x26
  4063b8:	str	x24, [x19, #88]
  4063bc:	str	x0, [x19, #216]
  4063c0:	mov	w0, w25
  4063c4:	bl	41aad8 <wcrtomb@plt+0x181b8>
  4063c8:	cmn	x0, #0x1
  4063cc:	b.ne	4062f8 <wcrtomb@plt+0x39d8>  // b.any
  4063d0:	mov	x4, x26
  4063d4:	mov	w2, #0x0                   	// #0
  4063d8:	b	40634c <wcrtomb@plt+0x3a2c>
  4063dc:	bl	402890 <__errno_location@plt>
  4063e0:	ldr	w0, [x0]
  4063e4:	cmp	w0, #0x6
  4063e8:	b.eq	4063f4 <wcrtomb@plt+0x3ad4>  // b.none
  4063ec:	strb	w22, [x19, #269]
  4063f0:	b	4062e0 <wcrtomb@plt+0x39c0>
  4063f4:	ldr	w0, [x21, #16]
  4063f8:	and	w0, w0, #0xf000
  4063fc:	cmp	w0, #0x8, lsl #12
  406400:	b.ne	4063ec <wcrtomb@plt+0x3acc>  // b.any
  406404:	ldr	x0, [x21, #48]
  406408:	cmp	x24, x0
  40640c:	b.ge	4063ec <wcrtomb@plt+0x3acc>  // b.tcont
  406410:	mov	w0, w25
  406414:	mov	w2, #0x2                   	// #2
  406418:	mov	x1, #0x0                   	// #0
  40641c:	bl	4023a0 <lseek@plt>
  406420:	tbz	x0, #63, 4063a4 <wcrtomb@plt+0x3a84>
  406424:	strb	w22, [x19, #269]
  406428:	b	4062e0 <wcrtomb@plt+0x39c0>
  40642c:	sub	x3, x3, x23
  406430:	add	x5, x23, x0
  406434:	mov	x22, x0
  406438:	add	x28, x0, #0x1
  40643c:	neg	x25, x0
  406440:	cmp	x5, x3
  406444:	b.ls	406474 <wcrtomb@plt+0x3b54>  // b.plast
  406448:	mov	x4, #0xfffffffffffffff7    	// #-9
  40644c:	sub	x4, x4, x23
  406450:	cmp	x3, x4, lsr #1
  406454:	lsr	x4, x4, #1
  406458:	b.ls	406468 <wcrtomb@plt+0x3b48>  // b.plast
  40645c:	b	4065a4 <wcrtomb@plt+0x3c84>
  406460:	cmp	x4, x3
  406464:	b.cc	4065a4 <wcrtomb@plt+0x3c84>  // b.lo, b.ul, b.last
  406468:	lsl	x3, x3, #1
  40646c:	cmp	x5, x3
  406470:	b.hi	406460 <wcrtomb@plt+0x3b40>  // b.pmore
  406474:	ldr	w0, [x21, #16]
  406478:	and	w0, w0, #0xf000
  40647c:	cmp	w0, #0x8, lsl #12
  406480:	b.eq	406558 <wcrtomb@plt+0x3c38>  // b.none
  406484:	add	x0, x23, #0x8
  406488:	add	x0, x0, x3
  40648c:	cmp	x2, x0
  406490:	b.cc	4064d0 <wcrtomb@plt+0x3bb0>  // b.lo, b.ul, b.last
  406494:	add	x26, x24, x28
  406498:	mov	x20, x24
  40649c:	udiv	x0, x26, x23
  4064a0:	msub	x0, x0, x23, x26
  4064a4:	cbnz	x0, 406510 <wcrtomb@plt+0x3bf0>
  4064a8:	add	x24, x24, #0x1
  4064ac:	mov	x2, x22
  4064b0:	mov	x0, x24
  4064b4:	str	x24, [x19, #112]
  4064b8:	bl	4022c0 <memmove@plt>
  4064bc:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4064c0:	ldrb	w0, [x0, #2264]
  4064c4:	sturb	w0, [x24, #-1]
  4064c8:	sub	x20, x27, x26
  4064cc:	b	4062c8 <wcrtomb@plt+0x39a8>
  4064d0:	str	x1, [sp, #104]
  4064d4:	str	x0, [x19, #248]
  4064d8:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4064dc:	ldr	x23, [x19, #256]
  4064e0:	add	x26, x0, x28
  4064e4:	mov	x2, x0
  4064e8:	ldp	x20, x3, [x19, #240]
  4064ec:	udiv	x0, x26, x23
  4064f0:	ldr	x1, [sp, #104]
  4064f4:	msub	x0, x0, x23, x26
  4064f8:	sub	x1, x1, x24
  4064fc:	sub	x3, x3, #0x8
  406500:	add	x1, x20, x1
  406504:	mov	x24, x2
  406508:	add	x27, x2, x3
  40650c:	cbz	x0, 40651c <wcrtomb@plt+0x3bfc>
  406510:	sub	x26, x23, x0
  406514:	add	x26, x26, x28
  406518:	add	x26, x24, x26
  40651c:	add	x25, x26, x25
  406520:	mov	x2, x22
  406524:	mov	x0, x25
  406528:	str	x25, [x19, #112]
  40652c:	bl	4022c0 <memmove@plt>
  406530:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  406534:	cmp	x20, x24
  406538:	ldrb	w0, [x0, #2264]
  40653c:	sturb	w0, [x25, #-1]
  406540:	b.eq	4064c8 <wcrtomb@plt+0x3ba8>  // b.none
  406544:	mov	x0, x20
  406548:	sub	x20, x27, x26
  40654c:	bl	4026b0 <free@plt>
  406550:	str	x24, [x19, #240]
  406554:	b	4062c8 <wcrtomb@plt+0x39a8>
  406558:	ldr	x0, [x21, #48]
  40655c:	ldr	x4, [x19, #216]
  406560:	subs	x0, x0, x4
  406564:	add	x4, x0, x22
  406568:	ccmp	x0, x4, #0x0, pl  // pl = nfrst
  40656c:	b.gt	406484 <wcrtomb@plt+0x3b64>
  406570:	cmp	x4, x5
  406574:	ccmp	x4, x3, #0x2, cs  // cs = hs, nlast
  406578:	csel	x3, x3, x4, cs  // cs = hs, nlast
  40657c:	b	406484 <wcrtomb@plt+0x3b64>
  406580:	mov	w2, #0x5                   	// #5
  406584:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  406588:	mov	x0, #0x0                   	// #0
  40658c:	add	x1, x1, #0x388
  406590:	bl	4027f0 <dcgettext@plt>
  406594:	mov	x2, x0
  406598:	mov	w1, #0x0                   	// #0
  40659c:	mov	w0, #0x2                   	// #2
  4065a0:	bl	402330 <error@plt>
  4065a4:	bl	41b778 <wcrtomb@plt+0x18e58>
  4065a8:	stp	x29, x30, [sp, #-432]!
  4065ac:	mov	x29, sp
  4065b0:	add	x2, sp, #0xb0
  4065b4:	stp	x19, x20, [sp, #16]
  4065b8:	mov	w19, w0
  4065bc:	stp	x21, x22, [sp, #32]
  4065c0:	and	w22, w1, #0xff
  4065c4:	mov	w1, w0
  4065c8:	mov	w0, #0x0                   	// #0
  4065cc:	stp	x27, x28, [sp, #80]
  4065d0:	bl	4027d0 <__fxstat@plt>
  4065d4:	cbnz	w0, 406cd0 <wcrtomb@plt+0x43b0>
  4065d8:	stp	x23, x24, [sp, #48]
  4065dc:	adrp	x6, 449000 <_obstack_memory_used@@Base+0x2a510>
  4065e0:	mov	w21, w0
  4065e4:	add	x28, x6, #0x480
  4065e8:	cbnz	w19, 406a34 <wcrtomb@plt+0x4114>
  4065ec:	ldr	w0, [x28, #64]
  4065f0:	tbnz	w0, #31, 4071a8 <wcrtomb@plt+0x4888>
  4065f4:	ldrb	w0, [x28, #176]
  4065f8:	str	w0, [sp, #136]
  4065fc:	cbnz	w0, 406608 <wcrtomb@plt+0x3ce8>
  406600:	ldr	w0, [x28, #316]
  406604:	cbz	w0, 406cf0 <wcrtomb@plt+0x43d0>
  406608:	ldr	x1, [x28, #240]
  40660c:	adrp	x2, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  406610:	ldr	x4, [x28, #256]
  406614:	add	x0, x1, #0x1
  406618:	ldrb	w20, [x2, #2264]
  40661c:	add	x3, x4, #0x1
  406620:	ldrb	w5, [x28, #232]
  406624:	udiv	x2, x0, x4
  406628:	str	w5, [sp, #140]
  40662c:	str	w19, [x28, #264]
  406630:	msub	x2, x2, x4, x0
  406634:	sub	x3, x3, x2
  406638:	cmp	x2, #0x0
  40663c:	add	x1, x1, x3
  406640:	csel	x0, x0, x1, eq  // eq = none
  406644:	str	x0, [x28, #112]
  406648:	str	x0, [x28, #224]
  40664c:	sturb	w20, [x0, #-1]
  406650:	cbz	w19, 406e40 <wcrtomb@plt+0x4520>
  406654:	str	xzr, [x28, #216]
  406658:	strb	wzr, [x28, #269]
  40665c:	strb	wzr, [x28, #456]
  406660:	ldrb	w0, [x28, #458]
  406664:	cmp	w20, #0x0
  406668:	cset	w2, eq  // eq = none
  40666c:	add	x1, sp, #0xb0
  406670:	ldr	x3, [x28, #320]
  406674:	and	w2, w2, w0
  406678:	mov	x0, #0x0                   	// #0
  40667c:	str	xzr, [x28, #88]
  406680:	str	xzr, [x28, #104]
  406684:	strb	wzr, [x28, #121]
  406688:	stp	xzr, x3, [x28, #152]
  40668c:	str	xzr, [x28, #168]
  406690:	str	xzr, [x28, #208]
  406694:	strb	w2, [x28, #268]
  406698:	bl	406278 <wcrtomb@plt+0x3958>
  40669c:	ands	w0, w0, #0xff
  4066a0:	str	w0, [sp, #132]
  4066a4:	b.eq	4071c0 <wcrtomb@plt+0x48a0>  // b.none
  4066a8:	ldrb	w0, [x28, #120]
  4066ac:	stp	x25, x26, [sp, #64]
  4066b0:	str	wzr, [x28, #96]
  4066b4:	cbnz	w0, 406d3c <wcrtomb@plt+0x441c>
  4066b8:	cmp	w20, #0x0
  4066bc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x10510>
  4066c0:	cset	w1, ne  // ne = any
  4066c4:	add	x0, x0, #0x270
  4066c8:	str	w1, [sp, #128]
  4066cc:	mov	x22, #0xffffffffffffffff    	// #-1
  4066d0:	ldr	w1, [sp, #132]
  4066d4:	mov	w23, #0x0                   	// #0
  4066d8:	mov	x25, #0x0                   	// #0
  4066dc:	mov	x21, #0x0                   	// #0
  4066e0:	str	xzr, [sp, #104]
  4066e4:	str	w1, [sp, #124]
  4066e8:	str	x0, [sp, #144]
  4066ec:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x10510>
  4066f0:	add	x0, x0, #0x3d0
  4066f4:	str	x0, [sp, #152]
  4066f8:	ldr	w0, [sp, #128]
  4066fc:	cmp	x22, #0x0
  406700:	ldr	x27, [x28, #112]
  406704:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  406708:	ldr	x24, [x28, #224]
  40670c:	b.eq	406770 <wcrtomb@plt+0x3e50>  // b.none
  406710:	ldr	w26, [x28, #48]
  406714:	cmp	w26, #0x1
  406718:	b.eq	406770 <wcrtomb@plt+0x3e50>  // b.none
  40671c:	sub	x1, x24, x27
  406720:	strb	wzr, [x24]
  406724:	mov	x0, x27
  406728:	str	x1, [sp, #112]
  40672c:	bl	402300 <strlen@plt>
  406730:	ldr	x1, [sp, #112]
  406734:	cmp	x1, x0
  406738:	b.eq	406c38 <wcrtomb@plt+0x4318>  // b.none
  40673c:	ldrb	w1, [x28, #457]
  406740:	cmp	w26, #0x2
  406744:	b.eq	4074c0 <wcrtomb@plt+0x4ba0>  // b.none
  406748:	cbnz	w1, 406758 <wcrtomb@plt+0x3e38>
  40674c:	mov	w0, #0x1                   	// #1
  406750:	strb	w0, [x28, #176]
  406754:	strb	w0, [x28, #232]
  406758:	ldr	x27, [x28, #112]
  40675c:	mov	x22, x21
  406760:	ldr	x24, [x28, #224]
  406764:	mov	w23, w20
  406768:	ldrb	w0, [x28, #458]
  40676c:	strb	w0, [x28, #268]
  406770:	ldr	x0, [x28, #152]
  406774:	str	x27, [x28, #80]
  406778:	cbz	x0, 406780 <wcrtomb@plt+0x3e60>
  40677c:	str	x27, [x28, #152]
  406780:	add	x26, x27, x25
  406784:	cmp	x26, x24
  406788:	b.eq	407030 <wcrtomb@plt+0x4710>  // b.none
  40678c:	cbz	w23, 4067d8 <wcrtomb@plt+0x3eb8>
  406790:	strb	wzr, [x24]
  406794:	mov	x25, x26
  406798:	mov	x0, x25
  40679c:	bl	402300 <strlen@plt>
  4067a0:	strb	w23, [x24]
  4067a4:	add	x25, x25, x0
  4067a8:	cmp	x25, x24
  4067ac:	b.eq	4067d8 <wcrtomb@plt+0x3eb8>  // b.none
  4067b0:	strb	w23, [x25], #1
  4067b4:	ldrb	w0, [x25]
  4067b8:	cbz	w0, 4067b0 <wcrtomb@plt+0x3e90>
  4067bc:	strb	wzr, [x24]
  4067c0:	mov	x0, x25
  4067c4:	bl	402300 <strlen@plt>
  4067c8:	strb	w23, [x24]
  4067cc:	add	x25, x25, x0
  4067d0:	cmp	x25, x24
  4067d4:	b.ne	4067b0 <wcrtomb@plt+0x3e90>  // b.any
  4067d8:	ldurb	w25, [x26, #-1]
  4067dc:	sub	x2, x24, x26
  4067e0:	sturb	w20, [x26, #-1]
  4067e4:	add	x2, x2, #0x1
  4067e8:	mov	w1, w20
  4067ec:	sub	x0, x26, #0x1
  4067f0:	bl	4026f0 <memrchr@plt>
  4067f4:	add	x27, x0, #0x1
  4067f8:	ldr	x0, [sp, #104]
  4067fc:	sturb	w25, [x26, #-1]
  406800:	cmp	x26, x27
  406804:	sub	x0, x26, x0
  406808:	b.eq	406b9c <wcrtomb@plt+0x427c>  // b.none
  40680c:	sub	x1, x24, x27
  406810:	str	x1, [sp, #104]
  406814:	cmp	x27, x0
  406818:	b.ls	4068ac <wcrtomb@plt+0x3f8c>  // b.plast
  40681c:	ldr	x1, [x28, #160]
  406820:	cbnz	x1, 406c10 <wcrtomb@plt+0x42f0>
  406824:	ldr	x1, [x28, #168]
  406828:	cbz	x1, 406c30 <wcrtomb@plt+0x4310>
  40682c:	ldr	x25, [x28, #152]
  406830:	cbz	x25, 406cc4 <wcrtomb@plt+0x43a4>
  406834:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  406838:	cmp	x1, #0x0
  40683c:	add	x26, x0, #0x8d8
  406840:	b.gt	406880 <wcrtomb@plt+0x3f60>
  406844:	b	406894 <wcrtomb@plt+0x3f74>
  406848:	ldrb	w1, [x26]
  40684c:	sub	x2, x27, x25
  406850:	mov	x0, x25
  406854:	bl	402770 <memchr@plt>
  406858:	add	x1, x0, #0x1
  40685c:	mov	w2, #0x2d                  	// #45
  406860:	mov	x0, x25
  406864:	bl	405928 <wcrtomb@plt+0x3008>
  406868:	ldr	x1, [x28, #168]
  40686c:	sub	x1, x1, #0x1
  406870:	str	x1, [x28, #168]
  406874:	cmp	x1, #0x0
  406878:	b.le	406888 <wcrtomb@plt+0x3f68>
  40687c:	ldr	x25, [x28, #152]
  406880:	cmp	x27, x25
  406884:	b.hi	406848 <wcrtomb@plt+0x3f28>  // b.pmore
  406888:	ldr	x0, [x28, #160]
  40688c:	orr	x1, x1, x0
  406890:	cbz	x1, 406c30 <wcrtomb@plt+0x4310>
  406894:	ldrb	w0, [x28, #232]
  406898:	cbz	w0, 4068ac <wcrtomb@plt+0x3f8c>
  40689c:	cmp	x22, #0x0
  4068a0:	csel	x0, x22, xzr, ge  // ge = tcont
  4068a4:	cmp	x0, x21
  4068a8:	b.lt	406c30 <wcrtomb@plt+0x4310>  // b.tstop
  4068ac:	ldr	x2, [x28, #184]
  4068b0:	ldr	x1, [x28, #152]
  4068b4:	cmp	x2, #0x0
  4068b8:	b.le	406bb8 <wcrtomb@plt+0x4298>
  4068bc:	ldr	x5, [x28, #112]
  4068c0:	mov	x0, #0x0                   	// #0
  4068c4:	nop
  4068c8:	cmp	x5, x27
  4068cc:	b.cs	4068f8 <wcrtomb@plt+0x3fd8>  // b.hs, b.nlast
  4068d0:	cmp	x27, x1
  4068d4:	b.eq	406b94 <wcrtomb@plt+0x4274>  // b.none
  4068d8:	add	x0, x0, #0x1
  4068dc:	nop
  4068e0:	ldurb	w7, [x27, #-2]
  4068e4:	sub	x27, x27, #0x1
  4068e8:	cmp	w7, w20
  4068ec:	b.ne	4068e0 <wcrtomb@plt+0x3fc0>  // b.any
  4068f0:	cmp	x2, x0
  4068f4:	b.ne	4068c8 <wcrtomb@plt+0x3fa8>  // b.any
  4068f8:	sub	x25, x24, x27
  4068fc:	cmp	x27, x1
  406900:	b.eq	406908 <wcrtomb@plt+0x3fe8>  // b.none
  406904:	str	xzr, [x28, #152]
  406908:	ldrb	w0, [x28, #100]
  40690c:	cbz	w0, 406930 <wcrtomb@plt+0x4010>
  406910:	ldp	x1, x2, [x28, #104]
  406914:	ldr	x0, [x28, #224]
  406918:	sub	x0, x0, x2
  40691c:	add	x0, x0, x1
  406920:	sub	x0, x0, x25
  406924:	cmp	x1, x0
  406928:	b.hi	4072b0 <wcrtomb@plt+0x4990>  // b.pmore
  40692c:	str	x0, [x28, #104]
  406930:	ldrb	w0, [x28, #72]
  406934:	cbnz	w0, 406bc0 <wcrtomb@plt+0x42a0>
  406938:	add	x1, sp, #0xb0
  40693c:	mov	x0, x25
  406940:	bl	406278 <wcrtomb@plt+0x3958>
  406944:	str	wzr, [sp, #124]
  406948:	tst	w0, #0xff
  40694c:	b.ne	4066f8 <wcrtomb@plt+0x3dd8>  // b.any
  406950:	ldrb	w0, [x28, #304]
  406954:	cbz	w0, 407478 <wcrtomb@plt+0x4b58>
  406958:	mov	w0, #0x1                   	// #1
  40695c:	str	wzr, [sp, #132]
  406960:	strb	w0, [x28, #234]
  406964:	ldr	w0, [sp, #136]
  406968:	cmp	x21, #0x0
  40696c:	ldrb	w1, [sp, #140]
  406970:	cset	w23, ne  // ne = any
  406974:	strb	w0, [x28, #176]
  406978:	strb	w1, [x28, #232]
  40697c:	cbnz	w0, 4069c4 <wcrtomb@plt+0x40a4>
  406980:	ldrb	w0, [x28, #121]
  406984:	cbnz	w0, 406994 <wcrtomb@plt+0x4074>
  406988:	cmp	x22, #0x0
  40698c:	ccmp	x22, x21, #0x0, ge  // ge = tcont
  406990:	b.ge	4069c4 <wcrtomb@plt+0x40a4>  // b.tcont
  406994:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  406998:	mov	w2, #0x5                   	// #5
  40699c:	add	x1, x1, #0x458
  4069a0:	mov	x0, #0x0                   	// #0
  4069a4:	bl	4027f0 <dcgettext@plt>
  4069a8:	mov	x20, x0
  4069ac:	ldr	x1, [x28, #40]
  4069b0:	cbz	x1, 4075f0 <wcrtomb@plt+0x4cd0>
  4069b4:	mov	x0, x20
  4069b8:	bl	4052a8 <wcrtomb@plt+0x2988>
  4069bc:	ldrb	w0, [x28, #144]
  4069c0:	cbnz	w0, 407248 <wcrtomb@plt+0x4928>
  4069c4:	ldp	x25, x26, [sp, #64]
  4069c8:	ldrb	w1, [x28, #457]
  4069cc:	cbz	w1, 4069f0 <wcrtomb@plt+0x40d0>
  4069d0:	ldr	w0, [x28, #64]
  4069d4:	cbnz	w0, 407178 <wcrtomb@plt+0x4858>
  4069d8:	mov	x1, x21
  4069dc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x10510>
  4069e0:	add	x0, x0, #0x470
  4069e4:	bl	4052a8 <wcrtomb@plt+0x2988>
  4069e8:	ldrb	w0, [x28, #144]
  4069ec:	cbnz	w0, 407158 <wcrtomb@plt+0x4838>
  4069f0:	ldr	w0, [x28, #316]
  4069f4:	cmp	w0, #0x2
  4069f8:	cset	w1, ne  // ne = any
  4069fc:	eor	w20, w1, w23
  406a00:	cbz	w0, 406da4 <wcrtomb@plt+0x4484>
  406a04:	ldrb	w0, [x28, #459]
  406a08:	cbnz	w0, 406da4 <wcrtomb@plt+0x4484>
  406a0c:	cmp	w1, w23
  406a10:	b.eq	4071ec <wcrtomb@plt+0x48cc>  // b.none
  406a14:	ldp	x23, x24, [sp, #48]
  406a18:	cbnz	w19, 406a84 <wcrtomb@plt+0x4164>
  406a1c:	mov	w0, w20
  406a20:	ldp	x19, x20, [sp, #16]
  406a24:	ldp	x21, x22, [sp, #32]
  406a28:	ldp	x27, x28, [sp, #80]
  406a2c:	ldp	x29, x30, [sp], #432
  406a30:	ret
  406a34:	ldr	w0, [x28, #308]
  406a38:	cmp	w0, #0x2
  406a3c:	b.eq	406ab8 <wcrtomb@plt+0x4198>  // b.none
  406a40:	cmp	w0, #0x0
  406a44:	eor	w0, w22, #0x1
  406a48:	cset	w1, eq  // eq = none
  406a4c:	tst	w1, w0
  406a50:	b.eq	406ae0 <wcrtomb@plt+0x41c0>  // b.none
  406a54:	ldr	w0, [sp, #192]
  406a58:	mov	w1, #0xb000                	// #45056
  406a5c:	mov	w3, #0xc000                	// #49152
  406a60:	mov	w2, #0x1000                	// #4096
  406a64:	and	w1, w0, w1
  406a68:	and	w0, w0, #0xf000
  406a6c:	cmp	w1, #0x2, lsl #12
  406a70:	ccmp	w0, w3, #0x4, ne  // ne = any
  406a74:	ccmp	w0, w2, #0x4, ne  // ne = any
  406a78:	b.ne	4070cc <wcrtomb@plt+0x47ac>  // b.any
  406a7c:	ldp	x23, x24, [sp, #48]
  406a80:	mov	w20, #0x1                   	// #1
  406a84:	mov	w0, w19
  406a88:	bl	402580 <close@plt>
  406a8c:	cbz	w0, 406a1c <wcrtomb@plt+0x40fc>
  406a90:	ldrb	w0, [x28, #304]
  406a94:	cbz	w0, 407450 <wcrtomb@plt+0x4b30>
  406a98:	mov	w0, #0x1                   	// #1
  406a9c:	strb	w0, [x28, #234]
  406aa0:	mov	w0, w20
  406aa4:	ldp	x19, x20, [sp, #16]
  406aa8:	ldp	x21, x22, [sp, #32]
  406aac:	ldp	x27, x28, [sp, #80]
  406ab0:	ldp	x29, x30, [sp], #432
  406ab4:	ret
  406ab8:	ldr	w0, [sp, #192]
  406abc:	mov	w1, #0xb000                	// #45056
  406ac0:	mov	w3, #0xc000                	// #49152
  406ac4:	mov	w2, #0x1000                	// #4096
  406ac8:	and	w1, w0, w1
  406acc:	and	w0, w0, #0xf000
  406ad0:	cmp	w1, #0x2, lsl #12
  406ad4:	ccmp	w0, w3, #0x4, ne  // ne = any
  406ad8:	ccmp	w0, w2, #0x4, ne  // ne = any
  406adc:	b.eq	406a7c <wcrtomb@plt+0x415c>  // b.none
  406ae0:	cbz	w22, 4070cc <wcrtomb@plt+0x47ac>
  406ae4:	ldr	w0, [sp, #192]
  406ae8:	and	w0, w0, #0xf000
  406aec:	cmp	w0, #0x4, lsl #12
  406af0:	b.ne	406d74 <wcrtomb@plt+0x4454>  // b.any
  406af4:	adrp	x23, 449000 <_obstack_memory_used@@Base+0x2a510>
  406af8:	add	x23, x23, #0x360
  406afc:	ldr	w0, [x23, #88]
  406b00:	cmp	w0, #0x4
  406b04:	b.eq	406a7c <wcrtomb@plt+0x415c>  // b.none
  406b08:	ldrb	w0, [x28, #312]
  406b0c:	cbnz	w0, 406b34 <wcrtomb@plt+0x4214>
  406b10:	add	x0, x28, #0x120
  406b14:	ldr	x0, [x0, #8]
  406b18:	cbz	x0, 406b2c <wcrtomb@plt+0x420c>
  406b1c:	ldr	x1, [x28, #40]
  406b20:	bl	415280 <wcrtomb@plt+0x12960>
  406b24:	tst	w0, #0xff
  406b28:	b.ne	406a7c <wcrtomb@plt+0x415c>  // b.any
  406b2c:	adrp	x23, 449000 <_obstack_memory_used@@Base+0x2a510>
  406b30:	add	x23, x23, #0x360
  406b34:	ldr	w0, [x28, #64]
  406b38:	tbnz	w0, #31, 4070dc <wcrtomb@plt+0x47bc>
  406b3c:	ldr	w0, [x23, #88]
  406b40:	cmp	w0, #0x3
  406b44:	b.eq	406e80 <wcrtomb@plt+0x4560>  // b.none
  406b48:	cmp	w0, #0x4
  406b4c:	b.eq	4070b8 <wcrtomb@plt+0x4798>  // b.none
  406b50:	ldr	w0, [x28, #308]
  406b54:	cmp	w0, #0x2
  406b58:	b.eq	406b68 <wcrtomb@plt+0x4248>  // b.none
  406b5c:	cmp	w0, #0x0
  406b60:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  406b64:	b.ne	4065f4 <wcrtomb@plt+0x3cd4>  // b.any
  406b68:	ldr	w0, [sp, #192]
  406b6c:	mov	w1, #0xb000                	// #45056
  406b70:	mov	w3, #0xc000                	// #49152
  406b74:	mov	w2, #0x1000                	// #4096
  406b78:	and	w1, w0, w1
  406b7c:	and	w0, w0, #0xf000
  406b80:	cmp	w1, #0x2, lsl #12
  406b84:	ccmp	w0, w3, #0x4, ne  // ne = any
  406b88:	ccmp	w0, w2, #0x4, ne  // ne = any
  406b8c:	b.eq	406a7c <wcrtomb@plt+0x415c>  // b.none
  406b90:	b	4065f4 <wcrtomb@plt+0x3cd4>
  406b94:	sub	x25, x24, x27
  406b98:	b	406908 <wcrtomb@plt+0x3fe8>
  406b9c:	ldr	x2, [x28, #184]
  406ba0:	sub	x1, x24, x0
  406ba4:	str	x1, [sp, #104]
  406ba8:	mov	x27, x0
  406bac:	cmp	x2, #0x0
  406bb0:	ldr	x1, [x28, #152]
  406bb4:	b.gt	4068bc <wcrtomb@plt+0x3f9c>
  406bb8:	ldr	x25, [sp, #104]
  406bbc:	b	4068fc <wcrtomb@plt+0x3fdc>
  406bc0:	ldp	x0, x26, [x28, #80]
  406bc4:	cmp	x0, x27
  406bc8:	b.cs	406c08 <wcrtomb@plt+0x42e8>  // b.hs, b.nlast
  406bcc:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  406bd0:	mov	x24, #0x0                   	// #0
  406bd4:	ldrb	w1, [x1, #2264]
  406bd8:	b	406bf0 <wcrtomb@plt+0x42d0>
  406bdc:	add	x0, x0, #0x1
  406be0:	ldr	w1, [sp, #112]
  406be4:	add	x24, x24, #0x1
  406be8:	cmp	x0, x27
  406bec:	b.cs	406c00 <wcrtomb@plt+0x42e0>  // b.hs, b.nlast
  406bf0:	sub	x2, x27, x0
  406bf4:	str	w1, [sp, #112]
  406bf8:	bl	402770 <memchr@plt>
  406bfc:	cbnz	x0, 406bdc <wcrtomb@plt+0x42bc>
  406c00:	adds	x26, x24, x26
  406c04:	b.cs	4072b0 <wcrtomb@plt+0x4990>  // b.hs, b.nlast
  406c08:	stp	x27, x26, [x28, #80]
  406c0c:	b	406938 <wcrtomb@plt+0x4018>
  406c10:	mov	x1, x27
  406c14:	bl	405d78 <wcrtomb@plt+0x3458>
  406c18:	ldr	x1, [x28, #168]
  406c1c:	add	x21, x21, x0
  406c20:	cbnz	x1, 40682c <wcrtomb@plt+0x3f0c>
  406c24:	ldr	x0, [x28, #160]
  406c28:	cbnz	x0, 406894 <wcrtomb@plt+0x3f74>
  406c2c:	nop
  406c30:	str	wzr, [sp, #132]
  406c34:	b	406964 <wcrtomb@plt+0x4044>
  406c38:	ldr	w0, [sp, #124]
  406c3c:	cbz	w0, 406770 <wcrtomb@plt+0x3e50>
  406c40:	ldrb	w0, [x28, #456]
  406c44:	cbnz	w0, 406770 <wcrtomb@plt+0x3e50>
  406c48:	ldr	w0, [sp, #192]
  406c4c:	and	w0, w0, #0xf000
  406c50:	cmp	w0, #0x8, lsl #12
  406c54:	b.ne	406770 <wcrtomb@plt+0x3e50>  // b.any
  406c58:	ldr	x0, [sp, #224]
  406c5c:	cmp	x1, x0
  406c60:	b.cs	406770 <wcrtomb@plt+0x3e50>  // b.hs, b.nlast
  406c64:	cbnz	w19, 406c80 <wcrtomb@plt+0x4360>
  406c68:	mov	x1, #0x0                   	// #0
  406c6c:	mov	w2, #0x1                   	// #1
  406c70:	mov	w0, #0x0                   	// #0
  406c74:	bl	4023a0 <lseek@plt>
  406c78:	mov	x1, x0
  406c7c:	tbnz	x0, #63, 406770 <wcrtomb@plt+0x3e50>
  406c80:	mov	w0, w19
  406c84:	mov	w2, #0x4                   	// #4
  406c88:	str	x1, [sp, #112]
  406c8c:	bl	4023a0 <lseek@plt>
  406c90:	mov	x26, x0
  406c94:	tbnz	x0, #63, 406770 <wcrtomb@plt+0x3e50>
  406c98:	ldr	x1, [sp, #112]
  406c9c:	mov	w0, w19
  406ca0:	mov	w2, #0x0                   	// #0
  406ca4:	bl	4023a0 <lseek@plt>
  406ca8:	tbnz	x0, #63, 40788c <wcrtomb@plt+0x4f6c>
  406cac:	ldr	x0, [sp, #224]
  406cb0:	cmp	x26, x0
  406cb4:	b.lt	407884 <wcrtomb@plt+0x4f64>  // b.tstop
  406cb8:	ldr	x27, [x28, #112]
  406cbc:	ldr	x24, [x28, #224]
  406cc0:	b	406770 <wcrtomb@plt+0x3e50>
  406cc4:	ldr	x25, [x28, #112]
  406cc8:	str	x25, [x28, #152]
  406ccc:	b	406834 <wcrtomb@plt+0x3f14>
  406cd0:	adrp	x6, 449000 <_obstack_memory_used@@Base+0x2a510>
  406cd4:	add	x28, x6, #0x480
  406cd8:	ldrb	w0, [x28, #304]
  406cdc:	cbz	w0, 406d7c <wcrtomb@plt+0x445c>
  406ce0:	mov	w0, #0x1                   	// #1
  406ce4:	mov	w20, #0x1                   	// #1
  406ce8:	strb	w0, [x28, #234]
  406cec:	b	406a18 <wcrtomb@plt+0x40f8>
  406cf0:	ldr	x0, [x28, #320]
  406cf4:	cmp	x0, #0x1
  406cf8:	b.le	406608 <wcrtomb@plt+0x3ce8>
  406cfc:	ldr	w0, [sp, #192]
  406d00:	and	w0, w0, #0xf000
  406d04:	cmp	w0, #0x8, lsl #12
  406d08:	b.ne	406608 <wcrtomb@plt+0x3ce8>  // b.any
  406d0c:	ldr	x1, [sp, #184]
  406d10:	ldr	x0, [x28, #336]
  406d14:	cmp	x1, x0
  406d18:	b.ne	406608 <wcrtomb@plt+0x3ce8>  // b.any
  406d1c:	ldr	x1, [sp, #176]
  406d20:	ldr	x0, [x28, #328]
  406d24:	cmp	x1, x0
  406d28:	b.ne	406608 <wcrtomb@plt+0x3ce8>  // b.any
  406d2c:	ldrb	w0, [x28, #304]
  406d30:	cbz	w0, 407904 <wcrtomb@plt+0x4fe4>
  406d34:	ldp	x23, x24, [sp, #48]
  406d38:	b	406ce0 <wcrtomb@plt+0x43c0>
  406d3c:	ldr	w1, [sp, #192]
  406d40:	mov	x0, #0xffffffffffffffff    	// #-1
  406d44:	and	w1, w1, #0xf000
  406d48:	cmp	w1, #0x8, lsl #12
  406d4c:	b.eq	407404 <wcrtomb@plt+0x4ae4>  // b.none
  406d50:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  406d54:	movk	x2, #0xcccd
  406d58:	umulh	x1, x0, x2
  406d5c:	cmp	x0, #0x9
  406d60:	add	w21, w21, #0x1
  406d64:	lsr	x0, x1, #3
  406d68:	b.hi	406d58 <wcrtomb@plt+0x4438>  // b.pmore
  406d6c:	str	w21, [x28, #96]
  406d70:	b	4066b8 <wcrtomb@plt+0x3d98>
  406d74:	add	x0, x28, #0x110
  406d78:	b	406b14 <wcrtomb@plt+0x41f4>
  406d7c:	bl	402890 <__errno_location@plt>
  406d80:	ldr	w20, [x0]
  406d84:	ldr	x3, [x28, #40]
  406d88:	cbz	x3, 407610 <wcrtomb@plt+0x4cf0>
  406d8c:	mov	w1, w20
  406d90:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  406d94:	mov	w0, #0x0                   	// #0
  406d98:	add	x2, x2, #0x270
  406d9c:	bl	402330 <error@plt>
  406da0:	b	406ce0 <wcrtomb@plt+0x43c0>
  406da4:	cbnz	w19, 406e2c <wcrtomb@plt+0x450c>
  406da8:	ldr	x0, [x28, #160]
  406dac:	cbz	x0, 4070f4 <wcrtomb@plt+0x47d4>
  406db0:	ldr	w0, [sp, #132]
  406db4:	cbnz	w0, 406e10 <wcrtomb@plt+0x44f0>
  406db8:	ldrb	w0, [x28, #456]
  406dbc:	cbnz	w0, 406de4 <wcrtomb@plt+0x44c4>
  406dc0:	mov	w2, #0x2                   	// #2
  406dc4:	mov	x1, #0x0                   	// #0
  406dc8:	mov	w0, #0x0                   	// #0
  406dcc:	bl	4023a0 <lseek@plt>
  406dd0:	tbz	x0, #63, 406e10 <wcrtomb@plt+0x44f0>
  406dd4:	bl	402890 <__errno_location@plt>
  406dd8:	ldr	w0, [x0]
  406ddc:	cmp	w0, #0x16
  406de0:	b.eq	406e10 <wcrtomb@plt+0x44f0>  // b.none
  406de4:	ldr	w0, [sp, #192]
  406de8:	and	w0, w0, #0xf000
  406dec:	cmp	w0, #0x1, lsl #12
  406df0:	b.ne	406e00 <wcrtomb@plt+0x44e0>  // b.any
  406df4:	b	407630 <wcrtomb@plt+0x4d10>
  406df8:	cmn	x0, #0x1
  406dfc:	b.eq	40711c <wcrtomb@plt+0x47fc>  // b.none
  406e00:	ldp	x1, x2, [x28, #240]
  406e04:	mov	w0, #0x0                   	// #0
  406e08:	bl	41aad8 <wcrtomb@plt+0x181b8>
  406e0c:	cbnz	x0, 406df8 <wcrtomb@plt+0x44d8>
  406e10:	mov	w0, w20
  406e14:	ldp	x19, x20, [sp, #16]
  406e18:	ldp	x21, x22, [sp, #32]
  406e1c:	ldp	x23, x24, [sp, #48]
  406e20:	ldp	x27, x28, [sp, #80]
  406e24:	ldp	x29, x30, [sp], #432
  406e28:	ret
  406e2c:	mov	w0, w19
  406e30:	ldp	x23, x24, [sp, #48]
  406e34:	bl	402580 <close@plt>
  406e38:	cbz	w0, 406a1c <wcrtomb@plt+0x40fc>
  406e3c:	b	406a90 <wcrtomb@plt+0x4170>
  406e40:	mov	x1, #0x0                   	// #0
  406e44:	mov	w2, #0x1                   	// #1
  406e48:	mov	w0, #0x0                   	// #0
  406e4c:	bl	4023a0 <lseek@plt>
  406e50:	lsr	x1, x0, #63
  406e54:	str	x0, [x28, #216]
  406e58:	and	w1, w1, #0xff
  406e5c:	strb	w1, [x28, #269]
  406e60:	strb	w1, [x28, #456]
  406e64:	tbz	x0, #63, 406660 <wcrtomb@plt+0x3d40>
  406e68:	bl	402890 <__errno_location@plt>
  406e6c:	ldr	w22, [x0]
  406e70:	cmp	w22, #0x1d
  406e74:	b.ne	407134 <wcrtomb@plt+0x4814>  // b.any
  406e78:	str	xzr, [x28, #216]
  406e7c:	b	406660 <wcrtomb@plt+0x3d40>
  406e80:	ldr	w0, [sp, #192]
  406e84:	and	w0, w0, #0xf000
  406e88:	cmp	w0, #0x4, lsl #12
  406e8c:	b.ne	406b50 <wcrtomb@plt+0x4230>  // b.any
  406e90:	ldr	w2, [x23, #92]
  406e94:	eor	w1, w22, #0xfffffffe
  406e98:	mov	w0, w19
  406e9c:	stp	x25, x26, [sp, #64]
  406ea0:	and	w19, w1, w2
  406ea4:	bl	402580 <close@plt>
  406ea8:	cbnz	w0, 407690 <wcrtomb@plt+0x4d70>
  406eac:	ldr	x20, [x28, #40]
  406eb0:	mov	w1, w19
  406eb4:	add	x0, sp, #0xa0
  406eb8:	mov	x2, #0x0                   	// #0
  406ebc:	stp	x20, xzr, [sp, #160]
  406ec0:	bl	41d470 <wcrtomb@plt+0x1ab50>
  406ec4:	mov	w20, #0x1                   	// #1
  406ec8:	mov	x21, x0
  406ecc:	cbz	x0, 407a30 <wcrtomb@plt+0x5110>
  406ed0:	adrp	x25, 42f000 <_obstack_memory_used@@Base+0x10510>
  406ed4:	add	x0, x25, #0x270
  406ed8:	adrp	x26, 42f000 <_obstack_memory_used@@Base+0x10510>
  406edc:	str	x0, [sp, #104]
  406ee0:	add	x0, x26, #0x3d0
  406ee4:	str	x0, [sp, #112]
  406ee8:	mov	x0, x21
  406eec:	bl	41db20 <wcrtomb@plt+0x1b200>
  406ef0:	mov	x19, x0
  406ef4:	cbz	x0, 4074e8 <wcrtomb@plt+0x4bc8>
  406ef8:	ldr	x0, [x19, #88]
  406efc:	ldrh	w1, [x19, #108]
  406f00:	cmp	x0, #0x0
  406f04:	cset	w27, eq  // eq = none
  406f08:	cmp	w1, #0x6
  406f0c:	and	w27, w22, w27
  406f10:	b.eq	406ee8 <wcrtomb@plt+0x45c8>  // b.none
  406f14:	eor	w25, w27, #0x1
  406f18:	cbz	w27, 40741c <wcrtomb@plt+0x4afc>
  406f1c:	ldrb	w0, [x28, #312]
  406f20:	ldr	x24, [x19, #56]
  406f24:	str	x24, [x28, #40]
  406f28:	cbz	w0, 406f3c <wcrtomb@plt+0x461c>
  406f2c:	ldrb	w0, [x24, #1]
  406f30:	cbz	w0, 406f3c <wcrtomb@plt+0x461c>
  406f34:	add	x24, x24, #0x2
  406f38:	str	x24, [x28, #40]
  406f3c:	ldr	w0, [x21, #72]
  406f40:	tbnz	w0, #1, 40735c <wcrtomb@plt+0x4a3c>
  406f44:	and	w26, w0, w27
  406f48:	cmp	w1, #0x7
  406f4c:	b.eq	4072dc <wcrtomb@plt+0x49bc>  // b.none
  406f50:	b.hi	40731c <wcrtomb@plt+0x49fc>  // b.pmore
  406f54:	cmp	w1, #0x2
  406f58:	b.eq	407510 <wcrtomb@plt+0x4bf0>  // b.none
  406f5c:	b.ls	4072f0 <wcrtomb@plt+0x49d0>  // b.plast
  406f60:	cmp	w1, #0x3
  406f64:	b.ne	4072d4 <wcrtomb@plt+0x49b4>  // b.any
  406f68:	ldr	w7, [x28, #308]
  406f6c:	cmp	w7, #0x2
  406f70:	b.eq	406f84 <wcrtomb@plt+0x4664>  // b.none
  406f74:	cmp	w7, #0x0
  406f78:	ccmp	w25, #0x0, #0x4, eq  // eq = none
  406f7c:	b.eq	407a34 <wcrtomb@plt+0x5114>  // b.none
  406f80:	mov	w7, #0x0                   	// #0
  406f84:	ldr	w0, [x19, #136]
  406f88:	cbnz	w0, 406fb8 <wcrtomb@plt+0x4698>
  406f8c:	mov	w4, #0x100                 	// #256
  406f90:	cbnz	w26, 4079d0 <wcrtomb@plt+0x50b0>
  406f94:	ldr	w1, [x21, #44]
  406f98:	add	x3, sp, #0x130
  406f9c:	ldr	x2, [x19, #48]
  406fa0:	mov	w0, #0x0                   	// #0
  406fa4:	str	w7, [sp, #124]
  406fa8:	bl	402910 <__fxstatat@plt>
  406fac:	ldr	w7, [sp, #124]
  406fb0:	cbnz	w0, 4078bc <wcrtomb@plt+0x4f9c>
  406fb4:	ldr	w0, [sp, #320]
  406fb8:	mov	w1, #0xb000                	// #45056
  406fbc:	and	w1, w0, w1
  406fc0:	cmp	w1, #0x2, lsl #12
  406fc4:	and	w0, w0, #0xf000
  406fc8:	mov	w1, #0xc000                	// #49152
  406fcc:	ccmp	w0, w1, #0x4, ne  // ne = any
  406fd0:	mov	w1, #0x1000                	// #4096
  406fd4:	ccmp	w0, w1, #0x4, ne  // ne = any
  406fd8:	b.eq	406ee8 <wcrtomb@plt+0x45c8>  // b.none
  406fdc:	nop
  406fe0:	cmp	w26, #0x0
  406fe4:	mov	w0, #0x900                 	// #2304
  406fe8:	mov	w2, #0x8900                	// #35072
  406fec:	csel	w2, w2, w0, eq  // eq = none
  406ff0:	ldr	w0, [x21, #44]
  406ff4:	mov	w3, #0x8100                	// #33024
  406ff8:	ldr	x1, [x19, #48]
  406ffc:	mov	w4, #0x100                 	// #256
  407000:	csel	w3, w3, w4, eq  // eq = none
  407004:	cmp	w7, #0x2
  407008:	b.eq	407018 <wcrtomb@plt+0x46f8>  // b.none
  40700c:	cmp	w7, #0x0
  407010:	ccmp	w25, #0x0, #0x4, eq  // eq = none
  407014:	csel	w2, w2, w3, ne  // ne = any
  407018:	bl	417750 <wcrtomb@plt+0x14e30>
  40701c:	tbnz	w0, #31, 407560 <wcrtomb@plt+0x4c40>
  407020:	mov	w1, w27
  407024:	bl	4065a8 <wcrtomb@plt+0x3c88>
  407028:	and	w20, w20, w0
  40702c:	b	406ee8 <wcrtomb@plt+0x45c8>
  407030:	ldr	x0, [sp, #104]
  407034:	cbz	x0, 406964 <wcrtomb@plt+0x4044>
  407038:	ldr	x0, [x28, #160]
  40703c:	add	x1, x24, #0x1
  407040:	strb	w20, [x24]
  407044:	str	x1, [x28, #224]
  407048:	cbnz	x0, 407298 <wcrtomb@plt+0x4978>
  40704c:	ldr	x0, [x28, #168]
  407050:	cbz	x0, 406964 <wcrtomb@plt+0x4044>
  407054:	ldr	x20, [x28, #152]
  407058:	ldr	x23, [x28, #224]
  40705c:	cbz	x20, 407758 <wcrtomb@plt+0x4e38>
  407060:	cmp	x0, #0x0
  407064:	b.le	406964 <wcrtomb@plt+0x4044>
  407068:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40706c:	add	x25, x0, #0x8d8
  407070:	b	4070ac <wcrtomb@plt+0x478c>
  407074:	ldrb	w1, [x25]
  407078:	sub	x2, x23, x20
  40707c:	mov	x0, x20
  407080:	bl	402770 <memchr@plt>
  407084:	add	x1, x0, #0x1
  407088:	mov	w2, #0x2d                  	// #45
  40708c:	mov	x0, x20
  407090:	bl	405928 <wcrtomb@plt+0x3008>
  407094:	ldr	x0, [x28, #168]
  407098:	sub	x0, x0, #0x1
  40709c:	str	x0, [x28, #168]
  4070a0:	cmp	x0, #0x0
  4070a4:	b.le	406964 <wcrtomb@plt+0x4044>
  4070a8:	ldr	x20, [x28, #152]
  4070ac:	cmp	x23, x20
  4070b0:	b.hi	407074 <wcrtomb@plt+0x4754>  // b.pmore
  4070b4:	b	406964 <wcrtomb@plt+0x4044>
  4070b8:	ldr	w0, [sp, #192]
  4070bc:	and	w0, w0, #0xf000
  4070c0:	cmp	w0, #0x4, lsl #12
  4070c4:	b.ne	406b50 <wcrtomb@plt+0x4230>  // b.any
  4070c8:	b	406a7c <wcrtomb@plt+0x415c>
  4070cc:	ldr	w0, [x28, #64]
  4070d0:	adrp	x23, 449000 <_obstack_memory_used@@Base+0x2a510>
  4070d4:	add	x23, x23, #0x360
  4070d8:	tbz	w0, #31, 406b3c <wcrtomb@plt+0x421c>
  4070dc:	ldr	w0, [sp, #192]
  4070e0:	and	w0, w0, #0xf000
  4070e4:	cmp	w0, #0x4, lsl #12
  4070e8:	cset	w0, eq  // eq = none
  4070ec:	str	w0, [x28, #64]
  4070f0:	b	406b3c <wcrtomb@plt+0x421c>
  4070f4:	ldp	x1, x0, [x28, #208]
  4070f8:	cmp	x0, x1
  4070fc:	b.eq	406e10 <wcrtomb@plt+0x44f0>  // b.none
  407100:	ldrb	w0, [x28, #456]
  407104:	cbnz	w0, 406e10 <wcrtomb@plt+0x44f0>
  407108:	mov	w2, #0x0                   	// #0
  40710c:	bl	4023a0 <lseek@plt>
  407110:	lsr	x0, x0, #63
  407114:	and	w0, w0, #0xff
  407118:	cbz	w0, 406e10 <wcrtomb@plt+0x44f0>
  40711c:	ldrb	w0, [x28, #304]
  407120:	cbz	w0, 40759c <wcrtomb@plt+0x4c7c>
  407124:	mov	w0, #0x1                   	// #1
  407128:	strb	w0, [x28, #234]
  40712c:	ldp	x23, x24, [sp, #48]
  407130:	b	406a1c <wcrtomb@plt+0x40fc>
  407134:	ldrb	w0, [x28, #304]
  407138:	cbz	w0, 4074a0 <wcrtomb@plt+0x4b80>
  40713c:	mov	w0, #0x1                   	// #1
  407140:	ldrb	w1, [x28, #457]
  407144:	mov	w23, #0x0                   	// #0
  407148:	mov	x21, #0x0                   	// #0
  40714c:	str	wzr, [sp, #132]
  407150:	strb	w0, [x28, #234]
  407154:	b	4069cc <wcrtomb@plt+0x40ac>
  407158:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40715c:	ldr	x0, [x0, #1112]
  407160:	bl	402710 <fflush_unlocked@plt>
  407164:	cbz	w0, 4069f0 <wcrtomb@plt+0x40d0>
  407168:	bl	402890 <__errno_location@plt>
  40716c:	ldr	w0, [x0]
  407170:	str	w0, [x28, #4]
  407174:	b	4069f0 <wcrtomb@plt+0x40d0>
  407178:	bl	405430 <wcrtomb@plt+0x2b10>
  40717c:	ldr	w0, [x28, #68]
  407180:	cbnz	w0, 4071e0 <wcrtomb@plt+0x48c0>
  407184:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  407188:	ldr	x0, [x0, #1112]
  40718c:	ldp	x1, x2, [x0, #40]
  407190:	cmp	x1, x2
  407194:	b.cs	407784 <wcrtomb@plt+0x4e64>  // b.hs, b.nlast
  407198:	add	x2, x1, #0x1
  40719c:	str	x2, [x0, #40]
  4071a0:	strb	wzr, [x1]
  4071a4:	b	4069d8 <wcrtomb@plt+0x40b8>
  4071a8:	ldr	w0, [sp, #192]
  4071ac:	and	w0, w0, #0xf000
  4071b0:	cmp	w0, #0x4, lsl #12
  4071b4:	cset	w0, eq  // eq = none
  4071b8:	str	w0, [x28, #64]
  4071bc:	b	4065f4 <wcrtomb@plt+0x3cd4>
  4071c0:	ldrb	w0, [x28, #304]
  4071c4:	cbz	w0, 407270 <wcrtomb@plt+0x4950>
  4071c8:	mov	w0, #0x1                   	// #1
  4071cc:	ldrb	w1, [x28, #457]
  4071d0:	mov	w23, #0x0                   	// #0
  4071d4:	mov	x21, #0x0                   	// #0
  4071d8:	strb	w0, [x28, #234]
  4071dc:	b	4069cc <wcrtomb@plt+0x40ac>
  4071e0:	mov	w0, #0x3a                  	// #58
  4071e4:	bl	4054e8 <wcrtomb@plt+0x2bc8>
  4071e8:	b	4069d8 <wcrtomb@plt+0x40b8>
  4071ec:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  4071f0:	bl	405430 <wcrtomb@plt+0x2b10>
  4071f4:	ldr	w1, [x28, #68]
  4071f8:	mov	w2, #0xa                   	// #10
  4071fc:	ldr	x0, [x21, #1112]
  407200:	and	w1, w1, w2
  407204:	ldp	x2, x3, [x0, #40]
  407208:	cmp	x2, x3
  40720c:	b.cs	4075d8 <wcrtomb@plt+0x4cb8>  // b.hs, b.nlast
  407210:	add	x3, x2, #0x1
  407214:	str	x3, [x0, #40]
  407218:	strb	w1, [x2]
  40721c:	ldrb	w20, [x28, #144]
  407220:	cbz	w20, 406a14 <wcrtomb@plt+0x40f4>
  407224:	ldr	x0, [x21, #1112]
  407228:	mov	w20, #0x0                   	// #0
  40722c:	bl	402710 <fflush_unlocked@plt>
  407230:	cbz	w0, 406a14 <wcrtomb@plt+0x40f4>
  407234:	bl	402890 <__errno_location@plt>
  407238:	ldr	w0, [x0]
  40723c:	str	w0, [x28, #4]
  407240:	ldp	x23, x24, [sp, #48]
  407244:	b	406a18 <wcrtomb@plt+0x40f8>
  407248:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40724c:	ldr	x0, [x0, #1112]
  407250:	bl	402710 <fflush_unlocked@plt>
  407254:	cbz	w0, 4069c4 <wcrtomb@plt+0x40a4>
  407258:	bl	402890 <__errno_location@plt>
  40725c:	ldr	w0, [x0]
  407260:	ldrb	w1, [x28, #457]
  407264:	str	w0, [x28, #4]
  407268:	ldp	x25, x26, [sp, #64]
  40726c:	b	4069cc <wcrtomb@plt+0x40ac>
  407270:	bl	402890 <__errno_location@plt>
  407274:	ldr	w20, [x0]
  407278:	ldr	x3, [x28, #40]
  40727c:	cbz	x3, 4077a0 <wcrtomb@plt+0x4e80>
  407280:	mov	w1, w20
  407284:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  407288:	mov	w0, #0x0                   	// #0
  40728c:	add	x2, x2, #0x270
  407290:	bl	402330 <error@plt>
  407294:	b	4071c8 <wcrtomb@plt+0x48a8>
  407298:	ldr	x0, [sp, #104]
  40729c:	sub	x0, x25, x0
  4072a0:	add	x0, x27, x0
  4072a4:	bl	405d78 <wcrtomb@plt+0x3458>
  4072a8:	add	x21, x21, x0
  4072ac:	b	40704c <wcrtomb@plt+0x472c>
  4072b0:	mov	w2, #0x5                   	// #5
  4072b4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4072b8:	mov	x0, #0x0                   	// #0
  4072bc:	add	x1, x1, #0x388
  4072c0:	bl	4027f0 <dcgettext@plt>
  4072c4:	mov	x2, x0
  4072c8:	mov	w1, #0x0                   	// #0
  4072cc:	mov	w0, #0x2                   	// #2
  4072d0:	bl	402330 <error@plt>
  4072d4:	cmp	w1, #0x4
  4072d8:	b.ne	407338 <wcrtomb@plt+0x4a18>  // b.any
  4072dc:	ldrb	w0, [x28, #304]
  4072e0:	cbz	w0, 4076f8 <wcrtomb@plt+0x4dd8>
  4072e4:	mov	w0, #0x1                   	// #1
  4072e8:	strb	w0, [x28, #234]
  4072ec:	b	406ee8 <wcrtomb@plt+0x45c8>
  4072f0:	cmp	w1, #0x1
  4072f4:	b.ne	407338 <wcrtomb@plt+0x4a18>  // b.any
  4072f8:	ldr	w0, [x23, #88]
  4072fc:	cmp	w0, #0x3
  407300:	b.eq	406ee8 <wcrtomb@plt+0x45c8>  // b.none
  407304:	mov	x1, x19
  407308:	mov	x0, x21
  40730c:	mov	w2, #0x4                   	// #4
  407310:	bl	41e3a0 <wcrtomb@plt+0x1ba80>
  407314:	ldr	w7, [x28, #308]
  407318:	b	406fe0 <wcrtomb@plt+0x46c0>
  40731c:	cmp	w1, #0xc
  407320:	b.eq	406ee8 <wcrtomb@plt+0x45c8>  // b.none
  407324:	b.ls	40733c <wcrtomb@plt+0x4a1c>  // b.plast
  407328:	cmp	w1, #0xd
  40732c:	b.eq	407354 <wcrtomb@plt+0x4a34>  // b.none
  407330:	cmp	w1, #0xe
  407334:	b.eq	406ee8 <wcrtomb@plt+0x45c8>  // b.none
  407338:	bl	4025f0 <abort@plt>
  40733c:	cmp	w1, #0xa
  407340:	b.eq	4072dc <wcrtomb@plt+0x49bc>  // b.none
  407344:	cmp	w1, #0xb
  407348:	b.eq	406f68 <wcrtomb@plt+0x4648>  // b.none
  40734c:	cmp	w1, #0x8
  407350:	b.ne	407338 <wcrtomb@plt+0x4a18>  // b.any
  407354:	ldr	w7, [x28, #308]
  407358:	b	406fe0 <wcrtomb@plt+0x46c0>
  40735c:	cmp	w1, #0x7
  407360:	b.eq	4072dc <wcrtomb@plt+0x49bc>  // b.none
  407364:	b.hi	4073b8 <wcrtomb@plt+0x4a98>  // b.pmore
  407368:	cmp	w1, #0x2
  40736c:	b.eq	407510 <wcrtomb@plt+0x4bf0>  // b.none
  407370:	b.ls	4073a8 <wcrtomb@plt+0x4a88>  // b.plast
  407374:	cmp	w1, #0x3
  407378:	b.ne	4072d4 <wcrtomb@plt+0x49b4>  // b.any
  40737c:	ldr	w7, [x28, #308]
  407380:	cmp	w7, #0x2
  407384:	b.eq	40767c <wcrtomb@plt+0x4d5c>  // b.none
  407388:	cmp	w7, #0x0
  40738c:	ccmp	w25, #0x0, #0x4, eq  // eq = none
  407390:	b.eq	4076d8 <wcrtomb@plt+0x4db8>  // b.none
  407394:	ldr	w0, [x19, #136]
  407398:	cbz	w0, 4079d4 <wcrtomb@plt+0x50b4>
  40739c:	mov	w7, #0x0                   	// #0
  4073a0:	mov	w26, #0x1                   	// #1
  4073a4:	b	406fb8 <wcrtomb@plt+0x4698>
  4073a8:	cmp	w1, #0x1
  4073ac:	b.ne	407338 <wcrtomb@plt+0x4a18>  // b.any
  4073b0:	mov	w26, w1
  4073b4:	b	4072f8 <wcrtomb@plt+0x49d8>
  4073b8:	cmp	w1, #0xc
  4073bc:	b.eq	406ee8 <wcrtomb@plt+0x45c8>  // b.none
  4073c0:	b.ls	4073e8 <wcrtomb@plt+0x4ac8>  // b.plast
  4073c4:	cmp	w1, #0xd
  4073c8:	b.ne	407330 <wcrtomb@plt+0x4a10>  // b.any
  4073cc:	ldr	w0, [x21, #44]
  4073d0:	mov	w2, #0x900                 	// #2304
  4073d4:	ldr	w7, [x28, #308]
  4073d8:	mov	w26, #0x1                   	// #1
  4073dc:	mov	w3, #0x100                 	// #256
  4073e0:	ldr	x1, [x19, #48]
  4073e4:	b	407004 <wcrtomb@plt+0x46e4>
  4073e8:	cmp	w1, #0xa
  4073ec:	b.eq	4072dc <wcrtomb@plt+0x49bc>  // b.none
  4073f0:	cmp	w1, #0xb
  4073f4:	b.eq	40737c <wcrtomb@plt+0x4a5c>  // b.none
  4073f8:	cmp	w1, #0x8
  4073fc:	b.eq	4073cc <wcrtomb@plt+0x4aac>  // b.none
  407400:	bl	4025f0 <abort@plt>
  407404:	ldrb	w1, [x28, #72]
  407408:	ldr	x0, [sp, #224]
  40740c:	cbz	w1, 406d50 <wcrtomb@plt+0x4430>
  407410:	cmn	x0, #0x1
  407414:	cinc	x0, x0, ne  // ne = any
  407418:	b	406d50 <wcrtomb@plt+0x4430>
  40741c:	sub	w0, w1, #0x1
  407420:	and	w0, w0, #0xffff
  407424:	cmp	w0, #0x1
  407428:	ccmp	w1, #0x4, #0x4, hi  // hi = pmore
  40742c:	b.eq	4074d4 <wcrtomb@plt+0x4bb4>  // b.none
  407430:	ldr	x0, [x28, #272]
  407434:	cbz	x0, 406f1c <wcrtomb@plt+0x45fc>
  407438:	add	x1, x19, #0xf8
  40743c:	bl	415280 <wcrtomb@plt+0x12960>
  407440:	tst	w0, #0xff
  407444:	b.ne	4075c4 <wcrtomb@plt+0x4ca4>  // b.any
  407448:	ldrh	w1, [x19, #108]
  40744c:	b	406f1c <wcrtomb@plt+0x45fc>
  407450:	bl	402890 <__errno_location@plt>
  407454:	ldr	w19, [x0]
  407458:	ldr	x3, [x28, #40]
  40745c:	cbz	x3, 407718 <wcrtomb@plt+0x4df8>
  407460:	mov	w1, w19
  407464:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  407468:	mov	w0, #0x0                   	// #0
  40746c:	add	x2, x2, #0x270
  407470:	bl	402330 <error@plt>
  407474:	b	406a98 <wcrtomb@plt+0x4178>
  407478:	bl	402890 <__errno_location@plt>
  40747c:	ldr	w20, [x0]
  407480:	ldr	x3, [x28, #40]
  407484:	cbz	x3, 407738 <wcrtomb@plt+0x4e18>
  407488:	mov	w1, w20
  40748c:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  407490:	mov	w0, #0x0                   	// #0
  407494:	add	x2, x2, #0x270
  407498:	bl	402330 <error@plt>
  40749c:	b	406958 <wcrtomb@plt+0x4038>
  4074a0:	ldr	x3, [x28, #40]
  4074a4:	cbz	x3, 407764 <wcrtomb@plt+0x4e44>
  4074a8:	mov	w1, w22
  4074ac:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  4074b0:	mov	w0, #0x0                   	// #0
  4074b4:	add	x2, x2, #0x270
  4074b8:	bl	402330 <error@plt>
  4074bc:	b	40713c <wcrtomb@plt+0x481c>
  4074c0:	mov	w23, #0x0                   	// #0
  4074c4:	mov	x21, #0x0                   	// #0
  4074c8:	str	wzr, [sp, #132]
  4074cc:	ldp	x25, x26, [sp, #64]
  4074d0:	b	4069cc <wcrtomb@plt+0x40ac>
  4074d4:	ldr	w0, [x23, #88]
  4074d8:	cmp	w0, #0x4
  4074dc:	b.eq	4075c4 <wcrtomb@plt+0x4ca4>  // b.none
  4074e0:	ldr	x0, [x28, #288]
  4074e4:	b	407434 <wcrtomb@plt+0x4b14>
  4074e8:	bl	402890 <__errno_location@plt>
  4074ec:	ldr	w22, [x0]
  4074f0:	mov	x19, x0
  4074f4:	cbnz	w22, 4076c4 <wcrtomb@plt+0x4da4>
  4074f8:	mov	x0, x21
  4074fc:	bl	41d958 <wcrtomb@plt+0x1b038>
  407500:	cbnz	w0, 4076a8 <wcrtomb@plt+0x4d88>
  407504:	ldp	x23, x24, [sp, #48]
  407508:	ldp	x25, x26, [sp, #64]
  40750c:	b	406a1c <wcrtomb@plt+0x40fc>
  407510:	ldrb	w0, [x28, #304]
  407514:	cbnz	w0, 406ee8 <wcrtomb@plt+0x45c8>
  407518:	mov	w2, #0x5                   	// #5
  40751c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407520:	mov	x0, #0x0                   	// #0
  407524:	add	x1, x1, #0x400
  407528:	bl	4027f0 <dcgettext@plt>
  40752c:	mov	x19, x0
  407530:	mov	w2, #0x5                   	// #5
  407534:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407538:	mov	x0, #0x0                   	// #0
  40753c:	add	x1, x1, #0x410
  407540:	bl	4027f0 <dcgettext@plt>
  407544:	mov	x4, x0
  407548:	mov	x3, x24
  40754c:	mov	x2, x19
  407550:	mov	w1, #0x0                   	// #0
  407554:	mov	w0, #0x0                   	// #0
  407558:	bl	402330 <error@plt>
  40755c:	b	406ee8 <wcrtomb@plt+0x45c8>
  407560:	bl	402890 <__errno_location@plt>
  407564:	ldr	w19, [x0]
  407568:	cbnz	w26, 407578 <wcrtomb@plt+0x4c58>
  40756c:	cmp	w19, #0x28
  407570:	ccmp	w19, #0x1f, #0x4, ne  // ne = any
  407574:	b.eq	406ee8 <wcrtomb@plt+0x45c8>  // b.none
  407578:	ldrb	w0, [x28, #304]
  40757c:	cbnz	w0, 4072e4 <wcrtomb@plt+0x49c4>
  407580:	ldr	x3, [x28, #40]
  407584:	cbz	x3, 4078e8 <wcrtomb@plt+0x4fc8>
  407588:	ldr	x2, [sp, #104]
  40758c:	mov	w1, w19
  407590:	mov	w0, #0x0                   	// #0
  407594:	bl	402330 <error@plt>
  407598:	b	4072e4 <wcrtomb@plt+0x49c4>
  40759c:	bl	402890 <__errno_location@plt>
  4075a0:	ldr	w19, [x0]
  4075a4:	ldr	x3, [x28, #40]
  4075a8:	cbz	x3, 4077c0 <wcrtomb@plt+0x4ea0>
  4075ac:	mov	w1, w19
  4075b0:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  4075b4:	mov	w0, #0x0                   	// #0
  4075b8:	add	x2, x2, #0x270
  4075bc:	bl	402330 <error@plt>
  4075c0:	b	407124 <wcrtomb@plt+0x4804>
  4075c4:	mov	x1, x19
  4075c8:	mov	x0, x21
  4075cc:	mov	w2, #0x4                   	// #4
  4075d0:	bl	41e3a0 <wcrtomb@plt+0x1ba80>
  4075d4:	b	406ee8 <wcrtomb@plt+0x45c8>
  4075d8:	bl	402620 <__overflow@plt>
  4075dc:	tbz	w0, #31, 40721c <wcrtomb@plt+0x48fc>
  4075e0:	bl	402890 <__errno_location@plt>
  4075e4:	ldr	w0, [x0]
  4075e8:	str	w0, [x28, #4]
  4075ec:	b	40721c <wcrtomb@plt+0x48fc>
  4075f0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4075f4:	add	x1, x1, #0x3d0
  4075f8:	mov	w2, #0x5                   	// #5
  4075fc:	mov	x0, #0x0                   	// #0
  407600:	bl	4027f0 <dcgettext@plt>
  407604:	mov	x1, x0
  407608:	str	x0, [x28, #40]
  40760c:	b	4069b4 <wcrtomb@plt+0x4094>
  407610:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407614:	mov	w2, #0x5                   	// #5
  407618:	add	x1, x1, #0x3d0
  40761c:	mov	x0, #0x0                   	// #0
  407620:	bl	4027f0 <dcgettext@plt>
  407624:	mov	x3, x0
  407628:	str	x0, [x28, #40]
  40762c:	b	406d8c <wcrtomb@plt+0x446c>
  407630:	ldrb	w0, [x28, #459]
  407634:	cbz	w0, 406e00 <wcrtomb@plt+0x44e0>
  407638:	mov	w5, #0x1                   	// #1
  40763c:	mov	x4, #0x18000               	// #98304
  407640:	mov	w2, w5
  407644:	mov	x3, #0x0                   	// #0
  407648:	mov	x1, #0x0                   	// #0
  40764c:	mov	w0, #0x0                   	// #0
  407650:	bl	402470 <splice@plt>
  407654:	mov	x19, x0
  407658:	cmp	x0, #0x0
  40765c:	b.ge	407850 <wcrtomb@plt+0x4f30>  // b.tcont
  407660:	bl	402890 <__errno_location@plt>
  407664:	ldr	w0, [x0]
  407668:	cmp	w0, #0x16
  40766c:	b.eq	406e00 <wcrtomb@plt+0x44e0>  // b.none
  407670:	cmp	x19, #0x0
  407674:	cset	w0, ne  // ne = any
  407678:	b	407118 <wcrtomb@plt+0x47f8>
  40767c:	ldr	w0, [x19, #136]
  407680:	cbnz	w0, 4073a0 <wcrtomb@plt+0x4a80>
  407684:	mov	w4, #0x0                   	// #0
  407688:	mov	w26, #0x1                   	// #1
  40768c:	b	406f94 <wcrtomb@plt+0x4674>
  407690:	ldrb	w0, [x28, #304]
  407694:	ldr	x20, [x28, #40]
  407698:	cbz	w0, 407800 <wcrtomb@plt+0x4ee0>
  40769c:	mov	w0, #0x1                   	// #1
  4076a0:	strb	w0, [x28, #234]
  4076a4:	b	406eb0 <wcrtomb@plt+0x4590>
  4076a8:	ldrb	w0, [x28, #304]
  4076ac:	cbz	w0, 40782c <wcrtomb@plt+0x4f0c>
  4076b0:	mov	w0, #0x1                   	// #1
  4076b4:	strb	w0, [x28, #234]
  4076b8:	ldp	x23, x24, [sp, #48]
  4076bc:	ldp	x25, x26, [sp, #64]
  4076c0:	b	406a1c <wcrtomb@plt+0x40fc>
  4076c4:	ldrb	w0, [x28, #304]
  4076c8:	cbz	w0, 4077e0 <wcrtomb@plt+0x4ec0>
  4076cc:	mov	w0, #0x1                   	// #1
  4076d0:	strb	w0, [x28, #234]
  4076d4:	b	4074f8 <wcrtomb@plt+0x4bd8>
  4076d8:	ldr	w0, [x21, #44]
  4076dc:	ldr	x1, [x19, #48]
  4076e0:	mov	w2, #0x100                 	// #256
  4076e4:	bl	417750 <wcrtomb@plt+0x14e30>
  4076e8:	tbz	w0, #31, 407020 <wcrtomb@plt+0x4700>
  4076ec:	bl	402890 <__errno_location@plt>
  4076f0:	ldr	w19, [x0]
  4076f4:	b	407578 <wcrtomb@plt+0x4c58>
  4076f8:	ldr	w19, [x19, #64]
  4076fc:	cbz	x24, 4078a0 <wcrtomb@plt+0x4f80>
  407700:	ldr	x2, [sp, #104]
  407704:	mov	x3, x24
  407708:	mov	w1, w19
  40770c:	mov	w0, #0x0                   	// #0
  407710:	bl	402330 <error@plt>
  407714:	b	4072e4 <wcrtomb@plt+0x49c4>
  407718:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  40771c:	mov	w2, #0x5                   	// #5
  407720:	add	x1, x1, #0x3d0
  407724:	mov	x0, #0x0                   	// #0
  407728:	bl	4027f0 <dcgettext@plt>
  40772c:	mov	x3, x0
  407730:	str	x0, [x28, #40]
  407734:	b	407460 <wcrtomb@plt+0x4b40>
  407738:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  40773c:	mov	w2, #0x5                   	// #5
  407740:	add	x1, x1, #0x3d0
  407744:	mov	x0, #0x0                   	// #0
  407748:	bl	4027f0 <dcgettext@plt>
  40774c:	mov	x3, x0
  407750:	str	x0, [x28, #40]
  407754:	b	407488 <wcrtomb@plt+0x4b68>
  407758:	ldr	x20, [x28, #112]
  40775c:	str	x20, [x28, #152]
  407760:	b	407060 <wcrtomb@plt+0x4740>
  407764:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407768:	mov	w2, #0x5                   	// #5
  40776c:	add	x1, x1, #0x3d0
  407770:	mov	x0, #0x0                   	// #0
  407774:	bl	4027f0 <dcgettext@plt>
  407778:	mov	x3, x0
  40777c:	str	x0, [x28, #40]
  407780:	b	4074a8 <wcrtomb@plt+0x4b88>
  407784:	mov	w1, #0x0                   	// #0
  407788:	bl	402620 <__overflow@plt>
  40778c:	tbz	w0, #31, 4069d8 <wcrtomb@plt+0x40b8>
  407790:	bl	402890 <__errno_location@plt>
  407794:	ldr	w0, [x0]
  407798:	str	w0, [x28, #4]
  40779c:	b	4069d8 <wcrtomb@plt+0x40b8>
  4077a0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4077a4:	mov	w2, #0x5                   	// #5
  4077a8:	add	x1, x1, #0x3d0
  4077ac:	mov	x0, #0x0                   	// #0
  4077b0:	bl	4027f0 <dcgettext@plt>
  4077b4:	mov	x3, x0
  4077b8:	str	x0, [x28, #40]
  4077bc:	b	407280 <wcrtomb@plt+0x4960>
  4077c0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4077c4:	mov	w2, #0x5                   	// #5
  4077c8:	add	x1, x1, #0x3d0
  4077cc:	mov	x0, #0x0                   	// #0
  4077d0:	bl	4027f0 <dcgettext@plt>
  4077d4:	mov	x3, x0
  4077d8:	str	x0, [x28, #40]
  4077dc:	b	4075ac <wcrtomb@plt+0x4c8c>
  4077e0:	ldr	x3, [x28, #40]
  4077e4:	cbz	x3, 407990 <wcrtomb@plt+0x5070>
  4077e8:	mov	w1, w22
  4077ec:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  4077f0:	mov	w0, #0x0                   	// #0
  4077f4:	add	x2, x2, #0x270
  4077f8:	bl	402330 <error@plt>
  4077fc:	b	4076cc <wcrtomb@plt+0x4dac>
  407800:	bl	402890 <__errno_location@plt>
  407804:	ldr	w21, [x0]
  407808:	cbz	x20, 4079b0 <wcrtomb@plt+0x5090>
  40780c:	mov	x3, x20
  407810:	mov	w1, w21
  407814:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  407818:	mov	w0, #0x0                   	// #0
  40781c:	add	x2, x2, #0x270
  407820:	bl	402330 <error@plt>
  407824:	ldr	x20, [x28, #40]
  407828:	b	40769c <wcrtomb@plt+0x4d7c>
  40782c:	ldr	x3, [x28, #40]
  407830:	ldr	w19, [x19]
  407834:	cbz	x3, 407970 <wcrtomb@plt+0x5050>
  407838:	mov	w1, w19
  40783c:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  407840:	mov	w0, #0x0                   	// #0
  407844:	add	x2, x2, #0x270
  407848:	bl	402330 <error@plt>
  40784c:	b	4076b0 <wcrtomb@plt+0x4d90>
  407850:	b.eq	407670 <wcrtomb@plt+0x4d50>  // b.none
  407854:	nop
  407858:	mov	w5, #0x1                   	// #1
  40785c:	mov	x4, #0x18000               	// #98304
  407860:	mov	w2, w5
  407864:	mov	x3, #0x0                   	// #0
  407868:	mov	x1, #0x0                   	// #0
  40786c:	mov	w0, #0x0                   	// #0
  407870:	bl	402470 <splice@plt>
  407874:	mov	x19, x0
  407878:	cmp	x0, #0x0
  40787c:	b.gt	407858 <wcrtomb@plt+0x4f38>
  407880:	b	407670 <wcrtomb@plt+0x4d50>
  407884:	ldr	w26, [x28, #48]
  407888:	b	40673c <wcrtomb@plt+0x3e1c>
  40788c:	ldrb	w0, [x28, #304]
  407890:	cbz	w0, 407948 <wcrtomb@plt+0x5028>
  407894:	mov	w0, #0x1                   	// #1
  407898:	strb	w0, [x28, #234]
  40789c:	b	406cac <wcrtomb@plt+0x438c>
  4078a0:	ldr	x1, [sp, #112]
  4078a4:	mov	w2, #0x5                   	// #5
  4078a8:	mov	x0, #0x0                   	// #0
  4078ac:	bl	4027f0 <dcgettext@plt>
  4078b0:	mov	x24, x0
  4078b4:	str	x0, [x28, #40]
  4078b8:	b	407700 <wcrtomb@plt+0x4de0>
  4078bc:	ldrb	w0, [x28, #304]
  4078c0:	cbnz	w0, 4072e4 <wcrtomb@plt+0x49c4>
  4078c4:	bl	402890 <__errno_location@plt>
  4078c8:	ldr	w19, [x0]
  4078cc:	cbz	x24, 407a18 <wcrtomb@plt+0x50f8>
  4078d0:	ldr	x3, [x28, #40]
  4078d4:	mov	w1, w19
  4078d8:	ldr	x2, [sp, #104]
  4078dc:	mov	w0, #0x0                   	// #0
  4078e0:	bl	402330 <error@plt>
  4078e4:	b	4072e4 <wcrtomb@plt+0x49c4>
  4078e8:	ldr	x1, [sp, #112]
  4078ec:	mov	w2, #0x5                   	// #5
  4078f0:	mov	x0, #0x0                   	// #0
  4078f4:	bl	4027f0 <dcgettext@plt>
  4078f8:	mov	x3, x0
  4078fc:	str	x0, [x28, #40]
  407900:	b	407588 <wcrtomb@plt+0x4c68>
  407904:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407908:	mov	w2, #0x5                   	// #5
  40790c:	add	x1, x1, #0x430
  407910:	mov	x0, #0x0                   	// #0
  407914:	bl	4027f0 <dcgettext@plt>
  407918:	mov	x20, x0
  40791c:	ldr	x1, [x28, #40]
  407920:	cbz	x1, 4079e4 <wcrtomb@plt+0x50c4>
  407924:	ldr	x0, [x28, #40]
  407928:	bl	41a980 <wcrtomb@plt+0x18060>
  40792c:	mov	x3, x0
  407930:	mov	x2, x20
  407934:	mov	w1, #0x0                   	// #0
  407938:	mov	w0, #0x0                   	// #0
  40793c:	bl	402330 <error@plt>
  407940:	ldp	x23, x24, [sp, #48]
  407944:	b	406ce0 <wcrtomb@plt+0x43c0>
  407948:	bl	402890 <__errno_location@plt>
  40794c:	ldr	w24, [x0]
  407950:	ldr	x1, [x28, #40]
  407954:	cbz	x1, 407a00 <wcrtomb@plt+0x50e0>
  407958:	ldr	x3, [x28, #40]
  40795c:	mov	w1, w24
  407960:	ldr	x2, [sp, #144]
  407964:	mov	w0, #0x0                   	// #0
  407968:	bl	402330 <error@plt>
  40796c:	b	407894 <wcrtomb@plt+0x4f74>
  407970:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407974:	mov	w2, #0x5                   	// #5
  407978:	add	x1, x1, #0x3d0
  40797c:	mov	x0, #0x0                   	// #0
  407980:	bl	4027f0 <dcgettext@plt>
  407984:	mov	x3, x0
  407988:	str	x0, [x28, #40]
  40798c:	b	407838 <wcrtomb@plt+0x4f18>
  407990:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407994:	mov	w2, #0x5                   	// #5
  407998:	add	x1, x1, #0x3d0
  40799c:	mov	x0, #0x0                   	// #0
  4079a0:	bl	4027f0 <dcgettext@plt>
  4079a4:	mov	x3, x0
  4079a8:	str	x0, [x28, #40]
  4079ac:	b	4077e8 <wcrtomb@plt+0x4ec8>
  4079b0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4079b4:	mov	w2, #0x5                   	// #5
  4079b8:	add	x1, x1, #0x3d0
  4079bc:	mov	x0, #0x0                   	// #0
  4079c0:	bl	4027f0 <dcgettext@plt>
  4079c4:	mov	x20, x0
  4079c8:	str	x0, [x28, #40]
  4079cc:	b	40780c <wcrtomb@plt+0x4eec>
  4079d0:	mov	w0, w7
  4079d4:	mov	w7, w0
  4079d8:	mov	w4, #0x0                   	// #0
  4079dc:	mov	w26, #0x1                   	// #1
  4079e0:	b	406f94 <wcrtomb@plt+0x4674>
  4079e4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  4079e8:	mov	w2, #0x5                   	// #5
  4079ec:	add	x1, x1, #0x3d0
  4079f0:	mov	x0, #0x0                   	// #0
  4079f4:	bl	4027f0 <dcgettext@plt>
  4079f8:	str	x0, [x28, #40]
  4079fc:	b	407924 <wcrtomb@plt+0x5004>
  407a00:	ldr	x1, [sp, #152]
  407a04:	mov	w2, #0x5                   	// #5
  407a08:	mov	x0, #0x0                   	// #0
  407a0c:	bl	4027f0 <dcgettext@plt>
  407a10:	str	x0, [x28, #40]
  407a14:	b	407958 <wcrtomb@plt+0x5038>
  407a18:	ldr	x1, [sp, #112]
  407a1c:	mov	w2, #0x5                   	// #5
  407a20:	mov	x0, #0x0                   	// #0
  407a24:	bl	4027f0 <dcgettext@plt>
  407a28:	str	x0, [x28, #40]
  407a2c:	b	4078d0 <wcrtomb@plt+0x4fb0>
  407a30:	bl	41b778 <wcrtomb@plt+0x18e58>
  407a34:	ldr	w0, [x21, #44]
  407a38:	ldr	x1, [x19, #48]
  407a3c:	cbnz	w26, 4076e0 <wcrtomb@plt+0x4dc0>
  407a40:	mov	w2, #0x8900                	// #35072
  407a44:	mov	w3, #0x8100                	// #33024
  407a48:	b	40700c <wcrtomb@plt+0x46ec>
  407a4c:	nop
  407a50:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  407a54:	add	x2, x2, #0x480
  407a58:	ldp	x5, x7, [x2, #16]
  407a5c:	cmp	x5, #0x1
  407a60:	b.ls	407a98 <wcrtomb@plt+0x5178>  // b.plast
  407a64:	add	x6, x7, #0x8
  407a68:	mov	x2, #0x10                  	// #16
  407a6c:	mov	x3, #0x1                   	// #1
  407a70:	b	407a80 <wcrtomb@plt+0x5160>
  407a74:	add	x2, x2, #0x10
  407a78:	cmp	x3, x5
  407a7c:	b.eq	407aac <wcrtomb@plt+0x518c>  // b.none
  407a80:	ldr	x4, [x6, x2]
  407a84:	add	x3, x3, #0x1
  407a88:	cmp	x4, x0
  407a8c:	b.ls	407a74 <wcrtomb@plt+0x5154>  // b.plast
  407a90:	sub	x2, x2, #0x10
  407a94:	add	x7, x7, x2
  407a98:	add	x2, x0, #0x1
  407a9c:	ldp	x0, x3, [x7]
  407aa0:	sub	x2, x2, x3
  407aa4:	str	x2, [x1]
  407aa8:	ret
  407aac:	add	x7, x7, x3, lsl #4
  407ab0:	add	x2, x0, #0x1
  407ab4:	sub	x7, x7, #0x10
  407ab8:	ldp	x0, x3, [x7]
  407abc:	sub	x2, x2, x3
  407ac0:	str	x2, [x1]
  407ac4:	ret
  407ac8:	stp	x29, x30, [sp, #-48]!
  407acc:	mov	x29, sp
  407ad0:	stp	x19, x20, [sp, #16]
  407ad4:	mov	w19, w0
  407ad8:	stp	x21, x22, [sp, #32]
  407adc:	cbz	w0, 407b4c <wcrtomb@plt+0x522c>
  407ae0:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  407ae4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407ae8:	add	x1, x1, #0x478
  407aec:	mov	w2, #0x5                   	// #5
  407af0:	ldr	x22, [x21, #1088]
  407af4:	mov	x0, #0x0                   	// #0
  407af8:	bl	4027f0 <dcgettext@plt>
  407afc:	mov	x20, x0
  407b00:	bl	415c38 <wcrtomb@plt+0x13318>
  407b04:	mov	x2, x0
  407b08:	mov	x1, x20
  407b0c:	mov	x0, x22
  407b10:	bl	4028d0 <fprintf@plt>
  407b14:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407b18:	add	x1, x1, #0x4a8
  407b1c:	mov	w2, #0x5                   	// #5
  407b20:	mov	x0, #0x0                   	// #0
  407b24:	ldr	x21, [x21, #1088]
  407b28:	bl	4027f0 <dcgettext@plt>
  407b2c:	mov	x20, x0
  407b30:	bl	415c38 <wcrtomb@plt+0x13318>
  407b34:	mov	x1, x20
  407b38:	mov	x2, x0
  407b3c:	mov	x0, x21
  407b40:	bl	4028d0 <fprintf@plt>
  407b44:	mov	w0, w19
  407b48:	bl	402320 <exit@plt>
  407b4c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407b50:	add	x1, x1, #0x478
  407b54:	mov	w2, #0x5                   	// #5
  407b58:	mov	x0, #0x0                   	// #0
  407b5c:	bl	4027f0 <dcgettext@plt>
  407b60:	mov	x20, x0
  407b64:	bl	415c38 <wcrtomb@plt+0x13318>
  407b68:	mov	x1, x0
  407b6c:	mov	x0, x20
  407b70:	bl	402870 <printf@plt>
  407b74:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407b78:	add	x1, x1, #0x4d0
  407b7c:	mov	w2, #0x5                   	// #5
  407b80:	mov	x0, #0x0                   	// #0
  407b84:	bl	4027f0 <dcgettext@plt>
  407b88:	bl	402870 <printf@plt>
  407b8c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407b90:	add	x1, x1, #0x4f8
  407b94:	mov	w2, #0x5                   	// #5
  407b98:	mov	x0, #0x0                   	// #0
  407b9c:	bl	4027f0 <dcgettext@plt>
  407ba0:	mov	x20, x0
  407ba4:	bl	415c38 <wcrtomb@plt+0x13318>
  407ba8:	mov	x1, x0
  407bac:	mov	x0, x20
  407bb0:	bl	402870 <printf@plt>
  407bb4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407bb8:	add	x1, x1, #0x590
  407bbc:	mov	w2, #0x5                   	// #5
  407bc0:	mov	x0, #0x0                   	// #0
  407bc4:	bl	4027f0 <dcgettext@plt>
  407bc8:	bl	402870 <printf@plt>
  407bcc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407bd0:	add	x1, x1, #0x690
  407bd4:	mov	w2, #0x5                   	// #5
  407bd8:	mov	x0, #0x0                   	// #0
  407bdc:	bl	4027f0 <dcgettext@plt>
  407be0:	bl	402870 <printf@plt>
  407be4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407be8:	add	x1, x1, #0x838
  407bec:	mov	w2, #0x5                   	// #5
  407bf0:	mov	x0, #0x0                   	// #0
  407bf4:	bl	4027f0 <dcgettext@plt>
  407bf8:	bl	402870 <printf@plt>
  407bfc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407c00:	add	x1, x1, #0x930
  407c04:	mov	w2, #0x5                   	// #5
  407c08:	mov	x0, #0x0                   	// #0
  407c0c:	bl	4027f0 <dcgettext@plt>
  407c10:	bl	402870 <printf@plt>
  407c14:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407c18:	add	x1, x1, #0xb08
  407c1c:	mov	w2, #0x5                   	// #5
  407c20:	mov	x0, #0x0                   	// #0
  407c24:	bl	4027f0 <dcgettext@plt>
  407c28:	bl	402870 <printf@plt>
  407c2c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407c30:	add	x1, x1, #0xc50
  407c34:	mov	w2, #0x5                   	// #5
  407c38:	mov	x0, #0x0                   	// #0
  407c3c:	bl	4027f0 <dcgettext@plt>
  407c40:	bl	402870 <printf@plt>
  407c44:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407c48:	add	x1, x1, #0xe08
  407c4c:	mov	w2, #0x5                   	// #5
  407c50:	mov	x0, #0x0                   	// #0
  407c54:	bl	4027f0 <dcgettext@plt>
  407c58:	bl	402870 <printf@plt>
  407c5c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  407c60:	add	x1, x1, #0xf20
  407c64:	mov	w2, #0x5                   	// #5
  407c68:	mov	x0, #0x0                   	// #0
  407c6c:	bl	4027f0 <dcgettext@plt>
  407c70:	bl	402870 <printf@plt>
  407c74:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  407c78:	add	x1, x1, #0x78
  407c7c:	mov	w2, #0x5                   	// #5
  407c80:	mov	x0, #0x0                   	// #0
  407c84:	bl	4027f0 <dcgettext@plt>
  407c88:	bl	402870 <printf@plt>
  407c8c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  407c90:	add	x1, x1, #0x148
  407c94:	mov	w2, #0x5                   	// #5
  407c98:	mov	x0, #0x0                   	// #0
  407c9c:	bl	4027f0 <dcgettext@plt>
  407ca0:	bl	402870 <printf@plt>
  407ca4:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  407ca8:	add	x1, x1, #0x270
  407cac:	mov	w2, #0x5                   	// #5
  407cb0:	mov	x0, #0x0                   	// #0
  407cb4:	bl	4027f0 <dcgettext@plt>
  407cb8:	bl	402870 <printf@plt>
  407cbc:	bl	41b3a0 <wcrtomb@plt+0x18a80>
  407cc0:	b	407b44 <wcrtomb@plt+0x5224>
  407cc4:	nop
  407cc8:	stp	x29, x30, [sp, #-112]!
  407ccc:	mov	x29, sp
  407cd0:	stp	x25, x26, [sp, #64]
  407cd4:	mov	x25, x1
  407cd8:	ldr	x26, [x1]
  407cdc:	stp	x27, x28, [sp, #80]
  407ce0:	str	xzr, [sp, #104]
  407ce4:	adds	x1, x26, #0x1
  407ce8:	cset	x2, mi  // mi = first
  407cec:	ldr	x27, [x0]
  407cf0:	tbnz	x1, #62, 407e2c <wcrtomb@plt+0x550c>
  407cf4:	cbnz	x2, 407e2c <wcrtomb@plt+0x550c>
  407cf8:	stp	x23, x24, [sp, #48]
  407cfc:	mov	x23, x0
  407d00:	lsl	x0, x1, #1
  407d04:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  407d08:	mov	x24, x0
  407d0c:	cbz	x26, 407dc4 <wcrtomb@plt+0x54a4>
  407d10:	stp	x21, x22, [sp, #32]
  407d14:	mov	x21, #0x441                 	// #1089
  407d18:	mov	x28, x0
  407d1c:	mov	x22, #0x1                   	// #1
  407d20:	movk	x21, #0x580, lsl #48
  407d24:	stp	x19, x20, [sp, #16]
  407d28:	adrp	x20, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  407d2c:	add	x20, x20, #0x8e0
  407d30:	b	407d5c <wcrtomb@plt+0x543c>
  407d34:	cmp	x19, #0x1
  407d38:	b.eq	407d7c <wcrtomb@plt+0x545c>  // b.none
  407d3c:	sub	x26, x26, x19
  407d40:	mov	x0, x28
  407d44:	mov	x1, x27
  407d48:	mov	x2, x19
  407d4c:	add	x27, x27, x19
  407d50:	bl	4026d0 <mempcpy@plt>
  407d54:	mov	x28, x0
  407d58:	cbz	x26, 407db8 <wcrtomb@plt+0x5498>
  407d5c:	ldrb	w0, [x27]
  407d60:	add	x0, x20, x0
  407d64:	ldrsb	x19, [x0, #3]
  407d68:	cmn	x19, #0x2
  407d6c:	b.eq	407de8 <wcrtomb@plt+0x54c8>  // b.none
  407d70:	cmn	x19, #0x1
  407d74:	b.ne	407d34 <wcrtomb@plt+0x5414>  // b.any
  407d78:	str	xzr, [sp, #104]
  407d7c:	ldrb	w0, [x27]
  407d80:	add	x1, x28, #0x1
  407d84:	sub	w2, w0, #0x24
  407d88:	and	w2, w2, #0xff
  407d8c:	cmp	w2, #0x3a
  407d90:	b.hi	407da0 <wcrtomb@plt+0x5480>  // b.pmore
  407d94:	lsl	x2, x22, x2
  407d98:	tst	x2, x21
  407d9c:	b.ne	407e10 <wcrtomb@plt+0x54f0>  // b.any
  407da0:	strb	w0, [x28]
  407da4:	mov	x19, #0x1                   	// #1
  407da8:	sub	x26, x26, #0x1
  407dac:	mov	x28, x1
  407db0:	add	x27, x27, x19
  407db4:	cbnz	x26, 407d5c <wcrtomb@plt+0x543c>
  407db8:	ldp	x19, x20, [sp, #16]
  407dbc:	sub	x26, x28, x24
  407dc0:	ldp	x21, x22, [sp, #32]
  407dc4:	ldr	x0, [x23]
  407dc8:	bl	4026b0 <free@plt>
  407dcc:	ldp	x27, x28, [sp, #80]
  407dd0:	str	x24, [x23]
  407dd4:	ldp	x23, x24, [sp, #48]
  407dd8:	str	x26, [x25]
  407ddc:	ldp	x25, x26, [sp, #64]
  407de0:	ldp	x29, x30, [sp], #112
  407de4:	ret
  407de8:	add	x2, sp, #0x68
  407dec:	mov	x1, x26
  407df0:	mov	x0, x27
  407df4:	bl	41e5f0 <wcrtomb@plt+0x1bcd0>
  407df8:	mov	x19, x0
  407dfc:	cmn	x0, #0x2
  407e00:	b.ne	407d70 <wcrtomb@plt+0x5450>  // b.any
  407e04:	mov	x19, x26
  407e08:	mov	x26, #0x0                   	// #0
  407e0c:	b	407d40 <wcrtomb@plt+0x5420>
  407e10:	mov	x2, x28
  407e14:	mov	w0, #0x5c                  	// #92
  407e18:	mov	x28, x1
  407e1c:	strb	w0, [x2], #2
  407e20:	ldrb	w0, [x27]
  407e24:	mov	x1, x2
  407e28:	b	407da0 <wcrtomb@plt+0x5480>
  407e2c:	stp	x19, x20, [sp, #16]
  407e30:	stp	x21, x22, [sp, #32]
  407e34:	stp	x23, x24, [sp, #48]
  407e38:	bl	41b778 <wcrtomb@plt+0x18e58>
  407e3c:	nop
  407e40:	sub	sp, sp, #0x210
  407e44:	stp	x29, x30, [sp]
  407e48:	mov	x29, sp
  407e4c:	stp	x19, x20, [sp, #16]
  407e50:	stp	x21, x22, [sp, #32]
  407e54:	mov	x22, #0x0                   	// #0
  407e58:	stp	x23, x24, [sp, #48]
  407e5c:	adrp	x23, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  407e60:	adrp	x24, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  407e64:	add	x23, x23, #0xde5
  407e68:	add	x24, x24, #0x8d8
  407e6c:	stp	x25, x26, [sp, #64]
  407e70:	stp	x27, x28, [sp, #80]
  407e74:	mov	x28, x0
  407e78:	mov	x27, x1
  407e7c:	stp	x0, x1, [sp, #96]
  407e80:	mov	w0, #0x1                   	// #1
  407e84:	str	xzr, [sp, #112]
  407e88:	bl	40c510 <wcrtomb@plt+0x9bf0>
  407e8c:	mov	x21, x0
  407e90:	mov	x2, x27
  407e94:	mov	x0, x28
  407e98:	mov	w1, #0xa                   	// #10
  407e9c:	bl	402770 <memchr@plt>
  407ea0:	mov	x20, x27
  407ea4:	mov	x19, x0
  407ea8:	ldrb	w0, [x23]
  407eac:	cbz	x19, 407ef4 <wcrtomb@plt+0x55d4>
  407eb0:	sub	x2, x19, x28
  407eb4:	add	x19, x19, #0x1
  407eb8:	add	x1, x2, #0x1
  407ebc:	sub	x27, x27, x1
  407ec0:	cbnz	w0, 407f44 <wcrtomb@plt+0x5624>
  407ec4:	mov	x1, x28
  407ec8:	mov	x0, x21
  407ecc:	mov	x28, x19
  407ed0:	bl	4094c0 <wcrtomb@plt+0x6ba0>
  407ed4:	mov	x2, x27
  407ed8:	mov	x0, x28
  407edc:	mov	w1, #0xa                   	// #10
  407ee0:	bl	402770 <memchr@plt>
  407ee4:	mov	x20, x27
  407ee8:	mov	x19, x0
  407eec:	ldrb	w0, [x23]
  407ef0:	cbnz	x19, 407eb0 <wcrtomb@plt+0x5590>
  407ef4:	cbz	w0, 407fa8 <wcrtomb@plt+0x5688>
  407ef8:	ldrb	w26, [x24]
  407efc:	add	x25, x27, #0x2
  407f00:	mov	x27, #0x0                   	// #0
  407f04:	ldr	x0, [sp, #112]
  407f08:	cmp	x25, x0
  407f0c:	b.hi	407f7c <wcrtomb@plt+0x565c>  // b.pmore
  407f10:	mov	x2, x20
  407f14:	add	x20, x22, x20
  407f18:	mov	x1, x28
  407f1c:	add	x0, x22, #0x1
  407f20:	bl	4022a0 <memcpy@plt>
  407f24:	strb	w26, [x20, #1]
  407f28:	mov	x2, x25
  407f2c:	mov	x1, x22
  407f30:	mov	x0, x21
  407f34:	bl	4094c0 <wcrtomb@plt+0x6ba0>
  407f38:	cbz	x19, 407fb8 <wcrtomb@plt+0x5698>
  407f3c:	mov	x28, x19
  407f40:	b	407e90 <wcrtomb@plt+0x5570>
  407f44:	ldrb	w26, [x24]
  407f48:	add	x25, x2, #0x2
  407f4c:	mov	x20, x2
  407f50:	cmp	w26, #0xa
  407f54:	b.ne	407f04 <wcrtomb@plt+0x55e4>  // b.any
  407f58:	ldr	x0, [sp, #96]
  407f5c:	cmp	x28, x0
  407f60:	b.ls	407f04 <wcrtomb@plt+0x55e4>  // b.plast
  407f64:	sub	x1, x28, #0x1
  407f68:	mov	x2, x25
  407f6c:	mov	x0, x21
  407f70:	mov	x28, x19
  407f74:	bl	4094c0 <wcrtomb@plt+0x6ba0>
  407f78:	b	407e90 <wcrtomb@plt+0x5570>
  407f7c:	mov	x0, x22
  407f80:	bl	4026b0 <free@plt>
  407f84:	add	x1, sp, #0x70
  407f88:	mov	x0, #0x0                   	// #0
  407f8c:	str	x25, [sp, #112]
  407f90:	bl	41b640 <wcrtomb@plt+0x18d20>
  407f94:	ldrb	w1, [x24]
  407f98:	mov	x22, x0
  407f9c:	strb	w1, [x0]
  407fa0:	ldrb	w26, [x24]
  407fa4:	b	407f10 <wcrtomb@plt+0x55f0>
  407fa8:	mov	x2, x27
  407fac:	mov	x1, x28
  407fb0:	mov	x0, x21
  407fb4:	bl	4094c0 <wcrtomb@plt+0x6ba0>
  407fb8:	mov	x0, x22
  407fbc:	bl	4026b0 <free@plt>
  407fc0:	mov	x0, x21
  407fc4:	bl	409990 <wcrtomb@plt+0x7070>
  407fc8:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  407fcc:	mov	x24, x0
  407fd0:	ldrb	w0, [x1, #3558]
  407fd4:	cbz	w0, 4080a8 <wcrtomb@plt+0x5788>
  407fd8:	ldp	x20, x4, [sp, #96]
  407fdc:	add	x0, sp, #0x120
  407fe0:	mov	x2, #0xf0                  	// #240
  407fe4:	mov	w1, #0x0                   	// #0
  407fe8:	str	xzr, [sp, #120]
  407fec:	add	x22, sp, #0x110
  407ff0:	stp	xzr, xzr, [sp, #272]
  407ff4:	add	x23, x20, x4
  407ff8:	bl	402510 <memset@plt>
  407ffc:	mov	x19, x20
  408000:	cmp	x20, x23
  408004:	b.cs	4080a8 <wcrtomb@plt+0x5788>  // b.hs, b.nlast
  408008:	adrp	x27, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40800c:	add	x27, x27, #0x8e0
  408010:	b	408020 <wcrtomb@plt+0x5700>
  408014:	add	x19, x19, #0x1
  408018:	cmp	x19, x23
  40801c:	b.eq	4080a8 <wcrtomb@plt+0x5788>  // b.none
  408020:	ldrb	w2, [x19]
  408024:	mov	x0, x2
  408028:	ldrb	w1, [x22, w2, sxtw]
  40802c:	cbnz	w1, 408014 <wcrtomb@plt+0x56f4>
  408030:	add	x2, x27, x2, lsl #2
  408034:	mov	w3, #0x1                   	// #1
  408038:	strb	w3, [x22, w0, sxtw]
  40803c:	add	x1, sp, #0x90
  408040:	ldr	w0, [x2, #260]
  408044:	bl	4147b8 <wcrtomb@plt+0x11e98>
  408048:	cmp	w0, #0x0
  40804c:	b.le	408014 <wcrtomb@plt+0x56f4>
  408050:	sxtw	x20, w0
  408054:	sub	w28, w0, #0x2
  408058:	sub	x20, x20, #0x3
  40805c:	sub	w0, w0, #0x1
  408060:	sub	x20, x20, x0
  408064:	sxtw	x28, w28
  408068:	add	x0, sp, #0x90
  40806c:	add	x2, sp, #0x78
  408070:	add	x1, x0, x28, lsl #2
  408074:	add	x0, sp, #0x80
  408078:	sub	x28, x28, #0x1
  40807c:	ldr	w1, [x1, #4]
  408080:	bl	402920 <wcrtomb@plt>
  408084:	mov	x2, x0
  408088:	cmp	w2, #0x1
  40808c:	add	x1, sp, #0x80
  408090:	mov	x0, x21
  408094:	sxtw	x2, w2
  408098:	b.gt	4080f0 <wcrtomb@plt+0x57d0>
  40809c:	cmp	x20, x28
  4080a0:	b.ne	408068 <wcrtomb@plt+0x5748>  // b.any
  4080a4:	b	408014 <wcrtomb@plt+0x56f4>
  4080a8:	mov	x0, x21
  4080ac:	bl	409998 <wcrtomb@plt+0x7078>
  4080b0:	mov	x0, #0x28                  	// #40
  4080b4:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4080b8:	ldr	x2, [sp, #96]
  4080bc:	ldp	x29, x30, [sp]
  4080c0:	ldp	x19, x20, [sp, #16]
  4080c4:	ldp	x25, x26, [sp, #64]
  4080c8:	ldp	x27, x28, [sp, #80]
  4080cc:	str	x2, [x0, #16]
  4080d0:	ldr	x2, [sp, #104]
  4080d4:	stp	x21, x24, [x0]
  4080d8:	str	xzr, [x0, #32]
  4080dc:	ldp	x21, x22, [sp, #32]
  4080e0:	ldp	x23, x24, [sp, #48]
  4080e4:	str	x2, [x0, #24]
  4080e8:	add	sp, sp, #0x210
  4080ec:	ret
  4080f0:	bl	4094c0 <wcrtomb@plt+0x6ba0>
  4080f4:	cmp	x28, x20
  4080f8:	b.ne	408068 <wcrtomb@plt+0x5748>  // b.any
  4080fc:	b	408014 <wcrtomb@plt+0x56f4>
  408100:	stp	x29, x30, [sp, #-192]!
  408104:	adrp	x5, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  408108:	mov	x29, sp
  40810c:	stp	x21, x22, [sp, #32]
  408110:	adrp	x22, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  408114:	stp	x25, x26, [sp, #64]
  408118:	mov	x26, x0
  40811c:	ldrb	w0, [x22, #3557]
  408120:	str	x1, [sp, #112]
  408124:	ldrb	w1, [x5, #2264]
  408128:	stp	x19, x20, [sp, #16]
  40812c:	stp	x23, x24, [sp, #48]
  408130:	mov	x24, x4
  408134:	stp	x27, x28, [sp, #80]
  408138:	str	w1, [sp, #108]
  40813c:	stp	x2, x3, [sp, #128]
  408140:	ldr	x21, [x26]
  408144:	cbnz	w0, 408418 <wcrtomb@plt+0x5af8>
  408148:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40814c:	add	x4, x1, #0x8e0
  408150:	adrp	x3, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  408154:	cmp	x24, #0x0
  408158:	ldrb	w2, [x1, #2272]
  40815c:	cset	w27, ne  // ne = any
  408160:	ldrb	w25, [x4, #2]
  408164:	ldrb	w1, [x3, #3556]
  408168:	eor	w25, w25, #0x1
  40816c:	and	w25, w25, w2
  408170:	and	w25, w25, #0xff
  408174:	orr	w1, w25, w1
  408178:	orr	w27, w27, w1
  40817c:	and	w1, w27, #0xff
  408180:	str	w1, [sp, #104]
  408184:	ldr	x1, [sp, #112]
  408188:	cmp	x24, #0x0
  40818c:	ldr	x2, [sp, #128]
  408190:	csel	x19, x24, x1, ne  // ne = any
  408194:	str	x19, [sp, #152]
  408198:	add	x20, x1, x2
  40819c:	cmp	x20, x19
  4081a0:	b.cc	4082b8 <wcrtomb@plt+0x5998>  // b.lo, b.ul, b.last
  4081a4:	ldrb	w4, [sp, #104]
  4081a8:	adrp	x2, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4081ac:	add	x2, x2, #0xde4
  4081b0:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4081b4:	add	x1, x1, #0x8e0
  4081b8:	str	x2, [sp, #96]
  4081bc:	sub	x2, x20, x19
  4081c0:	add	x3, sp, #0xa8
  4081c4:	add	x2, x2, w0, uxtb
  4081c8:	str	x1, [sp, #120]
  4081cc:	sub	x1, x19, w0, uxtb
  4081d0:	mov	x0, x21
  4081d4:	bl	40c428 <wcrtomb@plt+0x9b08>
  4081d8:	tbnz	x0, #63, 4082b8 <wcrtomb@plt+0x5998>
  4081dc:	nop
  4081e0:	ldr	x3, [sp, #184]
  4081e4:	ldrb	w5, [x22, #3557]
  4081e8:	ldr	x2, [x26, #8]
  4081ec:	ldr	x1, [sp, #168]
  4081f0:	sub	x27, x3, w5, uxtb #1
  4081f4:	cmp	x2, x1
  4081f8:	b.le	408480 <wcrtomb@plt+0x5b60>
  4081fc:	str	xzr, [sp, #160]
  408200:	add	x19, x19, x0
  408204:	cbnz	w25, 40836c <wcrtomb@plt+0x5a4c>
  408208:	ldr	x0, [sp, #96]
  40820c:	cmp	x24, #0x0
  408210:	cset	w2, ne  // ne = any
  408214:	ldrb	w0, [x0]
  408218:	eor	w1, w0, #0x1
  40821c:	tst	w2, w1
  408220:	b.ne	4084bc <wcrtomb@plt+0x5b9c>  // b.any
  408224:	ldrb	w1, [x22, #3557]
  408228:	cbnz	w1, 4084cc <wcrtomb@plt+0x5bac>
  40822c:	cbz	w0, 4084e0 <wcrtomb@plt+0x5bc0>
  408230:	ldr	x0, [sp, #160]
  408234:	cbnz	x0, 4082dc <wcrtomb@plt+0x59bc>
  408238:	ldr	w1, [sp, #108]
  40823c:	ldr	x23, [sp, #152]
  408240:	sub	x2, x19, x23
  408244:	mov	x0, x23
  408248:	bl	4026f0 <memrchr@plt>
  40824c:	cbz	x0, 408258 <wcrtomb@plt+0x5938>
  408250:	add	x23, x0, #0x1
  408254:	str	x23, [sp, #152]
  408258:	mov	x0, x23
  40825c:	mov	x2, x20
  408260:	mov	x1, x19
  408264:	bl	40cba0 <wcrtomb@plt+0xa280>
  408268:	cmp	x0, #0x0
  40826c:	cset	w0, eq  // eq = none
  408270:	cbnz	w0, 4082f4 <wcrtomb@plt+0x59d4>
  408274:	mov	x0, x19
  408278:	mov	x1, x20
  40827c:	bl	40ca28 <wcrtomb@plt+0xa108>
  408280:	add	x19, x19, x0
  408284:	str	x19, [sp, #152]
  408288:	add	x19, x19, #0x1
  40828c:	cmp	x20, x19
  408290:	b.cc	4082b8 <wcrtomb@plt+0x5998>  // b.lo, b.ul, b.last
  408294:	ldrb	w4, [sp, #104]
  408298:	sub	x2, x20, x19
  40829c:	ldrb	w0, [x22, #3557]
  4082a0:	add	x3, sp, #0xa8
  4082a4:	sub	x1, x19, w0, uxtb
  4082a8:	add	x2, x2, w0, uxtb
  4082ac:	mov	x0, x21
  4082b0:	bl	40c428 <wcrtomb@plt+0x9b08>
  4082b4:	tbz	x0, #63, 4081e0 <wcrtomb@plt+0x58c0>
  4082b8:	mov	x19, #0xffffffffffffffff    	// #-1
  4082bc:	mov	x0, x19
  4082c0:	ldp	x19, x20, [sp, #16]
  4082c4:	ldp	x21, x22, [sp, #32]
  4082c8:	ldp	x23, x24, [sp, #48]
  4082cc:	ldp	x25, x26, [sp, #64]
  4082d0:	ldp	x27, x28, [sp, #80]
  4082d4:	ldp	x29, x30, [sp], #192
  4082d8:	ret
  4082dc:	sub	x0, x19, x0
  4082e0:	mov	x1, x20
  4082e4:	bl	40caf0 <wcrtomb@plt+0xa1d0>
  4082e8:	cmp	x0, #0x0
  4082ec:	cset	w0, eq  // eq = none
  4082f0:	cbz	w0, 408274 <wcrtomb@plt+0x5954>
  4082f4:	cbnz	x24, 408320 <wcrtomb@plt+0x5a00>
  4082f8:	b	4083bc <wcrtomb@plt+0x5a9c>
  4082fc:	cbz	x27, 408274 <wcrtomb@plt+0x5954>
  408300:	sub	x2, x27, #0x1
  408304:	add	x3, sp, #0xa8
  408308:	mov	x1, x19
  40830c:	mov	x0, x21
  408310:	mov	w4, #0x1                   	// #1
  408314:	bl	40c428 <wcrtomb@plt+0x9b08>
  408318:	cbnz	x0, 408274 <wcrtomb@plt+0x5954>
  40831c:	ldr	x27, [sp, #184]
  408320:	add	x28, x19, x27
  408324:	mov	x1, x20
  408328:	mov	x0, x28
  40832c:	mov	x23, x27
  408330:	bl	40caf0 <wcrtomb@plt+0xa1d0>
  408334:	cbnz	x0, 4082fc <wcrtomb@plt+0x59dc>
  408338:	ldr	x0, [sp, #112]
  40833c:	sub	x19, x19, x0
  408340:	cbz	x24, 4083d8 <wcrtomb@plt+0x5ab8>
  408344:	ldr	x0, [sp, #136]
  408348:	ldp	x21, x22, [sp, #32]
  40834c:	str	x23, [x0]
  408350:	mov	x0, x19
  408354:	ldp	x19, x20, [sp, #16]
  408358:	ldp	x23, x24, [sp, #48]
  40835c:	ldp	x25, x26, [sp, #64]
  408360:	ldp	x27, x28, [sp, #80]
  408364:	ldp	x29, x30, [sp], #192
  408368:	ret
  40836c:	mov	x3, x20
  408370:	mov	x2, x19
  408374:	add	x1, sp, #0xa0
  408378:	add	x0, sp, #0x98
  40837c:	bl	40c850 <wcrtomb@plt+0x9f30>
  408380:	cbz	x0, 408208 <wcrtomb@plt+0x58e8>
  408384:	ldr	x19, [sp, #152]
  408388:	b	40828c <wcrtomb@plt+0x596c>
  40838c:	ldr	x0, [sp, #120]
  408390:	sub	x2, x27, #0x1
  408394:	add	x3, sp, #0xa8
  408398:	mov	x1, x19
  40839c:	mov	w4, #0x1                   	// #1
  4083a0:	ldrb	w7, [x0]
  4083a4:	mov	x0, x21
  4083a8:	cbz	w7, 408434 <wcrtomb@plt+0x5b14>
  4083ac:	cbz	x27, 408274 <wcrtomb@plt+0x5954>
  4083b0:	bl	40c428 <wcrtomb@plt+0x9b08>
  4083b4:	cbnz	x0, 408274 <wcrtomb@plt+0x5954>
  4083b8:	ldr	x27, [sp, #184]
  4083bc:	add	x28, x19, x27
  4083c0:	mov	x1, x20
  4083c4:	mov	x0, x28
  4083c8:	bl	40caf0 <wcrtomb@plt+0xa1d0>
  4083cc:	cbnz	x0, 40838c <wcrtomb@plt+0x5a6c>
  4083d0:	ldr	x0, [sp, #112]
  4083d4:	sub	x19, x19, x0
  4083d8:	ldr	w1, [sp, #108]
  4083dc:	sub	x2, x20, x28
  4083e0:	mov	x0, x28
  4083e4:	bl	402770 <memchr@plt>
  4083e8:	cmp	x0, #0x0
  4083ec:	csinc	x20, x20, x0, eq  // eq = none
  4083f0:	ldr	w1, [sp, #108]
  4083f4:	mov	x2, x19
  4083f8:	ldr	x19, [sp, #112]
  4083fc:	mov	x0, x19
  408400:	bl	4026f0 <memrchr@plt>
  408404:	cbz	x0, 408424 <wcrtomb@plt+0x5b04>
  408408:	add	x0, x0, #0x1
  40840c:	sub	x19, x0, x19
  408410:	sub	x23, x20, x0
  408414:	b	408344 <wcrtomb@plt+0x5a24>
  408418:	mov	w25, #0x0                   	// #0
  40841c:	str	wzr, [sp, #104]
  408420:	b	408184 <wcrtomb@plt+0x5864>
  408424:	mov	x0, x19
  408428:	mov	x19, #0x0                   	// #0
  40842c:	sub	x23, x20, x0
  408430:	b	408344 <wcrtomb@plt+0x5a24>
  408434:	ldr	x27, [x26, #32]
  408438:	cbz	x27, 4084e8 <wcrtomb@plt+0x5bc8>
  40843c:	ldr	w1, [sp, #108]
  408440:	sub	x2, x20, x28
  408444:	mov	x0, x28
  408448:	bl	402770 <memchr@plt>
  40844c:	mov	x23, x0
  408450:	ldr	x3, [sp, #136]
  408454:	cmp	x23, #0x0
  408458:	csinc	x23, x20, x23, eq  // eq = none
  40845c:	mov	x0, x27
  408460:	mov	x1, x19
  408464:	sub	x2, x23, x19
  408468:	mov	x4, #0x0                   	// #0
  40846c:	bl	4048e0 <wcrtomb@plt+0x1fc0>
  408470:	cmn	x0, #0x1
  408474:	b.ne	408534 <wcrtomb@plt+0x5c14>  // b.any
  408478:	sub	x19, x23, #0x1
  40847c:	b	408274 <wcrtomb@plt+0x5954>
  408480:	ldr	x0, [x26, #32]
  408484:	cbz	x0, 408510 <wcrtomb@plt+0x5bf0>
  408488:	ldp	x2, x3, [sp, #128]
  40848c:	mov	x4, x24
  408490:	ldr	x1, [sp, #112]
  408494:	bl	4048e0 <wcrtomb@plt+0x1fc0>
  408498:	mov	x19, x0
  40849c:	mov	x0, x19
  4084a0:	ldp	x19, x20, [sp, #16]
  4084a4:	ldp	x21, x22, [sp, #32]
  4084a8:	ldp	x23, x24, [sp, #48]
  4084ac:	ldp	x25, x26, [sp, #64]
  4084b0:	ldp	x27, x28, [sp, #80]
  4084b4:	ldp	x29, x30, [sp], #192
  4084b8:	ret
  4084bc:	ldr	x0, [sp, #112]
  4084c0:	mov	x23, x27
  4084c4:	sub	x19, x19, x0
  4084c8:	b	408344 <wcrtomb@plt+0x5a24>
  4084cc:	ldr	x0, [sp, #112]
  4084d0:	cmp	x24, #0x0
  4084d4:	cinc	x23, x27, eq  // eq = none
  4084d8:	sub	x19, x19, x0
  4084dc:	b	408344 <wcrtomb@plt+0x5a24>
  4084e0:	add	x28, x19, x27
  4084e4:	b	4083d0 <wcrtomb@plt+0x5ab0>
  4084e8:	add	x1, x26, #0x18
  4084ec:	add	x0, x26, #0x10
  4084f0:	bl	407cc8 <wcrtomb@plt+0x53a8>
  4084f4:	ldp	x0, x1, [x26, #16]
  4084f8:	mov	x2, #0xa46                 	// #2630
  4084fc:	movk	x2, #0x1, lsl #16
  408500:	bl	404218 <wcrtomb@plt+0x18f8>
  408504:	mov	x27, x0
  408508:	str	x0, [x26, #32]
  40850c:	b	40843c <wcrtomb@plt+0x5b1c>
  408510:	add	x1, x26, #0x18
  408514:	add	x0, x26, #0x10
  408518:	bl	407cc8 <wcrtomb@plt+0x53a8>
  40851c:	ldp	x0, x1, [x26, #16]
  408520:	mov	x2, #0xa46                 	// #2630
  408524:	movk	x2, #0x1, lsl #16
  408528:	bl	404218 <wcrtomb@plt+0x18f8>
  40852c:	str	x0, [x26, #32]
  408530:	b	408488 <wcrtomb@plt+0x5b68>
  408534:	ldr	x0, [sp, #112]
  408538:	mov	x20, x23
  40853c:	sub	x19, x19, x0
  408540:	b	4083f0 <wcrtomb@plt+0x5ad0>
  408544:	nop
  408548:	cbz	x0, 408618 <wcrtomb@plt+0x5cf8>
  40854c:	stp	x29, x30, [sp, #-48]!
  408550:	mov	x29, sp
  408554:	stp	x19, x20, [sp, #16]
  408558:	mov	x20, x0
  40855c:	mov	x19, x1
  408560:	ldr	x0, [x0]
  408564:	stp	x21, x22, [sp, #32]
  408568:	and	w22, w3, #0xff
  40856c:	mov	x21, x2
  408570:	mov	w3, w22
  408574:	bl	408548 <wcrtomb@plt+0x5c28>
  408578:	ldr	x0, [x20, #8]
  40857c:	mov	w3, w22
  408580:	mov	x2, x21
  408584:	mov	x1, x19
  408588:	bl	408548 <wcrtomb@plt+0x5c28>
  40858c:	cbz	x19, 4085c0 <wcrtomb@plt+0x5ca0>
  408590:	ldr	x3, [x19, #8]
  408594:	cbz	x3, 4085b8 <wcrtomb@plt+0x5c98>
  408598:	ldrb	w5, [x20, #24]
  40859c:	nop
  4085a0:	ldrb	w4, [x3, #24]
  4085a4:	cmp	w5, w4
  4085a8:	b.eq	4085ec <wcrtomb@plt+0x5ccc>  // b.none
  4085ac:	ldp	x4, x3, [x3]
  4085b0:	b.cc	4085d8 <wcrtomb@plt+0x5cb8>  // b.lo, b.ul, b.last
  4085b4:	cbnz	x3, 4085a0 <wcrtomb@plt+0x5c80>
  4085b8:	ldr	x19, [x19, #32]
  4085bc:	cbnz	x19, 408590 <wcrtomb@plt+0x5c70>
  4085c0:	ldr	x0, [x20, #16]
  4085c4:	str	x21, [x0, #32]
  4085c8:	ldp	x19, x20, [sp, #16]
  4085cc:	ldp	x21, x22, [sp, #32]
  4085d0:	ldp	x29, x30, [sp], #48
  4085d4:	ret
  4085d8:	mov	x3, x4
  4085dc:	cbz	x4, 4085b8 <wcrtomb@plt+0x5c98>
  4085e0:	ldrb	w4, [x3, #24]
  4085e4:	cmp	w5, w4
  4085e8:	b.ne	4085ac <wcrtomb@plt+0x5c8c>  // b.any
  4085ec:	ldr	x0, [x20, #16]
  4085f0:	ldr	x1, [x3, #16]
  4085f4:	str	x1, [x0, #32]
  4085f8:	cbnz	w22, 4085c8 <wcrtomb@plt+0x5ca8>
  4085fc:	ldr	x1, [x1]
  408600:	cbz	x1, 4085c8 <wcrtomb@plt+0x5ca8>
  408604:	ldr	x1, [x0]
  408608:	cbnz	x1, 4085c8 <wcrtomb@plt+0x5ca8>
  40860c:	mov	x1, #0xffffffffffffffff    	// #-1
  408610:	str	x1, [x0]
  408614:	b	4085c8 <wcrtomb@plt+0x5ca8>
  408618:	ret
  40861c:	nop
  408620:	cbz	x0, 40867c <wcrtomb@plt+0x5d5c>
  408624:	stp	x29, x30, [sp, #-48]!
  408628:	mov	x29, sp
  40862c:	stp	x19, x20, [sp, #16]
  408630:	mov	x19, x0
  408634:	mov	x20, x2
  408638:	ldr	x0, [x0]
  40863c:	str	x21, [sp, #32]
  408640:	mov	x21, x1
  408644:	bl	408620 <wcrtomb@plt+0x5d00>
  408648:	ldr	x0, [x19, #8]
  40864c:	mov	x1, x21
  408650:	mov	x2, x20
  408654:	bl	408620 <wcrtomb@plt+0x5d00>
  408658:	ldrb	w0, [x19, #24]
  40865c:	ldrb	w1, [x20, x0]
  408660:	cmp	x1, x21
  408664:	b.le	40866c <wcrtomb@plt+0x5d4c>
  408668:	strb	w21, [x20, x0]
  40866c:	ldp	x19, x20, [sp, #16]
  408670:	ldr	x21, [sp, #32]
  408674:	ldp	x29, x30, [sp], #48
  408678:	ret
  40867c:	ret
  408680:	cbz	x1, 408700 <wcrtomb@plt+0x5de0>
  408684:	stp	x29, x30, [sp, #-32]!
  408688:	mov	x29, sp
  40868c:	stp	x19, x20, [sp, #16]
  408690:	mov	x20, x1
  408694:	mov	x19, x0
  408698:	ldr	x1, [x1]
  40869c:	bl	408680 <wcrtomb@plt+0x5d60>
  4086a0:	ands	w0, w0, #0xff
  4086a4:	b.eq	4086e4 <wcrtomb@plt+0x5dc4>  // b.none
  4086a8:	ldr	x1, [x20, #8]
  4086ac:	mov	x0, x19
  4086b0:	bl	408680 <wcrtomb@plt+0x5d60>
  4086b4:	ands	w0, w0, #0xff
  4086b8:	b.eq	4086e4 <wcrtomb@plt+0x5dc4>  // b.none
  4086bc:	cbz	x19, 4086e0 <wcrtomb@plt+0x5dc0>
  4086c0:	ldrb	w2, [x20, #24]
  4086c4:	nop
  4086c8:	ldrb	w1, [x19, #24]
  4086cc:	cmp	w2, w1
  4086d0:	b.eq	4086e4 <wcrtomb@plt+0x5dc4>  // b.none
  4086d4:	ldp	x1, x19, [x19]
  4086d8:	b.cc	4086f0 <wcrtomb@plt+0x5dd0>  // b.lo, b.ul, b.last
  4086dc:	cbnz	x19, 4086c8 <wcrtomb@plt+0x5da8>
  4086e0:	mov	w0, #0x0                   	// #0
  4086e4:	ldp	x19, x20, [sp, #16]
  4086e8:	ldp	x29, x30, [sp], #32
  4086ec:	ret
  4086f0:	mov	x19, x1
  4086f4:	cbnz	x1, 4086c8 <wcrtomb@plt+0x5da8>
  4086f8:	mov	w0, #0x0                   	// #0
  4086fc:	b	4086e4 <wcrtomb@plt+0x5dc4>
  408700:	mov	w0, #0x1                   	// #1
  408704:	ret
  408708:	cbz	x0, 40874c <wcrtomb@plt+0x5e2c>
  40870c:	stp	x29, x30, [sp, #-32]!
  408710:	mov	x29, sp
  408714:	stp	x19, x20, [sp, #16]
  408718:	mov	x19, x0
  40871c:	mov	x20, x1
  408720:	ldr	x0, [x0]
  408724:	bl	408708 <wcrtomb@plt+0x5de8>
  408728:	ldr	x0, [x19, #8]
  40872c:	mov	x1, x20
  408730:	bl	408708 <wcrtomb@plt+0x5de8>
  408734:	ldrb	w0, [x19, #24]
  408738:	ldr	x1, [x19, #16]
  40873c:	str	x1, [x20, x0, lsl #3]
  408740:	ldp	x19, x20, [sp, #16]
  408744:	ldp	x29, x30, [sp], #32
  408748:	ret
  40874c:	ret
  408750:	stp	x29, x30, [sp, #-32]!
  408754:	mov	x29, sp
  408758:	stp	x19, x20, [sp, #16]
  40875c:	mov	x19, x0
  408760:	mov	x20, x1
  408764:	ldr	x0, [x0]
  408768:	cbz	x0, 408770 <wcrtomb@plt+0x5e50>
  40876c:	bl	408750 <wcrtomb@plt+0x5e30>
  408770:	ldr	x0, [x19, #8]
  408774:	cbz	x0, 408780 <wcrtomb@plt+0x5e60>
  408778:	mov	x1, x20
  40877c:	bl	408750 <wcrtomb@plt+0x5e30>
  408780:	ldr	x1, [x20]
  408784:	ldr	x0, [x19, #16]
  408788:	str	x0, [x1, #24]
  40878c:	str	x0, [x20]
  408790:	ldp	x19, x20, [sp, #16]
  408794:	ldp	x29, x30, [sp], #32
  408798:	ret
  40879c:	nop
  4087a0:	stp	x29, x30, [sp, #-128]!
  4087a4:	mov	x29, sp
  4087a8:	stp	x21, x22, [sp, #32]
  4087ac:	ldr	x21, [x0, #104]
  4087b0:	cbz	x21, 408900 <wcrtomb@plt+0x5fe0>
  4087b4:	stp	x27, x28, [sp, #80]
  4087b8:	cmp	x2, x21
  4087bc:	mov	x28, x2
  4087c0:	b.lt	408e18 <wcrtomb@plt+0x64f8>  // b.tstop
  4087c4:	stp	x19, x20, [sp, #16]
  4087c8:	cmp	x21, #0x1
  4087cc:	mov	x20, x0
  4087d0:	stp	x25, x26, [sp, #64]
  4087d4:	mov	x26, x1
  4087d8:	b.eq	408d34 <wcrtomb@plt+0x6414>  // b.none
  4087dc:	mov	x0, #0xc                   	// #12
  4087e0:	add	x4, x1, x21
  4087e4:	ldr	x22, [x20, #2424]
  4087e8:	mul	x2, x21, x0
  4087ec:	smulh	x0, x21, x0
  4087f0:	add	x8, x1, x28
  4087f4:	ldr	w1, [x20, #2448]
  4087f8:	add	x25, x20, #0x78
  4087fc:	stp	x23, x24, [sp, #48]
  408800:	add	x22, x22, x21
  408804:	cmp	x0, x2, asr #63
  408808:	cset	x0, ne  // ne = any
  40880c:	cmp	x2, x28
  408810:	eor	w0, w0, #0x1
  408814:	cset	w2, lt  // lt = tstop
  408818:	ldurb	w5, [x4, #-1]
  40881c:	tst	w2, w0
  408820:	ldrb	w24, [x20, #2456]
  408824:	and	w23, w1, #0xff
  408828:	ldr	x19, [x20, #2440]
  40882c:	b.ne	408a44 <wcrtomb@plt+0x6124>  // b.any
  408830:	and	x5, x5, #0xff
  408834:	add	x6, x22, #0x1
  408838:	ldrb	w1, [x25, x5]
  40883c:	nop
  408840:	sub	x0, x8, x4
  408844:	sxtw	x2, w1
  408848:	cmp	x0, w1, sxtw
  40884c:	b.lt	4088ec <wcrtomb@plt+0x5fcc>  // b.tstop
  408850:	add	x4, x4, x2
  408854:	ldurb	w0, [x4, #-1]
  408858:	ldrb	w1, [x25, x0]
  40885c:	cbnz	w1, 408840 <wcrtomb@plt+0x5f20>
  408860:	ldurb	w0, [x4, #-2]
  408864:	mov	x2, x21
  408868:	mov	x9, #0x0                   	// #0
  40886c:	cbz	x19, 4088b8 <wcrtomb@plt+0x5f98>
  408870:	and	x0, x0, #0xff
  408874:	ldrb	w0, [x19, x0]
  408878:	cmp	w0, w24
  40887c:	b.eq	408910 <wcrtomb@plt+0x5ff0>  // b.none
  408880:	ldr	x0, [x20, #2432]
  408884:	ldr	x2, [x0]
  408888:	add	x4, x4, x2
  40888c:	cmp	x4, x8
  408890:	b.hi	408840 <wcrtomb@plt+0x5f20>  // b.pmore
  408894:	ldurb	w0, [x4, #-1]
  408898:	mov	x3, #0x2                   	// #2
  40889c:	and	x0, x0, #0xff
  4088a0:	ldrb	w0, [x19, x0]
  4088a4:	cmp	w0, w23
  4088a8:	b.ne	408840 <wcrtomb@plt+0x5f20>  // b.any
  4088ac:	sub	x9, x3, #0x1
  4088b0:	ldurb	w0, [x4, #-2]
  4088b4:	cbnz	x19, 408870 <wcrtomb@plt+0x5f50>
  4088b8:	cmp	w24, w0
  4088bc:	b.eq	4089b4 <wcrtomb@plt+0x6094>  // b.none
  4088c0:	ldr	x0, [x20, #2432]
  4088c4:	ldr	x2, [x0]
  4088c8:	add	x4, x4, x2
  4088cc:	cmp	x4, x8
  4088d0:	b.hi	408840 <wcrtomb@plt+0x5f20>  // b.pmore
  4088d4:	ldurb	w0, [x4, #-1]
  4088d8:	mov	x3, #0x2                   	// #2
  4088dc:	cmp	w23, w0
  4088e0:	b.ne	408840 <wcrtomb@plt+0x5f20>  // b.any
  4088e4:	sub	x9, x3, #0x1
  4088e8:	b	4088b0 <wcrtomb@plt+0x5f90>
  4088ec:	ldp	x19, x20, [sp, #16]
  4088f0:	mov	x21, #0xffffffffffffffff    	// #-1
  4088f4:	ldp	x23, x24, [sp, #48]
  4088f8:	ldp	x25, x26, [sp, #64]
  4088fc:	ldp	x27, x28, [sp, #80]
  408900:	mov	x0, x21
  408904:	ldp	x21, x22, [sp, #32]
  408908:	ldp	x29, x30, [sp], #128
  40890c:	ret
  408910:	mov	x0, #0xfffffffffffffffd    	// #-3
  408914:	mov	x3, #0x2                   	// #2
  408918:	b	408938 <wcrtomb@plt+0x6018>
  40891c:	ldrb	w7, [x4, x0]
  408920:	ldrb	w5, [x22, x0]
  408924:	sub	x0, x0, #0x1
  408928:	ldrb	w7, [x19, x7]
  40892c:	ldrb	w5, [x19, x5]
  408930:	cmp	w7, w5
  408934:	b.ne	40898c <wcrtomb@plt+0x606c>  // b.any
  408938:	add	x3, x3, #0x1
  40893c:	cmp	x3, x2
  408940:	b.le	40891c <wcrtomb@plt+0x5ffc>
  408944:	add	x2, x2, x9
  408948:	add	x3, x2, #0x1
  40894c:	cmp	x21, x3
  408950:	b.lt	4089f0 <wcrtomb@plt+0x60d0>  // b.tstop
  408954:	mvn	x2, x2
  408958:	b	408968 <wcrtomb@plt+0x6048>
  40895c:	add	x3, x3, #0x1
  408960:	cmp	x21, x3
  408964:	b.lt	4089f0 <wcrtomb@plt+0x60d0>  // b.tstop
  408968:	ldrb	w5, [x4, x2]
  40896c:	ldrb	w0, [x22, x2]
  408970:	sub	x2, x2, #0x1
  408974:	ldrb	w5, [x19, x5]
  408978:	ldrb	w0, [x19, x0]
  40897c:	cmp	w5, w0
  408980:	b.eq	40895c <wcrtomb@plt+0x603c>  // b.none
  408984:	cmp	x21, x3
  408988:	b.lt	4089f0 <wcrtomb@plt+0x60d0>  // b.tstop
  40898c:	lsl	x0, x3, #3
  408990:	ldr	x2, [x20, #2432]
  408994:	sub	x0, x0, #0x10
  408998:	ldr	x2, [x2, x0]
  40899c:	add	x4, x4, x2
  4089a0:	cmp	x4, x8
  4089a4:	b.hi	408840 <wcrtomb@plt+0x5f20>  // b.pmore
  4089a8:	ldurb	w0, [x4, #-1]
  4089ac:	cbnz	x19, 40889c <wcrtomb@plt+0x5f7c>
  4089b0:	b	4088dc <wcrtomb@plt+0x5fbc>
  4089b4:	mov	x0, #0xfffffffffffffffd    	// #-3
  4089b8:	mov	x3, #0x2                   	// #2
  4089bc:	b	4089d4 <wcrtomb@plt+0x60b4>
  4089c0:	ldrb	w5, [x4, x0]
  4089c4:	sub	x0, x0, #0x1
  4089c8:	ldrb	w7, [x6, x0]
  4089cc:	cmp	w7, w5
  4089d0:	b.ne	40898c <wcrtomb@plt+0x606c>  // b.any
  4089d4:	add	x3, x3, #0x1
  4089d8:	cmp	x2, x3
  4089dc:	b.ge	4089c0 <wcrtomb@plt+0x60a0>  // b.tcont
  4089e0:	add	x2, x2, x9
  4089e4:	add	x3, x2, #0x1
  4089e8:	cmp	x21, x3
  4089ec:	b.ge	408a18 <wcrtomb@plt+0x60f8>  // b.tcont
  4089f0:	sub	x21, x4, x21
  4089f4:	sub	x21, x21, x26
  4089f8:	mov	x0, x21
  4089fc:	ldp	x19, x20, [sp, #16]
  408a00:	ldp	x21, x22, [sp, #32]
  408a04:	ldp	x23, x24, [sp, #48]
  408a08:	ldp	x25, x26, [sp, #64]
  408a0c:	ldp	x27, x28, [sp, #80]
  408a10:	ldp	x29, x30, [sp], #128
  408a14:	ret
  408a18:	mvn	x2, x2
  408a1c:	b	408a2c <wcrtomb@plt+0x610c>
  408a20:	add	x3, x3, #0x1
  408a24:	cmp	x21, x3
  408a28:	b.lt	4089f0 <wcrtomb@plt+0x60d0>  // b.tstop
  408a2c:	ldrb	w5, [x22, x2]
  408a30:	ldrb	w0, [x4, x2]
  408a34:	sub	x2, x2, #0x1
  408a38:	cmp	w5, w0
  408a3c:	b.eq	408a20 <wcrtomb@plt+0x6100>  // b.none
  408a40:	b	408984 <wcrtomb@plt+0x6064>
  408a44:	add	x27, x21, x21, lsl #1
  408a48:	mov	x2, x4
  408a4c:	add	x6, x22, #0x1
  408a50:	mov	x7, x8
  408a54:	lsl	x27, x27, #2
  408a58:	sub	x27, x27, x21
  408a5c:	sub	x27, x28, x27
  408a60:	add	x27, x26, x27
  408a64:	cmp	x4, x27
  408a68:	b.hi	408830 <wcrtomb@plt+0x5f10>  // b.pmore
  408a6c:	nop
  408a70:	and	x5, x5, #0xff
  408a74:	ldrb	w4, [x25, x5]
  408a78:	add	x4, x2, x4
  408a7c:	ldurb	w0, [x4, #-1]
  408a80:	ldrb	w0, [x25, x0]
  408a84:	add	x4, x4, w0, uxtb
  408a88:	cbz	w0, 408b78 <wcrtomb@plt+0x6258>
  408a8c:	ldurb	w0, [x4, #-1]
  408a90:	ldrb	w0, [x25, x0]
  408a94:	add	x4, x4, x0
  408a98:	ldurb	w0, [x4, #-1]
  408a9c:	ldrb	w0, [x25, x0]
  408aa0:	add	x4, x4, x0
  408aa4:	ldurb	w0, [x4, #-1]
  408aa8:	ldrb	w0, [x25, x0]
  408aac:	add	x4, x4, w0, uxtb
  408ab0:	cbz	w0, 408b78 <wcrtomb@plt+0x6258>
  408ab4:	ldurb	w0, [x4, #-1]
  408ab8:	ldrb	w0, [x25, x0]
  408abc:	add	x4, x4, x0
  408ac0:	ldurb	w0, [x4, #-1]
  408ac4:	ldrb	w0, [x25, x0]
  408ac8:	add	x4, x4, x0
  408acc:	ldurb	w0, [x4, #-1]
  408ad0:	ldrb	w0, [x25, x0]
  408ad4:	add	x4, x4, w0, uxtb
  408ad8:	cbz	w0, 408b78 <wcrtomb@plt+0x6258>
  408adc:	ldurb	w0, [x4, #-1]
  408ae0:	ldrb	w0, [x25, x0]
  408ae4:	add	x4, x4, x0
  408ae8:	ldurb	w0, [x4, #-1]
  408aec:	ldrb	w0, [x25, x0]
  408af0:	add	x4, x4, x0
  408af4:	sub	x2, x4, x2
  408af8:	cmp	x2, #0x7f
  408afc:	b.gt	408d80 <wcrtomb@plt+0x6460>
  408b00:	ldr	w2, [x20, #2452]
  408b04:	sub	x4, x4, #0x1
  408b08:	mov	x8, x7
  408b0c:	mov	x3, x7
  408b10:	tbz	w2, #31, 408b34 <wcrtomb@plt+0x6214>
  408b14:	b	408d88 <wcrtomb@plt+0x6468>
  408b18:	ldrb	w5, [x0], #1
  408b1c:	add	x5, x20, x5, lsl #3
  408b20:	tst	x0, #0xf
  408b24:	ldr	x5, [x5, #376]
  408b28:	cbnz	x5, 408e0c <wcrtomb@plt+0x64ec>
  408b2c:	mov	x4, x0
  408b30:	b.eq	408b44 <wcrtomb@plt+0x6224>  // b.none
  408b34:	mov	x0, x4
  408b38:	cmp	x3, x4
  408b3c:	b.hi	408b18 <wcrtomb@plt+0x61f8>  // b.pmore
  408b40:	b	4088ec <wcrtomb@plt+0x5fcc>
  408b44:	sub	x3, x3, x0
  408b48:	str	w1, [sp, #100]
  408b4c:	stp	x8, x6, [sp, #104]
  408b50:	str	x7, [sp, #120]
  408b54:	bl	417630 <wcrtomb@plt+0x14d10>
  408b58:	mov	x5, x0
  408b5c:	cbz	x0, 4088ec <wcrtomb@plt+0x5fcc>
  408b60:	ldp	x8, x6, [sp, #104]
  408b64:	add	x4, x0, #0x1
  408b68:	ldr	w1, [sp, #100]
  408b6c:	ldr	x7, [sp, #120]
  408b70:	cmp	x27, x4
  408b74:	b.ls	408e04 <wcrtomb@plt+0x64e4>  // b.plast
  408b78:	ldurb	w2, [x4, #-2]
  408b7c:	mov	x0, x21
  408b80:	mov	x5, #0x0                   	// #0
  408b84:	cbz	x19, 408bd0 <wcrtomb@plt+0x62b0>
  408b88:	and	x2, x2, #0xff
  408b8c:	ldrb	w2, [x19, x2]
  408b90:	cmp	w2, w24
  408b94:	b.eq	408c20 <wcrtomb@plt+0x6300>  // b.none
  408b98:	ldr	x0, [x20, #2432]
  408b9c:	ldr	x0, [x0]
  408ba0:	add	x4, x4, x0
  408ba4:	cmp	x27, x4
  408ba8:	ldurb	w5, [x4, #-1]
  408bac:	b.cc	408d2c <wcrtomb@plt+0x640c>  // b.lo, b.ul, b.last
  408bb0:	mov	x3, #0x2                   	// #2
  408bb4:	and	x5, x5, #0xff
  408bb8:	ldrb	w2, [x19, x5]
  408bbc:	cmp	w2, w23
  408bc0:	b.ne	408c00 <wcrtomb@plt+0x62e0>  // b.any
  408bc4:	ldurb	w2, [x4, #-2]
  408bc8:	sub	x5, x3, #0x1
  408bcc:	cbnz	x19, 408b88 <wcrtomb@plt+0x6268>
  408bd0:	cmp	w24, w2
  408bd4:	b.eq	408cc4 <wcrtomb@plt+0x63a4>  // b.none
  408bd8:	ldr	x0, [x20, #2432]
  408bdc:	ldr	x0, [x0]
  408be0:	add	x4, x4, x0
  408be4:	cmp	x27, x4
  408be8:	ldurb	w5, [x4, #-1]
  408bec:	b.cc	408d2c <wcrtomb@plt+0x640c>  // b.lo, b.ul, b.last
  408bf0:	mov	x3, #0x2                   	// #2
  408bf4:	cmp	w23, w5
  408bf8:	b.eq	408bc4 <wcrtomb@plt+0x62a4>  // b.none
  408bfc:	and	x5, x5, #0xff
  408c00:	ldrb	w2, [x25, x5]
  408c04:	add	x2, x4, x2
  408c08:	ldurb	w5, [x2, #-1]
  408c0c:	cmp	x27, x2
  408c10:	b.cs	408a70 <wcrtomb@plt+0x6150>  // b.hs, b.nlast
  408c14:	add	x8, x26, x28
  408c18:	mov	x4, x2
  408c1c:	b	408830 <wcrtomb@plt+0x5f10>
  408c20:	mov	x2, #0xfffffffffffffffd    	// #-3
  408c24:	mov	x3, #0x2                   	// #2
  408c28:	b	408c48 <wcrtomb@plt+0x6328>
  408c2c:	ldrb	w9, [x4, x2]
  408c30:	ldrb	w8, [x22, x2]
  408c34:	sub	x2, x2, #0x1
  408c38:	ldrb	w9, [x19, x9]
  408c3c:	ldrb	w8, [x19, x8]
  408c40:	cmp	w9, w8
  408c44:	b.ne	408c9c <wcrtomb@plt+0x637c>  // b.any
  408c48:	add	x3, x3, #0x1
  408c4c:	cmp	x3, x0
  408c50:	b.le	408c2c <wcrtomb@plt+0x630c>
  408c54:	add	x5, x0, x5
  408c58:	add	x3, x5, #0x1
  408c5c:	cmp	x21, x3
  408c60:	b.lt	4089f0 <wcrtomb@plt+0x60d0>  // b.tstop
  408c64:	mvn	x5, x5
  408c68:	b	408c78 <wcrtomb@plt+0x6358>
  408c6c:	add	x3, x3, #0x1
  408c70:	cmp	x21, x3
  408c74:	b.lt	4089f0 <wcrtomb@plt+0x60d0>  // b.tstop
  408c78:	ldrb	w2, [x4, x5]
  408c7c:	ldrb	w0, [x22, x5]
  408c80:	sub	x5, x5, #0x1
  408c84:	ldrb	w2, [x19, x2]
  408c88:	ldrb	w0, [x19, x0]
  408c8c:	cmp	w2, w0
  408c90:	b.eq	408c6c <wcrtomb@plt+0x634c>  // b.none
  408c94:	cmp	x21, x3
  408c98:	b.lt	4089f0 <wcrtomb@plt+0x60d0>  // b.tstop
  408c9c:	lsl	x0, x3, #3
  408ca0:	ldr	x2, [x20, #2432]
  408ca4:	sub	x0, x0, #0x10
  408ca8:	ldr	x0, [x2, x0]
  408cac:	add	x4, x4, x0
  408cb0:	cmp	x27, x4
  408cb4:	ldurb	w5, [x4, #-1]
  408cb8:	b.cc	408d2c <wcrtomb@plt+0x640c>  // b.lo, b.ul, b.last
  408cbc:	cbnz	x19, 408bb4 <wcrtomb@plt+0x6294>
  408cc0:	b	408bf4 <wcrtomb@plt+0x62d4>
  408cc4:	mov	x2, #0xfffffffffffffffd    	// #-3
  408cc8:	mov	x3, #0x2                   	// #2
  408ccc:	b	408ce4 <wcrtomb@plt+0x63c4>
  408cd0:	ldrb	w8, [x4, x2]
  408cd4:	sub	x2, x2, #0x1
  408cd8:	ldrb	w9, [x6, x2]
  408cdc:	cmp	w9, w8
  408ce0:	b.ne	408c9c <wcrtomb@plt+0x637c>  // b.any
  408ce4:	add	x3, x3, #0x1
  408ce8:	cmp	x0, x3
  408cec:	b.ge	408cd0 <wcrtomb@plt+0x63b0>  // b.tcont
  408cf0:	add	x5, x0, x5
  408cf4:	add	x3, x5, #0x1
  408cf8:	cmp	x21, x3
  408cfc:	b.lt	4089f0 <wcrtomb@plt+0x60d0>  // b.tstop
  408d00:	mvn	x5, x5
  408d04:	b	408d14 <wcrtomb@plt+0x63f4>
  408d08:	add	x3, x3, #0x1
  408d0c:	cmp	x21, x3
  408d10:	b.lt	4089f0 <wcrtomb@plt+0x60d0>  // b.tstop
  408d14:	ldrb	w2, [x22, x5]
  408d18:	ldrb	w0, [x4, x5]
  408d1c:	sub	x5, x5, #0x1
  408d20:	cmp	w2, w0
  408d24:	b.eq	408d08 <wcrtomb@plt+0x63e8>  // b.none
  408d28:	b	408c94 <wcrtomb@plt+0x6374>
  408d2c:	add	x8, x26, x28
  408d30:	b	408830 <wcrtomb@plt+0x5f10>
  408d34:	add	x28, x1, x2
  408d38:	ldr	w2, [x20, #2452]
  408d3c:	mov	x0, x1
  408d40:	tbz	w2, #31, 408d64 <wcrtomb@plt+0x6444>
  408d44:	b	408dd8 <wcrtomb@plt+0x64b8>
  408d48:	ldrb	w1, [x0]
  408d4c:	add	x1, x20, x1, lsl #3
  408d50:	ldr	x1, [x1, #376]
  408d54:	cbnz	x1, 408dc4 <wcrtomb@plt+0x64a4>
  408d58:	add	x0, x0, #0x1
  408d5c:	tst	x0, #0xf
  408d60:	b.eq	408db4 <wcrtomb@plt+0x6494>  // b.none
  408d64:	cmp	x28, x0
  408d68:	b.hi	408d48 <wcrtomb@plt+0x6428>  // b.pmore
  408d6c:	mov	x21, #0xffffffffffffffff    	// #-1
  408d70:	ldp	x19, x20, [sp, #16]
  408d74:	ldp	x25, x26, [sp, #64]
  408d78:	ldp	x27, x28, [sp, #80]
  408d7c:	b	408900 <wcrtomb@plt+0x5fe0>
  408d80:	mov	x2, x4
  408d84:	b	408c08 <wcrtomb@plt+0x62e8>
  408d88:	cmp	x4, x7
  408d8c:	b.cs	4088ec <wcrtomb@plt+0x5fcc>  // b.hs, b.nlast
  408d90:	ldrb	w2, [x4]
  408d94:	mov	x5, x4
  408d98:	add	x4, x4, #0x1
  408d9c:	cmp	x3, x4
  408da0:	add	x2, x20, x2, lsl #3
  408da4:	ldr	x2, [x2, #376]
  408da8:	cbnz	x2, 408b70 <wcrtomb@plt+0x6250>
  408dac:	b.hi	408d90 <wcrtomb@plt+0x6470>  // b.pmore
  408db0:	b	4088ec <wcrtomb@plt+0x5fcc>
  408db4:	ldr	w1, [x20, #2448]
  408db8:	sub	x3, x28, x0
  408dbc:	bl	417630 <wcrtomb@plt+0x14d10>
  408dc0:	cbz	x0, 408d6c <wcrtomb@plt+0x644c>
  408dc4:	sub	x21, x0, x26
  408dc8:	ldp	x19, x20, [sp, #16]
  408dcc:	ldp	x25, x26, [sp, #64]
  408dd0:	ldp	x27, x28, [sp, #80]
  408dd4:	b	408900 <wcrtomb@plt+0x5fe0>
  408dd8:	cmp	x1, x28
  408ddc:	b.cc	408df0 <wcrtomb@plt+0x64d0>  // b.lo, b.ul, b.last
  408de0:	b	408d6c <wcrtomb@plt+0x644c>
  408de4:	add	x0, x0, #0x1
  408de8:	cmp	x28, x0
  408dec:	b.eq	408d6c <wcrtomb@plt+0x644c>  // b.none
  408df0:	ldrb	w1, [x0]
  408df4:	add	x1, x20, x1, lsl #3
  408df8:	ldr	x1, [x1, #376]
  408dfc:	cbz	x1, 408de4 <wcrtomb@plt+0x64c4>
  408e00:	b	408dc4 <wcrtomb@plt+0x64a4>
  408e04:	ldrb	w5, [x5]
  408e08:	b	408830 <wcrtomb@plt+0x5f10>
  408e0c:	mov	x5, x4
  408e10:	mov	x4, x0
  408e14:	b	408b70 <wcrtomb@plt+0x6250>
  408e18:	mov	x21, #0xffffffffffffffff    	// #-1
  408e1c:	ldp	x27, x28, [sp, #80]
  408e20:	b	408900 <wcrtomb@plt+0x5fe0>
  408e24:	nop
  408e28:	stp	x29, x30, [sp, #-32]!
  408e2c:	mov	x29, sp
  408e30:	stp	x19, x20, [sp, #16]
  408e34:	mov	x19, x3
  408e38:	mov	x20, x0
  408e3c:	bl	4087a0 <wcrtomb@plt+0x5e80>
  408e40:	tbnz	x0, #63, 408e50 <wcrtomb@plt+0x6530>
  408e44:	ldr	x1, [x20, #104]
  408e48:	stp	xzr, x0, [x19]
  408e4c:	str	x1, [x19, #16]
  408e50:	ldp	x19, x20, [sp, #16]
  408e54:	ldp	x29, x30, [sp], #32
  408e58:	ret
  408e5c:	nop
  408e60:	stp	x29, x30, [sp, #-80]!
  408e64:	mov	x29, sp
  408e68:	stp	x23, x24, [sp, #48]
  408e6c:	and	w24, w4, #0xff
  408e70:	ldr	x23, [x0, #2440]
  408e74:	stp	x19, x20, [sp, #16]
  408e78:	mov	x20, x0
  408e7c:	ldr	x0, [x0, #104]
  408e80:	stp	x21, x22, [sp, #32]
  408e84:	mov	x21, x1
  408e88:	mov	x22, x3
  408e8c:	cmp	x2, x0
  408e90:	cbz	x23, 4090a8 <wcrtomb@plt+0x6788>
  408e94:	b.lt	4091d4 <wcrtomb@plt+0x68b4>  // b.tstop
  408e98:	ldr	x5, [x20, #96]
  408e9c:	add	x19, x1, x2
  408ea0:	ldr	x2, [x5]
  408ea4:	cbz	x2, 408f48 <wcrtomb@plt+0x6628>
  408ea8:	mov	x3, x1
  408eac:	mov	x6, x5
  408eb0:	cmn	x2, #0x1
  408eb4:	b.ne	408ec8 <wcrtomb@plt+0x65a8>  // b.any
  408eb8:	ldr	x6, [x6, #32]
  408ebc:	ldr	x2, [x6]
  408ec0:	cmn	x2, #0x1
  408ec4:	b.eq	408eb8 <wcrtomb@plt+0x6598>  // b.none
  408ec8:	ldr	x4, [x6, #40]
  408ecc:	sub	x0, x3, x4
  408ed0:	cbz	w24, 408f24 <wcrtomb@plt+0x6604>
  408ed4:	cmp	x19, x3
  408ed8:	b.ls	408f24 <wcrtomb@plt+0x6604>  // b.plast
  408edc:	nop
  408ee0:	ldrb	w1, [x3]
  408ee4:	ldrb	w7, [x23, x1]
  408ee8:	ldr	x2, [x5, #8]
  408eec:	cbz	x2, 408f08 <wcrtomb@plt+0x65e8>
  408ef0:	ldrb	w1, [x2, #24]
  408ef4:	cmp	w7, w1
  408ef8:	b.eq	409084 <wcrtomb@plt+0x6764>  // b.none
  408efc:	ldp	x1, x2, [x2]
  408f00:	b.cc	409070 <wcrtomb@plt+0x6750>  // b.lo, b.ul, b.last
  408f04:	cbnz	x2, 408ef0 <wcrtomb@plt+0x65d0>
  408f08:	ldr	x5, [x5, #32]
  408f0c:	ldr	x4, [x6, #40]
  408f10:	cbz	x5, 408f20 <wcrtomb@plt+0x6600>
  408f14:	ldr	x1, [x5, #40]
  408f18:	cmp	x1, x4
  408f1c:	b.ge	408ee8 <wcrtomb@plt+0x65c8>  // b.tcont
  408f20:	ldr	x2, [x6]
  408f24:	sub	x0, x0, x21
  408f28:	lsr	x2, x2, #1
  408f2c:	stp	x2, x0, [x22]
  408f30:	str	x4, [x22, #16]
  408f34:	ldp	x19, x20, [sp, #16]
  408f38:	ldp	x21, x22, [sp, #32]
  408f3c:	ldp	x23, x24, [sp, #48]
  408f40:	ldp	x29, x30, [sp], #80
  408f44:	ret
  408f48:	str	x25, [sp, #64]
  408f4c:	mov	x0, x1
  408f50:	ldr	w25, [x20, #2448]
  408f54:	tbnz	w25, #31, 409038 <wcrtomb@plt+0x6718>
  408f58:	ldr	w2, [x20, #2452]
  408f5c:	tbz	w2, #31, 409028 <wcrtomb@plt+0x6708>
  408f60:	cmp	x19, x0
  408f64:	b.hi	408f70 <wcrtomb@plt+0x6650>  // b.pmore
  408f68:	b	408ff4 <wcrtomb@plt+0x66d4>
  408f6c:	b.eq	408ff4 <wcrtomb@plt+0x66d4>  // b.none
  408f70:	ldrb	w3, [x0], #1
  408f74:	cmp	x19, x0
  408f78:	add	x1, x20, w3, sxtw #3
  408f7c:	ldr	x2, [x1, #376]
  408f80:	cbz	x2, 408f6c <wcrtomb@plt+0x664c>
  408f84:	and	x3, x3, #0xff
  408f88:	ldrb	w1, [x23, x3]
  408f8c:	add	x1, x20, x1, lsl #3
  408f90:	ldr	x5, [x1, #376]
  408f94:	ldr	x2, [x5]
  408f98:	cbnz	x2, 409308 <wcrtomb@plt+0x69e8>
  408f9c:	cmp	x19, x0
  408fa0:	b.ls	408ff4 <wcrtomb@plt+0x66d4>  // b.plast
  408fa4:	nop
  408fa8:	mov	x3, x0
  408fac:	ldrb	w4, [x0], #1
  408fb0:	ldr	x2, [x5, #8]
  408fb4:	ldrb	w6, [x23, x4]
  408fb8:	ldrb	w4, [x2, #24]
  408fbc:	cmp	w6, w4
  408fc0:	b.eq	408fe0 <wcrtomb@plt+0x66c0>  // b.none
  408fc4:	ldp	x4, x2, [x2]
  408fc8:	b.cs	409054 <wcrtomb@plt+0x6734>  // b.hs, b.nlast
  408fcc:	cbz	x4, 409058 <wcrtomb@plt+0x6738>
  408fd0:	mov	x2, x4
  408fd4:	ldrb	w4, [x2, #24]
  408fd8:	cmp	w6, w4
  408fdc:	b.ne	408fc4 <wcrtomb@plt+0x66a4>  // b.any
  408fe0:	ldr	x5, [x2, #16]
  408fe4:	ldr	x2, [x5]
  408fe8:	cbnz	x2, 409308 <wcrtomb@plt+0x69e8>
  408fec:	cmp	x19, x0
  408ff0:	b.ne	408fa8 <wcrtomb@plt+0x6688>  // b.any
  408ff4:	mov	x0, #0xffffffffffffffff    	// #-1
  408ff8:	ldp	x19, x20, [sp, #16]
  408ffc:	ldp	x21, x22, [sp, #32]
  409000:	ldp	x23, x24, [sp, #48]
  409004:	ldr	x25, [sp, #64]
  409008:	ldp	x29, x30, [sp], #80
  40900c:	ret
  409010:	ldrb	w3, [x0], #1
  409014:	add	x4, x20, w3, sxtw #3
  409018:	tst	x0, #0xf
  40901c:	ldr	x4, [x4, #376]
  409020:	cbnz	x4, 408f84 <wcrtomb@plt+0x6664>
  409024:	b.eq	4092c0 <wcrtomb@plt+0x69a0>  // b.none
  409028:	cmp	x19, x0
  40902c:	b.hi	409010 <wcrtomb@plt+0x66f0>  // b.pmore
  409030:	b	408ff4 <wcrtomb@plt+0x66d4>
  409034:	b.ls	408ff4 <wcrtomb@plt+0x66d4>  // b.plast
  409038:	ldrb	w1, [x0], #1
  40903c:	cmp	x19, x0
  409040:	ldrb	w2, [x23, x1]
  409044:	add	x2, x20, x2, lsl #3
  409048:	ldr	x5, [x2, #376]
  40904c:	cbz	x5, 409034 <wcrtomb@plt+0x6714>
  409050:	b	408f94 <wcrtomb@plt+0x6674>
  409054:	cbnz	x2, 408fb8 <wcrtomb@plt+0x6698>
  409058:	ldr	x5, [x5, #32]
  40905c:	cbz	x5, 4092e8 <wcrtomb@plt+0x69c8>
  409060:	ldr	x2, [x5]
  409064:	cbnz	x2, 409300 <wcrtomb@plt+0x69e0>
  409068:	ldr	x2, [x5, #8]
  40906c:	b	408fb8 <wcrtomb@plt+0x6698>
  409070:	mov	x2, x1
  409074:	cbz	x1, 408f08 <wcrtomb@plt+0x65e8>
  409078:	ldrb	w1, [x2, #24]
  40907c:	cmp	w7, w1
  409080:	b.ne	408efc <wcrtomb@plt+0x65dc>  // b.any
  409084:	ldr	x5, [x2, #16]
  409088:	add	x3, x3, #0x1
  40908c:	ldr	x1, [x5]
  409090:	cbnz	x1, 409160 <wcrtomb@plt+0x6840>
  409094:	cmp	x19, x3
  409098:	b.ne	408ee0 <wcrtomb@plt+0x65c0>  // b.any
  40909c:	ldr	x2, [x6]
  4090a0:	ldr	x4, [x6, #40]
  4090a4:	b	408f24 <wcrtomb@plt+0x6604>
  4090a8:	b.lt	4091d4 <wcrtomb@plt+0x68b4>  // b.tstop
  4090ac:	ldr	x5, [x20, #96]
  4090b0:	add	x19, x1, x2
  4090b4:	ldr	x2, [x5]
  4090b8:	cbz	x2, 40919c <wcrtomb@plt+0x687c>
  4090bc:	mov	x4, x1
  4090c0:	mov	x3, x5
  4090c4:	cmn	x2, #0x1
  4090c8:	b.ne	4090e0 <wcrtomb@plt+0x67c0>  // b.any
  4090cc:	nop
  4090d0:	ldr	x3, [x3, #32]
  4090d4:	ldr	x2, [x3]
  4090d8:	cmn	x2, #0x1
  4090dc:	b.eq	4090d0 <wcrtomb@plt+0x67b0>  // b.none
  4090e0:	ldr	x1, [x3, #40]
  4090e4:	sub	x0, x4, x1
  4090e8:	cbz	w24, 40913c <wcrtomb@plt+0x681c>
  4090ec:	cmp	x19, x4
  4090f0:	b.ls	40913c <wcrtomb@plt+0x681c>  // b.plast
  4090f4:	nop
  4090f8:	ldrb	w6, [x4]
  4090fc:	nop
  409100:	ldr	x1, [x5, #8]
  409104:	cbz	x1, 409120 <wcrtomb@plt+0x6800>
  409108:	ldrb	w2, [x1, #24]
  40910c:	cmp	w6, w2
  409110:	b.eq	409280 <wcrtomb@plt+0x6960>  // b.none
  409114:	ldp	x2, x1, [x1]
  409118:	b.cc	40926c <wcrtomb@plt+0x694c>  // b.lo, b.ul, b.last
  40911c:	cbnz	x1, 409108 <wcrtomb@plt+0x67e8>
  409120:	ldr	x5, [x5, #32]
  409124:	ldr	x1, [x3, #40]
  409128:	cbz	x5, 409138 <wcrtomb@plt+0x6818>
  40912c:	ldr	x2, [x5, #40]
  409130:	cmp	x2, x1
  409134:	b.ge	409100 <wcrtomb@plt+0x67e0>  // b.tcont
  409138:	ldr	x2, [x3]
  40913c:	sub	x0, x0, x21
  409140:	lsr	x2, x2, #1
  409144:	stp	x2, x0, [x22]
  409148:	str	x1, [x22, #16]
  40914c:	ldp	x19, x20, [sp, #16]
  409150:	ldp	x21, x22, [sp, #32]
  409154:	ldp	x23, x24, [sp, #48]
  409158:	ldp	x29, x30, [sp], #80
  40915c:	ret
  409160:	cmn	x1, #0x1
  409164:	mov	x2, x5
  409168:	b.ne	409180 <wcrtomb@plt+0x6860>  // b.any
  40916c:	nop
  409170:	ldr	x2, [x2, #32]
  409174:	ldr	x1, [x2]
  409178:	cmn	x1, #0x1
  40917c:	b.eq	409170 <wcrtomb@plt+0x6850>  // b.none
  409180:	ldr	x4, [x2, #40]
  409184:	sub	x4, x3, x4
  409188:	cmp	x4, x0
  40918c:	csel	x1, x0, x4, hi  // hi = pmore
  409190:	csel	x6, x6, x2, hi  // hi = pmore
  409194:	mov	x0, x1
  409198:	b	409094 <wcrtomb@plt+0x6774>
  40919c:	ldr	w23, [x20, #2448]
  4091a0:	mov	x0, x1
  4091a4:	tbnz	w23, #31, 4091f0 <wcrtomb@plt+0x68d0>
  4091a8:	ldr	w2, [x20, #2452]
  4091ac:	tbz	w2, #31, 4091cc <wcrtomb@plt+0x68ac>
  4091b0:	b	40936c <wcrtomb@plt+0x6a4c>
  4091b4:	ldrb	w3, [x0], #1
  4091b8:	add	x3, x20, x3, lsl #3
  4091bc:	tst	x0, #0xf
  4091c0:	ldr	x5, [x3, #376]
  4091c4:	cbnz	x5, 409208 <wcrtomb@plt+0x68e8>
  4091c8:	b.eq	40934c <wcrtomb@plt+0x6a2c>  // b.none
  4091cc:	cmp	x19, x0
  4091d0:	b.hi	4091b4 <wcrtomb@plt+0x6894>  // b.pmore
  4091d4:	mov	x0, #0xffffffffffffffff    	// #-1
  4091d8:	ldp	x19, x20, [sp, #16]
  4091dc:	ldp	x21, x22, [sp, #32]
  4091e0:	ldp	x23, x24, [sp, #48]
  4091e4:	ldp	x29, x30, [sp], #80
  4091e8:	ret
  4091ec:	b.ls	4091d4 <wcrtomb@plt+0x68b4>  // b.plast
  4091f0:	ldrb	w2, [x0], #1
  4091f4:	cmp	x19, x0
  4091f8:	add	x2, x20, x2, lsl #3
  4091fc:	ldr	x5, [x2, #376]
  409200:	cbz	x5, 4091ec <wcrtomb@plt+0x68cc>
  409204:	nop
  409208:	ldr	x2, [x5]
  40920c:	cbnz	x2, 4093b0 <wcrtomb@plt+0x6a90>
  409210:	cmp	x19, x0
  409214:	b.ls	4091d4 <wcrtomb@plt+0x68b4>  // b.plast
  409218:	mov	x4, x0
  40921c:	ldrb	w6, [x0], #1
  409220:	ldr	x2, [x5, #8]
  409224:	nop
  409228:	ldrb	w3, [x2, #24]
  40922c:	cmp	w6, w3
  409230:	b.eq	409250 <wcrtomb@plt+0x6930>  // b.none
  409234:	ldp	x3, x2, [x2]
  409238:	b.cs	4092a4 <wcrtomb@plt+0x6984>  // b.hs, b.nlast
  40923c:	cbz	x3, 4092a8 <wcrtomb@plt+0x6988>
  409240:	mov	x2, x3
  409244:	ldrb	w3, [x2, #24]
  409248:	cmp	w6, w3
  40924c:	b.ne	409234 <wcrtomb@plt+0x6914>  // b.any
  409250:	ldr	x5, [x2, #16]
  409254:	ldr	x2, [x5]
  409258:	cbnz	x2, 4093b0 <wcrtomb@plt+0x6a90>
  40925c:	cmp	x19, x0
  409260:	b.ne	409218 <wcrtomb@plt+0x68f8>  // b.any
  409264:	mov	x0, #0xffffffffffffffff    	// #-1
  409268:	b	4091d8 <wcrtomb@plt+0x68b8>
  40926c:	mov	x1, x2
  409270:	cbz	x2, 409120 <wcrtomb@plt+0x6800>
  409274:	ldrb	w2, [x1, #24]
  409278:	cmp	w6, w2
  40927c:	b.ne	409114 <wcrtomb@plt+0x67f4>  // b.any
  409280:	ldr	x5, [x1, #16]
  409284:	add	x4, x4, #0x1
  409288:	ldr	x1, [x5]
  40928c:	cbnz	x1, 409314 <wcrtomb@plt+0x69f4>
  409290:	cmp	x19, x4
  409294:	b.ne	4090f8 <wcrtomb@plt+0x67d8>  // b.any
  409298:	ldr	x2, [x3]
  40929c:	ldr	x1, [x3, #40]
  4092a0:	b	40913c <wcrtomb@plt+0x681c>
  4092a4:	cbnz	x2, 409228 <wcrtomb@plt+0x6908>
  4092a8:	ldr	x5, [x5, #32]
  4092ac:	cbz	x5, 409394 <wcrtomb@plt+0x6a74>
  4092b0:	ldr	x2, [x5]
  4092b4:	cbnz	x2, 4090c0 <wcrtomb@plt+0x67a0>
  4092b8:	ldr	x2, [x5, #8]
  4092bc:	b	409228 <wcrtomb@plt+0x6908>
  4092c0:	sub	x3, x19, x0
  4092c4:	mov	w1, w25
  4092c8:	bl	417630 <wcrtomb@plt+0x14d10>
  4092cc:	cbz	x0, 408ff4 <wcrtomb@plt+0x66d4>
  4092d0:	ldrb	w3, [x0], #1
  4092d4:	and	x3, x3, #0xff
  4092d8:	ldrb	w1, [x23, x3]
  4092dc:	add	x1, x20, x1, lsl #3
  4092e0:	ldr	x5, [x1, #376]
  4092e4:	b	408f94 <wcrtomb@plt+0x6674>
  4092e8:	add	x6, x20, w6, sxtw #3
  4092ec:	ldr	x5, [x6, #376]
  4092f0:	cbnz	x5, 408fe4 <wcrtomb@plt+0x66c4>
  4092f4:	cmp	x19, x0
  4092f8:	b.hi	408f54 <wcrtomb@plt+0x6634>  // b.pmore
  4092fc:	b	408ff4 <wcrtomb@plt+0x66d4>
  409300:	ldr	x25, [sp, #64]
  409304:	b	408eac <wcrtomb@plt+0x658c>
  409308:	mov	x3, x0
  40930c:	ldr	x25, [sp, #64]
  409310:	b	408eac <wcrtomb@plt+0x658c>
  409314:	cmn	x1, #0x1
  409318:	mov	x1, x5
  40931c:	b.ne	409330 <wcrtomb@plt+0x6a10>  // b.any
  409320:	ldr	x1, [x1, #32]
  409324:	ldr	x2, [x1]
  409328:	cmn	x2, #0x1
  40932c:	b.eq	409320 <wcrtomb@plt+0x6a00>  // b.none
  409330:	ldr	x2, [x1, #40]
  409334:	sub	x2, x4, x2
  409338:	cmp	x2, x0
  40933c:	csel	x6, x0, x2, hi  // hi = pmore
  409340:	csel	x3, x3, x1, hi  // hi = pmore
  409344:	mov	x0, x6
  409348:	b	409290 <wcrtomb@plt+0x6970>
  40934c:	sub	x3, x19, x0
  409350:	mov	w1, w23
  409354:	bl	417630 <wcrtomb@plt+0x14d10>
  409358:	cbz	x0, 4091d4 <wcrtomb@plt+0x68b4>
  40935c:	ldrb	w1, [x0], #1
  409360:	add	x1, x20, x1, lsl #3
  409364:	ldr	x5, [x1, #376]
  409368:	b	409208 <wcrtomb@plt+0x68e8>
  40936c:	cmp	x19, x0
  409370:	b.hi	40937c <wcrtomb@plt+0x6a5c>  // b.pmore
  409374:	b	4091d4 <wcrtomb@plt+0x68b4>
  409378:	b.eq	4091d4 <wcrtomb@plt+0x68b4>  // b.none
  40937c:	ldrb	w2, [x0], #1
  409380:	cmp	x19, x0
  409384:	add	x2, x20, x2, lsl #3
  409388:	ldr	x5, [x2, #376]
  40938c:	cbz	x5, 409378 <wcrtomb@plt+0x6a58>
  409390:	b	409208 <wcrtomb@plt+0x68e8>
  409394:	add	x6, x20, w6, sxtw #3
  409398:	ldr	x5, [x6, #376]
  40939c:	cbnz	x5, 409254 <wcrtomb@plt+0x6934>
  4093a0:	cmp	x19, x0
  4093a4:	b.hi	4091a4 <wcrtomb@plt+0x6884>  // b.pmore
  4093a8:	mov	x0, #0xffffffffffffffff    	// #-1
  4093ac:	b	4091d8 <wcrtomb@plt+0x68b8>
  4093b0:	mov	x4, x0
  4093b4:	b	4090c0 <wcrtomb@plt+0x67a0>
  4093b8:	stp	x29, x30, [sp, #-32]!
  4093bc:	mov	x29, sp
  4093c0:	stp	x19, x20, [sp, #16]
  4093c4:	mov	x20, x0
  4093c8:	mov	x0, #0x9a8                 	// #2472
  4093cc:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4093d0:	mov	x19, x0
  4093d4:	mov	x2, #0x0                   	// #0
  4093d8:	mov	x1, #0x0                   	// #0
  4093dc:	adrp	x4, 402000 <mbrtowc@plt-0x290>
  4093e0:	adrp	x3, 41b000 <wcrtomb@plt+0x186e0>
  4093e4:	add	x4, x4, #0x6b0
  4093e8:	add	x3, x3, #0x5c0
  4093ec:	bl	41e6e0 <_obstack_begin@@Base>
  4093f0:	str	xzr, [x19, #88]
  4093f4:	ldp	x1, x0, [x19, #24]
  4093f8:	sub	x2, x0, x1
  4093fc:	cmp	x2, #0x3f
  409400:	b.ls	40948c <wcrtomb@plt+0x6b6c>  // b.plast
  409404:	ldr	x3, [x19, #16]
  409408:	add	x1, x1, #0x40
  40940c:	cmp	x1, x3
  409410:	b.eq	4094ac <wcrtomb@plt+0x6b8c>  // b.none
  409414:	ldr	x2, [x19, #48]
  409418:	ldr	x4, [x19, #8]
  40941c:	add	x1, x1, x2
  409420:	bic	x1, x1, x2
  409424:	str	x1, [x19, #24]
  409428:	sub	x2, x1, x4
  40942c:	sub	x4, x0, x4
  409430:	cmp	x2, x4
  409434:	b.ls	409440 <wcrtomb@plt+0x6b20>  // b.plast
  409438:	mov	x1, x0
  40943c:	str	x0, [x19, #24]
  409440:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  409444:	str	x1, [x19, #16]
  409448:	movi	v0.4s, #0x0
  40944c:	str	x3, [x19, #96]
  409450:	ldr	q1, [x0, #1008]
  409454:	str	xzr, [x3]
  409458:	mov	x0, x19
  40945c:	adrp	x1, 408000 <wcrtomb@plt+0x56e0>
  409460:	stur	q0, [x3, #8]
  409464:	add	x1, x1, #0xe60
  409468:	stur	q0, [x3, #24]
  40946c:	stur	q0, [x3, #40]
  409470:	stur	q1, [x19, #104]
  409474:	str	xzr, [x19, #2424]
  409478:	str	x20, [x19, #2440]
  40947c:	str	x1, [x19, #2464]
  409480:	ldp	x19, x20, [sp, #16]
  409484:	ldp	x29, x30, [sp], #32
  409488:	ret
  40948c:	mov	x0, x19
  409490:	mov	x1, #0x40                  	// #64
  409494:	bl	41e8b8 <_obstack_newchunk@@Base>
  409498:	ldp	x1, x0, [x19, #24]
  40949c:	ldr	x3, [x19, #16]
  4094a0:	add	x1, x1, #0x40
  4094a4:	cmp	x1, x3
  4094a8:	b.ne	409414 <wcrtomb@plt+0x6af4>  // b.any
  4094ac:	ldrb	w2, [x19, #80]
  4094b0:	orr	w2, w2, #0x2
  4094b4:	strb	w2, [x19, #80]
  4094b8:	b	409414 <wcrtomb@plt+0x6af4>
  4094bc:	nop
  4094c0:	stp	x29, x30, [sp, #-272]!
  4094c4:	adrp	x7, 408000 <wcrtomb@plt+0x56e0>
  4094c8:	add	x7, x7, #0xe28
  4094cc:	mov	x29, sp
  4094d0:	ldr	x8, [x0, #2464]
  4094d4:	stp	x27, x28, [sp, #80]
  4094d8:	mov	x27, x0
  4094dc:	stp	x23, x24, [sp, #48]
  4094e0:	add	x0, x1, x2
  4094e4:	cmp	x8, x7
  4094e8:	csel	x23, x0, x1, eq  // eq = none
  4094ec:	ldr	x9, [x27, #96]
  4094f0:	ldr	x28, [x27, #2440]
  4094f4:	cbz	x2, 4096e8 <wcrtomb@plt+0x6dc8>
  4094f8:	stp	x21, x22, [sp, #32]
  4094fc:	add	x22, sp, #0xb0
  409500:	add	x21, sp, #0x80
  409504:	stp	x25, x26, [sp, #64]
  409508:	sub	x26, x2, #0x1
  40950c:	mov	w25, #0x1                   	// #1
  409510:	stp	x19, x20, [sp, #16]
  409514:	nop
  409518:	cmp	x8, x7
  40951c:	b.eq	40980c <wcrtomb@plt+0x6eec>  // b.none
  409520:	ldrb	w20, [x23], #1
  409524:	cbz	x28, 409530 <wcrtomb@plt+0x6c10>
  409528:	and	x20, x20, #0xff
  40952c:	ldrb	w20, [x28, x20]
  409530:	mov	x24, x9
  409534:	str	wzr, [sp, #128]
  409538:	mov	x3, #0x2                   	// #2
  40953c:	mov	x19, #0x0                   	// #0
  409540:	mov	w4, #0x0                   	// #0
  409544:	ldr	x2, [x24, #8]!
  409548:	str	x24, [sp, #176]
  40954c:	cbz	x2, 409590 <wcrtomb@plt+0x6c70>
  409550:	ldrb	w4, [x2, #24]
  409554:	cmp	w4, w20
  409558:	b.eq	40975c <wcrtomb@plt+0x6e3c>  // b.none
  40955c:	add	x4, x22, x3, lsl #3
  409560:	mov	x6, x3
  409564:	ldr	x5, [x2]
  409568:	stur	x2, [x4, #-8]
  40956c:	ldr	x2, [x2, #8]
  409570:	b.hi	40973c <wcrtomb@plt+0x6e1c>  // b.pmore
  409574:	add	x4, x21, x3, lsl #2
  409578:	add	x3, x3, #0x1
  40957c:	stur	w25, [x4, #-4]
  409580:	cbnz	x2, 409550 <wcrtomb@plt+0x6c30>
  409584:	sub	x19, x6, #0x1
  409588:	ldr	w4, [x21, x19, lsl #2]
  40958c:	ldr	x24, [x22, x19, lsl #3]
  409590:	ldr	d0, [x27, #32]
  409594:	ldr	x0, [x27, #24]
  409598:	fmov	x1, d0
  40959c:	sub	x1, x1, x0
  4095a0:	cmp	x1, #0x1f
  4095a4:	b.ls	4098bc <wcrtomb@plt+0x6f9c>  // b.plast
  4095a8:	ldr	x2, [x27, #16]
  4095ac:	add	x0, x0, #0x20
  4095b0:	cmp	x0, x2
  4095b4:	b.eq	409900 <wcrtomb@plt+0x6fe0>  // b.none
  4095b8:	ldr	x5, [x27, #48]
  4095bc:	fmov	x6, d0
  4095c0:	ldr	x1, [x27, #8]
  4095c4:	add	x0, x0, x5
  4095c8:	bic	x0, x0, x5
  4095cc:	str	x0, [x27, #24]
  4095d0:	sub	x3, x0, x1
  4095d4:	sub	x6, x6, x1
  4095d8:	cmp	x3, x6
  4095dc:	mvn	x10, x5
  4095e0:	b.ls	409818 <wcrtomb@plt+0x6ef8>  // b.plast
  4095e4:	dup	v0.2d, v0.d[0]
  4095e8:	str	q0, [x27, #16]
  4095ec:	stp	xzr, xzr, [x2]
  4095f0:	mov	x0, x27
  4095f4:	mov	x1, #0x40                  	// #64
  4095f8:	stp	x8, x2, [sp, #96]
  4095fc:	str	w4, [sp, #112]
  409600:	str	x9, [sp, #120]
  409604:	bl	41e8b8 <_obstack_newchunk@@Base>
  409608:	ldr	d0, [x27, #32]
  40960c:	adrp	x2, 408000 <wcrtomb@plt+0x56e0>
  409610:	ldp	x1, x3, [x27, #8]
  409614:	add	x7, x2, #0xe28
  409618:	fmov	x0, d0
  40961c:	ldr	w4, [sp, #112]
  409620:	ldr	x5, [x27, #48]
  409624:	ldp	x8, x2, [sp, #96]
  409628:	sub	x6, x0, x1
  40962c:	ldr	x0, [x27, #24]
  409630:	mvn	x10, x5
  409634:	ldr	x9, [sp, #120]
  409638:	add	x0, x0, #0x40
  40963c:	cmp	x0, x3
  409640:	b.eq	409840 <wcrtomb@plt+0x6f20>  // b.none
  409644:	add	x0, x0, x5
  409648:	and	x0, x0, x10
  40964c:	sub	x1, x0, x1
  409650:	cmp	x1, x6
  409654:	b.hi	409860 <wcrtomb@plt+0x6f40>  // b.pmore
  409658:	fmov	d0, x0
  40965c:	str	x0, [x27, #24]
  409660:	ldr	x0, [x9, #40]
  409664:	str	d0, [x27, #16]
  409668:	str	x3, [x2, #16]
  40966c:	add	x0, x0, #0x1
  409670:	stp	xzr, xzr, [x3]
  409674:	stp	x9, xzr, [x3, #16]
  409678:	stp	xzr, x0, [x3, #32]
  40967c:	str	xzr, [x3, #48]
  409680:	strb	w20, [x2, #24]
  409684:	strb	wzr, [x2, #25]
  409688:	cbnz	w4, 409868 <wcrtomb@plt+0x6f48>
  40968c:	str	x2, [x24]
  409690:	cbz	x19, 4096cc <wcrtomb@plt+0x6dac>
  409694:	sub	x1, x19, #0x1
  409698:	mov	w5, #0x1                   	// #1
  40969c:	mov	w4, #0xffffffff            	// #-1
  4096a0:	add	x0, x22, x1, lsl #3
  4096a4:	ldr	x2, [x0, #8]
  4096a8:	ldrb	w0, [x2, #25]
  4096ac:	cbnz	w0, 409784 <wcrtomb@plt+0x6e64>
  4096b0:	add	x0, x21, x1, lsl #2
  4096b4:	ldr	w0, [x0, #4]
  4096b8:	cbnz	w0, 409764 <wcrtomb@plt+0x6e44>
  4096bc:	strb	w4, [x2, #25]
  4096c0:	sub	x1, x1, #0x1
  4096c4:	subs	x19, x19, #0x1
  4096c8:	b.ne	4096a0 <wcrtomb@plt+0x6d80>  // b.any
  4096cc:	mov	x9, x3
  4096d0:	sub	x26, x26, #0x1
  4096d4:	cmn	x26, #0x1
  4096d8:	b.ne	409518 <wcrtomb@plt+0x6bf8>  // b.any
  4096dc:	ldp	x19, x20, [sp, #16]
  4096e0:	ldp	x21, x22, [sp, #32]
  4096e4:	ldp	x25, x26, [sp, #64]
  4096e8:	ldr	x1, [x9]
  4096ec:	ldr	x0, [x27, #88]
  4096f0:	cbnz	x1, 409700 <wcrtomb@plt+0x6de0>
  4096f4:	lsl	x1, x0, #1
  4096f8:	add	x1, x1, #0x1
  4096fc:	str	x1, [x9]
  409700:	ldr	x1, [x9, #40]
  409704:	add	x0, x0, #0x1
  409708:	ldr	x2, [x27, #104]
  40970c:	str	x0, [x27, #88]
  409710:	cmp	x1, x2
  409714:	b.ge	40971c <wcrtomb@plt+0x6dfc>  // b.tcont
  409718:	str	x1, [x27, #104]
  40971c:	ldr	x0, [x27, #112]
  409720:	cmp	x1, x0
  409724:	b.le	40972c <wcrtomb@plt+0x6e0c>
  409728:	str	x1, [x27, #112]
  40972c:	ldp	x23, x24, [sp, #48]
  409730:	ldp	x27, x28, [sp, #80]
  409734:	ldp	x29, x30, [sp], #272
  409738:	ret
  40973c:	add	x2, x21, x3, lsl #2
  409740:	add	x3, x3, #0x1
  409744:	stur	wzr, [x2, #-4]
  409748:	cbz	x5, 409584 <wcrtomb@plt+0x6c64>
  40974c:	mov	x2, x5
  409750:	ldrb	w4, [x2, #24]
  409754:	cmp	w4, w20
  409758:	b.ne	40955c <wcrtomb@plt+0x6c3c>  // b.any
  40975c:	ldr	x9, [x2, #16]
  409760:	b	4096d0 <wcrtomb@plt+0x6db0>
  409764:	strb	w5, [x2, #25]
  409768:	sub	x1, x1, #0x1
  40976c:	subs	x19, x19, #0x1
  409770:	b.eq	4096cc <wcrtomb@plt+0x6dac>  // b.none
  409774:	add	x0, x22, x1, lsl #3
  409778:	ldr	x2, [x0, #8]
  40977c:	ldrb	w0, [x2, #25]
  409780:	cbz	w0, 4096b0 <wcrtomb@plt+0x6d90>
  409784:	ldr	w1, [x21, x19, lsl #2]
  409788:	cbnz	w1, 409870 <wcrtomb@plt+0x6f50>
  40978c:	sub	w0, w0, #0x1
  409790:	and	w0, w0, #0xff
  409794:	strb	w0, [x2, #25]
  409798:	cbz	w0, 4096cc <wcrtomb@plt+0x6dac>
  40979c:	cmp	w0, #0x2
  4097a0:	b.ne	40988c <wcrtomb@plt+0x6f6c>  // b.any
  4097a4:	add	x0, x19, #0x1
  4097a8:	ldr	w0, [x21, x0, lsl #2]
  4097ac:	cbnz	w0, 409910 <wcrtomb@plt+0x6ff0>
  4097b0:	ldr	x1, [x2, #8]
  4097b4:	ldr	x0, [x1]
  4097b8:	ldp	x5, x4, [x0]
  4097bc:	str	x2, [x0]
  4097c0:	str	x5, [x2, #8]
  4097c4:	str	x1, [x0, #8]
  4097c8:	str	x4, [x1]
  4097cc:	ldrb	w4, [x0, #25]
  4097d0:	cmp	w4, #0x1
  4097d4:	csetm	w4, eq  // eq = none
  4097d8:	strb	w4, [x2, #25]
  4097dc:	ldrb	w2, [x0, #25]
  4097e0:	cmp	w2, #0xff
  4097e4:	cset	w2, eq  // eq = none
  4097e8:	strb	w2, [x1, #25]
  4097ec:	strb	wzr, [x0, #25]
  4097f0:	sub	x6, x19, #0x1
  4097f4:	mov	x9, x3
  4097f8:	ldr	w2, [x21, x6, lsl #2]
  4097fc:	ldr	x1, [x22, x6, lsl #3]
  409800:	cbnz	w2, 409934 <wcrtomb@plt+0x7014>
  409804:	str	x0, [x1]
  409808:	b	4096d0 <wcrtomb@plt+0x6db0>
  40980c:	ldurb	w20, [x23, #-1]
  409810:	sub	x23, x23, #0x1
  409814:	b	409524 <wcrtomb@plt+0x6c04>
  409818:	fmov	x3, d0
  40981c:	str	x0, [x27, #16]
  409820:	stp	xzr, xzr, [x2]
  409824:	sub	x3, x3, x0
  409828:	cmp	x3, #0x3f
  40982c:	mov	x3, x0
  409830:	b.ls	4095f0 <wcrtomb@plt+0x6cd0>  // b.plast
  409834:	add	x0, x0, #0x40
  409838:	cmp	x0, x3
  40983c:	b.ne	409644 <wcrtomb@plt+0x6d24>  // b.any
  409840:	ldrb	w11, [x27, #80]
  409844:	add	x0, x0, x5
  409848:	and	x0, x0, x10
  40984c:	orr	w11, w11, #0x2
  409850:	strb	w11, [x27, #80]
  409854:	sub	x1, x0, x1
  409858:	cmp	x1, x6
  40985c:	b.ls	409658 <wcrtomb@plt+0x6d38>  // b.plast
  409860:	str	d0, [x27, #24]
  409864:	b	409660 <wcrtomb@plt+0x6d40>
  409868:	str	x2, [x24, #8]
  40986c:	b	409690 <wcrtomb@plt+0x6d70>
  409870:	cmp	w1, #0x1
  409874:	b.ne	4096cc <wcrtomb@plt+0x6dac>  // b.any
  409878:	add	w0, w0, #0x1
  40987c:	and	w0, w0, #0xff
  409880:	strb	w0, [x2, #25]
  409884:	cbz	w0, 4096cc <wcrtomb@plt+0x6dac>
  409888:	b	40979c <wcrtomb@plt+0x6e7c>
  40988c:	cmp	w0, #0xfe
  409890:	b.ne	409988 <wcrtomb@plt+0x7068>  // b.any
  409894:	add	x0, x19, #0x1
  409898:	ldr	w0, [x21, x0, lsl #2]
  40989c:	cbnz	w0, 40993c <wcrtomb@plt+0x701c>
  4098a0:	ldr	x0, [x2]
  4098a4:	ldr	x1, [x0, #8]
  4098a8:	str	x2, [x0, #8]
  4098ac:	str	x1, [x2]
  4098b0:	strb	wzr, [x2, #25]
  4098b4:	strb	wzr, [x0, #25]
  4098b8:	b	4097f0 <wcrtomb@plt+0x6ed0>
  4098bc:	mov	x0, x27
  4098c0:	mov	x1, #0x20                  	// #32
  4098c4:	str	x8, [sp, #96]
  4098c8:	str	w4, [sp, #104]
  4098cc:	str	x9, [sp, #112]
  4098d0:	bl	41e8b8 <_obstack_newchunk@@Base>
  4098d4:	ldr	x0, [x27, #24]
  4098d8:	adrp	x1, 408000 <wcrtomb@plt+0x56e0>
  4098dc:	ldr	x2, [x27, #16]
  4098e0:	add	x0, x0, #0x20
  4098e4:	ldr	w4, [sp, #104]
  4098e8:	add	x7, x1, #0xe28
  4098ec:	cmp	x0, x2
  4098f0:	ldr	d0, [x27, #32]
  4098f4:	ldr	x8, [sp, #96]
  4098f8:	ldr	x9, [sp, #112]
  4098fc:	b.ne	4095b8 <wcrtomb@plt+0x6c98>  // b.any
  409900:	ldrb	w1, [x27, #80]
  409904:	orr	w1, w1, #0x2
  409908:	strb	w1, [x27, #80]
  40990c:	b	4095b8 <wcrtomb@plt+0x6c98>
  409910:	cmp	w0, #0x1
  409914:	b.ne	409988 <wcrtomb@plt+0x7068>  // b.any
  409918:	ldr	x0, [x2, #8]
  40991c:	ldr	x1, [x0]
  409920:	str	x2, [x0]
  409924:	str	x1, [x2, #8]
  409928:	strb	wzr, [x2, #25]
  40992c:	strb	wzr, [x0, #25]
  409930:	b	4097f0 <wcrtomb@plt+0x6ed0>
  409934:	str	x0, [x1, #8]
  409938:	b	4096d0 <wcrtomb@plt+0x6db0>
  40993c:	cmp	w0, #0x1
  409940:	b.ne	409988 <wcrtomb@plt+0x7068>  // b.any
  409944:	ldr	x1, [x2]
  409948:	ldr	x0, [x1, #8]
  40994c:	ldp	x5, x4, [x0]
  409950:	str	x1, [x0]
  409954:	str	x5, [x1, #8]
  409958:	str	x2, [x0, #8]
  40995c:	str	x4, [x2]
  409960:	ldrb	w4, [x0, #25]
  409964:	cmp	w4, #0x1
  409968:	csetm	w4, eq  // eq = none
  40996c:	strb	w4, [x1, #25]
  409970:	ldrb	w1, [x0, #25]
  409974:	cmp	w1, #0xff
  409978:	cset	w1, eq  // eq = none
  40997c:	strb	w1, [x2, #25]
  409980:	strb	wzr, [x0, #25]
  409984:	b	4097f0 <wcrtomb@plt+0x6ed0>
  409988:	bl	4025f0 <abort@plt>
  40998c:	nop
  409990:	ldr	x0, [x0, #88]
  409994:	ret
  409998:	sub	sp, sp, #0x950
  40999c:	stp	x29, x30, [sp]
  4099a0:	mov	x29, sp
  4099a4:	stp	x21, x22, [sp, #32]
  4099a8:	mov	x21, x0
  4099ac:	add	x0, x0, #0x78
  4099b0:	stp	x19, x20, [sp, #16]
  4099b4:	add	x19, sp, #0x50
  4099b8:	ldr	x20, [x21, #2440]
  4099bc:	stp	x23, x24, [sp, #48]
  4099c0:	ldr	x22, [x21, #88]
  4099c4:	cmp	x20, #0x0
  4099c8:	csel	x19, x19, x0, ne  // ne = any
  4099cc:	cmp	x22, #0x1
  4099d0:	cset	w23, eq  // eq = none
  4099d4:	b.eq	40baec <wcrtomb@plt+0x91cc>  // b.none
  4099d8:	ldr	x1, [x21, #104]
  4099dc:	mov	x3, #0xff                  	// #255
  4099e0:	mov	x0, x19
  4099e4:	mov	x2, #0x100                 	// #256
  4099e8:	cmp	x1, x3
  4099ec:	csel	x1, x1, x3, le
  4099f0:	bl	402510 <memset@plt>
  4099f4:	ldr	x6, [x21, #96]
  4099f8:	str	x6, [sp, #72]
  4099fc:	cbz	x6, 40a408 <wcrtomb@plt+0x7ae8>
  409a00:	ldr	x4, [x6, #8]
  409a04:	cbz	x4, 40a3dc <wcrtomb@plt+0x7abc>
  409a08:	ldr	x2, [x4]
  409a0c:	cbz	x2, 409c38 <wcrtomb@plt+0x7318>
  409a10:	ldr	x5, [x2]
  409a14:	cbz	x5, 409b20 <wcrtomb@plt+0x7200>
  409a18:	ldr	x3, [x5]
  409a1c:	cbz	x3, 409a98 <wcrtomb@plt+0x7178>
  409a20:	ldr	x7, [x3]
  409a24:	cbz	x7, 409a58 <wcrtomb@plt+0x7138>
  409a28:	ldr	x0, [x7]
  409a2c:	cbz	x0, 409a38 <wcrtomb@plt+0x7118>
  409a30:	add	x1, sp, #0x48
  409a34:	bl	408750 <wcrtomb@plt+0x5e30>
  409a38:	ldr	x0, [x7, #8]
  409a3c:	cbz	x0, 409a48 <wcrtomb@plt+0x7128>
  409a40:	add	x1, sp, #0x48
  409a44:	bl	408750 <wcrtomb@plt+0x5e30>
  409a48:	ldr	x1, [sp, #72]
  409a4c:	ldr	x0, [x7, #16]
  409a50:	str	x0, [sp, #72]
  409a54:	str	x0, [x1, #24]
  409a58:	ldr	x7, [x3, #8]
  409a5c:	cbz	x7, 40b7b4 <wcrtomb@plt+0x8e94>
  409a60:	ldr	x0, [x7]
  409a64:	cbz	x0, 409a70 <wcrtomb@plt+0x7150>
  409a68:	add	x1, sp, #0x48
  409a6c:	bl	408750 <wcrtomb@plt+0x5e30>
  409a70:	ldr	x0, [x7, #8]
  409a74:	cbz	x0, 409a80 <wcrtomb@plt+0x7160>
  409a78:	add	x1, sp, #0x48
  409a7c:	bl	408750 <wcrtomb@plt+0x5e30>
  409a80:	ldr	x0, [sp, #72]
  409a84:	ldr	x1, [x7, #16]
  409a88:	str	x1, [x0, #24]
  409a8c:	ldr	x0, [x3, #16]
  409a90:	str	x0, [x1, #24]
  409a94:	str	x0, [sp, #72]
  409a98:	ldr	x3, [x5, #8]
  409a9c:	cbz	x3, 40b6c4 <wcrtomb@plt+0x8da4>
  409aa0:	ldr	x7, [x3]
  409aa4:	cbz	x7, 409ad8 <wcrtomb@plt+0x71b8>
  409aa8:	ldr	x0, [x7]
  409aac:	cbz	x0, 409ab8 <wcrtomb@plt+0x7198>
  409ab0:	add	x1, sp, #0x48
  409ab4:	bl	408750 <wcrtomb@plt+0x5e30>
  409ab8:	ldr	x0, [x7, #8]
  409abc:	cbz	x0, 409ac8 <wcrtomb@plt+0x71a8>
  409ac0:	add	x1, sp, #0x48
  409ac4:	bl	408750 <wcrtomb@plt+0x5e30>
  409ac8:	ldr	x1, [sp, #72]
  409acc:	ldr	x0, [x7, #16]
  409ad0:	str	x0, [sp, #72]
  409ad4:	str	x0, [x1, #24]
  409ad8:	ldr	x7, [x3, #8]
  409adc:	cbz	x7, 40b7c4 <wcrtomb@plt+0x8ea4>
  409ae0:	ldr	x0, [x7]
  409ae4:	cbz	x0, 409af0 <wcrtomb@plt+0x71d0>
  409ae8:	add	x1, sp, #0x48
  409aec:	bl	408750 <wcrtomb@plt+0x5e30>
  409af0:	ldr	x0, [x7, #8]
  409af4:	cbz	x0, 409b00 <wcrtomb@plt+0x71e0>
  409af8:	add	x1, sp, #0x48
  409afc:	bl	408750 <wcrtomb@plt+0x5e30>
  409b00:	ldr	x1, [sp, #72]
  409b04:	ldr	x0, [x7, #16]
  409b08:	str	x0, [x1, #24]
  409b0c:	ldr	x1, [x3, #16]
  409b10:	str	x1, [x0, #24]
  409b14:	ldr	x0, [x5, #16]
  409b18:	str	x0, [x1, #24]
  409b1c:	str	x0, [sp, #72]
  409b20:	ldr	x5, [x2, #8]
  409b24:	cbz	x5, 40b58c <wcrtomb@plt+0x8c6c>
  409b28:	ldr	x3, [x5]
  409b2c:	cbz	x3, 409ba8 <wcrtomb@plt+0x7288>
  409b30:	ldr	x7, [x3]
  409b34:	cbz	x7, 409b68 <wcrtomb@plt+0x7248>
  409b38:	ldr	x0, [x7]
  409b3c:	cbz	x0, 409b48 <wcrtomb@plt+0x7228>
  409b40:	add	x1, sp, #0x48
  409b44:	bl	408750 <wcrtomb@plt+0x5e30>
  409b48:	ldr	x0, [x7, #8]
  409b4c:	cbz	x0, 409b58 <wcrtomb@plt+0x7238>
  409b50:	add	x1, sp, #0x48
  409b54:	bl	408750 <wcrtomb@plt+0x5e30>
  409b58:	ldr	x1, [sp, #72]
  409b5c:	ldr	x0, [x7, #16]
  409b60:	str	x0, [sp, #72]
  409b64:	str	x0, [x1, #24]
  409b68:	ldr	x7, [x3, #8]
  409b6c:	cbz	x7, 40b7ac <wcrtomb@plt+0x8e8c>
  409b70:	ldr	x0, [x7]
  409b74:	cbz	x0, 409b80 <wcrtomb@plt+0x7260>
  409b78:	add	x1, sp, #0x48
  409b7c:	bl	408750 <wcrtomb@plt+0x5e30>
  409b80:	ldr	x0, [x7, #8]
  409b84:	cbz	x0, 409b90 <wcrtomb@plt+0x7270>
  409b88:	add	x1, sp, #0x48
  409b8c:	bl	408750 <wcrtomb@plt+0x5e30>
  409b90:	ldr	x0, [sp, #72]
  409b94:	ldr	x1, [x7, #16]
  409b98:	str	x1, [x0, #24]
  409b9c:	ldr	x0, [x3, #16]
  409ba0:	str	x0, [x1, #24]
  409ba4:	str	x0, [sp, #72]
  409ba8:	ldr	x3, [x5, #8]
  409bac:	cbz	x3, 40b6bc <wcrtomb@plt+0x8d9c>
  409bb0:	ldr	x7, [x3]
  409bb4:	cbz	x7, 409be8 <wcrtomb@plt+0x72c8>
  409bb8:	ldr	x0, [x7]
  409bbc:	cbz	x0, 409bc8 <wcrtomb@plt+0x72a8>
  409bc0:	add	x1, sp, #0x48
  409bc4:	bl	408750 <wcrtomb@plt+0x5e30>
  409bc8:	ldr	x0, [x7, #8]
  409bcc:	cbz	x0, 409bd8 <wcrtomb@plt+0x72b8>
  409bd0:	add	x1, sp, #0x48
  409bd4:	bl	408750 <wcrtomb@plt+0x5e30>
  409bd8:	ldr	x1, [sp, #72]
  409bdc:	ldr	x0, [x7, #16]
  409be0:	str	x0, [sp, #72]
  409be4:	str	x0, [x1, #24]
  409be8:	ldr	x7, [x3, #8]
  409bec:	cbz	x7, 40b7a4 <wcrtomb@plt+0x8e84>
  409bf0:	ldr	x0, [x7]
  409bf4:	cbz	x0, 409c00 <wcrtomb@plt+0x72e0>
  409bf8:	add	x1, sp, #0x48
  409bfc:	bl	408750 <wcrtomb@plt+0x5e30>
  409c00:	ldr	x0, [x7, #8]
  409c04:	cbz	x0, 409c10 <wcrtomb@plt+0x72f0>
  409c08:	add	x1, sp, #0x48
  409c0c:	bl	408750 <wcrtomb@plt+0x5e30>
  409c10:	ldr	x0, [sp, #72]
  409c14:	ldr	x1, [x7, #16]
  409c18:	str	x1, [x0, #24]
  409c1c:	ldr	x0, [x3, #16]
  409c20:	str	x0, [x1, #24]
  409c24:	ldr	x1, [x5, #16]
  409c28:	str	x1, [x0, #24]
  409c2c:	ldr	x0, [x2, #16]
  409c30:	str	x0, [x1, #24]
  409c34:	str	x0, [sp, #72]
  409c38:	ldr	x2, [x4, #8]
  409c3c:	cbz	x2, 40a8dc <wcrtomb@plt+0x7fbc>
  409c40:	ldr	x5, [x2]
  409c44:	cbz	x5, 409d50 <wcrtomb@plt+0x7430>
  409c48:	ldr	x3, [x5]
  409c4c:	cbz	x3, 409cc8 <wcrtomb@plt+0x73a8>
  409c50:	ldr	x7, [x3]
  409c54:	cbz	x7, 409c88 <wcrtomb@plt+0x7368>
  409c58:	ldr	x0, [x7]
  409c5c:	cbz	x0, 409c68 <wcrtomb@plt+0x7348>
  409c60:	add	x1, sp, #0x48
  409c64:	bl	408750 <wcrtomb@plt+0x5e30>
  409c68:	ldr	x0, [x7, #8]
  409c6c:	cbz	x0, 409c78 <wcrtomb@plt+0x7358>
  409c70:	add	x1, sp, #0x48
  409c74:	bl	408750 <wcrtomb@plt+0x5e30>
  409c78:	ldr	x1, [sp, #72]
  409c7c:	ldr	x0, [x7, #16]
  409c80:	str	x0, [sp, #72]
  409c84:	str	x0, [x1, #24]
  409c88:	ldr	x7, [x3, #8]
  409c8c:	cbz	x7, 40b7bc <wcrtomb@plt+0x8e9c>
  409c90:	ldr	x0, [x7]
  409c94:	cbz	x0, 409ca0 <wcrtomb@plt+0x7380>
  409c98:	add	x1, sp, #0x48
  409c9c:	bl	408750 <wcrtomb@plt+0x5e30>
  409ca0:	ldr	x0, [x7, #8]
  409ca4:	cbz	x0, 409cb0 <wcrtomb@plt+0x7390>
  409ca8:	add	x1, sp, #0x48
  409cac:	bl	408750 <wcrtomb@plt+0x5e30>
  409cb0:	ldr	x0, [sp, #72]
  409cb4:	ldr	x1, [x7, #16]
  409cb8:	str	x1, [x0, #24]
  409cbc:	ldr	x0, [x3, #16]
  409cc0:	str	x0, [x1, #24]
  409cc4:	str	x0, [sp, #72]
  409cc8:	ldr	x3, [x5, #8]
  409ccc:	cbz	x3, 40b6cc <wcrtomb@plt+0x8dac>
  409cd0:	ldr	x7, [x3]
  409cd4:	cbz	x7, 409d08 <wcrtomb@plt+0x73e8>
  409cd8:	ldr	x0, [x7]
  409cdc:	cbz	x0, 409ce8 <wcrtomb@plt+0x73c8>
  409ce0:	add	x1, sp, #0x48
  409ce4:	bl	408750 <wcrtomb@plt+0x5e30>
  409ce8:	ldr	x0, [x7, #8]
  409cec:	cbz	x0, 409cf8 <wcrtomb@plt+0x73d8>
  409cf0:	add	x1, sp, #0x48
  409cf4:	bl	408750 <wcrtomb@plt+0x5e30>
  409cf8:	ldr	x1, [sp, #72]
  409cfc:	ldr	x0, [x7, #16]
  409d00:	str	x0, [sp, #72]
  409d04:	str	x0, [x1, #24]
  409d08:	ldr	x7, [x3, #8]
  409d0c:	cbz	x7, 40b794 <wcrtomb@plt+0x8e74>
  409d10:	ldr	x0, [x7]
  409d14:	cbz	x0, 409d20 <wcrtomb@plt+0x7400>
  409d18:	add	x1, sp, #0x48
  409d1c:	bl	408750 <wcrtomb@plt+0x5e30>
  409d20:	ldr	x0, [x7, #8]
  409d24:	cbz	x0, 409d30 <wcrtomb@plt+0x7410>
  409d28:	add	x1, sp, #0x48
  409d2c:	bl	408750 <wcrtomb@plt+0x5e30>
  409d30:	ldr	x1, [sp, #72]
  409d34:	ldr	x0, [x7, #16]
  409d38:	str	x0, [x1, #24]
  409d3c:	ldr	x1, [x3, #16]
  409d40:	str	x1, [x0, #24]
  409d44:	ldr	x0, [x5, #16]
  409d48:	str	x0, [x1, #24]
  409d4c:	str	x0, [sp, #72]
  409d50:	ldr	x5, [x2, #8]
  409d54:	cbz	x5, 40b584 <wcrtomb@plt+0x8c64>
  409d58:	ldr	x3, [x5]
  409d5c:	cbz	x3, 409dd8 <wcrtomb@plt+0x74b8>
  409d60:	ldr	x7, [x3]
  409d64:	cbz	x7, 409d98 <wcrtomb@plt+0x7478>
  409d68:	ldr	x0, [x7]
  409d6c:	cbz	x0, 409d78 <wcrtomb@plt+0x7458>
  409d70:	add	x1, sp, #0x48
  409d74:	bl	408750 <wcrtomb@plt+0x5e30>
  409d78:	ldr	x0, [x7, #8]
  409d7c:	cbz	x0, 409d88 <wcrtomb@plt+0x7468>
  409d80:	add	x1, sp, #0x48
  409d84:	bl	408750 <wcrtomb@plt+0x5e30>
  409d88:	ldr	x1, [sp, #72]
  409d8c:	ldr	x0, [x7, #16]
  409d90:	str	x0, [sp, #72]
  409d94:	str	x0, [x1, #24]
  409d98:	ldr	x7, [x3, #8]
  409d9c:	cbz	x7, 40b79c <wcrtomb@plt+0x8e7c>
  409da0:	ldr	x0, [x7]
  409da4:	cbz	x0, 409db0 <wcrtomb@plt+0x7490>
  409da8:	add	x1, sp, #0x48
  409dac:	bl	408750 <wcrtomb@plt+0x5e30>
  409db0:	ldr	x0, [x7, #8]
  409db4:	cbz	x0, 409dc0 <wcrtomb@plt+0x74a0>
  409db8:	add	x1, sp, #0x48
  409dbc:	bl	408750 <wcrtomb@plt+0x5e30>
  409dc0:	ldr	x0, [sp, #72]
  409dc4:	ldr	x1, [x7, #16]
  409dc8:	str	x1, [x0, #24]
  409dcc:	ldr	x0, [x3, #16]
  409dd0:	str	x0, [x1, #24]
  409dd4:	str	x0, [sp, #72]
  409dd8:	ldr	x3, [x5, #8]
  409ddc:	cbz	x3, 40b6d4 <wcrtomb@plt+0x8db4>
  409de0:	ldr	x7, [x3]
  409de4:	cbz	x7, 409e18 <wcrtomb@plt+0x74f8>
  409de8:	ldr	x0, [x7]
  409dec:	cbz	x0, 409df8 <wcrtomb@plt+0x74d8>
  409df0:	add	x1, sp, #0x48
  409df4:	bl	408750 <wcrtomb@plt+0x5e30>
  409df8:	ldr	x0, [x7, #8]
  409dfc:	cbz	x0, 409e08 <wcrtomb@plt+0x74e8>
  409e00:	add	x1, sp, #0x48
  409e04:	bl	408750 <wcrtomb@plt+0x5e30>
  409e08:	ldr	x1, [sp, #72]
  409e0c:	ldr	x0, [x7, #16]
  409e10:	str	x0, [sp, #72]
  409e14:	str	x0, [x1, #24]
  409e18:	ldr	x7, [x3, #8]
  409e1c:	cbz	x7, 40b78c <wcrtomb@plt+0x8e6c>
  409e20:	ldr	x0, [x7]
  409e24:	cbz	x0, 409e30 <wcrtomb@plt+0x7510>
  409e28:	add	x1, sp, #0x48
  409e2c:	bl	408750 <wcrtomb@plt+0x5e30>
  409e30:	ldr	x0, [x7, #8]
  409e34:	cbz	x0, 409e40 <wcrtomb@plt+0x7520>
  409e38:	add	x1, sp, #0x48
  409e3c:	bl	408750 <wcrtomb@plt+0x5e30>
  409e40:	ldr	x1, [sp, #72]
  409e44:	ldr	x0, [x7, #16]
  409e48:	str	x0, [x1, #24]
  409e4c:	ldr	x1, [x3, #16]
  409e50:	str	x1, [x0, #24]
  409e54:	ldr	x0, [x5, #16]
  409e58:	str	x0, [x1, #24]
  409e5c:	ldr	x1, [x2, #16]
  409e60:	str	x1, [x0, #24]
  409e64:	ldr	x0, [x4, #16]
  409e68:	str	x0, [sp, #72]
  409e6c:	ldr	x4, [x6, #8]
  409e70:	ldr	x3, [x6, #40]
  409e74:	str	x0, [x1, #24]
  409e78:	cbz	x4, 40a3dc <wcrtomb@plt+0x7abc>
  409e7c:	ldr	x5, [x4]
  409e80:	cbz	x5, 40a120 <wcrtomb@plt+0x7800>
  409e84:	ldr	x8, [x5]
  409e88:	cbz	x8, 409fc8 <wcrtomb@plt+0x76a8>
  409e8c:	ldr	x7, [x8]
  409e90:	cbz	x7, 409f20 <wcrtomb@plt+0x7600>
  409e94:	ldr	x9, [x7]
  409e98:	cbz	x9, 409ed0 <wcrtomb@plt+0x75b0>
  409e9c:	ldr	x0, [x9]
  409ea0:	mov	x1, x3
  409ea4:	mov	x2, x19
  409ea8:	bl	408620 <wcrtomb@plt+0x5d00>
  409eac:	mov	x1, x3
  409eb0:	ldr	x0, [x9, #8]
  409eb4:	mov	x2, x19
  409eb8:	bl	408620 <wcrtomb@plt+0x5d00>
  409ebc:	ldrb	w0, [x9, #24]
  409ec0:	ldrb	w1, [x19, x0]
  409ec4:	cmp	x3, x1
  409ec8:	b.ge	409ed0 <wcrtomb@plt+0x75b0>  // b.tcont
  409ecc:	strb	w3, [x19, x0]
  409ed0:	ldr	x9, [x7, #8]
  409ed4:	cbz	x9, 409f0c <wcrtomb@plt+0x75ec>
  409ed8:	ldr	x0, [x9]
  409edc:	mov	x1, x3
  409ee0:	mov	x2, x19
  409ee4:	bl	408620 <wcrtomb@plt+0x5d00>
  409ee8:	mov	x1, x3
  409eec:	ldr	x0, [x9, #8]
  409ef0:	mov	x2, x19
  409ef4:	bl	408620 <wcrtomb@plt+0x5d00>
  409ef8:	ldrb	w0, [x9, #24]
  409efc:	ldrb	w1, [x19, x0]
  409f00:	cmp	x3, x1
  409f04:	b.ge	409f0c <wcrtomb@plt+0x75ec>  // b.tcont
  409f08:	strb	w3, [x19, x0]
  409f0c:	ldrb	w0, [x7, #24]
  409f10:	ldrb	w1, [x19, x0]
  409f14:	cmp	x3, x1
  409f18:	b.ge	409f20 <wcrtomb@plt+0x7600>  // b.tcont
  409f1c:	strb	w3, [x19, x0]
  409f20:	ldr	x7, [x8, #8]
  409f24:	cbz	x7, 409fb4 <wcrtomb@plt+0x7694>
  409f28:	ldr	x9, [x7]
  409f2c:	cbz	x9, 409f64 <wcrtomb@plt+0x7644>
  409f30:	ldr	x0, [x9]
  409f34:	mov	x1, x3
  409f38:	mov	x2, x19
  409f3c:	bl	408620 <wcrtomb@plt+0x5d00>
  409f40:	mov	x1, x3
  409f44:	ldr	x0, [x9, #8]
  409f48:	mov	x2, x19
  409f4c:	bl	408620 <wcrtomb@plt+0x5d00>
  409f50:	ldrb	w0, [x9, #24]
  409f54:	ldrb	w1, [x19, x0]
  409f58:	cmp	x3, x1
  409f5c:	b.ge	409f64 <wcrtomb@plt+0x7644>  // b.tcont
  409f60:	strb	w3, [x19, x0]
  409f64:	ldr	x9, [x7, #8]
  409f68:	cbz	x9, 409fa0 <wcrtomb@plt+0x7680>
  409f6c:	ldr	x0, [x9]
  409f70:	mov	x1, x3
  409f74:	mov	x2, x19
  409f78:	bl	408620 <wcrtomb@plt+0x5d00>
  409f7c:	mov	x1, x3
  409f80:	ldr	x0, [x9, #8]
  409f84:	mov	x2, x19
  409f88:	bl	408620 <wcrtomb@plt+0x5d00>
  409f8c:	ldrb	w0, [x9, #24]
  409f90:	ldrb	w1, [x19, x0]
  409f94:	cmp	x3, x1
  409f98:	b.ge	409fa0 <wcrtomb@plt+0x7680>  // b.tcont
  409f9c:	strb	w3, [x19, x0]
  409fa0:	ldrb	w0, [x7, #24]
  409fa4:	ldrb	w1, [x19, x0]
  409fa8:	cmp	x3, x1
  409fac:	b.ge	409fb4 <wcrtomb@plt+0x7694>  // b.tcont
  409fb0:	strb	w3, [x19, x0]
  409fb4:	ldrb	w0, [x8, #24]
  409fb8:	ldrb	w1, [x19, x0]
  409fbc:	cmp	x3, x1
  409fc0:	b.ge	409fc8 <wcrtomb@plt+0x76a8>  // b.tcont
  409fc4:	strb	w3, [x19, x0]
  409fc8:	ldr	x8, [x5, #8]
  409fcc:	cbz	x8, 40a10c <wcrtomb@plt+0x77ec>
  409fd0:	ldr	x7, [x8]
  409fd4:	cbz	x7, 40a064 <wcrtomb@plt+0x7744>
  409fd8:	ldr	x9, [x7]
  409fdc:	cbz	x9, 40a014 <wcrtomb@plt+0x76f4>
  409fe0:	ldr	x0, [x9]
  409fe4:	mov	x1, x3
  409fe8:	mov	x2, x19
  409fec:	bl	408620 <wcrtomb@plt+0x5d00>
  409ff0:	mov	x1, x3
  409ff4:	ldr	x0, [x9, #8]
  409ff8:	mov	x2, x19
  409ffc:	bl	408620 <wcrtomb@plt+0x5d00>
  40a000:	ldrb	w0, [x9, #24]
  40a004:	ldrb	w1, [x19, x0]
  40a008:	cmp	x3, x1
  40a00c:	b.ge	40a014 <wcrtomb@plt+0x76f4>  // b.tcont
  40a010:	strb	w3, [x19, x0]
  40a014:	ldr	x9, [x7, #8]
  40a018:	cbz	x9, 40a050 <wcrtomb@plt+0x7730>
  40a01c:	ldr	x0, [x9]
  40a020:	mov	x1, x3
  40a024:	mov	x2, x19
  40a028:	bl	408620 <wcrtomb@plt+0x5d00>
  40a02c:	mov	x1, x3
  40a030:	ldr	x0, [x9, #8]
  40a034:	mov	x2, x19
  40a038:	bl	408620 <wcrtomb@plt+0x5d00>
  40a03c:	ldrb	w0, [x9, #24]
  40a040:	ldrb	w1, [x19, x0]
  40a044:	cmp	x3, x1
  40a048:	b.ge	40a050 <wcrtomb@plt+0x7730>  // b.tcont
  40a04c:	strb	w3, [x19, x0]
  40a050:	ldrb	w0, [x7, #24]
  40a054:	ldrb	w1, [x19, x0]
  40a058:	cmp	x3, x1
  40a05c:	b.ge	40a064 <wcrtomb@plt+0x7744>  // b.tcont
  40a060:	strb	w3, [x19, x0]
  40a064:	ldr	x7, [x8, #8]
  40a068:	cbz	x7, 40a0f8 <wcrtomb@plt+0x77d8>
  40a06c:	ldr	x9, [x7]
  40a070:	cbz	x9, 40a0a8 <wcrtomb@plt+0x7788>
  40a074:	ldr	x0, [x9]
  40a078:	mov	x1, x3
  40a07c:	mov	x2, x19
  40a080:	bl	408620 <wcrtomb@plt+0x5d00>
  40a084:	mov	x1, x3
  40a088:	ldr	x0, [x9, #8]
  40a08c:	mov	x2, x19
  40a090:	bl	408620 <wcrtomb@plt+0x5d00>
  40a094:	ldrb	w0, [x9, #24]
  40a098:	ldrb	w1, [x19, x0]
  40a09c:	cmp	x3, x1
  40a0a0:	b.ge	40a0a8 <wcrtomb@plt+0x7788>  // b.tcont
  40a0a4:	strb	w3, [x19, x0]
  40a0a8:	ldr	x9, [x7, #8]
  40a0ac:	cbz	x9, 40a0e4 <wcrtomb@plt+0x77c4>
  40a0b0:	ldr	x0, [x9]
  40a0b4:	mov	x1, x3
  40a0b8:	mov	x2, x19
  40a0bc:	bl	408620 <wcrtomb@plt+0x5d00>
  40a0c0:	mov	x1, x3
  40a0c4:	ldr	x0, [x9, #8]
  40a0c8:	mov	x2, x19
  40a0cc:	bl	408620 <wcrtomb@plt+0x5d00>
  40a0d0:	ldrb	w0, [x9, #24]
  40a0d4:	ldrb	w1, [x19, x0]
  40a0d8:	cmp	x3, x1
  40a0dc:	b.ge	40a0e4 <wcrtomb@plt+0x77c4>  // b.tcont
  40a0e0:	strb	w3, [x19, x0]
  40a0e4:	ldrb	w0, [x7, #24]
  40a0e8:	ldrb	w1, [x19, x0]
  40a0ec:	cmp	x3, x1
  40a0f0:	b.ge	40a0f8 <wcrtomb@plt+0x77d8>  // b.tcont
  40a0f4:	strb	w3, [x19, x0]
  40a0f8:	ldrb	w0, [x8, #24]
  40a0fc:	ldrb	w1, [x19, x0]
  40a100:	cmp	x3, x1
  40a104:	b.ge	40a10c <wcrtomb@plt+0x77ec>  // b.tcont
  40a108:	strb	w3, [x19, x0]
  40a10c:	ldrb	w0, [x5, #24]
  40a110:	ldrb	w1, [x19, x0]
  40a114:	cmp	x3, x1
  40a118:	b.ge	40a120 <wcrtomb@plt+0x7800>  // b.tcont
  40a11c:	strb	w3, [x19, x0]
  40a120:	ldr	x5, [x4, #8]
  40a124:	cbz	x5, 40a3c4 <wcrtomb@plt+0x7aa4>
  40a128:	ldr	x8, [x5]
  40a12c:	cbz	x8, 40a26c <wcrtomb@plt+0x794c>
  40a130:	ldr	x7, [x8]
  40a134:	cbz	x7, 40a1c4 <wcrtomb@plt+0x78a4>
  40a138:	ldr	x9, [x7]
  40a13c:	cbz	x9, 40a174 <wcrtomb@plt+0x7854>
  40a140:	ldr	x0, [x9]
  40a144:	mov	x1, x3
  40a148:	mov	x2, x19
  40a14c:	bl	408620 <wcrtomb@plt+0x5d00>
  40a150:	mov	x1, x3
  40a154:	ldr	x0, [x9, #8]
  40a158:	mov	x2, x19
  40a15c:	bl	408620 <wcrtomb@plt+0x5d00>
  40a160:	ldrb	w0, [x9, #24]
  40a164:	ldrb	w1, [x19, x0]
  40a168:	cmp	x3, x1
  40a16c:	b.ge	40a174 <wcrtomb@plt+0x7854>  // b.tcont
  40a170:	strb	w3, [x19, x0]
  40a174:	ldr	x9, [x7, #8]
  40a178:	cbz	x9, 40a1b0 <wcrtomb@plt+0x7890>
  40a17c:	ldr	x0, [x9]
  40a180:	mov	x1, x3
  40a184:	mov	x2, x19
  40a188:	bl	408620 <wcrtomb@plt+0x5d00>
  40a18c:	mov	x1, x3
  40a190:	ldr	x0, [x9, #8]
  40a194:	mov	x2, x19
  40a198:	bl	408620 <wcrtomb@plt+0x5d00>
  40a19c:	ldrb	w0, [x9, #24]
  40a1a0:	ldrb	w1, [x19, x0]
  40a1a4:	cmp	x3, x1
  40a1a8:	b.ge	40a1b0 <wcrtomb@plt+0x7890>  // b.tcont
  40a1ac:	strb	w3, [x19, x0]
  40a1b0:	ldrb	w0, [x7, #24]
  40a1b4:	ldrb	w1, [x19, x0]
  40a1b8:	cmp	x3, x1
  40a1bc:	b.ge	40a1c4 <wcrtomb@plt+0x78a4>  // b.tcont
  40a1c0:	strb	w3, [x19, x0]
  40a1c4:	ldr	x7, [x8, #8]
  40a1c8:	cbz	x7, 40a258 <wcrtomb@plt+0x7938>
  40a1cc:	ldr	x9, [x7]
  40a1d0:	cbz	x9, 40a208 <wcrtomb@plt+0x78e8>
  40a1d4:	ldr	x0, [x9]
  40a1d8:	mov	x1, x3
  40a1dc:	mov	x2, x19
  40a1e0:	bl	408620 <wcrtomb@plt+0x5d00>
  40a1e4:	mov	x1, x3
  40a1e8:	ldr	x0, [x9, #8]
  40a1ec:	mov	x2, x19
  40a1f0:	bl	408620 <wcrtomb@plt+0x5d00>
  40a1f4:	ldrb	w0, [x9, #24]
  40a1f8:	ldrb	w1, [x19, x0]
  40a1fc:	cmp	x3, x1
  40a200:	b.ge	40a208 <wcrtomb@plt+0x78e8>  // b.tcont
  40a204:	strb	w3, [x19, x0]
  40a208:	ldr	x9, [x7, #8]
  40a20c:	cbz	x9, 40a244 <wcrtomb@plt+0x7924>
  40a210:	ldr	x0, [x9]
  40a214:	mov	x1, x3
  40a218:	mov	x2, x19
  40a21c:	bl	408620 <wcrtomb@plt+0x5d00>
  40a220:	mov	x1, x3
  40a224:	ldr	x0, [x9, #8]
  40a228:	mov	x2, x19
  40a22c:	bl	408620 <wcrtomb@plt+0x5d00>
  40a230:	ldrb	w0, [x9, #24]
  40a234:	ldrb	w1, [x19, x0]
  40a238:	cmp	x3, x1
  40a23c:	b.ge	40a244 <wcrtomb@plt+0x7924>  // b.tcont
  40a240:	strb	w3, [x19, x0]
  40a244:	ldrb	w0, [x7, #24]
  40a248:	ldrb	w1, [x19, x0]
  40a24c:	cmp	x3, x1
  40a250:	b.ge	40a258 <wcrtomb@plt+0x7938>  // b.tcont
  40a254:	strb	w3, [x19, x0]
  40a258:	ldrb	w0, [x8, #24]
  40a25c:	ldrb	w1, [x19, x0]
  40a260:	cmp	x3, x1
  40a264:	b.ge	40a26c <wcrtomb@plt+0x794c>  // b.tcont
  40a268:	strb	w3, [x19, x0]
  40a26c:	ldr	x8, [x5, #8]
  40a270:	cbz	x8, 40a3b0 <wcrtomb@plt+0x7a90>
  40a274:	ldr	x7, [x8]
  40a278:	cbz	x7, 40a308 <wcrtomb@plt+0x79e8>
  40a27c:	ldr	x9, [x7]
  40a280:	cbz	x9, 40a2b8 <wcrtomb@plt+0x7998>
  40a284:	ldr	x0, [x9]
  40a288:	mov	x1, x3
  40a28c:	mov	x2, x19
  40a290:	bl	408620 <wcrtomb@plt+0x5d00>
  40a294:	mov	x1, x3
  40a298:	ldr	x0, [x9, #8]
  40a29c:	mov	x2, x19
  40a2a0:	bl	408620 <wcrtomb@plt+0x5d00>
  40a2a4:	ldrb	w0, [x9, #24]
  40a2a8:	ldrb	w1, [x19, x0]
  40a2ac:	cmp	x3, x1
  40a2b0:	b.ge	40a2b8 <wcrtomb@plt+0x7998>  // b.tcont
  40a2b4:	strb	w3, [x19, x0]
  40a2b8:	ldr	x9, [x7, #8]
  40a2bc:	cbz	x9, 40a2f4 <wcrtomb@plt+0x79d4>
  40a2c0:	ldr	x0, [x9]
  40a2c4:	mov	x1, x3
  40a2c8:	mov	x2, x19
  40a2cc:	bl	408620 <wcrtomb@plt+0x5d00>
  40a2d0:	mov	x1, x3
  40a2d4:	ldr	x0, [x9, #8]
  40a2d8:	mov	x2, x19
  40a2dc:	bl	408620 <wcrtomb@plt+0x5d00>
  40a2e0:	ldrb	w0, [x9, #24]
  40a2e4:	ldrb	w1, [x19, x0]
  40a2e8:	cmp	x3, x1
  40a2ec:	b.ge	40a2f4 <wcrtomb@plt+0x79d4>  // b.tcont
  40a2f0:	strb	w3, [x19, x0]
  40a2f4:	ldrb	w0, [x7, #24]
  40a2f8:	ldrb	w1, [x19, x0]
  40a2fc:	cmp	x3, x1
  40a300:	b.ge	40a308 <wcrtomb@plt+0x79e8>  // b.tcont
  40a304:	strb	w3, [x19, x0]
  40a308:	ldr	x7, [x8, #8]
  40a30c:	cbz	x7, 40a39c <wcrtomb@plt+0x7a7c>
  40a310:	ldr	x9, [x7]
  40a314:	cbz	x9, 40a34c <wcrtomb@plt+0x7a2c>
  40a318:	ldr	x0, [x9]
  40a31c:	mov	x1, x3
  40a320:	mov	x2, x19
  40a324:	bl	408620 <wcrtomb@plt+0x5d00>
  40a328:	mov	x1, x3
  40a32c:	ldr	x0, [x9, #8]
  40a330:	mov	x2, x19
  40a334:	bl	408620 <wcrtomb@plt+0x5d00>
  40a338:	ldrb	w0, [x9, #24]
  40a33c:	ldrb	w1, [x19, x0]
  40a340:	cmp	x3, x1
  40a344:	b.ge	40a34c <wcrtomb@plt+0x7a2c>  // b.tcont
  40a348:	strb	w3, [x19, x0]
  40a34c:	ldr	x9, [x7, #8]
  40a350:	cbz	x9, 40a388 <wcrtomb@plt+0x7a68>
  40a354:	ldr	x0, [x9]
  40a358:	mov	x1, x3
  40a35c:	mov	x2, x19
  40a360:	bl	408620 <wcrtomb@plt+0x5d00>
  40a364:	mov	x1, x3
  40a368:	ldr	x0, [x9, #8]
  40a36c:	mov	x2, x19
  40a370:	bl	408620 <wcrtomb@plt+0x5d00>
  40a374:	ldrb	w0, [x9, #24]
  40a378:	ldrb	w1, [x19, x0]
  40a37c:	cmp	x3, x1
  40a380:	b.ge	40a388 <wcrtomb@plt+0x7a68>  // b.tcont
  40a384:	strb	w3, [x19, x0]
  40a388:	ldrb	w0, [x7, #24]
  40a38c:	ldrb	w1, [x19, x0]
  40a390:	cmp	x3, x1
  40a394:	b.ge	40a39c <wcrtomb@plt+0x7a7c>  // b.tcont
  40a398:	strb	w3, [x19, x0]
  40a39c:	ldrb	w0, [x8, #24]
  40a3a0:	ldrb	w1, [x19, x0]
  40a3a4:	cmp	x3, x1
  40a3a8:	b.ge	40a3b0 <wcrtomb@plt+0x7a90>  // b.tcont
  40a3ac:	strb	w3, [x19, x0]
  40a3b0:	ldrb	w0, [x5, #24]
  40a3b4:	ldrb	w1, [x19, x0]
  40a3b8:	cmp	x3, x1
  40a3bc:	b.ge	40a3c4 <wcrtomb@plt+0x7aa4>  // b.tcont
  40a3c0:	strb	w3, [x19, x0]
  40a3c4:	ldrb	w0, [x4, #24]
  40a3c8:	ldrb	w1, [x19, x0]
  40a3cc:	cmp	x3, x1
  40a3d0:	b.ge	40a3d8 <wcrtomb@plt+0x7ab8>  // b.tcont
  40a3d4:	strb	w3, [x19, x0]
  40a3d8:	ldr	x4, [x6, #8]
  40a3dc:	mov	x0, x4
  40a3e0:	ldr	x1, [x6, #32]
  40a3e4:	mov	w3, w23
  40a3e8:	ldr	x2, [x21, #96]
  40a3ec:	bl	408548 <wcrtomb@plt+0x5c28>
  40a3f0:	cmp	x22, #0x1
  40a3f4:	b.eq	40a8e4 <wcrtomb@plt+0x7fc4>  // b.none
  40a3f8:	ldr	x6, [x6, #24]
  40a3fc:	cbnz	x6, 409a00 <wcrtomb@plt+0x70e0>
  40a400:	cmp	x22, #0x1
  40a404:	b.eq	40b858 <wcrtomb@plt+0x8f38>  // b.none
  40a408:	cbz	x20, 40b8a0 <wcrtomb@plt+0x8f80>
  40a40c:	mov	x2, #0x800                 	// #2048
  40a410:	add	x0, sp, #0x150
  40a414:	mov	w1, #0x0                   	// #0
  40a418:	bl	402510 <memset@plt>
  40a41c:	ldr	x0, [x21, #96]
  40a420:	add	x7, sp, #0x150
  40a424:	add	x23, x21, #0x178
  40a428:	ldr	x2, [x0, #8]
  40a42c:	cbz	x2, 40a818 <wcrtomb@plt+0x7ef8>
  40a430:	ldr	x3, [x2]
  40a434:	cbz	x3, 40a61c <wcrtomb@plt+0x7cfc>
  40a438:	ldr	x4, [x3]
  40a43c:	cbz	x4, 40a524 <wcrtomb@plt+0x7c04>
  40a440:	ldr	x5, [x4]
  40a444:	cbz	x5, 40a4ac <wcrtomb@plt+0x7b8c>
  40a448:	ldr	x6, [x5]
  40a44c:	cbz	x6, 40a474 <wcrtomb@plt+0x7b54>
  40a450:	ldr	x0, [x6]
  40a454:	mov	x1, x7
  40a458:	bl	408708 <wcrtomb@plt+0x5de8>
  40a45c:	mov	x1, x7
  40a460:	ldr	x0, [x6, #8]
  40a464:	bl	408708 <wcrtomb@plt+0x5de8>
  40a468:	ldrb	w0, [x6, #24]
  40a46c:	ldr	x1, [x6, #16]
  40a470:	str	x1, [x7, x0, lsl #3]
  40a474:	ldr	x6, [x5, #8]
  40a478:	cbz	x6, 40a4a0 <wcrtomb@plt+0x7b80>
  40a47c:	ldr	x0, [x6]
  40a480:	mov	x1, x7
  40a484:	bl	408708 <wcrtomb@plt+0x5de8>
  40a488:	mov	x1, x7
  40a48c:	ldr	x0, [x6, #8]
  40a490:	bl	408708 <wcrtomb@plt+0x5de8>
  40a494:	ldrb	w0, [x6, #24]
  40a498:	ldr	x1, [x6, #16]
  40a49c:	str	x1, [x7, x0, lsl #3]
  40a4a0:	ldrb	w0, [x5, #24]
  40a4a4:	ldr	x1, [x5, #16]
  40a4a8:	str	x1, [x7, x0, lsl #3]
  40a4ac:	ldr	x5, [x4, #8]
  40a4b0:	cbz	x5, 40a518 <wcrtomb@plt+0x7bf8>
  40a4b4:	ldr	x6, [x5]
  40a4b8:	cbz	x6, 40a4e0 <wcrtomb@plt+0x7bc0>
  40a4bc:	ldr	x0, [x6]
  40a4c0:	mov	x1, x7
  40a4c4:	bl	408708 <wcrtomb@plt+0x5de8>
  40a4c8:	mov	x1, x7
  40a4cc:	ldr	x0, [x6, #8]
  40a4d0:	bl	408708 <wcrtomb@plt+0x5de8>
  40a4d4:	ldrb	w0, [x6, #24]
  40a4d8:	ldr	x1, [x6, #16]
  40a4dc:	str	x1, [x7, x0, lsl #3]
  40a4e0:	ldr	x6, [x5, #8]
  40a4e4:	cbz	x6, 40a50c <wcrtomb@plt+0x7bec>
  40a4e8:	ldr	x0, [x6]
  40a4ec:	mov	x1, x7
  40a4f0:	bl	408708 <wcrtomb@plt+0x5de8>
  40a4f4:	mov	x1, x7
  40a4f8:	ldr	x0, [x6, #8]
  40a4fc:	bl	408708 <wcrtomb@plt+0x5de8>
  40a500:	ldrb	w0, [x6, #24]
  40a504:	ldr	x1, [x6, #16]
  40a508:	str	x1, [x7, x0, lsl #3]
  40a50c:	ldrb	w0, [x5, #24]
  40a510:	ldr	x1, [x5, #16]
  40a514:	str	x1, [x7, x0, lsl #3]
  40a518:	ldrb	w0, [x4, #24]
  40a51c:	ldr	x1, [x4, #16]
  40a520:	str	x1, [x7, x0, lsl #3]
  40a524:	ldr	x4, [x3, #8]
  40a528:	cbz	x4, 40a610 <wcrtomb@plt+0x7cf0>
  40a52c:	ldr	x5, [x4]
  40a530:	cbz	x5, 40a598 <wcrtomb@plt+0x7c78>
  40a534:	ldr	x6, [x5]
  40a538:	cbz	x6, 40a560 <wcrtomb@plt+0x7c40>
  40a53c:	ldr	x0, [x6]
  40a540:	mov	x1, x7
  40a544:	bl	408708 <wcrtomb@plt+0x5de8>
  40a548:	mov	x1, x7
  40a54c:	ldr	x0, [x6, #8]
  40a550:	bl	408708 <wcrtomb@plt+0x5de8>
  40a554:	ldrb	w0, [x6, #24]
  40a558:	ldr	x1, [x6, #16]
  40a55c:	str	x1, [x7, x0, lsl #3]
  40a560:	ldr	x6, [x5, #8]
  40a564:	cbz	x6, 40a58c <wcrtomb@plt+0x7c6c>
  40a568:	ldr	x0, [x6]
  40a56c:	mov	x1, x7
  40a570:	bl	408708 <wcrtomb@plt+0x5de8>
  40a574:	mov	x1, x7
  40a578:	ldr	x0, [x6, #8]
  40a57c:	bl	408708 <wcrtomb@plt+0x5de8>
  40a580:	ldrb	w0, [x6, #24]
  40a584:	ldr	x1, [x6, #16]
  40a588:	str	x1, [x7, x0, lsl #3]
  40a58c:	ldrb	w0, [x5, #24]
  40a590:	ldr	x1, [x5, #16]
  40a594:	str	x1, [x7, x0, lsl #3]
  40a598:	ldr	x5, [x4, #8]
  40a59c:	cbz	x5, 40a604 <wcrtomb@plt+0x7ce4>
  40a5a0:	ldr	x6, [x5]
  40a5a4:	cbz	x6, 40a5cc <wcrtomb@plt+0x7cac>
  40a5a8:	ldr	x0, [x6]
  40a5ac:	mov	x1, x7
  40a5b0:	bl	408708 <wcrtomb@plt+0x5de8>
  40a5b4:	mov	x1, x7
  40a5b8:	ldr	x0, [x6, #8]
  40a5bc:	bl	408708 <wcrtomb@plt+0x5de8>
  40a5c0:	ldrb	w0, [x6, #24]
  40a5c4:	ldr	x1, [x6, #16]
  40a5c8:	str	x1, [x7, x0, lsl #3]
  40a5cc:	ldr	x6, [x5, #8]
  40a5d0:	cbz	x6, 40a5f8 <wcrtomb@plt+0x7cd8>
  40a5d4:	ldr	x0, [x6]
  40a5d8:	mov	x1, x7
  40a5dc:	bl	408708 <wcrtomb@plt+0x5de8>
  40a5e0:	mov	x1, x7
  40a5e4:	ldr	x0, [x6, #8]
  40a5e8:	bl	408708 <wcrtomb@plt+0x5de8>
  40a5ec:	ldrb	w0, [x6, #24]
  40a5f0:	ldr	x1, [x6, #16]
  40a5f4:	str	x1, [x7, x0, lsl #3]
  40a5f8:	ldrb	w0, [x5, #24]
  40a5fc:	ldr	x1, [x5, #16]
  40a600:	str	x1, [x7, x0, lsl #3]
  40a604:	ldrb	w0, [x4, #24]
  40a608:	ldr	x1, [x4, #16]
  40a60c:	str	x1, [x7, x0, lsl #3]
  40a610:	ldrb	w0, [x3, #24]
  40a614:	ldr	x1, [x3, #16]
  40a618:	str	x1, [x7, x0, lsl #3]
  40a61c:	ldr	x3, [x2, #8]
  40a620:	cbz	x3, 40a808 <wcrtomb@plt+0x7ee8>
  40a624:	ldr	x4, [x3]
  40a628:	cbz	x4, 40a710 <wcrtomb@plt+0x7df0>
  40a62c:	ldr	x5, [x4]
  40a630:	cbz	x5, 40a698 <wcrtomb@plt+0x7d78>
  40a634:	ldr	x6, [x5]
  40a638:	cbz	x6, 40a660 <wcrtomb@plt+0x7d40>
  40a63c:	ldr	x0, [x6]
  40a640:	mov	x1, x7
  40a644:	bl	408708 <wcrtomb@plt+0x5de8>
  40a648:	mov	x1, x7
  40a64c:	ldr	x0, [x6, #8]
  40a650:	bl	408708 <wcrtomb@plt+0x5de8>
  40a654:	ldrb	w0, [x6, #24]
  40a658:	ldr	x1, [x6, #16]
  40a65c:	str	x1, [x7, x0, lsl #3]
  40a660:	ldr	x6, [x5, #8]
  40a664:	cbz	x6, 40a68c <wcrtomb@plt+0x7d6c>
  40a668:	ldr	x0, [x6]
  40a66c:	mov	x1, x7
  40a670:	bl	408708 <wcrtomb@plt+0x5de8>
  40a674:	mov	x1, x7
  40a678:	ldr	x0, [x6, #8]
  40a67c:	bl	408708 <wcrtomb@plt+0x5de8>
  40a680:	ldrb	w0, [x6, #24]
  40a684:	ldr	x1, [x6, #16]
  40a688:	str	x1, [x7, x0, lsl #3]
  40a68c:	ldrb	w0, [x5, #24]
  40a690:	ldr	x1, [x5, #16]
  40a694:	str	x1, [x7, x0, lsl #3]
  40a698:	ldr	x5, [x4, #8]
  40a69c:	cbz	x5, 40a704 <wcrtomb@plt+0x7de4>
  40a6a0:	ldr	x6, [x5]
  40a6a4:	cbz	x6, 40a6cc <wcrtomb@plt+0x7dac>
  40a6a8:	ldr	x0, [x6]
  40a6ac:	mov	x1, x7
  40a6b0:	bl	408708 <wcrtomb@plt+0x5de8>
  40a6b4:	mov	x1, x7
  40a6b8:	ldr	x0, [x6, #8]
  40a6bc:	bl	408708 <wcrtomb@plt+0x5de8>
  40a6c0:	ldrb	w0, [x6, #24]
  40a6c4:	ldr	x1, [x6, #16]
  40a6c8:	str	x1, [x7, x0, lsl #3]
  40a6cc:	ldr	x6, [x5, #8]
  40a6d0:	cbz	x6, 40a6f8 <wcrtomb@plt+0x7dd8>
  40a6d4:	ldr	x0, [x6]
  40a6d8:	mov	x1, x7
  40a6dc:	bl	408708 <wcrtomb@plt+0x5de8>
  40a6e0:	mov	x1, x7
  40a6e4:	ldr	x0, [x6, #8]
  40a6e8:	bl	408708 <wcrtomb@plt+0x5de8>
  40a6ec:	ldrb	w0, [x6, #24]
  40a6f0:	ldr	x1, [x6, #16]
  40a6f4:	str	x1, [x7, x0, lsl #3]
  40a6f8:	ldrb	w0, [x5, #24]
  40a6fc:	ldr	x1, [x5, #16]
  40a700:	str	x1, [x7, x0, lsl #3]
  40a704:	ldrb	w0, [x4, #24]
  40a708:	ldr	x1, [x4, #16]
  40a70c:	str	x1, [x7, x0, lsl #3]
  40a710:	ldr	x4, [x3, #8]
  40a714:	cbz	x4, 40a7fc <wcrtomb@plt+0x7edc>
  40a718:	ldr	x5, [x4]
  40a71c:	cbz	x5, 40a784 <wcrtomb@plt+0x7e64>
  40a720:	ldr	x6, [x5]
  40a724:	cbz	x6, 40a74c <wcrtomb@plt+0x7e2c>
  40a728:	ldr	x0, [x6]
  40a72c:	mov	x1, x7
  40a730:	bl	408708 <wcrtomb@plt+0x5de8>
  40a734:	mov	x1, x7
  40a738:	ldr	x0, [x6, #8]
  40a73c:	bl	408708 <wcrtomb@plt+0x5de8>
  40a740:	ldrb	w0, [x6, #24]
  40a744:	ldr	x1, [x6, #16]
  40a748:	str	x1, [x7, x0, lsl #3]
  40a74c:	ldr	x6, [x5, #8]
  40a750:	cbz	x6, 40a778 <wcrtomb@plt+0x7e58>
  40a754:	ldr	x0, [x6]
  40a758:	mov	x1, x7
  40a75c:	bl	408708 <wcrtomb@plt+0x5de8>
  40a760:	mov	x1, x7
  40a764:	ldr	x0, [x6, #8]
  40a768:	bl	408708 <wcrtomb@plt+0x5de8>
  40a76c:	ldrb	w0, [x6, #24]
  40a770:	ldr	x1, [x6, #16]
  40a774:	str	x1, [x7, x0, lsl #3]
  40a778:	ldrb	w0, [x5, #24]
  40a77c:	ldr	x1, [x5, #16]
  40a780:	str	x1, [x7, x0, lsl #3]
  40a784:	ldr	x5, [x4, #8]
  40a788:	cbz	x5, 40a7f0 <wcrtomb@plt+0x7ed0>
  40a78c:	ldr	x6, [x5]
  40a790:	cbz	x6, 40a7b8 <wcrtomb@plt+0x7e98>
  40a794:	ldr	x0, [x6]
  40a798:	mov	x1, x7
  40a79c:	bl	408708 <wcrtomb@plt+0x5de8>
  40a7a0:	mov	x1, x7
  40a7a4:	ldr	x0, [x6, #8]
  40a7a8:	bl	408708 <wcrtomb@plt+0x5de8>
  40a7ac:	ldrb	w0, [x6, #24]
  40a7b0:	ldr	x1, [x6, #16]
  40a7b4:	str	x1, [x7, x0, lsl #3]
  40a7b8:	ldr	x6, [x5, #8]
  40a7bc:	cbz	x6, 40a7e4 <wcrtomb@plt+0x7ec4>
  40a7c0:	ldr	x0, [x6]
  40a7c4:	mov	x1, x7
  40a7c8:	bl	408708 <wcrtomb@plt+0x5de8>
  40a7cc:	mov	x1, x7
  40a7d0:	ldr	x0, [x6, #8]
  40a7d4:	bl	408708 <wcrtomb@plt+0x5de8>
  40a7d8:	ldrb	w0, [x6, #24]
  40a7dc:	ldr	x1, [x6, #16]
  40a7e0:	str	x1, [x7, x0, lsl #3]
  40a7e4:	ldrb	w0, [x5, #24]
  40a7e8:	ldr	x1, [x5, #16]
  40a7ec:	str	x1, [x7, x0, lsl #3]
  40a7f0:	ldrb	w0, [x4, #24]
  40a7f4:	ldr	x1, [x4, #16]
  40a7f8:	str	x1, [x7, x0, lsl #3]
  40a7fc:	ldrb	w0, [x3, #24]
  40a800:	ldr	x1, [x3, #16]
  40a804:	str	x1, [x7, x0, lsl #3]
  40a808:	ldrb	w0, [x2, #24]
  40a80c:	ldr	x1, [x2, #16]
  40a810:	str	x1, [x7, x0, lsl #3]
  40a814:	cbz	x20, 40b8c4 <wcrtomb@plt+0x8fa4>
  40a818:	mov	w6, #0xffffffff            	// #-1
  40a81c:	mov	w3, #0xfffffffe            	// #-2
  40a820:	mov	w1, w6
  40a824:	mov	x2, #0x0                   	// #0
  40a828:	b	40a854 <wcrtomb@plt+0x7f34>
  40a82c:	and	x0, x0, #0xff
  40a830:	cmp	w4, w3
  40a834:	b.eq	40a8d0 <wcrtomb@plt+0x7fb0>  // b.none
  40a838:	cmp	w3, w6
  40a83c:	ccmp	x0, x2, #0x0, eq  // eq = none
  40a840:	csel	w3, w3, w1, eq  // eq = none
  40a844:	csel	w6, w2, w6, eq  // eq = none
  40a848:	add	x2, x2, #0x1
  40a84c:	cmp	x2, #0x100
  40a850:	b.eq	40a884 <wcrtomb@plt+0x7f64>  // b.none
  40a854:	ldrb	w0, [x20, x2]
  40a858:	cmn	w3, #0x2
  40a85c:	mov	x4, x0
  40a860:	ldr	x5, [x7, x0, lsl #3]
  40a864:	str	x5, [x23, x2, lsl #3]
  40a868:	cbz	x5, 40a848 <wcrtomb@plt+0x7f28>
  40a86c:	b.ne	40a82c <wcrtomb@plt+0x7f0c>  // b.any
  40a870:	mov	w6, w2
  40a874:	add	x2, x2, #0x1
  40a878:	mov	w3, w0
  40a87c:	cmp	x2, #0x100
  40a880:	b.ne	40a854 <wcrtomb@plt+0x7f34>  // b.any
  40a884:	str	w3, [x21, #2448]
  40a888:	cmp	x22, #0x1
  40a88c:	str	w6, [x21, #2452]
  40a890:	b.eq	40c0a8 <wcrtomb@plt+0x9788>  // b.none
  40a894:	add	x21, x21, #0x78
  40a898:	mov	x0, #0x0                   	// #0
  40a89c:	cbz	x20, 40a8b8 <wcrtomb@plt+0x7f98>
  40a8a0:	ldrb	w1, [x20, x0]
  40a8a4:	ldrb	w1, [x19, x1]
  40a8a8:	strb	w1, [x21, x0]
  40a8ac:	add	x0, x0, #0x1
  40a8b0:	cmp	x0, #0x100
  40a8b4:	b.ne	40a8a0 <wcrtomb@plt+0x7f80>  // b.any
  40a8b8:	ldp	x29, x30, [sp]
  40a8bc:	ldp	x19, x20, [sp, #16]
  40a8c0:	ldp	x21, x22, [sp, #32]
  40a8c4:	ldp	x23, x24, [sp, #48]
  40a8c8:	add	sp, sp, #0x950
  40a8cc:	ret
  40a8d0:	cmp	w3, w6
  40a8d4:	csel	w6, w2, w1, eq  // eq = none
  40a8d8:	b	40a848 <wcrtomb@plt+0x7f28>
  40a8dc:	ldr	x1, [sp, #72]
  40a8e0:	b	409e64 <wcrtomb@plt+0x7544>
  40a8e4:	ldr	d0, [x21, #104]
  40a8e8:	ldr	x4, [x6, #32]
  40a8ec:	dup	v0.2d, v0.d[0]
  40a8f0:	str	q0, [x6, #48]
  40a8f4:	cbz	x4, 40a3f8 <wcrtomb@plt+0x7ad8>
  40a8f8:	ldp	x7, x5, [x6]
  40a8fc:	nop
  40a900:	cbz	x5, 40a9a0 <wcrtomb@plt+0x8080>
  40a904:	ldr	x8, [x5]
  40a908:	ldr	x3, [x4, #8]
  40a90c:	cbz	x8, 40aacc <wcrtomb@plt+0x81ac>
  40a910:	ldr	x9, [x8]
  40a914:	cbz	x9, 40ac00 <wcrtomb@plt+0x82e0>
  40a918:	ldr	x10, [x9]
  40a91c:	cbz	x10, 40aea0 <wcrtomb@plt+0x8580>
  40a920:	ldr	x1, [x10]
  40a924:	mov	x0, x3
  40a928:	bl	408680 <wcrtomb@plt+0x5d60>
  40a92c:	tst	w0, #0xff
  40a930:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40a934:	ldr	x11, [x10, #8]
  40a938:	cbz	x11, 40b7cc <wcrtomb@plt+0x8eac>
  40a93c:	ldr	x1, [x11]
  40a940:	mov	x0, x3
  40a944:	bl	408680 <wcrtomb@plt+0x5d60>
  40a948:	tst	w0, #0xff
  40a94c:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40a950:	ldr	x1, [x11, #8]
  40a954:	mov	x0, x3
  40a958:	bl	408680 <wcrtomb@plt+0x5d60>
  40a95c:	tst	w0, #0xff
  40a960:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40a964:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40a968:	ldrb	w2, [x11, #24]
  40a96c:	mov	x0, x3
  40a970:	ldrb	w1, [x0, #24]
  40a974:	cmp	w2, w1
  40a978:	b.eq	40a9e0 <wcrtomb@plt+0x80c0>  // b.none
  40a97c:	ldp	x1, x0, [x0]
  40a980:	b.cc	40a9cc <wcrtomb@plt+0x80ac>  // b.lo, b.ul, b.last
  40a984:	cbnz	x0, 40a970 <wcrtomb@plt+0x8050>
  40a988:	ldp	x2, x1, [x4, #40]
  40a98c:	ldr	x0, [x6, #40]
  40a990:	sub	x0, x0, x2
  40a994:	cmp	x0, x1
  40a998:	b.ge	40a9a0 <wcrtomb@plt+0x8080>  // b.tcont
  40a99c:	str	x0, [x4, #48]
  40a9a0:	cbz	x7, 40a9c0 <wcrtomb@plt+0x80a0>
  40a9a4:	ldr	x2, [x4, #40]
  40a9a8:	ldr	x0, [x6, #40]
  40a9ac:	ldr	x1, [x4, #56]
  40a9b0:	sub	x0, x0, x2
  40a9b4:	cmp	x1, x0
  40a9b8:	b.le	40a9c0 <wcrtomb@plt+0x80a0>
  40a9bc:	str	x0, [x4, #56]
  40a9c0:	ldr	x4, [x4, #32]
  40a9c4:	cbnz	x4, 40a900 <wcrtomb@plt+0x7fe0>
  40a9c8:	b	40a3f8 <wcrtomb@plt+0x7ad8>
  40a9cc:	mov	x0, x1
  40a9d0:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40a9d4:	ldrb	w1, [x0, #24]
  40a9d8:	cmp	w2, w1
  40a9dc:	b.ne	40a97c <wcrtomb@plt+0x805c>  // b.any
  40a9e0:	mov	x0, x3
  40a9e4:	ldrb	w2, [x10, #24]
  40a9e8:	ldrb	w1, [x0, #24]
  40a9ec:	cmp	w2, w1
  40a9f0:	b.eq	40aa18 <wcrtomb@plt+0x80f8>  // b.none
  40a9f4:	nop
  40a9f8:	ldp	x1, x0, [x0]
  40a9fc:	b.cc	40b594 <wcrtomb@plt+0x8c74>  // b.lo, b.ul, b.last
  40aa00:	mov	x1, x0
  40aa04:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40aa08:	mov	x0, x1
  40aa0c:	ldrb	w1, [x0, #24]
  40aa10:	cmp	w2, w1
  40aa14:	b.ne	40a9f8 <wcrtomb@plt+0x80d8>  // b.any
  40aa18:	ldr	x11, [x9, #8]
  40aa1c:	cbnz	x11, 40aea8 <wcrtomb@plt+0x8588>
  40aa20:	mov	x0, x3
  40aa24:	ldrb	w2, [x9, #24]
  40aa28:	ldrb	w1, [x0, #24]
  40aa2c:	cmp	w2, w1
  40aa30:	b.eq	40aa58 <wcrtomb@plt+0x8138>  // b.none
  40aa34:	nop
  40aa38:	ldp	x1, x0, [x0]
  40aa3c:	b.cc	40b5a0 <wcrtomb@plt+0x8c80>  // b.lo, b.ul, b.last
  40aa40:	mov	x1, x0
  40aa44:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40aa48:	mov	x0, x1
  40aa4c:	ldrb	w1, [x0, #24]
  40aa50:	cmp	w2, w1
  40aa54:	b.ne	40aa38 <wcrtomb@plt+0x8118>  // b.any
  40aa58:	ldr	x9, [x8, #8]
  40aa5c:	cbnz	x9, 40ac08 <wcrtomb@plt+0x82e8>
  40aa60:	mov	x0, x3
  40aa64:	ldrb	w2, [x8, #24]
  40aa68:	ldrb	w1, [x0, #24]
  40aa6c:	cmp	w2, w1
  40aa70:	b.eq	40aa98 <wcrtomb@plt+0x8178>  // b.none
  40aa74:	nop
  40aa78:	ldp	x1, x0, [x0]
  40aa7c:	b.cc	40b5ac <wcrtomb@plt+0x8c8c>  // b.lo, b.ul, b.last
  40aa80:	mov	x1, x0
  40aa84:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40aa88:	mov	x0, x1
  40aa8c:	ldrb	w1, [x0, #24]
  40aa90:	cmp	w2, w1
  40aa94:	b.ne	40aa78 <wcrtomb@plt+0x8158>  // b.any
  40aa98:	ldr	x8, [x5, #8]
  40aa9c:	cbnz	x8, 40aad4 <wcrtomb@plt+0x81b4>
  40aaa0:	ldrb	w2, [x5, #24]
  40aaa4:	nop
  40aaa8:	ldrb	w0, [x3, #24]
  40aaac:	cmp	w2, w0
  40aab0:	b.eq	40a9a0 <wcrtomb@plt+0x8080>  // b.none
  40aab4:	ldp	x0, x1, [x3]
  40aab8:	b.cc	40b5b8 <wcrtomb@plt+0x8c98>  // b.lo, b.ul, b.last
  40aabc:	mov	x0, x1
  40aac0:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40aac4:	mov	x3, x0
  40aac8:	b	40aaa8 <wcrtomb@plt+0x8188>
  40aacc:	ldr	x8, [x5, #8]
  40aad0:	cbz	x8, 40b6dc <wcrtomb@plt+0x8dbc>
  40aad4:	ldr	x9, [x8]
  40aad8:	cbz	x9, 40af50 <wcrtomb@plt+0x8630>
  40aadc:	ldr	x11, [x9]
  40aae0:	cbz	x11, 40b084 <wcrtomb@plt+0x8764>
  40aae4:	ldr	x10, [x11]
  40aae8:	cbz	x10, 40b39c <wcrtomb@plt+0x8a7c>
  40aaec:	ldr	x1, [x10]
  40aaf0:	mov	x0, x3
  40aaf4:	bl	408680 <wcrtomb@plt+0x5d60>
  40aaf8:	tst	w0, #0xff
  40aafc:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40ab00:	ldr	x1, [x10, #8]
  40ab04:	mov	x0, x3
  40ab08:	bl	408680 <wcrtomb@plt+0x5d60>
  40ab0c:	tst	w0, #0xff
  40ab10:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40ab14:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40ab18:	ldrb	w2, [x10, #24]
  40ab1c:	mov	x0, x3
  40ab20:	ldrb	w1, [x0, #24]
  40ab24:	cmp	w2, w1
  40ab28:	b.eq	40ab44 <wcrtomb@plt+0x8224>  // b.none
  40ab2c:	ldp	x1, x0, [x0]
  40ab30:	b.cc	40abf4 <wcrtomb@plt+0x82d4>  // b.lo, b.ul, b.last
  40ab34:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40ab38:	ldrb	w1, [x0, #24]
  40ab3c:	cmp	w2, w1
  40ab40:	b.ne	40ab2c <wcrtomb@plt+0x820c>  // b.any
  40ab44:	ldr	x10, [x11, #8]
  40ab48:	cbnz	x10, 40b3a4 <wcrtomb@plt+0x8a84>
  40ab4c:	mov	x0, x3
  40ab50:	ldrb	w2, [x11, #24]
  40ab54:	ldrb	w1, [x0, #24]
  40ab58:	cmp	w2, w1
  40ab5c:	b.eq	40ab80 <wcrtomb@plt+0x8260>  // b.none
  40ab60:	ldp	x1, x0, [x0]
  40ab64:	b.cc	40b810 <wcrtomb@plt+0x8ef0>  // b.lo, b.ul, b.last
  40ab68:	mov	x1, x0
  40ab6c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40ab70:	mov	x0, x1
  40ab74:	ldrb	w1, [x0, #24]
  40ab78:	cmp	w2, w1
  40ab7c:	b.ne	40ab60 <wcrtomb@plt+0x8240>  // b.any
  40ab80:	ldr	x10, [x9, #8]
  40ab84:	cbnz	x10, 40b08c <wcrtomb@plt+0x876c>
  40ab88:	mov	x0, x3
  40ab8c:	ldrb	w2, [x9, #24]
  40ab90:	ldrb	w1, [x0, #24]
  40ab94:	cmp	w2, w1
  40ab98:	b.eq	40abc0 <wcrtomb@plt+0x82a0>  // b.none
  40ab9c:	nop
  40aba0:	ldp	x1, x0, [x0]
  40aba4:	b.cc	40b81c <wcrtomb@plt+0x8efc>  // b.lo, b.ul, b.last
  40aba8:	mov	x1, x0
  40abac:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40abb0:	mov	x0, x1
  40abb4:	ldrb	w1, [x0, #24]
  40abb8:	cmp	w2, w1
  40abbc:	b.ne	40aba0 <wcrtomb@plt+0x8280>  // b.any
  40abc0:	ldr	x9, [x8, #8]
  40abc4:	cbnz	x9, 40af58 <wcrtomb@plt+0x8638>
  40abc8:	ldrb	w2, [x8, #24]
  40abcc:	mov	x0, x3
  40abd0:	ldrb	w1, [x0, #24]
  40abd4:	cmp	w2, w1
  40abd8:	b.eq	40aaa0 <wcrtomb@plt+0x8180>  // b.none
  40abdc:	ldp	x1, x0, [x0]
  40abe0:	b.cc	40b828 <wcrtomb@plt+0x8f08>  // b.lo, b.ul, b.last
  40abe4:	mov	x1, x0
  40abe8:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40abec:	mov	x0, x1
  40abf0:	b	40abd0 <wcrtomb@plt+0x82b0>
  40abf4:	mov	x0, x1
  40abf8:	cbnz	x1, 40ab20 <wcrtomb@plt+0x8200>
  40abfc:	b	40a988 <wcrtomb@plt+0x8068>
  40ac00:	ldr	x9, [x8, #8]
  40ac04:	cbz	x9, 40b784 <wcrtomb@plt+0x8e64>
  40ac08:	ldr	x11, [x9]
  40ac0c:	cbz	x11, 40acb0 <wcrtomb@plt+0x8390>
  40ac10:	ldr	x10, [x11]
  40ac14:	cbz	x10, 40b23c <wcrtomb@plt+0x891c>
  40ac18:	ldr	x1, [x10]
  40ac1c:	mov	x0, x3
  40ac20:	bl	408680 <wcrtomb@plt+0x5d60>
  40ac24:	tst	w0, #0xff
  40ac28:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40ac2c:	ldr	x1, [x10, #8]
  40ac30:	mov	x0, x3
  40ac34:	bl	408680 <wcrtomb@plt+0x5d60>
  40ac38:	tst	w0, #0xff
  40ac3c:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40ac40:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40ac44:	ldrb	w2, [x10, #24]
  40ac48:	mov	x0, x3
  40ac4c:	nop
  40ac50:	ldrb	w1, [x0, #24]
  40ac54:	cmp	w2, w1
  40ac58:	b.eq	40ac74 <wcrtomb@plt+0x8354>  // b.none
  40ac5c:	ldp	x1, x0, [x0]
  40ac60:	b.cc	40ae94 <wcrtomb@plt+0x8574>  // b.lo, b.ul, b.last
  40ac64:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40ac68:	ldrb	w1, [x0, #24]
  40ac6c:	cmp	w2, w1
  40ac70:	b.ne	40ac5c <wcrtomb@plt+0x833c>  // b.any
  40ac74:	ldr	x10, [x11, #8]
  40ac78:	cbnz	x10, 40b244 <wcrtomb@plt+0x8924>
  40ac7c:	mov	x0, x3
  40ac80:	ldrb	w2, [x11, #24]
  40ac84:	ldrb	w1, [x0, #24]
  40ac88:	cmp	w2, w1
  40ac8c:	b.eq	40acb0 <wcrtomb@plt+0x8390>  // b.none
  40ac90:	ldp	x1, x0, [x0]
  40ac94:	b.cc	40b7f4 <wcrtomb@plt+0x8ed4>  // b.lo, b.ul, b.last
  40ac98:	mov	x1, x0
  40ac9c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40aca0:	mov	x0, x1
  40aca4:	ldrb	w1, [x0, #24]
  40aca8:	cmp	w2, w1
  40acac:	b.ne	40ac90 <wcrtomb@plt+0x8370>  // b.any
  40acb0:	ldr	x10, [x9, #8]
  40acb4:	cbz	x10, 40b9e8 <wcrtomb@plt+0x90c8>
  40acb8:	ldr	x11, [x10]
  40acbc:	cbz	x11, 40ad68 <wcrtomb@plt+0x8448>
  40acc0:	ldr	x1, [x11]
  40acc4:	mov	x0, x3
  40acc8:	bl	408680 <wcrtomb@plt+0x5d60>
  40accc:	tst	w0, #0xff
  40acd0:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40acd4:	ldr	x12, [x11, #8]
  40acd8:	cbz	x12, 40c2e0 <wcrtomb@plt+0x99c0>
  40acdc:	ldr	x1, [x12]
  40ace0:	mov	x0, x3
  40ace4:	bl	408680 <wcrtomb@plt+0x5d60>
  40ace8:	tst	w0, #0xff
  40acec:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40acf0:	ldr	x1, [x12, #8]
  40acf4:	mov	x0, x3
  40acf8:	bl	408680 <wcrtomb@plt+0x5d60>
  40acfc:	tst	w0, #0xff
  40ad00:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40ad04:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40ad08:	ldrb	w2, [x12, #24]
  40ad0c:	mov	x0, x3
  40ad10:	ldrb	w1, [x0, #24]
  40ad14:	cmp	w2, w1
  40ad18:	b.eq	40ad34 <wcrtomb@plt+0x8414>  // b.none
  40ad1c:	ldp	x1, x0, [x0]
  40ad20:	b.cc	40b940 <wcrtomb@plt+0x9020>  // b.lo, b.ul, b.last
  40ad24:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40ad28:	ldrb	w1, [x0, #24]
  40ad2c:	cmp	w2, w1
  40ad30:	b.ne	40ad1c <wcrtomb@plt+0x83fc>  // b.any
  40ad34:	mov	x0, x3
  40ad38:	ldrb	w2, [x11, #24]
  40ad3c:	ldrb	w1, [x0, #24]
  40ad40:	cmp	w2, w1
  40ad44:	b.eq	40ad68 <wcrtomb@plt+0x8448>  // b.none
  40ad48:	ldp	x1, x0, [x0]
  40ad4c:	b.cc	40ba3c <wcrtomb@plt+0x911c>  // b.lo, b.ul, b.last
  40ad50:	mov	x1, x0
  40ad54:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40ad58:	mov	x0, x1
  40ad5c:	ldrb	w1, [x0, #24]
  40ad60:	cmp	w2, w1
  40ad64:	b.ne	40ad48 <wcrtomb@plt+0x8428>  // b.any
  40ad68:	ldr	x11, [x10, #8]
  40ad6c:	cbz	x11, 40c2c4 <wcrtomb@plt+0x99a4>
  40ad70:	ldr	x12, [x11]
  40ad74:	cbz	x12, 40b840 <wcrtomb@plt+0x8f20>
  40ad78:	ldr	x1, [x12]
  40ad7c:	mov	x0, x3
  40ad80:	bl	408680 <wcrtomb@plt+0x5d60>
  40ad84:	tst	w0, #0xff
  40ad88:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40ad8c:	ldr	x1, [x12, #8]
  40ad90:	mov	x0, x3
  40ad94:	bl	408680 <wcrtomb@plt+0x5d60>
  40ad98:	tst	w0, #0xff
  40ad9c:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40ada0:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40ada4:	ldrb	w2, [x12, #24]
  40ada8:	mov	x0, x3
  40adac:	nop
  40adb0:	ldrb	w1, [x0, #24]
  40adb4:	cmp	w2, w1
  40adb8:	b.eq	40add4 <wcrtomb@plt+0x84b4>  // b.none
  40adbc:	ldp	x1, x0, [x0]
  40adc0:	b.cc	40b928 <wcrtomb@plt+0x9008>  // b.lo, b.ul, b.last
  40adc4:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40adc8:	ldrb	w1, [x0, #24]
  40adcc:	cmp	w2, w1
  40add0:	b.ne	40adbc <wcrtomb@plt+0x849c>  // b.any
  40add4:	ldr	x12, [x11, #8]
  40add8:	cbz	x12, 40ae34 <wcrtomb@plt+0x8514>
  40addc:	ldr	x1, [x12]
  40ade0:	mov	x0, x3
  40ade4:	bl	408680 <wcrtomb@plt+0x5d60>
  40ade8:	tst	w0, #0xff
  40adec:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40adf0:	ldr	x1, [x12, #8]
  40adf4:	mov	x0, x3
  40adf8:	bl	408680 <wcrtomb@plt+0x5d60>
  40adfc:	tst	w0, #0xff
  40ae00:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40ae04:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40ae08:	ldrb	w2, [x12, #24]
  40ae0c:	mov	x0, x3
  40ae10:	ldrb	w1, [x0, #24]
  40ae14:	cmp	w2, w1
  40ae18:	b.eq	40ae34 <wcrtomb@plt+0x8514>  // b.none
  40ae1c:	ldp	x1, x0, [x0]
  40ae20:	b.cc	40b9b8 <wcrtomb@plt+0x9098>  // b.lo, b.ul, b.last
  40ae24:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40ae28:	ldrb	w1, [x0, #24]
  40ae2c:	cmp	w2, w1
  40ae30:	b.ne	40ae1c <wcrtomb@plt+0x84fc>  // b.any
  40ae34:	mov	x0, x3
  40ae38:	ldrb	w2, [x11, #24]
  40ae3c:	ldrb	w1, [x0, #24]
  40ae40:	cmp	w2, w1
  40ae44:	b.eq	40ae68 <wcrtomb@plt+0x8548>  // b.none
  40ae48:	ldp	x1, x0, [x0]
  40ae4c:	b.cc	40c288 <wcrtomb@plt+0x9968>  // b.lo, b.ul, b.last
  40ae50:	mov	x1, x0
  40ae54:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40ae58:	mov	x0, x1
  40ae5c:	ldrb	w1, [x0, #24]
  40ae60:	cmp	w2, w1
  40ae64:	b.ne	40ae48 <wcrtomb@plt+0x8528>  // b.any
  40ae68:	ldrb	w2, [x10, #24]
  40ae6c:	mov	x0, x3
  40ae70:	ldrb	w1, [x0, #24]
  40ae74:	cmp	w2, w1
  40ae78:	b.eq	40b9ec <wcrtomb@plt+0x90cc>  // b.none
  40ae7c:	ldp	x1, x0, [x0]
  40ae80:	b.cc	40c294 <wcrtomb@plt+0x9974>  // b.lo, b.ul, b.last
  40ae84:	mov	x1, x0
  40ae88:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40ae8c:	mov	x0, x1
  40ae90:	b	40ae70 <wcrtomb@plt+0x8550>
  40ae94:	mov	x0, x1
  40ae98:	cbnz	x1, 40ac50 <wcrtomb@plt+0x8330>
  40ae9c:	b	40a988 <wcrtomb@plt+0x8068>
  40aea0:	ldr	x11, [x9, #8]
  40aea4:	cbz	x11, 40b850 <wcrtomb@plt+0x8f30>
  40aea8:	ldr	x10, [x11]
  40aeac:	cbz	x10, 40b2ec <wcrtomb@plt+0x89cc>
  40aeb0:	ldr	x1, [x10]
  40aeb4:	mov	x0, x3
  40aeb8:	bl	408680 <wcrtomb@plt+0x5d60>
  40aebc:	tst	w0, #0xff
  40aec0:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40aec4:	ldr	x1, [x10, #8]
  40aec8:	mov	x0, x3
  40aecc:	bl	408680 <wcrtomb@plt+0x5d60>
  40aed0:	tst	w0, #0xff
  40aed4:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40aed8:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40aedc:	ldrb	w2, [x10, #24]
  40aee0:	mov	x0, x3
  40aee4:	nop
  40aee8:	ldrb	w1, [x0, #24]
  40aeec:	cmp	w2, w1
  40aef0:	b.eq	40af0c <wcrtomb@plt+0x85ec>  // b.none
  40aef4:	ldp	x1, x0, [x0]
  40aef8:	b.cc	40af44 <wcrtomb@plt+0x8624>  // b.lo, b.ul, b.last
  40aefc:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40af00:	ldrb	w1, [x0, #24]
  40af04:	cmp	w2, w1
  40af08:	b.ne	40aef4 <wcrtomb@plt+0x85d4>  // b.any
  40af0c:	ldr	x10, [x11, #8]
  40af10:	cbnz	x10, 40b2f4 <wcrtomb@plt+0x89d4>
  40af14:	ldrb	w2, [x11, #24]
  40af18:	mov	x0, x3
  40af1c:	nop
  40af20:	ldrb	w1, [x0, #24]
  40af24:	cmp	w2, w1
  40af28:	b.eq	40aa20 <wcrtomb@plt+0x8100>  // b.none
  40af2c:	ldp	x1, x0, [x0]
  40af30:	b.cc	40b834 <wcrtomb@plt+0x8f14>  // b.lo, b.ul, b.last
  40af34:	mov	x1, x0
  40af38:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40af3c:	mov	x0, x1
  40af40:	b	40af20 <wcrtomb@plt+0x8600>
  40af44:	mov	x0, x1
  40af48:	cbnz	x1, 40aee8 <wcrtomb@plt+0x85c8>
  40af4c:	b	40a988 <wcrtomb@plt+0x8068>
  40af50:	ldr	x9, [x8, #8]
  40af54:	cbz	x9, 40ba28 <wcrtomb@plt+0x9108>
  40af58:	ldr	x10, [x9]
  40af5c:	cbz	x10, 40b44c <wcrtomb@plt+0x8b2c>
  40af60:	ldr	x11, [x10]
  40af64:	cbz	x11, 40b5c4 <wcrtomb@plt+0x8ca4>
  40af68:	ldr	x1, [x11]
  40af6c:	mov	x0, x3
  40af70:	bl	408680 <wcrtomb@plt+0x5d60>
  40af74:	tst	w0, #0xff
  40af78:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40af7c:	ldr	x12, [x11, #8]
  40af80:	cbz	x12, 40c308 <wcrtomb@plt+0x99e8>
  40af84:	ldr	x1, [x12]
  40af88:	mov	x0, x3
  40af8c:	bl	408680 <wcrtomb@plt+0x5d60>
  40af90:	tst	w0, #0xff
  40af94:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40af98:	ldr	x1, [x12, #8]
  40af9c:	mov	x0, x3
  40afa0:	bl	408680 <wcrtomb@plt+0x5d60>
  40afa4:	tst	w0, #0xff
  40afa8:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40afac:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40afb0:	ldrb	w2, [x12, #24]
  40afb4:	mov	x0, x3
  40afb8:	ldrb	w1, [x0, #24]
  40afbc:	cmp	w2, w1
  40afc0:	b.eq	40afdc <wcrtomb@plt+0x86bc>  // b.none
  40afc4:	ldp	x1, x0, [x0]
  40afc8:	b.cc	40b934 <wcrtomb@plt+0x9014>  // b.lo, b.ul, b.last
  40afcc:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40afd0:	ldrb	w1, [x0, #24]
  40afd4:	cmp	w2, w1
  40afd8:	b.ne	40afc4 <wcrtomb@plt+0x86a4>  // b.any
  40afdc:	mov	x0, x3
  40afe0:	ldrb	w2, [x11, #24]
  40afe4:	ldrb	w1, [x0, #24]
  40afe8:	cmp	w2, w1
  40afec:	b.eq	40b010 <wcrtomb@plt+0x86f0>  // b.none
  40aff0:	ldp	x1, x0, [x0]
  40aff4:	b.cc	40ba30 <wcrtomb@plt+0x9110>  // b.lo, b.ul, b.last
  40aff8:	mov	x1, x0
  40affc:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b000:	mov	x0, x1
  40b004:	ldrb	w1, [x0, #24]
  40b008:	cmp	w2, w1
  40b00c:	b.ne	40aff0 <wcrtomb@plt+0x86d0>  // b.any
  40b010:	ldr	x11, [x10, #8]
  40b014:	cbnz	x11, 40b5cc <wcrtomb@plt+0x8cac>
  40b018:	mov	x0, x3
  40b01c:	ldrb	w2, [x10, #24]
  40b020:	ldrb	w1, [x0, #24]
  40b024:	cmp	w2, w1
  40b028:	b.eq	40b050 <wcrtomb@plt+0x8730>  // b.none
  40b02c:	nop
  40b030:	ldp	x1, x0, [x0]
  40b034:	b.cc	40ba78 <wcrtomb@plt+0x9158>  // b.lo, b.ul, b.last
  40b038:	mov	x1, x0
  40b03c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b040:	mov	x0, x1
  40b044:	ldrb	w1, [x0, #24]
  40b048:	cmp	w2, w1
  40b04c:	b.ne	40b030 <wcrtomb@plt+0x8710>  // b.any
  40b050:	ldr	x10, [x9, #8]
  40b054:	cbnz	x10, 40b454 <wcrtomb@plt+0x8b34>
  40b058:	ldrb	w2, [x9, #24]
  40b05c:	mov	x0, x3
  40b060:	ldrb	w1, [x0, #24]
  40b064:	cmp	w2, w1
  40b068:	b.eq	40abc8 <wcrtomb@plt+0x82a8>  // b.none
  40b06c:	ldp	x1, x0, [x0]
  40b070:	b.cc	40ba84 <wcrtomb@plt+0x9164>  // b.lo, b.ul, b.last
  40b074:	mov	x1, x0
  40b078:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b07c:	mov	x0, x1
  40b080:	b	40b060 <wcrtomb@plt+0x8740>
  40b084:	ldr	x10, [x9, #8]
  40b088:	cbz	x10, 40c208 <wcrtomb@plt+0x98e8>
  40b08c:	ldr	x11, [x10]
  40b090:	cbz	x11, 40b140 <wcrtomb@plt+0x8820>
  40b094:	ldr	x1, [x11]
  40b098:	mov	x0, x3
  40b09c:	bl	408680 <wcrtomb@plt+0x5d60>
  40b0a0:	tst	w0, #0xff
  40b0a4:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b0a8:	ldr	x12, [x11, #8]
  40b0ac:	cbz	x12, 40c2f0 <wcrtomb@plt+0x99d0>
  40b0b0:	ldr	x1, [x12]
  40b0b4:	mov	x0, x3
  40b0b8:	bl	408680 <wcrtomb@plt+0x5d60>
  40b0bc:	tst	w0, #0xff
  40b0c0:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b0c4:	ldr	x1, [x12, #8]
  40b0c8:	mov	x0, x3
  40b0cc:	bl	408680 <wcrtomb@plt+0x5d60>
  40b0d0:	tst	w0, #0xff
  40b0d4:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b0d8:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b0dc:	ldrb	w2, [x12, #24]
  40b0e0:	mov	x0, x3
  40b0e4:	nop
  40b0e8:	ldrb	w1, [x0, #24]
  40b0ec:	cmp	w2, w1
  40b0f0:	b.eq	40b10c <wcrtomb@plt+0x87ec>  // b.none
  40b0f4:	ldp	x1, x0, [x0]
  40b0f8:	b.cc	40b94c <wcrtomb@plt+0x902c>  // b.lo, b.ul, b.last
  40b0fc:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b100:	ldrb	w1, [x0, #24]
  40b104:	cmp	w2, w1
  40b108:	b.ne	40b0f4 <wcrtomb@plt+0x87d4>  // b.any
  40b10c:	mov	x0, x3
  40b110:	ldrb	w2, [x11, #24]
  40b114:	ldrb	w1, [x0, #24]
  40b118:	cmp	w2, w1
  40b11c:	b.eq	40b140 <wcrtomb@plt+0x8820>  // b.none
  40b120:	ldp	x1, x0, [x0]
  40b124:	b.cc	40ba48 <wcrtomb@plt+0x9128>  // b.lo, b.ul, b.last
  40b128:	mov	x1, x0
  40b12c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b130:	mov	x0, x1
  40b134:	ldrb	w1, [x0, #24]
  40b138:	cmp	w2, w1
  40b13c:	b.ne	40b120 <wcrtomb@plt+0x8800>  // b.any
  40b140:	ldr	x11, [x10, #8]
  40b144:	cbz	x11, 40c248 <wcrtomb@plt+0x9928>
  40b148:	ldr	x12, [x11]
  40b14c:	cbz	x12, 40b7d4 <wcrtomb@plt+0x8eb4>
  40b150:	ldr	x1, [x12]
  40b154:	mov	x0, x3
  40b158:	bl	408680 <wcrtomb@plt+0x5d60>
  40b15c:	tst	w0, #0xff
  40b160:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b164:	ldr	x1, [x12, #8]
  40b168:	mov	x0, x3
  40b16c:	bl	408680 <wcrtomb@plt+0x5d60>
  40b170:	tst	w0, #0xff
  40b174:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b178:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b17c:	ldrb	w2, [x12, #24]
  40b180:	mov	x0, x3
  40b184:	nop
  40b188:	ldrb	w1, [x0, #24]
  40b18c:	cmp	w2, w1
  40b190:	b.eq	40b1ac <wcrtomb@plt+0x888c>  // b.none
  40b194:	ldp	x1, x0, [x0]
  40b198:	b.cc	40b988 <wcrtomb@plt+0x9068>  // b.lo, b.ul, b.last
  40b19c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b1a0:	ldrb	w1, [x0, #24]
  40b1a4:	cmp	w2, w1
  40b1a8:	b.ne	40b194 <wcrtomb@plt+0x8874>  // b.any
  40b1ac:	ldr	x12, [x11, #8]
  40b1b0:	cbz	x12, 40b20c <wcrtomb@plt+0x88ec>
  40b1b4:	ldr	x1, [x12]
  40b1b8:	mov	x0, x3
  40b1bc:	bl	408680 <wcrtomb@plt+0x5d60>
  40b1c0:	tst	w0, #0xff
  40b1c4:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b1c8:	ldr	x1, [x12, #8]
  40b1cc:	mov	x0, x3
  40b1d0:	bl	408680 <wcrtomb@plt+0x5d60>
  40b1d4:	tst	w0, #0xff
  40b1d8:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b1dc:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b1e0:	ldrb	w2, [x12, #24]
  40b1e4:	mov	x0, x3
  40b1e8:	ldrb	w1, [x0, #24]
  40b1ec:	cmp	w2, w1
  40b1f0:	b.eq	40b20c <wcrtomb@plt+0x88ec>  // b.none
  40b1f4:	ldp	x1, x0, [x0]
  40b1f8:	b.cc	40b9dc <wcrtomb@plt+0x90bc>  // b.lo, b.ul, b.last
  40b1fc:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b200:	ldrb	w1, [x0, #24]
  40b204:	cmp	w2, w1
  40b208:	b.ne	40b1f4 <wcrtomb@plt+0x88d4>  // b.any
  40b20c:	ldrb	w2, [x11, #24]
  40b210:	mov	x0, x3
  40b214:	nop
  40b218:	ldrb	w1, [x0, #24]
  40b21c:	cmp	w2, w1
  40b220:	b.eq	40c24c <wcrtomb@plt+0x992c>  // b.none
  40b224:	ldp	x1, x0, [x0]
  40b228:	b.cc	40c2a0 <wcrtomb@plt+0x9980>  // b.lo, b.ul, b.last
  40b22c:	mov	x1, x0
  40b230:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b234:	mov	x0, x1
  40b238:	b	40b218 <wcrtomb@plt+0x88f8>
  40b23c:	ldr	x10, [x11, #8]
  40b240:	cbz	x10, 40c238 <wcrtomb@plt+0x9918>
  40b244:	ldr	x1, [x10]
  40b248:	mov	x0, x3
  40b24c:	bl	408680 <wcrtomb@plt+0x5d60>
  40b250:	tst	w0, #0xff
  40b254:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b258:	ldr	x12, [x10, #8]
  40b25c:	cbz	x12, 40c300 <wcrtomb@plt+0x99e0>
  40b260:	ldr	x1, [x12]
  40b264:	mov	x0, x3
  40b268:	bl	408680 <wcrtomb@plt+0x5d60>
  40b26c:	tst	w0, #0xff
  40b270:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b274:	ldr	x1, [x12, #8]
  40b278:	mov	x0, x3
  40b27c:	bl	408680 <wcrtomb@plt+0x5d60>
  40b280:	tst	w0, #0xff
  40b284:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b288:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b28c:	ldrb	w2, [x12, #24]
  40b290:	mov	x0, x3
  40b294:	nop
  40b298:	ldrb	w1, [x0, #24]
  40b29c:	cmp	w2, w1
  40b2a0:	b.eq	40b2bc <wcrtomb@plt+0x899c>  // b.none
  40b2a4:	ldp	x1, x0, [x0]
  40b2a8:	b.cc	40b964 <wcrtomb@plt+0x9044>  // b.lo, b.ul, b.last
  40b2ac:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b2b0:	ldrb	w1, [x0, #24]
  40b2b4:	cmp	w2, w1
  40b2b8:	b.ne	40b2a4 <wcrtomb@plt+0x8984>  // b.any
  40b2bc:	ldrb	w2, [x10, #24]
  40b2c0:	mov	x0, x3
  40b2c4:	nop
  40b2c8:	ldrb	w1, [x0, #24]
  40b2cc:	cmp	w2, w1
  40b2d0:	b.eq	40ac7c <wcrtomb@plt+0x835c>  // b.none
  40b2d4:	ldp	x1, x0, [x0]
  40b2d8:	b.cc	40ba60 <wcrtomb@plt+0x9140>  // b.lo, b.ul, b.last
  40b2dc:	mov	x1, x0
  40b2e0:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b2e4:	mov	x0, x1
  40b2e8:	b	40b2c8 <wcrtomb@plt+0x89a8>
  40b2ec:	ldr	x10, [x11, #8]
  40b2f0:	cbz	x10, 40c240 <wcrtomb@plt+0x9920>
  40b2f4:	ldr	x1, [x10]
  40b2f8:	mov	x0, x3
  40b2fc:	bl	408680 <wcrtomb@plt+0x5d60>
  40b300:	tst	w0, #0xff
  40b304:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b308:	ldr	x12, [x10, #8]
  40b30c:	cbz	x12, 40c2e8 <wcrtomb@plt+0x99c8>
  40b310:	ldr	x1, [x12]
  40b314:	mov	x0, x3
  40b318:	bl	408680 <wcrtomb@plt+0x5d60>
  40b31c:	tst	w0, #0xff
  40b320:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b324:	ldr	x1, [x12, #8]
  40b328:	mov	x0, x3
  40b32c:	bl	408680 <wcrtomb@plt+0x5d60>
  40b330:	tst	w0, #0xff
  40b334:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b338:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b33c:	ldrb	w2, [x12, #24]
  40b340:	mov	x0, x3
  40b344:	nop
  40b348:	ldrb	w1, [x0, #24]
  40b34c:	cmp	w2, w1
  40b350:	b.eq	40b36c <wcrtomb@plt+0x8a4c>  // b.none
  40b354:	ldp	x1, x0, [x0]
  40b358:	b.cc	40b958 <wcrtomb@plt+0x9038>  // b.lo, b.ul, b.last
  40b35c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b360:	ldrb	w1, [x0, #24]
  40b364:	cmp	w2, w1
  40b368:	b.ne	40b354 <wcrtomb@plt+0x8a34>  // b.any
  40b36c:	ldrb	w2, [x10, #24]
  40b370:	mov	x0, x3
  40b374:	nop
  40b378:	ldrb	w1, [x0, #24]
  40b37c:	cmp	w2, w1
  40b380:	b.eq	40af14 <wcrtomb@plt+0x85f4>  // b.none
  40b384:	ldp	x1, x0, [x0]
  40b388:	b.cc	40ba54 <wcrtomb@plt+0x9134>  // b.lo, b.ul, b.last
  40b38c:	mov	x1, x0
  40b390:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b394:	mov	x0, x1
  40b398:	b	40b378 <wcrtomb@plt+0x8a58>
  40b39c:	ldr	x10, [x11, #8]
  40b3a0:	cbz	x10, 40c230 <wcrtomb@plt+0x9910>
  40b3a4:	ldr	x1, [x10]
  40b3a8:	mov	x0, x3
  40b3ac:	bl	408680 <wcrtomb@plt+0x5d60>
  40b3b0:	tst	w0, #0xff
  40b3b4:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b3b8:	ldr	x12, [x10, #8]
  40b3bc:	cbz	x12, 40c2f8 <wcrtomb@plt+0x99d8>
  40b3c0:	ldr	x1, [x12]
  40b3c4:	mov	x0, x3
  40b3c8:	bl	408680 <wcrtomb@plt+0x5d60>
  40b3cc:	tst	w0, #0xff
  40b3d0:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b3d4:	ldr	x1, [x12, #8]
  40b3d8:	mov	x0, x3
  40b3dc:	bl	408680 <wcrtomb@plt+0x5d60>
  40b3e0:	tst	w0, #0xff
  40b3e4:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b3e8:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b3ec:	ldrb	w2, [x12, #24]
  40b3f0:	mov	x0, x3
  40b3f4:	nop
  40b3f8:	ldrb	w1, [x0, #24]
  40b3fc:	cmp	w2, w1
  40b400:	b.eq	40b41c <wcrtomb@plt+0x8afc>  // b.none
  40b404:	ldp	x1, x0, [x0]
  40b408:	b.cc	40b994 <wcrtomb@plt+0x9074>  // b.lo, b.ul, b.last
  40b40c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b410:	ldrb	w1, [x0, #24]
  40b414:	cmp	w2, w1
  40b418:	b.ne	40b404 <wcrtomb@plt+0x8ae4>  // b.any
  40b41c:	ldrb	w2, [x10, #24]
  40b420:	mov	x0, x3
  40b424:	nop
  40b428:	ldrb	w1, [x0, #24]
  40b42c:	cmp	w2, w1
  40b430:	b.eq	40ab4c <wcrtomb@plt+0x822c>  // b.none
  40b434:	ldp	x1, x0, [x0]
  40b438:	b.cc	40ba6c <wcrtomb@plt+0x914c>  // b.lo, b.ul, b.last
  40b43c:	mov	x1, x0
  40b440:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b444:	mov	x0, x1
  40b448:	b	40b428 <wcrtomb@plt+0x8b08>
  40b44c:	ldr	x10, [x9, #8]
  40b450:	cbz	x10, 40c2d8 <wcrtomb@plt+0x99b8>
  40b454:	ldr	x11, [x10]
  40b458:	cbz	x11, 40b6e4 <wcrtomb@plt+0x8dc4>
  40b45c:	ldr	x12, [x11]
  40b460:	cbz	x12, 40b800 <wcrtomb@plt+0x8ee0>
  40b464:	ldr	x1, [x12]
  40b468:	mov	x0, x3
  40b46c:	bl	408680 <wcrtomb@plt+0x5d60>
  40b470:	tst	w0, #0xff
  40b474:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b478:	ldr	x1, [x12, #8]
  40b47c:	mov	x0, x3
  40b480:	bl	408680 <wcrtomb@plt+0x5d60>
  40b484:	tst	w0, #0xff
  40b488:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b48c:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b490:	ldrb	w2, [x12, #24]
  40b494:	mov	x0, x3
  40b498:	ldrb	w1, [x0, #24]
  40b49c:	cmp	w2, w1
  40b4a0:	b.eq	40b4bc <wcrtomb@plt+0x8b9c>  // b.none
  40b4a4:	ldp	x1, x0, [x0]
  40b4a8:	b.cc	40b97c <wcrtomb@plt+0x905c>  // b.lo, b.ul, b.last
  40b4ac:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b4b0:	ldrb	w1, [x0, #24]
  40b4b4:	cmp	w2, w1
  40b4b8:	b.ne	40b4a4 <wcrtomb@plt+0x8b84>  // b.any
  40b4bc:	ldr	x12, [x11, #8]
  40b4c0:	cbz	x12, 40b51c <wcrtomb@plt+0x8bfc>
  40b4c4:	ldr	x1, [x12]
  40b4c8:	mov	x0, x3
  40b4cc:	bl	408680 <wcrtomb@plt+0x5d60>
  40b4d0:	tst	w0, #0xff
  40b4d4:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b4d8:	ldr	x1, [x12, #8]
  40b4dc:	mov	x0, x3
  40b4e0:	bl	408680 <wcrtomb@plt+0x5d60>
  40b4e4:	tst	w0, #0xff
  40b4e8:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b4ec:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b4f0:	ldrb	w2, [x12, #24]
  40b4f4:	mov	x0, x3
  40b4f8:	ldrb	w1, [x0, #24]
  40b4fc:	cmp	w2, w1
  40b500:	b.eq	40b51c <wcrtomb@plt+0x8bfc>  // b.none
  40b504:	ldp	x1, x0, [x0]
  40b508:	b.cc	40b9c4 <wcrtomb@plt+0x90a4>  // b.lo, b.ul, b.last
  40b50c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b510:	ldrb	w1, [x0, #24]
  40b514:	cmp	w2, w1
  40b518:	b.ne	40b504 <wcrtomb@plt+0x8be4>  // b.any
  40b51c:	mov	x0, x3
  40b520:	ldrb	w2, [x11, #24]
  40b524:	ldrb	w1, [x0, #24]
  40b528:	cmp	w2, w1
  40b52c:	b.eq	40b550 <wcrtomb@plt+0x8c30>  // b.none
  40b530:	ldp	x1, x0, [x0]
  40b534:	b.cc	40c2ac <wcrtomb@plt+0x998c>  // b.lo, b.ul, b.last
  40b538:	mov	x1, x0
  40b53c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b540:	mov	x0, x1
  40b544:	ldrb	w1, [x0, #24]
  40b548:	cmp	w2, w1
  40b54c:	b.ne	40b530 <wcrtomb@plt+0x8c10>  // b.any
  40b550:	ldr	x11, [x10, #8]
  40b554:	cbnz	x11, 40b6ec <wcrtomb@plt+0x8dcc>
  40b558:	ldrb	w2, [x10, #24]
  40b55c:	mov	x0, x3
  40b560:	ldrb	w1, [x0, #24]
  40b564:	cmp	w2, w1
  40b568:	b.eq	40b058 <wcrtomb@plt+0x8738>  // b.none
  40b56c:	ldp	x1, x0, [x0]
  40b570:	b.cc	40c2cc <wcrtomb@plt+0x99ac>  // b.lo, b.ul, b.last
  40b574:	mov	x1, x0
  40b578:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b57c:	mov	x0, x1
  40b580:	b	40b560 <wcrtomb@plt+0x8c40>
  40b584:	ldr	x0, [sp, #72]
  40b588:	b	409e5c <wcrtomb@plt+0x753c>
  40b58c:	ldr	x1, [sp, #72]
  40b590:	b	409c2c <wcrtomb@plt+0x730c>
  40b594:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40b598:	mov	x0, x1
  40b59c:	b	40aa0c <wcrtomb@plt+0x80ec>
  40b5a0:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40b5a4:	mov	x0, x1
  40b5a8:	b	40aa4c <wcrtomb@plt+0x812c>
  40b5ac:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40b5b0:	mov	x0, x1
  40b5b4:	b	40aa8c <wcrtomb@plt+0x816c>
  40b5b8:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b5bc:	mov	x3, x0
  40b5c0:	b	40aaa8 <wcrtomb@plt+0x8188>
  40b5c4:	ldr	x11, [x10, #8]
  40b5c8:	cbz	x11, 40c39c <wcrtomb@plt+0x9a7c>
  40b5cc:	ldr	x12, [x11]
  40b5d0:	cbz	x12, 40b7e4 <wcrtomb@plt+0x8ec4>
  40b5d4:	ldr	x1, [x12]
  40b5d8:	mov	x0, x3
  40b5dc:	bl	408680 <wcrtomb@plt+0x5d60>
  40b5e0:	tst	w0, #0xff
  40b5e4:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b5e8:	ldr	x1, [x12, #8]
  40b5ec:	mov	x0, x3
  40b5f0:	bl	408680 <wcrtomb@plt+0x5d60>
  40b5f4:	tst	w0, #0xff
  40b5f8:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b5fc:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b600:	ldrb	w2, [x12, #24]
  40b604:	mov	x0, x3
  40b608:	ldrb	w1, [x0, #24]
  40b60c:	cmp	w2, w1
  40b610:	b.eq	40b62c <wcrtomb@plt+0x8d0c>  // b.none
  40b614:	ldp	x1, x0, [x0]
  40b618:	b.cc	40b970 <wcrtomb@plt+0x9050>  // b.lo, b.ul, b.last
  40b61c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b620:	ldrb	w1, [x0, #24]
  40b624:	cmp	w2, w1
  40b628:	b.ne	40b614 <wcrtomb@plt+0x8cf4>  // b.any
  40b62c:	ldr	x12, [x11, #8]
  40b630:	cbz	x12, 40b68c <wcrtomb@plt+0x8d6c>
  40b634:	ldr	x1, [x12]
  40b638:	mov	x0, x3
  40b63c:	bl	408680 <wcrtomb@plt+0x5d60>
  40b640:	tst	w0, #0xff
  40b644:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b648:	ldr	x1, [x12, #8]
  40b64c:	mov	x0, x3
  40b650:	bl	408680 <wcrtomb@plt+0x5d60>
  40b654:	tst	w0, #0xff
  40b658:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b65c:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b660:	ldrb	w2, [x12, #24]
  40b664:	mov	x0, x3
  40b668:	ldrb	w1, [x0, #24]
  40b66c:	cmp	w2, w1
  40b670:	b.eq	40b68c <wcrtomb@plt+0x8d6c>  // b.none
  40b674:	ldp	x1, x0, [x0]
  40b678:	b.cc	40b9d0 <wcrtomb@plt+0x90b0>  // b.lo, b.ul, b.last
  40b67c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b680:	ldrb	w1, [x0, #24]
  40b684:	cmp	w2, w1
  40b688:	b.ne	40b674 <wcrtomb@plt+0x8d54>  // b.any
  40b68c:	ldrb	w2, [x11, #24]
  40b690:	mov	x0, x3
  40b694:	nop
  40b698:	ldrb	w1, [x0, #24]
  40b69c:	cmp	w2, w1
  40b6a0:	b.eq	40b018 <wcrtomb@plt+0x86f8>  // b.none
  40b6a4:	ldp	x1, x0, [x0]
  40b6a8:	b.cc	40c2b8 <wcrtomb@plt+0x9998>  // b.lo, b.ul, b.last
  40b6ac:	mov	x1, x0
  40b6b0:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b6b4:	mov	x0, x1
  40b6b8:	b	40b698 <wcrtomb@plt+0x8d78>
  40b6bc:	ldr	x0, [sp, #72]
  40b6c0:	b	409c24 <wcrtomb@plt+0x7304>
  40b6c4:	ldr	x1, [sp, #72]
  40b6c8:	b	409b14 <wcrtomb@plt+0x71f4>
  40b6cc:	ldr	x1, [sp, #72]
  40b6d0:	b	409d44 <wcrtomb@plt+0x7424>
  40b6d4:	ldr	x1, [sp, #72]
  40b6d8:	b	409e54 <wcrtomb@plt+0x7534>
  40b6dc:	cbnz	x3, 40aaa0 <wcrtomb@plt+0x8180>
  40b6e0:	b	40a988 <wcrtomb@plt+0x8068>
  40b6e4:	ldr	x11, [x10, #8]
  40b6e8:	cbz	x11, 40c3b0 <wcrtomb@plt+0x9a90>
  40b6ec:	ldr	x12, [x11]
  40b6f0:	cbz	x12, 40ba90 <wcrtomb@plt+0x9170>
  40b6f4:	ldr	x1, [x12]
  40b6f8:	mov	x0, x3
  40b6fc:	bl	408680 <wcrtomb@plt+0x5d60>
  40b700:	tst	w0, #0xff
  40b704:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b708:	ldr	x1, [x12, #8]
  40b70c:	mov	x0, x3
  40b710:	bl	408680 <wcrtomb@plt+0x5d60>
  40b714:	tst	w0, #0xff
  40b718:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40b71c:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b720:	ldrb	w2, [x12, #24]
  40b724:	mov	x0, x3
  40b728:	ldrb	w1, [x0, #24]
  40b72c:	cmp	w2, w1
  40b730:	b.eq	40b74c <wcrtomb@plt+0x8e2c>  // b.none
  40b734:	ldp	x1, x0, [x0]
  40b738:	b.cc	40b9ac <wcrtomb@plt+0x908c>  // b.lo, b.ul, b.last
  40b73c:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b740:	ldrb	w1, [x0, #24]
  40b744:	cmp	w2, w1
  40b748:	b.ne	40b734 <wcrtomb@plt+0x8e14>  // b.any
  40b74c:	ldr	x12, [x11, #8]
  40b750:	cbnz	x12, 40ba98 <wcrtomb@plt+0x9178>
  40b754:	ldrb	w2, [x11, #24]
  40b758:	mov	x0, x3
  40b75c:	nop
  40b760:	ldrb	w1, [x0, #24]
  40b764:	cmp	w2, w1
  40b768:	b.eq	40b558 <wcrtomb@plt+0x8c38>  // b.none
  40b76c:	ldp	x1, x0, [x0]
  40b770:	b.cc	40c3a4 <wcrtomb@plt+0x9a84>  // b.lo, b.ul, b.last
  40b774:	mov	x1, x0
  40b778:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40b77c:	mov	x0, x1
  40b780:	b	40b760 <wcrtomb@plt+0x8e40>
  40b784:	cbnz	x3, 40aa60 <wcrtomb@plt+0x8140>
  40b788:	b	40a988 <wcrtomb@plt+0x8068>
  40b78c:	ldr	x0, [sp, #72]
  40b790:	b	409e4c <wcrtomb@plt+0x752c>
  40b794:	ldr	x0, [sp, #72]
  40b798:	b	409d3c <wcrtomb@plt+0x741c>
  40b79c:	ldr	x1, [sp, #72]
  40b7a0:	b	409dcc <wcrtomb@plt+0x74ac>
  40b7a4:	ldr	x1, [sp, #72]
  40b7a8:	b	409c1c <wcrtomb@plt+0x72fc>
  40b7ac:	ldr	x1, [sp, #72]
  40b7b0:	b	409b9c <wcrtomb@plt+0x727c>
  40b7b4:	ldr	x1, [sp, #72]
  40b7b8:	b	409a8c <wcrtomb@plt+0x716c>
  40b7bc:	ldr	x1, [sp, #72]
  40b7c0:	b	409cbc <wcrtomb@plt+0x739c>
  40b7c4:	ldr	x0, [sp, #72]
  40b7c8:	b	409b0c <wcrtomb@plt+0x71ec>
  40b7cc:	cbnz	x3, 40a9e0 <wcrtomb@plt+0x80c0>
  40b7d0:	b	40a988 <wcrtomb@plt+0x8068>
  40b7d4:	ldr	x12, [x11, #8]
  40b7d8:	cbnz	x12, 40b1b4 <wcrtomb@plt+0x8894>
  40b7dc:	cbnz	x3, 40b20c <wcrtomb@plt+0x88ec>
  40b7e0:	b	40a988 <wcrtomb@plt+0x8068>
  40b7e4:	ldr	x12, [x11, #8]
  40b7e8:	cbnz	x12, 40b634 <wcrtomb@plt+0x8d14>
  40b7ec:	cbnz	x3, 40b68c <wcrtomb@plt+0x8d6c>
  40b7f0:	b	40a988 <wcrtomb@plt+0x8068>
  40b7f4:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40b7f8:	mov	x0, x1
  40b7fc:	b	40aca4 <wcrtomb@plt+0x8384>
  40b800:	ldr	x12, [x11, #8]
  40b804:	cbnz	x12, 40b4c4 <wcrtomb@plt+0x8ba4>
  40b808:	cbnz	x3, 40b51c <wcrtomb@plt+0x8bfc>
  40b80c:	b	40a988 <wcrtomb@plt+0x8068>
  40b810:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40b814:	mov	x0, x1
  40b818:	b	40ab74 <wcrtomb@plt+0x8254>
  40b81c:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40b820:	mov	x0, x1
  40b824:	b	40abb4 <wcrtomb@plt+0x8294>
  40b828:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40b82c:	mov	x0, x1
  40b830:	b	40abd0 <wcrtomb@plt+0x82b0>
  40b834:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40b838:	mov	x0, x1
  40b83c:	b	40af20 <wcrtomb@plt+0x8600>
  40b840:	ldr	x12, [x11, #8]
  40b844:	cbnz	x12, 40addc <wcrtomb@plt+0x84bc>
  40b848:	cbnz	x3, 40ae34 <wcrtomb@plt+0x8514>
  40b84c:	b	40a988 <wcrtomb@plt+0x8068>
  40b850:	cbnz	x3, 40aa20 <wcrtomb@plt+0x8100>
  40b854:	b	40a988 <wcrtomb@plt+0x8068>
  40b858:	ldr	x6, [x21, #96]
  40b85c:	ldr	x0, [x6, #24]
  40b860:	cbz	x0, 40a408 <wcrtomb@plt+0x7ae8>
  40b864:	nop
  40b868:	ldr	x2, [x0, #16]
  40b86c:	ldr	x1, [x0, #56]
  40b870:	ldr	x2, [x2, #56]
  40b874:	cmp	x1, x2
  40b878:	b.le	40b884 <wcrtomb@plt+0x8f64>
  40b87c:	mov	x1, x2
  40b880:	str	x2, [x0, #56]
  40b884:	ldr	x2, [x0, #48]
  40b888:	cmp	x2, x1
  40b88c:	b.le	40b9a0 <wcrtomb@plt+0x9080>
  40b890:	str	x1, [x0, #48]
  40b894:	ldr	x0, [x0, #24]
  40b898:	cbnz	x0, 40b868 <wcrtomb@plt+0x8f48>
  40b89c:	cbnz	x20, 40a40c <wcrtomb@plt+0x7aec>
  40b8a0:	add	x23, x21, #0x178
  40b8a4:	mov	x2, #0x800                 	// #2048
  40b8a8:	mov	x0, x23
  40b8ac:	mov	w1, #0x0                   	// #0
  40b8b0:	bl	402510 <memset@plt>
  40b8b4:	ldr	x0, [x21, #96]
  40b8b8:	mov	x7, x23
  40b8bc:	ldr	x2, [x0, #8]
  40b8c0:	cbnz	x2, 40a430 <wcrtomb@plt+0x7b10>
  40b8c4:	mov	w6, #0xffffffff            	// #-1
  40b8c8:	mov	w3, #0xfffffffe            	// #-2
  40b8cc:	mov	w4, w6
  40b8d0:	mov	x1, #0x0                   	// #0
  40b8d4:	b	40b8f8 <wcrtomb@plt+0x8fd8>
  40b8d8:	cmp	w3, w1
  40b8dc:	b.eq	40b914 <wcrtomb@plt+0x8ff4>  // b.none
  40b8e0:	cmp	w3, w6
  40b8e4:	b.ne	40b920 <wcrtomb@plt+0x9000>  // b.any
  40b8e8:	mov	w6, w1
  40b8ec:	add	x1, x1, #0x1
  40b8f0:	cmp	x1, #0x100
  40b8f4:	b.eq	40a884 <wcrtomb@plt+0x7f64>  // b.none
  40b8f8:	ldr	x0, [x23, x1, lsl #3]
  40b8fc:	cmn	w3, #0x1
  40b900:	cbz	x0, 40b8ec <wcrtomb@plt+0x8fcc>
  40b904:	b.ge	40b8d8 <wcrtomb@plt+0x8fb8>  // b.tcont
  40b908:	mov	w6, w1
  40b90c:	mov	w3, w1
  40b910:	b	40b8ec <wcrtomb@plt+0x8fcc>
  40b914:	cmp	w3, w6
  40b918:	csel	w6, w3, w4, eq  // eq = none
  40b91c:	b	40b8ec <wcrtomb@plt+0x8fcc>
  40b920:	mov	w3, #0xffffffff            	// #-1
  40b924:	b	40b8ec <wcrtomb@plt+0x8fcc>
  40b928:	mov	x0, x1
  40b92c:	cbnz	x1, 40adb0 <wcrtomb@plt+0x8490>
  40b930:	b	40a988 <wcrtomb@plt+0x8068>
  40b934:	mov	x0, x1
  40b938:	cbnz	x1, 40afb8 <wcrtomb@plt+0x8698>
  40b93c:	b	40a988 <wcrtomb@plt+0x8068>
  40b940:	mov	x0, x1
  40b944:	cbnz	x1, 40ad10 <wcrtomb@plt+0x83f0>
  40b948:	b	40a988 <wcrtomb@plt+0x8068>
  40b94c:	mov	x0, x1
  40b950:	cbnz	x1, 40b0e8 <wcrtomb@plt+0x87c8>
  40b954:	b	40a988 <wcrtomb@plt+0x8068>
  40b958:	mov	x0, x1
  40b95c:	cbnz	x1, 40b348 <wcrtomb@plt+0x8a28>
  40b960:	b	40a988 <wcrtomb@plt+0x8068>
  40b964:	mov	x0, x1
  40b968:	cbnz	x1, 40b298 <wcrtomb@plt+0x8978>
  40b96c:	b	40a988 <wcrtomb@plt+0x8068>
  40b970:	mov	x0, x1
  40b974:	cbnz	x1, 40b608 <wcrtomb@plt+0x8ce8>
  40b978:	b	40a988 <wcrtomb@plt+0x8068>
  40b97c:	mov	x0, x1
  40b980:	cbnz	x1, 40b498 <wcrtomb@plt+0x8b78>
  40b984:	b	40a988 <wcrtomb@plt+0x8068>
  40b988:	mov	x0, x1
  40b98c:	cbnz	x1, 40b188 <wcrtomb@plt+0x8868>
  40b990:	b	40a988 <wcrtomb@plt+0x8068>
  40b994:	mov	x0, x1
  40b998:	cbnz	x1, 40b3f8 <wcrtomb@plt+0x8ad8>
  40b99c:	b	40a988 <wcrtomb@plt+0x8068>
  40b9a0:	ldr	x0, [x0, #24]
  40b9a4:	cbnz	x0, 40b868 <wcrtomb@plt+0x8f48>
  40b9a8:	b	40a408 <wcrtomb@plt+0x7ae8>
  40b9ac:	mov	x0, x1
  40b9b0:	cbnz	x1, 40b728 <wcrtomb@plt+0x8e08>
  40b9b4:	b	40a988 <wcrtomb@plt+0x8068>
  40b9b8:	mov	x0, x1
  40b9bc:	cbnz	x1, 40ae10 <wcrtomb@plt+0x84f0>
  40b9c0:	b	40a988 <wcrtomb@plt+0x8068>
  40b9c4:	mov	x0, x1
  40b9c8:	cbnz	x1, 40b4f8 <wcrtomb@plt+0x8bd8>
  40b9cc:	b	40a988 <wcrtomb@plt+0x8068>
  40b9d0:	mov	x0, x1
  40b9d4:	cbnz	x1, 40b668 <wcrtomb@plt+0x8d48>
  40b9d8:	b	40a988 <wcrtomb@plt+0x8068>
  40b9dc:	mov	x0, x1
  40b9e0:	cbnz	x1, 40b1e8 <wcrtomb@plt+0x88c8>
  40b9e4:	b	40a988 <wcrtomb@plt+0x8068>
  40b9e8:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40b9ec:	ldrb	w2, [x9, #24]
  40b9f0:	mov	x0, x3
  40b9f4:	nop
  40b9f8:	ldrb	w1, [x0, #24]
  40b9fc:	cmp	w2, w1
  40ba00:	b.eq	40aa60 <wcrtomb@plt+0x8140>  // b.none
  40ba04:	ldp	x1, x0, [x0]
  40ba08:	b.cc	40ba1c <wcrtomb@plt+0x90fc>  // b.lo, b.ul, b.last
  40ba0c:	mov	x1, x0
  40ba10:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40ba14:	mov	x0, x1
  40ba18:	b	40b9f8 <wcrtomb@plt+0x90d8>
  40ba1c:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40ba20:	mov	x0, x1
  40ba24:	b	40b9f8 <wcrtomb@plt+0x90d8>
  40ba28:	cbnz	x3, 40abc8 <wcrtomb@plt+0x82a8>
  40ba2c:	b	40a988 <wcrtomb@plt+0x8068>
  40ba30:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40ba34:	mov	x0, x1
  40ba38:	b	40b004 <wcrtomb@plt+0x86e4>
  40ba3c:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40ba40:	mov	x0, x1
  40ba44:	b	40ad5c <wcrtomb@plt+0x843c>
  40ba48:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40ba4c:	mov	x0, x1
  40ba50:	b	40b134 <wcrtomb@plt+0x8814>
  40ba54:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40ba58:	mov	x0, x1
  40ba5c:	b	40b378 <wcrtomb@plt+0x8a58>
  40ba60:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40ba64:	mov	x0, x1
  40ba68:	b	40b2c8 <wcrtomb@plt+0x89a8>
  40ba6c:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40ba70:	mov	x0, x1
  40ba74:	b	40b428 <wcrtomb@plt+0x8b08>
  40ba78:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40ba7c:	mov	x0, x1
  40ba80:	b	40b044 <wcrtomb@plt+0x8724>
  40ba84:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40ba88:	mov	x0, x1
  40ba8c:	b	40b060 <wcrtomb@plt+0x8740>
  40ba90:	ldr	x12, [x11, #8]
  40ba94:	cbz	x12, 40c41c <wcrtomb@plt+0x9afc>
  40ba98:	ldr	x1, [x12]
  40ba9c:	mov	x0, x3
  40baa0:	bl	408680 <wcrtomb@plt+0x5d60>
  40baa4:	tst	w0, #0xff
  40baa8:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40baac:	ldr	x1, [x12, #8]
  40bab0:	mov	x0, x3
  40bab4:	bl	408680 <wcrtomb@plt+0x5d60>
  40bab8:	tst	w0, #0xff
  40babc:	b.eq	40a988 <wcrtomb@plt+0x8068>  // b.none
  40bac0:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40bac4:	ldrb	w2, [x12, #24]
  40bac8:	mov	x0, x3
  40bacc:	nop
  40bad0:	ldrb	w1, [x0, #24]
  40bad4:	cmp	w2, w1
  40bad8:	b.eq	40b754 <wcrtomb@plt+0x8e34>  // b.none
  40badc:	ldp	x1, x0, [x0]
  40bae0:	b.cc	40c350 <wcrtomb@plt+0x9a30>  // b.lo, b.ul, b.last
  40bae4:	cbnz	x0, 40bad0 <wcrtomb@plt+0x91b0>
  40bae8:	b	40a988 <wcrtomb@plt+0x8068>
  40baec:	ldr	x2, [x21, #96]
  40baf0:	str	x2, [sp, #72]
  40baf4:	cbnz	x2, 40bd34 <wcrtomb@plt+0x9414>
  40baf8:	b	40bf8c <wcrtomb@plt+0x966c>
  40bafc:	ldr	x5, [x4]
  40bb00:	cbz	x5, 40bc0c <wcrtomb@plt+0x92ec>
  40bb04:	ldr	x6, [x5]
  40bb08:	cbz	x6, 40bb84 <wcrtomb@plt+0x9264>
  40bb0c:	ldr	x7, [x6]
  40bb10:	cbz	x7, 40bb44 <wcrtomb@plt+0x9224>
  40bb14:	ldr	x0, [x7]
  40bb18:	cbz	x0, 40bb24 <wcrtomb@plt+0x9204>
  40bb1c:	add	x1, sp, #0x48
  40bb20:	bl	408750 <wcrtomb@plt+0x5e30>
  40bb24:	ldr	x0, [x7, #8]
  40bb28:	cbz	x0, 40bb34 <wcrtomb@plt+0x9214>
  40bb2c:	add	x1, sp, #0x48
  40bb30:	bl	408750 <wcrtomb@plt+0x5e30>
  40bb34:	ldr	x1, [sp, #72]
  40bb38:	ldr	x0, [x7, #16]
  40bb3c:	str	x0, [sp, #72]
  40bb40:	str	x0, [x1, #24]
  40bb44:	ldr	x7, [x6, #8]
  40bb48:	cbz	x7, 40c384 <wcrtomb@plt+0x9a64>
  40bb4c:	ldr	x0, [x7]
  40bb50:	cbz	x0, 40bb5c <wcrtomb@plt+0x923c>
  40bb54:	add	x1, sp, #0x48
  40bb58:	bl	408750 <wcrtomb@plt+0x5e30>
  40bb5c:	ldr	x0, [x7, #8]
  40bb60:	cbz	x0, 40bb6c <wcrtomb@plt+0x924c>
  40bb64:	add	x1, sp, #0x48
  40bb68:	bl	408750 <wcrtomb@plt+0x5e30>
  40bb6c:	ldr	x0, [sp, #72]
  40bb70:	ldr	x1, [x7, #16]
  40bb74:	str	x1, [x0, #24]
  40bb78:	ldr	x0, [x6, #16]
  40bb7c:	str	x0, [x1, #24]
  40bb80:	str	x0, [sp, #72]
  40bb84:	ldr	x6, [x5, #8]
  40bb88:	cbz	x6, 40c210 <wcrtomb@plt+0x98f0>
  40bb8c:	ldr	x7, [x6]
  40bb90:	cbz	x7, 40bbc4 <wcrtomb@plt+0x92a4>
  40bb94:	ldr	x0, [x7]
  40bb98:	cbz	x0, 40bba4 <wcrtomb@plt+0x9284>
  40bb9c:	add	x1, sp, #0x48
  40bba0:	bl	408750 <wcrtomb@plt+0x5e30>
  40bba4:	ldr	x0, [x7, #8]
  40bba8:	cbz	x0, 40bbb4 <wcrtomb@plt+0x9294>
  40bbac:	add	x1, sp, #0x48
  40bbb0:	bl	408750 <wcrtomb@plt+0x5e30>
  40bbb4:	ldr	x1, [sp, #72]
  40bbb8:	ldr	x0, [x7, #16]
  40bbbc:	str	x0, [sp, #72]
  40bbc0:	str	x0, [x1, #24]
  40bbc4:	ldr	x7, [x6, #8]
  40bbc8:	cbz	x7, 40c37c <wcrtomb@plt+0x9a5c>
  40bbcc:	ldr	x0, [x7]
  40bbd0:	cbz	x0, 40bbdc <wcrtomb@plt+0x92bc>
  40bbd4:	add	x1, sp, #0x48
  40bbd8:	bl	408750 <wcrtomb@plt+0x5e30>
  40bbdc:	ldr	x0, [x7, #8]
  40bbe0:	cbz	x0, 40bbec <wcrtomb@plt+0x92cc>
  40bbe4:	add	x1, sp, #0x48
  40bbe8:	bl	408750 <wcrtomb@plt+0x5e30>
  40bbec:	ldr	x1, [sp, #72]
  40bbf0:	ldr	x0, [x7, #16]
  40bbf4:	str	x0, [x1, #24]
  40bbf8:	ldr	x1, [x6, #16]
  40bbfc:	str	x1, [x0, #24]
  40bc00:	ldr	x0, [x5, #16]
  40bc04:	str	x0, [x1, #24]
  40bc08:	str	x0, [sp, #72]
  40bc0c:	ldr	x5, [x4, #8]
  40bc10:	cbz	x5, 40bf7c <wcrtomb@plt+0x965c>
  40bc14:	ldr	x6, [x5]
  40bc18:	cbz	x6, 40bc94 <wcrtomb@plt+0x9374>
  40bc1c:	ldr	x7, [x6]
  40bc20:	cbz	x7, 40bc54 <wcrtomb@plt+0x9334>
  40bc24:	ldr	x0, [x7]
  40bc28:	cbz	x0, 40bc34 <wcrtomb@plt+0x9314>
  40bc2c:	add	x1, sp, #0x48
  40bc30:	bl	408750 <wcrtomb@plt+0x5e30>
  40bc34:	ldr	x0, [x7, #8]
  40bc38:	cbz	x0, 40bc44 <wcrtomb@plt+0x9324>
  40bc3c:	add	x1, sp, #0x48
  40bc40:	bl	408750 <wcrtomb@plt+0x5e30>
  40bc44:	ldr	x1, [sp, #72]
  40bc48:	ldr	x0, [x7, #16]
  40bc4c:	str	x0, [sp, #72]
  40bc50:	str	x0, [x1, #24]
  40bc54:	ldr	x7, [x6, #8]
  40bc58:	cbz	x7, 40c374 <wcrtomb@plt+0x9a54>
  40bc5c:	ldr	x0, [x7]
  40bc60:	cbz	x0, 40bc6c <wcrtomb@plt+0x934c>
  40bc64:	add	x1, sp, #0x48
  40bc68:	bl	408750 <wcrtomb@plt+0x5e30>
  40bc6c:	ldr	x0, [x7, #8]
  40bc70:	cbz	x0, 40bc7c <wcrtomb@plt+0x935c>
  40bc74:	add	x1, sp, #0x48
  40bc78:	bl	408750 <wcrtomb@plt+0x5e30>
  40bc7c:	ldr	x0, [sp, #72]
  40bc80:	ldr	x1, [x7, #16]
  40bc84:	str	x1, [x0, #24]
  40bc88:	ldr	x0, [x6, #16]
  40bc8c:	str	x0, [x1, #24]
  40bc90:	str	x0, [sp, #72]
  40bc94:	ldr	x6, [x5, #8]
  40bc98:	cbz	x6, 40c220 <wcrtomb@plt+0x9900>
  40bc9c:	ldr	x7, [x6]
  40bca0:	cbz	x7, 40bcd4 <wcrtomb@plt+0x93b4>
  40bca4:	ldr	x0, [x7]
  40bca8:	cbz	x0, 40bcb4 <wcrtomb@plt+0x9394>
  40bcac:	add	x1, sp, #0x48
  40bcb0:	bl	408750 <wcrtomb@plt+0x5e30>
  40bcb4:	ldr	x0, [x7, #8]
  40bcb8:	cbz	x0, 40bcc4 <wcrtomb@plt+0x93a4>
  40bcbc:	add	x1, sp, #0x48
  40bcc0:	bl	408750 <wcrtomb@plt+0x5e30>
  40bcc4:	ldr	x1, [sp, #72]
  40bcc8:	ldr	x0, [x7, #16]
  40bccc:	str	x0, [sp, #72]
  40bcd0:	str	x0, [x1, #24]
  40bcd4:	ldr	x7, [x6, #8]
  40bcd8:	cbz	x7, 40c36c <wcrtomb@plt+0x9a4c>
  40bcdc:	ldr	x0, [x7]
  40bce0:	cbz	x0, 40bcec <wcrtomb@plt+0x93cc>
  40bce4:	add	x1, sp, #0x48
  40bce8:	bl	408750 <wcrtomb@plt+0x5e30>
  40bcec:	ldr	x0, [x7, #8]
  40bcf0:	cbz	x0, 40bcfc <wcrtomb@plt+0x93dc>
  40bcf4:	add	x1, sp, #0x48
  40bcf8:	bl	408750 <wcrtomb@plt+0x5e30>
  40bcfc:	ldr	x1, [sp, #72]
  40bd00:	ldr	x0, [x7, #16]
  40bd04:	str	x0, [x1, #24]
  40bd08:	ldr	x1, [x6, #16]
  40bd0c:	str	x1, [x0, #24]
  40bd10:	ldr	x0, [x5, #16]
  40bd14:	str	x0, [x1, #24]
  40bd18:	ldr	x1, [x4, #16]
  40bd1c:	str	x1, [x0, #24]
  40bd20:	ldr	x0, [x3, #16]
  40bd24:	str	x0, [x1, #24]
  40bd28:	str	x0, [sp, #72]
  40bd2c:	ldr	x2, [x2, #24]
  40bd30:	cbz	x2, 40bf8c <wcrtomb@plt+0x966c>
  40bd34:	ldr	x3, [x2, #8]
  40bd38:	cbz	x3, 40bd2c <wcrtomb@plt+0x940c>
  40bd3c:	ldr	x4, [x3]
  40bd40:	cbz	x4, 40bf6c <wcrtomb@plt+0x964c>
  40bd44:	ldr	x5, [x4]
  40bd48:	cbz	x5, 40be54 <wcrtomb@plt+0x9534>
  40bd4c:	ldr	x6, [x5]
  40bd50:	cbz	x6, 40bdcc <wcrtomb@plt+0x94ac>
  40bd54:	ldr	x7, [x6]
  40bd58:	cbz	x7, 40bd8c <wcrtomb@plt+0x946c>
  40bd5c:	ldr	x0, [x7]
  40bd60:	cbz	x0, 40bd6c <wcrtomb@plt+0x944c>
  40bd64:	add	x1, sp, #0x48
  40bd68:	bl	408750 <wcrtomb@plt+0x5e30>
  40bd6c:	ldr	x0, [x7, #8]
  40bd70:	cbz	x0, 40bd7c <wcrtomb@plt+0x945c>
  40bd74:	add	x1, sp, #0x48
  40bd78:	bl	408750 <wcrtomb@plt+0x5e30>
  40bd7c:	ldr	x1, [sp, #72]
  40bd80:	ldr	x0, [x7, #16]
  40bd84:	str	x0, [sp, #72]
  40bd88:	str	x0, [x1, #24]
  40bd8c:	ldr	x7, [x6, #8]
  40bd90:	cbz	x7, 40c364 <wcrtomb@plt+0x9a44>
  40bd94:	ldr	x0, [x7]
  40bd98:	cbz	x0, 40bda4 <wcrtomb@plt+0x9484>
  40bd9c:	add	x1, sp, #0x48
  40bda0:	bl	408750 <wcrtomb@plt+0x5e30>
  40bda4:	ldr	x0, [x7, #8]
  40bda8:	cbz	x0, 40bdb4 <wcrtomb@plt+0x9494>
  40bdac:	add	x1, sp, #0x48
  40bdb0:	bl	408750 <wcrtomb@plt+0x5e30>
  40bdb4:	ldr	x0, [sp, #72]
  40bdb8:	ldr	x1, [x7, #16]
  40bdbc:	str	x1, [x0, #24]
  40bdc0:	ldr	x0, [x6, #16]
  40bdc4:	str	x0, [x1, #24]
  40bdc8:	str	x0, [sp, #72]
  40bdcc:	ldr	x6, [x5, #8]
  40bdd0:	cbz	x6, 40c218 <wcrtomb@plt+0x98f8>
  40bdd4:	ldr	x7, [x6]
  40bdd8:	cbz	x7, 40be0c <wcrtomb@plt+0x94ec>
  40bddc:	ldr	x0, [x7]
  40bde0:	cbz	x0, 40bdec <wcrtomb@plt+0x94cc>
  40bde4:	add	x1, sp, #0x48
  40bde8:	bl	408750 <wcrtomb@plt+0x5e30>
  40bdec:	ldr	x0, [x7, #8]
  40bdf0:	cbz	x0, 40bdfc <wcrtomb@plt+0x94dc>
  40bdf4:	add	x1, sp, #0x48
  40bdf8:	bl	408750 <wcrtomb@plt+0x5e30>
  40bdfc:	ldr	x1, [sp, #72]
  40be00:	ldr	x0, [x7, #16]
  40be04:	str	x0, [sp, #72]
  40be08:	str	x0, [x1, #24]
  40be0c:	ldr	x7, [x6, #8]
  40be10:	cbz	x7, 40c35c <wcrtomb@plt+0x9a3c>
  40be14:	ldr	x0, [x7]
  40be18:	cbz	x0, 40be24 <wcrtomb@plt+0x9504>
  40be1c:	add	x1, sp, #0x48
  40be20:	bl	408750 <wcrtomb@plt+0x5e30>
  40be24:	ldr	x0, [x7, #8]
  40be28:	cbz	x0, 40be34 <wcrtomb@plt+0x9514>
  40be2c:	add	x1, sp, #0x48
  40be30:	bl	408750 <wcrtomb@plt+0x5e30>
  40be34:	ldr	x1, [sp, #72]
  40be38:	ldr	x0, [x7, #16]
  40be3c:	str	x0, [x1, #24]
  40be40:	ldr	x1, [x6, #16]
  40be44:	str	x1, [x0, #24]
  40be48:	ldr	x0, [x5, #16]
  40be4c:	str	x0, [x1, #24]
  40be50:	str	x0, [sp, #72]
  40be54:	ldr	x5, [x4, #8]
  40be58:	cbz	x5, 40bf84 <wcrtomb@plt+0x9664>
  40be5c:	ldr	x6, [x5]
  40be60:	cbz	x6, 40bedc <wcrtomb@plt+0x95bc>
  40be64:	ldr	x7, [x6]
  40be68:	cbz	x7, 40be9c <wcrtomb@plt+0x957c>
  40be6c:	ldr	x0, [x7]
  40be70:	cbz	x0, 40be7c <wcrtomb@plt+0x955c>
  40be74:	add	x1, sp, #0x48
  40be78:	bl	408750 <wcrtomb@plt+0x5e30>
  40be7c:	ldr	x0, [x7, #8]
  40be80:	cbz	x0, 40be8c <wcrtomb@plt+0x956c>
  40be84:	add	x1, sp, #0x48
  40be88:	bl	408750 <wcrtomb@plt+0x5e30>
  40be8c:	ldr	x1, [sp, #72]
  40be90:	ldr	x0, [x7, #16]
  40be94:	str	x0, [sp, #72]
  40be98:	str	x0, [x1, #24]
  40be9c:	ldr	x7, [x6, #8]
  40bea0:	cbz	x7, 40c394 <wcrtomb@plt+0x9a74>
  40bea4:	ldr	x0, [x7]
  40bea8:	cbz	x0, 40beb4 <wcrtomb@plt+0x9594>
  40beac:	add	x1, sp, #0x48
  40beb0:	bl	408750 <wcrtomb@plt+0x5e30>
  40beb4:	ldr	x0, [x7, #8]
  40beb8:	cbz	x0, 40bec4 <wcrtomb@plt+0x95a4>
  40bebc:	add	x1, sp, #0x48
  40bec0:	bl	408750 <wcrtomb@plt+0x5e30>
  40bec4:	ldr	x0, [sp, #72]
  40bec8:	ldr	x1, [x7, #16]
  40becc:	str	x1, [x0, #24]
  40bed0:	ldr	x0, [x6, #16]
  40bed4:	str	x0, [x1, #24]
  40bed8:	str	x0, [sp, #72]
  40bedc:	ldr	x6, [x5, #8]
  40bee0:	cbz	x6, 40c228 <wcrtomb@plt+0x9908>
  40bee4:	ldr	x7, [x6]
  40bee8:	cbz	x7, 40bf1c <wcrtomb@plt+0x95fc>
  40beec:	ldr	x0, [x7]
  40bef0:	cbz	x0, 40befc <wcrtomb@plt+0x95dc>
  40bef4:	add	x1, sp, #0x48
  40bef8:	bl	408750 <wcrtomb@plt+0x5e30>
  40befc:	ldr	x0, [x7, #8]
  40bf00:	cbz	x0, 40bf0c <wcrtomb@plt+0x95ec>
  40bf04:	add	x1, sp, #0x48
  40bf08:	bl	408750 <wcrtomb@plt+0x5e30>
  40bf0c:	ldr	x1, [sp, #72]
  40bf10:	ldr	x0, [x7, #16]
  40bf14:	str	x0, [sp, #72]
  40bf18:	str	x0, [x1, #24]
  40bf1c:	ldr	x7, [x6, #8]
  40bf20:	cbz	x7, 40c38c <wcrtomb@plt+0x9a6c>
  40bf24:	ldr	x0, [x7]
  40bf28:	cbz	x0, 40bf34 <wcrtomb@plt+0x9614>
  40bf2c:	add	x1, sp, #0x48
  40bf30:	bl	408750 <wcrtomb@plt+0x5e30>
  40bf34:	ldr	x0, [x7, #8]
  40bf38:	cbz	x0, 40bf44 <wcrtomb@plt+0x9624>
  40bf3c:	add	x1, sp, #0x48
  40bf40:	bl	408750 <wcrtomb@plt+0x5e30>
  40bf44:	ldr	x0, [sp, #72]
  40bf48:	ldr	x1, [x7, #16]
  40bf4c:	str	x1, [x0, #24]
  40bf50:	ldr	x0, [x6, #16]
  40bf54:	str	x0, [x1, #24]
  40bf58:	ldr	x1, [x5, #16]
  40bf5c:	str	x1, [x0, #24]
  40bf60:	ldr	x0, [x4, #16]
  40bf64:	str	x0, [x1, #24]
  40bf68:	str	x0, [sp, #72]
  40bf6c:	ldr	x4, [x3, #8]
  40bf70:	cbnz	x4, 40bafc <wcrtomb@plt+0x91dc>
  40bf74:	ldr	x1, [sp, #72]
  40bf78:	b	40bd20 <wcrtomb@plt+0x9400>
  40bf7c:	ldr	x0, [sp, #72]
  40bf80:	b	40bd18 <wcrtomb@plt+0x93f8>
  40bf84:	ldr	x1, [sp, #72]
  40bf88:	b	40bf60 <wcrtomb@plt+0x9640>
  40bf8c:	ldp	x0, x5, [x21, #24]
  40bf90:	ldr	x1, [x21, #104]
  40bf94:	mov	x24, x1
  40bf98:	sub	x2, x5, x0
  40bf9c:	cmp	x1, x2
  40bfa0:	b.hi	40c3ec <wcrtomb@plt+0x9acc>  // b.pmore
  40bfa4:	ldr	x4, [x21, #16]
  40bfa8:	add	x0, x0, x24
  40bfac:	cmp	x0, x4
  40bfb0:	b.eq	40c40c <wcrtomb@plt+0x9aec>  // b.none
  40bfb4:	ldr	x2, [x21, #48]
  40bfb8:	ldr	x3, [x21, #8]
  40bfbc:	add	x0, x0, x2
  40bfc0:	bic	x0, x0, x2
  40bfc4:	str	x0, [x21, #24]
  40bfc8:	sub	x2, x0, x3
  40bfcc:	sub	x3, x5, x3
  40bfd0:	cmp	x2, x3
  40bfd4:	b.hi	40c31c <wcrtomb@plt+0x99fc>  // b.pmore
  40bfd8:	str	x0, [x21, #16]
  40bfdc:	cmp	x1, #0x0
  40bfe0:	str	x4, [x21, #2424]
  40bfe4:	ldr	x0, [x21, #96]
  40bfe8:	b.le	40c034 <wcrtomb@plt+0x9714>
  40bfec:	ldr	x1, [x0, #8]
  40bff0:	ldrb	w1, [x1, #24]
  40bff4:	strb	w1, [x4]
  40bff8:	ldr	x2, [x21, #104]
  40bffc:	ldr	x1, [x0, #24]
  40c000:	cmp	x2, #0x1
  40c004:	b.le	40c034 <wcrtomb@plt+0x9714>
  40c008:	mov	x0, #0x1                   	// #1
  40c00c:	nop
  40c010:	ldr	x3, [x1, #8]
  40c014:	ldr	x2, [x21, #2424]
  40c018:	ldrb	w3, [x3, #24]
  40c01c:	strb	w3, [x2, x0]
  40c020:	add	x0, x0, #0x1
  40c024:	ldr	x2, [x21, #104]
  40c028:	ldr	x1, [x1, #24]
  40c02c:	cmp	x2, x0
  40c030:	b.gt	40c010 <wcrtomb@plt+0x96f0>
  40c034:	ldr	x0, [x21, #2440]
  40c038:	bl	4093b8 <wcrtomb@plt+0x6a98>
  40c03c:	mov	x24, x0
  40c040:	ldr	x2, [x21, #104]
  40c044:	adrp	x3, 408000 <wcrtomb@plt+0x56e0>
  40c048:	ldr	x1, [x21, #2424]
  40c04c:	add	x3, x3, #0xe28
  40c050:	str	x3, [x0, #2464]
  40c054:	bl	4094c0 <wcrtomb@plt+0x6ba0>
  40c058:	mov	x0, x21
  40c05c:	mov	x1, #0x0                   	// #0
  40c060:	bl	41ea40 <_obstack_free@@Base>
  40c064:	mov	x1, x24
  40c068:	mov	x2, #0x9a8                 	// #2472
  40c06c:	mov	x0, x21
  40c070:	bl	4022a0 <memcpy@plt>
  40c074:	mov	x0, x24
  40c078:	bl	4026b0 <free@plt>
  40c07c:	ldr	x1, [x21, #104]
  40c080:	mov	x3, #0xff                  	// #255
  40c084:	mov	x0, x19
  40c088:	mov	x2, #0x100                 	// #256
  40c08c:	cmp	x1, x3
  40c090:	csel	x1, x1, x3, le
  40c094:	bl	402510 <memset@plt>
  40c098:	ldr	x6, [x21, #96]
  40c09c:	str	x6, [sp, #72]
  40c0a0:	cbnz	x6, 409a00 <wcrtomb@plt+0x70e0>
  40c0a4:	b	40b85c <wcrtomb@plt+0x8f3c>
  40c0a8:	ldp	x1, x5, [x21, #24]
  40c0ac:	ldr	x0, [x21, #104]
  40c0b0:	mov	x22, x0
  40c0b4:	sub	x2, x5, x1
  40c0b8:	cmp	x0, x2
  40c0bc:	b.hi	40c3b8 <wcrtomb@plt+0x9a98>  // b.pmore
  40c0c0:	ldr	x4, [x21, #16]
  40c0c4:	add	x1, x1, x22
  40c0c8:	cmp	x1, x4
  40c0cc:	b.eq	40c3dc <wcrtomb@plt+0x9abc>  // b.none
  40c0d0:	ldr	x2, [x21, #48]
  40c0d4:	ldr	x3, [x21, #8]
  40c0d8:	add	x1, x1, x2
  40c0dc:	bic	x1, x1, x2
  40c0e0:	str	x1, [x21, #24]
  40c0e4:	sub	x2, x1, x3
  40c0e8:	sub	x3, x5, x3
  40c0ec:	cmp	x2, x3
  40c0f0:	b.hi	40c310 <wcrtomb@plt+0x99f0>  // b.pmore
  40c0f4:	str	x1, [x21, #16]
  40c0f8:	subs	x2, x0, #0x1
  40c0fc:	str	x4, [x21, #2424]
  40c100:	ldr	x1, [x21, #96]
  40c104:	b.mi	40c14c <wcrtomb@plt+0x982c>  // b.first
  40c108:	ldr	x3, [x1, #8]
  40c10c:	cmp	x0, #0x1
  40c110:	sub	x0, x0, #0x2
  40c114:	ldrb	w3, [x3, #24]
  40c118:	strb	w3, [x4, x2]
  40c11c:	ldr	x1, [x1, #24]
  40c120:	b.eq	40c148 <wcrtomb@plt+0x9828>  // b.none
  40c124:	nop
  40c128:	ldr	x3, [x1, #8]
  40c12c:	ldr	x2, [x21, #2424]
  40c130:	ldrb	w3, [x3, #24]
  40c134:	strb	w3, [x2, x0]
  40c138:	sub	x0, x0, #0x1
  40c13c:	cmn	x0, #0x1
  40c140:	ldr	x1, [x1, #24]
  40c144:	b.ne	40c128 <wcrtomb@plt+0x9808>  // b.any
  40c148:	ldr	x0, [x21, #104]
  40c14c:	cmp	x0, #0x1
  40c150:	b.le	40a894 <wcrtomb@plt+0x7f74>
  40c154:	ldp	x2, x5, [x21, #24]
  40c158:	sub	x3, x0, #0x1
  40c15c:	lsl	x22, x3, #3
  40c160:	sub	x1, x5, x2
  40c164:	cmp	x1, x3, lsl #3
  40c168:	b.cc	40c328 <wcrtomb@plt+0x9a08>  // b.lo, b.ul, b.last
  40c16c:	ldr	x4, [x21, #16]
  40c170:	add	x2, x2, x22
  40c174:	cmp	x2, x4
  40c178:	b.eq	40c340 <wcrtomb@plt+0x9a20>  // b.none
  40c17c:	ldr	x1, [x21, #48]
  40c180:	ldr	x3, [x21, #8]
  40c184:	add	x2, x2, x1
  40c188:	bic	x2, x2, x1
  40c18c:	str	x2, [x21, #24]
  40c190:	sub	x1, x2, x3
  40c194:	sub	x3, x5, x3
  40c198:	cmp	x1, x3
  40c19c:	b.ls	40c1a8 <wcrtomb@plt+0x9888>  // b.plast
  40c1a0:	mov	x2, x5
  40c1a4:	str	x5, [x21, #24]
  40c1a8:	ldr	x1, [x21, #96]
  40c1ac:	str	x2, [x21, #16]
  40c1b0:	str	x4, [x21, #2432]
  40c1b4:	cmp	x0, #0x1
  40c1b8:	ldr	x2, [x1, #24]
  40c1bc:	b.le	40c1e8 <wcrtomb@plt+0x98c8>
  40c1c0:	mov	x1, #0x0                   	// #0
  40c1c4:	nop
  40c1c8:	ldr	x0, [x2, #48]
  40c1cc:	ldr	x2, [x2, #24]
  40c1d0:	str	x0, [x4, x1, lsl #3]
  40c1d4:	add	x1, x1, #0x1
  40c1d8:	ldr	x0, [x21, #104]
  40c1dc:	sub	x3, x0, #0x1
  40c1e0:	cmp	x3, x1
  40c1e4:	b.gt	40c1c8 <wcrtomb@plt+0x98a8>
  40c1e8:	ldr	x1, [x21, #2424]
  40c1ec:	add	x0, x1, x0
  40c1f0:	ldurb	w0, [x0, #-2]
  40c1f4:	cbz	x20, 40c200 <wcrtomb@plt+0x98e0>
  40c1f8:	and	x0, x0, #0xff
  40c1fc:	ldrb	w0, [x20, x0]
  40c200:	strb	w0, [x21, #2456]
  40c204:	b	40a894 <wcrtomb@plt+0x7f74>
  40c208:	cbnz	x3, 40ab88 <wcrtomb@plt+0x8268>
  40c20c:	b	40a988 <wcrtomb@plt+0x8068>
  40c210:	ldr	x1, [sp, #72]
  40c214:	b	40bc00 <wcrtomb@plt+0x92e0>
  40c218:	ldr	x1, [sp, #72]
  40c21c:	b	40be48 <wcrtomb@plt+0x9528>
  40c220:	ldr	x1, [sp, #72]
  40c224:	b	40bd10 <wcrtomb@plt+0x93f0>
  40c228:	ldr	x0, [sp, #72]
  40c22c:	b	40bf58 <wcrtomb@plt+0x9638>
  40c230:	cbnz	x3, 40ab4c <wcrtomb@plt+0x822c>
  40c234:	b	40a988 <wcrtomb@plt+0x8068>
  40c238:	cbnz	x3, 40ac7c <wcrtomb@plt+0x835c>
  40c23c:	b	40a988 <wcrtomb@plt+0x8068>
  40c240:	cbnz	x3, 40af14 <wcrtomb@plt+0x85f4>
  40c244:	b	40a988 <wcrtomb@plt+0x8068>
  40c248:	cbz	x3, 40a988 <wcrtomb@plt+0x8068>
  40c24c:	ldrb	w2, [x10, #24]
  40c250:	mov	x0, x3
  40c254:	nop
  40c258:	ldrb	w1, [x0, #24]
  40c25c:	cmp	w2, w1
  40c260:	b.eq	40ab88 <wcrtomb@plt+0x8268>  // b.none
  40c264:	ldp	x1, x0, [x0]
  40c268:	b.cc	40c27c <wcrtomb@plt+0x995c>  // b.lo, b.ul, b.last
  40c26c:	mov	x1, x0
  40c270:	cbz	x0, 40a988 <wcrtomb@plt+0x8068>
  40c274:	mov	x0, x1
  40c278:	b	40c258 <wcrtomb@plt+0x9938>
  40c27c:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40c280:	mov	x0, x1
  40c284:	b	40c258 <wcrtomb@plt+0x9938>
  40c288:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40c28c:	mov	x0, x1
  40c290:	b	40ae5c <wcrtomb@plt+0x853c>
  40c294:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40c298:	mov	x0, x1
  40c29c:	b	40ae70 <wcrtomb@plt+0x8550>
  40c2a0:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40c2a4:	mov	x0, x1
  40c2a8:	b	40b218 <wcrtomb@plt+0x88f8>
  40c2ac:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40c2b0:	mov	x0, x1
  40c2b4:	b	40b544 <wcrtomb@plt+0x8c24>
  40c2b8:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40c2bc:	mov	x0, x1
  40c2c0:	b	40b698 <wcrtomb@plt+0x8d78>
  40c2c4:	cbnz	x3, 40ae68 <wcrtomb@plt+0x8548>
  40c2c8:	b	40a988 <wcrtomb@plt+0x8068>
  40c2cc:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40c2d0:	mov	x0, x1
  40c2d4:	b	40b560 <wcrtomb@plt+0x8c40>
  40c2d8:	cbnz	x3, 40b058 <wcrtomb@plt+0x8738>
  40c2dc:	b	40a988 <wcrtomb@plt+0x8068>
  40c2e0:	cbnz	x3, 40ad34 <wcrtomb@plt+0x8414>
  40c2e4:	b	40a988 <wcrtomb@plt+0x8068>
  40c2e8:	cbnz	x3, 40b36c <wcrtomb@plt+0x8a4c>
  40c2ec:	b	40a988 <wcrtomb@plt+0x8068>
  40c2f0:	cbnz	x3, 40b10c <wcrtomb@plt+0x87ec>
  40c2f4:	b	40a988 <wcrtomb@plt+0x8068>
  40c2f8:	cbnz	x3, 40b41c <wcrtomb@plt+0x8afc>
  40c2fc:	b	40a988 <wcrtomb@plt+0x8068>
  40c300:	cbnz	x3, 40b2bc <wcrtomb@plt+0x899c>
  40c304:	b	40a988 <wcrtomb@plt+0x8068>
  40c308:	cbnz	x3, 40afdc <wcrtomb@plt+0x86bc>
  40c30c:	b	40a988 <wcrtomb@plt+0x8068>
  40c310:	mov	x1, x5
  40c314:	str	x5, [x21, #24]
  40c318:	b	40c0f4 <wcrtomb@plt+0x97d4>
  40c31c:	mov	x0, x5
  40c320:	str	x5, [x21, #24]
  40c324:	b	40bfd8 <wcrtomb@plt+0x96b8>
  40c328:	mov	x0, x21
  40c32c:	mov	x1, x22
  40c330:	bl	41e8b8 <_obstack_newchunk@@Base>
  40c334:	ldp	x2, x5, [x21, #24]
  40c338:	ldr	x0, [x21, #104]
  40c33c:	b	40c16c <wcrtomb@plt+0x984c>
  40c340:	ldrb	w1, [x21, #80]
  40c344:	orr	w1, w1, #0x2
  40c348:	strb	w1, [x21, #80]
  40c34c:	b	40c17c <wcrtomb@plt+0x985c>
  40c350:	mov	x0, x1
  40c354:	cbnz	x1, 40bad0 <wcrtomb@plt+0x91b0>
  40c358:	b	40a988 <wcrtomb@plt+0x8068>
  40c35c:	ldr	x0, [sp, #72]
  40c360:	b	40be40 <wcrtomb@plt+0x9520>
  40c364:	ldr	x1, [sp, #72]
  40c368:	b	40bdc0 <wcrtomb@plt+0x94a0>
  40c36c:	ldr	x0, [sp, #72]
  40c370:	b	40bd08 <wcrtomb@plt+0x93e8>
  40c374:	ldr	x1, [sp, #72]
  40c378:	b	40bc88 <wcrtomb@plt+0x9368>
  40c37c:	ldr	x0, [sp, #72]
  40c380:	b	40bbf8 <wcrtomb@plt+0x92d8>
  40c384:	ldr	x1, [sp, #72]
  40c388:	b	40bb78 <wcrtomb@plt+0x9258>
  40c38c:	ldr	x1, [sp, #72]
  40c390:	b	40bf50 <wcrtomb@plt+0x9630>
  40c394:	ldr	x1, [sp, #72]
  40c398:	b	40bed0 <wcrtomb@plt+0x95b0>
  40c39c:	cbnz	x3, 40b018 <wcrtomb@plt+0x86f8>
  40c3a0:	b	40a988 <wcrtomb@plt+0x8068>
  40c3a4:	cbz	x1, 40a988 <wcrtomb@plt+0x8068>
  40c3a8:	mov	x0, x1
  40c3ac:	b	40b760 <wcrtomb@plt+0x8e40>
  40c3b0:	cbnz	x3, 40b558 <wcrtomb@plt+0x8c38>
  40c3b4:	b	40a988 <wcrtomb@plt+0x8068>
  40c3b8:	mov	x1, x0
  40c3bc:	mov	x0, x21
  40c3c0:	bl	41e8b8 <_obstack_newchunk@@Base>
  40c3c4:	ldp	x1, x5, [x21, #24]
  40c3c8:	ldr	x4, [x21, #16]
  40c3cc:	ldr	x0, [x21, #104]
  40c3d0:	add	x1, x1, x22
  40c3d4:	cmp	x1, x4
  40c3d8:	b.ne	40c0d0 <wcrtomb@plt+0x97b0>  // b.any
  40c3dc:	ldrb	w2, [x21, #80]
  40c3e0:	orr	w2, w2, #0x2
  40c3e4:	strb	w2, [x21, #80]
  40c3e8:	b	40c0d0 <wcrtomb@plt+0x97b0>
  40c3ec:	mov	x0, x21
  40c3f0:	bl	41e8b8 <_obstack_newchunk@@Base>
  40c3f4:	ldp	x0, x5, [x21, #24]
  40c3f8:	ldr	x4, [x21, #16]
  40c3fc:	ldr	x1, [x21, #104]
  40c400:	add	x0, x0, x24
  40c404:	cmp	x0, x4
  40c408:	b.ne	40bfb4 <wcrtomb@plt+0x9694>  // b.any
  40c40c:	ldrb	w2, [x21, #80]
  40c410:	orr	w2, w2, #0x2
  40c414:	strb	w2, [x21, #80]
  40c418:	b	40bfb4 <wcrtomb@plt+0x9694>
  40c41c:	cbnz	x3, 40b754 <wcrtomb@plt+0x8e34>
  40c420:	b	40a988 <wcrtomb@plt+0x8068>
  40c424:	nop
  40c428:	ldr	x5, [x0, #2464]
  40c42c:	mov	x16, x5
  40c430:	br	x16
  40c434:	nop
  40c438:	stp	x29, x30, [sp, #-32]!
  40c43c:	mov	x1, #0x0                   	// #0
  40c440:	mov	x29, sp
  40c444:	str	x19, [sp, #16]
  40c448:	mov	x19, x0
  40c44c:	bl	41ea40 <_obstack_free@@Base>
  40c450:	mov	x0, x19
  40c454:	ldr	x19, [sp, #16]
  40c458:	ldp	x29, x30, [sp], #32
  40c45c:	b	4026b0 <free@plt>
  40c460:	ret
  40c464:	nop
  40c468:	ldrb	w4, [x0]
  40c46c:	adrp	x3, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40c470:	add	x3, x3, #0x8e0
  40c474:	add	x3, x3, x4
  40c478:	ldrsb	x3, [x3, #3]
  40c47c:	cmn	x3, #0x2
  40c480:	b.eq	40c48c <wcrtomb@plt+0x9b6c>  // b.none
  40c484:	mov	x0, x3
  40c488:	ret
  40c48c:	b	41e5f0 <wcrtomb@plt+0x1bcd0>
  40c490:	stp	x29, x30, [sp, #-48]!
  40c494:	mov	x29, sp
  40c498:	stp	x19, x20, [sp, #16]
  40c49c:	adrp	x20, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40c4a0:	add	x20, x20, #0x9e4
  40c4a4:	stp	x21, x22, [sp, #32]
  40c4a8:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  40c4ac:	add	x21, x21, #0x660
  40c4b0:	mov	x19, #0x0                   	// #0
  40c4b4:	mov	w22, #0x1                   	// #1
  40c4b8:	ldr	w0, [x20, x19, lsl #2]
  40c4bc:	cmp	w0, #0x5f
  40c4c0:	b.eq	40c4f0 <wcrtomb@plt+0x9bd0>  // b.none
  40c4c4:	bl	4027c0 <iswalnum@plt>
  40c4c8:	cmp	w0, #0x0
  40c4cc:	cset	w0, ne  // ne = any
  40c4d0:	strb	w0, [x21, x19]
  40c4d4:	add	x19, x19, #0x1
  40c4d8:	cmp	x19, #0x100
  40c4dc:	b.ne	40c4b8 <wcrtomb@plt+0x9b98>  // b.any
  40c4e0:	ldp	x19, x20, [sp, #16]
  40c4e4:	ldp	x21, x22, [sp, #32]
  40c4e8:	ldp	x29, x30, [sp], #48
  40c4ec:	ret
  40c4f0:	strb	w22, [x21, x19]
  40c4f4:	add	x19, x19, #0x1
  40c4f8:	cmp	x19, #0x100
  40c4fc:	b.ne	40c4b8 <wcrtomb@plt+0x9b98>  // b.any
  40c500:	ldp	x19, x20, [sp, #16]
  40c504:	ldp	x21, x22, [sp, #32]
  40c508:	ldp	x29, x30, [sp], #48
  40c50c:	ret
  40c510:	stp	x29, x30, [sp, #-64]!
  40c514:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40c518:	mov	x29, sp
  40c51c:	stp	x19, x20, [sp, #16]
  40c520:	and	w19, w0, #0xff
  40c524:	ldrb	w0, [x1, #3558]
  40c528:	stp	x21, x22, [sp, #32]
  40c52c:	cbz	w0, 40c5b0 <wcrtomb@plt+0x9c90>
  40c530:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  40c534:	cmp	w19, #0x0
  40c538:	ccmp	x0, #0x1, #0x4, eq  // eq = none
  40c53c:	b.ne	40c5b0 <wcrtomb@plt+0x9c90>  // b.any
  40c540:	mov	x0, #0x100                 	// #256
  40c544:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40c548:	mov	x21, x0
  40c54c:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  40c550:	cmp	x0, #0x1
  40c554:	b.eq	40c5cc <wcrtomb@plt+0x9cac>  // b.none
  40c558:	adrp	x22, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40c55c:	mov	x19, #0x0                   	// #0
  40c560:	add	x22, x22, #0x9e4
  40c564:	b	40c590 <wcrtomb@plt+0x9c70>
  40c568:	mov	w1, w0
  40c56c:	mov	x0, x2
  40c570:	add	x2, sp, #0x38
  40c574:	str	xzr, [sp, #56]
  40c578:	bl	402920 <wcrtomb@plt>
  40c57c:	cmp	x0, #0x1
  40c580:	b.ne	40c848 <wcrtomb@plt+0x9f28>  // b.any
  40c584:	add	x19, x19, #0x1
  40c588:	cmp	x19, #0x100
  40c58c:	b.eq	40c5b4 <wcrtomb@plt+0x9c94>  // b.none
  40c590:	ldr	w20, [x22, x19, lsl #2]
  40c594:	mov	w0, w20
  40c598:	bl	402830 <towupper@plt>
  40c59c:	add	x2, x21, x19
  40c5a0:	cmp	w20, w0
  40c5a4:	b.ne	40c568 <wcrtomb@plt+0x9c48>  // b.any
  40c5a8:	strb	w19, [x21, x19]
  40c5ac:	b	40c584 <wcrtomb@plt+0x9c64>
  40c5b0:	mov	x21, #0x0                   	// #0
  40c5b4:	mov	x0, x21
  40c5b8:	bl	4093b8 <wcrtomb@plt+0x6a98>
  40c5bc:	ldp	x19, x20, [sp, #16]
  40c5c0:	ldp	x21, x22, [sp, #32]
  40c5c4:	ldp	x29, x30, [sp], #64
  40c5c8:	ret
  40c5cc:	bl	402560 <__ctype_toupper_loc@plt>
  40c5d0:	ldr	x1, [x0]
  40c5d4:	add	x2, x21, #0x100
  40c5d8:	add	x0, x1, #0x400
  40c5dc:	cmp	x0, x21
  40c5e0:	ccmp	x2, x1, #0x0, hi  // hi = pmore
  40c5e4:	b.hi	40c82c <wcrtomb@plt+0x9f0c>  // b.pmore
  40c5e8:	ldp	q4, q1, [x1]
  40c5ec:	ldp	q3, q0, [x1, #32]
  40c5f0:	xtn	v2.4h, v4.4s
  40c5f4:	xtn2	v2.8h, v1.4s
  40c5f8:	xtn	v1.4h, v3.4s
  40c5fc:	xtn2	v1.8h, v0.4s
  40c600:	xtn	v0.8b, v2.8h
  40c604:	xtn2	v0.16b, v1.8h
  40c608:	str	q0, [x21]
  40c60c:	ldp	q4, q1, [x1, #64]
  40c610:	ldp	q3, q0, [x1, #96]
  40c614:	xtn	v2.4h, v4.4s
  40c618:	xtn2	v2.8h, v1.4s
  40c61c:	xtn	v1.4h, v3.4s
  40c620:	xtn2	v1.8h, v0.4s
  40c624:	xtn	v0.8b, v2.8h
  40c628:	xtn2	v0.16b, v1.8h
  40c62c:	str	q0, [x21, #16]
  40c630:	ldp	q4, q1, [x1, #128]
  40c634:	ldp	q3, q0, [x1, #160]
  40c638:	xtn	v2.4h, v4.4s
  40c63c:	xtn2	v2.8h, v1.4s
  40c640:	xtn	v1.4h, v3.4s
  40c644:	xtn2	v1.8h, v0.4s
  40c648:	xtn	v0.8b, v2.8h
  40c64c:	xtn2	v0.16b, v1.8h
  40c650:	str	q0, [x21, #32]
  40c654:	ldp	q4, q1, [x1, #192]
  40c658:	ldp	q3, q0, [x1, #224]
  40c65c:	xtn	v2.4h, v4.4s
  40c660:	xtn2	v2.8h, v1.4s
  40c664:	xtn	v1.4h, v3.4s
  40c668:	xtn2	v1.8h, v0.4s
  40c66c:	xtn	v0.8b, v2.8h
  40c670:	xtn2	v0.16b, v1.8h
  40c674:	str	q0, [x21, #48]
  40c678:	ldp	q4, q1, [x1, #256]
  40c67c:	ldp	q3, q0, [x1, #288]
  40c680:	xtn	v2.4h, v4.4s
  40c684:	xtn2	v2.8h, v1.4s
  40c688:	xtn	v1.4h, v3.4s
  40c68c:	xtn2	v1.8h, v0.4s
  40c690:	xtn	v0.8b, v2.8h
  40c694:	xtn2	v0.16b, v1.8h
  40c698:	str	q0, [x21, #64]
  40c69c:	ldp	q4, q1, [x1, #320]
  40c6a0:	ldp	q3, q0, [x1, #352]
  40c6a4:	xtn	v2.4h, v4.4s
  40c6a8:	xtn2	v2.8h, v1.4s
  40c6ac:	xtn	v1.4h, v3.4s
  40c6b0:	xtn2	v1.8h, v0.4s
  40c6b4:	xtn	v0.8b, v2.8h
  40c6b8:	xtn2	v0.16b, v1.8h
  40c6bc:	str	q0, [x21, #80]
  40c6c0:	ldp	q4, q1, [x1, #384]
  40c6c4:	ldp	q3, q0, [x1, #416]
  40c6c8:	xtn	v2.4h, v4.4s
  40c6cc:	xtn2	v2.8h, v1.4s
  40c6d0:	xtn	v1.4h, v3.4s
  40c6d4:	xtn2	v1.8h, v0.4s
  40c6d8:	xtn	v0.8b, v2.8h
  40c6dc:	xtn2	v0.16b, v1.8h
  40c6e0:	str	q0, [x21, #96]
  40c6e4:	ldp	q4, q1, [x1, #448]
  40c6e8:	ldp	q3, q0, [x1, #480]
  40c6ec:	xtn	v2.4h, v4.4s
  40c6f0:	xtn2	v2.8h, v1.4s
  40c6f4:	xtn	v1.4h, v3.4s
  40c6f8:	xtn2	v1.8h, v0.4s
  40c6fc:	xtn	v0.8b, v2.8h
  40c700:	xtn2	v0.16b, v1.8h
  40c704:	str	q0, [x21, #112]
  40c708:	ldp	q4, q1, [x1, #512]
  40c70c:	ldp	q3, q0, [x1, #544]
  40c710:	xtn	v2.4h, v4.4s
  40c714:	xtn2	v2.8h, v1.4s
  40c718:	xtn	v1.4h, v3.4s
  40c71c:	xtn2	v1.8h, v0.4s
  40c720:	xtn	v0.8b, v2.8h
  40c724:	xtn2	v0.16b, v1.8h
  40c728:	str	q0, [x21, #128]
  40c72c:	ldp	q4, q1, [x1, #576]
  40c730:	ldp	q3, q0, [x1, #608]
  40c734:	xtn	v2.4h, v4.4s
  40c738:	xtn2	v2.8h, v1.4s
  40c73c:	xtn	v1.4h, v3.4s
  40c740:	xtn2	v1.8h, v0.4s
  40c744:	xtn	v0.8b, v2.8h
  40c748:	xtn2	v0.16b, v1.8h
  40c74c:	str	q0, [x21, #144]
  40c750:	ldp	q4, q1, [x1, #640]
  40c754:	ldp	q3, q0, [x1, #672]
  40c758:	xtn	v2.4h, v4.4s
  40c75c:	xtn2	v2.8h, v1.4s
  40c760:	xtn	v1.4h, v3.4s
  40c764:	xtn2	v1.8h, v0.4s
  40c768:	xtn	v0.8b, v2.8h
  40c76c:	xtn2	v0.16b, v1.8h
  40c770:	str	q0, [x21, #160]
  40c774:	ldp	q4, q1, [x1, #704]
  40c778:	ldp	q3, q0, [x1, #736]
  40c77c:	xtn	v2.4h, v4.4s
  40c780:	xtn2	v2.8h, v1.4s
  40c784:	xtn	v1.4h, v3.4s
  40c788:	xtn2	v1.8h, v0.4s
  40c78c:	xtn	v0.8b, v2.8h
  40c790:	xtn2	v0.16b, v1.8h
  40c794:	str	q0, [x21, #176]
  40c798:	ldp	q4, q1, [x1, #768]
  40c79c:	ldp	q3, q0, [x1, #800]
  40c7a0:	xtn	v2.4h, v4.4s
  40c7a4:	xtn2	v2.8h, v1.4s
  40c7a8:	xtn	v1.4h, v3.4s
  40c7ac:	xtn2	v1.8h, v0.4s
  40c7b0:	xtn	v0.8b, v2.8h
  40c7b4:	xtn2	v0.16b, v1.8h
  40c7b8:	str	q0, [x21, #192]
  40c7bc:	ldp	q4, q1, [x1, #832]
  40c7c0:	ldp	q3, q0, [x1, #864]
  40c7c4:	xtn	v2.4h, v4.4s
  40c7c8:	xtn2	v2.8h, v1.4s
  40c7cc:	xtn	v1.4h, v3.4s
  40c7d0:	xtn2	v1.8h, v0.4s
  40c7d4:	xtn	v0.8b, v2.8h
  40c7d8:	xtn2	v0.16b, v1.8h
  40c7dc:	str	q0, [x21, #208]
  40c7e0:	ldp	q4, q1, [x1, #896]
  40c7e4:	ldp	q3, q0, [x1, #928]
  40c7e8:	xtn	v2.4h, v4.4s
  40c7ec:	xtn2	v2.8h, v1.4s
  40c7f0:	xtn	v1.4h, v3.4s
  40c7f4:	xtn2	v1.8h, v0.4s
  40c7f8:	xtn	v0.8b, v2.8h
  40c7fc:	xtn2	v0.16b, v1.8h
  40c800:	str	q0, [x21, #224]
  40c804:	ldp	q4, q1, [x1, #960]
  40c808:	ldp	q3, q0, [x1, #992]
  40c80c:	xtn	v2.4h, v4.4s
  40c810:	xtn2	v2.8h, v1.4s
  40c814:	xtn	v1.4h, v3.4s
  40c818:	xtn2	v1.8h, v0.4s
  40c81c:	xtn	v0.8b, v2.8h
  40c820:	xtn2	v0.16b, v1.8h
  40c824:	str	q0, [x21, #240]
  40c828:	b	40c5b4 <wcrtomb@plt+0x9c94>
  40c82c:	mov	x0, #0x0                   	// #0
  40c830:	ldr	w2, [x1, x0, lsl #2]
  40c834:	strb	w2, [x21, x0]
  40c838:	add	x0, x0, #0x1
  40c83c:	cmp	x0, #0x100
  40c840:	b.ne	40c830 <wcrtomb@plt+0x9f10>  // b.any
  40c844:	b	40c5b4 <wcrtomb@plt+0x9c94>
  40c848:	bl	4025f0 <abort@plt>
  40c84c:	nop
  40c850:	stp	x29, x30, [sp, #-96]!
  40c854:	mov	x29, sp
  40c858:	stp	x19, x20, [sp, #16]
  40c85c:	mov	x20, x2
  40c860:	ldr	x19, [x0]
  40c864:	cmp	x19, x2
  40c868:	b.cs	40c9a0 <wcrtomb@plt+0xa080>  // b.hs, b.nlast
  40c86c:	stp	x21, x22, [sp, #32]
  40c870:	adrp	x21, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40c874:	add	x21, x21, #0x8e0
  40c878:	stp	x23, x24, [sp, #48]
  40c87c:	mov	x24, x0
  40c880:	mov	x22, x1
  40c884:	ldrb	w0, [x21, #2]
  40c888:	mov	x23, x3
  40c88c:	cbnz	w0, 40c930 <wcrtomb@plt+0xa010>
  40c890:	str	xzr, [sp, #88]
  40c894:	ldrb	w4, [x19]
  40c898:	add	x4, x21, x4
  40c89c:	ldrsb	x0, [x4, #3]
  40c8a0:	cmn	x0, #0x2
  40c8a4:	b.eq	40c8d4 <wcrtomb@plt+0x9fb4>  // b.none
  40c8a8:	add	x4, x19, x0
  40c8ac:	cmn	x0, #0x3
  40c8b0:	b.hi	40c8f0 <wcrtomb@plt+0x9fd0>  // b.pmore
  40c8b4:	cmp	x20, x4
  40c8b8:	b.ls	40c904 <wcrtomb@plt+0x9fe4>  // b.plast
  40c8bc:	mov	x19, x4
  40c8c0:	ldrb	w4, [x19]
  40c8c4:	add	x4, x21, x4
  40c8c8:	ldrsb	x0, [x4, #3]
  40c8cc:	cmn	x0, #0x2
  40c8d0:	b.ne	40c8a8 <wcrtomb@plt+0x9f88>  // b.any
  40c8d4:	add	x2, sp, #0x58
  40c8d8:	sub	x1, x23, x19
  40c8dc:	mov	x0, x19
  40c8e0:	bl	41e5f0 <wcrtomb@plt+0x1bcd0>
  40c8e4:	add	x4, x19, x0
  40c8e8:	cmn	x0, #0x3
  40c8ec:	b.ls	40c8b4 <wcrtomb@plt+0x9f94>  // b.plast
  40c8f0:	str	xzr, [sp, #88]
  40c8f4:	add	x4, x19, #0x1
  40c8f8:	cmp	x20, x4
  40c8fc:	b.hi	40c8bc <wcrtomb@plt+0x9f9c>  // b.pmore
  40c900:	mov	x0, #0x1                   	// #1
  40c904:	str	x4, [x24]
  40c908:	cbz	x22, 40c910 <wcrtomb@plt+0x9ff0>
  40c90c:	str	x0, [x22]
  40c910:	sub	x0, x20, x19
  40c914:	cmp	x20, x4
  40c918:	b.eq	40c988 <wcrtomb@plt+0xa068>  // b.none
  40c91c:	ldp	x19, x20, [sp, #16]
  40c920:	ldp	x21, x22, [sp, #32]
  40c924:	ldp	x23, x24, [sp, #48]
  40c928:	ldp	x29, x30, [sp], #96
  40c92c:	ret
  40c930:	cmp	x2, x3
  40c934:	b.cs	40c978 <wcrtomb@plt+0xa058>  // b.hs, b.nlast
  40c938:	ldrb	w0, [x2]
  40c93c:	and	w0, w0, #0xc0
  40c940:	cmp	w0, #0x80
  40c944:	b.ne	40c978 <wcrtomb@plt+0xa058>  // b.any
  40c948:	ldurb	w0, [x2, #-1]
  40c94c:	and	w0, w0, #0xc0
  40c950:	cmp	w0, #0x80
  40c954:	b.ne	40c9f8 <wcrtomb@plt+0xa0d8>  // b.any
  40c958:	ldurb	w0, [x2, #-2]
  40c95c:	and	w0, w0, #0xc0
  40c960:	cmp	w0, #0x80
  40c964:	b.ne	40c9ec <wcrtomb@plt+0xa0cc>  // b.any
  40c968:	ldurb	w0, [x2, #-3]
  40c96c:	and	w0, w0, #0xc0
  40c970:	cmp	w0, #0x80
  40c974:	b.ne	40c9b0 <wcrtomb@plt+0xa090>  // b.any
  40c978:	str	x20, [x24]
  40c97c:	mov	x4, x20
  40c980:	mov	x0, #0x1                   	// #1
  40c984:	cbnz	x22, 40c90c <wcrtomb@plt+0x9fec>
  40c988:	mov	x0, #0x0                   	// #0
  40c98c:	ldp	x19, x20, [sp, #16]
  40c990:	ldp	x21, x22, [sp, #32]
  40c994:	ldp	x23, x24, [sp, #48]
  40c998:	ldp	x29, x30, [sp], #96
  40c99c:	ret
  40c9a0:	sub	x0, x2, x19
  40c9a4:	ldp	x19, x20, [sp, #16]
  40c9a8:	ldp	x29, x30, [sp], #96
  40c9ac:	ret
  40c9b0:	stp	x25, x26, [sp, #64]
  40c9b4:	mov	x25, #0x3                   	// #3
  40c9b8:	sub	x26, x20, x25
  40c9bc:	str	xzr, [sp, #88]
  40c9c0:	ldrb	w0, [x26]
  40c9c4:	add	x21, x21, x0
  40c9c8:	ldrsb	x0, [x21, #3]
  40c9cc:	cmn	x0, #0x2
  40c9d0:	b.eq	40ca14 <wcrtomb@plt+0xa0f4>  // b.none
  40c9d4:	cmp	x25, x0
  40c9d8:	mov	x4, x20
  40c9dc:	ccmn	x0, #0x3, #0x2, cc  // cc = lo, ul, last
  40c9e0:	b.ls	40ca04 <wcrtomb@plt+0xa0e4>  // b.plast
  40c9e4:	ldp	x25, x26, [sp, #64]
  40c9e8:	b	40c904 <wcrtomb@plt+0x9fe4>
  40c9ec:	stp	x25, x26, [sp, #64]
  40c9f0:	mov	x25, #0x2                   	// #2
  40c9f4:	b	40c9b8 <wcrtomb@plt+0xa098>
  40c9f8:	stp	x25, x26, [sp, #64]
  40c9fc:	mov	x25, #0x1                   	// #1
  40ca00:	b	40c9b8 <wcrtomb@plt+0xa098>
  40ca04:	add	x4, x26, x0
  40ca08:	mov	x19, x26
  40ca0c:	ldp	x25, x26, [sp, #64]
  40ca10:	b	40c904 <wcrtomb@plt+0x9fe4>
  40ca14:	sub	x1, x23, x26
  40ca18:	add	x2, sp, #0x58
  40ca1c:	mov	x0, x26
  40ca20:	bl	41e5f0 <wcrtomb@plt+0x1bcd0>
  40ca24:	b	40c9d4 <wcrtomb@plt+0xa0b4>
  40ca28:	stp	x29, x30, [sp, #-80]!
  40ca2c:	mov	x29, sp
  40ca30:	stp	x19, x20, [sp, #16]
  40ca34:	stp	x21, x22, [sp, #32]
  40ca38:	subs	x21, x1, x0
  40ca3c:	str	xzr, [sp, #72]
  40ca40:	b.eq	40cae8 <wcrtomb@plt+0xa1c8>  // b.none
  40ca44:	mov	x20, x0
  40ca48:	mov	x19, #0x0                   	// #0
  40ca4c:	stp	x23, x24, [sp, #48]
  40ca50:	adrp	x24, 449000 <_obstack_memory_used@@Base+0x2a510>
  40ca54:	adrp	x23, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40ca58:	add	x24, x24, #0x660
  40ca5c:	add	x23, x23, #0x8e0
  40ca60:	b	40ca70 <wcrtomb@plt+0xa150>
  40ca64:	add	x19, x19, #0x1
  40ca68:	cmp	x19, x21
  40ca6c:	b.cs	40cac0 <wcrtomb@plt+0xa1a0>  // b.hs, b.nlast
  40ca70:	ldrb	w4, [x20, x19]
  40ca74:	sub	x2, x21, x19
  40ca78:	add	x3, sp, #0x48
  40ca7c:	add	x0, sp, #0x44
  40ca80:	mov	x5, x4
  40ca84:	add	x1, x20, x19
  40ca88:	add	x4, x23, x4
  40ca8c:	ldrb	w5, [x24, w5, sxtw]
  40ca90:	cbnz	w5, 40ca64 <wcrtomb@plt+0xa144>
  40ca94:	ldrsb	w4, [x4, #3]
  40ca98:	cmn	w4, #0x2
  40ca9c:	b.ne	40cac0 <wcrtomb@plt+0xa1a0>  // b.any
  40caa0:	str	wzr, [sp, #68]
  40caa4:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  40caa8:	mov	x22, x0
  40caac:	ldr	w0, [sp, #68]
  40cab0:	cmp	w0, #0x5f
  40cab4:	b.eq	40cad8 <wcrtomb@plt+0xa1b8>  // b.none
  40cab8:	bl	4027c0 <iswalnum@plt>
  40cabc:	cbnz	w0, 40cad8 <wcrtomb@plt+0xa1b8>
  40cac0:	ldp	x23, x24, [sp, #48]
  40cac4:	mov	x0, x19
  40cac8:	ldp	x19, x20, [sp, #16]
  40cacc:	ldp	x21, x22, [sp, #32]
  40cad0:	ldp	x29, x30, [sp], #80
  40cad4:	ret
  40cad8:	add	x19, x22, x19
  40cadc:	cmp	x22, #0x0
  40cae0:	cinc	x19, x19, eq  // eq = none
  40cae4:	b	40ca68 <wcrtomb@plt+0xa148>
  40cae8:	mov	x19, #0x0                   	// #0
  40caec:	b	40cac4 <wcrtomb@plt+0xa1a4>
  40caf0:	stp	x29, x30, [sp, #-48]!
  40caf4:	mov	x3, x0
  40caf8:	subs	x0, x1, x0
  40cafc:	mov	x29, sp
  40cb00:	str	xzr, [sp, #40]
  40cb04:	b.eq	40cb78 <wcrtomb@plt+0xa258>  // b.none
  40cb08:	ldrb	w4, [x3]
  40cb0c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40cb10:	add	x1, x1, #0x660
  40cb14:	ldrb	w2, [x1, w4, sxtw]
  40cb18:	cbnz	w2, 40cb80 <wcrtomb@plt+0xa260>
  40cb1c:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40cb20:	add	x1, x1, #0x8e0
  40cb24:	add	x1, x1, x4
  40cb28:	ldrsb	w1, [x1, #3]
  40cb2c:	cmn	w1, #0x2
  40cb30:	b.ne	40cb98 <wcrtomb@plt+0xa278>  // b.any
  40cb34:	mov	x1, x3
  40cb38:	mov	x2, x0
  40cb3c:	add	x3, sp, #0x28
  40cb40:	add	x0, sp, #0x24
  40cb44:	str	x19, [sp, #16]
  40cb48:	str	wzr, [sp, #36]
  40cb4c:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  40cb50:	ldr	w1, [sp, #36]
  40cb54:	mov	x19, x0
  40cb58:	cmp	w1, #0x5f
  40cb5c:	b.eq	40cb6c <wcrtomb@plt+0xa24c>  // b.none
  40cb60:	mov	w0, w1
  40cb64:	bl	4027c0 <iswalnum@plt>
  40cb68:	cbz	w0, 40cb8c <wcrtomb@plt+0xa26c>
  40cb6c:	cmp	x19, #0x0
  40cb70:	cinc	x0, x19, eq  // eq = none
  40cb74:	ldr	x19, [sp, #16]
  40cb78:	ldp	x29, x30, [sp], #48
  40cb7c:	ret
  40cb80:	mov	x0, #0x1                   	// #1
  40cb84:	ldp	x29, x30, [sp], #48
  40cb88:	ret
  40cb8c:	mov	x0, #0x0                   	// #0
  40cb90:	ldr	x19, [sp, #16]
  40cb94:	b	40cb78 <wcrtomb@plt+0xa258>
  40cb98:	mov	x0, #0x0                   	// #0
  40cb9c:	b	40cb78 <wcrtomb@plt+0xa258>
  40cba0:	cmp	x0, x1
  40cba4:	b.eq	40ccb4 <wcrtomb@plt+0xa394>  // b.none
  40cba8:	stp	x29, x30, [sp, #-80]!
  40cbac:	mov	x4, x0
  40cbb0:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40cbb4:	mov	x29, sp
  40cbb8:	str	x21, [sp, #32]
  40cbbc:	add	x21, x0, #0x8e0
  40cbc0:	ldrb	w0, [x0, #2272]
  40cbc4:	stp	x19, x20, [sp, #16]
  40cbc8:	mov	x20, x2
  40cbcc:	ldurb	w2, [x1, #-1]
  40cbd0:	cbz	w0, 40cbec <wcrtomb@plt+0xa2cc>
  40cbd4:	ldrb	w0, [x21, #2]
  40cbd8:	cbz	w0, 40cc08 <wcrtomb@plt+0xa2e8>
  40cbdc:	add	x0, x21, w2, sxtw
  40cbe0:	ldrsb	w0, [x0, #3]
  40cbe4:	cmn	w0, #0x2
  40cbe8:	b.eq	40cc08 <wcrtomb@plt+0xa2e8>  // b.none
  40cbec:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40cbf0:	add	x0, x0, #0x660
  40cbf4:	ldrb	w0, [x0, w2, sxtw]
  40cbf8:	ldp	x19, x20, [sp, #16]
  40cbfc:	ldr	x21, [sp, #32]
  40cc00:	ldp	x29, x30, [sp], #80
  40cc04:	ret
  40cc08:	sub	x19, x1, #0x1
  40cc0c:	mov	x3, x20
  40cc10:	mov	x1, #0x0                   	// #0
  40cc14:	mov	x2, x19
  40cc18:	add	x0, sp, #0x40
  40cc1c:	str	x4, [sp, #64]
  40cc20:	bl	40c850 <wcrtomb@plt+0x9f30>
  40cc24:	str	xzr, [sp, #72]
  40cc28:	sub	x1, x19, x0
  40cc2c:	subs	x0, x20, x1
  40cc30:	b.eq	40cbf8 <wcrtomb@plt+0xa2d8>  // b.none
  40cc34:	ldrb	w4, [x1]
  40cc38:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  40cc3c:	add	x2, x2, #0x660
  40cc40:	ldrb	w2, [x2, w4, sxtw]
  40cc44:	cbnz	w2, 40cca0 <wcrtomb@plt+0xa380>
  40cc48:	add	x21, x21, x4
  40cc4c:	ldrsb	w2, [x21, #3]
  40cc50:	cmn	w2, #0x2
  40cc54:	b.ne	40ccbc <wcrtomb@plt+0xa39c>  // b.any
  40cc58:	mov	x2, x0
  40cc5c:	add	x3, sp, #0x48
  40cc60:	add	x0, sp, #0x3c
  40cc64:	str	wzr, [sp, #60]
  40cc68:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  40cc6c:	mov	x19, x0
  40cc70:	ldr	w1, [sp, #60]
  40cc74:	cmp	w1, #0x5f
  40cc78:	b.eq	40cc88 <wcrtomb@plt+0xa368>  // b.none
  40cc7c:	mov	w0, w1
  40cc80:	bl	4027c0 <iswalnum@plt>
  40cc84:	cbz	w0, 40ccbc <wcrtomb@plt+0xa39c>
  40cc88:	cmp	x19, #0x0
  40cc8c:	cinc	x0, x19, eq  // eq = none
  40cc90:	ldp	x19, x20, [sp, #16]
  40cc94:	ldr	x21, [sp, #32]
  40cc98:	ldp	x29, x30, [sp], #80
  40cc9c:	ret
  40cca0:	mov	x0, #0x1                   	// #1
  40cca4:	ldp	x19, x20, [sp, #16]
  40cca8:	ldr	x21, [sp, #32]
  40ccac:	ldp	x29, x30, [sp], #80
  40ccb0:	ret
  40ccb4:	mov	x0, #0x0                   	// #0
  40ccb8:	ret
  40ccbc:	mov	x0, #0x0                   	// #0
  40ccc0:	b	40cbf8 <wcrtomb@plt+0xa2d8>
  40ccc4:	nop
  40ccc8:	mov	w0, #0x1                   	// #1
  40cccc:	b	407ac8 <wcrtomb@plt+0x51a8>
  40ccd0:	stp	x29, x30, [sp, #-96]!
  40ccd4:	mov	x29, sp
  40ccd8:	stp	x23, x24, [sp, #48]
  40ccdc:	mov	x23, x1
  40cce0:	stp	x21, x22, [sp, #32]
  40cce4:	mov	x22, x3
  40cce8:	stp	x25, x26, [sp, #64]
  40ccec:	mov	x26, x2
  40ccf0:	mov	x25, x0
  40ccf4:	stp	x27, x28, [sp, #80]
  40ccf8:	bl	402300 <strlen@plt>
  40ccfc:	ldr	x28, [x23]
  40cd00:	cbz	x28, 40ce40 <wcrtomb@plt+0xa520>
  40cd04:	stp	x19, x20, [sp, #16]
  40cd08:	mov	x21, x0
  40cd0c:	cbz	x26, 40cde8 <wcrtomb@plt+0xa4c8>
  40cd10:	mov	x20, x26
  40cd14:	mov	w27, #0x0                   	// #0
  40cd18:	mov	x24, #0xffffffffffffffff    	// #-1
  40cd1c:	mov	x19, #0x0                   	// #0
  40cd20:	b	40cd40 <wcrtomb@plt+0xa420>
  40cd24:	bl	402660 <memcmp@plt>
  40cd28:	cmp	w0, #0x0
  40cd2c:	csinc	w27, w27, wzr, eq  // eq = none
  40cd30:	add	x19, x19, #0x1
  40cd34:	add	x20, x20, x22
  40cd38:	ldr	x28, [x23, x19, lsl #3]
  40cd3c:	cbz	x28, 40cd98 <wcrtomb@plt+0xa478>
  40cd40:	mov	x1, x25
  40cd44:	mov	x2, x21
  40cd48:	mov	x0, x28
  40cd4c:	bl	4024c0 <strncmp@plt>
  40cd50:	mov	w1, w0
  40cd54:	mov	x0, x28
  40cd58:	cbnz	w1, 40cd30 <wcrtomb@plt+0xa410>
  40cd5c:	bl	402300 <strlen@plt>
  40cd60:	mov	x3, x0
  40cd64:	mov	x2, x22
  40cd68:	madd	x0, x24, x22, x26
  40cd6c:	mov	x1, x20
  40cd70:	cmp	x21, x3
  40cd74:	b.eq	40cdc4 <wcrtomb@plt+0xa4a4>  // b.none
  40cd78:	cmn	x24, #0x1
  40cd7c:	b.ne	40cd24 <wcrtomb@plt+0xa404>  // b.any
  40cd80:	mov	x24, x19
  40cd84:	add	x19, x19, #0x1
  40cd88:	add	x20, x20, x22
  40cd8c:	ldr	x28, [x23, x19, lsl #3]
  40cd90:	cbnz	x28, 40cd40 <wcrtomb@plt+0xa420>
  40cd94:	nop
  40cd98:	ldp	x19, x20, [sp, #16]
  40cd9c:	cmp	w27, #0x0
  40cda0:	mov	x0, #0xfffffffffffffffe    	// #-2
  40cda4:	csel	x24, x24, x0, eq  // eq = none
  40cda8:	mov	x0, x24
  40cdac:	ldp	x21, x22, [sp, #32]
  40cdb0:	ldp	x23, x24, [sp, #48]
  40cdb4:	ldp	x25, x26, [sp, #64]
  40cdb8:	ldp	x27, x28, [sp, #80]
  40cdbc:	ldp	x29, x30, [sp], #96
  40cdc0:	ret
  40cdc4:	mov	x24, x19
  40cdc8:	mov	x0, x24
  40cdcc:	ldp	x19, x20, [sp, #16]
  40cdd0:	ldp	x21, x22, [sp, #32]
  40cdd4:	ldp	x23, x24, [sp, #48]
  40cdd8:	ldp	x25, x26, [sp, #64]
  40cddc:	ldp	x27, x28, [sp, #80]
  40cde0:	ldp	x29, x30, [sp], #96
  40cde4:	ret
  40cde8:	mov	w27, #0x0                   	// #0
  40cdec:	mov	x24, #0xffffffffffffffff    	// #-1
  40cdf0:	mov	x19, #0x0                   	// #0
  40cdf4:	b	40ce08 <wcrtomb@plt+0xa4e8>
  40cdf8:	mov	w27, #0x1                   	// #1
  40cdfc:	add	x19, x19, #0x1
  40ce00:	ldr	x28, [x23, x19, lsl #3]
  40ce04:	cbz	x28, 40cd98 <wcrtomb@plt+0xa478>
  40ce08:	mov	x1, x25
  40ce0c:	mov	x2, x21
  40ce10:	mov	x0, x28
  40ce14:	bl	4024c0 <strncmp@plt>
  40ce18:	mov	w1, w0
  40ce1c:	mov	x0, x28
  40ce20:	cbnz	w1, 40cdfc <wcrtomb@plt+0xa4dc>
  40ce24:	bl	402300 <strlen@plt>
  40ce28:	cmp	x0, x21
  40ce2c:	b.eq	40cdc4 <wcrtomb@plt+0xa4a4>  // b.none
  40ce30:	cmn	x24, #0x1
  40ce34:	b.ne	40cdf8 <wcrtomb@plt+0xa4d8>  // b.any
  40ce38:	mov	x24, x19
  40ce3c:	b	40cdfc <wcrtomb@plt+0xa4dc>
  40ce40:	mov	x24, #0xffffffffffffffff    	// #-1
  40ce44:	b	40cda8 <wcrtomb@plt+0xa488>
  40ce48:	stp	x29, x30, [sp, #-48]!
  40ce4c:	cmn	x2, #0x1
  40ce50:	mov	x29, sp
  40ce54:	stp	x19, x20, [sp, #16]
  40ce58:	mov	x20, x0
  40ce5c:	str	x21, [sp, #32]
  40ce60:	mov	x21, x1
  40ce64:	b.eq	40cec4 <wcrtomb@plt+0xa5a4>  // b.none
  40ce68:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40ce6c:	mov	w2, #0x5                   	// #5
  40ce70:	add	x1, x1, #0x420
  40ce74:	mov	x0, #0x0                   	// #0
  40ce78:	bl	4027f0 <dcgettext@plt>
  40ce7c:	mov	x19, x0
  40ce80:	mov	x2, x21
  40ce84:	mov	w1, #0x8                   	// #8
  40ce88:	mov	w0, #0x0                   	// #0
  40ce8c:	bl	419658 <wcrtomb@plt+0x16d38>
  40ce90:	mov	x1, x20
  40ce94:	mov	x20, x0
  40ce98:	mov	w0, #0x1                   	// #1
  40ce9c:	bl	41a800 <wcrtomb@plt+0x17ee0>
  40cea0:	mov	x3, x20
  40cea4:	mov	x2, x19
  40cea8:	ldp	x19, x20, [sp, #16]
  40ceac:	mov	x4, x0
  40ceb0:	ldr	x21, [sp, #32]
  40ceb4:	mov	w1, #0x0                   	// #0
  40ceb8:	ldp	x29, x30, [sp], #48
  40cebc:	mov	w0, #0x0                   	// #0
  40cec0:	b	402330 <error@plt>
  40cec4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40cec8:	mov	w2, #0x5                   	// #5
  40cecc:	add	x1, x1, #0x400
  40ced0:	mov	x0, #0x0                   	// #0
  40ced4:	bl	4027f0 <dcgettext@plt>
  40ced8:	mov	x19, x0
  40cedc:	b	40ce80 <wcrtomb@plt+0xa560>
  40cee0:	stp	x29, x30, [sp, #-112]!
  40cee4:	mov	x29, sp
  40cee8:	stp	x19, x20, [sp, #16]
  40ceec:	mov	x20, x1
  40cef0:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40cef4:	add	x1, x1, #0x440
  40cef8:	stp	x21, x22, [sp, #32]
  40cefc:	mov	x22, x2
  40cf00:	mov	w2, #0x5                   	// #5
  40cf04:	stp	x23, x24, [sp, #48]
  40cf08:	mov	x24, x0
  40cf0c:	mov	x0, #0x0                   	// #0
  40cf10:	bl	4027f0 <dcgettext@plt>
  40cf14:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40cf18:	ldr	x1, [x1, #1088]
  40cf1c:	bl	402800 <fputs_unlocked@plt>
  40cf20:	ldr	x21, [x24]
  40cf24:	cbz	x21, 40cfa0 <wcrtomb@plt+0xa680>
  40cf28:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40cf2c:	stp	x25, x26, [sp, #64]
  40cf30:	add	x25, x0, #0x440
  40cf34:	stp	x27, x28, [sp, #80]
  40cf38:	adrp	x27, 431000 <_obstack_memory_used@@Base+0x12510>
  40cf3c:	adrp	x28, 431000 <_obstack_memory_used@@Base+0x12510>
  40cf40:	add	x27, x27, #0x458
  40cf44:	add	x28, x28, #0x460
  40cf48:	mov	x23, #0x0                   	// #0
  40cf4c:	mov	x19, #0x0                   	// #0
  40cf50:	cbz	x19, 40cf68 <wcrtomb@plt+0xa648>
  40cf54:	mov	x2, x22
  40cf58:	mov	x1, x20
  40cf5c:	mov	x0, x23
  40cf60:	bl	402660 <memcmp@plt>
  40cf64:	cbz	w0, 40cfd8 <wcrtomb@plt+0xa6b8>
  40cf68:	ldr	x26, [x25]
  40cf6c:	mov	x0, x21
  40cf70:	bl	41a980 <wcrtomb@plt+0x18060>
  40cf74:	mov	x23, x20
  40cf78:	mov	x2, x0
  40cf7c:	mov	x1, x27
  40cf80:	mov	x0, x26
  40cf84:	bl	4028d0 <fprintf@plt>
  40cf88:	add	x19, x19, #0x1
  40cf8c:	add	x20, x20, x22
  40cf90:	ldr	x21, [x24, x19, lsl #3]
  40cf94:	cbnz	x21, 40cf50 <wcrtomb@plt+0xa630>
  40cf98:	ldp	x25, x26, [sp, #64]
  40cf9c:	ldp	x27, x28, [sp, #80]
  40cfa0:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40cfa4:	ldr	x0, [x0, #1088]
  40cfa8:	ldp	x1, x2, [x0, #40]
  40cfac:	cmp	x1, x2
  40cfb0:	b.cs	40d000 <wcrtomb@plt+0xa6e0>  // b.hs, b.nlast
  40cfb4:	add	x2, x1, #0x1
  40cfb8:	str	x2, [x0, #40]
  40cfbc:	mov	w0, #0xa                   	// #10
  40cfc0:	strb	w0, [x1]
  40cfc4:	ldp	x19, x20, [sp, #16]
  40cfc8:	ldp	x21, x22, [sp, #32]
  40cfcc:	ldp	x23, x24, [sp, #48]
  40cfd0:	ldp	x29, x30, [sp], #112
  40cfd4:	ret
  40cfd8:	ldr	x3, [x25]
  40cfdc:	mov	x0, x21
  40cfe0:	str	x3, [sp, #104]
  40cfe4:	bl	41a980 <wcrtomb@plt+0x18060>
  40cfe8:	mov	x2, x0
  40cfec:	ldr	x3, [sp, #104]
  40cff0:	mov	x1, x28
  40cff4:	mov	x0, x3
  40cff8:	bl	4028d0 <fprintf@plt>
  40cffc:	b	40cf88 <wcrtomb@plt+0xa668>
  40d000:	ldp	x19, x20, [sp, #16]
  40d004:	mov	w1, #0xa                   	// #10
  40d008:	ldp	x21, x22, [sp, #32]
  40d00c:	ldp	x23, x24, [sp, #48]
  40d010:	ldp	x29, x30, [sp], #112
  40d014:	b	402620 <__overflow@plt>
  40d018:	stp	x29, x30, [sp, #-80]!
  40d01c:	mov	x29, sp
  40d020:	stp	x19, x20, [sp, #16]
  40d024:	mov	x19, x2
  40d028:	mov	x20, x3
  40d02c:	stp	x21, x22, [sp, #32]
  40d030:	mov	x22, x1
  40d034:	mov	x21, x4
  40d038:	mov	x3, x4
  40d03c:	mov	x2, x20
  40d040:	mov	x1, x19
  40d044:	stp	x23, x24, [sp, #48]
  40d048:	mov	x24, x0
  40d04c:	mov	x23, x5
  40d050:	mov	x0, x22
  40d054:	bl	40ccd0 <wcrtomb@plt+0xa3b0>
  40d058:	tbnz	x0, #63, 40d070 <wcrtomb@plt+0xa750>
  40d05c:	ldp	x19, x20, [sp, #16]
  40d060:	ldp	x21, x22, [sp, #32]
  40d064:	ldp	x23, x24, [sp, #48]
  40d068:	ldp	x29, x30, [sp], #80
  40d06c:	ret
  40d070:	str	x25, [sp, #64]
  40d074:	cmn	x0, #0x1
  40d078:	b.eq	40d0ec <wcrtomb@plt+0xa7cc>  // b.none
  40d07c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40d080:	mov	w2, #0x5                   	// #5
  40d084:	add	x1, x1, #0x420
  40d088:	mov	x0, #0x0                   	// #0
  40d08c:	bl	4027f0 <dcgettext@plt>
  40d090:	mov	x25, x0
  40d094:	mov	x2, x22
  40d098:	mov	w1, #0x8                   	// #8
  40d09c:	mov	w0, #0x0                   	// #0
  40d0a0:	bl	419658 <wcrtomb@plt+0x16d38>
  40d0a4:	mov	x1, x24
  40d0a8:	mov	x22, x0
  40d0ac:	mov	w0, #0x1                   	// #1
  40d0b0:	bl	41a800 <wcrtomb@plt+0x17ee0>
  40d0b4:	mov	x3, x22
  40d0b8:	mov	x4, x0
  40d0bc:	mov	x2, x25
  40d0c0:	mov	w1, #0x0                   	// #0
  40d0c4:	mov	w0, #0x0                   	// #0
  40d0c8:	bl	402330 <error@plt>
  40d0cc:	mov	x0, x19
  40d0d0:	mov	x2, x21
  40d0d4:	mov	x1, x20
  40d0d8:	bl	40cee0 <wcrtomb@plt+0xa5c0>
  40d0dc:	blr	x23
  40d0e0:	mov	x0, #0xffffffffffffffff    	// #-1
  40d0e4:	ldr	x25, [sp, #64]
  40d0e8:	b	40d05c <wcrtomb@plt+0xa73c>
  40d0ec:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40d0f0:	mov	w2, #0x5                   	// #5
  40d0f4:	add	x1, x1, #0x400
  40d0f8:	mov	x0, #0x0                   	// #0
  40d0fc:	bl	4027f0 <dcgettext@plt>
  40d100:	mov	x25, x0
  40d104:	b	40d094 <wcrtomb@plt+0xa774>
  40d108:	stp	x29, x30, [sp, #-64]!
  40d10c:	mov	x29, sp
  40d110:	stp	x21, x22, [sp, #32]
  40d114:	ldr	x22, [x1]
  40d118:	cbz	x22, 40d160 <wcrtomb@plt+0xa840>
  40d11c:	mov	x21, x3
  40d120:	stp	x19, x20, [sp, #16]
  40d124:	mov	x19, x2
  40d128:	add	x20, x1, #0x8
  40d12c:	str	x23, [sp, #48]
  40d130:	mov	x23, x0
  40d134:	b	40d144 <wcrtomb@plt+0xa824>
  40d138:	ldr	x22, [x20], #8
  40d13c:	add	x19, x19, x21
  40d140:	cbz	x22, 40d158 <wcrtomb@plt+0xa838>
  40d144:	mov	x2, x21
  40d148:	mov	x1, x19
  40d14c:	mov	x0, x23
  40d150:	bl	402660 <memcmp@plt>
  40d154:	cbnz	w0, 40d138 <wcrtomb@plt+0xa818>
  40d158:	ldp	x19, x20, [sp, #16]
  40d15c:	ldr	x23, [sp, #48]
  40d160:	mov	x0, x22
  40d164:	ldp	x21, x22, [sp, #32]
  40d168:	ldp	x29, x30, [sp], #64
  40d16c:	ret
  40d170:	ret
  40d174:	nop
  40d178:	stp	x29, x30, [sp, #-48]!
  40d17c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40d180:	mov	w0, #0x0                   	// #0
  40d184:	mov	x29, sp
  40d188:	stp	x19, x20, [sp, #16]
  40d18c:	add	x19, x1, #0x760
  40d190:	ldr	x1, [x1, #1888]
  40d194:	str	x21, [sp, #32]
  40d198:	blr	x1
  40d19c:	ldr	x20, [x19, #8]
  40d1a0:	ldr	x21, [x19, #16]
  40d1a4:	ldr	x0, [x19, #16]
  40d1a8:	bl	402300 <strlen@plt>
  40d1ac:	mov	x2, x0
  40d1b0:	mov	x1, x21
  40d1b4:	mov	w0, #0x2                   	// #2
  40d1b8:	bl	4025d0 <write@plt>
  40d1bc:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40d1c0:	add	x1, x1, #0x468
  40d1c4:	mov	x2, #0x2                   	// #2
  40d1c8:	mov	w0, w2
  40d1cc:	bl	4025d0 <write@plt>
  40d1d0:	mov	x0, x20
  40d1d4:	bl	402300 <strlen@plt>
  40d1d8:	mov	x1, x20
  40d1dc:	mov	x2, x0
  40d1e0:	mov	w0, #0x2                   	// #2
  40d1e4:	bl	4025d0 <write@plt>
  40d1e8:	mov	x2, #0x1                   	// #1
  40d1ec:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  40d1f0:	mov	w0, #0x2                   	// #2
  40d1f4:	add	x1, x1, #0x4a0
  40d1f8:	bl	4025d0 <write@plt>
  40d1fc:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40d200:	ldr	w0, [x0, #976]
  40d204:	bl	4022e0 <_exit@plt>
  40d208:	stp	x29, x30, [sp, #-208]!
  40d20c:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  40d210:	add	x2, x2, #0x780
  40d214:	mov	x3, #0x4000                	// #16384
  40d218:	mov	x29, sp
  40d21c:	mov	x1, #0x0                   	// #0
  40d220:	stp	x19, x20, [sp, #16]
  40d224:	mov	x19, x0
  40d228:	add	x0, sp, #0x20
  40d22c:	str	x2, [sp, #32]
  40d230:	str	wzr, [sp, #40]
  40d234:	str	x3, [sp, #48]
  40d238:	bl	4022b0 <sigaltstack@plt>
  40d23c:	cbnz	w0, 40d2cc <wcrtomb@plt+0xa9ac>
  40d240:	cmp	x19, #0x0
  40d244:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  40d248:	adrp	x0, 40d000 <wcrtomb@plt+0xa6e0>
  40d24c:	add	x0, x0, #0x170
  40d250:	csel	x19, x0, x19, eq  // eq = none
  40d254:	add	x20, x1, #0x760
  40d258:	str	x19, [x1, #1888]
  40d25c:	mov	w2, #0x5                   	// #5
  40d260:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40d264:	mov	x0, #0x0                   	// #0
  40d268:	add	x1, x1, #0x470
  40d26c:	bl	4027f0 <dcgettext@plt>
  40d270:	mov	x3, x0
  40d274:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40d278:	add	x1, x1, #0x480
  40d27c:	mov	w2, #0x5                   	// #5
  40d280:	mov	x0, #0x0                   	// #0
  40d284:	str	x3, [x20, #24]
  40d288:	bl	4027f0 <dcgettext@plt>
  40d28c:	str	x0, [x20, #8]
  40d290:	bl	415c38 <wcrtomb@plt+0x13318>
  40d294:	mov	x1, x0
  40d298:	add	x0, sp, #0x40
  40d29c:	str	x1, [x20, #16]
  40d2a0:	bl	4024b0 <sigemptyset@plt>
  40d2a4:	adrp	x3, 40d000 <wcrtomb@plt+0xa6e0>
  40d2a8:	mov	w4, #0x4                   	// #4
  40d2ac:	add	x3, x3, #0x178
  40d2b0:	movk	w4, #0xc800, lsl #16
  40d2b4:	add	x1, sp, #0x38
  40d2b8:	mov	x2, #0x0                   	// #0
  40d2bc:	mov	w0, #0xb                   	// #11
  40d2c0:	str	x3, [sp, #56]
  40d2c4:	str	w4, [sp, #192]
  40d2c8:	bl	402590 <sigaction@plt>
  40d2cc:	ldp	x19, x20, [sp, #16]
  40d2d0:	ldp	x29, x30, [sp], #208
  40d2d4:	ret
  40d2d8:	cmp	x0, x1
  40d2dc:	b.eq	40d344 <wcrtomb@plt+0xaa24>  // b.none
  40d2e0:	mov	x4, #0x0                   	// #0
  40d2e4:	nop
  40d2e8:	ldrb	w3, [x0, x4]
  40d2ec:	ldrb	w2, [x1, x4]
  40d2f0:	sub	w6, w3, #0x41
  40d2f4:	mov	w5, w3
  40d2f8:	cmp	w6, #0x19
  40d2fc:	sub	w7, w2, #0x41
  40d300:	mov	w6, w2
  40d304:	b.hi	40d338 <wcrtomb@plt+0xaa18>  // b.pmore
  40d308:	add	w5, w3, #0x20
  40d30c:	cmp	w7, #0x19
  40d310:	and	w3, w5, #0xff
  40d314:	b.hi	40d324 <wcrtomb@plt+0xaa04>  // b.pmore
  40d318:	add	w6, w2, #0x20
  40d31c:	and	w2, w6, #0xff
  40d320:	cbz	w5, 40d330 <wcrtomb@plt+0xaa10>
  40d324:	add	x4, x4, #0x1
  40d328:	cmp	w3, w2
  40d32c:	b.eq	40d2e8 <wcrtomb@plt+0xa9c8>  // b.none
  40d330:	sub	w0, w5, w6
  40d334:	ret
  40d338:	cmp	w7, #0x19
  40d33c:	b.hi	40d320 <wcrtomb@plt+0xaa00>  // b.pmore
  40d340:	b	40d318 <wcrtomb@plt+0xa9f8>
  40d344:	mov	w0, #0x0                   	// #0
  40d348:	ret
  40d34c:	nop
  40d350:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40d354:	str	x0, [x1, #1920]
  40d358:	ret
  40d35c:	nop
  40d360:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40d364:	strb	w0, [x1, #1928]
  40d368:	ret
  40d36c:	nop
  40d370:	stp	x29, x30, [sp, #-48]!
  40d374:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40d378:	mov	x29, sp
  40d37c:	ldr	x0, [x0, #1112]
  40d380:	bl	42ea78 <_obstack_memory_used@@Base+0xff88>
  40d384:	cbz	w0, 40d3bc <wcrtomb@plt+0xaa9c>
  40d388:	stp	x19, x20, [sp, #16]
  40d38c:	adrp	x20, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  40d390:	add	x0, x20, #0x780
  40d394:	str	x21, [sp, #32]
  40d398:	ldrb	w21, [x0, #8]
  40d39c:	bl	402890 <__errno_location@plt>
  40d3a0:	mov	x19, x0
  40d3a4:	cbz	w21, 40d3d4 <wcrtomb@plt+0xaab4>
  40d3a8:	ldr	w0, [x0]
  40d3ac:	cmp	w0, #0x20
  40d3b0:	b.ne	40d3d4 <wcrtomb@plt+0xaab4>  // b.any
  40d3b4:	ldp	x19, x20, [sp, #16]
  40d3b8:	ldr	x21, [sp, #32]
  40d3bc:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40d3c0:	ldr	x0, [x0, #1088]
  40d3c4:	bl	42ea78 <_obstack_memory_used@@Base+0xff88>
  40d3c8:	cbnz	w0, 40d428 <wcrtomb@plt+0xab08>
  40d3cc:	ldp	x29, x30, [sp], #48
  40d3d0:	ret
  40d3d4:	mov	w2, #0x5                   	// #5
  40d3d8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x10510>
  40d3dc:	mov	x0, #0x0                   	// #0
  40d3e0:	add	x1, x1, #0x3f0
  40d3e4:	bl	4027f0 <dcgettext@plt>
  40d3e8:	ldr	x2, [x20, #1920]
  40d3ec:	mov	x20, x0
  40d3f0:	cbz	x2, 40d434 <wcrtomb@plt+0xab14>
  40d3f4:	ldr	w19, [x19]
  40d3f8:	mov	x0, x2
  40d3fc:	bl	419d58 <wcrtomb@plt+0x17438>
  40d400:	mov	x3, x0
  40d404:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  40d408:	mov	w1, w19
  40d40c:	mov	x4, x20
  40d410:	add	x2, x2, #0x3c8
  40d414:	mov	w0, #0x0                   	// #0
  40d418:	bl	402330 <error@plt>
  40d41c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  40d420:	ldr	w0, [x0, #976]
  40d424:	bl	4022e0 <_exit@plt>
  40d428:	stp	x19, x20, [sp, #16]
  40d42c:	str	x21, [sp, #32]
  40d430:	b	40d41c <wcrtomb@plt+0xaafc>
  40d434:	ldr	w1, [x19]
  40d438:	mov	x3, x0
  40d43c:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  40d440:	mov	w0, #0x0                   	// #0
  40d444:	add	x2, x2, #0x270
  40d448:	bl	402330 <error@plt>
  40d44c:	b	40d41c <wcrtomb@plt+0xaafc>
  40d450:	stp	x29, x30, [sp, #-48]!
  40d454:	mov	x29, sp
  40d458:	stp	x21, x22, [sp, #32]
  40d45c:	mov	x21, #0x0                   	// #0
  40d460:	ldr	x22, [x0, #144]
  40d464:	stp	x19, x20, [sp, #16]
  40d468:	mov	x20, x0
  40d46c:	add	x0, x22, x1, lsl #3
  40d470:	ldur	x2, [x0, #-8]
  40d474:	sub	x3, x2, #0x105
  40d478:	cmp	x2, #0x103
  40d47c:	b.gt	40d49c <wcrtomb@plt+0xab7c>
  40d480:	cmp	x2, #0x100
  40d484:	b.gt	40d4c4 <wcrtomb@plt+0xaba4>
  40d488:	add	x0, x21, #0x1
  40d48c:	ldp	x19, x20, [sp, #16]
  40d490:	ldp	x21, x22, [sp, #32]
  40d494:	ldp	x29, x30, [sp], #48
  40d498:	ret
  40d49c:	sub	x19, x1, #0x1
  40d4a0:	mov	x0, x20
  40d4a4:	mov	x1, x19
  40d4a8:	cmp	x3, #0x1
  40d4ac:	b.hi	40d488 <wcrtomb@plt+0xab68>  // b.pmore
  40d4b0:	bl	40d450 <wcrtomb@plt+0xab30>
  40d4b4:	add	x2, x0, #0x1
  40d4b8:	sub	x1, x19, x0
  40d4bc:	add	x21, x21, x2
  40d4c0:	b	40d46c <wcrtomb@plt+0xab4c>
  40d4c4:	sub	x1, x1, #0x1
  40d4c8:	add	x21, x21, #0x1
  40d4cc:	b	40d46c <wcrtomb@plt+0xab4c>
  40d4d0:	ldr	x2, [x0]
  40d4d4:	mov	w3, #0xffffffff            	// #-1
  40d4d8:	ldr	x1, [x1]
  40d4dc:	cmp	x2, x1
  40d4e0:	cset	w0, gt
  40d4e4:	csel	w0, w0, w3, ge  // ge = tcont
  40d4e8:	ret
  40d4ec:	nop
  40d4f0:	mov	x0, x1
  40d4f4:	mov	w1, #0x1                   	// #1
  40d4f8:	strb	w1, [x5]
  40d4fc:	ret
  40d500:	stp	x29, x30, [sp, #-32]!
  40d504:	mov	x29, sp
  40d508:	stp	x19, x20, [sp, #16]
  40d50c:	mov	w19, w0
  40d510:	mov	x20, x1
  40d514:	bl	402560 <__ctype_toupper_loc@plt>
  40d518:	add	w1, w19, #0x80
  40d51c:	cmp	w1, #0x17f
  40d520:	ldr	x5, [x0]
  40d524:	b.hi	40d52c <wcrtomb@plt+0xac0c>  // b.pmore
  40d528:	ldr	w19, [x5, w19, sxtw #2]
  40d52c:	mov	x2, #0x0                   	// #0
  40d530:	mov	x1, #0x1                   	// #1
  40d534:	nop
  40d538:	ldr	w3, [x5, x2, lsl #2]
  40d53c:	cmp	w19, w3
  40d540:	b.ne	40d558 <wcrtomb@plt+0xac38>  // b.any
  40d544:	lsr	w0, w2, #6
  40d548:	lsl	x3, x1, x2
  40d54c:	ldr	x4, [x20, x0, lsl #3]
  40d550:	orr	x3, x4, x3
  40d554:	str	x3, [x20, x0, lsl #3]
  40d558:	add	x2, x2, #0x1
  40d55c:	cmp	x2, #0x100
  40d560:	b.ne	40d538 <wcrtomb@plt+0xac18>  // b.any
  40d564:	ldp	x19, x20, [sp, #16]
  40d568:	ldp	x29, x30, [sp], #32
  40d56c:	ret
  40d570:	stp	x29, x30, [sp, #-80]!
  40d574:	mov	x29, sp
  40d578:	stp	x19, x20, [sp, #16]
  40d57c:	mov	x19, x2
  40d580:	mov	x20, x0
  40d584:	add	x0, x2, #0x1
  40d588:	stp	x21, x22, [sp, #32]
  40d58c:	stp	x23, x24, [sp, #48]
  40d590:	str	x1, [sp, #72]
  40d594:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40d598:	ldr	x1, [sp, #72]
  40d59c:	mov	x2, x19
  40d5a0:	bl	4022a0 <memcpy@plt>
  40d5a4:	strb	wzr, [x0, x19]
  40d5a8:	ldr	x21, [x20]
  40d5ac:	mov	x23, x0
  40d5b0:	cbz	x21, 40d690 <wcrtomb@plt+0xad70>
  40d5b4:	mov	x0, x21
  40d5b8:	mov	x19, #0x0                   	// #0
  40d5bc:	b	40d5cc <wcrtomb@plt+0xacac>
  40d5c0:	add	x19, x19, #0x1
  40d5c4:	ldr	x0, [x20, x19, lsl #3]
  40d5c8:	cbz	x0, 40d5f8 <wcrtomb@plt+0xacd8>
  40d5cc:	mov	x1, x23
  40d5d0:	bl	4027e0 <strstr@plt>
  40d5d4:	cbz	x0, 40d5c0 <wcrtomb@plt+0xaca0>
  40d5d8:	mov	x0, x23
  40d5dc:	bl	4026b0 <free@plt>
  40d5e0:	mov	x0, x20
  40d5e4:	ldp	x19, x20, [sp, #16]
  40d5e8:	ldp	x21, x22, [sp, #32]
  40d5ec:	ldp	x23, x24, [sp, #48]
  40d5f0:	ldp	x29, x30, [sp], #80
  40d5f4:	ret
  40d5f8:	mov	x24, x20
  40d5fc:	mov	x22, #0x0                   	// #0
  40d600:	b	40d630 <wcrtomb@plt+0xad10>
  40d604:	mov	x0, x21
  40d608:	sub	x19, x19, #0x1
  40d60c:	bl	4026b0 <free@plt>
  40d610:	cmp	x19, x22
  40d614:	b.eq	40d650 <wcrtomb@plt+0xad30>  // b.none
  40d618:	ldr	x0, [x20, x19, lsl #3]
  40d61c:	str	x0, [x24]
  40d620:	str	xzr, [x20, x19, lsl #3]
  40d624:	add	x24, x20, x22, lsl #3
  40d628:	ldr	x21, [x20, x22, lsl #3]
  40d62c:	cbz	x21, 40d650 <wcrtomb@plt+0xad30>
  40d630:	mov	x1, x21
  40d634:	mov	x0, x23
  40d638:	bl	4027e0 <strstr@plt>
  40d63c:	cbnz	x0, 40d604 <wcrtomb@plt+0xace4>
  40d640:	add	x22, x22, #0x1
  40d644:	add	x24, x20, x22, lsl #3
  40d648:	ldr	x21, [x20, x22, lsl #3]
  40d64c:	cbnz	x21, 40d630 <wcrtomb@plt+0xad10>
  40d650:	add	x0, x19, #0x2
  40d654:	cmp	xzr, x0, lsr #61
  40d658:	lsl	x1, x0, #3
  40d65c:	cset	x2, ne  // ne = any
  40d660:	tbnz	x0, #60, 40d69c <wcrtomb@plt+0xad7c>
  40d664:	cbnz	x2, 40d69c <wcrtomb@plt+0xad7c>
  40d668:	mov	x0, x20
  40d66c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40d670:	add	x1, x0, x19, lsl #3
  40d674:	str	x23, [x0, x19, lsl #3]
  40d678:	ldp	x19, x20, [sp, #16]
  40d67c:	str	xzr, [x1, #8]
  40d680:	ldp	x21, x22, [sp, #32]
  40d684:	ldp	x23, x24, [sp, #48]
  40d688:	ldp	x29, x30, [sp], #80
  40d68c:	ret
  40d690:	mov	x19, #0x0                   	// #0
  40d694:	mov	x1, #0x10                  	// #16
  40d698:	b	40d668 <wcrtomb@plt+0xad48>
  40d69c:	bl	41b778 <wcrtomb@plt+0x18e58>
  40d6a0:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40d6a4:	add	x1, x1, #0x490
  40d6a8:	stp	x29, x30, [sp, #-16]!
  40d6ac:	mov	w2, #0x5                   	// #5
  40d6b0:	mov	x0, #0x0                   	// #0
  40d6b4:	mov	x29, sp
  40d6b8:	bl	4027f0 <dcgettext@plt>
  40d6bc:	bl	4041c0 <wcrtomb@plt+0x18a0>
  40d6c0:	stp	x29, x30, [sp, #-48]!
  40d6c4:	mov	x29, sp
  40d6c8:	stp	x19, x20, [sp, #16]
  40d6cc:	mov	x19, x2
  40d6d0:	ldr	x2, [x1]
  40d6d4:	stp	x21, x22, [sp, #32]
  40d6d8:	mov	x21, x0
  40d6dc:	ldr	x3, [x19, #16]
  40d6e0:	cmp	x3, x2
  40d6e4:	b.lt	40d700 <wcrtomb@plt+0xade0>  // b.tstop
  40d6e8:	str	x2, [x19, #8]
  40d6ec:	cbnz	x2, 40d798 <wcrtomb@plt+0xae78>
  40d6f0:	ldp	x19, x20, [sp, #16]
  40d6f4:	ldp	x21, x22, [sp, #32]
  40d6f8:	ldp	x29, x30, [sp], #48
  40d6fc:	ret
  40d700:	ldr	x0, [x19]
  40d704:	mov	x22, x1
  40d708:	bl	4026b0 <free@plt>
  40d70c:	ldr	x2, [x19, #16]
  40d710:	ldr	x3, [x22]
  40d714:	asr	x20, x2, #1
  40d718:	adds	x20, x2, x20
  40d71c:	b.vs	40d7b4 <wcrtomb@plt+0xae94>
  40d720:	asr	x0, x20, #63
  40d724:	sbfx	x1, x20, #59, #1
  40d728:	lsl	x4, x20, #4
  40d72c:	extr	x0, x0, x20, #60
  40d730:	cmp	x1, x0
  40d734:	b.ne	40d7b4 <wcrtomb@plt+0xae94>  // b.any
  40d738:	cmp	x4, #0x7f
  40d73c:	mov	x1, #0x80                  	// #128
  40d740:	mov	x0, #0x8                   	// #8
  40d744:	csel	x1, x4, x1, gt
  40d748:	csel	x20, x20, x0, gt
  40d74c:	str	xzr, [x19, #16]
  40d750:	cmp	x3, x20
  40d754:	b.le	40d77c <wcrtomb@plt+0xae5c>
  40d758:	sub	x20, x3, x2
  40d75c:	adds	x20, x2, x20
  40d760:	b.vs	40d7c0 <wcrtomb@plt+0xaea0>
  40d764:	asr	x0, x20, #63
  40d768:	sbfx	x2, x20, #59, #1
  40d76c:	lsl	x1, x20, #4
  40d770:	extr	x0, x0, x20, #60
  40d774:	cmp	x2, x0
  40d778:	b.ne	40d7c0 <wcrtomb@plt+0xaea0>  // b.any
  40d77c:	mov	x0, #0x0                   	// #0
  40d780:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40d784:	str	x20, [x19, #16]
  40d788:	str	x0, [x19]
  40d78c:	ldr	x2, [x22]
  40d790:	str	x2, [x19, #8]
  40d794:	cbz	x2, 40d6f0 <wcrtomb@plt+0xadd0>
  40d798:	ldr	x0, [x19]
  40d79c:	lsl	x2, x2, #4
  40d7a0:	ldr	x1, [x21]
  40d7a4:	ldp	x19, x20, [sp, #16]
  40d7a8:	ldp	x21, x22, [sp, #32]
  40d7ac:	ldp	x29, x30, [sp], #48
  40d7b0:	b	4022a0 <memcpy@plt>
  40d7b4:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  40d7b8:	mov	x20, #0x7ffffffffffffff     	// #576460752303423487
  40d7bc:	b	40d74c <wcrtomb@plt+0xae2c>
  40d7c0:	bl	41b778 <wcrtomb@plt+0x18e58>
  40d7c4:	nop
  40d7c8:	stp	x29, x30, [sp, #-64]!
  40d7cc:	mov	x29, sp
  40d7d0:	ldr	x1, [x0, #304]
  40d7d4:	str	x23, [sp, #48]
  40d7d8:	ldr	x23, [x0, #352]
  40d7dc:	cmp	x1, x23
  40d7e0:	b.le	40d940 <wcrtomb@plt+0xb020>
  40d7e4:	stp	x19, x20, [sp, #16]
  40d7e8:	mov	x19, x0
  40d7ec:	sub	x2, x1, x23
  40d7f0:	ldr	x0, [x0, #368]
  40d7f4:	stp	x21, x22, [sp, #32]
  40d7f8:	cbz	x0, 40d9e0 <wcrtomb@plt+0xb0c0>
  40d7fc:	add	x3, x23, #0x2
  40d800:	sub	x0, x0, #0x10
  40d804:	asr	x20, x3, #1
  40d808:	adds	x20, x3, x20
  40d80c:	b.vs	40d9fc <wcrtomb@plt+0xb0dc>
  40d810:	asr	x1, x20, #63
  40d814:	sbfx	x4, x20, #60, #1
  40d818:	lsl	x5, x20, #3
  40d81c:	extr	x1, x1, x20, #61
  40d820:	cmp	x4, x1
  40d824:	b.ne	40d9fc <wcrtomb@plt+0xb0dc>  // b.any
  40d828:	cmp	x5, #0x7f
  40d82c:	mov	x1, #0x80                  	// #128
  40d830:	mov	x4, #0x10                  	// #16
  40d834:	csel	x1, x5, x1, gt
  40d838:	csel	x20, x20, x4, gt
  40d83c:	sub	x4, x20, x3
  40d840:	cmp	x2, x4
  40d844:	b.le	40d868 <wcrtomb@plt+0xaf48>
  40d848:	adds	x20, x3, x2
  40d84c:	b.vs	40d9f8 <wcrtomb@plt+0xb0d8>
  40d850:	asr	x2, x20, #63
  40d854:	sbfx	x3, x20, #60, #1
  40d858:	lsl	x1, x20, #3
  40d85c:	extr	x2, x2, x20, #61
  40d860:	cmp	x3, x2
  40d864:	b.ne	40d9f8 <wcrtomb@plt+0xb0d8>  // b.any
  40d868:	sub	x21, x20, #0x2
  40d86c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40d870:	stp	xzr, xzr, [x0], #16
  40d874:	cmp	xzr, x21, lsr #61
  40d878:	str	x21, [x19, #352]
  40d87c:	lsl	x22, x21, #3
  40d880:	str	x0, [x19, #368]
  40d884:	cset	x1, ne  // ne = any
  40d888:	ldr	x0, [x19, #376]
  40d88c:	tbnz	x21, #60, 40d9f8 <wcrtomb@plt+0xb0d8>
  40d890:	cbnz	x1, 40d9f8 <wcrtomb@plt+0xb0d8>
  40d894:	mov	x1, x22
  40d898:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40d89c:	str	x0, [x19, #376]
  40d8a0:	ldr	x0, [x19, #384]
  40d8a4:	tbnz	x21, #63, 40d9f8 <wcrtomb@plt+0xb0d8>
  40d8a8:	mov	x1, x21
  40d8ac:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40d8b0:	mov	x1, x0
  40d8b4:	str	x1, [x19, #384]
  40d8b8:	ldr	x0, [x19, #392]
  40d8bc:	mov	x1, x22
  40d8c0:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40d8c4:	str	x0, [x19, #392]
  40d8c8:	ldrb	w1, [x19, #1048]
  40d8cc:	cbz	w1, 40d94c <wcrtomb@plt+0xb02c>
  40d8d0:	ldr	x0, [x19, #432]
  40d8d4:	cmp	x0, #0x0
  40d8d8:	sub	x1, x0, #0x10
  40d8dc:	csel	x0, x1, x0, ne  // ne = any
  40d8e0:	cmp	xzr, x20, lsr #61
  40d8e4:	cset	x1, ne  // ne = any
  40d8e8:	tbnz	x20, #60, 40d9f8 <wcrtomb@plt+0xb0d8>
  40d8ec:	cbnz	x1, 40d9f8 <wcrtomb@plt+0xb0d8>
  40d8f0:	add	x1, x22, #0x10
  40d8f4:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40d8f8:	cbz	x23, 40d9f0 <wcrtomb@plt+0xb0d0>
  40d8fc:	add	x0, x0, #0x10
  40d900:	str	x0, [x19, #432]
  40d904:	cmp	x21, x23
  40d908:	b.le	40d938 <wcrtomb@plt+0xb018>
  40d90c:	ldrb	w4, [x19, #1048]
  40d910:	lsl	x1, x23, #3
  40d914:	ldp	x3, x2, [x19, #368]
  40d918:	cbz	w4, 40d958 <wcrtomb@plt+0xb038>
  40d91c:	nop
  40d920:	str	xzr, [x3, x1]
  40d924:	str	xzr, [x2, x1]
  40d928:	str	xzr, [x0, x1]
  40d92c:	add	x1, x1, #0x8
  40d930:	cmp	x1, x22
  40d934:	b.ne	40d920 <wcrtomb@plt+0xb000>  // b.any
  40d938:	ldp	x19, x20, [sp, #16]
  40d93c:	ldp	x21, x22, [sp, #32]
  40d940:	ldr	x23, [sp, #48]
  40d944:	ldp	x29, x30, [sp], #64
  40d948:	ret
  40d94c:	cmp	x21, x23
  40d950:	b.le	40d938 <wcrtomb@plt+0xb018>
  40d954:	ldp	x3, x2, [x19, #368]
  40d958:	lsl	x1, x21, #3
  40d95c:	lsl	x0, x23, #3
  40d960:	add	x4, x3, x1
  40d964:	add	x22, x2, x0
  40d968:	add	x1, x2, x1
  40d96c:	cmp	x22, x4
  40d970:	add	x0, x3, x0
  40d974:	ccmp	x1, x0, #0x0, cc  // cc = lo, ul, last
  40d978:	b.hi	40d9b4 <wcrtomb@plt+0xb094>  // b.pmore
  40d97c:	sub	x19, x20, x23
  40d980:	mov	w1, #0x0                   	// #0
  40d984:	sub	x19, x19, #0x2
  40d988:	lsl	x19, x19, #3
  40d98c:	mov	x2, x19
  40d990:	bl	402510 <memset@plt>
  40d994:	mov	x2, x19
  40d998:	mov	x0, x22
  40d99c:	ldp	x19, x20, [sp, #16]
  40d9a0:	mov	w1, #0x0                   	// #0
  40d9a4:	ldp	x21, x22, [sp, #32]
  40d9a8:	ldr	x23, [sp, #48]
  40d9ac:	ldp	x29, x30, [sp], #64
  40d9b0:	b	402510 <memset@plt>
  40d9b4:	str	xzr, [x3, x23, lsl #3]
  40d9b8:	str	xzr, [x2, x23, lsl #3]
  40d9bc:	add	x23, x23, #0x1
  40d9c0:	cmp	x21, x23
  40d9c4:	b.eq	40d938 <wcrtomb@plt+0xb018>  // b.none
  40d9c8:	str	xzr, [x3, x23, lsl #3]
  40d9cc:	str	xzr, [x2, x23, lsl #3]
  40d9d0:	add	x23, x23, #0x1
  40d9d4:	cmp	x21, x23
  40d9d8:	b.ne	40d9b4 <wcrtomb@plt+0xb094>  // b.any
  40d9dc:	b	40d938 <wcrtomb@plt+0xb018>
  40d9e0:	mov	x1, #0x80                  	// #128
  40d9e4:	mov	x20, #0x10                  	// #16
  40d9e8:	mov	x3, #0x0                   	// #0
  40d9ec:	b	40d83c <wcrtomb@plt+0xaf1c>
  40d9f0:	stp	xzr, xzr, [x0]
  40d9f4:	b	40d8fc <wcrtomb@plt+0xafdc>
  40d9f8:	bl	41b778 <wcrtomb@plt+0x18e58>
  40d9fc:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  40da00:	mov	x20, #0xfffffffffffffff     	// #1152921504606846975
  40da04:	b	40d83c <wcrtomb@plt+0xaf1c>
  40da08:	stp	x29, x30, [sp, #-80]!
  40da0c:	mov	x29, sp
  40da10:	stp	x19, x20, [sp, #16]
  40da14:	mov	x20, x0
  40da18:	stp	x21, x22, [sp, #32]
  40da1c:	ldp	x0, x21, [x2]
  40da20:	stp	x23, x24, [sp, #48]
  40da24:	mov	x23, x1
  40da28:	str	x25, [sp, #64]
  40da2c:	mov	x25, x2
  40da30:	cmp	x21, #0x0
  40da34:	b.le	40dadc <wcrtomb@plt+0xb1bc>
  40da38:	mov	x5, x21
  40da3c:	mov	x19, #0x0                   	// #0
  40da40:	b	40da50 <wcrtomb@plt+0xb130>
  40da44:	add	x19, x3, #0x1
  40da48:	cmp	x5, x19
  40da4c:	b.le	40da7c <wcrtomb@plt+0xb15c>
  40da50:	add	x3, x19, x5
  40da54:	asr	x3, x3, #1
  40da58:	lsl	x4, x3, #4
  40da5c:	add	x6, x0, x4
  40da60:	ldr	x4, [x0, x4]
  40da64:	cmp	x4, x20
  40da68:	b.lt	40da44 <wcrtomb@plt+0xb124>  // b.tstop
  40da6c:	b.eq	40db68 <wcrtomb@plt+0xb248>  // b.none
  40da70:	mov	x5, x3
  40da74:	cmp	x5, x19
  40da78:	b.gt	40da50 <wcrtomb@plt+0xb130>
  40da7c:	ldr	x3, [x25, #16]
  40da80:	mov	x24, x21
  40da84:	cmp	x21, x3
  40da88:	b.ge	40daf0 <wcrtomb@plt+0xb1d0>  // b.tcont
  40da8c:	str	x0, [x25]
  40da90:	lsl	x3, x19, #4
  40da94:	cmp	x21, x19
  40da98:	add	x22, x0, x3
  40da9c:	b.le	40dab8 <wcrtomb@plt+0xb198>
  40daa0:	add	x3, x3, #0x10
  40daa4:	sub	x2, x21, x19
  40daa8:	add	x0, x0, x3
  40daac:	mov	x1, x22
  40dab0:	lsl	x2, x2, #4
  40dab4:	bl	4022c0 <memmove@plt>
  40dab8:	stp	x20, x23, [x22]
  40dabc:	add	x24, x24, #0x1
  40dac0:	str	x24, [x25, #8]
  40dac4:	ldp	x19, x20, [sp, #16]
  40dac8:	ldp	x21, x22, [sp, #32]
  40dacc:	ldp	x23, x24, [sp, #48]
  40dad0:	ldr	x25, [sp, #64]
  40dad4:	ldp	x29, x30, [sp], #80
  40dad8:	ret
  40dadc:	ldr	x3, [x2, #16]
  40dae0:	mov	x19, #0x0                   	// #0
  40dae4:	cmp	x21, x3
  40dae8:	b.lt	40db94 <wcrtomb@plt+0xb274>  // b.tstop
  40daec:	nop
  40daf0:	asr	x22, x3, #1
  40daf4:	adds	x22, x3, x22
  40daf8:	b.vs	40dba4 <wcrtomb@plt+0xb284>
  40dafc:	asr	x1, x22, #63
  40db00:	sbfx	x2, x22, #59, #1
  40db04:	lsl	x4, x22, #4
  40db08:	extr	x1, x1, x22, #60
  40db0c:	cmp	x2, x1
  40db10:	b.ne	40dba4 <wcrtomb@plt+0xb284>  // b.any
  40db14:	cmp	x4, #0x7f
  40db18:	mov	x1, #0x80                  	// #128
  40db1c:	mov	x2, #0x8                   	// #8
  40db20:	csel	x1, x4, x1, gt
  40db24:	csel	x22, x22, x2, gt
  40db28:	cbz	x0, 40db8c <wcrtomb@plt+0xb26c>
  40db2c:	sub	x2, x22, x3
  40db30:	cmp	x2, #0x0
  40db34:	b.gt	40db58 <wcrtomb@plt+0xb238>
  40db38:	adds	x22, x3, #0x1
  40db3c:	b.vs	40dba0 <wcrtomb@plt+0xb280>
  40db40:	asr	x2, x22, #63
  40db44:	sbfx	x3, x22, #59, #1
  40db48:	lsl	x1, x22, #4
  40db4c:	extr	x2, x2, x22, #60
  40db50:	cmp	x3, x2
  40db54:	b.ne	40dba0 <wcrtomb@plt+0xb280>  // b.any
  40db58:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40db5c:	str	x22, [x25, #16]
  40db60:	ldr	x24, [x25, #8]
  40db64:	b	40da8c <wcrtomb@plt+0xb16c>
  40db68:	ldr	w0, [x6, #8]
  40db6c:	ldp	x19, x20, [sp, #16]
  40db70:	orr	w23, w0, w23
  40db74:	str	w23, [x6, #8]
  40db78:	ldp	x21, x22, [sp, #32]
  40db7c:	ldp	x23, x24, [sp, #48]
  40db80:	ldr	x25, [sp, #64]
  40db84:	ldp	x29, x30, [sp], #80
  40db88:	ret
  40db8c:	str	xzr, [x25, #16]
  40db90:	b	40db2c <wcrtomb@plt+0xb20c>
  40db94:	mov	x24, x21
  40db98:	mov	x22, x0
  40db9c:	b	40dab8 <wcrtomb@plt+0xb198>
  40dba0:	bl	41b778 <wcrtomb@plt+0x18e58>
  40dba4:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  40dba8:	mov	x22, #0x7ffffffffffffff     	// #576460752303423487
  40dbac:	b	40db28 <wcrtomb@plt+0xb208>
  40dbb0:	stp	x29, x30, [sp, #-80]!
  40dbb4:	mov	x29, sp
  40dbb8:	stp	x19, x20, [sp, #16]
  40dbbc:	mov	x20, x3
  40dbc0:	mov	x19, x5
  40dbc4:	stp	x21, x22, [sp, #32]
  40dbc8:	mov	x21, x1
  40dbcc:	mov	w22, w4
  40dbd0:	ldr	x3, [x1]
  40dbd4:	stp	x23, x24, [sp, #48]
  40dbd8:	mov	x24, x0
  40dbdc:	ldr	x1, [x5, #16]
  40dbe0:	mov	x23, x2
  40dbe4:	ldr	x0, [x20]
  40dbe8:	sub	x1, x1, x3
  40dbec:	cmp	x1, x0
  40dbf0:	b.lt	40dcf0 <wcrtomb@plt+0xb3d0>  // b.tstop
  40dbf4:	str	xzr, [x19, #8]
  40dbf8:	mov	x5, #0x0                   	// #0
  40dbfc:	mov	x7, #0x0                   	// #0
  40dc00:	ldr	x10, [x20]
  40dc04:	ldr	x9, [x21]
  40dc08:	cmp	x7, x9
  40dc0c:	b.lt	40dc60 <wcrtomb@plt+0xb340>  // b.tstop
  40dc10:	cmp	x5, x10
  40dc14:	b.ge	40dcdc <wcrtomb@plt+0xb3bc>  // b.tcont
  40dc18:	ldr	x6, [x23]
  40dc1c:	add	x6, x6, x5, lsl #4
  40dc20:	ldr	w8, [x6, #8]
  40dc24:	ands	w8, w22, w8
  40dc28:	b.eq	40dc54 <wcrtomb@plt+0xb334>  // b.none
  40dc2c:	ldp	x1, x0, [x19]
  40dc30:	ldr	x4, [x6]
  40dc34:	add	x3, x0, #0x1
  40dc38:	lsl	x0, x0, #4
  40dc3c:	add	x2, x1, x0
  40dc40:	str	x4, [x1, x0]
  40dc44:	str	x3, [x19, #8]
  40dc48:	ldr	x10, [x20]
  40dc4c:	ldr	x9, [x21]
  40dc50:	str	w8, [x2, #8]
  40dc54:	add	x5, x5, #0x1
  40dc58:	cmp	x7, x9
  40dc5c:	b.ge	40dc10 <wcrtomb@plt+0xb2f0>  // b.tcont
  40dc60:	ldr	x11, [x24]
  40dc64:	lsl	x6, x7, #4
  40dc68:	cmp	x5, x10
  40dc6c:	mov	w12, #0x0                   	// #0
  40dc70:	add	x0, x11, x6
  40dc74:	ldr	x11, [x11, x6]
  40dc78:	b.lt	40dcb0 <wcrtomb@plt+0xb390>  // b.tstop
  40dc7c:	ldp	x9, x6, [x19]
  40dc80:	add	x7, x7, #0x1
  40dc84:	ldr	w8, [x0, #8]
  40dc88:	orr	w8, w8, w12
  40dc8c:	add	x1, x6, #0x1
  40dc90:	lsl	x6, x6, #4
  40dc94:	add	x0, x9, x6
  40dc98:	str	x11, [x9, x6]
  40dc9c:	str	x1, [x19, #8]
  40dca0:	ldr	x10, [x20]
  40dca4:	ldr	x9, [x21]
  40dca8:	str	w8, [x0, #8]
  40dcac:	b	40dc08 <wcrtomb@plt+0xb2e8>
  40dcb0:	ldr	x2, [x23]
  40dcb4:	lsl	x1, x5, #4
  40dcb8:	add	x6, x2, x1
  40dcbc:	ldr	x1, [x2, x1]
  40dcc0:	cmp	x1, x11
  40dcc4:	b.lt	40dc20 <wcrtomb@plt+0xb300>  // b.tstop
  40dcc8:	b.ne	40dc7c <wcrtomb@plt+0xb35c>  // b.any
  40dccc:	ldr	w8, [x6, #8]
  40dcd0:	add	x5, x5, #0x1
  40dcd4:	and	w12, w22, w8
  40dcd8:	b	40dc7c <wcrtomb@plt+0xb35c>
  40dcdc:	ldp	x19, x20, [sp, #16]
  40dce0:	ldp	x21, x22, [sp, #32]
  40dce4:	ldp	x23, x24, [sp, #48]
  40dce8:	ldp	x29, x30, [sp], #80
  40dcec:	ret
  40dcf0:	ldr	x0, [x5]
  40dcf4:	str	x25, [sp, #64]
  40dcf8:	bl	4026b0 <free@plt>
  40dcfc:	ldr	x0, [x21]
  40dd00:	str	x0, [x19, #16]
  40dd04:	ldr	x2, [x20]
  40dd08:	asr	x25, x0, #1
  40dd0c:	adds	x25, x0, x25
  40dd10:	b.vs	40dd88 <wcrtomb@plt+0xb468>
  40dd14:	asr	x1, x25, #63
  40dd18:	sbfx	x3, x25, #59, #1
  40dd1c:	lsl	x4, x25, #4
  40dd20:	extr	x1, x1, x25, #60
  40dd24:	cmp	x3, x1
  40dd28:	b.ne	40dd88 <wcrtomb@plt+0xb468>  // b.any
  40dd2c:	cmp	x4, #0x7f
  40dd30:	mov	x1, #0x80                  	// #128
  40dd34:	mov	x3, #0x8                   	// #8
  40dd38:	csel	x1, x4, x1, gt
  40dd3c:	csel	x25, x25, x3, gt
  40dd40:	str	xzr, [x19, #16]
  40dd44:	sub	x3, x25, x0
  40dd48:	cmp	x2, x3
  40dd4c:	b.le	40dd70 <wcrtomb@plt+0xb450>
  40dd50:	adds	x25, x0, x2
  40dd54:	b.vs	40dd94 <wcrtomb@plt+0xb474>
  40dd58:	asr	x0, x25, #63
  40dd5c:	sbfx	x2, x25, #59, #1
  40dd60:	lsl	x1, x25, #4
  40dd64:	extr	x0, x0, x25, #60
  40dd68:	cmp	x2, x0
  40dd6c:	b.ne	40dd94 <wcrtomb@plt+0xb474>  // b.any
  40dd70:	mov	x0, #0x0                   	// #0
  40dd74:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40dd78:	str	x0, [x19]
  40dd7c:	str	x25, [x19, #16]
  40dd80:	ldr	x25, [sp, #64]
  40dd84:	b	40dbf4 <wcrtomb@plt+0xb2d4>
  40dd88:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  40dd8c:	mov	x25, #0x7ffffffffffffff     	// #576460752303423487
  40dd90:	b	40dd40 <wcrtomb@plt+0xb420>
  40dd94:	bl	41b778 <wcrtomb@plt+0x18e58>
  40dd98:	stp	x29, x30, [sp, #-48]!
  40dd9c:	mov	x29, sp
  40dda0:	ldr	x7, [x0, #8]
  40dda4:	stp	x19, x20, [sp, #16]
  40dda8:	mov	x20, x1
  40ddac:	stp	x21, x22, [sp, #32]
  40ddb0:	cmp	x7, #0x0
  40ddb4:	mov	x21, x0
  40ddb8:	ldr	x0, [x0]
  40ddbc:	b.le	40de20 <wcrtomb@plt+0xb500>
  40ddc0:	mov	x4, x0
  40ddc4:	mov	x19, #0x0                   	// #0
  40ddc8:	ldp	x11, x10, [x1]
  40ddcc:	ldp	x9, x8, [x1, #16]
  40ddd0:	b	40dde4 <wcrtomb@plt+0xb4c4>
  40ddd4:	add	x19, x19, #0x1
  40ddd8:	add	x4, x4, #0x20
  40dddc:	cmp	x19, x7
  40dde0:	b.eq	40de28 <wcrtomb@plt+0xb508>  // b.none
  40dde4:	ldp	x2, x6, [x4]
  40dde8:	ldp	x3, x5, [x4, #16]
  40ddec:	eor	x2, x11, x2
  40ddf0:	eor	x6, x10, x6
  40ddf4:	orr	x2, x2, x6
  40ddf8:	eor	x3, x9, x3
  40ddfc:	eor	x5, x8, x5
  40de00:	orr	x3, x3, x5
  40de04:	orr	x2, x2, x3
  40de08:	cbnz	x2, 40ddd4 <wcrtomb@plt+0xb4b4>
  40de0c:	mov	x0, x19
  40de10:	ldp	x19, x20, [sp, #16]
  40de14:	ldp	x21, x22, [sp, #32]
  40de18:	ldp	x29, x30, [sp], #48
  40de1c:	ret
  40de20:	mov	x19, #0x0                   	// #0
  40de24:	nop
  40de28:	ldr	x2, [x21, #16]
  40de2c:	cmp	x2, x7
  40de30:	b.le	40de5c <wcrtomb@plt+0xb53c>
  40de34:	ld1	{v0.16b, v1.16b}, [x20]
  40de38:	add	x1, x0, x19, lsl #5
  40de3c:	add	x7, x7, #0x1
  40de40:	stp	x0, x7, [x21]
  40de44:	st1	{v0.16b, v1.16b}, [x1]
  40de48:	mov	x0, x19
  40de4c:	ldp	x19, x20, [sp, #16]
  40de50:	ldp	x21, x22, [sp, #32]
  40de54:	ldp	x29, x30, [sp], #48
  40de58:	ret
  40de5c:	asr	x1, x2, #1
  40de60:	adds	x1, x2, x1
  40de64:	b.vs	40df1c <wcrtomb@plt+0xb5fc>
  40de68:	mov	x22, #0xfffffffffffffeeb    	// #-277
  40de6c:	movk	x22, #0x7fff, lsl #48
  40de70:	cmp	x1, x22
  40de74:	csel	x22, x1, x22, le
  40de78:	asr	x3, x22, #63
  40de7c:	sbfx	x4, x22, #58, #1
  40de80:	lsl	x1, x22, #5
  40de84:	extr	x3, x3, x22, #59
  40de88:	cmp	x4, x3
  40de8c:	b.ne	40df1c <wcrtomb@plt+0xb5fc>  // b.any
  40de90:	cmp	x1, #0x7f
  40de94:	mov	x3, #0x4                   	// #4
  40de98:	csel	x22, x22, x3, gt
  40de9c:	mov	x3, #0x80                  	// #128
  40dea0:	csel	x1, x1, x3, gt
  40dea4:	cbz	x0, 40df10 <wcrtomb@plt+0xb5f0>
  40dea8:	sub	x3, x22, x2
  40deac:	cmp	x3, #0x0
  40deb0:	b.gt	40deec <wcrtomb@plt+0xb5cc>
  40deb4:	adds	x22, x2, #0x1
  40deb8:	mov	x1, #0xfffffffffffffeeb    	// #-277
  40debc:	cset	x2, vs
  40dec0:	movk	x1, #0x7fff, lsl #48
  40dec4:	cmp	x22, x1
  40dec8:	cset	w1, gt
  40decc:	orr	w1, w1, w2
  40ded0:	cbnz	w1, 40df18 <wcrtomb@plt+0xb5f8>
  40ded4:	asr	x2, x22, #63
  40ded8:	sbfx	x3, x22, #58, #1
  40dedc:	lsl	x1, x22, #5
  40dee0:	extr	x2, x2, x22, #59
  40dee4:	cmp	x3, x2
  40dee8:	b.ne	40df18 <wcrtomb@plt+0xb5f8>  // b.any
  40deec:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40def0:	str	x22, [x21, #16]
  40def4:	ldr	x7, [x21, #8]
  40def8:	add	x1, x0, x19, lsl #5
  40defc:	ld1	{v0.16b, v1.16b}, [x20]
  40df00:	add	x7, x7, #0x1
  40df04:	stp	x0, x7, [x21]
  40df08:	st1	{v0.16b, v1.16b}, [x1]
  40df0c:	b	40de48 <wcrtomb@plt+0xb528>
  40df10:	str	xzr, [x21, #16]
  40df14:	b	40dea8 <wcrtomb@plt+0xb588>
  40df18:	bl	41b778 <wcrtomb@plt+0x18e58>
  40df1c:	mov	x22, #0x3ffffffffffffff     	// #288230376151711743
  40df20:	mov	x1, #0x7fffffffffffffe0    	// #9223372036854775776
  40df24:	cbnz	x0, 40dea8 <wcrtomb@plt+0xb588>
  40df28:	b	40df10 <wcrtomb@plt+0xb5f0>
  40df2c:	nop
  40df30:	stp	x29, x30, [sp, #-96]!
  40df34:	mov	x29, sp
  40df38:	stp	x19, x20, [sp, #16]
  40df3c:	ldr	x20, [x1, #8]
  40df40:	stp	x21, x22, [sp, #32]
  40df44:	stp	x23, x24, [sp, #48]
  40df48:	cmp	x20, #0x0
  40df4c:	mov	x23, x0
  40df50:	stp	x25, x26, [sp, #64]
  40df54:	mov	w24, w2
  40df58:	mov	x25, x1
  40df5c:	stp	x27, x28, [sp, #80]
  40df60:	ldr	x8, [x0, #296]
  40df64:	ldr	x1, [x0, #304]
  40df68:	b.le	40e2c0 <wcrtomb@plt+0xb9a0>
  40df6c:	sub	x5, x20, #0x1
  40df70:	cmp	x5, #0x3
  40df74:	ldr	x2, [x25]
  40df78:	b.ls	40e2e8 <wcrtomb@plt+0xb9c8>  // b.plast
  40df7c:	lsr	x6, x5, #2
  40df80:	mov	x3, x2
  40df84:	movi	v16.4s, #0x0
  40df88:	add	x6, x2, x6, lsl #6
  40df8c:	nop
  40df90:	mov	x4, x3
  40df94:	add	x0, x3, #0x8
  40df98:	add	x3, x3, #0x40
  40df9c:	cmp	x3, x6
  40dfa0:	ld2	{v2.2d, v3.2d}, [x4], #32
  40dfa4:	ld4	{v4.4s-v7.4s}, [x0]
  40dfa8:	ld2	{v0.2d, v1.2d}, [x4]
  40dfac:	uaddw	v2.2d, v2.2d, v4.2s
  40dfb0:	uaddw2	v0.2d, v0.2d, v4.4s
  40dfb4:	eor	v0.16b, v0.16b, v2.16b
  40dfb8:	eor	v16.16b, v16.16b, v0.16b
  40dfbc:	b.ne	40df90 <wcrtomb@plt+0xb670>  // b.any
  40dfc0:	movi	v0.4s, #0x0
  40dfc4:	and	x0, x5, #0xfffffffffffffffc
  40dfc8:	ext	v0.16b, v16.16b, v0.16b, #8
  40dfcc:	eor	v16.16b, v0.16b, v16.16b
  40dfd0:	mov	x4, v16.d[0]
  40dfd4:	lsl	x3, x0, #4
  40dfd8:	add	x5, x0, #0x1
  40dfdc:	add	x6, x2, x3
  40dfe0:	cmp	x20, x5
  40dfe4:	ldr	x5, [x2, x3]
  40dfe8:	ldr	w21, [x6, #8]
  40dfec:	add	x21, x21, x5
  40dff0:	eor	x21, x21, x4
  40dff4:	b.le	40e058 <wcrtomb@plt+0xb738>
  40dff8:	add	x4, x3, #0x10
  40dffc:	add	x5, x0, #0x2
  40e000:	add	x6, x2, x4
  40e004:	cmp	x20, x5
  40e008:	ldr	x5, [x2, x4]
  40e00c:	ldr	w4, [x6, #8]
  40e010:	add	x4, x4, x5
  40e014:	eor	x21, x21, x4
  40e018:	b.le	40e058 <wcrtomb@plt+0xb738>
  40e01c:	add	x4, x3, #0x20
  40e020:	add	x0, x0, #0x3
  40e024:	add	x5, x2, x4
  40e028:	cmp	x0, x20
  40e02c:	ldr	x4, [x2, x4]
  40e030:	ldr	w0, [x5, #8]
  40e034:	add	x0, x0, x4
  40e038:	eor	x21, x21, x0
  40e03c:	b.ge	40e058 <wcrtomb@plt+0xb738>  // b.tcont
  40e040:	add	x3, x3, #0x30
  40e044:	add	x0, x2, x3
  40e048:	ldr	x3, [x2, x3]
  40e04c:	ldr	w0, [x0, #8]
  40e050:	add	x0, x0, x3
  40e054:	eor	x21, x21, x0
  40e058:	cmp	x1, #0x0
  40e05c:	mov	x19, #0x0                   	// #0
  40e060:	b.le	40e12c <wcrtomb@plt+0xb80c>
  40e064:	mov	x4, x8
  40e068:	mov	x19, #0x0                   	// #0
  40e06c:	b	40e080 <wcrtomb@plt+0xb760>
  40e070:	add	x19, x19, #0x1
  40e074:	add	x4, x4, #0x50
  40e078:	cmp	x1, x19
  40e07c:	b.le	40e120 <wcrtomb@plt+0xb800>
  40e080:	ldr	x3, [x4]
  40e084:	cmp	x3, x21
  40e088:	b.ne	40e070 <wcrtomb@plt+0xb750>  // b.any
  40e08c:	ldr	x2, [x4, #16]
  40e090:	cmp	x2, x20
  40e094:	b.ne	40e070 <wcrtomb@plt+0xb750>  // b.any
  40e098:	ldrb	w0, [x4, #32]
  40e09c:	cmp	w0, w24
  40e0a0:	b.ne	40e070 <wcrtomb@plt+0xb750>  // b.any
  40e0a4:	cmp	x20, #0x0
  40e0a8:	b.le	40e2f4 <wcrtomb@plt+0xb9d4>
  40e0ac:	ldr	x2, [x25]
  40e0b0:	mov	x3, #0x0                   	// #0
  40e0b4:	ldr	x0, [x4, #8]
  40e0b8:	add	x10, x2, #0x8
  40e0bc:	mov	x5, #0x0                   	// #0
  40e0c0:	add	x9, x0, #0x8
  40e0c4:	b	40e0e8 <wcrtomb@plt+0xb7c8>
  40e0c8:	ldr	x7, [x2, x3]
  40e0cc:	ldr	x6, [x0, x3]
  40e0d0:	cmp	x7, x6
  40e0d4:	b.ne	40e0f8 <wcrtomb@plt+0xb7d8>  // b.any
  40e0d8:	add	x5, x5, #0x1
  40e0dc:	add	x3, x3, #0x10
  40e0e0:	cmp	x20, x5
  40e0e4:	b.eq	40e100 <wcrtomb@plt+0xb7e0>  // b.none
  40e0e8:	ldr	w7, [x10, x3]
  40e0ec:	ldr	w6, [x9, x3]
  40e0f0:	cmp	w7, w6
  40e0f4:	b.eq	40e0c8 <wcrtomb@plt+0xb7a8>  // b.none
  40e0f8:	cmp	x20, x5
  40e0fc:	b.ne	40e070 <wcrtomb@plt+0xb750>  // b.any
  40e100:	mov	x0, x19
  40e104:	ldp	x19, x20, [sp, #16]
  40e108:	ldp	x21, x22, [sp, #32]
  40e10c:	ldp	x23, x24, [sp, #48]
  40e110:	ldp	x25, x26, [sp, #64]
  40e114:	ldp	x27, x28, [sp, #80]
  40e118:	ldp	x29, x30, [sp], #96
  40e11c:	ret
  40e120:	cmp	x20, #0x0
  40e124:	b.le	40e2dc <wcrtomb@plt+0xb9bc>
  40e128:	ldr	x2, [x25]
  40e12c:	mov	x3, #0x0                   	// #0
  40e130:	mov	x27, #0x0                   	// #0
  40e134:	mov	w22, #0x0                   	// #0
  40e138:	mov	w9, #0x1ff                 	// #511
  40e13c:	ldr	x0, [x23, #336]
  40e140:	b	40e178 <wcrtomb@plt+0xb858>
  40e144:	asr	w5, w4, #6
  40e148:	orr	w7, w22, w4
  40e14c:	orr	w5, w5, w4, asr #3
  40e150:	orr	w4, w5, w4
  40e154:	and	w4, w4, w24
  40e158:	tst	x4, #0x7
  40e15c:	csel	w22, w7, w22, ne  // ne = any
  40e160:	cbnz	x27, 40e16c <wcrtomb@plt+0xb84c>
  40e164:	ldr	x4, [x23, #144]
  40e168:	ldr	x27, [x4, x6, lsl #3]
  40e16c:	add	x3, x3, #0x1
  40e170:	cmp	x20, x3
  40e174:	b.le	40e1a4 <wcrtomb@plt+0xb884>
  40e178:	lsl	x4, x3, #4
  40e17c:	ldr	x6, [x2, x4]
  40e180:	ldr	w4, [x0, x6, lsl #2]
  40e184:	cbnz	w4, 40e144 <wcrtomb@plt+0xb824>
  40e188:	ldr	x4, [x23, #144]
  40e18c:	add	x3, x3, #0x1
  40e190:	ldr	x4, [x4, x6, lsl #3]
  40e194:	cmp	x4, #0x112
  40e198:	csel	w22, w22, w9, ne  // ne = any
  40e19c:	cmp	x20, x3
  40e1a0:	b.gt	40e178 <wcrtomb@plt+0xb858>
  40e1a4:	ldr	x2, [x23, #312]
  40e1a8:	cmp	x1, x2
  40e1ac:	b.ge	40e248 <wcrtomb@plt+0xb928>  // b.tcont
  40e1b0:	add	x0, x19, x19, lsl #2
  40e1b4:	cmp	xzr, x20, lsr #60
  40e1b8:	str	x8, [x23, #296]
  40e1bc:	cset	x1, ne  // ne = any
  40e1c0:	lsl	x26, x0, #4
  40e1c4:	lsl	x0, x20, #4
  40e1c8:	add	x28, x8, x26
  40e1cc:	str	x21, [x8, x26]
  40e1d0:	tbnz	x20, #59, 40e2fc <wcrtomb@plt+0xb9dc>
  40e1d4:	cbnz	x1, 40e2fc <wcrtomb@plt+0xb9dc>
  40e1d8:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40e1dc:	ldr	x2, [x23, #296]
  40e1e0:	stp	x0, xzr, [x28, #8]
  40e1e4:	add	x1, x25, #0x8
  40e1e8:	str	x20, [x28, #24]
  40e1ec:	add	x2, x2, x26
  40e1f0:	mov	x0, x25
  40e1f4:	add	x2, x2, #0x8
  40e1f8:	bl	40d6c0 <wcrtomb@plt+0xada0>
  40e1fc:	ldr	x0, [x23, #296]
  40e200:	mov	x2, #0xffffffffffffffff    	// #-1
  40e204:	add	x0, x0, x26
  40e208:	strb	w24, [x0, #32]
  40e20c:	strh	w22, [x0, #34]
  40e210:	ldr	x1, [x23, #304]
  40e214:	stp	x27, xzr, [x0, #40]
  40e218:	str	xzr, [x0, #56]
  40e21c:	add	x1, x1, #0x1
  40e220:	str	x2, [x0, #72]
  40e224:	mov	x0, x19
  40e228:	str	x1, [x23, #304]
  40e22c:	ldp	x19, x20, [sp, #16]
  40e230:	ldp	x21, x22, [sp, #32]
  40e234:	ldp	x23, x24, [sp, #48]
  40e238:	ldp	x25, x26, [sp, #64]
  40e23c:	ldp	x27, x28, [sp, #80]
  40e240:	ldp	x29, x30, [sp], #96
  40e244:	ret
  40e248:	asr	x0, x2, #1
  40e24c:	adds	x0, x2, x0
  40e250:	b.vs	40e300 <wcrtomb@plt+0xb9e0>
  40e254:	mov	x1, #0x50                  	// #80
  40e258:	mul	x3, x0, x1
  40e25c:	smulh	x4, x0, x1
  40e260:	cmp	x4, x3, asr #63
  40e264:	b.ne	40e300 <wcrtomb@plt+0xb9e0>  // b.any
  40e268:	cmp	x3, #0x7f
  40e26c:	csel	x1, x3, x1, gt
  40e270:	csinc	x20, x0, xzr, gt
  40e274:	cbz	x8, 40e2b8 <wcrtomb@plt+0xb998>
  40e278:	sub	x0, x20, x2
  40e27c:	cmp	x0, #0x0
  40e280:	b.gt	40e2a0 <wcrtomb@plt+0xb980>
  40e284:	adds	x20, x2, #0x1
  40e288:	b.vs	40e2fc <wcrtomb@plt+0xb9dc>
  40e28c:	mov	x0, #0x50                  	// #80
  40e290:	mul	x1, x20, x0
  40e294:	smulh	x0, x20, x0
  40e298:	cmp	x0, x1, asr #63
  40e29c:	b.ne	40e2fc <wcrtomb@plt+0xb9dc>  // b.any
  40e2a0:	mov	x0, x8
  40e2a4:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40e2a8:	str	x20, [x23, #312]
  40e2ac:	mov	x8, x0
  40e2b0:	ldr	x20, [x25, #8]
  40e2b4:	b	40e1b0 <wcrtomb@plt+0xb890>
  40e2b8:	str	xzr, [x23, #312]
  40e2bc:	b	40e278 <wcrtomb@plt+0xb958>
  40e2c0:	cmp	x1, #0x0
  40e2c4:	mov	x19, #0x0                   	// #0
  40e2c8:	mov	x27, #0x0                   	// #0
  40e2cc:	mov	w22, #0x0                   	// #0
  40e2d0:	mov	x21, #0x0                   	// #0
  40e2d4:	b.gt	40e064 <wcrtomb@plt+0xb744>
  40e2d8:	b	40e1a4 <wcrtomb@plt+0xb884>
  40e2dc:	mov	x27, #0x0                   	// #0
  40e2e0:	mov	w22, #0x0                   	// #0
  40e2e4:	b	40e1a4 <wcrtomb@plt+0xb884>
  40e2e8:	mov	x0, #0x0                   	// #0
  40e2ec:	mov	x4, #0x0                   	// #0
  40e2f0:	b	40dfd4 <wcrtomb@plt+0xb6b4>
  40e2f4:	mov	x5, #0x0                   	// #0
  40e2f8:	b	40e0f8 <wcrtomb@plt+0xb7d8>
  40e2fc:	bl	41b778 <wcrtomb@plt+0x18e58>
  40e300:	mov	x1, #0xffffffffffffffd0    	// #-48
  40e304:	mov	x20, #0x9999999999999999    	// #-7378697629483820647
  40e308:	movk	x1, #0x7fff, lsl #48
  40e30c:	movk	x20, #0x199, lsl #48
  40e310:	b	40e274 <wcrtomb@plt+0xb954>
  40e314:	nop
  40e318:	stp	x29, x30, [sp, #-240]!
  40e31c:	mov	x29, sp
  40e320:	stp	x21, x22, [sp, #32]
  40e324:	add	x22, x0, x0, lsl #2
  40e328:	and	x21, x2, #0xff
  40e32c:	ldr	x2, [x1, #296]
  40e330:	lsl	x22, x22, #4
  40e334:	stp	x19, x20, [sp, #16]
  40e338:	mov	x20, x0
  40e33c:	add	x2, x2, x22
  40e340:	stp	x25, x26, [sp, #64]
  40e344:	mov	x25, x1
  40e348:	ldp	x0, x1, [x1, #368]
  40e34c:	stp	x23, x24, [sp, #48]
  40e350:	ldrh	w2, [x2, #34]
  40e354:	stp	x27, x28, [sp, #80]
  40e358:	cmp	w2, #0x0
  40e35c:	csel	x1, x1, x0, ne  // ne = any
  40e360:	add	x23, x1, x20, lsl #3
  40e364:	ldr	x19, [x1, x20, lsl #3]
  40e368:	cbz	x19, 40eb70 <wcrtomb@plt+0xc250>
  40e36c:	ldr	x0, [x25, #384]
  40e370:	strb	wzr, [x0, x20]
  40e374:	ldr	x0, [x25, #296]
  40e378:	add	x0, x0, x22
  40e37c:	ldrb	w1, [x0, #32]
  40e380:	ldrh	w0, [x0, #34]
  40e384:	and	w2, w1, w0, lsr #6
  40e388:	tst	x2, #0x7
  40e38c:	b.eq	40e3b0 <wcrtomb@plt+0xba90>  // b.none
  40e390:	ldr	x1, [x25, #384]
  40e394:	ldrb	w0, [x1, x20]
  40e398:	orr	w0, w0, #0x4
  40e39c:	strb	w0, [x1, x20]
  40e3a0:	ldr	x0, [x25, #296]
  40e3a4:	add	x0, x0, x22
  40e3a8:	ldrb	w1, [x0, #32]
  40e3ac:	ldrh	w0, [x0, #34]
  40e3b0:	and	w2, w1, w0, lsr #3
  40e3b4:	tst	x2, #0x7
  40e3b8:	b.eq	40e3dc <wcrtomb@plt+0xbabc>  // b.none
  40e3bc:	ldr	x1, [x25, #384]
  40e3c0:	ldrb	w0, [x1, x20]
  40e3c4:	orr	w0, w0, #0x2
  40e3c8:	strb	w0, [x1, x20]
  40e3cc:	ldr	x0, [x25, #296]
  40e3d0:	add	x0, x0, x22
  40e3d4:	ldrb	w1, [x0, #32]
  40e3d8:	ldrh	w0, [x0, #34]
  40e3dc:	and	w0, w0, #0x7
  40e3e0:	tst	w0, w1
  40e3e4:	b.eq	40e3f8 <wcrtomb@plt+0xbad8>  // b.none
  40e3e8:	ldr	x1, [x25, #384]
  40e3ec:	ldrb	w0, [x1, x20]
  40e3f0:	orr	w0, w0, #0x1
  40e3f4:	strb	w0, [x1, x20]
  40e3f8:	ldr	x23, [x25, #176]
  40e3fc:	cmp	xzr, x23, lsr #60
  40e400:	lsl	x0, x23, #4
  40e404:	cset	x1, ne  // ne = any
  40e408:	tbnz	x23, #59, 40ec64 <wcrtomb@plt+0xc344>
  40e40c:	cbnz	x1, 40ec64 <wcrtomb@plt+0xc344>
  40e410:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40e414:	stp	x0, xzr, [sp, #128]
  40e418:	ldr	x1, [x25, #296]
  40e41c:	str	x23, [sp, #144]
  40e420:	add	x1, x1, x22
  40e424:	ldr	x0, [x1, #16]
  40e428:	cmp	x0, #0x0
  40e42c:	b.le	40e4b0 <wcrtomb@plt+0xbb90>
  40e430:	ldr	x3, [x1, #8]
  40e434:	mov	x23, #0x0                   	// #0
  40e438:	ldr	x1, [x25, #320]
  40e43c:	nop
  40e440:	lsl	x26, x23, #4
  40e444:	mov	x24, #0x0                   	// #0
  40e448:	ldr	x2, [x3, x26]
  40e44c:	add	x2, x2, x2, lsl #1
  40e450:	add	x2, x1, x2, lsl #3
  40e454:	ldr	x4, [x2, #8]
  40e458:	cmp	x4, #0x0
  40e45c:	b.le	40e4a4 <wcrtomb@plt+0xbb84>
  40e460:	ldr	x0, [x2]
  40e464:	add	x2, sp, #0x80
  40e468:	add	x0, x0, x24, lsl #4
  40e46c:	add	x24, x24, #0x1
  40e470:	ldp	x0, x1, [x0]
  40e474:	bl	40da08 <wcrtomb@plt+0xb0e8>
  40e478:	ldr	x0, [x25, #296]
  40e47c:	ldr	x1, [x25, #320]
  40e480:	add	x0, x0, x22
  40e484:	ldr	x3, [x0, #8]
  40e488:	ldr	x2, [x3, x26]
  40e48c:	add	x2, x2, x2, lsl #1
  40e490:	add	x2, x1, x2, lsl #3
  40e494:	ldr	x4, [x2, #8]
  40e498:	cmp	x4, x24
  40e49c:	b.gt	40e460 <wcrtomb@plt+0xbb40>
  40e4a0:	ldr	x0, [x0, #16]
  40e4a4:	add	x23, x23, #0x1
  40e4a8:	cmp	x23, x0
  40e4ac:	b.lt	40e440 <wcrtomb@plt+0xbb20>  // b.tstop
  40e4b0:	ldr	x23, [x25, #176]
  40e4b4:	cmp	xzr, x23, lsr #60
  40e4b8:	lsl	x0, x23, #4
  40e4bc:	cset	x24, ne  // ne = any
  40e4c0:	cmp	x0, #0x0
  40e4c4:	csinc	x24, x24, xzr, ge  // ge = tcont
  40e4c8:	cbnz	x24, 40ec64 <wcrtomb@plt+0xc344>
  40e4cc:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40e4d0:	stp	x0, xzr, [sp, #152]
  40e4d4:	lsr	w3, w21, #6
  40e4d8:	mvni	v0.4s, #0x0
  40e4dc:	str	x23, [sp, #168]
  40e4e0:	ldr	x6, [sp, #136]
  40e4e4:	and	w28, w21, #0x3f
  40e4e8:	add	x23, sp, #0xd0
  40e4ec:	stp	q0, q0, [sp, #176]
  40e4f0:	cmp	x6, #0x0
  40e4f4:	b.le	40e634 <wcrtomb@plt+0xbd14>
  40e4f8:	ldr	x2, [sp, #128]
  40e4fc:	lsl	x0, x24, #4
  40e500:	ldr	x5, [x25, #144]
  40e504:	add	x1, x2, x0
  40e508:	ldr	x27, [x2, x0]
  40e50c:	ldr	w26, [x1, #8]
  40e510:	ldr	x4, [x1, #8]
  40e514:	ldr	x0, [x5, x27, lsl #3]
  40e518:	cmp	x0, #0xff
  40e51c:	b.ls	40e87c <wcrtomb@plt+0xbf5c>  // b.plast
  40e520:	cmp	x0, #0x113
  40e524:	b.le	40e93c <wcrtomb@plt+0xc01c>
  40e528:	ldr	x2, [x25]
  40e52c:	mov	x8, #0xffffffffffffdd80    	// #-8832
  40e530:	mov	w1, w3
  40e534:	add	x0, x2, x0, lsl #5
  40e538:	add	x0, x0, x8
  40e53c:	ld1	{v0.16b, v1.16b}, [x0]
  40e540:	st1	{v0.16b, v1.16b}, [x23]
  40e544:	ldr	x0, [x23, x1, lsl #3]
  40e548:	lsr	x0, x0, x28
  40e54c:	tbz	w0, #0, 40e89c <wcrtomb@plt+0xbf7c>
  40e550:	cmp	w26, #0x1ff
  40e554:	b.ne	40e8cc <wcrtomb@plt+0xbfac>  // b.any
  40e558:	ldp	d1, d3, [x23]
  40e55c:	ldp	d0, d2, [x23, #16]
  40e560:	mov	v0.d[1], v2.d[0]
  40e564:	mov	v1.d[1], v3.d[0]
  40e568:	ldp	q4, q2, [sp, #176]
  40e56c:	ldp	x0, x1, [sp, #152]
  40e570:	and	v0.16b, v0.16b, v2.16b
  40e574:	and	v1.16b, v4.16b, v1.16b
  40e578:	ldr	x2, [sp, #168]
  40e57c:	stp	q1, q0, [sp, #176]
  40e580:	cmp	x1, x2
  40e584:	b.lt	40e60c <wcrtomb@plt+0xbcec>  // b.tstop
  40e588:	asr	x26, x2, #1
  40e58c:	adds	x26, x2, x26
  40e590:	b.vs	40ec58 <wcrtomb@plt+0xc338>
  40e594:	asr	x1, x26, #63
  40e598:	sbfx	x6, x26, #59, #1
  40e59c:	lsl	x5, x26, #4
  40e5a0:	extr	x1, x1, x26, #60
  40e5a4:	cmp	x6, x1
  40e5a8:	b.ne	40ec58 <wcrtomb@plt+0xc338>  // b.any
  40e5ac:	cmp	x5, #0x7f
  40e5b0:	mov	x1, #0x8                   	// #8
  40e5b4:	csel	x26, x26, x1, gt
  40e5b8:	mov	x1, #0x80                  	// #128
  40e5bc:	csel	x1, x5, x1, gt
  40e5c0:	cbz	x0, 40eb68 <wcrtomb@plt+0xc248>
  40e5c4:	sub	x5, x26, x2
  40e5c8:	cmp	x5, #0x0
  40e5cc:	b.gt	40e5f0 <wcrtomb@plt+0xbcd0>
  40e5d0:	adds	x26, x2, #0x1
  40e5d4:	b.vs	40ec64 <wcrtomb@plt+0xc344>
  40e5d8:	asr	x2, x26, #63
  40e5dc:	sbfx	x5, x26, #59, #1
  40e5e0:	lsl	x1, x26, #4
  40e5e4:	extr	x2, x2, x26, #60
  40e5e8:	cmp	x5, x2
  40e5ec:	b.ne	40ec64 <wcrtomb@plt+0xc344>  // b.any
  40e5f0:	str	w3, [sp, #96]
  40e5f4:	str	x4, [sp, #104]
  40e5f8:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40e5fc:	ldr	w3, [sp, #96]
  40e600:	ldr	x4, [sp, #104]
  40e604:	str	x26, [sp, #168]
  40e608:	ldr	x1, [sp, #160]
  40e60c:	lsl	x2, x1, #4
  40e610:	add	x5, x0, x2
  40e614:	add	x1, x1, #0x1
  40e618:	stp	x0, x1, [sp, #152]
  40e61c:	ldr	x6, [sp, #136]
  40e620:	str	x27, [x0, x2]
  40e624:	str	w4, [x5, #8]
  40e628:	add	x24, x24, #0x1
  40e62c:	cmp	x24, x6
  40e630:	b.lt	40e4f8 <wcrtomb@plt+0xbbd8>  // b.tstop
  40e634:	ldr	x22, [x25, #176]
  40e638:	cmp	xzr, x22, lsr #60
  40e63c:	lsl	x0, x22, #4
  40e640:	cset	x23, ne  // ne = any
  40e644:	cmp	x0, #0x0
  40e648:	csinc	x23, x23, xzr, ge  // ge = tcont
  40e64c:	cbnz	x23, 40ec64 <wcrtomb@plt+0xc344>
  40e650:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40e654:	stp	x0, xzr, [sp, #208]
  40e658:	ldrb	w0, [x25, #328]
  40e65c:	ldr	x3, [sp, #160]
  40e660:	str	x22, [sp, #224]
  40e664:	cmp	x3, #0x0
  40e668:	b.le	40eb50 <wcrtomb@plt+0xc230>
  40e66c:	cbnz	w0, 40eaa4 <wcrtomb@plt+0xc184>
  40e670:	ldr	x1, [sp, #152]
  40e674:	ldr	x4, [sp, #176]
  40e678:	ldr	x2, [x25, #1008]
  40e67c:	ldr	x5, [x25, #976]
  40e680:	tst	x4, x2
  40e684:	cset	w0, ne  // ne = any
  40e688:	orr	x2, x2, x5
  40e68c:	tst	x4, x5
  40e690:	lsl	w0, w0, #2
  40e694:	orr	w5, w0, #0x2
  40e698:	csel	w0, w5, w0, ne  // ne = any
  40e69c:	bics	xzr, x4, x2
  40e6a0:	ldr	x4, [sp, #184]
  40e6a4:	orr	w2, w0, #0x1
  40e6a8:	ldr	x5, [x25, #1016]
  40e6ac:	csel	w0, w2, w0, ne  // ne = any
  40e6b0:	ldr	x2, [x25, #984]
  40e6b4:	tst	x4, x5
  40e6b8:	orr	w6, w0, #0x4
  40e6bc:	csel	w0, w6, w0, ne  // ne = any
  40e6c0:	tst	x2, x4
  40e6c4:	orr	w6, w0, #0x2
  40e6c8:	orr	x2, x2, x5
  40e6cc:	csel	w0, w6, w0, ne  // ne = any
  40e6d0:	bics	xzr, x4, x2
  40e6d4:	ldr	x4, [sp, #192]
  40e6d8:	orr	w2, w0, #0x1
  40e6dc:	ldr	x5, [x25, #1024]
  40e6e0:	csel	w0, w2, w0, ne  // ne = any
  40e6e4:	ldr	x2, [x25, #992]
  40e6e8:	tst	x5, x4
  40e6ec:	orr	w6, w0, #0x4
  40e6f0:	csel	w0, w6, w0, ne  // ne = any
  40e6f4:	tst	x2, x4
  40e6f8:	orr	w6, w0, #0x2
  40e6fc:	orr	x2, x2, x5
  40e700:	csel	w0, w6, w0, ne  // ne = any
  40e704:	bics	xzr, x4, x2
  40e708:	ldr	x4, [sp, #200]
  40e70c:	orr	w5, w0, #0x1
  40e710:	ldr	x2, [x25, #1032]
  40e714:	csel	w0, w5, w0, ne  // ne = any
  40e718:	ldr	x5, [x25, #1000]
  40e71c:	tst	x2, x4
  40e720:	orr	w6, w0, #0x4
  40e724:	csel	w0, w6, w0, ne  // ne = any
  40e728:	orr	x2, x5, x2
  40e72c:	tst	x5, x4
  40e730:	orr	w6, w0, #0x2
  40e734:	csel	w0, w6, w0, ne  // ne = any
  40e738:	bics	xzr, x4, x2
  40e73c:	b.eq	40ebb8 <wcrtomb@plt+0xc298>  // b.none
  40e740:	orr	w0, w0, #0x1
  40e744:	cmp	x3, #0x0
  40e748:	b.le	40ec48 <wcrtomb@plt+0xc328>
  40e74c:	ldr	x5, [x25, #344]
  40e750:	add	x3, x1, x3, lsl #4
  40e754:	mov	w2, #0x0                   	// #0
  40e758:	ldr	x4, [x1], #16
  40e75c:	cmp	x1, x3
  40e760:	ldr	w4, [x5, x4, lsl #2]
  40e764:	orr	w2, w2, w4
  40e768:	b.ne	40e758 <wcrtomb@plt+0xbe38>  // b.any
  40e76c:	and	w1, w2, w0
  40e770:	bics	wzr, w0, w2
  40e774:	and	w26, w1, #0x4
  40e778:	and	w22, w1, #0x2
  40e77c:	mov	x24, #0xffffffffffffffff    	// #-1
  40e780:	b.ne	40ec30 <wcrtomb@plt+0xc310>  // b.any
  40e784:	mov	x23, x24
  40e788:	cbz	w26, 40e7a0 <wcrtomb@plt+0xbe80>
  40e78c:	add	x1, sp, #0x98
  40e790:	mov	x0, x25
  40e794:	mov	w2, #0x4                   	// #4
  40e798:	bl	40df30 <wcrtomb@plt+0xb610>
  40e79c:	mov	x23, x0
  40e7a0:	mov	x26, x24
  40e7a4:	cbz	w22, 40e7bc <wcrtomb@plt+0xbe9c>
  40e7a8:	add	x1, sp, #0x98
  40e7ac:	mov	x0, x25
  40e7b0:	mov	w2, #0x2                   	// #2
  40e7b4:	bl	40df30 <wcrtomb@plt+0xb610>
  40e7b8:	mov	x26, x0
  40e7bc:	mov	x0, x25
  40e7c0:	bl	40d7c8 <wcrtomb@plt+0xaea8>
  40e7c4:	add	x22, sp, #0xb0
  40e7c8:	add	x1, x25, #0x1cc
  40e7cc:	mov	x2, #0x0                   	// #0
  40e7d0:	b	40e7ec <wcrtomb@plt+0xbecc>
  40e7d4:	cmp	w0, #0x4
  40e7d8:	csel	x0, x24, x23, ne  // ne = any
  40e7dc:	str	x0, [x19, x2, lsl #3]
  40e7e0:	add	x2, x2, #0x1
  40e7e4:	cmp	x2, #0x100
  40e7e8:	b.eq	40e818 <wcrtomb@plt+0xbef8>  // b.none
  40e7ec:	lsr	w0, w2, #6
  40e7f0:	ldr	x3, [x22, x0, lsl #3]
  40e7f4:	lsr	x3, x3, x2
  40e7f8:	tbz	w3, #0, 40e7e0 <wcrtomb@plt+0xbec0>
  40e7fc:	ldrb	w0, [x1, x2]
  40e800:	cmp	w0, #0x2
  40e804:	b.ne	40e7d4 <wcrtomb@plt+0xbeb4>  // b.any
  40e808:	str	x26, [x19, x2, lsl #3]
  40e80c:	add	x2, x2, #0x1
  40e810:	cmp	x2, #0x100
  40e814:	b.ne	40e7ec <wcrtomb@plt+0xbecc>  // b.any
  40e818:	ldr	x0, [sp, #152]
  40e81c:	bl	4026b0 <free@plt>
  40e820:	ldr	x0, [sp, #128]
  40e824:	bl	4026b0 <free@plt>
  40e828:	ldr	x0, [sp, #208]
  40e82c:	bl	4026b0 <free@plt>
  40e830:	ldrb	w0, [x25, #459]
  40e834:	ubfx	x1, x0, #6, #2
  40e838:	ldr	x1, [x22, x1, lsl #3]
  40e83c:	lsr	x1, x1, x0
  40e840:	tbz	w1, #0, 40e85c <wcrtomb@plt+0xbf3c>
  40e844:	ldr	x2, [x25, #392]
  40e848:	mov	x1, #0xffffffffffffffff    	// #-1
  40e84c:	ldr	x0, [x19, x0, lsl #3]
  40e850:	str	x0, [x2, x20, lsl #3]
  40e854:	ldrb	w0, [x25, #459]
  40e858:	str	x1, [x19, x0, lsl #3]
  40e85c:	ldr	x0, [x19, x21, lsl #3]
  40e860:	ldp	x19, x20, [sp, #16]
  40e864:	ldp	x21, x22, [sp, #32]
  40e868:	ldp	x23, x24, [sp, #48]
  40e86c:	ldp	x25, x26, [sp, #64]
  40e870:	ldp	x27, x28, [sp, #80]
  40e874:	ldp	x29, x30, [sp], #240
  40e878:	ret
  40e87c:	lsr	w2, w0, #6
  40e880:	mov	x1, #0x1                   	// #1
  40e884:	stp	xzr, xzr, [x23]
  40e888:	lsl	x1, x1, x0
  40e88c:	cmp	x0, w21, uxtb
  40e890:	stp	xzr, xzr, [x23, #16]
  40e894:	str	x1, [x23, x2, lsl #3]
  40e898:	b.eq	40e550 <wcrtomb@plt+0xbc30>  // b.none
  40e89c:	cmp	w26, #0x1ff
  40e8a0:	mov	w5, #0x0                   	// #0
  40e8a4:	ldp	d1, d3, [x23]
  40e8a8:	ldp	d0, d2, [x23, #16]
  40e8ac:	b.ne	40e8d8 <wcrtomb@plt+0xbfb8>  // b.any
  40e8b0:	mov	v0.d[1], v2.d[0]
  40e8b4:	mov	v1.d[1], v3.d[0]
  40e8b8:	ldp	q4, q2, [sp, #176]
  40e8bc:	bic	v1.16b, v4.16b, v1.16b
  40e8c0:	bic	v0.16b, v2.16b, v0.16b
  40e8c4:	stp	q1, q0, [sp, #176]
  40e8c8:	b	40e628 <wcrtomb@plt+0xbd08>
  40e8cc:	ldp	d1, d3, [x23]
  40e8d0:	mov	w5, #0x1                   	// #1
  40e8d4:	ldp	d0, d2, [x23, #16]
  40e8d8:	ldr	x0, [x25, #296]
  40e8dc:	add	x0, x0, x22
  40e8e0:	ldrb	w0, [x0, #32]
  40e8e4:	and	w1, w0, w26, asr #6
  40e8e8:	tst	x1, #0x7
  40e8ec:	b.eq	40e9c8 <wcrtomb@plt+0xc0a8>  // b.none
  40e8f0:	and	w1, w0, w26, asr #3
  40e8f4:	tst	x1, #0x7
  40e8f8:	b.eq	40e9fc <wcrtomb@plt+0xc0dc>  // b.none
  40e8fc:	and	w0, w0, w26
  40e900:	tst	x0, #0x7
  40e904:	b.eq	40ea30 <wcrtomb@plt+0xc110>  // b.none
  40e908:	orr	v4.8b, v0.8b, v2.8b
  40e90c:	fmov	x1, d4
  40e910:	orr	v4.8b, v1.8b, v3.8b
  40e914:	fmov	x0, d4
  40e918:	orr	x0, x0, x1
  40e91c:	cbz	x0, 40ea9c <wcrtomb@plt+0xc17c>
  40e920:	mov	w0, w3
  40e924:	ldr	x0, [x23, x0, lsl #3]
  40e928:	lsr	x0, x0, x28
  40e92c:	tbz	w0, #0, 40e934 <wcrtomb@plt+0xc014>
  40e930:	cbnz	w5, 40e560 <wcrtomb@plt+0xbc40>
  40e934:	ldr	x6, [sp, #136]
  40e938:	b	40e8b0 <wcrtomb@plt+0xbf90>
  40e93c:	cmp	x0, #0x10a
  40e940:	b.ne	40e628 <wcrtomb@plt+0xbd08>  // b.any
  40e944:	ldr	x5, [x25]
  40e948:	mov	w1, w3
  40e94c:	ldr	x0, [x25, #24]
  40e950:	ldr	x2, [x25, #296]
  40e954:	add	x0, x5, x0, lsl #5
  40e958:	add	x2, x2, x22
  40e95c:	ld1	{v0.16b, v1.16b}, [x0]
  40e960:	st1	{v0.16b, v1.16b}, [x23]
  40e964:	ldrb	w0, [x2, #32]
  40e968:	ldr	x5, [x23, x1, lsl #3]
  40e96c:	and	w0, w0, w26
  40e970:	tst	x0, #0x7
  40e974:	lsr	x5, x5, x28
  40e978:	and	w5, w5, #0x1
  40e97c:	b.eq	40e9b0 <wcrtomb@plt+0xc090>  // b.none
  40e980:	ldr	x0, [x2, #56]
  40e984:	cbz	x0, 40eb0c <wcrtomb@plt+0xc1ec>
  40e988:	mov	x1, x4
  40e98c:	add	x2, x2, #0x30
  40e990:	mov	x0, x27
  40e994:	str	x4, [sp, #96]
  40e998:	str	w3, [sp, #104]
  40e99c:	str	w5, [sp, #116]
  40e9a0:	bl	40da08 <wcrtomb@plt+0xb0e8>
  40e9a4:	ldr	w3, [sp, #104]
  40e9a8:	ldr	w5, [sp, #116]
  40e9ac:	ldr	x4, [sp, #96]
  40e9b0:	cmp	w26, #0x1ff
  40e9b4:	ldp	d1, d3, [x23]
  40e9b8:	ldp	d0, d2, [x23, #16]
  40e9bc:	b.ne	40e8d8 <wcrtomb@plt+0xbfb8>  // b.any
  40e9c0:	cbnz	w5, 40e560 <wcrtomb@plt+0xbc40>
  40e9c4:	b	40e934 <wcrtomb@plt+0xc014>
  40e9c8:	ldr	d4, [x25, #1008]
  40e9cc:	and	w1, w0, w26, asr #3
  40e9d0:	tst	x1, #0x7
  40e9d4:	bic	v1.8b, v1.8b, v4.8b
  40e9d8:	ldr	d4, [x25, #1016]
  40e9dc:	bic	v3.8b, v3.8b, v4.8b
  40e9e0:	ldr	d4, [x25, #1024]
  40e9e4:	stp	d1, d3, [x23]
  40e9e8:	bic	v0.8b, v0.8b, v4.8b
  40e9ec:	ldr	d4, [x25, #1032]
  40e9f0:	bic	v2.8b, v2.8b, v4.8b
  40e9f4:	stp	d0, d2, [x23, #16]
  40e9f8:	b.ne	40e8fc <wcrtomb@plt+0xbfdc>  // b.any
  40e9fc:	ldr	d4, [x25, #976]
  40ea00:	and	w0, w0, w26
  40ea04:	tst	x0, #0x7
  40ea08:	bic	v1.8b, v1.8b, v4.8b
  40ea0c:	ldr	d4, [x25, #984]
  40ea10:	bic	v3.8b, v3.8b, v4.8b
  40ea14:	ldr	d4, [x25, #992]
  40ea18:	stp	d1, d3, [x23]
  40ea1c:	bic	v0.8b, v0.8b, v4.8b
  40ea20:	ldr	d4, [x25, #1000]
  40ea24:	bic	v2.8b, v2.8b, v4.8b
  40ea28:	stp	d0, d2, [x23, #16]
  40ea2c:	b.ne	40e908 <wcrtomb@plt+0xbfe8>  // b.any
  40ea30:	add	x7, x25, #0x3d0
  40ea34:	ldr	x8, [x25, #1008]
  40ea38:	ldp	x6, x2, [x7]
  40ea3c:	ldp	x1, x0, [x7, #16]
  40ea40:	ldr	x7, [x25, #1016]
  40ea44:	orr	x6, x6, x8
  40ea48:	fmov	d4, x6
  40ea4c:	ldr	x8, [x25, #1024]
  40ea50:	and	v1.8b, v1.8b, v4.8b
  40ea54:	orr	x2, x2, x7
  40ea58:	fmov	d4, x2
  40ea5c:	ldr	x7, [x25, #1032]
  40ea60:	and	v3.8b, v3.8b, v4.8b
  40ea64:	orr	x1, x1, x8
  40ea68:	fmov	d4, x1
  40ea6c:	orr	x0, x0, x7
  40ea70:	and	v0.8b, v0.8b, v4.8b
  40ea74:	fmov	d4, x0
  40ea78:	stp	d1, d3, [x23]
  40ea7c:	and	v2.8b, v2.8b, v4.8b
  40ea80:	orr	v4.8b, v0.8b, v2.8b
  40ea84:	stp	d0, d2, [x23, #16]
  40ea88:	fmov	x1, d4
  40ea8c:	orr	v4.8b, v1.8b, v3.8b
  40ea90:	fmov	x0, d4
  40ea94:	orr	x0, x0, x1
  40ea98:	cbnz	x0, 40e920 <wcrtomb@plt+0xc000>
  40ea9c:	ldr	x6, [sp, #136]
  40eaa0:	b	40e628 <wcrtomb@plt+0xbd08>
  40eaa4:	ldrb	w0, [x25, #1048]
  40eaa8:	cbz	w0, 40ead4 <wcrtomb@plt+0xc1b4>
  40eaac:	ldr	x1, [sp, #152]
  40eab0:	ldr	x2, [x25, #280]
  40eab4:	nop
  40eab8:	lsl	x0, x23, #4
  40eabc:	add	x23, x23, #0x1
  40eac0:	ldr	x0, [x1, x0]
  40eac4:	ldrb	w0, [x2, x0]
  40eac8:	tbz	w0, #0, 40e674 <wcrtomb@plt+0xbd54>
  40eacc:	cmp	x3, x23
  40ead0:	b.ne	40eab8 <wcrtomb@plt+0xc198>  // b.any
  40ead4:	ldr	x0, [x25, #296]
  40ead8:	add	x3, sp, #0xa0
  40eadc:	add	x5, sp, #0xd0
  40eae0:	mov	w4, #0xffffffff            	// #-1
  40eae4:	add	x1, x0, #0x10
  40eae8:	add	x2, sp, #0x98
  40eaec:	add	x0, x0, #0x8
  40eaf0:	bl	40dbb0 <wcrtomb@plt+0xb290>
  40eaf4:	add	x1, sp, #0xd8
  40eaf8:	add	x2, sp, #0x98
  40eafc:	add	x0, sp, #0xd0
  40eb00:	bl	40d6c0 <wcrtomb@plt+0xada0>
  40eb04:	ldp	x1, x3, [sp, #152]
  40eb08:	b	40e674 <wcrtomb@plt+0xbd54>
  40eb0c:	mov	x0, #0x10                  	// #16
  40eb10:	str	x2, [sp, #96]
  40eb14:	str	w3, [sp, #104]
  40eb18:	str	w5, [sp, #116]
  40eb1c:	str	x4, [sp, #120]
  40eb20:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40eb24:	ldr	x2, [sp, #96]
  40eb28:	ldr	w3, [sp, #104]
  40eb2c:	ldr	w5, [sp, #116]
  40eb30:	str	x0, [x2, #48]
  40eb34:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  40eb38:	ldr	x4, [sp, #120]
  40eb3c:	ldr	q0, [x0, #2752]
  40eb40:	ldr	x0, [x25, #296]
  40eb44:	stur	q0, [x2, #56]
  40eb48:	add	x2, x0, x22
  40eb4c:	b	40e988 <wcrtomb@plt+0xc068>
  40eb50:	cbz	w0, 40ebd4 <wcrtomb@plt+0xc2b4>
  40eb54:	ldr	w26, [x25, #364]
  40eb58:	ldr	x24, [x25, #400]
  40eb5c:	sub	w26, w26, #0x1
  40eb60:	sxtw	x26, w26
  40eb64:	b	40e7c4 <wcrtomb@plt+0xbea4>
  40eb68:	str	xzr, [sp, #168]
  40eb6c:	b	40e5c4 <wcrtomb@plt+0xbca4>
  40eb70:	ldr	w1, [x25, #360]
  40eb74:	cmp	w1, #0x3ff
  40eb78:	b.gt	40ebe4 <wcrtomb@plt+0xc2c4>
  40eb7c:	add	w1, w1, #0x1
  40eb80:	str	w1, [x25, #360]
  40eb84:	mov	x0, #0x800                 	// #2048
  40eb88:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40eb8c:	mov	x19, x0
  40eb90:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  40eb94:	add	x1, x19, #0x800
  40eb98:	str	x19, [x23]
  40eb9c:	ldr	q0, [x0, #2736]
  40eba0:	mov	x0, x19
  40eba4:	nop
  40eba8:	str	q0, [x0], #16
  40ebac:	cmp	x1, x0
  40ebb0:	b.ne	40eba8 <wcrtomb@plt+0xc288>  // b.any
  40ebb4:	b	40e36c <wcrtomb@plt+0xba4c>
  40ebb8:	cmp	x3, #0x0
  40ebbc:	b.gt	40e74c <wcrtomb@plt+0xbe2c>
  40ebc0:	cbnz	w0, 40ec48 <wcrtomb@plt+0xc328>
  40ebc4:	mov	x24, #0xffffffffffffffff    	// #-1
  40ebc8:	mov	x23, x24
  40ebcc:	mov	x26, x24
  40ebd0:	b	40e7bc <wcrtomb@plt+0xbe9c>
  40ebd4:	mov	x26, #0xffffffffffffffff    	// #-1
  40ebd8:	mov	x23, x26
  40ebdc:	mov	x24, x26
  40ebe0:	b	40e7c4 <wcrtomb@plt+0xbea4>
  40ebe4:	ldr	x1, [x25, #352]
  40ebe8:	ldrsw	x19, [x25, #364]
  40ebec:	cmp	x1, x19
  40ebf0:	b.le	40ec28 <wcrtomb@plt+0xc308>
  40ebf4:	nop
  40ebf8:	ldr	x0, [x0, x19, lsl #3]
  40ebfc:	bl	4026b0 <free@plt>
  40ec00:	ldr	x0, [x25, #376]
  40ec04:	ldr	x0, [x0, x19, lsl #3]
  40ec08:	bl	4026b0 <free@plt>
  40ec0c:	ldp	x0, x1, [x25, #368]
  40ec10:	str	xzr, [x1, x19, lsl #3]
  40ec14:	ldr	x1, [x25, #352]
  40ec18:	str	xzr, [x0, x19, lsl #3]
  40ec1c:	add	x19, x19, #0x1
  40ec20:	cmp	x1, x19
  40ec24:	b.gt	40ebf8 <wcrtomb@plt+0xc2d8>
  40ec28:	mov	w1, #0x1                   	// #1
  40ec2c:	b	40eb80 <wcrtomb@plt+0xc260>
  40ec30:	eor	w2, w2, #0x7
  40ec34:	add	x1, sp, #0x98
  40ec38:	mov	x0, x25
  40ec3c:	bl	40df30 <wcrtomb@plt+0xb610>
  40ec40:	mov	x24, x0
  40ec44:	b	40e784 <wcrtomb@plt+0xbe64>
  40ec48:	mov	w22, #0x0                   	// #0
  40ec4c:	mov	w26, #0x0                   	// #0
  40ec50:	mov	w2, #0x7                   	// #7
  40ec54:	b	40ec34 <wcrtomb@plt+0xc314>
  40ec58:	mov	x26, #0x7ffffffffffffff     	// #576460752303423487
  40ec5c:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  40ec60:	b	40e5c0 <wcrtomb@plt+0xbca0>
  40ec64:	bl	41b778 <wcrtomb@plt+0x18e58>
  40ec68:	stp	x29, x30, [sp, #-112]!
  40ec6c:	mov	x29, sp
  40ec70:	stp	x23, x24, [sp, #48]
  40ec74:	mov	x23, x1
  40ec78:	ldr	x1, [x2]
  40ec7c:	stp	x19, x20, [sp, #16]
  40ec80:	stp	x21, x22, [sp, #32]
  40ec84:	mov	x21, x0
  40ec88:	stp	x25, x26, [sp, #64]
  40ec8c:	mov	x25, x2
  40ec90:	ldrb	w0, [x1]
  40ec94:	add	x0, x21, x0, lsl #2
  40ec98:	ldr	w24, [x0, #1308]
  40ec9c:	cmn	w24, #0x1
  40eca0:	b.eq	40ef4c <wcrtomb@plt+0xc62c>  // b.none
  40eca4:	str	x27, [sp, #80]
  40eca8:	mov	w26, #0x1                   	// #1
  40ecac:	str	xzr, [x21, #416]
  40ecb0:	mov	x19, x23
  40ecb4:	mov	w22, #0x0                   	// #0
  40ecb8:	b	40ecf8 <wcrtomb@plt+0xc3d8>
  40ecbc:	mov	w0, w2
  40ecc0:	mov	x3, x1
  40ecc4:	ldr	x0, [x20, x0, lsl #3]
  40ecc8:	cmn	x0, #0x2
  40eccc:	b.eq	40ed50 <wcrtomb@plt+0xc430>  // b.none
  40ecd0:	add	x1, x3, #0x1
  40ecd4:	str	x1, [x25]
  40ecd8:	add	w22, w22, #0x1
  40ecdc:	ldrb	w0, [x3]
  40ece0:	cmp	w22, w26
  40ece4:	ldr	x19, [x20, x0, lsl #3]
  40ece8:	b.ge	40ed80 <wcrtomb@plt+0xc460>  // b.tcont
  40ecec:	ldrsw	x0, [x21, #364]
  40ecf0:	cmp	x0, x19
  40ecf4:	b.gt	40ed80 <wcrtomb@plt+0xc460>
  40ecf8:	ldr	x0, [x21, #368]
  40ecfc:	lsl	x27, x19, #3
  40ed00:	ldrb	w2, [x1]
  40ed04:	ldr	x20, [x0, x19, lsl #3]
  40ed08:	cbnz	x20, 40ecbc <wcrtomb@plt+0xc39c>
  40ed0c:	ldr	x0, [x21, #376]
  40ed10:	ldr	x20, [x0, x19, lsl #3]
  40ed14:	cbnz	x20, 40ecbc <wcrtomb@plt+0xc39c>
  40ed18:	mov	x1, x21
  40ed1c:	mov	x0, x19
  40ed20:	bl	40e318 <wcrtomb@plt+0xb9f8>
  40ed24:	ldr	x0, [x21, #368]
  40ed28:	ldr	x20, [x0, x27]
  40ed2c:	cbz	x20, 40efb0 <wcrtomb@plt+0xc690>
  40ed30:	ldr	x1, [x25]
  40ed34:	mov	x3, x1
  40ed38:	ldrb	w2, [x1]
  40ed3c:	mov	w0, w2
  40ed40:	ldr	x0, [x20, x0, lsl #3]
  40ed44:	cmn	x0, #0x2
  40ed48:	b.ne	40ecd0 <wcrtomb@plt+0xc3b0>  // b.any
  40ed4c:	nop
  40ed50:	mov	x0, x19
  40ed54:	mov	x1, x21
  40ed58:	bl	40e318 <wcrtomb@plt+0xb9f8>
  40ed5c:	add	w22, w22, #0x1
  40ed60:	ldr	x3, [x25]
  40ed64:	cmp	w22, w26
  40ed68:	add	x1, x3, #0x1
  40ed6c:	str	x1, [x25]
  40ed70:	ldrb	w0, [x3]
  40ed74:	ldr	x19, [x20, x0, lsl #3]
  40ed78:	b.lt	40ecec <wcrtomb@plt+0xc3cc>  // b.tstop
  40ed7c:	nop
  40ed80:	ldr	x27, [sp, #80]
  40ed84:	sub	w26, w26, w22
  40ed88:	add	x1, x1, w26, sxtw
  40ed8c:	str	x1, [x25]
  40ed90:	cmn	w24, #0x1
  40ed94:	mov	x22, x19
  40ed98:	b.eq	40ee60 <wcrtomb@plt+0xc540>  // b.none
  40ed9c:	add	x23, x23, x23, lsl #2
  40eda0:	ldr	x2, [x21, #296]
  40eda4:	lsl	x23, x23, #4
  40eda8:	ldr	x22, [x21, #432]
  40edac:	add	x1, x2, x23
  40edb0:	ldr	x0, [x1, #72]
  40edb4:	tbnz	x0, #63, 40ee7c <wcrtomb@plt+0xc55c>
  40edb8:	ldr	x3, [x22, x19, lsl #3]
  40edbc:	lsl	x20, x19, #3
  40edc0:	cbz	x3, 40ef0c <wcrtomb@plt+0xc5ec>
  40edc4:	ldr	x22, [x3, x0, lsl #3]
  40edc8:	tbz	x22, #63, 40ee60 <wcrtomb@plt+0xc540>
  40edcc:	add	x0, x1, #0x30
  40edd0:	cmn	x19, #0x1
  40edd4:	add	x1, x1, #0x38
  40edd8:	add	x22, x21, #0x198
  40eddc:	b.eq	40ef8c <wcrtomb@plt+0xc66c>  // b.none
  40ede0:	add	x19, x19, x19, lsl #2
  40ede4:	mov	x5, x22
  40ede8:	mov	w4, #0xffffffff            	// #-1
  40edec:	add	x2, x2, x19, lsl #4
  40edf0:	add	x3, x2, #0x10
  40edf4:	add	x2, x2, #0x8
  40edf8:	bl	40dbb0 <wcrtomb@plt+0xb290>
  40edfc:	ldp	x0, x3, [x21, #408]
  40ee00:	cmp	x3, #0x0
  40ee04:	b.le	40efdc <wcrtomb@plt+0xc6bc>
  40ee08:	ldr	x4, [x21, #344]
  40ee0c:	add	x3, x0, x3, lsl #4
  40ee10:	mov	w2, #0x0                   	// #0
  40ee14:	nop
  40ee18:	ldr	x1, [x0], #16
  40ee1c:	cmp	x3, x0
  40ee20:	ldr	w1, [x4, x1, lsl #2]
  40ee24:	orr	w2, w2, w1
  40ee28:	b.ne	40ee18 <wcrtomb@plt+0xc4f8>  // b.any
  40ee2c:	eor	w2, w2, #0x7
  40ee30:	mov	x1, x22
  40ee34:	mov	x0, x21
  40ee38:	bl	40df30 <wcrtomb@plt+0xb610>
  40ee3c:	mov	x22, x0
  40ee40:	mov	x0, x21
  40ee44:	bl	40d7c8 <wcrtomb@plt+0xaea8>
  40ee48:	ldr	x0, [x21, #296]
  40ee4c:	ldr	x1, [x21, #432]
  40ee50:	add	x23, x0, x23
  40ee54:	ldr	x0, [x1, x20]
  40ee58:	ldr	x1, [x23, #72]
  40ee5c:	str	x22, [x0, x1, lsl #3]
  40ee60:	mov	x0, x22
  40ee64:	ldp	x19, x20, [sp, #16]
  40ee68:	ldp	x21, x22, [sp, #32]
  40ee6c:	ldp	x23, x24, [sp, #48]
  40ee70:	ldp	x25, x26, [sp, #64]
  40ee74:	ldp	x29, x30, [sp], #112
  40ee78:	ret
  40ee7c:	ldr	x0, [x21, #440]
  40ee80:	add	x3, x0, #0x1
  40ee84:	cmp	x0, #0x3ff
  40ee88:	b.le	40eef8 <wcrtomb@plt+0xc5d8>
  40ee8c:	ldr	x0, [x21, #352]
  40ee90:	tbnz	x0, #63, 40eec0 <wcrtomb@plt+0xc5a0>
  40ee94:	mov	x20, #0xffffffffffffffff    	// #-1
  40ee98:	ldr	x0, [x22, x20, lsl #3]
  40ee9c:	bl	4026b0 <free@plt>
  40eea0:	ldr	x22, [x21, #432]
  40eea4:	ldr	x0, [x21, #352]
  40eea8:	str	xzr, [x22, x20, lsl #3]
  40eeac:	add	x20, x20, #0x1
  40eeb0:	cmp	x0, x20
  40eeb4:	b.gt	40ee98 <wcrtomb@plt+0xc578>
  40eeb8:	ldr	x2, [x21, #296]
  40eebc:	add	x1, x2, x23
  40eec0:	ldr	x0, [x21, #304]
  40eec4:	cmp	x0, #0x0
  40eec8:	b.le	40eef0 <wcrtomb@plt+0xc5d0>
  40eecc:	add	x3, x0, x0, lsl #2
  40eed0:	mov	x0, x2
  40eed4:	mov	x4, #0xffffffffffffffff    	// #-1
  40eed8:	add	x3, x2, x3, lsl #4
  40eedc:	nop
  40eee0:	str	x4, [x0, #72]
  40eee4:	add	x0, x0, #0x50
  40eee8:	cmp	x3, x0
  40eeec:	b.ne	40eee0 <wcrtomb@plt+0xc5c0>  // b.any
  40eef0:	mov	x3, #0x1                   	// #1
  40eef4:	mov	x0, #0x0                   	// #0
  40eef8:	str	x3, [x21, #440]
  40eefc:	lsl	x20, x19, #3
  40ef00:	ldr	x3, [x22, x19, lsl #3]
  40ef04:	str	x0, [x1, #72]
  40ef08:	cbnz	x3, 40edc4 <wcrtomb@plt+0xc4a4>
  40ef0c:	mov	x0, #0x2000                	// #8192
  40ef10:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40ef14:	str	x0, [x22, x19, lsl #3]
  40ef18:	mov	x2, #0x2000                	// #8192
  40ef1c:	ldr	x0, [x21, #432]
  40ef20:	mov	w1, #0xff                  	// #255
  40ef24:	add	x22, x21, #0x198
  40ef28:	ldr	x0, [x0, x19, lsl #3]
  40ef2c:	bl	402510 <memset@plt>
  40ef30:	ldr	x2, [x21, #296]
  40ef34:	cmn	x19, #0x1
  40ef38:	add	x1, x2, x23
  40ef3c:	add	x0, x1, #0x30
  40ef40:	add	x1, x1, #0x38
  40ef44:	b.ne	40ede0 <wcrtomb@plt+0xc4c0>  // b.any
  40ef48:	b	40ef8c <wcrtomb@plt+0xc66c>
  40ef4c:	sub	x2, x3, x1
  40ef50:	add	x0, sp, #0x6c
  40ef54:	add	x3, x21, #0x110
  40ef58:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  40ef5c:	mov	x26, x0
  40ef60:	sub	x0, x0, #0x1
  40ef64:	cmn	x0, #0x4
  40ef68:	b.hi	40ef98 <wcrtomb@plt+0xc678>  // b.pmore
  40ef6c:	ldr	x1, [x25]
  40ef70:	str	xzr, [x21, #416]
  40ef74:	ldr	w24, [sp, #108]
  40ef78:	mov	x19, x23
  40ef7c:	cmp	w26, #0x0
  40ef80:	b.le	40ed88 <wcrtomb@plt+0xc468>
  40ef84:	str	x27, [sp, #80]
  40ef88:	b	40ecb0 <wcrtomb@plt+0xc390>
  40ef8c:	mov	x2, x22
  40ef90:	bl	40d6c0 <wcrtomb@plt+0xada0>
  40ef94:	b	40edfc <wcrtomb@plt+0xc4dc>
  40ef98:	str	x27, [sp, #80]
  40ef9c:	mov	w26, #0x1                   	// #1
  40efa0:	str	xzr, [x21, #272]
  40efa4:	str	xzr, [x21, #416]
  40efa8:	ldr	x1, [x25]
  40efac:	b	40ecb0 <wcrtomb@plt+0xc390>
  40efb0:	ldr	x0, [x21, #376]
  40efb4:	ldr	x20, [x0, x27]
  40efb8:	cbnz	x20, 40ed30 <wcrtomb@plt+0xc410>
  40efbc:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  40efc0:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  40efc4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  40efc8:	add	x3, x3, #0x818
  40efcc:	add	x1, x1, #0x4a0
  40efd0:	add	x0, x0, #0x460
  40efd4:	mov	w2, #0xc93                 	// #3219
  40efd8:	bl	402880 <__assert_fail@plt>
  40efdc:	mov	w2, #0x7                   	// #7
  40efe0:	b	40ee30 <wcrtomb@plt+0xc510>
  40efe4:	nop
  40efe8:	stp	x29, x30, [sp, #-144]!
  40efec:	mov	x29, sp
  40eff0:	stp	x19, x20, [sp, #16]
  40eff4:	mov	x19, x0
  40eff8:	ldr	x0, [x0, #304]
  40effc:	stp	x21, x22, [sp, #32]
  40f000:	mov	x22, x2
  40f004:	stp	x23, x24, [sp, #48]
  40f008:	mov	x23, x1
  40f00c:	and	w1, w3, #0xff
  40f010:	stp	x25, x26, [sp, #64]
  40f014:	cmp	x0, #0x3ff
  40f018:	stp	x27, x28, [sp, #80]
  40f01c:	str	w1, [sp, #112]
  40f020:	str	x4, [sp, #120]
  40f024:	b.gt	40f438 <wcrtomb@plt+0xcb18>
  40f028:	ldr	x0, [x19, #352]
  40f02c:	cbz	x0, 40f550 <wcrtomb@plt+0xcc30>
  40f030:	ldrb	w0, [x19, #459]
  40f034:	add	x24, x19, #0x110
  40f038:	ldrb	w1, [x22]
  40f03c:	mov	x20, x23
  40f040:	ldr	x25, [x19, #368]
  40f044:	strb	w0, [x22]
  40f048:	str	w0, [sp, #108]
  40f04c:	ldr	x0, [x19, #424]
  40f050:	str	w1, [sp, #116]
  40f054:	str	x23, [sp, #136]
  40f058:	str	xzr, [x19, #272]
  40f05c:	cbz	x0, 40f55c <wcrtomb@plt+0xcc3c>
  40f060:	mov	x26, #0x0                   	// #0
  40f064:	mov	x21, #0x0                   	// #0
  40f068:	mov	x27, #0x0                   	// #0
  40f06c:	str	xzr, [sp, #96]
  40f070:	ldr	x28, [x25, x27]
  40f074:	cbz	x28, 40f168 <wcrtomb@plt+0xc848>
  40f078:	add	x4, x21, x21, lsl #2
  40f07c:	ldrsw	x1, [x19, #364]
  40f080:	ldr	x0, [x19, #296]
  40f084:	lsl	x26, x4, #4
  40f088:	cmp	x1, x21
  40f08c:	add	x0, x0, x26
  40f090:	ldr	x2, [x0, #56]
  40f094:	b.le	40f128 <wcrtomb@plt+0xc808>
  40f098:	ldrb	w0, [x20]
  40f09c:	cbz	x2, 40f3ec <wcrtomb@plt+0xcacc>
  40f0a0:	add	x0, x19, w0, sxtw
  40f0a4:	ldrb	w0, [x0, #716]
  40f0a8:	cbnz	w0, 40f280 <wcrtomb@plt+0xc960>
  40f0ac:	cmp	x23, x20
  40f0b0:	b.cc	40f0c4 <wcrtomb@plt+0xc7a4>  // b.lo, b.ul, b.last
  40f0b4:	b	40f278 <wcrtomb@plt+0xc958>
  40f0b8:	add	x23, x23, x27
  40f0bc:	cmp	x23, x20
  40f0c0:	b.cs	40f110 <wcrtomb@plt+0xc7f0>  // b.hs, b.nlast
  40f0c4:	ldrb	w0, [x23]
  40f0c8:	mov	x27, #0x1                   	// #1
  40f0cc:	add	x0, x19, x0, lsl #2
  40f0d0:	ldr	w0, [x0, #1308]
  40f0d4:	cmn	w0, #0x1
  40f0d8:	b.ne	40f0b8 <wcrtomb@plt+0xc798>  // b.any
  40f0dc:	mov	x1, x23
  40f0e0:	mov	x3, x24
  40f0e4:	sub	x2, x22, x23
  40f0e8:	add	x0, sp, #0x84
  40f0ec:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  40f0f0:	sub	x1, x0, #0x1
  40f0f4:	cmn	x1, #0x4
  40f0f8:	b.hi	40f3e4 <wcrtomb@plt+0xcac4>  // b.pmore
  40f0fc:	sxtw	x27, w0
  40f100:	add	x23, x23, x27
  40f104:	cmp	x23, x20
  40f108:	b.cc	40f0c4 <wcrtomb@plt+0xc7a4>  // b.lo, b.ul, b.last
  40f10c:	nop
  40f110:	ldr	x0, [x19, #296]
  40f114:	mov	x20, x23
  40f118:	mov	x23, x20
  40f11c:	str	x20, [sp, #136]
  40f120:	add	x4, x0, x26
  40f124:	ldr	x2, [x4, #56]
  40f128:	cbz	x2, 40f144 <wcrtomb@plt+0xc824>
  40f12c:	ldrb	w0, [x20]
  40f130:	cmp	x22, x20
  40f134:	add	x0, x19, x0, lsl #2
  40f138:	ldr	w0, [x0, #1308]
  40f13c:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40f140:	b.eq	40f3a4 <wcrtomb@plt+0xca84>  // b.none
  40f144:	add	x0, x20, #0x1
  40f148:	str	x0, [sp, #136]
  40f14c:	mov	x26, x21
  40f150:	ldrb	w1, [x20]
  40f154:	mov	x20, x0
  40f158:	ldr	x21, [x28, x1, lsl #3]
  40f15c:	lsl	x27, x21, #3
  40f160:	ldr	x28, [x25, x27]
  40f164:	cbnz	x28, 40f078 <wcrtomb@plt+0xc758>
  40f168:	tbnz	x21, #63, 40f318 <wcrtomb@plt+0xc9f8>
  40f16c:	ldr	x0, [x19, #376]
  40f170:	ldrb	w2, [x20]
  40f174:	ldr	x0, [x0, x27]
  40f178:	cbz	x0, 40f300 <wcrtomb@plt+0xc9e0>
  40f17c:	ldr	x0, [x19, #384]
  40f180:	add	x1, x19, x2
  40f184:	ldrb	w0, [x0, x21]
  40f188:	ldrb	w1, [x1, #460]
  40f18c:	and	w0, w0, w1
  40f190:	tst	w0, #0xff
  40f194:	b.ne	40f58c <wcrtomb@plt+0xcc6c>  // b.any
  40f198:	add	x6, x21, x21, lsl #2
  40f19c:	cmp	x22, x20
  40f1a0:	lsl	x26, x6, #4
  40f1a4:	b.eq	40f29c <wcrtomb@plt+0xc97c>  // b.none
  40f1a8:	ldrsw	x0, [x19, #364]
  40f1ac:	cmp	x21, x0
  40f1b0:	b.ge	40f228 <wcrtomb@plt+0xc908>  // b.tcont
  40f1b4:	add	x2, x19, x2
  40f1b8:	ldrb	w0, [x2, #716]
  40f1bc:	cbnz	w0, 40f28c <wcrtomb@plt+0xc96c>
  40f1c0:	cmp	x23, x20
  40f1c4:	b.cc	40f1d8 <wcrtomb@plt+0xc8b8>  // b.lo, b.ul, b.last
  40f1c8:	b	40f220 <wcrtomb@plt+0xc900>
  40f1cc:	add	x23, x23, x28
  40f1d0:	cmp	x23, x20
  40f1d4:	b.cs	40f220 <wcrtomb@plt+0xc900>  // b.hs, b.nlast
  40f1d8:	ldrb	w0, [x23]
  40f1dc:	mov	x28, #0x1                   	// #1
  40f1e0:	add	x0, x19, x0, lsl #2
  40f1e4:	ldr	w0, [x0, #1308]
  40f1e8:	cmn	w0, #0x1
  40f1ec:	b.ne	40f1cc <wcrtomb@plt+0xc8ac>  // b.any
  40f1f0:	mov	x1, x23
  40f1f4:	mov	x3, x24
  40f1f8:	sub	x2, x22, x23
  40f1fc:	add	x0, sp, #0x84
  40f200:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  40f204:	sub	x1, x0, #0x1
  40f208:	cmn	x1, #0x4
  40f20c:	b.hi	40f294 <wcrtomb@plt+0xc974>  // b.pmore
  40f210:	sxtw	x28, w0
  40f214:	add	x23, x23, x28
  40f218:	cmp	x23, x20
  40f21c:	b.cc	40f1d8 <wcrtomb@plt+0xc8b8>  // b.lo, b.ul, b.last
  40f220:	mov	x20, x23
  40f224:	str	x23, [sp, #136]
  40f228:	ldr	x0, [x19, #296]
  40f22c:	add	x6, x0, x26
  40f230:	ldr	x0, [x6, #56]
  40f234:	cbz	x0, 40f250 <wcrtomb@plt+0xc930>
  40f238:	ldrb	w0, [x20]
  40f23c:	cmp	x22, x20
  40f240:	add	x0, x19, x0, lsl #2
  40f244:	ldr	w0, [x0, #1308]
  40f248:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40f24c:	b.eq	40f3a4 <wcrtomb@plt+0xca84>  // b.none
  40f250:	ldr	x1, [x19, #376]
  40f254:	add	x0, x20, #0x1
  40f258:	mov	x26, x21
  40f25c:	ldr	x1, [x1, x27]
  40f260:	str	x0, [sp, #136]
  40f264:	ldrb	w2, [x20]
  40f268:	mov	x20, x0
  40f26c:	ldr	x21, [x1, x2, lsl #3]
  40f270:	lsl	x27, x21, #3
  40f274:	b	40f070 <wcrtomb@plt+0xc750>
  40f278:	mov	x20, x23
  40f27c:	nop
  40f280:	mov	x23, x20
  40f284:	str	x20, [sp, #136]
  40f288:	b	40f128 <wcrtomb@plt+0xc808>
  40f28c:	mov	x23, x20
  40f290:	b	40f220 <wcrtomb@plt+0xc900>
  40f294:	str	xzr, [x24]
  40f298:	b	40f1cc <wcrtomb@plt+0xc8ac>
  40f29c:	ldr	x0, [x19, #296]
  40f2a0:	add	x0, x0, x26
  40f2a4:	ldrh	w1, [x0, #34]
  40f2a8:	ldrb	w0, [x0, #32]
  40f2ac:	and	w0, w0, w1, lsr #6
  40f2b0:	tst	x0, #0x7
  40f2b4:	b.eq	40f1a8 <wcrtomb@plt+0xc888>  // b.none
  40f2b8:	mov	x28, x22
  40f2bc:	nop
  40f2c0:	ldr	x1, [sp, #120]
  40f2c4:	cbz	x1, 40f2d8 <wcrtomb@plt+0xc9b8>
  40f2c8:	ldr	x0, [x1]
  40f2cc:	ldr	x2, [sp, #96]
  40f2d0:	add	x26, x0, x2
  40f2d4:	str	x26, [x1]
  40f2d8:	ldrb	w1, [sp, #116]
  40f2dc:	mov	x0, x28
  40f2e0:	strb	w1, [x22]
  40f2e4:	ldp	x19, x20, [sp, #16]
  40f2e8:	ldp	x21, x22, [sp, #32]
  40f2ec:	ldp	x23, x24, [sp, #48]
  40f2f0:	ldp	x25, x26, [sp, #64]
  40f2f4:	ldp	x27, x28, [sp, #80]
  40f2f8:	ldp	x29, x30, [sp], #144
  40f2fc:	ret
  40f300:	mov	x1, x19
  40f304:	mov	x0, x21
  40f308:	bl	40e318 <wcrtomb@plt+0xb9f8>
  40f30c:	ldr	x20, [sp, #136]
  40f310:	ldr	x25, [x19, #368]
  40f314:	b	40f070 <wcrtomb@plt+0xc750>
  40f318:	cmn	x21, #0x2
  40f31c:	b.eq	40f380 <wcrtomb@plt+0xca60>  // b.none
  40f320:	cmp	x22, x20
  40f324:	b.cc	40f2c0 <wcrtomb@plt+0xc9a0>  // b.lo, b.ul, b.last
  40f328:	ldurb	w0, [x20, #-1]
  40f32c:	ldr	w1, [sp, #108]
  40f330:	cmp	w0, w1
  40f334:	b.ne	40f2c0 <wcrtomb@plt+0xc9a0>  // b.any
  40f338:	ldr	x0, [x19, #392]
  40f33c:	ldr	x21, [x0, x26, lsl #3]
  40f340:	tbnz	x21, #63, 40f2c0 <wcrtomb@plt+0xc9a0>
  40f344:	ldr	x0, [sp, #96]
  40f348:	add	x0, x0, #0x1
  40f34c:	str	x0, [sp, #96]
  40f350:	ldr	w0, [sp, #112]
  40f354:	cbnz	w0, 40f374 <wcrtomb@plt+0xca54>
  40f358:	add	x0, x19, w1, sxtw
  40f35c:	ldrb	w0, [x0, #460]
  40f360:	cmp	w0, #0x4
  40f364:	b.eq	40f3d4 <wcrtomb@plt+0xcab4>  // b.none
  40f368:	cmp	w0, #0x2
  40f36c:	b.eq	40f420 <wcrtomb@plt+0xcb00>  // b.none
  40f370:	ldr	x21, [x19, #400]
  40f374:	mov	x23, x20
  40f378:	lsl	x27, x21, #3
  40f37c:	b	40f070 <wcrtomb@plt+0xc750>
  40f380:	ldurb	w2, [x20, #-1]
  40f384:	mov	x1, x19
  40f388:	mov	x0, x26
  40f38c:	bl	40e318 <wcrtomb@plt+0xb9f8>
  40f390:	mov	x21, x0
  40f394:	lsl	x27, x0, #3
  40f398:	ldr	x20, [sp, #136]
  40f39c:	ldr	x25, [x19, #368]
  40f3a0:	b	40f070 <wcrtomb@plt+0xc750>
  40f3a4:	mov	x1, x21
  40f3a8:	mov	x3, x22
  40f3ac:	add	x2, sp, #0x88
  40f3b0:	mov	x0, x19
  40f3b4:	bl	40ec68 <wcrtomb@plt+0xc348>
  40f3b8:	mov	x26, x21
  40f3bc:	ldr	x23, [sp, #136]
  40f3c0:	mov	x21, x0
  40f3c4:	lsl	x27, x0, #3
  40f3c8:	mov	x20, x23
  40f3cc:	ldr	x25, [x19, #368]
  40f3d0:	b	40f070 <wcrtomb@plt+0xc750>
  40f3d4:	mov	x23, x20
  40f3d8:	mov	x21, #0x0                   	// #0
  40f3dc:	mov	x27, #0x0                   	// #0
  40f3e0:	b	40f070 <wcrtomb@plt+0xc750>
  40f3e4:	str	xzr, [x24]
  40f3e8:	b	40f0b8 <wcrtomb@plt+0xc798>
  40f3ec:	mov	w1, w0
  40f3f0:	ldr	x1, [x28, x1, lsl #3]
  40f3f4:	cmp	x21, x1
  40f3f8:	b.ne	40f0a0 <wcrtomb@plt+0xc780>  // b.any
  40f3fc:	add	x1, x20, #0x1
  40f400:	str	x1, [sp, #136]
  40f404:	mov	x20, x1
  40f408:	ldrb	w3, [x1], #1
  40f40c:	mov	x0, x3
  40f410:	ldr	x3, [x28, x3, lsl #3]
  40f414:	cmp	x21, x3
  40f418:	b.eq	40f400 <wcrtomb@plt+0xcae0>  // b.none
  40f41c:	b	40f0a0 <wcrtomb@plt+0xc780>
  40f420:	ldr	w4, [x19, #364]
  40f424:	mov	x23, x20
  40f428:	sub	w4, w4, #0x1
  40f42c:	sxtw	x21, w4
  40f430:	sbfiz	x27, x4, #3, #32
  40f434:	b	40f070 <wcrtomb@plt+0xc750>
  40f438:	ldr	w20, [x19, #364]
  40f43c:	cmp	x0, w20, sxtw
  40f440:	sxtw	x21, w20
  40f444:	b.le	40f488 <wcrtomb@plt+0xcb68>
  40f448:	mov	w0, #0x50                  	// #80
  40f44c:	smull	x20, w20, w0
  40f450:	ldr	x0, [x19, #296]
  40f454:	add	x21, x21, #0x1
  40f458:	add	x0, x0, x20
  40f45c:	ldr	x0, [x0, #8]
  40f460:	bl	4026b0 <free@plt>
  40f464:	ldr	x0, [x19, #296]
  40f468:	add	x0, x0, x20
  40f46c:	add	x20, x20, #0x50
  40f470:	ldr	x0, [x0, #48]
  40f474:	bl	4026b0 <free@plt>
  40f478:	ldr	x0, [x19, #304]
  40f47c:	cmp	x21, x0
  40f480:	b.lt	40f450 <wcrtomb@plt+0xcb30>  // b.tstop
  40f484:	ldrsw	x21, [x19, #364]
  40f488:	ldr	x1, [x19, #368]
  40f48c:	str	x21, [x19, #304]
  40f490:	ldr	x0, [x19, #352]
  40f494:	cbz	x1, 40f4dc <wcrtomb@plt+0xcbbc>
  40f498:	cmp	x0, #0x0
  40f49c:	b.le	40f4d8 <wcrtomb@plt+0xcbb8>
  40f4a0:	mov	x20, #0x0                   	// #0
  40f4a4:	nop
  40f4a8:	ldr	x0, [x1, x20, lsl #3]
  40f4ac:	bl	4026b0 <free@plt>
  40f4b0:	ldr	x0, [x19, #376]
  40f4b4:	ldr	x0, [x0, x20, lsl #3]
  40f4b8:	bl	4026b0 <free@plt>
  40f4bc:	ldp	x1, x0, [x19, #368]
  40f4c0:	str	xzr, [x0, x20, lsl #3]
  40f4c4:	ldr	x0, [x19, #352]
  40f4c8:	str	xzr, [x1, x20, lsl #3]
  40f4cc:	add	x20, x20, #0x1
  40f4d0:	cmp	x20, x0
  40f4d4:	b.lt	40f4a8 <wcrtomb@plt+0xcb88>  // b.tstop
  40f4d8:	str	wzr, [x19, #360]
  40f4dc:	ldrb	w1, [x19, #1048]
  40f4e0:	cbz	w1, 40f02c <wcrtomb@plt+0xc70c>
  40f4e4:	ldr	x1, [x19, #432]
  40f4e8:	cbz	x1, 40f02c <wcrtomb@plt+0xc70c>
  40f4ec:	tbnz	x0, #63, 40f518 <wcrtomb@plt+0xcbf8>
  40f4f0:	mov	x20, #0xffffffffffffffff    	// #-1
  40f4f4:	nop
  40f4f8:	ldr	x0, [x1, x20, lsl #3]
  40f4fc:	bl	4026b0 <free@plt>
  40f500:	ldr	x1, [x19, #432]
  40f504:	ldr	x0, [x19, #352]
  40f508:	str	xzr, [x1, x20, lsl #3]
  40f50c:	add	x20, x20, #0x1
  40f510:	cmp	x20, x0
  40f514:	b.lt	40f4f8 <wcrtomb@plt+0xcbd8>  // b.tstop
  40f518:	ldr	w2, [x19, #364]
  40f51c:	cmp	w2, #0x0
  40f520:	b.le	40f544 <wcrtomb@plt+0xcc24>
  40f524:	ldr	x1, [x19, #296]
  40f528:	mov	w4, #0x50                  	// #80
  40f52c:	mov	x3, #0xffffffffffffffff    	// #-1
  40f530:	add	x1, x1, #0x48
  40f534:	smaddl	x2, w2, w4, x1
  40f538:	str	x3, [x1], #80
  40f53c:	cmp	x2, x1
  40f540:	b.ne	40f538 <wcrtomb@plt+0xcc18>  // b.any
  40f544:	str	xzr, [x19, #440]
  40f548:	cbnz	x0, 40f030 <wcrtomb@plt+0xc710>
  40f54c:	nop
  40f550:	mov	x0, x19
  40f554:	bl	40d7c8 <wcrtomb@plt+0xaea8>
  40f558:	b	40f030 <wcrtomb@plt+0xc710>
  40f55c:	ldr	x21, [x19, #176]
  40f560:	cmp	xzr, x21, lsr #60
  40f564:	lsl	x0, x21, #4
  40f568:	cset	x1, ne  // ne = any
  40f56c:	tbnz	x21, #59, 40f594 <wcrtomb@plt+0xcc74>
  40f570:	cbnz	x1, 40f594 <wcrtomb@plt+0xcc74>
  40f574:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  40f578:	str	x0, [x19, #408]
  40f57c:	add	x1, x19, #0x198
  40f580:	ldr	x20, [sp, #136]
  40f584:	stp	xzr, x21, [x1, #8]
  40f588:	b	40f060 <wcrtomb@plt+0xc740>
  40f58c:	mov	x28, x20
  40f590:	b	40f2c0 <wcrtomb@plt+0xc9a0>
  40f594:	bl	41b778 <wcrtomb@plt+0x18e58>
  40f598:	stp	x29, x30, [sp, #-112]!
  40f59c:	mov	x29, sp
  40f5a0:	stp	x19, x20, [sp, #16]
  40f5a4:	mov	x19, x0
  40f5a8:	mov	x20, x1
  40f5ac:	ldr	x0, [x0, #304]
  40f5b0:	stp	x21, x22, [sp, #32]
  40f5b4:	mov	x21, x2
  40f5b8:	stp	x23, x24, [sp, #48]
  40f5bc:	mov	x22, x4
  40f5c0:	cmp	x0, #0x3ff
  40f5c4:	stp	x25, x26, [sp, #64]
  40f5c8:	and	w26, w3, #0xff
  40f5cc:	stp	x27, x28, [sp, #80]
  40f5d0:	b.gt	40f81c <wcrtomb@plt+0xcefc>
  40f5d4:	ldr	x0, [x19, #352]
  40f5d8:	cbz	x0, 40f938 <wcrtomb@plt+0xd018>
  40f5dc:	ldr	x3, [x19, #368]
  40f5e0:	mov	x28, #0x0                   	// #0
  40f5e4:	ldrb	w24, [x19, #459]
  40f5e8:	lsl	x5, x28, #3
  40f5ec:	ldrb	w0, [x21]
  40f5f0:	mov	x23, #0x0                   	// #0
  40f5f4:	strb	w24, [x21]
  40f5f8:	mov	x1, #0x0                   	// #0
  40f5fc:	str	w0, [sp, #108]
  40f600:	add	x25, x19, w24, sxtw
  40f604:	ldr	x2, [x3, x28, lsl #3]
  40f608:	mov	x0, x28
  40f60c:	cbz	x2, 40f6f0 <wcrtomb@plt+0xcdd0>
  40f610:	mov	x1, x20
  40f614:	ldrsw	x0, [x19, #364]
  40f618:	cmp	x0, x28
  40f61c:	ldrb	w0, [x1], #1
  40f620:	ldr	x27, [x2, x0, lsl #3]
  40f624:	b.le	40f758 <wcrtomb@plt+0xce38>
  40f628:	cmp	x28, x27
  40f62c:	b.ne	40f74c <wcrtomb@plt+0xce2c>  // b.any
  40f630:	ldrb	w5, [x1]
  40f634:	mov	x0, x20
  40f638:	mov	x20, x1
  40f63c:	add	x1, x1, #0x1
  40f640:	ldr	x27, [x2, x5, lsl #3]
  40f644:	cmp	x28, x27
  40f648:	b.eq	40f630 <wcrtomb@plt+0xcd10>  // b.none
  40f64c:	mov	x2, x20
  40f650:	add	x20, x0, #0x2
  40f654:	ldr	x1, [x3, x27, lsl #3]
  40f658:	mov	x0, x27
  40f65c:	lsl	x5, x27, #3
  40f660:	cbnz	x1, 40f6ac <wcrtomb@plt+0xcd8c>
  40f664:	tbnz	x27, #63, 40f6fc <wcrtomb@plt+0xcddc>
  40f668:	ldr	x1, [x19, #376]
  40f66c:	ldrb	w2, [x20]
  40f670:	ldr	x6, [x1, x5]
  40f674:	cbz	x6, 40f7d4 <wcrtomb@plt+0xceb4>
  40f678:	ldr	x1, [x19, #384]
  40f67c:	add	x5, x19, w2, sxtw
  40f680:	ldrb	w1, [x1, x0]
  40f684:	ldrb	w5, [x5, #460]
  40f688:	and	w1, w1, w5
  40f68c:	tst	w1, #0xff
  40f690:	b.ne	40f944 <wcrtomb@plt+0xd024>  // b.any
  40f694:	cmp	x21, x20
  40f698:	b.eq	40f778 <wcrtomb@plt+0xce58>  // b.none
  40f69c:	add	x20, x20, #0x1
  40f6a0:	mov	x28, x27
  40f6a4:	ldr	x0, [x6, x2, lsl #3]
  40f6a8:	b	40f6d8 <wcrtomb@plt+0xcdb8>
  40f6ac:	ldrb	w0, [x2, #1]
  40f6b0:	ldr	x0, [x1, x0, lsl #3]
  40f6b4:	cmp	x0, x27
  40f6b8:	b.ne	40f6d0 <wcrtomb@plt+0xcdb0>  // b.any
  40f6bc:	nop
  40f6c0:	ldrb	w0, [x20, #1]!
  40f6c4:	ldr	x0, [x1, x0, lsl #3]
  40f6c8:	cmp	x0, x27
  40f6cc:	b.eq	40f6c0 <wcrtomb@plt+0xcda0>  // b.none
  40f6d0:	add	x20, x20, #0x1
  40f6d4:	mov	x28, x27
  40f6d8:	mov	x1, x28
  40f6dc:	mov	x28, x0
  40f6e0:	mov	x0, x28
  40f6e4:	lsl	x5, x28, #3
  40f6e8:	ldr	x2, [x3, x28, lsl #3]
  40f6ec:	cbnz	x2, 40f610 <wcrtomb@plt+0xccf0>
  40f6f0:	mov	x27, x28
  40f6f4:	mov	x28, x1
  40f6f8:	tbz	x27, #63, 40f668 <wcrtomb@plt+0xcd48>
  40f6fc:	cmn	x27, #0x2
  40f700:	b.eq	40f7ec <wcrtomb@plt+0xcecc>  // b.none
  40f704:	cmp	x21, x20
  40f708:	b.cc	40f814 <wcrtomb@plt+0xcef4>  // b.lo, b.ul, b.last
  40f70c:	ldurb	w0, [x20, #-1]
  40f710:	cmp	w0, w24
  40f714:	b.ne	40f814 <wcrtomb@plt+0xcef4>  // b.any
  40f718:	ldr	x0, [x19, #392]
  40f71c:	ldr	x0, [x0, x28, lsl #3]
  40f720:	tbnz	x0, #63, 40f814 <wcrtomb@plt+0xcef4>
  40f724:	add	x23, x23, #0x1
  40f728:	cbnz	w26, 40f6d8 <wcrtomb@plt+0xcdb8>
  40f72c:	ldrb	w1, [x25, #460]
  40f730:	mov	x0, #0x0                   	// #0
  40f734:	cmp	w1, #0x4
  40f738:	b.eq	40f6d8 <wcrtomb@plt+0xcdb8>  // b.none
  40f73c:	cmp	w1, #0x2
  40f740:	b.eq	40f804 <wcrtomb@plt+0xcee4>  // b.none
  40f744:	ldr	x0, [x19, #400]
  40f748:	b	40f6d8 <wcrtomb@plt+0xcdb8>
  40f74c:	mov	x2, x20
  40f750:	mov	x20, x1
  40f754:	b	40f654 <wcrtomb@plt+0xcd34>
  40f758:	ldr	x2, [x3, x27, lsl #3]
  40f75c:	mov	x0, x27
  40f760:	lsl	x5, x27, #3
  40f764:	cbz	x2, 40f94c <wcrtomb@plt+0xd02c>
  40f768:	ldrb	w0, [x20, #1]
  40f76c:	mov	x20, x1
  40f770:	ldr	x0, [x2, x0, lsl #3]
  40f774:	b	40f6d0 <wcrtomb@plt+0xcdb0>
  40f778:	ldr	x1, [x19, #296]
  40f77c:	add	x0, x0, x0, lsl #2
  40f780:	add	x0, x1, x0, lsl #4
  40f784:	ldrh	w1, [x0, #34]
  40f788:	ldrb	w0, [x0, #32]
  40f78c:	and	w0, w0, w1, lsr #6
  40f790:	tst	x0, #0x7
  40f794:	b.eq	40f69c <wcrtomb@plt+0xcd7c>  // b.none
  40f798:	mov	x0, x21
  40f79c:	nop
  40f7a0:	cbz	x22, 40f7b0 <wcrtomb@plt+0xce90>
  40f7a4:	ldr	x1, [x22]
  40f7a8:	add	x23, x1, x23
  40f7ac:	str	x23, [x22]
  40f7b0:	ldrb	w1, [sp, #108]
  40f7b4:	strb	w1, [x21]
  40f7b8:	ldp	x19, x20, [sp, #16]
  40f7bc:	ldp	x21, x22, [sp, #32]
  40f7c0:	ldp	x23, x24, [sp, #48]
  40f7c4:	ldp	x25, x26, [sp, #64]
  40f7c8:	ldp	x27, x28, [sp, #80]
  40f7cc:	ldp	x29, x30, [sp], #112
  40f7d0:	ret
  40f7d4:	mov	x1, x19
  40f7d8:	mov	x0, x27
  40f7dc:	bl	40e318 <wcrtomb@plt+0xb9f8>
  40f7e0:	mov	x0, x27
  40f7e4:	ldr	x3, [x19, #368]
  40f7e8:	b	40f6d8 <wcrtomb@plt+0xcdb8>
  40f7ec:	ldurb	w2, [x20, #-1]
  40f7f0:	mov	x1, x19
  40f7f4:	mov	x0, x28
  40f7f8:	bl	40e318 <wcrtomb@plt+0xb9f8>
  40f7fc:	ldr	x3, [x19, #368]
  40f800:	b	40f6d8 <wcrtomb@plt+0xcdb8>
  40f804:	ldr	w0, [x19, #364]
  40f808:	sub	w0, w0, #0x1
  40f80c:	sxtw	x0, w0
  40f810:	b	40f6d8 <wcrtomb@plt+0xcdb8>
  40f814:	mov	x0, #0x0                   	// #0
  40f818:	b	40f7a0 <wcrtomb@plt+0xce80>
  40f81c:	ldr	w23, [x19, #364]
  40f820:	cmp	x0, w23, sxtw
  40f824:	sxtw	x24, w23
  40f828:	b.le	40f870 <wcrtomb@plt+0xcf50>
  40f82c:	mov	w0, #0x50                  	// #80
  40f830:	smull	x23, w23, w0
  40f834:	nop
  40f838:	ldr	x0, [x19, #296]
  40f83c:	add	x24, x24, #0x1
  40f840:	add	x0, x0, x23
  40f844:	ldr	x0, [x0, #8]
  40f848:	bl	4026b0 <free@plt>
  40f84c:	ldr	x0, [x19, #296]
  40f850:	add	x0, x0, x23
  40f854:	add	x23, x23, #0x50
  40f858:	ldr	x0, [x0, #48]
  40f85c:	bl	4026b0 <free@plt>
  40f860:	ldr	x0, [x19, #304]
  40f864:	cmp	x24, x0
  40f868:	b.lt	40f838 <wcrtomb@plt+0xcf18>  // b.tstop
  40f86c:	ldrsw	x24, [x19, #364]
  40f870:	ldr	x1, [x19, #368]
  40f874:	str	x24, [x19, #304]
  40f878:	ldr	x0, [x19, #352]
  40f87c:	cbz	x1, 40f8c4 <wcrtomb@plt+0xcfa4>
  40f880:	cmp	x0, #0x0
  40f884:	b.le	40f8c0 <wcrtomb@plt+0xcfa0>
  40f888:	mov	x23, #0x0                   	// #0
  40f88c:	nop
  40f890:	ldr	x0, [x1, x23, lsl #3]
  40f894:	bl	4026b0 <free@plt>
  40f898:	ldr	x0, [x19, #376]
  40f89c:	ldr	x0, [x0, x23, lsl #3]
  40f8a0:	bl	4026b0 <free@plt>
  40f8a4:	ldp	x1, x0, [x19, #368]
  40f8a8:	str	xzr, [x0, x23, lsl #3]
  40f8ac:	ldr	x0, [x19, #352]
  40f8b0:	str	xzr, [x1, x23, lsl #3]
  40f8b4:	add	x23, x23, #0x1
  40f8b8:	cmp	x23, x0
  40f8bc:	b.lt	40f890 <wcrtomb@plt+0xcf70>  // b.tstop
  40f8c0:	str	wzr, [x19, #360]
  40f8c4:	ldrb	w1, [x19, #1048]
  40f8c8:	cbz	w1, 40f5d8 <wcrtomb@plt+0xccb8>
  40f8cc:	ldr	x1, [x19, #432]
  40f8d0:	cbz	x1, 40f5d8 <wcrtomb@plt+0xccb8>
  40f8d4:	tbnz	x0, #63, 40f900 <wcrtomb@plt+0xcfe0>
  40f8d8:	mov	x23, #0xffffffffffffffff    	// #-1
  40f8dc:	nop
  40f8e0:	ldr	x0, [x1, x23, lsl #3]
  40f8e4:	bl	4026b0 <free@plt>
  40f8e8:	ldr	x1, [x19, #432]
  40f8ec:	ldr	x0, [x19, #352]
  40f8f0:	str	xzr, [x1, x23, lsl #3]
  40f8f4:	add	x23, x23, #0x1
  40f8f8:	cmp	x23, x0
  40f8fc:	b.lt	40f8e0 <wcrtomb@plt+0xcfc0>  // b.tstop
  40f900:	ldr	w2, [x19, #364]
  40f904:	cmp	w2, #0x0
  40f908:	b.le	40f92c <wcrtomb@plt+0xd00c>
  40f90c:	ldr	x1, [x19, #296]
  40f910:	mov	w4, #0x50                  	// #80
  40f914:	mov	x3, #0xffffffffffffffff    	// #-1
  40f918:	add	x1, x1, #0x48
  40f91c:	smaddl	x2, w2, w4, x1
  40f920:	str	x3, [x1], #80
  40f924:	cmp	x2, x1
  40f928:	b.ne	40f920 <wcrtomb@plt+0xd000>  // b.any
  40f92c:	str	xzr, [x19, #440]
  40f930:	cbnz	x0, 40f5dc <wcrtomb@plt+0xccbc>
  40f934:	nop
  40f938:	mov	x0, x19
  40f93c:	bl	40d7c8 <wcrtomb@plt+0xaea8>
  40f940:	b	40f5dc <wcrtomb@plt+0xccbc>
  40f944:	mov	x0, x20
  40f948:	b	40f7a0 <wcrtomb@plt+0xce80>
  40f94c:	mov	x20, x1
  40f950:	b	40f664 <wcrtomb@plt+0xcd44>
  40f954:	nop
  40f958:	stp	x29, x30, [sp, #-48]!
  40f95c:	mov	x29, sp
  40f960:	ldp	x3, x4, [x0, #152]
  40f964:	stp	x19, x20, [sp, #16]
  40f968:	mov	x19, x0
  40f96c:	stp	x21, x22, [sp, #32]
  40f970:	mov	x20, x1
  40f974:	and	w22, w2, #0xff
  40f978:	cmp	x4, x3
  40f97c:	b.eq	40fa30 <wcrtomb@plt+0xd110>  // b.none
  40f980:	ldrb	w0, [x19, #1048]
  40f984:	cbz	w0, 40fa00 <wcrtomb@plt+0xd0e0>
  40f988:	ldr	x0, [x19, #280]
  40f98c:	strb	w22, [x0, x3]
  40f990:	ldr	x0, [x19, #144]
  40f994:	cmp	x20, #0x106
  40f998:	ldr	x3, [x19, #152]
  40f99c:	add	x1, x3, #0x1
  40f9a0:	str	x1, [x19, #152]
  40f9a4:	str	x20, [x0, x3, lsl #3]
  40f9a8:	b.gt	40fa18 <wcrtomb@plt+0xd0f8>
  40f9ac:	cmp	x20, #0x104
  40f9b0:	b.gt	40fad4 <wcrtomb@plt+0xd1b4>
  40f9b4:	cmp	x20, #0x100
  40f9b8:	b.eq	40f9d4 <wcrtomb@plt+0xd0b4>  // b.none
  40f9bc:	sub	x20, x20, #0x101
  40f9c0:	cmp	x20, #0x2
  40f9c4:	b.ls	40fa28 <wcrtomb@plt+0xd108>  // b.plast
  40f9c8:	ldr	x0, [x19, #176]
  40f9cc:	add	x0, x0, #0x1
  40f9d0:	str	x0, [x19, #176]
  40f9d4:	ldr	x0, [x19, #136]
  40f9d8:	add	x0, x0, #0x1
  40f9dc:	str	x0, [x19, #136]
  40f9e0:	ldr	x1, [x19, #168]
  40f9e4:	cmp	x0, x1
  40f9e8:	b.le	40f9f0 <wcrtomb@plt+0xd0d0>
  40f9ec:	str	x0, [x19, #168]
  40f9f0:	ldp	x19, x20, [sp, #16]
  40f9f4:	ldp	x21, x22, [sp, #32]
  40f9f8:	ldp	x29, x30, [sp], #48
  40f9fc:	ret
  40fa00:	ldr	x0, [x19, #144]
  40fa04:	add	x1, x3, #0x1
  40fa08:	str	x1, [x19, #152]
  40fa0c:	cmp	x20, #0x106
  40fa10:	str	x20, [x0, x3, lsl #3]
  40fa14:	b.le	40f9ac <wcrtomb@plt+0xd08c>
  40fa18:	cmp	x20, #0x112
  40fa1c:	b.ne	40f9c8 <wcrtomb@plt+0xd0a8>  // b.any
  40fa20:	strb	wzr, [x19, #192]
  40fa24:	b	40f9c8 <wcrtomb@plt+0xd0a8>
  40fa28:	ldr	x0, [x19, #136]
  40fa2c:	b	40f9e0 <wcrtomb@plt+0xd0c0>
  40fa30:	asr	x21, x4, #1
  40fa34:	adds	x21, x4, x21
  40fa38:	ldr	x0, [x0, #144]
  40fa3c:	b.vs	40fae8 <wcrtomb@plt+0xd1c8>
  40fa40:	asr	x1, x21, #63
  40fa44:	sbfx	x2, x21, #60, #1
  40fa48:	lsl	x3, x21, #3
  40fa4c:	extr	x1, x1, x21, #61
  40fa50:	cmp	x2, x1
  40fa54:	b.ne	40fae8 <wcrtomb@plt+0xd1c8>  // b.any
  40fa58:	cmp	x3, #0x7f
  40fa5c:	mov	x1, #0x80                  	// #128
  40fa60:	mov	x2, #0x10                  	// #16
  40fa64:	csel	x1, x3, x1, gt
  40fa68:	csel	x21, x21, x2, gt
  40fa6c:	cbz	x0, 40facc <wcrtomb@plt+0xd1ac>
  40fa70:	sub	x2, x21, x4
  40fa74:	cmp	x2, #0x0
  40fa78:	b.gt	40fa9c <wcrtomb@plt+0xd17c>
  40fa7c:	adds	x21, x4, #0x1
  40fa80:	b.vs	40fae4 <wcrtomb@plt+0xd1c4>
  40fa84:	asr	x2, x21, #63
  40fa88:	sbfx	x3, x21, #60, #1
  40fa8c:	lsl	x1, x21, #3
  40fa90:	extr	x2, x2, x21, #61
  40fa94:	cmp	x3, x2
  40fa98:	b.ne	40fae4 <wcrtomb@plt+0xd1c4>  // b.any
  40fa9c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40faa0:	str	x0, [x19, #144]
  40faa4:	ldrb	w1, [x19, #1048]
  40faa8:	str	x21, [x19, #160]
  40faac:	cbz	w1, 40f994 <wcrtomb@plt+0xd074>
  40fab0:	ldr	x0, [x19, #280]
  40fab4:	tbnz	x21, #63, 40fae4 <wcrtomb@plt+0xd1c4>
  40fab8:	mov	x1, x21
  40fabc:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40fac0:	str	x0, [x19, #280]
  40fac4:	ldr	x3, [x19, #152]
  40fac8:	b	40f980 <wcrtomb@plt+0xd060>
  40facc:	str	xzr, [x19, #160]
  40fad0:	b	40fa70 <wcrtomb@plt+0xd150>
  40fad4:	ldr	x0, [x19, #136]
  40fad8:	sub	x0, x0, #0x1
  40fadc:	str	x0, [x19, #136]
  40fae0:	b	40f9e0 <wcrtomb@plt+0xd0c0>
  40fae4:	bl	41b778 <wcrtomb@plt+0x18e58>
  40fae8:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  40faec:	mov	x21, #0xfffffffffffffff     	// #1152921504606846975
  40faf0:	cbnz	x0, 40fa70 <wcrtomb@plt+0xd150>
  40faf4:	b	40facc <wcrtomb@plt+0xd1ac>
  40faf8:	stp	x29, x30, [sp, #-144]!
  40fafc:	cmp	x1, #0x113
  40fb00:	mov	x29, sp
  40fb04:	ldrb	w2, [x0, #1048]
  40fb08:	stp	x25, x26, [sp, #64]
  40fb0c:	cset	w26, eq  // eq = none
  40fb10:	ands	w2, w26, w2
  40fb14:	stp	x27, x28, [sp, #80]
  40fb18:	mov	x27, x0
  40fb1c:	str	w2, [sp, #108]
  40fb20:	b.eq	40fd34 <wcrtomb@plt+0xd414>  // b.none
  40fb24:	ldr	x1, [x0, #104]
  40fb28:	cmp	x1, #0x0
  40fb2c:	b.le	40fd94 <wcrtomb@plt+0xd474>
  40fb30:	mov	w25, #0x0                   	// #0
  40fb34:	stp	x19, x20, [sp, #16]
  40fb38:	stp	x21, x22, [sp, #32]
  40fb3c:	mov	x22, #0x0                   	// #0
  40fb40:	stp	x23, x24, [sp, #48]
  40fb44:	nop
  40fb48:	add	x2, sp, #0x78
  40fb4c:	ldr	x1, [x27, #96]
  40fb50:	add	x0, sp, #0x80
  40fb54:	ldr	w1, [x1, x22, lsl #2]
  40fb58:	str	xzr, [sp, #120]
  40fb5c:	bl	402920 <wcrtomb@plt>
  40fb60:	mov	x19, x0
  40fb64:	cmn	x0, #0x1
  40fb68:	b.eq	40fd60 <wcrtomb@plt+0xd440>  // b.none
  40fb6c:	ldrb	w1, [sp, #128]
  40fb70:	cmp	w0, #0x1
  40fb74:	mov	w23, w0
  40fb78:	b.eq	40fcc4 <wcrtomb@plt+0xd3a4>  // b.none
  40fb7c:	mov	x0, x27
  40fb80:	mov	w2, #0x1                   	// #1
  40fb84:	bl	40f958 <wcrtomb@plt+0xd038>
  40fb88:	cmp	w19, #0x1
  40fb8c:	b.le	40fcd0 <wcrtomb@plt+0xd3b0>
  40fb90:	sub	w19, w19, #0x1
  40fb94:	add	x20, sp, #0x81
  40fb98:	mov	w28, #0x1                   	// #1
  40fb9c:	b	40fbf8 <wcrtomb@plt+0xd2d8>
  40fba0:	ldr	x0, [x27, #280]
  40fba4:	strb	w21, [x0, x1]
  40fba8:	ldp	x0, x1, [x27, #144]
  40fbac:	add	x2, x1, #0x1
  40fbb0:	str	x2, [x27, #152]
  40fbb4:	str	x24, [x0, x1, lsl #3]
  40fbb8:	ldp	x2, x1, [x27, #168]
  40fbbc:	ldr	x0, [x27, #136]
  40fbc0:	add	x0, x0, #0x1
  40fbc4:	str	x0, [x27, #136]
  40fbc8:	add	x1, x1, #0x1
  40fbcc:	str	x1, [x27, #176]
  40fbd0:	cmp	x0, x2
  40fbd4:	b.le	40fbdc <wcrtomb@plt+0xd2bc>
  40fbd8:	str	x0, [x27, #168]
  40fbdc:	add	w28, w28, #0x1
  40fbe0:	mov	x0, x27
  40fbe4:	mov	x1, #0x105                 	// #261
  40fbe8:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  40fbec:	add	x20, x20, #0x1
  40fbf0:	cmp	w23, w28
  40fbf4:	b.eq	40fcd0 <wcrtomb@plt+0xd3b0>  // b.none
  40fbf8:	ldp	x1, x4, [x27, #152]
  40fbfc:	cmp	w28, w19
  40fc00:	cset	w21, eq  // eq = none
  40fc04:	ldrb	w24, [x20]
  40fc08:	lsl	w21, w21, #1
  40fc0c:	cmp	x4, x1
  40fc10:	b.eq	40fc24 <wcrtomb@plt+0xd304>  // b.none
  40fc14:	ldrb	w0, [x27, #1048]
  40fc18:	cbnz	w0, 40fba0 <wcrtomb@plt+0xd280>
  40fc1c:	ldr	x0, [x27, #144]
  40fc20:	b	40fbac <wcrtomb@plt+0xd28c>
  40fc24:	asr	x2, x4, #1
  40fc28:	adds	x2, x4, x2
  40fc2c:	ldr	x0, [x27, #144]
  40fc30:	b.vs	40fdc0 <wcrtomb@plt+0xd4a0>
  40fc34:	asr	x6, x2, #63
  40fc38:	sbfx	x7, x2, #60, #1
  40fc3c:	lsl	x1, x2, #3
  40fc40:	extr	x6, x6, x2, #61
  40fc44:	cmp	x7, x6
  40fc48:	b.ne	40fdc0 <wcrtomb@plt+0xd4a0>  // b.any
  40fc4c:	cmp	x1, #0x7f
  40fc50:	mov	x3, #0x10                  	// #16
  40fc54:	csel	x26, x2, x3, gt
  40fc58:	mov	x2, #0x80                  	// #128
  40fc5c:	csel	x1, x1, x2, gt
  40fc60:	cbz	x0, 40fd58 <wcrtomb@plt+0xd438>
  40fc64:	sub	x6, x26, x4
  40fc68:	cmp	x6, #0x0
  40fc6c:	b.gt	40fc94 <wcrtomb@plt+0xd374>
  40fc70:	adds	x2, x4, #0x1
  40fc74:	mov	x26, x2
  40fc78:	b.vs	40fdbc <wcrtomb@plt+0xd49c>
  40fc7c:	asr	x4, x2, #63
  40fc80:	sbfx	x6, x2, #60, #1
  40fc84:	lsl	x1, x2, #3
  40fc88:	extr	x4, x4, x2, #61
  40fc8c:	cmp	x6, x4
  40fc90:	b.ne	40fdbc <wcrtomb@plt+0xd49c>  // b.any
  40fc94:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40fc98:	str	x0, [x27, #144]
  40fc9c:	ldrb	w1, [x27, #1048]
  40fca0:	str	x26, [x27, #160]
  40fca4:	cbz	w1, 40fd50 <wcrtomb@plt+0xd430>
  40fca8:	ldr	x0, [x27, #280]
  40fcac:	tbnz	x26, #63, 40fdbc <wcrtomb@plt+0xd49c>
  40fcb0:	mov	x1, x26
  40fcb4:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40fcb8:	str	x0, [x27, #280]
  40fcbc:	ldr	x1, [x27, #152]
  40fcc0:	b	40fc14 <wcrtomb@plt+0xd2f4>
  40fcc4:	mov	x0, x27
  40fcc8:	mov	w2, #0x3                   	// #3
  40fccc:	bl	40f958 <wcrtomb@plt+0xd038>
  40fcd0:	cbnz	w25, 40fcec <wcrtomb@plt+0xd3cc>
  40fcd4:	ldr	x0, [x27, #104]
  40fcd8:	add	x22, x22, #0x1
  40fcdc:	cmp	x0, x22
  40fce0:	b.le	40fd08 <wcrtomb@plt+0xd3e8>
  40fce4:	ldr	w25, [sp, #108]
  40fce8:	b	40fb48 <wcrtomb@plt+0xd228>
  40fcec:	mov	x0, x27
  40fcf0:	mov	x1, #0x106                 	// #262
  40fcf4:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  40fcf8:	add	x22, x22, #0x1
  40fcfc:	ldr	x0, [x27, #104]
  40fd00:	cmp	x0, x22
  40fd04:	b.gt	40fce4 <wcrtomb@plt+0xd3c4>
  40fd08:	ldr	x1, [x27, #80]
  40fd0c:	str	xzr, [x27, #104]
  40fd10:	cmn	x1, #0x1
  40fd14:	b.eq	40fd78 <wcrtomb@plt+0xd458>  // b.none
  40fd18:	add	x1, x1, #0x114
  40fd1c:	mov	x0, x27
  40fd20:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  40fd24:	ldp	x19, x20, [sp, #16]
  40fd28:	mov	x1, #0x106                 	// #262
  40fd2c:	ldp	x21, x22, [sp, #32]
  40fd30:	ldp	x23, x24, [sp, #48]
  40fd34:	mov	x0, x27
  40fd38:	mov	w2, #0x3                   	// #3
  40fd3c:	bl	40f958 <wcrtomb@plt+0xd038>
  40fd40:	ldp	x25, x26, [sp, #64]
  40fd44:	ldp	x27, x28, [sp, #80]
  40fd48:	ldp	x29, x30, [sp], #144
  40fd4c:	ret
  40fd50:	ldr	x1, [x27, #152]
  40fd54:	b	40fbac <wcrtomb@plt+0xd28c>
  40fd58:	str	xzr, [x27, #160]
  40fd5c:	b	40fc64 <wcrtomb@plt+0xd344>
  40fd60:	mov	x0, x27
  40fd64:	mov	w2, #0x3                   	// #3
  40fd68:	mov	x1, #0x0                   	// #0
  40fd6c:	strb	wzr, [sp, #128]
  40fd70:	bl	40f958 <wcrtomb@plt+0xd038>
  40fd74:	b	40fcd0 <wcrtomb@plt+0xd3b0>
  40fd78:	ldp	x19, x20, [sp, #16]
  40fd7c:	ldp	x21, x22, [sp, #32]
  40fd80:	ldp	x23, x24, [sp, #48]
  40fd84:	ldp	x25, x26, [sp, #64]
  40fd88:	ldp	x27, x28, [sp, #80]
  40fd8c:	ldp	x29, x30, [sp], #144
  40fd90:	ret
  40fd94:	ldr	x1, [x0, #80]
  40fd98:	str	xzr, [x0, #104]
  40fd9c:	cmn	x1, #0x1
  40fda0:	b.eq	40fd40 <wcrtomb@plt+0xd420>  // b.none
  40fda4:	add	x1, x1, #0x114
  40fda8:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  40fdac:	ldp	x25, x26, [sp, #64]
  40fdb0:	ldp	x27, x28, [sp, #80]
  40fdb4:	ldp	x29, x30, [sp], #144
  40fdb8:	ret
  40fdbc:	bl	41b778 <wcrtomb@plt+0x18e58>
  40fdc0:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
  40fdc4:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  40fdc8:	b	40fc60 <wcrtomb@plt+0xd340>
  40fdcc:	nop
  40fdd0:	stp	x29, x30, [sp, #-128]!
  40fdd4:	mov	x29, sp
  40fdd8:	add	x2, sp, #0x68
  40fddc:	stp	x19, x20, [sp, #16]
  40fde0:	mov	x19, x0
  40fde4:	add	x0, sp, #0x70
  40fde8:	str	xzr, [sp, #104]
  40fdec:	bl	402920 <wcrtomb@plt>
  40fdf0:	cmn	x0, #0x1
  40fdf4:	b.eq	40ff8c <wcrtomb@plt+0xd66c>  // b.none
  40fdf8:	stp	x21, x22, [sp, #32]
  40fdfc:	cmp	w0, #0x1
  40fe00:	ldrb	w1, [sp, #112]
  40fe04:	mov	x21, x0
  40fe08:	mov	w22, w0
  40fe0c:	b.eq	40ffac <wcrtomb@plt+0xd68c>  // b.none
  40fe10:	mov	x0, x19
  40fe14:	mov	w2, #0x1                   	// #1
  40fe18:	bl	40f958 <wcrtomb@plt+0xd038>
  40fe1c:	cmp	w21, #0x1
  40fe20:	b.le	40ffd0 <wcrtomb@plt+0xd6b0>
  40fe24:	sub	w21, w21, #0x1
  40fe28:	mov	w20, #0x1                   	// #1
  40fe2c:	stp	x23, x24, [sp, #48]
  40fe30:	mov	x24, #0x80                  	// #128
  40fe34:	mov	x23, #0x10                  	// #16
  40fe38:	stp	x25, x26, [sp, #64]
  40fe3c:	stp	x27, x28, [sp, #80]
  40fe40:	add	x27, sp, #0x71
  40fe44:	b	40fea0 <wcrtomb@plt+0xd580>
  40fe48:	ldr	x0, [x19, #280]
  40fe4c:	strb	w26, [x0, x2]
  40fe50:	ldp	x0, x2, [x19, #144]
  40fe54:	add	x1, x2, #0x1
  40fe58:	str	x1, [x19, #152]
  40fe5c:	str	x28, [x0, x2, lsl #3]
  40fe60:	ldp	x2, x1, [x19, #168]
  40fe64:	ldr	x0, [x19, #136]
  40fe68:	add	x0, x0, #0x1
  40fe6c:	str	x0, [x19, #136]
  40fe70:	add	x1, x1, #0x1
  40fe74:	str	x1, [x19, #176]
  40fe78:	cmp	x0, x2
  40fe7c:	b.le	40fe84 <wcrtomb@plt+0xd564>
  40fe80:	str	x0, [x19, #168]
  40fe84:	add	w20, w20, #0x1
  40fe88:	mov	x0, x19
  40fe8c:	mov	x1, #0x105                 	// #261
  40fe90:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  40fe94:	add	x27, x27, #0x1
  40fe98:	cmp	w22, w20
  40fe9c:	b.eq	40ff60 <wcrtomb@plt+0xd640>  // b.none
  40fea0:	ldp	x2, x3, [x19, #152]
  40fea4:	cmp	w21, w20
  40fea8:	cset	w0, eq  // eq = none
  40feac:	ldrb	w28, [x27]
  40feb0:	lsl	w26, w0, #1
  40feb4:	cmp	x3, x2
  40feb8:	b.eq	40fecc <wcrtomb@plt+0xd5ac>  // b.none
  40febc:	ldrb	w0, [x19, #1048]
  40fec0:	cbnz	w0, 40fe48 <wcrtomb@plt+0xd528>
  40fec4:	ldr	x0, [x19, #144]
  40fec8:	b	40fe54 <wcrtomb@plt+0xd534>
  40fecc:	asr	x25, x3, #1
  40fed0:	adds	x25, x3, x25
  40fed4:	ldr	x0, [x19, #144]
  40fed8:	b.vs	40ffc4 <wcrtomb@plt+0xd6a4>
  40fedc:	asr	x1, x25, #63
  40fee0:	sbfx	x2, x25, #60, #1
  40fee4:	lsl	x4, x25, #3
  40fee8:	extr	x1, x1, x25, #61
  40feec:	cmp	x2, x1
  40fef0:	b.ne	40ffc4 <wcrtomb@plt+0xd6a4>  // b.any
  40fef4:	cmp	x4, #0x7f
  40fef8:	csel	x1, x4, x24, gt
  40fefc:	csel	x25, x25, x23, gt
  40ff00:	cbz	x0, 40ff84 <wcrtomb@plt+0xd664>
  40ff04:	sub	x2, x25, x3
  40ff08:	cmp	x2, #0x0
  40ff0c:	b.gt	40ff30 <wcrtomb@plt+0xd610>
  40ff10:	adds	x25, x3, #0x1
  40ff14:	b.vs	40ffc0 <wcrtomb@plt+0xd6a0>
  40ff18:	asr	x2, x25, #63
  40ff1c:	sbfx	x3, x25, #60, #1
  40ff20:	lsl	x1, x25, #3
  40ff24:	extr	x2, x2, x25, #61
  40ff28:	cmp	x3, x2
  40ff2c:	b.ne	40ffc0 <wcrtomb@plt+0xd6a0>  // b.any
  40ff30:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40ff34:	str	x0, [x19, #144]
  40ff38:	ldrb	w1, [x19, #1048]
  40ff3c:	str	x25, [x19, #160]
  40ff40:	cbz	w1, 40ff7c <wcrtomb@plt+0xd65c>
  40ff44:	ldr	x0, [x19, #280]
  40ff48:	tbnz	x25, #63, 40ffc0 <wcrtomb@plt+0xd6a0>
  40ff4c:	mov	x1, x25
  40ff50:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  40ff54:	str	x0, [x19, #280]
  40ff58:	ldr	x2, [x19, #152]
  40ff5c:	b	40febc <wcrtomb@plt+0xd59c>
  40ff60:	ldp	x21, x22, [sp, #32]
  40ff64:	ldp	x23, x24, [sp, #48]
  40ff68:	ldp	x25, x26, [sp, #64]
  40ff6c:	ldp	x27, x28, [sp, #80]
  40ff70:	ldp	x19, x20, [sp, #16]
  40ff74:	ldp	x29, x30, [sp], #128
  40ff78:	ret
  40ff7c:	ldr	x2, [x19, #152]
  40ff80:	b	40fe54 <wcrtomb@plt+0xd534>
  40ff84:	str	xzr, [x19, #160]
  40ff88:	b	40ff04 <wcrtomb@plt+0xd5e4>
  40ff8c:	mov	x0, x19
  40ff90:	mov	w2, #0x3                   	// #3
  40ff94:	mov	x1, #0x0                   	// #0
  40ff98:	strb	wzr, [sp, #112]
  40ff9c:	bl	40f958 <wcrtomb@plt+0xd038>
  40ffa0:	ldp	x19, x20, [sp, #16]
  40ffa4:	ldp	x29, x30, [sp], #128
  40ffa8:	ret
  40ffac:	mov	x0, x19
  40ffb0:	mov	w2, #0x3                   	// #3
  40ffb4:	bl	40f958 <wcrtomb@plt+0xd038>
  40ffb8:	ldp	x21, x22, [sp, #32]
  40ffbc:	b	40ff70 <wcrtomb@plt+0xd650>
  40ffc0:	bl	41b778 <wcrtomb@plt+0x18e58>
  40ffc4:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  40ffc8:	mov	x25, #0xfffffffffffffff     	// #1152921504606846975
  40ffcc:	b	40ff00 <wcrtomb@plt+0xd5e0>
  40ffd0:	ldp	x21, x22, [sp, #32]
  40ffd4:	b	40ff70 <wcrtomb@plt+0xd650>
  40ffd8:	stp	x29, x30, [sp, #-272]!
  40ffdc:	mov	x29, sp
  40ffe0:	stp	x19, x20, [sp, #16]
  40ffe4:	and	w20, w1, #0xff
  40ffe8:	ldr	x1, [x0, #176]
  40ffec:	stp	x21, x22, [sp, #32]
  40fff0:	stp	x23, x24, [sp, #48]
  40fff4:	cmp	xzr, x1, lsr #59
  40fff8:	stp	x25, x26, [sp, #64]
  40fffc:	cset	x2, ne  // ne = any
  410000:	stp	x27, x28, [sp, #80]
  410004:	tbnz	x1, #58, 410fe4 <wcrtomb@plt+0xe6c4>
  410008:	cbnz	x2, 410fe4 <wcrtomb@plt+0xe6c4>
  41000c:	mov	x23, x0
  410010:	lsl	x0, x1, #5
  410014:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  410018:	mov	x19, #0x18                  	// #24
  41001c:	str	x0, [sp, #136]
  410020:	ldp	x1, x24, [x23, #168]
  410024:	umulh	x0, x1, x19
  410028:	mul	x2, x1, x19
  41002c:	cmp	x0, #0x0
  410030:	ldr	x0, [sp, #136]
  410034:	add	x0, x0, x24, lsl #4
  410038:	str	x0, [sp, #128]
  41003c:	cset	x0, ne  // ne = any
  410040:	tbnz	x2, #63, 410fe4 <wcrtomb@plt+0xe6c4>
  410044:	cbnz	x0, 410fe4 <wcrtomb@plt+0xe6c4>
  410048:	add	x1, x1, x1, lsl #1
  41004c:	lsl	x0, x1, #3
  410050:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  410054:	mov	x27, x0
  410058:	mov	x1, #0x105                 	// #261
  41005c:	mov	x0, x23
  410060:	str	x27, [sp, #168]
  410064:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  410068:	strb	w20, [x23, #328]
  41006c:	ldr	x20, [x23, #176]
  410070:	cmp	xzr, x20, lsr #60
  410074:	lsl	x0, x20, #4
  410078:	cset	x1, ne  // ne = any
  41007c:	tbnz	x20, #59, 410fe4 <wcrtomb@plt+0xe6c4>
  410080:	cbnz	x1, 410fe4 <wcrtomb@plt+0xe6c4>
  410084:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  410088:	mov	x2, x0
  41008c:	ldr	x0, [x23, #152]
  410090:	mov	x1, x19
  410094:	stp	x2, xzr, [sp, #224]
  410098:	mov	x19, #0x0                   	// #0
  41009c:	str	x20, [sp, #240]
  4100a0:	bl	41b6c0 <wcrtomb@plt+0x18da0>
  4100a4:	str	x0, [x23, #320]
  4100a8:	ldr	x0, [sp, #136]
  4100ac:	str	x0, [sp, #104]
  4100b0:	ldr	x2, [x23, #152]
  4100b4:	cmp	x2, #0x0
  4100b8:	b.le	410150 <wcrtomb@plt+0xd830>
  4100bc:	add	x21, sp, #0xc8
  4100c0:	b	4100f4 <wcrtomb@plt+0xd7d4>
  4100c4:	cmp	x0, #0x101
  4100c8:	b.gt	410800 <wcrtomb@plt+0xdee0>
  4100cc:	cmp	x0, #0x100
  4100d0:	b.eq	4107ec <wcrtomb@plt+0xdecc>  // b.none
  4100d4:	cmp	x0, #0x101
  4100d8:	b.ne	4107a0 <wcrtomb@plt+0xde80>  // b.any
  4100dc:	sub	x24, x27, #0x18
  4100e0:	mov	w0, #0x1                   	// #1
  4100e4:	strb	w0, [x24]
  4100e8:	add	x19, x19, #0x1
  4100ec:	cmp	x19, x2
  4100f0:	b.ge	410150 <wcrtomb@plt+0xd830>  // b.tcont
  4100f4:	ldr	x1, [x23, #144]
  4100f8:	lsl	x0, x19, #3
  4100fc:	str	x0, [sp, #96]
  410100:	ldr	x0, [x1, x19, lsl #3]
  410104:	cmp	x0, #0x103
  410108:	b.le	4100c4 <wcrtomb@plt+0xd7a4>
  41010c:	cmp	x0, #0x105
  410110:	b.eq	41096c <wcrtomb@plt+0xe04c>  // b.none
  410114:	cmp	x0, #0x106
  410118:	b.ne	4107a0 <wcrtomb@plt+0xde80>  // b.any
  41011c:	ldur	q0, [x27, #-40]
  410120:	add	x19, x19, #0x1
  410124:	ldur	q1, [x27, #-16]
  410128:	cmp	x19, x2
  41012c:	ldurb	w0, [x27, #-48]
  410130:	sub	x27, x27, #0x18
  410134:	ldrb	w1, [x27]
  410138:	add	v0.2d, v0.2d, v1.2d
  41013c:	orr	w0, w0, w1
  410140:	sturb	w0, [x27, #-24]
  410144:	stur	q0, [x27, #-16]
  410148:	b.lt	4100f4 <wcrtomb@plt+0xd7d4>  // b.tstop
  41014c:	nop
  410150:	ldr	x19, [x23, #176]
  410154:	cmp	xzr, x19, lsr #60
  410158:	lsl	x0, x19, #4
  41015c:	cset	x20, ne  // ne = any
  410160:	cmp	x0, #0x0
  410164:	csinc	x20, x20, xzr, ge  // ge = tcont
  410168:	cbnz	x20, 410fe4 <wcrtomb@plt+0xe6c4>
  41016c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  410170:	stp	x0, xzr, [sp, #248]
  410174:	ldr	x8, [x23, #152]
  410178:	str	x19, [sp, #264]
  41017c:	cmp	x8, #0x0
  410180:	b.le	4101d0 <wcrtomb@plt+0xd8b0>
  410184:	add	x25, sp, #0x100
  410188:	mov	x19, #0x0                   	// #0
  41018c:	mov	x24, #0x0                   	// #0
  410190:	ldr	x21, [x23, #320]
  410194:	add	x21, x21, x24
  410198:	ldr	x2, [x21, #8]
  41019c:	cmp	x2, #0x0
  4101a0:	b.le	4101bc <wcrtomb@plt+0xd89c>
  4101a4:	ldr	x0, [x23, #144]
  4101a8:	ldr	x0, [x0, x19, lsl #3]
  4101ac:	cmp	x0, #0x10a
  4101b0:	sub	x1, x0, #0x100
  4101b4:	ccmp	x1, #0x11, #0x2, ne  // ne = any
  4101b8:	b.ls	410e18 <wcrtomb@plt+0xe4f8>  // b.plast
  4101bc:	add	x19, x19, #0x1
  4101c0:	add	x24, x24, #0x18
  4101c4:	cmp	x19, x8
  4101c8:	b.lt	410190 <wcrtomb@plt+0xd870>  // b.tstop
  4101cc:	ldr	x0, [sp, #248]
  4101d0:	bl	4026b0 <free@plt>
  4101d4:	ldr	x0, [x23, #152]
  4101d8:	bl	41b698 <wcrtomb@plt+0x18d78>
  4101dc:	mov	x19, x0
  4101e0:	ldr	x7, [x23, #152]
  4101e4:	cmp	x7, #0x0
  4101e8:	b.le	410260 <wcrtomb@plt+0xd940>
  4101ec:	ldr	x4, [x23, #320]
  4101f0:	mov	w5, #0x8                   	// #8
  4101f4:	nop
  4101f8:	ldr	x0, [x4, #8]
  4101fc:	cmp	x0, #0x0
  410200:	b.le	410250 <wcrtomb@plt+0xd930>
  410204:	ldr	x2, [x4]
  410208:	add	x0, x2, x0, lsl #4
  41020c:	b	41022c <wcrtomb@plt+0xd90c>
  410210:	ldrb	w1, [x19, x3]
  410214:	b.ge	410b50 <wcrtomb@plt+0xe230>  // b.tcont
  410218:	orr	w1, w1, #0x2
  41021c:	strb	w1, [x19, x3]
  410220:	add	x2, x2, #0x10
  410224:	cmp	x0, x2
  410228:	b.eq	410250 <wcrtomb@plt+0xd930>  // b.none
  41022c:	ldr	x3, [x2]
  410230:	cmp	x3, x20
  410234:	b.ne	410210 <wcrtomb@plt+0xd8f0>  // b.any
  410238:	ldrb	w1, [x19, x20]
  41023c:	add	x2, x2, #0x10
  410240:	cmp	x0, x2
  410244:	orr	w1, w1, #0x1
  410248:	strb	w1, [x19, x20]
  41024c:	b.ne	41022c <wcrtomb@plt+0xd90c>  // b.any
  410250:	add	x20, x20, #0x1
  410254:	add	x4, x4, #0x18
  410258:	cmp	x20, x7
  41025c:	b.ne	4101f8 <wcrtomb@plt+0xd8d8>  // b.any
  410260:	ldr	x20, [x23, #176]
  410264:	ldrb	w0, [x19]
  410268:	cmp	xzr, x20, lsr #60
  41026c:	orr	w0, w0, #0x10
  410270:	strb	w0, [x19]
  410274:	cset	x1, ne  // ne = any
  410278:	lsl	x0, x20, #4
  41027c:	tbnz	x20, #59, 410fe4 <wcrtomb@plt+0xe6c4>
  410280:	cbnz	x1, 410fe4 <wcrtomb@plt+0xe6c4>
  410284:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  410288:	stp	x0, xzr, [sp, #248]
  41028c:	ldr	x1, [x23, #152]
  410290:	str	x20, [sp, #264]
  410294:	cmp	xzr, x1, lsr #62
  410298:	lsl	x0, x1, #2
  41029c:	cset	x2, ne  // ne = any
  4102a0:	tbnz	x1, #61, 410fe4 <wcrtomb@plt+0xe6c4>
  4102a4:	cbnz	x2, 410fe4 <wcrtomb@plt+0xe6c4>
  4102a8:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4102ac:	str	x0, [x23, #336]
  4102b0:	ldr	x2, [x23, #152]
  4102b4:	cmp	x2, #0x0
  4102b8:	b.le	41039c <wcrtomb@plt+0xda7c>
  4102bc:	add	x0, sp, #0x100
  4102c0:	mov	x22, #0x0                   	// #0
  4102c4:	str	x0, [sp, #144]
  4102c8:	b	4102d8 <wcrtomb@plt+0xd9b8>
  4102cc:	add	x22, x22, #0x1
  4102d0:	cmp	x22, x2
  4102d4:	b.ge	41039c <wcrtomb@plt+0xda7c>  // b.tcont
  4102d8:	ldrb	w0, [x19, x22]
  4102dc:	tbz	w0, #4, 4102cc <wcrtomb@plt+0xd9ac>
  4102e0:	ldr	x1, [x23, #320]
  4102e4:	add	x8, x22, x22, lsl #1
  4102e8:	ldr	x0, [x23, #336]
  4102ec:	lsl	x3, x22, #2
  4102f0:	add	x21, x1, x8, lsl #3
  4102f4:	stp	x1, x3, [sp, #120]
  4102f8:	mov	x27, #0x0                   	// #0
  4102fc:	str	wzr, [x0, x22, lsl #2]
  410300:	ldr	x11, [x21, #8]
  410304:	cmp	x11, #0x0
  410308:	b.le	41038c <wcrtomb@plt+0xda6c>
  41030c:	mov	x20, #0x0                   	// #0
  410310:	b	410344 <wcrtomb@plt+0xda24>
  410314:	ldrb	w26, [x19, x24]
  410318:	tst	w26, #0x6
  41031c:	b.eq	410b64 <wcrtomb@plt+0xe244>  // b.none
  410320:	add	x0, x0, x27, lsl #4
  410324:	add	x27, x27, #0x1
  410328:	ldp	x2, x3, [x3]
  41032c:	orr	w26, w26, #0x10
  410330:	stp	x2, x3, [x0]
  410334:	strb	w26, [x19, x24]
  410338:	add	x20, x20, #0x1
  41033c:	cmp	x20, x11
  410340:	b.ge	410388 <wcrtomb@plt+0xda68>  // b.tcont
  410344:	ldr	x0, [x21]
  410348:	lsl	x25, x20, #4
  41034c:	add	x3, x0, x25
  410350:	ldr	w1, [x3, #8]
  410354:	cbz	w1, 410338 <wcrtomb@plt+0xda18>
  410358:	ldr	x24, [x0, x25]
  41035c:	ldr	x5, [x23, #144]
  410360:	ldr	x9, [x5, x24, lsl #3]
  410364:	tbz	x9, #63, 410314 <wcrtomb@plt+0xd9f4>
  410368:	ldr	x3, [sp, #128]
  41036c:	add	x20, x20, #0x1
  410370:	ldr	x2, [x23, #336]
  410374:	cmp	x20, x11
  410378:	ldr	w0, [x2, x3]
  41037c:	orr	w1, w0, w1
  410380:	str	w1, [x2, x3]
  410384:	b.lt	410344 <wcrtomb@plt+0xda24>  // b.tstop
  410388:	ldr	x2, [x23, #152]
  41038c:	str	x27, [x21, #8]
  410390:	add	x22, x22, #0x1
  410394:	cmp	x22, x2
  410398:	b.lt	4102d8 <wcrtomb@plt+0xd9b8>  // b.tstop
  41039c:	cmp	xzr, x2, lsr #61
  4103a0:	lsl	x0, x2, #3
  4103a4:	cset	x1, ne  // ne = any
  4103a8:	tbnz	x2, #60, 410fe4 <wcrtomb@plt+0xe6c4>
  4103ac:	cbnz	x1, 410fe4 <wcrtomb@plt+0xe6c4>
  4103b0:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4103b4:	mov	x20, x0
  4103b8:	ldr	x0, [x23, #152]
  4103bc:	str	xzr, [x20]
  4103c0:	cmp	x0, #0x1
  4103c4:	b.le	4103dc <wcrtomb@plt+0xdabc>
  4103c8:	sub	x2, x0, #0x1
  4103cc:	mov	w1, #0xff                  	// #255
  4103d0:	add	x0, x20, #0x8
  4103d4:	lsl	x2, x2, #3
  4103d8:	bl	402510 <memset@plt>
  4103dc:	ldr	x1, [x23, #176]
  4103e0:	cmp	xzr, x1, lsr #61
  4103e4:	lsl	x0, x1, #3
  4103e8:	cset	x2, ne  // ne = any
  4103ec:	tbnz	x1, #60, 410fe4 <wcrtomb@plt+0xe6c4>
  4103f0:	cbnz	x2, 410fe4 <wcrtomb@plt+0xe6c4>
  4103f4:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4103f8:	mov	x28, x0
  4103fc:	ldr	x1, [x23, #176]
  410400:	mov	x2, #0x18                  	// #24
  410404:	umulh	x0, x1, x2
  410408:	mul	x2, x1, x2
  41040c:	cmp	x0, #0x0
  410410:	cset	x0, ne  // ne = any
  410414:	tbnz	x2, #63, 410fe4 <wcrtomb@plt+0xe6c4>
  410418:	cbnz	x0, 410fe4 <wcrtomb@plt+0xe6c4>
  41041c:	add	x1, x1, x1, lsl #1
  410420:	mov	x21, #0x1                   	// #1
  410424:	lsl	x0, x1, #3
  410428:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41042c:	mov	x22, x0
  410430:	ldr	x1, [x23, #176]
  410434:	cmp	xzr, x1, lsr #62
  410438:	lsl	x0, x1, #2
  41043c:	cset	x25, ne  // ne = any
  410440:	cmp	x0, #0x0
  410444:	csel	x25, x25, x21, ge  // ge = tcont
  410448:	cbnz	x25, 410fe4 <wcrtomb@plt+0xe6c4>
  41044c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  410450:	mov	x27, x0
  410454:	ldrb	w1, [x23, #1048]
  410458:	cbnz	w1, 410cc4 <wcrtomb@plt+0xe3a4>
  41045c:	ldr	x0, [x23, #152]
  410460:	mov	x26, #0x0                   	// #0
  410464:	ldr	x2, [x23, #320]
  410468:	cmp	x0, #0x0
  41046c:	b.le	410d80 <wcrtomb@plt+0xe460>
  410470:	adrp	x0, 40d000 <wcrtomb@plt+0xa6e0>
  410474:	mov	x24, #0x0                   	// #0
  410478:	add	x0, x0, #0x4d0
  41047c:	mov	x21, #0x1                   	// #1
  410480:	str	x0, [sp, #96]
  410484:	nop
  410488:	add	x3, x24, x24, lsl #1
  41048c:	ldr	x1, [x20, x24, lsl #3]
  410490:	lsl	x4, x3, #3
  410494:	add	x5, x2, x4
  410498:	cmn	x1, #0x1
  41049c:	ldr	x0, [x2, x3, lsl #3]
  4104a0:	b.eq	410d08 <wcrtomb@plt+0xe3e8>  // b.none
  4104a4:	ldr	x2, [x23, #144]
  4104a8:	add	x4, x1, x1, lsl #1
  4104ac:	ldr	x7, [x23, #336]
  4104b0:	add	x4, x22, x4, lsl #3
  4104b4:	ldr	x2, [x2, x24, lsl #3]
  4104b8:	str	x2, [x28, x1, lsl #3]
  4104bc:	ldp	x2, x3, [x5]
  4104c0:	stp	x2, x3, [x4]
  4104c4:	ldr	w3, [x7, x24, lsl #2]
  4104c8:	ldr	x2, [x5, #16]
  4104cc:	str	w3, [x27, x1, lsl #2]
  4104d0:	str	x2, [x4, #16]
  4104d4:	cbz	x26, 4104e4 <wcrtomb@plt+0xdbc4>
  4104d8:	ldr	x2, [x23, #280]
  4104dc:	ldrb	w2, [x2, x24]
  4104e0:	strb	w2, [x26, x1]
  4104e4:	ldr	x1, [x5, #8]
  4104e8:	cmp	x1, #0x0
  4104ec:	b.le	410514 <wcrtomb@plt+0xdbf4>
  4104f0:	mov	x2, x0
  4104f4:	add	x5, x0, x1, lsl #4
  4104f8:	ldr	x4, [x2]
  4104fc:	ldr	x3, [x20, x4, lsl #3]
  410500:	cmn	x3, #0x1
  410504:	b.eq	410cec <wcrtomb@plt+0xe3cc>  // b.none
  410508:	str	x3, [x2], #16
  41050c:	cmp	x5, x2
  410510:	b.ne	4104f8 <wcrtomb@plt+0xdbd8>  // b.any
  410514:	ldr	x3, [sp, #96]
  410518:	mov	x2, #0x10                  	// #16
  41051c:	bl	402380 <qsort@plt>
  410520:	ldr	x2, [x23, #320]
  410524:	mov	x0, x2
  410528:	ldr	x1, [x23, #152]
  41052c:	add	x24, x24, #0x1
  410530:	cmp	x24, x1
  410534:	b.lt	410488 <wcrtomb@plt+0xdb68>  // b.tstop
  410538:	mov	x1, #0x0                   	// #0
  41053c:	cbnz	x26, 410548 <wcrtomb@plt+0xdc28>
  410540:	b	410d80 <wcrtomb@plt+0xe460>
  410544:	ldr	x0, [x23, #320]
  410548:	add	x4, x22, x1
  41054c:	ldr	x2, [x23, #144]
  410550:	add	x0, x0, x1
  410554:	ldr	x3, [x28, x25, lsl #3]
  410558:	add	x1, x1, #0x18
  41055c:	ldr	x5, [x23, #280]
  410560:	ldr	x7, [x23, #336]
  410564:	str	x3, [x2, x25, lsl #3]
  410568:	ldp	x2, x3, [x4]
  41056c:	stp	x2, x3, [x0]
  410570:	ldr	w8, [x27, x25, lsl #2]
  410574:	ldr	x3, [x4, #16]
  410578:	str	x3, [x0, #16]
  41057c:	ldrb	w2, [x26, x25]
  410580:	str	w8, [x7, x25, lsl #2]
  410584:	strb	w2, [x5, x25]
  410588:	add	x25, x25, #0x1
  41058c:	cmp	x21, x25
  410590:	b.ne	410544 <wcrtomb@plt+0xdc24>  // b.any
  410594:	str	x21, [x23, #152]
  410598:	mov	x0, x28
  41059c:	str	x21, [x23, #176]
  4105a0:	bl	4026b0 <free@plt>
  4105a4:	mov	x0, x22
  4105a8:	bl	4026b0 <free@plt>
  4105ac:	mov	x0, x27
  4105b0:	bl	4026b0 <free@plt>
  4105b4:	mov	x0, x26
  4105b8:	bl	4026b0 <free@plt>
  4105bc:	mov	x0, x20
  4105c0:	bl	4026b0 <free@plt>
  4105c4:	ldr	x0, [sp, #248]
  4105c8:	bl	4026b0 <free@plt>
  4105cc:	mov	x0, x19
  4105d0:	bl	4026b0 <free@plt>
  4105d4:	mov	x0, #0x10                  	// #16
  4105d8:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4105dc:	mov	x2, x0
  4105e0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  4105e4:	ldr	x1, [x23, #152]
  4105e8:	mov	w3, #0x1ff                 	// #511
  4105ec:	ldr	q0, [x0, #2768]
  4105f0:	str	xzr, [x2]
  4105f4:	cmp	xzr, x1, lsr #62
  4105f8:	lsl	x0, x1, #2
  4105fc:	str	w3, [x2, #8]
  410600:	cset	x19, ne  // ne = any
  410604:	str	x2, [sp, #192]
  410608:	cmp	x0, #0x0
  41060c:	stur	q0, [sp, #200]
  410610:	csinc	x19, x19, xzr, ge  // ge = tcont
  410614:	cbnz	x19, 410fe4 <wcrtomb@plt+0xe6c4>
  410618:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41061c:	str	x0, [x23, #344]
  410620:	ldr	x9, [x23, #152]
  410624:	cmp	x9, #0x0
  410628:	b.le	4106dc <wcrtomb@plt+0xddbc>
  41062c:	ldr	x7, [x23, #320]
  410630:	mov	w3, #0x49                  	// #73
  410634:	ldr	x8, [x23, #336]
  410638:	mov	w10, #0x4                   	// #4
  41063c:	nop
  410640:	str	wzr, [x0, x19, lsl #2]
  410644:	ldr	w1, [x8, x19, lsl #2]
  410648:	eor	w1, w1, w1, asr #2
  41064c:	ands	w1, w1, w3
  410650:	csel	w1, w1, w10, eq  // eq = none
  410654:	str	w1, [x0, x19, lsl #2]
  410658:	ldr	w2, [x8, x19, lsl #2]
  41065c:	eor	w2, w2, w2, asr #1
  410660:	tst	w2, w3
  410664:	b.eq	410670 <wcrtomb@plt+0xdd50>  // b.none
  410668:	orr	w1, w1, #0x2
  41066c:	str	w1, [x0, x19, lsl #2]
  410670:	ldr	x5, [x7, #8]
  410674:	cmp	x5, #0x0
  410678:	b.le	4106cc <wcrtomb@plt+0xddac>
  41067c:	ldr	x2, [x7]
  410680:	add	x5, x2, x5, lsl #4
  410684:	nop
  410688:	ldr	w1, [x2, #8]
  41068c:	eor	w4, w1, w1, asr #2
  410690:	tst	w4, w3
  410694:	b.eq	4106a8 <wcrtomb@plt+0xdd88>  // b.none
  410698:	ldr	w1, [x0, x19, lsl #2]
  41069c:	orr	w1, w1, #0x4
  4106a0:	str	w1, [x0, x19, lsl #2]
  4106a4:	ldr	w1, [x2, #8]
  4106a8:	eor	w1, w1, w1, asr #1
  4106ac:	tst	w1, w3
  4106b0:	b.eq	4106c0 <wcrtomb@plt+0xdda0>  // b.none
  4106b4:	ldr	w1, [x0, x19, lsl #2]
  4106b8:	orr	w1, w1, #0x2
  4106bc:	str	w1, [x0, x19, lsl #2]
  4106c0:	add	x2, x2, #0x10
  4106c4:	cmp	x2, x5
  4106c8:	b.ne	410688 <wcrtomb@plt+0xdd68>  // b.any
  4106cc:	add	x19, x19, #0x1
  4106d0:	add	x7, x7, #0x18
  4106d4:	cmp	x19, x9
  4106d8:	b.ne	410640 <wcrtomb@plt+0xdd20>  // b.any
  4106dc:	ldp	x1, x4, [sp, #192]
  4106e0:	cmp	x4, #0x0
  4106e4:	b.le	410f7c <wcrtomb@plt+0xe65c>
  4106e8:	add	x4, x1, x4, lsl #4
  4106ec:	mov	w2, #0x0                   	// #0
  4106f0:	ldr	x3, [x1], #16
  4106f4:	cmp	x4, x1
  4106f8:	ldr	w3, [x0, x3, lsl #2]
  4106fc:	orr	w2, w2, w3
  410700:	b.ne	4106f0 <wcrtomb@plt+0xddd0>  // b.any
  410704:	eor	w20, w2, #0x7
  410708:	and	w19, w2, #0x2
  41070c:	tbz	w2, #2, 410720 <wcrtomb@plt+0xde00>
  410710:	add	x1, sp, #0xc0
  410714:	mov	x0, x23
  410718:	mov	w2, #0x4                   	// #4
  41071c:	bl	40df30 <wcrtomb@plt+0xb610>
  410720:	add	x1, sp, #0xc0
  410724:	mov	w2, w20
  410728:	mov	x0, x23
  41072c:	bl	40df30 <wcrtomb@plt+0xb610>
  410730:	mov	w1, w0
  410734:	str	w0, [x23, #364]
  410738:	sxtw	x0, w0
  41073c:	str	x0, [x23, #400]
  410740:	cbz	w19, 410758 <wcrtomb@plt+0xde38>
  410744:	add	x1, sp, #0xc0
  410748:	mov	x0, x23
  41074c:	mov	w2, #0x2                   	// #2
  410750:	bl	40df30 <wcrtomb@plt+0xb610>
  410754:	mov	w1, w0
  410758:	ldr	x0, [sp, #136]
  41075c:	add	w1, w1, #0x1
  410760:	str	wzr, [x23, #360]
  410764:	str	w1, [x23, #364]
  410768:	bl	4026b0 <free@plt>
  41076c:	ldr	x0, [sp, #168]
  410770:	bl	4026b0 <free@plt>
  410774:	ldr	x0, [sp, #224]
  410778:	bl	4026b0 <free@plt>
  41077c:	ldr	x0, [sp, #192]
  410780:	bl	4026b0 <free@plt>
  410784:	ldp	x19, x20, [sp, #16]
  410788:	ldp	x21, x22, [sp, #32]
  41078c:	ldp	x23, x24, [sp, #48]
  410790:	ldp	x25, x26, [sp, #64]
  410794:	ldp	x27, x28, [sp, #80]
  410798:	ldp	x29, x30, [sp], #272
  41079c:	ret
  4107a0:	ldr	x3, [sp, #128]
  4107a4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4107a8:	ldr	x4, [sp, #104]
  4107ac:	cmp	x0, #0x112
  4107b0:	ldr	q0, [x1, #2768]
  4107b4:	str	x19, [x3]
  4107b8:	str	x19, [x4]
  4107bc:	mov	w0, #0x1ff                 	// #511
  4107c0:	str	w0, [x3, #8]
  4107c4:	cset	w1, eq  // eq = none
  4107c8:	add	x3, x3, #0x10
  4107cc:	add	x27, x27, #0x18
  4107d0:	sturb	w1, [x27, #-24]
  4107d4:	stur	q0, [x27, #-16]
  4107d8:	str	w0, [x4, #8]
  4107dc:	add	x0, x4, #0x10
  4107e0:	str	x0, [sp, #104]
  4107e4:	str	x3, [sp, #128]
  4107e8:	b	4100e8 <wcrtomb@plt+0xd7c8>
  4107ec:	mov	w0, #0x1                   	// #1
  4107f0:	add	x27, x27, #0x18
  4107f4:	sturb	w0, [x27, #-24]
  4107f8:	stp	xzr, xzr, [x27, #-16]
  4107fc:	b	4100e8 <wcrtomb@plt+0xd7c8>
  410800:	ldp	x0, x22, [x27, #-16]
  410804:	str	x0, [sp, #200]
  410808:	ldr	x3, [sp, #104]
  41080c:	sub	x24, x27, #0x18
  410810:	sub	x0, x3, x0, lsl #4
  410814:	str	x0, [sp, #192]
  410818:	cmp	x22, #0x0
  41081c:	b.le	410ef8 <wcrtomb@plt+0xe5d8>
  410820:	ldr	x0, [sp, #128]
  410824:	mov	x20, #0x0                   	// #0
  410828:	sub	x26, x0, x22, lsl #4
  41082c:	b	410848 <wcrtomb@plt+0xdf28>
  410830:	str	x2, [x3, #8]
  410834:	cbnz	x2, 410934 <wcrtomb@plt+0xe014>
  410838:	add	x20, x20, #0x1
  41083c:	add	x26, x26, #0x10
  410840:	cmp	x22, x20
  410844:	b.eq	410954 <wcrtomb@plt+0xe034>  // b.none
  410848:	ldr	x2, [x26]
  41084c:	add	x0, sp, #0xc0
  410850:	ldr	x3, [x23, #320]
  410854:	mov	w4, #0xffffffff            	// #-1
  410858:	add	x2, x2, x2, lsl #1
  41085c:	add	x5, sp, #0xe0
  410860:	mov	x1, x21
  410864:	add	x2, x3, x2, lsl #3
  410868:	add	x3, x2, #0x8
  41086c:	bl	40dbb0 <wcrtomb@plt+0xb290>
  410870:	ldr	x0, [x26]
  410874:	ldr	x25, [x23, #320]
  410878:	add	x4, x0, x0, lsl #1
  41087c:	ldr	x2, [sp, #232]
  410880:	add	x3, x25, x4, lsl #3
  410884:	ldr	x0, [x3, #16]
  410888:	cmp	x0, x2
  41088c:	b.ge	410830 <wcrtomb@plt+0xdf10>  // b.tcont
  410890:	ldr	x0, [x25, x4, lsl #3]
  410894:	stp	x4, x3, [sp, #112]
  410898:	bl	4026b0 <free@plt>
  41089c:	ldp	x4, x3, [sp, #112]
  4108a0:	ldr	x2, [sp, #232]
  4108a4:	ldr	x0, [x3, #16]
  4108a8:	asr	x28, x0, #1
  4108ac:	adds	x28, x0, x28
  4108b0:	b.vs	410ff4 <wcrtomb@plt+0xe6d4>
  4108b4:	asr	x1, x28, #63
  4108b8:	sbfx	x9, x28, #59, #1
  4108bc:	lsl	x10, x28, #4
  4108c0:	extr	x1, x1, x28, #60
  4108c4:	cmp	x9, x1
  4108c8:	b.ne	410ff4 <wcrtomb@plt+0xe6d4>  // b.any
  4108cc:	cmp	x10, #0x7f
  4108d0:	mov	x1, #0x80                  	// #128
  4108d4:	mov	x5, #0x8                   	// #8
  4108d8:	csel	x1, x10, x1, gt
  4108dc:	csel	x28, x28, x5, gt
  4108e0:	str	xzr, [x3, #16]
  4108e4:	cmp	x2, x28
  4108e8:	b.le	410910 <wcrtomb@plt+0xdff0>
  4108ec:	sub	x28, x2, x0
  4108f0:	adds	x28, x0, x28
  4108f4:	b.vs	410fe4 <wcrtomb@plt+0xe6c4>
  4108f8:	asr	x0, x28, #63
  4108fc:	sbfx	x2, x28, #59, #1
  410900:	lsl	x1, x28, #4
  410904:	extr	x0, x0, x28, #60
  410908:	cmp	x2, x0
  41090c:	b.ne	410fe4 <wcrtomb@plt+0xe6c4>  // b.any
  410910:	mov	x0, #0x0                   	// #0
  410914:	stp	x3, x4, [sp, #112]
  410918:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41091c:	ldp	x3, x4, [sp, #112]
  410920:	str	x28, [x3, #16]
  410924:	ldr	x2, [sp, #232]
  410928:	str	x0, [x25, x4, lsl #3]
  41092c:	str	x2, [x3, #8]
  410930:	cbz	x2, 410838 <wcrtomb@plt+0xdf18>
  410934:	ldr	x0, [x25, x4, lsl #3]
  410938:	lsl	x2, x2, #4
  41093c:	ldr	x1, [sp, #224]
  410940:	add	x20, x20, #0x1
  410944:	add	x26, x26, #0x10
  410948:	bl	4022a0 <memcpy@plt>
  41094c:	cmp	x22, x20
  410950:	b.ne	410848 <wcrtomb@plt+0xdf28>  // b.any
  410954:	ldp	x0, x2, [x23, #144]
  410958:	ldr	x1, [sp, #96]
  41095c:	ldr	x0, [x0, x1]
  410960:	cmp	x0, #0x103
  410964:	b.eq	4100e8 <wcrtomb@plt+0xd7c8>  // b.none
  410968:	b	4100e0 <wcrtomb@plt+0xd7c0>
  41096c:	ldp	x1, x0, [x27, #-16]
  410970:	stp	x0, x1, [sp, #152]
  410974:	sub	x24, x27, #0x18
  410978:	ldur	x22, [x27, #-32]
  41097c:	str	x1, [sp, #200]
  410980:	mov	x20, #0x0                   	// #0
  410984:	lsl	x0, x0, #4
  410988:	str	x0, [sp, #176]
  41098c:	lsl	x3, x22, #4
  410990:	str	x3, [sp, #120]
  410994:	add	x0, x0, x3
  410998:	sub	x3, x27, #0x30
  41099c:	str	x3, [sp, #112]
  4109a0:	cmp	x22, #0x0
  4109a4:	ldr	x3, [sp, #104]
  4109a8:	sub	x1, x3, x1, lsl #4
  4109ac:	str	x1, [sp, #144]
  4109b0:	str	x1, [sp, #192]
  4109b4:	ldr	x1, [sp, #128]
  4109b8:	sub	x0, x1, x0
  4109bc:	str	x0, [sp, #184]
  4109c0:	mov	x27, x0
  4109c4:	b.gt	4109e4 <wcrtomb@plt+0xe0c4>
  4109c8:	b	410aec <wcrtomb@plt+0xe1cc>
  4109cc:	str	x2, [x25, #8]
  4109d0:	cbnz	x2, 410ac8 <wcrtomb@plt+0xe1a8>
  4109d4:	add	x20, x20, #0x1
  4109d8:	add	x27, x27, #0x10
  4109dc:	cmp	x22, x20
  4109e0:	b.eq	410ae8 <wcrtomb@plt+0xe1c8>  // b.none
  4109e4:	ldr	x2, [x27]
  4109e8:	add	x0, sp, #0xc0
  4109ec:	ldr	x3, [x23, #320]
  4109f0:	add	x5, sp, #0xe0
  4109f4:	add	x2, x2, x2, lsl #1
  4109f8:	mov	x1, x21
  4109fc:	mov	w4, #0xffffffff            	// #-1
  410a00:	add	x2, x3, x2, lsl #3
  410a04:	add	x3, x2, #0x8
  410a08:	bl	40dbb0 <wcrtomb@plt+0xb290>
  410a0c:	ldr	x0, [x27]
  410a10:	ldr	x28, [x23, #320]
  410a14:	add	x26, x0, x0, lsl #1
  410a18:	ldr	x2, [sp, #232]
  410a1c:	add	x25, x28, x26, lsl #3
  410a20:	ldr	x0, [x25, #16]
  410a24:	cmp	x0, x2
  410a28:	b.ge	4109cc <wcrtomb@plt+0xe0ac>  // b.tcont
  410a2c:	ldr	x0, [x28, x26, lsl #3]
  410a30:	bl	4026b0 <free@plt>
  410a34:	ldr	x0, [x25, #16]
  410a38:	ldr	x2, [sp, #232]
  410a3c:	asr	x3, x0, #1
  410a40:	adds	x3, x0, x3
  410a44:	b.vs	410fe8 <wcrtomb@plt+0xe6c8>
  410a48:	asr	x1, x3, #63
  410a4c:	sbfx	x9, x3, #59, #1
  410a50:	lsl	x10, x3, #4
  410a54:	extr	x1, x1, x3, #60
  410a58:	cmp	x9, x1
  410a5c:	b.ne	410fe8 <wcrtomb@plt+0xe6c8>  // b.any
  410a60:	cmp	x10, #0x7f
  410a64:	mov	x1, #0x80                  	// #128
  410a68:	mov	x4, #0x8                   	// #8
  410a6c:	csel	x1, x10, x1, gt
  410a70:	csel	x3, x3, x4, gt
  410a74:	str	xzr, [x25, #16]
  410a78:	cmp	x2, x3
  410a7c:	b.le	410aa4 <wcrtomb@plt+0xe184>
  410a80:	sub	x3, x2, x0
  410a84:	adds	x3, x0, x3
  410a88:	b.vs	410fe4 <wcrtomb@plt+0xe6c4>
  410a8c:	asr	x0, x3, #63
  410a90:	sbfx	x2, x3, #59, #1
  410a94:	lsl	x1, x3, #4
  410a98:	extr	x0, x0, x3, #60
  410a9c:	cmp	x2, x0
  410aa0:	b.ne	410fe4 <wcrtomb@plt+0xe6c4>  // b.any
  410aa4:	mov	x0, #0x0                   	// #0
  410aa8:	str	x3, [sp, #96]
  410aac:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  410ab0:	ldr	x3, [sp, #96]
  410ab4:	str	x3, [x25, #16]
  410ab8:	ldr	x2, [sp, #232]
  410abc:	str	x0, [x28, x26, lsl #3]
  410ac0:	str	x2, [x25, #8]
  410ac4:	cbz	x2, 4109d4 <wcrtomb@plt+0xe0b4>
  410ac8:	ldr	x0, [x28, x26, lsl #3]
  410acc:	lsl	x2, x2, #4
  410ad0:	ldr	x1, [sp, #224]
  410ad4:	add	x20, x20, #0x1
  410ad8:	add	x27, x27, #0x10
  410adc:	bl	4022a0 <memcpy@plt>
  410ae0:	cmp	x22, x20
  410ae4:	b.ne	4109e4 <wcrtomb@plt+0xe0c4>  // b.any
  410ae8:	ldr	x2, [x23, #152]
  410aec:	ldr	x0, [sp, #112]
  410af0:	ldrb	w7, [x0]
  410af4:	cbz	w7, 410b14 <wcrtomb@plt+0xe1f4>
  410af8:	ldr	x3, [sp, #104]
  410afc:	mov	x1, x0
  410b00:	str	x3, [sp, #144]
  410b04:	ldr	x0, [x0, #8]
  410b08:	ldr	x3, [sp, #160]
  410b0c:	add	x28, x0, x3
  410b10:	str	x28, [x1, #8]
  410b14:	ldrb	w8, [x24]
  410b18:	cbz	w8, 410d2c <wcrtomb@plt+0xe40c>
  410b1c:	ldr	x0, [sp, #152]
  410b20:	add	x22, x0, x22
  410b24:	ldr	x0, [sp, #112]
  410b28:	mov	x1, x0
  410b2c:	str	x22, [x0, #16]
  410b30:	cmp	w7, #0x0
  410b34:	mov	x27, x24
  410b38:	ccmp	w8, #0x0, #0x4, ne  // ne = any
  410b3c:	ldr	x0, [sp, #144]
  410b40:	str	x0, [sp, #104]
  410b44:	cset	w0, ne  // ne = any
  410b48:	strb	w0, [x1]
  410b4c:	b	4100e8 <wcrtomb@plt+0xd7c8>
  410b50:	ands	w1, w1, #0x8
  410b54:	orr	w1, w1, #0x4
  410b58:	csel	w1, w5, w1, eq  // eq = none
  410b5c:	strb	w1, [x19, x3]
  410b60:	b	410220 <wcrtomb@plt+0xd900>
  410b64:	cbz	x27, 410320 <wcrtomb@plt+0xda00>
  410b68:	mov	x2, x0
  410b6c:	mov	x28, #0x0                   	// #0
  410b70:	ldr	w4, [x2, #8]
  410b74:	cmp	w1, w4
  410b78:	b.ne	410c20 <wcrtomb@plt+0xe300>  // b.any
  410b7c:	ldr	x4, [x2]
  410b80:	ldrb	w10, [x19, x4]
  410b84:	tst	w10, #0x6
  410b88:	b.ne	410c20 <wcrtomb@plt+0xe300>  // b.any
  410b8c:	ldr	x12, [x5, x4, lsl #3]
  410b90:	cmp	x9, x12
  410b94:	b.ne	410c20 <wcrtomb@plt+0xe300>  // b.any
  410b98:	eor	w10, w26, w10
  410b9c:	tbnz	w10, #0, 410c20 <wcrtomb@plt+0xe300>
  410ba0:	ldr	x1, [sp, #120]
  410ba4:	add	x0, x24, x24, lsl #1
  410ba8:	add	x9, x1, x0, lsl #3
  410bac:	ldr	x12, [x9, #8]
  410bb0:	tbnz	w26, #0, 410c78 <wcrtomb@plt+0xe358>
  410bb4:	ldr	x0, [sp, #120]
  410bb8:	add	x4, x4, x4, lsl #1
  410bbc:	cmp	x12, #0x3
  410bc0:	add	x2, x0, x4, lsl #3
  410bc4:	b.gt	410c48 <wcrtomb@plt+0xe328>
  410bc8:	cmp	x12, #0x0
  410bcc:	b.le	410c08 <wcrtomb@plt+0xe2e8>
  410bd0:	mov	x3, #0x0                   	// #0
  410bd4:	nop
  410bd8:	ldr	x0, [x9]
  410bdc:	str	x9, [sp, #112]
  410be0:	add	x0, x0, x3, lsl #4
  410be4:	add	x3, x3, #0x1
  410be8:	stp	x3, x2, [sp, #96]
  410bec:	ldp	x0, x1, [x0]
  410bf0:	bl	40da08 <wcrtomb@plt+0xb0e8>
  410bf4:	ldr	x9, [sp, #112]
  410bf8:	ldp	x3, x2, [sp, #96]
  410bfc:	ldr	x0, [x9, #8]
  410c00:	cmp	x3, x0
  410c04:	b.lt	410bd8 <wcrtomb@plt+0xe2b8>  // b.tstop
  410c08:	ldr	x11, [x21, #8]
  410c0c:	cmp	x27, x28
  410c10:	b.gt	410338 <wcrtomb@plt+0xda18>
  410c14:	ldr	x0, [x21]
  410c18:	add	x3, x0, x25
  410c1c:	b	410320 <wcrtomb@plt+0xda00>
  410c20:	add	x28, x28, #0x1
  410c24:	add	x2, x2, #0x10
  410c28:	cmp	x28, x27
  410c2c:	b.ne	410b70 <wcrtomb@plt+0xe250>  // b.any
  410c30:	b	410320 <wcrtomb@plt+0xda00>
  410c34:	ldr	x0, [sp, #120]
  410c38:	add	x4, x4, x4, lsl #1
  410c3c:	cmp	x12, #0x3
  410c40:	add	x2, x0, x4, lsl #3
  410c44:	b.le	410bd0 <wcrtomb@plt+0xe2b0>
  410c48:	add	x3, x2, #0x8
  410c4c:	add	x1, x9, #0x8
  410c50:	mov	x0, x9
  410c54:	add	x5, sp, #0xf8
  410c58:	mov	w4, #0xffffffff            	// #-1
  410c5c:	str	x2, [sp, #96]
  410c60:	bl	40dbb0 <wcrtomb@plt+0xb290>
  410c64:	ldr	x2, [sp, #96]
  410c68:	add	x0, sp, #0xf8
  410c6c:	ldr	x1, [sp, #144]
  410c70:	bl	40d6c0 <wcrtomb@plt+0xada0>
  410c74:	b	410c08 <wcrtomb@plt+0xe2e8>
  410c78:	cmp	x12, #0x0
  410c7c:	ldr	x1, [x1, x0, lsl #3]
  410c80:	b.le	410c0c <wcrtomb@plt+0xe2ec>
  410c84:	mov	x10, x12
  410c88:	mov	x5, #0x0                   	// #0
  410c8c:	b	410c9c <wcrtomb@plt+0xe37c>
  410c90:	add	x5, x2, #0x1
  410c94:	cmp	x10, x5
  410c98:	b.le	410c34 <wcrtomb@plt+0xe314>
  410c9c:	add	x2, x10, x5
  410ca0:	asr	x2, x2, #1
  410ca4:	lsl	x3, x2, #4
  410ca8:	add	x0, x1, x3
  410cac:	ldr	x11, [x1, x3]
  410cb0:	cmp	x24, x11
  410cb4:	b.gt	410c90 <wcrtomb@plt+0xe370>
  410cb8:	b.eq	410ddc <wcrtomb@plt+0xe4bc>  // b.none
  410cbc:	mov	x10, x2
  410cc0:	b	410c94 <wcrtomb@plt+0xe374>
  410cc4:	ldr	x0, [x23, #176]
  410cc8:	tbnz	x0, #63, 410fe4 <wcrtomb@plt+0xe6c4>
  410ccc:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  410cd0:	mov	x26, x0
  410cd4:	ldr	x1, [x23, #152]
  410cd8:	ldr	x2, [x23, #320]
  410cdc:	cmp	x1, #0x0
  410ce0:	mov	x0, x2
  410ce4:	b.gt	410470 <wcrtomb@plt+0xdb50>
  410ce8:	b	410538 <wcrtomb@plt+0xdc18>
  410cec:	str	x21, [x20, x4, lsl #3]
  410cf0:	add	x3, x21, #0x1
  410cf4:	str	x21, [x2], #16
  410cf8:	mov	x21, x3
  410cfc:	cmp	x5, x2
  410d00:	b.ne	4104f8 <wcrtomb@plt+0xdbd8>  // b.any
  410d04:	b	410514 <wcrtomb@plt+0xdbf4>
  410d08:	stp	x3, x4, [sp, #104]
  410d0c:	bl	4026b0 <free@plt>
  410d10:	ldp	x3, x4, [sp, #104]
  410d14:	ldr	x2, [x23, #320]
  410d18:	mov	x0, x2
  410d1c:	add	x4, x2, x4
  410d20:	str	xzr, [x2, x3, lsl #3]
  410d24:	str	xzr, [x4, #8]
  410d28:	b	410528 <wcrtomb@plt+0xdc08>
  410d2c:	ldr	x1, [sp, #152]
  410d30:	ldr	x0, [sp, #184]
  410d34:	cmp	x1, #0x0
  410d38:	ldr	x1, [sp, #176]
  410d3c:	add	x1, x0, x1
  410d40:	b.le	410d60 <wcrtomb@plt+0xe440>
  410d44:	nop
  410d48:	ldr	x3, [sp, #120]
  410d4c:	add	x3, x0, x3
  410d50:	ldp	x4, x5, [x3]
  410d54:	stp	x4, x5, [x0], #16
  410d58:	cmp	x1, x0
  410d5c:	b.ne	410d48 <wcrtomb@plt+0xe428>  // b.any
  410d60:	ldp	x1, x0, [sp, #120]
  410d64:	sub	x0, x0, x1
  410d68:	str	x0, [sp, #128]
  410d6c:	ldr	x0, [sp, #112]
  410d70:	ldr	x1, [sp, #152]
  410d74:	str	x1, [x0, #16]
  410d78:	mov	x1, x0
  410d7c:	b	410b30 <wcrtomb@plt+0xe210>
  410d80:	ldr	x11, [x23, #144]
  410d84:	lsl	x10, x21, #3
  410d88:	ldr	x9, [x23, #336]
  410d8c:	mov	x5, #0x0                   	// #0
  410d90:	mov	x4, #0x0                   	// #0
  410d94:	mov	x3, #0x0                   	// #0
  410d98:	add	x8, x22, x4
  410d9c:	add	x7, x2, x4
  410da0:	ldr	x0, [x28, x3]
  410da4:	str	x0, [x11, x3]
  410da8:	ldp	x0, x1, [x8]
  410dac:	stp	x0, x1, [x7]
  410db0:	ldr	w0, [x27, x5]
  410db4:	ldr	x1, [x8, #16]
  410db8:	str	x1, [x7, #16]
  410dbc:	str	w0, [x9, x5]
  410dc0:	add	x3, x3, #0x8
  410dc4:	cmp	x10, x3
  410dc8:	add	x4, x4, #0x18
  410dcc:	add	x5, x5, #0x4
  410dd0:	b.ne	410d98 <wcrtomb@plt+0xe478>  // b.any
  410dd4:	mov	x26, #0x0                   	// #0
  410dd8:	b	410594 <wcrtomb@plt+0xdc74>
  410ddc:	add	x5, x2, #0x1
  410de0:	cmp	x5, x12
  410de4:	b.ge	410fd8 <wcrtomb@plt+0xe6b8>  // b.tcont
  410de8:	sub	x12, x12, #0x1
  410dec:	add	x3, x3, #0x10
  410df0:	sub	x2, x12, x2
  410df4:	add	x1, x1, x3
  410df8:	stp	x12, x4, [sp, #96]
  410dfc:	lsl	x2, x2, #4
  410e00:	str	x9, [sp, #112]
  410e04:	bl	4022c0 <memmove@plt>
  410e08:	ldr	x9, [sp, #112]
  410e0c:	ldp	x12, x4, [sp, #96]
  410e10:	str	x12, [x9, #8]
  410e14:	b	410bb4 <wcrtomb@plt+0xe294>
  410e18:	sub	x0, x0, #0x10c
  410e1c:	mov	w22, #0x1ff                 	// #511
  410e20:	cmp	x0, #0x5
  410e24:	b.hi	410e38 <wcrtomb@plt+0xe518>  // b.pmore
  410e28:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  410e2c:	add	x1, x1, #0x818
  410e30:	add	x1, x1, #0x20
  410e34:	ldr	w22, [x1, x0, lsl #2]
  410e38:	mov	x7, x2
  410e3c:	mov	x5, #0x0                   	// #0
  410e40:	ldr	x1, [x21]
  410e44:	b	410e54 <wcrtomb@plt+0xe534>
  410e48:	add	x5, x3, #0x1
  410e4c:	cmp	x7, x5
  410e50:	b.le	410e80 <wcrtomb@plt+0xe560>
  410e54:	add	x3, x5, x7
  410e58:	asr	x3, x3, #1
  410e5c:	lsl	x4, x3, #4
  410e60:	add	x0, x1, x4
  410e64:	ldr	x9, [x1, x4]
  410e68:	cmp	x9, x19
  410e6c:	b.lt	410e48 <wcrtomb@plt+0xe528>  // b.tstop
  410e70:	b.eq	410f9c <wcrtomb@plt+0xe67c>  // b.none
  410e74:	mov	x7, x3
  410e78:	cmp	x7, x5
  410e7c:	b.gt	410e54 <wcrtomb@plt+0xe534>
  410e80:	mov	x21, #0x0                   	// #0
  410e84:	b	410e94 <wcrtomb@plt+0xe574>
  410e88:	add	x21, x21, #0x1
  410e8c:	cmp	x21, x8
  410e90:	b.ge	4101bc <wcrtomb@plt+0xd89c>  // b.tcont
  410e94:	cmp	x19, x21
  410e98:	b.eq	410e88 <wcrtomb@plt+0xe568>  // b.none
  410e9c:	ldr	x27, [x23, #320]
  410ea0:	add	x0, x21, x21, lsl #1
  410ea4:	add	x26, x27, x0, lsl #3
  410ea8:	ldr	x10, [x26, #8]
  410eac:	cmp	x10, #0x0
  410eb0:	b.le	410e88 <wcrtomb@plt+0xe568>
  410eb4:	mov	x7, x10
  410eb8:	mov	x4, #0x0                   	// #0
  410ebc:	ldr	x1, [x27, x0, lsl #3]
  410ec0:	b	410ed0 <wcrtomb@plt+0xe5b0>
  410ec4:	add	x4, x2, #0x1
  410ec8:	cmp	x7, x4
  410ecc:	b.le	410e88 <wcrtomb@plt+0xe568>
  410ed0:	add	x2, x4, x7
  410ed4:	asr	x2, x2, #1
  410ed8:	lsl	x3, x2, #4
  410edc:	add	x0, x1, x3
  410ee0:	ldr	x9, [x1, x3]
  410ee4:	cmp	x9, x19
  410ee8:	b.lt	410ec4 <wcrtomb@plt+0xe5a4>  // b.tstop
  410eec:	b.eq	410f04 <wcrtomb@plt+0xe5e4>  // b.none
  410ef0:	mov	x7, x2
  410ef4:	b	410ec8 <wcrtomb@plt+0xe5a8>
  410ef8:	lsl	x0, x19, #3
  410efc:	ldr	x0, [x1, x0]
  410f00:	b	410960 <wcrtomb@plt+0xe040>
  410f04:	add	x4, x2, #0x1
  410f08:	ldr	w28, [x0, #8]
  410f0c:	cmp	x4, x10
  410f10:	b.ge	410f38 <wcrtomb@plt+0xe618>  // b.tcont
  410f14:	sub	x4, x10, #0x1
  410f18:	add	x3, x3, #0x10
  410f1c:	sub	x2, x4, x2
  410f20:	add	x1, x1, x3
  410f24:	str	x4, [sp, #96]
  410f28:	lsl	x2, x2, #4
  410f2c:	bl	4022c0 <memmove@plt>
  410f30:	ldr	x4, [sp, #96]
  410f34:	mov	x2, x4
  410f38:	str	x2, [x26, #8]
  410f3c:	ands	w28, w22, w28
  410f40:	b.eq	410f74 <wcrtomb@plt+0xe654>  // b.none
  410f44:	add	x27, x27, x24
  410f48:	add	x2, sp, #0xf8
  410f4c:	add	x1, x26, #0x8
  410f50:	mov	x0, x26
  410f54:	bl	40d6c0 <wcrtomb@plt+0xada0>
  410f58:	mov	x5, x26
  410f5c:	mov	w4, w28
  410f60:	add	x3, x27, #0x8
  410f64:	mov	x2, x27
  410f68:	mov	x1, x25
  410f6c:	add	x0, sp, #0xf8
  410f70:	bl	40dbb0 <wcrtomb@plt+0xb290>
  410f74:	ldr	x8, [x23, #152]
  410f78:	b	410e88 <wcrtomb@plt+0xe568>
  410f7c:	add	x1, sp, #0xc0
  410f80:	mov	x0, x23
  410f84:	mov	w2, #0x7                   	// #7
  410f88:	bl	40df30 <wcrtomb@plt+0xb610>
  410f8c:	mov	w1, w0
  410f90:	sxtw	x0, w0
  410f94:	str	x0, [x23, #400]
  410f98:	b	410758 <wcrtomb@plt+0xde38>
  410f9c:	add	x5, x3, #0x1
  410fa0:	cmp	x2, x5
  410fa4:	b.le	410fc4 <wcrtomb@plt+0xe6a4>
  410fa8:	sub	x26, x2, #0x1
  410fac:	add	x4, x4, #0x10
  410fb0:	sub	x2, x26, x3
  410fb4:	add	x1, x1, x4
  410fb8:	lsl	x2, x2, #4
  410fbc:	bl	4022c0 <memmove@plt>
  410fc0:	mov	x3, x26
  410fc4:	str	x3, [x21, #8]
  410fc8:	ldr	x8, [x23, #152]
  410fcc:	cmp	x8, #0x0
  410fd0:	b.gt	410e80 <wcrtomb@plt+0xe560>
  410fd4:	b	4101cc <wcrtomb@plt+0xd8ac>
  410fd8:	mov	x12, x2
  410fdc:	str	x12, [x9, #8]
  410fe0:	b	410bb4 <wcrtomb@plt+0xe294>
  410fe4:	bl	41b778 <wcrtomb@plt+0x18e58>
  410fe8:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  410fec:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
  410ff0:	b	410a74 <wcrtomb@plt+0xe154>
  410ff4:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  410ff8:	mov	x28, #0x7ffffffffffffff     	// #576460752303423487
  410ffc:	b	4108e0 <wcrtomb@plt+0xdfc0>
  411000:	stp	x29, x30, [sp, #-320]!
  411004:	mov	x29, sp
  411008:	ldr	x2, [x0, #40]
  41100c:	stp	x19, x20, [sp, #16]
  411010:	stp	x21, x22, [sp, #32]
  411014:	stp	x23, x24, [sp, #48]
  411018:	stp	x25, x26, [sp, #64]
  41101c:	stp	x27, x28, [sp, #80]
  411020:	str	xzr, [x0, #104]
  411024:	stp	xzr, xzr, [sp, #144]
  411028:	stp	xzr, xzr, [sp, #160]
  41102c:	cbz	x2, 411c24 <wcrtomb@plt+0xf304>
  411030:	ldr	x1, [x0, #32]
  411034:	mov	x26, x0
  411038:	ldrb	w0, [x1]
  41103c:	add	x0, x26, x0, lsl #2
  411040:	ldr	w23, [x0, #1308]
  411044:	cmn	w23, #0x1
  411048:	b.eq	411a7c <wcrtomb@plt+0xf15c>  // b.none
  41104c:	str	w23, [x26, #72]
  411050:	mov	x0, x1
  411054:	sub	x2, x2, #0x1
  411058:	ldrb	w3, [x0], #1
  41105c:	stp	x0, x2, [x26, #32]
  411060:	cmp	w3, #0x5e
  411064:	str	w3, [sp, #120]
  411068:	b.eq	411ad0 <wcrtomb@plt+0xf1b0>  // b.none
  41106c:	cmp	w3, #0x3a
  411070:	mov	w19, w3
  411074:	cset	w21, eq  // eq = none
  411078:	mov	w0, #0x1                   	// #1
  41107c:	str	w0, [sp, #108]
  411080:	str	wzr, [sp, #124]
  411084:	add	x24, sp, #0xb8
  411088:	add	x20, sp, #0x90
  41108c:	add	x0, x24, #0x4
  411090:	str	x0, [sp, #112]
  411094:	and	w21, w21, #0xfffffffd
  411098:	cmp	w19, #0x5b
  41109c:	b.eq	4112c8 <wcrtomb@plt+0xe9a8>  // b.none
  4110a0:	cmp	w19, #0x5c
  4110a4:	b.eq	4111b4 <wcrtomb@plt+0xe894>  // b.none
  4110a8:	cbz	x2, 411804 <wcrtomb@plt+0xeee4>
  4110ac:	ldr	x1, [x26, #32]
  4110b0:	ldrb	w0, [x1]
  4110b4:	add	x0, x26, x0, lsl #2
  4110b8:	ldr	w27, [x0, #1308]
  4110bc:	cmn	w27, #0x1
  4110c0:	b.eq	411238 <wcrtomb@plt+0xe918>  // b.none
  4110c4:	str	w27, [x26, #72]
  4110c8:	ldrb	w0, [x1], #1
  4110cc:	sub	x2, x2, #0x1
  4110d0:	stp	x1, x2, [x26, #32]
  4110d4:	cmp	w0, #0x2d
  4110d8:	b.ne	411278 <wcrtomb@plt+0xe958>  // b.any
  4110dc:	cbz	x2, 411804 <wcrtomb@plt+0xeee4>
  4110e0:	ldrb	w0, [x1]
  4110e4:	add	x0, x26, x0, lsl #2
  4110e8:	ldr	w25, [x0, #1308]
  4110ec:	cmn	w25, #0x1
  4110f0:	b.eq	4111f8 <wcrtomb@plt+0xe8d8>  // b.none
  4110f4:	str	w25, [x26, #72]
  4110f8:	mov	x3, x1
  4110fc:	sub	x5, x2, #0x1
  411100:	ldrb	w22, [x3], #1
  411104:	stp	x3, x5, [x26, #32]
  411108:	cmp	w22, #0x5b
  41110c:	b.eq	4115f0 <wcrtomb@plt+0xecd0>  // b.none
  411110:	cmp	w22, #0x5d
  411114:	b.eq	411600 <wcrtomb@plt+0xece0>  // b.none
  411118:	cmp	w22, #0x5c
  41111c:	b.ne	41115c <wcrtomb@plt+0xe83c>  // b.any
  411120:	ldr	x0, [x26, #448]
  411124:	and	x27, x0, #0x1
  411128:	tbz	w0, #0, 41115c <wcrtomb@plt+0xe83c>
  41112c:	cbz	x5, 411c24 <wcrtomb@plt+0xf304>
  411130:	ldrb	w0, [x1, #1]
  411134:	add	x0, x26, x0, lsl #2
  411138:	ldr	w25, [x0, #1308]
  41113c:	cmn	w25, #0x1
  411140:	b.eq	411a38 <wcrtomb@plt+0xf118>  // b.none
  411144:	str	w25, [x26, #72]
  411148:	ldrb	w22, [x3]
  41114c:	mov	x0, #0x1                   	// #1
  411150:	add	x3, x3, x27
  411154:	sub	x5, x5, x0
  411158:	stp	x3, x5, [x26, #32]
  41115c:	orr	w21, w21, #0x8
  411160:	cbz	x5, 411804 <wcrtomb@plt+0xeee4>
  411164:	ldrb	w0, [x3]
  411168:	add	x0, x26, x0, lsl #2
  41116c:	ldr	w27, [x0, #1308]
  411170:	cmn	w27, #0x1
  411174:	b.eq	411408 <wcrtomb@plt+0xeae8>  // b.none
  411178:	str	w27, [x26, #72]
  41117c:	mov	x2, #0x1                   	// #1
  411180:	mov	x1, x2
  411184:	ldrb	w28, [x3]
  411188:	sub	x5, x5, x2
  41118c:	add	x3, x3, x1
  411190:	stp	x3, x5, [x26, #32]
  411194:	cmp	w25, w23
  411198:	ccmn	w23, #0x1, #0x4, eq  // eq = none
  41119c:	b.eq	411460 <wcrtomb@plt+0xeb40>  // b.none
  4111a0:	mov	w22, w19
  4111a4:	mov	w3, w23
  4111a8:	mov	w19, w28
  4111ac:	mov	w23, w27
  4111b0:	b	411288 <wcrtomb@plt+0xe968>
  4111b4:	ldr	x0, [x26, #448]
  4111b8:	and	x22, x0, #0x1
  4111bc:	tbz	w0, #0, 4110a8 <wcrtomb@plt+0xe788>
  4111c0:	cbz	x2, 411804 <wcrtomb@plt+0xeee4>
  4111c4:	ldr	x1, [x26, #32]
  4111c8:	ldrb	w0, [x1]
  4111cc:	add	x0, x26, x0, lsl #2
  4111d0:	ldr	w23, [x0, #1308]
  4111d4:	cmn	w23, #0x1
  4111d8:	b.eq	4113cc <wcrtomb@plt+0xeaac>  // b.none
  4111dc:	str	w23, [x26, #72]
  4111e0:	ldrb	w19, [x1]
  4111e4:	mov	x0, #0x1                   	// #1
  4111e8:	add	x1, x1, x22
  4111ec:	sub	x2, x2, x0
  4111f0:	stp	x1, x2, [x26, #32]
  4111f4:	b	4110a8 <wcrtomb@plt+0xe788>
  4111f8:	add	x3, x26, #0x110
  4111fc:	mov	x0, x24
  411200:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  411204:	sub	x1, x0, #0x1
  411208:	cmn	x1, #0x4
  41120c:	b.hi	41186c <wcrtomb@plt+0xef4c>  // b.pmore
  411210:	ldr	w25, [sp, #184]
  411214:	cmp	w0, #0x1
  411218:	str	w25, [x26, #72]
  41121c:	ldp	x1, x2, [x26, #32]
  411220:	b.eq	4110f8 <wcrtomb@plt+0xe7d8>  // b.none
  411224:	add	x3, x1, w0, sxtw
  411228:	sub	x5, x2, w0, sxtw
  41122c:	mov	w22, #0xffffffff            	// #-1
  411230:	stp	x3, x5, [x26, #32]
  411234:	b	41115c <wcrtomb@plt+0xe83c>
  411238:	add	x3, x26, #0x110
  41123c:	mov	x0, x24
  411240:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  411244:	sub	x1, x0, #0x1
  411248:	cmn	x1, #0x4
  41124c:	b.hi	411860 <wcrtomb@plt+0xef40>  // b.pmore
  411250:	ldr	w27, [sp, #184]
  411254:	cmp	w0, #0x1
  411258:	str	w27, [x26, #72]
  41125c:	ldp	x1, x2, [x26, #32]
  411260:	b.eq	4110c8 <wcrtomb@plt+0xe7a8>  // b.none
  411264:	add	x1, x1, w0, sxtw
  411268:	sub	x2, x2, w0, sxtw
  41126c:	mov	w0, #0xffffffff            	// #-1
  411270:	stp	x1, x2, [x26, #32]
  411274:	nop
  411278:	mov	w22, w19
  41127c:	mov	w3, w23
  411280:	mov	w19, w0
  411284:	mov	w23, w27
  411288:	mov	w1, #0x4                   	// #4
  41128c:	cmp	w22, #0x3a
  411290:	mov	w0, #0x2                   	// #2
  411294:	csel	w0, w0, w1, eq  // eq = none
  411298:	ldrb	w1, [x26, #1048]
  41129c:	orr	w21, w21, w0
  4112a0:	cbz	w1, 411338 <wcrtomb@plt+0xea18>
  4112a4:	cmn	w3, #0x1
  4112a8:	b.ne	4114f4 <wcrtomb@plt+0xebd4>  // b.any
  4112ac:	str	wzr, [sp, #108]
  4112b0:	cmp	w19, #0x5d
  4112b4:	b.eq	411370 <wcrtomb@plt+0xea50>  // b.none
  4112b8:	and	w21, w21, #0xfffffffd
  4112bc:	cmp	w19, #0x5b
  4112c0:	ldr	x2, [x26, #40]
  4112c4:	b.ne	4110a0 <wcrtomb@plt+0xe780>  // b.any
  4112c8:	cbz	x2, 411804 <wcrtomb@plt+0xeee4>
  4112cc:	ldr	x1, [x26, #32]
  4112d0:	ldrb	w0, [x1]
  4112d4:	add	x0, x26, x0, lsl #2
  4112d8:	ldr	w27, [x0, #1308]
  4112dc:	cmn	w27, #0x1
  4112e0:	b.eq	4114a0 <wcrtomb@plt+0xeb80>  // b.none
  4112e4:	str	w27, [x26, #72]
  4112e8:	ldrb	w25, [x1], #1
  4112ec:	sub	x2, x2, #0x1
  4112f0:	stp	x1, x2, [x26, #32]
  4112f4:	cmp	w25, #0x3a
  4112f8:	b.eq	411618 <wcrtomb@plt+0xecf8>  // b.none
  4112fc:	cmp	w25, #0x2e
  411300:	mov	w0, #0x3d                  	// #61
  411304:	ccmp	w25, w0, #0x4, ne  // ne = any
  411308:	b.eq	411620 <wcrtomb@plt+0xed00>  // b.none
  41130c:	cmp	w25, #0x2d
  411310:	b.eq	4110dc <wcrtomb@plt+0xe7bc>  // b.none
  411314:	nop
  411318:	mov	w3, w23
  41131c:	mov	w19, w25
  411320:	mov	w23, w27
  411324:	mov	w22, #0x5b                  	// #91
  411328:	mov	w0, #0x4                   	// #4
  41132c:	ldrb	w1, [x26, #1048]
  411330:	orr	w21, w21, w0
  411334:	cbnz	w1, 4112a4 <wcrtomb@plt+0xe984>
  411338:	ldrb	w0, [x26, #457]
  41133c:	cbz	w0, 411350 <wcrtomb@plt+0xea30>
  411340:	bl	4026a0 <__ctype_b_loc@plt>
  411344:	ldr	x0, [x0]
  411348:	ldrh	w0, [x0, w22, sxtw #1]
  41134c:	tbnz	w0, #10, 411844 <wcrtomb@plt+0xef24>
  411350:	lsr	w1, w22, #6
  411354:	mov	x0, #0x1                   	// #1
  411358:	lsl	x0, x0, x22
  41135c:	cmp	w19, #0x5d
  411360:	ldr	x2, [x20, x1, lsl #3]
  411364:	orr	x0, x0, x2
  411368:	str	x0, [x20, x1, lsl #3]
  41136c:	b.ne	4112b8 <wcrtomb@plt+0xe998>  // b.any
  411370:	cmp	w21, #0x7
  411374:	b.eq	411b80 <wcrtomb@plt+0xf260>  // b.none
  411378:	ldr	w1, [sp, #108]
  41137c:	mov	x0, #0x112                 	// #274
  411380:	cbz	w1, 4113b0 <wcrtomb@plt+0xea90>
  411384:	ldrb	w0, [x26, #1048]
  411388:	cbz	w0, 411a04 <wcrtomb@plt+0xf0e4>
  41138c:	ldr	w0, [sp, #120]
  411390:	cmp	w0, #0x5e
  411394:	b.eq	411bac <wcrtomb@plt+0xf28c>  // b.none
  411398:	ldr	x0, [x26, #104]
  41139c:	cbnz	x0, 411bac <wcrtomb@plt+0xf28c>
  4113a0:	mov	x0, x26
  4113a4:	add	x1, sp, #0x90
  4113a8:	bl	40dd98 <wcrtomb@plt+0xb478>
  4113ac:	add	x0, x0, #0x114
  4113b0:	ldp	x19, x20, [sp, #16]
  4113b4:	ldp	x21, x22, [sp, #32]
  4113b8:	ldp	x23, x24, [sp, #48]
  4113bc:	ldp	x25, x26, [sp, #64]
  4113c0:	ldp	x27, x28, [sp, #80]
  4113c4:	ldp	x29, x30, [sp], #320
  4113c8:	ret
  4113cc:	add	x3, x26, #0x110
  4113d0:	mov	x0, x24
  4113d4:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  4113d8:	sub	x1, x0, #0x1
  4113dc:	cmn	x1, #0x4
  4113e0:	b.hi	4119e0 <wcrtomb@plt+0xf0c0>  // b.pmore
  4113e4:	ldr	w23, [sp, #184]
  4113e8:	cmp	w0, #0x1
  4113ec:	str	w23, [x26, #72]
  4113f0:	ldp	x1, x2, [x26, #32]
  4113f4:	b.eq	4111e0 <wcrtomb@plt+0xe8c0>  // b.none
  4113f8:	sxtw	x22, w0
  4113fc:	mov	w19, #0xffffffff            	// #-1
  411400:	mov	x0, x22
  411404:	b	4111e8 <wcrtomb@plt+0xe8c8>
  411408:	mov	x1, x3
  41140c:	mov	x2, x5
  411410:	add	x3, x26, #0x110
  411414:	mov	x0, x24
  411418:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  41141c:	sub	x1, x0, #0x1
  411420:	cmn	x1, #0x4
  411424:	b.hi	4119d4 <wcrtomb@plt+0xf0b4>  // b.pmore
  411428:	ldr	w27, [sp, #184]
  41142c:	cmp	w0, #0x1
  411430:	str	w27, [x26, #72]
  411434:	ldp	x3, x5, [x26, #32]
  411438:	b.eq	41117c <wcrtomb@plt+0xe85c>  // b.none
  41143c:	sxtw	x1, w0
  411440:	cmp	w25, w23
  411444:	mov	x2, x1
  411448:	add	x3, x3, x1
  41144c:	sub	x5, x5, x2
  411450:	stp	x3, x5, [x26, #32]
  411454:	ccmn	w23, #0x1, #0x4, eq  // eq = none
  411458:	mov	w28, #0xffffffff            	// #-1
  41145c:	b.ne	4111a0 <wcrtomb@plt+0xe880>  // b.any
  411460:	ldrb	w0, [x26, #1049]
  411464:	cbnz	w0, 411878 <wcrtomb@plt+0xef58>
  411468:	sub	w1, w22, #0x30
  41146c:	sub	w0, w19, #0x30
  411470:	and	w1, w1, #0xff
  411474:	and	w0, w0, #0xff
  411478:	cmp	w1, #0x9
  41147c:	cset	w1, ls  // ls = plast
  411480:	cmp	w0, #0x9
  411484:	cset	w0, ls  // ls = plast
  411488:	tst	w1, w0
  41148c:	b.ne	411878 <wcrtomb@plt+0xef58>  // b.any
  411490:	mov	w23, w27
  411494:	mov	w19, w28
  411498:	str	wzr, [sp, #108]
  41149c:	b	4112b0 <wcrtomb@plt+0xe990>
  4114a0:	add	x3, x26, #0x110
  4114a4:	mov	x0, x24
  4114a8:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  4114ac:	sub	x1, x0, #0x1
  4114b0:	cmn	x1, #0x4
  4114b4:	b.hi	411854 <wcrtomb@plt+0xef34>  // b.pmore
  4114b8:	ldr	w27, [sp, #184]
  4114bc:	cmp	w0, #0x1
  4114c0:	str	w27, [x26, #72]
  4114c4:	ldp	x1, x2, [x26, #32]
  4114c8:	b.eq	4112e8 <wcrtomb@plt+0xe9c8>  // b.none
  4114cc:	add	x1, x1, w0, sxtw
  4114d0:	sub	x2, x2, w0, sxtw
  4114d4:	mov	w3, w23
  4114d8:	mov	w25, #0xffffffff            	// #-1
  4114dc:	mov	w23, w27
  4114e0:	mov	w19, w25
  4114e4:	mov	w22, #0x5b                  	// #91
  4114e8:	mov	w0, #0x4                   	// #4
  4114ec:	stp	x1, x2, [x26, #32]
  4114f0:	b	41132c <wcrtomb@plt+0xea0c>
  4114f4:	ldrb	w0, [x26, #457]
  4114f8:	cbnz	w0, 41181c <wcrtomb@plt+0xeefc>
  4114fc:	mov	w22, #0x1                   	// #1
  411500:	str	w3, [sp, #184]
  411504:	mov	x28, x24
  411508:	mov	w27, #0x0                   	// #0
  41150c:	mov	x25, #0x1                   	// #1
  411510:	b	411538 <wcrtomb@plt+0xec18>
  411514:	lsr	w1, w0, #6
  411518:	lsl	x0, x25, x0
  41151c:	ldr	x2, [x20, x1, lsl #3]
  411520:	orr	x0, x0, x2
  411524:	str	x0, [x20, x1, lsl #3]
  411528:	add	w27, w27, #0x1
  41152c:	add	x28, x28, #0x4
  411530:	cmp	w27, w22
  411534:	b.ge	4112b0 <wcrtomb@plt+0xe990>  // b.tcont
  411538:	ldr	w0, [x28]
  41153c:	bl	4023f0 <wctob@plt>
  411540:	tbz	w0, #31, 411514 <wcrtomb@plt+0xebf4>
  411544:	ldp	x0, x1, [x26, #96]
  411548:	ldr	x2, [x26, #112]
  41154c:	cmp	x1, x2
  411550:	b.lt	4115d4 <wcrtomb@plt+0xecb4>  // b.tstop
  411554:	asr	x3, x2, #1
  411558:	adds	x3, x2, x3
  41155c:	b.vs	411c14 <wcrtomb@plt+0xf2f4>
  411560:	asr	x7, x3, #63
  411564:	sbfx	x8, x3, #61, #1
  411568:	lsl	x1, x3, #2
  41156c:	extr	x7, x7, x3, #62
  411570:	cmp	x8, x7
  411574:	b.ne	411c14 <wcrtomb@plt+0xf2f4>  // b.any
  411578:	cmp	x1, #0x7f
  41157c:	mov	x4, #0x20                  	// #32
  411580:	csel	x3, x3, x4, gt
  411584:	mov	x4, #0x80                  	// #128
  411588:	csel	x1, x1, x4, gt
  41158c:	cbz	x0, 4115e8 <wcrtomb@plt+0xecc8>
  411590:	sub	x7, x3, x2
  411594:	cmp	x7, #0x0
  411598:	b.gt	4115c0 <wcrtomb@plt+0xeca0>
  41159c:	adds	x2, x2, #0x1
  4115a0:	mov	x3, x2
  4115a4:	b.vs	411c20 <wcrtomb@plt+0xf300>
  4115a8:	asr	x7, x2, #63
  4115ac:	sbfx	x8, x2, #61, #1
  4115b0:	lsl	x1, x2, #2
  4115b4:	extr	x7, x7, x2, #62
  4115b8:	cmp	x8, x7
  4115bc:	b.ne	411c20 <wcrtomb@plt+0xf300>  // b.any
  4115c0:	str	x3, [sp, #96]
  4115c4:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4115c8:	ldr	x1, [x26, #104]
  4115cc:	ldr	x3, [sp, #96]
  4115d0:	str	x3, [x26, #112]
  4115d4:	add	x2, x1, #0x1
  4115d8:	stp	x0, x2, [x26, #96]
  4115dc:	ldr	w2, [x28]
  4115e0:	str	w2, [x0, x1, lsl #2]
  4115e4:	b	411528 <wcrtomb@plt+0xec08>
  4115e8:	str	xzr, [x26, #112]
  4115ec:	b	411590 <wcrtomb@plt+0xec70>
  4115f0:	ldrb	w0, [x1, #1]
  4115f4:	cmp	w0, #0x2e
  4115f8:	b.ne	41115c <wcrtomb@plt+0xe83c>  // b.any
  4115fc:	str	wzr, [sp, #108]
  411600:	mov	w22, w19
  411604:	mov	w3, w23
  411608:	mov	w19, #0x2d                  	// #45
  41160c:	mov	w23, w27
  411610:	stp	x1, x2, [x26, #32]
  411614:	b	411288 <wcrtomb@plt+0xe968>
  411618:	ldr	x0, [x26, #448]
  41161c:	tbz	w0, #2, 411318 <wcrtomb@plt+0xe9f8>
  411620:	cbz	x2, 411804 <wcrtomb@plt+0xeee4>
  411624:	ldrb	w0, [x1]
  411628:	add	x23, x26, #0x110
  41162c:	mov	w22, #0x0                   	// #0
  411630:	add	x0, x26, x0, lsl #2
  411634:	ldr	w19, [x0, #1308]
  411638:	cmn	w19, #0x1
  41163c:	b.eq	41168c <wcrtomb@plt+0xed6c>  // b.none
  411640:	ldr	x2, [x26, #40]
  411644:	str	w19, [x26, #72]
  411648:	mov	x0, x1
  41164c:	sub	x2, x2, #0x1
  411650:	ldrb	w5, [x0], #1
  411654:	stp	x0, x2, [x26, #32]
  411658:	cbz	x2, 411804 <wcrtomb@plt+0xeee4>
  41165c:	cmp	w5, w25
  411660:	b.eq	4116e4 <wcrtomb@plt+0xedc4>  // b.none
  411664:	cmp	w22, #0x1f
  411668:	b.gt	4116d8 <wcrtomb@plt+0xedb8>
  41166c:	ldr	x1, [x26, #32]
  411670:	strb	w5, [x24, w22, sxtw]
  411674:	add	w22, w22, #0x1
  411678:	ldrb	w0, [x1]
  41167c:	add	x0, x26, x0, lsl #2
  411680:	ldr	w19, [x0, #1308]
  411684:	cmn	w19, #0x1
  411688:	b.ne	411640 <wcrtomb@plt+0xed20>  // b.any
  41168c:	mov	x3, x23
  411690:	add	x0, sp, #0x8c
  411694:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  411698:	sub	x1, x0, #0x1
  41169c:	cmn	x1, #0x4
  4116a0:	b.hi	4117f8 <wcrtomb@plt+0xeed8>  // b.pmore
  4116a4:	ldr	w1, [sp, #140]
  4116a8:	cmp	w0, #0x1
  4116ac:	str	w1, [x26, #72]
  4116b0:	ldr	x1, [x26, #32]
  4116b4:	ldr	x2, [x26, #40]
  4116b8:	b.eq	411648 <wcrtomb@plt+0xed28>  // b.none
  4116bc:	add	x1, x1, w0, sxtw
  4116c0:	sub	x2, x2, w0, sxtw
  4116c4:	stp	x1, x2, [x26, #32]
  4116c8:	cbz	x2, 411804 <wcrtomb@plt+0xeee4>
  4116cc:	cmp	w22, #0x1f
  4116d0:	mov	w5, #0xff                  	// #255
  4116d4:	b.le	41166c <wcrtomb@plt+0xed4c>
  4116d8:	strb	wzr, [sp, #184]
  4116dc:	ldr	x1, [x26, #32]
  4116e0:	b	411678 <wcrtomb@plt+0xed58>
  4116e4:	ldrb	w1, [x1, #1]
  4116e8:	cmp	w1, #0x5d
  4116ec:	b.ne	411664 <wcrtomb@plt+0xed44>  // b.any
  4116f0:	ldr	w19, [x26, #1680]
  4116f4:	strb	wzr, [x24, w22, sxtw]
  4116f8:	cmn	w19, #0x1
  4116fc:	b.eq	4118f4 <wcrtomb@plt+0xefd4>  // b.none
  411700:	mov	x22, #0x1                   	// #1
  411704:	mov	x1, x22
  411708:	str	w19, [x26, #72]
  41170c:	add	x0, x0, x1
  411710:	sub	x22, x2, x22
  411714:	stp	x0, x22, [x26, #32]
  411718:	cmp	w25, #0x3a
  41171c:	b.eq	4117a4 <wcrtomb@plt+0xee84>  // b.none
  411720:	str	wzr, [sp, #108]
  411724:	orr	w21, w21, #0x8
  411728:	cbz	x22, 411804 <wcrtomb@plt+0xeee4>
  41172c:	ldr	x1, [x26, #32]
  411730:	ldrb	w0, [x1]
  411734:	add	x0, x26, x0, lsl #2
  411738:	ldr	w23, [x0, #1308]
  41173c:	cmn	w23, #0x1
  411740:	b.eq	411764 <wcrtomb@plt+0xee44>  // b.none
  411744:	str	w23, [x26, #72]
  411748:	ldrb	w19, [x1]
  41174c:	mov	x2, #0x1                   	// #1
  411750:	mov	x0, x2
  411754:	add	x1, x1, x0
  411758:	sub	x2, x22, x2
  41175c:	stp	x1, x2, [x26, #32]
  411760:	b	4112b0 <wcrtomb@plt+0xe990>
  411764:	mov	x2, x22
  411768:	add	x3, x26, #0x110
  41176c:	add	x0, sp, #0x8c
  411770:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  411774:	sub	x1, x0, #0x1
  411778:	cmn	x1, #0x4
  41177c:	b.hi	4119f8 <wcrtomb@plt+0xf0d8>  // b.pmore
  411780:	ldr	w23, [sp, #140]
  411784:	cmp	w0, #0x1
  411788:	str	w23, [x26, #72]
  41178c:	ldp	x1, x22, [x26, #32]
  411790:	b.eq	411748 <wcrtomb@plt+0xee28>  // b.none
  411794:	sxtw	x0, w0
  411798:	mov	w19, #0xffffffff            	// #-1
  41179c:	mov	x2, x0
  4117a0:	b	411754 <wcrtomb@plt+0xee34>
  4117a4:	ldrb	w0, [x26, #457]
  4117a8:	cbnz	w0, 41192c <wcrtomb@plt+0xf00c>
  4117ac:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x12510>
  4117b0:	add	x19, x19, #0x818
  4117b4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4117b8:	add	x25, x19, #0x38
  4117bc:	add	x1, x1, #0x4a8
  4117c0:	mov	w23, #0x0                   	// #0
  4117c4:	nop
  4117c8:	mov	x0, x24
  4117cc:	bl	402690 <strcmp@plt>
  4117d0:	cbz	w0, 41196c <wcrtomb@plt+0xf04c>
  4117d4:	ldr	x1, [x25, #24]!
  4117d8:	add	w23, w23, #0x1
  4117dc:	cbnz	x1, 4117c8 <wcrtomb@plt+0xeea8>
  4117e0:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4117e4:	add	x1, x1, #0x4f8
  4117e8:	mov	w2, #0x5                   	// #5
  4117ec:	mov	x0, #0x0                   	// #0
  4117f0:	bl	4027f0 <dcgettext@plt>
  4117f4:	bl	4041c0 <wcrtomb@plt+0x18a0>
  4117f8:	str	xzr, [x23]
  4117fc:	ldr	x1, [x26, #32]
  411800:	b	411640 <wcrtomb@plt+0xed20>
  411804:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  411808:	add	x1, x1, #0x490
  41180c:	mov	w2, #0x5                   	// #5
  411810:	mov	x0, #0x0                   	// #0
  411814:	bl	4027f0 <dcgettext@plt>
  411818:	bl	4041c0 <wcrtomb@plt+0x18a0>
  41181c:	ldr	x1, [sp, #112]
  411820:	mov	w0, w3
  411824:	str	w3, [sp, #96]
  411828:	bl	4147b8 <wcrtomb@plt+0x11e98>
  41182c:	add	w22, w0, #0x1
  411830:	ldr	w3, [sp, #96]
  411834:	cmp	w22, #0x0
  411838:	str	w3, [sp, #184]
  41183c:	b.gt	411504 <wcrtomb@plt+0xebe4>
  411840:	b	4112b0 <wcrtomb@plt+0xe990>
  411844:	mov	w0, w22
  411848:	mov	x1, x20
  41184c:	bl	40d500 <wcrtomb@plt+0xabe0>
  411850:	b	4112b0 <wcrtomb@plt+0xe990>
  411854:	str	xzr, [x26, #272]
  411858:	ldp	x1, x2, [x26, #32]
  41185c:	b	4112e4 <wcrtomb@plt+0xe9c4>
  411860:	str	xzr, [x26, #272]
  411864:	ldp	x1, x2, [x26, #32]
  411868:	b	4110c4 <wcrtomb@plt+0xe7a4>
  41186c:	str	xzr, [x26, #272]
  411870:	ldp	x1, x2, [x26, #32]
  411874:	b	4110f4 <wcrtomb@plt+0xe7d4>
  411878:	cmp	w22, w19
  41187c:	sbfiz	x25, x19, #1, #32
  411880:	add	w22, w22, #0x1
  411884:	mov	x23, #0x1                   	// #1
  411888:	b.ge	4118b4 <wcrtomb@plt+0xef94>  // b.tcont
  41188c:	b	4118e8 <wcrtomb@plt+0xefc8>
  411890:	lsr	w1, w19, #6
  411894:	lsl	x0, x23, x19
  411898:	add	w19, w19, #0x1
  41189c:	add	x25, x25, #0x2
  4118a0:	cmp	w19, w22
  4118a4:	ldr	x2, [x20, x1, lsl #3]
  4118a8:	orr	x0, x0, x2
  4118ac:	str	x0, [x20, x1, lsl #3]
  4118b0:	b.eq	4118e8 <wcrtomb@plt+0xefc8>  // b.none
  4118b4:	ldrb	w0, [x26, #457]
  4118b8:	cbz	w0, 411890 <wcrtomb@plt+0xef70>
  4118bc:	bl	4026a0 <__ctype_b_loc@plt>
  4118c0:	ldr	x0, [x0]
  4118c4:	ldrh	w0, [x0, x25]
  4118c8:	tbz	w0, #10, 411890 <wcrtomb@plt+0xef70>
  4118cc:	mov	w0, w19
  4118d0:	mov	x1, x20
  4118d4:	add	w19, w19, #0x1
  4118d8:	bl	40d500 <wcrtomb@plt+0xabe0>
  4118dc:	add	x25, x25, #0x2
  4118e0:	cmp	w19, w22
  4118e4:	b.ne	4118b4 <wcrtomb@plt+0xef94>  // b.any
  4118e8:	mov	w23, w27
  4118ec:	mov	w19, w28
  4118f0:	b	4112b0 <wcrtomb@plt+0xe990>
  4118f4:	mov	x1, x0
  4118f8:	add	x3, x26, #0x110
  4118fc:	add	x0, sp, #0x8c
  411900:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  411904:	sub	x1, x0, #0x1
  411908:	cmn	x1, #0x4
  41190c:	b.hi	4119ec <wcrtomb@plt+0xf0cc>  // b.pmore
  411910:	sxtw	x1, w0
  411914:	ldr	w0, [sp, #140]
  411918:	mov	x22, x1
  41191c:	str	w0, [x26, #72]
  411920:	ldr	x0, [x26, #32]
  411924:	ldr	x2, [x26, #40]
  411928:	b	41170c <wcrtomb@plt+0xedec>
  41192c:	ldr	w1, [x24]
  411930:	mov	w0, #0x7075                	// #28789
  411934:	movk	w0, #0x6570, lsl #16
  411938:	cmp	w1, w0
  41193c:	b.eq	411b9c <wcrtomb@plt+0xf27c>  // b.none
  411940:	ldr	w1, [x24]
  411944:	mov	w0, #0x6f6c                	// #28524
  411948:	movk	w0, #0x6577, lsl #16
  41194c:	cmp	w1, w0
  411950:	b.ne	4117ac <wcrtomb@plt+0xee8c>  // b.any
  411954:	ldrh	w0, [x24, #4]
  411958:	cmp	w0, #0x72
  41195c:	b.ne	4117ac <wcrtomb@plt+0xee8c>  // b.any
  411960:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x12510>
  411964:	add	x19, x19, #0x818
  411968:	mov	w23, #0x0                   	// #0
  41196c:	ldrb	w0, [x26, #1048]
  411970:	sxtw	x1, w23
  411974:	cbz	w0, 411988 <wcrtomb@plt+0xf068>
  411978:	add	x0, x1, w23, sxtw #1
  41197c:	add	x0, x19, x0, lsl #3
  411980:	ldrb	w0, [x0, #72]
  411984:	cbz	w0, 411720 <wcrtomb@plt+0xee00>
  411988:	add	x1, x1, x1, lsl #1
  41198c:	mov	w23, #0x0                   	// #0
  411990:	mov	x22, #0x1                   	// #1
  411994:	add	x19, x19, x1, lsl #3
  411998:	ldr	x19, [x19, #64]
  41199c:	nop
  4119a0:	mov	w0, w23
  4119a4:	blr	x19
  4119a8:	cbz	w0, 4119c0 <wcrtomb@plt+0xf0a0>
  4119ac:	lsr	w1, w23, #6
  4119b0:	lsl	x0, x22, x23
  4119b4:	ldr	x2, [x20, x1, lsl #3]
  4119b8:	orr	x0, x0, x2
  4119bc:	str	x0, [x20, x1, lsl #3]
  4119c0:	add	w23, w23, #0x1
  4119c4:	cmp	w23, #0x100
  4119c8:	b.ne	4119a0 <wcrtomb@plt+0xf080>  // b.any
  4119cc:	ldr	x22, [x26, #40]
  4119d0:	b	411724 <wcrtomb@plt+0xee04>
  4119d4:	str	xzr, [x26, #272]
  4119d8:	ldp	x3, x5, [x26, #32]
  4119dc:	b	411178 <wcrtomb@plt+0xe858>
  4119e0:	str	xzr, [x26, #272]
  4119e4:	ldp	x1, x2, [x26, #32]
  4119e8:	b	4111dc <wcrtomb@plt+0xe8bc>
  4119ec:	str	xzr, [x26, #272]
  4119f0:	ldp	x0, x2, [x26, #32]
  4119f4:	b	411700 <wcrtomb@plt+0xede0>
  4119f8:	str	xzr, [x26, #272]
  4119fc:	ldp	x1, x22, [x26, #32]
  411a00:	b	411744 <wcrtomb@plt+0xee24>
  411a04:	ldr	w0, [sp, #120]
  411a08:	cmp	w0, #0x5e
  411a0c:	b.ne	4113a0 <wcrtomb@plt+0xea80>  // b.any
  411a10:	ldp	q1, q0, [sp, #144]
  411a14:	ldr	x0, [x26, #448]
  411a18:	mvn	v1.16b, v1.16b
  411a1c:	mvn	v0.16b, v0.16b
  411a20:	stp	q1, q0, [sp, #144]
  411a24:	tbz	w0, #8, 4113a0 <wcrtomb@plt+0xea80>
  411a28:	ldr	x0, [sp, #144]
  411a2c:	and	x0, x0, #0xfffffffffffffbff
  411a30:	str	x0, [sp, #144]
  411a34:	b	4113a0 <wcrtomb@plt+0xea80>
  411a38:	mov	x1, x3
  411a3c:	mov	x2, x5
  411a40:	add	x3, x26, #0x110
  411a44:	mov	x0, x24
  411a48:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  411a4c:	sub	x1, x0, #0x1
  411a50:	cmn	x1, #0x4
  411a54:	b.hi	411b20 <wcrtomb@plt+0xf200>  // b.pmore
  411a58:	ldr	w25, [sp, #184]
  411a5c:	cmp	w0, #0x1
  411a60:	str	w25, [x26, #72]
  411a64:	ldp	x3, x5, [x26, #32]
  411a68:	b.eq	411148 <wcrtomb@plt+0xe828>  // b.none
  411a6c:	sxtw	x27, w0
  411a70:	mov	w22, #0xffffffff            	// #-1
  411a74:	mov	x0, x27
  411a78:	b	411150 <wcrtomb@plt+0xe830>
  411a7c:	add	x3, x26, #0x110
  411a80:	add	x0, sp, #0xb8
  411a84:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  411a88:	sub	x1, x0, #0x1
  411a8c:	cmn	x1, #0x4
  411a90:	b.hi	411b2c <wcrtomb@plt+0xf20c>  // b.pmore
  411a94:	ldr	w23, [sp, #184]
  411a98:	cmp	w0, #0x1
  411a9c:	str	w23, [x26, #72]
  411aa0:	ldp	x1, x2, [x26, #32]
  411aa4:	b.eq	411050 <wcrtomb@plt+0xe730>  // b.none
  411aa8:	add	x1, x1, w0, sxtw
  411aac:	sub	x2, x2, w0, sxtw
  411ab0:	mov	w0, #0xffffffff            	// #-1
  411ab4:	mov	w21, #0x0                   	// #0
  411ab8:	mov	w19, w0
  411abc:	stp	x1, x2, [x26, #32]
  411ac0:	stp	w0, wzr, [sp, #120]
  411ac4:	mov	w0, #0x1                   	// #1
  411ac8:	str	w0, [sp, #108]
  411acc:	b	411084 <wcrtomb@plt+0xe764>
  411ad0:	cbz	x2, 411c24 <wcrtomb@plt+0xf304>
  411ad4:	ldrb	w1, [x1, #1]
  411ad8:	add	x1, x26, x1, lsl #2
  411adc:	ldr	w23, [x1, #1308]
  411ae0:	cmn	w23, #0x1
  411ae4:	b.eq	411b38 <wcrtomb@plt+0xf218>  // b.none
  411ae8:	str	w23, [x26, #72]
  411aec:	ldrb	w19, [x0]
  411af0:	mov	x3, #0x1                   	// #1
  411af4:	mov	x1, x3
  411af8:	cmp	w19, #0x3a
  411afc:	cset	w21, eq  // eq = none
  411b00:	ldrb	w4, [x26, #1049]
  411b04:	add	x0, x0, x1
  411b08:	sub	x2, x2, x3
  411b0c:	mov	w1, #0x1                   	// #1
  411b10:	stp	x0, x2, [x26, #32]
  411b14:	str	w4, [sp, #108]
  411b18:	str	w1, [sp, #124]
  411b1c:	b	411084 <wcrtomb@plt+0xe764>
  411b20:	str	xzr, [x26, #272]
  411b24:	ldp	x3, x5, [x26, #32]
  411b28:	b	411144 <wcrtomb@plt+0xe824>
  411b2c:	str	xzr, [x26, #272]
  411b30:	ldp	x1, x2, [x26, #32]
  411b34:	b	41104c <wcrtomb@plt+0xe72c>
  411b38:	mov	x1, x0
  411b3c:	add	x3, x26, #0x110
  411b40:	add	x0, sp, #0xb8
  411b44:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  411b48:	mov	x1, x0
  411b4c:	sub	x0, x0, #0x1
  411b50:	cmn	x0, #0x4
  411b54:	b.hi	411bf4 <wcrtomb@plt+0xf2d4>  // b.pmore
  411b58:	ldr	w23, [sp, #184]
  411b5c:	cmp	w1, #0x1
  411b60:	str	w23, [x26, #72]
  411b64:	ldp	x0, x2, [x26, #32]
  411b68:	b.eq	411aec <wcrtomb@plt+0xf1cc>  // b.none
  411b6c:	sxtw	x1, w1
  411b70:	mov	w21, #0x0                   	// #0
  411b74:	mov	x3, x1
  411b78:	mov	w19, #0xffffffff            	// #-1
  411b7c:	b	411b00 <wcrtomb@plt+0xf1e0>
  411b80:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  411b84:	add	x1, x1, #0x4c0
  411b88:	mov	w2, #0x5                   	// #5
  411b8c:	mov	x0, #0x0                   	// #0
  411b90:	bl	4027f0 <dcgettext@plt>
  411b94:	bl	4041e0 <wcrtomb@plt+0x18c0>
  411b98:	b	411378 <wcrtomb@plt+0xea58>
  411b9c:	ldrh	w0, [x24, #4]
  411ba0:	cmp	w0, #0x72
  411ba4:	b.ne	411940 <wcrtomb@plt+0xf020>  // b.any
  411ba8:	b	411960 <wcrtomb@plt+0xf040>
  411bac:	ldrb	w1, [sp, #124]
  411bb0:	strb	w1, [x26, #88]
  411bb4:	ldp	x0, x1, [sp, #144]
  411bb8:	ldp	x3, x2, [sp, #160]
  411bbc:	orr	x0, x0, x1
  411bc0:	mov	x1, #0xffffffffffffffff    	// #-1
  411bc4:	orr	x2, x2, x3
  411bc8:	orr	x0, x0, x2
  411bcc:	cbnz	x0, 411c00 <wcrtomb@plt+0xf2e0>
  411bd0:	str	x1, [x26, #80]
  411bd4:	mov	x0, #0x113                 	// #275
  411bd8:	ldp	x19, x20, [sp, #16]
  411bdc:	ldp	x21, x22, [sp, #32]
  411be0:	ldp	x23, x24, [sp, #48]
  411be4:	ldp	x25, x26, [sp, #64]
  411be8:	ldp	x27, x28, [sp, #80]
  411bec:	ldp	x29, x30, [sp], #320
  411bf0:	ret
  411bf4:	str	xzr, [x26, #272]
  411bf8:	ldp	x0, x2, [x26, #32]
  411bfc:	b	411ae8 <wcrtomb@plt+0xf1c8>
  411c00:	add	x1, sp, #0x90
  411c04:	mov	x0, x26
  411c08:	bl	40dd98 <wcrtomb@plt+0xb478>
  411c0c:	mov	x1, x0
  411c10:	b	411bd0 <wcrtomb@plt+0xf2b0>
  411c14:	mov	x3, #0x1fffffffffffffff    	// #2305843009213693951
  411c18:	mov	x1, #0x7ffffffffffffffc    	// #9223372036854775804
  411c1c:	b	41158c <wcrtomb@plt+0xec6c>
  411c20:	bl	41b778 <wcrtomb@plt+0x18e58>
  411c24:	bl	40d6a0 <wcrtomb@plt+0xad80>
  411c28:	stp	x29, x30, [sp, #-96]!
  411c2c:	mov	x29, sp
  411c30:	ldr	x2, [x0, #40]
  411c34:	stp	x19, x20, [sp, #16]
  411c38:	mov	x19, x0
  411c3c:	cbz	x2, 41230c <wcrtomb@plt+0xf9ec>
  411c40:	ldr	x1, [x0, #32]
  411c44:	stp	x21, x22, [sp, #32]
  411c48:	ldrb	w0, [x1]
  411c4c:	add	x0, x19, x0, lsl #2
  411c50:	ldr	w20, [x0, #1308]
  411c54:	cmn	w20, #0x1
  411c58:	b.eq	411cc0 <wcrtomb@plt+0xf3a0>  // b.none
  411c5c:	str	w20, [x19, #72]
  411c60:	mov	x20, x1
  411c64:	sub	x2, x2, #0x1
  411c68:	ldrb	w21, [x20], #1
  411c6c:	stp	x20, x2, [x19, #32]
  411c70:	sub	w0, w21, #0xa
  411c74:	cmp	w0, #0x72
  411c78:	b.ls	411ca8 <wcrtomb@plt+0xf388>  // b.plast
  411c7c:	ldrb	w3, [x19, #1048]
  411c80:	strb	wzr, [x19, #120]
  411c84:	cbnz	w3, 411d24 <wcrtomb@plt+0xf404>
  411c88:	ldrb	w0, [x19, #457]
  411c8c:	cbnz	w0, 411ce4 <wcrtomb@plt+0xf3c4>
  411c90:	sxtw	x0, w21
  411c94:	ldp	x21, x22, [sp, #32]
  411c98:	str	x0, [x19, #48]
  411c9c:	ldp	x19, x20, [sp, #16]
  411ca0:	ldp	x29, x30, [sp], #96
  411ca4:	ret
  411ca8:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  411cac:	add	x3, x3, #0x648
  411cb0:	ldrh	w0, [x3, w0, uxtw #1]
  411cb4:	adr	x3, 411cc0 <wcrtomb@plt+0xf3a0>
  411cb8:	add	x0, x3, w0, sxth #2
  411cbc:	br	x0
  411cc0:	add	x3, x19, #0x110
  411cc4:	add	x0, sp, #0x40
  411cc8:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  411ccc:	sub	x1, x0, #0x1
  411cd0:	cmn	x1, #0x4
  411cd4:	b.ls	411d40 <wcrtomb@plt+0xf420>  // b.plast
  411cd8:	str	xzr, [x19, #272]
  411cdc:	ldp	x1, x2, [x19, #32]
  411ce0:	b	411c5c <wcrtomb@plt+0xf33c>
  411ce4:	bl	4026a0 <__ctype_b_loc@plt>
  411ce8:	mov	x1, x0
  411cec:	sxtw	x0, w21
  411cf0:	ldr	x1, [x1]
  411cf4:	ldrh	w1, [x1, w21, sxtw #1]
  411cf8:	tbz	w1, #10, 411c94 <wcrtomb@plt+0xf374>
  411cfc:	add	x1, sp, #0x40
  411d00:	mov	w0, w21
  411d04:	stp	xzr, xzr, [sp, #64]
  411d08:	stp	xzr, xzr, [sp, #80]
  411d0c:	bl	40d500 <wcrtomb@plt+0xabe0>
  411d10:	add	x1, sp, #0x40
  411d14:	mov	x0, x19
  411d18:	bl	40dd98 <wcrtomb@plt+0xb478>
  411d1c:	add	x0, x0, #0x114
  411d20:	b	411c94 <wcrtomb@plt+0xf374>
  411d24:	mov	x1, #0x109                 	// #265
  411d28:	mov	x0, x1
  411d2c:	ldp	x21, x22, [sp, #32]
  411d30:	str	x1, [x19, #48]
  411d34:	ldp	x19, x20, [sp, #16]
  411d38:	ldp	x29, x30, [sp], #96
  411d3c:	ret
  411d40:	ldr	w1, [sp, #64]
  411d44:	cmp	w0, #0x1
  411d48:	str	w1, [x19, #72]
  411d4c:	ldr	x1, [x19, #32]
  411d50:	ldr	x2, [x19, #40]
  411d54:	b.eq	411c60 <wcrtomb@plt+0xf340>  // b.none
  411d58:	sxtw	x0, w0
  411d5c:	ldrb	w3, [x19, #1048]
  411d60:	add	x1, x1, x0
  411d64:	mov	w21, #0xffffffff            	// #-1
  411d68:	sub	x0, x2, x0
  411d6c:	stp	x1, x0, [x19, #32]
  411d70:	b	411c80 <wcrtomb@plt+0xf360>
  411d74:	ldr	x0, [x19, #448]
  411d78:	tbz	w0, #10, 41231c <wcrtomb@plt+0xf9fc>
  411d7c:	ldrb	w3, [x19, #1048]
  411d80:	mov	w21, #0xa                   	// #10
  411d84:	b	411c80 <wcrtomb@plt+0xf360>
  411d88:	ldrb	w3, [x19, #1048]
  411d8c:	mov	w21, #0x62                  	// #98
  411d90:	b	411c80 <wcrtomb@plt+0xf360>
  411d94:	ldrb	w3, [x19, #1048]
  411d98:	mov	w21, #0x60                  	// #96
  411d9c:	b	411c80 <wcrtomb@plt+0xf360>
  411da0:	ldrb	w3, [x19, #1048]
  411da4:	mov	w21, #0x27                  	// #39
  411da8:	b	411c80 <wcrtomb@plt+0xf360>
  411dac:	ldrb	w3, [x19, #1048]
  411db0:	mov	w21, #0x3c                  	// #60
  411db4:	b	411c80 <wcrtomb@plt+0xf360>
  411db8:	ldrb	w3, [x19, #1048]
  411dbc:	mov	w21, #0x3e                  	// #62
  411dc0:	b	411c80 <wcrtomb@plt+0xf360>
  411dc4:	ldrb	w3, [x19, #1048]
  411dc8:	mov	w21, #0x42                  	// #66
  411dcc:	b	411c80 <wcrtomb@plt+0xf360>
  411dd0:	ldr	x0, [x19, #448]
  411dd4:	tbnz	w0, #3, 412208 <wcrtomb@plt+0xf8e8>
  411dd8:	ldr	x0, [x19, #48]
  411ddc:	sub	x1, x0, #0x106
  411de0:	cmp	x1, #0x1
  411de4:	ccmn	x0, #0x1, #0x4, hi  // hi = pmore
  411de8:	b.eq	412208 <wcrtomb@plt+0xf8e8>  // b.none
  411dec:	ldrb	w3, [x19, #1048]
  411df0:	mov	w21, #0x5e                  	// #94
  411df4:	b	411c80 <wcrtomb@plt+0xf360>
  411df8:	ldr	x0, [x19, #24]
  411dfc:	ldrb	w1, [x19, #1048]
  411e00:	tbnz	x0, #63, 412360 <wcrtomb@plt+0xfa40>
  411e04:	cmp	w1, #0x0
  411e08:	add	x0, x0, #0x114
  411e0c:	mov	x1, #0x10a                 	// #266
  411e10:	csel	x0, x0, x1, eq  // eq = none
  411e14:	strb	wzr, [x19, #120]
  411e18:	ldp	x21, x22, [sp, #32]
  411e1c:	str	x0, [x19, #48]
  411e20:	b	411c9c <wcrtomb@plt+0xf37c>
  411e24:	ldr	x3, [x19, #448]
  411e28:	tst	x3, #0x8
  411e2c:	ccmp	x2, #0x0, #0x4, eq  // eq = none
  411e30:	b.eq	4121d0 <wcrtomb@plt+0xf8b0>  // b.none
  411e34:	lsr	x0, x3, #13
  411e38:	eor	x0, x0, #0x1
  411e3c:	and	x4, x0, #0x1
  411e40:	and	w0, w0, #0x1
  411e44:	cmp	x4, x2
  411e48:	b.ge	411e68 <wcrtomb@plt+0xf548>  // b.tcont
  411e4c:	ldrb	w4, [x1, #1]
  411e50:	cmp	w4, #0x5c
  411e54:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  411e58:	cset	x0, ne  // ne = any
  411e5c:	ldrb	w0, [x20, x0]
  411e60:	cmp	w0, #0x29
  411e64:	b.eq	4121d0 <wcrtomb@plt+0xf8b0>  // b.none
  411e68:	lsr	x0, x3, #15
  411e6c:	eor	x0, x0, #0x1
  411e70:	and	x4, x0, #0x1
  411e74:	and	w0, w0, #0x1
  411e78:	cmp	x4, x2
  411e7c:	b.ge	411e9c <wcrtomb@plt+0xf57c>  // b.tcont
  411e80:	ldrb	w4, [x1, #1]
  411e84:	cmp	w4, #0x5c
  411e88:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  411e8c:	cset	x0, ne  // ne = any
  411e90:	ldrb	w0, [x20, x0]
  411e94:	cmp	w0, #0x7c
  411e98:	b.eq	4121d0 <wcrtomb@plt+0xf8b0>  // b.none
  411e9c:	tst	x3, #0x800
  411ea0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  411ea4:	b.le	411eb4 <wcrtomb@plt+0xf594>
  411ea8:	ldrb	w0, [x1, #1]
  411eac:	cmp	w0, #0xa
  411eb0:	b.eq	4121d0 <wcrtomb@plt+0xf8b0>  // b.none
  411eb4:	ldrb	w3, [x19, #1048]
  411eb8:	mov	w21, #0x24                  	// #36
  411ebc:	b	411c80 <wcrtomb@plt+0xf360>
  411ec0:	ldr	x0, [x19, #448]
  411ec4:	tbnz	w0, #4, 411ed0 <wcrtomb@plt+0xf5b0>
  411ec8:	ldrb	w0, [x19, #120]
  411ecc:	cbnz	w0, 412270 <wcrtomb@plt+0xf950>
  411ed0:	mov	x1, #0x102                 	// #258
  411ed4:	mov	x0, x1
  411ed8:	ldp	x21, x22, [sp, #32]
  411edc:	str	x1, [x19, #48]
  411ee0:	b	411c9c <wcrtomb@plt+0xf37c>
  411ee4:	cbz	x2, 4125f8 <wcrtomb@plt+0xfcd8>
  411ee8:	ldrb	w0, [x1, #1]
  411eec:	add	x0, x19, x0, lsl #2
  411ef0:	ldr	w21, [x0, #1308]
  411ef4:	cmn	w21, #0x1
  411ef8:	b.eq	4120e8 <wcrtomb@plt+0xf7c8>  // b.none
  411efc:	str	w21, [x19, #72]
  411f00:	ldrb	w21, [x20], #1
  411f04:	sub	x2, x2, #0x1
  411f08:	stp	x20, x2, [x19, #32]
  411f0c:	sub	w0, w21, #0xa
  411f10:	cmp	w0, #0x72
  411f14:	b.hi	411c7c <wcrtomb@plt+0xf35c>  // b.pmore
  411f18:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  411f1c:	add	x1, x1, #0x730
  411f20:	ldrh	w0, [x1, w0, uxtw #1]
  411f24:	adr	x1, 411f30 <wcrtomb@plt+0xf610>
  411f28:	add	x0, x1, w0, sxth #2
  411f2c:	br	x0
  411f30:	strb	wzr, [x19, #120]
  411f34:	mov	x0, x19
  411f38:	bl	411000 <wcrtomb@plt+0xe6e0>
  411f3c:	ldp	x21, x22, [sp, #32]
  411f40:	str	x0, [x19, #48]
  411f44:	b	411c9c <wcrtomb@plt+0xf37c>
  411f48:	mov	w2, #0x0                   	// #0
  411f4c:	ldr	x0, [x19, #448]
  411f50:	tbnz	w0, #10, 4122e8 <wcrtomb@plt+0xf9c8>
  411f54:	ubfx	w1, w0, #1, #1
  411f58:	cmp	w1, w2
  411f5c:	b.ne	4122e8 <wcrtomb@plt+0xf9c8>  // b.any
  411f60:	tbnz	w0, #4, 411f6c <wcrtomb@plt+0xf64c>
  411f64:	ldrb	w0, [x19, #120]
  411f68:	cbnz	w0, 4122e8 <wcrtomb@plt+0xf9c8>
  411f6c:	mov	x1, #0x101                 	// #257
  411f70:	mov	x0, x1
  411f74:	ldp	x21, x22, [sp, #32]
  411f78:	str	x1, [x19, #48]
  411f7c:	b	411c9c <wcrtomb@plt+0xf37c>
  411f80:	mov	w7, #0x0                   	// #0
  411f84:	ldr	x5, [x19, #448]
  411f88:	tbz	w5, #9, 41200c <wcrtomb@plt+0xf6ec>
  411f8c:	lsr	x0, x5, #12
  411f90:	eor	x0, x0, #0x1
  411f94:	and	w0, w0, #0x1
  411f98:	cmp	w0, w7
  411f9c:	b.ne	41200c <wcrtomb@plt+0xf6ec>  // b.any
  411fa0:	tbnz	w5, #4, 411fac <wcrtomb@plt+0xf68c>
  411fa4:	ldrb	w0, [x19, #120]
  411fa8:	cbnz	w0, 41200c <wcrtomb@plt+0xf6ec>
  411fac:	mvni	v0.2s, #0x0
  411fb0:	add	x2, x20, x2
  411fb4:	cmp	x2, x20
  411fb8:	mov	w0, #0xffffffff            	// #-1
  411fbc:	mov	w6, #0x8030                	// #32816
  411fc0:	str	d0, [x19, #64]
  411fc4:	b.eq	412008 <wcrtomb@plt+0xf6e8>  // b.none
  411fc8:	ldrb	w1, [x20]
  411fcc:	sub	w3, w1, #0x30
  411fd0:	and	w4, w3, #0xff
  411fd4:	cmp	w4, #0x9
  411fd8:	b.hi	4123a4 <wcrtomb@plt+0xfa84>  // b.pmore
  411fdc:	cmn	w0, #0x1
  411fe0:	b.eq	4122d0 <wcrtomb@plt+0xf9b0>  // b.none
  411fe4:	add	w0, w0, w0, lsl #2
  411fe8:	add	x20, x20, #0x1
  411fec:	add	w0, w1, w0, lsl #1
  411ff0:	cmp	w0, w6
  411ff4:	csel	w0, w0, w6, le
  411ff8:	cmp	x2, x20
  411ffc:	sub	w0, w0, #0x30
  412000:	str	w0, [x19, #64]
  412004:	b.ne	411fc8 <wcrtomb@plt+0xf6a8>  // b.any
  412008:	tbz	w5, #21, 4125e0 <wcrtomb@plt+0xfcc0>
  41200c:	ldrb	w3, [x19, #1048]
  412010:	mov	w21, #0x7b                  	// #123
  412014:	b	411c80 <wcrtomb@plt+0xf360>
  412018:	mov	w1, #0x0                   	// #0
  41201c:	ldr	x0, [x19, #448]
  412020:	lsr	x0, x0, #13
  412024:	eor	x0, x0, #0x1
  412028:	and	w0, w0, #0x1
  41202c:	cmp	w0, w1
  412030:	b.eq	41233c <wcrtomb@plt+0xfa1c>  // b.none
  412034:	ldrb	w3, [x19, #1048]
  412038:	mov	w21, #0x28                  	// #40
  41203c:	b	411c80 <wcrtomb@plt+0xf360>
  412040:	mov	w2, #0x0                   	// #0
  412044:	ldr	x1, [x19, #448]
  412048:	lsr	x0, x1, #13
  41204c:	eor	x0, x0, #0x1
  412050:	and	w0, w0, #0x1
  412054:	cmp	w0, w2
  412058:	b.ne	412300 <wcrtomb@plt+0xf9e0>  // b.any
  41205c:	ldr	x0, [x19, #56]
  412060:	cbnz	x0, 412068 <wcrtomb@plt+0xf748>
  412064:	tbnz	w1, #17, 412300 <wcrtomb@plt+0xf9e0>
  412068:	sub	x1, x0, #0x1
  41206c:	mov	x2, #0x108                 	// #264
  412070:	mov	x0, x2
  412074:	strb	wzr, [x19, #120]
  412078:	ldp	x21, x22, [sp, #32]
  41207c:	stp	x2, x1, [x19, #48]
  412080:	b	411c9c <wcrtomb@plt+0xf37c>
  412084:	mov	w1, #0x0                   	// #0
  412088:	ldr	x0, [x19, #448]
  41208c:	tbnz	w0, #10, 4120a4 <wcrtomb@plt+0xf784>
  412090:	lsr	x0, x0, #15
  412094:	eor	x0, x0, #0x1
  412098:	and	w0, w0, #0x1
  41209c:	cmp	w0, w1
  4120a0:	b.eq	412320 <wcrtomb@plt+0xfa00>  // b.none
  4120a4:	ldrb	w3, [x19, #1048]
  4120a8:	mov	w21, #0x7c                  	// #124
  4120ac:	b	411c80 <wcrtomb@plt+0xf360>
  4120b0:	mov	w2, #0x0                   	// #0
  4120b4:	ldr	x0, [x19, #448]
  4120b8:	tbnz	w0, #10, 4122f4 <wcrtomb@plt+0xf9d4>
  4120bc:	ubfx	w1, w0, #1, #1
  4120c0:	cmp	w1, w2
  4120c4:	b.ne	4122f4 <wcrtomb@plt+0xf9d4>  // b.any
  4120c8:	tbnz	w0, #4, 4120d4 <wcrtomb@plt+0xf7b4>
  4120cc:	ldrb	w0, [x19, #120]
  4120d0:	cbnz	w0, 4122f4 <wcrtomb@plt+0xf9d4>
  4120d4:	mov	x1, #0x103                 	// #259
  4120d8:	mov	x0, x1
  4120dc:	ldp	x21, x22, [sp, #32]
  4120e0:	str	x1, [x19, #48]
  4120e4:	b	411c9c <wcrtomb@plt+0xf37c>
  4120e8:	mov	x1, x20
  4120ec:	add	x3, x19, #0x110
  4120f0:	add	x0, sp, #0x40
  4120f4:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  4120f8:	sub	x1, x0, #0x1
  4120fc:	cmn	x1, #0x4
  412100:	b.hi	4125ac <wcrtomb@plt+0xfc8c>  // b.pmore
  412104:	ldr	w1, [sp, #64]
  412108:	cmp	w0, #0x1
  41210c:	str	w1, [x19, #72]
  412110:	ldp	x20, x2, [x19, #32]
  412114:	b.eq	411f00 <wcrtomb@plt+0xf5e0>  // b.none
  412118:	mov	x1, x20
  41211c:	b	411d58 <wcrtomb@plt+0xf438>
  412120:	ldr	x0, [x19, #448]
  412124:	tbnz	w0, #14, 411c7c <wcrtomb@plt+0xf35c>
  412128:	mov	x1, #0x112                 	// #274
  41212c:	mov	x0, x1
  412130:	strb	wzr, [x19, #120]
  412134:	ldp	x21, x22, [sp, #32]
  412138:	str	x1, [x19, #48]
  41213c:	b	411c9c <wcrtomb@plt+0xf37c>
  412140:	ldr	x1, [x19, #448]
  412144:	ldrb	w3, [x19, #1048]
  412148:	and	x0, x1, #0x80000
  41214c:	tbnz	w1, #19, 411c80 <wcrtomb@plt+0xf360>
  412150:	cbz	w3, 41242c <wcrtomb@plt+0xfb0c>
  412154:	cmp	w21, #0x77
  412158:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  41215c:	cset	x3, eq  // eq = none
  412160:	add	x0, x0, #0x570
  412164:	mov	x1, #0xc                   	// #12
  412168:	str	x2, [sp, #56]
  41216c:	sub	x1, x1, x3
  412170:	cinc	x0, x0, eq  // eq = none
  412174:	stp	x0, x1, [x19, #32]
  412178:	mov	x0, x19
  41217c:	bl	411000 <wcrtomb@plt+0xe6e0>
  412180:	strb	wzr, [x19, #120]
  412184:	ldr	x2, [sp, #56]
  412188:	ldp	x21, x22, [sp, #32]
  41218c:	stp	x20, x2, [x19, #32]
  412190:	str	x0, [x19, #48]
  412194:	b	411c9c <wcrtomb@plt+0xf37c>
  412198:	ldr	x0, [x19, #448]
  41219c:	ldrb	w3, [x19, #1048]
  4121a0:	and	x22, x0, #0x80000
  4121a4:	tbnz	w0, #19, 411c80 <wcrtomb@plt+0xf360>
  4121a8:	cbz	w3, 41247c <wcrtomb@plt+0xfb5c>
  4121ac:	cmp	w21, #0x73
  4121b0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  4121b4:	cset	x3, eq  // eq = none
  4121b8:	add	x0, x0, #0x560
  4121bc:	mov	x1, #0xb                   	// #11
  4121c0:	str	x2, [sp, #56]
  4121c4:	b	41216c <wcrtomb@plt+0xf84c>
  4121c8:	ldr	x0, [x19, #448]
  4121cc:	tbnz	w0, #19, 411da0 <wcrtomb@plt+0xf480>
  4121d0:	mov	x1, #0x10d                 	// #269
  4121d4:	mov	x0, x1
  4121d8:	ldp	x21, x22, [sp, #32]
  4121dc:	str	x1, [x19, #48]
  4121e0:	b	411c9c <wcrtomb@plt+0xf37c>
  4121e4:	ldr	x0, [x19, #448]
  4121e8:	tbnz	w0, #19, 411d88 <wcrtomb@plt+0xf468>
  4121ec:	mov	x1, #0x110                 	// #272
  4121f0:	mov	x0, x1
  4121f4:	ldp	x21, x22, [sp, #32]
  4121f8:	str	x1, [x19, #48]
  4121fc:	b	411c9c <wcrtomb@plt+0xf37c>
  412200:	ldr	x0, [x19, #448]
  412204:	tbnz	w0, #19, 411d94 <wcrtomb@plt+0xf474>
  412208:	mov	x1, #0x10c                 	// #268
  41220c:	mov	x0, x1
  412210:	ldp	x21, x22, [sp, #32]
  412214:	str	x1, [x19, #48]
  412218:	b	411c9c <wcrtomb@plt+0xf37c>
  41221c:	ldr	x0, [x19, #448]
  412220:	tbnz	w0, #19, 411db8 <wcrtomb@plt+0xf498>
  412224:	mov	x1, #0x10f                 	// #271
  412228:	mov	x0, x1
  41222c:	ldp	x21, x22, [sp, #32]
  412230:	str	x1, [x19, #48]
  412234:	b	411c9c <wcrtomb@plt+0xf37c>
  412238:	ldr	x0, [x19, #448]
  41223c:	tbnz	w0, #19, 411dac <wcrtomb@plt+0xf48c>
  412240:	mov	x1, #0x10e                 	// #270
  412244:	mov	x0, x1
  412248:	ldp	x21, x22, [sp, #32]
  41224c:	str	x1, [x19, #48]
  412250:	b	411c9c <wcrtomb@plt+0xf37c>
  412254:	ldr	x0, [x19, #448]
  412258:	tbnz	w0, #19, 411dc4 <wcrtomb@plt+0xf4a4>
  41225c:	mov	x1, #0x111                 	// #273
  412260:	mov	x0, x1
  412264:	ldp	x21, x22, [sp, #32]
  412268:	str	x1, [x19, #48]
  41226c:	b	411c9c <wcrtomb@plt+0xf37c>
  412270:	ldrb	w3, [x19, #1048]
  412274:	mov	w21, #0x2a                  	// #42
  412278:	b	411c80 <wcrtomb@plt+0xf360>
  41227c:	ldrb	w3, [x19, #1048]
  412280:	mov	w21, #0x5b                  	// #91
  412284:	b	411c80 <wcrtomb@plt+0xf360>
  412288:	ldrb	w3, [x19, #1048]
  41228c:	mov	w21, #0x5c                  	// #92
  412290:	b	411c80 <wcrtomb@plt+0xf360>
  412294:	mov	w1, #0x1                   	// #1
  412298:	b	412088 <wcrtomb@plt+0xf768>
  41229c:	mov	w7, #0x1                   	// #1
  4122a0:	b	411f84 <wcrtomb@plt+0xf664>
  4122a4:	mov	w2, #0x1                   	// #1
  4122a8:	b	411f4c <wcrtomb@plt+0xf62c>
  4122ac:	mov	w2, #0x1                   	// #1
  4122b0:	b	4120b4 <wcrtomb@plt+0xf794>
  4122b4:	mov	w2, #0x1                   	// #1
  4122b8:	b	412044 <wcrtomb@plt+0xf724>
  4122bc:	mov	w1, #0x1                   	// #1
  4122c0:	b	41201c <wcrtomb@plt+0xf6fc>
  4122c4:	ldrb	w3, [x19, #1048]
  4122c8:	mov	w21, #0x2e                  	// #46
  4122cc:	b	411c80 <wcrtomb@plt+0xf360>
  4122d0:	str	w3, [x19, #64]
  4122d4:	add	x20, x20, #0x1
  4122d8:	mov	w0, w3
  4122dc:	cmp	x2, x20
  4122e0:	b.ne	411fc8 <wcrtomb@plt+0xf6a8>  // b.any
  4122e4:	b	412008 <wcrtomb@plt+0xf6e8>
  4122e8:	ldrb	w3, [x19, #1048]
  4122ec:	mov	w21, #0x3f                  	// #63
  4122f0:	b	411c80 <wcrtomb@plt+0xf360>
  4122f4:	ldrb	w3, [x19, #1048]
  4122f8:	mov	w21, #0x2b                  	// #43
  4122fc:	b	411c80 <wcrtomb@plt+0xf360>
  412300:	ldrb	w3, [x19, #1048]
  412304:	mov	w21, #0x29                  	// #41
  412308:	b	411c80 <wcrtomb@plt+0xf360>
  41230c:	mov	x1, #0xffffffffffffffff    	// #-1
  412310:	mov	x0, x1
  412314:	str	x1, [x19, #48]
  412318:	b	411c9c <wcrtomb@plt+0xf37c>
  41231c:	tbz	w0, #11, 411d7c <wcrtomb@plt+0xf45c>
  412320:	mov	x1, #0x106                 	// #262
  412324:	mov	w2, #0x1                   	// #1
  412328:	mov	x0, x1
  41232c:	strb	w2, [x19, #120]
  412330:	ldp	x21, x22, [sp, #32]
  412334:	str	x1, [x19, #48]
  412338:	b	411c9c <wcrtomb@plt+0xf37c>
  41233c:	ldr	x1, [x19, #56]
  412340:	mov	x2, #0x107                 	// #263
  412344:	mov	w3, #0x1                   	// #1
  412348:	mov	x0, x2
  41234c:	add	x1, x1, #0x1
  412350:	strb	w3, [x19, #120]
  412354:	ldp	x21, x22, [sp, #32]
  412358:	stp	x2, x1, [x19, #48]
  41235c:	b	411c9c <wcrtomb@plt+0xf37c>
  412360:	mvni	v0.4s, #0x0
  412364:	mov	x2, #0xfffffffffffffffe    	// #-2
  412368:	ldr	x0, [x19, #448]
  41236c:	stp	q0, q0, [sp, #64]
  412370:	tbnz	w0, #6, 412380 <wcrtomb@plt+0xfa60>
  412374:	mov	x3, #0xfffffffffffffbff    	// #-1025
  412378:	mov	x2, #0xfffffffffffffbfe    	// #-1026
  41237c:	str	x3, [sp, #64]
  412380:	tbz	w0, #7, 412388 <wcrtomb@plt+0xfa68>
  412384:	str	x2, [sp, #64]
  412388:	cbnz	w1, 4124e0 <wcrtomb@plt+0xfbc0>
  41238c:	add	x1, sp, #0x40
  412390:	mov	x0, x19
  412394:	bl	40dd98 <wcrtomb@plt+0xb478>
  412398:	ldrb	w1, [x19, #1048]
  41239c:	str	x0, [x19, #24]
  4123a0:	b	411e04 <wcrtomb@plt+0xf4e4>
  4123a4:	cmp	x2, x20
  4123a8:	b.eq	412008 <wcrtomb@plt+0xf6e8>  // b.none
  4123ac:	cmp	w1, #0x2c
  4123b0:	b.eq	412520 <wcrtomb@plt+0xfc00>  // b.none
  4123b4:	str	w0, [x19, #68]
  4123b8:	cbz	w7, 4125a4 <wcrtomb@plt+0xfc84>
  4123bc:	ldrb	w3, [x20]
  4123c0:	mov	w1, w0
  4123c4:	cmp	w3, #0x5c
  4123c8:	b.ne	412008 <wcrtomb@plt+0xf6e8>  // b.any
  4123cc:	add	x20, x20, #0x1
  4123d0:	cmp	x20, x2
  4123d4:	b.eq	412008 <wcrtomb@plt+0xf6e8>  // b.none
  4123d8:	ldrb	w3, [x20]
  4123dc:	cmp	w3, #0x7d
  4123e0:	b.ne	412008 <wcrtomb@plt+0xf6e8>  // b.any
  4123e4:	cmn	w0, #0x1
  4123e8:	b.eq	412008 <wcrtomb@plt+0xf6e8>  // b.none
  4123ec:	cmn	w1, #0x1
  4123f0:	b.eq	412408 <wcrtomb@plt+0xfae8>  // b.none
  4123f4:	cmp	w1, w0
  4123f8:	b.lt	412008 <wcrtomb@plt+0xf6e8>  // b.tstop
  4123fc:	mov	w0, #0x7fff                	// #32767
  412400:	cmp	w1, w0
  412404:	b.gt	4125c8 <wcrtomb@plt+0xfca8>
  412408:	add	x20, x20, #0x1
  41240c:	mov	x1, #0x104                 	// #260
  412410:	sub	x2, x2, x20
  412414:	mov	x0, x1
  412418:	strb	wzr, [x19, #120]
  41241c:	ldp	x21, x22, [sp, #32]
  412420:	stp	x20, x2, [x19, #32]
  412424:	str	x1, [x19, #48]
  412428:	b	411c9c <wcrtomb@plt+0xf37c>
  41242c:	add	x1, sp, #0x40
  412430:	add	x4, x19, #0x1cc
  412434:	mov	x6, #0x1                   	// #1
  412438:	stp	xzr, xzr, [sp, #64]
  41243c:	stp	xzr, xzr, [sp, #80]
  412440:	ldrb	w2, [x4, x0]
  412444:	cmp	w2, #0x2
  412448:	b.ne	412460 <wcrtomb@plt+0xfb40>  // b.any
  41244c:	lsr	w3, w0, #6
  412450:	lsl	x2, x6, x0
  412454:	ldr	x5, [x1, x3, lsl #3]
  412458:	orr	x2, x2, x5
  41245c:	str	x2, [x1, x3, lsl #3]
  412460:	add	x0, x0, #0x1
  412464:	cmp	x0, #0x100
  412468:	b.ne	412440 <wcrtomb@plt+0xfb20>  // b.any
  41246c:	cmp	w21, #0x57
  412470:	b.eq	4124c8 <wcrtomb@plt+0xfba8>  // b.none
  412474:	strb	wzr, [x19, #120]
  412478:	b	411d14 <wcrtomb@plt+0xf3f4>
  41247c:	stp	xzr, xzr, [sp, #64]
  412480:	stp	xzr, xzr, [sp, #80]
  412484:	bl	4026a0 <__ctype_b_loc@plt>
  412488:	add	x1, sp, #0x40
  41248c:	ldr	x3, [x0]
  412490:	mov	x5, #0x1                   	// #1
  412494:	nop
  412498:	ldrh	w0, [x3, x22, lsl #1]
  41249c:	tbz	w0, #13, 4124b4 <wcrtomb@plt+0xfb94>
  4124a0:	lsr	w2, w22, #6
  4124a4:	lsl	x0, x5, x22
  4124a8:	ldr	x4, [x1, x2, lsl #3]
  4124ac:	orr	x0, x0, x4
  4124b0:	str	x0, [x1, x2, lsl #3]
  4124b4:	add	x22, x22, #0x1
  4124b8:	cmp	x22, #0x100
  4124bc:	b.ne	412498 <wcrtomb@plt+0xfb78>  // b.any
  4124c0:	cmp	w21, #0x53
  4124c4:	b.ne	412474 <wcrtomb@plt+0xfb54>  // b.any
  4124c8:	ldp	q1, q0, [sp, #64]
  4124cc:	mvn	v1.16b, v1.16b
  4124d0:	mvn	v0.16b, v0.16b
  4124d4:	stp	q1, q0, [sp, #64]
  4124d8:	strb	wzr, [x19, #120]
  4124dc:	b	411d14 <wcrtomb@plt+0xf3f4>
  4124e0:	add	x1, sp, #0x40
  4124e4:	add	x4, x19, #0x51c
  4124e8:	mov	x0, #0x0                   	// #0
  4124ec:	mov	x6, #0x1                   	// #1
  4124f0:	ldr	w2, [x4, x0, lsl #2]
  4124f4:	cmn	w2, #0x1
  4124f8:	b.ne	412510 <wcrtomb@plt+0xfbf0>  // b.any
  4124fc:	lsr	w3, w0, #6
  412500:	lsl	x2, x6, x0
  412504:	ldr	x5, [x1, x3, lsl #3]
  412508:	bic	x2, x5, x2
  41250c:	str	x2, [x1, x3, lsl #3]
  412510:	add	x0, x0, #0x1
  412514:	cmp	x0, #0x100
  412518:	b.ne	4124f0 <wcrtomb@plt+0xfbd0>  // b.any
  41251c:	b	412390 <wcrtomb@plt+0xfa70>
  412520:	cmn	w0, #0x1
  412524:	b.ne	412530 <wcrtomb@plt+0xfc10>  // b.any
  412528:	mov	w0, #0x0                   	// #0
  41252c:	str	wzr, [x19, #64]
  412530:	add	x20, x20, #0x1
  412534:	mov	w1, #0xffffffff            	// #-1
  412538:	cmp	x2, x20
  41253c:	mov	w8, #0x8030                	// #32816
  412540:	b.eq	412008 <wcrtomb@plt+0xf6e8>  // b.none
  412544:	nop
  412548:	ldrb	w3, [x20]
  41254c:	sub	w4, w3, #0x30
  412550:	and	w6, w4, #0xff
  412554:	cmp	w6, #0x9
  412558:	b.hi	4125b8 <wcrtomb@plt+0xfc98>  // b.pmore
  41255c:	cmn	w1, #0x1
  412560:	b.eq	41258c <wcrtomb@plt+0xfc6c>  // b.none
  412564:	add	w1, w1, w1, lsl #2
  412568:	add	x20, x20, #0x1
  41256c:	add	w1, w3, w1, lsl #1
  412570:	cmp	w1, w8
  412574:	csel	w1, w1, w8, le
  412578:	cmp	x2, x20
  41257c:	sub	w1, w1, #0x30
  412580:	str	w1, [x19, #68]
  412584:	b.ne	412548 <wcrtomb@plt+0xfc28>  // b.any
  412588:	b	412008 <wcrtomb@plt+0xf6e8>
  41258c:	str	w4, [x19, #68]
  412590:	add	x20, x20, #0x1
  412594:	mov	w1, w4
  412598:	cmp	x2, x20
  41259c:	b.ne	412548 <wcrtomb@plt+0xfc28>  // b.any
  4125a0:	b	412008 <wcrtomb@plt+0xf6e8>
  4125a4:	mov	w1, w0
  4125a8:	b	4123d8 <wcrtomb@plt+0xfab8>
  4125ac:	str	xzr, [x19, #272]
  4125b0:	ldp	x20, x2, [x19, #32]
  4125b4:	b	411efc <wcrtomb@plt+0xf5dc>
  4125b8:	cbz	w7, 4123d0 <wcrtomb@plt+0xfab0>
  4125bc:	cmp	x20, x2
  4125c0:	b.ne	4123c4 <wcrtomb@plt+0xfaa4>  // b.any
  4125c4:	b	412008 <wcrtomb@plt+0xf6e8>
  4125c8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4125cc:	add	x1, x1, #0x540
  4125d0:	mov	w2, #0x5                   	// #5
  4125d4:	mov	x0, #0x0                   	// #0
  4125d8:	bl	4027f0 <dcgettext@plt>
  4125dc:	bl	4041c0 <wcrtomb@plt+0x18a0>
  4125e0:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4125e4:	add	x1, x1, #0x528
  4125e8:	mov	w2, #0x5                   	// #5
  4125ec:	mov	x0, #0x0                   	// #0
  4125f0:	bl	4027f0 <dcgettext@plt>
  4125f4:	bl	4041c0 <wcrtomb@plt+0x18a0>
  4125f8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4125fc:	add	x1, x1, #0x510
  412600:	mov	w2, #0x5                   	// #5
  412604:	mov	x0, #0x0                   	// #0
  412608:	bl	4027f0 <dcgettext@plt>
  41260c:	bl	4041c0 <wcrtomb@plt+0x18a0>
  412610:	stp	x29, x30, [sp, #-240]!
  412614:	mov	x2, #0x109                 	// #265
  412618:	mov	x29, sp
  41261c:	ldr	x1, [x0, #128]
  412620:	stp	x19, x20, [sp, #16]
  412624:	mov	x19, x0
  412628:	cmp	x1, #0xff
  41262c:	ccmp	x1, x2, #0x0, hi  // hi = pmore
  412630:	b.le	412c84 <wcrtomb@plt+0x10364>
  412634:	cmp	x1, #0x10a
  412638:	b.ne	412644 <wcrtomb@plt+0xfd24>  // b.any
  41263c:	ldrb	w0, [x0, #1050]
  412640:	cbnz	w0, 412aa8 <wcrtomb@plt+0x10188>
  412644:	mov	x0, x19
  412648:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  41264c:	mov	x0, x19
  412650:	bl	411c28 <wcrtomb@plt+0xf308>
  412654:	mov	x1, x0
  412658:	str	x0, [x19, #128]
  41265c:	sub	x0, x1, #0x101
  412660:	cmp	x0, #0x3
  412664:	b.hi	41269c <wcrtomb@plt+0xfd7c>  // b.pmore
  412668:	stp	x23, x24, [sp, #48]
  41266c:	cmp	x1, #0x104
  412670:	b.eq	4126a8 <wcrtomb@plt+0xfd88>  // b.none
  412674:	mov	x0, x19
  412678:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  41267c:	mov	x0, x19
  412680:	bl	411c28 <wcrtomb@plt+0xf308>
  412684:	mov	x1, x0
  412688:	str	x0, [x19, #128]
  41268c:	sub	x0, x1, #0x101
  412690:	cmp	x0, #0x3
  412694:	b.ls	41266c <wcrtomb@plt+0xfd4c>  // b.plast
  412698:	ldp	x23, x24, [sp, #48]
  41269c:	ldp	x19, x20, [sp, #16]
  4126a0:	ldp	x29, x30, [sp], #240
  4126a4:	ret
  4126a8:	ldp	x6, x23, [x19, #144]
  4126ac:	ldr	x5, [x19, #64]
  4126b0:	mov	x1, x23
  4126b4:	cbnz	x5, 412730 <wcrtomb@plt+0xfe10>
  4126b8:	add	x0, x6, x1, lsl #3
  4126bc:	ldur	x0, [x0, #-8]
  4126c0:	cmp	x0, #0x103
  4126c4:	b.gt	4126f8 <wcrtomb@plt+0xfdd8>
  4126c8:	cmp	x0, #0x100
  4126cc:	b.gt	412724 <wcrtomb@plt+0xfe04>
  4126d0:	add	x5, x5, #0x1
  4126d4:	mov	x0, x19
  4126d8:	sub	x5, x23, x5
  4126dc:	str	x5, [x19, #152]
  4126e0:	bl	411c28 <wcrtomb@plt+0xf308>
  4126e4:	str	x0, [x19, #128]
  4126e8:	mov	x0, x19
  4126ec:	bl	412610 <wcrtomb@plt+0xfcf0>
  4126f0:	ldr	x1, [x19, #128]
  4126f4:	b	41268c <wcrtomb@plt+0xfd6c>
  4126f8:	sub	x0, x0, #0x105
  4126fc:	cmp	x0, #0x1
  412700:	b.hi	4126d0 <wcrtomb@plt+0xfdb0>  // b.pmore
  412704:	sub	x4, x1, #0x1
  412708:	mov	x0, x19
  41270c:	mov	x1, x4
  412710:	bl	40d450 <wcrtomb@plt+0xab30>
  412714:	add	x2, x0, #0x1
  412718:	sub	x1, x4, x0
  41271c:	add	x5, x5, x2
  412720:	b	4126b8 <wcrtomb@plt+0xfd98>
  412724:	sub	x1, x1, #0x1
  412728:	add	x5, x5, #0x1
  41272c:	b	4126b8 <wcrtomb@plt+0xfd98>
  412730:	stp	x21, x22, [sp, #32]
  412734:	mov	x21, #0x0                   	// #0
  412738:	stp	x25, x26, [sp, #64]
  41273c:	stp	x27, x28, [sp, #80]
  412740:	add	x0, x6, x1, lsl #3
  412744:	ldur	x0, [x0, #-8]
  412748:	cmp	x0, #0x103
  41274c:	b.gt	412a68 <wcrtomb@plt+0x10148>
  412750:	cmp	x0, #0x100
  412754:	b.gt	412a9c <wcrtomb@plt+0x1017c>
  412758:	ldr	w0, [x19, #68]
  41275c:	add	x21, x21, #0x1
  412760:	sub	x23, x23, x21
  412764:	tbnz	w0, #31, 412c5c <wcrtomb@plt+0x1033c>
  412768:	ldr	w0, [x19, #64]
  41276c:	cbz	w0, 412c48 <wcrtomb@plt+0x10328>
  412770:	cmp	w0, #0x1
  412774:	b.le	412c7c <wcrtomb@plt+0x1035c>
  412778:	lsl	x27, x23, #3
  41277c:	add	x25, x21, x23
  412780:	mov	w22, #0x1                   	// #1
  412784:	nop
  412788:	ldrb	w0, [x19, #1048]
  41278c:	cmp	x21, #0x0
  412790:	cbnz	w0, 41287c <wcrtomb@plt+0xff5c>
  412794:	mov	x24, x27
  412798:	mov	x20, #0x0                   	// #0
  41279c:	b.le	4127c4 <wcrtomb@plt+0xfea4>
  4127a0:	ldr	x1, [x19, #144]
  4127a4:	add	x20, x20, #0x1
  4127a8:	mov	x0, x19
  4127ac:	mov	w2, #0x3                   	// #3
  4127b0:	ldr	x1, [x1, x24]
  4127b4:	add	x24, x24, #0x8
  4127b8:	bl	40f958 <wcrtomb@plt+0xd038>
  4127bc:	cmp	x20, x21
  4127c0:	b.ne	4127a0 <wcrtomb@plt+0xfe80>  // b.any
  4127c4:	mov	x0, x19
  4127c8:	mov	x1, #0x105                 	// #261
  4127cc:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  4127d0:	add	w22, w22, #0x1
  4127d4:	ldr	w0, [x19, #64]
  4127d8:	cmp	w0, w22
  4127dc:	b.gt	412788 <wcrtomb@plt+0xfe68>
  4127e0:	ldr	w0, [x19, #68]
  4127e4:	lsl	x1, x23, #3
  4127e8:	str	x1, [sp, #104]
  4127ec:	add	x24, x21, x23
  4127f0:	cmp	w0, w22
  4127f4:	b.le	41285c <wcrtomb@plt+0xff3c>
  4127f8:	ldrb	w0, [x19, #1048]
  4127fc:	cmp	x21, #0x0
  412800:	cbnz	w0, 4128cc <wcrtomb@plt+0xffac>
  412804:	mov	x20, #0x0                   	// #0
  412808:	ldr	x25, [sp, #104]
  41280c:	b.le	412834 <wcrtomb@plt+0xff14>
  412810:	ldr	x1, [x19, #144]
  412814:	add	x20, x20, #0x1
  412818:	mov	x0, x19
  41281c:	mov	w2, #0x3                   	// #3
  412820:	ldr	x1, [x1, x25]
  412824:	add	x25, x25, #0x8
  412828:	bl	40f958 <wcrtomb@plt+0xd038>
  41282c:	cmp	x20, x21
  412830:	b.ne	412810 <wcrtomb@plt+0xfef0>  // b.any
  412834:	mov	x0, x19
  412838:	mov	x1, #0x101                 	// #257
  41283c:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412840:	add	w22, w22, #0x1
  412844:	mov	x0, x19
  412848:	mov	x1, #0x105                 	// #261
  41284c:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412850:	ldr	w0, [x19, #68]
  412854:	cmp	w0, w22
  412858:	b.gt	4127f8 <wcrtomb@plt+0xfed8>
  41285c:	mov	x0, x19
  412860:	bl	411c28 <wcrtomb@plt+0xf308>
  412864:	mov	x1, x0
  412868:	ldp	x21, x22, [sp, #32]
  41286c:	ldp	x25, x26, [sp, #64]
  412870:	ldp	x27, x28, [sp, #80]
  412874:	str	x0, [x19, #128]
  412878:	b	41268c <wcrtomb@plt+0xfd6c>
  41287c:	b.le	4127c4 <wcrtomb@plt+0xfea4>
  412880:	mov	x20, x23
  412884:	nop
  412888:	ldr	x1, [x19, #144]
  41288c:	mov	x0, x19
  412890:	ldr	x2, [x19, #280]
  412894:	ldr	x1, [x1, x20, lsl #3]
  412898:	ldrb	w2, [x2, x20]
  41289c:	add	x20, x20, #0x1
  4128a0:	bl	40f958 <wcrtomb@plt+0xd038>
  4128a4:	cmp	x25, x20
  4128a8:	b.ne	412888 <wcrtomb@plt+0xff68>  // b.any
  4128ac:	mov	x0, x19
  4128b0:	mov	x1, #0x105                 	// #261
  4128b4:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  4128b8:	add	w22, w22, #0x1
  4128bc:	ldr	w0, [x19, #64]
  4128c0:	cmp	w0, w22
  4128c4:	b.gt	412788 <wcrtomb@plt+0xfe68>
  4128c8:	b	4127e0 <wcrtomb@plt+0xfec0>
  4128cc:	b.le	412834 <wcrtomb@plt+0xff14>
  4128d0:	ldp	x1, x2, [x19, #152]
  4128d4:	mov	x27, x23
  4128d8:	ldr	x0, [x19, #144]
  4128dc:	mov	x25, #0x80                  	// #128
  4128e0:	ldr	x4, [x19, #280]
  4128e4:	cmp	x2, x1
  4128e8:	ldr	x20, [x0, x27, lsl #3]
  4128ec:	ldrb	w26, [x4, x27]
  4128f0:	b.eq	412988 <wcrtomb@plt+0x10068>  // b.none
  4128f4:	nop
  4128f8:	ldrb	w0, [x19, #1048]
  4128fc:	cbz	w0, 412a28 <wcrtomb@plt+0x10108>
  412900:	strb	w26, [x4, x1]
  412904:	ldr	x0, [x19, #144]
  412908:	cmp	x20, #0x106
  41290c:	ldr	x1, [x19, #152]
  412910:	add	x2, x1, #0x1
  412914:	str	x2, [x19, #152]
  412918:	str	x20, [x0, x1, lsl #3]
  41291c:	b.gt	412a40 <wcrtomb@plt+0x10120>
  412920:	cmp	x20, #0x104
  412924:	b.gt	412a58 <wcrtomb@plt+0x10138>
  412928:	cmp	x20, #0x100
  41292c:	b.eq	412948 <wcrtomb@plt+0x10028>  // b.none
  412930:	sub	x20, x20, #0x101
  412934:	cmp	x20, #0x2
  412938:	b.ls	412a50 <wcrtomb@plt+0x10130>  // b.plast
  41293c:	ldr	x1, [x19, #176]
  412940:	add	x1, x1, #0x1
  412944:	str	x1, [x19, #176]
  412948:	ldr	x1, [x19, #136]
  41294c:	add	x1, x1, #0x1
  412950:	str	x1, [x19, #136]
  412954:	ldr	x2, [x19, #168]
  412958:	cmp	x2, x1
  41295c:	b.ge	412964 <wcrtomb@plt+0x10044>  // b.tcont
  412960:	str	x1, [x19, #168]
  412964:	add	x27, x27, #0x1
  412968:	cmp	x27, x24
  41296c:	b.eq	412834 <wcrtomb@plt+0xff14>  // b.none
  412970:	ldp	x1, x2, [x19, #152]
  412974:	ldr	x4, [x19, #280]
  412978:	ldr	x20, [x0, x27, lsl #3]
  41297c:	ldrb	w26, [x4, x27]
  412980:	cmp	x2, x1
  412984:	b.ne	4128f8 <wcrtomb@plt+0xffd8>  // b.any
  412988:	asr	x28, x2, #1
  41298c:	adds	x28, x2, x28
  412990:	b.vs	412de8 <wcrtomb@plt+0x104c8>
  412994:	asr	x4, x28, #63
  412998:	sbfx	x6, x28, #60, #1
  41299c:	lsl	x1, x28, #3
  4129a0:	extr	x4, x4, x28, #61
  4129a4:	cmp	x6, x4
  4129a8:	b.ne	412de8 <wcrtomb@plt+0x104c8>  // b.any
  4129ac:	cmp	x1, #0x7f
  4129b0:	mov	x3, #0x10                  	// #16
  4129b4:	csel	x1, x1, x25, gt
  4129b8:	csel	x28, x28, x3, gt
  4129bc:	cbz	x0, 412a94 <wcrtomb@plt+0x10174>
  4129c0:	sub	x4, x28, x2
  4129c4:	cmp	x4, #0x0
  4129c8:	b.gt	4129ec <wcrtomb@plt+0x100cc>
  4129cc:	adds	x28, x2, #0x1
  4129d0:	b.vs	412dd8 <wcrtomb@plt+0x104b8>
  4129d4:	asr	x2, x28, #63
  4129d8:	sbfx	x4, x28, #60, #1
  4129dc:	lsl	x1, x28, #3
  4129e0:	extr	x2, x2, x28, #61
  4129e4:	cmp	x4, x2
  4129e8:	b.ne	412dd8 <wcrtomb@plt+0x104b8>  // b.any
  4129ec:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4129f0:	str	x0, [x19, #144]
  4129f4:	ldrb	w1, [x19, #1048]
  4129f8:	str	x28, [x19, #160]
  4129fc:	cbz	w1, 412908 <wcrtomb@plt+0xffe8>
  412a00:	ldr	x0, [x19, #280]
  412a04:	tbnz	x28, #63, 412dd8 <wcrtomb@plt+0x104b8>
  412a08:	mov	x1, x28
  412a0c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  412a10:	mov	x4, x0
  412a14:	str	x0, [x19, #280]
  412a18:	ldrb	w0, [x19, #1048]
  412a1c:	ldr	x1, [x19, #152]
  412a20:	cbnz	w0, 412900 <wcrtomb@plt+0xffe0>
  412a24:	nop
  412a28:	ldr	x0, [x19, #144]
  412a2c:	add	x2, x1, #0x1
  412a30:	str	x2, [x19, #152]
  412a34:	cmp	x20, #0x106
  412a38:	str	x20, [x0, x1, lsl #3]
  412a3c:	b.le	412920 <wcrtomb@plt+0x10000>
  412a40:	cmp	x20, #0x112
  412a44:	b.ne	41293c <wcrtomb@plt+0x1001c>  // b.any
  412a48:	strb	wzr, [x19, #192]
  412a4c:	b	41293c <wcrtomb@plt+0x1001c>
  412a50:	ldr	x1, [x19, #136]
  412a54:	b	412954 <wcrtomb@plt+0x10034>
  412a58:	ldr	x1, [x19, #136]
  412a5c:	sub	x1, x1, #0x1
  412a60:	str	x1, [x19, #136]
  412a64:	b	412954 <wcrtomb@plt+0x10034>
  412a68:	sub	x0, x0, #0x105
  412a6c:	cmp	x0, #0x1
  412a70:	b.hi	412758 <wcrtomb@plt+0xfe38>  // b.pmore
  412a74:	sub	x4, x1, #0x1
  412a78:	mov	x0, x19
  412a7c:	mov	x1, x4
  412a80:	bl	40d450 <wcrtomb@plt+0xab30>
  412a84:	add	x2, x0, #0x1
  412a88:	sub	x1, x4, x0
  412a8c:	add	x21, x21, x2
  412a90:	b	412740 <wcrtomb@plt+0xfe20>
  412a94:	str	xzr, [x19, #160]
  412a98:	b	4129c0 <wcrtomb@plt+0x100a0>
  412a9c:	sub	x1, x1, #0x1
  412aa0:	add	x21, x21, #0x1
  412aa4:	b	412740 <wcrtomb@plt+0xfe20>
  412aa8:	ldr	x1, [x19, #200]
  412aac:	cbnz	x1, 412b28 <wcrtomb@plt+0x10208>
  412ab0:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x12510>
  412ab4:	add	x20, x20, #0x818
  412ab8:	add	x2, x20, #0x170
  412abc:	add	x1, sp, #0x70
  412ac0:	ldr	x0, [x19, #448]
  412ac4:	stp	x21, x22, [sp, #32]
  412ac8:	ld1	{v0.16b, v1.16b}, [x2]
  412acc:	st1	{v0.16b, v1.16b}, [x1]
  412ad0:	tbnz	w0, #6, 412adc <wcrtomb@plt+0x101bc>
  412ad4:	mov	x2, #0xfffffffffffffbff    	// #-1025
  412ad8:	str	x2, [sp, #112]
  412adc:	tbnz	w0, #7, 412c6c <wcrtomb@plt+0x1034c>
  412ae0:	add	x20, x20, #0x190
  412ae4:	add	x21, x19, #0xd0
  412ae8:	add	x22, x19, #0x110
  412aec:	mov	x0, x19
  412af0:	bl	40dd98 <wcrtomb@plt+0xb478>
  412af4:	add	x0, x0, #0x114
  412af8:	str	x0, [x19, #200]
  412afc:	nop
  412b00:	mov	x1, x20
  412b04:	mov	x0, x19
  412b08:	bl	40dd98 <wcrtomb@plt+0xb478>
  412b0c:	add	x0, x0, #0x114
  412b10:	str	x0, [x21], #8
  412b14:	add	x20, x20, #0x20
  412b18:	cmp	x22, x21
  412b1c:	b.ne	412b00 <wcrtomb@plt+0x101e0>  // b.any
  412b20:	ldp	x21, x22, [sp, #32]
  412b24:	ldr	x1, [x19, #200]
  412b28:	mov	x0, x19
  412b2c:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412b30:	mov	w20, #0x3                   	// #3
  412b34:	ldr	x1, [x19, #208]
  412b38:	mov	x0, x19
  412b3c:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412b40:	mov	x0, x19
  412b44:	mov	x1, #0xe0                  	// #224
  412b48:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412b4c:	ldr	x1, [x19, #224]
  412b50:	mov	x0, x19
  412b54:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412b58:	mov	x0, x19
  412b5c:	mov	x1, #0x105                 	// #261
  412b60:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412b64:	mov	x0, x19
  412b68:	mov	x1, #0x106                 	// #262
  412b6c:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412b70:	mov	x0, x19
  412b74:	mov	x1, #0xed                  	// #237
  412b78:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412b7c:	ldr	x1, [x19, #240]
  412b80:	mov	x0, x19
  412b84:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412b88:	mov	x0, x19
  412b8c:	mov	x1, #0x105                 	// #261
  412b90:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412b94:	mov	x0, x19
  412b98:	mov	x1, #0x106                 	// #262
  412b9c:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412ba0:	ldr	x1, [x19, #232]
  412ba4:	mov	x0, x19
  412ba8:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412bac:	mov	x0, x19
  412bb0:	mov	x1, #0xf0                  	// #240
  412bb4:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412bb8:	ldr	x1, [x19, #248]
  412bbc:	mov	x0, x19
  412bc0:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412bc4:	mov	x0, x19
  412bc8:	mov	x1, #0x105                 	// #261
  412bcc:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412bd0:	mov	x0, x19
  412bd4:	mov	x1, #0x106                 	// #262
  412bd8:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412bdc:	mov	x0, x19
  412be0:	mov	x1, #0xf4                  	// #244
  412be4:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412be8:	ldr	x1, [x19, #264]
  412bec:	mov	x0, x19
  412bf0:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412bf4:	mov	x0, x19
  412bf8:	mov	x1, #0x105                 	// #261
  412bfc:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412c00:	mov	x0, x19
  412c04:	mov	x1, #0x106                 	// #262
  412c08:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412c0c:	ldr	x1, [x19, #256]
  412c10:	mov	x0, x19
  412c14:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412c18:	ldr	x1, [x19, #216]
  412c1c:	mov	x0, x19
  412c20:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412c24:	mov	x0, x19
  412c28:	mov	x1, #0x105                 	// #261
  412c2c:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412c30:	mov	x0, x19
  412c34:	mov	x1, #0x106                 	// #262
  412c38:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412c3c:	subs	w20, w20, #0x1
  412c40:	b.ne	412c18 <wcrtomb@plt+0x102f8>  // b.any
  412c44:	b	41264c <wcrtomb@plt+0xfd2c>
  412c48:	mov	x0, x19
  412c4c:	mov	x1, #0x101                 	// #257
  412c50:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412c54:	ldr	w0, [x19, #64]
  412c58:	b	412770 <wcrtomb@plt+0xfe50>
  412c5c:	mov	x0, x19
  412c60:	mov	x1, #0x103                 	// #259
  412c64:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412c68:	b	412768 <wcrtomb@plt+0xfe48>
  412c6c:	ldr	x0, [sp, #112]
  412c70:	and	x0, x0, #0xfffffffffffffffe
  412c74:	str	x0, [sp, #112]
  412c78:	b	412ae0 <wcrtomb@plt+0x101c0>
  412c7c:	mov	w22, #0x1                   	// #1
  412c80:	b	4127e0 <wcrtomb@plt+0xfec0>
  412c84:	cmp	x1, #0x109
  412c88:	b.eq	412ca4 <wcrtomb@plt+0x10384>  // b.none
  412c8c:	cmp	x1, #0x107
  412c90:	b.eq	412d0c <wcrtomb@plt+0x103ec>  // b.none
  412c94:	mov	x1, #0x100                 	// #256
  412c98:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412c9c:	ldr	x1, [x19, #128]
  412ca0:	b	41265c <wcrtomb@plt+0xfd3c>
  412ca4:	ldr	w1, [x0, #72]
  412ca8:	cmn	w1, #0x1
  412cac:	b.eq	412ddc <wcrtomb@plt+0x104bc>  // b.none
  412cb0:	bl	40fdd0 <wcrtomb@plt+0xd4b0>
  412cb4:	ldrb	w0, [x19, #457]
  412cb8:	cbz	w0, 41264c <wcrtomb@plt+0xfd2c>
  412cbc:	ldr	w0, [x19, #72]
  412cc0:	add	x1, sp, #0x70
  412cc4:	bl	4147b8 <wcrtomb@plt+0x11e98>
  412cc8:	cmp	w0, #0x0
  412ccc:	b.le	41264c <wcrtomb@plt+0xfd2c>
  412cd0:	sub	w0, w0, #0x1
  412cd4:	stp	x21, x22, [sp, #32]
  412cd8:	add	x21, sp, #0x70
  412cdc:	add	x20, x21, #0x4
  412ce0:	add	x20, x20, w0, uxtw #2
  412ce4:	ldr	w1, [x21], #4
  412ce8:	mov	x0, x19
  412cec:	bl	40fdd0 <wcrtomb@plt+0xd4b0>
  412cf0:	mov	x0, x19
  412cf4:	mov	x1, #0x106                 	// #262
  412cf8:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412cfc:	cmp	x20, x21
  412d00:	b.ne	412ce4 <wcrtomb@plt+0x103c4>  // b.any
  412d04:	ldp	x21, x22, [sp, #32]
  412d08:	b	41264c <wcrtomb@plt+0xfd2c>
  412d0c:	bl	411c28 <wcrtomb@plt+0xf308>
  412d10:	str	x0, [x19, #128]
  412d14:	mov	x0, x19
  412d18:	bl	412610 <wcrtomb@plt+0xfcf0>
  412d1c:	b	412d34 <wcrtomb@plt+0x10414>
  412d20:	mov	x0, x19
  412d24:	bl	412610 <wcrtomb@plt+0xfcf0>
  412d28:	mov	x0, x19
  412d2c:	mov	x1, #0x105                 	// #261
  412d30:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412d34:	ldr	x0, [x19, #128]
  412d38:	sub	x1, x0, #0x106
  412d3c:	tst	x1, #0xfffffffffffffffd
  412d40:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  412d44:	b.ge	412d20 <wcrtomb@plt+0x10400>  // b.tcont
  412d48:	cmp	x0, #0x106
  412d4c:	b.ne	412da8 <wcrtomb@plt+0x10488>  // b.any
  412d50:	mov	x0, x19
  412d54:	bl	411c28 <wcrtomb@plt+0xf308>
  412d58:	str	x0, [x19, #128]
  412d5c:	mov	x0, x19
  412d60:	bl	412610 <wcrtomb@plt+0xfcf0>
  412d64:	b	412d7c <wcrtomb@plt+0x1045c>
  412d68:	mov	x0, x19
  412d6c:	bl	412610 <wcrtomb@plt+0xfcf0>
  412d70:	mov	x0, x19
  412d74:	mov	x1, #0x105                 	// #261
  412d78:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412d7c:	ldr	x0, [x19, #128]
  412d80:	sub	x1, x0, #0x106
  412d84:	tst	x1, #0xfffffffffffffffd
  412d88:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  412d8c:	b.ge	412d68 <wcrtomb@plt+0x10448>  // b.tcont
  412d90:	mov	x0, x19
  412d94:	mov	x1, #0x106                 	// #262
  412d98:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412d9c:	ldr	x0, [x19, #128]
  412da0:	cmp	x0, #0x106
  412da4:	b.eq	412d50 <wcrtomb@plt+0x10430>  // b.none
  412da8:	cmp	x0, #0x108
  412dac:	b.eq	41264c <wcrtomb@plt+0xfd2c>  // b.none
  412db0:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  412db4:	add	x1, x1, #0x580
  412db8:	mov	w2, #0x5                   	// #5
  412dbc:	mov	x0, #0x0                   	// #0
  412dc0:	stp	x21, x22, [sp, #32]
  412dc4:	stp	x23, x24, [sp, #48]
  412dc8:	stp	x25, x26, [sp, #64]
  412dcc:	stp	x27, x28, [sp, #80]
  412dd0:	bl	4027f0 <dcgettext@plt>
  412dd4:	bl	4041c0 <wcrtomb@plt+0x18a0>
  412dd8:	bl	41b778 <wcrtomb@plt+0x18e58>
  412ddc:	mov	x1, #0x112                 	// #274
  412de0:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412de4:	b	41264c <wcrtomb@plt+0xfd2c>
  412de8:	mov	x28, #0xfffffffffffffff     	// #1152921504606846975
  412dec:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  412df0:	b	4129bc <wcrtomb@plt+0x1009c>
  412df4:	nop
  412df8:	stp	x29, x30, [sp, #-32]!
  412dfc:	mov	x4, #0xffffffffffffffff    	// #-1
  412e00:	mov	w3, #0x1                   	// #1
  412e04:	mov	x29, sp
  412e08:	str	x19, [sp, #16]
  412e0c:	mov	x19, x2
  412e10:	ldrb	w2, [x2, #456]
  412e14:	stp	x0, x1, [x19, #32]
  412e18:	str	x4, [x19, #48]
  412e1c:	strb	w3, [x19, #120]
  412e20:	cbz	w2, 412f4c <wcrtomb@plt+0x1062c>
  412e24:	ldr	x0, [x19, #184]
  412e28:	cbz	x0, 412f18 <wcrtomb@plt+0x105f8>
  412e2c:	mov	x0, x19
  412e30:	bl	411c28 <wcrtomb@plt+0xf308>
  412e34:	str	x0, [x19, #128]
  412e38:	ldr	x0, [x19, #168]
  412e3c:	str	x0, [x19, #136]
  412e40:	mov	x0, x19
  412e44:	bl	412610 <wcrtomb@plt+0xfcf0>
  412e48:	b	412e60 <wcrtomb@plt+0x10540>
  412e4c:	mov	x0, x19
  412e50:	bl	412610 <wcrtomb@plt+0xfcf0>
  412e54:	mov	x0, x19
  412e58:	mov	x1, #0x105                 	// #261
  412e5c:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412e60:	ldr	x0, [x19, #128]
  412e64:	sub	x1, x0, #0x106
  412e68:	tst	x1, #0xfffffffffffffffd
  412e6c:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  412e70:	b.ge	412e4c <wcrtomb@plt+0x1052c>  // b.tcont
  412e74:	cmp	x0, #0x106
  412e78:	b.ne	412ed8 <wcrtomb@plt+0x105b8>  // b.any
  412e7c:	nop
  412e80:	mov	x0, x19
  412e84:	bl	411c28 <wcrtomb@plt+0xf308>
  412e88:	str	x0, [x19, #128]
  412e8c:	mov	x0, x19
  412e90:	bl	412610 <wcrtomb@plt+0xfcf0>
  412e94:	b	412eac <wcrtomb@plt+0x1058c>
  412e98:	mov	x0, x19
  412e9c:	bl	412610 <wcrtomb@plt+0xfcf0>
  412ea0:	mov	x0, x19
  412ea4:	mov	x1, #0x105                 	// #261
  412ea8:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412eac:	ldr	x0, [x19, #128]
  412eb0:	sub	x1, x0, #0x106
  412eb4:	tst	x1, #0xfffffffffffffffd
  412eb8:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  412ebc:	b.ge	412e98 <wcrtomb@plt+0x10578>  // b.tcont
  412ec0:	mov	x0, x19
  412ec4:	mov	x1, #0x106                 	// #262
  412ec8:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412ecc:	ldr	x0, [x19, #128]
  412ed0:	cmp	x0, #0x106
  412ed4:	b.eq	412e80 <wcrtomb@plt+0x10560>  // b.none
  412ed8:	cmn	x0, #0x1
  412edc:	b.ne	412f64 <wcrtomb@plt+0x10644>  // b.any
  412ee0:	ldr	x1, [x19, #184]
  412ee4:	mov	x0, x19
  412ee8:	mvn	x1, x1
  412eec:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412ef0:	mov	x0, x19
  412ef4:	mov	x1, #0x105                 	// #261
  412ef8:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412efc:	ldr	x0, [x19, #184]
  412f00:	cbnz	x0, 412f28 <wcrtomb@plt+0x10608>
  412f04:	add	x0, x0, #0x1
  412f08:	str	x0, [x19, #184]
  412f0c:	ldr	x19, [sp, #16]
  412f10:	ldp	x29, x30, [sp], #32
  412f14:	ret
  412f18:	mov	x0, x19
  412f1c:	mov	x1, #0x10b                 	// #267
  412f20:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412f24:	b	412e2c <wcrtomb@plt+0x1050c>
  412f28:	mov	x0, x19
  412f2c:	mov	x1, #0x106                 	// #262
  412f30:	bl	40faf8 <wcrtomb@plt+0xd1d8>
  412f34:	ldr	x0, [x19, #184]
  412f38:	add	x0, x0, #0x1
  412f3c:	str	x0, [x19, #184]
  412f40:	ldr	x19, [sp, #16]
  412f44:	ldp	x29, x30, [sp], #32
  412f48:	ret
  412f4c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  412f50:	add	x1, x1, #0x590
  412f54:	mov	w2, #0x5                   	// #5
  412f58:	mov	x0, #0x0                   	// #0
  412f5c:	bl	4027f0 <dcgettext@plt>
  412f60:	bl	4041c0 <wcrtomb@plt+0x18a0>
  412f64:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  412f68:	add	x1, x1, #0x5a8
  412f6c:	mov	w2, #0x5                   	// #5
  412f70:	mov	x0, #0x0                   	// #0
  412f74:	bl	4027f0 <dcgettext@plt>
  412f78:	bl	4041c0 <wcrtomb@plt+0x18a0>
  412f7c:	nop
  412f80:	ldr	x6, [x0, #1040]
  412f84:	mov	x16, x6
  412f88:	br	x16
  412f8c:	nop
  412f90:	ldr	x0, [x0, #288]
  412f94:	ret
  412f98:	ldrb	w0, [x0, #192]
  412f9c:	ret
  412fa0:	stp	x29, x30, [sp, #-48]!
  412fa4:	mov	x29, sp
  412fa8:	stp	x19, x20, [sp, #16]
  412fac:	mov	x19, x0
  412fb0:	ldr	x0, [x0]
  412fb4:	str	x21, [sp, #32]
  412fb8:	bl	4026b0 <free@plt>
  412fbc:	ldr	x0, [x19, #144]
  412fc0:	bl	4026b0 <free@plt>
  412fc4:	ldrb	w0, [x19, #1048]
  412fc8:	cbnz	w0, 413100 <wcrtomb@plt+0x107e0>
  412fcc:	ldr	x0, [x19, #336]
  412fd0:	mov	x20, #0x0                   	// #0
  412fd4:	mov	x21, #0x0                   	// #0
  412fd8:	bl	4026b0 <free@plt>
  412fdc:	ldr	x0, [x19, #344]
  412fe0:	bl	4026b0 <free@plt>
  412fe4:	ldr	x0, [x19, #304]
  412fe8:	cmp	x0, #0x0
  412fec:	b.le	413024 <wcrtomb@plt+0x10704>
  412ff0:	ldr	x0, [x19, #296]
  412ff4:	add	x21, x21, #0x1
  412ff8:	add	x0, x0, x20
  412ffc:	ldr	x0, [x0, #8]
  413000:	bl	4026b0 <free@plt>
  413004:	ldr	x0, [x19, #296]
  413008:	add	x0, x0, x20
  41300c:	add	x20, x20, #0x50
  413010:	ldr	x0, [x0, #48]
  413014:	bl	4026b0 <free@plt>
  413018:	ldr	x0, [x19, #304]
  41301c:	cmp	x0, x21
  413020:	b.gt	412ff0 <wcrtomb@plt+0x106d0>
  413024:	ldr	x0, [x19, #296]
  413028:	bl	4026b0 <free@plt>
  41302c:	ldr	x0, [x19, #320]
  413030:	cbz	x0, 41306c <wcrtomb@plt+0x1074c>
  413034:	ldr	x1, [x19, #152]
  413038:	cmp	x1, #0x0
  41303c:	b.le	413068 <wcrtomb@plt+0x10748>
  413040:	mov	x21, #0x0                   	// #0
  413044:	mov	x20, #0x0                   	// #0
  413048:	ldr	x0, [x0, x21]
  41304c:	add	x20, x20, #0x1
  413050:	add	x21, x21, #0x18
  413054:	bl	4026b0 <free@plt>
  413058:	ldr	x0, [x19, #152]
  41305c:	cmp	x0, x20
  413060:	ldr	x0, [x19, #320]
  413064:	b.gt	413048 <wcrtomb@plt+0x10728>
  413068:	bl	4026b0 <free@plt>
  41306c:	ldr	x0, [x19, #368]
  413070:	cbz	x0, 4130d0 <wcrtomb@plt+0x107b0>
  413074:	ldr	x1, [x19, #352]
  413078:	cmp	x1, #0x0
  41307c:	b.le	4130b0 <wcrtomb@plt+0x10790>
  413080:	mov	x20, #0x0                   	// #0
  413084:	nop
  413088:	ldr	x0, [x0, x20, lsl #3]
  41308c:	bl	4026b0 <free@plt>
  413090:	ldr	x0, [x19, #376]
  413094:	ldr	x0, [x0, x20, lsl #3]
  413098:	add	x20, x20, #0x1
  41309c:	bl	4026b0 <free@plt>
  4130a0:	ldr	x0, [x19, #352]
  4130a4:	cmp	x0, x20
  4130a8:	ldr	x0, [x19, #368]
  4130ac:	b.gt	413088 <wcrtomb@plt+0x10768>
  4130b0:	sub	x0, x0, #0x10
  4130b4:	bl	4026b0 <free@plt>
  4130b8:	ldr	x0, [x19, #376]
  4130bc:	bl	4026b0 <free@plt>
  4130c0:	ldr	x0, [x19, #392]
  4130c4:	bl	4026b0 <free@plt>
  4130c8:	ldr	x0, [x19, #384]
  4130cc:	bl	4026b0 <free@plt>
  4130d0:	ldr	x0, [x19, #288]
  4130d4:	cbz	x0, 4130f0 <wcrtomb@plt+0x107d0>
  4130d8:	bl	412fa0 <wcrtomb@plt+0x10680>
  4130dc:	ldr	x21, [sp, #32]
  4130e0:	ldr	x0, [x19, #288]
  4130e4:	ldp	x19, x20, [sp, #16]
  4130e8:	ldp	x29, x30, [sp], #48
  4130ec:	b	4026b0 <free@plt>
  4130f0:	ldp	x19, x20, [sp, #16]
  4130f4:	ldr	x21, [sp, #32]
  4130f8:	ldp	x29, x30, [sp], #48
  4130fc:	ret
  413100:	ldr	x0, [x19, #280]
  413104:	bl	4026b0 <free@plt>
  413108:	ldr	x0, [x19, #96]
  41310c:	bl	4026b0 <free@plt>
  413110:	ldr	x0, [x19, #408]
  413114:	bl	4026b0 <free@plt>
  413118:	ldr	x0, [x19, #432]
  41311c:	cbz	x0, 412fcc <wcrtomb@plt+0x106ac>
  413120:	ldr	x1, [x19, #352]
  413124:	tbnz	x1, #63, 41314c <wcrtomb@plt+0x1082c>
  413128:	mov	x20, #0xffffffffffffffff    	// #-1
  41312c:	nop
  413130:	ldr	x0, [x0, x20, lsl #3]
  413134:	add	x20, x20, #0x1
  413138:	bl	4026b0 <free@plt>
  41313c:	ldr	x0, [x19, #352]
  413140:	cmp	x20, x0
  413144:	ldr	x0, [x19, #432]
  413148:	b.lt	413130 <wcrtomb@plt+0x10810>  // b.tstop
  41314c:	sub	x0, x0, #0x10
  413150:	bl	4026b0 <free@plt>
  413154:	b	412fcc <wcrtomb@plt+0x106ac>
  413158:	stp	x29, x30, [sp, #-112]!
  41315c:	mov	x29, sp
  413160:	stp	x19, x20, [sp, #16]
  413164:	stp	x21, x22, [sp, #32]
  413168:	mov	x22, x2
  41316c:	stp	x23, x24, [sp, #48]
  413170:	stp	x25, x26, [sp, #64]
  413174:	and	w26, w3, #0xff
  413178:	cbz	x0, 413180 <wcrtomb@plt+0x10860>
  41317c:	bl	412df8 <wcrtomb@plt+0x104d8>
  413180:	mov	x0, #0x920                 	// #2336
  413184:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  413188:	mov	x1, x22
  41318c:	mov	x19, x0
  413190:	mov	x2, #0x920                 	// #2336
  413194:	bl	4022a0 <memcpy@plt>
  413198:	movi	v0.4s, #0x0
  41319c:	add	x0, x19, #0x200
  4131a0:	adrp	x25, 40f000 <wcrtomb@plt+0xc6e0>
  4131a4:	add	x25, x25, #0x598
  4131a8:	str	x25, [x19, #1040]
  4131ac:	strb	wzr, [x19, #1048]
  4131b0:	stur	q0, [x0, #-232]
  4131b4:	ldr	x1, [x19, #16]
  4131b8:	stp	xzr, xzr, [x19, #296]
  4131bc:	str	xzr, [x19, #320]
  4131c0:	cmp	xzr, x1, lsr #59
  4131c4:	str	xzr, [x19, #352]
  4131c8:	str	q0, [x19, #336]
  4131cc:	cset	x2, ne  // ne = any
  4131d0:	lsl	x0, x1, #5
  4131d4:	stp	q0, q0, [x19, #368]
  4131d8:	tbnz	x1, #58, 413608 <wcrtomb@plt+0x10ce8>
  4131dc:	cbnz	x2, 413608 <wcrtomb@plt+0x10ce8>
  4131e0:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4131e4:	str	x0, [x19]
  4131e8:	ldr	x2, [x22, #8]
  4131ec:	cbnz	x2, 4135f0 <wcrtomb@plt+0x10cd0>
  4131f0:	ldr	x0, [x22, #152]
  4131f4:	cmp	xzr, x0, lsr #60
  4131f8:	lsl	x0, x0, #4
  4131fc:	cset	x24, ne  // ne = any
  413200:	cmp	x0, #0x0
  413204:	csinc	x24, x24, xzr, ge  // ge = tcont
  413208:	cbnz	x24, 413608 <wcrtomb@plt+0x10ce8>
  41320c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  413210:	str	x0, [x19, #144]
  413214:	ldr	x0, [x22, #152]
  413218:	cmp	x0, #0x0
  41321c:	lsl	x0, x0, #1
  413220:	str	x0, [x19, #160]
  413224:	b.le	413600 <wcrtomb@plt+0x10ce0>
  413228:	mov	x4, #0xfffffffffffffeeb    	// #-277
  41322c:	mov	x20, #0x0                   	// #0
  413230:	mvni	v0.4s, #0x0
  413234:	mov	x21, #0x0                   	// #0
  413238:	mov	w8, #0x0                   	// #0
  41323c:	mov	x5, #0x102                 	// #258
  413240:	movk	x4, #0x7fff, lsl #48
  413244:	stp	x27, x28, [sp, #80]
  413248:	mov	w28, #0x0                   	// #0
  41324c:	ldr	x7, [x22, #144]
  413250:	b	41328c <wcrtomb@plt+0x1096c>
  413254:	cmp	x0, #0xff
  413258:	add	x21, x21, #0x1
  41325c:	cset	w1, ls  // ls = plast
  413260:	cmp	x0, #0x113
  413264:	ldr	x2, [x19, #144]
  413268:	cset	w3, gt
  41326c:	orr	w1, w1, w3
  413270:	cmp	w1, #0x0
  413274:	csel	w28, w28, w1, eq  // eq = none
  413278:	str	x0, [x2, x20, lsl #3]
  41327c:	add	x20, x20, #0x1
  413280:	ldr	x1, [x22, #152]
  413284:	cmp	x1, x21
  413288:	b.le	413338 <wcrtomb@plt+0x10a18>
  41328c:	ldr	x0, [x7, x21, lsl #3]
  413290:	lsl	x6, x21, #3
  413294:	cmp	x0, #0x111
  413298:	b.gt	41344c <wcrtomb@plt+0x10b2c>
  41329c:	cmp	x0, #0x10d
  4132a0:	b.gt	413538 <wcrtomb@plt+0x10c18>
  4132a4:	cmp	x0, #0x10a
  4132a8:	b.ne	413254 <wcrtomb@plt+0x10934>  // b.any
  4132ac:	ldp	x0, x2, [x19]
  4132b0:	cmp	x2, #0x0
  4132b4:	b.le	413464 <wcrtomb@plt+0x10b44>
  4132b8:	mov	x1, x0
  4132bc:	mov	x23, #0x0                   	// #0
  4132c0:	b	4132d4 <wcrtomb@plt+0x109b4>
  4132c4:	add	x23, x23, #0x1
  4132c8:	add	x1, x1, #0x20
  4132cc:	cmp	x23, x2
  4132d0:	b.eq	413468 <wcrtomb@plt+0x10b48>  // b.none
  4132d4:	ldp	x9, x3, [x1]
  4132d8:	ldr	x8, [x1, #16]
  4132dc:	and	x3, x3, x9
  4132e0:	ldr	x9, [x1, #24]
  4132e4:	and	x8, x8, x9
  4132e8:	and	x3, x3, x8
  4132ec:	cmn	x3, #0x1
  4132f0:	b.ne	4132c4 <wcrtomb@plt+0x109a4>  // b.any
  4132f4:	ldr	x1, [x19, #144]
  4132f8:	lsl	x0, x20, #3
  4132fc:	add	x23, x23, #0x114
  413300:	add	x6, x7, x6
  413304:	add	x0, x1, x0
  413308:	mov	w8, #0x1                   	// #1
  41330c:	str	x23, [x1, x20, lsl #3]
  413310:	add	x20, x20, #0x2
  413314:	str	x5, [x0, #8]
  413318:	ldr	x0, [x6, #8]
  41331c:	ldr	x1, [x22, #152]
  413320:	sub	x0, x0, #0x101
  413324:	cmp	x0, #0x3
  413328:	cinc	x21, x21, cc  // cc = lo, ul, last
  41332c:	add	x21, x21, #0x1
  413330:	cmp	x1, x21
  413334:	b.gt	41328c <wcrtomb@plt+0x1096c>
  413338:	str	x20, [x19, #152]
  41333c:	cbz	w28, 4135c0 <wcrtomb@plt+0x10ca0>
  413340:	cbz	w8, 4135b8 <wcrtomb@plt+0x10c98>
  413344:	ldp	x27, x28, [sp, #80]
  413348:	str	x19, [x22, #288]
  41334c:	cmp	x1, #0x0
  413350:	b.le	413610 <wcrtomb@plt+0x10cf0>
  413354:	ldr	x3, [x22, #144]
  413358:	mov	x2, #0x0                   	// #0
  41335c:	ldr	x0, [x3, x2, lsl #3]
  413360:	cmp	x0, #0x111
  413364:	b.gt	413568 <wcrtomb@plt+0x10c48>
  413368:	cmp	x0, #0x10d
  41336c:	b.gt	4135ac <wcrtomb@plt+0x10c8c>
  413370:	add	x2, x2, #0x1
  413374:	cmp	x2, x1
  413378:	b.ne	41335c <wcrtomb@plt+0x10a3c>  // b.any
  41337c:	ldrb	w4, [x22, #1050]
  413380:	mov	w2, #0x0                   	// #0
  413384:	cbz	w4, 413420 <wcrtomb@plt+0x10b00>
  413388:	ldr	x0, [x3, x24, lsl #3]
  41338c:	cmp	x0, #0x113
  413390:	b.eq	413420 <wcrtomb@plt+0x10b00>  // b.none
  413394:	b.gt	4133a8 <wcrtomb@plt+0x10a88>
  413398:	cmp	x0, #0x10a
  41339c:	b.eq	413644 <wcrtomb@plt+0x10d24>  // b.none
  4133a0:	cmp	x0, #0x112
  4133a4:	csel	w2, w2, w4, ne  // ne = any
  4133a8:	add	x24, x24, #0x1
  4133ac:	cmp	x24, x1
  4133b0:	b.ne	413388 <wcrtomb@plt+0x10a68>  // b.any
  4133b4:	cbz	w2, 413618 <wcrtomb@plt+0x10cf8>
  4133b8:	ldr	x0, [x22, #280]
  4133bc:	bl	4026b0 <free@plt>
  4133c0:	ldr	x0, [x22, #96]
  4133c4:	bl	4026b0 <free@plt>
  4133c8:	ldr	x0, [x22, #408]
  4133cc:	bl	4026b0 <free@plt>
  4133d0:	ldr	x0, [x22, #432]
  4133d4:	cbz	x0, 41340c <wcrtomb@plt+0x10aec>
  4133d8:	ldr	x1, [x22, #352]
  4133dc:	tbnz	x1, #63, 413404 <wcrtomb@plt+0x10ae4>
  4133e0:	mov	x19, #0xffffffffffffffff    	// #-1
  4133e4:	nop
  4133e8:	ldr	x0, [x0, x19, lsl #3]
  4133ec:	add	x19, x19, #0x1
  4133f0:	bl	4026b0 <free@plt>
  4133f4:	ldr	x0, [x22, #352]
  4133f8:	cmp	x19, x0
  4133fc:	ldr	x0, [x22, #432]
  413400:	b.lt	4133e8 <wcrtomb@plt+0x10ac8>  // b.tstop
  413404:	sub	x0, x0, #0x10
  413408:	bl	4026b0 <free@plt>
  41340c:	mov	w0, #0x1                   	// #1
  413410:	strb	w0, [x22, #192]
  413414:	str	x25, [x22, #1040]
  413418:	strb	wzr, [x22, #1048]
  41341c:	nop
  413420:	mov	x0, x22
  413424:	mov	w1, w26
  413428:	bl	40ffd8 <wcrtomb@plt+0xd6b8>
  41342c:	ldr	x0, [x22, #288]
  413430:	cbnz	x0, 413588 <wcrtomb@plt+0x10c68>
  413434:	ldp	x19, x20, [sp, #16]
  413438:	ldp	x21, x22, [sp, #32]
  41343c:	ldp	x23, x24, [sp, #48]
  413440:	ldp	x25, x26, [sp, #64]
  413444:	ldp	x29, x30, [sp], #112
  413448:	ret
  41344c:	sub	x1, x0, #0x112
  413450:	cmp	x1, #0x1
  413454:	b.hi	413254 <wcrtomb@plt+0x10934>  // b.pmore
  413458:	ldp	x0, x2, [x19]
  41345c:	cmp	x2, #0x0
  413460:	b.gt	4132b8 <wcrtomb@plt+0x10998>
  413464:	mov	x23, #0x0                   	// #0
  413468:	ldr	x3, [x19, #16]
  41346c:	cmp	x3, x2
  413470:	b.gt	41351c <wcrtomb@plt+0x10bfc>
  413474:	asr	x27, x3, #1
  413478:	adds	x27, x3, x27
  41347c:	b.vs	413634 <wcrtomb@plt+0x10d14>
  413480:	cmp	x27, x4
  413484:	csel	x27, x27, x4, le
  413488:	asr	x1, x27, #63
  41348c:	sbfx	x7, x27, #58, #1
  413490:	lsl	x2, x27, #5
  413494:	extr	x1, x1, x27, #59
  413498:	cmp	x7, x1
  41349c:	b.ne	413634 <wcrtomb@plt+0x10d14>  // b.any
  4134a0:	cmp	x2, #0x7f
  4134a4:	mov	x1, #0x80                  	// #128
  4134a8:	csel	x1, x2, x1, gt
  4134ac:	mov	x2, #0x4                   	// #4
  4134b0:	csel	x27, x27, x2, gt
  4134b4:	cbz	x0, 4135dc <wcrtomb@plt+0x10cbc>
  4134b8:	sub	x2, x27, x3
  4134bc:	cmp	x2, #0x0
  4134c0:	b.gt	4134f4 <wcrtomb@plt+0x10bd4>
  4134c4:	adds	x27, x3, #0x1
  4134c8:	cset	x2, vs
  4134cc:	cmp	x27, x4
  4134d0:	cset	w1, gt
  4134d4:	orr	w1, w1, w2
  4134d8:	cbnz	w1, 41360c <wcrtomb@plt+0x10cec>
  4134dc:	asr	x2, x27, #63
  4134e0:	sbfx	x3, x27, #58, #1
  4134e4:	lsl	x1, x27, #5
  4134e8:	extr	x2, x2, x27, #59
  4134ec:	cmp	x3, x2
  4134f0:	b.ne	41360c <wcrtomb@plt+0x10cec>  // b.any
  4134f4:	str	x6, [sp, #104]
  4134f8:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4134fc:	mvni	v0.4s, #0x0
  413500:	mov	x4, #0xfffffffffffffeeb    	// #-277
  413504:	ldr	x2, [x19, #8]
  413508:	movk	x4, #0x7fff, lsl #48
  41350c:	ldr	x6, [sp, #104]
  413510:	mov	x5, #0x102                 	// #258
  413514:	ldr	x7, [x22, #144]
  413518:	str	x27, [x19, #16]
  41351c:	lsl	x1, x23, #5
  413520:	add	x2, x2, #0x1
  413524:	add	x3, x0, x1
  413528:	stp	x0, x2, [x19]
  41352c:	str	q0, [x0, x1]
  413530:	str	q0, [x3, #16]
  413534:	b	4132f4 <wcrtomb@plt+0x109d4>
  413538:	ldrb	w3, [x22, #1048]
  41353c:	add	x21, x21, #0x1
  413540:	add	x1, x20, #0x1
  413544:	ldr	x2, [x19, #144]
  413548:	cbz	w3, 41355c <wcrtomb@plt+0x10c3c>
  41354c:	mov	x0, #0x100                 	// #256
  413550:	str	x0, [x2, x20, lsl #3]
  413554:	mov	x20, x1
  413558:	b	413280 <wcrtomb@plt+0x10960>
  41355c:	str	x0, [x2, x20, lsl #3]
  413560:	mov	x20, x1
  413564:	b	413280 <wcrtomb@plt+0x10960>
  413568:	sub	x0, x0, #0x112
  41356c:	cmp	x0, #0x1
  413570:	b.hi	413370 <wcrtomb@plt+0x10a50>  // b.pmore
  413574:	adrp	x0, 40d000 <wcrtomb@plt+0xa6e0>
  413578:	add	x0, x0, #0x4f0
  41357c:	str	x0, [x22, #1040]
  413580:	ldr	x0, [x22, #288]
  413584:	cbz	x0, 413434 <wcrtomb@plt+0x10b14>
  413588:	mov	w1, #0x1                   	// #1
  41358c:	strb	w1, [x22, #192]
  413590:	mov	w1, w26
  413594:	ldp	x19, x20, [sp, #16]
  413598:	ldp	x21, x22, [sp, #32]
  41359c:	ldp	x23, x24, [sp, #48]
  4135a0:	ldp	x25, x26, [sp, #64]
  4135a4:	ldp	x29, x30, [sp], #112
  4135a8:	b	40ffd8 <wcrtomb@plt+0xd6b8>
  4135ac:	ldrb	w0, [x22, #1048]
  4135b0:	cbnz	w0, 413574 <wcrtomb@plt+0x10c54>
  4135b4:	b	413370 <wcrtomb@plt+0x10a50>
  4135b8:	ldrb	w0, [x22, #1048]
  4135bc:	cbnz	w0, 413344 <wcrtomb@plt+0x10a24>
  4135c0:	ldp	x27, x28, [sp, #80]
  4135c4:	mov	x0, x19
  4135c8:	bl	412fa0 <wcrtomb@plt+0x10680>
  4135cc:	mov	x0, x19
  4135d0:	bl	4026b0 <free@plt>
  4135d4:	ldr	x1, [x22, #152]
  4135d8:	b	41334c <wcrtomb@plt+0x10a2c>
  4135dc:	str	xzr, [x19, #16]
  4135e0:	sub	x2, x27, x3
  4135e4:	cmp	x2, #0x0
  4135e8:	b.le	4134c4 <wcrtomb@plt+0x10ba4>
  4135ec:	b	4134f4 <wcrtomb@plt+0x10bd4>
  4135f0:	ldr	x1, [x22]
  4135f4:	lsl	x2, x2, #5
  4135f8:	bl	4022a0 <memcpy@plt>
  4135fc:	b	4131f0 <wcrtomb@plt+0x108d0>
  413600:	str	xzr, [x19, #152]
  413604:	b	4135c4 <wcrtomb@plt+0x10ca4>
  413608:	stp	x27, x28, [sp, #80]
  41360c:	bl	41b778 <wcrtomb@plt+0x18e58>
  413610:	ldrb	w0, [x22, #1050]
  413614:	cbz	w0, 413420 <wcrtomb@plt+0x10b00>
  413618:	ldr	x0, [x22, #288]
  41361c:	cbz	x0, 4133b8 <wcrtomb@plt+0x10a98>
  413620:	bl	412fa0 <wcrtomb@plt+0x10680>
  413624:	ldr	x0, [x22, #288]
  413628:	bl	4026b0 <free@plt>
  41362c:	str	xzr, [x22, #288]
  413630:	b	4133b8 <wcrtomb@plt+0x10a98>
  413634:	mov	x1, #0x7fffffffffffffe0    	// #9223372036854775776
  413638:	mov	x27, #0x3ffffffffffffff     	// #288230376151711743
  41363c:	cbnz	x0, 4134b8 <wcrtomb@plt+0x10b98>
  413640:	b	4135dc <wcrtomb@plt+0x10cbc>
  413644:	stp	x27, x28, [sp, #80]
  413648:	bl	4025f0 <abort@plt>
  41364c:	nop
  413650:	stp	x29, x30, [sp, #-144]!
  413654:	mov	x29, sp
  413658:	stp	x25, x26, [sp, #64]
  41365c:	mov	x25, x0
  413660:	ldrb	w0, [x0, #1048]
  413664:	stp	x21, x22, [sp, #32]
  413668:	ldrb	w1, [x25, #457]
  41366c:	eor	w0, w0, #0x1
  413670:	and	w0, w0, w1
  413674:	ldr	x26, [x25, #152]
  413678:	and	w0, w0, #0xff
  41367c:	str	w0, [sp, #140]
  413680:	cmp	x26, #0x2
  413684:	b.le	414328 <wcrtomb@plt+0x11a08>
  413688:	stp	x27, x28, [sp, #80]
  41368c:	mov	x22, #0x1                   	// #1
  413690:	ldr	x27, [x25, #144]
  413694:	stp	x19, x20, [sp, #16]
  413698:	mov	x19, #0x0                   	// #0
  41369c:	stp	x23, x24, [sp, #48]
  4136a0:	lsl	x23, x22, #3
  4136a4:	ldr	x20, [x27, x22, lsl #3]
  4136a8:	stp	wzr, wzr, [sp, #132]
  4136ac:	cmp	x20, #0x105
  4136b0:	b.eq	413734 <wcrtomb@plt+0x10e14>  // b.none
  4136b4:	b.gt	413924 <wcrtomb@plt+0x11004>
  4136b8:	cmp	x20, #0x100
  4136bc:	b.eq	413c60 <wcrtomb@plt+0x11340>  // b.none
  4136c0:	b.le	41389c <wcrtomb@plt+0x10f7c>
  4136c4:	cmp	x20, #0x102
  4136c8:	b.gt	413874 <wcrtomb@plt+0x10f54>
  4136cc:	ldr	x20, [x19]
  4136d0:	ldr	x0, [x20]
  4136d4:	cbz	x0, 4136e8 <wcrtomb@plt+0x10dc8>
  4136d8:	bl	4026b0 <free@plt>
  4136dc:	ldr	x0, [x20, #8]!
  4136e0:	cbnz	x0, 4136d8 <wcrtomb@plt+0x10db8>
  4136e4:	ldr	x20, [x19]
  4136e8:	str	xzr, [x20]
  4136ec:	add	x20, x22, #0x2
  4136f0:	add	x22, x22, #0x1
  4136f4:	ldr	x0, [x19, #24]
  4136f8:	strb	wzr, [x0]
  4136fc:	ldr	x0, [x19, #16]
  413700:	strb	wzr, [x0]
  413704:	ldr	x0, [x19, #8]
  413708:	strb	wzr, [x0]
  41370c:	strh	wzr, [x19, #32]
  413710:	ldr	x26, [x25, #152]
  413714:	cmp	x26, x20
  413718:	b.le	4138a8 <wcrtomb@plt+0x10f88>
  41371c:	nop
  413720:	ldr	x27, [x25, #144]
  413724:	lsl	x23, x22, #3
  413728:	ldr	x20, [x27, x22, lsl #3]
  41372c:	cmp	x20, #0x105
  413730:	b.ne	4136b4 <wcrtomb@plt+0x10d94>  // b.any
  413734:	ldr	x24, [x19]
  413738:	ldr	x23, [x19, #40]
  41373c:	ldr	x21, [x24]
  413740:	ldr	x20, [x23]
  413744:	cbz	x21, 41376c <wcrtomb@plt+0x10e4c>
  413748:	mov	x0, x21
  41374c:	bl	402300 <strlen@plt>
  413750:	mov	x1, x21
  413754:	mov	x2, x0
  413758:	mov	x0, x20
  41375c:	bl	40d570 <wcrtomb@plt+0xac50>
  413760:	ldr	x21, [x24, #8]!
  413764:	mov	x20, x0
  413768:	cbnz	x21, 413748 <wcrtomb@plt+0x10e28>
  41376c:	ldr	x0, [x23, #16]
  413770:	str	x20, [x23]
  413774:	ldrb	w1, [x0]
  413778:	cbz	w1, 413788 <wcrtomb@plt+0x10e68>
  41377c:	ldr	x20, [x19, #8]
  413780:	ldrb	w1, [x20]
  413784:	cbnz	w1, 4141f4 <wcrtomb@plt+0x118d4>
  413788:	ldr	x0, [x23, #24]
  41378c:	ldrb	w0, [x0]
  413790:	cbnz	w0, 414274 <wcrtomb@plt+0x11954>
  413794:	ldr	x0, [x19, #24]
  413798:	ldr	x20, [x23, #16]
  41379c:	ldrb	w0, [x0]
  4137a0:	cbnz	w0, 4137ac <wcrtomb@plt+0x10e8c>
  4137a4:	strb	wzr, [x20]
  4137a8:	ldr	x20, [x23, #16]
  4137ac:	ldr	x24, [x19, #16]
  4137b0:	mov	x0, x24
  4137b4:	bl	402300 <strlen@plt>
  4137b8:	mov	x21, x0
  4137bc:	cbz	x0, 4137f0 <wcrtomb@plt+0x10ed0>
  4137c0:	mov	x0, x20
  4137c4:	bl	402300 <strlen@plt>
  4137c8:	mov	x26, x0
  4137cc:	mov	x0, x20
  4137d0:	add	x1, x26, x21
  4137d4:	add	x1, x1, #0x1
  4137d8:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4137dc:	add	x2, x21, #0x1
  4137e0:	mov	x20, x0
  4137e4:	mov	x1, x24
  4137e8:	add	x0, x0, x26
  4137ec:	bl	4022a0 <memcpy@plt>
  4137f0:	ldr	x21, [x23, #24]
  4137f4:	str	x20, [x23, #16]
  4137f8:	ldrb	w0, [x21]
  4137fc:	cbnz	w0, 413f54 <wcrtomb@plt+0x11634>
  413800:	ldrb	w0, [x23, #32]
  413804:	cbnz	w0, 413f54 <wcrtomb@plt+0x11634>
  413808:	strb	wzr, [x21]
  41380c:	strh	wzr, [x23, #32]
  413810:	ldr	x20, [x19]
  413814:	ldr	x0, [x20]
  413818:	cbz	x0, 413830 <wcrtomb@plt+0x10f10>
  41381c:	nop
  413820:	bl	4026b0 <free@plt>
  413824:	ldr	x0, [x20, #8]!
  413828:	cbnz	x0, 413820 <wcrtomb@plt+0x10f00>
  41382c:	ldr	x20, [x19]
  413830:	mov	x0, x20
  413834:	bl	4026b0 <free@plt>
  413838:	add	x20, x22, #0x2
  41383c:	ldr	x0, [x19, #8]
  413840:	add	x22, x22, #0x1
  413844:	bl	4026b0 <free@plt>
  413848:	ldr	x0, [x19, #16]
  41384c:	bl	4026b0 <free@plt>
  413850:	ldr	x0, [x19, #24]
  413854:	bl	4026b0 <free@plt>
  413858:	mov	x0, x19
  41385c:	bl	4026b0 <free@plt>
  413860:	ldr	x26, [x25, #152]
  413864:	mov	x19, x23
  413868:	cmp	x26, x20
  41386c:	b.gt	413720 <wcrtomb@plt+0x10e00>
  413870:	b	4138a8 <wcrtomb@plt+0x10f88>
  413874:	cmp	x20, #0x103
  413878:	b.ne	413e14 <wcrtomb@plt+0x114f4>  // b.any
  41387c:	ldr	x0, [x19, #24]
  413880:	add	x20, x22, #0x2
  413884:	add	x22, x22, #0x1
  413888:	strb	wzr, [x0]
  41388c:	ldr	x26, [x25, #152]
  413890:	cmp	x26, x20
  413894:	b.gt	413720 <wcrtomb@plt+0x10e00>
  413898:	b	4138a8 <wcrtomb@plt+0x10f88>
  41389c:	cmn	x20, #0x1
  4138a0:	b.eq	413f88 <wcrtomb@plt+0x11668>  // b.none
  4138a4:	cbnz	x20, 413e18 <wcrtomb@plt+0x114f8>
  4138a8:	mov	x22, #0x0                   	// #0
  4138ac:	cbz	x19, 413904 <wcrtomb@plt+0x10fe4>
  4138b0:	mov	x20, x19
  4138b4:	ldr	x19, [x19, #40]
  4138b8:	ldr	x21, [x20]
  4138bc:	ldr	x0, [x21]
  4138c0:	cbz	x0, 4138d8 <wcrtomb@plt+0x10fb8>
  4138c4:	nop
  4138c8:	bl	4026b0 <free@plt>
  4138cc:	ldr	x0, [x21, #8]!
  4138d0:	cbnz	x0, 4138c8 <wcrtomb@plt+0x10fa8>
  4138d4:	ldr	x21, [x20]
  4138d8:	mov	x0, x21
  4138dc:	bl	4026b0 <free@plt>
  4138e0:	ldr	x0, [x20, #8]
  4138e4:	bl	4026b0 <free@plt>
  4138e8:	ldr	x0, [x20, #16]
  4138ec:	bl	4026b0 <free@plt>
  4138f0:	ldr	x0, [x20, #24]
  4138f4:	bl	4026b0 <free@plt>
  4138f8:	mov	x0, x20
  4138fc:	bl	4026b0 <free@plt>
  413900:	cbnz	x19, 4138b0 <wcrtomb@plt+0x10f90>
  413904:	ldp	x19, x20, [sp, #16]
  413908:	ldp	x23, x24, [sp, #48]
  41390c:	ldp	x27, x28, [sp, #80]
  413910:	mov	x0, x22
  413914:	ldp	x21, x22, [sp, #32]
  413918:	ldp	x25, x26, [sp, #64]
  41391c:	ldp	x29, x30, [sp], #144
  413920:	ret
  413924:	cmp	x20, #0x10c
  413928:	b.eq	414058 <wcrtomb@plt+0x11738>  // b.none
  41392c:	b.le	4139b0 <wcrtomb@plt+0x11090>
  413930:	cmp	x20, #0x10d
  413934:	b.ne	413b80 <wcrtomb@plt+0x11260>  // b.any
  413938:	mov	x0, #0x30                  	// #48
  41393c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  413940:	mov	x21, x0
  413944:	mov	x0, #0x8                   	// #8
  413948:	bl	41b698 <wcrtomb@plt+0x18d78>
  41394c:	mov	x1, x0
  413950:	mov	w2, #0x1                   	// #1
  413954:	mov	x0, #0x2                   	// #2
  413958:	str	x1, [x21]
  41395c:	add	x20, x22, x0
  413960:	str	w2, [sp, #136]
  413964:	add	x22, x22, #0x1
  413968:	bl	41b698 <wcrtomb@plt+0x18d78>
  41396c:	mov	x1, x0
  413970:	str	x1, [x21, #8]
  413974:	mov	x0, #0x2                   	// #2
  413978:	bl	41b698 <wcrtomb@plt+0x18d78>
  41397c:	mov	x1, x0
  413980:	str	x1, [x21, #16]
  413984:	mov	x0, #0x2                   	// #2
  413988:	bl	41b698 <wcrtomb@plt+0x18d78>
  41398c:	str	x0, [x21, #24]
  413990:	ldr	x26, [x25, #152]
  413994:	mov	w1, #0x100                 	// #256
  413998:	strh	w1, [x21, #32]
  41399c:	str	x19, [x21, #40]
  4139a0:	cmp	x26, x20
  4139a4:	mov	x19, x21
  4139a8:	b.gt	413720 <wcrtomb@plt+0x10e00>
  4139ac:	b	4138a8 <wcrtomb@plt+0x10f88>
  4139b0:	cmp	x20, #0x106
  4139b4:	b.ne	413c50 <wcrtomb@plt+0x11330>  // b.any
  4139b8:	ldr	x21, [x19, #40]
  4139bc:	str	x21, [sp, #112]
  4139c0:	ldr	x1, [x19, #24]
  4139c4:	ldr	x20, [x21, #24]
  4139c8:	mov	x0, x20
  4139cc:	bl	402690 <strcmp@plt>
  4139d0:	cbz	w0, 413ccc <wcrtomb@plt+0x113ac>
  4139d4:	mov	x0, x21
  4139d8:	strb	wzr, [x20]
  4139dc:	strh	wzr, [x21, #32]
  4139e0:	ldr	x2, [x0, #8]
  4139e4:	ldrb	w0, [x2]
  4139e8:	cbz	w0, 413a0c <wcrtomb@plt+0x110ec>
  4139ec:	ldr	x1, [x19, #8]
  4139f0:	b	413a00 <wcrtomb@plt+0x110e0>
  4139f4:	ldrb	w0, [x2, #1]!
  4139f8:	add	x1, x1, #0x1
  4139fc:	cbz	w0, 413a0c <wcrtomb@plt+0x110ec>
  413a00:	ldrb	w3, [x1]
  413a04:	cmp	w3, w0
  413a08:	b.eq	4139f4 <wcrtomb@plt+0x110d4>  // b.none
  413a0c:	ldr	x0, [sp, #112]
  413a10:	strb	wzr, [x2]
  413a14:	ldr	x21, [x0, #16]
  413a18:	mov	x0, x21
  413a1c:	bl	402300 <strlen@plt>
  413a20:	ldr	x20, [x19, #16]
  413a24:	mov	x23, x0
  413a28:	mov	x0, x20
  413a2c:	bl	402300 <strlen@plt>
  413a30:	cmp	x0, x23
  413a34:	csel	x6, x0, x23, le
  413a38:	cbz	x6, 413abc <wcrtomb@plt+0x1119c>
  413a3c:	sub	x5, x0, x23
  413a40:	mov	x1, x23
  413a44:	sub	x5, x5, #0x1
  413a48:	sub	x7, x21, #0x1
  413a4c:	add	x5, x20, x5
  413a50:	mov	x2, #0x0                   	// #0
  413a54:	b	413a68 <wcrtomb@plt+0x11148>
  413a58:	add	x2, x2, #0x1
  413a5c:	sub	x1, x1, #0x1
  413a60:	cmp	x6, x2
  413a64:	b.eq	4140d0 <wcrtomb@plt+0x117b0>  // b.none
  413a68:	ldrb	w4, [x7, x1]
  413a6c:	ldrb	w3, [x5, x1]
  413a70:	cmp	w4, w3
  413a74:	b.eq	413a58 <wcrtomb@plt+0x11138>  // b.none
  413a78:	cbz	x2, 413abc <wcrtomb@plt+0x1119c>
  413a7c:	ldrb	w0, [x21, x1]
  413a80:	cmp	x2, #0x1
  413a84:	strb	w0, [x21]
  413a88:	mov	x0, #0x1                   	// #1
  413a8c:	b.eq	413ab0 <wcrtomb@plt+0x11190>  // b.none
  413a90:	ldr	x3, [sp, #112]
  413a94:	ldr	x3, [x3, #16]
  413a98:	add	x4, x3, x0
  413a9c:	ldrb	w4, [x4, x1]
  413aa0:	strb	w4, [x3, x0]
  413aa4:	add	x0, x0, #0x1
  413aa8:	cmp	x2, x0
  413aac:	b.ne	413a90 <wcrtomb@plt+0x11170>  // b.any
  413ab0:	ldr	x0, [sp, #112]
  413ab4:	ldr	x21, [x0, #16]
  413ab8:	add	x21, x21, x2
  413abc:	ldr	x1, [sp, #112]
  413ac0:	strb	wzr, [x21]
  413ac4:	mov	x0, #0x8                   	// #8
  413ac8:	ldr	x24, [x1]
  413acc:	ldr	x1, [x19]
  413ad0:	str	x1, [sp, #120]
  413ad4:	bl	41b698 <wcrtomb@plt+0x18d78>
  413ad8:	mov	x20, x0
  413adc:	ldr	x28, [x24]
  413ae0:	cbz	x28, 413d7c <wcrtomb@plt+0x1145c>
  413ae4:	nop
  413ae8:	ldr	x0, [sp, #120]
  413aec:	ldr	x21, [x0]
  413af0:	cbz	x21, 413d74 <wcrtomb@plt+0x11454>
  413af4:	add	x23, x0, #0x8
  413af8:	mov	x0, #0x8                   	// #8
  413afc:	bl	41b698 <wcrtomb@plt+0x18d78>
  413b00:	ldrb	w26, [x28]
  413b04:	mov	x27, x0
  413b08:	cbz	w26, 413d10 <wcrtomb@plt+0x113f0>
  413b0c:	nop
  413b10:	mov	w1, w26
  413b14:	mov	x0, x21
  413b18:	bl	4026e0 <strchr@plt>
  413b1c:	mov	w1, w26
  413b20:	mov	x2, #0x0                   	// #0
  413b24:	ldrb	w26, [x28, #1]
  413b28:	cbnz	x0, 413b58 <wcrtomb@plt+0x11238>
  413b2c:	b	413d08 <wcrtomb@plt+0x113e8>
  413b30:	cmp	x2, x6
  413b34:	add	x0, x0, #0x1
  413b38:	csel	x2, x2, x6, ge  // ge = tcont
  413b3c:	str	x2, [sp, #96]
  413b40:	str	w1, [sp, #96]
  413b44:	str	x2, [sp, #104]
  413b48:	bl	4026e0 <strchr@plt>
  413b4c:	ldr	w1, [sp, #96]
  413b50:	ldr	x2, [sp, #104]
  413b54:	cbz	x0, 413cf4 <wcrtomb@plt+0x113d4>
  413b58:	mov	w7, w26
  413b5c:	mov	x6, #0x1                   	// #1
  413b60:	cbz	w26, 413b30 <wcrtomb@plt+0x11210>
  413b64:	ldrb	w8, [x0, x6]
  413b68:	cmp	w8, w7
  413b6c:	b.ne	413b30 <wcrtomb@plt+0x11210>  // b.any
  413b70:	add	x6, x6, #0x1
  413b74:	ldrb	w7, [x28, x6]
  413b78:	cbnz	w7, 413b64 <wcrtomb@plt+0x11244>
  413b7c:	b	413b30 <wcrtomb@plt+0x11210>
  413b80:	sub	x0, x20, #0x10e
  413b84:	cmp	x0, #0x5
  413b88:	b.ls	413c60 <wcrtomb@plt+0x11340>  // b.plast
  413b8c:	cmp	x20, #0x113
  413b90:	b.le	413e18 <wcrtomb@plt+0x114f8>
  413b94:	ldr	x2, [x25]
  413b98:	mov	x0, #0xffffffffffffdd80    	// #-8832
  413b9c:	add	x20, x0, x20, lsl #5
  413ba0:	mov	w21, #0x0                   	// #0
  413ba4:	add	x24, x2, x20
  413ba8:	b	413bb4 <wcrtomb@plt+0x11294>
  413bac:	cmp	w21, #0x100
  413bb0:	b.eq	413c60 <wcrtomb@plt+0x11340>  // b.none
  413bb4:	sxtw	x20, w21
  413bb8:	mov	w1, w21
  413bbc:	add	w21, w21, #0x1
  413bc0:	lsr	w0, w20, #6
  413bc4:	ldr	x0, [x24, x0, lsl #3]
  413bc8:	lsr	x0, x0, x20
  413bcc:	tbz	w0, #0, 413bac <wcrtomb@plt+0x1128c>
  413bd0:	cmp	w21, #0x100
  413bd4:	b.eq	413e18 <wcrtomb@plt+0x114f8>  // b.none
  413bd8:	lsl	x0, x20, #2
  413bdc:	str	x0, [sp, #104]
  413be0:	ldr	w0, [sp, #140]
  413be4:	sbfiz	x28, x21, #2, #32
  413be8:	cbnz	w0, 413bf4 <wcrtomb@plt+0x112d4>
  413bec:	b	414260 <wcrtomb@plt+0x11940>
  413bf0:	mov	w21, w0
  413bf4:	lsr	w0, w21, #6
  413bf8:	str	w1, [sp, #96]
  413bfc:	ldr	x0, [x24, x0, lsl #3]
  413c00:	lsr	x0, x0, x21
  413c04:	tbz	w0, #0, 413c38 <wcrtomb@plt+0x11318>
  413c08:	bl	402560 <__ctype_toupper_loc@plt>
  413c0c:	ldr	w1, [sp, #96]
  413c10:	mov	w4, w21
  413c14:	ldr	x0, [x0]
  413c18:	add	w1, w1, #0x81
  413c1c:	cmp	w1, #0x17f
  413c20:	b.hi	413c28 <wcrtomb@plt+0x11308>  // b.pmore
  413c24:	ldr	w4, [x0, x28]
  413c28:	ldr	x1, [sp, #104]
  413c2c:	ldr	w0, [x0, x1]
  413c30:	cmp	w4, w0
  413c34:	b.ne	413c60 <wcrtomb@plt+0x11340>  // b.any
  413c38:	add	x28, x28, #0x4
  413c3c:	cmp	w21, #0xff
  413c40:	add	w0, w21, #0x1
  413c44:	mov	w1, w21
  413c48:	b.ne	413bf0 <wcrtomb@plt+0x112d0>  // b.any
  413c4c:	b	413e18 <wcrtomb@plt+0x114f8>
  413c50:	cmp	x20, #0x108
  413c54:	b.le	414330 <wcrtomb@plt+0x11a10>
  413c58:	cmp	x20, #0x10a
  413c5c:	b.ne	413e18 <wcrtomb@plt+0x114f8>  // b.any
  413c60:	mov	x0, #0x30                  	// #48
  413c64:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  413c68:	mov	x21, x0
  413c6c:	mov	x0, #0x8                   	// #8
  413c70:	bl	41b698 <wcrtomb@plt+0x18d78>
  413c74:	mov	x1, x0
  413c78:	mov	x0, #0x2                   	// #2
  413c7c:	add	x20, x22, x0
  413c80:	str	x1, [x21]
  413c84:	add	x22, x22, #0x1
  413c88:	bl	41b698 <wcrtomb@plt+0x18d78>
  413c8c:	mov	x1, x0
  413c90:	str	x1, [x21, #8]
  413c94:	mov	x0, #0x2                   	// #2
  413c98:	bl	41b698 <wcrtomb@plt+0x18d78>
  413c9c:	mov	x1, x0
  413ca0:	str	x1, [x21, #16]
  413ca4:	mov	x0, #0x2                   	// #2
  413ca8:	bl	41b698 <wcrtomb@plt+0x18d78>
  413cac:	str	x0, [x21, #24]
  413cb0:	ldr	x26, [x25, #152]
  413cb4:	strh	wzr, [x21, #32]
  413cb8:	str	x19, [x21, #40]
  413cbc:	mov	x19, x21
  413cc0:	cmp	x26, x20
  413cc4:	b.gt	413720 <wcrtomb@plt+0x10e00>
  413cc8:	b	4138a8 <wcrtomb@plt+0x10f88>
  413ccc:	ldrb	w2, [x19, #33]
  413cd0:	ldrb	w0, [x21, #33]
  413cd4:	ldrb	w3, [x19, #32]
  413cd8:	ldrb	w1, [x21, #32]
  413cdc:	and	w0, w0, w2
  413ce0:	strb	w0, [x21, #33]
  413ce4:	mov	x0, x21
  413ce8:	and	w1, w1, w3
  413cec:	strb	w1, [x21, #32]
  413cf0:	b	4139e0 <wcrtomb@plt+0x110c0>
  413cf4:	mov	x0, x27
  413cf8:	mov	x1, x28
  413cfc:	bl	40d570 <wcrtomb@plt+0xac50>
  413d00:	ldrb	w26, [x28, #1]
  413d04:	mov	x27, x0
  413d08:	add	x28, x28, #0x1
  413d0c:	cbnz	w26, 413b10 <wcrtomb@plt+0x111f0>
  413d10:	ldr	x21, [x27]
  413d14:	cbz	x21, 413d5c <wcrtomb@plt+0x1143c>
  413d18:	mov	x28, x27
  413d1c:	nop
  413d20:	mov	x0, x21
  413d24:	bl	402300 <strlen@plt>
  413d28:	mov	x1, x21
  413d2c:	mov	x2, x0
  413d30:	mov	x0, x20
  413d34:	bl	40d570 <wcrtomb@plt+0xac50>
  413d38:	ldr	x21, [x28, #8]!
  413d3c:	mov	x20, x0
  413d40:	cbnz	x21, 413d20 <wcrtomb@plt+0x11400>
  413d44:	ldr	x0, [x27]
  413d48:	cbz	x0, 413d5c <wcrtomb@plt+0x1143c>
  413d4c:	mov	x21, x27
  413d50:	bl	4026b0 <free@plt>
  413d54:	ldr	x0, [x21, #8]!
  413d58:	cbnz	x0, 413d50 <wcrtomb@plt+0x11430>
  413d5c:	mov	x0, x27
  413d60:	bl	4026b0 <free@plt>
  413d64:	ldr	x21, [x23], #8
  413d68:	cbz	x21, 413d74 <wcrtomb@plt+0x11454>
  413d6c:	ldr	x28, [x24]
  413d70:	b	413af8 <wcrtomb@plt+0x111d8>
  413d74:	ldr	x28, [x24, #8]!
  413d78:	cbnz	x28, 413ae8 <wcrtomb@plt+0x111c8>
  413d7c:	ldr	x0, [sp, #112]
  413d80:	ldr	x21, [x0]
  413d84:	ldr	x0, [x21]
  413d88:	cbz	x0, 413da4 <wcrtomb@plt+0x11484>
  413d8c:	nop
  413d90:	bl	4026b0 <free@plt>
  413d94:	ldr	x0, [x21, #8]!
  413d98:	cbnz	x0, 413d90 <wcrtomb@plt+0x11470>
  413d9c:	ldr	x0, [sp, #112]
  413da0:	ldr	x21, [x0]
  413da4:	mov	x0, x21
  413da8:	bl	4026b0 <free@plt>
  413dac:	ldr	x0, [sp, #112]
  413db0:	str	x20, [x0]
  413db4:	ldr	x20, [x19]
  413db8:	ldr	x0, [x20]
  413dbc:	cbz	x0, 413dd0 <wcrtomb@plt+0x114b0>
  413dc0:	bl	4026b0 <free@plt>
  413dc4:	ldr	x0, [x20, #8]!
  413dc8:	cbnz	x0, 413dc0 <wcrtomb@plt+0x114a0>
  413dcc:	ldr	x20, [x19]
  413dd0:	mov	x0, x20
  413dd4:	bl	4026b0 <free@plt>
  413dd8:	add	x20, x22, #0x2
  413ddc:	ldr	x0, [x19, #8]
  413de0:	add	x22, x22, #0x1
  413de4:	bl	4026b0 <free@plt>
  413de8:	ldr	x0, [x19, #16]
  413dec:	bl	4026b0 <free@plt>
  413df0:	ldr	x0, [x19, #24]
  413df4:	bl	4026b0 <free@plt>
  413df8:	mov	x0, x19
  413dfc:	ldr	x19, [sp, #112]
  413e00:	bl	4026b0 <free@plt>
  413e04:	ldr	x26, [x25, #152]
  413e08:	cmp	x26, x20
  413e0c:	b.gt	413720 <wcrtomb@plt+0x10e00>
  413e10:	b	4138a8 <wcrtomb@plt+0x10f88>
  413e14:	mov	x20, #0x104                 	// #260
  413e18:	add	x0, x27, x23
  413e1c:	add	x3, x22, #0x2
  413e20:	mov	x24, x3
  413e24:	mov	x28, #0x2                   	// #2
  413e28:	ldr	x0, [x0, #8]
  413e2c:	cmp	x0, #0x105
  413e30:	b.eq	4142c4 <wcrtomb@plt+0x119a4>  // b.none
  413e34:	mov	x0, #0x30                  	// #48
  413e38:	str	x3, [sp, #96]
  413e3c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  413e40:	mov	x21, x0
  413e44:	mov	x0, #0x8                   	// #8
  413e48:	bl	41b698 <wcrtomb@plt+0x18d78>
  413e4c:	mov	x2, x0
  413e50:	mov	x0, x28
  413e54:	str	x2, [x21]
  413e58:	bl	41b698 <wcrtomb@plt+0x18d78>
  413e5c:	mov	x2, x0
  413e60:	str	x2, [x21, #8]
  413e64:	mov	x0, x28
  413e68:	bl	41b698 <wcrtomb@plt+0x18d78>
  413e6c:	mov	x2, x0
  413e70:	str	x2, [x21, #16]
  413e74:	mov	x0, x28
  413e78:	bl	41b698 <wcrtomb@plt+0x18d78>
  413e7c:	str	x0, [x21, #24]
  413e80:	ldr	w0, [sp, #140]
  413e84:	strh	wzr, [x21, #32]
  413e88:	str	x19, [x21, #40]
  413e8c:	ldr	x3, [sp, #96]
  413e90:	cbnz	w0, 4140d8 <wcrtomb@plt+0x117b8>
  413e94:	ldr	x0, [x21, #16]
  413e98:	and	w20, w20, #0xff
  413e9c:	cmp	x24, x3
  413ea0:	strb	w20, [x0]
  413ea4:	ldr	x0, [x21, #8]
  413ea8:	strb	w20, [x0]
  413eac:	ldr	x0, [x21, #24]
  413eb0:	strb	w20, [x0]
  413eb4:	b.le	414318 <wcrtomb@plt+0x119f8>
  413eb8:	sub	x5, x24, x22
  413ebc:	add	x23, x23, #0x10
  413ec0:	sub	x5, x5, #0x3
  413ec4:	mov	x0, #0x1                   	// #1
  413ec8:	lsr	x5, x5, #1
  413ecc:	add	x2, x5, #0x2
  413ed0:	ldr	x1, [x25, #144]
  413ed4:	ldr	x4, [x21, #16]
  413ed8:	ldrb	w1, [x1, x23]
  413edc:	add	x23, x23, #0x10
  413ee0:	strb	w1, [x4, x0]
  413ee4:	ldr	x4, [x21, #8]
  413ee8:	strb	w1, [x4, x0]
  413eec:	ldr	x4, [x21, #24]
  413ef0:	strb	w1, [x4, x0]
  413ef4:	add	x0, x0, #0x1
  413ef8:	cmp	x2, x0
  413efc:	b.ne	413ed0 <wcrtomb@plt+0x115b0>  // b.any
  413f00:	lsl	x0, x5, #1
  413f04:	add	x20, x22, #0x4
  413f08:	add	x20, x20, x0
  413f0c:	add	x22, x3, x0
  413f10:	mov	x0, x2
  413f14:	ldr	x1, [x21, #16]
  413f18:	mov	x19, x21
  413f1c:	add	x22, x22, #0x1
  413f20:	strb	wzr, [x1, x0]
  413f24:	ldr	x1, [x21, #8]
  413f28:	strb	wzr, [x1, x0]
  413f2c:	ldr	x1, [x21, #24]
  413f30:	strb	wzr, [x1, x0]
  413f34:	ldr	x0, [x21]
  413f38:	ldr	x1, [x21, #24]
  413f3c:	bl	40d570 <wcrtomb@plt+0xac50>
  413f40:	str	x0, [x21]
  413f44:	ldr	x26, [x25, #152]
  413f48:	cmp	x26, x20
  413f4c:	b.gt	413720 <wcrtomb@plt+0x10e00>
  413f50:	b	4138a8 <wcrtomb@plt+0x10f88>
  413f54:	ldr	x24, [x19, #24]
  413f58:	ldrb	w0, [x24]
  413f5c:	cbnz	w0, 413f68 <wcrtomb@plt+0x11648>
  413f60:	ldrb	w0, [x19, #33]
  413f64:	cbz	w0, 413808 <wcrtomb@plt+0x10ee8>
  413f68:	mov	x0, x24
  413f6c:	bl	402300 <strlen@plt>
  413f70:	mov	x20, x0
  413f74:	cbnz	x0, 4141b4 <wcrtomb@plt+0x11894>
  413f78:	ldrb	w0, [x19, #33]
  413f7c:	str	x21, [x23, #24]
  413f80:	strb	w0, [x23, #33]
  413f84:	b	413810 <wcrtomb@plt+0x10ef0>
  413f88:	ldr	x0, [x19, #40]
  413f8c:	cbnz	x0, 41435c <wcrtomb@plt+0x11a3c>
  413f90:	ldr	x24, [x19]
  413f94:	ldr	x23, [x19, #24]
  413f98:	ldr	x22, [x24]
  413f9c:	cbz	x22, 414024 <wcrtomb@plt+0x11704>
  413fa0:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x12510>
  413fa4:	add	x24, x24, #0x8
  413fa8:	add	x21, x21, #0xbe0
  413fac:	mov	x20, #0x0                   	// #0
  413fb0:	mov	x0, x22
  413fb4:	bl	402300 <strlen@plt>
  413fb8:	cmp	x0, x20
  413fbc:	csel	x21, x22, x21, hi  // hi = pmore
  413fc0:	csel	x1, x0, x20, hi  // hi = pmore
  413fc4:	ldr	x22, [x24], #8
  413fc8:	mov	x20, x1
  413fcc:	cbnz	x22, 413fb0 <wcrtomb@plt+0x11690>
  413fd0:	mov	x1, x23
  413fd4:	mov	x0, x21
  413fd8:	bl	402690 <strcmp@plt>
  413fdc:	ldrb	w1, [x21]
  413fe0:	cbz	w0, 414038 <wcrtomb@plt+0x11718>
  413fe4:	mov	w20, #0x0                   	// #0
  413fe8:	mov	w23, #0x0                   	// #0
  413fec:	mov	w24, #0x0                   	// #0
  413ff0:	cbz	w1, 414354 <wcrtomb@plt+0x11a34>
  413ff4:	mov	x0, x21
  413ff8:	bl	402300 <strlen@plt>
  413ffc:	add	x0, x0, #0x4
  414000:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  414004:	mov	x22, x0
  414008:	mov	x1, x21
  41400c:	add	x0, x0, #0x3
  414010:	strb	w24, [x22]
  414014:	strb	w23, [x22, #1]
  414018:	strb	w20, [x22, #2]
  41401c:	bl	402730 <strcpy@plt>
  414020:	b	4138b0 <wcrtomb@plt+0x10f90>
  414024:	ldrb	w1, [x23]
  414028:	cbnz	w1, 4138b0 <wcrtomb@plt+0x10f90>
  41402c:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x12510>
  414030:	add	x21, x21, #0xbe0
  414034:	nop
  414038:	ldr	w0, [sp, #132]
  41403c:	ldrb	w23, [x19, #32]
  414040:	ldrb	w20, [x19, #33]
  414044:	cbnz	w0, 4141a8 <wcrtomb@plt+0x11888>
  414048:	ldr	w0, [sp, #136]
  41404c:	cmp	w0, #0x0
  414050:	csinc	w24, w20, wzr, ne  // ne = any
  414054:	b	413ff0 <wcrtomb@plt+0x116d0>
  414058:	mov	x0, #0x30                  	// #48
  41405c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  414060:	mov	x21, x0
  414064:	mov	x0, #0x8                   	// #8
  414068:	bl	41b698 <wcrtomb@plt+0x18d78>
  41406c:	mov	x1, x0
  414070:	mov	w2, #0x1                   	// #1
  414074:	mov	x0, #0x2                   	// #2
  414078:	str	x1, [x21]
  41407c:	add	x20, x22, x0
  414080:	str	w2, [sp, #132]
  414084:	add	x22, x22, #0x1
  414088:	bl	41b698 <wcrtomb@plt+0x18d78>
  41408c:	mov	x1, x0
  414090:	str	x1, [x21, #8]
  414094:	mov	x0, #0x2                   	// #2
  414098:	bl	41b698 <wcrtomb@plt+0x18d78>
  41409c:	mov	x1, x0
  4140a0:	str	x1, [x21, #16]
  4140a4:	mov	x0, #0x2                   	// #2
  4140a8:	bl	41b698 <wcrtomb@plt+0x18d78>
  4140ac:	str	x0, [x21, #24]
  4140b0:	ldr	x26, [x25, #152]
  4140b4:	mov	w1, #0x1                   	// #1
  4140b8:	strh	w1, [x21, #32]
  4140bc:	str	x19, [x21, #40]
  4140c0:	cmp	x26, x20
  4140c4:	mov	x19, x21
  4140c8:	b.gt	413720 <wcrtomb@plt+0x10e00>
  4140cc:	b	4138a8 <wcrtomb@plt+0x10f88>
  4140d0:	sub	x1, x23, x2
  4140d4:	b	413a7c <wcrtomb@plt+0x1115c>
  4140d8:	add	w1, w20, #0x80
  4140dc:	mov	w0, w20
  4140e0:	cmp	w1, #0x17f
  4140e4:	b.hi	4140f8 <wcrtomb@plt+0x117d8>  // b.pmore
  4140e8:	bl	402560 <__ctype_toupper_loc@plt>
  4140ec:	ldr	x0, [x0]
  4140f0:	ldr	x3, [sp, #96]
  4140f4:	ldr	w0, [x0, w20, sxtw #2]
  4140f8:	ldr	x1, [x21, #16]
  4140fc:	and	w0, w0, #0xff
  414100:	cmp	x24, x3
  414104:	strb	w0, [x1]
  414108:	ldr	x1, [x21, #8]
  41410c:	strb	w0, [x1]
  414110:	ldr	x1, [x21, #24]
  414114:	strb	w0, [x1]
  414118:	b.le	414318 <wcrtomb@plt+0x119f8>
  41411c:	sub	x20, x24, x22
  414120:	add	x23, x23, #0x10
  414124:	sub	x20, x20, #0x3
  414128:	mov	x19, #0x1                   	// #1
  41412c:	lsr	x20, x20, #1
  414130:	add	x26, x20, #0x2
  414134:	nop
  414138:	ldr	x0, [x25, #144]
  41413c:	ldr	x24, [x0, x23]
  414140:	add	w1, w24, #0x80
  414144:	mov	w0, w24
  414148:	cmp	w1, #0x17f
  41414c:	b.hi	414164 <wcrtomb@plt+0x11844>  // b.pmore
  414150:	str	x3, [sp, #96]
  414154:	bl	402560 <__ctype_toupper_loc@plt>
  414158:	ldr	x0, [x0]
  41415c:	ldr	x3, [sp, #96]
  414160:	ldr	w0, [x0, w24, sxtw #2]
  414164:	ldr	x1, [x21, #16]
  414168:	and	w0, w0, #0xff
  41416c:	add	x23, x23, #0x10
  414170:	strb	w0, [x1, x19]
  414174:	ldr	x1, [x21, #8]
  414178:	strb	w0, [x1, x19]
  41417c:	ldr	x1, [x21, #24]
  414180:	strb	w0, [x1, x19]
  414184:	add	x19, x19, #0x1
  414188:	cmp	x26, x19
  41418c:	b.ne	414138 <wcrtomb@plt+0x11818>  // b.any
  414190:	lsl	x0, x20, #1
  414194:	add	x20, x22, #0x4
  414198:	add	x20, x20, x0
  41419c:	add	x22, x3, x0
  4141a0:	mov	x2, x26
  4141a4:	b	413f10 <wcrtomb@plt+0x115f0>
  4141a8:	mov	w24, #0x0                   	// #0
  4141ac:	cbz	w23, 413ff0 <wcrtomb@plt+0x116d0>
  4141b0:	b	414048 <wcrtomb@plt+0x11728>
  4141b4:	mov	x0, x21
  4141b8:	bl	402300 <strlen@plt>
  4141bc:	mov	x26, x0
  4141c0:	mov	x0, x21
  4141c4:	add	x1, x26, x20
  4141c8:	add	x1, x1, #0x1
  4141cc:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4141d0:	add	x2, x20, #0x1
  4141d4:	mov	x21, x0
  4141d8:	mov	x1, x24
  4141dc:	add	x0, x0, x26
  4141e0:	bl	4022a0 <memcpy@plt>
  4141e4:	ldrb	w0, [x19, #33]
  4141e8:	str	x21, [x23, #24]
  4141ec:	strb	w0, [x23, #33]
  4141f0:	b	413810 <wcrtomb@plt+0x10ef0>
  4141f4:	bl	402300 <strlen@plt>
  4141f8:	mov	x21, x0
  4141fc:	mov	x0, x20
  414200:	bl	402300 <strlen@plt>
  414204:	add	x26, x21, x0
  414208:	mov	x24, x0
  41420c:	mov	x0, x26
  414210:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  414214:	ldr	x1, [x23, #16]
  414218:	mov	x20, x0
  41421c:	mov	x2, x21
  414220:	bl	4022a0 <memcpy@plt>
  414224:	ldr	x1, [x19, #8]
  414228:	mov	x2, x24
  41422c:	add	x0, x20, x21
  414230:	bl	4022a0 <memcpy@plt>
  414234:	ldr	x0, [x23]
  414238:	mov	x2, x26
  41423c:	mov	x1, x20
  414240:	bl	40d570 <wcrtomb@plt+0xac50>
  414244:	str	x0, [x23]
  414248:	mov	x0, x20
  41424c:	bl	4026b0 <free@plt>
  414250:	b	413788 <wcrtomb@plt+0x10e68>
  414254:	add	w21, w21, #0x1
  414258:	cmp	w21, #0x100
  41425c:	b.eq	413e18 <wcrtomb@plt+0x114f8>  // b.none
  414260:	lsr	w0, w21, #6
  414264:	ldr	x0, [x24, x0, lsl #3]
  414268:	lsr	x0, x0, x21
  41426c:	tbnz	w0, #0, 413c60 <wcrtomb@plt+0x11340>
  414270:	b	414254 <wcrtomb@plt+0x11934>
  414274:	ldr	x24, [x19, #8]
  414278:	mov	x0, x24
  41427c:	bl	402300 <strlen@plt>
  414280:	mov	x20, x0
  414284:	ldr	x21, [x23, #8]
  414288:	cbz	x0, 4142bc <wcrtomb@plt+0x1199c>
  41428c:	mov	x0, x21
  414290:	bl	402300 <strlen@plt>
  414294:	mov	x26, x0
  414298:	mov	x0, x21
  41429c:	add	x1, x26, x20
  4142a0:	add	x1, x1, #0x1
  4142a4:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4142a8:	add	x2, x20, #0x1
  4142ac:	mov	x21, x0
  4142b0:	mov	x1, x24
  4142b4:	add	x0, x0, x26
  4142b8:	bl	4022a0 <memcpy@plt>
  4142bc:	str	x21, [x23, #8]
  4142c0:	b	413794 <wcrtomb@plt+0x10e74>
  4142c4:	sub	x26, x26, #0x1
  4142c8:	cmp	x26, x3
  4142cc:	b.le	413e34 <wcrtomb@plt+0x11514>
  4142d0:	add	x1, x27, #0x8
  4142d4:	b	4142e4 <wcrtomb@plt+0x119c4>
  4142d8:	add	x24, x24, #0x2
  4142dc:	cmp	x26, x24
  4142e0:	b.le	414308 <wcrtomb@plt+0x119e8>
  4142e4:	cmp	x22, x24
  4142e8:	b.eq	4142fc <wcrtomb@plt+0x119dc>  // b.none
  4142ec:	ldr	x0, [x27, x24, lsl #3]
  4142f0:	sub	x0, x0, #0x1
  4142f4:	cmp	x0, #0xfe
  4142f8:	b.hi	414308 <wcrtomb@plt+0x119e8>  // b.pmore
  4142fc:	ldr	x0, [x1, x24, lsl #3]
  414300:	cmp	x0, #0x105
  414304:	b.eq	4142d8 <wcrtomb@plt+0x119b8>  // b.none
  414308:	sub	x1, x24, x22
  41430c:	asr	x1, x1, #1
  414310:	add	x28, x1, #0x1
  414314:	b	413e34 <wcrtomb@plt+0x11514>
  414318:	mov	x0, #0x1                   	// #1
  41431c:	mov	x20, x3
  414320:	mov	x2, x0
  414324:	b	413f14 <wcrtomb@plt+0x115f4>
  414328:	mov	x22, #0x0                   	// #0
  41432c:	b	413910 <wcrtomb@plt+0x10ff0>
  414330:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  414334:	add	x3, x3, #0x818
  414338:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  41433c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  414340:	add	x3, x3, #0x290
  414344:	add	x1, x1, #0x4a0
  414348:	add	x0, x0, #0x5b8
  41434c:	mov	w2, #0xff6                 	// #4086
  414350:	bl	402880 <__assert_fail@plt>
  414354:	mov	x22, #0x0                   	// #0
  414358:	b	4138b0 <wcrtomb@plt+0x10f90>
  41435c:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  414360:	add	x3, x3, #0x818
  414364:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  414368:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  41436c:	add	x3, x3, #0x290
  414370:	add	x1, x1, #0x4a0
  414374:	add	x0, x0, #0x5e8
  414378:	mov	w2, #0x1039                	// #4153
  41437c:	bl	402880 <__assert_fail@plt>
  414380:	b	4026b0 <free@plt>
  414384:	nop
  414388:	mov	x0, #0x920                 	// #2336
  41438c:	b	41b5c0 <wcrtomb@plt+0x18ca0>
  414390:	stp	x29, x30, [sp, #-96]!
  414394:	mov	x29, sp
  414398:	stp	x23, x24, [sp, #48]
  41439c:	mov	x23, x1
  4143a0:	mov	w1, #0x0                   	// #0
  4143a4:	stp	x19, x20, [sp, #16]
  4143a8:	mov	x20, x0
  4143ac:	mov	x19, x2
  4143b0:	mov	x2, #0x410                 	// #1040
  4143b4:	stp	x21, x22, [sp, #32]
  4143b8:	mov	w21, w3
  4143bc:	stp	x25, x26, [sp, #64]
  4143c0:	stp	x27, x28, [sp, #80]
  4143c4:	bl	402510 <memset@plt>
  4143c8:	ldrb	w22, [x23]
  4143cc:	adrp	x2, 40f000 <wcrtomb@plt+0xc6e0>
  4143d0:	adrp	x0, 40e000 <wcrtomb@plt+0xb6e0>
  4143d4:	cmp	w22, #0x0
  4143d8:	add	x2, x2, #0x598
  4143dc:	add	x0, x0, #0xfe8
  4143e0:	mov	x1, x23
  4143e4:	csel	x0, x0, x2, ne  // ne = any
  4143e8:	str	x0, [x20, #1040]
  4143ec:	mov	x2, #0x504                 	// #1284
  4143f0:	add	x0, x20, #0x418
  4143f4:	bl	4022a0 <memcpy@plt>
  4143f8:	str	x19, [x20, #448]
  4143fc:	ldrb	w1, [x20, #1050]
  414400:	tst	x21, #0x2
  414404:	eor	w0, w22, #0x1
  414408:	and	w21, w21, #0x1
  41440c:	ubfx	w2, w19, #22, #1
  414410:	mov	x4, #0xffffffffffffffff    	// #-1
  414414:	mov	w3, #0x1                   	// #1
  414418:	mov	w22, #0xa                   	// #10
  41441c:	csel	w22, wzr, w22, ne  // ne = any
  414420:	str	x4, [x20, #24]
  414424:	strb	w0, [x20, #192]
  414428:	strb	w3, [x20, #456]
  41442c:	strb	w2, [x20, #457]
  414430:	strb	w21, [x20, #458]
  414434:	strb	w22, [x20, #459]
  414438:	cbnz	w1, 414530 <wcrtomb@plt+0x11c10>
  41443c:	sub	x24, x20, x20, lsl #2
  414440:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x12510>
  414444:	sub	x24, x24, #0x214
  414448:	add	x19, x19, #0x5f8
  41444c:	add	x28, x20, #0x1cc
  414450:	add	x23, x20, #0x2cc
  414454:	mov	x25, #0x1                   	// #1
  414458:	mov	x27, #0x0                   	// #0
  41445c:	b	4144c4 <wcrtomb@plt+0x11ba4>
  414460:	bl	4026a0 <__ctype_b_loc@plt>
  414464:	ldr	x5, [x0]
  414468:	lsr	w4, w27, #6
  41446c:	cmp	w27, #0x5f
  414470:	lsl	x6, x25, x27
  414474:	add	x4, x20, x4, lsl #3
  414478:	ldrh	w0, [x5, x27, lsl #1]
  41447c:	and	w0, w0, #0x8
  414480:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  414484:	b.eq	4144e4 <wcrtomb@plt+0x11bc4>  // b.none
  414488:	mov	w0, #0x2                   	// #2
  41448c:	strb	w0, [x28]
  414490:	ldr	x0, [x4, #976]
  414494:	orr	x0, x0, x6
  414498:	str	x0, [x4, #976]
  41449c:	mov	w1, w26
  4144a0:	mov	x0, x19
  4144a4:	bl	4026e0 <strchr@plt>
  4144a8:	cmp	x0, #0x0
  4144ac:	cset	w0, ne  // ne = any
  4144b0:	strb	w0, [x28, #256]
  4144b4:	add	x28, x28, #0x1
  4144b8:	add	x27, x27, #0x1
  4144bc:	cmp	x23, x28
  4144c0:	b.eq	414514 <wcrtomb@plt+0x11bf4>  // b.none
  4144c4:	cmp	w21, #0x0
  4144c8:	and	w0, w27, #0xff
  4144cc:	ccmp	w0, w22, #0x0, eq  // eq = none
  4144d0:	mov	w26, w27
  4144d4:	b.eq	4144f0 <wcrtomb@plt+0x11bd0>  // b.none
  4144d8:	ldr	w0, [x24, x28, lsl #2]
  4144dc:	cmn	w0, #0x1
  4144e0:	b.ne	414460 <wcrtomb@plt+0x11b40>  // b.any
  4144e4:	mov	w0, #0x1                   	// #1
  4144e8:	strb	w0, [x28]
  4144ec:	b	41449c <wcrtomb@plt+0x11b7c>
  4144f0:	lsr	w0, w27, #6
  4144f4:	mov	w1, #0x4                   	// #4
  4144f8:	strb	w1, [x28]
  4144fc:	lsl	x4, x25, x27
  414500:	add	x0, x20, x0, lsl #3
  414504:	ldr	x5, [x0, #1008]
  414508:	orr	x4, x5, x4
  41450c:	str	x4, [x0, #1008]
  414510:	b	41449c <wcrtomb@plt+0x11b7c>
  414514:	ldp	x19, x20, [sp, #16]
  414518:	ldp	x21, x22, [sp, #32]
  41451c:	ldp	x23, x24, [sp, #48]
  414520:	ldp	x25, x26, [sp, #64]
  414524:	ldp	x27, x28, [sp, #80]
  414528:	ldp	x29, x30, [sp], #96
  41452c:	ret
  414530:	sub	x3, x20, x20, lsl #2
  414534:	mov	x25, #0x1                   	// #1
  414538:	sub	x27, x3, #0x214
  41453c:	mov	w26, w25
  414540:	add	x19, x20, #0x1cc
  414544:	add	x24, x20, #0x2cc
  414548:	mov	x23, #0x0                   	// #0
  41454c:	b	4145ac <wcrtomb@plt+0x11c8c>
  414550:	bl	4026a0 <__ctype_b_loc@plt>
  414554:	ldr	x4, [x0]
  414558:	lsr	w2, w23, #6
  41455c:	cmp	w23, #0x5f
  414560:	lsl	x5, x25, x23
  414564:	add	x0, x20, x2, lsl #3
  414568:	ldrh	w2, [x4, x23, lsl #1]
  41456c:	and	w2, w2, #0x8
  414570:	ccmp	w2, #0x0, #0x0, ne  // ne = any
  414574:	b.eq	4145cc <wcrtomb@plt+0x11cac>  // b.none
  414578:	mov	w1, #0x2                   	// #2
  41457c:	strb	w1, [x19]
  414580:	ldr	x2, [x0, #976]
  414584:	orr	x2, x2, x5
  414588:	str	x2, [x0, #976]
  41458c:	and	w1, w28, #0xc0
  414590:	add	x19, x19, #0x1
  414594:	cmp	w1, #0x80
  414598:	add	x23, x23, #0x1
  41459c:	cset	w0, ne  // ne = any
  4145a0:	strb	w0, [x19, #255]
  4145a4:	cmp	x19, x24
  4145a8:	b.eq	414514 <wcrtomb@plt+0x11bf4>  // b.none
  4145ac:	cmp	w21, #0x0
  4145b0:	and	w0, w23, #0xff
  4145b4:	ccmp	w0, w22, #0x0, eq  // eq = none
  4145b8:	mov	w28, w23
  4145bc:	b.eq	4145d4 <wcrtomb@plt+0x11cb4>  // b.none
  4145c0:	ldr	w0, [x27, x19, lsl #2]
  4145c4:	cmn	w0, #0x1
  4145c8:	b.ne	414550 <wcrtomb@plt+0x11c30>  // b.any
  4145cc:	strb	w26, [x19]
  4145d0:	b	41458c <wcrtomb@plt+0x11c6c>
  4145d4:	lsr	w0, w23, #6
  4145d8:	mov	w1, #0x4                   	// #4
  4145dc:	strb	w1, [x19]
  4145e0:	lsl	x2, x25, x23
  4145e4:	add	x0, x20, x0, lsl #3
  4145e8:	ldr	x4, [x0, #1008]
  4145ec:	orr	x2, x4, x2
  4145f0:	str	x2, [x0, #1008]
  4145f4:	b	41458c <wcrtomb@plt+0x11c6c>
  4145f8:	stp	x29, x30, [sp, #-32]!
  4145fc:	mov	x2, #0x1c0                 	// #448
  414600:	mov	x29, sp
  414604:	stp	x19, x20, [sp, #16]
  414608:	mov	x20, x1
  41460c:	mov	x19, x0
  414610:	mov	w1, #0x0                   	// #0
  414614:	bl	402510 <memset@plt>
  414618:	ldrb	w2, [x20, #192]
  41461c:	mov	x0, #0xffffffffffffffff    	// #-1
  414620:	str	x0, [x19, #24]
  414624:	add	x1, x20, #0x1c0
  414628:	strb	w2, [x19, #192]
  41462c:	add	x0, x19, #0x1c0
  414630:	mov	x2, #0x250                 	// #592
  414634:	bl	4022a0 <memcpy@plt>
  414638:	ldr	x0, [x20, #1040]
  41463c:	str	x0, [x19, #1040]
  414640:	add	x1, x20, #0x418
  414644:	add	x0, x19, #0x418
  414648:	mov	x2, #0x504                 	// #1284
  41464c:	bl	4022a0 <memcpy@plt>
  414650:	ldp	x19, x20, [sp, #16]
  414654:	ldp	x29, x30, [sp], #32
  414658:	ret
  41465c:	nop
  414660:	stp	x29, x30, [sp, #-112]!
  414664:	mov	x29, sp
  414668:	stp	x25, x26, [sp, #64]
  41466c:	mov	x26, x0
  414670:	stp	x19, x20, [sp, #16]
  414674:	add	x20, sp, #0x60
  414678:	stp	x21, x22, [sp, #32]
  41467c:	add	x21, sp, #0x68
  414680:	stp	x23, x24, [sp, #48]
  414684:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  414688:	cmp	x0, #0x1
  41468c:	cset	w1, hi  // hi = pmore
  414690:	strb	w1, [x26]
  414694:	b.hi	4146d4 <wcrtomb@plt+0x11db4>  // b.pmore
  414698:	mov	w19, #0x0                   	// #0
  41469c:	b	4146a8 <wcrtomb@plt+0x11d88>
  4146a0:	cmp	w19, #0xff
  4146a4:	b.eq	4147ac <wcrtomb@plt+0x11e8c>  // b.none
  4146a8:	and	w2, w19, #0xff
  4146ac:	mov	x1, x20
  4146b0:	add	w3, w2, #0x1
  4146b4:	add	w19, w19, #0x1
  4146b8:	mov	x0, x21
  4146bc:	strb	w3, [sp, #96]
  4146c0:	strb	wzr, [sp, #97]
  4146c4:	strb	w2, [sp, #104]
  4146c8:	strb	wzr, [sp, #105]
  4146cc:	bl	402810 <strcoll@plt>
  4146d0:	tbnz	w0, #31, 4146a0 <wcrtomb@plt+0x11d80>
  4146d4:	mov	w0, #0x0                   	// #0
  4146d8:	strb	w0, [x26, #1]
  4146dc:	mov	x3, x21
  4146e0:	mov	x0, x20
  4146e4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4146e8:	mov	x2, #0x2                   	// #2
  4146ec:	add	x1, x1, #0xae0
  4146f0:	str	xzr, [sp, #104]
  4146f4:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  4146f8:	mov	w1, #0x0                   	// #0
  4146fc:	cmp	x0, #0x2
  414700:	b.ne	414710 <wcrtomb@plt+0x11df0>  // b.any
  414704:	ldr	w0, [sp, #96]
  414708:	cmp	w0, #0x100
  41470c:	cset	w1, eq  // eq = none
  414710:	add	x23, x26, #0x3
  414714:	add	x24, x26, #0x104
  414718:	mov	x19, #0x0                   	// #0
  41471c:	mov	x22, #0x1                   	// #1
  414720:	mov	w25, #0xffffffff            	// #-1
  414724:	strb	w1, [x26, #2]
  414728:	add	x1, sp, #0x5f
  41472c:	mov	x3, x21
  414730:	mov	x0, x20
  414734:	mov	x2, #0x1                   	// #1
  414738:	strb	w19, [sp, #95]
  41473c:	str	xzr, [sp, #104]
  414740:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  414744:	cmp	x0, #0x0
  414748:	csel	x1, x0, x22, ne  // ne = any
  41474c:	strb	w1, [x23, x19]
  414750:	cmp	x0, #0x1
  414754:	b.ls	414780 <wcrtomb@plt+0x11e60>  // b.plast
  414758:	str	w25, [x24, x19, lsl #2]
  41475c:	add	x19, x19, #0x1
  414760:	cmp	x19, #0x100
  414764:	b.ne	414728 <wcrtomb@plt+0x11e08>  // b.any
  414768:	ldp	x19, x20, [sp, #16]
  41476c:	ldp	x21, x22, [sp, #32]
  414770:	ldp	x23, x24, [sp, #48]
  414774:	ldp	x25, x26, [sp, #64]
  414778:	ldp	x29, x30, [sp], #112
  41477c:	ret
  414780:	ldr	w0, [sp, #96]
  414784:	str	w0, [x24, x19, lsl #2]
  414788:	add	x19, x19, #0x1
  41478c:	cmp	x19, #0x100
  414790:	b.ne	414728 <wcrtomb@plt+0x11e08>  // b.any
  414794:	ldp	x19, x20, [sp, #16]
  414798:	ldp	x21, x22, [sp, #32]
  41479c:	ldp	x23, x24, [sp, #48]
  4147a0:	ldp	x25, x26, [sp, #64]
  4147a4:	ldp	x29, x30, [sp], #112
  4147a8:	ret
  4147ac:	mov	w0, #0x1                   	// #1
  4147b0:	b	4146d8 <wcrtomb@plt+0x11db8>
  4147b4:	nop
  4147b8:	stp	x29, x30, [sp, #-80]!
  4147bc:	mov	x29, sp
  4147c0:	stp	x19, x20, [sp, #16]
  4147c4:	stp	x21, x22, [sp, #32]
  4147c8:	stp	x23, x24, [sp, #48]
  4147cc:	mov	x24, x1
  4147d0:	mov	w23, w0
  4147d4:	stp	x25, x26, [sp, #64]
  4147d8:	bl	402830 <towupper@plt>
  4147dc:	mov	w21, w0
  4147e0:	bl	4028c0 <towlower@plt>
  4147e4:	mov	w22, w0
  4147e8:	cmp	w23, w21
  4147ec:	b.eq	414888 <wcrtomb@plt+0x11f68>  // b.none
  4147f0:	mov	w20, #0x2                   	// #2
  4147f4:	mov	x19, #0x4                   	// #4
  4147f8:	mov	w26, #0x1                   	// #1
  4147fc:	str	w21, [x24]
  414800:	cmp	w21, w22
  414804:	ccmp	w23, w22, #0x4, ne  // ne = any
  414808:	b.eq	41481c <wcrtomb@plt+0x11efc>  // b.none
  41480c:	mov	w0, w22
  414810:	bl	402830 <towupper@plt>
  414814:	cmp	w0, w21
  414818:	b.eq	414898 <wcrtomb@plt+0x11f78>  // b.none
  41481c:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x12510>
  414820:	add	x20, x20, #0xaf0
  414824:	add	x25, x20, #0x26
  414828:	b	414834 <wcrtomb@plt+0x11f14>
  41482c:	cmp	x25, x20
  414830:	b.eq	41486c <wcrtomb@plt+0x11f4c>  // b.none
  414834:	ldrsh	w19, [x20]
  414838:	add	x20, x20, #0x2
  41483c:	cmp	w22, w19
  414840:	ccmp	w21, w19, #0x4, ne  // ne = any
  414844:	ccmp	w23, w19, #0x4, ne  // ne = any
  414848:	b.eq	41482c <wcrtomb@plt+0x11f0c>  // b.none
  41484c:	mov	w0, w19
  414850:	bl	402830 <towupper@plt>
  414854:	cmp	w0, w21
  414858:	b.ne	41482c <wcrtomb@plt+0x11f0c>  // b.any
  41485c:	str	w19, [x24, w26, sxtw #2]
  414860:	cmp	x25, x20
  414864:	add	w26, w26, #0x1
  414868:	b.ne	414834 <wcrtomb@plt+0x11f14>  // b.any
  41486c:	mov	w0, w26
  414870:	ldp	x19, x20, [sp, #16]
  414874:	ldp	x21, x22, [sp, #32]
  414878:	ldp	x23, x24, [sp, #48]
  41487c:	ldp	x25, x26, [sp, #64]
  414880:	ldp	x29, x30, [sp], #80
  414884:	ret
  414888:	mov	w20, #0x1                   	// #1
  41488c:	mov	x19, #0x0                   	// #0
  414890:	mov	w26, #0x0                   	// #0
  414894:	b	414800 <wcrtomb@plt+0x11ee0>
  414898:	mov	w26, w20
  41489c:	str	w22, [x24, x19]
  4148a0:	b	41481c <wcrtomb@plt+0x11efc>
  4148a4:	nop
  4148a8:	stp	x29, x30, [sp, #-32]!
  4148ac:	mov	x29, sp
  4148b0:	str	x19, [sp, #16]
  4148b4:	mov	x19, x0
  4148b8:	bl	42ebb0 <_obstack_memory_used@@Base+0x100c0>
  4148bc:	ldrb	w1, [x0]
  4148c0:	cmp	w1, #0x0
  4148c4:	csel	x19, x19, x0, eq  // eq = none
  4148c8:	mov	x0, x19
  4148cc:	bl	42ec08 <_obstack_memory_used@@Base+0x10118>
  4148d0:	ldrb	w1, [x19, x0]
  4148d4:	strb	wzr, [x19, x0]
  4148d8:	cmp	w1, #0x0
  4148dc:	cset	w0, ne  // ne = any
  4148e0:	ldr	x19, [sp, #16]
  4148e4:	ldp	x29, x30, [sp], #32
  4148e8:	ret
  4148ec:	nop
  4148f0:	b	4026b0 <free@plt>
  4148f4:	nop
  4148f8:	stp	x29, x30, [sp, #-16]!
  4148fc:	mov	x29, sp
  414900:	bl	417050 <wcrtomb@plt+0x14730>
  414904:	cmp	w0, #0x0
  414908:	cset	w0, eq  // eq = none
  41490c:	ldp	x29, x30, [sp], #16
  414910:	ret
  414914:	nop
  414918:	stp	x29, x30, [sp, #-16]!
  41491c:	mov	x29, sp
  414920:	bl	402690 <strcmp@plt>
  414924:	cmp	w0, #0x0
  414928:	cset	w0, eq  // eq = none
  41492c:	ldp	x29, x30, [sp], #16
  414930:	ret
  414934:	nop
  414938:	b	4163b0 <wcrtomb@plt+0x13a90>
  41493c:	nop
  414940:	and	w3, w2, #0x10
  414944:	tbz	w2, #3, 414a1c <wcrtomb@plt+0x120fc>
  414948:	stp	x29, x30, [sp, #-64]!
  41494c:	mov	x29, sp
  414950:	stp	x19, x20, [sp, #16]
  414954:	mov	x19, x1
  414958:	stp	x21, x22, [sp, #32]
  41495c:	mov	x21, x0
  414960:	cbnz	w3, 4149a4 <wcrtomb@plt+0x12084>
  414964:	bl	402300 <strlen@plt>
  414968:	mov	x22, x0
  41496c:	mov	x2, x22
  414970:	mov	x0, x21
  414974:	mov	x1, x19
  414978:	bl	4024c0 <strncmp@plt>
  41497c:	mov	w20, w0
  414980:	cbnz	w0, 414990 <wcrtomb@plt+0x12070>
  414984:	ldrb	w20, [x19, x22]
  414988:	cmp	w20, #0x2f
  41498c:	csel	w20, wzr, w20, eq  // eq = none
  414990:	mov	w0, w20
  414994:	ldp	x19, x20, [sp, #16]
  414998:	ldp	x21, x22, [sp, #32]
  41499c:	ldp	x29, x30, [sp], #64
  4149a0:	ret
  4149a4:	mov	x0, x1
  4149a8:	str	x23, [sp, #48]
  4149ac:	bl	41b738 <wcrtomb@plt+0x18e18>
  4149b0:	mov	w23, #0x2f                  	// #47
  4149b4:	mov	x22, x0
  4149b8:	mov	x19, x0
  4149bc:	b	4149d8 <wcrtomb@plt+0x120b8>
  4149c0:	strb	wzr, [x19]
  4149c4:	bl	417050 <wcrtomb@plt+0x14730>
  4149c8:	mov	w20, w0
  4149cc:	cmp	w0, #0x0
  4149d0:	b.le	4149fc <wcrtomb@plt+0x120dc>
  4149d4:	strb	w23, [x19], #1
  4149d8:	mov	x0, x19
  4149dc:	mov	w1, #0x2f                  	// #47
  4149e0:	bl	4026e0 <strchr@plt>
  4149e4:	mov	x19, x0
  4149e8:	mov	x1, x22
  4149ec:	mov	x0, x21
  4149f0:	cbnz	x19, 4149c0 <wcrtomb@plt+0x120a0>
  4149f4:	bl	417050 <wcrtomb@plt+0x14730>
  4149f8:	mov	w20, w0
  4149fc:	mov	x0, x22
  414a00:	bl	4026b0 <free@plt>
  414a04:	mov	w0, w20
  414a08:	ldp	x19, x20, [sp, #16]
  414a0c:	ldp	x21, x22, [sp, #32]
  414a10:	ldr	x23, [sp, #48]
  414a14:	ldp	x29, x30, [sp], #64
  414a18:	ret
  414a1c:	cbz	w3, 414a24 <wcrtomb@plt+0x12104>
  414a20:	b	417050 <wcrtomb@plt+0x14730>
  414a24:	b	402690 <strcmp@plt>
  414a28:	stp	x29, x30, [sp, #-144]!
  414a2c:	mov	x29, sp
  414a30:	strb	wzr, [sp, #80]
  414a34:	stp	x19, x20, [sp, #16]
  414a38:	mov	x19, x0
  414a3c:	mov	x20, #0x0                   	// #0
  414a40:	str	x0, [sp, #96]
  414a44:	ldrb	w0, [sp, #80]
  414a48:	stp	x21, x22, [sp, #32]
  414a4c:	mov	x21, x1
  414a50:	mov	w22, #0x1                   	// #1
  414a54:	stp	x23, x24, [sp, #48]
  414a58:	adrp	x23, 431000 <_obstack_memory_used@@Base+0x12510>
  414a5c:	add	x24, sp, #0x54
  414a60:	str	x25, [sp, #64]
  414a64:	add	x23, x23, #0xc20
  414a68:	stur	xzr, [sp, #84]
  414a6c:	strb	wzr, [sp, #92]
  414a70:	cbnz	w0, 414ae8 <wcrtomb@plt+0x121c8>
  414a74:	nop
  414a78:	ldrb	w1, [x19]
  414a7c:	ubfx	x0, x1, #5, #3
  414a80:	ldr	w0, [x23, x0, lsl #2]
  414a84:	lsr	w0, w0, w1
  414a88:	tbz	w0, #0, 414b84 <wcrtomb@plt+0x12264>
  414a8c:	mov	x0, #0x1                   	// #1
  414a90:	str	x0, [sp, #104]
  414a94:	ldrb	w25, [x19]
  414a98:	strb	w0, [sp, #92]
  414a9c:	strb	w0, [sp, #112]
  414aa0:	str	w25, [sp, #116]
  414aa4:	cbz	w25, 414b60 <wcrtomb@plt+0x12240>
  414aa8:	ldrb	w0, [sp, #112]
  414aac:	ldr	x19, [sp, #96]
  414ab0:	cbz	w0, 414b7c <wcrtomb@plt+0x1225c>
  414ab4:	mov	w0, w25
  414ab8:	bl	4028c0 <towlower@plt>
  414abc:	lsl	x2, x20, #5
  414ac0:	strb	wzr, [sp, #92]
  414ac4:	sub	x2, x2, x20
  414ac8:	add	x2, x2, w0, uxtw
  414acc:	ldr	x0, [sp, #104]
  414ad0:	udiv	x20, x2, x21
  414ad4:	add	x19, x19, x0
  414ad8:	ldrb	w0, [sp, #80]
  414adc:	str	x19, [sp, #96]
  414ae0:	msub	x20, x20, x21, x2
  414ae4:	cbz	w0, 414a78 <wcrtomb@plt+0x12158>
  414ae8:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  414aec:	mov	x1, x0
  414af0:	mov	x0, x19
  414af4:	bl	41ab50 <wcrtomb@plt+0x18230>
  414af8:	mov	x2, x0
  414afc:	add	x0, sp, #0x50
  414b00:	mov	x1, x19
  414b04:	add	x3, sp, #0x54
  414b08:	add	x0, x0, #0x24
  414b0c:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  414b10:	str	x0, [sp, #104]
  414b14:	cmn	x0, #0x1
  414b18:	b.eq	414b98 <wcrtomb@plt+0x12278>  // b.none
  414b1c:	cmn	x0, #0x2
  414b20:	b.eq	414bb0 <wcrtomb@plt+0x12290>  // b.none
  414b24:	cbnz	x0, 414bcc <wcrtomb@plt+0x122ac>
  414b28:	ldr	x0, [sp, #96]
  414b2c:	mov	x1, #0x1                   	// #1
  414b30:	str	x1, [sp, #104]
  414b34:	ldrb	w0, [x0]
  414b38:	cbnz	w0, 414c14 <wcrtomb@plt+0x122f4>
  414b3c:	ldr	w25, [sp, #116]
  414b40:	cbnz	w25, 414bf4 <wcrtomb@plt+0x122d4>
  414b44:	add	x0, sp, #0x54
  414b48:	strb	w22, [sp, #112]
  414b4c:	bl	402610 <mbsinit@plt>
  414b50:	cbz	w0, 414b58 <wcrtomb@plt+0x12238>
  414b54:	strb	wzr, [sp, #80]
  414b58:	strb	w22, [sp, #92]
  414b5c:	cbnz	w25, 414aa8 <wcrtomb@plt+0x12188>
  414b60:	mov	x0, x20
  414b64:	ldp	x19, x20, [sp, #16]
  414b68:	ldp	x21, x22, [sp, #32]
  414b6c:	ldp	x23, x24, [sp, #48]
  414b70:	ldr	x25, [sp, #64]
  414b74:	ldp	x29, x30, [sp], #144
  414b78:	ret
  414b7c:	ldrb	w0, [x19]
  414b80:	b	414abc <wcrtomb@plt+0x1219c>
  414b84:	mov	x0, x24
  414b88:	bl	402610 <mbsinit@plt>
  414b8c:	cbz	w0, 414bd4 <wcrtomb@plt+0x122b4>
  414b90:	strb	w22, [sp, #80]
  414b94:	b	414ae8 <wcrtomb@plt+0x121c8>
  414b98:	mov	x0, #0x1                   	// #1
  414b9c:	ldr	w25, [sp, #116]
  414ba0:	strb	w0, [sp, #92]
  414ba4:	str	x0, [sp, #104]
  414ba8:	strb	wzr, [sp, #112]
  414bac:	b	414aa8 <wcrtomb@plt+0x12188>
  414bb0:	ldr	x0, [sp, #96]
  414bb4:	bl	402300 <strlen@plt>
  414bb8:	ldr	w25, [sp, #116]
  414bbc:	strb	w22, [sp, #92]
  414bc0:	str	x0, [sp, #104]
  414bc4:	strb	wzr, [sp, #112]
  414bc8:	b	414aa8 <wcrtomb@plt+0x12188>
  414bcc:	ldr	w25, [sp, #116]
  414bd0:	b	414b44 <wcrtomb@plt+0x12224>
  414bd4:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  414bd8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  414bdc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  414be0:	add	x3, x3, #0xb78
  414be4:	add	x1, x1, #0xb18
  414be8:	add	x0, x0, #0xb28
  414bec:	mov	w2, #0x96                  	// #150
  414bf0:	bl	402880 <__assert_fail@plt>
  414bf4:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  414bf8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  414bfc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  414c00:	add	x3, x3, #0xb78
  414c04:	add	x1, x1, #0xb18
  414c08:	add	x0, x0, #0xb58
  414c0c:	mov	w2, #0xb3                  	// #179
  414c10:	bl	402880 <__assert_fail@plt>
  414c14:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  414c18:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  414c1c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  414c20:	add	x3, x3, #0xb78
  414c24:	add	x1, x1, #0xb18
  414c28:	add	x0, x0, #0xb40
  414c2c:	mov	w2, #0xb2                  	// #178
  414c30:	bl	402880 <__assert_fail@plt>
  414c34:	nop
  414c38:	stp	x29, x30, [sp, #-32]!
  414c3c:	mov	x29, sp
  414c40:	stp	x19, x20, [sp, #16]
  414c44:	mov	x19, x0
  414c48:	mov	x20, x1
  414c4c:	mov	x0, #0x10                  	// #16
  414c50:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  414c54:	ldr	x1, [x19, #8]
  414c58:	stp	x1, x20, [x0]
  414c5c:	str	x0, [x19, #8]
  414c60:	ldp	x19, x20, [sp, #16]
  414c64:	ldp	x29, x30, [sp], #32
  414c68:	ret
  414c6c:	nop
  414c70:	ldrb	w2, [x0]
  414c74:	and	w3, w1, #0x8000000
  414c78:	and	w4, w1, #0x2
  414c7c:	tbz	w1, #5, 414cc0 <wcrtomb@plt+0x123a0>
  414c80:	cbz	w4, 414d24 <wcrtomb@plt+0x12404>
  414c84:	cbnz	w3, 415024 <wcrtomb@plt+0x12704>
  414c88:	mov	x4, #0x401                 	// #1025
  414c8c:	mov	x1, #0x200                 	// #512
  414c90:	mov	x5, #0x1                   	// #1
  414c94:	movk	x4, #0x8000, lsl #16
  414c98:	mov	x3, #0x2180                	// #8576
  414c9c:	movk	x1, #0x4000, lsl #16
  414ca0:	add	x0, x0, #0x1
  414ca4:	cmp	w2, #0x40
  414ca8:	b.hi	414d88 <wcrtomb@plt+0x12468>  // b.pmore
  414cac:	cmp	w2, #0x20
  414cb0:	b.hi	414dc4 <wcrtomb@plt+0x124a4>  // b.pmore
  414cb4:	cbnz	w2, 414d94 <wcrtomb@plt+0x12474>
  414cb8:	mov	w0, #0x0                   	// #0
  414cbc:	ret
  414cc0:	cbnz	w3, 414f44 <wcrtomb@plt+0x12624>
  414cc4:	mov	x5, #0x1                   	// #1
  414cc8:	cbz	w4, 414dfc <wcrtomb@plt+0x124dc>
  414ccc:	mov	x3, #0x401                 	// #1025
  414cd0:	mov	x1, #0x200                 	// #512
  414cd4:	add	x0, x0, #0x1
  414cd8:	cmp	w2, #0x40
  414cdc:	mov	x4, #0x2180                	// #8576
  414ce0:	movk	x3, #0x8000, lsl #16
  414ce4:	movk	x1, #0x4000, lsl #16
  414ce8:	b.hi	414d08 <wcrtomb@plt+0x123e8>  // b.pmore
  414cec:	cmp	w2, #0x20
  414cf0:	b.hi	414d9c <wcrtomb@plt+0x1247c>  // b.pmore
  414cf4:	cbz	w2, 414cb8 <wcrtomb@plt+0x12398>
  414cf8:	ldrb	w2, [x0]
  414cfc:	add	x0, x0, #0x1
  414d00:	cmp	w2, #0x40
  414d04:	b.ls	414cec <wcrtomb@plt+0x123cc>  // b.plast
  414d08:	cmp	w2, #0x5c
  414d0c:	b.eq	414cf8 <wcrtomb@plt+0x123d8>  // b.none
  414d10:	b.hi	414cf8 <wcrtomb@plt+0x123d8>  // b.pmore
  414d14:	cmp	w2, #0x5b
  414d18:	b.ne	414cf8 <wcrtomb@plt+0x123d8>  // b.any
  414d1c:	mov	w0, #0x1                   	// #1
  414d20:	ret
  414d24:	cbnz	w3, 414e80 <wcrtomb@plt+0x12560>
  414d28:	mov	x3, #0x401                 	// #1025
  414d2c:	mov	x1, #0x200                 	// #512
  414d30:	mov	x5, #0x1                   	// #1
  414d34:	mov	x4, #0x2180                	// #8576
  414d38:	movk	x3, #0x8000, lsl #16
  414d3c:	movk	x1, #0x4000, lsl #16
  414d40:	cmp	w2, #0x40
  414d44:	add	x7, x0, #0x1
  414d48:	b.hi	414d6c <wcrtomb@plt+0x1244c>  // b.pmore
  414d4c:	cmp	w2, #0x20
  414d50:	b.hi	414eb4 <wcrtomb@plt+0x12594>  // b.pmore
  414d54:	cbz	w2, 414cb8 <wcrtomb@plt+0x12398>
  414d58:	ldrb	w2, [x0, #1]
  414d5c:	mov	x0, x7
  414d60:	cmp	w2, #0x40
  414d64:	add	x7, x0, #0x1
  414d68:	b.ls	414d4c <wcrtomb@plt+0x1242c>  // b.plast
  414d6c:	cmp	w2, #0x5c
  414d70:	b.eq	414ff8 <wcrtomb@plt+0x126d8>  // b.none
  414d74:	b.hi	414d58 <wcrtomb@plt+0x12438>  // b.pmore
  414d78:	cmp	w2, #0x5b
  414d7c:	b.ne	414d58 <wcrtomb@plt+0x12438>  // b.any
  414d80:	mov	w0, #0x1                   	// #1
  414d84:	b	414d20 <wcrtomb@plt+0x12400>
  414d88:	cmp	w2, #0x5c
  414d8c:	b.eq	414d94 <wcrtomb@plt+0x12474>  // b.none
  414d90:	b.ls	414dec <wcrtomb@plt+0x124cc>  // b.plast
  414d94:	ldrb	w2, [x0]
  414d98:	b	414ca0 <wcrtomb@plt+0x12380>
  414d9c:	sub	w2, w2, #0x21
  414da0:	lsl	x2, x5, x2
  414da4:	tst	x2, x4
  414da8:	b.ne	414cf8 <wcrtomb@plt+0x123d8>  // b.any
  414dac:	tst	x2, x3
  414db0:	b.ne	414cf8 <wcrtomb@plt+0x123d8>  // b.any
  414db4:	tst	x2, x1
  414db8:	b.ne	414d1c <wcrtomb@plt+0x123fc>  // b.any
  414dbc:	ldrb	w2, [x0]
  414dc0:	b	414cfc <wcrtomb@plt+0x123dc>
  414dc4:	sub	w2, w2, #0x21
  414dc8:	lsl	x2, x5, x2
  414dcc:	tst	x2, x4
  414dd0:	b.ne	414f30 <wcrtomb@plt+0x12610>  // b.any
  414dd4:	tst	x2, x3
  414dd8:	b.ne	414d94 <wcrtomb@plt+0x12474>  // b.any
  414ddc:	tst	x2, x1
  414de0:	b.ne	414d1c <wcrtomb@plt+0x123fc>  // b.any
  414de4:	ldrb	w2, [x0]
  414de8:	b	414ca0 <wcrtomb@plt+0x12380>
  414dec:	cmp	w2, #0x5b
  414df0:	b.ne	414d94 <wcrtomb@plt+0x12474>  // b.any
  414df4:	mov	w0, #0x1                   	// #1
  414df8:	b	414d20 <wcrtomb@plt+0x12400>
  414dfc:	mov	x4, #0x401                 	// #1025
  414e00:	mov	x1, #0x200                 	// #512
  414e04:	movk	x4, #0x8000, lsl #16
  414e08:	mov	x3, #0x2180                	// #8576
  414e0c:	movk	x1, #0x4000, lsl #16
  414e10:	cmp	w2, #0x40
  414e14:	add	x7, x0, #0x1
  414e18:	b.hi	414e3c <wcrtomb@plt+0x1251c>  // b.pmore
  414e1c:	cmp	w2, #0x20
  414e20:	b.hi	414e58 <wcrtomb@plt+0x12538>  // b.pmore
  414e24:	cbz	w2, 414cb8 <wcrtomb@plt+0x12398>
  414e28:	ldrb	w2, [x0, #1]
  414e2c:	mov	x0, x7
  414e30:	add	x7, x0, #0x1
  414e34:	cmp	w2, #0x40
  414e38:	b.ls	414e1c <wcrtomb@plt+0x124fc>  // b.plast
  414e3c:	cmp	w2, #0x5c
  414e40:	b.eq	414fe0 <wcrtomb@plt+0x126c0>  // b.none
  414e44:	b.hi	414e28 <wcrtomb@plt+0x12508>  // b.pmore
  414e48:	cmp	w2, #0x5b
  414e4c:	b.ne	414e28 <wcrtomb@plt+0x12508>  // b.any
  414e50:	mov	w0, #0x1                   	// #1
  414e54:	b	414d20 <wcrtomb@plt+0x12400>
  414e58:	sub	w2, w2, #0x21
  414e5c:	lsl	x2, x5, x2
  414e60:	tst	x2, x4
  414e64:	b.ne	414e28 <wcrtomb@plt+0x12508>  // b.any
  414e68:	tst	x2, x3
  414e6c:	b.ne	414e28 <wcrtomb@plt+0x12508>  // b.any
  414e70:	tst	x2, x1
  414e74:	b.eq	414e28 <wcrtomb@plt+0x12508>  // b.none
  414e78:	mov	w0, #0x1                   	// #1
  414e7c:	b	414d20 <wcrtomb@plt+0x12400>
  414e80:	mov	x3, #0x401                 	// #1025
  414e84:	mov	x1, #0x2380                	// #9088
  414e88:	mov	x4, #0x1                   	// #1
  414e8c:	movk	x3, #0x8000, lsl #16
  414e90:	movk	x1, #0x4000, lsl #16
  414e94:	add	x0, x0, #0x1
  414e98:	cmp	w2, #0x40
  414e9c:	b.hi	414efc <wcrtomb@plt+0x125dc>  // b.pmore
  414ea0:	cmp	w2, #0x20
  414ea4:	b.hi	414edc <wcrtomb@plt+0x125bc>  // b.pmore
  414ea8:	cbz	w2, 414cb8 <wcrtomb@plt+0x12398>
  414eac:	ldrb	w2, [x0]
  414eb0:	b	414e94 <wcrtomb@plt+0x12574>
  414eb4:	sub	w2, w2, #0x21
  414eb8:	lsl	x2, x5, x2
  414ebc:	tst	x2, x4
  414ec0:	b.ne	414d58 <wcrtomb@plt+0x12438>  // b.any
  414ec4:	tst	x2, x3
  414ec8:	b.ne	414f98 <wcrtomb@plt+0x12678>  // b.any
  414ecc:	tst	x2, x1
  414ed0:	b.ne	414d1c <wcrtomb@plt+0x123fc>  // b.any
  414ed4:	ldrb	w2, [x0, #1]
  414ed8:	b	414d5c <wcrtomb@plt+0x1243c>
  414edc:	sub	w2, w2, #0x21
  414ee0:	lsl	x2, x4, x2
  414ee4:	tst	x2, x3
  414ee8:	b.ne	415010 <wcrtomb@plt+0x126f0>  // b.any
  414eec:	tst	x2, x1
  414ef0:	b.ne	414d1c <wcrtomb@plt+0x123fc>  // b.any
  414ef4:	ldrb	w2, [x0]
  414ef8:	b	414e94 <wcrtomb@plt+0x12574>
  414efc:	cmp	w2, #0x5c
  414f00:	b.eq	414eac <wcrtomb@plt+0x1258c>  // b.none
  414f04:	b.ls	414f20 <wcrtomb@plt+0x12600>  // b.plast
  414f08:	sub	w2, w2, #0x7b
  414f0c:	mov	w5, #0xfd                  	// #253
  414f10:	tst	w2, w5
  414f14:	b.eq	414d1c <wcrtomb@plt+0x123fc>  // b.none
  414f18:	ldrb	w2, [x0]
  414f1c:	b	414e94 <wcrtomb@plt+0x12574>
  414f20:	cmp	w2, #0x5b
  414f24:	b.ne	414eac <wcrtomb@plt+0x1258c>  // b.any
  414f28:	mov	w0, #0x1                   	// #1
  414f2c:	b	414d20 <wcrtomb@plt+0x12400>
  414f30:	ldrb	w2, [x0]
  414f34:	cmp	w2, #0x28
  414f38:	b.ne	414ca0 <wcrtomb@plt+0x12380>  // b.any
  414f3c:	mov	w0, #0x1                   	// #1
  414f40:	b	414d20 <wcrtomb@plt+0x12400>
  414f44:	mov	x3, #0x401                 	// #1025
  414f48:	mov	x1, #0x2380                	// #9088
  414f4c:	mov	x4, #0x1                   	// #1
  414f50:	movk	x3, #0x8000, lsl #16
  414f54:	movk	x1, #0x4000, lsl #16
  414f58:	add	x0, x0, #0x1
  414f5c:	cmp	w2, #0x40
  414f60:	b.hi	414fac <wcrtomb@plt+0x1268c>  // b.pmore
  414f64:	cmp	w2, #0x20
  414f68:	b.hi	414f78 <wcrtomb@plt+0x12658>  // b.pmore
  414f6c:	cbz	w2, 414cb8 <wcrtomb@plt+0x12398>
  414f70:	ldrb	w2, [x0]
  414f74:	b	414f58 <wcrtomb@plt+0x12638>
  414f78:	sub	w2, w2, #0x21
  414f7c:	lsl	x2, x4, x2
  414f80:	tst	x2, x3
  414f84:	b.ne	414f70 <wcrtomb@plt+0x12650>  // b.any
  414f88:	tst	x2, x1
  414f8c:	b.ne	414d1c <wcrtomb@plt+0x123fc>  // b.any
  414f90:	ldrb	w2, [x0]
  414f94:	b	414f58 <wcrtomb@plt+0x12638>
  414f98:	ldrb	w2, [x0, #1]
  414f9c:	cmp	w2, #0x28
  414fa0:	b.eq	414d1c <wcrtomb@plt+0x123fc>  // b.none
  414fa4:	mov	x0, x7
  414fa8:	b	414d60 <wcrtomb@plt+0x12440>
  414fac:	cmp	w2, #0x5c
  414fb0:	b.eq	414f70 <wcrtomb@plt+0x12650>  // b.none
  414fb4:	b.ls	414fd0 <wcrtomb@plt+0x126b0>  // b.plast
  414fb8:	sub	w2, w2, #0x7b
  414fbc:	mov	w5, #0xfd                  	// #253
  414fc0:	tst	w2, w5
  414fc4:	b.eq	414d1c <wcrtomb@plt+0x123fc>  // b.none
  414fc8:	ldrb	w2, [x0]
  414fcc:	b	414f58 <wcrtomb@plt+0x12638>
  414fd0:	cmp	w2, #0x5b
  414fd4:	b.ne	414f70 <wcrtomb@plt+0x12650>  // b.any
  414fd8:	mov	w0, #0x1                   	// #1
  414fdc:	b	414d20 <wcrtomb@plt+0x12400>
  414fe0:	ldrb	w2, [x0, #1]
  414fe4:	add	x0, x0, #0x2
  414fe8:	cmp	w2, #0x0
  414fec:	csel	x0, x0, x7, ne  // ne = any
  414ff0:	ldrb	w2, [x0]
  414ff4:	b	414e10 <wcrtomb@plt+0x124f0>
  414ff8:	ldrb	w2, [x0, #1]
  414ffc:	add	x0, x0, #0x2
  415000:	cmp	w2, #0x0
  415004:	csel	x0, x0, x7, ne  // ne = any
  415008:	ldrb	w2, [x0]
  41500c:	b	414d40 <wcrtomb@plt+0x12420>
  415010:	ldrb	w2, [x0]
  415014:	cmp	w2, #0x28
  415018:	b.ne	414e94 <wcrtomb@plt+0x12574>  // b.any
  41501c:	mov	w0, #0x1                   	// #1
  415020:	b	414d20 <wcrtomb@plt+0x12400>
  415024:	mov	x3, #0x401                 	// #1025
  415028:	mov	x1, #0x2380                	// #9088
  41502c:	mov	x4, #0x1                   	// #1
  415030:	movk	x3, #0x8000, lsl #16
  415034:	movk	x1, #0x4000, lsl #16
  415038:	add	x0, x0, #0x1
  41503c:	cmp	w2, #0x40
  415040:	b.hi	415078 <wcrtomb@plt+0x12758>  // b.pmore
  415044:	cmp	w2, #0x20
  415048:	b.hi	415058 <wcrtomb@plt+0x12738>  // b.pmore
  41504c:	cbz	w2, 414cb8 <wcrtomb@plt+0x12398>
  415050:	ldrb	w2, [x0]
  415054:	b	415038 <wcrtomb@plt+0x12718>
  415058:	sub	w2, w2, #0x21
  41505c:	lsl	x2, x4, x2
  415060:	tst	x2, x3
  415064:	b.ne	4150ac <wcrtomb@plt+0x1278c>  // b.any
  415068:	tst	x2, x1
  41506c:	b.ne	414d1c <wcrtomb@plt+0x123fc>  // b.any
  415070:	ldrb	w2, [x0]
  415074:	b	415038 <wcrtomb@plt+0x12718>
  415078:	cmp	w2, #0x5c
  41507c:	b.eq	415050 <wcrtomb@plt+0x12730>  // b.none
  415080:	b.ls	41509c <wcrtomb@plt+0x1277c>  // b.plast
  415084:	sub	w2, w2, #0x7b
  415088:	mov	w5, #0xfd                  	// #253
  41508c:	tst	w2, w5
  415090:	b.eq	414d1c <wcrtomb@plt+0x123fc>  // b.none
  415094:	ldrb	w2, [x0]
  415098:	b	415038 <wcrtomb@plt+0x12718>
  41509c:	cmp	w2, #0x5b
  4150a0:	b.ne	415050 <wcrtomb@plt+0x12730>  // b.any
  4150a4:	mov	w0, #0x1                   	// #1
  4150a8:	b	414d20 <wcrtomb@plt+0x12400>
  4150ac:	ldrb	w2, [x0]
  4150b0:	cmp	w2, #0x28
  4150b4:	b.ne	415038 <wcrtomb@plt+0x12718>  // b.any
  4150b8:	mov	w0, #0x1                   	// #1
  4150bc:	b	414d20 <wcrtomb@plt+0x12400>
  4150c0:	mov	x0, #0x10                  	// #16
  4150c4:	b	41b698 <wcrtomb@plt+0x18d78>
  4150c8:	stp	x29, x30, [sp, #-48]!
  4150cc:	mov	x29, sp
  4150d0:	stp	x21, x22, [sp, #32]
  4150d4:	mov	x22, x0
  4150d8:	ldr	x21, [x0]
  4150dc:	stp	x19, x20, [sp, #16]
  4150e0:	cbz	x21, 415140 <wcrtomb@plt+0x12820>
  4150e4:	nop
  4150e8:	ldr	w0, [x21, #8]
  4150ec:	mov	x20, x21
  4150f0:	ldr	x21, [x21]
  4150f4:	cbz	w0, 415198 <wcrtomb@plt+0x12878>
  4150f8:	cmp	w0, #0x1
  4150fc:	b.ne	415134 <wcrtomb@plt+0x12814>  // b.any
  415100:	ldr	x2, [x20, #32]
  415104:	ldr	x0, [x20, #16]
  415108:	cbz	x2, 415130 <wcrtomb@plt+0x12810>
  41510c:	mov	x19, #0x0                   	// #0
  415110:	add	x1, x19, x19, lsl #3
  415114:	lsl	x1, x1, #3
  415118:	add	x3, x0, x1
  41511c:	ldr	w1, [x0, x1]
  415120:	tbnz	w1, #27, 415178 <wcrtomb@plt+0x12858>
  415124:	add	x19, x19, #0x1
  415128:	cmp	x19, x2
  41512c:	b.cc	415110 <wcrtomb@plt+0x127f0>  // b.lo, b.ul, b.last
  415130:	bl	4026b0 <free@plt>
  415134:	mov	x0, x20
  415138:	bl	4026b0 <free@plt>
  41513c:	cbnz	x21, 4150e8 <wcrtomb@plt+0x127c8>
  415140:	ldr	x19, [x22, #8]
  415144:	cbz	x19, 415164 <wcrtomb@plt+0x12844>
  415148:	mov	x20, x19
  41514c:	ldr	x19, [x19]
  415150:	ldr	x0, [x20, #8]
  415154:	bl	4026b0 <free@plt>
  415158:	mov	x0, x20
  41515c:	bl	4026b0 <free@plt>
  415160:	cbnz	x19, 415148 <wcrtomb@plt+0x12828>
  415164:	mov	x0, x22
  415168:	ldp	x19, x20, [sp, #16]
  41516c:	ldp	x21, x22, [sp, #32]
  415170:	ldp	x29, x30, [sp], #48
  415174:	b	4026b0 <free@plt>
  415178:	add	x0, x3, #0x8
  41517c:	bl	42dfe0 <_obstack_memory_used@@Base+0xf4f0>
  415180:	ldr	x2, [x20, #32]
  415184:	add	x19, x19, #0x1
  415188:	ldr	x0, [x20, #16]
  41518c:	cmp	x2, x19
  415190:	b.hi	415110 <wcrtomb@plt+0x127f0>  // b.pmore
  415194:	b	415130 <wcrtomb@plt+0x12810>
  415198:	ldr	x0, [x20, #16]
  41519c:	bl	416700 <wcrtomb@plt+0x13de0>
  4151a0:	b	415134 <wcrtomb@plt+0x12814>
  4151a4:	nop
  4151a8:	stp	x29, x30, [sp, #-64]!
  4151ac:	mov	x29, sp
  4151b0:	stp	x21, x22, [sp, #32]
  4151b4:	mov	w21, w2
  4151b8:	tst	x21, #0x10000000
  4151bc:	stp	x19, x20, [sp, #16]
  4151c0:	adrp	x20, 414000 <wcrtomb@plt+0x116e0>
  4151c4:	add	x3, x20, #0x940
  4151c8:	str	x23, [sp, #48]
  4151cc:	adrp	x20, 402000 <mbrtowc@plt-0x290>
  4151d0:	add	x20, x20, #0x700
  4151d4:	csel	x20, x20, x3, ne  // ne = any
  4151d8:	mov	x19, x1
  4151dc:	mov	x23, x0
  4151e0:	blr	x20
  4151e4:	cmp	w0, #0x0
  4151e8:	mov	w1, w0
  4151ec:	cset	w0, eq  // eq = none
  4151f0:	tbnz	w21, #30, 415218 <wcrtomb@plt+0x128f8>
  4151f4:	ldrb	w3, [x19]
  4151f8:	cbz	w3, 415218 <wcrtomb@plt+0x128f8>
  4151fc:	cbz	w1, 41525c <wcrtomb@plt+0x1293c>
  415200:	mov	x22, x19
  415204:	cmp	w3, #0x2f
  415208:	ldrb	w3, [x19, #1]!
  41520c:	b.eq	415238 <wcrtomb@plt+0x12918>  // b.none
  415210:	cbnz	w3, 415200 <wcrtomb@plt+0x128e0>
  415214:	mov	w0, #0x0                   	// #0
  415218:	ldp	x19, x20, [sp, #16]
  41521c:	ldp	x21, x22, [sp, #32]
  415220:	ldr	x23, [sp, #48]
  415224:	ldp	x29, x30, [sp], #64
  415228:	ret
  41522c:	ldrb	w3, [x19, #1]
  415230:	mov	x22, x19
  415234:	add	x19, x19, #0x1
  415238:	cmp	w3, #0x2f
  41523c:	b.eq	41522c <wcrtomb@plt+0x1290c>  // b.none
  415240:	mov	w2, w21
  415244:	mov	x1, x19
  415248:	mov	x0, x23
  41524c:	blr	x20
  415250:	ldrb	w3, [x22, #1]
  415254:	cbz	w3, 415274 <wcrtomb@plt+0x12954>
  415258:	cbnz	w0, 415200 <wcrtomb@plt+0x128e0>
  41525c:	mov	w0, #0x1                   	// #1
  415260:	ldp	x19, x20, [sp, #16]
  415264:	ldp	x21, x22, [sp, #32]
  415268:	ldr	x23, [sp, #48]
  41526c:	ldp	x29, x30, [sp], #64
  415270:	ret
  415274:	cmp	w0, #0x0
  415278:	cset	w0, eq  // eq = none
  41527c:	b	415218 <wcrtomb@plt+0x128f8>
  415280:	stp	x29, x30, [sp, #-128]!
  415284:	mov	x29, sp
  415288:	stp	x21, x22, [sp, #32]
  41528c:	ldr	x21, [x0]
  415290:	cbz	x21, 4154d8 <wcrtomb@plt+0x12bb8>
  415294:	mov	x22, x1
  415298:	stp	x25, x26, [sp, #64]
  41529c:	adrp	x25, 414000 <wcrtomb@plt+0x116e0>
  4152a0:	add	x0, x25, #0x940
  4152a4:	stp	x19, x20, [sp, #16]
  4152a8:	mov	x20, #0x0                   	// #0
  4152ac:	stp	x23, x24, [sp, #48]
  4152b0:	adrp	x24, 402000 <mbrtowc@plt-0x290>
  4152b4:	stp	x27, x28, [sp, #80]
  4152b8:	str	x0, [sp, #112]
  4152bc:	add	x0, x24, #0x700
  4152c0:	str	x0, [sp, #120]
  4152c4:	nop
  4152c8:	ldr	w0, [x21, #8]
  4152cc:	cbnz	w0, 4153a4 <wcrtomb@plt+0x12a84>
  4152d0:	cbz	x20, 4154ac <wcrtomb@plt+0x12b8c>
  4152d4:	ldr	w23, [x21, #12]
  4152d8:	mov	x19, x22
  4152dc:	ldr	x26, [x21, #16]
  4152e0:	and	w27, w23, #0x8
  4152e4:	and	w23, w23, #0x40000000
  4152e8:	mov	x1, x19
  4152ec:	mov	x0, x20
  4152f0:	bl	402730 <strcpy@plt>
  4152f4:	cbz	w27, 415374 <wcrtomb@plt+0x12a54>
  4152f8:	mov	x1, x20
  4152fc:	mov	x0, x26
  415300:	bl	416128 <wcrtomb@plt+0x13808>
  415304:	mov	x2, x0
  415308:	mov	w1, #0x2f                  	// #47
  41530c:	mov	x0, x20
  415310:	cbnz	x2, 41533c <wcrtomb@plt+0x12a1c>
  415314:	bl	4025a0 <strrchr@plt>
  415318:	cbz	x0, 415388 <wcrtomb@plt+0x12a68>
  41531c:	strb	wzr, [x0]
  415320:	mov	x1, x20
  415324:	mov	x0, x26
  415328:	bl	416128 <wcrtomb@plt+0x13808>
  41532c:	mov	x2, x0
  415330:	mov	w1, #0x2f                  	// #47
  415334:	mov	x0, x20
  415338:	cbz	x2, 415314 <wcrtomb@plt+0x129f4>
  41533c:	mov	w19, #0x0                   	// #0
  415340:	mov	x0, x20
  415344:	bl	4026b0 <free@plt>
  415348:	ldr	w0, [x21, #12]
  41534c:	ldp	x21, x22, [sp, #32]
  415350:	eor	x0, x0, #0x20000000
  415354:	ldp	x23, x24, [sp, #48]
  415358:	ubfx	x0, x0, #29, #1
  41535c:	eor	w0, w19, w0
  415360:	ldp	x19, x20, [sp, #16]
  415364:	ldp	x25, x26, [sp, #64]
  415368:	ldp	x27, x28, [sp, #80]
  41536c:	ldp	x29, x30, [sp], #128
  415370:	ret
  415374:	mov	x1, x20
  415378:	mov	x0, x26
  41537c:	bl	416128 <wcrtomb@plt+0x13808>
  415380:	cbnz	x0, 41533c <wcrtomb@plt+0x12a1c>
  415384:	nop
  415388:	cbnz	w23, 4153f8 <wcrtomb@plt+0x12ad8>
  41538c:	mov	x0, x19
  415390:	mov	w1, #0x2f                  	// #47
  415394:	bl	4026e0 <strchr@plt>
  415398:	cbz	x0, 4153f8 <wcrtomb@plt+0x12ad8>
  41539c:	add	x19, x0, #0x1
  4153a0:	b	4152e8 <wcrtomb@plt+0x129c8>
  4153a4:	ldr	x26, [x21, #32]
  4153a8:	ldr	x27, [x21, #16]
  4153ac:	cbz	x26, 4153f8 <wcrtomb@plt+0x12ad8>
  4153b0:	add	x27, x27, #0x8
  4153b4:	mov	x24, #0x0                   	// #0
  4153b8:	ldur	w28, [x27, #-8]
  4153bc:	tbz	w28, #27, 415408 <wcrtomb@plt+0x12ae8>
  4153c0:	mov	x1, x22
  4153c4:	mov	x0, x27
  4153c8:	mov	w4, #0x0                   	// #0
  4153cc:	mov	x3, #0x0                   	// #0
  4153d0:	mov	x2, #0x0                   	// #0
  4153d4:	bl	42e028 <_obstack_memory_used@@Base+0xf538>
  4153d8:	cmp	w0, #0x0
  4153dc:	cset	w1, eq  // eq = none
  4153e0:	cbnz	w1, 41533c <wcrtomb@plt+0x12a1c>
  4153e4:	add	x24, x24, #0x1
  4153e8:	add	x27, x27, #0x48
  4153ec:	cmp	x26, x24
  4153f0:	b.ne	4153b8 <wcrtomb@plt+0x12a98>  // b.any
  4153f4:	nop
  4153f8:	ldr	x0, [x21]
  4153fc:	cbz	x0, 4154d0 <wcrtomb@plt+0x12bb0>
  415400:	mov	x21, x0
  415404:	b	4152c8 <wcrtomb@plt+0x129a8>
  415408:	ldp	x1, x0, [sp, #112]
  41540c:	tst	x28, #0x10000000
  415410:	ldr	x25, [x27]
  415414:	mov	w2, w28
  415418:	csel	x23, x0, x1, ne  // ne = any
  41541c:	mov	x1, x22
  415420:	mov	x0, x25
  415424:	blr	x23
  415428:	cmp	w0, #0x0
  41542c:	cset	w1, eq  // eq = none
  415430:	tbnz	w28, #30, 4153e0 <wcrtomb@plt+0x12ac0>
  415434:	ldrb	w3, [x22]
  415438:	cbz	w3, 4153e0 <wcrtomb@plt+0x12ac0>
  41543c:	cbz	w0, 41533c <wcrtomb@plt+0x12a1c>
  415440:	mov	x19, x22
  415444:	mov	x4, x19
  415448:	cmp	w3, #0x2f
  41544c:	add	x19, x19, #0x1
  415450:	ldrb	w3, [x19]
  415454:	b.eq	415470 <wcrtomb@plt+0x12b50>  // b.none
  415458:	cbz	w3, 4153e4 <wcrtomb@plt+0x12ac4>
  41545c:	mov	x4, x19
  415460:	cmp	w3, #0x2f
  415464:	add	x19, x19, #0x1
  415468:	ldrb	w3, [x19]
  41546c:	b.ne	415458 <wcrtomb@plt+0x12b38>  // b.any
  415470:	str	x4, [sp, #104]
  415474:	cmp	w3, #0x2f
  415478:	b.eq	4154a0 <wcrtomb@plt+0x12b80>  // b.none
  41547c:	mov	w2, w28
  415480:	mov	x1, x19
  415484:	mov	x0, x25
  415488:	blr	x23
  41548c:	ldr	x4, [sp, #104]
  415490:	ldrb	w3, [x4, #1]
  415494:	cbz	w3, 4154c4 <wcrtomb@plt+0x12ba4>
  415498:	cbnz	w0, 415444 <wcrtomb@plt+0x12b24>
  41549c:	b	41533c <wcrtomb@plt+0x12a1c>
  4154a0:	mov	x4, x19
  4154a4:	ldrb	w3, [x19, #1]!
  4154a8:	b	415470 <wcrtomb@plt+0x12b50>
  4154ac:	mov	x0, x22
  4154b0:	bl	402300 <strlen@plt>
  4154b4:	add	x0, x0, #0x1
  4154b8:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4154bc:	mov	x20, x0
  4154c0:	b	4152d4 <wcrtomb@plt+0x129b4>
  4154c4:	cmp	w0, #0x0
  4154c8:	cset	w1, eq  // eq = none
  4154cc:	b	4153e0 <wcrtomb@plt+0x12ac0>
  4154d0:	mov	w19, #0x1                   	// #1
  4154d4:	b	415340 <wcrtomb@plt+0x12a20>
  4154d8:	mov	w0, #0x0                   	// #0
  4154dc:	ldp	x21, x22, [sp, #32]
  4154e0:	ldp	x29, x30, [sp], #128
  4154e4:	ret
  4154e8:	stp	x29, x30, [sp, #-64]!
  4154ec:	tst	w2, #0x18000000
  4154f0:	mov	x29, sp
  4154f4:	stp	x19, x20, [sp, #16]
  4154f8:	mov	x20, x0
  4154fc:	mov	w19, w2
  415500:	stp	x21, x22, [sp, #32]
  415504:	mov	x22, x1
  415508:	ldr	x21, [x0]
  41550c:	b.eq	4155c4 <wcrtomb@plt+0x12ca4>  // b.none
  415510:	mov	w1, w2
  415514:	mov	x0, x22
  415518:	bl	414c70 <wcrtomb@plt+0x12350>
  41551c:	tst	w0, #0xff
  415520:	b.eq	4155c4 <wcrtomb@plt+0x12ca4>  // b.none
  415524:	stp	x23, x24, [sp, #48]
  415528:	cbz	x21, 415538 <wcrtomb@plt+0x12c18>
  41552c:	ldr	w0, [x21, #8]
  415530:	cmp	w0, #0x1
  415534:	b.eq	41570c <wcrtomb@plt+0x12dec>  // b.none
  415538:	mov	x0, #0x28                  	// #40
  41553c:	bl	41b698 <wcrtomb@plt+0x18d78>
  415540:	mov	x21, x0
  415544:	mov	w1, #0x1                   	// #1
  415548:	ldr	x0, [x20]
  41554c:	str	x21, [x20]
  415550:	str	x0, [x21]
  415554:	stp	w1, w19, [x21, #8]
  415558:	add	x24, x21, #0x10
  41555c:	ldr	x0, [x21, #16]
  415560:	ldp	x1, x23, [x24, #8]
  415564:	cmp	x23, x1
  415568:	b.eq	41571c <wcrtomb@plt+0x12dfc>  // b.none
  41556c:	add	x1, x23, x23, lsl #3
  415570:	add	x2, x23, #0x1
  415574:	str	x2, [x24, #16]
  415578:	lsl	x1, x1, #3
  41557c:	add	x21, x0, x1
  415580:	str	w19, [x0, x1]
  415584:	tbz	w19, #27, 41569c <wcrtomb@plt+0x12d7c>
  415588:	asr	w0, w19, #3
  41558c:	mov	w20, #0x9                   	// #9
  415590:	and	w0, w0, #0x2
  415594:	orr	w20, w0, w20
  415598:	tbz	w19, #3, 415798 <wcrtomb@plt+0x12e78>
  41559c:	mov	x0, x22
  4155a0:	bl	402300 <strlen@plt>
  4155a4:	mov	x19, x0
  4155a8:	cbz	x19, 415764 <wcrtomb@plt+0x12e44>
  4155ac:	sub	x2, x19, #0x1
  4155b0:	ldrb	w0, [x22, x2]
  4155b4:	cmp	w0, #0x2f
  4155b8:	b.ne	4157dc <wcrtomb@plt+0x12ebc>  // b.any
  4155bc:	mov	x19, x2
  4155c0:	b	4155a8 <wcrtomb@plt+0x12c88>
  4155c4:	cbz	x21, 4155d0 <wcrtomb@plt+0x12cb0>
  4155c8:	ldr	w0, [x21, #8]
  4155cc:	cbz	w0, 415660 <wcrtomb@plt+0x12d40>
  4155d0:	mov	x0, #0x28                  	// #40
  4155d4:	bl	41b698 <wcrtomb@plt+0x18d78>
  4155d8:	stp	wzr, w19, [x0, #8]
  4155dc:	mov	x21, x0
  4155e0:	tbnz	w19, #4, 415688 <wcrtomb@plt+0x12d68>
  4155e4:	adrp	x2, 414000 <wcrtomb@plt+0x116e0>
  4155e8:	adrp	x3, 414000 <wcrtomb@plt+0x116e0>
  4155ec:	add	x2, x2, #0x938
  4155f0:	add	x3, x3, #0x918
  4155f4:	mov	x1, #0x0                   	// #0
  4155f8:	adrp	x4, 414000 <wcrtomb@plt+0x116e0>
  4155fc:	mov	x0, #0x0                   	// #0
  415600:	add	x4, x4, #0x8f0
  415604:	bl	416408 <wcrtomb@plt+0x13ae8>
  415608:	str	x0, [x21, #16]
  41560c:	ldr	x1, [x20]
  415610:	str	x1, [x21]
  415614:	str	x21, [x20]
  415618:	and	w19, w19, #0x1ffffffe
  41561c:	mov	x0, x22
  415620:	and	w19, w19, #0xf0000003
  415624:	bl	41b738 <wcrtomb@plt+0x18e18>
  415628:	mov	x20, x0
  41562c:	mov	w0, #0x10000000            	// #268435456
  415630:	cmp	w19, w0
  415634:	b.eq	4156b8 <wcrtomb@plt+0x12d98>  // b.none
  415638:	ldr	x0, [x21, #16]
  41563c:	mov	x1, x20
  415640:	bl	416be0 <wcrtomb@plt+0x142c0>
  415644:	cmp	x20, x0
  415648:	b.eq	4156a8 <wcrtomb@plt+0x12d88>  // b.none
  41564c:	mov	x0, x20
  415650:	ldp	x19, x20, [sp, #16]
  415654:	ldp	x21, x22, [sp, #32]
  415658:	ldp	x29, x30, [sp], #64
  41565c:	b	4026b0 <free@plt>
  415660:	ldr	w2, [x21, #12]
  415664:	eor	w2, w19, w2
  415668:	and	w2, w2, #0x7ffffff8
  41566c:	and	w2, w2, #0xe000001f
  415670:	cbz	w2, 415618 <wcrtomb@plt+0x12cf8>
  415674:	mov	x0, #0x28                  	// #40
  415678:	bl	41b698 <wcrtomb@plt+0x18d78>
  41567c:	stp	wzr, w19, [x0, #8]
  415680:	mov	x21, x0
  415684:	tbz	w19, #4, 4155e4 <wcrtomb@plt+0x12cc4>
  415688:	adrp	x2, 414000 <wcrtomb@plt+0x116e0>
  41568c:	adrp	x3, 414000 <wcrtomb@plt+0x116e0>
  415690:	add	x2, x2, #0xa28
  415694:	add	x3, x3, #0x8f8
  415698:	b	4155f4 <wcrtomb@plt+0x12cd4>
  41569c:	tbnz	w19, #26, 4157b8 <wcrtomb@plt+0x12e98>
  4156a0:	ldp	x23, x24, [sp, #48]
  4156a4:	str	x22, [x21, #8]
  4156a8:	ldp	x19, x20, [sp, #16]
  4156ac:	ldp	x21, x22, [sp, #32]
  4156b0:	ldp	x29, x30, [sp], #64
  4156b4:	ret
  4156b8:	mov	x4, x20
  4156bc:	mov	x5, x20
  4156c0:	mov	x2, x4
  4156c4:	ldrb	w3, [x2], #1
  4156c8:	cmp	w3, #0x5c
  4156cc:	b.eq	4156ec <wcrtomb@plt+0x12dcc>  // b.none
  4156d0:	strb	w3, [x5], #1
  4156d4:	cbz	w3, 415638 <wcrtomb@plt+0x12d18>
  4156d8:	mov	x4, x2
  4156dc:	mov	x2, x4
  4156e0:	ldrb	w3, [x2], #1
  4156e4:	cmp	w3, #0x5c
  4156e8:	b.ne	4156d0 <wcrtomb@plt+0x12db0>  // b.any
  4156ec:	ldrb	w0, [x4, #1]
  4156f0:	cbz	w0, 415700 <wcrtomb@plt+0x12de0>
  4156f4:	mov	w3, w0
  4156f8:	add	x2, x4, #0x2
  4156fc:	b	4156d0 <wcrtomb@plt+0x12db0>
  415700:	mov	x4, x2
  415704:	strb	w3, [x5], #1
  415708:	b	4156dc <wcrtomb@plt+0x12dbc>
  41570c:	ldr	w0, [x21, #12]
  415710:	eor	w0, w19, w0
  415714:	tbz	w0, #29, 415558 <wcrtomb@plt+0x12c38>
  415718:	b	415538 <wcrtomb@plt+0x12c18>
  41571c:	cbz	x0, 415770 <wcrtomb@plt+0x12e50>
  415720:	mov	x1, #0xf683                	// #63107
  415724:	movk	x1, #0xda12, lsl #16
  415728:	movk	x1, #0x684b, lsl #32
  41572c:	movk	x1, #0x12f, lsl #48
  415730:	cmp	x23, x1
  415734:	b.hi	415794 <wcrtomb@plt+0x12e74>  // b.pmore
  415738:	add	x1, x23, #0x1
  41573c:	add	x23, x1, x23, lsr #1
  415740:	add	x1, x23, x23, lsl #3
  415744:	str	x23, [x21, #24]
  415748:	lsl	x1, x1, #3
  41574c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  415750:	ldr	x23, [x24, #16]
  415754:	str	x0, [x21, #16]
  415758:	b	41556c <wcrtomb@plt+0x12c4c>
  41575c:	ldr	x23, [x24, #16]
  415760:	sub	x23, x23, #0x1
  415764:	str	x23, [x24, #16]
  415768:	ldp	x23, x24, [sp, #48]
  41576c:	b	4156a8 <wcrtomb@plt+0x12d88>
  415770:	cmp	x23, #0x0
  415774:	mov	x1, #0x48                  	// #72
  415778:	csinc	x23, x23, xzr, ne  // ne = any
  41577c:	umulh	x2, x23, x1
  415780:	mul	x1, x23, x1
  415784:	cmp	x2, #0x0
  415788:	cset	x2, ne  // ne = any
  41578c:	tbnz	x1, #63, 415794 <wcrtomb@plt+0x12e74>
  415790:	cbz	x2, 415740 <wcrtomb@plt+0x12e20>
  415794:	bl	41b778 <wcrtomb@plt+0x18e58>
  415798:	mov	w2, w20
  41579c:	mov	x1, x22
  4157a0:	add	x0, x21, #0x8
  4157a4:	bl	42de30 <_obstack_memory_used@@Base+0xf340>
  4157a8:	mov	w19, w0
  4157ac:	cbnz	w19, 41575c <wcrtomb@plt+0x12e3c>
  4157b0:	ldp	x23, x24, [sp, #48]
  4157b4:	b	4156a8 <wcrtomb@plt+0x12d88>
  4157b8:	mov	x0, x22
  4157bc:	bl	41b738 <wcrtomb@plt+0x18e18>
  4157c0:	mov	x22, x0
  4157c4:	mov	x0, #0x10                  	// #16
  4157c8:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4157cc:	ldr	x1, [x20, #8]
  4157d0:	stp	x1, x22, [x0]
  4157d4:	str	x0, [x20, #8]
  4157d8:	b	4156a0 <wcrtomb@plt+0x12d80>
  4157dc:	add	x0, x19, #0x7
  4157e0:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4157e4:	mov	x1, x22
  4157e8:	mov	x2, x19
  4157ec:	mov	x22, x0
  4157f0:	bl	4022a0 <memcpy@plt>
  4157f4:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  4157f8:	add	x3, x3, #0xb70
  4157fc:	add	x4, x22, x19
  415800:	mov	w2, w20
  415804:	mov	x1, x22
  415808:	add	x0, x21, #0x8
  41580c:	ldr	w5, [x3]
  415810:	ldur	w3, [x3, #3]
  415814:	str	w5, [x22, x19]
  415818:	stur	w3, [x4, #3]
  41581c:	bl	42de30 <_obstack_memory_used@@Base+0xf340>
  415820:	mov	w19, w0
  415824:	mov	x0, x22
  415828:	bl	4026b0 <free@plt>
  41582c:	b	4157ac <wcrtomb@plt+0x12e8c>
  415830:	stp	x29, x30, [sp, #-144]!
  415834:	mov	x29, sp
  415838:	stp	x19, x20, [sp, #16]
  41583c:	and	w20, w4, #0xff
  415840:	mov	x19, #0x0                   	// #0
  415844:	stp	x21, x22, [sp, #32]
  415848:	mov	x21, x1
  41584c:	mov	x22, x2
  415850:	stp	x23, x24, [sp, #48]
  415854:	mov	w24, w3
  415858:	stp	x25, x26, [sp, #64]
  41585c:	mov	x25, x5
  415860:	stp	x27, x28, [sp, #80]
  415864:	mov	x27, #0x0                   	// #0
  415868:	str	x0, [sp, #104]
  41586c:	str	xzr, [sp, #136]
  415870:	b	41587c <wcrtomb@plt+0x12f5c>
  415874:	strb	w26, [x27, x19]
  415878:	add	x19, x19, #0x1
  41587c:	ldp	x1, x2, [x22, #8]
  415880:	add	x3, x1, #0x1
  415884:	cmp	x1, x2
  415888:	b.cs	4158b4 <wcrtomb@plt+0x12f94>  // b.hs, b.nlast
  41588c:	str	x3, [x22, #8]
  415890:	ldrb	w26, [x1]
  415894:	ldr	x0, [sp, #136]
  415898:	cmp	x0, x19
  41589c:	b.ne	415874 <wcrtomb@plt+0x12f54>  // b.any
  4158a0:	mov	x0, x27
  4158a4:	add	x1, sp, #0x88
  4158a8:	bl	41b640 <wcrtomb@plt+0x18d20>
  4158ac:	mov	x27, x0
  4158b0:	b	415874 <wcrtomb@plt+0x12f54>
  4158b4:	mov	x0, x22
  4158b8:	bl	4028e0 <__uflow@plt>
  4158bc:	cmn	w0, #0x1
  4158c0:	b.ne	415a00 <wcrtomb@plt+0x130e0>  // b.any
  4158c4:	ldr	w22, [x22]
  4158c8:	str	wzr, [sp, #116]
  4158cc:	bl	402890 <__errno_location@plt>
  4158d0:	str	x0, [sp, #120]
  4158d4:	and	w22, w22, #0x20
  4158d8:	cbz	w22, 4158ec <wcrtomb@plt+0x12fcc>
  4158dc:	ldr	w22, [x0]
  4158e0:	cmp	w22, #0x0
  4158e4:	csetm	w0, ne  // ne = any
  4158e8:	str	w0, [sp, #116]
  4158ec:	mov	x0, x27
  4158f0:	add	x1, x19, #0x1
  4158f4:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4158f8:	strb	w20, [x0, x19]
  4158fc:	mov	x26, x0
  415900:	cbz	x19, 4159e8 <wcrtomb@plt+0x130c8>
  415904:	add	x1, x0, x19
  415908:	mov	x0, #0x10                  	// #16
  41590c:	ldurb	w1, [x1, #-1]
  415910:	cmp	w1, w20
  415914:	cinc	x19, x19, ne  // ne = any
  415918:	add	x19, x26, x19
  41591c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  415920:	ldr	x1, [x21, #8]
  415924:	stp	x1, x26, [x0]
  415928:	cmp	x26, x19
  41592c:	str	x0, [x21, #8]
  415930:	b.cs	415994 <wcrtomb@plt+0x13074>  // b.hs, b.nlast
  415934:	ubfiz	x27, x20, #1, #8
  415938:	mov	x28, x26
  41593c:	b	415948 <wcrtomb@plt+0x13028>
  415940:	cmp	x19, x26
  415944:	b.eq	415994 <wcrtomb@plt+0x13074>  // b.none
  415948:	ldrb	w0, [x26]
  41594c:	mov	x23, x26
  415950:	add	x26, x26, #0x1
  415954:	cmp	w0, w20
  415958:	b.ne	415940 <wcrtomb@plt+0x13020>  // b.any
  41595c:	bl	4026a0 <__ctype_b_loc@plt>
  415960:	ldr	x3, [x0]
  415964:	ldrh	w0, [x3, x27]
  415968:	tbnz	w0, #13, 4159bc <wcrtomb@plt+0x1309c>
  41596c:	ldr	x4, [sp, #104]
  415970:	strb	wzr, [x23]
  415974:	mov	x1, x28
  415978:	mov	x3, x25
  41597c:	mov	w2, w24
  415980:	mov	x0, x21
  415984:	blr	x4
  415988:	mov	x28, x26
  41598c:	cmp	x19, x26
  415990:	b.ne	415948 <wcrtomb@plt+0x13028>  // b.any
  415994:	ldr	x0, [sp, #120]
  415998:	ldp	x19, x20, [sp, #16]
  41599c:	ldp	x23, x24, [sp, #48]
  4159a0:	ldp	x25, x26, [sp, #64]
  4159a4:	ldp	x27, x28, [sp, #80]
  4159a8:	str	w22, [x0]
  4159ac:	ldr	w0, [sp, #116]
  4159b0:	ldp	x21, x22, [sp, #32]
  4159b4:	ldp	x29, x30, [sp], #144
  4159b8:	ret
  4159bc:	sub	x0, x26, #0x1
  4159c0:	cmp	x28, x0
  4159c4:	b.eq	415988 <wcrtomb@plt+0x13068>  // b.none
  4159c8:	ldurb	w0, [x23, #-1]
  4159cc:	ldrh	w0, [x3, x0, lsl #1]
  4159d0:	tbz	w0, #13, 41596c <wcrtomb@plt+0x1304c>
  4159d4:	sub	x23, x23, #0x1
  4159d8:	cmp	x23, x28
  4159dc:	b.ne	4159c8 <wcrtomb@plt+0x130a8>  // b.any
  4159e0:	mov	x28, x26
  4159e4:	b	41598c <wcrtomb@plt+0x1306c>
  4159e8:	mov	x0, #0x10                  	// #16
  4159ec:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4159f0:	ldr	x1, [x21, #8]
  4159f4:	stp	x1, x26, [x0]
  4159f8:	str	x0, [x21, #8]
  4159fc:	b	415994 <wcrtomb@plt+0x13074>
  415a00:	and	w26, w0, #0xff
  415a04:	b	415894 <wcrtomb@plt+0x12f74>
  415a08:	stp	x29, x30, [sp, #-144]!
  415a0c:	mov	x29, sp
  415a10:	stp	x19, x20, [sp, #16]
  415a14:	stp	x21, x22, [sp, #32]
  415a18:	mov	x21, x1
  415a1c:	stp	x23, x24, [sp, #48]
  415a20:	and	w23, w4, #0xff
  415a24:	stp	x25, x26, [sp, #64]
  415a28:	mov	x25, x0
  415a2c:	mov	w26, w3
  415a30:	stp	x27, x28, [sp, #80]
  415a34:	ldrb	w0, [x2]
  415a38:	cmp	w0, #0x2d
  415a3c:	b.eq	415c00 <wcrtomb@plt+0x132e0>  // b.none
  415a40:	mov	x0, x2
  415a44:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  415a48:	add	x1, x1, #0x448
  415a4c:	bl	402410 <fopen@plt>
  415a50:	mov	x20, x0
  415a54:	cbz	x0, 415c28 <wcrtomb@plt+0x13308>
  415a58:	str	wzr, [sp, #116]
  415a5c:	mov	x19, #0x0                   	// #0
  415a60:	mov	x28, #0x0                   	// #0
  415a64:	str	xzr, [sp, #136]
  415a68:	b	415a74 <wcrtomb@plt+0x13154>
  415a6c:	strb	w22, [x28, x19]
  415a70:	add	x19, x19, #0x1
  415a74:	ldp	x0, x3, [x20, #8]
  415a78:	add	x2, x0, #0x1
  415a7c:	cmp	x0, x3
  415a80:	b.cs	415aac <wcrtomb@plt+0x1318c>  // b.hs, b.nlast
  415a84:	str	x2, [x20, #8]
  415a88:	ldrb	w22, [x0]
  415a8c:	ldr	x0, [sp, #136]
  415a90:	cmp	x0, x19
  415a94:	b.ne	415a6c <wcrtomb@plt+0x1314c>  // b.any
  415a98:	mov	x0, x28
  415a9c:	add	x1, sp, #0x88
  415aa0:	bl	41b640 <wcrtomb@plt+0x18d20>
  415aa4:	mov	x28, x0
  415aa8:	b	415a6c <wcrtomb@plt+0x1314c>
  415aac:	mov	x0, x20
  415ab0:	bl	4028e0 <__uflow@plt>
  415ab4:	cmn	w0, #0x1
  415ab8:	b.ne	415c30 <wcrtomb@plt+0x13310>  // b.any
  415abc:	bl	402890 <__errno_location@plt>
  415ac0:	ldr	w22, [x20]
  415ac4:	mov	x24, x0
  415ac8:	mov	w27, #0x0                   	// #0
  415acc:	and	w22, w22, #0x20
  415ad0:	cbz	w22, 415ae0 <wcrtomb@plt+0x131c0>
  415ad4:	ldr	w22, [x0]
  415ad8:	cmp	w22, #0x0
  415adc:	csetm	w27, ne  // ne = any
  415ae0:	mov	x0, x28
  415ae4:	add	x1, x19, #0x1
  415ae8:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  415aec:	strb	w23, [x0, x19]
  415af0:	mov	x28, x0
  415af4:	cbnz	x19, 415b3c <wcrtomb@plt+0x1321c>
  415af8:	mov	x0, #0x10                  	// #16
  415afc:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  415b00:	ldr	x1, [x21, #8]
  415b04:	stp	x1, x28, [x0]
  415b08:	str	x0, [x21, #8]
  415b0c:	nop
  415b10:	ldr	w0, [sp, #116]
  415b14:	str	w22, [x24]
  415b18:	cbz	w0, 415c1c <wcrtomb@plt+0x132fc>
  415b1c:	mov	w0, w27
  415b20:	ldp	x19, x20, [sp, #16]
  415b24:	ldp	x21, x22, [sp, #32]
  415b28:	ldp	x23, x24, [sp, #48]
  415b2c:	ldp	x25, x26, [sp, #64]
  415b30:	ldp	x27, x28, [sp, #80]
  415b34:	ldp	x29, x30, [sp], #144
  415b38:	ret
  415b3c:	add	x1, x0, x19
  415b40:	mov	x0, #0x10                  	// #16
  415b44:	ldurb	w1, [x1, #-1]
  415b48:	cmp	w1, w23
  415b4c:	cinc	x19, x19, ne  // ne = any
  415b50:	add	x19, x28, x19
  415b54:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  415b58:	ldr	x1, [x21, #8]
  415b5c:	stp	x1, x28, [x0]
  415b60:	cmp	x28, x19
  415b64:	str	x0, [x21, #8]
  415b68:	b.cs	415b10 <wcrtomb@plt+0x131f0>  // b.hs, b.nlast
  415b6c:	ubfiz	x0, x23, #1, #8
  415b70:	mov	x1, x28
  415b74:	str	x0, [sp, #120]
  415b78:	b	415b84 <wcrtomb@plt+0x13264>
  415b7c:	cmp	x19, x28
  415b80:	b.eq	415b10 <wcrtomb@plt+0x131f0>  // b.none
  415b84:	ldrb	w0, [x28]
  415b88:	mov	x2, x28
  415b8c:	add	x28, x28, #0x1
  415b90:	cmp	w23, w0
  415b94:	b.ne	415b7c <wcrtomb@plt+0x1325c>  // b.any
  415b98:	stp	x2, x1, [sp, #96]
  415b9c:	bl	4026a0 <__ctype_b_loc@plt>
  415ba0:	ldr	x0, [x0]
  415ba4:	ldr	x1, [sp, #120]
  415ba8:	ldr	x2, [sp, #96]
  415bac:	ldrh	w4, [x0, x1]
  415bb0:	ldr	x1, [sp, #104]
  415bb4:	tbnz	w4, #13, 415bd0 <wcrtomb@plt+0x132b0>
  415bb8:	strb	wzr, [x2]
  415bbc:	mov	x0, x21
  415bc0:	mov	w2, w26
  415bc4:	blr	x25
  415bc8:	mov	x1, x28
  415bcc:	b	415b7c <wcrtomb@plt+0x1325c>
  415bd0:	sub	x4, x28, #0x1
  415bd4:	cmp	x1, x4
  415bd8:	b.eq	415bc8 <wcrtomb@plt+0x132a8>  // b.none
  415bdc:	nop
  415be0:	ldurb	w4, [x2, #-1]
  415be4:	ldrh	w4, [x0, x4, lsl #1]
  415be8:	tbz	w4, #13, 415bb8 <wcrtomb@plt+0x13298>
  415bec:	sub	x2, x2, #0x1
  415bf0:	cmp	x2, x1
  415bf4:	b.ne	415be0 <wcrtomb@plt+0x132c0>  // b.any
  415bf8:	mov	x1, x28
  415bfc:	b	415b7c <wcrtomb@plt+0x1325c>
  415c00:	ldrb	w0, [x2, #1]
  415c04:	cbnz	w0, 415a40 <wcrtomb@plt+0x13120>
  415c08:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  415c0c:	mov	w1, #0x1                   	// #1
  415c10:	str	w1, [sp, #116]
  415c14:	ldr	x20, [x0, #1120]
  415c18:	b	415a5c <wcrtomb@plt+0x1313c>
  415c1c:	mov	x0, x20
  415c20:	bl	4023e0 <fclose@plt>
  415c24:	cbz	w0, 415b1c <wcrtomb@plt+0x131fc>
  415c28:	mov	w27, #0xffffffff            	// #-1
  415c2c:	b	415b1c <wcrtomb@plt+0x131fc>
  415c30:	and	w22, w0, #0xff
  415c34:	b	415a8c <wcrtomb@plt+0x1316c>
  415c38:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  415c3c:	ldr	x0, [x0, #1128]
  415c40:	ret
  415c44:	nop
  415c48:	ror	x2, x0, #3
  415c4c:	udiv	x0, x2, x1
  415c50:	msub	x0, x0, x1, x2
  415c54:	ret
  415c58:	cmp	x1, x0
  415c5c:	cset	w0, eq  // eq = none
  415c60:	ret
  415c64:	nop
  415c68:	stp	x29, x30, [sp, #-80]!
  415c6c:	mov	x29, sp
  415c70:	stp	x21, x22, [sp, #32]
  415c74:	mov	x21, x0
  415c78:	mov	x0, x1
  415c7c:	stp	x19, x20, [sp, #16]
  415c80:	mov	x20, x1
  415c84:	stp	x23, x24, [sp, #48]
  415c88:	mov	x24, x2
  415c8c:	and	w23, w3, #0xff
  415c90:	ldr	x1, [x21, #16]
  415c94:	ldr	x2, [x21, #48]
  415c98:	str	x25, [sp, #64]
  415c9c:	blr	x2
  415ca0:	ldr	x1, [x21, #16]
  415ca4:	cmp	x0, x1
  415ca8:	b.cs	415db4 <wcrtomb@plt+0x13494>  // b.hs, b.nlast
  415cac:	ldr	x25, [x21]
  415cb0:	lsl	x22, x0, #4
  415cb4:	add	x19, x25, x22
  415cb8:	str	x19, [x24]
  415cbc:	ldr	x1, [x25, x22]
  415cc0:	cbz	x1, 415d4c <wcrtomb@plt+0x1342c>
  415cc4:	cmp	x1, x20
  415cc8:	b.eq	415dac <wcrtomb@plt+0x1348c>  // b.none
  415ccc:	ldr	x2, [x21, #56]
  415cd0:	mov	x0, x20
  415cd4:	blr	x2
  415cd8:	tst	w0, #0xff
  415cdc:	b.eq	415d44 <wcrtomb@plt+0x13424>  // b.none
  415ce0:	ldr	x0, [x25, x22]
  415ce4:	cbz	w23, 415d50 <wcrtomb@plt+0x13430>
  415ce8:	ldr	x1, [x19, #8]
  415cec:	cbz	x1, 415da4 <wcrtomb@plt+0x13484>
  415cf0:	ldp	x2, x3, [x1]
  415cf4:	stp	x2, x3, [x19]
  415cf8:	str	xzr, [x1]
  415cfc:	ldp	x19, x20, [sp, #16]
  415d00:	ldr	x2, [x21, #72]
  415d04:	str	x2, [x1, #8]
  415d08:	str	x1, [x21, #72]
  415d0c:	ldp	x21, x22, [sp, #32]
  415d10:	ldp	x23, x24, [sp, #48]
  415d14:	ldr	x25, [sp, #64]
  415d18:	ldp	x29, x30, [sp], #80
  415d1c:	ret
  415d20:	ldr	x1, [x2]
  415d24:	cmp	x1, x20
  415d28:	b.eq	415d6c <wcrtomb@plt+0x1344c>  // b.none
  415d2c:	ldr	x2, [x21, #56]
  415d30:	mov	x0, x20
  415d34:	blr	x2
  415d38:	tst	w0, #0xff
  415d3c:	b.ne	415d68 <wcrtomb@plt+0x13448>  // b.any
  415d40:	ldr	x19, [x19, #8]
  415d44:	ldr	x2, [x19, #8]
  415d48:	cbnz	x2, 415d20 <wcrtomb@plt+0x13400>
  415d4c:	mov	x0, #0x0                   	// #0
  415d50:	ldp	x19, x20, [sp, #16]
  415d54:	ldp	x21, x22, [sp, #32]
  415d58:	ldp	x23, x24, [sp, #48]
  415d5c:	ldr	x25, [sp, #64]
  415d60:	ldp	x29, x30, [sp], #80
  415d64:	ret
  415d68:	ldr	x2, [x19, #8]
  415d6c:	ldr	x0, [x2]
  415d70:	cbz	w23, 415d50 <wcrtomb@plt+0x13430>
  415d74:	ldr	x1, [x2, #8]
  415d78:	str	x1, [x19, #8]
  415d7c:	str	xzr, [x2]
  415d80:	ldp	x19, x20, [sp, #16]
  415d84:	ldr	x1, [x21, #72]
  415d88:	str	x1, [x2, #8]
  415d8c:	str	x2, [x21, #72]
  415d90:	ldp	x21, x22, [sp, #32]
  415d94:	ldp	x23, x24, [sp, #48]
  415d98:	ldr	x25, [sp, #64]
  415d9c:	ldp	x29, x30, [sp], #80
  415da0:	ret
  415da4:	str	xzr, [x25, x22]
  415da8:	b	415d50 <wcrtomb@plt+0x13430>
  415dac:	mov	x0, x1
  415db0:	b	415ce4 <wcrtomb@plt+0x133c4>
  415db4:	bl	4025f0 <abort@plt>
  415db8:	stp	x29, x30, [sp, #-64]!
  415dbc:	mov	x29, sp
  415dc0:	stp	x19, x20, [sp, #16]
  415dc4:	mov	x20, x0
  415dc8:	stp	x21, x22, [sp, #32]
  415dcc:	mov	x22, x1
  415dd0:	ldp	x21, x0, [x1]
  415dd4:	stp	x23, x24, [sp, #48]
  415dd8:	and	w23, w2, #0xff
  415ddc:	cmp	x21, x0
  415de0:	b.cc	415df4 <wcrtomb@plt+0x134d4>  // b.lo, b.ul, b.last
  415de4:	b	415e94 <wcrtomb@plt+0x13574>
  415de8:	add	x21, x21, #0x10
  415dec:	cmp	x21, x0
  415df0:	b.cs	415e94 <wcrtomb@plt+0x13574>  // b.hs, b.nlast
  415df4:	ldr	x24, [x21]
  415df8:	cbz	x24, 415de8 <wcrtomb@plt+0x134c8>
  415dfc:	ldr	x19, [x21, #8]
  415e00:	cbz	x19, 415e7c <wcrtomb@plt+0x1355c>
  415e04:	ldr	x1, [x20, #16]
  415e08:	ldr	x2, [x20, #48]
  415e0c:	ldr	x24, [x19]
  415e10:	mov	x0, x24
  415e14:	blr	x2
  415e18:	ldr	x1, [x20, #16]
  415e1c:	cmp	x0, x1
  415e20:	b.cs	415f4c <wcrtomb@plt+0x1362c>  // b.hs, b.nlast
  415e24:	ldr	x2, [x20]
  415e28:	lsl	x0, x0, #4
  415e2c:	ldr	x3, [x19, #8]
  415e30:	add	x4, x2, x0
  415e34:	ldr	x5, [x2, x0]
  415e38:	cbz	x5, 415e54 <wcrtomb@plt+0x13534>
  415e3c:	ldr	x0, [x4, #8]
  415e40:	str	x0, [x19, #8]
  415e44:	str	x19, [x4, #8]
  415e48:	cbz	x3, 415e78 <wcrtomb@plt+0x13558>
  415e4c:	mov	x19, x3
  415e50:	b	415e08 <wcrtomb@plt+0x134e8>
  415e54:	ldr	x4, [x20, #24]
  415e58:	str	x24, [x2, x0]
  415e5c:	add	x0, x4, #0x1
  415e60:	str	x0, [x20, #24]
  415e64:	str	xzr, [x19]
  415e68:	ldr	x0, [x20, #72]
  415e6c:	str	x0, [x19, #8]
  415e70:	str	x19, [x20, #72]
  415e74:	cbnz	x3, 415e4c <wcrtomb@plt+0x1352c>
  415e78:	ldr	x24, [x21]
  415e7c:	str	xzr, [x21, #8]
  415e80:	cbz	w23, 415eb0 <wcrtomb@plt+0x13590>
  415e84:	ldr	x0, [x22, #8]
  415e88:	add	x21, x21, #0x10
  415e8c:	cmp	x21, x0
  415e90:	b.cc	415df4 <wcrtomb@plt+0x134d4>  // b.lo, b.ul, b.last
  415e94:	mov	w23, #0x1                   	// #1
  415e98:	mov	w0, w23
  415e9c:	ldp	x19, x20, [sp, #16]
  415ea0:	ldp	x21, x22, [sp, #32]
  415ea4:	ldp	x23, x24, [sp, #48]
  415ea8:	ldp	x29, x30, [sp], #64
  415eac:	ret
  415eb0:	ldr	x1, [x20, #16]
  415eb4:	mov	x0, x24
  415eb8:	ldr	x2, [x20, #48]
  415ebc:	blr	x2
  415ec0:	ldr	x1, [x20, #16]
  415ec4:	cmp	x0, x1
  415ec8:	b.cs	415f4c <wcrtomb@plt+0x1362c>  // b.hs, b.nlast
  415ecc:	ldr	x1, [x20]
  415ed0:	lsl	x0, x0, #4
  415ed4:	add	x19, x1, x0
  415ed8:	ldr	x2, [x1, x0]
  415edc:	cbz	x2, 415f14 <wcrtomb@plt+0x135f4>
  415ee0:	ldr	x0, [x20, #72]
  415ee4:	cbz	x0, 415f28 <wcrtomb@plt+0x13608>
  415ee8:	ldr	x1, [x0, #8]
  415eec:	str	x1, [x20, #72]
  415ef0:	ldr	x1, [x19, #8]
  415ef4:	stp	x24, x1, [x0]
  415ef8:	str	x0, [x19, #8]
  415efc:	ldr	x1, [x22, #24]
  415f00:	str	xzr, [x21]
  415f04:	sub	x1, x1, #0x1
  415f08:	str	x1, [x22, #24]
  415f0c:	ldr	x0, [x22, #8]
  415f10:	b	415de8 <wcrtomb@plt+0x134c8>
  415f14:	ldr	x2, [x20, #24]
  415f18:	str	x24, [x1, x0]
  415f1c:	add	x0, x2, #0x1
  415f20:	str	x0, [x20, #24]
  415f24:	b	415efc <wcrtomb@plt+0x135dc>
  415f28:	mov	x0, #0x10                  	// #16
  415f2c:	bl	402440 <malloc@plt>
  415f30:	cbnz	x0, 415ef0 <wcrtomb@plt+0x135d0>
  415f34:	mov	w0, w23
  415f38:	ldp	x19, x20, [sp, #16]
  415f3c:	ldp	x21, x22, [sp, #32]
  415f40:	ldp	x23, x24, [sp, #48]
  415f44:	ldp	x29, x30, [sp], #64
  415f48:	ret
  415f4c:	bl	4025f0 <abort@plt>
  415f50:	ldr	x0, [x0, #16]
  415f54:	ret
  415f58:	ldr	x0, [x0, #24]
  415f5c:	ret
  415f60:	ldr	x0, [x0, #32]
  415f64:	ret
  415f68:	ldp	x3, x4, [x0]
  415f6c:	mov	x0, #0x0                   	// #0
  415f70:	cmp	x3, x4
  415f74:	b.cc	415f88 <wcrtomb@plt+0x13668>  // b.lo, b.ul, b.last
  415f78:	b	415fc0 <wcrtomb@plt+0x136a0>
  415f7c:	add	x3, x3, #0x10
  415f80:	cmp	x3, x4
  415f84:	b.cs	415fc0 <wcrtomb@plt+0x136a0>  // b.hs, b.nlast
  415f88:	ldr	x1, [x3]
  415f8c:	cbz	x1, 415f7c <wcrtomb@plt+0x1365c>
  415f90:	ldr	x1, [x3, #8]
  415f94:	mov	x2, #0x1                   	// #1
  415f98:	cbz	x1, 415fac <wcrtomb@plt+0x1368c>
  415f9c:	nop
  415fa0:	ldr	x1, [x1, #8]
  415fa4:	add	x2, x2, #0x1
  415fa8:	cbnz	x1, 415fa0 <wcrtomb@plt+0x13680>
  415fac:	cmp	x0, x2
  415fb0:	add	x3, x3, #0x10
  415fb4:	csel	x0, x0, x2, cs  // cs = hs, nlast
  415fb8:	cmp	x3, x4
  415fbc:	b.cc	415f88 <wcrtomb@plt+0x13668>  // b.lo, b.ul, b.last
  415fc0:	ret
  415fc4:	nop
  415fc8:	ldp	x3, x4, [x0]
  415fcc:	mov	x6, x0
  415fd0:	mov	x2, #0x0                   	// #0
  415fd4:	mov	x5, #0x0                   	// #0
  415fd8:	cmp	x3, x4
  415fdc:	b.cc	415ff0 <wcrtomb@plt+0x136d0>  // b.lo, b.ul, b.last
  415fe0:	b	416020 <wcrtomb@plt+0x13700>
  415fe4:	add	x3, x3, #0x10
  415fe8:	cmp	x3, x4
  415fec:	b.cs	416020 <wcrtomb@plt+0x13700>  // b.hs, b.nlast
  415ff0:	ldr	x1, [x3]
  415ff4:	cbz	x1, 415fe4 <wcrtomb@plt+0x136c4>
  415ff8:	ldr	x1, [x3, #8]
  415ffc:	add	x5, x5, #0x1
  416000:	add	x2, x2, #0x1
  416004:	cbz	x1, 415fe4 <wcrtomb@plt+0x136c4>
  416008:	ldr	x1, [x1, #8]
  41600c:	add	x2, x2, #0x1
  416010:	cbnz	x1, 416008 <wcrtomb@plt+0x136e8>
  416014:	add	x3, x3, #0x10
  416018:	cmp	x3, x4
  41601c:	b.cc	415ff0 <wcrtomb@plt+0x136d0>  // b.lo, b.ul, b.last
  416020:	ldr	x1, [x6, #24]
  416024:	mov	w0, #0x0                   	// #0
  416028:	cmp	x1, x5
  41602c:	b.eq	416034 <wcrtomb@plt+0x13714>  // b.none
  416030:	ret
  416034:	ldr	x0, [x6, #32]
  416038:	cmp	x0, x2
  41603c:	cset	w0, eq  // eq = none
  416040:	ret
  416044:	nop
  416048:	stp	x29, x30, [sp, #-48]!
  41604c:	mov	x29, sp
  416050:	ldp	x4, x5, [x0]
  416054:	stp	x19, x20, [sp, #16]
  416058:	mov	x20, x1
  41605c:	stp	x21, x22, [sp, #32]
  416060:	mov	x19, #0x0                   	// #0
  416064:	ldp	x21, x22, [x0, #16]
  416068:	cmp	x4, x5
  41606c:	ldr	x2, [x0, #32]
  416070:	b.cc	416084 <wcrtomb@plt+0x13764>  // b.lo, b.ul, b.last
  416074:	b	4160b8 <wcrtomb@plt+0x13798>
  416078:	add	x4, x4, #0x10
  41607c:	cmp	x4, x5
  416080:	b.cs	4160b8 <wcrtomb@plt+0x13798>  // b.hs, b.nlast
  416084:	ldr	x0, [x4]
  416088:	cbz	x0, 416078 <wcrtomb@plt+0x13758>
  41608c:	ldr	x0, [x4, #8]
  416090:	mov	x3, #0x1                   	// #1
  416094:	cbz	x0, 4160a4 <wcrtomb@plt+0x13784>
  416098:	ldr	x0, [x0, #8]
  41609c:	add	x3, x3, #0x1
  4160a0:	cbnz	x0, 416098 <wcrtomb@plt+0x13778>
  4160a4:	cmp	x19, x3
  4160a8:	add	x4, x4, #0x10
  4160ac:	csel	x19, x19, x3, cs  // cs = hs, nlast
  4160b0:	cmp	x4, x5
  4160b4:	b.cc	416084 <wcrtomb@plt+0x13764>  // b.lo, b.ul, b.last
  4160b8:	mov	x0, x20
  4160bc:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4160c0:	add	x1, x1, #0xb90
  4160c4:	bl	4028d0 <fprintf@plt>
  4160c8:	mov	x2, x21
  4160cc:	mov	x0, x20
  4160d0:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4160d4:	add	x1, x1, #0xba8
  4160d8:	bl	4028d0 <fprintf@plt>
  4160dc:	ucvtf	d1, x22
  4160e0:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  4160e4:	fmov	d2, x0
  4160e8:	ucvtf	d0, x21
  4160ec:	mov	x2, x22
  4160f0:	mov	x0, x20
  4160f4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4160f8:	add	x1, x1, #0xbc0
  4160fc:	fmul	d1, d1, d2
  416100:	fdiv	d0, d1, d0
  416104:	bl	4028d0 <fprintf@plt>
  416108:	mov	x2, x19
  41610c:	mov	x0, x20
  416110:	ldp	x19, x20, [sp, #16]
  416114:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  416118:	ldp	x21, x22, [sp, #32]
  41611c:	add	x1, x1, #0xbe8
  416120:	ldp	x29, x30, [sp], #48
  416124:	b	4028d0 <fprintf@plt>
  416128:	stp	x29, x30, [sp, #-48]!
  41612c:	mov	x29, sp
  416130:	str	x21, [sp, #32]
  416134:	mov	x21, x0
  416138:	mov	x0, x1
  41613c:	stp	x19, x20, [sp, #16]
  416140:	mov	x20, x1
  416144:	ldr	x1, [x21, #16]
  416148:	ldr	x2, [x21, #48]
  41614c:	blr	x2
  416150:	ldr	x1, [x21, #16]
  416154:	cmp	x0, x1
  416158:	b.cs	4161c8 <wcrtomb@plt+0x138a8>  // b.hs, b.nlast
  41615c:	ldr	x1, [x21]
  416160:	lsl	x0, x0, #4
  416164:	add	x19, x1, x0
  416168:	ldr	x1, [x1, x0]
  41616c:	cbnz	x1, 416178 <wcrtomb@plt+0x13858>
  416170:	b	41619c <wcrtomb@plt+0x1387c>
  416174:	ldr	x1, [x19]
  416178:	cmp	x1, x20
  41617c:	b.eq	4161b4 <wcrtomb@plt+0x13894>  // b.none
  416180:	ldr	x2, [x21, #56]
  416184:	mov	x0, x20
  416188:	blr	x2
  41618c:	tst	w0, #0xff
  416190:	b.ne	4161b0 <wcrtomb@plt+0x13890>  // b.any
  416194:	ldr	x19, [x19, #8]
  416198:	cbnz	x19, 416174 <wcrtomb@plt+0x13854>
  41619c:	mov	x0, #0x0                   	// #0
  4161a0:	ldp	x19, x20, [sp, #16]
  4161a4:	ldr	x21, [sp, #32]
  4161a8:	ldp	x29, x30, [sp], #48
  4161ac:	ret
  4161b0:	ldr	x20, [x19]
  4161b4:	mov	x0, x20
  4161b8:	ldp	x19, x20, [sp, #16]
  4161bc:	ldr	x21, [sp, #32]
  4161c0:	ldp	x29, x30, [sp], #48
  4161c4:	ret
  4161c8:	bl	4025f0 <abort@plt>
  4161cc:	nop
  4161d0:	ldr	x1, [x0, #32]
  4161d4:	cbz	x1, 416200 <wcrtomb@plt+0x138e0>
  4161d8:	ldp	x1, x2, [x0]
  4161dc:	cmp	x1, x2
  4161e0:	b.cc	4161f4 <wcrtomb@plt+0x138d4>  // b.lo, b.ul, b.last
  4161e4:	b	416208 <wcrtomb@plt+0x138e8>
  4161e8:	add	x1, x1, #0x10
  4161ec:	cmp	x1, x2
  4161f0:	b.cs	416208 <wcrtomb@plt+0x138e8>  // b.hs, b.nlast
  4161f4:	ldr	x0, [x1]
  4161f8:	cbz	x0, 4161e8 <wcrtomb@plt+0x138c8>
  4161fc:	ret
  416200:	mov	x0, #0x0                   	// #0
  416204:	ret
  416208:	stp	x29, x30, [sp, #-16]!
  41620c:	mov	x29, sp
  416210:	bl	4025f0 <abort@plt>
  416214:	nop
  416218:	stp	x29, x30, [sp, #-32]!
  41621c:	mov	x29, sp
  416220:	stp	x19, x20, [sp, #16]
  416224:	mov	x20, x0
  416228:	mov	x19, x1
  41622c:	mov	x0, x1
  416230:	ldr	x1, [x20, #16]
  416234:	ldr	x2, [x20, #48]
  416238:	blr	x2
  41623c:	ldr	x1, [x20, #16]
  416240:	cmp	x0, x1
  416244:	b.cs	4162a8 <wcrtomb@plt+0x13988>  // b.hs, b.nlast
  416248:	ldr	x3, [x20]
  41624c:	add	x3, x3, x0, lsl #4
  416250:	mov	x2, x3
  416254:	b	41625c <wcrtomb@plt+0x1393c>
  416258:	cbz	x2, 41626c <wcrtomb@plt+0x1394c>
  41625c:	ldp	x4, x2, [x2]
  416260:	cmp	x4, x19
  416264:	b.ne	416258 <wcrtomb@plt+0x13938>  // b.any
  416268:	cbnz	x2, 416298 <wcrtomb@plt+0x13978>
  41626c:	ldr	x1, [x20, #8]
  416270:	b	41627c <wcrtomb@plt+0x1395c>
  416274:	ldr	x0, [x3]
  416278:	cbnz	x0, 41628c <wcrtomb@plt+0x1396c>
  41627c:	add	x3, x3, #0x10
  416280:	cmp	x1, x3
  416284:	b.hi	416274 <wcrtomb@plt+0x13954>  // b.pmore
  416288:	mov	x0, #0x0                   	// #0
  41628c:	ldp	x19, x20, [sp, #16]
  416290:	ldp	x29, x30, [sp], #32
  416294:	ret
  416298:	ldr	x0, [x2]
  41629c:	ldp	x19, x20, [sp, #16]
  4162a0:	ldp	x29, x30, [sp], #32
  4162a4:	ret
  4162a8:	bl	4025f0 <abort@plt>
  4162ac:	nop
  4162b0:	ldp	x5, x3, [x0]
  4162b4:	mov	x6, x0
  4162b8:	cmp	x3, x5
  4162bc:	b.ls	41630c <wcrtomb@plt+0x139ec>  // b.plast
  4162c0:	sub	x4, x1, #0x8
  4162c4:	mov	x0, #0x0                   	// #0
  4162c8:	ldr	x1, [x5]
  4162cc:	cbnz	x1, 4162e0 <wcrtomb@plt+0x139c0>
  4162d0:	add	x5, x5, #0x10
  4162d4:	cmp	x5, x3
  4162d8:	b.cc	4162c8 <wcrtomb@plt+0x139a8>  // b.lo, b.ul, b.last
  4162dc:	ret
  4162e0:	mov	x1, x5
  4162e4:	nop
  4162e8:	cmp	x2, x0
  4162ec:	b.ls	4162dc <wcrtomb@plt+0x139bc>  // b.plast
  4162f0:	add	x0, x0, #0x1
  4162f4:	ldr	x3, [x1]
  4162f8:	str	x3, [x4, x0, lsl #3]
  4162fc:	ldr	x1, [x1, #8]
  416300:	cbnz	x1, 4162e8 <wcrtomb@plt+0x139c8>
  416304:	ldr	x3, [x6, #8]
  416308:	b	4162d0 <wcrtomb@plt+0x139b0>
  41630c:	mov	x0, #0x0                   	// #0
  416310:	ret
  416314:	nop
  416318:	stp	x29, x30, [sp, #-64]!
  41631c:	mov	x29, sp
  416320:	stp	x21, x22, [sp, #32]
  416324:	mov	x21, x1
  416328:	stp	x23, x24, [sp, #48]
  41632c:	ldp	x23, x1, [x0]
  416330:	stp	x19, x20, [sp, #16]
  416334:	cmp	x1, x23
  416338:	b.ls	4163a4 <wcrtomb@plt+0x13a84>  // b.plast
  41633c:	mov	x24, x0
  416340:	mov	x22, x2
  416344:	mov	x20, #0x0                   	// #0
  416348:	ldr	x0, [x23]
  41634c:	cbnz	x0, 416374 <wcrtomb@plt+0x13a54>
  416350:	add	x23, x23, #0x10
  416354:	cmp	x23, x1
  416358:	b.cc	416348 <wcrtomb@plt+0x13a28>  // b.lo, b.ul, b.last
  41635c:	mov	x0, x20
  416360:	ldp	x19, x20, [sp, #16]
  416364:	ldp	x21, x22, [sp, #32]
  416368:	ldp	x23, x24, [sp, #48]
  41636c:	ldp	x29, x30, [sp], #64
  416370:	ret
  416374:	mov	x19, x23
  416378:	b	416380 <wcrtomb@plt+0x13a60>
  41637c:	ldr	x0, [x19]
  416380:	mov	x1, x22
  416384:	blr	x21
  416388:	tst	w0, #0xff
  41638c:	b.eq	41635c <wcrtomb@plt+0x13a3c>  // b.none
  416390:	ldr	x19, [x19, #8]
  416394:	add	x20, x20, #0x1
  416398:	cbnz	x19, 41637c <wcrtomb@plt+0x13a5c>
  41639c:	ldr	x1, [x24, #8]
  4163a0:	b	416350 <wcrtomb@plt+0x13a30>
  4163a4:	mov	x20, #0x0                   	// #0
  4163a8:	b	41635c <wcrtomb@plt+0x13a3c>
  4163ac:	nop
  4163b0:	ldrb	w4, [x0]
  4163b4:	mov	x2, #0x0                   	// #0
  4163b8:	cbz	w4, 4163dc <wcrtomb@plt+0x13abc>
  4163bc:	nop
  4163c0:	lsl	x3, x2, #5
  4163c4:	sub	x2, x3, x2
  4163c8:	add	x2, x2, w4, uxtb
  4163cc:	ldrb	w4, [x0, #1]!
  4163d0:	udiv	x3, x2, x1
  4163d4:	msub	x2, x3, x1, x2
  4163d8:	cbnz	w4, 4163c0 <wcrtomb@plt+0x13aa0>
  4163dc:	mov	x0, x2
  4163e0:	ret
  4163e4:	nop
  4163e8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4163ec:	add	x1, x1, #0xc08
  4163f0:	ldp	x2, x3, [x1]
  4163f4:	stp	x2, x3, [x0]
  4163f8:	ldr	w1, [x1, #16]
  4163fc:	str	w1, [x0, #16]
  416400:	ret
  416404:	nop
  416408:	stp	x29, x30, [sp, #-64]!
  41640c:	cmp	x2, #0x0
  416410:	mov	x29, sp
  416414:	stp	x23, x24, [sp, #48]
  416418:	mov	x23, x2
  41641c:	adrp	x2, 415000 <wcrtomb@plt+0x126e0>
  416420:	add	x2, x2, #0xc48
  416424:	stp	x19, x20, [sp, #16]
  416428:	csel	x23, x2, x23, eq  // eq = none
  41642c:	cmp	x3, #0x0
  416430:	adrp	x2, 415000 <wcrtomb@plt+0x126e0>
  416434:	add	x2, x2, #0xc58
  416438:	mov	x19, x0
  41643c:	mov	x20, x4
  416440:	csel	x24, x2, x3, eq  // eq = none
  416444:	mov	x0, #0x50                  	// #80
  416448:	stp	x21, x22, [sp, #32]
  41644c:	mov	x22, x1
  416450:	bl	402440 <malloc@plt>
  416454:	mov	x21, x0
  416458:	cbz	x0, 416514 <wcrtomb@plt+0x13bf4>
  41645c:	cbz	x22, 41652c <wcrtomb@plt+0x13c0c>
  416460:	str	x22, [x21, #40]
  416464:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  416468:	add	x0, x0, #0xc08
  41646c:	cmp	x22, x0
  416470:	b.eq	416538 <wcrtomb@plt+0x13c18>  // b.none
  416474:	mov	w0, #0xcccd                	// #52429
  416478:	ldr	s2, [x22, #8]
  41647c:	movk	w0, #0x3dcc, lsl #16
  416480:	fmov	s1, w0
  416484:	fcmpe	s2, s1
  416488:	b.le	416508 <wcrtomb@plt+0x13be8>
  41648c:	mov	w0, #0x6666                	// #26214
  416490:	movk	w0, #0x3f66, lsl #16
  416494:	fmov	s0, w0
  416498:	fcmpe	s2, s0
  41649c:	b.pl	416508 <wcrtomb@plt+0x13be8>  // b.nfrst
  4164a0:	mov	w0, #0xcccd                	// #52429
  4164a4:	ldr	s3, [x22, #12]
  4164a8:	movk	w0, #0x3f8c, lsl #16
  4164ac:	fmov	s0, w0
  4164b0:	fcmpe	s3, s0
  4164b4:	b.le	416508 <wcrtomb@plt+0x13be8>
  4164b8:	ldr	s0, [x22]
  4164bc:	fcmpe	s0, #0.0
  4164c0:	b.lt	416508 <wcrtomb@plt+0x13be8>  // b.tstop
  4164c4:	fadd	s1, s0, s1
  4164c8:	ldr	s0, [x22, #4]
  4164cc:	fcmpe	s1, s0
  4164d0:	b.pl	416508 <wcrtomb@plt+0x13be8>  // b.nfrst
  4164d4:	fmov	s3, #1.000000000000000000e+00
  4164d8:	fcmpe	s0, s3
  4164dc:	b.hi	416508 <wcrtomb@plt+0x13be8>  // b.pmore
  4164e0:	fcmpe	s2, s1
  4164e4:	b.le	416508 <wcrtomb@plt+0x13be8>
  4164e8:	ldrb	w0, [x22, #16]
  4164ec:	cbnz	w0, 416560 <wcrtomb@plt+0x13c40>
  4164f0:	ucvtf	s0, x19
  4164f4:	mov	w0, #0x5f800000            	// #1602224128
  4164f8:	fmov	s1, w0
  4164fc:	fdiv	s0, s0, s2
  416500:	fcmpe	s0, s1
  416504:	b.lt	41655c <wcrtomb@plt+0x13c3c>  // b.tstop
  416508:	mov	x0, x21
  41650c:	mov	x21, #0x0                   	// #0
  416510:	bl	4026b0 <free@plt>
  416514:	mov	x0, x21
  416518:	ldp	x19, x20, [sp, #16]
  41651c:	ldp	x21, x22, [sp, #32]
  416520:	ldp	x23, x24, [sp, #48]
  416524:	ldp	x29, x30, [sp], #64
  416528:	ret
  41652c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  416530:	add	x0, x0, #0xc08
  416534:	str	x0, [x21, #40]
  416538:	ucvtf	s0, x19
  41653c:	mov	w0, #0xcccd                	// #52429
  416540:	movk	w0, #0x3f4c, lsl #16
  416544:	fmov	s2, w0
  416548:	mov	w0, #0x5f800000            	// #1602224128
  41654c:	fmov	s1, w0
  416550:	fdiv	s0, s0, s2
  416554:	fcmpe	s0, s1
  416558:	b.ge	416508 <wcrtomb@plt+0x13be8>  // b.tcont
  41655c:	fcvtzu	x19, s0
  416560:	cmp	x19, #0xa
  416564:	mov	x0, #0xa                   	// #10
  416568:	csel	x19, x19, x0, cs  // cs = hs, nlast
  41656c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  416570:	orr	x19, x19, #0x1
  416574:	movk	x4, #0xaaab
  416578:	cmn	x19, #0x1
  41657c:	b.eq	416508 <wcrtomb@plt+0x13be8>  // b.none
  416580:	umulh	x1, x19, x4
  416584:	cmp	x19, #0x9
  416588:	and	x0, x1, #0xfffffffffffffffe
  41658c:	add	x1, x0, x1, lsr #1
  416590:	sub	x1, x19, x1
  416594:	b.ls	4165cc <wcrtomb@plt+0x13cac>  // b.plast
  416598:	cbz	x1, 4165d0 <wcrtomb@plt+0x13cb0>
  41659c:	mov	x3, #0x10                  	// #16
  4165a0:	mov	x2, #0x9                   	// #9
  4165a4:	mov	x0, #0x3                   	// #3
  4165a8:	b	4165b0 <wcrtomb@plt+0x13c90>
  4165ac:	cbz	x1, 4165d0 <wcrtomb@plt+0x13cb0>
  4165b0:	add	x0, x0, #0x2
  4165b4:	add	x2, x2, x3
  4165b8:	cmp	x2, x19
  4165bc:	add	x3, x3, #0x8
  4165c0:	udiv	x1, x19, x0
  4165c4:	msub	x1, x1, x0, x19
  4165c8:	b.cc	4165ac <wcrtomb@plt+0x13c8c>  // b.lo, b.ul, b.last
  4165cc:	cbnz	x1, 4165e0 <wcrtomb@plt+0x13cc0>
  4165d0:	add	x19, x19, #0x2
  4165d4:	cmn	x19, #0x1
  4165d8:	b.ne	416580 <wcrtomb@plt+0x13c60>  // b.any
  4165dc:	b	416508 <wcrtomb@plt+0x13be8>
  4165e0:	cmp	xzr, x19, lsr #61
  4165e4:	cset	x0, ne  // ne = any
  4165e8:	tbnz	x19, #60, 416508 <wcrtomb@plt+0x13be8>
  4165ec:	cbnz	x0, 416508 <wcrtomb@plt+0x13be8>
  4165f0:	str	x19, [x21, #16]
  4165f4:	mov	x0, x19
  4165f8:	mov	x1, #0x10                  	// #16
  4165fc:	bl	402520 <calloc@plt>
  416600:	str	x0, [x21]
  416604:	cbz	x0, 416508 <wcrtomb@plt+0x13be8>
  416608:	add	x19, x0, x19, lsl #4
  41660c:	str	x19, [x21, #8]
  416610:	stp	xzr, xzr, [x21, #24]
  416614:	mov	x0, x21
  416618:	stp	x23, x24, [x21, #48]
  41661c:	stp	x20, xzr, [x21, #64]
  416620:	ldp	x19, x20, [sp, #16]
  416624:	ldp	x21, x22, [sp, #32]
  416628:	ldp	x23, x24, [sp, #48]
  41662c:	ldp	x29, x30, [sp], #64
  416630:	ret
  416634:	nop
  416638:	stp	x29, x30, [sp, #-48]!
  41663c:	mov	x29, sp
  416640:	ldr	x1, [x0, #8]
  416644:	str	x21, [sp, #32]
  416648:	ldr	x21, [x0]
  41664c:	stp	x19, x20, [sp, #16]
  416650:	mov	x20, x0
  416654:	cmp	x21, x1
  416658:	b.cc	41666c <wcrtomb@plt+0x13d4c>  // b.lo, b.ul, b.last
  41665c:	b	4166c4 <wcrtomb@plt+0x13da4>
  416660:	add	x21, x21, #0x10
  416664:	cmp	x1, x21
  416668:	b.ls	4166c4 <wcrtomb@plt+0x13da4>  // b.plast
  41666c:	ldr	x0, [x21]
  416670:	cbz	x0, 416660 <wcrtomb@plt+0x13d40>
  416674:	ldr	x19, [x21, #8]
  416678:	ldr	x1, [x20, #64]
  41667c:	cbz	x19, 4166a4 <wcrtomb@plt+0x13d84>
  416680:	cbz	x1, 4166d8 <wcrtomb@plt+0x13db8>
  416684:	ldr	x0, [x19]
  416688:	blr	x1
  41668c:	ldr	x2, [x19, #8]
  416690:	ldp	x1, x0, [x20, #64]
  416694:	stp	xzr, x0, [x19]
  416698:	str	x19, [x20, #72]
  41669c:	mov	x19, x2
  4166a0:	cbnz	x2, 416680 <wcrtomb@plt+0x13d60>
  4166a4:	cbz	x1, 4166b0 <wcrtomb@plt+0x13d90>
  4166a8:	ldr	x0, [x21]
  4166ac:	blr	x1
  4166b0:	stp	xzr, xzr, [x21]
  4166b4:	add	x21, x21, #0x10
  4166b8:	ldr	x1, [x20, #8]
  4166bc:	cmp	x1, x21
  4166c0:	b.hi	41666c <wcrtomb@plt+0x13d4c>  // b.pmore
  4166c4:	stp	xzr, xzr, [x20, #24]
  4166c8:	ldp	x19, x20, [sp, #16]
  4166cc:	ldr	x21, [sp, #32]
  4166d0:	ldp	x29, x30, [sp], #48
  4166d4:	ret
  4166d8:	ldr	x0, [x20, #72]
  4166dc:	mov	x1, x19
  4166e0:	str	xzr, [x19]
  4166e4:	ldr	x19, [x19, #8]
  4166e8:	str	x0, [x1, #8]
  4166ec:	str	x1, [x20, #72]
  4166f0:	mov	x0, x1
  4166f4:	cbnz	x19, 4166dc <wcrtomb@plt+0x13dbc>
  4166f8:	b	4166b0 <wcrtomb@plt+0x13d90>
  4166fc:	nop
  416700:	stp	x29, x30, [sp, #-48]!
  416704:	mov	x29, sp
  416708:	str	x21, [sp, #32]
  41670c:	mov	x21, x0
  416710:	ldr	x0, [x0, #64]
  416714:	stp	x19, x20, [sp, #16]
  416718:	ldp	x20, x1, [x21]
  41671c:	cbz	x0, 416778 <wcrtomb@plt+0x13e58>
  416720:	ldr	x0, [x21, #32]
  416724:	cbz	x0, 416778 <wcrtomb@plt+0x13e58>
  416728:	cmp	x20, x1
  41672c:	b.cc	416740 <wcrtomb@plt+0x13e20>  // b.lo, b.ul, b.last
  416730:	b	4167a8 <wcrtomb@plt+0x13e88>
  416734:	add	x20, x20, #0x10
  416738:	cmp	x20, x1
  41673c:	b.cs	416774 <wcrtomb@plt+0x13e54>  // b.hs, b.nlast
  416740:	ldr	x0, [x20]
  416744:	cbz	x0, 416734 <wcrtomb@plt+0x13e14>
  416748:	mov	x19, x20
  41674c:	b	416754 <wcrtomb@plt+0x13e34>
  416750:	ldr	x0, [x19]
  416754:	ldr	x1, [x21, #64]
  416758:	blr	x1
  41675c:	ldr	x19, [x19, #8]
  416760:	cbnz	x19, 416750 <wcrtomb@plt+0x13e30>
  416764:	ldr	x1, [x21, #8]
  416768:	add	x20, x20, #0x10
  41676c:	cmp	x20, x1
  416770:	b.cc	416740 <wcrtomb@plt+0x13e20>  // b.lo, b.ul, b.last
  416774:	ldr	x20, [x21]
  416778:	cmp	x1, x20
  41677c:	b.ls	4167a8 <wcrtomb@plt+0x13e88>  // b.plast
  416780:	ldr	x19, [x20, #8]
  416784:	cbz	x19, 41679c <wcrtomb@plt+0x13e7c>
  416788:	mov	x0, x19
  41678c:	ldr	x19, [x19, #8]
  416790:	bl	4026b0 <free@plt>
  416794:	cbnz	x19, 416788 <wcrtomb@plt+0x13e68>
  416798:	ldr	x1, [x21, #8]
  41679c:	add	x20, x20, #0x10
  4167a0:	cmp	x20, x1
  4167a4:	b.cc	416780 <wcrtomb@plt+0x13e60>  // b.lo, b.ul, b.last
  4167a8:	ldr	x19, [x21, #72]
  4167ac:	cbz	x19, 4167c0 <wcrtomb@plt+0x13ea0>
  4167b0:	mov	x0, x19
  4167b4:	ldr	x19, [x19, #8]
  4167b8:	bl	4026b0 <free@plt>
  4167bc:	cbnz	x19, 4167b0 <wcrtomb@plt+0x13e90>
  4167c0:	ldr	x0, [x21]
  4167c4:	bl	4026b0 <free@plt>
  4167c8:	mov	x0, x21
  4167cc:	ldp	x19, x20, [sp, #16]
  4167d0:	ldr	x21, [sp, #32]
  4167d4:	ldp	x29, x30, [sp], #48
  4167d8:	b	4026b0 <free@plt>
  4167dc:	nop
  4167e0:	stp	x29, x30, [sp, #-128]!
  4167e4:	mov	x29, sp
  4167e8:	str	x21, [sp, #32]
  4167ec:	ldr	x21, [x0, #40]
  4167f0:	stp	x19, x20, [sp, #16]
  4167f4:	mov	x20, x0
  4167f8:	ldrb	w0, [x21, #16]
  4167fc:	cbnz	w0, 416820 <wcrtomb@plt+0x13f00>
  416800:	ucvtf	s0, x1
  416804:	ldr	s2, [x21, #8]
  416808:	mov	w0, #0x5f800000            	// #1602224128
  41680c:	fmov	s1, w0
  416810:	fdiv	s0, s0, s2
  416814:	fcmpe	s0, s1
  416818:	fcvtzu	x1, s0
  41681c:	b.ge	41689c <wcrtomb@plt+0x13f7c>  // b.tcont
  416820:	cmp	x1, #0xa
  416824:	mov	x19, #0xa                   	// #10
  416828:	csel	x1, x1, x19, cs  // cs = hs, nlast
  41682c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  416830:	orr	x19, x1, #0x1
  416834:	movk	x4, #0xaaab
  416838:	cmn	x19, #0x1
  41683c:	b.eq	41689c <wcrtomb@plt+0x13f7c>  // b.none
  416840:	umulh	x1, x19, x4
  416844:	cmp	x19, #0x9
  416848:	and	x0, x1, #0xfffffffffffffffe
  41684c:	add	x1, x0, x1, lsr #1
  416850:	sub	x1, x19, x1
  416854:	b.ls	41688c <wcrtomb@plt+0x13f6c>  // b.plast
  416858:	cbz	x1, 416890 <wcrtomb@plt+0x13f70>
  41685c:	mov	x3, #0x10                  	// #16
  416860:	mov	x2, #0x9                   	// #9
  416864:	mov	x0, #0x3                   	// #3
  416868:	b	416874 <wcrtomb@plt+0x13f54>
  41686c:	add	x3, x3, #0x8
  416870:	cbz	x1, 416890 <wcrtomb@plt+0x13f70>
  416874:	add	x0, x0, #0x2
  416878:	add	x2, x2, x3
  41687c:	cmp	x2, x19
  416880:	udiv	x1, x19, x0
  416884:	msub	x1, x1, x0, x19
  416888:	b.cc	41686c <wcrtomb@plt+0x13f4c>  // b.lo, b.ul, b.last
  41688c:	cbnz	x1, 4168b4 <wcrtomb@plt+0x13f94>
  416890:	add	x19, x19, #0x2
  416894:	cmn	x19, #0x1
  416898:	b.ne	416840 <wcrtomb@plt+0x13f20>  // b.any
  41689c:	mov	w19, #0x0                   	// #0
  4168a0:	mov	w0, w19
  4168a4:	ldp	x19, x20, [sp, #16]
  4168a8:	ldr	x21, [sp, #32]
  4168ac:	ldp	x29, x30, [sp], #128
  4168b0:	ret
  4168b4:	cmp	xzr, x19, lsr #61
  4168b8:	cset	x0, ne  // ne = any
  4168bc:	tbnz	x19, #60, 41689c <wcrtomb@plt+0x13f7c>
  4168c0:	cbnz	x0, 41689c <wcrtomb@plt+0x13f7c>
  4168c4:	ldr	x0, [x20, #16]
  4168c8:	cmp	x0, x19
  4168cc:	b.eq	416970 <wcrtomb@plt+0x14050>  // b.none
  4168d0:	mov	x0, x19
  4168d4:	mov	x1, #0x10                  	// #16
  4168d8:	bl	402520 <calloc@plt>
  4168dc:	str	x0, [sp, #48]
  4168e0:	cbz	x0, 41689c <wcrtomb@plt+0x13f7c>
  4168e4:	ldp	x5, x4, [x20, #64]
  4168e8:	add	x3, x0, x19, lsl #4
  4168ec:	ldr	q0, [x20, #48]
  4168f0:	add	x0, sp, #0x30
  4168f4:	mov	x1, x20
  4168f8:	mov	w2, #0x0                   	// #0
  4168fc:	stp	x3, x19, [sp, #56]
  416900:	stp	xzr, xzr, [sp, #72]
  416904:	str	x21, [sp, #88]
  416908:	str	q0, [sp, #96]
  41690c:	stp	x5, x4, [sp, #112]
  416910:	bl	415db8 <wcrtomb@plt+0x13498>
  416914:	ands	w19, w0, #0xff
  416918:	b.ne	416988 <wcrtomb@plt+0x14068>  // b.any
  41691c:	ldr	x0, [sp, #120]
  416920:	str	x0, [x20, #72]
  416924:	add	x1, sp, #0x30
  416928:	mov	x0, x20
  41692c:	mov	w2, #0x1                   	// #1
  416930:	bl	415db8 <wcrtomb@plt+0x13498>
  416934:	tst	w0, #0xff
  416938:	b.eq	4169b4 <wcrtomb@plt+0x14094>  // b.none
  41693c:	add	x1, sp, #0x30
  416940:	mov	x0, x20
  416944:	mov	w2, #0x0                   	// #0
  416948:	bl	415db8 <wcrtomb@plt+0x13498>
  41694c:	tst	w0, #0xff
  416950:	b.eq	4169b4 <wcrtomb@plt+0x14094>  // b.none
  416954:	ldr	x0, [sp, #48]
  416958:	bl	4026b0 <free@plt>
  41695c:	mov	w0, w19
  416960:	ldp	x19, x20, [sp, #16]
  416964:	ldr	x21, [sp, #32]
  416968:	ldp	x29, x30, [sp], #128
  41696c:	ret
  416970:	mov	w19, #0x1                   	// #1
  416974:	mov	w0, w19
  416978:	ldp	x19, x20, [sp, #16]
  41697c:	ldr	x21, [sp, #32]
  416980:	ldp	x29, x30, [sp], #128
  416984:	ret
  416988:	ldr	x0, [x20]
  41698c:	bl	4026b0 <free@plt>
  416990:	ldp	q1, q0, [sp, #48]
  416994:	ldr	x0, [sp, #120]
  416998:	str	x0, [x20, #72]
  41699c:	stp	q1, q0, [x20]
  4169a0:	mov	w0, w19
  4169a4:	ldp	x19, x20, [sp, #16]
  4169a8:	ldr	x21, [sp, #32]
  4169ac:	ldp	x29, x30, [sp], #128
  4169b0:	ret
  4169b4:	bl	4025f0 <abort@plt>
  4169b8:	stp	x29, x30, [sp, #-64]!
  4169bc:	mov	x29, sp
  4169c0:	stp	x19, x20, [sp, #16]
  4169c4:	str	x21, [sp, #32]
  4169c8:	cbz	x1, 416b38 <wcrtomb@plt+0x14218>
  4169cc:	mov	w3, #0x0                   	// #0
  4169d0:	mov	x21, x2
  4169d4:	mov	x19, x0
  4169d8:	mov	x20, x1
  4169dc:	add	x2, sp, #0x38
  4169e0:	bl	415c68 <wcrtomb@plt+0x13348>
  4169e4:	mov	x3, x0
  4169e8:	cbz	x0, 416a08 <wcrtomb@plt+0x140e8>
  4169ec:	mov	w0, #0x0                   	// #0
  4169f0:	cbz	x21, 4169f8 <wcrtomb@plt+0x140d8>
  4169f4:	str	x3, [x21]
  4169f8:	ldp	x19, x20, [sp, #16]
  4169fc:	ldr	x21, [sp, #32]
  416a00:	ldp	x29, x30, [sp], #64
  416a04:	ret
  416a08:	ldr	x0, [x19, #16]
  416a0c:	ldr	x1, [x19, #40]
  416a10:	ucvtf	s0, x0
  416a14:	ldr	x0, [x19, #24]
  416a18:	ldr	s2, [x1, #8]
  416a1c:	ucvtf	s1, x0
  416a20:	fmul	s3, s2, s0
  416a24:	fcmpe	s1, s3
  416a28:	b.gt	416a74 <wcrtomb@plt+0x14154>
  416a2c:	ldr	x21, [sp, #56]
  416a30:	ldr	x0, [x21]
  416a34:	cbz	x0, 416b70 <wcrtomb@plt+0x14250>
  416a38:	ldr	x0, [x19, #72]
  416a3c:	cbz	x0, 416b9c <wcrtomb@plt+0x1427c>
  416a40:	ldr	x1, [x0, #8]
  416a44:	str	x1, [x19, #72]
  416a48:	ldr	x2, [x21, #8]
  416a4c:	ldr	x1, [x19, #32]
  416a50:	stp	x20, x2, [x0]
  416a54:	str	x0, [x21, #8]
  416a58:	add	x1, x1, #0x1
  416a5c:	str	x1, [x19, #32]
  416a60:	mov	w0, #0x1                   	// #1
  416a64:	ldp	x19, x20, [sp, #16]
  416a68:	ldr	x21, [sp, #32]
  416a6c:	ldp	x29, x30, [sp], #64
  416a70:	ret
  416a74:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x12510>
  416a78:	add	x2, x2, #0xc08
  416a7c:	cmp	x1, x2
  416a80:	b.eq	416bbc <wcrtomb@plt+0x1429c>  // b.none
  416a84:	mov	w0, #0xcccd                	// #52429
  416a88:	movk	w0, #0x3dcc, lsl #16
  416a8c:	fmov	s3, w0
  416a90:	fcmpe	s2, s3
  416a94:	b.le	416b3c <wcrtomb@plt+0x1421c>
  416a98:	mov	w0, #0x6666                	// #26214
  416a9c:	movk	w0, #0x3f66, lsl #16
  416aa0:	fmov	s4, w0
  416aa4:	fcmpe	s2, s4
  416aa8:	b.pl	416b3c <wcrtomb@plt+0x1421c>  // b.nfrst
  416aac:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  416ab0:	ldr	s5, [x1, #12]
  416ab4:	ldr	s4, [x0, #3072]
  416ab8:	fcmpe	s5, s4
  416abc:	b.le	416b3c <wcrtomb@plt+0x1421c>
  416ac0:	ldr	s4, [x1]
  416ac4:	fcmpe	s4, #0.0
  416ac8:	b.lt	416b3c <wcrtomb@plt+0x1421c>  // b.tstop
  416acc:	fadd	s3, s4, s3
  416ad0:	ldr	s4, [x1, #4]
  416ad4:	fcmpe	s3, s4
  416ad8:	b.pl	416b3c <wcrtomb@plt+0x1421c>  // b.nfrst
  416adc:	fmov	s6, #1.000000000000000000e+00
  416ae0:	fcmpe	s4, s6
  416ae4:	b.hi	416b3c <wcrtomb@plt+0x1421c>  // b.pmore
  416ae8:	fcmpe	s2, s3
  416aec:	b.le	416b3c <wcrtomb@plt+0x1421c>
  416af0:	ldrb	w0, [x1, #16]
  416af4:	fmul	s0, s0, s5
  416af8:	cbz	w0, 416b68 <wcrtomb@plt+0x14248>
  416afc:	mov	w0, #0x5f800000            	// #1602224128
  416b00:	fmov	s1, w0
  416b04:	fcmpe	s0, s1
  416b08:	b.ge	416ba8 <wcrtomb@plt+0x14288>  // b.tcont
  416b0c:	fcvtzu	x1, s0
  416b10:	mov	x0, x19
  416b14:	bl	4167e0 <wcrtomb@plt+0x13ec0>
  416b18:	tst	w0, #0xff
  416b1c:	b.eq	416ba8 <wcrtomb@plt+0x14288>  // b.none
  416b20:	add	x2, sp, #0x38
  416b24:	mov	x1, x20
  416b28:	mov	x0, x19
  416b2c:	mov	w3, #0x0                   	// #0
  416b30:	bl	415c68 <wcrtomb@plt+0x13348>
  416b34:	cbz	x0, 416a2c <wcrtomb@plt+0x1410c>
  416b38:	bl	4025f0 <abort@plt>
  416b3c:	mov	w0, #0xcccd                	// #52429
  416b40:	str	x2, [x19, #40]
  416b44:	movk	w0, #0x3f4c, lsl #16
  416b48:	fmov	s2, w0
  416b4c:	fmul	s3, s0, s2
  416b50:	fcmpe	s1, s3
  416b54:	b.le	416a2c <wcrtomb@plt+0x1410c>
  416b58:	mov	w0, #0xfdf4                	// #65012
  416b5c:	movk	w0, #0x3fb4, lsl #16
  416b60:	fmov	s1, w0
  416b64:	fmul	s0, s0, s1
  416b68:	fmul	s0, s0, s2
  416b6c:	b	416afc <wcrtomb@plt+0x141dc>
  416b70:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  416b74:	ldur	q0, [x19, #24]
  416b78:	str	x20, [x21]
  416b7c:	ldr	q1, [x0, #2768]
  416b80:	mov	w0, #0x1                   	// #1
  416b84:	ldr	x21, [sp, #32]
  416b88:	add	v0.2d, v0.2d, v1.2d
  416b8c:	stur	q0, [x19, #24]
  416b90:	ldp	x19, x20, [sp, #16]
  416b94:	ldp	x29, x30, [sp], #64
  416b98:	ret
  416b9c:	mov	x0, #0x10                  	// #16
  416ba0:	bl	402440 <malloc@plt>
  416ba4:	cbnz	x0, 416a48 <wcrtomb@plt+0x14128>
  416ba8:	mov	w0, #0xffffffff            	// #-1
  416bac:	ldp	x19, x20, [sp, #16]
  416bb0:	ldr	x21, [sp, #32]
  416bb4:	ldp	x29, x30, [sp], #64
  416bb8:	ret
  416bbc:	mov	w0, #0xfdf4                	// #65012
  416bc0:	movk	w0, #0x3fb4, lsl #16
  416bc4:	fmov	s1, w0
  416bc8:	mov	w0, #0xcccd                	// #52429
  416bcc:	fmul	s0, s0, s1
  416bd0:	movk	w0, #0x3f4c, lsl #16
  416bd4:	fmov	s2, w0
  416bd8:	fmul	s0, s0, s2
  416bdc:	b	416afc <wcrtomb@plt+0x141dc>
  416be0:	stp	x29, x30, [sp, #-64]!
  416be4:	mov	x29, sp
  416be8:	stp	x19, x20, [sp, #16]
  416bec:	stp	x21, x22, [sp, #32]
  416bf0:	cbz	x1, 416d5c <wcrtomb@plt+0x1443c>
  416bf4:	mov	x19, x0
  416bf8:	mov	x21, x1
  416bfc:	add	x2, sp, #0x38
  416c00:	mov	w3, #0x0                   	// #0
  416c04:	bl	415c68 <wcrtomb@plt+0x13348>
  416c08:	mov	x20, x0
  416c0c:	cbz	x0, 416c24 <wcrtomb@plt+0x14304>
  416c10:	mov	x0, x20
  416c14:	ldp	x19, x20, [sp, #16]
  416c18:	ldp	x21, x22, [sp, #32]
  416c1c:	ldp	x29, x30, [sp], #64
  416c20:	ret
  416c24:	ldr	x0, [x19, #16]
  416c28:	ldr	x1, [x19, #40]
  416c2c:	ucvtf	s0, x0
  416c30:	ldr	x0, [x19, #24]
  416c34:	ldr	s2, [x1, #8]
  416c38:	ucvtf	s1, x0
  416c3c:	fmul	s3, s2, s0
  416c40:	fcmpe	s1, s3
  416c44:	b.gt	416c94 <wcrtomb@plt+0x14374>
  416c48:	ldr	x22, [sp, #56]
  416c4c:	ldr	x0, [x22]
  416c50:	cbz	x0, 416d94 <wcrtomb@plt+0x14474>
  416c54:	ldr	x0, [x19, #72]
  416c58:	cbz	x0, 416dc4 <wcrtomb@plt+0x144a4>
  416c5c:	ldr	x1, [x0, #8]
  416c60:	str	x1, [x19, #72]
  416c64:	ldr	x2, [x22, #8]
  416c68:	mov	x20, x21
  416c6c:	ldr	x1, [x19, #32]
  416c70:	stp	x21, x2, [x0]
  416c74:	str	x0, [x22, #8]
  416c78:	add	x0, x1, #0x1
  416c7c:	str	x0, [x19, #32]
  416c80:	mov	x0, x20
  416c84:	ldp	x19, x20, [sp, #16]
  416c88:	ldp	x21, x22, [sp, #32]
  416c8c:	ldp	x29, x30, [sp], #64
  416c90:	ret
  416c94:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x12510>
  416c98:	add	x2, x2, #0xc08
  416c9c:	cmp	x1, x2
  416ca0:	b.eq	416dd4 <wcrtomb@plt+0x144b4>  // b.none
  416ca4:	mov	w0, #0xcccd                	// #52429
  416ca8:	movk	w0, #0x3dcc, lsl #16
  416cac:	fmov	s3, w0
  416cb0:	fcmpe	s2, s3
  416cb4:	b.le	416d60 <wcrtomb@plt+0x14440>
  416cb8:	mov	w0, #0x6666                	// #26214
  416cbc:	movk	w0, #0x3f66, lsl #16
  416cc0:	fmov	s4, w0
  416cc4:	fcmpe	s2, s4
  416cc8:	b.pl	416d60 <wcrtomb@plt+0x14440>  // b.nfrst
  416ccc:	mov	w0, #0xcccd                	// #52429
  416cd0:	ldr	s5, [x1, #12]
  416cd4:	movk	w0, #0x3f8c, lsl #16
  416cd8:	fmov	s4, w0
  416cdc:	fcmpe	s5, s4
  416ce0:	b.le	416d60 <wcrtomb@plt+0x14440>
  416ce4:	ldr	s4, [x1]
  416ce8:	fcmpe	s4, #0.0
  416cec:	b.lt	416d60 <wcrtomb@plt+0x14440>  // b.tstop
  416cf0:	fadd	s3, s4, s3
  416cf4:	ldr	s4, [x1, #4]
  416cf8:	fcmpe	s3, s4
  416cfc:	b.pl	416d60 <wcrtomb@plt+0x14440>  // b.nfrst
  416d00:	fmov	s6, #1.000000000000000000e+00
  416d04:	fcmpe	s4, s6
  416d08:	b.hi	416d60 <wcrtomb@plt+0x14440>  // b.pmore
  416d0c:	fcmpe	s2, s3
  416d10:	b.le	416d60 <wcrtomb@plt+0x14440>
  416d14:	ldrb	w0, [x1, #16]
  416d18:	fmul	s0, s0, s5
  416d1c:	cbz	w0, 416d8c <wcrtomb@plt+0x1446c>
  416d20:	mov	w0, #0x5f800000            	// #1602224128
  416d24:	fmov	s1, w0
  416d28:	fcmpe	s0, s1
  416d2c:	b.ge	416c10 <wcrtomb@plt+0x142f0>  // b.tcont
  416d30:	fcvtzu	x1, s0
  416d34:	mov	x0, x19
  416d38:	bl	4167e0 <wcrtomb@plt+0x13ec0>
  416d3c:	tst	w0, #0xff
  416d40:	b.eq	416c10 <wcrtomb@plt+0x142f0>  // b.none
  416d44:	add	x2, sp, #0x38
  416d48:	mov	x1, x21
  416d4c:	mov	x0, x19
  416d50:	mov	w3, #0x0                   	// #0
  416d54:	bl	415c68 <wcrtomb@plt+0x13348>
  416d58:	cbz	x0, 416c48 <wcrtomb@plt+0x14328>
  416d5c:	bl	4025f0 <abort@plt>
  416d60:	mov	w0, #0xcccd                	// #52429
  416d64:	str	x2, [x19, #40]
  416d68:	movk	w0, #0x3f4c, lsl #16
  416d6c:	fmov	s2, w0
  416d70:	fmul	s3, s0, s2
  416d74:	fcmpe	s1, s3
  416d78:	b.le	416c48 <wcrtomb@plt+0x14328>
  416d7c:	mov	w0, #0xfdf4                	// #65012
  416d80:	movk	w0, #0x3fb4, lsl #16
  416d84:	fmov	s1, w0
  416d88:	fmul	s0, s0, s1
  416d8c:	fmul	s0, s0, s2
  416d90:	b	416d20 <wcrtomb@plt+0x14400>
  416d94:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  416d98:	mov	x20, x21
  416d9c:	ldur	q0, [x19, #24]
  416da0:	str	x21, [x22]
  416da4:	ldr	q1, [x0, #2768]
  416da8:	mov	x0, x20
  416dac:	ldp	x21, x22, [sp, #32]
  416db0:	add	v0.2d, v0.2d, v1.2d
  416db4:	stur	q0, [x19, #24]
  416db8:	ldp	x19, x20, [sp, #16]
  416dbc:	ldp	x29, x30, [sp], #64
  416dc0:	ret
  416dc4:	mov	x0, #0x10                  	// #16
  416dc8:	bl	402440 <malloc@plt>
  416dcc:	cbz	x0, 416c10 <wcrtomb@plt+0x142f0>
  416dd0:	b	416c64 <wcrtomb@plt+0x14344>
  416dd4:	mov	w0, #0xfdf4                	// #65012
  416dd8:	movk	w0, #0x3fb4, lsl #16
  416ddc:	fmov	s1, w0
  416de0:	mov	w0, #0xcccd                	// #52429
  416de4:	fmul	s0, s0, s1
  416de8:	movk	w0, #0x3f4c, lsl #16
  416dec:	fmov	s2, w0
  416df0:	fmul	s0, s0, s2
  416df4:	b	416d20 <wcrtomb@plt+0x14400>
  416df8:	stp	x29, x30, [sp, #-64]!
  416dfc:	mov	w3, #0x1                   	// #1
  416e00:	mov	x29, sp
  416e04:	add	x2, sp, #0x38
  416e08:	stp	x19, x20, [sp, #16]
  416e0c:	mov	x19, x0
  416e10:	bl	415c68 <wcrtomb@plt+0x13348>
  416e14:	mov	x20, x0
  416e18:	cbz	x0, 416e34 <wcrtomb@plt+0x14514>
  416e1c:	ldr	x1, [sp, #56]
  416e20:	ldr	x0, [x19, #32]
  416e24:	ldr	x1, [x1]
  416e28:	sub	x0, x0, #0x1
  416e2c:	str	x0, [x19, #32]
  416e30:	cbz	x1, 416e44 <wcrtomb@plt+0x14524>
  416e34:	mov	x0, x20
  416e38:	ldp	x19, x20, [sp, #16]
  416e3c:	ldp	x29, x30, [sp], #64
  416e40:	ret
  416e44:	ldr	x0, [x19, #16]
  416e48:	ldr	x1, [x19, #40]
  416e4c:	ucvtf	s1, x0
  416e50:	ldr	x0, [x19, #24]
  416e54:	ldr	s2, [x1]
  416e58:	sub	x0, x0, #0x1
  416e5c:	str	x0, [x19, #24]
  416e60:	fmul	s3, s2, s1
  416e64:	ucvtf	s0, x0
  416e68:	fcmpe	s0, s3
  416e6c:	b.pl	416e34 <wcrtomb@plt+0x14514>  // b.nfrst
  416e70:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  416e74:	add	x0, x0, #0xc08
  416e78:	cmp	x1, x0
  416e7c:	b.eq	416f58 <wcrtomb@plt+0x14638>  // b.none
  416e80:	mov	w2, #0xcccd                	// #52429
  416e84:	ldr	s3, [x1, #8]
  416e88:	movk	w2, #0x3dcc, lsl #16
  416e8c:	fmov	s4, w2
  416e90:	fcmpe	s3, s4
  416e94:	b.le	416f44 <wcrtomb@plt+0x14624>
  416e98:	mov	w2, #0x6666                	// #26214
  416e9c:	movk	w2, #0x3f66, lsl #16
  416ea0:	fmov	s5, w2
  416ea4:	fcmpe	s3, s5
  416ea8:	b.pl	416f44 <wcrtomb@plt+0x14624>  // b.nfrst
  416eac:	mov	w2, #0xcccd                	// #52429
  416eb0:	ldr	s6, [x1, #12]
  416eb4:	movk	w2, #0x3f8c, lsl #16
  416eb8:	fmov	s5, w2
  416ebc:	fcmpe	s6, s5
  416ec0:	b.le	416f44 <wcrtomb@plt+0x14624>
  416ec4:	fcmpe	s2, #0.0
  416ec8:	b.lt	416f44 <wcrtomb@plt+0x14624>  // b.tstop
  416ecc:	fadd	s2, s2, s4
  416ed0:	ldr	s4, [x1, #4]
  416ed4:	fcmpe	s2, s4
  416ed8:	b.pl	416f44 <wcrtomb@plt+0x14624>  // b.nfrst
  416edc:	fmov	s5, #1.000000000000000000e+00
  416ee0:	fcmpe	s4, s5
  416ee4:	b.hi	416f44 <wcrtomb@plt+0x14624>  // b.pmore
  416ee8:	fcmpe	s3, s2
  416eec:	b.le	416f44 <wcrtomb@plt+0x14624>
  416ef0:	ldrb	w0, [x1, #16]
  416ef4:	fmul	s1, s1, s4
  416ef8:	cbnz	w0, 416f04 <wcrtomb@plt+0x145e4>
  416efc:	nop
  416f00:	fmul	s1, s1, s3
  416f04:	fcvtzu	x1, s1
  416f08:	mov	x0, x19
  416f0c:	bl	4167e0 <wcrtomb@plt+0x13ec0>
  416f10:	tst	w0, #0xff
  416f14:	b.ne	416e34 <wcrtomb@plt+0x14514>  // b.any
  416f18:	str	x21, [sp, #32]
  416f1c:	ldr	x21, [x19, #72]
  416f20:	cbz	x21, 416f38 <wcrtomb@plt+0x14618>
  416f24:	nop
  416f28:	mov	x0, x21
  416f2c:	ldr	x21, [x21, #8]
  416f30:	bl	4026b0 <free@plt>
  416f34:	cbnz	x21, 416f28 <wcrtomb@plt+0x14608>
  416f38:	ldr	x21, [sp, #32]
  416f3c:	str	xzr, [x19, #72]
  416f40:	b	416e34 <wcrtomb@plt+0x14514>
  416f44:	movi	v2.2s, #0x0
  416f48:	str	x0, [x19, #40]
  416f4c:	fmul	s2, s1, s2
  416f50:	fcmpe	s0, s2
  416f54:	b.pl	416e34 <wcrtomb@plt+0x14514>  // b.nfrst
  416f58:	mov	w0, #0xcccd                	// #52429
  416f5c:	movk	w0, #0x3f4c, lsl #16
  416f60:	fmov	s3, w0
  416f64:	b	416f00 <wcrtomb@plt+0x145e0>
  416f68:	stp	x29, x30, [sp, #-32]!
  416f6c:	mov	x29, sp
  416f70:	str	x19, [sp, #16]
  416f74:	mov	w19, w0
  416f78:	bl	402450 <wcwidth@plt>
  416f7c:	tbz	w0, #31, 416f90 <wcrtomb@plt+0x14670>
  416f80:	mov	w0, w19
  416f84:	bl	402370 <iswcntrl@plt>
  416f88:	cmp	w0, #0x0
  416f8c:	cset	w0, eq  // eq = none
  416f90:	ldr	x19, [sp, #16]
  416f94:	ldp	x29, x30, [sp], #32
  416f98:	ret
  416f9c:	nop
  416fa0:	stp	x29, x30, [sp, #-32]!
  416fa4:	mov	x29, sp
  416fa8:	stp	x19, x20, [sp, #16]
  416fac:	mov	x20, x0
  416fb0:	mov	x0, x1
  416fb4:	mov	x19, x1
  416fb8:	ldr	x2, [x1, #8]
  416fbc:	ldr	x1, [x0], #24
  416fc0:	cmp	x1, x0
  416fc4:	b.eq	416ff0 <wcrtomb@plt+0x146d0>  // b.none
  416fc8:	str	x1, [x20]
  416fcc:	ldrb	w0, [x19, #16]
  416fd0:	str	x2, [x20, #8]
  416fd4:	strb	w0, [x20, #16]
  416fd8:	cbz	w0, 416fe4 <wcrtomb@plt+0x146c4>
  416fdc:	ldr	w0, [x19, #20]
  416fe0:	str	w0, [x20, #20]
  416fe4:	ldp	x19, x20, [sp, #16]
  416fe8:	ldp	x29, x30, [sp], #32
  416fec:	ret
  416ff0:	add	x3, x20, #0x18
  416ff4:	mov	x0, x3
  416ff8:	bl	4022a0 <memcpy@plt>
  416ffc:	ldr	x2, [x19, #8]
  417000:	str	x0, [x20]
  417004:	b	416fcc <wcrtomb@plt+0x146ac>
  417008:	ubfx	x2, x0, #5, #3
  41700c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  417010:	add	x1, x1, #0xc20
  417014:	ldr	w1, [x1, x2, lsl #2]
  417018:	lsr	w0, w1, w0
  41701c:	and	w0, w0, #0x1
  417020:	ret
  417024:	nop
  417028:	stp	x29, x30, [sp, #-16]!
  41702c:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  417030:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  417034:	mov	x29, sp
  417038:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  41703c:	add	x3, x3, #0xc40
  417040:	add	x1, x1, #0xb18
  417044:	add	x0, x0, #0xb58
  417048:	mov	w2, #0xb3                  	// #179
  41704c:	bl	402880 <__assert_fail@plt>
  417050:	cmp	x0, x1
  417054:	b.eq	4173bc <wcrtomb@plt+0x14a9c>  // b.none
  417058:	stp	x29, x30, [sp, #-192]!
  41705c:	mov	x29, sp
  417060:	stp	x19, x20, [sp, #16]
  417064:	mov	x20, x0
  417068:	stp	x21, x22, [sp, #32]
  41706c:	stp	x23, x24, [sp, #48]
  417070:	mov	x24, x1
  417074:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  417078:	cmp	x0, #0x1
  41707c:	b.ls	4171f4 <wcrtomb@plt+0x148d4>  // b.plast
  417080:	strb	wzr, [sp, #64]
  417084:	add	x22, sp, #0x44
  417088:	stur	xzr, [sp, #68]
  41708c:	add	x23, sp, #0x84
  417090:	ldrb	w0, [sp, #64]
  417094:	mov	w21, #0x1                   	// #1
  417098:	strb	wzr, [sp, #76]
  41709c:	str	x20, [sp, #80]
  4170a0:	strb	wzr, [sp, #128]
  4170a4:	stur	xzr, [sp, #132]
  4170a8:	strb	wzr, [sp, #140]
  4170ac:	str	x24, [sp, #144]
  4170b0:	cbnz	w0, 417194 <wcrtomb@plt+0x14874>
  4170b4:	nop
  4170b8:	ldrb	w2, [x20]
  4170bc:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4170c0:	add	x1, x1, #0xc20
  4170c4:	ubfx	x0, x2, #5, #3
  4170c8:	ldr	w0, [x1, x0, lsl #2]
  4170cc:	lsr	w0, w0, w2
  4170d0:	tbz	w0, #0, 417308 <wcrtomb@plt+0x149e8>
  4170d4:	mov	x0, #0x1                   	// #1
  4170d8:	str	x0, [sp, #88]
  4170dc:	ldrb	w1, [x20]
  4170e0:	strb	w0, [sp, #76]
  4170e4:	mov	w19, w1
  4170e8:	strb	w0, [sp, #96]
  4170ec:	str	w1, [sp, #100]
  4170f0:	cbz	w19, 417418 <wcrtomb@plt+0x14af8>
  4170f4:	ldrb	w0, [sp, #140]
  4170f8:	cbnz	w0, 4172e0 <wcrtomb@plt+0x149c0>
  4170fc:	ldrb	w0, [sp, #128]
  417100:	ldr	x19, [sp, #144]
  417104:	cbnz	w0, 417280 <wcrtomb@plt+0x14960>
  417108:	ldrb	w2, [x19]
  41710c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  417110:	add	x1, x1, #0xc20
  417114:	ubfx	x0, x2, #5, #3
  417118:	ldr	w0, [x1, x0, lsl #2]
  41711c:	lsr	w0, w0, w2
  417120:	tbz	w0, #0, 417270 <wcrtomb@plt+0x14950>
  417124:	mov	x0, #0x1                   	// #1
  417128:	str	x0, [sp, #152]
  41712c:	ldrb	w1, [x19]
  417130:	strb	w0, [sp, #140]
  417134:	mov	w20, w1
  417138:	strb	w0, [sp, #160]
  41713c:	str	w1, [sp, #164]
  417140:	cbz	w20, 4173f8 <wcrtomb@plt+0x14ad8>
  417144:	ldrb	w0, [sp, #96]
  417148:	cbz	w0, 4173d8 <wcrtomb@plt+0x14ab8>
  41714c:	ldr	w0, [sp, #100]
  417150:	bl	4028c0 <towlower@plt>
  417154:	mov	w19, w0
  417158:	mov	w0, w20
  41715c:	bl	4028c0 <towlower@plt>
  417160:	sub	w0, w19, w0
  417164:	cbnz	w0, 41725c <wcrtomb@plt+0x1493c>
  417168:	ldp	x20, x1, [sp, #80]
  41716c:	strb	wzr, [sp, #76]
  417170:	ldr	x0, [sp, #144]
  417174:	strb	wzr, [sp, #140]
  417178:	add	x20, x20, x1
  41717c:	str	x20, [sp, #80]
  417180:	ldr	x1, [sp, #152]
  417184:	add	x0, x0, x1
  417188:	str	x0, [sp, #144]
  41718c:	ldrb	w0, [sp, #64]
  417190:	cbz	w0, 4170b8 <wcrtomb@plt+0x14798>
  417194:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  417198:	mov	x1, x0
  41719c:	mov	x0, x20
  4171a0:	bl	41ab50 <wcrtomb@plt+0x18230>
  4171a4:	mov	x2, x0
  4171a8:	add	x0, sp, #0x40
  4171ac:	mov	x1, x20
  4171b0:	add	x3, sp, #0x44
  4171b4:	add	x0, x0, #0x24
  4171b8:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  4171bc:	str	x0, [sp, #88]
  4171c0:	cmn	x0, #0x1
  4171c4:	b.eq	41731c <wcrtomb@plt+0x149fc>  // b.none
  4171c8:	cmn	x0, #0x2
  4171cc:	b.eq	417344 <wcrtomb@plt+0x14a24>  // b.none
  4171d0:	cbz	x0, 417374 <wcrtomb@plt+0x14a54>
  4171d4:	ldr	w19, [sp, #100]
  4171d8:	add	x0, sp, #0x44
  4171dc:	strb	w21, [sp, #96]
  4171e0:	bl	402610 <mbsinit@plt>
  4171e4:	cbz	w0, 4171ec <wcrtomb@plt+0x148cc>
  4171e8:	strb	wzr, [sp, #64]
  4171ec:	strb	w21, [sp, #76]
  4171f0:	b	4170f0 <wcrtomb@plt+0x147d0>
  4171f4:	bl	4026a0 <__ctype_b_loc@plt>
  4171f8:	mov	x21, #0x0                   	// #0
  4171fc:	ldr	x22, [x0]
  417200:	ldrb	w23, [x20, x21]
  417204:	mov	x19, x23
  417208:	ubfiz	x0, x23, #1, #8
  41720c:	ldrh	w0, [x22, x0]
  417210:	tbz	w0, #8, 417224 <wcrtomb@plt+0x14904>
  417214:	bl	4023c0 <__ctype_tolower_loc@plt>
  417218:	ldr	x0, [x0]
  41721c:	ldr	w19, [x0, x23, lsl #2]
  417220:	and	w19, w19, #0xff
  417224:	ldrb	w23, [x24, x21]
  417228:	mov	x0, x23
  41722c:	ubfiz	x1, x23, #1, #8
  417230:	ldrh	w1, [x22, x1]
  417234:	tbz	w1, #8, 417248 <wcrtomb@plt+0x14928>
  417238:	bl	4023c0 <__ctype_tolower_loc@plt>
  41723c:	ldr	x0, [x0]
  417240:	ldr	w0, [x0, x23, lsl #2]
  417244:	and	w0, w0, #0xff
  417248:	cbz	w19, 4173f0 <wcrtomb@plt+0x14ad0>
  41724c:	add	x21, x21, #0x1
  417250:	cmp	w19, w0
  417254:	b.eq	417200 <wcrtomb@plt+0x148e0>  // b.none
  417258:	sub	w0, w19, w0
  41725c:	ldp	x19, x20, [sp, #16]
  417260:	ldp	x21, x22, [sp, #32]
  417264:	ldp	x23, x24, [sp, #48]
  417268:	ldp	x29, x30, [sp], #192
  41726c:	ret
  417270:	mov	x0, x23
  417274:	bl	402610 <mbsinit@plt>
  417278:	cbz	w0, 4175ec <wcrtomb@plt+0x14ccc>
  41727c:	strb	w21, [sp, #128]
  417280:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  417284:	mov	x1, x0
  417288:	mov	x0, x19
  41728c:	bl	41ab50 <wcrtomb@plt+0x18230>
  417290:	mov	x2, x0
  417294:	add	x0, sp, #0x80
  417298:	mov	x1, x19
  41729c:	add	x3, sp, #0x84
  4172a0:	add	x0, x0, #0x24
  4172a4:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  4172a8:	str	x0, [sp, #152]
  4172ac:	cmn	x0, #0x1
  4172b0:	b.eq	417330 <wcrtomb@plt+0x14a10>  // b.none
  4172b4:	cmn	x0, #0x2
  4172b8:	b.eq	41735c <wcrtomb@plt+0x14a3c>  // b.none
  4172bc:	cbz	x0, 417394 <wcrtomb@plt+0x14a74>
  4172c0:	ldr	w20, [sp, #164]
  4172c4:	add	x0, sp, #0x84
  4172c8:	strb	w21, [sp, #160]
  4172cc:	bl	402610 <mbsinit@plt>
  4172d0:	cbz	w0, 4172d8 <wcrtomb@plt+0x149b8>
  4172d4:	strb	wzr, [sp, #128]
  4172d8:	strb	w21, [sp, #140]
  4172dc:	b	417140 <wcrtomb@plt+0x14820>
  4172e0:	ldrb	w0, [sp, #160]
  4172e4:	cbnz	w0, 4173b4 <wcrtomb@plt+0x14a94>
  4172e8:	ldrb	w0, [sp, #96]
  4172ec:	cbnz	w0, 41745c <wcrtomb@plt+0x14b3c>
  4172f0:	ldp	x0, x2, [sp, #80]
  4172f4:	ldp	x1, x3, [sp, #144]
  4172f8:	cmp	x2, x3
  4172fc:	b.ne	4173c4 <wcrtomb@plt+0x14aa4>  // b.any
  417300:	bl	402660 <memcmp@plt>
  417304:	b	417164 <wcrtomb@plt+0x14844>
  417308:	mov	x0, x22
  41730c:	bl	402610 <mbsinit@plt>
  417310:	cbz	w0, 4175ec <wcrtomb@plt+0x14ccc>
  417314:	strb	w21, [sp, #64]
  417318:	b	417194 <wcrtomb@plt+0x14874>
  41731c:	mov	x0, #0x1                   	// #1
  417320:	strb	w0, [sp, #76]
  417324:	str	x0, [sp, #88]
  417328:	strb	wzr, [sp, #96]
  41732c:	b	4170f4 <wcrtomb@plt+0x147d4>
  417330:	mov	x0, #0x1                   	// #1
  417334:	strb	w0, [sp, #140]
  417338:	str	x0, [sp, #152]
  41733c:	strb	wzr, [sp, #160]
  417340:	b	4172e8 <wcrtomb@plt+0x149c8>
  417344:	ldr	x0, [sp, #80]
  417348:	bl	402300 <strlen@plt>
  41734c:	strb	w21, [sp, #76]
  417350:	str	x0, [sp, #88]
  417354:	strb	wzr, [sp, #96]
  417358:	b	4170f4 <wcrtomb@plt+0x147d4>
  41735c:	ldr	x0, [sp, #144]
  417360:	bl	402300 <strlen@plt>
  417364:	strb	w21, [sp, #140]
  417368:	str	x0, [sp, #152]
  41736c:	strb	wzr, [sp, #160]
  417370:	b	4172e8 <wcrtomb@plt+0x149c8>
  417374:	ldr	x0, [sp, #80]
  417378:	mov	x1, #0x1                   	// #1
  41737c:	str	x1, [sp, #88]
  417380:	ldrb	w0, [x0]
  417384:	cbnz	w0, 41760c <wcrtomb@plt+0x14cec>
  417388:	ldr	w19, [sp, #100]
  41738c:	cbz	w19, 4171d8 <wcrtomb@plt+0x148b8>
  417390:	bl	417028 <wcrtomb@plt+0x14708>
  417394:	ldr	x0, [sp, #144]
  417398:	mov	x1, #0x1                   	// #1
  41739c:	str	x1, [sp, #152]
  4173a0:	ldrb	w0, [x0]
  4173a4:	cbnz	w0, 41760c <wcrtomb@plt+0x14cec>
  4173a8:	ldr	w20, [sp, #164]
  4173ac:	cbz	w20, 4172c4 <wcrtomb@plt+0x149a4>
  4173b0:	bl	417028 <wcrtomb@plt+0x14708>
  4173b4:	ldr	w20, [sp, #164]
  4173b8:	b	417140 <wcrtomb@plt+0x14820>
  4173bc:	mov	w0, #0x0                   	// #0
  4173c0:	ret
  4173c4:	b.cs	417538 <wcrtomb@plt+0x14c18>  // b.hs, b.nlast
  4173c8:	bl	402660 <memcmp@plt>
  4173cc:	cmp	w0, #0x0
  4173d0:	b.le	41745c <wcrtomb@plt+0x14b3c>
  4173d4:	nop
  4173d8:	mov	w0, #0x1                   	// #1
  4173dc:	ldp	x19, x20, [sp, #16]
  4173e0:	ldp	x21, x22, [sp, #32]
  4173e4:	ldp	x23, x24, [sp, #48]
  4173e8:	ldp	x29, x30, [sp], #192
  4173ec:	ret
  4173f0:	mov	w19, #0x0                   	// #0
  4173f4:	b	417258 <wcrtomb@plt+0x14938>
  4173f8:	ldrb	w0, [sp, #76]
  4173fc:	cbz	w0, 417474 <wcrtomb@plt+0x14b54>
  417400:	ldrb	w0, [sp, #96]
  417404:	cbz	w0, 4173d8 <wcrtomb@plt+0x14ab8>
  417408:	ldr	w19, [sp, #100]
  41740c:	nop
  417410:	cbnz	w19, 4173d8 <wcrtomb@plt+0x14ab8>
  417414:	nop
  417418:	ldrb	w0, [sp, #140]
  41741c:	cbnz	w0, 4175b8 <wcrtomb@plt+0x14c98>
  417420:	ldrb	w0, [sp, #128]
  417424:	add	x20, sp, #0x80
  417428:	ldr	x19, [sp, #144]
  41742c:	cbnz	w0, 417564 <wcrtomb@plt+0x14c44>
  417430:	ldrb	w1, [x19]
  417434:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  417438:	add	x0, x0, #0xc20
  41743c:	ubfx	x2, x1, #5, #3
  417440:	ldr	w0, [x0, x2, lsl #2]
  417444:	lsr	w0, w0, w1
  417448:	tbz	w0, #0, 41754c <wcrtomb@plt+0x14c2c>
  41744c:	mov	x0, #0x1                   	// #1
  417450:	str	x0, [sp, #152]
  417454:	ldrb	w20, [x19]
  417458:	cbz	w20, 4175b0 <wcrtomb@plt+0x14c90>
  41745c:	mov	w0, #0xffffffff            	// #-1
  417460:	ldp	x19, x20, [sp, #16]
  417464:	ldp	x21, x22, [sp, #32]
  417468:	ldp	x23, x24, [sp, #48]
  41746c:	ldp	x29, x30, [sp], #192
  417470:	ret
  417474:	ldrb	w0, [sp, #64]
  417478:	add	x20, sp, #0x40
  41747c:	ldr	x19, [sp, #80]
  417480:	cbnz	w0, 4174b8 <wcrtomb@plt+0x14b98>
  417484:	ldrb	w1, [x19]
  417488:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  41748c:	add	x0, x0, #0xc20
  417490:	ubfx	x2, x1, #5, #3
  417494:	ldr	w0, [x0, x2, lsl #2]
  417498:	lsr	w0, w0, w1
  41749c:	tbnz	w0, #0, 417518 <wcrtomb@plt+0x14bf8>
  4174a0:	add	x20, sp, #0x40
  4174a4:	add	x0, x20, #0x4
  4174a8:	bl	402610 <mbsinit@plt>
  4174ac:	cbz	w0, 4175ec <wcrtomb@plt+0x14ccc>
  4174b0:	mov	w0, #0x1                   	// #1
  4174b4:	strb	w0, [sp, #64]
  4174b8:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  4174bc:	mov	x1, x0
  4174c0:	mov	x0, x19
  4174c4:	bl	41ab50 <wcrtomb@plt+0x18230>
  4174c8:	mov	x1, x19
  4174cc:	mov	x2, x0
  4174d0:	add	x3, x20, #0x4
  4174d4:	add	x0, x20, #0x24
  4174d8:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  4174dc:	str	x0, [sp, #88]
  4174e0:	cmn	x0, #0x1
  4174e4:	b.eq	4173d8 <wcrtomb@plt+0x14ab8>  // b.none
  4174e8:	cmn	x0, #0x2
  4174ec:	b.eq	4173d8 <wcrtomb@plt+0x14ab8>  // b.none
  4174f0:	cbz	x0, 4175cc <wcrtomb@plt+0x14cac>
  4174f4:	ldr	w19, [sp, #100]
  4174f8:	add	x0, x20, #0x4
  4174fc:	mov	w20, #0x1                   	// #1
  417500:	strb	w20, [sp, #96]
  417504:	bl	402610 <mbsinit@plt>
  417508:	cbz	w0, 417510 <wcrtomb@plt+0x14bf0>
  41750c:	strb	wzr, [sp, #64]
  417510:	strb	w20, [sp, #76]
  417514:	b	417410 <wcrtomb@plt+0x14af0>
  417518:	mov	x0, #0x1                   	// #1
  41751c:	str	x0, [sp, #88]
  417520:	ldrb	w1, [x19]
  417524:	strb	w0, [sp, #76]
  417528:	mov	w19, w1
  41752c:	strb	w0, [sp, #96]
  417530:	str	w1, [sp, #100]
  417534:	b	417410 <wcrtomb@plt+0x14af0>
  417538:	mov	x2, x3
  41753c:	bl	402660 <memcmp@plt>
  417540:	tbnz	w0, #31, 41745c <wcrtomb@plt+0x14b3c>
  417544:	mov	w0, #0x1                   	// #1
  417548:	b	4173dc <wcrtomb@plt+0x14abc>
  41754c:	add	x20, sp, #0x80
  417550:	add	x0, sp, #0x84
  417554:	bl	402610 <mbsinit@plt>
  417558:	cbz	w0, 4175ec <wcrtomb@plt+0x14ccc>
  41755c:	mov	w0, #0x1                   	// #1
  417560:	strb	w0, [sp, #128]
  417564:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  417568:	mov	x1, x0
  41756c:	mov	x0, x19
  417570:	bl	41ab50 <wcrtomb@plt+0x18230>
  417574:	mov	x1, x19
  417578:	mov	x2, x0
  41757c:	add	x3, x20, #0x4
  417580:	add	x0, x20, #0x24
  417584:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  417588:	cmn	x0, #0x3
  41758c:	b.hi	41745c <wcrtomb@plt+0x14b3c>  // b.pmore
  417590:	cbnz	x0, 4175c0 <wcrtomb@plt+0x14ca0>
  417594:	ldr	x0, [sp, #144]
  417598:	mov	x1, #0x1                   	// #1
  41759c:	str	x1, [sp, #152]
  4175a0:	ldrb	w0, [x0]
  4175a4:	cbnz	w0, 41760c <wcrtomb@plt+0x14cec>
  4175a8:	ldr	w20, [sp, #164]
  4175ac:	cbnz	w20, 417390 <wcrtomb@plt+0x14a70>
  4175b0:	mov	w0, #0x0                   	// #0
  4175b4:	b	41725c <wcrtomb@plt+0x1493c>
  4175b8:	ldrb	w0, [sp, #160]
  4175bc:	cbz	w0, 41745c <wcrtomb@plt+0x14b3c>
  4175c0:	ldr	w20, [sp, #164]
  4175c4:	cbnz	w20, 41745c <wcrtomb@plt+0x14b3c>
  4175c8:	b	4175b0 <wcrtomb@plt+0x14c90>
  4175cc:	ldr	x0, [sp, #80]
  4175d0:	mov	x1, #0x1                   	// #1
  4175d4:	str	x1, [sp, #88]
  4175d8:	ldrb	w0, [x0]
  4175dc:	cbnz	w0, 41760c <wcrtomb@plt+0x14cec>
  4175e0:	ldr	w19, [sp, #100]
  4175e4:	cbz	w19, 4174f8 <wcrtomb@plt+0x14bd8>
  4175e8:	bl	417028 <wcrtomb@plt+0x14708>
  4175ec:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  4175f0:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4175f4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  4175f8:	add	x3, x3, #0xc40
  4175fc:	add	x1, x1, #0xb18
  417600:	add	x0, x0, #0xb28
  417604:	mov	w2, #0x96                  	// #150
  417608:	bl	402880 <__assert_fail@plt>
  41760c:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  417610:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  417614:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  417618:	add	x3, x3, #0xc40
  41761c:	add	x1, x1, #0xb18
  417620:	add	x0, x0, #0xb40
  417624:	mov	w2, #0xb2                  	// #178
  417628:	bl	402880 <__assert_fail@plt>
  41762c:	nop
  417630:	and	w5, w2, #0xff
  417634:	and	w6, w1, #0xff
  417638:	cmp	w5, w1, uxtb
  41763c:	b.eq	417730 <wcrtomb@plt+0x14e10>  // b.none
  417640:	cbz	x3, 417748 <wcrtomb@plt+0x14e28>
  417644:	tst	x0, #0x7
  417648:	add	x4, x0, x3
  41764c:	b.ne	41766c <wcrtomb@plt+0x14d4c>  // b.any
  417650:	b	417684 <wcrtomb@plt+0x14d64>
  417654:	add	x0, x0, #0x1
  417658:	cmp	x0, x4
  41765c:	sub	x3, x4, x0
  417660:	b.eq	417680 <wcrtomb@plt+0x14d60>  // b.none
  417664:	tst	x0, #0x7
  417668:	b.eq	417684 <wcrtomb@plt+0x14d64>  // b.none
  41766c:	ldrb	w3, [x0]
  417670:	cmp	w3, w5
  417674:	ccmp	w3, w6, #0x4, ne  // ne = any
  417678:	b.ne	417654 <wcrtomb@plt+0x14d34>  // b.any
  41767c:	ret
  417680:	mov	x3, #0x0                   	// #0
  417684:	ubfiz	w4, w1, #8, #8
  417688:	ubfiz	w7, w2, #8, #8
  41768c:	and	w1, w1, #0xff
  417690:	and	w2, w2, #0xff
  417694:	orr	w1, w4, w1
  417698:	orr	w2, w7, w2
  41769c:	cmp	x3, #0x7
  4176a0:	sxtw	x8, w1
  4176a4:	sbfiz	x4, x1, #16, #32
  4176a8:	sbfiz	x7, x2, #16, #32
  4176ac:	sxtw	x1, w2
  4176b0:	orr	x4, x4, x8
  4176b4:	orr	x7, x7, x1
  4176b8:	orr	x4, x4, x4, lsl #32
  4176bc:	orr	x7, x7, x7, lsl #32
  4176c0:	b.ls	41773c <wcrtomb@plt+0x14e1c>  // b.plast
  4176c4:	mov	x8, #0xfefefefefefefefe    	// #-72340172838076674
  4176c8:	movk	x8, #0xfeff
  4176cc:	b	4176e0 <wcrtomb@plt+0x14dc0>
  4176d0:	sub	x3, x3, #0x8
  4176d4:	add	x0, x0, #0x8
  4176d8:	cmp	x3, #0x7
  4176dc:	b.ls	41773c <wcrtomb@plt+0x14e1c>  // b.plast
  4176e0:	ldr	x1, [x0]
  4176e4:	eor	x2, x1, x4
  4176e8:	eor	x1, x1, x7
  4176ec:	add	x10, x2, x8
  4176f0:	add	x9, x1, x8
  4176f4:	bic	x2, x10, x2
  4176f8:	bic	x1, x9, x1
  4176fc:	orr	x1, x2, x1
  417700:	tst	x1, #0x8080808080808080
  417704:	b.eq	4176d0 <wcrtomb@plt+0x14db0>  // b.none
  417708:	add	x3, x0, x3
  41770c:	b	41771c <wcrtomb@plt+0x14dfc>
  417710:	add	x0, x0, #0x1
  417714:	cmp	x0, x3
  417718:	b.eq	417740 <wcrtomb@plt+0x14e20>  // b.none
  41771c:	ldrb	w1, [x0]
  417720:	cmp	w1, w6
  417724:	ccmp	w1, w5, #0x4, ne  // ne = any
  417728:	b.ne	417710 <wcrtomb@plt+0x14df0>  // b.any
  41772c:	b	41767c <wcrtomb@plt+0x14d5c>
  417730:	mov	x2, x3
  417734:	and	w1, w1, #0xff
  417738:	b	402770 <memchr@plt>
  41773c:	cbnz	x3, 417708 <wcrtomb@plt+0x14de8>
  417740:	mov	x0, #0x0                   	// #0
  417744:	ret
  417748:	mov	x3, #0x0                   	// #0
  41774c:	b	417684 <wcrtomb@plt+0x14d64>
  417750:	stp	x29, x30, [sp, #-64]!
  417754:	mov	x29, sp
  417758:	str	x3, [sp, #56]
  41775c:	mov	w3, #0x0                   	// #0
  417760:	tbnz	w2, #6, 417774 <wcrtomb@plt+0x14e54>
  417764:	bl	402860 <openat@plt>
  417768:	bl	41ab88 <wcrtomb@plt+0x18268>
  41776c:	ldp	x29, x30, [sp], #64
  417770:	ret
  417774:	mov	w3, #0xfffffff8            	// #-8
  417778:	stp	w3, wzr, [sp, #40]
  41777c:	ldr	w3, [sp, #56]
  417780:	add	x4, sp, #0x30
  417784:	add	x5, sp, #0x40
  417788:	stp	x5, x5, [sp, #16]
  41778c:	str	x4, [sp, #32]
  417790:	bl	402860 <openat@plt>
  417794:	bl	41ab88 <wcrtomb@plt+0x18268>
  417798:	ldp	x29, x30, [sp], #64
  41779c:	ret
  4177a0:	stp	x29, x30, [sp, #-48]!
  4177a4:	mov	w2, #0x5                   	// #5
  4177a8:	mov	x29, sp
  4177ac:	stp	x19, x20, [sp, #16]
  4177b0:	mov	x20, x0
  4177b4:	str	x21, [sp, #32]
  4177b8:	mov	w21, w1
  4177bc:	mov	x1, x0
  4177c0:	mov	x0, #0x0                   	// #0
  4177c4:	bl	4027f0 <dcgettext@plt>
  4177c8:	mov	x19, x0
  4177cc:	cmp	x20, x0
  4177d0:	b.eq	4177e8 <wcrtomb@plt+0x14ec8>  // b.none
  4177d4:	mov	x0, x19
  4177d8:	ldp	x19, x20, [sp, #16]
  4177dc:	ldr	x21, [sp, #32]
  4177e0:	ldp	x29, x30, [sp], #48
  4177e4:	ret
  4177e8:	bl	42edb8 <_obstack_memory_used@@Base+0x102c8>
  4177ec:	ldrb	w1, [x0]
  4177f0:	and	w1, w1, #0xffffffdf
  4177f4:	cmp	w1, #0x55
  4177f8:	b.ne	41785c <wcrtomb@plt+0x14f3c>  // b.any
  4177fc:	ldrb	w1, [x0, #1]
  417800:	and	w1, w1, #0xffffffdf
  417804:	cmp	w1, #0x54
  417808:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  41780c:	ldrb	w1, [x0, #2]
  417810:	and	w1, w1, #0xffffffdf
  417814:	cmp	w1, #0x46
  417818:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  41781c:	ldrb	w1, [x0, #3]
  417820:	cmp	w1, #0x2d
  417824:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  417828:	ldrb	w1, [x0, #4]
  41782c:	cmp	w1, #0x38
  417830:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  417834:	ldrb	w0, [x0, #5]
  417838:	cbnz	w0, 4178d8 <wcrtomb@plt+0x14fb8>
  41783c:	ldrb	w1, [x19]
  417840:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  417844:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x12510>
  417848:	add	x0, x0, #0xc60
  41784c:	cmp	w1, #0x60
  417850:	add	x19, x19, #0xc78
  417854:	csel	x19, x19, x0, eq  // eq = none
  417858:	b	4177d4 <wcrtomb@plt+0x14eb4>
  41785c:	cmp	w1, #0x47
  417860:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  417864:	ldrb	w1, [x0, #1]
  417868:	and	w1, w1, #0xffffffdf
  41786c:	cmp	w1, #0x42
  417870:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  417874:	ldrb	w1, [x0, #2]
  417878:	cmp	w1, #0x31
  41787c:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  417880:	ldrb	w1, [x0, #3]
  417884:	cmp	w1, #0x38
  417888:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  41788c:	ldrb	w1, [x0, #4]
  417890:	cmp	w1, #0x30
  417894:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  417898:	ldrb	w1, [x0, #5]
  41789c:	cmp	w1, #0x33
  4178a0:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  4178a4:	ldrb	w1, [x0, #6]
  4178a8:	cmp	w1, #0x30
  4178ac:	b.ne	4178d8 <wcrtomb@plt+0x14fb8>  // b.any
  4178b0:	ldrb	w0, [x0, #7]
  4178b4:	cbnz	w0, 4178d8 <wcrtomb@plt+0x14fb8>
  4178b8:	ldrb	w1, [x19]
  4178bc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  4178c0:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x12510>
  4178c4:	add	x0, x0, #0xc68
  4178c8:	cmp	w1, #0x60
  4178cc:	add	x19, x19, #0xc70
  4178d0:	csel	x19, x19, x0, eq  // eq = none
  4178d4:	b	4177d4 <wcrtomb@plt+0x14eb4>
  4178d8:	cmp	w21, #0x9
  4178dc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  4178e0:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x12510>
  4178e4:	add	x0, x0, #0xc80
  4178e8:	add	x19, x19, #0xc58
  4178ec:	csel	x19, x19, x0, eq  // eq = none
  4178f0:	mov	x0, x19
  4178f4:	ldp	x19, x20, [sp, #16]
  4178f8:	ldr	x21, [sp, #32]
  4178fc:	ldp	x29, x30, [sp], #48
  417900:	ret
  417904:	nop
  417908:	sub	sp, sp, #0x100
  41790c:	stp	x29, x30, [sp, #16]
  417910:	add	x29, sp, #0x10
  417914:	stp	x19, x20, [sp, #32]
  417918:	mov	w19, w5
  41791c:	and	w20, w5, #0x2
  417920:	stp	x21, x22, [sp, #48]
  417924:	mov	w21, w4
  417928:	stp	x23, x24, [sp, #64]
  41792c:	mov	x23, x1
  417930:	mov	x24, x3
  417934:	stp	x25, x26, [sp, #80]
  417938:	mov	x26, x6
  41793c:	stp	x27, x28, [sp, #96]
  417940:	mov	x28, x0
  417944:	mov	x27, x2
  417948:	str	w4, [sp, #116]
  41794c:	str	w5, [sp, #184]
  417950:	str	x7, [sp, #200]
  417954:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  417958:	mov	x1, x19
  41795c:	str	x0, [sp, #176]
  417960:	cmp	w21, #0x4
  417964:	ubfx	x10, x1, #1, #1
  417968:	b.eq	4185f8 <wcrtomb@plt+0x15cd8>  // b.none
  41796c:	ldr	w0, [sp, #116]
  417970:	b.ls	417d00 <wcrtomb@plt+0x153e0>  // b.plast
  417974:	cmp	w0, #0x7
  417978:	b.eq	418664 <wcrtomb@plt+0x15d44>  // b.none
  41797c:	b.ls	41830c <wcrtomb@plt+0x159ec>  // b.plast
  417980:	ldr	w0, [sp, #116]
  417984:	sub	w0, w0, #0x8
  417988:	cmp	w0, #0x2
  41798c:	b.hi	418aa4 <wcrtomb@plt+0x16184>  // b.pmore
  417990:	ldr	w19, [sp, #116]
  417994:	cmp	w19, #0xa
  417998:	b.ne	4184f0 <wcrtomb@plt+0x15bd0>  // b.any
  41799c:	mov	x19, #0x0                   	// #0
  4179a0:	cbz	w20, 4188e4 <wcrtomb@plt+0x15fc4>
  4179a4:	ldr	x0, [sp, #256]
  4179a8:	str	w10, [sp, #124]
  4179ac:	mov	w25, #0x0                   	// #0
  4179b0:	bl	402300 <strlen@plt>
  4179b4:	cmp	x0, #0x0
  4179b8:	ldr	w10, [sp, #124]
  4179bc:	mov	x12, x0
  4179c0:	mov	w11, #0x1                   	// #1
  4179c4:	mov	w5, w11
  4179c8:	csel	w0, w10, wzr, ne  // ne = any
  4179cc:	str	w0, [sp, #208]
  4179d0:	ldr	w0, [sp, #184]
  4179d4:	mov	w7, #0x0                   	// #0
  4179d8:	stp	w11, wzr, [sp, #120]
  4179dc:	and	w1, w0, w11
  4179e0:	and	w0, w0, #0x4
  4179e4:	stp	w1, w0, [sp, #212]
  4179e8:	ldr	x0, [sp, #256]
  4179ec:	str	wzr, [sp, #144]
  4179f0:	str	x0, [sp, #168]
  4179f4:	str	wzr, [sp, #188]
  4179f8:	str	xzr, [sp, #192]
  4179fc:	nop
  417a00:	mov	x4, x26
  417a04:	mov	w26, w5
  417a08:	mov	x20, #0x0                   	// #0
  417a0c:	nop
  417a10:	cmp	x24, x20
  417a14:	cset	w21, ne  // ne = any
  417a18:	cmn	x24, #0x1
  417a1c:	b.eq	417d70 <wcrtomb@plt+0x15450>  // b.none
  417a20:	cbz	w21, 417d80 <wcrtomb@plt+0x15460>
  417a24:	add	x3, x27, x20
  417a28:	cbz	w11, 418034 <wcrtomb@plt+0x15714>
  417a2c:	cbz	x12, 4181e0 <wcrtomb@plt+0x158c0>
  417a30:	cmp	x12, #0x1
  417a34:	add	x22, x20, x12
  417a38:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  417a3c:	b.ne	417a6c <wcrtomb@plt+0x1514c>  // b.any
  417a40:	mov	x0, x27
  417a44:	stp	x3, x12, [sp, #128]
  417a48:	stp	w10, w7, [sp, #148]
  417a4c:	str	w11, [sp, #156]
  417a50:	str	x4, [sp, #160]
  417a54:	bl	402300 <strlen@plt>
  417a58:	ldp	x3, x12, [sp, #128]
  417a5c:	mov	x24, x0
  417a60:	ldp	w10, w7, [sp, #148]
  417a64:	ldr	w11, [sp, #156]
  417a68:	ldr	x4, [sp, #160]
  417a6c:	cmp	x22, x24
  417a70:	b.hi	4181e0 <wcrtomb@plt+0x158c0>  // b.pmore
  417a74:	ldr	x1, [sp, #168]
  417a78:	mov	x2, x12
  417a7c:	mov	x0, x3
  417a80:	stp	x3, x12, [sp, #128]
  417a84:	stp	w10, w7, [sp, #148]
  417a88:	str	w11, [sp, #156]
  417a8c:	str	x4, [sp, #160]
  417a90:	bl	402660 <memcmp@plt>
  417a94:	ldp	w10, w7, [sp, #148]
  417a98:	ldr	w11, [sp, #156]
  417a9c:	ldp	x3, x12, [sp, #128]
  417aa0:	ldr	x4, [sp, #160]
  417aa4:	cbnz	w0, 4181e0 <wcrtomb@plt+0x158c0>
  417aa8:	cbnz	w10, 417fc4 <wcrtomb@plt+0x156a4>
  417aac:	ldrb	w22, [x3]
  417ab0:	cmp	w22, #0x7e
  417ab4:	b.ls	417e1c <wcrtomb@plt+0x154fc>  // b.plast
  417ab8:	ldr	x0, [sp, #176]
  417abc:	mov	w5, w11
  417ac0:	cmp	x0, #0x1
  417ac4:	b.eq	418050 <wcrtomb@plt+0x15730>  // b.none
  417ac8:	str	xzr, [sp, #248]
  417acc:	cmn	x24, #0x1
  417ad0:	b.ne	417b08 <wcrtomb@plt+0x151e8>  // b.any
  417ad4:	mov	x0, x27
  417ad8:	str	w5, [sp, #128]
  417adc:	str	x12, [sp, #136]
  417ae0:	stp	w10, w7, [sp, #148]
  417ae4:	str	w11, [sp, #156]
  417ae8:	str	x4, [sp, #160]
  417aec:	bl	402300 <strlen@plt>
  417af0:	ldr	w5, [sp, #128]
  417af4:	mov	x24, x0
  417af8:	ldp	w10, w7, [sp, #148]
  417afc:	ldr	w11, [sp, #156]
  417b00:	ldr	x12, [sp, #136]
  417b04:	ldr	x4, [sp, #160]
  417b08:	str	w22, [sp, #220]
  417b0c:	ldr	w22, [sp, #144]
  417b10:	mov	x8, #0x0                   	// #0
  417b14:	stp	x19, x4, [sp, #224]
  417b18:	mov	w19, w21
  417b1c:	mov	x21, x8
  417b20:	str	x12, [sp, #128]
  417b24:	str	w10, [sp, #136]
  417b28:	stp	w25, w5, [sp, #148]
  417b2c:	stp	w7, w11, [sp, #156]
  417b30:	add	x25, x20, x21
  417b34:	add	x3, sp, #0xf8
  417b38:	sub	x2, x24, x25
  417b3c:	add	x1, x27, x25
  417b40:	add	x0, sp, #0xf4
  417b44:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  417b48:	mov	x13, #0x2b                  	// #43
  417b4c:	mov	x3, x0
  417b50:	movk	x13, #0x2, lsl #32
  417b54:	cbz	x0, 417b90 <wcrtomb@plt+0x15270>
  417b58:	cmn	x0, #0x1
  417b5c:	b.eq	418928 <wcrtomb@plt+0x16008>  // b.none
  417b60:	cmn	x0, #0x2
  417b64:	mov	x6, #0x1                   	// #1
  417b68:	b.eq	418960 <wcrtomb@plt+0x16040>  // b.none
  417b6c:	cbnz	w22, 41845c <wcrtomb@plt+0x15b3c>
  417b70:	ldr	w0, [sp, #244]
  417b74:	add	x21, x21, x3
  417b78:	bl	402840 <iswprint@plt>
  417b7c:	cmp	w0, #0x0
  417b80:	csel	w19, w19, wzr, ne  // ne = any
  417b84:	add	x0, sp, #0xf8
  417b88:	bl	402610 <mbsinit@plt>
  417b8c:	cbz	w0, 417b30 <wcrtomb@plt+0x15210>
  417b90:	eor	w1, w19, #0x1
  417b94:	ldr	w0, [sp, #120]
  417b98:	mov	x8, x21
  417b9c:	mov	w21, w19
  417ba0:	ldp	x19, x4, [sp, #224]
  417ba4:	and	w1, w0, w1
  417ba8:	ldr	w10, [sp, #136]
  417bac:	and	w1, w1, #0xff
  417bb0:	ldp	w25, w5, [sp, #148]
  417bb4:	ldp	w7, w11, [sp, #156]
  417bb8:	ldr	w22, [sp, #220]
  417bbc:	ldr	x12, [sp, #128]
  417bc0:	cmp	x8, #0x1
  417bc4:	b.hi	417bd8 <wcrtomb@plt+0x152b8>  // b.pmore
  417bc8:	cbz	w1, 4180c4 <wcrtomb@plt+0x157a4>
  417bcc:	nop
  417bd0:	ldr	w1, [sp, #120]
  417bd4:	mov	w21, #0x0                   	// #0
  417bd8:	add	x8, x20, x8
  417bdc:	mov	w9, #0x0                   	// #0
  417be0:	mov	w2, #0x27                  	// #39
  417be4:	mov	w3, #0x5c                  	// #92
  417be8:	mov	w6, #0x24                  	// #36
  417bec:	cbz	w1, 417ca4 <wcrtomb@plt+0x15384>
  417bf0:	cbnz	w10, 4184dc <wcrtomb@plt+0x15bbc>
  417bf4:	eor	w0, w25, #0x1
  417bf8:	ands	w0, w7, w0
  417bfc:	b.eq	417c34 <wcrtomb@plt+0x15314>  // b.none
  417c00:	cmp	x23, x19
  417c04:	b.ls	417c0c <wcrtomb@plt+0x152ec>  // b.plast
  417c08:	strb	w2, [x28, x19]
  417c0c:	add	x9, x19, #0x1
  417c10:	cmp	x23, x9
  417c14:	b.ls	417c1c <wcrtomb@plt+0x152fc>  // b.plast
  417c18:	strb	w6, [x28, x9]
  417c1c:	add	x9, x19, #0x2
  417c20:	cmp	x23, x9
  417c24:	b.ls	417c2c <wcrtomb@plt+0x1530c>  // b.plast
  417c28:	strb	w2, [x28, x9]
  417c2c:	add	x19, x19, #0x3
  417c30:	mov	w25, w0
  417c34:	cmp	x23, x19
  417c38:	b.ls	417c40 <wcrtomb@plt+0x15320>  // b.plast
  417c3c:	strb	w3, [x28, x19]
  417c40:	add	x0, x19, #0x1
  417c44:	cmp	x23, x0
  417c48:	b.ls	417c58 <wcrtomb@plt+0x15338>  // b.plast
  417c4c:	lsr	w9, w22, #6
  417c50:	add	w9, w9, #0x30
  417c54:	strb	w9, [x28, x0]
  417c58:	add	x0, x19, #0x2
  417c5c:	cmp	x23, x0
  417c60:	b.ls	417c70 <wcrtomb@plt+0x15350>  // b.plast
  417c64:	ubfx	x9, x22, #3, #3
  417c68:	add	w9, w9, #0x30
  417c6c:	strb	w9, [x28, x0]
  417c70:	and	w22, w22, #0x7
  417c74:	add	x20, x20, #0x1
  417c78:	add	w22, w22, #0x30
  417c7c:	cmp	x8, x20
  417c80:	add	x19, x19, #0x3
  417c84:	b.ls	417ec4 <wcrtomb@plt+0x155a4>  // b.plast
  417c88:	mov	w9, w1
  417c8c:	cmp	x23, x19
  417c90:	b.ls	417c98 <wcrtomb@plt+0x15378>  // b.plast
  417c94:	strb	w22, [x28, x19]
  417c98:	ldrb	w22, [x27, x20]
  417c9c:	add	x19, x19, #0x1
  417ca0:	cbnz	w1, 417bf0 <wcrtomb@plt+0x152d0>
  417ca4:	eor	w0, w9, #0x1
  417ca8:	and	w0, w25, w0
  417cac:	and	w0, w0, #0xff
  417cb0:	cbz	w5, 417cc4 <wcrtomb@plt+0x153a4>
  417cb4:	cmp	x23, x19
  417cb8:	b.ls	417cc0 <wcrtomb@plt+0x153a0>  // b.plast
  417cbc:	strb	w3, [x28, x19]
  417cc0:	add	x19, x19, #0x1
  417cc4:	add	x20, x20, #0x1
  417cc8:	cmp	x20, x8
  417ccc:	b.cs	417f60 <wcrtomb@plt+0x15640>  // b.hs, b.nlast
  417cd0:	cbz	w0, 4186ac <wcrtomb@plt+0x15d8c>
  417cd4:	cmp	x23, x19
  417cd8:	b.ls	417ce0 <wcrtomb@plt+0x153c0>  // b.plast
  417cdc:	strb	w2, [x28, x19]
  417ce0:	add	x0, x19, #0x1
  417ce4:	cmp	x23, x0
  417ce8:	b.ls	417cf0 <wcrtomb@plt+0x153d0>  // b.plast
  417cec:	strb	w2, [x28, x0]
  417cf0:	add	x19, x19, #0x2
  417cf4:	mov	w5, #0x0                   	// #0
  417cf8:	mov	w25, #0x0                   	// #0
  417cfc:	b	417c8c <wcrtomb@plt+0x1536c>
  417d00:	cmp	w21, #0x1
  417d04:	b.eq	418700 <wcrtomb@plt+0x15de0>  // b.none
  417d08:	b.ls	4182c0 <wcrtomb@plt+0x159a0>  // b.plast
  417d0c:	cmp	w0, #0x2
  417d10:	b.eq	418778 <wcrtomb@plt+0x15e58>  // b.none
  417d14:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  417d18:	add	x0, x0, #0xc80
  417d1c:	str	x0, [sp, #168]
  417d20:	mov	w1, #0x1                   	// #1
  417d24:	ldr	w0, [sp, #184]
  417d28:	mov	w7, w1
  417d2c:	mov	w5, w1
  417d30:	mov	w10, w1
  417d34:	stp	w1, w1, [sp, #120]
  417d38:	mov	w11, #0x0                   	// #0
  417d3c:	str	w1, [sp, #144]
  417d40:	mov	w25, #0x0                   	// #0
  417d44:	str	w1, [sp, #208]
  417d48:	and	w1, w0, w1
  417d4c:	and	w0, w0, #0x4
  417d50:	mov	x12, #0x1                   	// #1
  417d54:	mov	x19, #0x0                   	// #0
  417d58:	str	wzr, [sp, #188]
  417d5c:	str	xzr, [sp, #192]
  417d60:	stp	w1, w0, [sp, #212]
  417d64:	mov	w0, #0x2                   	// #2
  417d68:	str	w0, [sp, #116]
  417d6c:	b	417a00 <wcrtomb@plt+0x150e0>
  417d70:	ldrb	w0, [x27, x20]
  417d74:	cmp	w0, #0x0
  417d78:	cset	w21, ne  // ne = any
  417d7c:	cbnz	w21, 417a24 <wcrtomb@plt+0x15104>
  417d80:	ldr	w0, [sp, #144]
  417d84:	cmp	x19, #0x0
  417d88:	mov	w5, w26
  417d8c:	mov	x26, x4
  417d90:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  417d94:	b.ne	4180f4 <wcrtomb@plt+0x157d4>  // b.any
  417d98:	eor	w10, w10, #0x1
  417d9c:	ands	w7, w10, w7
  417da0:	b.eq	4189b0 <wcrtomb@plt+0x16090>  // b.none
  417da4:	ldr	w0, [sp, #188]
  417da8:	cbz	w0, 4189b4 <wcrtomb@plt+0x16094>
  417dac:	cbnz	w5, 418a10 <wcrtomb@plt+0x160f0>
  417db0:	ldr	x2, [sp, #192]
  417db4:	cmp	x23, #0x0
  417db8:	cset	w0, eq  // eq = none
  417dbc:	cmp	x2, #0x0
  417dc0:	mov	x1, x2
  417dc4:	csel	w0, w0, wzr, ne  // ne = any
  417dc8:	cbz	w0, 418a08 <wcrtomb@plt+0x160e8>
  417dcc:	str	w0, [sp, #188]
  417dd0:	mov	w0, #0x27                  	// #39
  417dd4:	ldr	x23, [sp, #192]
  417dd8:	str	x1, [sp, #192]
  417ddc:	mov	w1, #0x1                   	// #1
  417de0:	mov	x12, #0x1                   	// #1
  417de4:	mov	w7, w1
  417de8:	mov	x19, x12
  417dec:	mov	w11, #0x0                   	// #0
  417df0:	mov	w10, #0x0                   	// #0
  417df4:	strb	w0, [x28]
  417df8:	mov	w0, #0x2                   	// #2
  417dfc:	str	w0, [sp, #116]
  417e00:	str	w1, [sp, #124]
  417e04:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  417e08:	add	x1, x1, #0xc80
  417e0c:	str	wzr, [sp, #144]
  417e10:	str	x1, [sp, #168]
  417e14:	str	wzr, [sp, #208]
  417e18:	b	417a00 <wcrtomb@plt+0x150e0>
  417e1c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  417e20:	add	x0, x0, #0xd00
  417e24:	ldrh	w0, [x0, w22, uxtw #1]
  417e28:	adr	x1, 417e34 <wcrtomb@plt+0x15514>
  417e2c:	add	x0, x1, w0, sxth #2
  417e30:	br	x0
  417e34:	ldr	w0, [sp, #124]
  417e38:	cbnz	w0, 418950 <wcrtomb@plt+0x16030>
  417e3c:	mov	w0, w25
  417e40:	mov	w21, w11
  417e44:	mov	w5, w11
  417e48:	cbz	x4, 417f58 <wcrtomb@plt+0x15638>
  417e4c:	ubfx	x1, x22, #5, #8
  417e50:	ldr	w1, [x4, x1, lsl #2]
  417e54:	lsr	w1, w1, w22
  417e58:	tbz	w1, #0, 417f58 <wcrtomb@plt+0x15638>
  417e5c:	cbnz	w10, 417fa4 <wcrtomb@plt+0x15684>
  417e60:	eor	w1, w25, #0x1
  417e64:	ands	w1, w7, w1
  417e68:	b.eq	417eac <wcrtomb@plt+0x1558c>  // b.none
  417e6c:	cmp	x23, x19
  417e70:	b.ls	417e7c <wcrtomb@plt+0x1555c>  // b.plast
  417e74:	mov	w0, #0x27                  	// #39
  417e78:	strb	w0, [x28, x19]
  417e7c:	add	x0, x19, #0x1
  417e80:	cmp	x23, x0
  417e84:	b.ls	417e90 <wcrtomb@plt+0x15570>  // b.plast
  417e88:	mov	w2, #0x24                  	// #36
  417e8c:	strb	w2, [x28, x0]
  417e90:	add	x0, x19, #0x2
  417e94:	cmp	x23, x0
  417e98:	b.ls	417ea4 <wcrtomb@plt+0x15584>  // b.plast
  417e9c:	mov	w2, #0x27                  	// #39
  417ea0:	strb	w2, [x28, x0]
  417ea4:	add	x19, x19, #0x3
  417ea8:	mov	w25, w1
  417eac:	cmp	x23, x19
  417eb0:	b.ls	417ebc <wcrtomb@plt+0x1559c>  // b.plast
  417eb4:	mov	w0, #0x5c                  	// #92
  417eb8:	strb	w0, [x28, x19]
  417ebc:	add	x19, x19, #0x1
  417ec0:	add	x20, x20, #0x1
  417ec4:	cmp	x19, x23
  417ec8:	b.cs	417ed0 <wcrtomb@plt+0x155b0>  // b.hs, b.nlast
  417ecc:	strb	w22, [x28, x19]
  417ed0:	cmp	w21, #0x0
  417ed4:	add	x19, x19, #0x1
  417ed8:	csel	w26, w26, wzr, ne  // ne = any
  417edc:	b	417a10 <wcrtomb@plt+0x150f0>
  417ee0:	cbnz	w10, 4180fc <wcrtomb@plt+0x157dc>
  417ee4:	mov	w5, #0x0                   	// #0
  417ee8:	ldr	x1, [sp, #192]
  417eec:	cmp	x23, #0x0
  417ef0:	mov	x0, #0x0                   	// #0
  417ef4:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  417ef8:	b.eq	417f3c <wcrtomb@plt+0x1561c>  // b.none
  417efc:	cmp	x23, x19
  417f00:	b.ls	417f0c <wcrtomb@plt+0x155ec>  // b.plast
  417f04:	mov	w0, #0x27                  	// #39
  417f08:	strb	w0, [x28, x19]
  417f0c:	add	x0, x19, #0x1
  417f10:	cmp	x23, x0
  417f14:	b.ls	417f20 <wcrtomb@plt+0x15600>  // b.plast
  417f18:	mov	w1, #0x5c                  	// #92
  417f1c:	strb	w1, [x28, x0]
  417f20:	add	x1, x19, #0x2
  417f24:	mov	x0, x23
  417f28:	cmp	x23, x1
  417f2c:	b.ls	418a40 <wcrtomb@plt+0x16120>  // b.plast
  417f30:	ldr	x23, [sp, #192]
  417f34:	mov	w2, #0x27                  	// #39
  417f38:	strb	w2, [x28, x1]
  417f3c:	add	x19, x19, #0x3
  417f40:	mov	w22, #0x27                  	// #39
  417f44:	mov	w25, #0x0                   	// #0
  417f48:	str	w21, [sp, #188]
  417f4c:	str	x23, [sp, #192]
  417f50:	mov	x23, x0
  417f54:	mov	w0, #0x0                   	// #0
  417f58:	cbnz	w5, 417e5c <wcrtomb@plt+0x1553c>
  417f5c:	add	x20, x20, #0x1
  417f60:	cbz	w0, 417ec4 <wcrtomb@plt+0x155a4>
  417f64:	cmp	x23, x19
  417f68:	b.ls	417f74 <wcrtomb@plt+0x15654>  // b.plast
  417f6c:	mov	w0, #0x27                  	// #39
  417f70:	strb	w0, [x28, x19]
  417f74:	add	x0, x19, #0x1
  417f78:	cmp	x23, x0
  417f7c:	b.ls	417f88 <wcrtomb@plt+0x15668>  // b.plast
  417f80:	mov	w1, #0x27                  	// #39
  417f84:	strb	w1, [x28, x0]
  417f88:	add	x19, x19, #0x2
  417f8c:	mov	w25, #0x0                   	// #0
  417f90:	b	417ec4 <wcrtomb@plt+0x155a4>
  417f94:	mov	w22, #0x66                  	// #102
  417f98:	mov	w21, #0x0                   	// #0
  417f9c:	nop
  417fa0:	cbz	w10, 417e60 <wcrtomb@plt+0x15540>
  417fa4:	ldr	w0, [sp, #120]
  417fa8:	and	w0, w0, w7
  417fac:	str	w0, [sp, #120]
  417fb0:	ldp	w1, w0, [sp, #116]
  417fb4:	cmp	w0, #0x0
  417fb8:	mov	w0, #0x4                   	// #4
  417fbc:	csel	w0, w1, w0, eq  // eq = none
  417fc0:	str	w0, [sp, #116]
  417fc4:	ldr	w4, [sp, #116]
  417fc8:	mov	x3, x24
  417fcc:	ldr	x7, [sp, #200]
  417fd0:	mov	x2, x27
  417fd4:	ldr	x0, [sp, #256]
  417fd8:	str	x0, [sp]
  417fdc:	ldr	w0, [sp, #184]
  417fe0:	mov	x1, x23
  417fe4:	mov	x6, #0x0                   	// #0
  417fe8:	and	w5, w0, #0xfffffffd
  417fec:	mov	x0, x28
  417ff0:	bl	417908 <wcrtomb@plt+0x14fe8>
  417ff4:	mov	x19, x0
  417ff8:	mov	x0, x19
  417ffc:	ldp	x29, x30, [sp, #16]
  418000:	ldp	x19, x20, [sp, #32]
  418004:	ldp	x21, x22, [sp, #48]
  418008:	ldp	x23, x24, [sp, #64]
  41800c:	ldp	x25, x26, [sp, #80]
  418010:	ldp	x27, x28, [sp, #96]
  418014:	add	sp, sp, #0x100
  418018:	ret
  41801c:	mov	w22, #0x62                  	// #98
  418020:	mov	w21, #0x0                   	// #0
  418024:	b	417fa0 <wcrtomb@plt+0x15680>
  418028:	mov	w22, #0x61                  	// #97
  41802c:	mov	w21, #0x0                   	// #0
  418030:	b	417fa0 <wcrtomb@plt+0x15680>
  418034:	ldrb	w22, [x27, x20]
  418038:	cmp	w22, #0x7e
  41803c:	b.ls	4180a4 <wcrtomb@plt+0x15784>  // b.plast
  418040:	ldr	x0, [sp, #176]
  418044:	mov	w5, #0x0                   	// #0
  418048:	cmp	x0, #0x1
  41804c:	b.ne	417ac8 <wcrtomb@plt+0x151a8>  // b.any
  418050:	str	w5, [sp, #128]
  418054:	str	x12, [sp, #136]
  418058:	stp	w10, w7, [sp, #148]
  41805c:	str	w11, [sp, #156]
  418060:	str	x4, [sp, #160]
  418064:	bl	4026a0 <__ctype_b_loc@plt>
  418068:	ldr	x0, [x0]
  41806c:	ldr	w5, [sp, #128]
  418070:	ldp	w10, w7, [sp, #148]
  418074:	ldrh	w21, [x0, w22, uxtw #1]
  418078:	ldr	w11, [sp, #156]
  41807c:	ands	w0, w21, #0x4000
  418080:	ldr	w0, [sp, #120]
  418084:	cset	w1, eq  // eq = none
  418088:	ubfx	x21, x21, #14, #1
  41808c:	and	w1, w0, w1
  418090:	ldr	x12, [sp, #136]
  418094:	ldr	x4, [sp, #160]
  418098:	ldr	x8, [sp, #176]
  41809c:	cbz	w1, 4180c4 <wcrtomb@plt+0x157a4>
  4180a0:	b	417bd0 <wcrtomb@plt+0x152b0>
  4180a4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  4180a8:	add	x0, x0, #0xe00
  4180ac:	ldrh	w0, [x0, w22, uxtw #1]
  4180b0:	adr	x1, 4180bc <wcrtomb@plt+0x1579c>
  4180b4:	add	x0, x1, w0, sxth #2
  4180b8:	br	x0
  4180bc:	mov	w21, w11
  4180c0:	mov	w5, #0x0                   	// #0
  4180c4:	ldr	w1, [sp, #124]
  4180c8:	mov	w0, w25
  4180cc:	cbz	w1, 417e48 <wcrtomb@plt+0x15528>
  4180d0:	mov	w0, w25
  4180d4:	cbnz	w10, 417e48 <wcrtomb@plt+0x15528>
  4180d8:	mov	w0, w25
  4180dc:	cbnz	w5, 417e5c <wcrtomb@plt+0x1553c>
  4180e0:	b	417f5c <wcrtomb@plt+0x1563c>
  4180e4:	mov	w5, #0x0                   	// #0
  4180e8:	mov	w21, #0x0                   	// #0
  4180ec:	ldr	w0, [sp, #144]
  4180f0:	cbz	w0, 4180c4 <wcrtomb@plt+0x157a4>
  4180f4:	mov	w0, #0x2                   	// #2
  4180f8:	str	w0, [sp, #116]
  4180fc:	ldp	w1, w0, [sp, #116]
  418100:	cmp	w0, #0x0
  418104:	mov	w0, #0x4                   	// #4
  418108:	csel	w0, w1, w0, eq  // eq = none
  41810c:	str	w0, [sp, #116]
  418110:	b	417fc4 <wcrtomb@plt+0x156a4>
  418114:	ldr	w0, [sp, #116]
  418118:	cmp	w0, #0x2
  41811c:	b.eq	418440 <wcrtomb@plt+0x15b20>  // b.none
  418120:	mov	w5, #0x0                   	// #0
  418124:	ldr	w0, [sp, #116]
  418128:	cmp	w0, #0x5
  41812c:	b.ne	418150 <wcrtomb@plt+0x15830>  // b.any
  418130:	ldr	w0, [sp, #216]
  418134:	cbz	w0, 418150 <wcrtomb@plt+0x15830>
  418138:	add	x6, x20, #0x2
  41813c:	cmp	x6, x24
  418140:	b.cs	418150 <wcrtomb@plt+0x15830>  // b.hs, b.nlast
  418144:	ldrb	w22, [x3, #1]
  418148:	cmp	w22, #0x3f
  41814c:	b.eq	418794 <wcrtomb@plt+0x15e74>  // b.none
  418150:	mov	w21, #0x0                   	// #0
  418154:	mov	w22, #0x3f                  	// #63
  418158:	b	4180c4 <wcrtomb@plt+0x157a4>
  41815c:	ldr	w0, [sp, #116]
  418160:	cmp	w0, #0x2
  418164:	b.eq	417ee0 <wcrtomb@plt+0x155c0>  // b.none
  418168:	mov	w5, #0x0                   	// #0
  41816c:	mov	w22, #0x27                  	// #39
  418170:	str	w21, [sp, #188]
  418174:	b	4180c4 <wcrtomb@plt+0x157a4>
  418178:	mov	w5, #0x0                   	// #0
  41817c:	mov	w0, #0x74                  	// #116
  418180:	ldr	w1, [sp, #144]
  418184:	cbnz	w1, 4180f4 <wcrtomb@plt+0x157d4>
  418188:	ldr	w1, [sp, #120]
  41818c:	cbnz	w1, 4181a0 <wcrtomb@plt+0x15880>
  418190:	mov	w0, w25
  418194:	mov	w21, #0x0                   	// #0
  418198:	cbnz	w10, 417e48 <wcrtomb@plt+0x15528>
  41819c:	b	4180d8 <wcrtomb@plt+0x157b8>
  4181a0:	mov	w22, w0
  4181a4:	mov	w21, #0x0                   	// #0
  4181a8:	b	417fa0 <wcrtomb@plt+0x15680>
  4181ac:	mov	w5, #0x0                   	// #0
  4181b0:	mov	w0, #0x66                  	// #102
  4181b4:	b	418188 <wcrtomb@plt+0x15868>
  4181b8:	mov	w5, #0x0                   	// #0
  4181bc:	mov	w0, #0x62                  	// #98
  4181c0:	b	418188 <wcrtomb@plt+0x15868>
  4181c4:	ldr	w0, [sp, #120]
  4181c8:	cbnz	w0, 418210 <wcrtomb@plt+0x158f0>
  4181cc:	ldr	w0, [sp, #212]
  4181d0:	mov	w5, #0x0                   	// #0
  4181d4:	cbz	w0, 418190 <wcrtomb@plt+0x15870>
  4181d8:	add	x20, x20, #0x1
  4181dc:	b	417a10 <wcrtomb@plt+0x150f0>
  4181e0:	ldrb	w22, [x3]
  4181e4:	cmp	w22, #0x7e
  4181e8:	b.hi	418040 <wcrtomb@plt+0x15720>  // b.pmore
  4181ec:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  4181f0:	add	x0, x0, #0xf00
  4181f4:	ldrh	w0, [x0, w22, uxtw #1]
  4181f8:	adr	x1, 418204 <wcrtomb@plt+0x158e4>
  4181fc:	add	x0, x1, w0, sxth #2
  418200:	br	x0
  418204:	mov	w5, #0x0                   	// #0
  418208:	mov	w21, #0x0                   	// #0
  41820c:	b	4180c4 <wcrtomb@plt+0x157a4>
  418210:	cbnz	w10, 4184dc <wcrtomb@plt+0x15bbc>
  418214:	mov	w5, #0x0                   	// #0
  418218:	eor	w0, w25, #0x1
  41821c:	ands	w0, w7, w0
  418220:	b.eq	4183dc <wcrtomb@plt+0x15abc>  // b.none
  418224:	cmp	x23, x19
  418228:	b.ls	418234 <wcrtomb@plt+0x15914>  // b.plast
  41822c:	mov	w1, #0x27                  	// #39
  418230:	strb	w1, [x28, x19]
  418234:	add	x1, x19, #0x1
  418238:	cmp	x23, x1
  41823c:	b.ls	418248 <wcrtomb@plt+0x15928>  // b.plast
  418240:	mov	w2, #0x24                  	// #36
  418244:	strb	w2, [x28, x1]
  418248:	add	x1, x19, #0x2
  41824c:	cmp	x23, x1
  418250:	b.ls	41825c <wcrtomb@plt+0x1593c>  // b.plast
  418254:	mov	w2, #0x27                  	// #39
  418258:	strb	w2, [x28, x1]
  41825c:	add	x1, x19, #0x3
  418260:	cmp	x23, x1
  418264:	b.ls	4184a8 <wcrtomb@plt+0x15b88>  // b.plast
  418268:	mov	w25, w0
  41826c:	mov	w0, #0x5c                  	// #92
  418270:	strb	w0, [x28, x1]
  418274:	ldr	w0, [sp, #116]
  418278:	add	x19, x1, #0x1
  41827c:	cmp	w0, #0x2
  418280:	b.eq	4184b0 <wcrtomb@plt+0x15b90>  // b.none
  418284:	add	x0, x20, #0x1
  418288:	cmp	x0, x24
  41828c:	b.cs	4184c4 <wcrtomb@plt+0x15ba4>  // b.hs, b.nlast
  418290:	ldrb	w2, [x27, x0]
  418294:	mov	w22, #0x30                  	// #48
  418298:	mov	w0, #0x0                   	// #0
  41829c:	sub	w2, w2, #0x30
  4182a0:	and	w2, w2, #0xff
  4182a4:	cmp	w2, #0x9
  4182a8:	b.ls	418524 <wcrtomb@plt+0x15c04>  // b.plast
  4182ac:	ldr	w1, [sp, #124]
  4182b0:	mov	w21, #0x0                   	// #0
  4182b4:	cbz	w1, 417e48 <wcrtomb@plt+0x15528>
  4182b8:	cbnz	w5, 417e5c <wcrtomb@plt+0x1553c>
  4182bc:	b	417f5c <wcrtomb@plt+0x1563c>
  4182c0:	cbnz	w0, 418aa4 <wcrtomb@plt+0x16184>
  4182c4:	ldr	w0, [sp, #184]
  4182c8:	mov	w5, #0x1                   	// #1
  4182cc:	mov	w7, #0x0                   	// #0
  4182d0:	mov	w11, #0x0                   	// #0
  4182d4:	and	w1, w0, w5
  4182d8:	mov	w25, #0x0                   	// #0
  4182dc:	and	w0, w0, #0x4
  4182e0:	mov	w10, #0x0                   	// #0
  4182e4:	mov	x12, #0x0                   	// #0
  4182e8:	mov	x19, #0x0                   	// #0
  4182ec:	stp	wzr, w5, [sp, #120]
  4182f0:	str	wzr, [sp, #144]
  4182f4:	str	xzr, [sp, #168]
  4182f8:	str	wzr, [sp, #188]
  4182fc:	str	xzr, [sp, #192]
  418300:	stp	wzr, w1, [sp, #208]
  418304:	str	w0, [sp, #216]
  418308:	b	417a00 <wcrtomb@plt+0x150e0>
  41830c:	cmp	w0, #0x5
  418310:	b.ne	418374 <wcrtomb@plt+0x15a54>  // b.any
  418314:	ldr	w0, [sp, #184]
  418318:	and	w1, w0, #0x1
  41831c:	and	w0, w0, #0x4
  418320:	stp	w1, w0, [sp, #212]
  418324:	cbnz	w20, 41881c <wcrtomb@plt+0x15efc>
  418328:	cbz	x23, 418738 <wcrtomb@plt+0x15e18>
  41832c:	mov	w11, #0x1                   	// #1
  418330:	mov	w0, #0x22                  	// #34
  418334:	mov	x12, #0x1                   	// #1
  418338:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  41833c:	mov	w5, w11
  418340:	add	x1, x1, #0xc58
  418344:	mov	x19, x12
  418348:	mov	w7, #0x0                   	// #0
  41834c:	mov	w25, #0x0                   	// #0
  418350:	mov	w10, #0x0                   	// #0
  418354:	strb	w0, [x28]
  418358:	stp	w11, wzr, [sp, #120]
  41835c:	str	wzr, [sp, #144]
  418360:	str	x1, [sp, #168]
  418364:	str	wzr, [sp, #188]
  418368:	str	xzr, [sp, #192]
  41836c:	str	wzr, [sp, #208]
  418370:	b	417a00 <wcrtomb@plt+0x150e0>
  418374:	cmp	w0, #0x6
  418378:	b.ne	418aa4 <wcrtomb@plt+0x16184>  // b.any
  41837c:	mov	w0, #0x1                   	// #1
  418380:	mov	w1, w0
  418384:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  418388:	add	x0, x0, #0xc58
  41838c:	str	x0, [sp, #168]
  418390:	mov	w11, w1
  418394:	ldr	w0, [sp, #184]
  418398:	mov	w5, w1
  41839c:	mov	w10, w1
  4183a0:	stp	w1, wzr, [sp, #120]
  4183a4:	str	w1, [sp, #208]
  4183a8:	and	w1, w0, w1
  4183ac:	and	w0, w0, #0x4
  4183b0:	mov	w7, #0x0                   	// #0
  4183b4:	mov	w25, #0x0                   	// #0
  4183b8:	mov	x12, #0x1                   	// #1
  4183bc:	mov	x19, #0x0                   	// #0
  4183c0:	str	wzr, [sp, #144]
  4183c4:	str	wzr, [sp, #188]
  4183c8:	str	xzr, [sp, #192]
  4183cc:	stp	w1, w0, [sp, #212]
  4183d0:	mov	w0, #0x5                   	// #5
  4183d4:	str	w0, [sp, #116]
  4183d8:	b	417a00 <wcrtomb@plt+0x150e0>
  4183dc:	mov	x1, x19
  4183e0:	cmp	x23, x19
  4183e4:	b.ls	418274 <wcrtomb@plt+0x15954>  // b.plast
  4183e8:	mov	w0, w25
  4183ec:	mov	w25, w0
  4183f0:	mov	w0, #0x5c                  	// #92
  4183f4:	strb	w0, [x28, x1]
  4183f8:	b	418274 <wcrtomb@plt+0x15954>
  4183fc:	mov	w5, #0x0                   	// #0
  418400:	cmp	x24, #0x1
  418404:	cset	w0, ne  // ne = any
  418408:	cmn	x24, #0x1
  41840c:	b.eq	418420 <wcrtomb@plt+0x15b00>  // b.none
  418410:	cbnz	w0, 418208 <wcrtomb@plt+0x158e8>
  418414:	cbz	x20, 4180ec <wcrtomb@plt+0x157cc>
  418418:	mov	w21, #0x0                   	// #0
  41841c:	b	4180c4 <wcrtomb@plt+0x157a4>
  418420:	ldrb	w0, [x27, #1]
  418424:	cmp	w0, #0x0
  418428:	cset	w0, ne  // ne = any
  41842c:	cbnz	w0, 418208 <wcrtomb@plt+0x158e8>
  418430:	b	418414 <wcrtomb@plt+0x15af4>
  418434:	mov	w5, #0x0                   	// #0
  418438:	cbnz	x20, 418418 <wcrtomb@plt+0x15af8>
  41843c:	b	4180ec <wcrtomb@plt+0x157cc>
  418440:	cbnz	w10, 4180fc <wcrtomb@plt+0x157dc>
  418444:	mov	w5, #0x0                   	// #0
  418448:	mov	w0, w25
  41844c:	mov	w21, #0x0                   	// #0
  418450:	mov	w22, #0x3f                  	// #63
  418454:	cbnz	w5, 417e5c <wcrtomb@plt+0x1553c>
  418458:	b	417f5c <wcrtomb@plt+0x1563c>
  41845c:	cmp	x0, #0x1
  418460:	b.eq	417b70 <wcrtomb@plt+0x15250>  // b.none
  418464:	add	x2, x25, #0x1
  418468:	add	x0, x27, x0
  41846c:	add	x2, x27, x2
  418470:	add	x9, x0, x25
  418474:	b	418484 <wcrtomb@plt+0x15b64>
  418478:	add	x2, x2, #0x1
  41847c:	cmp	x9, x2
  418480:	b.eq	417b70 <wcrtomb@plt+0x15250>  // b.none
  418484:	ldrb	w0, [x2]
  418488:	sub	w0, w0, #0x5b
  41848c:	and	w0, w0, #0xff
  418490:	cmp	w0, #0x21
  418494:	b.hi	418478 <wcrtomb@plt+0x15b58>  // b.pmore
  418498:	lsl	x0, x6, x0
  41849c:	tst	x0, x13
  4184a0:	b.eq	418478 <wcrtomb@plt+0x15b58>  // b.none
  4184a4:	b	4180f4 <wcrtomb@plt+0x157d4>
  4184a8:	add	x19, x19, #0x4
  4184ac:	mov	w25, w0
  4184b0:	mov	w0, #0x0                   	// #0
  4184b4:	mov	w21, #0x0                   	// #0
  4184b8:	mov	w22, #0x30                  	// #48
  4184bc:	cbnz	w5, 417e5c <wcrtomb@plt+0x1553c>
  4184c0:	b	417f5c <wcrtomb@plt+0x1563c>
  4184c4:	ldr	w1, [sp, #124]
  4184c8:	mov	w0, #0x0                   	// #0
  4184cc:	mov	w22, #0x30                  	// #48
  4184d0:	mov	w21, #0x0                   	// #0
  4184d4:	cbz	w1, 417e48 <wcrtomb@plt+0x15528>
  4184d8:	b	4182b8 <wcrtomb@plt+0x15998>
  4184dc:	str	w7, [sp, #120]
  4184e0:	b	4180fc <wcrtomb@plt+0x157dc>
  4184e4:	mov	w5, w11
  4184e8:	mov	w21, #0x0                   	// #0
  4184ec:	b	4180c4 <wcrtomb@plt+0x157a4>
  4184f0:	mov	w1, w19
  4184f4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  4184f8:	add	x0, x0, #0xc88
  4184fc:	str	w10, [sp, #120]
  418500:	bl	4177a0 <wcrtomb@plt+0x14e80>
  418504:	str	x0, [sp, #200]
  418508:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  41850c:	add	x0, x1, #0xc80
  418510:	mov	w1, w19
  418514:	bl	4177a0 <wcrtomb@plt+0x14e80>
  418518:	ldr	w10, [sp, #120]
  41851c:	str	x0, [sp, #256]
  418520:	b	41799c <wcrtomb@plt+0x1507c>
  418524:	cmp	x23, x19
  418528:	b.ls	418530 <wcrtomb@plt+0x15c10>  // b.plast
  41852c:	strb	w22, [x28, x19]
  418530:	add	x0, x1, #0x2
  418534:	cmp	x23, x0
  418538:	b.ls	418544 <wcrtomb@plt+0x15c24>  // b.plast
  41853c:	mov	w2, #0x30                  	// #48
  418540:	strb	w2, [x28, x0]
  418544:	add	x19, x1, #0x3
  418548:	mov	w0, #0x0                   	// #0
  41854c:	mov	w22, #0x30                  	// #48
  418550:	b	4182ac <wcrtomb@plt+0x1598c>
  418554:	mov	w5, #0x0                   	// #0
  418558:	ldr	w0, [sp, #116]
  41855c:	cmp	w0, #0x2
  418560:	b.eq	4185e0 <wcrtomb@plt+0x15cc0>  // b.none
  418564:	ldr	w1, [sp, #208]
  418568:	mov	w22, #0x5c                  	// #92
  41856c:	mov	w0, w22
  418570:	cbz	w1, 418188 <wcrtomb@plt+0x15868>
  418574:	add	x20, x20, #0x1
  418578:	mov	w0, w25
  41857c:	mov	w21, #0x0                   	// #0
  418580:	b	417f60 <wcrtomb@plt+0x15640>
  418584:	mov	w5, #0x0                   	// #0
  418588:	mov	w0, #0x76                  	// #118
  41858c:	b	418188 <wcrtomb@plt+0x15868>
  418590:	mov	w21, w11
  418594:	mov	w5, #0x0                   	// #0
  418598:	b	4180ec <wcrtomb@plt+0x157cc>
  41859c:	mov	w5, #0x0                   	// #0
  4185a0:	mov	w0, #0x72                  	// #114
  4185a4:	b	418180 <wcrtomb@plt+0x15860>
  4185a8:	mov	w5, #0x0                   	// #0
  4185ac:	mov	w0, #0x6e                  	// #110
  4185b0:	b	418180 <wcrtomb@plt+0x15860>
  4185b4:	mov	w5, #0x0                   	// #0
  4185b8:	mov	w0, #0x61                  	// #97
  4185bc:	b	418188 <wcrtomb@plt+0x15868>
  4185c0:	mov	w5, #0x0                   	// #0
  4185c4:	mov	w22, #0xa                   	// #10
  4185c8:	mov	w0, #0x6e                  	// #110
  4185cc:	b	418188 <wcrtomb@plt+0x15868>
  4185d0:	mov	w5, #0x0                   	// #0
  4185d4:	mov	w22, #0xd                   	// #13
  4185d8:	mov	w0, #0x72                  	// #114
  4185dc:	b	418188 <wcrtomb@plt+0x15868>
  4185e0:	cbnz	w10, 4180fc <wcrtomb@plt+0x157dc>
  4185e4:	add	x20, x20, #0x1
  4185e8:	mov	w0, w25
  4185ec:	mov	w21, #0x0                   	// #0
  4185f0:	mov	w22, #0x5c                  	// #92
  4185f4:	b	417f60 <wcrtomb@plt+0x15640>
  4185f8:	ldr	w0, [sp, #184]
  4185fc:	and	w1, w0, #0x1
  418600:	and	w0, w0, #0x4
  418604:	stp	w1, w0, [sp, #212]
  418608:	cbnz	w20, 4186b4 <wcrtomb@plt+0x15d94>
  41860c:	mov	w0, #0x1                   	// #1
  418610:	str	w0, [sp, #120]
  418614:	cbnz	x23, 418a8c <wcrtomb@plt+0x1616c>
  418618:	mov	w0, #0x1                   	// #1
  41861c:	mov	w5, w0
  418620:	mov	w7, w0
  418624:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  418628:	add	x0, x0, #0xc80
  41862c:	mov	x12, #0x1                   	// #1
  418630:	mov	w11, #0x0                   	// #0
  418634:	mov	x19, x12
  418638:	mov	w25, #0x0                   	// #0
  41863c:	mov	w10, #0x0                   	// #0
  418640:	str	w5, [sp, #124]
  418644:	str	wzr, [sp, #144]
  418648:	str	x0, [sp, #168]
  41864c:	mov	w0, #0x2                   	// #2
  418650:	str	w0, [sp, #116]
  418654:	str	wzr, [sp, #188]
  418658:	str	xzr, [sp, #192]
  41865c:	str	wzr, [sp, #208]
  418660:	b	417a00 <wcrtomb@plt+0x150e0>
  418664:	ldr	w0, [sp, #184]
  418668:	mov	w11, #0x1                   	// #1
  41866c:	mov	w7, #0x0                   	// #0
  418670:	mov	w5, w11
  418674:	and	w1, w0, w11
  418678:	mov	w25, #0x0                   	// #0
  41867c:	and	w0, w0, #0x4
  418680:	mov	w10, #0x0                   	// #0
  418684:	mov	x12, #0x0                   	// #0
  418688:	mov	x19, #0x0                   	// #0
  41868c:	stp	w11, wzr, [sp, #120]
  418690:	str	wzr, [sp, #144]
  418694:	str	xzr, [sp, #168]
  418698:	str	wzr, [sp, #188]
  41869c:	str	xzr, [sp, #192]
  4186a0:	stp	wzr, w1, [sp, #208]
  4186a4:	str	w0, [sp, #216]
  4186a8:	b	417a00 <wcrtomb@plt+0x150e0>
  4186ac:	mov	w5, #0x0                   	// #0
  4186b0:	b	417c8c <wcrtomb@plt+0x1536c>
  4186b4:	mov	w1, #0x1                   	// #1
  4186b8:	mov	w10, w1
  4186bc:	mov	w7, w1
  4186c0:	mov	w5, w1
  4186c4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  4186c8:	add	x0, x0, #0xc80
  4186cc:	str	w1, [sp, #124]
  4186d0:	str	w1, [sp, #144]
  4186d4:	str	x0, [sp, #168]
  4186d8:	mov	w0, #0x2                   	// #2
  4186dc:	mov	w11, #0x0                   	// #0
  4186e0:	mov	w25, #0x0                   	// #0
  4186e4:	mov	x12, #0x1                   	// #1
  4186e8:	mov	x19, #0x0                   	// #0
  4186ec:	stp	w0, wzr, [sp, #116]
  4186f0:	str	wzr, [sp, #188]
  4186f4:	str	xzr, [sp, #192]
  4186f8:	str	wzr, [sp, #208]
  4186fc:	b	417a00 <wcrtomb@plt+0x150e0>
  418700:	ldr	w1, [sp, #184]
  418704:	mov	w10, w0
  418708:	mov	w7, w0
  41870c:	mov	w5, w0
  418710:	str	w0, [sp, #124]
  418714:	and	w2, w1, #0x1
  418718:	str	w0, [sp, #144]
  41871c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  418720:	add	x0, x0, #0xc80
  418724:	str	x0, [sp, #168]
  418728:	and	w0, w1, #0x4
  41872c:	str	w2, [sp, #212]
  418730:	str	w0, [sp, #216]
  418734:	b	4186d8 <wcrtomb@plt+0x15db8>
  418738:	mov	w11, #0x1                   	// #1
  41873c:	mov	x12, #0x1                   	// #1
  418740:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  418744:	mov	w5, w11
  418748:	add	x0, x0, #0xc58
  41874c:	mov	x19, x12
  418750:	mov	w7, #0x0                   	// #0
  418754:	mov	w25, #0x0                   	// #0
  418758:	mov	w10, #0x0                   	// #0
  41875c:	stp	w11, wzr, [sp, #120]
  418760:	str	wzr, [sp, #144]
  418764:	str	x0, [sp, #168]
  418768:	str	wzr, [sp, #188]
  41876c:	str	xzr, [sp, #192]
  418770:	str	wzr, [sp, #208]
  418774:	b	417a00 <wcrtomb@plt+0x150e0>
  418778:	ldr	w0, [sp, #184]
  41877c:	and	w1, w0, #0x1
  418780:	and	w0, w0, #0x4
  418784:	stp	w1, w0, [sp, #212]
  418788:	cbnz	w20, 418a48 <wcrtomb@plt+0x16128>
  41878c:	str	wzr, [sp, #120]
  418790:	b	418614 <wcrtomb@plt+0x15cf4>
  418794:	ldrb	w2, [x27, x6]
  418798:	cmp	w2, #0x3e
  41879c:	b.hi	418208 <wcrtomb@plt+0x158e8>  // b.pmore
  4187a0:	mov	x1, #0x1                   	// #1
  4187a4:	mov	x0, #0xa38200000000        	// #179778741075968
  4187a8:	movk	x0, #0x7000, lsl #48
  4187ac:	lsl	x1, x1, x2
  4187b0:	mov	w21, #0x0                   	// #0
  4187b4:	tst	x1, x0
  4187b8:	b.eq	4180c4 <wcrtomb@plt+0x157a4>  // b.none
  4187bc:	cbnz	w10, 417fc4 <wcrtomb@plt+0x156a4>
  4187c0:	cmp	x23, x19
  4187c4:	b.ls	4187cc <wcrtomb@plt+0x15eac>  // b.plast
  4187c8:	strb	w22, [x28, x19]
  4187cc:	add	x0, x19, #0x1
  4187d0:	cmp	x23, x0
  4187d4:	b.ls	4187e0 <wcrtomb@plt+0x15ec0>  // b.plast
  4187d8:	mov	w1, #0x22                  	// #34
  4187dc:	strb	w1, [x28, x0]
  4187e0:	add	x0, x19, #0x2
  4187e4:	cmp	x23, x0
  4187e8:	b.ls	4187f4 <wcrtomb@plt+0x15ed4>  // b.plast
  4187ec:	mov	w1, #0x22                  	// #34
  4187f0:	strb	w1, [x28, x0]
  4187f4:	add	x0, x19, #0x3
  4187f8:	cmp	x23, x0
  4187fc:	b.ls	418808 <wcrtomb@plt+0x15ee8>  // b.plast
  418800:	mov	w1, #0x3f                  	// #63
  418804:	strb	w1, [x28, x0]
  418808:	add	x19, x19, #0x4
  41880c:	mov	w22, w2
  418810:	mov	x20, x6
  418814:	mov	w0, w25
  418818:	b	4182ac <wcrtomb@plt+0x1598c>
  41881c:	mov	w0, #0x1                   	// #1
  418820:	mov	w1, w0
  418824:	mov	w11, w1
  418828:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  41882c:	mov	w5, w1
  418830:	add	x0, x0, #0xc58
  418834:	mov	w10, w1
  418838:	mov	w7, #0x0                   	// #0
  41883c:	mov	w25, #0x0                   	// #0
  418840:	mov	x12, #0x1                   	// #1
  418844:	mov	x19, #0x0                   	// #0
  418848:	stp	w1, wzr, [sp, #120]
  41884c:	str	wzr, [sp, #144]
  418850:	str	x0, [sp, #168]
  418854:	str	wzr, [sp, #188]
  418858:	str	xzr, [sp, #192]
  41885c:	str	w1, [sp, #208]
  418860:	b	417a00 <wcrtomb@plt+0x150e0>
  418864:	mov	w5, w11
  418868:	cbnz	x20, 418418 <wcrtomb@plt+0x15af8>
  41886c:	b	4180ec <wcrtomb@plt+0x157cc>
  418870:	mov	w5, w11
  418874:	b	418400 <wcrtomb@plt+0x15ae0>
  418878:	mov	w5, w11
  41887c:	b	4185d4 <wcrtomb@plt+0x15cb4>
  418880:	mov	w5, w11
  418884:	mov	w0, #0x76                  	// #118
  418888:	b	418188 <wcrtomb@plt+0x15868>
  41888c:	mov	w5, w11
  418890:	b	418558 <wcrtomb@plt+0x15c38>
  418894:	ldr	w0, [sp, #116]
  418898:	mov	w5, w11
  41889c:	cmp	w0, #0x2
  4188a0:	b.ne	418124 <wcrtomb@plt+0x15804>  // b.any
  4188a4:	b	418448 <wcrtomb@plt+0x15b28>
  4188a8:	mov	w5, w11
  4188ac:	mov	w21, w11
  4188b0:	b	4180ec <wcrtomb@plt+0x157cc>
  4188b4:	mov	w5, w11
  4188b8:	b	4185c4 <wcrtomb@plt+0x15ca4>
  4188bc:	mov	w5, w11
  4188c0:	mov	w0, #0x74                  	// #116
  4188c4:	b	418180 <wcrtomb@plt+0x15860>
  4188c8:	mov	w5, w11
  4188cc:	b	418218 <wcrtomb@plt+0x158f8>
  4188d0:	ldr	w0, [sp, #116]
  4188d4:	mov	w5, w11
  4188d8:	cmp	w0, #0x2
  4188dc:	b.ne	41816c <wcrtomb@plt+0x1584c>  // b.any
  4188e0:	b	417ee8 <wcrtomb@plt+0x155c8>
  4188e4:	ldr	x0, [sp, #200]
  4188e8:	ldrb	w0, [x0]
  4188ec:	cbz	w0, 4179a4 <wcrtomb@plt+0x15084>
  4188f0:	cmp	x23, x19
  4188f4:	b.ls	418914 <wcrtomb@plt+0x15ff4>  // b.plast
  4188f8:	strb	w0, [x28, x19]
  4188fc:	add	x19, x19, #0x1
  418900:	ldr	x0, [sp, #200]
  418904:	ldrb	w0, [x0, x19]
  418908:	cbz	w0, 4179a4 <wcrtomb@plt+0x15084>
  41890c:	cmp	x23, x19
  418910:	b.hi	4188f8 <wcrtomb@plt+0x15fd8>  // b.pmore
  418914:	ldr	x0, [sp, #200]
  418918:	add	x19, x19, #0x1
  41891c:	ldrb	w0, [x0, x19]
  418920:	cbnz	w0, 4188f0 <wcrtomb@plt+0x15fd0>
  418924:	b	4179a4 <wcrtomb@plt+0x15084>
  418928:	mov	x8, x21
  41892c:	ldr	w1, [sp, #120]
  418930:	ldr	w10, [sp, #136]
  418934:	mov	w21, #0x0                   	// #0
  418938:	ldp	w25, w5, [sp, #148]
  41893c:	ldp	w7, w11, [sp, #156]
  418940:	ldr	w22, [sp, #220]
  418944:	ldr	x12, [sp, #128]
  418948:	ldp	x19, x4, [sp, #224]
  41894c:	b	417bc0 <wcrtomb@plt+0x152a0>
  418950:	ldr	w5, [sp, #124]
  418954:	mov	w0, w25
  418958:	mov	w21, w5
  41895c:	b	4180dc <wcrtomb@plt+0x157bc>
  418960:	mov	x9, x25
  418964:	cmp	x25, x24
  418968:	ldr	w10, [sp, #136]
  41896c:	mov	x8, x21
  418970:	ldp	w25, w5, [sp, #148]
  418974:	ldp	w7, w11, [sp, #156]
  418978:	ldr	w22, [sp, #220]
  41897c:	ldr	x12, [sp, #128]
  418980:	ldp	x19, x4, [sp, #224]
  418984:	b.cc	41899c <wcrtomb@plt+0x1607c>  // b.lo, b.ul, b.last
  418988:	b	4189a4 <wcrtomb@plt+0x16084>
  41898c:	add	x8, x8, #0x1
  418990:	add	x9, x20, x8
  418994:	cmp	x24, x9
  418998:	b.ls	4189a4 <wcrtomb@plt+0x16084>  // b.plast
  41899c:	ldrb	w0, [x27, x9]
  4189a0:	cbnz	w0, 41898c <wcrtomb@plt+0x1606c>
  4189a4:	ldr	w1, [sp, #120]
  4189a8:	mov	w21, #0x0                   	// #0
  4189ac:	b	417bc0 <wcrtomb@plt+0x152a0>
  4189b0:	mov	w7, w10
  4189b4:	ldr	x0, [sp, #168]
  4189b8:	cmp	x0, #0x0
  4189bc:	ccmp	w7, #0x0, #0x4, ne  // ne = any
  4189c0:	b.eq	4189e8 <wcrtomb@plt+0x160c8>  // b.none
  4189c4:	ldrb	w1, [x0]
  4189c8:	cbz	w1, 4189e8 <wcrtomb@plt+0x160c8>
  4189cc:	sub	x0, x0, x19
  4189d0:	cmp	x23, x19
  4189d4:	b.ls	4189f8 <wcrtomb@plt+0x160d8>  // b.plast
  4189d8:	strb	w1, [x28, x19]
  4189dc:	add	x19, x19, #0x1
  4189e0:	ldrb	w1, [x0, x19]
  4189e4:	cbnz	w1, 4189d0 <wcrtomb@plt+0x160b0>
  4189e8:	cmp	x23, x19
  4189ec:	b.ls	417ff8 <wcrtomb@plt+0x156d8>  // b.plast
  4189f0:	strb	wzr, [x28, x19]
  4189f4:	b	417ff8 <wcrtomb@plt+0x156d8>
  4189f8:	add	x19, x19, #0x1
  4189fc:	ldrb	w1, [x0, x19]
  418a00:	cbnz	w1, 4189d0 <wcrtomb@plt+0x160b0>
  418a04:	b	4189e8 <wcrtomb@plt+0x160c8>
  418a08:	ldr	w7, [sp, #188]
  418a0c:	b	4189b4 <wcrtomb@plt+0x16094>
  418a10:	ldp	x1, x7, [sp, #192]
  418a14:	mov	x6, x4
  418a18:	ldr	w5, [sp, #184]
  418a1c:	mov	x3, x24
  418a20:	ldr	x0, [sp, #256]
  418a24:	str	x0, [sp]
  418a28:	mov	x2, x27
  418a2c:	mov	x0, x28
  418a30:	mov	w4, #0x5                   	// #5
  418a34:	bl	417908 <wcrtomb@plt+0x14fe8>
  418a38:	mov	x19, x0
  418a3c:	b	417ff8 <wcrtomb@plt+0x156d8>
  418a40:	ldr	x23, [sp, #192]
  418a44:	b	417f3c <wcrtomb@plt+0x1561c>
  418a48:	mov	w1, #0x1                   	// #1
  418a4c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  418a50:	mov	w10, w1
  418a54:	add	x0, x0, #0xc80
  418a58:	mov	w7, w1
  418a5c:	mov	w5, w1
  418a60:	mov	w11, #0x0                   	// #0
  418a64:	mov	w25, #0x0                   	// #0
  418a68:	mov	x12, #0x1                   	// #1
  418a6c:	mov	x19, #0x0                   	// #0
  418a70:	stp	wzr, w1, [sp, #120]
  418a74:	str	w1, [sp, #144]
  418a78:	str	x0, [sp, #168]
  418a7c:	str	wzr, [sp, #188]
  418a80:	str	xzr, [sp, #192]
  418a84:	str	wzr, [sp, #208]
  418a88:	b	417a00 <wcrtomb@plt+0x150e0>
  418a8c:	mov	x1, #0x0                   	// #0
  418a90:	mov	w0, #0x0                   	// #0
  418a94:	mov	w25, #0x0                   	// #0
  418a98:	mov	w5, #0x1                   	// #1
  418a9c:	str	x23, [sp, #192]
  418aa0:	b	417dcc <wcrtomb@plt+0x154ac>
  418aa4:	bl	4025f0 <abort@plt>
  418aa8:	sub	sp, sp, #0x80
  418aac:	stp	x29, x30, [sp, #16]
  418ab0:	add	x29, sp, #0x10
  418ab4:	stp	x19, x20, [sp, #32]
  418ab8:	mov	w19, w0
  418abc:	mov	x20, x3
  418ac0:	stp	x21, x22, [sp, #48]
  418ac4:	stp	x23, x24, [sp, #64]
  418ac8:	mov	x23, x1
  418acc:	mov	x24, x2
  418ad0:	stp	x25, x26, [sp, #80]
  418ad4:	stp	x27, x28, [sp, #96]
  418ad8:	bl	402890 <__errno_location@plt>
  418adc:	mov	x22, x0
  418ae0:	ldr	w0, [x0]
  418ae4:	adrp	x27, 449000 <_obstack_memory_used@@Base+0x2a510>
  418ae8:	str	w0, [sp, #116]
  418aec:	ldr	x21, [x27, #984]
  418af0:	tbnz	w19, #31, 418c48 <wcrtomb@plt+0x16328>
  418af4:	add	x26, x27, #0x3d8
  418af8:	ldr	w0, [x26, #8]
  418afc:	cmp	w0, w19
  418b00:	b.gt	418b50 <wcrtomb@plt+0x16230>
  418b04:	mov	w0, #0x7fffffff            	// #2147483647
  418b08:	cmp	w19, w0
  418b0c:	b.eq	418c44 <wcrtomb@plt+0x16324>  // b.none
  418b10:	add	w28, w19, #0x1
  418b14:	add	x0, x26, #0x10
  418b18:	cmp	x21, x0
  418b1c:	sbfiz	x1, x28, #4, #32
  418b20:	b.eq	418c28 <wcrtomb@plt+0x16308>  // b.none
  418b24:	mov	x0, x21
  418b28:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  418b2c:	mov	x21, x0
  418b30:	str	x0, [x27, #984]
  418b34:	ldr	w0, [x26, #8]
  418b38:	mov	w1, #0x0                   	// #0
  418b3c:	sub	w2, w28, w0
  418b40:	add	x0, x21, w0, sxtw #4
  418b44:	sbfiz	x2, x2, #4, #32
  418b48:	bl	402510 <memset@plt>
  418b4c:	str	w28, [x26, #8]
  418b50:	sbfiz	x19, x19, #4, #32
  418b54:	add	x26, x20, #0x8
  418b58:	add	x0, x21, x19
  418b5c:	str	x0, [sp, #120]
  418b60:	ldp	w4, w5, [x20]
  418b64:	mov	x6, x26
  418b68:	ldr	x7, [x20, #40]
  418b6c:	orr	w25, w5, #0x1
  418b70:	ldr	x27, [x21, x19]
  418b74:	mov	x3, x24
  418b78:	ldr	x28, [x0, #8]
  418b7c:	mov	x1, x27
  418b80:	ldr	x0, [x20, #48]
  418b84:	str	x0, [sp]
  418b88:	mov	x2, x23
  418b8c:	mov	w5, w25
  418b90:	mov	x0, x28
  418b94:	bl	417908 <wcrtomb@plt+0x14fe8>
  418b98:	cmp	x27, x0
  418b9c:	b.hi	418bfc <wcrtomb@plt+0x162dc>  // b.pmore
  418ba0:	add	x27, x0, #0x1
  418ba4:	str	x27, [x21, x19]
  418ba8:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418bac:	add	x0, x0, #0x790
  418bb0:	cmp	x28, x0
  418bb4:	b.eq	418bc0 <wcrtomb@plt+0x162a0>  // b.none
  418bb8:	mov	x0, x28
  418bbc:	bl	4026b0 <free@plt>
  418bc0:	mov	x0, x27
  418bc4:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  418bc8:	ldr	x1, [sp, #120]
  418bcc:	mov	x28, x0
  418bd0:	ldr	w4, [x20]
  418bd4:	mov	x6, x26
  418bd8:	ldr	x7, [x20, #40]
  418bdc:	str	x0, [x1, #8]
  418be0:	ldr	x1, [x20, #48]
  418be4:	str	x1, [sp]
  418be8:	mov	w5, w25
  418bec:	mov	x3, x24
  418bf0:	mov	x2, x23
  418bf4:	mov	x1, x27
  418bf8:	bl	417908 <wcrtomb@plt+0x14fe8>
  418bfc:	ldr	w0, [sp, #116]
  418c00:	ldp	x29, x30, [sp, #16]
  418c04:	ldp	x19, x20, [sp, #32]
  418c08:	ldp	x23, x24, [sp, #64]
  418c0c:	ldp	x25, x26, [sp, #80]
  418c10:	str	w0, [x22]
  418c14:	mov	x0, x28
  418c18:	ldp	x21, x22, [sp, #48]
  418c1c:	ldp	x27, x28, [sp, #96]
  418c20:	add	sp, sp, #0x80
  418c24:	ret
  418c28:	mov	x0, #0x0                   	// #0
  418c2c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  418c30:	mov	x21, x0
  418c34:	str	x0, [x27, #984]
  418c38:	ldp	x0, x1, [x26, #16]
  418c3c:	stp	x0, x1, [x21]
  418c40:	b	418b34 <wcrtomb@plt+0x16214>
  418c44:	bl	41b778 <wcrtomb@plt+0x18e58>
  418c48:	bl	4025f0 <abort@plt>
  418c4c:	nop
  418c50:	stp	x29, x30, [sp, #-48]!
  418c54:	mov	x29, sp
  418c58:	stp	x19, x20, [sp, #16]
  418c5c:	mov	x20, x0
  418c60:	str	x21, [sp, #32]
  418c64:	bl	402890 <__errno_location@plt>
  418c68:	adrp	x2, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418c6c:	mov	x19, x0
  418c70:	add	x2, x2, #0x790
  418c74:	cmp	x20, #0x0
  418c78:	add	x2, x2, #0x100
  418c7c:	mov	x1, #0x38                  	// #56
  418c80:	ldr	w21, [x19]
  418c84:	csel	x0, x2, x20, eq  // eq = none
  418c88:	bl	41b6f8 <wcrtomb@plt+0x18dd8>
  418c8c:	str	w21, [x19]
  418c90:	ldp	x19, x20, [sp, #16]
  418c94:	ldr	x21, [sp, #32]
  418c98:	ldp	x29, x30, [sp], #48
  418c9c:	ret
  418ca0:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418ca4:	add	x1, x1, #0x790
  418ca8:	cmp	x0, #0x0
  418cac:	add	x1, x1, #0x100
  418cb0:	csel	x0, x1, x0, eq  // eq = none
  418cb4:	ldr	w0, [x0]
  418cb8:	ret
  418cbc:	nop
  418cc0:	adrp	x2, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418cc4:	add	x2, x2, #0x790
  418cc8:	cmp	x0, #0x0
  418ccc:	add	x2, x2, #0x100
  418cd0:	csel	x0, x2, x0, eq  // eq = none
  418cd4:	str	w1, [x0]
  418cd8:	ret
  418cdc:	nop
  418ce0:	adrp	x3, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418ce4:	add	x3, x3, #0x790
  418ce8:	cmp	x0, #0x0
  418cec:	add	x3, x3, #0x100
  418cf0:	csel	x0, x3, x0, eq  // eq = none
  418cf4:	ubfx	x4, x1, #5, #3
  418cf8:	add	x3, x0, #0x8
  418cfc:	and	w1, w1, #0x1f
  418d00:	ldr	w5, [x3, x4, lsl #2]
  418d04:	lsr	w0, w5, w1
  418d08:	eor	w2, w0, w2
  418d0c:	and	w2, w2, #0x1
  418d10:	and	w0, w0, #0x1
  418d14:	lsl	w2, w2, w1
  418d18:	eor	w2, w2, w5
  418d1c:	str	w2, [x3, x4, lsl #2]
  418d20:	ret
  418d24:	nop
  418d28:	adrp	x3, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418d2c:	add	x3, x3, #0x790
  418d30:	cmp	x0, #0x0
  418d34:	add	x3, x3, #0x100
  418d38:	csel	x2, x3, x0, eq  // eq = none
  418d3c:	ldr	w0, [x2, #4]
  418d40:	str	w1, [x2, #4]
  418d44:	ret
  418d48:	adrp	x3, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418d4c:	add	x3, x3, #0x790
  418d50:	cmp	x0, #0x0
  418d54:	add	x3, x3, #0x100
  418d58:	csel	x0, x3, x0, eq  // eq = none
  418d5c:	mov	w3, #0xa                   	// #10
  418d60:	cmp	x1, #0x0
  418d64:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  418d68:	str	w3, [x0]
  418d6c:	b.eq	418d78 <wcrtomb@plt+0x16458>  // b.none
  418d70:	stp	x1, x2, [x0, #40]
  418d74:	ret
  418d78:	stp	x29, x30, [sp, #-16]!
  418d7c:	mov	x29, sp
  418d80:	bl	4025f0 <abort@plt>
  418d84:	nop
  418d88:	sub	sp, sp, #0x50
  418d8c:	adrp	x5, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418d90:	stp	x29, x30, [sp, #16]
  418d94:	add	x29, sp, #0x10
  418d98:	stp	x19, x20, [sp, #32]
  418d9c:	mov	x19, x4
  418da0:	add	x4, x5, #0x790
  418da4:	cmp	x19, #0x0
  418da8:	add	x4, x4, #0x100
  418dac:	csel	x19, x4, x19, eq  // eq = none
  418db0:	mov	x20, x3
  418db4:	stp	x21, x22, [sp, #48]
  418db8:	mov	x21, x0
  418dbc:	mov	x22, x1
  418dc0:	str	x23, [sp, #64]
  418dc4:	mov	x23, x2
  418dc8:	bl	402890 <__errno_location@plt>
  418dcc:	ldp	x7, x8, [x19, #40]
  418dd0:	mov	x3, x20
  418dd4:	mov	x20, x0
  418dd8:	mov	x0, x21
  418ddc:	ldp	w4, w5, [x19]
  418de0:	mov	x2, x23
  418de4:	ldr	w21, [x20]
  418de8:	mov	x1, x22
  418dec:	str	x8, [sp]
  418df0:	add	x6, x19, #0x8
  418df4:	bl	417908 <wcrtomb@plt+0x14fe8>
  418df8:	ldp	x29, x30, [sp, #16]
  418dfc:	ldr	x23, [sp, #64]
  418e00:	str	w21, [x20]
  418e04:	ldp	x19, x20, [sp, #32]
  418e08:	ldp	x21, x22, [sp, #48]
  418e0c:	add	sp, sp, #0x50
  418e10:	ret
  418e14:	nop
  418e18:	sub	sp, sp, #0x60
  418e1c:	adrp	x4, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418e20:	add	x4, x4, #0x790
  418e24:	cmp	x2, #0x0
  418e28:	add	x4, x4, #0x100
  418e2c:	stp	x29, x30, [sp, #16]
  418e30:	add	x29, sp, #0x10
  418e34:	stp	x19, x20, [sp, #32]
  418e38:	csel	x19, x4, x2, eq  // eq = none
  418e3c:	stp	x21, x22, [sp, #48]
  418e40:	mov	x22, x0
  418e44:	stp	x23, x24, [sp, #64]
  418e48:	mov	x23, x1
  418e4c:	stp	x25, x26, [sp, #80]
  418e50:	bl	402890 <__errno_location@plt>
  418e54:	ldr	w26, [x0]
  418e58:	ldp	w4, w24, [x19]
  418e5c:	mov	x20, x0
  418e60:	ldp	x7, x0, [x19, #40]
  418e64:	add	x25, x19, #0x8
  418e68:	orr	w24, w24, #0x1
  418e6c:	mov	x6, x25
  418e70:	mov	x3, x23
  418e74:	mov	x2, x22
  418e78:	mov	w5, w24
  418e7c:	str	x0, [sp]
  418e80:	mov	x1, #0x0                   	// #0
  418e84:	mov	x0, #0x0                   	// #0
  418e88:	bl	417908 <wcrtomb@plt+0x14fe8>
  418e8c:	add	x21, x0, #0x1
  418e90:	mov	x0, x21
  418e94:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  418e98:	ldp	x7, x1, [x19, #40]
  418e9c:	mov	w5, w24
  418ea0:	ldr	w4, [x19]
  418ea4:	mov	x6, x25
  418ea8:	str	x1, [sp]
  418eac:	mov	x3, x23
  418eb0:	mov	x2, x22
  418eb4:	mov	x19, x0
  418eb8:	mov	x1, x21
  418ebc:	bl	417908 <wcrtomb@plt+0x14fe8>
  418ec0:	mov	x0, x19
  418ec4:	ldp	x29, x30, [sp, #16]
  418ec8:	ldp	x21, x22, [sp, #48]
  418ecc:	ldp	x23, x24, [sp, #64]
  418ed0:	str	w26, [x20]
  418ed4:	ldp	x19, x20, [sp, #32]
  418ed8:	ldp	x25, x26, [sp, #80]
  418edc:	add	sp, sp, #0x60
  418ee0:	ret
  418ee4:	nop
  418ee8:	sub	sp, sp, #0x70
  418eec:	adrp	x4, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  418ef0:	add	x4, x4, #0x790
  418ef4:	cmp	x3, #0x0
  418ef8:	add	x4, x4, #0x100
  418efc:	stp	x29, x30, [sp, #16]
  418f00:	add	x29, sp, #0x10
  418f04:	stp	x19, x20, [sp, #32]
  418f08:	csel	x19, x4, x3, eq  // eq = none
  418f0c:	mov	x20, x2
  418f10:	stp	x21, x22, [sp, #48]
  418f14:	mov	x22, x0
  418f18:	stp	x23, x24, [sp, #64]
  418f1c:	mov	x23, x1
  418f20:	stp	x25, x26, [sp, #80]
  418f24:	stp	x27, x28, [sp, #96]
  418f28:	bl	402890 <__errno_location@plt>
  418f2c:	ldr	w28, [x0]
  418f30:	ldp	w4, w5, [x19]
  418f34:	mov	x21, x0
  418f38:	ldp	x7, x0, [x19, #40]
  418f3c:	cmp	x20, #0x0
  418f40:	cset	w24, eq  // eq = none
  418f44:	add	x27, x19, #0x8
  418f48:	orr	w24, w24, w5
  418f4c:	mov	x6, x27
  418f50:	mov	x3, x23
  418f54:	mov	x2, x22
  418f58:	mov	w5, w24
  418f5c:	str	x0, [sp]
  418f60:	mov	x1, #0x0                   	// #0
  418f64:	mov	x0, #0x0                   	// #0
  418f68:	bl	417908 <wcrtomb@plt+0x14fe8>
  418f6c:	add	x26, x0, #0x1
  418f70:	mov	x25, x0
  418f74:	mov	x0, x26
  418f78:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  418f7c:	ldp	x7, x1, [x19, #40]
  418f80:	mov	w5, w24
  418f84:	ldr	w4, [x19]
  418f88:	mov	x6, x27
  418f8c:	str	x1, [sp]
  418f90:	mov	x3, x23
  418f94:	mov	x2, x22
  418f98:	mov	x19, x0
  418f9c:	mov	x1, x26
  418fa0:	bl	417908 <wcrtomb@plt+0x14fe8>
  418fa4:	str	w28, [x21]
  418fa8:	cbz	x20, 418fb0 <wcrtomb@plt+0x16690>
  418fac:	str	x25, [x20]
  418fb0:	mov	x0, x19
  418fb4:	ldp	x29, x30, [sp, #16]
  418fb8:	ldp	x19, x20, [sp, #32]
  418fbc:	ldp	x21, x22, [sp, #48]
  418fc0:	ldp	x23, x24, [sp, #64]
  418fc4:	ldp	x25, x26, [sp, #80]
  418fc8:	ldp	x27, x28, [sp, #96]
  418fcc:	add	sp, sp, #0x70
  418fd0:	ret
  418fd4:	nop
  418fd8:	stp	x29, x30, [sp, #-64]!
  418fdc:	mov	x29, sp
  418fe0:	stp	x21, x22, [sp, #32]
  418fe4:	str	x23, [sp, #48]
  418fe8:	adrp	x23, 449000 <_obstack_memory_used@@Base+0x2a510>
  418fec:	add	x22, x23, #0x3d8
  418ff0:	stp	x19, x20, [sp, #16]
  418ff4:	ldr	x21, [x23, #984]
  418ff8:	ldr	w20, [x22, #8]
  418ffc:	cmp	w20, #0x1
  419000:	b.le	419028 <wcrtomb@plt+0x16708>
  419004:	sub	w0, w20, #0x2
  419008:	add	x20, x21, #0x28
  41900c:	add	x19, x21, #0x18
  419010:	add	x20, x20, w0, uxtw #4
  419014:	nop
  419018:	ldr	x0, [x19], #16
  41901c:	bl	4026b0 <free@plt>
  419020:	cmp	x19, x20
  419024:	b.ne	419018 <wcrtomb@plt+0x166f8>  // b.any
  419028:	ldr	x0, [x21, #8]
  41902c:	adrp	x19, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  419030:	add	x19, x19, #0x790
  419034:	cmp	x0, x19
  419038:	b.eq	419048 <wcrtomb@plt+0x16728>  // b.none
  41903c:	bl	4026b0 <free@plt>
  419040:	mov	x0, #0x100                 	// #256
  419044:	stp	x0, x19, [x22, #16]
  419048:	add	x19, x22, #0x10
  41904c:	cmp	x21, x19
  419050:	b.eq	419060 <wcrtomb@plt+0x16740>  // b.none
  419054:	mov	x0, x21
  419058:	bl	4026b0 <free@plt>
  41905c:	str	x19, [x23, #984]
  419060:	mov	w0, #0x1                   	// #1
  419064:	str	w0, [x22, #8]
  419068:	ldp	x19, x20, [sp, #16]
  41906c:	ldp	x21, x22, [sp, #32]
  419070:	ldr	x23, [sp, #48]
  419074:	ldp	x29, x30, [sp], #64
  419078:	ret
  41907c:	nop
  419080:	sub	sp, sp, #0x70
  419084:	stp	x29, x30, [sp, #16]
  419088:	add	x29, sp, #0x10
  41908c:	stp	x21, x22, [sp, #48]
  419090:	adrp	x22, 449000 <_obstack_memory_used@@Base+0x2a510>
  419094:	stp	x19, x20, [sp, #32]
  419098:	mov	w19, w0
  41909c:	stp	x23, x24, [sp, #64]
  4190a0:	mov	x24, x1
  4190a4:	stp	x25, x26, [sp, #80]
  4190a8:	stp	x27, x28, [sp, #96]
  4190ac:	bl	402890 <__errno_location@plt>
  4190b0:	ldr	w25, [x0]
  4190b4:	ldr	x20, [x22, #984]
  4190b8:	tbnz	w19, #31, 419200 <wcrtomb@plt+0x168e0>
  4190bc:	add	x21, x22, #0x3d8
  4190c0:	mov	x23, x0
  4190c4:	ldr	w0, [x21, #8]
  4190c8:	cmp	w19, w0
  4190cc:	b.lt	41911c <wcrtomb@plt+0x167fc>  // b.tstop
  4190d0:	mov	w0, #0x7fffffff            	// #2147483647
  4190d4:	cmp	w19, w0
  4190d8:	b.eq	4191fc <wcrtomb@plt+0x168dc>  // b.none
  4190dc:	add	w26, w19, #0x1
  4190e0:	add	x0, x21, #0x10
  4190e4:	cmp	x20, x0
  4190e8:	sbfiz	x1, x26, #4, #32
  4190ec:	b.eq	4191e0 <wcrtomb@plt+0x168c0>  // b.none
  4190f0:	mov	x0, x20
  4190f4:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4190f8:	mov	x20, x0
  4190fc:	str	x0, [x22, #984]
  419100:	ldr	w0, [x21, #8]
  419104:	mov	w1, #0x0                   	// #0
  419108:	sub	w2, w26, w0
  41910c:	add	x0, x20, w0, sxtw #4
  419110:	sbfiz	x2, x2, #4, #32
  419114:	bl	402510 <memset@plt>
  419118:	str	w26, [x21, #8]
  41911c:	adrp	x21, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  419120:	add	x21, x21, #0x790
  419124:	sbfiz	x19, x19, #4, #32
  419128:	add	x6, x21, #0x108
  41912c:	add	x26, x20, x19
  419130:	mov	x2, x24
  419134:	ldp	x7, x0, [x21, #296]
  419138:	mov	x3, #0xffffffffffffffff    	// #-1
  41913c:	ldr	w4, [x21, #256]
  419140:	ldr	w28, [x21, #260]
  419144:	ldr	x22, [x20, x19]
  419148:	orr	w28, w28, #0x1
  41914c:	ldr	x27, [x26, #8]
  419150:	str	x0, [sp]
  419154:	mov	x1, x22
  419158:	mov	w5, w28
  41915c:	mov	x0, x27
  419160:	bl	417908 <wcrtomb@plt+0x14fe8>
  419164:	cmp	x22, x0
  419168:	b.hi	4191b8 <wcrtomb@plt+0x16898>  // b.pmore
  41916c:	add	x22, x0, #0x1
  419170:	str	x22, [x20, x19]
  419174:	cmp	x27, x21
  419178:	b.eq	419184 <wcrtomb@plt+0x16864>  // b.none
  41917c:	mov	x0, x27
  419180:	bl	4026b0 <free@plt>
  419184:	mov	x0, x22
  419188:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41918c:	ldp	x7, x1, [x21, #296]
  419190:	str	x0, [x26, #8]
  419194:	ldr	w4, [x21, #256]
  419198:	mov	x27, x0
  41919c:	str	x1, [sp]
  4191a0:	mov	w5, w28
  4191a4:	mov	x2, x24
  4191a8:	add	x6, x21, #0x108
  4191ac:	mov	x1, x22
  4191b0:	mov	x3, #0xffffffffffffffff    	// #-1
  4191b4:	bl	417908 <wcrtomb@plt+0x14fe8>
  4191b8:	mov	x0, x27
  4191bc:	ldp	x29, x30, [sp, #16]
  4191c0:	ldp	x19, x20, [sp, #32]
  4191c4:	ldp	x21, x22, [sp, #48]
  4191c8:	ldp	x27, x28, [sp, #96]
  4191cc:	str	w25, [x23]
  4191d0:	ldp	x23, x24, [sp, #64]
  4191d4:	ldp	x25, x26, [sp, #80]
  4191d8:	add	sp, sp, #0x70
  4191dc:	ret
  4191e0:	mov	x0, #0x0                   	// #0
  4191e4:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4191e8:	mov	x20, x0
  4191ec:	str	x0, [x22, #984]
  4191f0:	ldp	x0, x1, [x21, #16]
  4191f4:	stp	x0, x1, [x20]
  4191f8:	b	419100 <wcrtomb@plt+0x167e0>
  4191fc:	bl	41b778 <wcrtomb@plt+0x18e58>
  419200:	bl	4025f0 <abort@plt>
  419204:	nop
  419208:	sub	sp, sp, #0x80
  41920c:	stp	x29, x30, [sp, #16]
  419210:	add	x29, sp, #0x10
  419214:	stp	x19, x20, [sp, #32]
  419218:	mov	w19, w0
  41921c:	stp	x21, x22, [sp, #48]
  419220:	stp	x23, x24, [sp, #64]
  419224:	mov	x23, x1
  419228:	mov	x24, x2
  41922c:	stp	x25, x26, [sp, #80]
  419230:	adrp	x26, 449000 <_obstack_memory_used@@Base+0x2a510>
  419234:	stp	x27, x28, [sp, #96]
  419238:	bl	402890 <__errno_location@plt>
  41923c:	mov	x22, x0
  419240:	ldr	w0, [x0]
  419244:	str	w0, [sp, #124]
  419248:	ldr	x20, [x26, #984]
  41924c:	tbnz	w19, #31, 419394 <wcrtomb@plt+0x16a74>
  419250:	add	x21, x26, #0x3d8
  419254:	ldr	w0, [x21, #8]
  419258:	cmp	w19, w0
  41925c:	b.lt	4192ac <wcrtomb@plt+0x1698c>  // b.tstop
  419260:	mov	w0, #0x7fffffff            	// #2147483647
  419264:	cmp	w19, w0
  419268:	b.eq	419390 <wcrtomb@plt+0x16a70>  // b.none
  41926c:	add	w27, w19, #0x1
  419270:	add	x0, x21, #0x10
  419274:	cmp	x20, x0
  419278:	sbfiz	x1, x27, #4, #32
  41927c:	b.eq	419374 <wcrtomb@plt+0x16a54>  // b.none
  419280:	mov	x0, x20
  419284:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419288:	mov	x20, x0
  41928c:	str	x0, [x26, #984]
  419290:	ldr	w0, [x21, #8]
  419294:	mov	w1, #0x0                   	// #0
  419298:	sub	w2, w27, w0
  41929c:	add	x0, x20, w0, sxtw #4
  4192a0:	sbfiz	x2, x2, #4, #32
  4192a4:	bl	402510 <memset@plt>
  4192a8:	str	w27, [x21, #8]
  4192ac:	adrp	x21, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4192b0:	add	x21, x21, #0x790
  4192b4:	sbfiz	x19, x19, #4, #32
  4192b8:	add	x6, x21, #0x108
  4192bc:	add	x26, x20, x19
  4192c0:	mov	x3, x24
  4192c4:	ldp	x7, x0, [x21, #296]
  4192c8:	mov	x2, x23
  4192cc:	ldr	w4, [x21, #256]
  4192d0:	ldr	w5, [x21, #260]
  4192d4:	ldr	x27, [x20, x19]
  4192d8:	orr	w25, w5, #0x1
  4192dc:	ldr	x28, [x26, #8]
  4192e0:	str	x0, [sp]
  4192e4:	mov	x1, x27
  4192e8:	mov	w5, w25
  4192ec:	mov	x0, x28
  4192f0:	bl	417908 <wcrtomb@plt+0x14fe8>
  4192f4:	cmp	x27, x0
  4192f8:	b.hi	419348 <wcrtomb@plt+0x16a28>  // b.pmore
  4192fc:	add	x27, x0, #0x1
  419300:	str	x27, [x20, x19]
  419304:	cmp	x28, x21
  419308:	b.eq	419314 <wcrtomb@plt+0x169f4>  // b.none
  41930c:	mov	x0, x28
  419310:	bl	4026b0 <free@plt>
  419314:	mov	x0, x27
  419318:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41931c:	ldp	x7, x1, [x21, #296]
  419320:	str	x0, [x26, #8]
  419324:	ldr	w4, [x21, #256]
  419328:	mov	x28, x0
  41932c:	str	x1, [sp]
  419330:	mov	w5, w25
  419334:	mov	x3, x24
  419338:	mov	x2, x23
  41933c:	add	x6, x21, #0x108
  419340:	mov	x1, x27
  419344:	bl	417908 <wcrtomb@plt+0x14fe8>
  419348:	ldr	w0, [sp, #124]
  41934c:	ldp	x29, x30, [sp, #16]
  419350:	ldp	x19, x20, [sp, #32]
  419354:	ldp	x23, x24, [sp, #64]
  419358:	ldp	x25, x26, [sp, #80]
  41935c:	str	w0, [x22]
  419360:	mov	x0, x28
  419364:	ldp	x21, x22, [sp, #48]
  419368:	ldp	x27, x28, [sp, #96]
  41936c:	add	sp, sp, #0x80
  419370:	ret
  419374:	mov	x0, #0x0                   	// #0
  419378:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41937c:	mov	x20, x0
  419380:	str	x0, [x26, #984]
  419384:	ldp	x0, x1, [x21, #16]
  419388:	stp	x0, x1, [x20]
  41938c:	b	419290 <wcrtomb@plt+0x16970>
  419390:	bl	41b778 <wcrtomb@plt+0x18e58>
  419394:	bl	4025f0 <abort@plt>
  419398:	sub	sp, sp, #0x60
  41939c:	stp	x29, x30, [sp, #16]
  4193a0:	add	x29, sp, #0x10
  4193a4:	stp	x19, x20, [sp, #32]
  4193a8:	stp	x21, x22, [sp, #48]
  4193ac:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  4193b0:	add	x20, x21, #0x3d8
  4193b4:	stp	x23, x24, [sp, #64]
  4193b8:	mov	x24, x0
  4193bc:	stp	x25, x26, [sp, #80]
  4193c0:	bl	402890 <__errno_location@plt>
  4193c4:	mov	x23, x0
  4193c8:	ldr	w0, [x20, #8]
  4193cc:	ldr	x19, [x21, #984]
  4193d0:	cmp	w0, #0x0
  4193d4:	ldr	w25, [x23]
  4193d8:	b.gt	41941c <wcrtomb@plt+0x16afc>
  4193dc:	add	x0, x20, #0x10
  4193e0:	cmp	x19, x0
  4193e4:	b.eq	4194d0 <wcrtomb@plt+0x16bb0>  // b.none
  4193e8:	mov	x0, x19
  4193ec:	mov	x1, #0x10                  	// #16
  4193f0:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4193f4:	mov	x19, x0
  4193f8:	str	x0, [x21, #984]
  4193fc:	ldr	w0, [x20, #8]
  419400:	mov	w21, #0x1                   	// #1
  419404:	mov	w1, #0x0                   	// #0
  419408:	sub	w2, w21, w0
  41940c:	add	x0, x19, w0, sxtw #4
  419410:	sbfiz	x2, x2, #4, #32
  419414:	bl	402510 <memset@plt>
  419418:	str	w21, [x20, #8]
  41941c:	adrp	x20, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  419420:	add	x20, x20, #0x790
  419424:	ldp	x21, x22, [x19]
  419428:	add	x6, x20, #0x108
  41942c:	ldp	x7, x0, [x20, #296]
  419430:	mov	x2, x24
  419434:	ldr	w4, [x20, #256]
  419438:	mov	x3, #0xffffffffffffffff    	// #-1
  41943c:	ldr	w26, [x20, #260]
  419440:	str	x0, [sp]
  419444:	mov	x1, x21
  419448:	orr	w26, w26, #0x1
  41944c:	mov	x0, x22
  419450:	mov	w5, w26
  419454:	bl	417908 <wcrtomb@plt+0x14fe8>
  419458:	cmp	x21, x0
  41945c:	b.hi	4194ac <wcrtomb@plt+0x16b8c>  // b.pmore
  419460:	add	x21, x0, #0x1
  419464:	str	x21, [x19]
  419468:	cmp	x22, x20
  41946c:	b.eq	419478 <wcrtomb@plt+0x16b58>  // b.none
  419470:	mov	x0, x22
  419474:	bl	4026b0 <free@plt>
  419478:	mov	x0, x21
  41947c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  419480:	ldp	x7, x1, [x20, #296]
  419484:	str	x0, [x19, #8]
  419488:	ldr	w4, [x20, #256]
  41948c:	mov	x22, x0
  419490:	str	x1, [sp]
  419494:	mov	w5, w26
  419498:	mov	x2, x24
  41949c:	add	x6, x20, #0x108
  4194a0:	mov	x1, x21
  4194a4:	mov	x3, #0xffffffffffffffff    	// #-1
  4194a8:	bl	417908 <wcrtomb@plt+0x14fe8>
  4194ac:	mov	x0, x22
  4194b0:	ldp	x29, x30, [sp, #16]
  4194b4:	ldp	x19, x20, [sp, #32]
  4194b8:	ldp	x21, x22, [sp, #48]
  4194bc:	str	w25, [x23]
  4194c0:	ldp	x23, x24, [sp, #64]
  4194c4:	ldp	x25, x26, [sp, #80]
  4194c8:	add	sp, sp, #0x60
  4194cc:	ret
  4194d0:	mov	x1, #0x10                  	// #16
  4194d4:	mov	x0, #0x0                   	// #0
  4194d8:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4194dc:	mov	x19, x0
  4194e0:	str	x0, [x21, #984]
  4194e4:	ldp	x0, x1, [x20, #16]
  4194e8:	stp	x0, x1, [x19]
  4194ec:	b	4193fc <wcrtomb@plt+0x16adc>
  4194f0:	sub	sp, sp, #0x70
  4194f4:	stp	x29, x30, [sp, #16]
  4194f8:	add	x29, sp, #0x10
  4194fc:	stp	x19, x20, [sp, #32]
  419500:	stp	x21, x22, [sp, #48]
  419504:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  419508:	add	x20, x21, #0x3d8
  41950c:	stp	x23, x24, [sp, #64]
  419510:	mov	x23, x0
  419514:	mov	x24, x1
  419518:	stp	x25, x26, [sp, #80]
  41951c:	str	x27, [sp, #96]
  419520:	bl	402890 <__errno_location@plt>
  419524:	mov	x22, x0
  419528:	ldr	w0, [x20, #8]
  41952c:	ldr	x19, [x21, #984]
  419530:	cmp	w0, #0x0
  419534:	ldr	w25, [x22]
  419538:	b.gt	41957c <wcrtomb@plt+0x16c5c>
  41953c:	add	x0, x20, #0x10
  419540:	cmp	x19, x0
  419544:	b.eq	419634 <wcrtomb@plt+0x16d14>  // b.none
  419548:	mov	x0, x19
  41954c:	mov	x1, #0x10                  	// #16
  419550:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419554:	mov	x19, x0
  419558:	str	x0, [x21, #984]
  41955c:	ldr	w0, [x20, #8]
  419560:	mov	w21, #0x1                   	// #1
  419564:	mov	w1, #0x0                   	// #0
  419568:	sub	w2, w21, w0
  41956c:	add	x0, x19, w0, sxtw #4
  419570:	sbfiz	x2, x2, #4, #32
  419574:	bl	402510 <memset@plt>
  419578:	str	w21, [x20, #8]
  41957c:	adrp	x20, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  419580:	add	x20, x20, #0x790
  419584:	ldp	x21, x26, [x19]
  419588:	add	x6, x20, #0x108
  41958c:	ldp	x7, x0, [x20, #296]
  419590:	mov	x3, x24
  419594:	ldr	w4, [x20, #256]
  419598:	mov	x2, x23
  41959c:	ldr	w27, [x20, #260]
  4195a0:	str	x0, [sp]
  4195a4:	mov	x1, x21
  4195a8:	orr	w27, w27, #0x1
  4195ac:	mov	x0, x26
  4195b0:	mov	w5, w27
  4195b4:	bl	417908 <wcrtomb@plt+0x14fe8>
  4195b8:	cmp	x21, x0
  4195bc:	b.hi	41960c <wcrtomb@plt+0x16cec>  // b.pmore
  4195c0:	add	x21, x0, #0x1
  4195c4:	str	x21, [x19]
  4195c8:	cmp	x26, x20
  4195cc:	b.eq	4195d8 <wcrtomb@plt+0x16cb8>  // b.none
  4195d0:	mov	x0, x26
  4195d4:	bl	4026b0 <free@plt>
  4195d8:	mov	x0, x21
  4195dc:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  4195e0:	ldp	x7, x1, [x20, #296]
  4195e4:	str	x0, [x19, #8]
  4195e8:	ldr	w4, [x20, #256]
  4195ec:	mov	x26, x0
  4195f0:	str	x1, [sp]
  4195f4:	mov	w5, w27
  4195f8:	mov	x3, x24
  4195fc:	mov	x2, x23
  419600:	add	x6, x20, #0x108
  419604:	mov	x1, x21
  419608:	bl	417908 <wcrtomb@plt+0x14fe8>
  41960c:	mov	x0, x26
  419610:	ldp	x29, x30, [sp, #16]
  419614:	ldp	x19, x20, [sp, #32]
  419618:	ldp	x23, x24, [sp, #64]
  41961c:	ldr	x27, [sp, #96]
  419620:	str	w25, [x22]
  419624:	ldp	x21, x22, [sp, #48]
  419628:	ldp	x25, x26, [sp, #80]
  41962c:	add	sp, sp, #0x70
  419630:	ret
  419634:	mov	x1, #0x10                  	// #16
  419638:	mov	x0, #0x0                   	// #0
  41963c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419640:	mov	x19, x0
  419644:	str	x0, [x21, #984]
  419648:	ldp	x0, x1, [x20, #16]
  41964c:	stp	x0, x1, [x19]
  419650:	b	41955c <wcrtomb@plt+0x16c3c>
  419654:	nop
  419658:	stp	x29, x30, [sp, #-128]!
  41965c:	cmp	w1, #0xa
  419660:	mov	x29, sp
  419664:	stp	xzr, xzr, [sp, #72]
  419668:	b.eq	4196a0 <wcrtomb@plt+0x16d80>  // b.none
  41966c:	mov	w3, w1
  419670:	str	w3, [sp, #72]
  419674:	mov	x1, x2
  419678:	add	x3, sp, #0x10
  41967c:	ldp	x4, x5, [sp, #72]
  419680:	mov	x2, #0xffffffffffffffff    	// #-1
  419684:	stp	x4, x5, [sp, #16]
  419688:	stp	xzr, xzr, [sp, #32]
  41968c:	stp	xzr, xzr, [sp, #48]
  419690:	str	xzr, [sp, #64]
  419694:	bl	418aa8 <wcrtomb@plt+0x16188>
  419698:	ldp	x29, x30, [sp], #128
  41969c:	ret
  4196a0:	bl	4025f0 <abort@plt>
  4196a4:	nop
  4196a8:	stp	x29, x30, [sp, #-128]!
  4196ac:	cmp	w1, #0xa
  4196b0:	mov	x29, sp
  4196b4:	stp	xzr, xzr, [sp, #72]
  4196b8:	b.eq	4196f0 <wcrtomb@plt+0x16dd0>  // b.none
  4196bc:	mov	w4, w1
  4196c0:	str	w4, [sp, #72]
  4196c4:	mov	x1, x2
  4196c8:	mov	x2, x3
  4196cc:	ldp	x4, x5, [sp, #72]
  4196d0:	add	x3, sp, #0x10
  4196d4:	stp	x4, x5, [sp, #16]
  4196d8:	stp	xzr, xzr, [sp, #32]
  4196dc:	stp	xzr, xzr, [sp, #48]
  4196e0:	str	xzr, [sp, #64]
  4196e4:	bl	418aa8 <wcrtomb@plt+0x16188>
  4196e8:	ldp	x29, x30, [sp], #128
  4196ec:	ret
  4196f0:	bl	4025f0 <abort@plt>
  4196f4:	nop
  4196f8:	sub	sp, sp, #0xd0
  4196fc:	cmp	w0, #0xa
  419700:	stp	x29, x30, [sp, #16]
  419704:	add	x29, sp, #0x10
  419708:	stp	x19, x20, [sp, #32]
  41970c:	stp	x21, x22, [sp, #48]
  419710:	stp	x23, x24, [sp, #64]
  419714:	str	x25, [sp, #80]
  419718:	stp	xzr, xzr, [sp, #152]
  41971c:	stp	xzr, xzr, [sp, #168]
  419720:	stp	xzr, xzr, [sp, #184]
  419724:	str	xzr, [sp, #200]
  419728:	b.eq	41987c <wcrtomb@plt+0x16f5c>  // b.none
  41972c:	str	w0, [sp, #152]
  419730:	mov	x23, x1
  419734:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  419738:	add	x20, x21, #0x3d8
  41973c:	ldp	x0, x1, [sp, #152]
  419740:	stp	x0, x1, [sp, #96]
  419744:	stp	xzr, xzr, [sp, #112]
  419748:	stp	xzr, xzr, [sp, #128]
  41974c:	str	xzr, [sp, #144]
  419750:	bl	402890 <__errno_location@plt>
  419754:	ldr	w1, [x20, #8]
  419758:	mov	x22, x0
  41975c:	ldr	x19, [x21, #984]
  419760:	cmp	w1, #0x0
  419764:	ldr	w25, [x0]
  419768:	b.gt	4197ac <wcrtomb@plt+0x16e8c>
  41976c:	add	x0, x20, #0x10
  419770:	cmp	x19, x0
  419774:	b.eq	41985c <wcrtomb@plt+0x16f3c>  // b.none
  419778:	mov	x0, x19
  41977c:	mov	x1, #0x10                  	// #16
  419780:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419784:	mov	x19, x0
  419788:	str	x0, [x21, #984]
  41978c:	ldr	w0, [x20, #8]
  419790:	mov	w21, #0x1                   	// #1
  419794:	mov	w1, #0x0                   	// #0
  419798:	sub	w2, w21, w0
  41979c:	add	x0, x19, w0, sxtw #4
  4197a0:	sbfiz	x2, x2, #4, #32
  4197a4:	bl	402510 <memset@plt>
  4197a8:	str	w21, [x20, #8]
  4197ac:	ldp	x20, x21, [x19]
  4197b0:	add	x6, sp, #0x68
  4197b4:	ldp	x7, x0, [sp, #136]
  4197b8:	str	x0, [sp]
  4197bc:	ldp	w4, w24, [sp, #96]
  4197c0:	mov	x2, x23
  4197c4:	mov	x1, x20
  4197c8:	mov	x0, x21
  4197cc:	orr	w24, w24, #0x1
  4197d0:	mov	x3, #0xffffffffffffffff    	// #-1
  4197d4:	mov	w5, w24
  4197d8:	bl	417908 <wcrtomb@plt+0x14fe8>
  4197dc:	cmp	x20, x0
  4197e0:	b.hi	419838 <wcrtomb@plt+0x16f18>  // b.pmore
  4197e4:	add	x20, x0, #0x1
  4197e8:	str	x20, [x19]
  4197ec:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  4197f0:	add	x0, x0, #0x790
  4197f4:	cmp	x21, x0
  4197f8:	b.eq	419804 <wcrtomb@plt+0x16ee4>  // b.none
  4197fc:	mov	x0, x21
  419800:	bl	4026b0 <free@plt>
  419804:	mov	x0, x20
  419808:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41980c:	ldp	x7, x1, [sp, #136]
  419810:	str	x0, [x19, #8]
  419814:	ldr	w4, [sp, #96]
  419818:	mov	x21, x0
  41981c:	str	x1, [sp]
  419820:	add	x6, sp, #0x68
  419824:	mov	w5, w24
  419828:	mov	x2, x23
  41982c:	mov	x1, x20
  419830:	mov	x3, #0xffffffffffffffff    	// #-1
  419834:	bl	417908 <wcrtomb@plt+0x14fe8>
  419838:	ldp	x29, x30, [sp, #16]
  41983c:	mov	x0, x21
  419840:	ldp	x19, x20, [sp, #32]
  419844:	ldp	x23, x24, [sp, #64]
  419848:	str	w25, [x22]
  41984c:	ldp	x21, x22, [sp, #48]
  419850:	ldr	x25, [sp, #80]
  419854:	add	sp, sp, #0xd0
  419858:	ret
  41985c:	mov	x1, #0x10                  	// #16
  419860:	mov	x0, #0x0                   	// #0
  419864:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419868:	mov	x19, x0
  41986c:	str	x0, [x21, #984]
  419870:	ldp	x0, x1, [x20, #16]
  419874:	stp	x0, x1, [x19]
  419878:	b	41978c <wcrtomb@plt+0x16e6c>
  41987c:	bl	4025f0 <abort@plt>
  419880:	sub	sp, sp, #0xd0
  419884:	cmp	w0, #0xa
  419888:	stp	x29, x30, [sp, #16]
  41988c:	add	x29, sp, #0x10
  419890:	stp	x19, x20, [sp, #32]
  419894:	stp	x21, x22, [sp, #48]
  419898:	stp	x23, x24, [sp, #64]
  41989c:	stp	x25, x26, [sp, #80]
  4198a0:	stp	xzr, xzr, [sp, #152]
  4198a4:	stp	xzr, xzr, [sp, #168]
  4198a8:	stp	xzr, xzr, [sp, #184]
  4198ac:	str	xzr, [sp, #200]
  4198b0:	b.eq	419a08 <wcrtomb@plt+0x170e8>  // b.none
  4198b4:	str	w0, [sp, #152]
  4198b8:	mov	x23, x1
  4198bc:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  4198c0:	add	x20, x21, #0x3d8
  4198c4:	ldp	x0, x1, [sp, #152]
  4198c8:	mov	x24, x2
  4198cc:	stp	x0, x1, [sp, #96]
  4198d0:	stp	xzr, xzr, [sp, #112]
  4198d4:	stp	xzr, xzr, [sp, #128]
  4198d8:	str	xzr, [sp, #144]
  4198dc:	bl	402890 <__errno_location@plt>
  4198e0:	ldr	w1, [x20, #8]
  4198e4:	mov	x22, x0
  4198e8:	ldr	x19, [x21, #984]
  4198ec:	cmp	w1, #0x0
  4198f0:	ldr	w25, [x0]
  4198f4:	b.gt	419938 <wcrtomb@plt+0x17018>
  4198f8:	add	x0, x20, #0x10
  4198fc:	cmp	x19, x0
  419900:	b.eq	4199e8 <wcrtomb@plt+0x170c8>  // b.none
  419904:	mov	x0, x19
  419908:	mov	x1, #0x10                  	// #16
  41990c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419910:	mov	x19, x0
  419914:	str	x0, [x21, #984]
  419918:	ldr	w0, [x20, #8]
  41991c:	mov	w21, #0x1                   	// #1
  419920:	mov	w1, #0x0                   	// #0
  419924:	sub	w2, w21, w0
  419928:	add	x0, x19, w0, sxtw #4
  41992c:	sbfiz	x2, x2, #4, #32
  419930:	bl	402510 <memset@plt>
  419934:	str	w21, [x20, #8]
  419938:	ldp	x20, x21, [x19]
  41993c:	add	x6, sp, #0x68
  419940:	ldp	x7, x0, [sp, #136]
  419944:	str	x0, [sp]
  419948:	ldp	w4, w26, [sp, #96]
  41994c:	mov	x3, x24
  419950:	mov	x2, x23
  419954:	mov	x1, x20
  419958:	orr	w26, w26, #0x1
  41995c:	mov	x0, x21
  419960:	mov	w5, w26
  419964:	bl	417908 <wcrtomb@plt+0x14fe8>
  419968:	cmp	x20, x0
  41996c:	b.hi	4199c4 <wcrtomb@plt+0x170a4>  // b.pmore
  419970:	add	x20, x0, #0x1
  419974:	str	x20, [x19]
  419978:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41997c:	add	x0, x0, #0x790
  419980:	cmp	x21, x0
  419984:	b.eq	419990 <wcrtomb@plt+0x17070>  // b.none
  419988:	mov	x0, x21
  41998c:	bl	4026b0 <free@plt>
  419990:	mov	x0, x20
  419994:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  419998:	ldp	x7, x1, [sp, #136]
  41999c:	str	x0, [x19, #8]
  4199a0:	ldr	w4, [sp, #96]
  4199a4:	mov	x21, x0
  4199a8:	str	x1, [sp]
  4199ac:	add	x6, sp, #0x68
  4199b0:	mov	w5, w26
  4199b4:	mov	x3, x24
  4199b8:	mov	x2, x23
  4199bc:	mov	x1, x20
  4199c0:	bl	417908 <wcrtomb@plt+0x14fe8>
  4199c4:	ldp	x29, x30, [sp, #16]
  4199c8:	mov	x0, x21
  4199cc:	ldp	x19, x20, [sp, #32]
  4199d0:	ldp	x23, x24, [sp, #64]
  4199d4:	str	w25, [x22]
  4199d8:	ldp	x21, x22, [sp, #48]
  4199dc:	ldp	x25, x26, [sp, #80]
  4199e0:	add	sp, sp, #0xd0
  4199e4:	ret
  4199e8:	mov	x1, #0x10                  	// #16
  4199ec:	mov	x0, #0x0                   	// #0
  4199f0:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  4199f4:	mov	x19, x0
  4199f8:	str	x0, [x21, #984]
  4199fc:	ldp	x0, x1, [x20, #16]
  419a00:	stp	x0, x1, [x19]
  419a04:	b	419918 <wcrtomb@plt+0x16ff8>
  419a08:	bl	4025f0 <abort@plt>
  419a0c:	nop
  419a10:	sub	sp, sp, #0xb0
  419a14:	ubfx	x6, x2, #5, #3
  419a18:	add	x5, sp, #0x80
  419a1c:	and	w2, w2, #0x1f
  419a20:	stp	x29, x30, [sp, #16]
  419a24:	add	x29, sp, #0x10
  419a28:	stp	x19, x20, [sp, #32]
  419a2c:	adrp	x20, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  419a30:	add	x20, x20, #0x790
  419a34:	stp	x21, x22, [sp, #48]
  419a38:	mov	x22, x1
  419a3c:	mov	x21, x0
  419a40:	ldp	x8, x9, [x20, #256]
  419a44:	stp	x8, x9, [sp, #120]
  419a48:	ldp	x8, x9, [x20, #272]
  419a4c:	stp	x8, x9, [sp, #136]
  419a50:	ldp	x8, x9, [x20, #288]
  419a54:	stp	x8, x9, [sp, #152]
  419a58:	ldr	x3, [x20, #304]
  419a5c:	str	x3, [sp, #168]
  419a60:	stp	x23, x24, [sp, #64]
  419a64:	adrp	x24, 449000 <_obstack_memory_used@@Base+0x2a510>
  419a68:	ldr	w4, [x5, x6, lsl #2]
  419a6c:	stp	x25, x26, [sp, #80]
  419a70:	add	x23, x24, #0x3d8
  419a74:	lsr	w3, w4, w2
  419a78:	mvn	w3, w3
  419a7c:	and	w3, w3, #0x1
  419a80:	str	x27, [sp, #96]
  419a84:	lsl	w3, w3, w2
  419a88:	eor	w3, w3, w4
  419a8c:	str	w3, [x5, x6, lsl #2]
  419a90:	bl	402890 <__errno_location@plt>
  419a94:	ldr	w26, [x0]
  419a98:	ldr	w1, [x23, #8]
  419a9c:	mov	x25, x0
  419aa0:	ldr	x19, [x24, #984]
  419aa4:	cmp	w1, #0x0
  419aa8:	b.gt	419aec <wcrtomb@plt+0x171cc>
  419aac:	add	x0, x23, #0x10
  419ab0:	cmp	x19, x0
  419ab4:	b.eq	419b98 <wcrtomb@plt+0x17278>  // b.none
  419ab8:	mov	x0, x19
  419abc:	mov	x1, #0x10                  	// #16
  419ac0:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419ac4:	mov	x19, x0
  419ac8:	str	x0, [x24, #984]
  419acc:	ldr	w0, [x23, #8]
  419ad0:	mov	w24, #0x1                   	// #1
  419ad4:	mov	w1, #0x0                   	// #0
  419ad8:	sub	w2, w24, w0
  419adc:	add	x0, x19, w0, sxtw #4
  419ae0:	sbfiz	x2, x2, #4, #32
  419ae4:	bl	402510 <memset@plt>
  419ae8:	str	w24, [x23, #8]
  419aec:	ldp	x23, x24, [x19]
  419af0:	add	x6, sp, #0x80
  419af4:	ldp	x7, x0, [sp, #160]
  419af8:	str	x0, [sp]
  419afc:	ldp	w4, w27, [sp, #120]
  419b00:	mov	x3, x22
  419b04:	mov	x2, x21
  419b08:	mov	x1, x23
  419b0c:	orr	w27, w27, #0x1
  419b10:	mov	x0, x24
  419b14:	mov	w5, w27
  419b18:	bl	417908 <wcrtomb@plt+0x14fe8>
  419b1c:	cmp	x23, x0
  419b20:	b.hi	419b70 <wcrtomb@plt+0x17250>  // b.pmore
  419b24:	add	x23, x0, #0x1
  419b28:	str	x23, [x19]
  419b2c:	cmp	x24, x20
  419b30:	b.eq	419b3c <wcrtomb@plt+0x1721c>  // b.none
  419b34:	mov	x0, x24
  419b38:	bl	4026b0 <free@plt>
  419b3c:	mov	x0, x23
  419b40:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  419b44:	ldp	x7, x1, [sp, #160]
  419b48:	str	x0, [x19, #8]
  419b4c:	ldr	w4, [sp, #120]
  419b50:	mov	x24, x0
  419b54:	str	x1, [sp]
  419b58:	add	x6, sp, #0x80
  419b5c:	mov	w5, w27
  419b60:	mov	x3, x22
  419b64:	mov	x2, x21
  419b68:	mov	x1, x23
  419b6c:	bl	417908 <wcrtomb@plt+0x14fe8>
  419b70:	mov	x0, x24
  419b74:	ldp	x29, x30, [sp, #16]
  419b78:	ldp	x19, x20, [sp, #32]
  419b7c:	ldp	x21, x22, [sp, #48]
  419b80:	ldp	x23, x24, [sp, #64]
  419b84:	ldr	x27, [sp, #96]
  419b88:	str	w26, [x25]
  419b8c:	ldp	x25, x26, [sp, #80]
  419b90:	add	sp, sp, #0xb0
  419b94:	ret
  419b98:	mov	x1, #0x10                  	// #16
  419b9c:	mov	x0, #0x0                   	// #0
  419ba0:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419ba4:	mov	x19, x0
  419ba8:	str	x0, [x24, #984]
  419bac:	ldp	x0, x1, [x23, #16]
  419bb0:	stp	x0, x1, [x19]
  419bb4:	b	419acc <wcrtomb@plt+0x171ac>
  419bb8:	sub	sp, sp, #0xa0
  419bbc:	ubfx	x5, x1, #5, #3
  419bc0:	add	x4, sp, #0x70
  419bc4:	and	w1, w1, #0x1f
  419bc8:	stp	x29, x30, [sp, #16]
  419bcc:	add	x29, sp, #0x10
  419bd0:	stp	x21, x22, [sp, #48]
  419bd4:	adrp	x21, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  419bd8:	add	x21, x21, #0x790
  419bdc:	mov	x22, x0
  419be0:	stp	x19, x20, [sp, #32]
  419be4:	ldp	x6, x7, [x21, #256]
  419be8:	stp	x6, x7, [sp, #104]
  419bec:	ldp	x6, x7, [x21, #272]
  419bf0:	stp	x6, x7, [sp, #120]
  419bf4:	ldp	x6, x7, [x21, #288]
  419bf8:	stp	x6, x7, [sp, #136]
  419bfc:	ldr	x2, [x21, #304]
  419c00:	str	x2, [sp, #152]
  419c04:	stp	x23, x24, [sp, #64]
  419c08:	adrp	x23, 449000 <_obstack_memory_used@@Base+0x2a510>
  419c0c:	ldr	w0, [x4, x5, lsl #2]
  419c10:	stp	x25, x26, [sp, #80]
  419c14:	add	x20, x23, #0x3d8
  419c18:	lsr	w2, w0, w1
  419c1c:	mvn	w2, w2
  419c20:	and	w2, w2, #0x1
  419c24:	lsl	w2, w2, w1
  419c28:	eor	w2, w2, w0
  419c2c:	str	w2, [x4, x5, lsl #2]
  419c30:	bl	402890 <__errno_location@plt>
  419c34:	ldr	w25, [x0]
  419c38:	ldr	w1, [x20, #8]
  419c3c:	mov	x24, x0
  419c40:	ldr	x19, [x23, #984]
  419c44:	cmp	w1, #0x0
  419c48:	b.gt	419c8c <wcrtomb@plt+0x1736c>
  419c4c:	add	x0, x20, #0x10
  419c50:	cmp	x19, x0
  419c54:	b.eq	419d34 <wcrtomb@plt+0x17414>  // b.none
  419c58:	mov	x0, x19
  419c5c:	mov	x1, #0x10                  	// #16
  419c60:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419c64:	mov	x19, x0
  419c68:	str	x0, [x23, #984]
  419c6c:	ldr	w0, [x20, #8]
  419c70:	mov	w23, #0x1                   	// #1
  419c74:	mov	w1, #0x0                   	// #0
  419c78:	sub	w2, w23, w0
  419c7c:	add	x0, x19, w0, sxtw #4
  419c80:	sbfiz	x2, x2, #4, #32
  419c84:	bl	402510 <memset@plt>
  419c88:	str	w23, [x20, #8]
  419c8c:	ldp	x20, x23, [x19]
  419c90:	add	x6, sp, #0x70
  419c94:	ldp	x7, x0, [sp, #144]
  419c98:	str	x0, [sp]
  419c9c:	ldp	w4, w26, [sp, #104]
  419ca0:	mov	x2, x22
  419ca4:	mov	x1, x20
  419ca8:	mov	x0, x23
  419cac:	orr	w26, w26, #0x1
  419cb0:	mov	x3, #0xffffffffffffffff    	// #-1
  419cb4:	mov	w5, w26
  419cb8:	bl	417908 <wcrtomb@plt+0x14fe8>
  419cbc:	cmp	x20, x0
  419cc0:	b.hi	419d10 <wcrtomb@plt+0x173f0>  // b.pmore
  419cc4:	add	x20, x0, #0x1
  419cc8:	str	x20, [x19]
  419ccc:	cmp	x23, x21
  419cd0:	b.eq	419cdc <wcrtomb@plt+0x173bc>  // b.none
  419cd4:	mov	x0, x23
  419cd8:	bl	4026b0 <free@plt>
  419cdc:	mov	x0, x20
  419ce0:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  419ce4:	ldp	x7, x1, [sp, #144]
  419ce8:	str	x0, [x19, #8]
  419cec:	ldr	w4, [sp, #104]
  419cf0:	mov	x23, x0
  419cf4:	str	x1, [sp]
  419cf8:	add	x6, sp, #0x70
  419cfc:	mov	w5, w26
  419d00:	mov	x2, x22
  419d04:	mov	x1, x20
  419d08:	mov	x3, #0xffffffffffffffff    	// #-1
  419d0c:	bl	417908 <wcrtomb@plt+0x14fe8>
  419d10:	ldp	x29, x30, [sp, #16]
  419d14:	mov	x0, x23
  419d18:	ldp	x19, x20, [sp, #32]
  419d1c:	ldp	x21, x22, [sp, #48]
  419d20:	str	w25, [x24]
  419d24:	ldp	x23, x24, [sp, #64]
  419d28:	ldp	x25, x26, [sp, #80]
  419d2c:	add	sp, sp, #0xa0
  419d30:	ret
  419d34:	mov	x1, #0x10                  	// #16
  419d38:	mov	x0, #0x0                   	// #0
  419d3c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419d40:	mov	x19, x0
  419d44:	str	x0, [x23, #984]
  419d48:	ldp	x0, x1, [x20, #16]
  419d4c:	stp	x0, x1, [x19]
  419d50:	b	419c6c <wcrtomb@plt+0x1734c>
  419d54:	nop
  419d58:	sub	sp, sp, #0xa0
  419d5c:	stp	x29, x30, [sp, #16]
  419d60:	add	x29, sp, #0x10
  419d64:	stp	x23, x24, [sp, #64]
  419d68:	adrp	x23, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  419d6c:	add	x23, x23, #0x790
  419d70:	stp	x21, x22, [sp, #48]
  419d74:	mov	x22, x0
  419d78:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  419d7c:	ldp	x4, x5, [x23, #256]
  419d80:	stp	x4, x5, [sp, #104]
  419d84:	ldr	w0, [sp, #116]
  419d88:	ldp	x4, x5, [x23, #272]
  419d8c:	stp	x4, x5, [sp, #120]
  419d90:	mvn	w1, w0, lsr #26
  419d94:	ldp	x4, x5, [x23, #288]
  419d98:	ubfiz	w1, w1, #26, #1
  419d9c:	ldr	x2, [x23, #304]
  419da0:	eor	w1, w1, w0
  419da4:	stp	x19, x20, [sp, #32]
  419da8:	add	x20, x21, #0x3d8
  419dac:	stp	x25, x26, [sp, #80]
  419db0:	str	w1, [sp, #116]
  419db4:	stp	x4, x5, [sp, #136]
  419db8:	str	x2, [sp, #152]
  419dbc:	bl	402890 <__errno_location@plt>
  419dc0:	ldr	w1, [x20, #8]
  419dc4:	mov	x24, x0
  419dc8:	ldr	x19, [x21, #984]
  419dcc:	cmp	w1, #0x0
  419dd0:	ldr	w25, [x0]
  419dd4:	b.gt	419e18 <wcrtomb@plt+0x174f8>
  419dd8:	add	x0, x20, #0x10
  419ddc:	cmp	x19, x0
  419de0:	b.eq	419ec0 <wcrtomb@plt+0x175a0>  // b.none
  419de4:	mov	x0, x19
  419de8:	mov	x1, #0x10                  	// #16
  419dec:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419df0:	mov	x19, x0
  419df4:	str	x0, [x21, #984]
  419df8:	ldr	w0, [x20, #8]
  419dfc:	mov	w21, #0x1                   	// #1
  419e00:	mov	w1, #0x0                   	// #0
  419e04:	sub	w2, w21, w0
  419e08:	add	x0, x19, w0, sxtw #4
  419e0c:	sbfiz	x2, x2, #4, #32
  419e10:	bl	402510 <memset@plt>
  419e14:	str	w21, [x20, #8]
  419e18:	ldp	x20, x21, [x19]
  419e1c:	add	x6, sp, #0x70
  419e20:	ldp	x7, x0, [sp, #144]
  419e24:	str	x0, [sp]
  419e28:	ldp	w4, w26, [sp, #104]
  419e2c:	mov	x2, x22
  419e30:	mov	x1, x20
  419e34:	mov	x0, x21
  419e38:	orr	w26, w26, #0x1
  419e3c:	mov	x3, #0xffffffffffffffff    	// #-1
  419e40:	mov	w5, w26
  419e44:	bl	417908 <wcrtomb@plt+0x14fe8>
  419e48:	cmp	x20, x0
  419e4c:	b.hi	419e9c <wcrtomb@plt+0x1757c>  // b.pmore
  419e50:	add	x20, x0, #0x1
  419e54:	str	x20, [x19]
  419e58:	cmp	x21, x23
  419e5c:	b.eq	419e68 <wcrtomb@plt+0x17548>  // b.none
  419e60:	mov	x0, x21
  419e64:	bl	4026b0 <free@plt>
  419e68:	mov	x0, x20
  419e6c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  419e70:	ldp	x7, x1, [sp, #144]
  419e74:	str	x0, [x19, #8]
  419e78:	ldr	w4, [sp, #104]
  419e7c:	mov	x21, x0
  419e80:	str	x1, [sp]
  419e84:	add	x6, sp, #0x70
  419e88:	mov	w5, w26
  419e8c:	mov	x2, x22
  419e90:	mov	x1, x20
  419e94:	mov	x3, #0xffffffffffffffff    	// #-1
  419e98:	bl	417908 <wcrtomb@plt+0x14fe8>
  419e9c:	mov	x0, x21
  419ea0:	ldp	x29, x30, [sp, #16]
  419ea4:	ldp	x19, x20, [sp, #32]
  419ea8:	ldp	x21, x22, [sp, #48]
  419eac:	str	w25, [x24]
  419eb0:	ldp	x23, x24, [sp, #64]
  419eb4:	ldp	x25, x26, [sp, #80]
  419eb8:	add	sp, sp, #0xa0
  419ebc:	ret
  419ec0:	mov	x1, #0x10                  	// #16
  419ec4:	mov	x0, #0x0                   	// #0
  419ec8:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419ecc:	mov	x19, x0
  419ed0:	str	x0, [x21, #984]
  419ed4:	ldp	x0, x1, [x20, #16]
  419ed8:	stp	x0, x1, [x19]
  419edc:	b	419df8 <wcrtomb@plt+0x174d8>
  419ee0:	sub	sp, sp, #0xb0
  419ee4:	stp	x29, x30, [sp, #16]
  419ee8:	add	x29, sp, #0x10
  419eec:	stp	x21, x22, [sp, #48]
  419ef0:	adrp	x21, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  419ef4:	add	x21, x21, #0x790
  419ef8:	mov	x22, x0
  419efc:	stp	x19, x20, [sp, #32]
  419f00:	ldp	x4, x5, [x21, #256]
  419f04:	stp	x4, x5, [sp, #120]
  419f08:	ldr	w4, [sp, #132]
  419f0c:	ldp	x6, x7, [x21, #272]
  419f10:	stp	x6, x7, [sp, #136]
  419f14:	mvn	w2, w4, lsr #26
  419f18:	ldp	x6, x7, [x21, #288]
  419f1c:	ubfiz	w2, w2, #26, #1
  419f20:	ldr	x0, [x21, #304]
  419f24:	eor	w2, w2, w4
  419f28:	stp	x23, x24, [sp, #64]
  419f2c:	adrp	x24, 449000 <_obstack_memory_used@@Base+0x2a510>
  419f30:	add	x20, x24, #0x3d8
  419f34:	mov	x23, x1
  419f38:	stp	x25, x26, [sp, #80]
  419f3c:	str	x27, [sp, #96]
  419f40:	str	w2, [sp, #132]
  419f44:	stp	x6, x7, [sp, #152]
  419f48:	str	x0, [sp, #168]
  419f4c:	bl	402890 <__errno_location@plt>
  419f50:	ldr	w1, [x20, #8]
  419f54:	mov	x25, x0
  419f58:	ldr	x19, [x24, #984]
  419f5c:	cmp	w1, #0x0
  419f60:	ldr	w26, [x0]
  419f64:	b.gt	419fa8 <wcrtomb@plt+0x17688>
  419f68:	add	x0, x20, #0x10
  419f6c:	cmp	x19, x0
  419f70:	b.eq	41a054 <wcrtomb@plt+0x17734>  // b.none
  419f74:	mov	x0, x19
  419f78:	mov	x1, #0x10                  	// #16
  419f7c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  419f80:	mov	x19, x0
  419f84:	str	x0, [x24, #984]
  419f88:	ldr	w0, [x20, #8]
  419f8c:	mov	w24, #0x1                   	// #1
  419f90:	mov	w1, #0x0                   	// #0
  419f94:	sub	w2, w24, w0
  419f98:	add	x0, x19, w0, sxtw #4
  419f9c:	sbfiz	x2, x2, #4, #32
  419fa0:	bl	402510 <memset@plt>
  419fa4:	str	w24, [x20, #8]
  419fa8:	ldp	x20, x24, [x19]
  419fac:	add	x6, sp, #0x80
  419fb0:	ldp	x7, x0, [sp, #160]
  419fb4:	str	x0, [sp]
  419fb8:	ldp	w4, w27, [sp, #120]
  419fbc:	mov	x3, x23
  419fc0:	mov	x2, x22
  419fc4:	mov	x1, x20
  419fc8:	orr	w27, w27, #0x1
  419fcc:	mov	x0, x24
  419fd0:	mov	w5, w27
  419fd4:	bl	417908 <wcrtomb@plt+0x14fe8>
  419fd8:	cmp	x20, x0
  419fdc:	b.hi	41a02c <wcrtomb@plt+0x1770c>  // b.pmore
  419fe0:	add	x20, x0, #0x1
  419fe4:	str	x20, [x19]
  419fe8:	cmp	x24, x21
  419fec:	b.eq	419ff8 <wcrtomb@plt+0x176d8>  // b.none
  419ff0:	mov	x0, x24
  419ff4:	bl	4026b0 <free@plt>
  419ff8:	mov	x0, x20
  419ffc:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41a000:	ldp	x7, x1, [sp, #160]
  41a004:	str	x0, [x19, #8]
  41a008:	ldr	w4, [sp, #120]
  41a00c:	mov	x24, x0
  41a010:	str	x1, [sp]
  41a014:	add	x6, sp, #0x80
  41a018:	mov	w5, w27
  41a01c:	mov	x3, x23
  41a020:	mov	x2, x22
  41a024:	mov	x1, x20
  41a028:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a02c:	mov	x0, x24
  41a030:	ldp	x29, x30, [sp, #16]
  41a034:	ldp	x19, x20, [sp, #32]
  41a038:	ldp	x21, x22, [sp, #48]
  41a03c:	ldp	x23, x24, [sp, #64]
  41a040:	ldr	x27, [sp, #96]
  41a044:	str	w26, [x25]
  41a048:	ldp	x25, x26, [sp, #80]
  41a04c:	add	sp, sp, #0xb0
  41a050:	ret
  41a054:	mov	x1, #0x10                  	// #16
  41a058:	mov	x0, #0x0                   	// #0
  41a05c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a060:	mov	x19, x0
  41a064:	str	x0, [x24, #984]
  41a068:	ldp	x0, x1, [x20, #16]
  41a06c:	stp	x0, x1, [x19]
  41a070:	b	419f88 <wcrtomb@plt+0x17668>
  41a074:	nop
  41a078:	stp	x29, x30, [sp, #-128]!
  41a07c:	cmp	w1, #0xa
  41a080:	mov	x29, sp
  41a084:	stp	xzr, xzr, [sp, #16]
  41a088:	stp	xzr, xzr, [sp, #32]
  41a08c:	stp	xzr, xzr, [sp, #48]
  41a090:	str	xzr, [sp, #64]
  41a094:	b.eq	41a0c0 <wcrtomb@plt+0x177a0>  // b.none
  41a098:	mov	w4, w1
  41a09c:	mov	w5, #0x4000000             	// #67108864
  41a0a0:	mov	x1, x2
  41a0a4:	add	x3, sp, #0x10
  41a0a8:	mov	x2, #0xffffffffffffffff    	// #-1
  41a0ac:	str	w4, [sp, #16]
  41a0b0:	str	w5, [sp, #28]
  41a0b4:	bl	418aa8 <wcrtomb@plt+0x16188>
  41a0b8:	ldp	x29, x30, [sp], #128
  41a0bc:	ret
  41a0c0:	bl	4025f0 <abort@plt>
  41a0c4:	nop
  41a0c8:	adrp	x4, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41a0cc:	add	x4, x4, #0x790
  41a0d0:	stp	x29, x30, [sp, #-80]!
  41a0d4:	mov	x5, x1
  41a0d8:	mov	w1, #0xa                   	// #10
  41a0dc:	mov	x29, sp
  41a0e0:	ldp	x8, x9, [x4, #256]
  41a0e4:	stp	x8, x9, [sp, #24]
  41a0e8:	cmp	x5, #0x0
  41a0ec:	str	w1, [sp, #24]
  41a0f0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41a0f4:	ldp	x10, x11, [x4, #272]
  41a0f8:	stp	x10, x11, [sp, #40]
  41a0fc:	ldp	x8, x9, [x4, #288]
  41a100:	stp	x8, x9, [sp, #56]
  41a104:	ldr	x1, [x4, #304]
  41a108:	str	x1, [sp, #72]
  41a10c:	b.eq	41a130 <wcrtomb@plt+0x17810>  // b.none
  41a110:	mov	x4, x2
  41a114:	mov	x1, x3
  41a118:	mov	x2, #0xffffffffffffffff    	// #-1
  41a11c:	add	x3, sp, #0x18
  41a120:	stp	x5, x4, [sp, #64]
  41a124:	bl	418aa8 <wcrtomb@plt+0x16188>
  41a128:	ldp	x29, x30, [sp], #80
  41a12c:	ret
  41a130:	bl	4025f0 <abort@plt>
  41a134:	nop
  41a138:	adrp	x5, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41a13c:	add	x5, x5, #0x790
  41a140:	stp	x29, x30, [sp, #-80]!
  41a144:	mov	x6, x1
  41a148:	mov	w1, #0xa                   	// #10
  41a14c:	mov	x29, sp
  41a150:	ldp	x8, x9, [x5, #256]
  41a154:	stp	x8, x9, [sp, #24]
  41a158:	cmp	x6, #0x0
  41a15c:	str	w1, [sp, #24]
  41a160:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41a164:	ldp	x10, x11, [x5, #272]
  41a168:	stp	x10, x11, [sp, #40]
  41a16c:	ldp	x8, x9, [x5, #288]
  41a170:	stp	x8, x9, [sp, #56]
  41a174:	ldr	x1, [x5, #304]
  41a178:	str	x1, [sp, #72]
  41a17c:	b.eq	41a1a0 <wcrtomb@plt+0x17880>  // b.none
  41a180:	mov	x5, x2
  41a184:	mov	x1, x3
  41a188:	mov	x2, x4
  41a18c:	add	x3, sp, #0x18
  41a190:	stp	x6, x5, [sp, #64]
  41a194:	bl	418aa8 <wcrtomb@plt+0x16188>
  41a198:	ldp	x29, x30, [sp], #80
  41a19c:	ret
  41a1a0:	bl	4025f0 <abort@plt>
  41a1a4:	nop
  41a1a8:	sub	sp, sp, #0xb0
  41a1ac:	cmp	x0, #0x0
  41a1b0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  41a1b4:	stp	x29, x30, [sp, #16]
  41a1b8:	add	x29, sp, #0x10
  41a1bc:	stp	x21, x22, [sp, #48]
  41a1c0:	adrp	x22, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41a1c4:	add	x22, x22, #0x790
  41a1c8:	mov	x21, x0
  41a1cc:	stp	x19, x20, [sp, #32]
  41a1d0:	mov	w19, #0xa                   	// #10
  41a1d4:	ldp	x4, x5, [x22, #256]
  41a1d8:	stp	x4, x5, [sp, #120]
  41a1dc:	ldp	x4, x5, [x22, #272]
  41a1e0:	stp	x23, x24, [sp, #64]
  41a1e4:	ldp	x6, x7, [x22, #288]
  41a1e8:	stp	x25, x26, [sp, #80]
  41a1ec:	ldr	x0, [x22, #304]
  41a1f0:	str	x27, [sp, #96]
  41a1f4:	str	w19, [sp, #120]
  41a1f8:	stp	x4, x5, [sp, #136]
  41a1fc:	stp	x6, x7, [sp, #152]
  41a200:	str	x0, [sp, #168]
  41a204:	b.eq	41a354 <wcrtomb@plt+0x17a34>  // b.none
  41a208:	adrp	x27, 449000 <_obstack_memory_used@@Base+0x2a510>
  41a20c:	add	x26, x27, #0x3d8
  41a210:	mov	x20, x1
  41a214:	mov	x24, x2
  41a218:	stp	x21, x1, [sp, #160]
  41a21c:	bl	402890 <__errno_location@plt>
  41a220:	ldr	w1, [x26, #8]
  41a224:	mov	w4, w19
  41a228:	ldr	w25, [x0]
  41a22c:	ldr	x19, [x27, #984]
  41a230:	mov	x23, x0
  41a234:	cmp	w1, #0x0
  41a238:	b.gt	41a288 <wcrtomb@plt+0x17968>
  41a23c:	add	x0, x26, #0x10
  41a240:	cmp	x19, x0
  41a244:	b.eq	41a334 <wcrtomb@plt+0x17a14>  // b.none
  41a248:	mov	x0, x19
  41a24c:	mov	x1, #0x10                  	// #16
  41a250:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a254:	mov	x19, x0
  41a258:	str	x0, [x27, #984]
  41a25c:	ldr	w0, [x26, #8]
  41a260:	mov	w20, #0x1                   	// #1
  41a264:	mov	w1, #0x0                   	// #0
  41a268:	sub	w2, w20, w0
  41a26c:	add	x0, x19, w0, sxtw #4
  41a270:	sbfiz	x2, x2, #4, #32
  41a274:	bl	402510 <memset@plt>
  41a278:	ldr	w4, [sp, #120]
  41a27c:	str	w20, [x26, #8]
  41a280:	ldr	x21, [sp, #160]
  41a284:	ldr	x20, [sp, #168]
  41a288:	mov	x7, x21
  41a28c:	ldp	x27, x21, [x19]
  41a290:	str	x20, [sp]
  41a294:	ldr	w26, [sp, #124]
  41a298:	add	x6, sp, #0x80
  41a29c:	mov	x2, x24
  41a2a0:	mov	x3, #0xffffffffffffffff    	// #-1
  41a2a4:	orr	w26, w26, #0x1
  41a2a8:	mov	w5, w26
  41a2ac:	mov	x1, x27
  41a2b0:	mov	x0, x21
  41a2b4:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a2b8:	cmp	x27, x0
  41a2bc:	b.hi	41a30c <wcrtomb@plt+0x179ec>  // b.pmore
  41a2c0:	add	x20, x0, #0x1
  41a2c4:	str	x20, [x19]
  41a2c8:	cmp	x21, x22
  41a2cc:	b.eq	41a2d8 <wcrtomb@plt+0x179b8>  // b.none
  41a2d0:	mov	x0, x21
  41a2d4:	bl	4026b0 <free@plt>
  41a2d8:	mov	x0, x20
  41a2dc:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41a2e0:	ldp	x7, x1, [sp, #160]
  41a2e4:	str	x0, [x19, #8]
  41a2e8:	ldr	w4, [sp, #120]
  41a2ec:	mov	x21, x0
  41a2f0:	str	x1, [sp]
  41a2f4:	add	x6, sp, #0x80
  41a2f8:	mov	w5, w26
  41a2fc:	mov	x2, x24
  41a300:	mov	x1, x20
  41a304:	mov	x3, #0xffffffffffffffff    	// #-1
  41a308:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a30c:	mov	x0, x21
  41a310:	ldp	x29, x30, [sp, #16]
  41a314:	ldp	x19, x20, [sp, #32]
  41a318:	ldp	x21, x22, [sp, #48]
  41a31c:	ldr	x27, [sp, #96]
  41a320:	str	w25, [x23]
  41a324:	ldp	x23, x24, [sp, #64]
  41a328:	ldp	x25, x26, [sp, #80]
  41a32c:	add	sp, sp, #0xb0
  41a330:	ret
  41a334:	mov	x1, #0x10                  	// #16
  41a338:	mov	x0, #0x0                   	// #0
  41a33c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a340:	mov	x19, x0
  41a344:	str	x0, [x27, #984]
  41a348:	ldp	x0, x1, [x26, #16]
  41a34c:	stp	x0, x1, [x19]
  41a350:	b	41a25c <wcrtomb@plt+0x1793c>
  41a354:	bl	4025f0 <abort@plt>
  41a358:	sub	sp, sp, #0xb0
  41a35c:	cmp	x0, #0x0
  41a360:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  41a364:	stp	x29, x30, [sp, #16]
  41a368:	add	x29, sp, #0x10
  41a36c:	stp	x21, x22, [sp, #48]
  41a370:	adrp	x22, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41a374:	add	x22, x22, #0x790
  41a378:	mov	x21, x0
  41a37c:	stp	x19, x20, [sp, #32]
  41a380:	mov	w19, #0xa                   	// #10
  41a384:	ldp	x6, x7, [x22, #256]
  41a388:	stp	x6, x7, [sp, #120]
  41a38c:	add	x4, x22, #0x100
  41a390:	ldp	x6, x7, [x4, #16]
  41a394:	stp	x23, x24, [sp, #64]
  41a398:	ldp	x8, x9, [x4, #32]
  41a39c:	stp	x25, x26, [sp, #80]
  41a3a0:	ldr	x0, [x4, #48]
  41a3a4:	stp	x27, x28, [sp, #96]
  41a3a8:	str	w19, [sp, #120]
  41a3ac:	stp	x6, x7, [sp, #136]
  41a3b0:	stp	x8, x9, [sp, #152]
  41a3b4:	str	x0, [sp, #168]
  41a3b8:	b.eq	41a50c <wcrtomb@plt+0x17bec>  // b.none
  41a3bc:	adrp	x28, 449000 <_obstack_memory_used@@Base+0x2a510>
  41a3c0:	add	x27, x28, #0x3d8
  41a3c4:	mov	x20, x1
  41a3c8:	mov	x24, x2
  41a3cc:	mov	x25, x3
  41a3d0:	stp	x21, x1, [sp, #160]
  41a3d4:	bl	402890 <__errno_location@plt>
  41a3d8:	ldr	w1, [x27, #8]
  41a3dc:	mov	w4, w19
  41a3e0:	ldr	w26, [x0]
  41a3e4:	mov	x23, x0
  41a3e8:	ldr	x19, [x28, #984]
  41a3ec:	cmp	w1, #0x0
  41a3f0:	b.gt	41a440 <wcrtomb@plt+0x17b20>
  41a3f4:	add	x0, x27, #0x10
  41a3f8:	cmp	x19, x0
  41a3fc:	b.eq	41a4ec <wcrtomb@plt+0x17bcc>  // b.none
  41a400:	mov	x0, x19
  41a404:	mov	x1, #0x10                  	// #16
  41a408:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a40c:	mov	x19, x0
  41a410:	str	x0, [x28, #984]
  41a414:	ldr	w0, [x27, #8]
  41a418:	mov	w20, #0x1                   	// #1
  41a41c:	mov	w1, #0x0                   	// #0
  41a420:	sub	w2, w20, w0
  41a424:	add	x0, x19, w0, sxtw #4
  41a428:	sbfiz	x2, x2, #4, #32
  41a42c:	bl	402510 <memset@plt>
  41a430:	ldr	w4, [sp, #120]
  41a434:	str	w20, [x27, #8]
  41a438:	ldr	x21, [sp, #160]
  41a43c:	ldr	x20, [sp, #168]
  41a440:	mov	x7, x21
  41a444:	ldp	x28, x21, [x19]
  41a448:	str	x20, [sp]
  41a44c:	ldr	w27, [sp, #124]
  41a450:	add	x6, sp, #0x80
  41a454:	mov	x3, x25
  41a458:	mov	x2, x24
  41a45c:	orr	w27, w27, #0x1
  41a460:	mov	w5, w27
  41a464:	mov	x1, x28
  41a468:	mov	x0, x21
  41a46c:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a470:	cmp	x28, x0
  41a474:	b.hi	41a4c4 <wcrtomb@plt+0x17ba4>  // b.pmore
  41a478:	add	x20, x0, #0x1
  41a47c:	str	x20, [x19]
  41a480:	cmp	x21, x22
  41a484:	b.eq	41a490 <wcrtomb@plt+0x17b70>  // b.none
  41a488:	mov	x0, x21
  41a48c:	bl	4026b0 <free@plt>
  41a490:	mov	x0, x20
  41a494:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41a498:	ldp	x7, x1, [sp, #160]
  41a49c:	str	x0, [x19, #8]
  41a4a0:	ldr	w4, [sp, #120]
  41a4a4:	mov	x21, x0
  41a4a8:	str	x1, [sp]
  41a4ac:	add	x6, sp, #0x80
  41a4b0:	mov	w5, w27
  41a4b4:	mov	x3, x25
  41a4b8:	mov	x2, x24
  41a4bc:	mov	x1, x20
  41a4c0:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a4c4:	mov	x0, x21
  41a4c8:	ldp	x29, x30, [sp, #16]
  41a4cc:	ldp	x19, x20, [sp, #32]
  41a4d0:	ldp	x21, x22, [sp, #48]
  41a4d4:	ldp	x27, x28, [sp, #96]
  41a4d8:	str	w26, [x23]
  41a4dc:	ldp	x23, x24, [sp, #64]
  41a4e0:	ldp	x25, x26, [sp, #80]
  41a4e4:	add	sp, sp, #0xb0
  41a4e8:	ret
  41a4ec:	mov	x1, #0x10                  	// #16
  41a4f0:	mov	x0, #0x0                   	// #0
  41a4f4:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a4f8:	mov	x19, x0
  41a4fc:	str	x0, [x28, #984]
  41a500:	ldp	x0, x1, [x27, #16]
  41a504:	stp	x0, x1, [x19]
  41a508:	b	41a414 <wcrtomb@plt+0x17af4>
  41a50c:	bl	4025f0 <abort@plt>
  41a510:	sub	sp, sp, #0x80
  41a514:	stp	x29, x30, [sp, #16]
  41a518:	add	x29, sp, #0x10
  41a51c:	stp	x19, x20, [sp, #32]
  41a520:	mov	w19, w0
  41a524:	stp	x21, x22, [sp, #48]
  41a528:	stp	x23, x24, [sp, #64]
  41a52c:	mov	x23, x1
  41a530:	mov	x24, x2
  41a534:	stp	x25, x26, [sp, #80]
  41a538:	adrp	x26, 449000 <_obstack_memory_used@@Base+0x2a510>
  41a53c:	stp	x27, x28, [sp, #96]
  41a540:	bl	402890 <__errno_location@plt>
  41a544:	mov	x22, x0
  41a548:	ldr	w0, [x0]
  41a54c:	str	w0, [sp, #124]
  41a550:	ldr	x21, [x26, #984]
  41a554:	tbnz	w19, #31, 41a698 <wcrtomb@plt+0x17d78>
  41a558:	add	x20, x26, #0x3d8
  41a55c:	ldr	w0, [x20, #8]
  41a560:	cmp	w19, w0
  41a564:	b.lt	41a5b4 <wcrtomb@plt+0x17c94>  // b.tstop
  41a568:	mov	w0, #0x7fffffff            	// #2147483647
  41a56c:	cmp	w19, w0
  41a570:	b.eq	41a694 <wcrtomb@plt+0x17d74>  // b.none
  41a574:	add	w27, w19, #0x1
  41a578:	add	x0, x20, #0x10
  41a57c:	cmp	x21, x0
  41a580:	sbfiz	x1, x27, #4, #32
  41a584:	b.eq	41a678 <wcrtomb@plt+0x17d58>  // b.none
  41a588:	mov	x0, x21
  41a58c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a590:	mov	x21, x0
  41a594:	str	x0, [x26, #984]
  41a598:	ldr	w0, [x20, #8]
  41a59c:	mov	w1, #0x0                   	// #0
  41a5a0:	sub	w2, w27, w0
  41a5a4:	add	x0, x21, w0, sxtw #4
  41a5a8:	sbfiz	x2, x2, #4, #32
  41a5ac:	bl	402510 <memset@plt>
  41a5b0:	str	w27, [x20, #8]
  41a5b4:	sbfiz	x19, x19, #4, #32
  41a5b8:	add	x6, x20, #0x28
  41a5bc:	add	x26, x21, x19
  41a5c0:	mov	x3, x24
  41a5c4:	ldp	x7, x0, [x20, #72]
  41a5c8:	mov	x2, x23
  41a5cc:	ldp	w4, w5, [x20, #32]
  41a5d0:	ldr	x27, [x21, x19]
  41a5d4:	orr	w25, w5, #0x1
  41a5d8:	ldr	x28, [x26, #8]
  41a5dc:	str	x0, [sp]
  41a5e0:	mov	x1, x27
  41a5e4:	mov	w5, w25
  41a5e8:	mov	x0, x28
  41a5ec:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a5f0:	cmp	x27, x0
  41a5f4:	b.hi	41a64c <wcrtomb@plt+0x17d2c>  // b.pmore
  41a5f8:	add	x27, x0, #0x1
  41a5fc:	str	x27, [x21, x19]
  41a600:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41a604:	add	x0, x0, #0x790
  41a608:	cmp	x28, x0
  41a60c:	b.eq	41a618 <wcrtomb@plt+0x17cf8>  // b.none
  41a610:	mov	x0, x28
  41a614:	bl	4026b0 <free@plt>
  41a618:	mov	x0, x27
  41a61c:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41a620:	ldp	x7, x1, [x20, #72]
  41a624:	str	x0, [x26, #8]
  41a628:	ldr	w4, [x20, #32]
  41a62c:	mov	x28, x0
  41a630:	str	x1, [sp]
  41a634:	mov	w5, w25
  41a638:	mov	x3, x24
  41a63c:	mov	x2, x23
  41a640:	add	x6, x20, #0x28
  41a644:	mov	x1, x27
  41a648:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a64c:	ldr	w0, [sp, #124]
  41a650:	ldp	x29, x30, [sp, #16]
  41a654:	ldp	x19, x20, [sp, #32]
  41a658:	ldp	x23, x24, [sp, #64]
  41a65c:	ldp	x25, x26, [sp, #80]
  41a660:	str	w0, [x22]
  41a664:	mov	x0, x28
  41a668:	ldp	x21, x22, [sp, #48]
  41a66c:	ldp	x27, x28, [sp, #96]
  41a670:	add	sp, sp, #0x80
  41a674:	ret
  41a678:	mov	x0, #0x0                   	// #0
  41a67c:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a680:	mov	x21, x0
  41a684:	str	x0, [x26, #984]
  41a688:	ldp	x0, x1, [x20, #16]
  41a68c:	stp	x0, x1, [x21]
  41a690:	b	41a598 <wcrtomb@plt+0x17c78>
  41a694:	bl	41b778 <wcrtomb@plt+0x18e58>
  41a698:	bl	4025f0 <abort@plt>
  41a69c:	nop
  41a6a0:	sub	sp, sp, #0x70
  41a6a4:	stp	x29, x30, [sp, #16]
  41a6a8:	add	x29, sp, #0x10
  41a6ac:	stp	x19, x20, [sp, #32]
  41a6b0:	stp	x21, x22, [sp, #48]
  41a6b4:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  41a6b8:	add	x19, x21, #0x3d8
  41a6bc:	stp	x23, x24, [sp, #64]
  41a6c0:	mov	x24, x0
  41a6c4:	stp	x25, x26, [sp, #80]
  41a6c8:	mov	x25, x1
  41a6cc:	str	x27, [sp, #96]
  41a6d0:	bl	402890 <__errno_location@plt>
  41a6d4:	mov	x23, x0
  41a6d8:	ldr	w0, [x19, #8]
  41a6dc:	ldr	x20, [x21, #984]
  41a6e0:	cmp	w0, #0x0
  41a6e4:	ldr	w26, [x23]
  41a6e8:	b.gt	41a72c <wcrtomb@plt+0x17e0c>
  41a6ec:	add	x0, x19, #0x10
  41a6f0:	cmp	x20, x0
  41a6f4:	b.eq	41a7e0 <wcrtomb@plt+0x17ec0>  // b.none
  41a6f8:	mov	x0, x20
  41a6fc:	mov	x1, #0x10                  	// #16
  41a700:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a704:	mov	x20, x0
  41a708:	str	x0, [x21, #984]
  41a70c:	ldr	w0, [x19, #8]
  41a710:	mov	w21, #0x1                   	// #1
  41a714:	mov	w1, #0x0                   	// #0
  41a718:	sub	w2, w21, w0
  41a71c:	add	x0, x20, w0, sxtw #4
  41a720:	sbfiz	x2, x2, #4, #32
  41a724:	bl	402510 <memset@plt>
  41a728:	str	w21, [x19, #8]
  41a72c:	ldp	x21, x22, [x20]
  41a730:	add	x6, x19, #0x28
  41a734:	ldp	x7, x0, [x19, #72]
  41a738:	str	x0, [sp]
  41a73c:	ldp	w4, w27, [x19, #32]
  41a740:	mov	x3, x25
  41a744:	mov	x2, x24
  41a748:	mov	x1, x21
  41a74c:	orr	w27, w27, #0x1
  41a750:	mov	x0, x22
  41a754:	mov	w5, w27
  41a758:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a75c:	cmp	x21, x0
  41a760:	b.hi	41a7b8 <wcrtomb@plt+0x17e98>  // b.pmore
  41a764:	add	x21, x0, #0x1
  41a768:	str	x21, [x20]
  41a76c:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41a770:	add	x0, x0, #0x790
  41a774:	cmp	x22, x0
  41a778:	b.eq	41a784 <wcrtomb@plt+0x17e64>  // b.none
  41a77c:	mov	x0, x22
  41a780:	bl	4026b0 <free@plt>
  41a784:	mov	x0, x21
  41a788:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41a78c:	ldp	x7, x1, [x19, #72]
  41a790:	str	x0, [x20, #8]
  41a794:	ldr	w4, [x19, #32]
  41a798:	mov	x22, x0
  41a79c:	str	x1, [sp]
  41a7a0:	mov	w5, w27
  41a7a4:	mov	x3, x25
  41a7a8:	mov	x2, x24
  41a7ac:	add	x6, x19, #0x28
  41a7b0:	mov	x1, x21
  41a7b4:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a7b8:	mov	x0, x22
  41a7bc:	ldp	x29, x30, [sp, #16]
  41a7c0:	ldp	x19, x20, [sp, #32]
  41a7c4:	ldp	x21, x22, [sp, #48]
  41a7c8:	ldr	x27, [sp, #96]
  41a7cc:	str	w26, [x23]
  41a7d0:	ldp	x23, x24, [sp, #64]
  41a7d4:	ldp	x25, x26, [sp, #80]
  41a7d8:	add	sp, sp, #0x70
  41a7dc:	ret
  41a7e0:	mov	x1, #0x10                  	// #16
  41a7e4:	mov	x0, #0x0                   	// #0
  41a7e8:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a7ec:	mov	x20, x0
  41a7f0:	str	x0, [x21, #984]
  41a7f4:	ldp	x0, x1, [x19, #16]
  41a7f8:	stp	x0, x1, [x20]
  41a7fc:	b	41a70c <wcrtomb@plt+0x17dec>
  41a800:	sub	sp, sp, #0x70
  41a804:	stp	x29, x30, [sp, #16]
  41a808:	add	x29, sp, #0x10
  41a80c:	stp	x21, x22, [sp, #48]
  41a810:	adrp	x22, 449000 <_obstack_memory_used@@Base+0x2a510>
  41a814:	stp	x19, x20, [sp, #32]
  41a818:	mov	w19, w0
  41a81c:	stp	x23, x24, [sp, #64]
  41a820:	mov	x24, x1
  41a824:	stp	x25, x26, [sp, #80]
  41a828:	stp	x27, x28, [sp, #96]
  41a82c:	bl	402890 <__errno_location@plt>
  41a830:	ldr	w25, [x0]
  41a834:	ldr	x21, [x22, #984]
  41a838:	tbnz	w19, #31, 41a97c <wcrtomb@plt+0x1805c>
  41a83c:	add	x20, x22, #0x3d8
  41a840:	mov	x23, x0
  41a844:	ldr	w0, [x20, #8]
  41a848:	cmp	w19, w0
  41a84c:	b.lt	41a89c <wcrtomb@plt+0x17f7c>  // b.tstop
  41a850:	mov	w0, #0x7fffffff            	// #2147483647
  41a854:	cmp	w19, w0
  41a858:	b.eq	41a978 <wcrtomb@plt+0x18058>  // b.none
  41a85c:	add	w26, w19, #0x1
  41a860:	add	x0, x20, #0x10
  41a864:	cmp	x21, x0
  41a868:	sbfiz	x1, x26, #4, #32
  41a86c:	b.eq	41a95c <wcrtomb@plt+0x1803c>  // b.none
  41a870:	mov	x0, x21
  41a874:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a878:	mov	x21, x0
  41a87c:	str	x0, [x22, #984]
  41a880:	ldr	w0, [x20, #8]
  41a884:	mov	w1, #0x0                   	// #0
  41a888:	sub	w2, w26, w0
  41a88c:	add	x0, x21, w0, sxtw #4
  41a890:	sbfiz	x2, x2, #4, #32
  41a894:	bl	402510 <memset@plt>
  41a898:	str	w26, [x20, #8]
  41a89c:	sbfiz	x19, x19, #4, #32
  41a8a0:	add	x6, x20, #0x28
  41a8a4:	add	x26, x21, x19
  41a8a8:	mov	x2, x24
  41a8ac:	ldp	x7, x0, [x20, #72]
  41a8b0:	mov	x3, #0xffffffffffffffff    	// #-1
  41a8b4:	ldp	w4, w28, [x20, #32]
  41a8b8:	ldr	x22, [x21, x19]
  41a8bc:	orr	w28, w28, #0x1
  41a8c0:	ldr	x27, [x26, #8]
  41a8c4:	str	x0, [sp]
  41a8c8:	mov	x1, x22
  41a8cc:	mov	w5, w28
  41a8d0:	mov	x0, x27
  41a8d4:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a8d8:	cmp	x22, x0
  41a8dc:	b.hi	41a934 <wcrtomb@plt+0x18014>  // b.pmore
  41a8e0:	add	x22, x0, #0x1
  41a8e4:	str	x22, [x21, x19]
  41a8e8:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41a8ec:	add	x0, x0, #0x790
  41a8f0:	cmp	x27, x0
  41a8f4:	b.eq	41a900 <wcrtomb@plt+0x17fe0>  // b.none
  41a8f8:	mov	x0, x27
  41a8fc:	bl	4026b0 <free@plt>
  41a900:	mov	x0, x22
  41a904:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41a908:	ldp	x7, x1, [x20, #72]
  41a90c:	str	x0, [x26, #8]
  41a910:	ldr	w4, [x20, #32]
  41a914:	mov	x27, x0
  41a918:	str	x1, [sp]
  41a91c:	mov	w5, w28
  41a920:	mov	x2, x24
  41a924:	add	x6, x20, #0x28
  41a928:	mov	x1, x22
  41a92c:	mov	x3, #0xffffffffffffffff    	// #-1
  41a930:	bl	417908 <wcrtomb@plt+0x14fe8>
  41a934:	mov	x0, x27
  41a938:	ldp	x29, x30, [sp, #16]
  41a93c:	ldp	x19, x20, [sp, #32]
  41a940:	ldp	x21, x22, [sp, #48]
  41a944:	ldp	x27, x28, [sp, #96]
  41a948:	str	w25, [x23]
  41a94c:	ldp	x23, x24, [sp, #64]
  41a950:	ldp	x25, x26, [sp, #80]
  41a954:	add	sp, sp, #0x70
  41a958:	ret
  41a95c:	mov	x0, #0x0                   	// #0
  41a960:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a964:	mov	x21, x0
  41a968:	str	x0, [x22, #984]
  41a96c:	ldp	x0, x1, [x20, #16]
  41a970:	stp	x0, x1, [x21]
  41a974:	b	41a880 <wcrtomb@plt+0x17f60>
  41a978:	bl	41b778 <wcrtomb@plt+0x18e58>
  41a97c:	bl	4025f0 <abort@plt>
  41a980:	sub	sp, sp, #0x60
  41a984:	stp	x29, x30, [sp, #16]
  41a988:	add	x29, sp, #0x10
  41a98c:	stp	x19, x20, [sp, #32]
  41a990:	stp	x21, x22, [sp, #48]
  41a994:	adrp	x21, 449000 <_obstack_memory_used@@Base+0x2a510>
  41a998:	add	x19, x21, #0x3d8
  41a99c:	stp	x23, x24, [sp, #64]
  41a9a0:	mov	x24, x0
  41a9a4:	stp	x25, x26, [sp, #80]
  41a9a8:	bl	402890 <__errno_location@plt>
  41a9ac:	mov	x23, x0
  41a9b0:	ldr	w0, [x19, #8]
  41a9b4:	ldr	x20, [x21, #984]
  41a9b8:	cmp	w0, #0x0
  41a9bc:	ldr	w25, [x23]
  41a9c0:	b.gt	41aa04 <wcrtomb@plt+0x180e4>
  41a9c4:	add	x0, x19, #0x10
  41a9c8:	cmp	x20, x0
  41a9cc:	b.eq	41aab4 <wcrtomb@plt+0x18194>  // b.none
  41a9d0:	mov	x0, x20
  41a9d4:	mov	x1, #0x10                  	// #16
  41a9d8:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41a9dc:	mov	x20, x0
  41a9e0:	str	x0, [x21, #984]
  41a9e4:	ldr	w0, [x19, #8]
  41a9e8:	mov	w21, #0x1                   	// #1
  41a9ec:	mov	w1, #0x0                   	// #0
  41a9f0:	sub	w2, w21, w0
  41a9f4:	add	x0, x20, w0, sxtw #4
  41a9f8:	sbfiz	x2, x2, #4, #32
  41a9fc:	bl	402510 <memset@plt>
  41aa00:	str	w21, [x19, #8]
  41aa04:	ldp	x21, x22, [x20]
  41aa08:	add	x6, x19, #0x28
  41aa0c:	ldp	x7, x0, [x19, #72]
  41aa10:	str	x0, [sp]
  41aa14:	ldp	w4, w26, [x19, #32]
  41aa18:	mov	x2, x24
  41aa1c:	mov	x1, x21
  41aa20:	mov	x0, x22
  41aa24:	orr	w26, w26, #0x1
  41aa28:	mov	x3, #0xffffffffffffffff    	// #-1
  41aa2c:	mov	w5, w26
  41aa30:	bl	417908 <wcrtomb@plt+0x14fe8>
  41aa34:	cmp	x21, x0
  41aa38:	b.hi	41aa90 <wcrtomb@plt+0x18170>  // b.pmore
  41aa3c:	add	x21, x0, #0x1
  41aa40:	str	x21, [x20]
  41aa44:	adrp	x0, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41aa48:	add	x0, x0, #0x790
  41aa4c:	cmp	x22, x0
  41aa50:	b.eq	41aa5c <wcrtomb@plt+0x1813c>  // b.none
  41aa54:	mov	x0, x22
  41aa58:	bl	4026b0 <free@plt>
  41aa5c:	mov	x0, x21
  41aa60:	bl	41b5c0 <wcrtomb@plt+0x18ca0>
  41aa64:	ldp	x7, x1, [x19, #72]
  41aa68:	str	x0, [x20, #8]
  41aa6c:	ldr	w4, [x19, #32]
  41aa70:	mov	x22, x0
  41aa74:	str	x1, [sp]
  41aa78:	mov	w5, w26
  41aa7c:	mov	x2, x24
  41aa80:	add	x6, x19, #0x28
  41aa84:	mov	x1, x21
  41aa88:	mov	x3, #0xffffffffffffffff    	// #-1
  41aa8c:	bl	417908 <wcrtomb@plt+0x14fe8>
  41aa90:	mov	x0, x22
  41aa94:	ldp	x29, x30, [sp, #16]
  41aa98:	ldp	x19, x20, [sp, #32]
  41aa9c:	ldp	x21, x22, [sp, #48]
  41aaa0:	str	w25, [x23]
  41aaa4:	ldp	x23, x24, [sp, #64]
  41aaa8:	ldp	x25, x26, [sp, #80]
  41aaac:	add	sp, sp, #0x60
  41aab0:	ret
  41aab4:	mov	x1, #0x10                  	// #16
  41aab8:	mov	x0, #0x0                   	// #0
  41aabc:	bl	41b5f0 <wcrtomb@plt+0x18cd0>
  41aac0:	mov	x20, x0
  41aac4:	str	x0, [x21, #984]
  41aac8:	ldp	x0, x1, [x19, #16]
  41aacc:	stp	x0, x1, [x20]
  41aad0:	b	41a9e4 <wcrtomb@plt+0x180c4>
  41aad4:	nop
  41aad8:	stp	x29, x30, [sp, #-64]!
  41aadc:	mov	x29, sp
  41aae0:	stp	x19, x20, [sp, #16]
  41aae4:	mov	x20, x2
  41aae8:	stp	x21, x22, [sp, #32]
  41aaec:	mov	w22, w0
  41aaf0:	mov	x21, x1
  41aaf4:	str	x23, [sp, #48]
  41aaf8:	mov	x23, #0x7ff00000            	// #2146435072
  41aafc:	nop
  41ab00:	mov	x2, x20
  41ab04:	mov	x1, x21
  41ab08:	mov	w0, w22
  41ab0c:	bl	402760 <read@plt>
  41ab10:	mov	x19, x0
  41ab14:	tbz	x0, #63, 41ab38 <wcrtomb@plt+0x18218>
  41ab18:	bl	402890 <__errno_location@plt>
  41ab1c:	ldr	w2, [x0]
  41ab20:	cmp	w2, #0x4
  41ab24:	b.eq	41ab00 <wcrtomb@plt+0x181e0>  // b.none
  41ab28:	cmp	w2, #0x16
  41ab2c:	ccmp	x20, x23, #0x0, eq  // eq = none
  41ab30:	mov	x20, #0x7ff00000            	// #2146435072
  41ab34:	b.hi	41ab00 <wcrtomb@plt+0x181e0>  // b.pmore
  41ab38:	mov	x0, x19
  41ab3c:	ldp	x19, x20, [sp, #16]
  41ab40:	ldp	x21, x22, [sp, #32]
  41ab44:	ldr	x23, [sp, #48]
  41ab48:	ldp	x29, x30, [sp], #64
  41ab4c:	ret
  41ab50:	stp	x29, x30, [sp, #-32]!
  41ab54:	mov	x2, x1
  41ab58:	mov	x29, sp
  41ab5c:	stp	x19, x20, [sp, #16]
  41ab60:	mov	x19, x0
  41ab64:	mov	x20, x1
  41ab68:	mov	w1, #0x0                   	// #0
  41ab6c:	bl	402770 <memchr@plt>
  41ab70:	sub	x19, x0, x19
  41ab74:	cmp	x0, #0x0
  41ab78:	csinc	x0, x20, x19, eq  // eq = none
  41ab7c:	ldp	x19, x20, [sp, #16]
  41ab80:	ldp	x29, x30, [sp], #32
  41ab84:	ret
  41ab88:	stp	x29, x30, [sp, #-48]!
  41ab8c:	cmp	w0, #0x2
  41ab90:	mov	x29, sp
  41ab94:	stp	x19, x20, [sp, #16]
  41ab98:	mov	w19, w0
  41ab9c:	b.ls	41abb0 <wcrtomb@plt+0x18290>  // b.plast
  41aba0:	mov	w0, w19
  41aba4:	ldp	x19, x20, [sp, #16]
  41aba8:	ldp	x29, x30, [sp], #48
  41abac:	ret
  41abb0:	str	x21, [sp, #32]
  41abb4:	bl	42ef28 <_obstack_memory_used@@Base+0x10438>
  41abb8:	mov	w21, w0
  41abbc:	bl	402890 <__errno_location@plt>
  41abc0:	mov	x20, x0
  41abc4:	mov	w0, w19
  41abc8:	mov	w19, w21
  41abcc:	ldr	w21, [x20]
  41abd0:	bl	402580 <close@plt>
  41abd4:	str	w21, [x20]
  41abd8:	mov	w0, w19
  41abdc:	ldp	x19, x20, [sp, #16]
  41abe0:	ldr	x21, [sp, #32]
  41abe4:	ldp	x29, x30, [sp], #48
  41abe8:	ret
  41abec:	nop
  41abf0:	sub	sp, sp, #0x50
  41abf4:	stp	x29, x30, [sp, #32]
  41abf8:	add	x29, sp, #0x20
  41abfc:	stp	x19, x20, [sp, #48]
  41ac00:	mov	x19, x5
  41ac04:	mov	x20, x0
  41ac08:	str	x21, [sp, #64]
  41ac0c:	mov	x21, x4
  41ac10:	cbz	x1, 41adf4 <wcrtomb@plt+0x184d4>
  41ac14:	mov	x4, x3
  41ac18:	mov	x3, x2
  41ac1c:	mov	x2, x1
  41ac20:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41ac24:	add	x1, x1, #0x88
  41ac28:	bl	4028d0 <fprintf@plt>
  41ac2c:	mov	w2, #0x5                   	// #5
  41ac30:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41ac34:	mov	x0, #0x0                   	// #0
  41ac38:	add	x1, x1, #0xa0
  41ac3c:	bl	4027f0 <dcgettext@plt>
  41ac40:	mov	x2, x0
  41ac44:	mov	w3, #0x7e4                 	// #2020
  41ac48:	mov	x0, x20
  41ac4c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41ac50:	add	x1, x1, #0x3d0
  41ac54:	bl	4028d0 <fprintf@plt>
  41ac58:	mov	x1, x20
  41ac5c:	mov	w0, #0xa                   	// #10
  41ac60:	bl	4027a0 <fputc_unlocked@plt>
  41ac64:	mov	w2, #0x5                   	// #5
  41ac68:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41ac6c:	mov	x0, #0x0                   	// #0
  41ac70:	add	x1, x1, #0xa8
  41ac74:	bl	4027f0 <dcgettext@plt>
  41ac78:	mov	x1, x0
  41ac7c:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x13510>
  41ac80:	add	x2, x2, #0x158
  41ac84:	mov	x0, x20
  41ac88:	bl	4028d0 <fprintf@plt>
  41ac8c:	mov	x1, x20
  41ac90:	mov	w0, #0xa                   	// #10
  41ac94:	bl	4027a0 <fputc_unlocked@plt>
  41ac98:	cmp	x19, #0x5
  41ac9c:	b.eq	41ae04 <wcrtomb@plt+0x184e4>  // b.none
  41aca0:	b.hi	41acf0 <wcrtomb@plt+0x183d0>  // b.pmore
  41aca4:	cmp	x19, #0x2
  41aca8:	b.eq	41ae40 <wcrtomb@plt+0x18520>  // b.none
  41acac:	b.ls	41ad5c <wcrtomb@plt+0x1843c>  // b.plast
  41acb0:	cmp	x19, #0x3
  41acb4:	b.eq	41aec0 <wcrtomb@plt+0x185a0>  // b.none
  41acb8:	mov	w2, #0x5                   	// #5
  41acbc:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41acc0:	mov	x0, #0x0                   	// #0
  41acc4:	add	x1, x1, #0x1c8
  41acc8:	bl	4027f0 <dcgettext@plt>
  41accc:	mov	x1, x0
  41acd0:	mov	x0, x20
  41acd4:	ldp	x2, x3, [x21]
  41acd8:	ldp	x4, x5, [x21, #16]
  41acdc:	ldp	x29, x30, [sp, #32]
  41ace0:	ldp	x19, x20, [sp, #48]
  41ace4:	ldr	x21, [sp, #64]
  41ace8:	add	sp, sp, #0x50
  41acec:	b	4028d0 <fprintf@plt>
  41acf0:	cmp	x19, #0x8
  41acf4:	b.eq	41aef8 <wcrtomb@plt+0x185d8>  // b.none
  41acf8:	b.ls	41ad9c <wcrtomb@plt+0x1847c>  // b.plast
  41acfc:	cmp	x19, #0x9
  41ad00:	b.ne	41aeb0 <wcrtomb@plt+0x18590>  // b.any
  41ad04:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41ad08:	add	x1, x1, #0x298
  41ad0c:	mov	w2, #0x5                   	// #5
  41ad10:	mov	x0, #0x0                   	// #0
  41ad14:	bl	4027f0 <dcgettext@plt>
  41ad18:	ldr	x8, [x21, #48]
  41ad1c:	mov	x1, x0
  41ad20:	ldp	x2, x3, [x21]
  41ad24:	mov	x0, x20
  41ad28:	ldp	x4, x5, [x21, #16]
  41ad2c:	ldp	x6, x7, [x21, #32]
  41ad30:	str	x8, [sp]
  41ad34:	ldr	x8, [x21, #56]
  41ad38:	str	x8, [sp, #8]
  41ad3c:	ldr	x8, [x21, #64]
  41ad40:	str	x8, [sp, #16]
  41ad44:	bl	4028d0 <fprintf@plt>
  41ad48:	ldp	x29, x30, [sp, #32]
  41ad4c:	ldp	x19, x20, [sp, #48]
  41ad50:	ldr	x21, [sp, #64]
  41ad54:	add	sp, sp, #0x50
  41ad58:	ret
  41ad5c:	cbz	x19, 41ade0 <wcrtomb@plt+0x184c0>
  41ad60:	cmp	x19, #0x1
  41ad64:	b.ne	41aeb0 <wcrtomb@plt+0x18590>  // b.any
  41ad68:	mov	w2, #0x5                   	// #5
  41ad6c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41ad70:	mov	x0, #0x0                   	// #0
  41ad74:	add	x1, x1, #0x180
  41ad78:	bl	4027f0 <dcgettext@plt>
  41ad7c:	mov	x1, x0
  41ad80:	mov	x0, x20
  41ad84:	ldp	x29, x30, [sp, #32]
  41ad88:	ldp	x19, x20, [sp, #48]
  41ad8c:	ldr	x2, [x21]
  41ad90:	ldr	x21, [sp, #64]
  41ad94:	add	sp, sp, #0x50
  41ad98:	b	4028d0 <fprintf@plt>
  41ad9c:	cmp	x19, #0x6
  41ada0:	b.eq	41ae74 <wcrtomb@plt+0x18554>  // b.none
  41ada4:	cmp	x19, #0x7
  41ada8:	b.ne	41aeb0 <wcrtomb@plt+0x18590>  // b.any
  41adac:	mov	w2, #0x5                   	// #5
  41adb0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41adb4:	mov	x0, #0x0                   	// #0
  41adb8:	add	x1, x1, #0x238
  41adbc:	bl	4027f0 <dcgettext@plt>
  41adc0:	mov	x1, x0
  41adc4:	ldp	x2, x3, [x21]
  41adc8:	mov	x0, x20
  41adcc:	ldp	x4, x5, [x21, #16]
  41add0:	ldp	x6, x7, [x21, #32]
  41add4:	ldr	x8, [x21, #48]
  41add8:	str	x8, [sp]
  41addc:	bl	4028d0 <fprintf@plt>
  41ade0:	ldp	x29, x30, [sp, #32]
  41ade4:	ldp	x19, x20, [sp, #48]
  41ade8:	ldr	x21, [sp, #64]
  41adec:	add	sp, sp, #0x50
  41adf0:	ret
  41adf4:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41adf8:	add	x1, x1, #0x98
  41adfc:	bl	4028d0 <fprintf@plt>
  41ae00:	b	41ac2c <wcrtomb@plt+0x1830c>
  41ae04:	mov	w2, w19
  41ae08:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41ae0c:	mov	x0, #0x0                   	// #0
  41ae10:	add	x1, x1, #0x1e8
  41ae14:	bl	4027f0 <dcgettext@plt>
  41ae18:	mov	x1, x0
  41ae1c:	mov	x0, x20
  41ae20:	ldp	x2, x3, [x21]
  41ae24:	ldp	x4, x5, [x21, #16]
  41ae28:	ldp	x29, x30, [sp, #32]
  41ae2c:	ldp	x19, x20, [sp, #48]
  41ae30:	ldr	x6, [x21, #32]
  41ae34:	ldr	x21, [sp, #64]
  41ae38:	add	sp, sp, #0x50
  41ae3c:	b	4028d0 <fprintf@plt>
  41ae40:	mov	w2, #0x5                   	// #5
  41ae44:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41ae48:	mov	x0, #0x0                   	// #0
  41ae4c:	add	x1, x1, #0x190
  41ae50:	bl	4027f0 <dcgettext@plt>
  41ae54:	mov	x1, x0
  41ae58:	mov	x0, x20
  41ae5c:	ldp	x2, x3, [x21]
  41ae60:	ldp	x29, x30, [sp, #32]
  41ae64:	ldp	x19, x20, [sp, #48]
  41ae68:	ldr	x21, [sp, #64]
  41ae6c:	add	sp, sp, #0x50
  41ae70:	b	4028d0 <fprintf@plt>
  41ae74:	mov	w2, #0x5                   	// #5
  41ae78:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41ae7c:	mov	x0, #0x0                   	// #0
  41ae80:	add	x1, x1, #0x210
  41ae84:	bl	4027f0 <dcgettext@plt>
  41ae88:	mov	x1, x0
  41ae8c:	mov	x0, x20
  41ae90:	ldp	x2, x3, [x21]
  41ae94:	ldp	x4, x5, [x21, #16]
  41ae98:	ldp	x29, x30, [sp, #32]
  41ae9c:	ldp	x6, x7, [x21, #32]
  41aea0:	ldp	x19, x20, [sp, #48]
  41aea4:	ldr	x21, [sp, #64]
  41aea8:	add	sp, sp, #0x50
  41aeac:	b	4028d0 <fprintf@plt>
  41aeb0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41aeb4:	mov	w2, #0x5                   	// #5
  41aeb8:	add	x1, x1, #0x2d0
  41aebc:	b	41ad10 <wcrtomb@plt+0x183f0>
  41aec0:	mov	w2, #0x5                   	// #5
  41aec4:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41aec8:	mov	x0, #0x0                   	// #0
  41aecc:	add	x1, x1, #0x1a8
  41aed0:	bl	4027f0 <dcgettext@plt>
  41aed4:	mov	x1, x0
  41aed8:	mov	x0, x20
  41aedc:	ldp	x2, x3, [x21]
  41aee0:	ldp	x29, x30, [sp, #32]
  41aee4:	ldp	x19, x20, [sp, #48]
  41aee8:	ldr	x4, [x21, #16]
  41aeec:	ldr	x21, [sp, #64]
  41aef0:	add	sp, sp, #0x50
  41aef4:	b	4028d0 <fprintf@plt>
  41aef8:	mov	w2, #0x5                   	// #5
  41aefc:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41af00:	mov	x0, #0x0                   	// #0
  41af04:	add	x1, x1, #0x268
  41af08:	bl	4027f0 <dcgettext@plt>
  41af0c:	mov	x1, x0
  41af10:	ldr	x8, [x21, #48]
  41af14:	mov	x0, x20
  41af18:	ldp	x2, x3, [x21]
  41af1c:	ldp	x4, x5, [x21, #16]
  41af20:	ldp	x6, x7, [x21, #32]
  41af24:	str	x8, [sp]
  41af28:	ldr	x8, [x21, #56]
  41af2c:	str	x8, [sp, #8]
  41af30:	bl	4028d0 <fprintf@plt>
  41af34:	b	41ade0 <wcrtomb@plt+0x184c0>
  41af38:	ldr	x5, [x4]
  41af3c:	cbz	x5, 41af58 <wcrtomb@plt+0x18638>
  41af40:	mov	x5, #0x0                   	// #0
  41af44:	nop
  41af48:	add	x5, x5, #0x1
  41af4c:	ldr	x6, [x4, x5, lsl #3]
  41af50:	cbnz	x6, 41af48 <wcrtomb@plt+0x18628>
  41af54:	b	41abf0 <wcrtomb@plt+0x182d0>
  41af58:	mov	x5, #0x0                   	// #0
  41af5c:	b	41abf0 <wcrtomb@plt+0x182d0>
  41af60:	stp	x29, x30, [sp, #-96]!
  41af64:	mov	x29, sp
  41af68:	ldp	x6, x8, [x4]
  41af6c:	ldr	w7, [x4, #24]
  41af70:	add	x5, x6, #0xf
  41af74:	and	x5, x5, #0xfffffffffffffff8
  41af78:	tbnz	w7, #31, 41b060 <wcrtomb@plt+0x18740>
  41af7c:	ldr	x4, [x6]
  41af80:	str	x4, [sp, #16]
  41af84:	cbz	x4, 41b0b0 <wcrtomb@plt+0x18790>
  41af88:	add	x4, x5, #0xf
  41af8c:	ldr	x5, [x5]
  41af90:	str	x5, [sp, #24]
  41af94:	and	x4, x4, #0xfffffffffffffff8
  41af98:	cbz	x5, 41b09c <wcrtomb@plt+0x1877c>
  41af9c:	add	x5, x4, #0xf
  41afa0:	and	x5, x5, #0xfffffffffffffff8
  41afa4:	ldr	x4, [x4]
  41afa8:	str	x4, [sp, #32]
  41afac:	cbz	x4, 41b04c <wcrtomb@plt+0x1872c>
  41afb0:	add	x6, x5, #0xf
  41afb4:	and	x6, x6, #0xfffffffffffffff8
  41afb8:	ldr	x4, [x5]
  41afbc:	str	x4, [sp, #40]
  41afc0:	cbz	x4, 41b0c4 <wcrtomb@plt+0x187a4>
  41afc4:	ldr	x5, [x6]
  41afc8:	str	x5, [sp, #48]
  41afcc:	add	x4, x6, #0xf
  41afd0:	and	x4, x4, #0xfffffffffffffff8
  41afd4:	cbz	x5, 41b0d8 <wcrtomb@plt+0x187b8>
  41afd8:	add	x6, x4, #0xf
  41afdc:	and	x6, x6, #0xfffffffffffffff8
  41afe0:	ldr	x4, [x4]
  41afe4:	str	x4, [sp, #56]
  41afe8:	cbz	x4, 41b0e0 <wcrtomb@plt+0x187c0>
  41afec:	ldr	x5, [x6]
  41aff0:	str	x5, [sp, #64]
  41aff4:	add	x4, x6, #0xf
  41aff8:	and	x4, x4, #0xfffffffffffffff8
  41affc:	cbz	x5, 41b0e8 <wcrtomb@plt+0x187c8>
  41b000:	add	x5, x4, #0xf
  41b004:	and	x5, x5, #0xfffffffffffffff8
  41b008:	ldr	x4, [x4]
  41b00c:	str	x4, [sp, #72]
  41b010:	cbz	x4, 41b0f0 <wcrtomb@plt+0x187d0>
  41b014:	add	x6, x5, #0xf
  41b018:	and	x6, x6, #0xfffffffffffffff8
  41b01c:	ldr	x4, [x5]
  41b020:	str	x4, [sp, #80]
  41b024:	cbz	x4, 41b0f8 <wcrtomb@plt+0x187d8>
  41b028:	ldr	x4, [x6]
  41b02c:	str	x4, [sp, #88]
  41b030:	cmp	x4, #0x0
  41b034:	cset	x5, ne  // ne = any
  41b038:	add	x5, x5, #0x9
  41b03c:	add	x4, sp, #0x10
  41b040:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b044:	ldp	x29, x30, [sp], #96
  41b048:	ret
  41b04c:	add	x4, sp, #0x10
  41b050:	mov	x5, #0x2                   	// #2
  41b054:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b058:	ldp	x29, x30, [sp], #96
  41b05c:	ret
  41b060:	add	w4, w7, #0x8
  41b064:	cmp	w4, #0x0
  41b068:	b.gt	41af7c <wcrtomb@plt+0x1865c>
  41b06c:	ldr	x9, [x8, w7, sxtw]
  41b070:	str	x9, [sp, #16]
  41b074:	cbz	x9, 41b0b0 <wcrtomb@plt+0x18790>
  41b078:	cbz	w4, 41b228 <wcrtomb@plt+0x18908>
  41b07c:	add	w9, w7, #0x10
  41b080:	cmp	w9, #0x0
  41b084:	b.le	41b100 <wcrtomb@plt+0x187e0>
  41b088:	mov	x4, x5
  41b08c:	mov	x5, x6
  41b090:	ldr	x5, [x5]
  41b094:	str	x5, [sp, #24]
  41b098:	cbnz	x5, 41af9c <wcrtomb@plt+0x1867c>
  41b09c:	add	x4, sp, #0x10
  41b0a0:	mov	x5, #0x1                   	// #1
  41b0a4:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b0a8:	ldp	x29, x30, [sp], #96
  41b0ac:	ret
  41b0b0:	add	x4, sp, #0x10
  41b0b4:	mov	x5, #0x0                   	// #0
  41b0b8:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b0bc:	ldp	x29, x30, [sp], #96
  41b0c0:	ret
  41b0c4:	add	x4, sp, #0x10
  41b0c8:	mov	x5, #0x3                   	// #3
  41b0cc:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b0d0:	ldp	x29, x30, [sp], #96
  41b0d4:	ret
  41b0d8:	mov	x5, #0x4                   	// #4
  41b0dc:	b	41b03c <wcrtomb@plt+0x1871c>
  41b0e0:	mov	x5, #0x5                   	// #5
  41b0e4:	b	41b03c <wcrtomb@plt+0x1871c>
  41b0e8:	mov	x5, #0x6                   	// #6
  41b0ec:	b	41b03c <wcrtomb@plt+0x1871c>
  41b0f0:	mov	x5, #0x7                   	// #7
  41b0f4:	b	41b03c <wcrtomb@plt+0x1871c>
  41b0f8:	mov	x5, #0x8                   	// #8
  41b0fc:	b	41b03c <wcrtomb@plt+0x1871c>
  41b100:	ldr	x4, [x8, w4, sxtw]
  41b104:	str	x4, [sp, #24]
  41b108:	cbz	x4, 41b09c <wcrtomb@plt+0x1877c>
  41b10c:	cbz	w9, 41b250 <wcrtomb@plt+0x18930>
  41b110:	add	w10, w7, #0x18
  41b114:	mov	x4, x6
  41b118:	cmp	w10, #0x0
  41b11c:	b.gt	41afa4 <wcrtomb@plt+0x18684>
  41b120:	ldr	x4, [x8, w9, sxtw]
  41b124:	str	x4, [sp, #32]
  41b128:	cbz	x4, 41b04c <wcrtomb@plt+0x1872c>
  41b12c:	cbz	w10, 41b248 <wcrtomb@plt+0x18928>
  41b130:	add	w4, w7, #0x20
  41b134:	cmp	w4, #0x0
  41b138:	b.le	41b14c <wcrtomb@plt+0x1882c>
  41b13c:	add	x4, x6, #0xf
  41b140:	mov	x5, x6
  41b144:	and	x6, x4, #0xfffffffffffffff8
  41b148:	b	41afb8 <wcrtomb@plt+0x18698>
  41b14c:	ldr	x5, [x8, w10, sxtw]
  41b150:	str	x5, [sp, #40]
  41b154:	cbz	x5, 41b0c4 <wcrtomb@plt+0x187a4>
  41b158:	cbz	w4, 41afc4 <wcrtomb@plt+0x186a4>
  41b15c:	add	w5, w7, #0x28
  41b160:	cmp	w5, #0x0
  41b164:	b.gt	41afc4 <wcrtomb@plt+0x186a4>
  41b168:	ldr	x4, [x8, w4, sxtw]
  41b16c:	str	x4, [sp, #48]
  41b170:	cbz	x4, 41b0d8 <wcrtomb@plt+0x187b8>
  41b174:	cbz	w5, 41b240 <wcrtomb@plt+0x18920>
  41b178:	add	w4, w7, #0x30
  41b17c:	cmp	w4, #0x0
  41b180:	b.le	41b194 <wcrtomb@plt+0x18874>
  41b184:	add	x5, x6, #0xf
  41b188:	mov	x4, x6
  41b18c:	and	x6, x5, #0xfffffffffffffff8
  41b190:	b	41afe0 <wcrtomb@plt+0x186c0>
  41b194:	ldr	x5, [x8, w5, sxtw]
  41b198:	str	x5, [sp, #56]
  41b19c:	cbz	x5, 41b0e0 <wcrtomb@plt+0x187c0>
  41b1a0:	cbz	w4, 41afec <wcrtomb@plt+0x186cc>
  41b1a4:	add	w5, w7, #0x38
  41b1a8:	cmp	w5, #0x0
  41b1ac:	b.gt	41afec <wcrtomb@plt+0x186cc>
  41b1b0:	ldr	x4, [x8, w4, sxtw]
  41b1b4:	str	x4, [sp, #64]
  41b1b8:	cbz	x4, 41b0e8 <wcrtomb@plt+0x187c8>
  41b1bc:	cbz	w5, 41b238 <wcrtomb@plt+0x18918>
  41b1c0:	add	w9, w7, #0x40
  41b1c4:	cmp	w9, #0x0
  41b1c8:	b.le	41b1dc <wcrtomb@plt+0x188bc>
  41b1cc:	add	x5, x6, #0xf
  41b1d0:	mov	x4, x6
  41b1d4:	and	x5, x5, #0xfffffffffffffff8
  41b1d8:	b	41b008 <wcrtomb@plt+0x186e8>
  41b1dc:	ldr	x4, [x8, w5, sxtw]
  41b1e0:	str	x4, [sp, #72]
  41b1e4:	cbz	x4, 41b0f0 <wcrtomb@plt+0x187d0>
  41b1e8:	cbz	w9, 41b230 <wcrtomb@plt+0x18910>
  41b1ec:	add	w4, w7, #0x48
  41b1f0:	cmp	w4, #0x0
  41b1f4:	b.le	41b208 <wcrtomb@plt+0x188e8>
  41b1f8:	add	x4, x6, #0xf
  41b1fc:	mov	x5, x6
  41b200:	and	x6, x4, #0xfffffffffffffff8
  41b204:	b	41b01c <wcrtomb@plt+0x186fc>
  41b208:	ldr	x5, [x8, w9, sxtw]
  41b20c:	str	x5, [sp, #80]
  41b210:	cbz	x5, 41b0f8 <wcrtomb@plt+0x187d8>
  41b214:	cbz	w4, 41b028 <wcrtomb@plt+0x18708>
  41b218:	add	x8, x8, w4, sxtw
  41b21c:	cmn	w7, #0x4f
  41b220:	csel	x6, x8, x6, lt  // lt = tstop
  41b224:	b	41b028 <wcrtomb@plt+0x18708>
  41b228:	mov	x5, x6
  41b22c:	b	41af88 <wcrtomb@plt+0x18668>
  41b230:	mov	x5, x6
  41b234:	b	41b014 <wcrtomb@plt+0x186f4>
  41b238:	mov	x4, x6
  41b23c:	b	41b000 <wcrtomb@plt+0x186e0>
  41b240:	mov	x4, x6
  41b244:	b	41afd8 <wcrtomb@plt+0x186b8>
  41b248:	mov	x5, x6
  41b24c:	b	41afb0 <wcrtomb@plt+0x18690>
  41b250:	mov	x4, x6
  41b254:	b	41af9c <wcrtomb@plt+0x1867c>
  41b258:	stp	x29, x30, [sp, #-288]!
  41b25c:	mov	w10, #0xffffffe0            	// #-32
  41b260:	mov	w9, #0xffffff80            	// #-128
  41b264:	mov	x29, sp
  41b268:	add	x11, sp, #0x100
  41b26c:	add	x12, sp, #0x120
  41b270:	stp	x12, x12, [sp, #16]
  41b274:	str	x11, [sp, #32]
  41b278:	stp	w10, w9, [sp, #40]
  41b27c:	str	x4, [sp, #48]
  41b280:	str	q0, [sp, #128]
  41b284:	str	q1, [sp, #144]
  41b288:	str	q2, [sp, #160]
  41b28c:	str	q3, [sp, #176]
  41b290:	str	q4, [sp, #192]
  41b294:	str	q5, [sp, #208]
  41b298:	str	q6, [sp, #224]
  41b29c:	str	q7, [sp, #240]
  41b2a0:	stp	x4, x5, [sp, #256]
  41b2a4:	stp	x6, x7, [sp, #272]
  41b2a8:	cbz	x4, 41b398 <wcrtomb@plt+0x18a78>
  41b2ac:	str	x5, [sp, #56]
  41b2b0:	cbz	x5, 41b390 <wcrtomb@plt+0x18a70>
  41b2b4:	str	x6, [sp, #64]
  41b2b8:	mov	x5, #0x2                   	// #2
  41b2bc:	cbz	x6, 41b330 <wcrtomb@plt+0x18a10>
  41b2c0:	str	x7, [sp, #72]
  41b2c4:	mov	x5, #0x3                   	// #3
  41b2c8:	cbz	x7, 41b330 <wcrtomb@plt+0x18a10>
  41b2cc:	ldr	x4, [sp, #288]
  41b2d0:	str	x4, [sp, #80]
  41b2d4:	mov	x5, #0x4                   	// #4
  41b2d8:	cbz	x4, 41b330 <wcrtomb@plt+0x18a10>
  41b2dc:	ldr	x5, [sp, #296]
  41b2e0:	str	x5, [sp, #88]
  41b2e4:	add	x4, sp, #0x130
  41b2e8:	cbz	x5, 41b340 <wcrtomb@plt+0x18a20>
  41b2ec:	ldr	x5, [x4]
  41b2f0:	str	x5, [sp, #96]
  41b2f4:	add	x4, x4, #0x8
  41b2f8:	cbz	x5, 41b354 <wcrtomb@plt+0x18a34>
  41b2fc:	ldr	x5, [x4]
  41b300:	str	x5, [sp, #104]
  41b304:	add	x4, x4, #0x8
  41b308:	cbz	x5, 41b368 <wcrtomb@plt+0x18a48>
  41b30c:	ldr	x5, [x4]
  41b310:	str	x5, [sp, #112]
  41b314:	add	x4, x4, #0x8
  41b318:	cbz	x5, 41b37c <wcrtomb@plt+0x18a5c>
  41b31c:	ldr	x4, [x4]
  41b320:	str	x4, [sp, #120]
  41b324:	cmp	x4, #0x0
  41b328:	cset	x5, ne  // ne = any
  41b32c:	add	x5, x5, #0x9
  41b330:	add	x4, sp, #0x30
  41b334:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b338:	ldp	x29, x30, [sp], #288
  41b33c:	ret
  41b340:	add	x4, sp, #0x30
  41b344:	mov	x5, #0x5                   	// #5
  41b348:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b34c:	ldp	x29, x30, [sp], #288
  41b350:	ret
  41b354:	add	x4, sp, #0x30
  41b358:	mov	x5, #0x6                   	// #6
  41b35c:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b360:	ldp	x29, x30, [sp], #288
  41b364:	ret
  41b368:	add	x4, sp, #0x30
  41b36c:	mov	x5, #0x7                   	// #7
  41b370:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b374:	ldp	x29, x30, [sp], #288
  41b378:	ret
  41b37c:	add	x4, sp, #0x30
  41b380:	mov	x5, #0x8                   	// #8
  41b384:	bl	41abf0 <wcrtomb@plt+0x182d0>
  41b388:	ldp	x29, x30, [sp], #288
  41b38c:	ret
  41b390:	mov	x5, #0x1                   	// #1
  41b394:	b	41b330 <wcrtomb@plt+0x18a10>
  41b398:	mov	x5, #0x0                   	// #0
  41b39c:	b	41b330 <wcrtomb@plt+0x18a10>
  41b3a0:	stp	x29, x30, [sp, #-16]!
  41b3a4:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  41b3a8:	mov	w0, #0xa                   	// #10
  41b3ac:	mov	x29, sp
  41b3b0:	ldr	x1, [x1, #1112]
  41b3b4:	bl	4027a0 <fputc_unlocked@plt>
  41b3b8:	mov	w2, #0x5                   	// #5
  41b3bc:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41b3c0:	mov	x0, #0x0                   	// #0
  41b3c4:	add	x1, x1, #0x310
  41b3c8:	bl	4027f0 <dcgettext@plt>
  41b3cc:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41b3d0:	add	x1, x1, #0x328
  41b3d4:	bl	402870 <printf@plt>
  41b3d8:	mov	w2, #0x5                   	// #5
  41b3dc:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41b3e0:	mov	x0, #0x0                   	// #0
  41b3e4:	add	x1, x1, #0x340
  41b3e8:	bl	4027f0 <dcgettext@plt>
  41b3ec:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x13510>
  41b3f0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  41b3f4:	add	x2, x2, #0x358
  41b3f8:	add	x1, x1, #0x4f8
  41b3fc:	bl	402870 <printf@plt>
  41b400:	mov	w2, #0x5                   	// #5
  41b404:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41b408:	mov	x0, #0x0                   	// #0
  41b40c:	add	x1, x1, #0x380
  41b410:	bl	4027f0 <dcgettext@plt>
  41b414:	ldp	x29, x30, [sp], #16
  41b418:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41b41c:	add	x1, x1, #0x3a8
  41b420:	b	402870 <printf@plt>
  41b424:	nop
  41b428:	stp	x29, x30, [sp, #-32]!
  41b42c:	umulh	x2, x0, x1
  41b430:	mov	x29, sp
  41b434:	str	x19, [sp, #16]
  41b438:	mul	x19, x0, x1
  41b43c:	cmp	x2, #0x0
  41b440:	cset	x0, ne  // ne = any
  41b444:	tbnz	x19, #63, 41b46c <wcrtomb@plt+0x18b4c>
  41b448:	cbnz	x0, 41b46c <wcrtomb@plt+0x18b4c>
  41b44c:	mov	x0, x19
  41b450:	bl	402440 <malloc@plt>
  41b454:	cmp	x0, #0x0
  41b458:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41b45c:	b.ne	41b46c <wcrtomb@plt+0x18b4c>  // b.any
  41b460:	ldr	x19, [sp, #16]
  41b464:	ldp	x29, x30, [sp], #32
  41b468:	ret
  41b46c:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b470:	stp	x29, x30, [sp, #-32]!
  41b474:	umulh	x4, x1, x2
  41b478:	mov	x29, sp
  41b47c:	str	x19, [sp, #16]
  41b480:	mul	x19, x1, x2
  41b484:	cmp	x4, #0x0
  41b488:	cset	x1, ne  // ne = any
  41b48c:	tbnz	x19, #63, 41b4d4 <wcrtomb@plt+0x18bb4>
  41b490:	cbnz	x1, 41b4d4 <wcrtomb@plt+0x18bb4>
  41b494:	cmp	x19, #0x0
  41b498:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41b49c:	b.ne	41b4c0 <wcrtomb@plt+0x18ba0>  // b.any
  41b4a0:	mov	x1, x19
  41b4a4:	bl	402550 <realloc@plt>
  41b4a8:	cmp	x0, #0x0
  41b4ac:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41b4b0:	b.ne	41b4d4 <wcrtomb@plt+0x18bb4>  // b.any
  41b4b4:	ldr	x19, [sp, #16]
  41b4b8:	ldp	x29, x30, [sp], #32
  41b4bc:	ret
  41b4c0:	bl	4026b0 <free@plt>
  41b4c4:	mov	x0, #0x0                   	// #0
  41b4c8:	ldr	x19, [sp, #16]
  41b4cc:	ldp	x29, x30, [sp], #32
  41b4d0:	ret
  41b4d4:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b4d8:	stp	x29, x30, [sp, #-32]!
  41b4dc:	mov	x4, x0
  41b4e0:	mov	x29, sp
  41b4e4:	ldr	x3, [x1]
  41b4e8:	str	x19, [sp, #16]
  41b4ec:	cbz	x0, 41b53c <wcrtomb@plt+0x18c1c>
  41b4f0:	mov	x5, #0x5555555555555555    	// #6148914691236517205
  41b4f4:	movk	x5, #0x5554
  41b4f8:	udiv	x5, x5, x2
  41b4fc:	cmp	x5, x3
  41b500:	b.ls	41b588 <wcrtomb@plt+0x18c68>  // b.plast
  41b504:	add	x19, x3, #0x1
  41b508:	add	x19, x19, x3, lsr #1
  41b50c:	str	x19, [x1]
  41b510:	mul	x19, x2, x19
  41b514:	cbz	x19, 41b574 <wcrtomb@plt+0x18c54>
  41b518:	mov	x0, x4
  41b51c:	mov	x1, x19
  41b520:	bl	402550 <realloc@plt>
  41b524:	cmp	x0, #0x0
  41b528:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41b52c:	b.ne	41b588 <wcrtomb@plt+0x18c68>  // b.any
  41b530:	ldr	x19, [sp, #16]
  41b534:	ldp	x29, x30, [sp], #32
  41b538:	ret
  41b53c:	cbz	x3, 41b560 <wcrtomb@plt+0x18c40>
  41b540:	umulh	x0, x3, x2
  41b544:	mul	x19, x3, x2
  41b548:	cmp	x0, #0x0
  41b54c:	cset	x0, ne  // ne = any
  41b550:	tbnz	x19, #63, 41b588 <wcrtomb@plt+0x18c68>
  41b554:	cbnz	x0, 41b588 <wcrtomb@plt+0x18c68>
  41b558:	str	x3, [x1]
  41b55c:	b	41b518 <wcrtomb@plt+0x18bf8>
  41b560:	mov	x3, #0x80                  	// #128
  41b564:	cmp	x2, x3
  41b568:	udiv	x3, x3, x2
  41b56c:	cinc	x3, x3, hi  // hi = pmore
  41b570:	b	41b540 <wcrtomb@plt+0x18c20>
  41b574:	bl	4026b0 <free@plt>
  41b578:	mov	x0, #0x0                   	// #0
  41b57c:	ldr	x19, [sp, #16]
  41b580:	ldp	x29, x30, [sp], #32
  41b584:	ret
  41b588:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b58c:	nop
  41b590:	stp	x29, x30, [sp, #-32]!
  41b594:	mov	x29, sp
  41b598:	str	x19, [sp, #16]
  41b59c:	mov	x19, x0
  41b5a0:	bl	402440 <malloc@plt>
  41b5a4:	cmp	x0, #0x0
  41b5a8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41b5ac:	b.ne	41b5bc <wcrtomb@plt+0x18c9c>  // b.any
  41b5b0:	ldr	x19, [sp, #16]
  41b5b4:	ldp	x29, x30, [sp], #32
  41b5b8:	ret
  41b5bc:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b5c0:	stp	x29, x30, [sp, #-32]!
  41b5c4:	mov	x29, sp
  41b5c8:	str	x19, [sp, #16]
  41b5cc:	mov	x19, x0
  41b5d0:	bl	402440 <malloc@plt>
  41b5d4:	cmp	x0, #0x0
  41b5d8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41b5dc:	b.ne	41b5ec <wcrtomb@plt+0x18ccc>  // b.any
  41b5e0:	ldr	x19, [sp, #16]
  41b5e4:	ldp	x29, x30, [sp], #32
  41b5e8:	ret
  41b5ec:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b5f0:	stp	x29, x30, [sp, #-32]!
  41b5f4:	cmp	x1, #0x0
  41b5f8:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41b5fc:	mov	x29, sp
  41b600:	b.ne	41b628 <wcrtomb@plt+0x18d08>  // b.any
  41b604:	str	x19, [sp, #16]
  41b608:	mov	x19, x1
  41b60c:	bl	402550 <realloc@plt>
  41b610:	cmp	x0, #0x0
  41b614:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41b618:	b.ne	41b638 <wcrtomb@plt+0x18d18>  // b.any
  41b61c:	ldr	x19, [sp, #16]
  41b620:	ldp	x29, x30, [sp], #32
  41b624:	ret
  41b628:	bl	4026b0 <free@plt>
  41b62c:	mov	x0, #0x0                   	// #0
  41b630:	ldp	x29, x30, [sp], #32
  41b634:	ret
  41b638:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b63c:	nop
  41b640:	stp	x29, x30, [sp, #-16]!
  41b644:	mov	x2, x1
  41b648:	mov	x29, sp
  41b64c:	ldr	x1, [x1]
  41b650:	cbz	x0, 41b680 <wcrtomb@plt+0x18d60>
  41b654:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  41b658:	movk	x3, #0x5553
  41b65c:	cmp	x1, x3
  41b660:	b.hi	41b694 <wcrtomb@plt+0x18d74>  // b.pmore
  41b664:	add	x3, x1, #0x1
  41b668:	add	x1, x3, x1, lsr #1
  41b66c:	str	x1, [x2]
  41b670:	bl	402550 <realloc@plt>
  41b674:	cbz	x0, 41b694 <wcrtomb@plt+0x18d74>
  41b678:	ldp	x29, x30, [sp], #16
  41b67c:	ret
  41b680:	cmp	x1, #0x0
  41b684:	cbnz	x1, 41b690 <wcrtomb@plt+0x18d70>
  41b688:	mov	x1, #0x80                  	// #128
  41b68c:	b	41b66c <wcrtomb@plt+0x18d4c>
  41b690:	b.ge	41b66c <wcrtomb@plt+0x18d4c>  // b.tcont
  41b694:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b698:	stp	x29, x30, [sp, #-16]!
  41b69c:	mov	x29, sp
  41b6a0:	tbnz	x0, #63, 41b6b8 <wcrtomb@plt+0x18d98>
  41b6a4:	mov	x1, #0x1                   	// #1
  41b6a8:	bl	402520 <calloc@plt>
  41b6ac:	cbz	x0, 41b6b8 <wcrtomb@plt+0x18d98>
  41b6b0:	ldp	x29, x30, [sp], #16
  41b6b4:	ret
  41b6b8:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b6bc:	nop
  41b6c0:	umulh	x4, x0, x1
  41b6c4:	stp	x29, x30, [sp, #-16]!
  41b6c8:	mul	x2, x0, x1
  41b6cc:	cmp	x4, #0x0
  41b6d0:	mov	x29, sp
  41b6d4:	cset	x3, ne  // ne = any
  41b6d8:	tbnz	x2, #63, 41b6f0 <wcrtomb@plt+0x18dd0>
  41b6dc:	cbnz	x3, 41b6f0 <wcrtomb@plt+0x18dd0>
  41b6e0:	bl	402520 <calloc@plt>
  41b6e4:	cbz	x0, 41b6f0 <wcrtomb@plt+0x18dd0>
  41b6e8:	ldp	x29, x30, [sp], #16
  41b6ec:	ret
  41b6f0:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b6f4:	nop
  41b6f8:	stp	x29, x30, [sp, #-32]!
  41b6fc:	mov	x29, sp
  41b700:	stp	x19, x20, [sp, #16]
  41b704:	mov	x19, x1
  41b708:	mov	x20, x0
  41b70c:	mov	x0, x1
  41b710:	bl	402440 <malloc@plt>
  41b714:	cmp	x0, #0x0
  41b718:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41b71c:	b.ne	41b734 <wcrtomb@plt+0x18e14>  // b.any
  41b720:	mov	x2, x19
  41b724:	mov	x1, x20
  41b728:	ldp	x19, x20, [sp, #16]
  41b72c:	ldp	x29, x30, [sp], #32
  41b730:	b	4022a0 <memcpy@plt>
  41b734:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b738:	stp	x29, x30, [sp, #-32]!
  41b73c:	mov	x29, sp
  41b740:	stp	x19, x20, [sp, #16]
  41b744:	mov	x20, x0
  41b748:	bl	402300 <strlen@plt>
  41b74c:	add	x19, x0, #0x1
  41b750:	mov	x0, x19
  41b754:	bl	402440 <malloc@plt>
  41b758:	cbz	x0, 41b770 <wcrtomb@plt+0x18e50>
  41b75c:	mov	x2, x19
  41b760:	mov	x1, x20
  41b764:	ldp	x19, x20, [sp, #16]
  41b768:	ldp	x29, x30, [sp], #32
  41b76c:	b	4022a0 <memcpy@plt>
  41b770:	bl	41b778 <wcrtomb@plt+0x18e58>
  41b774:	nop
  41b778:	stp	x29, x30, [sp, #-32]!
  41b77c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  41b780:	mov	w2, #0x5                   	// #5
  41b784:	mov	x29, sp
  41b788:	str	x19, [sp, #16]
  41b78c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41b790:	ldr	w19, [x0, #976]
  41b794:	add	x1, x1, #0x400
  41b798:	mov	x0, #0x0                   	// #0
  41b79c:	bl	4027f0 <dcgettext@plt>
  41b7a0:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x10510>
  41b7a4:	mov	x3, x0
  41b7a8:	add	x2, x2, #0x270
  41b7ac:	mov	w0, w19
  41b7b0:	mov	w1, #0x0                   	// #0
  41b7b4:	bl	402330 <error@plt>
  41b7b8:	bl	4025f0 <abort@plt>
  41b7bc:	nop
  41b7c0:	stp	x29, x30, [sp, #-96]!
  41b7c4:	cmp	w2, #0x24
  41b7c8:	mov	x29, sp
  41b7cc:	stp	x19, x20, [sp, #16]
  41b7d0:	stp	x21, x22, [sp, #32]
  41b7d4:	stp	x23, x24, [sp, #48]
  41b7d8:	stp	x25, x26, [sp, #64]
  41b7dc:	b.hi	41bf3c <wcrtomb@plt+0x1961c>  // b.pmore
  41b7e0:	cmp	x1, #0x0
  41b7e4:	mov	x25, x0
  41b7e8:	add	x0, sp, #0x58
  41b7ec:	mov	w20, w2
  41b7f0:	csel	x19, x0, x1, eq  // eq = none
  41b7f4:	mov	x23, x3
  41b7f8:	mov	x22, x4
  41b7fc:	bl	402890 <__errno_location@plt>
  41b800:	mov	x21, x0
  41b804:	mov	w2, w20
  41b808:	mov	x1, x19
  41b80c:	mov	x0, x25
  41b810:	mov	w3, #0x0                   	// #0
  41b814:	str	wzr, [x21]
  41b818:	bl	4024a0 <__strtol_internal@plt>
  41b81c:	mov	x24, x0
  41b820:	ldr	x26, [x19]
  41b824:	cmp	x26, x25
  41b828:	b.eq	41b878 <wcrtomb@plt+0x18f58>  // b.none
  41b82c:	ldr	w0, [x21]
  41b830:	cbz	w0, 41b870 <wcrtomb@plt+0x18f50>
  41b834:	cmp	w0, #0x22
  41b838:	mov	w25, #0x4                   	// #4
  41b83c:	b.ne	41b854 <wcrtomb@plt+0x18f34>  // b.any
  41b840:	mov	w25, #0x1                   	// #1
  41b844:	cbz	x22, 41b850 <wcrtomb@plt+0x18f30>
  41b848:	ldrb	w20, [x26]
  41b84c:	cbnz	w20, 41bbc8 <wcrtomb@plt+0x192a8>
  41b850:	str	x24, [x23]
  41b854:	mov	w0, w25
  41b858:	ldp	x19, x20, [sp, #16]
  41b85c:	ldp	x21, x22, [sp, #32]
  41b860:	ldp	x23, x24, [sp, #48]
  41b864:	ldp	x25, x26, [sp, #64]
  41b868:	ldp	x29, x30, [sp], #96
  41b86c:	ret
  41b870:	mov	w25, #0x0                   	// #0
  41b874:	b	41b844 <wcrtomb@plt+0x18f24>
  41b878:	cbz	x22, 41bbec <wcrtomb@plt+0x192cc>
  41b87c:	ldrb	w20, [x26]
  41b880:	mov	w25, #0x4                   	// #4
  41b884:	cbz	w20, 41b854 <wcrtomb@plt+0x18f34>
  41b888:	mov	w1, w20
  41b88c:	mov	x0, x22
  41b890:	mov	x24, #0x1                   	// #1
  41b894:	mov	w25, #0x0                   	// #0
  41b898:	bl	4026e0 <strchr@plt>
  41b89c:	cbz	x0, 41bbec <wcrtomb@plt+0x192cc>
  41b8a0:	sub	w1, w20, #0x45
  41b8a4:	and	w1, w1, #0xff
  41b8a8:	cmp	w1, #0x2f
  41b8ac:	b.hi	41baa8 <wcrtomb@plt+0x19188>  // b.pmore
  41b8b0:	mov	x0, #0x8945                	// #35141
  41b8b4:	mov	x21, #0x1                   	// #1
  41b8b8:	movk	x0, #0x30, lsl #16
  41b8bc:	lsl	x1, x21, x1
  41b8c0:	movk	x0, #0x8144, lsl #32
  41b8c4:	tst	x1, x0
  41b8c8:	b.ne	41bbf4 <wcrtomb@plt+0x192d4>  // b.any
  41b8cc:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41b8d0:	mov	x0, #0x400                 	// #1024
  41b8d4:	cmp	w20, #0x5a
  41b8d8:	b.eq	41bd98 <wcrtomb@plt+0x19478>  // b.none
  41b8dc:	b.hi	41ba1c <wcrtomb@plt+0x190fc>  // b.pmore
  41b8e0:	cmp	w20, #0x4d
  41b8e4:	b.eq	41bac0 <wcrtomb@plt+0x191a0>  // b.none
  41b8e8:	b.hi	41b940 <wcrtomb@plt+0x19020>  // b.pmore
  41b8ec:	cmp	w20, #0x45
  41b8f0:	b.eq	41bc70 <wcrtomb@plt+0x19350>  // b.none
  41b8f4:	b.ls	41bb20 <wcrtomb@plt+0x19200>  // b.plast
  41b8f8:	cmp	w20, #0x47
  41b8fc:	b.eq	41ba68 <wcrtomb@plt+0x19148>  // b.none
  41b900:	cmp	w20, #0x4b
  41b904:	b.ne	41bbd8 <wcrtomb@plt+0x192b8>  // b.any
  41b908:	cmp	x1, x24
  41b90c:	b.gt	41bbe0 <wcrtomb@plt+0x192c0>
  41b910:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  41b914:	udiv	x2, x1, x0
  41b918:	cmp	x2, x24
  41b91c:	b.lt	41bd74 <wcrtomb@plt+0x19454>  // b.tstop
  41b920:	mul	x24, x24, x0
  41b924:	add	x0, x26, x21
  41b928:	str	x0, [x19]
  41b92c:	orr	w0, w25, #0x2
  41b930:	ldrb	w1, [x26, x21]
  41b934:	cmp	w1, #0x0
  41b938:	csel	w25, w0, w25, ne  // ne = any
  41b93c:	b	41b850 <wcrtomb@plt+0x18f30>
  41b940:	cmp	w20, #0x54
  41b944:	b.eq	41bd10 <wcrtomb@plt+0x193f0>  // b.none
  41b948:	cmp	w20, #0x59
  41b94c:	b.ne	41bb48 <wcrtomb@plt+0x19228>  // b.any
  41b950:	cmp	x1, x24
  41b954:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41b958:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41b95c:	udiv	x3, x4, x0
  41b960:	cmp	x3, x24
  41b964:	b.lt	41bf0c <wcrtomb@plt+0x195ec>  // b.tstop
  41b968:	mul	x2, x0, x24
  41b96c:	cmp	x1, x2
  41b970:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41b974:	cmp	x2, x3
  41b978:	b.gt	41bf0c <wcrtomb@plt+0x195ec>
  41b97c:	mul	x2, x0, x2
  41b980:	cmp	x1, x2
  41b984:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41b988:	cmp	x2, x3
  41b98c:	b.gt	41bf0c <wcrtomb@plt+0x195ec>
  41b990:	mul	x2, x0, x2
  41b994:	cmp	x1, x2
  41b998:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41b99c:	cmp	x2, x3
  41b9a0:	b.gt	41bf0c <wcrtomb@plt+0x195ec>
  41b9a4:	mul	x2, x0, x2
  41b9a8:	cmp	x1, x2
  41b9ac:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41b9b0:	cmp	x2, x3
  41b9b4:	b.gt	41bbb8 <wcrtomb@plt+0x19298>
  41b9b8:	mul	x2, x0, x2
  41b9bc:	cmp	x1, x2
  41b9c0:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41b9c4:	mov	x24, x4
  41b9c8:	cmp	x2, x3
  41b9cc:	b.gt	41b9f8 <wcrtomb@plt+0x190d8>
  41b9d0:	mul	x2, x0, x2
  41b9d4:	cmp	x1, x2
  41b9d8:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41b9dc:	cmp	x2, x3
  41b9e0:	b.gt	41b9f8 <wcrtomb@plt+0x190d8>
  41b9e4:	mul	x2, x0, x2
  41b9e8:	cmp	x1, x2
  41b9ec:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41b9f0:	cmp	x3, x2
  41b9f4:	b.ge	41bcf4 <wcrtomb@plt+0x193d4>  // b.tcont
  41b9f8:	mov	w0, #0x1                   	// #1
  41b9fc:	orr	w25, w25, w0
  41ba00:	add	x0, x26, x21
  41ba04:	str	x0, [x19]
  41ba08:	orr	w0, w25, #0x2
  41ba0c:	ldrb	w1, [x26, x21]
  41ba10:	cmp	w1, #0x0
  41ba14:	csel	w25, w0, w25, ne  // ne = any
  41ba18:	b	41b850 <wcrtomb@plt+0x18f30>
  41ba1c:	cmp	w20, #0x6b
  41ba20:	b.eq	41b908 <wcrtomb@plt+0x18fe8>  // b.none
  41ba24:	b.ls	41ba58 <wcrtomb@plt+0x19138>  // b.plast
  41ba28:	cmp	w20, #0x74
  41ba2c:	b.eq	41bd10 <wcrtomb@plt+0x193f0>  // b.none
  41ba30:	cmp	w20, #0x77
  41ba34:	b.ne	41bab8 <wcrtomb@plt+0x19198>  // b.any
  41ba38:	mov	x0, #0xc000000000000000    	// #-4611686018427387904
  41ba3c:	cmp	x24, x0
  41ba40:	b.lt	41bbe0 <wcrtomb@plt+0x192c0>  // b.tstop
  41ba44:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  41ba48:	cmp	x24, x0
  41ba4c:	b.gt	41bf1c <wcrtomb@plt+0x195fc>
  41ba50:	lsl	x24, x24, #1
  41ba54:	b	41b924 <wcrtomb@plt+0x19004>
  41ba58:	cmp	w20, #0x63
  41ba5c:	b.eq	41b924 <wcrtomb@plt+0x19004>  // b.none
  41ba60:	cmp	w20, #0x67
  41ba64:	b.ne	41baf8 <wcrtomb@plt+0x191d8>  // b.any
  41ba68:	cmp	x1, x24
  41ba6c:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41ba70:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  41ba74:	udiv	x2, x3, x0
  41ba78:	cmp	x2, x24
  41ba7c:	b.lt	41ba98 <wcrtomb@plt+0x19178>  // b.tstop
  41ba80:	mul	x24, x0, x24
  41ba84:	cmp	x1, x24
  41ba88:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41ba8c:	cmp	x2, x24
  41ba90:	b.ge	41bd50 <wcrtomb@plt+0x19430>  // b.tcont
  41ba94:	nop
  41ba98:	mov	w0, #0x1                   	// #1
  41ba9c:	mov	x24, x3
  41baa0:	orr	w25, w25, w0
  41baa4:	b	41ba00 <wcrtomb@plt+0x190e0>
  41baa8:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41baac:	mov	x0, #0x400                 	// #1024
  41bab0:	mov	x21, #0x1                   	// #1
  41bab4:	b	41b8d4 <wcrtomb@plt+0x18fb4>
  41bab8:	cmp	w20, #0x6d
  41babc:	b.ne	41bbd8 <wcrtomb@plt+0x192b8>  // b.any
  41bac0:	cmp	x1, x24
  41bac4:	b.gt	41bbe0 <wcrtomb@plt+0x192c0>
  41bac8:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  41bacc:	udiv	x2, x3, x0
  41bad0:	cmp	x2, x24
  41bad4:	b.lt	41baec <wcrtomb@plt+0x191cc>  // b.tstop
  41bad8:	mul	x24, x0, x24
  41badc:	cmp	x24, x1
  41bae0:	b.lt	41bbe0 <wcrtomb@plt+0x192c0>  // b.tstop
  41bae4:	cmp	x2, x24
  41bae8:	b.ge	41b920 <wcrtomb@plt+0x19000>  // b.tcont
  41baec:	mov	x24, x3
  41baf0:	mov	w25, #0x1                   	// #1
  41baf4:	b	41b924 <wcrtomb@plt+0x19004>
  41baf8:	cmp	w20, #0x62
  41bafc:	b.ne	41bbd8 <wcrtomb@plt+0x192b8>  // b.any
  41bb00:	mov	x0, #0xffc0000000000000    	// #-18014398509481984
  41bb04:	cmp	x24, x0
  41bb08:	b.lt	41bbe0 <wcrtomb@plt+0x192c0>  // b.tstop
  41bb0c:	mov	x0, #0x3fffffffffffff      	// #18014398509481983
  41bb10:	cmp	x24, x0
  41bb14:	b.gt	41bf1c <wcrtomb@plt+0x195fc>
  41bb18:	lsl	x24, x24, #9
  41bb1c:	b	41b924 <wcrtomb@plt+0x19004>
  41bb20:	cmp	w20, #0x42
  41bb24:	b.ne	41bbd8 <wcrtomb@plt+0x192b8>  // b.any
  41bb28:	mov	x0, #0xffe0000000000000    	// #-9007199254740992
  41bb2c:	cmp	x24, x0
  41bb30:	b.lt	41bbe0 <wcrtomb@plt+0x192c0>  // b.tstop
  41bb34:	mov	x0, #0x1fffffffffffff      	// #9007199254740991
  41bb38:	cmp	x24, x0
  41bb3c:	b.gt	41bf1c <wcrtomb@plt+0x195fc>
  41bb40:	lsl	x24, x24, #10
  41bb44:	b	41b924 <wcrtomb@plt+0x19004>
  41bb48:	cmp	w20, #0x50
  41bb4c:	b.ne	41bbd8 <wcrtomb@plt+0x192b8>  // b.any
  41bb50:	cmp	x1, x24
  41bb54:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bb58:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  41bb5c:	udiv	x2, x3, x0
  41bb60:	cmp	x2, x24
  41bb64:	b.lt	41ba98 <wcrtomb@plt+0x19178>  // b.tstop
  41bb68:	mul	x24, x0, x24
  41bb6c:	cmp	x24, x1
  41bb70:	b.lt	41bd80 <wcrtomb@plt+0x19460>  // b.tstop
  41bb74:	cmp	x2, x24
  41bb78:	b.lt	41ba98 <wcrtomb@plt+0x19178>  // b.tstop
  41bb7c:	mul	x24, x24, x0
  41bb80:	cmp	x24, x1
  41bb84:	b.lt	41bd80 <wcrtomb@plt+0x19460>  // b.tstop
  41bb88:	cmp	x24, x2
  41bb8c:	b.gt	41ba98 <wcrtomb@plt+0x19178>
  41bb90:	mul	x24, x24, x0
  41bb94:	cmp	x1, x24
  41bb98:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bb9c:	cmp	x24, x2
  41bba0:	b.gt	41ba98 <wcrtomb@plt+0x19178>
  41bba4:	mul	x24, x0, x24
  41bba8:	cmp	x1, x24
  41bbac:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bbb0:	cmp	x2, x24
  41bbb4:	b.ge	41bd64 <wcrtomb@plt+0x19444>  // b.tcont
  41bbb8:	mov	w0, #0x1                   	// #1
  41bbbc:	mov	x24, #0x7fffffffffffffff    	// #9223372036854775807
  41bbc0:	orr	w25, w25, w0
  41bbc4:	b	41ba00 <wcrtomb@plt+0x190e0>
  41bbc8:	mov	w1, w20
  41bbcc:	mov	x0, x22
  41bbd0:	bl	4026e0 <strchr@plt>
  41bbd4:	cbnz	x0, 41b8a0 <wcrtomb@plt+0x18f80>
  41bbd8:	orr	w25, w25, #0x2
  41bbdc:	b	41b850 <wcrtomb@plt+0x18f30>
  41bbe0:	mov	w25, #0x1                   	// #1
  41bbe4:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
  41bbe8:	b	41b924 <wcrtomb@plt+0x19004>
  41bbec:	mov	w25, #0x4                   	// #4
  41bbf0:	b	41b854 <wcrtomb@plt+0x18f34>
  41bbf4:	mov	x0, x22
  41bbf8:	mov	w1, #0x30                  	// #48
  41bbfc:	bl	4026e0 <strchr@plt>
  41bc00:	cbz	x0, 41b8cc <wcrtomb@plt+0x18fac>
  41bc04:	ldrb	w0, [x26, #1]
  41bc08:	cmp	w0, #0x44
  41bc0c:	b.eq	41be30 <wcrtomb@plt+0x19510>  // b.none
  41bc10:	cmp	w0, #0x69
  41bc14:	b.eq	41bed8 <wcrtomb@plt+0x195b8>  // b.none
  41bc18:	cmp	w0, #0x42
  41bc1c:	b.eq	41be30 <wcrtomb@plt+0x19510>  // b.none
  41bc20:	cmp	w20, #0x5a
  41bc24:	b.eq	41bd90 <wcrtomb@plt+0x19470>  // b.none
  41bc28:	b.hi	41be88 <wcrtomb@plt+0x19568>  // b.pmore
  41bc2c:	cmp	w20, #0x4d
  41bc30:	b.eq	41be68 <wcrtomb@plt+0x19548>  // b.none
  41bc34:	b.hi	41beb8 <wcrtomb@plt+0x19598>  // b.pmore
  41bc38:	cmp	w20, #0x45
  41bc3c:	b.eq	41bc64 <wcrtomb@plt+0x19344>  // b.none
  41bc40:	b.ls	41be74 <wcrtomb@plt+0x19554>  // b.plast
  41bc44:	cmp	w20, #0x47
  41bc48:	b.eq	41be20 <wcrtomb@plt+0x19500>  // b.none
  41bc4c:	cmp	w20, #0x4b
  41bc50:	b.ne	41bbd8 <wcrtomb@plt+0x192b8>  // b.any
  41bc54:	mov	x21, #0x1                   	// #1
  41bc58:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41bc5c:	mov	x0, #0x400                 	// #1024
  41bc60:	b	41b908 <wcrtomb@plt+0x18fe8>
  41bc64:	mov	x21, #0x1                   	// #1
  41bc68:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41bc6c:	mov	x0, #0x400                 	// #1024
  41bc70:	cmp	x1, x24
  41bc74:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bc78:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41bc7c:	udiv	x3, x4, x0
  41bc80:	cmp	x3, x24
  41bc84:	b.lt	41bf0c <wcrtomb@plt+0x195ec>  // b.tstop
  41bc88:	mul	x2, x0, x24
  41bc8c:	cmp	x1, x2
  41bc90:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bc94:	cmp	x3, x2
  41bc98:	b.lt	41bf0c <wcrtomb@plt+0x195ec>  // b.tstop
  41bc9c:	mul	x2, x0, x2
  41bca0:	cmp	x2, x1
  41bca4:	b.lt	41bd80 <wcrtomb@plt+0x19460>  // b.tstop
  41bca8:	cmp	x2, x3
  41bcac:	b.gt	41bf0c <wcrtomb@plt+0x195ec>
  41bcb0:	mul	x2, x2, x0
  41bcb4:	cmp	x1, x2
  41bcb8:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bcbc:	cmp	x2, x3
  41bcc0:	b.gt	41bf0c <wcrtomb@plt+0x195ec>
  41bcc4:	mul	x2, x0, x2
  41bcc8:	cmp	x1, x2
  41bccc:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bcd0:	cmp	x3, x2
  41bcd4:	b.lt	41bbb8 <wcrtomb@plt+0x19298>  // b.tstop
  41bcd8:	mul	x2, x0, x2
  41bcdc:	cmp	x1, x2
  41bce0:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bce4:	mov	x24, #0x7fffffffffffffff    	// #9223372036854775807
  41bce8:	udiv	x1, x24, x0
  41bcec:	cmp	x1, x2
  41bcf0:	b.lt	41b9f8 <wcrtomb@plt+0x190d8>  // b.tstop
  41bcf4:	mul	x24, x0, x2
  41bcf8:	mov	w0, #0x0                   	// #0
  41bcfc:	orr	w25, w25, w0
  41bd00:	b	41ba00 <wcrtomb@plt+0x190e0>
  41bd04:	mov	x21, #0x1                   	// #1
  41bd08:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41bd0c:	mov	x0, #0x400                 	// #1024
  41bd10:	cmp	x1, x24
  41bd14:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bd18:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  41bd1c:	udiv	x2, x3, x0
  41bd20:	cmp	x2, x24
  41bd24:	b.lt	41ba98 <wcrtomb@plt+0x19178>  // b.tstop
  41bd28:	mul	x24, x0, x24
  41bd2c:	cmp	x1, x24
  41bd30:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bd34:	cmp	x24, x2
  41bd38:	b.gt	41ba98 <wcrtomb@plt+0x19178>
  41bd3c:	mul	x24, x0, x24
  41bd40:	cmp	x1, x24
  41bd44:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bd48:	cmp	x24, x2
  41bd4c:	b.gt	41ba98 <wcrtomb@plt+0x19178>
  41bd50:	mul	x24, x0, x24
  41bd54:	cmp	x1, x24
  41bd58:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bd5c:	cmp	x2, x24
  41bd60:	b.lt	41ba98 <wcrtomb@plt+0x19178>  // b.tstop
  41bd64:	mul	x24, x0, x24
  41bd68:	mov	w0, #0x0                   	// #0
  41bd6c:	orr	w25, w25, w0
  41bd70:	b	41ba00 <wcrtomb@plt+0x190e0>
  41bd74:	mov	x24, x1
  41bd78:	mov	w25, #0x1                   	// #1
  41bd7c:	b	41b924 <wcrtomb@plt+0x19004>
  41bd80:	mov	w0, #0x1                   	// #1
  41bd84:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
  41bd88:	orr	w25, w25, w0
  41bd8c:	b	41ba00 <wcrtomb@plt+0x190e0>
  41bd90:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41bd94:	mov	x0, #0x400                 	// #1024
  41bd98:	cmp	x1, x24
  41bd9c:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bda0:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41bda4:	udiv	x3, x4, x0
  41bda8:	cmp	x3, x24
  41bdac:	b.lt	41bf0c <wcrtomb@plt+0x195ec>  // b.tstop
  41bdb0:	mul	x2, x0, x24
  41bdb4:	cmp	x1, x2
  41bdb8:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bdbc:	cmp	x2, x3
  41bdc0:	b.gt	41bf0c <wcrtomb@plt+0x195ec>
  41bdc4:	mul	x2, x0, x2
  41bdc8:	cmp	x1, x2
  41bdcc:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bdd0:	cmp	x2, x3
  41bdd4:	b.gt	41bf0c <wcrtomb@plt+0x195ec>
  41bdd8:	mul	x2, x0, x2
  41bddc:	cmp	x1, x2
  41bde0:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bde4:	cmp	x2, x3
  41bde8:	b.gt	41bf0c <wcrtomb@plt+0x195ec>
  41bdec:	mul	x2, x0, x2
  41bdf0:	cmp	x1, x2
  41bdf4:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41bdf8:	cmp	x2, x3
  41bdfc:	b.gt	41bbb8 <wcrtomb@plt+0x19298>
  41be00:	mul	x2, x0, x2
  41be04:	cmp	x1, x2
  41be08:	b.gt	41bd80 <wcrtomb@plt+0x19460>
  41be0c:	mov	x24, x4
  41be10:	cmp	x2, x3
  41be14:	b.le	41b9e4 <wcrtomb@plt+0x190c4>
  41be18:	mov	w0, #0x1                   	// #1
  41be1c:	b	41b9fc <wcrtomb@plt+0x190dc>
  41be20:	mov	x21, #0x1                   	// #1
  41be24:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41be28:	mov	x0, #0x400                 	// #1024
  41be2c:	b	41ba68 <wcrtomb@plt+0x19148>
  41be30:	mov	x1, #0xac09                	// #44041
  41be34:	mov	x0, #0x3e8                 	// #1000
  41be38:	movk	x1, #0x5a1c, lsl #16
  41be3c:	mov	x21, #0x2                   	// #2
  41be40:	movk	x1, #0x3b64, lsl #32
  41be44:	movk	x1, #0xffdf, lsl #48
  41be48:	b	41b8d4 <wcrtomb@plt+0x18fb4>
  41be4c:	cmp	w20, #0x74
  41be50:	b.eq	41bd04 <wcrtomb@plt+0x193e4>  // b.none
  41be54:	cmp	w20, #0x77
  41be58:	mov	x21, #0x1                   	// #1
  41be5c:	b.eq	41ba38 <wcrtomb@plt+0x19118>  // b.none
  41be60:	cmp	w20, #0x6d
  41be64:	b.ne	41bbd8 <wcrtomb@plt+0x192b8>  // b.any
  41be68:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41be6c:	mov	x0, #0x400                 	// #1024
  41be70:	b	41bac0 <wcrtomb@plt+0x191a0>
  41be74:	cmp	w20, #0x42
  41be78:	mov	x21, #0x1                   	// #1
  41be7c:	b.eq	41bb28 <wcrtomb@plt+0x19208>  // b.none
  41be80:	orr	w25, w25, #0x2
  41be84:	b	41b850 <wcrtomb@plt+0x18f30>
  41be88:	cmp	w20, #0x6b
  41be8c:	b.eq	41bf30 <wcrtomb@plt+0x19610>  // b.none
  41be90:	b.hi	41be4c <wcrtomb@plt+0x1952c>  // b.pmore
  41be94:	cmp	w20, #0x63
  41be98:	b.eq	41bf28 <wcrtomb@plt+0x19608>  // b.none
  41be9c:	cmp	w20, #0x67
  41bea0:	b.eq	41be20 <wcrtomb@plt+0x19500>  // b.none
  41bea4:	cmp	w20, #0x62
  41bea8:	mov	x21, #0x1                   	// #1
  41beac:	b.eq	41bb00 <wcrtomb@plt+0x191e0>  // b.none
  41beb0:	orr	w25, w25, #0x2
  41beb4:	b	41b850 <wcrtomb@plt+0x18f30>
  41beb8:	cmp	w20, #0x54
  41bebc:	b.eq	41bd04 <wcrtomb@plt+0x193e4>  // b.none
  41bec0:	cmp	w20, #0x59
  41bec4:	b.ne	41bef4 <wcrtomb@plt+0x195d4>  // b.any
  41bec8:	mov	x21, #0x1                   	// #1
  41becc:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41bed0:	mov	x0, #0x400                 	// #1024
  41bed4:	b	41b950 <wcrtomb@plt+0x19030>
  41bed8:	ldrb	w3, [x26, #2]
  41bedc:	mov	x2, #0x3                   	// #3
  41bee0:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41bee4:	mov	x0, #0x400                 	// #1024
  41bee8:	cmp	w3, #0x42
  41beec:	csel	x21, x21, x2, ne  // ne = any
  41bef0:	b	41b8d4 <wcrtomb@plt+0x18fb4>
  41bef4:	cmp	w20, #0x50
  41bef8:	b.ne	41bbd8 <wcrtomb@plt+0x192b8>  // b.any
  41befc:	mov	x21, #0x1                   	// #1
  41bf00:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41bf04:	mov	x0, #0x400                 	// #1024
  41bf08:	b	41bb50 <wcrtomb@plt+0x19230>
  41bf0c:	mov	w0, #0x1                   	// #1
  41bf10:	mov	x24, x4
  41bf14:	orr	w25, w25, w0
  41bf18:	b	41ba00 <wcrtomb@plt+0x190e0>
  41bf1c:	mov	w25, #0x1                   	// #1
  41bf20:	mov	x24, #0x7fffffffffffffff    	// #9223372036854775807
  41bf24:	b	41b924 <wcrtomb@plt+0x19004>
  41bf28:	mov	x21, #0x1                   	// #1
  41bf2c:	b	41b924 <wcrtomb@plt+0x19004>
  41bf30:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41bf34:	mov	x0, #0x400                 	// #1024
  41bf38:	b	41b908 <wcrtomb@plt+0x18fe8>
  41bf3c:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x13510>
  41bf40:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41bf44:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x13510>
  41bf48:	add	x3, x3, #0x450
  41bf4c:	add	x1, x1, #0x418
  41bf50:	add	x0, x0, #0x428
  41bf54:	mov	w2, #0x54                  	// #84
  41bf58:	bl	402880 <__assert_fail@plt>
  41bf5c:	nop
  41bf60:	stp	x29, x30, [sp, #-16]!
  41bf64:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x13510>
  41bf68:	add	x0, x0, #0x460
  41bf6c:	mov	x29, sp
  41bf70:	bl	4028a0 <getenv@plt>
  41bf74:	mov	w1, #0x0                   	// #0
  41bf78:	cbz	x0, 41bf90 <wcrtomb@plt+0x19670>
  41bf7c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41bf80:	add	x1, x1, #0x468
  41bf84:	bl	402690 <strcmp@plt>
  41bf88:	cmp	w0, #0x0
  41bf8c:	cset	w1, ne  // ne = any
  41bf90:	mov	w0, w1
  41bf94:	ldp	x29, x30, [sp], #16
  41bf98:	ret
  41bf9c:	nop
  41bfa0:	ret
  41bfa4:	nop
  41bfa8:	b	402870 <printf@plt>
  41bfac:	nop
  41bfb0:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x2a510>
  41bfb4:	ldr	x1, [x1, #1112]
  41bfb8:	b	402310 <fputs@plt>
  41bfbc:	nop
  41bfc0:	ldr	x3, [x0, #8]
  41bfc4:	ldr	x2, [x1, #8]
  41bfc8:	cmp	x3, x2
  41bfcc:	b.eq	41bfd8 <wcrtomb@plt+0x196b8>  // b.none
  41bfd0:	mov	w0, #0x0                   	// #0
  41bfd4:	ret
  41bfd8:	ldr	x2, [x0]
  41bfdc:	ldr	x0, [x1]
  41bfe0:	cmp	x2, x0
  41bfe4:	cset	w0, eq  // eq = none
  41bfe8:	ret
  41bfec:	nop
  41bff0:	ldr	x0, [x0, #8]
  41bff4:	udiv	x2, x0, x1
  41bff8:	msub	x0, x2, x1, x0
  41bffc:	ret
  41c000:	ldr	x0, [x0]
  41c004:	udiv	x2, x0, x1
  41c008:	msub	x0, x2, x1, x0
  41c00c:	ret
  41c010:	ldr	x2, [x0]
  41c014:	ldr	x0, [x1]
  41c018:	cmp	x2, x0
  41c01c:	cset	w0, eq  // eq = none
  41c020:	ret
  41c024:	nop
  41c028:	ldr	x2, [x0]
  41c02c:	mov	w3, #0xffffffff            	// #-1
  41c030:	ldr	x0, [x1]
  41c034:	ldr	x2, [x2, #128]
  41c038:	ldr	x1, [x0, #128]
  41c03c:	cmp	x2, x1
  41c040:	cset	w0, hi  // hi = pmore
  41c044:	csel	w0, w0, w3, cs  // cs = hs, nlast
  41c048:	ret
  41c04c:	nop
  41c050:	stp	x29, x30, [sp, #-48]!
  41c054:	mov	x29, sp
  41c058:	stp	x19, x20, [sp, #16]
  41c05c:	mov	x19, x1
  41c060:	mov	x20, x2
  41c064:	stp	x21, x22, [sp, #32]
  41c068:	mov	x21, x0
  41c06c:	ldr	x1, [x0, #56]
  41c070:	ldr	x0, [x0, #16]
  41c074:	cmp	x1, x2
  41c078:	ldr	x22, [x21, #64]
  41c07c:	b.cs	41c0a4 <wcrtomb@plt+0x19784>  // b.hs, b.nlast
  41c080:	add	x1, x2, #0x28
  41c084:	str	x1, [x21, #56]
  41c088:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
  41c08c:	cmp	x1, x2
  41c090:	b.hi	41c114 <wcrtomb@plt+0x197f4>  // b.pmore
  41c094:	lsl	x1, x1, #3
  41c098:	bl	402550 <realloc@plt>
  41c09c:	cbz	x0, 41c110 <wcrtomb@plt+0x197f0>
  41c0a0:	str	x0, [x21, #16]
  41c0a4:	mov	x1, x0
  41c0a8:	cbz	x19, 41c0bc <wcrtomb@plt+0x1979c>
  41c0ac:	nop
  41c0b0:	str	x19, [x1], #8
  41c0b4:	ldr	x19, [x19, #16]
  41c0b8:	cbnz	x19, 41c0b0 <wcrtomb@plt+0x19790>
  41c0bc:	mov	x3, x22
  41c0c0:	mov	x1, x20
  41c0c4:	mov	x2, #0x8                   	// #8
  41c0c8:	bl	402380 <qsort@plt>
  41c0cc:	ldr	x2, [x21, #16]
  41c0d0:	subs	x3, x20, #0x1
  41c0d4:	mov	x1, x2
  41c0d8:	ldr	x0, [x2]
  41c0dc:	b.eq	41c134 <wcrtomb@plt+0x19814>  // b.none
  41c0e0:	ldr	x4, [x1]
  41c0e4:	subs	x3, x3, #0x1
  41c0e8:	ldr	x5, [x1, #8]!
  41c0ec:	str	x5, [x4, #16]
  41c0f0:	b.ne	41c0e0 <wcrtomb@plt+0x197c0>  // b.any
  41c0f4:	add	x20, x2, x20, lsl #3
  41c0f8:	ldur	x1, [x20, #-8]
  41c0fc:	str	xzr, [x1, #16]
  41c100:	ldp	x19, x20, [sp, #16]
  41c104:	ldp	x21, x22, [sp, #32]
  41c108:	ldp	x29, x30, [sp], #48
  41c10c:	ret
  41c110:	ldr	x0, [x21, #16]
  41c114:	bl	4026b0 <free@plt>
  41c118:	str	xzr, [x21, #16]
  41c11c:	mov	x0, x19
  41c120:	str	xzr, [x21, #56]
  41c124:	ldp	x19, x20, [sp, #16]
  41c128:	ldp	x21, x22, [sp, #32]
  41c12c:	ldp	x29, x30, [sp], #48
  41c130:	ret
  41c134:	mov	x1, x0
  41c138:	b	41c0fc <wcrtomb@plt+0x197dc>
  41c13c:	nop
  41c140:	stp	x29, x30, [sp, #-48]!
  41c144:	and	w3, w3, #0xff
  41c148:	mov	x29, sp
  41c14c:	ldr	x5, [x2, #88]
  41c150:	stp	x19, x20, [sp, #16]
  41c154:	ldr	w4, [x1]
  41c158:	str	x21, [sp, #32]
  41c15c:	mov	x19, x2
  41c160:	mov	x21, x1
  41c164:	add	x20, x2, #0x78
  41c168:	ldr	x1, [x2, #48]
  41c16c:	cbnz	x5, 41c1c4 <wcrtomb@plt+0x198a4>
  41c170:	tbz	w4, #0, 41c1c4 <wcrtomb@plt+0x198a4>
  41c174:	mov	x2, x20
  41c178:	mov	w0, #0x0                   	// #0
  41c17c:	bl	4028b0 <__xstat@plt>
  41c180:	cbz	w0, 41c1ec <wcrtomb@plt+0x198cc>
  41c184:	bl	402890 <__errno_location@plt>
  41c188:	mov	x21, x0
  41c18c:	ldr	w0, [x0]
  41c190:	cmp	w0, #0x2
  41c194:	b.ne	41c22c <wcrtomb@plt+0x1990c>  // b.any
  41c198:	ldr	x1, [x19, #48]
  41c19c:	mov	x2, x20
  41c1a0:	mov	w0, #0x0                   	// #0
  41c1a4:	bl	402750 <__lxstat@plt>
  41c1a8:	cbnz	w0, 41c2d0 <wcrtomb@plt+0x199b0>
  41c1ac:	str	wzr, [x21]
  41c1b0:	mov	w0, #0xd                   	// #13
  41c1b4:	ldp	x19, x20, [sp, #16]
  41c1b8:	ldr	x21, [sp, #32]
  41c1bc:	ldp	x29, x30, [sp], #48
  41c1c0:	ret
  41c1c4:	tst	x4, #0x2
  41c1c8:	ccmp	w3, #0x0, #0x0, eq  // eq = none
  41c1cc:	b.ne	41c174 <wcrtomb@plt+0x19854>  // b.any
  41c1d0:	mov	x2, x1
  41c1d4:	mov	x3, x20
  41c1d8:	mov	w1, w0
  41c1dc:	mov	w4, #0x100                 	// #256
  41c1e0:	mov	w0, #0x0                   	// #0
  41c1e4:	bl	402910 <__fxstatat@plt>
  41c1e8:	cbnz	w0, 41c224 <wcrtomb@plt+0x19904>
  41c1ec:	ldr	w0, [x20, #16]
  41c1f0:	and	w0, w0, #0xf000
  41c1f4:	cmp	w0, #0x4, lsl #12
  41c1f8:	b.eq	41c264 <wcrtomb@plt+0x19944>  // b.none
  41c1fc:	cmp	w0, #0xa, lsl #12
  41c200:	b.eq	41c2e0 <wcrtomb@plt+0x199c0>  // b.none
  41c204:	cmp	w0, #0x8, lsl #12
  41c208:	mov	w1, #0x8                   	// #8
  41c20c:	mov	w0, #0x3                   	// #3
  41c210:	csel	w0, w0, w1, ne  // ne = any
  41c214:	ldp	x19, x20, [sp, #16]
  41c218:	ldr	x21, [sp, #32]
  41c21c:	ldp	x29, x30, [sp], #48
  41c220:	ret
  41c224:	bl	402890 <__errno_location@plt>
  41c228:	ldr	w0, [x0]
  41c22c:	str	w0, [x19, #64]
  41c230:	mov	w0, #0xa                   	// #10
  41c234:	stp	xzr, xzr, [x19, #120]
  41c238:	stp	xzr, xzr, [x20, #16]
  41c23c:	stp	xzr, xzr, [x20, #32]
  41c240:	stp	xzr, xzr, [x20, #48]
  41c244:	stp	xzr, xzr, [x20, #64]
  41c248:	stp	xzr, xzr, [x20, #80]
  41c24c:	stp	xzr, xzr, [x20, #96]
  41c250:	stp	xzr, xzr, [x20, #112]
  41c254:	ldp	x19, x20, [sp, #16]
  41c258:	ldr	x21, [sp, #32]
  41c25c:	ldp	x29, x30, [sp], #48
  41c260:	ret
  41c264:	ldr	w1, [x20, #20]
  41c268:	cmp	w1, #0x1
  41c26c:	b.ls	41c2d8 <wcrtomb@plt+0x199b8>  // b.plast
  41c270:	ldr	x0, [x19, #88]
  41c274:	cmp	x0, #0x0
  41c278:	b.le	41c2d8 <wcrtomb@plt+0x199b8>
  41c27c:	ldr	w2, [x21]
  41c280:	sub	w0, w1, #0x2
  41c284:	tst	x2, #0x20
  41c288:	csel	w1, w0, w1, eq  // eq = none
  41c28c:	ldrb	w2, [x19, #248]
  41c290:	mov	w0, #0x1                   	// #1
  41c294:	str	w1, [x19, #104]
  41c298:	cmp	w2, #0x2e
  41c29c:	b.ne	41c214 <wcrtomb@plt+0x198f4>  // b.any
  41c2a0:	ldrb	w1, [x19, #249]
  41c2a4:	cbz	w1, 41c2bc <wcrtomb@plt+0x1999c>
  41c2a8:	ldr	w1, [x19, #248]
  41c2ac:	mov	w2, #0x2e00                	// #11776
  41c2b0:	and	w1, w1, #0xffff00
  41c2b4:	cmp	w1, w2
  41c2b8:	b.ne	41c214 <wcrtomb@plt+0x198f4>  // b.any
  41c2bc:	ldr	x1, [x19, #88]
  41c2c0:	mov	w0, #0x5                   	// #5
  41c2c4:	cmp	x1, #0x0
  41c2c8:	csinc	w0, w0, wzr, ne  // ne = any
  41c2cc:	b	41c214 <wcrtomb@plt+0x198f4>
  41c2d0:	ldr	w0, [x21]
  41c2d4:	b	41c22c <wcrtomb@plt+0x1990c>
  41c2d8:	mov	w1, #0xffffffff            	// #-1
  41c2dc:	b	41c28c <wcrtomb@plt+0x1996c>
  41c2e0:	mov	w0, #0xc                   	// #12
  41c2e4:	b	41c214 <wcrtomb@plt+0x198f4>
  41c2e8:	stp	x29, x30, [sp, #-48]!
  41c2ec:	mov	w3, #0x102                 	// #258
  41c2f0:	tst	w0, w3
  41c2f4:	mov	x29, sp
  41c2f8:	b.ne	41c330 <wcrtomb@plt+0x19a10>  // b.any
  41c2fc:	ldr	x0, [x2, #8]
  41c300:	cbz	x0, 41c328 <wcrtomb@plt+0x19a08>
  41c304:	ldr	x3, [x0, #88]
  41c308:	tbnz	x3, #63, 41c328 <wcrtomb@plt+0x19a08>
  41c30c:	ldr	x1, [x1]
  41c310:	ldr	x3, [x1, #16]
  41c314:	cbz	x3, 41c374 <wcrtomb@plt+0x19a54>
  41c318:	ldr	x4, [x1]
  41c31c:	ldr	x3, [x2, #128]
  41c320:	cmp	x4, x3
  41c324:	b.eq	41c354 <wcrtomb@plt+0x19a34>  // b.none
  41c328:	ldp	x29, x30, [sp], #48
  41c32c:	ret
  41c330:	ldr	x0, [x1]
  41c334:	add	x1, sp, #0x10
  41c338:	ldur	q0, [x2, #120]
  41c33c:	str	q0, [sp, #16]
  41c340:	bl	416df8 <wcrtomb@plt+0x144d8>
  41c344:	cbz	x0, 41c374 <wcrtomb@plt+0x19a54>
  41c348:	bl	4026b0 <free@plt>
  41c34c:	ldp	x29, x30, [sp], #48
  41c350:	ret
  41c354:	ldr	x3, [x1, #8]
  41c358:	ldr	x2, [x2, #120]
  41c35c:	cmp	x3, x2
  41c360:	b.ne	41c328 <wcrtomb@plt+0x19a08>  // b.any
  41c364:	ldur	q0, [x0, #120]
  41c368:	ext	v0.16b, v0.16b, v0.16b, #8
  41c36c:	str	q0, [x1]
  41c370:	b	41c328 <wcrtomb@plt+0x19a08>
  41c374:	bl	4025f0 <abort@plt>
  41c378:	stp	x29, x30, [sp, #-48]!
  41c37c:	mov	x29, sp
  41c380:	stp	x19, x20, [sp, #16]
  41c384:	mov	x19, x0
  41c388:	add	x20, x0, #0x60
  41c38c:	ldr	w0, [x0, #72]
  41c390:	str	x21, [sp, #32]
  41c394:	mov	w21, #0x0                   	// #0
  41c398:	tbnz	w0, #2, 41c3e0 <wcrtomb@plt+0x19ac0>
  41c39c:	tbz	w0, #9, 41c414 <wcrtomb@plt+0x19af4>
  41c3a0:	ldr	w1, [x19, #44]
  41c3a4:	and	w21, w0, #0x4
  41c3a8:	mov	x0, x20
  41c3ac:	bl	42ed20 <_obstack_memory_used@@Base+0x10230>
  41c3b0:	tbz	w0, #31, 41c428 <wcrtomb@plt+0x19b08>
  41c3b4:	mov	w0, #0xffffff9c            	// #-100
  41c3b8:	str	w0, [x19, #44]
  41c3bc:	mov	x0, x20
  41c3c0:	bl	42ed18 <_obstack_memory_used@@Base+0x10228>
  41c3c4:	mov	w1, w0
  41c3c8:	mov	x0, x20
  41c3cc:	tst	w1, #0xff
  41c3d0:	b.ne	41c3f8 <wcrtomb@plt+0x19ad8>  // b.any
  41c3d4:	nop
  41c3d8:	bl	42ed68 <_obstack_memory_used@@Base+0x10278>
  41c3dc:	tbz	w0, #31, 41c40c <wcrtomb@plt+0x19aec>
  41c3e0:	mov	x0, x20
  41c3e4:	bl	42ed18 <_obstack_memory_used@@Base+0x10228>
  41c3e8:	mov	w1, w0
  41c3ec:	mov	x0, x20
  41c3f0:	tst	w1, #0xff
  41c3f4:	b.eq	41c3d8 <wcrtomb@plt+0x19ab8>  // b.none
  41c3f8:	mov	w0, w21
  41c3fc:	ldp	x19, x20, [sp, #16]
  41c400:	ldr	x21, [sp, #32]
  41c404:	ldp	x29, x30, [sp], #48
  41c408:	ret
  41c40c:	bl	402580 <close@plt>
  41c410:	b	41c3e0 <wcrtomb@plt+0x19ac0>
  41c414:	ldr	w0, [x19, #40]
  41c418:	bl	402340 <fchdir@plt>
  41c41c:	cmp	w0, #0x0
  41c420:	cset	w21, ne  // ne = any
  41c424:	b	41c3e0 <wcrtomb@plt+0x19ac0>
  41c428:	bl	402580 <close@plt>
  41c42c:	mov	w0, #0xffffff9c            	// #-100
  41c430:	str	w0, [x19, #44]
  41c434:	b	41c3bc <wcrtomb@plt+0x19a9c>
  41c438:	stp	x29, x30, [sp, #-176]!
  41c43c:	mov	x29, sp
  41c440:	stp	x21, x22, [sp, #32]
  41c444:	ldr	x22, [x0, #80]
  41c448:	stp	x19, x20, [sp, #16]
  41c44c:	mov	x19, x0
  41c450:	ldr	w0, [x22, #72]
  41c454:	tbz	w0, #9, 41c520 <wcrtomb@plt+0x19c00>
  41c458:	ldr	x21, [x22, #80]
  41c45c:	mov	w20, w1
  41c460:	cbz	x21, 41c4d8 <wcrtomb@plt+0x19bb8>
  41c464:	ldr	x2, [x19, #120]
  41c468:	add	x1, sp, #0x38
  41c46c:	mov	x0, x21
  41c470:	str	x2, [sp, #56]
  41c474:	bl	416128 <wcrtomb@plt+0x13808>
  41c478:	cbz	x0, 41c508 <wcrtomb@plt+0x19be8>
  41c47c:	ldr	x20, [x0, #8]
  41c480:	mov	x1, #0x4973                	// #18803
  41c484:	movk	x1, #0x5265, lsl #16
  41c488:	mov	w0, #0x2                   	// #2
  41c48c:	cmp	x20, x1
  41c490:	b.eq	41c524 <wcrtomb@plt+0x19c04>  // b.none
  41c494:	b.le	41c574 <wcrtomb@plt+0x19c54>
  41c498:	mov	x1, #0x5342                	// #21314
  41c49c:	movk	x1, #0x5846, lsl #16
  41c4a0:	cmp	x20, x1
  41c4a4:	b.eq	41c524 <wcrtomb@plt+0x19c04>  // b.none
  41c4a8:	mov	x0, #0x4d42                	// #19778
  41c4ac:	movk	x0, #0xff53, lsl #16
  41c4b0:	cmp	x20, x0
  41c4b4:	b.eq	41c520 <wcrtomb@plt+0x19c00>  // b.none
  41c4b8:	mov	x0, #0x414f                	// #16719
  41c4bc:	movk	x0, #0x5346, lsl #16
  41c4c0:	cmp	x20, x0
  41c4c4:	cset	w0, ne  // ne = any
  41c4c8:	ldp	x19, x20, [sp, #16]
  41c4cc:	ldp	x21, x22, [sp, #32]
  41c4d0:	ldp	x29, x30, [sp], #176
  41c4d4:	ret
  41c4d8:	adrp	x4, 402000 <mbrtowc@plt-0x290>
  41c4dc:	adrp	x3, 41c000 <wcrtomb@plt+0x196e0>
  41c4e0:	add	x4, x4, #0x6b0
  41c4e4:	add	x3, x3, #0x10
  41c4e8:	adrp	x2, 41c000 <wcrtomb@plt+0x196e0>
  41c4ec:	mov	x1, #0x0                   	// #0
  41c4f0:	add	x2, x2, #0x0
  41c4f4:	mov	x0, #0xd                   	// #13
  41c4f8:	bl	416408 <wcrtomb@plt+0x13ae8>
  41c4fc:	str	x0, [x22, #80]
  41c500:	mov	x21, x0
  41c504:	cbnz	x0, 41c464 <wcrtomb@plt+0x19b44>
  41c508:	tbnz	w20, #31, 41c520 <wcrtomb@plt+0x19c00>
  41c50c:	mov	w0, w20
  41c510:	add	x1, sp, #0x38
  41c514:	bl	402500 <fstatfs@plt>
  41c518:	cbz	w0, 41c534 <wcrtomb@plt+0x19c14>
  41c51c:	nop
  41c520:	mov	w0, #0x0                   	// #0
  41c524:	ldp	x19, x20, [sp, #16]
  41c528:	ldp	x21, x22, [sp, #32]
  41c52c:	ldp	x29, x30, [sp], #176
  41c530:	ret
  41c534:	ldr	x20, [sp, #56]
  41c538:	cbz	x21, 41c480 <wcrtomb@plt+0x19b60>
  41c53c:	mov	x0, #0x10                  	// #16
  41c540:	bl	402440 <malloc@plt>
  41c544:	mov	x22, x0
  41c548:	cbz	x0, 41c480 <wcrtomb@plt+0x19b60>
  41c54c:	ldr	x2, [x19, #120]
  41c550:	stp	x2, x20, [x22]
  41c554:	mov	x0, x21
  41c558:	mov	x1, x22
  41c55c:	bl	416be0 <wcrtomb@plt+0x142c0>
  41c560:	cbz	x0, 41c5a4 <wcrtomb@plt+0x19c84>
  41c564:	cmp	x22, x0
  41c568:	b.ne	41c5b4 <wcrtomb@plt+0x19c94>  // b.any
  41c56c:	ldr	x20, [sp, #56]
  41c570:	b	41c480 <wcrtomb@plt+0x19b60>
  41c574:	mov	x0, #0x6969                	// #26985
  41c578:	cmp	x20, x0
  41c57c:	b.eq	41c520 <wcrtomb@plt+0x19c00>  // b.none
  41c580:	mov	x0, #0x9fa0                	// #40864
  41c584:	cmp	x20, x0
  41c588:	b.eq	41c520 <wcrtomb@plt+0x19c00>  // b.none
  41c58c:	cmp	x20, #0x0
  41c590:	cset	w0, ne  // ne = any
  41c594:	ldp	x19, x20, [sp, #16]
  41c598:	ldp	x21, x22, [sp, #32]
  41c59c:	ldp	x29, x30, [sp], #176
  41c5a0:	ret
  41c5a4:	mov	x0, x22
  41c5a8:	bl	4026b0 <free@plt>
  41c5ac:	ldr	x20, [sp, #56]
  41c5b0:	b	41c480 <wcrtomb@plt+0x19b60>
  41c5b4:	bl	4025f0 <abort@plt>
  41c5b8:	stp	x29, x30, [sp, #-208]!
  41c5bc:	mov	x29, sp
  41c5c0:	stp	x19, x20, [sp, #16]
  41c5c4:	mov	x19, x3
  41c5c8:	ldr	w20, [x0, #72]
  41c5cc:	stp	x21, x22, [sp, #32]
  41c5d0:	mov	w22, w2
  41c5d4:	stp	x23, x24, [sp, #48]
  41c5d8:	mov	x24, x0
  41c5dc:	and	w23, w20, #0x4
  41c5e0:	str	x25, [sp, #64]
  41c5e4:	mov	x25, x1
  41c5e8:	cbz	x3, 41c5f8 <wcrtomb@plt+0x19cd8>
  41c5ec:	ldrb	w3, [x3]
  41c5f0:	cmp	w3, #0x2e
  41c5f4:	b.eq	41c660 <wcrtomb@plt+0x19d40>  // b.none
  41c5f8:	cbnz	w23, 41c738 <wcrtomb@plt+0x19e18>
  41c5fc:	mov	w21, w22
  41c600:	tbnz	w22, #31, 41c810 <wcrtomb@plt+0x19ef0>
  41c604:	tbnz	w20, #1, 41c6b0 <wcrtomb@plt+0x19d90>
  41c608:	cbz	x19, 41c618 <wcrtomb@plt+0x19cf8>
  41c60c:	ldrb	w3, [x19]
  41c610:	cmp	w3, #0x2e
  41c614:	b.eq	41c77c <wcrtomb@plt+0x19e5c>  // b.none
  41c618:	tbnz	w20, #9, 41c6f0 <wcrtomb@plt+0x19dd0>
  41c61c:	mov	w0, w21
  41c620:	bl	402340 <fchdir@plt>
  41c624:	mov	w19, w0
  41c628:	tbz	w22, #31, 41c748 <wcrtomb@plt+0x19e28>
  41c62c:	bl	402890 <__errno_location@plt>
  41c630:	mov	x20, x0
  41c634:	mov	w0, w21
  41c638:	ldr	w21, [x20]
  41c63c:	bl	402580 <close@plt>
  41c640:	str	w21, [x20]
  41c644:	mov	w0, w19
  41c648:	ldp	x19, x20, [sp, #16]
  41c64c:	ldp	x21, x22, [sp, #32]
  41c650:	ldp	x23, x24, [sp, #48]
  41c654:	ldr	x25, [sp, #64]
  41c658:	ldp	x29, x30, [sp], #208
  41c65c:	ret
  41c660:	ldrb	w0, [x19, #1]
  41c664:	cmp	w0, #0x2e
  41c668:	b.ne	41c5f8 <wcrtomb@plt+0x19cd8>  // b.any
  41c66c:	ldrb	w0, [x19, #2]
  41c670:	cbnz	w0, 41c5f8 <wcrtomb@plt+0x19cd8>
  41c674:	cbnz	w23, 41c738 <wcrtomb@plt+0x19e18>
  41c678:	tbz	w2, #31, 41c858 <wcrtomb@plt+0x19f38>
  41c67c:	tbnz	w20, #9, 41c794 <wcrtomb@plt+0x19e74>
  41c680:	lsl	w3, w20, #11
  41c684:	mov	w1, #0x4900                	// #18688
  41c688:	and	w3, w3, #0x8000
  41c68c:	movk	w1, #0x8, lsl #16
  41c690:	orr	w1, w3, w1
  41c694:	mov	w23, #0x1                   	// #1
  41c698:	mov	x0, x19
  41c69c:	bl	42ec48 <_obstack_memory_used@@Base+0x10158>
  41c6a0:	mov	w21, w0
  41c6a4:	tbnz	w21, #31, 41c850 <wcrtomb@plt+0x19f30>
  41c6a8:	ldr	w20, [x24, #72]
  41c6ac:	tbz	w20, #1, 41c608 <wcrtomb@plt+0x19ce8>
  41c6b0:	add	x2, sp, #0x50
  41c6b4:	mov	w1, w21
  41c6b8:	mov	w0, #0x0                   	// #0
  41c6bc:	bl	4027d0 <__fxstat@plt>
  41c6c0:	cbnz	w0, 41c770 <wcrtomb@plt+0x19e50>
  41c6c4:	ldr	x0, [sp, #80]
  41c6c8:	ldr	x1, [x25, #120]
  41c6cc:	cmp	x1, x0
  41c6d0:	b.ne	41c764 <wcrtomb@plt+0x19e44>  // b.any
  41c6d4:	ldr	x0, [sp, #88]
  41c6d8:	ldr	x1, [x25, #128]
  41c6dc:	cmp	x1, x0
  41c6e0:	b.ne	41c764 <wcrtomb@plt+0x19e44>  // b.any
  41c6e4:	ldr	w20, [x24, #72]
  41c6e8:	tbz	w20, #9, 41c61c <wcrtomb@plt+0x19cfc>
  41c6ec:	nop
  41c6f0:	ldr	w1, [x24, #44]
  41c6f4:	mov	w0, #0xffffff9c            	// #-100
  41c6f8:	cmp	w1, w21
  41c6fc:	ccmp	w1, w0, #0x4, eq  // eq = none
  41c700:	b.ne	41c868 <wcrtomb@plt+0x19f48>  // b.any
  41c704:	cbz	w23, 41c830 <wcrtomb@plt+0x19f10>
  41c708:	tst	x20, #0x4
  41c70c:	ccmp	w1, #0x0, #0x1, eq  // eq = none
  41c710:	b.ge	41c844 <wcrtomb@plt+0x19f24>  // b.tcont
  41c714:	str	w21, [x24, #44]
  41c718:	mov	w19, #0x0                   	// #0
  41c71c:	mov	w0, w19
  41c720:	ldp	x19, x20, [sp, #16]
  41c724:	ldp	x21, x22, [sp, #32]
  41c728:	ldp	x23, x24, [sp, #48]
  41c72c:	ldr	x25, [sp, #64]
  41c730:	ldp	x29, x30, [sp], #208
  41c734:	ret
  41c738:	tst	x20, #0x200
  41c73c:	mov	w19, #0x0                   	// #0
  41c740:	ccmp	w22, #0x0, #0x1, ne  // ne = any
  41c744:	b.ge	41c7d8 <wcrtomb@plt+0x19eb8>  // b.tcont
  41c748:	mov	w0, w19
  41c74c:	ldp	x19, x20, [sp, #16]
  41c750:	ldp	x21, x22, [sp, #32]
  41c754:	ldp	x23, x24, [sp, #48]
  41c758:	ldr	x25, [sp, #64]
  41c75c:	ldp	x29, x30, [sp], #208
  41c760:	ret
  41c764:	bl	402890 <__errno_location@plt>
  41c768:	mov	w1, #0x2                   	// #2
  41c76c:	str	w1, [x0]
  41c770:	mov	w19, #0xffffffff            	// #-1
  41c774:	tbz	w22, #31, 41c748 <wcrtomb@plt+0x19e28>
  41c778:	b	41c62c <wcrtomb@plt+0x19d0c>
  41c77c:	ldrb	w0, [x19, #1]
  41c780:	cmp	w0, #0x2e
  41c784:	b.ne	41c618 <wcrtomb@plt+0x19cf8>  // b.any
  41c788:	ldrb	w0, [x19, #2]
  41c78c:	cbz	w0, 41c6b0 <wcrtomb@plt+0x19d90>
  41c790:	b	41c618 <wcrtomb@plt+0x19cf8>
  41c794:	add	x21, x24, #0x60
  41c798:	mov	x0, x21
  41c79c:	bl	42ed18 <_obstack_memory_used@@Base+0x10228>
  41c7a0:	tst	w0, #0xff
  41c7a4:	b.eq	41c7e4 <wcrtomb@plt+0x19ec4>  // b.none
  41c7a8:	lsl	w3, w20, #11
  41c7ac:	mov	w1, #0x4900                	// #18688
  41c7b0:	and	w3, w3, #0x8000
  41c7b4:	movk	w1, #0x8, lsl #16
  41c7b8:	orr	w1, w3, w1
  41c7bc:	mov	w23, #0x1                   	// #1
  41c7c0:	ldr	w0, [x24, #44]
  41c7c4:	mov	w2, w1
  41c7c8:	mov	x1, x19
  41c7cc:	bl	417750 <wcrtomb@plt+0x14e30>
  41c7d0:	mov	w21, w0
  41c7d4:	b	41c6a4 <wcrtomb@plt+0x19d84>
  41c7d8:	mov	w0, w22
  41c7dc:	bl	402580 <close@plt>
  41c7e0:	b	41c748 <wcrtomb@plt+0x19e28>
  41c7e4:	mov	x0, x21
  41c7e8:	bl	42ed68 <_obstack_memory_used@@Base+0x10278>
  41c7ec:	ldr	w20, [x24, #72]
  41c7f0:	mov	w21, w0
  41c7f4:	mov	w23, #0x1                   	// #1
  41c7f8:	and	w0, w20, #0x200
  41c7fc:	tbnz	w21, #31, 41c814 <wcrtomb@plt+0x19ef4>
  41c800:	mov	w22, w21
  41c804:	mov	w23, #0x1                   	// #1
  41c808:	tbz	w20, #1, 41c618 <wcrtomb@plt+0x19cf8>
  41c80c:	b	41c6b0 <wcrtomb@plt+0x19d90>
  41c810:	and	w0, w20, #0x200
  41c814:	lsl	w3, w20, #11
  41c818:	mov	w1, #0x4900                	// #18688
  41c81c:	and	w3, w3, #0x8000
  41c820:	movk	w1, #0x8, lsl #16
  41c824:	orr	w1, w3, w1
  41c828:	cbnz	w0, 41c7c0 <wcrtomb@plt+0x19ea0>
  41c82c:	b	41c698 <wcrtomb@plt+0x19d78>
  41c830:	add	x0, x24, #0x60
  41c834:	bl	42ed20 <_obstack_memory_used@@Base+0x10230>
  41c838:	tbnz	w0, #31, 41c714 <wcrtomb@plt+0x19df4>
  41c83c:	bl	402580 <close@plt>
  41c840:	b	41c714 <wcrtomb@plt+0x19df4>
  41c844:	mov	w0, w1
  41c848:	bl	402580 <close@plt>
  41c84c:	b	41c714 <wcrtomb@plt+0x19df4>
  41c850:	mov	w19, #0xffffffff            	// #-1
  41c854:	b	41c748 <wcrtomb@plt+0x19e28>
  41c858:	mov	w21, w2
  41c85c:	mov	w23, #0x1                   	// #1
  41c860:	tbz	w20, #1, 41c610 <wcrtomb@plt+0x19cf0>
  41c864:	b	41c6b0 <wcrtomb@plt+0x19d90>
  41c868:	bl	4025f0 <abort@plt>
  41c86c:	nop
  41c870:	stp	x29, x30, [sp, #-320]!
  41c874:	mov	x29, sp
  41c878:	stp	x21, x22, [sp, #32]
  41c87c:	ldr	x22, [x0]
  41c880:	stp	x27, x28, [sp, #80]
  41c884:	mov	x28, x0
  41c888:	stp	x19, x20, [sp, #16]
  41c88c:	ldr	x0, [x22, #24]
  41c890:	str	w1, [sp, #164]
  41c894:	str	x0, [sp, #168]
  41c898:	cbz	x0, 41cd5c <wcrtomb@plt+0x1a43c>
  41c89c:	bl	402740 <dirfd@plt>
  41c8a0:	str	w0, [sp, #196]
  41c8a4:	tbnz	w0, #31, 41d320 <wcrtomb@plt+0x1aa00>
  41c8a8:	ldr	x0, [x28, #64]
  41c8ac:	stp	x23, x24, [sp, #48]
  41c8b0:	cbz	x0, 41d27c <wcrtomb@plt+0x1a95c>
  41c8b4:	ldr	w0, [x28, #72]
  41c8b8:	mov	x1, #0xffffffffffffffff    	// #-1
  41c8bc:	str	x1, [sp, #144]
  41c8c0:	mov	w1, #0x1                   	// #1
  41c8c4:	str	w1, [sp, #180]
  41c8c8:	ldr	x21, [x22, #72]
  41c8cc:	ldr	x2, [x22, #56]
  41c8d0:	sub	x1, x21, #0x1
  41c8d4:	ldrb	w2, [x2, x1]
  41c8d8:	cmp	w2, #0x2f
  41c8dc:	b.eq	41c8e8 <wcrtomb@plt+0x19fc8>  // b.none
  41c8e0:	mov	x1, x21
  41c8e4:	add	x21, x21, #0x1
  41c8e8:	str	xzr, [sp, #152]
  41c8ec:	tbz	w0, #2, 41c908 <wcrtomb@plt+0x19fe8>
  41c8f0:	ldr	x0, [x28, #32]
  41c8f4:	mov	w2, #0x2f                  	// #47
  41c8f8:	add	x3, x0, x1
  41c8fc:	add	x3, x3, #0x1
  41c900:	strb	w2, [x0, x1]
  41c904:	str	x3, [sp, #152]
  41c908:	ldr	x23, [x28, #48]
  41c90c:	ldr	x0, [x22, #88]
  41c910:	sub	x1, x23, x21
  41c914:	ldr	x24, [x22, #24]
  41c918:	str	x1, [sp, #128]
  41c91c:	add	x1, x0, #0x1
  41c920:	str	x1, [sp, #136]
  41c924:	cbz	x24, 41d41c <wcrtomb@plt+0x1aafc>
  41c928:	stp	x25, x26, [sp, #64]
  41c92c:	bl	402890 <__errno_location@plt>
  41c930:	mov	x20, #0x0                   	// #0
  41c934:	str	x0, [sp, #120]
  41c938:	adrp	x0, 402000 <mbrtowc@plt-0x290>
  41c93c:	add	x0, x0, #0x6b0
  41c940:	str	x0, [sp, #184]
  41c944:	mov	x0, x24
  41c948:	mov	x19, #0x0                   	// #0
  41c94c:	stp	xzr, x22, [sp, #104]
  41c950:	str	wzr, [sp, #160]
  41c954:	str	wzr, [sp, #176]
  41c958:	ldr	x1, [sp, #120]
  41c95c:	str	wzr, [x1]
  41c960:	bl	402540 <readdir@plt>
  41c964:	mov	x25, x0
  41c968:	cbz	x0, 41d144 <wcrtomb@plt+0x1a824>
  41c96c:	ldr	w0, [x28, #72]
  41c970:	tbnz	w0, #5, 41c980 <wcrtomb@plt+0x1a060>
  41c974:	ldrb	w0, [x25, #19]
  41c978:	cmp	w0, #0x2e
  41c97c:	b.eq	41cc58 <wcrtomb@plt+0x1a338>  // b.none
  41c980:	add	x1, x25, #0x13
  41c984:	str	x1, [sp, #96]
  41c988:	mov	x0, x1
  41c98c:	bl	402300 <strlen@plt>
  41c990:	adds	x23, x0, x21
  41c994:	mov	x26, x0
  41c998:	add	x0, x0, #0x100
  41c99c:	cset	x24, cs  // cs = hs, nlast
  41c9a0:	and	x0, x0, #0xfffffffffffffff8
  41c9a4:	bl	402440 <malloc@plt>
  41c9a8:	mov	x27, x0
  41c9ac:	cbz	x0, 41d444 <wcrtomb@plt+0x1ab24>
  41c9b0:	ldr	x1, [sp, #96]
  41c9b4:	add	x22, x0, #0xf8
  41c9b8:	mov	x0, x22
  41c9bc:	mov	x2, x26
  41c9c0:	bl	4022a0 <memcpy@plt>
  41c9c4:	add	x1, x27, x26
  41c9c8:	mov	w0, #0x30000               	// #196608
  41c9cc:	ldr	x7, [x28, #32]
  41c9d0:	strb	wzr, [x1, #248]
  41c9d4:	ldr	x1, [sp, #128]
  41c9d8:	stp	xzr, xzr, [x27, #24]
  41c9dc:	str	xzr, [x27, #40]
  41c9e0:	cmp	x1, x26
  41c9e4:	str	x7, [x27, #56]
  41c9e8:	str	wzr, [x27, #64]
  41c9ec:	str	x28, [x27, #80]
  41c9f0:	str	x26, [x27, #96]
  41c9f4:	stur	w0, [x27, #110]
  41c9f8:	b.ls	41cb10 <wcrtomb@plt+0x1a1f0>  // b.plast
  41c9fc:	cbnz	x24, 41cb70 <wcrtomb@plt+0x1a250>
  41ca00:	ldr	w0, [x28, #72]
  41ca04:	ldr	x1, [x28]
  41ca08:	str	x1, [x27, #8]
  41ca0c:	ldr	x1, [x25]
  41ca10:	str	x23, [x27, #72]
  41ca14:	ldr	x2, [sp, #136]
  41ca18:	str	x2, [x27, #88]
  41ca1c:	str	x1, [x27, #128]
  41ca20:	tbnz	w0, #2, 41cc2c <wcrtomb@plt+0x1a30c>
  41ca24:	str	x22, [x27, #48]
  41ca28:	ldr	x1, [x28, #64]
  41ca2c:	cbz	x1, 41ca34 <wcrtomb@plt+0x1a114>
  41ca30:	tbz	w0, #10, 41cc94 <wcrtomb@plt+0x1a374>
  41ca34:	ldrb	w1, [x25, #18]
  41ca38:	and	w0, w0, #0x18
  41ca3c:	cmp	w0, #0x18
  41ca40:	sub	w0, w1, #0x1
  41ca44:	b.eq	41cc70 <wcrtomb@plt+0x1a350>  // b.none
  41ca48:	mov	w1, #0xb                   	// #11
  41ca4c:	strh	w1, [x27, #108]
  41ca50:	cmp	w0, #0xb
  41ca54:	b.ls	41cc00 <wcrtomb@plt+0x1a2e0>  // b.plast
  41ca58:	mov	x1, #0x2                   	// #2
  41ca5c:	str	wzr, [x27, #136]
  41ca60:	str	x1, [x27, #168]
  41ca64:	str	xzr, [x27, #16]
  41ca68:	cbz	x19, 41cc50 <wcrtomb@plt+0x1a330>
  41ca6c:	ldr	x0, [sp, #104]
  41ca70:	str	x27, [x0, #16]
  41ca74:	mov	x0, #0x2710                	// #10000
  41ca78:	cmp	x20, x0
  41ca7c:	b.eq	41cc18 <wcrtomb@plt+0x1a2f8>  // b.none
  41ca80:	ldr	x0, [sp, #144]
  41ca84:	add	x20, x20, #0x1
  41ca88:	cmp	x20, x0
  41ca8c:	b.cs	41caa0 <wcrtomb@plt+0x1a180>  // b.hs, b.nlast
  41ca90:	str	x27, [sp, #104]
  41ca94:	ldr	x0, [sp, #112]
  41ca98:	ldr	x0, [x0, #24]
  41ca9c:	cbnz	x0, 41c958 <wcrtomb@plt+0x1a038>
  41caa0:	ldr	x22, [sp, #112]
  41caa4:	ldr	w0, [sp, #160]
  41caa8:	cbnz	w0, 41d188 <wcrtomb@plt+0x1a868>
  41caac:	ldr	w0, [x28, #72]
  41cab0:	tbnz	w0, #2, 41cff8 <wcrtomb@plt+0x1a6d8>
  41cab4:	ldp	x25, x26, [sp, #64]
  41cab8:	ldr	x0, [sp, #168]
  41cabc:	cmp	x0, #0x0
  41cac0:	ldr	w0, [sp, #180]
  41cac4:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41cac8:	b.eq	41cf90 <wcrtomb@plt+0x1a670>  // b.none
  41cacc:	ldr	w0, [sp, #164]
  41cad0:	cmp	x20, #0x0
  41cad4:	ccmp	w0, #0x1, #0x4, ne  // ne = any
  41cad8:	b.eq	41d024 <wcrtomb@plt+0x1a704>  // b.none
  41cadc:	ldr	w0, [sp, #176]
  41cae0:	cbnz	w0, 41d230 <wcrtomb@plt+0x1a910>
  41cae4:	ldr	x0, [x28, #64]
  41cae8:	cmp	x0, #0x0
  41caec:	ccmp	x20, #0x1, #0x4, ne  // ne = any
  41caf0:	b.ne	41d02c <wcrtomb@plt+0x1a70c>  // b.any
  41caf4:	mov	x0, x19
  41caf8:	ldp	x19, x20, [sp, #16]
  41cafc:	ldp	x21, x22, [sp, #32]
  41cb00:	ldp	x23, x24, [sp, #48]
  41cb04:	ldp	x27, x28, [sp, #80]
  41cb08:	ldp	x29, x30, [sp], #320
  41cb0c:	ret
  41cb10:	ldr	x0, [x28, #48]
  41cb14:	add	x1, x0, #0x101
  41cb18:	add	x1, x1, x23
  41cb1c:	cmp	x0, x1
  41cb20:	b.hi	41ccb0 <wcrtomb@plt+0x1a390>  // b.pmore
  41cb24:	str	x1, [x28, #48]
  41cb28:	mov	x0, x7
  41cb2c:	str	x7, [sp, #96]
  41cb30:	bl	402550 <realloc@plt>
  41cb34:	ldr	x7, [sp, #96]
  41cb38:	cbz	x0, 41d450 <wcrtomb@plt+0x1ab30>
  41cb3c:	str	x0, [x28, #32]
  41cb40:	cmp	x7, x0
  41cb44:	b.eq	41cb60 <wcrtomb@plt+0x1a240>  // b.none
  41cb48:	ldr	w1, [x28, #72]
  41cb4c:	mov	w2, #0x1                   	// #1
  41cb50:	str	w2, [sp, #160]
  41cb54:	tbz	w1, #2, 41cb60 <wcrtomb@plt+0x1a240>
  41cb58:	add	x0, x0, x21
  41cb5c:	str	x0, [sp, #152]
  41cb60:	ldr	x0, [x28, #48]
  41cb64:	sub	x0, x0, x21
  41cb68:	str	x0, [sp, #128]
  41cb6c:	cbz	x24, 41ca00 <wcrtomb@plt+0x1a0e0>
  41cb70:	mov	x0, x27
  41cb74:	ldr	x22, [sp, #112]
  41cb78:	bl	4026b0 <free@plt>
  41cb7c:	cbz	x19, 41cbb0 <wcrtomb@plt+0x1a290>
  41cb80:	ldp	x20, x0, [x19, #16]
  41cb84:	cbz	x0, 41cba4 <wcrtomb@plt+0x1a284>
  41cb88:	bl	402570 <closedir@plt>
  41cb8c:	mov	x0, x19
  41cb90:	bl	4026b0 <free@plt>
  41cb94:	cbz	x20, 41cbb0 <wcrtomb@plt+0x1a290>
  41cb98:	mov	x19, x20
  41cb9c:	ldp	x20, x0, [x19, #16]
  41cba0:	cbnz	x0, 41cb88 <wcrtomb@plt+0x1a268>
  41cba4:	mov	x0, x19
  41cba8:	bl	4026b0 <free@plt>
  41cbac:	cbnz	x20, 41cb98 <wcrtomb@plt+0x1a278>
  41cbb0:	ldr	x0, [x22, #24]
  41cbb4:	mov	x19, #0x0                   	// #0
  41cbb8:	bl	402570 <closedir@plt>
  41cbbc:	mov	w1, #0x7                   	// #7
  41cbc0:	ldr	w0, [x28, #72]
  41cbc4:	ldp	x23, x24, [sp, #48]
  41cbc8:	orr	w0, w0, #0x2000
  41cbcc:	ldp	x25, x26, [sp, #64]
  41cbd0:	strh	w1, [x22, #108]
  41cbd4:	ldr	x1, [sp, #120]
  41cbd8:	str	xzr, [x22, #24]
  41cbdc:	str	w0, [x28, #72]
  41cbe0:	mov	w0, #0x24                  	// #36
  41cbe4:	ldp	x21, x22, [sp, #32]
  41cbe8:	str	w0, [x1]
  41cbec:	mov	x0, x19
  41cbf0:	ldp	x19, x20, [sp, #16]
  41cbf4:	ldp	x27, x28, [sp, #80]
  41cbf8:	ldp	x29, x30, [sp], #320
  41cbfc:	ret
  41cc00:	mov	x1, #0x2                   	// #2
  41cc04:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x13510>
  41cc08:	add	x2, x2, #0x478
  41cc0c:	ldr	w0, [x2, w0, uxtw #2]
  41cc10:	str	w0, [x27, #136]
  41cc14:	b	41ca60 <wcrtomb@plt+0x1a140>
  41cc18:	ldr	x0, [x28, #64]
  41cc1c:	cbz	x0, 41ce4c <wcrtomb@plt+0x1a52c>
  41cc20:	mov	x20, #0x2711                	// #10001
  41cc24:	str	x27, [sp, #104]
  41cc28:	b	41ca94 <wcrtomb@plt+0x1a174>
  41cc2c:	ldr	x4, [x27, #56]
  41cc30:	mov	x1, x22
  41cc34:	ldr	x0, [sp, #152]
  41cc38:	str	x4, [x27, #48]
  41cc3c:	ldr	x2, [x27, #96]
  41cc40:	add	x2, x2, #0x1
  41cc44:	bl	4022c0 <memmove@plt>
  41cc48:	ldr	w0, [x28, #72]
  41cc4c:	b	41ca28 <wcrtomb@plt+0x1a108>
  41cc50:	mov	x19, x27
  41cc54:	b	41ca74 <wcrtomb@plt+0x1a154>
  41cc58:	ldrb	w0, [x25, #20]
  41cc5c:	cbz	w0, 41ca94 <wcrtomb@plt+0x1a174>
  41cc60:	ldrh	w0, [x25, #20]
  41cc64:	cmp	w0, #0x2e
  41cc68:	b.ne	41c980 <wcrtomb@plt+0x1a060>  // b.any
  41cc6c:	b	41ca94 <wcrtomb@plt+0x1a174>
  41cc70:	and	w1, w1, #0xfffffffb
  41cc74:	cbz	w1, 41ca48 <wcrtomb@plt+0x1a128>
  41cc78:	mov	w1, #0xb                   	// #11
  41cc7c:	strh	w1, [x27, #108]
  41cc80:	cmp	w0, #0xb
  41cc84:	mov	x1, #0x1                   	// #1
  41cc88:	b.ls	41cc04 <wcrtomb@plt+0x1a2e4>  // b.plast
  41cc8c:	str	wzr, [x27, #136]
  41cc90:	b	41ca60 <wcrtomb@plt+0x1a140>
  41cc94:	ldr	w0, [x28, #44]
  41cc98:	mov	x2, x27
  41cc9c:	add	x1, x28, #0x48
  41cca0:	mov	w3, #0x0                   	// #0
  41cca4:	bl	41c140 <wcrtomb@plt+0x19820>
  41cca8:	strh	w0, [x27, #108]
  41ccac:	b	41ca64 <wcrtomb@plt+0x1a144>
  41ccb0:	mov	x0, x7
  41ccb4:	ldr	x22, [sp, #112]
  41ccb8:	bl	4026b0 <free@plt>
  41ccbc:	ldr	x1, [sp, #120]
  41ccc0:	mov	w0, #0x24                  	// #36
  41ccc4:	mov	w21, w0
  41ccc8:	str	xzr, [x28, #32]
  41cccc:	str	w0, [x1]
  41ccd0:	mov	x0, x27
  41ccd4:	bl	4026b0 <free@plt>
  41ccd8:	cbz	x19, 41cd10 <wcrtomb@plt+0x1a3f0>
  41ccdc:	ldp	x20, x0, [x19, #16]
  41cce0:	cbz	x0, 41cd04 <wcrtomb@plt+0x1a3e4>
  41cce4:	nop
  41cce8:	bl	402570 <closedir@plt>
  41ccec:	mov	x0, x19
  41ccf0:	bl	4026b0 <free@plt>
  41ccf4:	cbz	x20, 41cd10 <wcrtomb@plt+0x1a3f0>
  41ccf8:	mov	x19, x20
  41ccfc:	ldp	x20, x0, [x19, #16]
  41cd00:	cbnz	x0, 41cce8 <wcrtomb@plt+0x1a3c8>
  41cd04:	mov	x0, x19
  41cd08:	bl	4026b0 <free@plt>
  41cd0c:	cbnz	x20, 41ccf8 <wcrtomb@plt+0x1a3d8>
  41cd10:	ldr	x0, [x22, #24]
  41cd14:	mov	x19, #0x0                   	// #0
  41cd18:	bl	402570 <closedir@plt>
  41cd1c:	ldr	w0, [x28, #72]
  41cd20:	mov	w1, #0x7                   	// #7
  41cd24:	ldp	x23, x24, [sp, #48]
  41cd28:	orr	w0, w0, #0x2000
  41cd2c:	ldp	x25, x26, [sp, #64]
  41cd30:	str	xzr, [x22, #24]
  41cd34:	strh	w1, [x22, #108]
  41cd38:	str	w0, [x28, #72]
  41cd3c:	ldr	x0, [sp, #120]
  41cd40:	str	w21, [x0]
  41cd44:	mov	x0, x19
  41cd48:	ldp	x19, x20, [sp, #16]
  41cd4c:	ldp	x21, x22, [sp, #32]
  41cd50:	ldp	x27, x28, [sp, #80]
  41cd54:	ldp	x29, x30, [sp], #320
  41cd58:	ret
  41cd5c:	ldr	w3, [x28, #72]
  41cd60:	mov	w1, #0x204                 	// #516
  41cd64:	mov	w0, #0xffffff9c            	// #-100
  41cd68:	and	w1, w3, w1
  41cd6c:	cmp	w1, #0x200
  41cd70:	b.ne	41cd78 <wcrtomb@plt+0x1a458>  // b.any
  41cd74:	ldr	w0, [x28, #44]
  41cd78:	and	w2, w3, #0x10
  41cd7c:	ldr	x1, [x22, #48]
  41cd80:	tbz	w3, #4, 41cd8c <wcrtomb@plt+0x1a46c>
  41cd84:	mov	w2, #0x8000                	// #32768
  41cd88:	tbnz	w3, #0, 41d05c <wcrtomb@plt+0x1a73c>
  41cd8c:	add	x3, sp, #0xc4
  41cd90:	bl	42edf8 <_obstack_memory_used@@Base+0x10308>
  41cd94:	str	x0, [x22, #24]
  41cd98:	mov	x19, x0
  41cd9c:	cbz	x0, 41d3e4 <wcrtomb@plt+0x1aac4>
  41cda0:	ldrh	w0, [x22, #108]
  41cda4:	cmp	w0, #0xb
  41cda8:	b.eq	41d298 <wcrtomb@plt+0x1a978>  // b.none
  41cdac:	ldr	w0, [x28, #72]
  41cdb0:	tbnz	w0, #8, 41d070 <wcrtomb@plt+0x1a750>
  41cdb4:	stp	x23, x24, [sp, #48]
  41cdb8:	mov	x0, #0x86a0                	// #34464
  41cdbc:	ldr	x1, [x28, #64]
  41cdc0:	movk	x0, #0x1, lsl #16
  41cdc4:	cmp	x1, #0x0
  41cdc8:	csinv	x0, x0, xzr, eq  // eq = none
  41cdcc:	str	x0, [sp, #144]
  41cdd0:	ldr	w0, [sp, #164]
  41cdd4:	cmp	w0, #0x2
  41cdd8:	b.eq	41d270 <wcrtomb@plt+0x1a950>  // b.none
  41cddc:	ldr	w3, [x28, #72]
  41cde0:	ldr	w0, [sp, #196]
  41cde4:	and	w3, w3, #0x38
  41cde8:	cmp	w3, #0x18
  41cdec:	b.eq	41d0f8 <wcrtomb@plt+0x1a7d8>  // b.none
  41cdf0:	ldr	w1, [sp, #164]
  41cdf4:	cmp	w1, #0x3
  41cdf8:	cset	w19, eq  // eq = none
  41cdfc:	ldr	w1, [x28, #72]
  41ce00:	tbnz	w1, #9, 41d308 <wcrtomb@plt+0x1a9e8>
  41ce04:	tbz	w0, #31, 41d11c <wcrtomb@plt+0x1a7fc>
  41ce08:	cbz	w19, 41ce18 <wcrtomb@plt+0x1a4f8>
  41ce0c:	bl	402890 <__errno_location@plt>
  41ce10:	ldr	w0, [x0]
  41ce14:	str	w0, [x22, #64]
  41ce18:	ldrh	w1, [x22, #110]
  41ce1c:	ldr	x0, [x22, #24]
  41ce20:	orr	w1, w1, #0x1
  41ce24:	strh	w1, [x22, #110]
  41ce28:	bl	402570 <closedir@plt>
  41ce2c:	ldr	w0, [x28, #72]
  41ce30:	str	xzr, [x22, #24]
  41ce34:	tbz	w0, #9, 41ce40 <wcrtomb@plt+0x1a520>
  41ce38:	ldr	w1, [sp, #196]
  41ce3c:	tbz	w1, #31, 41d370 <wcrtomb@plt+0x1aa50>
  41ce40:	str	xzr, [x22, #24]
  41ce44:	str	wzr, [sp, #180]
  41ce48:	b	41c8c8 <wcrtomb@plt+0x19fa8>
  41ce4c:	ldr	x0, [sp, #112]
  41ce50:	ldr	x23, [x0, #80]
  41ce54:	ldr	w0, [x23, #72]
  41ce58:	tbz	w0, #9, 41cf48 <wcrtomb@plt+0x1a628>
  41ce5c:	ldr	x20, [x23, #80]
  41ce60:	ldr	w24, [sp, #196]
  41ce64:	cbz	x20, 41cec4 <wcrtomb@plt+0x1a5a4>
  41ce68:	ldr	x0, [sp, #112]
  41ce6c:	add	x1, sp, #0xc8
  41ce70:	ldr	x0, [x0, #120]
  41ce74:	str	x0, [sp, #200]
  41ce78:	mov	x0, x20
  41ce7c:	bl	416128 <wcrtomb@plt+0x13808>
  41ce80:	cbz	x0, 41cef0 <wcrtomb@plt+0x1a5d0>
  41ce84:	ldr	x23, [x0, #8]
  41ce88:	mov	x0, #0x1994                	// #6548
  41ce8c:	movk	x0, #0x102, lsl #16
  41ce90:	cmp	x23, x0
  41ce94:	b.eq	41ceb4 <wcrtomb@plt+0x1a594>  // b.none
  41ce98:	mov	x0, #0x4d42                	// #19778
  41ce9c:	movk	x0, #0xff53, lsl #16
  41cea0:	cmp	x23, x0
  41cea4:	b.eq	41ceb4 <wcrtomb@plt+0x1a594>  // b.none
  41cea8:	mov	x0, #0x6969                	// #26985
  41ceac:	cmp	x23, x0
  41ceb0:	b.ne	41cf48 <wcrtomb@plt+0x1a628>  // b.any
  41ceb4:	mov	x20, #0x2711                	// #10001
  41ceb8:	str	x27, [sp, #104]
  41cebc:	str	wzr, [sp, #176]
  41cec0:	b	41ca94 <wcrtomb@plt+0x1a174>
  41cec4:	ldr	x4, [sp, #184]
  41cec8:	adrp	x3, 41c000 <wcrtomb@plt+0x196e0>
  41cecc:	adrp	x2, 41c000 <wcrtomb@plt+0x196e0>
  41ced0:	add	x3, x3, #0x10
  41ced4:	add	x2, x2, #0x0
  41ced8:	mov	x1, #0x0                   	// #0
  41cedc:	mov	x0, #0xd                   	// #13
  41cee0:	bl	416408 <wcrtomb@plt+0x13ae8>
  41cee4:	str	x0, [x23, #80]
  41cee8:	mov	x20, x0
  41ceec:	cbnz	x0, 41ce68 <wcrtomb@plt+0x1a548>
  41cef0:	tbnz	w24, #31, 41cf48 <wcrtomb@plt+0x1a628>
  41cef4:	mov	w0, w24
  41cef8:	add	x1, sp, #0xc8
  41cefc:	bl	402500 <fstatfs@plt>
  41cf00:	cbnz	w0, 41cf48 <wcrtomb@plt+0x1a628>
  41cf04:	ldr	x23, [sp, #200]
  41cf08:	cbz	x20, 41ce88 <wcrtomb@plt+0x1a568>
  41cf0c:	mov	x0, #0x10                  	// #16
  41cf10:	bl	402440 <malloc@plt>
  41cf14:	mov	x24, x0
  41cf18:	cbz	x0, 41ce88 <wcrtomb@plt+0x1a568>
  41cf1c:	ldr	x0, [sp, #112]
  41cf20:	ldr	x1, [x0, #120]
  41cf24:	stp	x1, x23, [x24]
  41cf28:	mov	x0, x20
  41cf2c:	mov	x1, x24
  41cf30:	bl	416be0 <wcrtomb@plt+0x142c0>
  41cf34:	cbz	x0, 41d434 <wcrtomb@plt+0x1ab14>
  41cf38:	cmp	x24, x0
  41cf3c:	b.ne	41d46c <wcrtomb@plt+0x1ab4c>  // b.any
  41cf40:	ldr	x23, [sp, #200]
  41cf44:	b	41ce88 <wcrtomb@plt+0x1a568>
  41cf48:	mov	w0, #0x1                   	// #1
  41cf4c:	str	w0, [sp, #176]
  41cf50:	b	41cc20 <wcrtomb@plt+0x1a300>
  41cf54:	ldr	x1, [sp, #168]
  41cf58:	mov	x19, #0x0                   	// #0
  41cf5c:	cmp	x1, #0x0
  41cf60:	ldr	w1, [sp, #180]
  41cf64:	csel	w1, w1, wzr, eq  // eq = none
  41cf68:	cbz	w1, 41cf94 <wcrtomb@plt+0x1a674>
  41cf6c:	mov	x20, #0x0                   	// #0
  41cf70:	str	wzr, [sp, #176]
  41cf74:	nop
  41cf78:	cbnz	x0, 41d2b8 <wcrtomb@plt+0x1a998>
  41cf7c:	mov	x0, x28
  41cf80:	bl	41c378 <wcrtomb@plt+0x19a58>
  41cf84:	cmp	w0, #0x0
  41cf88:	cset	w0, ne  // ne = any
  41cf8c:	cbnz	w0, 41d380 <wcrtomb@plt+0x1aa60>
  41cf90:	cbnz	x20, 41cadc <wcrtomb@plt+0x1a1bc>
  41cf94:	ldr	w0, [sp, #164]
  41cf98:	cmp	w0, #0x3
  41cf9c:	b.eq	41d354 <wcrtomb@plt+0x1aa34>  // b.none
  41cfa0:	cbz	x19, 41cfd8 <wcrtomb@plt+0x1a6b8>
  41cfa4:	ldp	x20, x0, [x19, #16]
  41cfa8:	cbz	x0, 41cfcc <wcrtomb@plt+0x1a6ac>
  41cfac:	nop
  41cfb0:	bl	402570 <closedir@plt>
  41cfb4:	mov	x0, x19
  41cfb8:	bl	4026b0 <free@plt>
  41cfbc:	cbz	x20, 41cfd8 <wcrtomb@plt+0x1a6b8>
  41cfc0:	mov	x19, x20
  41cfc4:	ldp	x20, x0, [x19, #16]
  41cfc8:	cbnz	x0, 41cfb0 <wcrtomb@plt+0x1a690>
  41cfcc:	mov	x0, x19
  41cfd0:	bl	4026b0 <free@plt>
  41cfd4:	cbnz	x20, 41cfc0 <wcrtomb@plt+0x1a6a0>
  41cfd8:	ldp	x23, x24, [sp, #48]
  41cfdc:	mov	x19, #0x0                   	// #0
  41cfe0:	mov	x0, x19
  41cfe4:	ldp	x19, x20, [sp, #16]
  41cfe8:	ldp	x21, x22, [sp, #32]
  41cfec:	ldp	x27, x28, [sp, #80]
  41cff0:	ldp	x29, x30, [sp], #320
  41cff4:	ret
  41cff8:	ldr	x0, [x28, #48]
  41cffc:	cmp	x20, #0x0
  41d000:	ldp	x25, x26, [sp, #64]
  41d004:	ccmp	x0, x21, #0x4, ne  // ne = any
  41d008:	b.ne	41d018 <wcrtomb@plt+0x1a6f8>  // b.any
  41d00c:	ldr	x0, [sp, #152]
  41d010:	sub	x0, x0, #0x1
  41d014:	str	x0, [sp, #152]
  41d018:	ldr	x0, [sp, #152]
  41d01c:	strb	wzr, [x0]
  41d020:	b	41cab8 <wcrtomb@plt+0x1a198>
  41d024:	ldr	x0, [x22, #88]
  41d028:	b	41cf78 <wcrtomb@plt+0x1a658>
  41d02c:	mov	x2, x20
  41d030:	mov	x1, x19
  41d034:	mov	x0, x28
  41d038:	bl	41c050 <wcrtomb@plt+0x19730>
  41d03c:	mov	x19, x0
  41d040:	mov	x0, x19
  41d044:	ldp	x19, x20, [sp, #16]
  41d048:	ldp	x21, x22, [sp, #32]
  41d04c:	ldp	x23, x24, [sp, #48]
  41d050:	ldp	x27, x28, [sp, #80]
  41d054:	ldp	x29, x30, [sp], #320
  41d058:	ret
  41d05c:	ldr	x2, [x22, #88]
  41d060:	cmp	x2, #0x0
  41d064:	cset	w2, ne  // ne = any
  41d068:	lsl	w2, w2, #15
  41d06c:	b	41cd8c <wcrtomb@plt+0x1a46c>
  41d070:	mov	x2, x22
  41d074:	add	x1, x28, #0x58
  41d078:	bl	41c2e8 <wcrtomb@plt+0x199c8>
  41d07c:	ldr	w0, [x28, #44]
  41d080:	add	x1, x28, #0x48
  41d084:	mov	x2, x22
  41d088:	mov	w3, #0x0                   	// #0
  41d08c:	bl	41c140 <wcrtomb@plt+0x19820>
  41d090:	ldr	w1, [x28, #72]
  41d094:	mov	w0, #0x102                 	// #258
  41d098:	tst	w1, w0
  41d09c:	b.eq	41d2e0 <wcrtomb@plt+0x1a9c0>  // b.none
  41d0a0:	mov	x0, #0x18                  	// #24
  41d0a4:	bl	402440 <malloc@plt>
  41d0a8:	mov	x19, x0
  41d0ac:	cbz	x0, 41d408 <wcrtomb@plt+0x1aae8>
  41d0b0:	mov	x1, x0
  41d0b4:	ldr	x0, [x28, #88]
  41d0b8:	ldur	q0, [x22, #120]
  41d0bc:	str	x22, [x19, #16]
  41d0c0:	str	q0, [x19]
  41d0c4:	bl	416be0 <wcrtomb@plt+0x142c0>
  41d0c8:	mov	x20, x0
  41d0cc:	cmp	x19, x0
  41d0d0:	b.eq	41cdb4 <wcrtomb@plt+0x1a494>  // b.none
  41d0d4:	mov	x0, x19
  41d0d8:	bl	4026b0 <free@plt>
  41d0dc:	cbz	x20, 41d408 <wcrtomb@plt+0x1aae8>
  41d0e0:	stp	x23, x24, [sp, #48]
  41d0e4:	mov	w0, #0x2                   	// #2
  41d0e8:	ldr	x1, [x20, #16]
  41d0ec:	str	x1, [x22]
  41d0f0:	strh	w0, [x22, #108]
  41d0f4:	b	41cdb8 <wcrtomb@plt+0x1a498>
  41d0f8:	ldr	w1, [x22, #140]
  41d0fc:	cmp	w1, #0x2
  41d100:	b.ne	41cdf0 <wcrtomb@plt+0x1a4d0>  // b.any
  41d104:	mov	w1, w0
  41d108:	mov	x0, x22
  41d10c:	bl	41c438 <wcrtomb@plt+0x19b18>
  41d110:	cbnz	w0, 41d3cc <wcrtomb@plt+0x1aaac>
  41d114:	ldr	w0, [sp, #196]
  41d118:	b	41cdf0 <wcrtomb@plt+0x1a4d0>
  41d11c:	mov	w2, w0
  41d120:	mov	x1, x22
  41d124:	mov	x0, x28
  41d128:	mov	x3, #0x0                   	// #0
  41d12c:	bl	41c5b8 <wcrtomb@plt+0x19c98>
  41d130:	cbnz	w0, 41ce08 <wcrtomb@plt+0x1a4e8>
  41d134:	mov	w0, #0x1                   	// #1
  41d138:	str	w0, [sp, #180]
  41d13c:	ldr	w0, [x28, #72]
  41d140:	b	41c8c8 <wcrtomb@plt+0x19fa8>
  41d144:	ldp	x22, x0, [sp, #112]
  41d148:	ldr	w0, [x0]
  41d14c:	cbz	w0, 41d170 <wcrtomb@plt+0x1a850>
  41d150:	ldr	x1, [sp, #168]
  41d154:	str	w0, [x22, #64]
  41d158:	orr	x2, x1, x20
  41d15c:	mov	w1, #0x4                   	// #4
  41d160:	cmp	x2, #0x0
  41d164:	mov	w2, #0x7                   	// #7
  41d168:	csel	w1, w1, w2, eq  // eq = none
  41d16c:	strh	w1, [x22, #108]
  41d170:	ldr	x0, [x22, #24]
  41d174:	cbz	x0, 41caa4 <wcrtomb@plt+0x1a184>
  41d178:	bl	402570 <closedir@plt>
  41d17c:	str	xzr, [x22, #24]
  41d180:	ldr	w0, [sp, #160]
  41d184:	cbz	w0, 41caac <wcrtomb@plt+0x1a18c>
  41d188:	ldr	x0, [x28, #8]
  41d18c:	ldr	x2, [x28, #32]
  41d190:	cbz	x0, 41d1c0 <wcrtomb@plt+0x1a8a0>
  41d194:	nop
  41d198:	ldr	x1, [x0, #48]
  41d19c:	add	x3, x0, #0xf8
  41d1a0:	cmp	x1, x3
  41d1a4:	b.eq	41d220 <wcrtomb@plt+0x1a900>  // b.none
  41d1a8:	ldr	x3, [x0, #56]
  41d1ac:	sub	x1, x1, x3
  41d1b0:	add	x1, x2, x1
  41d1b4:	stp	x1, x2, [x0, #48]
  41d1b8:	ldr	x0, [x0, #16]
  41d1bc:	cbnz	x0, 41d198 <wcrtomb@plt+0x1a878>
  41d1c0:	ldr	x1, [x19, #88]
  41d1c4:	mov	x0, x19
  41d1c8:	tbnz	x1, #63, 41caac <wcrtomb@plt+0x1a18c>
  41d1cc:	nop
  41d1d0:	ldr	x1, [x0, #48]
  41d1d4:	add	x3, x0, #0xf8
  41d1d8:	cmp	x1, x3
  41d1dc:	b.eq	41d1f0 <wcrtomb@plt+0x1a8d0>  // b.none
  41d1e0:	ldr	x3, [x0, #56]
  41d1e4:	sub	x1, x1, x3
  41d1e8:	add	x1, x2, x1
  41d1ec:	str	x1, [x0, #48]
  41d1f0:	ldr	x1, [x0, #16]
  41d1f4:	str	x2, [x0, #56]
  41d1f8:	cbz	x1, 41d20c <wcrtomb@plt+0x1a8ec>
  41d1fc:	ldr	x0, [x1, #88]
  41d200:	tbnz	x0, #63, 41caac <wcrtomb@plt+0x1a18c>
  41d204:	mov	x0, x1
  41d208:	b	41d1d0 <wcrtomb@plt+0x1a8b0>
  41d20c:	ldr	x1, [x0, #8]
  41d210:	ldr	x0, [x1, #88]
  41d214:	tbnz	x0, #63, 41caac <wcrtomb@plt+0x1a18c>
  41d218:	mov	x0, x1
  41d21c:	b	41d1d0 <wcrtomb@plt+0x1a8b0>
  41d220:	str	x2, [x0, #56]
  41d224:	ldr	x0, [x0, #16]
  41d228:	cbnz	x0, 41d198 <wcrtomb@plt+0x1a878>
  41d22c:	b	41d1c0 <wcrtomb@plt+0x1a8a0>
  41d230:	adrp	x0, 41c000 <wcrtomb@plt+0x196e0>
  41d234:	add	x0, x0, #0x28
  41d238:	str	x0, [x28, #64]
  41d23c:	mov	x2, x20
  41d240:	mov	x1, x19
  41d244:	mov	x0, x28
  41d248:	bl	41c050 <wcrtomb@plt+0x19730>
  41d24c:	mov	x19, x0
  41d250:	ldp	x23, x24, [sp, #48]
  41d254:	str	xzr, [x28, #64]
  41d258:	mov	x0, x19
  41d25c:	ldp	x19, x20, [sp, #16]
  41d260:	ldp	x21, x22, [sp, #32]
  41d264:	ldp	x27, x28, [sp, #80]
  41d268:	ldp	x29, x30, [sp], #320
  41d26c:	ret
  41d270:	ldr	w0, [x28, #72]
  41d274:	str	wzr, [sp, #180]
  41d278:	b	41c8c8 <wcrtomb@plt+0x19fa8>
  41d27c:	mov	x0, #0x86a0                	// #34464
  41d280:	movk	x0, #0x1, lsl #16
  41d284:	str	x0, [sp, #144]
  41d288:	mov	w0, #0x1                   	// #1
  41d28c:	str	w0, [sp, #180]
  41d290:	ldr	w0, [x28, #72]
  41d294:	b	41c8c8 <wcrtomb@plt+0x19fa8>
  41d298:	ldr	w0, [x28, #44]
  41d29c:	mov	x2, x22
  41d2a0:	add	x1, x28, #0x48
  41d2a4:	mov	w3, #0x0                   	// #0
  41d2a8:	stp	x23, x24, [sp, #48]
  41d2ac:	bl	41c140 <wcrtomb@plt+0x19820>
  41d2b0:	strh	w0, [x22, #108]
  41d2b4:	b	41cdb8 <wcrtomb@plt+0x1a498>
  41d2b8:	ldr	x1, [x22, #8]
  41d2bc:	mov	x0, x28
  41d2c0:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x13510>
  41d2c4:	mov	w2, #0xffffffff            	// #-1
  41d2c8:	add	x3, x3, #0x470
  41d2cc:	bl	41c5b8 <wcrtomb@plt+0x19c98>
  41d2d0:	cmp	w0, #0x0
  41d2d4:	cset	w0, ne  // ne = any
  41d2d8:	cbz	w0, 41cf90 <wcrtomb@plt+0x1a670>
  41d2dc:	b	41d380 <wcrtomb@plt+0x1aa60>
  41d2e0:	ldr	x0, [x28, #88]
  41d2e4:	add	x1, x22, #0x78
  41d2e8:	stp	x23, x24, [sp, #48]
  41d2ec:	bl	42eb00 <_obstack_memory_used@@Base+0x10010>
  41d2f0:	tst	w0, #0xff
  41d2f4:	b.eq	41cdb8 <wcrtomb@plt+0x1a498>  // b.none
  41d2f8:	mov	w0, #0x2                   	// #2
  41d2fc:	str	x22, [x22]
  41d300:	strh	w0, [x22, #108]
  41d304:	b	41cdb8 <wcrtomb@plt+0x1a498>
  41d308:	mov	w2, #0x3                   	// #3
  41d30c:	mov	w1, #0x406                 	// #1030
  41d310:	bl	42ef38 <_obstack_memory_used@@Base+0x10448>
  41d314:	str	w0, [sp, #196]
  41d318:	tbnz	w0, #31, 41ce08 <wcrtomb@plt+0x1a4e8>
  41d31c:	b	41d11c <wcrtomb@plt+0x1a7fc>
  41d320:	ldr	x0, [x22, #24]
  41d324:	bl	402570 <closedir@plt>
  41d328:	str	xzr, [x22, #24]
  41d32c:	ldr	w0, [sp, #164]
  41d330:	cmp	w0, #0x3
  41d334:	b.ne	41cfdc <wcrtomb@plt+0x1a6bc>  // b.any
  41d338:	mov	w0, #0x4                   	// #4
  41d33c:	strh	w0, [x22, #108]
  41d340:	mov	x19, #0x0                   	// #0
  41d344:	bl	402890 <__errno_location@plt>
  41d348:	ldr	w0, [x0]
  41d34c:	str	w0, [x22, #64]
  41d350:	b	41cd44 <wcrtomb@plt+0x1a424>
  41d354:	ldrh	w0, [x22, #108]
  41d358:	cmp	w0, #0x7
  41d35c:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  41d360:	b.eq	41cfa0 <wcrtomb@plt+0x1a680>  // b.none
  41d364:	mov	w0, #0x6                   	// #6
  41d368:	strh	w0, [x22, #108]
  41d36c:	b	41cfa0 <wcrtomb@plt+0x1a680>
  41d370:	mov	w0, w1
  41d374:	bl	402580 <close@plt>
  41d378:	ldr	w0, [x28, #72]
  41d37c:	b	41ce40 <wcrtomb@plt+0x1a520>
  41d380:	ldr	w0, [x28, #72]
  41d384:	mov	w1, #0x7                   	// #7
  41d388:	strh	w1, [x22, #108]
  41d38c:	orr	w0, w0, #0x2000
  41d390:	str	w0, [x28, #72]
  41d394:	cbz	x19, 41cfd8 <wcrtomb@plt+0x1a6b8>
  41d398:	ldp	x20, x0, [x19, #16]
  41d39c:	cbz	x0, 41d3b8 <wcrtomb@plt+0x1aa98>
  41d3a0:	bl	402570 <closedir@plt>
  41d3a4:	mov	x0, x19
  41d3a8:	bl	4026b0 <free@plt>
  41d3ac:	cbz	x20, 41cfd8 <wcrtomb@plt+0x1a6b8>
  41d3b0:	mov	x19, x20
  41d3b4:	b	41d398 <wcrtomb@plt+0x1aa78>
  41d3b8:	mov	x0, x19
  41d3bc:	bl	4026b0 <free@plt>
  41d3c0:	cbz	x20, 41cfd8 <wcrtomb@plt+0x1a6b8>
  41d3c4:	mov	x19, x20
  41d3c8:	b	41d398 <wcrtomb@plt+0x1aa78>
  41d3cc:	ldr	w0, [sp, #164]
  41d3d0:	cmp	w0, #0x3
  41d3d4:	b.ne	41d270 <wcrtomb@plt+0x1a950>  // b.any
  41d3d8:	ldr	w0, [sp, #196]
  41d3dc:	mov	w19, #0x0                   	// #0
  41d3e0:	b	41cdfc <wcrtomb@plt+0x1a4dc>
  41d3e4:	ldr	w0, [sp, #164]
  41d3e8:	cmp	w0, #0x3
  41d3ec:	b.ne	41cfdc <wcrtomb@plt+0x1a6bc>  // b.any
  41d3f0:	mov	w0, #0x4                   	// #4
  41d3f4:	strh	w0, [x22, #108]
  41d3f8:	bl	402890 <__errno_location@plt>
  41d3fc:	ldr	w0, [x0]
  41d400:	str	w0, [x22, #64]
  41d404:	b	41cd44 <wcrtomb@plt+0x1a424>
  41d408:	bl	402890 <__errno_location@plt>
  41d40c:	mov	x19, #0x0                   	// #0
  41d410:	mov	w1, #0xc                   	// #12
  41d414:	str	w1, [x0]
  41d418:	b	41cd44 <wcrtomb@plt+0x1a424>
  41d41c:	ldr	w1, [x28, #72]
  41d420:	tbz	w1, #2, 41cf54 <wcrtomb@plt+0x1a634>
  41d424:	mov	x19, #0x0                   	// #0
  41d428:	mov	x20, #0x0                   	// #0
  41d42c:	str	wzr, [sp, #176]
  41d430:	b	41d00c <wcrtomb@plt+0x1a6ec>
  41d434:	mov	x0, x24
  41d438:	bl	4026b0 <free@plt>
  41d43c:	ldr	x23, [sp, #200]
  41d440:	b	41ce88 <wcrtomb@plt+0x1a568>
  41d444:	ldp	x22, x0, [sp, #112]
  41d448:	ldr	w21, [x0]
  41d44c:	b	41ccd0 <wcrtomb@plt+0x1a3b0>
  41d450:	ldr	x0, [x28, #32]
  41d454:	ldr	x22, [sp, #112]
  41d458:	bl	4026b0 <free@plt>
  41d45c:	ldr	x0, [sp, #120]
  41d460:	ldr	w21, [x0]
  41d464:	str	xzr, [x28, #32]
  41d468:	b	41ccd0 <wcrtomb@plt+0x1a3b0>
  41d46c:	bl	4025f0 <abort@plt>
  41d470:	stp	x29, x30, [sp, #-128]!
  41d474:	tst	w1, #0xfffff000
  41d478:	mov	x29, sp
  41d47c:	stp	x19, x20, [sp, #16]
  41d480:	b.ne	41d8b0 <wcrtomb@plt+0x1af90>  // b.any
  41d484:	stp	x23, x24, [sp, #48]
  41d488:	mov	x23, x0
  41d48c:	mov	w0, #0x204                 	// #516
  41d490:	and	w0, w1, w0
  41d494:	mov	w20, w1
  41d498:	cmp	w0, #0x204
  41d49c:	b.eq	41d6d8 <wcrtomb@plt+0x1adb8>  // b.none
  41d4a0:	mov	w0, #0x12                  	// #18
  41d4a4:	tst	w1, w0
  41d4a8:	b.eq	41d6d8 <wcrtomb@plt+0x1adb8>  // b.none
  41d4ac:	mov	x1, #0x80                  	// #128
  41d4b0:	mov	x0, #0x1                   	// #1
  41d4b4:	stp	x25, x26, [sp, #64]
  41d4b8:	mov	x25, x2
  41d4bc:	bl	402520 <calloc@plt>
  41d4c0:	mov	x19, x0
  41d4c4:	cbz	x0, 41d940 <wcrtomb@plt+0x1b020>
  41d4c8:	and	w1, w20, #0xfffffdff
  41d4cc:	tst	x20, #0x2
  41d4d0:	ldr	x0, [x23]
  41d4d4:	orr	w1, w1, #0x4
  41d4d8:	stp	x21, x22, [sp, #32]
  41d4dc:	csel	w1, w20, w1, eq  // eq = none
  41d4e0:	mov	w2, #0xffffff9c            	// #-100
  41d4e4:	str	w2, [x19, #44]
  41d4e8:	str	x25, [x19, #64]
  41d4ec:	str	w1, [x19, #72]
  41d4f0:	cbz	x0, 41d848 <wcrtomb@plt+0x1af28>
  41d4f4:	mov	x22, x23
  41d4f8:	mov	x21, #0x0                   	// #0
  41d4fc:	nop
  41d500:	bl	402300 <strlen@plt>
  41d504:	mov	x2, x0
  41d508:	ldr	x0, [x22, #8]!
  41d50c:	cmp	x21, x2
  41d510:	csel	x21, x21, x2, cs  // cs = hs, nlast
  41d514:	cbnz	x0, 41d500 <wcrtomb@plt+0x1abe0>
  41d518:	add	x21, x21, #0x1
  41d51c:	mov	x0, #0x1000                	// #4096
  41d520:	cmp	x21, x0
  41d524:	csel	x21, x21, x0, cs  // cs = hs, nlast
  41d528:	ldr	x2, [x19, #48]
  41d52c:	ldr	x0, [x19, #32]
  41d530:	add	x1, x2, #0x100
  41d534:	add	x1, x1, x21
  41d538:	cmp	x2, x1
  41d53c:	b.hi	41d89c <wcrtomb@plt+0x1af7c>  // b.pmore
  41d540:	stp	x27, x28, [sp, #80]
  41d544:	str	x1, [x19, #48]
  41d548:	bl	402550 <realloc@plt>
  41d54c:	mov	x21, x0
  41d550:	cbz	x0, 41d730 <wcrtomb@plt+0x1ae10>
  41d554:	ldr	x28, [x23]
  41d558:	str	x0, [x19, #32]
  41d55c:	cbz	x28, 41d764 <wcrtomb@plt+0x1ae44>
  41d560:	mov	x0, #0x100                 	// #256
  41d564:	bl	402440 <malloc@plt>
  41d568:	mov	x24, x0
  41d56c:	cbz	x0, 41d730 <wcrtomb@plt+0x1ae10>
  41d570:	mov	x0, #0xffffffffffffffff    	// #-1
  41d574:	mov	w1, #0x30000               	// #196608
  41d578:	stp	xzr, xzr, [x24, #24]
  41d57c:	str	xzr, [x24, #40]
  41d580:	str	x21, [x24, #56]
  41d584:	str	wzr, [x24, #64]
  41d588:	stp	x19, x0, [x24, #80]
  41d58c:	str	xzr, [x24, #96]
  41d590:	str	w0, [x24, #104]
  41d594:	stur	w1, [x24, #110]
  41d598:	strb	wzr, [x24, #248]
  41d59c:	cbz	x25, 41d83c <wcrtomb@plt+0x1af1c>
  41d5a0:	ldr	w26, [x19, #72]
  41d5a4:	ubfx	x0, x26, #10, #1
  41d5a8:	str	x0, [sp, #104]
  41d5ac:	eor	x20, x20, #0x800
  41d5b0:	add	x0, x19, #0x48
  41d5b4:	mov	x21, #0x0                   	// #0
  41d5b8:	mov	x22, #0x0                   	// #0
  41d5bc:	ubfx	w20, w20, #11, #1
  41d5c0:	stp	xzr, x0, [sp, #112]
  41d5c4:	b	41d5f0 <wcrtomb@plt+0x1acd0>
  41d5c8:	mov	w0, #0xb                   	// #11
  41d5cc:	strh	w0, [x26, #108]
  41d5d0:	mov	x0, #0x2                   	// #2
  41d5d4:	str	x0, [x26, #168]
  41d5d8:	cbz	x25, 41d888 <wcrtomb@plt+0x1af68>
  41d5dc:	str	x22, [x26, #16]
  41d5e0:	mov	x22, x26
  41d5e4:	add	x21, x21, #0x1
  41d5e8:	ldr	x28, [x23, x21, lsl #3]
  41d5ec:	cbz	x28, 41d6b0 <wcrtomb@plt+0x1ad90>
  41d5f0:	mov	x0, x28
  41d5f4:	bl	402300 <strlen@plt>
  41d5f8:	cmp	w20, #0x0
  41d5fc:	mov	x27, x0
  41d600:	ccmp	x0, #0x2, #0x0, ne  // ne = any
  41d604:	b.hi	41d850 <wcrtomb@plt+0x1af30>  // b.pmore
  41d608:	add	x0, x27, #0x100
  41d60c:	and	x0, x0, #0xfffffffffffffff8
  41d610:	bl	402440 <malloc@plt>
  41d614:	mov	x26, x0
  41d618:	cbz	x0, 41d6fc <wcrtomb@plt+0x1addc>
  41d61c:	add	x3, x0, #0xf8
  41d620:	mov	x1, x28
  41d624:	mov	x0, x3
  41d628:	mov	x2, x27
  41d62c:	bl	4022a0 <memcpy@plt>
  41d630:	mov	x3, x0
  41d634:	add	x1, x26, x27
  41d638:	cmp	x22, #0x0
  41d63c:	ldr	x0, [x19, #32]
  41d640:	strb	wzr, [x1, #248]
  41d644:	ldr	w1, [sp, #104]
  41d648:	str	x24, [x26, #8]
  41d64c:	stp	xzr, xzr, [x26, #24]
  41d650:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  41d654:	stp	xzr, x3, [x26, #40]
  41d658:	str	x0, [x26, #56]
  41d65c:	mov	w0, #0x30000               	// #196608
  41d660:	str	wzr, [x26, #64]
  41d664:	stp	x19, xzr, [x26, #80]
  41d668:	str	x27, [x26, #96]
  41d66c:	stur	w0, [x26, #110]
  41d670:	b.ne	41d5c8 <wcrtomb@plt+0x1aca8>  // b.any
  41d674:	ldr	w0, [x19, #44]
  41d678:	mov	x2, x26
  41d67c:	ldr	x1, [sp, #120]
  41d680:	mov	w3, #0x0                   	// #0
  41d684:	bl	41c140 <wcrtomb@plt+0x19820>
  41d688:	strh	w0, [x26, #108]
  41d68c:	cbnz	x25, 41d5dc <wcrtomb@plt+0x1acbc>
  41d690:	str	xzr, [x26, #16]
  41d694:	cbnz	x22, 41d88c <wcrtomb@plt+0x1af6c>
  41d698:	add	x21, x21, #0x1
  41d69c:	str	x26, [sp, #112]
  41d6a0:	mov	x22, x26
  41d6a4:	ldr	x28, [x23, x21, lsl #3]
  41d6a8:	cbnz	x28, 41d5f0 <wcrtomb@plt+0x1acd0>
  41d6ac:	nop
  41d6b0:	cmp	x25, #0x0
  41d6b4:	mov	x28, x22
  41d6b8:	ccmp	x21, #0x1, #0x0, ne  // ne = any
  41d6bc:	b.ls	41d768 <wcrtomb@plt+0x1ae48>  // b.plast
  41d6c0:	mov	x2, x21
  41d6c4:	mov	x1, x22
  41d6c8:	mov	x0, x19
  41d6cc:	bl	41c050 <wcrtomb@plt+0x19730>
  41d6d0:	mov	x28, x0
  41d6d4:	b	41d768 <wcrtomb@plt+0x1ae48>
  41d6d8:	bl	402890 <__errno_location@plt>
  41d6dc:	mov	x19, #0x0                   	// #0
  41d6e0:	mov	w1, #0x16                  	// #22
  41d6e4:	ldp	x23, x24, [sp, #48]
  41d6e8:	str	w1, [x0]
  41d6ec:	mov	x0, x19
  41d6f0:	ldp	x19, x20, [sp, #16]
  41d6f4:	ldp	x29, x30, [sp], #128
  41d6f8:	ret
  41d6fc:	mov	x28, x22
  41d700:	cbz	x28, 41d728 <wcrtomb@plt+0x1ae08>
  41d704:	nop
  41d708:	ldp	x20, x1, [x28, #16]
  41d70c:	mov	x0, x28
  41d710:	cbz	x1, 41d8dc <wcrtomb@plt+0x1afbc>
  41d714:	mov	x0, x1
  41d718:	bl	402570 <closedir@plt>
  41d71c:	mov	x0, x28
  41d720:	bl	4026b0 <free@plt>
  41d724:	cbnz	x20, 41d8e4 <wcrtomb@plt+0x1afc4>
  41d728:	mov	x0, x24
  41d72c:	bl	4026b0 <free@plt>
  41d730:	ldr	x0, [x19, #32]
  41d734:	bl	4026b0 <free@plt>
  41d738:	ldp	x27, x28, [sp, #80]
  41d73c:	mov	x0, x19
  41d740:	mov	x19, #0x0                   	// #0
  41d744:	bl	4026b0 <free@plt>
  41d748:	mov	x0, x19
  41d74c:	ldp	x19, x20, [sp, #16]
  41d750:	ldp	x21, x22, [sp, #32]
  41d754:	ldp	x23, x24, [sp, #48]
  41d758:	ldp	x25, x26, [sp, #64]
  41d75c:	ldp	x29, x30, [sp], #128
  41d760:	ret
  41d764:	mov	x24, #0x0                   	// #0
  41d768:	mov	x0, #0x100                 	// #256
  41d76c:	bl	402440 <malloc@plt>
  41d770:	cbz	x0, 41d94c <wcrtomb@plt+0x1b02c>
  41d774:	ldr	x6, [x19, #32]
  41d778:	mov	w3, #0x9                   	// #9
  41d77c:	mov	w2, #0x3                   	// #3
  41d780:	mov	x4, #0x1                   	// #1
  41d784:	str	x0, [x19]
  41d788:	mov	w1, #0x102                 	// #258
  41d78c:	stp	x28, xzr, [x0, #16]
  41d790:	stp	xzr, xzr, [x0, #32]
  41d794:	str	x6, [x0, #56]
  41d798:	str	wzr, [x0, #64]
  41d79c:	stp	x19, x4, [x0, #80]
  41d7a0:	str	xzr, [x0, #96]
  41d7a4:	str	w3, [x0, #108]
  41d7a8:	strh	w2, [x0, #112]
  41d7ac:	strb	wzr, [x0, #248]
  41d7b0:	ldr	w0, [x19, #72]
  41d7b4:	tst	w0, w1
  41d7b8:	b.ne	41d80c <wcrtomb@plt+0x1aeec>  // b.any
  41d7bc:	mov	x0, #0x20                  	// #32
  41d7c0:	bl	402440 <malloc@plt>
  41d7c4:	str	x0, [x19, #88]
  41d7c8:	cbz	x0, 41d700 <wcrtomb@plt+0x1ade0>
  41d7cc:	bl	42eae8 <_obstack_memory_used@@Base+0xfff8>
  41d7d0:	ldr	w0, [x19, #72]
  41d7d4:	mov	w1, #0x204                 	// #516
  41d7d8:	tst	w0, w1
  41d7dc:	b.eq	41d8ec <wcrtomb@plt+0x1afcc>  // b.none
  41d7e0:	add	x0, x19, #0x60
  41d7e4:	mov	w1, #0xffffffff            	// #-1
  41d7e8:	bl	42ecf8 <_obstack_memory_used@@Base+0x10208>
  41d7ec:	mov	x0, x19
  41d7f0:	ldp	x19, x20, [sp, #16]
  41d7f4:	ldp	x21, x22, [sp, #32]
  41d7f8:	ldp	x23, x24, [sp, #48]
  41d7fc:	ldp	x25, x26, [sp, #64]
  41d800:	ldp	x27, x28, [sp, #80]
  41d804:	ldp	x29, x30, [sp], #128
  41d808:	ret
  41d80c:	adrp	x4, 402000 <mbrtowc@plt-0x290>
  41d810:	adrp	x3, 41b000 <wcrtomb@plt+0x186e0>
  41d814:	add	x4, x4, #0x6b0
  41d818:	add	x3, x3, #0xfc0
  41d81c:	adrp	x2, 41b000 <wcrtomb@plt+0x186e0>
  41d820:	mov	x1, #0x0                   	// #0
  41d824:	add	x2, x2, #0xff0
  41d828:	mov	x0, #0x1f                  	// #31
  41d82c:	bl	416408 <wcrtomb@plt+0x13ae8>
  41d830:	str	x0, [x19, #88]
  41d834:	cbnz	x0, 41d7d0 <wcrtomb@plt+0x1aeb0>
  41d838:	b	41d700 <wcrtomb@plt+0x1ade0>
  41d83c:	mov	w0, #0x1                   	// #1
  41d840:	str	w0, [sp, #104]
  41d844:	b	41d5ac <wcrtomb@plt+0x1ac8c>
  41d848:	mov	x21, #0x1000                	// #4096
  41d84c:	b	41d528 <wcrtomb@plt+0x1ac08>
  41d850:	add	x0, x28, x0
  41d854:	sub	x1, x28, #0x2
  41d858:	ldurb	w0, [x0, #-1]
  41d85c:	cmp	w0, #0x2f
  41d860:	b.ne	41d608 <wcrtomb@plt+0x1ace8>  // b.any
  41d864:	nop
  41d868:	ldrb	w0, [x1, x27]
  41d86c:	cmp	w0, #0x2f
  41d870:	b.ne	41d8d0 <wcrtomb@plt+0x1afb0>  // b.any
  41d874:	sub	x27, x27, #0x1
  41d878:	cmp	x27, #0x1
  41d87c:	b.ne	41d868 <wcrtomb@plt+0x1af48>  // b.any
  41d880:	mov	x0, #0x100                 	// #256
  41d884:	b	41d610 <wcrtomb@plt+0x1acf0>
  41d888:	str	xzr, [x26, #16]
  41d88c:	ldr	x0, [sp, #112]
  41d890:	str	x26, [sp, #112]
  41d894:	str	x26, [x0, #16]
  41d898:	b	41d5e4 <wcrtomb@plt+0x1acc4>
  41d89c:	bl	4026b0 <free@plt>
  41d8a0:	bl	402890 <__errno_location@plt>
  41d8a4:	mov	w1, #0x24                  	// #36
  41d8a8:	str	w1, [x0]
  41d8ac:	b	41d73c <wcrtomb@plt+0x1ae1c>
  41d8b0:	bl	402890 <__errno_location@plt>
  41d8b4:	mov	x19, #0x0                   	// #0
  41d8b8:	mov	w1, #0x16                  	// #22
  41d8bc:	str	w1, [x0]
  41d8c0:	mov	x0, x19
  41d8c4:	ldp	x19, x20, [sp, #16]
  41d8c8:	ldp	x29, x30, [sp], #128
  41d8cc:	ret
  41d8d0:	add	x1, x27, #0x100
  41d8d4:	and	x0, x1, #0xfffffffffffffff8
  41d8d8:	b	41d610 <wcrtomb@plt+0x1acf0>
  41d8dc:	bl	4026b0 <free@plt>
  41d8e0:	cbz	x20, 41d728 <wcrtomb@plt+0x1ae08>
  41d8e4:	mov	x28, x20
  41d8e8:	b	41d708 <wcrtomb@plt+0x1ade8>
  41d8ec:	lsl	w1, w0, #11
  41d8f0:	mov	w2, #0x4900                	// #18688
  41d8f4:	and	w1, w1, #0x8000
  41d8f8:	movk	w2, #0x8, lsl #16
  41d8fc:	orr	w1, w1, w2
  41d900:	tbz	w0, #9, 41d930 <wcrtomb@plt+0x1b010>
  41d904:	ldr	w0, [x19, #44]
  41d908:	mov	w2, w1
  41d90c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  41d910:	add	x1, x1, #0x5a0
  41d914:	bl	417750 <wcrtomb@plt+0x14e30>
  41d918:	str	w0, [x19, #40]
  41d91c:	tbz	w0, #31, 41d7e0 <wcrtomb@plt+0x1aec0>
  41d920:	ldr	w0, [x19, #72]
  41d924:	orr	w0, w0, #0x4
  41d928:	str	w0, [x19, #72]
  41d92c:	b	41d7e0 <wcrtomb@plt+0x1aec0>
  41d930:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  41d934:	add	x0, x0, #0x5a0
  41d938:	bl	42ec48 <_obstack_memory_used@@Base+0x10158>
  41d93c:	b	41d918 <wcrtomb@plt+0x1aff8>
  41d940:	ldp	x23, x24, [sp, #48]
  41d944:	ldp	x25, x26, [sp, #64]
  41d948:	b	41d6ec <wcrtomb@plt+0x1adcc>
  41d94c:	str	xzr, [x19]
  41d950:	b	41d700 <wcrtomb@plt+0x1ade0>
  41d954:	nop
  41d958:	stp	x29, x30, [sp, #-48]!
  41d95c:	mov	x29, sp
  41d960:	stp	x19, x20, [sp, #16]
  41d964:	mov	x20, x0
  41d968:	ldr	x0, [x0]
  41d96c:	str	x21, [sp, #32]
  41d970:	cbz	x0, 41d9b8 <wcrtomb@plt+0x1b098>
  41d974:	ldr	x1, [x0, #88]
  41d978:	tbnz	x1, #63, 41db08 <wcrtomb@plt+0x1b1e8>
  41d97c:	ldr	x19, [x0, #16]
  41d980:	cbz	x19, 41d9a0 <wcrtomb@plt+0x1b080>
  41d984:	nop
  41d988:	bl	4026b0 <free@plt>
  41d98c:	ldr	x0, [x19, #88]
  41d990:	tbnz	x0, #63, 41d9b0 <wcrtomb@plt+0x1b090>
  41d994:	mov	x0, x19
  41d998:	ldr	x19, [x0, #16]
  41d99c:	cbnz	x19, 41d988 <wcrtomb@plt+0x1b068>
  41d9a0:	ldr	x19, [x0, #8]
  41d9a4:	bl	4026b0 <free@plt>
  41d9a8:	ldr	x0, [x19, #88]
  41d9ac:	tbz	x0, #63, 41d994 <wcrtomb@plt+0x1b074>
  41d9b0:	mov	x0, x19
  41d9b4:	bl	4026b0 <free@plt>
  41d9b8:	ldr	x19, [x20, #8]
  41d9bc:	cbz	x19, 41d9fc <wcrtomb@plt+0x1b0dc>
  41d9c0:	ldp	x21, x1, [x19, #16]
  41d9c4:	mov	x0, x19
  41d9c8:	cbz	x1, 41d9f4 <wcrtomb@plt+0x1b0d4>
  41d9cc:	nop
  41d9d0:	mov	x0, x1
  41d9d4:	bl	402570 <closedir@plt>
  41d9d8:	mov	x0, x19
  41d9dc:	bl	4026b0 <free@plt>
  41d9e0:	cbz	x21, 41d9fc <wcrtomb@plt+0x1b0dc>
  41d9e4:	mov	x19, x21
  41d9e8:	mov	x0, x19
  41d9ec:	ldp	x21, x1, [x19, #16]
  41d9f0:	cbnz	x1, 41d9d0 <wcrtomb@plt+0x1b0b0>
  41d9f4:	bl	4026b0 <free@plt>
  41d9f8:	cbnz	x21, 41d9e4 <wcrtomb@plt+0x1b0c4>
  41d9fc:	ldr	x0, [x20, #16]
  41da00:	bl	4026b0 <free@plt>
  41da04:	ldr	x0, [x20, #32]
  41da08:	bl	4026b0 <free@plt>
  41da0c:	ldr	w0, [x20, #72]
  41da10:	tbz	w0, #9, 41da98 <wcrtomb@plt+0x1b178>
  41da14:	ldr	w0, [x20, #44]
  41da18:	tbz	w0, #31, 41dac4 <wcrtomb@plt+0x1b1a4>
  41da1c:	mov	w21, #0x0                   	// #0
  41da20:	add	x19, x20, #0x60
  41da24:	b	41da30 <wcrtomb@plt+0x1b110>
  41da28:	bl	42ed68 <_obstack_memory_used@@Base+0x10278>
  41da2c:	tbz	w0, #31, 41da90 <wcrtomb@plt+0x1b170>
  41da30:	mov	x0, x19
  41da34:	bl	42ed18 <_obstack_memory_used@@Base+0x10228>
  41da38:	mov	w1, w0
  41da3c:	mov	x0, x19
  41da40:	tst	w1, #0xff
  41da44:	b.eq	41da28 <wcrtomb@plt+0x1b108>  // b.none
  41da48:	ldr	x0, [x20, #80]
  41da4c:	cbz	x0, 41da54 <wcrtomb@plt+0x1b134>
  41da50:	bl	416700 <wcrtomb@plt+0x13de0>
  41da54:	ldr	w2, [x20, #72]
  41da58:	mov	w1, #0x102                 	// #258
  41da5c:	ldr	x0, [x20, #88]
  41da60:	tst	w2, w1
  41da64:	b.eq	41dad8 <wcrtomb@plt+0x1b1b8>  // b.none
  41da68:	cbz	x0, 41da70 <wcrtomb@plt+0x1b150>
  41da6c:	bl	416700 <wcrtomb@plt+0x13de0>
  41da70:	mov	x0, x20
  41da74:	bl	4026b0 <free@plt>
  41da78:	cbnz	w21, 41db10 <wcrtomb@plt+0x1b1f0>
  41da7c:	mov	w0, w21
  41da80:	ldp	x19, x20, [sp, #16]
  41da84:	ldr	x21, [sp, #32]
  41da88:	ldp	x29, x30, [sp], #48
  41da8c:	ret
  41da90:	bl	402580 <close@plt>
  41da94:	b	41da30 <wcrtomb@plt+0x1b110>
  41da98:	tbnz	w0, #2, 41da1c <wcrtomb@plt+0x1b0fc>
  41da9c:	ldr	w0, [x20, #40]
  41daa0:	bl	402340 <fchdir@plt>
  41daa4:	cbnz	w0, 41dae0 <wcrtomb@plt+0x1b1c0>
  41daa8:	ldr	w0, [x20, #40]
  41daac:	bl	402580 <close@plt>
  41dab0:	cbz	w0, 41da1c <wcrtomb@plt+0x1b0fc>
  41dab4:	bl	402890 <__errno_location@plt>
  41dab8:	mov	x19, x0
  41dabc:	ldr	w21, [x19]
  41dac0:	b	41da20 <wcrtomb@plt+0x1b100>
  41dac4:	bl	402580 <close@plt>
  41dac8:	cbz	w0, 41da1c <wcrtomb@plt+0x1b0fc>
  41dacc:	bl	402890 <__errno_location@plt>
  41dad0:	ldr	w21, [x0]
  41dad4:	b	41da20 <wcrtomb@plt+0x1b100>
  41dad8:	bl	4026b0 <free@plt>
  41dadc:	b	41da70 <wcrtomb@plt+0x1b150>
  41dae0:	bl	402890 <__errno_location@plt>
  41dae4:	ldr	w21, [x0]
  41dae8:	mov	x19, x0
  41daec:	ldr	w0, [x20, #40]
  41daf0:	bl	402580 <close@plt>
  41daf4:	cmp	w21, #0x0
  41daf8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41dafc:	b.eq	41da20 <wcrtomb@plt+0x1b100>  // b.none
  41db00:	ldr	w21, [x19]
  41db04:	b	41da20 <wcrtomb@plt+0x1b100>
  41db08:	mov	x19, x0
  41db0c:	b	41d9b0 <wcrtomb@plt+0x1b090>
  41db10:	bl	402890 <__errno_location@plt>
  41db14:	str	w21, [x0]
  41db18:	mov	w21, #0xffffffff            	// #-1
  41db1c:	b	41da7c <wcrtomb@plt+0x1b15c>
  41db20:	stp	x29, x30, [sp, #-48]!
  41db24:	mov	x29, sp
  41db28:	stp	x19, x20, [sp, #16]
  41db2c:	ldr	x19, [x0]
  41db30:	cbz	x19, 41dd48 <wcrtomb@plt+0x1b428>
  41db34:	ldr	w1, [x0, #72]
  41db38:	mov	x20, x0
  41db3c:	tbnz	w1, #13, 41dd48 <wcrtomb@plt+0x1b428>
  41db40:	ldrh	w0, [x19, #112]
  41db44:	mov	w2, #0x3                   	// #3
  41db48:	strh	w2, [x19, #112]
  41db4c:	cmp	w0, #0x1
  41db50:	b.eq	41dfe8 <wcrtomb@plt+0x1b6c8>  // b.none
  41db54:	stp	x21, x22, [sp, #32]
  41db58:	cmp	w0, #0x2
  41db5c:	ldrh	w2, [x19, #108]
  41db60:	b.eq	41dc6c <wcrtomb@plt+0x1b34c>  // b.none
  41db64:	cmp	w2, #0x1
  41db68:	b.ne	41db90 <wcrtomb@plt+0x1b270>  // b.any
  41db6c:	b	41dd5c <wcrtomb@plt+0x1b43c>
  41db70:	str	x19, [x20]
  41db74:	mov	x0, x21
  41db78:	bl	4026b0 <free@plt>
  41db7c:	ldr	x0, [x19, #88]
  41db80:	cbz	x0, 41ddd8 <wcrtomb@plt+0x1b4b8>
  41db84:	ldrh	w0, [x19, #112]
  41db88:	cmp	w0, #0x4
  41db8c:	b.ne	41de90 <wcrtomb@plt+0x1b570>  // b.any
  41db90:	mov	x21, x19
  41db94:	ldr	x19, [x19, #16]
  41db98:	cbnz	x19, 41db70 <wcrtomb@plt+0x1b250>
  41db9c:	ldr	x22, [x21, #8]
  41dba0:	ldr	x0, [x22, #24]
  41dba4:	cbnz	x0, 41e17c <wcrtomb@plt+0x1b85c>
  41dba8:	str	x22, [x20]
  41dbac:	mov	x0, x21
  41dbb0:	bl	4026b0 <free@plt>
  41dbb4:	ldr	x0, [x22, #88]
  41dbb8:	cmn	x0, #0x1
  41dbbc:	b.eq	41e0e4 <wcrtomb@plt+0x1b7c4>  // b.none
  41dbc0:	ldrh	w0, [x22, #108]
  41dbc4:	cmp	w0, #0xb
  41dbc8:	b.eq	41e39c <wcrtomb@plt+0x1ba7c>  // b.none
  41dbcc:	ldr	x1, [x20, #32]
  41dbd0:	ldr	x0, [x22, #72]
  41dbd4:	strb	wzr, [x1, x0]
  41dbd8:	ldr	x0, [x22, #88]
  41dbdc:	cbz	x0, 41e0a0 <wcrtomb@plt+0x1b780>
  41dbe0:	ldrh	w0, [x22, #110]
  41dbe4:	tbz	w0, #1, 41dcfc <wcrtomb@plt+0x1b3dc>
  41dbe8:	ldr	w0, [x20, #72]
  41dbec:	ldr	w19, [x22, #68]
  41dbf0:	tbnz	w0, #2, 41dc24 <wcrtomb@plt+0x1b304>
  41dbf4:	tbz	w0, #9, 41e230 <wcrtomb@plt+0x1b910>
  41dbf8:	ldr	w1, [x20, #44]
  41dbfc:	mov	w0, #0xffffff9c            	// #-100
  41dc00:	cmp	w1, w19
  41dc04:	ccmp	w1, w0, #0x4, eq  // eq = none
  41dc08:	b.ne	41e39c <wcrtomb@plt+0x1ba7c>  // b.any
  41dc0c:	add	x0, x20, #0x60
  41dc10:	bl	42ed20 <_obstack_memory_used@@Base+0x10230>
  41dc14:	tbnz	w0, #31, 41dc1c <wcrtomb@plt+0x1b2fc>
  41dc18:	bl	402580 <close@plt>
  41dc1c:	str	w19, [x20, #44]
  41dc20:	ldr	w19, [x22, #68]
  41dc24:	mov	w0, w19
  41dc28:	bl	402580 <close@plt>
  41dc2c:	ldr	w0, [x20, #72]
  41dc30:	ldrh	w1, [x22, #108]
  41dc34:	cmp	w1, #0x2
  41dc38:	b.eq	41dc5c <wcrtomb@plt+0x1b33c>  // b.none
  41dc3c:	ldr	w1, [x22, #64]
  41dc40:	cbnz	w1, 41e100 <wcrtomb@plt+0x1b7e0>
  41dc44:	mov	w1, #0x6                   	// #6
  41dc48:	strh	w1, [x22, #108]
  41dc4c:	mov	x2, x22
  41dc50:	add	x1, x20, #0x58
  41dc54:	bl	41c2e8 <wcrtomb@plt+0x199c8>
  41dc58:	ldr	w0, [x20, #72]
  41dc5c:	tbnz	w0, #13, 41dd40 <wcrtomb@plt+0x1b420>
  41dc60:	mov	x19, x22
  41dc64:	ldp	x21, x22, [sp, #32]
  41dc68:	b	41dd4c <wcrtomb@plt+0x1b42c>
  41dc6c:	sub	w0, w2, #0xc
  41dc70:	and	w0, w0, #0xffff
  41dc74:	cmp	w0, #0x1
  41dc78:	b.ls	41df68 <wcrtomb@plt+0x1b648>  // b.plast
  41dc7c:	cmp	w2, #0x1
  41dc80:	b.ne	41db90 <wcrtomb@plt+0x1b270>  // b.any
  41dc84:	tbz	w1, #6, 41dc98 <wcrtomb@plt+0x1b378>
  41dc88:	ldr	x0, [x20, #24]
  41dc8c:	ldr	x2, [x19, #120]
  41dc90:	cmp	x2, x0
  41dc94:	b.ne	41dd64 <wcrtomb@plt+0x1b444>  // b.any
  41dc98:	ldr	x21, [x20, #8]
  41dc9c:	cbz	x21, 41e02c <wcrtomb@plt+0x1b70c>
  41dca0:	tbnz	w1, #12, 41e004 <wcrtomb@plt+0x1b6e4>
  41dca4:	ldr	x3, [x19, #48]
  41dca8:	mov	x1, x19
  41dcac:	mov	x0, x20
  41dcb0:	mov	w2, #0xffffffff            	// #-1
  41dcb4:	bl	41c5b8 <wcrtomb@plt+0x19c98>
  41dcb8:	cbz	w0, 41e094 <wcrtomb@plt+0x1b774>
  41dcbc:	bl	402890 <__errno_location@plt>
  41dcc0:	ldr	w0, [x0]
  41dcc4:	ldrh	w1, [x19, #110]
  41dcc8:	str	w0, [x19, #64]
  41dccc:	orr	w1, w1, #0x1
  41dcd0:	strh	w1, [x19, #110]
  41dcd4:	ldr	x19, [x20, #8]
  41dcd8:	cbz	x19, 41dcf4 <wcrtomb@plt+0x1b3d4>
  41dcdc:	mov	x0, x19
  41dce0:	ldr	x1, [x0, #8]
  41dce4:	ldr	x1, [x1, #48]
  41dce8:	str	x1, [x0, #48]
  41dcec:	ldr	x0, [x0, #16]
  41dcf0:	cbnz	x0, 41dce0 <wcrtomb@plt+0x1b3c0>
  41dcf4:	str	xzr, [x20, #8]
  41dcf8:	b	41de98 <wcrtomb@plt+0x1b578>
  41dcfc:	tbnz	w0, #0, 41e0ac <wcrtomb@plt+0x1b78c>
  41dd00:	ldr	x1, [x22, #8]
  41dd04:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x13510>
  41dd08:	mov	x0, x20
  41dd0c:	add	x3, x3, #0x470
  41dd10:	mov	w2, #0xffffffff            	// #-1
  41dd14:	bl	41c5b8 <wcrtomb@plt+0x19c98>
  41dd18:	cbz	w0, 41e0ac <wcrtomb@plt+0x1b78c>
  41dd1c:	bl	402890 <__errno_location@plt>
  41dd20:	ldr	w2, [x0]
  41dd24:	ldr	w1, [x20, #72]
  41dd28:	str	w2, [x22, #64]
  41dd2c:	orr	w0, w1, #0x2000
  41dd30:	ldrh	w1, [x22, #108]
  41dd34:	str	w0, [x20, #72]
  41dd38:	cmp	w1, #0x2
  41dd3c:	b.ne	41dc3c <wcrtomb@plt+0x1b31c>  // b.any
  41dd40:	ldp	x21, x22, [sp, #32]
  41dd44:	nop
  41dd48:	mov	x19, #0x0                   	// #0
  41dd4c:	mov	x0, x19
  41dd50:	ldp	x19, x20, [sp, #16]
  41dd54:	ldp	x29, x30, [sp], #48
  41dd58:	ret
  41dd5c:	cmp	w0, #0x4
  41dd60:	b.ne	41dc84 <wcrtomb@plt+0x1b364>  // b.any
  41dd64:	ldrh	w0, [x19, #110]
  41dd68:	tbnz	w0, #1, 41e1e4 <wcrtomb@plt+0x1b8c4>
  41dd6c:	ldr	x21, [x20, #8]
  41dd70:	cbz	x21, 41ddac <wcrtomb@plt+0x1b48c>
  41dd74:	ldp	x22, x0, [x21, #16]
  41dd78:	cbz	x0, 41dd9c <wcrtomb@plt+0x1b47c>
  41dd7c:	nop
  41dd80:	bl	402570 <closedir@plt>
  41dd84:	mov	x0, x21
  41dd88:	bl	4026b0 <free@plt>
  41dd8c:	cbz	x22, 41dda8 <wcrtomb@plt+0x1b488>
  41dd90:	mov	x21, x22
  41dd94:	ldp	x22, x0, [x21, #16]
  41dd98:	cbnz	x0, 41dd80 <wcrtomb@plt+0x1b460>
  41dd9c:	mov	x0, x21
  41dda0:	bl	4026b0 <free@plt>
  41dda4:	cbnz	x22, 41dd90 <wcrtomb@plt+0x1b470>
  41dda8:	str	xzr, [x20, #8]
  41ddac:	ldr	w0, [x20, #72]
  41ddb0:	mov	w1, #0x6                   	// #6
  41ddb4:	strh	w1, [x19, #108]
  41ddb8:	add	x1, x20, #0x58
  41ddbc:	mov	x2, x19
  41ddc0:	bl	41c2e8 <wcrtomb@plt+0x199c8>
  41ddc4:	mov	x0, x19
  41ddc8:	ldp	x19, x20, [sp, #16]
  41ddcc:	ldp	x21, x22, [sp, #32]
  41ddd0:	ldp	x29, x30, [sp], #48
  41ddd4:	ret
  41ddd8:	mov	x0, x20
  41dddc:	bl	41c378 <wcrtomb@plt+0x19a58>
  41dde0:	cbnz	w0, 41e1b0 <wcrtomb@plt+0x1b890>
  41dde4:	ldr	w2, [x20, #72]
  41dde8:	mov	w1, #0x102                 	// #258
  41ddec:	ldr	x0, [x20, #88]
  41ddf0:	tst	w2, w1
  41ddf4:	b.eq	41e1dc <wcrtomb@plt+0x1b8bc>  // b.none
  41ddf8:	cbz	x0, 41de00 <wcrtomb@plt+0x1b4e0>
  41ddfc:	bl	416700 <wcrtomb@plt+0x13de0>
  41de00:	ldr	x2, [x19, #96]
  41de04:	add	x22, x19, #0xf8
  41de08:	ldr	x0, [x20, #32]
  41de0c:	str	x2, [x19, #72]
  41de10:	add	x2, x2, #0x1
  41de14:	mov	x1, x22
  41de18:	bl	4022c0 <memmove@plt>
  41de1c:	mov	x0, x22
  41de20:	mov	w1, #0x2f                  	// #47
  41de24:	bl	4025a0 <strrchr@plt>
  41de28:	cbz	x0, 41de58 <wcrtomb@plt+0x1b538>
  41de2c:	cmp	x22, x0
  41de30:	b.eq	41e0b4 <wcrtomb@plt+0x1b794>  // b.none
  41de34:	add	x21, x0, #0x1
  41de38:	mov	x0, x21
  41de3c:	bl	402300 <strlen@plt>
  41de40:	mov	x1, x21
  41de44:	mov	x21, x0
  41de48:	add	x2, x21, #0x1
  41de4c:	mov	x0, x22
  41de50:	bl	4022c0 <memmove@plt>
  41de54:	str	x21, [x19, #96]
  41de58:	ldr	d0, [x20, #32]
  41de5c:	mov	w0, #0x102                 	// #258
  41de60:	ldr	w1, [x20, #72]
  41de64:	dup	v0.2d, v0.d[0]
  41de68:	tst	w1, w0
  41de6c:	str	q0, [x19, #48]
  41de70:	b.ne	41e064 <wcrtomb@plt+0x1b744>  // b.any
  41de74:	mov	x0, #0x20                  	// #32
  41de78:	bl	402440 <malloc@plt>
  41de7c:	str	x0, [x20, #88]
  41de80:	cbz	x0, 41ded8 <wcrtomb@plt+0x1b5b8>
  41de84:	bl	42eae8 <_obstack_memory_used@@Base+0xfff8>
  41de88:	ldrh	w1, [x19, #108]
  41de8c:	b	41dedc <wcrtomb@plt+0x1b5bc>
  41de90:	cmp	w0, #0x2
  41de94:	b.eq	41e1f0 <wcrtomb@plt+0x1b8d0>  // b.none
  41de98:	ldr	x2, [x19, #8]
  41de9c:	mov	w4, #0x2f                  	// #47
  41dea0:	ldr	x3, [x20, #32]
  41dea4:	add	x1, x19, #0xf8
  41dea8:	ldr	x0, [x2, #72]
  41deac:	ldr	x5, [x2, #56]
  41deb0:	sub	x2, x0, #0x1
  41deb4:	ldrb	w5, [x5, x2]
  41deb8:	cmp	w5, #0x2f
  41debc:	csel	x2, x2, x0, eq  // eq = none
  41dec0:	add	x0, x3, x2
  41dec4:	add	x0, x0, #0x1
  41dec8:	strb	w4, [x3, x2]
  41decc:	ldr	x2, [x19, #96]
  41ded0:	add	x2, x2, #0x1
  41ded4:	bl	4022c0 <memmove@plt>
  41ded8:	ldrh	w1, [x19, #108]
  41dedc:	str	x19, [x20]
  41dee0:	cmp	w1, #0xb
  41dee4:	b.eq	41df98 <wcrtomb@plt+0x1b678>  // b.none
  41dee8:	cmp	w1, #0x1
  41deec:	b.ne	41dfac <wcrtomb@plt+0x1b68c>  // b.any
  41def0:	ldr	x0, [x19, #88]
  41def4:	cbnz	x0, 41df00 <wcrtomb@plt+0x1b5e0>
  41def8:	ldr	x0, [x19, #120]
  41defc:	str	x0, [x20, #24]
  41df00:	ldr	w1, [x20, #72]
  41df04:	mov	w0, #0x102                 	// #258
  41df08:	tst	w1, w0
  41df0c:	b.eq	41dfc0 <wcrtomb@plt+0x1b6a0>  // b.none
  41df10:	mov	x0, #0x18                  	// #24
  41df14:	bl	402440 <malloc@plt>
  41df18:	mov	x21, x0
  41df1c:	cbz	x0, 41e04c <wcrtomb@plt+0x1b72c>
  41df20:	mov	x1, x0
  41df24:	ldr	x0, [x20, #88]
  41df28:	ldur	q0, [x19, #120]
  41df2c:	str	x19, [x21, #16]
  41df30:	str	q0, [x21]
  41df34:	bl	416be0 <wcrtomb@plt+0x142c0>
  41df38:	mov	x20, x0
  41df3c:	cmp	x21, x0
  41df40:	b.eq	41dfac <wcrtomb@plt+0x1b68c>  // b.none
  41df44:	mov	x0, x21
  41df48:	bl	4026b0 <free@plt>
  41df4c:	cbz	x20, 41e04c <wcrtomb@plt+0x1b72c>
  41df50:	ldr	x1, [x20, #16]
  41df54:	mov	w0, #0x2                   	// #2
  41df58:	ldp	x21, x22, [sp, #32]
  41df5c:	str	x1, [x19]
  41df60:	strh	w0, [x19, #108]
  41df64:	b	41dd4c <wcrtomb@plt+0x1b42c>
  41df68:	ldr	w0, [x20, #44]
  41df6c:	mov	x2, x19
  41df70:	add	x1, x20, #0x48
  41df74:	mov	w3, #0x1                   	// #1
  41df78:	bl	41c140 <wcrtomb@plt+0x19820>
  41df7c:	strh	w0, [x19, #108]
  41df80:	and	w0, w0, #0xffff
  41df84:	cmp	w0, #0x1
  41df88:	b.eq	41e244 <wcrtomb@plt+0x1b924>  // b.none
  41df8c:	str	x19, [x20]
  41df90:	cmp	w0, #0xb
  41df94:	b.ne	41dfac <wcrtomb@plt+0x1b68c>  // b.any
  41df98:	ldr	x0, [x19, #168]
  41df9c:	cmp	x0, #0x2
  41dfa0:	b.eq	41e10c <wcrtomb@plt+0x1b7ec>  // b.none
  41dfa4:	cmp	x0, #0x1
  41dfa8:	b.ne	41e39c <wcrtomb@plt+0x1ba7c>  // b.any
  41dfac:	ldp	x21, x22, [sp, #32]
  41dfb0:	mov	x0, x19
  41dfb4:	ldp	x19, x20, [sp, #16]
  41dfb8:	ldp	x29, x30, [sp], #48
  41dfbc:	ret
  41dfc0:	ldr	x0, [x20, #88]
  41dfc4:	add	x1, x19, #0x78
  41dfc8:	bl	42eb00 <_obstack_memory_used@@Base+0x10010>
  41dfcc:	tst	w0, #0xff
  41dfd0:	b.eq	41dfac <wcrtomb@plt+0x1b68c>  // b.none
  41dfd4:	mov	w0, #0x2                   	// #2
  41dfd8:	strh	w0, [x19, #108]
  41dfdc:	ldp	x21, x22, [sp, #32]
  41dfe0:	str	x19, [x19]
  41dfe4:	b	41dd4c <wcrtomb@plt+0x1b42c>
  41dfe8:	ldr	w0, [x20, #44]
  41dfec:	add	x1, x20, #0x48
  41dff0:	mov	x2, x19
  41dff4:	mov	w3, #0x0                   	// #0
  41dff8:	bl	41c140 <wcrtomb@plt+0x19820>
  41dffc:	strh	w0, [x19, #108]
  41e000:	b	41dd4c <wcrtomb@plt+0x1b42c>
  41e004:	and	w1, w1, #0xffffefff
  41e008:	str	w1, [x20, #72]
  41e00c:	nop
  41e010:	ldp	x22, x0, [x21, #16]
  41e014:	cbz	x0, 41e1c8 <wcrtomb@plt+0x1b8a8>
  41e018:	bl	402570 <closedir@plt>
  41e01c:	mov	x0, x21
  41e020:	bl	4026b0 <free@plt>
  41e024:	cbnz	x22, 41e1d4 <wcrtomb@plt+0x1b8b4>
  41e028:	str	xzr, [x20, #8]
  41e02c:	mov	x0, x20
  41e030:	mov	w1, #0x3                   	// #3
  41e034:	bl	41c870 <wcrtomb@plt+0x19f50>
  41e038:	str	x0, [x20, #8]
  41e03c:	cbz	x0, 41e0c0 <wcrtomb@plt+0x1b7a0>
  41e040:	mov	x19, x0
  41e044:	str	xzr, [x20, #8]
  41e048:	b	41de98 <wcrtomb@plt+0x1b578>
  41e04c:	bl	402890 <__errno_location@plt>
  41e050:	mov	x19, #0x0                   	// #0
  41e054:	mov	w1, #0xc                   	// #12
  41e058:	ldp	x21, x22, [sp, #32]
  41e05c:	str	w1, [x0]
  41e060:	b	41dd4c <wcrtomb@plt+0x1b42c>
  41e064:	mov	x1, #0x0                   	// #0
  41e068:	adrp	x4, 402000 <mbrtowc@plt-0x290>
  41e06c:	adrp	x3, 41b000 <wcrtomb@plt+0x186e0>
  41e070:	add	x4, x4, #0x6b0
  41e074:	add	x3, x3, #0xfc0
  41e078:	adrp	x2, 41b000 <wcrtomb@plt+0x186e0>
  41e07c:	mov	x0, #0x1f                  	// #31
  41e080:	add	x2, x2, #0xff0
  41e084:	bl	416408 <wcrtomb@plt+0x13ae8>
  41e088:	ldrh	w1, [x19, #108]
  41e08c:	str	x0, [x20, #88]
  41e090:	b	41dedc <wcrtomb@plt+0x1b5bc>
  41e094:	ldr	x19, [x20, #8]
  41e098:	str	xzr, [x20, #8]
  41e09c:	b	41de98 <wcrtomb@plt+0x1b578>
  41e0a0:	mov	x0, x20
  41e0a4:	bl	41c378 <wcrtomb@plt+0x19a58>
  41e0a8:	cbnz	w0, 41dd1c <wcrtomb@plt+0x1b3fc>
  41e0ac:	ldr	w0, [x20, #72]
  41e0b0:	b	41dc30 <wcrtomb@plt+0x1b310>
  41e0b4:	ldrb	w1, [x22, #1]
  41e0b8:	cbz	w1, 41de58 <wcrtomb@plt+0x1b538>
  41e0bc:	b	41de34 <wcrtomb@plt+0x1b514>
  41e0c0:	ldr	w0, [x20, #72]
  41e0c4:	tbnz	w0, #13, 41dd40 <wcrtomb@plt+0x1b420>
  41e0c8:	ldr	w1, [x19, #64]
  41e0cc:	cbz	w1, 41ddb8 <wcrtomb@plt+0x1b498>
  41e0d0:	ldrh	w1, [x19, #108]
  41e0d4:	cmp	w1, #0x4
  41e0d8:	b.eq	41ddb8 <wcrtomb@plt+0x1b498>  // b.none
  41e0dc:	mov	w1, #0x7                   	// #7
  41e0e0:	b	41ddb4 <wcrtomb@plt+0x1b494>
  41e0e4:	mov	x0, x22
  41e0e8:	bl	4026b0 <free@plt>
  41e0ec:	bl	402890 <__errno_location@plt>
  41e0f0:	ldp	x21, x22, [sp, #32]
  41e0f4:	str	wzr, [x0]
  41e0f8:	str	xzr, [x20]
  41e0fc:	b	41dd4c <wcrtomb@plt+0x1b42c>
  41e100:	mov	w1, #0x7                   	// #7
  41e104:	strh	w1, [x22, #108]
  41e108:	b	41dc5c <wcrtomb@plt+0x1b33c>
  41e10c:	ldr	x21, [x19, #8]
  41e110:	ldr	w0, [x20, #44]
  41e114:	ldr	w1, [x21, #104]
  41e118:	cbnz	w1, 41e12c <wcrtomb@plt+0x1b80c>
  41e11c:	ldr	w2, [x20, #72]
  41e120:	and	w2, w2, #0x18
  41e124:	cmp	w2, #0x18
  41e128:	b.eq	41e2b0 <wcrtomb@plt+0x1b990>  // b.none
  41e12c:	mov	x2, x19
  41e130:	add	x1, x20, #0x48
  41e134:	mov	w3, #0x0                   	// #0
  41e138:	bl	41c140 <wcrtomb@plt+0x19820>
  41e13c:	ldr	w2, [x19, #136]
  41e140:	and	w1, w0, #0xffff
  41e144:	strh	w0, [x19, #108]
  41e148:	and	w2, w2, #0xf000
  41e14c:	cmp	w2, #0x4, lsl #12
  41e150:	b.ne	41dee8 <wcrtomb@plt+0x1b5c8>  // b.any
  41e154:	ldr	x0, [x19, #88]
  41e158:	cbz	x0, 41e2a0 <wcrtomb@plt+0x1b980>
  41e15c:	ldr	w0, [x21, #104]
  41e160:	sub	w0, w0, #0x1
  41e164:	cmn	w0, #0x3
  41e168:	b.ls	41e334 <wcrtomb@plt+0x1ba14>  // b.plast
  41e16c:	cmp	w1, #0x1
  41e170:	b.eq	41df00 <wcrtomb@plt+0x1b5e0>  // b.none
  41e174:	ldp	x21, x22, [sp, #32]
  41e178:	b	41dfb0 <wcrtomb@plt+0x1b690>
  41e17c:	ldr	x3, [x20, #32]
  41e180:	mov	w1, #0x3                   	// #3
  41e184:	ldr	x2, [x22, #72]
  41e188:	str	x22, [x20]
  41e18c:	mov	x0, x20
  41e190:	strb	wzr, [x3, x2]
  41e194:	bl	41c870 <wcrtomb@plt+0x19f50>
  41e198:	mov	x1, x0
  41e19c:	cbnz	x0, 41e220 <wcrtomb@plt+0x1b900>
  41e1a0:	ldr	w0, [x20, #72]
  41e1a4:	tbnz	w0, #13, 41dd40 <wcrtomb@plt+0x1b420>
  41e1a8:	ldr	x22, [x21, #8]
  41e1ac:	b	41dba8 <wcrtomb@plt+0x1b288>
  41e1b0:	ldr	w0, [x20, #72]
  41e1b4:	mov	x19, #0x0                   	// #0
  41e1b8:	ldp	x21, x22, [sp, #32]
  41e1bc:	orr	w0, w0, #0x2000
  41e1c0:	str	w0, [x20, #72]
  41e1c4:	b	41dd4c <wcrtomb@plt+0x1b42c>
  41e1c8:	mov	x0, x21
  41e1cc:	bl	4026b0 <free@plt>
  41e1d0:	cbz	x22, 41e028 <wcrtomb@plt+0x1b708>
  41e1d4:	mov	x21, x22
  41e1d8:	b	41e010 <wcrtomb@plt+0x1b6f0>
  41e1dc:	bl	4026b0 <free@plt>
  41e1e0:	b	41de00 <wcrtomb@plt+0x1b4e0>
  41e1e4:	ldr	w0, [x19, #68]
  41e1e8:	bl	402580 <close@plt>
  41e1ec:	b	41dd6c <wcrtomb@plt+0x1b44c>
  41e1f0:	ldr	w0, [x20, #44]
  41e1f4:	mov	x2, x19
  41e1f8:	add	x1, x20, #0x48
  41e1fc:	mov	w3, #0x1                   	// #1
  41e200:	bl	41c140 <wcrtomb@plt+0x19820>
  41e204:	strh	w0, [x19, #108]
  41e208:	and	w0, w0, #0xffff
  41e20c:	cmp	w0, #0x1
  41e210:	b.eq	41e254 <wcrtomb@plt+0x1b934>  // b.none
  41e214:	mov	w0, #0x3                   	// #3
  41e218:	strh	w0, [x19, #112]
  41e21c:	b	41de98 <wcrtomb@plt+0x1b578>
  41e220:	mov	x0, x21
  41e224:	mov	x19, x1
  41e228:	bl	4026b0 <free@plt>
  41e22c:	b	41de98 <wcrtomb@plt+0x1b578>
  41e230:	mov	w0, w19
  41e234:	bl	402340 <fchdir@plt>
  41e238:	cbnz	w0, 41e2cc <wcrtomb@plt+0x1b9ac>
  41e23c:	ldr	w19, [x22, #68]
  41e240:	b	41dc24 <wcrtomb@plt+0x1b304>
  41e244:	ldr	w0, [x20, #72]
  41e248:	tbz	w0, #2, 41e2ec <wcrtomb@plt+0x1b9cc>
  41e24c:	str	x19, [x20]
  41e250:	b	41def0 <wcrtomb@plt+0x1b5d0>
  41e254:	ldr	w0, [x20, #72]
  41e258:	tbnz	w0, #2, 41e214 <wcrtomb@plt+0x1b8f4>
  41e25c:	lsl	w1, w0, #11
  41e260:	mov	w2, #0x4900                	// #18688
  41e264:	and	w1, w1, #0x8000
  41e268:	movk	w2, #0x8, lsl #16
  41e26c:	orr	w1, w1, w2
  41e270:	tbz	w0, #9, 41e374 <wcrtomb@plt+0x1ba54>
  41e274:	ldr	w0, [x20, #44]
  41e278:	mov	w2, w1
  41e27c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  41e280:	add	x1, x1, #0x5a0
  41e284:	bl	417750 <wcrtomb@plt+0x14e30>
  41e288:	str	w0, [x19, #68]
  41e28c:	tbnz	w0, #31, 41e384 <wcrtomb@plt+0x1ba64>
  41e290:	ldrh	w0, [x19, #110]
  41e294:	orr	w0, w0, #0x2
  41e298:	strh	w0, [x19, #110]
  41e29c:	b	41e214 <wcrtomb@plt+0x1b8f4>
  41e2a0:	cmp	w1, #0x1
  41e2a4:	b.eq	41def8 <wcrtomb@plt+0x1b5d8>  // b.none
  41e2a8:	ldp	x21, x22, [sp, #32]
  41e2ac:	b	41dfb0 <wcrtomb@plt+0x1b690>
  41e2b0:	mov	w1, w0
  41e2b4:	mov	x0, x21
  41e2b8:	bl	41c438 <wcrtomb@plt+0x19b18>
  41e2bc:	cmp	w0, #0x2
  41e2c0:	b.eq	41e33c <wcrtomb@plt+0x1ba1c>  // b.none
  41e2c4:	ldr	w0, [x20, #44]
  41e2c8:	b	41e12c <wcrtomb@plt+0x1b80c>
  41e2cc:	bl	402890 <__errno_location@plt>
  41e2d0:	ldr	w0, [x0]
  41e2d4:	ldr	w1, [x20, #72]
  41e2d8:	str	w0, [x22, #64]
  41e2dc:	ldr	w19, [x22, #68]
  41e2e0:	orr	w1, w1, #0x2000
  41e2e4:	str	w1, [x20, #72]
  41e2e8:	b	41dc24 <wcrtomb@plt+0x1b304>
  41e2ec:	lsl	w1, w0, #11
  41e2f0:	mov	w2, #0x4900                	// #18688
  41e2f4:	and	w1, w1, #0x8000
  41e2f8:	movk	w2, #0x8, lsl #16
  41e2fc:	orr	w1, w1, w2
  41e300:	tbz	w0, #9, 41e344 <wcrtomb@plt+0x1ba24>
  41e304:	ldr	w0, [x20, #44]
  41e308:	mov	w2, w1
  41e30c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  41e310:	add	x1, x1, #0x5a0
  41e314:	bl	417750 <wcrtomb@plt+0x14e30>
  41e318:	str	w0, [x19, #68]
  41e31c:	tbnz	w0, #31, 41e354 <wcrtomb@plt+0x1ba34>
  41e320:	ldrh	w0, [x19, #110]
  41e324:	ldrh	w1, [x19, #108]
  41e328:	orr	w0, w0, #0x2
  41e32c:	strh	w0, [x19, #110]
  41e330:	b	41dedc <wcrtomb@plt+0x1b5bc>
  41e334:	str	w0, [x21, #104]
  41e338:	b	41e16c <wcrtomb@plt+0x1b84c>
  41e33c:	ldrh	w1, [x19, #108]
  41e340:	b	41dee8 <wcrtomb@plt+0x1b5c8>
  41e344:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  41e348:	add	x0, x0, #0x5a0
  41e34c:	bl	42ec48 <_obstack_memory_used@@Base+0x10158>
  41e350:	b	41e318 <wcrtomb@plt+0x1b9f8>
  41e354:	bl	402890 <__errno_location@plt>
  41e358:	ldr	w0, [x0]
  41e35c:	mov	w1, #0x7                   	// #7
  41e360:	ldp	x21, x22, [sp, #32]
  41e364:	str	w0, [x19, #64]
  41e368:	strh	w1, [x19, #108]
  41e36c:	str	x19, [x20]
  41e370:	b	41dd4c <wcrtomb@plt+0x1b42c>
  41e374:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  41e378:	add	x0, x0, #0x5a0
  41e37c:	bl	42ec48 <_obstack_memory_used@@Base+0x10158>
  41e380:	b	41e288 <wcrtomb@plt+0x1b968>
  41e384:	bl	402890 <__errno_location@plt>
  41e388:	ldr	w0, [x0]
  41e38c:	mov	w1, #0x7                   	// #7
  41e390:	str	w0, [x19, #64]
  41e394:	strh	w1, [x19, #108]
  41e398:	b	41e214 <wcrtomb@plt+0x1b8f4>
  41e39c:	bl	4025f0 <abort@plt>
  41e3a0:	cmp	w2, #0x4
  41e3a4:	b.hi	41e3b4 <wcrtomb@plt+0x1ba94>  // b.pmore
  41e3a8:	mov	w0, #0x0                   	// #0
  41e3ac:	strh	w2, [x1, #112]
  41e3b0:	ret
  41e3b4:	stp	x29, x30, [sp, #-16]!
  41e3b8:	mov	x29, sp
  41e3bc:	bl	402890 <__errno_location@plt>
  41e3c0:	mov	x1, x0
  41e3c4:	mov	w2, #0x16                  	// #22
  41e3c8:	mov	w0, #0x1                   	// #1
  41e3cc:	str	w2, [x1]
  41e3d0:	ldp	x29, x30, [sp], #16
  41e3d4:	ret
  41e3d8:	stp	x29, x30, [sp, #-64]!
  41e3dc:	mov	x29, sp
  41e3e0:	stp	x19, x20, [sp, #16]
  41e3e4:	mov	x19, x0
  41e3e8:	stp	x21, x22, [sp, #32]
  41e3ec:	mov	w21, w1
  41e3f0:	bl	402890 <__errno_location@plt>
  41e3f4:	tst	w21, #0xffffefff
  41e3f8:	mov	x22, x0
  41e3fc:	b.ne	41e544 <wcrtomb@plt+0x1bc24>  // b.any
  41e400:	stp	x23, x24, [sp, #48]
  41e404:	ldr	x24, [x19]
  41e408:	str	wzr, [x0]
  41e40c:	ldr	w0, [x19, #72]
  41e410:	tbnz	w0, #13, 41e4c0 <wcrtomb@plt+0x1bba0>
  41e414:	ldrh	w0, [x24, #108]
  41e418:	cmp	w0, #0x9
  41e41c:	b.eq	41e560 <wcrtomb@plt+0x1bc40>  // b.none
  41e420:	cmp	w0, #0x1
  41e424:	b.ne	41e4c0 <wcrtomb@plt+0x1bba0>  // b.any
  41e428:	ldr	x20, [x19, #8]
  41e42c:	cbz	x20, 41e460 <wcrtomb@plt+0x1bb40>
  41e430:	ldp	x23, x0, [x20, #16]
  41e434:	cbz	x0, 41e454 <wcrtomb@plt+0x1bb34>
  41e438:	bl	402570 <closedir@plt>
  41e43c:	mov	x0, x20
  41e440:	bl	4026b0 <free@plt>
  41e444:	cbz	x23, 41e460 <wcrtomb@plt+0x1bb40>
  41e448:	mov	x20, x23
  41e44c:	ldp	x23, x0, [x20, #16]
  41e450:	cbnz	x0, 41e438 <wcrtomb@plt+0x1bb18>
  41e454:	mov	x0, x20
  41e458:	bl	4026b0 <free@plt>
  41e45c:	cbnz	x23, 41e448 <wcrtomb@plt+0x1bb28>
  41e460:	cmp	w21, #0x1, lsl #12
  41e464:	mov	w20, #0x1                   	// #1
  41e468:	b.ne	41e47c <wcrtomb@plt+0x1bb5c>  // b.any
  41e46c:	ldr	w0, [x19, #72]
  41e470:	mov	w20, #0x2                   	// #2
  41e474:	orr	w0, w0, #0x1000
  41e478:	str	w0, [x19, #72]
  41e47c:	ldr	x0, [x24, #88]
  41e480:	cbnz	x0, 41e49c <wcrtomb@plt+0x1bb7c>
  41e484:	ldr	x0, [x24, #48]
  41e488:	ldrb	w0, [x0]
  41e48c:	cmp	w0, #0x2f
  41e490:	b.eq	41e49c <wcrtomb@plt+0x1bb7c>  // b.none
  41e494:	ldr	w0, [x19, #72]
  41e498:	tbz	w0, #2, 41e4d8 <wcrtomb@plt+0x1bbb8>
  41e49c:	mov	w1, w20
  41e4a0:	mov	x0, x19
  41e4a4:	bl	41c870 <wcrtomb@plt+0x19f50>
  41e4a8:	ldp	x23, x24, [sp, #48]
  41e4ac:	str	x0, [x19, #8]
  41e4b0:	ldp	x19, x20, [sp, #16]
  41e4b4:	ldp	x21, x22, [sp, #32]
  41e4b8:	ldp	x29, x30, [sp], #64
  41e4bc:	ret
  41e4c0:	ldp	x23, x24, [sp, #48]
  41e4c4:	mov	x0, #0x0                   	// #0
  41e4c8:	ldp	x19, x20, [sp, #16]
  41e4cc:	ldp	x21, x22, [sp, #32]
  41e4d0:	ldp	x29, x30, [sp], #64
  41e4d4:	ret
  41e4d8:	lsl	w1, w0, #11
  41e4dc:	mov	w2, #0x4900                	// #18688
  41e4e0:	and	w1, w1, #0x8000
  41e4e4:	movk	w2, #0x8, lsl #16
  41e4e8:	orr	w1, w1, w2
  41e4ec:	tbz	w0, #9, 41e578 <wcrtomb@plt+0x1bc58>
  41e4f0:	ldr	w0, [x19, #44]
  41e4f4:	mov	w2, w1
  41e4f8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x11510>
  41e4fc:	add	x1, x1, #0x5a0
  41e500:	bl	417750 <wcrtomb@plt+0x14e30>
  41e504:	mov	w21, w0
  41e508:	tbnz	w21, #31, 41e5c0 <wcrtomb@plt+0x1bca0>
  41e50c:	mov	w1, w20
  41e510:	mov	x0, x19
  41e514:	bl	41c870 <wcrtomb@plt+0x19f50>
  41e518:	str	x0, [x19, #8]
  41e51c:	ldr	w1, [x19, #72]
  41e520:	tbnz	w1, #9, 41e58c <wcrtomb@plt+0x1bc6c>
  41e524:	mov	w0, w21
  41e528:	bl	402340 <fchdir@plt>
  41e52c:	cbnz	w0, 41e5d0 <wcrtomb@plt+0x1bcb0>
  41e530:	mov	w0, w21
  41e534:	bl	402580 <close@plt>
  41e538:	ldr	x0, [x19, #8]
  41e53c:	ldp	x23, x24, [sp, #48]
  41e540:	b	41e4c8 <wcrtomb@plt+0x1bba8>
  41e544:	mov	w1, #0x16                  	// #22
  41e548:	str	w1, [x22]
  41e54c:	mov	x0, #0x0                   	// #0
  41e550:	ldp	x19, x20, [sp, #16]
  41e554:	ldp	x21, x22, [sp, #32]
  41e558:	ldp	x29, x30, [sp], #64
  41e55c:	ret
  41e560:	ldr	x0, [x24, #16]
  41e564:	ldp	x19, x20, [sp, #16]
  41e568:	ldp	x21, x22, [sp, #32]
  41e56c:	ldp	x23, x24, [sp, #48]
  41e570:	ldp	x29, x30, [sp], #64
  41e574:	ret
  41e578:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x11510>
  41e57c:	add	x0, x0, #0x5a0
  41e580:	bl	42ec48 <_obstack_memory_used@@Base+0x10158>
  41e584:	mov	w21, w0
  41e588:	b	41e508 <wcrtomb@plt+0x1bbe8>
  41e58c:	ldr	w1, [x19, #44]
  41e590:	mov	w0, #0xffffff9c            	// #-100
  41e594:	cmp	w21, w1
  41e598:	ccmp	w1, w0, #0x4, eq  // eq = none
  41e59c:	b.ne	41e5ec <wcrtomb@plt+0x1bccc>  // b.any
  41e5a0:	add	x0, x19, #0x60
  41e5a4:	bl	42ed20 <_obstack_memory_used@@Base+0x10230>
  41e5a8:	tbz	w0, #31, 41e5b4 <wcrtomb@plt+0x1bc94>
  41e5ac:	str	w21, [x19, #44]
  41e5b0:	b	41e538 <wcrtomb@plt+0x1bc18>
  41e5b4:	bl	402580 <close@plt>
  41e5b8:	str	w21, [x19, #44]
  41e5bc:	b	41e538 <wcrtomb@plt+0x1bc18>
  41e5c0:	mov	x0, #0x0                   	// #0
  41e5c4:	ldp	x23, x24, [sp, #48]
  41e5c8:	str	xzr, [x19, #8]
  41e5cc:	b	41e4c8 <wcrtomb@plt+0x1bba8>
  41e5d0:	ldr	w19, [x22]
  41e5d4:	mov	w0, w21
  41e5d8:	bl	402580 <close@plt>
  41e5dc:	mov	x0, #0x0                   	// #0
  41e5e0:	ldp	x23, x24, [sp, #48]
  41e5e4:	str	w19, [x22]
  41e5e8:	b	41e4c8 <wcrtomb@plt+0x1bba8>
  41e5ec:	bl	4025f0 <abort@plt>
  41e5f0:	mov	x4, x2
  41e5f4:	cmp	x2, #0x0
  41e5f8:	adrp	x3, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  41e5fc:	add	x3, x3, #0x8c8
  41e600:	mov	x2, x1
  41e604:	csel	x3, x3, x4, eq  // eq = none
  41e608:	mov	x1, x0
  41e60c:	mov	x0, #0x0                   	// #0
  41e610:	b	41e618 <wcrtomb@plt+0x1bcf8>
  41e614:	nop
  41e618:	stp	x29, x30, [sp, #-64]!
  41e61c:	cmp	x0, #0x0
  41e620:	add	x4, sp, #0x3c
  41e624:	mov	x29, sp
  41e628:	stp	x19, x20, [sp, #16]
  41e62c:	csel	x19, x4, x0, eq  // eq = none
  41e630:	mov	x20, x2
  41e634:	mov	x0, x19
  41e638:	str	x21, [sp, #32]
  41e63c:	mov	x21, x1
  41e640:	bl	402290 <mbrtowc@plt>
  41e644:	cmp	x20, #0x0
  41e648:	mov	x20, x0
  41e64c:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  41e650:	b.hi	41e668 <wcrtomb@plt+0x1bd48>  // b.pmore
  41e654:	mov	x0, x20
  41e658:	ldp	x19, x20, [sp, #16]
  41e65c:	ldr	x21, [sp, #32]
  41e660:	ldp	x29, x30, [sp], #64
  41e664:	ret
  41e668:	mov	w0, #0x0                   	// #0
  41e66c:	bl	42ec98 <_obstack_memory_used@@Base+0x101a8>
  41e670:	tst	w0, #0xff
  41e674:	b.ne	41e654 <wcrtomb@plt+0x1bd34>  // b.any
  41e678:	ldrb	w0, [x21]
  41e67c:	mov	x20, #0x1                   	// #1
  41e680:	str	w0, [x19]
  41e684:	mov	x0, x20
  41e688:	ldp	x19, x20, [sp, #16]
  41e68c:	ldr	x21, [sp, #32]
  41e690:	ldp	x29, x30, [sp], #64
  41e694:	ret
  41e698:	stp	x29, x30, [sp, #-32]!
  41e69c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  41e6a0:	mov	w2, #0x5                   	// #5
  41e6a4:	mov	x29, sp
  41e6a8:	str	x19, [sp, #16]
  41e6ac:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41e6b0:	ldr	x19, [x0, #1088]
  41e6b4:	add	x1, x1, #0x400
  41e6b8:	mov	x0, #0x0                   	// #0
  41e6bc:	bl	4027f0 <dcgettext@plt>
  41e6c0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  41e6c4:	mov	x2, x0
  41e6c8:	add	x1, x1, #0x90
  41e6cc:	mov	x0, x19
  41e6d0:	bl	4028d0 <fprintf@plt>
  41e6d4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  41e6d8:	ldr	w0, [x0, #976]
  41e6dc:	bl	402320 <exit@plt>

000000000041e6e0 <_obstack_begin@@Base>:
  41e6e0:	stp	x29, x30, [sp, #-48]!
  41e6e4:	mov	x29, sp
  41e6e8:	stp	x19, x20, [sp, #16]
  41e6ec:	mov	x19, x0
  41e6f0:	ldrb	w0, [x0, #80]
  41e6f4:	str	x21, [sp, #32]
  41e6f8:	and	w0, w0, #0xfffffffe
  41e6fc:	stp	x3, x4, [x19, #56]
  41e700:	strb	w0, [x19, #80]
  41e704:	cbz	x2, 41e788 <_obstack_begin@@Base+0xa8>
  41e708:	ldrb	w0, [x19, #80]
  41e70c:	cmp	x1, #0x0
  41e710:	sub	x21, x2, #0x1
  41e714:	mov	x20, x2
  41e718:	mov	x2, #0xfe0                 	// #4064
  41e71c:	csel	x1, x1, x2, ne  // ne = any
  41e720:	str	x1, [x19]
  41e724:	str	x21, [x19, #48]
  41e728:	tbz	w0, #0, 41e7ac <_obstack_begin@@Base+0xcc>
  41e72c:	ldr	x0, [x19, #72]
  41e730:	blr	x3
  41e734:	mov	x1, x0
  41e738:	str	x1, [x19, #8]
  41e73c:	cbz	x1, 41e7bc <_obstack_begin@@Base+0xdc>
  41e740:	add	x2, x1, #0x10
  41e744:	neg	x20, x20
  41e748:	ldr	x0, [x19]
  41e74c:	add	x2, x2, x21
  41e750:	and	x20, x2, x20
  41e754:	ldr	x21, [sp, #32]
  41e758:	stp	x20, x20, [x19, #16]
  41e75c:	add	x2, x1, x0
  41e760:	str	x2, [x1]
  41e764:	mov	w0, #0x1                   	// #1
  41e768:	str	x2, [x19, #32]
  41e76c:	ldrb	w2, [x19, #80]
  41e770:	str	xzr, [x1, #8]
  41e774:	and	w1, w2, #0xfffffff9
  41e778:	strb	w1, [x19, #80]
  41e77c:	ldp	x19, x20, [sp, #16]
  41e780:	ldp	x29, x30, [sp], #48
  41e784:	ret
  41e788:	ldrb	w0, [x19, #80]
  41e78c:	cmp	x1, #0x0
  41e790:	mov	x21, #0xf                   	// #15
  41e794:	mov	x2, #0xfe0                 	// #4064
  41e798:	csel	x1, x1, x2, ne  // ne = any
  41e79c:	str	x1, [x19]
  41e7a0:	str	x21, [x19, #48]
  41e7a4:	mov	x20, #0x10                  	// #16
  41e7a8:	tbnz	w0, #0, 41e72c <_obstack_begin@@Base+0x4c>
  41e7ac:	mov	x0, x1
  41e7b0:	blr	x3
  41e7b4:	mov	x1, x0
  41e7b8:	b	41e738 <_obstack_begin@@Base+0x58>
  41e7bc:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  41e7c0:	ldr	x0, [x0, #1072]
  41e7c4:	blr	x0

000000000041e7c8 <_obstack_begin_1@@Base>:
  41e7c8:	stp	x29, x30, [sp, #-48]!
  41e7cc:	mov	x29, sp
  41e7d0:	stp	x19, x20, [sp, #16]
  41e7d4:	mov	x19, x0
  41e7d8:	mov	x0, x5
  41e7dc:	ldrb	w5, [x19, #80]
  41e7e0:	str	x21, [sp, #32]
  41e7e4:	orr	w5, w5, #0x1
  41e7e8:	stp	x3, x4, [x19, #56]
  41e7ec:	str	x0, [x19, #72]
  41e7f0:	strb	w5, [x19, #80]
  41e7f4:	cbz	x2, 41e874 <_obstack_begin_1@@Base+0xac>
  41e7f8:	sub	x21, x2, #0x1
  41e7fc:	mov	x20, x2
  41e800:	ldrb	w2, [x19, #80]
  41e804:	cmp	x1, #0x0
  41e808:	mov	x4, #0xfe0                 	// #4064
  41e80c:	csel	x1, x1, x4, ne  // ne = any
  41e810:	str	x1, [x19]
  41e814:	str	x21, [x19, #48]
  41e818:	tbz	w2, #0, 41e898 <_obstack_begin_1@@Base+0xd0>
  41e81c:	blr	x3
  41e820:	mov	x1, x0
  41e824:	str	x1, [x19, #8]
  41e828:	cbz	x1, 41e8a8 <_obstack_begin_1@@Base+0xe0>
  41e82c:	add	x2, x1, #0x10
  41e830:	neg	x20, x20
  41e834:	ldr	x0, [x19]
  41e838:	add	x2, x2, x21
  41e83c:	and	x20, x2, x20
  41e840:	ldr	x21, [sp, #32]
  41e844:	stp	x20, x20, [x19, #16]
  41e848:	add	x2, x1, x0
  41e84c:	str	x2, [x1]
  41e850:	mov	w0, #0x1                   	// #1
  41e854:	str	x2, [x19, #32]
  41e858:	ldrb	w2, [x19, #80]
  41e85c:	str	xzr, [x1, #8]
  41e860:	and	w1, w2, #0xfffffff9
  41e864:	strb	w1, [x19, #80]
  41e868:	ldp	x19, x20, [sp, #16]
  41e86c:	ldp	x29, x30, [sp], #48
  41e870:	ret
  41e874:	ldrb	w2, [x19, #80]
  41e878:	cmp	x1, #0x0
  41e87c:	mov	x21, #0xf                   	// #15
  41e880:	mov	x4, #0xfe0                 	// #4064
  41e884:	csel	x1, x1, x4, ne  // ne = any
  41e888:	str	x1, [x19]
  41e88c:	str	x21, [x19, #48]
  41e890:	mov	x20, #0x10                  	// #16
  41e894:	tbnz	w2, #0, 41e81c <_obstack_begin_1@@Base+0x54>
  41e898:	mov	x0, x1
  41e89c:	blr	x3
  41e8a0:	mov	x1, x0
  41e8a4:	b	41e824 <_obstack_begin_1@@Base+0x5c>
  41e8a8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  41e8ac:	ldr	x0, [x0, #1072]
  41e8b0:	blr	x0
  41e8b4:	nop

000000000041e8b8 <_obstack_newchunk@@Base>:
  41e8b8:	stp	x29, x30, [sp, #-64]!
  41e8bc:	mov	x29, sp
  41e8c0:	stp	x21, x22, [sp, #32]
  41e8c4:	ldp	x2, x21, [x0, #16]
  41e8c8:	stp	x19, x20, [sp, #16]
  41e8cc:	mov	x19, x0
  41e8d0:	ldr	x3, [x0, #48]
  41e8d4:	ldr	x0, [x0]
  41e8d8:	sub	x21, x21, x2
  41e8dc:	adds	x1, x21, x1
  41e8e0:	str	x23, [sp, #48]
  41e8e4:	cset	x2, cs  // cs = hs, nlast
  41e8e8:	lsr	x20, x21, #3
  41e8ec:	adds	x3, x3, x1
  41e8f0:	add	x20, x20, #0x64
  41e8f4:	cset	x1, cs  // cs = hs, nlast
  41e8f8:	cmp	x0, x3
  41e8fc:	csel	x0, x0, x3, cs  // cs = hs, nlast
  41e900:	add	x3, x20, x3
  41e904:	cmp	x0, x3
  41e908:	csel	x20, x0, x3, cs  // cs = hs, nlast
  41e90c:	cmp	x2, #0x0
  41e910:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  41e914:	ldr	x23, [x19, #8]
  41e918:	b.ne	41e9f8 <_obstack_newchunk@@Base+0x140>  // b.any
  41e91c:	ldrb	w0, [x19, #80]
  41e920:	ldr	x2, [x19, #56]
  41e924:	tbz	w0, #0, 41e9bc <_obstack_newchunk@@Base+0x104>
  41e928:	ldr	x0, [x19, #72]
  41e92c:	mov	x1, x20
  41e930:	blr	x2
  41e934:	mov	x22, x0
  41e938:	cbz	x22, 41e9f8 <_obstack_newchunk@@Base+0x140>
  41e93c:	mov	x3, x22
  41e940:	str	x22, [x19, #8]
  41e944:	ldr	x1, [x19, #16]
  41e948:	add	x20, x22, x20
  41e94c:	ldr	x0, [x19, #48]
  41e950:	str	x23, [x22, #8]
  41e954:	str	x20, [x19, #32]
  41e958:	mov	x2, x21
  41e95c:	str	x20, [x3], #16
  41e960:	add	x20, x3, x0
  41e964:	bic	x20, x20, x0
  41e968:	mov	x0, x20
  41e96c:	bl	4022a0 <memcpy@plt>
  41e970:	ldrb	w2, [x19, #80]
  41e974:	tbnz	w2, #1, 41e994 <_obstack_newchunk@@Base+0xdc>
  41e978:	ldr	x1, [x19, #48]
  41e97c:	add	x0, x23, #0x10
  41e980:	ldr	x3, [x19, #16]
  41e984:	add	x0, x0, x1
  41e988:	bic	x0, x0, x1
  41e98c:	cmp	x3, x0
  41e990:	b.eq	41e9cc <_obstack_newchunk@@Base+0x114>  // b.none
  41e994:	ldrb	w0, [x19, #80]
  41e998:	add	x21, x20, x21
  41e99c:	ldr	x23, [sp, #48]
  41e9a0:	and	w0, w0, #0xfffffffd
  41e9a4:	stp	x20, x21, [x19, #16]
  41e9a8:	strb	w0, [x19, #80]
  41e9ac:	ldp	x19, x20, [sp, #16]
  41e9b0:	ldp	x21, x22, [sp, #32]
  41e9b4:	ldp	x29, x30, [sp], #64
  41e9b8:	ret
  41e9bc:	mov	x0, x20
  41e9c0:	blr	x2
  41e9c4:	mov	x22, x0
  41e9c8:	b	41e938 <_obstack_newchunk@@Base+0x80>
  41e9cc:	ldr	x0, [x23, #8]
  41e9d0:	ldr	x3, [x19, #64]
  41e9d4:	str	x0, [x22, #8]
  41e9d8:	tbz	w2, #0, 41e9ec <_obstack_newchunk@@Base+0x134>
  41e9dc:	ldr	x0, [x19, #72]
  41e9e0:	mov	x1, x23
  41e9e4:	blr	x3
  41e9e8:	b	41e994 <_obstack_newchunk@@Base+0xdc>
  41e9ec:	mov	x0, x23
  41e9f0:	blr	x3
  41e9f4:	b	41e994 <_obstack_newchunk@@Base+0xdc>
  41e9f8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x2a510>
  41e9fc:	ldr	x0, [x0, #1072]
  41ea00:	blr	x0
  41ea04:	nop

000000000041ea08 <_obstack_allocated_p@@Base>:
  41ea08:	ldr	x0, [x0, #8]
  41ea0c:	cbz	x0, 41ea30 <_obstack_allocated_p@@Base+0x28>
  41ea10:	cmp	x1, x0
  41ea14:	b.ls	41ea24 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  41ea18:	ldr	x2, [x0]
  41ea1c:	cmp	x2, x1
  41ea20:	b.cs	41ea34 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  41ea24:	ldr	x0, [x0, #8]
  41ea28:	cbnz	x0, 41ea10 <_obstack_allocated_p@@Base+0x8>
  41ea2c:	mov	w0, #0x0                   	// #0
  41ea30:	ret
  41ea34:	mov	w0, #0x1                   	// #1
  41ea38:	ret
  41ea3c:	nop

000000000041ea40 <_obstack_free@@Base>:
  41ea40:	stp	x29, x30, [sp, #-48]!
  41ea44:	mov	x29, sp
  41ea48:	str	x21, [sp, #32]
  41ea4c:	mov	x21, x1
  41ea50:	ldr	x1, [x0, #8]
  41ea54:	cbz	x1, 41eac0 <_obstack_free@@Base+0x80>
  41ea58:	stp	x19, x20, [sp, #16]
  41ea5c:	mov	x19, x0
  41ea60:	cmp	x1, x21
  41ea64:	b.cs	41ea74 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  41ea68:	ldr	x0, [x1]
  41ea6c:	cmp	x0, x21
  41ea70:	b.cs	41ead0 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  41ea74:	ldrb	w0, [x19, #80]
  41ea78:	ldr	x20, [x1, #8]
  41ea7c:	ldr	x2, [x19, #64]
  41ea80:	tbz	w0, #0, 41eaa4 <_obstack_free@@Base+0x64>
  41ea84:	ldr	x0, [x19, #72]
  41ea88:	blr	x2
  41ea8c:	ldrb	w0, [x19, #80]
  41ea90:	orr	w0, w0, #0x2
  41ea94:	strb	w0, [x19, #80]
  41ea98:	cbz	x20, 41eabc <_obstack_free@@Base+0x7c>
  41ea9c:	mov	x1, x20
  41eaa0:	b	41ea60 <_obstack_free@@Base+0x20>
  41eaa4:	mov	x0, x1
  41eaa8:	blr	x2
  41eaac:	ldrb	w0, [x19, #80]
  41eab0:	orr	w0, w0, #0x2
  41eab4:	strb	w0, [x19, #80]
  41eab8:	cbnz	x20, 41ea9c <_obstack_free@@Base+0x5c>
  41eabc:	ldp	x19, x20, [sp, #16]
  41eac0:	cbnz	x21, 41eae8 <_obstack_free@@Base+0xa8>
  41eac4:	ldr	x21, [sp, #32]
  41eac8:	ldp	x29, x30, [sp], #48
  41eacc:	ret
  41ead0:	stp	x1, x21, [x19, #8]
  41ead4:	stp	x21, x0, [x19, #24]
  41ead8:	ldp	x19, x20, [sp, #16]
  41eadc:	ldr	x21, [sp, #32]
  41eae0:	ldp	x29, x30, [sp], #48
  41eae4:	ret
  41eae8:	stp	x19, x20, [sp, #16]
  41eaec:	bl	4025f0 <abort@plt>

000000000041eaf0 <_obstack_memory_used@@Base>:
  41eaf0:	ldr	x1, [x0, #8]
  41eaf4:	mov	x0, #0x0                   	// #0
  41eaf8:	cbz	x1, 41eb14 <_obstack_memory_used@@Base+0x24>
  41eafc:	nop
  41eb00:	ldr	x2, [x1]
  41eb04:	sub	x2, x2, x1
  41eb08:	ldr	x1, [x1, #8]
  41eb0c:	add	x0, x0, x2
  41eb10:	cbnz	x1, 41eb00 <_obstack_memory_used@@Base+0x10>
  41eb14:	ret
  41eb18:	mov	x3, x0
  41eb1c:	ldr	x0, [x1, #72]
  41eb20:	ldr	x4, [x1, #104]
  41eb24:	cmp	x4, x0
  41eb28:	b.le	41ebcc <_obstack_memory_used@@Base+0xdc>
  41eb2c:	ldr	x5, [x1, #8]
  41eb30:	ldr	w6, [x1, #144]
  41eb34:	ldrb	w4, [x5, x0]
  41eb38:	cmp	w6, #0x1
  41eb3c:	strb	w4, [x3]
  41eb40:	b.le	41eb60 <_obstack_memory_used@@Base+0x70>
  41eb44:	ldr	x6, [x1, #48]
  41eb48:	cmp	x0, x6
  41eb4c:	b.eq	41eb60 <_obstack_memory_used@@Base+0x70>  // b.none
  41eb50:	ldr	x6, [x1, #16]
  41eb54:	ldr	w6, [x6, x0, lsl #2]
  41eb58:	cmn	w6, #0x1
  41eb5c:	b.eq	41eba4 <_obstack_memory_used@@Base+0xb4>  // b.none
  41eb60:	cmp	w4, #0x5c
  41eb64:	b.eq	41eb90 <_obstack_memory_used@@Base+0xa0>  // b.none
  41eb68:	cmp	w4, #0x5b
  41eb6c:	b.eq	41ebdc <_obstack_memory_used@@Base+0xec>  // b.none
  41eb70:	cmp	w4, #0x5d
  41eb74:	b.eq	41ec28 <_obstack_memory_used@@Base+0x138>  // b.none
  41eb78:	cmp	w4, #0x5e
  41eb7c:	b.ne	41ebb4 <_obstack_memory_used@@Base+0xc4>  // b.any
  41eb80:	mov	w1, #0x19                  	// #25
  41eb84:	mov	w0, #0x1                   	// #1
  41eb88:	strb	w1, [x3, #8]
  41eb8c:	ret
  41eb90:	tbz	w2, #0, 41eba4 <_obstack_memory_used@@Base+0xb4>
  41eb94:	ldr	x4, [x1, #88]
  41eb98:	add	x2, x0, #0x1
  41eb9c:	cmp	x2, x4
  41eba0:	b.lt	41ec38 <_obstack_memory_used@@Base+0x148>  // b.tstop
  41eba4:	mov	w1, #0x1                   	// #1
  41eba8:	mov	w0, #0x1                   	// #1
  41ebac:	strb	w1, [x3, #8]
  41ebb0:	ret
  41ebb4:	cmp	w4, #0x2d
  41ebb8:	b.ne	41eba4 <_obstack_memory_used@@Base+0xb4>  // b.any
  41ebbc:	mov	w1, #0x16                  	// #22
  41ebc0:	mov	w0, #0x1                   	// #1
  41ebc4:	strb	w1, [x3, #8]
  41ebc8:	ret
  41ebcc:	mov	w1, #0x2                   	// #2
  41ebd0:	mov	w0, #0x0                   	// #0
  41ebd4:	strb	w1, [x3, #8]
  41ebd8:	ret
  41ebdc:	ldr	x1, [x1, #88]
  41ebe0:	add	x4, x0, #0x1
  41ebe4:	cmp	x4, x1
  41ebe8:	b.ge	41ec10 <_obstack_memory_used@@Base+0x120>  // b.tcont
  41ebec:	add	x0, x5, x0
  41ebf0:	ldrb	w0, [x0, #1]
  41ebf4:	strb	w0, [x3]
  41ebf8:	cmp	w0, #0x3a
  41ebfc:	b.eq	41ec74 <_obstack_memory_used@@Base+0x184>  // b.none
  41ec00:	cmp	w0, #0x3d
  41ec04:	b.eq	41ec64 <_obstack_memory_used@@Base+0x174>  // b.none
  41ec08:	cmp	w0, #0x2e
  41ec0c:	b.eq	41ec54 <_obstack_memory_used@@Base+0x164>  // b.none
  41ec10:	mov	w1, #0x1                   	// #1
  41ec14:	mov	w2, #0x5b                  	// #91
  41ec18:	mov	w0, #0x1                   	// #1
  41ec1c:	strb	w2, [x3]
  41ec20:	strb	w1, [x3, #8]
  41ec24:	ret
  41ec28:	mov	w1, #0x15                  	// #21
  41ec2c:	mov	w0, #0x1                   	// #1
  41ec30:	strb	w1, [x3, #8]
  41ec34:	ret
  41ec38:	str	x2, [x1, #72]
  41ec3c:	mov	w0, #0x1                   	// #1
  41ec40:	mov	w1, #0x1                   	// #1
  41ec44:	ldrb	w2, [x5, x2]
  41ec48:	strb	w2, [x3]
  41ec4c:	strb	w1, [x3, #8]
  41ec50:	ret
  41ec54:	mov	w1, #0x1a                  	// #26
  41ec58:	mov	w0, #0x2                   	// #2
  41ec5c:	strb	w1, [x3, #8]
  41ec60:	ret
  41ec64:	mov	w1, #0x1c                  	// #28
  41ec68:	mov	w0, #0x2                   	// #2
  41ec6c:	strb	w1, [x3, #8]
  41ec70:	ret
  41ec74:	tbz	w2, #2, 41ec10 <_obstack_memory_used@@Base+0x120>
  41ec78:	mov	w1, #0x1e                  	// #30
  41ec7c:	mov	w0, #0x2                   	// #2
  41ec80:	strb	w1, [x3, #8]
  41ec84:	ret
  41ec88:	stp	x29, x30, [sp, #-144]!
  41ec8c:	mov	x13, x0
  41ec90:	add	x8, x3, x3, lsl #1
  41ec94:	mov	x29, sp
  41ec98:	stp	x27, x28, [sp, #80]
  41ec9c:	ldr	x27, [x0, #152]
  41eca0:	stp	x23, x24, [sp, #48]
  41eca4:	stp	x25, x26, [sp, #64]
  41eca8:	mov	w26, w1
  41ecac:	ldr	x0, [x27, #48]
  41ecb0:	add	x23, x0, x8, lsl #3
  41ecb4:	ldr	x9, [x23, #8]
  41ecb8:	cmp	x9, #0x0
  41ecbc:	b.le	41ee68 <_obstack_memory_used@@Base+0x378>
  41ecc0:	mov	x0, #0x1                   	// #1
  41ecc4:	stp	x21, x22, [sp, #32]
  41ecc8:	lsl	x0, x0, x2
  41eccc:	str	x0, [sp, #128]
  41ecd0:	mvn	w0, w0
  41ecd4:	and	w0, w0, #0xffff
  41ecd8:	add	x22, x4, x4, lsl #2
  41ecdc:	str	w0, [sp, #140]
  41ece0:	and	w0, w1, #0x2
  41ece4:	mov	x14, x3
  41ece8:	mov	x25, x2
  41ecec:	mov	x24, x4
  41ecf0:	lsl	x22, x22, #3
  41ecf4:	stp	x19, x20, [sp, #16]
  41ecf8:	mov	x19, #0x0                   	// #0
  41ecfc:	str	w0, [sp, #108]
  41ed00:	and	w0, w1, #0x1
  41ed04:	str	w0, [sp, #136]
  41ed08:	b	41ed20 <_obstack_memory_used@@Base+0x230>
  41ed0c:	cmp	w5, #0x4
  41ed10:	b.eq	41edb0 <_obstack_memory_used@@Base+0x2c0>  // b.none
  41ed14:	add	x19, x19, #0x1
  41ed18:	cmp	x19, x9
  41ed1c:	b.ge	41ee60 <_obstack_memory_used@@Base+0x370>  // b.tcont
  41ed20:	ldr	x5, [x23, #16]
  41ed24:	ldr	x7, [x27]
  41ed28:	ldr	x20, [x5, x19, lsl #3]
  41ed2c:	lsl	x6, x20, #4
  41ed30:	add	x5, x7, x6
  41ed34:	ldrb	w5, [x5, #8]
  41ed38:	cmp	w5, #0x8
  41ed3c:	b.eq	41ed7c <_obstack_memory_used@@Base+0x28c>  // b.none
  41ed40:	cmp	w5, #0x9
  41ed44:	b.ne	41ed0c <_obstack_memory_used@@Base+0x21c>  // b.any
  41ed48:	ldr	w0, [sp, #108]
  41ed4c:	cbz	w0, 41ed14 <_obstack_memory_used@@Base+0x224>
  41ed50:	ldr	x0, [x7, x6]
  41ed54:	cmp	x0, x25
  41ed58:	b.ne	41ed14 <_obstack_memory_used@@Base+0x224>  // b.any
  41ed5c:	mov	w0, #0x0                   	// #0
  41ed60:	ldp	x19, x20, [sp, #16]
  41ed64:	ldp	x21, x22, [sp, #32]
  41ed68:	ldp	x23, x24, [sp, #48]
  41ed6c:	ldp	x25, x26, [sp, #64]
  41ed70:	ldp	x27, x28, [sp, #80]
  41ed74:	ldp	x29, x30, [sp], #144
  41ed78:	ret
  41ed7c:	ldr	w0, [sp, #136]
  41ed80:	cbz	w0, 41ed14 <_obstack_memory_used@@Base+0x224>
  41ed84:	ldr	x0, [x7, x6]
  41ed88:	cmp	x0, x25
  41ed8c:	b.ne	41ed14 <_obstack_memory_used@@Base+0x224>  // b.any
  41ed90:	mov	w0, #0xffffffff            	// #-1
  41ed94:	ldp	x19, x20, [sp, #16]
  41ed98:	ldp	x21, x22, [sp, #32]
  41ed9c:	ldp	x23, x24, [sp, #48]
  41eda0:	ldp	x25, x26, [sp, #64]
  41eda4:	ldp	x27, x28, [sp, #80]
  41eda8:	ldp	x29, x30, [sp], #144
  41edac:	ret
  41edb0:	cmn	x24, #0x1
  41edb4:	b.eq	41ed14 <_obstack_memory_used@@Base+0x224>  // b.none
  41edb8:	ldr	x21, [x13, #216]
  41edbc:	add	x28, x20, x20, lsl #1
  41edc0:	ldr	w0, [sp, #108]
  41edc4:	cmp	x25, #0x3f
  41edc8:	lsl	x28, x28, #3
  41edcc:	add	x21, x21, x22
  41edd0:	b.gt	41ee80 <_obstack_memory_used@@Base+0x390>
  41edd4:	cbnz	w0, 41efac <_obstack_memory_used@@Base+0x4bc>
  41edd8:	ldr	x0, [x21]
  41eddc:	cmp	x20, x0
  41ede0:	b.ne	41ee40 <_obstack_memory_used@@Base+0x350>  // b.any
  41ede4:	ldr	x5, [sp, #128]
  41ede8:	mov	x4, x24
  41edec:	ldrh	w3, [x21, #34]
  41edf0:	mov	x2, x25
  41edf4:	mov	w1, w26
  41edf8:	mov	x0, x13
  41edfc:	tst	x3, x5
  41ee00:	b.eq	41ee40 <_obstack_memory_used@@Base+0x350>  // b.none
  41ee04:	ldr	x3, [x27, #40]
  41ee08:	stp	x14, x13, [sp, #112]
  41ee0c:	add	x3, x3, x28
  41ee10:	ldr	x3, [x3, #16]
  41ee14:	ldr	x3, [x3]
  41ee18:	cmp	x14, x3
  41ee1c:	b.eq	41efbc <_obstack_memory_used@@Base+0x4cc>  // b.none
  41ee20:	bl	41ec88 <_obstack_memory_used@@Base+0x198>
  41ee24:	cmn	w0, #0x1
  41ee28:	b.eq	41ed90 <_obstack_memory_used@@Base+0x2a0>  // b.none
  41ee2c:	ldp	x14, x13, [sp, #112]
  41ee30:	ldrh	w0, [x21, #34]
  41ee34:	ldr	w1, [sp, #140]
  41ee38:	and	w0, w1, w0
  41ee3c:	strh	w0, [x21, #34]
  41ee40:	ldrb	w0, [x21, #32]
  41ee44:	add	x21, x21, #0x28
  41ee48:	cbnz	w0, 41edd8 <_obstack_memory_used@@Base+0x2e8>
  41ee4c:	ldr	x9, [x23, #8]
  41ee50:	add	x19, x19, #0x1
  41ee54:	cmp	x19, x9
  41ee58:	b.lt	41ed20 <_obstack_memory_used@@Base+0x230>  // b.tstop
  41ee5c:	nop
  41ee60:	ldp	x19, x20, [sp, #16]
  41ee64:	ldp	x21, x22, [sp, #32]
  41ee68:	asr	w0, w26, #1
  41ee6c:	ldp	x23, x24, [sp, #48]
  41ee70:	ldp	x25, x26, [sp, #64]
  41ee74:	ldp	x27, x28, [sp, #80]
  41ee78:	ldp	x29, x30, [sp], #144
  41ee7c:	ret
  41ee80:	cbnz	w0, 41ef1c <_obstack_memory_used@@Base+0x42c>
  41ee84:	nop
  41ee88:	ldr	x3, [x21]
  41ee8c:	mov	x4, x24
  41ee90:	mov	x2, x25
  41ee94:	mov	w1, w26
  41ee98:	mov	x0, x13
  41ee9c:	add	x21, x21, #0x28
  41eea0:	cmp	x20, x3
  41eea4:	b.ne	41eed4 <_obstack_memory_used@@Base+0x3e4>  // b.any
  41eea8:	ldr	x3, [x27, #40]
  41eeac:	stp	x14, x13, [sp, #112]
  41eeb0:	add	x3, x3, x28
  41eeb4:	ldr	x3, [x3, #16]
  41eeb8:	ldr	x3, [x3]
  41eebc:	cmp	x14, x3
  41eec0:	b.eq	41efbc <_obstack_memory_used@@Base+0x4cc>  // b.none
  41eec4:	bl	41ec88 <_obstack_memory_used@@Base+0x198>
  41eec8:	cmn	w0, #0x1
  41eecc:	ldp	x14, x13, [sp, #112]
  41eed0:	b.eq	41ed90 <_obstack_memory_used@@Base+0x2a0>  // b.none
  41eed4:	ldurb	w0, [x21, #-8]
  41eed8:	cbnz	w0, 41ee88 <_obstack_memory_used@@Base+0x398>
  41eedc:	ldr	x9, [x23, #8]
  41eee0:	b	41ee50 <_obstack_memory_used@@Base+0x360>
  41eee4:	ldr	x3, [x27, #40]
  41eee8:	stp	x14, x13, [sp, #112]
  41eeec:	add	x3, x3, x28
  41eef0:	ldr	x3, [x3, #16]
  41eef4:	ldr	x3, [x3]
  41eef8:	cmp	x14, x3
  41eefc:	b.eq	41efbc <_obstack_memory_used@@Base+0x4cc>  // b.none
  41ef00:	bl	41ec88 <_obstack_memory_used@@Base+0x198>
  41ef04:	cmn	w0, #0x1
  41ef08:	b.eq	41ed90 <_obstack_memory_used@@Base+0x2a0>  // b.none
  41ef0c:	ldp	x14, x13, [sp, #112]
  41ef10:	cbz	w0, 41ed5c <_obstack_memory_used@@Base+0x26c>
  41ef14:	ldurb	w0, [x21, #-8]
  41ef18:	cbz	w0, 41ee4c <_obstack_memory_used@@Base+0x35c>
  41ef1c:	ldr	x3, [x21]
  41ef20:	mov	x4, x24
  41ef24:	mov	x2, x25
  41ef28:	mov	w1, w26
  41ef2c:	mov	x0, x13
  41ef30:	add	x21, x21, #0x28
  41ef34:	cmp	x20, x3
  41ef38:	b.eq	41eee4 <_obstack_memory_used@@Base+0x3f4>  // b.none
  41ef3c:	b	41ef14 <_obstack_memory_used@@Base+0x424>
  41ef40:	ldr	x5, [sp, #128]
  41ef44:	mov	x4, x24
  41ef48:	ldrh	w3, [x21, #34]
  41ef4c:	mov	x2, x25
  41ef50:	mov	w1, w26
  41ef54:	mov	x0, x13
  41ef58:	tst	x3, x5
  41ef5c:	b.eq	41efa0 <_obstack_memory_used@@Base+0x4b0>  // b.none
  41ef60:	ldr	x3, [x27, #40]
  41ef64:	add	x3, x3, x28
  41ef68:	ldr	x3, [x3, #16]
  41ef6c:	ldr	x3, [x3]
  41ef70:	cmp	x14, x3
  41ef74:	b.eq	41efbc <_obstack_memory_used@@Base+0x4cc>  // b.none
  41ef78:	stp	x13, x14, [sp, #112]
  41ef7c:	bl	41ec88 <_obstack_memory_used@@Base+0x198>
  41ef80:	cmn	w0, #0x1
  41ef84:	ldp	x13, x14, [sp, #112]
  41ef88:	b.eq	41ed90 <_obstack_memory_used@@Base+0x2a0>  // b.none
  41ef8c:	cbz	w0, 41ed5c <_obstack_memory_used@@Base+0x26c>
  41ef90:	ldrh	w0, [x21, #34]
  41ef94:	ldr	w1, [sp, #140]
  41ef98:	and	w0, w1, w0
  41ef9c:	strh	w0, [x21, #34]
  41efa0:	ldrb	w0, [x21, #32]
  41efa4:	add	x21, x21, #0x28
  41efa8:	cbz	w0, 41ee4c <_obstack_memory_used@@Base+0x35c>
  41efac:	ldr	x0, [x21]
  41efb0:	cmp	x0, x20
  41efb4:	b.eq	41ef40 <_obstack_memory_used@@Base+0x450>  // b.none
  41efb8:	b	41efa0 <_obstack_memory_used@@Base+0x4b0>
  41efbc:	ldr	w0, [sp, #136]
  41efc0:	ldp	x19, x20, [sp, #16]
  41efc4:	neg	w0, w0
  41efc8:	ldp	x21, x22, [sp, #32]
  41efcc:	ldp	x23, x24, [sp, #48]
  41efd0:	ldp	x25, x26, [sp, #64]
  41efd4:	ldp	x27, x28, [sp, #80]
  41efd8:	ldp	x29, x30, [sp], #144
  41efdc:	ret
  41efe0:	stp	x29, x30, [sp, #-48]!
  41efe4:	mov	x29, sp
  41efe8:	stp	x19, x20, [sp, #16]
  41efec:	mov	x19, x0
  41eff0:	mov	x20, x1
  41eff4:	ldr	x0, [x0]
  41eff8:	cbz	x0, 41f030 <_obstack_memory_used@@Base+0x540>
  41effc:	ldr	x1, [x19, #8]
  41f000:	str	x21, [sp, #32]
  41f004:	ldr	x21, [x19, #16]
  41f008:	cbnz	x1, 41f064 <_obstack_memory_used@@Base+0x574>
  41f00c:	str	x20, [x21]
  41f010:	ldr	x1, [x19, #8]
  41f014:	mov	w0, #0x1                   	// #1
  41f018:	ldr	x21, [sp, #32]
  41f01c:	add	x1, x1, #0x1
  41f020:	str	x1, [x19, #8]
  41f024:	ldp	x19, x20, [sp, #16]
  41f028:	ldp	x29, x30, [sp], #48
  41f02c:	ret
  41f030:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  41f034:	ldr	q0, [x0, #2768]
  41f038:	mov	x0, #0x8                   	// #8
  41f03c:	str	q0, [x19]
  41f040:	bl	402440 <malloc@plt>
  41f044:	mov	x1, x0
  41f048:	str	x0, [x19, #16]
  41f04c:	cbz	x0, 41f0cc <_obstack_memory_used@@Base+0x5dc>
  41f050:	str	x20, [x1]
  41f054:	mov	w0, #0x1                   	// #1
  41f058:	ldp	x19, x20, [sp, #16]
  41f05c:	ldp	x29, x30, [sp], #48
  41f060:	ret
  41f064:	cmp	x0, x1
  41f068:	b.eq	41f0d8 <_obstack_memory_used@@Base+0x5e8>  // b.none
  41f06c:	ldr	x0, [x21]
  41f070:	lsl	x2, x1, #3
  41f074:	cmp	x0, x20
  41f078:	b.gt	41f0ac <_obstack_memory_used@@Base+0x5bc>
  41f07c:	add	x0, x21, x2
  41f080:	ldur	x0, [x0, #-8]
  41f084:	cmp	x20, x0
  41f088:	b.ge	41f0a4 <_obstack_memory_used@@Base+0x5b4>  // b.tcont
  41f08c:	sub	x1, x21, #0x8
  41f090:	str	x0, [x21, x2]
  41f094:	sub	x2, x2, #0x8
  41f098:	ldr	x0, [x1, x2]
  41f09c:	cmp	x0, x20
  41f0a0:	b.gt	41f090 <_obstack_memory_used@@Base+0x5a0>
  41f0a4:	str	x20, [x21, x2]
  41f0a8:	b	41f010 <_obstack_memory_used@@Base+0x520>
  41f0ac:	cmp	x1, #0x0
  41f0b0:	b.le	41f0a4 <_obstack_memory_used@@Base+0x5b4>
  41f0b4:	mov	x1, x21
  41f0b8:	add	x0, x21, #0x8
  41f0bc:	bl	4022c0 <memmove@plt>
  41f0c0:	mov	x2, #0x0                   	// #0
  41f0c4:	str	x20, [x21, x2]
  41f0c8:	b	41f010 <_obstack_memory_used@@Base+0x520>
  41f0cc:	mov	w0, #0x0                   	// #0
  41f0d0:	stp	xzr, xzr, [x19]
  41f0d4:	b	41f024 <_obstack_memory_used@@Base+0x534>
  41f0d8:	lsl	x0, x1, #1
  41f0dc:	str	x0, [x19]
  41f0e0:	lsl	x1, x1, #4
  41f0e4:	mov	x0, x21
  41f0e8:	bl	402550 <realloc@plt>
  41f0ec:	mov	x21, x0
  41f0f0:	cbz	x0, 41f100 <_obstack_memory_used@@Base+0x610>
  41f0f4:	str	x0, [x19, #16]
  41f0f8:	ldr	x1, [x19, #8]
  41f0fc:	b	41f06c <_obstack_memory_used@@Base+0x57c>
  41f100:	mov	w0, #0x0                   	// #0
  41f104:	ldr	x21, [sp, #32]
  41f108:	b	41f024 <_obstack_memory_used@@Base+0x534>
  41f10c:	nop
  41f110:	stp	x29, x30, [sp, #-80]!
  41f114:	mov	x29, sp
  41f118:	stp	x21, x22, [sp, #32]
  41f11c:	add	x22, x1, #0x20
  41f120:	mov	x21, x1
  41f124:	stp	x23, x24, [sp, #48]
  41f128:	mov	x24, x2
  41f12c:	ldr	x23, [x1, #16]
  41f130:	str	x25, [sp, #64]
  41f134:	str	x2, [x1]
  41f138:	mov	x25, x0
  41f13c:	str	x23, [x1, #32]
  41f140:	str	xzr, [x22, #8]
  41f144:	lsl	x0, x23, #3
  41f148:	bl	402440 <malloc@plt>
  41f14c:	str	x0, [x22, #16]
  41f150:	cbz	x0, 41f22c <_obstack_memory_used@@Base+0x73c>
  41f154:	stp	x19, x20, [sp, #16]
  41f158:	cmp	x23, #0x0
  41f15c:	mov	x19, #0x0                   	// #0
  41f160:	b.gt	41f170 <_obstack_memory_used@@Base+0x680>
  41f164:	b	41f1b4 <_obstack_memory_used@@Base+0x6c4>
  41f168:	cmp	x19, x23
  41f16c:	b.ge	41f1b4 <_obstack_memory_used@@Base+0x6c4>  // b.tcont
  41f170:	ldr	x4, [x21, #24]
  41f174:	ldr	x3, [x25]
  41f178:	ldr	x20, [x4, x19, lsl #3]
  41f17c:	add	x19, x19, #0x1
  41f180:	add	x3, x3, x20, lsl #4
  41f184:	ldrb	w3, [x3, #8]
  41f188:	tbnz	w3, #3, 41f168 <_obstack_memory_used@@Base+0x678>
  41f18c:	ldp	x2, x1, [x22]
  41f190:	ldr	x0, [x22, #16]
  41f194:	cmp	x2, x1
  41f198:	b.eq	41f204 <_obstack_memory_used@@Base+0x714>  // b.none
  41f19c:	add	x2, x1, #0x1
  41f1a0:	str	x2, [x22, #8]
  41f1a4:	str	x20, [x0, x1, lsl #3]
  41f1a8:	ldr	x23, [x21, #16]
  41f1ac:	cmp	x19, x23
  41f1b0:	b.lt	41f170 <_obstack_memory_used@@Base+0x680>  // b.tstop
  41f1b4:	ldr	x19, [x25, #136]
  41f1b8:	ldr	x20, [x25, #64]
  41f1bc:	and	x24, x24, x19
  41f1c0:	add	x24, x24, x24, lsl #1
  41f1c4:	lsl	x24, x24, #3
  41f1c8:	add	x22, x20, x24
  41f1cc:	ldr	x2, [x20, x24]
  41f1d0:	ldp	x0, x3, [x22, #8]
  41f1d4:	add	x1, x2, #0x1
  41f1d8:	cmp	x0, x2
  41f1dc:	b.le	41f244 <_obstack_memory_used@@Base+0x754>
  41f1e0:	str	x1, [x20, x24]
  41f1e4:	mov	w0, #0x0                   	// #0
  41f1e8:	str	x21, [x3, x2, lsl #3]
  41f1ec:	ldp	x19, x20, [sp, #16]
  41f1f0:	ldp	x21, x22, [sp, #32]
  41f1f4:	ldp	x23, x24, [sp, #48]
  41f1f8:	ldr	x25, [sp, #64]
  41f1fc:	ldp	x29, x30, [sp], #80
  41f200:	ret
  41f204:	add	x1, x1, #0x1
  41f208:	lsl	x2, x1, #1
  41f20c:	str	x2, [x22]
  41f210:	lsl	x1, x1, #4
  41f214:	bl	402550 <realloc@plt>
  41f218:	cbz	x0, 41f228 <_obstack_memory_used@@Base+0x738>
  41f21c:	str	x0, [x22, #16]
  41f220:	ldr	x1, [x22, #8]
  41f224:	b	41f19c <_obstack_memory_used@@Base+0x6ac>
  41f228:	ldp	x19, x20, [sp, #16]
  41f22c:	mov	w0, #0xc                   	// #12
  41f230:	ldp	x21, x22, [sp, #32]
  41f234:	ldp	x23, x24, [sp, #48]
  41f238:	ldr	x25, [sp, #64]
  41f23c:	ldp	x29, x30, [sp], #80
  41f240:	ret
  41f244:	mov	x0, x3
  41f248:	lsl	x23, x1, #1
  41f24c:	lsl	x1, x1, #4
  41f250:	bl	402550 <realloc@plt>
  41f254:	mov	x3, x0
  41f258:	cbz	x0, 41f228 <_obstack_memory_used@@Base+0x738>
  41f25c:	ldr	x2, [x20, x24]
  41f260:	stp	x23, x0, [x22, #8]
  41f264:	add	x1, x2, #0x1
  41f268:	b	41f1e0 <_obstack_memory_used@@Base+0x6f0>
  41f26c:	nop
  41f270:	stp	x29, x30, [sp, #-144]!
  41f274:	mov	x29, sp
  41f278:	stp	x19, x20, [sp, #16]
  41f27c:	mov	x19, x0
  41f280:	stp	x21, x22, [sp, #32]
  41f284:	ldr	x21, [x0, #64]
  41f288:	ldr	x0, [x0, #88]
  41f28c:	ldr	x20, [x19, #48]
  41f290:	cmp	x21, x0
  41f294:	csel	x21, x21, x0, le
  41f298:	cmp	x21, x20
  41f29c:	b.le	41f334 <_obstack_memory_used@@Base+0x844>
  41f2a0:	add	x22, x19, #0x20
  41f2a4:	str	x23, [sp, #48]
  41f2a8:	ldr	x4, [x19, #120]
  41f2ac:	sub	x2, x21, x20
  41f2b0:	ldr	x23, [x19, #32]
  41f2b4:	cbnz	x4, 41f3b0 <_obstack_memory_used@@Base+0x8c0>
  41f2b8:	ldr	x0, [x19, #40]
  41f2bc:	ldr	x1, [x19]
  41f2c0:	add	x0, x20, x0
  41f2c4:	add	x1, x1, x0
  41f2c8:	mov	x3, x22
  41f2cc:	add	x0, sp, #0x4c
  41f2d0:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  41f2d4:	sub	x1, x0, #0x1
  41f2d8:	cmn	x1, #0x3
  41f2dc:	b.hi	41f34c <_obstack_memory_used@@Base+0x85c>  // b.pmore
  41f2e0:	cmn	x0, #0x2
  41f2e4:	b.eq	41f42c <_obstack_memory_used@@Base+0x93c>  // b.none
  41f2e8:	ldr	x3, [x19, #16]
  41f2ec:	add	x1, x20, x0
  41f2f0:	ldr	w4, [sp, #76]
  41f2f4:	add	x0, x20, #0x1
  41f2f8:	lsl	x2, x20, #2
  41f2fc:	cmp	x0, x1
  41f300:	str	w4, [x3, x20, lsl #2]
  41f304:	b.ge	41f390 <_obstack_memory_used@@Base+0x8a0>  // b.tcont
  41f308:	mvn	x20, x20
  41f30c:	add	x0, x2, #0x4
  41f310:	add	x2, x20, x1
  41f314:	add	x0, x3, x0
  41f318:	mov	x20, x1
  41f31c:	mov	w1, #0xff                  	// #255
  41f320:	lsl	x2, x2, #2
  41f324:	bl	402510 <memset@plt>
  41f328:	cmp	x21, x20
  41f32c:	b.gt	41f2a8 <_obstack_memory_used@@Base+0x7b8>
  41f330:	ldr	x23, [sp, #48]
  41f334:	dup	v0.2d, x20
  41f338:	ldp	x21, x22, [sp, #32]
  41f33c:	str	q0, [x19, #48]
  41f340:	ldp	x19, x20, [sp, #16]
  41f344:	ldp	x29, x30, [sp], #144
  41f348:	ret
  41f34c:	ldr	x0, [x19]
  41f350:	ldr	x2, [x19, #40]
  41f354:	add	x0, x0, x20
  41f358:	ldr	x1, [x19, #120]
  41f35c:	ldrb	w4, [x0, x2]
  41f360:	str	w4, [sp, #76]
  41f364:	cbnz	x1, 41f45c <_obstack_memory_used@@Base+0x96c>
  41f368:	ldr	x3, [x19, #16]
  41f36c:	str	x23, [x19, #32]
  41f370:	mov	x0, #0x1                   	// #1
  41f374:	add	x1, x20, x0
  41f378:	add	x0, x20, #0x1
  41f37c:	lsl	x2, x20, #2
  41f380:	str	w4, [x3, x20, lsl #2]
  41f384:	cmp	x0, x1
  41f388:	b.lt	41f308 <_obstack_memory_used@@Base+0x818>  // b.tstop
  41f38c:	nop
  41f390:	mov	x20, x0
  41f394:	cmp	x21, x0
  41f398:	b.le	41f330 <_obstack_memory_used@@Base+0x840>
  41f39c:	ldr	x4, [x19, #120]
  41f3a0:	sub	x2, x21, x20
  41f3a4:	ldr	x23, [x19, #32]
  41f3a8:	cbz	x4, 41f2b8 <_obstack_memory_used@@Base+0x7c8>
  41f3ac:	nop
  41f3b0:	ldr	w0, [x19, #144]
  41f3b4:	cmp	w0, #0x0
  41f3b8:	b.le	41f424 <_obstack_memory_used@@Base+0x934>
  41f3bc:	cmp	x2, #0x0
  41f3c0:	b.le	41f424 <_obstack_memory_used@@Base+0x934>
  41f3c4:	mov	x1, #0x1                   	// #1
  41f3c8:	b	41f3dc <_obstack_memory_used@@Base+0x8ec>
  41f3cc:	cmp	x1, x2
  41f3d0:	b.eq	41f424 <_obstack_memory_used@@Base+0x934>  // b.none
  41f3d4:	ldr	x4, [x19, #120]
  41f3d8:	mov	x1, x7
  41f3dc:	ldr	x0, [x19]
  41f3e0:	add	x3, sp, #0x50
  41f3e4:	add	x5, x3, x1
  41f3e8:	add	x7, x1, #0x1
  41f3ec:	ldr	x3, [x19, #40]
  41f3f0:	add	x0, x0, x1
  41f3f4:	add	x0, x0, x20
  41f3f8:	add	x0, x0, x3
  41f3fc:	ldr	x3, [x19, #8]
  41f400:	ldurb	w6, [x0, #-1]
  41f404:	add	x0, x3, x1
  41f408:	add	x0, x0, x20
  41f40c:	ldrb	w3, [x4, x6]
  41f410:	sturb	w3, [x0, #-1]
  41f414:	sturb	w3, [x5, #-1]
  41f418:	ldr	w0, [x19, #144]
  41f41c:	cmp	w0, w1
  41f420:	b.gt	41f3cc <_obstack_memory_used@@Base+0x8dc>
  41f424:	add	x1, sp, #0x50
  41f428:	b	41f2c8 <_obstack_memory_used@@Base+0x7d8>
  41f42c:	ldr	x1, [x19, #64]
  41f430:	ldr	x0, [x19, #88]
  41f434:	cmp	x1, x0
  41f438:	b.ge	41f34c <_obstack_memory_used@@Base+0x85c>  // b.tcont
  41f43c:	dup	v0.2d, x20
  41f440:	str	x23, [x19, #32]
  41f444:	ldp	x21, x22, [sp, #32]
  41f448:	ldr	x23, [sp, #48]
  41f44c:	str	q0, [x19, #48]
  41f450:	ldp	x19, x20, [sp, #16]
  41f454:	ldp	x29, x30, [sp], #144
  41f458:	ret
  41f45c:	and	x4, x4, #0xff
  41f460:	ldrb	w4, [x1, x4]
  41f464:	b	41f368 <_obstack_memory_used@@Base+0x878>
  41f468:	stp	x29, x30, [sp, #-192]!
  41f46c:	mov	x29, sp
  41f470:	stp	x19, x20, [sp, #16]
  41f474:	mov	x19, x0
  41f478:	stp	x21, x22, [sp, #32]
  41f47c:	ldrb	w1, [x0, #138]
  41f480:	ldr	x21, [x0, #64]
  41f484:	ldr	x0, [x0, #88]
  41f488:	ldr	x20, [x19, #48]
  41f48c:	cmp	x21, x0
  41f490:	csel	x21, x21, x0, le
  41f494:	cbnz	w1, 41f4a0 <_obstack_memory_used@@Base+0x9b0>
  41f498:	ldr	x0, [x19, #120]
  41f49c:	cbz	x0, 41f5e0 <_obstack_memory_used@@Base+0xaf0>
  41f4a0:	ldr	x22, [x19, #56]
  41f4a4:	cmp	x21, x20
  41f4a8:	b.le	41f5c8 <_obstack_memory_used@@Base+0xad8>
  41f4ac:	stp	x23, x24, [sp, #48]
  41f4b0:	add	x24, x19, #0x20
  41f4b4:	stp	x25, x26, [sp, #64]
  41f4b8:	sub	x26, x21, x20
  41f4bc:	stp	x27, x28, [sp, #80]
  41f4c0:	add	x27, sp, #0x74
  41f4c4:	ldr	x2, [x19, #120]
  41f4c8:	ldr	x0, [x19, #32]
  41f4cc:	str	x0, [sp, #120]
  41f4d0:	cbnz	x2, 41f7a0 <_obstack_memory_used@@Base+0xcb0>
  41f4d4:	ldr	x0, [x19, #40]
  41f4d8:	ldr	x25, [x19]
  41f4dc:	add	x0, x22, x0
  41f4e0:	add	x25, x25, x0
  41f4e4:	mov	x2, x26
  41f4e8:	mov	x3, x24
  41f4ec:	mov	x0, x27
  41f4f0:	mov	x1, x25
  41f4f4:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  41f4f8:	sub	x26, x0, #0x1
  41f4fc:	mov	x23, x0
  41f500:	cmn	x26, #0x4
  41f504:	b.hi	41f850 <_obstack_memory_used@@Base+0xd60>  // b.pmore
  41f508:	ldr	w28, [sp, #116]
  41f50c:	mov	x24, x20
  41f510:	mov	w0, w28
  41f514:	bl	402830 <towupper@plt>
  41f518:	mov	w27, w0
  41f51c:	cmp	w28, w0
  41f520:	b.eq	41f828 <_obstack_memory_used@@Base+0xd38>  // b.none
  41f524:	add	x2, sp, #0x78
  41f528:	add	x28, sp, #0x80
  41f52c:	mov	x0, x28
  41f530:	mov	w1, w27
  41f534:	bl	402920 <wcrtomb@plt>
  41f538:	mov	x2, x0
  41f53c:	cmp	x23, x0
  41f540:	b.ne	41f968 <_obstack_memory_used@@Base+0xe78>  // b.any
  41f544:	ldr	x0, [x19, #8]
  41f548:	mov	x1, x28
  41f54c:	mov	x2, x23
  41f550:	add	x0, x0, x20
  41f554:	bl	4022a0 <memcpy@plt>
  41f558:	ldrb	w0, [x19, #140]
  41f55c:	cbnz	w0, 41f8c4 <_obstack_memory_used@@Base+0xdd4>
  41f560:	ldr	x0, [x19, #16]
  41f564:	add	x20, x20, #0x1
  41f568:	add	x1, x23, x24
  41f56c:	add	x22, x23, x22
  41f570:	cmp	x20, x1
  41f574:	lsl	x3, x24, #2
  41f578:	str	w27, [x0, x24, lsl #2]
  41f57c:	b.ge	41f840 <_obstack_memory_used@@Base+0xd50>  // b.tcont
  41f580:	mvn	x2, x24
  41f584:	add	x3, x3, #0x4
  41f588:	add	x2, x2, x1
  41f58c:	add	x0, x0, x3
  41f590:	mov	x20, x1
  41f594:	mov	w1, #0xff                  	// #255
  41f598:	lsl	x2, x2, #2
  41f59c:	bl	402510 <memset@plt>
  41f5a0:	ldp	x23, x24, [sp, #48]
  41f5a4:	ldp	x25, x26, [sp, #64]
  41f5a8:	ldp	x27, x28, [sp, #80]
  41f5ac:	b	41f4a4 <_obstack_memory_used@@Base+0x9b4>
  41f5b0:	ldr	x0, [sp, #120]
  41f5b4:	ldp	x23, x24, [sp, #48]
  41f5b8:	ldp	x25, x26, [sp, #64]
  41f5bc:	ldp	x27, x28, [sp, #80]
  41f5c0:	str	x0, [x19, #32]
  41f5c4:	nop
  41f5c8:	mov	w0, #0x0                   	// #0
  41f5cc:	stp	x20, x22, [x19, #48]
  41f5d0:	ldp	x19, x20, [sp, #16]
  41f5d4:	ldp	x21, x22, [sp, #32]
  41f5d8:	ldp	x29, x30, [sp], #192
  41f5dc:	ret
  41f5e0:	ldrb	w0, [x19, #140]
  41f5e4:	cbnz	w0, 41f4a0 <_obstack_memory_used@@Base+0x9b0>
  41f5e8:	cmp	x20, x21
  41f5ec:	b.ge	41f818 <_obstack_memory_used@@Base+0xd28>  // b.tcont
  41f5f0:	stp	x23, x24, [sp, #48]
  41f5f4:	add	x24, x19, #0x20
  41f5f8:	stp	x25, x26, [sp, #64]
  41f5fc:	stp	x27, x28, [sp, #80]
  41f600:	b	41f674 <_obstack_memory_used@@Base+0xb84>
  41f604:	mov	w1, w0
  41f608:	add	x2, sp, #0x78
  41f60c:	add	x0, sp, #0x80
  41f610:	bl	402920 <wcrtomb@plt>
  41f614:	cmp	x22, x0
  41f618:	b.ne	41f804 <_obstack_memory_used@@Base+0xd14>  // b.any
  41f61c:	ldr	x0, [x19, #8]
  41f620:	mov	x2, x22
  41f624:	add	x1, sp, #0x80
  41f628:	add	x0, x0, x20
  41f62c:	bl	4022a0 <memcpy@plt>
  41f630:	ldr	x0, [x19, #16]
  41f634:	add	x20, x20, #0x1
  41f638:	add	x22, x22, x23
  41f63c:	lsl	x1, x23, #2
  41f640:	cmp	x20, x22
  41f644:	str	w25, [x0, x23, lsl #2]
  41f648:	b.ge	41f66c <_obstack_memory_used@@Base+0xb7c>  // b.tcont
  41f64c:	mvn	x2, x23
  41f650:	add	x1, x1, #0x4
  41f654:	add	x2, x2, x22
  41f658:	add	x0, x0, x1
  41f65c:	mov	x20, x22
  41f660:	mov	w1, #0xff                  	// #255
  41f664:	lsl	x2, x2, #2
  41f668:	bl	402510 <memset@plt>
  41f66c:	cmp	x20, x21
  41f670:	b.ge	41f80c <_obstack_memory_used@@Base+0xd1c>  // b.tcont
  41f674:	ldr	x25, [x19]
  41f678:	mov	x23, x20
  41f67c:	ldr	x22, [x19, #40]
  41f680:	add	x0, x25, x22
  41f684:	ldrb	w26, [x0, x20]
  41f688:	tbnz	w26, #7, 41f698 <_obstack_memory_used@@Base+0xba8>
  41f68c:	mov	x0, x24
  41f690:	bl	402610 <mbsinit@plt>
  41f694:	cbnz	w0, 41f708 <_obstack_memory_used@@Base+0xc18>
  41f698:	ldr	x4, [x19, #32]
  41f69c:	add	x22, x22, x20
  41f6a0:	sub	x26, x21, x20
  41f6a4:	add	x1, x25, x22
  41f6a8:	mov	x2, x26
  41f6ac:	mov	x3, x24
  41f6b0:	add	x0, sp, #0x74
  41f6b4:	str	x4, [sp, #120]
  41f6b8:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  41f6bc:	mov	x22, x0
  41f6c0:	sub	x0, x0, #0x1
  41f6c4:	add	x27, sp, #0x74
  41f6c8:	cmn	x0, #0x4
  41f6cc:	b.hi	41f730 <_obstack_memory_used@@Base+0xc40>  // b.pmore
  41f6d0:	ldr	w28, [sp, #116]
  41f6d4:	mov	w0, w28
  41f6d8:	bl	402830 <towupper@plt>
  41f6dc:	mov	w25, w0
  41f6e0:	cmp	w28, w0
  41f6e4:	b.ne	41f604 <_obstack_memory_used@@Base+0xb14>  // b.any
  41f6e8:	ldp	x3, x0, [x19]
  41f6ec:	mov	x2, x22
  41f6f0:	ldr	x1, [x19, #40]
  41f6f4:	add	x1, x20, x1
  41f6f8:	add	x1, x3, x1
  41f6fc:	add	x0, x0, x20
  41f700:	bl	4022a0 <memcpy@plt>
  41f704:	b	41f630 <_obstack_memory_used@@Base+0xb40>
  41f708:	bl	402560 <__ctype_toupper_loc@plt>
  41f70c:	ldr	x0, [x0]
  41f710:	ldr	x1, [x19, #8]
  41f714:	ldr	w0, [x0, x26, lsl #2]
  41f718:	strb	w0, [x1, x20]
  41f71c:	ldp	x1, x0, [x19, #8]
  41f720:	ldrb	w1, [x1, x20]
  41f724:	str	w1, [x0, x20, lsl #2]
  41f728:	add	x20, x20, #0x1
  41f72c:	b	41f66c <_obstack_memory_used@@Base+0xb7c>
  41f730:	cmn	x0, #0x3
  41f734:	b.eq	41f76c <_obstack_memory_used@@Base+0xc7c>  // b.none
  41f738:	ldp	x0, x1, [x19]
  41f73c:	cmn	x22, #0x1
  41f740:	ldr	x2, [x19, #40]
  41f744:	add	x0, x0, x20
  41f748:	ldrb	w0, [x0, x2]
  41f74c:	strb	w0, [x1, x20]
  41f750:	add	x20, x20, #0x1
  41f754:	ldr	x1, [x19, #16]
  41f758:	str	w0, [x1, x23, lsl #2]
  41f75c:	b.ne	41f66c <_obstack_memory_used@@Base+0xb7c>  // b.any
  41f760:	ldr	x0, [sp, #120]
  41f764:	str	x0, [x19, #32]
  41f768:	b	41f66c <_obstack_memory_used@@Base+0xb7c>
  41f76c:	ldr	x1, [x19, #64]
  41f770:	ldr	x0, [x19, #88]
  41f774:	cmp	x1, x0
  41f778:	b.lt	41fcb4 <_obstack_memory_used@@Base+0x11c4>  // b.tstop
  41f77c:	ldp	x0, x1, [x19]
  41f780:	ldr	x2, [x19, #40]
  41f784:	add	x0, x0, x20
  41f788:	ldrb	w0, [x0, x2]
  41f78c:	strb	w0, [x1, x20]
  41f790:	add	x20, x20, #0x1
  41f794:	ldr	x1, [x19, #16]
  41f798:	str	w0, [x1, x23, lsl #2]
  41f79c:	b	41f66c <_obstack_memory_used@@Base+0xb7c>
  41f7a0:	ldr	w6, [x19, #144]
  41f7a4:	cmp	w6, #0x0
  41f7a8:	b.le	41fccc <_obstack_memory_used@@Base+0x11dc>
  41f7ac:	cmp	x26, #0x0
  41f7b0:	b.le	41fccc <_obstack_memory_used@@Base+0x11dc>
  41f7b4:	ldr	x1, [x19, #40]
  41f7b8:	add	x28, sp, #0x80
  41f7bc:	ldr	x5, [x19]
  41f7c0:	add	x1, x22, x1
  41f7c4:	sub	x1, x1, #0x1
  41f7c8:	mov	x0, #0x1                   	// #1
  41f7cc:	add	x5, x5, x1
  41f7d0:	b	41f7e0 <_obstack_memory_used@@Base+0xcf0>
  41f7d4:	cmp	x0, x26
  41f7d8:	mov	x0, x3
  41f7dc:	b.eq	41f7fc <_obstack_memory_used@@Base+0xd0c>  // b.none
  41f7e0:	ldrb	w4, [x5, x0]
  41f7e4:	add	x1, x28, x0
  41f7e8:	cmp	w6, w0
  41f7ec:	add	x3, x0, #0x1
  41f7f0:	ldrb	w4, [x2, x4]
  41f7f4:	sturb	w4, [x1, #-1]
  41f7f8:	b.gt	41f7d4 <_obstack_memory_used@@Base+0xce4>
  41f7fc:	mov	x25, x28
  41f800:	b	41f4e4 <_obstack_memory_used@@Base+0x9f4>
  41f804:	mov	x22, x20
  41f808:	b	41f4c4 <_obstack_memory_used@@Base+0x9d4>
  41f80c:	ldp	x23, x24, [sp, #48]
  41f810:	ldp	x25, x26, [sp, #64]
  41f814:	ldp	x27, x28, [sp, #80]
  41f818:	dup	v0.2d, x20
  41f81c:	mov	w0, #0x0                   	// #0
  41f820:	str	q0, [x19, #48]
  41f824:	b	41f5d0 <_obstack_memory_used@@Base+0xae0>
  41f828:	ldr	x0, [x19, #8]
  41f82c:	mov	x1, x25
  41f830:	mov	x2, x23
  41f834:	add	x0, x0, x20
  41f838:	bl	4022a0 <memcpy@plt>
  41f83c:	b	41f558 <_obstack_memory_used@@Base+0xa68>
  41f840:	ldp	x23, x24, [sp, #48]
  41f844:	ldp	x25, x26, [sp, #64]
  41f848:	ldp	x27, x28, [sp, #80]
  41f84c:	b	41f4a4 <_obstack_memory_used@@Base+0x9b4>
  41f850:	cmn	x26, #0x3
  41f854:	b.ne	41f868 <_obstack_memory_used@@Base+0xd78>  // b.any
  41f858:	ldr	x1, [x19, #64]
  41f85c:	ldr	x0, [x19, #88]
  41f860:	cmp	x1, x0
  41f864:	b.lt	41f5b0 <_obstack_memory_used@@Base+0xac0>  // b.tstop
  41f868:	ldr	x0, [x19]
  41f86c:	ldr	x2, [x19, #40]
  41f870:	add	x0, x0, x22
  41f874:	ldr	x1, [x19, #120]
  41f878:	ldrb	w0, [x0, x2]
  41f87c:	cbnz	x1, 41fd20 <_obstack_memory_used@@Base+0x1230>
  41f880:	ldr	x1, [x19, #8]
  41f884:	mov	x2, x20
  41f888:	strb	w0, [x1, x20]
  41f88c:	ldrb	w1, [x19, #140]
  41f890:	cbnz	w1, 41fd14 <_obstack_memory_used@@Base+0x1224>
  41f894:	ldr	x1, [x19, #16]
  41f898:	add	x22, x22, #0x1
  41f89c:	add	x20, x20, #0x1
  41f8a0:	cmn	x23, #0x1
  41f8a4:	str	w0, [x1, x2, lsl #2]
  41f8a8:	b.ne	41f840 <_obstack_memory_used@@Base+0xd50>  // b.any
  41f8ac:	ldr	x0, [sp, #120]
  41f8b0:	ldp	x23, x24, [sp, #48]
  41f8b4:	ldp	x25, x26, [sp, #64]
  41f8b8:	ldp	x27, x28, [sp, #80]
  41f8bc:	str	x0, [x19, #32]
  41f8c0:	b	41f4a4 <_obstack_memory_used@@Base+0x9b4>
  41f8c4:	cmp	x26, #0x3
  41f8c8:	ldr	x2, [x19, #24]
  41f8cc:	b.ls	41fd04 <_obstack_memory_used@@Base+0x1214>  // b.plast
  41f8d0:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  41f8d4:	lsr	x1, x23, #1
  41f8d8:	add	x0, x2, x20, lsl #3
  41f8dc:	dup	v3.2d, x22
  41f8e0:	ldr	q1, [x3, #2752]
  41f8e4:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x13510>
  41f8e8:	add	x1, x0, x1, lsl #4
  41f8ec:	ldr	q2, [x3, #2112]
  41f8f0:	mov	v0.16b, v1.16b
  41f8f4:	add	v1.2d, v1.2d, v2.2d
  41f8f8:	add	v0.2d, v3.2d, v0.2d
  41f8fc:	str	q0, [x0], #16
  41f900:	cmp	x0, x1
  41f904:	b.ne	41f8f0 <_obstack_memory_used@@Base+0xe00>  // b.any
  41f908:	and	x0, x23, #0xfffffffffffffffe
  41f90c:	tbz	w23, #0, 41f560 <_obstack_memory_used@@Base+0xa70>
  41f910:	add	x3, x0, x20
  41f914:	add	x4, x0, x22
  41f918:	add	x1, x0, #0x1
  41f91c:	cmp	x23, x1
  41f920:	str	x4, [x2, x3, lsl #3]
  41f924:	b.ls	41f560 <_obstack_memory_used@@Base+0xa70>  // b.plast
  41f928:	add	x4, x1, x20
  41f92c:	add	x3, x1, x22
  41f930:	add	x1, x0, #0x2
  41f934:	cmp	x23, x1
  41f938:	str	x3, [x2, x4, lsl #3]
  41f93c:	b.ls	41f560 <_obstack_memory_used@@Base+0xa70>  // b.plast
  41f940:	add	x3, x20, x1
  41f944:	add	x1, x1, x22
  41f948:	add	x0, x0, #0x3
  41f94c:	cmp	x0, x23
  41f950:	str	x1, [x2, x3, lsl #3]
  41f954:	b.cs	41f560 <_obstack_memory_used@@Base+0xa70>  // b.hs, b.nlast
  41f958:	add	x1, x0, x20
  41f95c:	add	x0, x0, x22
  41f960:	str	x0, [x2, x1, lsl #3]
  41f964:	b	41f560 <_obstack_memory_used@@Base+0xa70>
  41f968:	cmn	x0, #0x1
  41f96c:	b.eq	41f828 <_obstack_memory_used@@Base+0xd38>  // b.none
  41f970:	add	x24, x0, x20
  41f974:	ldr	x0, [x19, #64]
  41f978:	cmp	x24, x0
  41f97c:	b.hi	41f5b0 <_obstack_memory_used@@Base+0xac0>  // b.pmore
  41f980:	ldr	x1, [x19, #24]
  41f984:	cbz	x1, 41fcd8 <_obstack_memory_used@@Base+0x11e8>
  41f988:	ldrb	w0, [x19, #140]
  41f98c:	cbnz	w0, 41fa28 <_obstack_memory_used@@Base+0xf38>
  41f990:	cbz	x20, 41fa20 <_obstack_memory_used@@Base+0xf30>
  41f994:	sub	x0, x20, #0x1
  41f998:	cmp	x0, #0x4
  41f99c:	ldr	x1, [x19, #24]
  41f9a0:	b.ls	41fd0c <_obstack_memory_used@@Base+0x121c>  // b.plast
  41f9a4:	adrp	x4, 431000 <_obstack_memory_used@@Base+0x12510>
  41f9a8:	lsr	x0, x20, #1
  41f9ac:	mov	x3, x1
  41f9b0:	ldr	q0, [x4, #2752]
  41f9b4:	adrp	x4, 432000 <_obstack_memory_used@@Base+0x13510>
  41f9b8:	add	x0, x1, x0, lsl #4
  41f9bc:	ldr	q1, [x4, #2112]
  41f9c0:	mov	v2.16b, v0.16b
  41f9c4:	add	v0.2d, v0.2d, v1.2d
  41f9c8:	str	q2, [x3], #16
  41f9cc:	cmp	x3, x0
  41f9d0:	b.ne	41f9c0 <_obstack_memory_used@@Base+0xed0>  // b.any
  41f9d4:	and	x0, x20, #0xfffffffffffffffe
  41f9d8:	tbz	w20, #0, 41fa20 <_obstack_memory_used@@Base+0xf30>
  41f9dc:	str	x0, [x1, x0, lsl #3]
  41f9e0:	add	x3, x0, #0x1
  41f9e4:	cmp	x20, x3
  41f9e8:	b.ls	41fa20 <_obstack_memory_used@@Base+0xf30>  // b.plast
  41f9ec:	str	x3, [x1, x3, lsl #3]
  41f9f0:	add	x3, x0, #0x2
  41f9f4:	cmp	x20, x3
  41f9f8:	b.ls	41fa20 <_obstack_memory_used@@Base+0xf30>  // b.plast
  41f9fc:	str	x3, [x1, x3, lsl #3]
  41fa00:	add	x3, x0, #0x3
  41fa04:	cmp	x20, x3
  41fa08:	b.ls	41fa20 <_obstack_memory_used@@Base+0xf30>  // b.plast
  41fa0c:	str	x3, [x1, x3, lsl #3]
  41fa10:	add	x0, x0, #0x4
  41fa14:	cmp	x20, x0
  41fa18:	b.ls	41fa20 <_obstack_memory_used@@Base+0xf30>  // b.plast
  41fa1c:	str	x0, [x1, x0, lsl #3]
  41fa20:	mov	w0, #0x1                   	// #1
  41fa24:	strb	w0, [x19, #140]
  41fa28:	ldr	x0, [x19, #8]
  41fa2c:	mov	x1, x28
  41fa30:	str	x2, [sp, #104]
  41fa34:	add	x0, x0, x20
  41fa38:	bl	4022a0 <memcpy@plt>
  41fa3c:	ldp	x0, x4, [x19, #16]
  41fa40:	str	w27, [x0, x20, lsl #2]
  41fa44:	ldr	x2, [sp, #104]
  41fa48:	lsl	x5, x20, #2
  41fa4c:	lsl	x3, x20, #3
  41fa50:	cmp	x2, #0x1
  41fa54:	str	x22, [x4, x20, lsl #3]
  41fa58:	add	x9, x0, x5
  41fa5c:	add	x10, x4, x3
  41fa60:	b.ls	41fc6c <_obstack_memory_used@@Base+0x117c>  // b.plast
  41fa64:	cmp	x23, #0x1
  41fa68:	mov	x1, #0x1                   	// #1
  41fa6c:	b.ls	41fb7c <_obstack_memory_used@@Base+0x108c>  // b.plast
  41fa70:	cmp	x23, x2
  41fa74:	add	x3, x3, #0x8
  41fa78:	csel	x6, x23, x2, ls  // ls = plast
  41fa7c:	add	x3, x4, x3
  41fa80:	add	x7, x6, x20
  41fa84:	add	x5, x5, #0x4
  41fa88:	add	x5, x0, x5
  41fa8c:	sub	x8, x6, #0x2
  41fa90:	add	x11, x0, x7, lsl #2
  41fa94:	add	x7, x4, x7, lsl #3
  41fa98:	cmp	x11, x3
  41fa9c:	ccmp	x7, x5, #0x0, hi  // hi = pmore
  41faa0:	ccmp	x8, #0x7, #0x0, ls  // ls = plast
  41faa4:	b.ls	41fd54 <_obstack_memory_used@@Base+0x1264>  // b.plast
  41faa8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x13510>
  41faac:	sub	x7, x6, #0x1
  41fab0:	mov	x1, x3
  41fab4:	mov	x3, x5
  41fab8:	ldr	q1, [x8, #2128]
  41fabc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x13510>
  41fac0:	lsr	x5, x7, #2
  41fac4:	dup	v3.2d, x22
  41fac8:	ldr	q7, [x8, #2144]
  41facc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x13510>
  41fad0:	mvni	v5.4s, #0x0
  41fad4:	add	x5, x1, x5, lsl #5
  41fad8:	ldr	q6, [x8, #2112]
  41fadc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x13510>
  41fae0:	ldr	q4, [x8, #2160]
  41fae4:	mov	v0.16b, v1.16b
  41fae8:	add	v1.2d, v1.2d, v7.2d
  41faec:	add	v2.2d, v0.2d, v6.2d
  41faf0:	add	v16.2d, v0.2d, v3.2d
  41faf4:	add	v0.2d, v0.2d, v4.2d
  41faf8:	add	v2.2d, v2.2d, v3.2d
  41fafc:	stp	q16, q2, [x1]
  41fb00:	add	x1, x1, #0x20
  41fb04:	cmp	x1, x5
  41fb08:	str	q5, [x3], #16
  41fb0c:	b.ne	41fae4 <_obstack_memory_used@@Base+0xff4>  // b.any
  41fb10:	and	x3, x7, #0xfffffffffffffffc
  41fb14:	mov	x1, v0.d[1]
  41fb18:	cmp	x7, x3
  41fb1c:	add	x5, x3, #0x1
  41fb20:	b.eq	41fb74 <_obstack_memory_used@@Base+0x1084>  // b.none
  41fb24:	add	x8, x20, x5
  41fb28:	add	x5, x22, x5
  41fb2c:	mov	w7, #0xffffffff            	// #-1
  41fb30:	add	x1, x3, #0x2
  41fb34:	cmp	x6, x1
  41fb38:	str	x5, [x4, x8, lsl #3]
  41fb3c:	str	w7, [x0, x8, lsl #2]
  41fb40:	b.ls	41fb74 <_obstack_memory_used@@Base+0x1084>  // b.plast
  41fb44:	add	x5, x20, x1
  41fb48:	add	x8, x22, x1
  41fb4c:	add	x1, x3, #0x3
  41fb50:	cmp	x6, x1
  41fb54:	str	x8, [x4, x5, lsl #3]
  41fb58:	str	w7, [x0, x5, lsl #2]
  41fb5c:	b.ls	41fb74 <_obstack_memory_used@@Base+0x1084>  // b.plast
  41fb60:	add	x5, x20, x1
  41fb64:	add	x6, x22, x1
  41fb68:	add	x1, x3, #0x4
  41fb6c:	str	x6, [x4, x5, lsl #3]
  41fb70:	str	w7, [x0, x5, lsl #2]
  41fb74:	cmp	x2, x1
  41fb78:	b.ls	41fc6c <_obstack_memory_used@@Base+0x117c>  // b.plast
  41fb7c:	sub	x6, x2, x1
  41fb80:	add	x5, x1, #0x1
  41fb84:	add	x3, x1, x20
  41fb88:	cmp	x2, x5
  41fb8c:	lsl	x8, x6, #3
  41fb90:	mov	x11, #0x8                   	// #8
  41fb94:	lsl	x7, x6, #2
  41fb98:	csel	x8, x8, x11, cs  // cs = hs, nlast
  41fb9c:	add	x8, x8, x3, lsl #3
  41fba0:	mov	x11, #0x4                   	// #4
  41fba4:	csel	x7, x7, x11, cs  // cs = hs, nlast
  41fba8:	add	x8, x4, x8
  41fbac:	add	x7, x7, x3, lsl #2
  41fbb0:	add	x11, x0, x3, lsl #2
  41fbb4:	add	x7, x0, x7
  41fbb8:	cmp	x11, x8
  41fbbc:	add	x3, x4, x3, lsl #3
  41fbc0:	sub	x8, x2, #0x1
  41fbc4:	ccmp	x3, x7, #0x2, cc  // cc = lo, ul, last
  41fbc8:	sub	x7, x8, x1
  41fbcc:	cset	w8, cs  // cs = hs, nlast
  41fbd0:	cmp	x7, #0x6
  41fbd4:	ccmp	x2, x5, #0x0, hi  // hi = pmore
  41fbd8:	cset	w7, cs  // cs = hs, nlast
  41fbdc:	tst	w8, w7
  41fbe0:	b.eq	41fd2c <_obstack_memory_used@@Base+0x123c>  // b.none
  41fbe4:	mvni	v2.4s, #0x0
  41fbe8:	cmp	x2, x5
  41fbec:	add	x5, x26, x22
  41fbf0:	fmov	d0, x5
  41fbf4:	csinc	x5, x6, xzr, cs  // cs = hs, nlast
  41fbf8:	mov	x6, x11
  41fbfc:	dup	v1.2d, v0.d[0]
  41fc00:	lsr	x7, x5, #2
  41fc04:	add	x7, x3, x7, lsl #5
  41fc08:	stp	q1, q1, [x3]
  41fc0c:	add	x3, x3, #0x20
  41fc10:	cmp	x3, x7
  41fc14:	str	q2, [x6], #16
  41fc18:	b.ne	41fc08 <_obstack_memory_used@@Base+0x1118>  // b.any
  41fc1c:	and	x3, x5, #0xfffffffffffffffc
  41fc20:	add	x1, x1, x3
  41fc24:	cmp	x5, x3
  41fc28:	b.eq	41fc6c <_obstack_memory_used@@Base+0x117c>  // b.none
  41fc2c:	add	x5, x1, x20
  41fc30:	mov	w6, #0xffffffff            	// #-1
  41fc34:	add	x3, x1, #0x1
  41fc38:	cmp	x3, x2
  41fc3c:	str	d0, [x4, x5, lsl #3]
  41fc40:	str	w6, [x0, x5, lsl #2]
  41fc44:	b.cs	41fc6c <_obstack_memory_used@@Base+0x117c>  // b.hs, b.nlast
  41fc48:	add	x3, x3, x20
  41fc4c:	add	x1, x1, #0x2
  41fc50:	cmp	x2, x1
  41fc54:	str	d0, [x4, x3, lsl #3]
  41fc58:	str	w6, [x0, x3, lsl #2]
  41fc5c:	b.ls	41fc6c <_obstack_memory_used@@Base+0x117c>  // b.plast
  41fc60:	add	x20, x20, x1
  41fc64:	str	d0, [x4, x20, lsl #3]
  41fc68:	str	w6, [x0, x20, lsl #2]
  41fc6c:	sub	x0, x2, x23
  41fc70:	ldp	x1, x2, [x19, #88]
  41fc74:	add	x1, x0, x1
  41fc78:	str	x1, [x19, #88]
  41fc7c:	cmp	x22, x2
  41fc80:	b.ge	41fc90 <_obstack_memory_used@@Base+0x11a0>  // b.tcont
  41fc84:	ldr	x2, [x19, #104]
  41fc88:	add	x0, x2, x0
  41fc8c:	str	x0, [x19, #104]
  41fc90:	ldr	x21, [x19, #64]
  41fc94:	mov	x20, x24
  41fc98:	add	x22, x23, x22
  41fc9c:	cmp	x21, x1
  41fca0:	csel	x21, x21, x1, le
  41fca4:	ldp	x23, x24, [sp, #48]
  41fca8:	ldp	x25, x26, [sp, #64]
  41fcac:	ldp	x27, x28, [sp, #80]
  41fcb0:	b	41f4a4 <_obstack_memory_used@@Base+0x9b4>
  41fcb4:	ldr	x0, [sp, #120]
  41fcb8:	ldp	x23, x24, [sp, #48]
  41fcbc:	ldp	x25, x26, [sp, #64]
  41fcc0:	ldp	x27, x28, [sp, #80]
  41fcc4:	str	x0, [x19, #32]
  41fcc8:	b	41f818 <_obstack_memory_used@@Base+0xd28>
  41fccc:	add	x28, sp, #0x80
  41fcd0:	mov	x25, x28
  41fcd4:	b	41f4e4 <_obstack_memory_used@@Base+0x9f4>
  41fcd8:	lsl	x0, x0, #3
  41fcdc:	str	x2, [sp, #104]
  41fce0:	bl	402440 <malloc@plt>
  41fce4:	str	x0, [x19, #24]
  41fce8:	ldr	x2, [sp, #104]
  41fcec:	cbnz	x0, 41f988 <_obstack_memory_used@@Base+0xe98>
  41fcf0:	mov	w0, #0xc                   	// #12
  41fcf4:	ldp	x23, x24, [sp, #48]
  41fcf8:	ldp	x25, x26, [sp, #64]
  41fcfc:	ldp	x27, x28, [sp, #80]
  41fd00:	b	41f5d0 <_obstack_memory_used@@Base+0xae0>
  41fd04:	mov	x0, #0x0                   	// #0
  41fd08:	b	41f910 <_obstack_memory_used@@Base+0xe20>
  41fd0c:	mov	x0, #0x0                   	// #0
  41fd10:	b	41f9dc <_obstack_memory_used@@Base+0xeec>
  41fd14:	ldr	x1, [x19, #24]
  41fd18:	str	x22, [x1, x20, lsl #3]
  41fd1c:	b	41f894 <_obstack_memory_used@@Base+0xda4>
  41fd20:	and	x0, x0, #0xff
  41fd24:	ldrb	w0, [x1, x0]
  41fd28:	b	41f880 <_obstack_memory_used@@Base+0xd90>
  41fd2c:	add	x0, x26, x22
  41fd30:	fmov	d0, x0
  41fd34:	mov	w0, #0xffffffff            	// #-1
  41fd38:	str	d0, [x10, x1, lsl #3]
  41fd3c:	cmp	x2, x5
  41fd40:	str	w0, [x9, x1, lsl #2]
  41fd44:	mov	x1, x5
  41fd48:	add	x5, x5, #0x1
  41fd4c:	b.hi	41fd38 <_obstack_memory_used@@Base+0x1248>  // b.pmore
  41fd50:	b	41fc6c <_obstack_memory_used@@Base+0x117c>
  41fd54:	mov	w3, #0xffffffff            	// #-1
  41fd58:	add	x5, x22, x1
  41fd5c:	str	x5, [x10, x1, lsl #3]
  41fd60:	str	w3, [x9, x1, lsl #2]
  41fd64:	add	x1, x1, #0x1
  41fd68:	cmp	x6, x1
  41fd6c:	b.hi	41fd58 <_obstack_memory_used@@Base+0x1268>  // b.pmore
  41fd70:	b	41fb74 <_obstack_memory_used@@Base+0x1084>
  41fd74:	nop
  41fd78:	stp	x29, x30, [sp, #-96]!
  41fd7c:	mov	x29, sp
  41fd80:	stp	x21, x22, [sp, #32]
  41fd84:	ldp	x21, x4, [x0, #8]
  41fd88:	stp	x19, x20, [sp, #16]
  41fd8c:	mov	x19, x0
  41fd90:	stp	x23, x24, [sp, #48]
  41fd94:	mov	x20, x2
  41fd98:	mov	x24, x1
  41fd9c:	stp	x25, x26, [sp, #64]
  41fda0:	and	w25, w2, #0xff
  41fda4:	cmp	x4, x21
  41fda8:	b.cs	41fe54 <_obstack_memory_used@@Base+0x1364>  // b.hs, b.nlast
  41fdac:	ldr	x22, [x0, #24]
  41fdb0:	ldr	x21, [x0, #40]
  41fdb4:	lsl	x3, x4, #4
  41fdb8:	ldr	x5, [x19]
  41fdbc:	and	w1, w20, #0xfffc00ff
  41fdc0:	cmp	w25, #0x6
  41fdc4:	add	x2, x5, x3
  41fdc8:	cset	w0, eq  // eq = none
  41fdcc:	str	x24, [x5, x3]
  41fdd0:	cmp	w25, #0x5
  41fdd4:	str	x20, [x2, #8]
  41fdd8:	str	w1, [x2, #8]
  41fddc:	b.ne	41fdec <_obstack_memory_used@@Base+0x12fc>  // b.any
  41fde0:	ldr	w0, [x19, #180]
  41fde4:	cmp	w0, #0x1
  41fde8:	cset	w0, gt
  41fdec:	ldrb	w1, [x2, #10]
  41fdf0:	mov	x3, #0xffffffffffffffff    	// #-1
  41fdf4:	bfi	w1, w0, #4, #1
  41fdf8:	strb	w1, [x2, #10]
  41fdfc:	str	x3, [x22, x4, lsl #3]
  41fe00:	ldr	x0, [x19, #16]
  41fe04:	add	x0, x0, x0, lsl #1
  41fe08:	add	x0, x21, x0, lsl #3
  41fe0c:	stp	xzr, xzr, [x0]
  41fe10:	str	xzr, [x0, #16]
  41fe14:	ldr	x0, [x19, #16]
  41fe18:	ldr	x1, [x19, #48]
  41fe1c:	add	x0, x0, x0, lsl #1
  41fe20:	add	x0, x1, x0, lsl #3
  41fe24:	stp	xzr, xzr, [x0]
  41fe28:	str	xzr, [x0, #16]
  41fe2c:	ldr	x1, [x19, #16]
  41fe30:	mov	x0, x1
  41fe34:	add	x1, x1, #0x1
  41fe38:	str	x1, [x19, #16]
  41fe3c:	ldp	x19, x20, [sp, #16]
  41fe40:	ldp	x21, x22, [sp, #32]
  41fe44:	ldp	x23, x24, [sp, #48]
  41fe48:	ldp	x25, x26, [sp, #64]
  41fe4c:	ldp	x29, x30, [sp], #96
  41fe50:	ret
  41fe54:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41fe58:	lsl	x23, x21, #1
  41fe5c:	movk	x0, #0xaaa, lsl #48
  41fe60:	cmp	x0, x21, lsl #1
  41fe64:	b.cc	41ff00 <_obstack_memory_used@@Base+0x1410>  // b.lo, b.ul, b.last
  41fe68:	ldr	x0, [x19]
  41fe6c:	lsl	x1, x21, #5
  41fe70:	bl	402550 <realloc@plt>
  41fe74:	mov	x1, x0
  41fe78:	cbz	x0, 41ff00 <_obstack_memory_used@@Base+0x1410>
  41fe7c:	ldr	x0, [x19, #24]
  41fe80:	str	x27, [sp, #80]
  41fe84:	str	x1, [x19]
  41fe88:	lsl	x26, x21, #4
  41fe8c:	mov	x1, x26
  41fe90:	add	x21, x23, x21
  41fe94:	bl	402550 <realloc@plt>
  41fe98:	mov	x22, x0
  41fe9c:	ldr	x0, [x19, #32]
  41fea0:	mov	x1, x26
  41fea4:	lsl	x21, x21, #4
  41fea8:	bl	402550 <realloc@plt>
  41feac:	mov	x26, x0
  41feb0:	ldr	x0, [x19, #40]
  41feb4:	mov	x1, x21
  41feb8:	bl	402550 <realloc@plt>
  41febc:	mov	x1, x21
  41fec0:	mov	x21, x0
  41fec4:	ldr	x0, [x19, #48]
  41fec8:	bl	402550 <realloc@plt>
  41fecc:	mov	x27, x0
  41fed0:	cmp	x22, #0x0
  41fed4:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  41fed8:	b.eq	41ff08 <_obstack_memory_used@@Base+0x1418>  // b.none
  41fedc:	cmp	x21, #0x0
  41fee0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41fee4:	b.eq	41ff08 <_obstack_memory_used@@Base+0x1418>  // b.none
  41fee8:	str	x23, [x19, #8]
  41feec:	stp	x22, x26, [x19, #24]
  41fef0:	stp	x21, x0, [x19, #40]
  41fef4:	ldr	x4, [x19, #16]
  41fef8:	ldr	x27, [sp, #80]
  41fefc:	b	41fdb4 <_obstack_memory_used@@Base+0x12c4>
  41ff00:	mov	x0, #0xffffffffffffffff    	// #-1
  41ff04:	b	41fe3c <_obstack_memory_used@@Base+0x134c>
  41ff08:	mov	x0, x22
  41ff0c:	bl	4026b0 <free@plt>
  41ff10:	mov	x0, x26
  41ff14:	bl	4026b0 <free@plt>
  41ff18:	mov	x0, x21
  41ff1c:	bl	4026b0 <free@plt>
  41ff20:	mov	x0, x27
  41ff24:	bl	4026b0 <free@plt>
  41ff28:	mov	x0, #0xffffffffffffffff    	// #-1
  41ff2c:	ldr	x27, [sp, #80]
  41ff30:	b	41fe3c <_obstack_memory_used@@Base+0x134c>
  41ff34:	nop
  41ff38:	stp	x29, x30, [sp, #-64]!
  41ff3c:	mov	x29, sp
  41ff40:	str	x23, [sp, #48]
  41ff44:	mov	x23, x0
  41ff48:	ldr	x0, [x0, #232]
  41ff4c:	cmp	x0, #0x0
  41ff50:	b.le	41ffe0 <_obstack_memory_used@@Base+0x14f0>
  41ff54:	stp	x19, x20, [sp, #16]
  41ff58:	stp	x21, x22, [sp, #32]
  41ff5c:	mov	x22, #0x0                   	// #0
  41ff60:	ldr	x0, [x23, #248]
  41ff64:	ldr	x21, [x0, x22, lsl #3]
  41ff68:	ldr	x0, [x21, #32]
  41ff6c:	cmp	x0, #0x0
  41ff70:	b.le	41ffa0 <_obstack_memory_used@@Base+0x14b0>
  41ff74:	mov	x19, #0x0                   	// #0
  41ff78:	ldr	x1, [x21, #40]
  41ff7c:	ldr	x20, [x1, x19, lsl #3]
  41ff80:	add	x19, x19, #0x1
  41ff84:	ldr	x0, [x20, #32]
  41ff88:	bl	4026b0 <free@plt>
  41ff8c:	mov	x0, x20
  41ff90:	bl	4026b0 <free@plt>
  41ff94:	ldr	x1, [x21, #32]
  41ff98:	cmp	x1, x19
  41ff9c:	b.gt	41ff78 <_obstack_memory_used@@Base+0x1488>
  41ffa0:	ldr	x0, [x21, #40]
  41ffa4:	bl	4026b0 <free@plt>
  41ffa8:	ldr	x0, [x21, #16]
  41ffac:	cbz	x0, 41fff4 <_obstack_memory_used@@Base+0x1504>
  41ffb0:	ldr	x0, [x0, #16]
  41ffb4:	add	x22, x22, #0x1
  41ffb8:	bl	4026b0 <free@plt>
  41ffbc:	ldr	x0, [x21, #16]
  41ffc0:	bl	4026b0 <free@plt>
  41ffc4:	mov	x0, x21
  41ffc8:	bl	4026b0 <free@plt>
  41ffcc:	ldr	x0, [x23, #232]
  41ffd0:	cmp	x0, x22
  41ffd4:	b.gt	41ff60 <_obstack_memory_used@@Base+0x1470>
  41ffd8:	ldp	x19, x20, [sp, #16]
  41ffdc:	ldp	x21, x22, [sp, #32]
  41ffe0:	str	xzr, [x23, #200]
  41ffe4:	str	xzr, [x23, #232]
  41ffe8:	ldr	x23, [sp, #48]
  41ffec:	ldp	x29, x30, [sp], #64
  41fff0:	ret
  41fff4:	mov	x0, x21
  41fff8:	bl	4026b0 <free@plt>
  41fffc:	ldr	x0, [x23, #232]
  420000:	add	x22, x22, #0x1
  420004:	cmp	x0, x22
  420008:	b.gt	41ff60 <_obstack_memory_used@@Base+0x1470>
  42000c:	b	41ffd8 <_obstack_memory_used@@Base+0x14e8>
  420010:	cbz	x1, 4201a4 <_obstack_memory_used@@Base+0x16b4>
  420014:	stp	x29, x30, [sp, #-48]!
  420018:	mov	x29, sp
  42001c:	stp	x19, x20, [sp, #16]
  420020:	ldr	x19, [x1, #8]
  420024:	stp	x21, x22, [sp, #32]
  420028:	mov	x21, x1
  42002c:	cbz	x19, 420114 <_obstack_memory_used@@Base+0x1624>
  420030:	ldp	x2, x1, [x0]
  420034:	mov	x20, x0
  420038:	add	x0, x1, x19, lsl #1
  42003c:	cmp	x2, x0
  420040:	b.lt	42015c <_obstack_memory_used@@Base+0x166c>  // b.tstop
  420044:	cbz	x1, 420188 <_obstack_memory_used@@Base+0x1698>
  420048:	subs	x2, x19, #0x1
  42004c:	sub	x3, x1, #0x1
  420050:	add	x19, x1, x19, lsl #1
  420054:	ccmp	x3, #0x0, #0x1, pl  // pl = nfrst
  420058:	b.lt	4200a8 <_obstack_memory_used@@Base+0x15b8>  // b.tstop
  42005c:	ldr	x0, [x20, #16]
  420060:	ldr	x1, [x21, #16]
  420064:	b	420084 <_obstack_memory_used@@Base+0x1594>
  420068:	b.ge	420128 <_obstack_memory_used@@Base+0x1638>  // b.tcont
  42006c:	sub	x19, x19, #0x1
  420070:	sub	x2, x2, #0x1
  420074:	str	x4, [x0, x19, lsl #3]
  420078:	cmp	x2, #0x0
  42007c:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  420080:	b.lt	4200a8 <_obstack_memory_used@@Base+0x15b8>  // b.tstop
  420084:	ldr	x5, [x0, x3, lsl #3]
  420088:	ldr	x4, [x1, x2, lsl #3]
  42008c:	cmp	x5, x4
  420090:	b.ne	420068 <_obstack_memory_used@@Base+0x1578>  // b.any
  420094:	sub	x2, x2, #0x1
  420098:	sub	x3, x3, #0x1
  42009c:	cmp	x2, #0x0
  4200a0:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  4200a4:	b.ge	420084 <_obstack_memory_used@@Base+0x1594>  // b.tcont
  4200a8:	tbnz	x2, #63, 4200c8 <_obstack_memory_used@@Base+0x15d8>
  4200ac:	ldr	x0, [x20, #16]
  4200b0:	add	x2, x2, #0x1
  4200b4:	ldr	x1, [x21, #16]
  4200b8:	sub	x19, x19, x2
  4200bc:	lsl	x2, x2, #3
  4200c0:	add	x0, x0, x19, lsl #3
  4200c4:	bl	4022a0 <memcpy@plt>
  4200c8:	ldr	x3, [x20, #8]
  4200cc:	ldr	x2, [x21, #8]
  4200d0:	add	x2, x3, x2, lsl #1
  4200d4:	sub	x5, x2, #0x1
  4200d8:	subs	x2, x2, x19
  4200dc:	b.eq	420114 <_obstack_memory_used@@Base+0x1624>  // b.none
  4200e0:	ldr	x0, [x20, #16]
  4200e4:	sub	x1, x3, #0x1
  4200e8:	add	x3, x3, x2
  4200ec:	str	x3, [x20, #8]
  4200f0:	ldr	x4, [x0, x5, lsl #3]
  4200f4:	add	x6, x1, x2
  4200f8:	ldr	x3, [x0, x1, lsl #3]
  4200fc:	cmp	x4, x3
  420100:	b.le	420130 <_obstack_memory_used@@Base+0x1640>
  420104:	str	x4, [x0, x6, lsl #3]
  420108:	sub	x5, x5, #0x1
  42010c:	subs	x2, x2, #0x1
  420110:	b.ne	4200f0 <_obstack_memory_used@@Base+0x1600>  // b.any
  420114:	mov	w0, #0x0                   	// #0
  420118:	ldp	x19, x20, [sp, #16]
  42011c:	ldp	x21, x22, [sp, #32]
  420120:	ldp	x29, x30, [sp], #48
  420124:	ret
  420128:	sub	x3, x3, #0x1
  42012c:	b	420078 <_obstack_memory_used@@Base+0x1588>
  420130:	str	x3, [x0, x6, lsl #3]
  420134:	subs	x1, x1, #0x1
  420138:	b.pl	4200f0 <_obstack_memory_used@@Base+0x1600>  // b.nfrst
  42013c:	add	x1, x0, x19, lsl #3
  420140:	lsl	x2, x2, #3
  420144:	bl	4022a0 <memcpy@plt>
  420148:	mov	w0, #0x0                   	// #0
  42014c:	ldp	x19, x20, [sp, #16]
  420150:	ldp	x21, x22, [sp, #32]
  420154:	ldp	x29, x30, [sp], #48
  420158:	ret
  42015c:	ldr	x0, [x20, #16]
  420160:	add	x19, x19, x2
  420164:	lsl	x22, x19, #1
  420168:	lsl	x1, x19, #4
  42016c:	bl	402550 <realloc@plt>
  420170:	cbz	x0, 4201ac <_obstack_memory_used@@Base+0x16bc>
  420174:	ldr	x1, [x20, #8]
  420178:	ldr	x19, [x21, #8]
  42017c:	str	x22, [x20]
  420180:	str	x0, [x20, #16]
  420184:	cbnz	x1, 420048 <_obstack_memory_used@@Base+0x1558>
  420188:	ldr	x1, [x21, #16]
  42018c:	str	x19, [x20, #8]
  420190:	ldr	x0, [x20, #16]
  420194:	ldr	x2, [x21, #8]
  420198:	lsl	x2, x2, #3
  42019c:	bl	4022a0 <memcpy@plt>
  4201a0:	b	420114 <_obstack_memory_used@@Base+0x1624>
  4201a4:	mov	w0, #0x0                   	// #0
  4201a8:	ret
  4201ac:	mov	w0, #0xc                   	// #12
  4201b0:	b	420118 <_obstack_memory_used@@Base+0x1628>
  4201b4:	nop
  4201b8:	ldr	x4, [x1, #8]
  4201bc:	cbz	x4, 420330 <_obstack_memory_used@@Base+0x1840>
  4201c0:	stp	x29, x30, [sp, #-48]!
  4201c4:	mov	x29, sp
  4201c8:	ldr	x8, [x2, #8]
  4201cc:	stp	x19, x20, [sp, #16]
  4201d0:	mov	x19, x0
  4201d4:	stp	x21, x22, [sp, #32]
  4201d8:	mov	w0, #0x0                   	// #0
  4201dc:	mov	x21, x2
  4201e0:	cbz	x8, 4202d4 <_obstack_memory_used@@Base+0x17e4>
  4201e4:	ldp	x22, x3, [x19]
  4201e8:	mov	x20, x1
  4201ec:	add	x1, x4, x8
  4201f0:	ldr	x0, [x19, #16]
  4201f4:	add	x2, x1, x3
  4201f8:	cmp	x2, x22
  4201fc:	b.gt	420338 <_obstack_memory_used@@Base+0x1848>
  420200:	ldr	x10, [x20, #16]
  420204:	sub	x6, x4, #0x1
  420208:	ldr	x9, [x21, #16]
  42020c:	sub	x7, x8, #0x1
  420210:	add	x4, x3, x4
  420214:	sub	x3, x3, #0x1
  420218:	add	x8, x4, x8
  42021c:	ldr	x5, [x9, x7, lsl #3]
  420220:	ldr	x4, [x10, x6, lsl #3]
  420224:	nop
  420228:	cmp	x4, x5
  42022c:	b.eq	420248 <_obstack_memory_used@@Base+0x1758>  // b.none
  420230:	b.ge	420320 <_obstack_memory_used@@Base+0x1830>  // b.tcont
  420234:	subs	x7, x7, #0x1
  420238:	b.mi	420290 <_obstack_memory_used@@Base+0x17a0>  // b.first
  42023c:	ldr	x5, [x9, x7, lsl #3]
  420240:	cmp	x4, x5
  420244:	b.ne	420230 <_obstack_memory_used@@Base+0x1740>  // b.any
  420248:	tbz	x3, #63, 42025c <_obstack_memory_used@@Base+0x176c>
  42024c:	b	42026c <_obstack_memory_used@@Base+0x177c>
  420250:	sub	x3, x3, #0x1
  420254:	cmn	x3, #0x1
  420258:	b.eq	42026c <_obstack_memory_used@@Base+0x177c>  // b.none
  42025c:	ldr	x5, [x0, x3, lsl #3]
  420260:	cmp	x5, x4
  420264:	b.gt	420250 <_obstack_memory_used@@Base+0x1760>
  420268:	b.eq	420274 <_obstack_memory_used@@Base+0x1784>  // b.none
  42026c:	sub	x8, x8, #0x1
  420270:	str	x4, [x0, x8, lsl #3]
  420274:	subs	x6, x6, #0x1
  420278:	b.mi	420290 <_obstack_memory_used@@Base+0x17a0>  // b.first
  42027c:	subs	x7, x7, #0x1
  420280:	b.mi	420290 <_obstack_memory_used@@Base+0x17a0>  // b.first
  420284:	ldr	x4, [x10, x6, lsl #3]
  420288:	ldr	x5, [x9, x7, lsl #3]
  42028c:	b	420240 <_obstack_memory_used@@Base+0x1750>
  420290:	ldr	x1, [x19, #8]
  420294:	ldr	x4, [x20, #8]
  420298:	sub	x2, x1, #0x1
  42029c:	ldr	x3, [x21, #8]
  4202a0:	add	x4, x1, x4
  4202a4:	add	x4, x4, x3
  4202a8:	sub	x3, x4, x8
  4202ac:	sub	x4, x4, #0x1
  4202b0:	add	x1, x1, x3
  4202b4:	str	x1, [x19, #8]
  4202b8:	cmp	x3, #0x0
  4202bc:	ccmp	x2, #0x0, #0x1, gt
  4202c0:	b.ge	4202f4 <_obstack_memory_used@@Base+0x1804>  // b.tcont
  4202c4:	lsl	x2, x3, #3
  4202c8:	add	x1, x0, x8, lsl #3
  4202cc:	bl	4022a0 <memcpy@plt>
  4202d0:	mov	w0, #0x0                   	// #0
  4202d4:	ldp	x19, x20, [sp, #16]
  4202d8:	ldp	x21, x22, [sp, #32]
  4202dc:	ldp	x29, x30, [sp], #48
  4202e0:	ret
  4202e4:	str	x1, [x0, x6, lsl #3]
  4202e8:	sub	x2, x2, #0x1
  4202ec:	cmn	x2, #0x1
  4202f0:	b.eq	4202c4 <_obstack_memory_used@@Base+0x17d4>  // b.none
  4202f4:	ldr	x5, [x0, x4, lsl #3]
  4202f8:	add	x6, x2, x3
  4202fc:	ldr	x1, [x0, x2, lsl #3]
  420300:	cmp	x5, x1
  420304:	b.le	4202e4 <_obstack_memory_used@@Base+0x17f4>
  420308:	str	x5, [x0, x6, lsl #3]
  42030c:	sub	x4, x4, #0x1
  420310:	subs	x3, x3, #0x1
  420314:	b.ne	4202f4 <_obstack_memory_used@@Base+0x1804>  // b.any
  420318:	mov	x2, #0x0                   	// #0
  42031c:	b	4202c8 <_obstack_memory_used@@Base+0x17d8>
  420320:	subs	x6, x6, #0x1
  420324:	b.mi	420290 <_obstack_memory_used@@Base+0x17a0>  // b.first
  420328:	ldr	x4, [x10, x6, lsl #3]
  42032c:	b	420228 <_obstack_memory_used@@Base+0x1738>
  420330:	mov	w0, #0x0                   	// #0
  420334:	ret
  420338:	add	x22, x1, x22
  42033c:	lsl	x1, x22, #3
  420340:	bl	402550 <realloc@plt>
  420344:	cbz	x0, 420360 <_obstack_memory_used@@Base+0x1870>
  420348:	ldr	x4, [x20, #8]
  42034c:	ldr	x8, [x21, #8]
  420350:	str	x22, [x19]
  420354:	str	x0, [x19, #16]
  420358:	ldr	x3, [x19, #8]
  42035c:	b	420200 <_obstack_memory_used@@Base+0x1710>
  420360:	mov	w0, #0xc                   	// #12
  420364:	b	4202d4 <_obstack_memory_used@@Base+0x17e4>
  420368:	stp	x29, x30, [sp, #-32]!
  42036c:	mov	x29, sp
  420370:	stp	x19, x20, [sp, #16]
  420374:	mov	x20, x0
  420378:	tbnz	x1, #63, 42040c <_obstack_memory_used@@Base+0x191c>
  42037c:	ldr	x0, [x0, #88]
  420380:	cmp	x0, x1
  420384:	b.eq	420438 <_obstack_memory_used@@Base+0x1948>  // b.none
  420388:	ldr	w0, [x20, #144]
  42038c:	cmp	w0, #0x1
  420390:	b.le	4203d4 <_obstack_memory_used@@Base+0x18e4>
  420394:	ldr	x0, [x20, #16]
  420398:	b	4203a4 <_obstack_memory_used@@Base+0x18b4>
  42039c:	cmn	x1, #0x1
  4203a0:	b.eq	42040c <_obstack_memory_used@@Base+0x191c>  // b.none
  4203a4:	ldr	w19, [x0, x1, lsl #2]
  4203a8:	sub	x1, x1, #0x1
  4203ac:	cmn	w19, #0x1
  4203b0:	b.eq	42039c <_obstack_memory_used@@Base+0x18ac>  // b.none
  4203b4:	ldrb	w0, [x20, #142]
  4203b8:	cbnz	w0, 42044c <_obstack_memory_used@@Base+0x195c>
  4203bc:	cmp	w19, #0xa
  4203c0:	mov	w0, #0x0                   	// #0
  4203c4:	b.eq	42041c <_obstack_memory_used@@Base+0x192c>  // b.none
  4203c8:	ldp	x19, x20, [sp, #16]
  4203cc:	ldp	x29, x30, [sp], #32
  4203d0:	ret
  4203d4:	ldr	x2, [x20, #8]
  4203d8:	mov	w0, #0x1                   	// #1
  4203dc:	ldr	x3, [x20, #128]
  4203e0:	ldrb	w2, [x2, x1]
  4203e4:	ubfx	x1, x2, #6, #2
  4203e8:	ldr	x1, [x3, x1, lsl #3]
  4203ec:	lsr	x1, x1, x2
  4203f0:	tbnz	w1, #0, 4203c8 <_obstack_memory_used@@Base+0x18d8>
  4203f4:	cmp	w2, #0xa
  4203f8:	b.eq	42041c <_obstack_memory_used@@Base+0x192c>  // b.none
  4203fc:	mov	w0, #0x0                   	// #0
  420400:	ldp	x19, x20, [sp, #16]
  420404:	ldp	x29, x30, [sp], #32
  420408:	ret
  42040c:	ldr	w0, [x20, #112]
  420410:	ldp	x19, x20, [sp, #16]
  420414:	ldp	x29, x30, [sp], #32
  420418:	ret
  42041c:	ldrb	w0, [x20, #141]
  420420:	ldp	x19, x20, [sp, #16]
  420424:	cmp	w0, #0x0
  420428:	cset	w0, ne  // ne = any
  42042c:	ldp	x29, x30, [sp], #32
  420430:	lsl	w0, w0, #1
  420434:	ret
  420438:	tst	x2, #0x2
  42043c:	mov	w0, #0x8                   	// #8
  420440:	mov	w1, #0xa                   	// #10
  420444:	csel	w0, w0, w1, ne  // ne = any
  420448:	b	4203c8 <_obstack_memory_used@@Base+0x18d8>
  42044c:	mov	w0, w19
  420450:	bl	4027c0 <iswalnum@plt>
  420454:	cmp	w19, #0x5f
  420458:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42045c:	mov	w0, #0x1                   	// #1
  420460:	b.ne	4203c8 <_obstack_memory_used@@Base+0x18d8>  // b.any
  420464:	b	4203bc <_obstack_memory_used@@Base+0x18cc>
  420468:	mov	x4, x1
  42046c:	mov	x5, x0
  420470:	ldr	x0, [x0, #8]
  420474:	mov	x1, x2
  420478:	ldrb	w3, [x4, #8]
  42047c:	ldrb	w2, [x0, x2]
  420480:	cmp	w3, #0x5
  420484:	b.eq	420528 <_obstack_memory_used@@Base+0x1a38>  // b.none
  420488:	b.hi	420518 <_obstack_memory_used@@Base+0x1a28>  // b.pmore
  42048c:	cmp	w3, #0x1
  420490:	b.eq	420560 <_obstack_memory_used@@Base+0x1a70>  // b.none
  420494:	cmp	w3, #0x3
  420498:	b.ne	420588 <_obstack_memory_used@@Base+0x1a98>  // b.any
  42049c:	ldr	x0, [x4]
  4204a0:	ubfx	x3, x2, #6, #2
  4204a4:	ldr	x0, [x0, x3, lsl #3]
  4204a8:	lsr	x2, x0, x2
  4204ac:	and	w0, w2, #0x1
  4204b0:	tbz	w2, #0, 42055c <_obstack_memory_used@@Base+0x1a6c>
  4204b4:	stp	x29, x30, [sp, #-32]!
  4204b8:	mov	w0, #0x1                   	// #1
  4204bc:	mov	x29, sp
  4204c0:	str	x19, [sp, #16]
  4204c4:	ldr	w19, [x4, #8]
  4204c8:	tst	w19, #0x3ff00
  4204cc:	b.eq	42050c <_obstack_memory_used@@Base+0x1a1c>  // b.none
  4204d0:	ldr	w2, [x5, #160]
  4204d4:	mov	x0, x5
  4204d8:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  4204dc:	mov	w1, w0
  4204e0:	ubfx	x2, x19, #8, #10
  4204e4:	tbz	w19, #10, 42054c <_obstack_memory_used@@Base+0x1a5c>
  4204e8:	mov	w0, #0x0                   	// #0
  4204ec:	tbz	w1, #0, 42050c <_obstack_memory_used@@Base+0x1a1c>
  4204f0:	tbnz	w2, #3, 42050c <_obstack_memory_used@@Base+0x1a1c>
  4204f4:	tbz	w2, #5, 420500 <_obstack_memory_used@@Base+0x1a10>
  4204f8:	mov	w0, #0x0                   	// #0
  4204fc:	tbz	w1, #1, 42050c <_obstack_memory_used@@Base+0x1a1c>
  420500:	ubfx	x0, x1, #3, #1
  420504:	tst	x2, #0x80
  420508:	csinc	w0, w0, wzr, ne  // ne = any
  42050c:	ldr	x19, [sp, #16]
  420510:	ldp	x29, x30, [sp], #32
  420514:	ret
  420518:	cmp	w3, #0x7
  42051c:	mov	w0, #0x0                   	// #0
  420520:	b.ne	420548 <_obstack_memory_used@@Base+0x1a58>  // b.any
  420524:	tbnz	w2, #7, 420544 <_obstack_memory_used@@Base+0x1a54>
  420528:	cmp	w2, #0xa
  42052c:	b.eq	420574 <_obstack_memory_used@@Base+0x1a84>  // b.none
  420530:	cbnz	w2, 4204b4 <_obstack_memory_used@@Base+0x19c4>
  420534:	ldr	x2, [x5, #152]
  420538:	mov	w0, #0x0                   	// #0
  42053c:	ldr	x2, [x2, #216]
  420540:	tbz	w2, #7, 4204b4 <_obstack_memory_used@@Base+0x19c4>
  420544:	ret
  420548:	ret
  42054c:	tbz	w2, #3, 4204f4 <_obstack_memory_used@@Base+0x1a04>
  420550:	tbz	w1, #0, 4204f4 <_obstack_memory_used@@Base+0x1a04>
  420554:	mov	w0, #0x0                   	// #0
  420558:	b	42050c <_obstack_memory_used@@Base+0x1a1c>
  42055c:	ret
  420560:	ldrb	w3, [x4]
  420564:	mov	w0, #0x0                   	// #0
  420568:	cmp	w3, w2
  42056c:	b.eq	4204b4 <_obstack_memory_used@@Base+0x19c4>  // b.none
  420570:	ret
  420574:	ldr	x2, [x5, #152]
  420578:	mov	w0, #0x0                   	// #0
  42057c:	ldr	x2, [x2, #216]
  420580:	tbnz	w2, #6, 4204b4 <_obstack_memory_used@@Base+0x19c4>
  420584:	ret
  420588:	mov	w0, #0x0                   	// #0
  42058c:	ret
  420590:	stp	x29, x30, [sp, #-32]!
  420594:	mov	x29, sp
  420598:	stp	x19, x20, [sp, #16]
  42059c:	mov	x19, x1
  4205a0:	mov	x1, x2
  4205a4:	ldr	w2, [x0, #160]
  4205a8:	mov	x20, x0
  4205ac:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  4205b0:	ldr	x3, [x19, #16]
  4205b4:	cmp	x3, #0x0
  4205b8:	b.le	420610 <_obstack_memory_used@@Base+0x1b20>
  4205bc:	ldr	x1, [x20, #152]
  4205c0:	and	w6, w0, #0x2
  4205c4:	and	w2, w0, #0x8
  4205c8:	ldr	x4, [x19, #24]
  4205cc:	ldr	x5, [x1]
  4205d0:	tbz	w0, #0, 420620 <_obstack_memory_used@@Base+0x1b30>
  4205d4:	cbz	w6, 42073c <_obstack_memory_used@@Base+0x1c4c>
  4205d8:	cbz	w2, 4207c4 <_obstack_memory_used@@Base+0x1cd4>
  4205dc:	mov	x2, #0x0                   	// #0
  4205e0:	ldr	x0, [x4, x2, lsl #3]
  4205e4:	add	x2, x2, #0x1
  4205e8:	add	x6, x5, x0, lsl #4
  4205ec:	ldr	w1, [x6, #8]
  4205f0:	ldrb	w6, [x6, #8]
  4205f4:	ubfx	x1, x1, #8, #10
  4205f8:	cmp	w6, #0x2
  4205fc:	b.ne	420608 <_obstack_memory_used@@Base+0x1b18>  // b.any
  420600:	cbz	w1, 420658 <_obstack_memory_used@@Base+0x1b68>
  420604:	tbz	w1, #3, 420658 <_obstack_memory_used@@Base+0x1b68>
  420608:	cmp	x3, x2
  42060c:	b.ne	4205e0 <_obstack_memory_used@@Base+0x1af0>  // b.any
  420610:	mov	x0, #0x0                   	// #0
  420614:	ldp	x19, x20, [sp, #16]
  420618:	ldp	x29, x30, [sp], #32
  42061c:	ret
  420620:	mov	x1, #0x0                   	// #0
  420624:	cbz	w6, 4206b4 <_obstack_memory_used@@Base+0x1bc4>
  420628:	cbz	w2, 420674 <_obstack_memory_used@@Base+0x1b84>
  42062c:	nop
  420630:	ldr	x0, [x4, x1, lsl #3]
  420634:	add	x1, x1, #0x1
  420638:	add	x6, x5, x0, lsl #4
  42063c:	ldr	w2, [x6, #8]
  420640:	ldrb	w6, [x6, #8]
  420644:	ubfx	x2, x2, #8, #10
  420648:	cmp	w6, #0x2
  42064c:	b.ne	420664 <_obstack_memory_used@@Base+0x1b74>  // b.any
  420650:	cbz	w2, 420658 <_obstack_memory_used@@Base+0x1b68>
  420654:	tbnz	w2, #2, 420664 <_obstack_memory_used@@Base+0x1b74>
  420658:	ldp	x19, x20, [sp, #16]
  42065c:	ldp	x29, x30, [sp], #32
  420660:	ret
  420664:	cmp	x3, x1
  420668:	b.ne	420630 <_obstack_memory_used@@Base+0x1b40>  // b.any
  42066c:	mov	x0, #0x0                   	// #0
  420670:	b	420614 <_obstack_memory_used@@Base+0x1b24>
  420674:	mov	w7, #0x84                  	// #132
  420678:	ldr	x0, [x4, x1, lsl #3]
  42067c:	add	x1, x1, #0x1
  420680:	add	x6, x5, x0, lsl #4
  420684:	ldr	w2, [x6, #8]
  420688:	ldrb	w6, [x6, #8]
  42068c:	ubfx	x2, x2, #8, #10
  420690:	cmp	w6, #0x2
  420694:	b.ne	4206a4 <_obstack_memory_used@@Base+0x1bb4>  // b.any
  420698:	cbz	w2, 420658 <_obstack_memory_used@@Base+0x1b68>
  42069c:	tst	w2, w7
  4206a0:	b.eq	420658 <_obstack_memory_used@@Base+0x1b68>  // b.none
  4206a4:	cmp	x3, x1
  4206a8:	b.ne	420678 <_obstack_memory_used@@Base+0x1b88>  // b.any
  4206ac:	mov	x0, #0x0                   	// #0
  4206b0:	b	420614 <_obstack_memory_used@@Base+0x1b24>
  4206b4:	cbz	w2, 4206fc <_obstack_memory_used@@Base+0x1c0c>
  4206b8:	mov	w7, #0x24                  	// #36
  4206bc:	nop
  4206c0:	ldr	x0, [x4, x1, lsl #3]
  4206c4:	add	x1, x1, #0x1
  4206c8:	add	x6, x5, x0, lsl #4
  4206cc:	ldr	w2, [x6, #8]
  4206d0:	ldrb	w6, [x6, #8]
  4206d4:	ubfx	x2, x2, #8, #10
  4206d8:	cmp	w6, #0x2
  4206dc:	b.ne	4206ec <_obstack_memory_used@@Base+0x1bfc>  // b.any
  4206e0:	cbz	w2, 420658 <_obstack_memory_used@@Base+0x1b68>
  4206e4:	tst	w2, w7
  4206e8:	b.eq	420658 <_obstack_memory_used@@Base+0x1b68>  // b.none
  4206ec:	cmp	x3, x1
  4206f0:	b.ne	4206c0 <_obstack_memory_used@@Base+0x1bd0>  // b.any
  4206f4:	mov	x0, #0x0                   	// #0
  4206f8:	b	420614 <_obstack_memory_used@@Base+0x1b24>
  4206fc:	mov	w7, #0xa4                  	// #164
  420700:	ldr	x0, [x4, x1, lsl #3]
  420704:	add	x1, x1, #0x1
  420708:	add	x6, x5, x0, lsl #4
  42070c:	ldr	w2, [x6, #8]
  420710:	ldrb	w6, [x6, #8]
  420714:	ubfx	x2, x2, #8, #10
  420718:	cmp	w6, #0x2
  42071c:	b.ne	42072c <_obstack_memory_used@@Base+0x1c3c>  // b.any
  420720:	cbz	w2, 420658 <_obstack_memory_used@@Base+0x1b68>
  420724:	tst	w2, w7
  420728:	b.eq	420658 <_obstack_memory_used@@Base+0x1b68>  // b.none
  42072c:	cmp	x3, x1
  420730:	b.ne	420700 <_obstack_memory_used@@Base+0x1c10>  // b.any
  420734:	mov	x0, #0x0                   	// #0
  420738:	b	420614 <_obstack_memory_used@@Base+0x1b24>
  42073c:	cbz	w2, 42077c <_obstack_memory_used@@Base+0x1c8c>
  420740:	mov	x2, #0x0                   	// #0
  420744:	ldr	x0, [x4, x2, lsl #3]
  420748:	add	x6, x5, x0, lsl #4
  42074c:	ldr	w1, [x6, #8]
  420750:	ldrb	w6, [x6, #8]
  420754:	ubfx	x1, x1, #8, #10
  420758:	cmp	w6, #0x2
  42075c:	b.ne	420768 <_obstack_memory_used@@Base+0x1c78>  // b.any
  420760:	cbz	w1, 420658 <_obstack_memory_used@@Base+0x1b68>
  420764:	tbz	w1, #3, 420800 <_obstack_memory_used@@Base+0x1d10>
  420768:	add	x2, x2, #0x1
  42076c:	cmp	x3, x2
  420770:	b.ne	420744 <_obstack_memory_used@@Base+0x1c54>  // b.any
  420774:	mov	x0, #0x0                   	// #0
  420778:	b	420614 <_obstack_memory_used@@Base+0x1b24>
  42077c:	mov	x2, #0x0                   	// #0
  420780:	mov	w7, #0xa0                  	// #160
  420784:	ldr	x0, [x4, x2, lsl #3]
  420788:	add	x6, x5, x0, lsl #4
  42078c:	ldr	w1, [x6, #8]
  420790:	ldrb	w6, [x6, #8]
  420794:	ubfx	x1, x1, #8, #10
  420798:	cmp	w6, #0x2
  42079c:	b.ne	4207b0 <_obstack_memory_used@@Base+0x1cc0>  // b.any
  4207a0:	cbz	w1, 420658 <_obstack_memory_used@@Base+0x1b68>
  4207a4:	tbnz	w1, #3, 4207b0 <_obstack_memory_used@@Base+0x1cc0>
  4207a8:	tst	w1, w7
  4207ac:	b.eq	420658 <_obstack_memory_used@@Base+0x1b68>  // b.none
  4207b0:	add	x2, x2, #0x1
  4207b4:	cmp	x3, x2
  4207b8:	b.ne	420784 <_obstack_memory_used@@Base+0x1c94>  // b.any
  4207bc:	mov	x0, #0x0                   	// #0
  4207c0:	b	420614 <_obstack_memory_used@@Base+0x1b24>
  4207c4:	mov	x2, #0x0                   	// #0
  4207c8:	ldr	x0, [x4, x2, lsl #3]
  4207cc:	add	x6, x5, x0, lsl #4
  4207d0:	ldr	w1, [x6, #8]
  4207d4:	ldrb	w6, [x6, #8]
  4207d8:	ubfx	x1, x1, #8, #10
  4207dc:	cmp	w6, #0x2
  4207e0:	b.ne	4207ec <_obstack_memory_used@@Base+0x1cfc>  // b.any
  4207e4:	cbz	w1, 420658 <_obstack_memory_used@@Base+0x1b68>
  4207e8:	tbz	w1, #3, 420808 <_obstack_memory_used@@Base+0x1d18>
  4207ec:	add	x2, x2, #0x1
  4207f0:	cmp	x3, x2
  4207f4:	b.ne	4207c8 <_obstack_memory_used@@Base+0x1cd8>  // b.any
  4207f8:	mov	x0, #0x0                   	// #0
  4207fc:	b	420614 <_obstack_memory_used@@Base+0x1b24>
  420800:	tbz	w1, #5, 420658 <_obstack_memory_used@@Base+0x1b68>
  420804:	b	420768 <_obstack_memory_used@@Base+0x1c78>
  420808:	tbz	w1, #7, 420658 <_obstack_memory_used@@Base+0x1b68>
  42080c:	b	4207ec <_obstack_memory_used@@Base+0x1cfc>
  420810:	stp	x29, x30, [sp, #-128]!
  420814:	mov	x29, sp
  420818:	stp	x19, x20, [sp, #16]
  42081c:	mov	x19, x0
  420820:	ldr	x0, [x0, #40]
  420824:	stp	x21, x22, [sp, #32]
  420828:	mov	x21, x1
  42082c:	stp	x23, x24, [sp, #48]
  420830:	sub	x20, x1, x0
  420834:	mov	w24, w2
  420838:	cmp	x0, x1
  42083c:	b.le	420898 <_obstack_memory_used@@Base+0x1da8>
  420840:	ldr	w0, [x19, #144]
  420844:	cmp	w0, #0x1
  420848:	b.le	420850 <_obstack_memory_used@@Base+0x1d60>
  42084c:	str	xzr, [x19, #32]
  420850:	ldrb	w0, [x19, #139]
  420854:	tst	x24, #0x1
  420858:	ldr	x3, [x19, #80]
  42085c:	mov	w1, #0x4                   	// #4
  420860:	ldr	x2, [x19, #96]
  420864:	mov	w4, #0x6                   	// #6
  420868:	csel	w1, w1, w4, ne  // ne = any
  42086c:	stp	xzr, xzr, [x19, #40]
  420870:	str	xzr, [x19, #56]
  420874:	str	x3, [x19, #88]
  420878:	str	x2, [x19, #104]
  42087c:	str	w1, [x19, #112]
  420880:	strb	wzr, [x19, #140]
  420884:	cbnz	w0, 42094c <_obstack_memory_used@@Base+0x1e5c>
  420888:	mov	x20, x21
  42088c:	mov	x0, #0x0                   	// #0
  420890:	ldr	x1, [x19]
  420894:	str	x1, [x19, #8]
  420898:	cbz	x20, 420958 <_obstack_memory_used@@Base+0x1e68>
  42089c:	ldp	x23, x22, [x19, #48]
  4208a0:	ldrb	w1, [x19, #140]
  4208a4:	cmp	x22, x20
  4208a8:	b.le	4209b4 <_obstack_memory_used@@Base+0x1ec4>
  4208ac:	cbnz	w1, 420a90 <_obstack_memory_used@@Base+0x1fa0>
  4208b0:	mov	w2, w24
  4208b4:	sub	x1, x20, #0x1
  4208b8:	mov	x0, x19
  4208bc:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  4208c0:	str	w0, [x19, #112]
  4208c4:	sub	x2, x23, x20
  4208c8:	ldr	w0, [x19, #144]
  4208cc:	cmp	w0, #0x1
  4208d0:	b.gt	420988 <_obstack_memory_used@@Base+0x1e98>
  4208d4:	ldrb	w0, [x19, #139]
  4208d8:	cbnz	w0, 420ad4 <_obstack_memory_used@@Base+0x1fe4>
  4208dc:	ldr	x3, [x19, #56]
  4208e0:	ldr	x1, [x19, #88]
  4208e4:	sub	x3, x3, x20
  4208e8:	stp	x2, x3, [x19, #48]
  4208ec:	ldr	w3, [x19, #144]
  4208f0:	ldr	x2, [x19, #104]
  4208f4:	sub	x1, x1, x20
  4208f8:	sub	x2, x2, x20
  4208fc:	cbnz	w0, 42090c <_obstack_memory_used@@Base+0x1e1c>
  420900:	ldr	x0, [x19, #8]
  420904:	add	x20, x0, x20
  420908:	str	x20, [x19, #8]
  42090c:	str	x21, [x19, #40]
  420910:	cmp	w3, #0x1
  420914:	str	x1, [x19, #88]
  420918:	str	x2, [x19, #104]
  42091c:	b.le	420978 <_obstack_memory_used@@Base+0x1e88>
  420920:	ldrb	w0, [x19, #136]
  420924:	cbnz	w0, 4209a4 <_obstack_memory_used@@Base+0x1eb4>
  420928:	mov	x0, x19
  42092c:	bl	41f270 <_obstack_memory_used@@Base+0x780>
  420930:	mov	w0, #0x0                   	// #0
  420934:	str	xzr, [x19, #72]
  420938:	ldp	x19, x20, [sp, #16]
  42093c:	ldp	x21, x22, [sp, #32]
  420940:	ldp	x23, x24, [sp, #48]
  420944:	ldp	x29, x30, [sp], #128
  420948:	ret
  42094c:	mov	x20, x21
  420950:	mov	x0, #0x0                   	// #0
  420954:	cbnz	x20, 42089c <_obstack_memory_used@@Base+0x1dac>
  420958:	ldr	x1, [x19, #88]
  42095c:	str	x21, [x19, #40]
  420960:	ldr	x2, [x19, #104]
  420964:	str	x1, [x19, #88]
  420968:	ldr	w3, [x19, #144]
  42096c:	str	x2, [x19, #104]
  420970:	cmp	w3, #0x1
  420974:	b.gt	420920 <_obstack_memory_used@@Base+0x1e30>
  420978:	ldrb	w0, [x19, #139]
  42097c:	cbnz	w0, 420c9c <_obstack_memory_used@@Base+0x21ac>
  420980:	str	x1, [x19, #48]
  420984:	b	420930 <_obstack_memory_used@@Base+0x1e40>
  420988:	ldr	x0, [x19, #16]
  42098c:	lsl	x2, x2, #2
  420990:	add	x1, x0, x20, lsl #2
  420994:	bl	4022c0 <memmove@plt>
  420998:	ldr	x2, [x19, #48]
  42099c:	sub	x2, x2, x20
  4209a0:	b	4208d4 <_obstack_memory_used@@Base+0x1de4>
  4209a4:	mov	x0, x19
  4209a8:	bl	41f468 <_obstack_memory_used@@Base+0x978>
  4209ac:	cbz	w0, 420930 <_obstack_memory_used@@Base+0x1e40>
  4209b0:	b	420938 <_obstack_memory_used@@Base+0x1e48>
  4209b4:	cbnz	w1, 420f04 <_obstack_memory_used@@Base+0x2414>
  4209b8:	ldr	w3, [x19, #144]
  4209bc:	str	xzr, [x19, #48]
  4209c0:	cmp	w3, #0x1
  4209c4:	b.le	420d20 <_obstack_memory_used@@Base+0x2230>
  4209c8:	ldrb	w1, [x19, #137]
  4209cc:	cbnz	w1, 420bec <_obstack_memory_used@@Base+0x20fc>
  4209d0:	add	x22, x0, x22
  4209d4:	cmp	x21, x22
  4209d8:	b.le	421070 <_obstack_memory_used@@Base+0x2580>
  4209dc:	stp	x27, x28, [sp, #80]
  4209e0:	add	x27, x19, #0x20
  4209e4:	stp	x25, x26, [sp, #64]
  4209e8:	mov	x3, x27
  4209ec:	ldr	x1, [x19]
  4209f0:	add	x0, sp, #0x78
  4209f4:	ldr	x25, [x19, #80]
  4209f8:	add	x1, x1, x22
  4209fc:	ldr	x26, [x19, #32]
  420a00:	sub	x25, x25, x22
  420a04:	mov	x2, x25
  420a08:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  420a0c:	sub	x1, x0, #0x1
  420a10:	cmn	x1, #0x4
  420a14:	b.hi	420f2c <_obstack_memory_used@@Base+0x243c>  // b.pmore
  420a18:	ldr	w28, [sp, #120]
  420a1c:	add	x22, x22, x0
  420a20:	cmp	x21, x22
  420a24:	b.gt	4209e8 <_obstack_memory_used@@Base+0x1ef8>
  420a28:	sub	x22, x22, x21
  420a2c:	str	x22, [x19, #48]
  420a30:	cmn	w28, #0x1
  420a34:	b.eq	420f50 <_obstack_memory_used@@Base+0x2460>  // b.none
  420a38:	ldrb	w0, [x19, #142]
  420a3c:	cbnz	w0, 420fa8 <_obstack_memory_used@@Base+0x24b8>
  420a40:	cmp	w28, #0xa
  420a44:	mov	w0, #0x0                   	// #0
  420a48:	b.ne	420a5c <_obstack_memory_used@@Base+0x1f6c>  // b.any
  420a4c:	ldrb	w0, [x19, #141]
  420a50:	cmp	w0, #0x0
  420a54:	cset	w0, ne  // ne = any
  420a58:	lsl	w0, w0, #1
  420a5c:	ldp	x25, x26, [sp, #64]
  420a60:	ldp	x27, x28, [sp, #80]
  420a64:	str	w0, [x19, #112]
  420a68:	cmp	x22, #0x0
  420a6c:	cbnz	x22, 420f70 <_obstack_memory_used@@Base+0x2480>
  420a70:	ldrb	w0, [x19, #139]
  420a74:	ldr	x1, [x19, #88]
  420a78:	str	x22, [x19, #56]
  420a7c:	ldr	x2, [x19, #104]
  420a80:	sub	x1, x1, x20
  420a84:	ldr	w3, [x19, #144]
  420a88:	sub	x2, x2, x20
  420a8c:	b	4208fc <_obstack_memory_used@@Base+0x1e0c>
  420a90:	mov	x1, x23
  420a94:	mov	x2, #0x0                   	// #0
  420a98:	stp	x25, x26, [sp, #64]
  420a9c:	ldr	x25, [x19, #24]
  420aa0:	b	420ab4 <_obstack_memory_used@@Base+0x1fc4>
  420aa4:	b.ge	420c90 <_obstack_memory_used@@Base+0x21a0>  // b.tcont
  420aa8:	add	x2, x0, #0x1
  420aac:	cmp	x2, x1
  420ab0:	b.ge	420af0 <_obstack_memory_used@@Base+0x2000>  // b.tcont
  420ab4:	add	x0, x2, x1
  420ab8:	add	x0, x0, x0, lsr #63
  420abc:	asr	x0, x0, #1
  420ac0:	ldr	x3, [x25, x0, lsl #3]
  420ac4:	cmp	x3, x20
  420ac8:	b.le	420aa4 <_obstack_memory_used@@Base+0x1fb4>
  420acc:	mov	x1, x0
  420ad0:	b	420aac <_obstack_memory_used@@Base+0x1fbc>
  420ad4:	ldr	x0, [x19, #8]
  420ad8:	add	x1, x0, x20
  420adc:	bl	4022c0 <memmove@plt>
  420ae0:	ldr	x2, [x19, #48]
  420ae4:	ldrb	w0, [x19, #139]
  420ae8:	sub	x2, x2, x20
  420aec:	b	4208dc <_obstack_memory_used@@Base+0x1dec>
  420af0:	cmp	x3, x20
  420af4:	add	x22, x0, #0x1
  420af8:	b.ge	420c90 <_obstack_memory_used@@Base+0x21a0>  // b.tcont
  420afc:	mov	x1, x0
  420b00:	mov	w2, w24
  420b04:	mov	x0, x19
  420b08:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  420b0c:	str	w0, [x19, #112]
  420b10:	cmp	x20, x22
  420b14:	ccmp	x20, x23, #0x0, eq  // eq = none
  420b18:	b.lt	420dd0 <_obstack_memory_used@@Base+0x22e0>  // b.tstop
  420b1c:	ldr	x1, [x19, #80]
  420b20:	strb	wzr, [x19, #140]
  420b24:	ldr	x2, [x19, #96]
  420b28:	sub	x1, x1, x21
  420b2c:	add	x0, x1, x20
  420b30:	str	x0, [x19, #88]
  420b34:	sub	x2, x2, x21
  420b38:	cmp	x22, #0x0
  420b3c:	add	x0, x2, x20
  420b40:	str	x0, [x19, #104]
  420b44:	sub	x3, x25, #0x8
  420b48:	b.gt	420b58 <_obstack_memory_used@@Base+0x2068>
  420b4c:	b	420b64 <_obstack_memory_used@@Base+0x2074>
  420b50:	subs	x22, x22, #0x1
  420b54:	b.eq	420b64 <_obstack_memory_used@@Base+0x2074>  // b.none
  420b58:	ldr	x0, [x3, x22, lsl #3]
  420b5c:	cmp	x0, x20
  420b60:	b.eq	420b50 <_obstack_memory_used@@Base+0x2060>  // b.none
  420b64:	cmp	x22, x23
  420b68:	b.ge	420da4 <_obstack_memory_used@@Base+0x22b4>  // b.tcont
  420b6c:	ldr	x3, [x19, #16]
  420b70:	b	420b80 <_obstack_memory_used@@Base+0x2090>
  420b74:	add	x22, x22, #0x1
  420b78:	cmp	x22, x23
  420b7c:	b.eq	420da8 <_obstack_memory_used@@Base+0x22b8>  // b.none
  420b80:	ldr	w0, [x3, x22, lsl #2]
  420b84:	cmn	w0, #0x1
  420b88:	b.eq	420b74 <_obstack_memory_used@@Base+0x2084>  // b.none
  420b8c:	ldr	x22, [x25, x22, lsl #3]
  420b90:	sub	x22, x22, x20
  420b94:	str	x22, [x19, #48]
  420b98:	cmp	x22, #0x0
  420b9c:	cbz	x22, 420bd8 <_obstack_memory_used@@Base+0x20e8>
  420ba0:	b.le	420bb4 <_obstack_memory_used@@Base+0x20c4>
  420ba4:	ldr	x0, [x19, #16]
  420ba8:	lsl	x2, x22, #2
  420bac:	mov	w1, #0xff                  	// #255
  420bb0:	bl	402510 <memset@plt>
  420bb4:	ldr	x0, [x19, #8]
  420bb8:	mov	x2, x22
  420bbc:	mov	w1, #0xff                  	// #255
  420bc0:	bl	402510 <memset@plt>
  420bc4:	ldr	x1, [x19, #88]
  420bc8:	ldr	x2, [x19, #104]
  420bcc:	sub	x1, x1, x20
  420bd0:	ldr	x22, [x19, #48]
  420bd4:	sub	x2, x2, x20
  420bd8:	ldrb	w0, [x19, #139]
  420bdc:	ldr	w3, [x19, #144]
  420be0:	ldp	x25, x26, [sp, #64]
  420be4:	str	x22, [x19, #56]
  420be8:	b	4208fc <_obstack_memory_used@@Base+0x1e0c>
  420bec:	ldr	x2, [x19]
  420bf0:	sub	x1, x20, w3, sxtw
  420bf4:	stp	x25, x26, [sp, #64]
  420bf8:	sub	x25, x20, #0x1
  420bfc:	add	x26, x2, x0
  420c00:	add	x1, x26, x1
  420c04:	add	x25, x26, x25
  420c08:	cmp	x2, x1
  420c0c:	csel	x2, x2, x1, cs  // cs = hs, nlast
  420c10:	cmp	x2, x25
  420c14:	b.ls	420c28 <_obstack_memory_used@@Base+0x2138>  // b.plast
  420c18:	b	420e6c <_obstack_memory_used@@Base+0x237c>
  420c1c:	sub	x25, x25, #0x1
  420c20:	cmp	x2, x25
  420c24:	b.hi	420e6c <_obstack_memory_used@@Base+0x237c>  // b.pmore
  420c28:	ldrb	w1, [x25]
  420c2c:	and	w1, w1, #0xc0
  420c30:	cmp	w1, #0x80
  420c34:	b.eq	420c1c <_obstack_memory_used@@Base+0x212c>  // b.none
  420c38:	ldr	x2, [x19, #88]
  420c3c:	mov	x1, x25
  420c40:	ldr	x0, [x19, #120]
  420c44:	add	x2, x26, x2
  420c48:	sub	x2, x2, x25
  420c4c:	cbnz	x0, 420fcc <_obstack_memory_used@@Base+0x24dc>
  420c50:	add	x22, x26, x20
  420c54:	add	x3, sp, #0x78
  420c58:	sub	x22, x22, x25
  420c5c:	add	x0, sp, #0x6c
  420c60:	str	xzr, [sp, #120]
  420c64:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  420c68:	cmp	x0, x22
  420c6c:	b.cc	42107c <_obstack_memory_used@@Base+0x258c>  // b.lo, b.ul, b.last
  420c70:	stp	x27, x28, [sp, #80]
  420c74:	cmn	x0, #0x3
  420c78:	b.ls	420db4 <_obstack_memory_used@@Base+0x22c4>  // b.plast
  420c7c:	ldr	x0, [x19, #40]
  420c80:	ldr	x22, [x19, #56]
  420c84:	ldp	x25, x26, [sp, #64]
  420c88:	ldp	x27, x28, [sp, #80]
  420c8c:	b	4209d0 <_obstack_memory_used@@Base+0x1ee0>
  420c90:	mov	x22, x0
  420c94:	sub	x0, x0, #0x1
  420c98:	b	420afc <_obstack_memory_used@@Base+0x200c>
  420c9c:	ldrb	w0, [x19, #136]
  420ca0:	cbnz	w0, 420e74 <_obstack_memory_used@@Base+0x2384>
  420ca4:	ldr	x4, [x19, #120]
  420ca8:	cbz	x4, 420930 <_obstack_memory_used@@Base+0x1e40>
  420cac:	ldr	x2, [x19, #64]
  420cb0:	ldr	x3, [x19, #48]
  420cb4:	cmp	x2, x1
  420cb8:	csel	x2, x2, x1, le
  420cbc:	cmp	x2, x3
  420cc0:	b.le	420fc4 <_obstack_memory_used@@Base+0x24d4>
  420cc4:	ldp	x1, x5, [x19]
  420cc8:	add	x0, x3, #0x1
  420ccc:	cmp	x2, x0
  420cd0:	add	x1, x1, x3
  420cd4:	ldrb	w1, [x1, x21]
  420cd8:	ldrb	w1, [x4, x1]
  420cdc:	strb	w1, [x5, x3]
  420ce0:	b.le	420d14 <_obstack_memory_used@@Base+0x2224>
  420ce4:	nop
  420ce8:	ldr	x1, [x19]
  420cec:	ldr	x3, [x19, #40]
  420cf0:	add	x1, x1, x0
  420cf4:	ldr	x4, [x19, #120]
  420cf8:	ldrb	w3, [x1, x3]
  420cfc:	ldr	x1, [x19, #8]
  420d00:	ldrb	w3, [x4, x3]
  420d04:	strb	w3, [x1, x0]
  420d08:	add	x0, x0, #0x1
  420d0c:	cmp	x2, x0
  420d10:	b.ne	420ce8 <_obstack_memory_used@@Base+0x21f8>  // b.any
  420d14:	dup	v0.2d, x2
  420d18:	str	q0, [x19, #48]
  420d1c:	b	420930 <_obstack_memory_used@@Base+0x1e40>
  420d20:	ldr	x1, [x19]
  420d24:	ldr	x2, [x19, #120]
  420d28:	add	x0, x1, x0
  420d2c:	add	x0, x0, x20
  420d30:	ldurb	w0, [x0, #-1]
  420d34:	str	xzr, [x19, #56]
  420d38:	cbz	x2, 420d44 <_obstack_memory_used@@Base+0x2254>
  420d3c:	and	x0, x0, #0xff
  420d40:	ldrb	w0, [x2, x0]
  420d44:	ldr	x4, [x19, #128]
  420d48:	ubfx	x1, x0, #6, #2
  420d4c:	mov	w2, #0x1                   	// #1
  420d50:	ldr	x1, [x4, x1, lsl #3]
  420d54:	lsr	x1, x1, x0
  420d58:	tbnz	w1, #0, 420d78 <_obstack_memory_used@@Base+0x2288>
  420d5c:	cmp	w0, #0xa
  420d60:	mov	w2, #0x0                   	// #0
  420d64:	b.ne	420d78 <_obstack_memory_used@@Base+0x2288>  // b.any
  420d68:	ldrb	w0, [x19, #141]
  420d6c:	cmp	w0, #0x0
  420d70:	cset	w2, ne  // ne = any
  420d74:	lsl	w2, w2, #1
  420d78:	ldrb	w0, [x19, #139]
  420d7c:	str	w2, [x19, #112]
  420d80:	ldr	x1, [x19, #88]
  420d84:	ldr	x2, [x19, #104]
  420d88:	sub	x1, x1, x20
  420d8c:	sub	x2, x2, x20
  420d90:	cbz	w0, 420900 <_obstack_memory_used@@Base+0x1e10>
  420d94:	str	x21, [x19, #40]
  420d98:	str	x1, [x19, #88]
  420d9c:	str	x2, [x19, #104]
  420da0:	b	42097c <_obstack_memory_used@@Base+0x1e8c>
  420da4:	b.ne	420b8c <_obstack_memory_used@@Base+0x209c>  // b.any
  420da8:	mov	x22, #0x0                   	// #0
  420dac:	str	xzr, [x19, #48]
  420db0:	b	420bd8 <_obstack_memory_used@@Base+0x20e8>
  420db4:	ldr	w28, [sp, #108]
  420db8:	sub	x22, x0, x22
  420dbc:	str	xzr, [x19, #32]
  420dc0:	str	x22, [x19, #48]
  420dc4:	cmn	w28, #0x1
  420dc8:	b.ne	420a38 <_obstack_memory_used@@Base+0x1f48>  // b.any
  420dcc:	b	420c7c <_obstack_memory_used@@Base+0x218c>
  420dd0:	ldr	x0, [x25, x22, lsl #3]
  420dd4:	cmp	x0, x20
  420dd8:	b.ne	420b1c <_obstack_memory_used@@Base+0x202c>  // b.any
  420ddc:	ldr	x0, [x19, #16]
  420de0:	sub	x2, x23, x20
  420de4:	lsl	x2, x2, #2
  420de8:	add	x1, x0, x20, lsl #2
  420dec:	bl	4022c0 <memmove@plt>
  420df0:	ldr	x0, [x19, #8]
  420df4:	ldr	x2, [x19, #48]
  420df8:	add	x1, x0, x20
  420dfc:	sub	x2, x2, x20
  420e00:	bl	4022c0 <memmove@plt>
  420e04:	dup	v1.2d, x20
  420e08:	ldr	q0, [x19, #48]
  420e0c:	ldr	x0, [x19, #48]
  420e10:	sub	v0.2d, v0.2d, v1.2d
  420e14:	sub	x0, x0, x20
  420e18:	cmp	x0, #0x0
  420e1c:	str	q0, [x19, #48]
  420e20:	b.le	420e4c <_obstack_memory_used@@Base+0x235c>
  420e24:	ldr	x2, [x19, #24]
  420e28:	mov	x0, #0x0                   	// #0
  420e2c:	add	x3, x2, x20, lsl #3
  420e30:	ldr	x1, [x3, x0, lsl #3]
  420e34:	sub	x1, x1, x20
  420e38:	str	x1, [x2, x0, lsl #3]
  420e3c:	add	x0, x0, #0x1
  420e40:	ldr	x1, [x19, #48]
  420e44:	cmp	x1, x0
  420e48:	b.gt	420e30 <_obstack_memory_used@@Base+0x2340>
  420e4c:	ldr	x1, [x19, #88]
  420e50:	ldr	x2, [x19, #104]
  420e54:	sub	x1, x1, x20
  420e58:	ldrb	w0, [x19, #139]
  420e5c:	ldr	w3, [x19, #144]
  420e60:	sub	x2, x2, x20
  420e64:	ldp	x25, x26, [sp, #64]
  420e68:	b	4208fc <_obstack_memory_used@@Base+0x1e0c>
  420e6c:	ldp	x25, x26, [sp, #64]
  420e70:	b	4209d0 <_obstack_memory_used@@Base+0x1ee0>
  420e74:	ldr	x22, [x19, #64]
  420e78:	ldr	x20, [x19, #48]
  420e7c:	cmp	x22, x1
  420e80:	csel	x22, x22, x1, le
  420e84:	cmp	x22, x20
  420e88:	b.le	420ecc <_obstack_memory_used@@Base+0x23dc>
  420e8c:	bl	402560 <__ctype_toupper_loc@plt>
  420e90:	ldr	x1, [x19]
  420e94:	ldr	x2, [x19, #120]
  420e98:	add	x1, x1, x20
  420e9c:	ldrb	w3, [x1, x21]
  420ea0:	and	x1, x3, #0xff
  420ea4:	cbnz	x2, 420edc <_obstack_memory_used@@Base+0x23ec>
  420ea8:	ldr	x2, [x0]
  420eac:	ldr	x1, [x19, #8]
  420eb0:	ldr	w2, [x2, x3, lsl #2]
  420eb4:	strb	w2, [x1, x20]
  420eb8:	add	x20, x20, #0x1
  420ebc:	cmp	x22, x20
  420ec0:	b.eq	420ed0 <_obstack_memory_used@@Base+0x23e0>  // b.none
  420ec4:	ldr	x21, [x19, #40]
  420ec8:	b	420e90 <_obstack_memory_used@@Base+0x23a0>
  420ecc:	mov	x22, x20
  420ed0:	dup	v0.2d, x22
  420ed4:	str	q0, [x19, #48]
  420ed8:	b	420930 <_obstack_memory_used@@Base+0x1e40>
  420edc:	ldrb	w2, [x2, x1]
  420ee0:	ldr	x3, [x0]
  420ee4:	ldr	x1, [x19, #8]
  420ee8:	ldr	w2, [x3, x2, lsl #2]
  420eec:	strb	w2, [x1, x20]
  420ef0:	add	x20, x20, #0x1
  420ef4:	cmp	x20, x22
  420ef8:	b.eq	420ed0 <_obstack_memory_used@@Base+0x23e0>  // b.none
  420efc:	ldr	x21, [x19, #40]
  420f00:	b	420e90 <_obstack_memory_used@@Base+0x23a0>
  420f04:	ldr	x2, [x19, #80]
  420f08:	strb	wzr, [x19, #140]
  420f0c:	ldr	x1, [x19, #96]
  420f10:	sub	x2, x2, x21
  420f14:	add	x2, x2, x20
  420f18:	str	x2, [x19, #88]
  420f1c:	sub	x1, x1, x21
  420f20:	add	x1, x1, x20
  420f24:	str	x1, [x19, #104]
  420f28:	b	4209b8 <_obstack_memory_used@@Base+0x1ec8>
  420f2c:	cmp	x0, #0x0
  420f30:	mov	w28, #0x0                   	// #0
  420f34:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  420f38:	b.eq	420f44 <_obstack_memory_used@@Base+0x2454>  // b.none
  420f3c:	ldr	x0, [x19]
  420f40:	ldrb	w28, [x0, x22]
  420f44:	mov	x0, #0x1                   	// #1
  420f48:	str	x26, [x19, #32]
  420f4c:	b	420a1c <_obstack_memory_used@@Base+0x1f2c>
  420f50:	ldp	x25, x26, [sp, #64]
  420f54:	ldp	x27, x28, [sp, #80]
  420f58:	mov	w2, w24
  420f5c:	sub	x1, x23, #0x1
  420f60:	mov	x0, x19
  420f64:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  420f68:	str	w0, [x19, #112]
  420f6c:	b	420a68 <_obstack_memory_used@@Base+0x1f78>
  420f70:	b.le	420f84 <_obstack_memory_used@@Base+0x2494>
  420f74:	ldr	x0, [x19, #16]
  420f78:	lsl	x2, x22, #2
  420f7c:	mov	w1, #0xff                  	// #255
  420f80:	bl	402510 <memset@plt>
  420f84:	ldrb	w0, [x19, #139]
  420f88:	cbz	w0, 420a74 <_obstack_memory_used@@Base+0x1f84>
  420f8c:	ldr	x0, [x19, #8]
  420f90:	mov	x2, x22
  420f94:	mov	w1, #0xff                  	// #255
  420f98:	bl	402510 <memset@plt>
  420f9c:	ldrb	w0, [x19, #139]
  420fa0:	ldr	x22, [x19, #48]
  420fa4:	b	420a74 <_obstack_memory_used@@Base+0x1f84>
  420fa8:	mov	w0, w28
  420fac:	bl	4027c0 <iswalnum@plt>
  420fb0:	cmp	w28, #0x5f
  420fb4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  420fb8:	mov	w0, #0x1                   	// #1
  420fbc:	b.ne	420a5c <_obstack_memory_used@@Base+0x1f6c>  // b.any
  420fc0:	b	420a40 <_obstack_memory_used@@Base+0x1f50>
  420fc4:	mov	x2, x3
  420fc8:	b	420d14 <_obstack_memory_used@@Base+0x2224>
  420fcc:	cmp	x2, #0x6
  420fd0:	mov	x3, #0x6                   	// #6
  420fd4:	csel	x3, x2, x3, le
  420fd8:	add	x1, sp, #0x70
  420fdc:	subs	w4, w3, #0x1
  420fe0:	b.mi	420c50 <_obstack_memory_used@@Base+0x2160>  // b.first
  420fe4:	ldrb	w6, [x25, w4, sxtw]
  420fe8:	add	x1, sp, #0x70
  420fec:	cmp	w3, #0x1
  420ff0:	sub	w5, w3, #0x2
  420ff4:	ldrb	w6, [x0, x6]
  420ff8:	strb	w6, [x1, w4, sxtw]
  420ffc:	b.eq	420c50 <_obstack_memory_used@@Base+0x2160>  // b.none
  421000:	ldrb	w6, [x25, w5, sxtw]
  421004:	cmp	w3, #0x2
  421008:	sub	w4, w3, #0x3
  42100c:	ldrb	w6, [x0, x6]
  421010:	strb	w6, [x1, w5, sxtw]
  421014:	b.eq	420c50 <_obstack_memory_used@@Base+0x2160>  // b.none
  421018:	ldrb	w6, [x25, w4, sxtw]
  42101c:	cmp	w3, #0x3
  421020:	sub	w5, w3, #0x4
  421024:	ldrb	w6, [x0, x6]
  421028:	strb	w6, [x1, w4, sxtw]
  42102c:	b.eq	420c50 <_obstack_memory_used@@Base+0x2160>  // b.none
  421030:	ldrb	w6, [x25, w5, sxtw]
  421034:	cmp	w3, #0x4
  421038:	sub	w4, w3, #0x5
  42103c:	ldrb	w6, [x0, x6]
  421040:	strb	w6, [x1, w5, sxtw]
  421044:	b.eq	420c50 <_obstack_memory_used@@Base+0x2160>  // b.none
  421048:	ldrb	w5, [x25, w4, sxtw]
  42104c:	cmp	w3, #0x5
  421050:	sub	w3, w3, #0x6
  421054:	ldrb	w5, [x0, x5]
  421058:	strb	w5, [x1, w4, sxtw]
  42105c:	b.eq	420c50 <_obstack_memory_used@@Base+0x2160>  // b.none
  421060:	ldrb	w4, [x25, w3, sxtw]
  421064:	ldrb	w0, [x0, x4]
  421068:	strb	w0, [x1, w3, sxtw]
  42106c:	b	420c50 <_obstack_memory_used@@Base+0x2160>
  421070:	sub	x22, x22, x21
  421074:	str	x22, [x19, #48]
  421078:	b	420f58 <_obstack_memory_used@@Base+0x2468>
  42107c:	ldr	x0, [x19, #40]
  421080:	ldr	x22, [x19, #56]
  421084:	ldp	x25, x26, [sp, #64]
  421088:	b	4209d0 <_obstack_memory_used@@Base+0x1ee0>
  42108c:	nop
  421090:	stp	x29, x30, [sp, #-96]!
  421094:	mov	x29, sp
  421098:	stp	x21, x22, [sp, #32]
  42109c:	mov	x22, x2
  4210a0:	ldr	x2, [x1]
  4210a4:	ldr	x21, [x0, #152]
  4210a8:	cmp	x2, #0x0
  4210ac:	b.le	421164 <_obstack_memory_used@@Base+0x2674>
  4210b0:	stp	x19, x20, [sp, #16]
  4210b4:	mov	x19, #0x0                   	// #0
  4210b8:	stp	x23, x24, [sp, #48]
  4210bc:	mov	x24, x0
  4210c0:	mov	x23, x3
  4210c4:	stp	x25, x26, [sp, #64]
  4210c8:	mov	x25, x1
  4210cc:	b	4210d8 <_obstack_memory_used@@Base+0x25e8>
  4210d0:	cmp	x19, x2
  4210d4:	b.ge	421158 <_obstack_memory_used@@Base+0x2668>  // b.tcont
  4210d8:	ldr	x4, [x22]
  4210dc:	ldr	x5, [x21]
  4210e0:	ldr	x20, [x4, x19, lsl #3]
  4210e4:	add	x19, x19, #0x1
  4210e8:	lsl	x4, x20, #4
  4210ec:	add	x6, x5, x4
  4210f0:	ldrb	w6, [x6, #8]
  4210f4:	cmp	w6, #0x8
  4210f8:	b.ne	4210d0 <_obstack_memory_used@@Base+0x25e0>  // b.any
  4210fc:	ldr	x3, [x5, x4]
  421100:	cmp	x3, #0x3f
  421104:	b.gt	4210d0 <_obstack_memory_used@@Base+0x25e0>
  421108:	ldr	x4, [x21, #160]
  42110c:	lsr	x3, x4, x3
  421110:	tbz	w3, #0, 4210d0 <_obstack_memory_used@@Base+0x25e0>
  421114:	ldp	x26, x0, [x24, #232]
  421118:	str	x27, [sp, #80]
  42111c:	ldr	x27, [x24, #248]
  421120:	cmp	x0, x26
  421124:	b.eq	42118c <_obstack_memory_used@@Base+0x269c>  // b.none
  421128:	mov	x1, #0x30                  	// #48
  42112c:	mov	x0, #0x1                   	// #1
  421130:	bl	402520 <calloc@plt>
  421134:	str	x0, [x27, x26, lsl #3]
  421138:	add	x1, x26, #0x1
  42113c:	cbz	x0, 421174 <_obstack_memory_used@@Base+0x2684>
  421140:	ldr	x27, [sp, #80]
  421144:	str	x1, [x24, #232]
  421148:	stp	x23, x20, [x0]
  42114c:	ldr	x2, [x25]
  421150:	cmp	x19, x2
  421154:	b.lt	4210d8 <_obstack_memory_used@@Base+0x25e8>  // b.tstop
  421158:	ldp	x19, x20, [sp, #16]
  42115c:	ldp	x23, x24, [sp, #48]
  421160:	ldp	x25, x26, [sp, #64]
  421164:	mov	w0, #0x0                   	// #0
  421168:	ldp	x21, x22, [sp, #32]
  42116c:	ldp	x29, x30, [sp], #96
  421170:	ret
  421174:	mov	w0, #0xc                   	// #12
  421178:	ldp	x19, x20, [sp, #16]
  42117c:	ldp	x23, x24, [sp, #48]
  421180:	ldp	x25, x26, [sp, #64]
  421184:	ldr	x27, [sp, #80]
  421188:	b	421168 <_obstack_memory_used@@Base+0x2678>
  42118c:	mov	x0, x27
  421190:	lsl	x1, x26, #4
  421194:	bl	402550 <realloc@plt>
  421198:	mov	x27, x0
  42119c:	lsl	x0, x26, #1
  4211a0:	cbz	x27, 421174 <_obstack_memory_used@@Base+0x2684>
  4211a4:	stp	x0, x27, [x24, #240]
  4211a8:	ldr	x26, [x24, #232]
  4211ac:	b	421128 <_obstack_memory_used@@Base+0x2638>
  4211b0:	stp	x29, x30, [sp, #-80]!
  4211b4:	mov	x29, sp
  4211b8:	stp	x19, x20, [sp, #16]
  4211bc:	mov	x20, x0
  4211c0:	mov	x19, x1
  4211c4:	stp	x21, x22, [sp, #32]
  4211c8:	mov	x22, x3
  4211cc:	mov	x21, x5
  4211d0:	stp	x23, x24, [sp, #48]
  4211d4:	mov	x24, x4
  4211d8:	stp	x25, x26, [sp, #64]
  4211dc:	mov	x25, x2
  4211e0:	tbz	w6, #22, 421200 <_obstack_memory_used@@Base+0x2710>
  4211e4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4211e8:	mov	x0, x5
  4211ec:	add	x1, x1, #0x4b0
  4211f0:	bl	402690 <strcmp@plt>
  4211f4:	cbnz	w0, 4212ec <_obstack_memory_used@@Base+0x27fc>
  4211f8:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x12510>
  4211fc:	add	x21, x21, #0x4a8
  421200:	ldr	x23, [x22]
  421204:	ldr	x0, [x24]
  421208:	ldr	x26, [x25]
  42120c:	cmp	x0, x23
  421210:	b.eq	421320 <_obstack_memory_used@@Base+0x2830>  // b.none
  421214:	add	x0, x23, #0x1
  421218:	str	x0, [x22]
  42121c:	mov	x0, x21
  421220:	bl	402350 <wctype@plt>
  421224:	str	x0, [x26, x23, lsl #3]
  421228:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  42122c:	mov	x0, x21
  421230:	add	x1, x1, #0x620
  421234:	bl	402690 <strcmp@plt>
  421238:	cbz	w0, 4212ac <_obstack_memory_used@@Base+0x27bc>
  42123c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  421240:	mov	x0, x21
  421244:	add	x1, x1, #0x638
  421248:	bl	402690 <strcmp@plt>
  42124c:	cbnz	w0, 42134c <_obstack_memory_used@@Base+0x285c>
  421250:	bl	4026a0 <__ctype_b_loc@plt>
  421254:	mov	x2, #0x0                   	// #0
  421258:	mov	x5, #0x1                   	// #1
  42125c:	ldr	x4, [x0]
  421260:	cbnz	x20, 4214d8 <_obstack_memory_used@@Base+0x29e8>
  421264:	nop
  421268:	ldrh	w0, [x4, x2, lsl #1]
  42126c:	asr	x1, x2, #6
  421270:	lsl	x3, x5, x2
  421274:	add	x2, x2, #0x1
  421278:	tbz	w0, #1, 421288 <_obstack_memory_used@@Base+0x2798>
  42127c:	ldr	x0, [x19, x1, lsl #3]
  421280:	orr	x0, x0, x3
  421284:	str	x0, [x19, x1, lsl #3]
  421288:	cmp	x2, #0x100
  42128c:	b.ne	421268 <_obstack_memory_used@@Base+0x2778>  // b.any
  421290:	mov	w0, #0x0                   	// #0
  421294:	ldp	x19, x20, [sp, #16]
  421298:	ldp	x21, x22, [sp, #32]
  42129c:	ldp	x23, x24, [sp, #48]
  4212a0:	ldp	x25, x26, [sp, #64]
  4212a4:	ldp	x29, x30, [sp], #80
  4212a8:	ret
  4212ac:	bl	4026a0 <__ctype_b_loc@plt>
  4212b0:	mov	x2, #0x0                   	// #0
  4212b4:	mov	x6, #0x1                   	// #1
  4212b8:	ldr	x5, [x0]
  4212bc:	cbnz	x20, 42149c <_obstack_memory_used@@Base+0x29ac>
  4212c0:	ldrh	w3, [x5, x2, lsl #1]
  4212c4:	asr	x0, x2, #6
  4212c8:	lsl	x4, x6, x2
  4212cc:	add	x2, x2, #0x1
  4212d0:	tbz	w3, #3, 4212e0 <_obstack_memory_used@@Base+0x27f0>
  4212d4:	ldr	x1, [x19, x0, lsl #3]
  4212d8:	orr	x1, x1, x4
  4212dc:	str	x1, [x19, x0, lsl #3]
  4212e0:	cmp	x2, #0x100
  4212e4:	b.ne	4212c0 <_obstack_memory_used@@Base+0x27d0>  // b.any
  4212e8:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  4212ec:	mov	x0, x21
  4212f0:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4212f4:	add	x1, x1, #0x4b8
  4212f8:	bl	402690 <strcmp@plt>
  4212fc:	cmp	w0, #0x0
  421300:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  421304:	ldr	x23, [x22]
  421308:	add	x1, x1, #0x4a8
  42130c:	ldr	x0, [x24]
  421310:	csel	x21, x1, x21, eq  // eq = none
  421314:	ldr	x26, [x25]
  421318:	cmp	x0, x23
  42131c:	b.ne	421214 <_obstack_memory_used@@Base+0x2724>  // b.any
  421320:	lsl	x23, x23, #1
  421324:	mov	x0, x26
  421328:	add	x23, x23, #0x1
  42132c:	lsl	x1, x23, #3
  421330:	bl	402550 <realloc@plt>
  421334:	mov	x26, x0
  421338:	cbz	x0, 4215f0 <_obstack_memory_used@@Base+0x2b00>
  42133c:	str	x0, [x25]
  421340:	str	x23, [x24]
  421344:	ldr	x23, [x22]
  421348:	b	421214 <_obstack_memory_used@@Base+0x2724>
  42134c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  421350:	mov	x0, x21
  421354:	add	x1, x1, #0x4b8
  421358:	bl	402690 <strcmp@plt>
  42135c:	cbz	w0, 4213b4 <_obstack_memory_used@@Base+0x28c4>
  421360:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  421364:	mov	x0, x21
  421368:	add	x1, x1, #0x610
  42136c:	bl	402690 <strcmp@plt>
  421370:	cbnz	w0, 4213f4 <_obstack_memory_used@@Base+0x2904>
  421374:	bl	4026a0 <__ctype_b_loc@plt>
  421378:	mov	x1, #0x0                   	// #0
  42137c:	mov	x5, #0x1                   	// #1
  421380:	ldr	x4, [x0]
  421384:	cbnz	x20, 421680 <_obstack_memory_used@@Base+0x2b90>
  421388:	ldrh	w0, [x4, x1, lsl #1]
  42138c:	asr	x2, x1, #6
  421390:	lsl	x3, x5, x1
  421394:	add	x1, x1, #0x1
  421398:	tbz	w0, #13, 4213a8 <_obstack_memory_used@@Base+0x28b8>
  42139c:	ldr	x0, [x19, x2, lsl #3]
  4213a0:	orr	x0, x0, x3
  4213a4:	str	x0, [x19, x2, lsl #3]
  4213a8:	cmp	x1, #0x100
  4213ac:	b.ne	421388 <_obstack_memory_used@@Base+0x2898>  // b.any
  4213b0:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  4213b4:	bl	4026a0 <__ctype_b_loc@plt>
  4213b8:	mov	x1, #0x0                   	// #0
  4213bc:	mov	x5, #0x1                   	// #1
  4213c0:	ldr	x4, [x0]
  4213c4:	cbnz	x20, 421510 <_obstack_memory_used@@Base+0x2a20>
  4213c8:	ldrh	w0, [x4, x1, lsl #1]
  4213cc:	asr	x2, x1, #6
  4213d0:	lsl	x3, x5, x1
  4213d4:	add	x1, x1, #0x1
  4213d8:	tbz	w0, #9, 4213e8 <_obstack_memory_used@@Base+0x28f8>
  4213dc:	ldr	x0, [x19, x2, lsl #3]
  4213e0:	orr	x0, x0, x3
  4213e4:	str	x0, [x19, x2, lsl #3]
  4213e8:	cmp	x1, #0x100
  4213ec:	b.ne	4213c8 <_obstack_memory_used@@Base+0x28d8>  // b.any
  4213f0:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  4213f4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4213f8:	mov	x0, x21
  4213fc:	add	x1, x1, #0x4a8
  421400:	bl	402690 <strcmp@plt>
  421404:	cbz	w0, 42145c <_obstack_memory_used@@Base+0x296c>
  421408:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  42140c:	mov	x0, x21
  421410:	add	x1, x1, #0x600
  421414:	bl	402690 <strcmp@plt>
  421418:	cbnz	w0, 421548 <_obstack_memory_used@@Base+0x2a58>
  42141c:	bl	4026a0 <__ctype_b_loc@plt>
  421420:	mov	x1, #0x0                   	// #0
  421424:	mov	x5, #0x1                   	// #1
  421428:	ldr	x4, [x0]
  42142c:	cbnz	x20, 4216b8 <_obstack_memory_used@@Base+0x2bc8>
  421430:	ldrh	w2, [x4, x1, lsl #1]
  421434:	asr	x0, x1, #6
  421438:	lsl	x3, x5, x1
  42143c:	add	x1, x1, #0x1
  421440:	tbz	w2, #11, 421450 <_obstack_memory_used@@Base+0x2960>
  421444:	ldr	x2, [x19, x0, lsl #3]
  421448:	orr	x2, x2, x3
  42144c:	str	x2, [x19, x0, lsl #3]
  421450:	cmp	x1, #0x100
  421454:	b.ne	421430 <_obstack_memory_used@@Base+0x2940>  // b.any
  421458:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  42145c:	bl	4026a0 <__ctype_b_loc@plt>
  421460:	mov	x1, #0x0                   	// #0
  421464:	mov	x5, #0x1                   	// #1
  421468:	ldr	x4, [x0]
  42146c:	cbnz	x20, 42164c <_obstack_memory_used@@Base+0x2b5c>
  421470:	ldrh	w0, [x4, x1, lsl #1]
  421474:	asr	x2, x1, #6
  421478:	lsl	x3, x5, x1
  42147c:	add	x1, x1, #0x1
  421480:	tbz	w0, #10, 421490 <_obstack_memory_used@@Base+0x29a0>
  421484:	ldr	x0, [x19, x2, lsl #3]
  421488:	orr	x0, x0, x3
  42148c:	str	x0, [x19, x2, lsl #3]
  421490:	cmp	x1, #0x100
  421494:	b.ne	421470 <_obstack_memory_used@@Base+0x2980>  // b.any
  421498:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  42149c:	mov	x4, x6
  4214a0:	mov	x0, #0x0                   	// #0
  4214a4:	nop
  4214a8:	ldrh	w1, [x5, x0, lsl #1]
  4214ac:	tbz	w1, #3, 4214c8 <_obstack_memory_used@@Base+0x29d8>
  4214b0:	ldrb	w1, [x20, x0]
  4214b4:	ubfx	x3, x1, #6, #2
  4214b8:	lsl	x1, x4, x1
  4214bc:	ldr	x2, [x19, x3, lsl #3]
  4214c0:	orr	x1, x2, x1
  4214c4:	str	x1, [x19, x3, lsl #3]
  4214c8:	add	x0, x0, #0x1
  4214cc:	cmp	x0, #0x100
  4214d0:	b.ne	4214a8 <_obstack_memory_used@@Base+0x29b8>  // b.any
  4214d4:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  4214d8:	mov	x0, #0x0                   	// #0
  4214dc:	nop
  4214e0:	ldrh	w1, [x4, x0, lsl #1]
  4214e4:	tbz	w1, #1, 421500 <_obstack_memory_used@@Base+0x2a10>
  4214e8:	ldrb	w1, [x20, x0]
  4214ec:	ubfx	x3, x1, #6, #2
  4214f0:	lsl	x1, x5, x1
  4214f4:	ldr	x2, [x19, x3, lsl #3]
  4214f8:	orr	x1, x2, x1
  4214fc:	str	x1, [x19, x3, lsl #3]
  421500:	add	x0, x0, #0x1
  421504:	cmp	x0, #0x100
  421508:	b.ne	4214e0 <_obstack_memory_used@@Base+0x29f0>  // b.any
  42150c:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421510:	mov	x0, #0x0                   	// #0
  421514:	nop
  421518:	ldrh	w1, [x4, x0, lsl #1]
  42151c:	tbz	w1, #9, 421538 <_obstack_memory_used@@Base+0x2a48>
  421520:	ldrb	w1, [x20, x0]
  421524:	ubfx	x3, x1, #6, #2
  421528:	lsl	x1, x5, x1
  42152c:	ldr	x2, [x19, x3, lsl #3]
  421530:	orr	x1, x2, x1
  421534:	str	x1, [x19, x3, lsl #3]
  421538:	add	x0, x0, #0x1
  42153c:	cmp	x0, #0x100
  421540:	b.ne	421518 <_obstack_memory_used@@Base+0x2a28>  // b.any
  421544:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421548:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  42154c:	mov	x0, x21
  421550:	add	x1, x1, #0x628
  421554:	bl	402690 <strcmp@plt>
  421558:	cbnz	w0, 42159c <_obstack_memory_used@@Base+0x2aac>
  42155c:	bl	4026a0 <__ctype_b_loc@plt>
  421560:	mov	x1, #0x0                   	// #0
  421564:	mov	x5, #0x1                   	// #1
  421568:	ldr	x4, [x0]
  42156c:	cbnz	x20, 421898 <_obstack_memory_used@@Base+0x2da8>
  421570:	ldrh	w0, [x4, x1, lsl #1]
  421574:	asr	x2, x1, #6
  421578:	lsl	x3, x5, x1
  42157c:	add	x1, x1, #0x1
  421580:	tbz	w0, #14, 421590 <_obstack_memory_used@@Base+0x2aa0>
  421584:	ldr	x0, [x19, x2, lsl #3]
  421588:	orr	x0, x0, x3
  42158c:	str	x0, [x19, x2, lsl #3]
  421590:	cmp	x1, #0x100
  421594:	b.ne	421570 <_obstack_memory_used@@Base+0x2a80>  // b.any
  421598:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  42159c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4215a0:	mov	x0, x21
  4215a4:	add	x1, x1, #0x4b0
  4215a8:	bl	402690 <strcmp@plt>
  4215ac:	cbnz	w0, 4215f8 <_obstack_memory_used@@Base+0x2b08>
  4215b0:	bl	4026a0 <__ctype_b_loc@plt>
  4215b4:	mov	x1, #0x0                   	// #0
  4215b8:	mov	x5, #0x1                   	// #1
  4215bc:	ldr	x4, [x0]
  4215c0:	cbnz	x20, 421904 <_obstack_memory_used@@Base+0x2e14>
  4215c4:	ldrh	w0, [x4, x1, lsl #1]
  4215c8:	asr	x2, x1, #6
  4215cc:	lsl	x3, x5, x1
  4215d0:	add	x1, x1, #0x1
  4215d4:	tbz	w0, #8, 4215e4 <_obstack_memory_used@@Base+0x2af4>
  4215d8:	ldr	x0, [x19, x2, lsl #3]
  4215dc:	orr	x0, x0, x3
  4215e0:	str	x0, [x19, x2, lsl #3]
  4215e4:	cmp	x1, #0x100
  4215e8:	b.ne	4215c4 <_obstack_memory_used@@Base+0x2ad4>  // b.any
  4215ec:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  4215f0:	mov	w0, #0xc                   	// #12
  4215f4:	b	421294 <_obstack_memory_used@@Base+0x27a4>
  4215f8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4215fc:	mov	x0, x21
  421600:	add	x1, x1, #0x640
  421604:	bl	402690 <strcmp@plt>
  421608:	cbnz	w0, 4216ec <_obstack_memory_used@@Base+0x2bfc>
  42160c:	bl	4026a0 <__ctype_b_loc@plt>
  421610:	mov	x1, #0x0                   	// #0
  421614:	mov	x4, #0x1                   	// #1
  421618:	ldr	x2, [x0]
  42161c:	cbnz	x20, 4218cc <_obstack_memory_used@@Base+0x2ddc>
  421620:	ldrh	w0, [x2, x1, lsl #1]
  421624:	asr	x3, x1, #6
  421628:	lsl	x5, x4, x1
  42162c:	add	x1, x1, #0x1
  421630:	tbz	w0, #0, 421640 <_obstack_memory_used@@Base+0x2b50>
  421634:	ldr	x0, [x19, x3, lsl #3]
  421638:	orr	x0, x0, x5
  42163c:	str	x0, [x19, x3, lsl #3]
  421640:	cmp	x1, #0x100
  421644:	b.ne	421620 <_obstack_memory_used@@Base+0x2b30>  // b.any
  421648:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  42164c:	mov	x0, #0x0                   	// #0
  421650:	ldrh	w1, [x4, x0, lsl #1]
  421654:	tbz	w1, #10, 421670 <_obstack_memory_used@@Base+0x2b80>
  421658:	ldrb	w1, [x20, x0]
  42165c:	ubfx	x3, x1, #6, #2
  421660:	lsl	x1, x5, x1
  421664:	ldr	x2, [x19, x3, lsl #3]
  421668:	orr	x1, x2, x1
  42166c:	str	x1, [x19, x3, lsl #3]
  421670:	add	x0, x0, #0x1
  421674:	cmp	x0, #0x100
  421678:	b.ne	421650 <_obstack_memory_used@@Base+0x2b60>  // b.any
  42167c:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421680:	mov	x0, #0x0                   	// #0
  421684:	nop
  421688:	ldrh	w1, [x4, x0, lsl #1]
  42168c:	tbz	w1, #13, 4216a8 <_obstack_memory_used@@Base+0x2bb8>
  421690:	ldrb	w1, [x20, x0]
  421694:	ubfx	x3, x1, #6, #2
  421698:	lsl	x1, x5, x1
  42169c:	ldr	x2, [x19, x3, lsl #3]
  4216a0:	orr	x1, x2, x1
  4216a4:	str	x1, [x19, x3, lsl #3]
  4216a8:	add	x0, x0, #0x1
  4216ac:	cmp	x0, #0x100
  4216b0:	b.ne	421688 <_obstack_memory_used@@Base+0x2b98>  // b.any
  4216b4:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  4216b8:	mov	x0, #0x0                   	// #0
  4216bc:	ldrh	w1, [x4, x0, lsl #1]
  4216c0:	tbz	w1, #11, 4216dc <_obstack_memory_used@@Base+0x2bec>
  4216c4:	ldrb	w1, [x20, x0]
  4216c8:	ubfx	x3, x1, #6, #2
  4216cc:	lsl	x1, x5, x1
  4216d0:	ldr	x2, [x19, x3, lsl #3]
  4216d4:	orr	x1, x2, x1
  4216d8:	str	x1, [x19, x3, lsl #3]
  4216dc:	add	x0, x0, #0x1
  4216e0:	cmp	x0, #0x100
  4216e4:	b.ne	4216bc <_obstack_memory_used@@Base+0x2bcc>  // b.any
  4216e8:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  4216ec:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  4216f0:	mov	x0, x21
  4216f4:	add	x1, x1, #0x630
  4216f8:	bl	402690 <strcmp@plt>
  4216fc:	cbnz	w0, 421778 <_obstack_memory_used@@Base+0x2c88>
  421700:	bl	4026a0 <__ctype_b_loc@plt>
  421704:	mov	x1, #0x0                   	// #0
  421708:	mov	x4, #0x1                   	// #1
  42170c:	ldr	x3, [x0]
  421710:	cbnz	x20, 421740 <_obstack_memory_used@@Base+0x2c50>
  421714:	ldrsh	w0, [x3, x1, lsl #1]
  421718:	asr	x2, x1, #6
  42171c:	lsl	x5, x4, x1
  421720:	add	x1, x1, #0x1
  421724:	tbz	w0, #31, 421734 <_obstack_memory_used@@Base+0x2c44>
  421728:	ldr	x0, [x19, x2, lsl #3]
  42172c:	orr	x0, x0, x5
  421730:	str	x0, [x19, x2, lsl #3]
  421734:	cmp	x1, #0x100
  421738:	b.ne	421714 <_obstack_memory_used@@Base+0x2c24>  // b.any
  42173c:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421740:	mov	x5, x4
  421744:	mov	x0, #0x0                   	// #0
  421748:	ldrsh	w1, [x3, x0, lsl #1]
  42174c:	tbz	w1, #31, 421768 <_obstack_memory_used@@Base+0x2c78>
  421750:	ldrb	w1, [x20, x0]
  421754:	ubfx	x4, x1, #6, #2
  421758:	lsl	x1, x5, x1
  42175c:	ldr	x2, [x19, x4, lsl #3]
  421760:	orr	x1, x2, x1
  421764:	str	x1, [x19, x4, lsl #3]
  421768:	add	x0, x0, #0x1
  42176c:	cmp	x0, #0x100
  421770:	b.ne	421748 <_obstack_memory_used@@Base+0x2c58>  // b.any
  421774:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421778:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  42177c:	mov	x0, x21
  421780:	add	x1, x1, #0x618
  421784:	bl	402690 <strcmp@plt>
  421788:	cbnz	w0, 421804 <_obstack_memory_used@@Base+0x2d14>
  42178c:	bl	4026a0 <__ctype_b_loc@plt>
  421790:	mov	x1, #0x0                   	// #0
  421794:	mov	x4, #0x1                   	// #1
  421798:	ldr	x3, [x0]
  42179c:	cbnz	x20, 4217cc <_obstack_memory_used@@Base+0x2cdc>
  4217a0:	ldrh	w0, [x3, x1, lsl #1]
  4217a4:	asr	x2, x1, #6
  4217a8:	lsl	x5, x4, x1
  4217ac:	add	x1, x1, #0x1
  4217b0:	tbz	w0, #2, 4217c0 <_obstack_memory_used@@Base+0x2cd0>
  4217b4:	ldr	x0, [x19, x2, lsl #3]
  4217b8:	orr	x0, x0, x5
  4217bc:	str	x0, [x19, x2, lsl #3]
  4217c0:	cmp	x1, #0x100
  4217c4:	b.ne	4217a0 <_obstack_memory_used@@Base+0x2cb0>  // b.any
  4217c8:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  4217cc:	mov	x5, x4
  4217d0:	mov	x0, #0x0                   	// #0
  4217d4:	ldrh	w1, [x3, x0, lsl #1]
  4217d8:	tbz	w1, #2, 4217f4 <_obstack_memory_used@@Base+0x2d04>
  4217dc:	ldrb	w1, [x20, x0]
  4217e0:	ubfx	x4, x1, #6, #2
  4217e4:	lsl	x1, x5, x1
  4217e8:	ldr	x2, [x19, x4, lsl #3]
  4217ec:	orr	x1, x2, x1
  4217f0:	str	x1, [x19, x4, lsl #3]
  4217f4:	add	x0, x0, #0x1
  4217f8:	cmp	x0, #0x100
  4217fc:	b.ne	4217d4 <_obstack_memory_used@@Base+0x2ce4>  // b.any
  421800:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421804:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  421808:	mov	x0, x21
  42180c:	add	x1, x1, #0x608
  421810:	bl	402690 <strcmp@plt>
  421814:	cbnz	w0, 421890 <_obstack_memory_used@@Base+0x2da0>
  421818:	bl	4026a0 <__ctype_b_loc@plt>
  42181c:	mov	x1, #0x0                   	// #0
  421820:	mov	x4, #0x1                   	// #1
  421824:	ldr	x3, [x0]
  421828:	cbnz	x20, 421858 <_obstack_memory_used@@Base+0x2d68>
  42182c:	ldrh	w0, [x3, x1, lsl #1]
  421830:	asr	x2, x1, #6
  421834:	lsl	x5, x4, x1
  421838:	add	x1, x1, #0x1
  42183c:	tbz	w0, #12, 42184c <_obstack_memory_used@@Base+0x2d5c>
  421840:	ldr	x0, [x19, x2, lsl #3]
  421844:	orr	x0, x0, x5
  421848:	str	x0, [x19, x2, lsl #3]
  42184c:	cmp	x1, #0x100
  421850:	b.ne	42182c <_obstack_memory_used@@Base+0x2d3c>  // b.any
  421854:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421858:	mov	x5, x4
  42185c:	mov	x0, #0x0                   	// #0
  421860:	ldrh	w1, [x3, x0, lsl #1]
  421864:	tbz	w1, #12, 421880 <_obstack_memory_used@@Base+0x2d90>
  421868:	ldrb	w1, [x20, x0]
  42186c:	ubfx	x4, x1, #6, #2
  421870:	lsl	x1, x5, x1
  421874:	ldr	x2, [x19, x4, lsl #3]
  421878:	orr	x1, x2, x1
  42187c:	str	x1, [x19, x4, lsl #3]
  421880:	add	x0, x0, #0x1
  421884:	cmp	x0, #0x100
  421888:	b.ne	421860 <_obstack_memory_used@@Base+0x2d70>  // b.any
  42188c:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421890:	mov	w0, #0x4                   	// #4
  421894:	b	421294 <_obstack_memory_used@@Base+0x27a4>
  421898:	mov	x0, #0x0                   	// #0
  42189c:	ldrh	w1, [x4, x0, lsl #1]
  4218a0:	tbz	w1, #14, 4218bc <_obstack_memory_used@@Base+0x2dcc>
  4218a4:	ldrb	w1, [x20, x0]
  4218a8:	ubfx	x3, x1, #6, #2
  4218ac:	lsl	x1, x5, x1
  4218b0:	ldr	x2, [x19, x3, lsl #3]
  4218b4:	orr	x1, x2, x1
  4218b8:	str	x1, [x19, x3, lsl #3]
  4218bc:	add	x0, x0, #0x1
  4218c0:	cmp	x0, #0x100
  4218c4:	b.ne	42189c <_obstack_memory_used@@Base+0x2dac>  // b.any
  4218c8:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  4218cc:	mov	x5, x4
  4218d0:	mov	x0, #0x0                   	// #0
  4218d4:	ldrh	w1, [x2, x0, lsl #1]
  4218d8:	tbz	w1, #0, 4218f4 <_obstack_memory_used@@Base+0x2e04>
  4218dc:	ldrb	w1, [x20, x0]
  4218e0:	ubfx	x4, x1, #6, #2
  4218e4:	lsl	x1, x5, x1
  4218e8:	ldr	x3, [x19, x4, lsl #3]
  4218ec:	orr	x1, x3, x1
  4218f0:	str	x1, [x19, x4, lsl #3]
  4218f4:	add	x0, x0, #0x1
  4218f8:	cmp	x0, #0x100
  4218fc:	b.ne	4218d4 <_obstack_memory_used@@Base+0x2de4>  // b.any
  421900:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421904:	mov	x0, #0x0                   	// #0
  421908:	ldrh	w1, [x4, x0, lsl #1]
  42190c:	tbz	w1, #8, 421928 <_obstack_memory_used@@Base+0x2e38>
  421910:	ldrb	w1, [x20, x0]
  421914:	ubfx	x3, x1, #6, #2
  421918:	lsl	x1, x5, x1
  42191c:	ldr	x2, [x19, x3, lsl #3]
  421920:	orr	x1, x2, x1
  421924:	str	x1, [x19, x3, lsl #3]
  421928:	add	x0, x0, #0x1
  42192c:	cmp	x0, #0x100
  421930:	b.ne	421908 <_obstack_memory_used@@Base+0x2e18>  // b.any
  421934:	b	421290 <_obstack_memory_used@@Base+0x27a0>
  421938:	stp	x29, x30, [sp, #-432]!
  42193c:	mov	x29, sp
  421940:	stp	x23, x24, [sp, #48]
  421944:	ldr	x23, [x0]
  421948:	stp	x19, x20, [sp, #16]
  42194c:	mov	x19, x3
  421950:	stp	x21, x22, [sp, #32]
  421954:	str	wzr, [sp, #124]
  421958:	stp	x0, x2, [sp, #128]
  42195c:	ldr	w0, [x23, #180]
  421960:	str	x1, [sp, #152]
  421964:	cmp	w0, #0x1
  421968:	b.ne	42197c <_obstack_memory_used@@Base+0x2e8c>  // b.any
  42196c:	ldr	x0, [sp, #128]
  421970:	ldr	x0, [x0, #24]
  421974:	ubfx	w0, w0, #22, #1
  421978:	str	w0, [sp, #124]
  42197c:	ldr	x0, [sp, #152]
  421980:	neg	x21, x19, lsl #2
  421984:	mov	x22, #0x0                   	// #0
  421988:	ldr	x2, [x0]
  42198c:	cmp	x2, #0x0
  421990:	b.le	421a6c <_obstack_memory_used@@Base+0x2f7c>
  421994:	add	x24, sp, #0xb0
  421998:	stp	x25, x26, [sp, #64]
  42199c:	stp	x27, x28, [sp, #80]
  4219a0:	mov	w28, #0x1                   	// #1
  4219a4:	b	4219d8 <_obstack_memory_used@@Base+0x2ee8>
  4219a8:	cmp	w20, #0x3
  4219ac:	b.eq	421bdc <_obstack_memory_used@@Base+0x30ec>  // b.none
  4219b0:	cmp	w20, #0x6
  4219b4:	b.eq	421a80 <_obstack_memory_used@@Base+0x2f90>  // b.none
  4219b8:	and	w0, w20, #0xfffffffd
  4219bc:	cmp	w0, #0x5
  4219c0:	b.eq	421d58 <_obstack_memory_used@@Base+0x3268>  // b.none
  4219c4:	cmp	w20, #0x2
  4219c8:	b.eq	421d7c <_obstack_memory_used@@Base+0x328c>  // b.none
  4219cc:	add	x22, x22, #0x1
  4219d0:	cmp	x22, x2
  4219d4:	b.ge	421a64 <_obstack_memory_used@@Base+0x2f74>  // b.tcont
  4219d8:	ldr	x0, [sp, #136]
  4219dc:	ldr	x1, [x0]
  4219e0:	ldr	x0, [x23]
  4219e4:	ldr	x26, [x1, x22, lsl #3]
  4219e8:	lsl	x1, x26, #4
  4219ec:	str	x1, [sp, #104]
  4219f0:	add	x1, x0, x1
  4219f4:	ldrb	w20, [x1, #8]
  4219f8:	cmp	w20, #0x1
  4219fc:	b.ne	4219a8 <_obstack_memory_used@@Base+0x2eb8>  // b.any
  421a00:	ldr	x1, [sp, #104]
  421a04:	ldrb	w1, [x0, x1]
  421a08:	str	w1, [sp, #112]
  421a0c:	and	x0, x1, #0xff
  421a10:	strb	w20, [x19, x0]
  421a14:	ldr	w0, [sp, #124]
  421a18:	cbz	w0, 421a34 <_obstack_memory_used@@Base+0x2f44>
  421a1c:	bl	4023c0 <__ctype_tolower_loc@plt>
  421a20:	ldr	w1, [sp, #112]
  421a24:	ldr	x0, [x0]
  421a28:	mov	w1, w1
  421a2c:	ldrsw	x0, [x0, x1, lsl #2]
  421a30:	strb	w20, [x19, x0]
  421a34:	ldr	x0, [sp, #128]
  421a38:	ldr	x0, [x0, #24]
  421a3c:	tbz	w0, #22, 421a50 <_obstack_memory_used@@Base+0x2f60>
  421a40:	ldr	w0, [x23, #180]
  421a44:	cmp	w0, #0x1
  421a48:	b.gt	421c9c <_obstack_memory_used@@Base+0x31ac>
  421a4c:	nop
  421a50:	ldr	x0, [sp, #152]
  421a54:	add	x22, x22, #0x1
  421a58:	ldr	x2, [x0]
  421a5c:	cmp	x22, x2
  421a60:	b.lt	4219d8 <_obstack_memory_used@@Base+0x2ee8>  // b.tstop
  421a64:	ldp	x25, x26, [sp, #64]
  421a68:	ldp	x27, x28, [sp, #80]
  421a6c:	ldp	x19, x20, [sp, #16]
  421a70:	ldp	x21, x22, [sp, #32]
  421a74:	ldp	x23, x24, [sp, #48]
  421a78:	ldp	x29, x30, [sp], #432
  421a7c:	ret
  421a80:	ldr	w0, [x23, #180]
  421a84:	ldr	x26, [x1]
  421a88:	cmp	w0, #0x1
  421a8c:	b.le	421aa8 <_obstack_memory_used@@Base+0x2fb8>
  421a90:	ldr	x0, [x26, #72]
  421a94:	cbnz	x0, 421b68 <_obstack_memory_used@@Base+0x3078>
  421a98:	ldrb	w0, [x26, #32]
  421a9c:	tbnz	w0, #0, 421b68 <_obstack_memory_used@@Base+0x3078>
  421aa0:	ldr	x0, [x26, #64]
  421aa4:	cbnz	x0, 421b68 <_obstack_memory_used@@Base+0x3078>
  421aa8:	ldr	x0, [x26, #40]
  421aac:	mov	x25, #0x0                   	// #0
  421ab0:	cmp	x0, #0x0
  421ab4:	b.gt	421ac8 <_obstack_memory_used@@Base+0x2fd8>
  421ab8:	b	4219cc <_obstack_memory_used@@Base+0x2edc>
  421abc:	ldr	x0, [x26, #40]
  421ac0:	cmp	x25, x0
  421ac4:	b.ge	421a50 <_obstack_memory_used@@Base+0x2f60>  // b.tcont
  421ac8:	str	xzr, [sp, #168]
  421acc:	add	x2, sp, #0xa8
  421ad0:	mov	x0, x24
  421ad4:	lsl	x20, x25, #2
  421ad8:	ldr	x1, [x26]
  421adc:	ldr	w1, [x1, x25, lsl #2]
  421ae0:	add	x25, x25, #0x1
  421ae4:	bl	402920 <wcrtomb@plt>
  421ae8:	cmn	x0, #0x1
  421aec:	b.eq	421b20 <_obstack_memory_used@@Base+0x3030>  // b.none
  421af0:	ldrb	w1, [sp, #176]
  421af4:	str	w1, [sp, #104]
  421af8:	and	x0, x1, #0xff
  421afc:	strb	w28, [x19, x0]
  421b00:	ldr	w0, [sp, #124]
  421b04:	cbz	w0, 421b20 <_obstack_memory_used@@Base+0x3030>
  421b08:	bl	4023c0 <__ctype_tolower_loc@plt>
  421b0c:	ldr	w1, [sp, #104]
  421b10:	ldr	x0, [x0]
  421b14:	mov	w1, w1
  421b18:	ldrsw	x0, [x0, x1, lsl #2]
  421b1c:	strb	w28, [x19, x0]
  421b20:	ldr	x0, [sp, #128]
  421b24:	ldr	x0, [x0, #24]
  421b28:	tbz	w0, #22, 421abc <_obstack_memory_used@@Base+0x2fcc>
  421b2c:	ldr	w0, [x23, #180]
  421b30:	cmp	w0, #0x1
  421b34:	b.le	421abc <_obstack_memory_used@@Base+0x2fcc>
  421b38:	ldr	x0, [x26]
  421b3c:	ldr	w0, [x0, x20]
  421b40:	bl	4028c0 <towlower@plt>
  421b44:	mov	w1, w0
  421b48:	add	x2, sp, #0xa8
  421b4c:	mov	x0, x24
  421b50:	bl	402920 <wcrtomb@plt>
  421b54:	cmn	x0, #0x1
  421b58:	b.eq	421abc <_obstack_memory_used@@Base+0x2fcc>  // b.none
  421b5c:	ldrb	w0, [sp, #176]
  421b60:	strb	w28, [x19, x0]
  421b64:	b	421abc <_obstack_memory_used@@Base+0x2fcc>
  421b68:	strb	wzr, [sp, #168]
  421b6c:	mov	x3, x24
  421b70:	add	x1, sp, #0xa8
  421b74:	mov	x2, #0x1                   	// #1
  421b78:	mov	x0, #0x0                   	// #0
  421b7c:	str	xzr, [x24]
  421b80:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  421b84:	cmn	x0, #0x2
  421b88:	b.eq	421bc0 <_obstack_memory_used@@Base+0x30d0>  // b.none
  421b8c:	ldrb	w0, [sp, #168]
  421b90:	add	w0, w0, #0x1
  421b94:	and	w0, w0, #0xff
  421b98:	strb	w0, [sp, #168]
  421b9c:	cbz	w0, 421a50 <_obstack_memory_used@@Base+0x2f60>
  421ba0:	mov	x3, x24
  421ba4:	add	x1, sp, #0xa8
  421ba8:	mov	x2, #0x1                   	// #1
  421bac:	mov	x0, #0x0                   	// #0
  421bb0:	str	xzr, [x24]
  421bb4:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  421bb8:	cmn	x0, #0x2
  421bbc:	b.ne	421b8c <_obstack_memory_used@@Base+0x309c>  // b.any
  421bc0:	ldrb	w1, [sp, #168]
  421bc4:	add	w0, w1, #0x1
  421bc8:	and	w0, w0, #0xff
  421bcc:	strb	w0, [sp, #168]
  421bd0:	strb	w28, [x19, x1]
  421bd4:	cbnz	w0, 421b6c <_obstack_memory_used@@Base+0x307c>
  421bd8:	b	421a50 <_obstack_memory_used@@Base+0x2f60>
  421bdc:	str	xzr, [sp, #112]
  421be0:	mov	x20, x19
  421be4:	ldr	x0, [x1]
  421be8:	str	xzr, [sp, #144]
  421bec:	ldr	x1, [sp, #112]
  421bf0:	ldr	x25, [x0, x1]
  421bf4:	ldr	w0, [sp, #124]
  421bf8:	cbnz	w0, 421c5c <_obstack_memory_used@@Base+0x316c>
  421bfc:	mov	x0, #0x0                   	// #0
  421c00:	lsr	x1, x25, x0
  421c04:	tbz	w1, #0, 421c0c <_obstack_memory_used@@Base+0x311c>
  421c08:	strb	w28, [x20, x0]
  421c0c:	add	x0, x0, #0x1
  421c10:	cmp	x0, #0x40
  421c14:	b.ne	421c00 <_obstack_memory_used@@Base+0x3110>  // b.any
  421c18:	ldr	x1, [sp, #112]
  421c1c:	add	x20, x20, #0x40
  421c20:	ldr	x0, [sp, #144]
  421c24:	add	x1, x1, #0x8
  421c28:	str	x1, [sp, #112]
  421c2c:	add	x0, x0, #0x40
  421c30:	str	x0, [sp, #144]
  421c34:	cmp	x0, #0x100
  421c38:	b.eq	421a50 <_obstack_memory_used@@Base+0x2f60>  // b.none
  421c3c:	ldr	x0, [x23]
  421c40:	ldr	x1, [sp, #104]
  421c44:	add	x1, x0, x1
  421c48:	ldr	x0, [x1]
  421c4c:	ldr	x1, [sp, #112]
  421c50:	ldr	x25, [x0, x1]
  421c54:	ldr	w0, [sp, #124]
  421c58:	cbz	w0, 421bfc <_obstack_memory_used@@Base+0x310c>
  421c5c:	mov	x27, x20
  421c60:	mov	w26, #0x0                   	// #0
  421c64:	nop
  421c68:	lsr	x0, x25, x26
  421c6c:	add	w26, w26, #0x1
  421c70:	tbz	w0, #0, 421c8c <_obstack_memory_used@@Base+0x319c>
  421c74:	strb	w28, [x27]
  421c78:	bl	4023c0 <__ctype_tolower_loc@plt>
  421c7c:	ldr	x0, [x0]
  421c80:	add	x0, x0, x27, lsl #2
  421c84:	ldrsw	x0, [x0, x21]
  421c88:	strb	w28, [x19, x0]
  421c8c:	add	x27, x27, #0x1
  421c90:	cmp	w26, #0x40
  421c94:	b.ne	421c68 <_obstack_memory_used@@Base+0x3178>  // b.any
  421c98:	b	421c18 <_obstack_memory_used@@Base+0x3128>
  421c9c:	ldr	x2, [x23]
  421ca0:	add	x0, x26, #0x1
  421ca4:	ldr	x1, [sp, #104]
  421ca8:	add	x5, x24, #0x1
  421cac:	ldrb	w1, [x2, x1]
  421cb0:	strb	w1, [sp, #176]
  421cb4:	ldr	x1, [x23, #16]
  421cb8:	cmp	x1, x0
  421cbc:	b.ls	421db8 <_obstack_memory_used@@Base+0x32c8>  // b.plast
  421cc0:	mov	w7, #0xff                  	// #255
  421cc4:	mov	w6, #0x1                   	// #1
  421cc8:	movk	w7, #0x20, lsl #16
  421ccc:	movk	w6, #0x20, lsl #16
  421cd0:	b	421cec <_obstack_memory_used@@Base+0x31fc>
  421cd4:	ldrb	w1, [x2, x3]
  421cd8:	strb	w1, [x5], #1
  421cdc:	ldr	x1, [x23, #16]
  421ce0:	cmp	x1, x0
  421ce4:	b.ls	421d08 <_obstack_memory_used@@Base+0x3218>  // b.plast
  421ce8:	ldr	x2, [x23]
  421cec:	lsl	x3, x0, #4
  421cf0:	add	x1, x2, x3
  421cf4:	add	x0, x0, #0x1
  421cf8:	ldr	w1, [x1, #8]
  421cfc:	and	w1, w1, w7
  421d00:	cmp	w1, w6
  421d04:	b.eq	421cd4 <_obstack_memory_used@@Base+0x31e4>  // b.none
  421d08:	sub	x20, x5, x24
  421d0c:	add	x3, sp, #0xa8
  421d10:	mov	x2, x20
  421d14:	mov	x1, x24
  421d18:	add	x0, sp, #0xa4
  421d1c:	str	xzr, [sp, #168]
  421d20:	bl	41e618 <wcrtomb@plt+0x1bcf8>
  421d24:	cmp	x0, x20
  421d28:	b.ne	421a50 <_obstack_memory_used@@Base+0x2f60>  // b.any
  421d2c:	ldr	w0, [sp, #164]
  421d30:	bl	4028c0 <towlower@plt>
  421d34:	mov	w1, w0
  421d38:	add	x2, sp, #0xa8
  421d3c:	mov	x0, x24
  421d40:	bl	402920 <wcrtomb@plt>
  421d44:	cmn	x0, #0x1
  421d48:	b.eq	421a50 <_obstack_memory_used@@Base+0x2f60>  // b.none
  421d4c:	ldrb	w0, [sp, #176]
  421d50:	strb	w28, [x19, x0]
  421d54:	b	421a50 <_obstack_memory_used@@Base+0x2f60>
  421d58:	mov	x0, x19
  421d5c:	mov	x2, #0x100                 	// #256
  421d60:	mov	w1, #0x1                   	// #1
  421d64:	bl	402510 <memset@plt>
  421d68:	cmp	w20, #0x2
  421d6c:	b.eq	421d8c <_obstack_memory_used@@Base+0x329c>  // b.none
  421d70:	ldp	x25, x26, [sp, #64]
  421d74:	ldp	x27, x28, [sp, #80]
  421d78:	b	421a6c <_obstack_memory_used@@Base+0x2f7c>
  421d7c:	mov	x0, x19
  421d80:	mov	x2, #0x100                 	// #256
  421d84:	mov	w1, #0x1                   	// #1
  421d88:	bl	402510 <memset@plt>
  421d8c:	ldr	x1, [sp, #128]
  421d90:	ldp	x25, x26, [sp, #64]
  421d94:	ldrb	w0, [x1, #56]
  421d98:	ldp	x27, x28, [sp, #80]
  421d9c:	orr	w0, w0, #0x1
  421da0:	strb	w0, [x1, #56]
  421da4:	ldp	x19, x20, [sp, #16]
  421da8:	ldp	x21, x22, [sp, #32]
  421dac:	ldp	x23, x24, [sp, #48]
  421db0:	ldp	x29, x30, [sp], #432
  421db4:	ret
  421db8:	mov	x20, #0x1                   	// #1
  421dbc:	b	421d0c <_obstack_memory_used@@Base+0x321c>
  421dc0:	stp	x29, x30, [sp, #-96]!
  421dc4:	mov	x29, sp
  421dc8:	stp	x19, x20, [sp, #16]
  421dcc:	mov	x19, x1
  421dd0:	stp	x21, x22, [sp, #32]
  421dd4:	ldr	x21, [x1, #72]
  421dd8:	stp	x23, x24, [sp, #48]
  421ddc:	mov	x23, x0
  421de0:	ldr	x1, [x1, #104]
  421de4:	cmp	x1, x21
  421de8:	b.le	422010 <_obstack_memory_used@@Base+0x3520>
  421dec:	ldr	x24, [x19, #8]
  421df0:	mov	x22, x2
  421df4:	ldrb	w1, [x0, #10]
  421df8:	ldr	w0, [x19, #144]
  421dfc:	ldrb	w20, [x24, x21]
  421e00:	and	w1, w1, #0xffffff9f
  421e04:	strb	w20, [x23]
  421e08:	cmp	w0, #0x1
  421e0c:	strb	w1, [x23, #10]
  421e10:	b.le	421ec4 <_obstack_memory_used@@Base+0x33d4>
  421e14:	ldr	x1, [x19, #48]
  421e18:	cmp	x21, x1
  421e1c:	b.eq	421e30 <_obstack_memory_used@@Base+0x3340>  // b.none
  421e20:	ldr	x1, [x19, #16]
  421e24:	ldr	w1, [x1, x21, lsl #2]
  421e28:	cmn	w1, #0x1
  421e2c:	b.eq	4220a0 <_obstack_memory_used@@Base+0x35b0>  // b.none
  421e30:	cmp	w20, #0x5c
  421e34:	b.eq	421f0c <_obstack_memory_used@@Base+0x341c>  // b.none
  421e38:	ldr	x0, [x19, #16]
  421e3c:	str	x25, [sp, #64]
  421e40:	mov	w1, #0x1                   	// #1
  421e44:	strb	w1, [x23, #8]
  421e48:	ldr	w25, [x0, x21, lsl #2]
  421e4c:	mov	w0, w25
  421e50:	bl	4027c0 <iswalnum@plt>
  421e54:	cmp	w25, #0x5f
  421e58:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  421e5c:	ldrb	w0, [x23, #10]
  421e60:	cset	w1, ne  // ne = any
  421e64:	bfi	w0, w1, #6, #1
  421e68:	strb	w0, [x23, #10]
  421e6c:	ldr	x25, [sp, #64]
  421e70:	cmp	w20, #0x2e
  421e74:	b.eq	4223e8 <_obstack_memory_used@@Base+0x38f8>  // b.none
  421e78:	b.hi	421f3c <_obstack_memory_used@@Base+0x344c>  // b.pmore
  421e7c:	cmp	w20, #0x29
  421e80:	b.eq	4223cc <_obstack_memory_used@@Base+0x38dc>  // b.none
  421e84:	b.ls	421f74 <_obstack_memory_used@@Base+0x3484>  // b.plast
  421e88:	cmp	w20, #0x2a
  421e8c:	b.eq	4223d8 <_obstack_memory_used@@Base+0x38e8>  // b.none
  421e90:	cmp	w20, #0x2b
  421e94:	b.ne	4223c4 <_obstack_memory_used@@Base+0x38d4>  // b.any
  421e98:	mov	x1, #0x402                 	// #1026
  421e9c:	mov	w0, #0x1                   	// #1
  421ea0:	tst	x22, x1
  421ea4:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  421ea8:	mov	w1, #0x12                  	// #18
  421eac:	strb	w1, [x23, #8]
  421eb0:	ldp	x19, x20, [sp, #16]
  421eb4:	ldp	x21, x22, [sp, #32]
  421eb8:	ldp	x23, x24, [sp, #48]
  421ebc:	ldp	x29, x30, [sp], #96
  421ec0:	ret
  421ec4:	cmp	w20, #0x5c
  421ec8:	b.eq	421f0c <_obstack_memory_used@@Base+0x341c>  // b.none
  421ecc:	bl	4026a0 <__ctype_b_loc@plt>
  421ed0:	ldr	x0, [x0]
  421ed4:	ubfiz	x2, x20, #1, #8
  421ed8:	cmp	w20, #0x5f
  421edc:	ldr	w1, [x23, #8]
  421ee0:	ldrh	w0, [x0, x2]
  421ee4:	and	w1, w1, #0xffffff00
  421ee8:	and	w1, w1, #0xffbfffff
  421eec:	and	w0, w0, #0x8
  421ef0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  421ef4:	cset	w0, ne  // ne = any
  421ef8:	lsl	w0, w0, #22
  421efc:	orr	w0, w0, #0x1
  421f00:	orr	w0, w0, w1
  421f04:	str	w0, [x23, #8]
  421f08:	b	421e70 <_obstack_memory_used@@Base+0x3380>
  421f0c:	ldr	x2, [x19, #88]
  421f10:	add	x1, x21, #0x1
  421f14:	cmp	x1, x2
  421f18:	b.lt	422030 <_obstack_memory_used@@Base+0x3540>  // b.tstop
  421f1c:	mov	w1, #0x24                  	// #36
  421f20:	strb	w1, [x23, #8]
  421f24:	mov	w0, #0x1                   	// #1
  421f28:	ldp	x19, x20, [sp, #16]
  421f2c:	ldp	x21, x22, [sp, #32]
  421f30:	ldp	x23, x24, [sp, #48]
  421f34:	ldp	x29, x30, [sp], #96
  421f38:	ret
  421f3c:	cmp	w20, #0x7b
  421f40:	b.eq	4223a0 <_obstack_memory_used@@Base+0x38b0>  // b.none
  421f44:	b.ls	421f98 <_obstack_memory_used@@Base+0x34a8>  // b.plast
  421f48:	cmp	w20, #0x7c
  421f4c:	b.eq	4223b4 <_obstack_memory_used@@Base+0x38c4>  // b.none
  421f50:	cmp	w20, #0x7d
  421f54:	b.ne	4223c4 <_obstack_memory_used@@Base+0x38d4>  // b.any
  421f58:	mov	x1, #0x1200                	// #4608
  421f5c:	mov	w0, #0x1                   	// #1
  421f60:	bics	xzr, x1, x22
  421f64:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  421f68:	mov	w1, #0x18                  	// #24
  421f6c:	strb	w1, [x23, #8]
  421f70:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  421f74:	cmp	w20, #0x24
  421f78:	b.eq	42233c <_obstack_memory_used@@Base+0x384c>  // b.none
  421f7c:	cmp	w20, #0x28
  421f80:	mov	w0, #0x1                   	// #1
  421f84:	b.ne	421fd0 <_obstack_memory_used@@Base+0x34e0>  // b.any
  421f88:	tbz	w22, #13, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  421f8c:	mov	w1, #0x8                   	// #8
  421f90:	strb	w1, [x23, #8]
  421f94:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  421f98:	cmp	w20, #0x5b
  421f9c:	b.eq	4223f8 <_obstack_memory_used@@Base+0x3908>  // b.none
  421fa0:	cmp	w20, #0x5e
  421fa4:	b.ne	421fec <_obstack_memory_used@@Base+0x34fc>  // b.any
  421fa8:	and	x0, x22, #0xfffff8
  421fac:	ands	x0, x0, #0xffffffffff80000f
  421fb0:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  421fb4:	b.ne	42215c <_obstack_memory_used@@Base+0x366c>  // b.any
  421fb8:	mov	w1, #0xc                   	// #12
  421fbc:	mov	w2, #0x10                  	// #16
  421fc0:	mov	w0, #0x1                   	// #1
  421fc4:	str	w2, [x23]
  421fc8:	strb	w1, [x23, #8]
  421fcc:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  421fd0:	cmp	w20, #0xa
  421fd4:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  421fd8:	tbz	w22, #11, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  421fdc:	mov	w1, #0xa                   	// #10
  421fe0:	mov	w0, #0x1                   	// #1
  421fe4:	strb	w1, [x23, #8]
  421fe8:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  421fec:	cmp	w20, #0x3f
  421ff0:	b.ne	4223c4 <_obstack_memory_used@@Base+0x38d4>  // b.any
  421ff4:	mov	x1, #0x402                 	// #1026
  421ff8:	mov	w0, #0x1                   	// #1
  421ffc:	tst	x22, x1
  422000:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  422004:	mov	w1, #0x13                  	// #19
  422008:	strb	w1, [x23, #8]
  42200c:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  422010:	mov	w1, #0x2                   	// #2
  422014:	strb	w1, [x23, #8]
  422018:	mov	w0, #0x0                   	// #0
  42201c:	ldp	x19, x20, [sp, #16]
  422020:	ldp	x21, x22, [sp, #32]
  422024:	ldp	x23, x24, [sp, #48]
  422028:	ldp	x29, x30, [sp], #96
  42202c:	ret
  422030:	ldrb	w2, [x19, #139]
  422034:	cbnz	w2, 4220fc <_obstack_memory_used@@Base+0x360c>
  422038:	ldrb	w20, [x24, x1]
  42203c:	mov	w2, #0x1                   	// #1
  422040:	strb	w20, [x23]
  422044:	strb	w2, [x23, #8]
  422048:	cmp	w0, #0x1
  42204c:	b.le	4220c4 <_obstack_memory_used@@Base+0x35d4>
  422050:	ldr	x2, [x19, #16]
  422054:	add	x2, x2, x1, lsl #2
  422058:	ldr	w19, [x2]
  42205c:	mov	w0, w19
  422060:	bl	4027c0 <iswalnum@plt>
  422064:	cmp	w19, #0x5f
  422068:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42206c:	ldrb	w0, [x23, #10]
  422070:	cset	w1, ne  // ne = any
  422074:	bfi	w0, w1, #6, #1
  422078:	strb	w0, [x23, #10]
  42207c:	sub	w0, w20, #0x27
  422080:	cmp	w0, #0x56
  422084:	b.hi	4220f4 <_obstack_memory_used@@Base+0x3604>  // b.pmore
  422088:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  42208c:	add	x1, x1, #0x4b0
  422090:	ldrh	w0, [x1, w0, uxtw #1]
  422094:	adr	x1, 4220a0 <_obstack_memory_used@@Base+0x35b0>
  422098:	add	x0, x1, w0, sxth #2
  42209c:	br	x0
  4220a0:	ldr	w1, [x23, #8]
  4220a4:	mov	w2, #0x1                   	// #1
  4220a8:	movk	w2, #0x20, lsl #16
  4220ac:	mov	w0, #0x1                   	// #1
  4220b0:	and	w1, w1, #0xffffff00
  4220b4:	and	w1, w1, #0xffdfffff
  4220b8:	orr	w1, w1, w2
  4220bc:	str	w1, [x23, #8]
  4220c0:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4220c4:	bl	4026a0 <__ctype_b_loc@plt>
  4220c8:	ldr	x0, [x0]
  4220cc:	ubfiz	x1, x20, #1, #8
  4220d0:	cmp	w20, #0x5f
  4220d4:	ldrb	w2, [x23, #10]
  4220d8:	ldrh	w0, [x0, x1]
  4220dc:	and	w0, w0, #0x8
  4220e0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4220e4:	cset	w0, ne  // ne = any
  4220e8:	bfi	w2, w0, #6, #1
  4220ec:	strb	w2, [x23, #10]
  4220f0:	b	42207c <_obstack_memory_used@@Base+0x358c>
  4220f4:	mov	w0, #0x2                   	// #2
  4220f8:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4220fc:	cmp	w0, #0x1
  422100:	b.le	422134 <_obstack_memory_used@@Base+0x3644>
  422104:	ldr	x2, [x19, #16]
  422108:	ldr	w3, [x2, x1, lsl #2]
  42210c:	add	x2, x2, x1, lsl #2
  422110:	cmn	w3, #0x1
  422114:	b.eq	422414 <_obstack_memory_used@@Base+0x3924>  // b.none
  422118:	ldr	x3, [x19, #48]
  42211c:	add	x21, x21, #0x2
  422120:	cmp	x3, x21
  422124:	b.eq	422134 <_obstack_memory_used@@Base+0x3644>  // b.none
  422128:	ldr	w3, [x2, #4]
  42212c:	cmn	w3, #0x1
  422130:	b.eq	422414 <_obstack_memory_used@@Base+0x3924>  // b.none
  422134:	ldrb	w3, [x19, #140]
  422138:	ldr	x2, [x19]
  42213c:	ldr	x4, [x19, #40]
  422140:	cbz	w3, 422408 <_obstack_memory_used@@Base+0x3918>
  422144:	ldr	x3, [x19, #24]
  422148:	add	x2, x2, x4
  42214c:	ldr	x3, [x3, x1, lsl #3]
  422150:	ldrb	w20, [x2, x3]
  422154:	tbz	w20, #7, 42203c <_obstack_memory_used@@Base+0x354c>
  422158:	b	422038 <_obstack_memory_used@@Base+0x3548>
  42215c:	add	x21, x24, x21
  422160:	tst	x22, #0x800
  422164:	mov	w0, #0x1                   	// #1
  422168:	ldurb	w1, [x21, #-1]
  42216c:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  422170:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  422174:	b	421fb8 <_obstack_memory_used@@Base+0x34c8>
  422178:	mov	w0, #0x2                   	// #2
  42217c:	tbnz	w22, #14, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  422180:	sub	w1, w20, #0x31
  422184:	mov	w2, #0x4                   	// #4
  422188:	strb	w2, [x23, #8]
  42218c:	sxtw	x1, w1
  422190:	str	x1, [x23]
  422194:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  422198:	mov	x0, #0x402                 	// #1026
  42219c:	and	x0, x22, x0
  4221a0:	cmp	x0, #0x2
  4221a4:	mov	w0, #0x2                   	// #2
  4221a8:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  4221ac:	b	421ea8 <_obstack_memory_used@@Base+0x33b8>
  4221b0:	mov	w0, #0x2                   	// #2
  4221b4:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  4221b8:	mov	w1, #0xc                   	// #12
  4221bc:	mov	w2, #0x9                   	// #9
  4221c0:	str	w2, [x23]
  4221c4:	strb	w1, [x23, #8]
  4221c8:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4221cc:	mov	w0, #0x2                   	// #2
  4221d0:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  4221d4:	mov	w1, #0xc                   	// #12
  4221d8:	mov	w2, #0x6                   	// #6
  4221dc:	str	w2, [x23]
  4221e0:	strb	w1, [x23, #8]
  4221e4:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4221e8:	mov	w0, #0x2                   	// #2
  4221ec:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  4221f0:	mov	w1, #0x20                  	// #32
  4221f4:	strb	w1, [x23, #8]
  4221f8:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4221fc:	mov	w0, #0x2                   	// #2
  422200:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  422204:	mov	w1, #0x22                  	// #34
  422208:	strb	w1, [x23, #8]
  42220c:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  422210:	mov	w0, #0x2                   	// #2
  422214:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  422218:	mov	w1, #0xc                   	// #12
  42221c:	mov	w2, #0x100                 	// #256
  422220:	str	w2, [x23]
  422224:	strb	w1, [x23, #8]
  422228:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  42222c:	mov	w0, #0x2                   	// #2
  422230:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  422234:	mov	w1, #0xc                   	// #12
  422238:	mov	w2, #0x40                  	// #64
  42223c:	str	w2, [x23]
  422240:	strb	w1, [x23, #8]
  422244:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  422248:	mov	w0, #0x2                   	// #2
  42224c:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  422250:	mov	w1, #0x21                  	// #33
  422254:	strb	w1, [x23, #8]
  422258:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  42225c:	mov	w0, #0x2                   	// #2
  422260:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  422264:	mov	w1, #0x23                  	// #35
  422268:	strb	w1, [x23, #8]
  42226c:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  422270:	mov	w0, #0x2                   	// #2
  422274:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  422278:	mov	w1, #0xc                   	// #12
  42227c:	mov	w2, #0x200                 	// #512
  422280:	str	w2, [x23]
  422284:	strb	w1, [x23, #8]
  422288:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  42228c:	mov	x0, #0x402                 	// #1026
  422290:	and	x0, x22, x0
  422294:	cmp	x0, #0x2
  422298:	mov	w0, #0x2                   	// #2
  42229c:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  4222a0:	b	422004 <_obstack_memory_used@@Base+0x3514>
  4222a4:	mov	x1, #0x8400                	// #33792
  4222a8:	mov	w0, #0x2                   	// #2
  4222ac:	tst	x22, x1
  4222b0:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  4222b4:	mov	w1, #0xa                   	// #10
  4222b8:	strb	w1, [x23, #8]
  4222bc:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4222c0:	mov	x0, #0x1200                	// #4608
  4222c4:	and	x0, x22, x0
  4222c8:	cmp	x0, #0x200
  4222cc:	mov	w0, #0x2                   	// #2
  4222d0:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  4222d4:	nop
  4222d8:	mov	w1, #0x17                  	// #23
  4222dc:	strb	w1, [x23, #8]
  4222e0:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4222e4:	mov	x0, #0x1200                	// #4608
  4222e8:	and	x0, x22, x0
  4222ec:	cmp	x0, #0x200
  4222f0:	mov	w0, #0x2                   	// #2
  4222f4:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  4222f8:	b	421f68 <_obstack_memory_used@@Base+0x3478>
  4222fc:	mov	w0, #0x2                   	// #2
  422300:	tbnz	w22, #13, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  422304:	nop
  422308:	mov	w1, #0x9                   	// #9
  42230c:	strb	w1, [x23, #8]
  422310:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  422314:	mov	w0, #0x2                   	// #2
  422318:	tbnz	w22, #13, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  42231c:	b	421f8c <_obstack_memory_used@@Base+0x349c>
  422320:	mov	w0, #0x2                   	// #2
  422324:	tbnz	w22, #19, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  422328:	mov	w1, #0xc                   	// #12
  42232c:	mov	w2, #0x80                  	// #128
  422330:	str	w2, [x23]
  422334:	strb	w1, [x23, #8]
  422338:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  42233c:	tbnz	w22, #3, 422388 <_obstack_memory_used@@Base+0x3898>
  422340:	ldr	x0, [x19, #88]
  422344:	add	x21, x21, #0x1
  422348:	cmp	x21, x0
  42234c:	b.eq	422388 <_obstack_memory_used@@Base+0x3898>  // b.none
  422350:	str	x21, [x19, #72]
  422354:	mov	x2, x22
  422358:	mov	x1, x19
  42235c:	add	x0, sp, #0x50
  422360:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  422364:	ldr	x2, [x19, #72]
  422368:	mov	w0, #0x1                   	// #1
  42236c:	ldrb	w1, [sp, #88]
  422370:	sub	x2, x2, #0x1
  422374:	str	x2, [x19, #72]
  422378:	sub	w1, w1, #0x9
  42237c:	and	w1, w1, #0xff
  422380:	cmp	w1, w0
  422384:	b.hi	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.pmore
  422388:	mov	w1, #0xc                   	// #12
  42238c:	mov	w2, #0x20                  	// #32
  422390:	mov	w0, #0x1                   	// #1
  422394:	str	w2, [x23]
  422398:	strb	w1, [x23, #8]
  42239c:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4223a0:	mov	x1, #0x1200                	// #4608
  4223a4:	mov	w0, #0x1                   	// #1
  4223a8:	bics	xzr, x1, x22
  4223ac:	b.ne	421eb0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  4223b0:	b	4222d8 <_obstack_memory_used@@Base+0x37e8>
  4223b4:	mov	x0, #0x8400                	// #33792
  4223b8:	and	x0, x22, x0
  4223bc:	cmp	x0, #0x8, lsl #12
  4223c0:	b.eq	421fdc <_obstack_memory_used@@Base+0x34ec>  // b.none
  4223c4:	mov	w0, #0x1                   	// #1
  4223c8:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4223cc:	mov	w0, #0x1                   	// #1
  4223d0:	tbz	w22, #13, 421eb0 <_obstack_memory_used@@Base+0x33c0>
  4223d4:	b	422308 <_obstack_memory_used@@Base+0x3818>
  4223d8:	mov	w1, #0xb                   	// #11
  4223dc:	mov	w0, #0x1                   	// #1
  4223e0:	strb	w1, [x23, #8]
  4223e4:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4223e8:	mov	w1, #0x5                   	// #5
  4223ec:	mov	w0, #0x1                   	// #1
  4223f0:	strb	w1, [x23, #8]
  4223f4:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  4223f8:	mov	w1, #0x14                  	// #20
  4223fc:	mov	w0, #0x1                   	// #1
  422400:	strb	w1, [x23, #8]
  422404:	b	421eb0 <_obstack_memory_used@@Base+0x33c0>
  422408:	add	x2, x2, x1
  42240c:	ldrb	w20, [x2, x4]
  422410:	b	42203c <_obstack_memory_used@@Base+0x354c>
  422414:	ldrb	w20, [x24, x1]
  422418:	mov	w0, #0x1                   	// #1
  42241c:	strb	w20, [x23]
  422420:	strb	w0, [x23, #8]
  422424:	b	422058 <_obstack_memory_used@@Base+0x3568>
  422428:	mov	x8, x2
  42242c:	ldr	w2, [x1, #144]
  422430:	mov	x10, x0
  422434:	and	w5, w5, #0xff
  422438:	cmp	w2, #0x1
  42243c:	ldr	x7, [x1, #72]
  422440:	b.eq	422480 <_obstack_memory_used@@Base+0x3990>  // b.none
  422444:	ldr	x2, [x1, #48]
  422448:	add	x6, x7, #0x1
  42244c:	cmp	x6, x2
  422450:	b.ge	422480 <_obstack_memory_used@@Base+0x3990>  // b.tcont
  422454:	ldr	x9, [x1, #16]
  422458:	b	422468 <_obstack_memory_used@@Base+0x3978>
  42245c:	add	x6, x6, #0x1
  422460:	cmp	x6, x2
  422464:	b.eq	42256c <_obstack_memory_used@@Base+0x3a7c>  // b.none
  422468:	ldr	w0, [x9, x6, lsl #2]
  42246c:	sub	w11, w6, w7
  422470:	cmn	w0, #0x1
  422474:	b.eq	42245c <_obstack_memory_used@@Base+0x396c>  // b.none
  422478:	cmp	w11, #0x1
  42247c:	b.ne	42256c <_obstack_memory_used@@Base+0x3a7c>  // b.any
  422480:	ldrb	w6, [x8, #8]
  422484:	add	x3, x7, w3, sxtw
  422488:	str	x3, [x1, #72]
  42248c:	and	w0, w6, #0xfffffffb
  422490:	cmp	w0, #0x1a
  422494:	ccmp	w6, #0x1c, #0x4, ne  // ne = any
  422498:	b.eq	4224bc <_obstack_memory_used@@Base+0x39cc>  // b.none
  42249c:	cmp	w5, #0x0
  4224a0:	ccmp	w6, #0x16, #0x0, eq  // eq = none
  4224a4:	b.eq	42262c <_obstack_memory_used@@Base+0x3b3c>  // b.none
  4224a8:	ldrb	w1, [x8]
  4224ac:	mov	w0, #0x0                   	// #0
  4224b0:	str	wzr, [x10]
  4224b4:	strb	w1, [x10, #8]
  4224b8:	ret
  4224bc:	ldr	x7, [x1, #104]
  4224c0:	cmp	x3, x7
  4224c4:	b.ge	422564 <_obstack_memory_used@@Base+0x3a74>  // b.tcont
  4224c8:	ldrb	w9, [x8]
  4224cc:	mov	x2, #0x0                   	// #0
  4224d0:	b	4224f4 <_obstack_memory_used@@Base+0x3a04>
  4224d4:	ldr	x0, [x10, #8]
  4224d8:	strb	w5, [x0, x2]
  4224dc:	add	x2, x2, #0x1
  4224e0:	cmp	x2, #0x20
  4224e4:	b.eq	422564 <_obstack_memory_used@@Base+0x3a74>  // b.none
  4224e8:	ldrb	w6, [x8, #8]
  4224ec:	ldr	x3, [x1, #72]
  4224f0:	ldr	x7, [x1, #104]
  4224f4:	cmp	w6, #0x1e
  4224f8:	add	x4, x3, #0x1
  4224fc:	mov	w6, w2
  422500:	b.eq	422588 <_obstack_memory_used@@Base+0x3a98>  // b.none
  422504:	ldr	x0, [x1, #8]
  422508:	str	x4, [x1, #72]
  42250c:	ldrb	w5, [x0, x3]
  422510:	cmp	x7, x4
  422514:	b.le	422564 <_obstack_memory_used@@Base+0x3a74>
  422518:	cmp	w9, w5
  42251c:	b.ne	4224d4 <_obstack_memory_used@@Base+0x39e4>  // b.any
  422520:	ldr	x0, [x1, #8]
  422524:	ldrb	w0, [x0, x4]
  422528:	cmp	w0, #0x5d
  42252c:	b.ne	4224d4 <_obstack_memory_used@@Base+0x39e4>  // b.any
  422530:	ldr	x0, [x10, #8]
  422534:	add	x4, x4, #0x1
  422538:	str	x4, [x1, #72]
  42253c:	strb	wzr, [x0, w6, sxtw]
  422540:	ldrb	w0, [x8, #8]
  422544:	cmp	w0, #0x1c
  422548:	b.eq	422680 <_obstack_memory_used@@Base+0x3b90>  // b.none
  42254c:	cmp	w0, #0x1e
  422550:	b.eq	422670 <_obstack_memory_used@@Base+0x3b80>  // b.none
  422554:	cmp	w0, #0x1a
  422558:	mov	w0, #0x0                   	// #0
  42255c:	b.eq	422664 <_obstack_memory_used@@Base+0x3b74>  // b.none
  422560:	ret
  422564:	mov	w0, #0x7                   	// #7
  422568:	ret
  42256c:	mov	w0, #0x1                   	// #1
  422570:	str	w0, [x10]
  422574:	mov	w0, #0x0                   	// #0
  422578:	ldr	w2, [x9, x7, lsl #2]
  42257c:	str	w2, [x10, #8]
  422580:	str	x6, [x1, #72]
  422584:	ret
  422588:	ldrb	w0, [x1, #139]
  42258c:	cbz	w0, 422504 <_obstack_memory_used@@Base+0x3a14>
  422590:	ldrb	w0, [x1, #140]
  422594:	cbz	w0, 422614 <_obstack_memory_used@@Base+0x3b24>
  422598:	ldr	x11, [x1, #48]
  42259c:	cmp	x3, x11
  4225a0:	b.eq	4225b4 <_obstack_memory_used@@Base+0x3ac4>  // b.none
  4225a4:	ldr	x0, [x1, #16]
  4225a8:	ldr	w0, [x0, x3, lsl #2]
  4225ac:	cmn	w0, #0x1
  4225b0:	b.eq	422504 <_obstack_memory_used@@Base+0x3a14>  // b.none
  4225b4:	ldr	x5, [x1, #24]
  4225b8:	ldr	x0, [x1]
  4225bc:	ldr	x12, [x5, x3, lsl #3]
  4225c0:	ldr	x5, [x1, #40]
  4225c4:	add	x0, x0, x12
  4225c8:	ldrb	w5, [x0, x5]
  4225cc:	tbnz	w5, #7, 422504 <_obstack_memory_used@@Base+0x3a14>
  4225d0:	ldr	w0, [x1, #144]
  4225d4:	cmp	w0, #0x1
  4225d8:	b.eq	42260c <_obstack_memory_used@@Base+0x3b1c>  // b.none
  4225dc:	cmp	x11, x4
  4225e0:	b.le	42260c <_obstack_memory_used@@Base+0x3b1c>
  4225e4:	ldr	x12, [x1, #16]
  4225e8:	b	4225f4 <_obstack_memory_used@@Base+0x3b04>
  4225ec:	cmp	x11, x4
  4225f0:	b.eq	42260c <_obstack_memory_used@@Base+0x3b1c>  // b.none
  4225f4:	ldr	w0, [x12, x4, lsl #2]
  4225f8:	sub	w13, w4, w3
  4225fc:	add	x4, x4, #0x1
  422600:	cmn	w0, #0x1
  422604:	b.eq	4225ec <_obstack_memory_used@@Base+0x3afc>  // b.none
  422608:	add	x4, x3, w13, sxtw
  42260c:	str	x4, [x1, #72]
  422610:	b	422510 <_obstack_memory_used@@Base+0x3a20>
  422614:	ldr	x0, [x1]
  422618:	str	x4, [x1, #72]
  42261c:	ldr	x5, [x1, #40]
  422620:	add	x3, x0, x3
  422624:	ldrb	w5, [x3, x5]
  422628:	b	422510 <_obstack_memory_used@@Base+0x3a20>
  42262c:	stp	x29, x30, [sp, #-32]!
  422630:	mov	x2, x4
  422634:	mov	x29, sp
  422638:	add	x0, sp, #0x10
  42263c:	bl	41eb18 <_obstack_memory_used@@Base+0x28>
  422640:	ldrb	w0, [sp, #24]
  422644:	cmp	w0, #0x15
  422648:	b.ne	422690 <_obstack_memory_used@@Base+0x3ba0>  // b.any
  42264c:	ldrb	w1, [x8]
  422650:	mov	w0, #0x0                   	// #0
  422654:	str	wzr, [x10]
  422658:	strb	w1, [x10, #8]
  42265c:	ldp	x29, x30, [sp], #32
  422660:	ret
  422664:	mov	w1, #0x3                   	// #3
  422668:	str	w1, [x10]
  42266c:	ret
  422670:	mov	w1, #0x4                   	// #4
  422674:	mov	w0, #0x0                   	// #0
  422678:	str	w1, [x10]
  42267c:	ret
  422680:	mov	w1, #0x2                   	// #2
  422684:	mov	w0, #0x0                   	// #0
  422688:	str	w1, [x10]
  42268c:	ret
  422690:	mov	w0, #0xb                   	// #11
  422694:	b	42265c <_obstack_memory_used@@Base+0x3b6c>
  422698:	stp	x29, x30, [sp, #-96]!
  42269c:	mov	x10, x0
  4226a0:	mov	x18, x4
  4226a4:	mov	x29, sp
  4226a8:	ldr	x13, [x0, #200]
  4226ac:	mov	x15, x6
  4226b0:	mov	x11, #0x0                   	// #0
  4226b4:	stp	x19, x20, [sp, #16]
  4226b8:	mov	x9, x13
  4226bc:	mov	x20, x1
  4226c0:	mov	x19, x2
  4226c4:	stp	x21, x22, [sp, #32]
  4226c8:	mov	x21, x3
  4226cc:	mov	x22, x5
  4226d0:	stp	x23, x24, [sp, #48]
  4226d4:	ldr	x23, [x0, #152]
  4226d8:	b	4226fc <_obstack_memory_used@@Base+0x3c0c>
  4226dc:	asr	x7, x7, #1
  4226e0:	ldr	x0, [x10, #216]
  4226e4:	add	x8, x7, x7, lsl #2
  4226e8:	add	x8, x0, x8, lsl #3
  4226ec:	ldr	x0, [x8, #8]
  4226f0:	cmp	x0, x18
  4226f4:	b.lt	42284c <_obstack_memory_used@@Base+0x3d5c>  // b.tstop
  4226f8:	mov	x9, x7
  4226fc:	add	x7, x9, x11
  422700:	cmp	x9, x11
  422704:	b.gt	4226dc <_obstack_memory_used@@Base+0x3bec>
  422708:	cmp	x13, x11
  42270c:	b.le	422904 <_obstack_memory_used@@Base+0x3e14>
  422710:	ldr	x1, [x10, #216]
  422714:	add	x0, x11, x11, lsl #2
  422718:	add	x0, x1, x0, lsl #3
  42271c:	ldr	x0, [x0, #8]
  422720:	cmp	x18, x0
  422724:	csinv	x11, x11, xzr, eq  // eq = none
  422728:	mov	x9, x13
  42272c:	mov	x12, #0x0                   	// #0
  422730:	b	422754 <_obstack_memory_used@@Base+0x3c64>
  422734:	asr	x7, x7, #1
  422738:	ldr	x0, [x10, #216]
  42273c:	add	x8, x7, x7, lsl #2
  422740:	add	x8, x0, x8, lsl #3
  422744:	ldr	x0, [x8, #8]
  422748:	cmp	x0, x15
  42274c:	b.lt	422854 <_obstack_memory_used@@Base+0x3d64>  // b.tstop
  422750:	mov	x9, x7
  422754:	add	x7, x9, x12
  422758:	cmp	x9, x12
  42275c:	b.gt	422734 <_obstack_memory_used@@Base+0x3c44>
  422760:	cmp	x13, x12
  422764:	b.le	42290c <_obstack_memory_used@@Base+0x3e1c>
  422768:	ldr	x1, [x10, #216]
  42276c:	add	x0, x12, x12, lsl #2
  422770:	add	x0, x1, x0, lsl #3
  422774:	ldr	x0, [x0, #8]
  422778:	cmp	x15, x0
  42277c:	csinv	x12, x12, xzr, eq  // eq = none
  422780:	ldr	x4, [x20]
  422784:	mov	x24, #0x0                   	// #0
  422788:	cmp	x4, #0x0
  42278c:	b.le	422894 <_obstack_memory_used@@Base+0x3da4>
  422790:	stp	x25, x26, [sp, #64]
  422794:	str	x27, [sp, #80]
  422798:	ldr	x0, [x19]
  42279c:	lsl	x26, x24, #3
  4227a0:	ldr	x2, [x10, #216]
  4227a4:	ldr	x0, [x0, x24, lsl #3]
  4227a8:	ldr	x5, [x23]
  4227ac:	add	x0, x0, x0, lsl #2
  4227b0:	add	x1, x2, x0, lsl #3
  4227b4:	ldr	x0, [x2, x0, lsl #3]
  4227b8:	ldr	x3, [x1, #16]
  4227bc:	lsl	x0, x0, #4
  4227c0:	cmp	x18, x3
  4227c4:	ldr	x27, [x5, x0]
  4227c8:	b.lt	4228e8 <_obstack_memory_used@@Base+0x3df8>  // b.tstop
  4227cc:	ldr	x4, [x1, #24]
  4227d0:	cmp	x18, x4
  4227d4:	b.gt	4228e0 <_obstack_memory_used@@Base+0x3df0>
  4227d8:	cmp	x18, x3
  4227dc:	cset	w1, eq  // eq = none
  4227e0:	cmp	x18, x4
  4227e4:	b.eq	42289c <_obstack_memory_used@@Base+0x3dac>  // b.none
  4227e8:	cmp	x18, x3
  4227ec:	mov	w25, #0x0                   	// #0
  4227f0:	b.eq	4228a0 <_obstack_memory_used@@Base+0x3db0>  // b.none
  4227f4:	cmp	x15, x3
  4227f8:	b.lt	42282c <_obstack_memory_used@@Base+0x3d3c>  // b.tstop
  4227fc:	cmp	x15, x4
  422800:	mov	w0, #0x1                   	// #1
  422804:	b.gt	422824 <_obstack_memory_used@@Base+0x3d34>
  422808:	cmp	x15, x3
  42280c:	cset	w1, eq  // eq = none
  422810:	cmp	x15, x4
  422814:	b.eq	42285c <_obstack_memory_used@@Base+0x3d6c>  // b.none
  422818:	cmp	x15, x3
  42281c:	mov	w0, #0x0                   	// #0
  422820:	b.eq	422860 <_obstack_memory_used@@Base+0x3d70>  // b.none
  422824:	cmp	w0, w25
  422828:	b.eq	42287c <_obstack_memory_used@@Base+0x3d8c>  // b.none
  42282c:	ldp	x25, x26, [sp, #64]
  422830:	mov	w0, #0x1                   	// #1
  422834:	ldr	x27, [sp, #80]
  422838:	ldp	x19, x20, [sp, #16]
  42283c:	ldp	x21, x22, [sp, #32]
  422840:	ldp	x23, x24, [sp, #48]
  422844:	ldp	x29, x30, [sp], #96
  422848:	ret
  42284c:	add	x11, x7, #0x1
  422850:	b	4226fc <_obstack_memory_used@@Base+0x3c0c>
  422854:	add	x12, x7, #0x1
  422858:	b	422754 <_obstack_memory_used@@Base+0x3c64>
  42285c:	orr	w1, w1, #0x2
  422860:	mov	x2, x27
  422864:	mov	x4, x12
  422868:	mov	x3, x22
  42286c:	mov	x0, x10
  422870:	bl	41ec88 <_obstack_memory_used@@Base+0x198>
  422874:	cmp	w0, w25
  422878:	b.ne	42282c <_obstack_memory_used@@Base+0x3d3c>  // b.any
  42287c:	ldr	x4, [x20]
  422880:	add	x24, x24, #0x1
  422884:	cmp	x24, x4
  422888:	b.lt	422798 <_obstack_memory_used@@Base+0x3ca8>  // b.tstop
  42288c:	ldp	x25, x26, [sp, #64]
  422890:	ldr	x27, [sp, #80]
  422894:	mov	w0, #0x0                   	// #0
  422898:	b	422838 <_obstack_memory_used@@Base+0x3d48>
  42289c:	orr	w1, w1, #0x2
  4228a0:	mov	x3, x21
  4228a4:	mov	x2, x27
  4228a8:	mov	x4, x11
  4228ac:	mov	x0, x10
  4228b0:	bl	41ec88 <_obstack_memory_used@@Base+0x198>
  4228b4:	mov	w25, w0
  4228b8:	ldr	x2, [x19]
  4228bc:	ldr	x1, [x10, #216]
  4228c0:	ldr	x0, [x2, x26]
  4228c4:	add	x0, x0, x0, lsl #2
  4228c8:	add	x0, x1, x0, lsl #3
  4228cc:	ldr	x3, [x0, #16]
  4228d0:	cmp	x15, x3
  4228d4:	b.lt	422914 <_obstack_memory_used@@Base+0x3e24>  // b.tstop
  4228d8:	ldr	x4, [x0, #24]
  4228dc:	b	4227fc <_obstack_memory_used@@Base+0x3d0c>
  4228e0:	mov	w25, #0x1                   	// #1
  4228e4:	b	4227f4 <_obstack_memory_used@@Base+0x3d04>
  4228e8:	cmp	x15, x3
  4228ec:	b.lt	422880 <_obstack_memory_used@@Base+0x3d90>  // b.tstop
  4228f0:	ldr	x4, [x1, #24]
  4228f4:	cmp	x15, x4
  4228f8:	b.gt	42282c <_obstack_memory_used@@Base+0x3d3c>
  4228fc:	mov	w25, #0xffffffff            	// #-1
  422900:	b	422808 <_obstack_memory_used@@Base+0x3d18>
  422904:	mov	x11, #0xffffffffffffffff    	// #-1
  422908:	b	422728 <_obstack_memory_used@@Base+0x3c38>
  42290c:	mov	x12, #0xffffffffffffffff    	// #-1
  422910:	b	422780 <_obstack_memory_used@@Base+0x3c90>
  422914:	mov	w0, #0xffffffff            	// #-1
  422918:	b	422824 <_obstack_memory_used@@Base+0x3d34>
  42291c:	nop
  422920:	lsl	x2, x2, #4
  422924:	stp	x29, x30, [sp, #-48]!
  422928:	add	x5, x0, x2
  42292c:	mov	x29, sp
  422930:	stp	x19, x20, [sp, #16]
  422934:	ldrb	w6, [x5, #8]
  422938:	cmp	w6, #0x7
  42293c:	b.eq	422a68 <_obstack_memory_used@@Base+0x3f78>  // b.none
  422940:	ldr	w5, [x3, #144]
  422944:	cmp	w5, #0x1
  422948:	b.eq	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.none
  42294c:	ldr	x8, [x3, #48]
  422950:	add	x5, x4, #0x1
  422954:	cmp	x8, x5
  422958:	b.le	4229a0 <_obstack_memory_used@@Base+0x3eb0>
  42295c:	mov	w19, #0x1                   	// #1
  422960:	stp	x21, x22, [sp, #32]
  422964:	ldr	x9, [x3, #16]
  422968:	b	422978 <_obstack_memory_used@@Base+0x3e88>
  42296c:	add	w19, w19, #0x1
  422970:	cmp	x5, x8
  422974:	b.eq	4229b4 <_obstack_memory_used@@Base+0x3ec4>  // b.none
  422978:	ldr	w7, [x9, x5, lsl #2]
  42297c:	add	x5, x5, #0x1
  422980:	cmn	w7, #0x1
  422984:	b.eq	42296c <_obstack_memory_used@@Base+0x3e7c>  // b.none
  422988:	cmp	w6, #0x5
  42298c:	b.eq	422a54 <_obstack_memory_used@@Base+0x3f64>  // b.none
  422990:	cmp	w6, #0x6
  422994:	ccmp	w19, #0x1, #0x4, eq  // eq = none
  422998:	b.ne	4229f8 <_obstack_memory_used@@Base+0x3f08>  // b.any
  42299c:	ldp	x21, x22, [sp, #32]
  4229a0:	mov	w19, #0x0                   	// #0
  4229a4:	mov	w0, w19
  4229a8:	ldp	x19, x20, [sp, #16]
  4229ac:	ldp	x29, x30, [sp], #48
  4229b0:	ret
  4229b4:	cmp	w6, #0x5
  4229b8:	b.ne	422990 <_obstack_memory_used@@Base+0x3ea0>  // b.any
  4229bc:	ldr	x0, [x1]
  4229c0:	tbnz	w0, #6, 4229d4 <_obstack_memory_used@@Base+0x3ee4>
  4229c4:	ldr	x1, [x3, #8]
  4229c8:	ldrb	w1, [x1, x4]
  4229cc:	cmp	w1, #0xa
  4229d0:	b.eq	42299c <_obstack_memory_used@@Base+0x3eac>  // b.none
  4229d4:	tbz	w0, #7, 4229e4 <_obstack_memory_used@@Base+0x3ef4>
  4229d8:	ldr	x0, [x3, #8]
  4229dc:	ldrb	w0, [x0, x4]
  4229e0:	cbz	w0, 42299c <_obstack_memory_used@@Base+0x3eac>
  4229e4:	ldp	x21, x22, [sp, #32]
  4229e8:	mov	w0, w19
  4229ec:	ldp	x19, x20, [sp, #16]
  4229f0:	ldp	x29, x30, [sp], #48
  4229f4:	ret
  4229f8:	ldr	x22, [x0, x2]
  4229fc:	ldr	x5, [x22, #64]
  422a00:	ldr	x2, [x22, #40]
  422a04:	cbnz	x5, 422a14 <_obstack_memory_used@@Base+0x3f24>
  422a08:	ldr	x0, [x22, #72]
  422a0c:	orr	x0, x2, x0
  422a10:	cbz	x0, 422bc0 <_obstack_memory_used@@Base+0x40d0>
  422a14:	ldr	w20, [x9, x4, lsl #2]
  422a18:	cmp	x2, #0x0
  422a1c:	b.le	422b44 <_obstack_memory_used@@Base+0x4054>
  422a20:	mov	x0, #0x0                   	// #0
  422a24:	ldr	x3, [x22]
  422a28:	b	422a34 <_obstack_memory_used@@Base+0x3f44>
  422a2c:	cmp	x0, x2
  422a30:	b.eq	422b44 <_obstack_memory_used@@Base+0x4054>  // b.none
  422a34:	ldr	w1, [x3, x0, lsl #2]
  422a38:	add	x0, x0, #0x1
  422a3c:	cmp	w20, w1
  422a40:	b.ne	422a2c <_obstack_memory_used@@Base+0x3f3c>  // b.any
  422a44:	ldrb	w0, [x22, #32]
  422a48:	tbnz	w0, #0, 42299c <_obstack_memory_used@@Base+0x3eac>
  422a4c:	ldp	x21, x22, [sp, #32]
  422a50:	b	4229e8 <_obstack_memory_used@@Base+0x3ef8>
  422a54:	cmp	w19, #0x1
  422a58:	b.eq	42299c <_obstack_memory_used@@Base+0x3eac>  // b.none
  422a5c:	ldr	x0, [x1]
  422a60:	tbnz	w0, #6, 4229d4 <_obstack_memory_used@@Base+0x3ee4>
  422a64:	b	4229c4 <_obstack_memory_used@@Base+0x3ed4>
  422a68:	ldr	x1, [x3, #8]
  422a6c:	ldrb	w0, [x1, x4]
  422a70:	cmp	w0, #0xc1
  422a74:	b.ls	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  422a78:	ldr	x3, [x3, #88]
  422a7c:	add	x2, x4, #0x1
  422a80:	cmp	x2, x3
  422a84:	b.ge	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.tcont
  422a88:	add	x6, x1, x4
  422a8c:	cmp	w0, #0xdf
  422a90:	ldrb	w5, [x6, #1]
  422a94:	b.ls	422bf4 <_obstack_memory_used@@Base+0x4104>  // b.plast
  422a98:	cmp	w0, #0xef
  422a9c:	b.hi	422bd0 <_obstack_memory_used@@Base+0x40e0>  // b.pmore
  422aa0:	cmp	w0, #0xe0
  422aa4:	mov	w0, #0x9f                  	// #159
  422aa8:	ccmp	w5, w0, #0x2, eq  // eq = none
  422aac:	b.ls	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  422ab0:	mov	x0, #0x3                   	// #3
  422ab4:	mov	w19, w0
  422ab8:	add	x4, x4, x0
  422abc:	cmp	x3, x4
  422ac0:	b.lt	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.tstop
  422ac4:	ldrb	w1, [x1, x2]
  422ac8:	sub	w1, w1, #0x80
  422acc:	and	w1, w1, #0xff
  422ad0:	cmp	w1, #0x3f
  422ad4:	b.hi	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  422ad8:	ldrb	w1, [x6, #2]
  422adc:	sub	w1, w1, #0x80
  422ae0:	and	w1, w1, #0xff
  422ae4:	cmp	w1, #0x3f
  422ae8:	b.hi	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  422aec:	cmp	x0, #0x3
  422af0:	b.eq	4229a4 <_obstack_memory_used@@Base+0x3eb4>  // b.none
  422af4:	ldrb	w1, [x6, #3]
  422af8:	sub	w1, w1, #0x80
  422afc:	and	w1, w1, #0xff
  422b00:	cmp	w1, #0x3f
  422b04:	b.hi	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  422b08:	cmp	x0, #0x4
  422b0c:	b.eq	4229a4 <_obstack_memory_used@@Base+0x3eb4>  // b.none
  422b10:	ldrb	w1, [x6, #4]
  422b14:	sub	w1, w1, #0x80
  422b18:	and	w1, w1, #0xff
  422b1c:	cmp	w1, #0x3f
  422b20:	b.hi	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  422b24:	cmp	x0, #0x6
  422b28:	b.ne	4229a4 <_obstack_memory_used@@Base+0x3eb4>  // b.any
  422b2c:	ldrb	w0, [x6, #5]
  422b30:	sub	w0, w0, #0x80
  422b34:	and	w0, w0, #0xff
  422b38:	cmp	w0, #0x3f
  422b3c:	b.ls	4229a4 <_obstack_memory_used@@Base+0x3eb4>  // b.plast
  422b40:	b	4229a0 <_obstack_memory_used@@Base+0x3eb0>
  422b44:	ldr	x0, [x22, #72]
  422b48:	cmp	x0, #0x0
  422b4c:	b.le	422b84 <_obstack_memory_used@@Base+0x4094>
  422b50:	mov	x21, #0x0                   	// #0
  422b54:	b	422b64 <_obstack_memory_used@@Base+0x4074>
  422b58:	ldr	x0, [x22, #72]
  422b5c:	cmp	x21, x0
  422b60:	b.ge	422b80 <_obstack_memory_used@@Base+0x4090>  // b.tcont
  422b64:	ldr	x1, [x22, #24]
  422b68:	mov	w0, w20
  422b6c:	ldr	x1, [x1, x21, lsl #3]
  422b70:	add	x21, x21, #0x1
  422b74:	bl	402430 <iswctype@plt>
  422b78:	cbz	w0, 422b58 <_obstack_memory_used@@Base+0x4068>
  422b7c:	b	422a44 <_obstack_memory_used@@Base+0x3f54>
  422b80:	ldr	x5, [x22, #64]
  422b84:	cmp	x5, #0x0
  422b88:	b.le	422bc0 <_obstack_memory_used@@Base+0x40d0>
  422b8c:	ldr	x2, [x22, #8]
  422b90:	mov	x0, #0x0                   	// #0
  422b94:	nop
  422b98:	ldr	w1, [x2, x0, lsl #2]
  422b9c:	cmp	w20, w1
  422ba0:	b.cc	422bb4 <_obstack_memory_used@@Base+0x40c4>  // b.lo, b.ul, b.last
  422ba4:	ldr	x1, [x22, #16]
  422ba8:	ldr	w1, [x1, x0, lsl #2]
  422bac:	cmp	w20, w1
  422bb0:	b.ls	422a44 <_obstack_memory_used@@Base+0x3f54>  // b.plast
  422bb4:	add	x0, x0, #0x1
  422bb8:	cmp	x0, x5
  422bbc:	b.ne	422b98 <_obstack_memory_used@@Base+0x40a8>  // b.any
  422bc0:	ldrb	w0, [x22, #32]
  422bc4:	tbz	w0, #0, 42299c <_obstack_memory_used@@Base+0x3eac>
  422bc8:	ldp	x21, x22, [sp, #32]
  422bcc:	b	4229e8 <_obstack_memory_used@@Base+0x3ef8>
  422bd0:	cmp	w0, #0xf7
  422bd4:	b.hi	422c0c <_obstack_memory_used@@Base+0x411c>  // b.pmore
  422bd8:	cmp	w0, #0xf0
  422bdc:	mov	w0, #0x8f                  	// #143
  422be0:	ccmp	w5, w0, #0x2, eq  // eq = none
  422be4:	b.ls	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  422be8:	mov	x0, #0x4                   	// #4
  422bec:	mov	w19, w0
  422bf0:	b	422ab8 <_obstack_memory_used@@Base+0x3fc8>
  422bf4:	sub	w0, w5, #0x80
  422bf8:	mov	w19, #0x2                   	// #2
  422bfc:	and	w0, w0, #0xff
  422c00:	cmp	w0, #0x3f
  422c04:	b.ls	4229a4 <_obstack_memory_used@@Base+0x3eb4>  // b.plast
  422c08:	b	4229a0 <_obstack_memory_used@@Base+0x3eb0>
  422c0c:	cmp	w0, #0xfb
  422c10:	b.hi	422c30 <_obstack_memory_used@@Base+0x4140>  // b.pmore
  422c14:	cmp	w0, #0xf8
  422c18:	mov	w0, #0x87                  	// #135
  422c1c:	ccmp	w5, w0, #0x2, eq  // eq = none
  422c20:	b.ls	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  422c24:	mov	x0, #0x5                   	// #5
  422c28:	mov	w19, w0
  422c2c:	b	422ab8 <_obstack_memory_used@@Base+0x3fc8>
  422c30:	cmp	w0, #0xfd
  422c34:	b.hi	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  422c38:	cmp	w0, #0xfc
  422c3c:	mov	w0, #0x83                  	// #131
  422c40:	ccmp	w5, w0, #0x2, eq  // eq = none
  422c44:	b.ls	4229a0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  422c48:	mov	x0, #0x6                   	// #6
  422c4c:	mov	w19, w0
  422c50:	b	422ab8 <_obstack_memory_used@@Base+0x3fc8>
  422c54:	nop
  422c58:	stp	x29, x30, [sp, #-48]!
  422c5c:	mov	x29, sp
  422c60:	str	x21, [sp, #32]
  422c64:	mov	w21, #0xff                  	// #255
  422c68:	movk	w21, #0x4, lsl #16
  422c6c:	stp	x19, x20, [sp, #16]
  422c70:	mov	x19, x0
  422c74:	ldr	x0, [x0, #8]
  422c78:	cbnz	x0, 422c70 <_obstack_memory_used@@Base+0x4180>
  422c7c:	ldr	x0, [x19, #16]
  422c80:	cbnz	x0, 422c70 <_obstack_memory_used@@Base+0x4180>
  422c84:	ldr	w0, [x19, #48]
  422c88:	and	w0, w0, w21
  422c8c:	cmp	w0, #0x6
  422c90:	b.eq	422ccc <_obstack_memory_used@@Base+0x41dc>  // b.none
  422c94:	nop
  422c98:	cmp	w0, #0x3
  422c9c:	b.eq	422d14 <_obstack_memory_used@@Base+0x4224>  // b.none
  422ca0:	ldr	x1, [x19]
  422ca4:	cbz	x1, 422d00 <_obstack_memory_used@@Base+0x4210>
  422ca8:	ldr	x0, [x1, #16]
  422cac:	cmp	x0, #0x0
  422cb0:	ccmp	x19, x0, #0x4, ne  // ne = any
  422cb4:	mov	x19, x1
  422cb8:	b.ne	422c70 <_obstack_memory_used@@Base+0x4180>  // b.any
  422cbc:	ldr	w0, [x19, #48]
  422cc0:	and	w0, w0, w21
  422cc4:	cmp	w0, #0x6
  422cc8:	b.ne	422c98 <_obstack_memory_used@@Base+0x41a8>  // b.any
  422ccc:	ldr	x20, [x19, #40]
  422cd0:	ldr	x0, [x20]
  422cd4:	bl	4026b0 <free@plt>
  422cd8:	ldr	x0, [x20, #8]
  422cdc:	bl	4026b0 <free@plt>
  422ce0:	ldr	x0, [x20, #16]
  422ce4:	bl	4026b0 <free@plt>
  422ce8:	ldr	x0, [x20, #24]
  422cec:	bl	4026b0 <free@plt>
  422cf0:	mov	x0, x20
  422cf4:	bl	4026b0 <free@plt>
  422cf8:	ldr	x1, [x19]
  422cfc:	cbnz	x1, 422ca8 <_obstack_memory_used@@Base+0x41b8>
  422d00:	mov	w0, #0x0                   	// #0
  422d04:	ldp	x19, x20, [sp, #16]
  422d08:	ldr	x21, [sp, #32]
  422d0c:	ldp	x29, x30, [sp], #48
  422d10:	ret
  422d14:	ldr	x0, [x19, #40]
  422d18:	bl	4026b0 <free@plt>
  422d1c:	b	422ca0 <_obstack_memory_used@@Base+0x41b0>
  422d20:	stp	x29, x30, [sp, #-32]!
  422d24:	mov	x29, sp
  422d28:	ldr	w0, [x1, #48]
  422d2c:	and	w0, w0, #0x7ffff
  422d30:	and	w0, w0, #0xfffc00ff
  422d34:	cmp	w0, #0x6
  422d38:	b.eq	422d50 <_obstack_memory_used@@Base+0x4260>  // b.none
  422d3c:	cmp	w0, #0x3
  422d40:	b.eq	422d90 <_obstack_memory_used@@Base+0x42a0>  // b.none
  422d44:	mov	w0, #0x0                   	// #0
  422d48:	ldp	x29, x30, [sp], #32
  422d4c:	ret
  422d50:	str	x19, [sp, #16]
  422d54:	ldr	x19, [x1, #40]
  422d58:	ldr	x0, [x19]
  422d5c:	bl	4026b0 <free@plt>
  422d60:	ldr	x0, [x19, #8]
  422d64:	bl	4026b0 <free@plt>
  422d68:	ldr	x0, [x19, #16]
  422d6c:	bl	4026b0 <free@plt>
  422d70:	ldr	x0, [x19, #24]
  422d74:	bl	4026b0 <free@plt>
  422d78:	mov	x0, x19
  422d7c:	bl	4026b0 <free@plt>
  422d80:	mov	w0, #0x0                   	// #0
  422d84:	ldr	x19, [sp, #16]
  422d88:	ldp	x29, x30, [sp], #32
  422d8c:	ret
  422d90:	ldr	x0, [x1, #40]
  422d94:	bl	4026b0 <free@plt>
  422d98:	mov	w0, #0x0                   	// #0
  422d9c:	ldp	x29, x30, [sp], #32
  422da0:	ret
  422da4:	nop
  422da8:	stp	x29, x30, [sp, #-64]!
  422dac:	mov	x29, sp
  422db0:	ldr	x1, [x0]
  422db4:	stp	x19, x20, [sp, #16]
  422db8:	stp	x21, x22, [sp, #32]
  422dbc:	mov	x22, x0
  422dc0:	stp	x23, x24, [sp, #48]
  422dc4:	cbz	x1, 422e50 <_obstack_memory_used@@Base+0x4360>
  422dc8:	ldr	x4, [x0, #16]
  422dcc:	cbz	x4, 422e50 <_obstack_memory_used@@Base+0x4360>
  422dd0:	mov	w21, #0xff                  	// #255
  422dd4:	mov	x19, #0x0                   	// #0
  422dd8:	movk	w21, #0x4, lsl #16
  422ddc:	b	422df8 <_obstack_memory_used@@Base+0x4308>
  422de0:	cmp	w0, #0x3
  422de4:	b.eq	422ff0 <_obstack_memory_used@@Base+0x4500>  // b.none
  422de8:	add	x19, x19, #0x1
  422dec:	cmp	x19, x4
  422df0:	b.cs	422e50 <_obstack_memory_used@@Base+0x4360>  // b.hs, b.nlast
  422df4:	ldr	x1, [x22]
  422df8:	lsl	x2, x19, #4
  422dfc:	add	x3, x1, x2
  422e00:	ldr	w0, [x3, #8]
  422e04:	and	w0, w0, w21
  422e08:	cmp	w0, #0x6
  422e0c:	b.ne	422de0 <_obstack_memory_used@@Base+0x42f0>  // b.any
  422e10:	ldr	x20, [x1, x2]
  422e14:	add	x19, x19, #0x1
  422e18:	ldr	x0, [x20]
  422e1c:	bl	4026b0 <free@plt>
  422e20:	ldr	x0, [x20, #8]
  422e24:	bl	4026b0 <free@plt>
  422e28:	ldr	x0, [x20, #16]
  422e2c:	bl	4026b0 <free@plt>
  422e30:	ldr	x0, [x20, #24]
  422e34:	bl	4026b0 <free@plt>
  422e38:	mov	x0, x20
  422e3c:	bl	4026b0 <free@plt>
  422e40:	ldr	x4, [x22, #16]
  422e44:	cmp	x19, x4
  422e48:	b.cc	422df4 <_obstack_memory_used@@Base+0x4304>  // b.lo, b.ul, b.last
  422e4c:	nop
  422e50:	ldr	x0, [x22, #24]
  422e54:	mov	x19, #0x0                   	// #0
  422e58:	mov	x20, #0x0                   	// #0
  422e5c:	bl	4026b0 <free@plt>
  422e60:	ldr	x0, [x22, #16]
  422e64:	cbz	x0, 422eb8 <_obstack_memory_used@@Base+0x43c8>
  422e68:	ldr	x0, [x22, #48]
  422e6c:	add	x1, x0, x19
  422e70:	cbz	x0, 422e7c <_obstack_memory_used@@Base+0x438c>
  422e74:	ldr	x0, [x1, #16]
  422e78:	bl	4026b0 <free@plt>
  422e7c:	ldr	x0, [x22, #56]
  422e80:	add	x1, x0, x19
  422e84:	cbz	x0, 422e90 <_obstack_memory_used@@Base+0x43a0>
  422e88:	ldr	x0, [x1, #16]
  422e8c:	bl	4026b0 <free@plt>
  422e90:	ldr	x0, [x22, #40]
  422e94:	add	x1, x0, x19
  422e98:	cbz	x0, 422f98 <_obstack_memory_used@@Base+0x44a8>
  422e9c:	ldr	x0, [x1, #16]
  422ea0:	add	x20, x20, #0x1
  422ea4:	add	x19, x19, #0x18
  422ea8:	bl	4026b0 <free@plt>
  422eac:	ldr	x0, [x22, #16]
  422eb0:	cmp	x20, x0
  422eb4:	b.cc	422e68 <_obstack_memory_used@@Base+0x4378>  // b.lo, b.ul, b.last
  422eb8:	ldr	x0, [x22, #40]
  422ebc:	bl	4026b0 <free@plt>
  422ec0:	ldr	x0, [x22, #48]
  422ec4:	mov	x23, #0x0                   	// #0
  422ec8:	mov	x24, #0x0                   	// #0
  422ecc:	bl	4026b0 <free@plt>
  422ed0:	ldr	x0, [x22, #56]
  422ed4:	bl	4026b0 <free@plt>
  422ed8:	ldr	x0, [x22]
  422edc:	bl	4026b0 <free@plt>
  422ee0:	ldr	x0, [x22, #64]
  422ee4:	cbz	x0, 422fb4 <_obstack_memory_used@@Base+0x44c4>
  422ee8:	ldr	x1, [x0, x23]
  422eec:	add	x21, x0, x23
  422ef0:	mov	x20, #0x0                   	// #0
  422ef4:	cmp	x1, #0x0
  422ef8:	b.gt	422f40 <_obstack_memory_used@@Base+0x4450>
  422efc:	b	422f74 <_obstack_memory_used@@Base+0x4484>
  422f00:	ldr	x0, [x1, #16]
  422f04:	add	x20, x20, #0x1
  422f08:	bl	4026b0 <free@plt>
  422f0c:	ldr	x0, [x19, #80]
  422f10:	bl	4026b0 <free@plt>
  422f14:	ldr	x0, [x19, #24]
  422f18:	bl	4026b0 <free@plt>
  422f1c:	ldr	x0, [x19, #96]
  422f20:	bl	4026b0 <free@plt>
  422f24:	ldr	x0, [x19, #88]
  422f28:	bl	4026b0 <free@plt>
  422f2c:	mov	x0, x19
  422f30:	bl	4026b0 <free@plt>
  422f34:	ldr	x0, [x21]
  422f38:	cmp	x0, x20
  422f3c:	b.le	422f74 <_obstack_memory_used@@Base+0x4484>
  422f40:	ldr	x1, [x21, #16]
  422f44:	ldr	x19, [x1, x20, lsl #3]
  422f48:	ldr	x0, [x19, #48]
  422f4c:	bl	4026b0 <free@plt>
  422f50:	ldr	x0, [x19, #72]
  422f54:	bl	4026b0 <free@plt>
  422f58:	ldr	x1, [x19, #80]
  422f5c:	add	x2, x19, #0x8
  422f60:	cmp	x1, x2
  422f64:	b.ne	422f00 <_obstack_memory_used@@Base+0x4410>  // b.any
  422f68:	add	x20, x20, #0x1
  422f6c:	ldr	x0, [x19, #24]
  422f70:	b	422f18 <_obstack_memory_used@@Base+0x4428>
  422f74:	ldr	x0, [x21, #16]
  422f78:	add	x24, x24, #0x1
  422f7c:	add	x23, x23, #0x18
  422f80:	bl	4026b0 <free@plt>
  422f84:	ldr	x0, [x22, #136]
  422f88:	cmp	x0, x24
  422f8c:	b.cc	422fb0 <_obstack_memory_used@@Base+0x44c0>  // b.lo, b.ul, b.last
  422f90:	ldr	x0, [x22, #64]
  422f94:	b	422ee8 <_obstack_memory_used@@Base+0x43f8>
  422f98:	ldr	x1, [x22, #16]
  422f9c:	add	x20, x20, #0x1
  422fa0:	add	x19, x19, #0x18
  422fa4:	cmp	x1, x20
  422fa8:	b.hi	422e68 <_obstack_memory_used@@Base+0x4378>  // b.pmore
  422fac:	b	422ebc <_obstack_memory_used@@Base+0x43cc>
  422fb0:	ldr	x0, [x22, #64]
  422fb4:	bl	4026b0 <free@plt>
  422fb8:	ldr	x0, [x22, #120]
  422fbc:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  422fc0:	add	x1, x1, #0x610
  422fc4:	cmp	x0, x1
  422fc8:	b.eq	422fd0 <_obstack_memory_used@@Base+0x44e0>  // b.none
  422fcc:	bl	4026b0 <free@plt>
  422fd0:	ldr	x0, [x22, #224]
  422fd4:	bl	4026b0 <free@plt>
  422fd8:	mov	x0, x22
  422fdc:	ldp	x19, x20, [sp, #16]
  422fe0:	ldp	x21, x22, [sp, #32]
  422fe4:	ldp	x23, x24, [sp, #48]
  422fe8:	ldp	x29, x30, [sp], #64
  422fec:	b	4026b0 <free@plt>
  422ff0:	ldr	x0, [x3]
  422ff4:	bl	4026b0 <free@plt>
  422ff8:	ldr	x4, [x22, #16]
  422ffc:	b	422de8 <_obstack_memory_used@@Base+0x42f8>
  423000:	stp	x29, x30, [sp, #-96]!
  423004:	mov	x29, sp
  423008:	stp	x19, x20, [sp, #16]
  42300c:	mov	x20, x0
  423010:	mov	x19, x2
  423014:	stp	x21, x22, [sp, #32]
  423018:	mov	x21, x1
  42301c:	lsl	x22, x1, #4
  423020:	stp	x23, x24, [sp, #48]
  423024:	mov	w24, w4
  423028:	stp	x25, x26, [sp, #64]
  42302c:	mov	x25, x3
  423030:	str	x27, [sp, #80]
  423034:	ldr	x3, [x20]
  423038:	mov	x23, x19
  42303c:	ldr	x5, [x20, #40]
  423040:	add	x2, x3, x22
  423044:	ldrb	w0, [x2, #8]
  423048:	cmp	w0, #0x4
  42304c:	b.eq	423270 <_obstack_memory_used@@Base+0x4780>  // b.none
  423050:	add	x26, x21, x21, lsl #1
  423054:	lsl	x26, x26, #3
  423058:	add	x1, x5, x26
  42305c:	ldr	x0, [x1, #8]
  423060:	cbz	x0, 4233c4 <_obstack_memory_used@@Base+0x48d4>
  423064:	ldr	x1, [x1, #16]
  423068:	add	x23, x19, x19, lsl #1
  42306c:	cmp	x0, #0x1
  423070:	lsl	x23, x23, #3
  423074:	add	x0, x5, x23
  423078:	ldr	x27, [x1]
  42307c:	b.eq	4231b0 <_obstack_memory_used@@Base+0x46c0>  // b.none
  423080:	ldr	x4, [x20, #16]
  423084:	sub	x1, x4, #0x1
  423088:	add	x2, x3, x1, lsl #4
  42308c:	ldrb	w5, [x2, #10]
  423090:	str	xzr, [x0, #8]
  423094:	tst	x5, #0x4
  423098:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  42309c:	b.le	423320 <_obstack_memory_used@@Base+0x4830>
  4230a0:	add	x4, x3, x4, lsl #4
  4230a4:	sub	x4, x4, x2
  4230a8:	sub	x4, x4, #0x20
  4230ac:	ldr	x6, [x20, #32]
  4230b0:	b	4230cc <_obstack_memory_used@@Base+0x45dc>
  4230b4:	add	x2, x2, x4
  4230b8:	sub	x1, x1, #0x1
  4230bc:	ldrb	w5, [x2, #10]
  4230c0:	tst	x5, #0x4
  4230c4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4230c8:	b.le	423320 <_obstack_memory_used@@Base+0x4830>
  4230cc:	ldr	x5, [x6, x1, lsl #3]
  4230d0:	cmp	x5, x27
  4230d4:	b.ne	4230b4 <_obstack_memory_used@@Base+0x45c4>  // b.any
  4230d8:	ldr	w5, [x2, #8]
  4230dc:	ubfx	x5, x5, #8, #10
  4230e0:	cmp	w24, w5
  4230e4:	b.ne	4230b4 <_obstack_memory_used@@Base+0x45c4>  // b.any
  4230e8:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  4230ec:	tst	w0, #0xff
  4230f0:	b.eq	423190 <_obstack_memory_used@@Base+0x46a0>  // b.none
  4230f4:	ldr	x2, [x20, #40]
  4230f8:	mov	x0, x20
  4230fc:	ldr	x1, [x20]
  423100:	add	x26, x2, x26
  423104:	ldr	x2, [x26, #16]
  423108:	ldr	x21, [x2, #8]
  42310c:	lsl	x22, x21, #4
  423110:	add	x1, x1, x22
  423114:	ldp	x2, x3, [x1]
  423118:	mov	x1, x2
  42311c:	mov	x2, x3
  423120:	bl	41fd78 <_obstack_memory_used@@Base+0x1288>
  423124:	mov	x19, x0
  423128:	cmn	x0, #0x1
  42312c:	b.eq	423190 <_obstack_memory_used@@Base+0x46a0>  // b.none
  423130:	ldr	x3, [x20]
  423134:	mov	x1, x0
  423138:	and	w2, w24, #0x3ff
  42313c:	add	x5, x3, x22
  423140:	mov	w4, w2
  423144:	add	x3, x3, x0, lsl #4
  423148:	ldr	w0, [x3, #8]
  42314c:	bfi	w0, w2, #8, #10
  423150:	str	w0, [x3, #8]
  423154:	and	w0, w0, #0xfff800ff
  423158:	ldr	w2, [x5, #8]
  42315c:	ubfx	x2, x2, #8, #10
  423160:	orr	w2, w2, w4
  423164:	ldp	x5, x4, [x20, #32]
  423168:	lsl	w2, w2, #8
  42316c:	orr	w2, w2, #0x40000
  423170:	orr	w2, w2, w0
  423174:	str	w2, [x3, #8]
  423178:	str	x21, [x5, x19, lsl #3]
  42317c:	add	x0, x4, x23
  423180:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  423184:	tst	w0, #0xff
  423188:	b.ne	423034 <_obstack_memory_used@@Base+0x4544>  // b.any
  42318c:	nop
  423190:	mov	w0, #0xc                   	// #12
  423194:	ldp	x19, x20, [sp, #16]
  423198:	ldp	x21, x22, [sp, #32]
  42319c:	ldp	x23, x24, [sp, #48]
  4231a0:	ldp	x25, x26, [sp, #64]
  4231a4:	ldr	x27, [sp, #80]
  4231a8:	ldp	x29, x30, [sp], #96
  4231ac:	ret
  4231b0:	str	xzr, [x0, #8]
  4231b4:	cmp	x21, x25
  4231b8:	ccmp	x21, x19, #0x4, eq  // eq = none
  4231bc:	b.ne	4233d4 <_obstack_memory_used@@Base+0x48e4>  // b.any
  4231c0:	lsl	x22, x27, #4
  4231c4:	ldr	w2, [x2, #8]
  4231c8:	add	x3, x3, x22
  4231cc:	mov	x0, x20
  4231d0:	ubfx	x2, x2, #8, #10
  4231d4:	ldp	x4, x5, [x3]
  4231d8:	orr	w24, w24, w2
  4231dc:	mov	x1, x4
  4231e0:	mov	x2, x5
  4231e4:	bl	41fd78 <_obstack_memory_used@@Base+0x1288>
  4231e8:	mov	x19, x0
  4231ec:	cmn	x0, #0x1
  4231f0:	b.eq	423190 <_obstack_memory_used@@Base+0x46a0>  // b.none
  4231f4:	ldr	x3, [x20]
  4231f8:	mov	x1, x0
  4231fc:	and	w2, w24, #0x3ff
  423200:	add	x5, x3, x22
  423204:	mov	w4, w2
  423208:	add	x3, x3, x0, lsl #4
  42320c:	ldr	w0, [x3, #8]
  423210:	bfi	w0, w2, #8, #10
  423214:	str	w0, [x3, #8]
  423218:	and	w0, w0, #0xfff800ff
  42321c:	ldr	w2, [x5, #8]
  423220:	ubfx	x2, x2, #8, #10
  423224:	orr	w2, w2, w4
  423228:	ldp	x5, x4, [x20, #32]
  42322c:	lsl	w2, w2, #8
  423230:	orr	w2, w2, #0x40000
  423234:	orr	w2, w2, w0
  423238:	str	w2, [x3, #8]
  42323c:	str	x27, [x5, x19, lsl #3]
  423240:	add	x0, x4, x23
  423244:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  423248:	tst	w0, #0xff
  42324c:	b.eq	423190 <_obstack_memory_used@@Base+0x46a0>  // b.none
  423250:	ldr	x3, [x20]
  423254:	mov	x21, x27
  423258:	mov	x23, x19
  42325c:	add	x2, x3, x22
  423260:	ldr	x5, [x20, #40]
  423264:	ldrb	w0, [x2, #8]
  423268:	cmp	w0, #0x4
  42326c:	b.ne	423050 <_obstack_memory_used@@Base+0x4560>  // b.any
  423270:	ldr	x1, [x20, #24]
  423274:	lsl	x27, x21, #3
  423278:	add	x19, x19, x19, lsl #1
  42327c:	mov	x0, x20
  423280:	ldr	x21, [x1, x21, lsl #3]
  423284:	lsl	x26, x19, #3
  423288:	add	x5, x5, x26
  42328c:	lsl	x22, x21, #4
  423290:	add	x3, x3, x22
  423294:	ldp	x2, x3, [x3]
  423298:	str	xzr, [x5, #8]
  42329c:	mov	x1, x2
  4232a0:	mov	x2, x3
  4232a4:	bl	41fd78 <_obstack_memory_used@@Base+0x1288>
  4232a8:	mov	x19, x0
  4232ac:	cmn	x0, #0x1
  4232b0:	b.eq	423190 <_obstack_memory_used@@Base+0x46a0>  // b.none
  4232b4:	ldr	x2, [x20]
  4232b8:	and	w0, w24, #0x3ff
  4232bc:	mov	w4, w0
  4232c0:	mov	x1, x19
  4232c4:	add	x5, x2, x22
  4232c8:	add	x2, x2, x19, lsl #4
  4232cc:	ldr	w3, [x2, #8]
  4232d0:	bfi	w3, w0, #8, #10
  4232d4:	str	w3, [x2, #8]
  4232d8:	and	w3, w3, #0xfff800ff
  4232dc:	ldr	w0, [x5, #8]
  4232e0:	ubfx	x0, x0, #8, #10
  4232e4:	orr	w0, w0, w4
  4232e8:	ldp	x4, x5, [x20, #24]
  4232ec:	lsl	w0, w0, #8
  4232f0:	orr	w0, w0, #0x40000
  4232f4:	orr	w0, w0, w3
  4232f8:	str	w0, [x2, #8]
  4232fc:	ldr	x0, [x20, #40]
  423300:	str	x21, [x5, x19, lsl #3]
  423304:	add	x0, x0, x26
  423308:	ldr	x2, [x4, x27]
  42330c:	str	x2, [x4, x23, lsl #3]
  423310:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  423314:	tst	w0, #0xff
  423318:	b.ne	423034 <_obstack_memory_used@@Base+0x4544>  // b.any
  42331c:	b	423190 <_obstack_memory_used@@Base+0x46a0>
  423320:	lsl	x21, x27, #4
  423324:	mov	x0, x20
  423328:	add	x3, x3, x21
  42332c:	ldp	x2, x3, [x3]
  423330:	mov	x1, x2
  423334:	mov	x2, x3
  423338:	bl	41fd78 <_obstack_memory_used@@Base+0x1288>
  42333c:	mov	x19, x0
  423340:	cmn	x0, #0x1
  423344:	b.eq	423190 <_obstack_memory_used@@Base+0x46a0>  // b.none
  423348:	ldr	x2, [x20]
  42334c:	and	w3, w24, #0x3ff
  423350:	mov	w4, w3
  423354:	mov	x1, x19
  423358:	add	x21, x2, x21
  42335c:	add	x2, x2, x19, lsl #4
  423360:	ldr	w0, [x2, #8]
  423364:	bfi	w0, w3, #8, #10
  423368:	str	w0, [x2, #8]
  42336c:	and	w0, w0, #0xfff800ff
  423370:	ldr	w3, [x21, #8]
  423374:	ubfx	x3, x3, #8, #10
  423378:	orr	w3, w3, w4
  42337c:	ldp	x5, x4, [x20, #32]
  423380:	lsl	w3, w3, #8
  423384:	orr	w3, w3, #0x40000
  423388:	orr	w3, w3, w0
  42338c:	str	w3, [x2, #8]
  423390:	str	x27, [x5, x19, lsl #3]
  423394:	add	x0, x4, x23
  423398:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  42339c:	tst	w0, #0xff
  4233a0:	b.eq	423190 <_obstack_memory_used@@Base+0x46a0>  // b.none
  4233a4:	mov	x2, x19
  4233a8:	mov	x1, x27
  4233ac:	mov	w4, w24
  4233b0:	mov	x3, x25
  4233b4:	mov	x0, x20
  4233b8:	bl	423000 <_obstack_memory_used@@Base+0x4510>
  4233bc:	cbz	w0, 4230f4 <_obstack_memory_used@@Base+0x4604>
  4233c0:	b	423194 <_obstack_memory_used@@Base+0x46a4>
  4233c4:	ldr	x1, [x20, #24]
  4233c8:	ldr	x2, [x1, x21, lsl #3]
  4233cc:	str	x2, [x1, x19, lsl #3]
  4233d0:	b	423194 <_obstack_memory_used@@Base+0x46a4>
  4233d4:	mov	x1, x27
  4233d8:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  4233dc:	tst	w0, #0xff
  4233e0:	mov	w0, #0x0                   	// #0
  4233e4:	b.ne	423194 <_obstack_memory_used@@Base+0x46a4>  // b.any
  4233e8:	b	423190 <_obstack_memory_used@@Base+0x46a0>
  4233ec:	nop
  4233f0:	stp	x29, x30, [sp, #-144]!
  4233f4:	mov	x29, sp
  4233f8:	stp	x19, x20, [sp, #16]
  4233fc:	add	x20, x2, x2, lsl #1
  423400:	mov	x19, x1
  423404:	stp	x23, x24, [sp, #48]
  423408:	lsl	x20, x20, #3
  42340c:	and	w24, w3, #0xff
  423410:	ldr	x23, [x1, #40]
  423414:	stp	x21, x22, [sp, #32]
  423418:	mov	x22, x0
  42341c:	add	x23, x23, x20
  423420:	mov	x21, x2
  423424:	ldr	x0, [x23, #8]
  423428:	add	x0, x0, #0x1
  42342c:	stp	x0, xzr, [sp, #96]
  423430:	lsl	x0, x0, #3
  423434:	bl	402440 <malloc@plt>
  423438:	str	x0, [sp, #112]
  42343c:	cbz	x0, 42362c <_obstack_memory_used@@Base+0x4b3c>
  423440:	ldr	x2, [x19]
  423444:	stp	x25, x26, [sp, #64]
  423448:	lsl	x25, x21, #4
  42344c:	ldr	x0, [x19, #48]
  423450:	add	x1, x2, x25
  423454:	mov	x3, #0xffffffffffffffff    	// #-1
  423458:	add	x0, x0, x20
  42345c:	ldr	w4, [x1, #8]
  423460:	str	x3, [x0, #8]
  423464:	tst	w4, #0x3ff00
  423468:	b.ne	4235b4 <_obstack_memory_used@@Base+0x4ac4>  // b.any
  42346c:	ldrb	w0, [x1, #8]
  423470:	tbz	w0, #3, 4235f8 <_obstack_memory_used@@Base+0x4b08>
  423474:	ldr	x1, [x19, #40]
  423478:	add	x0, x1, x20
  42347c:	ldr	x2, [x0, #8]
  423480:	cmp	x2, #0x0
  423484:	b.le	4235f8 <_obstack_memory_used@@Base+0x4b08>
  423488:	mov	w23, #0x0                   	// #0
  42348c:	mov	x26, #0x0                   	// #0
  423490:	str	x27, [sp, #80]
  423494:	nop
  423498:	ldr	x0, [x0, #16]
  42349c:	add	x27, sp, #0x78
  4234a0:	ldr	x3, [x19, #48]
  4234a4:	ldr	x2, [x0, x26, lsl #3]
  4234a8:	add	x25, x2, x2, lsl #1
  4234ac:	lsl	x25, x25, #3
  4234b0:	add	x3, x3, x25
  4234b4:	ldr	x0, [x3, #8]
  4234b8:	cmn	x0, #0x1
  4234bc:	b.eq	4235ac <_obstack_memory_used@@Base+0x4abc>  // b.none
  4234c0:	cbz	x0, 423578 <_obstack_memory_used@@Base+0x4a88>
  4234c4:	ldp	x0, x1, [x3]
  4234c8:	stp	x0, x1, [sp, #120]
  4234cc:	ldr	x0, [x3, #16]
  4234d0:	str	x0, [sp, #136]
  4234d4:	mov	x1, x27
  4234d8:	add	x0, sp, #0x60
  4234dc:	bl	420010 <_obstack_memory_used@@Base+0x1520>
  4234e0:	cbnz	w0, 423590 <_obstack_memory_used@@Base+0x4aa0>
  4234e4:	ldr	x0, [x19, #48]
  4234e8:	add	x25, x0, x25
  4234ec:	ldr	x0, [x25, #8]
  4234f0:	cbz	x0, 423568 <_obstack_memory_used@@Base+0x4a78>
  4234f4:	ldr	x1, [x19, #40]
  4234f8:	add	x0, x1, x20
  4234fc:	add	x26, x26, #0x1
  423500:	ldr	x2, [x0, #8]
  423504:	cmp	x2, x26
  423508:	b.gt	423498 <_obstack_memory_used@@Base+0x49a8>
  42350c:	mov	x1, x21
  423510:	add	x0, sp, #0x60
  423514:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  423518:	tst	w0, #0xff
  42351c:	b.eq	42364c <_obstack_memory_used@@Base+0x4b5c>  // b.none
  423520:	ldr	x0, [x19, #48]
  423524:	eor	w24, w24, #0x1
  423528:	tst	w23, w24
  42352c:	add	x1, x0, x20
  423530:	b.eq	42365c <_obstack_memory_used@@Base+0x4b6c>  // b.none
  423534:	ldr	x27, [sp, #80]
  423538:	str	xzr, [x1, #8]
  42353c:	ldp	x2, x3, [sp, #96]
  423540:	mov	w0, #0x0                   	// #0
  423544:	ldr	x1, [sp, #112]
  423548:	stp	x2, x3, [x22]
  42354c:	ldp	x25, x26, [sp, #64]
  423550:	str	x1, [x22, #16]
  423554:	ldp	x19, x20, [sp, #16]
  423558:	ldp	x21, x22, [sp, #32]
  42355c:	ldp	x23, x24, [sp, #48]
  423560:	ldp	x29, x30, [sp], #144
  423564:	ret
  423568:	ldr	x0, [sp, #136]
  42356c:	mov	w23, #0x1                   	// #1
  423570:	bl	4026b0 <free@plt>
  423574:	b	4234f4 <_obstack_memory_used@@Base+0x4a04>
  423578:	add	x27, sp, #0x78
  42357c:	mov	x1, x19
  423580:	mov	x0, x27
  423584:	mov	w3, #0x0                   	// #0
  423588:	bl	4233f0 <_obstack_memory_used@@Base+0x4900>
  42358c:	cbz	w0, 4234d4 <_obstack_memory_used@@Base+0x49e4>
  423590:	ldp	x19, x20, [sp, #16]
  423594:	ldp	x21, x22, [sp, #32]
  423598:	ldp	x23, x24, [sp, #48]
  42359c:	ldp	x25, x26, [sp, #64]
  4235a0:	ldr	x27, [sp, #80]
  4235a4:	ldp	x29, x30, [sp], #144
  4235a8:	ret
  4235ac:	mov	w23, #0x1                   	// #1
  4235b0:	b	4234f8 <_obstack_memory_used@@Base+0x4a08>
  4235b4:	ldr	x0, [x23, #8]
  4235b8:	cbz	x0, 4235f8 <_obstack_memory_used@@Base+0x4b08>
  4235bc:	ldr	x0, [x23, #16]
  4235c0:	ldr	x0, [x0]
  4235c4:	add	x2, x2, x0, lsl #4
  4235c8:	ldrb	w0, [x2, #10]
  4235cc:	tbnz	w0, #2, 42346c <_obstack_memory_used@@Base+0x497c>
  4235d0:	ubfx	x4, x4, #8, #10
  4235d4:	mov	x3, x21
  4235d8:	mov	x2, x21
  4235dc:	mov	x1, x21
  4235e0:	mov	x0, x19
  4235e4:	bl	423000 <_obstack_memory_used@@Base+0x4510>
  4235e8:	cbnz	w0, 423644 <_obstack_memory_used@@Base+0x4b54>
  4235ec:	ldr	x1, [x19]
  4235f0:	add	x1, x1, x25
  4235f4:	b	42346c <_obstack_memory_used@@Base+0x497c>
  4235f8:	mov	x1, x21
  4235fc:	add	x0, sp, #0x60
  423600:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  423604:	tst	w0, #0xff
  423608:	b.eq	423628 <_obstack_memory_used@@Base+0x4b38>  // b.none
  42360c:	ldr	x0, [x19, #48]
  423610:	add	x20, x0, x20
  423614:	ldp	x0, x1, [sp, #96]
  423618:	stp	x0, x1, [x20]
  42361c:	ldr	x0, [sp, #112]
  423620:	str	x0, [x20, #16]
  423624:	b	42353c <_obstack_memory_used@@Base+0x4a4c>
  423628:	ldp	x25, x26, [sp, #64]
  42362c:	mov	w0, #0xc                   	// #12
  423630:	ldp	x19, x20, [sp, #16]
  423634:	ldp	x21, x22, [sp, #32]
  423638:	ldp	x23, x24, [sp, #48]
  42363c:	ldp	x29, x30, [sp], #144
  423640:	ret
  423644:	ldp	x25, x26, [sp, #64]
  423648:	b	423554 <_obstack_memory_used@@Base+0x4a64>
  42364c:	mov	w0, #0xc                   	// #12
  423650:	ldp	x25, x26, [sp, #64]
  423654:	ldr	x27, [sp, #80]
  423658:	b	423630 <_obstack_memory_used@@Base+0x4b40>
  42365c:	ldr	x27, [sp, #80]
  423660:	b	423610 <_obstack_memory_used@@Base+0x4b20>
  423664:	nop
  423668:	stp	x29, x30, [sp, #-64]!
  42366c:	mov	x29, sp
  423670:	stp	x19, x20, [sp, #16]
  423674:	mov	x19, x2
  423678:	mov	w20, w4
  42367c:	stp	x21, x22, [sp, #32]
  423680:	mov	x22, x1
  423684:	mov	x21, x3
  423688:	str	x23, [sp, #48]
  42368c:	mov	x23, x0
  423690:	ldr	x2, [x22, #8]
  423694:	cmp	x2, #0x0
  423698:	b.le	4236d8 <_obstack_memory_used@@Base+0x4be8>
  42369c:	sub	x2, x2, #0x1
  4236a0:	mov	x3, #0x0                   	// #0
  4236a4:	ldr	x0, [x22, #16]
  4236a8:	b	4236c0 <_obstack_memory_used@@Base+0x4bd0>
  4236ac:	lsr	x5, x5, #1
  4236b0:	ldr	x1, [x0, x5, lsl #3]
  4236b4:	cmp	x19, x1
  4236b8:	b.gt	42376c <_obstack_memory_used@@Base+0x4c7c>
  4236bc:	mov	x2, x5
  4236c0:	add	x5, x2, x3
  4236c4:	cmp	x2, x3
  4236c8:	b.hi	4236ac <_obstack_memory_used@@Base+0x4bbc>  // b.pmore
  4236cc:	ldr	x0, [x0, x3, lsl #3]
  4236d0:	cmp	x19, x0
  4236d4:	b.eq	423790 <_obstack_memory_used@@Base+0x4ca0>  // b.none
  4236d8:	ldr	x1, [x23]
  4236dc:	lsl	x0, x19, #4
  4236e0:	add	x2, x1, x0
  4236e4:	ldrb	w2, [x2, #8]
  4236e8:	cmp	w2, w20
  4236ec:	b.ne	4236fc <_obstack_memory_used@@Base+0x4c0c>  // b.any
  4236f0:	ldr	x0, [x1, x0]
  4236f4:	cmp	x0, x21
  4236f8:	b.eq	423774 <_obstack_memory_used@@Base+0x4c84>  // b.none
  4236fc:	mov	x1, x19
  423700:	mov	x0, x22
  423704:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  423708:	tst	w0, #0xff
  42370c:	b.eq	4237a8 <_obstack_memory_used@@Base+0x4cb8>  // b.none
  423710:	add	x19, x19, x19, lsl #1
  423714:	ldr	x2, [x23, #40]
  423718:	lsl	x19, x19, #3
  42371c:	add	x2, x2, x19
  423720:	ldr	x0, [x2, #8]
  423724:	cbz	x0, 423790 <_obstack_memory_used@@Base+0x4ca0>
  423728:	cmp	x0, #0x2
  42372c:	ldr	x0, [x2, #16]
  423730:	b.eq	42373c <_obstack_memory_used@@Base+0x4c4c>  // b.none
  423734:	ldr	x19, [x0]
  423738:	b	423690 <_obstack_memory_used@@Base+0x4ba0>
  42373c:	ldr	x2, [x0, #8]
  423740:	mov	w4, w20
  423744:	mov	x3, x21
  423748:	mov	x1, x22
  42374c:	mov	x0, x23
  423750:	bl	423668 <_obstack_memory_used@@Base+0x4b78>
  423754:	cbnz	w0, 423794 <_obstack_memory_used@@Base+0x4ca4>
  423758:	ldr	x0, [x23, #40]
  42375c:	add	x19, x0, x19
  423760:	ldr	x0, [x19, #16]
  423764:	ldr	x19, [x0]
  423768:	b	423690 <_obstack_memory_used@@Base+0x4ba0>
  42376c:	add	x3, x5, #0x1
  423770:	b	4236c0 <_obstack_memory_used@@Base+0x4bd0>
  423774:	cmp	w20, #0x9
  423778:	b.ne	423790 <_obstack_memory_used@@Base+0x4ca0>  // b.any
  42377c:	mov	x1, x19
  423780:	mov	x0, x22
  423784:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  423788:	tst	w0, #0xff
  42378c:	b.eq	4237a8 <_obstack_memory_used@@Base+0x4cb8>  // b.none
  423790:	mov	w0, #0x0                   	// #0
  423794:	ldp	x19, x20, [sp, #16]
  423798:	ldp	x21, x22, [sp, #32]
  42379c:	ldr	x23, [sp, #48]
  4237a0:	ldp	x29, x30, [sp], #64
  4237a4:	ret
  4237a8:	mov	w0, #0xc                   	// #12
  4237ac:	ldp	x19, x20, [sp, #16]
  4237b0:	ldp	x21, x22, [sp, #32]
  4237b4:	ldr	x23, [sp, #48]
  4237b8:	ldp	x29, x30, [sp], #64
  4237bc:	ret
  4237c0:	stp	x29, x30, [sp, #-96]!
  4237c4:	mov	x29, sp
  4237c8:	stp	x21, x22, [sp, #32]
  4237cc:	ldr	x21, [x1, #8]
  4237d0:	stp	x19, x20, [sp, #16]
  4237d4:	mov	x20, x2
  4237d8:	mov	w19, w3
  4237dc:	stp	x23, x24, [sp, #48]
  4237e0:	mov	x24, x1
  4237e4:	mov	x23, x0
  4237e8:	lsl	x0, x21, #3
  4237ec:	stp	x21, xzr, [sp, #72]
  4237f0:	bl	402440 <malloc@plt>
  4237f4:	str	x0, [sp, #88]
  4237f8:	cbz	x0, 423900 <_obstack_memory_used@@Base+0x4e10>
  4237fc:	cmp	x21, #0x0
  423800:	b.le	42389c <_obstack_memory_used@@Base+0x4dac>
  423804:	mov	x22, #0x0                   	// #0
  423808:	ldr	x1, [x24, #16]
  42380c:	ldr	x0, [x23, #48]
  423810:	ldr	x2, [x1, x22, lsl #3]
  423814:	add	x1, x2, x2, lsl #1
  423818:	add	x1, x0, x1, lsl #3
  42381c:	ldr	x10, [x1, #8]
  423820:	cmp	x10, #0x0
  423824:	b.le	4238d0 <_obstack_memory_used@@Base+0x4de0>
  423828:	mov	x5, #0x0                   	// #0
  42382c:	ldr	x9, [x23]
  423830:	ldr	x4, [x1, #16]
  423834:	b	423840 <_obstack_memory_used@@Base+0x4d50>
  423838:	cmp	x10, x5
  42383c:	b.eq	4238d0 <_obstack_memory_used@@Base+0x4de0>  // b.none
  423840:	ldr	x7, [x4, x5, lsl #3]
  423844:	add	x5, x5, #0x1
  423848:	lsl	x6, x7, #4
  42384c:	add	x8, x9, x6
  423850:	ldrb	w8, [x8, #8]
  423854:	cmp	w19, w8
  423858:	b.ne	423838 <_obstack_memory_used@@Base+0x4d48>  // b.any
  42385c:	ldr	x6, [x9, x6]
  423860:	cmp	x20, x6
  423864:	b.ne	423838 <_obstack_memory_used@@Base+0x4d48>  // b.any
  423868:	cmn	x7, #0x1
  42386c:	b.eq	4238d0 <_obstack_memory_used@@Base+0x4de0>  // b.none
  423870:	mov	w4, w19
  423874:	mov	x3, x20
  423878:	add	x1, sp, #0x48
  42387c:	mov	x0, x23
  423880:	bl	423668 <_obstack_memory_used@@Base+0x4b78>
  423884:	mov	w21, w0
  423888:	cbnz	w0, 4238e0 <_obstack_memory_used@@Base+0x4df0>
  42388c:	ldr	x0, [x24, #8]
  423890:	add	x22, x22, #0x1
  423894:	cmp	x0, x22
  423898:	b.gt	423808 <_obstack_memory_used@@Base+0x4d18>
  42389c:	ldr	x0, [x24, #16]
  4238a0:	mov	w21, #0x0                   	// #0
  4238a4:	bl	4026b0 <free@plt>
  4238a8:	ldp	x0, x1, [sp, #72]
  4238ac:	stp	x0, x1, [x24]
  4238b0:	ldr	x0, [sp, #88]
  4238b4:	str	x0, [x24, #16]
  4238b8:	mov	w0, w21
  4238bc:	ldp	x19, x20, [sp, #16]
  4238c0:	ldp	x21, x22, [sp, #32]
  4238c4:	ldp	x23, x24, [sp, #48]
  4238c8:	ldp	x29, x30, [sp], #96
  4238cc:	ret
  4238d0:	add	x0, sp, #0x48
  4238d4:	bl	420010 <_obstack_memory_used@@Base+0x1520>
  4238d8:	mov	w21, w0
  4238dc:	cbz	w0, 42388c <_obstack_memory_used@@Base+0x4d9c>
  4238e0:	ldr	x0, [sp, #88]
  4238e4:	bl	4026b0 <free@plt>
  4238e8:	mov	w0, w21
  4238ec:	ldp	x19, x20, [sp, #16]
  4238f0:	ldp	x21, x22, [sp, #32]
  4238f4:	ldp	x23, x24, [sp, #48]
  4238f8:	ldp	x29, x30, [sp], #96
  4238fc:	ret
  423900:	mov	w21, #0xc                   	// #12
  423904:	mov	w0, w21
  423908:	ldp	x19, x20, [sp, #16]
  42390c:	ldp	x21, x22, [sp, #32]
  423910:	ldp	x23, x24, [sp, #48]
  423914:	ldp	x29, x30, [sp], #96
  423918:	ret
  42391c:	nop
  423920:	stp	x29, x30, [sp, #-48]!
  423924:	mov	x2, #0xffffffffffffffe     	// #1152921504606846974
  423928:	mov	x29, sp
  42392c:	stp	x19, x20, [sp, #16]
  423930:	mov	x19, x0
  423934:	ldr	x0, [x0, #64]
  423938:	cmp	x0, x2
  42393c:	b.hi	423a84 <_obstack_memory_used@@Base+0x4f94>  // b.pmore
  423940:	ldr	x2, [x19, #88]
  423944:	lsl	x20, x0, #1
  423948:	sxtw	x1, w1
  42394c:	ldr	w0, [x19, #144]
  423950:	cmp	x20, x2
  423954:	csel	x20, x20, x2, le
  423958:	cmp	x20, x1
  42395c:	csel	x20, x20, x1, ge  // ge = tcont
  423960:	cmp	w0, #0x1
  423964:	b.le	4239a4 <_obstack_memory_used@@Base+0x4eb4>
  423968:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  42396c:	cmp	x20, x0
  423970:	b.hi	423a84 <_obstack_memory_used@@Base+0x4f94>  // b.pmore
  423974:	ldr	x0, [x19, #16]
  423978:	lsl	x1, x20, #2
  42397c:	bl	402550 <realloc@plt>
  423980:	mov	x1, x0
  423984:	cbz	x0, 423a84 <_obstack_memory_used@@Base+0x4f94>
  423988:	ldr	x0, [x19, #24]
  42398c:	str	x1, [x19, #16]
  423990:	cbz	x0, 4239a4 <_obstack_memory_used@@Base+0x4eb4>
  423994:	lsl	x1, x20, #3
  423998:	bl	402550 <realloc@plt>
  42399c:	cbz	x0, 423a84 <_obstack_memory_used@@Base+0x4f94>
  4239a0:	str	x0, [x19, #24]
  4239a4:	ldrb	w0, [x19, #139]
  4239a8:	cbnz	w0, 423a94 <_obstack_memory_used@@Base+0x4fa4>
  4239ac:	ldr	x0, [x19, #184]
  4239b0:	str	x20, [x19, #64]
  4239b4:	cbz	x0, 4239cc <_obstack_memory_used@@Base+0x4edc>
  4239b8:	add	x1, x20, #0x1
  4239bc:	lsl	x1, x1, #3
  4239c0:	bl	402550 <realloc@plt>
  4239c4:	cbz	x0, 423a84 <_obstack_memory_used@@Base+0x4f94>
  4239c8:	str	x0, [x19, #184]
  4239cc:	ldrb	w0, [x19, #136]
  4239d0:	ldr	w1, [x19, #144]
  4239d4:	cmp	w1, #0x1
  4239d8:	cbz	w0, 4239f0 <_obstack_memory_used@@Base+0x4f00>
  4239dc:	b.le	423ac4 <_obstack_memory_used@@Base+0x4fd4>
  4239e0:	mov	x0, x19
  4239e4:	ldp	x19, x20, [sp, #16]
  4239e8:	ldp	x29, x30, [sp], #48
  4239ec:	b	41f468 <_obstack_memory_used@@Base+0x978>
  4239f0:	b.gt	423aac <_obstack_memory_used@@Base+0x4fbc>
  4239f4:	ldr	x3, [x19, #120]
  4239f8:	mov	w0, #0x0                   	// #0
  4239fc:	cbz	x3, 423a78 <_obstack_memory_used@@Base+0x4f88>
  423a00:	ldr	x2, [x19, #64]
  423a04:	ldr	x0, [x19, #88]
  423a08:	ldr	x1, [x19, #48]
  423a0c:	cmp	x2, x0
  423a10:	csel	x2, x2, x0, le
  423a14:	cmp	x2, x1
  423a18:	b.le	423b60 <_obstack_memory_used@@Base+0x5070>
  423a1c:	ldp	x4, x5, [x19]
  423a20:	add	x0, x1, #0x1
  423a24:	ldr	x6, [x19, #40]
  423a28:	cmp	x2, x0
  423a2c:	add	x4, x4, x1
  423a30:	ldrb	w4, [x4, x6]
  423a34:	ldrb	w3, [x3, x4]
  423a38:	strb	w3, [x5, x1]
  423a3c:	b.le	423a6c <_obstack_memory_used@@Base+0x4f7c>
  423a40:	ldr	x1, [x19]
  423a44:	ldr	x3, [x19, #40]
  423a48:	add	x1, x1, x0
  423a4c:	ldr	x4, [x19, #120]
  423a50:	ldrb	w3, [x1, x3]
  423a54:	ldr	x1, [x19, #8]
  423a58:	ldrb	w3, [x4, x3]
  423a5c:	strb	w3, [x1, x0]
  423a60:	add	x0, x0, #0x1
  423a64:	cmp	x2, x0
  423a68:	b.ne	423a40 <_obstack_memory_used@@Base+0x4f50>  // b.any
  423a6c:	dup	v0.2d, x2
  423a70:	mov	w0, #0x0                   	// #0
  423a74:	str	q0, [x19, #48]
  423a78:	ldp	x19, x20, [sp, #16]
  423a7c:	ldp	x29, x30, [sp], #48
  423a80:	ret
  423a84:	mov	w0, #0xc                   	// #12
  423a88:	ldp	x19, x20, [sp, #16]
  423a8c:	ldp	x29, x30, [sp], #48
  423a90:	ret
  423a94:	ldr	x0, [x19, #8]
  423a98:	mov	x1, x20
  423a9c:	bl	402550 <realloc@plt>
  423aa0:	cbz	x0, 423a84 <_obstack_memory_used@@Base+0x4f94>
  423aa4:	str	x0, [x19, #8]
  423aa8:	b	4239ac <_obstack_memory_used@@Base+0x4ebc>
  423aac:	mov	x0, x19
  423ab0:	bl	41f270 <_obstack_memory_used@@Base+0x780>
  423ab4:	mov	w0, #0x0                   	// #0
  423ab8:	ldp	x19, x20, [sp, #16]
  423abc:	ldp	x29, x30, [sp], #48
  423ac0:	ret
  423ac4:	ldr	x20, [x19, #48]
  423ac8:	ldr	x0, [x19, #88]
  423acc:	str	x21, [sp, #32]
  423ad0:	ldr	x21, [x19, #64]
  423ad4:	cmp	x21, x0
  423ad8:	csel	x21, x21, x0, le
  423adc:	cmp	x21, x20
  423ae0:	b.le	423b68 <_obstack_memory_used@@Base+0x5078>
  423ae4:	bl	402560 <__ctype_toupper_loc@plt>
  423ae8:	b	423b08 <_obstack_memory_used@@Base+0x5018>
  423aec:	ldr	x2, [x0]
  423af0:	ldr	x1, [x19, #8]
  423af4:	ldr	w2, [x2, x3, lsl #2]
  423af8:	strb	w2, [x1, x20]
  423afc:	add	x20, x20, #0x1
  423b00:	cmp	x21, x20
  423b04:	b.eq	423b44 <_obstack_memory_used@@Base+0x5054>  // b.none
  423b08:	ldr	x1, [x19]
  423b0c:	ldr	x3, [x19, #40]
  423b10:	add	x1, x1, x20
  423b14:	ldr	x2, [x19, #120]
  423b18:	ldrb	w3, [x1, x3]
  423b1c:	and	x1, x3, #0xff
  423b20:	cbz	x2, 423aec <_obstack_memory_used@@Base+0x4ffc>
  423b24:	ldrb	w2, [x2, x1]
  423b28:	ldr	x3, [x0]
  423b2c:	ldr	x1, [x19, #8]
  423b30:	ldr	w2, [x3, x2, lsl #2]
  423b34:	strb	w2, [x1, x20]
  423b38:	add	x20, x20, #0x1
  423b3c:	cmp	x20, x21
  423b40:	b.ne	423b08 <_obstack_memory_used@@Base+0x5018>  // b.any
  423b44:	dup	v0.2d, x21
  423b48:	mov	w0, #0x0                   	// #0
  423b4c:	ldr	x21, [sp, #32]
  423b50:	str	q0, [x19, #48]
  423b54:	ldp	x19, x20, [sp, #16]
  423b58:	ldp	x29, x30, [sp], #48
  423b5c:	ret
  423b60:	mov	x2, x1
  423b64:	b	423a6c <_obstack_memory_used@@Base+0x4f7c>
  423b68:	mov	x21, x20
  423b6c:	b	423b44 <_obstack_memory_used@@Base+0x5054>
  423b70:	stp	x29, x30, [sp, #-112]!
  423b74:	mov	x29, sp
  423b78:	stp	x21, x22, [sp, #32]
  423b7c:	mov	x22, x0
  423b80:	add	x21, x1, x1, lsl #1
  423b84:	ldr	x0, [x0, #56]
  423b88:	stp	xzr, xzr, [sp, #88]
  423b8c:	str	xzr, [sp, #104]
  423b90:	add	x21, x0, x21, lsl #3
  423b94:	str	x25, [sp, #64]
  423b98:	ldr	x8, [x21, #8]
  423b9c:	cmp	x8, #0x0
  423ba0:	b.le	423eb0 <_obstack_memory_used@@Base+0x53c0>
  423ba4:	stp	x19, x20, [sp, #16]
  423ba8:	mov	x20, x2
  423bac:	mov	x19, #0x0                   	// #0
  423bb0:	stp	x23, x24, [sp, #48]
  423bb4:	mov	x23, x1
  423bb8:	mov	x24, x3
  423bbc:	nop
  423bc0:	ldr	x5, [x21, #16]
  423bc4:	ldr	x4, [x5, x19, lsl #3]
  423bc8:	cmp	x23, x4
  423bcc:	b.eq	423d10 <_obstack_memory_used@@Base+0x5220>  // b.none
  423bd0:	ldr	x0, [x22]
  423bd4:	add	x0, x0, x4, lsl #4
  423bd8:	ldrb	w0, [x0, #8]
  423bdc:	tbz	w0, #3, 423d10 <_obstack_memory_used@@Base+0x5220>
  423be0:	add	x4, x4, x4, lsl #1
  423be4:	mov	x1, #0xffffffffffffffff    	// #-1
  423be8:	ldr	x0, [x22, #40]
  423bec:	lsl	x6, x4, #3
  423bf0:	add	x0, x0, x6
  423bf4:	ldp	x2, x4, [x0, #8]
  423bf8:	cmp	x2, #0x1
  423bfc:	b.le	423c04 <_obstack_memory_used@@Base+0x5114>
  423c00:	ldr	x1, [x4, #8]
  423c04:	sub	x2, x8, #0x1
  423c08:	mov	x0, x2
  423c0c:	mov	x3, #0x0                   	// #0
  423c10:	ldr	x9, [x4]
  423c14:	b	423c2c <_obstack_memory_used@@Base+0x513c>
  423c18:	lsr	x4, x4, #1
  423c1c:	ldr	x7, [x5, x4, lsl #3]
  423c20:	cmp	x9, x7
  423c24:	b.gt	423dfc <_obstack_memory_used@@Base+0x530c>
  423c28:	mov	x0, x4
  423c2c:	add	x4, x0, x3
  423c30:	cmp	x0, x3
  423c34:	b.hi	423c18 <_obstack_memory_used@@Base+0x5128>  // b.pmore
  423c38:	ldr	x0, [x5, x3, lsl #3]
  423c3c:	cmp	x9, x0
  423c40:	b.eq	423c8c <_obstack_memory_used@@Base+0x519c>  // b.none
  423c44:	ldr	x7, [x20, #8]
  423c48:	cmp	x7, #0x0
  423c4c:	b.le	423c8c <_obstack_memory_used@@Base+0x519c>
  423c50:	sub	x7, x7, #0x1
  423c54:	mov	x0, #0x0                   	// #0
  423c58:	ldr	x10, [x20, #16]
  423c5c:	b	423c74 <_obstack_memory_used@@Base+0x5184>
  423c60:	lsr	x4, x4, #1
  423c64:	ldr	x3, [x10, x4, lsl #3]
  423c68:	cmp	x9, x3
  423c6c:	b.gt	423e74 <_obstack_memory_used@@Base+0x5384>
  423c70:	mov	x7, x4
  423c74:	add	x4, x7, x0
  423c78:	cmp	x7, x0
  423c7c:	b.hi	423c60 <_obstack_memory_used@@Base+0x5170>  // b.pmore
  423c80:	ldr	x0, [x10, x0, lsl #3]
  423c84:	cmp	x9, x0
  423c88:	b.eq	423e50 <_obstack_memory_used@@Base+0x5360>  // b.none
  423c8c:	cmp	x1, #0x0
  423c90:	mov	x0, #0x0                   	// #0
  423c94:	b.gt	423cb0 <_obstack_memory_used@@Base+0x51c0>
  423c98:	b	423d10 <_obstack_memory_used@@Base+0x5220>
  423c9c:	lsr	x4, x4, #1
  423ca0:	ldr	x3, [x5, x4, lsl #3]
  423ca4:	cmp	x3, x1
  423ca8:	b.lt	423e7c <_obstack_memory_used@@Base+0x538c>  // b.tstop
  423cac:	mov	x2, x4
  423cb0:	add	x4, x2, x0
  423cb4:	cmp	x2, x0
  423cb8:	b.hi	423c9c <_obstack_memory_used@@Base+0x51ac>  // b.pmore
  423cbc:	ldr	x0, [x5, x0, lsl #3]
  423cc0:	cmp	x0, x1
  423cc4:	b.eq	423d10 <_obstack_memory_used@@Base+0x5220>  // b.none
  423cc8:	ldr	x2, [x20, #8]
  423ccc:	cmp	x2, #0x0
  423cd0:	b.le	423d10 <_obstack_memory_used@@Base+0x5220>
  423cd4:	sub	x2, x2, #0x1
  423cd8:	mov	x0, #0x0                   	// #0
  423cdc:	ldr	x5, [x20, #16]
  423ce0:	b	423cf8 <_obstack_memory_used@@Base+0x5208>
  423ce4:	lsr	x4, x4, #1
  423ce8:	ldr	x3, [x5, x4, lsl #3]
  423cec:	cmp	x3, x1
  423cf0:	b.lt	423e84 <_obstack_memory_used@@Base+0x5394>  // b.tstop
  423cf4:	mov	x2, x4
  423cf8:	add	x4, x2, x0
  423cfc:	cmp	x2, x0
  423d00:	b.hi	423ce4 <_obstack_memory_used@@Base+0x51f4>  // b.pmore
  423d04:	ldr	x0, [x5, x0, lsl #3]
  423d08:	cmp	x0, x1
  423d0c:	b.eq	423e50 <_obstack_memory_used@@Base+0x5360>  // b.none
  423d10:	add	x19, x19, #0x1
  423d14:	cmp	x19, x8
  423d18:	b.lt	423bc0 <_obstack_memory_used@@Base+0x50d0>  // b.tstop
  423d1c:	cmp	x8, #0x0
  423d20:	ldr	x0, [sp, #104]
  423d24:	b.le	423dd0 <_obstack_memory_used@@Base+0x52e0>
  423d28:	ldr	x11, [x21, #16]
  423d2c:	mov	x7, #0x0                   	// #0
  423d30:	ldr	x3, [sp, #96]
  423d34:	ldr	x4, [x11, x7, lsl #3]
  423d38:	cmp	x3, #0x0
  423d3c:	b.le	423d78 <_obstack_memory_used@@Base+0x5288>
  423d40:	sub	x3, x3, #0x1
  423d44:	mov	x2, #0x0                   	// #0
  423d48:	b	423d60 <_obstack_memory_used@@Base+0x5270>
  423d4c:	lsr	x1, x1, #1
  423d50:	ldr	x5, [x0, x1, lsl #3]
  423d54:	cmp	x4, x5
  423d58:	b.gt	423df4 <_obstack_memory_used@@Base+0x5304>
  423d5c:	mov	x3, x1
  423d60:	add	x1, x3, x2
  423d64:	cmp	x3, x2
  423d68:	b.hi	423d4c <_obstack_memory_used@@Base+0x525c>  // b.pmore
  423d6c:	ldr	x1, [x0, x2, lsl #3]
  423d70:	cmp	x4, x1
  423d74:	b.eq	423dc4 <_obstack_memory_used@@Base+0x52d4>  // b.none
  423d78:	ldr	x9, [x20, #8]
  423d7c:	cmp	x9, #0x0
  423d80:	b.le	423dc4 <_obstack_memory_used@@Base+0x52d4>
  423d84:	sub	x10, x9, #0x1
  423d88:	mov	x3, #0x0                   	// #0
  423d8c:	mov	x2, x10
  423d90:	ldr	x5, [x20, #16]
  423d94:	b	423dac <_obstack_memory_used@@Base+0x52bc>
  423d98:	lsr	x1, x1, #1
  423d9c:	ldr	x6, [x5, x1, lsl #3]
  423da0:	cmp	x4, x6
  423da4:	b.gt	423e48 <_obstack_memory_used@@Base+0x5358>
  423da8:	mov	x2, x1
  423dac:	add	x1, x2, x3
  423db0:	cmp	x2, x3
  423db4:	b.hi	423d98 <_obstack_memory_used@@Base+0x52a8>  // b.pmore
  423db8:	ldr	x1, [x5, x3, lsl #3]
  423dbc:	cmp	x4, x1
  423dc0:	b.eq	423e04 <_obstack_memory_used@@Base+0x5314>  // b.none
  423dc4:	add	x7, x7, #0x1
  423dc8:	cmp	x7, x8
  423dcc:	b.lt	423d30 <_obstack_memory_used@@Base+0x5240>  // b.tstop
  423dd0:	ldp	x19, x20, [sp, #16]
  423dd4:	ldp	x23, x24, [sp, #48]
  423dd8:	bl	4026b0 <free@plt>
  423ddc:	mov	w25, #0x0                   	// #0
  423de0:	mov	w0, w25
  423de4:	ldp	x21, x22, [sp, #32]
  423de8:	ldr	x25, [sp, #64]
  423dec:	ldp	x29, x30, [sp], #112
  423df0:	ret
  423df4:	add	x2, x1, #0x1
  423df8:	b	423d60 <_obstack_memory_used@@Base+0x5270>
  423dfc:	add	x3, x4, #0x1
  423e00:	b	423c2c <_obstack_memory_used@@Base+0x513c>
  423e04:	cmp	x3, #0x0
  423e08:	mov	x1, x3
  423e0c:	ccmp	x3, x9, #0x0, ge  // ge = tcont
  423e10:	b.ge	423dc4 <_obstack_memory_used@@Base+0x52d4>  // b.tcont
  423e14:	str	x10, [x20, #8]
  423e18:	cmp	x3, x10
  423e1c:	add	x3, x5, #0x8
  423e20:	b.ge	423e40 <_obstack_memory_used@@Base+0x5350>  // b.tcont
  423e24:	nop
  423e28:	ldr	x2, [x3, x1, lsl #3]
  423e2c:	str	x2, [x5, x1, lsl #3]
  423e30:	add	x1, x1, #0x1
  423e34:	ldr	x2, [x20, #8]
  423e38:	cmp	x1, x2
  423e3c:	b.lt	423e28 <_obstack_memory_used@@Base+0x5338>  // b.tstop
  423e40:	ldr	x8, [x21, #8]
  423e44:	b	423dc4 <_obstack_memory_used@@Base+0x52d4>
  423e48:	add	x3, x1, #0x1
  423e4c:	b	423dac <_obstack_memory_used@@Base+0x52bc>
  423e50:	ldr	x2, [x22, #56]
  423e54:	mov	x1, x24
  423e58:	add	x0, sp, #0x58
  423e5c:	add	x2, x2, x6
  423e60:	bl	4201b8 <_obstack_memory_used@@Base+0x16c8>
  423e64:	mov	w25, w0
  423e68:	cbnz	w0, 423e8c <_obstack_memory_used@@Base+0x539c>
  423e6c:	ldr	x8, [x21, #8]
  423e70:	b	423d10 <_obstack_memory_used@@Base+0x5220>
  423e74:	add	x0, x4, #0x1
  423e78:	b	423c74 <_obstack_memory_used@@Base+0x5184>
  423e7c:	add	x0, x4, #0x1
  423e80:	b	423cb0 <_obstack_memory_used@@Base+0x51c0>
  423e84:	add	x0, x4, #0x1
  423e88:	b	423cf8 <_obstack_memory_used@@Base+0x5208>
  423e8c:	ldr	x0, [sp, #104]
  423e90:	bl	4026b0 <free@plt>
  423e94:	mov	w0, w25
  423e98:	ldp	x19, x20, [sp, #16]
  423e9c:	ldp	x21, x22, [sp, #32]
  423ea0:	ldp	x23, x24, [sp, #48]
  423ea4:	ldr	x25, [sp, #64]
  423ea8:	ldp	x29, x30, [sp], #112
  423eac:	ret
  423eb0:	mov	x0, #0x0                   	// #0
  423eb4:	b	423dd8 <_obstack_memory_used@@Base+0x52e8>
  423eb8:	stp	x29, x30, [sp, #-192]!
  423ebc:	adrp	x5, 432000 <_obstack_memory_used@@Base+0x13510>
  423ec0:	tst	w4, #0xff
  423ec4:	mov	x29, sp
  423ec8:	ldr	q0, [x5, #2176]
  423ecc:	stp	x19, x20, [sp, #16]
  423ed0:	mov	x20, x2
  423ed4:	ldr	x0, [x0]
  423ed8:	stp	x21, x22, [sp, #32]
  423edc:	mov	x19, x3
  423ee0:	stp	x23, x24, [sp, #48]
  423ee4:	mov	x22, x1
  423ee8:	stp	x25, x26, [sp, #64]
  423eec:	stp	x27, x28, [sp, #80]
  423ef0:	str	x0, [x29, #136]
  423ef4:	str	xzr, [x29, #160]
  423ef8:	str	q0, [x29, #144]
  423efc:	b.eq	4246a4 <_obstack_memory_used@@Base+0x5bb4>  // b.none
  423f00:	mov	x0, #0x60                  	// #96
  423f04:	bl	402440 <malloc@plt>
  423f08:	str	x0, [x29, #160]
  423f0c:	add	x26, x29, #0x90
  423f10:	cbz	x0, 42473c <_obstack_memory_used@@Base+0x5c4c>
  423f14:	ldr	x1, [x29, #136]
  423f18:	lsl	x0, x20, #4
  423f1c:	str	x0, [x29, #128]
  423f20:	cmp	x0, #0xfbf
  423f24:	stp	xzr, xzr, [x29, #168]
  423f28:	str	xzr, [x29, #184]
  423f2c:	ldr	x21, [x1, #144]
  423f30:	b.hi	4246c8 <_obstack_memory_used@@Base+0x5bd8>  // b.pmore
  423f34:	sub	sp, sp, x0
  423f38:	str	wzr, [x29, #116]
  423f3c:	mov	x0, sp
  423f40:	str	x0, [x29, #120]
  423f44:	ldp	x0, x2, [x29, #120]
  423f48:	mov	x1, x19
  423f4c:	bl	4022a0 <memcpy@plt>
  423f50:	ldr	x25, [x19]
  423f54:	nop
  423f58:	ldr	x0, [x19, #8]
  423f5c:	cmp	x0, x25
  423f60:	b.lt	4240a8 <_obstack_memory_used@@Base+0x55b8>  // b.tstop
  423f64:	ldr	x1, [x29, #136]
  423f68:	lsl	x24, x21, #4
  423f6c:	mov	x23, x21
  423f70:	ldr	x2, [x1]
  423f74:	add	x7, x2, x24
  423f78:	ldrb	w1, [x7, #8]
  423f7c:	cmp	w1, #0x8
  423f80:	b.eq	424160 <_obstack_memory_used@@Base+0x5670>  // b.none
  423f84:	cmp	w1, #0x9
  423f88:	b.eq	42424c <_obstack_memory_used@@Base+0x575c>  // b.none
  423f8c:	cmp	x0, x25
  423f90:	b.ne	423fa0 <_obstack_memory_used@@Base+0x54b0>  // b.any
  423f94:	ldr	x0, [x22, #176]
  423f98:	cmp	x0, x21
  423f9c:	b.eq	424428 <_obstack_memory_used@@Base+0x5938>  // b.none
  423fa0:	ldr	x27, [x22, #152]
  423fa4:	ldr	x0, [x27]
  423fa8:	add	x1, x0, x24
  423fac:	ldrb	w2, [x1, #8]
  423fb0:	tbnz	w2, #3, 42418c <_obstack_memory_used@@Base+0x569c>
  423fb4:	ldrb	w7, [x1, #10]
  423fb8:	tbnz	w7, #4, 424294 <_obstack_memory_used@@Base+0x57a4>
  423fbc:	cmp	w2, #0x4
  423fc0:	b.eq	4242d0 <_obstack_memory_used@@Base+0x57e0>  // b.none
  423fc4:	mov	x2, x25
  423fc8:	mov	x0, x22
  423fcc:	bl	420468 <_obstack_memory_used@@Base+0x1978>
  423fd0:	tst	w0, #0xff
  423fd4:	b.eq	424134 <_obstack_memory_used@@Base+0x5644>  // b.none
  423fd8:	ldr	x0, [x27, #24]
  423fdc:	add	x25, x25, #0x1
  423fe0:	ldr	x21, [x0, x23, lsl #3]
  423fe4:	cbz	x26, 424124 <_obstack_memory_used@@Base+0x5634>
  423fe8:	ldr	x0, [x22, #168]
  423fec:	cmp	x25, x0
  423ff0:	b.gt	424048 <_obstack_memory_used@@Base+0x5558>
  423ff4:	ldr	x0, [x22, #184]
  423ff8:	ldr	x0, [x0, x25, lsl #3]
  423ffc:	cbz	x0, 424048 <_obstack_memory_used@@Base+0x5558>
  424000:	ldr	x1, [x0, #16]
  424004:	cmp	x1, #0x0
  424008:	b.le	424048 <_obstack_memory_used@@Base+0x5558>
  42400c:	sub	x1, x1, #0x1
  424010:	mov	x2, #0x0                   	// #0
  424014:	ldr	x8, [x0, #24]
  424018:	b	424030 <_obstack_memory_used@@Base+0x5540>
  42401c:	lsr	x0, x0, #1
  424020:	ldr	x7, [x8, x0, lsl #3]
  424024:	cmp	x21, x7
  424028:	b.gt	424158 <_obstack_memory_used@@Base+0x5668>
  42402c:	mov	x1, x0
  424030:	add	x0, x1, x2
  424034:	cmp	x1, x2
  424038:	b.hi	42401c <_obstack_memory_used@@Base+0x552c>  // b.pmore
  42403c:	ldr	x0, [x8, x2, lsl #3]
  424040:	cmp	x21, x0
  424044:	b.eq	424124 <_obstack_memory_used@@Base+0x5634>  // b.none
  424048:	ldr	x4, [x26]
  42404c:	mov	x0, x19
  424050:	ldr	x1, [x26, #16]
  424054:	sub	x4, x4, #0x1
  424058:	str	x4, [x26]
  42405c:	add	x4, x4, x4, lsl #1
  424060:	ldr	x2, [x29, #128]
  424064:	lsl	x4, x4, #4
  424068:	add	x23, x1, x4
  42406c:	ldr	x25, [x1, x4]
  424070:	ldr	x1, [x23, #16]
  424074:	bl	4022a0 <memcpy@plt>
  424078:	ldr	x0, [x29, #184]
  42407c:	bl	4026b0 <free@plt>
  424080:	ldr	x0, [x23, #16]
  424084:	bl	4026b0 <free@plt>
  424088:	ldp	x0, x1, [x23, #24]
  42408c:	stp	x0, x1, [x29, #168]
  424090:	ldr	x0, [x23, #40]
  424094:	str	x0, [x29, #184]
  424098:	ldr	x0, [x19, #8]
  42409c:	ldr	x21, [x23, #8]
  4240a0:	cmp	x0, x25
  4240a4:	b.ge	423f64 <_obstack_memory_used@@Base+0x5474>  // b.tcont
  4240a8:	ldr	x0, [x29, #184]
  4240ac:	bl	4026b0 <free@plt>
  4240b0:	ldr	w0, [x29, #116]
  4240b4:	cbnz	w0, 424640 <_obstack_memory_used@@Base+0x5b50>
  4240b8:	cbz	x26, 424660 <_obstack_memory_used@@Base+0x5b70>
  4240bc:	ldr	x20, [x26]
  4240c0:	ldr	x21, [x26, #16]
  4240c4:	cmp	x20, #0x0
  4240c8:	b.le	4240f4 <_obstack_memory_used@@Base+0x5604>
  4240cc:	add	x20, x20, x20, lsl #1
  4240d0:	mov	x19, x21
  4240d4:	add	x20, x21, x20, lsl #4
  4240d8:	ldr	x0, [x19, #40]
  4240dc:	add	x19, x19, #0x30
  4240e0:	bl	4026b0 <free@plt>
  4240e4:	ldur	x0, [x19, #-32]
  4240e8:	bl	4026b0 <free@plt>
  4240ec:	cmp	x20, x19
  4240f0:	b.ne	4240d8 <_obstack_memory_used@@Base+0x55e8>  // b.any
  4240f4:	mov	x0, x21
  4240f8:	mov	w19, #0x0                   	// #0
  4240fc:	bl	4026b0 <free@plt>
  424100:	mov	sp, x29
  424104:	mov	w0, w19
  424108:	ldp	x19, x20, [sp, #16]
  42410c:	ldp	x21, x22, [sp, #32]
  424110:	ldp	x23, x24, [sp, #48]
  424114:	ldp	x25, x26, [sp, #64]
  424118:	ldp	x27, x28, [sp, #80]
  42411c:	ldp	x29, x30, [sp], #192
  424120:	ret
  424124:	str	xzr, [x29, #176]
  424128:	tbz	x21, #63, 423f58 <_obstack_memory_used@@Base+0x5468>
  42412c:	cmn	x21, #0x2
  424130:	b.eq	42459c <_obstack_memory_used@@Base+0x5aac>  // b.none
  424134:	cbnz	x26, 424048 <_obstack_memory_used@@Base+0x5558>
  424138:	ldr	x0, [x29, #184]
  42413c:	mov	w19, #0x1                   	// #1
  424140:	bl	4026b0 <free@plt>
  424144:	ldr	w0, [x29, #116]
  424148:	cbz	w0, 424100 <_obstack_memory_used@@Base+0x5610>
  42414c:	ldr	x0, [x29, #120]
  424150:	bl	4026b0 <free@plt>
  424154:	b	424100 <_obstack_memory_used@@Base+0x5610>
  424158:	add	x2, x0, #0x1
  42415c:	b	424030 <_obstack_memory_used@@Base+0x5540>
  424160:	ldr	x1, [x2, x24]
  424164:	add	x1, x1, #0x1
  424168:	cmp	x20, x1
  42416c:	b.le	423f8c <_obstack_memory_used@@Base+0x549c>
  424170:	lsl	x1, x1, #4
  424174:	add	x0, x19, x1
  424178:	str	x25, [x19, x1]
  42417c:	mov	x1, #0xffffffffffffffff    	// #-1
  424180:	str	x1, [x0, #8]
  424184:	ldr	x0, [x19, #8]
  424188:	b	423f8c <_obstack_memory_used@@Base+0x549c>
  42418c:	ldr	x0, [x27, #40]
  424190:	add	x24, x21, x21, lsl #1
  424194:	ldr	x2, [x22, #184]
  424198:	mov	x1, x21
  42419c:	add	x24, x0, x24, lsl #3
  4241a0:	add	x0, x29, #0xa8
  4241a4:	ldr	x23, [x2, x25, lsl #3]
  4241a8:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  4241ac:	tst	w0, #0xff
  4241b0:	b.eq	42459c <_obstack_memory_used@@Base+0x5aac>  // b.none
  4241b4:	ldr	x10, [x24, #8]
  4241b8:	cmp	x10, #0x0
  4241bc:	b.le	424134 <_obstack_memory_used@@Base+0x5644>
  4241c0:	ldr	x11, [x23, #16]
  4241c4:	mov	x21, #0xffffffffffffffff    	// #-1
  4241c8:	ldr	x13, [x24, #16]
  4241cc:	add	x12, x11, x21
  4241d0:	mov	x2, #0x0                   	// #0
  4241d4:	nop
  4241d8:	cmp	x11, #0x0
  4241dc:	b.le	424220 <_obstack_memory_used@@Base+0x5730>
  4241e0:	mov	x7, x12
  4241e4:	mov	x1, #0x0                   	// #0
  4241e8:	ldr	x28, [x13, x2, lsl #3]
  4241ec:	ldr	x8, [x23, #24]
  4241f0:	b	424208 <_obstack_memory_used@@Base+0x5718>
  4241f4:	lsr	x0, x0, #1
  4241f8:	ldr	x9, [x8, x0, lsl #3]
  4241fc:	cmp	x28, x9
  424200:	b.gt	424234 <_obstack_memory_used@@Base+0x5744>
  424204:	mov	x7, x0
  424208:	add	x0, x7, x1
  42420c:	cmp	x7, x1
  424210:	b.hi	4241f4 <_obstack_memory_used@@Base+0x5704>  // b.pmore
  424214:	ldr	x0, [x8, x1, lsl #3]
  424218:	cmp	x28, x0
  42421c:	b.eq	42423c <_obstack_memory_used@@Base+0x574c>  // b.none
  424220:	add	x2, x2, #0x1
  424224:	cmp	x2, x10
  424228:	b.ne	4241d8 <_obstack_memory_used@@Base+0x56e8>  // b.any
  42422c:	tbz	x21, #63, 423f58 <_obstack_memory_used@@Base+0x5468>
  424230:	b	42412c <_obstack_memory_used@@Base+0x563c>
  424234:	add	x1, x0, #0x1
  424238:	b	424208 <_obstack_memory_used@@Base+0x5718>
  42423c:	cmn	x21, #0x1
  424240:	b.ne	424344 <_obstack_memory_used@@Base+0x5854>  // b.any
  424244:	mov	x21, x28
  424248:	b	424220 <_obstack_memory_used@@Base+0x5730>
  42424c:	ldr	x1, [x7]
  424250:	add	x1, x1, #0x1
  424254:	cmp	x20, x1
  424258:	b.le	423f8c <_obstack_memory_used@@Base+0x549c>
  42425c:	lsl	x1, x1, #4
  424260:	add	x2, x19, x1
  424264:	ldr	x0, [x19, x1]
  424268:	cmp	x0, x25
  42426c:	b.lt	424604 <_obstack_memory_used@@Base+0x5b14>  // b.tstop
  424270:	ldrb	w0, [x7, #10]
  424274:	tbz	w0, #3, 424288 <_obstack_memory_used@@Base+0x5798>
  424278:	ldr	x3, [x29, #120]
  42427c:	ldr	x0, [x3, x1]
  424280:	cmn	x0, #0x1
  424284:	b.ne	424628 <_obstack_memory_used@@Base+0x5b38>  // b.any
  424288:	str	x25, [x2, #8]
  42428c:	ldr	x0, [x19, #8]
  424290:	b	423f8c <_obstack_memory_used@@Base+0x549c>
  424294:	mov	x4, x25
  424298:	mov	x3, x22
  42429c:	mov	x2, x21
  4242a0:	add	x1, x27, #0xd8
  4242a4:	bl	422920 <_obstack_memory_used@@Base+0x3e30>
  4242a8:	sxtw	x28, w0
  4242ac:	cbnz	w0, 4242c0 <_obstack_memory_used@@Base+0x57d0>
  4242b0:	ldr	x1, [x27]
  4242b4:	add	x1, x1, x24
  4242b8:	b	423fc4 <_obstack_memory_used@@Base+0x54d4>
  4242bc:	cbz	x28, 42451c <_obstack_memory_used@@Base+0x5a2c>
  4242c0:	ldr	x0, [x27, #24]
  4242c4:	add	x25, x25, x28
  4242c8:	ldr	x21, [x0, x21, lsl #3]
  4242cc:	b	423fe4 <_obstack_memory_used@@Base+0x54f4>
  4242d0:	ldr	x0, [x1]
  4242d4:	add	x0, x0, #0x1
  4242d8:	cmp	x20, x0
  4242dc:	b.le	424518 <_obstack_memory_used@@Base+0x5a28>
  4242e0:	lsl	x0, x0, #4
  4242e4:	add	x1, x19, x0
  4242e8:	ldr	x0, [x19, x0]
  4242ec:	ldr	x1, [x1, #8]
  4242f0:	sub	x28, x1, x0
  4242f4:	cbz	x26, 4242bc <_obstack_memory_used@@Base+0x57cc>
  4242f8:	cmn	x0, #0x1
  4242fc:	b.eq	424048 <_obstack_memory_used@@Base+0x5558>  // b.none
  424300:	cmn	x1, #0x1
  424304:	b.eq	424048 <_obstack_memory_used@@Base+0x5558>  // b.none
  424308:	cbz	x28, 42451c <_obstack_memory_used@@Base+0x5a2c>
  42430c:	ldr	x2, [x22, #48]
  424310:	ldr	x1, [x22, #8]
  424314:	sub	x2, x2, x25
  424318:	cmp	x28, x2
  42431c:	b.gt	424048 <_obstack_memory_used@@Base+0x5558>
  424320:	add	x0, x1, x0
  424324:	mov	x2, x28
  424328:	add	x1, x1, x25
  42432c:	bl	402660 <memcmp@plt>
  424330:	cbnz	w0, 424048 <_obstack_memory_used@@Base+0x5558>
  424334:	ldr	x0, [x27, #24]
  424338:	add	x25, x25, x28
  42433c:	ldr	x21, [x0, x21, lsl #3]
  424340:	b	423fe4 <_obstack_memory_used@@Base+0x54f4>
  424344:	ldr	x23, [x29, #176]
  424348:	cmp	x23, #0x0
  42434c:	b.le	42438c <_obstack_memory_used@@Base+0x589c>
  424350:	sub	x1, x23, #0x1
  424354:	mov	x2, #0x0                   	// #0
  424358:	ldr	x8, [x29, #184]
  42435c:	b	424374 <_obstack_memory_used@@Base+0x5884>
  424360:	lsr	x0, x0, #1
  424364:	ldr	x7, [x8, x0, lsl #3]
  424368:	cmp	x7, x21
  42436c:	b.lt	4244a8 <_obstack_memory_used@@Base+0x59b8>  // b.tstop
  424370:	mov	x1, x0
  424374:	add	x0, x1, x2
  424378:	cmp	x1, x2
  42437c:	b.hi	424360 <_obstack_memory_used@@Base+0x5870>  // b.pmore
  424380:	ldr	x0, [x8, x2, lsl #3]
  424384:	cmp	x0, x21
  424388:	b.eq	42441c <_obstack_memory_used@@Base+0x592c>  // b.none
  42438c:	cbz	x26, 424128 <_obstack_memory_used@@Base+0x5638>
  424390:	ldp	x24, x0, [x26]
  424394:	ldr	x27, [x26, #16]
  424398:	add	x1, x24, #0x1
  42439c:	str	x1, [x26]
  4243a0:	str	x1, [x29, #104]
  4243a4:	cmp	x1, x0
  4243a8:	b.eq	424678 <_obstack_memory_used@@Base+0x5b88>  // b.none
  4243ac:	add	x24, x24, x24, lsl #1
  4243b0:	ldr	x0, [x29, #128]
  4243b4:	lsl	x1, x24, #4
  4243b8:	add	x24, x27, x1
  4243bc:	str	x25, [x27, x1]
  4243c0:	str	x28, [x24, #8]
  4243c4:	bl	402440 <malloc@plt>
  4243c8:	str	x0, [x24, #16]
  4243cc:	cbz	x0, 42471c <_obstack_memory_used@@Base+0x5c2c>
  4243d0:	ldr	x2, [x29, #128]
  4243d4:	add	x28, x24, #0x18
  4243d8:	mov	x1, x19
  4243dc:	bl	4022a0 <memcpy@plt>
  4243e0:	str	x23, [x28, #8]
  4243e4:	cmp	x23, #0x0
  4243e8:	b.le	424668 <_obstack_memory_used@@Base+0x5b78>
  4243ec:	lsl	x2, x23, #3
  4243f0:	str	x23, [x24, #24]
  4243f4:	mov	x0, x2
  4243f8:	str	x2, [x29, #96]
  4243fc:	bl	402440 <malloc@plt>
  424400:	str	x0, [x28, #16]
  424404:	ldr	x2, [x29, #96]
  424408:	cbz	x0, 424718 <_obstack_memory_used@@Base+0x5c28>
  42440c:	ldr	x1, [x29, #184]
  424410:	bl	4022a0 <memcpy@plt>
  424414:	tbz	x21, #63, 423f58 <_obstack_memory_used@@Base+0x5468>
  424418:	b	42412c <_obstack_memory_used@@Base+0x563c>
  42441c:	mov	x21, x28
  424420:	tbz	x21, #63, 423f58 <_obstack_memory_used@@Base+0x5468>
  424424:	b	42412c <_obstack_memory_used@@Base+0x563c>
  424428:	cbz	x26, 424650 <_obstack_memory_used@@Base+0x5b60>
  42442c:	mov	x0, x19
  424430:	mov	x1, #0x0                   	// #0
  424434:	nop
  424438:	ldr	x2, [x0]
  42443c:	tbnz	x2, #63, 42444c <_obstack_memory_used@@Base+0x595c>
  424440:	ldr	x2, [x0, #8]
  424444:	cmn	x2, #0x1
  424448:	b.eq	4244b0 <_obstack_memory_used@@Base+0x59c0>  // b.none
  42444c:	add	x1, x1, #0x1
  424450:	add	x0, x0, #0x10
  424454:	cmp	x20, x1
  424458:	b.ne	424438 <_obstack_memory_used@@Base+0x5948>  // b.any
  42445c:	ldr	x23, [x26]
  424460:	ldr	x0, [x29, #184]
  424464:	bl	4026b0 <free@plt>
  424468:	ldr	w0, [x29, #116]
  42446c:	cbnz	w0, 424744 <_obstack_memory_used@@Base+0x5c54>
  424470:	cmp	x23, #0x0
  424474:	ldr	x21, [x26, #16]
  424478:	b.le	4240f4 <_obstack_memory_used@@Base+0x5604>
  42447c:	add	x0, x23, x23, lsl #1
  424480:	mov	x20, x21
  424484:	add	x19, x21, x0, lsl #4
  424488:	ldr	x0, [x20, #40]
  42448c:	add	x20, x20, #0x30
  424490:	bl	4026b0 <free@plt>
  424494:	ldur	x0, [x20, #-32]
  424498:	bl	4026b0 <free@plt>
  42449c:	cmp	x19, x20
  4244a0:	b.ne	424488 <_obstack_memory_used@@Base+0x5998>  // b.any
  4244a4:	b	4240f4 <_obstack_memory_used@@Base+0x5604>
  4244a8:	add	x2, x0, #0x1
  4244ac:	b	424374 <_obstack_memory_used@@Base+0x5884>
  4244b0:	cmp	x20, x1
  4244b4:	ldr	x23, [x26]
  4244b8:	b.eq	424460 <_obstack_memory_used@@Base+0x5970>  // b.none
  4244bc:	sub	x0, x23, #0x1
  4244c0:	str	x0, [x26]
  4244c4:	ldr	x4, [x26, #16]
  4244c8:	add	x1, x0, x0, lsl #1
  4244cc:	ldr	x2, [x29, #128]
  4244d0:	lsl	x1, x1, #4
  4244d4:	add	x24, x4, x1
  4244d8:	mov	x0, x19
  4244dc:	ldr	x25, [x4, x1]
  4244e0:	ldr	x1, [x24, #16]
  4244e4:	bl	4022a0 <memcpy@plt>
  4244e8:	ldr	x0, [x29, #184]
  4244ec:	bl	4026b0 <free@plt>
  4244f0:	ldr	x0, [x24, #16]
  4244f4:	bl	4026b0 <free@plt>
  4244f8:	ldr	x21, [x24, #8]
  4244fc:	ldp	x8, x9, [x24, #24]
  424500:	mov	x23, x21
  424504:	ldr	x0, [x24, #40]
  424508:	lsl	x24, x21, #4
  42450c:	stp	x8, x9, [x29, #168]
  424510:	str	x0, [x29, #184]
  424514:	b	423fa0 <_obstack_memory_used@@Base+0x54b0>
  424518:	cbnz	x26, 424048 <_obstack_memory_used@@Base+0x5558>
  42451c:	mov	x1, x21
  424520:	add	x0, x29, #0xa8
  424524:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  424528:	tst	w0, #0xff
  42452c:	b.eq	42459c <_obstack_memory_used@@Base+0x5aac>  // b.none
  424530:	ldr	x0, [x22, #184]
  424534:	ldr	x0, [x0, x25, lsl #3]
  424538:	ldr	x1, [x0, #16]
  42453c:	cmp	x1, #0x0
  424540:	b.le	4242b0 <_obstack_memory_used@@Base+0x57c0>
  424544:	ldr	x7, [x27, #40]
  424548:	add	x5, x21, x21, lsl #1
  42454c:	ldr	x8, [x0, #24]
  424550:	sub	x1, x1, #0x1
  424554:	add	x0, x7, x5, lsl #3
  424558:	mov	x2, #0x0                   	// #0
  42455c:	ldr	x0, [x0, #16]
  424560:	ldr	x7, [x0]
  424564:	b	42457c <_obstack_memory_used@@Base+0x5a8c>
  424568:	lsr	x0, x0, #1
  42456c:	ldr	x5, [x8, x0, lsl #3]
  424570:	cmp	x7, x5
  424574:	b.gt	424620 <_obstack_memory_used@@Base+0x5b30>
  424578:	mov	x1, x0
  42457c:	add	x0, x1, x2
  424580:	cmp	x1, x2
  424584:	b.hi	424568 <_obstack_memory_used@@Base+0x5a78>  // b.pmore
  424588:	ldr	x21, [x8, x2, lsl #3]
  42458c:	cmp	x7, x21
  424590:	b.ne	4242b0 <_obstack_memory_used@@Base+0x57c0>  // b.any
  424594:	tbz	x21, #63, 423f58 <_obstack_memory_used@@Base+0x5468>
  424598:	b	42412c <_obstack_memory_used@@Base+0x563c>
  42459c:	ldr	x0, [x29, #184]
  4245a0:	bl	4026b0 <free@plt>
  4245a4:	ldr	w0, [x29, #116]
  4245a8:	cbnz	w0, 424730 <_obstack_memory_used@@Base+0x5c40>
  4245ac:	cbz	x26, 42473c <_obstack_memory_used@@Base+0x5c4c>
  4245b0:	ldr	x27, [x26, #16]
  4245b4:	ldr	x0, [x26]
  4245b8:	str	x0, [x29, #104]
  4245bc:	ldr	x0, [x29, #104]
  4245c0:	cmp	x0, #0x0
  4245c4:	b.le	4245f4 <_obstack_memory_used@@Base+0x5b04>
  4245c8:	add	x23, x0, x0, lsl #1
  4245cc:	mov	x19, x27
  4245d0:	add	x23, x27, x23, lsl #4
  4245d4:	nop
  4245d8:	ldr	x0, [x19, #40]
  4245dc:	add	x19, x19, #0x30
  4245e0:	bl	4026b0 <free@plt>
  4245e4:	ldur	x0, [x19, #-32]
  4245e8:	bl	4026b0 <free@plt>
  4245ec:	cmp	x23, x19
  4245f0:	b.ne	4245d8 <_obstack_memory_used@@Base+0x5ae8>  // b.any
  4245f4:	mov	x0, x27
  4245f8:	mov	w19, #0xc                   	// #12
  4245fc:	bl	4026b0 <free@plt>
  424600:	b	424100 <_obstack_memory_used@@Base+0x5610>
  424604:	str	x25, [x2, #8]
  424608:	mov	x1, x19
  42460c:	ldr	x0, [x29, #120]
  424610:	ldr	x2, [x29, #128]
  424614:	bl	4022a0 <memcpy@plt>
  424618:	ldr	x0, [x19, #8]
  42461c:	b	423f8c <_obstack_memory_used@@Base+0x549c>
  424620:	add	x2, x0, #0x1
  424624:	b	42457c <_obstack_memory_used@@Base+0x5a8c>
  424628:	ldr	x2, [x29, #128]
  42462c:	mov	x1, x3
  424630:	mov	x0, x19
  424634:	bl	4022a0 <memcpy@plt>
  424638:	ldr	x0, [x19, #8]
  42463c:	b	423f8c <_obstack_memory_used@@Base+0x549c>
  424640:	ldr	x0, [x29, #120]
  424644:	bl	4026b0 <free@plt>
  424648:	cbnz	x26, 4240bc <_obstack_memory_used@@Base+0x55cc>
  42464c:	b	424660 <_obstack_memory_used@@Base+0x5b70>
  424650:	ldr	x0, [x29, #184]
  424654:	bl	4026b0 <free@plt>
  424658:	ldr	w0, [x29, #116]
  42465c:	cbnz	w0, 424750 <_obstack_memory_used@@Base+0x5c60>
  424660:	mov	w19, #0x0                   	// #0
  424664:	b	424100 <_obstack_memory_used@@Base+0x5610>
  424668:	stp	xzr, xzr, [x24, #24]
  42466c:	str	xzr, [x28, #16]
  424670:	tbz	x21, #63, 423f58 <_obstack_memory_used@@Base+0x5468>
  424674:	b	42412c <_obstack_memory_used@@Base+0x563c>
  424678:	lsl	x2, x1, #1
  42467c:	mov	x0, x27
  424680:	add	x1, x2, x1
  424684:	str	x2, [x29, #96]
  424688:	lsl	x1, x1, #5
  42468c:	bl	402550 <realloc@plt>
  424690:	cbz	x0, 42471c <_obstack_memory_used@@Base+0x5c2c>
  424694:	ldr	x2, [x29, #96]
  424698:	mov	x27, x0
  42469c:	stp	x2, x0, [x26, #8]
  4246a0:	b	4243ac <_obstack_memory_used@@Base+0x58bc>
  4246a4:	ldr	x1, [x29, #136]
  4246a8:	lsl	x0, x20, #4
  4246ac:	str	x0, [x29, #128]
  4246b0:	cmp	x0, #0xfbf
  4246b4:	stp	xzr, xzr, [x29, #168]
  4246b8:	mov	x26, #0x0                   	// #0
  4246bc:	str	xzr, [x29, #184]
  4246c0:	ldr	x21, [x1, #144]
  4246c4:	b.ls	423f34 <_obstack_memory_used@@Base+0x5444>  // b.plast
  4246c8:	bl	402440 <malloc@plt>
  4246cc:	str	x0, [x29, #120]
  4246d0:	mov	w1, #0x1                   	// #1
  4246d4:	str	w1, [x29, #116]
  4246d8:	cbnz	x0, 423f44 <_obstack_memory_used@@Base+0x5454>
  4246dc:	cbz	x26, 42473c <_obstack_memory_used@@Base+0x5c4c>
  4246e0:	mov	x20, #0x0                   	// #0
  4246e4:	mov	x21, #0x30                  	// #48
  4246e8:	b	424704 <_obstack_memory_used@@Base+0x5c14>
  4246ec:	madd	x19, x20, x21, x0
  4246f0:	add	x20, x20, #0x1
  4246f4:	ldr	x0, [x19, #40]
  4246f8:	bl	4026b0 <free@plt>
  4246fc:	ldr	x0, [x19, #16]
  424700:	bl	4026b0 <free@plt>
  424704:	ldr	x1, [x26]
  424708:	ldr	x0, [x26, #16]
  42470c:	cmp	x20, x1
  424710:	b.lt	4246ec <_obstack_memory_used@@Base+0x5bfc>  // b.tstop
  424714:	b	4245f8 <_obstack_memory_used@@Base+0x5b08>
  424718:	stp	xzr, xzr, [x24, #24]
  42471c:	ldr	x0, [x29, #184]
  424720:	bl	4026b0 <free@plt>
  424724:	ldr	w0, [x29, #116]
  424728:	cbz	w0, 4245bc <_obstack_memory_used@@Base+0x5acc>
  42472c:	nop
  424730:	ldr	x0, [x29, #120]
  424734:	bl	4026b0 <free@plt>
  424738:	b	4245ac <_obstack_memory_used@@Base+0x5abc>
  42473c:	mov	w19, #0xc                   	// #12
  424740:	b	424100 <_obstack_memory_used@@Base+0x5610>
  424744:	ldr	x0, [x29, #120]
  424748:	bl	4026b0 <free@plt>
  42474c:	b	424470 <_obstack_memory_used@@Base+0x5980>
  424750:	ldr	x0, [x29, #120]
  424754:	mov	w19, #0x0                   	// #0
  424758:	bl	4026b0 <free@plt>
  42475c:	b	424100 <_obstack_memory_used@@Base+0x5610>
  424760:	stp	x29, x30, [sp, #-80]!
  424764:	mov	x29, sp
  424768:	stp	x21, x22, [sp, #32]
  42476c:	mov	x21, x0
  424770:	ldr	x22, [x2, #8]
  424774:	stp	x19, x20, [sp, #16]
  424778:	cbz	x22, 424a58 <_obstack_memory_used@@Base+0x5f68>
  42477c:	stp	x23, x24, [sp, #48]
  424780:	cmp	x22, #0x0
  424784:	mov	x24, x2
  424788:	str	x25, [sp, #64]
  42478c:	mov	x25, x1
  424790:	b.le	424a74 <_obstack_memory_used@@Base+0x5f84>
  424794:	sub	x0, x22, #0x1
  424798:	cmp	x0, #0x2
  42479c:	ldr	x2, [x2, #16]
  4247a0:	b.ls	424a7c <_obstack_memory_used@@Base+0x5f8c>  // b.plast
  4247a4:	lsr	x1, x22, #1
  4247a8:	mov	x0, x2
  4247ac:	movi	v0.4s, #0x0
  4247b0:	add	x1, x2, x1, lsl #4
  4247b4:	nop
  4247b8:	ldr	q1, [x0], #16
  4247bc:	add	v0.2d, v0.2d, v1.2d
  4247c0:	cmp	x1, x0
  4247c4:	b.ne	4247b8 <_obstack_memory_used@@Base+0x5cc8>  // b.any
  4247c8:	addp	d0, v0.2d
  4247cc:	and	x0, x22, #0xfffffffffffffffe
  4247d0:	mov	x20, v0.d[0]
  4247d4:	add	x20, x22, x20
  4247d8:	tbz	w22, #0, 424814 <_obstack_memory_used@@Base+0x5d24>
  4247dc:	ldr	x1, [x2, x0, lsl #3]
  4247e0:	add	x3, x0, #0x1
  4247e4:	cmp	x22, x3
  4247e8:	lsl	x3, x0, #3
  4247ec:	add	x20, x20, x1
  4247f0:	b.le	424814 <_obstack_memory_used@@Base+0x5d24>
  4247f4:	add	x2, x2, x3
  4247f8:	add	x0, x0, #0x2
  4247fc:	cmp	x22, x0
  424800:	ldr	x0, [x2, #8]
  424804:	add	x20, x20, x0
  424808:	b.le	424814 <_obstack_memory_used@@Base+0x5d24>
  42480c:	ldr	x0, [x2, #16]
  424810:	add	x20, x20, x0
  424814:	ldr	x0, [x25, #136]
  424818:	ldr	x1, [x25, #64]
  42481c:	and	x0, x20, x0
  424820:	add	x0, x0, x0, lsl #1
  424824:	lsl	x0, x0, #3
  424828:	add	x2, x1, x0
  42482c:	ldr	x1, [x1, x0]
  424830:	cmp	x1, #0x0
  424834:	b.le	42487c <_obstack_memory_used@@Base+0x5d8c>
  424838:	mov	x4, #0x0                   	// #0
  42483c:	ldr	x2, [x2, #16]
  424840:	b	424850 <_obstack_memory_used@@Base+0x5d60>
  424844:	add	x4, x4, #0x1
  424848:	cmp	x1, x4
  42484c:	b.eq	42487c <_obstack_memory_used@@Base+0x5d8c>  // b.none
  424850:	ldr	x19, [x2, x4, lsl #3]
  424854:	ldr	x0, [x19]
  424858:	cmp	x0, x20
  42485c:	b.ne	424844 <_obstack_memory_used@@Base+0x5d54>  // b.any
  424860:	ldr	x3, [x19, #16]
  424864:	add	x7, x19, #0x8
  424868:	cmp	x22, x3
  42486c:	b.eq	42498c <_obstack_memory_used@@Base+0x5e9c>  // b.none
  424870:	add	x4, x4, #0x1
  424874:	cmp	x1, x4
  424878:	b.ne	424850 <_obstack_memory_used@@Base+0x5d60>  // b.any
  42487c:	mov	x1, #0x1                   	// #1
  424880:	mov	x0, #0x70                  	// #112
  424884:	bl	402520 <calloc@plt>
  424888:	mov	x19, x0
  42488c:	cbz	x0, 424a1c <_obstack_memory_used@@Base+0x5f2c>
  424890:	str	x22, [x0, #16]
  424894:	add	x23, x0, #0x8
  424898:	cmp	x22, #0x0
  42489c:	b.le	4249b0 <_obstack_memory_used@@Base+0x5ec0>
  4248a0:	str	x22, [x0, #8]
  4248a4:	lsl	x22, x22, #3
  4248a8:	mov	x0, x22
  4248ac:	bl	402440 <malloc@plt>
  4248b0:	str	x0, [x23, #16]
  4248b4:	cbz	x0, 424a14 <_obstack_memory_used@@Base+0x5f24>
  4248b8:	ldr	x24, [x24, #16]
  4248bc:	mov	x2, x22
  4248c0:	mov	x1, x24
  4248c4:	bl	4022a0 <memcpy@plt>
  4248c8:	mov	x4, x24
  4248cc:	add	x2, x24, x22
  4248d0:	str	x23, [x19, #80]
  4248d4:	ldr	x7, [x25]
  4248d8:	b	424924 <_obstack_memory_used@@Base+0x5e34>
  4248dc:	ldrb	w3, [x19, #104]
  4248e0:	cmp	w5, #0x2
  4248e4:	ldrb	w6, [x0, #10]
  4248e8:	mov	w1, w3
  4248ec:	ubfx	x3, x3, #5, #1
  4248f0:	ubfx	x6, x6, #4, #1
  4248f4:	orr	w3, w3, w6
  4248f8:	bfi	w1, w3, #5, #1
  4248fc:	strb	w1, [x19, #104]
  424900:	b.eq	424a34 <_obstack_memory_used@@Base+0x5f44>  // b.none
  424904:	cmp	w5, #0x4
  424908:	b.ne	424a40 <_obstack_memory_used@@Base+0x5f50>  // b.any
  42490c:	orr	w1, w1, #0x40
  424910:	strb	w1, [x19, #104]
  424914:	nop
  424918:	add	x4, x4, #0x8
  42491c:	cmp	x2, x4
  424920:	b.eq	4249bc <_obstack_memory_used@@Base+0x5ecc>  // b.none
  424924:	ldr	x0, [x4]
  424928:	add	x0, x7, x0, lsl #4
  42492c:	ldrb	w5, [x0, #8]
  424930:	cmp	w5, #0x1
  424934:	b.ne	4248dc <_obstack_memory_used@@Base+0x5dec>  // b.any
  424938:	ldr	w1, [x0, #8]
  42493c:	tst	w1, #0x3ff00
  424940:	b.eq	424918 <_obstack_memory_used@@Base+0x5e28>  // b.none
  424944:	ldrb	w1, [x0, #10]
  424948:	ldrb	w0, [x19, #104]
  42494c:	ubfx	x1, x1, #4, #1
  424950:	mov	w3, w0
  424954:	ubfx	x0, x0, #5, #1
  424958:	orr	w0, w0, w1
  42495c:	bfi	w3, w0, #5, #1
  424960:	strb	w3, [x19, #104]
  424964:	ldrb	w0, [x19, #104]
  424968:	orr	w0, w0, #0xffffff80
  42496c:	strb	w0, [x19, #104]
  424970:	b	424918 <_obstack_memory_used@@Base+0x5e28>
  424974:	ldr	x6, [x7, #16]
  424978:	ldr	x5, [x24, #16]
  42497c:	ldr	x6, [x6, x3, lsl #3]
  424980:	ldr	x5, [x5, x3, lsl #3]
  424984:	cmp	x6, x5
  424988:	b.ne	424844 <_obstack_memory_used@@Base+0x5d54>  // b.any
  42498c:	subs	x3, x3, #0x1
  424990:	b.pl	424974 <_obstack_memory_used@@Base+0x5e84>  // b.nfrst
  424994:	ldp	x23, x24, [sp, #48]
  424998:	ldr	x25, [sp, #64]
  42499c:	mov	x0, x19
  4249a0:	ldp	x19, x20, [sp, #16]
  4249a4:	ldp	x21, x22, [sp, #32]
  4249a8:	ldp	x29, x30, [sp], #80
  4249ac:	ret
  4249b0:	stp	xzr, xzr, [x0, #8]
  4249b4:	str	xzr, [x23, #16]
  4249b8:	str	x23, [x0, #80]
  4249bc:	mov	x2, x20
  4249c0:	mov	x0, x25
  4249c4:	mov	x1, x19
  4249c8:	bl	41f110 <_obstack_memory_used@@Base+0x620>
  4249cc:	cbz	w0, 424994 <_obstack_memory_used@@Base+0x5ea4>
  4249d0:	ldr	x0, [x19, #48]
  4249d4:	bl	4026b0 <free@plt>
  4249d8:	ldr	x0, [x19, #72]
  4249dc:	bl	4026b0 <free@plt>
  4249e0:	ldr	x0, [x19, #80]
  4249e4:	cmp	x23, x0
  4249e8:	b.eq	4249fc <_obstack_memory_used@@Base+0x5f0c>  // b.none
  4249ec:	ldr	x0, [x0, #16]
  4249f0:	bl	4026b0 <free@plt>
  4249f4:	ldr	x0, [x19, #80]
  4249f8:	bl	4026b0 <free@plt>
  4249fc:	ldr	x0, [x19, #24]
  424a00:	bl	4026b0 <free@plt>
  424a04:	ldr	x0, [x19, #96]
  424a08:	bl	4026b0 <free@plt>
  424a0c:	ldr	x0, [x19, #88]
  424a10:	bl	4026b0 <free@plt>
  424a14:	mov	x0, x19
  424a18:	bl	4026b0 <free@plt>
  424a1c:	mov	w0, #0xc                   	// #12
  424a20:	mov	x19, #0x0                   	// #0
  424a24:	ldp	x23, x24, [sp, #48]
  424a28:	ldr	x25, [sp, #64]
  424a2c:	str	w0, [x21]
  424a30:	b	42499c <_obstack_memory_used@@Base+0x5eac>
  424a34:	orr	w1, w1, #0x10
  424a38:	strb	w1, [x19, #104]
  424a3c:	b	424918 <_obstack_memory_used@@Base+0x5e28>
  424a40:	cmp	w5, #0xc
  424a44:	b.eq	424964 <_obstack_memory_used@@Base+0x5e74>  // b.none
  424a48:	ldr	w0, [x0, #8]
  424a4c:	tst	w0, #0x3ff00
  424a50:	b.eq	424918 <_obstack_memory_used@@Base+0x5e28>  // b.none
  424a54:	b	424964 <_obstack_memory_used@@Base+0x5e74>
  424a58:	str	wzr, [x0]
  424a5c:	mov	x19, #0x0                   	// #0
  424a60:	mov	x0, x19
  424a64:	ldp	x19, x20, [sp, #16]
  424a68:	ldp	x21, x22, [sp, #32]
  424a6c:	ldp	x29, x30, [sp], #80
  424a70:	ret
  424a74:	mov	x20, x22
  424a78:	b	424814 <_obstack_memory_used@@Base+0x5d24>
  424a7c:	mov	x20, x22
  424a80:	mov	x0, #0x0                   	// #0
  424a84:	b	4247dc <_obstack_memory_used@@Base+0x5cec>
  424a88:	stp	x29, x30, [sp, #-176]!
  424a8c:	mov	x29, sp
  424a90:	ldr	x6, [x0, #200]
  424a94:	stp	x19, x20, [sp, #16]
  424a98:	mov	x19, x1
  424a9c:	stp	x21, x22, [sp, #32]
  424aa0:	mov	w21, w4
  424aa4:	mov	x22, #0x0                   	// #0
  424aa8:	stp	x25, x26, [sp, #64]
  424aac:	mov	x25, x0
  424ab0:	mov	x26, x2
  424ab4:	mov	x0, x6
  424ab8:	str	x3, [sp, #112]
  424abc:	b	424ae0 <_obstack_memory_used@@Base+0x5ff0>
  424ac0:	asr	x5, x5, #1
  424ac4:	ldr	x2, [x25, #216]
  424ac8:	add	x1, x5, x5, lsl #2
  424acc:	add	x1, x2, x1, lsl #3
  424ad0:	ldr	x1, [x1, #8]
  424ad4:	cmp	x26, x1
  424ad8:	b.gt	424dd0 <_obstack_memory_used@@Base+0x62e0>
  424adc:	mov	x0, x5
  424ae0:	add	x5, x0, x22
  424ae4:	cmp	x0, x22
  424ae8:	b.gt	424ac0 <_obstack_memory_used@@Base+0x5fd0>
  424aec:	cmp	x6, x22
  424af0:	b.le	424b84 <_obstack_memory_used@@Base+0x6094>
  424af4:	add	x22, x22, x22, lsl #2
  424af8:	stp	x23, x24, [sp, #48]
  424afc:	ldr	x23, [x25, #216]
  424b00:	lsl	x0, x22, #3
  424b04:	str	x0, [sp, #120]
  424b08:	add	x23, x23, x0
  424b0c:	ldr	x0, [x23, #8]
  424b10:	cmp	x26, x0
  424b14:	b.ne	424dd8 <_obstack_memory_used@@Base+0x62e8>  // b.any
  424b18:	stp	x27, x28, [sp, #80]
  424b1c:	ldr	x27, [x25, #152]
  424b20:	ldr	x5, [x19, #8]
  424b24:	cmp	x5, #0x0
  424b28:	b.le	424b70 <_obstack_memory_used@@Base+0x6080>
  424b2c:	sub	x5, x5, #0x1
  424b30:	mov	x1, #0x0                   	// #0
  424b34:	mov	x0, x5
  424b38:	ldr	x2, [x23]
  424b3c:	ldr	x3, [x19, #16]
  424b40:	b	424b58 <_obstack_memory_used@@Base+0x6068>
  424b44:	lsr	x6, x6, #1
  424b48:	ldr	x4, [x3, x6, lsl #3]
  424b4c:	cmp	x2, x4
  424b50:	b.gt	424b9c <_obstack_memory_used@@Base+0x60ac>
  424b54:	mov	x0, x6
  424b58:	add	x6, x0, x1
  424b5c:	cmp	x0, x1
  424b60:	b.hi	424b44 <_obstack_memory_used@@Base+0x6054>  // b.pmore
  424b64:	ldr	x0, [x3, x1, lsl #3]
  424b68:	cmp	x2, x0
  424b6c:	b.eq	424ba4 <_obstack_memory_used@@Base+0x60b4>  // b.none
  424b70:	ldrb	w0, [x23, #32]
  424b74:	add	x23, x23, #0x28
  424b78:	cbnz	w0, 424b20 <_obstack_memory_used@@Base+0x6030>
  424b7c:	ldp	x23, x24, [sp, #48]
  424b80:	ldp	x27, x28, [sp, #80]
  424b84:	mov	w0, #0x0                   	// #0
  424b88:	ldp	x19, x20, [sp, #16]
  424b8c:	ldp	x21, x22, [sp, #32]
  424b90:	ldp	x25, x26, [sp, #64]
  424b94:	ldp	x29, x30, [sp], #176
  424b98:	ret
  424b9c:	add	x1, x6, #0x1
  424ba0:	b	424b58 <_obstack_memory_used@@Base+0x6068>
  424ba4:	ldp	x0, x24, [x23, #16]
  424ba8:	add	x24, x26, x24
  424bac:	sub	x24, x24, x0
  424bb0:	cmp	x26, x24
  424bb4:	b.eq	424cd0 <_obstack_memory_used@@Base+0x61e0>  // b.none
  424bb8:	ldr	x0, [x25, #184]
  424bbc:	lsl	x22, x24, #3
  424bc0:	ldr	x4, [x27, #24]
  424bc4:	add	x20, x0, x22
  424bc8:	ldr	x1, [x0, x24, lsl #3]
  424bcc:	ldr	x28, [x4, x2, lsl #3]
  424bd0:	cbz	x1, 424d98 <_obstack_memory_used@@Base+0x62a8>
  424bd4:	ldr	x2, [x1, #16]
  424bd8:	cmp	x2, #0x0
  424bdc:	b.le	424dc0 <_obstack_memory_used@@Base+0x62d0>
  424be0:	sub	x0, x2, #0x1
  424be4:	mov	x3, #0x0                   	// #0
  424be8:	ldr	x1, [x1, #24]
  424bec:	b	424c04 <_obstack_memory_used@@Base+0x6114>
  424bf0:	lsr	x5, x5, #1
  424bf4:	ldr	x4, [x1, x5, lsl #3]
  424bf8:	cmp	x28, x4
  424bfc:	b.gt	424cc8 <_obstack_memory_used@@Base+0x61d8>
  424c00:	mov	x0, x5
  424c04:	add	x5, x0, x3
  424c08:	cmp	x0, x3
  424c0c:	b.hi	424bf0 <_obstack_memory_used@@Base+0x6100>  // b.pmore
  424c10:	ldr	x0, [x1, x3, lsl #3]
  424c14:	cmp	x28, x0
  424c18:	b.eq	424b70 <_obstack_memory_used@@Base+0x6080>  // b.none
  424c1c:	dup	v0.2d, x2
  424c20:	lsl	x2, x2, #3
  424c24:	mov	x0, x2
  424c28:	stp	x2, x1, [sp, #96]
  424c2c:	str	q0, [sp, #144]
  424c30:	bl	402440 <malloc@plt>
  424c34:	str	x0, [sp, #160]
  424c38:	ldp	x2, x1, [sp, #96]
  424c3c:	cbz	x0, 424e4c <_obstack_memory_used@@Base+0x635c>
  424c40:	bl	4022a0 <memcpy@plt>
  424c44:	mov	w2, #0x0                   	// #0
  424c48:	mov	x1, x28
  424c4c:	add	x0, sp, #0x90
  424c50:	str	w2, [sp, #140]
  424c54:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  424c58:	ldr	w1, [sp, #140]
  424c5c:	and	w0, w0, #0xff
  424c60:	eor	w0, w0, #0x1
  424c64:	cmp	w1, #0x0
  424c68:	cset	w1, ne  // ne = any
  424c6c:	orr	w0, w1, w0
  424c70:	cbnz	w0, 424de0 <_obstack_memory_used@@Base+0x62f0>
  424c74:	ldr	x3, [x25, #184]
  424c78:	add	x20, x3, x22
  424c7c:	add	x2, sp, #0x90
  424c80:	mov	x1, x27
  424c84:	add	x0, sp, #0x8c
  424c88:	bl	424760 <_obstack_memory_used@@Base+0x5c70>
  424c8c:	str	x0, [x20]
  424c90:	ldr	x0, [sp, #160]
  424c94:	bl	4026b0 <free@plt>
  424c98:	ldr	x0, [x25, #184]
  424c9c:	ldr	x0, [x0, x24, lsl #3]
  424ca0:	cbnz	x0, 424b70 <_obstack_memory_used@@Base+0x6080>
  424ca4:	ldr	w0, [sp, #140]
  424ca8:	cbz	w0, 424b70 <_obstack_memory_used@@Base+0x6080>
  424cac:	ldp	x19, x20, [sp, #16]
  424cb0:	ldp	x21, x22, [sp, #32]
  424cb4:	ldp	x23, x24, [sp, #48]
  424cb8:	ldp	x25, x26, [sp, #64]
  424cbc:	ldp	x27, x28, [sp, #80]
  424cc0:	ldp	x29, x30, [sp], #176
  424cc4:	ret
  424cc8:	add	x3, x5, #0x1
  424ccc:	b	424c04 <_obstack_memory_used@@Base+0x6114>
  424cd0:	ldr	x1, [x27, #40]
  424cd4:	add	x2, x2, x2, lsl #1
  424cd8:	mov	x0, #0x0                   	// #0
  424cdc:	add	x2, x1, x2, lsl #3
  424ce0:	ldr	x1, [x2, #16]
  424ce4:	ldr	x24, [x1]
  424ce8:	b	424d00 <_obstack_memory_used@@Base+0x6210>
  424cec:	lsr	x1, x1, #1
  424cf0:	ldr	x2, [x3, x1, lsl #3]
  424cf4:	cmp	x24, x2
  424cf8:	b.gt	424d90 <_obstack_memory_used@@Base+0x62a0>
  424cfc:	mov	x5, x1
  424d00:	add	x1, x5, x0
  424d04:	cmp	x5, x0
  424d08:	b.hi	424cec <_obstack_memory_used@@Base+0x61fc>  // b.pmore
  424d0c:	ldr	x0, [x3, x0, lsl #3]
  424d10:	cmp	x24, x0
  424d14:	b.eq	424b70 <_obstack_memory_used@@Base+0x6080>  // b.none
  424d18:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  424d1c:	ldr	q0, [x0, #2768]
  424d20:	mov	x0, #0x8                   	// #8
  424d24:	str	q0, [sp, #144]
  424d28:	bl	402440 <malloc@plt>
  424d2c:	mov	w3, w21
  424d30:	str	x0, [sp, #160]
  424d34:	mov	x4, x0
  424d38:	ldr	x2, [sp, #112]
  424d3c:	cbz	x0, 424e28 <_obstack_memory_used@@Base+0x6338>
  424d40:	str	x24, [x4]
  424d44:	add	x1, sp, #0x90
  424d48:	mov	x0, x27
  424d4c:	str	wzr, [sp, #140]
  424d50:	bl	4237c0 <_obstack_memory_used@@Base+0x4cd0>
  424d54:	mov	w23, w0
  424d58:	add	x1, sp, #0x90
  424d5c:	mov	x0, x19
  424d60:	bl	420010 <_obstack_memory_used@@Base+0x1520>
  424d64:	mov	w24, w0
  424d68:	ldr	x0, [sp, #160]
  424d6c:	bl	4026b0 <free@plt>
  424d70:	ldr	w0, [sp, #140]
  424d74:	orr	w1, w23, w24
  424d78:	orr	w1, w1, w0
  424d7c:	cbnz	w1, 424e10 <_obstack_memory_used@@Base+0x6320>
  424d80:	ldr	x0, [sp, #120]
  424d84:	ldr	x23, [x25, #216]
  424d88:	add	x23, x23, x0
  424d8c:	b	424b20 <_obstack_memory_used@@Base+0x6030>
  424d90:	add	x0, x1, #0x1
  424d94:	b	424d00 <_obstack_memory_used@@Base+0x6210>
  424d98:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  424d9c:	mov	x0, #0x8                   	// #8
  424da0:	ldr	q0, [x1, #2768]
  424da4:	str	q0, [sp, #144]
  424da8:	bl	402440 <malloc@plt>
  424dac:	str	x0, [sp, #160]
  424db0:	cbz	x0, 424df0 <_obstack_memory_used@@Base+0x6300>
  424db4:	str	x28, [x0]
  424db8:	str	wzr, [sp, #140]
  424dbc:	b	424c7c <_obstack_memory_used@@Base+0x618c>
  424dc0:	mov	w2, #0x0                   	// #0
  424dc4:	stp	xzr, xzr, [sp, #144]
  424dc8:	str	xzr, [sp, #160]
  424dcc:	b	424c48 <_obstack_memory_used@@Base+0x6158>
  424dd0:	add	x22, x5, #0x1
  424dd4:	b	424ae0 <_obstack_memory_used@@Base+0x5ff0>
  424dd8:	ldp	x23, x24, [sp, #48]
  424ddc:	b	424b84 <_obstack_memory_used@@Base+0x6094>
  424de0:	ldr	x0, [sp, #160]
  424de4:	bl	4026b0 <free@plt>
  424de8:	ldr	w0, [sp, #140]
  424dec:	cbnz	w0, 424cac <_obstack_memory_used@@Base+0x61bc>
  424df0:	mov	w0, #0xc                   	// #12
  424df4:	ldp	x19, x20, [sp, #16]
  424df8:	ldp	x21, x22, [sp, #32]
  424dfc:	ldp	x23, x24, [sp, #48]
  424e00:	ldp	x25, x26, [sp, #64]
  424e04:	ldp	x27, x28, [sp, #80]
  424e08:	ldp	x29, x30, [sp], #176
  424e0c:	ret
  424e10:	cbnz	w0, 424cac <_obstack_memory_used@@Base+0x61bc>
  424e14:	cmp	w23, #0x0
  424e18:	csel	w0, w23, w24, ne  // ne = any
  424e1c:	ldp	x23, x24, [sp, #48]
  424e20:	ldp	x27, x28, [sp, #80]
  424e24:	b	424b88 <_obstack_memory_used@@Base+0x6098>
  424e28:	mov	w4, #0xc                   	// #12
  424e2c:	add	x1, sp, #0x90
  424e30:	mov	x0, x27
  424e34:	str	w4, [sp, #140]
  424e38:	stp	xzr, xzr, [sp, #144]
  424e3c:	bl	4237c0 <_obstack_memory_used@@Base+0x4cd0>
  424e40:	add	x1, sp, #0x90
  424e44:	mov	w23, w0
  424e48:	b	424d5c <_obstack_memory_used@@Base+0x626c>
  424e4c:	mov	w2, #0xc                   	// #12
  424e50:	stp	xzr, xzr, [sp, #144]
  424e54:	b	424c48 <_obstack_memory_used@@Base+0x6158>
  424e58:	stp	x29, x30, [sp, #-144]!
  424e5c:	mov	x29, sp
  424e60:	stp	x21, x22, [sp, #32]
  424e64:	ldr	x21, [x2, #8]
  424e68:	stp	x19, x20, [sp, #16]
  424e6c:	str	x1, [sp, #104]
  424e70:	str	x0, [sp, #136]
  424e74:	cbz	x21, 425254 <_obstack_memory_used@@Base+0x6764>
  424e78:	stp	x23, x24, [sp, #48]
  424e7c:	mov	x22, x2
  424e80:	cmp	x21, #0x0
  424e84:	stp	x27, x28, [sp, #80]
  424e88:	add	x23, x21, w3, uxtw
  424e8c:	mov	w27, w3
  424e90:	b.le	424f14 <_obstack_memory_used@@Base+0x6424>
  424e94:	sub	x0, x21, #0x1
  424e98:	cmp	x0, #0x2
  424e9c:	ldr	x2, [x2, #16]
  424ea0:	b.ls	4252c4 <_obstack_memory_used@@Base+0x67d4>  // b.plast
  424ea4:	lsr	x1, x21, #1
  424ea8:	mov	x0, x2
  424eac:	movi	v0.4s, #0x0
  424eb0:	add	x1, x2, x1, lsl #4
  424eb4:	nop
  424eb8:	ldr	q1, [x0], #16
  424ebc:	add	v0.2d, v0.2d, v1.2d
  424ec0:	cmp	x1, x0
  424ec4:	b.ne	424eb8 <_obstack_memory_used@@Base+0x63c8>  // b.any
  424ec8:	addp	d0, v0.2d
  424ecc:	and	x1, x21, #0xfffffffffffffffe
  424ed0:	mov	x0, v0.d[0]
  424ed4:	add	x23, x23, x0
  424ed8:	tbz	w21, #0, 424f14 <_obstack_memory_used@@Base+0x6424>
  424edc:	ldr	x0, [x2, x1, lsl #3]
  424ee0:	add	x3, x1, #0x1
  424ee4:	cmp	x21, x3
  424ee8:	lsl	x3, x1, #3
  424eec:	add	x23, x23, x0
  424ef0:	b.le	424f14 <_obstack_memory_used@@Base+0x6424>
  424ef4:	add	x2, x2, x3
  424ef8:	add	x1, x1, #0x2
  424efc:	cmp	x21, x1
  424f00:	ldr	x0, [x2, #8]
  424f04:	add	x23, x23, x0
  424f08:	b.le	424f14 <_obstack_memory_used@@Base+0x6424>
  424f0c:	ldr	x0, [x2, #16]
  424f10:	add	x23, x23, x0
  424f14:	ldr	x1, [sp, #104]
  424f18:	ldr	x0, [x1, #136]
  424f1c:	ldr	x1, [x1, #64]
  424f20:	and	x0, x23, x0
  424f24:	add	x0, x0, x0, lsl #1
  424f28:	lsl	x0, x0, #3
  424f2c:	add	x2, x1, x0
  424f30:	ldr	x6, [x1, x0]
  424f34:	cmp	x6, #0x0
  424f38:	b.le	424f98 <_obstack_memory_used@@Base+0x64a8>
  424f3c:	mov	x0, #0x0                   	// #0
  424f40:	ldr	x7, [x2, #16]
  424f44:	b	424f54 <_obstack_memory_used@@Base+0x6464>
  424f48:	add	x0, x0, #0x1
  424f4c:	cmp	x0, x6
  424f50:	b.eq	424f98 <_obstack_memory_used@@Base+0x64a8>  // b.none
  424f54:	ldr	x19, [x7, x0, lsl #3]
  424f58:	ldr	x1, [x19]
  424f5c:	cmp	x1, x23
  424f60:	b.ne	424f48 <_obstack_memory_used@@Base+0x6458>  // b.any
  424f64:	ldrb	w1, [x19, #104]
  424f68:	and	w1, w1, #0xf
  424f6c:	cmp	w1, w27
  424f70:	b.ne	424f48 <_obstack_memory_used@@Base+0x6458>  // b.any
  424f74:	ldr	x8, [x19, #80]
  424f78:	cbz	x8, 424f48 <_obstack_memory_used@@Base+0x6458>
  424f7c:	ldr	x1, [x8, #8]
  424f80:	cmp	x21, x1
  424f84:	b.eq	425130 <_obstack_memory_used@@Base+0x6640>  // b.none
  424f88:	add	x0, x0, #0x1
  424f8c:	cmp	x0, x6
  424f90:	b.ne	424f54 <_obstack_memory_used@@Base+0x6464>  // b.any
  424f94:	nop
  424f98:	mov	x1, #0x1                   	// #1
  424f9c:	mov	x0, #0x70                  	// #112
  424fa0:	bl	402520 <calloc@plt>
  424fa4:	mov	x19, x0
  424fa8:	cbz	x0, 425238 <_obstack_memory_used@@Base+0x6748>
  424fac:	str	x21, [x0, #16]
  424fb0:	add	x20, x0, #0x8
  424fb4:	cmp	x21, #0x0
  424fb8:	b.le	4251c0 <_obstack_memory_used@@Base+0x66d0>
  424fbc:	stp	x25, x26, [sp, #64]
  424fc0:	lsl	x0, x21, #3
  424fc4:	str	x21, [x19, #8]
  424fc8:	str	x0, [sp, #112]
  424fcc:	bl	402440 <malloc@plt>
  424fd0:	str	x0, [x20, #16]
  424fd4:	mov	x24, x0
  424fd8:	cbz	x0, 4252b4 <_obstack_memory_used@@Base+0x67c4>
  424fdc:	ldr	x2, [sp, #112]
  424fe0:	and	w1, w27, #0x1
  424fe4:	ldr	x22, [x22, #16]
  424fe8:	str	w1, [sp, #100]
  424fec:	and	w1, w27, #0x2
  424ff0:	add	x25, x0, #0x8
  424ff4:	str	w1, [sp, #120]
  424ff8:	mov	x1, x22
  424ffc:	bl	4022a0 <memcpy@plt>
  425000:	mov	x28, #0x0                   	// #0
  425004:	ldrb	w0, [x19, #104]
  425008:	and	w1, w27, #0x4
  42500c:	mov	x10, #0x0                   	// #0
  425010:	str	x20, [x19, #80]
  425014:	str	w1, [sp, #124]
  425018:	bfxil	w0, w27, #0, #4
  42501c:	strb	w0, [x19, #104]
  425020:	ldr	x0, [sp, #104]
  425024:	ldr	x26, [x0]
  425028:	ldr	x2, [x22, x28, lsl #3]
  42502c:	add	x2, x26, x2, lsl #4
  425030:	ldr	w27, [x2, #8]
  425034:	ldrb	w0, [x2, #8]
  425038:	ubfx	x27, x27, #8, #10
  42503c:	cmp	w27, #0x0
  425040:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  425044:	b.eq	4250d8 <_obstack_memory_used@@Base+0x65e8>  // b.none
  425048:	ldrb	w9, [x2, #10]
  42504c:	cmp	w0, #0x2
  425050:	ldrb	w2, [x19, #104]
  425054:	ubfx	x9, x9, #4, #1
  425058:	mov	w3, w2
  42505c:	ubfx	x2, x2, #5, #1
  425060:	orr	w2, w2, w9
  425064:	bfi	w3, w2, #5, #1
  425068:	strb	w3, [x19, #104]
  42506c:	b.eq	4251dc <_obstack_memory_used@@Base+0x66ec>  // b.none
  425070:	cmp	w0, #0x4
  425074:	b.eq	42513c <_obstack_memory_used@@Base+0x664c>  // b.none
  425078:	cbz	w27, 4250d8 <_obstack_memory_used@@Base+0x65e8>
  42507c:	ldr	x0, [x19, #80]
  425080:	cmp	x20, x0
  425084:	b.eq	425148 <_obstack_memory_used@@Base+0x6658>  // b.none
  425088:	tbz	w27, #0, 425198 <_obstack_memory_used@@Base+0x66a8>
  42508c:	ldr	w0, [sp, #100]
  425090:	cbz	w0, 425098 <_obstack_memory_used@@Base+0x65a8>
  425094:	tbz	w27, #1, 4251a4 <_obstack_memory_used@@Base+0x66b4>
  425098:	subs	x2, x28, x10
  42509c:	b.mi	4250d4 <_obstack_memory_used@@Base+0x65e4>  // b.first
  4250a0:	ldr	x3, [x19, #16]
  4250a4:	cmp	x2, x3
  4250a8:	b.ge	4250d4 <_obstack_memory_used@@Base+0x65e4>  // b.tcont
  4250ac:	sub	x3, x3, #0x1
  4250b0:	str	x3, [x19, #16]
  4250b4:	cmp	x2, x3
  4250b8:	b.ge	4250d4 <_obstack_memory_used@@Base+0x65e4>  // b.tcont
  4250bc:	nop
  4250c0:	ldr	x0, [x25, x2, lsl #3]
  4250c4:	str	x0, [x24, x2, lsl #3]
  4250c8:	add	x2, x2, #0x1
  4250cc:	cmp	x2, x3
  4250d0:	b.lt	4250c0 <_obstack_memory_used@@Base+0x65d0>  // b.tstop
  4250d4:	add	x10, x10, #0x1
  4250d8:	add	x28, x28, #0x1
  4250dc:	cmp	x21, x28
  4250e0:	b.gt	425028 <_obstack_memory_used@@Base+0x6538>
  4250e4:	ldp	x25, x26, [sp, #64]
  4250e8:	mov	x2, x23
  4250ec:	ldr	x0, [sp, #104]
  4250f0:	mov	x1, x19
  4250f4:	bl	41f110 <_obstack_memory_used@@Base+0x620>
  4250f8:	cbnz	w0, 4251e8 <_obstack_memory_used@@Base+0x66f8>
  4250fc:	ldp	x23, x24, [sp, #48]
  425100:	ldp	x27, x28, [sp, #80]
  425104:	mov	x0, x19
  425108:	ldp	x19, x20, [sp, #16]
  42510c:	ldp	x21, x22, [sp, #32]
  425110:	ldp	x29, x30, [sp], #144
  425114:	ret
  425118:	ldr	x3, [x8, #16]
  42511c:	ldr	x2, [x22, #16]
  425120:	ldr	x3, [x3, x1, lsl #3]
  425124:	ldr	x2, [x2, x1, lsl #3]
  425128:	cmp	x3, x2
  42512c:	b.ne	424f48 <_obstack_memory_used@@Base+0x6458>  // b.any
  425130:	subs	x1, x1, #0x1
  425134:	b.pl	425118 <_obstack_memory_used@@Base+0x6628>  // b.nfrst
  425138:	b	4250fc <_obstack_memory_used@@Base+0x660c>
  42513c:	orr	w3, w3, #0x40
  425140:	strb	w3, [x19, #104]
  425144:	b	425078 <_obstack_memory_used@@Base+0x6588>
  425148:	mov	x0, #0x18                  	// #24
  42514c:	bl	402440 <malloc@plt>
  425150:	mov	x2, x0
  425154:	cbz	x0, 425270 <_obstack_memory_used@@Base+0x6780>
  425158:	ldr	x0, [sp, #112]
  42515c:	stp	x21, x21, [x2]
  425160:	str	x2, [x19, #80]
  425164:	str	x2, [sp, #128]
  425168:	bl	402440 <malloc@plt>
  42516c:	ldr	x2, [sp, #128]
  425170:	str	x0, [x2, #16]
  425174:	cbz	x0, 4252cc <_obstack_memory_used@@Base+0x67dc>
  425178:	ldr	x2, [sp, #112]
  42517c:	mov	x1, x22
  425180:	bl	4022a0 <memcpy@plt>
  425184:	ldrb	w0, [x19, #104]
  425188:	mov	x10, #0x0                   	// #0
  42518c:	orr	w0, w0, #0xffffff80
  425190:	strb	w0, [x19, #104]
  425194:	tbnz	w27, #0, 42508c <_obstack_memory_used@@Base+0x659c>
  425198:	tbz	w27, #1, 4251a4 <_obstack_memory_used@@Base+0x66b4>
  42519c:	ldr	w0, [sp, #100]
  4251a0:	cbnz	w0, 425098 <_obstack_memory_used@@Base+0x65a8>
  4251a4:	tbz	w27, #4, 4251b0 <_obstack_memory_used@@Base+0x66c0>
  4251a8:	ldr	w0, [sp, #120]
  4251ac:	cbz	w0, 425098 <_obstack_memory_used@@Base+0x65a8>
  4251b0:	tbz	w27, #6, 4250d8 <_obstack_memory_used@@Base+0x65e8>
  4251b4:	ldr	w0, [sp, #124]
  4251b8:	cbnz	w0, 4250d8 <_obstack_memory_used@@Base+0x65e8>
  4251bc:	b	425098 <_obstack_memory_used@@Base+0x65a8>
  4251c0:	stp	xzr, xzr, [x0, #8]
  4251c4:	str	xzr, [x20, #16]
  4251c8:	ldrb	w0, [x0, #104]
  4251cc:	str	x20, [x19, #80]
  4251d0:	bfxil	w0, w27, #0, #4
  4251d4:	strb	w0, [x19, #104]
  4251d8:	b	4250e8 <_obstack_memory_used@@Base+0x65f8>
  4251dc:	orr	w3, w3, #0x10
  4251e0:	strb	w3, [x19, #104]
  4251e4:	b	425078 <_obstack_memory_used@@Base+0x6588>
  4251e8:	ldr	x0, [x19, #48]
  4251ec:	bl	4026b0 <free@plt>
  4251f0:	ldr	x0, [x19, #72]
  4251f4:	bl	4026b0 <free@plt>
  4251f8:	ldr	x0, [x19, #80]
  4251fc:	cmp	x20, x0
  425200:	b.eq	425214 <_obstack_memory_used@@Base+0x6724>  // b.none
  425204:	ldr	x0, [x0, #16]
  425208:	bl	4026b0 <free@plt>
  42520c:	ldr	x0, [x19, #80]
  425210:	bl	4026b0 <free@plt>
  425214:	ldr	x0, [x19, #24]
  425218:	bl	4026b0 <free@plt>
  42521c:	ldr	x0, [x19, #96]
  425220:	bl	4026b0 <free@plt>
  425224:	ldr	x0, [x19, #88]
  425228:	bl	4026b0 <free@plt>
  42522c:	mov	x0, x19
  425230:	bl	4026b0 <free@plt>
  425234:	nop
  425238:	ldr	x1, [sp, #136]
  42523c:	mov	w0, #0xc                   	// #12
  425240:	mov	x19, #0x0                   	// #0
  425244:	ldp	x23, x24, [sp, #48]
  425248:	ldp	x27, x28, [sp, #80]
  42524c:	str	w0, [x1]
  425250:	b	425104 <_obstack_memory_used@@Base+0x6614>
  425254:	str	wzr, [x0]
  425258:	mov	x19, #0x0                   	// #0
  42525c:	mov	x0, x19
  425260:	ldp	x19, x20, [sp, #16]
  425264:	ldp	x21, x22, [sp, #32]
  425268:	ldp	x29, x30, [sp], #144
  42526c:	ret
  425270:	ldr	x0, [x19, #48]
  425274:	bl	4026b0 <free@plt>
  425278:	ldr	x0, [x19, #72]
  42527c:	bl	4026b0 <free@plt>
  425280:	ldr	x0, [x19, #80]
  425284:	cmp	x20, x0
  425288:	b.eq	42529c <_obstack_memory_used@@Base+0x67ac>  // b.none
  42528c:	ldr	x0, [x0, #16]
  425290:	bl	4026b0 <free@plt>
  425294:	ldr	x0, [x19, #80]
  425298:	bl	4026b0 <free@plt>
  42529c:	ldr	x0, [x19, #24]
  4252a0:	bl	4026b0 <free@plt>
  4252a4:	ldr	x0, [x19, #96]
  4252a8:	bl	4026b0 <free@plt>
  4252ac:	ldr	x0, [x19, #88]
  4252b0:	bl	4026b0 <free@plt>
  4252b4:	mov	x0, x19
  4252b8:	bl	4026b0 <free@plt>
  4252bc:	ldp	x25, x26, [sp, #64]
  4252c0:	b	425238 <_obstack_memory_used@@Base+0x6748>
  4252c4:	mov	x1, #0x0                   	// #0
  4252c8:	b	424edc <_obstack_memory_used@@Base+0x63ec>
  4252cc:	stp	xzr, xzr, [x2]
  4252d0:	ldr	x0, [x19, #48]
  4252d4:	b	425274 <_obstack_memory_used@@Base+0x6784>
  4252d8:	stp	x29, x30, [sp, #-240]!
  4252dc:	mov	x7, x1
  4252e0:	mov	x29, sp
  4252e4:	stp	x27, x28, [sp, #80]
  4252e8:	ldr	x27, [x0, #152]
  4252ec:	stp	x19, x20, [sp, #16]
  4252f0:	mov	x20, x2
  4252f4:	stp	x21, x22, [sp, #32]
  4252f8:	mov	x19, x3
  4252fc:	stp	x4, x1, [sp, #144]
  425300:	ldr	x22, [x1, #8]
  425304:	lsl	x1, x2, #4
  425308:	ldr	x2, [x27]
  42530c:	stp	x25, x26, [sp, #64]
  425310:	mov	x26, x0
  425314:	ldrsw	x0, [x0, #224]
  425318:	ldr	x1, [x2, x1]
  42531c:	stp	x23, x24, [sp, #48]
  425320:	add	x0, x0, x5
  425324:	str	x5, [sp, #120]
  425328:	cmp	x0, x22
  42532c:	str	x1, [sp, #128]
  425330:	str	w6, [sp, #140]
  425334:	str	wzr, [sp, #184]
  425338:	b.ge	4257d4 <_obstack_memory_used@@Base+0x6ce4>  // b.tcont
  42533c:	ldr	x0, [sp, #152]
  425340:	ldr	w2, [x26, #160]
  425344:	ldr	x21, [x0]
  425348:	ldr	x22, [x0, #16]
  42534c:	ldr	x0, [x26, #72]
  425350:	str	x0, [sp, #160]
  425354:	ldr	x0, [x26, #184]
  425358:	str	x0, [sp, #168]
  42535c:	cbnz	x21, 425414 <_obstack_memory_used@@Base+0x6924>
  425360:	str	x19, [x26, #72]
  425364:	sub	x1, x19, #0x1
  425368:	str	x22, [x26, #184]
  42536c:	mov	x0, x26
  425370:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  425374:	mov	w23, w0
  425378:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x12510>
  42537c:	ldr	q0, [x0, #2768]
  425380:	mov	x0, #0x8                   	// #8
  425384:	str	q0, [sp, #192]
  425388:	bl	402440 <malloc@plt>
  42538c:	mov	x4, x0
  425390:	str	x0, [sp, #208]
  425394:	cbz	x0, 42582c <_obstack_memory_used@@Base+0x6d3c>
  425398:	ldr	w3, [sp, #140]
  42539c:	add	x22, sp, #0xc0
  4253a0:	ldr	x2, [sp, #128]
  4253a4:	str	x20, [x4]
  4253a8:	mov	x1, x22
  4253ac:	mov	x0, x27
  4253b0:	str	wzr, [sp, #184]
  4253b4:	bl	4237c0 <_obstack_memory_used@@Base+0x4cd0>
  4253b8:	str	w0, [sp, #184]
  4253bc:	cbnz	w0, 425664 <_obstack_memory_used@@Base+0x6b74>
  4253c0:	ldr	x0, [sp, #200]
  4253c4:	mov	x21, x19
  4253c8:	cbz	x0, 4253ec <_obstack_memory_used@@Base+0x68fc>
  4253cc:	ldr	w4, [sp, #140]
  4253d0:	mov	x2, x21
  4253d4:	ldr	x3, [sp, #128]
  4253d8:	mov	x1, x22
  4253dc:	mov	x0, x26
  4253e0:	bl	424a88 <_obstack_memory_used@@Base+0x5f98>
  4253e4:	str	w0, [sp, #184]
  4253e8:	cbnz	w0, 425664 <_obstack_memory_used@@Base+0x6b74>
  4253ec:	mov	w3, w23
  4253f0:	mov	x2, x22
  4253f4:	mov	x1, x27
  4253f8:	add	x0, sp, #0xb8
  4253fc:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  425400:	mov	x19, x0
  425404:	cbz	x0, 425834 <_obstack_memory_used@@Base+0x6d44>
  425408:	ldr	x0, [x26, #184]
  42540c:	str	x19, [x0, x21, lsl #3]
  425410:	b	42544c <_obstack_memory_used@@Base+0x695c>
  425414:	str	x21, [x26, #72]
  425418:	sub	x1, x21, #0x1
  42541c:	str	x22, [x26, #184]
  425420:	mov	x0, x26
  425424:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  425428:	mov	w23, w0
  42542c:	cmp	x21, x19
  425430:	b.eq	425378 <_obstack_memory_used@@Base+0x6888>  // b.none
  425434:	ldr	x19, [x22, x21, lsl #3]
  425438:	cbz	x19, 425444 <_obstack_memory_used@@Base+0x6954>
  42543c:	ldrb	w1, [x19, #104]
  425440:	tbnz	w1, #6, 425754 <_obstack_memory_used@@Base+0x6c64>
  425444:	stp	xzr, xzr, [sp, #192]
  425448:	str	xzr, [sp, #208]
  42544c:	ldr	x0, [sp, #120]
  425450:	cmp	x21, x0
  425454:	b.ge	4255d0 <_obstack_memory_used@@Base+0x6ae0>  // b.tcont
  425458:	add	x22, x21, #0x1
  42545c:	str	xzr, [sp, #96]
  425460:	ldr	x1, [sp, #96]
  425464:	sub	x21, x22, #0x1
  425468:	ldrsw	x0, [x26, #224]
  42546c:	cmp	x1, x0
  425470:	b.gt	4255d0 <_obstack_memory_used@@Base+0x6ae0>
  425474:	ldr	x0, [x26, #184]
  425478:	lsl	x1, x22, #3
  42547c:	str	x1, [sp, #104]
  425480:	str	xzr, [sp, #200]
  425484:	ldr	x1, [x0, x22, lsl #3]
  425488:	cbz	x1, 425748 <_obstack_memory_used@@Base+0x6c58>
  42548c:	add	x1, x1, #0x8
  425490:	add	x0, sp, #0xc0
  425494:	bl	420010 <_obstack_memory_used@@Base+0x1520>
  425498:	str	w0, [sp, #184]
  42549c:	cbnz	w0, 425664 <_obstack_memory_used@@Base+0x6b74>
  4254a0:	cbz	x19, 425538 <_obstack_memory_used@@Base+0x6a48>
  4254a4:	ldr	x0, [x19, #40]
  4254a8:	str	wzr, [sp, #188]
  4254ac:	stp	xzr, xzr, [sp, #216]
  4254b0:	add	x19, x19, #0x20
  4254b4:	cmp	x0, #0x0
  4254b8:	str	xzr, [sp, #232]
  4254bc:	ldr	x23, [x26, #152]
  4254c0:	b.le	42585c <_obstack_memory_used@@Base+0x6d6c>
  4254c4:	add	x0, x23, #0xd8
  4254c8:	mov	x24, #0x0                   	// #0
  4254cc:	str	x0, [sp, #112]
  4254d0:	ldr	x1, [x19, #16]
  4254d4:	ldr	x0, [x23]
  4254d8:	ldr	x28, [x1, x24, lsl #3]
  4254dc:	lsl	x20, x28, #4
  4254e0:	add	x1, x0, x20
  4254e4:	ldrb	w2, [x1, #10]
  4254e8:	tbnz	w2, #4, 42568c <_obstack_memory_used@@Base+0x6b9c>
  4254ec:	mov	x2, x21
  4254f0:	mov	x0, x26
  4254f4:	bl	420468 <_obstack_memory_used@@Base+0x1978>
  4254f8:	tst	w0, #0xff
  4254fc:	b.eq	42551c <_obstack_memory_used@@Base+0x6a2c>  // b.none
  425500:	lsl	x25, x28, #3
  425504:	ldr	x1, [x23, #24]
  425508:	add	x0, sp, #0xc0
  42550c:	ldr	x1, [x1, x25]
  425510:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  425514:	tst	w0, #0xff
  425518:	b.eq	425654 <_obstack_memory_used@@Base+0x6b64>  // b.none
  42551c:	ldr	x0, [x19, #8]
  425520:	add	x24, x24, #0x1
  425524:	cmp	x24, x0
  425528:	b.lt	4254d0 <_obstack_memory_used@@Base+0x69e0>  // b.tstop
  42552c:	ldr	x0, [sp, #232]
  425530:	bl	4026b0 <free@plt>
  425534:	str	wzr, [sp, #184]
  425538:	ldr	x0, [sp, #200]
  42553c:	mov	x20, x22
  425540:	cbz	x0, 425580 <_obstack_memory_used@@Base+0x6a90>
  425544:	ldr	w3, [sp, #140]
  425548:	add	x1, sp, #0xc0
  42554c:	ldr	x2, [sp, #128]
  425550:	mov	x0, x27
  425554:	bl	4237c0 <_obstack_memory_used@@Base+0x4cd0>
  425558:	str	w0, [sp, #184]
  42555c:	cbnz	w0, 425664 <_obstack_memory_used@@Base+0x6b74>
  425560:	ldr	w4, [sp, #140]
  425564:	mov	x2, x22
  425568:	ldr	x3, [sp, #128]
  42556c:	add	x1, sp, #0xc0
  425570:	mov	x0, x26
  425574:	bl	424a88 <_obstack_memory_used@@Base+0x5f98>
  425578:	str	w0, [sp, #184]
  42557c:	cbnz	w0, 425664 <_obstack_memory_used@@Base+0x6b74>
  425580:	ldr	w2, [x26, #160]
  425584:	mov	x1, x21
  425588:	mov	x0, x26
  42558c:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  425590:	mov	w3, w0
  425594:	add	x2, sp, #0xc0
  425598:	mov	x1, x27
  42559c:	add	x0, sp, #0xb8
  4255a0:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  4255a4:	mov	x19, x0
  4255a8:	cbz	x0, 42579c <_obstack_memory_used@@Base+0x6cac>
  4255ac:	ldr	x1, [sp, #104]
  4255b0:	str	xzr, [sp, #96]
  4255b4:	ldr	x0, [x26, #184]
  4255b8:	str	x19, [x0, x1]
  4255bc:	ldr	x0, [sp, #120]
  4255c0:	add	x22, x22, #0x1
  4255c4:	cmp	x20, x0
  4255c8:	b.lt	425460 <_obstack_memory_used@@Base+0x6970>  // b.tstop
  4255cc:	mov	x21, x20
  4255d0:	ldr	x0, [sp, #208]
  4255d4:	bl	4026b0 <free@plt>
  4255d8:	ldr	x1, [sp, #120]
  4255dc:	ldr	x0, [x26, #184]
  4255e0:	ldr	x3, [x0, x1, lsl #3]
  4255e4:	cbz	x3, 425840 <_obstack_memory_used@@Base+0x6d50>
  4255e8:	ldp	x0, x1, [sp, #152]
  4255ec:	str	x21, [x0]
  4255f0:	str	x1, [x26, #72]
  4255f4:	ldr	x1, [sp, #168]
  4255f8:	str	x1, [x26, #184]
  4255fc:	ldr	x1, [x3, #16]
  425600:	mov	w0, #0x1                   	// #1
  425604:	cmp	x1, #0x0
  425608:	b.le	425670 <_obstack_memory_used@@Base+0x6b80>
  42560c:	sub	x1, x1, #0x1
  425610:	mov	x2, #0x0                   	// #0
  425614:	ldr	x4, [x3, #24]
  425618:	b	425634 <_obstack_memory_used@@Base+0x6b44>
  42561c:	lsr	x0, x0, #1
  425620:	ldr	x5, [sp, #144]
  425624:	ldr	x3, [x4, x0, lsl #3]
  425628:	cmp	x5, x3
  42562c:	b.gt	425824 <_obstack_memory_used@@Base+0x6d34>
  425630:	mov	x1, x0
  425634:	add	x0, x1, x2
  425638:	cmp	x1, x2
  42563c:	b.hi	42561c <_obstack_memory_used@@Base+0x6b2c>  // b.pmore
  425640:	ldr	x0, [x4, x2, lsl #3]
  425644:	ldr	x1, [sp, #144]
  425648:	cmp	x0, x1
  42564c:	cset	w0, ne  // ne = any
  425650:	b	425670 <_obstack_memory_used@@Base+0x6b80>
  425654:	ldr	x0, [sp, #232]
  425658:	bl	4026b0 <free@plt>
  42565c:	mov	w0, #0xc                   	// #12
  425660:	str	w0, [sp, #184]
  425664:	ldr	x0, [sp, #208]
  425668:	bl	4026b0 <free@plt>
  42566c:	ldr	w0, [sp, #184]
  425670:	ldp	x19, x20, [sp, #16]
  425674:	ldp	x21, x22, [sp, #32]
  425678:	ldp	x23, x24, [sp, #48]
  42567c:	ldp	x25, x26, [sp, #64]
  425680:	ldp	x27, x28, [sp, #80]
  425684:	ldp	x29, x30, [sp], #240
  425688:	ret
  42568c:	ldr	x1, [sp, #112]
  425690:	mov	x4, x21
  425694:	mov	x3, x26
  425698:	mov	x2, x28
  42569c:	bl	422920 <_obstack_memory_used@@Base+0x3e30>
  4256a0:	cmp	w0, #0x1
  4256a4:	b.le	425738 <_obstack_memory_used@@Base+0x6c48>
  4256a8:	ldr	x1, [x26, #184]
  4256ac:	add	x20, x21, w0, sxtw
  4256b0:	ldr	x0, [x23, #24]
  4256b4:	lsl	x25, x28, #3
  4256b8:	ldr	x1, [x1, x20, lsl #3]
  4256bc:	ldr	x28, [x0, x28, lsl #3]
  4256c0:	str	xzr, [sp, #224]
  4256c4:	cbz	x1, 4256dc <_obstack_memory_used@@Base+0x6bec>
  4256c8:	add	x1, x1, #0x8
  4256cc:	add	x0, sp, #0xd8
  4256d0:	bl	420010 <_obstack_memory_used@@Base+0x1520>
  4256d4:	str	w0, [sp, #188]
  4256d8:	cbnz	w0, 425720 <_obstack_memory_used@@Base+0x6c30>
  4256dc:	mov	x1, x28
  4256e0:	add	x0, sp, #0xd8
  4256e4:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  4256e8:	tst	w0, #0xff
  4256ec:	b.eq	425654 <_obstack_memory_used@@Base+0x6b64>  // b.none
  4256f0:	ldr	x28, [x26, #184]
  4256f4:	mov	x1, x23
  4256f8:	add	x2, sp, #0xd8
  4256fc:	add	x0, sp, #0xbc
  425700:	bl	424760 <_obstack_memory_used@@Base+0x5c70>
  425704:	ldr	x1, [x26, #184]
  425708:	str	x0, [x28, x20, lsl #3]
  42570c:	ldr	x0, [x1, x20, lsl #3]
  425710:	cbnz	x0, 425504 <_obstack_memory_used@@Base+0x6a14>
  425714:	ldr	w0, [sp, #188]
  425718:	cbz	w0, 425504 <_obstack_memory_used@@Base+0x6a14>
  42571c:	nop
  425720:	ldr	x0, [sp, #232]
  425724:	bl	4026b0 <free@plt>
  425728:	ldr	w0, [sp, #188]
  42572c:	str	w0, [sp, #184]
  425730:	cbz	w0, 425538 <_obstack_memory_used@@Base+0x6a48>
  425734:	b	425664 <_obstack_memory_used@@Base+0x6b74>
  425738:	cbnz	w0, 425500 <_obstack_memory_used@@Base+0x6a10>
  42573c:	ldr	x1, [x23]
  425740:	add	x1, x1, x20
  425744:	b	4254ec <_obstack_memory_used@@Base+0x69fc>
  425748:	cbnz	x19, 4254a4 <_obstack_memory_used@@Base+0x69b4>
  42574c:	mov	x20, x22
  425750:	b	425580 <_obstack_memory_used@@Base+0x6a90>
  425754:	ldr	x0, [x19, #16]
  425758:	str	x0, [sp, #200]
  42575c:	cmp	x0, #0x0
  425760:	b.le	4257c0 <_obstack_memory_used@@Base+0x6cd0>
  425764:	lsl	x22, x0, #3
  425768:	str	x0, [sp, #192]
  42576c:	mov	x0, x22
  425770:	bl	402440 <malloc@plt>
  425774:	str	x0, [sp, #208]
  425778:	cbz	x0, 42582c <_obstack_memory_used@@Base+0x6d3c>
  42577c:	ldr	x1, [x19, #24]
  425780:	mov	x2, x22
  425784:	add	x22, sp, #0xc0
  425788:	bl	4022a0 <memcpy@plt>
  42578c:	str	wzr, [sp, #184]
  425790:	ldrb	w0, [x19, #104]
  425794:	tbz	w0, #6, 42544c <_obstack_memory_used@@Base+0x695c>
  425798:	b	4253cc <_obstack_memory_used@@Base+0x68dc>
  42579c:	ldr	w0, [sp, #184]
  4257a0:	cbnz	w0, 425664 <_obstack_memory_used@@Base+0x6b74>
  4257a4:	ldr	x1, [sp, #96]
  4257a8:	ldr	x0, [x26, #184]
  4257ac:	add	x1, x1, #0x1
  4257b0:	str	x1, [sp, #96]
  4257b4:	ldr	x1, [sp, #104]
  4257b8:	str	xzr, [x0, x1]
  4257bc:	b	4255bc <_obstack_memory_used@@Base+0x6acc>
  4257c0:	add	x22, sp, #0xc0
  4257c4:	str	wzr, [sp, #184]
  4257c8:	stp	xzr, xzr, [sp, #192]
  4257cc:	str	xzr, [sp, #208]
  4257d0:	b	4253ec <_obstack_memory_used@@Base+0x68fc>
  4257d4:	add	x21, x0, #0x1
  4257d8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4257dc:	sub	x0, x0, x22
  4257e0:	cmp	x0, x21
  4257e4:	b.lt	42582c <_obstack_memory_used@@Base+0x6d3c>  // b.tstop
  4257e8:	add	x23, x22, x21
  4257ec:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  4257f0:	cmp	x23, x0
  4257f4:	b.hi	42582c <_obstack_memory_used@@Base+0x6d3c>  // b.pmore
  4257f8:	ldr	x0, [x7, #16]
  4257fc:	mov	x24, x7
  425800:	lsl	x1, x23, #3
  425804:	bl	402550 <realloc@plt>
  425808:	cbz	x0, 42582c <_obstack_memory_used@@Base+0x6d3c>
  42580c:	stp	x23, x0, [x24, #8]
  425810:	lsl	x2, x21, #3
  425814:	add	x0, x0, x22, lsl #3
  425818:	mov	w1, #0x0                   	// #0
  42581c:	bl	402510 <memset@plt>
  425820:	b	42533c <_obstack_memory_used@@Base+0x684c>
  425824:	add	x2, x0, #0x1
  425828:	b	425634 <_obstack_memory_used@@Base+0x6b44>
  42582c:	mov	w0, #0xc                   	// #12
  425830:	b	425670 <_obstack_memory_used@@Base+0x6b80>
  425834:	ldr	w0, [sp, #184]
  425838:	cbz	w0, 425408 <_obstack_memory_used@@Base+0x6918>
  42583c:	b	425664 <_obstack_memory_used@@Base+0x6b74>
  425840:	ldp	x0, x1, [sp, #152]
  425844:	str	x21, [x0]
  425848:	str	x1, [x26, #72]
  42584c:	ldr	x1, [sp, #168]
  425850:	mov	w0, #0x1                   	// #1
  425854:	str	x1, [x26, #184]
  425858:	b	425670 <_obstack_memory_used@@Base+0x6b80>
  42585c:	mov	x0, #0x0                   	// #0
  425860:	b	425530 <_obstack_memory_used@@Base+0x6a40>
  425864:	nop
  425868:	stp	x29, x30, [sp, #-80]!
  42586c:	mov	x6, x2
  425870:	mov	x5, x4
  425874:	mov	x29, sp
  425878:	stp	x19, x20, [sp, #16]
  42587c:	mov	x20, x4
  425880:	mov	x4, x3
  425884:	stp	x21, x22, [sp, #32]
  425888:	mov	x21, x2
  42588c:	mov	x22, x1
  425890:	stp	x23, x24, [sp, #48]
  425894:	mov	x24, x3
  425898:	mov	x19, x0
  42589c:	ldr	x3, [x2, #8]
  4258a0:	ldr	x2, [x6], #16
  4258a4:	mov	x1, x6
  4258a8:	mov	w6, #0x8                   	// #8
  4258ac:	bl	4252d8 <_obstack_memory_used@@Base+0x67e8>
  4258b0:	mov	w23, w0
  4258b4:	cbz	w0, 4258d0 <_obstack_memory_used@@Base+0x6de0>
  4258b8:	mov	w0, w23
  4258bc:	ldp	x19, x20, [sp, #16]
  4258c0:	ldp	x21, x22, [sp, #32]
  4258c4:	ldp	x23, x24, [sp, #48]
  4258c8:	ldp	x29, x30, [sp], #80
  4258cc:	ret
  4258d0:	ldp	x2, x1, [x19, #200]
  4258d4:	stp	x25, x26, [sp, #64]
  4258d8:	ldr	x25, [x21, #8]
  4258dc:	ldr	x26, [x22]
  4258e0:	cmp	x2, x1
  4258e4:	mov	x4, x25
  4258e8:	ldr	x0, [x19, #216]
  4258ec:	b.ge	4259d4 <_obstack_memory_used@@Base+0x6ee4>  // b.tcont
  4258f0:	add	x1, x2, x2, lsl #2
  4258f4:	cmp	x2, #0x0
  4258f8:	lsl	x1, x1, #3
  4258fc:	b.le	425914 <_obstack_memory_used@@Base+0x6e24>
  425900:	sub	x3, x1, #0x28
  425904:	add	x3, x0, x3
  425908:	ldr	x5, [x3, #8]
  42590c:	cmp	x20, x5
  425910:	b.eq	4259c8 <_obstack_memory_used@@Base+0x6ed8>  // b.none
  425914:	add	x6, x0, x1
  425918:	cmp	x26, x25
  42591c:	str	x24, [x0, x1]
  425920:	csetm	w1, eq  // eq = none
  425924:	add	x2, x2, #0x1
  425928:	sub	x0, x25, x26
  42592c:	stp	x20, x26, [x6, #8]
  425930:	str	x25, [x6, #24]
  425934:	strh	w1, [x6, #34]
  425938:	str	x2, [x19, #200]
  42593c:	strb	wzr, [x6, #32]
  425940:	ldrsw	x1, [x19, #224]
  425944:	cmp	x1, x0
  425948:	b.ge	425954 <_obstack_memory_used@@Base+0x6e64>  // b.tcont
  42594c:	sub	w1, w25, w26
  425950:	str	w1, [x19, #224]
  425954:	ldr	x5, [x22]
  425958:	add	x4, x20, x4
  42595c:	ldr	x0, [x19, #64]
  425960:	sub	x20, x4, x5
  425964:	ldr	x21, [x19, #192]
  425968:	cmp	x20, x0
  42596c:	b.lt	42597c <_obstack_memory_used@@Base+0x6e8c>  // b.tstop
  425970:	ldr	x1, [x19, #88]
  425974:	cmp	x0, x1
  425978:	b.lt	425994 <_obstack_memory_used@@Base+0x6ea4>  // b.tstop
  42597c:	ldr	x0, [x19, #48]
  425980:	cmp	x20, x0
  425984:	b.lt	4259a4 <_obstack_memory_used@@Base+0x6eb4>  // b.tstop
  425988:	ldr	x1, [x19, #88]
  42598c:	cmp	x0, x1
  425990:	b.ge	4259a4 <_obstack_memory_used@@Base+0x6eb4>  // b.tcont
  425994:	add	w1, w20, #0x1
  425998:	mov	x0, x19
  42599c:	bl	423920 <_obstack_memory_used@@Base+0x4e30>
  4259a0:	cbnz	w0, 425a58 <_obstack_memory_used@@Base+0x6f68>
  4259a4:	cmp	x20, x21
  4259a8:	b.gt	425a1c <_obstack_memory_used@@Base+0x6f2c>
  4259ac:	mov	w0, w23
  4259b0:	ldp	x19, x20, [sp, #16]
  4259b4:	ldp	x21, x22, [sp, #32]
  4259b8:	ldp	x23, x24, [sp, #48]
  4259bc:	ldp	x25, x26, [sp, #64]
  4259c0:	ldp	x29, x30, [sp], #80
  4259c4:	ret
  4259c8:	mov	w5, #0x1                   	// #1
  4259cc:	strb	w5, [x3, #32]
  4259d0:	b	425914 <_obstack_memory_used@@Base+0x6e24>
  4259d4:	add	x1, x1, x1, lsl #2
  4259d8:	lsl	x1, x1, #4
  4259dc:	bl	402550 <realloc@plt>
  4259e0:	cbz	x0, 425a64 <_obstack_memory_used@@Base+0x6f74>
  4259e4:	ldp	x3, x2, [x19, #200]
  4259e8:	str	x0, [x19, #216]
  4259ec:	mov	w1, #0x0                   	// #0
  4259f0:	add	x3, x3, x3, lsl #2
  4259f4:	add	x2, x2, x2, lsl #2
  4259f8:	add	x0, x0, x3, lsl #3
  4259fc:	lsl	x2, x2, #3
  425a00:	bl	402510 <memset@plt>
  425a04:	ldp	x2, x1, [x19, #200]
  425a08:	ldr	x4, [x21, #8]
  425a0c:	ldr	x0, [x19, #216]
  425a10:	lsl	x1, x1, #1
  425a14:	str	x1, [x19, #208]
  425a18:	b	4258f0 <_obstack_memory_used@@Base+0x6e00>
  425a1c:	ldr	x0, [x19, #184]
  425a20:	add	x3, x21, #0x1
  425a24:	sub	x2, x20, x21
  425a28:	mov	w1, #0x0                   	// #0
  425a2c:	lsl	x2, x2, #3
  425a30:	add	x0, x0, x3, lsl #3
  425a34:	bl	402510 <memset@plt>
  425a38:	ldp	x25, x26, [sp, #64]
  425a3c:	str	x20, [x19, #192]
  425a40:	mov	w0, w23
  425a44:	ldp	x19, x20, [sp, #16]
  425a48:	ldp	x21, x22, [sp, #32]
  425a4c:	ldp	x23, x24, [sp, #48]
  425a50:	ldp	x29, x30, [sp], #80
  425a54:	ret
  425a58:	mov	w23, w0
  425a5c:	ldp	x25, x26, [sp, #64]
  425a60:	b	4258b8 <_obstack_memory_used@@Base+0x6dc8>
  425a64:	ldr	x0, [x19, #216]
  425a68:	mov	w23, #0xc                   	// #12
  425a6c:	bl	4026b0 <free@plt>
  425a70:	ldp	x25, x26, [sp, #64]
  425a74:	b	4258b8 <_obstack_memory_used@@Base+0x6dc8>
  425a78:	stp	x29, x30, [sp, #-224]!
  425a7c:	mov	x29, sp
  425a80:	stp	x23, x24, [sp, #48]
  425a84:	mov	x24, x0
  425a88:	mov	x0, #0x3800                	// #14336
  425a8c:	str	x1, [sp, #144]
  425a90:	bl	402440 <malloc@plt>
  425a94:	str	x0, [sp, #104]
  425a98:	cbz	x0, 426330 <_obstack_memory_used@@Base+0x7840>
  425a9c:	mov	x1, #0x1800                	// #6144
  425aa0:	stp	x19, x20, [sp, #16]
  425aa4:	add	x20, x0, x1
  425aa8:	ldr	x1, [sp, #144]
  425aac:	stp	xzr, xzr, [sp, #192]
  425ab0:	add	x23, x1, #0x8
  425ab4:	stp	xzr, xzr, [sp, #208]
  425ab8:	stp	xzr, xzr, [x1, #88]
  425abc:	ldr	x1, [x23, #8]
  425ac0:	cmp	x1, #0x0
  425ac4:	b.le	4263a4 <_obstack_memory_used@@Base+0x78b4>
  425ac8:	mov	x19, #0x0                   	// #0
  425acc:	stp	x21, x22, [sp, #32]
  425ad0:	mov	x22, #0x0                   	// #0
  425ad4:	stp	x25, x26, [sp, #64]
  425ad8:	stp	x27, x28, [sp, #80]
  425adc:	lsl	x1, x22, #3
  425ae0:	ldr	x0, [x23, #16]
  425ae4:	str	x1, [sp, #120]
  425ae8:	ldr	x2, [x24]
  425aec:	ldr	x1, [x0, x22, lsl #3]
  425af0:	lsl	x1, x1, #4
  425af4:	add	x21, x2, x1
  425af8:	ldr	w0, [x21, #8]
  425afc:	ldrb	w10, [x21, #8]
  425b00:	ubfx	x0, x0, #8, #10
  425b04:	cmp	w10, #0x1
  425b08:	b.eq	425d6c <_obstack_memory_used@@Base+0x727c>  // b.none
  425b0c:	cmp	w10, #0x3
  425b10:	b.eq	426264 <_obstack_memory_used@@Base+0x7774>  // b.none
  425b14:	cmp	w10, #0x5
  425b18:	b.eq	426130 <_obstack_memory_used@@Base+0x7640>  // b.none
  425b1c:	cmp	w10, #0x7
  425b20:	b.eq	426234 <_obstack_memory_used@@Base+0x7744>  // b.none
  425b24:	ldr	x0, [x23, #8]
  425b28:	add	x22, x22, #0x1
  425b2c:	cmp	x22, x0
  425b30:	b.lt	425adc <_obstack_memory_used@@Base+0x6fec>  // b.tstop
  425b34:	cmp	x19, #0x0
  425b38:	b.le	4264bc <_obstack_memory_used@@Base+0x79cc>
  425b3c:	add	x23, x19, #0x1
  425b40:	stp	x23, xzr, [sp, #168]
  425b44:	lsl	x27, x19, #1
  425b48:	lsl	x23, x23, #3
  425b4c:	mov	x0, x23
  425b50:	bl	402440 <malloc@plt>
  425b54:	str	x0, [sp, #184]
  425b58:	mov	x25, x0
  425b5c:	cbz	x0, 4260ac <_obstack_memory_used@@Base+0x75bc>
  425b60:	add	x26, x27, x19
  425b64:	str	wzr, [sp, #164]
  425b68:	lsl	x21, x26, #3
  425b6c:	mov	x0, x21
  425b70:	bl	402440 <malloc@plt>
  425b74:	mov	x22, x0
  425b78:	cbz	x0, 4260ac <_obstack_memory_used@@Base+0x75bc>
  425b7c:	ldr	x0, [sp, #104]
  425b80:	sub	x23, x23, #0x8
  425b84:	mov	x25, x20
  425b88:	str	wzr, [sp, #136]
  425b8c:	add	x26, x0, #0x8
  425b90:	add	x0, x22, x23
  425b94:	stp	x20, x0, [sp, #112]
  425b98:	add	x0, x0, x23
  425b9c:	mov	x23, #0x0                   	// #0
  425ba0:	str	x0, [sp, #128]
  425ba4:	stp	xzr, xzr, [sp, #192]
  425ba8:	stp	xzr, xzr, [sp, #208]
  425bac:	mov	x28, #0x0                   	// #0
  425bb0:	ldr	x5, [x26]
  425bb4:	str	xzr, [sp, #176]
  425bb8:	cmp	x5, #0x0
  425bbc:	b.le	425c04 <_obstack_memory_used@@Base+0x7114>
  425bc0:	ldr	x3, [x26, #8]
  425bc4:	add	x0, sp, #0xa8
  425bc8:	ldr	x1, [x24, #24]
  425bcc:	ldr	x3, [x3, x28, lsl #3]
  425bd0:	add	x28, x28, #0x1
  425bd4:	ldr	x3, [x1, x3, lsl #3]
  425bd8:	cmn	x3, #0x1
  425bdc:	b.eq	425bfc <_obstack_memory_used@@Base+0x710c>  // b.none
  425be0:	ldr	x1, [x24, #48]
  425be4:	add	x3, x3, x3, lsl #1
  425be8:	add	x1, x1, x3, lsl #3
  425bec:	bl	420010 <_obstack_memory_used@@Base+0x1520>
  425bf0:	str	w0, [sp, #164]
  425bf4:	cbnz	w0, 4260a0 <_obstack_memory_used@@Base+0x75b0>
  425bf8:	ldr	x5, [x26]
  425bfc:	cmp	x28, x5
  425c00:	b.lt	425bc0 <_obstack_memory_used@@Base+0x70d0>  // b.tstop
  425c04:	add	x2, sp, #0xa8
  425c08:	mov	x1, x24
  425c0c:	add	x0, sp, #0xa4
  425c10:	mov	w3, #0x0                   	// #0
  425c14:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  425c18:	str	x0, [x22, x23, lsl #3]
  425c1c:	cbz	x0, 426098 <_obstack_memory_used@@Base+0x75a8>
  425c20:	ldrsb	w1, [x0, #104]
  425c24:	tbnz	w1, #31, 4262b4 <_obstack_memory_used@@Base+0x77c4>
  425c28:	ldr	x1, [sp, #120]
  425c2c:	str	x0, [x1, x23, lsl #3]
  425c30:	ldr	x1, [sp, #128]
  425c34:	str	x0, [x1, x23, lsl #3]
  425c38:	ldp	x2, x5, [x25]
  425c3c:	add	x23, x23, #0x1
  425c40:	ldp	x0, x3, [sp, #192]
  425c44:	cmp	x23, x19
  425c48:	ldr	x1, [sp, #208]
  425c4c:	add	x26, x26, #0x18
  425c50:	add	x25, x25, #0x20
  425c54:	orr	x2, x2, x0
  425c58:	str	x2, [sp, #192]
  425c5c:	orr	x3, x3, x5
  425c60:	ldur	x5, [x25, #-16]
  425c64:	str	x3, [sp, #200]
  425c68:	ldr	x0, [sp, #216]
  425c6c:	orr	x1, x1, x5
  425c70:	ldur	x3, [x25, #-8]
  425c74:	orr	x0, x0, x3
  425c78:	stp	x1, x0, [sp, #208]
  425c7c:	b.ne	425bac <_obstack_memory_used@@Base+0x70bc>  // b.any
  425c80:	ldr	w0, [sp, #136]
  425c84:	str	x2, [sp, #152]
  425c88:	cbnz	w0, 4263f4 <_obstack_memory_used@@Base+0x7904>
  425c8c:	mov	x1, #0x100                 	// #256
  425c90:	mov	x0, #0x8                   	// #8
  425c94:	bl	402520 <calloc@plt>
  425c98:	mov	x8, x0
  425c9c:	ldr	x0, [sp, #144]
  425ca0:	str	x8, [x0, #88]
  425ca4:	cbz	x8, 4260a0 <_obstack_memory_used@@Base+0x75b0>
  425ca8:	ldr	x2, [sp, #152]
  425cac:	add	x6, x24, #0xb8
  425cb0:	add	x9, sp, #0xc0
  425cb4:	mov	x7, #0x0                   	// #0
  425cb8:	ldr	x0, [x9]
  425cbc:	add	x4, x8, x7, lsl #9
  425cc0:	mov	x1, #0x1                   	// #1
  425cc4:	cbz	x0, 425cdc <_obstack_memory_used@@Base+0x71ec>
  425cc8:	tbnz	w0, #0, 42634c <_obstack_memory_used@@Base+0x785c>
  425ccc:	lsl	x1, x1, #1
  425cd0:	lsr	x0, x0, #1
  425cd4:	add	x4, x4, #0x8
  425cd8:	cbnz	x0, 425cc8 <_obstack_memory_used@@Base+0x71d8>
  425cdc:	ldr	x0, [sp, #112]
  425ce0:	add	x7, x7, #0x1
  425ce4:	add	x9, x9, #0x8
  425ce8:	cmp	x7, #0x4
  425cec:	add	x0, x0, #0x8
  425cf0:	str	x0, [sp, #112]
  425cf4:	b.ne	425cb8 <_obstack_memory_used@@Base+0x71c8>  // b.any
  425cf8:	tst	w2, #0x400
  425cfc:	b.eq	425d20 <_obstack_memory_used@@Base+0x7230>  // b.none
  425d00:	mov	x0, #0x0                   	// #0
  425d04:	lsl	x1, x0, #5
  425d08:	ldr	x1, [x20, x1]
  425d0c:	tst	w1, #0x400
  425d10:	b.ne	4263d8 <_obstack_memory_used@@Base+0x78e8>  // b.any
  425d14:	add	x0, x0, #0x1
  425d18:	cmp	x0, x19
  425d1c:	b.ne	425d04 <_obstack_memory_used@@Base+0x7214>  // b.any
  425d20:	mov	x0, x22
  425d24:	bl	4026b0 <free@plt>
  425d28:	ldr	x0, [sp, #184]
  425d2c:	ldr	x19, [sp, #104]
  425d30:	add	x26, x19, x21
  425d34:	bl	4026b0 <free@plt>
  425d38:	ldr	x0, [x19, #16]
  425d3c:	add	x19, x19, #0x18
  425d40:	bl	4026b0 <free@plt>
  425d44:	cmp	x19, x26
  425d48:	b.ne	425d38 <_obstack_memory_used@@Base+0x7248>  // b.any
  425d4c:	ldr	x0, [sp, #104]
  425d50:	bl	4026b0 <free@plt>
  425d54:	mov	w0, #0x1                   	// #1
  425d58:	ldp	x19, x20, [sp, #16]
  425d5c:	ldp	x21, x22, [sp, #32]
  425d60:	ldp	x25, x26, [sp, #64]
  425d64:	ldp	x27, x28, [sp, #80]
  425d68:	b	4260f8 <_obstack_memory_used@@Base+0x7608>
  425d6c:	ldrb	w2, [x2, x1]
  425d70:	add	x3, sp, #0xc0
  425d74:	mov	x1, #0x1                   	// #1
  425d78:	ubfx	x4, x2, #6, #2
  425d7c:	lsl	x2, x1, x2
  425d80:	ldr	x1, [x3, x4, lsl #3]
  425d84:	orr	x1, x1, x2
  425d88:	str	x1, [x3, x4, lsl #3]
  425d8c:	cbz	w0, 425e90 <_obstack_memory_used@@Base+0x73a0>
  425d90:	tbnz	w0, #5, 426060 <_obstack_memory_used@@Base+0x7570>
  425d94:	tbnz	w0, #7, 426080 <_obstack_memory_used@@Base+0x7590>
  425d98:	tbz	w0, #2, 425e14 <_obstack_memory_used@@Base+0x7324>
  425d9c:	cmp	w10, #0x1
  425da0:	b.eq	42620c <_obstack_memory_used@@Base+0x771c>  // b.none
  425da4:	ldr	w1, [x24, #180]
  425da8:	ldp	x15, x14, [x24, #184]
  425dac:	cmp	w1, #0x1
  425db0:	ldp	x2, x5, [sp, #192]
  425db4:	ldp	x3, x4, [x24, #200]
  425db8:	ldp	x13, x9, [sp, #208]
  425dbc:	b.le	4261e0 <_obstack_memory_used@@Base+0x76f0>
  425dc0:	ldr	x12, [x24, #120]
  425dc4:	ldr	x1, [x12]
  425dc8:	orn	x1, x15, x1
  425dcc:	and	x1, x1, x2
  425dd0:	str	x1, [sp, #192]
  425dd4:	ldr	x2, [x12, #8]
  425dd8:	orn	x2, x14, x2
  425ddc:	and	x2, x2, x5
  425de0:	str	x2, [sp, #200]
  425de4:	orr	x1, x1, x2
  425de8:	ldr	x2, [x12, #16]
  425dec:	orn	x2, x3, x2
  425df0:	and	x2, x2, x13
  425df4:	str	x2, [sp, #208]
  425df8:	ldr	x3, [x12, #24]
  425dfc:	orn	x3, x4, x3
  425e00:	and	x3, x3, x9
  425e04:	str	x3, [sp, #216]
  425e08:	orr	x2, x2, x3
  425e0c:	orr	x1, x1, x2
  425e10:	cbz	x1, 425b24 <_obstack_memory_used@@Base+0x7034>
  425e14:	tbz	w0, #3, 425e90 <_obstack_memory_used@@Base+0x73a0>
  425e18:	cmp	w10, #0x1
  425e1c:	b.eq	4262a8 <_obstack_memory_used@@Base+0x77b8>  // b.none
  425e20:	ldr	w0, [x24, #180]
  425e24:	ldp	x4, x12, [sp, #192]
  425e28:	cmp	w0, #0x1
  425e2c:	ldp	x0, x2, [x24, #184]
  425e30:	ldp	x1, x3, [x24, #200]
  425e34:	ldp	x13, x9, [sp, #208]
  425e38:	b.le	4261b4 <_obstack_memory_used@@Base+0x76c4>
  425e3c:	ldr	x5, [x24, #120]
  425e40:	ldr	x14, [x5]
  425e44:	and	x0, x0, x14
  425e48:	bic	x0, x4, x0
  425e4c:	str	x0, [sp, #192]
  425e50:	ldr	x4, [x5, #8]
  425e54:	and	x2, x2, x4
  425e58:	bic	x2, x12, x2
  425e5c:	str	x2, [sp, #200]
  425e60:	orr	x0, x0, x2
  425e64:	ldr	x2, [x5, #16]
  425e68:	and	x1, x1, x2
  425e6c:	bic	x1, x13, x1
  425e70:	str	x1, [sp, #208]
  425e74:	ldr	x2, [x5, #24]
  425e78:	and	x3, x3, x2
  425e7c:	bic	x3, x9, x3
  425e80:	str	x3, [sp, #216]
  425e84:	orr	x1, x1, x3
  425e88:	orr	x0, x0, x1
  425e8c:	cbz	x0, 425b24 <_obstack_memory_used@@Base+0x7034>
  425e90:	cmp	x19, #0x0
  425e94:	mov	x25, x20
  425e98:	mov	x26, #0x0                   	// #0
  425e9c:	ldr	x27, [sp, #104]
  425ea0:	b.gt	425ed4 <_obstack_memory_used@@Base+0x73e4>
  425ea4:	b	425ff8 <_obstack_memory_used@@Base+0x7508>
  425ea8:	ldrb	w2, [x21]
  425eac:	ubfx	x1, x2, #6, #2
  425eb0:	add	x1, x20, x1, lsl #3
  425eb4:	ldr	x0, [x1, x0]
  425eb8:	lsr	x0, x0, x2
  425ebc:	tbnz	w0, #0, 425ee0 <_obstack_memory_used@@Base+0x73f0>
  425ec0:	add	x26, x26, #0x1
  425ec4:	add	x25, x25, #0x20
  425ec8:	cmp	x26, x19
  425ecc:	add	x27, x27, #0x18
  425ed0:	b.ge	425ff8 <_obstack_memory_used@@Base+0x7508>  // b.tcont
  425ed4:	cmp	w10, #0x1
  425ed8:	lsl	x0, x26, #5
  425edc:	b.eq	425ea8 <_obstack_memory_used@@Base+0x73b8>  // b.none
  425ee0:	ldp	x28, x0, [x25]
  425ee4:	ldp	x5, x4, [x25, #16]
  425ee8:	ldp	x1, x14, [sp, #192]
  425eec:	ldp	x13, x12, [sp, #208]
  425ef0:	and	x18, x1, x28
  425ef4:	and	x17, x14, x0
  425ef8:	orr	x30, x18, x17
  425efc:	and	x16, x13, x5
  425f00:	and	x15, x12, x4
  425f04:	orr	x2, x16, x15
  425f08:	orr	x2, x2, x30
  425f0c:	cbz	x2, 425ec0 <_obstack_memory_used@@Base+0x73d0>
  425f10:	bic	x30, x14, x0
  425f14:	bic	x2, x28, x1
  425f18:	bic	x0, x0, x14
  425f1c:	bic	x28, x1, x28
  425f20:	bic	x14, x13, x5
  425f24:	bic	x5, x5, x13
  425f28:	bic	x13, x12, x4
  425f2c:	bic	x4, x4, x12
  425f30:	stp	x28, x30, [sp, #192]
  425f34:	orr	x1, x14, x13
  425f38:	orr	x12, x2, x0
  425f3c:	stp	x14, x13, [sp, #208]
  425f40:	orr	x28, x28, x30
  425f44:	orr	x13, x5, x4
  425f48:	orr	x28, x28, x1
  425f4c:	orr	x1, x12, x13
  425f50:	cbz	x1, 425fd0 <_obstack_memory_used@@Base+0x74e0>
  425f54:	lsl	x1, x19, #5
  425f58:	add	x12, x19, x19, lsl #1
  425f5c:	add	x13, x20, x1
  425f60:	ldr	x3, [sp, #104]
  425f64:	str	x2, [x20, x1]
  425f68:	stp	x0, x5, [x13, #8]
  425f6c:	str	x4, [x13, #24]
  425f70:	add	x1, x3, x12, lsl #3
  425f74:	stp	x18, x17, [x25]
  425f78:	stp	x16, x15, [x25, #16]
  425f7c:	ldr	x0, [x27, #8]
  425f80:	str	x0, [x1, #8]
  425f84:	cmp	x0, #0x0
  425f88:	b.le	42608c <_obstack_memory_used@@Base+0x759c>
  425f8c:	lsl	x2, x0, #3
  425f90:	str	x0, [x3, x12, lsl #3]
  425f94:	mov	x0, x2
  425f98:	str	x2, [sp, #112]
  425f9c:	str	w10, [sp, #128]
  425fa0:	str	x1, [sp, #136]
  425fa4:	bl	402440 <malloc@plt>
  425fa8:	ldr	x1, [sp, #136]
  425fac:	ldr	w10, [sp, #128]
  425fb0:	ldr	x2, [sp, #112]
  425fb4:	str	x0, [x1, #16]
  425fb8:	cbz	x0, 426104 <_obstack_memory_used@@Base+0x7614>
  425fbc:	ldr	x1, [x27, #16]
  425fc0:	str	w10, [sp, #112]
  425fc4:	bl	4022a0 <memcpy@plt>
  425fc8:	ldr	w10, [sp, #112]
  425fcc:	add	x19, x19, #0x1
  425fd0:	ldr	x1, [x23, #16]
  425fd4:	mov	x0, x27
  425fd8:	ldr	x2, [sp, #120]
  425fdc:	str	w10, [sp, #112]
  425fe0:	ldr	x1, [x1, x2]
  425fe4:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  425fe8:	tst	w0, #0xff
  425fec:	b.eq	426108 <_obstack_memory_used@@Base+0x7618>  // b.none
  425ff0:	ldr	w10, [sp, #112]
  425ff4:	cbnz	x28, 425ec0 <_obstack_memory_used@@Base+0x73d0>
  425ff8:	cmp	x26, x19
  425ffc:	b.ne	425b24 <_obstack_memory_used@@Base+0x7034>  // b.any
  426000:	add	x5, x20, x19, lsl #5
  426004:	add	x4, x19, x19, lsl #1
  426008:	ldp	x0, x1, [sp, #192]
  42600c:	lsl	x4, x4, #3
  426010:	ldr	x9, [x23, #16]
  426014:	ldp	x2, x3, [sp, #208]
  426018:	stp	x0, x1, [x5]
  42601c:	mov	x0, #0x8                   	// #8
  426020:	ldr	x1, [sp, #120]
  426024:	stp	x2, x3, [x5, #16]
  426028:	ldr	x6, [sp, #104]
  42602c:	ldr	x25, [x9, x1]
  426030:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x12510>
  426034:	add	x28, x6, x4
  426038:	ldr	q0, [x1, #2768]
  42603c:	str	q0, [x6, x4]
  426040:	bl	402440 <malloc@plt>
  426044:	str	x0, [x28, #16]
  426048:	cbz	x0, 426340 <_obstack_memory_used@@Base+0x7850>
  42604c:	add	x19, x19, #0x1
  426050:	str	x25, [x0]
  426054:	stp	xzr, xzr, [sp, #192]
  426058:	stp	xzr, xzr, [sp, #208]
  42605c:	b	425b24 <_obstack_memory_used@@Base+0x7034>
  426060:	ldr	x1, [sp, #192]
  426064:	stp	xzr, xzr, [sp, #192]
  426068:	stp	xzr, xzr, [sp, #208]
  42606c:	tst	w1, #0x400
  426070:	b.eq	425b24 <_obstack_memory_used@@Base+0x7034>  // b.none
  426074:	mov	x1, #0x400                 	// #1024
  426078:	str	x1, [sp, #192]
  42607c:	tbz	w0, #7, 425d98 <_obstack_memory_used@@Base+0x72a8>
  426080:	stp	xzr, xzr, [sp, #192]
  426084:	stp	xzr, xzr, [sp, #208]
  426088:	b	425b24 <_obstack_memory_used@@Base+0x7034>
  42608c:	stp	xzr, xzr, [x1]
  426090:	str	xzr, [x1, #16]
  426094:	b	425fcc <_obstack_memory_used@@Base+0x74dc>
  426098:	ldr	w1, [sp, #164]
  42609c:	cbz	w1, 425c20 <_obstack_memory_used@@Base+0x7130>
  4260a0:	mov	x0, x22
  4260a4:	bl	4026b0 <free@plt>
  4260a8:	ldr	x25, [sp, #184]
  4260ac:	mov	x0, x25
  4260b0:	bl	4026b0 <free@plt>
  4260b4:	add	x19, x27, x19
  4260b8:	ldr	x0, [sp, #104]
  4260bc:	mov	x20, x0
  4260c0:	add	x19, x0, x19, lsl #3
  4260c4:	nop
  4260c8:	ldr	x0, [x20, #16]
  4260cc:	add	x20, x20, #0x18
  4260d0:	bl	4026b0 <free@plt>
  4260d4:	cmp	x19, x20
  4260d8:	b.ne	4260c8 <_obstack_memory_used@@Base+0x75d8>  // b.any
  4260dc:	ldr	x0, [sp, #104]
  4260e0:	bl	4026b0 <free@plt>
  4260e4:	ldp	x19, x20, [sp, #16]
  4260e8:	mov	w0, #0x0                   	// #0
  4260ec:	ldp	x21, x22, [sp, #32]
  4260f0:	ldp	x25, x26, [sp, #64]
  4260f4:	ldp	x27, x28, [sp, #80]
  4260f8:	ldp	x23, x24, [sp, #48]
  4260fc:	ldp	x29, x30, [sp], #224
  426100:	ret
  426104:	stp	xzr, xzr, [x1]
  426108:	mov	x20, #0x0                   	// #0
  42610c:	ldr	x0, [sp, #104]
  426110:	add	x22, x0, #0x10
  426114:	nop
  426118:	ldr	x0, [x22], #24
  42611c:	add	x20, x20, #0x1
  426120:	bl	4026b0 <free@plt>
  426124:	cmp	x20, x19
  426128:	b.lt	426118 <_obstack_memory_used@@Base+0x7628>  // b.tstop
  42612c:	b	4260dc <_obstack_memory_used@@Base+0x75ec>
  426130:	ldr	w1, [x24, #180]
  426134:	cmp	w1, #0x1
  426138:	b.le	42619c <_obstack_memory_used@@Base+0x76ac>
  42613c:	ldr	x2, [x24, #120]
  426140:	ldp	x1, x5, [sp, #192]
  426144:	ldr	x3, [x2]
  426148:	ldr	x4, [sp, #208]
  42614c:	orr	x1, x1, x3
  426150:	str	x1, [sp, #192]
  426154:	ldr	x3, [sp, #216]
  426158:	ldr	x9, [x2, #8]
  42615c:	orr	x5, x5, x9
  426160:	str	x5, [sp, #200]
  426164:	ldr	x5, [x2, #16]
  426168:	orr	x4, x4, x5
  42616c:	str	x4, [sp, #208]
  426170:	ldr	x2, [x2, #24]
  426174:	orr	x2, x3, x2
  426178:	str	x2, [sp, #216]
  42617c:	ldr	x2, [x24, #216]
  426180:	tbnz	w2, #6, 42618c <_obstack_memory_used@@Base+0x769c>
  426184:	and	x1, x1, #0xfffffffffffffbff
  426188:	str	x1, [sp, #192]
  42618c:	tbz	w2, #7, 425d8c <_obstack_memory_used@@Base+0x729c>
  426190:	and	x1, x1, #0xfffffffffffffffe
  426194:	str	x1, [sp, #192]
  426198:	b	425d8c <_obstack_memory_used@@Base+0x729c>
  42619c:	mov	x2, #0xffffffffffffffff    	// #-1
  4261a0:	mov	x3, #0xffffffffffffffff    	// #-1
  4261a4:	mov	x1, #0xffffffffffffffff    	// #-1
  4261a8:	stp	x2, x3, [sp, #192]
  4261ac:	stp	x2, x3, [sp, #208]
  4261b0:	b	42617c <_obstack_memory_used@@Base+0x768c>
  4261b4:	bic	x4, x4, x0
  4261b8:	bic	x2, x12, x2
  4261bc:	bic	x1, x13, x1
  4261c0:	bic	x3, x9, x3
  4261c4:	stp	x4, x2, [sp, #192]
  4261c8:	orr	x0, x4, x2
  4261cc:	orr	x5, x1, x3
  4261d0:	stp	x1, x3, [sp, #208]
  4261d4:	orr	x0, x0, x5
  4261d8:	cbz	x0, 425b24 <_obstack_memory_used@@Base+0x7034>
  4261dc:	b	425e90 <_obstack_memory_used@@Base+0x73a0>
  4261e0:	and	x13, x13, x3
  4261e4:	and	x2, x2, x15
  4261e8:	and	x5, x5, x14
  4261ec:	and	x3, x9, x4
  4261f0:	stp	x2, x5, [sp, #192]
  4261f4:	orr	x1, x2, x5
  4261f8:	orr	x4, x13, x3
  4261fc:	stp	x13, x3, [sp, #208]
  426200:	orr	x1, x1, x4
  426204:	cbnz	x1, 425e14 <_obstack_memory_used@@Base+0x7324>
  426208:	b	425b24 <_obstack_memory_used@@Base+0x7034>
  42620c:	ldrb	w1, [x21, #10]
  426210:	tbz	w1, #6, 426080 <_obstack_memory_used@@Base+0x7590>
  426214:	ldr	w1, [x24, #180]
  426218:	ldp	x15, x14, [x24, #184]
  42621c:	cmp	w1, #0x1
  426220:	ldp	x2, x5, [sp, #192]
  426224:	ldp	x3, x4, [x24, #200]
  426228:	ldp	x13, x9, [sp, #208]
  42622c:	b.gt	425dc0 <_obstack_memory_used@@Base+0x72d0>
  426230:	b	4261e0 <_obstack_memory_used@@Base+0x76f0>
  426234:	ldr	x1, [x24, #216]
  426238:	mov	x2, #0xffffffffffffffff    	// #-1
  42623c:	mov	x3, #0xffffffffffffffff    	// #-1
  426240:	stp	x2, x3, [sp, #192]
  426244:	mov	x2, #0xfffffffffffffffe    	// #-2
  426248:	tbnz	w1, #6, 426258 <_obstack_memory_used@@Base+0x7768>
  42624c:	mov	x3, #0xfffffffffffffbff    	// #-1025
  426250:	mov	x2, #0xfffffffffffffbfe    	// #-1026
  426254:	str	x3, [sp, #192]
  426258:	tbz	w1, #7, 425d8c <_obstack_memory_used@@Base+0x729c>
  42625c:	str	x2, [sp, #192]
  426260:	b	425d8c <_obstack_memory_used@@Base+0x729c>
  426264:	ldr	x1, [x2, x1]
  426268:	ldp	x2, x4, [sp, #192]
  42626c:	ldr	x3, [x1]
  426270:	orr	x2, x2, x3
  426274:	str	x2, [sp, #192]
  426278:	ldr	x3, [sp, #208]
  42627c:	ldr	x5, [x1, #8]
  426280:	ldr	x2, [sp, #216]
  426284:	orr	x4, x4, x5
  426288:	str	x4, [sp, #200]
  42628c:	ldr	x4, [x1, #16]
  426290:	orr	x3, x3, x4
  426294:	str	x3, [sp, #208]
  426298:	ldr	x1, [x1, #24]
  42629c:	orr	x1, x2, x1
  4262a0:	str	x1, [sp, #216]
  4262a4:	b	425d8c <_obstack_memory_used@@Base+0x729c>
  4262a8:	ldrb	w0, [x21, #10]
  4262ac:	tbz	w0, #6, 425e20 <_obstack_memory_used@@Base+0x7330>
  4262b0:	b	426080 <_obstack_memory_used@@Base+0x7590>
  4262b4:	mov	x1, x24
  4262b8:	add	x2, sp, #0xa8
  4262bc:	add	x0, sp, #0xa4
  4262c0:	mov	w3, #0x1                   	// #1
  4262c4:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  4262c8:	ldr	x1, [sp, #120]
  4262cc:	str	x0, [x1, x23, lsl #3]
  4262d0:	cbz	x0, 4263cc <_obstack_memory_used@@Base+0x78dc>
  4262d4:	ldr	x1, [x22, x23, lsl #3]
  4262d8:	cmp	x0, x1
  4262dc:	b.eq	4262f4 <_obstack_memory_used@@Base+0x7804>  // b.none
  4262e0:	ldr	w0, [x24, #180]
  4262e4:	cmp	w0, #0x2
  4262e8:	ldr	w0, [sp, #136]
  4262ec:	csinc	w0, w0, wzr, lt  // lt = tstop
  4262f0:	str	w0, [sp, #136]
  4262f4:	mov	x1, x24
  4262f8:	add	x2, sp, #0xa8
  4262fc:	add	x0, sp, #0xa4
  426300:	mov	w3, #0x2                   	// #2
  426304:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  426308:	ldr	x1, [sp, #128]
  42630c:	str	x0, [x1, x23, lsl #3]
  426310:	cbnz	x0, 425c38 <_obstack_memory_used@@Base+0x7148>
  426314:	ldr	w0, [sp, #164]
  426318:	cbz	w0, 425c38 <_obstack_memory_used@@Base+0x7148>
  42631c:	b	4260a0 <_obstack_memory_used@@Base+0x75b0>
  426320:	ldp	x19, x20, [sp, #16]
  426324:	ldp	x21, x22, [sp, #32]
  426328:	ldp	x25, x26, [sp, #64]
  42632c:	ldp	x27, x28, [sp, #80]
  426330:	mov	w0, #0x0                   	// #0
  426334:	ldp	x23, x24, [sp, #48]
  426338:	ldp	x29, x30, [sp], #224
  42633c:	ret
  426340:	stp	xzr, xzr, [x28]
  426344:	cbz	x19, 4260dc <_obstack_memory_used@@Base+0x75ec>
  426348:	b	426108 <_obstack_memory_used@@Base+0x7618>
  42634c:	ldr	x3, [sp, #112]
  426350:	ldr	x3, [x3]
  426354:	tst	x1, x3
  426358:	mov	x3, #0x0                   	// #0
  42635c:	b.ne	42637c <_obstack_memory_used@@Base+0x788c>  // b.any
  426360:	add	x3, x3, #0x1
  426364:	ldr	x10, [sp, #112]
  426368:	lsl	x5, x3, #5
  42636c:	ldr	x5, [x10, x5]
  426370:	tst	x1, x5
  426374:	b.eq	426360 <_obstack_memory_used@@Base+0x7870>  // b.none
  426378:	lsl	x3, x3, #3
  42637c:	ldr	x5, [x6, x7, lsl #3]
  426380:	tst	x1, x5
  426384:	b.eq	426398 <_obstack_memory_used@@Base+0x78a8>  // b.none
  426388:	ldr	x5, [sp, #120]
  42638c:	ldr	x3, [x5, x3]
  426390:	str	x3, [x4]
  426394:	b	425ccc <_obstack_memory_used@@Base+0x71dc>
  426398:	ldr	x3, [x22, x3]
  42639c:	str	x3, [x4]
  4263a0:	b	425ccc <_obstack_memory_used@@Base+0x71dc>
  4263a4:	bl	4026b0 <free@plt>
  4263a8:	mov	x1, #0x100                 	// #256
  4263ac:	mov	x0, #0x8                   	// #8
  4263b0:	bl	402520 <calloc@plt>
  4263b4:	cmp	x0, #0x0
  4263b8:	ldr	x1, [sp, #144]
  4263bc:	ldp	x19, x20, [sp, #16]
  4263c0:	str	x0, [x1, #88]
  4263c4:	cset	w0, ne  // ne = any
  4263c8:	b	4260f8 <_obstack_memory_used@@Base+0x7608>
  4263cc:	ldr	w1, [sp, #164]
  4263d0:	cbz	w1, 4262d4 <_obstack_memory_used@@Base+0x77e4>
  4263d4:	b	4260a0 <_obstack_memory_used@@Base+0x75b0>
  4263d8:	ldr	x1, [sp, #128]
  4263dc:	ldr	x0, [x1, x0, lsl #3]
  4263e0:	str	x0, [x8, #80]
  4263e4:	ldr	w1, [sp, #136]
  4263e8:	cbz	w1, 425d20 <_obstack_memory_used@@Base+0x7230>
  4263ec:	str	x0, [x8, #2128]
  4263f0:	b	425d20 <_obstack_memory_used@@Base+0x7230>
  4263f4:	mov	x1, #0x200                 	// #512
  4263f8:	mov	x0, #0x8                   	// #8
  4263fc:	bl	402520 <calloc@plt>
  426400:	mov	x8, x0
  426404:	ldr	x0, [sp, #144]
  426408:	str	x8, [x0, #96]
  42640c:	cbz	x8, 4260a0 <_obstack_memory_used@@Base+0x75b0>
  426410:	ldr	x2, [sp, #152]
  426414:	add	x10, sp, #0xc0
  426418:	add	x9, x8, #0x800
  42641c:	mov	w7, #0x0                   	// #0
  426420:	ldr	x0, [x10]
  426424:	mov	x4, x9
  426428:	mov	x3, #0x1                   	// #1
  42642c:	cbz	x0, 426444 <_obstack_memory_used@@Base+0x7954>
  426430:	tbnz	w0, #0, 426468 <_obstack_memory_used@@Base+0x7978>
  426434:	lsl	x3, x3, #1
  426438:	lsr	x0, x0, #1
  42643c:	add	x4, x4, #0x8
  426440:	cbnz	x0, 426430 <_obstack_memory_used@@Base+0x7940>
  426444:	ldr	x0, [sp, #112]
  426448:	add	w7, w7, #0x40
  42644c:	add	x10, x10, #0x8
  426450:	cmp	w7, #0x100
  426454:	add	x0, x0, #0x8
  426458:	str	x0, [sp, #112]
  42645c:	add	x9, x9, #0x200
  426460:	b.ne	426420 <_obstack_memory_used@@Base+0x7930>  // b.any
  426464:	b	425cf8 <_obstack_memory_used@@Base+0x7208>
  426468:	ldr	x1, [sp, #112]
  42646c:	ldr	x1, [x1]
  426470:	tst	x3, x1
  426474:	b.ne	4264b4 <_obstack_memory_used@@Base+0x79c4>  // b.any
  426478:	mov	x1, #0x0                   	// #0
  42647c:	add	x1, x1, #0x1
  426480:	ldr	x11, [sp, #112]
  426484:	lsl	x5, x1, #5
  426488:	mov	x6, x1
  42648c:	ldr	x5, [x11, x5]
  426490:	tst	x3, x5
  426494:	b.eq	42647c <_obstack_memory_used@@Base+0x798c>  // b.none
  426498:	sub	x1, x4, #0x8, lsl #12
  42649c:	ldr	x5, [x22, x6, lsl #3]
  4264a0:	str	x5, [x1, #30720]
  4264a4:	ldr	x1, [sp, #120]
  4264a8:	ldr	x1, [x1, x6, lsl #3]
  4264ac:	str	x1, [x4]
  4264b0:	b	426434 <_obstack_memory_used@@Base+0x7944>
  4264b4:	mov	x6, #0x0                   	// #0
  4264b8:	b	426498 <_obstack_memory_used@@Base+0x79a8>
  4264bc:	ldr	x0, [sp, #104]
  4264c0:	bl	4026b0 <free@plt>
  4264c4:	cbnz	x19, 426320 <_obstack_memory_used@@Base+0x7830>
  4264c8:	ldp	x21, x22, [sp, #32]
  4264cc:	ldp	x25, x26, [sp, #64]
  4264d0:	ldp	x27, x28, [sp, #80]
  4264d4:	b	4263a8 <_obstack_memory_used@@Base+0x78b8>
  4264d8:	stp	x29, x30, [sp, #-64]!
  4264dc:	mov	x29, sp
  4264e0:	stp	x19, x20, [sp, #16]
  4264e4:	mov	x20, x0
  4264e8:	mov	x19, x2
  4264ec:	cbz	x1, 426514 <_obstack_memory_used@@Base+0x7a24>
  4264f0:	stp	x21, x22, [sp, #32]
  4264f4:	cmp	x2, #0x0
  4264f8:	mov	x21, x1
  4264fc:	ldr	x22, [x1, #8]
  426500:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  426504:	b.gt	42653c <_obstack_memory_used@@Base+0x7a4c>
  426508:	cmp	x22, #0x0
  42650c:	b.gt	426550 <_obstack_memory_used@@Base+0x7a60>
  426510:	ldp	x21, x22, [sp, #32]
  426514:	cbz	x19, 426524 <_obstack_memory_used@@Base+0x7a34>
  426518:	ldr	x2, [x19, #8]
  42651c:	cmp	x2, #0x0
  426520:	b.gt	426584 <_obstack_memory_used@@Base+0x7a94>
  426524:	mov	w0, #0x0                   	// #0
  426528:	stp	xzr, xzr, [x20]
  42652c:	str	xzr, [x20, #16]
  426530:	ldp	x19, x20, [sp, #16]
  426534:	ldp	x29, x30, [sp], #64
  426538:	ret
  42653c:	str	x23, [sp, #48]
  426540:	ldr	x23, [x2, #8]
  426544:	cmp	x23, #0x0
  426548:	b.gt	4265c4 <_obstack_memory_used@@Base+0x7ad4>
  42654c:	ldr	x23, [sp, #48]
  426550:	dup	v0.2d, x22
  426554:	lsl	x22, x22, #3
  426558:	mov	x0, x22
  42655c:	str	q0, [x20]
  426560:	bl	402440 <malloc@plt>
  426564:	str	x0, [x20, #16]
  426568:	cbz	x0, 426690 <_obstack_memory_used@@Base+0x7ba0>
  42656c:	ldr	x1, [x21, #16]
  426570:	mov	x2, x22
  426574:	bl	4022a0 <memcpy@plt>
  426578:	mov	w0, #0x0                   	// #0
  42657c:	ldp	x21, x22, [sp, #32]
  426580:	b	426530 <_obstack_memory_used@@Base+0x7a40>
  426584:	dup	v0.2d, x2
  426588:	stp	x21, x22, [sp, #32]
  42658c:	lsl	x21, x2, #3
  426590:	mov	x0, x21
  426594:	str	q0, [x20]
  426598:	bl	402440 <malloc@plt>
  42659c:	str	x0, [x20, #16]
  4265a0:	cbz	x0, 426690 <_obstack_memory_used@@Base+0x7ba0>
  4265a4:	ldr	x1, [x19, #16]
  4265a8:	mov	x2, x21
  4265ac:	bl	4022a0 <memcpy@plt>
  4265b0:	mov	w0, #0x0                   	// #0
  4265b4:	ldp	x19, x20, [sp, #16]
  4265b8:	ldp	x21, x22, [sp, #32]
  4265bc:	ldp	x29, x30, [sp], #64
  4265c0:	ret
  4265c4:	add	x0, x22, x23
  4265c8:	str	x0, [x20]
  4265cc:	lsl	x0, x0, #3
  4265d0:	bl	402440 <malloc@plt>
  4265d4:	str	x0, [x20, #16]
  4265d8:	cbz	x0, 4266a0 <_obstack_memory_used@@Base+0x7bb0>
  4265dc:	sub	x7, x0, #0x8
  4265e0:	mov	x3, #0x0                   	// #0
  4265e4:	mov	x4, #0x0                   	// #0
  4265e8:	ldr	x6, [x19, #16]
  4265ec:	mov	x19, #0x0                   	// #0
  4265f0:	ldr	x1, [x21, #16]
  4265f4:	b	426614 <_obstack_memory_used@@Base+0x7b24>
  4265f8:	cinc	x3, x3, eq  // eq = none
  4265fc:	add	x4, x4, #0x1
  426600:	str	x2, [x7, x19, lsl #3]
  426604:	cmp	x22, x4
  426608:	b.le	426634 <_obstack_memory_used@@Base+0x7b44>
  42660c:	cmp	x23, x3
  426610:	b.le	426674 <_obstack_memory_used@@Base+0x7b84>
  426614:	ldr	x2, [x1, x4, lsl #3]
  426618:	add	x19, x19, #0x1
  42661c:	ldr	x5, [x6, x3, lsl #3]
  426620:	cmp	x2, x5
  426624:	b.le	4265f8 <_obstack_memory_used@@Base+0x7b08>
  426628:	add	x3, x3, #0x1
  42662c:	str	x5, [x7, x19, lsl #3]
  426630:	b	426604 <_obstack_memory_used@@Base+0x7b14>
  426634:	cmp	x23, x3
  426638:	b.gt	426658 <_obstack_memory_used@@Base+0x7b68>
  42663c:	ldp	x21, x22, [sp, #32]
  426640:	mov	w0, #0x0                   	// #0
  426644:	ldr	x23, [sp, #48]
  426648:	str	x19, [x20, #8]
  42664c:	ldp	x19, x20, [sp, #16]
  426650:	ldp	x29, x30, [sp], #64
  426654:	ret
  426658:	sub	x2, x23, x3
  42665c:	add	x0, x0, x19, lsl #3
  426660:	add	x1, x6, x3, lsl #3
  426664:	add	x19, x19, x2
  426668:	lsl	x2, x2, #3
  42666c:	bl	4022a0 <memcpy@plt>
  426670:	b	42663c <_obstack_memory_used@@Base+0x7b4c>
  426674:	sub	x2, x22, x4
  426678:	add	x1, x1, x4, lsl #3
  42667c:	add	x0, x0, x19, lsl #3
  426680:	add	x19, x19, x2
  426684:	lsl	x2, x2, #3
  426688:	bl	4022a0 <memcpy@plt>
  42668c:	b	42663c <_obstack_memory_used@@Base+0x7b4c>
  426690:	mov	w0, #0xc                   	// #12
  426694:	stp	xzr, xzr, [x20]
  426698:	ldp	x21, x22, [sp, #32]
  42669c:	b	426530 <_obstack_memory_used@@Base+0x7a40>
  4266a0:	mov	w0, #0xc                   	// #12
  4266a4:	ldp	x21, x22, [sp, #32]
  4266a8:	ldr	x23, [sp, #48]
  4266ac:	b	426530 <_obstack_memory_used@@Base+0x7a40>
  4266b0:	stp	x29, x30, [sp, #-224]!
  4266b4:	mov	x29, sp
  4266b8:	stp	x19, x20, [sp, #16]
  4266bc:	ldr	x20, [x0, #72]
  4266c0:	stp	x25, x26, [sp, #64]
  4266c4:	stp	x27, x28, [sp, #80]
  4266c8:	mov	x28, x0
  4266cc:	lsl	x0, x20, #3
  4266d0:	ldr	x26, [x1]
  4266d4:	stp	x23, x24, [sp, #48]
  4266d8:	stp	x2, x0, [sp, #144]
  4266dc:	cmp	x26, #0x0
  4266e0:	str	x1, [sp, #176]
  4266e4:	ldr	x23, [x28, #152]
  4266e8:	b.le	426768 <_obstack_memory_used@@Base+0x7c78>
  4266ec:	stp	x21, x22, [sp, #32]
  4266f0:	mov	x22, #0x0                   	// #0
  4266f4:	nop
  4266f8:	ldr	x0, [sp, #144]
  4266fc:	ldr	x1, [x0]
  426700:	ldr	x0, [x23]
  426704:	ldr	x19, [x1, x22, lsl #3]
  426708:	lsl	x21, x19, #4
  42670c:	add	x0, x0, x21
  426710:	ldrb	w1, [x0, #8]
  426714:	cmp	w1, #0x4
  426718:	b.ne	426758 <_obstack_memory_used@@Base+0x7c68>  // b.any
  42671c:	ldr	w24, [x0, #8]
  426720:	tst	w24, #0x3ff00
  426724:	b.eq	426790 <_obstack_memory_used@@Base+0x7ca0>  // b.none
  426728:	ldr	w2, [x28, #160]
  42672c:	mov	x1, x20
  426730:	mov	x0, x28
  426734:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  426738:	ubfx	x1, x24, #8, #10
  42673c:	tbz	w24, #10, 426784 <_obstack_memory_used@@Base+0x7c94>
  426740:	tbz	w0, #0, 426758 <_obstack_memory_used@@Base+0x7c68>
  426744:	tbnz	w1, #3, 426758 <_obstack_memory_used@@Base+0x7c68>
  426748:	tbz	w1, #5, 426750 <_obstack_memory_used@@Base+0x7c60>
  42674c:	tbz	w0, #1, 426758 <_obstack_memory_used@@Base+0x7c68>
  426750:	tbz	w1, #7, 426790 <_obstack_memory_used@@Base+0x7ca0>
  426754:	tbnz	w0, #3, 426790 <_obstack_memory_used@@Base+0x7ca0>
  426758:	add	x22, x22, #0x1
  42675c:	cmp	x22, x26
  426760:	b.lt	4266f8 <_obstack_memory_used@@Base+0x7c08>  // b.tstop
  426764:	ldp	x21, x22, [sp, #32]
  426768:	mov	w0, #0x0                   	// #0
  42676c:	ldp	x19, x20, [sp, #16]
  426770:	ldp	x23, x24, [sp, #48]
  426774:	ldp	x25, x26, [sp, #64]
  426778:	ldp	x27, x28, [sp, #80]
  42677c:	ldp	x29, x30, [sp], #224
  426780:	ret
  426784:	tbz	w1, #3, 426748 <_obstack_memory_used@@Base+0x7c58>
  426788:	tbz	w0, #0, 426748 <_obstack_memory_used@@Base+0x7c58>
  42678c:	b	426758 <_obstack_memory_used@@Base+0x7c68>
  426790:	ldr	x5, [x28, #200]
  426794:	mov	x1, #0x0                   	// #0
  426798:	mov	x27, x5
  42679c:	mov	x3, x5
  4267a0:	b	4267c4 <_obstack_memory_used@@Base+0x7cd4>
  4267a4:	asr	x0, x0, #1
  4267a8:	ldr	x4, [x28, #216]
  4267ac:	add	x2, x0, x0, lsl #2
  4267b0:	add	x2, x4, x2, lsl #3
  4267b4:	ldr	x2, [x2, #8]
  4267b8:	cmp	x20, x2
  4267bc:	b.gt	4269e8 <_obstack_memory_used@@Base+0x7ef8>
  4267c0:	mov	x3, x0
  4267c4:	add	x0, x3, x1
  4267c8:	cmp	x3, x1
  4267cc:	b.gt	4267a4 <_obstack_memory_used@@Base+0x7cb4>
  4267d0:	cmp	x5, x1
  4267d4:	b.le	4269f0 <_obstack_memory_used@@Base+0x7f00>
  4267d8:	ldr	x0, [x28, #216]
  4267dc:	add	x1, x1, x1, lsl #2
  4267e0:	add	x1, x0, x1, lsl #3
  4267e4:	ldr	x0, [x1, #8]
  4267e8:	cmp	x20, x0
  4267ec:	b.eq	4267fc <_obstack_memory_used@@Base+0x7d0c>  // b.none
  4267f0:	b	4269f0 <_obstack_memory_used@@Base+0x7f00>
  4267f4:	ldurb	w0, [x1, #-8]
  4267f8:	cbz	w0, 4269f0 <_obstack_memory_used@@Base+0x7f00>
  4267fc:	ldr	x0, [x1]
  426800:	add	x1, x1, #0x28
  426804:	cmp	x19, x0
  426808:	b.ne	4267f4 <_obstack_memory_used@@Base+0x7d04>  // b.any
  42680c:	add	x0, x19, x19, lsl #1
  426810:	str	wzr, [sp, #196]
  426814:	cmp	x27, x5
  426818:	mov	x3, x5
  42681c:	lsl	x0, x0, #3
  426820:	str	x0, [sp, #120]
  426824:	lsl	x0, x19, #3
  426828:	str	x0, [sp, #112]
  42682c:	b.ge	426938 <_obstack_memory_used@@Base+0x7e48>  // b.tcont
  426830:	ldr	x1, [x28, #216]
  426834:	add	x0, x27, x27, lsl #2
  426838:	ldr	x2, [x1, x0, lsl #3]
  42683c:	add	x0, x1, x0, lsl #3
  426840:	cmp	x19, x2
  426844:	b.ne	42692c <_obstack_memory_used@@Base+0x7e3c>  // b.any
  426848:	ldr	x1, [x0, #8]
  42684c:	cmp	x20, x1
  426850:	b.ne	42692c <_obstack_memory_used@@Base+0x7e3c>  // b.any
  426854:	ldp	x21, x0, [x0, #16]
  426858:	ldr	x24, [x23, #48]
  42685c:	subs	x25, x0, x21
  426860:	b.ne	42699c <_obstack_memory_used@@Base+0x7eac>  // b.any
  426864:	ldr	x1, [x23, #40]
  426868:	ldr	x2, [sp, #120]
  42686c:	add	x1, x1, x2
  426870:	ldr	x1, [x1, #16]
  426874:	ldr	x1, [x1]
  426878:	add	x1, x1, x1, lsl #1
  42687c:	add	x24, x24, x1, lsl #3
  426880:	ldr	w2, [x28, #160]
  426884:	add	x0, x20, x0
  426888:	sub	x21, x0, x21
  42688c:	mov	x0, x28
  426890:	sub	x1, x21, #0x1
  426894:	mov	x26, #0x0                   	// #0
  426898:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  42689c:	mov	w3, w0
  4268a0:	ldr	x0, [sp, #152]
  4268a4:	ldr	x4, [x28, #184]
  4268a8:	ldr	x1, [x4, x0]
  4268ac:	ldr	x0, [x4, x21, lsl #3]
  4268b0:	cbz	x1, 4268b8 <_obstack_memory_used@@Base+0x7dc8>
  4268b4:	ldr	x26, [x1, #16]
  4268b8:	cbz	x0, 4269b4 <_obstack_memory_used@@Base+0x7ec4>
  4268bc:	ldr	x1, [x0, #80]
  4268c0:	mov	x2, x24
  4268c4:	add	x0, sp, #0xc8
  4268c8:	str	w3, [sp, #104]
  4268cc:	bl	4264d8 <_obstack_memory_used@@Base+0x79e8>
  4268d0:	str	w0, [sp, #196]
  4268d4:	ldr	w3, [sp, #104]
  4268d8:	cbnz	w0, 426b88 <_obstack_memory_used@@Base+0x8098>
  4268dc:	ldr	x4, [x28, #184]
  4268e0:	mov	x1, x23
  4268e4:	add	x2, sp, #0xc8
  4268e8:	add	x0, sp, #0xc4
  4268ec:	str	x4, [sp, #104]
  4268f0:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  4268f4:	ldr	x4, [sp, #104]
  4268f8:	str	x0, [x4, x21, lsl #3]
  4268fc:	ldr	x0, [sp, #216]
  426900:	bl	4026b0 <free@plt>
  426904:	ldr	x1, [x28, #184]
  426908:	ldr	x0, [x1, x21, lsl #3]
  42690c:	cbz	x0, 4269dc <_obstack_memory_used@@Base+0x7eec>
  426910:	cbnz	x25, 426928 <_obstack_memory_used@@Base+0x7e38>
  426914:	ldr	x0, [sp, #152]
  426918:	ldr	x0, [x1, x0]
  42691c:	ldr	x0, [x0, #16]
  426920:	cmp	x0, x26
  426924:	b.gt	426944 <_obstack_memory_used@@Base+0x7e54>
  426928:	ldr	x3, [x28, #200]
  42692c:	add	x27, x27, #0x1
  426930:	cmp	x27, x3
  426934:	b.lt	426830 <_obstack_memory_used@@Base+0x7d40>  // b.tstop
  426938:	ldr	x0, [sp, #176]
  42693c:	ldr	x26, [x0]
  426940:	b	426758 <_obstack_memory_used@@Base+0x7c68>
  426944:	add	x21, x24, #0x8
  426948:	add	x24, x24, #0x10
  42694c:	mov	x2, x24
  426950:	mov	x1, x21
  426954:	mov	x3, x20
  426958:	mov	x0, x28
  42695c:	bl	421090 <_obstack_memory_used@@Base+0x25a0>
  426960:	str	w0, [sp, #196]
  426964:	cbnz	w0, 426980 <_obstack_memory_used@@Base+0x7e90>
  426968:	mov	x2, x24
  42696c:	mov	x1, x21
  426970:	mov	x0, x28
  426974:	bl	4266b0 <_obstack_memory_used@@Base+0x7bc0>
  426978:	str	w0, [sp, #196]
  42697c:	cbz	w0, 426928 <_obstack_memory_used@@Base+0x7e38>
  426980:	ldp	x21, x22, [sp, #32]
  426984:	ldp	x19, x20, [sp, #16]
  426988:	ldp	x23, x24, [sp, #48]
  42698c:	ldp	x25, x26, [sp, #64]
  426990:	ldp	x27, x28, [sp, #80]
  426994:	ldp	x29, x30, [sp], #224
  426998:	ret
  42699c:	ldr	x1, [x23, #24]
  4269a0:	ldr	x2, [sp, #112]
  4269a4:	ldr	x1, [x1, x2]
  4269a8:	add	x1, x1, x1, lsl #1
  4269ac:	add	x24, x24, x1, lsl #3
  4269b0:	b	426880 <_obstack_memory_used@@Base+0x7d90>
  4269b4:	mov	x1, x23
  4269b8:	mov	x2, x24
  4269bc:	add	x0, sp, #0xc4
  4269c0:	str	x4, [sp, #104]
  4269c4:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  4269c8:	ldr	x4, [sp, #104]
  4269cc:	ldr	x1, [x28, #184]
  4269d0:	str	x0, [x4, x21, lsl #3]
  4269d4:	ldr	x0, [x1, x21, lsl #3]
  4269d8:	cbnz	x0, 426910 <_obstack_memory_used@@Base+0x7e20>
  4269dc:	ldr	w0, [sp, #196]
  4269e0:	cbz	w0, 426910 <_obstack_memory_used@@Base+0x7e20>
  4269e4:	b	426980 <_obstack_memory_used@@Base+0x7e90>
  4269e8:	add	x1, x0, #0x1
  4269ec:	b	4267c4 <_obstack_memory_used@@Base+0x7cd4>
  4269f0:	ldr	x0, [x28, #152]
  4269f4:	str	x0, [sp, #168]
  4269f8:	ldr	x2, [x28, #232]
  4269fc:	ldr	x1, [x0]
  426a00:	cmp	x2, #0x0
  426a04:	ldr	x0, [x1, x21]
  426a08:	str	x0, [sp, #160]
  426a0c:	b.le	42680c <_obstack_memory_used@@Base+0x7d1c>
  426a10:	ldr	x7, [x28, #8]
  426a14:	str	xzr, [sp, #136]
  426a18:	ldr	x3, [sp, #136]
  426a1c:	ldr	x0, [x28, #248]
  426a20:	ldr	x25, [x0, x3, lsl #3]
  426a24:	ldr	x0, [x25, #8]
  426a28:	lsl	x0, x0, #4
  426a2c:	ldr	x0, [x1, x0]
  426a30:	ldr	x1, [sp, #160]
  426a34:	cmp	x1, x0
  426a38:	b.eq	426a5c <_obstack_memory_used@@Base+0x7f6c>  // b.none
  426a3c:	ldr	x0, [sp, #136]
  426a40:	add	x0, x0, #0x1
  426a44:	str	x0, [sp, #136]
  426a48:	cmp	x0, x2
  426a4c:	b.ge	426d80 <_obstack_memory_used@@Base+0x8290>  // b.tcont
  426a50:	ldr	x0, [sp, #168]
  426a54:	ldr	x1, [x0]
  426a58:	b	426a18 <_obstack_memory_used@@Base+0x7f28>
  426a5c:	ldr	x0, [x25]
  426a60:	str	x0, [sp, #104]
  426a64:	ldr	x2, [x25, #32]
  426a68:	cmp	x2, #0x0
  426a6c:	b.le	426db4 <_obstack_memory_used@@Base+0x82c4>
  426a70:	mov	x26, x20
  426a74:	mov	x21, #0x0                   	// #0
  426a78:	b	426a88 <_obstack_memory_used@@Base+0x7f98>
  426a7c:	ldr	x2, [x25, #32]
  426a80:	cmp	x21, x2
  426a84:	b.ge	426d44 <_obstack_memory_used@@Base+0x8254>  // b.tcont
  426a88:	ldr	x0, [x25, #40]
  426a8c:	mov	x10, x26
  426a90:	ldr	x24, [sp, #104]
  426a94:	ldr	x4, [x0, x21, lsl #3]
  426a98:	ldr	x0, [x4, #8]
  426a9c:	str	x0, [sp, #104]
  426aa0:	sub	x3, x0, x24
  426aa4:	cmp	x3, #0x0
  426aa8:	add	x26, x26, x3
  426aac:	b.le	426ae0 <_obstack_memory_used@@Base+0x7ff0>
  426ab0:	ldr	x0, [x28, #48]
  426ab4:	cmp	x0, x26
  426ab8:	b.lt	426b0c <_obstack_memory_used@@Base+0x801c>  // b.tstop
  426abc:	add	x1, x7, x24
  426ac0:	add	x0, x7, x10
  426ac4:	mov	x2, x3
  426ac8:	stp	x7, x10, [sp, #112]
  426acc:	str	x4, [sp, #128]
  426ad0:	bl	402660 <memcmp@plt>
  426ad4:	ldp	x7, x10, [sp, #112]
  426ad8:	ldr	x4, [sp, #128]
  426adc:	cbnz	w0, 426bb0 <_obstack_memory_used@@Base+0x80c0>
  426ae0:	mov	x2, x4
  426ae4:	mov	x3, x19
  426ae8:	mov	x4, x20
  426aec:	mov	x1, x25
  426af0:	mov	x0, x28
  426af4:	bl	425868 <_obstack_memory_used@@Base+0x6d78>
  426af8:	add	x21, x21, #0x1
  426afc:	cmp	w0, #0x1
  426b00:	ldr	x7, [x28, #8]
  426b04:	b.ls	426a7c <_obstack_memory_used@@Base+0x7f8c>  // b.plast
  426b08:	b	426980 <_obstack_memory_used@@Base+0x7e90>
  426b0c:	ldr	x13, [x28, #88]
  426b10:	stp	x4, x3, [sp, #112]
  426b14:	add	w1, w26, #0x1
  426b18:	mov	x0, x28
  426b1c:	cmp	x13, x26
  426b20:	b.lt	426bb4 <_obstack_memory_used@@Base+0x80c4>  // b.tstop
  426b24:	ldr	x2, [x28, #192]
  426b28:	str	x2, [sp, #128]
  426b2c:	str	x10, [sp, #184]
  426b30:	bl	423920 <_obstack_memory_used@@Base+0x4e30>
  426b34:	cbnz	w0, 426980 <_obstack_memory_used@@Base+0x7e90>
  426b38:	ldr	x2, [sp, #128]
  426b3c:	ldp	x4, x3, [sp, #112]
  426b40:	cmp	x2, x26
  426b44:	ldr	x10, [sp, #184]
  426b48:	b.lt	426b54 <_obstack_memory_used@@Base+0x8064>  // b.tstop
  426b4c:	ldr	x7, [x28, #8]
  426b50:	b	426abc <_obstack_memory_used@@Base+0x7fcc>
  426b54:	ldr	x0, [x28, #184]
  426b58:	add	x11, x2, #0x1
  426b5c:	sub	x2, x26, x2
  426b60:	mov	w1, #0x0                   	// #0
  426b64:	str	x10, [sp, #128]
  426b68:	lsl	x2, x2, #3
  426b6c:	add	x0, x0, x11, lsl #3
  426b70:	bl	402510 <memset@plt>
  426b74:	str	x26, [x28, #192]
  426b78:	ldr	x7, [x28, #8]
  426b7c:	ldp	x4, x3, [sp, #112]
  426b80:	ldr	x10, [sp, #128]
  426b84:	b	426abc <_obstack_memory_used@@Base+0x7fcc>
  426b88:	ldr	x0, [sp, #216]
  426b8c:	bl	4026b0 <free@plt>
  426b90:	ldr	w0, [sp, #196]
  426b94:	ldp	x19, x20, [sp, #16]
  426b98:	ldp	x21, x22, [sp, #32]
  426b9c:	ldp	x23, x24, [sp, #48]
  426ba0:	ldp	x25, x26, [sp, #64]
  426ba4:	ldp	x27, x28, [sp, #80]
  426ba8:	ldp	x29, x30, [sp], #224
  426bac:	ret
  426bb0:	ldr	x2, [x25, #32]
  426bb4:	cmp	x21, x2
  426bb8:	b.ge	426bc4 <_obstack_memory_used@@Base+0x80d4>  // b.tcont
  426bbc:	ldr	x2, [x28, #232]
  426bc0:	b	426a3c <_obstack_memory_used@@Base+0x7f4c>
  426bc4:	cbnz	x21, 426d3c <_obstack_memory_used@@Base+0x824c>
  426bc8:	cmp	x20, x24
  426bcc:	b.lt	426bbc <_obstack_memory_used@@Base+0x80cc>  // b.tstop
  426bd0:	ldr	x0, [x25]
  426bd4:	sub	x0, x24, x0
  426bd8:	cmp	x0, #0x0
  426bdc:	b.le	426c04 <_obstack_memory_used@@Base+0x8114>
  426be0:	ldr	x0, [x28, #48]
  426be4:	cmp	x0, x10
  426be8:	b.le	426d54 <_obstack_memory_used@@Base+0x8264>
  426bec:	add	x0, x7, x24
  426bf0:	ldrb	w1, [x7, x10]
  426bf4:	add	x10, x10, #0x1
  426bf8:	ldurb	w0, [x0, #-1]
  426bfc:	cmp	w1, w0
  426c00:	b.ne	426bbc <_obstack_memory_used@@Base+0x80cc>  // b.any
  426c04:	ldr	x0, [x28, #184]
  426c08:	ldr	x1, [x0, x24, lsl #3]
  426c0c:	cbz	x1, 426d04 <_obstack_memory_used@@Base+0x8214>
  426c10:	ldr	x4, [x1, #16]
  426c14:	cmp	x4, #0x0
  426c18:	b.le	426d04 <_obstack_memory_used@@Base+0x8214>
  426c1c:	ldr	x0, [sp, #168]
  426c20:	ldr	x6, [x1, #24]
  426c24:	ldr	x3, [x0]
  426c28:	mov	x0, #0x0                   	// #0
  426c2c:	b	426c38 <_obstack_memory_used@@Base+0x8148>
  426c30:	cmp	x4, x0
  426c34:	b.eq	426d04 <_obstack_memory_used@@Base+0x8214>  // b.none
  426c38:	ldr	x21, [x6, x0, lsl #3]
  426c3c:	add	x0, x0, #0x1
  426c40:	lsl	x1, x21, #4
  426c44:	add	x2, x3, x1
  426c48:	ldrb	w2, [x2, #8]
  426c4c:	cmp	w2, #0x9
  426c50:	b.ne	426c30 <_obstack_memory_used@@Base+0x8140>  // b.any
  426c54:	ldr	x1, [x3, x1]
  426c58:	ldr	x2, [sp, #160]
  426c5c:	cmp	x2, x1
  426c60:	b.ne	426c30 <_obstack_memory_used@@Base+0x8140>  // b.any
  426c64:	cmn	x21, #0x1
  426c68:	b.eq	426d04 <_obstack_memory_used@@Base+0x8214>  // b.none
  426c6c:	ldr	x1, [x25, #16]
  426c70:	ldr	x26, [x25]
  426c74:	cbz	x1, 426d0c <_obstack_memory_used@@Base+0x821c>
  426c78:	ldr	x2, [x25, #8]
  426c7c:	mov	x3, x26
  426c80:	mov	x5, x24
  426c84:	mov	x4, x21
  426c88:	mov	x0, x28
  426c8c:	mov	w6, #0x9                   	// #9
  426c90:	stp	x7, x10, [sp, #104]
  426c94:	bl	4252d8 <_obstack_memory_used@@Base+0x67e8>
  426c98:	cmp	w0, #0x1
  426c9c:	ldp	x7, x10, [sp, #104]
  426ca0:	b.eq	426d04 <_obstack_memory_used@@Base+0x8214>  // b.none
  426ca4:	cbnz	w0, 426980 <_obstack_memory_used@@Base+0x7e90>
  426ca8:	ldp	x0, x1, [x25, #24]
  426cac:	cmp	x1, x0
  426cb0:	b.eq	426d88 <_obstack_memory_used@@Base+0x8298>  // b.none
  426cb4:	mov	x1, #0x28                  	// #40
  426cb8:	mov	x0, #0x1                   	// #1
  426cbc:	str	x10, [sp, #104]
  426cc0:	bl	402520 <calloc@plt>
  426cc4:	mov	x2, x0
  426cc8:	cbz	x0, 426d30 <_obstack_memory_used@@Base+0x8240>
  426ccc:	ldp	x0, x1, [x25, #32]
  426cd0:	mov	x4, x20
  426cd4:	mov	x3, x19
  426cd8:	str	x2, [x1, x0, lsl #3]
  426cdc:	add	x6, x0, #0x1
  426ce0:	stp	x21, x24, [x2]
  426ce4:	mov	x1, x25
  426ce8:	mov	x0, x28
  426cec:	str	x6, [x25, #32]
  426cf0:	bl	425868 <_obstack_memory_used@@Base+0x6d78>
  426cf4:	cmp	w0, #0x1
  426cf8:	ldr	x7, [x28, #8]
  426cfc:	ldr	x10, [sp, #104]
  426d00:	b.hi	426980 <_obstack_memory_used@@Base+0x7e90>  // b.pmore
  426d04:	add	x24, x24, #0x1
  426d08:	b	426bc8 <_obstack_memory_used@@Base+0x80d8>
  426d0c:	sub	x1, x24, x26
  426d10:	mov	x0, #0x18                  	// #24
  426d14:	add	x1, x1, #0x1
  426d18:	stp	x7, x10, [sp, #104]
  426d1c:	bl	402520 <calloc@plt>
  426d20:	str	x0, [x25, #16]
  426d24:	mov	x1, x0
  426d28:	ldp	x7, x10, [sp, #104]
  426d2c:	cbnz	x0, 426c78 <_obstack_memory_used@@Base+0x8188>
  426d30:	mov	w0, #0xc                   	// #12
  426d34:	ldp	x21, x22, [sp, #32]
  426d38:	b	426984 <_obstack_memory_used@@Base+0x7e94>
  426d3c:	mov	x26, x10
  426d40:	str	x24, [sp, #104]
  426d44:	ldr	x0, [sp, #104]
  426d48:	mov	x10, x26
  426d4c:	add	x24, x0, #0x1
  426d50:	b	426bc8 <_obstack_memory_used@@Base+0x80d8>
  426d54:	ldr	x0, [x28, #88]
  426d58:	cmp	x0, x10
  426d5c:	b.le	426bbc <_obstack_memory_used@@Base+0x80cc>
  426d60:	add	w1, w10, #0x1
  426d64:	mov	x0, x28
  426d68:	str	x10, [sp, #104]
  426d6c:	bl	423920 <_obstack_memory_used@@Base+0x4e30>
  426d70:	cbnz	w0, 426980 <_obstack_memory_used@@Base+0x7e90>
  426d74:	ldr	x7, [x28, #8]
  426d78:	ldr	x10, [sp, #104]
  426d7c:	b	426bec <_obstack_memory_used@@Base+0x80fc>
  426d80:	ldr	x5, [x28, #200]
  426d84:	b	42680c <_obstack_memory_used@@Base+0x7d1c>
  426d88:	ldr	x0, [x25, #40]
  426d8c:	lsl	x1, x1, #1
  426d90:	add	x26, x1, #0x1
  426d94:	str	x10, [sp, #104]
  426d98:	lsl	x1, x26, #3
  426d9c:	bl	402550 <realloc@plt>
  426da0:	cbz	x0, 426d30 <_obstack_memory_used@@Base+0x8240>
  426da4:	str	x26, [x25, #24]
  426da8:	str	x0, [x25, #40]
  426dac:	ldr	x10, [sp, #104]
  426db0:	b	426cb4 <_obstack_memory_used@@Base+0x81c4>
  426db4:	mov	x24, x0
  426db8:	mov	x10, x20
  426dbc:	b	426bc8 <_obstack_memory_used@@Base+0x80d8>
  426dc0:	stp	x29, x30, [sp, #-112]!
  426dc4:	mov	x29, sp
  426dc8:	stp	x21, x22, [sp, #32]
  426dcc:	mov	x21, x0
  426dd0:	stp	x23, x24, [sp, #48]
  426dd4:	ldp	x24, x0, [x1, #184]
  426dd8:	stp	x19, x20, [sp, #16]
  426ddc:	mov	x19, x1
  426de0:	ldr	x20, [x1, #72]
  426de4:	ldr	x23, [x1, #152]
  426de8:	cmp	x0, x20
  426dec:	b.ge	426e1c <_obstack_memory_used@@Base+0x832c>  // b.tcont
  426df0:	mov	x22, x2
  426df4:	str	x2, [x24, x20, lsl #3]
  426df8:	str	x20, [x1, #192]
  426dfc:	ldr	x0, [x23, #152]
  426e00:	cbnz	x0, 426ee0 <_obstack_memory_used@@Base+0x83f0>
  426e04:	mov	x0, x22
  426e08:	ldp	x19, x20, [sp, #16]
  426e0c:	ldp	x21, x22, [sp, #32]
  426e10:	ldp	x23, x24, [sp, #48]
  426e14:	ldp	x29, x30, [sp], #112
  426e18:	ret
  426e1c:	ldr	x0, [x24, x20, lsl #3]
  426e20:	cbz	x0, 426ed4 <_obstack_memory_used@@Base+0x83e4>
  426e24:	ldr	x0, [x0, #80]
  426e28:	cbz	x2, 426e94 <_obstack_memory_used@@Base+0x83a4>
  426e2c:	ldr	x24, [x2, #80]
  426e30:	mov	x2, x0
  426e34:	add	x0, sp, #0x58
  426e38:	mov	x1, x24
  426e3c:	bl	4264d8 <_obstack_memory_used@@Base+0x79e8>
  426e40:	str	w0, [x21]
  426e44:	cbnz	w0, 426f34 <_obstack_memory_used@@Base+0x8444>
  426e48:	ldr	w2, [x19, #160]
  426e4c:	mov	x0, x19
  426e50:	ldr	x1, [x19, #72]
  426e54:	str	x25, [sp, #64]
  426e58:	sub	x1, x1, #0x1
  426e5c:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  426e60:	ldr	x25, [x19, #184]
  426e64:	mov	w3, w0
  426e68:	add	x2, sp, #0x58
  426e6c:	mov	x1, x23
  426e70:	mov	x0, x21
  426e74:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  426e78:	str	x0, [x25, x20, lsl #3]
  426e7c:	mov	x22, x0
  426e80:	cbz	x24, 426f3c <_obstack_memory_used@@Base+0x844c>
  426e84:	ldr	x0, [sp, #104]
  426e88:	bl	4026b0 <free@plt>
  426e8c:	ldr	x25, [sp, #64]
  426e90:	b	426dfc <_obstack_memory_used@@Base+0x830c>
  426e94:	ldp	x2, x3, [x0]
  426e98:	stp	x2, x3, [sp, #88]
  426e9c:	ldr	w2, [x19, #160]
  426ea0:	ldr	x3, [x0, #16]
  426ea4:	sub	x1, x20, #0x1
  426ea8:	mov	x0, x19
  426eac:	str	x3, [sp, #104]
  426eb0:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  426eb4:	mov	w3, w0
  426eb8:	add	x2, sp, #0x58
  426ebc:	mov	x1, x23
  426ec0:	mov	x0, x21
  426ec4:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  426ec8:	mov	x22, x0
  426ecc:	str	x0, [x24, x20, lsl #3]
  426ed0:	b	426dfc <_obstack_memory_used@@Base+0x830c>
  426ed4:	mov	x22, x2
  426ed8:	str	x2, [x24, x20, lsl #3]
  426edc:	b	426dfc <_obstack_memory_used@@Base+0x830c>
  426ee0:	cbz	x22, 426f34 <_obstack_memory_used@@Base+0x8444>
  426ee4:	add	x23, x22, #0x10
  426ee8:	add	x24, x22, #0x18
  426eec:	mov	x1, x23
  426ef0:	mov	x2, x24
  426ef4:	mov	x3, x20
  426ef8:	mov	x0, x19
  426efc:	bl	421090 <_obstack_memory_used@@Base+0x25a0>
  426f00:	str	w0, [x21]
  426f04:	cbnz	w0, 426f34 <_obstack_memory_used@@Base+0x8444>
  426f08:	ldrb	w0, [x22, #104]
  426f0c:	tbz	w0, #6, 426e04 <_obstack_memory_used@@Base+0x8314>
  426f10:	mov	x2, x24
  426f14:	mov	x1, x23
  426f18:	mov	x0, x19
  426f1c:	bl	4266b0 <_obstack_memory_used@@Base+0x7bc0>
  426f20:	str	w0, [x21]
  426f24:	cbnz	w0, 426f34 <_obstack_memory_used@@Base+0x8444>
  426f28:	ldr	x0, [x19, #184]
  426f2c:	ldr	x22, [x0, x20, lsl #3]
  426f30:	b	426e04 <_obstack_memory_used@@Base+0x8314>
  426f34:	mov	x22, #0x0                   	// #0
  426f38:	b	426e04 <_obstack_memory_used@@Base+0x8314>
  426f3c:	ldr	x25, [sp, #64]
  426f40:	b	426dfc <_obstack_memory_used@@Base+0x830c>
  426f44:	nop
  426f48:	stp	x29, x30, [sp, #-256]!
  426f4c:	mov	x29, sp
  426f50:	stp	x19, x20, [sp, #16]
  426f54:	mov	x20, x0
  426f58:	mov	x19, x2
  426f5c:	ldr	x0, [x0, #184]
  426f60:	stp	x21, x22, [sp, #32]
  426f64:	lsl	x2, x2, #3
  426f68:	stp	x23, x24, [sp, #48]
  426f6c:	mov	x21, x3
  426f70:	ldr	x22, [x0, x19, lsl #3]
  426f74:	stp	x25, x26, [sp, #64]
  426f78:	mov	x26, x1
  426f7c:	str	x2, [sp, #104]
  426f80:	add	x1, x0, x2
  426f84:	str	wzr, [sp, #168]
  426f88:	ldr	x0, [x3, #8]
  426f8c:	ldr	x23, [x20, #152]
  426f90:	cbz	x22, 42728c <_obstack_memory_used@@Base+0x879c>
  426f94:	cbnz	x0, 426fcc <_obstack_memory_used@@Base+0x84dc>
  426f98:	ldr	x0, [x26]
  426f9c:	mov	w4, #0x0                   	// #0
  426fa0:	str	xzr, [x0, x19, lsl #3]
  426fa4:	ldr	x0, [x1]
  426fa8:	ldrb	w0, [x0, #104]
  426fac:	tbnz	w0, #6, 4270ec <_obstack_memory_used@@Base+0x85fc>
  426fb0:	mov	w0, w4
  426fb4:	ldp	x19, x20, [sp, #16]
  426fb8:	ldp	x21, x22, [sp, #32]
  426fbc:	ldp	x23, x24, [sp, #48]
  426fc0:	ldp	x25, x26, [sp, #64]
  426fc4:	ldp	x29, x30, [sp], #256
  426fc8:	ret
  426fcc:	mov	x2, x3
  426fd0:	mov	x1, x23
  426fd4:	add	x0, sp, #0xc8
  426fd8:	str	wzr, [sp, #200]
  426fdc:	bl	424760 <_obstack_memory_used@@Base+0x5c70>
  426fe0:	ldr	w4, [sp, #200]
  426fe4:	cbnz	w4, 426fb0 <_obstack_memory_used@@Base+0x84c0>
  426fe8:	mov	x25, x0
  426fec:	stp	x27, x28, [sp, #80]
  426ff0:	ldr	x24, [x25, #56]!
  426ff4:	cbnz	x24, 427080 <_obstack_memory_used@@Base+0x8590>
  426ff8:	ldr	x1, [x21, #8]
  426ffc:	str	x1, [x0, #56]
  427000:	str	xzr, [x25, #8]
  427004:	lsl	x0, x1, #3
  427008:	bl	402440 <malloc@plt>
  42700c:	str	x0, [x25, #16]
  427010:	cbz	x0, 42705c <_obstack_memory_used@@Base+0x856c>
  427014:	ldr	x0, [x21, #8]
  427018:	str	wzr, [sp, #200]
  42701c:	cmp	x0, #0x0
  427020:	b.gt	427034 <_obstack_memory_used@@Base+0x8544>
  427024:	b	427080 <_obstack_memory_used@@Base+0x8590>
  427028:	ldr	x0, [x21, #8]
  42702c:	cmp	x24, x0
  427030:	b.ge	427080 <_obstack_memory_used@@Base+0x8590>  // b.tcont
  427034:	ldr	x2, [x21, #16]
  427038:	mov	x0, x25
  42703c:	ldr	x1, [x23, #56]
  427040:	ldr	x3, [x2, x24, lsl #3]
  427044:	add	x24, x24, #0x1
  427048:	add	x3, x3, x3, lsl #1
  42704c:	add	x1, x1, x3, lsl #3
  427050:	bl	420010 <_obstack_memory_used@@Base+0x1520>
  427054:	str	w0, [sp, #200]
  427058:	cbz	w0, 427028 <_obstack_memory_used@@Base+0x8538>
  42705c:	mov	w4, #0xc                   	// #12
  427060:	mov	w0, w4
  427064:	ldp	x19, x20, [sp, #16]
  427068:	ldp	x21, x22, [sp, #32]
  42706c:	ldp	x23, x24, [sp, #48]
  427070:	ldp	x25, x26, [sp, #64]
  427074:	ldp	x27, x28, [sp, #80]
  427078:	ldp	x29, x30, [sp], #256
  42707c:	ret
  427080:	add	x28, x22, #0x8
  427084:	mov	x2, x25
  427088:	mov	x1, x28
  42708c:	mov	x0, x21
  427090:	bl	4201b8 <_obstack_memory_used@@Base+0x16c8>
  427094:	str	w0, [sp, #168]
  427098:	mov	w4, w0
  42709c:	cbnz	w0, 427550 <_obstack_memory_used@@Base+0x8a60>
  4270a0:	ldr	x10, [x26, #40]
  4270a4:	cmp	x10, #0x0
  4270a8:	cbnz	x10, 427570 <_obstack_memory_used@@Base+0x8a80>
  4270ac:	ldr	x24, [x26]
  4270b0:	mov	x2, x21
  4270b4:	mov	x1, x23
  4270b8:	add	x0, sp, #0xa8
  4270bc:	bl	424760 <_obstack_memory_used@@Base+0x5c70>
  4270c0:	ldr	w4, [sp, #168]
  4270c4:	str	x0, [x24, x19, lsl #3]
  4270c8:	cbnz	w4, 427550 <_obstack_memory_used@@Base+0x8a60>
  4270cc:	ldr	x0, [sp, #104]
  4270d0:	mov	w4, #0x0                   	// #0
  4270d4:	ldr	x1, [x20, #184]
  4270d8:	ldp	x27, x28, [sp, #80]
  4270dc:	add	x1, x1, x0
  4270e0:	ldr	x0, [x1]
  4270e4:	ldrb	w0, [x0, #104]
  4270e8:	tbz	w0, #6, 426fb0 <_obstack_memory_used@@Base+0x84c0>
  4270ec:	ldr	x4, [x20, #200]
  4270f0:	mov	x24, #0x0                   	// #0
  4270f4:	stp	x27, x28, [sp, #80]
  4270f8:	mov	x2, x4
  4270fc:	b	427120 <_obstack_memory_used@@Base+0x8630>
  427100:	asr	x0, x0, #1
  427104:	ldr	x3, [x20, #216]
  427108:	add	x1, x0, x0, lsl #2
  42710c:	add	x1, x3, x1, lsl #3
  427110:	ldr	x1, [x1, #8]
  427114:	cmp	x19, x1
  427118:	b.gt	4274bc <_obstack_memory_used@@Base+0x89cc>
  42711c:	mov	x2, x0
  427120:	add	x0, x2, x24
  427124:	cmp	x2, x24
  427128:	b.gt	427100 <_obstack_memory_used@@Base+0x8610>
  42712c:	cmp	x4, x24
  427130:	b.le	4272f4 <_obstack_memory_used@@Base+0x8804>
  427134:	add	x1, x24, x24, lsl #2
  427138:	ldr	x0, [x20, #216]
  42713c:	lsl	x1, x1, #3
  427140:	str	x1, [sp, #152]
  427144:	add	x0, x0, x1
  427148:	ldr	x0, [x0, #8]
  42714c:	cmp	x19, x0
  427150:	b.ne	4272f4 <_obstack_memory_used@@Base+0x8804>  // b.any
  427154:	ldr	x2, [x22, #16]
  427158:	add	x0, x22, #0x8
  42715c:	str	x0, [sp, #120]
  427160:	str	xzr, [sp, #200]
  427164:	cmp	x2, #0x0
  427168:	ldr	x28, [x20, #152]
  42716c:	b.le	4272f4 <_obstack_memory_used@@Base+0x8804>
  427170:	mov	x23, #0x0                   	// #0
  427174:	b	42718c <_obstack_memory_used@@Base+0x869c>
  427178:	cmp	w0, #0x4
  42717c:	b.eq	4271c4 <_obstack_memory_used@@Base+0x86d4>  // b.none
  427180:	add	x23, x23, #0x1
  427184:	cmp	x23, x2
  427188:	b.ge	4272ec <_obstack_memory_used@@Base+0x87fc>  // b.tcont
  42718c:	ldr	x0, [sp, #120]
  427190:	ldr	x1, [x0, #16]
  427194:	ldr	x0, [x28]
  427198:	ldr	x27, [x1, x23, lsl #3]
  42719c:	ldr	x1, [x26, #16]
  4271a0:	add	x0, x0, x27, lsl #4
  4271a4:	cmp	x27, x1
  4271a8:	ldrb	w0, [x0, #8]
  4271ac:	b.ne	427178 <_obstack_memory_used@@Base+0x8688>  // b.any
  4271b0:	ldr	x1, [x26, #24]
  4271b4:	cmp	x19, x1
  4271b8:	b.eq	427180 <_obstack_memory_used@@Base+0x8690>  // b.none
  4271bc:	cmp	w0, #0x4
  4271c0:	b.ne	427180 <_obstack_memory_used@@Base+0x8690>  // b.any
  4271c4:	add	x0, x27, x27, lsl #1
  4271c8:	lsl	x1, x27, #3
  4271cc:	ldr	x25, [x20, #216]
  4271d0:	lsl	x0, x0, #3
  4271d4:	stp	x1, x0, [sp, #128]
  4271d8:	mov	x21, x24
  4271dc:	ldr	x1, [sp, #152]
  4271e0:	add	x25, x25, x1
  4271e4:	nop
  4271e8:	ldr	x0, [x25]
  4271ec:	cmp	x27, x0
  4271f0:	b.ne	427270 <_obstack_memory_used@@Base+0x8780>  // b.any
  4271f4:	ldp	x1, x0, [x25, #16]
  4271f8:	sub	x0, x0, x1
  4271fc:	add	x6, x19, x0
  427200:	cbz	x0, 427300 <_obstack_memory_used@@Base+0x8810>
  427204:	ldr	x0, [x28, #24]
  427208:	ldr	x1, [sp, #128]
  42720c:	ldr	x5, [x0, x1]
  427210:	ldr	x0, [x26, #24]
  427214:	cmp	x6, x0
  427218:	b.gt	427270 <_obstack_memory_used@@Base+0x8780>
  42721c:	ldr	x0, [x26]
  427220:	ldr	x1, [x0, x6, lsl #3]
  427224:	cbz	x1, 427270 <_obstack_memory_used@@Base+0x8780>
  427228:	ldr	x0, [x1, #16]
  42722c:	cmp	x0, #0x0
  427230:	b.le	427270 <_obstack_memory_used@@Base+0x8780>
  427234:	sub	x0, x0, #0x1
  427238:	mov	x2, #0x0                   	// #0
  42723c:	ldr	x4, [x1, #24]
  427240:	b	427258 <_obstack_memory_used@@Base+0x8768>
  427244:	lsr	x1, x1, #1
  427248:	ldr	x9, [x4, x1, lsl #3]
  42724c:	cmp	x5, x9
  427250:	b.gt	427318 <_obstack_memory_used@@Base+0x8828>
  427254:	mov	x0, x1
  427258:	add	x1, x0, x2
  42725c:	cmp	x0, x2
  427260:	b.hi	427244 <_obstack_memory_used@@Base+0x8754>  // b.pmore
  427264:	ldr	x0, [x4, x2, lsl #3]
  427268:	cmp	x5, x0
  42726c:	b.eq	427320 <_obstack_memory_used@@Base+0x8830>  // b.none
  427270:	ldrb	w0, [x25, #32]
  427274:	add	x21, x21, #0x1
  427278:	add	x25, x25, #0x28
  42727c:	cbnz	w0, 4271e8 <_obstack_memory_used@@Base+0x86f8>
  427280:	ldr	x0, [sp, #120]
  427284:	ldr	x2, [x0, #8]
  427288:	b	427180 <_obstack_memory_used@@Base+0x8690>
  42728c:	ldr	x20, [x26]
  427290:	cbnz	x0, 4272b8 <_obstack_memory_used@@Base+0x87c8>
  427294:	str	xzr, [x20, x19, lsl #3]
  427298:	mov	w4, #0x0                   	// #0
  42729c:	mov	w0, w4
  4272a0:	ldp	x19, x20, [sp, #16]
  4272a4:	ldp	x21, x22, [sp, #32]
  4272a8:	ldp	x23, x24, [sp, #48]
  4272ac:	ldp	x25, x26, [sp, #64]
  4272b0:	ldp	x29, x30, [sp], #256
  4272b4:	ret
  4272b8:	mov	x1, x23
  4272bc:	mov	x2, x3
  4272c0:	add	x0, sp, #0xa8
  4272c4:	bl	424760 <_obstack_memory_used@@Base+0x5c70>
  4272c8:	ldr	w4, [sp, #168]
  4272cc:	str	x0, [x20, x19, lsl #3]
  4272d0:	mov	w0, w4
  4272d4:	ldp	x19, x20, [sp, #16]
  4272d8:	ldp	x21, x22, [sp, #32]
  4272dc:	ldp	x23, x24, [sp, #48]
  4272e0:	ldp	x25, x26, [sp, #64]
  4272e4:	ldp	x29, x30, [sp], #256
  4272e8:	ret
  4272ec:	ldr	x0, [sp, #200]
  4272f0:	cbnz	x0, 427814 <_obstack_memory_used@@Base+0x8d24>
  4272f4:	mov	w4, #0x0                   	// #0
  4272f8:	ldp	x27, x28, [sp, #80]
  4272fc:	b	426fb0 <_obstack_memory_used@@Base+0x84c0>
  427300:	ldr	x0, [x28, #40]
  427304:	ldr	x1, [sp, #136]
  427308:	add	x0, x0, x1
  42730c:	ldr	x0, [x0, #16]
  427310:	ldr	x5, [x0]
  427314:	b	427210 <_obstack_memory_used@@Base+0x8720>
  427318:	add	x2, x1, #0x1
  42731c:	b	427258 <_obstack_memory_used@@Base+0x8768>
  427320:	mov	x4, x19
  427324:	mov	x3, x27
  427328:	add	x2, x26, #0x30
  42732c:	add	x1, x26, #0x28
  427330:	mov	x0, x20
  427334:	bl	422698 <_obstack_memory_used@@Base+0x3ba8>
  427338:	tst	w0, #0xff
  42733c:	b.ne	427270 <_obstack_memory_used@@Base+0x8780>  // b.any
  427340:	ldr	x0, [sp, #200]
  427344:	cbz	x0, 4274c4 <_obstack_memory_used@@Base+0x89d4>
  427348:	mov	x1, x21
  42734c:	add	x0, sp, #0xe8
  427350:	stp	x27, x19, [sp, #216]
  427354:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  427358:	tst	w0, #0xff
  42735c:	b.eq	427514 <_obstack_memory_used@@Base+0x8a24>  // b.none
  427360:	ldr	x3, [sp, #104]
  427364:	add	x1, sp, #0xc8
  427368:	ldr	x2, [sp, #200]
  42736c:	mov	x0, x20
  427370:	ldr	x2, [x2, x3]
  427374:	str	x2, [sp, #144]
  427378:	bl	427820 <_obstack_memory_used@@Base+0x8d30>
  42737c:	mov	w4, w0
  427380:	cbnz	w0, 427518 <_obstack_memory_used@@Base+0x8a28>
  427384:	ldr	x25, [x26, #8]
  427388:	ldr	x0, [sp, #200]
  42738c:	str	x0, [sp, #112]
  427390:	cbz	x25, 427414 <_obstack_memory_used@@Base+0x8924>
  427394:	tbnz	x19, #63, 427414 <_obstack_memory_used@@Base+0x8924>
  427398:	mov	x22, #0x0                   	// #0
  42739c:	b	4273f4 <_obstack_memory_used@@Base+0x8904>
  4273a0:	add	x2, x4, #0x8
  4273a4:	add	x1, x1, #0x8
  4273a8:	add	x0, sp, #0xb0
  4273ac:	cbz	x4, 4273e8 <_obstack_memory_used@@Base+0x88f8>
  4273b0:	bl	4264d8 <_obstack_memory_used@@Base+0x79e8>
  4273b4:	mov	w4, w0
  4273b8:	str	w4, [sp, #172]
  4273bc:	add	x2, sp, #0xb0
  4273c0:	mov	x1, x28
  4273c4:	add	x0, sp, #0xac
  4273c8:	cbnz	w4, 427518 <_obstack_memory_used@@Base+0x8a28>
  4273cc:	bl	424760 <_obstack_memory_used@@Base+0x5c70>
  4273d0:	mov	x1, x0
  4273d4:	ldr	x0, [sp, #192]
  4273d8:	str	x1, [x25, x22, lsl #3]
  4273dc:	bl	4026b0 <free@plt>
  4273e0:	ldr	w4, [sp, #172]
  4273e4:	cbnz	w4, 427518 <_obstack_memory_used@@Base+0x8a28>
  4273e8:	add	x22, x22, #0x1
  4273ec:	cmp	x19, x22
  4273f0:	b.lt	42740c <_obstack_memory_used@@Base+0x891c>  // b.tstop
  4273f4:	ldr	x1, [x25, x22, lsl #3]
  4273f8:	ldr	x0, [sp, #112]
  4273fc:	ldr	x4, [x0, x22, lsl #3]
  427400:	cbnz	x1, 4273a0 <_obstack_memory_used@@Base+0x88b0>
  427404:	str	x4, [x25, x22, lsl #3]
  427408:	b	4273e8 <_obstack_memory_used@@Base+0x88f8>
  42740c:	ldr	x0, [sp, #200]
  427410:	str	x0, [sp, #112]
  427414:	ldp	x1, x0, [sp, #104]
  427418:	ldr	x2, [sp, #144]
  42741c:	ldr	x6, [sp, #240]
  427420:	str	x2, [x0, x1]
  427424:	cmp	x6, #0x0
  427428:	b.le	42746c <_obstack_memory_used@@Base+0x897c>
  42742c:	sub	x9, x6, #0x1
  427430:	mov	x0, #0x0                   	// #0
  427434:	mov	x2, x9
  427438:	ldr	x4, [sp, #248]
  42743c:	b	427454 <_obstack_memory_used@@Base+0x8964>
  427440:	lsr	x1, x1, #1
  427444:	ldr	x5, [x4, x1, lsl #3]
  427448:	cmp	x21, x5
  42744c:	b.gt	4274b4 <_obstack_memory_used@@Base+0x89c4>
  427450:	mov	x2, x1
  427454:	add	x1, x2, x0
  427458:	cmp	x2, x0
  42745c:	b.hi	427440 <_obstack_memory_used@@Base+0x8950>  // b.pmore
  427460:	ldr	x1, [x4, x0, lsl #3]
  427464:	cmp	x21, x1
  427468:	b.eq	42747c <_obstack_memory_used@@Base+0x898c>  // b.none
  42746c:	ldr	x0, [x20, #216]
  427470:	add	x25, x21, x21, lsl #2
  427474:	add	x25, x0, x25, lsl #3
  427478:	b	427270 <_obstack_memory_used@@Base+0x8780>
  42747c:	cmp	x0, #0x0
  427480:	ccmp	x6, x0, #0x4, ge  // ge = tcont
  427484:	b.le	42746c <_obstack_memory_used@@Base+0x897c>
  427488:	str	x9, [sp, #240]
  42748c:	cmp	x0, x9
  427490:	b.ge	42746c <_obstack_memory_used@@Base+0x897c>  // b.tcont
  427494:	add	x2, x4, #0x8
  427498:	ldr	x1, [x2, x0, lsl #3]
  42749c:	str	x1, [x4, x0, lsl #3]
  4274a0:	add	x0, x0, #0x1
  4274a4:	ldr	x1, [sp, #240]
  4274a8:	cmp	x0, x1
  4274ac:	b.lt	427498 <_obstack_memory_used@@Base+0x89a8>  // b.tstop
  4274b0:	b	42746c <_obstack_memory_used@@Base+0x897c>
  4274b4:	add	x0, x1, #0x1
  4274b8:	b	427454 <_obstack_memory_used@@Base+0x8964>
  4274bc:	add	x24, x0, #0x1
  4274c0:	b	427120 <_obstack_memory_used@@Base+0x8630>
  4274c4:	ldp	x0, x1, [x26]
  4274c8:	stp	x0, x1, [sp, #200]
  4274cc:	ldp	x0, x1, [x26, #40]
  4274d0:	str	x1, [sp, #248]
  4274d4:	ldp	x4, x5, [x26, #16]
  4274d8:	stp	x4, x5, [sp, #216]
  4274dc:	ldp	x4, x5, [x26, #32]
  4274e0:	stp	x4, x5, [sp, #232]
  4274e4:	cmp	x0, #0x0
  4274e8:	b.le	4277c0 <_obstack_memory_used@@Base+0x8cd0>
  4274ec:	lsl	x22, x0, #3
  4274f0:	str	x0, [sp, #232]
  4274f4:	mov	x0, x22
  4274f8:	bl	402440 <malloc@plt>
  4274fc:	str	x0, [sp, #248]
  427500:	cbz	x0, 427514 <_obstack_memory_used@@Base+0x8a24>
  427504:	ldr	x1, [x26, #48]
  427508:	mov	x2, x22
  42750c:	bl	4022a0 <memcpy@plt>
  427510:	b	427348 <_obstack_memory_used@@Base+0x8858>
  427514:	mov	w4, #0xc                   	// #12
  427518:	ldr	x0, [sp, #200]
  42751c:	cbz	x0, 427550 <_obstack_memory_used@@Base+0x8a60>
  427520:	ldr	x0, [sp, #248]
  427524:	str	w4, [sp, #104]
  427528:	bl	4026b0 <free@plt>
  42752c:	ldr	w4, [sp, #104]
  427530:	ldp	x19, x20, [sp, #16]
  427534:	mov	w0, w4
  427538:	ldp	x21, x22, [sp, #32]
  42753c:	ldp	x23, x24, [sp, #48]
  427540:	ldp	x25, x26, [sp, #64]
  427544:	ldp	x27, x28, [sp, #80]
  427548:	ldp	x29, x30, [sp], #256
  42754c:	ret
  427550:	mov	w0, w4
  427554:	ldp	x19, x20, [sp, #16]
  427558:	ldp	x21, x22, [sp, #32]
  42755c:	ldp	x23, x24, [sp, #48]
  427560:	ldp	x25, x26, [sp, #64]
  427564:	ldp	x27, x28, [sp, #80]
  427568:	ldp	x29, x30, [sp], #256
  42756c:	ret
  427570:	ldr	x27, [x20, #216]
  427574:	b.le	427658 <_obstack_memory_used@@Base+0x8b68>
  427578:	mov	x25, #0x0                   	// #0
  42757c:	nop
  427580:	ldr	x0, [x26, #48]
  427584:	ldr	x0, [x0, x25, lsl #3]
  427588:	add	x0, x0, x0, lsl #2
  42758c:	add	x1, x27, x0, lsl #3
  427590:	ldr	x2, [x1, #16]
  427594:	cmp	x19, x2
  427598:	b.le	42764c <_obstack_memory_used@@Base+0x8b5c>
  42759c:	ldr	x2, [x1, #8]
  4275a0:	cmp	x19, x2
  4275a4:	b.gt	42764c <_obstack_memory_used@@Base+0x8b5c>
  4275a8:	ldr	x2, [x27, x0, lsl #3]
  4275ac:	ldr	x0, [x23]
  4275b0:	lsl	x2, x2, #4
  4275b4:	ldr	x4, [x21, #8]
  4275b8:	ldr	x1, [x1, #24]
  4275bc:	mov	x6, x4
  4275c0:	ldr	x5, [x0, x2]
  4275c4:	cmp	x19, x1
  4275c8:	b.eq	427660 <_obstack_memory_used@@Base+0x8b70>  // b.none
  4275cc:	cmp	x4, #0x0
  4275d0:	mov	x24, #0x0                   	// #0
  4275d4:	b.gt	4275e8 <_obstack_memory_used@@Base+0x8af8>
  4275d8:	b	42764c <_obstack_memory_used@@Base+0x8b5c>
  4275dc:	cmp	x24, x4
  4275e0:	b.ge	427648 <_obstack_memory_used@@Base+0x8b58>  // b.tcont
  4275e4:	ldr	x0, [x23]
  4275e8:	ldr	x1, [x21, #16]
  4275ec:	ldr	x1, [x1, x24, lsl #3]
  4275f0:	add	x24, x24, #0x1
  4275f4:	lsl	x3, x1, #4
  4275f8:	add	x2, x0, x3
  4275fc:	ldrb	w2, [x2, #8]
  427600:	sub	w2, w2, #0x8
  427604:	cmp	w2, #0x1
  427608:	b.hi	4275dc <_obstack_memory_used@@Base+0x8aec>  // b.pmore
  42760c:	ldr	x0, [x0, x3]
  427610:	cmp	x5, x0
  427614:	b.ne	4275dc <_obstack_memory_used@@Base+0x8aec>  // b.any
  427618:	mov	x3, x28
  42761c:	mov	x2, x21
  427620:	mov	x0, x23
  427624:	str	x5, [sp, #112]
  427628:	bl	423b70 <_obstack_memory_used@@Base+0x5080>
  42762c:	mov	w4, w0
  427630:	cbnz	w0, 427550 <_obstack_memory_used@@Base+0x8a60>
  427634:	ldr	x4, [x21, #8]
  427638:	ldr	x5, [sp, #112]
  42763c:	cmp	x24, x4
  427640:	b.lt	4275e4 <_obstack_memory_used@@Base+0x8af4>  // b.tstop
  427644:	nop
  427648:	ldr	x10, [x26, #40]
  42764c:	add	x25, x25, #0x1
  427650:	cmp	x25, x10
  427654:	b.lt	427580 <_obstack_memory_used@@Base+0x8a90>  // b.tstop
  427658:	str	wzr, [sp, #168]
  42765c:	b	4270ac <_obstack_memory_used@@Base+0x85bc>
  427660:	cmp	x4, #0x0
  427664:	b.le	42764c <_obstack_memory_used@@Base+0x8b5c>
  427668:	ldr	x11, [x21, #16]
  42766c:	mov	x24, #0xffffffffffffffff    	// #-1
  427670:	mov	x1, x24
  427674:	mov	x2, x11
  427678:	add	x12, x11, x4, lsl #3
  42767c:	b	4276a0 <_obstack_memory_used@@Base+0x8bb0>
  427680:	cmp	w3, #0x9
  427684:	b.ne	427694 <_obstack_memory_used@@Base+0x8ba4>  // b.any
  427688:	ldr	x3, [x9]
  42768c:	cmp	x5, x3
  427690:	csel	x24, x24, x4, ne  // ne = any
  427694:	add	x2, x2, #0x8
  427698:	cmp	x12, x2
  42769c:	b.eq	4276d0 <_obstack_memory_used@@Base+0x8be0>  // b.none
  4276a0:	ldr	x4, [x2]
  4276a4:	lsl	x8, x4, #4
  4276a8:	add	x9, x0, x8
  4276ac:	ldrb	w3, [x9, #8]
  4276b0:	cmp	w3, #0x8
  4276b4:	b.ne	427680 <_obstack_memory_used@@Base+0x8b90>  // b.any
  4276b8:	ldr	x3, [x0, x8]
  4276bc:	add	x2, x2, #0x8
  4276c0:	cmp	x5, x3
  4276c4:	csel	x1, x1, x4, ne  // ne = any
  4276c8:	cmp	x12, x2
  4276cc:	b.ne	4276a0 <_obstack_memory_used@@Base+0x8bb0>  // b.any
  4276d0:	tbz	x1, #63, 4277cc <_obstack_memory_used@@Base+0x8cdc>
  4276d4:	tbnz	x24, #63, 42764c <_obstack_memory_used@@Base+0x8b5c>
  4276d8:	mov	x5, #0x0                   	// #0
  4276dc:	nop
  4276e0:	ldr	x1, [x11, x5, lsl #3]
  4276e4:	ldr	x0, [x23, #56]
  4276e8:	add	x4, x1, x1, lsl #1
  4276ec:	lsl	x4, x4, #3
  4276f0:	add	x0, x0, x4
  4276f4:	ldr	x2, [x0, #8]
  4276f8:	cmp	x2, #0x0
  4276fc:	b.le	42773c <_obstack_memory_used@@Base+0x8c4c>
  427700:	sub	x2, x2, #0x1
  427704:	mov	x3, #0x0                   	// #0
  427708:	ldr	x8, [x0, #16]
  42770c:	b	427724 <_obstack_memory_used@@Base+0x8c34>
  427710:	lsr	x0, x0, #1
  427714:	ldr	x9, [x8, x0, lsl #3]
  427718:	cmp	x24, x9
  42771c:	b.gt	4277fc <_obstack_memory_used@@Base+0x8d0c>
  427720:	mov	x2, x0
  427724:	add	x0, x2, x3
  427728:	cmp	x2, x3
  42772c:	b.hi	427710 <_obstack_memory_used@@Base+0x8c20>  // b.pmore
  427730:	ldr	x0, [x8, x3, lsl #3]
  427734:	cmp	x24, x0
  427738:	b.eq	427804 <_obstack_memory_used@@Base+0x8d14>  // b.none
  42773c:	ldr	x0, [x23, #48]
  427740:	add	x4, x0, x4
  427744:	ldr	x2, [x4, #8]
  427748:	cmp	x2, #0x0
  42774c:	b.le	42778c <_obstack_memory_used@@Base+0x8c9c>
  427750:	sub	x2, x2, #0x1
  427754:	mov	x3, #0x0                   	// #0
  427758:	ldr	x8, [x4, #16]
  42775c:	b	427774 <_obstack_memory_used@@Base+0x8c84>
  427760:	lsr	x0, x0, #1
  427764:	ldr	x4, [x8, x0, lsl #3]
  427768:	cmp	x24, x4
  42776c:	b.gt	42780c <_obstack_memory_used@@Base+0x8d1c>
  427770:	mov	x2, x0
  427774:	add	x0, x2, x3
  427778:	cmp	x2, x3
  42777c:	b.hi	427760 <_obstack_memory_used@@Base+0x8c70>  // b.pmore
  427780:	ldr	x0, [x8, x3, lsl #3]
  427784:	cmp	x24, x0
  427788:	b.eq	427804 <_obstack_memory_used@@Base+0x8d14>  // b.none
  42778c:	mov	x3, x28
  427790:	mov	x2, x21
  427794:	mov	x0, x23
  427798:	str	x5, [sp, #112]
  42779c:	bl	423b70 <_obstack_memory_used@@Base+0x5080>
  4277a0:	mov	w4, w0
  4277a4:	cbnz	w0, 427550 <_obstack_memory_used@@Base+0x8a60>
  4277a8:	ldr	x6, [x21, #8]
  4277ac:	ldr	x5, [sp, #112]
  4277b0:	cmp	x6, x5
  4277b4:	b.le	427648 <_obstack_memory_used@@Base+0x8b58>
  4277b8:	ldr	x11, [x21, #16]
  4277bc:	b	4276e0 <_obstack_memory_used@@Base+0x8bf0>
  4277c0:	stp	xzr, xzr, [sp, #232]
  4277c4:	str	xzr, [sp, #248]
  4277c8:	b	427348 <_obstack_memory_used@@Base+0x8858>
  4277cc:	mov	x3, x28
  4277d0:	mov	x2, x21
  4277d4:	mov	x0, x23
  4277d8:	bl	423b70 <_obstack_memory_used@@Base+0x5080>
  4277dc:	mov	w4, w0
  4277e0:	cbnz	w0, 427550 <_obstack_memory_used@@Base+0x8a60>
  4277e4:	tbnz	x24, #63, 427648 <_obstack_memory_used@@Base+0x8b58>
  4277e8:	ldr	x6, [x21, #8]
  4277ec:	cmp	x6, #0x0
  4277f0:	b.le	427648 <_obstack_memory_used@@Base+0x8b58>
  4277f4:	ldr	x11, [x21, #16]
  4277f8:	b	4276d8 <_obstack_memory_used@@Base+0x8be8>
  4277fc:	add	x3, x0, #0x1
  427800:	b	427724 <_obstack_memory_used@@Base+0x8c34>
  427804:	add	x5, x5, #0x1
  427808:	b	4277b0 <_obstack_memory_used@@Base+0x8cc0>
  42780c:	add	x3, x0, #0x1
  427810:	b	427774 <_obstack_memory_used@@Base+0x8c84>
  427814:	mov	w4, #0x0                   	// #0
  427818:	b	427520 <_obstack_memory_used@@Base+0x8a30>
  42781c:	nop
  427820:	stp	x29, x30, [sp, #-160]!
  427824:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x12510>
  427828:	mov	x29, sp
  42782c:	ldr	q0, [x2, #2768]
  427830:	stp	x19, x20, [sp, #16]
  427834:	mov	x19, x1
  427838:	stp	x25, x26, [sp, #64]
  42783c:	stp	x27, x28, [sp, #80]
  427840:	mov	x27, x0
  427844:	mov	x0, #0x8                   	// #8
  427848:	str	q0, [sp, #128]
  42784c:	ldp	x20, x26, [x1, #16]
  427850:	bl	402440 <malloc@plt>
  427854:	str	x0, [sp, #144]
  427858:	cbz	x0, 427be8 <_obstack_memory_used@@Base+0x90f8>
  42785c:	mov	x4, x0
  427860:	mov	x2, x26
  427864:	add	x3, sp, #0x80
  427868:	mov	x1, x19
  42786c:	mov	x0, x27
  427870:	str	x20, [x4]
  427874:	bl	426f48 <_obstack_memory_used@@Base+0x8458>
  427878:	cbnz	w0, 427c04 <_obstack_memory_used@@Base+0x9114>
  42787c:	add	x0, x19, #0x30
  427880:	stp	x21, x22, [sp, #32]
  427884:	mov	w22, #0x0                   	// #0
  427888:	stp	x23, x24, [sp, #48]
  42788c:	str	x0, [sp, #112]
  427890:	add	x0, x19, #0x28
  427894:	str	x0, [sp, #120]
  427898:	cmp	x26, #0x0
  42789c:	b.le	427ba0 <_obstack_memory_used@@Base+0x90b0>
  4278a0:	ldr	x0, [x19]
  4278a4:	lsl	x23, x26, #3
  4278a8:	ldr	w1, [x27, #224]
  4278ac:	ldr	x2, [x0, x26, lsl #3]
  4278b0:	cmp	x2, #0x0
  4278b4:	csinc	w22, wzr, w22, ne  // ne = any
  4278b8:	cmp	w1, w22
  4278bc:	b.lt	427bb0 <_obstack_memory_used@@Base+0x90c0>  // b.tstop
  4278c0:	ldr	x0, [x27, #184]
  4278c4:	sub	x26, x26, #0x1
  4278c8:	add	x0, x0, x23
  4278cc:	ldur	x20, [x0, #-8]
  4278d0:	str	xzr, [sp, #136]
  4278d4:	cbz	x20, 4279f8 <_obstack_memory_used@@Base+0x8f08>
  4278d8:	ldr	x0, [x20, #40]
  4278dc:	add	x20, x20, #0x20
  4278e0:	ldr	x24, [x27, #152]
  4278e4:	cmp	x0, #0x0
  4278e8:	b.le	4279f8 <_obstack_memory_used@@Base+0x8f08>
  4278ec:	mov	x21, #0x0                   	// #0
  4278f0:	ldr	x0, [x20, #16]
  4278f4:	ldr	x2, [x24]
  4278f8:	ldr	x28, [x0, x21, lsl #3]
  4278fc:	lsl	x25, x28, #4
  427900:	add	x2, x2, x25
  427904:	ldrb	w0, [x2, #10]
  427908:	tbnz	w0, #4, 427a6c <_obstack_memory_used@@Base+0x8f7c>
  42790c:	ldr	x0, [x27, #8]
  427910:	ldrb	w1, [x2, #8]
  427914:	ldrb	w0, [x0, x26]
  427918:	cmp	w1, #0x5
  42791c:	b.eq	427a50 <_obstack_memory_used@@Base+0x8f60>  // b.none
  427920:	b.hi	427a44 <_obstack_memory_used@@Base+0x8f54>  // b.pmore
  427924:	cmp	w1, #0x1
  427928:	b.eq	427b64 <_obstack_memory_used@@Base+0x9074>  // b.none
  42792c:	cmp	w1, #0x3
  427930:	b.ne	4279e8 <_obstack_memory_used@@Base+0x8ef8>  // b.any
  427934:	ldr	x1, [x2]
  427938:	ubfx	x3, x0, #6, #2
  42793c:	ldr	x1, [x1, x3, lsl #3]
  427940:	lsr	x0, x1, x0
  427944:	tbz	w0, #0, 4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427948:	ldr	w25, [x2, #8]
  42794c:	tst	w25, #0x3ff00
  427950:	b.eq	427988 <_obstack_memory_used@@Base+0x8e98>  // b.none
  427954:	ldr	w2, [x27, #160]
  427958:	mov	x1, x26
  42795c:	mov	x0, x27
  427960:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  427964:	ubfx	x1, x25, #8, #10
  427968:	tbz	w25, #10, 427b7c <_obstack_memory_used@@Base+0x908c>
  42796c:	tbz	w0, #0, 4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427970:	tbnz	w1, #3, 4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427974:	tbz	w1, #5, 42797c <_obstack_memory_used@@Base+0x8e8c>
  427978:	tbz	w0, #1, 4279e8 <_obstack_memory_used@@Base+0x8ef8>
  42797c:	tbz	w1, #7, 427988 <_obstack_memory_used@@Base+0x8e98>
  427980:	tbz	w0, #3, 4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427984:	nop
  427988:	ldr	x0, [x19]
  42798c:	ldr	x1, [x0, x23]
  427990:	cbz	x1, 4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427994:	ldr	x0, [x1, #16]
  427998:	cmp	x0, #0x0
  42799c:	b.le	4279e8 <_obstack_memory_used@@Base+0x8ef8>
  4279a0:	ldr	x3, [x24, #24]
  4279a4:	sub	x0, x0, #0x1
  4279a8:	mov	x2, #0x0                   	// #0
  4279ac:	ldr	x4, [x1, #24]
  4279b0:	ldr	x3, [x3, x28, lsl #3]
  4279b4:	b	4279cc <_obstack_memory_used@@Base+0x8edc>
  4279b8:	lsr	x1, x1, #1
  4279bc:	ldr	x5, [x4, x1, lsl #3]
  4279c0:	cmp	x3, x5
  4279c4:	b.gt	427a3c <_obstack_memory_used@@Base+0x8f4c>
  4279c8:	mov	x0, x1
  4279cc:	add	x1, x0, x2
  4279d0:	cmp	x0, x2
  4279d4:	b.hi	4279b8 <_obstack_memory_used@@Base+0x8ec8>  // b.pmore
  4279d8:	ldr	x0, [x4, x2, lsl #3]
  4279dc:	cmp	x3, x0
  4279e0:	b.eq	427b14 <_obstack_memory_used@@Base+0x9024>  // b.none
  4279e4:	nop
  4279e8:	ldr	x0, [x20, #8]
  4279ec:	add	x21, x21, #0x1
  4279f0:	cmp	x21, x0
  4279f4:	b.lt	4278f0 <_obstack_memory_used@@Base+0x8e00>  // b.tstop
  4279f8:	add	x3, sp, #0x80
  4279fc:	mov	x2, x26
  427a00:	mov	x1, x19
  427a04:	mov	x0, x27
  427a08:	bl	426f48 <_obstack_memory_used@@Base+0x8458>
  427a0c:	mov	w20, w0
  427a10:	cbz	w0, 427898 <_obstack_memory_used@@Base+0x8da8>
  427a14:	ldp	x21, x22, [sp, #32]
  427a18:	ldp	x23, x24, [sp, #48]
  427a1c:	ldr	x0, [sp, #144]
  427a20:	bl	4026b0 <free@plt>
  427a24:	mov	w0, w20
  427a28:	ldp	x19, x20, [sp, #16]
  427a2c:	ldp	x25, x26, [sp, #64]
  427a30:	ldp	x27, x28, [sp, #80]
  427a34:	ldp	x29, x30, [sp], #160
  427a38:	ret
  427a3c:	add	x2, x1, #0x1
  427a40:	b	4279cc <_obstack_memory_used@@Base+0x8edc>
  427a44:	cmp	w1, #0x7
  427a48:	b.ne	4279e8 <_obstack_memory_used@@Base+0x8ef8>  // b.any
  427a4c:	tbnz	w0, #7, 4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427a50:	cmp	w0, #0xa
  427a54:	b.eq	427b88 <_obstack_memory_used@@Base+0x9098>  // b.none
  427a58:	cbnz	w0, 427948 <_obstack_memory_used@@Base+0x8e58>
  427a5c:	ldr	x0, [x27, #152]
  427a60:	ldr	x0, [x0, #216]
  427a64:	tbz	w0, #7, 427948 <_obstack_memory_used@@Base+0x8e58>
  427a68:	b	4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427a6c:	ldr	x6, [x27, #152]
  427a70:	mov	x4, x26
  427a74:	ldr	x8, [x19, #24]
  427a78:	mov	x1, x6
  427a7c:	mov	x3, x27
  427a80:	mov	x2, x28
  427a84:	stp	x8, x6, [sp, #96]
  427a88:	ldr	x0, [x1], #216
  427a8c:	bl	422920 <_obstack_memory_used@@Base+0x3e30>
  427a90:	cmp	w0, #0x0
  427a94:	b.le	427b74 <_obstack_memory_used@@Base+0x9084>
  427a98:	ldr	x8, [sp, #96]
  427a9c:	add	x1, x26, w0, sxtw
  427aa0:	cmp	x8, x1
  427aa4:	b.lt	427b18 <_obstack_memory_used@@Base+0x9028>  // b.tstop
  427aa8:	ldr	x2, [x19]
  427aac:	ldr	x6, [sp, #104]
  427ab0:	ldr	x1, [x2, x1, lsl #3]
  427ab4:	cbz	x1, 427b08 <_obstack_memory_used@@Base+0x9018>
  427ab8:	ldr	x2, [x1, #16]
  427abc:	cmp	x2, #0x0
  427ac0:	b.le	427b08 <_obstack_memory_used@@Base+0x9018>
  427ac4:	ldr	x4, [x6, #24]
  427ac8:	sub	x2, x2, #0x1
  427acc:	mov	x3, #0x0                   	// #0
  427ad0:	ldr	x8, [x1, #24]
  427ad4:	ldr	x6, [x4, x28, lsl #3]
  427ad8:	b	427af0 <_obstack_memory_used@@Base+0x9000>
  427adc:	lsr	x1, x1, #1
  427ae0:	ldr	x4, [x8, x1, lsl #3]
  427ae4:	cmp	x6, x4
  427ae8:	b.gt	427b98 <_obstack_memory_used@@Base+0x90a8>
  427aec:	mov	x2, x1
  427af0:	add	x1, x2, x3
  427af4:	cmp	x2, x3
  427af8:	b.hi	427adc <_obstack_memory_used@@Base+0x8fec>  // b.pmore
  427afc:	ldr	x1, [x8, x3, lsl #3]
  427b00:	cmp	x6, x1
  427b04:	b.eq	427b18 <_obstack_memory_used@@Base+0x9028>  // b.none
  427b08:	ldr	x2, [x24]
  427b0c:	add	x2, x2, x25
  427b10:	b	42790c <_obstack_memory_used@@Base+0x8e1c>
  427b14:	mov	w0, #0x1                   	// #1
  427b18:	ldr	x1, [x19, #40]
  427b1c:	cbz	x1, 427b48 <_obstack_memory_used@@Base+0x9058>
  427b20:	ldr	x3, [x24, #24]
  427b24:	add	x4, x26, w0, sxtw
  427b28:	ldp	x2, x1, [sp, #112]
  427b2c:	mov	x6, x26
  427b30:	ldr	x3, [x3, x28, lsl #3]
  427b34:	mov	x5, x28
  427b38:	mov	x0, x27
  427b3c:	bl	422698 <_obstack_memory_used@@Base+0x3ba8>
  427b40:	tst	w0, #0xff
  427b44:	b.ne	4279e8 <_obstack_memory_used@@Base+0x8ef8>  // b.any
  427b48:	mov	x1, x28
  427b4c:	add	x0, sp, #0x80
  427b50:	bl	41efe0 <_obstack_memory_used@@Base+0x4f0>
  427b54:	tst	w0, #0xff
  427b58:	b.ne	4279e8 <_obstack_memory_used@@Base+0x8ef8>  // b.any
  427b5c:	mov	w20, #0xc                   	// #12
  427b60:	b	427a14 <_obstack_memory_used@@Base+0x8f24>
  427b64:	ldrb	w1, [x2]
  427b68:	cmp	w1, w0
  427b6c:	b.eq	427948 <_obstack_memory_used@@Base+0x8e58>  // b.none
  427b70:	b	4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427b74:	b.eq	427b08 <_obstack_memory_used@@Base+0x9018>  // b.none
  427b78:	b	427b18 <_obstack_memory_used@@Base+0x9028>
  427b7c:	tbz	w1, #3, 427974 <_obstack_memory_used@@Base+0x8e84>
  427b80:	tbz	w0, #0, 427974 <_obstack_memory_used@@Base+0x8e84>
  427b84:	b	4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427b88:	ldr	x0, [x27, #152]
  427b8c:	ldr	x0, [x0, #216]
  427b90:	tbnz	w0, #6, 427948 <_obstack_memory_used@@Base+0x8e58>
  427b94:	b	4279e8 <_obstack_memory_used@@Base+0x8ef8>
  427b98:	add	x3, x1, #0x1
  427b9c:	b	427af0 <_obstack_memory_used@@Base+0x9000>
  427ba0:	mov	w20, #0x0                   	// #0
  427ba4:	ldp	x21, x22, [sp, #32]
  427ba8:	ldp	x23, x24, [sp, #48]
  427bac:	b	427a1c <_obstack_memory_used@@Base+0x8f2c>
  427bb0:	mov	x2, x23
  427bb4:	mov	w1, #0x0                   	// #0
  427bb8:	bl	402510 <memset@plt>
  427bbc:	mov	w20, #0x0                   	// #0
  427bc0:	ldr	x0, [sp, #144]
  427bc4:	bl	4026b0 <free@plt>
  427bc8:	mov	w0, w20
  427bcc:	ldp	x19, x20, [sp, #16]
  427bd0:	ldp	x21, x22, [sp, #32]
  427bd4:	ldp	x23, x24, [sp, #48]
  427bd8:	ldp	x25, x26, [sp, #64]
  427bdc:	ldp	x27, x28, [sp, #80]
  427be0:	ldp	x29, x30, [sp], #160
  427be4:	ret
  427be8:	mov	w20, #0xc                   	// #12
  427bec:	mov	w0, w20
  427bf0:	ldp	x19, x20, [sp, #16]
  427bf4:	ldp	x25, x26, [sp, #64]
  427bf8:	ldp	x27, x28, [sp, #80]
  427bfc:	ldp	x29, x30, [sp], #160
  427c00:	ret
  427c04:	mov	w20, w0
  427c08:	b	427a1c <_obstack_memory_used@@Base+0x8f2c>
  427c0c:	nop
  427c10:	sub	sp, sp, #0x280
  427c14:	stp	x29, x30, [sp]
  427c18:	mov	x29, sp
  427c1c:	stp	x19, x20, [sp, #16]
  427c20:	mov	x19, x3
  427c24:	ldr	w3, [sp, #640]
  427c28:	mov	x20, x0
  427c2c:	stp	x27, x28, [sp, #80]
  427c30:	ldr	x27, [x0]
  427c34:	str	d8, [sp, #96]
  427c38:	fmov	d8, x5
  427c3c:	stp	x21, x22, [sp, #32]
  427c40:	mov	x21, x4
  427c44:	stp	x25, x26, [sp, #64]
  427c48:	stp	x0, x6, [sp, #120]
  427c4c:	add	x0, sp, #0x180
  427c50:	str	w3, [sp, #160]
  427c54:	str	x2, [sp, #168]
  427c58:	mov	x2, #0x100                 	// #256
  427c5c:	str	x1, [sp, #192]
  427c60:	mov	w1, #0x0                   	// #0
  427c64:	str	x7, [sp, #272]
  427c68:	bl	402510 <memset@plt>
  427c6c:	ldr	x26, [x20, #32]
  427c70:	str	x27, [sp, #536]
  427c74:	cbz	x26, 427c8c <_obstack_memory_used@@Base+0x919c>
  427c78:	ldrb	w0, [x20, #56]
  427c7c:	tst	x0, #0x8
  427c80:	ccmp	x19, x21, #0x4, ne  // ne = any
  427c84:	b.ne	428074 <_obstack_memory_used@@Base+0x9584>  // b.any
  427c88:	mov	x26, #0x0                   	// #0
  427c8c:	ldp	x0, x3, [sp, #120]
  427c90:	str	xzr, [sp, #232]
  427c94:	ldr	x0, [x0, #48]
  427c98:	cmp	x0, x3
  427c9c:	b.cs	427cb8 <_obstack_memory_used@@Base+0x91c8>  // b.hs, b.nlast
  427ca0:	sub	x1, x3, #0x1
  427ca4:	sub	x2, x0, x1
  427ca8:	sub	x0, x1, x0
  427cac:	str	x0, [sp, #232]
  427cb0:	add	x0, x3, x2
  427cb4:	str	x0, [sp, #128]
  427cb8:	ldr	x4, [sp, #120]
  427cbc:	ldr	x0, [x4, #16]
  427cc0:	cbz	x0, 4288fc <_obstack_memory_used@@Base+0x9e0c>
  427cc4:	ldr	x0, [x27, #72]
  427cc8:	cbz	x0, 4288fc <_obstack_memory_used@@Base+0x9e0c>
  427ccc:	ldr	x1, [x27, #80]
  427cd0:	cbz	x1, 4288fc <_obstack_memory_used@@Base+0x9e0c>
  427cd4:	ldr	x2, [x27, #88]
  427cd8:	cbz	x2, 4288fc <_obstack_memory_used@@Base+0x9e0c>
  427cdc:	ldr	x3, [x27, #96]
  427ce0:	cbz	x3, 4288fc <_obstack_memory_used@@Base+0x9e0c>
  427ce4:	ldr	x0, [x0, #16]
  427ce8:	cbnz	x0, 427d20 <_obstack_memory_used@@Base+0x9230>
  427cec:	ldr	x0, [x1, #16]
  427cf0:	cbnz	x0, 427d20 <_obstack_memory_used@@Base+0x9230>
  427cf4:	ldr	x0, [x2, #16]
  427cf8:	cbz	x0, 427d04 <_obstack_memory_used@@Base+0x9214>
  427cfc:	ldrsb	w0, [x4, #56]
  427d00:	tbnz	w0, #31, 427d20 <_obstack_memory_used@@Base+0x9230>
  427d04:	mov	w0, #0x1                   	// #1
  427d08:	str	w0, [sp, #152]
  427d0c:	cmp	x19, #0x0
  427d10:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  427d14:	b.ne	428904 <_obstack_memory_used@@Base+0x9e14>  // b.any
  427d18:	mov	x21, #0x0                   	// #0
  427d1c:	mov	x19, #0x0                   	// #0
  427d20:	ldr	x0, [sp, #128]
  427d24:	cbnz	x0, 428064 <_obstack_memory_used@@Base+0x9574>
  427d28:	ldr	x0, [x27, #152]
  427d2c:	cmp	x0, #0x0
  427d30:	cset	w0, ne  // ne = any
  427d34:	str	w0, [sp, #156]
  427d38:	str	w0, [sp, #180]
  427d3c:	ldr	x5, [sp, #120]
  427d40:	ldr	w0, [x27, #180]
  427d44:	ldr	x1, [x27, #16]
  427d48:	str	w0, [sp, #528]
  427d4c:	ldr	x6, [sp, #168]
  427d50:	sxtw	x4, w0
  427d54:	add	x1, x1, #0x1
  427d58:	fmov	d0, x6
  427d5c:	ldr	x2, [x5, #24]
  427d60:	cmp	x1, x4
  427d64:	ldr	x5, [x5, #40]
  427d68:	csel	x1, x1, x4, ge  // ge = tcont
  427d6c:	add	x20, x6, #0x1
  427d70:	and	x2, x2, #0x400000
  427d74:	cmp	x1, x20
  427d78:	ldrb	w3, [x27, #176]
  427d7c:	dup	v0.2d, v0.d[0]
  427d80:	csel	x20, x1, x20, le
  427d84:	orr	x22, x2, x5
  427d88:	cmp	x2, #0x0
  427d8c:	cset	w2, ne  // ne = any
  427d90:	cmp	x22, #0x0
  427d94:	ldr	x7, [sp, #192]
  427d98:	cset	w1, ne  // ne = any
  427d9c:	str	x5, [sp, #224]
  427da0:	cmp	w0, #0x1
  427da4:	str	x7, [sp, #384]
  427da8:	str	x5, [sp, #504]
  427dac:	strb	w2, [sp, #520]
  427db0:	ubfx	x2, x3, #2, #1
  427db4:	ubfx	x3, x3, #3, #1
  427db8:	strb	w2, [sp, #521]
  427dbc:	strb	w3, [sp, #522]
  427dc0:	strb	w1, [sp, #523]
  427dc4:	stp	q0, q0, [sp, #464]
  427dc8:	b.le	428b04 <_obstack_memory_used@@Base+0xa014>
  427dcc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  427dd0:	cmp	x20, x0
  427dd4:	b.hi	428cd8 <_obstack_memory_used@@Base+0xa1e8>  // b.pmore
  427dd8:	lsl	x0, x20, #2
  427ddc:	bl	402440 <malloc@plt>
  427de0:	cbz	x0, 428cd8 <_obstack_memory_used@@Base+0xa1e8>
  427de4:	stp	x23, x24, [sp, #48]
  427de8:	str	x0, [sp, #400]
  427dec:	cbnz	x22, 428b0c <_obstack_memory_used@@Base+0xa01c>
  427df0:	ldrb	w0, [x27, #176]
  427df4:	add	x1, x27, #0xb8
  427df8:	str	x20, [sp, #448]
  427dfc:	str	x1, [sp, #512]
  427e00:	ubfx	x0, x0, #4, #1
  427e04:	strb	w0, [sp, #526]
  427e08:	ldr	x0, [sp, #192]
  427e0c:	str	x0, [sp, #392]
  427e10:	ldr	w0, [x27, #180]
  427e14:	ldr	d0, [sp, #168]
  427e18:	cmp	w0, #0x1
  427e1c:	b.le	427e24 <_obstack_memory_used@@Base+0x9334>
  427e20:	fmov	d0, xzr
  427e24:	ldr	x0, [sp, #120]
  427e28:	mov	x1, #0xffffffffffffffff    	// #-1
  427e2c:	dup	v0.2d, v0.d[0]
  427e30:	dup	v8.2d, v8.d[0]
  427e34:	ldrb	w0, [x0, #56]
  427e38:	ldr	x22, [x27, #152]
  427e3c:	str	x1, [sp, #552]
  427e40:	ubfx	x0, x0, #7, #1
  427e44:	strb	w0, [sp, #525]
  427e48:	ldr	w0, [sp, #160]
  427e4c:	str	w0, [sp, #544]
  427e50:	cmp	xzr, x22, lsl #1
  427e54:	str	q0, [sp, #432]
  427e58:	lsl	x23, x22, #1
  427e5c:	str	q8, [sp, #480]
  427e60:	b.ge	427ea4 <_obstack_memory_used@@Base+0x93b4>  // b.tcont
  427e64:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  427e68:	movk	x0, #0x666, lsl #48
  427e6c:	cmp	x23, x0
  427e70:	b.gt	42897c <_obstack_memory_used@@Base+0x9e8c>
  427e74:	add	x0, x23, x22, lsl #3
  427e78:	lsl	x0, x0, #3
  427e7c:	bl	402440 <malloc@plt>
  427e80:	mov	x1, x0
  427e84:	lsl	x0, x22, #4
  427e88:	mov	x22, x1
  427e8c:	str	x1, [sp, #600]
  427e90:	bl	402440 <malloc@plt>
  427e94:	str	x0, [sp, #632]
  427e98:	cmp	x0, #0x0
  427e9c:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  427ea0:	b.eq	42897c <_obstack_memory_used@@Base+0x9e8c>  // b.none
  427ea4:	mov	w0, #0x1                   	// #1
  427ea8:	str	w0, [sp, #608]
  427eac:	ldr	x0, [sp, #128]
  427eb0:	str	x23, [sp, #592]
  427eb4:	str	x23, [sp, #624]
  427eb8:	cmp	x0, #0x1
  427ebc:	b.ls	428c3c <_obstack_memory_used@@Base+0xa14c>  // b.plast
  427ec0:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  427ec4:	cmp	x20, x0
  427ec8:	b.hi	42897c <_obstack_memory_used@@Base+0x9e8c>  // b.pmore
  427ecc:	add	x0, x20, #0x1
  427ed0:	lsl	x0, x0, #3
  427ed4:	bl	402440 <malloc@plt>
  427ed8:	str	x0, [sp, #568]
  427edc:	mov	x28, x0
  427ee0:	cbz	x0, 42892c <_obstack_memory_used@@Base+0x9e3c>
  427ee4:	ldr	x0, [sp, #160]
  427ee8:	mov	w1, #0x6                   	// #6
  427eec:	mov	x2, #0x1                   	// #1
  427ef0:	str	x19, [sp, #296]
  427ef4:	tst	x0, #0x1
  427ef8:	mov	w0, #0x4                   	// #4
  427efc:	csel	w1, w0, w1, ne  // ne = any
  427f00:	cmp	x19, x21
  427f04:	str	w1, [sp, #496]
  427f08:	csel	x1, x19, x21, ge  // ge = tcont
  427f0c:	str	x1, [sp, #136]
  427f10:	mov	w1, #0x8                   	// #8
  427f14:	cneg	x2, x2, gt
  427f18:	str	w1, [sp, #176]
  427f1c:	ldr	w1, [x27, #180]
  427f20:	str	x2, [sp, #216]
  427f24:	csel	x2, x19, x21, le
  427f28:	str	x2, [sp, #184]
  427f2c:	str	w1, [sp, #240]
  427f30:	cbz	x26, 427f80 <_obstack_memory_used@@Base+0x9490>
  427f34:	ldr	w1, [sp, #240]
  427f38:	cmp	w1, #0x1
  427f3c:	b.eq	427f60 <_obstack_memory_used@@Base+0x9470>  // b.none
  427f40:	ldr	x0, [sp, #120]
  427f44:	ldr	x1, [sp, #224]
  427f48:	ldr	x0, [x0, #24]
  427f4c:	and	x0, x0, #0x400000
  427f50:	orr	x0, x1, x0
  427f54:	cmp	x0, #0x0
  427f58:	cset	w0, eq  // eq = none
  427f5c:	lsl	w0, w0, #2
  427f60:	ldr	x1, [sp, #224]
  427f64:	cmp	x19, x21
  427f68:	cset	w2, le
  427f6c:	cmp	x1, #0x0
  427f70:	cset	w1, ne  // ne = any
  427f74:	orr	w0, w1, w0
  427f78:	orr	w0, w0, w2, lsl #1
  427f7c:	str	w0, [sp, #176]
  427f80:	ldr	x0, [sp, #184]
  427f84:	cmp	x19, x0
  427f88:	ldr	x0, [sp, #136]
  427f8c:	cset	w1, lt  // lt = tstop
  427f90:	cmp	x19, x0
  427f94:	cset	w0, gt
  427f98:	orr	w0, w1, w0
  427f9c:	str	w0, [sp, #284]
  427fa0:	cbnz	w0, 428104 <_obstack_memory_used@@Base+0x9614>
  427fa4:	cmp	x19, x21
  427fa8:	add	x0, sp, #0x128
  427fac:	csel	x0, x0, xzr, le
  427fb0:	str	x0, [sp, #264]
  427fb4:	cmp	x0, #0x0
  427fb8:	stp	x27, x26, [sp, #200]
  427fbc:	cset	w0, ne  // ne = any
  427fc0:	str	w0, [sp, #280]
  427fc4:	ldr	w0, [sp, #176]
  427fc8:	cmp	w0, #0x7
  427fcc:	b.eq	4288b0 <_obstack_memory_used@@Base+0x9dc0>  // b.none
  427fd0:	cmp	w0, #0x8
  427fd4:	b.eq	428178 <_obstack_memory_used@@Base+0x9688>  // b.none
  427fd8:	cmp	w0, #0x5
  427fdc:	b.gt	428080 <_obstack_memory_used@@Base+0x9590>
  427fe0:	cmp	w0, #0x3
  427fe4:	b.gt	428b50 <_obstack_memory_used@@Base+0xa060>
  427fe8:	ldr	x22, [sp, #136]
  427fec:	ldr	x20, [sp, #168]
  427ff0:	ldr	x21, [sp, #184]
  427ff4:	ldp	x26, x23, [sp, #208]
  427ff8:	ldr	x2, [sp, #424]
  427ffc:	b	428034 <_obstack_memory_used@@Base+0x9544>
  428000:	cmp	x20, x19
  428004:	mov	x0, x26
  428008:	b.le	428018 <_obstack_memory_used@@Base+0x9528>
  42800c:	ldr	x0, [sp, #392]
  428010:	ldrb	w0, [x0, x1]
  428014:	add	x0, x26, x0
  428018:	ldrb	w0, [x0]
  42801c:	cbnz	w0, 428178 <_obstack_memory_used@@Base+0x9688>
  428020:	add	x19, x19, x23
  428024:	str	x19, [sp, #296]
  428028:	cmp	x19, x21
  42802c:	ccmp	x19, x22, #0x0, ge  // ge = tcont
  428030:	b.gt	428100 <_obstack_memory_used@@Base+0x9610>
  428034:	ldr	x0, [sp, #440]
  428038:	sub	x1, x19, x2
  42803c:	cmp	x0, x1
  428040:	b.hi	428000 <_obstack_memory_used@@Base+0x9510>  // b.pmore
  428044:	ldr	w2, [sp, #160]
  428048:	mov	x1, x19
  42804c:	add	x0, sp, #0x180
  428050:	bl	420810 <_obstack_memory_used@@Base+0x1d20>
  428054:	cbnz	w0, 428d94 <_obstack_memory_used@@Base+0xa2a4>
  428058:	ldr	x2, [sp, #424]
  42805c:	sub	x1, x19, x2
  428060:	b	428000 <_obstack_memory_used@@Base+0x9510>
  428064:	mov	w0, #0x1                   	// #1
  428068:	str	w0, [sp, #156]
  42806c:	str	w0, [sp, #180]
  428070:	b	427d3c <_obstack_memory_used@@Base+0x924c>
  428074:	tst	x0, #0x1
  428078:	csel	x26, x26, xzr, eq  // eq = none
  42807c:	b	427c8c <_obstack_memory_used@@Base+0x919c>
  428080:	ldr	w0, [sp, #176]
  428084:	cmp	w0, #0x6
  428088:	b.ne	427fe8 <_obstack_memory_used@@Base+0x94f8>  // b.any
  42808c:	ldr	x0, [sp, #136]
  428090:	mov	w2, #0x0                   	// #0
  428094:	cmp	x0, x19
  428098:	mov	x0, x19
  42809c:	b.le	42816c <_obstack_memory_used@@Base+0x967c>
  4280a0:	ldr	x4, [sp, #136]
  4280a4:	ldr	x3, [sp, #192]
  4280a8:	ldr	x26, [sp, #208]
  4280ac:	nop
  4280b0:	ldrb	w1, [x3, x0]
  4280b4:	ldrb	w1, [x26, x1]
  4280b8:	cbnz	w1, 428160 <_obstack_memory_used@@Base+0x9670>
  4280bc:	add	x0, x0, #0x1
  4280c0:	mov	w2, #0x1                   	// #1
  4280c4:	cmp	x0, x4
  4280c8:	b.ne	4280b0 <_obstack_memory_used@@Base+0x95c0>  // b.any
  4280cc:	ldr	x0, [sp, #136]
  4280d0:	str	x0, [sp, #296]
  4280d4:	mov	x19, x0
  4280d8:	ldr	x0, [sp, #168]
  4280dc:	cmp	x19, x0
  4280e0:	mov	x0, #0x0                   	// #0
  4280e4:	b.lt	428d30 <_obstack_memory_used@@Base+0xa240>  // b.tstop
  4280e8:	ldr	x1, [sp, #224]
  4280ec:	cbz	x1, 4280f4 <_obstack_memory_used@@Base+0x9604>
  4280f0:	ldrb	w0, [x1, x0]
  4280f4:	ldr	x1, [sp, #208]
  4280f8:	ldrb	w0, [x1, x0]
  4280fc:	cbnz	w0, 428178 <_obstack_memory_used@@Base+0x9688>
  428100:	ldr	x27, [sp, #200]
  428104:	mov	w0, #0x1                   	// #1
  428108:	ldr	x28, [sp, #568]
  42810c:	str	w0, [sp, #152]
  428110:	ldp	x23, x24, [sp, #48]
  428114:	mov	x0, x28
  428118:	bl	4026b0 <free@plt>
  42811c:	ldr	x0, [x27, #152]
  428120:	cbz	x0, 428948 <_obstack_memory_used@@Base+0x9e58>
  428124:	add	x0, sp, #0x180
  428128:	bl	41ff38 <_obstack_memory_used@@Base+0x1448>
  42812c:	ldr	x0, [sp, #632]
  428130:	bl	4026b0 <free@plt>
  428134:	ldr	x0, [sp, #600]
  428138:	bl	4026b0 <free@plt>
  42813c:	ldr	x0, [sp, #400]
  428140:	bl	4026b0 <free@plt>
  428144:	ldr	x0, [sp, #408]
  428148:	bl	4026b0 <free@plt>
  42814c:	ldrb	w0, [sp, #523]
  428150:	cbz	w0, 428904 <_obstack_memory_used@@Base+0x9e14>
  428154:	ldr	x0, [sp, #392]
  428158:	bl	4026b0 <free@plt>
  42815c:	b	428904 <_obstack_memory_used@@Base+0x9e14>
  428160:	cbz	w2, 428178 <_obstack_memory_used@@Base+0x9688>
  428164:	mov	x19, x0
  428168:	str	x0, [sp, #296]
  42816c:	ldr	x0, [sp, #136]
  428170:	cmp	x0, x19
  428174:	b.eq	4280d8 <_obstack_memory_used@@Base+0x95e8>  // b.none
  428178:	ldr	w2, [sp, #160]
  42817c:	mov	x1, x19
  428180:	add	x0, sp, #0x180
  428184:	bl	420810 <_obstack_memory_used@@Base+0x1d20>
  428188:	str	w0, [sp, #152]
  42818c:	cbnz	w0, 428c88 <_obstack_memory_used@@Base+0xa198>
  428190:	ldr	w0, [sp, #240]
  428194:	cmp	w0, #0x1
  428198:	b.eq	4281b4 <_obstack_memory_used@@Base+0x96c4>  // b.none
  42819c:	ldr	x0, [sp, #432]
  4281a0:	cbz	x0, 4281b4 <_obstack_memory_used@@Base+0x96c4>
  4281a4:	ldr	x0, [sp, #400]
  4281a8:	ldr	w0, [x0]
  4281ac:	cmn	w0, #0x1
  4281b0:	b.eq	428884 <_obstack_memory_used@@Base+0x9d94>  // b.none
  4281b4:	ldr	x20, [sp, #536]
  4281b8:	add	x0, sp, #0x240
  4281bc:	ldr	x27, [sp, #456]
  4281c0:	ldr	x19, [x20, #72]
  4281c4:	stp	xzr, xzr, [x0]
  4281c8:	ldrsb	w0, [x19, #104]
  4281cc:	str	wzr, [sp, #292]
  4281d0:	str	wzr, [sp, #608]
  4281d4:	tbz	w0, #31, 428208 <_obstack_memory_used@@Base+0x9718>
  4281d8:	ldr	w2, [sp, #544]
  4281dc:	sub	x1, x27, #0x1
  4281e0:	add	x0, sp, #0x180
  4281e4:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  4281e8:	tbnz	w0, #0, 428c48 <_obstack_memory_used@@Base+0xa158>
  4281ec:	cbz	w0, 428208 <_obstack_memory_used@@Base+0x9718>
  4281f0:	and	w1, w0, #0x6
  4281f4:	cmp	w1, #0x6
  4281f8:	b.eq	42896c <_obstack_memory_used@@Base+0x9e7c>  // b.none
  4281fc:	tbnz	w0, #1, 428ce8 <_obstack_memory_used@@Base+0xa1f8>
  428200:	tbnz	w0, #2, 428cf4 <_obstack_memory_used@@Base+0xa204>
  428204:	nop
  428208:	ldr	x0, [sp, #568]
  42820c:	cbz	x0, 428b44 <_obstack_memory_used@@Base+0xa054>
  428210:	ldr	x1, [x20, #152]
  428214:	str	x19, [x0, x27, lsl #3]
  428218:	cbnz	x1, 428d3c <_obstack_memory_used@@Base+0xa24c>
  42821c:	ldrb	w0, [x19, #104]
  428220:	ldr	w24, [sp, #280]
  428224:	str	xzr, [sp, #112]
  428228:	mov	x25, #0xffffffffffffffff    	// #-1
  42822c:	tbnz	w0, #4, 428ca8 <_obstack_memory_used@@Base+0xa1b8>
  428230:	ldr	x0, [sp, #264]
  428234:	str	x0, [sp, #144]
  428238:	ldr	x28, [sp, #456]
  42823c:	ldr	x0, [sp, #488]
  428240:	cmp	x0, x28
  428244:	b.le	428e3c <_obstack_memory_used@@Base+0xa34c>
  428248:	ldr	x0, [sp, #448]
  42824c:	mov	x26, x28
  428250:	add	x21, x26, #0x1
  428254:	cmp	x21, x0
  428258:	b.ge	428308 <_obstack_memory_used@@Base+0x9818>  // b.tcont
  42825c:	nop
  428260:	ldr	x0, [sp, #432]
  428264:	cmp	x21, x0
  428268:	b.ge	428820 <_obstack_memory_used@@Base+0x9d30>  // b.tcont
  42826c:	ldrb	w0, [x19, #104]
  428270:	tbnz	w0, #5, 428338 <_obstack_memory_used@@Base+0x9848>
  428274:	ldr	x0, [sp, #392]
  428278:	add	x1, x26, #0x1
  42827c:	str	x1, [sp, #456]
  428280:	ldrb	w20, [x0, x26]
  428284:	ldr	x0, [x19, #88]
  428288:	cbz	x0, 4287f0 <_obstack_memory_used@@Base+0x9d00>
  42828c:	ldr	x20, [x0, x20, lsl #3]
  428290:	ldr	x0, [sp, #568]
  428294:	cbz	x0, 4282ac <_obstack_memory_used@@Base+0x97bc>
  428298:	mov	x2, x20
  42829c:	add	x1, sp, #0x180
  4282a0:	add	x0, sp, #0x124
  4282a4:	bl	426dc0 <_obstack_memory_used@@Base+0x82d0>
  4282a8:	mov	x20, x0
  4282ac:	cbz	x20, 4284c0 <_obstack_memory_used@@Base+0x99d0>
  4282b0:	cmp	x20, x19
  4282b4:	ldrb	w0, [x20, #104]
  4282b8:	csel	w24, w24, wzr, eq  // eq = none
  4282bc:	cmp	w24, #0x0
  4282c0:	csel	x27, x27, x21, eq  // eq = none
  4282c4:	ldr	x26, [sp, #456]
  4282c8:	tbz	w0, #4, 4282e8 <_obstack_memory_used@@Base+0x97f8>
  4282cc:	tbnz	w0, #7, 428704 <_obstack_memory_used@@Base+0x9c14>
  4282d0:	ldr	w0, [sp, #156]
  4282d4:	cbz	w0, 428cd0 <_obstack_memory_used@@Base+0xa1e0>
  4282d8:	mov	x25, x26
  4282dc:	mov	x0, #0x1                   	// #1
  4282e0:	str	x0, [sp, #112]
  4282e4:	str	xzr, [sp, #144]
  4282e8:	ldr	x0, [sp, #488]
  4282ec:	cmp	x0, x26
  4282f0:	b.le	428518 <_obstack_memory_used@@Base+0x9a28>
  4282f4:	ldr	x0, [sp, #448]
  4282f8:	add	x21, x26, #0x1
  4282fc:	mov	x19, x20
  428300:	cmp	x21, x0
  428304:	b.lt	428260 <_obstack_memory_used@@Base+0x9770>  // b.tstop
  428308:	ldr	x1, [sp, #472]
  42830c:	cmp	x0, x1
  428310:	b.ge	428260 <_obstack_memory_used@@Base+0x9770>  // b.tcont
  428314:	add	w1, w21, #0x1
  428318:	add	x0, sp, #0x180
  42831c:	bl	423920 <_obstack_memory_used@@Base+0x4e30>
  428320:	str	w0, [sp, #292]
  428324:	cbnz	w0, 428978 <_obstack_memory_used@@Base+0x9e88>
  428328:	ldrb	w0, [x19, #104]
  42832c:	ldr	x26, [sp, #456]
  428330:	tbz	w0, #5, 428274 <_obstack_memory_used@@Base+0x9784>
  428334:	nop
  428338:	ldr	x5, [x19, #16]
  42833c:	ldr	x20, [sp, #536]
  428340:	cmp	x5, #0x0
  428344:	b.le	4284b8 <_obstack_memory_used@@Base+0x99c8>
  428348:	add	x28, x20, #0xd8
  42834c:	str	w24, [sp, #244]
  428350:	mov	x24, x5
  428354:	stp	x25, x21, [sp, #248]
  428358:	mov	x21, x26
  42835c:	mov	x22, #0x0                   	// #0
  428360:	ldr	x0, [x19, #24]
  428364:	ldr	x25, [x20]
  428368:	ldr	x26, [x0, x22, lsl #3]
  42836c:	add	x0, x25, x26, lsl #4
  428370:	ldrb	w1, [x0, #10]
  428374:	tbz	w1, #4, 4284a0 <_obstack_memory_used@@Base+0x99b0>
  428378:	ldr	w23, [x0, #8]
  42837c:	tst	w23, #0x3ff00
  428380:	b.eq	4283b8 <_obstack_memory_used@@Base+0x98c8>  // b.none
  428384:	ldr	w2, [sp, #544]
  428388:	mov	x1, x21
  42838c:	add	x0, sp, #0x180
  428390:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  428394:	ubfx	x2, x23, #8, #10
  428398:	tbz	w23, #10, 42871c <_obstack_memory_used@@Base+0x9c2c>
  42839c:	tbz	w0, #0, 4284a0 <_obstack_memory_used@@Base+0x99b0>
  4283a0:	tbnz	w2, #3, 4284a0 <_obstack_memory_used@@Base+0x99b0>
  4283a4:	tbz	w2, #5, 4283ac <_obstack_memory_used@@Base+0x98bc>
  4283a8:	tbz	w0, #1, 4284a0 <_obstack_memory_used@@Base+0x99b0>
  4283ac:	tbz	w2, #7, 4283b8 <_obstack_memory_used@@Base+0x98c8>
  4283b0:	tbz	w0, #3, 4284a0 <_obstack_memory_used@@Base+0x99b0>
  4283b4:	nop
  4283b8:	mov	x4, x21
  4283bc:	mov	x0, x25
  4283c0:	add	x3, sp, #0x180
  4283c4:	mov	x2, x26
  4283c8:	mov	x1, x28
  4283cc:	bl	422920 <_obstack_memory_used@@Base+0x3e30>
  4283d0:	cbz	w0, 428498 <_obstack_memory_used@@Base+0x99a8>
  4283d4:	ldp	x3, x23, [sp, #448]
  4283d8:	ldr	w1, [sp, #608]
  4283dc:	ldr	x21, [sp, #576]
  4283e0:	cmp	w1, w0
  4283e4:	csel	w1, w1, w0, ge  // ge = tcont
  4283e8:	str	w1, [sp, #608]
  4283ec:	add	x23, x23, w0, sxtw
  4283f0:	cmp	x23, x3
  4283f4:	b.lt	428728 <_obstack_memory_used@@Base+0x9c38>  // b.tstop
  4283f8:	ldr	x0, [sp, #472]
  4283fc:	cmp	x3, x0
  428400:	b.ge	428728 <_obstack_memory_used@@Base+0x9c38>  // b.tcont
  428404:	add	w1, w23, #0x1
  428408:	add	x0, sp, #0x180
  42840c:	bl	423920 <_obstack_memory_used@@Base+0x4e30>
  428410:	cbnz	w0, 428750 <_obstack_memory_used@@Base+0x9c60>
  428414:	cmp	x23, x21
  428418:	b.gt	4287c8 <_obstack_memory_used@@Base+0x9cd8>
  42841c:	str	wzr, [sp, #304]
  428420:	ldr	x0, [x20, #24]
  428424:	ldr	x21, [sp, #568]
  428428:	ldr	x0, [x0, x26, lsl #3]
  42842c:	ldr	x1, [x21, x23, lsl #3]
  428430:	ldr	x3, [x20, #48]
  428434:	add	x0, x0, x0, lsl #1
  428438:	add	x3, x3, x0, lsl #3
  42843c:	cbz	x1, 42876c <_obstack_memory_used@@Base+0x9c7c>
  428440:	ldr	x1, [x1, #80]
  428444:	mov	x2, x3
  428448:	add	x0, sp, #0x148
  42844c:	bl	4264d8 <_obstack_memory_used@@Base+0x79e8>
  428450:	str	w0, [sp, #304]
  428454:	cbnz	w0, 428750 <_obstack_memory_used@@Base+0x9c60>
  428458:	ldr	w2, [sp, #544]
  42845c:	sub	x1, x23, #0x1
  428460:	add	x0, sp, #0x180
  428464:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  428468:	mov	w3, w0
  42846c:	ldr	x26, [sp, #568]
  428470:	mov	x1, x20
  428474:	add	x2, sp, #0x148
  428478:	add	x0, sp, #0x130
  42847c:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  428480:	str	x0, [x26, x23, lsl #3]
  428484:	ldr	x0, [sp, #344]
  428488:	bl	4026b0 <free@plt>
  42848c:	ldr	x1, [sp, #568]
  428490:	ldr	x0, [x1, x23, lsl #3]
  428494:	cbz	x0, 4287b4 <_obstack_memory_used@@Base+0x9cc4>
  428498:	ldr	x24, [x19, #16]
  42849c:	ldr	x21, [sp, #456]
  4284a0:	add	x22, x22, #0x1
  4284a4:	cmp	x22, x24
  4284a8:	b.lt	428360 <_obstack_memory_used@@Base+0x9870>  // b.tstop
  4284ac:	mov	x26, x21
  4284b0:	ldr	w24, [sp, #244]
  4284b4:	ldp	x25, x21, [sp, #248]
  4284b8:	str	wzr, [sp, #292]
  4284bc:	b	428274 <_obstack_memory_used@@Base+0x9784>
  4284c0:	ldr	w0, [sp, #292]
  4284c4:	ldr	x28, [sp, #568]
  4284c8:	cbnz	w0, 428928 <_obstack_memory_used@@Base+0x9e38>
  4284cc:	cbz	x28, 428518 <_obstack_memory_used@@Base+0x9a28>
  4284d0:	ldr	w0, [sp, #180]
  4284d4:	ldr	w1, [sp, #112]
  4284d8:	eor	w0, w0, #0x1
  4284dc:	tst	w0, w1
  4284e0:	b.ne	428518 <_obstack_memory_used@@Base+0x9a28>  // b.any
  4284e4:	mov	w1, #0x0                   	// #0
  4284e8:	ldr	x0, [sp, #456]
  4284ec:	ldr	x2, [sp, #576]
  4284f0:	b	428500 <_obstack_memory_used@@Base+0x9a10>
  4284f4:	ldr	x3, [x28, x0, lsl #3]
  4284f8:	mov	w1, #0x1                   	// #1
  4284fc:	cbnz	x3, 4286d0 <_obstack_memory_used@@Base+0x9be0>
  428500:	mov	x3, x0
  428504:	add	x0, x0, #0x1
  428508:	cmp	x2, x0
  42850c:	b.ge	4284f4 <_obstack_memory_used@@Base+0x9a04>  // b.tcont
  428510:	cbz	w1, 428518 <_obstack_memory_used@@Base+0x9a28>
  428514:	str	x3, [sp, #456]
  428518:	ldr	x1, [sp, #144]
  42851c:	cbz	x1, 42852c <_obstack_memory_used@@Base+0x9a3c>
  428520:	ldr	x0, [x1]
  428524:	add	x27, x0, x27
  428528:	str	x27, [x1]
  42852c:	cmn	x25, #0x1
  428530:	b.eq	428878 <_obstack_memory_used@@Base+0x9d88>  // b.none
  428534:	cmn	x25, #0x2
  428538:	b.eq	428978 <_obstack_memory_used@@Base+0x9e88>  // b.none
  42853c:	ldr	x0, [sp, #120]
  428540:	str	x25, [sp, #552]
  428544:	ldrb	w0, [x0, #56]
  428548:	tbnz	w0, #4, 428990 <_obstack_memory_used@@Base+0x9ea0>
  42854c:	ldr	x1, [sp, #128]
  428550:	cmp	x1, #0x1
  428554:	b.ls	428be4 <_obstack_memory_used@@Base+0xa0f4>  // b.plast
  428558:	ldr	x28, [sp, #568]
  42855c:	mov	x2, x25
  428560:	add	x0, sp, #0x180
  428564:	ldr	x1, [x28, x25, lsl #3]
  428568:	bl	420590 <_obstack_memory_used@@Base+0x1aa0>
  42856c:	ldr	x1, [sp, #200]
  428570:	ldrb	w1, [x1, #176]
  428574:	str	x0, [sp, #560]
  428578:	tbnz	w1, #0, 4289b4 <_obstack_memory_used@@Base+0x9ec4>
  42857c:	ldr	x0, [sp, #200]
  428580:	ldr	x0, [x0, #152]
  428584:	cbnz	x0, 4289b4 <_obstack_memory_used@@Base+0x9ec4>
  428588:	ldr	x0, [sp, #128]
  42858c:	ldr	x27, [sp, #200]
  428590:	cmp	x0, #0x1
  428594:	b.ls	4285bc <_obstack_memory_used@@Base+0x9acc>  // b.plast
  428598:	ldr	x1, [sp, #272]
  42859c:	mov	x2, x0
  4285a0:	mvni	v0.4s, #0x0
  4285a4:	add	x0, x1, #0x10
  4285a8:	add	x1, x1, x2, lsl #4
  4285ac:	nop
  4285b0:	str	q0, [x0], #16
  4285b4:	cmp	x1, x0
  4285b8:	b.ne	4285b0 <_obstack_memory_used@@Base+0x9ac0>  // b.any
  4285bc:	ldr	x0, [sp, #120]
  4285c0:	ldrb	w0, [x0, #56]
  4285c4:	ldr	x1, [sp, #272]
  4285c8:	tst	x0, #0x10
  4285cc:	ldr	x0, [sp, #128]
  4285d0:	stp	xzr, x25, [x1]
  4285d4:	mov	x1, #0x0                   	// #0
  4285d8:	ccmp	x0, #0x1, #0x4, eq  // eq = none
  4285dc:	b.ne	428e64 <_obstack_memory_used@@Base+0xa374>  // b.any
  4285e0:	ldrb	w4, [sp, #524]
  4285e4:	mov	x2, #0x0                   	// #0
  4285e8:	ldr	x0, [sp, #272]
  4285ec:	ldr	x3, [sp, #296]
  4285f0:	ldr	x7, [sp, #408]
  4285f4:	ldp	x5, x6, [sp, #432]
  4285f8:	cbnz	w4, 428ea0 <_obstack_memory_used@@Base+0xa3b0>
  4285fc:	ldr	x5, [sp, #128]
  428600:	b	428608 <_obstack_memory_used@@Base+0x9b18>
  428604:	ldr	x1, [x0]
  428608:	add	x4, x3, x1
  42860c:	add	x2, x2, #0x1
  428610:	cmn	x1, #0x1
  428614:	b.eq	428624 <_obstack_memory_used@@Base+0x9b34>  // b.none
  428618:	ldr	x1, [x0, #8]
  42861c:	add	x1, x3, x1
  428620:	stp	x4, x1, [x0]
  428624:	add	x0, x0, #0x10
  428628:	cmp	x5, x2
  42862c:	b.ne	428604 <_obstack_memory_used@@Base+0x9b14>  // b.any
  428630:	ldr	x0, [sp, #232]
  428634:	cmp	x0, #0x0
  428638:	b.le	428664 <_obstack_memory_used@@Base+0x9b74>
  42863c:	ldr	x0, [sp, #128]
  428640:	ldr	x1, [sp, #272]
  428644:	mvni	v0.4s, #0x0
  428648:	add	x0, x1, x0, lsl #4
  42864c:	ldr	x1, [sp, #232]
  428650:	add	x1, x0, x1, lsl #4
  428654:	nop
  428658:	str	q0, [x0], #16
  42865c:	cmp	x1, x0
  428660:	b.ne	428658 <_obstack_memory_used@@Base+0x9b68>  // b.any
  428664:	ldr	x3, [x27, #224]
  428668:	ldr	x28, [sp, #568]
  42866c:	cbz	x3, 4286c8 <_obstack_memory_used@@Base+0x9bd8>
  428670:	ldr	x0, [sp, #128]
  428674:	cmp	x0, #0x1
  428678:	b.ls	4286c8 <_obstack_memory_used@@Base+0x9bd8>  // b.plast
  42867c:	ldr	x5, [sp, #272]
  428680:	sub	x4, x0, #0x1
  428684:	mov	x0, #0x0                   	// #0
  428688:	add	x2, x5, #0x10
  42868c:	nop
  428690:	ldr	x1, [x3, x0, lsl #3]
  428694:	cmp	x1, x0
  428698:	b.eq	4286b8 <_obstack_memory_used@@Base+0x9bc8>  // b.none
  42869c:	add	x1, x5, x1, lsl #4
  4286a0:	ldr	x1, [x1, #16]
  4286a4:	str	x1, [x2]
  4286a8:	ldr	x1, [x3, x0, lsl #3]
  4286ac:	add	x1, x5, x1, lsl #4
  4286b0:	ldr	x1, [x1, #24]
  4286b4:	str	x1, [x2, #8]
  4286b8:	add	x0, x0, #0x1
  4286bc:	add	x2, x2, #0x10
  4286c0:	cmp	x4, x0
  4286c4:	b.ne	428690 <_obstack_memory_used@@Base+0x9ba0>  // b.any
  4286c8:	ldp	x23, x24, [sp, #48]
  4286cc:	b	428938 <_obstack_memory_used@@Base+0x9e48>
  4286d0:	add	x1, sp, #0x180
  4286d4:	mov	x2, #0x0                   	// #0
  4286d8:	str	x0, [sp, #456]
  4286dc:	add	x0, sp, #0x124
  4286e0:	bl	426dc0 <_obstack_memory_used@@Base+0x82d0>
  4286e4:	ldr	w1, [sp, #292]
  4286e8:	cbnz	w1, 4286f8 <_obstack_memory_used@@Base+0x9c08>
  4286ec:	cbnz	x0, 428cc8 <_obstack_memory_used@@Base+0xa1d8>
  4286f0:	ldr	x28, [sp, #568]
  4286f4:	b	4284e4 <_obstack_memory_used@@Base+0x99f4>
  4286f8:	mov	x20, x0
  4286fc:	cbnz	x0, 4282b0 <_obstack_memory_used@@Base+0x97c0>
  428700:	b	428518 <_obstack_memory_used@@Base+0x9a28>
  428704:	mov	x2, x26
  428708:	mov	x1, x20
  42870c:	add	x0, sp, #0x180
  428710:	bl	420590 <_obstack_memory_used@@Base+0x1aa0>
  428714:	cbz	x0, 4282e8 <_obstack_memory_used@@Base+0x97f8>
  428718:	b	4282d0 <_obstack_memory_used@@Base+0x97e0>
  42871c:	tbz	w2, #3, 4283a4 <_obstack_memory_used@@Base+0x98b4>
  428720:	tbz	w0, #0, 4283a4 <_obstack_memory_used@@Base+0x98b4>
  428724:	b	4284a0 <_obstack_memory_used@@Base+0x99b0>
  428728:	ldr	x0, [sp, #432]
  42872c:	cmp	x23, x0
  428730:	b.lt	428414 <_obstack_memory_used@@Base+0x9924>  // b.tstop
  428734:	ldr	x1, [sp, #472]
  428738:	cmp	x0, x1
  42873c:	b.ge	428414 <_obstack_memory_used@@Base+0x9924>  // b.tcont
  428740:	add	w1, w23, #0x1
  428744:	add	x0, sp, #0x180
  428748:	bl	423920 <_obstack_memory_used@@Base+0x4e30>
  42874c:	cbz	w0, 428414 <_obstack_memory_used@@Base+0x9924>
  428750:	ldp	x25, x21, [sp, #248]
  428754:	ldr	w24, [sp, #244]
  428758:	ldr	x1, [sp, #568]
  42875c:	str	w0, [sp, #292]
  428760:	cbz	x1, 428af8 <_obstack_memory_used@@Base+0xa008>
  428764:	mov	x20, #0x0                   	// #0
  428768:	b	428298 <_obstack_memory_used@@Base+0x97a8>
  42876c:	add	x0, sp, #0x200
  428770:	ldr	w2, [sp, #544]
  428774:	ldp	x6, x7, [x3]
  428778:	sub	x1, x23, #0x1
  42877c:	stp	x6, x7, [x0, #-184]
  428780:	add	x0, sp, #0x180
  428784:	ldr	x3, [x3, #16]
  428788:	str	x3, [sp, #344]
  42878c:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  428790:	mov	w3, w0
  428794:	mov	x1, x20
  428798:	add	x2, sp, #0x148
  42879c:	add	x0, sp, #0x130
  4287a0:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  4287a4:	ldr	x1, [sp, #568]
  4287a8:	str	x0, [x21, x23, lsl #3]
  4287ac:	ldr	x0, [x1, x23, lsl #3]
  4287b0:	cbnz	x0, 428498 <_obstack_memory_used@@Base+0x99a8>
  4287b4:	ldr	w0, [sp, #304]
  4287b8:	cbz	w0, 428498 <_obstack_memory_used@@Base+0x99a8>
  4287bc:	ldr	w24, [sp, #244]
  4287c0:	ldp	x25, x21, [sp, #248]
  4287c4:	b	42875c <_obstack_memory_used@@Base+0x9c6c>
  4287c8:	ldr	x0, [sp, #568]
  4287cc:	add	x3, x21, #0x1
  4287d0:	sub	x2, x23, x21
  4287d4:	mov	w1, #0x0                   	// #0
  4287d8:	lsl	x2, x2, #3
  4287dc:	add	x0, x0, x3, lsl #3
  4287e0:	bl	402510 <memset@plt>
  4287e4:	str	wzr, [sp, #304]
  4287e8:	str	x23, [sp, #576]
  4287ec:	b	428420 <_obstack_memory_used@@Base+0x9930>
  4287f0:	ldr	x22, [x19, #96]
  4287f4:	cbz	x22, 428ad4 <_obstack_memory_used@@Base+0x9fe4>
  4287f8:	ldr	w2, [sp, #544]
  4287fc:	add	x0, sp, #0x180
  428800:	ldr	x1, [sp, #456]
  428804:	sub	x1, x1, #0x1
  428808:	bl	420368 <_obstack_memory_used@@Base+0x1878>
  42880c:	and	x1, x20, #0xff
  428810:	tbz	w0, #0, 428964 <_obstack_memory_used@@Base+0x9e74>
  428814:	add	x1, x1, #0x100
  428818:	ldr	x20, [x22, x1, lsl #3]
  42881c:	b	428290 <_obstack_memory_used@@Base+0x97a0>
  428820:	ldr	x1, [sp, #472]
  428824:	cmp	x0, x1
  428828:	b.ge	42826c <_obstack_memory_used@@Base+0x977c>  // b.tcont
  42882c:	b	428314 <_obstack_memory_used@@Base+0x9824>
  428830:	add	x2, sp, #0x200
  428834:	stp	x24, xzr, [sp, #328]
  428838:	add	x28, sp, #0x148
  42883c:	stp	x22, x25, [sp, #344]
  428840:	mov	x1, x28
  428844:	add	x0, sp, #0x180
  428848:	stp	xzr, xzr, [x2, #-152]
  42884c:	str	xzr, [sp, #376]
  428850:	bl	427820 <_obstack_memory_used@@Base+0x8d30>
  428854:	mov	w19, w0
  428858:	ldr	x0, [sp, #376]
  42885c:	bl	4026b0 <free@plt>
  428860:	cbnz	w19, 428dc4 <_obstack_memory_used@@Base+0xa2d4>
  428864:	ldr	x0, [x24]
  428868:	cbnz	x0, 428bbc <_obstack_memory_used@@Base+0xa0cc>
  42886c:	mov	x0, x24
  428870:	bl	4026b0 <free@plt>
  428874:	nop
  428878:	add	x0, sp, #0x180
  42887c:	bl	41ff38 <_obstack_memory_used@@Base+0x1448>
  428880:	ldr	x19, [sp, #296]
  428884:	ldr	x0, [sp, #216]
  428888:	add	x19, x19, x0
  42888c:	str	x19, [sp, #296]
  428890:	ldr	x0, [sp, #184]
  428894:	cmp	x19, x0
  428898:	ldr	x0, [sp, #136]
  42889c:	ccmp	x19, x0, #0x0, ge  // ge = tcont
  4288a0:	b.gt	428100 <_obstack_memory_used@@Base+0x9610>
  4288a4:	ldr	w0, [sp, #176]
  4288a8:	cmp	w0, #0x7
  4288ac:	b.ne	427fd0 <_obstack_memory_used@@Base+0x94e0>  // b.any
  4288b0:	ldr	x0, [sp, #136]
  4288b4:	mov	w2, #0x0                   	// #0
  4288b8:	cmp	x0, x19
  4288bc:	mov	x0, x19
  4288c0:	b.le	42816c <_obstack_memory_used@@Base+0x967c>
  4288c4:	ldr	x5, [sp, #136]
  4288c8:	ldr	x4, [sp, #192]
  4288cc:	ldr	x26, [sp, #208]
  4288d0:	ldr	x3, [sp, #224]
  4288d4:	nop
  4288d8:	ldrb	w1, [x4, x0]
  4288dc:	ldrb	w1, [x3, x1]
  4288e0:	ldrb	w1, [x26, x1]
  4288e4:	cbnz	w1, 428c98 <_obstack_memory_used@@Base+0xa1a8>
  4288e8:	add	x0, x0, #0x1
  4288ec:	mov	w2, #0x1                   	// #1
  4288f0:	cmp	x0, x5
  4288f4:	b.ne	4288d8 <_obstack_memory_used@@Base+0x9de8>  // b.any
  4288f8:	b	4280cc <_obstack_memory_used@@Base+0x95dc>
  4288fc:	mov	w0, #0x1                   	// #1
  428900:	str	w0, [sp, #152]
  428904:	ldr	w0, [sp, #152]
  428908:	ldp	x29, x30, [sp]
  42890c:	ldp	x19, x20, [sp, #16]
  428910:	ldp	x21, x22, [sp, #32]
  428914:	ldp	x25, x26, [sp, #64]
  428918:	ldp	x27, x28, [sp, #80]
  42891c:	ldr	d8, [sp, #96]
  428920:	add	sp, sp, #0x280
  428924:	ret
  428928:	ldr	x27, [sp, #200]
  42892c:	mov	w0, #0xc                   	// #12
  428930:	ldp	x23, x24, [sp, #48]
  428934:	str	w0, [sp, #152]
  428938:	mov	x0, x28
  42893c:	bl	4026b0 <free@plt>
  428940:	ldr	x0, [x27, #152]
  428944:	cbnz	x0, 428124 <_obstack_memory_used@@Base+0x9634>
  428948:	ldr	x0, [sp, #400]
  42894c:	bl	4026b0 <free@plt>
  428950:	ldr	x0, [sp, #408]
  428954:	bl	4026b0 <free@plt>
  428958:	ldrb	w0, [sp, #523]
  42895c:	cbz	w0, 428904 <_obstack_memory_used@@Base+0x9e14>
  428960:	b	428154 <_obstack_memory_used@@Base+0x9664>
  428964:	ldr	x20, [x22, x20, lsl #3]
  428968:	b	428290 <_obstack_memory_used@@Base+0x97a0>
  42896c:	ldr	x19, [x20, #96]
  428970:	cbnz	x19, 428208 <_obstack_memory_used@@Base+0x9718>
  428974:	nop
  428978:	ldr	x27, [sp, #200]
  42897c:	mov	w0, #0xc                   	// #12
  428980:	str	w0, [sp, #152]
  428984:	ldp	x23, x24, [sp, #48]
  428988:	ldr	x28, [sp, #568]
  42898c:	b	428938 <_obstack_memory_used@@Base+0x9e48>
  428990:	ldr	x27, [sp, #200]
  428994:	ldr	x0, [x27, #152]
  428998:	cbz	x0, 428bd8 <_obstack_memory_used@@Base+0xa0e8>
  42899c:	ldr	x28, [sp, #568]
  4289a0:	mov	x2, x25
  4289a4:	add	x0, sp, #0x180
  4289a8:	ldr	x1, [x28, x25, lsl #3]
  4289ac:	bl	420590 <_obstack_memory_used@@Base+0x1aa0>
  4289b0:	str	x0, [sp, #560]
  4289b4:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  4289b8:	cmp	x25, x0
  4289bc:	ldr	x23, [sp, #536]
  4289c0:	ldr	x22, [sp, #560]
  4289c4:	b.hi	428928 <_obstack_memory_used@@Base+0x9e38>  // b.pmore
  4289c8:	add	x21, x25, #0x1
  4289cc:	lsl	x19, x21, #3
  4289d0:	mov	x0, x19
  4289d4:	bl	402440 <malloc@plt>
  4289d8:	mov	x24, x0
  4289dc:	cbz	x0, 428928 <_obstack_memory_used@@Base+0x9e38>
  4289e0:	ldr	x0, [x23, #152]
  4289e4:	cbz	x0, 428830 <_obstack_memory_used@@Base+0x9d40>
  4289e8:	mov	x0, x19
  4289ec:	bl	402440 <malloc@plt>
  4289f0:	mov	x20, x0
  4289f4:	mov	x27, x0
  4289f8:	cbz	x0, 428da8 <_obstack_memory_used@@Base+0xa2b8>
  4289fc:	add	x28, sp, #0x148
  428a00:	lsl	x2, x21, #3
  428a04:	mov	w1, #0x0                   	// #0
  428a08:	mov	x0, x20
  428a0c:	bl	402510 <memset@plt>
  428a10:	stp	x24, x20, [sp, #328]
  428a14:	mov	x1, x28
  428a18:	add	x0, sp, #0x180
  428a1c:	stp	x22, x25, [sp, #344]
  428a20:	stp	xzr, xzr, [x28, #32]
  428a24:	str	xzr, [x28, #48]
  428a28:	bl	427820 <_obstack_memory_used@@Base+0x8d30>
  428a2c:	mov	w19, w0
  428a30:	ldr	x0, [sp, #376]
  428a34:	bl	4026b0 <free@plt>
  428a38:	cbnz	w19, 428aa8 <_obstack_memory_used@@Base+0x9fb8>
  428a3c:	ldr	x0, [x24]
  428a40:	ldr	x1, [x20]
  428a44:	cbnz	x0, 428dcc <_obstack_memory_used@@Base+0xa2dc>
  428a48:	cbnz	x1, 428dcc <_obstack_memory_used@@Base+0xa2dc>
  428a4c:	sub	x25, x25, #0x1
  428a50:	cmn	x25, #0x1
  428a54:	b.eq	428a7c <_obstack_memory_used@@Base+0x9f8c>  // b.none
  428a58:	ldr	x2, [sp, #568]
  428a5c:	nop
  428a60:	ldr	x1, [x2, x25, lsl #3]
  428a64:	cbz	x1, 428a70 <_obstack_memory_used@@Base+0x9f80>
  428a68:	ldrb	w0, [x1, #104]
  428a6c:	tbnz	w0, #4, 428c54 <_obstack_memory_used@@Base+0xa164>
  428a70:	sub	x25, x25, #0x1
  428a74:	cmn	x25, #0x1
  428a78:	b.ne	428a60 <_obstack_memory_used@@Base+0x9f70>  // b.any
  428a7c:	mov	x0, x24
  428a80:	bl	4026b0 <free@plt>
  428a84:	mov	x0, x20
  428a88:	bl	4026b0 <free@plt>
  428a8c:	add	x0, sp, #0x180
  428a90:	bl	41ff38 <_obstack_memory_used@@Base+0x1448>
  428a94:	ldr	x19, [sp, #296]
  428a98:	b	428884 <_obstack_memory_used@@Base+0x9d94>
  428a9c:	mov	x27, #0x0                   	// #0
  428aa0:	mov	x0, x20
  428aa4:	bl	4026b0 <free@plt>
  428aa8:	mov	x0, x24
  428aac:	bl	4026b0 <free@plt>
  428ab0:	mov	x0, x27
  428ab4:	bl	4026b0 <free@plt>
  428ab8:	cmp	w19, #0x1
  428abc:	b.eq	428878 <_obstack_memory_used@@Base+0x9d88>  // b.none
  428ac0:	str	w19, [sp, #152]
  428ac4:	ldp	x23, x24, [sp, #48]
  428ac8:	ldr	x27, [sp, #200]
  428acc:	ldr	x28, [sp, #568]
  428ad0:	b	428938 <_obstack_memory_used@@Base+0x9e48>
  428ad4:	ldr	x0, [sp, #536]
  428ad8:	mov	x1, x19
  428adc:	bl	425a78 <_obstack_memory_used@@Base+0x6f88>
  428ae0:	tst	w0, #0xff
  428ae4:	b.ne	428284 <_obstack_memory_used@@Base+0x9794>  // b.any
  428ae8:	ldr	x0, [sp, #568]
  428aec:	mov	w1, #0xc                   	// #12
  428af0:	str	w1, [sp, #292]
  428af4:	cbnz	x0, 428764 <_obstack_memory_used@@Base+0x9c74>
  428af8:	mov	x28, #0x0                   	// #0
  428afc:	ldr	x27, [sp, #200]
  428b00:	b	42892c <_obstack_memory_used@@Base+0x9e3c>
  428b04:	stp	x23, x24, [sp, #48]
  428b08:	cbz	x22, 427df0 <_obstack_memory_used@@Base+0x9300>
  428b0c:	ldr	x0, [sp, #392]
  428b10:	mov	x1, x20
  428b14:	bl	402550 <realloc@plt>
  428b18:	cbz	x0, 42897c <_obstack_memory_used@@Base+0x9e8c>
  428b1c:	ldrb	w1, [x27, #176]
  428b20:	add	x2, x27, #0xb8
  428b24:	ldrb	w3, [sp, #523]
  428b28:	str	x0, [sp, #392]
  428b2c:	ubfx	x0, x1, #4, #1
  428b30:	str	x20, [sp, #448]
  428b34:	str	x2, [sp, #512]
  428b38:	strb	w0, [sp, #526]
  428b3c:	cbnz	w3, 427e20 <_obstack_memory_used@@Base+0x9330>
  428b40:	b	427e08 <_obstack_memory_used@@Base+0x9318>
  428b44:	ldrb	w0, [x19, #104]
  428b48:	ldr	w24, [sp, #280]
  428b4c:	b	428224 <_obstack_memory_used@@Base+0x9734>
  428b50:	ldr	x0, [sp, #184]
  428b54:	cmp	x0, x19
  428b58:	b.gt	428100 <_obstack_memory_used@@Base+0x9610>
  428b5c:	ldr	x1, [sp, #224]
  428b60:	mov	x0, x19
  428b64:	mov	w2, #0x0                   	// #0
  428b68:	cbz	x1, 428c00 <_obstack_memory_used@@Base+0xa110>
  428b6c:	mov	x3, x1
  428b70:	ldr	x4, [sp, #168]
  428b74:	ldp	x5, x6, [sp, #184]
  428b78:	ldr	x26, [sp, #208]
  428b7c:	b	428b90 <_obstack_memory_used@@Base+0xa0a0>
  428b80:	sub	x0, x0, #0x1
  428b84:	mov	w2, #0x1                   	// #1
  428b88:	cmp	x0, x5
  428b8c:	b.lt	428c6c <_obstack_memory_used@@Base+0xa17c>  // b.tstop
  428b90:	cmp	x4, x0
  428b94:	mov	x1, #0x0                   	// #0
  428b98:	b.le	428ba0 <_obstack_memory_used@@Base+0xa0b0>
  428b9c:	ldrb	w1, [x6, x0]
  428ba0:	ldrb	w1, [x3, x1]
  428ba4:	ldrb	w1, [x26, x1]
  428ba8:	cbz	w1, 428b80 <_obstack_memory_used@@Base+0xa090>
  428bac:	cbz	w2, 428178 <_obstack_memory_used@@Base+0x9688>
  428bb0:	mov	x19, x0
  428bb4:	str	x0, [sp, #296]
  428bb8:	b	428178 <_obstack_memory_used@@Base+0x9688>
  428bbc:	ldr	x27, [sp, #200]
  428bc0:	mov	x19, x22
  428bc4:	ldr	x0, [sp, #568]
  428bc8:	bl	4026b0 <free@plt>
  428bcc:	str	x25, [sp, #552]
  428bd0:	str	x19, [sp, #560]
  428bd4:	str	x24, [sp, #568]
  428bd8:	ldr	x0, [sp, #128]
  428bdc:	cbnz	x0, 428590 <_obstack_memory_used@@Base+0x9aa0>
  428be0:	b	428984 <_obstack_memory_used@@Base+0x9e94>
  428be4:	ldr	x1, [sp, #200]
  428be8:	ldr	x1, [x1, #152]
  428bec:	cbnz	x1, 42899c <_obstack_memory_used@@Base+0x9eac>
  428bf0:	ldr	x1, [sp, #128]
  428bf4:	ldr	x27, [sp, #200]
  428bf8:	cbz	x1, 428984 <_obstack_memory_used@@Base+0x9e94>
  428bfc:	b	4285c4 <_obstack_memory_used@@Base+0x9ad4>
  428c00:	ldr	x3, [sp, #168]
  428c04:	ldp	x4, x5, [sp, #184]
  428c08:	ldr	x26, [sp, #208]
  428c0c:	b	428c20 <_obstack_memory_used@@Base+0xa130>
  428c10:	sub	x0, x0, #0x1
  428c14:	mov	w2, #0x1                   	// #1
  428c18:	cmp	x4, x0
  428c1c:	b.gt	428c6c <_obstack_memory_used@@Base+0xa17c>
  428c20:	cmp	x3, x0
  428c24:	mov	x1, #0x0                   	// #0
  428c28:	b.le	428c30 <_obstack_memory_used@@Base+0xa140>
  428c2c:	ldrb	w1, [x5, x0]
  428c30:	ldrb	w1, [x26, x1]
  428c34:	cbz	w1, 428c10 <_obstack_memory_used@@Base+0xa120>
  428c38:	b	428bac <_obstack_memory_used@@Base+0xa0bc>
  428c3c:	ldrb	w0, [x27, #176]
  428c40:	tbnz	w0, #1, 427ec0 <_obstack_memory_used@@Base+0x93d0>
  428c44:	b	427ee4 <_obstack_memory_used@@Base+0x93f4>
  428c48:	ldr	x19, [x20, #80]
  428c4c:	cbnz	x19, 428208 <_obstack_memory_used@@Base+0x9718>
  428c50:	b	428978 <_obstack_memory_used@@Base+0x9e88>
  428c54:	mov	x2, x25
  428c58:	add	x0, sp, #0x180
  428c5c:	add	x21, x25, #0x1
  428c60:	bl	420590 <_obstack_memory_used@@Base+0x1aa0>
  428c64:	mov	x22, x0
  428c68:	b	428a00 <_obstack_memory_used@@Base+0x9f10>
  428c6c:	mov	w1, #0x1                   	// #1
  428c70:	str	w1, [sp, #152]
  428c74:	str	x0, [sp, #296]
  428c78:	ldp	x23, x24, [sp, #48]
  428c7c:	ldr	x27, [sp, #200]
  428c80:	ldr	x28, [sp, #568]
  428c84:	b	428938 <_obstack_memory_used@@Base+0x9e48>
  428c88:	ldp	x23, x24, [sp, #48]
  428c8c:	ldr	x27, [sp, #200]
  428c90:	ldr	x28, [sp, #568]
  428c94:	b	428938 <_obstack_memory_used@@Base+0x9e48>
  428c98:	cbz	w2, 428178 <_obstack_memory_used@@Base+0x9688>
  428c9c:	mov	x19, x0
  428ca0:	str	x0, [sp, #296]
  428ca4:	b	42816c <_obstack_memory_used@@Base+0x967c>
  428ca8:	ldrsb	w0, [x19, #104]
  428cac:	tbnz	w0, #31, 428d14 <_obstack_memory_used@@Base+0xa224>
  428cb0:	mov	x0, #0x1                   	// #1
  428cb4:	str	x0, [sp, #112]
  428cb8:	ldr	w0, [sp, #156]
  428cbc:	mov	x25, x27
  428cc0:	cbnz	w0, 428230 <_obstack_memory_used@@Base+0x9740>
  428cc4:	b	42852c <_obstack_memory_used@@Base+0x9a3c>
  428cc8:	mov	x20, x0
  428ccc:	b	4282b0 <_obstack_memory_used@@Base+0x97c0>
  428cd0:	mov	x25, x26
  428cd4:	b	42852c <_obstack_memory_used@@Base+0x9a3c>
  428cd8:	mov	w0, #0xc                   	// #12
  428cdc:	mov	x28, #0x0                   	// #0
  428ce0:	str	w0, [sp, #152]
  428ce4:	b	428938 <_obstack_memory_used@@Base+0x9e48>
  428ce8:	ldr	x19, [x20, #88]
  428cec:	cbnz	x19, 428208 <_obstack_memory_used@@Base+0x9718>
  428cf0:	b	428978 <_obstack_memory_used@@Base+0x9e88>
  428cf4:	ldr	x2, [x19, #80]
  428cf8:	mov	w3, w0
  428cfc:	mov	x1, x20
  428d00:	add	x0, sp, #0x124
  428d04:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  428d08:	mov	x19, x0
  428d0c:	cbnz	x19, 428208 <_obstack_memory_used@@Base+0x9718>
  428d10:	b	428978 <_obstack_memory_used@@Base+0x9e88>
  428d14:	mov	x2, x27
  428d18:	mov	x1, x19
  428d1c:	add	x0, sp, #0x180
  428d20:	bl	420590 <_obstack_memory_used@@Base+0x1aa0>
  428d24:	str	x0, [sp, #112]
  428d28:	cbz	x0, 428230 <_obstack_memory_used@@Base+0x9740>
  428d2c:	b	428cb0 <_obstack_memory_used@@Base+0xa1c0>
  428d30:	ldr	x0, [sp, #192]
  428d34:	ldrb	w0, [x0, x19]
  428d38:	b	4280e8 <_obstack_memory_used@@Base+0x95f8>
  428d3c:	add	x20, x19, #0x10
  428d40:	add	x21, x19, #0x18
  428d44:	mov	x1, x20
  428d48:	mov	x2, x21
  428d4c:	add	x0, sp, #0x180
  428d50:	mov	x3, #0x0                   	// #0
  428d54:	bl	421090 <_obstack_memory_used@@Base+0x25a0>
  428d58:	str	w0, [sp, #292]
  428d5c:	cbnz	w0, 428e48 <_obstack_memory_used@@Base+0xa358>
  428d60:	ldrb	w0, [x19, #104]
  428d64:	tbnz	w0, #6, 428d70 <_obstack_memory_used@@Base+0xa280>
  428d68:	mov	w24, #0x0                   	// #0
  428d6c:	b	428224 <_obstack_memory_used@@Base+0x9734>
  428d70:	mov	x2, x21
  428d74:	mov	x1, x20
  428d78:	add	x0, sp, #0x180
  428d7c:	bl	4266b0 <_obstack_memory_used@@Base+0x7bc0>
  428d80:	str	w0, [sp, #292]
  428d84:	cbnz	w0, 428e48 <_obstack_memory_used@@Base+0xa358>
  428d88:	ldrb	w0, [x19, #104]
  428d8c:	mov	w24, #0x0                   	// #0
  428d90:	b	428224 <_obstack_memory_used@@Base+0x9734>
  428d94:	str	w0, [sp, #152]
  428d98:	ldp	x23, x24, [sp, #48]
  428d9c:	ldr	x27, [sp, #200]
  428da0:	ldr	x28, [sp, #568]
  428da4:	b	428938 <_obstack_memory_used@@Base+0x9e48>
  428da8:	mov	w1, #0xc                   	// #12
  428dac:	mov	x0, x24
  428db0:	str	w1, [sp, #152]
  428db4:	ldr	x27, [sp, #200]
  428db8:	bl	4026b0 <free@plt>
  428dbc:	ldp	x23, x24, [sp, #48]
  428dc0:	b	428938 <_obstack_memory_used@@Base+0x9e48>
  428dc4:	mov	x27, #0x0                   	// #0
  428dc8:	b	428aa8 <_obstack_memory_used@@Base+0x9fb8>
  428dcc:	mov	x27, #0x0                   	// #0
  428dd0:	b	428e28 <_obstack_memory_used@@Base+0xa338>
  428dd4:	ldr	x3, [x20, x27, lsl #3]
  428dd8:	add	x1, x1, #0x8
  428ddc:	add	x0, sp, #0x130
  428de0:	add	x2, x3, #0x8
  428de4:	cbz	x3, 428e1c <_obstack_memory_used@@Base+0xa32c>
  428de8:	bl	4264d8 <_obstack_memory_used@@Base+0x79e8>
  428dec:	mov	w19, w0
  428df0:	str	w19, [sp, #292]
  428df4:	add	x2, sp, #0x130
  428df8:	mov	x1, x23
  428dfc:	add	x0, sp, #0x124
  428e00:	cbnz	w19, 428a9c <_obstack_memory_used@@Base+0x9fac>
  428e04:	bl	424760 <_obstack_memory_used@@Base+0x5c70>
  428e08:	str	x0, [x24, x27, lsl #3]
  428e0c:	ldr	x0, [sp, #320]
  428e10:	bl	4026b0 <free@plt>
  428e14:	ldr	w19, [sp, #292]
  428e18:	cbnz	w19, 428a9c <_obstack_memory_used@@Base+0x9fac>
  428e1c:	add	x27, x27, #0x1
  428e20:	cmp	x27, x21
  428e24:	b.eq	428e50 <_obstack_memory_used@@Base+0xa360>  // b.none
  428e28:	ldr	x1, [x24, x27, lsl #3]
  428e2c:	cbnz	x1, 428dd4 <_obstack_memory_used@@Base+0xa2e4>
  428e30:	ldr	x0, [x20, x27, lsl #3]
  428e34:	str	x0, [x24, x27, lsl #3]
  428e38:	b	428e1c <_obstack_memory_used@@Base+0xa32c>
  428e3c:	ldr	x0, [sp, #264]
  428e40:	str	x0, [sp, #144]
  428e44:	b	428518 <_obstack_memory_used@@Base+0x9a28>
  428e48:	sxtw	x25, w0
  428e4c:	b	42852c <_obstack_memory_used@@Base+0x9a3c>
  428e50:	mov	x19, x22
  428e54:	mov	x0, x20
  428e58:	ldr	x27, [sp, #200]
  428e5c:	bl	4026b0 <free@plt>
  428e60:	b	428bc4 <_obstack_memory_used@@Base+0xa0d4>
  428e64:	ldrb	w0, [x27, #176]
  428e68:	tbz	w0, #0, 428e7c <_obstack_memory_used@@Base+0xa38c>
  428e6c:	ldr	x0, [x27, #152]
  428e70:	cmp	x0, #0x0
  428e74:	cset	w0, gt
  428e78:	str	w0, [sp, #284]
  428e7c:	ldp	x0, x2, [sp, #120]
  428e80:	add	x1, sp, #0x180
  428e84:	ldrb	w4, [sp, #284]
  428e88:	ldr	x19, [sp, #272]
  428e8c:	mov	x3, x19
  428e90:	bl	423eb8 <_obstack_memory_used@@Base+0x53c8>
  428e94:	cbnz	w0, 428980 <_obstack_memory_used@@Base+0x9e90>
  428e98:	ldr	x1, [x19]
  428e9c:	b	4285e0 <_obstack_memory_used@@Base+0x9af0>
  428ea0:	ldr	x9, [sp, #128]
  428ea4:	b	428eac <_obstack_memory_used@@Base+0xa3bc>
  428ea8:	ldr	x1, [x0]
  428eac:	cmn	x1, #0x1
  428eb0:	b.eq	428ee4 <_obstack_memory_used@@Base+0xa3f4>  // b.none
  428eb4:	cmp	x5, x1
  428eb8:	mov	x4, x6
  428ebc:	ldr	x8, [x0, #8]
  428ec0:	b.eq	428ec8 <_obstack_memory_used@@Base+0xa3d8>  // b.none
  428ec4:	ldr	x4, [x7, x1, lsl #3]
  428ec8:	str	x4, [x0]
  428ecc:	cmp	x5, x8
  428ed0:	b.eq	428ef8 <_obstack_memory_used@@Base+0xa408>  // b.none
  428ed4:	ldr	x1, [x7, x8, lsl #3]
  428ed8:	add	x1, x3, x1
  428edc:	add	x4, x3, x4
  428ee0:	stp	x4, x1, [x0]
  428ee4:	add	x2, x2, #0x1
  428ee8:	add	x0, x0, #0x10
  428eec:	cmp	x2, x9
  428ef0:	b.ne	428ea8 <_obstack_memory_used@@Base+0xa3b8>  // b.any
  428ef4:	b	428630 <_obstack_memory_used@@Base+0x9b40>
  428ef8:	mov	x1, x6
  428efc:	b	428ed8 <_obstack_memory_used@@Base+0xa3e8>
  428f00:	stp	x29, x30, [sp, #-80]!
  428f04:	mov	x29, sp
  428f08:	stp	x25, x26, [sp, #64]
  428f0c:	mov	x25, x0
  428f10:	ldrb	w0, [x1, #56]
  428f14:	stp	x19, x20, [sp, #16]
  428f18:	ldr	x19, [x2, #8]
  428f1c:	stp	x23, x24, [sp, #48]
  428f20:	tst	x0, #0x10
  428f24:	mov	x24, x2
  428f28:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  428f2c:	ldr	x23, [x1]
  428f30:	b.ne	42915c <_obstack_memory_used@@Base+0xa66c>  // b.any
  428f34:	ldr	w1, [x23, #128]
  428f38:	stp	x21, x22, [sp, #32]
  428f3c:	mov	x21, #0x0                   	// #0
  428f40:	cmp	w1, #0xf
  428f44:	b.eq	4291b4 <_obstack_memory_used@@Base+0xa6c4>  // b.none
  428f48:	mov	w20, #0x40                  	// #64
  428f4c:	mov	x0, #0x8                   	// #8
  428f50:	add	w5, w1, #0x1
  428f54:	smaddl	x0, w1, w20, x0
  428f58:	ldr	x20, [x23, #112]
  428f5c:	sbfiz	x1, x1, #6, #32
  428f60:	add	x3, x20, x1
  428f64:	add	x2, x1, #0x20
  428f68:	movi	v0.4s, #0x0
  428f6c:	add	x2, x20, x2
  428f70:	mov	x4, #0x8                   	// #8
  428f74:	str	w5, [x23, #128]
  428f78:	bfxil	x21, x4, #0, #8
  428f7c:	str	xzr, [x3, #24]
  428f80:	stp	xzr, x21, [x3, #48]
  428f84:	add	x20, x20, x0
  428f88:	mov	x4, #0xffffffffffffffff    	// #-1
  428f8c:	stur	q0, [x3, #8]
  428f90:	ldrb	w0, [x2, #26]
  428f94:	and	w0, w0, #0xfffffff3
  428f98:	strb	w0, [x2, #26]
  428f9c:	str	x4, [x3, #64]
  428fa0:	str	q0, [x3, #32]
  428fa4:	ldr	w1, [x23, #128]
  428fa8:	mov	x22, #0x0                   	// #0
  428fac:	cmp	w1, #0xf
  428fb0:	b.eq	4291e0 <_obstack_memory_used@@Base+0xa6f0>  // b.none
  428fb4:	mov	w21, #0x40                  	// #64
  428fb8:	mov	x0, #0x8                   	// #8
  428fbc:	add	w5, w1, #0x1
  428fc0:	smaddl	x0, w1, w21, x0
  428fc4:	ldr	x21, [x23, #112]
  428fc8:	sbfiz	x1, x1, #6, #32
  428fcc:	add	x3, x21, x1
  428fd0:	add	x2, x1, #0x20
  428fd4:	movi	v0.4s, #0x0
  428fd8:	add	x2, x21, x2
  428fdc:	mov	x4, #0x9                   	// #9
  428fe0:	str	w5, [x23, #128]
  428fe4:	bfxil	x22, x4, #0, #8
  428fe8:	str	xzr, [x3, #24]
  428fec:	stp	xzr, x22, [x3, #48]
  428ff0:	add	x21, x21, x0
  428ff4:	mov	x4, #0xffffffffffffffff    	// #-1
  428ff8:	stur	q0, [x3, #8]
  428ffc:	ldrb	w0, [x2, #26]
  429000:	and	w0, w0, #0xfffffff3
  429004:	strb	w0, [x2, #26]
  429008:	str	x4, [x3, #64]
  42900c:	str	q0, [x3, #32]
  429010:	ldr	w1, [x23, #128]
  429014:	mov	x22, x21
  429018:	cbz	x19, 429090 <_obstack_memory_used@@Base+0xa5a0>
  42901c:	cmp	w1, #0xf
  429020:	mov	x26, #0x0                   	// #0
  429024:	b.eq	429238 <_obstack_memory_used@@Base+0xa748>  // b.none
  429028:	mov	w22, #0x40                  	// #64
  42902c:	mov	x3, #0x8                   	// #8
  429030:	add	w5, w1, #0x1
  429034:	smaddl	x3, w1, w22, x3
  429038:	ldr	x22, [x23, #112]
  42903c:	sbfiz	x1, x1, #6, #32
  429040:	add	x2, x22, x1
  429044:	add	x0, x1, #0x20
  429048:	add	x0, x22, x0
  42904c:	mov	x4, #0x10                  	// #16
  429050:	str	w5, [x23, #128]
  429054:	bfxil	x26, x4, #0, #8
  429058:	stp	xzr, x19, [x2, #8]
  42905c:	add	x22, x22, x3
  429060:	mov	x4, #0xffffffffffffffff    	// #-1
  429064:	str	x21, [x2, #24]
  429068:	stp	xzr, x26, [x2, #48]
  42906c:	ldrb	w3, [x0, #26]
  429070:	and	w3, w3, #0xfffffff3
  429074:	strb	w3, [x0, #26]
  429078:	stp	xzr, xzr, [x2, #32]
  42907c:	str	x4, [x2, #64]
  429080:	str	x22, [x19]
  429084:	cbz	x21, 42908c <_obstack_memory_used@@Base+0xa59c>
  429088:	str	x22, [x21]
  42908c:	ldr	w1, [x23, #128]
  429090:	cmp	w1, #0xf
  429094:	mov	x26, #0x0                   	// #0
  429098:	b.eq	42920c <_obstack_memory_used@@Base+0xa71c>  // b.none
  42909c:	mov	w19, #0x40                  	// #64
  4290a0:	mov	x0, #0x8                   	// #8
  4290a4:	add	w5, w1, #0x1
  4290a8:	smaddl	x0, w1, w19, x0
  4290ac:	ldr	x19, [x23, #112]
  4290b0:	sbfiz	x1, x1, #6, #32
  4290b4:	add	x3, x19, x1
  4290b8:	add	x2, x1, #0x20
  4290bc:	add	x2, x19, x2
  4290c0:	mov	x4, #0x10                  	// #16
  4290c4:	str	w5, [x23, #128]
  4290c8:	bfxil	x26, x4, #0, #8
  4290cc:	stp	xzr, x20, [x3, #8]
  4290d0:	add	x19, x19, x0
  4290d4:	mov	x4, #0xffffffffffffffff    	// #-1
  4290d8:	str	x22, [x3, #24]
  4290dc:	stp	xzr, x26, [x3, #48]
  4290e0:	ldrb	w0, [x2, #26]
  4290e4:	and	w0, w0, #0xfffffff3
  4290e8:	strb	w0, [x2, #26]
  4290ec:	stp	xzr, xzr, [x3, #32]
  4290f0:	str	x4, [x3, #64]
  4290f4:	cbz	x20, 4290fc <_obstack_memory_used@@Base+0xa60c>
  4290f8:	str	x19, [x20]
  4290fc:	cbz	x22, 42918c <_obstack_memory_used@@Base+0xa69c>
  429100:	str	x19, [x22]
  429104:	cbz	x19, 42918c <_obstack_memory_used@@Base+0xa69c>
  429108:	cmp	x20, #0x0
  42910c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  429110:	b.eq	42918c <_obstack_memory_used@@Base+0xa69c>  // b.none
  429114:	ldr	x0, [x24, #40]
  429118:	str	x0, [x21, #40]
  42911c:	str	x0, [x20, #40]
  429120:	ldrb	w0, [x24, #50]
  429124:	ldrb	w1, [x21, #50]
  429128:	ubfx	x0, x0, #3, #1
  42912c:	bfi	w1, w0, #3, #1
  429130:	strb	w1, [x21, #50]
  429134:	ldrb	w1, [x20, #50]
  429138:	bfi	w1, w0, #3, #1
  42913c:	strb	w1, [x20, #50]
  429140:	ldp	x21, x22, [sp, #32]
  429144:	mov	x0, x19
  429148:	ldp	x19, x20, [sp, #16]
  42914c:	ldp	x23, x24, [sp, #48]
  429150:	ldp	x25, x26, [sp, #64]
  429154:	ldp	x29, x30, [sp], #80
  429158:	ret
  42915c:	ldr	x0, [x2, #40]
  429160:	cmp	x0, #0x3f
  429164:	b.gt	429144 <_obstack_memory_used@@Base+0xa654>
  429168:	ldr	x1, [x23, #160]
  42916c:	lsr	x0, x1, x0
  429170:	tbnz	w0, #0, 428f34 <_obstack_memory_used@@Base+0xa444>
  429174:	mov	x0, x19
  429178:	ldp	x19, x20, [sp, #16]
  42917c:	ldp	x23, x24, [sp, #48]
  429180:	ldp	x25, x26, [sp, #64]
  429184:	ldp	x29, x30, [sp], #80
  429188:	ret
  42918c:	mov	w0, #0xc                   	// #12
  429190:	mov	x19, #0x0                   	// #0
  429194:	ldp	x21, x22, [sp, #32]
  429198:	str	w0, [x25]
  42919c:	mov	x0, x19
  4291a0:	ldp	x19, x20, [sp, #16]
  4291a4:	ldp	x23, x24, [sp, #48]
  4291a8:	ldp	x25, x26, [sp, #64]
  4291ac:	ldp	x29, x30, [sp], #80
  4291b0:	ret
  4291b4:	mov	x0, #0x3c8                 	// #968
  4291b8:	bl	402440 <malloc@plt>
  4291bc:	mov	x20, x0
  4291c0:	cbz	x0, 42926c <_obstack_memory_used@@Base+0xa77c>
  4291c4:	ldr	x0, [x23, #112]
  4291c8:	str	x0, [x20]
  4291cc:	mov	w5, #0x1                   	// #1
  4291d0:	mov	w1, #0x0                   	// #0
  4291d4:	mov	x0, #0x8                   	// #8
  4291d8:	str	x20, [x23, #112]
  4291dc:	b	428f5c <_obstack_memory_used@@Base+0xa46c>
  4291e0:	mov	x0, #0x3c8                 	// #968
  4291e4:	bl	402440 <malloc@plt>
  4291e8:	mov	x21, x0
  4291ec:	cbz	x0, 429264 <_obstack_memory_used@@Base+0xa774>
  4291f0:	ldr	x0, [x23, #112]
  4291f4:	str	x0, [x21]
  4291f8:	mov	w5, #0x1                   	// #1
  4291fc:	mov	w1, #0x0                   	// #0
  429200:	mov	x0, #0x8                   	// #8
  429204:	str	x21, [x23, #112]
  429208:	b	428fc8 <_obstack_memory_used@@Base+0xa4d8>
  42920c:	mov	x0, #0x3c8                 	// #968
  429210:	bl	402440 <malloc@plt>
  429214:	mov	x19, x0
  429218:	cbz	x0, 42918c <_obstack_memory_used@@Base+0xa69c>
  42921c:	ldr	x0, [x23, #112]
  429220:	str	x0, [x19]
  429224:	mov	w5, #0x1                   	// #1
  429228:	mov	w1, #0x0                   	// #0
  42922c:	mov	x0, #0x8                   	// #8
  429230:	str	x19, [x23, #112]
  429234:	b	4290b0 <_obstack_memory_used@@Base+0xa5c0>
  429238:	mov	x0, #0x3c8                 	// #968
  42923c:	bl	402440 <malloc@plt>
  429240:	mov	x22, x0
  429244:	cbz	x0, 429274 <_obstack_memory_used@@Base+0xa784>
  429248:	ldr	x0, [x23, #112]
  42924c:	str	x0, [x22]
  429250:	mov	w5, #0x1                   	// #1
  429254:	mov	w1, #0x0                   	// #0
  429258:	mov	x3, #0x8                   	// #8
  42925c:	str	x22, [x23, #112]
  429260:	b	42903c <_obstack_memory_used@@Base+0xa54c>
  429264:	mov	x21, #0x0                   	// #0
  429268:	b	429010 <_obstack_memory_used@@Base+0xa520>
  42926c:	mov	x20, #0x0                   	// #0
  429270:	b	428fa4 <_obstack_memory_used@@Base+0xa4b4>
  429274:	ldr	w1, [x23, #128]
  429278:	mov	x22, #0x0                   	// #0
  42927c:	b	429090 <_obstack_memory_used@@Base+0xa5a0>
  429280:	stp	x29, x30, [sp, #-128]!
  429284:	mov	x29, sp
  429288:	stp	x19, x20, [sp, #16]
  42928c:	mov	x20, x3
  429290:	stp	x21, x22, [sp, #32]
  429294:	mov	x22, x5
  429298:	stp	x23, x24, [sp, #48]
  42929c:	mov	x24, x0
  4292a0:	and	w23, w4, #0xff
  4292a4:	mov	x0, #0x20                  	// #32
  4292a8:	stp	x25, x26, [sp, #64]
  4292ac:	mov	x25, x1
  4292b0:	mov	x26, x2
  4292b4:	mov	x1, #0x1                   	// #1
  4292b8:	str	xzr, [sp, #120]
  4292bc:	bl	402520 <calloc@plt>
  4292c0:	mov	x19, x0
  4292c4:	cbz	x0, 429580 <_obstack_memory_used@@Base+0xaa90>
  4292c8:	mov	x1, #0x1                   	// #1
  4292cc:	mov	x0, #0x50                  	// #80
  4292d0:	bl	402520 <calloc@plt>
  4292d4:	mov	x21, x0
  4292d8:	cbz	x0, 429574 <_obstack_memory_used@@Base+0xaa84>
  4292dc:	ldrb	w7, [x0, #32]
  4292e0:	mov	x5, x26
  4292e4:	mov	x0, x25
  4292e8:	add	x4, sp, #0x78
  4292ec:	add	x3, x21, #0x48
  4292f0:	add	x2, x21, #0x18
  4292f4:	bfxil	w7, w23, #0, #1
  4292f8:	strb	w7, [x21, #32]
  4292fc:	mov	x1, x19
  429300:	mov	x6, #0x0                   	// #0
  429304:	bl	4211b0 <_obstack_memory_used@@Base+0x26c0>
  429308:	mov	w25, w0
  42930c:	cbnz	w0, 429640 <_obstack_memory_used@@Base+0xab50>
  429310:	str	x27, [sp, #80]
  429314:	mov	x0, #0x1                   	// #1
  429318:	ldrb	w1, [x20]
  42931c:	cbz	w1, 42933c <_obstack_memory_used@@Base+0xa84c>
  429320:	ubfx	x4, x1, #6, #2
  429324:	lsl	x3, x0, x1
  429328:	ldrb	w1, [x20, #1]!
  42932c:	ldr	x2, [x19, x4, lsl #3]
  429330:	orr	x2, x2, x3
  429334:	str	x2, [x19, x4, lsl #3]
  429338:	cbnz	w1, 429320 <_obstack_memory_used@@Base+0xa830>
  42933c:	cbz	w23, 429350 <_obstack_memory_used@@Base+0xa860>
  429340:	ldp	q1, q0, [x19]
  429344:	mvn	v1.16b, v1.16b
  429348:	mvn	v0.16b, v0.16b
  42934c:	stp	q1, q0, [x19]
  429350:	ldr	w27, [x24, #180]
  429354:	cmp	w27, #0x1
  429358:	b.le	42938c <_obstack_memory_used@@Base+0xa89c>
  42935c:	ldr	x0, [x24, #120]
  429360:	add	x1, x0, #0xf
  429364:	sub	x1, x1, x19
  429368:	cmp	x1, #0x1e
  42936c:	b.ls	429600 <_obstack_memory_used@@Base+0xab10>  // b.plast
  429370:	ldp	q1, q0, [x19]
  429374:	ldr	q2, [x0]
  429378:	and	v1.16b, v1.16b, v2.16b
  42937c:	str	q1, [x19]
  429380:	ldr	q1, [x0, #16]
  429384:	and	v0.16b, v0.16b, v1.16b
  429388:	str	q0, [x19, #16]
  42938c:	mov	x26, #0x0                   	// #0
  429390:	str	wzr, [sp, #96]
  429394:	strh	wzr, [sp, #100]
  429398:	strb	wzr, [sp, #102]
  42939c:	ldr	x0, [sp, #96]
  4293a0:	ldr	w20, [x24, #128]
  4293a4:	bfi	x26, x0, #8, #56
  4293a8:	cmp	w20, #0xf
  4293ac:	b.eq	42967c <_obstack_memory_used@@Base+0xab8c>  // b.none
  4293b0:	ldr	x23, [x24, #112]
  4293b4:	sbfiz	x1, x20, #6, #32
  4293b8:	movi	v0.4s, #0x0
  4293bc:	add	x2, x1, #0x20
  4293c0:	add	x0, x23, x1
  4293c4:	add	w4, w20, #0x1
  4293c8:	add	x2, x23, x2
  4293cc:	mov	x3, #0x3                   	// #3
  4293d0:	str	w4, [x24, #128]
  4293d4:	bfxil	x26, x3, #0, #8
  4293d8:	mov	w3, #0x40                  	// #64
  4293dc:	str	xzr, [x0, #24]
  4293e0:	stp	x19, x26, [x0, #48]
  4293e4:	mov	x5, #0xffffffffffffffff    	// #-1
  4293e8:	smaddl	x3, w20, w3, x23
  4293ec:	stur	q0, [x0, #8]
  4293f0:	ldrb	w4, [x2, #26]
  4293f4:	adds	x25, x3, #0x8
  4293f8:	and	w3, w4, #0xfffffff3
  4293fc:	strb	w3, [x2, #26]
  429400:	str	x5, [x0, #64]
  429404:	str	q0, [x0, #32]
  429408:	b.eq	4295a4 <_obstack_memory_used@@Base+0xaab4>  // b.none
  42940c:	cmp	w27, #0x1
  429410:	b.le	429528 <_obstack_memory_used@@Base+0xaa38>
  429414:	ldrb	w0, [x24, #176]
  429418:	ldr	w1, [x24, #128]
  42941c:	orr	w0, w0, #0x2
  429420:	strb	w0, [x24, #176]
  429424:	cmp	w1, #0xf
  429428:	b.eq	4296dc <_obstack_memory_used@@Base+0xabec>  // b.none
  42942c:	mov	w4, #0x40                  	// #64
  429430:	mov	x0, #0x8                   	// #8
  429434:	add	w5, w1, #0x1
  429438:	mov	x27, x23
  42943c:	smaddl	x4, w1, w4, x0
  429440:	sbfiz	x2, x1, #6, #32
  429444:	mov	x6, #0x6                   	// #6
  429448:	add	x0, x27, x2
  42944c:	add	x3, x2, #0x20
  429450:	movi	v0.4s, #0x0
  429454:	add	x3, x27, x3
  429458:	str	w5, [x24, #128]
  42945c:	bfxil	x26, x6, #0, #8
  429460:	str	xzr, [x0, #24]
  429464:	mov	x5, #0xffffffffffffffff    	// #-1
  429468:	stp	x21, x26, [x0, #48]
  42946c:	sxtw	x21, w1
  429470:	add	x22, x27, x4
  429474:	stur	q0, [x0, #8]
  429478:	mov	x26, #0x0                   	// #0
  42947c:	ldrb	w1, [x3, #26]
  429480:	and	w1, w1, #0xfffffff3
  429484:	strb	w1, [x3, #26]
  429488:	str	x5, [x0, #64]
  42948c:	str	q0, [x0, #32]
  429490:	ldr	w1, [x24, #128]
  429494:	cmp	w1, #0xf
  429498:	b.eq	429704 <_obstack_memory_used@@Base+0xac14>  // b.none
  42949c:	mov	w3, #0x40                  	// #64
  4294a0:	mov	x0, #0x8                   	// #8
  4294a4:	add	w5, w1, #0x1
  4294a8:	mov	x19, x27
  4294ac:	smaddl	x3, w1, w3, x0
  4294b0:	sbfiz	x1, x1, #6, #32
  4294b4:	add	x21, x27, x21, lsl #6
  4294b8:	add	x2, x19, x1
  4294bc:	add	x0, x1, #0x20
  4294c0:	add	x0, x19, x0
  4294c4:	mov	x4, #0xa                   	// #10
  4294c8:	ldr	x27, [sp, #80]
  4294cc:	str	w5, [x24, #128]
  4294d0:	bfxil	x26, x4, #0, #8
  4294d4:	stp	xzr, x25, [x2, #8]
  4294d8:	add	x19, x19, x3
  4294dc:	str	x22, [x2, #24]
  4294e0:	sbfiz	x20, x20, #6, #32
  4294e4:	stp	xzr, x26, [x2, #48]
  4294e8:	add	x23, x23, x20
  4294ec:	mov	x4, #0xffffffffffffffff    	// #-1
  4294f0:	ldrb	w3, [x0, #26]
  4294f4:	and	w3, w3, #0xfffffff3
  4294f8:	strb	w3, [x0, #26]
  4294fc:	stp	xzr, xzr, [x2, #32]
  429500:	str	x4, [x2, #64]
  429504:	str	x19, [x23, #8]
  429508:	str	x19, [x21, #8]
  42950c:	mov	x0, x19
  429510:	ldp	x19, x20, [sp, #16]
  429514:	ldp	x21, x22, [sp, #32]
  429518:	ldp	x23, x24, [sp, #48]
  42951c:	ldp	x25, x26, [sp, #64]
  429520:	ldp	x29, x30, [sp], #128
  429524:	ret
  429528:	ldr	x0, [x21]
  42952c:	mov	x19, x25
  429530:	bl	4026b0 <free@plt>
  429534:	ldr	x0, [x21, #8]
  429538:	bl	4026b0 <free@plt>
  42953c:	ldr	x0, [x21, #16]
  429540:	bl	4026b0 <free@plt>
  429544:	ldr	x0, [x21, #24]
  429548:	bl	4026b0 <free@plt>
  42954c:	mov	x0, x21
  429550:	bl	4026b0 <free@plt>
  429554:	mov	x0, x19
  429558:	ldp	x19, x20, [sp, #16]
  42955c:	ldp	x21, x22, [sp, #32]
  429560:	ldp	x23, x24, [sp, #48]
  429564:	ldp	x25, x26, [sp, #64]
  429568:	ldr	x27, [sp, #80]
  42956c:	ldp	x29, x30, [sp], #128
  429570:	ret
  429574:	mov	x0, x19
  429578:	mov	x19, #0x0                   	// #0
  42957c:	bl	4026b0 <free@plt>
  429580:	mov	w0, #0xc                   	// #12
  429584:	str	w0, [x22]
  429588:	mov	x0, x19
  42958c:	ldp	x19, x20, [sp, #16]
  429590:	ldp	x21, x22, [sp, #32]
  429594:	ldp	x23, x24, [sp, #48]
  429598:	ldp	x25, x26, [sp, #64]
  42959c:	ldp	x29, x30, [sp], #128
  4295a0:	ret
  4295a4:	mov	x0, x19
  4295a8:	bl	4026b0 <free@plt>
  4295ac:	ldr	x0, [x21]
  4295b0:	mov	x19, #0x0                   	// #0
  4295b4:	bl	4026b0 <free@plt>
  4295b8:	ldr	x0, [x21, #8]
  4295bc:	bl	4026b0 <free@plt>
  4295c0:	ldr	x0, [x21, #16]
  4295c4:	bl	4026b0 <free@plt>
  4295c8:	ldr	x0, [x21, #24]
  4295cc:	bl	4026b0 <free@plt>
  4295d0:	mov	x0, x21
  4295d4:	bl	4026b0 <free@plt>
  4295d8:	mov	w0, #0xc                   	// #12
  4295dc:	ldr	x27, [sp, #80]
  4295e0:	str	w0, [x22]
  4295e4:	mov	x0, x19
  4295e8:	ldp	x19, x20, [sp, #16]
  4295ec:	ldp	x21, x22, [sp, #32]
  4295f0:	ldp	x23, x24, [sp, #48]
  4295f4:	ldp	x25, x26, [sp, #64]
  4295f8:	ldp	x29, x30, [sp], #128
  4295fc:	ret
  429600:	ldp	x1, x3, [x19]
  429604:	ldr	x2, [x0]
  429608:	and	x1, x1, x2
  42960c:	str	x1, [x19]
  429610:	ldr	x2, [x19, #16]
  429614:	ldr	x4, [x0, #8]
  429618:	ldr	x1, [x19, #24]
  42961c:	and	x3, x3, x4
  429620:	str	x3, [x19, #8]
  429624:	ldr	x3, [x0, #16]
  429628:	and	x2, x2, x3
  42962c:	str	x2, [x19, #16]
  429630:	ldr	x0, [x0, #24]
  429634:	and	x0, x1, x0
  429638:	str	x0, [x19, #24]
  42963c:	b	42938c <_obstack_memory_used@@Base+0xa89c>
  429640:	mov	x0, x19
  429644:	bl	4026b0 <free@plt>
  429648:	ldr	x0, [x21]
  42964c:	mov	x19, #0x0                   	// #0
  429650:	bl	4026b0 <free@plt>
  429654:	ldr	x0, [x21, #8]
  429658:	bl	4026b0 <free@plt>
  42965c:	ldr	x0, [x21, #16]
  429660:	bl	4026b0 <free@plt>
  429664:	ldr	x0, [x21, #24]
  429668:	bl	4026b0 <free@plt>
  42966c:	mov	x0, x21
  429670:	bl	4026b0 <free@plt>
  429674:	str	w25, [x22]
  429678:	b	42950c <_obstack_memory_used@@Base+0xaa1c>
  42967c:	mov	x0, #0x3c8                 	// #968
  429680:	bl	402440 <malloc@plt>
  429684:	mov	x23, x0
  429688:	cbz	x0, 4295a4 <_obstack_memory_used@@Base+0xaab4>
  42968c:	movi	v0.4s, #0x0
  429690:	mov	x0, #0x3                   	// #3
  429694:	bfxil	x26, x0, #0, #8
  429698:	stp	x19, x26, [x23, #48]
  42969c:	mov	w1, #0x1                   	// #1
  4296a0:	ubfx	x0, x26, #16, #8
  4296a4:	mov	x2, #0xffffffffffffffff    	// #-1
  4296a8:	ldr	x3, [x24, #112]
  4296ac:	and	w0, w0, #0xfffffff3
  4296b0:	add	x25, x23, #0x8
  4296b4:	mov	w20, #0x0                   	// #0
  4296b8:	str	x3, [x23]
  4296bc:	stur	q0, [x23, #8]
  4296c0:	str	xzr, [x23, #24]
  4296c4:	str	q0, [x23, #32]
  4296c8:	strb	w0, [x23, #58]
  4296cc:	str	x2, [x23, #64]
  4296d0:	str	x23, [x24, #112]
  4296d4:	str	w1, [x24, #128]
  4296d8:	b	42940c <_obstack_memory_used@@Base+0xa91c>
  4296dc:	mov	x0, #0x3c8                 	// #968
  4296e0:	bl	402440 <malloc@plt>
  4296e4:	mov	x27, x0
  4296e8:	cbz	x0, 4295a4 <_obstack_memory_used@@Base+0xaab4>
  4296ec:	mov	w1, #0x0                   	// #0
  4296f0:	mov	w5, #0x1                   	// #1
  4296f4:	mov	x4, #0x8                   	// #8
  4296f8:	str	x23, [x0]
  4296fc:	str	x0, [x24, #112]
  429700:	b	429440 <_obstack_memory_used@@Base+0xa950>
  429704:	mov	x0, #0x3c8                 	// #968
  429708:	bl	402440 <malloc@plt>
  42970c:	mov	x19, x0
  429710:	cbz	x0, 42972c <_obstack_memory_used@@Base+0xac3c>
  429714:	mov	w1, #0x0                   	// #0
  429718:	mov	w5, #0x1                   	// #1
  42971c:	mov	x3, #0x8                   	// #8
  429720:	str	x27, [x0]
  429724:	str	x0, [x24, #112]
  429728:	b	4294b0 <_obstack_memory_used@@Base+0xa9c0>
  42972c:	mov	x19, #0x0                   	// #0
  429730:	ldr	x27, [sp, #80]
  429734:	b	42950c <_obstack_memory_used@@Base+0xaa1c>
  429738:	stp	x29, x30, [sp, #-288]!
  42973c:	mov	x29, sp
  429740:	stp	x19, x20, [sp, #16]
  429744:	mov	x19, x2
  429748:	ldrb	w2, [x2, #8]
  42974c:	stp	x21, x22, [sp, #32]
  429750:	mov	x22, x3
  429754:	cmp	w2, #0xc
  429758:	stp	x25, x26, [sp, #64]
  42975c:	mov	x26, x0
  429760:	stp	x27, x28, [sp, #80]
  429764:	str	x5, [sp, #128]
  429768:	ldr	x28, [x1]
  42976c:	b.eq	42aadc <_obstack_memory_used@@Base+0xbfec>  // b.none
  429770:	mov	x20, x1
  429774:	b.ls	429e9c <_obstack_memory_used@@Base+0xb3ac>  // b.plast
  429778:	cmp	w2, #0x18
  42977c:	b.eq	429e18 <_obstack_memory_used@@Base+0xb328>  // b.none
  429780:	b.ls	429df8 <_obstack_memory_used@@Base+0xb308>  // b.plast
  429784:	cmp	w2, #0x23
  429788:	b.hi	42a600 <_obstack_memory_used@@Base+0xbb10>  // b.pmore
  42978c:	cmp	w2, #0x21
  429790:	ldr	x1, [x0, #120]
  429794:	b.hi	42a610 <_obstack_memory_used@@Base+0xbb20>  // b.pmore
  429798:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x13510>
  42979c:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x12510>
  4297a0:	add	x3, x3, #0x4a8
  4297a4:	add	x2, x2, #0x620
  4297a8:	cset	w4, eq  // eq = none
  4297ac:	mov	x0, x28
  4297b0:	bl	429280 <_obstack_memory_used@@Base+0xa790>
  4297b4:	ldr	x1, [sp, #128]
  4297b8:	str	x0, [sp, #112]
  4297bc:	ldr	w1, [x1]
  4297c0:	cmp	w1, #0x0
  4297c4:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  4297c8:	b.eq	42a01c <_obstack_memory_used@@Base+0xb52c>  // b.none
  4297cc:	stp	x23, x24, [sp, #48]
  4297d0:	mov	x2, x22
  4297d4:	mov	x1, x26
  4297d8:	mov	x0, x19
  4297dc:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  4297e0:	ldr	x3, [x26, #72]
  4297e4:	ldrb	w1, [x19, #8]
  4297e8:	cmp	w1, #0x12
  4297ec:	sub	w2, w1, #0x12
  4297f0:	cset	w24, eq  // eq = none
  4297f4:	add	x27, x3, w0, sxtw
  4297f8:	cmp	w1, #0xb
  4297fc:	str	x27, [x26, #72]
  429800:	and	w2, w2, #0xff
  429804:	ccmp	w1, #0x17, #0x4, ne  // ne = any
  429808:	ccmp	w2, #0x1, #0x0, ne  // ne = any
  42980c:	b.hi	42a4c8 <_obstack_memory_used@@Base+0xb9d8>  // b.pmore
  429810:	and	x0, x22, #0x200000
  429814:	str	x0, [sp, #152]
  429818:	and	x0, x22, #0x1000000
  42981c:	str	x0, [sp, #136]
  429820:	ldp	x2, x3, [x19]
  429824:	stp	x2, x3, [sp, #96]
  429828:	cmp	w1, #0x17
  42982c:	b.eq	429c24 <_obstack_memory_used@@Base+0xb134>  // b.none
  429830:	cmp	w1, #0x13
  429834:	mov	x2, x22
  429838:	mov	x1, x26
  42983c:	mov	x0, x19
  429840:	mov	x20, #0xffffffffffffffff    	// #-1
  429844:	cneg	x20, x20, eq  // eq = none
  429848:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  42984c:	ldr	x1, [x26, #72]
  429850:	add	x0, x1, w0, sxtw
  429854:	str	x0, [x26, #72]
  429858:	ldr	x0, [sp, #112]
  42985c:	cbz	x0, 429de4 <_obstack_memory_used@@Base+0xb2f4>
  429860:	cbnz	w24, 42a3e0 <_obstack_memory_used@@Base+0xb8f0>
  429864:	mov	x24, x0
  429868:	mov	x23, #0x0                   	// #0
  42986c:	mov	x21, #0x0                   	// #0
  429870:	ldrb	w0, [x24, #48]
  429874:	cmp	w0, #0x11
  429878:	b.eq	429cb4 <_obstack_memory_used@@Base+0xb1c4>  // b.none
  42987c:	cmn	x20, #0x1
  429880:	ldr	w0, [x28, #128]
  429884:	cset	w27, eq  // eq = none
  429888:	mov	x6, #0x0                   	// #0
  42988c:	add	w27, w27, #0xa
  429890:	cmp	w0, #0xf
  429894:	b.eq	429f9c <_obstack_memory_used@@Base+0xb4ac>  // b.none
  429898:	mov	x2, #0x8                   	// #8
  42989c:	mov	w5, #0x40                  	// #64
  4298a0:	ldr	x25, [x28, #112]
  4298a4:	smaddl	x5, w0, w5, x2
  4298a8:	add	w2, w0, #0x1
  4298ac:	sbfiz	x0, x0, #6, #32
  4298b0:	str	w2, [x28, #128]
  4298b4:	add	x2, x25, x0
  4298b8:	add	x4, x0, #0x20
  4298bc:	add	x4, x25, x4
  4298c0:	bfxil	x6, x27, #0, #8
  4298c4:	movi	v0.4s, #0x0
  4298c8:	add	x27, x25, x5
  4298cc:	stp	xzr, x24, [x2, #8]
  4298d0:	mov	x9, #0xffffffffffffffff    	// #-1
  4298d4:	str	xzr, [x2, #24]
  4298d8:	stp	xzr, x6, [x2, #48]
  4298dc:	ldrb	w5, [x4, #26]
  4298e0:	and	w5, w5, #0xfffffff3
  4298e4:	strb	w5, [x4, #26]
  4298e8:	str	x9, [x2, #64]
  4298ec:	str	q0, [x2, #32]
  4298f0:	str	x27, [x24]
  4298f4:	cbz	x27, 429b68 <_obstack_memory_used@@Base+0xb078>
  4298f8:	add	x4, x23, #0x2
  4298fc:	mov	x23, x27
  429900:	cmp	x20, x4
  429904:	b.lt	429d24 <_obstack_memory_used@@Base+0xb234>  // b.tstop
  429908:	mov	x25, x24
  42990c:	ldr	w24, [x28, #128]
  429910:	add	x6, sp, #0x100
  429914:	mov	x9, #0xffffffffffffffff    	// #-1
  429918:	cmp	w24, #0xf
  42991c:	b.eq	4299ac <_obstack_memory_used@@Base+0xaebc>  // b.none
  429920:	ldr	x0, [x28, #112]
  429924:	sbfiz	x2, x24, #6, #32
  429928:	add	w3, w24, #0x1
  42992c:	str	w3, [x28, #128]
  429930:	add	x12, x0, x2
  429934:	add	x13, x2, #0x20
  429938:	mov	w2, #0x40                  	// #64
  42993c:	add	x13, x0, x13
  429940:	sxtw	x11, w24
  429944:	str	xzr, [x12, #24]
  429948:	smaddl	x24, w24, w2, x0
  42994c:	stur	q0, [x12, #8]
  429950:	add	x24, x24, #0x8
  429954:	ldp	x2, x3, [x25, #40]
  429958:	stp	x2, x3, [x12, #48]
  42995c:	ldrb	w2, [x13, #26]
  429960:	and	w2, w2, #0xfffffff3
  429964:	strb	w2, [x13, #26]
  429968:	str	x9, [x12, #64]
  42996c:	str	q0, [x12, #32]
  429970:	str	x24, [x6]
  429974:	cbz	x24, 429a60 <_obstack_memory_used@@Base+0xaf70>
  429978:	add	x0, x0, x11, lsl #6
  42997c:	str	x27, [x0, #8]
  429980:	ldr	x27, [x6]
  429984:	ldrb	w0, [x27, #50]
  429988:	orr	w0, w0, #0x4
  42998c:	strb	w0, [x27, #50]
  429990:	ldr	x0, [x25, #8]
  429994:	cbz	x0, 429a38 <_obstack_memory_used@@Base+0xaf48>
  429998:	add	x6, x27, #0x8
  42999c:	mov	x25, x0
  4299a0:	ldr	w24, [x28, #128]
  4299a4:	cmp	w24, #0xf
  4299a8:	b.ne	429920 <_obstack_memory_used@@Base+0xae30>  // b.any
  4299ac:	mov	x0, #0x3c8                 	// #968
  4299b0:	str	x4, [sp, #96]
  4299b4:	str	x6, [sp, #120]
  4299b8:	bl	402440 <malloc@plt>
  4299bc:	movi	v0.4s, #0x0
  4299c0:	mov	x9, #0xffffffffffffffff    	// #-1
  4299c4:	ldr	x4, [sp, #96]
  4299c8:	ldr	x6, [sp, #120]
  4299cc:	cbz	x0, 42b1d8 <_obstack_memory_used@@Base+0xc6e8>
  4299d0:	ldr	x2, [x28, #112]
  4299d4:	str	x2, [x0]
  4299d8:	mov	w1, #0x1                   	// #1
  4299dc:	str	x0, [x28, #112]
  4299e0:	str	w1, [x28, #128]
  4299e4:	mov	x11, #0x0                   	// #0
  4299e8:	str	xzr, [x0, #24]
  4299ec:	add	x10, x0, #0x8
  4299f0:	stur	q0, [x0, #8]
  4299f4:	ldp	x2, x3, [x25, #40]
  4299f8:	stp	x2, x3, [x0, #48]
  4299fc:	ldrb	w2, [x0, #58]
  429a00:	str	q0, [x0, #32]
  429a04:	and	w2, w2, #0xfffffff3
  429a08:	strb	w2, [x0, #58]
  429a0c:	str	x9, [x0, #64]
  429a10:	add	x0, x0, x11, lsl #6
  429a14:	str	x10, [x6]
  429a18:	str	x27, [x0, #8]
  429a1c:	ldr	x27, [x6]
  429a20:	ldrb	w0, [x27, #50]
  429a24:	orr	w0, w0, #0x4
  429a28:	strb	w0, [x27, #50]
  429a2c:	ldr	x0, [x25, #8]
  429a30:	cbnz	x0, 429998 <_obstack_memory_used@@Base+0xaea8>
  429a34:	nop
  429a38:	ldr	x2, [x25, #16]
  429a3c:	cmp	x2, #0x0
  429a40:	ccmp	x2, x0, #0x4, ne  // ne = any
  429a44:	b.ne	429b54 <_obstack_memory_used@@Base+0xb064>  // b.any
  429a48:	ldr	x2, [x25]
  429a4c:	mov	x0, x25
  429a50:	ldr	x27, [x27]
  429a54:	mov	x25, x2
  429a58:	cbnz	x2, 429a38 <_obstack_memory_used@@Base+0xaf48>
  429a5c:	ldr	x24, [sp, #256]
  429a60:	mov	x6, #0x0                   	// #0
  429a64:	ldr	w0, [x28, #128]
  429a68:	cmp	w0, #0xf
  429a6c:	b.eq	429ba0 <_obstack_memory_used@@Base+0xb0b0>  // b.none
  429a70:	mov	w27, #0x40                  	// #64
  429a74:	mov	x2, #0x8                   	// #8
  429a78:	ldr	x25, [x28, #112]
  429a7c:	smaddl	x27, w0, w27, x2
  429a80:	add	w9, w0, #0x1
  429a84:	sbfiz	x0, x0, #6, #32
  429a88:	mov	x10, #0x10                  	// #16
  429a8c:	add	x3, x25, x0
  429a90:	add	x2, x0, #0x20
  429a94:	add	x2, x25, x2
  429a98:	str	w9, [x28, #128]
  429a9c:	bfxil	x6, x10, #0, #8
  429aa0:	mov	x9, #0xffffffffffffffff    	// #-1
  429aa4:	stp	xzr, x23, [x3, #8]
  429aa8:	add	x27, x25, x27
  429aac:	str	x24, [x3, #24]
  429ab0:	stp	xzr, x6, [x3, #48]
  429ab4:	ldrb	w6, [x2, #26]
  429ab8:	and	w6, w6, #0xfffffff3
  429abc:	strb	w6, [x2, #26]
  429ac0:	str	x9, [x3, #64]
  429ac4:	str	q0, [x3, #32]
  429ac8:	str	x27, [x23]
  429acc:	cbz	x24, 429b68 <_obstack_memory_used@@Base+0xb078>
  429ad0:	str	x27, [x24]
  429ad4:	cbz	x27, 429b68 <_obstack_memory_used@@Base+0xb078>
  429ad8:	ldr	w2, [x28, #128]
  429adc:	mov	x9, #0x0                   	// #0
  429ae0:	cmp	w2, #0xf
  429ae4:	b.eq	429be0 <_obstack_memory_used@@Base+0xb0f0>  // b.none
  429ae8:	mov	w5, #0x40                  	// #64
  429aec:	mov	x0, #0x8                   	// #8
  429af0:	add	w10, w2, #0x1
  429af4:	smaddl	x5, w2, w5, x0
  429af8:	sbfiz	x2, x2, #6, #32
  429afc:	mov	x11, #0xa                   	// #10
  429b00:	add	x0, x25, x2
  429b04:	add	x6, x2, #0x20
  429b08:	add	x6, x25, x6
  429b0c:	str	w10, [x28, #128]
  429b10:	bfxil	x9, x11, #0, #8
  429b14:	mov	x10, #0xffffffffffffffff    	// #-1
  429b18:	stp	xzr, x27, [x0, #8]
  429b1c:	add	x23, x25, x5
  429b20:	add	x4, x4, #0x1
  429b24:	str	xzr, [x0, #24]
  429b28:	cmp	x20, x4
  429b2c:	stp	xzr, x9, [x0, #48]
  429b30:	ldrb	w9, [x6, #26]
  429b34:	and	w9, w9, #0xfffffff3
  429b38:	strb	w9, [x6, #26]
  429b3c:	str	x10, [x0, #64]
  429b40:	str	q0, [x0, #32]
  429b44:	str	x23, [x3, #8]
  429b48:	b.lt	429d24 <_obstack_memory_used@@Base+0xb234>  // b.tstop
  429b4c:	ldr	x27, [x24]
  429b50:	b	429908 <_obstack_memory_used@@Base+0xae18>
  429b54:	mov	x0, x2
  429b58:	add	x6, x27, #0x10
  429b5c:	mov	x25, x0
  429b60:	b	4299a0 <_obstack_memory_used@@Base+0xaeb0>
  429b64:	str	xzr, [x9]
  429b68:	ldr	x1, [sp, #128]
  429b6c:	mov	w0, #0xc                   	// #12
  429b70:	str	w0, [x1]
  429b74:	ldr	x0, [sp, #112]
  429b78:	str	xzr, [sp, #112]
  429b7c:	bl	422c58 <_obstack_memory_used@@Base+0x4168>
  429b80:	ldp	x23, x24, [sp, #48]
  429b84:	ldp	x19, x20, [sp, #16]
  429b88:	ldp	x21, x22, [sp, #32]
  429b8c:	ldp	x25, x26, [sp, #64]
  429b90:	ldp	x27, x28, [sp, #80]
  429b94:	ldr	x0, [sp, #112]
  429b98:	ldp	x29, x30, [sp], #288
  429b9c:	ret
  429ba0:	mov	x0, #0x3c8                 	// #968
  429ba4:	str	x4, [sp, #96]
  429ba8:	str	x6, [sp, #120]
  429bac:	bl	402440 <malloc@plt>
  429bb0:	mov	x25, x0
  429bb4:	cbz	x0, 429b68 <_obstack_memory_used@@Base+0xb078>
  429bb8:	ldr	x0, [x28, #112]
  429bbc:	str	x0, [x25]
  429bc0:	movi	v0.4s, #0x0
  429bc4:	mov	w9, #0x1                   	// #1
  429bc8:	mov	x27, #0x8                   	// #8
  429bcc:	mov	w0, #0x0                   	// #0
  429bd0:	str	x25, [x28, #112]
  429bd4:	ldr	x4, [sp, #96]
  429bd8:	ldr	x6, [sp, #120]
  429bdc:	b	429a84 <_obstack_memory_used@@Base+0xaf94>
  429be0:	mov	x0, #0x3c8                 	// #968
  429be4:	str	x4, [sp, #96]
  429be8:	str	x3, [sp, #120]
  429bec:	str	x9, [sp, #144]
  429bf0:	bl	402440 <malloc@plt>
  429bf4:	cbz	x0, 429b68 <_obstack_memory_used@@Base+0xb078>
  429bf8:	str	x25, [x0]
  429bfc:	mov	w10, #0x1                   	// #1
  429c00:	movi	v0.4s, #0x0
  429c04:	mov	x25, x0
  429c08:	mov	w2, #0x0                   	// #0
  429c0c:	mov	x5, #0x8                   	// #8
  429c10:	str	x0, [x28, #112]
  429c14:	ldr	x4, [sp, #96]
  429c18:	ldr	x3, [sp, #120]
  429c1c:	ldr	x9, [sp, #144]
  429c20:	b	429af8 <_obstack_memory_used@@Base+0xb008>
  429c24:	mov	x23, #0xffffffffffffffff    	// #-1
  429c28:	mov	x20, #0x8030                	// #32816
  429c2c:	nop
  429c30:	mov	x2, x22
  429c34:	mov	x1, x26
  429c38:	mov	x0, x19
  429c3c:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  429c40:	ldr	x4, [x26, #72]
  429c44:	ldrb	w1, [x19, #8]
  429c48:	ldrb	w2, [x19]
  429c4c:	add	x0, x4, w0, sxtw
  429c50:	str	x0, [x26, #72]
  429c54:	cmp	w1, #0x2
  429c58:	b.eq	42a594 <_obstack_memory_used@@Base+0xbaa4>  // b.none
  429c5c:	cmp	w1, #0x18
  429c60:	b.eq	429fe0 <_obstack_memory_used@@Base+0xb4f0>  // b.none
  429c64:	cmp	w2, #0x2c
  429c68:	b.eq	42a044 <_obstack_memory_used@@Base+0xb554>  // b.none
  429c6c:	cmp	w1, #0x1
  429c70:	b.eq	429c7c <_obstack_memory_used@@Base+0xb18c>  // b.none
  429c74:	mov	x23, #0xfffffffffffffffe    	// #-2
  429c78:	b	429c30 <_obstack_memory_used@@Base+0xb140>
  429c7c:	sub	w0, w2, #0x30
  429c80:	and	w1, w0, #0xff
  429c84:	cmp	w1, #0x9
  429c88:	ccmn	x23, #0x2, #0x4, ls  // ls = plast
  429c8c:	b.eq	429c74 <_obstack_memory_used@@Base+0xb184>  // b.none
  429c90:	add	x1, x23, x23, lsl #2
  429c94:	and	x2, x2, #0xff
  429c98:	cmn	x23, #0x1
  429c9c:	b.eq	42a03c <_obstack_memory_used@@Base+0xb54c>  // b.none
  429ca0:	add	x2, x2, x1, lsl #1
  429ca4:	cmp	x2, x20
  429ca8:	csel	x2, x2, x20, le
  429cac:	sub	x23, x2, #0x30
  429cb0:	b	429c30 <_obstack_memory_used@@Base+0xb140>
  429cb4:	ldr	x5, [x24, #40]
  429cb8:	mov	x0, x24
  429cbc:	nop
  429cc0:	mov	x2, x0
  429cc4:	ldr	x0, [x0, #8]
  429cc8:	cbnz	x0, 429cc0 <_obstack_memory_used@@Base+0xb1d0>
  429ccc:	ldr	x0, [x2, #16]
  429cd0:	cbnz	x0, 429cc0 <_obstack_memory_used@@Base+0xb1d0>
  429cd4:	ldrb	w0, [x2, #48]
  429cd8:	cmp	w0, #0x11
  429cdc:	b.eq	429d08 <_obstack_memory_used@@Base+0xb218>  // b.none
  429ce0:	ldr	x4, [x2]
  429ce4:	cbz	x4, 42987c <_obstack_memory_used@@Base+0xad8c>
  429ce8:	ldr	x0, [x4, #16]
  429cec:	cmp	x0, #0x0
  429cf0:	ccmp	x2, x0, #0x4, ne  // ne = any
  429cf4:	mov	x2, x4
  429cf8:	b.ne	429cc0 <_obstack_memory_used@@Base+0xb1d0>  // b.any
  429cfc:	ldrb	w0, [x2, #48]
  429d00:	cmp	w0, #0x11
  429d04:	b.ne	429ce0 <_obstack_memory_used@@Base+0xb1f0>  // b.any
  429d08:	ldr	x0, [x2, #40]
  429d0c:	cmp	x5, x0
  429d10:	b.ne	429ce0 <_obstack_memory_used@@Base+0xb1f0>  // b.any
  429d14:	ldrb	w0, [x2, #50]
  429d18:	orr	w0, w0, #0x8
  429d1c:	strb	w0, [x2, #50]
  429d20:	b	429ce0 <_obstack_memory_used@@Base+0xb1f0>
  429d24:	cbz	x21, 429fd8 <_obstack_memory_used@@Base+0xb4e8>
  429d28:	ldr	w2, [x28, #128]
  429d2c:	mov	x20, #0x0                   	// #0
  429d30:	cmp	w2, #0xf
  429d34:	b.eq	42a5d8 <_obstack_memory_used@@Base+0xbae8>  // b.none
  429d38:	mov	w1, #0x40                  	// #64
  429d3c:	mov	x0, #0x8                   	// #8
  429d40:	add	w6, w2, #0x1
  429d44:	smaddl	x1, w2, w1, x0
  429d48:	sbfiz	x2, x2, #6, #32
  429d4c:	mov	x0, #0x10                  	// #16
  429d50:	add	x3, x25, x2
  429d54:	add	x4, x2, #0x20
  429d58:	add	x4, x25, x4
  429d5c:	str	w6, [x28, #128]
  429d60:	bfxil	x20, x0, #0, #8
  429d64:	mov	x6, #0xffffffffffffffff    	// #-1
  429d68:	stp	xzr, x21, [x3, #8]
  429d6c:	add	x1, x25, x1
  429d70:	str	x23, [x3, #24]
  429d74:	stp	xzr, x20, [x3, #48]
  429d78:	ldrb	w0, [x4, #26]
  429d7c:	str	x1, [sp, #112]
  429d80:	and	w0, w0, #0xfffffff3
  429d84:	strb	w0, [x4, #26]
  429d88:	stp	xzr, xzr, [x3, #32]
  429d8c:	str	x6, [x3, #64]
  429d90:	str	x1, [x21]
  429d94:	str	x1, [x23]
  429d98:	ldrb	w1, [x19, #8]
  429d9c:	ldr	x0, [sp, #136]
  429da0:	cmp	w1, #0xb
  429da4:	cset	w3, eq  // eq = none
  429da8:	cmp	w1, #0x17
  429dac:	cset	w2, eq  // eq = none
  429db0:	cbz	x0, 429dc0 <_obstack_memory_used@@Base+0xb2d0>
  429db4:	cmp	w3, #0x0
  429db8:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  429dbc:	b.ne	42a144 <_obstack_memory_used@@Base+0xb654>  // b.any
  429dc0:	subs	w0, w1, #0x12
  429dc4:	cset	w24, eq  // eq = none
  429dc8:	cmp	w3, #0x0
  429dcc:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  429dd0:	and	w0, w0, #0xff
  429dd4:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  429dd8:	b.hi	42a4c8 <_obstack_memory_used@@Base+0xb9d8>  // b.pmore
  429ddc:	ldr	x27, [x26, #72]
  429de0:	b	429820 <_obstack_memory_used@@Base+0xad30>
  429de4:	ldr	x0, [sp, #128]
  429de8:	ldr	w0, [x0]
  429dec:	cbnz	w0, 42a018 <_obstack_memory_used@@Base+0xb528>
  429df0:	str	xzr, [sp, #112]
  429df4:	b	429d98 <_obstack_memory_used@@Base+0xb2a8>
  429df8:	cmp	w2, #0x14
  429dfc:	b.eq	42a934 <_obstack_memory_used@@Base+0xbe44>  // b.none
  429e00:	b.ls	429e08 <_obstack_memory_used@@Base+0xb318>  // b.plast
  429e04:	tbnz	w3, #24, 42a150 <_obstack_memory_used@@Base+0xb660>
  429e08:	tbnz	w22, #5, 42a150 <_obstack_memory_used@@Base+0xb660>
  429e0c:	tbnz	w22, #4, 42af2c <_obstack_memory_used@@Base+0xc43c>
  429e10:	cmp	w2, #0x9
  429e14:	b.eq	42ad00 <_obstack_memory_used@@Base+0xc210>  // b.none
  429e18:	mov	w0, #0x1                   	// #1
  429e1c:	strb	w0, [x19, #8]
  429e20:	ldr	w0, [x28, #128]
  429e24:	cmp	w0, #0xf
  429e28:	b.eq	42ae04 <_obstack_memory_used@@Base+0xc314>  // b.none
  429e2c:	ldr	x21, [x28, #112]
  429e30:	sbfiz	x1, x0, #6, #32
  429e34:	movi	v0.4s, #0x0
  429e38:	add	w2, w0, #0x1
  429e3c:	add	x4, x21, x1
  429e40:	str	w2, [x28, #128]
  429e44:	mov	w2, #0x40                  	// #64
  429e48:	add	x5, x1, #0x20
  429e4c:	add	x5, x21, x5
  429e50:	mov	x6, #0xffffffffffffffff    	// #-1
  429e54:	str	xzr, [x4, #24]
  429e58:	smaddl	x0, w0, w2, x21
  429e5c:	stur	q0, [x4, #8]
  429e60:	adds	x0, x0, #0x8
  429e64:	ldp	x2, x3, [x19]
  429e68:	stp	x2, x3, [x4, #48]
  429e6c:	str	x0, [sp, #112]
  429e70:	ldrb	w0, [x5, #26]
  429e74:	and	w0, w0, #0xfffffff3
  429e78:	strb	w0, [x5, #26]
  429e7c:	str	x6, [x4, #64]
  429e80:	str	q0, [x4, #32]
  429e84:	b.ne	4297cc <_obstack_memory_used@@Base+0xacdc>  // b.any
  429e88:	ldr	x1, [sp, #128]
  429e8c:	mov	w0, #0xc                   	// #12
  429e90:	str	xzr, [sp, #112]
  429e94:	str	w0, [x1]
  429e98:	b	429b84 <_obstack_memory_used@@Base+0xb094>
  429e9c:	cmp	w2, #0x5
  429ea0:	b.eq	42a8ac <_obstack_memory_used@@Base+0xbdbc>  // b.none
  429ea4:	b.ls	429edc <_obstack_memory_used@@Base+0xb3ec>  // b.plast
  429ea8:	cmp	w2, #0x9
  429eac:	b.eq	42ad00 <_obstack_memory_used@@Base+0xc210>  // b.none
  429eb0:	b.ls	42a62c <_obstack_memory_used@@Base+0xbb3c>  // b.plast
  429eb4:	str	xzr, [sp, #112]
  429eb8:	cmp	w2, #0xa
  429ebc:	b.ne	429e08 <_obstack_memory_used@@Base+0xb318>  // b.any
  429ec0:	ldp	x19, x20, [sp, #16]
  429ec4:	ldp	x21, x22, [sp, #32]
  429ec8:	ldp	x25, x26, [sp, #64]
  429ecc:	ldp	x27, x28, [sp, #80]
  429ed0:	ldr	x0, [sp, #112]
  429ed4:	ldp	x29, x30, [sp], #288
  429ed8:	ret
  429edc:	cmp	w2, #0x2
  429ee0:	b.eq	42a01c <_obstack_memory_used@@Base+0xb52c>  // b.none
  429ee4:	cmp	w2, #0x4
  429ee8:	b.ne	42a700 <_obstack_memory_used@@Base+0xbc10>  // b.any
  429eec:	ldr	x0, [x19]
  429ef0:	mov	w20, #0x1                   	// #1
  429ef4:	ldr	x1, [x28, #168]
  429ef8:	lsl	w0, w20, w0
  429efc:	sxtw	x0, w0
  429f00:	tst	x0, x1
  429f04:	b.eq	42aec8 <_obstack_memory_used@@Base+0xc3d8>  // b.none
  429f08:	ldr	x2, [x28, #160]
  429f0c:	ldr	w1, [x28, #128]
  429f10:	orr	x0, x2, x0
  429f14:	str	x0, [x28, #160]
  429f18:	cmp	w1, #0xf
  429f1c:	b.eq	42b2f4 <_obstack_memory_used@@Base+0xc804>  // b.none
  429f20:	ldr	x21, [x28, #112]
  429f24:	sbfiz	x0, x1, #6, #32
  429f28:	movi	v0.4s, #0x0
  429f2c:	add	w2, w1, #0x1
  429f30:	add	x4, x21, x0
  429f34:	str	w2, [x28, #128]
  429f38:	mov	w2, #0x40                  	// #64
  429f3c:	add	x5, x0, #0x20
  429f40:	add	x5, x21, x5
  429f44:	mov	x6, #0xffffffffffffffff    	// #-1
  429f48:	str	xzr, [x4, #24]
  429f4c:	smaddl	x1, w1, w2, x21
  429f50:	stur	q0, [x4, #8]
  429f54:	adds	x1, x1, #0x8
  429f58:	ldp	x2, x3, [x19]
  429f5c:	stp	x2, x3, [x4, #48]
  429f60:	str	x1, [sp, #112]
  429f64:	ldrb	w1, [x5, #26]
  429f68:	and	w1, w1, #0xfffffff3
  429f6c:	strb	w1, [x5, #26]
  429f70:	str	x6, [x4, #64]
  429f74:	str	q0, [x4, #32]
  429f78:	b.eq	429e88 <_obstack_memory_used@@Base+0xb398>  // b.none
  429f7c:	stp	x23, x24, [sp, #48]
  429f80:	ldrb	w1, [x28, #176]
  429f84:	ldr	x0, [x28, #152]
  429f88:	orr	w1, w1, #0x2
  429f8c:	strb	w1, [x28, #176]
  429f90:	add	x0, x0, #0x1
  429f94:	str	x0, [x28, #152]
  429f98:	b	4297d0 <_obstack_memory_used@@Base+0xace0>
  429f9c:	mov	x0, #0x3c8                 	// #968
  429fa0:	str	x6, [sp, #96]
  429fa4:	bl	402440 <malloc@plt>
  429fa8:	mov	x25, x0
  429fac:	cbz	x0, 429b68 <_obstack_memory_used@@Base+0xb078>
  429fb0:	ldr	x0, [x28, #112]
  429fb4:	str	x0, [x25]
  429fb8:	mov	w2, #0x1                   	// #1
  429fbc:	mov	x5, #0x8                   	// #8
  429fc0:	mov	w0, #0x0                   	// #0
  429fc4:	str	x25, [x28, #112]
  429fc8:	ldr	x6, [sp, #96]
  429fcc:	b	4298ac <_obstack_memory_used@@Base+0xadbc>
  429fd0:	mov	x23, x21
  429fd4:	nop
  429fd8:	str	x23, [sp, #112]
  429fdc:	b	429d98 <_obstack_memory_used@@Base+0xb2a8>
  429fe0:	cmn	x23, #0x1
  429fe4:	b.eq	42a000 <_obstack_memory_used@@Base+0xb510>  // b.none
  429fe8:	cmn	x23, #0x2
  429fec:	mov	x20, x23
  429ff0:	b.ne	42a0cc <_obstack_memory_used@@Base+0xb5dc>  // b.any
  429ff4:	ldr	x0, [sp, #152]
  429ff8:	cbnz	x0, 42a59c <_obstack_memory_used@@Base+0xbaac>
  429ffc:	nop
  42a000:	ldr	x1, [sp, #128]
  42a004:	mov	w0, #0xa                   	// #10
  42a008:	str	w0, [x1]
  42a00c:	ldr	x0, [sp, #112]
  42a010:	cbnz	x0, 429b74 <_obstack_memory_used@@Base+0xb084>
  42a014:	nop
  42a018:	ldp	x23, x24, [sp, #48]
  42a01c:	str	xzr, [sp, #112]
  42a020:	ldp	x19, x20, [sp, #16]
  42a024:	ldp	x21, x22, [sp, #32]
  42a028:	ldp	x25, x26, [sp, #64]
  42a02c:	ldp	x27, x28, [sp, #80]
  42a030:	ldr	x0, [sp, #112]
  42a034:	ldp	x29, x30, [sp], #288
  42a038:	ret
  42a03c:	sxtw	x23, w0
  42a040:	b	429c30 <_obstack_memory_used@@Base+0xb140>
  42a044:	cmn	x23, #0x1
  42a048:	b.ne	42a584 <_obstack_memory_used@@Base+0xba94>  // b.any
  42a04c:	cmp	w1, #0x1
  42a050:	b.ne	42a000 <_obstack_memory_used@@Base+0xb510>  // b.any
  42a054:	mov	x23, #0x0                   	// #0
  42a058:	mov	x20, #0xffffffffffffffff    	// #-1
  42a05c:	mov	x21, #0x8030                	// #32816
  42a060:	mov	x2, x22
  42a064:	mov	x1, x26
  42a068:	mov	x0, x19
  42a06c:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  42a070:	ldr	x4, [x26, #72]
  42a074:	ldrb	w1, [x19, #8]
  42a078:	ldrb	w2, [x19]
  42a07c:	add	x0, x4, w0, sxtw
  42a080:	str	x0, [x26, #72]
  42a084:	cmp	w1, #0x2
  42a088:	b.eq	42acb0 <_obstack_memory_used@@Base+0xc1c0>  // b.none
  42a08c:	cmp	w2, #0x2c
  42a090:	ccmp	w1, #0x18, #0x4, ne  // ne = any
  42a094:	b.eq	42a0a8 <_obstack_memory_used@@Base+0xb5b8>  // b.none
  42a098:	cmp	w1, #0x1
  42a09c:	b.eq	42a4d0 <_obstack_memory_used@@Base+0xb9e0>  // b.none
  42a0a0:	mov	x20, #0xfffffffffffffffe    	// #-2
  42a0a4:	b	42a060 <_obstack_memory_used@@Base+0xb570>
  42a0a8:	cmn	x20, #0x2
  42a0ac:	b.eq	429ff4 <_obstack_memory_used@@Base+0xb504>  // b.none
  42a0b0:	cmp	x23, x20
  42a0b4:	ccmn	x20, #0x1, #0x4, gt
  42a0b8:	b.ne	42a000 <_obstack_memory_used@@Base+0xb510>  // b.any
  42a0bc:	cmp	w1, #0x18
  42a0c0:	b.ne	42a000 <_obstack_memory_used@@Base+0xb510>  // b.any
  42a0c4:	cmn	x20, #0x1
  42a0c8:	b.eq	42a124 <_obstack_memory_used@@Base+0xb634>  // b.none
  42a0cc:	mov	x0, #0x7fff                	// #32767
  42a0d0:	cmp	x20, x0
  42a0d4:	cset	x0, gt
  42a0d8:	cbnz	x0, 42a134 <_obstack_memory_used@@Base+0xb644>
  42a0dc:	mov	x1, x26
  42a0e0:	mov	x2, x22
  42a0e4:	mov	x0, x19
  42a0e8:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  42a0ec:	ldr	x1, [x26, #72]
  42a0f0:	add	x0, x1, w0, sxtw
  42a0f4:	str	x0, [x26, #72]
  42a0f8:	ldr	x1, [sp, #112]
  42a0fc:	cbz	x1, 429de4 <_obstack_memory_used@@Base+0xb2f4>
  42a100:	orr	x0, x20, x23
  42a104:	cbnz	x0, 42a17c <_obstack_memory_used@@Base+0xb68c>
  42a108:	mov	x0, x1
  42a10c:	bl	422c58 <_obstack_memory_used@@Base+0x4168>
  42a110:	ldr	x0, [sp, #128]
  42a114:	ldr	w0, [x0]
  42a118:	cbnz	w0, 429b74 <_obstack_memory_used@@Base+0xb084>
  42a11c:	str	xzr, [sp, #112]
  42a120:	b	429d98 <_obstack_memory_used@@Base+0xb2a8>
  42a124:	mov	x0, #0x7fff                	// #32767
  42a128:	cmp	x23, x0
  42a12c:	cset	x0, gt
  42a130:	cbz	x0, 42a0dc <_obstack_memory_used@@Base+0xb5ec>
  42a134:	ldr	x1, [sp, #128]
  42a138:	mov	w0, #0xf                   	// #15
  42a13c:	str	w0, [x1]
  42a140:	b	42a00c <_obstack_memory_used@@Base+0xb51c>
  42a144:	ldr	x0, [sp, #112]
  42a148:	cbnz	x0, 42a508 <_obstack_memory_used@@Base+0xba18>
  42a14c:	ldp	x23, x24, [sp, #48]
  42a150:	mov	w0, #0xd                   	// #13
  42a154:	ldr	x1, [sp, #128]
  42a158:	str	xzr, [sp, #112]
  42a15c:	str	w0, [x1]
  42a160:	ldp	x19, x20, [sp, #16]
  42a164:	ldp	x21, x22, [sp, #32]
  42a168:	ldp	x25, x26, [sp, #64]
  42a16c:	ldp	x27, x28, [sp, #80]
  42a170:	ldr	x0, [sp, #112]
  42a174:	ldp	x29, x30, [sp], #288
  42a178:	ret
  42a17c:	cmp	x23, #0x0
  42a180:	b.le	42b854 <_obstack_memory_used@@Base+0xcd64>
  42a184:	cmp	x23, #0x1
  42a188:	b.eq	42b8c4 <_obstack_memory_used@@Base+0xcdd4>  // b.none
  42a18c:	movi	v0.4s, #0x0
  42a190:	mov	x6, x1
  42a194:	ldr	x21, [x1]
  42a198:	mov	x24, x1
  42a19c:	mov	x9, #0x2                   	// #2
  42a1a0:	ldr	w2, [x28, #128]
  42a1a4:	add	x25, sp, #0x100
  42a1a8:	mov	x27, #0xffffffffffffffff    	// #-1
  42a1ac:	cmp	w2, #0xf
  42a1b0:	b.eq	42a244 <_obstack_memory_used@@Base+0xb754>  // b.none
  42a1b4:	nop
  42a1b8:	ldr	x0, [x28, #112]
  42a1bc:	sbfiz	x4, x2, #6, #32
  42a1c0:	add	w5, w2, #0x1
  42a1c4:	str	w5, [x28, #128]
  42a1c8:	add	x11, x0, x4
  42a1cc:	add	x12, x4, #0x20
  42a1d0:	mov	w4, #0x40                  	// #64
  42a1d4:	add	x12, x0, x12
  42a1d8:	sxtw	x13, w2
  42a1dc:	str	xzr, [x11, #24]
  42a1e0:	smaddl	x2, w2, w4, x0
  42a1e4:	stur	q0, [x11, #8]
  42a1e8:	add	x2, x2, #0x8
  42a1ec:	ldp	x4, x5, [x24, #40]
  42a1f0:	stp	x4, x5, [x11, #48]
  42a1f4:	ldrb	w4, [x12, #26]
  42a1f8:	and	w4, w4, #0xfffffff3
  42a1fc:	strb	w4, [x12, #26]
  42a200:	str	x27, [x11, #64]
  42a204:	str	q0, [x11, #32]
  42a208:	str	x2, [x25]
  42a20c:	cbz	x2, 42a37c <_obstack_memory_used@@Base+0xb88c>
  42a210:	add	x0, x0, x13, lsl #6
  42a214:	str	x21, [x0, #8]
  42a218:	ldr	x21, [x25]
  42a21c:	ldrb	w0, [x21, #50]
  42a220:	orr	w0, w0, #0x4
  42a224:	strb	w0, [x21, #50]
  42a228:	ldr	x0, [x24, #8]
  42a22c:	cbz	x0, 42a2c8 <_obstack_memory_used@@Base+0xb7d8>
  42a230:	add	x25, x21, #0x8
  42a234:	mov	x24, x0
  42a238:	ldr	w2, [x28, #128]
  42a23c:	cmp	w2, #0xf
  42a240:	b.ne	42a1b8 <_obstack_memory_used@@Base+0xb6c8>  // b.any
  42a244:	mov	x0, #0x3c8                 	// #968
  42a248:	str	x6, [sp, #96]
  42a24c:	str	x9, [sp, #120]
  42a250:	bl	402440 <malloc@plt>
  42a254:	movi	v0.4s, #0x0
  42a258:	ldr	x6, [sp, #96]
  42a25c:	ldr	x9, [sp, #120]
  42a260:	cbz	x0, 42b670 <_obstack_memory_used@@Base+0xcb80>
  42a264:	ldr	x2, [x28, #112]
  42a268:	str	x2, [x0]
  42a26c:	mov	w1, #0x1                   	// #1
  42a270:	str	x0, [x28, #112]
  42a274:	str	w1, [x28, #128]
  42a278:	mov	x13, #0x0                   	// #0
  42a27c:	str	xzr, [x0, #24]
  42a280:	add	x2, x0, #0x8
  42a284:	stur	q0, [x0, #8]
  42a288:	ldp	x4, x5, [x24, #40]
  42a28c:	stp	x4, x5, [x0, #48]
  42a290:	ldrb	w4, [x0, #58]
  42a294:	str	q0, [x0, #32]
  42a298:	and	w4, w4, #0xfffffff3
  42a29c:	strb	w4, [x0, #58]
  42a2a0:	str	x27, [x0, #64]
  42a2a4:	add	x0, x0, x13, lsl #6
  42a2a8:	str	x2, [x25]
  42a2ac:	str	x21, [x0, #8]
  42a2b0:	ldr	x21, [x25]
  42a2b4:	ldrb	w0, [x21, #50]
  42a2b8:	orr	w0, w0, #0x4
  42a2bc:	strb	w0, [x21, #50]
  42a2c0:	ldr	x0, [x24, #8]
  42a2c4:	cbnz	x0, 42a230 <_obstack_memory_used@@Base+0xb740>
  42a2c8:	ldr	x2, [x24, #16]
  42a2cc:	cmp	x2, #0x0
  42a2d0:	ccmp	x2, x0, #0x4, ne  // ne = any
  42a2d4:	b.ne	42a3d0 <_obstack_memory_used@@Base+0xb8e0>  // b.any
  42a2d8:	ldr	x2, [x24]
  42a2dc:	mov	x0, x24
  42a2e0:	ldr	x21, [x21]
  42a2e4:	mov	x24, x2
  42a2e8:	cbnz	x2, 42a2c8 <_obstack_memory_used@@Base+0xb7d8>
  42a2ec:	ldr	x24, [sp, #256]
  42a2f0:	mov	x25, #0x0                   	// #0
  42a2f4:	ldr	w2, [x28, #128]
  42a2f8:	cmp	w2, #0xf
  42a2fc:	b.eq	42a390 <_obstack_memory_used@@Base+0xb8a0>  // b.none
  42a300:	mov	w5, #0x40                  	// #64
  42a304:	mov	x0, #0x8                   	// #8
  42a308:	ldr	x1, [x28, #112]
  42a30c:	smaddl	x5, w2, w5, x0
  42a310:	add	w11, w2, #0x1
  42a314:	sbfiz	x2, x2, #6, #32
  42a318:	mov	x10, #0x10                  	// #16
  42a31c:	add	x4, x1, x2
  42a320:	add	x0, x2, #0x20
  42a324:	add	x0, x1, x0
  42a328:	str	w11, [x28, #128]
  42a32c:	bfxil	x25, x10, #0, #8
  42a330:	add	x21, x1, x5
  42a334:	stp	xzr, x6, [x4, #8]
  42a338:	mov	x10, #0xffffffffffffffff    	// #-1
  42a33c:	str	x24, [x4, #24]
  42a340:	stp	xzr, x25, [x4, #48]
  42a344:	ldrb	w5, [x0, #26]
  42a348:	and	w5, w5, #0xfffffff3
  42a34c:	strb	w5, [x0, #26]
  42a350:	str	x10, [x4, #64]
  42a354:	str	q0, [x4, #32]
  42a358:	str	x21, [x6]
  42a35c:	cbz	x24, 429b68 <_obstack_memory_used@@Base+0xb078>
  42a360:	str	x21, [x24]
  42a364:	cbz	x21, 429b68 <_obstack_memory_used@@Base+0xb078>
  42a368:	add	x9, x9, #0x1
  42a36c:	cmp	x9, x23
  42a370:	b.gt	42a3f0 <_obstack_memory_used@@Base+0xb900>
  42a374:	mov	x6, x21
  42a378:	b	42a1a0 <_obstack_memory_used@@Base+0xb6b0>
  42a37c:	ldr	w2, [x28, #128]
  42a380:	mov	x24, #0x0                   	// #0
  42a384:	mov	x25, #0x0                   	// #0
  42a388:	cmp	w2, #0xf
  42a38c:	b.ne	42a300 <_obstack_memory_used@@Base+0xb810>  // b.any
  42a390:	mov	x0, #0x3c8                 	// #968
  42a394:	str	x6, [sp, #96]
  42a398:	str	x9, [sp, #120]
  42a39c:	bl	402440 <malloc@plt>
  42a3a0:	mov	x1, x0
  42a3a4:	cbz	x0, 429b68 <_obstack_memory_used@@Base+0xb078>
  42a3a8:	ldr	x0, [x28, #112]
  42a3ac:	str	x0, [x1]
  42a3b0:	movi	v0.4s, #0x0
  42a3b4:	mov	x5, #0x8                   	// #8
  42a3b8:	mov	w11, #0x1                   	// #1
  42a3bc:	mov	w2, #0x0                   	// #0
  42a3c0:	str	x1, [x28, #112]
  42a3c4:	ldr	x6, [sp, #96]
  42a3c8:	ldr	x9, [sp, #120]
  42a3cc:	b	42a314 <_obstack_memory_used@@Base+0xb824>
  42a3d0:	mov	x0, x2
  42a3d4:	add	x25, x21, #0x10
  42a3d8:	mov	x24, x0
  42a3dc:	b	42a238 <_obstack_memory_used@@Base+0xb748>
  42a3e0:	mov	x24, x0
  42a3e4:	mov	x21, x0
  42a3e8:	mov	x23, #0x1                   	// #1
  42a3ec:	nop
  42a3f0:	cmp	x20, x23
  42a3f4:	b.eq	429fd0 <_obstack_memory_used@@Base+0xb4e0>  // b.none
  42a3f8:	movi	v0.4s, #0x0
  42a3fc:	add	x9, sp, #0x100
  42a400:	mov	x27, #0xffffffffffffffff    	// #-1
  42a404:	ldr	x25, [x24]
  42a408:	b	42a414 <_obstack_memory_used@@Base+0xb924>
  42a40c:	mov	x24, x0
  42a410:	add	x9, x25, #0x8
  42a414:	ldr	w2, [x28, #128]
  42a418:	cmp	w2, #0xf
  42a41c:	b.eq	42a524 <_obstack_memory_used@@Base+0xba34>  // b.none
  42a420:	ldr	x0, [x28, #112]
  42a424:	sbfiz	x4, x2, #6, #32
  42a428:	add	w5, w2, #0x1
  42a42c:	str	w5, [x28, #128]
  42a430:	add	x10, x0, x4
  42a434:	add	x11, x4, #0x20
  42a438:	mov	w4, #0x40                  	// #64
  42a43c:	add	x11, x0, x11
  42a440:	sxtw	x12, w2
  42a444:	str	xzr, [x10, #24]
  42a448:	smaddl	x2, w2, w4, x0
  42a44c:	stur	q0, [x10, #8]
  42a450:	add	x2, x2, #0x8
  42a454:	ldp	x4, x5, [x24, #40]
  42a458:	stp	x4, x5, [x10, #48]
  42a45c:	ldrb	w4, [x11, #26]
  42a460:	and	w4, w4, #0xfffffff3
  42a464:	strb	w4, [x11, #26]
  42a468:	str	x27, [x10, #64]
  42a46c:	str	q0, [x10, #32]
  42a470:	str	x2, [x9]
  42a474:	cbz	x2, 429b68 <_obstack_memory_used@@Base+0xb078>
  42a478:	add	x0, x0, x12, lsl #6
  42a47c:	str	x25, [x0, #8]
  42a480:	ldr	x25, [x9]
  42a484:	ldrb	w0, [x25, #50]
  42a488:	orr	w0, w0, #0x4
  42a48c:	strb	w0, [x25, #50]
  42a490:	ldr	x0, [x24, #8]
  42a494:	cbnz	x0, 42a40c <_obstack_memory_used@@Base+0xb91c>
  42a498:	ldr	x2, [x24, #16]
  42a49c:	cmp	x2, #0x0
  42a4a0:	ccmp	x2, x0, #0x4, ne  // ne = any
  42a4a4:	b.ne	42a5cc <_obstack_memory_used@@Base+0xbadc>  // b.any
  42a4a8:	ldr	x2, [x24]
  42a4ac:	mov	x0, x24
  42a4b0:	ldr	x25, [x25]
  42a4b4:	mov	x24, x2
  42a4b8:	cbnz	x2, 42a498 <_obstack_memory_used@@Base+0xb9a8>
  42a4bc:	ldr	x24, [sp, #256]
  42a4c0:	cbnz	x24, 429870 <_obstack_memory_used@@Base+0xad80>
  42a4c4:	b	429b68 <_obstack_memory_used@@Base+0xb078>
  42a4c8:	ldp	x23, x24, [sp, #48]
  42a4cc:	b	429b84 <_obstack_memory_used@@Base+0xb094>
  42a4d0:	sub	w0, w2, #0x30
  42a4d4:	and	w1, w0, #0xff
  42a4d8:	cmp	w1, #0x9
  42a4dc:	ccmn	x20, #0x2, #0x4, ls  // ls = plast
  42a4e0:	b.eq	42a0a0 <_obstack_memory_used@@Base+0xb5b0>  // b.none
  42a4e4:	add	x1, x20, x20, lsl #2
  42a4e8:	and	x2, x2, #0xff
  42a4ec:	cmn	x20, #0x1
  42a4f0:	b.eq	42ae60 <_obstack_memory_used@@Base+0xc370>  // b.none
  42a4f4:	add	x2, x2, x1, lsl #1
  42a4f8:	cmp	x2, x21
  42a4fc:	csel	x2, x2, x21, le
  42a500:	sub	x20, x2, #0x30
  42a504:	b	42a060 <_obstack_memory_used@@Base+0xb570>
  42a508:	bl	422c58 <_obstack_memory_used@@Base+0x4168>
  42a50c:	str	xzr, [sp, #112]
  42a510:	ldr	x1, [sp, #128]
  42a514:	mov	w0, #0xd                   	// #13
  42a518:	ldp	x23, x24, [sp, #48]
  42a51c:	str	w0, [x1]
  42a520:	b	42a160 <_obstack_memory_used@@Base+0xb670>
  42a524:	mov	x0, #0x3c8                 	// #968
  42a528:	str	x9, [sp, #96]
  42a52c:	bl	402440 <malloc@plt>
  42a530:	movi	v0.4s, #0x0
  42a534:	ldr	x9, [sp, #96]
  42a538:	cbz	x0, 429b64 <_obstack_memory_used@@Base+0xb074>
  42a53c:	ldr	x2, [x28, #112]
  42a540:	str	x2, [x0]
  42a544:	mov	w1, #0x1                   	// #1
  42a548:	str	x0, [x28, #112]
  42a54c:	str	w1, [x28, #128]
  42a550:	add	x2, x0, #0x8
  42a554:	str	xzr, [x0, #24]
  42a558:	mov	x12, #0x0                   	// #0
  42a55c:	stur	q0, [x0, #8]
  42a560:	ldp	x4, x5, [x24, #40]
  42a564:	stp	x4, x5, [x0, #48]
  42a568:	ldrb	w4, [x0, #58]
  42a56c:	str	q0, [x0, #32]
  42a570:	and	w4, w4, #0xfffffff3
  42a574:	strb	w4, [x0, #58]
  42a578:	str	x27, [x0, #64]
  42a57c:	str	x2, [x9]
  42a580:	b	42a478 <_obstack_memory_used@@Base+0xb988>
  42a584:	cmn	x23, #0x2
  42a588:	b.eq	42a594 <_obstack_memory_used@@Base+0xbaa4>  // b.none
  42a58c:	cmp	w1, #0x1
  42a590:	b.eq	42a058 <_obstack_memory_used@@Base+0xb568>  // b.none
  42a594:	ldr	x0, [sp, #152]
  42a598:	cbz	x0, 42b1cc <_obstack_memory_used@@Base+0xc6dc>
  42a59c:	str	x27, [x26, #72]
  42a5a0:	mov	w0, #0x1                   	// #1
  42a5a4:	ldp	x2, x3, [sp, #96]
  42a5a8:	stp	x2, x3, [x19]
  42a5ac:	strb	w0, [x19, #8]
  42a5b0:	ldr	x0, [sp, #128]
  42a5b4:	ldr	w0, [x0]
  42a5b8:	cbz	w0, 429d98 <_obstack_memory_used@@Base+0xb2a8>
  42a5bc:	ldr	x0, [sp, #112]
  42a5c0:	cbnz	x0, 429d98 <_obstack_memory_used@@Base+0xb2a8>
  42a5c4:	ldp	x23, x24, [sp, #48]
  42a5c8:	b	42a01c <_obstack_memory_used@@Base+0xb52c>
  42a5cc:	mov	x24, x2
  42a5d0:	add	x9, x25, #0x10
  42a5d4:	b	42a414 <_obstack_memory_used@@Base+0xb924>
  42a5d8:	mov	x0, #0x3c8                 	// #968
  42a5dc:	bl	402440 <malloc@plt>
  42a5e0:	cbz	x0, 42b8d0 <_obstack_memory_used@@Base+0xcde0>
  42a5e4:	str	x25, [x0]
  42a5e8:	mov	w6, #0x1                   	// #1
  42a5ec:	mov	x25, x0
  42a5f0:	mov	w2, #0x0                   	// #0
  42a5f4:	mov	x1, #0x8                   	// #8
  42a5f8:	str	x0, [x28, #112]
  42a5fc:	b	429d48 <_obstack_memory_used@@Base+0xb258>
  42a600:	mov	w0, #0x5                   	// #5
  42a604:	str	w0, [x5]
  42a608:	str	xzr, [sp, #112]
  42a60c:	b	429b84 <_obstack_memory_used@@Base+0xb094>
  42a610:	cmp	w2, #0x23
  42a614:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  42a618:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x12510>
  42a61c:	cset	w4, eq  // eq = none
  42a620:	add	x3, x3, #0xbe0
  42a624:	add	x2, x2, #0x610
  42a628:	b	4297ac <_obstack_memory_used@@Base+0xacbc>
  42a62c:	stp	x23, x24, [sp, #48]
  42a630:	orr	x2, x3, #0x800000
  42a634:	mov	x1, x0
  42a638:	ldr	x24, [x20, #48]
  42a63c:	mov	x0, x19
  42a640:	str	x4, [sp, #112]
  42a644:	mov	x23, #0x0                   	// #0
  42a648:	add	x3, x24, #0x1
  42a64c:	str	x3, [x20, #48]
  42a650:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  42a654:	ldr	x2, [x26, #72]
  42a658:	ldrb	w1, [x19, #8]
  42a65c:	add	x0, x2, w0, sxtw
  42a660:	str	x0, [x26, #72]
  42a664:	cmp	w1, #0x9
  42a668:	b.ne	42ad18 <_obstack_memory_used@@Base+0xc228>  // b.any
  42a66c:	cmp	x24, #0x8
  42a670:	b.ls	42ad78 <_obstack_memory_used@@Base+0xc288>  // b.plast
  42a674:	ldr	w0, [x28, #128]
  42a678:	mov	x20, #0x0                   	// #0
  42a67c:	cmp	w0, #0xf
  42a680:	b.eq	42b214 <_obstack_memory_used@@Base+0xc724>  // b.none
  42a684:	mov	x1, #0x8                   	// #8
  42a688:	mov	w21, #0x40                  	// #64
  42a68c:	add	w5, w0, #0x1
  42a690:	smaddl	x21, w0, w21, x1
  42a694:	ldr	x1, [x28, #112]
  42a698:	sbfiz	x3, x0, #6, #32
  42a69c:	add	x2, x1, x3
  42a6a0:	add	x4, x3, #0x20
  42a6a4:	add	x4, x1, x4
  42a6a8:	mov	x6, #0x11                  	// #17
  42a6ac:	str	w5, [x28, #128]
  42a6b0:	bfxil	x20, x6, #0, #8
  42a6b4:	stp	xzr, x23, [x2, #8]
  42a6b8:	add	x7, x1, x21
  42a6bc:	mov	x6, #0xffffffffffffffff    	// #-1
  42a6c0:	str	xzr, [x2, #24]
  42a6c4:	sxtw	x0, w0
  42a6c8:	stp	xzr, x20, [x2, #48]
  42a6cc:	ldrb	w5, [x4, #26]
  42a6d0:	str	x7, [sp, #112]
  42a6d4:	and	w5, w5, #0xfffffff3
  42a6d8:	strb	w5, [x4, #26]
  42a6dc:	stp	xzr, xzr, [x2, #32]
  42a6e0:	str	x6, [x2, #64]
  42a6e4:	cbz	x23, 42a6ec <_obstack_memory_used@@Base+0xbbfc>
  42a6e8:	str	x7, [x23]
  42a6ec:	ldr	x2, [sp, #112]
  42a6f0:	cbz	x2, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42a6f4:	add	x0, x1, x0, lsl #6
  42a6f8:	str	x24, [x0, #48]
  42a6fc:	b	4297d0 <_obstack_memory_used@@Base+0xace0>
  42a700:	ldr	w0, [x28, #128]
  42a704:	stp	x23, x24, [sp, #48]
  42a708:	cmp	w0, #0xf
  42a70c:	b.eq	42b9a4 <_obstack_memory_used@@Base+0xceb4>  // b.none
  42a710:	ldr	x21, [x28, #112]
  42a714:	sbfiz	x1, x0, #6, #32
  42a718:	movi	v0.4s, #0x0
  42a71c:	add	w2, w0, #0x1
  42a720:	add	x4, x21, x1
  42a724:	str	w2, [x28, #128]
  42a728:	mov	w2, #0x40                  	// #64
  42a72c:	add	x5, x1, #0x20
  42a730:	add	x5, x21, x5
  42a734:	mov	x6, #0xffffffffffffffff    	// #-1
  42a738:	str	xzr, [x4, #24]
  42a73c:	smaddl	x0, w0, w2, x21
  42a740:	stur	q0, [x4, #8]
  42a744:	adds	x0, x0, #0x8
  42a748:	ldp	x2, x3, [x19]
  42a74c:	stp	x2, x3, [x4, #48]
  42a750:	str	x0, [sp, #112]
  42a754:	ldrb	w0, [x5, #26]
  42a758:	and	w0, w0, #0xfffffff3
  42a75c:	strb	w0, [x5, #26]
  42a760:	str	x6, [x4, #64]
  42a764:	str	q0, [x4, #32]
  42a768:	b.eq	42a8a4 <_obstack_memory_used@@Base+0xbdb4>  // b.none
  42a76c:	ldr	w0, [x28, #180]
  42a770:	cmp	w0, #0x1
  42a774:	b.le	4297d0 <_obstack_memory_used@@Base+0xace0>
  42a778:	mov	x20, #0xffffffffffffffff    	// #-1
  42a77c:	ldr	x24, [x26, #72]
  42a780:	b	42a790 <_obstack_memory_used@@Base+0xbca0>
  42a784:	str	x1, [x23]
  42a788:	cbz	x1, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42a78c:	str	x1, [sp, #112]
  42a790:	ldr	x0, [x26, #104]
  42a794:	cmp	x0, x24
  42a798:	b.le	4297d0 <_obstack_memory_used@@Base+0xace0>
  42a79c:	ldr	x0, [x26, #48]
  42a7a0:	cmp	x0, x24
  42a7a4:	b.eq	4297d0 <_obstack_memory_used@@Base+0xace0>  // b.none
  42a7a8:	ldr	x0, [x26, #16]
  42a7ac:	ldr	w0, [x0, x24, lsl #2]
  42a7b0:	cmn	w0, #0x1
  42a7b4:	b.ne	4297d0 <_obstack_memory_used@@Base+0xace0>  // b.any
  42a7b8:	mov	x2, x22
  42a7bc:	mov	x1, x26
  42a7c0:	mov	x0, x19
  42a7c4:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  42a7c8:	ldr	x2, [x26, #72]
  42a7cc:	movi	v0.4s, #0x0
  42a7d0:	ldr	w1, [x28, #128]
  42a7d4:	add	x24, x2, w0, sxtw
  42a7d8:	str	x24, [x26, #72]
  42a7dc:	cmp	w1, #0xf
  42a7e0:	b.eq	42b948 <_obstack_memory_used@@Base+0xce58>  // b.none
  42a7e4:	mov	x0, #0x8                   	// #8
  42a7e8:	mov	w23, #0x40                  	// #64
  42a7ec:	add	w2, w1, #0x1
  42a7f0:	smaddl	x23, w1, w23, x0
  42a7f4:	ldr	x0, [x28, #112]
  42a7f8:	sbfiz	x1, x1, #6, #32
  42a7fc:	add	x4, x0, x1
  42a800:	str	w2, [x28, #128]
  42a804:	add	x5, x1, #0x20
  42a808:	add	x23, x0, x23
  42a80c:	add	x5, x0, x5
  42a810:	str	xzr, [x4, #24]
  42a814:	stur	q0, [x4, #8]
  42a818:	ldp	x2, x3, [x19]
  42a81c:	stp	x2, x3, [x4, #48]
  42a820:	ldrb	w0, [x5, #26]
  42a824:	and	w0, w0, #0xfffffff3
  42a828:	strb	w0, [x5, #26]
  42a82c:	str	x20, [x4, #64]
  42a830:	str	q0, [x4, #32]
  42a834:	ldr	w0, [x28, #128]
  42a838:	mov	x25, #0x0                   	// #0
  42a83c:	cmp	w0, #0xf
  42a840:	b.eq	42b974 <_obstack_memory_used@@Base+0xce84>  // b.none
  42a844:	mov	w4, #0x40                  	// #64
  42a848:	mov	x2, #0x8                   	// #8
  42a84c:	ldr	x1, [x28, #112]
  42a850:	smaddl	x4, w0, w4, x2
  42a854:	add	w6, w0, #0x1
  42a858:	sbfiz	x0, x0, #6, #32
  42a85c:	mov	x5, #0x10                  	// #16
  42a860:	add	x2, x1, x0
  42a864:	add	x3, x0, #0x20
  42a868:	add	x3, x1, x3
  42a86c:	bfxil	x25, x5, #0, #8
  42a870:	str	w6, [x28, #128]
  42a874:	add	x1, x1, x4
  42a878:	ldr	x5, [sp, #112]
  42a87c:	stp	xzr, x5, [x2, #8]
  42a880:	str	x23, [x2, #24]
  42a884:	stp	xzr, x25, [x2, #48]
  42a888:	ldrb	w4, [x3, #26]
  42a88c:	and	w4, w4, #0xfffffff3
  42a890:	strb	w4, [x3, #26]
  42a894:	str	x20, [x2, #64]
  42a898:	str	q0, [x2, #32]
  42a89c:	str	x1, [x5]
  42a8a0:	cbnz	x23, 42a784 <_obstack_memory_used@@Base+0xbc94>
  42a8a4:	ldp	x23, x24, [sp, #48]
  42a8a8:	b	429e88 <_obstack_memory_used@@Base+0xb398>
  42a8ac:	ldr	w0, [x28, #128]
  42a8b0:	cmp	w0, #0xf
  42a8b4:	b.eq	42b268 <_obstack_memory_used@@Base+0xc778>  // b.none
  42a8b8:	ldr	x21, [x28, #112]
  42a8bc:	sbfiz	x1, x0, #6, #32
  42a8c0:	movi	v0.4s, #0x0
  42a8c4:	add	w2, w0, #0x1
  42a8c8:	add	x4, x21, x1
  42a8cc:	str	w2, [x28, #128]
  42a8d0:	mov	w2, #0x40                  	// #64
  42a8d4:	add	x5, x1, #0x20
  42a8d8:	add	x5, x21, x5
  42a8dc:	mov	x6, #0xffffffffffffffff    	// #-1
  42a8e0:	str	xzr, [x4, #24]
  42a8e4:	smaddl	x0, w0, w2, x21
  42a8e8:	stur	q0, [x4, #8]
  42a8ec:	adds	x0, x0, #0x8
  42a8f0:	ldp	x2, x3, [x19]
  42a8f4:	stp	x2, x3, [x4, #48]
  42a8f8:	str	x0, [sp, #112]
  42a8fc:	ldrb	w0, [x5, #26]
  42a900:	and	w0, w0, #0xfffffff3
  42a904:	strb	w0, [x5, #26]
  42a908:	str	x6, [x4, #64]
  42a90c:	str	q0, [x4, #32]
  42a910:	b.eq	429e88 <_obstack_memory_used@@Base+0xb398>  // b.none
  42a914:	stp	x23, x24, [sp, #48]
  42a918:	ldr	w0, [x28, #180]
  42a91c:	cmp	w0, #0x1
  42a920:	b.le	4297d0 <_obstack_memory_used@@Base+0xace0>
  42a924:	ldrb	w0, [x28, #176]
  42a928:	orr	w0, w0, #0x2
  42a92c:	strb	w0, [x28, #176]
  42a930:	b	4297d0 <_obstack_memory_used@@Base+0xace0>
  42a934:	mov	x1, #0x1                   	// #1
  42a938:	mov	x0, #0x20                  	// #32
  42a93c:	stp	x23, x24, [sp, #48]
  42a940:	str	xzr, [sp, #168]
  42a944:	bl	402520 <calloc@plt>
  42a948:	mov	x1, #0x1                   	// #1
  42a94c:	mov	x20, x0
  42a950:	mov	x0, #0x50                  	// #80
  42a954:	bl	402520 <calloc@plt>
  42a958:	cmp	x20, #0x0
  42a95c:	mov	x23, x0
  42a960:	cset	w0, eq  // eq = none
  42a964:	cmp	x23, #0x0
  42a968:	csinc	w0, w0, wzr, ne  // ne = any
  42a96c:	cbnz	w0, 42b240 <_obstack_memory_used@@Base+0xc750>
  42a970:	mov	x1, x26
  42a974:	mov	x2, x22
  42a978:	mov	x0, x19
  42a97c:	bl	41eb18 <_obstack_memory_used@@Base+0x28>
  42a980:	ldrb	w1, [x19, #8]
  42a984:	mov	w27, w0
  42a988:	cmp	w1, #0x2
  42a98c:	b.eq	42b1e4 <_obstack_memory_used@@Base+0xc6f4>  // b.none
  42a990:	str	wzr, [sp, #120]
  42a994:	cmp	w1, #0x19
  42a998:	b.eq	42ae74 <_obstack_memory_used@@Base+0xc384>  // b.none
  42a99c:	cmp	w1, #0x15
  42a9a0:	b.eq	42ae68 <_obstack_memory_used@@Base+0xc378>  // b.none
  42a9a4:	add	x24, sp, #0xe0
  42a9a8:	mov	w5, #0x1                   	// #1
  42a9ac:	mov	w21, #0x3                   	// #3
  42a9b0:	str	xzr, [sp, #96]
  42a9b4:	str	xzr, [sp, #112]
  42a9b8:	mov	w3, w27
  42a9bc:	mov	x4, x22
  42a9c0:	mov	x2, x19
  42a9c4:	mov	x1, x26
  42a9c8:	add	x0, sp, #0xb0
  42a9cc:	str	w21, [sp, #176]
  42a9d0:	str	x24, [sp, #184]
  42a9d4:	bl	422428 <_obstack_memory_used@@Base+0x3938>
  42a9d8:	cbnz	w0, 42af78 <_obstack_memory_used@@Base+0xc488>
  42a9dc:	mov	x1, x26
  42a9e0:	mov	x2, x22
  42a9e4:	mov	x0, x19
  42a9e8:	bl	41eb18 <_obstack_memory_used@@Base+0x28>
  42a9ec:	ldr	w1, [sp, #176]
  42a9f0:	mov	w27, w0
  42a9f4:	sub	w0, w1, #0x2
  42a9f8:	tst	w0, #0xfffffffd
  42a9fc:	b.eq	42aa14 <_obstack_memory_used@@Base+0xbf24>  // b.none
  42aa00:	ldrb	w0, [x19, #8]
  42aa04:	cmp	w0, #0x2
  42aa08:	b.eq	42af1c <_obstack_memory_used@@Base+0xc42c>  // b.none
  42aa0c:	cmp	w0, #0x16
  42aa10:	b.eq	42b00c <_obstack_memory_used@@Base+0xc51c>  // b.none
  42aa14:	cmp	w1, #0x2
  42aa18:	b.eq	42acc8 <_obstack_memory_used@@Base+0xc1d8>  // b.none
  42aa1c:	b.hi	42aa64 <_obstack_memory_used@@Base+0xbf74>  // b.pmore
  42aa20:	cbz	w1, 42aefc <_obstack_memory_used@@Base+0xc40c>
  42aa24:	ldr	x1, [x23, #40]
  42aa28:	ldr	x2, [sp, #112]
  42aa2c:	ldr	x0, [x23]
  42aa30:	cmp	x1, x2
  42aa34:	b.eq	42aed8 <_obstack_memory_used@@Base+0xc3e8>  // b.none
  42aa38:	add	x2, x1, #0x1
  42aa3c:	str	x2, [x23, #40]
  42aa40:	ldr	w2, [sp, #184]
  42aa44:	str	w2, [x0, x1, lsl #2]
  42aa48:	ldrb	w0, [x19, #8]
  42aa4c:	cmp	w0, #0x2
  42aa50:	b.eq	42af1c <_obstack_memory_used@@Base+0xc42c>  // b.none
  42aa54:	cmp	w0, #0x15
  42aa58:	b.eq	42b3d4 <_obstack_memory_used@@Base+0xc8e4>  // b.none
  42aa5c:	mov	w5, #0x0                   	// #0
  42aa60:	b	42a9b8 <_obstack_memory_used@@Base+0xbec8>
  42aa64:	cmp	w1, #0x3
  42aa68:	b.eq	42acc8 <_obstack_memory_used@@Base+0xc1d8>  // b.none
  42aa6c:	ldr	x0, [x26, #120]
  42aa70:	mov	x1, x20
  42aa74:	ldr	x5, [sp, #184]
  42aa78:	mov	x6, x22
  42aa7c:	add	x4, sp, #0xa8
  42aa80:	add	x3, x23, #0x48
  42aa84:	add	x2, x23, #0x18
  42aa88:	bl	4211b0 <_obstack_memory_used@@Base+0x26c0>
  42aa8c:	ldr	x1, [sp, #128]
  42aa90:	str	w0, [x1]
  42aa94:	cbz	w0, 42aa48 <_obstack_memory_used@@Base+0xbf58>
  42aa98:	mov	x0, x20
  42aa9c:	bl	4026b0 <free@plt>
  42aaa0:	ldr	x0, [x23]
  42aaa4:	bl	4026b0 <free@plt>
  42aaa8:	ldr	x0, [x23, #8]
  42aaac:	bl	4026b0 <free@plt>
  42aab0:	ldr	x0, [x23, #16]
  42aab4:	bl	4026b0 <free@plt>
  42aab8:	ldr	x0, [x23, #24]
  42aabc:	bl	4026b0 <free@plt>
  42aac0:	mov	x0, x23
  42aac4:	bl	4026b0 <free@plt>
  42aac8:	ldr	x0, [sp, #128]
  42aacc:	ldr	w0, [x0]
  42aad0:	cbnz	w0, 42a018 <_obstack_memory_used@@Base+0xb528>
  42aad4:	str	xzr, [sp, #112]
  42aad8:	b	4297d0 <_obstack_memory_used@@Base+0xace0>
  42aadc:	stp	x23, x24, [sp, #48]
  42aae0:	mov	w0, #0x30f                 	// #783
  42aae4:	ldr	w23, [x19]
  42aae8:	tst	w23, w0
  42aaec:	b.eq	42ab20 <_obstack_memory_used@@Base+0xc030>  // b.none
  42aaf0:	ldrb	w0, [x28, #176]
  42aaf4:	tbnz	w0, #4, 42ab20 <_obstack_memory_used@@Base+0xc030>
  42aaf8:	orr	w0, w0, #0x10
  42aafc:	strb	w0, [x28, #176]
  42ab00:	mov	w1, w0
  42ab04:	tbnz	w0, #3, 42b6ec <_obstack_memory_used@@Base+0xcbfc>
  42ab08:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x13510>
  42ab0c:	ldr	q0, [x0, #2192]
  42ab10:	stur	q0, [x28, #184]
  42ab14:	tbz	w1, #2, 42b67c <_obstack_memory_used@@Base+0xcb8c>
  42ab18:	stp	xzr, xzr, [x28, #200]
  42ab1c:	ldr	w23, [x19]
  42ab20:	sub	w0, w23, #0x100
  42ab24:	tst	w0, #0xfffffeff
  42ab28:	b.ne	42ad94 <_obstack_memory_used@@Base+0xc2a4>  // b.any
  42ab2c:	cmp	w23, #0x100
  42ab30:	b.eq	42af84 <_obstack_memory_used@@Base+0xc494>  // b.none
  42ab34:	mov	w0, #0x5                   	// #5
  42ab38:	str	w0, [x19]
  42ab3c:	ldr	w0, [x28, #128]
  42ab40:	cmp	w0, #0xf
  42ab44:	b.eq	42b3a4 <_obstack_memory_used@@Base+0xc8b4>  // b.none
  42ab48:	mov	x23, #0x8                   	// #8
  42ab4c:	mov	w2, #0x40                  	// #64
  42ab50:	add	w3, w0, #0x1
  42ab54:	smaddl	x2, w0, w2, x23
  42ab58:	ldr	x23, [x28, #112]
  42ab5c:	sbfiz	x0, x0, #6, #32
  42ab60:	add	x1, x23, x0
  42ab64:	str	w3, [x28, #128]
  42ab68:	movi	v0.4s, #0x0
  42ab6c:	add	x4, x0, #0x20
  42ab70:	add	x4, x23, x4
  42ab74:	add	x23, x23, x2
  42ab78:	str	xzr, [x1, #24]
  42ab7c:	mov	x5, #0xffffffffffffffff    	// #-1
  42ab80:	stur	q0, [x1, #8]
  42ab84:	ldp	x2, x3, [x19]
  42ab88:	stp	x2, x3, [x1, #48]
  42ab8c:	ldrb	w2, [x4, #26]
  42ab90:	and	w2, w2, #0xfffffff3
  42ab94:	strb	w2, [x4, #26]
  42ab98:	str	x5, [x1, #64]
  42ab9c:	str	q0, [x1, #32]
  42aba0:	mov	w0, #0xa                   	// #10
  42aba4:	str	w0, [x19]
  42aba8:	ldr	w0, [x28, #128]
  42abac:	cmp	w0, #0xf
  42abb0:	b.eq	42b378 <_obstack_memory_used@@Base+0xc888>  // b.none
  42abb4:	mov	x1, #0x8                   	// #8
  42abb8:	mov	w20, #0x40                  	// #64
  42abbc:	add	w2, w0, #0x1
  42abc0:	smaddl	x20, w0, w20, x1
  42abc4:	ldr	x1, [x28, #112]
  42abc8:	sbfiz	x0, x0, #6, #32
  42abcc:	add	x4, x1, x0
  42abd0:	str	w2, [x28, #128]
  42abd4:	movi	v0.4s, #0x0
  42abd8:	add	x5, x0, #0x20
  42abdc:	add	x5, x1, x5
  42abe0:	add	x20, x1, x20
  42abe4:	str	xzr, [x4, #24]
  42abe8:	mov	x6, #0xffffffffffffffff    	// #-1
  42abec:	stur	q0, [x4, #8]
  42abf0:	ldp	x2, x3, [x19]
  42abf4:	stp	x2, x3, [x4, #48]
  42abf8:	ldrb	w1, [x5, #26]
  42abfc:	and	w1, w1, #0xfffffff3
  42ac00:	strb	w1, [x5, #26]
  42ac04:	str	x6, [x4, #64]
  42ac08:	str	q0, [x4, #32]
  42ac0c:	ldr	w0, [x28, #128]
  42ac10:	mov	x24, #0x0                   	// #0
  42ac14:	cmp	w0, #0xf
  42ac18:	b.eq	42b34c <_obstack_memory_used@@Base+0xc85c>  // b.none
  42ac1c:	mov	x21, #0x8                   	// #8
  42ac20:	mov	w3, #0x40                  	// #64
  42ac24:	add	w5, w0, #0x1
  42ac28:	smaddl	x3, w0, w3, x21
  42ac2c:	ldr	x21, [x28, #112]
  42ac30:	sbfiz	x0, x0, #6, #32
  42ac34:	add	x1, x21, x0
  42ac38:	add	x2, x0, #0x20
  42ac3c:	add	x2, x21, x2
  42ac40:	mov	x4, #0xa                   	// #10
  42ac44:	str	w5, [x28, #128]
  42ac48:	bfxil	x24, x4, #0, #8
  42ac4c:	stp	xzr, x23, [x1, #8]
  42ac50:	add	x5, x21, x3
  42ac54:	mov	x4, #0xffffffffffffffff    	// #-1
  42ac58:	str	x20, [x1, #24]
  42ac5c:	stp	xzr, x24, [x1, #48]
  42ac60:	ldrb	w3, [x2, #26]
  42ac64:	str	x5, [sp, #112]
  42ac68:	and	w3, w3, #0xfffffff3
  42ac6c:	strb	w3, [x2, #26]
  42ac70:	stp	xzr, xzr, [x1, #32]
  42ac74:	str	x4, [x1, #64]
  42ac78:	cbz	x23, 42affc <_obstack_memory_used@@Base+0xc50c>
  42ac7c:	str	x5, [x23]
  42ac80:	cbz	x20, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42ac84:	str	x5, [x20]
  42ac88:	cbz	x5, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42ac8c:	mov	x1, x26
  42ac90:	mov	x2, x22
  42ac94:	mov	x0, x19
  42ac98:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  42ac9c:	ldr	x1, [x26, #72]
  42aca0:	ldp	x23, x24, [sp, #48]
  42aca4:	add	x0, x1, w0, sxtw
  42aca8:	str	x0, [x26, #72]
  42acac:	b	429b84 <_obstack_memory_used@@Base+0xb094>
  42acb0:	ldr	x0, [sp, #152]
  42acb4:	cbnz	x0, 42a59c <_obstack_memory_used@@Base+0xbaac>
  42acb8:	ldr	x1, [sp, #128]
  42acbc:	mov	w0, #0x9                   	// #9
  42acc0:	str	w0, [x1]
  42acc4:	b	42a00c <_obstack_memory_used@@Base+0xb51c>
  42acc8:	ldr	x25, [sp, #184]
  42accc:	mov	x0, x25
  42acd0:	bl	402300 <strlen@plt>
  42acd4:	cmp	x0, #0x1
  42acd8:	b.ne	42b2e4 <_obstack_memory_used@@Base+0xc7f4>  // b.any
  42acdc:	ldr	x2, [sp, #128]
  42ace0:	ldrb	w1, [x25]
  42ace4:	str	wzr, [x2]
  42ace8:	ubfx	x2, x1, #6, #2
  42acec:	lsl	x0, x0, x1
  42acf0:	ldr	x1, [x20, x2, lsl #3]
  42acf4:	orr	x0, x1, x0
  42acf8:	str	x0, [x20, x2, lsl #3]
  42acfc:	b	42aa48 <_obstack_memory_used@@Base+0xbf58>
  42ad00:	tbnz	w22, #17, 429e18 <_obstack_memory_used@@Base+0xb328>
  42ad04:	ldr	x1, [sp, #128]
  42ad08:	mov	w0, #0x10                  	// #16
  42ad0c:	str	xzr, [sp, #112]
  42ad10:	str	w0, [x1]
  42ad14:	b	429b84 <_obstack_memory_used@@Base+0xb094>
  42ad18:	mov	x1, x20
  42ad1c:	mov	x3, x22
  42ad20:	ldr	x4, [sp, #112]
  42ad24:	mov	x2, x19
  42ad28:	ldr	x20, [sp, #128]
  42ad2c:	mov	x0, x26
  42ad30:	add	x4, x4, #0x1
  42ad34:	mov	x5, x20
  42ad38:	bl	42bc98 <_obstack_memory_used@@Base+0xd1a8>
  42ad3c:	ldr	w1, [x20]
  42ad40:	mov	x23, x0
  42ad44:	cbnz	w1, 42a018 <_obstack_memory_used@@Base+0xb528>
  42ad48:	ldrb	w0, [x19, #8]
  42ad4c:	cmp	w0, #0x9
  42ad50:	b.eq	42a66c <_obstack_memory_used@@Base+0xbb7c>  // b.none
  42ad54:	cbz	x23, 42ad60 <_obstack_memory_used@@Base+0xc270>
  42ad58:	mov	x0, x23
  42ad5c:	bl	422c58 <_obstack_memory_used@@Base+0x4168>
  42ad60:	ldr	x1, [sp, #128]
  42ad64:	mov	w0, #0x8                   	// #8
  42ad68:	str	xzr, [sp, #112]
  42ad6c:	ldp	x23, x24, [sp, #48]
  42ad70:	str	w0, [x1]
  42ad74:	b	42a020 <_obstack_memory_used@@Base+0xb530>
  42ad78:	mov	w0, #0x1                   	// #1
  42ad7c:	ldr	x1, [x28, #168]
  42ad80:	lsl	w0, w0, w24
  42ad84:	sxtw	x0, w0
  42ad88:	orr	x0, x1, x0
  42ad8c:	str	x0, [x28, #168]
  42ad90:	b	42a674 <_obstack_memory_used@@Base+0xbb84>
  42ad94:	ldr	w0, [x28, #128]
  42ad98:	cmp	w0, #0xf
  42ad9c:	b.eq	42b5ac <_obstack_memory_used@@Base+0xcabc>  // b.none
  42ada0:	ldr	x21, [x28, #112]
  42ada4:	sbfiz	x1, x0, #6, #32
  42ada8:	movi	v0.4s, #0x0
  42adac:	add	w3, w0, #0x1
  42adb0:	add	x2, x21, x1
  42adb4:	str	w3, [x28, #128]
  42adb8:	mov	w4, #0x40                  	// #64
  42adbc:	add	x3, x1, #0x20
  42adc0:	add	x3, x21, x3
  42adc4:	mov	x6, #0xffffffffffffffff    	// #-1
  42adc8:	str	xzr, [x2, #24]
  42adcc:	smaddl	x0, w0, w4, x21
  42add0:	stur	q0, [x2, #8]
  42add4:	adds	x0, x0, #0x8
  42add8:	ldp	x4, x5, [x19]
  42addc:	stp	x4, x5, [x2, #48]
  42ade0:	str	x0, [sp, #112]
  42ade4:	ldrb	w0, [x3, #26]
  42ade8:	and	w0, w0, #0xfffffff3
  42adec:	strb	w0, [x3, #26]
  42adf0:	str	x6, [x2, #64]
  42adf4:	str	q0, [x2, #32]
  42adf8:	b.ne	42ac8c <_obstack_memory_used@@Base+0xc19c>  // b.any
  42adfc:	ldp	x23, x24, [sp, #48]
  42ae00:	b	429e88 <_obstack_memory_used@@Base+0xb398>
  42ae04:	mov	x0, #0x3c8                 	// #968
  42ae08:	bl	402440 <malloc@plt>
  42ae0c:	cbz	x0, 429e88 <_obstack_memory_used@@Base+0xb398>
  42ae10:	stp	x23, x24, [sp, #48]
  42ae14:	mov	x2, #0xffffffffffffffff    	// #-1
  42ae18:	ldr	x1, [x28, #112]
  42ae1c:	str	x1, [x0]
  42ae20:	mov	w1, #0x1                   	// #1
  42ae24:	str	w1, [x28, #128]
  42ae28:	str	x0, [x28, #112]
  42ae2c:	add	x1, x0, #0x8
  42ae30:	ldp	x4, x5, [x19]
  42ae34:	stp	x4, x5, [x0, #48]
  42ae38:	movi	v0.4s, #0x0
  42ae3c:	str	x1, [sp, #112]
  42ae40:	ldrb	w1, [x0, #58]
  42ae44:	str	xzr, [x0, #24]
  42ae48:	and	w1, w1, #0xfffffff3
  42ae4c:	strb	w1, [x0, #58]
  42ae50:	stur	q0, [x0, #8]
  42ae54:	str	q0, [x0, #32]
  42ae58:	str	x2, [x0, #64]
  42ae5c:	b	4297d0 <_obstack_memory_used@@Base+0xace0>
  42ae60:	sxtw	x20, w0
  42ae64:	b	42a060 <_obstack_memory_used@@Base+0xb570>
  42ae68:	mov	w0, #0x1                   	// #1
  42ae6c:	strb	w0, [x19, #8]
  42ae70:	b	42a9a4 <_obstack_memory_used@@Base+0xbeb4>
  42ae74:	ldrb	w0, [x23, #32]
  42ae78:	orr	w0, w0, #0x1
  42ae7c:	strb	w0, [x23, #32]
  42ae80:	tbz	w22, #8, 42ae90 <_obstack_memory_used@@Base+0xc3a0>
  42ae84:	ldr	x0, [x20]
  42ae88:	orr	x0, x0, #0x400
  42ae8c:	str	x0, [x20]
  42ae90:	ldr	x3, [x26, #72]
  42ae94:	mov	x1, x26
  42ae98:	mov	x2, x22
  42ae9c:	mov	x0, x19
  42aea0:	add	x9, x3, w27, sxtw
  42aea4:	str	x9, [x26, #72]
  42aea8:	bl	41eb18 <_obstack_memory_used@@Base+0x28>
  42aeac:	mov	w27, w0
  42aeb0:	ldrb	w1, [x19, #8]
  42aeb4:	cmp	w1, #0x2
  42aeb8:	b.eq	42b1e4 <_obstack_memory_used@@Base+0xc6f4>  // b.none
  42aebc:	mov	w0, #0x1                   	// #1
  42aec0:	str	w0, [sp, #120]
  42aec4:	b	42a99c <_obstack_memory_used@@Base+0xbeac>
  42aec8:	mov	w0, #0x6                   	// #6
  42aecc:	str	w0, [x5]
  42aed0:	str	xzr, [sp, #112]
  42aed4:	b	429b84 <_obstack_memory_used@@Base+0xb094>
  42aed8:	lsl	x1, x2, #1
  42aedc:	add	x1, x1, #0x1
  42aee0:	str	x1, [sp, #112]
  42aee4:	lsl	x1, x1, #2
  42aee8:	bl	402550 <realloc@plt>
  42aeec:	cbz	x0, 42af74 <_obstack_memory_used@@Base+0xc484>
  42aef0:	str	x0, [x23]
  42aef4:	ldr	x1, [x23, #40]
  42aef8:	b	42aa38 <_obstack_memory_used@@Base+0xbf48>
  42aefc:	ldrb	w1, [sp, #184]
  42af00:	mov	x0, #0x1                   	// #1
  42af04:	ubfx	x2, x1, #6, #2
  42af08:	lsl	x1, x0, x1
  42af0c:	ldr	x0, [x20, x2, lsl #3]
  42af10:	orr	x0, x0, x1
  42af14:	str	x0, [x20, x2, lsl #3]
  42af18:	b	42aa48 <_obstack_memory_used@@Base+0xbf58>
  42af1c:	ldr	x1, [sp, #128]
  42af20:	mov	w0, #0x7                   	// #7
  42af24:	str	w0, [x1]
  42af28:	b	42aa98 <_obstack_memory_used@@Base+0xbfa8>
  42af2c:	mov	x2, x22
  42af30:	mov	x1, x26
  42af34:	mov	x0, x19
  42af38:	str	x4, [sp, #112]
  42af3c:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  42af40:	mov	w6, w0
  42af44:	ldr	x7, [x26, #72]
  42af48:	mov	x3, x22
  42af4c:	ldr	x4, [sp, #112]
  42af50:	mov	x2, x19
  42af54:	ldr	x5, [sp, #128]
  42af58:	add	x6, x7, w6, sxtw
  42af5c:	str	x6, [x26, #72]
  42af60:	mov	x1, x20
  42af64:	mov	x0, x26
  42af68:	bl	429738 <_obstack_memory_used@@Base+0xac48>
  42af6c:	str	x0, [sp, #112]
  42af70:	b	429b84 <_obstack_memory_used@@Base+0xb094>
  42af74:	mov	w0, #0xc                   	// #12
  42af78:	ldr	x1, [sp, #128]
  42af7c:	str	w0, [x1]
  42af80:	b	42aa98 <_obstack_memory_used@@Base+0xbfa8>
  42af84:	mov	w0, #0x6                   	// #6
  42af88:	str	w0, [x19]
  42af8c:	ldr	w0, [x28, #128]
  42af90:	cmp	w0, #0xf
  42af94:	b.eq	42b638 <_obstack_memory_used@@Base+0xcb48>  // b.none
  42af98:	mov	x23, #0x8                   	// #8
  42af9c:	mov	w2, #0x40                  	// #64
  42afa0:	add	w3, w0, #0x1
  42afa4:	smaddl	x2, w0, w2, x23
  42afa8:	ldr	x23, [x28, #112]
  42afac:	sbfiz	x0, x0, #6, #32
  42afb0:	add	x1, x23, x0
  42afb4:	str	w3, [x28, #128]
  42afb8:	movi	v0.4s, #0x0
  42afbc:	add	x4, x0, #0x20
  42afc0:	add	x4, x23, x4
  42afc4:	add	x23, x23, x2
  42afc8:	str	xzr, [x1, #24]
  42afcc:	mov	x5, #0xffffffffffffffff    	// #-1
  42afd0:	stur	q0, [x1, #8]
  42afd4:	ldp	x2, x3, [x19]
  42afd8:	stp	x2, x3, [x1, #48]
  42afdc:	ldrb	w2, [x4, #26]
  42afe0:	and	w2, w2, #0xfffffff3
  42afe4:	strb	w2, [x4, #26]
  42afe8:	str	x5, [x1, #64]
  42afec:	str	q0, [x1, #32]
  42aff0:	mov	w0, #0x9                   	// #9
  42aff4:	str	w0, [x19]
  42aff8:	b	42aba8 <_obstack_memory_used@@Base+0xc0b8>
  42affc:	cbz	x20, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42b000:	ldp	x23, x24, [sp, #48]
  42b004:	str	x5, [x20]
  42b008:	b	429e88 <_obstack_memory_used@@Base+0xb398>
  42b00c:	ldr	x3, [x26, #72]
  42b010:	mov	x1, x26
  42b014:	mov	x2, x22
  42b018:	add	x0, sp, #0xd0
  42b01c:	add	x3, x3, w27, sxtw
  42b020:	str	x3, [x26, #72]
  42b024:	bl	41eb18 <_obstack_memory_used@@Base+0x28>
  42b028:	mov	w3, w0
  42b02c:	ldrb	w1, [sp, #216]
  42b030:	cmp	w1, #0x2
  42b034:	b.eq	42af1c <_obstack_memory_used@@Base+0xc42c>  // b.none
  42b038:	cmp	w1, #0x15
  42b03c:	b.eq	42b1f4 <_obstack_memory_used@@Base+0xc704>  // b.none
  42b040:	add	x6, sp, #0x100
  42b044:	mov	x4, x22
  42b048:	add	x2, sp, #0xd0
  42b04c:	mov	x1, x26
  42b050:	add	x0, sp, #0xc0
  42b054:	mov	w5, #0x1                   	// #1
  42b058:	str	w21, [sp, #192]
  42b05c:	str	x6, [sp, #200]
  42b060:	bl	422428 <_obstack_memory_used@@Base+0x3938>
  42b064:	cbnz	w0, 42af78 <_obstack_memory_used@@Base+0xc488>
  42b068:	mov	x2, x22
  42b06c:	mov	x1, x26
  42b070:	mov	x0, x19
  42b074:	bl	41eb18 <_obstack_memory_used@@Base+0x28>
  42b078:	ldr	w1, [x28, #180]
  42b07c:	mov	w27, w0
  42b080:	ldr	w2, [sp, #176]
  42b084:	cmp	w1, #0x2
  42b088:	sub	w0, w2, #0x2
  42b08c:	csel	x25, x23, xzr, ge  // ge = tcont
  42b090:	tst	w0, #0xfffffffd
  42b094:	b.eq	42b628 <_obstack_memory_used@@Base+0xcb38>  // b.none
  42b098:	ldr	w1, [sp, #192]
  42b09c:	sub	w0, w1, #0x2
  42b0a0:	tst	w0, #0xfffffffd
  42b0a4:	b.eq	42b628 <_obstack_memory_used@@Base+0xcb38>  // b.none
  42b0a8:	cmp	w2, #0x3
  42b0ac:	cset	w0, eq  // eq = none
  42b0b0:	str	w0, [sp, #136]
  42b0b4:	b.eq	42b890 <_obstack_memory_used@@Base+0xcda0>  // b.none
  42b0b8:	cmp	w1, #0x3
  42b0bc:	b.eq	42b860 <_obstack_memory_used@@Base+0xcd70>  // b.none
  42b0c0:	cbnz	w2, 42b1b0 <_obstack_memory_used@@Base+0xc6c0>
  42b0c4:	ldrb	w3, [sp, #184]
  42b0c8:	ldr	w0, [sp, #136]
  42b0cc:	cmp	w2, #0x0
  42b0d0:	csinc	w0, w0, wzr, ne  // ne = any
  42b0d4:	cbz	w1, 42b668 <_obstack_memory_used@@Base+0xcb78>
  42b0d8:	cmp	w1, #0x3
  42b0dc:	b.ne	42b1bc <_obstack_memory_used@@Base+0xc6cc>  // b.any
  42b0e0:	ldr	x2, [sp, #200]
  42b0e4:	ldrb	w4, [x2]
  42b0e8:	cbz	w0, 42b604 <_obstack_memory_used@@Base+0xcb14>
  42b0ec:	cbz	x25, 42b610 <_obstack_memory_used@@Base+0xcb20>
  42b0f0:	mov	w0, w3
  42b0f4:	str	w4, [sp, #136]
  42b0f8:	bl	4025e0 <btowc@plt>
  42b0fc:	mov	w3, w0
  42b100:	ldr	w1, [sp, #192]
  42b104:	ldr	w4, [sp, #136]
  42b108:	cmp	w1, #0x0
  42b10c:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  42b110:	b.ne	42b1c4 <_obstack_memory_used@@Base+0xc6d4>  // b.any
  42b114:	mov	w0, w4
  42b118:	str	w3, [sp, #136]
  42b11c:	bl	4025e0 <btowc@plt>
  42b120:	mov	w4, w0
  42b124:	ldr	w3, [sp, #136]
  42b128:	cmn	w3, #0x1
  42b12c:	ccmn	w4, #0x1, #0x4, ne  // ne = any
  42b130:	b.eq	42b2e4 <_obstack_memory_used@@Base+0xc7f4>  // b.none
  42b134:	tst	x22, #0x10000
  42b138:	ccmp	w4, w3, #0x2, ne  // ne = any
  42b13c:	b.cc	42b628 <_obstack_memory_used@@Base+0xcb38>  // b.lo, b.ul, b.last
  42b140:	cbz	x25, 42b16c <_obstack_memory_used@@Base+0xc67c>
  42b144:	ldr	x0, [x25, #64]
  42b148:	ldr	x1, [sp, #96]
  42b14c:	ldr	x2, [x25, #8]
  42b150:	cmp	x0, x1
  42b154:	b.eq	42b9fc <_obstack_memory_used@@Base+0xcf0c>  // b.none
  42b158:	ldr	x1, [x25, #16]
  42b15c:	str	w3, [x2, x0, lsl #2]
  42b160:	add	x2, x0, #0x1
  42b164:	str	x2, [x25, #64]
  42b168:	str	w4, [x1, x0, lsl #2]
  42b16c:	mov	x1, #0x0                   	// #0
  42b170:	mov	x6, #0x1                   	// #1
  42b174:	nop
  42b178:	cmp	w1, w3
  42b17c:	asr	x0, x1, #6
  42b180:	ccmp	w1, w4, #0x2, cs  // cs = hs, nlast
  42b184:	lsl	x5, x6, x1
  42b188:	add	x1, x1, #0x1
  42b18c:	b.hi	42b19c <_obstack_memory_used@@Base+0xc6ac>  // b.pmore
  42b190:	ldr	x2, [x20, x0, lsl #3]
  42b194:	orr	x2, x2, x5
  42b198:	str	x2, [x20, x0, lsl #3]
  42b19c:	cmp	x1, #0x100
  42b1a0:	b.ne	42b178 <_obstack_memory_used@@Base+0xc688>  // b.any
  42b1a4:	ldr	x0, [sp, #128]
  42b1a8:	str	wzr, [x0]
  42b1ac:	b	42aa48 <_obstack_memory_used@@Base+0xbf58>
  42b1b0:	ldrb	w0, [sp, #136]
  42b1b4:	mov	w3, #0x0                   	// #0
  42b1b8:	cbz	w1, 42b668 <_obstack_memory_used@@Base+0xcb78>
  42b1bc:	cbnz	w0, 42b848 <_obstack_memory_used@@Base+0xcd58>
  42b1c0:	ldr	w3, [sp, #184]
  42b1c4:	ldr	w4, [sp, #200]
  42b1c8:	b	42b128 <_obstack_memory_used@@Base+0xc638>
  42b1cc:	cmp	w1, #0x2
  42b1d0:	b.ne	42a000 <_obstack_memory_used@@Base+0xb510>  // b.any
  42b1d4:	b	42acb8 <_obstack_memory_used@@Base+0xc1c8>
  42b1d8:	mov	x24, #0x0                   	// #0
  42b1dc:	str	xzr, [x6]
  42b1e0:	b	429a60 <_obstack_memory_used@@Base+0xaf70>
  42b1e4:	ldr	x1, [sp, #128]
  42b1e8:	mov	w0, #0x2                   	// #2
  42b1ec:	str	w0, [x1]
  42b1f0:	b	42aa98 <_obstack_memory_used@@Base+0xbfa8>
  42b1f4:	ldr	x3, [x26, #72]
  42b1f8:	neg	w0, w27
  42b1fc:	mov	w2, #0x1                   	// #1
  42b200:	ldr	w1, [sp, #176]
  42b204:	add	x0, x3, w0, sxtw
  42b208:	str	x0, [x26, #72]
  42b20c:	strb	w2, [x19, #8]
  42b210:	b	42aa14 <_obstack_memory_used@@Base+0xbf24>
  42b214:	mov	x0, #0x3c8                 	// #968
  42b218:	bl	402440 <malloc@plt>
  42b21c:	mov	x1, x0
  42b220:	cbz	x0, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42b224:	ldr	x0, [x28, #112]
  42b228:	str	x0, [x1]
  42b22c:	mov	x21, #0x8                   	// #8
  42b230:	mov	w5, #0x1                   	// #1
  42b234:	mov	w0, #0x0                   	// #0
  42b238:	str	x1, [x28, #112]
  42b23c:	b	42a698 <_obstack_memory_used@@Base+0xbba8>
  42b240:	mov	x0, x20
  42b244:	str	xzr, [sp, #112]
  42b248:	bl	4026b0 <free@plt>
  42b24c:	mov	x0, x23
  42b250:	bl	4026b0 <free@plt>
  42b254:	ldr	x1, [sp, #128]
  42b258:	mov	w0, #0xc                   	// #12
  42b25c:	ldp	x23, x24, [sp, #48]
  42b260:	str	w0, [x1]
  42b264:	b	429b84 <_obstack_memory_used@@Base+0xb094>
  42b268:	mov	x0, #0x3c8                 	// #968
  42b26c:	bl	402440 <malloc@plt>
  42b270:	cbz	x0, 429e88 <_obstack_memory_used@@Base+0xb398>
  42b274:	stp	x23, x24, [sp, #48]
  42b278:	ldr	x1, [x28, #112]
  42b27c:	str	x1, [x0]
  42b280:	mov	w1, #0x1                   	// #1
  42b284:	str	w1, [x28, #128]
  42b288:	str	x0, [x28, #112]
  42b28c:	add	x1, x0, #0x8
  42b290:	ldp	x2, x3, [x19]
  42b294:	stp	x2, x3, [x0, #48]
  42b298:	movi	v0.4s, #0x0
  42b29c:	str	x1, [sp, #112]
  42b2a0:	ldrb	w1, [x0, #58]
  42b2a4:	mov	x2, #0xffffffffffffffff    	// #-1
  42b2a8:	str	xzr, [x0, #24]
  42b2ac:	and	w1, w1, #0xfffffff3
  42b2b0:	strb	w1, [x0, #58]
  42b2b4:	stur	q0, [x0, #8]
  42b2b8:	str	q0, [x0, #32]
  42b2bc:	str	x2, [x0, #64]
  42b2c0:	b	42a918 <_obstack_memory_used@@Base+0xbe28>
  42b2c4:	ldr	x0, [sp, #200]
  42b2c8:	str	w2, [sp, #144]
  42b2cc:	str	w1, [sp, #152]
  42b2d0:	bl	402300 <strlen@plt>
  42b2d4:	cmp	x0, #0x1
  42b2d8:	ldr	w2, [sp, #144]
  42b2dc:	ldr	w1, [sp, #152]
  42b2e0:	b.ls	42b8b8 <_obstack_memory_used@@Base+0xcdc8>  // b.plast
  42b2e4:	ldr	x1, [sp, #128]
  42b2e8:	mov	w0, #0x3                   	// #3
  42b2ec:	str	w0, [x1]
  42b2f0:	b	42aa98 <_obstack_memory_used@@Base+0xbfa8>
  42b2f4:	mov	x0, #0x3c8                 	// #968
  42b2f8:	bl	402440 <malloc@plt>
  42b2fc:	cbz	x0, 429e88 <_obstack_memory_used@@Base+0xb398>
  42b300:	stp	x23, x24, [sp, #48]
  42b304:	mov	x2, #0xffffffffffffffff    	// #-1
  42b308:	ldr	x1, [x28, #112]
  42b30c:	str	x1, [x0]
  42b310:	str	w20, [x28, #128]
  42b314:	add	x1, x0, #0x8
  42b318:	movi	v0.4s, #0x0
  42b31c:	str	x0, [x28, #112]
  42b320:	ldp	x4, x5, [x19]
  42b324:	stp	x4, x5, [x0, #48]
  42b328:	str	x1, [sp, #112]
  42b32c:	ldrb	w1, [x0, #58]
  42b330:	stur	q0, [x0, #8]
  42b334:	and	w1, w1, #0xfffffff3
  42b338:	str	xzr, [x0, #24]
  42b33c:	str	q0, [x0, #32]
  42b340:	strb	w1, [x0, #58]
  42b344:	str	x2, [x0, #64]
  42b348:	b	429f80 <_obstack_memory_used@@Base+0xb490>
  42b34c:	mov	x0, #0x3c8                 	// #968
  42b350:	bl	402440 <malloc@plt>
  42b354:	mov	x21, x0
  42b358:	cbz	x0, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42b35c:	ldr	x0, [x28, #112]
  42b360:	str	x0, [x21]
  42b364:	mov	w5, #0x1                   	// #1
  42b368:	mov	x3, #0x8                   	// #8
  42b36c:	mov	w0, #0x0                   	// #0
  42b370:	str	x21, [x28, #112]
  42b374:	b	42ac30 <_obstack_memory_used@@Base+0xc140>
  42b378:	mov	x0, #0x3c8                 	// #968
  42b37c:	bl	402440 <malloc@plt>
  42b380:	mov	x1, x0
  42b384:	cbz	x0, 42ba5c <_obstack_memory_used@@Base+0xcf6c>
  42b388:	ldr	x0, [x28, #112]
  42b38c:	str	x0, [x1]
  42b390:	mov	x20, #0x8                   	// #8
  42b394:	mov	w2, #0x1                   	// #1
  42b398:	mov	w0, #0x0                   	// #0
  42b39c:	str	x1, [x28, #112]
  42b3a0:	b	42abc8 <_obstack_memory_used@@Base+0xc0d8>
  42b3a4:	mov	x0, #0x3c8                 	// #968
  42b3a8:	bl	402440 <malloc@plt>
  42b3ac:	mov	x1, x0
  42b3b0:	mov	x23, x0
  42b3b4:	cbz	x0, 42aba0 <_obstack_memory_used@@Base+0xc0b0>
  42b3b8:	ldr	x0, [x28, #112]
  42b3bc:	str	x0, [x1]
  42b3c0:	mov	x2, #0x8                   	// #8
  42b3c4:	mov	w3, #0x1                   	// #1
  42b3c8:	mov	w0, #0x0                   	// #0
  42b3cc:	str	x1, [x28, #112]
  42b3d0:	b	42ab5c <_obstack_memory_used@@Base+0xc06c>
  42b3d4:	ldr	x0, [x26, #72]
  42b3d8:	add	x9, x0, w27, sxtw
  42b3dc:	ldr	w0, [sp, #120]
  42b3e0:	str	x9, [x26, #72]
  42b3e4:	cbz	w0, 42b3f8 <_obstack_memory_used@@Base+0xc908>
  42b3e8:	ldp	q1, q0, [x20]
  42b3ec:	mvn	v1.16b, v1.16b
  42b3f0:	mvn	v0.16b, v0.16b
  42b3f4:	stp	q1, q0, [x20]
  42b3f8:	ldr	w4, [x28, #180]
  42b3fc:	cmp	w4, #0x1
  42b400:	b.le	42b434 <_obstack_memory_used@@Base+0xc944>
  42b404:	ldr	x0, [x28, #120]
  42b408:	add	x1, x20, #0xf
  42b40c:	sub	x1, x1, x0
  42b410:	cmp	x1, #0x1e
  42b414:	b.ls	42b8e4 <_obstack_memory_used@@Base+0xcdf4>  // b.plast
  42b418:	ldp	q1, q0, [x20]
  42b41c:	ldr	q2, [x0]
  42b420:	and	v1.16b, v1.16b, v2.16b
  42b424:	str	q1, [x20]
  42b428:	ldr	q1, [x0, #16]
  42b42c:	and	v0.16b, v0.16b, v1.16b
  42b430:	str	q0, [x20, #16]
  42b434:	ldr	x0, [x23, #40]
  42b438:	cbnz	x0, 42b504 <_obstack_memory_used@@Base+0xca14>
  42b43c:	ldr	x0, [x23, #48]
  42b440:	cbnz	x0, 42b504 <_obstack_memory_used@@Base+0xca14>
  42b444:	ldr	x0, [x23, #56]
  42b448:	cbnz	x0, 42b504 <_obstack_memory_used@@Base+0xca14>
  42b44c:	ldr	x0, [x23, #64]
  42b450:	cbnz	x0, 42b504 <_obstack_memory_used@@Base+0xca14>
  42b454:	cmp	w4, #0x1
  42b458:	b.le	42b46c <_obstack_memory_used@@Base+0xc97c>
  42b45c:	ldr	x0, [x23, #72]
  42b460:	cbnz	x0, 42b504 <_obstack_memory_used@@Base+0xca14>
  42b464:	ldrb	w0, [x23, #32]
  42b468:	tbnz	w0, #0, 42b504 <_obstack_memory_used@@Base+0xca14>
  42b46c:	ldr	x0, [x23]
  42b470:	bl	4026b0 <free@plt>
  42b474:	ldr	x0, [x23, #8]
  42b478:	bl	4026b0 <free@plt>
  42b47c:	ldr	x0, [x23, #16]
  42b480:	bl	4026b0 <free@plt>
  42b484:	ldr	x0, [x23, #24]
  42b488:	bl	4026b0 <free@plt>
  42b48c:	mov	x0, x23
  42b490:	bl	4026b0 <free@plt>
  42b494:	ldr	w1, [x28, #128]
  42b498:	cmp	w1, #0xf
  42b49c:	b.eq	42b924 <_obstack_memory_used@@Base+0xce34>  // b.none
  42b4a0:	ldr	x21, [x28, #112]
  42b4a4:	sbfiz	x0, x1, #6, #32
  42b4a8:	movi	v0.4s, #0x0
  42b4ac:	add	x3, x0, #0x30
  42b4b0:	add	x2, x21, x0
  42b4b4:	add	w1, w1, #0x1
  42b4b8:	str	w1, [x28, #128]
  42b4bc:	add	x5, x21, x3
  42b4c0:	add	x1, x0, #0x20
  42b4c4:	mov	w6, #0x3                   	// #3
  42b4c8:	stur	q0, [x2, #8]
  42b4cc:	add	x1, x21, x1
  42b4d0:	add	x0, x0, #0x8
  42b4d4:	str	xzr, [x2, #24]
  42b4d8:	add	x0, x21, x0
  42b4dc:	str	x20, [x21, x3]
  42b4e0:	mov	x3, #0xffffffffffffffff    	// #-1
  42b4e4:	strb	w6, [x5, #8]
  42b4e8:	str	x0, [sp, #112]
  42b4ec:	ldrb	w0, [x1, #26]
  42b4f0:	and	w0, w0, #0xfffffff3
  42b4f4:	strb	w0, [x1, #26]
  42b4f8:	str	x3, [x2, #64]
  42b4fc:	str	q0, [x2, #32]
  42b500:	b	4297d0 <_obstack_memory_used@@Base+0xace0>
  42b504:	ldrb	w0, [x28, #176]
  42b508:	ldr	w25, [x28, #128]
  42b50c:	orr	w0, w0, #0x2
  42b510:	strb	w0, [x28, #176]
  42b514:	cmp	w25, #0xf
  42b518:	b.eq	42b7dc <_obstack_memory_used@@Base+0xccec>  // b.none
  42b51c:	ldr	x27, [x28, #112]
  42b520:	sbfiz	x0, x25, #6, #32
  42b524:	movi	v0.4s, #0x0
  42b528:	add	w1, w25, #0x1
  42b52c:	add	x2, x27, x0
  42b530:	add	x3, x0, #0x30
  42b534:	str	w1, [x28, #128]
  42b538:	add	x6, x27, x3
  42b53c:	add	x1, x0, #0x20
  42b540:	mov	w9, #0x6                   	// #6
  42b544:	stur	q0, [x2, #8]
  42b548:	add	x1, x27, x1
  42b54c:	add	x21, x0, #0x8
  42b550:	str	xzr, [x2, #24]
  42b554:	mov	x4, #0xffffffffffffffff    	// #-1
  42b558:	str	x23, [x27, x3]
  42b55c:	sxtw	x25, w25
  42b560:	strb	w9, [x6, #8]
  42b564:	add	x21, x27, x21
  42b568:	ldrb	w0, [x1, #26]
  42b56c:	and	w0, w0, #0xfffffff3
  42b570:	strb	w0, [x1, #26]
  42b574:	str	x4, [x2, #64]
  42b578:	str	q0, [x2, #32]
  42b57c:	ldr	x0, [x20]
  42b580:	cbnz	x0, 42b6f8 <_obstack_memory_used@@Base+0xcc08>
  42b584:	ldr	x0, [x20, #8]
  42b588:	cbnz	x0, 42b6f8 <_obstack_memory_used@@Base+0xcc08>
  42b58c:	ldr	x0, [x20, #16]
  42b590:	cbnz	x0, 42b6f8 <_obstack_memory_used@@Base+0xcc08>
  42b594:	ldr	x0, [x20, #24]
  42b598:	cbnz	x0, 42b6f8 <_obstack_memory_used@@Base+0xcc08>
  42b59c:	mov	x0, x20
  42b5a0:	str	x21, [sp, #112]
  42b5a4:	bl	4026b0 <free@plt>
  42b5a8:	b	4297d0 <_obstack_memory_used@@Base+0xace0>
  42b5ac:	mov	x0, #0x3c8                 	// #968
  42b5b0:	bl	402440 <malloc@plt>
  42b5b4:	cbz	x0, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42b5b8:	ldr	x1, [x28, #112]
  42b5bc:	str	x1, [x0]
  42b5c0:	mov	w1, #0x1                   	// #1
  42b5c4:	str	w1, [x28, #128]
  42b5c8:	str	x0, [x28, #112]
  42b5cc:	add	x1, x0, #0x8
  42b5d0:	ldp	x2, x3, [x19]
  42b5d4:	stp	x2, x3, [x0, #48]
  42b5d8:	movi	v0.4s, #0x0
  42b5dc:	str	x1, [sp, #112]
  42b5e0:	ldrb	w1, [x0, #58]
  42b5e4:	mov	x2, #0xffffffffffffffff    	// #-1
  42b5e8:	str	xzr, [x0, #24]
  42b5ec:	and	w1, w1, #0xfffffff3
  42b5f0:	strb	w1, [x0, #58]
  42b5f4:	stur	q0, [x0, #8]
  42b5f8:	str	q0, [x0, #32]
  42b5fc:	str	x2, [x0, #64]
  42b600:	b	42ac8c <_obstack_memory_used@@Base+0xc19c>
  42b604:	ldr	w3, [sp, #184]
  42b608:	cbnz	x25, 42b114 <_obstack_memory_used@@Base+0xc624>
  42b60c:	b	42b128 <_obstack_memory_used@@Base+0xc638>
  42b610:	cmp	w1, #0x0
  42b614:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  42b618:	b.ne	42b1c4 <_obstack_memory_used@@Base+0xc6d4>  // b.any
  42b61c:	tst	x22, #0x10000
  42b620:	ccmp	w3, w4, #0x0, ne  // ne = any
  42b624:	b.ls	42b16c <_obstack_memory_used@@Base+0xc67c>  // b.plast
  42b628:	ldr	x1, [sp, #128]
  42b62c:	mov	w0, #0xb                   	// #11
  42b630:	str	w0, [x1]
  42b634:	b	42aa98 <_obstack_memory_used@@Base+0xbfa8>
  42b638:	mov	x0, #0x3c8                 	// #968
  42b63c:	bl	402440 <malloc@plt>
  42b640:	mov	x1, x0
  42b644:	mov	x23, x0
  42b648:	cbz	x0, 42aff0 <_obstack_memory_used@@Base+0xc500>
  42b64c:	ldr	x0, [x28, #112]
  42b650:	str	x0, [x1]
  42b654:	mov	x2, #0x8                   	// #8
  42b658:	mov	w3, #0x1                   	// #1
  42b65c:	mov	w0, #0x0                   	// #0
  42b660:	str	x1, [x28, #112]
  42b664:	b	42afac <_obstack_memory_used@@Base+0xc4bc>
  42b668:	ldrb	w4, [sp, #200]
  42b66c:	b	42b0e8 <_obstack_memory_used@@Base+0xc5f8>
  42b670:	mov	x24, #0x0                   	// #0
  42b674:	str	xzr, [x25]
  42b678:	b	42a2f0 <_obstack_memory_used@@Base+0xb800>
  42b67c:	mov	w21, #0x80                  	// #128
  42b680:	mov	w20, #0x2                   	// #2
  42b684:	bl	4026a0 <__ctype_b_loc@plt>
  42b688:	ldr	x6, [x0]
  42b68c:	sxtw	x4, w20
  42b690:	add	x5, x28, #0xb8
  42b694:	mov	x9, #0x1                   	// #1
  42b698:	add	x6, x6, w21, sxtw #1
  42b69c:	mov	x0, #0x0                   	// #0
  42b6a0:	ldrh	w1, [x6, x0, lsl #1]
  42b6a4:	add	w2, w21, w0
  42b6a8:	cmp	w2, #0x5f
  42b6ac:	lsl	x3, x9, x0
  42b6b0:	and	w1, w1, #0x8
  42b6b4:	add	x0, x0, #0x1
  42b6b8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  42b6bc:	b.eq	42b6cc <_obstack_memory_used@@Base+0xcbdc>  // b.none
  42b6c0:	ldr	x1, [x5, x4, lsl #3]
  42b6c4:	orr	x1, x1, x3
  42b6c8:	str	x1, [x5, x4, lsl #3]
  42b6cc:	cmp	x0, #0x40
  42b6d0:	b.ne	42b6a0 <_obstack_memory_used@@Base+0xcbb0>  // b.any
  42b6d4:	add	x4, x4, #0x1
  42b6d8:	add	w21, w21, #0x40
  42b6dc:	cmp	w4, #0x3
  42b6e0:	add	x6, x6, #0x80
  42b6e4:	b.le	42b69c <_obstack_memory_used@@Base+0xcbac>
  42b6e8:	b	42ab20 <_obstack_memory_used@@Base+0xc030>
  42b6ec:	mov	w21, #0x0                   	// #0
  42b6f0:	mov	w20, #0x0                   	// #0
  42b6f4:	b	42b684 <_obstack_memory_used@@Base+0xcb94>
  42b6f8:	ldr	w0, [x28, #128]
  42b6fc:	cmp	w0, #0xf
  42b700:	b.eq	42b828 <_obstack_memory_used@@Base+0xcd38>  // b.none
  42b704:	mov	x24, x27
  42b708:	sbfiz	x1, x0, #6, #32
  42b70c:	add	w2, w0, #0x1
  42b710:	movi	v0.4s, #0x0
  42b714:	add	x3, x24, x1
  42b718:	add	x4, x1, #0x30
  42b71c:	str	w2, [x28, #128]
  42b720:	add	x6, x24, x4
  42b724:	add	x2, x1, #0x20
  42b728:	str	xzr, [x3, #24]
  42b72c:	add	x2, x24, x2
  42b730:	stur	q0, [x3, #8]
  42b734:	mov	w10, #0x3                   	// #3
  42b738:	mov	x5, #0xffffffffffffffff    	// #-1
  42b73c:	str	x20, [x24, x4]
  42b740:	add	x1, x1, #0x8
  42b744:	strb	w10, [x6, #8]
  42b748:	sxtw	x7, w0
  42b74c:	add	x1, x24, x1
  42b750:	mov	x0, x24
  42b754:	ldrb	w4, [x2, #26]
  42b758:	mov	x6, #0x0                   	// #0
  42b75c:	and	w4, w4, #0xfffffff3
  42b760:	strb	w4, [x2, #26]
  42b764:	str	x5, [x3, #64]
  42b768:	str	q0, [x3, #32]
  42b76c:	ldr	w2, [x28, #128]
  42b770:	cmp	w2, #0xf
  42b774:	b.eq	42b7fc <_obstack_memory_used@@Base+0xcd0c>  // b.none
  42b778:	sbfiz	x3, x2, #6, #32
  42b77c:	add	w4, w2, #0x1
  42b780:	add	x2, x0, x3
  42b784:	add	x5, x3, #0x20
  42b788:	add	x5, x0, x5
  42b78c:	mov	x9, #0xa                   	// #10
  42b790:	str	w4, [x28, #128]
  42b794:	bfxil	x6, x9, #0, #8
  42b798:	stp	xzr, x1, [x2, #8]
  42b79c:	add	x3, x3, #0x8
  42b7a0:	add	x3, x0, x3
  42b7a4:	str	x21, [x2, #24]
  42b7a8:	add	x24, x24, x7, lsl #6
  42b7ac:	stp	xzr, x6, [x2, #48]
  42b7b0:	add	x25, x27, x25, lsl #6
  42b7b4:	mov	x1, #0xffffffffffffffff    	// #-1
  42b7b8:	ldrb	w0, [x5, #26]
  42b7bc:	str	x3, [sp, #112]
  42b7c0:	and	w0, w0, #0xfffffff3
  42b7c4:	strb	w0, [x5, #26]
  42b7c8:	stp	xzr, xzr, [x2, #32]
  42b7cc:	str	x1, [x2, #64]
  42b7d0:	str	x3, [x24, #8]
  42b7d4:	str	x3, [x25, #8]
  42b7d8:	b	4297d0 <_obstack_memory_used@@Base+0xace0>
  42b7dc:	mov	x0, #0x3c8                 	// #968
  42b7e0:	bl	402440 <malloc@plt>
  42b7e4:	cbz	x0, 42af74 <_obstack_memory_used@@Base+0xc484>
  42b7e8:	ldr	x1, [x28, #112]
  42b7ec:	str	x1, [x0]
  42b7f0:	mov	w25, #0x0                   	// #0
  42b7f4:	str	x0, [x28, #112]
  42b7f8:	b	42b51c <_obstack_memory_used@@Base+0xca2c>
  42b7fc:	mov	x0, #0x3c8                 	// #968
  42b800:	str	x6, [sp, #96]
  42b804:	stp	x1, x7, [sp, #112]
  42b808:	bl	402440 <malloc@plt>
  42b80c:	cbz	x0, 42af74 <_obstack_memory_used@@Base+0xc484>
  42b810:	str	x24, [x0]
  42b814:	mov	w2, #0x0                   	// #0
  42b818:	str	x0, [x28, #112]
  42b81c:	ldr	x6, [sp, #96]
  42b820:	ldp	x1, x7, [sp, #112]
  42b824:	b	42b778 <_obstack_memory_used@@Base+0xcc88>
  42b828:	mov	x0, #0x3c8                 	// #968
  42b82c:	bl	402440 <malloc@plt>
  42b830:	mov	x24, x0
  42b834:	cbz	x0, 42af74 <_obstack_memory_used@@Base+0xc484>
  42b838:	str	x27, [x24]
  42b83c:	mov	w0, #0x0                   	// #0
  42b840:	str	x24, [x28, #112]
  42b844:	b	42b708 <_obstack_memory_used@@Base+0xcc18>
  42b848:	cbz	x25, 42b1c4 <_obstack_memory_used@@Base+0xc6d4>
  42b84c:	mov	w4, #0x0                   	// #0
  42b850:	b	42b0f0 <_obstack_memory_used@@Base+0xc600>
  42b854:	mov	x21, #0x0                   	// #0
  42b858:	ldr	x24, [sp, #112]
  42b85c:	b	429870 <_obstack_memory_used@@Base+0xad80>
  42b860:	ldr	x0, [sp, #200]
  42b864:	str	w2, [sp, #144]
  42b868:	str	w1, [sp, #152]
  42b86c:	bl	402300 <strlen@plt>
  42b870:	cmp	x0, #0x1
  42b874:	b.hi	42b2e4 <_obstack_memory_used@@Base+0xc7f4>  // b.pmore
  42b878:	ldr	w2, [sp, #144]
  42b87c:	ldr	w1, [sp, #152]
  42b880:	cbz	w2, 42b0c4 <_obstack_memory_used@@Base+0xc5d4>
  42b884:	ldrb	w0, [sp, #136]
  42b888:	mov	w3, #0x0                   	// #0
  42b88c:	b	42b0e0 <_obstack_memory_used@@Base+0xc5f0>
  42b890:	ldr	x0, [sp, #184]
  42b894:	str	w2, [sp, #144]
  42b898:	str	w1, [sp, #152]
  42b89c:	bl	402300 <strlen@plt>
  42b8a0:	cmp	x0, #0x1
  42b8a4:	ldr	w2, [sp, #144]
  42b8a8:	ldr	w1, [sp, #152]
  42b8ac:	b.hi	42b2e4 <_obstack_memory_used@@Base+0xc7f4>  // b.pmore
  42b8b0:	cmp	w1, #0x3
  42b8b4:	b.eq	42b2c4 <_obstack_memory_used@@Base+0xc7d4>  // b.none
  42b8b8:	ldr	x0, [sp, #184]
  42b8bc:	ldrb	w3, [x0]
  42b8c0:	b	42b0c8 <_obstack_memory_used@@Base+0xc5d8>
  42b8c4:	ldr	x24, [sp, #112]
  42b8c8:	mov	x21, x24
  42b8cc:	b	42a3f0 <_obstack_memory_used@@Base+0xb900>
  42b8d0:	ldr	x0, [sp, #128]
  42b8d4:	ldr	w0, [x0]
  42b8d8:	cbnz	w0, 429b74 <_obstack_memory_used@@Base+0xb084>
  42b8dc:	str	xzr, [sp, #112]
  42b8e0:	b	429d98 <_obstack_memory_used@@Base+0xb2a8>
  42b8e4:	ldp	x1, x3, [x20]
  42b8e8:	ldr	x2, [x0]
  42b8ec:	and	x1, x1, x2
  42b8f0:	str	x1, [x20]
  42b8f4:	ldr	x2, [x20, #16]
  42b8f8:	ldr	x5, [x0, #8]
  42b8fc:	ldr	x1, [x20, #24]
  42b900:	and	x3, x3, x5
  42b904:	str	x3, [x20, #8]
  42b908:	ldr	x3, [x0, #16]
  42b90c:	and	x2, x2, x3
  42b910:	str	x2, [x20, #16]
  42b914:	ldr	x0, [x0, #24]
  42b918:	and	x0, x1, x0
  42b91c:	str	x0, [x20, #24]
  42b920:	b	42b434 <_obstack_memory_used@@Base+0xc944>
  42b924:	mov	x0, #0x3c8                 	// #968
  42b928:	bl	402440 <malloc@plt>
  42b92c:	cbz	x0, 42af74 <_obstack_memory_used@@Base+0xc484>
  42b930:	ldr	x1, [x28, #112]
  42b934:	str	x1, [x0]
  42b938:	mov	w1, #0x0                   	// #0
  42b93c:	str	x0, [x28, #112]
  42b940:	str	wzr, [x28, #128]
  42b944:	b	42b4a0 <_obstack_memory_used@@Base+0xc9b0>
  42b948:	mov	x0, #0x3c8                 	// #968
  42b94c:	bl	402440 <malloc@plt>
  42b950:	movi	v0.4s, #0x0
  42b954:	cbz	x0, 42ba64 <_obstack_memory_used@@Base+0xcf74>
  42b958:	ldr	x1, [x28, #112]
  42b95c:	str	x1, [x0]
  42b960:	mov	w2, #0x1                   	// #1
  42b964:	mov	x23, #0x8                   	// #8
  42b968:	mov	w1, #0x0                   	// #0
  42b96c:	str	x0, [x28, #112]
  42b970:	b	42a7f8 <_obstack_memory_used@@Base+0xbd08>
  42b974:	mov	x0, #0x3c8                 	// #968
  42b978:	bl	402440 <malloc@plt>
  42b97c:	mov	x1, x0
  42b980:	cbz	x0, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42b984:	ldr	x0, [x28, #112]
  42b988:	str	x0, [x1]
  42b98c:	movi	v0.4s, #0x0
  42b990:	mov	w6, #0x1                   	// #1
  42b994:	mov	x4, #0x8                   	// #8
  42b998:	mov	w0, #0x0                   	// #0
  42b99c:	str	x1, [x28, #112]
  42b9a0:	b	42a858 <_obstack_memory_used@@Base+0xbd68>
  42b9a4:	mov	x0, #0x3c8                 	// #968
  42b9a8:	bl	402440 <malloc@plt>
  42b9ac:	cbz	x0, 42a8a4 <_obstack_memory_used@@Base+0xbdb4>
  42b9b0:	ldr	x1, [x28, #112]
  42b9b4:	str	x1, [x0]
  42b9b8:	mov	w1, #0x1                   	// #1
  42b9bc:	str	w1, [x28, #128]
  42b9c0:	str	x0, [x28, #112]
  42b9c4:	add	x1, x0, #0x8
  42b9c8:	ldp	x4, x5, [x19]
  42b9cc:	stp	x4, x5, [x0, #48]
  42b9d0:	mov	x2, #0xffffffffffffffff    	// #-1
  42b9d4:	movi	v0.4s, #0x0
  42b9d8:	str	x1, [sp, #112]
  42b9dc:	ldrb	w1, [x0, #58]
  42b9e0:	str	xzr, [x0, #24]
  42b9e4:	and	w1, w1, #0xfffffff3
  42b9e8:	strb	w1, [x0, #58]
  42b9ec:	stur	q0, [x0, #8]
  42b9f0:	str	q0, [x0, #32]
  42b9f4:	str	x2, [x0, #64]
  42b9f8:	b	42a76c <_obstack_memory_used@@Base+0xbc7c>
  42b9fc:	lsl	x1, x1, #1
  42ba00:	mov	x0, x2
  42ba04:	add	x1, x1, #0x1
  42ba08:	str	x1, [sp, #96]
  42ba0c:	str	w3, [sp, #144]
  42ba10:	lsl	x1, x1, #2
  42ba14:	str	x1, [sp, #136]
  42ba18:	str	w4, [sp, #152]
  42ba1c:	bl	402550 <realloc@plt>
  42ba20:	mov	x2, x0
  42ba24:	ldr	x0, [x25, #16]
  42ba28:	ldr	x1, [sp, #136]
  42ba2c:	str	x2, [sp, #136]
  42ba30:	bl	402550 <realloc@plt>
  42ba34:	mov	x1, x0
  42ba38:	ldr	x2, [sp, #136]
  42ba3c:	ldr	w3, [sp, #144]
  42ba40:	cmp	x2, #0x0
  42ba44:	ldr	w4, [sp, #152]
  42ba48:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  42ba4c:	b.eq	42ba6c <_obstack_memory_used@@Base+0xcf7c>  // b.none
  42ba50:	stp	x2, x1, [x25, #8]
  42ba54:	ldr	x0, [x25, #64]
  42ba58:	b	42b158 <_obstack_memory_used@@Base+0xc668>
  42ba5c:	mov	x20, #0x0                   	// #0
  42ba60:	b	42ac0c <_obstack_memory_used@@Base+0xc11c>
  42ba64:	mov	x23, #0x0                   	// #0
  42ba68:	b	42a834 <_obstack_memory_used@@Base+0xbd44>
  42ba6c:	mov	x0, x2
  42ba70:	str	x1, [sp, #112]
  42ba74:	bl	4026b0 <free@plt>
  42ba78:	ldr	x1, [sp, #112]
  42ba7c:	mov	x0, x1
  42ba80:	bl	4026b0 <free@plt>
  42ba84:	ldr	x1, [sp, #128]
  42ba88:	mov	w0, #0xc                   	// #12
  42ba8c:	str	w0, [x1]
  42ba90:	b	42aa98 <_obstack_memory_used@@Base+0xbfa8>
  42ba94:	nop
  42ba98:	stp	x29, x30, [sp, #-112]!
  42ba9c:	mov	x29, sp
  42baa0:	stp	x27, x28, [sp, #80]
  42baa4:	mov	x28, x5
  42baa8:	stp	x19, x20, [sp, #16]
  42baac:	mov	x19, x1
  42bab0:	mov	x20, x4
  42bab4:	stp	x21, x22, [sp, #32]
  42bab8:	mov	x21, x0
  42babc:	mov	x22, x3
  42bac0:	stp	x23, x24, [sp, #48]
  42bac4:	stp	x25, x26, [sp, #64]
  42bac8:	mov	x25, x2
  42bacc:	ldr	x24, [x1]
  42bad0:	bl	429738 <_obstack_memory_used@@Base+0xac48>
  42bad4:	ldr	w1, [x28]
  42bad8:	cmp	w1, #0x0
  42badc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  42bae0:	b.eq	42bc90 <_obstack_memory_used@@Base+0xd1a0>  // b.none
  42bae4:	mov	x27, x0
  42bae8:	ldrb	w0, [x25, #8]
  42baec:	and	w1, w0, #0xfffffff7
  42baf0:	cmp	w1, #0x2
  42baf4:	b.eq	42bbec <_obstack_memory_used@@Base+0xd0fc>  // b.none
  42baf8:	cmp	x20, #0x0
  42bafc:	mov	x26, #0x10                  	// #16
  42bb00:	cset	w23, eq  // eq = none
  42bb04:	b	42bb20 <_obstack_memory_used@@Base+0xd030>
  42bb08:	cmp	x27, #0x0
  42bb0c:	csel	x27, x27, x0, ne  // ne = any
  42bb10:	ldrb	w0, [x25, #8]
  42bb14:	and	w1, w0, #0xfffffff7
  42bb18:	cmp	w1, #0x2
  42bb1c:	b.eq	42bbec <_obstack_memory_used@@Base+0xd0fc>  // b.none
  42bb20:	cmp	w23, #0x0
  42bb24:	ccmp	w0, #0x9, #0x0, eq  // eq = none
  42bb28:	b.eq	42bbec <_obstack_memory_used@@Base+0xd0fc>  // b.none
  42bb2c:	mov	x2, x25
  42bb30:	mov	x1, x19
  42bb34:	mov	x5, x28
  42bb38:	mov	x4, x20
  42bb3c:	mov	x3, x22
  42bb40:	mov	x0, x21
  42bb44:	bl	429738 <_obstack_memory_used@@Base+0xac48>
  42bb48:	mov	x1, x0
  42bb4c:	ldr	w2, [x28]
  42bb50:	cmp	w2, #0x0
  42bb54:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  42bb58:	b.eq	42bc40 <_obstack_memory_used@@Base+0xd150>  // b.none
  42bb5c:	cmp	x27, #0x0
  42bb60:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  42bb64:	b.eq	42bb08 <_obstack_memory_used@@Base+0xd018>  // b.none
  42bb68:	ldr	w3, [x24, #128]
  42bb6c:	mov	x5, #0x0                   	// #0
  42bb70:	cmp	w3, #0xf
  42bb74:	b.eq	42bc0c <_obstack_memory_used@@Base+0xd11c>  // b.none
  42bb78:	mov	w0, #0x40                  	// #64
  42bb7c:	mov	x2, #0x8                   	// #8
  42bb80:	add	w10, w3, #0x1
  42bb84:	smaddl	x9, w3, w0, x2
  42bb88:	ldr	x0, [x24, #112]
  42bb8c:	sbfiz	x3, x3, #6, #32
  42bb90:	add	x2, x0, x3
  42bb94:	add	x4, x3, #0x20
  42bb98:	add	x4, x0, x4
  42bb9c:	str	w10, [x24, #128]
  42bba0:	bfxil	x5, x26, #0, #8
  42bba4:	mov	x3, #0xffffffffffffffff    	// #-1
  42bba8:	stp	xzr, x27, [x2, #8]
  42bbac:	add	x0, x0, x9
  42bbb0:	str	x1, [x2, #24]
  42bbb4:	stp	xzr, x5, [x2, #48]
  42bbb8:	ldrb	w5, [x4, #26]
  42bbbc:	and	w5, w5, #0xfffffff3
  42bbc0:	strb	w5, [x4, #26]
  42bbc4:	stp	xzr, xzr, [x2, #32]
  42bbc8:	str	x3, [x2, #64]
  42bbcc:	str	x0, [x27]
  42bbd0:	str	x0, [x1]
  42bbd4:	cbz	x0, 42bc54 <_obstack_memory_used@@Base+0xd164>
  42bbd8:	mov	x27, x0
  42bbdc:	ldrb	w0, [x25, #8]
  42bbe0:	and	w1, w0, #0xfffffff7
  42bbe4:	cmp	w1, #0x2
  42bbe8:	b.ne	42bb20 <_obstack_memory_used@@Base+0xd030>  // b.any
  42bbec:	mov	x0, x27
  42bbf0:	ldp	x19, x20, [sp, #16]
  42bbf4:	ldp	x21, x22, [sp, #32]
  42bbf8:	ldp	x23, x24, [sp, #48]
  42bbfc:	ldp	x25, x26, [sp, #64]
  42bc00:	ldp	x27, x28, [sp, #80]
  42bc04:	ldp	x29, x30, [sp], #112
  42bc08:	ret
  42bc0c:	mov	x0, #0x3c8                 	// #968
  42bc10:	stp	x1, x5, [sp, #96]
  42bc14:	bl	402440 <malloc@plt>
  42bc18:	ldr	x1, [sp, #96]
  42bc1c:	cbz	x0, 42bc54 <_obstack_memory_used@@Base+0xd164>
  42bc20:	ldr	x2, [x24, #112]
  42bc24:	str	x2, [x0]
  42bc28:	mov	w10, #0x1                   	// #1
  42bc2c:	mov	w3, #0x0                   	// #0
  42bc30:	mov	x9, #0x8                   	// #8
  42bc34:	str	x0, [x24, #112]
  42bc38:	ldr	x5, [sp, #104]
  42bc3c:	b	42bb8c <_obstack_memory_used@@Base+0xd09c>
  42bc40:	cbz	x27, 42bc90 <_obstack_memory_used@@Base+0xd1a0>
  42bc44:	mov	x0, x27
  42bc48:	mov	x27, #0x0                   	// #0
  42bc4c:	bl	422c58 <_obstack_memory_used@@Base+0x4168>
  42bc50:	b	42bbec <_obstack_memory_used@@Base+0xd0fc>
  42bc54:	mov	x0, x1
  42bc58:	bl	422c58 <_obstack_memory_used@@Base+0x4168>
  42bc5c:	mov	x0, x27
  42bc60:	bl	422c58 <_obstack_memory_used@@Base+0x4168>
  42bc64:	mov	w0, #0xc                   	// #12
  42bc68:	str	w0, [x28]
  42bc6c:	mov	x27, #0x0                   	// #0
  42bc70:	mov	x0, x27
  42bc74:	ldp	x19, x20, [sp, #16]
  42bc78:	ldp	x21, x22, [sp, #32]
  42bc7c:	ldp	x23, x24, [sp, #48]
  42bc80:	ldp	x25, x26, [sp, #64]
  42bc84:	ldp	x27, x28, [sp, #80]
  42bc88:	ldp	x29, x30, [sp], #112
  42bc8c:	ret
  42bc90:	mov	x27, #0x0                   	// #0
  42bc94:	b	42bbec <_obstack_memory_used@@Base+0xd0fc>
  42bc98:	stp	x29, x30, [sp, #-208]!
  42bc9c:	mov	x29, sp
  42bca0:	stp	x27, x28, [sp, #80]
  42bca4:	ldr	x27, [x1]
  42bca8:	stp	x19, x20, [sp, #16]
  42bcac:	mov	x20, x5
  42bcb0:	mov	x19, x3
  42bcb4:	stp	x21, x22, [sp, #32]
  42bcb8:	mov	x22, x1
  42bcbc:	ldr	x6, [x27, #168]
  42bcc0:	mov	x21, x4
  42bcc4:	stp	x25, x26, [sp, #64]
  42bcc8:	mov	x25, x0
  42bccc:	mov	x26, x2
  42bcd0:	str	x6, [sp, #104]
  42bcd4:	bl	42ba98 <_obstack_memory_used@@Base+0xcfa8>
  42bcd8:	ldr	w1, [x20]
  42bcdc:	cmp	w1, #0x0
  42bce0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  42bce4:	b.eq	42c558 <_obstack_memory_used@@Base+0xda68>  // b.none
  42bce8:	mov	x28, x0
  42bcec:	mov	x0, #0x8400                	// #33792
  42bcf0:	and	x0, x19, x0
  42bcf4:	str	x0, [sp, #152]
  42bcf8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x13510>
  42bcfc:	add	x0, x0, #0x560
  42bd00:	str	x0, [sp, #144]
  42bd04:	and	x0, x19, #0x2000
  42bd08:	str	x0, [sp, #120]
  42bd0c:	and	x0, x19, #0x8
  42bd10:	str	x0, [sp, #168]
  42bd14:	and	x0, x19, #0x800
  42bd18:	str	x0, [sp, #176]
  42bd1c:	and	x0, x19, #0x80000
  42bd20:	mov	x1, #0x1200                	// #4608
  42bd24:	and	x1, x19, x1
  42bd28:	str	x0, [sp, #160]
  42bd2c:	and	x0, x19, #0x4000
  42bd30:	stp	x23, x24, [sp, #48]
  42bd34:	str	x1, [sp, #136]
  42bd38:	mov	x1, #0x402                 	// #1026
  42bd3c:	and	x1, x19, x1
  42bd40:	str	x1, [sp, #128]
  42bd44:	str	x0, [sp, #184]
  42bd48:	ldrb	w0, [x26, #8]
  42bd4c:	cmp	w0, #0xa
  42bd50:	b.ne	42bef8 <_obstack_memory_used@@Base+0xd408>  // b.any
  42bd54:	nop
  42bd58:	ldr	x0, [x25, #72]
  42bd5c:	ldr	x1, [x25, #104]
  42bd60:	cmp	x1, x0
  42bd64:	b.le	42c014 <_obstack_memory_used@@Base+0xd524>
  42bd68:	ldr	x4, [x25, #8]
  42bd6c:	add	x24, x0, #0x1
  42bd70:	ldrb	w1, [x26, #10]
  42bd74:	ldr	w3, [x25, #144]
  42bd78:	ldrb	w23, [x4, x0]
  42bd7c:	and	w1, w1, #0xffffff9f
  42bd80:	strb	w23, [x26]
  42bd84:	cmp	w3, #0x1
  42bd88:	strb	w1, [x26, #10]
  42bd8c:	b.le	42c068 <_obstack_memory_used@@Base+0xd578>
  42bd90:	ldr	x1, [x25, #48]
  42bd94:	cmp	x0, x1
  42bd98:	b.eq	42bdac <_obstack_memory_used@@Base+0xd2bc>  // b.none
  42bd9c:	ldr	x1, [x25, #16]
  42bda0:	ldr	w1, [x1, x0, lsl #2]
  42bda4:	cmn	w1, #0x1
  42bda8:	b.eq	42c18c <_obstack_memory_used@@Base+0xd69c>  // b.none
  42bdac:	cmp	w23, #0x5c
  42bdb0:	b.eq	42c0c8 <_obstack_memory_used@@Base+0xd5d8>  // b.none
  42bdb4:	ldr	x1, [x25, #16]
  42bdb8:	mov	w3, #0x1                   	// #1
  42bdbc:	strb	w3, [x26, #8]
  42bdc0:	ldr	w1, [x1, x0, lsl #2]
  42bdc4:	str	w1, [sp, #112]
  42bdc8:	mov	w0, w1
  42bdcc:	bl	4027c0 <iswalnum@plt>
  42bdd0:	ldr	w1, [sp, #112]
  42bdd4:	cmp	w1, #0x5f
  42bdd8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42bddc:	ldrb	w0, [x26, #10]
  42bde0:	cset	w1, ne  // ne = any
  42bde4:	cmp	w23, #0x2e
  42bde8:	bfi	w0, w1, #6, #1
  42bdec:	strb	w0, [x26, #10]
  42bdf0:	b.eq	42c0b8 <_obstack_memory_used@@Base+0xd5c8>  // b.none
  42bdf4:	b.hi	42bf90 <_obstack_memory_used@@Base+0xd4a0>  // b.pmore
  42bdf8:	cmp	w23, #0x29
  42bdfc:	b.eq	42c284 <_obstack_memory_used@@Base+0xd794>  // b.none
  42be00:	b.hi	42bf68 <_obstack_memory_used@@Base+0xd478>  // b.pmore
  42be04:	cmp	w23, #0x24
  42be08:	b.eq	42c238 <_obstack_memory_used@@Base+0xd748>  // b.none
  42be0c:	cmp	w23, #0x28
  42be10:	b.ne	42bf48 <_obstack_memory_used@@Base+0xd458>  // b.any
  42be14:	ldr	x0, [sp, #120]
  42be18:	cbnz	x0, 42c1e8 <_obstack_memory_used@@Base+0xd6f8>
  42be1c:	nop
  42be20:	str	x24, [x25, #72]
  42be24:	ldr	x0, [sp, #104]
  42be28:	mov	x4, x21
  42be2c:	ldr	x23, [x27, #168]
  42be30:	str	x0, [x27, #168]
  42be34:	mov	x1, x22
  42be38:	mov	x5, x20
  42be3c:	mov	x3, x19
  42be40:	mov	x2, x26
  42be44:	mov	x0, x25
  42be48:	bl	42ba98 <_obstack_memory_used@@Base+0xcfa8>
  42be4c:	ldr	w1, [x20]
  42be50:	mov	x4, x0
  42be54:	cmp	w1, #0x0
  42be58:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  42be5c:	b.eq	42c53c <_obstack_memory_used@@Base+0xda4c>  // b.none
  42be60:	ldr	x0, [x27, #168]
  42be64:	orr	x23, x0, x23
  42be68:	str	x23, [x27, #168]
  42be6c:	ldr	w1, [x27, #128]
  42be70:	mov	x23, #0x0                   	// #0
  42be74:	cmp	w1, #0xf
  42be78:	b.eq	42c034 <_obstack_memory_used@@Base+0xd544>  // b.none
  42be7c:	mov	w3, #0x40                  	// #64
  42be80:	mov	x0, #0x8                   	// #8
  42be84:	add	w11, w1, #0x1
  42be88:	smaddl	x0, w1, w3, x0
  42be8c:	ldr	x3, [x27, #112]
  42be90:	sbfiz	x1, x1, #6, #32
  42be94:	add	x2, x3, x1
  42be98:	add	x5, x1, #0x20
  42be9c:	add	x5, x3, x5
  42bea0:	mov	x10, #0xa                   	// #10
  42bea4:	str	w11, [x27, #128]
  42bea8:	bfxil	x23, x10, #0, #8
  42beac:	stp	xzr, x28, [x2, #8]
  42beb0:	add	x3, x3, x0
  42beb4:	mov	x10, #0xffffffffffffffff    	// #-1
  42beb8:	str	x4, [x2, #24]
  42bebc:	stp	xzr, x23, [x2, #48]
  42bec0:	ldrb	w0, [x5, #26]
  42bec4:	and	w0, w0, #0xfffffff3
  42bec8:	strb	w0, [x5, #26]
  42becc:	stp	xzr, xzr, [x2, #32]
  42bed0:	str	x10, [x2, #64]
  42bed4:	cbz	x28, 42bedc <_obstack_memory_used@@Base+0xd3ec>
  42bed8:	str	x3, [x28]
  42bedc:	cbz	x4, 42bf18 <_obstack_memory_used@@Base+0xd428>
  42bee0:	str	x3, [x4]
  42bee4:	cbz	x3, 42bf1c <_obstack_memory_used@@Base+0xd42c>
  42bee8:	ldrb	w0, [x26, #8]
  42beec:	mov	x28, x3
  42bef0:	cmp	w0, #0xa
  42bef4:	b.eq	42bd58 <_obstack_memory_used@@Base+0xd268>  // b.none
  42bef8:	mov	x0, x28
  42befc:	ldp	x19, x20, [sp, #16]
  42bf00:	ldp	x21, x22, [sp, #32]
  42bf04:	ldp	x23, x24, [sp, #48]
  42bf08:	ldp	x25, x26, [sp, #64]
  42bf0c:	ldp	x27, x28, [sp, #80]
  42bf10:	ldp	x29, x30, [sp], #208
  42bf14:	ret
  42bf18:	cbnz	x3, 42bee8 <_obstack_memory_used@@Base+0xd3f8>
  42bf1c:	mov	w0, #0xc                   	// #12
  42bf20:	mov	x28, #0x0                   	// #0
  42bf24:	ldp	x23, x24, [sp, #48]
  42bf28:	str	w0, [x20]
  42bf2c:	mov	x0, x28
  42bf30:	ldp	x19, x20, [sp, #16]
  42bf34:	ldp	x21, x22, [sp, #32]
  42bf38:	ldp	x25, x26, [sp, #64]
  42bf3c:	ldp	x27, x28, [sp, #80]
  42bf40:	ldp	x29, x30, [sp], #208
  42bf44:	ret
  42bf48:	cmp	w23, #0xa
  42bf4c:	b.ne	42be20 <_obstack_memory_used@@Base+0xd330>  // b.any
  42bf50:	ldr	x0, [sp, #176]
  42bf54:	cbz	x0, 42be20 <_obstack_memory_used@@Base+0xd330>
  42bf58:	strb	w23, [x26, #8]
  42bf5c:	mov	x4, #0x0                   	// #0
  42bf60:	str	x24, [x25, #72]
  42bf64:	b	42be6c <_obstack_memory_used@@Base+0xd37c>
  42bf68:	cmp	w23, #0x2a
  42bf6c:	b.eq	42c1f8 <_obstack_memory_used@@Base+0xd708>  // b.none
  42bf70:	cmp	w23, #0x2b
  42bf74:	b.ne	42be20 <_obstack_memory_used@@Base+0xd330>  // b.any
  42bf78:	ldr	x0, [sp, #128]
  42bf7c:	cbnz	x0, 42be20 <_obstack_memory_used@@Base+0xd330>
  42bf80:	mov	w0, #0x12                  	// #18
  42bf84:	strb	w0, [x26, #8]
  42bf88:	str	x24, [x25, #72]
  42bf8c:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42bf90:	cmp	w23, #0x7b
  42bf94:	b.eq	42c208 <_obstack_memory_used@@Base+0xd718>  // b.none
  42bf98:	b.hi	42bfc4 <_obstack_memory_used@@Base+0xd4d4>  // b.pmore
  42bf9c:	cmp	w23, #0x5b
  42bfa0:	b.eq	42c228 <_obstack_memory_used@@Base+0xd738>  // b.none
  42bfa4:	cmp	w23, #0x5e
  42bfa8:	b.ne	42bff4 <_obstack_memory_used@@Base+0xd504>  // b.any
  42bfac:	mov	w0, #0xc                   	// #12
  42bfb0:	strb	w0, [x26, #8]
  42bfb4:	mov	w0, #0x10                  	// #16
  42bfb8:	str	w0, [x26]
  42bfbc:	str	x24, [x25, #72]
  42bfc0:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42bfc4:	cmp	w23, #0x7c
  42bfc8:	b.eq	42c264 <_obstack_memory_used@@Base+0xd774>  // b.none
  42bfcc:	cmp	w23, #0x7d
  42bfd0:	b.ne	42be20 <_obstack_memory_used@@Base+0xd330>  // b.any
  42bfd4:	ldr	x1, [sp, #136]
  42bfd8:	mov	x0, #0x1200                	// #4608
  42bfdc:	cmp	x1, x0
  42bfe0:	b.ne	42be20 <_obstack_memory_used@@Base+0xd330>  // b.any
  42bfe4:	mov	w0, #0x18                  	// #24
  42bfe8:	strb	w0, [x26, #8]
  42bfec:	str	x24, [x25, #72]
  42bff0:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42bff4:	cmp	w23, #0x3f
  42bff8:	b.ne	42be20 <_obstack_memory_used@@Base+0xd330>  // b.any
  42bffc:	ldr	x0, [sp, #128]
  42c000:	cbnz	x0, 42be20 <_obstack_memory_used@@Base+0xd330>
  42c004:	mov	w0, #0x13                  	// #19
  42c008:	strb	w0, [x26, #8]
  42c00c:	str	x24, [x25, #72]
  42c010:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c014:	mov	w1, #0x2                   	// #2
  42c018:	strb	w1, [x26, #8]
  42c01c:	str	x0, [x25, #72]
  42c020:	mov	x4, #0x0                   	// #0
  42c024:	ldr	w1, [x27, #128]
  42c028:	mov	x23, #0x0                   	// #0
  42c02c:	cmp	w1, #0xf
  42c030:	b.ne	42be7c <_obstack_memory_used@@Base+0xd38c>  // b.any
  42c034:	mov	x0, #0x3c8                 	// #968
  42c038:	str	x4, [sp, #112]
  42c03c:	bl	402440 <malloc@plt>
  42c040:	mov	x3, x0
  42c044:	cbz	x0, 42bf1c <_obstack_memory_used@@Base+0xd42c>
  42c048:	ldr	x0, [x27, #112]
  42c04c:	str	x0, [x3]
  42c050:	mov	w11, #0x1                   	// #1
  42c054:	mov	w1, #0x0                   	// #0
  42c058:	mov	x0, #0x8                   	// #8
  42c05c:	str	x3, [x27, #112]
  42c060:	ldr	x4, [sp, #112]
  42c064:	b	42be90 <_obstack_memory_used@@Base+0xd3a0>
  42c068:	cmp	w23, #0x5c
  42c06c:	b.eq	42c0c8 <_obstack_memory_used@@Base+0xd5d8>  // b.none
  42c070:	bl	4026a0 <__ctype_b_loc@plt>
  42c074:	ldr	x0, [x0]
  42c078:	ubfiz	x3, x23, #1, #8
  42c07c:	cmp	w23, #0x5f
  42c080:	ldr	w1, [x26, #8]
  42c084:	mov	w2, #0xff00                	// #65280
  42c088:	ldrh	w0, [x0, x3]
  42c08c:	movk	w2, #0xffbf, lsl #16
  42c090:	and	w1, w1, w2
  42c094:	and	w0, w0, #0x8
  42c098:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42c09c:	cset	w0, ne  // ne = any
  42c0a0:	cmp	w23, #0x2e
  42c0a4:	lsl	w0, w0, #22
  42c0a8:	orr	w0, w0, #0x1
  42c0ac:	orr	w0, w0, w1
  42c0b0:	str	w0, [x26, #8]
  42c0b4:	b.ne	42bdf4 <_obstack_memory_used@@Base+0xd304>  // b.any
  42c0b8:	mov	w0, #0x5                   	// #5
  42c0bc:	strb	w0, [x26, #8]
  42c0c0:	str	x24, [x25, #72]
  42c0c4:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c0c8:	ldr	x1, [x25, #88]
  42c0cc:	cmp	x1, x24
  42c0d0:	b.gt	42c0e4 <_obstack_memory_used@@Base+0xd5f4>
  42c0d4:	mov	w0, #0x24                  	// #36
  42c0d8:	strb	w0, [x26, #8]
  42c0dc:	str	x24, [x25, #72]
  42c0e0:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c0e4:	ldrb	w1, [x25, #139]
  42c0e8:	add	x23, x0, #0x2
  42c0ec:	cbnz	w1, 42c2a0 <_obstack_memory_used@@Base+0xd7b0>
  42c0f0:	ldrb	w1, [x4, x24]
  42c0f4:	mov	w0, #0x1                   	// #1
  42c0f8:	strb	w1, [x26]
  42c0fc:	strb	w0, [x26, #8]
  42c100:	cmp	w3, #0x1
  42c104:	b.le	42c1b0 <_obstack_memory_used@@Base+0xd6c0>
  42c108:	ldr	x0, [x25, #16]
  42c10c:	add	x0, x0, x24, lsl #2
  42c110:	ldr	w24, [x0]
  42c114:	str	w1, [sp, #112]
  42c118:	mov	w0, w24
  42c11c:	bl	4027c0 <iswalnum@plt>
  42c120:	cmp	w24, #0x5f
  42c124:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42c128:	ldrb	w0, [x26, #10]
  42c12c:	cset	w2, ne  // ne = any
  42c130:	bfi	w0, w2, #6, #1
  42c134:	strb	w0, [x26, #10]
  42c138:	ldr	w1, [sp, #112]
  42c13c:	sub	w0, w1, #0x27
  42c140:	cmp	w0, #0x56
  42c144:	b.hi	42c15c <_obstack_memory_used@@Base+0xd66c>  // b.pmore
  42c148:	ldr	x2, [sp, #144]
  42c14c:	ldrh	w0, [x2, w0, uxtw #1]
  42c150:	adr	x2, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c154:	add	x0, x2, w0, sxth #2
  42c158:	br	x0
  42c15c:	ldrb	w0, [x26, #8]
  42c160:	mov	x4, #0x0                   	// #0
  42c164:	str	x23, [x25, #72]
  42c168:	and	w1, w0, #0xfffffff7
  42c16c:	and	w1, w1, #0xff
  42c170:	cmp	w1, #0x2
  42c174:	b.eq	42be6c <_obstack_memory_used@@Base+0xd37c>  // b.none
  42c178:	cmp	x21, #0x0
  42c17c:	mov	x4, #0x0                   	// #0
  42c180:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  42c184:	b.eq	42be6c <_obstack_memory_used@@Base+0xd37c>  // b.none
  42c188:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c18c:	ldr	w0, [x26, #8]
  42c190:	mov	w1, #0x1                   	// #1
  42c194:	movk	w1, #0x20, lsl #16
  42c198:	and	w0, w0, #0xffffff00
  42c19c:	and	w0, w0, #0xffdfffff
  42c1a0:	orr	w0, w0, w1
  42c1a4:	str	w0, [x26, #8]
  42c1a8:	str	x24, [x25, #72]
  42c1ac:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c1b0:	str	w1, [sp, #112]
  42c1b4:	bl	4026a0 <__ctype_b_loc@plt>
  42c1b8:	ldr	w1, [sp, #112]
  42c1bc:	ldr	x0, [x0]
  42c1c0:	cmp	w1, #0x5f
  42c1c4:	ubfiz	x2, x1, #1, #8
  42c1c8:	ldrb	w3, [x26, #10]
  42c1cc:	ldrh	w0, [x0, x2]
  42c1d0:	and	w0, w0, #0x8
  42c1d4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42c1d8:	cset	w0, ne  // ne = any
  42c1dc:	bfi	w3, w0, #6, #1
  42c1e0:	strb	w3, [x26, #10]
  42c1e4:	b	42c13c <_obstack_memory_used@@Base+0xd64c>
  42c1e8:	mov	w0, #0x8                   	// #8
  42c1ec:	strb	w0, [x26, #8]
  42c1f0:	str	x24, [x25, #72]
  42c1f4:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c1f8:	mov	w0, #0xb                   	// #11
  42c1fc:	strb	w0, [x26, #8]
  42c200:	str	x24, [x25, #72]
  42c204:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c208:	ldr	x1, [sp, #136]
  42c20c:	mov	x0, #0x1200                	// #4608
  42c210:	cmp	x1, x0
  42c214:	b.ne	42be20 <_obstack_memory_used@@Base+0xd330>  // b.any
  42c218:	mov	w0, #0x17                  	// #23
  42c21c:	strb	w0, [x26, #8]
  42c220:	str	x24, [x25, #72]
  42c224:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c228:	mov	w0, #0x14                  	// #20
  42c22c:	strb	w0, [x26, #8]
  42c230:	str	x24, [x25, #72]
  42c234:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c238:	ldr	x0, [sp, #168]
  42c23c:	cbnz	x0, 42c24c <_obstack_memory_used@@Base+0xd75c>
  42c240:	ldr	x0, [x25, #88]
  42c244:	cmp	x0, x24
  42c248:	b.ne	42c500 <_obstack_memory_used@@Base+0xda10>  // b.any
  42c24c:	mov	w0, #0xc                   	// #12
  42c250:	strb	w0, [x26, #8]
  42c254:	mov	w0, #0x20                  	// #32
  42c258:	str	w0, [x26]
  42c25c:	str	x24, [x25, #72]
  42c260:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c264:	ldr	x0, [sp, #152]
  42c268:	cmp	x0, #0x8, lsl #12
  42c26c:	b.ne	42be20 <_obstack_memory_used@@Base+0xd330>  // b.any
  42c270:	mov	w0, #0xa                   	// #10
  42c274:	strb	w0, [x26, #8]
  42c278:	mov	x4, #0x0                   	// #0
  42c27c:	str	x24, [x25, #72]
  42c280:	b	42be6c <_obstack_memory_used@@Base+0xd37c>
  42c284:	ldr	x0, [sp, #120]
  42c288:	cbz	x0, 42be20 <_obstack_memory_used@@Base+0xd330>
  42c28c:	mov	w0, #0x9                   	// #9
  42c290:	strb	w0, [x26, #8]
  42c294:	mov	w0, #0x9                   	// #9
  42c298:	str	x24, [x25, #72]
  42c29c:	b	42c178 <_obstack_memory_used@@Base+0xd688>
  42c2a0:	cmp	w3, #0x1
  42c2a4:	b.le	42c2d4 <_obstack_memory_used@@Base+0xd7e4>
  42c2a8:	ldr	x0, [x25, #16]
  42c2ac:	ldr	w1, [x0, x24, lsl #2]
  42c2b0:	add	x0, x0, x24, lsl #2
  42c2b4:	cmn	w1, #0x1
  42c2b8:	b.eq	42c56c <_obstack_memory_used@@Base+0xda7c>  // b.none
  42c2bc:	ldr	x1, [x25, #48]
  42c2c0:	cmp	x1, x23
  42c2c4:	b.eq	42c2d4 <_obstack_memory_used@@Base+0xd7e4>  // b.none
  42c2c8:	ldr	w1, [x0, #4]
  42c2cc:	cmn	w1, #0x1
  42c2d0:	b.eq	42c56c <_obstack_memory_used@@Base+0xda7c>  // b.none
  42c2d4:	ldrb	w1, [x25, #140]
  42c2d8:	ldr	x0, [x25]
  42c2dc:	ldr	x5, [x25, #40]
  42c2e0:	cbz	w1, 42c560 <_obstack_memory_used@@Base+0xda70>
  42c2e4:	ldr	x1, [x25, #24]
  42c2e8:	add	x0, x0, x5
  42c2ec:	ldr	x1, [x1, x24, lsl #3]
  42c2f0:	ldrb	w1, [x0, x1]
  42c2f4:	tbz	w1, #7, 42c0f4 <_obstack_memory_used@@Base+0xd604>
  42c2f8:	b	42c0f0 <_obstack_memory_used@@Base+0xd600>
  42c2fc:	ldr	x0, [sp, #184]
  42c300:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c304:	sub	w0, w1, #0x31
  42c308:	mov	w1, #0x4                   	// #4
  42c30c:	strb	w1, [x26, #8]
  42c310:	sxtw	x0, w0
  42c314:	str	x0, [x26]
  42c318:	str	x23, [x25, #72]
  42c31c:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c320:	ldr	x0, [sp, #160]
  42c324:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c328:	mov	w0, #0xc                   	// #12
  42c32c:	strb	w0, [x26, #8]
  42c330:	mov	w0, #0x40                  	// #64
  42c334:	str	w0, [x26]
  42c338:	str	x23, [x25, #72]
  42c33c:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c340:	ldr	x0, [sp, #160]
  42c344:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c348:	mov	w0, #0xc                   	// #12
  42c34c:	strb	w0, [x26, #8]
  42c350:	mov	w0, #0x100                 	// #256
  42c354:	str	w0, [x26]
  42c358:	str	x23, [x25, #72]
  42c35c:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c360:	ldr	x0, [sp, #160]
  42c364:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c368:	mov	w0, #0x22                  	// #34
  42c36c:	strb	w0, [x26, #8]
  42c370:	str	x23, [x25, #72]
  42c374:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c378:	ldr	x0, [sp, #160]
  42c37c:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c380:	mov	w0, #0x20                  	// #32
  42c384:	strb	w0, [x26, #8]
  42c388:	str	x23, [x25, #72]
  42c38c:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c390:	ldr	x0, [sp, #136]
  42c394:	cmp	x0, #0x200
  42c398:	b.ne	42c15c <_obstack_memory_used@@Base+0xd66c>  // b.any
  42c39c:	mov	w0, #0x17                  	// #23
  42c3a0:	strb	w0, [x26, #8]
  42c3a4:	str	x23, [x25, #72]
  42c3a8:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c3ac:	ldr	x0, [sp, #152]
  42c3b0:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c3b4:	mov	w0, #0xa                   	// #10
  42c3b8:	strb	w0, [x26, #8]
  42c3bc:	mov	x4, #0x0                   	// #0
  42c3c0:	str	x23, [x25, #72]
  42c3c4:	b	42be6c <_obstack_memory_used@@Base+0xd37c>
  42c3c8:	ldr	x0, [sp, #136]
  42c3cc:	cmp	x0, #0x200
  42c3d0:	b.ne	42c15c <_obstack_memory_used@@Base+0xd66c>  // b.any
  42c3d4:	mov	w0, #0x18                  	// #24
  42c3d8:	strb	w0, [x26, #8]
  42c3dc:	str	x23, [x25, #72]
  42c3e0:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c3e4:	ldr	x0, [sp, #128]
  42c3e8:	cmp	x0, #0x2
  42c3ec:	b.ne	42c15c <_obstack_memory_used@@Base+0xd66c>  // b.any
  42c3f0:	mov	w0, #0x13                  	// #19
  42c3f4:	strb	w0, [x26, #8]
  42c3f8:	str	x23, [x25, #72]
  42c3fc:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c400:	ldr	x0, [sp, #160]
  42c404:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c408:	mov	w0, #0xc                   	// #12
  42c40c:	strb	w0, [x26, #8]
  42c410:	mov	w0, #0x200                 	// #512
  42c414:	str	w0, [x26]
  42c418:	str	x23, [x25, #72]
  42c41c:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c420:	ldr	x0, [sp, #160]
  42c424:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c428:	mov	w0, #0x23                  	// #35
  42c42c:	strb	w0, [x26, #8]
  42c430:	str	x23, [x25, #72]
  42c434:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c438:	ldr	x0, [sp, #160]
  42c43c:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c440:	mov	w0, #0x21                  	// #33
  42c444:	strb	w0, [x26, #8]
  42c448:	str	x23, [x25, #72]
  42c44c:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c450:	ldr	x0, [sp, #160]
  42c454:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c458:	mov	w0, #0xc                   	// #12
  42c45c:	strb	w0, [x26, #8]
  42c460:	mov	w0, #0x6                   	// #6
  42c464:	str	w0, [x26]
  42c468:	str	x23, [x25, #72]
  42c46c:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c470:	ldr	x0, [sp, #160]
  42c474:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c478:	mov	w0, #0xc                   	// #12
  42c47c:	strb	w0, [x26, #8]
  42c480:	mov	w0, #0x9                   	// #9
  42c484:	str	w0, [x26]
  42c488:	str	x23, [x25, #72]
  42c48c:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c490:	ldr	x0, [sp, #128]
  42c494:	cmp	x0, #0x2
  42c498:	b.ne	42c15c <_obstack_memory_used@@Base+0xd66c>  // b.any
  42c49c:	mov	w0, #0x12                  	// #18
  42c4a0:	strb	w0, [x26, #8]
  42c4a4:	str	x23, [x25, #72]
  42c4a8:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c4ac:	ldr	x0, [sp, #160]
  42c4b0:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c4b4:	mov	w0, #0xc                   	// #12
  42c4b8:	strb	w0, [x26, #8]
  42c4bc:	mov	w0, #0x80                  	// #128
  42c4c0:	str	w0, [x26]
  42c4c4:	str	x23, [x25, #72]
  42c4c8:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c4cc:	ldr	x0, [sp, #120]
  42c4d0:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c4d4:	mov	w0, #0x8                   	// #8
  42c4d8:	strb	w0, [x26, #8]
  42c4dc:	str	x23, [x25, #72]
  42c4e0:	b	42be24 <_obstack_memory_used@@Base+0xd334>
  42c4e4:	ldr	x0, [sp, #120]
  42c4e8:	cbnz	x0, 42c15c <_obstack_memory_used@@Base+0xd66c>
  42c4ec:	mov	w0, #0x9                   	// #9
  42c4f0:	strb	w0, [x26, #8]
  42c4f4:	mov	w0, #0x9                   	// #9
  42c4f8:	str	x23, [x25, #72]
  42c4fc:	b	42c178 <_obstack_memory_used@@Base+0xd688>
  42c500:	str	x24, [x25, #72]
  42c504:	mov	x1, x25
  42c508:	orr	x2, x19, #0x800000
  42c50c:	add	x0, sp, #0xc0
  42c510:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  42c514:	ldr	x23, [x25, #72]
  42c518:	ldrb	w0, [sp, #200]
  42c51c:	sub	x1, x23, #0x1
  42c520:	str	x1, [x25, #72]
  42c524:	sub	w0, w0, #0x9
  42c528:	and	w0, w0, #0xff
  42c52c:	cmp	w0, #0x1
  42c530:	b.hi	42c15c <_obstack_memory_used@@Base+0xd66c>  // b.pmore
  42c534:	mov	x24, x23
  42c538:	b	42c24c <_obstack_memory_used@@Base+0xd75c>
  42c53c:	cbz	x28, 42c554 <_obstack_memory_used@@Base+0xda64>
  42c540:	mov	x0, x28
  42c544:	mov	x28, #0x0                   	// #0
  42c548:	bl	422c58 <_obstack_memory_used@@Base+0x4168>
  42c54c:	ldp	x23, x24, [sp, #48]
  42c550:	b	42bf2c <_obstack_memory_used@@Base+0xd43c>
  42c554:	ldp	x23, x24, [sp, #48]
  42c558:	mov	x28, #0x0                   	// #0
  42c55c:	b	42bf2c <_obstack_memory_used@@Base+0xd43c>
  42c560:	add	x0, x0, x24
  42c564:	ldrb	w1, [x0, x5]
  42c568:	b	42c0f4 <_obstack_memory_used@@Base+0xd604>
  42c56c:	ldrb	w1, [x4, x24]
  42c570:	mov	w2, #0x1                   	// #1
  42c574:	strb	w1, [x26]
  42c578:	strb	w2, [x26, #8]
  42c57c:	b	42c110 <_obstack_memory_used@@Base+0xd620>
  42c580:	stp	x29, x30, [sp, #-304]!
  42c584:	mov	x29, sp
  42c588:	stp	x21, x22, [sp, #32]
  42c58c:	mov	x21, x0
  42c590:	mov	x22, x1
  42c594:	stp	x19, x20, [sp, #16]
  42c598:	mov	x20, x2
  42c59c:	ldrb	w0, [x0, #56]
  42c5a0:	ldp	x19, x1, [x21]
  42c5a4:	stp	x23, x24, [sp, #48]
  42c5a8:	mov	x24, x3
  42c5ac:	mov	w3, #0xffffff90            	// #-112
  42c5b0:	and	w0, w0, w3
  42c5b4:	stp	xzr, x24, [x21, #16]
  42c5b8:	str	xzr, [x21, #48]
  42c5bc:	cmp	x1, #0xe7
  42c5c0:	strb	w0, [x21, #56]
  42c5c4:	str	wzr, [sp, #112]
  42c5c8:	b.ls	42d718 <_obstack_memory_used@@Base+0xec28>  // b.plast
  42c5cc:	mov	x2, #0xe8                  	// #232
  42c5d0:	str	x2, [x21, #16]
  42c5d4:	mov	x0, x19
  42c5d8:	mov	w1, #0x0                   	// #0
  42c5dc:	bl	402510 <memset@plt>
  42c5e0:	mov	w0, #0xf                   	// #15
  42c5e4:	str	w0, [x19, #128]
  42c5e8:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  42c5ec:	movk	x0, #0x555, lsl #48
  42c5f0:	cmp	x20, x0
  42c5f4:	b.cs	42cc88 <_obstack_memory_used@@Base+0xe198>  // b.hs, b.nlast
  42c5f8:	stp	x25, x26, [sp, #64]
  42c5fc:	add	x25, x20, #0x1
  42c600:	stp	x27, x28, [sp, #80]
  42c604:	lsl	x0, x25, #4
  42c608:	str	x25, [x19, #8]
  42c60c:	bl	402440 <malloc@plt>
  42c610:	str	x0, [x19]
  42c614:	cbz	x20, 42d738 <_obstack_memory_used@@Base+0xec48>
  42c618:	mov	x1, #0x1                   	// #1
  42c61c:	nop
  42c620:	lsl	x1, x1, #1
  42c624:	cmp	x20, x1
  42c628:	b.cs	42c620 <_obstack_memory_used@@Base+0xdb30>  // b.hs, b.nlast
  42c62c:	sub	x23, x1, #0x1
  42c630:	mov	x0, #0x18                  	// #24
  42c634:	bl	402520 <calloc@plt>
  42c638:	str	x0, [x19, #64]
  42c63c:	str	x23, [x19, #136]
  42c640:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  42c644:	str	w0, [x19, #180]
  42c648:	mov	w0, #0xe                   	// #14
  42c64c:	bl	402400 <nl_langinfo@plt>
  42c650:	ldrb	w1, [x0]
  42c654:	and	w1, w1, #0xffffffdf
  42c658:	and	w1, w1, #0xff
  42c65c:	cmp	w1, #0x55
  42c660:	b.ne	42c6c0 <_obstack_memory_used@@Base+0xdbd0>  // b.any
  42c664:	ldrb	w1, [x0, #1]
  42c668:	and	w1, w1, #0xffffffdf
  42c66c:	and	w1, w1, #0xff
  42c670:	cmp	w1, #0x54
  42c674:	b.ne	42c6c0 <_obstack_memory_used@@Base+0xdbd0>  // b.any
  42c678:	ldrb	w1, [x0, #2]
  42c67c:	and	w1, w1, #0xffffffdf
  42c680:	and	w1, w1, #0xff
  42c684:	cmp	w1, #0x46
  42c688:	b.ne	42c6c0 <_obstack_memory_used@@Base+0xdbd0>  // b.any
  42c68c:	ldrb	w1, [x0, #3]
  42c690:	cmp	w1, #0x2d
  42c694:	cset	x1, eq  // eq = none
  42c698:	add	x1, x1, #0x3
  42c69c:	add	x2, x0, x1
  42c6a0:	ldrb	w0, [x0, x1]
  42c6a4:	cmp	w0, #0x38
  42c6a8:	b.ne	42c6c0 <_obstack_memory_used@@Base+0xdbd0>  // b.any
  42c6ac:	ldrb	w0, [x2, #1]
  42c6b0:	cbnz	w0, 42c6c0 <_obstack_memory_used@@Base+0xdbd0>
  42c6b4:	ldrb	w0, [x19, #176]
  42c6b8:	orr	w0, w0, #0x4
  42c6bc:	strb	w0, [x19, #176]
  42c6c0:	ldrb	w0, [x19, #176]
  42c6c4:	ldr	w1, [x19, #180]
  42c6c8:	and	w2, w0, #0xfffffff7
  42c6cc:	strb	w2, [x19, #176]
  42c6d0:	cmp	w1, #0x1
  42c6d4:	b.le	42c6e8 <_obstack_memory_used@@Base+0xdbf8>
  42c6d8:	tbz	w0, #2, 42ccb4 <_obstack_memory_used@@Base+0xe1c4>
  42c6dc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x13510>
  42c6e0:	add	x0, x0, #0x610
  42c6e4:	str	x0, [x19, #120]
  42c6e8:	ldr	x0, [x19]
  42c6ec:	cbz	x0, 42cc80 <_obstack_memory_used@@Base+0xe190>
  42c6f0:	ldr	x0, [x19, #64]
  42c6f4:	cbz	x0, 42cc80 <_obstack_memory_used@@Base+0xe190>
  42c6f8:	add	x0, sp, #0x90
  42c6fc:	stp	xzr, xzr, [sp, #184]
  42c700:	ands	x23, x24, #0x400000
  42c704:	stp	xzr, xzr, [sp, #200]
  42c708:	dup	v0.2d, x20
  42c70c:	cset	w6, ne  // ne = any
  42c710:	stp	xzr, xzr, [sp, #216]
  42c714:	mov	x27, #0x0                   	// #0
  42c718:	stp	xzr, xzr, [sp, #232]
  42c71c:	stp	xzr, xzr, [sp, #248]
  42c720:	stp	xzr, xzr, [x0, #120]
  42c724:	stp	xzr, xzr, [x0, #136]
  42c728:	ldr	x3, [x21, #40]
  42c72c:	str	wzr, [sp, #112]
  42c730:	ldrb	w1, [x19, #176]
  42c734:	orr	x26, x3, x23
  42c738:	ldr	w2, [x19, #180]
  42c73c:	cmp	x26, #0x0
  42c740:	str	x22, [sp, #144]
  42c744:	ubfx	x5, x1, #2, #1
  42c748:	cset	w4, ne  // ne = any
  42c74c:	ubfx	x1, x1, #3, #1
  42c750:	stp	xzr, xzr, [sp, #152]
  42c754:	stp	xzr, xzr, [sp, #168]
  42c758:	str	x3, [sp, #264]
  42c75c:	strb	w6, [sp, #280]
  42c760:	strb	w5, [sp, #281]
  42c764:	strb	w1, [sp, #282]
  42c768:	strb	w4, [sp, #283]
  42c76c:	str	w2, [sp, #288]
  42c770:	stp	q0, q0, [sp, #224]
  42c774:	cbnz	x20, 42cc54 <_obstack_memory_used@@Base+0xe164>
  42c778:	ldr	x0, [sp, #152]
  42c77c:	cmp	w4, #0x0
  42c780:	csel	x22, x0, x22, ne  // ne = any
  42c784:	str	x22, [sp, #152]
  42c788:	cmp	w2, #0x1
  42c78c:	cbz	x23, 42c820 <_obstack_memory_used@@Base+0xdd30>
  42c790:	b.le	42d698 <_obstack_memory_used@@Base+0xeba8>
  42c794:	mov	x22, #0x1fffffffffffffff    	// #2305843009213693951
  42c798:	add	x0, sp, #0x90
  42c79c:	bl	41f468 <_obstack_memory_used@@Base+0x978>
  42c7a0:	cbnz	w0, 42cbd8 <_obstack_memory_used@@Base+0xe0e8>
  42c7a4:	ldr	x0, [sp, #200]
  42c7a8:	cmp	x20, x0
  42c7ac:	b.le	42d7ac <_obstack_memory_used@@Base+0xecbc>
  42c7b0:	ldr	x1, [sp, #192]
  42c7b4:	ldrsw	x0, [x19, #180]
  42c7b8:	ldr	x25, [sp, #208]
  42c7bc:	add	x0, x0, x1
  42c7c0:	cmp	x25, x0
  42c7c4:	b.gt	42d7ac <_obstack_memory_used@@Base+0xecbc>
  42c7c8:	ldr	w0, [sp, #288]
  42c7cc:	lsl	x26, x25, #1
  42c7d0:	cmp	w0, #0x1
  42c7d4:	b.le	42c810 <_obstack_memory_used@@Base+0xdd20>
  42c7d8:	cmp	x26, x22
  42c7dc:	b.hi	42cbd4 <_obstack_memory_used@@Base+0xe0e4>  // b.pmore
  42c7e0:	ldr	x0, [sp, #160]
  42c7e4:	lsl	x1, x25, #3
  42c7e8:	bl	402550 <realloc@plt>
  42c7ec:	mov	x1, x0
  42c7f0:	cbz	x0, 42cbd4 <_obstack_memory_used@@Base+0xe0e4>
  42c7f4:	ldr	x0, [sp, #168]
  42c7f8:	str	x1, [sp, #160]
  42c7fc:	cbz	x0, 42c810 <_obstack_memory_used@@Base+0xdd20>
  42c800:	lsl	x1, x25, #4
  42c804:	bl	402550 <realloc@plt>
  42c808:	cbz	x0, 42cbd4 <_obstack_memory_used@@Base+0xe0e4>
  42c80c:	str	x0, [sp, #168]
  42c810:	ldrb	w0, [sp, #283]
  42c814:	cbnz	w0, 42cbb8 <_obstack_memory_used@@Base+0xe0c8>
  42c818:	str	x26, [sp, #208]
  42c81c:	b	42c798 <_obstack_memory_used@@Base+0xdca8>
  42c820:	b.gt	42d520 <_obstack_memory_used@@Base+0xea30>
  42c824:	cbz	x26, 42ce00 <_obstack_memory_used@@Base+0xe310>
  42c828:	ldr	x2, [sp, #232]
  42c82c:	ldr	x1, [sp, #192]
  42c830:	cmp	x2, x27
  42c834:	csel	x2, x2, x27, le
  42c838:	cmp	x2, x1
  42c83c:	b.le	42d8a0 <_obstack_memory_used@@Base+0xedb0>
  42c840:	ldr	x3, [sp, #144]
  42c844:	add	x0, x1, #0x1
  42c848:	ldr	x5, [sp, #184]
  42c84c:	add	x3, x3, x1
  42c850:	ldr	x4, [sp, #264]
  42c854:	cmp	x2, x0
  42c858:	ldrb	w3, [x3, x5]
  42c85c:	ldrb	w3, [x4, x3]
  42c860:	strb	w3, [x22, x1]
  42c864:	b.le	42c894 <_obstack_memory_used@@Base+0xdda4>
  42c868:	ldr	x1, [sp, #144]
  42c86c:	ldr	x3, [sp, #184]
  42c870:	add	x1, x1, x0
  42c874:	ldr	x4, [sp, #264]
  42c878:	ldrb	w3, [x1, x3]
  42c87c:	ldr	x1, [sp, #152]
  42c880:	ldrb	w3, [x4, x3]
  42c884:	strb	w3, [x1, x0]
  42c888:	add	x0, x0, #0x1
  42c88c:	cmp	x2, x0
  42c890:	b.ne	42c868 <_obstack_memory_used@@Base+0xdd78>  // b.any
  42c894:	dup	v0.2d, x2
  42c898:	str	wzr, [sp, #112]
  42c89c:	str	q0, [sp, #192]
  42c8a0:	orr	x2, x24, #0x800000
  42c8a4:	ldr	x25, [x21]
  42c8a8:	str	xzr, [x21, #48]
  42c8ac:	add	x1, sp, #0x90
  42c8b0:	add	x0, sp, #0x78
  42c8b4:	str	x24, [x25, #216]
  42c8b8:	bl	421dc0 <_obstack_memory_used@@Base+0x32d0>
  42c8bc:	mov	w6, w0
  42c8c0:	ldr	x1, [sp, #216]
  42c8c4:	mov	x3, x24
  42c8c8:	add	x0, sp, #0x90
  42c8cc:	add	x2, sp, #0x78
  42c8d0:	add	x5, sp, #0x70
  42c8d4:	mov	x4, #0x0                   	// #0
  42c8d8:	add	x6, x1, w6, sxtw
  42c8dc:	mov	x1, x21
  42c8e0:	str	x6, [sp, #216]
  42c8e4:	bl	42bc98 <_obstack_memory_used@@Base+0xd1a8>
  42c8e8:	mov	x24, x0
  42c8ec:	ldr	w1, [sp, #112]
  42c8f0:	cmp	w1, #0x0
  42c8f4:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  42c8f8:	b.eq	42d8a8 <_obstack_memory_used@@Base+0xedb8>  // b.none
  42c8fc:	ldr	w1, [x25, #128]
  42c900:	mov	x26, #0x0                   	// #0
  42c904:	ldr	x20, [x21]
  42c908:	cmp	w1, #0xf
  42c90c:	b.eq	42d778 <_obstack_memory_used@@Base+0xec88>  // b.none
  42c910:	mov	x2, #0x8                   	// #8
  42c914:	mov	w22, #0x40                  	// #64
  42c918:	add	w5, w1, #0x1
  42c91c:	smaddl	x22, w1, w22, x2
  42c920:	ldr	x2, [x25, #112]
  42c924:	sbfiz	x1, x1, #6, #32
  42c928:	add	x3, x2, x1
  42c92c:	add	x4, x1, #0x20
  42c930:	movi	v0.4s, #0x0
  42c934:	add	x4, x2, x4
  42c938:	mov	x0, #0x2                   	// #2
  42c93c:	str	w5, [x25, #128]
  42c940:	bfxil	x26, x0, #0, #8
  42c944:	str	xzr, [x3, #24]
  42c948:	stp	xzr, x26, [x3, #48]
  42c94c:	mov	x5, #0xffffffffffffffff    	// #-1
  42c950:	add	x22, x2, x22
  42c954:	stur	q0, [x3, #8]
  42c958:	mov	x2, x22
  42c95c:	ldrb	w0, [x4, #26]
  42c960:	and	w0, w0, #0xfffffff3
  42c964:	strb	w0, [x4, #26]
  42c968:	str	x5, [x3, #64]
  42c96c:	str	q0, [x3, #32]
  42c970:	cbz	x24, 42c9e8 <_obstack_memory_used@@Base+0xdef8>
  42c974:	ldr	w1, [x25, #128]
  42c978:	mov	x26, #0x0                   	// #0
  42c97c:	cmp	w1, #0xf
  42c980:	b.eq	42d840 <_obstack_memory_used@@Base+0xed50>  // b.none
  42c984:	mov	w2, #0x40                  	// #64
  42c988:	mov	x4, #0x8                   	// #8
  42c98c:	add	w6, w1, #0x1
  42c990:	smaddl	x4, w1, w2, x4
  42c994:	ldr	x2, [x25, #112]
  42c998:	sbfiz	x1, x1, #6, #32
  42c99c:	add	x0, x2, x1
  42c9a0:	add	x3, x1, #0x20
  42c9a4:	add	x3, x2, x3
  42c9a8:	mov	x5, #0x10                  	// #16
  42c9ac:	str	w6, [x25, #128]
  42c9b0:	bfxil	x26, x5, #0, #8
  42c9b4:	stp	xzr, x24, [x0, #8]
  42c9b8:	add	x2, x2, x4
  42c9bc:	mov	x5, #0xffffffffffffffff    	// #-1
  42c9c0:	str	x22, [x0, #24]
  42c9c4:	stp	xzr, x26, [x0, #48]
  42c9c8:	ldrb	w4, [x3, #26]
  42c9cc:	and	w4, w4, #0xfffffff3
  42c9d0:	strb	w4, [x3, #26]
  42c9d4:	stp	xzr, xzr, [x0, #32]
  42c9d8:	str	x5, [x0, #64]
  42c9dc:	str	x2, [x24]
  42c9e0:	cbz	x22, 42c9e8 <_obstack_memory_used@@Base+0xdef8>
  42c9e4:	str	x2, [x22]
  42c9e8:	cmp	x22, #0x0
  42c9ec:	cset	w0, eq  // eq = none
  42c9f0:	cmp	x2, #0x0
  42c9f4:	csinc	w0, w0, wzr, ne  // ne = any
  42c9f8:	cbnz	w0, 42d768 <_obstack_memory_used@@Base+0xec78>
  42c9fc:	ldr	x22, [x20, #8]
  42ca00:	str	x2, [x19, #104]
  42ca04:	lsl	x25, x22, #3
  42ca08:	add	x22, x22, x22, lsl #1
  42ca0c:	mov	x0, x25
  42ca10:	bl	402440 <malloc@plt>
  42ca14:	mov	x24, x0
  42ca18:	str	x24, [x20, #24]
  42ca1c:	mov	x0, x25
  42ca20:	lsl	x22, x22, #3
  42ca24:	bl	402440 <malloc@plt>
  42ca28:	mov	x25, x0
  42ca2c:	str	x25, [x20, #32]
  42ca30:	mov	x0, x22
  42ca34:	bl	402440 <malloc@plt>
  42ca38:	mov	x1, x0
  42ca3c:	str	x1, [x20, #40]
  42ca40:	mov	x0, x22
  42ca44:	mov	x22, x1
  42ca48:	bl	402440 <malloc@plt>
  42ca4c:	str	x0, [x20, #48]
  42ca50:	cbz	x24, 42d508 <_obstack_memory_used@@Base+0xea18>
  42ca54:	cbz	x25, 42d508 <_obstack_memory_used@@Base+0xea18>
  42ca58:	cbz	x22, 42d508 <_obstack_memory_used@@Base+0xea18>
  42ca5c:	cbz	x0, 42d508 <_obstack_memory_used@@Base+0xea18>
  42ca60:	ldr	x22, [x21, #48]
  42ca64:	lsl	x0, x22, #3
  42ca68:	bl	402440 <malloc@plt>
  42ca6c:	str	x0, [x20, #224]
  42ca70:	ldr	x1, [x20, #104]
  42ca74:	cbz	x0, 42cb50 <_obstack_memory_used@@Base+0xe060>
  42ca78:	mov	x2, #0x0                   	// #0
  42ca7c:	cbz	x22, 42ca90 <_obstack_memory_used@@Base+0xdfa0>
  42ca80:	str	x2, [x0, x2, lsl #3]
  42ca84:	add	x2, x2, #0x1
  42ca88:	cmp	x2, x22
  42ca8c:	b.ne	42ca80 <_obstack_memory_used@@Base+0xdf90>  // b.any
  42ca90:	ldrb	w4, [x1, #48]
  42ca94:	mov	x7, #0x1                   	// #1
  42ca98:	mov	x3, x1
  42ca9c:	mov	w6, w7
  42caa0:	cmp	w4, #0x4
  42caa4:	ldr	x2, [x1, #8]
  42caa8:	b.eq	42cad4 <_obstack_memory_used@@Base+0xdfe4>  // b.none
  42caac:	nop
  42cab0:	cmp	w4, #0x11
  42cab4:	b.eq	42cd9c <_obstack_memory_used@@Base+0xe2ac>  // b.none
  42cab8:	cbz	x2, 42caf8 <_obstack_memory_used@@Base+0xe008>
  42cabc:	ldrb	w4, [x2, #48]
  42cac0:	ldr	x5, [x2, #8]
  42cac4:	mov	x3, x2
  42cac8:	cmp	w4, #0x4
  42cacc:	mov	x2, x5
  42cad0:	b.ne	42cab0 <_obstack_memory_used@@Base+0xdfc0>  // b.any
  42cad4:	ldrsw	x4, [x3, #40]
  42cad8:	ldr	x5, [x20, #160]
  42cadc:	ldr	x4, [x0, x4, lsl #3]
  42cae0:	str	x4, [x3, #40]
  42cae4:	lsl	w4, w6, w4
  42cae8:	sxtw	x4, w4
  42caec:	orr	x4, x5, x4
  42caf0:	str	x4, [x20, #160]
  42caf4:	cbnz	x2, 42cabc <_obstack_memory_used@@Base+0xdfcc>
  42caf8:	mov	x4, #0x0                   	// #0
  42cafc:	b	42cb04 <_obstack_memory_used@@Base+0xe014>
  42cb00:	mov	x3, x2
  42cb04:	ldr	x2, [x3, #16]
  42cb08:	cmp	x2, #0x0
  42cb0c:	ccmp	x2, x4, #0x4, ne  // ne = any
  42cb10:	b.ne	42cabc <_obstack_memory_used@@Base+0xdfcc>  // b.any
  42cb14:	ldr	x2, [x3]
  42cb18:	mov	x4, x3
  42cb1c:	cbnz	x2, 42cb00 <_obstack_memory_used@@Base+0xe010>
  42cb20:	cbz	x22, 42cb40 <_obstack_memory_used@@Base+0xe050>
  42cb24:	nop
  42cb28:	ldr	x3, [x0, x2, lsl #3]
  42cb2c:	cmp	x2, x3
  42cb30:	b.ne	42cb50 <_obstack_memory_used@@Base+0xe060>  // b.any
  42cb34:	add	x2, x2, #0x1
  42cb38:	cmp	x2, x22
  42cb3c:	b.ne	42cb28 <_obstack_memory_used@@Base+0xe038>  // b.any
  42cb40:	bl	4026b0 <free@plt>
  42cb44:	str	xzr, [x20, #224]
  42cb48:	ldr	x1, [x20, #104]
  42cb4c:	nop
  42cb50:	mov	x22, x1
  42cb54:	ldr	x1, [x1, #8]
  42cb58:	cbnz	x1, 42cb50 <_obstack_memory_used@@Base+0xe060>
  42cb5c:	ldr	x1, [x22, #16]
  42cb60:	cbnz	x1, 42cb50 <_obstack_memory_used@@Base+0xe060>
  42cb64:	mov	x2, #0x0                   	// #0
  42cb68:	str	wzr, [sp, #120]
  42cb6c:	cbz	x1, 42cb7c <_obstack_memory_used@@Base+0xe08c>
  42cb70:	ldrb	w0, [x1, #48]
  42cb74:	cmp	w0, #0x11
  42cb78:	b.eq	42cd50 <_obstack_memory_used@@Base+0xe260>  // b.none
  42cb7c:	cbz	x2, 42cb94 <_obstack_memory_used@@Base+0xe0a4>
  42cb80:	ldrb	w0, [x2, #48]
  42cb84:	cmp	w0, #0x11
  42cb88:	b.eq	42cd80 <_obstack_memory_used@@Base+0xe290>  // b.none
  42cb8c:	ldr	w0, [sp, #120]
  42cb90:	cbnz	w0, 42cbd8 <_obstack_memory_used@@Base+0xe0e8>
  42cb94:	ldr	x0, [x22]
  42cb98:	cbz	x0, 42ce10 <_obstack_memory_used@@Base+0xe320>
  42cb9c:	ldr	x2, [x0, #16]
  42cba0:	cmp	x2, #0x0
  42cba4:	ccmp	x22, x2, #0x4, ne  // ne = any
  42cba8:	b.ne	42d7a4 <_obstack_memory_used@@Base+0xecb4>  // b.any
  42cbac:	mov	x22, x0
  42cbb0:	ldr	x1, [x0, #8]
  42cbb4:	b	42cb68 <_obstack_memory_used@@Base+0xe078>
  42cbb8:	ldr	x0, [sp, #152]
  42cbbc:	mov	x1, x26
  42cbc0:	bl	402550 <realloc@plt>
  42cbc4:	cbz	x0, 42cbd4 <_obstack_memory_used@@Base+0xe0e4>
  42cbc8:	str	x0, [sp, #152]
  42cbcc:	str	x26, [sp, #208]
  42cbd0:	b	42c798 <_obstack_memory_used@@Base+0xdca8>
  42cbd4:	mov	w0, #0xc                   	// #12
  42cbd8:	ldr	x20, [x21]
  42cbdc:	str	w0, [sp, #112]
  42cbe0:	ldr	x22, [x20, #112]
  42cbe4:	cbz	x22, 42cbf8 <_obstack_memory_used@@Base+0xe108>
  42cbe8:	mov	x0, x22
  42cbec:	ldr	x22, [x22]
  42cbf0:	bl	4026b0 <free@plt>
  42cbf4:	cbnz	x22, 42cbe8 <_obstack_memory_used@@Base+0xe0f8>
  42cbf8:	ldr	x0, [x20, #32]
  42cbfc:	mov	w1, #0xf                   	// #15
  42cc00:	stp	xzr, xzr, [x20, #104]
  42cc04:	str	w1, [x20, #128]
  42cc08:	bl	4026b0 <free@plt>
  42cc0c:	str	xzr, [x20, #32]
  42cc10:	ldr	x0, [sp, #160]
  42cc14:	bl	4026b0 <free@plt>
  42cc18:	ldr	x0, [sp, #168]
  42cc1c:	bl	4026b0 <free@plt>
  42cc20:	ldrb	w0, [sp, #283]
  42cc24:	cbnz	w0, 42cdec <_obstack_memory_used@@Base+0xe2fc>
  42cc28:	mov	x0, x19
  42cc2c:	bl	422da8 <_obstack_memory_used@@Base+0x42b8>
  42cc30:	ldr	w0, [sp, #112]
  42cc34:	ldp	x25, x26, [sp, #64]
  42cc38:	ldp	x27, x28, [sp, #80]
  42cc3c:	stp	xzr, xzr, [x21]
  42cc40:	ldp	x19, x20, [sp, #16]
  42cc44:	ldp	x21, x22, [sp, #32]
  42cc48:	ldp	x23, x24, [sp, #48]
  42cc4c:	ldp	x29, x30, [sp], #304
  42cc50:	ret
  42cc54:	cmp	w2, #0x1
  42cc58:	mov	x27, x25
  42cc5c:	b.le	42cc70 <_obstack_memory_used@@Base+0xe180>
  42cc60:	lsl	x0, x25, #2
  42cc64:	bl	402440 <malloc@plt>
  42cc68:	cbz	x0, 42d7b4 <_obstack_memory_used@@Base+0xecc4>
  42cc6c:	str	x0, [sp, #160]
  42cc70:	cbnz	x26, 42d6f4 <_obstack_memory_used@@Base+0xec04>
  42cc74:	ldr	w2, [x19, #180]
  42cc78:	str	x25, [sp, #208]
  42cc7c:	b	42c784 <_obstack_memory_used@@Base+0xdc94>
  42cc80:	ldp	x25, x26, [sp, #64]
  42cc84:	ldp	x27, x28, [sp, #80]
  42cc88:	mov	w1, #0xc                   	// #12
  42cc8c:	mov	x0, x19
  42cc90:	str	w1, [sp, #112]
  42cc94:	bl	422da8 <_obstack_memory_used@@Base+0x42b8>
  42cc98:	stp	xzr, xzr, [x21]
  42cc9c:	ldr	w0, [sp, #112]
  42cca0:	ldp	x19, x20, [sp, #16]
  42cca4:	ldp	x21, x22, [sp, #32]
  42cca8:	ldp	x23, x24, [sp, #48]
  42ccac:	ldp	x29, x30, [sp], #304
  42ccb0:	ret
  42ccb4:	mov	x1, #0x1                   	// #1
  42ccb8:	mov	x0, #0x20                  	// #32
  42ccbc:	bl	402520 <calloc@plt>
  42ccc0:	str	x0, [x19, #120]
  42ccc4:	cbz	x0, 42cc80 <_obstack_memory_used@@Base+0xe190>
  42ccc8:	mov	x27, #0x0                   	// #0
  42cccc:	mov	x26, #0x1                   	// #1
  42ccd0:	lsl	w23, w27, #3
  42ccd4:	mov	w28, #0x0                   	// #0
  42ccd8:	b	42ccfc <_obstack_memory_used@@Base+0xe20c>
  42ccdc:	cbnz	w3, 42ccec <_obstack_memory_used@@Base+0xe1fc>
  42cce0:	ldrb	w0, [x19, #176]
  42cce4:	orr	w0, w0, #0x8
  42cce8:	strb	w0, [x19, #176]
  42ccec:	add	w28, w28, #0x1
  42ccf0:	add	w23, w23, #0x1
  42ccf4:	cmp	w28, #0x40
  42ccf8:	b.eq	42cd40 <_obstack_memory_used@@Base+0xe250>  // b.none
  42ccfc:	mov	w0, w23
  42cd00:	bl	4025e0 <btowc@plt>
  42cd04:	and	w3, w23, #0xffffff80
  42cd08:	cmn	w0, #0x1
  42cd0c:	b.eq	42ccdc <_obstack_memory_used@@Base+0xe1ec>  // b.none
  42cd10:	ldr	x4, [x19, #120]
  42cd14:	lsl	x1, x26, x28
  42cd18:	ldr	x2, [x4, x27]
  42cd1c:	orr	x1, x2, x1
  42cd20:	str	x1, [x4, x27]
  42cd24:	cbnz	w3, 42ccec <_obstack_memory_used@@Base+0xe1fc>
  42cd28:	cmp	w0, w23
  42cd2c:	b.ne	42cce0 <_obstack_memory_used@@Base+0xe1f0>  // b.any
  42cd30:	add	w28, w28, #0x1
  42cd34:	add	w23, w23, #0x1
  42cd38:	cmp	w28, #0x40
  42cd3c:	b.ne	42ccfc <_obstack_memory_used@@Base+0xe20c>  // b.any
  42cd40:	add	x27, x27, #0x8
  42cd44:	cmp	x27, #0x20
  42cd48:	b.ne	42ccd0 <_obstack_memory_used@@Base+0xe1e0>  // b.any
  42cd4c:	b	42c6e8 <_obstack_memory_used@@Base+0xdbf8>
  42cd50:	mov	x2, x1
  42cd54:	add	x0, sp, #0x78
  42cd58:	mov	x1, x21
  42cd5c:	bl	428f00 <_obstack_memory_used@@Base+0xa410>
  42cd60:	str	x0, [x22, #8]
  42cd64:	cbz	x0, 42cd6c <_obstack_memory_used@@Base+0xe27c>
  42cd68:	str	x22, [x0]
  42cd6c:	ldr	x2, [x22, #16]
  42cd70:	cbz	x2, 42cb8c <_obstack_memory_used@@Base+0xe09c>
  42cd74:	ldrb	w0, [x2, #48]
  42cd78:	cmp	w0, #0x11
  42cd7c:	b.ne	42cb8c <_obstack_memory_used@@Base+0xe09c>  // b.any
  42cd80:	mov	x1, x21
  42cd84:	add	x0, sp, #0x78
  42cd88:	bl	428f00 <_obstack_memory_used@@Base+0xa410>
  42cd8c:	str	x0, [x22, #16]
  42cd90:	cbz	x0, 42cb8c <_obstack_memory_used@@Base+0xe09c>
  42cd94:	str	x22, [x0]
  42cd98:	b	42cb8c <_obstack_memory_used@@Base+0xe09c>
  42cd9c:	cbz	x2, 42caf8 <_obstack_memory_used@@Base+0xe008>
  42cda0:	ldrb	w4, [x2, #48]
  42cda4:	ldr	x5, [x2, #8]
  42cda8:	cmp	w4, #0x11
  42cdac:	b.ne	42cac4 <_obstack_memory_used@@Base+0xdfd4>  // b.any
  42cdb0:	ldr	x4, [x2, #40]
  42cdb4:	str	x5, [x3, #8]
  42cdb8:	cbz	x5, 42cdc0 <_obstack_memory_used@@Base+0xe2d0>
  42cdbc:	str	x3, [x5]
  42cdc0:	ldr	x8, [x3, #40]
  42cdc4:	mov	x2, x5
  42cdc8:	cmp	x4, #0x3f
  42cdcc:	ldr	x5, [x0, x8, lsl #3]
  42cdd0:	str	x5, [x0, x4, lsl #3]
  42cdd4:	b.gt	42cab8 <_obstack_memory_used@@Base+0xdfc8>
  42cdd8:	ldr	x5, [x20, #160]
  42cddc:	lsl	x4, x7, x4
  42cde0:	bic	x4, x5, x4
  42cde4:	str	x4, [x20, #160]
  42cde8:	b	42cab8 <_obstack_memory_used@@Base+0xdfc8>
  42cdec:	ldr	x0, [sp, #152]
  42cdf0:	bl	4026b0 <free@plt>
  42cdf4:	b	42cc28 <_obstack_memory_used@@Base+0xe138>
  42cdf8:	mov	x27, x20
  42cdfc:	nop
  42ce00:	dup	v0.2d, x27
  42ce04:	str	wzr, [sp, #112]
  42ce08:	str	q0, [sp, #192]
  42ce0c:	b	42c8a0 <_obstack_memory_used@@Base+0xddb0>
  42ce10:	ldr	x0, [x20, #104]
  42ce14:	nop
  42ce18:	mov	x22, x0
  42ce1c:	ldr	x0, [x0, #8]
  42ce20:	cbnz	x0, 42ce18 <_obstack_memory_used@@Base+0xe328>
  42ce24:	ldr	x0, [x22, #16]
  42ce28:	cbnz	x0, 42ce18 <_obstack_memory_used@@Base+0xe328>
  42ce2c:	b	42ce60 <_obstack_memory_used@@Base+0xe370>
  42ce30:	ldr	x0, [x22, #8]
  42ce34:	ldr	x1, [x0, #24]
  42ce38:	ldr	x0, [x0, #56]
  42ce3c:	str	x1, [x22, #24]
  42ce40:	str	x0, [x22, #56]
  42ce44:	ldr	x1, [x22]
  42ce48:	cbz	x1, 42cec0 <_obstack_memory_used@@Base+0xe3d0>
  42ce4c:	ldr	x0, [x1, #16]
  42ce50:	cmp	x0, #0x0
  42ce54:	ccmp	x22, x0, #0x4, ne  // ne = any
  42ce58:	b.ne	42ce18 <_obstack_memory_used@@Base+0xe328>  // b.any
  42ce5c:	mov	x22, x1
  42ce60:	ldrb	w0, [x22, #48]
  42ce64:	cmp	w0, #0x10
  42ce68:	b.eq	42ce30 <_obstack_memory_used@@Base+0xe340>  // b.none
  42ce6c:	ldp	x2, x3, [x22, #40]
  42ce70:	str	x22, [x22, #24]
  42ce74:	mov	x0, x20
  42ce78:	mov	x1, x2
  42ce7c:	mov	x2, x3
  42ce80:	bl	41fd78 <_obstack_memory_used@@Base+0x1288>
  42ce84:	str	x0, [x22, #56]
  42ce88:	cmn	x0, #0x1
  42ce8c:	b.eq	42cbd4 <_obstack_memory_used@@Base+0xe0e4>  // b.none
  42ce90:	ldrb	w1, [x22, #48]
  42ce94:	cmp	w1, #0xc
  42ce98:	b.ne	42ce44 <_obstack_memory_used@@Base+0xe354>  // b.any
  42ce9c:	ldr	x1, [x20]
  42cea0:	ldr	w2, [x22, #40]
  42cea4:	add	x0, x1, x0, lsl #4
  42cea8:	ldr	w1, [x0, #8]
  42ceac:	bfi	w1, w2, #8, #10
  42ceb0:	str	w1, [x0, #8]
  42ceb4:	ldr	x1, [x22]
  42ceb8:	cbnz	x1, 42ce4c <_obstack_memory_used@@Base+0xe35c>
  42cebc:	nop
  42cec0:	ldr	x22, [x20, #104]
  42cec4:	mov	x0, x22
  42cec8:	ldrb	w2, [x0, #48]
  42cecc:	ldr	x1, [x0, #8]
  42ced0:	cmp	w2, #0xb
  42ced4:	b.eq	42cf14 <_obstack_memory_used@@Base+0xe424>  // b.none
  42ced8:	cmp	w2, #0x10
  42cedc:	b.eq	42d0b8 <_obstack_memory_used@@Base+0xe5c8>  // b.none
  42cee0:	cbz	x1, 42ceec <_obstack_memory_used@@Base+0xe3fc>
  42cee4:	ldr	x2, [x0, #32]
  42cee8:	str	x2, [x1, #32]
  42ceec:	ldr	x2, [x0, #16]
  42cef0:	cbz	x2, 42cefc <_obstack_memory_used@@Base+0xe40c>
  42cef4:	ldr	x3, [x0, #32]
  42cef8:	str	x3, [x2, #32]
  42cefc:	cbz	x1, 42cf2c <_obstack_memory_used@@Base+0xe43c>
  42cf00:	mov	x0, x1
  42cf04:	ldrb	w2, [x0, #48]
  42cf08:	ldr	x1, [x0, #8]
  42cf0c:	cmp	w2, #0xb
  42cf10:	b.ne	42ced8 <_obstack_memory_used@@Base+0xe3e8>  // b.any
  42cf14:	str	x0, [x1, #32]
  42cf18:	mov	x0, x1
  42cf1c:	b	42cf04 <_obstack_memory_used@@Base+0xe414>
  42cf20:	ldr	x2, [x3, #16]
  42cf24:	mov	x1, x0
  42cf28:	mov	x0, x3
  42cf2c:	cmp	x2, #0x0
  42cf30:	ccmp	x1, x2, #0x4, ne  // ne = any
  42cf34:	b.ne	42d654 <_obstack_memory_used@@Base+0xeb64>  // b.any
  42cf38:	ldr	x3, [x0]
  42cf3c:	cbnz	x3, 42cf20 <_obstack_memory_used@@Base+0xe430>
  42cf40:	ldrb	w0, [x22, #48]
  42cf44:	mov	x24, #0x2                   	// #2
  42cf48:	ldr	x1, [x22, #56]
  42cf4c:	cmp	w0, #0xb
  42cf50:	b.hi	42cfd0 <_obstack_memory_used@@Base+0xe4e0>  // b.pmore
  42cf54:	nop
  42cf58:	cmp	w0, #0x9
  42cf5c:	b.hi	42d138 <_obstack_memory_used@@Base+0xe648>  // b.pmore
  42cf60:	cmp	w0, #0x4
  42cf64:	b.eq	42d104 <_obstack_memory_used@@Base+0xe614>  // b.none
  42cf68:	b.ls	42d094 <_obstack_memory_used@@Base+0xe5a4>  // b.plast
  42cf6c:	sub	w0, w0, #0x8
  42cf70:	and	w0, w0, #0xff
  42cf74:	cmp	w0, #0x1
  42cf78:	b.hi	42d09c <_obstack_memory_used@@Base+0xe5ac>  // b.pmore
  42cf7c:	ldr	x3, [x22, #32]
  42cf80:	add	x1, x1, x1, lsl #1
  42cf84:	ldr	x2, [x20, #40]
  42cf88:	lsl	x1, x1, #3
  42cf8c:	ldr	x26, [x3, #56]
  42cf90:	add	x27, x2, x1
  42cf94:	mov	x0, #0x8                   	// #8
  42cf98:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x12510>
  42cf9c:	ldr	q0, [x3, #2768]
  42cfa0:	str	q0, [x2, x1]
  42cfa4:	bl	402440 <malloc@plt>
  42cfa8:	str	x0, [x27, #16]
  42cfac:	cbz	x0, 42d834 <_obstack_memory_used@@Base+0xed44>
  42cfb0:	str	x26, [x0]
  42cfb4:	ldr	x27, [x22, #8]
  42cfb8:	cbz	x27, 42cfec <_obstack_memory_used@@Base+0xe4fc>
  42cfbc:	mov	x22, x27
  42cfc0:	ldrb	w0, [x22, #48]
  42cfc4:	ldr	x1, [x22, #56]
  42cfc8:	cmp	w0, #0xb
  42cfcc:	b.ls	42cf58 <_obstack_memory_used@@Base+0xe468>  // b.plast
  42cfd0:	cmp	w0, #0xc
  42cfd4:	b.eq	42cf7c <_obstack_memory_used@@Base+0xe48c>  // b.none
  42cfd8:	cmp	w0, #0x10
  42cfdc:	b.ne	42d09c <_obstack_memory_used@@Base+0xe5ac>  // b.any
  42cfe0:	ldr	x27, [x22, #8]
  42cfe4:	b	42cfb8 <_obstack_memory_used@@Base+0xe4c8>
  42cfe8:	mov	x22, x0
  42cfec:	ldr	x0, [x22, #16]
  42cff0:	cmp	x0, #0x0
  42cff4:	cset	w26, eq  // eq = none
  42cff8:	cmp	x0, x27
  42cffc:	csinc	w26, w26, wzr, ne  // ne = any
  42d000:	cbz	w26, 42d648 <_obstack_memory_used@@Base+0xeb58>
  42d004:	ldr	x0, [x22]
  42d008:	mov	x27, x22
  42d00c:	cbnz	x0, 42cfe8 <_obstack_memory_used@@Base+0xe4f8>
  42d010:	ldr	x1, [x20, #16]
  42d014:	mov	w25, #0x0                   	// #0
  42d018:	mov	x22, #0x0                   	// #0
  42d01c:	nop
  42d020:	cmp	x1, x22
  42d024:	b.eq	42d04c <_obstack_memory_used@@Base+0xe55c>  // b.none
  42d028:	add	x24, x22, x22, lsl #1
  42d02c:	lsl	x24, x24, #3
  42d030:	ldr	x0, [x20, #48]
  42d034:	add	x0, x0, x24
  42d038:	ldr	x0, [x0, #8]
  42d03c:	cbz	x0, 42d060 <_obstack_memory_used@@Base+0xe570>
  42d040:	add	x22, x22, #0x1
  42d044:	cmp	x1, x22
  42d048:	b.ne	42d028 <_obstack_memory_used@@Base+0xe538>  // b.any
  42d04c:	cbz	w25, 42d1a0 <_obstack_memory_used@@Base+0xe6b0>
  42d050:	mov	w25, #0x0                   	// #0
  42d054:	mov	x24, #0x0                   	// #0
  42d058:	mov	x22, #0x0                   	// #0
  42d05c:	b	42d030 <_obstack_memory_used@@Base+0xe540>
  42d060:	mov	x2, x22
  42d064:	mov	x1, x20
  42d068:	add	x0, sp, #0x78
  42d06c:	mov	w3, #0x1                   	// #1
  42d070:	bl	4233f0 <_obstack_memory_used@@Base+0x4900>
  42d074:	cbnz	w0, 42cbd8 <_obstack_memory_used@@Base+0xe0e8>
  42d078:	ldr	x0, [x20, #48]
  42d07c:	add	x22, x22, #0x1
  42d080:	add	x24, x0, x24
  42d084:	ldr	x0, [x24, #8]
  42d088:	cbz	x0, 42d0d4 <_obstack_memory_used@@Base+0xe5e4>
  42d08c:	ldr	x1, [x20, #16]
  42d090:	b	42d020 <_obstack_memory_used@@Base+0xe530>
  42d094:	cmp	w0, #0x2
  42d098:	b.eq	42cfb4 <_obstack_memory_used@@Base+0xe4c4>  // b.none
  42d09c:	ldr	x2, [x22, #32]
  42d0a0:	ldr	x0, [x20, #24]
  42d0a4:	ldr	x27, [x22, #8]
  42d0a8:	ldr	x2, [x2, #56]
  42d0ac:	str	x2, [x0, x1, lsl #3]
  42d0b0:	cbnz	x27, 42cfbc <_obstack_memory_used@@Base+0xe4cc>
  42d0b4:	b	42cfec <_obstack_memory_used@@Base+0xe4fc>
  42d0b8:	ldr	x2, [x0, #16]
  42d0bc:	ldr	x3, [x2, #24]
  42d0c0:	str	x3, [x1, #32]
  42d0c4:	ldr	x0, [x0, #32]
  42d0c8:	str	x0, [x2, #32]
  42d0cc:	mov	x0, x1
  42d0d0:	b	42cf04 <_obstack_memory_used@@Base+0xe414>
  42d0d4:	ldr	x0, [sp, #136]
  42d0d8:	bl	4026b0 <free@plt>
  42d0dc:	ldr	x1, [x20, #16]
  42d0e0:	cmp	x1, x22
  42d0e4:	b.eq	42d4f0 <_obstack_memory_used@@Base+0xea00>  // b.none
  42d0e8:	add	x24, x22, x22, lsl #1
  42d0ec:	mov	w25, w26
  42d0f0:	ldr	x0, [x20, #48]
  42d0f4:	lsl	x24, x24, #3
  42d0f8:	add	x0, x0, x24
  42d0fc:	ldr	x0, [x0, #8]
  42d100:	b	42d03c <_obstack_memory_used@@Base+0xe54c>
  42d104:	ldr	x2, [x22, #32]
  42d108:	ldr	x0, [x20, #24]
  42d10c:	ldr	x26, [x2, #56]
  42d110:	str	x26, [x0, x1, lsl #3]
  42d114:	ldrb	w0, [x22, #48]
  42d118:	cmp	w0, #0x4
  42d11c:	b.ne	42cfb4 <_obstack_memory_used@@Base+0xe4c4>  // b.any
  42d120:	add	x1, x1, x1, lsl #1
  42d124:	mov	x0, #0x8                   	// #8
  42d128:	ldr	x2, [x20, #40]
  42d12c:	lsl	x1, x1, #3
  42d130:	add	x27, x2, x1
  42d134:	b	42cf98 <_obstack_memory_used@@Base+0xe4a8>
  42d138:	ldrb	w0, [x20, #176]
  42d13c:	orr	w0, w0, #0x1
  42d140:	strb	w0, [x20, #176]
  42d144:	ldr	x27, [x22, #8]
  42d148:	cbz	x27, 42d680 <_obstack_memory_used@@Base+0xeb90>
  42d14c:	ldr	x0, [x27, #24]
  42d150:	ldr	x28, [x0, #56]
  42d154:	ldr	x0, [x22, #16]
  42d158:	cbz	x0, 42d674 <_obstack_memory_used@@Base+0xeb84>
  42d15c:	ldr	x0, [x0, #24]
  42d160:	ldr	x25, [x0, #56]
  42d164:	add	x1, x1, x1, lsl #1
  42d168:	ldr	x2, [x20, #40]
  42d16c:	mov	x0, #0x10                  	// #16
  42d170:	add	x26, x2, x1, lsl #3
  42d174:	str	x24, [x2, x1, lsl #3]
  42d178:	bl	402440 <malloc@plt>
  42d17c:	str	x0, [x26, #16]
  42d180:	cbz	x0, 42cbd4 <_obstack_memory_used@@Base+0xe0e4>
  42d184:	cmp	x28, x25
  42d188:	b.eq	42d660 <_obstack_memory_used@@Base+0xeb70>  // b.none
  42d18c:	str	x24, [x26, #8]
  42d190:	b.ge	42d68c <_obstack_memory_used@@Base+0xeb9c>  // b.tcont
  42d194:	stp	x28, x25, [x0]
  42d198:	cbnz	x27, 42cfbc <_obstack_memory_used@@Base+0xe4cc>
  42d19c:	b	42cfec <_obstack_memory_used@@Base+0xe4fc>
  42d1a0:	ldrb	w0, [x21, #56]
  42d1a4:	tbnz	w0, #4, 42d1b8 <_obstack_memory_used@@Base+0xe6c8>
  42d1a8:	ldr	x0, [x21, #48]
  42d1ac:	cbz	x0, 42d1b8 <_obstack_memory_used@@Base+0xe6c8>
  42d1b0:	ldrb	w0, [x20, #176]
  42d1b4:	tbnz	w0, #0, 42d1c0 <_obstack_memory_used@@Base+0xe6d0>
  42d1b8:	ldr	x0, [x20, #152]
  42d1bc:	cbz	x0, 42d2b0 <_obstack_memory_used@@Base+0xe7c0>
  42d1c0:	add	x0, x22, x22, lsl #1
  42d1c4:	lsl	x0, x0, #3
  42d1c8:	bl	402440 <malloc@plt>
  42d1cc:	str	x0, [x20, #56]
  42d1d0:	cbz	x0, 42d7b4 <_obstack_memory_used@@Base+0xecc4>
  42d1d4:	mov	x2, #0x0                   	// #0
  42d1d8:	mov	x1, #0x0                   	// #0
  42d1dc:	cbnz	x22, 42d1e8 <_obstack_memory_used@@Base+0xe6f8>
  42d1e0:	b	42d2b0 <_obstack_memory_used@@Base+0xe7c0>
  42d1e4:	ldr	x0, [x20, #56]
  42d1e8:	add	x0, x0, x2
  42d1ec:	add	x1, x1, #0x1
  42d1f0:	add	x2, x2, #0x18
  42d1f4:	stp	xzr, xzr, [x0]
  42d1f8:	str	xzr, [x0, #16]
  42d1fc:	ldr	x0, [x20, #16]
  42d200:	cmp	x0, x1
  42d204:	b.hi	42d1e4 <_obstack_memory_used@@Base+0xe6f4>  // b.pmore
  42d208:	cbz	x0, 42d2b0 <_obstack_memory_used@@Base+0xe7c0>
  42d20c:	ldr	x6, [x20, #48]
  42d210:	mov	x26, #0x0                   	// #0
  42d214:	add	x28, x26, x26, lsl #1
  42d218:	lsl	x28, x28, #3
  42d21c:	add	x5, x6, x28
  42d220:	ldp	x1, x27, [x5, #8]
  42d224:	cmp	x1, #0x0
  42d228:	b.le	42d2a0 <_obstack_memory_used@@Base+0xe7b0>
  42d22c:	mov	x24, #0x0                   	// #0
  42d230:	b	42d250 <_obstack_memory_used@@Base+0xe760>
  42d234:	add	x2, x1, #0x1
  42d238:	str	x2, [x22, #8]
  42d23c:	str	x26, [x0, x1, lsl #3]
  42d240:	add	x24, x24, #0x1
  42d244:	ldr	x0, [x5, #8]
  42d248:	cmp	x24, x0
  42d24c:	b.ge	42d29c <_obstack_memory_used@@Base+0xe7ac>  // b.tcont
  42d250:	ldr	x2, [x27, x24, lsl #3]
  42d254:	ldr	x3, [x20, #56]
  42d258:	add	x2, x2, x2, lsl #1
  42d25c:	add	x22, x3, x2, lsl #3
  42d260:	ldr	x4, [x3, x2, lsl #3]
  42d264:	ldp	x1, x0, [x22, #8]
  42d268:	cmp	x4, x1
  42d26c:	b.ne	42d234 <_obstack_memory_used@@Base+0xe744>  // b.any
  42d270:	add	x1, x1, #0x1
  42d274:	lsl	x4, x1, #1
  42d278:	str	x4, [x3, x2, lsl #3]
  42d27c:	lsl	x1, x1, #4
  42d280:	bl	402550 <realloc@plt>
  42d284:	cbz	x0, 42cbd4 <_obstack_memory_used@@Base+0xe0e4>
  42d288:	ldr	x6, [x20, #48]
  42d28c:	str	x0, [x22, #16]
  42d290:	ldr	x1, [x22, #8]
  42d294:	add	x5, x6, x28
  42d298:	b	42d234 <_obstack_memory_used@@Base+0xe744>
  42d29c:	ldr	x0, [x20, #16]
  42d2a0:	add	x26, x26, #0x1
  42d2a4:	cmp	x26, x0
  42d2a8:	b.cc	42d214 <_obstack_memory_used@@Base+0xe724>  // b.lo, b.ul, b.last
  42d2ac:	nop
  42d2b0:	ldrb	w0, [x19, #176]
  42d2b4:	cmp	x23, #0x0
  42d2b8:	str	wzr, [sp, #112]
  42d2bc:	cset	w1, eq  // eq = none
  42d2c0:	ands	w1, w1, w0, lsr #2
  42d2c4:	b.ne	42d530 <_obstack_memory_used@@Base+0xea40>  // b.any
  42d2c8:	ldr	x0, [x19, #104]
  42d2cc:	ldr	x20, [x19, #48]
  42d2d0:	ldr	x0, [x0, #24]
  42d2d4:	ldr	x0, [x0, #56]
  42d2d8:	str	x0, [x19, #144]
  42d2dc:	add	x0, x0, x0, lsl #1
  42d2e0:	add	x20, x20, x0, lsl #3
  42d2e4:	ldr	x23, [x20, #8]
  42d2e8:	str	x23, [sp, #128]
  42d2ec:	cmp	x23, #0x0
  42d2f0:	b.le	42d4e0 <_obstack_memory_used@@Base+0xe9f0>
  42d2f4:	lsl	x24, x23, #3
  42d2f8:	str	x23, [sp, #120]
  42d2fc:	mov	x0, x24
  42d300:	bl	402440 <malloc@plt>
  42d304:	str	x0, [sp, #136]
  42d308:	mov	x22, x0
  42d30c:	cbz	x0, 42d86c <_obstack_memory_used@@Base+0xed7c>
  42d310:	ldr	x1, [x20, #16]
  42d314:	mov	x2, x24
  42d318:	bl	4022a0 <memcpy@plt>
  42d31c:	str	wzr, [sp, #116]
  42d320:	ldr	x0, [x19, #152]
  42d324:	mov	x2, #0x0                   	// #0
  42d328:	cmp	x0, #0x0
  42d32c:	b.le	42d420 <_obstack_memory_used@@Base+0xe930>
  42d330:	ldr	x1, [x22, x2, lsl #3]
  42d334:	ldr	x0, [x19]
  42d338:	add	x5, x0, x1, lsl #4
  42d33c:	ldrb	w3, [x5, #8]
  42d340:	cmp	w3, #0x4
  42d344:	b.eq	42d370 <_obstack_memory_used@@Base+0xe880>  // b.none
  42d348:	add	x2, x2, #0x1
  42d34c:	cmp	x23, x2
  42d350:	b.le	42d420 <_obstack_memory_used@@Base+0xe930>
  42d354:	ldr	x22, [sp, #136]
  42d358:	ldr	x0, [x19]
  42d35c:	ldr	x1, [x22, x2, lsl #3]
  42d360:	add	x5, x0, x1, lsl #4
  42d364:	ldrb	w3, [x5, #8]
  42d368:	cmp	w3, #0x4
  42d36c:	b.ne	42d348 <_obstack_memory_used@@Base+0xe858>  // b.any
  42d370:	mov	x3, #0x0                   	// #0
  42d374:	b	42d384 <_obstack_memory_used@@Base+0xe894>
  42d378:	add	x3, x3, #0x1
  42d37c:	cmp	x3, x23
  42d380:	b.eq	42d348 <_obstack_memory_used@@Base+0xe858>  // b.none
  42d384:	ldr	x4, [x22, x3, lsl #3]
  42d388:	lsl	x4, x4, #4
  42d38c:	add	x6, x0, x4
  42d390:	ldrb	w6, [x6, #8]
  42d394:	cmp	w6, #0x9
  42d398:	b.ne	42d378 <_obstack_memory_used@@Base+0xe888>  // b.any
  42d39c:	ldr	x6, [x0, x4]
  42d3a0:	ldr	x4, [x5]
  42d3a4:	cmp	x6, x4
  42d3a8:	b.ne	42d378 <_obstack_memory_used@@Base+0xe888>  // b.any
  42d3ac:	ldr	x3, [x19, #40]
  42d3b0:	add	x1, x1, x1, lsl #1
  42d3b4:	sub	x0, x23, #0x1
  42d3b8:	mov	x5, #0x0                   	// #0
  42d3bc:	add	x1, x3, x1, lsl #3
  42d3c0:	ldr	x1, [x1, #16]
  42d3c4:	ldr	x4, [x1]
  42d3c8:	b	42d3e4 <_obstack_memory_used@@Base+0xe8f4>
  42d3cc:	add	x3, x0, x5
  42d3d0:	lsr	x3, x3, #1
  42d3d4:	ldr	x1, [x22, x3, lsl #3]
  42d3d8:	cmp	x4, x1
  42d3dc:	b.gt	42d4d8 <_obstack_memory_used@@Base+0xe9e8>
  42d3e0:	mov	x0, x3
  42d3e4:	cmp	x0, x5
  42d3e8:	b.hi	42d3cc <_obstack_memory_used@@Base+0xe8dc>  // b.pmore
  42d3ec:	ldr	x0, [x22, x5, lsl #3]
  42d3f0:	cmp	x4, x0
  42d3f4:	b.eq	42d348 <_obstack_memory_used@@Base+0xe858>  // b.none
  42d3f8:	ldr	x1, [x19, #48]
  42d3fc:	add	x4, x4, x4, lsl #1
  42d400:	add	x0, sp, #0x78
  42d404:	add	x1, x1, x4, lsl #3
  42d408:	bl	420010 <_obstack_memory_used@@Base+0x1520>
  42d40c:	cbnz	w0, 42d45c <_obstack_memory_used@@Base+0xe96c>
  42d410:	ldr	x23, [sp, #128]
  42d414:	mov	x2, #0x1                   	// #1
  42d418:	cmp	x23, x2
  42d41c:	b.gt	42d354 <_obstack_memory_used@@Base+0xe864>
  42d420:	add	x0, sp, #0x74
  42d424:	add	x2, sp, #0x78
  42d428:	mov	x1, x19
  42d42c:	mov	w3, #0x0                   	// #0
  42d430:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  42d434:	str	x0, [x19, #72]
  42d438:	cbz	x0, 42d640 <_obstack_memory_used@@Base+0xeb50>
  42d43c:	ldrsb	w1, [x0, #104]
  42d440:	tbnz	w1, #31, 42d5e0 <_obstack_memory_used@@Base+0xeaf0>
  42d444:	dup	v0.2d, x0
  42d448:	str	x0, [x19, #96]
  42d44c:	str	q0, [x19, #80]
  42d450:	ldr	x0, [sp, #136]
  42d454:	bl	4026b0 <free@plt>
  42d458:	mov	w0, #0x0                   	// #0
  42d45c:	ldr	x22, [x21]
  42d460:	str	w0, [sp, #112]
  42d464:	ldr	x20, [x22, #112]
  42d468:	cbz	x20, 42d484 <_obstack_memory_used@@Base+0xe994>
  42d46c:	nop
  42d470:	str	x20, [sp, #104]
  42d474:	ldr	x20, [x20]
  42d478:	ldr	x0, [sp, #104]
  42d47c:	bl	4026b0 <free@plt>
  42d480:	cbnz	x20, 42d470 <_obstack_memory_used@@Base+0xe980>
  42d484:	ldr	x0, [x22, #32]
  42d488:	mov	w1, #0xf                   	// #15
  42d48c:	stp	xzr, xzr, [x22, #104]
  42d490:	str	w1, [x22, #128]
  42d494:	bl	4026b0 <free@plt>
  42d498:	str	xzr, [x22, #32]
  42d49c:	ldr	x0, [sp, #160]
  42d4a0:	bl	4026b0 <free@plt>
  42d4a4:	ldr	x0, [sp, #168]
  42d4a8:	bl	4026b0 <free@plt>
  42d4ac:	ldrb	w0, [sp, #283]
  42d4b0:	cbnz	w0, 42d514 <_obstack_memory_used@@Base+0xea24>
  42d4b4:	ldr	w0, [sp, #112]
  42d4b8:	cbnz	w0, 42cc28 <_obstack_memory_used@@Base+0xe138>
  42d4bc:	ldp	x19, x20, [sp, #16]
  42d4c0:	ldp	x21, x22, [sp, #32]
  42d4c4:	ldp	x23, x24, [sp, #48]
  42d4c8:	ldp	x25, x26, [sp, #64]
  42d4cc:	ldp	x27, x28, [sp, #80]
  42d4d0:	ldp	x29, x30, [sp], #304
  42d4d4:	ret
  42d4d8:	add	x5, x3, #0x1
  42d4dc:	b	42d3e4 <_obstack_memory_used@@Base+0xe8f4>
  42d4e0:	str	wzr, [sp, #116]
  42d4e4:	stp	xzr, xzr, [sp, #120]
  42d4e8:	str	xzr, [sp, #136]
  42d4ec:	b	42d420 <_obstack_memory_used@@Base+0xe930>
  42d4f0:	ldr	x0, [x20, #48]
  42d4f4:	mov	x22, #0x0                   	// #0
  42d4f8:	mov	w25, #0x0                   	// #0
  42d4fc:	mov	x24, #0x0                   	// #0
  42d500:	ldr	x0, [x0, #8]
  42d504:	b	42d03c <_obstack_memory_used@@Base+0xe54c>
  42d508:	mov	w0, #0xc                   	// #12
  42d50c:	str	w0, [sp, #112]
  42d510:	b	42cbe0 <_obstack_memory_used@@Base+0xe0f0>
  42d514:	ldr	x0, [sp, #152]
  42d518:	bl	4026b0 <free@plt>
  42d51c:	b	42d4b4 <_obstack_memory_used@@Base+0xe9c4>
  42d520:	add	x0, sp, #0x90
  42d524:	bl	41f270 <_obstack_memory_used@@Base+0x780>
  42d528:	str	wzr, [sp, #112]
  42d52c:	b	42c8a0 <_obstack_memory_used@@Base+0xddb0>
  42d530:	ldr	x0, [x21, #40]
  42d534:	cbnz	x0, 42d2c8 <_obstack_memory_used@@Base+0xe7d8>
  42d538:	ldr	x6, [x19, #16]
  42d53c:	cbz	x6, 42d8b8 <_obstack_memory_used@@Base+0xedc8>
  42d540:	ldr	x7, [x19]
  42d544:	mov	w2, #0x10001               	// #65537
  42d548:	mov	w8, #0x0                   	// #0
  42d54c:	mov	x5, #0x0                   	// #0
  42d550:	mov	x4, x7
  42d554:	mov	x3, #0x1                   	// #1
  42d558:	movk	x2, #0x1, lsl #48
  42d55c:	ldrb	w0, [x4, #8]
  42d560:	cmp	w0, #0x5
  42d564:	b.eq	42d88c <_obstack_memory_used@@Base+0xed9c>  // b.none
  42d568:	b.hi	42d7dc <_obstack_memory_used@@Base+0xecec>  // b.pmore
  42d56c:	cmp	w0, #0x3
  42d570:	b.eq	42d874 <_obstack_memory_used@@Base+0xed84>  // b.none
  42d574:	cmp	w0, #0x4
  42d578:	b.ne	42d7c4 <_obstack_memory_used@@Base+0xecd4>  // b.any
  42d57c:	add	x5, x5, #0x1
  42d580:	add	x4, x4, #0x10
  42d584:	cmp	x5, x6
  42d588:	b.ne	42d55c <_obstack_memory_used@@Base+0xea6c>  // b.any
  42d58c:	orr	w8, w8, w25
  42d590:	add	x5, x7, x5, lsl #4
  42d594:	tst	w8, #0xff
  42d598:	mov	w1, #0x7                   	// #7
  42d59c:	b.ne	42d5bc <_obstack_memory_used@@Base+0xeacc>  // b.any
  42d5a0:	b	42d8b4 <_obstack_memory_used@@Base+0xedc4>
  42d5a4:	cmp	w0, #0x5
  42d5a8:	b.ne	42d5b0 <_obstack_memory_used@@Base+0xeac0>  // b.any
  42d5ac:	strb	w1, [x7, #8]
  42d5b0:	add	x7, x7, #0x10
  42d5b4:	cmp	x7, x5
  42d5b8:	b.eq	42d8b8 <_obstack_memory_used@@Base+0xedc8>  // b.none
  42d5bc:	ldrb	w0, [x7, #8]
  42d5c0:	cmp	w0, #0x1
  42d5c4:	b.ne	42d5a4 <_obstack_memory_used@@Base+0xeab4>  // b.any
  42d5c8:	ldrsb	w0, [x7]
  42d5cc:	tbz	w0, #31, 42d5b0 <_obstack_memory_used@@Base+0xeac0>
  42d5d0:	ldrb	w0, [x7, #10]
  42d5d4:	and	w0, w0, #0xffffffdf
  42d5d8:	strb	w0, [x7, #10]
  42d5dc:	b	42d5b0 <_obstack_memory_used@@Base+0xeac0>
  42d5e0:	add	x2, sp, #0x78
  42d5e4:	mov	x1, x19
  42d5e8:	mov	w3, #0x1                   	// #1
  42d5ec:	add	x0, sp, #0x74
  42d5f0:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  42d5f4:	str	x0, [x19, #80]
  42d5f8:	add	x2, sp, #0x78
  42d5fc:	mov	x1, x19
  42d600:	mov	w3, #0x2                   	// #2
  42d604:	add	x0, sp, #0x74
  42d608:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  42d60c:	str	x0, [x19, #88]
  42d610:	mov	x1, x19
  42d614:	add	x2, sp, #0x78
  42d618:	add	x0, sp, #0x74
  42d61c:	mov	w3, #0x6                   	// #6
  42d620:	bl	424e58 <_obstack_memory_used@@Base+0x6368>
  42d624:	str	x0, [x19, #96]
  42d628:	ldr	x1, [x19, #80]
  42d62c:	cbz	x1, 42d640 <_obstack_memory_used@@Base+0xeb50>
  42d630:	ldr	x1, [x19, #88]
  42d634:	cmp	x1, #0x0
  42d638:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  42d63c:	b.ne	42d450 <_obstack_memory_used@@Base+0xe960>  // b.any
  42d640:	ldr	w0, [sp, #116]
  42d644:	b	42d45c <_obstack_memory_used@@Base+0xe96c>
  42d648:	mov	x27, x0
  42d64c:	mov	x22, x27
  42d650:	b	42cfc0 <_obstack_memory_used@@Base+0xe4d0>
  42d654:	mov	x1, x2
  42d658:	mov	x0, x1
  42d65c:	b	42cf04 <_obstack_memory_used@@Base+0xe414>
  42d660:	mov	x1, #0x1                   	// #1
  42d664:	str	x1, [x26, #8]
  42d668:	str	x28, [x0]
  42d66c:	cbnz	x27, 42cfbc <_obstack_memory_used@@Base+0xe4cc>
  42d670:	b	42cfec <_obstack_memory_used@@Base+0xe4fc>
  42d674:	ldr	x0, [x22, #32]
  42d678:	ldr	x25, [x0, #56]
  42d67c:	b	42d164 <_obstack_memory_used@@Base+0xe674>
  42d680:	ldr	x0, [x22, #32]
  42d684:	ldr	x28, [x0, #56]
  42d688:	b	42d154 <_obstack_memory_used@@Base+0xe664>
  42d68c:	stp	x25, x28, [x0]
  42d690:	cbnz	x27, 42cfbc <_obstack_memory_used@@Base+0xe4cc>
  42d694:	b	42cfec <_obstack_memory_used@@Base+0xe4fc>
  42d698:	ldr	x2, [sp, #232]
  42d69c:	ldr	x20, [sp, #192]
  42d6a0:	cmp	x2, x27
  42d6a4:	csel	x27, x2, x27, le
  42d6a8:	cmp	x27, x20
  42d6ac:	b.le	42cdf8 <_obstack_memory_used@@Base+0xe308>
  42d6b0:	bl	402560 <__ctype_toupper_loc@plt>
  42d6b4:	nop
  42d6b8:	ldr	x1, [sp, #144]
  42d6bc:	ldr	x2, [sp, #184]
  42d6c0:	add	x1, x1, x20
  42d6c4:	ldr	x3, [sp, #264]
  42d6c8:	ldrb	w1, [x1, x2]
  42d6cc:	and	x2, x1, #0xff
  42d6d0:	cbnz	x3, 42d744 <_obstack_memory_used@@Base+0xec54>
  42d6d4:	ldr	x2, [x0]
  42d6d8:	ldr	w1, [x2, x1, lsl #2]
  42d6dc:	strb	w1, [x22, x20]
  42d6e0:	add	x20, x20, #0x1
  42d6e4:	cmp	x27, x20
  42d6e8:	b.eq	42ce00 <_obstack_memory_used@@Base+0xe310>  // b.none
  42d6ec:	ldr	x22, [sp, #152]
  42d6f0:	b	42d6b8 <_obstack_memory_used@@Base+0xebc8>
  42d6f4:	ldr	x0, [sp, #152]
  42d6f8:	mov	x1, x25
  42d6fc:	bl	402550 <realloc@plt>
  42d700:	cbz	x0, 42d7b4 <_obstack_memory_used@@Base+0xecc4>
  42d704:	ldrb	w4, [sp, #283]
  42d708:	ldr	w2, [x19, #180]
  42d70c:	str	x0, [sp, #152]
  42d710:	str	x25, [sp, #208]
  42d714:	b	42c778 <_obstack_memory_used@@Base+0xdc88>
  42d718:	mov	x0, x19
  42d71c:	mov	x1, #0xe8                  	// #232
  42d720:	bl	402550 <realloc@plt>
  42d724:	mov	x19, x0
  42d728:	cbz	x0, 42d8f8 <_obstack_memory_used@@Base+0xee08>
  42d72c:	mov	x0, #0xe8                  	// #232
  42d730:	stp	x19, x0, [x21]
  42d734:	b	42c5cc <_obstack_memory_used@@Base+0xdadc>
  42d738:	mov	x23, #0x0                   	// #0
  42d73c:	mov	x1, #0x1                   	// #1
  42d740:	b	42c630 <_obstack_memory_used@@Base+0xdb40>
  42d744:	ldrb	w2, [x3, x2]
  42d748:	ldr	x1, [x0]
  42d74c:	ldr	w1, [x1, x2, lsl #2]
  42d750:	strb	w1, [x22, x20]
  42d754:	add	x20, x20, #0x1
  42d758:	cmp	x27, x20
  42d75c:	b.eq	42ce00 <_obstack_memory_used@@Base+0xe310>  // b.none
  42d760:	ldr	x22, [sp, #152]
  42d764:	b	42d6b8 <_obstack_memory_used@@Base+0xebc8>
  42d768:	mov	w0, #0xc                   	// #12
  42d76c:	str	xzr, [x19, #104]
  42d770:	str	w0, [sp, #112]
  42d774:	b	42cbe0 <_obstack_memory_used@@Base+0xe0f0>
  42d778:	mov	x0, #0x3c8                 	// #968
  42d77c:	bl	402440 <malloc@plt>
  42d780:	mov	x2, x0
  42d784:	cbz	x0, 42d8ec <_obstack_memory_used@@Base+0xedfc>
  42d788:	ldr	x0, [x25, #112]
  42d78c:	str	x0, [x2]
  42d790:	mov	w5, #0x1                   	// #1
  42d794:	mov	w1, #0x0                   	// #0
  42d798:	mov	x22, #0x8                   	// #8
  42d79c:	str	x2, [x25, #112]
  42d7a0:	b	42c924 <_obstack_memory_used@@Base+0xde34>
  42d7a4:	mov	x1, x2
  42d7a8:	b	42cb50 <_obstack_memory_used@@Base+0xe060>
  42d7ac:	str	wzr, [sp, #112]
  42d7b0:	b	42c8a0 <_obstack_memory_used@@Base+0xddb0>
  42d7b4:	mov	w0, #0xc                   	// #12
  42d7b8:	ldr	x20, [x21]
  42d7bc:	str	w0, [sp, #112]
  42d7c0:	b	42cbe0 <_obstack_memory_used@@Base+0xe0f0>
  42d7c4:	cmp	w0, #0x1
  42d7c8:	b.ne	42d7f8 <_obstack_memory_used@@Base+0xed08>  // b.any
  42d7cc:	ldrsb	w0, [x4]
  42d7d0:	cmp	w0, #0x0
  42d7d4:	csel	w8, w8, w1, ge  // ge = tcont
  42d7d8:	b	42d57c <_obstack_memory_used@@Base+0xea8c>
  42d7dc:	cmp	w0, #0xb
  42d7e0:	b.hi	42d804 <_obstack_memory_used@@Base+0xed14>  // b.pmore
  42d7e4:	cmp	w0, #0x7
  42d7e8:	b.hi	42d57c <_obstack_memory_used@@Base+0xea8c>  // b.pmore
  42d7ec:	cmp	w0, #0x6
  42d7f0:	b.eq	42d2c8 <_obstack_memory_used@@Base+0xe7d8>  // b.none
  42d7f4:	bl	4025f0 <abort@plt>
  42d7f8:	cmp	w0, #0x2
  42d7fc:	b.eq	42d57c <_obstack_memory_used@@Base+0xea8c>  // b.none
  42d800:	bl	4025f0 <abort@plt>
  42d804:	cmp	w0, #0xc
  42d808:	b.ne	42d7f4 <_obstack_memory_used@@Base+0xed04>  // b.any
  42d80c:	ldr	w0, [x4]
  42d810:	cmp	w0, #0x40
  42d814:	b.hi	42d894 <_obstack_memory_used@@Base+0xeda4>  // b.pmore
  42d818:	cmp	w0, #0xf
  42d81c:	b.ls	42d2c8 <_obstack_memory_used@@Base+0xe7d8>  // b.plast
  42d820:	sub	w0, w0, #0x10
  42d824:	lsl	x0, x3, x0
  42d828:	tst	x0, x2
  42d82c:	b.eq	42d2c8 <_obstack_memory_used@@Base+0xe7d8>  // b.none
  42d830:	b	42d57c <_obstack_memory_used@@Base+0xea8c>
  42d834:	mov	w0, #0xc                   	// #12
  42d838:	stp	xzr, xzr, [x27]
  42d83c:	b	42cbd8 <_obstack_memory_used@@Base+0xe0e8>
  42d840:	mov	x0, #0x3c8                 	// #968
  42d844:	bl	402440 <malloc@plt>
  42d848:	mov	x2, x0
  42d84c:	cbz	x0, 42d8e4 <_obstack_memory_used@@Base+0xedf4>
  42d850:	ldr	x0, [x25, #112]
  42d854:	str	x0, [x2]
  42d858:	mov	x4, #0x8                   	// #8
  42d85c:	mov	w6, #0x1                   	// #1
  42d860:	mov	w1, #0x0                   	// #0
  42d864:	str	x2, [x25, #112]
  42d868:	b	42c998 <_obstack_memory_used@@Base+0xdea8>
  42d86c:	mov	w0, #0xc                   	// #12
  42d870:	b	42d45c <_obstack_memory_used@@Base+0xe96c>
  42d874:	ldr	x0, [x4]
  42d878:	ldr	x9, [x0, #16]
  42d87c:	cbnz	x9, 42d2c8 <_obstack_memory_used@@Base+0xe7d8>
  42d880:	ldr	x0, [x0, #24]
  42d884:	cbz	x0, 42d57c <_obstack_memory_used@@Base+0xea8c>
  42d888:	b	42d2c8 <_obstack_memory_used@@Base+0xe7d8>
  42d88c:	mov	w25, w1
  42d890:	b	42d57c <_obstack_memory_used@@Base+0xea8c>
  42d894:	cmp	w0, #0x80
  42d898:	b.eq	42d57c <_obstack_memory_used@@Base+0xea8c>  // b.none
  42d89c:	b	42d2c8 <_obstack_memory_used@@Base+0xe7d8>
  42d8a0:	mov	x2, x1
  42d8a4:	b	42c894 <_obstack_memory_used@@Base+0xdda4>
  42d8a8:	ldr	x20, [x21]
  42d8ac:	str	xzr, [x19, #104]
  42d8b0:	b	42cbe0 <_obstack_memory_used@@Base+0xe0f0>
  42d8b4:	mov	w25, #0x0                   	// #0
  42d8b8:	ldr	x2, [x19, #152]
  42d8bc:	mov	w1, #0x1                   	// #1
  42d8c0:	ldrb	w0, [x19, #176]
  42d8c4:	cmp	x2, #0x0
  42d8c8:	str	w1, [x19, #180]
  42d8cc:	ccmp	w25, #0x0, #0x0, le
  42d8d0:	and	w1, w0, #0xfffffff9
  42d8d4:	cset	w0, ne  // ne = any
  42d8d8:	orr	w0, w1, w0, lsl #1
  42d8dc:	strb	w0, [x19, #176]
  42d8e0:	b	42d2c8 <_obstack_memory_used@@Base+0xe7d8>
  42d8e4:	mov	x2, #0x0                   	// #0
  42d8e8:	b	42c9e8 <_obstack_memory_used@@Base+0xdef8>
  42d8ec:	cbz	x24, 42d768 <_obstack_memory_used@@Base+0xec78>
  42d8f0:	mov	x22, #0x0                   	// #0
  42d8f4:	b	42c974 <_obstack_memory_used@@Base+0xde84>
  42d8f8:	mov	w0, #0xc                   	// #12
  42d8fc:	b	42cc40 <_obstack_memory_used@@Base+0xe150>
  42d900:	stp	x29, x30, [sp, #-16]!
  42d904:	adrp	x3, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  42d908:	mov	x5, x2
  42d90c:	mov	x29, sp
  42d910:	ldr	x3, [x3, #3560]
  42d914:	mov	w7, #0x6f                  	// #111
  42d918:	ldrb	w6, [x2, #56]
  42d91c:	mov	x2, x1
  42d920:	mov	x1, x0
  42d924:	mov	x0, x5
  42d928:	ubfx	w4, w3, #25, #1
  42d92c:	and	w6, w6, w7
  42d930:	ubfiz	w4, w4, #4, #4
  42d934:	orr	w4, w4, #0xffffff80
  42d938:	orr	w4, w4, w6
  42d93c:	strb	w4, [x5, #56]
  42d940:	bl	42c580 <_obstack_memory_used@@Base+0xda90>
  42d944:	cbz	w0, 42d974 <_obstack_memory_used@@Base+0xee84>
  42d948:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  42d94c:	add	x1, x1, #0x610
  42d950:	add	x4, x1, #0x1a0
  42d954:	mov	w3, w0
  42d958:	ldp	x29, x30, [sp], #16
  42d95c:	add	x1, x1, #0x20
  42d960:	ldr	x3, [x4, w3, sxtw #3]
  42d964:	mov	w2, #0x5                   	// #5
  42d968:	mov	x0, #0x0                   	// #0
  42d96c:	add	x1, x1, x3
  42d970:	b	4027f0 <dcgettext@plt>
  42d974:	mov	x0, #0x0                   	// #0
  42d978:	ldp	x29, x30, [sp], #16
  42d97c:	ret
  42d980:	adrp	x1, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  42d984:	mov	x2, x0
  42d988:	ldr	x0, [x1, #3560]
  42d98c:	str	x2, [x1, #3560]
  42d990:	ret
  42d994:	nop
  42d998:	stp	x29, x30, [sp, #-48]!
  42d99c:	mov	x2, #0x100                 	// #256
  42d9a0:	mov	w1, #0x0                   	// #0
  42d9a4:	mov	x29, sp
  42d9a8:	stp	x19, x20, [sp, #16]
  42d9ac:	mov	x19, x0
  42d9b0:	ldr	x20, [x0]
  42d9b4:	str	x21, [sp, #32]
  42d9b8:	ldr	x21, [x0, #32]
  42d9bc:	mov	x0, x21
  42d9c0:	bl	402510 <memset@plt>
  42d9c4:	ldr	x1, [x20, #72]
  42d9c8:	mov	x0, x19
  42d9cc:	mov	x3, x21
  42d9d0:	add	x2, x1, #0x18
  42d9d4:	add	x1, x1, #0x10
  42d9d8:	bl	421938 <_obstack_memory_used@@Base+0x2e48>
  42d9dc:	ldp	x1, x0, [x20, #72]
  42d9e0:	cmp	x1, x0
  42d9e4:	b.eq	42da00 <_obstack_memory_used@@Base+0xef10>  // b.none
  42d9e8:	add	x2, x0, #0x18
  42d9ec:	add	x1, x0, #0x10
  42d9f0:	mov	x3, x21
  42d9f4:	mov	x0, x19
  42d9f8:	bl	421938 <_obstack_memory_used@@Base+0x2e48>
  42d9fc:	ldr	x0, [x20, #72]
  42da00:	ldr	x1, [x20, #88]
  42da04:	cmp	x1, x0
  42da08:	b.eq	42da24 <_obstack_memory_used@@Base+0xef34>  // b.none
  42da0c:	add	x2, x1, #0x18
  42da10:	mov	x0, x19
  42da14:	mov	x3, x21
  42da18:	add	x1, x1, #0x10
  42da1c:	bl	421938 <_obstack_memory_used@@Base+0x2e48>
  42da20:	ldr	x0, [x20, #72]
  42da24:	ldr	x1, [x20, #96]
  42da28:	cmp	x1, x0
  42da2c:	b.eq	42da44 <_obstack_memory_used@@Base+0xef54>  // b.none
  42da30:	add	x2, x1, #0x18
  42da34:	mov	x3, x21
  42da38:	add	x1, x1, #0x10
  42da3c:	mov	x0, x19
  42da40:	bl	421938 <_obstack_memory_used@@Base+0x2e48>
  42da44:	ldrb	w1, [x19, #56]
  42da48:	mov	w0, #0x0                   	// #0
  42da4c:	ldr	x21, [sp, #32]
  42da50:	orr	w1, w1, #0x8
  42da54:	strb	w1, [x19, #56]
  42da58:	ldp	x19, x20, [sp, #16]
  42da5c:	ldp	x29, x30, [sp], #48
  42da60:	ret
  42da64:	nop
  42da68:	sub	sp, sp, #0x80
  42da6c:	cmp	x3, #0x0
  42da70:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  42da74:	stp	x29, x30, [sp, #16]
  42da78:	add	x29, sp, #0x10
  42da7c:	stp	x19, x20, [sp, #32]
  42da80:	stp	x23, x24, [sp, #64]
  42da84:	add	x24, x3, x4
  42da88:	b.gt	42dd30 <_obstack_memory_used@@Base+0xf240>
  42da8c:	stp	x21, x22, [sp, #48]
  42da90:	mov	x19, x3
  42da94:	mov	x21, x0
  42da98:	stp	x25, x26, [sp, #80]
  42da9c:	mov	x22, x6
  42daa0:	mov	x25, x2
  42daa4:	stp	x27, x28, [sp, #96]
  42daa8:	and	w26, w7, #0xff
  42daac:	cmp	x24, x2
  42dab0:	b.gt	42dd18 <_obstack_memory_used@@Base+0xf228>
  42dab4:	cmp	x4, #0x0
  42dab8:	ccmp	x3, x24, #0x4, ge  // ge = tcont
  42dabc:	b.gt	42dd18 <_obstack_memory_used@@Base+0xf228>
  42dac0:	tbnz	x24, #63, 42dd20 <_obstack_memory_used@@Base+0xf230>
  42dac4:	cmp	x4, #0x0
  42dac8:	ccmp	x3, x24, #0x0, lt  // lt = tstop
  42dacc:	b.le	42dd20 <_obstack_memory_used@@Base+0xf230>
  42dad0:	ldrb	w0, [x21, #56]
  42dad4:	cmp	x24, x19
  42dad8:	ubfx	x27, x0, #5, #2
  42dadc:	b.le	42daec <_obstack_memory_used@@Base+0xeffc>
  42dae0:	ldr	x2, [x21, #32]
  42dae4:	cbz	x2, 42daec <_obstack_memory_used@@Base+0xeffc>
  42dae8:	tbz	w0, #3, 42dccc <_obstack_memory_used@@Base+0xf1dc>
  42daec:	ldrb	w2, [x21, #56]
  42daf0:	cmp	x22, #0x0
  42daf4:	cset	w0, eq  // eq = none
  42daf8:	ubfx	x3, x2, #4, #1
  42dafc:	orr	w0, w0, w3
  42db00:	tbnz	w0, #0, 42dcb8 <_obstack_memory_used@@Base+0xf1c8>
  42db04:	and	w2, w2, #0x6
  42db08:	cmp	w2, #0x4
  42db0c:	ldr	x0, [x21, #48]
  42db10:	b.eq	42dd60 <_obstack_memory_used@@Base+0xf270>  // b.none
  42db14:	add	x28, x0, #0x1
  42db18:	mov	x23, x28
  42db1c:	lsl	x0, x28, #4
  42db20:	stp	x1, x5, [sp, #112]
  42db24:	bl	402440 <malloc@plt>
  42db28:	mov	x20, x0
  42db2c:	cbz	x0, 42dd4c <_obstack_memory_used@@Base+0xf25c>
  42db30:	ldp	x1, x5, [sp, #112]
  42db34:	str	w27, [sp]
  42db38:	mov	x7, x0
  42db3c:	mov	x6, x28
  42db40:	mov	x4, x24
  42db44:	mov	x3, x19
  42db48:	mov	x2, x25
  42db4c:	mov	x0, x21
  42db50:	bl	427c10 <_obstack_memory_used@@Base+0x9120>
  42db54:	cbnz	w0, 42dc7c <_obstack_memory_used@@Base+0xf18c>
  42db58:	cbz	x22, 42dc68 <_obstack_memory_used@@Base+0xf178>
  42db5c:	ldrb	w19, [x21, #56]
  42db60:	add	x25, x23, #0x1
  42db64:	ubfx	x19, x19, #1, #2
  42db68:	cbz	w19, 42dce0 <_obstack_memory_used@@Base+0xf1f0>
  42db6c:	cmp	w19, #0x1
  42db70:	ldr	x24, [x22]
  42db74:	b.eq	42dd8c <_obstack_memory_used@@Base+0xf29c>  // b.none
  42db78:	mov	w19, #0x2                   	// #2
  42db7c:	cmp	x23, #0x0
  42db80:	b.le	42ddfc <_obstack_memory_used@@Base+0xf30c>
  42db84:	ldp	x3, x4, [x22, #8]
  42db88:	lsl	x0, x23, #3
  42db8c:	add	x2, x20, x23, lsl #4
  42db90:	add	x1, x4, x0
  42db94:	add	x0, x3, x0
  42db98:	cmp	x1, x20
  42db9c:	add	x5, x3, #0xf
  42dba0:	ccmp	x4, x2, #0x2, hi  // hi = pmore
  42dba4:	sub	x5, x5, x4
  42dba8:	cset	w1, cs  // cs = hs, nlast
  42dbac:	cmp	x20, x0
  42dbb0:	ccmp	x3, x2, #0x2, cc  // cc = lo, ul, last
  42dbb4:	sub	x2, x23, #0x1
  42dbb8:	cset	w0, cs  // cs = hs, nlast
  42dbbc:	cmp	x5, #0x1e
  42dbc0:	ccmp	x2, #0x5, #0x0, hi  // hi = pmore
  42dbc4:	and	w0, w1, w0
  42dbc8:	cset	w2, hi  // hi = pmore
  42dbcc:	mov	x1, x23
  42dbd0:	tst	w2, w0
  42dbd4:	b.eq	42ddcc <_obstack_memory_used@@Base+0xf2dc>  // b.none
  42dbd8:	lsr	x5, x23, #1
  42dbdc:	mov	x2, x20
  42dbe0:	mov	x0, #0x0                   	// #0
  42dbe4:	lsl	x5, x5, #4
  42dbe8:	ld2	{v0.2d, v1.2d}, [x2], #32
  42dbec:	str	q0, [x3, x0]
  42dbf0:	str	q1, [x4, x0]
  42dbf4:	add	x0, x0, #0x10
  42dbf8:	cmp	x5, x0
  42dbfc:	b.ne	42dbe8 <_obstack_memory_used@@Base+0xf0f8>  // b.any
  42dc00:	and	x0, x23, #0xfffffffffffffffe
  42dc04:	tbz	w23, #0, 42dc20 <_obstack_memory_used@@Base+0xf130>
  42dc08:	lsl	x2, x0, #4
  42dc0c:	add	x5, x20, x2
  42dc10:	ldr	x2, [x20, x2]
  42dc14:	str	x2, [x3, x0, lsl #3]
  42dc18:	ldr	x2, [x5, #8]
  42dc1c:	str	x2, [x4, x0, lsl #3]
  42dc20:	ldr	x24, [x22]
  42dc24:	cmp	x1, x24
  42dc28:	b.cs	42dc54 <_obstack_memory_used@@Base+0xf164>  // b.hs, b.nlast
  42dc2c:	ldp	x4, x3, [x22, #8]
  42dc30:	mov	x0, #0xffffffffffffffff    	// #-1
  42dc34:	nop
  42dc38:	str	x0, [x3, x1, lsl #3]
  42dc3c:	add	x23, x23, #0x1
  42dc40:	str	x0, [x4, x1, lsl #3]
  42dc44:	mov	x1, x23
  42dc48:	ldr	x2, [x22]
  42dc4c:	cmp	x23, x2
  42dc50:	b.cc	42dc38 <_obstack_memory_used@@Base+0xf148>  // b.lo, b.ul, b.last
  42dc54:	ldrb	w0, [x21, #56]
  42dc58:	bfi	w0, w19, #1, #2
  42dc5c:	strb	w0, [x21, #56]
  42dc60:	tst	w0, #0x6
  42dc64:	b.eq	42dc88 <_obstack_memory_used@@Base+0xf198>  // b.none
  42dc68:	ldr	x19, [x20]
  42dc6c:	cbz	w26, 42dc8c <_obstack_memory_used@@Base+0xf19c>
  42dc70:	ldr	x0, [x20, #8]
  42dc74:	sub	x19, x0, x19
  42dc78:	b	42dc8c <_obstack_memory_used@@Base+0xf19c>
  42dc7c:	cmp	w0, #0x1
  42dc80:	mov	x19, #0xffffffffffffffff    	// #-1
  42dc84:	b.eq	42dc8c <_obstack_memory_used@@Base+0xf19c>  // b.none
  42dc88:	mov	x19, #0xfffffffffffffffe    	// #-2
  42dc8c:	mov	x0, x20
  42dc90:	bl	4026b0 <free@plt>
  42dc94:	ldp	x21, x22, [sp, #48]
  42dc98:	ldp	x25, x26, [sp, #80]
  42dc9c:	ldp	x27, x28, [sp, #96]
  42dca0:	mov	x0, x19
  42dca4:	ldp	x29, x30, [sp, #16]
  42dca8:	ldp	x19, x20, [sp, #32]
  42dcac:	ldp	x23, x24, [sp, #64]
  42dcb0:	add	sp, sp, #0x80
  42dcb4:	ret
  42dcb8:	mov	x28, #0x1                   	// #1
  42dcbc:	mov	x0, #0x10                  	// #16
  42dcc0:	mov	x23, x28
  42dcc4:	mov	x22, #0x0                   	// #0
  42dcc8:	b	42db20 <_obstack_memory_used@@Base+0xf030>
  42dccc:	mov	x0, x21
  42dcd0:	stp	x1, x5, [sp, #112]
  42dcd4:	bl	42d998 <_obstack_memory_used@@Base+0xeea8>
  42dcd8:	ldp	x1, x5, [sp, #112]
  42dcdc:	b	42daec <_obstack_memory_used@@Base+0xeffc>
  42dce0:	lsl	x27, x25, #3
  42dce4:	mov	x24, x25
  42dce8:	mov	x0, x27
  42dcec:	bl	402440 <malloc@plt>
  42dcf0:	str	x0, [x22, #8]
  42dcf4:	mov	x19, x0
  42dcf8:	cbz	x0, 42de08 <_obstack_memory_used@@Base+0xf318>
  42dcfc:	mov	x0, x27
  42dd00:	bl	402440 <malloc@plt>
  42dd04:	str	x0, [x22, #16]
  42dd08:	cbz	x0, 42de10 <_obstack_memory_used@@Base+0xf320>
  42dd0c:	mov	w19, #0x1                   	// #1
  42dd10:	str	x25, [x22]
  42dd14:	b	42db7c <_obstack_memory_used@@Base+0xf08c>
  42dd18:	mov	x24, x25
  42dd1c:	b	42dad0 <_obstack_memory_used@@Base+0xefe0>
  42dd20:	ldrb	w27, [x21, #56]
  42dd24:	mov	x24, #0x0                   	// #0
  42dd28:	ubfx	x27, x27, #5, #2
  42dd2c:	b	42daec <_obstack_memory_used@@Base+0xeffc>
  42dd30:	mov	x19, #0xffffffffffffffff    	// #-1
  42dd34:	mov	x0, x19
  42dd38:	ldp	x29, x30, [sp, #16]
  42dd3c:	ldp	x19, x20, [sp, #32]
  42dd40:	ldp	x23, x24, [sp, #64]
  42dd44:	add	sp, sp, #0x80
  42dd48:	ret
  42dd4c:	mov	x19, #0xfffffffffffffffe    	// #-2
  42dd50:	ldp	x21, x22, [sp, #48]
  42dd54:	ldp	x25, x26, [sp, #80]
  42dd58:	ldp	x27, x28, [sp, #96]
  42dd5c:	b	42dca0 <_obstack_memory_used@@Base+0xf1b0>
  42dd60:	ldr	x28, [x22]
  42dd64:	cmp	x28, x0
  42dd68:	b.hi	42db14 <_obstack_memory_used@@Base+0xf024>  // b.pmore
  42dd6c:	cmp	x28, #0x0
  42dd70:	mov	x23, x28
  42dd74:	b.gt	42db1c <_obstack_memory_used@@Base+0xf02c>
  42dd78:	mov	x28, #0x1                   	// #1
  42dd7c:	mov	x0, #0x10                  	// #16
  42dd80:	mov	x23, x28
  42dd84:	mov	x22, #0x0                   	// #0
  42dd88:	b	42db20 <_obstack_memory_used@@Base+0xf030>
  42dd8c:	cmp	x24, x25
  42dd90:	b.cs	42db7c <_obstack_memory_used@@Base+0xf08c>  // b.hs, b.nlast
  42dd94:	ldr	x0, [x22, #8]
  42dd98:	lsl	x24, x25, #3
  42dd9c:	mov	x1, x24
  42dda0:	bl	402550 <realloc@plt>
  42dda4:	mov	x27, x0
  42dda8:	cbz	x0, 42de08 <_obstack_memory_used@@Base+0xf318>
  42ddac:	ldr	x0, [x22, #16]
  42ddb0:	mov	x1, x24
  42ddb4:	bl	402550 <realloc@plt>
  42ddb8:	cbz	x0, 42de20 <_obstack_memory_used@@Base+0xf330>
  42ddbc:	mov	x24, x25
  42ddc0:	stp	x25, x27, [x22]
  42ddc4:	str	x0, [x22, #16]
  42ddc8:	b	42db7c <_obstack_memory_used@@Base+0xf08c>
  42ddcc:	mov	x2, x20
  42ddd0:	mov	x0, #0x0                   	// #0
  42ddd4:	nop
  42ddd8:	ldr	x5, [x2]
  42dddc:	str	x5, [x3, x0, lsl #3]
  42dde0:	add	x2, x2, #0x10
  42dde4:	ldur	x5, [x2, #-8]
  42dde8:	str	x5, [x4, x0, lsl #3]
  42ddec:	add	x0, x0, #0x1
  42ddf0:	cmp	x23, x0
  42ddf4:	b.ne	42ddd8 <_obstack_memory_used@@Base+0xf2e8>  // b.any
  42ddf8:	b	42dc20 <_obstack_memory_used@@Base+0xf130>
  42ddfc:	mov	x1, #0x0                   	// #0
  42de00:	mov	x23, #0x0                   	// #0
  42de04:	b	42dc24 <_obstack_memory_used@@Base+0xf134>
  42de08:	mov	w19, #0x0                   	// #0
  42de0c:	b	42dc54 <_obstack_memory_used@@Base+0xf164>
  42de10:	mov	x0, x19
  42de14:	mov	w19, #0x0                   	// #0
  42de18:	bl	4026b0 <free@plt>
  42de1c:	b	42dc54 <_obstack_memory_used@@Base+0xf164>
  42de20:	mov	x0, x27
  42de24:	mov	w19, #0x0                   	// #0
  42de28:	bl	4026b0 <free@plt>
  42de2c:	b	42dc54 <_obstack_memory_used@@Base+0xf164>
  42de30:	stp	x29, x30, [sp, #-64]!
  42de34:	mov	x29, sp
  42de38:	stp	x19, x20, [sp, #16]
  42de3c:	mov	w19, w2
  42de40:	mov	x20, x0
  42de44:	tst	x19, #0x1
  42de48:	stp	x21, x22, [sp, #32]
  42de4c:	mov	x21, #0xb2fc                	// #45820
  42de50:	str	x23, [sp, #48]
  42de54:	mov	x23, #0x2c6                 	// #710
  42de58:	str	xzr, [x0]
  42de5c:	mov	x22, x1
  42de60:	stp	xzr, xzr, [x0, #8]
  42de64:	movk	x21, #0x3, lsl #16
  42de68:	movk	x23, #0x101, lsl #16
  42de6c:	mov	x0, #0x100                 	// #256
  42de70:	csel	x23, x21, x23, ne  // ne = any
  42de74:	bl	402440 <malloc@plt>
  42de78:	str	x0, [x20, #32]
  42de7c:	cbz	x0, 42df28 <_obstack_memory_used@@Base+0xf438>
  42de80:	sbfiz	x21, x19, #21, #32
  42de84:	mov	w0, #0x0                   	// #0
  42de88:	and	x21, x21, #0x400000
  42de8c:	orr	x21, x21, x23
  42de90:	tbnz	w19, #2, 42df04 <_obstack_memory_used@@Base+0xf414>
  42de94:	ldrb	w1, [x20, #56]
  42de98:	ubfx	x19, x19, #3, #1
  42de9c:	ubfiz	w0, w0, #7, #1
  42dea0:	mov	w2, #0x6f                  	// #111
  42dea4:	orr	w19, w0, w19, lsl #4
  42dea8:	and	w0, w1, w2
  42deac:	orr	w19, w19, w0
  42deb0:	str	xzr, [x20, #40]
  42deb4:	strb	w19, [x20, #56]
  42deb8:	mov	x0, x22
  42debc:	bl	402300 <strlen@plt>
  42dec0:	mov	x2, x0
  42dec4:	mov	x3, x21
  42dec8:	mov	x1, x22
  42decc:	mov	x0, x20
  42ded0:	bl	42c580 <_obstack_memory_used@@Base+0xda90>
  42ded4:	mov	w19, w0
  42ded8:	cmp	w0, #0x10
  42dedc:	b.eq	42df14 <_obstack_memory_used@@Base+0xf424>  // b.none
  42dee0:	cbnz	w0, 42df18 <_obstack_memory_used@@Base+0xf428>
  42dee4:	mov	x0, x20
  42dee8:	bl	42d998 <_obstack_memory_used@@Base+0xeea8>
  42deec:	mov	w0, w19
  42def0:	ldp	x19, x20, [sp, #16]
  42def4:	ldp	x21, x22, [sp, #32]
  42def8:	ldr	x23, [sp, #48]
  42defc:	ldp	x29, x30, [sp], #64
  42df00:	ret
  42df04:	and	x21, x21, #0xffffffffffffffbf
  42df08:	mov	w0, #0x1                   	// #1
  42df0c:	orr	x21, x21, #0x100
  42df10:	b	42de94 <_obstack_memory_used@@Base+0xf3a4>
  42df14:	mov	w19, #0x8                   	// #8
  42df18:	ldr	x0, [x20, #32]
  42df1c:	bl	4026b0 <free@plt>
  42df20:	str	xzr, [x20, #32]
  42df24:	b	42deec <_obstack_memory_used@@Base+0xf3fc>
  42df28:	mov	w19, #0xc                   	// #12
  42df2c:	mov	w0, w19
  42df30:	ldp	x19, x20, [sp, #16]
  42df34:	ldp	x21, x22, [sp, #32]
  42df38:	ldr	x23, [sp, #48]
  42df3c:	ldp	x29, x30, [sp], #64
  42df40:	ret
  42df44:	nop
  42df48:	stp	x29, x30, [sp, #-48]!
  42df4c:	cmp	w0, #0x10
  42df50:	mov	x29, sp
  42df54:	stp	x19, x20, [sp, #16]
  42df58:	stp	x21, x22, [sp, #32]
  42df5c:	b.hi	42dfd8 <_obstack_memory_used@@Base+0xf4e8>  // b.pmore
  42df60:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  42df64:	add	x1, x1, #0x610
  42df68:	mov	w4, w0
  42df6c:	mov	x20, x3
  42df70:	add	x3, x1, #0x1a0
  42df74:	add	x1, x1, #0x20
  42df78:	mov	x21, x2
  42df7c:	mov	w2, #0x5                   	// #5
  42df80:	mov	x0, #0x0                   	// #0
  42df84:	ldr	x3, [x3, w4, sxtw #3]
  42df88:	add	x1, x1, x3
  42df8c:	bl	4027f0 <dcgettext@plt>
  42df90:	mov	x22, x0
  42df94:	bl	402300 <strlen@plt>
  42df98:	add	x19, x0, #0x1
  42df9c:	cbz	x20, 42dfb8 <_obstack_memory_used@@Base+0xf4c8>
  42dfa0:	cmp	x19, x20
  42dfa4:	mov	x2, x19
  42dfa8:	b.hi	42dfcc <_obstack_memory_used@@Base+0xf4dc>  // b.pmore
  42dfac:	mov	x1, x22
  42dfb0:	mov	x0, x21
  42dfb4:	bl	4022a0 <memcpy@plt>
  42dfb8:	mov	x0, x19
  42dfbc:	ldp	x19, x20, [sp, #16]
  42dfc0:	ldp	x21, x22, [sp, #32]
  42dfc4:	ldp	x29, x30, [sp], #48
  42dfc8:	ret
  42dfcc:	sub	x2, x20, #0x1
  42dfd0:	strb	wzr, [x21, x2]
  42dfd4:	b	42dfac <_obstack_memory_used@@Base+0xf4bc>
  42dfd8:	bl	4025f0 <abort@plt>
  42dfdc:	nop
  42dfe0:	stp	x29, x30, [sp, #-32]!
  42dfe4:	mov	x29, sp
  42dfe8:	str	x19, [sp, #16]
  42dfec:	mov	x19, x0
  42dff0:	ldr	x0, [x0]
  42dff4:	cbz	x0, 42dffc <_obstack_memory_used@@Base+0xf50c>
  42dff8:	bl	422da8 <_obstack_memory_used@@Base+0x42b8>
  42dffc:	ldr	x0, [x19, #32]
  42e000:	stp	xzr, xzr, [x19]
  42e004:	bl	4026b0 <free@plt>
  42e008:	str	xzr, [x19, #32]
  42e00c:	ldr	x0, [x19, #40]
  42e010:	bl	4026b0 <free@plt>
  42e014:	str	xzr, [x19, #40]
  42e018:	ldr	x19, [sp, #16]
  42e01c:	ldp	x29, x30, [sp], #32
  42e020:	ret
  42e024:	nop
  42e028:	tst	w4, #0xfffffff8
  42e02c:	b.ne	42e104 <_obstack_memory_used@@Base+0xf614>  // b.any
  42e030:	sub	sp, sp, #0x50
  42e034:	stp	x29, x30, [sp, #16]
  42e038:	add	x29, sp, #0x10
  42e03c:	stp	x19, x20, [sp, #32]
  42e040:	mov	w19, w4
  42e044:	mov	x20, x0
  42e048:	stp	x21, x22, [sp, #48]
  42e04c:	mov	x21, x1
  42e050:	mov	x22, x3
  42e054:	str	x23, [sp, #64]
  42e058:	mov	x23, x2
  42e05c:	tbnz	w19, #2, 42e0b8 <_obstack_memory_used@@Base+0xf5c8>
  42e060:	mov	x0, x1
  42e064:	bl	402300 <strlen@plt>
  42e068:	mov	x5, x0
  42e06c:	ldrb	w0, [x20, #56]
  42e070:	str	w19, [sp]
  42e074:	mov	x3, #0x0                   	// #0
  42e078:	tbz	w0, #4, 42e0c8 <_obstack_memory_used@@Base+0xf5d8>
  42e07c:	mov	x1, x21
  42e080:	mov	x0, x20
  42e084:	mov	x4, x5
  42e088:	mov	x2, x5
  42e08c:	mov	x7, #0x0                   	// #0
  42e090:	mov	x6, #0x0                   	// #0
  42e094:	bl	427c10 <_obstack_memory_used@@Base+0x9120>
  42e098:	cmp	w0, #0x0
  42e09c:	cset	w0, ne  // ne = any
  42e0a0:	ldp	x29, x30, [sp, #16]
  42e0a4:	ldp	x19, x20, [sp, #32]
  42e0a8:	ldp	x21, x22, [sp, #48]
  42e0ac:	ldr	x23, [sp, #64]
  42e0b0:	add	sp, sp, #0x50
  42e0b4:	ret
  42e0b8:	ldrb	w0, [x20, #56]
  42e0bc:	ldp	x3, x5, [x3]
  42e0c0:	str	w19, [sp]
  42e0c4:	tbnz	w0, #4, 42e07c <_obstack_memory_used@@Base+0xf58c>
  42e0c8:	mov	x7, x22
  42e0cc:	mov	x6, x23
  42e0d0:	mov	x1, x21
  42e0d4:	mov	x0, x20
  42e0d8:	mov	x4, x5
  42e0dc:	mov	x2, x5
  42e0e0:	bl	427c10 <_obstack_memory_used@@Base+0x9120>
  42e0e4:	cmp	w0, #0x0
  42e0e8:	cset	w0, ne  // ne = any
  42e0ec:	ldp	x29, x30, [sp, #16]
  42e0f0:	ldp	x19, x20, [sp, #32]
  42e0f4:	ldp	x21, x22, [sp, #48]
  42e0f8:	ldr	x23, [sp, #64]
  42e0fc:	add	sp, sp, #0x50
  42e100:	ret
  42e104:	mov	w0, #0x2                   	// #2
  42e108:	ret
  42e10c:	nop
  42e110:	sub	sp, sp, #0x70
  42e114:	cmp	x3, #0x0
  42e118:	ccmp	x2, x3, #0x1, ge  // ge = tcont
  42e11c:	stp	x29, x30, [sp, #16]
  42e120:	add	x29, sp, #0x10
  42e124:	stp	x19, x20, [sp, #32]
  42e128:	b.lt	42e364 <_obstack_memory_used@@Base+0xf874>  // b.tstop
  42e12c:	stp	x23, x24, [sp, #64]
  42e130:	mov	x23, x0
  42e134:	ldrb	w0, [x0, #56]
  42e138:	cmp	x4, #0x0
  42e13c:	stp	x21, x22, [sp, #48]
  42e140:	mov	x24, x2
  42e144:	stp	x25, x26, [sp, #80]
  42e148:	ubfx	x2, x0, #4, #1
  42e14c:	mov	x25, x1
  42e150:	str	x27, [sp, #96]
  42e154:	cset	w1, eq  // eq = none
  42e158:	mov	x20, x3
  42e15c:	mov	x21, x4
  42e160:	ubfx	x26, x0, #5, #2
  42e164:	orr	w1, w1, w2
  42e168:	tbnz	w1, #0, 42e318 <_obstack_memory_used@@Base+0xf828>
  42e16c:	and	w0, w0, #0x6
  42e170:	cmp	w0, #0x4
  42e174:	ldr	x0, [x23, #48]
  42e178:	b.eq	42e394 <_obstack_memory_used@@Base+0xf8a4>  // b.none
  42e17c:	add	x27, x0, #0x1
  42e180:	mov	x22, x27
  42e184:	lsl	x0, x27, #4
  42e188:	bl	402440 <malloc@plt>
  42e18c:	mov	x19, x0
  42e190:	cbz	x0, 42e37c <_obstack_memory_used@@Base+0xf88c>
  42e194:	str	w26, [sp]
  42e198:	mov	x7, x0
  42e19c:	mov	x6, x27
  42e1a0:	mov	x1, x25
  42e1a4:	mov	x5, x24
  42e1a8:	mov	x2, x24
  42e1ac:	mov	x4, x20
  42e1b0:	mov	x3, x20
  42e1b4:	mov	x0, x23
  42e1b8:	bl	427c10 <_obstack_memory_used@@Base+0x9120>
  42e1bc:	cbnz	w0, 42e2dc <_obstack_memory_used@@Base+0xf7ec>
  42e1c0:	cbz	x21, 42e2d0 <_obstack_memory_used@@Base+0xf7e0>
  42e1c4:	ldrb	w24, [x23, #56]
  42e1c8:	add	x26, x22, #0x1
  42e1cc:	ubfx	x24, x24, #1, #2
  42e1d0:	cbz	w24, 42e32c <_obstack_memory_used@@Base+0xf83c>
  42e1d4:	cmp	w24, #0x1
  42e1d8:	ldr	x25, [x21]
  42e1dc:	b.eq	42e3c0 <_obstack_memory_used@@Base+0xf8d0>  // b.none
  42e1e0:	mov	w24, #0x2                   	// #2
  42e1e4:	cmp	x22, #0x0
  42e1e8:	b.le	42e42c <_obstack_memory_used@@Base+0xf93c>
  42e1ec:	ldp	x2, x3, [x21, #8]
  42e1f0:	lsl	x0, x22, #3
  42e1f4:	add	x4, x19, x22, lsl #4
  42e1f8:	add	x1, x3, x0
  42e1fc:	add	x0, x2, x0
  42e200:	cmp	x19, x1
  42e204:	add	x5, x2, #0xf
  42e208:	ccmp	x3, x4, #0x2, cc  // cc = lo, ul, last
  42e20c:	sub	x5, x5, x3
  42e210:	cset	w1, cs  // cs = hs, nlast
  42e214:	cmp	x19, x0
  42e218:	ccmp	x2, x4, #0x2, cc  // cc = lo, ul, last
  42e21c:	sub	x4, x22, #0x1
  42e220:	cset	w0, cs  // cs = hs, nlast
  42e224:	cmp	x5, #0x1e
  42e228:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
  42e22c:	and	w0, w1, w0
  42e230:	cset	w4, hi  // hi = pmore
  42e234:	mov	x1, x22
  42e238:	tst	w4, w0
  42e23c:	b.eq	42e400 <_obstack_memory_used@@Base+0xf910>  // b.none
  42e240:	lsr	x5, x22, #1
  42e244:	mov	x4, x19
  42e248:	mov	x0, #0x0                   	// #0
  42e24c:	lsl	x5, x5, #4
  42e250:	ld2	{v0.2d, v1.2d}, [x4], #32
  42e254:	str	q0, [x2, x0]
  42e258:	str	q1, [x3, x0]
  42e25c:	add	x0, x0, #0x10
  42e260:	cmp	x5, x0
  42e264:	b.ne	42e250 <_obstack_memory_used@@Base+0xf760>  // b.any
  42e268:	and	x0, x22, #0xfffffffffffffffe
  42e26c:	tbz	w22, #0, 42e288 <_obstack_memory_used@@Base+0xf798>
  42e270:	lsl	x4, x0, #4
  42e274:	add	x5, x19, x4
  42e278:	ldr	x4, [x19, x4]
  42e27c:	str	x4, [x2, x0, lsl #3]
  42e280:	ldr	x2, [x5, #8]
  42e284:	str	x2, [x3, x0, lsl #3]
  42e288:	ldr	x25, [x21]
  42e28c:	cmp	x1, x25
  42e290:	b.cs	42e2bc <_obstack_memory_used@@Base+0xf7cc>  // b.hs, b.nlast
  42e294:	ldp	x4, x3, [x21, #8]
  42e298:	mov	x0, #0xffffffffffffffff    	// #-1
  42e29c:	nop
  42e2a0:	str	x0, [x3, x1, lsl #3]
  42e2a4:	add	x22, x22, #0x1
  42e2a8:	str	x0, [x4, x1, lsl #3]
  42e2ac:	mov	x1, x22
  42e2b0:	ldr	x2, [x21]
  42e2b4:	cmp	x22, x2
  42e2b8:	b.cc	42e2a0 <_obstack_memory_used@@Base+0xf7b0>  // b.lo, b.ul, b.last
  42e2bc:	ldrb	w0, [x23, #56]
  42e2c0:	bfi	w0, w24, #1, #2
  42e2c4:	strb	w0, [x23, #56]
  42e2c8:	tst	w0, #0x6
  42e2cc:	b.eq	42e2e8 <_obstack_memory_used@@Base+0xf7f8>  // b.none
  42e2d0:	ldr	x3, [x19, #8]
  42e2d4:	sub	x20, x3, x20
  42e2d8:	b	42e2ec <_obstack_memory_used@@Base+0xf7fc>
  42e2dc:	cmp	w0, #0x1
  42e2e0:	mov	x20, #0xffffffffffffffff    	// #-1
  42e2e4:	b.eq	42e2ec <_obstack_memory_used@@Base+0xf7fc>  // b.none
  42e2e8:	mov	x20, #0xfffffffffffffffe    	// #-2
  42e2ec:	mov	x0, x19
  42e2f0:	bl	4026b0 <free@plt>
  42e2f4:	ldp	x21, x22, [sp, #48]
  42e2f8:	ldp	x23, x24, [sp, #64]
  42e2fc:	ldp	x25, x26, [sp, #80]
  42e300:	ldr	x27, [sp, #96]
  42e304:	mov	x0, x20
  42e308:	ldp	x29, x30, [sp, #16]
  42e30c:	ldp	x19, x20, [sp, #32]
  42e310:	add	sp, sp, #0x70
  42e314:	ret
  42e318:	mov	x27, #0x1                   	// #1
  42e31c:	mov	x0, #0x10                  	// #16
  42e320:	mov	x22, x27
  42e324:	mov	x21, #0x0                   	// #0
  42e328:	b	42e188 <_obstack_memory_used@@Base+0xf698>
  42e32c:	lsl	x27, x26, #3
  42e330:	mov	x25, x26
  42e334:	mov	x0, x27
  42e338:	bl	402440 <malloc@plt>
  42e33c:	str	x0, [x21, #8]
  42e340:	mov	x24, x0
  42e344:	cbz	x0, 42e438 <_obstack_memory_used@@Base+0xf948>
  42e348:	mov	x0, x27
  42e34c:	bl	402440 <malloc@plt>
  42e350:	str	x0, [x21, #16]
  42e354:	cbz	x0, 42e440 <_obstack_memory_used@@Base+0xf950>
  42e358:	mov	w24, #0x1                   	// #1
  42e35c:	str	x26, [x21]
  42e360:	b	42e1e4 <_obstack_memory_used@@Base+0xf6f4>
  42e364:	mov	x20, #0xffffffffffffffff    	// #-1
  42e368:	mov	x0, x20
  42e36c:	ldp	x29, x30, [sp, #16]
  42e370:	ldp	x19, x20, [sp, #32]
  42e374:	add	sp, sp, #0x70
  42e378:	ret
  42e37c:	mov	x20, #0xfffffffffffffffe    	// #-2
  42e380:	ldp	x21, x22, [sp, #48]
  42e384:	ldp	x23, x24, [sp, #64]
  42e388:	ldp	x25, x26, [sp, #80]
  42e38c:	ldr	x27, [sp, #96]
  42e390:	b	42e304 <_obstack_memory_used@@Base+0xf814>
  42e394:	ldr	x27, [x21]
  42e398:	cmp	x27, x0
  42e39c:	b.hi	42e17c <_obstack_memory_used@@Base+0xf68c>  // b.pmore
  42e3a0:	cmp	x27, #0x0
  42e3a4:	mov	x22, x27
  42e3a8:	b.gt	42e184 <_obstack_memory_used@@Base+0xf694>
  42e3ac:	mov	x27, #0x1                   	// #1
  42e3b0:	mov	x0, #0x10                  	// #16
  42e3b4:	mov	x22, x27
  42e3b8:	mov	x21, #0x0                   	// #0
  42e3bc:	b	42e188 <_obstack_memory_used@@Base+0xf698>
  42e3c0:	cmp	x25, x26
  42e3c4:	b.cs	42e1e4 <_obstack_memory_used@@Base+0xf6f4>  // b.hs, b.nlast
  42e3c8:	ldr	x0, [x21, #8]
  42e3cc:	lsl	x25, x26, #3
  42e3d0:	mov	x1, x25
  42e3d4:	bl	402550 <realloc@plt>
  42e3d8:	mov	x27, x0
  42e3dc:	cbz	x0, 42e438 <_obstack_memory_used@@Base+0xf948>
  42e3e0:	ldr	x0, [x21, #16]
  42e3e4:	mov	x1, x25
  42e3e8:	bl	402550 <realloc@plt>
  42e3ec:	cbz	x0, 42e450 <_obstack_memory_used@@Base+0xf960>
  42e3f0:	mov	x25, x26
  42e3f4:	stp	x26, x27, [x21]
  42e3f8:	str	x0, [x21, #16]
  42e3fc:	b	42e1e4 <_obstack_memory_used@@Base+0xf6f4>
  42e400:	mov	x4, x19
  42e404:	mov	x0, #0x0                   	// #0
  42e408:	ldr	x5, [x4]
  42e40c:	str	x5, [x2, x0, lsl #3]
  42e410:	add	x4, x4, #0x10
  42e414:	ldur	x5, [x4, #-8]
  42e418:	str	x5, [x3, x0, lsl #3]
  42e41c:	add	x0, x0, #0x1
  42e420:	cmp	x22, x0
  42e424:	b.ne	42e408 <_obstack_memory_used@@Base+0xf918>  // b.any
  42e428:	b	42e288 <_obstack_memory_used@@Base+0xf798>
  42e42c:	mov	x1, #0x0                   	// #0
  42e430:	mov	x22, #0x0                   	// #0
  42e434:	b	42e28c <_obstack_memory_used@@Base+0xf79c>
  42e438:	mov	w24, #0x0                   	// #0
  42e43c:	b	42e2bc <_obstack_memory_used@@Base+0xf7cc>
  42e440:	mov	x0, x24
  42e444:	mov	w24, #0x0                   	// #0
  42e448:	bl	4026b0 <free@plt>
  42e44c:	b	42e2bc <_obstack_memory_used@@Base+0xf7cc>
  42e450:	mov	x0, x27
  42e454:	mov	w24, #0x0                   	// #0
  42e458:	bl	4026b0 <free@plt>
  42e45c:	b	42e2bc <_obstack_memory_used@@Base+0xf7cc>
  42e460:	sub	sp, sp, #0x70
  42e464:	cmp	x3, #0x0
  42e468:	ccmp	x2, x3, #0x1, ge  // ge = tcont
  42e46c:	stp	x29, x30, [sp, #16]
  42e470:	add	x29, sp, #0x10
  42e474:	stp	x19, x20, [sp, #32]
  42e478:	stp	x21, x22, [sp, #48]
  42e47c:	add	x22, x3, x4
  42e480:	b.lt	42e714 <_obstack_memory_used@@Base+0xfc24>  // b.tstop
  42e484:	stp	x23, x24, [sp, #64]
  42e488:	mov	x19, x3
  42e48c:	mov	x20, x0
  42e490:	stp	x25, x26, [sp, #80]
  42e494:	mov	x23, x1
  42e498:	mov	x21, x5
  42e49c:	stp	x27, x28, [sp, #96]
  42e4a0:	cmp	x2, x22
  42e4a4:	mov	x28, x2
  42e4a8:	b.lt	42e6fc <_obstack_memory_used@@Base+0xfc0c>  // b.tstop
  42e4ac:	cmp	x4, #0x0
  42e4b0:	ccmp	x3, x22, #0x4, ge  // ge = tcont
  42e4b4:	b.gt	42e6fc <_obstack_memory_used@@Base+0xfc0c>
  42e4b8:	tbnz	x22, #63, 42e704 <_obstack_memory_used@@Base+0xfc14>
  42e4bc:	cmp	x4, #0x0
  42e4c0:	ccmp	x3, x22, #0x0, lt  // lt = tstop
  42e4c4:	b.le	42e704 <_obstack_memory_used@@Base+0xfc14>
  42e4c8:	ldrb	w0, [x20, #56]
  42e4cc:	cmp	x19, x22
  42e4d0:	ubfx	x24, x0, #5, #2
  42e4d4:	b.ge	42e4e4 <_obstack_memory_used@@Base+0xf9f4>  // b.tcont
  42e4d8:	ldr	x1, [x20, #32]
  42e4dc:	cbz	x1, 42e4e4 <_obstack_memory_used@@Base+0xf9f4>
  42e4e0:	tbz	w0, #3, 42e6b8 <_obstack_memory_used@@Base+0xfbc8>
  42e4e4:	ldrb	w1, [x20, #56]
  42e4e8:	cmp	x21, #0x0
  42e4ec:	cset	w0, eq  // eq = none
  42e4f0:	ubfx	x2, x1, #4, #1
  42e4f4:	orr	w0, w0, w2
  42e4f8:	tbnz	w0, #0, 42e6a4 <_obstack_memory_used@@Base+0xfbb4>
  42e4fc:	and	w1, w1, #0x6
  42e500:	cmp	w1, #0x4
  42e504:	ldr	x0, [x20, #48]
  42e508:	b.eq	42e744 <_obstack_memory_used@@Base+0xfc54>  // b.none
  42e50c:	add	x25, x0, #0x1
  42e510:	mov	x27, x25
  42e514:	lsl	x0, x25, #4
  42e518:	bl	402440 <malloc@plt>
  42e51c:	mov	x26, x0
  42e520:	cbz	x0, 42e730 <_obstack_memory_used@@Base+0xfc40>
  42e524:	str	w24, [sp]
  42e528:	mov	x7, x0
  42e52c:	mov	x6, x25
  42e530:	mov	x4, x22
  42e534:	mov	x3, x19
  42e538:	mov	x1, x23
  42e53c:	mov	x5, x28
  42e540:	mov	x2, x28
  42e544:	mov	x0, x20
  42e548:	bl	427c10 <_obstack_memory_used@@Base+0x9120>
  42e54c:	cbnz	w0, 42e668 <_obstack_memory_used@@Base+0xfb78>
  42e550:	cbz	x21, 42e660 <_obstack_memory_used@@Base+0xfb70>
  42e554:	ldrb	w19, [x20, #56]
  42e558:	add	x23, x27, #0x1
  42e55c:	ubfx	x19, x19, #1, #2
  42e560:	cbz	w19, 42e6c4 <_obstack_memory_used@@Base+0xfbd4>
  42e564:	cmp	w19, #0x1
  42e568:	ldr	x22, [x21]
  42e56c:	b.eq	42e770 <_obstack_memory_used@@Base+0xfc80>  // b.none
  42e570:	mov	w19, #0x2                   	// #2
  42e574:	cmp	x27, #0x0
  42e578:	b.le	42e7dc <_obstack_memory_used@@Base+0xfcec>
  42e57c:	ldp	x3, x4, [x21, #8]
  42e580:	lsl	x0, x27, #3
  42e584:	add	x2, x26, x27, lsl #4
  42e588:	add	x1, x4, x0
  42e58c:	add	x0, x3, x0
  42e590:	cmp	x1, x26
  42e594:	add	x5, x3, #0xf
  42e598:	ccmp	x4, x2, #0x2, hi  // hi = pmore
  42e59c:	sub	x5, x5, x4
  42e5a0:	cset	w1, cs  // cs = hs, nlast
  42e5a4:	cmp	x26, x0
  42e5a8:	ccmp	x3, x2, #0x2, cc  // cc = lo, ul, last
  42e5ac:	sub	x2, x27, #0x1
  42e5b0:	cset	w0, cs  // cs = hs, nlast
  42e5b4:	cmp	x5, #0x1e
  42e5b8:	ccmp	x2, #0x5, #0x0, hi  // hi = pmore
  42e5bc:	and	w0, w1, w0
  42e5c0:	cset	w1, hi  // hi = pmore
  42e5c4:	mov	x2, x27
  42e5c8:	tst	w1, w0
  42e5cc:	b.eq	42e7b0 <_obstack_memory_used@@Base+0xfcc0>  // b.none
  42e5d0:	lsr	x5, x27, #1
  42e5d4:	mov	x0, x26
  42e5d8:	mov	x1, #0x0                   	// #0
  42e5dc:	lsl	x5, x5, #4
  42e5e0:	ld2	{v0.2d, v1.2d}, [x0], #32
  42e5e4:	str	q0, [x3, x1]
  42e5e8:	str	q1, [x4, x1]
  42e5ec:	add	x1, x1, #0x10
  42e5f0:	cmp	x5, x1
  42e5f4:	b.ne	42e5e0 <_obstack_memory_used@@Base+0xfaf0>  // b.any
  42e5f8:	and	x1, x27, #0xfffffffffffffffe
  42e5fc:	tbz	w27, #0, 42e618 <_obstack_memory_used@@Base+0xfb28>
  42e600:	lsl	x5, x1, #4
  42e604:	add	x0, x26, x5
  42e608:	ldr	x5, [x26, x5]
  42e60c:	str	x5, [x3, x1, lsl #3]
  42e610:	ldr	x0, [x0, #8]
  42e614:	str	x0, [x4, x1, lsl #3]
  42e618:	ldr	x22, [x21]
  42e61c:	cmp	x22, x2
  42e620:	b.ls	42e64c <_obstack_memory_used@@Base+0xfb5c>  // b.plast
  42e624:	ldp	x4, x3, [x21, #8]
  42e628:	mov	x1, #0xffffffffffffffff    	// #-1
  42e62c:	nop
  42e630:	str	x1, [x3, x2, lsl #3]
  42e634:	add	x27, x27, #0x1
  42e638:	str	x1, [x4, x2, lsl #3]
  42e63c:	mov	x2, x27
  42e640:	ldr	x0, [x21]
  42e644:	cmp	x27, x0
  42e648:	b.cc	42e630 <_obstack_memory_used@@Base+0xfb40>  // b.lo, b.ul, b.last
  42e64c:	ldrb	w0, [x20, #56]
  42e650:	bfi	w0, w19, #1, #2
  42e654:	strb	w0, [x20, #56]
  42e658:	tst	w0, #0x6
  42e65c:	b.eq	42e674 <_obstack_memory_used@@Base+0xfb84>  // b.none
  42e660:	ldr	x19, [x26]
  42e664:	b	42e678 <_obstack_memory_used@@Base+0xfb88>
  42e668:	cmp	w0, #0x1
  42e66c:	mov	x19, #0xffffffffffffffff    	// #-1
  42e670:	b.eq	42e678 <_obstack_memory_used@@Base+0xfb88>  // b.none
  42e674:	mov	x19, #0xfffffffffffffffe    	// #-2
  42e678:	mov	x0, x26
  42e67c:	bl	4026b0 <free@plt>
  42e680:	ldp	x23, x24, [sp, #64]
  42e684:	ldp	x25, x26, [sp, #80]
  42e688:	ldp	x27, x28, [sp, #96]
  42e68c:	mov	x0, x19
  42e690:	ldp	x29, x30, [sp, #16]
  42e694:	ldp	x19, x20, [sp, #32]
  42e698:	ldp	x21, x22, [sp, #48]
  42e69c:	add	sp, sp, #0x70
  42e6a0:	ret
  42e6a4:	mov	x25, #0x1                   	// #1
  42e6a8:	mov	x0, #0x10                  	// #16
  42e6ac:	mov	x27, x25
  42e6b0:	mov	x21, #0x0                   	// #0
  42e6b4:	b	42e518 <_obstack_memory_used@@Base+0xfa28>
  42e6b8:	mov	x0, x20
  42e6bc:	bl	42d998 <_obstack_memory_used@@Base+0xeea8>
  42e6c0:	b	42e4e4 <_obstack_memory_used@@Base+0xf9f4>
  42e6c4:	lsl	x24, x23, #3
  42e6c8:	mov	x22, x23
  42e6cc:	mov	x0, x24
  42e6d0:	bl	402440 <malloc@plt>
  42e6d4:	str	x0, [x21, #8]
  42e6d8:	mov	x19, x0
  42e6dc:	cbz	x0, 42e7e8 <_obstack_memory_used@@Base+0xfcf8>
  42e6e0:	mov	x0, x24
  42e6e4:	bl	402440 <malloc@plt>
  42e6e8:	str	x0, [x21, #16]
  42e6ec:	cbz	x0, 42e7f0 <_obstack_memory_used@@Base+0xfd00>
  42e6f0:	mov	w19, #0x1                   	// #1
  42e6f4:	str	x23, [x21]
  42e6f8:	b	42e574 <_obstack_memory_used@@Base+0xfa84>
  42e6fc:	mov	x22, x28
  42e700:	b	42e4c8 <_obstack_memory_used@@Base+0xf9d8>
  42e704:	ldrb	w24, [x20, #56]
  42e708:	mov	x22, #0x0                   	// #0
  42e70c:	ubfx	x24, x24, #5, #2
  42e710:	b	42e4e4 <_obstack_memory_used@@Base+0xf9f4>
  42e714:	mov	x19, #0xffffffffffffffff    	// #-1
  42e718:	mov	x0, x19
  42e71c:	ldp	x29, x30, [sp, #16]
  42e720:	ldp	x19, x20, [sp, #32]
  42e724:	ldp	x21, x22, [sp, #48]
  42e728:	add	sp, sp, #0x70
  42e72c:	ret
  42e730:	mov	x19, #0xfffffffffffffffe    	// #-2
  42e734:	ldp	x23, x24, [sp, #64]
  42e738:	ldp	x25, x26, [sp, #80]
  42e73c:	ldp	x27, x28, [sp, #96]
  42e740:	b	42e68c <_obstack_memory_used@@Base+0xfb9c>
  42e744:	ldr	x25, [x21]
  42e748:	cmp	x25, x0
  42e74c:	b.hi	42e50c <_obstack_memory_used@@Base+0xfa1c>  // b.pmore
  42e750:	cmp	x25, #0x0
  42e754:	mov	x27, x25
  42e758:	b.gt	42e514 <_obstack_memory_used@@Base+0xfa24>
  42e75c:	mov	x25, #0x1                   	// #1
  42e760:	mov	x0, #0x10                  	// #16
  42e764:	mov	x27, x25
  42e768:	mov	x21, #0x0                   	// #0
  42e76c:	b	42e518 <_obstack_memory_used@@Base+0xfa28>
  42e770:	cmp	x22, x23
  42e774:	b.cs	42e574 <_obstack_memory_used@@Base+0xfa84>  // b.hs, b.nlast
  42e778:	ldr	x0, [x21, #8]
  42e77c:	lsl	x22, x23, #3
  42e780:	mov	x1, x22
  42e784:	bl	402550 <realloc@plt>
  42e788:	mov	x24, x0
  42e78c:	cbz	x0, 42e7e8 <_obstack_memory_used@@Base+0xfcf8>
  42e790:	ldr	x0, [x21, #16]
  42e794:	mov	x1, x22
  42e798:	bl	402550 <realloc@plt>
  42e79c:	cbz	x0, 42e800 <_obstack_memory_used@@Base+0xfd10>
  42e7a0:	mov	x22, x23
  42e7a4:	stp	x23, x24, [x21]
  42e7a8:	str	x0, [x21, #16]
  42e7ac:	b	42e574 <_obstack_memory_used@@Base+0xfa84>
  42e7b0:	mov	x1, x26
  42e7b4:	mov	x0, #0x0                   	// #0
  42e7b8:	ldr	x5, [x1]
  42e7bc:	str	x5, [x3, x0, lsl #3]
  42e7c0:	add	x1, x1, #0x10
  42e7c4:	ldur	x5, [x1, #-8]
  42e7c8:	str	x5, [x4, x0, lsl #3]
  42e7cc:	add	x0, x0, #0x1
  42e7d0:	cmp	x27, x0
  42e7d4:	b.ne	42e7b8 <_obstack_memory_used@@Base+0xfcc8>  // b.any
  42e7d8:	b	42e618 <_obstack_memory_used@@Base+0xfb28>
  42e7dc:	mov	x2, #0x0                   	// #0
  42e7e0:	mov	x27, #0x0                   	// #0
  42e7e4:	b	42e61c <_obstack_memory_used@@Base+0xfb2c>
  42e7e8:	mov	w19, #0x0                   	// #0
  42e7ec:	b	42e64c <_obstack_memory_used@@Base+0xfb5c>
  42e7f0:	mov	x0, x19
  42e7f4:	mov	w19, #0x0                   	// #0
  42e7f8:	bl	4026b0 <free@plt>
  42e7fc:	b	42e64c <_obstack_memory_used@@Base+0xfb5c>
  42e800:	mov	x0, x24
  42e804:	mov	w19, #0x0                   	// #0
  42e808:	bl	4026b0 <free@plt>
  42e80c:	b	42e64c <_obstack_memory_used@@Base+0xfb5c>
  42e810:	stp	x29, x30, [sp, #-96]!
  42e814:	cmp	x4, #0x0
  42e818:	ccmp	x7, #0x0, #0x1, ge  // ge = tcont
  42e81c:	mov	x29, sp
  42e820:	stp	x19, x20, [sp, #16]
  42e824:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  42e828:	b.lt	42e904 <_obstack_memory_used@@Base+0xfe14>  // b.tstop
  42e82c:	stp	x27, x28, [sp, #80]
  42e830:	mov	x19, x4
  42e834:	mov	x20, x2
  42e838:	adds	x27, x2, x4
  42e83c:	b.vs	42e900 <_obstack_memory_used@@Base+0xfe10>
  42e840:	stp	x21, x22, [sp, #32]
  42e844:	mov	x28, x1
  42e848:	mov	x21, x7
  42e84c:	stp	x23, x24, [sp, #48]
  42e850:	mov	x23, x0
  42e854:	mov	x24, x5
  42e858:	stp	x25, x26, [sp, #64]
  42e85c:	mov	x25, x6
  42e860:	cbz	x4, 42e918 <_obstack_memory_used@@Base+0xfe28>
  42e864:	mov	x22, x3
  42e868:	mov	x26, #0x0                   	// #0
  42e86c:	cbnz	x2, 42e8c0 <_obstack_memory_used@@Base+0xfdd0>
  42e870:	mov	x6, x25
  42e874:	mov	x5, x21
  42e878:	mov	x3, x24
  42e87c:	mov	x2, x27
  42e880:	mov	x1, x22
  42e884:	mov	w7, #0x1                   	// #1
  42e888:	mov	x4, #0x0                   	// #0
  42e88c:	mov	x0, x23
  42e890:	bl	42da68 <_obstack_memory_used@@Base+0xef78>
  42e894:	mov	x19, x0
  42e898:	mov	x0, x26
  42e89c:	bl	4026b0 <free@plt>
  42e8a0:	mov	x0, x19
  42e8a4:	ldp	x19, x20, [sp, #16]
  42e8a8:	ldp	x21, x22, [sp, #32]
  42e8ac:	ldp	x23, x24, [sp, #48]
  42e8b0:	ldp	x25, x26, [sp, #64]
  42e8b4:	ldp	x27, x28, [sp, #80]
  42e8b8:	ldp	x29, x30, [sp], #96
  42e8bc:	ret
  42e8c0:	mov	x0, x27
  42e8c4:	bl	402440 <malloc@plt>
  42e8c8:	mov	x26, x0
  42e8cc:	cbz	x0, 42e8f4 <_obstack_memory_used@@Base+0xfe04>
  42e8d0:	mov	x1, x28
  42e8d4:	mov	x2, x20
  42e8d8:	bl	4022a0 <memcpy@plt>
  42e8dc:	mov	x1, x22
  42e8e0:	mov	x2, x19
  42e8e4:	add	x0, x26, x20
  42e8e8:	mov	x22, x26
  42e8ec:	bl	4022a0 <memcpy@plt>
  42e8f0:	b	42e870 <_obstack_memory_used@@Base+0xfd80>
  42e8f4:	ldp	x21, x22, [sp, #32]
  42e8f8:	ldp	x23, x24, [sp, #48]
  42e8fc:	ldp	x25, x26, [sp, #64]
  42e900:	ldp	x27, x28, [sp, #80]
  42e904:	mov	x19, #0xfffffffffffffffe    	// #-2
  42e908:	mov	x0, x19
  42e90c:	ldp	x19, x20, [sp, #16]
  42e910:	ldp	x29, x30, [sp], #96
  42e914:	ret
  42e918:	mov	x22, x1
  42e91c:	mov	x26, #0x0                   	// #0
  42e920:	b	42e870 <_obstack_memory_used@@Base+0xfd80>
  42e924:	nop
  42e928:	stp	x29, x30, [sp, #-112]!
  42e92c:	cmp	x4, #0x0
  42e930:	mov	x29, sp
  42e934:	stp	x27, x28, [sp, #80]
  42e938:	ldr	x27, [sp, #112]
  42e93c:	stp	x19, x20, [sp, #16]
  42e940:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
  42e944:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  42e948:	b.lt	42ea1c <_obstack_memory_used@@Base+0xff2c>  // b.tstop
  42e94c:	mov	x19, x4
  42e950:	mov	x20, x2
  42e954:	adds	x28, x2, x4
  42e958:	b.vs	42ea1c <_obstack_memory_used@@Base+0xff2c>
  42e95c:	stp	x21, x22, [sp, #32]
  42e960:	mov	x22, x0
  42e964:	stp	x23, x24, [sp, #48]
  42e968:	mov	x23, x5
  42e96c:	mov	x24, x6
  42e970:	stp	x25, x26, [sp, #64]
  42e974:	mov	x25, x7
  42e978:	cbz	x4, 42ea34 <_obstack_memory_used@@Base+0xff44>
  42e97c:	str	x1, [sp, #104]
  42e980:	mov	x21, x3
  42e984:	mov	x26, #0x0                   	// #0
  42e988:	cbnz	x2, 42e9dc <_obstack_memory_used@@Base+0xfeec>
  42e98c:	mov	x6, x25
  42e990:	mov	x5, x27
  42e994:	mov	x4, x24
  42e998:	mov	x3, x23
  42e99c:	mov	x2, x28
  42e9a0:	mov	x1, x21
  42e9a4:	mov	w7, #0x0                   	// #0
  42e9a8:	mov	x0, x22
  42e9ac:	bl	42da68 <_obstack_memory_used@@Base+0xef78>
  42e9b0:	mov	x19, x0
  42e9b4:	mov	x0, x26
  42e9b8:	bl	4026b0 <free@plt>
  42e9bc:	mov	x0, x19
  42e9c0:	ldp	x19, x20, [sp, #16]
  42e9c4:	ldp	x21, x22, [sp, #32]
  42e9c8:	ldp	x23, x24, [sp, #48]
  42e9cc:	ldp	x25, x26, [sp, #64]
  42e9d0:	ldp	x27, x28, [sp, #80]
  42e9d4:	ldp	x29, x30, [sp], #112
  42e9d8:	ret
  42e9dc:	mov	x0, x28
  42e9e0:	bl	402440 <malloc@plt>
  42e9e4:	mov	x26, x0
  42e9e8:	cbz	x0, 42ea10 <_obstack_memory_used@@Base+0xff20>
  42e9ec:	ldr	x1, [sp, #104]
  42e9f0:	mov	x2, x20
  42e9f4:	bl	4022a0 <memcpy@plt>
  42e9f8:	mov	x1, x21
  42e9fc:	mov	x2, x19
  42ea00:	add	x0, x26, x20
  42ea04:	mov	x21, x26
  42ea08:	bl	4022a0 <memcpy@plt>
  42ea0c:	b	42e98c <_obstack_memory_used@@Base+0xfe9c>
  42ea10:	ldp	x21, x22, [sp, #32]
  42ea14:	ldp	x23, x24, [sp, #48]
  42ea18:	ldp	x25, x26, [sp, #64]
  42ea1c:	mov	x19, #0xfffffffffffffffe    	// #-2
  42ea20:	mov	x0, x19
  42ea24:	ldp	x19, x20, [sp, #16]
  42ea28:	ldp	x27, x28, [sp, #80]
  42ea2c:	ldp	x29, x30, [sp], #112
  42ea30:	ret
  42ea34:	mov	x21, x1
  42ea38:	mov	x26, #0x0                   	// #0
  42ea3c:	b	42e98c <_obstack_memory_used@@Base+0xfe9c>
  42ea40:	cbz	x2, 42ea60 <_obstack_memory_used@@Base+0xff70>
  42ea44:	ldrb	w5, [x0, #56]
  42ea48:	mov	w6, #0x1                   	// #1
  42ea4c:	bfi	w5, w6, #1, #2
  42ea50:	strb	w5, [x0, #56]
  42ea54:	stp	x2, x3, [x1]
  42ea58:	str	x4, [x1, #16]
  42ea5c:	ret
  42ea60:	ldrb	w2, [x0, #56]
  42ea64:	and	w2, w2, #0xfffffff9
  42ea68:	strb	w2, [x0, #56]
  42ea6c:	str	xzr, [x1]
  42ea70:	stp	xzr, xzr, [x1, #8]
  42ea74:	ret
  42ea78:	stp	x29, x30, [sp, #-32]!
  42ea7c:	mov	x29, sp
  42ea80:	stp	x19, x20, [sp, #16]
  42ea84:	mov	x19, x0
  42ea88:	bl	4023b0 <__fpending@plt>
  42ea8c:	mov	x20, x0
  42ea90:	mov	x0, x19
  42ea94:	ldr	w19, [x19]
  42ea98:	and	w19, w19, #0x20
  42ea9c:	bl	4023e0 <fclose@plt>
  42eaa0:	cbnz	w19, 42eac8 <_obstack_memory_used@@Base+0xffd8>
  42eaa4:	cbz	w0, 42eabc <_obstack_memory_used@@Base+0xffcc>
  42eaa8:	cbnz	x20, 42eae0 <_obstack_memory_used@@Base+0xfff0>
  42eaac:	bl	402890 <__errno_location@plt>
  42eab0:	ldr	w0, [x0]
  42eab4:	cmp	w0, #0x9
  42eab8:	csetm	w0, ne  // ne = any
  42eabc:	ldp	x19, x20, [sp, #16]
  42eac0:	ldp	x29, x30, [sp], #32
  42eac4:	ret
  42eac8:	cbnz	w0, 42eae0 <_obstack_memory_used@@Base+0xfff0>
  42eacc:	bl	402890 <__errno_location@plt>
  42ead0:	mov	x1, x0
  42ead4:	mov	w0, #0xffffffff            	// #-1
  42ead8:	str	wzr, [x1]
  42eadc:	b	42eabc <_obstack_memory_used@@Base+0xffcc>
  42eae0:	mov	w0, #0xffffffff            	// #-1
  42eae4:	b	42eabc <_obstack_memory_used@@Base+0xffcc>
  42eae8:	mov	w1, #0xf616                	// #62998
  42eaec:	str	xzr, [x0, #16]
  42eaf0:	movk	w1, #0x95, lsl #16
  42eaf4:	str	w1, [x0, #24]
  42eaf8:	ret
  42eafc:	nop
  42eb00:	mov	x2, x0
  42eb04:	mov	w0, #0xf616                	// #62998
  42eb08:	movk	w0, #0x95, lsl #16
  42eb0c:	ldr	w3, [x2, #24]
  42eb10:	cmp	w3, w0
  42eb14:	b.ne	42eb84 <_obstack_memory_used@@Base+0x10094>  // b.any
  42eb18:	ldr	x0, [x2, #16]
  42eb1c:	ldr	x3, [x1, #8]
  42eb20:	cbz	x0, 42eb48 <_obstack_memory_used@@Base+0x10058>
  42eb24:	ldr	x4, [x2]
  42eb28:	cmp	x4, x3
  42eb2c:	b.eq	42eb60 <_obstack_memory_used@@Base+0x10070>  // b.none
  42eb30:	add	x4, x0, #0x1
  42eb34:	str	x4, [x2, #16]
  42eb38:	tst	x0, x4
  42eb3c:	mov	w0, #0x0                   	// #0
  42eb40:	b.eq	42eb78 <_obstack_memory_used@@Base+0x10088>  // b.none
  42eb44:	ret
  42eb48:	mov	x0, #0x1                   	// #1
  42eb4c:	str	x0, [x2, #16]
  42eb50:	ldr	x1, [x1]
  42eb54:	mov	w0, #0x0                   	// #0
  42eb58:	stp	x3, x1, [x2]
  42eb5c:	ret
  42eb60:	ldr	x5, [x1]
  42eb64:	ldr	x4, [x2, #8]
  42eb68:	cmp	x5, x4
  42eb6c:	b.ne	42eb30 <_obstack_memory_used@@Base+0x10040>  // b.any
  42eb70:	mov	w0, #0x1                   	// #1
  42eb74:	ret
  42eb78:	cbnz	x4, 42eb50 <_obstack_memory_used@@Base+0x10060>
  42eb7c:	mov	w0, #0x1                   	// #1
  42eb80:	ret
  42eb84:	stp	x29, x30, [sp, #-16]!
  42eb88:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x13510>
  42eb8c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  42eb90:	mov	x29, sp
  42eb94:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x13510>
  42eb98:	add	x3, x3, #0x8c8
  42eb9c:	add	x1, x1, #0x8a0
  42eba0:	add	x0, x0, #0x8b0
  42eba4:	mov	w2, #0x3c                  	// #60
  42eba8:	bl	402880 <__assert_fail@plt>
  42ebac:	nop
  42ebb0:	ldrb	w1, [x0]
  42ebb4:	cmp	w1, #0x2f
  42ebb8:	b.ne	42ebcc <_obstack_memory_used@@Base+0x100dc>  // b.any
  42ebbc:	nop
  42ebc0:	ldrb	w1, [x0, #1]!
  42ebc4:	cmp	w1, #0x2f
  42ebc8:	b.eq	42ebc0 <_obstack_memory_used@@Base+0x100d0>  // b.none
  42ebcc:	cbz	w1, 42ec04 <_obstack_memory_used@@Base+0x10114>
  42ebd0:	mov	x2, x0
  42ebd4:	mov	w3, #0x0                   	// #0
  42ebd8:	b	42ebf0 <_obstack_memory_used@@Base+0x10100>
  42ebdc:	cbz	w3, 42ebe8 <_obstack_memory_used@@Base+0x100f8>
  42ebe0:	mov	x0, x2
  42ebe4:	mov	w3, #0x0                   	// #0
  42ebe8:	ldrb	w1, [x2, #1]!
  42ebec:	cbz	w1, 42ec04 <_obstack_memory_used@@Base+0x10114>
  42ebf0:	cmp	w1, #0x2f
  42ebf4:	b.ne	42ebdc <_obstack_memory_used@@Base+0x100ec>  // b.any
  42ebf8:	ldrb	w1, [x2, #1]!
  42ebfc:	mov	w3, #0x1                   	// #1
  42ec00:	cbnz	w1, 42ebf0 <_obstack_memory_used@@Base+0x10100>
  42ec04:	ret
  42ec08:	stp	x29, x30, [sp, #-32]!
  42ec0c:	mov	x29, sp
  42ec10:	str	x19, [sp, #16]
  42ec14:	mov	x19, x0
  42ec18:	bl	402300 <strlen@plt>
  42ec1c:	subs	x1, x0, #0x1
  42ec20:	b.ls	42ec30 <_obstack_memory_used@@Base+0x10140>  // b.plast
  42ec24:	ldrb	w2, [x19, x1]
  42ec28:	cmp	w2, #0x2f
  42ec2c:	b.eq	42ec3c <_obstack_memory_used@@Base+0x1014c>  // b.none
  42ec30:	ldr	x19, [sp, #16]
  42ec34:	ldp	x29, x30, [sp], #32
  42ec38:	ret
  42ec3c:	mov	x0, x1
  42ec40:	b	42ec1c <_obstack_memory_used@@Base+0x1012c>
  42ec44:	nop
  42ec48:	stp	x29, x30, [sp, #-64]!
  42ec4c:	mov	x29, sp
  42ec50:	str	x2, [sp, #56]
  42ec54:	mov	w2, #0x0                   	// #0
  42ec58:	tbnz	w1, #6, 42ec6c <_obstack_memory_used@@Base+0x1017c>
  42ec5c:	bl	402460 <open@plt>
  42ec60:	bl	41ab88 <wcrtomb@plt+0x18268>
  42ec64:	ldp	x29, x30, [sp], #64
  42ec68:	ret
  42ec6c:	mov	w2, #0xfffffff8            	// #-8
  42ec70:	stp	w2, wzr, [sp, #40]
  42ec74:	ldr	w2, [sp, #56]
  42ec78:	add	x3, sp, #0x30
  42ec7c:	add	x4, sp, #0x40
  42ec80:	stp	x4, x4, [sp, #16]
  42ec84:	str	x3, [sp, #32]
  42ec88:	bl	402460 <open@plt>
  42ec8c:	bl	41ab88 <wcrtomb@plt+0x18268>
  42ec90:	ldp	x29, x30, [sp], #64
  42ec94:	ret
  42ec98:	stp	x29, x30, [sp, #-288]!
  42ec9c:	mov	x2, #0x101                 	// #257
  42eca0:	mov	x29, sp
  42eca4:	add	x1, sp, #0x18
  42eca8:	bl	42ee68 <_obstack_memory_used@@Base+0x10378>
  42ecac:	cbnz	w0, 42ece8 <_obstack_memory_used@@Base+0x101f8>
  42ecb0:	ldrh	w0, [sp, #24]
  42ecb4:	cmp	w0, #0x43
  42ecb8:	b.eq	42ece8 <_obstack_memory_used@@Base+0x101f8>  // b.none
  42ecbc:	ldr	w1, [sp, #24]
  42ecc0:	mov	w0, #0x4f50                	// #20304
  42ecc4:	movk	w0, #0x4953, lsl #16
  42ecc8:	cmp	w1, w0
  42eccc:	b.eq	42ecdc <_obstack_memory_used@@Base+0x101ec>  // b.none
  42ecd0:	mov	w0, #0x1                   	// #1
  42ecd4:	ldp	x29, x30, [sp], #288
  42ecd8:	ret
  42ecdc:	ldrh	w0, [sp, #28]
  42ece0:	cmp	w0, #0x58
  42ece4:	b.ne	42ecd0 <_obstack_memory_used@@Base+0x101e0>  // b.any
  42ece8:	mov	w0, #0x0                   	// #0
  42ecec:	ldp	x29, x30, [sp], #288
  42ecf0:	ret
  42ecf4:	nop
  42ecf8:	fmov	s0, w1
  42ecfc:	mov	w1, #0x1                   	// #1
  42ed00:	stur	xzr, [x0, #20]
  42ed04:	dup	v1.4s, v0.s[0]
  42ed08:	str	s0, [x0, #16]
  42ed0c:	strb	w1, [x0, #28]
  42ed10:	str	q1, [x0]
  42ed14:	ret
  42ed18:	ldrb	w0, [x0, #28]
  42ed1c:	ret
  42ed20:	ldrb	w4, [x0, #28]
  42ed24:	mov	x2, x0
  42ed28:	ldr	w3, [x0, #20]
  42ed2c:	eor	w4, w4, #0x1
  42ed30:	add	w3, w4, w3
  42ed34:	and	x5, x3, #0x3
  42ed38:	and	w3, w3, #0x3
  42ed3c:	ldr	w0, [x0, x5, lsl #2]
  42ed40:	str	w1, [x2, x5, lsl #2]
  42ed44:	str	w3, [x2, #20]
  42ed48:	ldr	w1, [x2, #24]
  42ed4c:	cmp	w1, w3
  42ed50:	b.ne	42ed60 <_obstack_memory_used@@Base+0x10270>  // b.any
  42ed54:	add	w4, w4, w1
  42ed58:	and	w4, w4, #0x3
  42ed5c:	str	w4, [x2, #24]
  42ed60:	strb	wzr, [x2, #28]
  42ed64:	ret
  42ed68:	mov	x1, x0
  42ed6c:	ldrb	w0, [x0, #28]
  42ed70:	cbnz	w0, 42edac <_obstack_memory_used@@Base+0x102bc>
  42ed74:	ldp	w4, w2, [x1, #16]
  42ed78:	mov	w3, w2
  42ed7c:	ldr	w0, [x1, x3, lsl #2]
  42ed80:	str	w4, [x1, x3, lsl #2]
  42ed84:	ldr	w3, [x1, #24]
  42ed88:	cmp	w2, w3
  42ed8c:	b.eq	42eda0 <_obstack_memory_used@@Base+0x102b0>  // b.none
  42ed90:	add	w2, w2, #0x3
  42ed94:	and	w2, w2, #0x3
  42ed98:	str	w2, [x1, #20]
  42ed9c:	ret
  42eda0:	mov	w2, #0x1                   	// #1
  42eda4:	strb	w2, [x1, #28]
  42eda8:	ret
  42edac:	stp	x29, x30, [sp, #-16]!
  42edb0:	mov	x29, sp
  42edb4:	bl	4025f0 <abort@plt>
  42edb8:	stp	x29, x30, [sp, #-16]!
  42edbc:	mov	w0, #0xe                   	// #14
  42edc0:	mov	x29, sp
  42edc4:	bl	402400 <nl_langinfo@plt>
  42edc8:	cbz	x0, 42ede8 <_obstack_memory_used@@Base+0x102f8>
  42edcc:	ldrb	w2, [x0]
  42edd0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x13510>
  42edd4:	add	x1, x1, #0x8e8
  42edd8:	cmp	w2, #0x0
  42eddc:	csel	x0, x1, x0, eq  // eq = none
  42ede0:	ldp	x29, x30, [sp], #16
  42ede4:	ret
  42ede8:	ldp	x29, x30, [sp], #16
  42edec:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x13510>
  42edf0:	add	x0, x0, #0x8e8
  42edf4:	ret
  42edf8:	stp	x29, x30, [sp, #-48]!
  42edfc:	mov	x29, sp
  42ee00:	str	x21, [sp, #32]
  42ee04:	mov	x21, x3
  42ee08:	mov	w3, #0x4900                	// #18688
  42ee0c:	stp	x19, x20, [sp, #16]
  42ee10:	movk	w3, #0x8, lsl #16
  42ee14:	mov	x20, #0x0                   	// #0
  42ee18:	orr	w2, w2, w3
  42ee1c:	bl	417750 <wcrtomb@plt+0x14e30>
  42ee20:	tbnz	w0, #31, 42ee38 <_obstack_memory_used@@Base+0x10348>
  42ee24:	mov	w19, w0
  42ee28:	bl	4025c0 <fdopendir@plt>
  42ee2c:	mov	x20, x0
  42ee30:	cbz	x0, 42ee4c <_obstack_memory_used@@Base+0x1035c>
  42ee34:	str	w19, [x21]
  42ee38:	mov	x0, x20
  42ee3c:	ldp	x19, x20, [sp, #16]
  42ee40:	ldr	x21, [sp, #32]
  42ee44:	ldp	x29, x30, [sp], #48
  42ee48:	ret
  42ee4c:	bl	402890 <__errno_location@plt>
  42ee50:	mov	x21, x0
  42ee54:	mov	w0, w19
  42ee58:	ldr	w19, [x21]
  42ee5c:	bl	402580 <close@plt>
  42ee60:	b	42ee34 <_obstack_memory_used@@Base+0x10344>
  42ee64:	nop
  42ee68:	stp	x29, x30, [sp, #-48]!
  42ee6c:	mov	x29, sp
  42ee70:	stp	x19, x20, [sp, #16]
  42ee74:	mov	x19, x2
  42ee78:	stp	x21, x22, [sp, #32]
  42ee7c:	mov	x21, x1
  42ee80:	mov	x1, #0x0                   	// #0
  42ee84:	bl	402900 <setlocale@plt>
  42ee88:	cbz	x0, 42ef0c <_obstack_memory_used@@Base+0x1041c>
  42ee8c:	mov	x20, x0
  42ee90:	bl	402300 <strlen@plt>
  42ee94:	cmp	x19, x0
  42ee98:	b.hi	42eeb8 <_obstack_memory_used@@Base+0x103c8>  // b.pmore
  42ee9c:	mov	w22, #0x22                  	// #34
  42eea0:	cbnz	x19, 42eee0 <_obstack_memory_used@@Base+0x103f0>
  42eea4:	mov	w0, w22
  42eea8:	ldp	x19, x20, [sp, #16]
  42eeac:	ldp	x21, x22, [sp, #32]
  42eeb0:	ldp	x29, x30, [sp], #48
  42eeb4:	ret
  42eeb8:	add	x2, x0, #0x1
  42eebc:	mov	x1, x20
  42eec0:	mov	x0, x21
  42eec4:	mov	w22, #0x0                   	// #0
  42eec8:	bl	4022a0 <memcpy@plt>
  42eecc:	mov	w0, w22
  42eed0:	ldp	x19, x20, [sp, #16]
  42eed4:	ldp	x21, x22, [sp, #32]
  42eed8:	ldp	x29, x30, [sp], #48
  42eedc:	ret
  42eee0:	sub	x19, x19, #0x1
  42eee4:	mov	x1, x20
  42eee8:	mov	x2, x19
  42eeec:	mov	x0, x21
  42eef0:	bl	4022a0 <memcpy@plt>
  42eef4:	strb	wzr, [x21, x19]
  42eef8:	mov	w0, w22
  42eefc:	ldp	x19, x20, [sp, #16]
  42ef00:	ldp	x21, x22, [sp, #32]
  42ef04:	ldp	x29, x30, [sp], #48
  42ef08:	ret
  42ef0c:	mov	w22, #0x16                  	// #22
  42ef10:	cbz	x19, 42eea4 <_obstack_memory_used@@Base+0x103b4>
  42ef14:	strb	wzr, [x21]
  42ef18:	b	42eea4 <_obstack_memory_used@@Base+0x103b4>
  42ef1c:	nop
  42ef20:	mov	x1, #0x0                   	// #0
  42ef24:	b	402900 <setlocale@plt>
  42ef28:	mov	w2, #0x3                   	// #3
  42ef2c:	mov	w1, #0x0                   	// #0
  42ef30:	b	42ef38 <_obstack_memory_used@@Base+0x10448>
  42ef34:	nop
  42ef38:	stp	x29, x30, [sp, #-112]!
  42ef3c:	mov	w6, #0xffffffe0            	// #-32
  42ef40:	mov	x29, sp
  42ef44:	add	x7, sp, #0x50
  42ef48:	stp	x19, x20, [sp, #16]
  42ef4c:	str	x7, [sp, #64]
  42ef50:	stp	w6, wzr, [sp, #72]
  42ef54:	stp	x2, x3, [sp, #80]
  42ef58:	add	x2, sp, #0x70
  42ef5c:	stp	x2, x2, [sp, #48]
  42ef60:	stp	x4, x5, [sp, #96]
  42ef64:	cbz	w1, 42f024 <_obstack_memory_used@@Base+0x10534>
  42ef68:	mov	w20, w0
  42ef6c:	mov	w3, w1
  42ef70:	cmp	w1, #0x406
  42ef74:	b.eq	42f040 <_obstack_memory_used@@Base+0x10550>  // b.none
  42ef78:	cmp	w1, #0xb
  42ef7c:	b.gt	42efc8 <_obstack_memory_used@@Base+0x104d8>
  42ef80:	cmp	w1, #0x0
  42ef84:	b.le	42eff4 <_obstack_memory_used@@Base+0x10504>
  42ef88:	mov	x1, #0x1                   	// #1
  42ef8c:	mov	x2, #0x514                 	// #1300
  42ef90:	lsl	x1, x1, x3
  42ef94:	tst	x1, x2
  42ef98:	b.ne	42f0bc <_obstack_memory_used@@Base+0x105cc>  // b.any
  42ef9c:	mov	x2, #0xa0a                 	// #2570
  42efa0:	tst	x1, x2
  42efa4:	b.eq	42eff4 <_obstack_memory_used@@Base+0x10504>  // b.none
  42efa8:	mov	w1, w3
  42efac:	mov	w0, w20
  42efb0:	bl	402720 <fcntl@plt>
  42efb4:	mov	w19, w0
  42efb8:	mov	w0, w19
  42efbc:	ldp	x19, x20, [sp, #16]
  42efc0:	ldp	x29, x30, [sp], #112
  42efc4:	ret
  42efc8:	sub	w0, w1, #0x400
  42efcc:	cmp	w0, #0xa
  42efd0:	b.hi	42eff4 <_obstack_memory_used@@Base+0x10504>  // b.pmore
  42efd4:	mov	x1, #0x1                   	// #1
  42efd8:	mov	x2, #0x2c5                 	// #709
  42efdc:	lsl	x1, x1, x0
  42efe0:	tst	x1, x2
  42efe4:	b.ne	42f0bc <_obstack_memory_used@@Base+0x105cc>  // b.any
  42efe8:	mov	x2, #0x502                 	// #1282
  42efec:	tst	x1, x2
  42eff0:	b.ne	42efa8 <_obstack_memory_used@@Base+0x104b8>  // b.any
  42eff4:	ldr	w0, [sp, #72]
  42eff8:	ldr	x1, [sp, #48]
  42effc:	tbnz	w0, #31, 42f168 <_obstack_memory_used@@Base+0x10678>
  42f000:	ldr	x2, [x1]
  42f004:	mov	w0, w20
  42f008:	mov	w1, w3
  42f00c:	bl	402720 <fcntl@plt>
  42f010:	mov	w19, w0
  42f014:	mov	w0, w19
  42f018:	ldp	x19, x20, [sp, #16]
  42f01c:	ldp	x29, x30, [sp], #112
  42f020:	ret
  42f024:	ldr	w2, [sp, #80]
  42f028:	bl	402720 <fcntl@plt>
  42f02c:	mov	w19, w0
  42f030:	mov	w0, w19
  42f034:	ldp	x19, x20, [sp, #16]
  42f038:	ldp	x29, x30, [sp], #112
  42f03c:	ret
  42f040:	stp	x21, x22, [sp, #32]
  42f044:	adrp	x21, 44d000 <__progname@@GLIBC_2.17+0x3b98>
  42f048:	mov	w2, #0xffffffe8            	// #-24
  42f04c:	str	w2, [sp, #72]
  42f050:	ldr	w2, [x21, #2256]
  42f054:	ldr	w22, [sp, #80]
  42f058:	tbnz	w2, #31, 42f088 <_obstack_memory_used@@Base+0x10598>
  42f05c:	mov	w2, w22
  42f060:	bl	402720 <fcntl@plt>
  42f064:	mov	w19, w0
  42f068:	tbnz	w0, #31, 42f0ec <_obstack_memory_used@@Base+0x105fc>
  42f06c:	mov	w0, #0x1                   	// #1
  42f070:	str	w0, [x21, #2256]
  42f074:	mov	w0, w19
  42f078:	ldp	x19, x20, [sp, #16]
  42f07c:	ldp	x21, x22, [sp, #32]
  42f080:	ldp	x29, x30, [sp], #112
  42f084:	ret
  42f088:	mov	w2, w22
  42f08c:	mov	w1, #0x0                   	// #0
  42f090:	bl	402720 <fcntl@plt>
  42f094:	mov	w19, w0
  42f098:	tbnz	w0, #31, 42f0a8 <_obstack_memory_used@@Base+0x105b8>
  42f09c:	ldr	w0, [x21, #2256]
  42f0a0:	cmn	w0, #0x1
  42f0a4:	b.eq	42f11c <_obstack_memory_used@@Base+0x1062c>  // b.none
  42f0a8:	mov	w0, w19
  42f0ac:	ldp	x19, x20, [sp, #16]
  42f0b0:	ldp	x21, x22, [sp, #32]
  42f0b4:	ldp	x29, x30, [sp], #112
  42f0b8:	ret
  42f0bc:	ldr	w0, [sp, #72]
  42f0c0:	ldr	x1, [sp, #48]
  42f0c4:	tbnz	w0, #31, 42f17c <_obstack_memory_used@@Base+0x1068c>
  42f0c8:	ldr	w2, [x1]
  42f0cc:	mov	w0, w20
  42f0d0:	mov	w1, w3
  42f0d4:	bl	402720 <fcntl@plt>
  42f0d8:	mov	w19, w0
  42f0dc:	mov	w0, w19
  42f0e0:	ldp	x19, x20, [sp, #16]
  42f0e4:	ldp	x29, x30, [sp], #112
  42f0e8:	ret
  42f0ec:	bl	402890 <__errno_location@plt>
  42f0f0:	ldr	w0, [x0]
  42f0f4:	cmp	w0, #0x16
  42f0f8:	b.ne	42f06c <_obstack_memory_used@@Base+0x1057c>  // b.any
  42f0fc:	mov	w2, w22
  42f100:	mov	w0, w20
  42f104:	mov	w1, #0x0                   	// #0
  42f108:	bl	402720 <fcntl@plt>
  42f10c:	mov	w19, w0
  42f110:	tbnz	w0, #31, 42f0a8 <_obstack_memory_used@@Base+0x105b8>
  42f114:	mov	w0, #0xffffffff            	// #-1
  42f118:	str	w0, [x21, #2256]
  42f11c:	mov	w0, w19
  42f120:	mov	w1, #0x1                   	// #1
  42f124:	bl	402720 <fcntl@plt>
  42f128:	tbnz	w0, #31, 42f144 <_obstack_memory_used@@Base+0x10654>
  42f12c:	orr	w2, w0, #0x1
  42f130:	mov	w1, #0x2                   	// #2
  42f134:	mov	w0, w19
  42f138:	bl	402720 <fcntl@plt>
  42f13c:	cmn	w0, #0x1
  42f140:	b.ne	42f0a8 <_obstack_memory_used@@Base+0x105b8>  // b.any
  42f144:	bl	402890 <__errno_location@plt>
  42f148:	mov	x20, x0
  42f14c:	mov	w0, w19
  42f150:	mov	w19, #0xffffffff            	// #-1
  42f154:	ldr	w21, [x20]
  42f158:	bl	402580 <close@plt>
  42f15c:	str	w21, [x20]
  42f160:	ldp	x21, x22, [sp, #32]
  42f164:	b	42efb8 <_obstack_memory_used@@Base+0x104c8>
  42f168:	cmn	w0, #0x7
  42f16c:	b.ge	42f000 <_obstack_memory_used@@Base+0x10510>  // b.tcont
  42f170:	ldr	x1, [sp, #56]
  42f174:	add	x1, x1, w0, sxtw
  42f178:	b	42f000 <_obstack_memory_used@@Base+0x10510>
  42f17c:	cmn	w0, #0x7
  42f180:	b.ge	42f0c8 <_obstack_memory_used@@Base+0x105d8>  // b.tcont
  42f184:	ldr	x1, [sp, #56]
  42f188:	add	x1, x1, w0, sxtw
  42f18c:	b	42f0c8 <_obstack_memory_used@@Base+0x105d8>
  42f190:	stp	x29, x30, [sp, #-64]!
  42f194:	mov	x29, sp
  42f198:	stp	x19, x20, [sp, #16]
  42f19c:	adrp	x20, 448000 <_obstack_memory_used@@Base+0x29510>
  42f1a0:	add	x20, x20, #0xdf0
  42f1a4:	stp	x21, x22, [sp, #32]
  42f1a8:	adrp	x21, 448000 <_obstack_memory_used@@Base+0x29510>
  42f1ac:	add	x21, x21, #0xde8
  42f1b0:	sub	x20, x20, x21
  42f1b4:	mov	w22, w0
  42f1b8:	stp	x23, x24, [sp, #48]
  42f1bc:	mov	x23, x1
  42f1c0:	mov	x24, x2
  42f1c4:	bl	402250 <mbrtowc@plt-0x40>
  42f1c8:	cmp	xzr, x20, asr #3
  42f1cc:	b.eq	42f1f8 <_obstack_memory_used@@Base+0x10708>  // b.none
  42f1d0:	asr	x20, x20, #3
  42f1d4:	mov	x19, #0x0                   	// #0
  42f1d8:	ldr	x3, [x21, x19, lsl #3]
  42f1dc:	mov	x2, x24
  42f1e0:	add	x19, x19, #0x1
  42f1e4:	mov	x1, x23
  42f1e8:	mov	w0, w22
  42f1ec:	blr	x3
  42f1f0:	cmp	x20, x19
  42f1f4:	b.ne	42f1d8 <_obstack_memory_used@@Base+0x106e8>  // b.any
  42f1f8:	ldp	x19, x20, [sp, #16]
  42f1fc:	ldp	x21, x22, [sp, #32]
  42f200:	ldp	x23, x24, [sp, #48]
  42f204:	ldp	x29, x30, [sp], #64
  42f208:	ret
  42f20c:	nop
  42f210:	ret
  42f214:	nop
  42f218:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x2a510>
  42f21c:	mov	x1, #0x0                   	// #0
  42f220:	ldr	x2, [x2, #856]
  42f224:	b	402360 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000042f228 <.fini>:
  42f228:	stp	x29, x30, [sp, #-16]!
  42f22c:	mov	x29, sp
  42f230:	ldp	x29, x30, [sp], #16
  42f234:	ret
