
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//crypto.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_burn_stack>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x2, #0x40                  	// #64
   8:	mov	w1, #0x0                   	// #0
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x0, sp, #0x20
  1c:	bl	0 <grub_memset>
  20:	cmp	x19, #0x40
  24:	b.hi	34 <grub_burn_stack+0x34>  // b.pmore
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #96
  30:	ret
  34:	sub	x0, x19, #0x40
  38:	bl	0 <grub_burn_stack>
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #96
  44:	ret

0000000000000048 <_gcry_burn_stack>:
  48:	sxtw	x0, w0
  4c:	b	0 <grub_burn_stack>

0000000000000050 <_gcry_assert_failed>:
  50:	stp	x29, x30, [sp, #-16]!
  54:	adrp	x7, 0 <grub_burn_stack>
  58:	mov	x6, x0
  5c:	mov	x29, sp
  60:	ldr	x0, [x7]
  64:	mov	w5, w2
  68:	mov	x4, x1
  6c:	mov	x1, x6
  70:	mov	x2, x4
  74:	mov	x4, x3
  78:	mov	w3, w5
  7c:	bl	0 <grub_fatal>
	...

0000000000000088 <_gcry_log_error>:
  88:	stp	x29, x30, [sp, #-160]!
  8c:	adrp	x8, 0 <grub_burn_stack>
  90:	mov	x29, sp
  94:	stp	x19, x20, [sp, #16]
  98:	mov	x20, x0
  9c:	ldr	x0, [x8]
  a0:	stp	x1, x2, [sp, #104]
  a4:	stp	x3, x4, [sp, #120]
  a8:	stp	x5, x6, [sp, #136]
  ac:	str	x7, [sp, #152]
  b0:	bl	0 <grub_env_get>
  b4:	cbz	x0, 110 <_gcry_log_error+0x88>
  b8:	adrp	x1, 0 <grub_burn_stack>
  bc:	mov	x19, x0
  c0:	ldr	x1, [x1]
  c4:	bl	0 <grub_strword>
  c8:	cbz	w0, 11c <_gcry_log_error+0x94>
  cc:	adrp	x0, 0 <grub_burn_stack>
  d0:	ldr	x0, [x0]
  d4:	bl	0 <grub_printf>
  d8:	add	x1, sp, #0xa0
  dc:	stp	x1, x1, [sp, #64]
  e0:	add	x0, sp, #0x60
  e4:	mov	w2, #0xffffffc8            	// #-56
  e8:	str	x0, [sp, #80]
  ec:	stp	w2, wzr, [sp, #88]
  f0:	add	x1, sp, #0x20
  f4:	ldp	x2, x3, [sp, #64]
  f8:	stp	x2, x3, [sp, #32]
  fc:	mov	x0, x20
 100:	ldp	x2, x3, [sp, #80]
 104:	stp	x2, x3, [sp, #48]
 108:	bl	0 <grub_vprintf>
 10c:	bl	0 <grub_refresh>
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x29, x30, [sp], #160
 118:	ret
 11c:	adrp	x1, 0 <grub_burn_stack>
 120:	mov	x0, x19
 124:	ldr	x1, [x1]
 128:	bl	0 <grub_strword>
 12c:	cbnz	w0, cc <_gcry_log_error+0x44>
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x29, x30, [sp], #160
 138:	ret
 13c:	nop
	...

0000000000000160 <grub_cipher_register>:
 160:	adrp	x1, 0 <grub_burn_stack>
 164:	ldr	x1, [x1]
 168:	ldr	x2, [x1]
 16c:	str	x0, [x1]
 170:	str	x2, [x0, #88]
 174:	ret
	...

0000000000000180 <grub_cipher_unregister>:
 180:	adrp	x1, 0 <grub_burn_stack>
 184:	ldr	x2, [x1]
 188:	ldr	x1, [x2]
 18c:	cbz	x1, 1b0 <grub_cipher_unregister+0x30>
 190:	cmp	x1, x0
 194:	b.ne	1a0 <grub_cipher_unregister+0x20>  // b.any
 198:	b	1b8 <grub_cipher_unregister+0x38>
 19c:	b.eq	1b4 <grub_cipher_unregister+0x34>  // b.none
 1a0:	mov	x2, x1
 1a4:	ldr	x1, [x1, #88]
 1a8:	cmp	x0, x1
 1ac:	cbnz	x1, 19c <grub_cipher_unregister+0x1c>
 1b0:	ret
 1b4:	add	x2, x2, #0x58
 1b8:	ldr	x0, [x1, #88]
 1bc:	str	x0, [x2]
 1c0:	ret
 1c4:	nop
	...

00000000000001d0 <grub_md_register>:
 1d0:	adrp	x1, 0 <grub_burn_stack>
 1d4:	ldr	x1, [x1]
 1d8:	ldr	x2, [x1, #8]
 1dc:	str	x0, [x1, #8]
 1e0:	str	x2, [x0, #88]
 1e4:	ret
	...

00000000000001f0 <grub_md_unregister>:
 1f0:	adrp	x1, 0 <grub_burn_stack>
 1f4:	ldr	x2, [x1]
 1f8:	ldr	x1, [x2, #8]
 1fc:	cbz	x1, 220 <grub_md_unregister+0x30>
 200:	cmp	x1, x0
 204:	b.ne	210 <grub_md_unregister+0x20>  // b.any
 208:	b	234 <grub_md_unregister+0x44>
 20c:	b.eq	224 <grub_md_unregister+0x34>  // b.none
 210:	mov	x2, x1
 214:	ldr	x1, [x1, #88]
 218:	cmp	x0, x1
 21c:	cbnz	x1, 20c <grub_md_unregister+0x1c>
 220:	ret
 224:	add	x2, x2, #0x58
 228:	ldr	x0, [x1, #88]
 22c:	str	x0, [x2]
 230:	ret
 234:	add	x2, x2, #0x8
 238:	b	228 <grub_md_unregister+0x38>
 23c:	nop
	...

0000000000000248 <grub_crypto_hash>:
 248:	stp	x29, x30, [sp, #-304]!
 24c:	mov	x29, sp
 250:	stp	x19, x20, [sp, #16]
 254:	mov	x19, x0
 258:	ldr	x0, [x0, #72]
 25c:	stp	x21, x22, [sp, #32]
 260:	cmp	x0, #0x100
 264:	b.hi	2cc <grub_crypto_hash+0x84>  // b.pmore
 268:	mov	x20, x1
 26c:	mov	x21, x2
 270:	ldr	x1, [x19, #40]
 274:	mov	x22, x3
 278:	add	x0, sp, #0x30
 27c:	blr	x1
 280:	ldr	x3, [x19, #48]
 284:	mov	x2, x22
 288:	mov	x1, x21
 28c:	add	x0, sp, #0x30
 290:	blr	x3
 294:	ldr	x1, [x19, #56]
 298:	add	x0, sp, #0x30
 29c:	blr	x1
 2a0:	ldr	x1, [x19, #64]
 2a4:	add	x0, sp, #0x30
 2a8:	blr	x1
 2ac:	mov	x1, x0
 2b0:	ldr	x2, [x19, #32]
 2b4:	mov	x0, x20
 2b8:	bl	0 <grub_memmove>
 2bc:	ldp	x19, x20, [sp, #16]
 2c0:	ldp	x21, x22, [sp, #32]
 2c4:	ldp	x29, x30, [sp], #304
 2c8:	ret
 2cc:	adrp	x0, 0 <grub_burn_stack>
 2d0:	ldr	x0, [x0]
 2d4:	bl	0 <grub_fatal>
	...

00000000000002e0 <grub_crypto_lookup_md_by_name>:
 2e0:	stp	x29, x30, [sp, #-32]!
 2e4:	adrp	x1, 0 <grub_burn_stack>
 2e8:	mov	w11, #0x1                   	// #1
 2ec:	mov	x29, sp
 2f0:	stp	x19, x20, [sp, #16]
 2f4:	mov	x19, x0
 2f8:	ldr	x20, [x1]
 2fc:	ldr	x0, [x20, #8]
 300:	cbz	x0, 360 <grub_crypto_lookup_md_by_name+0x80>
 304:	ldrb	w10, [x19]
 308:	mov	x7, x19
 30c:	mov	w2, w10
 310:	ldr	x3, [x0]
 314:	cbnz	w10, 330 <grub_crypto_lookup_md_by_name+0x50>
 318:	b	380 <grub_crypto_lookup_md_by_name+0xa0>
 31c:	csel	w4, w4, w1, cc  // cc = lo, ul, last
 320:	cmp	w4, w9
 324:	b.ne	3ac <grub_crypto_lookup_md_by_name+0xcc>  // b.any
 328:	ldrb	w2, [x7, #1]!
 32c:	cbz	w2, 380 <grub_crypto_lookup_md_by_name+0xa0>
 330:	ldrb	w1, [x3]
 334:	sub	w8, w2, #0x41
 338:	cmp	w8, #0x1a
 33c:	add	w5, w2, #0x20
 340:	sub	w6, w1, #0x41
 344:	csel	w9, w5, w2, cc  // cc = lo, ul, last
 348:	add	x3, x3, #0x1
 34c:	add	w4, w1, #0x20
 350:	cmp	w6, #0x1a
 354:	cbnz	w1, 31c <grub_crypto_lookup_md_by_name+0x3c>
 358:	ldr	x0, [x0, #88]
 35c:	cbnz	x0, 308 <grub_crypto_lookup_md_by_name+0x28>
 360:	ldr	x1, [x20, #16]
 364:	cmp	x1, #0x0
 368:	csel	w11, w11, wzr, ne  // ne = any
 36c:	cbnz	w11, 3b8 <grub_crypto_lookup_md_by_name+0xd8>
 370:	mov	x0, #0x0                   	// #0
 374:	ldp	x19, x20, [sp, #16]
 378:	ldp	x29, x30, [sp], #32
 37c:	ret
 380:	ldrb	w1, [x3]
 384:	mov	w2, #0x0                   	// #0
 388:	sub	w6, w1, #0x41
 38c:	cmp	w6, #0x1a
 390:	add	w3, w1, #0x20
 394:	csel	w1, w3, w1, cc  // cc = lo, ul, last
 398:	cmp	w2, w1
 39c:	b.eq	374 <grub_crypto_lookup_md_by_name+0x94>  // b.none
 3a0:	ldr	x0, [x0, #88]
 3a4:	cbnz	x0, 308 <grub_crypto_lookup_md_by_name+0x28>
 3a8:	b	360 <grub_crypto_lookup_md_by_name+0x80>
 3ac:	cmp	w8, #0x1a
 3b0:	csel	w2, w5, w2, cc  // cc = lo, ul, last
 3b4:	b	38c <grub_crypto_lookup_md_by_name+0xac>
 3b8:	mov	x0, x19
 3bc:	blr	x1
 3c0:	mov	w11, #0x0                   	// #0
 3c4:	b	2fc <grub_crypto_lookup_md_by_name+0x1c>
	...

00000000000003d0 <grub_crypto_lookup_cipher_by_name>:
 3d0:	stp	x29, x30, [sp, #-32]!
 3d4:	adrp	x1, 0 <grub_burn_stack>
 3d8:	mov	w12, #0x1                   	// #1
 3dc:	mov	x29, sp
 3e0:	stp	x19, x20, [sp, #16]
 3e4:	mov	x20, x0
 3e8:	ldr	x19, [x1]
 3ec:	ldr	x0, [x19]
 3f0:	cbz	x0, 4b8 <grub_crypto_lookup_cipher_by_name+0xe8>
 3f4:	ldrb	w9, [x20]
 3f8:	mov	x7, x20
 3fc:	mov	w2, w9
 400:	ldr	x4, [x0]
 404:	cbnz	w9, 420 <grub_crypto_lookup_cipher_by_name+0x50>
 408:	b	510 <grub_crypto_lookup_cipher_by_name+0x140>
 40c:	csel	w3, w3, w1, cc  // cc = lo, ul, last
 410:	cmp	w3, w10
 414:	b.ne	53c <grub_crypto_lookup_cipher_by_name+0x16c>  // b.any
 418:	ldrb	w2, [x7, #1]!
 41c:	cbz	w2, 510 <grub_crypto_lookup_cipher_by_name+0x140>
 420:	ldrb	w1, [x4]
 424:	sub	w8, w2, #0x41
 428:	cmp	w8, #0x1a
 42c:	add	w5, w2, #0x20
 430:	sub	w6, w1, #0x41
 434:	csel	w10, w5, w2, cc  // cc = lo, ul, last
 438:	add	x4, x4, #0x1
 43c:	add	w3, w1, #0x20
 440:	cmp	w6, #0x1a
 444:	cbnz	w1, 40c <grub_crypto_lookup_cipher_by_name+0x3c>
 448:	ldr	x10, [x0, #8]
 44c:	cbz	x10, 4b0 <grub_crypto_lookup_cipher_by_name+0xe0>
 450:	ldr	x3, [x10]
 454:	cbz	x3, 4b0 <grub_crypto_lookup_cipher_by_name+0xe0>
 458:	mov	x7, x20
 45c:	mov	w2, w9
 460:	cbnz	w9, 47c <grub_crypto_lookup_cipher_by_name+0xac>
 464:	b	4d8 <grub_crypto_lookup_cipher_by_name+0x108>
 468:	csel	w4, w4, w1, cc  // cc = lo, ul, last
 46c:	cmp	w4, w11
 470:	b.ne	504 <grub_crypto_lookup_cipher_by_name+0x134>  // b.any
 474:	ldrb	w2, [x7, #1]!
 478:	cbz	w2, 4d8 <grub_crypto_lookup_cipher_by_name+0x108>
 47c:	ldrb	w1, [x3]
 480:	sub	w8, w2, #0x41
 484:	cmp	w8, #0x1a
 488:	add	w5, w2, #0x20
 48c:	sub	w6, w1, #0x41
 490:	csel	w11, w5, w2, cc  // cc = lo, ul, last
 494:	add	x3, x3, #0x1
 498:	add	w4, w1, #0x20
 49c:	cmp	w6, #0x1a
 4a0:	cbnz	w1, 468 <grub_crypto_lookup_cipher_by_name+0x98>
 4a4:	ldr	x3, [x10, #8]!
 4a8:	cbnz	x3, 458 <grub_crypto_lookup_cipher_by_name+0x88>
 4ac:	nop
 4b0:	ldr	x0, [x0, #88]
 4b4:	cbnz	x0, 3f8 <grub_crypto_lookup_cipher_by_name+0x28>
 4b8:	ldr	x1, [x19, #16]
 4bc:	cmp	x1, #0x0
 4c0:	csel	w12, w12, wzr, ne  // ne = any
 4c4:	cbnz	w12, 548 <grub_crypto_lookup_cipher_by_name+0x178>
 4c8:	mov	x0, #0x0                   	// #0
 4cc:	ldp	x19, x20, [sp, #16]
 4d0:	ldp	x29, x30, [sp], #32
 4d4:	ret
 4d8:	ldrb	w1, [x3]
 4dc:	mov	w2, #0x0                   	// #0
 4e0:	sub	w6, w1, #0x41
 4e4:	cmp	w6, #0x1a
 4e8:	add	w3, w1, #0x20
 4ec:	csel	w1, w3, w1, cc  // cc = lo, ul, last
 4f0:	cmp	w2, w1
 4f4:	b.eq	4cc <grub_crypto_lookup_cipher_by_name+0xfc>  // b.none
 4f8:	ldr	x3, [x10, #8]!
 4fc:	cbnz	x3, 458 <grub_crypto_lookup_cipher_by_name+0x88>
 500:	b	4b0 <grub_crypto_lookup_cipher_by_name+0xe0>
 504:	cmp	w8, #0x1a
 508:	csel	w2, w5, w2, cc  // cc = lo, ul, last
 50c:	b	4e4 <grub_crypto_lookup_cipher_by_name+0x114>
 510:	ldrb	w1, [x4]
 514:	mov	w2, #0x0                   	// #0
 518:	sub	w6, w1, #0x41
 51c:	cmp	w6, #0x1a
 520:	add	w3, w1, #0x20
 524:	csel	w1, w3, w1, cc  // cc = lo, ul, last
 528:	cmp	w2, w1
 52c:	b.ne	448 <grub_crypto_lookup_cipher_by_name+0x78>  // b.any
 530:	ldp	x19, x20, [sp, #16]
 534:	ldp	x29, x30, [sp], #32
 538:	ret
 53c:	cmp	w8, #0x1a
 540:	csel	w2, w5, w2, cc  // cc = lo, ul, last
 544:	b	51c <grub_crypto_lookup_cipher_by_name+0x14c>
 548:	mov	x0, x20
 54c:	blr	x1
 550:	mov	w12, #0x0                   	// #0
 554:	b	3ec <grub_crypto_lookup_cipher_by_name+0x1c>
	...

0000000000000560 <grub_crypto_cipher_open>:
 560:	stp	x29, x30, [sp, #-32]!
 564:	mov	x29, sp
 568:	str	x19, [sp, #16]
 56c:	mov	x19, x0
 570:	ldr	x0, [x0, #40]
 574:	add	x0, x0, #0x8
 578:	bl	0 <grub_malloc>
 57c:	cbz	x0, 584 <grub_crypto_cipher_open+0x24>
 580:	str	x19, [x0]
 584:	ldr	x19, [sp, #16]
 588:	ldp	x29, x30, [sp], #32
 58c:	ret

0000000000000590 <grub_crypto_cipher_set_key>:
 590:	ldr	x3, [x0], #8
 594:	ldr	x3, [x3, #48]
 598:	mov	x16, x3
 59c:	br	x16

00000000000005a0 <grub_crypto_ecb_decrypt>:
 5a0:	stp	x29, x30, [sp, #-64]!
 5a4:	mov	x29, sp
 5a8:	stp	x23, x24, [sp, #48]
 5ac:	mov	x23, x0
 5b0:	ldr	x0, [x0]
 5b4:	ldr	x4, [x0, #64]
 5b8:	cbz	x4, 650 <grub_crypto_ecb_decrypt+0xb0>
 5bc:	stp	x21, x22, [sp, #32]
 5c0:	ldr	x21, [x0, #24]
 5c4:	mov	w0, #0xa                   	// #10
 5c8:	cbz	x21, 640 <grub_crypto_ecb_decrypt+0xa0>
 5cc:	stp	x19, x20, [sp, #16]
 5d0:	mov	x20, x1
 5d4:	mov	x19, x2
 5d8:	sub	x1, x21, #0x1
 5dc:	orr	x2, x21, x3
 5e0:	tst	x1, x2
 5e4:	b.ne	63c <grub_crypto_ecb_decrypt+0x9c>  // b.any
 5e8:	add	x22, x19, x3
 5ec:	add	x24, x23, #0x8
 5f0:	cmp	x19, x22
 5f4:	b.cc	604 <grub_crypto_ecb_decrypt+0x64>  // b.lo, b.ul, b.last
 5f8:	b	624 <grub_crypto_ecb_decrypt+0x84>
 5fc:	ldr	x1, [x23]
 600:	ldr	x4, [x1, #64]
 604:	mov	x2, x19
 608:	mov	x1, x20
 60c:	add	x19, x19, x21
 610:	mov	x0, x24
 614:	blr	x4
 618:	add	x20, x20, x21
 61c:	cmp	x22, x19
 620:	b.hi	5fc <grub_crypto_ecb_decrypt+0x5c>  // b.pmore
 624:	mov	w0, #0x0                   	// #0
 628:	ldp	x19, x20, [sp, #16]
 62c:	ldp	x21, x22, [sp, #32]
 630:	ldp	x23, x24, [sp, #48]
 634:	ldp	x29, x30, [sp], #64
 638:	ret
 63c:	ldp	x19, x20, [sp, #16]
 640:	ldp	x21, x22, [sp, #32]
 644:	ldp	x23, x24, [sp, #48]
 648:	ldp	x29, x30, [sp], #64
 64c:	ret
 650:	mov	w0, #0x19                  	// #25
 654:	ldp	x23, x24, [sp, #48]
 658:	ldp	x29, x30, [sp], #64
 65c:	ret

0000000000000660 <grub_crypto_ecb_encrypt>:
 660:	stp	x29, x30, [sp, #-64]!
 664:	mov	x29, sp
 668:	stp	x23, x24, [sp, #48]
 66c:	mov	x23, x0
 670:	ldr	x0, [x0]
 674:	ldr	x4, [x0, #56]
 678:	cbz	x4, 710 <grub_crypto_ecb_encrypt+0xb0>
 67c:	stp	x21, x22, [sp, #32]
 680:	ldr	x21, [x0, #24]
 684:	mov	w0, #0xa                   	// #10
 688:	cbz	x21, 700 <grub_crypto_ecb_encrypt+0xa0>
 68c:	stp	x19, x20, [sp, #16]
 690:	mov	x20, x1
 694:	mov	x19, x2
 698:	sub	x1, x21, #0x1
 69c:	orr	x2, x21, x3
 6a0:	tst	x1, x2
 6a4:	b.ne	6fc <grub_crypto_ecb_encrypt+0x9c>  // b.any
 6a8:	add	x22, x19, x3
 6ac:	add	x24, x23, #0x8
 6b0:	cmp	x19, x22
 6b4:	b.cc	6c4 <grub_crypto_ecb_encrypt+0x64>  // b.lo, b.ul, b.last
 6b8:	b	6e4 <grub_crypto_ecb_encrypt+0x84>
 6bc:	ldr	x1, [x23]
 6c0:	ldr	x4, [x1, #56]
 6c4:	mov	x2, x19
 6c8:	mov	x1, x20
 6cc:	add	x19, x19, x21
 6d0:	mov	x0, x24
 6d4:	blr	x4
 6d8:	add	x20, x20, x21
 6dc:	cmp	x22, x19
 6e0:	b.hi	6bc <grub_crypto_ecb_encrypt+0x5c>  // b.pmore
 6e4:	mov	w0, #0x0                   	// #0
 6e8:	ldp	x19, x20, [sp, #16]
 6ec:	ldp	x21, x22, [sp, #32]
 6f0:	ldp	x23, x24, [sp, #48]
 6f4:	ldp	x29, x30, [sp], #64
 6f8:	ret
 6fc:	ldp	x19, x20, [sp, #16]
 700:	ldp	x21, x22, [sp, #32]
 704:	ldp	x23, x24, [sp, #48]
 708:	ldp	x29, x30, [sp], #64
 70c:	ret
 710:	mov	w0, #0x19                  	// #25
 714:	ldp	x23, x24, [sp, #48]
 718:	ldp	x29, x30, [sp], #64
 71c:	ret

0000000000000720 <grub_crypto_cbc_encrypt>:
 720:	stp	x29, x30, [sp, #-80]!
 724:	mov	x29, sp
 728:	stp	x23, x24, [sp, #48]
 72c:	mov	x24, x0
 730:	ldr	x0, [x0]
 734:	stp	x19, x20, [sp, #16]
 738:	mov	x19, x1
 73c:	ldr	x1, [x0, #56]
 740:	cbz	x1, 8bc <grub_crypto_cbc_encrypt+0x19c>
 744:	str	x25, [sp, #64]
 748:	ldr	x25, [x0, #24]
 74c:	mov	w0, #0xa                   	// #10
 750:	cbz	x25, 7f4 <grub_crypto_cbc_encrypt+0xd4>
 754:	mov	x23, x2
 758:	sub	x1, x25, #0x1
 75c:	orr	x2, x25, x3
 760:	tst	x1, x2
 764:	b.ne	7f4 <grub_crypto_cbc_encrypt+0xd4>  // b.any
 768:	stp	x21, x22, [sp, #32]
 76c:	add	x20, x23, x3
 770:	mov	x21, x4
 774:	cmp	x23, x20
 778:	b.cs	88c <grub_crypto_cbc_encrypt+0x16c>  // b.hs, b.nlast
 77c:	add	x22, x24, #0x8
 780:	mov	x5, x4
 784:	nop
 788:	mov	x6, x25
 78c:	mov	x8, x19
 790:	mov	x7, x23
 794:	nop
 798:	orr	x3, x5, x7
 79c:	orr	x3, x8, x3
 7a0:	ands	x3, x3, #0x7
 7a4:	b.eq	808 <grub_crypto_cbc_encrypt+0xe8>  // b.none
 7a8:	ldrb	w0, [x7], #1
 7ac:	subs	x6, x6, #0x1
 7b0:	ldrb	w1, [x5], #1
 7b4:	eor	w0, w0, w1
 7b8:	strb	w0, [x8], #1
 7bc:	b.ne	798 <grub_crypto_cbc_encrypt+0x78>  // b.any
 7c0:	ldr	x3, [x24]
 7c4:	mov	x0, x22
 7c8:	add	x23, x23, x25
 7cc:	mov	x2, x19
 7d0:	mov	x1, x19
 7d4:	ldr	x3, [x3, #56]
 7d8:	blr	x3
 7dc:	add	x0, x19, x25
 7e0:	cmp	x20, x23
 7e4:	mov	x5, x19
 7e8:	b.ls	890 <grub_crypto_cbc_encrypt+0x170>  // b.plast
 7ec:	mov	x19, x0
 7f0:	b	788 <grub_crypto_cbc_encrypt+0x68>
 7f4:	ldp	x19, x20, [sp, #16]
 7f8:	ldp	x23, x24, [sp, #48]
 7fc:	ldr	x25, [sp, #64]
 800:	ldp	x29, x30, [sp], #80
 804:	ret
 808:	cmp	x6, #0x7
 80c:	b.ls	850 <grub_crypto_cbc_encrypt+0x130>  // b.plast
 810:	sub	x2, x6, #0x8
 814:	mov	x1, #0x0                   	// #0
 818:	and	x2, x2, #0xfffffffffffffff8
 81c:	add	x2, x2, #0x8
 820:	ldr	x4, [x7, x1]
 824:	ldr	x0, [x5, x1]
 828:	eor	x4, x4, x0
 82c:	str	x4, [x8, x1]
 830:	add	x1, x1, #0x8
 834:	cmp	x2, x1
 838:	b.ne	820 <grub_crypto_cbc_encrypt+0x100>  // b.any
 83c:	add	x7, x7, x2
 840:	add	x5, x5, x2
 844:	add	x8, x8, x2
 848:	ands	x6, x6, #0x7
 84c:	b.eq	7c0 <grub_crypto_cbc_encrypt+0xa0>  // b.none
 850:	ldrb	w1, [x7, x3]
 854:	ldrb	w0, [x5, x3]
 858:	eor	w1, w1, w0
 85c:	strb	w1, [x8, x3]
 860:	add	x3, x3, #0x1
 864:	cmp	x3, x6
 868:	b.eq	7c0 <grub_crypto_cbc_encrypt+0xa0>  // b.none
 86c:	ldrb	w1, [x7, x3]
 870:	ldrb	w0, [x5, x3]
 874:	eor	w1, w1, w0
 878:	strb	w1, [x8, x3]
 87c:	add	x3, x3, #0x1
 880:	cmp	x3, x6
 884:	b.ne	850 <grub_crypto_cbc_encrypt+0x130>  // b.any
 888:	b	7c0 <grub_crypto_cbc_encrypt+0xa0>
 88c:	mov	x19, x4
 890:	mov	x2, x25
 894:	mov	x1, x19
 898:	mov	x0, x21
 89c:	bl	0 <grub_memmove>
 8a0:	mov	w0, #0x0                   	// #0
 8a4:	ldp	x19, x20, [sp, #16]
 8a8:	ldp	x21, x22, [sp, #32]
 8ac:	ldp	x23, x24, [sp, #48]
 8b0:	ldr	x25, [sp, #64]
 8b4:	ldp	x29, x30, [sp], #80
 8b8:	ret
 8bc:	mov	w0, #0x19                  	// #25
 8c0:	ldp	x19, x20, [sp, #16]
 8c4:	ldp	x23, x24, [sp, #48]
 8c8:	ldp	x29, x30, [sp], #80
 8cc:	ret

00000000000008d0 <grub_crypto_cbc_decrypt>:
 8d0:	stp	x29, x30, [sp, #-96]!
 8d4:	mov	x29, sp
 8d8:	stp	x21, x22, [sp, #32]
 8dc:	mov	x22, x0
 8e0:	ldr	x0, [x0]
 8e4:	stp	x19, x20, [sp, #16]
 8e8:	mov	x19, x1
 8ec:	ldr	x1, [x0, #64]
 8f0:	cbz	x1, a50 <grub_crypto_cbc_decrypt+0x180>
 8f4:	str	x25, [sp, #64]
 8f8:	ldr	x25, [x0, #24]
 8fc:	mov	w0, #0xa                   	// #10
 900:	sub	x1, x25, #0x1
 904:	cmp	x1, #0xf
 908:	b.hi	924 <grub_crypto_cbc_decrypt+0x54>  // b.pmore
 90c:	stp	x23, x24, [sp, #48]
 910:	mov	x24, x2
 914:	orr	x2, x25, x3
 918:	tst	x2, x1
 91c:	b.eq	938 <grub_crypto_cbc_decrypt+0x68>  // b.none
 920:	ldp	x23, x24, [sp, #48]
 924:	ldp	x19, x20, [sp, #16]
 928:	ldp	x21, x22, [sp, #32]
 92c:	ldr	x25, [sp, #64]
 930:	ldp	x29, x30, [sp], #96
 934:	ret
 938:	add	x21, x24, x3
 93c:	mov	x20, x4
 940:	add	x23, x22, #0x8
 944:	cmp	x24, x21
 948:	b.cs	a34 <grub_crypto_cbc_decrypt+0x164>  // b.hs, b.nlast
 94c:	nop
 950:	mov	x2, x25
 954:	mov	x1, x24
 958:	add	x0, sp, #0x50
 95c:	bl	0 <grub_memmove>
 960:	ldr	x3, [x22]
 964:	mov	x2, x24
 968:	mov	x1, x19
 96c:	mov	x0, x23
 970:	ldr	x3, [x3, #64]
 974:	blr	x3
 978:	mov	x6, x25
 97c:	mov	x7, x20
 980:	mov	x3, x19
 984:	b	9a0 <grub_crypto_cbc_decrypt+0xd0>
 988:	ldrb	w0, [x3]
 98c:	subs	x6, x6, #0x1
 990:	ldrb	w1, [x7], #1
 994:	eor	w0, w0, w1
 998:	strb	w0, [x3], #1
 99c:	b.eq	a14 <grub_crypto_cbc_decrypt+0x144>  // b.none
 9a0:	orr	x5, x7, x3
 9a4:	ands	x5, x5, #0x7
 9a8:	b.ne	988 <grub_crypto_cbc_decrypt+0xb8>  // b.any
 9ac:	cmp	x6, #0x7
 9b0:	b.ls	9f8 <grub_crypto_cbc_decrypt+0x128>  // b.plast
 9b4:	mov	x0, #0x0                   	// #0
 9b8:	ldr	x1, [x3, x0]
 9bc:	ldr	x2, [x7, x0]
 9c0:	eor	x1, x1, x2
 9c4:	str	x1, [x3, x0]
 9c8:	add	x0, x0, #0x8
 9cc:	sub	x1, x6, x0
 9d0:	cmp	x1, #0x7
 9d4:	b.hi	9b8 <grub_crypto_cbc_decrypt+0xe8>  // b.pmore
 9d8:	sub	x0, x6, #0x8
 9dc:	ands	x6, x6, #0x7
 9e0:	and	x0, x0, #0xfffffffffffffff8
 9e4:	add	x0, x0, #0x8
 9e8:	add	x3, x3, x0
 9ec:	add	x7, x7, x0
 9f0:	b.eq	a14 <grub_crypto_cbc_decrypt+0x144>  // b.none
 9f4:	nop
 9f8:	ldrb	w0, [x3, x5]
 9fc:	ldrb	w1, [x7, x5]
 a00:	eor	w0, w0, w1
 a04:	strb	w0, [x3, x5]
 a08:	add	x5, x5, #0x1
 a0c:	cmp	x5, x6
 a10:	b.ne	9f8 <grub_crypto_cbc_decrypt+0x128>  // b.any
 a14:	add	x24, x24, x25
 a18:	mov	x2, x25
 a1c:	add	x1, sp, #0x50
 a20:	mov	x0, x20
 a24:	bl	0 <grub_memmove>
 a28:	add	x19, x19, x25
 a2c:	cmp	x21, x24
 a30:	b.hi	950 <grub_crypto_cbc_decrypt+0x80>  // b.pmore
 a34:	mov	w0, #0x0                   	// #0
 a38:	ldp	x19, x20, [sp, #16]
 a3c:	ldp	x21, x22, [sp, #32]
 a40:	ldp	x23, x24, [sp, #48]
 a44:	ldr	x25, [sp, #64]
 a48:	ldp	x29, x30, [sp], #96
 a4c:	ret
 a50:	mov	w0, #0x19                  	// #25
 a54:	ldp	x19, x20, [sp, #16]
 a58:	ldp	x21, x22, [sp, #32]
 a5c:	ldp	x29, x30, [sp], #96
 a60:	ret
 a64:	nop

0000000000000a68 <grub_crypto_hmac_init>:
 a68:	stp	x29, x30, [sp, #-80]!
 a6c:	mov	x29, sp
 a70:	stp	x19, x20, [sp, #16]
 a74:	mov	x19, x0
 a78:	str	x25, [sp, #64]
 a7c:	mov	x25, x1
 a80:	ldr	x1, [x0, #32]
 a84:	stp	x23, x24, [sp, #48]
 a88:	mov	x23, #0x0                   	// #0
 a8c:	ldr	x0, [x0, #80]
 a90:	cmp	x1, x0
 a94:	b.hi	ba0 <grub_crypto_hmac_init+0x138>  // b.pmore
 a98:	ldr	x0, [x19, #72]
 a9c:	mov	x24, x2
 aa0:	stp	x21, x22, [sp, #32]
 aa4:	bl	0 <grub_malloc>
 aa8:	mov	x21, x0
 aac:	cbz	x0, bec <grub_crypto_hmac_init+0x184>
 ab0:	ldr	x0, [x19, #80]
 ab4:	cmp	x0, x24
 ab8:	b.cc	bb8 <grub_crypto_hmac_init+0x150>  // b.lo, b.ul, b.last
 abc:	mov	x23, #0x0                   	// #0
 ac0:	bl	0 <grub_zalloc>
 ac4:	mov	x20, x0
 ac8:	cbz	x0, c38 <grub_crypto_hmac_init+0x1d0>
 acc:	ldr	x0, [x19, #80]
 ad0:	bl	0 <grub_zalloc>
 ad4:	mov	x22, x0
 ad8:	cbz	x0, bf8 <grub_crypto_hmac_init+0x190>
 adc:	mov	x2, x24
 ae0:	mov	x1, x25
 ae4:	mov	x0, x20
 ae8:	bl	0 <grub_memmove>
 aec:	mov	x2, x24
 af0:	mov	x1, x25
 af4:	mov	x0, x22
 af8:	bl	0 <grub_memmove>
 afc:	ldr	x0, [x19, #80]
 b00:	mov	w2, #0x0                   	// #0
 b04:	mov	x1, #0x0                   	// #0
 b08:	mov	w5, #0x36                  	// #54
 b0c:	mov	w4, #0x5c                  	// #92
 b10:	cbz	x0, b44 <grub_crypto_hmac_init+0xdc>
 b14:	nop
 b18:	ldrb	w3, [x20, x1]
 b1c:	add	w2, w2, #0x1
 b20:	eor	w3, w3, w5
 b24:	strb	w3, [x20, x1]
 b28:	ldrb	w3, [x22, x1]
 b2c:	eor	w3, w3, w4
 b30:	strb	w3, [x22, x1]
 b34:	mov	w1, w2
 b38:	ldr	x0, [x19, #80]
 b3c:	cmp	x0, w2, uxtw
 b40:	b.hi	b18 <grub_crypto_hmac_init+0xb0>  // b.pmore
 b44:	mov	x0, x23
 b48:	bl	0 <grub_free>
 b4c:	ldr	x1, [x19, #40]
 b50:	mov	x0, x21
 b54:	blr	x1
 b58:	ldr	x3, [x19, #48]
 b5c:	mov	x1, x20
 b60:	ldr	x2, [x19, #80]
 b64:	mov	x0, x21
 b68:	blr	x3
 b6c:	ldr	x2, [x19, #80]
 b70:	mov	w1, #0x0                   	// #0
 b74:	mov	x0, x20
 b78:	bl	0 <grub_memset>
 b7c:	mov	x0, x20
 b80:	bl	0 <grub_free>
 b84:	mov	x0, #0x18                  	// #24
 b88:	bl	0 <grub_malloc>
 b8c:	mov	x23, x0
 b90:	cbz	x0, c40 <grub_crypto_hmac_init+0x1d8>
 b94:	stp	x19, x21, [x0]
 b98:	str	x22, [x0, #16]
 b9c:	ldp	x21, x22, [sp, #32]
 ba0:	mov	x0, x23
 ba4:	ldp	x19, x20, [sp, #16]
 ba8:	ldp	x23, x24, [sp, #48]
 bac:	ldr	x25, [sp, #64]
 bb0:	ldp	x29, x30, [sp], #80
 bb4:	ret
 bb8:	ldr	x0, [x19, #32]
 bbc:	bl	0 <grub_malloc>
 bc0:	mov	x23, x0
 bc4:	cbz	x0, bec <grub_crypto_hmac_init+0x184>
 bc8:	mov	x3, x24
 bcc:	mov	x2, x25
 bd0:	mov	x1, x0
 bd4:	mov	x0, x19
 bd8:	bl	248 <grub_crypto_hash>
 bdc:	mov	x25, x23
 be0:	ldr	x24, [x19, #32]
 be4:	ldr	x0, [x19, #80]
 be8:	b	ac0 <grub_crypto_hmac_init+0x58>
 bec:	mov	x22, #0x0                   	// #0
 bf0:	mov	x20, #0x0                   	// #0
 bf4:	mov	x23, #0x0                   	// #0
 bf8:	mov	x0, x23
 bfc:	bl	0 <grub_free>
 c00:	mov	x0, x21
 c04:	bl	0 <grub_free>
 c08:	mov	x0, x20
 c0c:	bl	0 <grub_free>
 c10:	mov	x0, x22
 c14:	mov	x23, #0x0                   	// #0
 c18:	bl	0 <grub_free>
 c1c:	mov	x0, x23
 c20:	ldp	x19, x20, [sp, #16]
 c24:	ldp	x21, x22, [sp, #32]
 c28:	ldp	x23, x24, [sp, #48]
 c2c:	ldr	x25, [sp, #64]
 c30:	ldp	x29, x30, [sp], #80
 c34:	ret
 c38:	mov	x22, #0x0                   	// #0
 c3c:	b	bf8 <grub_crypto_hmac_init+0x190>
 c40:	mov	x20, #0x0                   	// #0
 c44:	b	bf8 <grub_crypto_hmac_init+0x190>

0000000000000c48 <grub_crypto_hmac_write>:
 c48:	ldp	x3, x0, [x0]
 c4c:	ldr	x3, [x3, #48]
 c50:	mov	x16, x3
 c54:	br	x16

0000000000000c58 <grub_crypto_hmac_fini>:
 c58:	stp	x29, x30, [sp, #-48]!
 c5c:	mov	x29, sp
 c60:	stp	x19, x20, [sp, #16]
 c64:	mov	x19, x0
 c68:	ldr	x0, [x0]
 c6c:	stp	x21, x22, [sp, #32]
 c70:	mov	x22, x1
 c74:	ldr	x0, [x0, #72]
 c78:	bl	0 <grub_malloc>
 c7c:	cbz	x0, d9c <grub_crypto_hmac_fini+0x144>
 c80:	mov	x20, x0
 c84:	ldp	x1, x0, [x19]
 c88:	ldr	x1, [x1, #56]
 c8c:	blr	x1
 c90:	ldp	x1, x0, [x19]
 c94:	ldr	x1, [x1, #64]
 c98:	blr	x1
 c9c:	ldp	x1, x0, [x19]
 ca0:	ldr	x1, [x1, #64]
 ca4:	blr	x1
 ca8:	mov	x21, x0
 cac:	ldr	x1, [x19]
 cb0:	mov	x0, x20
 cb4:	ldr	x1, [x1, #40]
 cb8:	blr	x1
 cbc:	ldr	x2, [x19]
 cc0:	mov	x0, x20
 cc4:	ldr	x1, [x19, #16]
 cc8:	ldr	x3, [x2, #48]
 ccc:	ldr	x2, [x2, #80]
 cd0:	blr	x3
 cd4:	ldr	x3, [x19]
 cd8:	mov	x1, x21
 cdc:	mov	x0, x20
 ce0:	ldr	x2, [x3, #32]
 ce4:	ldr	x3, [x3, #48]
 ce8:	blr	x3
 cec:	ldr	x1, [x19]
 cf0:	mov	x0, x20
 cf4:	ldr	x1, [x1, #56]
 cf8:	blr	x1
 cfc:	ldr	x2, [x19]
 d00:	mov	w1, #0x0                   	// #0
 d04:	ldr	x0, [x19, #16]
 d08:	ldr	x2, [x2, #80]
 d0c:	bl	0 <grub_memset>
 d10:	ldr	x0, [x19, #16]
 d14:	bl	0 <grub_free>
 d18:	ldp	x2, x0, [x19]
 d1c:	mov	w1, #0x0                   	// #0
 d20:	ldr	x2, [x2, #72]
 d24:	bl	0 <grub_memset>
 d28:	ldr	x0, [x19, #8]
 d2c:	bl	0 <grub_free>
 d30:	ldr	x1, [x19]
 d34:	mov	x0, x20
 d38:	ldr	x1, [x1, #64]
 d3c:	blr	x1
 d40:	mov	x1, x0
 d44:	ldr	x2, [x19]
 d48:	mov	x0, x22
 d4c:	ldr	x2, [x2, #32]
 d50:	bl	0 <grub_memmove>
 d54:	ldr	x2, [x19]
 d58:	mov	w1, #0x0                   	// #0
 d5c:	mov	x0, x20
 d60:	ldr	x2, [x2, #72]
 d64:	bl	0 <grub_memset>
 d68:	mov	x0, x20
 d6c:	bl	0 <grub_free>
 d70:	mov	x2, #0x18                  	// #24
 d74:	mov	w1, #0x0                   	// #0
 d78:	mov	x0, x19
 d7c:	bl	0 <grub_memset>
 d80:	mov	x0, x19
 d84:	bl	0 <grub_free>
 d88:	mov	w0, #0x0                   	// #0
 d8c:	ldp	x19, x20, [sp, #16]
 d90:	ldp	x21, x22, [sp, #32]
 d94:	ldp	x29, x30, [sp], #48
 d98:	ret
 d9c:	mov	w0, #0x22                  	// #34
 da0:	ldp	x19, x20, [sp, #16]
 da4:	ldp	x21, x22, [sp, #32]
 da8:	ldp	x29, x30, [sp], #48
 dac:	ret

0000000000000db0 <grub_crypto_hmac_buffer>:
 db0:	stp	x29, x30, [sp, #-48]!
 db4:	mov	x29, sp
 db8:	stp	x19, x20, [sp, #16]
 dbc:	mov	x20, x5
 dc0:	stp	x21, x22, [sp, #32]
 dc4:	mov	x21, x3
 dc8:	mov	x22, x4
 dcc:	bl	a68 <grub_crypto_hmac_init>
 dd0:	cbz	x0, e04 <grub_crypto_hmac_buffer+0x54>
 dd4:	mov	x19, x0
 dd8:	mov	x2, x22
 ddc:	ldp	x3, x0, [x0]
 de0:	mov	x1, x21
 de4:	ldr	x3, [x3, #48]
 de8:	blr	x3
 dec:	mov	x1, x20
 df0:	mov	x0, x19
 df4:	ldp	x19, x20, [sp, #16]
 df8:	ldp	x21, x22, [sp, #32]
 dfc:	ldp	x29, x30, [sp], #48
 e00:	b	c58 <grub_crypto_hmac_fini>
 e04:	mov	w0, #0x22                  	// #34
 e08:	ldp	x19, x20, [sp, #16]
 e0c:	ldp	x21, x22, [sp, #32]
 e10:	ldp	x29, x30, [sp], #48
 e14:	ret

0000000000000e18 <grub_crypto_gcry_error>:
 e18:	cbnz	w0, e20 <grub_crypto_gcry_error+0x8>
 e1c:	ret
 e20:	adrp	x1, 0 <grub_burn_stack>
 e24:	mov	w0, #0x1e                  	// #30
 e28:	ldr	x1, [x1]
 e2c:	b	0 <grub_error>
	...

0000000000000e38 <grub_crypto_memcmp>:
 e38:	cbz	x2, e70 <grub_crypto_memcmp+0x38>
 e3c:	mov	x3, #0x0                   	// #0
 e40:	mov	x4, #0x0                   	// #0
 e44:	nop
 e48:	ldrb	w6, [x0, x3]
 e4c:	ldrb	w5, [x1, x3]
 e50:	add	x3, x3, #0x1
 e54:	cmp	w6, w5
 e58:	cinc	x4, x4, ne  // ne = any
 e5c:	cmp	x3, x2
 e60:	b.ne	e48 <grub_crypto_memcmp+0x10>  // b.any
 e64:	cmp	x4, #0x0
 e68:	cset	w0, ne  // ne = any
 e6c:	ret
 e70:	mov	w0, #0x0                   	// #0
 e74:	ret

0000000000000e78 <grub_password_get>:
 e78:	stp	x29, x30, [sp, #-48]!
 e7c:	mov	x29, sp
 e80:	stp	x19, x20, [sp, #16]
 e84:	mov	w20, w1
 e88:	mov	w19, #0x0                   	// #0
 e8c:	str	x21, [sp, #32]
 e90:	mov	x21, x0
 e94:	nop
 e98:	bl	0 <grub_getkey>
 e9c:	cmp	w0, #0xa
 ea0:	add	w3, w19, #0x2
 ea4:	sub	w2, w0, #0x20
 ea8:	ccmp	w0, #0xd, #0x4, ne  // ne = any
 eac:	b.eq	ef0 <grub_password_get+0x78>  // b.none
 eb0:	cmp	w0, #0x1b
 eb4:	b.eq	f50 <grub_password_get+0xd8>  // b.none
 eb8:	cmp	w0, #0x8
 ebc:	b.eq	f40 <grub_password_get+0xc8>  // b.none
 ec0:	cmp	w2, #0x5e
 ec4:	b.hi	e98 <grub_password_get+0x20>  // b.pmore
 ec8:	cmp	w3, w20
 ecc:	b.cs	e98 <grub_password_get+0x20>  // b.hs, b.nlast
 ed0:	strb	w0, [x21, w19, uxtw]
 ed4:	add	w19, w19, #0x1
 ed8:	bl	0 <grub_getkey>
 edc:	cmp	w0, #0xa
 ee0:	add	w3, w19, #0x2
 ee4:	sub	w2, w0, #0x20
 ee8:	ccmp	w0, #0xd, #0x4, ne  // ne = any
 eec:	b.ne	eb0 <grub_password_get+0x38>  // b.any
 ef0:	cmp	w0, #0x1b
 ef4:	add	x21, x21, w19, uxtw
 ef8:	sub	w20, w20, w19
 efc:	cset	w19, ne  // ne = any
 f00:	mov	w2, w20
 f04:	mov	x0, x21
 f08:	mov	w1, #0x0                   	// #0
 f0c:	bl	0 <grub_memset>
 f10:	adrp	x1, 0 <grub_burn_stack>
 f14:	adrp	x0, 0 <grub_burn_stack>
 f18:	ldr	x1, [x1]
 f1c:	ldr	x0, [x0]
 f20:	ldr	x1, [x1]
 f24:	blr	x1
 f28:	bl	0 <grub_refresh>
 f2c:	mov	w0, w19
 f30:	ldp	x19, x20, [sp, #16]
 f34:	ldr	x21, [sp, #32]
 f38:	ldp	x29, x30, [sp], #48
 f3c:	ret
 f40:	cmp	w19, #0x0
 f44:	cset	w0, ne  // ne = any
 f48:	sub	w19, w19, w0
 f4c:	b	e98 <grub_password_get+0x20>
 f50:	mov	w19, #0x0                   	// #0
 f54:	b	f00 <grub_password_get+0x88>
	...
