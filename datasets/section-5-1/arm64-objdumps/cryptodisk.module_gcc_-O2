
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cryptodisk.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <luks_script_get>:
       0:	stp	x29, x30, [sp, #-96]!
       4:	adrp	x1, 0 <luks_script_get>
       8:	mov	x29, sp
       c:	stp	x23, x24, [sp, #48]
      10:	ldr	x23, [x1]
      14:	stp	x19, x20, [sp, #16]
      18:	stp	x21, x22, [sp, #32]
      1c:	mov	x21, x0
      20:	ldr	x20, [x23]
      24:	str	xzr, [x0]
      28:	cbz	x20, 484 <luks_script_get+0x484>
      2c:	adrp	x0, 0 <luks_script_get>
      30:	mov	x22, #0x0                   	// #0
      34:	ldr	x19, [x0]
      38:	b	44 <luks_script_get+0x44>
      3c:	ldr	x20, [x20]
      40:	cbz	x20, a0 <luks_script_get+0xa0>
      44:	ldr	x0, [x20, #448]
      48:	mov	x1, x19
      4c:	add	x24, x22, #0x42
      50:	bl	0 <grub_strcmp>
      54:	cbnz	w0, 3c <luks_script_get+0x3c>
      58:	add	x0, x20, #0x8c
      5c:	bl	0 <grub_strlen>
      60:	ldr	x1, [x20, #56]
      64:	mov	x22, x0
      68:	ldr	x0, [x1]
      6c:	ldr	x0, [x0]
      70:	bl	0 <grub_strlen>
      74:	add	x22, x22, x0
      78:	ldr	x1, [x20, #80]
      7c:	add	x22, x22, x24
      80:	cbz	x1, 90 <luks_script_get+0x90>
      84:	ldr	x0, [x1]
      88:	bl	0 <grub_strlen>
      8c:	add	x22, x22, x0
      90:	ldr	x0, [x20, #440]
      94:	ldr	x20, [x20]
      98:	add	x22, x22, x0, lsl #1
      9c:	cbnz	x20, 44 <luks_script_get+0x44>
      a0:	add	x0, x22, #0x1
      a4:	bl	0 <grub_malloc>
      a8:	mov	x20, x0
      ac:	cbz	x0, 2b0 <luks_script_get+0x2b0>
      b0:	stp	x25, x26, [sp, #64]
      b4:	ldr	x25, [x23]
      b8:	str	x27, [sp, #80]
      bc:	cbz	x25, 48c <luks_script_get+0x48c>
      c0:	adrp	x0, 0 <luks_script_get>
      c4:	mov	x27, x20
      c8:	adrp	x24, 0 <luks_script_get>
      cc:	mov	w22, #0x20                  	// #32
      d0:	ldr	x19, [x0]
      d4:	adrp	x23, 0 <luks_script_get>
      d8:	b	e4 <luks_script_get+0xe4>
      dc:	ldr	x25, [x25]
      e0:	cbz	x25, 29c <luks_script_get+0x29c>
      e4:	ldr	x0, [x25, #448]
      e8:	mov	x1, x19
      ec:	bl	0 <grub_strcmp>
      f0:	cbnz	w0, dc <luks_script_get+0xdc>
      f4:	ldr	x2, [x24]
      f8:	mov	w1, #0x6c                  	// #108
      fc:	b	108 <luks_script_get+0x108>
     100:	ldrb	w1, [x2]
     104:	mov	x27, x0
     108:	mov	x0, x27
     10c:	add	x2, x2, #0x1
     110:	strb	w1, [x0], #1
     114:	cbnz	w1, 100 <luks_script_get+0x100>
     118:	add	x1, x25, #0x8c
     11c:	nop
     120:	ldrb	w2, [x1]
     124:	mov	x26, x27
     128:	sturb	w2, [x0, #-1]
     12c:	mov	x27, x0
     130:	add	x0, x0, #0x1
     134:	ldrb	w2, [x1], #1
     138:	cbnz	w2, 120 <luks_script_get+0x120>
     13c:	strb	w22, [x26]
     140:	mov	x0, x27
     144:	ldr	x2, [x23]
     148:	mov	x1, #0x15                  	// #21
     14c:	ldr	x3, [x25, #24]
     150:	bl	0 <grub_snprintf>
     154:	ldrb	w0, [x27]
     158:	cbz	w0, 47c <luks_script_get+0x47c>
     15c:	nop
     160:	mov	x1, x27
     164:	ldrb	w0, [x27, #1]!
     168:	cbnz	w0, 160 <luks_script_get+0x160>
     16c:	add	x1, x1, #0x2
     170:	ldr	x0, [x25, #56]
     174:	ldr	x0, [x0]
     178:	ldr	x3, [x0]
     17c:	ldrb	w2, [x3]
     180:	cbnz	w2, 18c <luks_script_get+0x18c>
     184:	b	474 <luks_script_get+0x474>
     188:	mov	x27, x0
     18c:	mov	x0, x27
     190:	sub	w4, w2, #0x41
     194:	add	w1, w2, #0x20
     198:	cmp	w4, #0x1a
     19c:	and	w1, w1, #0xff
     1a0:	csel	w2, w1, w2, cc  // cc = lo, ul, last
     1a4:	strb	w2, [x0], #1
     1a8:	ldrb	w2, [x3, #1]!
     1ac:	cbnz	w2, 188 <luks_script_get+0x188>
     1b0:	add	x1, x27, #0x2
     1b4:	ldr	w2, [x25, #104]
     1b8:	cmp	w2, #0x2
     1bc:	b.eq	448 <luks_script_get+0x448>  // b.none
     1c0:	b.hi	304 <luks_script_get+0x304>  // b.pmore
     1c4:	cbz	w2, 3cc <luks_script_get+0x3cc>
     1c8:	adrp	x1, 0 <luks_script_get>
     1cc:	mov	w3, #0x2d                  	// #45
     1d0:	ldr	x2, [x1]
     1d4:	b	1e0 <luks_script_get+0x1e0>
     1d8:	ldrb	w3, [x2]
     1dc:	mov	x0, x1
     1e0:	mov	x1, x0
     1e4:	add	x2, x2, #0x1
     1e8:	strb	w3, [x1], #1
     1ec:	cbnz	w3, 1d8 <luks_script_get+0x1d8>
     1f0:	ldr	w2, [x25, #108]
     1f4:	cmp	w2, #0x2
     1f8:	b.eq	348 <luks_script_get+0x348>  // b.none
     1fc:	b.hi	2c8 <luks_script_get+0x2c8>  // b.pmore
     200:	cbz	w2, 374 <luks_script_get+0x374>
     204:	adrp	x1, 0 <luks_script_get>
     208:	mov	w3, #0x2d                  	// #45
     20c:	ldr	x2, [x1]
     210:	b	21c <luks_script_get+0x21c>
     214:	ldrb	w3, [x2]
     218:	mov	x0, x1
     21c:	mov	x1, x0
     220:	add	x2, x2, #0x1
     224:	strb	w3, [x1], #1
     228:	cbnz	w3, 214 <luks_script_get+0x214>
     22c:	strb	w22, [x0]
     230:	ldr	x0, [x25, #440]
     234:	cbz	x0, 288 <luks_script_get+0x288>
     238:	add	x4, x25, #0x138
     23c:	mov	x3, #0x0                   	// #0
     240:	ldrb	w0, [x4, x3]
     244:	lsr	w0, w0, #4
     248:	cmp	w0, #0x9
     24c:	add	w2, w0, #0x30
     250:	add	w0, w0, #0x57
     254:	csel	w0, w0, w2, hi  // hi = pmore
     258:	strb	w0, [x1], #2
     25c:	ldrb	w2, [x4, x3]
     260:	add	x3, x3, #0x1
     264:	and	w2, w2, #0xf
     268:	cmp	w2, #0x9
     26c:	add	w0, w2, #0x30
     270:	add	w2, w2, #0x57
     274:	csel	w2, w2, w0, hi  // hi = pmore
     278:	sturb	w2, [x1, #-1]
     27c:	ldr	x0, [x25, #440]
     280:	cmp	x0, x3
     284:	b.hi	240 <luks_script_get+0x240>  // b.pmore
     288:	mov	x27, x1
     28c:	mov	w0, #0xa                   	// #10
     290:	strb	w0, [x27], #1
     294:	ldr	x25, [x25]
     298:	cbnz	x25, e4 <luks_script_get+0xe4>
     29c:	sub	x0, x27, x20
     2a0:	strb	wzr, [x27]
     2a4:	ldp	x25, x26, [sp, #64]
     2a8:	ldr	x27, [sp, #80]
     2ac:	str	x0, [x21]
     2b0:	mov	x0, x20
     2b4:	ldp	x19, x20, [sp, #16]
     2b8:	ldp	x21, x22, [sp, #32]
     2bc:	ldp	x23, x24, [sp, #48]
     2c0:	ldp	x29, x30, [sp], #96
     2c4:	ret
     2c8:	cmp	w2, #0x3
     2cc:	b.eq	3f8 <luks_script_get+0x3f8>  // b.none
     2d0:	cmp	w2, #0x4
     2d4:	b.ne	22c <luks_script_get+0x22c>  // b.any
     2d8:	adrp	x1, 0 <luks_script_get>
     2dc:	mov	w3, #0x2d                  	// #45
     2e0:	ldr	x2, [x1]
     2e4:	b	2f0 <luks_script_get+0x2f0>
     2e8:	ldrb	w3, [x2]
     2ec:	mov	x0, x1
     2f0:	mov	x1, x0
     2f4:	add	x2, x2, #0x1
     2f8:	strb	w3, [x1], #1
     2fc:	cbnz	w3, 2e8 <luks_script_get+0x2e8>
     300:	b	22c <luks_script_get+0x22c>
     304:	cmp	w2, #0x3
     308:	b.eq	3a0 <luks_script_get+0x3a0>  // b.none
     30c:	cmp	w2, #0x4
     310:	b.ne	1f0 <luks_script_get+0x1f0>  // b.any
     314:	adrp	x1, 0 <luks_script_get>
     318:	mov	w3, #0x2d                  	// #45
     31c:	ldr	x2, [x1]
     320:	b	32c <luks_script_get+0x32c>
     324:	ldrb	w3, [x2]
     328:	mov	x0, x1
     32c:	mov	x1, x0
     330:	add	x2, x2, #0x1
     334:	strb	w3, [x1], #1
     338:	cbnz	w3, 324 <luks_script_get+0x324>
     33c:	ldr	w2, [x25, #108]
     340:	cmp	w2, #0x2
     344:	b.ne	1fc <luks_script_get+0x1fc>  // b.any
     348:	adrp	x1, 0 <luks_script_get>
     34c:	mov	w3, #0x2d                  	// #45
     350:	ldr	x2, [x1]
     354:	b	360 <luks_script_get+0x360>
     358:	ldrb	w3, [x2]
     35c:	mov	x0, x1
     360:	mov	x1, x0
     364:	add	x2, x2, #0x1
     368:	strb	w3, [x1], #1
     36c:	cbnz	w3, 358 <luks_script_get+0x358>
     370:	b	22c <luks_script_get+0x22c>
     374:	adrp	x1, 0 <luks_script_get>
     378:	mov	w3, #0x2d                  	// #45
     37c:	ldr	x2, [x1]
     380:	b	38c <luks_script_get+0x38c>
     384:	ldrb	w3, [x2]
     388:	mov	x0, x1
     38c:	mov	x1, x0
     390:	add	x2, x2, #0x1
     394:	strb	w3, [x1], #1
     398:	cbnz	w3, 384 <luks_script_get+0x384>
     39c:	b	22c <luks_script_get+0x22c>
     3a0:	adrp	x1, 0 <luks_script_get>
     3a4:	mov	w3, #0x2d                  	// #45
     3a8:	ldr	x2, [x1]
     3ac:	b	3b8 <luks_script_get+0x3b8>
     3b0:	ldrb	w3, [x2]
     3b4:	mov	x0, x1
     3b8:	mov	x1, x0
     3bc:	add	x2, x2, #0x1
     3c0:	strb	w3, [x1], #1
     3c4:	cbnz	w3, 3b0 <luks_script_get+0x3b0>
     3c8:	b	1f0 <luks_script_get+0x1f0>
     3cc:	adrp	x1, 0 <luks_script_get>
     3d0:	mov	w3, #0x2d                  	// #45
     3d4:	ldr	x2, [x1]
     3d8:	b	3e4 <luks_script_get+0x3e4>
     3dc:	ldrb	w3, [x2]
     3e0:	mov	x0, x1
     3e4:	mov	x1, x0
     3e8:	add	x2, x2, #0x1
     3ec:	strb	w3, [x1], #1
     3f0:	cbnz	w3, 3dc <luks_script_get+0x3dc>
     3f4:	b	1f0 <luks_script_get+0x1f0>
     3f8:	adrp	x1, 0 <luks_script_get>
     3fc:	mov	w3, #0x2d                  	// #45
     400:	ldr	x2, [x1]
     404:	b	410 <luks_script_get+0x410>
     408:	ldrb	w3, [x2]
     40c:	mov	x0, x1
     410:	mov	x1, x0
     414:	add	x2, x2, #0x1
     418:	strb	w3, [x1], #1
     41c:	cbnz	w3, 408 <luks_script_get+0x408>
     420:	ldr	x2, [x25, #80]
     424:	mov	x1, x0
     428:	ldr	x2, [x2]
     42c:	nop
     430:	mov	x0, x1
     434:	ldrb	w3, [x2]
     438:	strb	w3, [x1], #1
     43c:	ldrb	w3, [x2], #1
     440:	cbnz	w3, 430 <luks_script_get+0x430>
     444:	b	22c <luks_script_get+0x22c>
     448:	adrp	x1, 0 <luks_script_get>
     44c:	mov	w3, #0x2d                  	// #45
     450:	ldr	x2, [x1]
     454:	b	460 <luks_script_get+0x460>
     458:	ldrb	w3, [x2]
     45c:	mov	x0, x1
     460:	mov	x1, x0
     464:	add	x2, x2, #0x1
     468:	strb	w3, [x1], #1
     46c:	cbnz	w3, 458 <luks_script_get+0x458>
     470:	b	1f0 <luks_script_get+0x1f0>
     474:	mov	x0, x27
     478:	b	1b4 <luks_script_get+0x1b4>
     47c:	add	x1, x26, #0x2
     480:	b	170 <luks_script_get+0x170>
     484:	mov	x0, #0x1                   	// #1
     488:	b	a4 <luks_script_get+0xa4>
     48c:	mov	x27, x0
     490:	mov	x0, #0x0                   	// #0
     494:	b	2a0 <luks_script_get+0x2a0>
	...

0000000000000508 <grub_cryptodisk_close>:
     508:	stp	x29, x30, [sp, #-32]!
     50c:	mov	x4, x0
     510:	adrp	x1, 0 <luks_script_get>
     514:	adrp	x2, 0 <luks_script_get>
     518:	adrp	x0, 0 <luks_script_get>
     51c:	mov	x29, sp
     520:	ldr	x3, [x1]
     524:	str	x19, [sp, #16]
     528:	ldr	x0, [x0]
     52c:	mov	w1, #0x228                 	// #552
     530:	ldr	x2, [x2]
     534:	ldr	x19, [x4, #64]
     538:	bl	0 <grub_real_dprintf>
     53c:	ldr	w0, [x19, #48]
     540:	sub	w0, w0, #0x1
     544:	str	w0, [x19, #48]
     548:	cbnz	w0, 558 <grub_cryptodisk_close+0x50>
     54c:	ldr	x0, [x19, #40]
     550:	bl	0 <grub_disk_close>
     554:	str	xzr, [x19, #40]
     558:	ldr	x19, [sp, #16]
     55c:	ldp	x29, x30, [sp], #32
     560:	ret
     564:	nop
	...

0000000000000580 <grub_cryptodisk_iterate>:
     580:	cbnz	w2, 60c <grub_cryptodisk_iterate+0x8c>
     584:	stp	x29, x30, [sp, #-80]!
     588:	mov	x29, sp
     58c:	stp	x19, x20, [sp, #16]
     590:	mov	x20, x0
     594:	adrp	x0, 0 <luks_script_get>
     598:	ldr	x0, [x0]
     59c:	ldr	x19, [x0]
     5a0:	cbz	x19, 5fc <grub_cryptodisk_iterate+0x7c>
     5a4:	adrp	x0, 0 <luks_script_get>
     5a8:	stp	x21, x22, [sp, #32]
     5ac:	mov	x21, x1
     5b0:	ldr	x22, [x0]
     5b4:	b	5c0 <grub_cryptodisk_iterate+0x40>
     5b8:	ldr	x19, [x19]
     5bc:	cbz	x19, 5f8 <grub_cryptodisk_iterate+0x78>
     5c0:	ldr	x3, [x19, #120]
     5c4:	mov	x2, x22
     5c8:	mov	x1, #0x1e                  	// #30
     5cc:	add	x0, sp, #0x30
     5d0:	bl	0 <grub_snprintf>
     5d4:	mov	x1, x21
     5d8:	add	x0, sp, #0x30
     5dc:	blr	x20
     5e0:	cbz	w0, 5b8 <grub_cryptodisk_iterate+0x38>
     5e4:	mov	w0, #0x1                   	// #1
     5e8:	ldp	x19, x20, [sp, #16]
     5ec:	ldp	x21, x22, [sp, #32]
     5f0:	ldp	x29, x30, [sp], #80
     5f4:	ret
     5f8:	ldp	x21, x22, [sp, #32]
     5fc:	mov	w0, #0x0                   	// #0
     600:	ldp	x19, x20, [sp, #16]
     604:	ldp	x29, x30, [sp], #80
     608:	ret
     60c:	mov	w0, #0x0                   	// #0
     610:	ret
     614:	nop
	...

0000000000000628 <grub_cryptodisk_open>:
     628:	stp	x29, x30, [sp, #-48]!
     62c:	adrp	x2, 0 <luks_script_get>
     630:	mov	x29, sp
     634:	stp	x19, x20, [sp, #16]
     638:	mov	x20, x1
     63c:	ldr	x1, [x2]
     640:	mov	x2, #0x6                   	// #6
     644:	str	x21, [sp, #32]
     648:	mov	x21, x0
     64c:	bl	0 <grub_memcmp>
     650:	cbnz	w0, 6e0 <grub_cryptodisk_open+0xb8>
     654:	adrp	x1, 0 <luks_script_get>
     658:	mov	x0, x21
     65c:	mov	x2, #0xb                   	// #11
     660:	ldr	x1, [x1]
     664:	bl	0 <grub_memcmp>
     668:	cbnz	w0, 6fc <grub_cryptodisk_open+0xd4>
     66c:	adrp	x0, 0 <luks_script_get>
     670:	ldr	x0, [x0]
     674:	ldr	x19, [x0]
     678:	cbz	x19, 6e0 <grub_cryptodisk_open+0xb8>
     67c:	mov	x10, x21
     680:	ldrb	w9, [x10, #11]!
     684:	nop
     688:	add	x4, x19, #0x8c
     68c:	mov	x1, x10
     690:	mov	w3, w9
     694:	cbnz	w9, 6b0 <grub_cryptodisk_open+0x88>
     698:	b	790 <grub_cryptodisk_open+0x168>
     69c:	csel	w5, w5, w2, cc  // cc = lo, ul, last
     6a0:	cmp	w5, w8
     6a4:	b.ne	7bc <grub_cryptodisk_open+0x194>  // b.any
     6a8:	ldrb	w3, [x1, #1]!
     6ac:	cbz	w3, 790 <grub_cryptodisk_open+0x168>
     6b0:	ldrb	w2, [x4]
     6b4:	sub	w7, w3, #0x41
     6b8:	cmp	w7, #0x1a
     6bc:	add	w6, w3, #0x20
     6c0:	sub	w0, w2, #0x41
     6c4:	csel	w8, w6, w3, cc  // cc = lo, ul, last
     6c8:	add	x4, x4, #0x1
     6cc:	add	w5, w2, #0x20
     6d0:	cmp	w0, #0x1a
     6d4:	cbnz	w2, 69c <grub_cryptodisk_open+0x74>
     6d8:	ldr	x19, [x19]
     6dc:	cbnz	x19, 688 <grub_cryptodisk_open+0x60>
     6e0:	adrp	x1, 0 <luks_script_get>
     6e4:	mov	w0, #0xc                   	// #12
     6e8:	ldp	x19, x20, [sp, #16]
     6ec:	ldr	x21, [sp, #32]
     6f0:	ldp	x29, x30, [sp], #48
     6f4:	ldr	x1, [x1]
     6f8:	b	0 <grub_error>
     6fc:	mov	x1, #0x0                   	// #0
     700:	add	x0, x21, #0x6
     704:	mov	w2, #0x0                   	// #0
     708:	bl	0 <grub_strtoul>
     70c:	adrp	x1, 0 <luks_script_get>
     710:	ldr	x1, [x1]
     714:	ldr	w1, [x1]
     718:	cbnz	w1, 6e0 <grub_cryptodisk_open+0xb8>
     71c:	adrp	x1, 0 <luks_script_get>
     720:	ldr	x1, [x1]
     724:	ldr	x19, [x1]
     728:	cbnz	x19, 738 <grub_cryptodisk_open+0x110>
     72c:	b	6e0 <grub_cryptodisk_open+0xb8>
     730:	ldr	x19, [x19]
     734:	cbz	x19, 6e0 <grub_cryptodisk_open+0xb8>
     738:	ldr	x1, [x19, #120]
     73c:	cmp	x0, x1
     740:	b.ne	730 <grub_cryptodisk_open+0x108>  // b.any
     744:	ldr	x0, [x19, #40]
     748:	ldr	w1, [x19, #456]
     74c:	str	w1, [x20, #24]
     750:	cbz	x0, 7c8 <grub_cryptodisk_open+0x1a0>
     754:	ldr	w1, [x19, #48]
     758:	mov	w3, #0x7fff                	// #32767
     75c:	ldr	x4, [x19, #32]
     760:	add	w1, w1, #0x1
     764:	ldr	x2, [x19, #120]
     768:	str	x4, [x20, #16]
     76c:	str	w3, [x20, #28]
     770:	mov	w0, #0x0                   	// #0
     774:	str	x2, [x20, #32]
     778:	str	x19, [x20, #64]
     77c:	str	w1, [x19, #48]
     780:	ldp	x19, x20, [sp, #16]
     784:	ldr	x21, [sp, #32]
     788:	ldp	x29, x30, [sp], #48
     78c:	ret
     790:	ldrb	w2, [x4]
     794:	mov	w3, #0x0                   	// #0
     798:	sub	w0, w2, #0x41
     79c:	cmp	w0, #0x1a
     7a0:	add	w0, w2, #0x20
     7a4:	csel	w2, w0, w2, cc  // cc = lo, ul, last
     7a8:	cmp	w3, w2
     7ac:	b.eq	744 <grub_cryptodisk_open+0x11c>  // b.none
     7b0:	ldr	x19, [x19]
     7b4:	cbnz	x19, 688 <grub_cryptodisk_open+0x60>
     7b8:	b	6e0 <grub_cryptodisk_open+0xb8>
     7bc:	cmp	w7, #0x1a
     7c0:	csel	w3, w6, w3, cc  // cc = lo, ul, last
     7c4:	b	79c <grub_cryptodisk_open+0x174>
     7c8:	adrp	x1, 0 <luks_script_get>
     7cc:	adrp	x2, 0 <luks_script_get>
     7d0:	adrp	x0, 0 <luks_script_get>
     7d4:	mov	x4, x21
     7d8:	ldr	x3, [x1]
     7dc:	mov	w1, #0x215                 	// #533
     7e0:	ldr	x2, [x2]
     7e4:	ldr	x0, [x0]
     7e8:	bl	0 <grub_real_dprintf>
     7ec:	ldr	x0, [x19, #16]
     7f0:	bl	0 <grub_disk_open>
     7f4:	str	x0, [x19, #40]
     7f8:	cbnz	x0, 754 <grub_cryptodisk_open+0x12c>
     7fc:	adrp	x0, 0 <luks_script_get>
     800:	ldr	x0, [x0]
     804:	ldr	w0, [x0]
     808:	b	780 <grub_cryptodisk_open+0x158>
     80c:	nop
	...

0000000000000850 <gf_mul_be>:
     850:	stp	x29, x30, [sp, #-64]!
     854:	mov	x29, sp
     858:	stp	x19, x20, [sp, #16]
     85c:	mov	x20, x1
     860:	add	x19, sp, #0x30
     864:	mov	w1, #0x0                   	// #0
     868:	stp	x21, x22, [sp, #32]
     86c:	mov	x22, x2
     870:	mov	x21, x0
     874:	mov	x2, #0x10                  	// #16
     878:	bl	0 <grub_memset>
     87c:	mov	x1, x22
     880:	mov	x0, x19
     884:	mov	x2, #0x10                  	// #16
     888:	bl	0 <grub_memmove>
     88c:	add	x6, x21, #0x10
     890:	mov	w8, #0x0                   	// #0
     894:	mov	w9, #0xf                   	// #15
     898:	sub	w1, w9, w8, lsr #3
     89c:	and	w0, w8, #0x7
     8a0:	mov	x2, x19
     8a4:	ldrb	w1, [x20, w1, uxtw]
     8a8:	asr	w0, w1, w0
     8ac:	mov	x1, x21
     8b0:	tbnz	w0, #0, 920 <gf_mul_be+0xd0>
     8b4:	add	x1, x19, #0xf
     8b8:	mov	w0, #0x0                   	// #0
     8bc:	nop
     8c0:	ldrb	w2, [x1]
     8c4:	cmp	x19, x1
     8c8:	orr	w0, w0, w2, lsl #1
     8cc:	strb	w0, [x1], #-1
     8d0:	sxtb	w3, w2
     8d4:	lsr	w0, w2, #7
     8d8:	b.ne	8c0 <gf_mul_be+0x70>  // b.any
     8dc:	tbz	w3, #31, 8ec <gf_mul_be+0x9c>
     8e0:	ldrb	w0, [sp, #63]
     8e4:	eor	w0, w0, #0xffffff87
     8e8:	strb	w0, [sp, #63]
     8ec:	add	w8, w8, #0x1
     8f0:	cmp	w8, #0x80
     8f4:	b.ne	898 <gf_mul_be+0x48>  // b.any
     8f8:	ldp	x19, x20, [sp, #16]
     8fc:	ldp	x21, x22, [sp, #32]
     900:	ldp	x29, x30, [sp], #64
     904:	ret
     908:	ldrb	w0, [x1]
     90c:	ldrb	w3, [x2], #1
     910:	eor	w0, w0, w3
     914:	strb	w0, [x1], #1
     918:	cmp	x1, x6
     91c:	b.eq	8b4 <gf_mul_be+0x64>  // b.none
     920:	orr	x0, x2, x1
     924:	sub	x4, x6, x1
     928:	ands	x0, x0, #0x7
     92c:	b.ne	908 <gf_mul_be+0xb8>  // b.any
     930:	cmp	x4, #0x7
     934:	b.ls	974 <gf_mul_be+0x124>  // b.plast
     938:	mov	x3, #0x0                   	// #0
     93c:	ldr	x5, [x1, x3]
     940:	ldr	x7, [x2, x3]
     944:	eor	x5, x5, x7
     948:	str	x5, [x1, x3]
     94c:	add	x3, x3, #0x8
     950:	sub	x5, x4, x3
     954:	cmp	x5, #0x7
     958:	b.hi	93c <gf_mul_be+0xec>  // b.pmore
     95c:	sub	x3, x4, #0x8
     960:	and	x4, x4, #0x7
     964:	and	x3, x3, #0xfffffffffffffff8
     968:	add	x3, x3, #0x8
     96c:	add	x1, x1, x3
     970:	add	x2, x2, x3
     974:	cbz	x4, 8b4 <gf_mul_be+0x64>
     978:	ldrb	w3, [x1, x0]
     97c:	ldrb	w5, [x2, x0]
     980:	eor	w3, w3, w5
     984:	strb	w3, [x1, x0]
     988:	add	x0, x0, #0x1
     98c:	cmp	x0, x4
     990:	b.ne	978 <gf_mul_be+0x128>  // b.any
     994:	b	8b4 <gf_mul_be+0x64>

0000000000000998 <lrw_xor.isra.0>:
     998:	ldrb	w4, [x0, #33]
     99c:	add	x12, x0, #0x10
     9a0:	mov	w10, #0x0                   	// #0
     9a4:	cbz	w4, b0c <lrw_xor.isra.0+0x174>
     9a8:	add	x5, x3, w10, uxtw
     9ac:	mov	x6, x0
     9b0:	add	x9, x5, #0x10
     9b4:	b	9d0 <lrw_xor.isra.0+0x38>
     9b8:	ldrb	w4, [x5]
     9bc:	ldrb	w7, [x6], #1
     9c0:	eor	w4, w4, w7
     9c4:	strb	w4, [x5], #1
     9c8:	cmp	x5, x9
     9cc:	b.eq	a44 <lrw_xor.isra.0+0xac>  // b.none
     9d0:	orr	x4, x5, x6
     9d4:	sub	x8, x12, x6
     9d8:	ands	x4, x4, #0x7
     9dc:	b.ne	9b8 <lrw_xor.isra.0+0x20>  // b.any
     9e0:	cmp	x8, #0x7
     9e4:	b.ls	a24 <lrw_xor.isra.0+0x8c>  // b.plast
     9e8:	mov	x7, #0x0                   	// #0
     9ec:	ldr	x9, [x5, x7]
     9f0:	ldr	x11, [x6, x7]
     9f4:	eor	x9, x9, x11
     9f8:	str	x9, [x5, x7]
     9fc:	add	x7, x7, #0x8
     a00:	sub	x9, x8, x7
     a04:	cmp	x9, #0x7
     a08:	b.hi	9ec <lrw_xor.isra.0+0x54>  // b.pmore
     a0c:	sub	x7, x8, #0x8
     a10:	and	x8, x8, #0x7
     a14:	and	x7, x7, #0xfffffffffffffff8
     a18:	add	x7, x7, #0x8
     a1c:	add	x5, x5, x7
     a20:	add	x6, x6, x7
     a24:	cbz	x8, a44 <lrw_xor.isra.0+0xac>
     a28:	ldrb	w7, [x5, x4]
     a2c:	ldrb	w9, [x6, x4]
     a30:	eor	w7, w7, w9
     a34:	strb	w7, [x5, x4]
     a38:	add	x4, x4, #0x1
     a3c:	cmp	x4, x8
     a40:	b.ne	a28 <lrw_xor.isra.0+0x90>  // b.any
     a44:	ldrb	w4, [x0, #33]
     a48:	add	w10, w10, #0x10
     a4c:	cmp	w10, w4, lsl #4
     a50:	lsl	w5, w4, #4
     a54:	b.cc	9a8 <lrw_xor.isra.0+0x10>  // b.lo, b.ul, b.last
     a58:	ldrb	w4, [x0, #32]
     a5c:	mov	w7, w5
     a60:	ldr	x6, [x1]
     a64:	ubfiz	x8, x4, #4, #8
     a68:	add	x6, x6, x8
     a6c:	cbz	w5, b10 <lrw_xor.isra.0+0x178>
     a70:	orr	x4, x3, x6
     a74:	tst	x4, #0x7
     a78:	mov	x4, x3
     a7c:	b.eq	aa4 <lrw_xor.isra.0+0x10c>  // b.none
     a80:	ldrb	w8, [x6], #1
     a84:	subs	x7, x7, #0x1
     a88:	ldrb	w5, [x4]
     a8c:	eor	w5, w5, w8
     a90:	strb	w5, [x4], #1
     a94:	orr	x5, x6, x4
     a98:	b.eq	b0c <lrw_xor.isra.0+0x174>  // b.none
     a9c:	tst	x5, #0x7
     aa0:	b.ne	a80 <lrw_xor.isra.0+0xe8>  // b.any
     aa4:	cmp	x7, #0x7
     aa8:	b.ls	ae8 <lrw_xor.isra.0+0x150>  // b.plast
     aac:	sub	x8, x7, #0x8
     ab0:	mov	x5, #0x0                   	// #0
     ab4:	and	x8, x8, #0xfffffffffffffff8
     ab8:	add	x8, x8, #0x8
     abc:	ldr	x9, [x4, x5]
     ac0:	ldr	x10, [x6, x5]
     ac4:	eor	x9, x9, x10
     ac8:	str	x9, [x4, x5]
     acc:	add	x5, x5, #0x8
     ad0:	cmp	x8, x5
     ad4:	b.ne	abc <lrw_xor.isra.0+0x124>  // b.any
     ad8:	add	x4, x4, x8
     adc:	add	x6, x6, x8
     ae0:	ands	x7, x7, #0x7
     ae4:	b.eq	b0c <lrw_xor.isra.0+0x174>  // b.none
     ae8:	mov	x5, #0x0                   	// #0
     aec:	nop
     af0:	ldrb	w8, [x4, x5]
     af4:	ldrb	w9, [x6, x5]
     af8:	eor	w8, w8, w9
     afc:	strb	w8, [x4, x5]
     b00:	add	x5, x5, #0x1
     b04:	cmp	x7, x5
     b08:	b.ne	af0 <lrw_xor.isra.0+0x158>  // b.any
     b0c:	ldrb	w4, [x0, #32]
     b10:	cbz	w4, c94 <lrw_xor.isra.0+0x2fc>
     b14:	ldr	w5, [x2]
     b18:	mov	w12, #0x1                   	// #1
     b1c:	ldrb	w6, [x0, #33]
     b20:	lsl	w5, w12, w5
     b24:	cmp	w5, w6, lsl #4
     b28:	lsl	w6, w6, #4
     b2c:	b.ls	c98 <lrw_xor.isra.0+0x300>  // b.plast
     b30:	add	x14, x0, #0x10
     b34:	add	x13, x0, #0x20
     b38:	add	x5, x3, w6, uxtw
     b3c:	mov	x8, x14
     b40:	add	x10, x5, #0x10
     b44:	b	b60 <lrw_xor.isra.0+0x1c8>
     b48:	ldrb	w4, [x5]
     b4c:	ldrb	w7, [x8], #1
     b50:	eor	w4, w4, w7
     b54:	strb	w4, [x5], #1
     b58:	cmp	x5, x10
     b5c:	b.eq	bd4 <lrw_xor.isra.0+0x23c>  // b.none
     b60:	orr	x4, x5, x8
     b64:	sub	x9, x13, x8
     b68:	ands	x4, x4, #0x7
     b6c:	b.ne	b48 <lrw_xor.isra.0+0x1b0>  // b.any
     b70:	cmp	x9, #0x7
     b74:	b.ls	bb4 <lrw_xor.isra.0+0x21c>  // b.plast
     b78:	mov	x7, #0x0                   	// #0
     b7c:	ldr	x10, [x5, x7]
     b80:	ldr	x11, [x8, x7]
     b84:	eor	x10, x10, x11
     b88:	str	x10, [x5, x7]
     b8c:	add	x7, x7, #0x8
     b90:	sub	x10, x9, x7
     b94:	cmp	x10, #0x7
     b98:	b.hi	b7c <lrw_xor.isra.0+0x1e4>  // b.pmore
     b9c:	sub	x7, x9, #0x8
     ba0:	and	x9, x9, #0x7
     ba4:	and	x7, x7, #0xfffffffffffffff8
     ba8:	add	x7, x7, #0x8
     bac:	add	x5, x5, x7
     bb0:	add	x8, x8, x7
     bb4:	cbz	x9, bd4 <lrw_xor.isra.0+0x23c>
     bb8:	ldrb	w7, [x5, x4]
     bbc:	ldrb	w10, [x8, x4]
     bc0:	eor	w7, w7, w10
     bc4:	strb	w7, [x5, x4]
     bc8:	add	x4, x4, #0x1
     bcc:	cmp	x4, x9
     bd0:	b.ne	bb8 <lrw_xor.isra.0+0x220>  // b.any
     bd4:	ldr	w4, [x2]
     bd8:	add	w6, w6, #0x10
     bdc:	lsl	w4, w12, w4
     be0:	cmp	w6, w4
     be4:	b.cc	b38 <lrw_xor.isra.0+0x1a0>  // b.lo, b.ul, b.last
     be8:	ldrb	w2, [x0, #33]
     bec:	ldrb	w4, [x0, #32]
     bf0:	ldr	x1, [x1]
     bf4:	ubfiz	x0, x2, #4, #8
     bf8:	add	x0, x3, x0
     bfc:	ubfiz	x2, x4, #4, #8
     c00:	cbz	w4, c94 <lrw_xor.isra.0+0x2fc>
     c04:	orr	x3, x0, x1
     c08:	b	c28 <lrw_xor.isra.0+0x290>
     c0c:	ldrb	w4, [x1], #1
     c10:	subs	x2, x2, #0x1
     c14:	ldrb	w3, [x0]
     c18:	eor	w3, w3, w4
     c1c:	strb	w3, [x0], #1
     c20:	orr	x3, x1, x0
     c24:	b.eq	c94 <lrw_xor.isra.0+0x2fc>  // b.none
     c28:	tst	x3, #0x7
     c2c:	b.ne	c0c <lrw_xor.isra.0+0x274>  // b.any
     c30:	cmp	x2, #0x7
     c34:	b.ls	c74 <lrw_xor.isra.0+0x2dc>  // b.plast
     c38:	sub	x4, x2, #0x8
     c3c:	mov	x3, #0x0                   	// #0
     c40:	and	x4, x4, #0xfffffffffffffff8
     c44:	add	x4, x4, #0x8
     c48:	ldr	x5, [x0, x3]
     c4c:	ldr	x6, [x1, x3]
     c50:	eor	x5, x5, x6
     c54:	str	x5, [x0, x3]
     c58:	add	x3, x3, #0x8
     c5c:	cmp	x4, x3
     c60:	b.ne	c48 <lrw_xor.isra.0+0x2b0>  // b.any
     c64:	add	x0, x0, x4
     c68:	add	x1, x1, x4
     c6c:	ands	x2, x2, #0x7
     c70:	b.eq	c94 <lrw_xor.isra.0+0x2fc>  // b.none
     c74:	mov	x3, #0x0                   	// #0
     c78:	ldrb	w4, [x0, x3]
     c7c:	ldrb	w5, [x1, x3]
     c80:	eor	w4, w4, w5
     c84:	strb	w4, [x0, x3]
     c88:	add	x3, x3, #0x1
     c8c:	cmp	x2, x3
     c90:	b.ne	c78 <lrw_xor.isra.0+0x2e0>  // b.any
     c94:	ret
     c98:	add	x0, x3, w6, uxtw
     c9c:	ubfiz	x2, x4, #4, #8
     ca0:	ldr	x1, [x1]
     ca4:	b	c04 <lrw_xor.isra.0+0x26c>

0000000000000ca8 <grub_cryptodisk_endecrypt>:
     ca8:	stp	x29, x30, [sp, #-208]!
     cac:	mov	x29, sp
     cb0:	stp	x25, x26, [sp, #64]
     cb4:	mov	x26, x0
     cb8:	ldr	x0, [x0, #56]
     cbc:	str	x2, [sp, #96]
     cc0:	ldr	x2, [x0]
     cc4:	ldr	x25, [x2, #24]
     cc8:	cmp	x25, #0x10
     ccc:	b.hi	14ec <grub_cryptodisk_endecrypt+0x844>  // b.pmore
     cd0:	ldr	w2, [x26, #104]
     cd4:	stp	x19, x20, [sp, #16]
     cd8:	mov	x20, x3
     cdc:	stp	x21, x22, [sp, #32]
     ce0:	mov	x22, x1
     ce4:	stp	x23, x24, [sp, #48]
     ce8:	mov	w23, w4
     cec:	cbz	w2, 120c <grub_cryptodisk_endecrypt+0x564>
     cf0:	ldr	x0, [sp, #96]
     cf4:	mov	x21, #0x0                   	// #0
     cf8:	cbz	x0, 1744 <grub_cryptodisk_endecrypt+0xa9c>
     cfc:	add	x19, sp, #0x88
     d00:	add	x0, sp, #0xb8
     d04:	add	x24, x19, #0x10
     d08:	stp	x27, x28, [sp, #80]
     d0c:	str	x0, [sp, #120]
     d10:	ldr	x2, [x26, #464]
     d14:	cbz	x2, d40 <grub_cryptodisk_endecrypt+0x98>
     d18:	ldr	w27, [x26, #472]
     d1c:	ldr	x0, [x26, #544]
     d20:	lsr	x27, x20, x27
     d24:	cmp	x0, x27
     d28:	b.eq	d40 <grub_cryptodisk_endecrypt+0x98>  // b.none
     d2c:	mov	x1, x27
     d30:	mov	x0, x26
     d34:	blr	x2
     d38:	cbnz	w0, 1234 <grub_cryptodisk_endecrypt+0x58c>
     d3c:	str	x27, [x26, #544]
     d40:	mov	x0, x19
     d44:	mov	x2, #0x10                  	// #16
     d48:	mov	w1, #0x0                   	// #0
     d4c:	bl	0 <grub_memset>
     d50:	ldr	w0, [x26, #108]
     d54:	cmp	w0, #0x4
     d58:	b.eq	14b8 <grub_cryptodisk_endecrypt+0x810>  // b.none
     d5c:	b.hi	1028 <grub_cryptodisk_endecrypt+0x380>  // b.pmore
     d60:	cmp	w0, #0x2
     d64:	b.eq	14a8 <grub_cryptodisk_endecrypt+0x800>  // b.none
     d68:	cmp	w0, #0x3
     d6c:	b.ne	e04 <grub_cryptodisk_endecrypt+0x15c>  // b.any
     d70:	ldr	x3, [x26, #56]
     d74:	mov	x2, x19
     d78:	ldr	x0, [x26, #72]
     d7c:	mov	x1, x19
     d80:	ldr	x3, [x3]
     d84:	str	w20, [sp, #136]
     d88:	ldr	x3, [x3, #24]
     d8c:	bl	0 <grub_crypto_ecb_encrypt>
     d90:	cbnz	w0, 1234 <grub_cryptodisk_endecrypt+0x58c>
     d94:	nop
     d98:	ldr	w0, [x26, #104]
     d9c:	cmp	w0, #0x2
     da0:	b.eq	e1c <grub_cryptodisk_endecrypt+0x174>  // b.none
     da4:	b.hi	10d0 <grub_cryptodisk_endecrypt+0x428>  // b.pmore
     da8:	cbz	w0, 1468 <grub_cryptodisk_endecrypt+0x7c0>
     dac:	ldr	w3, [x26, #456]
     db0:	mov	w1, #0x1                   	// #1
     db4:	add	x2, x22, x21
     db8:	mov	x4, x19
     dbc:	ldr	x0, [x26, #56]
     dc0:	lsl	w3, w1, w3
     dc4:	mov	x1, x2
     dc8:	cbz	w23, 1660 <grub_cryptodisk_endecrypt+0x9b8>
     dcc:	bl	0 <grub_crypto_cbc_encrypt>
     dd0:	cbnz	w0, 1234 <grub_cryptodisk_endecrypt+0x58c>
     dd4:	ldr	w1, [x26, #456]
     dd8:	mov	w0, #0x1                   	// #1
     ddc:	lsl	w0, w0, w1
     de0:	add	x21, x21, x0
     de4:	add	x20, x20, #0x1
     de8:	ldr	x0, [sp, #96]
     dec:	cmp	x0, x21
     df0:	b.ls	1740 <grub_cryptodisk_endecrypt+0xa98>  // b.plast
     df4:	ldr	x0, [x26, #56]
     df8:	ldr	x0, [x0]
     dfc:	ldr	x25, [x0, #24]
     e00:	b	d10 <grub_cryptodisk_endecrypt+0x68>
     e04:	cmp	w0, #0x1
     e08:	b.ne	d98 <grub_cryptodisk_endecrypt+0xf0>  // b.any
     e0c:	str	w20, [sp, #136]
     e10:	ldr	w0, [x26, #104]
     e14:	cmp	w0, #0x2
     e18:	b.ne	da4 <grub_cryptodisk_endecrypt+0xfc>  // b.any
     e1c:	ldr	x25, [x26, #56]
     e20:	mov	w0, #0x1                   	// #1
     e24:	ldr	w3, [x26, #456]
     e28:	add	x27, x22, x21
     e2c:	ldr	x2, [x25]
     e30:	lsl	w0, w0, w3
     e34:	cbz	w23, 1504 <grub_cryptodisk_endecrypt+0x85c>
     e38:	ldr	x3, [x2, #56]
     e3c:	cbz	x3, 1758 <grub_cryptodisk_endecrypt+0xab0>
     e40:	ldr	x28, [x2, #24]
     e44:	sub	x2, x28, #0x1
     e48:	cmp	x2, #0xf
     e4c:	b.hi	1668 <grub_cryptodisk_endecrypt+0x9c0>  // b.pmore
     e50:	orr	x3, x28, x0
     e54:	tst	x3, x2
     e58:	b.ne	1668 <grub_cryptodisk_endecrypt+0x9c0>  // b.any
     e5c:	add	x1, x27, x0
     e60:	str	x1, [sp, #104]
     e64:	cmp	x1, x27
     e68:	b.ls	de0 <grub_cryptodisk_endecrypt+0x138>  // b.plast
     e6c:	add	x0, x25, #0x8
     e70:	mov	x2, x28
     e74:	mov	x1, x27
     e78:	str	x0, [sp, #112]
     e7c:	add	x0, sp, #0xa8
     e80:	bl	0 <grub_memmove>
     e84:	tst	x27, #0x7
     e88:	b.eq	100c <grub_cryptodisk_endecrypt+0x364>  // b.none
     e8c:	mov	x2, x28
     e90:	mov	x0, x27
     e94:	mov	x3, x19
     e98:	ldrb	w4, [x0]
     e9c:	subs	x2, x2, #0x1
     ea0:	ldrb	w5, [x3], #1
     ea4:	eor	w4, w4, w5
     ea8:	strb	w4, [x0], #1
     eac:	orr	x4, x3, x0
     eb0:	b.eq	f24 <grub_cryptodisk_endecrypt+0x27c>  // b.none
     eb4:	tst	x4, #0x7
     eb8:	b.ne	e98 <grub_cryptodisk_endecrypt+0x1f0>  // b.any
     ebc:	cmp	x2, #0x7
     ec0:	b.ls	f04 <grub_cryptodisk_endecrypt+0x25c>  // b.plast
     ec4:	mov	x4, #0x0                   	// #0
     ec8:	ldr	x5, [x0, x4]
     ecc:	ldr	x9, [x3, x4]
     ed0:	eor	x5, x5, x9
     ed4:	str	x5, [x0, x4]
     ed8:	add	x4, x4, #0x8
     edc:	sub	x5, x2, x4
     ee0:	cmp	x5, #0x7
     ee4:	b.hi	ec8 <grub_cryptodisk_endecrypt+0x220>  // b.pmore
     ee8:	sub	x4, x2, #0x8
     eec:	and	x2, x2, #0x7
     ef0:	and	x4, x4, #0xfffffffffffffff8
     ef4:	add	x4, x4, #0x8
     ef8:	add	x0, x0, x4
     efc:	add	x3, x3, x4
     f00:	cbz	x2, f24 <grub_cryptodisk_endecrypt+0x27c>
     f04:	mov	x4, #0x0                   	// #0
     f08:	ldrb	w5, [x0, x4]
     f0c:	ldrb	w9, [x3, x4]
     f10:	eor	w5, w5, w9
     f14:	strb	w5, [x0, x4]
     f18:	add	x4, x4, #0x1
     f1c:	cmp	x4, x2
     f20:	b.ne	f08 <grub_cryptodisk_endecrypt+0x260>  // b.any
     f24:	ldr	x3, [x25]
     f28:	mov	x2, x27
     f2c:	ldr	x0, [sp, #112]
     f30:	mov	x1, x27
     f34:	ldr	x3, [x3, #56]
     f38:	blr	x3
     f3c:	mov	x2, x28
     f40:	mov	x4, x27
     f44:	mov	x5, x19
     f48:	add	x3, sp, #0xa8
     f4c:	b	f68 <grub_cryptodisk_endecrypt+0x2c0>
     f50:	ldrb	w0, [x3], #1
     f54:	subs	x2, x2, #0x1
     f58:	ldrb	w9, [x4], #1
     f5c:	eor	w0, w0, w9
     f60:	strb	w0, [x5], #1
     f64:	b.eq	fe4 <grub_cryptodisk_endecrypt+0x33c>  // b.none
     f68:	orr	x0, x4, x3
     f6c:	orr	x0, x5, x0
     f70:	ands	x0, x0, #0x7
     f74:	b.ne	f50 <grub_cryptodisk_endecrypt+0x2a8>  // b.any
     f78:	cmp	x2, #0x7
     f7c:	b.ls	fc4 <grub_cryptodisk_endecrypt+0x31c>  // b.plast
     f80:	mov	x9, #0x0                   	// #0
     f84:	nop
     f88:	ldr	x10, [x3, x9]
     f8c:	ldr	x11, [x4, x9]
     f90:	eor	x10, x10, x11
     f94:	str	x10, [x5, x9]
     f98:	add	x9, x9, #0x8
     f9c:	sub	x10, x2, x9
     fa0:	cmp	x10, #0x7
     fa4:	b.hi	f88 <grub_cryptodisk_endecrypt+0x2e0>  // b.pmore
     fa8:	sub	x9, x2, #0x8
     fac:	and	x2, x2, #0x7
     fb0:	and	x9, x9, #0xfffffffffffffff8
     fb4:	add	x9, x9, #0x8
     fb8:	add	x3, x3, x9
     fbc:	add	x4, x4, x9
     fc0:	add	x5, x5, x9
     fc4:	cbz	x2, fe4 <grub_cryptodisk_endecrypt+0x33c>
     fc8:	ldrb	w9, [x3, x0]
     fcc:	ldrb	w10, [x4, x0]
     fd0:	eor	w9, w9, w10
     fd4:	strb	w9, [x5, x0]
     fd8:	add	x0, x0, #0x1
     fdc:	cmp	x0, x2
     fe0:	b.ne	fc8 <grub_cryptodisk_endecrypt+0x320>  // b.any
     fe4:	ldr	x0, [sp, #104]
     fe8:	add	x27, x27, x28
     fec:	cmp	x0, x27
     ff0:	b.ls	dd4 <grub_cryptodisk_endecrypt+0x12c>  // b.plast
     ff4:	mov	x2, x28
     ff8:	mov	x1, x27
     ffc:	add	x0, sp, #0xa8
    1000:	bl	0 <grub_memmove>
    1004:	tst	x27, #0x7
    1008:	b.ne	e8c <grub_cryptodisk_endecrypt+0x1e4>  // b.any
    100c:	mov	x0, x27
    1010:	mov	x2, x28
    1014:	mov	x3, x19
    1018:	cmp	x28, #0x7
    101c:	b.hi	ec4 <grub_cryptodisk_endecrypt+0x21c>  // b.pmore
    1020:	cbnz	x2, f04 <grub_cryptodisk_endecrypt+0x25c>
    1024:	b	f24 <grub_cryptodisk_endecrypt+0x27c>
    1028:	cmp	w0, #0x5
    102c:	b.eq	148c <grub_cryptodisk_endecrypt+0x7e4>  // b.none
    1030:	cmp	w0, #0x6
    1034:	b.ne	d98 <grub_cryptodisk_endecrypt+0xf0>  // b.any
    1038:	ldr	x0, [x26, #96]
    103c:	ldr	x0, [x0, #72]
    1040:	bl	0 <grub_zalloc>
    1044:	mov	x25, x0
    1048:	cbz	x0, 1728 <grub_cryptodisk_endecrypt+0xa80>
    104c:	ldr	x2, [x26, #96]
    1050:	ldr	w1, [x26, #456]
    1054:	ldr	x2, [x2, #40]
    1058:	lsl	x1, x20, x1
    105c:	str	x1, [sp, #168]
    1060:	blr	x2
    1064:	ldr	x3, [x26, #96]
    1068:	add	x1, x26, #0xf0
    106c:	ldr	x2, [x26, #304]
    1070:	mov	x0, x25
    1074:	ldr	x3, [x3, #48]
    1078:	blr	x3
    107c:	ldr	x3, [x26, #96]
    1080:	mov	x2, #0x8                   	// #8
    1084:	add	x1, sp, #0xa8
    1088:	mov	x0, x25
    108c:	ldr	x3, [x3, #48]
    1090:	blr	x3
    1094:	ldr	x1, [x26, #96]
    1098:	mov	x0, x25
    109c:	ldr	x1, [x1, #56]
    10a0:	blr	x1
    10a4:	ldr	x1, [x26, #96]
    10a8:	mov	x0, x25
    10ac:	ldr	x1, [x1, #64]
    10b0:	blr	x1
    10b4:	mov	x1, x0
    10b8:	mov	x2, #0x10                  	// #16
    10bc:	mov	x0, x19
    10c0:	bl	0 <grub_memmove>
    10c4:	mov	x0, x25
    10c8:	bl	0 <grub_free>
    10cc:	b	d98 <grub_cryptodisk_endecrypt+0xf0>
    10d0:	cmp	w0, #0x3
    10d4:	b.eq	1250 <grub_cryptodisk_endecrypt+0x5a8>  // b.none
    10d8:	cmp	w0, #0x4
    10dc:	b.ne	178c <grub_cryptodisk_endecrypt+0xae4>  // b.any
    10e0:	mov	x1, x19
    10e4:	mov	x2, #0x10                  	// #16
    10e8:	add	x0, sp, #0x98
    10ec:	bl	0 <grub_memmove>
    10f0:	ldr	w0, [x26, #456]
    10f4:	mov	w25, #0x1                   	// #1
    10f8:	ldrsb	w5, [sp, #167]
    10fc:	add	x27, x26, #0xd4
    1100:	sub	w0, w0, #0x4
    1104:	add	x2, sp, #0x98
    1108:	mov	x1, x27
    110c:	lsl	w0, w25, w0
    1110:	sub	w4, w0, #0x1
    1114:	neg	w3, w0
    1118:	add	x0, sp, #0xa8
    111c:	sxtb	w4, w4
    1120:	and	w3, w5, w3
    1124:	and	w5, w5, w4
    1128:	strb	w3, [sp, #167]
    112c:	bic	w3, w4, w5
    1130:	strb	w5, [sp, #200]
    1134:	add	w3, w3, w25
    1138:	strb	w3, [sp, #201]
    113c:	bl	850 <gf_mul_be>
    1140:	ldrb	w0, [sp, #200]
    1144:	cbz	w0, 11a4 <grub_cryptodisk_endecrypt+0x4fc>
    1148:	ldr	w0, [x26, #456]
    114c:	ldrb	w1, [sp, #167]
    1150:	sub	w0, w0, #0x4
    1154:	lsl	w0, w25, w0
    1158:	add	w0, w0, w1
    115c:	and	w3, w0, #0xffff
    1160:	tbz	w0, #8, 1190 <grub_cryptodisk_endecrypt+0x4e8>
    1164:	add	x2, sp, #0x98
    1168:	add	x1, sp, #0x89
    116c:	nop
    1170:	ldrb	w0, [x2, #14]
    1174:	sub	x2, x2, #0x1
    1178:	add	w0, w0, #0x1
    117c:	and	w0, w0, #0xff
    1180:	strb	w0, [x2, #15]
    1184:	cbnz	w0, 1190 <grub_cryptodisk_endecrypt+0x4e8>
    1188:	cmp	x1, x2
    118c:	b.ne	1170 <grub_cryptodisk_endecrypt+0x4c8>  // b.any
    1190:	ldr	x0, [sp, #120]
    1194:	add	x2, sp, #0x98
    1198:	mov	x1, x27
    119c:	strb	w3, [sp, #167]
    11a0:	bl	850 <gf_mul_be>
    11a4:	add	x25, x22, x21
    11a8:	add	x27, x26, #0xe8
    11ac:	add	x28, x26, #0x1c8
    11b0:	mov	x3, x25
    11b4:	mov	x1, x27
    11b8:	mov	x2, x28
    11bc:	add	x0, sp, #0xa8
    11c0:	bl	998 <lrw_xor.isra.0>
    11c4:	ldr	w3, [x26, #456]
    11c8:	mov	w4, #0x1                   	// #1
    11cc:	mov	x2, x25
    11d0:	mov	x1, x25
    11d4:	ldr	x0, [x26, #56]
    11d8:	lsl	w3, w4, w3
    11dc:	cbz	w23, 1658 <grub_cryptodisk_endecrypt+0x9b0>
    11e0:	bl	0 <grub_crypto_ecb_encrypt>
    11e4:	cbnz	w0, 1234 <grub_cryptodisk_endecrypt+0x58c>
    11e8:	mov	x1, x27
    11ec:	add	x0, sp, #0xa8
    11f0:	mov	x3, x25
    11f4:	mov	x2, x28
    11f8:	bl	998 <lrw_xor.isra.0>
    11fc:	ldr	w1, [x26, #456]
    1200:	mov	w0, #0x1                   	// #1
    1204:	lsl	w0, w0, w1
    1208:	b	de0 <grub_cryptodisk_endecrypt+0x138>
    120c:	ldr	x2, [x26, #464]
    1210:	cbnz	x2, cf0 <grub_cryptodisk_endecrypt+0x48>
    1214:	mov	x2, x1
    1218:	ldr	x3, [sp, #96]
    121c:	cbz	w4, 1714 <grub_cryptodisk_endecrypt+0xa6c>
    1220:	bl	0 <grub_crypto_ecb_encrypt>
    1224:	ldp	x19, x20, [sp, #16]
    1228:	ldp	x21, x22, [sp, #32]
    122c:	ldp	x23, x24, [sp, #48]
    1230:	b	1244 <grub_cryptodisk_endecrypt+0x59c>
    1234:	ldp	x19, x20, [sp, #16]
    1238:	ldp	x21, x22, [sp, #32]
    123c:	ldp	x23, x24, [sp, #48]
    1240:	ldp	x27, x28, [sp, #80]
    1244:	ldp	x25, x26, [sp, #64]
    1248:	ldp	x29, x30, [sp], #208
    124c:	ret
    1250:	ldp	x3, x0, [x26, #56]
    1254:	mov	x2, x19
    1258:	mov	x1, x19
    125c:	ldr	x3, [x3]
    1260:	ldr	x3, [x3, #24]
    1264:	bl	0 <grub_crypto_ecb_encrypt>
    1268:	mov	w28, w0
    126c:	cbnz	w0, 1778 <grub_cryptodisk_endecrypt+0xad0>
    1270:	ldr	w0, [x26, #456]
    1274:	mov	w25, #0x1                   	// #1
    1278:	lsl	w0, w25, w0
    127c:	cbz	w0, 1770 <grub_cryptodisk_endecrypt+0xac8>
    1280:	ldr	x0, [x26, #56]
    1284:	ldr	x1, [x0]
    1288:	ldr	x3, [x1, #24]
    128c:	nop
    1290:	add	x27, x21, w28, uxtw
    1294:	add	x27, x22, x27
    1298:	cbz	x3, 1348 <grub_cryptodisk_endecrypt+0x6a0>
    129c:	mov	x1, x27
    12a0:	mov	x2, x19
    12a4:	tst	x27, #0x7
    12a8:	b.eq	12d4 <grub_cryptodisk_endecrypt+0x62c>  // b.none
    12ac:	nop
    12b0:	ldrb	w4, [x1]
    12b4:	subs	x3, x3, #0x1
    12b8:	ldrb	w0, [x2], #1
    12bc:	eor	w4, w4, w0
    12c0:	strb	w4, [x1], #1
    12c4:	orr	x0, x2, x1
    12c8:	b.eq	133c <grub_cryptodisk_endecrypt+0x694>  // b.none
    12cc:	tst	x0, #0x7
    12d0:	b.ne	12b0 <grub_cryptodisk_endecrypt+0x608>  // b.any
    12d4:	cmp	x3, #0x7
    12d8:	b.ls	1318 <grub_cryptodisk_endecrypt+0x670>  // b.plast
    12dc:	sub	x4, x3, #0x8
    12e0:	mov	x0, #0x0                   	// #0
    12e4:	and	x4, x4, #0xfffffffffffffff8
    12e8:	add	x4, x4, #0x8
    12ec:	ldr	x5, [x1, x0]
    12f0:	ldr	x8, [x2, x0]
    12f4:	eor	x5, x5, x8
    12f8:	str	x5, [x1, x0]
    12fc:	add	x0, x0, #0x8
    1300:	cmp	x4, x0
    1304:	b.ne	12ec <grub_cryptodisk_endecrypt+0x644>  // b.any
    1308:	add	x1, x1, x4
    130c:	add	x2, x2, x4
    1310:	ands	x3, x3, #0x7
    1314:	b.eq	133c <grub_cryptodisk_endecrypt+0x694>  // b.none
    1318:	mov	x0, #0x0                   	// #0
    131c:	nop
    1320:	ldrb	w4, [x1, x0]
    1324:	ldrb	w5, [x2, x0]
    1328:	eor	w4, w4, w5
    132c:	strb	w4, [x1, x0]
    1330:	add	x0, x0, #0x1
    1334:	cmp	x3, x0
    1338:	b.ne	1320 <grub_cryptodisk_endecrypt+0x678>  // b.any
    133c:	ldr	x0, [x26, #56]
    1340:	ldr	x1, [x0]
    1344:	ldr	x3, [x1, #24]
    1348:	mov	x2, x27
    134c:	mov	x1, x27
    1350:	cbz	w23, 1460 <grub_cryptodisk_endecrypt+0x7b8>
    1354:	bl	0 <grub_crypto_ecb_encrypt>
    1358:	cbnz	w0, 1234 <grub_cryptodisk_endecrypt+0x58c>
    135c:	ldr	x0, [x26, #56]
    1360:	ldr	x1, [x0]
    1364:	ldr	x1, [x1, #24]
    1368:	cbz	x1, 1408 <grub_cryptodisk_endecrypt+0x760>
    136c:	mov	x2, x19
    1370:	tst	x27, #0x7
    1374:	b.eq	139c <grub_cryptodisk_endecrypt+0x6f4>  // b.none
    1378:	ldrb	w0, [x27]
    137c:	subs	x1, x1, #0x1
    1380:	ldrb	w3, [x2], #1
    1384:	eor	w0, w0, w3
    1388:	strb	w0, [x27], #1
    138c:	orr	x0, x2, x27
    1390:	b.eq	1404 <grub_cryptodisk_endecrypt+0x75c>  // b.none
    1394:	tst	x0, #0x7
    1398:	b.ne	1378 <grub_cryptodisk_endecrypt+0x6d0>  // b.any
    139c:	cmp	x1, #0x7
    13a0:	b.ls	13e0 <grub_cryptodisk_endecrypt+0x738>  // b.plast
    13a4:	sub	x3, x1, #0x8
    13a8:	mov	x0, #0x0                   	// #0
    13ac:	and	x3, x3, #0xfffffffffffffff8
    13b0:	add	x3, x3, #0x8
    13b4:	ldr	x4, [x27, x0]
    13b8:	ldr	x5, [x2, x0]
    13bc:	eor	x4, x4, x5
    13c0:	str	x4, [x27, x0]
    13c4:	add	x0, x0, #0x8
    13c8:	cmp	x3, x0
    13cc:	b.ne	13b4 <grub_cryptodisk_endecrypt+0x70c>  // b.any
    13d0:	add	x27, x27, x3
    13d4:	add	x2, x2, x3
    13d8:	ands	x1, x1, #0x7
    13dc:	b.eq	1404 <grub_cryptodisk_endecrypt+0x75c>  // b.none
    13e0:	mov	x0, #0x0                   	// #0
    13e4:	nop
    13e8:	ldrb	w3, [x27, x0]
    13ec:	ldrb	w4, [x2, x0]
    13f0:	eor	w3, w3, w4
    13f4:	strb	w3, [x27, x0]
    13f8:	add	x0, x0, #0x1
    13fc:	cmp	x1, x0
    1400:	b.ne	13e8 <grub_cryptodisk_endecrypt+0x740>  // b.any
    1404:	ldr	x0, [x26, #56]
    1408:	mov	x1, x19
    140c:	mov	w5, #0x0                   	// #0
    1410:	ldrb	w2, [x1]
    1414:	orr	w5, w5, w2, lsl #1
    1418:	strb	w5, [x1], #1
    141c:	sxtb	w3, w2
    1420:	lsr	w5, w2, #7
    1424:	cmp	x24, x1
    1428:	b.ne	1410 <grub_cryptodisk_endecrypt+0x768>  // b.any
    142c:	tbz	w3, #31, 143c <grub_cryptodisk_endecrypt+0x794>
    1430:	ldrb	w1, [sp, #136]
    1434:	eor	w1, w1, #0xffffff87
    1438:	strb	w1, [sp, #136]
    143c:	ldr	x2, [x0]
    1440:	ldr	w1, [x26, #456]
    1444:	ldr	x3, [x2, #24]
    1448:	lsl	w1, w25, w1
    144c:	add	w28, w28, w3
    1450:	cmp	w1, w28
    1454:	b.hi	1290 <grub_cryptodisk_endecrypt+0x5e8>  // b.pmore
    1458:	mov	w0, w1
    145c:	b	de0 <grub_cryptodisk_endecrypt+0x138>
    1460:	bl	0 <grub_crypto_ecb_decrypt>
    1464:	b	1358 <grub_cryptodisk_endecrypt+0x6b0>
    1468:	ldr	w3, [x26, #456]
    146c:	mov	w1, #0x1                   	// #1
    1470:	add	x2, x22, x21
    1474:	ldr	x0, [x26, #56]
    1478:	lsl	w3, w1, w3
    147c:	mov	x1, x2
    1480:	cbz	w23, 14fc <grub_cryptodisk_endecrypt+0x854>
    1484:	bl	0 <grub_crypto_ecb_encrypt>
    1488:	b	dd0 <grub_cryptodisk_endecrypt+0x128>
    148c:	ldr	w1, [x26, #456]
    1490:	mov	w0, #0x20                  	// #32
    1494:	sub	w0, w0, w1
    1498:	lsl	x1, x20, x1
    149c:	lsr	x0, x20, x0
    14a0:	stp	w1, w0, [sp, #136]
    14a4:	b	d98 <grub_cryptodisk_endecrypt+0xf0>
    14a8:	lsr	x0, x20, #32
    14ac:	str	w20, [sp, #136]
    14b0:	str	w0, [sp, #140]
    14b4:	b	e10 <grub_cryptodisk_endecrypt+0x168>
    14b8:	ldr	w0, [x26, #112]
    14bc:	add	x1, x25, #0x3
    14c0:	lsr	x1, x1, #2
    14c4:	sub	x3, x1, #0x2
    14c8:	lsl	x0, x20, x0
    14cc:	add	x0, x0, #0x1
    14d0:	sub	x1, x1, #0x1
    14d4:	rev	w2, w0
    14d8:	lsr	x0, x0, #32
    14dc:	rev	w0, w0
    14e0:	str	w0, [x19, x3, lsl #2]
    14e4:	str	w2, [x19, x1, lsl #2]
    14e8:	b	d98 <grub_cryptodisk_endecrypt+0xf0>
    14ec:	mov	w0, #0xa                   	// #10
    14f0:	ldp	x25, x26, [sp, #64]
    14f4:	ldp	x29, x30, [sp], #208
    14f8:	ret
    14fc:	bl	0 <grub_crypto_ecb_decrypt>
    1500:	b	dd0 <grub_cryptodisk_endecrypt+0x128>
    1504:	ldr	x3, [x2, #64]
    1508:	cbz	x3, 1758 <grub_cryptodisk_endecrypt+0xab0>
    150c:	ldr	x28, [x2, #24]
    1510:	cbz	x28, 1668 <grub_cryptodisk_endecrypt+0x9c0>
    1514:	sub	x2, x28, #0x1
    1518:	orr	x3, x28, x0
    151c:	tst	x2, x3
    1520:	b.ne	1668 <grub_cryptodisk_endecrypt+0x9c0>  // b.any
    1524:	cmp	x28, #0x10
    1528:	b.hi	1668 <grub_cryptodisk_endecrypt+0x9c0>  // b.pmore
    152c:	add	x5, x27, x0
    1530:	cmp	x5, x27
    1534:	b.ls	de0 <grub_cryptodisk_endecrypt+0x138>  // b.plast
    1538:	add	x0, x25, #0x8
    153c:	str	x0, [sp, #112]
    1540:	mov	x2, x28
    1544:	mov	x1, x27
    1548:	add	x0, sp, #0xa8
    154c:	str	x5, [sp, #104]
    1550:	bl	0 <grub_memmove>
    1554:	ldr	x3, [x25]
    1558:	mov	x2, x27
    155c:	ldr	x0, [sp, #112]
    1560:	mov	x1, x27
    1564:	ldr	x3, [x3, #64]
    1568:	blr	x3
    156c:	mov	x3, x28
    1570:	mov	x2, x27
    1574:	mov	x4, x19
    1578:	ldr	x5, [sp, #104]
    157c:	b	1598 <grub_cryptodisk_endecrypt+0x8f0>
    1580:	ldrb	w0, [x2]
    1584:	subs	x3, x3, #0x1
    1588:	ldrb	w8, [x4], #1
    158c:	eor	w0, w0, w8
    1590:	strb	w0, [x2], #1
    1594:	b.eq	160c <grub_cryptodisk_endecrypt+0x964>  // b.none
    1598:	orr	x0, x4, x2
    159c:	ands	x0, x0, #0x7
    15a0:	b.ne	1580 <grub_cryptodisk_endecrypt+0x8d8>  // b.any
    15a4:	cmp	x3, #0x7
    15a8:	b.ls	15f0 <grub_cryptodisk_endecrypt+0x948>  // b.plast
    15ac:	mov	x8, #0x0                   	// #0
    15b0:	ldr	x9, [x2, x8]
    15b4:	ldr	x10, [x4, x8]
    15b8:	eor	x9, x9, x10
    15bc:	str	x9, [x2, x8]
    15c0:	add	x8, x8, #0x8
    15c4:	sub	x9, x3, x8
    15c8:	cmp	x9, #0x7
    15cc:	b.hi	15b0 <grub_cryptodisk_endecrypt+0x908>  // b.pmore
    15d0:	sub	x8, x3, #0x8
    15d4:	ands	x3, x3, #0x7
    15d8:	and	x8, x8, #0xfffffffffffffff8
    15dc:	add	x8, x8, #0x8
    15e0:	add	x2, x2, x8
    15e4:	add	x4, x4, x8
    15e8:	b.eq	160c <grub_cryptodisk_endecrypt+0x964>  // b.none
    15ec:	nop
    15f0:	ldrb	w8, [x2, x0]
    15f4:	ldrb	w9, [x4, x0]
    15f8:	eor	w8, w8, w9
    15fc:	strb	w8, [x2, x0]
    1600:	add	x0, x0, #0x1
    1604:	cmp	x0, x3
    1608:	b.ne	15f0 <grub_cryptodisk_endecrypt+0x948>  // b.any
    160c:	mov	x2, x28
    1610:	mov	x4, x27
    1614:	mov	x3, x19
    1618:	add	x8, sp, #0xa8
    161c:	nop
    1620:	orr	x0, x4, x8
    1624:	orr	x0, x3, x0
    1628:	ands	x0, x0, #0x7
    162c:	b.eq	1688 <grub_cryptodisk_endecrypt+0x9e0>  // b.none
    1630:	ldrb	w0, [x8], #1
    1634:	subs	x2, x2, #0x1
    1638:	ldrb	w9, [x4], #1
    163c:	eor	w0, w0, w9
    1640:	strb	w0, [x3], #1
    1644:	b.ne	1620 <grub_cryptodisk_endecrypt+0x978>  // b.any
    1648:	add	x27, x27, x28
    164c:	cmp	x5, x27
    1650:	b.hi	1540 <grub_cryptodisk_endecrypt+0x898>  // b.pmore
    1654:	b	dd4 <grub_cryptodisk_endecrypt+0x12c>
    1658:	bl	0 <grub_crypto_ecb_decrypt>
    165c:	b	11e4 <grub_cryptodisk_endecrypt+0x53c>
    1660:	bl	0 <grub_crypto_cbc_decrypt>
    1664:	b	dd0 <grub_cryptodisk_endecrypt+0x128>
    1668:	mov	w0, #0xa                   	// #10
    166c:	ldp	x19, x20, [sp, #16]
    1670:	ldp	x21, x22, [sp, #32]
    1674:	ldp	x23, x24, [sp, #48]
    1678:	ldp	x25, x26, [sp, #64]
    167c:	ldp	x27, x28, [sp, #80]
    1680:	ldp	x29, x30, [sp], #208
    1684:	ret
    1688:	cmp	x2, #0x7
    168c:	b.ls	16d8 <grub_cryptodisk_endecrypt+0xa30>  // b.plast
    1690:	mov	x9, #0x0                   	// #0
    1694:	nop
    1698:	ldr	x10, [x8, x9]
    169c:	ldr	x11, [x4, x9]
    16a0:	eor	x10, x10, x11
    16a4:	str	x10, [x3, x9]
    16a8:	add	x9, x9, #0x8
    16ac:	sub	x10, x2, x9
    16b0:	cmp	x10, #0x7
    16b4:	b.hi	1698 <grub_cryptodisk_endecrypt+0x9f0>  // b.pmore
    16b8:	sub	x9, x2, #0x8
    16bc:	ands	x2, x2, #0x7
    16c0:	and	x9, x9, #0xfffffffffffffff8
    16c4:	add	x9, x9, #0x8
    16c8:	add	x8, x8, x9
    16cc:	add	x4, x4, x9
    16d0:	add	x3, x3, x9
    16d4:	b.eq	1648 <grub_cryptodisk_endecrypt+0x9a0>  // b.none
    16d8:	ldrb	w9, [x8, x0]
    16dc:	ldrb	w10, [x4, x0]
    16e0:	eor	w9, w9, w10
    16e4:	strb	w9, [x3, x0]
    16e8:	add	x0, x0, #0x1
    16ec:	cmp	x0, x2
    16f0:	b.eq	1648 <grub_cryptodisk_endecrypt+0x9a0>  // b.none
    16f4:	ldrb	w9, [x8, x0]
    16f8:	ldrb	w10, [x4, x0]
    16fc:	eor	w9, w9, w10
    1700:	strb	w9, [x3, x0]
    1704:	add	x0, x0, #0x1
    1708:	cmp	x0, x2
    170c:	b.ne	16d8 <grub_cryptodisk_endecrypt+0xa30>  // b.any
    1710:	b	1648 <grub_cryptodisk_endecrypt+0x9a0>
    1714:	bl	0 <grub_crypto_ecb_decrypt>
    1718:	ldp	x19, x20, [sp, #16]
    171c:	ldp	x21, x22, [sp, #32]
    1720:	ldp	x23, x24, [sp, #48]
    1724:	b	1244 <grub_cryptodisk_endecrypt+0x59c>
    1728:	mov	w0, #0x22                  	// #34
    172c:	ldp	x19, x20, [sp, #16]
    1730:	ldp	x21, x22, [sp, #32]
    1734:	ldp	x23, x24, [sp, #48]
    1738:	ldp	x27, x28, [sp, #80]
    173c:	b	1244 <grub_cryptodisk_endecrypt+0x59c>
    1740:	ldp	x27, x28, [sp, #80]
    1744:	mov	w0, #0x0                   	// #0
    1748:	ldp	x19, x20, [sp, #16]
    174c:	ldp	x21, x22, [sp, #32]
    1750:	ldp	x23, x24, [sp, #48]
    1754:	b	1244 <grub_cryptodisk_endecrypt+0x59c>
    1758:	mov	w0, #0x19                  	// #25
    175c:	ldp	x19, x20, [sp, #16]
    1760:	ldp	x21, x22, [sp, #32]
    1764:	ldp	x23, x24, [sp, #48]
    1768:	ldp	x27, x28, [sp, #80]
    176c:	b	1244 <grub_cryptodisk_endecrypt+0x59c>
    1770:	mov	x0, #0x0                   	// #0
    1774:	b	de0 <grub_cryptodisk_endecrypt+0x138>
    1778:	ldp	x19, x20, [sp, #16]
    177c:	ldp	x21, x22, [sp, #32]
    1780:	ldp	x23, x24, [sp, #48]
    1784:	ldp	x27, x28, [sp, #80]
    1788:	b	1244 <grub_cryptodisk_endecrypt+0x59c>
    178c:	mov	w0, #0x18                  	// #24
    1790:	ldp	x19, x20, [sp, #16]
    1794:	ldp	x21, x22, [sp, #32]
    1798:	ldp	x23, x24, [sp, #48]
    179c:	ldp	x27, x28, [sp, #80]
    17a0:	b	1244 <grub_cryptodisk_endecrypt+0x59c>
    17a4:	nop

00000000000017a8 <grub_cryptodisk_write>:
    17a8:	stp	x29, x30, [sp, #-64]!
    17ac:	mov	x29, sp
    17b0:	stp	x19, x20, [sp, #16]
    17b4:	mov	x19, x0
    17b8:	ldr	w0, [x0, #24]
    17bc:	stp	x21, x22, [sp, #32]
    17c0:	mov	x22, x2
    17c4:	mov	x21, x3
    17c8:	lsl	x0, x2, x0
    17cc:	stp	x23, x24, [sp, #48]
    17d0:	mov	x23, x1
    17d4:	ldr	x24, [x19, #64]
    17d8:	bl	0 <grub_malloc>
    17dc:	cbz	x0, 18a0 <grub_cryptodisk_write+0xf8>
    17e0:	ldr	w2, [x19, #24]
    17e4:	mov	x1, x21
    17e8:	mov	x20, x0
    17ec:	lsl	x2, x22, x2
    17f0:	bl	0 <grub_memmove>
    17f4:	adrp	x2, 0 <luks_script_get>
    17f8:	adrp	x1, 0 <luks_script_get>
    17fc:	adrp	x0, 0 <luks_script_get>
    1800:	mov	x5, x23
    1804:	ldr	x3, [x2]
    1808:	mov	x4, x22
    180c:	ldr	x2, [x1]
    1810:	mov	w1, #0x283                 	// #643
    1814:	ldr	x0, [x0]
    1818:	ldr	x6, [x24, #24]
    181c:	bl	0 <grub_real_dprintf>
    1820:	ldr	w2, [x19, #24]
    1824:	mov	x3, x23
    1828:	mov	x1, x20
    182c:	mov	x0, x24
    1830:	mov	w4, #0x1                   	// #1
    1834:	lsl	x2, x22, x2
    1838:	bl	ca8 <grub_cryptodisk_endecrypt>
    183c:	mov	w21, w0
    1840:	cbnz	w0, 18dc <grub_cryptodisk_write+0x134>
    1844:	adrp	x0, 0 <luks_script_get>
    1848:	ldr	x0, [x0]
    184c:	ldr	x5, [x0]
    1850:	cbz	x5, 18c4 <grub_cryptodisk_write+0x11c>
    1854:	ldr	w3, [x19, #24]
    1858:	mov	x4, x20
    185c:	ldr	x6, [x24, #24]
    1860:	sub	w1, w3, #0x9
    1864:	ldr	x0, [x24, #40]
    1868:	mov	x2, #0x0                   	// #0
    186c:	lsl	x3, x22, x3
    1870:	lsl	x1, x23, x1
    1874:	add	x1, x1, x6
    1878:	blr	x5
    187c:	mov	w19, w0
    1880:	mov	x0, x20
    1884:	bl	0 <grub_free>
    1888:	mov	w0, w19
    188c:	ldp	x19, x20, [sp, #16]
    1890:	ldp	x21, x22, [sp, #32]
    1894:	ldp	x23, x24, [sp, #48]
    1898:	ldp	x29, x30, [sp], #64
    189c:	ret
    18a0:	adrp	x0, 0 <luks_script_get>
    18a4:	ldp	x21, x22, [sp, #32]
    18a8:	ldr	x0, [x0]
    18ac:	ldp	x23, x24, [sp, #48]
    18b0:	ldr	w19, [x0]
    18b4:	mov	w0, w19
    18b8:	ldp	x19, x20, [sp, #16]
    18bc:	ldp	x29, x30, [sp], #64
    18c0:	ret
    18c4:	adrp	x1, 0 <luks_script_get>
    18c8:	mov	w0, #0x26                  	// #38
    18cc:	ldr	x1, [x1]
    18d0:	bl	0 <grub_error>
    18d4:	mov	w19, w0
    18d8:	b	1880 <grub_cryptodisk_write+0xd8>
    18dc:	mov	x0, x20
    18e0:	bl	0 <grub_free>
    18e4:	mov	w0, w21
    18e8:	ldp	x19, x20, [sp, #16]
    18ec:	ldp	x21, x22, [sp, #32]
    18f0:	ldp	x23, x24, [sp, #48]
    18f4:	ldp	x29, x30, [sp], #64
    18f8:	b	0 <grub_crypto_gcry_error>
    18fc:	nop
	...

0000000000001930 <grub_cryptodisk_read>:
    1930:	stp	x29, x30, [sp, #-80]!
    1934:	adrp	x5, 0 <luks_script_get>
    1938:	adrp	x4, 0 <luks_script_get>
    193c:	mov	x29, sp
    1940:	stp	x21, x22, [sp, #32]
    1944:	mov	x21, x0
    1948:	adrp	x0, 0 <luks_script_get>
    194c:	stp	x23, x24, [sp, #48]
    1950:	mov	x24, x3
    1954:	ldr	x23, [x21, #64]
    1958:	stp	x25, x26, [sp, #64]
    195c:	ldr	x3, [x5]
    1960:	mov	x5, x1
    1964:	ldr	x6, [x23, #24]
    1968:	stp	x19, x20, [sp, #16]
    196c:	mov	x20, x1
    1970:	ldr	x25, [x4]
    1974:	mov	x19, x2
    1978:	ldr	x26, [x0]
    197c:	mov	x4, x2
    1980:	mov	w1, #0x251                 	// #593
    1984:	mov	x2, x25
    1988:	mov	x0, x26
    198c:	bl	0 <grub_real_dprintf>
    1990:	ldr	w3, [x21, #24]
    1994:	mov	x4, x24
    1998:	ldr	x5, [x23, #24]
    199c:	sub	w1, w3, #0x9
    19a0:	ldr	x0, [x23, #40]
    19a4:	lsl	x1, x20, x1
    19a8:	mov	x2, #0x0                   	// #0
    19ac:	add	x1, x1, x5
    19b0:	lsl	x3, x19, x3
    19b4:	bl	0 <grub_disk_read>
    19b8:	cbnz	w0, 19f0 <grub_cryptodisk_read+0xc0>
    19bc:	ldr	w2, [x21, #24]
    19c0:	mov	x3, x20
    19c4:	mov	x1, x24
    19c8:	mov	x0, x23
    19cc:	mov	w4, #0x0                   	// #0
    19d0:	lsl	x2, x19, x2
    19d4:	bl	ca8 <grub_cryptodisk_endecrypt>
    19d8:	ldp	x19, x20, [sp, #16]
    19dc:	ldp	x21, x22, [sp, #32]
    19e0:	ldp	x23, x24, [sp, #48]
    19e4:	ldp	x25, x26, [sp, #64]
    19e8:	ldp	x29, x30, [sp], #80
    19ec:	b	0 <grub_crypto_gcry_error>
    19f0:	adrp	x1, 0 <luks_script_get>
    19f4:	mov	w22, w0
    19f8:	mov	x2, x25
    19fc:	mov	x0, x26
    1a00:	ldr	x3, [x1]
    1a04:	mov	w4, w22
    1a08:	mov	w1, #0x25c                 	// #604
    1a0c:	bl	0 <grub_real_dprintf>
    1a10:	mov	w0, w22
    1a14:	ldp	x19, x20, [sp, #16]
    1a18:	ldp	x21, x22, [sp, #32]
    1a1c:	ldp	x23, x24, [sp, #48]
    1a20:	ldp	x25, x26, [sp, #64]
    1a24:	ldp	x29, x30, [sp], #80
    1a28:	ret
    1a2c:	nop
	...

0000000000001a50 <grub_cryptodisk_decrypt>:
    1a50:	mov	w4, #0x0                   	// #0
    1a54:	b	ca8 <grub_cryptodisk_endecrypt>

0000000000001a58 <grub_cryptodisk_setkey>:
    1a58:	stp	x29, x30, [sp, #-144]!
    1a5c:	mov	x29, sp
    1a60:	stp	x19, x20, [sp, #16]
    1a64:	mov	x19, x0
    1a68:	mov	x20, x2
    1a6c:	stp	x21, x22, [sp, #32]
    1a70:	mov	x22, x1
    1a74:	ldr	w1, [x0, #104]
    1a78:	stp	x23, x24, [sp, #48]
    1a7c:	cmp	w1, #0x3
    1a80:	ldr	x0, [x0, #56]
    1a84:	b.eq	1b04 <grub_cryptodisk_setkey+0xac>  // b.none
    1a88:	cmp	w1, #0x4
    1a8c:	b.ne	1afc <grub_cryptodisk_setkey+0xa4>  // b.any
    1a90:	ldr	x1, [x0]
    1a94:	ldr	x2, [x1, #24]
    1a98:	sub	w2, w20, w2
    1a9c:	mov	w23, w2
    1aa0:	mov	x1, x22
    1aa4:	bl	0 <grub_crypto_cipher_set_key>
    1aa8:	mov	w21, w0
    1aac:	cbnz	w0, 1ae4 <grub_cryptodisk_setkey+0x8c>
    1ab0:	mov	x2, x20
    1ab4:	mov	x1, x22
    1ab8:	add	x0, x19, #0x138
    1abc:	bl	0 <grub_memmove>
    1ac0:	ldr	w0, [x19, #108]
    1ac4:	str	x20, [x19, #440]
    1ac8:	cmp	w0, #0x3
    1acc:	b.eq	1b14 <grub_cryptodisk_setkey+0xbc>  // b.none
    1ad0:	ldr	w0, [x19, #104]
    1ad4:	cmp	w0, #0x3
    1ad8:	b.eq	1b58 <grub_cryptodisk_setkey+0x100>  // b.none
    1adc:	cmp	w0, #0x4
    1ae0:	b.eq	1b74 <grub_cryptodisk_setkey+0x11c>  // b.none
    1ae4:	mov	w0, w21
    1ae8:	ldp	x19, x20, [sp, #16]
    1aec:	ldp	x21, x22, [sp, #32]
    1af0:	ldp	x23, x24, [sp, #48]
    1af4:	ldp	x29, x30, [sp], #144
    1af8:	ret
    1afc:	mov	w23, w2
    1b00:	b	1aa0 <grub_cryptodisk_setkey+0x48>
    1b04:	add	w23, w2, w2, lsr #31
    1b08:	asr	w23, w23, #1
    1b0c:	mov	w2, w23
    1b10:	b	1aa0 <grub_cryptodisk_setkey+0x48>
    1b14:	ldr	x0, [x19, #80]
    1b18:	ldr	x24, [x0, #32]
    1b1c:	cmp	x24, #0x40
    1b20:	b.hi	1b50 <grub_cryptodisk_setkey+0xf8>  // b.pmore
    1b24:	add	x1, sp, #0x50
    1b28:	mov	x2, x22
    1b2c:	mov	x3, x20
    1b30:	bl	0 <grub_crypto_hash>
    1b34:	ldr	x0, [x19, #72]
    1b38:	mov	w2, w24
    1b3c:	add	x1, sp, #0x50
    1b40:	bl	0 <grub_crypto_cipher_set_key>
    1b44:	cbz	w0, 1ad0 <grub_cryptodisk_setkey+0x78>
    1b48:	mov	w21, w0
    1b4c:	b	1ae4 <grub_cryptodisk_setkey+0x8c>
    1b50:	mov	w21, #0xa                   	// #10
    1b54:	b	1ae4 <grub_cryptodisk_setkey+0x8c>
    1b58:	ldr	x0, [x19, #64]
    1b5c:	ubfx	x2, x20, #1, #32
    1b60:	add	x1, x22, w23, sxtw
    1b64:	bl	0 <grub_crypto_cipher_set_key>
    1b68:	cbnz	w0, 1b48 <grub_cryptodisk_setkey+0xf0>
    1b6c:	ldr	w0, [x19, #104]
    1b70:	b	1adc <grub_cryptodisk_setkey+0x84>
    1b74:	ldr	x0, [x19, #232]
    1b78:	str	x25, [sp, #64]
    1b7c:	add	x24, x19, #0xd4
    1b80:	mov	w25, #0x1                   	// #1
    1b84:	bl	0 <grub_free>
    1b88:	ldr	x2, [x19, #56]
    1b8c:	add	x1, x22, w23, sxtw
    1b90:	mov	x0, x24
    1b94:	ldr	x2, [x2]
    1b98:	ldr	x2, [x2, #24]
    1b9c:	bl	0 <grub_memmove>
    1ba0:	ldr	w0, [x19, #456]
    1ba4:	lsl	w0, w25, w0
    1ba8:	bl	0 <grub_malloc>
    1bac:	str	x0, [x19, #232]
    1bb0:	cbz	x0, 1c10 <grub_cryptodisk_setkey+0x1b8>
    1bb4:	add	x0, sp, #0x50
    1bb8:	mov	x2, #0x10                  	// #16
    1bbc:	mov	w1, #0x0                   	// #0
    1bc0:	bl	0 <grub_memset>
    1bc4:	ldr	w0, [x19, #456]
    1bc8:	mov	w22, w25
    1bcc:	mov	w20, #0x0                   	// #0
    1bd0:	lsl	w25, w25, w0
    1bd4:	cbz	w25, 1c08 <grub_cryptodisk_setkey+0x1b0>
    1bd8:	ldr	x0, [x19, #232]
    1bdc:	lsr	w3, w20, #4
    1be0:	mov	x2, x24
    1be4:	add	x1, sp, #0x50
    1be8:	strb	w3, [sp, #95]
    1bec:	add	x0, x0, w20, uxtw
    1bf0:	bl	850 <gf_mul_be>
    1bf4:	ldr	w0, [x19, #456]
    1bf8:	add	w20, w20, #0x10
    1bfc:	lsl	w0, w22, w0
    1c00:	cmp	w0, w20
    1c04:	b.hi	1bd8 <grub_cryptodisk_setkey+0x180>  // b.pmore
    1c08:	ldr	x25, [sp, #64]
    1c0c:	b	1ae4 <grub_cryptodisk_setkey+0x8c>
    1c10:	mov	w21, #0x22                  	// #34
    1c14:	ldr	x25, [sp, #64]
    1c18:	b	1ae4 <grub_cryptodisk_setkey+0x8c>
    1c1c:	nop

0000000000001c20 <grub_cryptodisk_insert>:
    1c20:	stp	x29, x30, [sp, #-32]!
    1c24:	mov	x29, sp
    1c28:	stp	x19, x20, [sp, #16]
    1c2c:	mov	x19, x0
    1c30:	mov	x20, x2
    1c34:	mov	x0, x1
    1c38:	bl	0 <grub_strdup>
    1c3c:	str	x0, [x19, #16]
    1c40:	cbz	x0, 1ca8 <grub_cryptodisk_insert+0x88>
    1c44:	adrp	x0, 0 <luks_script_get>
    1c48:	ldr	x2, [x20, #8]
    1c4c:	ldr	x4, [x0]
    1c50:	ldp	x3, x1, [x20, #32]
    1c54:	ldrb	w0, [x4, #8]
    1c58:	ldr	w2, [x2, #8]
    1c5c:	add	w5, w0, #0x1
    1c60:	and	x0, x0, #0xff
    1c64:	strb	w5, [x4, #8]
    1c68:	stp	x0, x3, [x19, #120]
    1c6c:	str	w2, [x19, #136]
    1c70:	mov	x2, #0x0                   	// #0
    1c74:	cbz	x1, 1c88 <grub_cryptodisk_insert+0x68>
    1c78:	ldr	x3, [x1, #8]
    1c7c:	ldr	x1, [x1, #40]
    1c80:	add	x2, x2, x3
    1c84:	cbnz	x1, 1c78 <grub_cryptodisk_insert+0x58>
    1c88:	ldr	x1, [x4]
    1c8c:	mov	w0, #0x0                   	// #0
    1c90:	str	x19, [x4]
    1c94:	str	x1, [x19]
    1c98:	str	x2, [x19, #560]
    1c9c:	ldp	x19, x20, [sp, #16]
    1ca0:	ldp	x29, x30, [sp], #32
    1ca4:	ret
    1ca8:	mov	x0, x19
    1cac:	bl	0 <grub_free>
    1cb0:	adrp	x0, 0 <luks_script_get>
    1cb4:	ldr	x0, [x0]
    1cb8:	ldr	w0, [x0]
    1cbc:	b	1c9c <grub_cryptodisk_insert+0x7c>
	...

0000000000001cd0 <grub_cryptodisk_scan_device_real.part.0>:
    1cd0:	stp	x29, x30, [sp, #-80]!
    1cd4:	adrp	x2, 0 <luks_script_get>
    1cd8:	mov	x29, sp
    1cdc:	stp	x23, x24, [sp, #48]
    1ce0:	mov	x24, x0
    1ce4:	ldr	x0, [x2]
    1ce8:	stp	x21, x22, [sp, #32]
    1cec:	stp	x19, x20, [sp, #16]
    1cf0:	ldr	x22, [x0]
    1cf4:	cbz	x22, 1dc8 <grub_cryptodisk_scan_device_real.part.0+0xf8>
    1cf8:	mov	x21, x1
    1cfc:	adrp	x0, 0 <luks_script_get>
    1d00:	adrp	x1, 0 <luks_script_get>
    1d04:	str	x25, [sp, #64]
    1d08:	ldr	x25, [x0]
    1d0c:	ldr	x23, [x1]
    1d10:	mov	x0, x21
    1d14:	ldr	w2, [x23, #12]
    1d18:	ldr	x3, [x22, #16]
    1d1c:	ldr	x1, [x23, #16]
    1d20:	blr	x3
    1d24:	ldr	w20, [x25]
    1d28:	mov	x19, x0
    1d2c:	cbnz	w20, 1dd0 <grub_cryptodisk_scan_device_real.part.0+0x100>
    1d30:	cbz	x0, 1dbc <grub_cryptodisk_scan_device_real.part.0+0xec>
    1d34:	ldr	x2, [x22, #24]
    1d38:	mov	x1, x0
    1d3c:	mov	x0, x21
    1d40:	blr	x2
    1d44:	mov	w20, w0
    1d48:	cbnz	w0, 1d80 <grub_cryptodisk_scan_device_real.part.0+0xb0>
    1d4c:	mov	x2, x21
    1d50:	mov	x1, x24
    1d54:	mov	x0, x19
    1d58:	bl	1c20 <grub_cryptodisk_insert>
    1d5c:	mov	w0, #0x1                   	// #1
    1d60:	ldr	x25, [sp, #64]
    1d64:	str	w0, [x23, #24]
    1d68:	mov	w0, w20
    1d6c:	ldp	x19, x20, [sp, #16]
    1d70:	ldp	x21, x22, [sp, #32]
    1d74:	ldp	x23, x24, [sp, #48]
    1d78:	ldp	x29, x30, [sp], #80
    1d7c:	ret
    1d80:	ldr	x0, [x19, #56]
    1d84:	bl	0 <grub_free>
    1d88:	ldr	x0, [x19, #64]
    1d8c:	bl	0 <grub_free>
    1d90:	ldr	x0, [x19, #72]
    1d94:	bl	0 <grub_free>
    1d98:	mov	x0, x19
    1d9c:	bl	0 <grub_free>
    1da0:	mov	w0, w20
    1da4:	ldp	x19, x20, [sp, #16]
    1da8:	ldp	x21, x22, [sp, #32]
    1dac:	ldp	x23, x24, [sp, #48]
    1db0:	ldr	x25, [sp, #64]
    1db4:	ldp	x29, x30, [sp], #80
    1db8:	ret
    1dbc:	ldr	x22, [x22]
    1dc0:	cbnz	x22, 1d10 <grub_cryptodisk_scan_device_real.part.0+0x40>
    1dc4:	ldr	x25, [sp, #64]
    1dc8:	mov	w20, #0x0                   	// #0
    1dcc:	b	1d68 <grub_cryptodisk_scan_device_real.part.0+0x98>
    1dd0:	ldr	x25, [sp, #64]
    1dd4:	b	1d68 <grub_cryptodisk_scan_device_real.part.0+0x98>
	...

0000000000001df0 <grub_cryptodisk_get_by_uuid>:
    1df0:	adrp	x1, 0 <luks_script_get>
    1df4:	mov	x10, x0
    1df8:	ldr	x0, [x1]
    1dfc:	nop
    1e00:	ldr	x0, [x0]
    1e04:	cbz	x0, 1e74 <grub_cryptodisk_get_by_uuid+0x84>
    1e08:	ldrb	w2, [x0, #140]
    1e0c:	add	x7, x0, #0x8c
    1e10:	mov	x3, x10
    1e14:	cbnz	w2, 1e24 <grub_cryptodisk_get_by_uuid+0x34>
    1e18:	b	1e78 <grub_cryptodisk_get_by_uuid+0x88>
    1e1c:	ldrb	w2, [x7, #1]!
    1e20:	cbz	w2, 1e78 <grub_cryptodisk_get_by_uuid+0x88>
    1e24:	ldrb	w1, [x3]
    1e28:	sub	w8, w2, #0x41
    1e2c:	cmp	w8, #0x1a
    1e30:	add	w5, w2, #0x20
    1e34:	sub	w6, w1, #0x41
    1e38:	csel	w9, w5, w2, cc  // cc = lo, ul, last
    1e3c:	add	x3, x3, #0x1
    1e40:	add	w4, w1, #0x20
    1e44:	cmp	w6, #0x1a
    1e48:	cbz	w1, 1e00 <grub_cryptodisk_get_by_uuid+0x10>
    1e4c:	csel	w4, w4, w1, cc  // cc = lo, ul, last
    1e50:	cmp	w4, w9
    1e54:	b.eq	1e1c <grub_cryptodisk_get_by_uuid+0x2c>  // b.none
    1e58:	cmp	w8, #0x1a
    1e5c:	csel	w2, w5, w2, cc  // cc = lo, ul, last
    1e60:	cmp	w6, #0x1a
    1e64:	add	w3, w1, #0x20
    1e68:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    1e6c:	cmp	w2, w1
    1e70:	b.ne	1e00 <grub_cryptodisk_get_by_uuid+0x10>  // b.any
    1e74:	ret
    1e78:	ldrb	w1, [x3]
    1e7c:	mov	w2, #0x0                   	// #0
    1e80:	sub	w6, w1, #0x41
    1e84:	b	1e60 <grub_cryptodisk_get_by_uuid+0x70>
	...

0000000000001e90 <grub_cryptodisk_get_by_source_disk>:
    1e90:	adrp	x1, 0 <luks_script_get>
    1e94:	mov	x5, x0
    1e98:	ldr	x0, [x1]
    1e9c:	ldr	x0, [x0]
    1ea0:	cbz	x0, 1ee4 <grub_cryptodisk_get_by_source_disk+0x54>
    1ea4:	ldr	x2, [x5, #32]
    1ea8:	b	1eb4 <grub_cryptodisk_get_by_source_disk+0x24>
    1eac:	ldr	x0, [x0]
    1eb0:	cbz	x0, 1ee4 <grub_cryptodisk_get_by_source_disk+0x54>
    1eb4:	ldr	x1, [x0, #128]
    1eb8:	cmp	x1, x2
    1ebc:	b.ne	1eac <grub_cryptodisk_get_by_source_disk+0x1c>  // b.any
    1ec0:	ldr	x1, [x5, #8]
    1ec4:	ldr	w3, [x0, #136]
    1ec8:	ldr	w1, [x1, #8]
    1ecc:	cmp	w3, w1
    1ed0:	b.ne	1eac <grub_cryptodisk_get_by_source_disk+0x1c>  // b.any
    1ed4:	ldr	x1, [x5, #40]
    1ed8:	ldr	x6, [x0, #560]
    1edc:	cbnz	x1, 1ee8 <grub_cryptodisk_get_by_source_disk+0x58>
    1ee0:	cbnz	x6, 1eac <grub_cryptodisk_get_by_source_disk+0x1c>
    1ee4:	ret
    1ee8:	mov	x3, #0x0                   	// #0
    1eec:	nop
    1ef0:	ldr	x4, [x1, #8]
    1ef4:	ldr	x1, [x1, #40]
    1ef8:	add	x3, x3, x4
    1efc:	cbnz	x1, 1ef0 <grub_cryptodisk_get_by_source_disk+0x60>
    1f00:	cmp	x6, x3
    1f04:	b.ne	1eac <grub_cryptodisk_get_by_source_disk+0x1c>  // b.any
    1f08:	ret
    1f0c:	nop
	...

0000000000001f18 <grub_cmd_cryptomount>:
    1f18:	stp	x29, x30, [sp, #-64]!
    1f1c:	cmp	w1, #0x0
    1f20:	mov	x29, sp
    1f24:	stp	x19, x20, [sp, #16]
    1f28:	ldr	x11, [x0, #8]
    1f2c:	b.le	20f0 <grub_cmd_cryptomount+0x1d8>
    1f30:	adrp	x0, 0 <luks_script_get>
    1f34:	ldr	w1, [x11]
    1f38:	ldr	x19, [x0]
    1f3c:	str	wzr, [x19, #24]
    1f40:	cbnz	w1, 1fe4 <grub_cmd_cryptomount+0xcc>
    1f44:	ldr	w0, [x11, #16]
    1f48:	ldr	w3, [x11, #32]
    1f4c:	cbnz	w0, 2118 <grub_cmd_cryptomount+0x200>
    1f50:	stp	x21, x22, [sp, #32]
    1f54:	ldr	x21, [x2]
    1f58:	str	w3, [x19, #12]
    1f5c:	str	xzr, [x19, #16]
    1f60:	mov	x0, x21
    1f64:	bl	0 <grub_strlen>
    1f68:	cbz	x0, 1f88 <grub_cmd_cryptomount+0x70>
    1f6c:	ldrb	w1, [x21]
    1f70:	cmp	w1, #0x28
    1f74:	b.ne	1f88 <grub_cmd_cryptomount+0x70>  // b.any
    1f78:	sub	x19, x0, #0x1
    1f7c:	ldrb	w22, [x21, x19]
    1f80:	cmp	w22, #0x29
    1f84:	b.eq	2184 <grub_cmd_cryptomount+0x26c>  // b.none
    1f88:	mov	x0, x21
    1f8c:	bl	0 <grub_disk_open>
    1f90:	mov	x19, x0
    1f94:	cbz	x0, 2158 <grub_cmd_cryptomount+0x240>
    1f98:	bl	1e90 <grub_cryptodisk_get_by_source_disk>
    1f9c:	mov	x4, x0
    1fa0:	cbnz	x0, 21f8 <grub_cmd_cryptomount+0x2e0>
    1fa4:	mov	x1, x19
    1fa8:	mov	x0, x21
    1fac:	bl	1cd0 <grub_cryptodisk_scan_device_real.part.0>
    1fb0:	mov	w20, w0
    1fb4:	mov	x0, x19
    1fb8:	bl	0 <grub_disk_close>
    1fbc:	ldp	x21, x22, [sp, #32]
    1fc0:	mov	w0, w20
    1fc4:	ldp	x19, x20, [sp, #16]
    1fc8:	ldp	x29, x30, [sp], #64
    1fcc:	ret
    1fd0:	adrp	x0, 0 <luks_script_get>
    1fd4:	ldr	w1, [x11]
    1fd8:	ldr	x19, [x0]
    1fdc:	str	wzr, [x19, #24]
    1fe0:	cbz	w1, 2148 <grub_cmd_cryptomount+0x230>
    1fe4:	ldr	x4, [x19]
    1fe8:	ldr	x10, [x2]
    1fec:	cbz	x4, 2048 <grub_cmd_cryptomount+0x130>
    1ff0:	ldrb	w1, [x4, #140]
    1ff4:	add	x7, x4, #0x8c
    1ff8:	mov	x2, x10
    1ffc:	cbnz	w1, 2018 <grub_cmd_cryptomount+0x100>
    2000:	b	208c <grub_cmd_cryptomount+0x174>
    2004:	csel	w3, w3, w0, cc  // cc = lo, ul, last
    2008:	cmp	w3, w9
    200c:	b.ne	20e4 <grub_cmd_cryptomount+0x1cc>  // b.any
    2010:	ldrb	w1, [x7, #1]!
    2014:	cbz	w1, 208c <grub_cmd_cryptomount+0x174>
    2018:	ldrb	w0, [x2]
    201c:	sub	w8, w1, #0x41
    2020:	cmp	w8, #0x1a
    2024:	add	w5, w1, #0x20
    2028:	sub	w6, w0, #0x41
    202c:	csel	w9, w5, w1, cc  // cc = lo, ul, last
    2030:	add	x2, x2, #0x1
    2034:	add	w3, w0, #0x20
    2038:	cmp	w6, #0x1a
    203c:	cbnz	w0, 2004 <grub_cmd_cryptomount+0xec>
    2040:	ldr	x4, [x4]
    2044:	cbnz	x4, 1ff0 <grub_cmd_cryptomount+0xd8>
    2048:	adrp	x0, 0 <luks_script_get>
    204c:	ldr	w2, [x11, #32]
    2050:	mov	x1, #0x0                   	// #0
    2054:	str	w2, [x19, #12]
    2058:	ldr	x0, [x0]
    205c:	str	x10, [x19, #16]
    2060:	mov	w20, #0x0                   	// #0
    2064:	bl	0 <grub_device_iterate>
    2068:	str	xzr, [x19, #16]
    206c:	ldr	w0, [x19, #24]
    2070:	cbnz	w0, 1fc0 <grub_cmd_cryptomount+0xa8>
    2074:	adrp	x1, 0 <luks_script_get>
    2078:	mov	w0, #0x12                  	// #18
    207c:	ldp	x19, x20, [sp, #16]
    2080:	ldp	x29, x30, [sp], #64
    2084:	ldr	x1, [x1]
    2088:	b	0 <grub_error>
    208c:	ldrb	w0, [x2]
    2090:	mov	w1, #0x0                   	// #0
    2094:	sub	w6, w0, #0x41
    2098:	cmp	w6, #0x1a
    209c:	add	w2, w0, #0x20
    20a0:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    20a4:	cmp	w1, w0
    20a8:	b.ne	2040 <grub_cmd_cryptomount+0x128>  // b.any
    20ac:	adrp	x3, 0 <luks_script_get>
    20b0:	adrp	x2, 0 <luks_script_get>
    20b4:	adrp	x0, 0 <luks_script_get>
    20b8:	mov	w1, #0x3b1                 	// #945
    20bc:	ldr	x3, [x3]
    20c0:	mov	w20, #0x0                   	// #0
    20c4:	ldr	x2, [x2]
    20c8:	ldr	x0, [x0]
    20cc:	ldr	x4, [x4, #120]
    20d0:	bl	0 <grub_real_dprintf>
    20d4:	mov	w0, w20
    20d8:	ldp	x19, x20, [sp, #16]
    20dc:	ldp	x29, x30, [sp], #64
    20e0:	ret
    20e4:	cmp	w8, #0x1a
    20e8:	csel	w1, w5, w1, cc  // cc = lo, ul, last
    20ec:	b	2098 <grub_cmd_cryptomount+0x180>
    20f0:	ldr	w0, [x11, #16]
    20f4:	cbnz	w0, 1fd0 <grub_cmd_cryptomount+0xb8>
    20f8:	ldr	w3, [x11, #32]
    20fc:	cbz	w3, 216c <grub_cmd_cryptomount+0x254>
    2100:	adrp	x0, 0 <luks_script_get>
    2104:	ldr	w4, [x11]
    2108:	ldr	x19, [x0]
    210c:	str	wzr, [x19, #24]
    2110:	cbnz	w4, 1fe4 <grub_cmd_cryptomount+0xcc>
    2114:	cbnz	w1, 1f50 <grub_cmd_cryptomount+0x38>
    2118:	adrp	x0, 0 <luks_script_get>
    211c:	mov	x1, #0x0                   	// #0
    2120:	str	w3, [x19, #12]
    2124:	mov	w20, #0x0                   	// #0
    2128:	ldr	x0, [x0]
    212c:	str	xzr, [x19, #16]
    2130:	bl	0 <grub_device_iterate>
    2134:	str	xzr, [x19, #16]
    2138:	mov	w0, w20
    213c:	ldp	x19, x20, [sp, #16]
    2140:	ldp	x29, x30, [sp], #64
    2144:	ret
    2148:	ldr	w3, [x11, #32]
    214c:	b	2118 <grub_cmd_cryptomount+0x200>
    2150:	strb	w22, [x21, x19]
    2154:	ldr	x23, [sp, #48]
    2158:	adrp	x0, 0 <luks_script_get>
    215c:	ldp	x21, x22, [sp, #32]
    2160:	ldr	x0, [x0]
    2164:	ldr	w20, [x0]
    2168:	b	1fc0 <grub_cmd_cryptomount+0xa8>
    216c:	adrp	x1, 0 <luks_script_get>
    2170:	mov	w0, #0x12                  	// #18
    2174:	ldp	x19, x20, [sp, #16]
    2178:	ldp	x29, x30, [sp], #64
    217c:	ldr	x1, [x1]
    2180:	b	0 <grub_error>
    2184:	str	x23, [sp, #48]
    2188:	add	x20, x21, #0x1
    218c:	strb	wzr, [x21, x19]
    2190:	mov	x0, x20
    2194:	bl	0 <grub_disk_open>
    2198:	mov	x23, x0
    219c:	cbz	x0, 2150 <grub_cmd_cryptomount+0x238>
    21a0:	bl	1e90 <grub_cryptodisk_get_by_source_disk>
    21a4:	mov	x4, x0
    21a8:	cbz	x0, 2230 <grub_cmd_cryptomount+0x318>
    21ac:	adrp	x3, 0 <luks_script_get>
    21b0:	adrp	x2, 0 <luks_script_get>
    21b4:	adrp	x0, 0 <luks_script_get>
    21b8:	mov	w1, #0x3e6                 	// #998
    21bc:	ldr	x3, [x3]
    21c0:	mov	w20, #0x0                   	// #0
    21c4:	ldr	x2, [x2]
    21c8:	ldr	x0, [x0]
    21cc:	ldr	x4, [x4, #120]
    21d0:	bl	0 <grub_real_dprintf>
    21d4:	mov	x0, x23
    21d8:	bl	0 <grub_disk_close>
    21dc:	strb	w22, [x21, x19]
    21e0:	mov	w0, w20
    21e4:	ldp	x19, x20, [sp, #16]
    21e8:	ldp	x21, x22, [sp, #32]
    21ec:	ldr	x23, [sp, #48]
    21f0:	ldp	x29, x30, [sp], #64
    21f4:	ret
    21f8:	adrp	x3, 0 <luks_script_get>
    21fc:	adrp	x2, 0 <luks_script_get>
    2200:	adrp	x0, 0 <luks_script_get>
    2204:	mov	w1, #0x3e6                 	// #998
    2208:	ldr	x3, [x3]
    220c:	mov	w20, #0x0                   	// #0
    2210:	ldr	x2, [x2]
    2214:	ldr	x0, [x0]
    2218:	ldr	x4, [x4, #120]
    221c:	bl	0 <grub_real_dprintf>
    2220:	mov	x0, x19
    2224:	bl	0 <grub_disk_close>
    2228:	ldp	x21, x22, [sp, #32]
    222c:	b	1fc0 <grub_cmd_cryptomount+0xa8>
    2230:	mov	x0, x20
    2234:	mov	x1, x23
    2238:	bl	1cd0 <grub_cryptodisk_scan_device_real.part.0>
    223c:	mov	w20, w0
    2240:	b	21d4 <grub_cmd_cryptomount+0x2bc>
    2244:	nop
	...

0000000000002288 <grub_cryptodisk_scan_device>:
    2288:	stp	x29, x30, [sp, #-32]!
    228c:	mov	x29, sp
    2290:	stp	x19, x20, [sp, #16]
    2294:	mov	x20, x0
    2298:	bl	0 <grub_disk_open>
    229c:	cbz	x0, 2300 <grub_cryptodisk_scan_device+0x78>
    22a0:	mov	x19, x0
    22a4:	bl	1e90 <grub_cryptodisk_get_by_source_disk>
    22a8:	cbz	x0, 22dc <grub_cryptodisk_scan_device+0x54>
    22ac:	mov	x0, x19
    22b0:	bl	0 <grub_disk_close>
    22b4:	adrp	x0, 0 <luks_script_get>
    22b8:	ldr	x1, [x0]
    22bc:	ldr	w0, [x1, #24]
    22c0:	cbz	w0, 22d0 <grub_cryptodisk_scan_device+0x48>
    22c4:	ldr	x0, [x1, #16]
    22c8:	cmp	x0, #0x0
    22cc:	cset	w0, ne  // ne = any
    22d0:	ldp	x19, x20, [sp, #16]
    22d4:	ldp	x29, x30, [sp], #32
    22d8:	ret
    22dc:	mov	x1, x19
    22e0:	mov	x0, x20
    22e4:	bl	1cd0 <grub_cryptodisk_scan_device_real.part.0>
    22e8:	mov	w20, w0
    22ec:	mov	x0, x19
    22f0:	bl	0 <grub_disk_close>
    22f4:	cbz	w20, 22b4 <grub_cryptodisk_scan_device+0x2c>
    22f8:	bl	0 <grub_print_error>
    22fc:	b	22b4 <grub_cryptodisk_scan_device+0x2c>
    2300:	bl	0 <grub_print_error>
    2304:	mov	w0, #0x0                   	// #0
    2308:	ldp	x19, x20, [sp, #16]
    230c:	ldp	x29, x30, [sp], #32
    2310:	ret
    2314:	nop
	...

0000000000002320 <grub_mod_init>:
    2320:	stp	x29, x30, [sp, #-32]!
    2324:	adrp	x0, 0 <luks_script_get>
    2328:	mov	x29, sp
    232c:	str	x19, [sp, #16]
    2330:	ldr	x19, [x0]
    2334:	mov	x0, x19
    2338:	bl	0 <grub_disk_dev_register>
    233c:	adrp	x5, 0 <luks_script_get>
    2340:	adrp	x4, 0 <luks_script_get>
    2344:	adrp	x3, 0 <luks_script_get>
    2348:	adrp	x1, 0 <luks_script_get>
    234c:	adrp	x0, 0 <luks_script_get>
    2350:	mov	w2, #0x0                   	// #0
    2354:	ldr	x5, [x5]
    2358:	ldr	x4, [x4]
    235c:	ldr	x3, [x3]
    2360:	ldr	x1, [x1]
    2364:	ldr	x0, [x0]
    2368:	bl	0 <grub_register_extcmd>
    236c:	add	x1, x19, #0x40
    2370:	adrp	x0, 0 <luks_script_get>
    2374:	ldr	x19, [sp, #16]
    2378:	ldp	x29, x30, [sp], #32
    237c:	ldr	x0, [x0]
    2380:	b	0 <grub_list_push>
    2384:	nop
	...

00000000000023c0 <grub_mod_fini>:
    23c0:	stp	x29, x30, [sp, #-32]!
    23c4:	adrp	x0, 0 <luks_script_get>
    23c8:	mov	x29, sp
    23cc:	str	x19, [sp, #16]
    23d0:	ldr	x19, [x0]
    23d4:	mov	x0, x19
    23d8:	bl	0 <grub_disk_dev_unregister>
    23dc:	add	x0, x19, #0x40
    23e0:	ldr	x19, [sp, #16]
    23e4:	ldp	x29, x30, [sp], #32
    23e8:	b	0 <grub_list_remove>
    23ec:	nop
	...
