
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lsprof.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000015a0 <.init>:
    15a0:	stp	x29, x30, [sp, #-16]!
    15a4:	mov	x29, sp
    15a8:	bl	1830 <PyErr_WriteUnraisable@plt+0x10>
    15ac:	ldp	x29, x30, [sp], #16
    15b0:	ret

Disassembly of section .plt:

00000000000015c0 <RotatingTree_Add@plt-0x20>:
    15c0:	stp	x16, x30, [sp, #-16]!
    15c4:	adrp	x16, 13000 <RotatingTree_Enum@@Base+0x107f8>
    15c8:	ldr	x17, [x16, #4088]
    15cc:	add	x16, x16, #0xff8
    15d0:	br	x17
    15d4:	nop
    15d8:	nop
    15dc:	nop

00000000000015e0 <RotatingTree_Add@plt>:
    15e0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    15e4:	ldr	x17, [x16]
    15e8:	add	x16, x16, #0x0
    15ec:	br	x17

00000000000015f0 <PyUnicode_FromFormat@plt>:
    15f0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    15f4:	ldr	x17, [x16, #8]
    15f8:	add	x16, x16, #0x8
    15fc:	br	x17

0000000000001600 <PyList_New@plt>:
    1600:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1604:	ldr	x17, [x16, #16]
    1608:	add	x16, x16, #0x10
    160c:	br	x17

0000000000001610 <PyDict_SetItemString@plt>:
    1610:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1614:	ldr	x17, [x16, #24]
    1618:	add	x16, x16, #0x18
    161c:	br	x17

0000000000001620 <PyArg_ParseTupleAndKeywords@plt>:
    1620:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1624:	ldr	x17, [x16, #32]
    1628:	add	x16, x16, #0x20
    162c:	br	x17

0000000000001630 <PyErr_Restore@plt>:
    1630:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1634:	ldr	x17, [x16, #40]
    1638:	add	x16, x16, #0x28
    163c:	br	x17

0000000000001640 <PyMem_Free@plt>:
    1640:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1644:	ldr	x17, [x16, #48]
    1648:	add	x16, x16, #0x30
    164c:	br	x17

0000000000001650 <__cxa_finalize@plt>:
    1650:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1654:	ldr	x17, [x16, #56]
    1658:	add	x16, x16, #0x38
    165c:	br	x17

0000000000001660 <_Py_Dealloc@plt>:
    1660:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1664:	ldr	x17, [x16, #64]
    1668:	add	x16, x16, #0x40
    166c:	br	x17

0000000000001670 <PyErr_SetString@plt>:
    1670:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1674:	ldr	x17, [x16, #72]
    1678:	add	x16, x16, #0x48
    167c:	br	x17

0000000000001680 <PyModule_GetNameObject@plt>:
    1680:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1684:	ldr	x17, [x16, #80]
    1688:	add	x16, x16, #0x50
    168c:	br	x17

0000000000001690 <_PyTime_FromSecondsObject@plt>:
    1690:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1694:	ldr	x17, [x16, #88]
    1698:	add	x16, x16, #0x58
    169c:	br	x17

00000000000016a0 <PyType_Ready@plt>:
    16a0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    16a4:	ldr	x17, [x16, #96]
    16a8:	add	x16, x16, #0x60
    16ac:	br	x17

00000000000016b0 <PyErr_Clear@plt>:
    16b0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    16b4:	ldr	x17, [x16, #104]
    16b8:	add	x16, x16, #0x68
    16bc:	br	x17

00000000000016c0 <PyList_Append@plt>:
    16c0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    16c4:	ldr	x17, [x16, #112]
    16c8:	add	x16, x16, #0x70
    16cc:	br	x17

00000000000016d0 <__gmon_start__@plt>:
    16d0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    16d4:	ldr	x17, [x16, #120]
    16d8:	add	x16, x16, #0x78
    16dc:	br	x17

00000000000016e0 <PyObject_CallFunction@plt>:
    16e0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    16e4:	ldr	x17, [x16, #128]
    16e8:	add	x16, x16, #0x80
    16ec:	br	x17

00000000000016f0 <PyStructSequence_InitType2@plt>:
    16f0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    16f4:	ldr	x17, [x16, #136]
    16f8:	add	x16, x16, #0x88
    16fc:	br	x17

0000000000001700 <PyModule_Create2@plt>:
    1700:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1704:	ldr	x17, [x16, #144]
    1708:	add	x16, x16, #0x90
    170c:	br	x17

0000000000001710 <_PyUnicode_EqualToASCIIString@plt>:
    1710:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1714:	ldr	x17, [x16, #152]
    1718:	add	x16, x16, #0x98
    171c:	br	x17

0000000000001720 <RotatingTree_Enum@plt>:
    1720:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1724:	ldr	x17, [x16, #160]
    1728:	add	x16, x16, #0xa0
    172c:	br	x17

0000000000001730 <_Py_CheckFunctionResult@plt>:
    1730:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1734:	ldr	x17, [x16, #168]
    1738:	add	x16, x16, #0xa8
    173c:	br	x17

0000000000001740 <_PyType_Lookup@plt>:
    1740:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1744:	ldr	x17, [x16, #176]
    1748:	add	x16, x16, #0xb0
    174c:	br	x17

0000000000001750 <RotatingTree_Get@plt>:
    1750:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1754:	ldr	x17, [x16, #184]
    1758:	add	x16, x16, #0xb8
    175c:	br	x17

0000000000001760 <PyErr_Fetch@plt>:
    1760:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1764:	ldr	x17, [x16, #192]
    1768:	add	x16, x16, #0xc0
    176c:	br	x17

0000000000001770 <PyUnicode_FromString@plt>:
    1770:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1774:	ldr	x17, [x16, #200]
    1778:	add	x16, x16, #0xc8
    177c:	br	x17

0000000000001780 <PyModule_AddObject@plt>:
    1780:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1784:	ldr	x17, [x16, #208]
    1788:	add	x16, x16, #0xd0
    178c:	br	x17

0000000000001790 <PyObject_Repr@plt>:
    1790:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1794:	ldr	x17, [x16, #216]
    1798:	add	x16, x16, #0xd8
    179c:	br	x17

00000000000017a0 <PyEval_SetProfile@plt>:
    17a0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    17a4:	ldr	x17, [x16, #224]
    17a8:	add	x16, x16, #0xe0
    17ac:	br	x17

00000000000017b0 <_PyTime_FromSeconds@plt>:
    17b0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    17b4:	ldr	x17, [x16, #232]
    17b8:	add	x16, x16, #0xe8
    17bc:	br	x17

00000000000017c0 <PyType_IsSubtype@plt>:
    17c0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    17c4:	ldr	x17, [x16, #240]
    17c8:	add	x16, x16, #0xf0
    17cc:	br	x17

00000000000017d0 <_PyTime_FromNanosecondsObject@plt>:
    17d0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    17d4:	ldr	x17, [x16, #248]
    17d8:	add	x16, x16, #0xf8
    17dc:	br	x17

00000000000017e0 <PyModule_GetDict@plt>:
    17e0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    17e4:	ldr	x17, [x16, #256]
    17e8:	add	x16, x16, #0x100
    17ec:	br	x17

00000000000017f0 <_PyObject_MakeTpCall@plt>:
    17f0:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    17f4:	ldr	x17, [x16, #264]
    17f8:	add	x16, x16, #0x108
    17fc:	br	x17

0000000000001800 <_PyTime_GetPerfCounter@plt>:
    1800:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1804:	ldr	x17, [x16, #272]
    1808:	add	x16, x16, #0x110
    180c:	br	x17

0000000000001810 <PyMem_Malloc@plt>:
    1810:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1814:	ldr	x17, [x16, #280]
    1818:	add	x16, x16, #0x118
    181c:	br	x17

0000000000001820 <PyErr_WriteUnraisable@plt>:
    1820:	adrp	x16, 14000 <RotatingTree_Add@@Base+0x1194c>
    1824:	ldr	x17, [x16, #288]
    1828:	add	x16, x16, #0x120
    182c:	br	x17

Disassembly of section .text:

0000000000001830 <PyInit__lsprof@@Base-0xd4>:
    1830:	adrp	x0, 13000 <RotatingTree_Enum@@Base+0x107f8>
    1834:	ldr	x0, [x0, #4040]
    1838:	cbz	x0, 1840 <PyErr_WriteUnraisable@plt+0x20>
    183c:	b	16d0 <__gmon_start__@plt>
    1840:	ret
    1844:	nop
    1848:	adrp	x0, 14000 <RotatingTree_Enum@@Base+0x117f8>
    184c:	add	x0, x0, #0x530
    1850:	adrp	x1, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1854:	add	x1, x1, #0x530
    1858:	cmp	x1, x0
    185c:	b.eq	1874 <PyErr_WriteUnraisable@plt+0x54>  // b.none
    1860:	adrp	x1, 13000 <RotatingTree_Enum@@Base+0x107f8>
    1864:	ldr	x1, [x1, #4016]
    1868:	cbz	x1, 1874 <PyErr_WriteUnraisable@plt+0x54>
    186c:	mov	x16, x1
    1870:	br	x16
    1874:	ret
    1878:	adrp	x0, 14000 <RotatingTree_Enum@@Base+0x117f8>
    187c:	add	x0, x0, #0x530
    1880:	adrp	x1, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1884:	add	x1, x1, #0x530
    1888:	sub	x1, x1, x0
    188c:	lsr	x2, x1, #63
    1890:	add	x1, x2, x1, asr #3
    1894:	cmp	xzr, x1, asr #1
    1898:	asr	x1, x1, #1
    189c:	b.eq	18b4 <PyErr_WriteUnraisable@plt+0x94>  // b.none
    18a0:	adrp	x2, 13000 <RotatingTree_Enum@@Base+0x107f8>
    18a4:	ldr	x2, [x2, #4056]
    18a8:	cbz	x2, 18b4 <PyErr_WriteUnraisable@plt+0x94>
    18ac:	mov	x16, x2
    18b0:	br	x16
    18b4:	ret
    18b8:	stp	x29, x30, [sp, #-32]!
    18bc:	mov	x29, sp
    18c0:	str	x19, [sp, #16]
    18c4:	adrp	x19, 14000 <RotatingTree_Enum@@Base+0x117f8>
    18c8:	ldrb	w0, [x19, #1328]
    18cc:	cbnz	w0, 18f4 <PyErr_WriteUnraisable@plt+0xd4>
    18d0:	adrp	x0, 13000 <RotatingTree_Enum@@Base+0x107f8>
    18d4:	ldr	x0, [x0, #4024]
    18d8:	cbz	x0, 18e8 <PyErr_WriteUnraisable@plt+0xc8>
    18dc:	adrp	x0, 14000 <RotatingTree_Enum@@Base+0x117f8>
    18e0:	ldr	x0, [x0, #296]
    18e4:	bl	1650 <__cxa_finalize@plt>
    18e8:	bl	1848 <PyErr_WriteUnraisable@plt+0x28>
    18ec:	mov	w0, #0x1                   	// #1
    18f0:	strb	w0, [x19, #1328]
    18f4:	ldr	x19, [sp, #16]
    18f8:	ldp	x29, x30, [sp], #32
    18fc:	ret
    1900:	b	1878 <PyErr_WriteUnraisable@plt+0x58>

0000000000001904 <PyInit__lsprof@@Base>:
    1904:	stp	x29, x30, [sp, #-48]!
    1908:	str	x21, [sp, #16]
    190c:	stp	x20, x19, [sp, #32]
    1910:	mov	x29, sp
    1914:	adrp	x0, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1918:	add	x0, x0, #0x130
    191c:	mov	w1, #0x3f5                 	// #1013
    1920:	bl	1700 <PyModule_Create2@plt>
    1924:	mov	x19, x0
    1928:	cbz	x0, 19f8 <PyInit__lsprof@@Base+0xf4>
    192c:	mov	x0, x19
    1930:	bl	17e0 <PyModule_GetDict@plt>
    1934:	mov	x20, x0
    1938:	adrp	x0, 14000 <RotatingTree_Enum@@Base+0x117f8>
    193c:	add	x0, x0, #0x198
    1940:	bl	16a0 <PyType_Ready@plt>
    1944:	tbnz	w0, #31, 19f4 <PyInit__lsprof@@Base+0xf0>
    1948:	adrp	x1, 2000 <PyInit__lsprof@@Base+0x6fc>
    194c:	adrp	x2, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1950:	add	x1, x1, #0xe90
    1954:	add	x2, x2, #0x198
    1958:	mov	x0, x20
    195c:	bl	1610 <PyDict_SetItemString@plt>
    1960:	adrp	x21, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1964:	ldrb	w8, [x21, #1336]
    1968:	tbnz	w8, #0, 199c <PyInit__lsprof@@Base+0x98>
    196c:	adrp	x0, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1970:	adrp	x1, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1974:	add	x0, x0, #0x540
    1978:	add	x1, x1, #0x338
    197c:	bl	16f0 <PyStructSequence_InitType2@plt>
    1980:	tbnz	w0, #31, 19f4 <PyInit__lsprof@@Base+0xf0>
    1984:	adrp	x0, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1988:	adrp	x1, 14000 <RotatingTree_Enum@@Base+0x117f8>
    198c:	add	x0, x0, #0x6e0
    1990:	add	x1, x1, #0x358
    1994:	bl	16f0 <PyStructSequence_InitType2@plt>
    1998:	tbnz	w0, #31, 19f4 <PyInit__lsprof@@Base+0xf0>
    199c:	adrp	x2, 14000 <RotatingTree_Enum@@Base+0x117f8>
    19a0:	adrp	x20, 14000 <RotatingTree_Enum@@Base+0x117f8>
    19a4:	add	x2, x2, #0x540
    19a8:	add	x20, x20, #0x6e0
    19ac:	ldr	x8, [x2]
    19b0:	ldr	x9, [x20]
    19b4:	adrp	x1, 2000 <PyInit__lsprof@@Base+0x6fc>
    19b8:	add	x1, x1, #0xf67
    19bc:	add	x8, x8, #0x1
    19c0:	add	x9, x9, #0x1
    19c4:	mov	x0, x19
    19c8:	str	x8, [x2]
    19cc:	str	x9, [x20]
    19d0:	bl	1780 <PyModule_AddObject@plt>
    19d4:	adrp	x1, 3000 <RotatingTree_Enum@@Base+0x7f8>
    19d8:	add	x1, x1, #0x40
    19dc:	mov	x0, x19
    19e0:	mov	x2, x20
    19e4:	bl	1780 <PyModule_AddObject@plt>
    19e8:	mov	w8, #0x1                   	// #1
    19ec:	strb	w8, [x21, #1336]
    19f0:	b	19f8 <PyInit__lsprof@@Base+0xf4>
    19f4:	mov	x19, xzr
    19f8:	mov	x0, x19
    19fc:	ldp	x20, x19, [sp, #32]
    1a00:	ldr	x21, [sp, #16]
    1a04:	ldp	x29, x30, [sp], #48
    1a08:	ret
    1a0c:	stp	x29, x30, [sp, #-32]!
    1a10:	str	x19, [sp, #16]
    1a14:	mov	x29, sp
    1a18:	ldrb	w8, [x0, #40]
    1a1c:	mov	x19, x0
    1a20:	tbz	w8, #0, 1a30 <PyInit__lsprof@@Base+0x12c>
    1a24:	mov	x0, xzr
    1a28:	mov	x1, xzr
    1a2c:	bl	17a0 <PyEval_SetProfile@plt>
    1a30:	mov	x0, x19
    1a34:	bl	1b74 <PyInit__lsprof@@Base+0x270>
    1a38:	mov	x0, x19
    1a3c:	bl	1bc8 <PyInit__lsprof@@Base+0x2c4>
    1a40:	ldr	x0, [x19, #48]
    1a44:	cbz	x0, 1a5c <PyInit__lsprof@@Base+0x158>
    1a48:	ldr	x8, [x0]
    1a4c:	subs	x8, x8, #0x1
    1a50:	str	x8, [x0]
    1a54:	b.ne	1a5c <PyInit__lsprof@@Base+0x158>  // b.any
    1a58:	bl	1660 <_Py_Dealloc@plt>
    1a5c:	ldr	x8, [x19, #8]
    1a60:	mov	x0, x19
    1a64:	ldr	x19, [sp, #16]
    1a68:	ldr	x1, [x8, #320]
    1a6c:	ldp	x29, x30, [sp], #32
    1a70:	br	x1
    1a74:	sub	sp, sp, #0x30
    1a78:	stp	x29, x30, [sp, #16]
    1a7c:	str	x19, [sp, #32]
    1a80:	add	x29, sp, #0x10
    1a84:	mov	x8, x2
    1a88:	adrp	x2, 2000 <PyInit__lsprof@@Base+0x6fc>
    1a8c:	adrp	x3, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1a90:	mov	x19, x0
    1a94:	mov	w9, #0x1                   	// #1
    1a98:	add	x2, x2, #0xf50
    1a9c:	add	x3, x3, #0x430
    1aa0:	add	x4, x29, #0x18
    1aa4:	add	x5, sp, #0x8
    1aa8:	add	x6, sp, #0x4
    1aac:	mov	x7, sp
    1ab0:	mov	x0, x1
    1ab4:	mov	x1, x8
    1ab8:	str	xzr, [x29, #24]
    1abc:	str	xzr, [sp, #8]
    1ac0:	stp	w9, w9, [sp]
    1ac4:	bl	1620 <PyArg_ParseTupleAndKeywords@plt>
    1ac8:	cbz	w0, 1ae8 <PyInit__lsprof@@Base+0x1e4>
    1acc:	ldr	w8, [sp, #4]
    1ad0:	cbz	w8, 1af0 <PyInit__lsprof@@Base+0x1ec>
    1ad4:	cmp	w8, #0x1
    1ad8:	b.lt	1afc <PyInit__lsprof@@Base+0x1f8>  // b.tstop
    1adc:	ldr	w8, [x19, #40]
    1ae0:	orr	w8, w8, #0x2
    1ae4:	b	1af8 <PyInit__lsprof@@Base+0x1f4>
    1ae8:	mov	w0, #0xffffffff            	// #-1
    1aec:	b	1b64 <PyInit__lsprof@@Base+0x260>
    1af0:	ldr	w8, [x19, #40]
    1af4:	and	w8, w8, #0xfffffffd
    1af8:	str	w8, [x19, #40]
    1afc:	ldr	w8, [sp]
    1b00:	cbz	w8, 1b18 <PyInit__lsprof@@Base+0x214>
    1b04:	cmp	w8, #0x1
    1b08:	b.lt	1b24 <PyInit__lsprof@@Base+0x220>  // b.tstop
    1b0c:	ldr	w8, [x19, #40]
    1b10:	orr	w8, w8, #0x4
    1b14:	b	1b20 <PyInit__lsprof@@Base+0x21c>
    1b18:	ldr	w8, [x19, #40]
    1b1c:	and	w8, w8, #0xfffffffb
    1b20:	str	w8, [x19, #40]
    1b24:	ldr	x8, [sp, #8]
    1b28:	str	x8, [x19, #56]
    1b2c:	ldr	x8, [x29, #24]
    1b30:	cbz	x8, 1b40 <PyInit__lsprof@@Base+0x23c>
    1b34:	ldr	x9, [x8]
    1b38:	add	x9, x9, #0x1
    1b3c:	str	x9, [x8]
    1b40:	ldr	x0, [x19, #48]
    1b44:	str	x8, [x19, #48]
    1b48:	cbz	x0, 1b64 <PyInit__lsprof@@Base+0x260>
    1b4c:	ldr	x8, [x0]
    1b50:	subs	x8, x8, #0x1
    1b54:	str	x8, [x0]
    1b58:	b.ne	1b60 <PyInit__lsprof@@Base+0x25c>  // b.any
    1b5c:	bl	1660 <_Py_Dealloc@plt>
    1b60:	mov	w0, wzr
    1b64:	ldr	x19, [sp, #32]
    1b68:	ldp	x29, x30, [sp, #16]
    1b6c:	add	sp, sp, #0x30
    1b70:	ret
    1b74:	stp	x29, x30, [sp, #-32]!
    1b78:	stp	x20, x19, [sp, #16]
    1b7c:	mov	x29, sp
    1b80:	ldr	x20, [x0, #24]
    1b84:	cbz	x20, 1bbc <PyInit__lsprof@@Base+0x2b8>
    1b88:	mov	x19, x0
    1b8c:	ldr	x2, [x20, #24]
    1b90:	cbz	x2, 1ba4 <PyInit__lsprof@@Base+0x2a0>
    1b94:	mov	x0, x19
    1b98:	mov	x1, x20
    1b9c:	bl	1c28 <PyInit__lsprof@@Base+0x324>
    1ba0:	b	1bac <PyInit__lsprof@@Base+0x2a8>
    1ba4:	ldr	x8, [x20, #16]
    1ba8:	str	x8, [x19, #24]
    1bac:	mov	x0, x20
    1bb0:	bl	1640 <PyMem_Free@plt>
    1bb4:	ldr	x20, [x19, #24]
    1bb8:	cbnz	x20, 1b8c <PyInit__lsprof@@Base+0x288>
    1bbc:	ldp	x20, x19, [sp, #16]
    1bc0:	ldp	x29, x30, [sp], #32
    1bc4:	ret
    1bc8:	stp	x29, x30, [sp, #-32]!
    1bcc:	str	x19, [sp, #16]
    1bd0:	mov	x29, sp
    1bd4:	mov	x19, x0
    1bd8:	ldr	x0, [x0, #16]
    1bdc:	adrp	x1, 1000 <RotatingTree_Add@plt-0x5e0>
    1be0:	add	x1, x1, #0xe00
    1be4:	mov	x2, xzr
    1be8:	bl	1720 <RotatingTree_Enum@plt>
    1bec:	ldr	x0, [x19, #24]
    1bf0:	str	xzr, [x19, #16]
    1bf4:	cbz	x0, 1c10 <PyInit__lsprof@@Base+0x30c>
    1bf8:	bl	1640 <PyMem_Free@plt>
    1bfc:	str	xzr, [x19, #24]
    1c00:	b	1c10 <PyInit__lsprof@@Base+0x30c>
    1c04:	ldr	x8, [x0, #16]
    1c08:	str	x8, [x19, #32]
    1c0c:	bl	1640 <PyMem_Free@plt>
    1c10:	ldr	x0, [x19, #32]
    1c14:	cbnz	x0, 1c04 <PyInit__lsprof@@Base+0x300>
    1c18:	str	xzr, [x19, #32]
    1c1c:	ldr	x19, [sp, #16]
    1c20:	ldp	x29, x30, [sp], #32
    1c24:	ret
    1c28:	stp	x29, x30, [sp, #-48]!
    1c2c:	stp	x22, x21, [sp, #16]
    1c30:	stp	x20, x19, [sp, #32]
    1c34:	mov	x29, sp
    1c38:	mov	x19, x2
    1c3c:	mov	x21, x1
    1c40:	mov	x20, x0
    1c44:	bl	1d0c <PyInit__lsprof@@Base+0x408>
    1c48:	ldp	x9, x10, [x21]
    1c4c:	ldr	x8, [x21, #16]
    1c50:	sub	x22, x0, x9
    1c54:	sub	x21, x22, x10
    1c58:	cbz	x8, 1c68 <PyInit__lsprof@@Base+0x364>
    1c5c:	ldr	x9, [x8, #8]
    1c60:	add	x9, x9, x22
    1c64:	str	x9, [x8, #8]
    1c68:	str	x8, [x20, #24]
    1c6c:	ldr	x9, [x19, #64]
    1c70:	mov	w10, #0x38                  	// #56
    1c74:	mov	w11, #0x20                  	// #32
    1c78:	subs	x9, x9, #0x1
    1c7c:	str	x9, [x19, #64]
    1c80:	csel	x9, x11, x10, eq  // eq = none
    1c84:	ldr	x10, [x19, x9]
    1c88:	csinc	x11, x22, xzr, eq  // eq = none
    1c8c:	add	x10, x10, x11
    1c90:	str	x10, [x19, x9]
    1c94:	ldp	x9, x10, [x19, #40]
    1c98:	add	x9, x9, x21
    1c9c:	add	x10, x10, #0x1
    1ca0:	stp	x9, x10, [x19, #40]
    1ca4:	cbz	x8, 1cfc <PyInit__lsprof@@Base+0x3f8>
    1ca8:	ldr	w9, [x20, #40]
    1cac:	tbz	w9, #1, 1cfc <PyInit__lsprof@@Base+0x3f8>
    1cb0:	ldr	x8, [x8, #24]
    1cb4:	mov	x1, x19
    1cb8:	add	x0, x8, #0x48
    1cbc:	bl	1750 <RotatingTree_Get@plt>
    1cc0:	cbz	x0, 1cfc <PyInit__lsprof@@Base+0x3f8>
    1cc4:	ldr	x8, [x0, #56]
    1cc8:	mov	w9, #0x30                  	// #48
    1ccc:	subs	x8, x8, #0x1
    1cd0:	str	x8, [x0, #56]
    1cd4:	mov	w8, #0x18                  	// #24
    1cd8:	csel	x8, x8, x9, eq  // eq = none
    1cdc:	ldr	x9, [x0, x8]
    1ce0:	csinc	x10, x22, xzr, eq  // eq = none
    1ce4:	add	x9, x9, x10
    1ce8:	str	x9, [x0, x8]
    1cec:	ldp	x8, x9, [x0, #32]
    1cf0:	add	x8, x8, x21
    1cf4:	add	x9, x9, #0x1
    1cf8:	stp	x8, x9, [x0, #32]
    1cfc:	ldp	x20, x19, [sp, #32]
    1d00:	ldp	x22, x21, [sp, #16]
    1d04:	ldp	x29, x30, [sp], #48
    1d08:	ret
    1d0c:	stp	x29, x30, [sp, #-48]!
    1d10:	str	x21, [sp, #16]
    1d14:	stp	x20, x19, [sp, #32]
    1d18:	mov	x29, sp
    1d1c:	ldr	x20, [x0, #48]
    1d20:	cbz	x20, 1da0 <PyInit__lsprof@@Base+0x49c>
    1d24:	ldr	x8, [x20, #8]
    1d28:	mov	x19, x0
    1d2c:	ldrb	w9, [x8, #169]
    1d30:	tbz	w9, #3, 1d68 <PyInit__lsprof@@Base+0x464>
    1d34:	ldr	x8, [x8, #56]
    1d38:	ldr	x8, [x20, x8]
    1d3c:	cbz	x8, 1d68 <PyInit__lsprof@@Base+0x464>
    1d40:	mov	x0, x20
    1d44:	mov	x1, xzr
    1d48:	mov	x2, xzr
    1d4c:	mov	x3, xzr
    1d50:	blr	x8
    1d54:	mov	x1, x0
    1d58:	mov	x0, x20
    1d5c:	mov	x2, xzr
    1d60:	bl	1730 <_Py_CheckFunctionResult@plt>
    1d64:	b	1d7c <PyInit__lsprof@@Base+0x478>
    1d68:	mov	x0, x20
    1d6c:	mov	x1, xzr
    1d70:	mov	x2, xzr
    1d74:	mov	x3, xzr
    1d78:	bl	17f0 <_PyObject_MakeTpCall@plt>
    1d7c:	mov	x20, x0
    1d80:	cbz	x0, 1de4 <PyInit__lsprof@@Base+0x4e0>
    1d84:	ldr	d0, [x19, #56]
    1d88:	add	x0, x29, #0x18
    1d8c:	mov	x1, x20
    1d90:	fcmp	d0, #0.0
    1d94:	b.le	1db0 <PyInit__lsprof@@Base+0x4ac>
    1d98:	bl	17d0 <_PyTime_FromNanosecondsObject@plt>
    1d9c:	b	1db8 <PyInit__lsprof@@Base+0x4b4>
    1da0:	ldp	x20, x19, [sp, #32]
    1da4:	ldr	x21, [sp, #16]
    1da8:	ldp	x29, x30, [sp], #48
    1dac:	b	1800 <_PyTime_GetPerfCounter@plt>
    1db0:	mov	w2, wzr
    1db4:	bl	1690 <_PyTime_FromSecondsObject@plt>
    1db8:	ldr	x8, [x20]
    1dbc:	mov	w21, w0
    1dc0:	subs	x8, x8, #0x1
    1dc4:	str	x8, [x20]
    1dc8:	b.eq	1dd8 <PyInit__lsprof@@Base+0x4d4>  // b.none
    1dcc:	tbnz	w21, #31, 1de4 <PyInit__lsprof@@Base+0x4e0>
    1dd0:	ldr	x0, [x29, #24]
    1dd4:	b	1df0 <PyInit__lsprof@@Base+0x4ec>
    1dd8:	mov	x0, x20
    1ddc:	bl	1660 <_Py_Dealloc@plt>
    1de0:	tbz	w21, #31, 1dd0 <PyInit__lsprof@@Base+0x4cc>
    1de4:	ldr	x0, [x19, #48]
    1de8:	bl	1820 <PyErr_WriteUnraisable@plt>
    1dec:	mov	x0, xzr
    1df0:	ldp	x20, x19, [sp, #32]
    1df4:	ldr	x21, [sp, #16]
    1df8:	ldp	x29, x30, [sp], #48
    1dfc:	ret
    1e00:	stp	x29, x30, [sp, #-32]!
    1e04:	str	x19, [sp, #16]
    1e08:	mov	x29, sp
    1e0c:	mov	x19, x0
    1e10:	ldr	x0, [x0, #72]
    1e14:	adrp	x1, 1000 <RotatingTree_Add@plt-0x5e0>
    1e18:	add	x1, x1, #0xe54
    1e1c:	mov	x2, xzr
    1e20:	bl	1720 <RotatingTree_Enum@plt>
    1e24:	ldr	x0, [x19, #24]
    1e28:	ldr	x8, [x0]
    1e2c:	subs	x8, x8, #0x1
    1e30:	str	x8, [x0]
    1e34:	b.ne	1e3c <PyInit__lsprof@@Base+0x538>  // b.any
    1e38:	bl	1660 <_Py_Dealloc@plt>
    1e3c:	mov	x0, x19
    1e40:	bl	1640 <PyMem_Free@plt>
    1e44:	ldr	x19, [sp, #16]
    1e48:	mov	w0, wzr
    1e4c:	ldp	x29, x30, [sp], #32
    1e50:	ret
    1e54:	stp	x29, x30, [sp, #-16]!
    1e58:	mov	x29, sp
    1e5c:	bl	1640 <PyMem_Free@plt>
    1e60:	mov	w0, wzr
    1e64:	ldp	x29, x30, [sp], #16
    1e68:	ret
    1e6c:	sub	sp, sp, #0x40
    1e70:	stp	x29, x30, [sp, #32]
    1e74:	str	x19, [sp, #48]
    1e78:	add	x29, sp, #0x20
    1e7c:	ldr	w8, [x0, #40]
    1e80:	mov	x19, x0
    1e84:	tbnz	w8, #8, 1efc <PyInit__lsprof@@Base+0x5f8>
    1e88:	ldr	x8, [x19, #48]
    1e8c:	cbz	x8, 1e9c <PyInit__lsprof@@Base+0x598>
    1e90:	ldr	d0, [x19, #56]
    1e94:	fcmp	d0, #0.0
    1e98:	b.ne	1eb0 <PyInit__lsprof@@Base+0x5ac>  // b.any
    1e9c:	mov	w0, #0x1                   	// #1
    1ea0:	bl	17b0 <_PyTime_FromSeconds@plt>
    1ea4:	scvtf	d0, x0
    1ea8:	fmov	d1, #1.000000000000000000e+00
    1eac:	fdiv	d0, d1, d0
    1eb0:	mov	x0, xzr
    1eb4:	str	d0, [sp, #24]
    1eb8:	bl	1600 <PyList_New@plt>
    1ebc:	str	x0, [sp, #8]
    1ec0:	cbz	x0, 1f1c <PyInit__lsprof@@Base+0x618>
    1ec4:	ldr	x0, [x19, #16]
    1ec8:	adrp	x1, 2000 <PyInit__lsprof@@Base+0x6fc>
    1ecc:	add	x1, x1, #0xb4
    1ed0:	add	x2, sp, #0x8
    1ed4:	bl	1720 <RotatingTree_Enum@plt>
    1ed8:	ldr	x8, [sp, #8]
    1edc:	cbz	w0, 1f20 <PyInit__lsprof@@Base+0x61c>
    1ee0:	ldr	x9, [x8]
    1ee4:	subs	x9, x9, #0x1
    1ee8:	str	x9, [x8]
    1eec:	b.ne	1f1c <PyInit__lsprof@@Base+0x618>  // b.any
    1ef0:	mov	x0, x8
    1ef4:	bl	1660 <_Py_Dealloc@plt>
    1ef8:	b	1f1c <PyInit__lsprof@@Base+0x618>
    1efc:	sub	w8, w8, #0x100
    1f00:	str	w8, [x19, #40]
    1f04:	adrp	x8, 13000 <RotatingTree_Enum@@Base+0x107f8>
    1f08:	ldr	x8, [x8, #4032]
    1f0c:	adrp	x1, 2000 <PyInit__lsprof@@Base+0x6fc>
    1f10:	add	x1, x1, #0xeb0
    1f14:	ldr	x0, [x8]
    1f18:	bl	1670 <PyErr_SetString@plt>
    1f1c:	mov	x8, xzr
    1f20:	ldr	x19, [sp, #48]
    1f24:	ldp	x29, x30, [sp, #32]
    1f28:	mov	x0, x8
    1f2c:	add	sp, sp, #0x40
    1f30:	ret
    1f34:	stp	x29, x30, [sp, #-32]!
    1f38:	str	x19, [sp, #16]
    1f3c:	mov	x29, sp
    1f40:	mov	x8, x2
    1f44:	adrp	x2, 2000 <PyInit__lsprof@@Base+0x6fc>
    1f48:	adrp	x3, 14000 <RotatingTree_Enum@@Base+0x117f8>
    1f4c:	mov	x19, x0
    1f50:	mov	w9, #0xffffffff            	// #-1
    1f54:	add	x2, x2, #0xefc
    1f58:	add	x3, x3, #0x418
    1f5c:	add	x4, x29, #0x1c
    1f60:	add	x5, x29, #0x18
    1f64:	mov	x0, x1
    1f68:	mov	x1, x8
    1f6c:	stp	w9, w9, [x29, #24]
    1f70:	bl	1620 <PyArg_ParseTupleAndKeywords@plt>
    1f74:	cbz	w0, 1f94 <PyInit__lsprof@@Base+0x690>
    1f78:	ldr	w8, [x29, #28]
    1f7c:	cbz	w8, 1f9c <PyInit__lsprof@@Base+0x698>
    1f80:	cmp	w8, #0x1
    1f84:	b.lt	1fa8 <PyInit__lsprof@@Base+0x6a4>  // b.tstop
    1f88:	ldr	w8, [x19, #40]
    1f8c:	orr	w8, w8, #0x2
    1f90:	b	1fa4 <PyInit__lsprof@@Base+0x6a0>
    1f94:	mov	x0, xzr
    1f98:	b	2000 <PyInit__lsprof@@Base+0x6fc>
    1f9c:	ldr	w8, [x19, #40]
    1fa0:	and	w8, w8, #0xfffffffd
    1fa4:	str	w8, [x19, #40]
    1fa8:	ldr	w8, [x29, #24]
    1fac:	cbz	w8, 1fc4 <PyInit__lsprof@@Base+0x6c0>
    1fb0:	cmp	w8, #0x1
    1fb4:	b.lt	1fd0 <PyInit__lsprof@@Base+0x6cc>  // b.tstop
    1fb8:	ldr	w8, [x19, #40]
    1fbc:	orr	w8, w8, #0x4
    1fc0:	b	1fcc <PyInit__lsprof@@Base+0x6c8>
    1fc4:	ldr	w8, [x19, #40]
    1fc8:	and	w8, w8, #0xfffffffb
    1fcc:	str	w8, [x19, #40]
    1fd0:	adrp	x0, 2000 <PyInit__lsprof@@Base+0x6fc>
    1fd4:	add	x0, x0, #0x270
    1fd8:	mov	x1, x19
    1fdc:	bl	17a0 <PyEval_SetProfile@plt>
    1fe0:	ldr	w8, [x19, #40]
    1fe4:	adrp	x0, 13000 <RotatingTree_Enum@@Base+0x107f8>
    1fe8:	orr	w8, w8, #0x1
    1fec:	str	w8, [x19, #40]
    1ff0:	ldr	x0, [x0, #4048]
    1ff4:	ldr	x8, [x0]
    1ff8:	add	x8, x8, #0x1
    1ffc:	str	x8, [x0]
    2000:	ldr	x19, [sp, #16]
    2004:	ldp	x29, x30, [sp], #32
    2008:	ret
    200c:	stp	x29, x30, [sp, #-32]!
    2010:	str	x19, [sp, #16]
    2014:	mov	x29, sp
    2018:	ldr	w8, [x0, #40]
    201c:	mov	x19, x0
    2020:	mov	x1, xzr
    2024:	and	w8, w8, #0xfffffffe
    2028:	str	w8, [x0, #40]
    202c:	mov	x0, xzr
    2030:	bl	17a0 <PyEval_SetProfile@plt>
    2034:	mov	x0, x19
    2038:	bl	1b74 <PyInit__lsprof@@Base+0x270>
    203c:	ldr	w8, [x19, #40]
    2040:	tbnz	w8, #8, 205c <PyInit__lsprof@@Base+0x758>
    2044:	adrp	x0, 13000 <RotatingTree_Enum@@Base+0x107f8>
    2048:	ldr	x0, [x0, #4048]
    204c:	ldr	x8, [x0]
    2050:	add	x8, x8, #0x1
    2054:	str	x8, [x0]
    2058:	b	2080 <PyInit__lsprof@@Base+0x77c>
    205c:	sub	w8, w8, #0x100
    2060:	str	w8, [x19, #40]
    2064:	adrp	x8, 13000 <RotatingTree_Enum@@Base+0x107f8>
    2068:	ldr	x8, [x8, #4032]
    206c:	adrp	x1, 2000 <PyInit__lsprof@@Base+0x6fc>
    2070:	add	x1, x1, #0xeb0
    2074:	ldr	x0, [x8]
    2078:	bl	1670 <PyErr_SetString@plt>
    207c:	mov	x0, xzr
    2080:	ldr	x19, [sp, #16]
    2084:	ldp	x29, x30, [sp], #32
    2088:	ret
    208c:	stp	x29, x30, [sp, #-16]!
    2090:	mov	x29, sp
    2094:	bl	1bc8 <PyInit__lsprof@@Base+0x2c4>
    2098:	adrp	x0, 13000 <RotatingTree_Enum@@Base+0x107f8>
    209c:	ldr	x0, [x0, #4048]
    20a0:	ldr	x8, [x0]
    20a4:	add	x8, x8, #0x1
    20a8:	str	x8, [x0]
    20ac:	ldp	x29, x30, [sp], #16
    20b0:	ret
    20b4:	stp	x29, x30, [sp, #-32]!
    20b8:	stp	x20, x19, [sp, #16]
    20bc:	mov	x29, sp
    20c0:	ldr	x3, [x0, #48]
    20c4:	cbz	x3, 211c <PyInit__lsprof@@Base+0x818>
    20c8:	ldr	x8, [x0, #72]
    20cc:	mov	x20, x0
    20d0:	mov	x19, x1
    20d4:	cbz	x8, 2124 <PyInit__lsprof@@Base+0x820>
    20d8:	mov	x0, xzr
    20dc:	bl	1600 <PyList_New@plt>
    20e0:	str	x0, [x19, #8]
    20e4:	cbz	x0, 21cc <PyInit__lsprof@@Base+0x8c8>
    20e8:	ldr	x0, [x20, #72]
    20ec:	adrp	x1, 2000 <PyInit__lsprof@@Base+0x6fc>
    20f0:	add	x1, x1, #0x1e0
    20f4:	mov	x2, x19
    20f8:	bl	1720 <RotatingTree_Enum@plt>
    20fc:	cbz	w0, 2140 <PyInit__lsprof@@Base+0x83c>
    2100:	ldr	x0, [x19, #8]
    2104:	ldr	x8, [x0]
    2108:	subs	x8, x8, #0x1
    210c:	str	x8, [x0]
    2110:	b.ne	21cc <PyInit__lsprof@@Base+0x8c8>  // b.any
    2114:	bl	1660 <_Py_Dealloc@plt>
    2118:	b	21cc <PyInit__lsprof@@Base+0x8c8>
    211c:	mov	w19, wzr
    2120:	b	21d0 <PyInit__lsprof@@Base+0x8cc>
    2124:	adrp	x5, 13000 <RotatingTree_Enum@@Base+0x107f8>
    2128:	ldr	x5, [x5, #4048]
    212c:	ldr	x8, [x5]
    2130:	add	x8, x8, #0x1
    2134:	str	x8, [x5]
    2138:	str	x5, [x19, #8]
    213c:	b	2148 <PyInit__lsprof@@Base+0x844>
    2140:	ldr	x3, [x20, #48]
    2144:	ldr	x5, [x19, #8]
    2148:	ldp	d0, d1, [x20, #32]
    214c:	ldr	d2, [x19, #16]
    2150:	ldr	x2, [x20, #24]
    2154:	ldr	x4, [x20, #56]
    2158:	scvtf	d0, d0
    215c:	scvtf	d1, d1
    2160:	adrp	x0, 14000 <RotatingTree_Enum@@Base+0x117f8>
    2164:	adrp	x1, 2000 <PyInit__lsprof@@Base+0x6fc>
    2168:	fmul	d0, d2, d0
    216c:	fmul	d1, d2, d1
    2170:	add	x0, x0, #0x540
    2174:	add	x1, x1, #0xed5
    2178:	bl	16e0 <PyObject_CallFunction@plt>
    217c:	mov	x20, x0
    2180:	ldr	x0, [x19, #8]
    2184:	ldr	x8, [x0]
    2188:	subs	x8, x8, #0x1
    218c:	str	x8, [x0]
    2190:	b.eq	21c4 <PyInit__lsprof@@Base+0x8c0>  // b.none
    2194:	cbz	x20, 21cc <PyInit__lsprof@@Base+0x8c8>
    2198:	ldr	x0, [x19]
    219c:	mov	x1, x20
    21a0:	bl	16c0 <PyList_Append@plt>
    21a4:	ldr	x8, [x20]
    21a8:	mov	w19, w0
    21ac:	subs	x8, x8, #0x1
    21b0:	str	x8, [x20]
    21b4:	b.ne	21d0 <PyInit__lsprof@@Base+0x8cc>  // b.any
    21b8:	mov	x0, x20
    21bc:	bl	1660 <_Py_Dealloc@plt>
    21c0:	b	21d0 <PyInit__lsprof@@Base+0x8cc>
    21c4:	bl	1660 <_Py_Dealloc@plt>
    21c8:	cbnz	x20, 2198 <PyInit__lsprof@@Base+0x894>
    21cc:	mov	w19, #0xffffffff            	// #-1
    21d0:	mov	w0, w19
    21d4:	ldp	x20, x19, [sp, #16]
    21d8:	ldp	x29, x30, [sp], #32
    21dc:	ret
    21e0:	stp	x29, x30, [sp, #-32]!
    21e4:	stp	x20, x19, [sp, #16]
    21e8:	mov	x29, sp
    21ec:	ldr	x8, [x0]
    21f0:	ldp	d0, d2, [x0, #24]
    21f4:	ldr	d1, [x1, #16]
    21f8:	ldp	x3, x4, [x0, #40]
    21fc:	ldr	x2, [x8, #24]
    2200:	mov	x19, x1
    2204:	scvtf	d0, d0
    2208:	scvtf	d2, d2
    220c:	adrp	x0, 14000 <RotatingTree_Enum@@Base+0x117f8>
    2210:	adrp	x1, 2000 <PyInit__lsprof@@Base+0x6fc>
    2214:	fmul	d0, d1, d0
    2218:	fmul	d1, d1, d2
    221c:	add	x0, x0, #0x6e0
    2220:	add	x1, x1, #0xee0
    2224:	bl	16e0 <PyObject_CallFunction@plt>
    2228:	cbz	x0, 225c <PyInit__lsprof@@Base+0x958>
    222c:	mov	x20, x0
    2230:	ldr	x0, [x19, #8]
    2234:	mov	x1, x20
    2238:	bl	16c0 <PyList_Append@plt>
    223c:	ldr	x8, [x20]
    2240:	mov	w19, w0
    2244:	subs	x8, x8, #0x1
    2248:	str	x8, [x20]
    224c:	b.ne	2260 <PyInit__lsprof@@Base+0x95c>  // b.any
    2250:	mov	x0, x20
    2254:	bl	1660 <_Py_Dealloc@plt>
    2258:	b	2260 <PyInit__lsprof@@Base+0x95c>
    225c:	mov	w19, #0xffffffff            	// #-1
    2260:	mov	w0, w19
    2264:	ldp	x20, x19, [sp, #16]
    2268:	ldp	x29, x30, [sp], #32
    226c:	ret
    2270:	stp	x29, x30, [sp, #-16]!
    2274:	mov	x29, sp
    2278:	cmp	w2, #0x6
    227c:	b.hi	22f8 <PyInit__lsprof@@Base+0x9f4>  // b.pmore
    2280:	adrp	x9, 2000 <PyInit__lsprof@@Base+0x6fc>
    2284:	mov	w8, w2
    2288:	add	x9, x9, #0x87c
    228c:	adr	x10, 229c <PyInit__lsprof@@Base+0x998>
    2290:	ldrb	w11, [x9, x8]
    2294:	add	x10, x10, x11, lsl #2
    2298:	br	x10
    229c:	ldrb	w8, [x0, #40]
    22a0:	tbz	w8, #2, 22f8 <PyInit__lsprof@@Base+0x9f4>
    22a4:	adrp	x9, 13000 <RotatingTree_Enum@@Base+0x107f8>
    22a8:	ldr	x8, [x3, #8]
    22ac:	ldr	x9, [x9, #4064]
    22b0:	cmp	x8, x9
    22b4:	b.ne	22f8 <PyInit__lsprof@@Base+0x9f4>  // b.any
    22b8:	ldr	x1, [x3, #16]
    22bc:	b	22d4 <PyInit__lsprof@@Base+0x9d0>
    22c0:	ldr	x1, [x1, #32]
    22c4:	mov	x2, x1
    22c8:	bl	2310 <PyInit__lsprof@@Base+0xa0c>
    22cc:	b	22f8 <PyInit__lsprof@@Base+0x9f4>
    22d0:	ldr	x1, [x1, #32]
    22d4:	bl	265c <PyInit__lsprof@@Base+0xd58>
    22d8:	b	22f8 <PyInit__lsprof@@Base+0x9f4>
    22dc:	ldrb	w8, [x0, #40]
    22e0:	tbz	w8, #2, 22f8 <PyInit__lsprof@@Base+0x9f4>
    22e4:	adrp	x9, 13000 <RotatingTree_Enum@@Base+0x107f8>
    22e8:	ldr	x8, [x3, #8]
    22ec:	ldr	x9, [x9, #4064]
    22f0:	cmp	x8, x9
    22f4:	b.eq	2304 <PyInit__lsprof@@Base+0xa00>  // b.none
    22f8:	mov	w0, wzr
    22fc:	ldp	x29, x30, [sp], #16
    2300:	ret
    2304:	ldr	x1, [x3, #16]
    2308:	mov	x2, x3
    230c:	b	22c8 <PyInit__lsprof@@Base+0x9c4>
    2310:	sub	sp, sp, #0x70
    2314:	stp	x29, x30, [sp, #32]
    2318:	stp	x26, x25, [sp, #48]
    231c:	stp	x24, x23, [sp, #64]
    2320:	stp	x22, x21, [sp, #80]
    2324:	stp	x20, x19, [sp, #96]
    2328:	add	x29, sp, #0x20
    232c:	mov	x23, x2
    2330:	mov	x21, x1
    2334:	mov	x19, x0
    2338:	sub	x0, x29, #0x8
    233c:	add	x1, sp, #0x10
    2340:	add	x2, sp, #0x8
    2344:	bl	1760 <PyErr_Fetch@plt>
    2348:	add	x22, x19, #0x10
    234c:	mov	x0, x22
    2350:	mov	x1, x21
    2354:	bl	1750 <RotatingTree_Get@plt>
    2358:	mov	x20, x0
    235c:	cbnz	x0, 251c <PyInit__lsprof@@Base+0xc18>
    2360:	mov	w0, #0x50                  	// #80
    2364:	bl	1810 <PyMem_Malloc@plt>
    2368:	cbz	x0, 25f0 <PyInit__lsprof@@Base+0xcec>
    236c:	adrp	x9, 13000 <RotatingTree_Enum@@Base+0x107f8>
    2370:	ldr	x8, [x23, #8]
    2374:	ldr	x9, [x9, #4064]
    2378:	mov	x20, x0
    237c:	cmp	x8, x9
    2380:	b.eq	2398 <PyInit__lsprof@@Base+0xa94>  // b.none
    2384:	ldr	x8, [x23]
    2388:	mov	x25, x23
    238c:	add	x8, x8, #0x1
    2390:	str	x8, [x23]
    2394:	b	24fc <PyInit__lsprof@@Base+0xbf8>
    2398:	ldr	x26, [x23, #24]
    239c:	cbz	x26, 2440 <PyInit__lsprof@@Base+0xb3c>
    23a0:	ldr	x8, [x23, #16]
    23a4:	ldr	x0, [x8]
    23a8:	bl	1770 <PyUnicode_FromString@plt>
    23ac:	ldr	x24, [x23, #32]
    23b0:	cbz	x0, 241c <PyInit__lsprof@@Base+0xb18>
    23b4:	mov	x25, x0
    23b8:	ldr	x0, [x26, #8]
    23bc:	mov	x1, x25
    23c0:	bl	1740 <_PyType_Lookup@plt>
    23c4:	mov	x26, x0
    23c8:	cbz	x0, 23d8 <PyInit__lsprof@@Base+0xad4>
    23cc:	ldr	x8, [x26]
    23d0:	add	x8, x8, #0x1
    23d4:	str	x8, [x26]
    23d8:	ldr	x8, [x25]
    23dc:	subs	x8, x8, #0x1
    23e0:	str	x8, [x25]
    23e4:	b.ne	23f0 <PyInit__lsprof@@Base+0xaec>  // b.any
    23e8:	mov	x0, x25
    23ec:	bl	1660 <_Py_Dealloc@plt>
    23f0:	cbz	x26, 241c <PyInit__lsprof@@Base+0xb18>
    23f4:	mov	x0, x26
    23f8:	bl	1790 <PyObject_Repr@plt>
    23fc:	ldr	x8, [x26]
    2400:	mov	x25, x0
    2404:	subs	x8, x8, #0x1
    2408:	str	x8, [x26]
    240c:	b.ne	2418 <PyInit__lsprof@@Base+0xb14>  // b.any
    2410:	mov	x0, x26
    2414:	bl	1660 <_Py_Dealloc@plt>
    2418:	cbnz	x25, 24fc <PyInit__lsprof@@Base+0xbf8>
    241c:	bl	16b0 <PyErr_Clear@plt>
    2420:	cbz	x24, 2430 <PyInit__lsprof@@Base+0xb2c>
    2424:	ldr	x8, [x24, #8]
    2428:	ldrb	w8, [x8, #171]
    242c:	tbnz	w8, #4, 248c <PyInit__lsprof@@Base+0xb88>
    2430:	ldr	x8, [x23, #16]
    2434:	adrp	x0, 2000 <PyInit__lsprof@@Base+0x6fc>
    2438:	add	x0, x0, #0xf2c
    243c:	b	24ec <PyInit__lsprof@@Base+0xbe8>
    2440:	ldr	x24, [x23, #32]
    2444:	cbz	x24, 24e0 <PyInit__lsprof@@Base+0xbdc>
    2448:	ldr	x0, [x24, #8]
    244c:	ldrb	w8, [x0, #171]
    2450:	tbnz	w8, #4, 24a8 <PyInit__lsprof@@Base+0xba4>
    2454:	adrp	x8, 13000 <RotatingTree_Enum@@Base+0x107f8>
    2458:	ldr	x8, [x8, #4008]
    245c:	cmp	x0, x8
    2460:	b.eq	2474 <PyInit__lsprof@@Base+0xb70>  // b.none
    2464:	adrp	x1, 13000 <RotatingTree_Enum@@Base+0x107f8>
    2468:	ldr	x1, [x1, #4008]
    246c:	bl	17c0 <PyType_IsSubtype@plt>
    2470:	cbz	w0, 24e0 <PyInit__lsprof@@Base+0xbdc>
    2474:	mov	x0, x24
    2478:	bl	1680 <PyModule_GetNameObject@plt>
    247c:	mov	x24, x0
    2480:	cbnz	x0, 24b4 <PyInit__lsprof@@Base+0xbb0>
    2484:	bl	16b0 <PyErr_Clear@plt>
    2488:	b	24e0 <PyInit__lsprof@@Base+0xbdc>
    248c:	ldr	x8, [x23, #16]
    2490:	adrp	x0, 2000 <PyInit__lsprof@@Base+0x6fc>
    2494:	add	x0, x0, #0xf14
    2498:	mov	x1, x24
    249c:	ldr	x2, [x8]
    24a0:	bl	15f0 <PyUnicode_FromFormat@plt>
    24a4:	b	24f4 <PyInit__lsprof@@Base+0xbf0>
    24a8:	ldr	x8, [x24]
    24ac:	add	x8, x8, #0x1
    24b0:	str	x8, [x24]
    24b4:	adrp	x1, 2000 <PyInit__lsprof@@Base+0x6fc>
    24b8:	add	x1, x1, #0xef3
    24bc:	mov	x0, x24
    24c0:	bl	1710 <_PyUnicode_EqualToASCIIString@plt>
    24c4:	cbz	w0, 2624 <PyInit__lsprof@@Base+0xd20>
    24c8:	ldr	x8, [x24]
    24cc:	subs	x8, x8, #0x1
    24d0:	str	x8, [x24]
    24d4:	b.ne	24e0 <PyInit__lsprof@@Base+0xbdc>  // b.any
    24d8:	mov	x0, x24
    24dc:	bl	1660 <_Py_Dealloc@plt>
    24e0:	ldr	x8, [x23, #16]
    24e4:	adrp	x0, 2000 <PyInit__lsprof@@Base+0x6fc>
    24e8:	add	x0, x0, #0xf0f
    24ec:	ldr	x1, [x8]
    24f0:	bl	15f0 <PyUnicode_FromFormat@plt>
    24f4:	mov	x25, x0
    24f8:	cbz	x25, 25e4 <PyInit__lsprof@@Base+0xce0>
    24fc:	movi	v0.2d, #0x0
    2500:	mov	x0, x22
    2504:	mov	x1, x20
    2508:	str	x21, [x20]
    250c:	str	x25, [x20, #24]
    2510:	stp	q0, q0, [x20, #32]
    2514:	str	q0, [x20, #64]
    2518:	bl	15e0 <RotatingTree_Add@plt>
    251c:	ldr	x21, [x19, #32]
    2520:	cbz	x21, 2530 <PyInit__lsprof@@Base+0xc2c>
    2524:	ldr	x8, [x21, #16]
    2528:	str	x8, [x19, #32]
    252c:	b	2540 <PyInit__lsprof@@Base+0xc3c>
    2530:	mov	w0, #0x20                  	// #32
    2534:	bl	1810 <PyMem_Malloc@plt>
    2538:	cbz	x0, 25f0 <PyInit__lsprof@@Base+0xcec>
    253c:	mov	x21, x0
    2540:	str	x20, [x21, #24]
    2544:	str	xzr, [x21, #8]
    2548:	ldr	x8, [x19, #24]
    254c:	str	x8, [x21, #16]
    2550:	str	x21, [x19, #24]
    2554:	ldr	x9, [x20, #64]
    2558:	add	x9, x9, #0x1
    255c:	str	x9, [x20, #64]
    2560:	cbz	x8, 25c4 <PyInit__lsprof@@Base+0xcc0>
    2564:	ldr	w9, [x19, #40]
    2568:	tbz	w9, #1, 25c4 <PyInit__lsprof@@Base+0xcc0>
    256c:	ldr	x8, [x8, #24]
    2570:	mov	x1, x20
    2574:	add	x22, x8, #0x48
    2578:	mov	x0, x22
    257c:	bl	1750 <RotatingTree_Get@plt>
    2580:	mov	x23, x0
    2584:	cbnz	x0, 25b8 <PyInit__lsprof@@Base+0xcb4>
    2588:	mov	w0, #0x40                  	// #64
    258c:	bl	1810 <PyMem_Malloc@plt>
    2590:	cbz	x0, 25d4 <PyInit__lsprof@@Base+0xcd0>
    2594:	mov	x23, x0
    2598:	movi	v0.2d, #0x0
    259c:	str	x20, [x0]
    25a0:	stur	q0, [x0, #24]
    25a4:	stur	q0, [x0, #40]
    25a8:	str	xzr, [x0, #56]
    25ac:	mov	x0, x22
    25b0:	mov	x1, x23
    25b4:	bl	15e0 <RotatingTree_Add@plt>
    25b8:	ldr	x8, [x23, #56]
    25bc:	add	x8, x8, #0x1
    25c0:	str	x8, [x23, #56]
    25c4:	mov	x0, x19
    25c8:	bl	1d0c <PyInit__lsprof@@Base+0x408>
    25cc:	str	x0, [x21]
    25d0:	b	25fc <PyInit__lsprof@@Base+0xcf8>
    25d4:	ldr	w8, [x19, #40]
    25d8:	orr	w8, w8, #0x100
    25dc:	str	w8, [x19, #40]
    25e0:	b	25c4 <PyInit__lsprof@@Base+0xcc0>
    25e4:	bl	16b0 <PyErr_Clear@plt>
    25e8:	mov	x0, x20
    25ec:	bl	1640 <PyMem_Free@plt>
    25f0:	ldr	w8, [x19, #40]
    25f4:	orr	w8, w8, #0x100
    25f8:	str	w8, [x19, #40]
    25fc:	ldur	x0, [x29, #-8]
    2600:	ldp	x2, x1, [sp, #8]
    2604:	bl	1630 <PyErr_Restore@plt>
    2608:	ldp	x20, x19, [sp, #96]
    260c:	ldp	x22, x21, [sp, #80]
    2610:	ldp	x24, x23, [sp, #64]
    2614:	ldp	x26, x25, [sp, #48]
    2618:	ldp	x29, x30, [sp, #32]
    261c:	add	sp, sp, #0x70
    2620:	ret
    2624:	ldr	x8, [x23, #16]
    2628:	adrp	x0, 2000 <PyInit__lsprof@@Base+0x6fc>
    262c:	add	x0, x0, #0xf07
    2630:	mov	x1, x24
    2634:	ldr	x2, [x8]
    2638:	bl	15f0 <PyUnicode_FromFormat@plt>
    263c:	ldr	x8, [x24]
    2640:	mov	x25, x0
    2644:	subs	x8, x8, #0x1
    2648:	str	x8, [x24]
    264c:	b.ne	24f8 <PyInit__lsprof@@Base+0xbf4>  // b.any
    2650:	mov	x0, x24
    2654:	bl	1660 <_Py_Dealloc@plt>
    2658:	b	24f8 <PyInit__lsprof@@Base+0xbf4>
    265c:	stp	x29, x30, [sp, #-32]!
    2660:	stp	x20, x19, [sp, #16]
    2664:	mov	x29, sp
    2668:	ldr	x20, [x0, #24]
    266c:	cbz	x20, 26a8 <PyInit__lsprof@@Base+0xda4>
    2670:	mov	x19, x0
    2674:	add	x0, x0, #0x10
    2678:	bl	1750 <RotatingTree_Get@plt>
    267c:	cbz	x0, 2694 <PyInit__lsprof@@Base+0xd90>
    2680:	mov	x2, x0
    2684:	mov	x0, x19
    2688:	mov	x1, x20
    268c:	bl	1c28 <PyInit__lsprof@@Base+0x324>
    2690:	b	269c <PyInit__lsprof@@Base+0xd98>
    2694:	ldr	x8, [x20, #16]
    2698:	str	x8, [x19, #24]
    269c:	ldr	x8, [x19, #32]
    26a0:	str	x8, [x20, #16]
    26a4:	str	x20, [x19, #32]
    26a8:	ldp	x20, x19, [sp, #16]
    26ac:	ldp	x29, x30, [sp], #32
    26b0:	ret

00000000000026b4 <RotatingTree_Add@@Base>:
    26b4:	ldr	x8, [x0]
    26b8:	cbz	x8, 26e8 <RotatingTree_Add@@Base+0x34>
    26bc:	ldr	x9, [x1]
    26c0:	mov	w10, #0x10                  	// #16
    26c4:	mov	w11, #0x8                   	// #8
    26c8:	ldr	x12, [x8]
    26cc:	add	x13, x8, #0x8
    26d0:	add	x14, x8, #0x10
    26d4:	cmp	x9, x12
    26d8:	csel	x12, x11, x10, cc  // cc = lo, ul, last
    26dc:	ldr	x8, [x8, x12]
    26e0:	csel	x0, x13, x14, cc  // cc = lo, ul, last
    26e4:	cbnz	x8, 26c8 <RotatingTree_Add@@Base+0x14>
    26e8:	stp	xzr, xzr, [x1, #8]
    26ec:	str	x1, [x0]
    26f0:	ret

00000000000026f4 <RotatingTree_Get@@Base>:
    26f4:	adrp	x9, 14000 <RotatingTree_Enum@@Base+0x117f8>
    26f8:	ldr	w11, [x9, #2208]
    26fc:	mov	x8, x0
    2700:	cmp	w11, #0x7
    2704:	b.hi	2724 <RotatingTree_Get@@Base+0x30>  // b.pmore
    2708:	adrp	x10, 14000 <RotatingTree_Enum@@Base+0x117f8>
    270c:	ldr	w11, [x10, #1320]
    2710:	mov	w12, #0x849f                	// #33951
    2714:	movk	w12, #0x10, lsl #16
    2718:	mul	w11, w11, w12
    271c:	str	w11, [x10, #1320]
    2720:	str	w11, [x9, #2208]
    2724:	lsr	w10, w11, #3
    2728:	str	w10, [x9, #2208]
    272c:	ldr	x0, [x8]
    2730:	and	w11, w11, #0x7
    2734:	cmp	w11, #0x4
    2738:	b.ne	27d4 <RotatingTree_Get@@Base+0xe0>  // b.any
    273c:	cbz	x0, 27f8 <RotatingTree_Get@@Base+0x104>
    2740:	ldr	x13, [x0]
    2744:	cmp	x13, x1
    2748:	b.eq	27f8 <RotatingTree_Get@@Base+0x104>  // b.none
    274c:	mov	w11, #0x849f                	// #33951
    2750:	movk	w11, #0x10, lsl #16
    2754:	adrp	x12, 14000 <RotatingTree_Enum@@Base+0x117f8>
    2758:	cmp	w10, #0x1
    275c:	mov	w14, w10
    2760:	b.hi	2770 <RotatingTree_Get@@Base+0x7c>  // b.pmore
    2764:	ldr	w10, [x12, #1320]
    2768:	mul	w14, w10, w11
    276c:	str	w14, [x12, #1320]
    2770:	cmp	x13, x1
    2774:	lsr	w10, w14, #1
    2778:	mov	x15, x0
    277c:	b.ls	279c <RotatingTree_Get@@Base+0xa8>  // b.plast
    2780:	ldr	x13, [x15, #8]!
    2784:	cbz	x13, 27fc <RotatingTree_Get@@Base+0x108>
    2788:	tbnz	w14, #0, 27bc <RotatingTree_Get@@Base+0xc8>
    278c:	ldr	x14, [x13, #16]
    2790:	str	x14, [x0, #8]
    2794:	str	x0, [x13, #16]
    2798:	b	27b4 <RotatingTree_Get@@Base+0xc0>
    279c:	ldr	x13, [x15, #16]!
    27a0:	cbz	x13, 27fc <RotatingTree_Get@@Base+0x108>
    27a4:	tbnz	w14, #0, 27bc <RotatingTree_Get@@Base+0xc8>
    27a8:	ldr	x14, [x13, #8]
    27ac:	str	x14, [x0, #16]
    27b0:	str	x0, [x13, #8]
    27b4:	str	x13, [x8]
    27b8:	b	27c0 <RotatingTree_Get@@Base+0xcc>
    27bc:	mov	x8, x15
    27c0:	mov	x0, x13
    27c4:	ldr	x13, [x13]
    27c8:	cmp	x13, x1
    27cc:	b.ne	2758 <RotatingTree_Get@@Base+0x64>  // b.any
    27d0:	b	2800 <RotatingTree_Get@@Base+0x10c>
    27d4:	cbz	x0, 27f8 <RotatingTree_Get@@Base+0x104>
    27d8:	mov	w8, #0x10                  	// #16
    27dc:	mov	w9, #0x8                   	// #8
    27e0:	ldr	x10, [x0]
    27e4:	cmp	x10, x1
    27e8:	b.eq	27f8 <RotatingTree_Get@@Base+0x104>  // b.none
    27ec:	csel	x10, x9, x8, hi  // hi = pmore
    27f0:	ldr	x0, [x0, x10]
    27f4:	cbnz	x0, 27e0 <RotatingTree_Get@@Base+0xec>
    27f8:	ret
    27fc:	mov	x0, xzr
    2800:	str	w10, [x9, #2208]
    2804:	ret

0000000000002808 <RotatingTree_Enum@@Base>:
    2808:	stp	x29, x30, [sp, #-48]!
    280c:	stp	x22, x21, [sp, #16]
    2810:	stp	x20, x19, [sp, #32]
    2814:	mov	x29, sp
    2818:	mov	x19, x2
    281c:	mov	x20, x1
    2820:	mov	x21, x0
    2824:	cbz	x21, 2858 <RotatingTree_Enum@@Base+0x50>
    2828:	ldr	x0, [x21, #8]
    282c:	mov	x1, x20
    2830:	mov	x2, x19
    2834:	bl	1720 <RotatingTree_Enum@plt>
    2838:	cbnz	w0, 285c <RotatingTree_Enum@@Base+0x54>
    283c:	ldr	x22, [x21, #16]
    2840:	mov	x0, x21
    2844:	mov	x1, x19
    2848:	blr	x20
    284c:	mov	x21, x22
    2850:	cbz	w0, 2824 <RotatingTree_Enum@@Base+0x1c>
    2854:	b	285c <RotatingTree_Enum@@Base+0x54>
    2858:	mov	w0, wzr
    285c:	ldp	x20, x19, [sp, #32]
    2860:	ldp	x22, x21, [sp, #16]
    2864:	ldp	x29, x30, [sp], #48
    2868:	ret

Disassembly of section .fini:

000000000000286c <.fini>:
    286c:	stp	x29, x30, [sp, #-16]!
    2870:	mov	x29, sp
    2874:	ldp	x29, x30, [sp], #16
    2878:	ret
