
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-random-seed_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401078 <_init>:
  401078:	stp	x29, x30, [sp, #-16]!
  40107c:	mov	x29, sp
  401080:	bl	401370 <call_weak_fn>
  401084:	ldp	x29, x30, [sp], #16
  401088:	ret

Disassembly of section .plt:

0000000000401090 <__libc_start_main@plt-0x20>:
  401090:	stp	x16, x30, [sp, #-16]!
  401094:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401098:	ldr	x17, [x16, #3776]
  40109c:	add	x16, x16, #0xec0
  4010a0:	br	x17
  4010a4:	nop
  4010a8:	nop
  4010ac:	nop

00000000004010b0 <__libc_start_main@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4010b4:	ldr	x17, [x16, #3784]
  4010b8:	add	x16, x16, #0xec8
  4010bc:	br	x17

00000000004010c0 <abort@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4010c4:	ldr	x17, [x16, #3792]
  4010c8:	add	x16, x16, #0xed0
  4010cc:	br	x17

00000000004010d0 <__gmon_start__@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4010d4:	ldr	x17, [x16, #3800]
  4010d8:	add	x16, x16, #0xed8
  4010dc:	br	x17

00000000004010e0 <ask_password_agent_close@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4010e4:	ldr	x17, [x16, #3808]
  4010e8:	add	x16, x16, #0xee0
  4010ec:	br	x17

00000000004010f0 <polkit_agent_close@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4010f4:	ldr	x17, [x16, #3816]
  4010f8:	add	x16, x16, #0xee8
  4010fc:	br	x17

0000000000401100 <pager_close@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401104:	ldr	x17, [x16, #3824]
  401108:	add	x16, x16, #0xef0
  40110c:	br	x17

0000000000401110 <mac_selinux_finish@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401114:	ldr	x17, [x16, #3832]
  401118:	add	x16, x16, #0xef8
  40111c:	br	x17

0000000000401120 <log_setup_service@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401124:	ldr	x17, [x16, #3840]
  401128:	add	x16, x16, #0xf00
  40112c:	br	x17

0000000000401130 <log_get_max_level_realm@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401134:	ldr	x17, [x16, #3848]
  401138:	add	x16, x16, #0xf08
  40113c:	br	x17

0000000000401140 <log_internal_realm@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401144:	ldr	x17, [x16, #3856]
  401148:	add	x16, x16, #0xf10
  40114c:	br	x17

0000000000401150 <abs@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401154:	ldr	x17, [x16, #3864]
  401158:	add	x16, x16, #0xf18
  40115c:	br	x17

0000000000401160 <umask@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401164:	ldr	x17, [x16, #3872]
  401168:	add	x16, x16, #0xf20
  40116c:	br	x17

0000000000401170 <random_pool_size@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401174:	ldr	x17, [x16, #3880]
  401178:	add	x16, x16, #0xf28
  40117c:	br	x17

0000000000401180 <mkdir_parents@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401184:	ldr	x17, [x16, #3888]
  401188:	add	x16, x16, #0xf30
  40118c:	br	x17

0000000000401190 <strcmp@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401194:	ldr	x17, [x16, #3896]
  401198:	add	x16, x16, #0xf38
  40119c:	br	x17

00000000004011a0 <open64@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4011a4:	ldr	x17, [x16, #3904]
  4011a8:	add	x16, x16, #0xf40
  4011ac:	br	x17

00000000004011b0 <__errno_location@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4011b4:	ldr	x17, [x16, #3912]
  4011b8:	add	x16, x16, #0xf48
  4011bc:	br	x17

00000000004011c0 <malloc@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4011c4:	ldr	x17, [x16, #3920]
  4011c8:	add	x16, x16, #0xf50
  4011cc:	br	x17

00000000004011d0 <log_oom_internal@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4011d4:	ldr	x17, [x16, #3928]
  4011d8:	add	x16, x16, #0xf58
  4011dc:	br	x17

00000000004011e0 <sd_id128_get_machine@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4011e4:	ldr	x17, [x16, #3936]
  4011e8:	add	x16, x16, #0xf60
  4011ec:	br	x17

00000000004011f0 <loop_write@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4011f4:	ldr	x17, [x16, #3944]
  4011f8:	add	x16, x16, #0xf68
  4011fc:	br	x17

0000000000401200 <loop_read@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401204:	ldr	x17, [x16, #3952]
  401208:	add	x16, x16, #0xf70
  40120c:	br	x17

0000000000401210 <lseek64@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401214:	ldr	x17, [x16, #3960]
  401218:	add	x16, x16, #0xf78
  40121c:	br	x17

0000000000401220 <fremovexattr@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401224:	ldr	x17, [x16, #3968]
  401228:	add	x16, x16, #0xf80
  40122c:	br	x17

0000000000401230 <fsync_full@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401234:	ldr	x17, [x16, #3976]
  401238:	add	x16, x16, #0xf88
  40123c:	br	x17

0000000000401240 <memcpy@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401244:	ldr	x17, [x16, #3984]
  401248:	add	x16, x16, #0xf90
  40124c:	br	x17

0000000000401250 <ioctl@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401254:	ldr	x17, [x16, #3992]
  401258:	add	x16, x16, #0xf98
  40125c:	br	x17

0000000000401260 <fchmod_and_chown@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401264:	ldr	x17, [x16, #4000]
  401268:	add	x16, x16, #0xfa0
  40126c:	br	x17

0000000000401270 <getrandom@plt>:
  401270:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401274:	ldr	x17, [x16, #4008]
  401278:	add	x16, x16, #0xfa8
  40127c:	br	x17

0000000000401280 <ftruncate64@plt>:
  401280:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401284:	ldr	x17, [x16, #4016]
  401288:	add	x16, x16, #0xfb0
  40128c:	br	x17

0000000000401290 <fsetxattr@plt>:
  401290:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401294:	ldr	x17, [x16, #4024]
  401298:	add	x16, x16, #0xfb8
  40129c:	br	x17

00000000004012a0 <safe_close@plt>:
  4012a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4012a4:	ldr	x17, [x16, #4032]
  4012a8:	add	x16, x16, #0xfc0
  4012ac:	br	x17

00000000004012b0 <free@plt>:
  4012b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4012b4:	ldr	x17, [x16, #4040]
  4012b8:	add	x16, x16, #0xfc8
  4012bc:	br	x17

00000000004012c0 <log_assert_failed_realm@plt>:
  4012c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4012c4:	ldr	x17, [x16, #4048]
  4012c8:	add	x16, x16, #0xfd0
  4012cc:	br	x17

00000000004012d0 <getenv@plt>:
  4012d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4012d4:	ldr	x17, [x16, #4056]
  4012d8:	add	x16, x16, #0xfd8
  4012dc:	br	x17

00000000004012e0 <parse_boolean@plt>:
  4012e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4012e4:	ldr	x17, [x16, #4064]
  4012e8:	add	x16, x16, #0xfe0
  4012ec:	br	x17

00000000004012f0 <fgetxattr_malloc@plt>:
  4012f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  4012f4:	ldr	x17, [x16, #4072]
  4012f8:	add	x16, x16, #0xfe8
  4012fc:	br	x17

0000000000401300 <access@plt>:
  401300:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401304:	ldr	x17, [x16, #4080]
  401308:	add	x16, x16, #0xff0
  40130c:	br	x17

0000000000401310 <__fxstat64@plt>:
  401310:	adrp	x16, 41f000 <__FRAME_END__+0x1b218>
  401314:	ldr	x17, [x16, #4088]
  401318:	add	x16, x16, #0xff8
  40131c:	br	x17

Disassembly of section .text:

0000000000401320 <_start>:
  401320:	mov	x29, #0x0                   	// #0
  401324:	mov	x30, #0x0                   	// #0
  401328:	mov	x5, x0
  40132c:	ldr	x1, [sp]
  401330:	add	x2, sp, #0x8
  401334:	mov	x6, sp
  401338:	movz	x0, #0x0, lsl #48
  40133c:	movk	x0, #0x0, lsl #32
  401340:	movk	x0, #0x40, lsl #16
  401344:	movk	x0, #0x14e8
  401348:	movz	x3, #0x0, lsl #48
  40134c:	movk	x3, #0x0, lsl #32
  401350:	movk	x3, #0x40, lsl #16
  401354:	movk	x3, #0x33a0
  401358:	movz	x4, #0x0, lsl #48
  40135c:	movk	x4, #0x0, lsl #32
  401360:	movk	x4, #0x40, lsl #16
  401364:	movk	x4, #0x3420
  401368:	bl	4010b0 <__libc_start_main@plt>
  40136c:	bl	4010c0 <abort@plt>

0000000000401370 <call_weak_fn>:
  401370:	adrp	x0, 41f000 <__FRAME_END__+0x1b218>
  401374:	ldr	x0, [x0, #3736]
  401378:	cbz	x0, 401380 <call_weak_fn+0x10>
  40137c:	b	4010d0 <__gmon_start__@plt>
  401380:	ret

0000000000401384 <deregister_tm_clones>:
  401384:	stp	x29, x30, [sp, #-32]!
  401388:	mov	x29, sp
  40138c:	adrp	x0, 420000 <completed.8445>
  401390:	add	x0, x0, #0x0
  401394:	str	x0, [sp, #24]
  401398:	ldr	x0, [sp, #24]
  40139c:	str	x0, [sp, #24]
  4013a0:	ldr	x1, [sp, #24]
  4013a4:	adrp	x0, 420000 <completed.8445>
  4013a8:	add	x0, x0, #0x0
  4013ac:	cmp	x1, x0
  4013b0:	b.eq	4013ec <deregister_tm_clones+0x68>  // b.none
  4013b4:	adrp	x0, 403000 <may_credit+0x3d8>
  4013b8:	add	x0, x0, #0x448
  4013bc:	ldr	x0, [x0]
  4013c0:	str	x0, [sp, #16]
  4013c4:	ldr	x0, [sp, #16]
  4013c8:	str	x0, [sp, #16]
  4013cc:	ldr	x0, [sp, #16]
  4013d0:	cmp	x0, #0x0
  4013d4:	b.eq	4013f0 <deregister_tm_clones+0x6c>  // b.none
  4013d8:	ldr	x1, [sp, #16]
  4013dc:	adrp	x0, 420000 <completed.8445>
  4013e0:	add	x0, x0, #0x0
  4013e4:	blr	x1
  4013e8:	b	4013f0 <deregister_tm_clones+0x6c>
  4013ec:	nop
  4013f0:	ldp	x29, x30, [sp], #32
  4013f4:	ret

00000000004013f8 <register_tm_clones>:
  4013f8:	stp	x29, x30, [sp, #-48]!
  4013fc:	mov	x29, sp
  401400:	adrp	x0, 420000 <completed.8445>
  401404:	add	x0, x0, #0x0
  401408:	str	x0, [sp, #40]
  40140c:	ldr	x0, [sp, #40]
  401410:	str	x0, [sp, #40]
  401414:	ldr	x1, [sp, #40]
  401418:	adrp	x0, 420000 <completed.8445>
  40141c:	add	x0, x0, #0x0
  401420:	sub	x0, x1, x0
  401424:	asr	x0, x0, #3
  401428:	lsr	x1, x0, #63
  40142c:	add	x0, x1, x0
  401430:	asr	x0, x0, #1
  401434:	str	x0, [sp, #32]
  401438:	ldr	x0, [sp, #32]
  40143c:	cmp	x0, #0x0
  401440:	b.eq	401480 <register_tm_clones+0x88>  // b.none
  401444:	adrp	x0, 403000 <may_credit+0x3d8>
  401448:	add	x0, x0, #0x450
  40144c:	ldr	x0, [x0]
  401450:	str	x0, [sp, #24]
  401454:	ldr	x0, [sp, #24]
  401458:	str	x0, [sp, #24]
  40145c:	ldr	x0, [sp, #24]
  401460:	cmp	x0, #0x0
  401464:	b.eq	401484 <register_tm_clones+0x8c>  // b.none
  401468:	ldr	x2, [sp, #24]
  40146c:	ldr	x1, [sp, #32]
  401470:	adrp	x0, 420000 <completed.8445>
  401474:	add	x0, x0, #0x0
  401478:	blr	x2
  40147c:	b	401484 <register_tm_clones+0x8c>
  401480:	nop
  401484:	ldp	x29, x30, [sp], #48
  401488:	ret

000000000040148c <__do_global_dtors_aux>:
  40148c:	stp	x29, x30, [sp, #-16]!
  401490:	mov	x29, sp
  401494:	adrp	x0, 420000 <completed.8445>
  401498:	add	x0, x0, #0x0
  40149c:	ldrb	w0, [x0]
  4014a0:	and	x0, x0, #0xff
  4014a4:	cmp	x0, #0x0
  4014a8:	b.ne	4014c4 <__do_global_dtors_aux+0x38>  // b.any
  4014ac:	bl	401384 <deregister_tm_clones>
  4014b0:	adrp	x0, 420000 <completed.8445>
  4014b4:	add	x0, x0, #0x0
  4014b8:	mov	w1, #0x1                   	// #1
  4014bc:	strb	w1, [x0]
  4014c0:	b	4014c8 <__do_global_dtors_aux+0x3c>
  4014c4:	nop
  4014c8:	ldp	x29, x30, [sp], #16
  4014cc:	ret

00000000004014d0 <frame_dummy>:
  4014d0:	stp	x29, x30, [sp, #-16]!
  4014d4:	mov	x29, sp
  4014d8:	bl	4013f8 <register_tm_clones>
  4014dc:	nop
  4014e0:	ldp	x29, x30, [sp], #16
  4014e4:	ret

00000000004014e8 <main>:
  4014e8:	sub	sp, sp, #0x30
  4014ec:	stp	x29, x30, [sp, #32]
  4014f0:	add	x29, sp, #0x20
  4014f4:	mov	w8, wzr
  4014f8:	mov	w9, #0x1                   	// #1
  4014fc:	stur	wzr, [x29, #-4]
  401500:	stur	w0, [x29, #-8]
  401504:	str	x1, [sp, #16]
  401508:	ldur	w0, [x29, #-8]
  40150c:	ldr	x1, [sp, #16]
  401510:	str	w8, [sp, #8]
  401514:	str	w9, [sp, #4]
  401518:	bl	401560 <save_argc_argv>
  40151c:	ldur	w0, [x29, #-8]
  401520:	ldr	x1, [sp, #16]
  401524:	bl	401594 <run>
  401528:	str	w0, [sp, #12]
  40152c:	bl	4010e0 <ask_password_agent_close@plt>
  401530:	bl	4010f0 <polkit_agent_close@plt>
  401534:	bl	401100 <pager_close@plt>
  401538:	bl	401110 <mac_selinux_finish@plt>
  40153c:	bl	402b58 <static_destruct>
  401540:	ldr	w8, [sp, #12]
  401544:	cmp	w8, #0x0
  401548:	ldr	w8, [sp, #4]
  40154c:	ldr	w9, [sp, #8]
  401550:	csel	w0, w8, w9, lt  // lt = tstop
  401554:	ldp	x29, x30, [sp, #32]
  401558:	add	sp, sp, #0x30
  40155c:	ret

0000000000401560 <save_argc_argv>:
  401560:	sub	sp, sp, #0x10
  401564:	adrp	x8, 420000 <completed.8445>
  401568:	add	x8, x8, #0x8
  40156c:	adrp	x9, 420000 <completed.8445>
  401570:	add	x9, x9, #0x10
  401574:	str	w0, [sp, #12]
  401578:	str	x1, [sp]
  40157c:	ldr	w10, [sp, #12]
  401580:	str	w10, [x8]
  401584:	ldr	x8, [sp]
  401588:	str	x8, [x9]
  40158c:	add	sp, sp, #0x10
  401590:	ret

0000000000401594 <run>:
  401594:	stp	x29, x30, [sp, #-32]!
  401598:	str	x28, [sp, #16]
  40159c:	mov	x29, sp
  4015a0:	sub	sp, sp, #0x360
  4015a4:	mov	w8, #0xffffffff            	// #-1
  4015a8:	mov	x9, xzr
  4015ac:	adrp	x10, 403000 <may_credit+0x3d8>
  4015b0:	add	x10, x10, #0x4a1
  4015b4:	adrp	x11, 403000 <may_credit+0x3d8>
  4015b8:	add	x11, x11, #0x458
  4015bc:	add	x11, x11, #0x3
  4015c0:	adrp	x12, 403000 <may_credit+0x3d8>
  4015c4:	add	x12, x12, #0x479
  4015c8:	stur	w0, [x29, #-8]
  4015cc:	stur	x1, [x29, #-16]
  4015d0:	stur	w8, [x29, #-20]
  4015d4:	stur	w8, [x29, #-24]
  4015d8:	stur	x9, [x29, #-40]
  4015dc:	str	x10, [sp, #152]
  4015e0:	str	x11, [sp, #144]
  4015e4:	str	x12, [sp, #136]
  4015e8:	bl	401120 <log_setup_service@plt>
  4015ec:	ldur	w8, [x29, #-8]
  4015f0:	cmp	w8, #0x2
  4015f4:	b.eq	401688 <run+0xf4>  // b.none
  4015f8:	mov	w8, #0x3                   	// #3
  4015fc:	stur	w8, [x29, #-192]
  401600:	mov	w8, #0x16                  	// #22
  401604:	movk	w8, #0x4000, lsl #16
  401608:	stur	w8, [x29, #-196]
  40160c:	stur	wzr, [x29, #-200]
  401610:	ldur	w0, [x29, #-200]
  401614:	bl	401130 <log_get_max_level_realm@plt>
  401618:	ldur	w8, [x29, #-192]
  40161c:	and	w8, w8, #0x7
  401620:	cmp	w0, w8
  401624:	b.lt	401658 <run+0xc4>  // b.tstop
  401628:	ldur	w8, [x29, #-200]
  40162c:	ldur	w9, [x29, #-192]
  401630:	orr	w0, w9, w8, lsl #10
  401634:	ldur	w1, [x29, #-196]
  401638:	ldr	x2, [sp, #144]
  40163c:	mov	w3, #0x74                  	// #116
  401640:	ldr	x4, [sp, #136]
  401644:	adrp	x5, 403000 <may_credit+0x3d8>
  401648:	add	x5, x5, #0x47d
  40164c:	bl	401140 <log_internal_realm@plt>
  401650:	str	w0, [sp, #132]
  401654:	b	40166c <run+0xd8>
  401658:	ldur	w0, [x29, #-196]
  40165c:	bl	401150 <abs@plt>
  401660:	mov	w8, wzr
  401664:	subs	w8, w8, w0, uxtb
  401668:	str	w8, [sp, #132]
  40166c:	ldr	w8, [sp, #132]
  401670:	stur	w8, [x29, #-204]
  401674:	ldur	w8, [x29, #-204]
  401678:	stur	w8, [x29, #-4]
  40167c:	mov	w8, #0x1                   	// #1
  401680:	stur	w8, [x29, #-208]
  401684:	b	402b2c <run+0x1598>
  401688:	mov	w0, #0x12                  	// #18
  40168c:	bl	401160 <umask@plt>
  401690:	bl	401170 <random_pool_size@plt>
  401694:	stur	x0, [x29, #-48]
  401698:	ldr	x0, [sp, #152]
  40169c:	mov	w1, #0x1ed                 	// #493
  4016a0:	bl	401180 <mkdir_parents@plt>
  4016a4:	stur	w0, [x29, #-188]
  4016a8:	ldur	w8, [x29, #-188]
  4016ac:	cmp	w8, #0x0
  4016b0:	cset	w8, ge  // ge = tcont
  4016b4:	tbnz	w8, #0, 401744 <run+0x1b0>
  4016b8:	mov	w8, #0x3                   	// #3
  4016bc:	stur	w8, [x29, #-212]
  4016c0:	ldur	w8, [x29, #-188]
  4016c4:	stur	w8, [x29, #-216]
  4016c8:	stur	wzr, [x29, #-220]
  4016cc:	ldur	w0, [x29, #-220]
  4016d0:	bl	401130 <log_get_max_level_realm@plt>
  4016d4:	ldur	w8, [x29, #-212]
  4016d8:	and	w8, w8, #0x7
  4016dc:	cmp	w0, w8
  4016e0:	b.lt	401714 <run+0x180>  // b.tstop
  4016e4:	ldur	w8, [x29, #-220]
  4016e8:	ldur	w9, [x29, #-212]
  4016ec:	orr	w0, w9, w8, lsl #10
  4016f0:	ldur	w1, [x29, #-216]
  4016f4:	ldr	x2, [sp, #144]
  4016f8:	mov	w3, #0x7c                  	// #124
  4016fc:	ldr	x4, [sp, #136]
  401700:	adrp	x5, 403000 <may_credit+0x3d8>
  401704:	add	x5, x5, #0x4be
  401708:	bl	401140 <log_internal_realm@plt>
  40170c:	str	w0, [sp, #128]
  401710:	b	401728 <run+0x194>
  401714:	ldur	w0, [x29, #-216]
  401718:	bl	401150 <abs@plt>
  40171c:	mov	w8, wzr
  401720:	subs	w8, w8, w0, uxtb
  401724:	str	w8, [sp, #128]
  401728:	ldr	w8, [sp, #128]
  40172c:	stur	w8, [x29, #-224]
  401730:	ldur	w8, [x29, #-224]
  401734:	stur	w8, [x29, #-4]
  401738:	mov	w8, #0x1                   	// #1
  40173c:	stur	w8, [x29, #-208]
  401740:	b	402b2c <run+0x1598>
  401744:	ldur	x8, [x29, #-16]
  401748:	ldr	x0, [x8, #8]
  40174c:	adrp	x1, 403000 <may_credit+0x3d8>
  401750:	add	x1, x1, #0x4ee
  401754:	bl	401190 <strcmp@plt>
  401758:	cbnz	w0, 401a04 <run+0x470>
  40175c:	ldr	x0, [sp, #152]
  401760:	mov	w1, #0x142                 	// #322
  401764:	movk	w1, #0x8, lsl #16
  401768:	mov	w2, #0x180                 	// #384
  40176c:	bl	4011a0 <open64@plt>
  401770:	stur	w0, [x29, #-20]
  401774:	ldur	w8, [x29, #-20]
  401778:	cmp	w8, #0x0
  40177c:	cset	w8, ge  // ge = tcont
  401780:	tbnz	w8, #0, 401930 <run+0x39c>
  401784:	bl	4011b0 <__errno_location@plt>
  401788:	ldr	w8, [x0]
  40178c:	mov	w9, wzr
  401790:	subs	w8, w9, w8
  401794:	stur	w8, [x29, #-228]
  401798:	mov	w8, #0x0                   	// #0
  40179c:	sturb	w8, [x29, #-26]
  4017a0:	ldr	x0, [sp, #152]
  4017a4:	mov	w1, #0x100                 	// #256
  4017a8:	movk	w1, #0x8, lsl #16
  4017ac:	bl	4011a0 <open64@plt>
  4017b0:	stur	w0, [x29, #-20]
  4017b4:	ldur	w8, [x29, #-20]
  4017b8:	cmp	w8, #0x0
  4017bc:	cset	w8, ge  // ge = tcont
  4017c0:	tbnz	w8, #0, 40192c <run+0x398>
  4017c4:	bl	4011b0 <__errno_location@plt>
  4017c8:	ldr	w8, [x0]
  4017cc:	cmp	w8, #0x2
  4017d0:	cset	w8, eq  // eq = none
  4017d4:	and	w8, w8, #0x1
  4017d8:	sturb	w8, [x29, #-229]
  4017dc:	ldurb	w8, [x29, #-229]
  4017e0:	mov	w9, #0x7                   	// #7
  4017e4:	mov	w10, #0x3                   	// #3
  4017e8:	tst	w8, #0x1
  4017ec:	csel	w8, w9, w10, ne  // ne = any
  4017f0:	stur	w8, [x29, #-236]
  4017f4:	ldur	w8, [x29, #-228]
  4017f8:	stur	w8, [x29, #-240]
  4017fc:	stur	wzr, [x29, #-244]
  401800:	ldur	w0, [x29, #-244]
  401804:	bl	401130 <log_get_max_level_realm@plt>
  401808:	ldur	w8, [x29, #-236]
  40180c:	and	w8, w8, #0x7
  401810:	cmp	w0, w8
  401814:	b.lt	401848 <run+0x2b4>  // b.tstop
  401818:	ldur	w8, [x29, #-244]
  40181c:	ldur	w9, [x29, #-236]
  401820:	orr	w0, w9, w8, lsl #10
  401824:	ldur	w1, [x29, #-240]
  401828:	ldr	x2, [sp, #144]
  40182c:	mov	w3, #0x8e                  	// #142
  401830:	ldr	x4, [sp, #136]
  401834:	adrp	x5, 403000 <may_credit+0x3d8>
  401838:	add	x5, x5, #0x4f3
  40183c:	bl	401140 <log_internal_realm@plt>
  401840:	str	w0, [sp, #124]
  401844:	b	40185c <run+0x2c8>
  401848:	ldur	w0, [x29, #-240]
  40184c:	bl	401150 <abs@plt>
  401850:	mov	w8, wzr
  401854:	subs	w8, w8, w0, uxtb
  401858:	str	w8, [sp, #124]
  40185c:	ldr	w8, [sp, #124]
  401860:	stur	w8, [x29, #-248]
  401864:	ldurb	w8, [x29, #-229]
  401868:	mov	w9, #0x7                   	// #7
  40186c:	mov	w10, #0x3                   	// #3
  401870:	tst	w8, #0x1
  401874:	csel	w8, w9, w10, ne  // ne = any
  401878:	stur	w8, [x29, #-252]
  40187c:	bl	4011b0 <__errno_location@plt>
  401880:	ldr	w8, [x0]
  401884:	stur	w8, [x29, #-256]
  401888:	str	wzr, [sp, #604]
  40188c:	ldr	w0, [sp, #604]
  401890:	bl	401130 <log_get_max_level_realm@plt>
  401894:	ldur	w8, [x29, #-252]
  401898:	and	w8, w8, #0x7
  40189c:	cmp	w0, w8
  4018a0:	b.lt	4018d4 <run+0x340>  // b.tstop
  4018a4:	ldr	w8, [sp, #604]
  4018a8:	ldur	w9, [x29, #-252]
  4018ac:	orr	w0, w9, w8, lsl #10
  4018b0:	ldur	w1, [x29, #-256]
  4018b4:	ldr	x2, [sp, #144]
  4018b8:	mov	w3, #0x90                  	// #144
  4018bc:	ldr	x4, [sp, #136]
  4018c0:	adrp	x5, 403000 <may_credit+0x3d8>
  4018c4:	add	x5, x5, #0x52f
  4018c8:	bl	401140 <log_internal_realm@plt>
  4018cc:	str	w0, [sp, #120]
  4018d0:	b	4018e8 <run+0x354>
  4018d4:	ldur	w0, [x29, #-256]
  4018d8:	bl	401150 <abs@plt>
  4018dc:	mov	w8, wzr
  4018e0:	subs	w8, w8, w0, uxtb
  4018e4:	str	w8, [sp, #120]
  4018e8:	ldr	w8, [sp, #120]
  4018ec:	str	w8, [sp, #600]
  4018f0:	ldr	w8, [sp, #600]
  4018f4:	stur	w8, [x29, #-188]
  4018f8:	ldurb	w8, [x29, #-229]
  4018fc:	tbnz	w8, #0, 401904 <run+0x370>
  401900:	b	401910 <run+0x37c>
  401904:	mov	w8, wzr
  401908:	str	w8, [sp, #116]
  40190c:	b	401918 <run+0x384>
  401910:	ldur	w8, [x29, #-188]
  401914:	str	w8, [sp, #116]
  401918:	ldr	w8, [sp, #116]
  40191c:	stur	w8, [x29, #-4]
  401920:	mov	w8, #0x1                   	// #1
  401924:	stur	w8, [x29, #-208]
  401928:	b	402b2c <run+0x1598>
  40192c:	b	401938 <run+0x3a4>
  401930:	mov	w8, #0x1                   	// #1
  401934:	sturb	w8, [x29, #-26]
  401938:	adrp	x0, 403000 <may_credit+0x3d8>
  40193c:	add	x0, x0, #0x56b
  401940:	mov	w1, #0x102                 	// #258
  401944:	movk	w1, #0x8, lsl #16
  401948:	mov	w2, #0x180                 	// #384
  40194c:	bl	4011a0 <open64@plt>
  401950:	stur	w0, [x29, #-24]
  401954:	ldur	w8, [x29, #-24]
  401958:	cmp	w8, #0x0
  40195c:	cset	w8, ge  // ge = tcont
  401960:	tbnz	w8, #0, 4019f4 <run+0x460>
  401964:	mov	w8, #0x3                   	// #3
  401968:	str	w8, [sp, #596]
  40196c:	bl	4011b0 <__errno_location@plt>
  401970:	ldr	w8, [x0]
  401974:	str	w8, [sp, #592]
  401978:	str	wzr, [sp, #588]
  40197c:	ldr	w0, [sp, #588]
  401980:	bl	401130 <log_get_max_level_realm@plt>
  401984:	ldr	w8, [sp, #596]
  401988:	and	w8, w8, #0x7
  40198c:	cmp	w0, w8
  401990:	b.lt	4019c4 <run+0x430>  // b.tstop
  401994:	ldr	w8, [sp, #588]
  401998:	ldr	w9, [sp, #596]
  40199c:	orr	w0, w9, w8, lsl #10
  4019a0:	ldr	w1, [sp, #592]
  4019a4:	ldr	x2, [sp, #144]
  4019a8:	mov	w3, #0x98                  	// #152
  4019ac:	ldr	x4, [sp, #136]
  4019b0:	adrp	x5, 403000 <may_credit+0x3d8>
  4019b4:	add	x5, x5, #0x578
  4019b8:	bl	401140 <log_internal_realm@plt>
  4019bc:	str	w0, [sp, #112]
  4019c0:	b	4019d8 <run+0x444>
  4019c4:	ldr	w0, [sp, #592]
  4019c8:	bl	401150 <abs@plt>
  4019cc:	mov	w8, wzr
  4019d0:	subs	w8, w8, w0, uxtb
  4019d4:	str	w8, [sp, #112]
  4019d8:	ldr	w8, [sp, #112]
  4019dc:	str	w8, [sp, #584]
  4019e0:	ldr	w8, [sp, #584]
  4019e4:	stur	w8, [x29, #-4]
  4019e8:	mov	w8, #0x1                   	// #1
  4019ec:	stur	w8, [x29, #-208]
  4019f0:	b	402b2c <run+0x1598>
  4019f4:	mov	w8, #0x1                   	// #1
  4019f8:	sturb	w8, [x29, #-25]
  4019fc:	sturb	w8, [x29, #-27]
  401a00:	b	401c3c <run+0x6a8>
  401a04:	ldur	x8, [x29, #-16]
  401a08:	ldr	x0, [x8, #8]
  401a0c:	adrp	x1, 403000 <may_credit+0x3d8>
  401a10:	add	x1, x1, #0x598
  401a14:	bl	401190 <strcmp@plt>
  401a18:	cbnz	w0, 401ba4 <run+0x610>
  401a1c:	adrp	x0, 403000 <may_credit+0x3d8>
  401a20:	add	x0, x0, #0x56b
  401a24:	mov	w1, #0x100                 	// #256
  401a28:	movk	w1, #0x8, lsl #16
  401a2c:	bl	4011a0 <open64@plt>
  401a30:	stur	w0, [x29, #-24]
  401a34:	ldur	w8, [x29, #-24]
  401a38:	cmp	w8, #0x0
  401a3c:	cset	w8, ge  // ge = tcont
  401a40:	tbnz	w8, #0, 401ad4 <run+0x540>
  401a44:	mov	w8, #0x3                   	// #3
  401a48:	str	w8, [sp, #580]
  401a4c:	bl	4011b0 <__errno_location@plt>
  401a50:	ldr	w8, [x0]
  401a54:	str	w8, [sp, #576]
  401a58:	str	wzr, [sp, #572]
  401a5c:	ldr	w0, [sp, #572]
  401a60:	bl	401130 <log_get_max_level_realm@plt>
  401a64:	ldr	w8, [sp, #580]
  401a68:	and	w8, w8, #0x7
  401a6c:	cmp	w0, w8
  401a70:	b.lt	401aa4 <run+0x510>  // b.tstop
  401a74:	ldr	w8, [sp, #572]
  401a78:	ldr	w9, [sp, #580]
  401a7c:	orr	w0, w9, w8, lsl #10
  401a80:	ldr	w1, [sp, #576]
  401a84:	ldr	x2, [sp, #144]
  401a88:	mov	w3, #0xa1                  	// #161
  401a8c:	ldr	x4, [sp, #136]
  401a90:	adrp	x5, 403000 <may_credit+0x3d8>
  401a94:	add	x5, x5, #0x578
  401a98:	bl	401140 <log_internal_realm@plt>
  401a9c:	str	w0, [sp, #108]
  401aa0:	b	401ab8 <run+0x524>
  401aa4:	ldr	w0, [sp, #576]
  401aa8:	bl	401150 <abs@plt>
  401aac:	mov	w8, wzr
  401ab0:	subs	w8, w8, w0, uxtb
  401ab4:	str	w8, [sp, #108]
  401ab8:	ldr	w8, [sp, #108]
  401abc:	str	w8, [sp, #568]
  401ac0:	ldr	w8, [sp, #568]
  401ac4:	stur	w8, [x29, #-4]
  401ac8:	mov	w8, #0x1                   	// #1
  401acc:	stur	w8, [x29, #-208]
  401ad0:	b	402b2c <run+0x1598>
  401ad4:	ldr	x0, [sp, #152]
  401ad8:	mov	w1, #0x141                 	// #321
  401adc:	movk	w1, #0x8, lsl #16
  401ae0:	mov	w2, #0x180                 	// #384
  401ae4:	bl	4011a0 <open64@plt>
  401ae8:	stur	w0, [x29, #-20]
  401aec:	ldur	w8, [x29, #-20]
  401af0:	cmp	w8, #0x0
  401af4:	cset	w8, ge  // ge = tcont
  401af8:	tbnz	w8, #0, 401b8c <run+0x5f8>
  401afc:	mov	w8, #0x3                   	// #3
  401b00:	str	w8, [sp, #564]
  401b04:	bl	4011b0 <__errno_location@plt>
  401b08:	ldr	w8, [x0]
  401b0c:	str	w8, [sp, #560]
  401b10:	str	wzr, [sp, #556]
  401b14:	ldr	w0, [sp, #556]
  401b18:	bl	401130 <log_get_max_level_realm@plt>
  401b1c:	ldr	w8, [sp, #564]
  401b20:	and	w8, w8, #0x7
  401b24:	cmp	w0, w8
  401b28:	b.lt	401b5c <run+0x5c8>  // b.tstop
  401b2c:	ldr	w8, [sp, #556]
  401b30:	ldr	w9, [sp, #564]
  401b34:	orr	w0, w9, w8, lsl #10
  401b38:	ldr	w1, [sp, #560]
  401b3c:	ldr	x2, [sp, #144]
  401b40:	mov	w3, #0xa5                  	// #165
  401b44:	ldr	x4, [sp, #136]
  401b48:	adrp	x5, 403000 <may_credit+0x3d8>
  401b4c:	add	x5, x5, #0x59d
  401b50:	bl	401140 <log_internal_realm@plt>
  401b54:	str	w0, [sp, #104]
  401b58:	b	401b70 <run+0x5dc>
  401b5c:	ldr	w0, [sp, #560]
  401b60:	bl	401150 <abs@plt>
  401b64:	mov	w8, wzr
  401b68:	subs	w8, w8, w0, uxtb
  401b6c:	str	w8, [sp, #104]
  401b70:	ldr	w8, [sp, #104]
  401b74:	str	w8, [sp, #552]
  401b78:	ldr	w8, [sp, #552]
  401b7c:	stur	w8, [x29, #-4]
  401b80:	mov	w8, #0x1                   	// #1
  401b84:	stur	w8, [x29, #-208]
  401b88:	b	402b2c <run+0x1598>
  401b8c:	mov	w8, #0x0                   	// #0
  401b90:	sturb	w8, [x29, #-25]
  401b94:	mov	w9, #0x1                   	// #1
  401b98:	sturb	w9, [x29, #-26]
  401b9c:	sturb	w8, [x29, #-27]
  401ba0:	b	401c3c <run+0x6a8>
  401ba4:	mov	w8, #0x3                   	// #3
  401ba8:	str	w8, [sp, #548]
  401bac:	mov	w8, #0x16                  	// #22
  401bb0:	movk	w8, #0x4000, lsl #16
  401bb4:	str	w8, [sp, #544]
  401bb8:	str	wzr, [sp, #540]
  401bbc:	ldr	w0, [sp, #540]
  401bc0:	bl	401130 <log_get_max_level_realm@plt>
  401bc4:	ldr	w8, [sp, #548]
  401bc8:	and	w8, w8, #0x7
  401bcc:	cmp	w0, w8
  401bd0:	b.lt	401c0c <run+0x678>  // b.tstop
  401bd4:	ldr	w8, [sp, #540]
  401bd8:	ldr	w9, [sp, #548]
  401bdc:	orr	w0, w9, w8, lsl #10
  401be0:	ldr	w1, [sp, #544]
  401be4:	ldur	x10, [x29, #-16]
  401be8:	ldr	x6, [x10, #8]
  401bec:	ldr	x2, [sp, #144]
  401bf0:	mov	w3, #0xac                  	// #172
  401bf4:	ldr	x4, [sp, #136]
  401bf8:	adrp	x5, 403000 <may_credit+0x3d8>
  401bfc:	add	x5, x5, #0x5cd
  401c00:	bl	401140 <log_internal_realm@plt>
  401c04:	str	w0, [sp, #100]
  401c08:	b	401c20 <run+0x68c>
  401c0c:	ldr	w0, [sp, #544]
  401c10:	bl	401150 <abs@plt>
  401c14:	mov	w8, wzr
  401c18:	subs	w8, w8, w0, uxtb
  401c1c:	str	w8, [sp, #100]
  401c20:	ldr	w8, [sp, #100]
  401c24:	str	w8, [sp, #536]
  401c28:	ldr	w8, [sp, #536]
  401c2c:	stur	w8, [x29, #-4]
  401c30:	mov	w8, #0x1                   	// #1
  401c34:	stur	w8, [x29, #-208]
  401c38:	b	402b2c <run+0x1598>
  401c3c:	ldur	w0, [x29, #-20]
  401c40:	sub	x1, x29, #0xb0
  401c44:	bl	403428 <fstat64>
  401c48:	cmp	w0, #0x0
  401c4c:	cset	w8, ge  // ge = tcont
  401c50:	tbnz	w8, #0, 401ce4 <run+0x750>
  401c54:	mov	w8, #0x3                   	// #3
  401c58:	str	w8, [sp, #532]
  401c5c:	bl	4011b0 <__errno_location@plt>
  401c60:	ldr	w8, [x0]
  401c64:	str	w8, [sp, #528]
  401c68:	str	wzr, [sp, #524]
  401c6c:	ldr	w0, [sp, #524]
  401c70:	bl	401130 <log_get_max_level_realm@plt>
  401c74:	ldr	w8, [sp, #532]
  401c78:	and	w8, w8, #0x7
  401c7c:	cmp	w0, w8
  401c80:	b.lt	401cb4 <run+0x720>  // b.tstop
  401c84:	ldr	w8, [sp, #524]
  401c88:	ldr	w9, [sp, #532]
  401c8c:	orr	w0, w9, w8, lsl #10
  401c90:	ldr	w1, [sp, #528]
  401c94:	ldr	x2, [sp, #144]
  401c98:	mov	w3, #0xaf                  	// #175
  401c9c:	ldr	x4, [sp, #136]
  401ca0:	adrp	x5, 403000 <may_credit+0x3d8>
  401ca4:	add	x5, x5, #0x5e0
  401ca8:	bl	401140 <log_internal_realm@plt>
  401cac:	str	w0, [sp, #96]
  401cb0:	b	401cc8 <run+0x734>
  401cb4:	ldr	w0, [sp, #528]
  401cb8:	bl	401150 <abs@plt>
  401cbc:	mov	w8, wzr
  401cc0:	subs	w8, w8, w0, uxtb
  401cc4:	str	w8, [sp, #96]
  401cc8:	ldr	w8, [sp, #96]
  401ccc:	str	w8, [sp, #520]
  401cd0:	ldr	w8, [sp, #520]
  401cd4:	stur	w8, [x29, #-4]
  401cd8:	mov	w8, #0x1                   	// #1
  401cdc:	stur	w8, [x29, #-208]
  401ce0:	b	402b2c <run+0x1598>
  401ce4:	ldur	x8, [x29, #-128]
  401ce8:	ldur	x9, [x29, #-48]
  401cec:	cmp	x8, x9
  401cf0:	b.ls	401d34 <run+0x7a0>  // b.plast
  401cf4:	ldur	x8, [x29, #-128]
  401cf8:	str	x8, [sp, #512]
  401cfc:	mov	w9, #0xa00000              	// #10485760
  401d00:	str	w9, [sp, #508]
  401d04:	ldr	x8, [sp, #512]
  401d08:	cmp	x8, #0xa00, lsl #12
  401d0c:	b.ge	401d1c <run+0x788>  // b.tcont
  401d10:	ldr	x8, [sp, #512]
  401d14:	str	x8, [sp, #88]
  401d18:	b	401d24 <run+0x790>
  401d1c:	mov	x8, #0xa00000              	// #10485760
  401d20:	str	x8, [sp, #88]
  401d24:	ldr	x8, [sp, #88]
  401d28:	str	x8, [sp, #496]
  401d2c:	ldr	x8, [sp, #496]
  401d30:	stur	x8, [x29, #-48]
  401d34:	ldur	x0, [x29, #-48]
  401d38:	bl	4011c0 <malloc@plt>
  401d3c:	stur	x0, [x29, #-40]
  401d40:	ldur	x8, [x29, #-40]
  401d44:	cbnz	x8, 401d70 <run+0x7dc>
  401d48:	mov	w8, wzr
  401d4c:	mov	w0, w8
  401d50:	ldr	x1, [sp, #144]
  401d54:	mov	w2, #0xb7                  	// #183
  401d58:	ldr	x3, [sp, #136]
  401d5c:	bl	4011d0 <log_oom_internal@plt>
  401d60:	stur	w0, [x29, #-4]
  401d64:	mov	w8, #0x1                   	// #1
  401d68:	stur	w8, [x29, #-208]
  401d6c:	b	402b2c <run+0x1598>
  401d70:	ldurb	w8, [x29, #-25]
  401d74:	tbnz	w8, #0, 401d7c <run+0x7e8>
  401d78:	b	4023f4 <run+0xe60>
  401d7c:	add	x0, sp, #0x1e0
  401d80:	bl	4011e0 <sd_id128_get_machine@plt>
  401d84:	stur	w0, [x29, #-188]
  401d88:	ldur	w8, [x29, #-188]
  401d8c:	cmp	w8, #0x0
  401d90:	cset	w8, ge  // ge = tcont
  401d94:	tbnz	w8, #0, 401e14 <run+0x880>
  401d98:	mov	w8, #0x7                   	// #7
  401d9c:	str	w8, [sp, #476]
  401da0:	ldur	w8, [x29, #-188]
  401da4:	str	w8, [sp, #472]
  401da8:	str	wzr, [sp, #468]
  401dac:	ldr	w0, [sp, #468]
  401db0:	bl	401130 <log_get_max_level_realm@plt>
  401db4:	ldr	w8, [sp, #476]
  401db8:	and	w8, w8, #0x7
  401dbc:	cmp	w0, w8
  401dc0:	b.lt	401df4 <run+0x860>  // b.tstop
  401dc4:	ldr	w8, [sp, #468]
  401dc8:	ldr	w9, [sp, #476]
  401dcc:	orr	w0, w9, w8, lsl #10
  401dd0:	ldr	w1, [sp, #472]
  401dd4:	ldr	x2, [sp, #144]
  401dd8:	mov	w3, #0xc5                  	// #197
  401ddc:	ldr	x4, [sp, #136]
  401de0:	adrp	x5, 403000 <may_credit+0x3d8>
  401de4:	add	x5, x5, #0x61c
  401de8:	bl	401140 <log_internal_realm@plt>
  401dec:	str	w0, [sp, #84]
  401df0:	b	401e08 <run+0x874>
  401df4:	ldr	w0, [sp, #472]
  401df8:	bl	401150 <abs@plt>
  401dfc:	mov	w8, wzr
  401e00:	subs	w8, w8, w0, uxtb
  401e04:	str	w8, [sp, #84]
  401e08:	ldr	w8, [sp, #84]
  401e0c:	str	w8, [sp, #464]
  401e10:	b	401eb8 <run+0x924>
  401e14:	ldur	w0, [x29, #-24]
  401e18:	add	x1, sp, #0x1e0
  401e1c:	mov	x2, #0x10                  	// #16
  401e20:	mov	w8, wzr
  401e24:	and	w3, w8, #0x1
  401e28:	bl	4011f0 <loop_write@plt>
  401e2c:	stur	w0, [x29, #-188]
  401e30:	ldur	w8, [x29, #-188]
  401e34:	cmp	w8, #0x0
  401e38:	cset	w8, ge  // ge = tcont
  401e3c:	tbnz	w8, #0, 401eb8 <run+0x924>
  401e40:	mov	w8, #0x7                   	// #7
  401e44:	str	w8, [sp, #460]
  401e48:	ldur	w8, [x29, #-188]
  401e4c:	str	w8, [sp, #456]
  401e50:	str	wzr, [sp, #452]
  401e54:	ldr	w0, [sp, #452]
  401e58:	bl	401130 <log_get_max_level_realm@plt>
  401e5c:	ldr	w8, [sp, #460]
  401e60:	and	w8, w8, #0x7
  401e64:	cmp	w0, w8
  401e68:	b.lt	401e9c <run+0x908>  // b.tstop
  401e6c:	ldr	w8, [sp, #452]
  401e70:	ldr	w9, [sp, #460]
  401e74:	orr	w0, w9, w8, lsl #10
  401e78:	ldr	w1, [sp, #456]
  401e7c:	ldr	x2, [sp, #144]
  401e80:	mov	w3, #0xc9                  	// #201
  401e84:	ldr	x4, [sp, #136]
  401e88:	adrp	x5, 403000 <may_credit+0x3d8>
  401e8c:	add	x5, x5, #0x643
  401e90:	bl	401140 <log_internal_realm@plt>
  401e94:	str	w0, [sp, #80]
  401e98:	b	401eb0 <run+0x91c>
  401e9c:	ldr	w0, [sp, #456]
  401ea0:	bl	401150 <abs@plt>
  401ea4:	mov	w8, wzr
  401ea8:	subs	w8, w8, w0, uxtb
  401eac:	str	w8, [sp, #80]
  401eb0:	ldr	w8, [sp, #80]
  401eb4:	str	w8, [sp, #448]
  401eb8:	ldur	w0, [x29, #-20]
  401ebc:	ldur	x1, [x29, #-40]
  401ec0:	ldur	x2, [x29, #-48]
  401ec4:	mov	w8, wzr
  401ec8:	and	w3, w8, #0x1
  401ecc:	bl	401200 <loop_read@plt>
  401ed0:	stur	x0, [x29, #-184]
  401ed4:	ldur	x9, [x29, #-184]
  401ed8:	cmp	x9, #0x0
  401edc:	cset	w8, ge  // ge = tcont
  401ee0:	tbnz	w8, #0, 401f60 <run+0x9cc>
  401ee4:	mov	w8, #0x3                   	// #3
  401ee8:	str	w8, [sp, #444]
  401eec:	ldur	x9, [x29, #-184]
  401ef0:	str	w9, [sp, #440]
  401ef4:	str	wzr, [sp, #436]
  401ef8:	ldr	w0, [sp, #436]
  401efc:	bl	401130 <log_get_max_level_realm@plt>
  401f00:	ldr	w8, [sp, #444]
  401f04:	and	w8, w8, #0x7
  401f08:	cmp	w0, w8
  401f0c:	b.lt	401f40 <run+0x9ac>  // b.tstop
  401f10:	ldr	w8, [sp, #436]
  401f14:	ldr	w9, [sp, #444]
  401f18:	orr	w0, w9, w8, lsl #10
  401f1c:	ldr	w1, [sp, #440]
  401f20:	ldr	x2, [sp, #144]
  401f24:	mov	w3, #0xce                  	// #206
  401f28:	ldr	x4, [sp, #136]
  401f2c:	adrp	x5, 403000 <may_credit+0x3d8>
  401f30:	add	x5, x5, #0x67c
  401f34:	bl	401140 <log_internal_realm@plt>
  401f38:	str	w0, [sp, #76]
  401f3c:	b	401f54 <run+0x9c0>
  401f40:	ldr	w0, [sp, #440]
  401f44:	bl	401150 <abs@plt>
  401f48:	mov	w8, wzr
  401f4c:	subs	w8, w8, w0, uxtb
  401f50:	str	w8, [sp, #76]
  401f54:	ldr	w8, [sp, #76]
  401f58:	str	w8, [sp, #432]
  401f5c:	b	4023f4 <run+0xe60>
  401f60:	ldur	x8, [x29, #-184]
  401f64:	cbnz	x8, 401fe0 <run+0xa4c>
  401f68:	mov	w8, #0x7                   	// #7
  401f6c:	str	w8, [sp, #428]
  401f70:	str	wzr, [sp, #424]
  401f74:	str	wzr, [sp, #420]
  401f78:	ldr	w0, [sp, #420]
  401f7c:	bl	401130 <log_get_max_level_realm@plt>
  401f80:	ldr	w8, [sp, #428]
  401f84:	and	w8, w8, #0x7
  401f88:	cmp	w0, w8
  401f8c:	b.lt	401fc0 <run+0xa2c>  // b.tstop
  401f90:	ldr	w8, [sp, #420]
  401f94:	ldr	w9, [sp, #428]
  401f98:	orr	w0, w9, w8, lsl #10
  401f9c:	ldr	w1, [sp, #424]
  401fa0:	ldr	x2, [sp, #144]
  401fa4:	mov	w3, #0xd0                  	// #208
  401fa8:	ldr	x4, [sp, #136]
  401fac:	adrp	x5, 403000 <may_credit+0x3d8>
  401fb0:	add	x5, x5, #0x6b6
  401fb4:	bl	401140 <log_internal_realm@plt>
  401fb8:	str	w0, [sp, #72]
  401fbc:	b	401fd4 <run+0xa40>
  401fc0:	ldr	w0, [sp, #424]
  401fc4:	bl	401150 <abs@plt>
  401fc8:	mov	w8, wzr
  401fcc:	subs	w8, w8, w0, uxtb
  401fd0:	str	w8, [sp, #72]
  401fd4:	ldr	w8, [sp, #72]
  401fd8:	str	w8, [sp, #416]
  401fdc:	b	4023f4 <run+0xe60>
  401fe0:	ldur	w0, [x29, #-20]
  401fe4:	mov	x8, xzr
  401fe8:	mov	x1, x8
  401fec:	mov	w9, wzr
  401ff0:	mov	w2, w9
  401ff4:	bl	401210 <lseek64@plt>
  401ff8:	ldur	w9, [x29, #-20]
  401ffc:	mov	w0, w9
  402000:	bl	402c28 <may_credit>
  402004:	str	w0, [sp, #412]
  402008:	ldur	w0, [x29, #-20]
  40200c:	adrp	x1, 403000 <may_credit+0x3d8>
  402010:	add	x1, x1, #0x6fe
  402014:	bl	401220 <fremovexattr@plt>
  402018:	cmp	w0, #0x0
  40201c:	cset	w9, ge  // ge = tcont
  402020:	tbnz	w9, #0, 40210c <run+0xb78>
  402024:	mov	w8, #0x0                   	// #0
  402028:	strb	w8, [sp, #411]
  40202c:	bl	4011b0 <__errno_location@plt>
  402030:	ldr	w8, [x0]
  402034:	cmp	w8, #0x26
  402038:	str	w8, [sp, #68]
  40203c:	b.eq	40206c <run+0xad8>  // b.none
  402040:	b	402044 <run+0xab0>
  402044:	ldr	w8, [sp, #68]
  402048:	cmp	w8, #0x3d
  40204c:	b.eq	40206c <run+0xad8>  // b.none
  402050:	b	402054 <run+0xac0>
  402054:	ldr	w8, [sp, #68]
  402058:	cmp	w8, #0x5f
  40205c:	cset	w9, eq  // eq = none
  402060:	eor	w9, w9, #0x1
  402064:	tbnz	w9, #0, 402078 <run+0xae4>
  402068:	b	40206c <run+0xad8>
  40206c:	mov	w8, #0x1                   	// #1
  402070:	strb	w8, [sp, #411]
  402074:	b	402078 <run+0xae4>
  402078:	ldrb	w8, [sp, #411]
  40207c:	and	w8, w8, #0x1
  402080:	strb	w8, [sp, #410]
  402084:	ldrb	w8, [sp, #410]
  402088:	tbnz	w8, #0, 402108 <run+0xb74>
  40208c:	mov	w8, #0x4                   	// #4
  402090:	str	w8, [sp, #404]
  402094:	bl	4011b0 <__errno_location@plt>
  402098:	ldr	w8, [x0]
  40209c:	str	w8, [sp, #400]
  4020a0:	str	wzr, [sp, #396]
  4020a4:	ldr	w0, [sp, #396]
  4020a8:	bl	401130 <log_get_max_level_realm@plt>
  4020ac:	ldr	w8, [sp, #404]
  4020b0:	and	w8, w8, #0x7
  4020b4:	cmp	w0, w8
  4020b8:	b.lt	4020ec <run+0xb58>  // b.tstop
  4020bc:	ldr	w8, [sp, #396]
  4020c0:	ldr	w9, [sp, #404]
  4020c4:	orr	w0, w9, w8, lsl #10
  4020c8:	ldr	w1, [sp, #400]
  4020cc:	ldr	x2, [sp, #144]
  4020d0:	mov	w3, #0xe1                  	// #225
  4020d4:	ldr	x4, [sp, #136]
  4020d8:	adrp	x5, 403000 <may_credit+0x3d8>
  4020dc:	add	x5, x5, #0x71a
  4020e0:	bl	401140 <log_internal_realm@plt>
  4020e4:	str	w0, [sp, #64]
  4020e8:	b	402100 <run+0xb6c>
  4020ec:	ldr	w0, [sp, #400]
  4020f0:	bl	401150 <abs@plt>
  4020f4:	mov	w8, wzr
  4020f8:	subs	w8, w8, w0, uxtb
  4020fc:	str	w8, [sp, #64]
  402100:	ldr	w8, [sp, #64]
  402104:	str	w8, [sp, #392]
  402108:	b	4021b0 <run+0xc1c>
  40210c:	ldur	w0, [x29, #-20]
  402110:	bl	401230 <fsync_full@plt>
  402114:	stur	w0, [x29, #-188]
  402118:	ldur	w8, [x29, #-188]
  40211c:	cmp	w8, #0x0
  402120:	cset	w8, ge  // ge = tcont
  402124:	tbnz	w8, #0, 4021b0 <run+0xc1c>
  402128:	mov	w8, #0x4                   	// #4
  40212c:	str	w8, [sp, #388]
  402130:	ldur	w8, [x29, #-188]
  402134:	str	w8, [sp, #384]
  402138:	str	wzr, [sp, #380]
  40213c:	ldr	w0, [sp, #380]
  402140:	bl	401130 <log_get_max_level_realm@plt>
  402144:	ldr	w8, [sp, #388]
  402148:	and	w8, w8, #0x7
  40214c:	cmp	w0, w8
  402150:	b.lt	402184 <run+0xbf0>  // b.tstop
  402154:	ldr	w8, [sp, #380]
  402158:	ldr	w9, [sp, #388]
  40215c:	orr	w0, w9, w8, lsl #10
  402160:	ldr	w1, [sp, #384]
  402164:	ldr	x2, [sp, #144]
  402168:	mov	w3, #0xe7                  	// #231
  40216c:	ldr	x4, [sp, #136]
  402170:	adrp	x5, 403000 <may_credit+0x3d8>
  402174:	add	x5, x5, #0x74c
  402178:	bl	401140 <log_internal_realm@plt>
  40217c:	str	w0, [sp, #60]
  402180:	b	402198 <run+0xc04>
  402184:	ldr	w0, [sp, #384]
  402188:	bl	401150 <abs@plt>
  40218c:	mov	w8, wzr
  402190:	subs	w8, w8, w0, uxtb
  402194:	str	w8, [sp, #60]
  402198:	ldr	w8, [sp, #60]
  40219c:	str	w8, [sp, #376]
  4021a0:	ldr	w8, [sp, #412]
  4021a4:	cmp	w8, #0x1
  4021a8:	b.ne	4021b0 <run+0xc1c>  // b.any
  4021ac:	str	wzr, [sp, #412]
  4021b0:	mov	w8, #0x0                   	// #0
  4021b4:	strb	w8, [sp, #375]
  4021b8:	ldr	w8, [sp, #412]
  4021bc:	subs	w8, w8, #0x1
  4021c0:	mov	w9, #0x1                   	// #1
  4021c4:	cmp	w8, #0x1
  4021c8:	cset	w8, ls  // ls = plast
  4021cc:	eor	w8, w8, w9
  4021d0:	tbnz	w8, #0, 4021e4 <run+0xc50>
  4021d4:	b	4021d8 <run+0xc44>
  4021d8:	mov	w8, #0x1                   	// #1
  4021dc:	strb	w8, [sp, #375]
  4021e0:	b	4021e4 <run+0xc50>
  4021e4:	ldrb	w8, [sp, #375]
  4021e8:	and	w8, w8, #0x1
  4021ec:	strb	w8, [sp, #374]
  4021f0:	ldrb	w8, [sp, #374]
  4021f4:	tbnz	w8, #0, 4021fc <run+0xc68>
  4021f8:	b	402350 <run+0xdbc>
  4021fc:	mov	x8, xzr
  402200:	str	x8, [sp, #360]
  402204:	ldur	x8, [x29, #-184]
  402208:	add	x0, x8, #0x8
  40220c:	bl	4011c0 <malloc@plt>
  402210:	str	x0, [sp, #360]
  402214:	ldr	x8, [sp, #360]
  402218:	cbnz	x8, 402244 <run+0xcb0>
  40221c:	mov	w8, wzr
  402220:	mov	w0, w8
  402224:	ldr	x1, [sp, #144]
  402228:	mov	w2, #0xf3                  	// #243
  40222c:	ldr	x3, [sp, #136]
  402230:	bl	4011d0 <log_oom_internal@plt>
  402234:	stur	w0, [x29, #-4]
  402238:	mov	w8, #0x1                   	// #1
  40223c:	stur	w8, [x29, #-208]
  402240:	b	40232c <run+0xd98>
  402244:	ldur	x8, [x29, #-184]
  402248:	mov	x9, #0x8                   	// #8
  40224c:	mul	x8, x8, x9
  402250:	ldr	x9, [sp, #360]
  402254:	str	w8, [x9]
  402258:	ldur	x9, [x29, #-184]
  40225c:	ldr	x10, [sp, #360]
  402260:	str	w9, [x10, #4]
  402264:	ldr	x10, [sp, #360]
  402268:	add	x0, x10, #0x8
  40226c:	ldur	x1, [x29, #-40]
  402270:	ldur	x2, [x29, #-184]
  402274:	bl	401240 <memcpy@plt>
  402278:	ldur	w0, [x29, #-24]
  40227c:	ldr	x2, [sp, #360]
  402280:	mov	x1, #0x5203                	// #20995
  402284:	movk	x1, #0x4008, lsl #16
  402288:	bl	401250 <ioctl@plt>
  40228c:	cmp	w0, #0x0
  402290:	cset	w8, ge  // ge = tcont
  402294:	tbnz	w8, #0, 402328 <run+0xd94>
  402298:	mov	w8, #0x4                   	// #4
  40229c:	str	w8, [sp, #356]
  4022a0:	bl	4011b0 <__errno_location@plt>
  4022a4:	ldr	w8, [x0]
  4022a8:	str	w8, [sp, #352]
  4022ac:	str	wzr, [sp, #348]
  4022b0:	ldr	w0, [sp, #348]
  4022b4:	bl	401130 <log_get_max_level_realm@plt>
  4022b8:	ldr	w8, [sp, #356]
  4022bc:	and	w8, w8, #0x7
  4022c0:	cmp	w0, w8
  4022c4:	b.lt	4022f8 <run+0xd64>  // b.tstop
  4022c8:	ldr	w8, [sp, #348]
  4022cc:	ldr	w9, [sp, #356]
  4022d0:	orr	w0, w9, w8, lsl #10
  4022d4:	ldr	w1, [sp, #352]
  4022d8:	ldr	x2, [sp, #144]
  4022dc:	mov	w3, #0xfa                  	// #250
  4022e0:	ldr	x4, [sp, #136]
  4022e4:	adrp	x5, 403000 <may_credit+0x3d8>
  4022e8:	add	x5, x5, #0x78a
  4022ec:	bl	401140 <log_internal_realm@plt>
  4022f0:	str	w0, [sp, #56]
  4022f4:	b	40230c <run+0xd78>
  4022f8:	ldr	w0, [sp, #352]
  4022fc:	bl	401150 <abs@plt>
  402300:	mov	w8, wzr
  402304:	subs	w8, w8, w0, uxtb
  402308:	str	w8, [sp, #56]
  40230c:	ldr	w8, [sp, #56]
  402310:	str	w8, [sp, #344]
  402314:	ldr	w8, [sp, #344]
  402318:	stur	w8, [x29, #-4]
  40231c:	mov	w8, #0x1                   	// #1
  402320:	stur	w8, [x29, #-208]
  402324:	b	40232c <run+0xd98>
  402328:	stur	wzr, [x29, #-208]
  40232c:	add	x0, sp, #0x168
  402330:	bl	402c00 <freep>
  402334:	ldur	w8, [x29, #-208]
  402338:	cmp	w8, #0x0
  40233c:	cset	w8, eq  // eq = none
  402340:	eor	w8, w8, #0x1
  402344:	tbnz	w8, #0, 402b2c <run+0x1598>
  402348:	b	40234c <run+0xdb8>
  40234c:	b	4023f4 <run+0xe60>
  402350:	ldur	w0, [x29, #-24]
  402354:	ldur	x1, [x29, #-40]
  402358:	ldur	x2, [x29, #-184]
  40235c:	mov	w8, wzr
  402360:	and	w3, w8, #0x1
  402364:	bl	4011f0 <loop_write@plt>
  402368:	stur	w0, [x29, #-188]
  40236c:	ldur	w8, [x29, #-188]
  402370:	cmp	w8, #0x0
  402374:	cset	w8, ge  // ge = tcont
  402378:	tbnz	w8, #0, 4023f4 <run+0xe60>
  40237c:	mov	w8, #0x3                   	// #3
  402380:	str	w8, [sp, #340]
  402384:	ldur	w8, [x29, #-188]
  402388:	str	w8, [sp, #336]
  40238c:	str	wzr, [sp, #332]
  402390:	ldr	w0, [sp, #332]
  402394:	bl	401130 <log_get_max_level_realm@plt>
  402398:	ldr	w8, [sp, #340]
  40239c:	and	w8, w8, #0x7
  4023a0:	cmp	w0, w8
  4023a4:	b.lt	4023d8 <run+0xe44>  // b.tstop
  4023a8:	ldr	w8, [sp, #332]
  4023ac:	ldr	w9, [sp, #340]
  4023b0:	orr	w0, w9, w8, lsl #10
  4023b4:	ldr	w1, [sp, #336]
  4023b8:	ldr	x2, [sp, #144]
  4023bc:	mov	w3, #0xfe                  	// #254
  4023c0:	ldr	x4, [sp, #136]
  4023c4:	adrp	x5, 403000 <may_credit+0x3d8>
  4023c8:	add	x5, x5, #0x7b1
  4023cc:	bl	401140 <log_internal_realm@plt>
  4023d0:	str	w0, [sp, #52]
  4023d4:	b	4023ec <run+0xe58>
  4023d8:	ldr	w0, [sp, #336]
  4023dc:	bl	401150 <abs@plt>
  4023e0:	mov	w8, wzr
  4023e4:	subs	w8, w8, w0, uxtb
  4023e8:	str	w8, [sp, #52]
  4023ec:	ldr	w8, [sp, #52]
  4023f0:	str	w8, [sp, #328]
  4023f4:	ldurb	w8, [x29, #-26]
  4023f8:	tbnz	w8, #0, 402400 <run+0xe6c>
  4023fc:	b	402b20 <run+0x158c>
  402400:	mov	w8, #0x0                   	// #0
  402404:	strb	w8, [sp, #327]
  402408:	ldur	w0, [x29, #-20]
  40240c:	mov	w1, #0x180                 	// #384
  402410:	mov	w8, wzr
  402414:	mov	w2, w8
  402418:	mov	w3, w8
  40241c:	bl	401260 <fchmod_and_chown@plt>
  402420:	stur	w0, [x29, #-188]
  402424:	ldur	w8, [x29, #-188]
  402428:	cmp	w8, #0x0
  40242c:	cset	w8, ge  // ge = tcont
  402430:	tbnz	w8, #0, 4024c0 <run+0xf2c>
  402434:	mov	w8, #0x3                   	// #3
  402438:	str	w8, [sp, #320]
  40243c:	ldur	w8, [x29, #-188]
  402440:	str	w8, [sp, #316]
  402444:	str	wzr, [sp, #312]
  402448:	ldr	w0, [sp, #312]
  40244c:	bl	401130 <log_get_max_level_realm@plt>
  402450:	ldr	w8, [sp, #320]
  402454:	and	w8, w8, #0x7
  402458:	cmp	w0, w8
  40245c:	b.lt	402490 <run+0xefc>  // b.tstop
  402460:	ldr	w8, [sp, #312]
  402464:	ldr	w9, [sp, #320]
  402468:	orr	w0, w9, w8, lsl #10
  40246c:	ldr	w1, [sp, #316]
  402470:	ldr	x2, [sp, #144]
  402474:	mov	w3, #0x10a                 	// #266
  402478:	ldr	x4, [sp, #136]
  40247c:	adrp	x5, 403000 <may_credit+0x3d8>
  402480:	add	x5, x5, #0x7da
  402484:	bl	401140 <log_internal_realm@plt>
  402488:	str	w0, [sp, #48]
  40248c:	b	4024a4 <run+0xf10>
  402490:	ldr	w0, [sp, #316]
  402494:	bl	401150 <abs@plt>
  402498:	mov	w8, wzr
  40249c:	subs	w8, w8, w0, uxtb
  4024a0:	str	w8, [sp, #48]
  4024a4:	ldr	w8, [sp, #48]
  4024a8:	str	w8, [sp, #308]
  4024ac:	ldr	w8, [sp, #308]
  4024b0:	stur	w8, [x29, #-4]
  4024b4:	mov	w8, #0x1                   	// #1
  4024b8:	stur	w8, [x29, #-208]
  4024bc:	b	402b2c <run+0x1598>
  4024c0:	ldur	x0, [x29, #-40]
  4024c4:	ldur	x1, [x29, #-48]
  4024c8:	mov	w2, #0x1                   	// #1
  4024cc:	bl	401270 <getrandom@plt>
  4024d0:	stur	x0, [x29, #-184]
  4024d4:	ldur	x8, [x29, #-184]
  4024d8:	cmp	x8, #0x0
  4024dc:	cset	w9, ge  // ge = tcont
  4024e0:	tbnz	w9, #0, 40258c <run+0xff8>
  4024e4:	bl	4011b0 <__errno_location@plt>
  4024e8:	ldr	w8, [x0]
  4024ec:	cmp	w8, #0xb
  4024f0:	b.ne	40258c <run+0xff8>  // b.any
  4024f4:	ldurb	w8, [x29, #-27]
  4024f8:	tbnz	w8, #0, 402500 <run+0xf6c>
  4024fc:	b	40258c <run+0xff8>
  402500:	mov	w8, #0x5                   	// #5
  402504:	str	w8, [sp, #304]
  402508:	str	wzr, [sp, #300]
  40250c:	str	wzr, [sp, #296]
  402510:	ldr	w0, [sp, #296]
  402514:	bl	401130 <log_get_max_level_realm@plt>
  402518:	ldr	w8, [sp, #304]
  40251c:	and	w8, w8, #0x7
  402520:	cmp	w0, w8
  402524:	b.lt	402558 <run+0xfc4>  // b.tstop
  402528:	ldr	w8, [sp, #296]
  40252c:	ldr	w9, [sp, #304]
  402530:	orr	w0, w9, w8, lsl #10
  402534:	ldr	w1, [sp, #300]
  402538:	ldr	x2, [sp, #144]
  40253c:	mov	w3, #0x110                 	// #272
  402540:	ldr	x4, [sp, #136]
  402544:	adrp	x5, 403000 <may_credit+0x3d8>
  402548:	add	x5, x5, #0x810
  40254c:	bl	401140 <log_internal_realm@plt>
  402550:	str	w0, [sp, #44]
  402554:	b	40256c <run+0xfd8>
  402558:	ldr	w0, [sp, #300]
  40255c:	bl	401150 <abs@plt>
  402560:	mov	w8, wzr
  402564:	subs	w8, w8, w0, uxtb
  402568:	str	w8, [sp, #44]
  40256c:	ldr	w8, [sp, #44]
  402570:	str	w8, [sp, #292]
  402574:	ldur	x0, [x29, #-40]
  402578:	ldur	x1, [x29, #-48]
  40257c:	mov	w8, wzr
  402580:	mov	w2, w8
  402584:	bl	401270 <getrandom@plt>
  402588:	stur	x0, [x29, #-184]
  40258c:	ldur	x8, [x29, #-184]
  402590:	cmp	x8, #0x0
  402594:	cset	w9, ge  // ge = tcont
  402598:	tbnz	w9, #0, 40261c <run+0x1088>
  40259c:	mov	w8, #0x7                   	// #7
  4025a0:	str	w8, [sp, #288]
  4025a4:	bl	4011b0 <__errno_location@plt>
  4025a8:	ldr	w8, [x0]
  4025ac:	str	w8, [sp, #284]
  4025b0:	str	wzr, [sp, #280]
  4025b4:	ldr	w0, [sp, #280]
  4025b8:	bl	401130 <log_get_max_level_realm@plt>
  4025bc:	ldr	w8, [sp, #288]
  4025c0:	and	w8, w8, #0x7
  4025c4:	cmp	w0, w8
  4025c8:	b.lt	4025fc <run+0x1068>  // b.tstop
  4025cc:	ldr	w8, [sp, #280]
  4025d0:	ldr	w9, [sp, #288]
  4025d4:	orr	w0, w9, w8, lsl #10
  4025d8:	ldr	w1, [sp, #284]
  4025dc:	ldr	x2, [sp, #144]
  4025e0:	mov	w3, #0x114                 	// #276
  4025e4:	ldr	x4, [sp, #136]
  4025e8:	adrp	x5, 403000 <may_credit+0x3d8>
  4025ec:	add	x5, x5, #0x851
  4025f0:	bl	401140 <log_internal_realm@plt>
  4025f4:	str	w0, [sp, #40]
  4025f8:	b	402610 <run+0x107c>
  4025fc:	ldr	w0, [sp, #284]
  402600:	bl	401150 <abs@plt>
  402604:	mov	w8, wzr
  402608:	subs	w8, w8, w0, uxtb
  40260c:	str	w8, [sp, #40]
  402610:	ldr	w8, [sp, #40]
  402614:	str	w8, [sp, #276]
  402618:	b	4026ac <run+0x1118>
  40261c:	ldur	x8, [x29, #-184]
  402620:	ldur	x9, [x29, #-48]
  402624:	cmp	x8, x9
  402628:	b.cs	4026a4 <run+0x1110>  // b.hs, b.nlast
  40262c:	mov	w8, #0x7                   	// #7
  402630:	str	w8, [sp, #272]
  402634:	str	wzr, [sp, #268]
  402638:	str	wzr, [sp, #264]
  40263c:	ldr	w0, [sp, #264]
  402640:	bl	401130 <log_get_max_level_realm@plt>
  402644:	ldr	w8, [sp, #272]
  402648:	and	w8, w8, #0x7
  40264c:	cmp	w0, w8
  402650:	b.lt	402684 <run+0x10f0>  // b.tstop
  402654:	ldr	w8, [sp, #264]
  402658:	ldr	w9, [sp, #272]
  40265c:	orr	w0, w9, w8, lsl #10
  402660:	ldr	w1, [sp, #268]
  402664:	ldr	x2, [sp, #144]
  402668:	mov	w3, #0x116                 	// #278
  40266c:	ldr	x4, [sp, #136]
  402670:	adrp	x5, 403000 <may_credit+0x3d8>
  402674:	add	x5, x5, #0x89f
  402678:	bl	401140 <log_internal_realm@plt>
  40267c:	str	w0, [sp, #36]
  402680:	b	402698 <run+0x1104>
  402684:	ldr	w0, [sp, #268]
  402688:	bl	401150 <abs@plt>
  40268c:	mov	w8, wzr
  402690:	subs	w8, w8, w0, uxtb
  402694:	str	w8, [sp, #36]
  402698:	ldr	w8, [sp, #36]
  40269c:	str	w8, [sp, #260]
  4026a0:	b	4026ac <run+0x1118>
  4026a4:	mov	w8, #0x1                   	// #1
  4026a8:	strb	w8, [sp, #327]
  4026ac:	ldrb	w8, [sp, #327]
  4026b0:	tbnz	w8, #0, 402804 <run+0x1270>
  4026b4:	ldur	w0, [x29, #-24]
  4026b8:	ldur	x1, [x29, #-40]
  4026bc:	ldur	x2, [x29, #-48]
  4026c0:	mov	w8, wzr
  4026c4:	and	w3, w8, #0x1
  4026c8:	bl	401200 <loop_read@plt>
  4026cc:	stur	x0, [x29, #-184]
  4026d0:	ldur	x9, [x29, #-184]
  4026d4:	cmp	x9, #0x0
  4026d8:	cset	w8, ge  // ge = tcont
  4026dc:	tbnz	w8, #0, 40276c <run+0x11d8>
  4026e0:	mov	w8, #0x3                   	// #3
  4026e4:	str	w8, [sp, #256]
  4026e8:	ldur	x9, [x29, #-184]
  4026ec:	str	w9, [sp, #252]
  4026f0:	str	wzr, [sp, #248]
  4026f4:	ldr	w0, [sp, #248]
  4026f8:	bl	401130 <log_get_max_level_realm@plt>
  4026fc:	ldr	w8, [sp, #256]
  402700:	and	w8, w8, #0x7
  402704:	cmp	w0, w8
  402708:	b.lt	40273c <run+0x11a8>  // b.tstop
  40270c:	ldr	w8, [sp, #248]
  402710:	ldr	w9, [sp, #256]
  402714:	orr	w0, w9, w8, lsl #10
  402718:	ldr	w1, [sp, #252]
  40271c:	ldr	x2, [sp, #144]
  402720:	mov	w3, #0x11e                 	// #286
  402724:	ldr	x4, [sp, #136]
  402728:	adrp	x5, 403000 <may_credit+0x3d8>
  40272c:	add	x5, x5, #0x8dd
  402730:	bl	401140 <log_internal_realm@plt>
  402734:	str	w0, [sp, #32]
  402738:	b	402750 <run+0x11bc>
  40273c:	ldr	w0, [sp, #252]
  402740:	bl	401150 <abs@plt>
  402744:	mov	w8, wzr
  402748:	subs	w8, w8, w0, uxtb
  40274c:	str	w8, [sp, #32]
  402750:	ldr	w8, [sp, #32]
  402754:	str	w8, [sp, #244]
  402758:	ldr	w8, [sp, #244]
  40275c:	stur	w8, [x29, #-4]
  402760:	mov	w8, #0x1                   	// #1
  402764:	stur	w8, [x29, #-208]
  402768:	b	402b2c <run+0x1598>
  40276c:	ldur	x8, [x29, #-184]
  402770:	cbnz	x8, 402804 <run+0x1270>
  402774:	mov	w8, #0x3                   	// #3
  402778:	str	w8, [sp, #240]
  40277c:	mov	w8, #0x5                   	// #5
  402780:	movk	w8, #0x4000, lsl #16
  402784:	str	w8, [sp, #236]
  402788:	str	wzr, [sp, #232]
  40278c:	ldr	w0, [sp, #232]
  402790:	bl	401130 <log_get_max_level_realm@plt>
  402794:	ldr	w8, [sp, #240]
  402798:	and	w8, w8, #0x7
  40279c:	cmp	w0, w8
  4027a0:	b.lt	4027d4 <run+0x1240>  // b.tstop
  4027a4:	ldr	w8, [sp, #232]
  4027a8:	ldr	w9, [sp, #240]
  4027ac:	orr	w0, w9, w8, lsl #10
  4027b0:	ldr	w1, [sp, #236]
  4027b4:	ldr	x2, [sp, #144]
  4027b8:	mov	w3, #0x121                 	// #289
  4027bc:	ldr	x4, [sp, #136]
  4027c0:	adrp	x5, 403000 <may_credit+0x3d8>
  4027c4:	add	x5, x5, #0x90b
  4027c8:	bl	401140 <log_internal_realm@plt>
  4027cc:	str	w0, [sp, #28]
  4027d0:	b	4027e8 <run+0x1254>
  4027d4:	ldr	w0, [sp, #236]
  4027d8:	bl	401150 <abs@plt>
  4027dc:	mov	w8, wzr
  4027e0:	subs	w8, w8, w0, uxtb
  4027e4:	str	w8, [sp, #28]
  4027e8:	ldr	w8, [sp, #28]
  4027ec:	str	w8, [sp, #228]
  4027f0:	ldr	w8, [sp, #228]
  4027f4:	stur	w8, [x29, #-4]
  4027f8:	mov	w8, #0x1                   	// #1
  4027fc:	stur	w8, [x29, #-208]
  402800:	b	402b2c <run+0x1598>
  402804:	ldur	w0, [x29, #-20]
  402808:	ldur	x1, [x29, #-40]
  40280c:	ldur	x2, [x29, #-184]
  402810:	mov	w8, wzr
  402814:	and	w3, w8, #0x1
  402818:	bl	4011f0 <loop_write@plt>
  40281c:	stur	w0, [x29, #-188]
  402820:	ldur	w8, [x29, #-188]
  402824:	cmp	w8, #0x0
  402828:	cset	w8, ge  // ge = tcont
  40282c:	tbnz	w8, #0, 4028bc <run+0x1328>
  402830:	mov	w8, #0x3                   	// #3
  402834:	str	w8, [sp, #224]
  402838:	ldur	w8, [x29, #-188]
  40283c:	str	w8, [sp, #220]
  402840:	str	wzr, [sp, #216]
  402844:	ldr	w0, [sp, #216]
  402848:	bl	401130 <log_get_max_level_realm@plt>
  40284c:	ldr	w8, [sp, #224]
  402850:	and	w8, w8, #0x7
  402854:	cmp	w0, w8
  402858:	b.lt	40288c <run+0x12f8>  // b.tstop
  40285c:	ldr	w8, [sp, #216]
  402860:	ldr	w9, [sp, #224]
  402864:	orr	w0, w9, w8, lsl #10
  402868:	ldr	w1, [sp, #220]
  40286c:	ldr	x2, [sp, #144]
  402870:	mov	w3, #0x126                 	// #294
  402874:	ldr	x4, [sp, #136]
  402878:	adrp	x5, 403000 <may_credit+0x3d8>
  40287c:	add	x5, x5, #0x934
  402880:	bl	401140 <log_internal_realm@plt>
  402884:	str	w0, [sp, #24]
  402888:	b	4028a0 <run+0x130c>
  40288c:	ldr	w0, [sp, #220]
  402890:	bl	401150 <abs@plt>
  402894:	mov	w8, wzr
  402898:	subs	w8, w8, w0, uxtb
  40289c:	str	w8, [sp, #24]
  4028a0:	ldr	w8, [sp, #24]
  4028a4:	str	w8, [sp, #212]
  4028a8:	ldr	w8, [sp, #212]
  4028ac:	stur	w8, [x29, #-4]
  4028b0:	mov	w8, #0x1                   	// #1
  4028b4:	stur	w8, [x29, #-208]
  4028b8:	b	402b2c <run+0x1598>
  4028bc:	ldur	w0, [x29, #-20]
  4028c0:	ldur	x1, [x29, #-184]
  4028c4:	bl	401280 <ftruncate64@plt>
  4028c8:	cmp	w0, #0x0
  4028cc:	cset	w8, ge  // ge = tcont
  4028d0:	tbnz	w8, #0, 402960 <run+0x13cc>
  4028d4:	mov	w8, #0x3                   	// #3
  4028d8:	str	w8, [sp, #208]
  4028dc:	ldur	w8, [x29, #-188]
  4028e0:	str	w8, [sp, #204]
  4028e4:	str	wzr, [sp, #200]
  4028e8:	ldr	w0, [sp, #200]
  4028ec:	bl	401130 <log_get_max_level_realm@plt>
  4028f0:	ldr	w8, [sp, #208]
  4028f4:	and	w8, w8, #0x7
  4028f8:	cmp	w0, w8
  4028fc:	b.lt	402930 <run+0x139c>  // b.tstop
  402900:	ldr	w8, [sp, #200]
  402904:	ldr	w9, [sp, #208]
  402908:	orr	w0, w9, w8, lsl #10
  40290c:	ldr	w1, [sp, #204]
  402910:	ldr	x2, [sp, #144]
  402914:	mov	w3, #0x129                 	// #297
  402918:	ldr	x4, [sp, #136]
  40291c:	adrp	x5, 403000 <may_credit+0x3d8>
  402920:	add	x5, x5, #0x95d
  402924:	bl	401140 <log_internal_realm@plt>
  402928:	str	w0, [sp, #20]
  40292c:	b	402944 <run+0x13b0>
  402930:	ldr	w0, [sp, #204]
  402934:	bl	401150 <abs@plt>
  402938:	mov	w8, wzr
  40293c:	subs	w8, w8, w0, uxtb
  402940:	str	w8, [sp, #20]
  402944:	ldr	w8, [sp, #20]
  402948:	str	w8, [sp, #196]
  40294c:	ldr	w8, [sp, #196]
  402950:	stur	w8, [x29, #-4]
  402954:	mov	w8, #0x1                   	// #1
  402958:	stur	w8, [x29, #-208]
  40295c:	b	402b2c <run+0x1598>
  402960:	ldur	w0, [x29, #-20]
  402964:	bl	401230 <fsync_full@plt>
  402968:	stur	w0, [x29, #-188]
  40296c:	ldur	w8, [x29, #-188]
  402970:	cmp	w8, #0x0
  402974:	cset	w8, ge  // ge = tcont
  402978:	tbnz	w8, #0, 402a08 <run+0x1474>
  40297c:	mov	w8, #0x3                   	// #3
  402980:	str	w8, [sp, #192]
  402984:	ldur	w8, [x29, #-188]
  402988:	str	w8, [sp, #188]
  40298c:	str	wzr, [sp, #184]
  402990:	ldr	w0, [sp, #184]
  402994:	bl	401130 <log_get_max_level_realm@plt>
  402998:	ldr	w8, [sp, #192]
  40299c:	and	w8, w8, #0x7
  4029a0:	cmp	w0, w8
  4029a4:	b.lt	4029d8 <run+0x1444>  // b.tstop
  4029a8:	ldr	w8, [sp, #184]
  4029ac:	ldr	w9, [sp, #192]
  4029b0:	orr	w0, w9, w8, lsl #10
  4029b4:	ldr	w1, [sp, #188]
  4029b8:	ldr	x2, [sp, #144]
  4029bc:	mov	w3, #0x12d                 	// #301
  4029c0:	ldr	x4, [sp, #136]
  4029c4:	adrp	x5, 403000 <may_credit+0x3d8>
  4029c8:	add	x5, x5, #0x985
  4029cc:	bl	401140 <log_internal_realm@plt>
  4029d0:	str	w0, [sp, #16]
  4029d4:	b	4029ec <run+0x1458>
  4029d8:	ldr	w0, [sp, #188]
  4029dc:	bl	401150 <abs@plt>
  4029e0:	mov	w8, wzr
  4029e4:	subs	w8, w8, w0, uxtb
  4029e8:	str	w8, [sp, #16]
  4029ec:	ldr	w8, [sp, #16]
  4029f0:	str	w8, [sp, #180]
  4029f4:	ldr	w8, [sp, #180]
  4029f8:	stur	w8, [x29, #-4]
  4029fc:	mov	w8, #0x1                   	// #1
  402a00:	stur	w8, [x29, #-208]
  402a04:	b	402b2c <run+0x1598>
  402a08:	ldrb	w8, [sp, #327]
  402a0c:	tbnz	w8, #0, 402a14 <run+0x1480>
  402a10:	b	402b20 <run+0x158c>
  402a14:	ldur	w0, [x29, #-20]
  402a18:	adrp	x1, 403000 <may_credit+0x3d8>
  402a1c:	add	x1, x1, #0x6fe
  402a20:	adrp	x2, 403000 <may_credit+0x3d8>
  402a24:	add	x2, x2, #0x9a9
  402a28:	mov	x3, #0x1                   	// #1
  402a2c:	mov	w8, wzr
  402a30:	mov	w4, w8
  402a34:	bl	401290 <fsetxattr@plt>
  402a38:	cmp	w0, #0x0
  402a3c:	cset	w8, ge  // ge = tcont
  402a40:	tbnz	w8, #0, 402b20 <run+0x158c>
  402a44:	mov	w8, #0x0                   	// #0
  402a48:	strb	w8, [sp, #175]
  402a4c:	bl	4011b0 <__errno_location@plt>
  402a50:	ldr	w8, [x0]
  402a54:	cmp	w8, #0x26
  402a58:	str	w8, [sp, #12]
  402a5c:	b.eq	402a7c <run+0x14e8>  // b.none
  402a60:	b	402a64 <run+0x14d0>
  402a64:	ldr	w8, [sp, #12]
  402a68:	cmp	w8, #0x5f
  402a6c:	cset	w9, eq  // eq = none
  402a70:	eor	w9, w9, #0x1
  402a74:	tbnz	w9, #0, 402a88 <run+0x14f4>
  402a78:	b	402a7c <run+0x14e8>
  402a7c:	mov	w8, #0x1                   	// #1
  402a80:	strb	w8, [sp, #175]
  402a84:	b	402a88 <run+0x14f4>
  402a88:	ldrb	w8, [sp, #175]
  402a8c:	and	w8, w8, #0x1
  402a90:	strb	w8, [sp, #174]
  402a94:	ldrb	w8, [sp, #174]
  402a98:	mov	w9, #0x4                   	// #4
  402a9c:	mov	w10, #0x7                   	// #7
  402aa0:	tst	w8, #0x1
  402aa4:	csel	w8, w10, w9, ne  // ne = any
  402aa8:	str	w8, [sp, #176]
  402aac:	bl	4011b0 <__errno_location@plt>
  402ab0:	ldr	w8, [x0]
  402ab4:	str	w8, [sp, #168]
  402ab8:	str	wzr, [sp, #164]
  402abc:	ldr	w0, [sp, #164]
  402ac0:	bl	401130 <log_get_max_level_realm@plt>
  402ac4:	ldr	w8, [sp, #176]
  402ac8:	and	w8, w8, #0x7
  402acc:	cmp	w0, w8
  402ad0:	b.lt	402b04 <run+0x1570>  // b.tstop
  402ad4:	ldr	w8, [sp, #164]
  402ad8:	ldr	w9, [sp, #176]
  402adc:	orr	w0, w9, w8, lsl #10
  402ae0:	ldr	w1, [sp, #168]
  402ae4:	ldr	x2, [sp, #144]
  402ae8:	mov	w3, #0x134                 	// #308
  402aec:	ldr	x4, [sp, #136]
  402af0:	adrp	x5, 403000 <may_credit+0x3d8>
  402af4:	add	x5, x5, #0x9ab
  402af8:	bl	401140 <log_internal_realm@plt>
  402afc:	str	w0, [sp, #8]
  402b00:	b	402b18 <run+0x1584>
  402b04:	ldr	w0, [sp, #168]
  402b08:	bl	401150 <abs@plt>
  402b0c:	mov	w8, wzr
  402b10:	subs	w8, w8, w0, uxtb
  402b14:	str	w8, [sp, #8]
  402b18:	ldr	w8, [sp, #8]
  402b1c:	str	w8, [sp, #160]
  402b20:	stur	wzr, [x29, #-4]
  402b24:	mov	w8, #0x1                   	// #1
  402b28:	stur	w8, [x29, #-208]
  402b2c:	sub	x0, x29, #0x28
  402b30:	bl	402c00 <freep>
  402b34:	sub	x0, x29, #0x18
  402b38:	bl	402bd8 <closep>
  402b3c:	sub	x0, x29, #0x14
  402b40:	bl	402bd8 <closep>
  402b44:	ldur	w0, [x29, #-4]
  402b48:	add	sp, sp, #0x360
  402b4c:	ldr	x28, [sp, #16]
  402b50:	ldp	x29, x30, [sp], #32
  402b54:	ret

0000000000402b58 <static_destruct>:
  402b58:	sub	sp, sp, #0x20
  402b5c:	stp	x29, x30, [sp, #16]
  402b60:	add	x29, sp, #0x10
  402b64:	adrp	x8, 41f000 <__FRAME_END__+0x1b218>
  402b68:	ldr	x8, [x8, #3744]
  402b6c:	str	x8, [sp]
  402b70:	cbnz	x8, 402b78 <static_destruct+0x20>
  402b74:	b	402bcc <static_destruct+0x74>
  402b78:	ldr	x0, [sp]
  402b7c:	mov	x1, #0x8                   	// #8
  402b80:	bl	40336c <ALIGN_TO>
  402b84:	str	x0, [sp, #8]
  402b88:	ldr	x8, [sp, #8]
  402b8c:	adrp	x9, 41f000 <__FRAME_END__+0x1b218>
  402b90:	ldr	x9, [x9, #3752]
  402b94:	cmp	x8, x9
  402b98:	b.cs	402bcc <static_destruct+0x74>  // b.hs, b.nlast
  402b9c:	ldr	x8, [sp, #8]
  402ba0:	ldr	x8, [x8, #8]
  402ba4:	ldr	x9, [sp, #8]
  402ba8:	ldr	x0, [x9]
  402bac:	blr	x8
  402bb0:	ldr	x8, [sp, #8]
  402bb4:	add	x8, x8, #0x10
  402bb8:	mov	x0, x8
  402bbc:	mov	x1, #0x8                   	// #8
  402bc0:	bl	40336c <ALIGN_TO>
  402bc4:	str	x0, [sp, #8]
  402bc8:	b	402b88 <static_destruct+0x30>
  402bcc:	ldp	x29, x30, [sp, #16]
  402bd0:	add	sp, sp, #0x20
  402bd4:	ret

0000000000402bd8 <closep>:
  402bd8:	sub	sp, sp, #0x20
  402bdc:	stp	x29, x30, [sp, #16]
  402be0:	add	x29, sp, #0x10
  402be4:	str	x0, [sp, #8]
  402be8:	ldr	x8, [sp, #8]
  402bec:	ldr	w0, [x8]
  402bf0:	bl	4012a0 <safe_close@plt>
  402bf4:	ldp	x29, x30, [sp, #16]
  402bf8:	add	sp, sp, #0x20
  402bfc:	ret

0000000000402c00 <freep>:
  402c00:	sub	sp, sp, #0x20
  402c04:	stp	x29, x30, [sp, #16]
  402c08:	add	x29, sp, #0x10
  402c0c:	str	x0, [sp, #8]
  402c10:	ldr	x8, [sp, #8]
  402c14:	ldr	x0, [x8]
  402c18:	bl	4012b0 <free@plt>
  402c1c:	ldp	x29, x30, [sp, #16]
  402c20:	add	sp, sp, #0x20
  402c24:	ret

0000000000402c28 <may_credit>:
  402c28:	sub	sp, sp, #0x130
  402c2c:	stp	x29, x30, [sp, #272]
  402c30:	str	x28, [sp, #288]
  402c34:	add	x29, sp, #0x110
  402c38:	sub	x8, x29, #0x18
  402c3c:	mov	x9, xzr
  402c40:	adrp	x10, 403000 <may_credit+0x3d8>
  402c44:	add	x10, x10, #0x458
  402c48:	add	x10, x10, #0x3
  402c4c:	adrp	x11, 403000 <may_credit+0x3d8>
  402c50:	add	x11, x11, #0xa26
  402c54:	stur	w0, [x29, #-8]
  402c58:	str	x9, [x8, #8]
  402c5c:	str	x8, [sp, #64]
  402c60:	str	x10, [sp, #56]
  402c64:	str	x11, [sp, #48]
  402c68:	ldur	w8, [x29, #-8]
  402c6c:	cmp	w8, #0x0
  402c70:	cset	w8, ge  // ge = tcont
  402c74:	mov	w9, #0x1                   	// #1
  402c78:	eor	w8, w8, #0x1
  402c7c:	eor	w8, w8, w9
  402c80:	eor	w8, w8, w9
  402c84:	and	w8, w8, #0x1
  402c88:	mov	w0, w8
  402c8c:	sxtw	x10, w0
  402c90:	cbz	x10, 402cb8 <may_credit+0x90>
  402c94:	mov	w8, wzr
  402c98:	mov	w0, w8
  402c9c:	adrp	x1, 403000 <may_credit+0x3d8>
  402ca0:	add	x1, x1, #0x9e0
  402ca4:	ldr	x2, [sp, #56]
  402ca8:	mov	w3, #0x29                  	// #41
  402cac:	adrp	x4, 403000 <may_credit+0x3d8>
  402cb0:	add	x4, x4, #0x9ed
  402cb4:	bl	4012c0 <log_assert_failed_realm@plt>
  402cb8:	adrp	x0, 403000 <may_credit+0x3d8>
  402cbc:	add	x0, x0, #0xa0b
  402cc0:	bl	4012d0 <getenv@plt>
  402cc4:	ldr	x8, [sp, #64]
  402cc8:	str	x0, [x8]
  402ccc:	ldr	x9, [x8]
  402cd0:	cbnz	x9, 402d58 <may_credit+0x130>
  402cd4:	mov	w8, #0x7                   	// #7
  402cd8:	stur	w8, [x29, #-32]
  402cdc:	stur	wzr, [x29, #-36]
  402ce0:	stur	wzr, [x29, #-40]
  402ce4:	ldur	w0, [x29, #-40]
  402ce8:	bl	401130 <log_get_max_level_realm@plt>
  402cec:	ldur	w8, [x29, #-32]
  402cf0:	and	w8, w8, #0x7
  402cf4:	cmp	w0, w8
  402cf8:	b.lt	402d2c <may_credit+0x104>  // b.tstop
  402cfc:	ldur	w8, [x29, #-40]
  402d00:	ldur	w9, [x29, #-32]
  402d04:	orr	w0, w9, w8, lsl #10
  402d08:	ldur	w1, [x29, #-36]
  402d0c:	ldr	x2, [sp, #56]
  402d10:	mov	w3, #0x2d                  	// #45
  402d14:	ldr	x4, [sp, #48]
  402d18:	adrp	x5, 403000 <may_credit+0x3d8>
  402d1c:	add	x5, x5, #0xa31
  402d20:	bl	401140 <log_internal_realm@plt>
  402d24:	str	w0, [sp, #44]
  402d28:	b	402d40 <may_credit+0x118>
  402d2c:	ldur	w0, [x29, #-36]
  402d30:	bl	401150 <abs@plt>
  402d34:	mov	w8, wzr
  402d38:	subs	w8, w8, w0, uxtb
  402d3c:	str	w8, [sp, #44]
  402d40:	ldr	w8, [sp, #44]
  402d44:	stur	w8, [x29, #-44]
  402d48:	stur	wzr, [x29, #-4]
  402d4c:	mov	w8, #0x1                   	// #1
  402d50:	stur	w8, [x29, #-48]
  402d54:	b	403350 <may_credit+0x728>
  402d58:	ldr	x8, [sp, #64]
  402d5c:	ldr	x0, [x8]
  402d60:	adrp	x1, 403000 <may_credit+0x3d8>
  402d64:	add	x1, x1, #0xa70
  402d68:	bl	401190 <strcmp@plt>
  402d6c:	cbnz	w0, 402df8 <may_credit+0x1d0>
  402d70:	mov	w8, #0x7                   	// #7
  402d74:	stur	w8, [x29, #-52]
  402d78:	stur	wzr, [x29, #-56]
  402d7c:	stur	wzr, [x29, #-60]
  402d80:	ldur	w0, [x29, #-60]
  402d84:	bl	401130 <log_get_max_level_realm@plt>
  402d88:	ldur	w8, [x29, #-52]
  402d8c:	and	w8, w8, #0x7
  402d90:	cmp	w0, w8
  402d94:	b.lt	402dc8 <may_credit+0x1a0>  // b.tstop
  402d98:	ldur	w8, [x29, #-60]
  402d9c:	ldur	w9, [x29, #-52]
  402da0:	orr	w0, w9, w8, lsl #10
  402da4:	ldur	w1, [x29, #-56]
  402da8:	ldr	x2, [sp, #56]
  402dac:	mov	w3, #0x31                  	// #49
  402db0:	ldr	x4, [sp, #48]
  402db4:	adrp	x5, 403000 <may_credit+0x3d8>
  402db8:	add	x5, x5, #0xa76
  402dbc:	bl	401140 <log_internal_realm@plt>
  402dc0:	str	w0, [sp, #40]
  402dc4:	b	402ddc <may_credit+0x1b4>
  402dc8:	ldur	w0, [x29, #-56]
  402dcc:	bl	401150 <abs@plt>
  402dd0:	mov	w8, wzr
  402dd4:	subs	w8, w8, w0, uxtb
  402dd8:	str	w8, [sp, #40]
  402ddc:	ldr	w8, [sp, #40]
  402de0:	stur	w8, [x29, #-64]
  402de4:	mov	w8, #0x2                   	// #2
  402de8:	stur	w8, [x29, #-4]
  402dec:	mov	w8, #0x1                   	// #1
  402df0:	stur	w8, [x29, #-48]
  402df4:	b	403350 <may_credit+0x728>
  402df8:	ldr	x8, [sp, #64]
  402dfc:	ldr	x0, [x8]
  402e00:	bl	4012e0 <parse_boolean@plt>
  402e04:	stur	w0, [x29, #-28]
  402e08:	ldur	w9, [x29, #-28]
  402e0c:	cmp	w9, #0x0
  402e10:	cset	w9, gt
  402e14:	tbnz	w9, #0, 402f28 <may_credit+0x300>
  402e18:	ldur	w8, [x29, #-28]
  402e1c:	cmp	w8, #0x0
  402e20:	cset	w8, ge  // ge = tcont
  402e24:	tbnz	w8, #0, 402ea4 <may_credit+0x27c>
  402e28:	mov	w8, #0x4                   	// #4
  402e2c:	stur	w8, [x29, #-68]
  402e30:	ldur	w8, [x29, #-28]
  402e34:	stur	w8, [x29, #-72]
  402e38:	stur	wzr, [x29, #-76]
  402e3c:	ldur	w0, [x29, #-76]
  402e40:	bl	401130 <log_get_max_level_realm@plt>
  402e44:	ldur	w8, [x29, #-68]
  402e48:	and	w8, w8, #0x7
  402e4c:	cmp	w0, w8
  402e50:	b.lt	402e84 <may_credit+0x25c>  // b.tstop
  402e54:	ldur	w8, [x29, #-76]
  402e58:	ldur	w9, [x29, #-68]
  402e5c:	orr	w0, w9, w8, lsl #10
  402e60:	ldur	w1, [x29, #-72]
  402e64:	ldr	x2, [sp, #56]
  402e68:	mov	w3, #0x38                  	// #56
  402e6c:	ldr	x4, [sp, #48]
  402e70:	adrp	x5, 403000 <may_credit+0x3d8>
  402e74:	add	x5, x5, #0xab8
  402e78:	bl	401140 <log_internal_realm@plt>
  402e7c:	str	w0, [sp, #36]
  402e80:	b	402e98 <may_credit+0x270>
  402e84:	ldur	w0, [x29, #-72]
  402e88:	bl	401150 <abs@plt>
  402e8c:	mov	w8, wzr
  402e90:	subs	w8, w8, w0, uxtb
  402e94:	str	w8, [sp, #36]
  402e98:	ldr	w8, [sp, #36]
  402e9c:	stur	w8, [x29, #-80]
  402ea0:	b	402f18 <may_credit+0x2f0>
  402ea4:	mov	w8, #0x7                   	// #7
  402ea8:	stur	w8, [x29, #-84]
  402eac:	stur	wzr, [x29, #-88]
  402eb0:	stur	wzr, [x29, #-92]
  402eb4:	ldur	w0, [x29, #-92]
  402eb8:	bl	401130 <log_get_max_level_realm@plt>
  402ebc:	ldur	w8, [x29, #-84]
  402ec0:	and	w8, w8, #0x7
  402ec4:	cmp	w0, w8
  402ec8:	b.lt	402efc <may_credit+0x2d4>  // b.tstop
  402ecc:	ldur	w8, [x29, #-92]
  402ed0:	ldur	w9, [x29, #-84]
  402ed4:	orr	w0, w9, w8, lsl #10
  402ed8:	ldur	w1, [x29, #-88]
  402edc:	ldr	x2, [sp, #56]
  402ee0:	mov	w3, #0x3a                  	// #58
  402ee4:	ldr	x4, [sp, #48]
  402ee8:	adrp	x5, 403000 <may_credit+0x3d8>
  402eec:	add	x5, x5, #0xaff
  402ef0:	bl	401140 <log_internal_realm@plt>
  402ef4:	str	w0, [sp, #32]
  402ef8:	b	402f10 <may_credit+0x2e8>
  402efc:	ldur	w0, [x29, #-88]
  402f00:	bl	401150 <abs@plt>
  402f04:	mov	w8, wzr
  402f08:	subs	w8, w8, w0, uxtb
  402f0c:	str	w8, [sp, #32]
  402f10:	ldr	w8, [sp, #32]
  402f14:	stur	w8, [x29, #-96]
  402f18:	stur	wzr, [x29, #-4]
  402f1c:	mov	w8, #0x1                   	// #1
  402f20:	stur	w8, [x29, #-48]
  402f24:	b	403350 <may_credit+0x728>
  402f28:	ldur	w0, [x29, #-8]
  402f2c:	adrp	x1, 403000 <may_credit+0x3d8>
  402f30:	add	x1, x1, #0x6fe
  402f34:	sub	x2, x29, #0x10
  402f38:	bl	4012f0 <fgetxattr_malloc@plt>
  402f3c:	stur	w0, [x29, #-28]
  402f40:	ldur	w8, [x29, #-28]
  402f44:	cmp	w8, #0x0
  402f48:	cset	w8, ge  // ge = tcont
  402f4c:	tbnz	w8, #0, 4030c8 <may_credit+0x4a0>
  402f50:	mov	w8, #0x0                   	// #0
  402f54:	sturb	w8, [x29, #-97]
  402f58:	ldur	w8, [x29, #-28]
  402f5c:	mov	w9, #0xffffffa1            	// #-95
  402f60:	cmp	w8, w9
  402f64:	str	w8, [sp, #28]
  402f68:	b.eq	402fa0 <may_credit+0x378>  // b.none
  402f6c:	b	402f70 <may_credit+0x348>
  402f70:	mov	w8, #0xffffffc3            	// #-61
  402f74:	ldr	w9, [sp, #28]
  402f78:	cmp	w9, w8
  402f7c:	b.eq	402fa0 <may_credit+0x378>  // b.none
  402f80:	b	402f84 <may_credit+0x35c>
  402f84:	mov	w8, #0xffffffda            	// #-38
  402f88:	ldr	w9, [sp, #28]
  402f8c:	cmp	w9, w8
  402f90:	cset	w8, eq  // eq = none
  402f94:	eor	w8, w8, #0x1
  402f98:	tbnz	w8, #0, 402fac <may_credit+0x384>
  402f9c:	b	402fa0 <may_credit+0x378>
  402fa0:	mov	w8, #0x1                   	// #1
  402fa4:	sturb	w8, [x29, #-97]
  402fa8:	b	402fac <may_credit+0x384>
  402fac:	ldurb	w8, [x29, #-97]
  402fb0:	and	w8, w8, #0x1
  402fb4:	sturb	w8, [x29, #-98]
  402fb8:	ldurb	w8, [x29, #-98]
  402fbc:	tbnz	w8, #0, 402fc4 <may_credit+0x39c>
  402fc0:	b	403040 <may_credit+0x418>
  402fc4:	mov	w8, #0x7                   	// #7
  402fc8:	stur	w8, [x29, #-104]
  402fcc:	ldur	w8, [x29, #-28]
  402fd0:	stur	w8, [x29, #-108]
  402fd4:	stur	wzr, [x29, #-112]
  402fd8:	ldur	w0, [x29, #-112]
  402fdc:	bl	401130 <log_get_max_level_realm@plt>
  402fe0:	ldur	w8, [x29, #-104]
  402fe4:	and	w8, w8, #0x7
  402fe8:	cmp	w0, w8
  402fec:	b.lt	403020 <may_credit+0x3f8>  // b.tstop
  402ff0:	ldur	w8, [x29, #-112]
  402ff4:	ldur	w9, [x29, #-104]
  402ff8:	orr	w0, w9, w8, lsl #10
  402ffc:	ldur	w1, [x29, #-108]
  403000:	ldr	x2, [sp, #56]
  403004:	mov	w3, #0x43                  	// #67
  403008:	ldr	x4, [sp, #48]
  40300c:	adrp	x5, 403000 <may_credit+0x3d8>
  403010:	add	x5, x5, #0xb57
  403014:	bl	401140 <log_internal_realm@plt>
  403018:	str	w0, [sp, #24]
  40301c:	b	403034 <may_credit+0x40c>
  403020:	ldur	w0, [x29, #-108]
  403024:	bl	401150 <abs@plt>
  403028:	mov	w8, wzr
  40302c:	subs	w8, w8, w0, uxtb
  403030:	str	w8, [sp, #24]
  403034:	ldr	w8, [sp, #24]
  403038:	stur	w8, [x29, #-116]
  40303c:	b	4030b8 <may_credit+0x490>
  403040:	mov	w8, #0x4                   	// #4
  403044:	stur	w8, [x29, #-120]
  403048:	ldur	w8, [x29, #-28]
  40304c:	stur	w8, [x29, #-124]
  403050:	stur	wzr, [x29, #-128]
  403054:	ldur	w0, [x29, #-128]
  403058:	bl	401130 <log_get_max_level_realm@plt>
  40305c:	ldur	w8, [x29, #-120]
  403060:	and	w8, w8, #0x7
  403064:	cmp	w0, w8
  403068:	b.lt	40309c <may_credit+0x474>  // b.tstop
  40306c:	ldur	w8, [x29, #-128]
  403070:	ldur	w9, [x29, #-120]
  403074:	orr	w0, w9, w8, lsl #10
  403078:	ldur	w1, [x29, #-124]
  40307c:	ldr	x2, [sp, #56]
  403080:	mov	w3, #0x45                  	// #69
  403084:	ldr	x4, [sp, #48]
  403088:	adrp	x5, 403000 <may_credit+0x3d8>
  40308c:	add	x5, x5, #0xb8d
  403090:	bl	401140 <log_internal_realm@plt>
  403094:	str	w0, [sp, #20]
  403098:	b	4030b0 <may_credit+0x488>
  40309c:	ldur	w0, [x29, #-124]
  4030a0:	bl	401150 <abs@plt>
  4030a4:	mov	w8, wzr
  4030a8:	subs	w8, w8, w0, uxtb
  4030ac:	str	w8, [sp, #20]
  4030b0:	ldr	w8, [sp, #20]
  4030b4:	stur	w8, [x29, #-132]
  4030b8:	stur	wzr, [x29, #-4]
  4030bc:	mov	w8, #0x1                   	// #1
  4030c0:	stur	w8, [x29, #-48]
  4030c4:	b	403350 <may_credit+0x728>
  4030c8:	ldr	x8, [sp, #64]
  4030cc:	ldr	x0, [x8, #8]
  4030d0:	bl	4012e0 <parse_boolean@plt>
  4030d4:	stur	w0, [x29, #-28]
  4030d8:	ldur	w9, [x29, #-28]
  4030dc:	cmp	w9, #0x0
  4030e0:	cset	w9, gt
  4030e4:	tbnz	w9, #0, 403200 <may_credit+0x5d8>
  4030e8:	ldur	w8, [x29, #-28]
  4030ec:	cmp	w8, #0x0
  4030f0:	cset	w8, ge  // ge = tcont
  4030f4:	tbnz	w8, #0, 40317c <may_credit+0x554>
  4030f8:	mov	w8, #0x4                   	// #4
  4030fc:	str	w8, [sp, #136]
  403100:	ldur	w8, [x29, #-28]
  403104:	str	w8, [sp, #132]
  403108:	str	wzr, [sp, #128]
  40310c:	ldr	w0, [sp, #128]
  403110:	bl	401130 <log_get_max_level_realm@plt>
  403114:	ldr	w8, [sp, #136]
  403118:	and	w8, w8, #0x7
  40311c:	cmp	w0, w8
  403120:	b.lt	40315c <may_credit+0x534>  // b.tstop
  403124:	ldr	w8, [sp, #128]
  403128:	ldr	w9, [sp, #136]
  40312c:	orr	w0, w9, w8, lsl #10
  403130:	ldr	w1, [sp, #132]
  403134:	ldr	x10, [sp, #64]
  403138:	ldr	x6, [x10, #8]
  40313c:	ldr	x2, [sp, #56]
  403140:	mov	w3, #0x4d                  	// #77
  403144:	ldr	x4, [sp, #48]
  403148:	adrp	x5, 403000 <may_credit+0x3d8>
  40314c:	add	x5, x5, #0xbbd
  403150:	bl	401140 <log_internal_realm@plt>
  403154:	str	w0, [sp, #16]
  403158:	b	403170 <may_credit+0x548>
  40315c:	ldr	w0, [sp, #132]
  403160:	bl	401150 <abs@plt>
  403164:	mov	w8, wzr
  403168:	subs	w8, w8, w0, uxtb
  40316c:	str	w8, [sp, #16]
  403170:	ldr	w8, [sp, #16]
  403174:	str	w8, [sp, #124]
  403178:	b	4031f0 <may_credit+0x5c8>
  40317c:	mov	w8, #0x7                   	// #7
  403180:	str	w8, [sp, #120]
  403184:	str	wzr, [sp, #116]
  403188:	str	wzr, [sp, #112]
  40318c:	ldr	w0, [sp, #112]
  403190:	bl	401130 <log_get_max_level_realm@plt>
  403194:	ldr	w8, [sp, #120]
  403198:	and	w8, w8, #0x7
  40319c:	cmp	w0, w8
  4031a0:	b.lt	4031d4 <may_credit+0x5ac>  // b.tstop
  4031a4:	ldr	w8, [sp, #112]
  4031a8:	ldr	w9, [sp, #120]
  4031ac:	orr	w0, w9, w8, lsl #10
  4031b0:	ldr	w1, [sp, #116]
  4031b4:	ldr	x2, [sp, #56]
  4031b8:	mov	w3, #0x4f                  	// #79
  4031bc:	ldr	x4, [sp, #48]
  4031c0:	adrp	x5, 403000 <may_credit+0x3d8>
  4031c4:	add	x5, x5, #0xc0a
  4031c8:	bl	401140 <log_internal_realm@plt>
  4031cc:	str	w0, [sp, #12]
  4031d0:	b	4031e8 <may_credit+0x5c0>
  4031d4:	ldr	w0, [sp, #116]
  4031d8:	bl	401150 <abs@plt>
  4031dc:	mov	w8, wzr
  4031e0:	subs	w8, w8, w0, uxtb
  4031e4:	str	w8, [sp, #12]
  4031e8:	ldr	w8, [sp, #12]
  4031ec:	str	w8, [sp, #108]
  4031f0:	stur	wzr, [x29, #-4]
  4031f4:	mov	w8, #0x1                   	// #1
  4031f8:	stur	w8, [x29, #-48]
  4031fc:	b	403350 <may_credit+0x728>
  403200:	adrp	x0, 403000 <may_credit+0x3d8>
  403204:	add	x0, x0, #0xc40
  403208:	mov	w8, wzr
  40320c:	mov	w1, w8
  403210:	bl	401300 <access@plt>
  403214:	cmp	w0, #0x0
  403218:	cset	w8, ge  // ge = tcont
  40321c:	tbnz	w8, #0, 4032c0 <may_credit+0x698>
  403220:	bl	4011b0 <__errno_location@plt>
  403224:	ldr	w8, [x0]
  403228:	cmp	w8, #0x2
  40322c:	b.eq	4032bc <may_credit+0x694>  // b.none
  403230:	mov	w8, #0x4                   	// #4
  403234:	str	w8, [sp, #104]
  403238:	bl	4011b0 <__errno_location@plt>
  40323c:	ldr	w8, [x0]
  403240:	str	w8, [sp, #100]
  403244:	str	wzr, [sp, #96]
  403248:	ldr	w0, [sp, #96]
  40324c:	bl	401130 <log_get_max_level_realm@plt>
  403250:	ldr	w8, [sp, #104]
  403254:	and	w8, w8, #0x7
  403258:	cmp	w0, w8
  40325c:	b.lt	403290 <may_credit+0x668>  // b.tstop
  403260:	ldr	w8, [sp, #96]
  403264:	ldr	w9, [sp, #104]
  403268:	orr	w0, w9, w8, lsl #10
  40326c:	ldr	w1, [sp, #100]
  403270:	ldr	x2, [sp, #56]
  403274:	mov	w3, #0x5a                  	// #90
  403278:	ldr	x4, [sp, #48]
  40327c:	adrp	x5, 403000 <may_credit+0x3d8>
  403280:	add	x5, x5, #0xc58
  403284:	bl	401140 <log_internal_realm@plt>
  403288:	str	w0, [sp, #8]
  40328c:	b	4032a4 <may_credit+0x67c>
  403290:	ldr	w0, [sp, #100]
  403294:	bl	401150 <abs@plt>
  403298:	mov	w8, wzr
  40329c:	subs	w8, w8, w0, uxtb
  4032a0:	str	w8, [sp, #8]
  4032a4:	ldr	w8, [sp, #8]
  4032a8:	str	w8, [sp, #92]
  4032ac:	stur	wzr, [x29, #-4]
  4032b0:	mov	w8, #0x1                   	// #1
  4032b4:	stur	w8, [x29, #-48]
  4032b8:	b	403350 <may_credit+0x728>
  4032bc:	b	403344 <may_credit+0x71c>
  4032c0:	mov	w8, #0x7                   	// #7
  4032c4:	str	w8, [sp, #88]
  4032c8:	str	wzr, [sp, #84]
  4032cc:	str	wzr, [sp, #80]
  4032d0:	ldr	w0, [sp, #80]
  4032d4:	bl	401130 <log_get_max_level_realm@plt>
  4032d8:	ldr	w8, [sp, #88]
  4032dc:	and	w8, w8, #0x7
  4032e0:	cmp	w0, w8
  4032e4:	b.lt	403318 <may_credit+0x6f0>  // b.tstop
  4032e8:	ldr	w8, [sp, #80]
  4032ec:	ldr	w9, [sp, #88]
  4032f0:	orr	w0, w9, w8, lsl #10
  4032f4:	ldr	w1, [sp, #84]
  4032f8:	ldr	x2, [sp, #56]
  4032fc:	mov	w3, #0x60                  	// #96
  403300:	ldr	x4, [sp, #48]
  403304:	adrp	x5, 403000 <may_credit+0x3d8>
  403308:	add	x5, x5, #0xca5
  40330c:	bl	401140 <log_internal_realm@plt>
  403310:	str	w0, [sp, #4]
  403314:	b	40332c <may_credit+0x704>
  403318:	ldr	w0, [sp, #84]
  40331c:	bl	401150 <abs@plt>
  403320:	mov	w8, wzr
  403324:	subs	w8, w8, w0, uxtb
  403328:	str	w8, [sp, #4]
  40332c:	ldr	w8, [sp, #4]
  403330:	str	w8, [sp, #76]
  403334:	stur	wzr, [x29, #-4]
  403338:	mov	w8, #0x1                   	// #1
  40333c:	stur	w8, [x29, #-48]
  403340:	b	403350 <may_credit+0x728>
  403344:	mov	w8, #0x1                   	// #1
  403348:	stur	w8, [x29, #-4]
  40334c:	stur	w8, [x29, #-48]
  403350:	sub	x0, x29, #0x10
  403354:	bl	402c00 <freep>
  403358:	ldur	w0, [x29, #-4]
  40335c:	ldr	x28, [sp, #288]
  403360:	ldp	x29, x30, [sp, #272]
  403364:	add	sp, sp, #0x130
  403368:	ret

000000000040336c <ALIGN_TO>:
  40336c:	sub	sp, sp, #0x10
  403370:	str	x0, [sp, #8]
  403374:	str	x1, [sp]
  403378:	ldr	x8, [sp, #8]
  40337c:	ldr	x9, [sp]
  403380:	add	x8, x8, x9
  403384:	subs	x8, x8, #0x1
  403388:	ldr	x9, [sp]
  40338c:	subs	x9, x9, #0x1
  403390:	bic	x0, x8, x9
  403394:	add	sp, sp, #0x10
  403398:	ret
  40339c:	udf	#0

00000000004033a0 <__libc_csu_init>:
  4033a0:	stp	x29, x30, [sp, #-64]!
  4033a4:	mov	x29, sp
  4033a8:	stp	x19, x20, [sp, #16]
  4033ac:	adrp	x20, 41f000 <__FRAME_END__+0x1b218>
  4033b0:	add	x20, x20, #0xc70
  4033b4:	stp	x21, x22, [sp, #32]
  4033b8:	adrp	x21, 41f000 <__FRAME_END__+0x1b218>
  4033bc:	add	x21, x21, #0xc68
  4033c0:	sub	x20, x20, x21
  4033c4:	mov	w22, w0
  4033c8:	stp	x23, x24, [sp, #48]
  4033cc:	mov	x23, x1
  4033d0:	mov	x24, x2
  4033d4:	bl	401078 <_init>
  4033d8:	cmp	xzr, x20, asr #3
  4033dc:	b.eq	403408 <__libc_csu_init+0x68>  // b.none
  4033e0:	asr	x20, x20, #3
  4033e4:	mov	x19, #0x0                   	// #0
  4033e8:	ldr	x3, [x21, x19, lsl #3]
  4033ec:	mov	x2, x24
  4033f0:	add	x19, x19, #0x1
  4033f4:	mov	x1, x23
  4033f8:	mov	w0, w22
  4033fc:	blr	x3
  403400:	cmp	x20, x19
  403404:	b.ne	4033e8 <__libc_csu_init+0x48>  // b.any
  403408:	ldp	x19, x20, [sp, #16]
  40340c:	ldp	x21, x22, [sp, #32]
  403410:	ldp	x23, x24, [sp, #48]
  403414:	ldp	x29, x30, [sp], #64
  403418:	ret
  40341c:	nop

0000000000403420 <__libc_csu_fini>:
  403420:	ret
  403424:	udf	#0

0000000000403428 <fstat64>:
  403428:	mov	x2, x1
  40342c:	mov	w1, w0
  403430:	mov	w0, #0x0                   	// #0
  403434:	b	401310 <__fxstat64@plt>

Disassembly of section .fini:

0000000000403438 <_fini>:
  403438:	stp	x29, x30, [sp, #-16]!
  40343c:	mov	x29, sp
  403440:	ldp	x29, x30, [sp], #16
  403444:	ret
