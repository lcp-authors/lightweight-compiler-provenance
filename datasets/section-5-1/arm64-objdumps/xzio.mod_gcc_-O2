
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//xzio.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x5d8>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	x20, [x0, #80]
      14:	ldr	x0, [x20, #56]
      18:	bl	3458 <xz_dec_end>
      1c:	ldr	x0, [x20]
      20:	bl	0 <grub_file_close>
      24:	mov	x0, x20
      28:	bl	0 <grub_free>
      2c:	adrp	x0, 0 <grub_mod_init-0x5d8>
      30:	ldr	x0, [x0]
      34:	ldr	w0, [x0]
      38:	stp	xzr, xzr, [x19]
      3c:	ldp	x19, x20, [sp, #16]
      40:	ldp	x29, x30, [sp], #32
      44:	ret
	...
      50:	stp	x29, x30, [sp, #-48]!
      54:	mov	x2, #0x9                   	// #9
      58:	mov	x29, sp
      5c:	stp	x19, x20, [sp, #16]
      60:	mov	x19, x1
      64:	mov	x20, x0
      68:	add	x1, sp, #0x20
      6c:	bl	0 <grub_file_read>
      70:	cmp	x0, #0x0
      74:	b.lt	128 <grub_mod_init-0x4b0>  // b.tstop
      78:	mov	x2, x0
      7c:	b.eq	e8 <grub_mod_init-0x4f0>  // b.none
      80:	ldrb	w0, [sp, #32]
      84:	cmp	x2, #0x9
      88:	mov	x7, #0x9                   	// #9
      8c:	csel	x7, x2, x7, ls  // ls = plast
      90:	and	x1, x0, #0x7f
      94:	str	x1, [x19]
      98:	tbz	w0, #7, 11c <grub_mod_init-0x4bc>
      9c:	cmp	x2, #0x1
      a0:	b.eq	e8 <grub_mod_init-0x4f0>  // b.none
      a4:	add	x3, sp, #0x21
      a8:	mov	w6, #0x7                   	// #7
      ac:	mov	x4, #0x1                   	// #1
      b0:	b	d0 <grub_mod_init-0x508>
      b4:	ldr	x1, [x19]
      b8:	add	w6, w6, #0x7
      bc:	orr	x1, x1, x5
      c0:	str	x1, [x19]
      c4:	tbz	w0, #7, 114 <grub_mod_init-0x4c4>
      c8:	cmp	x7, x4
      cc:	b.ls	e8 <grub_mod_init-0x4f0>  // b.plast
      d0:	ldrb	w0, [x3]
      d4:	add	x4, x4, #0x1
      d8:	add	x3, x3, #0x1
      dc:	and	x1, x0, #0x7f
      e0:	lsl	x5, x1, x6
      e4:	cbnz	w0, b4 <grub_mod_init-0x524>
      e8:	mov	x19, #0x0                   	// #0
      ec:	mov	x4, #0x0                   	// #0
      f0:	ldr	x1, [x20, #24]
      f4:	mov	x0, x20
      f8:	sub	x1, x1, x2
      fc:	add	x1, x1, x4
     100:	bl	0 <grub_file_seek>
     104:	mov	x0, x19
     108:	ldp	x19, x20, [sp, #16]
     10c:	ldp	x29, x30, [sp], #48
     110:	ret
     114:	mov	x19, x4
     118:	b	f0 <grub_mod_init-0x4e8>
     11c:	mov	x19, #0x1                   	// #1
     120:	mov	x4, x19
     124:	b	f0 <grub_mod_init-0x4e8>
     128:	mov	x19, #0xffffffffffffffff    	// #-1
     12c:	b	104 <grub_mod_init-0x4d4>
     130:	stp	x29, x30, [sp, #-112]!
     134:	mov	x29, sp
     138:	stp	x25, x26, [sp, #64]
     13c:	mov	x25, x0
     140:	ldr	x26, [x0, #80]
     144:	stp	x27, x28, [sp, #80]
     148:	ldr	x0, [x0, #24]
     14c:	stp	x19, x20, [sp, #16]
     150:	mov	x19, x2
     154:	ldr	x28, [x26, #16448]
     158:	stp	x21, x22, [sp, #32]
     15c:	mov	x21, x1
     160:	stp	x23, x24, [sp, #48]
     164:	cmp	x0, x28
     168:	b.cc	2c0 <grub_mod_init-0x318>  // b.lo, b.ul, b.last
     16c:	add	x0, x26, #0x40
     170:	add	x24, x26, #0x8
     174:	mov	x20, #0x0                   	// #0
     178:	mov	x23, #0x2000                	// #8192
     17c:	mov	x22, #0x2001                	// #8193
     180:	str	x0, [sp, #104]
     184:	b	1c4 <grub_mod_init-0x414>
     188:	ldr	x0, [x26, #56]
     18c:	mov	x1, x24
     190:	bl	28f8 <xz_dec_run>
     194:	mov	w27, w0
     198:	sub	w0, w0, #0x2
     19c:	cmp	w0, #0x4
     1a0:	b.ls	224 <grub_mod_init-0x3b4>  // b.plast
     1a4:	ldr	x1, [x26, #40]
     1a8:	ldr	x2, [x25, #24]
     1ac:	add	x28, x28, x1
     1b0:	cmp	x2, x28
     1b4:	b.ls	258 <grub_mod_init-0x380>  // b.plast
     1b8:	str	xzr, [x26, #40]
     1bc:	cmp	w27, #0x1
     1c0:	b.eq	290 <grub_mod_init-0x348>  // b.none
     1c4:	sub	x0, x20, x28
     1c8:	cbz	x19, 290 <grub_mod_init-0x348>
     1cc:	ldr	x3, [x25, #24]
     1d0:	add	x3, x19, x3
     1d4:	add	x3, x3, x0
     1d8:	ldp	x1, x0, [x26, #16]
     1dc:	cmp	x3, x22
     1e0:	csel	x3, x3, x23, cc  // cc = lo, ul, last
     1e4:	str	x3, [x26, #48]
     1e8:	cmp	x1, x0
     1ec:	b.ne	188 <grub_mod_init-0x450>  // b.any
     1f0:	ldr	x0, [x26]
     1f4:	mov	x2, #0x2000                	// #8192
     1f8:	ldr	x1, [sp, #104]
     1fc:	bl	0 <grub_file_read>
     200:	tbnz	x0, #63, 2e8 <grub_mod_init-0x2f0>
     204:	stp	xzr, x0, [x26, #16]
     208:	mov	x1, x24
     20c:	ldr	x0, [x26, #56]
     210:	bl	28f8 <xz_dec_run>
     214:	mov	w27, w0
     218:	sub	w0, w0, #0x2
     21c:	cmp	w0, #0x4
     220:	b.hi	1a4 <grub_mod_init-0x434>  // b.pmore
     224:	adrp	x1, 0 <grub_mod_init-0x5d8>
     228:	mov	w0, #0x1a                  	// #26
     22c:	mov	x20, #0xffffffffffffffff    	// #-1
     230:	ldr	x1, [x1]
     234:	bl	0 <grub_error>
     238:	mov	x0, x20
     23c:	ldp	x19, x20, [sp, #16]
     240:	ldp	x21, x22, [sp, #32]
     244:	ldp	x23, x24, [sp, #48]
     248:	ldp	x25, x26, [sp, #64]
     24c:	ldp	x27, x28, [sp, #80]
     250:	ldp	x29, x30, [sp], #112
     254:	ret
     258:	add	x2, x20, x2
     25c:	mov	x0, x21
     260:	sub	x3, x2, x28
     264:	sub	x2, x28, x2
     268:	add	x1, x1, x3
     26c:	add	x19, x19, x3
     270:	ldr	x3, [x26, #32]
     274:	add	x20, x20, x2
     278:	add	x21, x21, x2
     27c:	add	x1, x3, x1
     280:	bl	0 <grub_memmove>
     284:	str	xzr, [x26, #40]
     288:	cmp	w27, #0x1
     28c:	b.ne	1c4 <grub_mod_init-0x414>  // b.any
     290:	tbnz	x20, #63, 238 <grub_mod_init-0x3a0>
     294:	ldr	x0, [x25, #24]
     298:	ldp	x21, x22, [sp, #32]
     29c:	add	x0, x0, x20
     2a0:	str	x0, [x26, #16448]
     2a4:	mov	x0, x20
     2a8:	ldp	x19, x20, [sp, #16]
     2ac:	ldp	x23, x24, [sp, #48]
     2b0:	ldp	x25, x26, [sp, #64]
     2b4:	ldp	x27, x28, [sp, #80]
     2b8:	ldp	x29, x30, [sp], #112
     2bc:	ret
     2c0:	ldr	x0, [x26, #56]
     2c4:	bl	2860 <xz_dec_reset>
     2c8:	stp	xzr, xzr, [x26, #16]
     2cc:	mov	x1, #0x0                   	// #0
     2d0:	ldr	x0, [x26]
     2d4:	str	xzr, [x26, #40]
     2d8:	str	xzr, [x26, #16448]
     2dc:	bl	0 <grub_file_seek>
     2e0:	ldr	x28, [x26, #16448]
     2e4:	b	16c <grub_mod_init-0x46c>
     2e8:	mov	x20, #0xffffffffffffffff    	// #-1
     2ec:	mov	x0, x20
     2f0:	ldp	x19, x20, [sp, #16]
     2f4:	ldp	x21, x22, [sp, #32]
     2f8:	ldp	x23, x24, [sp, #48]
     2fc:	ldp	x25, x26, [sp, #64]
     300:	ldp	x27, x28, [sp, #80]
     304:	ldp	x29, x30, [sp], #112
     308:	ret
     30c:	nop
	...
     318:	stp	x29, x30, [sp, #-96]!
     31c:	mov	x29, sp
     320:	stp	x19, x20, [sp, #16]
     324:	mov	x19, x0
     328:	tbz	w1, #17, 33c <grub_mod_init-0x29c>
     32c:	mov	x0, x19
     330:	ldp	x19, x20, [sp, #16]
     334:	ldp	x29, x30, [sp], #96
     338:	ret
     33c:	mov	x0, #0x68                  	// #104
     340:	stp	x21, x22, [sp, #32]
     344:	bl	0 <grub_zalloc>
     348:	mov	x21, x0
     34c:	cbz	x0, 560 <grub_mod_init-0x78>
     350:	mov	x0, #0x4048                	// #16456
     354:	bl	0 <grub_zalloc>
     358:	mov	x20, x0
     35c:	cbz	x0, 588 <grub_mod_init-0x50>
     360:	ldr	x3, [x19, #8]
     364:	str	x19, [x20]
     368:	mov	x0, #0xffffffffffffffff    	// #-1
     36c:	str	x0, [x21, #64]
     370:	adrp	x2, 0 <grub_mod_init-0x5d8>
     374:	mov	w1, #0x1                   	// #1
     378:	ldr	x0, [x19, #24]
     37c:	str	w1, [x21, #72]
     380:	ldr	x2, [x2]
     384:	stp	x3, x2, [x21, #8]
     388:	str	x20, [x21, #80]
     38c:	cbnz	x0, 420 <grub_mod_init-0x1b8>
     390:	mov	w0, #0x10000               	// #65536
     394:	bl	33c8 <xz_dec_init>
     398:	str	x0, [x20, #56]
     39c:	cbz	x0, 56c <grub_mod_init-0x6c>
     3a0:	add	x0, x20, #0x40
     3a4:	mov	x1, #0x2040                	// #8256
     3a8:	add	x1, x20, x1
     3ac:	str	x0, [x20, #8]
     3b0:	str	x1, [x20, #32]
     3b4:	mov	x0, #0x2000                	// #8192
     3b8:	mov	x2, #0xc                   	// #12
     3bc:	ldr	x22, [x21, #80]
     3c0:	str	x0, [x20, #48]
     3c4:	mov	x1, x22
     3c8:	ldr	x0, [x1], #64
     3cc:	bl	0 <grub_file_read>
     3d0:	str	x0, [x22, #24]
     3d4:	cmp	x0, #0xc
     3d8:	b.eq	430 <grub_mod_init-0x1a8>  // b.none
     3dc:	adrp	x2, 0 <grub_mod_init-0x5d8>
     3e0:	mov	x1, #0x0                   	// #0
     3e4:	mov	x0, x19
     3e8:	ldr	x2, [x2]
     3ec:	str	wzr, [x2]
     3f0:	bl	0 <grub_file_seek>
     3f4:	ldr	x0, [x20, #56]
     3f8:	bl	3458 <xz_dec_end>
     3fc:	mov	x0, x20
     400:	bl	0 <grub_free>
     404:	mov	x0, x21
     408:	bl	0 <grub_free>
     40c:	mov	x0, x19
     410:	ldp	x19, x20, [sp, #16]
     414:	ldp	x21, x22, [sp, #32]
     418:	ldp	x29, x30, [sp], #96
     41c:	ret
     420:	mov	x0, x19
     424:	mov	x1, #0x0                   	// #0
     428:	bl	0 <grub_file_seek>
     42c:	b	390 <grub_mod_init-0x248>
     430:	ldr	x0, [x22, #56]
     434:	add	x1, x22, #0x8
     438:	bl	28f8 <xz_dec_run>
     43c:	cbnz	w0, 3dc <grub_mod_init-0x1fc>
     440:	ldr	x22, [x21, #80]
     444:	ldr	x0, [x22]
     448:	ldr	x1, [x0, #64]
     44c:	sub	x1, x1, #0x2
     450:	bl	0 <grub_file_seek>
     454:	ldr	x0, [x22]
     458:	add	x1, sp, #0x48
     45c:	mov	x2, #0x2                   	// #2
     460:	bl	0 <grub_file_read>
     464:	cmp	x0, #0x2
     468:	b.ne	3dc <grub_mod_init-0x1fc>  // b.any
     46c:	adrp	x1, 0 <grub_mod_init-0x5d8>
     470:	mov	x2, x0
     474:	add	x0, sp, #0x48
     478:	ldr	x1, [x1]
     47c:	bl	0 <grub_memcmp>
     480:	cbnz	w0, 3dc <grub_mod_init-0x1fc>
     484:	ldr	x0, [x22]
     488:	ldr	x1, [x0, #64]
     48c:	sub	x1, x1, #0x8
     490:	bl	0 <grub_file_seek>
     494:	ldr	x0, [x22]
     498:	add	x1, sp, #0x4c
     49c:	mov	x2, #0x4                   	// #4
     4a0:	bl	0 <grub_file_read>
     4a4:	cmp	x0, #0x4
     4a8:	b.ne	3dc <grub_mod_init-0x1fc>  // b.any
     4ac:	ldr	w2, [sp, #76]
     4b0:	mov	x3, #0xfffffffffffffff4    	// #-12
     4b4:	ldr	x0, [x22]
     4b8:	add	w2, w2, #0x1
     4bc:	lsl	w2, w2, #2
     4c0:	str	w2, [sp, #76]
     4c4:	ldr	x1, [x0, #64]
     4c8:	sub	x3, x3, w2, uxtw
     4cc:	add	x1, x3, x1
     4d0:	bl	0 <grub_file_seek>
     4d4:	ldr	x0, [x22]
     4d8:	add	x1, sp, #0x47
     4dc:	mov	x2, #0x1                   	// #1
     4e0:	bl	0 <grub_file_read>
     4e4:	cmp	x0, #0x1
     4e8:	b.eq	4f4 <grub_mod_init-0xe4>  // b.none
     4ec:	ldrb	w0, [sp, #71]
     4f0:	cbnz	w0, 3dc <grub_mod_init-0x1fc>
     4f4:	ldr	x0, [x22]
     4f8:	add	x1, sp, #0x58
     4fc:	bl	50 <grub_mod_init-0x588>
     500:	cmp	x0, #0x0
     504:	b.le	3dc <grub_mod_init-0x1fc>
     508:	str	x23, [sp, #48]
     50c:	ldr	x23, [sp, #88]
     510:	cbz	x23, 59c <grub_mod_init-0x3c>
     514:	mov	x23, #0x0                   	// #0
     518:	b	540 <grub_mod_init-0x98>
     51c:	ldr	x0, [x22]
     520:	bl	50 <grub_mod_init-0x588>
     524:	cmp	x0, #0x0
     528:	b.le	558 <grub_mod_init-0x80>
     52c:	ldp	x1, x0, [sp, #80]
     530:	sub	x0, x0, #0x1
     534:	str	x0, [sp, #88]
     538:	add	x23, x23, x1
     53c:	cbz	x0, 59c <grub_mod_init-0x3c>
     540:	ldr	x0, [x22]
     544:	add	x1, sp, #0x50
     548:	bl	50 <grub_mod_init-0x588>
     54c:	cmp	x0, #0x0
     550:	add	x1, sp, #0x50
     554:	b.gt	51c <grub_mod_init-0xbc>
     558:	ldr	x23, [sp, #48]
     55c:	b	3dc <grub_mod_init-0x1fc>
     560:	mov	x19, #0x0                   	// #0
     564:	ldp	x21, x22, [sp, #32]
     568:	b	32c <grub_mod_init-0x2ac>
     56c:	mov	x0, x21
     570:	bl	0 <grub_free>
     574:	mov	x0, x20
     578:	mov	x19, #0x0                   	// #0
     57c:	bl	0 <grub_free>
     580:	ldp	x21, x22, [sp, #32]
     584:	b	32c <grub_mod_init-0x2ac>
     588:	mov	x0, x21
     58c:	mov	x19, #0x0                   	// #0
     590:	bl	0 <grub_free>
     594:	ldp	x21, x22, [sp, #32]
     598:	b	32c <grub_mod_init-0x2ac>
     59c:	ldr	x0, [x22]
     5a0:	str	x23, [x21, #64]
     5a4:	mov	x19, x21
     5a8:	mov	x1, #0xc                   	// #12
     5ac:	bl	0 <grub_file_seek>
     5b0:	ldp	x21, x22, [sp, #32]
     5b4:	ldr	x23, [sp, #48]
     5b8:	b	32c <grub_mod_init-0x2ac>
     5bc:	nop
	...

00000000000005d8 <grub_mod_init>:
     5d8:	adrp	x0, 0 <grub_mod_init-0x5d8>
     5dc:	adrp	x1, 0 <grub_mod_init-0x5d8>
     5e0:	ldr	x0, [x0]
     5e4:	ldr	x1, [x1]
     5e8:	str	x1, [x0, #16]
     5ec:	ret
	...

0000000000000600 <grub_mod_fini>:
     600:	adrp	x0, 0 <grub_mod_init-0x5d8>
     604:	ldr	x0, [x0]
     608:	str	xzr, [x0, #16]
     60c:	ret
	...
     618:	stp	x29, x30, [sp, #-48]!
     61c:	mov	x29, sp
     620:	stp	x21, x22, [sp, #32]
     624:	mov	x21, x1
     628:	add	x22, x0, #0x40
     62c:	stp	x19, x20, [sp, #16]
     630:	mov	x20, x0
     634:	mov	x1, x22
     638:	ldr	x2, [x0, #48]
     63c:	ldp	x3, x0, [x21, #24]
     640:	ldr	x19, [x21, #40]
     644:	sub	x19, x19, x0
     648:	add	x0, x3, x0
     64c:	cmp	x19, x2
     650:	csel	x19, x19, x2, ls  // ls = plast
     654:	mov	x2, x19
     658:	bl	0 <grub_memmove>
     65c:	ldp	x0, x2, [x20, #48]
     660:	add	x1, x22, x19
     664:	ldr	x3, [x21, #32]
     668:	add	x3, x3, x19
     66c:	str	x3, [x21, #32]
     670:	sub	x0, x0, x19
     674:	sub	x2, x2, x19
     678:	stp	x0, x2, [x20, #48]
     67c:	mov	x0, x22
     680:	ldp	x19, x20, [sp, #16]
     684:	ldp	x21, x22, [sp, #32]
     688:	ldp	x29, x30, [sp], #48
     68c:	b	0 <grub_memmove>
     690:	cmp	x3, #0x4
     694:	mov	x9, x0
     698:	b.ls	828 <grub_mod_fini+0x228>  // b.plast
     69c:	ldr	w6, [x1]
     6a0:	sub	x8, x3, #0x4
     6a4:	mov	x4, #0xffffffffffffffff    	// #-1
     6a8:	mov	x0, #0x0                   	// #0
     6ac:	mov	w11, #0xfffffffb            	// #-5
     6b0:	adrp	x10, 0 <grub_mod_init-0x5d8>
     6b4:	mov	w12, #0x18                  	// #24
     6b8:	mov	w14, #0x20                  	// #32
     6bc:	mov	w13, #0x1                   	// #1
     6c0:	ldrb	w5, [x2, x0]
     6c4:	add	x7, x0, #0x1
     6c8:	and	w5, w5, #0xfe
     6cc:	cmp	w5, #0xe8
     6d0:	b.ne	820 <grub_mod_fini+0x220>  // b.any
     6d4:	sub	x3, x0, x4
     6d8:	add	x4, x0, #0x4
     6dc:	cmp	x3, #0x3
     6e0:	b.hi	7dc <grub_mod_fini+0x1dc>  // b.pmore
     6e4:	sub	w3, w3, #0x1
     6e8:	lsl	w3, w6, w3
     6ec:	ands	w6, w3, #0x7
     6f0:	b.eq	7dc <grub_mod_fini+0x1dc>  // b.none
     6f4:	ldr	x5, [x10]
     6f8:	mov	w15, w6
     6fc:	add	x16, x5, #0x8
     700:	ldrb	w3, [x5, w6, uxtw]
     704:	ldr	w16, [x16, x15, lsl #2]
     708:	sub	x3, x4, x3
     70c:	ldrb	w3, [x2, x3]
     710:	cbz	w16, 7f4 <grub_mod_fini+0x1f4>
     714:	sub	w3, w3, #0x1
     718:	and	w3, w3, #0xff
     71c:	cmp	w3, #0xfd
     720:	b.hi	7f4 <grub_mod_fini+0x1f4>  // b.pmore
     724:	ldrb	w3, [x2, x4]
     728:	sub	w3, w3, #0x1
     72c:	and	w3, w3, #0xff
     730:	cmp	w3, #0xfd
     734:	b.ls	7f4 <grub_mod_fini+0x1f4>  // b.plast
     738:	ldrb	w4, [x5, x15]
     73c:	add	x15, x2, x7
     740:	ldr	w5, [x9]
     744:	ldr	w3, [x2, x7]
     748:	sub	w7, w11, w5
     74c:	lsl	w4, w4, #3
     750:	sub	w7, w7, w0
     754:	sub	w16, w12, w4
     758:	add	w3, w7, w3
     75c:	lsr	w5, w3, w16
     760:	sub	w5, w5, #0x1
     764:	and	w5, w5, #0xff
     768:	cmp	w5, #0xfd
     76c:	b.ls	79c <grub_mod_fini+0x19c>  // b.plast
     770:	sub	w5, w14, w4
     774:	lsl	w5, w13, w5
     778:	sub	w5, w5, #0x1
     77c:	nop
     780:	eor	w3, w5, w3
     784:	add	w3, w3, w7
     788:	lsr	w4, w3, w16
     78c:	sub	w4, w4, #0x1
     790:	and	w4, w4, #0xff
     794:	cmp	w4, #0xfd
     798:	b.hi	780 <grub_mod_fini+0x180>  // b.pmore
     79c:	and	w5, w3, #0x1000000
     7a0:	and	w3, w3, #0x1ffffff
     7a4:	neg	w5, w5
     7a8:	mov	x4, x0
     7ac:	orr	w3, w3, w5
     7b0:	str	w3, [x15]
     7b4:	add	x0, x0, #0x5
     7b8:	cmp	x8, x0
     7bc:	b.hi	6c0 <grub_mod_fini+0xc0>  // b.pmore
     7c0:	sub	x4, x0, x4
     7c4:	sub	w3, w4, #0x1
     7c8:	cmp	x4, #0x4
     7cc:	lsl	w3, w6, w3
     7d0:	csel	w3, w3, wzr, cc  // cc = lo, ul, last
     7d4:	str	w3, [x1]
     7d8:	ret
     7dc:	ldrb	w3, [x2, x4]
     7e0:	sub	w3, w3, #0x1
     7e4:	and	w3, w3, #0xff
     7e8:	cmp	w3, #0xfd
     7ec:	b.hi	830 <grub_mod_fini+0x230>  // b.pmore
     7f0:	mov	w6, #0x0                   	// #0
     7f4:	lsl	w3, w6, #1
     7f8:	mov	x4, x0
     7fc:	orr	w6, w3, #0x1
     800:	mov	x0, x7
     804:	cmp	x8, x0
     808:	b.ls	7c0 <grub_mod_fini+0x1c0>  // b.plast
     80c:	ldrb	w5, [x2, x0]
     810:	add	x7, x0, #0x1
     814:	and	w5, w5, #0xfe
     818:	cmp	w5, #0xe8
     81c:	b.eq	6d4 <grub_mod_fini+0xd4>  // b.none
     820:	mov	x0, x7
     824:	b	804 <grub_mod_fini+0x204>
     828:	mov	x0, #0x0                   	// #0
     82c:	ret
     830:	ldr	w3, [x9]
     834:	add	x15, x2, x7
     838:	ldr	w4, [x2, x7]
     83c:	mov	w6, #0x0                   	// #0
     840:	sub	w3, w11, w3
     844:	sub	w3, w3, w0
     848:	add	w3, w3, w4
     84c:	b	79c <grub_mod_fini+0x19c>
	...
     858:	cmp	x2, #0x3
     85c:	b.ls	8e0 <grub_mod_fini+0x2e0>  // b.plast
     860:	sub	x7, x2, #0x4
     864:	mov	w6, #0x1                   	// #1
     868:	and	x8, x7, #0xfffffffffffffffc
     86c:	mov	x2, x1
     870:	add	x8, x1, x8
     874:	movk	w6, #0x4800, lsl #16
     878:	ldr	w3, [x2]
     87c:	add	x5, x2, #0x4
     880:	rev	w3, w3
     884:	and	w4, w3, #0xfc000003
     888:	cmp	w4, w6
     88c:	b.ne	8c8 <grub_mod_fini+0x2c8>  // b.any
     890:	ldr	w9, [x0]
     894:	and	w3, w3, #0x3fffffc
     898:	sub	w4, w1, w2
     89c:	sub	w3, w3, w9
     8a0:	add	w3, w4, w3
     8a4:	and	w3, w3, #0x3fffffc
     8a8:	orr	w3, w3, w6
     8ac:	strb	w3, [x2, #3]
     8b0:	lsr	w9, w3, #24
     8b4:	lsr	w4, w3, #16
     8b8:	lsr	w3, w3, #8
     8bc:	strb	w9, [x2]
     8c0:	strb	w4, [x2, #1]
     8c4:	strb	w3, [x2, #2]
     8c8:	cmp	x2, x8
     8cc:	mov	x2, x5
     8d0:	b.ne	878 <grub_mod_fini+0x278>  // b.any
     8d4:	and	x0, x7, #0xfffffffffffffffc
     8d8:	add	x0, x0, #0x4
     8dc:	ret
     8e0:	mov	x0, #0x0                   	// #0
     8e4:	ret
     8e8:	cmp	x2, #0xf
     8ec:	b.ls	ae0 <grub_mod_fini+0x4e0>  // b.plast
     8f0:	adrp	x3, 0 <grub_mod_init-0x5d8>
     8f4:	mov	x17, #0xffff000000001fff    	// #-281474976702465
     8f8:	sub	x14, x1, #0x10
     8fc:	mov	x15, x0
     900:	ldr	x12, [x3]
     904:	mov	x0, #0x10                  	// #16
     908:	movk	x17, #0xffee, lsl #32
     90c:	mov	w16, #0x1                   	// #1
     910:	add	x12, x12, #0x28
     914:	nop
     918:	ldrb	w3, [x14, x0]
     91c:	sub	x11, x0, #0x10
     920:	sub	w13, w0, #0x10
     924:	mov	w8, #0x5                   	// #5
     928:	and	w3, w3, #0x1f
     92c:	mov	w9, #0x0                   	// #0
     930:	ldrb	w10, [x12, w3, sxtw]
     934:	lsr	w3, w10, w9
     938:	tbnz	w3, #0, 960 <grub_mod_fini+0x360>
     93c:	add	w8, w8, #0x29
     940:	add	w9, w9, #0x1
     944:	cmp	w8, #0x80
     948:	b.ne	934 <grub_mod_fini+0x334>  // b.any
     94c:	add	x3, x0, #0x10
     950:	cmp	x3, x2
     954:	b.hi	ad0 <grub_mod_fini+0x4d0>  // b.pmore
     958:	mov	x0, x3
     95c:	b	918 <grub_mod_fini+0x318>
     960:	lsr	w6, w8, #3
     964:	and	w18, w8, #0x7
     968:	add	x6, x6, x11
     96c:	mov	x5, #0x0                   	// #0
     970:	add	x6, x1, x6
     974:	mov	x3, #0x0                   	// #0
     978:	ldrb	w4, [x6, x3]
     97c:	lsl	w7, w3, #3
     980:	add	x3, x3, #0x1
     984:	cmp	x3, #0x6
     988:	lsl	x4, x4, x7
     98c:	orr	x5, x5, x4
     990:	b.ne	978 <grub_mod_fini+0x378>  // b.any
     994:	lsr	x3, x5, x18
     998:	ubfx	x4, x3, #37, #4
     99c:	cmp	x4, #0x5
     9a0:	b.ne	93c <grub_mod_fini+0x33c>  // b.any
     9a4:	tst	x3, #0xe00
     9a8:	ubfx	x4, x3, #9, #3
     9ac:	b.ne	93c <grub_mod_fini+0x33c>  // b.any
     9b0:	stp	x29, x30, [sp, #-32]!
     9b4:	mov	x29, sp
     9b8:	str	x19, [sp, #16]
     9bc:	lsr	x7, x3, #36
     9c0:	ubfx	x30, x3, #13, #20
     9c4:	ldr	w19, [x15]
     9c8:	and	x3, x3, x17
     9cc:	ubfiz	w7, w7, #20, #1
     9d0:	orr	w7, w7, w30
     9d4:	add	w19, w13, w19
     9d8:	lsl	w30, w16, w18
     9dc:	sub	w30, w30, #0x1
     9e0:	lsl	w7, w7, #4
     9e4:	sub	w7, w7, w19
     9e8:	sxtw	x30, w30
     9ec:	and	x30, x30, x5
     9f0:	lsr	w5, w7, #4
     9f4:	lsl	x7, x5, #16
     9f8:	ubfiz	x5, x5, #13, #20
     9fc:	and	x7, x7, #0x1000000000
     a00:	orr	x5, x5, x7
     a04:	orr	x3, x5, x3
     a08:	lsl	x3, x3, x18
     a0c:	orr	x3, x3, x30
     a10:	lsl	w5, w4, #3
     a14:	lsr	x5, x3, x5
     a18:	strb	w5, [x6, x4]
     a1c:	add	x4, x4, #0x1
     a20:	cmp	x4, #0x6
     a24:	b.ne	a10 <grub_mod_fini+0x410>  // b.any
     a28:	add	w8, w8, #0x29
     a2c:	add	w9, w9, #0x1
     a30:	cmp	w8, #0x80
     a34:	b.eq	aa0 <grub_mod_fini+0x4a0>  // b.none
     a38:	lsr	w3, w10, w9
     a3c:	tbz	w3, #0, a28 <grub_mod_fini+0x428>
     a40:	lsr	w6, w8, #3
     a44:	and	w18, w8, #0x7
     a48:	add	x6, x6, x11
     a4c:	mov	x5, #0x0                   	// #0
     a50:	add	x6, x1, x6
     a54:	mov	x3, #0x0                   	// #0
     a58:	ldrb	w4, [x6, x3]
     a5c:	lsl	w7, w3, #3
     a60:	add	x3, x3, #0x1
     a64:	cmp	x3, #0x6
     a68:	lsl	x4, x4, x7
     a6c:	orr	x5, x5, x4
     a70:	b.ne	a58 <grub_mod_fini+0x458>  // b.any
     a74:	lsr	x3, x5, x18
     a78:	ubfx	x4, x3, #37, #4
     a7c:	cmp	x4, #0x5
     a80:	b.ne	a28 <grub_mod_fini+0x428>  // b.any
     a84:	tst	x3, #0xe00
     a88:	ubfx	x4, x3, #9, #3
     a8c:	b.eq	9bc <grub_mod_fini+0x3bc>  // b.none
     a90:	add	w8, w8, #0x29
     a94:	add	w9, w9, #0x1
     a98:	cmp	w8, #0x80
     a9c:	b.ne	a38 <grub_mod_fini+0x438>  // b.any
     aa0:	add	x3, x0, #0x10
     aa4:	cmp	x3, x2
     aa8:	b.hi	ad4 <grub_mod_fini+0x4d4>  // b.pmore
     aac:	mov	x0, x3
     ab0:	ldrb	w3, [x14, x3]
     ab4:	sub	x11, x0, #0x10
     ab8:	sub	w13, w0, #0x10
     abc:	and	w3, w3, #0x1f
     ac0:	mov	w8, #0x5                   	// #5
     ac4:	mov	w9, #0x0                   	// #0
     ac8:	ldrb	w10, [x12, w3, sxtw]
     acc:	b	a38 <grub_mod_fini+0x438>
     ad0:	ret
     ad4:	ldr	x19, [sp, #16]
     ad8:	ldp	x29, x30, [sp], #32
     adc:	ret
     ae0:	mov	x0, #0x0                   	// #0
     ae4:	ret
	...
     af0:	cmp	x2, #0x3
     af4:	mov	x8, x0
     af8:	b.ls	b74 <grub_mod_fini+0x574>  // b.plast
     afc:	mov	x0, #0x4                   	// #4
     b00:	mov	w10, #0xfffffff8            	// #-8
     b04:	b	b0c <grub_mod_fini+0x50c>
     b08:	mov	x0, x6
     b0c:	ldrb	w3, [x1, #3]
     b10:	add	x6, x0, #0x4
     b14:	cmp	w3, #0xeb
     b18:	b.ne	b64 <grub_mod_fini+0x564>  // b.any
     b1c:	ldrb	w7, [x1, #2]
     b20:	sub	w3, w0, #0x4
     b24:	ldrb	w5, [x1, #1]
     b28:	ldrb	w9, [x1]
     b2c:	lsl	w7, w7, #16
     b30:	ldr	w4, [x8]
     b34:	orr	w5, w7, w5, lsl #8
     b38:	orr	w5, w5, w9
     b3c:	sub	w4, w10, w4
     b40:	lsl	w5, w5, #2
     b44:	sub	w3, w5, w3
     b48:	add	w3, w4, w3
     b4c:	lsr	w5, w3, #2
     b50:	lsr	w4, w3, #10
     b54:	lsr	w3, w3, #18
     b58:	strb	w5, [x1]
     b5c:	strb	w4, [x1, #1]
     b60:	strb	w3, [x1, #2]
     b64:	add	x1, x1, #0x4
     b68:	cmp	x6, x2
     b6c:	b.ls	b08 <grub_mod_fini+0x508>  // b.plast
     b70:	ret
     b74:	mov	x0, #0x0                   	// #0
     b78:	ret
     b7c:	nop
     b80:	mov	x10, x0
     b84:	cmp	x2, #0x3
     b88:	mov	x0, #0x0                   	// #0
     b8c:	b.ls	bf4 <grub_mod_fini+0x5f4>  // b.plast
     b90:	mov	w11, #0xfffffffc            	// #-4
     b94:	b	bac <grub_mod_fini+0x5ac>
     b98:	mov	x3, x0
     b9c:	mov	x0, x7
     ba0:	add	x3, x3, #0x6
     ba4:	cmp	x3, x2
     ba8:	b.hi	bf4 <grub_mod_fini+0x5f4>  // b.pmore
     bac:	add	x5, x0, #0x1
     bb0:	add	x3, x0, #0x2
     bb4:	mov	x7, x3
     bb8:	ldrb	w4, [x1, x5]
     bbc:	and	w6, w4, #0xf8
     bc0:	cmp	w6, #0xf0
     bc4:	b.ne	b98 <grub_mod_fini+0x598>  // b.any
     bc8:	add	x7, x0, #0x3
     bcc:	mov	x9, x3
     bd0:	ldrb	w6, [x1, x7]
     bd4:	and	w8, w6, #0xf8
     bd8:	cmp	w8, #0xf8
     bdc:	b.eq	bf8 <grub_mod_fini+0x5f8>  // b.none
     be0:	mov	x3, x0
     be4:	mov	x0, x9
     be8:	add	x3, x3, #0x6
     bec:	cmp	x3, x2
     bf0:	b.ls	bac <grub_mod_fini+0x5ac>  // b.plast
     bf4:	ret
     bf8:	ldrb	w8, [x1, x0]
     bfc:	ubfiz	w6, w6, #8, #3
     c00:	ldrb	w9, [x1, x3]
     c04:	ubfiz	w4, w4, #19, #3
     c08:	orr	w4, w4, w6
     c0c:	ldr	w6, [x10]
     c10:	orr	w8, w9, w8, lsl #11
     c14:	sub	w6, w11, w6
     c18:	orr	w4, w4, w8
     c1c:	lsl	w4, w4, #1
     c20:	sub	w4, w4, w0
     c24:	add	w4, w6, w4
     c28:	ubfx	x6, x4, #20, #3
     c2c:	lsr	w8, w4, #12
     c30:	orr	w6, w6, #0xfffffff0
     c34:	strb	w6, [x1, x5]
     c38:	lsr	w5, w4, #9
     c3c:	strb	w8, [x1, x0]
     c40:	orr	w5, w5, #0xfffffff8
     c44:	strb	w5, [x1, x7]
     c48:	lsr	w4, w4, #1
     c4c:	add	x0, x0, #0x4
     c50:	strb	w4, [x1, x3]
     c54:	b	ba0 <grub_mod_fini+0x5a0>
     c58:	cmp	x2, #0x3
     c5c:	mov	x8, x0
     c60:	b.ls	cec <grub_mod_fini+0x6ec>  // b.plast
     c64:	mov	x0, #0x4                   	// #4
     c68:	mov	w7, #0x1ff                 	// #511
     c6c:	mov	w9, #0x40000000            	// #1073741824
     c70:	b	c78 <grub_mod_fini+0x678>
     c74:	mov	x0, x5
     c78:	ldr	w3, [x1]
     c7c:	sub	w6, w0, #0x4
     c80:	add	x5, x0, #0x4
     c84:	rev	w3, w3
     c88:	lsl	w4, w3, #2
     c8c:	lsr	w3, w3, #22
     c90:	cmp	w3, #0x100
     c94:	ccmp	w3, w7, #0x4, ne  // ne = any
     c98:	b.ne	cdc <grub_mod_fini+0x6dc>  // b.any
     c9c:	ldr	w3, [x8]
     ca0:	sub	w4, w4, w3
     ca4:	sub	w4, w4, w6
     ca8:	lsr	w4, w4, #2
     cac:	and	w3, w4, #0x400000
     cb0:	and	w4, w4, #0x3fffff
     cb4:	sub	w3, w9, w3
     cb8:	orr	w3, w3, w4
     cbc:	orr	w3, w3, #0x40000000
     cc0:	strb	w3, [x1, #3]
     cc4:	lsr	w6, w3, #24
     cc8:	lsr	w4, w3, #16
     ccc:	lsr	w3, w3, #8
     cd0:	strb	w6, [x1]
     cd4:	strb	w4, [x1, #1]
     cd8:	strb	w3, [x1, #2]
     cdc:	add	x1, x1, #0x4
     ce0:	cmp	x5, x2
     ce4:	b.ls	c74 <grub_mod_fini+0x674>  // b.plast
     ce8:	ret
     cec:	mov	x0, #0x0                   	// #0
     cf0:	ret
     cf4:	nop
     cf8:	stp	x29, x30, [sp, #-32]!
     cfc:	mov	x29, sp
     d00:	ldr	x4, [x2]
     d04:	stp	x19, x20, [sp, #16]
     d08:	ldr	w5, [x0]
     d0c:	mov	x20, x2
     d10:	mov	x19, x0
     d14:	cmp	w5, #0x7
     d18:	add	x1, x1, x4
     d1c:	sub	x2, x3, x4
     d20:	b.eq	e6c <grub_mod_fini+0x86c>  // b.none
     d24:	b.hi	dac <grub_mod_fini+0x7ac>  // b.pmore
     d28:	cmp	w5, #0x5
     d2c:	b.eq	e0c <grub_mod_fini+0x80c>  // b.none
     d30:	cmp	w5, #0x6
     d34:	b.ne	d68 <grub_mod_fini+0x768>  // b.any
     d38:	add	x0, x0, #0xc
     d3c:	bl	8e8 <grub_mod_fini+0x2e8>
     d40:	ldr	x2, [x20]
     d44:	mov	w1, w0
     d48:	add	x4, x0, x2
     d4c:	ldr	w0, [x19, #12]
     d50:	str	x4, [x20]
     d54:	add	w0, w0, w1
     d58:	str	w0, [x19, #12]
     d5c:	ldp	x19, x20, [sp, #16]
     d60:	ldp	x29, x30, [sp], #32
     d64:	ret
     d68:	cmp	w5, #0x4
     d6c:	b.ne	dec <grub_mod_fini+0x7ec>  // b.any
     d70:	mov	x3, x2
     d74:	mov	x2, x1
     d78:	add	x1, x0, #0x10
     d7c:	add	x0, x0, #0xc
     d80:	bl	690 <grub_mod_fini+0x90>
     d84:	mov	w1, w0
     d88:	ldr	x2, [x20]
     d8c:	add	x4, x0, x2
     d90:	ldr	w0, [x19, #12]
     d94:	str	x4, [x20]
     d98:	add	w0, w0, w1
     d9c:	str	w0, [x19, #12]
     da0:	ldp	x19, x20, [sp, #16]
     da4:	ldp	x29, x30, [sp], #32
     da8:	ret
     dac:	cmp	w5, #0x8
     db0:	b.eq	e3c <grub_mod_fini+0x83c>  // b.none
     db4:	cmp	w5, #0x9
     db8:	b.ne	dec <grub_mod_fini+0x7ec>  // b.any
     dbc:	add	x0, x0, #0xc
     dc0:	bl	c58 <grub_mod_fini+0x658>
     dc4:	ldr	x2, [x20]
     dc8:	mov	w1, w0
     dcc:	add	x4, x0, x2
     dd0:	ldr	w0, [x19, #12]
     dd4:	str	x4, [x20]
     dd8:	add	w0, w0, w1
     ddc:	str	w0, [x19, #12]
     de0:	ldp	x19, x20, [sp, #16]
     de4:	ldp	x29, x30, [sp], #32
     de8:	ret
     dec:	ldr	w0, [x19, #12]
     df0:	mov	w1, #0x0                   	// #0
     df4:	str	x4, [x20]
     df8:	add	w0, w0, w1
     dfc:	str	w0, [x19, #12]
     e00:	ldp	x19, x20, [sp, #16]
     e04:	ldp	x29, x30, [sp], #32
     e08:	ret
     e0c:	add	x0, x0, #0xc
     e10:	bl	858 <grub_mod_fini+0x258>
     e14:	ldr	x2, [x20]
     e18:	mov	w1, w0
     e1c:	add	x4, x0, x2
     e20:	ldr	w0, [x19, #12]
     e24:	str	x4, [x20]
     e28:	add	w0, w0, w1
     e2c:	str	w0, [x19, #12]
     e30:	ldp	x19, x20, [sp, #16]
     e34:	ldp	x29, x30, [sp], #32
     e38:	ret
     e3c:	add	x0, x0, #0xc
     e40:	bl	b80 <grub_mod_fini+0x580>
     e44:	ldr	x2, [x20]
     e48:	mov	w1, w0
     e4c:	add	x4, x0, x2
     e50:	ldr	w0, [x19, #12]
     e54:	str	x4, [x20]
     e58:	add	w0, w0, w1
     e5c:	str	w0, [x19, #12]
     e60:	ldp	x19, x20, [sp, #16]
     e64:	ldp	x29, x30, [sp], #32
     e68:	ret
     e6c:	add	x0, x0, #0xc
     e70:	bl	af0 <grub_mod_fini+0x4f0>
     e74:	ldr	x2, [x20]
     e78:	mov	w1, w0
     e7c:	add	x4, x0, x2
     e80:	ldr	w0, [x19, #12]
     e84:	str	x4, [x20]
     e88:	add	w0, w0, w1
     e8c:	str	w0, [x19, #12]
     e90:	ldp	x19, x20, [sp, #16]
     e94:	ldp	x29, x30, [sp], #32
     e98:	ret
     e9c:	nop

0000000000000ea0 <xz_dec_bcj_run>:
     ea0:	stp	x29, x30, [sp, #-64]!
     ea4:	mov	x29, sp
     ea8:	stp	x21, x22, [sp, #32]
     eac:	mov	x21, x1
     eb0:	ldr	x1, [x0, #48]
     eb4:	stp	x19, x20, [sp, #16]
     eb8:	mov	x19, x0
     ebc:	mov	x20, x2
     ec0:	cbnz	x1, 102c <xz_dec_bcj_run+0x18c>
     ec4:	ldp	x3, x0, [x20, #32]
     ec8:	ldr	x2, [x19, #56]
     ecc:	sub	x0, x0, x3
     ed0:	cmp	x2, x0
     ed4:	b.cc	ef0 <xz_dec_bcj_run+0x50>  // b.lo, b.ul, b.last
     ed8:	cbnz	x2, f80 <xz_dec_bcj_run+0xe0>
     edc:	ldr	w0, [x19, #4]
     ee0:	ldp	x19, x20, [sp, #16]
     ee4:	ldp	x21, x22, [sp, #32]
     ee8:	ldp	x29, x30, [sp], #64
     eec:	ret
     ef0:	ldr	x0, [x20, #24]
     ef4:	add	x22, x19, #0x40
     ef8:	mov	x1, x22
     efc:	str	x3, [sp, #56]
     f00:	add	x0, x0, x3
     f04:	bl	0 <grub_memmove>
     f08:	ldr	x2, [x20, #32]
     f0c:	mov	x1, x20
     f10:	ldr	x3, [x19, #56]
     f14:	mov	x0, x21
     f18:	add	x2, x2, x3
     f1c:	str	x2, [x20, #32]
     f20:	bl	1bc0 <xz_dec_lzma2_run>
     f24:	str	w0, [x19, #4]
     f28:	cmp	w0, #0x1
     f2c:	b.eq	f3c <xz_dec_bcj_run+0x9c>  // b.none
     f30:	cbnz	w0, ee0 <xz_dec_bcj_run+0x40>
     f34:	ldr	w0, [x19, #8]
     f38:	cbnz	w0, 1018 <xz_dec_bcj_run+0x178>
     f3c:	ldp	x1, x3, [x20, #24]
     f40:	mov	x0, x19
     f44:	add	x2, sp, #0x38
     f48:	bl	cf8 <grub_mod_fini+0x6f8>
     f4c:	ldr	w0, [x19, #4]
     f50:	cmp	w0, #0x1
     f54:	b.eq	1048 <xz_dec_bcj_run+0x1a8>  // b.none
     f58:	ldp	x3, x2, [x20, #24]
     f5c:	mov	x0, x22
     f60:	ldr	x1, [sp, #56]
     f64:	sub	x2, x2, x1
     f68:	str	x2, [x19, #56]
     f6c:	str	x1, [x20, #32]
     f70:	add	x1, x3, x1
     f74:	bl	0 <grub_memmove>
     f78:	ldr	x2, [x19, #56]
     f7c:	cbz	x2, edc <xz_dec_bcj_run+0x3c>
     f80:	ldr	x0, [x20, #24]
     f84:	str	x0, [x19, #24]
     f88:	ldr	x0, [x20, #32]
     f8c:	str	x0, [x19, #32]
     f90:	ldr	x0, [x20, #40]
     f94:	str	x0, [x19, #40]
     f98:	mov	x3, #0x10                  	// #16
     f9c:	add	x22, x19, #0x40
     fa0:	stp	x22, x2, [x20, #24]
     fa4:	mov	x1, x20
     fa8:	mov	x0, x21
     fac:	str	x3, [x20, #40]
     fb0:	bl	1bc0 <xz_dec_lzma2_run>
     fb4:	cmp	w0, #0x1
     fb8:	ldr	x3, [x20, #32]
     fbc:	str	w0, [x19, #4]
     fc0:	str	x3, [x19, #56]
     fc4:	ldr	x1, [x19, #24]
     fc8:	str	x1, [x20, #24]
     fcc:	ldr	x1, [x19, #32]
     fd0:	str	x1, [x20, #32]
     fd4:	ldr	x1, [x19, #40]
     fd8:	str	x1, [x20, #40]
     fdc:	b.hi	ee0 <xz_dec_bcj_run+0x40>  // b.pmore
     fe0:	mov	x0, x19
     fe4:	mov	x1, x22
     fe8:	add	x2, x19, #0x30
     fec:	bl	cf8 <grub_mod_fini+0x6f8>
     ff0:	ldr	w0, [x19, #4]
     ff4:	cmp	w0, #0x1
     ff8:	b.ne	1004 <xz_dec_bcj_run+0x164>  // b.any
     ffc:	ldr	x0, [x19, #56]
    1000:	str	x0, [x19, #48]
    1004:	mov	x0, x19
    1008:	mov	x1, x20
    100c:	bl	618 <grub_mod_fini+0x18>
    1010:	ldr	x0, [x19, #48]
    1014:	cbz	x0, edc <xz_dec_bcj_run+0x3c>
    1018:	mov	w0, #0x0                   	// #0
    101c:	ldp	x19, x20, [sp, #16]
    1020:	ldp	x21, x22, [sp, #32]
    1024:	ldp	x29, x30, [sp], #64
    1028:	ret
    102c:	mov	x1, x2
    1030:	bl	618 <grub_mod_fini+0x18>
    1034:	ldr	x0, [x19, #48]
    1038:	cbnz	x0, 1018 <xz_dec_bcj_run+0x178>
    103c:	ldr	w0, [x19, #4]
    1040:	cmp	w0, #0x1
    1044:	b.ne	ec4 <xz_dec_bcj_run+0x24>  // b.any
    1048:	mov	w0, #0x1                   	// #1
    104c:	b	ee0 <xz_dec_bcj_run+0x40>

0000000000001050 <xz_dec_bcj_create>:
    1050:	stp	x29, x30, [sp, #-32]!
    1054:	mov	x29, sp
    1058:	str	x19, [sp, #16]
    105c:	mov	w19, w0
    1060:	mov	x0, #0x50                  	// #80
    1064:	bl	0 <grub_malloc>
    1068:	cbz	x0, 1070 <xz_dec_bcj_create+0x20>
    106c:	str	w19, [x0, #8]
    1070:	ldr	x19, [sp, #16]
    1074:	ldp	x29, x30, [sp], #32
    1078:	ret
    107c:	nop

0000000000001080 <xz_dec_bcj_reset>:
    1080:	and	w1, w1, #0xff
    1084:	mov	x2, x0
    1088:	sub	w3, w1, #0x4
    108c:	mov	w0, #0x4                   	// #4
    1090:	cmp	w3, #0x5
    1094:	b.hi	10a8 <xz_dec_bcj_reset+0x28>  // b.pmore
    1098:	mov	w0, #0x0                   	// #0
    109c:	stp	w1, wzr, [x2]
    10a0:	stur	xzr, [x2, #12]
    10a4:	stp	xzr, xzr, [x2, #48]
    10a8:	ret
    10ac:	nop
    10b0:	ldr	w4, [x0, #152]
    10b4:	add	x9, x0, #0x98
    10b8:	mov	w3, #0xffffff              	// #16777215
    10bc:	ldr	w10, [x9, #4]
    10c0:	cmp	w4, w3
    10c4:	b.hi	10e8 <xz_dec_bcj_reset+0x68>  // b.pmore
    10c8:	ldp	x5, x3, [x9, #16]
    10cc:	lsl	w4, w4, #8
    10d0:	str	w4, [x0, #152]
    10d4:	add	x6, x3, #0x1
    10d8:	str	x6, [x9, #24]
    10dc:	ldrb	w3, [x5, x3]
    10e0:	add	w10, w3, w10, lsl #8
    10e4:	str	w10, [x9, #4]
    10e8:	ldrh	w5, [x1]
    10ec:	lsr	w3, w4, #11
    10f0:	mul	w3, w3, w5
    10f4:	cmp	w3, w10
    10f8:	b.ls	11c4 <xz_dec_bcj_reset+0x144>  // b.plast
    10fc:	mov	x7, #0x4                   	// #4
    1100:	mov	w4, #0x800                 	// #2048
    1104:	sub	w4, w4, w5
    1108:	add	x2, x7, w2, uxtw #4
    110c:	add	x7, x1, x2
    1110:	mov	w6, #0x2                   	// #2
    1114:	add	w5, w5, w4, asr #5
    1118:	strh	w5, [x1]
    111c:	mov	w14, #0xfffffffa            	// #-6
    1120:	mov	w13, #0x8                   	// #8
    1124:	str	w6, [x0, #224]
    1128:	mov	w4, #0x1                   	// #1
    112c:	mov	w12, #0xffffff              	// #16777215
    1130:	mov	w11, #0x800                 	// #2048
    1134:	b	114c <xz_dec_bcj_reset+0xcc>
    1138:	str	w1, [x9]
    113c:	cmp	w13, w4
    1140:	strh	w2, [x6]
    1144:	b.ls	11b8 <xz_dec_bcj_reset+0x138>  // b.plast
    1148:	ldp	w3, w10, [x9]
    114c:	cmp	w3, w12
    1150:	add	x6, x7, w4, uxtw #1
    1154:	b.hi	1178 <xz_dec_bcj_reset+0xf8>  // b.pmore
    1158:	ldp	x2, x1, [x9, #16]
    115c:	lsl	w3, w3, #8
    1160:	str	w3, [x9]
    1164:	add	x5, x1, #0x1
    1168:	str	x5, [x9, #24]
    116c:	ldrb	w1, [x2, x1]
    1170:	add	w10, w1, w10, lsl #8
    1174:	str	w10, [x9, #4]
    1178:	ldrh	w2, [x6]
    117c:	lsr	w1, w3, #11
    1180:	lsl	w4, w4, #1
    1184:	sub	w5, w11, w2
    1188:	sub	w8, w2, w2, lsr #5
    118c:	mul	w1, w1, w2
    1190:	add	w2, w2, w5, asr #5
    1194:	sub	w3, w3, w1
    1198:	sub	w5, w10, w1
    119c:	cmp	w1, w10
    11a0:	b.hi	1138 <xz_dec_bcj_reset+0xb8>  // b.pmore
    11a4:	stp	w3, w5, [x9]
    11a8:	add	w4, w4, #0x1
    11ac:	strh	w8, [x6]
    11b0:	cmp	w13, w4
    11b4:	b.hi	1148 <xz_dec_bcj_reset+0xc8>  // b.pmore
    11b8:	add	w4, w4, w14
    11bc:	str	w4, [x0, #224]
    11c0:	ret
    11c4:	sub	w10, w10, w3
    11c8:	str	w10, [x9, #4]
    11cc:	sub	w5, w5, w5, lsr #5
    11d0:	strh	w5, [x1]
    11d4:	sub	w4, w4, w3
    11d8:	mov	w3, #0xffffff              	// #16777215
    11dc:	cmp	w4, w3
    11e0:	b.hi	1204 <xz_dec_bcj_reset+0x184>  // b.pmore
    11e4:	ldp	x5, x3, [x9, #16]
    11e8:	lsl	w4, w4, #8
    11ec:	str	w4, [x0, #152]
    11f0:	add	x6, x3, #0x1
    11f4:	str	x6, [x9, #24]
    11f8:	ldrb	w3, [x5, x3]
    11fc:	add	w10, w3, w10, lsl #8
    1200:	str	w10, [x9, #4]
    1204:	ldrh	w5, [x1, #2]
    1208:	lsr	w3, w4, #11
    120c:	mul	w3, w3, w5
    1210:	cmp	w3, w10
    1214:	b.ls	1248 <xz_dec_bcj_reset+0x1c8>  // b.plast
    1218:	mov	w4, #0x800                 	// #2048
    121c:	sub	w4, w4, w5
    1220:	ubfiz	x2, x2, #4, #32
    1224:	mov	w6, #0xa                   	// #10
    1228:	add	x7, x2, #0x104
    122c:	add	w5, w5, w4, asr #5
    1230:	strh	w5, [x1, #2]
    1234:	add	x7, x1, x7
    1238:	mov	w14, #0x2                   	// #2
    123c:	mov	w13, #0x8                   	// #8
    1240:	str	w6, [x0, #224]
    1244:	b	1128 <xz_dec_bcj_reset+0xa8>
    1248:	sub	w10, w10, w3
    124c:	str	w10, [x9, #4]
    1250:	sub	w5, w5, w5, lsr #5
    1254:	strh	w5, [x1, #2]
    1258:	add	x7, x1, #0x204
    125c:	sub	w3, w4, w3
    1260:	mov	w1, #0x12                  	// #18
    1264:	mov	w14, #0xffffff12            	// #-238
    1268:	mov	w13, #0x100                 	// #256
    126c:	str	w1, [x0, #224]
    1270:	b	1128 <xz_dec_bcj_reset+0xa8>
    1274:	nop
    1278:	mov	x3, x0
    127c:	mov	w6, w2
    1280:	ldr	x0, [x0, #24]
    1284:	cmp	x0, w2, uxtw
    1288:	b.ls	1320 <xz_dec_bcj_reset+0x2a0>  // b.plast
    128c:	ldr	w4, [x3, #48]
    1290:	mov	w0, #0x0                   	// #0
    1294:	cmp	w4, w2
    1298:	b.ls	131c <xz_dec_bcj_reset+0x29c>  // b.plast
    129c:	ldr	x2, [x3, #16]
    12a0:	ldr	x0, [x3, #32]
    12a4:	sub	x4, x2, #0x1
    12a8:	ldr	w5, [x1]
    12ac:	sub	x4, x4, x6
    12b0:	sub	x0, x0, x2
    12b4:	mov	w7, w5
    12b8:	cmp	x0, x7
    12bc:	csel	x0, x0, x7, ls  // ls = plast
    12c0:	cmp	x6, x2
    12c4:	sub	w5, w5, w0
    12c8:	str	w5, [x1]
    12cc:	b.cc	12d8 <xz_dec_bcj_reset+0x258>  // b.lo, b.ul, b.last
    12d0:	ldr	x1, [x3, #40]
    12d4:	add	x4, x4, x1
    12d8:	ldr	x5, [x3]
    12dc:	add	x1, x2, #0x1
    12e0:	str	x1, [x3, #16]
    12e4:	add	x1, x4, #0x1
    12e8:	ldrb	w4, [x5, x4]
    12ec:	strb	w4, [x5, x2]
    12f0:	ldr	x4, [x3, #40]
    12f4:	ldr	x2, [x3, #16]
    12f8:	cmp	x4, x1
    12fc:	csel	x4, x1, xzr, ne  // ne = any
    1300:	subs	w0, w0, #0x1
    1304:	b.ne	12d8 <xz_dec_bcj_reset+0x258>  // b.any
    1308:	ldr	x1, [x3, #24]
    130c:	mov	w0, #0x1                   	// #1
    1310:	cmp	x1, x2
    1314:	b.cs	131c <xz_dec_bcj_reset+0x29c>  // b.hs, b.nlast
    1318:	str	x2, [x3, #24]
    131c:	ret
    1320:	mov	w0, #0x0                   	// #0
    1324:	ret
    1328:	stp	x29, x30, [sp, #-48]!
    132c:	mov	x18, x0
    1330:	mov	x29, sp
    1334:	ldr	x8, [x0, #112]
    1338:	ldr	x0, [x0, #128]
    133c:	cmp	x8, x0
    1340:	b.cc	1388 <xz_dec_bcj_reset+0x308>  // b.lo, b.ul, b.last
    1344:	ldr	w4, [x18, #152]
    1348:	mov	w1, #0xffffff              	// #16777215
    134c:	mov	w0, #0x1                   	// #1
    1350:	cmp	w4, w1
    1354:	b.hi	1380 <xz_dec_bcj_reset+0x300>  // b.pmore
    1358:	lsl	w4, w4, #8
    135c:	str	w4, [x18, #152]
    1360:	ldr	x3, [x18, #176]
    1364:	ldr	x4, [x18, #168]
    1368:	add	x2, x3, #0x1
    136c:	str	x2, [x18, #176]
    1370:	ldr	w2, [x18, #156]
    1374:	ldrb	w3, [x4, x3]
    1378:	add	w2, w3, w2, lsl #8
    137c:	str	w2, [x18, #156]
    1380:	ldp	x29, x30, [sp], #48
    1384:	ret
    1388:	ldr	w0, [x18, #224]
    138c:	stp	x19, x20, [sp, #16]
    1390:	str	x21, [sp, #32]
    1394:	cbnz	w0, 1540 <xz_dec_bcj_reset+0x4c0>
    1398:	add	x15, x18, #0x98
    139c:	mov	w20, #0xffffff              	// #16777215
    13a0:	mov	w21, #0x800                 	// #2048
    13a4:	mov	w19, #0x1                   	// #1
    13a8:	ldp	x0, x1, [x18, #176]
    13ac:	ldr	w4, [x15]
    13b0:	cmp	x0, x1
    13b4:	b.hi	1bb0 <xz_dec_bcj_reset+0xb30>  // b.pmore
    13b8:	ldp	w2, w6, [x18, #200]
    13bc:	cmp	w4, w20
    13c0:	ldr	w3, [x15, #4]
    13c4:	and	w2, w2, w8
    13c8:	b.hi	13ec <xz_dec_bcj_reset+0x36c>  // b.pmore
    13cc:	ldr	x1, [x15, #16]
    13d0:	add	x5, x0, #0x1
    13d4:	lsl	w4, w4, #8
    13d8:	str	w4, [x15]
    13dc:	str	x5, [x15, #24]
    13e0:	ldrb	w0, [x1, x0]
    13e4:	add	w3, w0, w3, lsl #8
    13e8:	str	w3, [x15, #4]
    13ec:	ubfiz	x0, x6, #4, #32
    13f0:	lsr	w1, w4, #11
    13f4:	add	x0, x0, w2, uxtw
    13f8:	mov	w7, w6
    13fc:	add	x0, x18, x0, lsl #1
    1400:	ldrh	w5, [x0, #228]
    1404:	mul	w1, w1, w5
    1408:	cmp	w1, w3
    140c:	b.ls	1564 <xz_dec_bcj_reset+0x4e4>  // b.plast
    1410:	sub	w2, w21, w5
    1414:	str	w1, [x15]
    1418:	add	w5, w5, w2, asr #5
    141c:	strh	w5, [x0, #228]
    1420:	cbz	x8, 188c <xz_dec_bcj_reset+0x80c>
    1424:	sub	x2, x8, #0x1
    1428:	add	x9, x18, #0x60
    142c:	ldr	x7, [x9, #24]
    1430:	mov	w0, #0x0                   	// #0
    1434:	ldr	x10, [x9]
    1438:	cbz	x7, 1440 <xz_dec_bcj_reset+0x3c0>
    143c:	ldrb	w0, [x10, x2]
    1440:	ldp	w5, w2, [x18, #192]
    1444:	mov	w4, #0x8                   	// #8
    1448:	mov	w11, #0x600                 	// #1536
    144c:	cmp	w6, #0x6
    1450:	and	x2, x2, x8
    1454:	sub	w4, w4, w5
    1458:	lsl	x2, x2, x5
    145c:	lsr	w0, w0, w4
    1460:	add	w0, w0, w2
    1464:	umaddl	x0, w0, w11, x18
    1468:	add	x12, x0, #0xf50
    146c:	b.hi	17a8 <xz_dec_bcj_reset+0x728>  // b.pmore
    1470:	mov	w11, #0x1                   	// #1
    1474:	b	148c <xz_dec_bcj_reset+0x40c>
    1478:	str	w0, [x15]
    147c:	cmp	w11, #0xff
    1480:	strh	w2, [x12, x4]
    1484:	b.hi	14f8 <xz_dec_bcj_reset+0x478>  // b.pmore
    1488:	ldp	w1, w3, [x15]
    148c:	cmp	w1, w20
    1490:	ubfiz	x4, x11, #1, #32
    1494:	b.hi	14b8 <xz_dec_bcj_reset+0x438>  // b.pmore
    1498:	ldp	x0, x2, [x15, #16]
    149c:	lsl	w1, w1, #8
    14a0:	str	w1, [x15]
    14a4:	add	x5, x2, #0x1
    14a8:	str	x5, [x15, #24]
    14ac:	ldrb	w0, [x0, x2]
    14b0:	add	w3, w0, w3, lsl #8
    14b4:	str	w3, [x15, #4]
    14b8:	ldrh	w2, [x12, x4]
    14bc:	lsr	w0, w1, #11
    14c0:	lsl	w11, w11, #1
    14c4:	sub	w5, w21, w2
    14c8:	sub	w6, w2, w2, lsr #5
    14cc:	mul	w0, w0, w2
    14d0:	add	w2, w2, w5, asr #5
    14d4:	sub	w1, w1, w0
    14d8:	sub	w5, w3, w0
    14dc:	cmp	w0, w3
    14e0:	b.hi	1478 <xz_dec_bcj_reset+0x3f8>  // b.pmore
    14e4:	stp	w1, w5, [x15]
    14e8:	add	w11, w11, #0x1
    14ec:	strh	w6, [x12, x4]
    14f0:	cmp	w11, #0xff
    14f4:	b.ls	1488 <xz_dec_bcj_reset+0x408>  // b.plast
    14f8:	add	x0, x8, #0x1
    14fc:	str	x0, [x9, #16]
    1500:	strb	w11, [x10, x8]
    1504:	ldp	x8, x0, [x9, #16]
    1508:	cmp	x0, x8
    150c:	b.cs	1514 <xz_dec_bcj_reset+0x494>  // b.hs, b.nlast
    1510:	str	x8, [x9, #24]
    1514:	ldr	w0, [x18, #204]
    1518:	cmp	w0, #0x3
    151c:	b.hi	1874 <xz_dec_bcj_reset+0x7f4>  // b.pmore
    1520:	str	wzr, [x18, #204]
    1524:	ldr	x0, [x18, #128]
    1528:	cmp	x0, x8
    152c:	b.hi	13a8 <xz_dec_bcj_reset+0x328>  // b.pmore
    1530:	ldr	w4, [x18, #152]
    1534:	ldp	x19, x20, [sp, #16]
    1538:	ldr	x21, [sp, #32]
    153c:	b	1348 <xz_dec_bcj_reset+0x2c8>
    1540:	ldr	w2, [x18, #208]
    1544:	add	x1, x18, #0xe0
    1548:	add	x0, x18, #0x60
    154c:	bl	1278 <xz_dec_bcj_reset+0x1f8>
    1550:	ldr	x8, [x18, #112]
    1554:	ldr	x0, [x18, #128]
    1558:	cmp	x0, x8
    155c:	b.hi	1398 <xz_dec_bcj_reset+0x318>  // b.pmore
    1560:	b	1530 <xz_dec_bcj_reset+0x4b0>
    1564:	sub	w3, w3, w1
    1568:	str	w3, [x15, #4]
    156c:	sub	w5, w5, w5, lsr #5
    1570:	strh	w5, [x0, #228]
    1574:	sub	w1, w4, w1
    1578:	cmp	w1, w20
    157c:	b.hi	15a0 <xz_dec_bcj_reset+0x520>  // b.pmore
    1580:	ldp	x5, x4, [x15, #16]
    1584:	lsl	w1, w1, #8
    1588:	str	w1, [x15]
    158c:	add	x8, x4, #0x1
    1590:	str	x8, [x15, #24]
    1594:	ldrb	w4, [x5, x4]
    1598:	add	w3, w4, w3, lsl #8
    159c:	str	w3, [x15, #4]
    15a0:	add	x5, x18, x7, lsl #1
    15a4:	lsr	w4, w1, #11
    15a8:	ldrh	w7, [x5, #612]
    15ac:	mul	w4, w4, w7
    15b0:	cmp	w4, w3
    15b4:	b.ls	16c4 <xz_dec_bcj_reset+0x644>  // b.plast
    15b8:	sub	w0, w21, w7
    15bc:	cmp	w6, #0x7
    15c0:	ldp	w1, w3, [x18, #212]
    15c4:	str	w4, [x15]
    15c8:	ldr	w4, [x18, #208]
    15cc:	add	w7, w7, w0, asr #5
    15d0:	strh	w7, [x5, #612]
    15d4:	mov	w0, #0x7                   	// #7
    15d8:	mov	w5, #0xa                   	// #10
    15dc:	csel	w0, w0, w5, cc  // cc = lo, ul, last
    15e0:	str	w0, [x18, #204]
    15e4:	mov	x0, x18
    15e8:	stp	w4, w1, [x18, #212]
    15ec:	add	x1, x18, #0x748
    15f0:	str	w3, [x18, #220]
    15f4:	bl	10b0 <xz_dec_bcj_reset+0x30>
    15f8:	ldr	w0, [x18, #224]
    15fc:	mov	w7, #0x5                   	// #5
    1600:	mov	w2, #0x1                   	// #1
    1604:	cmp	w0, w7
    1608:	csel	w7, w0, w7, ls  // ls = plast
    160c:	sub	w7, w7, #0x2
    1610:	lsl	x7, x7, #7
    1614:	add	x7, x7, #0x444
    1618:	b	162c <xz_dec_bcj_reset+0x5ac>
    161c:	str	w1, [x15]
    1620:	cmp	w2, #0x3f
    1624:	strh	w4, [x18, x5]
    1628:	b.hi	169c <xz_dec_bcj_reset+0x61c>  // b.pmore
    162c:	ldp	w0, w3, [x15]
    1630:	add	x5, x7, w2, uxtw #1
    1634:	lsl	w2, w2, #1
    1638:	cmp	w0, w20
    163c:	b.hi	1660 <xz_dec_bcj_reset+0x5e0>  // b.pmore
    1640:	ldp	x4, x1, [x15, #16]
    1644:	lsl	w0, w0, #8
    1648:	str	w0, [x15]
    164c:	add	x6, x1, #0x1
    1650:	str	x6, [x15, #24]
    1654:	ldrb	w1, [x4, x1]
    1658:	add	w3, w1, w3, lsl #8
    165c:	str	w3, [x15, #4]
    1660:	ldrh	w4, [x18, x5]
    1664:	lsr	w1, w0, #11
    1668:	sub	w6, w21, w4
    166c:	sub	w8, w4, w4, lsr #5
    1670:	mul	w1, w1, w4
    1674:	add	w4, w4, w6, asr #5
    1678:	sub	w0, w0, w1
    167c:	sub	w6, w3, w1
    1680:	cmp	w1, w3
    1684:	b.hi	161c <xz_dec_bcj_reset+0x59c>  // b.pmore
    1688:	stp	w0, w6, [x15]
    168c:	add	w2, w2, #0x1
    1690:	strh	w8, [x18, x5]
    1694:	cmp	w2, #0x3f
    1698:	b.ls	162c <xz_dec_bcj_reset+0x5ac>  // b.plast
    169c:	sub	w2, w2, #0x40
    16a0:	cmp	w2, #0x3
    16a4:	b.hi	1934 <xz_dec_bcj_reset+0x8b4>  // b.pmore
    16a8:	str	w2, [x18, #208]
    16ac:	add	x1, x18, #0xe0
    16b0:	add	x0, x18, #0x60
    16b4:	bl	1278 <xz_dec_bcj_reset+0x1f8>
    16b8:	cbz	w0, 1798 <xz_dec_bcj_reset+0x718>
    16bc:	ldr	x8, [x18, #112]
    16c0:	b	1524 <xz_dec_bcj_reset+0x4a4>
    16c4:	sub	w3, w3, w4
    16c8:	str	w3, [x15, #4]
    16cc:	sub	w7, w7, w7, lsr #5
    16d0:	strh	w7, [x5, #612]
    16d4:	sub	w1, w1, w4
    16d8:	cmp	w1, w20
    16dc:	b.hi	1700 <xz_dec_bcj_reset+0x680>  // b.pmore
    16e0:	ldp	x7, x4, [x15, #16]
    16e4:	lsl	w1, w1, #8
    16e8:	str	w1, [x15]
    16ec:	add	x8, x4, #0x1
    16f0:	str	x8, [x15, #24]
    16f4:	ldrb	w4, [x7, x4]
    16f8:	add	w3, w4, w3, lsl #8
    16fc:	str	w3, [x15, #4]
    1700:	ldrh	w7, [x5, #636]
    1704:	lsr	w4, w1, #11
    1708:	mul	w4, w4, w7
    170c:	cmp	w4, w3
    1710:	b.ls	189c <xz_dec_bcj_reset+0x81c>  // b.plast
    1714:	sub	w1, w21, w7
    1718:	cmp	w4, w20
    171c:	add	w7, w7, w1, asr #5
    1720:	strh	w7, [x5, #636]
    1724:	b.hi	1748 <xz_dec_bcj_reset+0x6c8>  // b.pmore
    1728:	ldp	x5, x1, [x15, #16]
    172c:	lsl	w4, w4, #8
    1730:	str	w4, [x15]
    1734:	add	x7, x1, #0x1
    1738:	str	x7, [x15, #24]
    173c:	ldrb	w1, [x5, x1]
    1740:	add	w3, w1, w3, lsl #8
    1744:	str	w3, [x15, #4]
    1748:	ldrh	w7, [x0, #708]
    174c:	lsr	w5, w4, #11
    1750:	mul	w5, w5, w7
    1754:	cmp	w5, w3
    1758:	b.ls	1a0c <xz_dec_bcj_reset+0x98c>  // b.plast
    175c:	sub	w2, w21, w7
    1760:	cmp	w6, #0x7
    1764:	mov	w1, #0x9                   	// #9
    1768:	add	w7, w7, w2, asr #5
    176c:	ldr	w2, [x18, #208]
    1770:	str	w5, [x15]
    1774:	strh	w7, [x0, #708]
    1778:	mov	w0, #0xb                   	// #11
    177c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1780:	str	w0, [x18, #204]
    1784:	str	w19, [x18, #224]
    1788:	add	x1, x18, #0xe0
    178c:	add	x0, x18, #0x60
    1790:	bl	1278 <xz_dec_bcj_reset+0x1f8>
    1794:	cbnz	w0, 16bc <xz_dec_bcj_reset+0x63c>
    1798:	ldp	x19, x20, [sp, #16]
    179c:	ldr	x21, [sp, #32]
    17a0:	ldp	x29, x30, [sp], #48
    17a4:	ret
    17a8:	ldr	w2, [x18, #208]
    17ac:	mvn	x0, x2
    17b0:	cmp	x2, x8
    17b4:	add	x0, x0, x8
    17b8:	b.cc	17c4 <xz_dec_bcj_reset+0x744>  // b.lo, b.ul, b.last
    17bc:	ldr	x2, [x9, #40]
    17c0:	add	x0, x0, x2
    17c4:	mov	w14, #0x0                   	// #0
    17c8:	cbz	x7, 17d4 <xz_dec_bcj_reset+0x754>
    17cc:	ldrb	w14, [x10, x0]
    17d0:	lsl	w14, w14, #1
    17d4:	mov	w5, #0x100                 	// #256
    17d8:	mov	w11, #0x1                   	// #1
    17dc:	b	17f4 <xz_dec_bcj_reset+0x774>
    17e0:	str	w2, [x15]
    17e4:	strh	w4, [x12, x0]
    17e8:	cmp	w11, #0xff
    17ec:	b.hi	14f8 <xz_dec_bcj_reset+0x478>  // b.pmore
    17f0:	ldp	w1, w3, [x15]
    17f4:	and	w6, w14, w5
    17f8:	add	w0, w5, w11
    17fc:	cmp	w1, w20
    1800:	add	w0, w0, w6
    1804:	lsl	w14, w14, #1
    1808:	lsl	w11, w11, #1
    180c:	lsl	x0, x0, #1
    1810:	b.hi	1834 <xz_dec_bcj_reset+0x7b4>  // b.pmore
    1814:	ldp	x4, x2, [x15, #16]
    1818:	lsl	w1, w1, #8
    181c:	str	w1, [x15]
    1820:	add	x7, x2, #0x1
    1824:	str	x7, [x15, #24]
    1828:	ldrb	w2, [x4, x2]
    182c:	add	w3, w2, w3, lsl #8
    1830:	str	w3, [x15, #4]
    1834:	ldrh	w4, [x12, x0]
    1838:	lsr	w2, w1, #11
    183c:	bic	w5, w5, w6
    1840:	sub	w7, w21, w4
    1844:	sub	w13, w4, w4, lsr #5
    1848:	mul	w2, w2, w4
    184c:	add	w4, w4, w7, asr #5
    1850:	sub	w1, w1, w2
    1854:	sub	w7, w3, w2
    1858:	cmp	w2, w3
    185c:	b.hi	17e0 <xz_dec_bcj_reset+0x760>  // b.pmore
    1860:	stp	w1, w7, [x15]
    1864:	add	w11, w11, #0x1
    1868:	mov	w5, w6
    186c:	strh	w13, [x12, x0]
    1870:	b	17e8 <xz_dec_bcj_reset+0x768>
    1874:	cmp	w0, #0xa
    1878:	sub	w1, w0, #0x6
    187c:	sub	w0, w0, #0x3
    1880:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    1884:	str	w0, [x18, #204]
    1888:	b	1524 <xz_dec_bcj_reset+0x4a4>
    188c:	ldr	x2, [x18, #136]
    1890:	add	x9, x18, #0x60
    1894:	sub	x2, x2, #0x1
    1898:	b	142c <xz_dec_bcj_reset+0x3ac>
    189c:	sub	w3, w3, w4
    18a0:	str	w3, [x15, #4]
    18a4:	sub	w7, w7, w7, lsr #5
    18a8:	strh	w7, [x5, #636]
    18ac:	sub	w1, w1, w4
    18b0:	cmp	w1, w20
    18b4:	b.hi	18d8 <xz_dec_bcj_reset+0x858>  // b.pmore
    18b8:	ldp	x4, x0, [x15, #16]
    18bc:	lsl	w1, w1, #8
    18c0:	str	w1, [x15]
    18c4:	add	x7, x0, #0x1
    18c8:	str	x7, [x15, #24]
    18cc:	ldrb	w0, [x4, x0]
    18d0:	add	w3, w0, w3, lsl #8
    18d4:	str	w3, [x15, #4]
    18d8:	ldrh	w4, [x5, #660]
    18dc:	lsr	w0, w1, #11
    18e0:	ldr	w8, [x18, #212]
    18e4:	mul	w0, w0, w4
    18e8:	cmp	w0, w3
    18ec:	b.ls	1a24 <xz_dec_bcj_reset+0x9a4>  // b.plast
    18f0:	sub	w1, w21, w4
    18f4:	mov	w7, w8
    18f8:	str	w0, [x15]
    18fc:	add	w4, w4, w1, asr #5
    1900:	strh	w4, [x5, #660]
    1904:	ldr	w0, [x18, #208]
    1908:	stp	w7, w0, [x18, #208]
    190c:	cmp	w6, #0x7
    1910:	mov	w1, #0xb                   	// #11
    1914:	mov	w0, #0x8                   	// #8
    1918:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    191c:	str	w0, [x18, #204]
    1920:	add	x1, x18, #0xb4c
    1924:	mov	x0, x18
    1928:	bl	10b0 <xz_dec_bcj_reset+0x30>
    192c:	ldr	w2, [x18, #208]
    1930:	b	16ac <xz_dec_bcj_reset+0x62c>
    1934:	and	w0, w2, #0x1
    1938:	cmp	w2, #0xd
    193c:	ldp	w3, w4, [x15]
    1940:	add	w0, w0, #0x2
    1944:	str	w0, [x18, #208]
    1948:	lsr	w5, w2, #1
    194c:	b.hi	1ab8 <xz_dec_bcj_reset+0xa38>  // b.pmore
    1950:	sub	w5, w5, #0x1
    1954:	add	x11, x18, #0x644
    1958:	mov	w10, #0x0                   	// #0
    195c:	mov	w9, #0x1                   	// #1
    1960:	lsl	w8, w0, w5
    1964:	mov	x0, x8
    1968:	sub	x8, x8, w2, uxtw
    196c:	mov	w2, w0
    1970:	str	w0, [x18, #208]
    1974:	lsl	x8, x8, #1
    1978:	sub	x8, x8, #0x2
    197c:	b	1998 <xz_dec_bcj_reset+0x918>
    1980:	str	w0, [x15]
    1984:	strh	w1, [x11, x7]
    1988:	add	w10, w10, #0x1
    198c:	cmp	w5, w10
    1990:	b.eq	16ac <xz_dec_bcj_reset+0x62c>  // b.none
    1994:	ldp	w3, w4, [x15]
    1998:	cmp	w3, w20
    199c:	add	x7, x8, w9, uxtw #1
    19a0:	lsl	w13, w19, w10
    19a4:	b.hi	19c8 <xz_dec_bcj_reset+0x948>  // b.pmore
    19a8:	ldp	x1, x0, [x15, #16]
    19ac:	lsl	w3, w3, #8
    19b0:	str	w3, [x15]
    19b4:	add	x6, x0, #0x1
    19b8:	str	x6, [x15, #24]
    19bc:	ldrb	w0, [x1, x0]
    19c0:	add	w4, w0, w4, lsl #8
    19c4:	str	w4, [x15, #4]
    19c8:	ldrh	w1, [x11, x7]
    19cc:	lsr	w0, w3, #11
    19d0:	lsl	w9, w9, #1
    19d4:	sub	w6, w21, w1
    19d8:	sub	w12, w1, w1, lsr #5
    19dc:	mul	w0, w0, w1
    19e0:	add	w1, w1, w6, asr #5
    19e4:	sub	w3, w3, w0
    19e8:	sub	w6, w4, w0
    19ec:	cmp	w0, w4
    19f0:	b.hi	1980 <xz_dec_bcj_reset+0x900>  // b.pmore
    19f4:	stp	w3, w6, [x15]
    19f8:	add	w2, w2, w13
    19fc:	strh	w12, [x11, x7]
    1a00:	add	w9, w9, #0x1
    1a04:	str	w2, [x18, #208]
    1a08:	b	1988 <xz_dec_bcj_reset+0x908>
    1a0c:	sub	w1, w4, w5
    1a10:	sub	w3, w3, w5
    1a14:	stp	w1, w3, [x15]
    1a18:	sub	w7, w7, w7, lsr #5
    1a1c:	strh	w7, [x0, #708]
    1a20:	b	190c <xz_dec_bcj_reset+0x88c>
    1a24:	sub	w3, w3, w0
    1a28:	str	w3, [x15, #4]
    1a2c:	sub	w4, w4, w4, lsr #5
    1a30:	strh	w4, [x5, #660]
    1a34:	sub	w1, w1, w0
    1a38:	cmp	w1, w20
    1a3c:	b.hi	1a60 <xz_dec_bcj_reset+0x9e0>  // b.pmore
    1a40:	ldp	x4, x0, [x15, #16]
    1a44:	lsl	w1, w1, #8
    1a48:	str	w1, [x15]
    1a4c:	add	x7, x0, #0x1
    1a50:	str	x7, [x15, #24]
    1a54:	ldrb	w0, [x4, x0]
    1a58:	add	w3, w0, w3, lsl #8
    1a5c:	str	w3, [x15, #4]
    1a60:	ldrh	w4, [x5, #684]
    1a64:	lsr	w0, w1, #11
    1a68:	ldr	w7, [x18, #216]
    1a6c:	mul	w0, w0, w4
    1a70:	cmp	w0, w3
    1a74:	b.ls	1a90 <xz_dec_bcj_reset+0xa10>  // b.plast
    1a78:	sub	w1, w21, w4
    1a7c:	str	w0, [x15]
    1a80:	add	w4, w4, w1, asr #5
    1a84:	strh	w4, [x5, #684]
    1a88:	str	w8, [x18, #216]
    1a8c:	b	1904 <xz_dec_bcj_reset+0x884>
    1a90:	sub	w1, w1, w0
    1a94:	sub	w3, w3, w0
    1a98:	ldr	w0, [x18, #220]
    1a9c:	sub	w4, w4, w4, lsr #5
    1aa0:	stp	w1, w3, [x15]
    1aa4:	strh	w4, [x5, #684]
    1aa8:	str	w8, [x18, #216]
    1aac:	str	w7, [x18, #220]
    1ab0:	mov	w7, w0
    1ab4:	b	1904 <xz_dec_bcj_reset+0x884>
    1ab8:	sub	w1, w5, #0x5
    1abc:	nop
    1ac0:	cmp	w3, w20
    1ac4:	b.hi	1ae4 <xz_dec_bcj_reset+0xa64>  // b.pmore
    1ac8:	ldp	x5, x2, [x15, #16]
    1acc:	lsl	w3, w3, #8
    1ad0:	str	w3, [x15]
    1ad4:	add	x6, x2, #0x1
    1ad8:	str	x6, [x15, #24]
    1adc:	ldrb	w2, [x5, x2]
    1ae0:	add	w4, w2, w4, lsl #8
    1ae4:	lsr	w3, w3, #1
    1ae8:	subs	w1, w1, #0x1
    1aec:	sub	w4, w4, w3
    1af0:	asr	w2, w4, #31
    1af4:	and	w5, w3, w2
    1af8:	add	w0, w2, w0, lsl #1
    1afc:	add	w4, w5, w4
    1b00:	stp	w3, w4, [x15]
    1b04:	add	w0, w0, #0x1
    1b08:	str	w0, [x18, #208]
    1b0c:	b.ne	1ac0 <xz_dec_bcj_reset+0xa40>  // b.any
    1b10:	lsl	w2, w0, #4
    1b14:	add	x9, x18, #0x728
    1b18:	mov	w6, #0x1                   	// #1
    1b1c:	str	w2, [x18, #208]
    1b20:	b	1b3c <xz_dec_bcj_reset+0xabc>
    1b24:	str	w0, [x15]
    1b28:	strh	w5, [x9, x8]
    1b2c:	add	w1, w1, #0x1
    1b30:	cmp	w1, #0x4
    1b34:	b.eq	16ac <xz_dec_bcj_reset+0x62c>  // b.none
    1b38:	ldp	w3, w4, [x15]
    1b3c:	cmp	w3, w20
    1b40:	ubfiz	x8, x6, #1, #32
    1b44:	lsl	w11, w19, w1
    1b48:	b.hi	1b6c <xz_dec_bcj_reset+0xaec>  // b.pmore
    1b4c:	ldp	x5, x0, [x15, #16]
    1b50:	lsl	w3, w3, #8
    1b54:	str	w3, [x15]
    1b58:	add	x7, x0, #0x1
    1b5c:	str	x7, [x15, #24]
    1b60:	ldrb	w0, [x5, x0]
    1b64:	add	w4, w0, w4, lsl #8
    1b68:	str	w4, [x15, #4]
    1b6c:	ldrh	w5, [x9, x8]
    1b70:	lsr	w0, w3, #11
    1b74:	lsl	w6, w6, #1
    1b78:	sub	w7, w21, w5
    1b7c:	sub	w10, w5, w5, lsr #5
    1b80:	mul	w0, w0, w5
    1b84:	add	w5, w5, w7, asr #5
    1b88:	sub	w3, w3, w0
    1b8c:	sub	w7, w4, w0
    1b90:	cmp	w0, w4
    1b94:	b.hi	1b24 <xz_dec_bcj_reset+0xaa4>  // b.pmore
    1b98:	stp	w3, w7, [x15]
    1b9c:	add	w2, w2, w11
    1ba0:	strh	w10, [x9, x8]
    1ba4:	add	w6, w6, #0x1
    1ba8:	str	w2, [x18, #208]
    1bac:	b	1b2c <xz_dec_bcj_reset+0xaac>
    1bb0:	ldp	x19, x20, [sp, #16]
    1bb4:	ldr	x21, [sp, #32]
    1bb8:	b	1348 <xz_dec_bcj_reset+0x2c8>
    1bbc:	nop

0000000000001bc0 <xz_dec_lzma2_run>:
    1bc0:	stp	x29, x30, [sp, #-96]!
    1bc4:	mov	x2, #0x6f50                	// #28496
    1bc8:	mov	x29, sp
    1bcc:	stp	x19, x20, [sp, #16]
    1bd0:	mov	x20, x1
    1bd4:	mov	x19, x0
    1bd8:	stp	x23, x24, [sp, #48]
    1bdc:	mov	x24, #0x3                   	// #3
    1be0:	mov	w23, #0x3                   	// #3
    1be4:	movk	x24, #0x8, lsl #32
    1be8:	stp	x21, x22, [sp, #32]
    1bec:	add	x22, x0, x2
    1bf0:	ldr	w0, [x0]
    1bf4:	stp	x25, x26, [sp, #64]
    1bf8:	ldp	x3, x21, [x1, #8]
    1bfc:	str	x27, [sp, #80]
    1c00:	cmp	x3, x21
    1c04:	b.cc	1dc8 <xz_dec_lzma2_run+0x208>  // b.lo, b.ul, b.last
    1c08:	cmp	w0, #0x7
    1c0c:	b.ne	1f18 <xz_dec_lzma2_run+0x358>  // b.any
    1c10:	ldr	w26, [x19, #12]
    1c14:	ldr	x1, [x20]
    1c18:	add	x25, x19, #0x60
    1c1c:	ldp	x2, x4, [x20, #32]
    1c20:	sub	x27, x21, x3
    1c24:	ldr	w0, [x19, #8]
    1c28:	ldr	x5, [x25, #16]
    1c2c:	sub	x4, x4, x2
    1c30:	ldr	x2, [x25, #40]
    1c34:	cmp	x4, x0
    1c38:	csel	x4, x4, x0, ls  // ls = plast
    1c3c:	ldr	w0, [x19, #24]
    1c40:	sub	x6, x2, x5
    1c44:	add	x5, x4, x5
    1c48:	cmp	x4, x6
    1c4c:	csel	x2, x5, x2, cc  // cc = lo, ul, last
    1c50:	str	x2, [x25, #32]
    1c54:	cbnz	w0, 20f4 <xz_dec_lzma2_run+0x534>
    1c58:	cbnz	w26, 1cf4 <xz_dec_lzma2_run+0x134>
    1c5c:	mov	x27, #0x0                   	// #0
    1c60:	add	x21, x19, #0x1c
    1c64:	add	x1, x1, x3
    1c68:	mov	x2, x27
    1c6c:	add	x0, x21, w0, uxtw
    1c70:	bl	0 <grub_memmove>
    1c74:	ldr	w1, [x19, #24]
    1c78:	ldr	w2, [x19, #12]
    1c7c:	add	w0, w26, w1
    1c80:	cmp	w0, w2
    1c84:	b.eq	22d8 <xz_dec_lzma2_run+0x718>  // b.none
    1c88:	cmp	w0, #0x14
    1c8c:	b.ls	22a8 <xz_dec_lzma2_run+0x6e8>  // b.plast
    1c90:	sub	w0, w0, #0x15
    1c94:	str	x0, [x19, #184]
    1c98:	stp	x21, xzr, [x19, #168]
    1c9c:	mov	x0, x19
    1ca0:	bl	1328 <xz_dec_bcj_reset+0x2a8>
    1ca4:	cbz	w0, 20b4 <xz_dec_lzma2_run+0x4f4>
    1ca8:	ldr	w0, [x19, #24]
    1cac:	ldr	x1, [x19, #176]
    1cb0:	add	w26, w26, w0
    1cb4:	cmp	x1, x26
    1cb8:	b.hi	20b4 <xz_dec_lzma2_run+0x4f4>  // b.pmore
    1cbc:	ldr	w26, [x19, #12]
    1cc0:	cmp	x1, w0, uxtw
    1cc4:	mov	w3, w0
    1cc8:	sub	w26, w26, w1
    1ccc:	str	w26, [x19, #12]
    1cd0:	b.cc	2364 <xz_dec_lzma2_run+0x7a4>  // b.lo, b.ul, b.last
    1cd4:	ldp	x0, x21, [x20, #8]
    1cd8:	add	x1, x1, x0
    1cdc:	sub	x27, x3, x1
    1ce0:	sub	x3, x1, x3
    1ce4:	add	x27, x27, x21
    1ce8:	str	x3, [x20, #8]
    1cec:	ldr	x1, [x20]
    1cf0:	str	wzr, [x19, #24]
    1cf4:	cmp	x27, #0x14
    1cf8:	b.hi	2244 <xz_dec_lzma2_run+0x684>  // b.pmore
    1cfc:	mov	w26, w26
    1d00:	add	x1, x1, x3
    1d04:	cmp	x26, x27
    1d08:	add	x0, x19, #0x1c
    1d0c:	csel	x27, x26, x27, ls  // ls = plast
    1d10:	mov	x2, x27
    1d14:	bl	0 <grub_memmove>
    1d18:	ldr	x0, [x20, #8]
    1d1c:	str	w27, [x19, #24]
    1d20:	add	x27, x0, x27
    1d24:	str	x27, [x20, #8]
    1d28:	ldp	x1, x2, [x25, #8]
    1d2c:	ldr	w0, [x25, #52]
    1d30:	sub	x21, x2, x1
    1d34:	cbz	w0, 1d68 <xz_dec_lzma2_run+0x1a8>
    1d38:	ldr	x0, [x25, #40]
    1d3c:	ldr	x4, [x20, #24]
    1d40:	cmp	x2, x0
    1d44:	b.ne	1d4c <xz_dec_lzma2_run+0x18c>  // b.any
    1d48:	str	xzr, [x25, #16]
    1d4c:	ldr	x3, [x19, #96]
    1d50:	mov	x2, x21
    1d54:	ldr	x0, [x20, #32]
    1d58:	add	x1, x3, x1
    1d5c:	add	x0, x4, x0
    1d60:	bl	0 <grub_memmove>
    1d64:	ldr	x2, [x25, #16]
    1d68:	ldr	w0, [x19, #8]
    1d6c:	str	x2, [x25, #8]
    1d70:	sub	w0, w0, w21
    1d74:	ldr	x2, [x20, #32]
    1d78:	add	x21, x21, x2
    1d7c:	str	x21, [x20, #32]
    1d80:	str	w0, [x19, #8]
    1d84:	cbnz	w0, 211c <xz_dec_lzma2_run+0x55c>
    1d88:	ldr	w0, [x19, #12]
    1d8c:	cbnz	w0, 20b4 <xz_dec_lzma2_run+0x4f4>
    1d90:	ldr	w0, [x19, #224]
    1d94:	cbnz	w0, 20b4 <xz_dec_lzma2_run+0x4f4>
    1d98:	ldr	w0, [x19, #156]
    1d9c:	cbnz	w0, 20b4 <xz_dec_lzma2_run+0x4f4>
    1da0:	mov	x1, x19
    1da4:	mov	x4, #0xffffffff            	// #4294967295
    1da8:	ldp	x3, x21, [x20, #8]
    1dac:	mov	w2, #0x5                   	// #5
    1db0:	str	x4, [x1, #152]!
    1db4:	str	w2, [x1, #8]
    1db8:	str	wzr, [x19]
    1dbc:	cmp	x3, x21
    1dc0:	b.cs	1c08 <xz_dec_lzma2_run+0x48>  // b.hs, b.nlast
    1dc4:	nop
    1dc8:	cmp	w0, #0x4
    1dcc:	b.eq	2154 <xz_dec_lzma2_run+0x594>  // b.none
    1dd0:	b.hi	1e10 <xz_dec_lzma2_run+0x250>  // b.pmore
    1dd4:	cmp	w0, #0x2
    1dd8:	b.eq	2184 <xz_dec_lzma2_run+0x5c4>  // b.none
    1ddc:	cmp	w0, #0x3
    1de0:	b.ne	1f38 <xz_dec_lzma2_run+0x378>  // b.any
    1de4:	ldr	x1, [x20]
    1de8:	add	x4, x3, #0x1
    1dec:	str	x4, [x20, #8]
    1df0:	mov	w2, #0x4                   	// #4
    1df4:	mov	w0, w2
    1df8:	ldrb	w1, [x1, x3]
    1dfc:	mov	x3, x4
    1e00:	str	w2, [x19]
    1e04:	lsl	w1, w1, #8
    1e08:	str	w1, [x19, #12]
    1e0c:	b	1c00 <xz_dec_lzma2_run+0x40>
    1e10:	cmp	w0, #0x6
    1e14:	b.eq	2048 <xz_dec_lzma2_run+0x488>  // b.none
    1e18:	b.ls	1f74 <xz_dec_lzma2_run+0x3b4>  // b.plast
    1e1c:	cmp	w0, #0x7
    1e20:	b.eq	1c10 <xz_dec_lzma2_run+0x50>  // b.none
    1e24:	cmp	w0, #0x8
    1e28:	b.ne	1c00 <xz_dec_lzma2_run+0x40>  // b.any
    1e2c:	ldr	w2, [x19, #12]
    1e30:	cbz	w2, 2238 <xz_dec_lzma2_run+0x678>
    1e34:	ldr	x0, [x20, #32]
    1e38:	add	x25, x19, #0x60
    1e3c:	ldr	x1, [x20, #40]
    1e40:	sub	x4, x21, x3
    1e44:	mov	w6, w2
    1e48:	subs	x5, x1, x0
    1e4c:	b.ls	1f18 <xz_dec_lzma2_run+0x358>  // b.plast
    1e50:	ldr	x0, [x25, #16]
    1e54:	ldr	x21, [x25, #40]
    1e58:	ldr	x1, [x20]
    1e5c:	sub	x21, x21, x0
    1e60:	cmp	x21, x5
    1e64:	csel	x21, x21, x5, ls  // ls = plast
    1e68:	cmp	x4, x6
    1e6c:	csel	x4, x4, x6, ls  // ls = plast
    1e70:	add	x1, x1, x3
    1e74:	cmp	x21, x4
    1e78:	ldr	x3, [x19, #96]
    1e7c:	csel	x21, x21, x4, ls  // ls = plast
    1e80:	sub	w2, w2, w21
    1e84:	str	w2, [x19, #12]
    1e88:	add	x0, x3, x0
    1e8c:	mov	x2, x21
    1e90:	bl	0 <grub_memmove>
    1e94:	ldp	x0, x1, [x25, #16]
    1e98:	mov	x2, x21
    1e9c:	add	x0, x21, x0
    1ea0:	str	x0, [x25, #16]
    1ea4:	cmp	x0, x1
    1ea8:	b.ls	1eb0 <xz_dec_lzma2_run+0x2f0>  // b.plast
    1eac:	str	x0, [x25, #24]
    1eb0:	ldr	w1, [x25, #52]
    1eb4:	cbz	w1, 1ee4 <xz_dec_lzma2_run+0x324>
    1eb8:	ldr	x1, [x25, #40]
    1ebc:	cmp	x0, x1
    1ec0:	b.ne	1ec8 <xz_dec_lzma2_run+0x308>  // b.any
    1ec4:	str	xzr, [x25, #16]
    1ec8:	ldp	x1, x0, [x20]
    1ecc:	ldr	x3, [x20, #24]
    1ed0:	add	x1, x1, x0
    1ed4:	ldr	x0, [x20, #32]
    1ed8:	add	x0, x3, x0
    1edc:	bl	0 <grub_memmove>
    1ee0:	ldr	x0, [x25, #16]
    1ee4:	ldr	w2, [x19, #12]
    1ee8:	ldr	x3, [x20, #8]
    1eec:	str	x0, [x25, #8]
    1ef0:	ldr	x0, [x20, #32]
    1ef4:	add	x3, x21, x3
    1ef8:	str	x3, [x20, #8]
    1efc:	add	x0, x0, x21
    1f00:	str	x0, [x20, #32]
    1f04:	ldr	x21, [x20, #16]
    1f08:	cbz	w2, 2238 <xz_dec_lzma2_run+0x678>
    1f0c:	cmp	x3, x21
    1f10:	b.cc	1e38 <xz_dec_lzma2_run+0x278>  // b.lo, b.ul, b.last
    1f14:	nop
    1f18:	mov	w0, #0x0                   	// #0
    1f1c:	ldp	x19, x20, [sp, #16]
    1f20:	ldp	x21, x22, [sp, #32]
    1f24:	ldp	x23, x24, [sp, #48]
    1f28:	ldp	x25, x26, [sp, #64]
    1f2c:	ldr	x27, [sp, #80]
    1f30:	ldp	x29, x30, [sp], #96
    1f34:	ret
    1f38:	cbz	w0, 21b4 <xz_dec_lzma2_run+0x5f4>
    1f3c:	cmp	w0, #0x1
    1f40:	b.ne	1c00 <xz_dec_lzma2_run+0x40>  // b.any
    1f44:	ldr	x1, [x20]
    1f48:	add	x4, x3, #0x1
    1f4c:	ldr	w5, [x19, #8]
    1f50:	mov	w2, #0x2                   	// #2
    1f54:	str	x4, [x20, #8]
    1f58:	mov	w0, w2
    1f5c:	ldrb	w1, [x1, x3]
    1f60:	mov	x3, x4
    1f64:	str	w2, [x19]
    1f68:	add	w1, w5, w1, lsl #8
    1f6c:	str	w1, [x19, #8]
    1f70:	b	1c00 <xz_dec_lzma2_run+0x40>
    1f74:	cmp	w0, #0x5
    1f78:	b.ne	1c00 <xz_dec_lzma2_run+0x40>  // b.any
    1f7c:	ldr	x0, [x20]
    1f80:	add	x1, x3, #0x1
    1f84:	str	x1, [x20, #8]
    1f88:	ldrb	w0, [x0, x3]
    1f8c:	cmp	w0, #0xe0
    1f90:	b.hi	20b4 <xz_dec_lzma2_run+0x4f4>  // b.pmore
    1f94:	cmp	w0, #0x2c
    1f98:	b.ls	237c <xz_dec_lzma2_run+0x7bc>  // b.plast
    1f9c:	mov	w1, #0x1                   	// #1
    1fa0:	sub	w0, w0, #0x2d
    1fa4:	mov	w2, w1
    1fa8:	and	w0, w0, #0xff
    1fac:	add	w1, w1, #0x1
    1fb0:	cmp	w0, #0x2c
    1fb4:	b.hi	1fa0 <xz_dec_lzma2_run+0x3e0>  // b.pmore
    1fb8:	mov	w1, #0x1                   	// #1
    1fbc:	lsl	w1, w1, w2
    1fc0:	sub	w1, w1, #0x1
    1fc4:	stp	wzr, w1, [x19, #196]
    1fc8:	cmp	w0, #0x8
    1fcc:	mov	w1, #0x0                   	// #0
    1fd0:	b.ls	1ff0 <xz_dec_lzma2_run+0x430>  // b.plast
    1fd4:	nop
    1fd8:	sub	w0, w0, #0x9
    1fdc:	add	w1, w1, #0x1
    1fe0:	and	w0, w0, #0xff
    1fe4:	cmp	w0, #0x8
    1fe8:	b.hi	1fd8 <xz_dec_lzma2_run+0x418>  // b.pmore
    1fec:	str	w1, [x19, #196]
    1ff0:	str	w0, [x19, #192]
    1ff4:	add	w0, w0, w1
    1ff8:	cmp	w0, #0x4
    1ffc:	b.hi	20b4 <xz_dec_lzma2_run+0x4f4>  // b.pmore
    2000:	mov	w2, #0x1                   	// #1
    2004:	add	x0, x19, #0xe4
    2008:	lsl	w2, w2, w1
    200c:	mov	w1, #0x400                 	// #1024
    2010:	sub	w2, w2, #0x1
    2014:	str	w2, [x19, #196]
    2018:	str	wzr, [x19, #204]
    201c:	stp	xzr, xzr, [x19, #208]
    2020:	strh	w1, [x0], #2
    2024:	cmp	x22, x0
    2028:	b.ne	2020 <xz_dec_lzma2_run+0x460>  // b.any
    202c:	mov	x0, x19
    2030:	mov	x3, #0xffffffff            	// #4294967295
    2034:	mov	w2, #0x5                   	// #5
    2038:	mov	w1, #0x6                   	// #6
    203c:	str	x3, [x0, #152]!
    2040:	str	w2, [x0, #8]
    2044:	str	w1, [x19]
    2048:	ldr	w26, [x19, #12]
    204c:	cmp	w26, #0x4
    2050:	b.ls	20b4 <xz_dec_lzma2_run+0x4f4>  // b.plast
    2054:	ldr	w7, [x19, #160]
    2058:	ldr	x2, [x20, #8]
    205c:	cbz	w7, 20d4 <xz_dec_lzma2_run+0x514>
    2060:	sub	w1, w7, #0x1
    2064:	add	x3, x2, #0x1
    2068:	add	w7, w7, w2
    206c:	add	x3, x3, x1
    2070:	b	2098 <xz_dec_lzma2_run+0x4d8>
    2074:	ldr	x1, [x20]
    2078:	cmp	x0, x3
    207c:	ldr	w4, [x19, #156]
    2080:	str	x0, [x20, #8]
    2084:	ldrb	w6, [x1, x2]
    2088:	mov	x2, x0
    208c:	add	w0, w6, w4, lsl #8
    2090:	stp	w0, w5, [x19, #156]
    2094:	b.eq	20e0 <xz_dec_lzma2_run+0x520>  // b.none
    2098:	add	x0, x2, #0x1
    209c:	cmp	x2, x21
    20a0:	sub	w5, w7, w0
    20a4:	b.ne	2074 <xz_dec_lzma2_run+0x4b4>  // b.any
    20a8:	b	1f18 <xz_dec_lzma2_run+0x358>
    20ac:	ldr	w0, [x19, #16]
    20b0:	cbz	w0, 2204 <xz_dec_lzma2_run+0x644>
    20b4:	mov	w0, #0x5                   	// #5
    20b8:	ldp	x19, x20, [sp, #16]
    20bc:	ldp	x21, x22, [sp, #32]
    20c0:	ldp	x23, x24, [sp, #48]
    20c4:	ldp	x25, x26, [sp, #64]
    20c8:	ldr	x27, [sp, #80]
    20cc:	ldp	x29, x30, [sp], #96
    20d0:	ret
    20d4:	ldr	x1, [x20]
    20d8:	mov	x3, x2
    20dc:	nop
    20e0:	sub	w26, w26, #0x5
    20e4:	mov	w0, #0x7                   	// #7
    20e8:	str	w0, [x19]
    20ec:	str	w26, [x19, #12]
    20f0:	b	1c18 <xz_dec_lzma2_run+0x58>
    20f4:	sub	w26, w26, w0
    20f8:	mov	w2, #0x2a                  	// #42
    20fc:	sub	w2, w2, w0
    2100:	cmp	w26, w2
    2104:	csel	w4, w26, w2, ls  // ls = plast
    2108:	csel	w26, w26, w2, ls  // ls = plast
    210c:	cmp	x27, x4
    2110:	b.cs	2300 <xz_dec_lzma2_run+0x740>  // b.hs, b.nlast
    2114:	mov	w26, w27
    2118:	b	1c60 <xz_dec_lzma2_run+0xa0>
    211c:	ldr	x0, [x20, #40]
    2120:	cmp	x0, x21
    2124:	b.eq	1f18 <xz_dec_lzma2_run+0x358>  // b.none
    2128:	ldp	x3, x21, [x20, #8]
    212c:	cmp	x3, x21
    2130:	b.eq	213c <xz_dec_lzma2_run+0x57c>  // b.none
    2134:	ldr	w0, [x19]
    2138:	b	1c00 <xz_dec_lzma2_run+0x40>
    213c:	ldr	w0, [x19, #12]
    2140:	ldr	w1, [x19, #24]
    2144:	cmp	w1, w0
    2148:	b.cc	1f18 <xz_dec_lzma2_run+0x358>  // b.lo, b.ul, b.last
    214c:	ldr	w0, [x19]
    2150:	b	1c00 <xz_dec_lzma2_run+0x40>
    2154:	ldr	x1, [x20]
    2158:	add	x0, x3, #0x1
    215c:	ldr	w2, [x19, #12]
    2160:	str	x0, [x20, #8]
    2164:	add	w2, w2, #0x1
    2168:	ldrb	w1, [x1, x3]
    216c:	mov	x3, x0
    2170:	ldr	w0, [x19, #4]
    2174:	add	w1, w1, w2
    2178:	str	w0, [x19]
    217c:	str	w1, [x19, #12]
    2180:	b	1c00 <xz_dec_lzma2_run+0x40>
    2184:	ldr	x1, [x20]
    2188:	add	x4, x3, #0x1
    218c:	ldr	w2, [x19, #8]
    2190:	mov	w0, #0x3                   	// #3
    2194:	str	x4, [x20, #8]
    2198:	add	w2, w2, #0x1
    219c:	ldrb	w1, [x1, x3]
    21a0:	mov	x3, x4
    21a4:	str	w23, [x19]
    21a8:	add	w1, w1, w2
    21ac:	str	w1, [x19, #8]
    21b0:	b	1c00 <xz_dec_lzma2_run+0x40>
    21b4:	ldr	x0, [x20]
    21b8:	add	x2, x3, #0x1
    21bc:	str	x2, [x20, #8]
    21c0:	ldrb	w1, [x0, x3]
    21c4:	cmp	w1, #0xdf
    21c8:	ccmp	w1, #0x1, #0x4, ls  // ls = plast
    21cc:	b.ne	20ac <xz_dec_lzma2_run+0x4ec>  // b.any
    21d0:	add	x25, x19, #0x60
    21d4:	mov	x0, #0x100000000           	// #4294967296
    21d8:	str	x0, [x19, #16]
    21dc:	ldr	w0, [x25, #52]
    21e0:	cbnz	w0, 21fc <xz_dec_lzma2_run+0x63c>
    21e4:	ldp	x4, x0, [x20, #24]
    21e8:	ldr	x3, [x20, #40]
    21ec:	add	x4, x4, x0
    21f0:	str	x4, [x19, #96]
    21f4:	sub	x0, x3, x0
    21f8:	str	x0, [x25, #40]
    21fc:	stp	xzr, xzr, [x25, #8]
    2200:	stp	xzr, xzr, [x25, #24]
    2204:	cmp	w1, #0x7f
    2208:	b.ls	22bc <xz_dec_lzma2_run+0x6fc>  // b.plast
    220c:	ubfiz	w3, w1, #16, #5
    2210:	mov	w0, #0x1                   	// #1
    2214:	str	w0, [x19]
    2218:	cmp	w1, #0xbf
    221c:	str	w3, [x19, #8]
    2220:	b.ls	2308 <xz_dec_lzma2_run+0x748>  // b.plast
    2224:	mov	w1, #0x5                   	// #5
    2228:	mov	x3, x2
    222c:	str	w1, [x19, #4]
    2230:	str	wzr, [x19, #20]
    2234:	b	1c00 <xz_dec_lzma2_run+0x40>
    2238:	mov	w0, #0x0                   	// #0
    223c:	str	wzr, [x19]
    2240:	b	1c00 <xz_dec_lzma2_run+0x40>
    2244:	add	w0, w26, #0x15
    2248:	sub	x21, x21, #0x15
    224c:	cmp	x0, x27
    2250:	add	x26, x3, w26, uxtw
    2254:	csel	x21, x21, x26, hi  // hi = pmore
    2258:	stp	x1, x3, [x19, #168]
    225c:	mov	x0, x19
    2260:	str	x21, [x19, #184]
    2264:	bl	1328 <xz_dec_bcj_reset+0x2a8>
    2268:	cbz	w0, 20b4 <xz_dec_lzma2_run+0x4f4>
    226c:	ldr	x0, [x20, #8]
    2270:	ldr	x3, [x19, #176]
    2274:	ldr	w26, [x19, #12]
    2278:	sub	x0, x3, x0
    227c:	cmp	x0, w26, uxtw
    2280:	b.hi	20b4 <xz_dec_lzma2_run+0x4f4>  // b.pmore
    2284:	ldr	x27, [x20, #16]
    2288:	sub	w26, w26, w0
    228c:	str	w26, [x19, #12]
    2290:	str	x3, [x20, #8]
    2294:	sub	x27, x27, x3
    2298:	cmp	x27, #0x14
    229c:	b.hi	1d28 <xz_dec_lzma2_run+0x168>  // b.pmore
    22a0:	ldr	x1, [x20]
    22a4:	b	1cfc <xz_dec_lzma2_run+0x13c>
    22a8:	ldr	x1, [x20, #8]
    22ac:	str	w0, [x19, #24]
    22b0:	add	x27, x1, x27
    22b4:	str	x27, [x20, #8]
    22b8:	b	1d28 <xz_dec_lzma2_run+0x168>
    22bc:	cbz	w1, 2384 <xz_dec_lzma2_run+0x7c4>
    22c0:	cmp	w1, #0x2
    22c4:	b.hi	20b4 <xz_dec_lzma2_run+0x4f4>  // b.pmore
    22c8:	mov	x3, x2
    22cc:	mov	w0, #0x3                   	// #3
    22d0:	str	x24, [x19]
    22d4:	b	1c00 <xz_dec_lzma2_run+0x40>
    22d8:	add	x1, x27, w1, uxtw
    22dc:	mov	x2, #0x3f                  	// #63
    22e0:	add	x0, x21, x1
    22e4:	sub	x2, x2, x1
    22e8:	mov	w1, #0x0                   	// #0
    22ec:	bl	0 <grub_memset>
    22f0:	ldr	w0, [x19, #24]
    22f4:	add	w0, w26, w0
    22f8:	str	x0, [x19, #184]
    22fc:	b	1c98 <xz_dec_lzma2_run+0xd8>
    2300:	mov	x27, x4
    2304:	b	1c60 <xz_dec_lzma2_run+0xa0>
    2308:	ldr	w3, [x19, #20]
    230c:	cbnz	w3, 20b4 <xz_dec_lzma2_run+0x4f4>
    2310:	mov	w3, #0x6                   	// #6
    2314:	str	w3, [x19, #4]
    2318:	cmp	w1, #0x9f
    231c:	mov	x3, x2
    2320:	b.ls	1c00 <xz_dec_lzma2_run+0x40>  // b.plast
    2324:	add	x0, x19, #0xe4
    2328:	mov	w1, #0x400                 	// #1024
    232c:	str	wzr, [x19, #204]
    2330:	stp	xzr, xzr, [x19, #208]
    2334:	nop
    2338:	strh	w1, [x0], #2
    233c:	cmp	x22, x0
    2340:	b.ne	2338 <xz_dec_lzma2_run+0x778>  // b.any
    2344:	mov	x1, x19
    2348:	mov	x4, #0xffffffff            	// #4294967295
    234c:	mov	x3, x2
    2350:	mov	w0, #0x1                   	// #1
    2354:	mov	w2, #0x5                   	// #5
    2358:	str	x4, [x1, #152]!
    235c:	str	w2, [x1, #8]
    2360:	b	1c00 <xz_dec_lzma2_run+0x40>
    2364:	sub	w2, w0, w1
    2368:	str	w2, [x19, #24]
    236c:	add	x1, x21, x1
    2370:	mov	x0, x21
    2374:	bl	0 <grub_memmove>
    2378:	b	1d28 <xz_dec_lzma2_run+0x168>
    237c:	mov	w1, #0x0                   	// #0
    2380:	b	1fc4 <xz_dec_lzma2_run+0x404>
    2384:	mov	w0, #0x1                   	// #1
    2388:	b	1f1c <xz_dec_lzma2_run+0x35c>
    238c:	nop

0000000000002390 <xz_dec_lzma2_create>:
    2390:	stp	x29, x30, [sp, #-32]!
    2394:	mov	w1, #0xc0000000            	// #-1073741824
    2398:	cmp	w0, w1
    239c:	mov	x29, sp
    23a0:	stp	x19, x20, [sp, #16]
    23a4:	b.hi	23f4 <xz_dec_lzma2_create+0x64>  // b.pmore
    23a8:	mov	w19, w0
    23ac:	mov	x0, #0x6f50                	// #28496
    23b0:	bl	0 <grub_malloc>
    23b4:	mov	x20, x0
    23b8:	cbz	x0, 23f4 <xz_dec_lzma2_create+0x64>
    23bc:	cbnz	w19, 23d4 <xz_dec_lzma2_create+0x44>
    23c0:	str	w19, [x20, #148]
    23c4:	mov	x0, x20
    23c8:	ldp	x19, x20, [sp, #16]
    23cc:	ldp	x29, x30, [sp], #32
    23d0:	ret
    23d4:	mov	w0, w19
    23d8:	bl	0 <grub_malloc>
    23dc:	str	x0, [x20, #96]
    23e0:	cbnz	x0, 23c0 <xz_dec_lzma2_create+0x30>
    23e4:	mov	x0, x20
    23e8:	mov	x20, #0x0                   	// #0
    23ec:	bl	0 <grub_free>
    23f0:	b	23c4 <xz_dec_lzma2_create+0x34>
    23f4:	mov	x20, #0x0                   	// #0
    23f8:	mov	x0, x20
    23fc:	ldp	x19, x20, [sp, #16]
    2400:	ldp	x29, x30, [sp], #32
    2404:	ret

0000000000002408 <xz_dec_lzma2_reset>:
    2408:	and	w1, w1, #0xff
    240c:	cmp	w1, #0x1e
    2410:	b.hi	2474 <xz_dec_lzma2_reset+0x6c>  // b.pmore
    2414:	stp	x29, x30, [sp, #-32]!
    2418:	mov	x29, sp
    241c:	str	x19, [sp, #16]
    2420:	mov	x19, x0
    2424:	and	w0, w1, #0x1
    2428:	lsr	w1, w1, #1
    242c:	add	w0, w0, #0x2
    2430:	add	w1, w1, #0xb
    2434:	ldr	w2, [x19, #148]
    2438:	lsl	w1, w0, w1
    243c:	str	w1, [x19, #144]
    2440:	cmp	w2, #0x0
    2444:	ccmp	w1, w2, #0x0, ne  // ne = any
    2448:	b.hi	247c <xz_dec_lzma2_reset+0x74>  // b.pmore
    244c:	mov	w2, #0x1                   	// #1
    2450:	mov	w0, #0x0                   	// #0
    2454:	str	wzr, [x19]
    2458:	str	w2, [x19, #16]
    245c:	str	wzr, [x19, #24]
    2460:	str	x1, [x19, #136]
    2464:	str	wzr, [x19, #224]
    2468:	ldr	x19, [sp, #16]
    246c:	ldp	x29, x30, [sp], #32
    2470:	ret
    2474:	mov	w0, #0x4                   	// #4
    2478:	ret
    247c:	ldr	x0, [x19, #96]
    2480:	bl	0 <grub_realloc>
    2484:	cbz	x0, 249c <xz_dec_lzma2_reset+0x94>
    2488:	ldr	w2, [x19, #144]
    248c:	str	x0, [x19, #96]
    2490:	mov	w1, w2
    2494:	str	w2, [x19, #148]
    2498:	b	244c <xz_dec_lzma2_reset+0x44>
    249c:	mov	w0, #0x2                   	// #2
    24a0:	b	2468 <xz_dec_lzma2_reset+0x60>
    24a4:	nop

00000000000024a8 <xz_dec_lzma2_end>:
    24a8:	stp	x29, x30, [sp, #-32]!
    24ac:	mov	x29, sp
    24b0:	str	x19, [sp, #16]
    24b4:	mov	x19, x0
    24b8:	ldr	w0, [x0, #148]
    24bc:	cbnz	w0, 24d0 <xz_dec_lzma2_end+0x28>
    24c0:	mov	x0, x19
    24c4:	ldr	x19, [sp, #16]
    24c8:	ldp	x29, x30, [sp], #32
    24cc:	b	0 <grub_free>
    24d0:	ldr	x0, [x19, #96]
    24d4:	bl	0 <grub_free>
    24d8:	mov	x0, x19
    24dc:	ldr	x19, [sp, #16]
    24e0:	ldp	x29, x30, [sp], #32
    24e4:	b	0 <grub_free>
    24e8:	stp	x29, x30, [sp, #-64]!
    24ec:	cmp	w2, #0x0
    24f0:	mov	x29, sp
    24f4:	stp	x19, x20, [sp, #16]
    24f8:	mov	x20, x1
    24fc:	mov	x19, x0
    2500:	stp	x21, x22, [sp, #32]
    2504:	ldp	x21, x1, [x0, #120]
    2508:	ldr	x0, [x0, #104]
    250c:	ldr	x22, [x19, #112]
    2510:	csel	x21, x21, x1, eq  // eq = none
    2514:	ldr	w1, [x19, #96]
    2518:	str	x23, [sp, #48]
    251c:	csel	x22, x0, x22, eq  // eq = none
    2520:	cmp	w1, #0x0
    2524:	mov	w23, w2
    2528:	ccmp	x21, #0x0, #0x4, eq  // eq = none
    252c:	b.ne	261c <xz_dec_lzma2_end+0x174>  // b.any
    2530:	ldp	x0, x7, [x20, #8]
    2534:	cmp	x0, x7
    2538:	b.eq	2604 <xz_dec_lzma2_end+0x15c>  // b.none
    253c:	ldr	w3, [x19, #4]
    2540:	cbnz	w23, 2588 <xz_dec_lzma2_end+0xe0>
    2544:	ldr	x0, [x19, #144]
    2548:	cbnz	x0, 2588 <xz_dec_lzma2_end+0xe0>
    254c:	add	w3, w3, #0x8
    2550:	str	w3, [x19, #4]
    2554:	b	2588 <xz_dec_lzma2_end+0xe0>
    2558:	ldr	x4, [x20, #8]
    255c:	add	x1, x4, #0x1
    2560:	cmp	x4, x7
    2564:	b.eq	2604 <xz_dec_lzma2_end+0x15c>  // b.none
    2568:	cbz	x21, 2580 <xz_dec_lzma2_end+0xd8>
    256c:	ldr	x6, [x20]
    2570:	ldrb	w5, [x0, #32]
    2574:	ldrb	w0, [x6, x4]
    2578:	cmp	w5, w0
    257c:	b.ne	268c <xz_dec_lzma2_end+0x1e4>  // b.any
    2580:	str	x1, [x20, #8]
    2584:	str	w3, [x19, #4]
    2588:	lsr	w0, w3, #3
    258c:	mov	w1, w3
    2590:	add	x0, x19, x0
    2594:	add	w3, w3, #0x8
    2598:	mov	x4, #0x20                  	// #32
    259c:	cbnz	w23, 25a8 <xz_dec_lzma2_end+0x100>
    25a0:	ldr	x4, [x19, #144]
    25a4:	lsl	x4, x4, #3
    25a8:	cmp	x1, x4
    25ac:	b.cc	2558 <xz_dec_lzma2_end+0xb0>  // b.lo, b.ul, b.last
    25b0:	ldr	x0, [x19, #120]
    25b4:	cbz	x0, 25c4 <xz_dec_lzma2_end+0x11c>
    25b8:	ldr	x1, [x0, #40]
    25bc:	ldr	x0, [x19, #104]
    25c0:	blr	x1
    25c4:	ldr	x0, [x19, #128]
    25c8:	cbz	x0, 25d8 <xz_dec_lzma2_end+0x130>
    25cc:	ldr	x1, [x0, #40]
    25d0:	ldr	x0, [x19, #112]
    25d4:	blr	x1
    25d8:	str	wzr, [x19, #4]
    25dc:	mov	w0, #0x1                   	// #1
    25e0:	str	wzr, [x19, #96]
    25e4:	ldp	x19, x20, [sp, #16]
    25e8:	ldp	x21, x22, [sp, #32]
    25ec:	ldr	x23, [sp, #48]
    25f0:	ldp	x29, x30, [sp], #64
    25f4:	ret
    25f8:	ldp	x0, x7, [x20, #8]
    25fc:	cmp	x0, x7
    2600:	b.ne	26a4 <xz_dec_lzma2_end+0x1fc>  // b.any
    2604:	mov	w0, #0x0                   	// #0
    2608:	ldp	x19, x20, [sp, #16]
    260c:	ldp	x21, x22, [sp, #32]
    2610:	ldr	x23, [sp, #48]
    2614:	ldp	x29, x30, [sp], #64
    2618:	ret
    261c:	ldr	x0, [x21, #32]
    2620:	cmp	x0, #0x40
    2624:	b.hi	2530 <xz_dec_lzma2_end+0x88>  // b.pmore
    2628:	ldr	x1, [x21, #56]
    262c:	mov	x0, x22
    2630:	blr	x1
    2634:	ldr	x1, [x21, #64]
    2638:	mov	x0, x22
    263c:	blr	x1
    2640:	mov	x1, x0
    2644:	ldr	x2, [x21, #32]
    2648:	add	x0, x19, #0x20
    264c:	bl	0 <grub_memmove>
    2650:	ldrb	w0, [x19, #136]
    2654:	mov	w1, #0x1                   	// #1
    2658:	str	w1, [x19, #96]
    265c:	cmp	w0, w1
    2660:	and	w0, w23, w1
    2664:	csel	w0, w0, w1, ne  // ne = any
    2668:	cbz	w0, 25f8 <xz_dec_lzma2_end+0x150>
    266c:	ldurh	w0, [x19, #33]
    2670:	ldrb	w1, [x19, #32]
    2674:	ldrb	w2, [x19, #35]
    2678:	rev16	w0, w0
    267c:	strb	w2, [x19, #32]
    2680:	sturh	w0, [x19, #33]
    2684:	strb	w1, [x19, #35]
    2688:	b	2530 <xz_dec_lzma2_end+0x88>
    268c:	mov	w0, #0x5                   	// #5
    2690:	ldp	x19, x20, [sp, #16]
    2694:	ldp	x21, x22, [sp, #32]
    2698:	ldr	x23, [sp, #48]
    269c:	ldp	x29, x30, [sp], #64
    26a0:	ret
    26a4:	ldr	w3, [x19, #4]
    26a8:	b	2544 <xz_dec_lzma2_end+0x9c>
    26ac:	nop
    26b0:	stp	x29, x30, [sp, #-48]!
    26b4:	mov	x29, sp
    26b8:	stp	x19, x20, [sp, #16]
    26bc:	mov	x20, x0
    26c0:	add	x0, x0, #0x128
    26c4:	ldp	x3, x19, [x20, #280]
    26c8:	str	x21, [sp, #32]
    26cc:	mov	x21, x1
    26d0:	ldr	x1, [x1, #8]
    26d4:	ldr	x2, [x21, #16]
    26d8:	sub	x19, x19, x3
    26dc:	ldr	x4, [x21]
    26e0:	sub	x2, x2, x1
    26e4:	cmp	x19, x2
    26e8:	add	x0, x0, x3
    26ec:	csel	x19, x19, x2, ls  // ls = plast
    26f0:	add	x1, x4, x1
    26f4:	mov	x2, x19
    26f8:	bl	0 <grub_memmove>
    26fc:	ldr	x0, [x21, #8]
    2700:	ldr	x2, [x20, #280]
    2704:	add	x0, x0, x19
    2708:	str	x0, [x21, #8]
    270c:	ldr	x0, [x20, #288]
    2710:	add	x19, x19, x2
    2714:	str	x19, [x20, #280]
    2718:	cmp	x19, x0
    271c:	b.eq	2734 <xz_dec_lzma2_end+0x28c>  // b.none
    2720:	mov	w0, #0x0                   	// #0
    2724:	ldp	x19, x20, [sp, #16]
    2728:	ldr	x21, [sp, #32]
    272c:	ldp	x29, x30, [sp], #48
    2730:	ret
    2734:	str	xzr, [x20, #280]
    2738:	mov	w0, #0x1                   	// #1
    273c:	ldp	x19, x20, [sp, #16]
    2740:	ldr	x21, [sp, #32]
    2744:	ldp	x29, x30, [sp], #48
    2748:	ret
    274c:	nop
    2750:	mov	x10, x0
    2754:	ldr	w0, [x0]
    2758:	cbnz	w0, 2798 <xz_dec_lzma2_end+0x2f0>
    275c:	str	xzr, [x1]
    2760:	b	2798 <xz_dec_lzma2_end+0x2f0>
    2764:	ldrb	w8, [x2, x5]
    2768:	ldr	w7, [x10]
    276c:	str	x0, [x3]
    2770:	and	x6, x8, #0x7f
    2774:	add	w9, w7, #0x7
    2778:	ldr	x5, [x1]
    277c:	lsl	x6, x6, x7
    2780:	orr	x5, x5, x6
    2784:	str	x5, [x1]
    2788:	tbz	w8, #7, 27b8 <xz_dec_lzma2_end+0x310>
    278c:	str	w9, [x10]
    2790:	cmp	w9, #0x3f
    2794:	b.eq	27b0 <xz_dec_lzma2_end+0x308>  // b.none
    2798:	ldr	x5, [x3]
    279c:	add	x0, x5, #0x1
    27a0:	cmp	x5, x4
    27a4:	b.cc	2764 <xz_dec_lzma2_end+0x2bc>  // b.lo, b.ul, b.last
    27a8:	mov	w0, #0x0                   	// #0
    27ac:	ret
    27b0:	mov	w0, #0x5                   	// #5
    27b4:	ret
    27b8:	cmp	w8, #0x0
    27bc:	ccmp	w7, #0x0, #0x4, eq  // eq = none
    27c0:	b.ne	27b0 <xz_dec_lzma2_end+0x308>  // b.any
    27c4:	mov	w0, #0x1                   	// #1
    27c8:	str	wzr, [x10]
    27cc:	ret
    27d0:	stp	x29, x30, [sp, #-48]!
    27d4:	mov	x29, sp
    27d8:	stp	x19, x20, [sp, #16]
    27dc:	mov	x19, x0
    27e0:	str	x21, [sp, #32]
    27e4:	mov	x21, x1
    27e8:	ldr	x1, [x0, #16]
    27ec:	ldr	x0, [x0, #240]
    27f0:	sub	x20, x2, x1
    27f4:	ldr	x2, [x19, #120]
    27f8:	add	x0, x0, x20
    27fc:	str	x0, [x19, #240]
    2800:	cbz	x2, 281c <xz_dec_lzma2_end+0x374>
    2804:	ldr	x4, [x21]
    2808:	ldr	x3, [x2, #48]
    280c:	add	x1, x4, x1
    2810:	ldr	x0, [x19, #104]
    2814:	mov	x2, x20
    2818:	blr	x3
    281c:	ldr	x0, [x19, #128]
    2820:	cbz	x0, 2850 <xz_dec_lzma2_end+0x3a8>
    2824:	mov	x2, x20
    2828:	ldr	x4, [x21]
    282c:	ldr	x1, [x19, #16]
    2830:	ldr	x21, [sp, #32]
    2834:	add	x1, x4, x1
    2838:	ldr	x3, [x0, #48]
    283c:	ldr	x0, [x19, #112]
    2840:	mov	x16, x3
    2844:	ldp	x19, x20, [sp, #16]
    2848:	ldp	x29, x30, [sp], #48
    284c:	br	x16
    2850:	ldp	x19, x20, [sp, #16]
    2854:	ldr	x21, [sp, #32]
    2858:	ldp	x29, x30, [sp], #48
    285c:	ret

0000000000002860 <xz_dec_reset>:
    2860:	stp	x29, x30, [sp, #-32]!
    2864:	mov	x2, #0x30                  	// #48
    2868:	mov	w1, #0x0                   	// #0
    286c:	mov	x29, sp
    2870:	stp	x19, x20, [sp, #16]
    2874:	mov	x19, x0
    2878:	add	x0, x0, #0xb8
    287c:	str	xzr, [x19]
    2880:	str	wzr, [x19, #156]
    2884:	ldr	x20, [x19, #224]
    2888:	bl	0 <grub_memset>
    288c:	str	x20, [x19, #224]
    2890:	mov	w1, #0x0                   	// #0
    2894:	add	x0, x19, #0xe8
    2898:	mov	x2, #0x30                  	// #48
    289c:	ldr	x20, [x19, #272]
    28a0:	bl	0 <grub_memset>
    28a4:	ldr	x0, [x19, #120]
    28a8:	mov	x1, #0xc                   	// #12
    28ac:	stp	x20, xzr, [x19, #272]
    28b0:	str	x1, [x19, #288]
    28b4:	cbz	x0, 28e4 <xz_dec_reset+0x84>
    28b8:	ldr	x1, [x0, #40]
    28bc:	ldr	x0, [x19, #104]
    28c0:	blr	x1
    28c4:	ldr	x1, [x19, #120]
    28c8:	ldr	x0, [x19, #272]
    28cc:	ldr	x1, [x1, #40]
    28d0:	blr	x1
    28d4:	ldr	x1, [x19, #120]
    28d8:	ldr	x0, [x19, #224]
    28dc:	ldr	x1, [x1, #40]
    28e0:	blr	x1
    28e4:	str	wzr, [x19, #96]
    28e8:	ldp	x19, x20, [sp, #16]
    28ec:	ldp	x29, x30, [sp], #32
    28f0:	ret
    28f4:	nop

00000000000028f8 <xz_dec_run>:
    28f8:	stp	x29, x30, [sp, #-112]!
    28fc:	mov	x29, sp
    2900:	stp	x25, x26, [sp, #64]
    2904:	mov	x26, x1
    2908:	ldr	w1, [x0, #152]
    290c:	stp	x19, x20, [sp, #16]
    2910:	mov	x19, x0
    2914:	stp	x21, x22, [sp, #32]
    2918:	stp	x23, x24, [sp, #48]
    291c:	cbnz	w1, 2f80 <xz_dec_run+0x688>
    2920:	ldr	w20, [x19]
    2924:	add	x24, x19, #0x127
    2928:	ldr	x21, [x26, #8]
    292c:	mov	w23, #0x5                   	// #5
    2930:	ldr	x22, [x26, #32]
    2934:	str	x21, [x19, #16]
    2938:	cmp	w20, #0x5
    293c:	b.eq	2f5c <xz_dec_run+0x664>  // b.none
    2940:	b.hi	2a84 <xz_dec_run+0x18c>  // b.pmore
    2944:	cmp	w20, #0x2
    2948:	b.eq	2cc8 <xz_dec_run+0x3d0>  // b.none
    294c:	b.ls	29e0 <xz_dec_run+0xe8>  // b.plast
    2950:	cmp	w20, #0x3
    2954:	b.eq	2e60 <xz_dec_run+0x568>  // b.none
    2958:	ldr	x3, [x19, #184]
    295c:	tst	x3, #0x3
    2960:	b.eq	2f58 <xz_dec_run+0x660>  // b.none
    2964:	ldp	x0, x6, [x26, #8]
    2968:	sub	x3, x3, x0
    296c:	b	2990 <xz_dec_run+0x98>
    2970:	ldr	x4, [x26]
    2974:	str	x1, [x26, #8]
    2978:	tst	x2, #0x3
    297c:	ldrb	w4, [x4, x0]
    2980:	mov	x0, x1
    2984:	cbnz	w4, 2f40 <xz_dec_run+0x648>
    2988:	str	x2, [x19, #184]
    298c:	b.eq	2f58 <xz_dec_run+0x660>  // b.none
    2990:	add	x1, x0, #0x1
    2994:	cmp	x6, x0
    2998:	add	x2, x3, x1
    299c:	b.ne	2970 <xz_dec_run+0x78>  // b.any
    29a0:	ldr	w1, [x19, #152]
    29a4:	cbnz	w1, 2fd8 <xz_dec_run+0x6e0>
    29a8:	cmp	x21, x0
    29ac:	mov	w20, #0x0                   	// #0
    29b0:	b.ne	29c0 <xz_dec_run+0xc8>  // b.any
    29b4:	ldr	x0, [x26, #32]
    29b8:	cmp	x0, x22
    29bc:	b.eq	3214 <xz_dec_run+0x91c>  // b.none
    29c0:	str	wzr, [x19, #156]
    29c4:	mov	w0, w20
    29c8:	ldp	x19, x20, [sp, #16]
    29cc:	ldp	x21, x22, [sp, #32]
    29d0:	ldp	x23, x24, [sp, #48]
    29d4:	ldp	x25, x26, [sp, #64]
    29d8:	ldp	x29, x30, [sp], #112
    29dc:	ret
    29e0:	cbz	w20, 2fe8 <xz_dec_run+0x6f0>
    29e4:	cmp	w20, #0x1
    29e8:	b.ne	2938 <xz_dec_run+0x40>  // b.any
    29ec:	ldp	x0, x1, [x26, #8]
    29f0:	cmp	x0, x1
    29f4:	b.eq	29a0 <xz_dec_run+0xa8>  // b.none
    29f8:	ldr	x1, [x26]
    29fc:	ldrb	w1, [x1, x0]
    2a00:	cbnz	w1, 2cb0 <xz_dec_run+0x3b8>
    2a04:	stp	x27, x28, [sp, #80]
    2a08:	add	x1, x0, #0x1
    2a0c:	add	x25, x26, #0x8
    2a10:	add	x24, x19, #0x4
    2a14:	add	x23, x19, #0x8
    2a18:	add	x28, x19, #0x100
    2a1c:	str	x1, [x26, #8]
    2a20:	mov	w27, #0x2                   	// #2
    2a24:	mov	w1, #0x6                   	// #6
    2a28:	str	w1, [x19]
    2a2c:	str	x0, [x19, #16]
    2a30:	ldr	x2, [x26]
    2a34:	mov	x3, x25
    2a38:	ldr	x4, [x26, #16]
    2a3c:	mov	x1, x23
    2a40:	mov	x0, x24
    2a44:	bl	2750 <xz_dec_lzma2_end+0x2a8>
    2a48:	mov	w20, w0
    2a4c:	cmp	w0, #0x1
    2a50:	b.ne	3178 <xz_dec_run+0x880>  // b.any
    2a54:	ldr	w0, [x19, #232]
    2a58:	cmp	w0, #0x1
    2a5c:	b.eq	2c2c <xz_dec_run+0x334>  // b.none
    2a60:	cmp	w0, #0x2
    2a64:	b.eq	2c68 <xz_dec_run+0x370>  // b.none
    2a68:	cbz	w0, 2c48 <xz_dec_run+0x350>
    2a6c:	ldr	x0, [x19, #248]
    2a70:	cbnz	x0, 2a30 <xz_dec_run+0x138>
    2a74:	mov	w0, #0x7                   	// #7
    2a78:	ldp	x27, x28, [sp, #80]
    2a7c:	str	w0, [x19]
    2a80:	b	2af8 <xz_dec_run+0x200>
    2a84:	cmp	w20, #0x8
    2a88:	b.eq	2be0 <xz_dec_run+0x2e8>  // b.none
    2a8c:	b.ls	2ae8 <xz_dec_run+0x1f0>  // b.plast
    2a90:	cmp	w20, #0x9
    2a94:	b.ne	2938 <xz_dec_run+0x40>  // b.any
    2a98:	mov	x1, x26
    2a9c:	mov	x0, x19
    2aa0:	bl	26b0 <xz_dec_lzma2_end+0x208>
    2aa4:	cbnz	w0, 2f9c <xz_dec_run+0x6a4>
    2aa8:	ldr	w1, [x19, #152]
    2aac:	ldr	x0, [x26, #8]
    2ab0:	cbz	w1, 29a8 <xz_dec_run+0xb0>
    2ab4:	ldr	x1, [x26, #16]
    2ab8:	mov	w20, #0x6                   	// #6
    2abc:	cmp	x1, x0
    2ac0:	b.eq	2fd8 <xz_dec_run+0x6e0>  // b.none
    2ac4:	str	x21, [x26, #8]
    2ac8:	str	x22, [x26, #32]
    2acc:	mov	w0, w20
    2ad0:	ldp	x19, x20, [sp, #16]
    2ad4:	ldp	x21, x22, [sp, #32]
    2ad8:	ldp	x23, x24, [sp, #48]
    2adc:	ldp	x25, x26, [sp, #64]
    2ae0:	ldp	x29, x30, [sp], #112
    2ae4:	ret
    2ae8:	cmp	w20, #0x6
    2aec:	b.eq	2c10 <xz_dec_run+0x318>  // b.none
    2af0:	cmp	w20, #0x7
    2af4:	b.ne	2938 <xz_dec_run+0x40>  // b.any
    2af8:	ldr	x0, [x19, #16]
    2afc:	ldr	x3, [x19, #240]
    2b00:	ldr	x2, [x26, #8]
    2b04:	sub	x3, x3, x0
    2b08:	add	x1, x3, x2
    2b0c:	add	x0, x2, #0x1
    2b10:	tst	x1, #0x3
    2b14:	b.eq	2b48 <xz_dec_run+0x250>  // b.none
    2b18:	ldr	x1, [x26, #16]
    2b1c:	cmp	x1, x2
    2b20:	b.eq	315c <xz_dec_run+0x864>  // b.none
    2b24:	ldr	x1, [x26]
    2b28:	str	x0, [x26, #8]
    2b2c:	ldrb	w1, [x1, x2]
    2b30:	mov	x2, x0
    2b34:	cbnz	w1, 30d8 <xz_dec_run+0x7e0>
    2b38:	add	x1, x3, x2
    2b3c:	add	x0, x2, #0x1
    2b40:	tst	x1, #0x3
    2b44:	b.ne	2b18 <xz_dec_run+0x220>  // b.any
    2b48:	mov	x0, x19
    2b4c:	mov	x1, x26
    2b50:	bl	27d0 <xz_dec_lzma2_end+0x328>
    2b54:	ldr	x0, [x19, #120]
    2b58:	cbz	x0, 2bd4 <xz_dec_run+0x2dc>
    2b5c:	ldr	x1, [x0, #56]
    2b60:	ldr	x0, [x19, #224]
    2b64:	blr	x1
    2b68:	ldr	x1, [x19, #120]
    2b6c:	ldr	x0, [x19, #272]
    2b70:	ldr	x1, [x1, #56]
    2b74:	blr	x1
    2b78:	ldr	x1, [x19, #208]
    2b7c:	ldr	x0, [x19, #256]
    2b80:	cmp	x1, x0
    2b84:	b.ne	2fc8 <xz_dec_run+0x6d0>  // b.any
    2b88:	ldr	x1, [x19, #216]
    2b8c:	ldr	x0, [x19, #264]
    2b90:	cmp	x1, x0
    2b94:	b.ne	2fc8 <xz_dec_run+0x6d0>  // b.any
    2b98:	ldr	x1, [x19, #120]
    2b9c:	ldr	x0, [x19, #224]
    2ba0:	ldr	x1, [x1, #64]
    2ba4:	blr	x1
    2ba8:	mov	x20, x0
    2bac:	ldr	x1, [x19, #120]
    2bb0:	ldr	x0, [x19, #272]
    2bb4:	ldr	x1, [x1, #64]
    2bb8:	blr	x1
    2bbc:	mov	x1, x0
    2bc0:	ldr	x2, [x19, #120]
    2bc4:	mov	x0, x20
    2bc8:	ldr	x2, [x2, #32]
    2bcc:	bl	0 <grub_memcmp>
    2bd0:	cbnz	w0, 2fc8 <xz_dec_run+0x6d0>
    2bd4:	mov	w0, #0x8                   	// #8
    2bd8:	str	w0, [x19]
    2bdc:	nop
    2be0:	mov	x1, x26
    2be4:	mov	x0, x19
    2be8:	mov	w2, #0x1                   	// #1
    2bec:	bl	24e8 <xz_dec_lzma2_end+0x40>
    2bf0:	mov	w20, w0
    2bf4:	cmp	w0, #0x1
    2bf8:	b.ne	2f14 <xz_dec_run+0x61c>  // b.any
    2bfc:	mov	x0, #0xc                   	// #12
    2c00:	mov	w1, #0x9                   	// #9
    2c04:	str	w1, [x19]
    2c08:	str	x0, [x19, #288]
    2c0c:	b	2a98 <xz_dec_run+0x1a0>
    2c10:	add	x25, x26, #0x8
    2c14:	add	x24, x19, #0x4
    2c18:	add	x23, x19, #0x8
    2c1c:	stp	x27, x28, [sp, #80]
    2c20:	add	x28, x19, #0x100
    2c24:	mov	w27, #0x2                   	// #2
    2c28:	b	2a30 <xz_dec_run+0x138>
    2c2c:	ldp	x0, x1, [x19, #248]
    2c30:	str	w27, [x19, #232]
    2c34:	ldr	x2, [x19, #8]
    2c38:	add	x1, x1, x2
    2c3c:	str	x1, [x19, #256]
    2c40:	cbnz	x0, 2a30 <xz_dec_run+0x138>
    2c44:	b	2a74 <xz_dec_run+0x17c>
    2c48:	ldr	x0, [x19, #8]
    2c4c:	str	x0, [x19, #248]
    2c50:	ldr	x1, [x19, #200]
    2c54:	cmp	x0, x1
    2c58:	b.ne	3398 <xz_dec_run+0xaa0>  // b.any
    2c5c:	str	w20, [x19, #232]
    2c60:	cbnz	x0, 2a30 <xz_dec_run+0x138>
    2c64:	b	2a74 <xz_dec_run+0x17c>
    2c68:	ldr	x2, [x19, #8]
    2c6c:	ldr	x0, [x19, #264]
    2c70:	ldr	x1, [x19, #120]
    2c74:	add	x0, x0, x2
    2c78:	str	x0, [x19, #264]
    2c7c:	cbz	x1, 2c94 <xz_dec_run+0x39c>
    2c80:	ldr	x3, [x1, #48]
    2c84:	mov	x2, #0x10                  	// #16
    2c88:	ldr	x0, [x19, #272]
    2c8c:	mov	x1, x28
    2c90:	blr	x3
    2c94:	ldr	x0, [x19, #248]
    2c98:	mov	w1, #0x1                   	// #1
    2c9c:	str	w1, [x19, #232]
    2ca0:	sub	x0, x0, #0x1
    2ca4:	str	x0, [x19, #248]
    2ca8:	cbnz	x0, 2a30 <xz_dec_run+0x138>
    2cac:	b	2a74 <xz_dec_run+0x17c>
    2cb0:	add	w1, w1, #0x1
    2cb4:	mov	w0, #0x2                   	// #2
    2cb8:	str	w0, [x19]
    2cbc:	lsl	w1, w1, #2
    2cc0:	str	w1, [x19, #176]
    2cc4:	stp	xzr, x1, [x19, #280]
    2cc8:	mov	x1, x26
    2ccc:	mov	x0, x19
    2cd0:	bl	26b0 <xz_dec_lzma2_end+0x208>
    2cd4:	cbz	w0, 2aa8 <xz_dec_run+0x1b0>
    2cd8:	ldr	x3, [x19, #288]
    2cdc:	ldr	x0, [x19, #128]
    2ce0:	sub	x3, x3, #0x4
    2ce4:	str	x3, [x19, #288]
    2ce8:	cbz	x0, 2d44 <xz_dec_run+0x44c>
    2cec:	ldr	x1, [x0, #32]
    2cf0:	cmp	x1, #0x4
    2cf4:	b.ne	2fc8 <xz_dec_run+0x6d0>  // b.any
    2cf8:	add	x2, x19, #0x128
    2cfc:	add	x1, sp, #0x68
    2d00:	bl	0 <grub_crypto_hash>
    2d04:	ldr	x2, [x19, #288]
    2d08:	add	x1, sp, #0x68
    2d0c:	ldr	x3, [x19, #128]
    2d10:	add	x2, x19, x2
    2d14:	add	x0, sp, #0x60
    2d18:	ldrb	w4, [x2, #296]
    2d1c:	ldrb	w6, [x2, #297]
    2d20:	ldrb	w7, [x2, #298]
    2d24:	ldrb	w2, [x2, #299]
    2d28:	strb	w2, [sp, #96]
    2d2c:	strb	w7, [sp, #97]
    2d30:	strb	w6, [sp, #98]
    2d34:	strb	w4, [sp, #99]
    2d38:	ldr	x2, [x3, #32]
    2d3c:	bl	0 <grub_memcmp>
    2d40:	cbnz	w0, 2fc8 <xz_dec_run+0x6d0>
    2d44:	ldrb	w0, [x19, #297]
    2d48:	mov	x1, #0x2                   	// #2
    2d4c:	str	x1, [x19, #280]
    2d50:	tst	w0, #0x3e
    2d54:	b.ne	3190 <xz_dec_run+0x898>  // b.any
    2d58:	ldr	x4, [x19, #288]
    2d5c:	tbnz	w0, #6, 325c <xz_dec_run+0x964>
    2d60:	mov	x1, #0xffffffffffffffff    	// #-1
    2d64:	str	x1, [x19, #160]
    2d68:	tbnz	w0, #7, 328c <xz_dec_run+0x994>
    2d6c:	mov	x1, #0xffffffffffffffff    	// #-1
    2d70:	str	x1, [x19, #168]
    2d74:	ldr	x1, [x19, #280]
    2d78:	and	w0, w0, #0x1
    2d7c:	str	w0, [x19, #1336]
    2d80:	sub	x2, x4, x1
    2d84:	cbz	w0, 2dd0 <xz_dec_run+0x4d8>
    2d88:	cmp	x2, #0x1
    2d8c:	b.ls	3230 <xz_dec_run+0x938>  // b.plast
    2d90:	add	x2, x19, x1
    2d94:	add	x1, x1, #0x1
    2d98:	str	x1, [x19, #280]
    2d9c:	ldr	x0, [x19, #1328]
    2da0:	ldrb	w1, [x2, #296]
    2da4:	bl	1080 <xz_dec_bcj_reset>
    2da8:	mov	w20, w0
    2dac:	cbnz	w0, 3238 <xz_dec_run+0x940>
    2db0:	ldr	x1, [x19, #280]
    2db4:	add	x0, x19, x1
    2db8:	add	x1, x1, #0x1
    2dbc:	str	x1, [x19, #280]
    2dc0:	ldrb	w0, [x0, #296]
    2dc4:	cbnz	w0, 3230 <xz_dec_run+0x938>
    2dc8:	ldr	x4, [x19, #288]
    2dcc:	sub	x2, x4, x1
    2dd0:	cmp	x2, #0x1
    2dd4:	b.ls	2f40 <xz_dec_run+0x648>  // b.plast
    2dd8:	add	x0, x19, x1
    2ddc:	add	x2, x1, #0x1
    2de0:	str	x2, [x19, #280]
    2de4:	ldrb	w0, [x0, #296]
    2de8:	cmp	w0, #0x21
    2dec:	b.ne	3190 <xz_dec_run+0x898>  // b.any
    2df0:	add	x2, x19, x2
    2df4:	add	x0, x1, #0x2
    2df8:	str	x0, [x19, #280]
    2dfc:	ldrb	w2, [x2, #296]
    2e00:	cmp	w2, #0x1
    2e04:	b.ne	3190 <xz_dec_run+0x898>  // b.any
    2e08:	cmp	x0, x4
    2e0c:	b.eq	2f40 <xz_dec_run+0x648>  // b.none
    2e10:	add	x2, x19, x0
    2e14:	add	x1, x1, #0x3
    2e18:	str	x1, [x19, #280]
    2e1c:	ldr	x0, [x19, #1320]
    2e20:	ldrb	w1, [x2, #296]
    2e24:	bl	2408 <xz_dec_lzma2_reset>
    2e28:	mov	w20, w0
    2e2c:	cbnz	w0, 3238 <xz_dec_run+0x940>
    2e30:	ldp	x0, x2, [x19, #280]
    2e34:	b	2e44 <xz_dec_run+0x54c>
    2e38:	str	x0, [x19, #280]
    2e3c:	ldrb	w1, [x24, x0]
    2e40:	cbnz	w1, 3190 <xz_dec_run+0x898>
    2e44:	cmp	x2, x0
    2e48:	add	x0, x0, #0x1
    2e4c:	b.hi	2e38 <xz_dec_run+0x540>  // b.pmore
    2e50:	mov	w0, #0x3                   	// #3
    2e54:	str	w0, [x19]
    2e58:	stp	xzr, xzr, [x19, #184]
    2e5c:	str	xzr, [x19, #280]
    2e60:	ldr	w0, [x19, #1336]
    2e64:	ldr	x1, [x26, #8]
    2e68:	str	x1, [x19, #16]
    2e6c:	ldr	x1, [x26, #32]
    2e70:	str	x1, [x19, #24]
    2e74:	ldr	x1, [x19, #1320]
    2e78:	cbnz	w0, 2f88 <xz_dec_run+0x690>
    2e7c:	mov	x0, x1
    2e80:	mov	x1, x26
    2e84:	bl	1bc0 <xz_dec_lzma2_run>
    2e88:	mov	w20, w0
    2e8c:	ldp	x4, x1, [x19, #16]
    2e90:	ldr	x3, [x26, #8]
    2e94:	ldr	x0, [x19, #184]
    2e98:	ldr	x2, [x26, #32]
    2e9c:	add	x0, x0, x3
    2ea0:	ldr	x3, [x19, #192]
    2ea4:	sub	x0, x0, x4
    2ea8:	sub	x2, x2, x1
    2eac:	ldr	x4, [x19, #160]
    2eb0:	add	x3, x2, x3
    2eb4:	stp	x0, x3, [x19, #184]
    2eb8:	cmp	x0, x4
    2ebc:	b.hi	2f40 <xz_dec_run+0x648>  // b.pmore
    2ec0:	ldr	x0, [x19, #168]
    2ec4:	cmp	x3, x0
    2ec8:	b.hi	2f40 <xz_dec_run+0x648>  // b.pmore
    2ecc:	ldr	x0, [x19, #120]
    2ed0:	cbz	x0, 2ee8 <xz_dec_run+0x5f0>
    2ed4:	ldr	x4, [x26, #24]
    2ed8:	ldr	x3, [x0, #48]
    2edc:	add	x1, x4, x1
    2ee0:	ldr	x0, [x19, #104]
    2ee4:	blr	x3
    2ee8:	ldr	x0, [x19, #128]
    2eec:	cbz	x0, 2f0c <xz_dec_run+0x614>
    2ef0:	ldp	x1, x4, [x26, #24]
    2ef4:	ldr	x3, [x0, #48]
    2ef8:	ldr	x0, [x19, #112]
    2efc:	ldr	x2, [x19, #24]
    2f00:	add	x1, x1, x2
    2f04:	sub	x2, x4, x2
    2f08:	blr	x3
    2f0c:	cmp	w20, #0x1
    2f10:	b.eq	2f28 <xz_dec_run+0x630>  // b.none
    2f14:	ldr	w0, [x19, #152]
    2f18:	cbnz	w0, 3250 <xz_dec_run+0x958>
    2f1c:	cbnz	w20, 29c0 <xz_dec_run+0xc8>
    2f20:	ldr	x0, [x26, #8]
    2f24:	b	29a8 <xz_dec_run+0xb0>
    2f28:	ldr	x0, [x19, #160]
    2f2c:	cmn	x0, #0x1
    2f30:	b.eq	30e8 <xz_dec_run+0x7f0>  // b.none
    2f34:	ldr	x1, [x19, #184]
    2f38:	cmp	x0, x1
    2f3c:	b.eq	30e8 <xz_dec_run+0x7f0>  // b.none
    2f40:	ldr	w0, [x19, #152]
    2f44:	mov	w20, #0x5                   	// #5
    2f48:	cbz	w0, 29c0 <xz_dec_run+0xc8>
    2f4c:	str	x21, [x26, #8]
    2f50:	str	x22, [x26, #32]
    2f54:	b	2acc <xz_dec_run+0x1d4>
    2f58:	str	w23, [x19]
    2f5c:	mov	x1, x26
    2f60:	mov	x0, x19
    2f64:	mov	w2, #0x0                   	// #0
    2f68:	bl	24e8 <xz_dec_lzma2_end+0x40>
    2f6c:	mov	w20, w0
    2f70:	cmp	w0, #0x1
    2f74:	b.ne	2f14 <xz_dec_run+0x61c>  // b.any
    2f78:	str	w0, [x19]
    2f7c:	b	29ec <xz_dec_run+0xf4>
    2f80:	bl	2860 <xz_dec_reset>
    2f84:	b	2920 <xz_dec_run+0x28>
    2f88:	ldr	x0, [x19, #1328]
    2f8c:	mov	x2, x26
    2f90:	bl	ea0 <xz_dec_bcj_run>
    2f94:	mov	w20, w0
    2f98:	b	2e8c <xz_dec_run+0x594>
    2f9c:	adrp	x1, 0 <grub_mod_init-0x5d8>
    2fa0:	add	x0, x19, #0x132
    2fa4:	mov	x2, #0x2                   	// #2
    2fa8:	ldr	x1, [x1]
    2fac:	bl	0 <grub_memcmp>
    2fb0:	cbnz	w0, 2fc8 <xz_dec_run+0x6d0>
    2fb4:	ldr	x0, [x19, #128]
    2fb8:	cbz	x0, 31dc <xz_dec_run+0x8e4>
    2fbc:	ldr	x1, [x0, #32]
    2fc0:	cmp	x1, #0x4
    2fc4:	b.eq	31a8 <xz_dec_run+0x8b0>  // b.none
    2fc8:	ldr	w0, [x19, #152]
    2fcc:	cbnz	w0, 2fd8 <xz_dec_run+0x6e0>
    2fd0:	mov	w20, #0x5                   	// #5
    2fd4:	b	29c0 <xz_dec_run+0xc8>
    2fd8:	mov	w20, #0x5                   	// #5
    2fdc:	str	x21, [x26, #8]
    2fe0:	str	x22, [x26, #32]
    2fe4:	b	2acc <xz_dec_run+0x1d4>
    2fe8:	mov	x1, x26
    2fec:	mov	x0, x19
    2ff0:	bl	26b0 <xz_dec_lzma2_end+0x208>
    2ff4:	cbz	w0, 3388 <xz_dec_run+0xa90>
    2ff8:	adrp	x1, 0 <grub_mod_init-0x5d8>
    2ffc:	add	x0, x19, #0x128
    3000:	mov	x2, #0x6                   	// #6
    3004:	ldr	x20, [x1]
    3008:	mov	x1, x20
    300c:	bl	0 <grub_memcmp>
    3010:	cbnz	w0, 31a0 <xz_dec_run+0x8a8>
    3014:	adrp	x0, 0 <grub_mod_init-0x5d8>
    3018:	ldr	x0, [x0]
    301c:	bl	0 <grub_crypto_lookup_md_by_name>
    3020:	str	x0, [x19, #128]
    3024:	cbz	x0, 3068 <xz_dec_run+0x770>
    3028:	ldr	x1, [x0, #32]
    302c:	cmp	x1, #0x4
    3030:	b.ne	2fc8 <xz_dec_run+0x6d0>  // b.any
    3034:	add	x2, x19, #0x12e
    3038:	add	x1, sp, #0x68
    303c:	mov	x3, #0x2                   	// #2
    3040:	bl	0 <grub_crypto_hash>
    3044:	ldr	w2, [x19, #304]
    3048:	add	x1, sp, #0x68
    304c:	ldr	x3, [x19, #128]
    3050:	rev	w2, w2
    3054:	str	w2, [sp, #96]
    3058:	add	x0, sp, #0x60
    305c:	ldr	x2, [x3, #32]
    3060:	bl	0 <grub_memcmp>
    3064:	cbnz	w0, 2fc8 <xz_dec_run+0x6d0>
    3068:	ldrb	w0, [x19, #302]
    306c:	cbnz	w0, 3230 <xz_dec_run+0x938>
    3070:	ldrb	w0, [x19, #303]
    3074:	cmp	w0, #0xa
    3078:	b.hi	3230 <xz_dec_run+0x938>  // b.pmore
    307c:	add	x1, x20, w0, sxtw #4
    3080:	ldr	x1, [x1, #8]
    3084:	cmp	x1, #0x0
    3088:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    308c:	b.ne	3230 <xz_dec_run+0x938>  // b.any
    3090:	ldr	x1, [x19, #128]
    3094:	strb	w0, [x19, #136]
    3098:	cbz	x1, 30bc <xz_dec_run+0x7c4>
    309c:	ldr	x0, [x1, #72]
    30a0:	bl	0 <grub_malloc>
    30a4:	str	x0, [x19, #112]
    30a8:	cbz	x0, 3354 <xz_dec_run+0xa5c>
    30ac:	ldr	x1, [x19, #128]
    30b0:	ldr	x1, [x1, #40]
    30b4:	blr	x1
    30b8:	ldrb	w0, [x19, #303]
    30bc:	cbnz	w0, 32bc <xz_dec_run+0x9c4>
    30c0:	str	xzr, [x19, #120]
    30c4:	str	xzr, [x19, #144]
    30c8:	mov	w0, #0x1                   	// #1
    30cc:	str	w0, [x19]
    30d0:	str	wzr, [x19, #96]
    30d4:	b	29ec <xz_dec_run+0xf4>
    30d8:	mov	w20, #0x5                   	// #5
    30dc:	ldr	w0, [x19, #152]
    30e0:	cbz	w0, 29c0 <xz_dec_run+0xc8>
    30e4:	b	2ac4 <xz_dec_run+0x1cc>
    30e8:	ldr	x0, [x19, #168]
    30ec:	ldr	x4, [x19, #192]
    30f0:	cmn	x0, #0x1
    30f4:	b.eq	3100 <xz_dec_run+0x808>  // b.none
    30f8:	cmp	x0, x4
    30fc:	b.ne	2f40 <xz_dec_run+0x648>  // b.any
    3100:	ldp	x2, x1, [x19, #208]
    3104:	ldr	x7, [x19, #144]
    3108:	ldr	x3, [x19, #184]
    310c:	ldr	w0, [x19, #176]
    3110:	add	x1, x1, x4
    3114:	ldr	x6, [x19, #120]
    3118:	add	x2, x3, x2
    311c:	add	x0, x0, x7
    3120:	add	x0, x0, x2
    3124:	stp	x0, x1, [x19, #208]
    3128:	cbz	x6, 3144 <xz_dec_run+0x84c>
    312c:	ldr	x3, [x6, #48]
    3130:	add	x1, x19, #0xd0
    3134:	ldr	x0, [x19, #224]
    3138:	mov	x2, #0x10                  	// #16
    313c:	blr	x3
    3140:	ldr	x3, [x19, #184]
    3144:	mov	w1, #0x4                   	// #4
    3148:	ldr	x0, [x19, #200]
    314c:	str	w1, [x19]
    3150:	add	x0, x0, #0x1
    3154:	str	x0, [x19, #200]
    3158:	b	295c <xz_dec_run+0x64>
    315c:	mov	x0, x19
    3160:	mov	x1, x26
    3164:	bl	27d0 <xz_dec_lzma2_end+0x328>
    3168:	ldr	w0, [x19, #152]
    316c:	cbz	w0, 2f20 <xz_dec_run+0x628>
    3170:	ldr	x0, [x26, #8]
    3174:	b	2ab4 <xz_dec_run+0x1bc>
    3178:	ldr	x2, [x26, #8]
    317c:	mov	x1, x26
    3180:	mov	x0, x19
    3184:	bl	27d0 <xz_dec_lzma2_end+0x328>
    3188:	ldp	x27, x28, [sp, #80]
    318c:	b	2f14 <xz_dec_run+0x61c>
    3190:	ldr	w0, [x19, #152]
    3194:	mov	w20, #0x4                   	// #4
    3198:	cbz	w0, 29c0 <xz_dec_run+0xc8>
    319c:	b	2ac4 <xz_dec_run+0x1cc>
    31a0:	mov	w20, #0x3                   	// #3
    31a4:	b	30dc <xz_dec_run+0x7e4>
    31a8:	add	x1, sp, #0x68
    31ac:	add	x2, x19, #0x12c
    31b0:	mov	x3, #0x6                   	// #6
    31b4:	bl	0 <grub_crypto_hash>
    31b8:	ldr	w2, [x19, #296]
    31bc:	add	x1, sp, #0x68
    31c0:	ldr	x3, [x19, #128]
    31c4:	rev	w2, w2
    31c8:	str	w2, [sp, #96]
    31cc:	add	x0, sp, #0x60
    31d0:	ldr	x2, [x3, #32]
    31d4:	bl	0 <grub_memcmp>
    31d8:	cbnz	w0, 2fc8 <xz_dec_run+0x6d0>
    31dc:	ldr	x2, [x19, #240]
    31e0:	ldr	w1, [x19, #300]
    31e4:	ldr	w0, [x19, #152]
    31e8:	cmp	x1, x2, lsr #2
    31ec:	b.ne	2fcc <xz_dec_run+0x6d4>  // b.any
    31f0:	ldrb	w1, [x19, #304]
    31f4:	cbnz	w1, 2fcc <xz_dec_run+0x6d4>
    31f8:	ldrb	w2, [x19, #305]
    31fc:	ldrb	w1, [x19, #136]
    3200:	cmp	w2, w1
    3204:	b.ne	2fcc <xz_dec_run+0x6d4>  // b.any
    3208:	cbnz	w0, 3248 <xz_dec_run+0x950>
    320c:	mov	w20, #0x1                   	// #1
    3210:	b	29c0 <xz_dec_run+0xc8>
    3214:	ldr	w20, [x19, #156]
    3218:	mov	w0, #0x6                   	// #6
    321c:	mov	w1, #0x1                   	// #1
    3220:	str	w1, [x19, #156]
    3224:	cmp	w20, #0x0
    3228:	csel	w20, w20, w0, eq  // eq = none
    322c:	b	29c4 <xz_dec_run+0xcc>
    3230:	mov	w20, #0x4                   	// #4
    3234:	b	30dc <xz_dec_run+0x7e4>
    3238:	ldr	w0, [x19, #152]
    323c:	cbz	w0, 29c0 <xz_dec_run+0xc8>
    3240:	cmp	w20, #0x1
    3244:	b.ne	2ac4 <xz_dec_run+0x1cc>  // b.any
    3248:	mov	w20, #0x1                   	// #1
    324c:	b	29c4 <xz_dec_run+0xcc>
    3250:	cbnz	w20, 2ac4 <xz_dec_run+0x1cc>
    3254:	ldr	x0, [x26, #8]
    3258:	b	2ab4 <xz_dec_run+0x1bc>
    325c:	add	x3, x19, #0x118
    3260:	add	x2, x19, #0x128
    3264:	add	x1, x19, #0x8
    3268:	add	x0, x19, #0x4
    326c:	bl	2750 <xz_dec_lzma2_end+0x2a8>
    3270:	cmp	w0, #0x1
    3274:	b.ne	30d8 <xz_dec_run+0x7e0>  // b.any
    3278:	ldr	x0, [x19, #8]
    327c:	str	x0, [x19, #160]
    3280:	ldrb	w0, [x19, #297]
    3284:	ldr	x4, [x19, #288]
    3288:	b	2d68 <xz_dec_run+0x470>
    328c:	add	x3, x19, #0x118
    3290:	add	x2, x19, #0x128
    3294:	add	x1, x19, #0x8
    3298:	add	x0, x19, #0x4
    329c:	bl	2750 <xz_dec_lzma2_end+0x2a8>
    32a0:	cmp	w0, #0x1
    32a4:	b.ne	30d8 <xz_dec_run+0x7e0>  // b.any
    32a8:	ldr	x0, [x19, #8]
    32ac:	str	x0, [x19, #168]
    32b0:	ldrb	w0, [x19, #297]
    32b4:	ldr	x4, [x19, #288]
    32b8:	b	2d74 <xz_dec_run+0x47c>
    32bc:	add	x20, x20, #0x8
    32c0:	add	x20, x20, w0, sxtw #4
    32c4:	ldp	x0, x1, [x20]
    32c8:	str	x1, [x19, #144]
    32cc:	bl	0 <grub_crypto_lookup_md_by_name>
    32d0:	str	x0, [x19, #120]
    32d4:	cbz	x0, 30c8 <xz_dec_run+0x7d0>
    32d8:	ldr	x2, [x0, #32]
    32dc:	ldr	x1, [x19, #144]
    32e0:	cmp	x2, x1
    32e4:	b.ne	3230 <xz_dec_run+0x938>  // b.any
    32e8:	ldr	x0, [x0, #72]
    32ec:	bl	0 <grub_malloc>
    32f0:	str	x0, [x19, #104]
    32f4:	cbz	x0, 336c <xz_dec_run+0xa74>
    32f8:	ldr	x0, [x19, #120]
    32fc:	ldr	x0, [x0, #72]
    3300:	bl	0 <grub_malloc>
    3304:	str	x0, [x19, #272]
    3308:	cbz	x0, 3364 <xz_dec_run+0xa6c>
    330c:	ldr	x0, [x19, #120]
    3310:	ldr	x0, [x0, #72]
    3314:	bl	0 <grub_malloc>
    3318:	str	x0, [x19, #224]
    331c:	cbz	x0, 335c <xz_dec_run+0xa64>
    3320:	ldr	x1, [x19, #120]
    3324:	ldr	x0, [x19, #104]
    3328:	ldr	x1, [x1, #40]
    332c:	blr	x1
    3330:	ldr	x1, [x19, #120]
    3334:	ldr	x0, [x19, #272]
    3338:	ldr	x1, [x1, #40]
    333c:	blr	x1
    3340:	ldr	x1, [x19, #120]
    3344:	ldr	x0, [x19, #224]
    3348:	ldr	x1, [x1, #40]
    334c:	blr	x1
    3350:	b	30c8 <xz_dec_run+0x7d0>
    3354:	mov	w20, #0x2                   	// #2
    3358:	b	30dc <xz_dec_run+0x7e4>
    335c:	ldr	x0, [x19, #272]
    3360:	bl	0 <grub_free>
    3364:	ldr	x0, [x19, #104]
    3368:	bl	0 <grub_free>
    336c:	ldr	x0, [x19, #112]
    3370:	mov	w20, #0x2                   	// #2
    3374:	bl	0 <grub_free>
    3378:	ldr	w0, [x19, #152]
    337c:	cbz	w0, 29c0 <xz_dec_run+0xc8>
    3380:	mov	w20, #0x2                   	// #2
    3384:	b	2ac4 <xz_dec_run+0x1cc>
    3388:	ldr	w0, [x19, #152]
    338c:	cbz	w0, 2f20 <xz_dec_run+0x628>
    3390:	ldr	x0, [x26, #8]
    3394:	b	2ab4 <xz_dec_run+0x1bc>
    3398:	ldr	w0, [x19, #152]
    339c:	mov	w20, #0x5                   	// #5
    33a0:	ldp	x27, x28, [sp, #80]
    33a4:	cbz	w0, 29c0 <xz_dec_run+0xc8>
    33a8:	b	2ac4 <xz_dec_run+0x1cc>
    33ac:	nop
	...

00000000000033c8 <xz_dec_init>:
    33c8:	stp	x29, x30, [sp, #-32]!
    33cc:	mov	x29, sp
    33d0:	stp	x19, x20, [sp, #16]
    33d4:	mov	w20, w0
    33d8:	mov	x0, #0x540                 	// #1344
    33dc:	bl	0 <grub_malloc>
    33e0:	mov	x19, x0
    33e4:	cbz	x0, 3424 <xz_dec_init+0x5c>
    33e8:	mov	x2, #0x540                 	// #1344
    33ec:	mov	w1, #0x0                   	// #0
    33f0:	bl	0 <grub_memset>
    33f4:	cmp	w20, #0x0
    33f8:	cset	w0, eq  // eq = none
    33fc:	str	w0, [x19, #152]
    3400:	bl	1050 <xz_dec_bcj_create>
    3404:	str	x0, [x19, #1328]
    3408:	cbz	x0, 343c <xz_dec_init+0x74>
    340c:	mov	w0, w20
    3410:	bl	2390 <xz_dec_lzma2_create>
    3414:	str	x0, [x19, #1320]
    3418:	cbz	x0, 3434 <xz_dec_init+0x6c>
    341c:	mov	x0, x19
    3420:	bl	2860 <xz_dec_reset>
    3424:	mov	x0, x19
    3428:	ldp	x19, x20, [sp, #16]
    342c:	ldp	x29, x30, [sp], #32
    3430:	ret
    3434:	ldr	x0, [x19, #1328]
    3438:	bl	0 <grub_free>
    343c:	mov	x0, x19
    3440:	mov	x19, #0x0                   	// #0
    3444:	bl	0 <grub_free>
    3448:	mov	x0, x19
    344c:	ldp	x19, x20, [sp, #16]
    3450:	ldp	x29, x30, [sp], #32
    3454:	ret

0000000000003458 <xz_dec_end>:
    3458:	cbz	x0, 34ac <xz_dec_end+0x54>
    345c:	stp	x29, x30, [sp, #-32]!
    3460:	mov	x29, sp
    3464:	str	x19, [sp, #16]
    3468:	mov	x19, x0
    346c:	ldr	x0, [x0, #1320]
    3470:	bl	24a8 <xz_dec_lzma2_end>
    3474:	ldr	x0, [x19, #272]
    3478:	bl	0 <grub_free>
    347c:	ldr	x0, [x19, #224]
    3480:	bl	0 <grub_free>
    3484:	ldr	x0, [x19, #104]
    3488:	bl	0 <grub_free>
    348c:	ldr	x0, [x19, #112]
    3490:	bl	0 <grub_free>
    3494:	ldr	x0, [x19, #1328]
    3498:	bl	0 <grub_free>
    349c:	mov	x0, x19
    34a0:	ldr	x19, [sp, #16]
    34a4:	ldp	x29, x30, [sp], #32
    34a8:	b	0 <grub_free>
    34ac:	ret
