
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//print_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b28 <_init>:
 b28:	stp	x29, x30, [sp, #-16]!
 b2c:	mov	x29, sp
 b30:	bl	cb0 <call_weak_fn>
 b34:	ldp	x29, x30, [sp], #16
 b38:	ret

Disassembly of section .plt:

0000000000000b40 <.plt>:
 b40:	stp	x16, x30, [sp, #-16]!
 b44:	adrp	x16, 11000 <__FRAME_END__+0xfda4>
 b48:	ldr	x17, [x16, #4088]
 b4c:	add	x16, x16, #0xff8
 b50:	br	x17
 b54:	nop
 b58:	nop
 b5c:	nop

0000000000000b60 <all_digits@plt>:
 b60:	adrp	x16, 12000 <all_digits>
 b64:	ldr	x17, [x16]
 b68:	add	x16, x16, #0x0
 b6c:	br	x17

0000000000000b70 <strlen@plt>:
 b70:	adrp	x16, 12000 <all_digits>
 b74:	ldr	x17, [x16, #8]
 b78:	add	x16, x16, #0x8
 b7c:	br	x17

0000000000000b80 <fputs@plt>:
 b80:	adrp	x16, 12000 <all_digits>
 b84:	ldr	x17, [x16, #16]
 b88:	add	x16, x16, #0x10
 b8c:	br	x17

0000000000000b90 <dup@plt>:
 b90:	adrp	x16, 12000 <all_digits>
 b94:	ldr	x17, [x16, #24]
 b98:	add	x16, x16, #0x18
 b9c:	br	x17

0000000000000ba0 <__cxa_finalize@plt>:
 ba0:	adrp	x16, 12000 <all_digits>
 ba4:	ldr	x17, [x16, #32]
 ba8:	add	x16, x16, #0x20
 bac:	br	x17

0000000000000bb0 <fputc@plt>:
 bb0:	adrp	x16, 12000 <all_digits>
 bb4:	ldr	x17, [x16, #40]
 bb8:	add	x16, x16, #0x28
 bbc:	br	x17

0000000000000bc0 <make_word@plt>:
 bc0:	adrp	x16, 12000 <all_digits>
 bc4:	ldr	x17, [x16, #48]
 bc8:	add	x16, x16, #0x30
 bcc:	br	x17

0000000000000bd0 <fclose@plt>:
 bd0:	adrp	x16, 12000 <all_digits>
 bd4:	ldr	x17, [x16, #56]
 bd8:	add	x16, x16, #0x38
 bdc:	br	x17

0000000000000be0 <builtin_help@plt>:
 be0:	adrp	x16, 12000 <all_digits>
 be4:	ldr	x17, [x16, #64]
 be8:	add	x16, x16, #0x40
 bec:	br	x17

0000000000000bf0 <fdopen@plt>:
 bf0:	adrp	x16, 12000 <all_digits>
 bf4:	ldr	x17, [x16, #72]
 bf8:	add	x16, x16, #0x48
 bfc:	br	x17

0000000000000c00 <builtin_usage@plt>:
 c00:	adrp	x16, 12000 <all_digits>
 c04:	ldr	x17, [x16, #80]
 c08:	add	x16, x16, #0x50
 c0c:	br	x17

0000000000000c10 <__gmon_start__@plt>:
 c10:	adrp	x16, 12000 <all_digits>
 c14:	ldr	x17, [x16, #88]
 c18:	add	x16, x16, #0x58
 c1c:	br	x17

0000000000000c20 <ansicstr@plt>:
 c20:	adrp	x16, 12000 <all_digits>
 c24:	ldr	x17, [x16, #96]
 c28:	add	x16, x16, #0x60
 c2c:	br	x17

0000000000000c30 <dispose_words@plt>:
 c30:	adrp	x16, 12000 <all_digits>
 c34:	ldr	x17, [x16, #104]
 c38:	add	x16, x16, #0x68
 c3c:	br	x17

0000000000000c40 <free@plt>:
 c40:	adrp	x16, 12000 <all_digits>
 c44:	ldr	x17, [x16, #112]
 c48:	add	x16, x16, #0x70
 c4c:	br	x17

0000000000000c50 <internal_getopt@plt>:
 c50:	adrp	x16, 12000 <all_digits>
 c54:	ldr	x17, [x16, #120]
 c58:	add	x16, x16, #0x78
 c5c:	br	x17

0000000000000c60 <reset_internal_getopt@plt>:
 c60:	adrp	x16, 12000 <all_digits>
 c64:	ldr	x17, [x16, #128]
 c68:	add	x16, x16, #0x80
 c6c:	br	x17

0000000000000c70 <fflush@plt>:
 c70:	adrp	x16, 12000 <all_digits>
 c74:	ldr	x17, [x16, #136]
 c78:	add	x16, x16, #0x88
 c7c:	br	x17

0000000000000c80 <legal_number@plt>:
 c80:	adrp	x16, 12000 <all_digits>
 c84:	ldr	x17, [x16, #144]
 c88:	add	x16, x16, #0x90
 c8c:	br	x17

0000000000000c90 <printf_builtin@plt>:
 c90:	adrp	x16, 12000 <all_digits>
 c94:	ldr	x17, [x16, #152]
 c98:	add	x16, x16, #0x98
 c9c:	br	x17

0000000000000ca0 <make_word_list@plt>:
 ca0:	adrp	x16, 12000 <all_digits>
 ca4:	ldr	x17, [x16, #160]
 ca8:	add	x16, x16, #0xa0
 cac:	br	x17

Disassembly of section .text:

0000000000000cb0 <call_weak_fn>:
     cb0:	adrp	x0, 11000 <__FRAME_END__+0xfda4>
     cb4:	ldr	x0, [x0, #4040]
     cb8:	cbz	x0, cc0 <call_weak_fn+0x10>
     cbc:	b	c10 <__gmon_start__@plt>
     cc0:	ret
     cc4:	nop

0000000000000cc8 <deregister_tm_clones>:
     cc8:	adrp	x0, 12000 <all_digits>
     ccc:	add	x0, x0, #0x110
     cd0:	adrp	x1, 12000 <all_digits>
     cd4:	add	x1, x1, #0x110
     cd8:	cmp	x1, x0
     cdc:	b.eq	cf4 <deregister_tm_clones+0x2c>  // b.none
     ce0:	adrp	x1, 11000 <__FRAME_END__+0xfda4>
     ce4:	ldr	x1, [x1, #4008]
     ce8:	cbz	x1, cf4 <deregister_tm_clones+0x2c>
     cec:	mov	x16, x1
     cf0:	br	x16
     cf4:	ret

0000000000000cf8 <register_tm_clones>:
     cf8:	adrp	x0, 12000 <all_digits>
     cfc:	add	x0, x0, #0x110
     d00:	adrp	x1, 12000 <all_digits>
     d04:	add	x1, x1, #0x110
     d08:	sub	x1, x1, x0
     d0c:	lsr	x2, x1, #63
     d10:	add	x1, x2, x1, asr #3
     d14:	cmp	xzr, x1, asr #1
     d18:	asr	x1, x1, #1
     d1c:	b.eq	d34 <register_tm_clones+0x3c>  // b.none
     d20:	adrp	x2, 11000 <__FRAME_END__+0xfda4>
     d24:	ldr	x2, [x2, #4064]
     d28:	cbz	x2, d34 <register_tm_clones+0x3c>
     d2c:	mov	x16, x2
     d30:	br	x16
     d34:	ret

0000000000000d38 <__do_global_dtors_aux>:
     d38:	stp	x29, x30, [sp, #-32]!
     d3c:	mov	x29, sp
     d40:	str	x19, [sp, #16]
     d44:	adrp	x19, 12000 <all_digits>
     d48:	ldrb	w0, [x19, #272]
     d4c:	cbnz	w0, d74 <__do_global_dtors_aux+0x3c>
     d50:	adrp	x0, 11000 <__FRAME_END__+0xfda4>
     d54:	ldr	x0, [x0, #4016]
     d58:	cbz	x0, d68 <__do_global_dtors_aux+0x30>
     d5c:	adrp	x0, 12000 <all_digits>
     d60:	ldr	x0, [x0, #168]
     d64:	bl	ba0 <__cxa_finalize@plt>
     d68:	bl	cc8 <deregister_tm_clones>
     d6c:	mov	w0, #0x1                   	// #1
     d70:	strb	w0, [x19, #272]
     d74:	ldr	x19, [sp, #16]
     d78:	ldp	x29, x30, [sp], #32
     d7c:	ret

0000000000000d80 <frame_dummy>:
     d80:	b	cf8 <register_tm_clones>

0000000000000d84 <print_builtin>:
     d84:	sub	sp, sp, #0x60
     d88:	stp	x29, x30, [sp, #16]
     d8c:	stp	x26, x25, [sp, #32]
     d90:	stp	x24, x23, [sp, #48]
     d94:	stp	x22, x21, [sp, #64]
     d98:	stp	x20, x19, [sp, #80]
     d9c:	add	x29, sp, #0x10
     da0:	mov	x22, x0
     da4:	bl	c60 <reset_internal_getopt@plt>
     da8:	adrp	x26, 11000 <__FRAME_END__+0xfda4>
     dac:	ldr	x26, [x26, #4048]
     db0:	adrp	x21, 1000 <print_builtin+0x27c>
     db4:	adrp	x25, 1000 <print_builtin+0x27c>
     db8:	mov	w24, wzr
     dbc:	mov	w23, wzr
     dc0:	mov	x20, xzr
     dc4:	mov	w19, #0x1                   	// #1
     dc8:	add	x21, x21, #0xfb
     dcc:	add	x25, x25, #0xa0
     dd0:	mov	x0, x22
     dd4:	mov	x1, x21
     dd8:	bl	c50 <internal_getopt@plt>
     ddc:	sub	w8, w0, #0x52
     de0:	cmp	w8, #0x23
     de4:	b.hi	e40 <print_builtin+0xbc>  // b.pmore
     de8:	adr	x9, dd0 <print_builtin+0x4c>
     dec:	ldrb	w10, [x25, x8]
     df0:	add	x9, x9, x10, lsl #2
     df4:	br	x9
     df8:	ldr	x20, [x26]
     dfc:	b	dd0 <print_builtin+0x4c>
     e00:	mov	w23, #0x1                   	// #1
     e04:	b	dd0 <print_builtin+0x4c>
     e08:	mov	w24, #0x1                   	// #1
     e0c:	b	dd0 <print_builtin+0x4c>
     e10:	ldr	x0, [x26]
     e14:	bl	b60 <all_digits@plt>
     e18:	cbz	w0, 1038 <print_builtin+0x2b4>
     e1c:	ldr	x0, [x26]
     e20:	mov	x1, sp
     e24:	bl	c80 <legal_number@plt>
     e28:	cbz	w0, 1038 <print_builtin+0x2b4>
     e2c:	ldr	x8, [sp]
     e30:	cmp	x8, w8, sxtw
     e34:	b.ne	1038 <print_builtin+0x2b4>  // b.any
     e38:	mov	w19, w8
     e3c:	b	dd0 <print_builtin+0x4c>
     e40:	cmn	w0, #0x63
     e44:	b.eq	f20 <print_builtin+0x19c>  // b.none
     e48:	cmn	w0, #0x1
     e4c:	b.ne	e80 <print_builtin+0xfc>  // b.any
     e50:	adrp	x8, 11000 <__FRAME_END__+0xfda4>
     e54:	ldr	x8, [x8, #4056]
     e58:	ldr	x21, [x8]
     e5c:	cmp	w19, #0x1
     e60:	b.eq	edc <print_builtin+0x158>  // b.none
     e64:	mov	w0, w19
     e68:	bl	b90 <dup@plt>
     e6c:	adrp	x1, 1000 <print_builtin+0x27c>
     e70:	add	x1, x1, #0x105
     e74:	bl	bf0 <fdopen@plt>
     e78:	mov	x22, x0
     e7c:	b	ee8 <print_builtin+0x164>
     e80:	bl	c00 <builtin_usage@plt>
     e84:	mov	w19, #0x102                 	// #258
     e88:	b	1018 <print_builtin+0x294>
     e8c:	adrp	x8, 11000 <__FRAME_END__+0xfda4>
     e90:	ldr	x8, [x8, #4024]
     e94:	ldr	x21, [x8]
     e98:	adrp	x8, 11000 <__FRAME_END__+0xfda4>
     e9c:	ldr	x8, [x8, #4056]
     ea0:	str	x21, [x8]
     ea4:	cbz	x21, ed0 <print_builtin+0x14c>
     ea8:	ldr	x9, [x21, #8]
     eac:	ldr	x9, [x9]
     eb0:	ldrb	w10, [x9]
     eb4:	cmp	w10, #0x2d
     eb8:	b.ne	ed0 <print_builtin+0x14c>  // b.any
     ebc:	ldrb	w10, [x9, #1]
     ec0:	cmp	w10, #0x6e
     ec4:	b.ne	ed0 <print_builtin+0x14c>  // b.any
     ec8:	ldrb	w9, [x9, #2]
     ecc:	cbz	w9, 1074 <print_builtin+0x2f0>
     ed0:	mov	w24, #0x2                   	// #2
     ed4:	cmp	w19, #0x1
     ed8:	b.ne	e64 <print_builtin+0xe0>  // b.any
     edc:	adrp	x8, 11000 <__FRAME_END__+0xfda4>
     ee0:	ldr	x8, [x8, #4032]
     ee4:	ldr	x22, [x8]
     ee8:	adrp	x25, 12000 <all_digits>
     eec:	str	x22, [x25, #280]
     ef0:	cbz	x20, f2c <print_builtin+0x1a8>
     ef4:	mov	x0, x20
     ef8:	bl	bc0 <make_word@plt>
     efc:	mov	x1, x21
     f00:	bl	ca0 <make_word_list@plt>
     f04:	mov	x20, x0
     f08:	bl	c90 <printf_builtin@plt>
     f0c:	mov	w19, w0
     f10:	mov	x0, x20
     f14:	str	xzr, [x20]
     f18:	bl	c30 <dispose_words@plt>
     f1c:	b	1018 <print_builtin+0x294>
     f20:	bl	be0 <builtin_help@plt>
     f24:	mov	w19, #0x102                 	// #258
     f28:	b	1018 <print_builtin+0x294>
     f2c:	cbz	w24, f8c <print_builtin+0x208>
     f30:	cbz	x21, f70 <print_builtin+0x1ec>
     f34:	ldr	x8, [x21, #8]
     f38:	mov	x1, x22
     f3c:	ldr	x0, [x8]
     f40:	bl	b80 <fputs@plt>
     f44:	ldr	x8, [x21]
     f48:	cbz	x8, f70 <print_builtin+0x1ec>
     f4c:	ldr	x1, [x25, #280]
     f50:	mov	w0, #0x20                  	// #32
     f54:	bl	bb0 <fputc@plt>
     f58:	ldr	x21, [x21]
     f5c:	cbz	x21, f70 <print_builtin+0x1ec>
     f60:	ldr	x8, [x21, #8]
     f64:	ldr	x1, [x25, #280]
     f68:	ldr	x0, [x8]
     f6c:	b	f40 <print_builtin+0x1bc>
     f70:	cbnz	w23, f80 <print_builtin+0x1fc>
     f74:	ldr	x1, [x25, #280]
     f78:	mov	w0, #0xa                   	// #10
     f7c:	bl	bb0 <fputc@plt>
     f80:	ldr	x0, [x25, #280]
     f84:	bl	c70 <fflush@plt>
     f88:	b	1014 <print_builtin+0x290>
     f8c:	stur	wzr, [x29, #-4]
     f90:	cbz	x21, ff4 <print_builtin+0x270>
     f94:	ldr	x8, [x21, #8]
     f98:	ldr	x20, [x8]
     f9c:	mov	x0, x20
     fa0:	bl	b70 <strlen@plt>
     fa4:	mov	x1, x0
     fa8:	sub	x3, x29, #0x4
     fac:	mov	x0, x20
     fb0:	mov	w2, wzr
     fb4:	mov	x4, xzr
     fb8:	bl	c20 <ansicstr@plt>
     fbc:	mov	x1, x22
     fc0:	mov	x20, x0
     fc4:	bl	b80 <fputs@plt>
     fc8:	mov	x0, x20
     fcc:	bl	c40 <free@plt>
     fd0:	ldur	w8, [x29, #-4]
     fd4:	cbnz	w8, 1004 <print_builtin+0x280>
     fd8:	ldr	x8, [x21]
     fdc:	cbz	x8, ff4 <print_builtin+0x270>
     fe0:	mov	w0, #0x20                  	// #32
     fe4:	mov	x1, x22
     fe8:	bl	bb0 <fputc@plt>
     fec:	ldr	x21, [x21]
     ff0:	cbnz	x21, f94 <print_builtin+0x210>
     ff4:	cbnz	w23, 1004 <print_builtin+0x280>
     ff8:	ldr	x1, [x25, #280]
     ffc:	mov	w0, #0xa                   	// #10
    1000:	bl	bb0 <fputc@plt>
    1004:	cmp	w19, #0x1
    1008:	b.eq	1014 <print_builtin+0x290>  // b.none
    100c:	ldr	x0, [x25, #280]
    1010:	bl	bd0 <fclose@plt>
    1014:	mov	w19, wzr
    1018:	mov	w0, w19
    101c:	ldp	x20, x19, [sp, #80]
    1020:	ldp	x22, x21, [sp, #64]
    1024:	ldp	x24, x23, [sp, #48]
    1028:	ldp	x26, x25, [sp, #32]
    102c:	ldp	x29, x30, [sp, #16]
    1030:	add	sp, sp, #0x60
    1034:	ret
    1038:	adrp	x8, 11000 <__FRAME_END__+0xfda4>
    103c:	ldr	x8, [x8, #4024]
    1040:	ldr	x9, [x8]
    1044:	mov	x21, x22
    1048:	ldr	x22, [x22]
    104c:	cbz	x22, 1058 <print_builtin+0x2d4>
    1050:	cmp	x22, x9
    1054:	b.ne	1044 <print_builtin+0x2c0>  // b.any
    1058:	adrp	x9, 11000 <__FRAME_END__+0xfda4>
    105c:	ldr	x9, [x9, #4056]
    1060:	str	x21, [x8]
    1064:	str	x21, [x9]
    1068:	cmp	w19, #0x1
    106c:	b.ne	e64 <print_builtin+0xe0>  // b.any
    1070:	b	edc <print_builtin+0x158>
    1074:	ldr	x21, [x21]
    1078:	mov	w23, #0x1                   	// #1
    107c:	mov	w24, #0x2                   	// #2
    1080:	str	x21, [x8]
    1084:	cmp	w19, #0x1
    1088:	b.eq	edc <print_builtin+0x158>  // b.none
    108c:	b	e64 <print_builtin+0xe0>

Disassembly of section .fini:

0000000000001090 <_fini>:
    1090:	stp	x29, x30, [sp, #-16]!
    1094:	mov	x29, sp
    1098:	ldp	x29, x30, [sp], #16
    109c:	ret
