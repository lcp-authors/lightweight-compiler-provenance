
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mmap.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_efi_mmap_iterate>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	add	x4, sp, #0x64
   c:	add	x3, sp, #0x78
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	add	x0, sp, #0x68
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x21, x1
  24:	mov	x1, #0x0                   	// #0
  28:	stp	x23, x24, [sp, #48]
  2c:	mov	w23, w2
  30:	add	x2, sp, #0x70
  34:	stp	x25, x26, [sp, #64]
  38:	str	x27, [sp, #80]
  3c:	str	wzr, [sp, #100]
  40:	stp	xzr, xzr, [sp, #104]
  44:	str	xzr, [sp, #120]
  48:	bl	0 <grub_efi_get_memory_map>
  4c:	tbz	w0, #31, 78 <grub_efi_mmap_iterate+0x78>
  50:	adrp	x0, 0 <grub_efi_mmap_iterate>
  54:	ldr	x0, [x0]
  58:	ldr	w0, [x0]
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldp	x23, x24, [sp, #48]
  68:	ldp	x25, x26, [sp, #64]
  6c:	ldr	x27, [sp, #80]
  70:	ldp	x29, x30, [sp], #128
  74:	ret
  78:	ldr	x0, [sp, #104]
  7c:	bl	0 <grub_malloc>
  80:	mov	x22, x0
  84:	cbz	x0, 50 <grub_efi_mmap_iterate+0x50>
  88:	mov	x1, x0
  8c:	add	x4, sp, #0x64
  90:	add	x3, sp, #0x78
  94:	add	x2, sp, #0x70
  98:	add	x0, sp, #0x68
  9c:	bl	0 <grub_efi_get_memory_map>
  a0:	cmp	w0, #0x0
  a4:	b.gt	1a0 <grub_efi_mmap_iterate+0x1a0>
  a8:	mov	x0, x22
  ac:	bl	0 <grub_free>
  b0:	b	50 <grub_efi_mmap_iterate+0x50>
  b4:	ldr	x3, [x24]
  b8:	mov	w1, #0x3f                  	// #63
  bc:	ldr	x2, [x25]
  c0:	ldr	x0, [x26]
  c4:	ldr	w6, [x19]
  c8:	ldr	x4, [x19, #8]
  cc:	ldr	x5, [x19, #24]
  d0:	add	x5, x4, x5, lsl #12
  d4:	bl	0 <grub_real_dprintf>
  d8:	ldr	w1, [x19]
  dc:	cmp	w1, #0xe
  e0:	b.hi	184 <grub_efi_mmap_iterate+0x184>  // b.pmore
  e4:	adrp	x0, 0 <grub_efi_mmap_iterate>
  e8:	ldr	x4, [x19, #24]
  ec:	ldr	x0, [x0]
  f0:	ldrb	w0, [x0, w1, uxtw]
  f4:	adr	x1, 100 <grub_efi_mmap_iterate+0x100>
  f8:	add	x0, x1, w0, sxtb #2
  fc:	br	x0
 100:	cbnz	w23, 110 <grub_efi_mmap_iterate+0x110>
 104:	mov	x3, x21
 108:	mov	w2, #0x1                   	// #1
 10c:	b	118 <grub_efi_mmap_iterate+0x118>
 110:	mov	x3, x21
 114:	mov	w2, #0x14                  	// #20
 118:	lsl	x1, x4, #12
 11c:	ldr	x0, [x19, #8]
 120:	blr	x20
 124:	ldr	x0, [sp, #120]
 128:	add	x19, x19, x0
 12c:	ldr	x0, [sp, #104]
 130:	add	x0, x22, x0
 134:	cmp	x19, x0
 138:	b.cc	b4 <grub_efi_mmap_iterate+0xb4>  // b.lo, b.ul, b.last
 13c:	mov	w0, #0x0                   	// #0
 140:	b	5c <grub_efi_mmap_iterate+0x5c>
 144:	mov	x3, x21
 148:	mov	w2, #0x5                   	// #5
 14c:	b	118 <grub_efi_mmap_iterate+0x118>
 150:	cbz	w23, 104 <grub_efi_mmap_iterate+0x104>
 154:	mov	x3, x21
 158:	mov	w2, #0x2                   	// #2
 15c:	b	118 <grub_efi_mmap_iterate+0x118>
 160:	mov	x3, x21
 164:	mov	w2, #0x3                   	// #3
 168:	b	118 <grub_efi_mmap_iterate+0x118>
 16c:	mov	x3, x21
 170:	mov	w2, #0x4                   	// #4
 174:	b	118 <grub_efi_mmap_iterate+0x118>
 178:	mov	x3, x21
 17c:	mov	w2, #0x7                   	// #7
 180:	b	118 <grub_efi_mmap_iterate+0x118>
 184:	ldr	x0, [x27]
 188:	bl	0 <grub_printf>
 18c:	ldr	x1, [x19, #24]
 190:	mov	x3, x21
 194:	mov	w2, #0x2                   	// #2
 198:	lsl	x1, x1, #12
 19c:	b	11c <grub_efi_mmap_iterate+0x11c>
 1a0:	mov	x19, x22
 1a4:	adrp	x24, 0 <grub_efi_mmap_iterate>
 1a8:	adrp	x25, 0 <grub_efi_mmap_iterate>
 1ac:	adrp	x26, 0 <grub_efi_mmap_iterate>
 1b0:	adrp	x27, 0 <grub_efi_mmap_iterate>
 1b4:	b	12c <grub_efi_mmap_iterate+0x12c>
	...

00000000000001e8 <grub_machine_mmap_iterate>:
 1e8:	mov	w2, #0x0                   	// #0
 1ec:	b	0 <grub_efi_mmap_iterate>

00000000000001f0 <grub_mmap_register>:
 1f0:	stp	x29, x30, [sp, #-80]!
 1f4:	mov	x29, sp
 1f8:	stp	x19, x20, [sp, #16]
 1fc:	mov	x19, x0
 200:	mov	x0, #0x20                  	// #32
 204:	stp	x21, x22, [sp, #32]
 208:	mov	w21, w2
 20c:	add	x22, x1, #0xfff
 210:	str	x23, [sp, #48]
 214:	bl	0 <grub_malloc>
 218:	cbz	x0, 26c <grub_mmap_register+0x7c>
 21c:	mov	x20, x0
 220:	adrp	x0, 0 <grub_efi_mmap_iterate>
 224:	ldr	x0, [x0]
 228:	ldr	x0, [x0]
 22c:	ldr	x23, [x0, #96]
 230:	and	x0, x19, #0xfffffffffffff000
 234:	sub	x19, x19, x0
 238:	str	x0, [sp, #72]
 23c:	add	x19, x19, x22
 240:	ldr	x2, [x23, #48]
 244:	lsr	x19, x19, #12
 248:	mov	x1, x19
 24c:	blr	x2
 250:	cmp	x0, #0x0
 254:	mov	x1, #0xe                   	// #14
 258:	movk	x1, #0x8000, lsl #48
 25c:	ccmp	x0, x1, #0x4, ne  // ne = any
 260:	b.eq	274 <grub_mmap_register+0x84>  // b.none
 264:	mov	x0, x20
 268:	bl	0 <grub_free>
 26c:	mov	w0, #0x0                   	// #0
 270:	b	2dc <grub_mmap_register+0xec>
 274:	add	w2, w21, #0x2
 278:	cmp	w2, #0x16
 27c:	ldr	x4, [x23, #40]
 280:	b.hi	2f0 <grub_mmap_register+0x100>  // b.pmore
 284:	adrp	x0, 0 <grub_efi_mmap_iterate>
 288:	ldr	x0, [x0]
 28c:	ldrb	w1, [x0, w2, uxtw]
 290:	add	x3, sp, #0x48
 294:	mov	x2, x19
 298:	mov	w0, #0x2                   	// #2
 29c:	blr	x4
 2a0:	cbnz	x0, 264 <grub_mmap_register+0x74>
 2a4:	adrp	x0, 0 <grub_efi_mmap_iterate>
 2a8:	str	x19, [x20, #16]
 2ac:	ldr	x1, [x0]
 2b0:	ldr	x0, [x1]
 2b4:	str	x0, [x20]
 2b8:	adrp	x0, 0 <grub_efi_mmap_iterate>
 2bc:	str	x20, [x1]
 2c0:	ldr	x2, [x0]
 2c4:	ldr	w0, [x2]
 2c8:	str	w0, [x20, #24]
 2cc:	add	w3, w0, #0x1
 2d0:	str	w3, [x2]
 2d4:	ldr	x2, [sp, #72]
 2d8:	str	x2, [x20, #8]
 2dc:	ldp	x19, x20, [sp, #16]
 2e0:	ldp	x21, x22, [sp, #32]
 2e4:	ldr	x23, [sp, #48]
 2e8:	ldp	x29, x30, [sp], #80
 2ec:	ret
 2f0:	mov	w1, #0x8                   	// #8
 2f4:	b	290 <grub_mmap_register+0xa0>
	...

0000000000000318 <grub_mmap_unregister>:
 318:	stp	x29, x30, [sp, #-48]!
 31c:	mov	w2, w0
 320:	adrp	x0, 0 <grub_efi_mmap_iterate>
 324:	mov	x29, sp
 328:	str	x21, [sp, #32]
 32c:	ldr	x21, [x0]
 330:	stp	x19, x20, [sp, #16]
 334:	mov	x20, #0x0                   	// #0
 338:	ldr	x19, [x21]
 33c:	cbnz	x19, 35c <grub_mmap_unregister+0x44>
 340:	adrp	x0, 0 <grub_efi_mmap_iterate>
 344:	ldp	x19, x20, [sp, #16]
 348:	ldr	x21, [sp, #32]
 34c:	ldp	x29, x30, [sp], #48
 350:	ldr	x1, [x0]
 354:	mov	w0, #0x26                  	// #38
 358:	b	0 <grub_error>
 35c:	ldr	w0, [x19, #24]
 360:	cmp	w0, w2
 364:	b.ne	3b4 <grub_mmap_unregister+0x9c>  // b.any
 368:	adrp	x0, 0 <grub_efi_mmap_iterate>
 36c:	ldr	x0, [x0]
 370:	ldr	x0, [x0]
 374:	ldr	x0, [x0, #96]
 378:	ldr	x2, [x0, #48]
 37c:	ldp	x0, x1, [x19, #8]
 380:	blr	x2
 384:	ldr	x0, [x19]
 388:	cbz	x20, 3ac <grub_mmap_unregister+0x94>
 38c:	str	x0, [x20]
 390:	mov	x0, x19
 394:	bl	0 <grub_free>
 398:	mov	w0, #0x0                   	// #0
 39c:	ldp	x19, x20, [sp, #16]
 3a0:	ldr	x21, [sp, #32]
 3a4:	ldp	x29, x30, [sp], #48
 3a8:	ret
 3ac:	str	x0, [x21]
 3b0:	b	390 <grub_mmap_unregister+0x78>
 3b4:	mov	x20, x19
 3b8:	ldr	x19, [x19]
 3bc:	b	33c <grub_mmap_unregister+0x24>
	...

00000000000003d8 <grub_mmap_malign_and_register>:
 3d8:	stp	x29, x30, [sp, #-80]!
 3dc:	mov	x0, #0x20                  	// #32
 3e0:	mov	x29, sp
 3e4:	stp	x19, x20, [sp, #16]
 3e8:	mov	x19, x1
 3ec:	stp	x21, x22, [sp, #32]
 3f0:	mov	x22, x2
 3f4:	mov	w21, w3
 3f8:	str	x23, [sp, #48]
 3fc:	bl	0 <grub_malloc>
 400:	cbnz	x0, 41c <grub_mmap_malign_and_register+0x44>
 404:	mov	x0, #0x0                   	// #0
 408:	ldp	x19, x20, [sp, #16]
 40c:	ldp	x21, x22, [sp, #32]
 410:	ldr	x23, [sp, #48]
 414:	ldp	x29, x30, [sp], #80
 418:	ret
 41c:	mov	x20, x0
 420:	adrp	x0, 0 <grub_efi_mmap_iterate>
 424:	add	x19, x19, #0xfff
 428:	add	w3, w21, #0x2
 42c:	ldr	x0, [x0]
 430:	lsr	x19, x19, #12
 434:	cmp	w3, #0x16
 438:	ldr	x0, [x0]
 43c:	ldr	x23, [x0, #96]
 440:	mov	x0, #0xffffffff            	// #4294967295
 444:	str	x0, [sp, #72]
 448:	ldr	x4, [x23, #40]
 44c:	b.hi	480 <grub_mmap_malign_and_register+0xa8>  // b.pmore
 450:	adrp	x0, 0 <grub_efi_mmap_iterate>
 454:	ldr	x0, [x0]
 458:	ldrb	w21, [x0, w3, uxtw]
 45c:	add	x3, sp, #0x48
 460:	mov	x2, x19
 464:	mov	w1, w21
 468:	mov	w0, #0x0                   	// #0
 46c:	blr	x4
 470:	cbz	x0, 488 <grub_mmap_malign_and_register+0xb0>
 474:	mov	x0, x20
 478:	bl	0 <grub_free>
 47c:	b	404 <grub_mmap_malign_and_register+0x2c>
 480:	mov	w21, #0x8                   	// #8
 484:	b	45c <grub_mmap_malign_and_register+0x84>
 488:	ldr	x0, [sp, #72]
 48c:	cbz	x0, 4d0 <grub_mmap_malign_and_register+0xf8>
 490:	adrp	x0, 0 <grub_efi_mmap_iterate>
 494:	str	x19, [x20, #16]
 498:	ldr	x2, [x0]
 49c:	ldr	x0, [x2]
 4a0:	str	x0, [x20]
 4a4:	adrp	x0, 0 <grub_efi_mmap_iterate>
 4a8:	str	x20, [x2]
 4ac:	ldr	x0, [x0]
 4b0:	ldr	w1, [x0]
 4b4:	str	w1, [x20, #24]
 4b8:	add	w3, w1, #0x1
 4bc:	str	w3, [x0]
 4c0:	ldr	x0, [sp, #72]
 4c4:	str	x0, [x20, #8]
 4c8:	str	w1, [x22]
 4cc:	b	408 <grub_mmap_malign_and_register+0x30>
 4d0:	ldr	x4, [x23, #40]
 4d4:	mov	x0, #0xffffffff            	// #4294967295
 4d8:	add	x3, sp, #0x48
 4dc:	mov	x2, x19
 4e0:	str	x0, [sp, #72]
 4e4:	mov	w1, w21
 4e8:	mov	w0, #0x0                   	// #0
 4ec:	blr	x4
 4f0:	mov	x21, x0
 4f4:	mov	x1, x19
 4f8:	mov	x0, #0x0                   	// #0
 4fc:	bl	0 <grub_efi_free_pages>
 500:	cbz	x21, 490 <grub_mmap_malign_and_register+0xb8>
 504:	b	404 <grub_mmap_malign_and_register+0x2c>
	...

0000000000000528 <grub_mmap_free_and_unregister>:
 528:	b	318 <grub_mmap_unregister>
 52c:	nop

0000000000000530 <count_hook>:
 530:	ldr	w0, [x3]
 534:	add	w0, w0, #0x1
 538:	str	w0, [x3]
 53c:	mov	w0, #0x0                   	// #0
 540:	ret

0000000000000544 <fill_mask>:
 544:	ldr	x3, [x0, #8]
 548:	mov	w2, #0x0                   	// #0
 54c:	ldr	x0, [x0]
 550:	and	x0, x3, x0
 554:	lsr	x4, x3, x2
 558:	tbnz	w4, #0, 56c <fill_mask+0x28>
 55c:	add	w2, w2, #0x1
 560:	cmp	w2, #0x40
 564:	b.ne	554 <fill_mask+0x10>  // b.any
 568:	ret
 56c:	mov	w4, #0x0                   	// #0
 570:	mov	x5, #0x1                   	// #1
 574:	lsr	x6, x3, x2
 578:	tbnz	w6, #0, 590 <fill_mask+0x4c>
 57c:	lsr	x6, x1, x4
 580:	tbz	w6, #0, 58c <fill_mask+0x48>
 584:	lsl	x6, x5, x2
 588:	orr	x0, x0, x6
 58c:	add	w4, w4, #0x1
 590:	add	w2, w2, #0x1
 594:	cmp	w2, #0x40
 598:	b.ne	574 <fill_mask+0x30>  // b.any
 59c:	b	568 <fill_mask+0x24>

00000000000005a0 <fill_hook>:
 5a0:	stp	x29, x30, [sp, #-48]!
 5a4:	mov	w4, w2
 5a8:	cmn	w2, #0x2
 5ac:	mov	x29, sp
 5b0:	stp	x19, x20, [sp, #16]
 5b4:	mov	x19, x0
 5b8:	mov	x20, x3
 5bc:	str	x21, [sp, #32]
 5c0:	mov	x21, x1
 5c4:	b.ne	5ec <fill_hook+0x4c>  // b.any
 5c8:	adrp	x0, 0 <grub_efi_mmap_iterate>
 5cc:	mov	w1, #0x51                  	// #81
 5d0:	ldr	x3, [x0]
 5d4:	adrp	x0, 0 <grub_efi_mmap_iterate>
 5d8:	ldr	x2, [x0]
 5dc:	adrp	x0, 0 <grub_efi_mmap_iterate>
 5e0:	ldr	x0, [x0]
 5e4:	bl	0 <grub_real_dprintf>
 5e8:	mov	w4, #0x2                   	// #2
 5ec:	ldr	w2, [x20, #8]
 5f0:	mov	w5, #0x18                  	// #24
 5f4:	ldr	x3, [x20]
 5f8:	smull	x5, w2, w5
 5fc:	add	w2, w2, #0x2
 600:	add	x0, x3, x5
 604:	str	x19, [x3, x5]
 608:	add	x5, x5, #0x18
 60c:	add	x6, x3, x5
 610:	add	x19, x19, x21
 614:	ldr	x21, [sp, #32]
 618:	stp	wzr, w4, [x0, #8]
 61c:	str	wzr, [x0, #16]
 620:	mov	w0, #0x1                   	// #1
 624:	str	x19, [x3, x5]
 628:	stp	w0, w4, [x6, #8]
 62c:	mov	w0, #0x0                   	// #0
 630:	str	wzr, [x6, #16]
 634:	str	w2, [x20, #8]
 638:	ldp	x19, x20, [sp, #16]
 63c:	ldp	x29, x30, [sp], #48
 640:	ret
 644:	nop
	...

0000000000000660 <cutmem_iter>:
 660:	add	x4, x0, x1
 664:	ldp	x2, x1, [x3]
 668:	cmp	x2, x0
 66c:	csel	x0, x2, x0, cs  // cs = hs, nlast
 670:	cmp	x1, x4
 674:	csel	x1, x1, x4, ls  // ls = plast
 678:	cmp	x1, x0
 67c:	b.ls	6a0 <cutmem_iter+0x40>  // b.plast
 680:	stp	x29, x30, [sp, #-16]!
 684:	sub	x1, x1, x0
 688:	mov	w2, #0xfffffffe            	// #-2
 68c:	mov	x29, sp
 690:	bl	1f0 <grub_mmap_register>
 694:	mov	w0, #0x0                   	// #0
 698:	ldp	x29, x30, [sp], #16
 69c:	ret
 6a0:	mov	w0, #0x0                   	// #0
 6a4:	ret

00000000000006a8 <badram_iter>:
 6a8:	stp	x29, x30, [sp, #-96]!
 6ac:	mov	x4, x0
 6b0:	mov	x5, x1
 6b4:	mov	x29, sp
 6b8:	stp	x19, x20, [sp, #16]
 6bc:	mov	x19, x0
 6c0:	adrp	x0, 0 <grub_efi_mmap_iterate>
 6c4:	stp	x25, x26, [sp, #64]
 6c8:	adrp	x25, 0 <grub_efi_mmap_iterate>
 6cc:	adrp	x26, 0 <grub_efi_mmap_iterate>
 6d0:	ldr	x2, [x25]
 6d4:	stp	x21, x22, [sp, #32]
 6d8:	mov	x22, x3
 6dc:	ldr	x3, [x0]
 6e0:	stp	x23, x24, [sp, #48]
 6e4:	mov	x23, x1
 6e8:	ldr	x0, [x26]
 6ec:	mov	w1, #0x17b                 	// #379
 6f0:	str	x27, [sp, #80]
 6f4:	bl	0 <grub_real_dprintf>
 6f8:	ldr	x1, [x22, #8]
 6fc:	mov	w7, #0x0                   	// #0
 700:	lsr	x0, x1, x7
 704:	tbz	w0, #0, 798 <badram_iter+0xf0>
 708:	mov	w0, #0x0                   	// #0
 70c:	mov	w21, #0x0                   	// #0
 710:	lsr	x2, x1, x0
 714:	add	w0, w0, #0x1
 718:	tst	x2, #0x1
 71c:	cinc	w21, w21, eq  // eq = none
 720:	cmp	w0, #0x40
 724:	b.ne	710 <badram_iter+0x68>  // b.any
 728:	mov	x0, x22
 72c:	mov	x1, #0x0                   	// #0
 730:	bl	544 <fill_mask>
 734:	cmp	x0, x19
 738:	b.cc	7cc <badram_iter+0x124>  // b.lo, b.ul, b.last
 73c:	mov	x20, #0x0                   	// #0
 740:	sub	w21, w21, w7
 744:	mov	x24, #0x1                   	// #1
 748:	add	x19, x19, x23
 74c:	adrp	x27, 0 <grub_efi_mmap_iterate>
 750:	lsl	x21, x24, x21
 754:	lsl	x24, x24, x7
 758:	cmp	x21, x20
 75c:	b.ls	778 <badram_iter+0xd0>  // b.plast
 760:	mov	x1, x20
 764:	mov	x0, x22
 768:	bl	544 <fill_mask>
 76c:	mov	x23, x0
 770:	cmp	x19, x0
 774:	b.hi	7d8 <badram_iter+0x130>  // b.pmore
 778:	mov	w0, #0x0                   	// #0
 77c:	ldp	x19, x20, [sp, #16]
 780:	ldp	x21, x22, [sp, #32]
 784:	ldp	x23, x24, [sp, #48]
 788:	ldp	x25, x26, [sp, #64]
 78c:	ldr	x27, [sp, #80]
 790:	ldp	x29, x30, [sp], #96
 794:	ret
 798:	add	w7, w7, #0x1
 79c:	b	700 <badram_iter+0x58>
 7a0:	add	x1, x20, x8
 7a4:	mov	x0, x22
 7a8:	lsr	x1, x1, #1
 7ac:	bl	544 <fill_mask>
 7b0:	cmp	x0, x19
 7b4:	csel	x8, x8, x1, cs  // cs = hs, nlast
 7b8:	csel	x20, x1, x20, cs  // cs = hs, nlast
 7bc:	sub	x0, x20, x8
 7c0:	cmp	x0, #0x1
 7c4:	b.hi	7a0 <badram_iter+0xf8>  // b.pmore
 7c8:	b	740 <badram_iter+0x98>
 7cc:	mov	x20, #0xffffffffffffffff    	// #-1
 7d0:	mov	x8, #0x0                   	// #0
 7d4:	b	7bc <badram_iter+0x114>
 7d8:	ldr	x3, [x27]
 7dc:	mov	x5, x24
 7e0:	ldr	x2, [x25]
 7e4:	mov	x4, x23
 7e8:	ldr	x0, [x26]
 7ec:	mov	w1, #0x19f                 	// #415
 7f0:	add	x20, x20, #0x1
 7f4:	bl	0 <grub_real_dprintf>
 7f8:	mov	x1, x24
 7fc:	mov	x0, x23
 800:	mov	w2, #0xfffffffe            	// #-2
 804:	bl	1f0 <grub_mmap_register>
 808:	b	758 <badram_iter+0xb0>
 80c:	nop
	...

0000000000000830 <parsemem>:
 830:	stp	x29, x30, [sp, #-32]!
 834:	mov	w2, #0x0                   	// #0
 838:	mov	x29, sp
 83c:	add	x1, sp, #0x18
 840:	bl	0 <grub_strtoul>
 844:	ldr	x1, [sp, #24]
 848:	ldrb	w1, [x1]
 84c:	cmp	w1, #0x4d
 850:	b.eq	888 <parsemem+0x58>  // b.none
 854:	b.hi	870 <parsemem+0x40>  // b.pmore
 858:	cmp	w1, #0x47
 85c:	b.eq	890 <parsemem+0x60>  // b.none
 860:	cmp	w1, #0x4b
 864:	b.eq	880 <parsemem+0x50>  // b.none
 868:	ldp	x29, x30, [sp], #32
 86c:	ret
 870:	cmp	w1, #0x54
 874:	b.ne	868 <parsemem+0x38>  // b.any
 878:	lsl	x0, x0, #40
 87c:	b	868 <parsemem+0x38>
 880:	lsl	x0, x0, #10
 884:	b	868 <parsemem+0x38>
 888:	lsl	x0, x0, #20
 88c:	b	868 <parsemem+0x38>
 890:	lsl	x0, x0, #30
 894:	b	868 <parsemem+0x38>

0000000000000898 <grub_mmap_iterate>:
 898:	stp	x29, x30, [sp, #-144]!
 89c:	mov	x29, sp
 8a0:	stp	x23, x24, [sp, #48]
 8a4:	mov	x23, x0
 8a8:	adrp	x0, 0 <grub_efi_mmap_iterate>
 8ac:	mov	x24, x1
 8b0:	add	x1, sp, #0x64
 8b4:	ldr	x0, [x0]
 8b8:	stp	x19, x20, [sp, #16]
 8bc:	stp	x21, x22, [sp, #32]
 8c0:	stp	x25, x26, [sp, #64]
 8c4:	stp	x27, x28, [sp, #80]
 8c8:	str	wzr, [sp, #100]
 8cc:	bl	1e8 <grub_machine_mmap_iterate>
 8d0:	ldr	w1, [sp, #100]
 8d4:	mov	w0, #0x30                  	// #48
 8d8:	smull	x0, w1, w0
 8dc:	bl	0 <grub_malloc>
 8e0:	str	x0, [sp, #104]
 8e4:	mov	x0, #0x10                  	// #16
 8e8:	bl	0 <grub_zalloc>
 8ec:	mov	x19, x0
 8f0:	ldr	x0, [sp, #104]
 8f4:	cbz	x0, 8fc <grub_mmap_iterate+0x64>
 8f8:	cbnz	x19, 930 <grub_mmap_iterate+0x98>
 8fc:	bl	0 <grub_free>
 900:	mov	x0, x19
 904:	bl	0 <grub_free>
 908:	adrp	x0, 0 <grub_efi_mmap_iterate>
 90c:	ldr	x0, [x0]
 910:	ldr	w0, [x0]
 914:	ldp	x19, x20, [sp, #16]
 918:	ldp	x21, x22, [sp, #32]
 91c:	ldp	x23, x24, [sp, #48]
 920:	ldp	x25, x26, [sp, #64]
 924:	ldp	x27, x28, [sp, #80]
 928:	ldp	x29, x30, [sp], #144
 92c:	ret
 930:	adrp	x0, 0 <grub_efi_mmap_iterate>
 934:	add	x1, sp, #0x68
 938:	str	wzr, [sp, #112]
 93c:	ldr	x0, [x0]
 940:	bl	1e8 <grub_machine_mmap_iterate>
 944:	mov	w5, #0x0                   	// #0
 948:	mov	w2, #0x0                   	// #0
 94c:	mov	x6, #0x18                  	// #24
 950:	ldr	w0, [sp, #100]
 954:	ldr	x1, [sp, #104]
 958:	lsl	w0, w0, #1
 95c:	sub	w0, w0, #0x1
 960:	cmp	w0, w2
 964:	b.gt	9dc <grub_mmap_iterate+0x144>
 968:	cbnz	w5, a4c <grub_mmap_iterate+0x1b4>
 96c:	ldr	w27, [x1, #12]
 970:	mov	x22, #0x0                   	// #0
 974:	ldr	x20, [x1]
 978:	mov	x26, #0x18                  	// #24
 97c:	mov	w25, #0x1                   	// #1
 980:	ldr	w1, [sp, #100]
 984:	ldr	x0, [sp, #104]
 988:	cmp	w22, w1, lsl #1
 98c:	b.ge	ab0 <grub_mmap_iterate+0x218>  // b.tcont
 990:	mul	x21, x22, x26
 994:	add	x0, x0, x21
 998:	ldrsw	x3, [x0, #16]
 99c:	ldr	w4, [x0, #8]
 9a0:	lsl	x2, x3, #4
 9a4:	add	x3, x19, x3, lsl #4
 9a8:	ldr	w1, [x3, #12]
 9ac:	cbz	w4, ae0 <grub_mmap_iterate+0x248>
 9b0:	cbz	w1, a5c <grub_mmap_iterate+0x1c4>
 9b4:	ldr	w1, [x0, #12]
 9b8:	ldr	x0, [x19, x2]
 9bc:	ldr	w2, [x3, #8]
 9c0:	cmp	w2, w1
 9c4:	b.ne	ac4 <grub_mmap_iterate+0x22c>  // b.any
 9c8:	cbz	x0, a58 <grub_mmap_iterate+0x1c0>
 9cc:	ldp	x4, x5, [x0]
 9d0:	stp	x4, x5, [x3]
 9d4:	bl	0 <grub_free>
 9d8:	b	a5c <grub_mmap_iterate+0x1c4>
 9dc:	sxtw	x0, w2
 9e0:	madd	x0, x0, x6, x6
 9e4:	add	x4, x1, x0
 9e8:	ldr	x7, [x1, x0]
 9ec:	sub	x0, x0, #0x18
 9f0:	add	x3, x1, x0
 9f4:	ldr	x0, [x1, x0]
 9f8:	cmp	x7, x0
 9fc:	b.cc	a18 <grub_mmap_iterate+0x180>  // b.lo, b.ul, b.last
 a00:	b.ne	a44 <grub_mmap_iterate+0x1ac>  // b.any
 a04:	ldr	w0, [x4, #8]
 a08:	cbnz	w0, a44 <grub_mmap_iterate+0x1ac>
 a0c:	ldr	w0, [x3, #8]
 a10:	cmp	w0, #0x1
 a14:	b.ne	a44 <grub_mmap_iterate+0x1ac>  // b.any
 a18:	ldp	x0, x1, [x3]
 a1c:	ldp	x8, x9, [x4]
 a20:	stp	x0, x1, [x4]
 a24:	ldr	x5, [x4, #16]
 a28:	stp	x8, x9, [sp, #120]
 a2c:	ldr	x0, [x3, #16]
 a30:	str	x0, [x4, #16]
 a34:	stp	x8, x9, [x3]
 a38:	str	x5, [x3, #16]
 a3c:	str	x5, [sp, #136]
 a40:	mov	w5, #0x1                   	// #1
 a44:	add	w2, w2, #0x1
 a48:	b	950 <grub_mmap_iterate+0xb8>
 a4c:	mov	w5, #0x0                   	// #0
 a50:	mov	w2, #0x0                   	// #0
 a54:	b	950 <grub_mmap_iterate+0xb8>
 a58:	str	wzr, [x3, #12]
 a5c:	ldr	w0, [x19, #12]
 a60:	mov	w28, #0xffffffff            	// #-1
 a64:	cbz	w0, a78 <grub_mmap_iterate+0x1e0>
 a68:	ldr	w28, [x19, #8]
 a6c:	cmp	w27, w28
 a70:	ccmn	w28, #0x1, #0x4, eq  // eq = none
 a74:	b.ne	b2c <grub_mmap_iterate+0x294>  // b.any
 a78:	ldr	x0, [sp, #104]
 a7c:	ldr	x1, [x0, x21]
 a80:	cmp	x1, x20
 a84:	b.eq	b20 <grub_mmap_iterate+0x288>  // b.none
 a88:	add	w0, w27, #0x2
 a8c:	cmp	w0, #0x1
 a90:	b.ls	b20 <grub_mmap_iterate+0x288>  // b.plast
 a94:	mov	x3, x24
 a98:	mov	w2, w27
 a9c:	sub	x1, x1, x20
 aa0:	mov	x0, x20
 aa4:	blr	x23
 aa8:	cbz	w0, b20 <grub_mmap_iterate+0x288>
 aac:	ldr	x0, [sp, #104]
 ab0:	bl	0 <grub_free>
 ab4:	mov	w0, #0x0                   	// #0
 ab8:	b	914 <grub_mmap_iterate+0x7c>
 abc:	mov	x3, x0
 ac0:	mov	x0, x2
 ac4:	cbz	x0, a5c <grub_mmap_iterate+0x1c4>
 ac8:	ldr	w4, [x0, #8]
 acc:	ldr	x2, [x0]
 ad0:	cmp	w1, w4
 ad4:	b.ne	abc <grub_mmap_iterate+0x224>  // b.any
 ad8:	str	x2, [x3]
 adc:	b	9d4 <grub_mmap_iterate+0x13c>
 ae0:	cbnz	w1, af0 <grub_mmap_iterate+0x258>
 ae4:	ldr	w0, [x0, #12]
 ae8:	stp	w0, w25, [x3, #8]
 aec:	b	a5c <grub_mmap_iterate+0x1c4>
 af0:	mov	x0, #0x10                  	// #16
 af4:	bl	0 <grub_malloc>
 af8:	ldr	x1, [sp, #104]
 afc:	add	x1, x1, x21
 b00:	ldr	w2, [x1, #12]
 b04:	ldrsw	x1, [x1, #16]
 b08:	stp	w2, w25, [x0, #8]
 b0c:	lsl	x1, x1, #4
 b10:	ldr	x2, [x19, x1]
 b14:	str	x2, [x0]
 b18:	str	x0, [x19, x1]
 b1c:	b	a5c <grub_mmap_iterate+0x1c4>
 b20:	ldr	x0, [sp, #104]
 b24:	mov	w27, w28
 b28:	ldr	x20, [x0, x21]
 b2c:	add	x22, x22, #0x1
 b30:	b	980 <grub_mmap_iterate+0xe8>
 b34:	nop
	...

0000000000000b50 <grub_cmd_cutmem>:
 b50:	stp	x29, x30, [sp, #-64]!
 b54:	cmp	w1, #0x2
 b58:	mov	x29, sp
 b5c:	stp	x19, x20, [sp, #16]
 b60:	str	x21, [sp, #32]
 b64:	b.eq	b90 <grub_cmd_cutmem+0x40>  // b.none
 b68:	adrp	x0, 0 <grub_efi_mmap_iterate>
 b6c:	ldr	x1, [x0]
 b70:	mov	w0, #0x12                  	// #18
 b74:	bl	0 <grub_error>
 b78:	mov	w19, w0
 b7c:	mov	w0, w19
 b80:	ldp	x19, x20, [sp, #16]
 b84:	ldr	x21, [sp, #32]
 b88:	ldp	x29, x30, [sp], #64
 b8c:	ret
 b90:	ldr	x0, [x2]
 b94:	mov	x20, x2
 b98:	bl	830 <parsemem>
 b9c:	str	x0, [sp, #48]
 ba0:	adrp	x0, 0 <grub_efi_mmap_iterate>
 ba4:	ldr	x21, [x0]
 ba8:	ldr	w19, [x21]
 bac:	cbnz	w19, b7c <grub_cmd_cutmem+0x2c>
 bb0:	ldr	x0, [x20, #8]
 bb4:	bl	830 <parsemem>
 bb8:	ldr	w19, [x21]
 bbc:	str	x0, [sp, #56]
 bc0:	cbnz	w19, b7c <grub_cmd_cutmem+0x2c>
 bc4:	adrp	x0, 0 <grub_efi_mmap_iterate>
 bc8:	add	x1, sp, #0x30
 bcc:	ldr	x0, [x0]
 bd0:	bl	898 <grub_mmap_iterate>
 bd4:	b	b7c <grub_cmd_cutmem+0x2c>
	...

0000000000000bf0 <grub_cmd_badram>:
 bf0:	stp	x29, x30, [sp, #-80]!
 bf4:	cmp	w1, #0x1
 bf8:	mov	x29, sp
 bfc:	stp	x19, x20, [sp, #16]
 c00:	stp	x21, x22, [sp, #32]
 c04:	b.eq	c28 <grub_cmd_badram+0x38>  // b.none
 c08:	adrp	x0, 0 <grub_efi_mmap_iterate>
 c0c:	ldr	x1, [x0]
 c10:	mov	w0, #0x12                  	// #18
 c14:	bl	0 <grub_error>
 c18:	ldp	x19, x20, [sp, #16]
 c1c:	ldp	x21, x22, [sp, #32]
 c20:	ldp	x29, x30, [sp], #80
 c24:	ret
 c28:	adrp	x0, 0 <grub_efi_mmap_iterate>
 c2c:	adrp	x20, 0 <grub_efi_mmap_iterate>
 c30:	adrp	x19, 0 <grub_efi_mmap_iterate>
 c34:	mov	x21, x2
 c38:	ldr	x3, [x0]
 c3c:	mov	w1, #0x1b0                 	// #432
 c40:	ldr	x0, [x19]
 c44:	adrp	x22, 0 <grub_efi_mmap_iterate>
 c48:	ldr	x2, [x20]
 c4c:	bl	0 <grub_real_dprintf>
 c50:	ldr	x0, [x21]
 c54:	adrp	x21, 0 <grub_efi_mmap_iterate>
 c58:	str	x0, [sp, #56]
 c5c:	ldr	x0, [sp, #56]
 c60:	add	x1, sp, #0x38
 c64:	mov	w2, #0x10                  	// #16
 c68:	bl	0 <grub_strtoull>
 c6c:	str	x0, [sp, #64]
 c70:	ldr	x0, [sp, #56]
 c74:	ldrb	w1, [x0]
 c78:	cmp	w1, #0x2c
 c7c:	b.ne	c88 <grub_cmd_badram+0x98>  // b.any
 c80:	add	x0, x0, #0x1
 c84:	str	x0, [sp, #56]
 c88:	ldr	x0, [sp, #56]
 c8c:	add	x1, sp, #0x38
 c90:	mov	w2, #0x10                  	// #16
 c94:	bl	0 <grub_strtoull>
 c98:	str	x0, [sp, #72]
 c9c:	ldr	x1, [sp, #56]
 ca0:	ldrb	w2, [x1]
 ca4:	cmp	w2, #0x2c
 ca8:	b.ne	cb4 <grub_cmd_badram+0xc4>  // b.any
 cac:	add	x1, x1, #0x1
 cb0:	str	x1, [sp, #56]
 cb4:	ldr	x1, [x22]
 cb8:	ldr	w2, [x1]
 cbc:	cmp	w2, #0xa
 cc0:	b.ne	cd0 <grub_cmd_badram+0xe0>  // b.any
 cc4:	mov	w0, #0x0                   	// #0
 cc8:	str	wzr, [x1]
 ccc:	b	c18 <grub_cmd_badram+0x28>
 cd0:	and	x5, x0, #0xfffffffffffffc00
 cd4:	mov	w1, #0x1c8                 	// #456
 cd8:	ldr	x0, [x19]
 cdc:	str	x5, [sp, #72]
 ce0:	ldr	x3, [x21]
 ce4:	ldr	x2, [x20]
 ce8:	ldr	x4, [sp, #64]
 cec:	bl	0 <grub_real_dprintf>
 cf0:	adrp	x0, 0 <grub_efi_mmap_iterate>
 cf4:	add	x1, sp, #0x40
 cf8:	ldr	x0, [x0]
 cfc:	bl	898 <grub_mmap_iterate>
 d00:	b	c5c <grub_cmd_badram+0x6c>
 d04:	nop
	...

0000000000000d40 <grub_mod_init>:
 d40:	stp	x29, x30, [sp, #-32]!
 d44:	adrp	x0, 0 <grub_efi_mmap_iterate>
 d48:	mov	w4, #0x0                   	// #0
 d4c:	mov	x29, sp
 d50:	ldr	x3, [x0]
 d54:	adrp	x0, 0 <grub_efi_mmap_iterate>
 d58:	str	x19, [sp, #16]
 d5c:	ldr	x2, [x0]
 d60:	adrp	x0, 0 <grub_efi_mmap_iterate>
 d64:	ldr	x1, [x0]
 d68:	adrp	x0, 0 <grub_efi_mmap_iterate>
 d6c:	ldr	x0, [x0]
 d70:	bl	0 <grub_register_command_prio>
 d74:	adrp	x1, 0 <grub_efi_mmap_iterate>
 d78:	mov	w4, #0x0                   	// #0
 d7c:	ldr	x19, [x1]
 d80:	str	x0, [x19]
 d84:	adrp	x0, 0 <grub_efi_mmap_iterate>
 d88:	ldr	x3, [x0]
 d8c:	adrp	x0, 0 <grub_efi_mmap_iterate>
 d90:	ldr	x2, [x0]
 d94:	adrp	x0, 0 <grub_efi_mmap_iterate>
 d98:	ldr	x1, [x0]
 d9c:	adrp	x0, 0 <grub_efi_mmap_iterate>
 da0:	ldr	x0, [x0]
 da4:	bl	0 <grub_register_command_prio>
 da8:	str	x0, [x19, #8]
 dac:	ldr	x19, [sp, #16]
 db0:	ldp	x29, x30, [sp], #32
 db4:	ret
	...

0000000000000e00 <grub_mod_fini>:
 e00:	stp	x29, x30, [sp, #-32]!
 e04:	adrp	x0, 0 <grub_efi_mmap_iterate>
 e08:	mov	x29, sp
 e0c:	str	x19, [sp, #16]
 e10:	ldr	x19, [x0]
 e14:	ldr	x0, [x19]
 e18:	bl	0 <grub_unregister_command>
 e1c:	ldr	x0, [x19, #8]
 e20:	ldr	x19, [sp, #16]
 e24:	ldp	x29, x30, [sp], #32
 e28:	b	0 <grub_unregister_command>
 e2c:	nop
	...
