
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rtmon_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404af0 <.init>:
  404af0:	stp	x29, x30, [sp, #-16]!
  404af4:	mov	x29, sp
  404af8:	bl	405524 <_start@@Base+0x50>
  404afc:	ldp	x29, x30, [sp], #16
  404b00:	ret

Disassembly of section .plt:

0000000000404b10 <memcpy@plt-0x20>:
  404b10:	stp	x16, x30, [sp, #-16]!
  404b14:	adrp	x16, 421000 <_IO_stdin_used@@Base+0x13c90>
  404b18:	ldr	x17, [x16, #4088]
  404b1c:	add	x16, x16, #0xff8
  404b20:	br	x17
  404b24:	nop
  404b28:	nop
  404b2c:	nop

0000000000404b30 <memcpy@plt>:
  404b30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404b34:	ldr	x17, [x16]
  404b38:	add	x16, x16, #0x0
  404b3c:	br	x17

0000000000404b40 <recvmsg@plt>:
  404b40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #8]
  404b48:	add	x16, x16, #0x8
  404b4c:	br	x17

0000000000404b50 <strtoul@plt>:
  404b50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404b54:	ldr	x17, [x16, #16]
  404b58:	add	x16, x16, #0x10
  404b5c:	br	x17

0000000000404b60 <strlen@plt>:
  404b60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404b64:	ldr	x17, [x16, #24]
  404b68:	add	x16, x16, #0x18
  404b6c:	br	x17

0000000000404b70 <exit@plt>:
  404b70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #32]
  404b78:	add	x16, x16, #0x20
  404b7c:	br	x17

0000000000404b80 <perror@plt>:
  404b80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #40]
  404b88:	add	x16, x16, #0x28
  404b8c:	br	x17

0000000000404b90 <strtoll@plt>:
  404b90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #48]
  404b98:	add	x16, x16, #0x30
  404b9c:	br	x17

0000000000404ba0 <strtod@plt>:
  404ba0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #56]
  404ba8:	add	x16, x16, #0x38
  404bac:	br	x17

0000000000404bb0 <geteuid@plt>:
  404bb0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #64]
  404bb8:	add	x16, x16, #0x40
  404bbc:	br	x17

0000000000404bc0 <sethostent@plt>:
  404bc0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #72]
  404bc8:	add	x16, x16, #0x48
  404bcc:	br	x17

0000000000404bd0 <bind@plt>:
  404bd0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #80]
  404bd8:	add	x16, x16, #0x50
  404bdc:	br	x17

0000000000404be0 <ftell@plt>:
  404be0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #88]
  404be8:	add	x16, x16, #0x58
  404bec:	br	x17

0000000000404bf0 <sprintf@plt>:
  404bf0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #96]
  404bf8:	add	x16, x16, #0x60
  404bfc:	br	x17

0000000000404c00 <getuid@plt>:
  404c00:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #104]
  404c08:	add	x16, x16, #0x68
  404c0c:	br	x17

0000000000404c10 <putc@plt>:
  404c10:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #112]
  404c18:	add	x16, x16, #0x70
  404c1c:	br	x17

0000000000404c20 <strftime@plt>:
  404c20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #120]
  404c28:	add	x16, x16, #0x78
  404c2c:	br	x17

0000000000404c30 <fputc@plt>:
  404c30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #128]
  404c38:	add	x16, x16, #0x80
  404c3c:	br	x17

0000000000404c40 <snprintf@plt>:
  404c40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #136]
  404c48:	add	x16, x16, #0x88
  404c4c:	br	x17

0000000000404c50 <fileno@plt>:
  404c50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #144]
  404c58:	add	x16, x16, #0x90
  404c5c:	br	x17

0000000000404c60 <localtime@plt>:
  404c60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #152]
  404c68:	add	x16, x16, #0x98
  404c6c:	br	x17

0000000000404c70 <fclose@plt>:
  404c70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #160]
  404c78:	add	x16, x16, #0xa0
  404c7c:	br	x17

0000000000404c80 <time@plt>:
  404c80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #168]
  404c88:	add	x16, x16, #0xa8
  404c8c:	br	x17

0000000000404c90 <malloc@plt>:
  404c90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #176]
  404c98:	add	x16, x16, #0xb0
  404c9c:	br	x17

0000000000404ca0 <setsockopt@plt>:
  404ca0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #184]
  404ca8:	add	x16, x16, #0xb8
  404cac:	br	x17

0000000000404cb0 <__isoc99_fscanf@plt>:
  404cb0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #192]
  404cb8:	add	x16, x16, #0xc0
  404cbc:	br	x17

0000000000404cc0 <__libc_start_main@plt>:
  404cc0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #200]
  404cc8:	add	x16, x16, #0xc8
  404ccc:	br	x17

0000000000404cd0 <strcat@plt>:
  404cd0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #208]
  404cd8:	add	x16, x16, #0xd0
  404cdc:	br	x17

0000000000404ce0 <if_indextoname@plt>:
  404ce0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #216]
  404ce8:	add	x16, x16, #0xd8
  404cec:	br	x17

0000000000404cf0 <memset@plt>:
  404cf0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #224]
  404cf8:	add	x16, x16, #0xe0
  404cfc:	br	x17

0000000000404d00 <gettimeofday@plt>:
  404d00:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #232]
  404d08:	add	x16, x16, #0xe8
  404d0c:	br	x17

0000000000404d10 <sendmsg@plt>:
  404d10:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #240]
  404d18:	add	x16, x16, #0xf0
  404d1c:	br	x17

0000000000404d20 <cap_get_flag@plt>:
  404d20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #248]
  404d28:	add	x16, x16, #0xf8
  404d2c:	br	x17

0000000000404d30 <strcasecmp@plt>:
  404d30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #256]
  404d38:	add	x16, x16, #0x100
  404d3c:	br	x17

0000000000404d40 <realloc@plt>:
  404d40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #264]
  404d48:	add	x16, x16, #0x108
  404d4c:	br	x17

0000000000404d50 <cap_set_proc@plt>:
  404d50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #272]
  404d58:	add	x16, x16, #0x110
  404d5c:	br	x17

0000000000404d60 <strdup@plt>:
  404d60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #280]
  404d68:	add	x16, x16, #0x118
  404d6c:	br	x17

0000000000404d70 <strerror@plt>:
  404d70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #288]
  404d78:	add	x16, x16, #0x120
  404d7c:	br	x17

0000000000404d80 <close@plt>:
  404d80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #296]
  404d88:	add	x16, x16, #0x128
  404d8c:	br	x17

0000000000404d90 <strrchr@plt>:
  404d90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #304]
  404d98:	add	x16, x16, #0x130
  404d9c:	br	x17

0000000000404da0 <recv@plt>:
  404da0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #312]
  404da8:	add	x16, x16, #0x138
  404dac:	br	x17

0000000000404db0 <__gmon_start__@plt>:
  404db0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #320]
  404db8:	add	x16, x16, #0x140
  404dbc:	br	x17

0000000000404dc0 <abort@plt>:
  404dc0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #328]
  404dc8:	add	x16, x16, #0x148
  404dcc:	br	x17

0000000000404dd0 <feof@plt>:
  404dd0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #336]
  404dd8:	add	x16, x16, #0x150
  404ddc:	br	x17

0000000000404de0 <memcmp@plt>:
  404de0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #344]
  404de8:	add	x16, x16, #0x158
  404dec:	br	x17

0000000000404df0 <strcmp@plt>:
  404df0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #352]
  404df8:	add	x16, x16, #0x160
  404dfc:	br	x17

0000000000404e00 <__ctype_b_loc@plt>:
  404e00:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #360]
  404e08:	add	x16, x16, #0x168
  404e0c:	br	x17

0000000000404e10 <strtol@plt>:
  404e10:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #368]
  404e18:	add	x16, x16, #0x170
  404e1c:	br	x17

0000000000404e20 <cap_get_proc@plt>:
  404e20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #376]
  404e28:	add	x16, x16, #0x178
  404e2c:	br	x17

0000000000404e30 <fread@plt>:
  404e30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #384]
  404e38:	add	x16, x16, #0x180
  404e3c:	br	x17

0000000000404e40 <gethostbyaddr@plt>:
  404e40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #392]
  404e48:	add	x16, x16, #0x188
  404e4c:	br	x17

0000000000404e50 <free@plt>:
  404e50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #400]
  404e58:	add	x16, x16, #0x190
  404e5c:	br	x17

0000000000404e60 <inet_pton@plt>:
  404e60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #408]
  404e68:	add	x16, x16, #0x198
  404e6c:	br	x17

0000000000404e70 <send@plt>:
  404e70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #416]
  404e78:	add	x16, x16, #0x1a0
  404e7c:	br	x17

0000000000404e80 <strspn@plt>:
  404e80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #424]
  404e88:	add	x16, x16, #0x1a8
  404e8c:	br	x17

0000000000404e90 <strchr@plt>:
  404e90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #432]
  404e98:	add	x16, x16, #0x1b0
  404e9c:	br	x17

0000000000404ea0 <strtoull@plt>:
  404ea0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #440]
  404ea8:	add	x16, x16, #0x1b8
  404eac:	br	x17

0000000000404eb0 <fwrite@plt>:
  404eb0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #448]
  404eb8:	add	x16, x16, #0x1c0
  404ebc:	br	x17

0000000000404ec0 <socket@plt>:
  404ec0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #456]
  404ec8:	add	x16, x16, #0x1c8
  404ecc:	br	x17

0000000000404ed0 <fflush@plt>:
  404ed0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #464]
  404ed8:	add	x16, x16, #0x1d0
  404edc:	br	x17

0000000000404ee0 <fopen64@plt>:
  404ee0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #472]
  404ee8:	add	x16, x16, #0x1d8
  404eec:	br	x17

0000000000404ef0 <cap_clear@plt>:
  404ef0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #480]
  404ef8:	add	x16, x16, #0x1e0
  404efc:	br	x17

0000000000404f00 <isatty@plt>:
  404f00:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #488]
  404f08:	add	x16, x16, #0x1e8
  404f0c:	br	x17

0000000000404f10 <sysconf@plt>:
  404f10:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #496]
  404f18:	add	x16, x16, #0x1f0
  404f1c:	br	x17

0000000000404f20 <asctime@plt>:
  404f20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #504]
  404f28:	add	x16, x16, #0x1f8
  404f2c:	br	x17

0000000000404f30 <cap_free@plt>:
  404f30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #512]
  404f38:	add	x16, x16, #0x200
  404f3c:	br	x17

0000000000404f40 <if_nametoindex@plt>:
  404f40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #520]
  404f48:	add	x16, x16, #0x208
  404f4c:	br	x17

0000000000404f50 <strchrnul@plt>:
  404f50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #528]
  404f58:	add	x16, x16, #0x210
  404f5c:	br	x17

0000000000404f60 <strstr@plt>:
  404f60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #536]
  404f68:	add	x16, x16, #0x218
  404f6c:	br	x17

0000000000404f70 <__isoc99_sscanf@plt>:
  404f70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #544]
  404f78:	add	x16, x16, #0x220
  404f7c:	br	x17

0000000000404f80 <strncpy@plt>:
  404f80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #552]
  404f88:	add	x16, x16, #0x228
  404f8c:	br	x17

0000000000404f90 <strcspn@plt>:
  404f90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #560]
  404f98:	add	x16, x16, #0x230
  404f9c:	br	x17

0000000000404fa0 <vfprintf@plt>:
  404fa0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #568]
  404fa8:	add	x16, x16, #0x238
  404fac:	br	x17

0000000000404fb0 <printf@plt>:
  404fb0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #576]
  404fb8:	add	x16, x16, #0x240
  404fbc:	br	x17

0000000000404fc0 <__assert_fail@plt>:
  404fc0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #584]
  404fc8:	add	x16, x16, #0x248
  404fcc:	br	x17

0000000000404fd0 <__errno_location@plt>:
  404fd0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #592]
  404fd8:	add	x16, x16, #0x250
  404fdc:	br	x17

0000000000404fe0 <getenv@plt>:
  404fe0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #600]
  404fe8:	add	x16, x16, #0x258
  404fec:	br	x17

0000000000404ff0 <putchar@plt>:
  404ff0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #608]
  404ff8:	add	x16, x16, #0x260
  404ffc:	br	x17

0000000000405000 <__getdelim@plt>:
  405000:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #616]
  405008:	add	x16, x16, #0x268
  40500c:	br	x17

0000000000405010 <getsockname@plt>:
  405010:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #624]
  405018:	add	x16, x16, #0x270
  40501c:	br	x17

0000000000405020 <fprintf@plt>:
  405020:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #632]
  405028:	add	x16, x16, #0x278
  40502c:	br	x17

0000000000405030 <fgets@plt>:
  405030:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #640]
  405038:	add	x16, x16, #0x280
  40503c:	br	x17

0000000000405040 <inet_ntop@plt>:
  405040:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #648]
  405048:	add	x16, x16, #0x288
  40504c:	br	x17

0000000000405050 <ferror@plt>:
  405050:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #656]
  405058:	add	x16, x16, #0x290
  40505c:	br	x17

Disassembly of section .text:

0000000000405060 <main@@Base>:
  405060:	stp	x29, x30, [sp, #-320]!
  405064:	cmp	w0, #0x1
  405068:	mov	x29, sp
  40506c:	stp	x19, x20, [sp, #16]
  405070:	stp	x21, x22, [sp, #32]
  405074:	stp	x23, x24, [sp, #48]
  405078:	stp	x25, x26, [sp, #64]
  40507c:	stp	x27, x28, [sp, #80]
  405080:	b.le	405448 <main@@Base+0x3e8>
  405084:	adrp	x19, 40d000 <rta_addattr_l@@Base+0x98>
  405088:	adrp	x23, 40d000 <rta_addattr_l@@Base+0x98>
  40508c:	adrp	x24, 40d000 <rta_addattr_l@@Base+0x98>
  405090:	mov	w27, w0
  405094:	mov	x28, x1
  405098:	add	x19, x19, #0x488
  40509c:	add	x23, x23, #0x4e0
  4050a0:	add	x24, x24, #0x510
  4050a4:	mov	x25, #0x0                   	// #0
  4050a8:	mov	w21, #0xffffffff            	// #-1
  4050ac:	mov	w20, #0x0                   	// #0
  4050b0:	adrp	x22, 40d000 <rta_addattr_l@@Base+0x98>
  4050b4:	stp	wzr, wzr, [sp, #100]
  4050b8:	str	wzr, [sp, #108]
  4050bc:	nop
  4050c0:	ldr	x0, [x28, #8]
  4050c4:	mov	x1, x19
  4050c8:	bl	406af0 <matches@@Base>
  4050cc:	tst	w0, #0xff
  4050d0:	b.ne	405234 <main@@Base+0x1d4>  // b.any
  4050d4:	sub	w27, w27, #0x1
  4050d8:	add	x26, x28, #0x8
  4050dc:	cmp	w27, #0x1
  4050e0:	b.eq	4053d8 <main@@Base+0x378>  // b.none
  4050e4:	ldr	x20, [x28, #16]
  4050e8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4050ec:	add	x1, x1, #0x490
  4050f0:	mov	x0, x20
  4050f4:	bl	404df0 <strcmp@plt>
  4050f8:	cbz	w0, 40528c <main@@Base+0x22c>
  4050fc:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405100:	mov	x0, x20
  405104:	add	x1, x1, #0x498
  405108:	bl	404df0 <strcmp@plt>
  40510c:	cbz	w0, 405120 <main@@Base+0xc0>
  405110:	add	x1, x22, #0x4a0
  405114:	mov	x0, x20
  405118:	bl	404df0 <strcmp@plt>
  40511c:	cbnz	w0, 4053a4 <main@@Base+0x344>
  405120:	mov	w20, #0xa                   	// #10
  405124:	sub	w27, w27, #0x1
  405128:	add	x28, x26, #0x8
  40512c:	cmp	w27, #0x1
  405130:	b.ne	4050c0 <main@@Base+0x60>  // b.any
  405134:	cbz	x25, 405448 <main@@Base+0x3e8>
  405138:	ldr	w0, [sp, #100]
  40513c:	orr	w21, w21, w0
  405140:	ldr	w0, [sp, #104]
  405144:	cbz	w0, 40516c <main@@Base+0x10c>
  405148:	cmp	w20, #0x0
  40514c:	and	w0, w20, #0xfffffffd
  405150:	cset	w1, eq  // eq = none
  405154:	cbnz	w0, 40515c <main@@Base+0xfc>
  405158:	orr	w21, w21, #0x10
  40515c:	cmp	w1, #0x0
  405160:	orr	w0, w21, #0x100
  405164:	ccmp	w20, #0xa, #0x4, eq  // eq = none
  405168:	csel	w21, w0, w21, eq  // eq = none
  40516c:	ldr	w0, [sp, #108]
  405170:	cbnz	w0, 405314 <main@@Base+0x2b4>
  405174:	mov	x0, x25
  405178:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40517c:	add	x1, x1, #0x560
  405180:	bl	404ee0 <fopen64@plt>
  405184:	mov	x19, x0
  405188:	cbz	x0, 4054c0 <main@@Base+0x460>
  40518c:	mov	w1, w21
  405190:	add	x0, sp, #0x88
  405194:	bl	40b348 <rtnl_open@@Base>
  405198:	tbnz	w0, #31, 4054b8 <main@@Base+0x458>
  40519c:	add	x0, sp, #0x88
  4051a0:	mov	w1, #0x0                   	// #0
  4051a4:	bl	40b8c8 <rtnl_linkdump_req@@Base>
  4051a8:	tbnz	w0, #31, 4054ac <main@@Base+0x44c>
  4051ac:	mov	x2, #0x18                  	// #24
  4051b0:	mov	x1, #0x0                   	// #0
  4051b4:	movk	x2, #0xf, lsl #32
  4051b8:	add	x0, sp, #0x78
  4051bc:	str	x2, [sp, #192]
  4051c0:	str	xzr, [sp, #200]
  4051c4:	bl	404d00 <gettimeofday@plt>
  4051c8:	ldur	q0, [sp, #120]
  4051cc:	mov	x3, x19
  4051d0:	ldr	w2, [sp, #192]
  4051d4:	mov	x1, #0x1                   	// #1
  4051d8:	add	x0, sp, #0xc0
  4051dc:	xtn	v0.2s, v0.2d
  4051e0:	add	w2, w2, #0x3
  4051e4:	and	x2, x2, #0xfffffffc
  4051e8:	str	d0, [sp, #208]
  4051ec:	bl	404eb0 <fwrite@plt>
  4051f0:	adrp	x1, 405000 <__getdelim@plt>
  4051f4:	mov	x2, x19
  4051f8:	add	x1, x1, #0x610
  4051fc:	add	x0, sp, #0x88
  405200:	mov	w3, #0x0                   	// #0
  405204:	bl	40bdd0 <rtnl_dump_filter_nc@@Base>
  405208:	tbnz	w0, #31, 40533c <main@@Base+0x2dc>
  40520c:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  405210:	adrp	x1, 405000 <__getdelim@plt>
  405214:	mov	x2, x19
  405218:	add	x0, sp, #0x88
  40521c:	add	x1, x1, #0x6b0
  405220:	str	wzr, [x3, #680]
  405224:	bl	40c700 <rtnl_listen@@Base>
  405228:	tbnz	w0, #31, 4054a4 <main@@Base+0x444>
  40522c:	mov	w0, #0x0                   	// #0
  405230:	bl	404b70 <exit@plt>
  405234:	ldr	x0, [x28, #8]
  405238:	ldrb	w1, [x0]
  40523c:	cmp	w1, #0x2d
  405240:	b.eq	405294 <main@@Base+0x234>  // b.none
  405244:	mov	x1, x23
  405248:	bl	406af0 <matches@@Base>
  40524c:	tst	w0, #0xff
  405250:	b.eq	40542c <main@@Base+0x3cc>  // b.none
  405254:	ldr	x0, [x28, #8]
  405258:	mov	x1, x24
  40525c:	bl	406af0 <matches@@Base>
  405260:	tst	w0, #0xff
  405264:	b.ne	4052ec <main@@Base+0x28c>  // b.any
  405268:	sub	w27, w27, #0x1
  40526c:	add	x26, x28, #0x8
  405270:	cmp	w27, #0x1
  405274:	b.eq	4053d8 <main@@Base+0x378>  // b.none
  405278:	ldr	x25, [x28, #16]
  40527c:	b	405124 <main@@Base+0xc4>
  405280:	ldrb	w4, [x0, #2]
  405284:	mov	x26, x28
  405288:	cbnz	w4, 4052a0 <main@@Base+0x240>
  40528c:	mov	w20, #0x2                   	// #2
  405290:	b	405124 <main@@Base+0xc4>
  405294:	ldrb	w4, [x0, #1]
  405298:	cmp	w4, #0x34
  40529c:	b.eq	405280 <main@@Base+0x220>  // b.none
  4052a0:	cmp	w1, #0x2d
  4052a4:	b.ne	405244 <main@@Base+0x1e4>  // b.any
  4052a8:	ldrb	w4, [x0, #1]
  4052ac:	cmp	w4, #0x36
  4052b0:	b.eq	4052dc <main@@Base+0x27c>  // b.none
  4052b4:	cmp	w1, #0x2d
  4052b8:	b.ne	405244 <main@@Base+0x1e4>  // b.any
  4052bc:	ldrb	w1, [x0, #1]
  4052c0:	cmp	w1, #0x30
  4052c4:	b.ne	405244 <main@@Base+0x1e4>  // b.any
  4052c8:	ldrb	w1, [x0, #2]
  4052cc:	cbnz	w1, 405244 <main@@Base+0x1e4>
  4052d0:	mov	x26, x28
  4052d4:	mov	w20, #0x11                  	// #17
  4052d8:	b	405124 <main@@Base+0xc4>
  4052dc:	ldrb	w4, [x0, #2]
  4052e0:	mov	x26, x28
  4052e4:	cbz	w4, 405120 <main@@Base+0xc0>
  4052e8:	b	4052b4 <main@@Base+0x254>
  4052ec:	ldr	x0, [x28, #8]
  4052f0:	add	x1, x22, #0x4a0
  4052f4:	bl	406af0 <matches@@Base>
  4052f8:	tst	w0, #0xff
  4052fc:	b.ne	405378 <main@@Base+0x318>  // b.any
  405300:	mov	w0, #0x1                   	// #1
  405304:	mov	x26, x28
  405308:	mov	w21, #0x0                   	// #0
  40530c:	str	w0, [sp, #100]
  405310:	b	405124 <main@@Base+0xc4>
  405314:	cmp	w20, #0x0
  405318:	and	w0, w20, #0xfffffffd
  40531c:	cset	w1, eq  // eq = none
  405320:	cbnz	w0, 405328 <main@@Base+0x2c8>
  405324:	orr	w21, w21, #0x40
  405328:	cmp	w1, #0x0
  40532c:	orr	w0, w21, #0x400
  405330:	ccmp	w20, #0xa, #0x4, eq  // eq = none
  405334:	csel	w21, w0, w21, eq  // eq = none
  405338:	b	405174 <main@@Base+0x114>
  40533c:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405340:	mov	x2, #0x10                  	// #16
  405344:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  405348:	add	x0, x0, #0x598
  40534c:	ldr	x3, [x1, #704]
  405350:	mov	x1, #0x1                   	// #1
  405354:	bl	404eb0 <fwrite@plt>
  405358:	mov	w0, #0x1                   	// #1
  40535c:	ldp	x19, x20, [sp, #16]
  405360:	ldp	x21, x22, [sp, #32]
  405364:	ldp	x23, x24, [sp, #48]
  405368:	ldp	x25, x26, [sp, #64]
  40536c:	ldp	x27, x28, [sp, #80]
  405370:	ldp	x29, x30, [sp], #320
  405374:	ret
  405378:	ldr	x0, [x28, #8]
  40537c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405380:	add	x1, x1, #0x518
  405384:	bl	406af0 <matches@@Base>
  405388:	tst	w0, #0xff
  40538c:	b.ne	4053dc <main@@Base+0x37c>  // b.any
  405390:	mov	w0, #0x1                   	// #1
  405394:	mov	x26, x28
  405398:	mov	w21, #0x0                   	// #0
  40539c:	str	w0, [sp, #104]
  4053a0:	b	405124 <main@@Base+0xc4>
  4053a4:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4053a8:	mov	x0, x20
  4053ac:	add	x1, x1, #0x4a8
  4053b0:	bl	404df0 <strcmp@plt>
  4053b4:	cbz	w0, 4053d8 <main@@Base+0x378>
  4053b8:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4053bc:	mov	x2, x20
  4053c0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4053c4:	add	x1, x1, #0x4b0
  4053c8:	ldr	x0, [x0, #704]
  4053cc:	bl	405020 <fprintf@plt>
  4053d0:	mov	w0, #0xffffffff            	// #-1
  4053d4:	bl	404b70 <exit@plt>
  4053d8:	bl	4055e0 <_start@@Base+0x10c>
  4053dc:	ldr	x0, [x28, #8]
  4053e0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4053e4:	add	x1, x1, #0x520
  4053e8:	bl	406af0 <matches@@Base>
  4053ec:	tst	w0, #0xff
  4053f0:	b.eq	405418 <main@@Base+0x3b8>  // b.none
  4053f4:	ldr	x21, [x28, #8]
  4053f8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4053fc:	add	x1, x1, #0x528
  405400:	mov	x0, x21
  405404:	bl	404df0 <strcmp@plt>
  405408:	cbnz	w0, 40546c <main@@Base+0x40c>
  40540c:	mov	x26, x28
  405410:	mov	w21, #0xffffffff            	// #-1
  405414:	b	405124 <main@@Base+0xc4>
  405418:	mov	w0, #0x1                   	// #1
  40541c:	mov	x26, x28
  405420:	mov	w21, #0x0                   	// #0
  405424:	str	w0, [sp, #108]
  405428:	b	405124 <main@@Base+0xc4>
  40542c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405430:	add	x1, x1, #0x5b0
  405434:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  405438:	add	x0, x0, #0x4f0
  40543c:	bl	404fb0 <printf@plt>
  405440:	mov	w0, #0x0                   	// #0
  405444:	bl	404b70 <exit@plt>
  405448:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  40544c:	mov	x2, #0x34                  	// #52
  405450:	mov	x1, #0x1                   	// #1
  405454:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  405458:	ldr	x3, [x3, #704]
  40545c:	add	x0, x0, #0x450
  405460:	bl	404eb0 <fwrite@plt>
  405464:	mov	w0, #0xffffffff            	// #-1
  405468:	bl	404b70 <exit@plt>
  40546c:	mov	x0, x21
  405470:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405474:	add	x1, x1, #0x4a8
  405478:	bl	406af0 <matches@@Base>
  40547c:	tst	w0, #0xff
  405480:	b.eq	4053d8 <main@@Base+0x378>  // b.none
  405484:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405488:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40548c:	ldr	x2, [x28, #8]
  405490:	add	x1, x1, #0x530
  405494:	ldr	x0, [x0, #704]
  405498:	bl	405020 <fprintf@plt>
  40549c:	mov	w0, #0xffffffff            	// #-1
  4054a0:	bl	404b70 <exit@plt>
  4054a4:	mov	w0, #0x2                   	// #2
  4054a8:	bl	404b70 <exit@plt>
  4054ac:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  4054b0:	add	x0, x0, #0x578
  4054b4:	bl	404b80 <perror@plt>
  4054b8:	mov	w0, #0x1                   	// #1
  4054bc:	bl	404b70 <exit@plt>
  4054c0:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  4054c4:	add	x0, x0, #0x568
  4054c8:	bl	404b80 <perror@plt>
  4054cc:	mov	w0, #0xffffffff            	// #-1
  4054d0:	bl	404b70 <exit@plt>

00000000004054d4 <_start@@Base>:
  4054d4:	mov	x29, #0x0                   	// #0
  4054d8:	mov	x30, #0x0                   	// #0
  4054dc:	mov	x5, x0
  4054e0:	ldr	x1, [sp]
  4054e4:	add	x2, sp, #0x8
  4054e8:	mov	x6, sp
  4054ec:	movz	x0, #0x0, lsl #48
  4054f0:	movk	x0, #0x0, lsl #32
  4054f4:	movk	x0, #0x40, lsl #16
  4054f8:	movk	x0, #0x5060
  4054fc:	movz	x3, #0x0, lsl #48
  405500:	movk	x3, #0x0, lsl #32
  405504:	movk	x3, #0x40, lsl #16
  405508:	movk	x3, #0xd2d8
  40550c:	movz	x4, #0x0, lsl #48
  405510:	movk	x4, #0x0, lsl #32
  405514:	movk	x4, #0x40, lsl #16
  405518:	movk	x4, #0xd358
  40551c:	bl	404cc0 <__libc_start_main@plt>
  405520:	bl	404dc0 <abort@plt>
  405524:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  405528:	ldr	x0, [x0, #4040]
  40552c:	cbz	x0, 405534 <_start@@Base+0x60>
  405530:	b	404db0 <__gmon_start__@plt>
  405534:	ret
  405538:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  40553c:	add	x0, x0, #0x2c0
  405540:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405544:	add	x1, x1, #0x2c0
  405548:	cmp	x1, x0
  40554c:	b.eq	405564 <_start@@Base+0x90>  // b.none
  405550:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405554:	ldr	x1, [x1, #888]
  405558:	cbz	x1, 405564 <_start@@Base+0x90>
  40555c:	mov	x16, x1
  405560:	br	x16
  405564:	ret
  405568:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  40556c:	add	x0, x0, #0x2c0
  405570:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405574:	add	x1, x1, #0x2c0
  405578:	sub	x1, x1, x0
  40557c:	lsr	x2, x1, #63
  405580:	add	x1, x2, x1, asr #3
  405584:	cmp	xzr, x1, asr #1
  405588:	asr	x1, x1, #1
  40558c:	b.eq	4055a4 <_start@@Base+0xd0>  // b.none
  405590:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  405594:	ldr	x2, [x2, #896]
  405598:	cbz	x2, 4055a4 <_start@@Base+0xd0>
  40559c:	mov	x16, x2
  4055a0:	br	x16
  4055a4:	ret
  4055a8:	stp	x29, x30, [sp, #-32]!
  4055ac:	mov	x29, sp
  4055b0:	str	x19, [sp, #16]
  4055b4:	adrp	x19, 422000 <memcpy@GLIBC_2.17>
  4055b8:	ldrb	w0, [x19, #712]
  4055bc:	cbnz	w0, 4055cc <_start@@Base+0xf8>
  4055c0:	bl	405538 <_start@@Base+0x64>
  4055c4:	mov	w0, #0x1                   	// #1
  4055c8:	strb	w0, [x19, #712]
  4055cc:	ldr	x19, [sp, #16]
  4055d0:	ldp	x29, x30, [sp], #32
  4055d4:	ret
  4055d8:	b	405568 <_start@@Base+0x94>
  4055dc:	nop
  4055e0:	stp	x29, x30, [sp, #-16]!
  4055e4:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  4055e8:	mov	x2, #0xc5                  	// #197
  4055ec:	mov	x29, sp
  4055f0:	ldr	x3, [x3, #704]
  4055f4:	mov	x1, #0x1                   	// #1
  4055f8:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  4055fc:	add	x0, x0, #0x388
  405600:	bl	404eb0 <fwrite@plt>
  405604:	mov	w0, #0xffffffff            	// #-1
  405608:	bl	404b70 <exit@plt>
  40560c:	nop
  405610:	stp	x29, x30, [sp, #-176]!
  405614:	adrp	x2, 422000 <memcpy@GLIBC_2.17>
  405618:	mov	x29, sp
  40561c:	stp	x19, x20, [sp, #16]
  405620:	mov	x20, x0
  405624:	ldr	w0, [x2, #680]
  405628:	mov	x19, x1
  40562c:	cbz	w0, 405664 <_start@@Base+0x190>
  405630:	ldr	w2, [x20]
  405634:	mov	x3, x19
  405638:	mov	x1, #0x1                   	// #1
  40563c:	mov	x0, x20
  405640:	add	w2, w2, #0x3
  405644:	and	x2, x2, #0xfffffffc
  405648:	bl	404eb0 <fwrite@plt>
  40564c:	mov	x0, x19
  405650:	bl	404ed0 <fflush@plt>
  405654:	mov	w0, #0x0                   	// #0
  405658:	ldp	x19, x20, [sp, #16]
  40565c:	ldp	x29, x30, [sp], #176
  405660:	ret
  405664:	mov	x2, #0x18                  	// #24
  405668:	add	x0, sp, #0x20
  40566c:	movk	x2, #0xf, lsl #32
  405670:	mov	x1, #0x0                   	// #0
  405674:	str	x2, [sp, #48]
  405678:	str	xzr, [sp, #56]
  40567c:	bl	404d00 <gettimeofday@plt>
  405680:	ldr	q0, [sp, #32]
  405684:	mov	x3, x19
  405688:	ldr	w2, [sp, #48]
  40568c:	add	x0, sp, #0x30
  405690:	mov	x1, #0x1                   	// #1
  405694:	xtn	v0.2s, v0.2d
  405698:	add	w2, w2, #0x3
  40569c:	and	x2, x2, #0xfffffffc
  4056a0:	str	d0, [sp, #64]
  4056a4:	bl	404eb0 <fwrite@plt>
  4056a8:	b	405630 <_start@@Base+0x15c>
  4056ac:	nop
  4056b0:	stp	x29, x30, [sp, #-176]!
  4056b4:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4056b8:	mov	x29, sp
  4056bc:	ldr	w0, [x0, #680]
  4056c0:	stp	x19, x20, [sp, #16]
  4056c4:	mov	x20, x1
  4056c8:	mov	x19, x2
  4056cc:	cbz	w0, 405704 <_start@@Base+0x230>
  4056d0:	ldr	w2, [x20]
  4056d4:	mov	x3, x19
  4056d8:	mov	x1, #0x1                   	// #1
  4056dc:	mov	x0, x20
  4056e0:	add	w2, w2, #0x3
  4056e4:	and	x2, x2, #0xfffffffc
  4056e8:	bl	404eb0 <fwrite@plt>
  4056ec:	mov	x0, x19
  4056f0:	bl	404ed0 <fflush@plt>
  4056f4:	mov	w0, #0x0                   	// #0
  4056f8:	ldp	x19, x20, [sp, #16]
  4056fc:	ldp	x29, x30, [sp], #176
  405700:	ret
  405704:	mov	x2, #0x18                  	// #24
  405708:	add	x0, sp, #0x20
  40570c:	movk	x2, #0xf, lsl #32
  405710:	mov	x1, #0x0                   	// #0
  405714:	str	x2, [sp, #48]
  405718:	str	xzr, [sp, #56]
  40571c:	bl	404d00 <gettimeofday@plt>
  405720:	ldr	q0, [sp, #32]
  405724:	mov	x3, x19
  405728:	ldr	w2, [sp, #48]
  40572c:	add	x0, sp, #0x30
  405730:	mov	x1, #0x1                   	// #1
  405734:	xtn	v0.2s, v0.2d
  405738:	add	w2, w2, #0x3
  40573c:	and	x2, x2, #0xfffffffc
  405740:	str	d0, [sp, #64]
  405744:	bl	404eb0 <fwrite@plt>
  405748:	b	4056d0 <_start@@Base+0x1fc>
  40574c:	nop

0000000000405750 <read_prop@@Base>:
  405750:	stp	x29, x30, [sp, #-288]!
  405754:	mov	x3, x0
  405758:	mov	x4, x1
  40575c:	mov	x29, sp
  405760:	str	x23, [sp, #48]
  405764:	add	x23, sp, #0xa0
  405768:	mov	x0, x23
  40576c:	stp	x21, x22, [sp, #32]
  405770:	mov	x21, x1
  405774:	mov	x22, x2
  405778:	mov	x1, #0x80                  	// #128
  40577c:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  405780:	add	x2, x2, #0x5b8
  405784:	bl	404c40 <snprintf@plt>
  405788:	sub	w0, w0, #0x1
  40578c:	cmp	w0, #0x7e
  405790:	b.hi	405894 <read_prop@@Base+0x144>  // b.pmore
  405794:	mov	x0, x23
  405798:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40579c:	add	x1, x1, #0x5f8
  4057a0:	stp	x19, x20, [sp, #16]
  4057a4:	bl	404ee0 <fopen64@plt>
  4057a8:	mov	x19, x0
  4057ac:	cbz	x0, 4058e0 <read_prop@@Base+0x190>
  4057b0:	add	x20, sp, #0x50
  4057b4:	mov	x2, x0
  4057b8:	mov	w1, #0x50                  	// #80
  4057bc:	mov	x0, x20
  4057c0:	bl	405030 <fgets@plt>
  4057c4:	cbz	x0, 40591c <read_prop@@Base+0x1cc>
  4057c8:	mov	x0, x20
  4057cc:	mov	w1, #0xa                   	// #10
  4057d0:	bl	404e90 <strchr@plt>
  4057d4:	cbz	x0, 4057dc <read_prop@@Base+0x8c>
  4057d8:	strb	wzr, [x0]
  4057dc:	mov	x0, x19
  4057e0:	bl	404c70 <fclose@plt>
  4057e4:	add	x1, sp, #0x48
  4057e8:	mov	x0, x20
  4057ec:	mov	w2, #0x0                   	// #0
  4057f0:	bl	404e10 <strtol@plt>
  4057f4:	ldr	x1, [sp, #72]
  4057f8:	mov	x19, x0
  4057fc:	ldrb	w0, [x1]
  405800:	cmp	w0, #0x0
  405804:	ccmp	x20, x1, #0x4, eq  // eq = none
  405808:	b.eq	4058bc <read_prop@@Base+0x16c>  // b.none
  40580c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  405810:	add	x0, x19, x0
  405814:	cmn	x0, #0x3
  405818:	b.hi	405838 <read_prop@@Base+0xe8>  // b.pmore
  40581c:	str	x19, [x22]
  405820:	mov	w0, #0x0                   	// #0
  405824:	ldp	x19, x20, [sp, #16]
  405828:	ldp	x21, x22, [sp, #32]
  40582c:	ldr	x23, [sp, #48]
  405830:	ldp	x29, x30, [sp], #288
  405834:	ret
  405838:	bl	404fd0 <__errno_location@plt>
  40583c:	ldr	w0, [x0]
  405840:	cmp	w0, #0x22
  405844:	b.ne	40581c <read_prop@@Base+0xcc>  // b.any
  405848:	adrp	x22, 421000 <_IO_stdin_used@@Base+0x13c90>
  40584c:	ldr	x1, [x22, #3992]
  405850:	ldr	x19, [x1]
  405854:	bl	404d70 <strerror@plt>
  405858:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40585c:	mov	x3, x0
  405860:	add	x1, x1, #0x668
  405864:	mov	x0, x19
  405868:	mov	x2, x23
  40586c:	bl	405020 <fprintf@plt>
  405870:	ldr	x22, [x22, #3992]
  405874:	mov	x2, x23
  405878:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40587c:	add	x1, x1, #0x678
  405880:	ldr	x0, [x22]
  405884:	bl	405020 <fprintf@plt>
  405888:	mov	w0, #0xffffffff            	// #-1
  40588c:	ldp	x19, x20, [sp, #16]
  405890:	b	405828 <read_prop@@Base+0xd8>
  405894:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  405898:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40589c:	mov	x2, #0x26                  	// #38
  4058a0:	add	x0, x0, #0x5d0
  4058a4:	ldr	x3, [x3, #3992]
  4058a8:	mov	x1, #0x1                   	// #1
  4058ac:	ldr	x3, [x3]
  4058b0:	bl	404eb0 <fwrite@plt>
  4058b4:	mov	w0, #0xffffffff            	// #-1
  4058b8:	b	405828 <read_prop@@Base+0xd8>
  4058bc:	adrp	x22, 421000 <_IO_stdin_used@@Base+0x13c90>
  4058c0:	mov	x2, x20
  4058c4:	mov	x3, x23
  4058c8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4058cc:	ldr	x0, [x22, #3992]
  4058d0:	add	x1, x1, #0x640
  4058d4:	ldr	x0, [x0]
  4058d8:	bl	405020 <fprintf@plt>
  4058dc:	b	405870 <read_prop@@Base+0x120>
  4058e0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  4058e4:	ldr	x0, [x0, #3992]
  4058e8:	ldr	x19, [x0]
  4058ec:	bl	404fd0 <__errno_location@plt>
  4058f0:	ldr	w0, [x0]
  4058f4:	bl	404d70 <strerror@plt>
  4058f8:	mov	x3, x0
  4058fc:	mov	x2, x23
  405900:	mov	x0, x19
  405904:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405908:	add	x1, x1, #0x600
  40590c:	bl	405020 <fprintf@plt>
  405910:	mov	w0, #0xffffffff            	// #-1
  405914:	ldp	x19, x20, [sp, #16]
  405918:	b	405828 <read_prop@@Base+0xd8>
  40591c:	adrp	x22, 421000 <_IO_stdin_used@@Base+0x13c90>
  405920:	mov	x2, x21
  405924:	mov	x3, x23
  405928:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40592c:	ldr	x0, [x22, #3992]
  405930:	add	x1, x1, #0x610
  405934:	ldr	x0, [x0]
  405938:	bl	405020 <fprintf@plt>
  40593c:	mov	x0, x19
  405940:	bl	404c70 <fclose@plt>
  405944:	b	405870 <read_prop@@Base+0x120>

0000000000405948 <get_hex@@Base>:
  405948:	and	w0, w0, #0xff
  40594c:	sub	w1, w0, #0x41
  405950:	and	w1, w1, #0xff
  405954:	cmp	w1, #0x5
  405958:	b.ls	405988 <get_hex@@Base+0x40>  // b.plast
  40595c:	sub	w1, w0, #0x61
  405960:	and	w1, w1, #0xff
  405964:	cmp	w1, #0x5
  405968:	b.ls	405980 <get_hex@@Base+0x38>  // b.plast
  40596c:	sub	w0, w0, #0x30
  405970:	and	w1, w0, #0xff
  405974:	cmp	w1, #0x9
  405978:	csinv	w0, w0, wzr, ls  // ls = plast
  40597c:	ret
  405980:	sub	w0, w0, #0x57
  405984:	ret
  405988:	sub	w0, w0, #0x37
  40598c:	ret

0000000000405990 <get_integer@@Base>:
  405990:	cbz	x1, 405a1c <get_integer@@Base+0x8c>
  405994:	stp	x29, x30, [sp, #-48]!
  405998:	mov	x29, sp
  40599c:	stp	x19, x20, [sp, #16]
  4059a0:	mov	x20, x0
  4059a4:	mov	x19, x1
  4059a8:	ldrb	w0, [x1]
  4059ac:	cbz	w0, 405a14 <get_integer@@Base+0x84>
  4059b0:	add	x1, sp, #0x28
  4059b4:	mov	x0, x19
  4059b8:	bl	404e10 <strtol@plt>
  4059bc:	mov	x1, x0
  4059c0:	ldr	x2, [sp, #40]
  4059c4:	cmp	x2, #0x0
  4059c8:	ccmp	x2, x19, #0x4, ne  // ne = any
  4059cc:	b.eq	405a14 <get_integer@@Base+0x84>  // b.none
  4059d0:	ldrb	w0, [x2]
  4059d4:	cbnz	w0, 405a14 <get_integer@@Base+0x84>
  4059d8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4059dc:	add	x0, x1, x0
  4059e0:	cmn	x0, #0x3
  4059e4:	mov	w0, #0xffffffff            	// #-1
  4059e8:	b.hi	405a08 <get_integer@@Base+0x78>  // b.pmore
  4059ec:	mov	x0, #0x80000000            	// #2147483648
  4059f0:	add	x0, x1, x0
  4059f4:	mov	x2, #0xffffffff            	// #4294967295
  4059f8:	cmp	x0, x2
  4059fc:	b.hi	405a14 <get_integer@@Base+0x84>  // b.pmore
  405a00:	mov	w0, #0x0                   	// #0
  405a04:	str	w1, [x20]
  405a08:	ldp	x19, x20, [sp, #16]
  405a0c:	ldp	x29, x30, [sp], #48
  405a10:	ret
  405a14:	mov	w0, #0xffffffff            	// #-1
  405a18:	b	405a08 <get_integer@@Base+0x78>
  405a1c:	mov	w0, #0xffffffff            	// #-1
  405a20:	ret
  405a24:	nop

0000000000405a28 <mask2bits@@Base>:
  405a28:	rev	w1, w0
  405a2c:	neg	w0, w1
  405a30:	bics	w0, w0, w1
  405a34:	b.ne	405a58 <mask2bits@@Base+0x30>  // b.any
  405a38:	cbz	w1, 405a50 <mask2bits@@Base+0x28>
  405a3c:	nop
  405a40:	add	w0, w0, #0x1
  405a44:	lsl	w1, w1, #1
  405a48:	cbnz	w1, 405a40 <mask2bits@@Base+0x18>
  405a4c:	ret
  405a50:	mov	w0, #0x0                   	// #0
  405a54:	ret
  405a58:	mov	w0, #0xffffffff            	// #-1
  405a5c:	ret

0000000000405a60 <get_unsigned@@Base>:
  405a60:	cbz	x1, 405ae0 <get_unsigned@@Base+0x80>
  405a64:	stp	x29, x30, [sp, #-48]!
  405a68:	mov	x29, sp
  405a6c:	stp	x19, x20, [sp, #16]
  405a70:	mov	x20, x0
  405a74:	mov	x19, x1
  405a78:	ldrb	w0, [x1]
  405a7c:	cbz	w0, 405ad0 <get_unsigned@@Base+0x70>
  405a80:	add	x1, sp, #0x28
  405a84:	mov	x0, x19
  405a88:	bl	404b50 <strtoul@plt>
  405a8c:	mov	x1, x0
  405a90:	ldr	x2, [sp, #40]
  405a94:	mov	x0, #0xffffffff            	// #4294967295
  405a98:	cmp	x1, x0
  405a9c:	cset	w0, hi  // hi = pmore
  405aa0:	cmp	x2, #0x0
  405aa4:	ccmp	x2, x19, #0x4, ne  // ne = any
  405aa8:	b.eq	405ad0 <get_unsigned@@Base+0x70>  // b.none
  405aac:	ldrb	w2, [x2]
  405ab0:	cmp	w2, #0x0
  405ab4:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  405ab8:	b.ne	405ad0 <get_unsigned@@Base+0x70>  // b.any
  405abc:	str	w1, [x20]
  405ac0:	mov	w0, #0x0                   	// #0
  405ac4:	ldp	x19, x20, [sp, #16]
  405ac8:	ldp	x29, x30, [sp], #48
  405acc:	ret
  405ad0:	mov	w0, #0xffffffff            	// #-1
  405ad4:	ldp	x19, x20, [sp, #16]
  405ad8:	ldp	x29, x30, [sp], #48
  405adc:	ret
  405ae0:	mov	w0, #0xffffffff            	// #-1
  405ae4:	ret

0000000000405ae8 <get_time_rtt@@Base>:
  405ae8:	stp	x29, x30, [sp, #-80]!
  405aec:	mov	x29, sp
  405af0:	stp	x19, x20, [sp, #16]
  405af4:	mov	x20, x1
  405af8:	stp	x21, x22, [sp, #32]
  405afc:	mov	x22, x2
  405b00:	str	x23, [sp, #48]
  405b04:	mov	x23, x0
  405b08:	mov	x0, x1
  405b0c:	mov	w1, #0x2e                  	// #46
  405b10:	str	d8, [sp, #56]
  405b14:	bl	404e90 <strchr@plt>
  405b18:	cbz	x0, 405c28 <get_time_rtt@@Base+0x140>
  405b1c:	add	x1, sp, #0x48
  405b20:	mov	x0, x20
  405b24:	bl	404ba0 <strtod@plt>
  405b28:	fcmpe	d0, #0.0
  405b2c:	fmov	d8, d0
  405b30:	b.mi	405cb8 <get_time_rtt@@Base+0x1d0>  // b.first
  405b34:	ldr	x21, [sp, #72]
  405b38:	cmp	x21, #0x0
  405b3c:	ccmp	x21, x20, #0x4, ne  // ne = any
  405b40:	b.eq	405cb8 <get_time_rtt@@Base+0x1d0>  // b.none
  405b44:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
  405b48:	fmov	d0, x0
  405b4c:	fcmp	d8, d0
  405b50:	b.ne	405c68 <get_time_rtt@@Base+0x180>  // b.any
  405b54:	bl	404fd0 <__errno_location@plt>
  405b58:	ldr	w0, [x0]
  405b5c:	cmp	w0, #0x22
  405b60:	b.eq	405cb8 <get_time_rtt@@Base+0x1d0>  // b.none
  405b64:	mov	w0, #0x1                   	// #1
  405b68:	str	w0, [x22]
  405b6c:	mov	w1, #0xffffffff            	// #-1
  405b70:	ldrb	w0, [x21]
  405b74:	cbz	w0, 405cb0 <get_time_rtt@@Base+0x1c8>
  405b78:	str	wzr, [x22]
  405b7c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  405b80:	mov	x0, x21
  405b84:	add	x1, x1, #0x50
  405b88:	bl	404d30 <strcasecmp@plt>
  405b8c:	cbz	w0, 405c90 <get_time_rtt@@Base+0x1a8>
  405b90:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405b94:	mov	x0, x21
  405b98:	add	x1, x1, #0x690
  405b9c:	bl	404d30 <strcasecmp@plt>
  405ba0:	cbz	w0, 405c90 <get_time_rtt@@Base+0x1a8>
  405ba4:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405ba8:	mov	x0, x21
  405bac:	add	x1, x1, #0x698
  405bb0:	bl	404d30 <strcasecmp@plt>
  405bb4:	cbz	w0, 405c90 <get_time_rtt@@Base+0x1a8>
  405bb8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405bbc:	mov	x0, x21
  405bc0:	add	x1, x1, #0x6a0
  405bc4:	bl	404d30 <strcasecmp@plt>
  405bc8:	cbz	w0, 405bf8 <get_time_rtt@@Base+0x110>
  405bcc:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405bd0:	mov	x0, x21
  405bd4:	add	x1, x1, #0x6a8
  405bd8:	bl	404d30 <strcasecmp@plt>
  405bdc:	cbz	w0, 405bf8 <get_time_rtt@@Base+0x110>
  405be0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  405be4:	mov	x0, x21
  405be8:	add	x1, x1, #0x6b0
  405bec:	bl	404d30 <strcasecmp@plt>
  405bf0:	cbnz	w0, 405cb8 <get_time_rtt@@Base+0x1d0>
  405bf4:	nop
  405bf8:	fcvtzu	w1, d8
  405bfc:	ucvtf	d0, w1
  405c00:	fcmpe	d0, d8
  405c04:	b.mi	405cb0 <get_time_rtt@@Base+0x1c8>  // b.first
  405c08:	mov	w0, #0x0                   	// #0
  405c0c:	str	w1, [x23]
  405c10:	ldp	x19, x20, [sp, #16]
  405c14:	ldp	x21, x22, [sp, #32]
  405c18:	ldr	x23, [sp, #48]
  405c1c:	ldr	d8, [sp, #56]
  405c20:	ldp	x29, x30, [sp], #80
  405c24:	ret
  405c28:	add	x1, sp, #0x48
  405c2c:	mov	x0, x20
  405c30:	mov	w2, #0x0                   	// #0
  405c34:	bl	404b50 <strtoul@plt>
  405c38:	ldr	x21, [sp, #72]
  405c3c:	mov	x19, x0
  405c40:	cmp	x21, #0x0
  405c44:	ccmp	x21, x20, #0x4, ne  // ne = any
  405c48:	b.eq	405cb8 <get_time_rtt@@Base+0x1d0>  // b.none
  405c4c:	cmn	x0, #0x1
  405c50:	b.ne	405c64 <get_time_rtt@@Base+0x17c>  // b.any
  405c54:	bl	404fd0 <__errno_location@plt>
  405c58:	ldr	w0, [x0]
  405c5c:	cmp	w0, #0x22
  405c60:	b.eq	405cb8 <get_time_rtt@@Base+0x1d0>  // b.none
  405c64:	ucvtf	d8, x19
  405c68:	mov	w0, #0x1                   	// #1
  405c6c:	str	w0, [x22]
  405c70:	ldrb	w0, [x21]
  405c74:	cbz	w0, 405bf8 <get_time_rtt@@Base+0x110>
  405c78:	str	wzr, [x22]
  405c7c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  405c80:	mov	x0, x21
  405c84:	add	x1, x1, #0x50
  405c88:	bl	404d30 <strcasecmp@plt>
  405c8c:	cbnz	w0, 405b90 <get_time_rtt@@Base+0xa8>
  405c90:	mov	x0, #0x400000000000        	// #70368744177664
  405c94:	movk	x0, #0x408f, lsl #48
  405c98:	fmov	d0, x0
  405c9c:	fmul	d8, d8, d0
  405ca0:	fcvtzu	w1, d8
  405ca4:	ucvtf	d0, w1
  405ca8:	fcmpe	d0, d8
  405cac:	b.pl	405c08 <get_time_rtt@@Base+0x120>  // b.nfrst
  405cb0:	add	w1, w1, #0x1
  405cb4:	b	405c08 <get_time_rtt@@Base+0x120>
  405cb8:	mov	w0, #0xffffffff            	// #-1
  405cbc:	b	405c10 <get_time_rtt@@Base+0x128>

0000000000405cc0 <get_u64@@Base>:
  405cc0:	cbz	x1, 405d48 <get_u64@@Base+0x88>
  405cc4:	stp	x29, x30, [sp, #-64]!
  405cc8:	mov	x29, sp
  405ccc:	stp	x19, x20, [sp, #16]
  405cd0:	mov	x19, x1
  405cd4:	str	x21, [sp, #32]
  405cd8:	mov	x21, x0
  405cdc:	ldrb	w0, [x1]
  405ce0:	cbz	w0, 405d40 <get_u64@@Base+0x80>
  405ce4:	add	x1, sp, #0x38
  405ce8:	mov	x0, x19
  405cec:	bl	404ea0 <strtoull@plt>
  405cf0:	mov	x20, x0
  405cf4:	ldr	x1, [sp, #56]
  405cf8:	cmp	x1, #0x0
  405cfc:	ccmp	x1, x19, #0x4, ne  // ne = any
  405d00:	b.eq	405d40 <get_u64@@Base+0x80>  // b.none
  405d04:	ldrb	w0, [x1]
  405d08:	cbnz	w0, 405d40 <get_u64@@Base+0x80>
  405d0c:	cmn	x20, #0x1
  405d10:	b.eq	405d2c <get_u64@@Base+0x6c>  // b.none
  405d14:	mov	w0, #0x0                   	// #0
  405d18:	str	x20, [x21]
  405d1c:	ldp	x19, x20, [sp, #16]
  405d20:	ldr	x21, [sp, #32]
  405d24:	ldp	x29, x30, [sp], #64
  405d28:	ret
  405d2c:	bl	404fd0 <__errno_location@plt>
  405d30:	ldr	w0, [x0]
  405d34:	cmp	w0, #0x22
  405d38:	b.ne	405d14 <get_u64@@Base+0x54>  // b.any
  405d3c:	nop
  405d40:	mov	w0, #0xffffffff            	// #-1
  405d44:	b	405d1c <get_u64@@Base+0x5c>
  405d48:	mov	w0, #0xffffffff            	// #-1
  405d4c:	ret

0000000000405d50 <get_u32@@Base>:
  405d50:	cbz	x1, 405dd0 <get_u32@@Base+0x80>
  405d54:	stp	x29, x30, [sp, #-48]!
  405d58:	mov	x29, sp
  405d5c:	stp	x19, x20, [sp, #16]
  405d60:	mov	x20, x0
  405d64:	mov	x19, x1
  405d68:	ldrb	w0, [x1]
  405d6c:	cbz	w0, 405dc0 <get_u32@@Base+0x70>
  405d70:	add	x1, sp, #0x28
  405d74:	mov	x0, x19
  405d78:	bl	404b50 <strtoul@plt>
  405d7c:	mov	x1, x0
  405d80:	ldr	x2, [sp, #40]
  405d84:	mov	x0, #0xffffffff            	// #4294967295
  405d88:	cmp	x1, x0
  405d8c:	cset	w0, hi  // hi = pmore
  405d90:	cmp	x2, #0x0
  405d94:	ccmp	x19, x2, #0x4, ne  // ne = any
  405d98:	b.eq	405dc0 <get_u32@@Base+0x70>  // b.none
  405d9c:	ldrb	w2, [x2]
  405da0:	cmp	w2, #0x0
  405da4:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  405da8:	b.ne	405dc0 <get_u32@@Base+0x70>  // b.any
  405dac:	str	w1, [x20]
  405db0:	mov	w0, #0x0                   	// #0
  405db4:	ldp	x19, x20, [sp, #16]
  405db8:	ldp	x29, x30, [sp], #48
  405dbc:	ret
  405dc0:	mov	w0, #0xffffffff            	// #-1
  405dc4:	ldp	x19, x20, [sp, #16]
  405dc8:	ldp	x29, x30, [sp], #48
  405dcc:	ret
  405dd0:	mov	w0, #0xffffffff            	// #-1
  405dd4:	ret

0000000000405dd8 <get_u16@@Base>:
  405dd8:	cbz	x1, 405e58 <get_u16@@Base+0x80>
  405ddc:	stp	x29, x30, [sp, #-48]!
  405de0:	mov	x29, sp
  405de4:	stp	x19, x20, [sp, #16]
  405de8:	mov	x20, x0
  405dec:	mov	x19, x1
  405df0:	ldrb	w0, [x1]
  405df4:	cbz	w0, 405e48 <get_u16@@Base+0x70>
  405df8:	add	x1, sp, #0x28
  405dfc:	mov	x0, x19
  405e00:	bl	404b50 <strtoul@plt>
  405e04:	mov	x1, x0
  405e08:	ldr	x2, [sp, #40]
  405e0c:	mov	x0, #0xffff                	// #65535
  405e10:	cmp	x1, x0
  405e14:	cset	w0, hi  // hi = pmore
  405e18:	cmp	x2, #0x0
  405e1c:	ccmp	x2, x19, #0x4, ne  // ne = any
  405e20:	b.eq	405e48 <get_u16@@Base+0x70>  // b.none
  405e24:	ldrb	w2, [x2]
  405e28:	cmp	w2, #0x0
  405e2c:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  405e30:	b.ne	405e48 <get_u16@@Base+0x70>  // b.any
  405e34:	strh	w1, [x20]
  405e38:	mov	w0, #0x0                   	// #0
  405e3c:	ldp	x19, x20, [sp, #16]
  405e40:	ldp	x29, x30, [sp], #48
  405e44:	ret
  405e48:	mov	w0, #0xffffffff            	// #-1
  405e4c:	ldp	x19, x20, [sp, #16]
  405e50:	ldp	x29, x30, [sp], #48
  405e54:	ret
  405e58:	mov	w0, #0xffffffff            	// #-1
  405e5c:	ret

0000000000405e60 <get_u8@@Base>:
  405e60:	cbz	x1, 405edc <get_u8@@Base+0x7c>
  405e64:	stp	x29, x30, [sp, #-48]!
  405e68:	mov	x29, sp
  405e6c:	stp	x19, x20, [sp, #16]
  405e70:	mov	x20, x0
  405e74:	mov	x19, x1
  405e78:	ldrb	w0, [x1]
  405e7c:	cbz	w0, 405ecc <get_u8@@Base+0x6c>
  405e80:	add	x1, sp, #0x28
  405e84:	mov	x0, x19
  405e88:	bl	404b50 <strtoul@plt>
  405e8c:	cmp	x0, #0xff
  405e90:	ldr	x2, [sp, #40]
  405e94:	mov	x1, x0
  405e98:	cset	w0, hi  // hi = pmore
  405e9c:	cmp	x2, #0x0
  405ea0:	ccmp	x2, x19, #0x4, ne  // ne = any
  405ea4:	b.eq	405ecc <get_u8@@Base+0x6c>  // b.none
  405ea8:	ldrb	w2, [x2]
  405eac:	cmp	w2, #0x0
  405eb0:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  405eb4:	b.ne	405ecc <get_u8@@Base+0x6c>  // b.any
  405eb8:	strb	w1, [x20]
  405ebc:	mov	w0, #0x0                   	// #0
  405ec0:	ldp	x19, x20, [sp, #16]
  405ec4:	ldp	x29, x30, [sp], #48
  405ec8:	ret
  405ecc:	mov	w0, #0xffffffff            	// #-1
  405ed0:	ldp	x19, x20, [sp, #16]
  405ed4:	ldp	x29, x30, [sp], #48
  405ed8:	ret
  405edc:	mov	w0, #0xffffffff            	// #-1
  405ee0:	ret
  405ee4:	nop

0000000000405ee8 <get_s64@@Base>:
  405ee8:	stp	x29, x30, [sp, #-64]!
  405eec:	mov	x29, sp
  405ef0:	stp	x19, x20, [sp, #16]
  405ef4:	mov	x19, x1
  405ef8:	stp	x21, x22, [sp, #32]
  405efc:	mov	x22, x0
  405f00:	mov	w21, w2
  405f04:	bl	404fd0 <__errno_location@plt>
  405f08:	str	wzr, [x0]
  405f0c:	cbz	x19, 405f80 <get_s64@@Base+0x98>
  405f10:	mov	x20, x0
  405f14:	ldrb	w0, [x19]
  405f18:	cbz	w0, 405f80 <get_s64@@Base+0x98>
  405f1c:	mov	w2, w21
  405f20:	add	x1, sp, #0x38
  405f24:	mov	x0, x19
  405f28:	bl	404b90 <strtoll@plt>
  405f2c:	ldr	x2, [sp, #56]
  405f30:	mov	x1, x0
  405f34:	cmp	x2, #0x0
  405f38:	ccmp	x2, x19, #0x4, ne  // ne = any
  405f3c:	b.eq	405f80 <get_s64@@Base+0x98>  // b.none
  405f40:	ldrb	w0, [x2]
  405f44:	cbnz	w0, 405f80 <get_s64@@Base+0x98>
  405f48:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  405f4c:	add	x0, x1, x0
  405f50:	cmn	x0, #0x3
  405f54:	b.hi	405f70 <get_s64@@Base+0x88>  // b.pmore
  405f58:	mov	w0, #0x0                   	// #0
  405f5c:	str	x1, [x22]
  405f60:	ldp	x19, x20, [sp, #16]
  405f64:	ldp	x21, x22, [sp, #32]
  405f68:	ldp	x29, x30, [sp], #64
  405f6c:	ret
  405f70:	ldr	w0, [x20]
  405f74:	cmp	w0, #0x22
  405f78:	b.ne	405f58 <get_s64@@Base+0x70>  // b.any
  405f7c:	nop
  405f80:	mov	w0, #0xffffffff            	// #-1
  405f84:	b	405f60 <get_s64@@Base+0x78>

0000000000405f88 <get_s32@@Base>:
  405f88:	stp	x29, x30, [sp, #-64]!
  405f8c:	mov	x29, sp
  405f90:	stp	x19, x20, [sp, #16]
  405f94:	mov	x19, x1
  405f98:	mov	w20, w2
  405f9c:	str	x21, [sp, #32]
  405fa0:	mov	x21, x0
  405fa4:	bl	404fd0 <__errno_location@plt>
  405fa8:	str	wzr, [x0]
  405fac:	cbz	x19, 406024 <get_s32@@Base+0x9c>
  405fb0:	ldrb	w0, [x19]
  405fb4:	cbz	w0, 406024 <get_s32@@Base+0x9c>
  405fb8:	mov	w2, w20
  405fbc:	add	x1, sp, #0x38
  405fc0:	mov	x0, x19
  405fc4:	bl	404e10 <strtol@plt>
  405fc8:	ldr	x2, [sp, #56]
  405fcc:	mov	x1, x0
  405fd0:	cmp	x2, #0x0
  405fd4:	ccmp	x2, x19, #0x4, ne  // ne = any
  405fd8:	b.eq	406024 <get_s32@@Base+0x9c>  // b.none
  405fdc:	ldrb	w0, [x2]
  405fe0:	cbnz	w0, 406024 <get_s32@@Base+0x9c>
  405fe4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  405fe8:	add	x0, x1, x0
  405fec:	cmn	x0, #0x3
  405ff0:	mov	w0, #0xffffffff            	// #-1
  405ff4:	b.hi	406014 <get_s32@@Base+0x8c>  // b.pmore
  405ff8:	mov	x0, #0x80000000            	// #2147483648
  405ffc:	add	x0, x1, x0
  406000:	mov	x2, #0xffffffff            	// #4294967295
  406004:	cmp	x0, x2
  406008:	b.hi	406024 <get_s32@@Base+0x9c>  // b.pmore
  40600c:	mov	w0, #0x0                   	// #0
  406010:	str	w1, [x21]
  406014:	ldp	x19, x20, [sp, #16]
  406018:	ldr	x21, [sp, #32]
  40601c:	ldp	x29, x30, [sp], #64
  406020:	ret
  406024:	mov	w0, #0xffffffff            	// #-1
  406028:	b	406014 <get_s32@@Base+0x8c>
  40602c:	nop

0000000000406030 <get_be64@@Base>:
  406030:	stp	x29, x30, [sp, #-48]!
  406034:	mov	x29, sp
  406038:	str	x19, [sp, #16]
  40603c:	mov	x19, x0
  406040:	add	x0, sp, #0x28
  406044:	bl	405cc0 <get_u64@@Base>
  406048:	cbnz	w0, 406064 <get_be64@@Base+0x34>
  40604c:	ldr	x1, [sp, #40]
  406050:	rev	w2, w1
  406054:	lsr	x1, x1, #32
  406058:	rev	w1, w1
  40605c:	orr	x1, x1, x2, lsl #32
  406060:	str	x1, [x19]
  406064:	ldr	x19, [sp, #16]
  406068:	ldp	x29, x30, [sp], #48
  40606c:	ret

0000000000406070 <get_be32@@Base>:
  406070:	stp	x29, x30, [sp, #-48]!
  406074:	mov	x29, sp
  406078:	str	x19, [sp, #16]
  40607c:	mov	x19, x0
  406080:	add	x0, sp, #0x2c
  406084:	bl	405d50 <get_u32@@Base>
  406088:	cbnz	w0, 406098 <get_be32@@Base+0x28>
  40608c:	ldr	w1, [sp, #44]
  406090:	rev	w1, w1
  406094:	str	w1, [x19]
  406098:	ldr	x19, [sp, #16]
  40609c:	ldp	x29, x30, [sp], #48
  4060a0:	ret
  4060a4:	nop

00000000004060a8 <get_be16@@Base>:
  4060a8:	stp	x29, x30, [sp, #-48]!
  4060ac:	mov	x29, sp
  4060b0:	str	x19, [sp, #16]
  4060b4:	mov	x19, x0
  4060b8:	add	x0, sp, #0x2e
  4060bc:	bl	405dd8 <get_u16@@Base>
  4060c0:	cbnz	w0, 4060d0 <get_be16@@Base+0x28>
  4060c4:	ldrh	w1, [sp, #46]
  4060c8:	rev16	w1, w1
  4060cc:	strh	w1, [x19]
  4060d0:	ldr	x19, [sp, #16]
  4060d4:	ldp	x29, x30, [sp], #48
  4060d8:	ret
  4060dc:	nop

00000000004060e0 <get_addr64@@Base>:
  4060e0:	stp	x29, x30, [sp, #-80]!
  4060e4:	mov	x29, sp
  4060e8:	stp	x19, x20, [sp, #16]
  4060ec:	mov	x19, x1
  4060f0:	mov	w20, #0x0                   	// #0
  4060f4:	stp	x21, x22, [sp, #32]
  4060f8:	mov	x22, x0
  4060fc:	add	x21, sp, #0x40
  406100:	stp	x23, x24, [sp, #48]
  406104:	add	x24, sp, #0x48
  406108:	mov	x23, #0xffff                	// #65535
  40610c:	mov	x1, x24
  406110:	mov	x0, x19
  406114:	mov	w2, #0x10                  	// #16
  406118:	bl	404b50 <strtoul@plt>
  40611c:	rev16	w4, w0
  406120:	cmp	x0, x23
  406124:	b.hi	406158 <get_addr64@@Base+0x78>  // b.pmore
  406128:	ldr	x2, [sp, #72]
  40612c:	cmp	x2, x19
  406130:	b.eq	406158 <get_addr64@@Base+0x78>  // b.none
  406134:	ldrb	w3, [x2]
  406138:	add	x19, x2, #0x1
  40613c:	strh	w4, [x21]
  406140:	add	x21, x21, #0x2
  406144:	cmp	w3, #0x3a
  406148:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  40614c:	add	w20, w20, #0x1
  406150:	cbz	w3, 406170 <get_addr64@@Base+0x90>
  406154:	b.ne	40610c <get_addr64@@Base+0x2c>  // b.any
  406158:	mov	w0, #0xffffffff            	// #-1
  40615c:	ldp	x19, x20, [sp, #16]
  406160:	ldp	x21, x22, [sp, #32]
  406164:	ldp	x23, x24, [sp, #48]
  406168:	ldp	x29, x30, [sp], #80
  40616c:	ret
  406170:	ldr	x1, [sp, #64]
  406174:	mov	w0, #0x1                   	// #1
  406178:	str	x1, [x22]
  40617c:	b	40615c <get_addr64@@Base+0x7c>

0000000000406180 <af_bit_len@@Base>:
  406180:	sub	w0, w0, #0x2
  406184:	cmp	w0, #0x1a
  406188:	b.hi	40619c <af_bit_len@@Base+0x1c>  // b.pmore
  40618c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406190:	add	x1, x1, #0xb20
  406194:	ldr	w0, [x1, w0, uxtw #2]
  406198:	ret
  40619c:	mov	w0, #0x0                   	// #0
  4061a0:	ret
  4061a4:	nop

00000000004061a8 <get_addr_1@@Base>:
  4061a8:	stp	x29, x30, [sp, #-80]!
  4061ac:	mov	x29, sp
  4061b0:	stp	x21, x22, [sp, #32]
  4061b4:	mov	w21, w2
  4061b8:	mov	x2, #0x108                 	// #264
  4061bc:	stp	x19, x20, [sp, #16]
  4061c0:	mov	x20, x1
  4061c4:	mov	x19, x0
  4061c8:	mov	w1, #0x0                   	// #0
  4061cc:	bl	404cf0 <memset@plt>
  4061d0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4061d4:	mov	x0, x20
  4061d8:	add	x1, x1, #0x6b8
  4061dc:	bl	404df0 <strcmp@plt>
  4061e0:	cbnz	w0, 40626c <get_addr_1@@Base+0xc4>
  4061e4:	and	w0, w21, #0xffffffef
  4061e8:	cmp	w0, #0xc
  4061ec:	b.eq	406374 <get_addr_1@@Base+0x1cc>  // b.none
  4061f0:	strh	w21, [x19, #6]
  4061f4:	and	w0, w21, #0xffff
  4061f8:	bl	406180 <af_bit_len@@Base>
  4061fc:	cmp	w0, #0x0
  406200:	add	w1, w0, #0x7
  406204:	ldrh	w2, [x19]
  406208:	csel	w1, w1, w0, lt  // lt = tstop
  40620c:	ldrh	w0, [x19, #6]
  406210:	orr	w2, w2, #0x1
  406214:	mov	w3, #0xfffffffe            	// #-2
  406218:	asr	w1, w1, #3
  40621c:	strh	w2, [x19]
  406220:	strh	w1, [x19, #2]
  406224:	strh	w3, [x19, #4]
  406228:	cmp	w0, #0x2
  40622c:	b.eq	4062a4 <get_addr_1@@Base+0xfc>  // b.none
  406230:	cmp	w0, #0xa
  406234:	b.ne	406338 <get_addr_1@@Base+0x190>  // b.any
  406238:	ldr	w0, [x19, #8]
  40623c:	ldrh	w1, [x19]
  406240:	cbz	w0, 40634c <get_addr_1@@Base+0x1a4>
  406244:	ldrb	w0, [x19, #8]
  406248:	cmp	w0, #0xff
  40624c:	b.eq	4062bc <get_addr_1@@Base+0x114>  // b.none
  406250:	orr	w1, w1, #0x2
  406254:	strh	w1, [x19]
  406258:	mov	w0, #0x0                   	// #0
  40625c:	ldp	x19, x20, [sp, #16]
  406260:	ldp	x21, x22, [sp, #32]
  406264:	ldp	x29, x30, [sp], #80
  406268:	ret
  40626c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406270:	mov	x0, x20
  406274:	add	x1, x1, #0x528
  406278:	bl	404df0 <strcmp@plt>
  40627c:	cbnz	w0, 4062d0 <get_addr_1@@Base+0x128>
  406280:	and	w0, w21, #0xffffffef
  406284:	cmp	w0, #0xc
  406288:	b.eq	406374 <get_addr_1@@Base+0x1cc>  // b.none
  40628c:	and	w0, w21, #0xffff
  406290:	mov	w1, #0xfffffffe            	// #-2
  406294:	strh	w1, [x19, #4]
  406298:	cmp	w0, #0x2
  40629c:	strh	w0, [x19, #6]
  4062a0:	b.ne	406230 <get_addr_1@@Base+0x88>  // b.any
  4062a4:	ldr	w0, [x19, #8]
  4062a8:	ldrh	w1, [x19]
  4062ac:	cbz	w0, 406368 <get_addr_1@@Base+0x1c0>
  4062b0:	and	w0, w0, #0xf0
  4062b4:	cmp	w0, #0xe0
  4062b8:	b.ne	406250 <get_addr_1@@Base+0xa8>  // b.any
  4062bc:	mov	w2, #0xa                   	// #10
  4062c0:	mov	w0, #0x0                   	// #0
  4062c4:	orr	w1, w1, w2
  4062c8:	strh	w1, [x19]
  4062cc:	b	40633c <get_addr_1@@Base+0x194>
  4062d0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4062d4:	mov	x0, x20
  4062d8:	add	x1, x1, #0x6c0
  4062dc:	bl	404df0 <strcmp@plt>
  4062e0:	cbz	w0, 406280 <get_addr_1@@Base+0xd8>
  4062e4:	cmp	w21, #0x11
  4062e8:	b.eq	4063fc <get_addr_1@@Base+0x254>  // b.none
  4062ec:	mov	x0, x20
  4062f0:	mov	w1, #0x3a                  	// #58
  4062f4:	bl	404e90 <strchr@plt>
  4062f8:	cbz	x0, 40637c <get_addr_1@@Base+0x1d4>
  4062fc:	mov	w0, #0xa                   	// #10
  406300:	strh	w0, [x19, #6]
  406304:	cmp	w21, #0x0
  406308:	ccmp	w21, #0xa, #0x4, ne  // ne = any
  40630c:	b.ne	406374 <get_addr_1@@Base+0x1cc>  // b.any
  406310:	mov	x1, x20
  406314:	add	x2, x19, #0x8
  406318:	mov	w0, #0xa                   	// #10
  40631c:	bl	404e60 <inet_pton@plt>
  406320:	cmp	w0, #0x0
  406324:	b.le	406374 <get_addr_1@@Base+0x1cc>
  406328:	mov	w1, #0xffff0010            	// #-65520
  40632c:	ldrh	w0, [x19, #6]
  406330:	stur	w1, [x19, #2]
  406334:	b	406228 <get_addr_1@@Base+0x80>
  406338:	mov	w0, #0x0                   	// #0
  40633c:	ldp	x19, x20, [sp, #16]
  406340:	ldp	x21, x22, [sp, #32]
  406344:	ldp	x29, x30, [sp], #80
  406348:	ret
  40634c:	ldr	w0, [x19, #12]
  406350:	cbnz	w0, 406244 <get_addr_1@@Base+0x9c>
  406354:	ldr	w0, [x19, #16]
  406358:	cbnz	w0, 406244 <get_addr_1@@Base+0x9c>
  40635c:	ldr	w0, [x19, #20]
  406360:	cbnz	w0, 406244 <get_addr_1@@Base+0x9c>
  406364:	nop
  406368:	orr	w1, w1, #0x6
  40636c:	strh	w1, [x19]
  406370:	b	40633c <get_addr_1@@Base+0x194>
  406374:	mov	w0, #0xffffffff            	// #-1
  406378:	b	40633c <get_addr_1@@Base+0x194>
  40637c:	cmp	w21, #0x1c
  406380:	b.eq	406440 <get_addr_1@@Base+0x298>  // b.none
  406384:	mov	w0, #0x2                   	// #2
  406388:	strh	w0, [x19, #6]
  40638c:	tst	w21, #0xfffffffd
  406390:	b.ne	406374 <get_addr_1@@Base+0x1cc>  // b.any
  406394:	add	x22, x19, #0x8
  406398:	str	x23, [sp, #48]
  40639c:	add	x23, sp, #0x48
  4063a0:	mov	x21, #0x0                   	// #0
  4063a4:	mov	x1, x23
  4063a8:	mov	x0, x20
  4063ac:	mov	w2, #0x0                   	// #0
  4063b0:	bl	404b50 <strtoul@plt>
  4063b4:	cmp	x0, #0xff
  4063b8:	b.hi	4063f0 <get_addr_1@@Base+0x248>  // b.pmore
  4063bc:	ldr	x2, [sp, #72]
  4063c0:	cmp	x2, x20
  4063c4:	b.eq	4063f0 <get_addr_1@@Base+0x248>  // b.none
  4063c8:	strb	w0, [x22, x21]
  4063cc:	add	x20, x2, #0x1
  4063d0:	ldrb	w2, [x2]
  4063d4:	cmp	w2, #0x2e
  4063d8:	cset	w0, ne  // ne = any
  4063dc:	cmp	w21, #0x3
  4063e0:	cbz	w2, 40642c <get_addr_1@@Base+0x284>
  4063e4:	csinc	w0, w0, wzr, ne  // ne = any
  4063e8:	add	x21, x21, #0x1
  4063ec:	cbz	w0, 4063a4 <get_addr_1@@Base+0x1fc>
  4063f0:	mov	w0, #0xffffffff            	// #-1
  4063f4:	ldr	x23, [sp, #48]
  4063f8:	b	40633c <get_addr_1@@Base+0x194>
  4063fc:	mov	x2, x20
  406400:	add	x0, x19, #0x8
  406404:	mov	w1, #0x100                 	// #256
  406408:	bl	409108 <ll_addr_a2n@@Base>
  40640c:	tbnz	w0, #31, 406374 <get_addr_1@@Base+0x1cc>
  406410:	and	w1, w0, #0xffff
  406414:	mov	w0, #0x0                   	// #0
  406418:	strh	w1, [x19, #2]
  40641c:	ubfiz	w1, w1, #3, #13
  406420:	strh	w1, [x19, #4]
  406424:	strh	w21, [x19, #6]
  406428:	b	40633c <get_addr_1@@Base+0x194>
  40642c:	mov	w1, #0xffff0004            	// #-65532
  406430:	stur	w1, [x19, #2]
  406434:	ldrh	w0, [x19, #6]
  406438:	ldr	x23, [sp, #48]
  40643c:	b	406228 <get_addr_1@@Base+0x80>
  406440:	strh	w21, [x19, #6]
  406444:	mov	x1, x20
  406448:	mov	w0, w21
  40644c:	add	x2, x19, #0x8
  406450:	mov	x3, #0x100                 	// #256
  406454:	bl	40a080 <mpls_pton@@Base>
  406458:	cmp	w0, #0x0
  40645c:	b.le	406374 <get_addr_1@@Base+0x1cc>
  406460:	mov	w1, #0x4                   	// #4
  406464:	add	x2, x19, #0x4
  406468:	movk	w1, #0x14, lsl #16
  40646c:	mov	x0, #0x1                   	// #1
  406470:	stur	w1, [x19, #2]
  406474:	b	406484 <get_addr_1@@Base+0x2dc>
  406478:	add	x0, x0, #0x1
  40647c:	cmp	x0, #0x41
  406480:	b.eq	4064a0 <get_addr_1@@Base+0x2f8>  // b.none
  406484:	ldr	w1, [x2, x0, lsl #2]
  406488:	rev	w1, w1
  40648c:	tbz	w1, #8, 406478 <get_addr_1@@Base+0x2d0>
  406490:	ubfiz	w1, w0, #2, #14
  406494:	ldrh	w0, [x19, #6]
  406498:	strh	w1, [x19, #2]
  40649c:	b	406228 <get_addr_1@@Base+0x80>
  4064a0:	ldrh	w0, [x19, #6]
  4064a4:	b	406228 <get_addr_1@@Base+0x80>
  4064a8:	stp	x29, x30, [sp, #-320]!
  4064ac:	mov	w2, #0x0                   	// #0
  4064b0:	mov	x29, sp
  4064b4:	stp	x19, x20, [sp, #16]
  4064b8:	mov	x20, x1
  4064bc:	str	x21, [sp, #32]
  4064c0:	mov	x21, x0
  4064c4:	bl	405a60 <get_unsigned@@Base>
  4064c8:	mov	w19, w0
  4064cc:	cbnz	w0, 4064e4 <get_addr_1@@Base+0x33c>
  4064d0:	mov	w0, w19
  4064d4:	ldp	x19, x20, [sp, #16]
  4064d8:	ldr	x21, [sp, #32]
  4064dc:	ldp	x29, x30, [sp], #320
  4064e0:	ret
  4064e4:	mov	x1, x20
  4064e8:	add	x0, sp, #0x38
  4064ec:	mov	w2, #0x2                   	// #2
  4064f0:	bl	4061a8 <get_addr_1@@Base>
  4064f4:	mov	w19, w0
  4064f8:	cbnz	w0, 40652c <get_addr_1@@Base+0x384>
  4064fc:	ldrh	w0, [sp, #62]
  406500:	cmp	w0, #0x2
  406504:	b.ne	40652c <get_addr_1@@Base+0x384>  // b.any
  406508:	ldr	w0, [sp, #64]
  40650c:	bl	405a28 <mask2bits@@Base>
  406510:	tbnz	w0, #31, 40652c <get_addr_1@@Base+0x384>
  406514:	str	w0, [x21]
  406518:	mov	w0, w19
  40651c:	ldp	x19, x20, [sp, #16]
  406520:	ldr	x21, [sp, #32]
  406524:	ldp	x29, x30, [sp], #320
  406528:	ret
  40652c:	mov	w19, #0xffffffff            	// #-1
  406530:	b	4064d0 <get_addr_1@@Base+0x328>
  406534:	nop

0000000000406538 <get_prefix_1@@Base>:
  406538:	stp	x29, x30, [sp, #-64]!
  40653c:	mov	x29, sp
  406540:	stp	x19, x20, [sp, #16]
  406544:	mov	x19, x0
  406548:	mov	x0, x1
  40654c:	stp	x21, x22, [sp, #32]
  406550:	mov	x21, x1
  406554:	mov	w22, w2
  406558:	mov	w1, #0x2f                  	// #47
  40655c:	bl	404e90 <strchr@plt>
  406560:	cbz	x0, 4065f8 <get_prefix_1@@Base+0xc0>
  406564:	mov	x20, x0
  406568:	strb	wzr, [x0]
  40656c:	mov	x1, x21
  406570:	mov	w2, w22
  406574:	mov	x0, x19
  406578:	bl	4061a8 <get_addr_1@@Base>
  40657c:	mov	w1, #0x2f                  	// #47
  406580:	strb	w1, [x20]
  406584:	cbz	w0, 406598 <get_prefix_1@@Base+0x60>
  406588:	ldp	x19, x20, [sp, #16]
  40658c:	ldp	x21, x22, [sp, #32]
  406590:	ldp	x29, x30, [sp], #64
  406594:	ret
  406598:	ldrh	w0, [x19, #6]
  40659c:	bl	406180 <af_bit_len@@Base>
  4065a0:	mov	w21, w0
  4065a4:	ldrsh	w1, [x19, #4]
  4065a8:	cmn	w1, #0x2
  4065ac:	b.eq	406638 <get_prefix_1@@Base+0x100>  // b.none
  4065b0:	add	x1, x20, #0x1
  4065b4:	add	x0, sp, #0x3c
  4065b8:	bl	4064a8 <get_addr_1@@Base+0x300>
  4065bc:	cbnz	w0, 406638 <get_prefix_1@@Base+0x100>
  4065c0:	ldr	w1, [sp, #60]
  4065c4:	cmp	w1, w21
  4065c8:	b.hi	406638 <get_prefix_1@@Base+0x100>  // b.pmore
  4065cc:	sxth	w1, w1
  4065d0:	mov	w2, #0x1                   	// #1
  4065d4:	ldrh	w3, [x19]
  4065d8:	mov	w0, #0x0                   	// #0
  4065dc:	strh	w1, [x19, #4]
  4065e0:	orr	w1, w2, w3
  4065e4:	strh	w1, [x19]
  4065e8:	ldp	x19, x20, [sp, #16]
  4065ec:	ldp	x21, x22, [sp, #32]
  4065f0:	ldp	x29, x30, [sp], #64
  4065f4:	ret
  4065f8:	mov	w2, w22
  4065fc:	mov	x1, x21
  406600:	mov	x0, x19
  406604:	bl	4061a8 <get_addr_1@@Base>
  406608:	cbnz	w0, 406588 <get_prefix_1@@Base+0x50>
  40660c:	ldrh	w0, [x19, #6]
  406610:	bl	406180 <af_bit_len@@Base>
  406614:	ldrsh	w1, [x19, #4]
  406618:	cmn	w1, #0x2
  40661c:	b.eq	40662c <get_prefix_1@@Base+0xf4>  // b.none
  406620:	sxth	w1, w0
  406624:	mov	w2, #0x0                   	// #0
  406628:	b	4065d4 <get_prefix_1@@Base+0x9c>
  40662c:	mov	w1, #0x0                   	// #0
  406630:	mov	w2, #0x0                   	// #0
  406634:	b	4065d4 <get_prefix_1@@Base+0x9c>
  406638:	mov	w0, #0xffffffff            	// #-1
  40663c:	b	406588 <get_prefix_1@@Base+0x50>

0000000000406640 <get_addr_rta@@Base>:
  406640:	mov	x3, x0
  406644:	ldrh	w0, [x1]
  406648:	sub	w0, w0, #0x4
  40664c:	cmp	w0, #0xa
  406650:	b.eq	406728 <get_addr_rta@@Base+0xe8>  // b.none
  406654:	b.hi	4066b8 <get_addr_rta@@Base+0x78>  // b.pmore
  406658:	cmp	w0, #0x2
  40665c:	b.eq	406794 <get_addr_rta@@Base+0x154>  // b.none
  406660:	cmp	w0, #0x4
  406664:	b.ne	406720 <get_addr_rta@@Base+0xe0>  // b.any
  406668:	mov	w4, #0x2                   	// #2
  40666c:	strh	w0, [x3, #2]
  406670:	strh	w4, [x3, #6]
  406674:	ldr	w0, [x1, #4]
  406678:	str	w0, [x3, #8]
  40667c:	cbz	w2, 406688 <get_addr_rta@@Base+0x48>
  406680:	cmp	w2, #0x2
  406684:	b.ne	4067c8 <get_addr_rta@@Base+0x188>  // b.any
  406688:	mov	w0, #0xffffffff            	// #-1
  40668c:	strh	w0, [x3, #4]
  406690:	ldr	w0, [x3, #8]
  406694:	strh	wzr, [x3]
  406698:	cbz	w0, 406710 <get_addr_rta@@Base+0xd0>
  40669c:	and	w0, w0, #0xf0
  4066a0:	cmp	w0, #0xe0
  4066a4:	b.eq	406784 <get_addr_rta@@Base+0x144>  // b.none
  4066a8:	mov	w1, #0x2                   	// #2
  4066ac:	mov	w0, #0x0                   	// #0
  4066b0:	strh	w1, [x3]
  4066b4:	ret
  4066b8:	cmp	w0, #0x10
  4066bc:	b.ne	406720 <get_addr_rta@@Base+0xe0>  // b.any
  4066c0:	add	x1, x1, #0x4
  4066c4:	mov	w4, #0xa                   	// #10
  4066c8:	strh	w0, [x3, #2]
  4066cc:	strh	w4, [x3, #6]
  4066d0:	ldp	x0, x1, [x1]
  4066d4:	stp	x0, x1, [x3, #8]
  4066d8:	cbz	w2, 4066e4 <get_addr_rta@@Base+0xa4>
  4066dc:	cmp	w2, #0xa
  4066e0:	b.ne	4067c8 <get_addr_rta@@Base+0x188>  // b.any
  4066e4:	mov	w0, #0xffffffff            	// #-1
  4066e8:	strh	w0, [x3, #4]
  4066ec:	ldr	w0, [x3, #8]
  4066f0:	strh	wzr, [x3]
  4066f4:	cbnz	w0, 406778 <get_addr_rta@@Base+0x138>
  4066f8:	ldr	w0, [x3, #12]
  4066fc:	cbnz	w0, 406778 <get_addr_rta@@Base+0x138>
  406700:	ldr	w0, [x3, #16]
  406704:	cbnz	w0, 406778 <get_addr_rta@@Base+0x138>
  406708:	ldr	w0, [x3, #20]
  40670c:	cbnz	w0, 406778 <get_addr_rta@@Base+0x138>
  406710:	mov	w1, #0x6                   	// #6
  406714:	mov	w0, #0x0                   	// #0
  406718:	strh	w1, [x3]
  40671c:	ret
  406720:	mov	w0, #0xffffffff            	// #-1
  406724:	ret
  406728:	mov	w4, #0x4                   	// #4
  40672c:	strh	w0, [x3, #2]
  406730:	strh	w4, [x3, #6]
  406734:	mov	w0, #0x4                   	// #4
  406738:	mov	w4, w0
  40673c:	ldur	x5, [x1, #4]
  406740:	str	x5, [x3, #8]
  406744:	ldrh	w1, [x1, #12]
  406748:	strh	w1, [x3, #16]
  40674c:	cbz	w2, 4067b4 <get_addr_rta@@Base+0x174>
  406750:	cmp	w2, w0
  406754:	b.ne	4067c8 <get_addr_rta@@Base+0x188>  // b.any
  406758:	mov	w0, #0xffffffff            	// #-1
  40675c:	strh	wzr, [x3]
  406760:	strh	w0, [x3, #4]
  406764:	cmp	w4, #0xa
  406768:	mov	w0, #0x0                   	// #0
  40676c:	b.ne	4066b4 <get_addr_rta@@Base+0x74>  // b.any
  406770:	ldr	w0, [x3, #8]
  406774:	cbz	w0, 4066f8 <get_addr_rta@@Base+0xb8>
  406778:	ldrb	w0, [x3, #8]
  40677c:	cmp	w0, #0xff
  406780:	b.ne	4066a8 <get_addr_rta@@Base+0x68>  // b.any
  406784:	mov	w1, #0xa                   	// #10
  406788:	mov	w0, #0x0                   	// #0
  40678c:	strh	w1, [x3]
  406790:	ret
  406794:	mov	w4, #0xc                   	// #12
  406798:	strh	w0, [x3, #2]
  40679c:	strh	w4, [x3, #6]
  4067a0:	mov	w0, #0xc                   	// #12
  4067a4:	mov	w4, w0
  4067a8:	ldrh	w1, [x1, #4]
  4067ac:	strh	w1, [x3, #8]
  4067b0:	cbnz	w2, 406750 <get_addr_rta@@Base+0x110>
  4067b4:	mov	w1, #0xffffffff            	// #-1
  4067b8:	mov	w0, #0x0                   	// #0
  4067bc:	strh	wzr, [x3]
  4067c0:	strh	w1, [x3, #4]
  4067c4:	ret
  4067c8:	mov	w0, #0xfffffffe            	// #-2
  4067cc:	ret

00000000004067d0 <get_addr32@@Base>:
  4067d0:	stp	x29, x30, [sp, #-304]!
  4067d4:	mov	w2, #0x2                   	// #2
  4067d8:	mov	x29, sp
  4067dc:	str	x19, [sp, #16]
  4067e0:	mov	x19, x0
  4067e4:	mov	x1, x19
  4067e8:	add	x0, sp, #0x28
  4067ec:	bl	4061a8 <get_addr_1@@Base>
  4067f0:	cbnz	w0, 406804 <get_addr32@@Base+0x34>
  4067f4:	ldr	w0, [sp, #48]
  4067f8:	ldr	x19, [sp, #16]
  4067fc:	ldp	x29, x30, [sp], #304
  406800:	ret
  406804:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  406808:	mov	x2, x19
  40680c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406810:	add	x1, x1, #0x6c8
  406814:	ldr	x0, [x0, #3992]
  406818:	ldr	x0, [x0]
  40681c:	bl	405020 <fprintf@plt>
  406820:	mov	w0, #0x1                   	// #1
  406824:	bl	404b70 <exit@plt>

0000000000406828 <incomplete_command@@Base>:
  406828:	stp	x29, x30, [sp, #-16]!
  40682c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  406830:	mov	x2, #0x30                  	// #48
  406834:	mov	x29, sp
  406838:	ldr	x3, [x3, #3992]
  40683c:	mov	x1, #0x1                   	// #1
  406840:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  406844:	add	x0, x0, #0x700
  406848:	ldr	x3, [x3]
  40684c:	bl	404eb0 <fwrite@plt>
  406850:	mov	w0, #0xffffffff            	// #-1
  406854:	bl	404b70 <exit@plt>

0000000000406858 <missarg@@Base>:
  406858:	stp	x29, x30, [sp, #-16]!
  40685c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  406860:	mov	x2, x0
  406864:	mov	x29, sp
  406868:	ldr	x3, [x3, #3992]
  40686c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406870:	add	x1, x1, #0x738
  406874:	ldr	x0, [x3]
  406878:	bl	405020 <fprintf@plt>
  40687c:	mov	w0, #0xffffffff            	// #-1
  406880:	bl	404b70 <exit@plt>
  406884:	nop

0000000000406888 <invarg@@Base>:
  406888:	stp	x29, x30, [sp, #-16]!
  40688c:	adrp	x4, 421000 <_IO_stdin_used@@Base+0x13c90>
  406890:	mov	x3, x0
  406894:	mov	x29, sp
  406898:	ldr	x4, [x4, #3992]
  40689c:	mov	x2, x1
  4068a0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4068a4:	add	x1, x1, #0x760
  4068a8:	ldr	x0, [x4]
  4068ac:	bl	405020 <fprintf@plt>
  4068b0:	mov	w0, #0xffffffff            	// #-1
  4068b4:	bl	404b70 <exit@plt>

00000000004068b8 <duparg@@Base>:
  4068b8:	stp	x29, x30, [sp, #-16]!
  4068bc:	adrp	x4, 421000 <_IO_stdin_used@@Base+0x13c90>
  4068c0:	mov	x2, x0
  4068c4:	mov	x29, sp
  4068c8:	ldr	x4, [x4, #3992]
  4068cc:	mov	x3, x1
  4068d0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4068d4:	add	x1, x1, #0x788
  4068d8:	ldr	x0, [x4]
  4068dc:	bl	405020 <fprintf@plt>
  4068e0:	mov	w0, #0xffffffff            	// #-1
  4068e4:	bl	404b70 <exit@plt>

00000000004068e8 <duparg2@@Base>:
  4068e8:	stp	x29, x30, [sp, #-16]!
  4068ec:	adrp	x4, 421000 <_IO_stdin_used@@Base+0x13c90>
  4068f0:	mov	x2, x0
  4068f4:	mov	x29, sp
  4068f8:	ldr	x4, [x4, #3992]
  4068fc:	mov	x3, x1
  406900:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406904:	add	x1, x1, #0x7c0
  406908:	ldr	x0, [x4]
  40690c:	bl	405020 <fprintf@plt>
  406910:	mov	w0, #0xffffffff            	// #-1
  406914:	bl	404b70 <exit@plt>

0000000000406918 <nodev@@Base>:
  406918:	stp	x29, x30, [sp, #-16]!
  40691c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  406920:	mov	x2, x0
  406924:	mov	x29, sp
  406928:	ldr	x3, [x3, #3992]
  40692c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406930:	add	x1, x1, #0x7f8
  406934:	ldr	x0, [x3]
  406938:	bl	405020 <fprintf@plt>
  40693c:	mov	w0, #0xffffffff            	// #-1
  406940:	ldp	x29, x30, [sp], #16
  406944:	ret

0000000000406948 <check_ifname@@Base>:
  406948:	stp	x29, x30, [sp, #-32]!
  40694c:	mov	x29, sp
  406950:	stp	x19, x20, [sp, #16]
  406954:	mov	x20, x0
  406958:	bl	404b60 <strlen@plt>
  40695c:	cmp	x0, #0xf
  406960:	b.hi	406994 <check_ifname@@Base+0x4c>  // b.pmore
  406964:	ldrb	w19, [x20]
  406968:	cbnz	w19, 40698c <check_ifname@@Base+0x44>
  40696c:	b	406994 <check_ifname@@Base+0x4c>
  406970:	bl	404e00 <__ctype_b_loc@plt>
  406974:	ubfiz	x19, x19, #1, #8
  406978:	ldr	x0, [x0]
  40697c:	ldrh	w0, [x0, x19]
  406980:	tbnz	w0, #13, 406994 <check_ifname@@Base+0x4c>
  406984:	ldrb	w19, [x20, #1]!
  406988:	cbz	w19, 4069a4 <check_ifname@@Base+0x5c>
  40698c:	cmp	w19, #0x2f
  406990:	b.ne	406970 <check_ifname@@Base+0x28>  // b.any
  406994:	mov	w0, #0xffffffff            	// #-1
  406998:	ldp	x19, x20, [sp, #16]
  40699c:	ldp	x29, x30, [sp], #32
  4069a0:	ret
  4069a4:	mov	w0, #0x0                   	// #0
  4069a8:	ldp	x19, x20, [sp, #16]
  4069ac:	ldp	x29, x30, [sp], #32
  4069b0:	ret
  4069b4:	nop

00000000004069b8 <check_altifname@@Base>:
  4069b8:	stp	x29, x30, [sp, #-32]!
  4069bc:	mov	x29, sp
  4069c0:	stp	x19, x20, [sp, #16]
  4069c4:	ldrb	w19, [x0]
  4069c8:	cbz	w19, 4069f8 <check_altifname@@Base+0x40>
  4069cc:	mov	x20, x0
  4069d0:	b	4069f0 <check_altifname@@Base+0x38>
  4069d4:	bl	404e00 <__ctype_b_loc@plt>
  4069d8:	ubfiz	x19, x19, #1, #8
  4069dc:	ldr	x0, [x0]
  4069e0:	ldrh	w0, [x0, x19]
  4069e4:	tbnz	w0, #13, 4069f8 <check_altifname@@Base+0x40>
  4069e8:	ldrb	w19, [x20, #1]!
  4069ec:	cbz	w19, 406a08 <check_altifname@@Base+0x50>
  4069f0:	cmp	w19, #0x2f
  4069f4:	b.ne	4069d4 <check_altifname@@Base+0x1c>  // b.any
  4069f8:	mov	w0, #0xffffffff            	// #-1
  4069fc:	ldp	x19, x20, [sp, #16]
  406a00:	ldp	x29, x30, [sp], #32
  406a04:	ret
  406a08:	mov	w0, #0x0                   	// #0
  406a0c:	ldp	x19, x20, [sp, #16]
  406a10:	ldp	x29, x30, [sp], #32
  406a14:	ret

0000000000406a18 <get_ifname@@Base>:
  406a18:	stp	x29, x30, [sp, #-48]!
  406a1c:	mov	x29, sp
  406a20:	stp	x19, x20, [sp, #16]
  406a24:	mov	x20, x1
  406a28:	str	x21, [sp, #32]
  406a2c:	mov	x21, x0
  406a30:	mov	x0, x1
  406a34:	bl	406948 <check_ifname@@Base>
  406a38:	mov	w19, w0
  406a3c:	cbz	w0, 406a54 <get_ifname@@Base+0x3c>
  406a40:	mov	w0, w19
  406a44:	ldp	x19, x20, [sp, #16]
  406a48:	ldr	x21, [sp, #32]
  406a4c:	ldp	x29, x30, [sp], #48
  406a50:	ret
  406a54:	mov	x1, x20
  406a58:	mov	x0, x21
  406a5c:	mov	x2, #0x10                  	// #16
  406a60:	bl	404f80 <strncpy@plt>
  406a64:	mov	w0, w19
  406a68:	ldp	x19, x20, [sp, #16]
  406a6c:	ldr	x21, [sp, #32]
  406a70:	ldp	x29, x30, [sp], #48
  406a74:	ret

0000000000406a78 <get_ifname_rta@@Base>:
  406a78:	stp	x29, x30, [sp, #-32]!
  406a7c:	mov	x29, sp
  406a80:	str	x19, [sp, #16]
  406a84:	cbz	x1, 406aa8 <get_ifname_rta@@Base+0x30>
  406a88:	add	x19, x1, #0x4
  406a8c:	mov	x0, x19
  406a90:	bl	406948 <check_ifname@@Base>
  406a94:	cmp	w0, #0x0
  406a98:	csel	x0, x19, xzr, eq  // eq = none
  406a9c:	ldr	x19, [sp, #16]
  406aa0:	ldp	x29, x30, [sp], #32
  406aa4:	ret
  406aa8:	mov	w19, w0
  406aac:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  406ab0:	mov	w2, w19
  406ab4:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406ab8:	ldr	x0, [x0, #3992]
  406abc:	add	x1, x1, #0x818
  406ac0:	ldr	x0, [x0]
  406ac4:	bl	405020 <fprintf@plt>
  406ac8:	mov	w0, w19
  406acc:	bl	408c68 <ll_idx_n2a@@Base>
  406ad0:	mov	x19, x0
  406ad4:	mov	x0, x19
  406ad8:	bl	406948 <check_ifname@@Base>
  406adc:	cmp	w0, #0x0
  406ae0:	csel	x0, x19, xzr, eq  // eq = none
  406ae4:	ldr	x19, [sp, #16]
  406ae8:	ldp	x29, x30, [sp], #32
  406aec:	ret

0000000000406af0 <matches@@Base>:
  406af0:	ldrb	w3, [x0]
  406af4:	cbz	w3, 406b30 <matches@@Base+0x40>
  406af8:	ldrb	w2, [x1]
  406afc:	sub	x4, x0, #0x1
  406b00:	mov	x0, #0x1                   	// #1
  406b04:	cbnz	w2, 406b1c <matches@@Base+0x2c>
  406b08:	b	406b24 <matches@@Base+0x34>
  406b0c:	ldrb	w2, [x1, x0]
  406b10:	add	x0, x0, #0x1
  406b14:	ldrb	w3, [x4, x0]
  406b18:	cbz	w2, 406b24 <matches@@Base+0x34>
  406b1c:	cmp	w3, w2
  406b20:	b.eq	406b0c <matches@@Base+0x1c>  // b.none
  406b24:	cmp	w3, #0x0
  406b28:	cset	w0, ne  // ne = any
  406b2c:	ret
  406b30:	mov	w0, #0x1                   	// #1
  406b34:	ret

0000000000406b38 <inet_addr_match@@Base>:
  406b38:	stp	x29, x30, [sp, #-48]!
  406b3c:	cmp	wzr, w2, asr #5
  406b40:	mov	x29, sp
  406b44:	stp	x19, x20, [sp, #16]
  406b48:	add	x20, x1, #0x8
  406b4c:	and	w19, w2, #0x1f
  406b50:	stp	x21, x22, [sp, #32]
  406b54:	add	x21, x0, #0x8
  406b58:	asr	w22, w2, #5
  406b5c:	b.eq	406b78 <inet_addr_match@@Base+0x40>  // b.none
  406b60:	lsl	w2, w22, #2
  406b64:	mov	x1, x20
  406b68:	mov	x0, x21
  406b6c:	sxtw	x2, w2
  406b70:	bl	404de0 <memcmp@plt>
  406b74:	cbnz	w0, 406bb8 <inet_addr_match@@Base+0x80>
  406b78:	cbz	w19, 406ba4 <inet_addr_match@@Base+0x6c>
  406b7c:	sxtw	x22, w22
  406b80:	neg	w2, w19
  406b84:	mov	w19, #0xffffffff            	// #-1
  406b88:	lsl	w2, w19, w2
  406b8c:	rev	w2, w2
  406b90:	ldr	w0, [x21, x22, lsl #2]
  406b94:	ldr	w1, [x20, x22, lsl #2]
  406b98:	eor	w0, w0, w1
  406b9c:	tst	w0, w2
  406ba0:	cset	w19, ne  // ne = any
  406ba4:	mov	w0, w19
  406ba8:	ldp	x19, x20, [sp, #16]
  406bac:	ldp	x21, x22, [sp, #32]
  406bb0:	ldp	x29, x30, [sp], #48
  406bb4:	ret
  406bb8:	mov	w19, #0xffffffff            	// #-1
  406bbc:	mov	w0, w19
  406bc0:	ldp	x19, x20, [sp, #16]
  406bc4:	ldp	x21, x22, [sp, #32]
  406bc8:	ldp	x29, x30, [sp], #48
  406bcc:	ret

0000000000406bd0 <inet_addr_match_rta@@Base>:
  406bd0:	cbz	x1, 406c28 <inet_addr_match_rta@@Base+0x58>
  406bd4:	stp	x29, x30, [sp, #-304]!
  406bd8:	mov	x29, sp
  406bdc:	ldrh	w2, [x0, #6]
  406be0:	stp	x19, x20, [sp, #16]
  406be4:	mov	x19, x0
  406be8:	mov	w0, #0x0                   	// #0
  406bec:	cbz	w2, 406c1c <inet_addr_match_rta@@Base+0x4c>
  406bf0:	ldrsh	w3, [x19, #4]
  406bf4:	cmp	w3, #0x0
  406bf8:	b.le	406c1c <inet_addr_match_rta@@Base+0x4c>
  406bfc:	add	x20, sp, #0x28
  406c00:	mov	x0, x20
  406c04:	bl	406640 <get_addr_rta@@Base>
  406c08:	cbnz	w0, 406c30 <inet_addr_match_rta@@Base+0x60>
  406c0c:	ldrsh	w2, [x19, #4]
  406c10:	mov	x0, x20
  406c14:	mov	x1, x19
  406c18:	bl	406b38 <inet_addr_match@@Base>
  406c1c:	ldp	x19, x20, [sp, #16]
  406c20:	ldp	x29, x30, [sp], #304
  406c24:	ret
  406c28:	mov	w0, #0x0                   	// #0
  406c2c:	ret
  406c30:	mov	w0, #0xffffffff            	// #-1
  406c34:	b	406c1c <inet_addr_match_rta@@Base+0x4c>

0000000000406c38 <__get_hz@@Base>:
  406c38:	sub	sp, sp, #0x430
  406c3c:	stp	x29, x30, [sp]
  406c40:	mov	x29, sp
  406c44:	stp	x19, x20, [sp, #16]
  406c48:	adrp	x19, 40d000 <rta_addattr_l@@Base+0x98>
  406c4c:	add	x19, x19, #0x848
  406c50:	mov	x0, x19
  406c54:	bl	404fe0 <getenv@plt>
  406c58:	cbz	x0, 406cc8 <__get_hz@@Base+0x90>
  406c5c:	mov	x0, x19
  406c60:	bl	404fe0 <getenv@plt>
  406c64:	mov	w2, #0xa                   	// #10
  406c68:	mov	x1, #0x0                   	// #0
  406c6c:	bl	404e10 <strtol@plt>
  406c70:	mov	w19, w0
  406c74:	cbz	w0, 406cb0 <__get_hz@@Base+0x78>
  406c78:	mov	w0, w19
  406c7c:	ldp	x29, x30, [sp]
  406c80:	ldp	x19, x20, [sp, #16]
  406c84:	add	sp, sp, #0x430
  406c88:	ret
  406c8c:	ldr	w1, [sp, #40]
  406c90:	mov	w0, #0x4240                	// #16960
  406c94:	movk	w0, #0xf, lsl #16
  406c98:	cmp	w1, w0
  406c9c:	b.ne	406d34 <__get_hz@@Base+0xfc>  // b.any
  406ca0:	ldr	w19, [sp, #44]
  406ca4:	mov	x0, x20
  406ca8:	bl	404c70 <fclose@plt>
  406cac:	cbnz	w19, 406c78 <__get_hz@@Base+0x40>
  406cb0:	mov	w19, #0x64                  	// #100
  406cb4:	mov	w0, w19
  406cb8:	ldp	x29, x30, [sp]
  406cbc:	ldp	x19, x20, [sp, #16]
  406cc0:	add	sp, sp, #0x430
  406cc4:	ret
  406cc8:	adrp	x19, 40d000 <rta_addattr_l@@Base+0x98>
  406ccc:	add	x19, x19, #0x850
  406cd0:	mov	x0, x19
  406cd4:	bl	404fe0 <getenv@plt>
  406cd8:	cbz	x0, 406d54 <__get_hz@@Base+0x11c>
  406cdc:	mov	x0, x19
  406ce0:	add	x19, sp, #0x30
  406ce4:	bl	404fe0 <getenv@plt>
  406ce8:	mov	x3, x0
  406cec:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  406cf0:	mov	x0, x19
  406cf4:	add	x2, x2, #0x860
  406cf8:	mov	x1, #0x3ff                 	// #1023
  406cfc:	bl	404c40 <snprintf@plt>
  406d00:	mov	x0, x19
  406d04:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406d08:	add	x1, x1, #0x5f8
  406d0c:	bl	404ee0 <fopen64@plt>
  406d10:	mov	x20, x0
  406d14:	cbz	x0, 406cb0 <__get_hz@@Base+0x78>
  406d18:	add	x3, sp, #0x2c
  406d1c:	add	x2, sp, #0x28
  406d20:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406d24:	add	x1, x1, #0x8a0
  406d28:	bl	404cb0 <__isoc99_fscanf@plt>
  406d2c:	cmp	w0, #0x2
  406d30:	b.eq	406c8c <__get_hz@@Base+0x54>  // b.none
  406d34:	mov	x0, x20
  406d38:	mov	w19, #0x64                  	// #100
  406d3c:	bl	404c70 <fclose@plt>
  406d40:	mov	w0, w19
  406d44:	ldp	x29, x30, [sp]
  406d48:	ldp	x19, x20, [sp, #16]
  406d4c:	add	sp, sp, #0x430
  406d50:	ret
  406d54:	adrp	x19, 40d000 <rta_addattr_l@@Base+0x98>
  406d58:	add	x19, x19, #0x868
  406d5c:	mov	x0, x19
  406d60:	bl	404fe0 <getenv@plt>
  406d64:	cbz	x0, 406d90 <__get_hz@@Base+0x158>
  406d68:	mov	x0, x19
  406d6c:	add	x19, sp, #0x30
  406d70:	bl	404fe0 <getenv@plt>
  406d74:	mov	x3, x0
  406d78:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  406d7c:	mov	x0, x19
  406d80:	add	x2, x2, #0x878
  406d84:	mov	x1, #0x3ff                 	// #1023
  406d88:	bl	404c40 <snprintf@plt>
  406d8c:	b	406d00 <__get_hz@@Base+0xc8>
  406d90:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  406d94:	add	x0, x0, #0x888
  406d98:	add	x19, sp, #0x30
  406d9c:	ldp	x2, x3, [x0]
  406da0:	stp	x2, x3, [sp, #48]
  406da4:	ldrb	w0, [x0, #16]
  406da8:	strb	w0, [sp, #64]
  406dac:	b	406d00 <__get_hz@@Base+0xc8>

0000000000406db0 <__get_user_hz@@Base>:
  406db0:	stp	x29, x30, [sp, #-16]!
  406db4:	mov	w0, #0x2                   	// #2
  406db8:	mov	x29, sp
  406dbc:	bl	404f10 <sysconf@plt>
  406dc0:	ldp	x29, x30, [sp], #16
  406dc4:	ret

0000000000406dc8 <rt_addr_n2a_r@@Base>:
  406dc8:	mov	x6, x2
  406dcc:	cmp	w0, #0x11
  406dd0:	mov	x2, x3
  406dd4:	b.eq	406e30 <rt_addr_n2a_r@@Base+0x68>  // b.none
  406dd8:	b.gt	406dfc <rt_addr_n2a_r@@Base+0x34>
  406ddc:	cmp	w0, #0x7
  406de0:	b.eq	406e10 <rt_addr_n2a_r@@Base+0x48>  // b.none
  406de4:	and	w5, w0, #0xfffffff7
  406de8:	cmp	w5, #0x2
  406dec:	b.ne	406e24 <rt_addr_n2a_r@@Base+0x5c>  // b.any
  406df0:	mov	w3, w4
  406df4:	mov	x1, x6
  406df8:	b	405040 <inet_ntop@plt>
  406dfc:	cmp	w0, #0x1c
  406e00:	b.ne	406e24 <rt_addr_n2a_r@@Base+0x5c>  // b.any
  406e04:	sxtw	x3, w4
  406e08:	mov	x1, x6
  406e0c:	b	409f88 <mpls_ntop@@Base>
  406e10:	ldrh	w0, [x6]
  406e14:	cmp	w0, #0x2
  406e18:	b.eq	406e48 <rt_addr_n2a_r@@Base+0x80>  // b.none
  406e1c:	cmp	w0, #0xa
  406e20:	b.eq	406e3c <rt_addr_n2a_r@@Base+0x74>  // b.none
  406e24:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  406e28:	add	x0, x0, #0x8b8
  406e2c:	ret
  406e30:	mov	x0, x6
  406e34:	mov	w2, #0xffff                	// #65535
  406e38:	b	408fd8 <ll_addr_n2a@@Base>
  406e3c:	mov	w3, w4
  406e40:	add	x1, x6, #0x8
  406e44:	b	405040 <inet_ntop@plt>
  406e48:	mov	w3, w4
  406e4c:	add	x1, x6, #0x4
  406e50:	b	405040 <inet_ntop@plt>
  406e54:	nop

0000000000406e58 <rt_addr_n2a@@Base>:
  406e58:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  406e5c:	mov	w4, #0x100                 	// #256
  406e60:	add	x3, x3, #0x2d0
  406e64:	b	406dc8 <rt_addr_n2a_r@@Base>

0000000000406e68 <read_family@@Base>:
  406e68:	stp	x29, x30, [sp, #-32]!
  406e6c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406e70:	add	x1, x1, #0x490
  406e74:	mov	x29, sp
  406e78:	str	x19, [sp, #16]
  406e7c:	mov	x19, x0
  406e80:	bl	404df0 <strcmp@plt>
  406e84:	mov	w1, #0x2                   	// #2
  406e88:	cbz	w0, 406f08 <read_family@@Base+0xa0>
  406e8c:	mov	x0, x19
  406e90:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406e94:	add	x1, x1, #0x498
  406e98:	bl	404df0 <strcmp@plt>
  406e9c:	mov	w1, #0xa                   	// #10
  406ea0:	cbz	w0, 406f08 <read_family@@Base+0xa0>
  406ea4:	mov	x0, x19
  406ea8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406eac:	add	x1, x1, #0x4a0
  406eb0:	bl	404df0 <strcmp@plt>
  406eb4:	mov	w1, #0x11                  	// #17
  406eb8:	cbz	w0, 406f08 <read_family@@Base+0xa0>
  406ebc:	mov	x0, x19
  406ec0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406ec4:	add	x1, x1, #0x8c0
  406ec8:	bl	404df0 <strcmp@plt>
  406ecc:	mov	w1, #0x4                   	// #4
  406ed0:	cbz	w0, 406f08 <read_family@@Base+0xa0>
  406ed4:	mov	x0, x19
  406ed8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406edc:	add	x1, x1, #0x8c8
  406ee0:	bl	404df0 <strcmp@plt>
  406ee4:	mov	w1, #0x1c                  	// #28
  406ee8:	cbz	w0, 406f08 <read_family@@Base+0xa0>
  406eec:	mov	x0, x19
  406ef0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406ef4:	add	x1, x1, #0x8d0
  406ef8:	bl	404df0 <strcmp@plt>
  406efc:	cmp	w0, #0x0
  406f00:	mov	w1, #0x7                   	// #7
  406f04:	csel	w1, wzr, w1, ne  // ne = any
  406f08:	mov	w0, w1
  406f0c:	ldr	x19, [sp, #16]
  406f10:	ldp	x29, x30, [sp], #32
  406f14:	ret

0000000000406f18 <family_name@@Base>:
  406f18:	cmp	w0, #0x2
  406f1c:	b.eq	406f5c <family_name@@Base+0x44>  // b.none
  406f20:	cmp	w0, #0xa
  406f24:	b.eq	406f74 <family_name@@Base+0x5c>  // b.none
  406f28:	cmp	w0, #0x11
  406f2c:	b.eq	406f68 <family_name@@Base+0x50>  // b.none
  406f30:	cmp	w0, #0x4
  406f34:	b.eq	406f80 <family_name@@Base+0x68>  // b.none
  406f38:	cmp	w0, #0x1c
  406f3c:	b.eq	406f8c <family_name@@Base+0x74>  // b.none
  406f40:	cmp	w0, #0x7
  406f44:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406f48:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  406f4c:	add	x1, x1, #0x8d0
  406f50:	add	x0, x0, #0x8b8
  406f54:	csel	x0, x0, x1, ne  // ne = any
  406f58:	ret
  406f5c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  406f60:	add	x0, x0, #0x490
  406f64:	ret
  406f68:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  406f6c:	add	x0, x0, #0x4a0
  406f70:	ret
  406f74:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  406f78:	add	x0, x0, #0x498
  406f7c:	ret
  406f80:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  406f84:	add	x0, x0, #0x8c0
  406f88:	ret
  406f8c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  406f90:	add	x0, x0, #0x8c8
  406f94:	ret

0000000000406f98 <get_addr@@Base>:
  406f98:	stp	x29, x30, [sp, #-48]!
  406f9c:	mov	x29, sp
  406fa0:	stp	x19, x20, [sp, #16]
  406fa4:	mov	x20, x1
  406fa8:	mov	w19, w2
  406fac:	bl	4061a8 <get_addr_1@@Base>
  406fb0:	cbnz	w0, 406fc0 <get_addr@@Base+0x28>
  406fb4:	ldp	x19, x20, [sp, #16]
  406fb8:	ldp	x29, x30, [sp], #48
  406fbc:	ret
  406fc0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  406fc4:	str	x21, [sp, #32]
  406fc8:	ldr	x0, [x0, #3992]
  406fcc:	ldr	x21, [x0]
  406fd0:	cbz	w19, 406ffc <get_addr@@Base+0x64>
  406fd4:	mov	w0, w19
  406fd8:	bl	406f18 <family_name@@Base>
  406fdc:	mov	x2, x0
  406fe0:	mov	x3, x20
  406fe4:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  406fe8:	add	x1, x1, #0x8e8
  406fec:	mov	x0, x21
  406ff0:	bl	405020 <fprintf@plt>
  406ff4:	mov	w0, #0x1                   	// #1
  406ff8:	bl	404b70 <exit@plt>
  406ffc:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  407000:	add	x2, x2, #0x8d8
  407004:	b	406fe0 <get_addr@@Base+0x48>

0000000000407008 <get_prefix@@Base>:
  407008:	stp	x29, x30, [sp, #-48]!
  40700c:	cmp	w2, #0x11
  407010:	mov	x29, sp
  407014:	stp	x19, x20, [sp, #16]
  407018:	mov	x20, x1
  40701c:	b.eq	407038 <get_prefix@@Base+0x30>  // b.none
  407020:	mov	w19, w2
  407024:	bl	406538 <get_prefix_1@@Base>
  407028:	cbnz	w0, 407060 <get_prefix@@Base+0x58>
  40702c:	ldp	x19, x20, [sp, #16]
  407030:	ldp	x29, x30, [sp], #48
  407034:	ret
  407038:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40703c:	mov	x2, x1
  407040:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  407044:	add	x1, x1, #0x920
  407048:	ldr	x0, [x0, #3992]
  40704c:	ldr	x0, [x0]
  407050:	str	x21, [sp, #32]
  407054:	bl	405020 <fprintf@plt>
  407058:	mov	w0, #0x1                   	// #1
  40705c:	bl	404b70 <exit@plt>
  407060:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  407064:	str	x21, [sp, #32]
  407068:	ldr	x0, [x0, #3992]
  40706c:	ldr	x21, [x0]
  407070:	cbz	w19, 40709c <get_prefix@@Base+0x94>
  407074:	mov	w0, w19
  407078:	bl	406f18 <family_name@@Base>
  40707c:	mov	x2, x0
  407080:	mov	x3, x20
  407084:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  407088:	add	x1, x1, #0x968
  40708c:	mov	x0, x21
  407090:	bl	405020 <fprintf@plt>
  407094:	mov	w0, #0x1                   	// #1
  407098:	bl	404b70 <exit@plt>
  40709c:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  4070a0:	add	x2, x2, #0x8d8
  4070a4:	b	407080 <get_prefix@@Base+0x78>

00000000004070a8 <format_host_r@@Base>:
  4070a8:	stp	x29, x30, [sp, #-112]!
  4070ac:	adrp	x6, 421000 <_IO_stdin_used@@Base+0x13c90>
  4070b0:	mov	x29, sp
  4070b4:	ldr	x6, [x6, #4064]
  4070b8:	stp	x27, x28, [sp, #80]
  4070bc:	mov	w28, w1
  4070c0:	stp	x19, x20, [sp, #16]
  4070c4:	mov	x19, x2
  4070c8:	ldr	w1, [x6]
  4070cc:	stp	x21, x22, [sp, #32]
  4070d0:	mov	w20, w0
  4070d4:	mov	x21, x3
  4070d8:	mov	w22, w4
  4070dc:	cbz	w1, 4071b4 <format_host_r@@Base+0x10c>
  4070e0:	cmp	w28, #0x0
  4070e4:	b.le	4071dc <format_host_r@@Base+0x134>
  4070e8:	stp	x23, x24, [sp, #48]
  4070ec:	cmp	w20, #0xa
  4070f0:	stp	x25, x26, [sp, #64]
  4070f4:	b.eq	407288 <format_host_r@@Base+0x1e0>  // b.none
  4070f8:	sxtw	x23, w28
  4070fc:	mov	w25, w20
  407100:	sub	x0, x23, #0x4
  407104:	mov	w24, w28
  407108:	add	x0, x19, x0
  40710c:	mov	x27, x19
  407110:	ldr	w26, [x0]
  407114:	mov	w0, #0xff01                	// #65281
  407118:	movk	w0, #0xff00, lsl #16
  40711c:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  407120:	add	x1, x1, #0x2d0
  407124:	add	x1, x1, #0x100
  407128:	umull	x0, w26, w0
  40712c:	lsr	x0, x0, #40
  407130:	add	w0, w0, w0, lsl #8
  407134:	sub	w0, w26, w0
  407138:	str	x0, [sp, #104]
  40713c:	ldr	x0, [x1, x0, lsl #3]
  407140:	str	x0, [sp, #96]
  407144:	cbz	x0, 4071fc <format_host_r@@Base+0x154>
  407148:	mov	x26, x0
  40714c:	b	407158 <format_host_r@@Base+0xb0>
  407150:	ldr	x26, [x26]
  407154:	cbz	x26, 4071fc <format_host_r@@Base+0x154>
  407158:	ldrh	w0, [x26, #22]
  40715c:	cmp	w0, w25
  407160:	b.ne	407150 <format_host_r@@Base+0xa8>  // b.any
  407164:	ldrh	w0, [x26, #18]
  407168:	cmp	w24, w0
  40716c:	b.ne	407150 <format_host_r@@Base+0xa8>  // b.any
  407170:	mov	x2, x23
  407174:	mov	x1, x27
  407178:	add	x0, x26, #0x18
  40717c:	bl	404de0 <memcmp@plt>
  407180:	cbnz	w0, 407150 <format_host_r@@Base+0xa8>
  407184:	nop
  407188:	ldr	x0, [x26, #8]
  40718c:	cbz	x0, 4071ac <format_host_r@@Base+0x104>
  407190:	ldp	x19, x20, [sp, #16]
  407194:	ldp	x21, x22, [sp, #32]
  407198:	ldp	x23, x24, [sp, #48]
  40719c:	ldp	x25, x26, [sp, #64]
  4071a0:	ldp	x27, x28, [sp, #80]
  4071a4:	ldp	x29, x30, [sp], #112
  4071a8:	ret
  4071ac:	ldp	x23, x24, [sp, #48]
  4071b0:	ldp	x25, x26, [sp, #64]
  4071b4:	mov	w4, w22
  4071b8:	mov	x3, x21
  4071bc:	mov	x2, x19
  4071c0:	mov	w1, w28
  4071c4:	mov	w0, w20
  4071c8:	ldp	x19, x20, [sp, #16]
  4071cc:	ldp	x21, x22, [sp, #32]
  4071d0:	ldp	x27, x28, [sp, #80]
  4071d4:	ldp	x29, x30, [sp], #112
  4071d8:	b	406dc8 <rt_addr_n2a_r@@Base>
  4071dc:	bl	406180 <af_bit_len@@Base>
  4071e0:	cmp	w0, #0x0
  4071e4:	add	w5, w0, #0x7
  4071e8:	csel	w5, w5, w0, lt  // lt = tstop
  4071ec:	cmp	w0, #0x7
  4071f0:	asr	w28, w5, #3
  4071f4:	b.le	4071b4 <format_host_r@@Base+0x10c>
  4071f8:	b	4070e8 <format_host_r@@Base+0x40>
  4071fc:	mov	x0, #0x118                 	// #280
  407200:	bl	404c90 <malloc@plt>
  407204:	mov	x26, x0
  407208:	cbz	x0, 4071ac <format_host_r@@Base+0x104>
  40720c:	str	xzr, [x26, #8]
  407210:	mov	x2, x23
  407214:	strh	w24, [x26, #18]
  407218:	mov	x1, x27
  40721c:	strh	w25, [x26, #22]
  407220:	add	x0, x0, #0x18
  407224:	bl	404b30 <memcpy@plt>
  407228:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  40722c:	add	x23, x0, #0x2d0
  407230:	ldp	x0, x2, [sp, #96]
  407234:	add	x1, x23, #0x100
  407238:	str	x0, [x26]
  40723c:	ldr	w0, [x23, #2312]
  407240:	add	w0, w0, #0x1
  407244:	str	w0, [x23, #2312]
  407248:	str	x26, [x1, x2, lsl #3]
  40724c:	cmp	w0, #0x1
  407250:	b.eq	4072bc <format_host_r@@Base+0x214>  // b.none
  407254:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  407258:	ldr	x0, [x0, #4016]
  40725c:	ldr	x0, [x0]
  407260:	bl	404ed0 <fflush@plt>
  407264:	mov	w2, w25
  407268:	mov	w1, w24
  40726c:	mov	x0, x27
  407270:	bl	404e40 <gethostbyaddr@plt>
  407274:	cbz	x0, 407188 <format_host_r@@Base+0xe0>
  407278:	ldr	x0, [x0]
  40727c:	bl	404d60 <strdup@plt>
  407280:	str	x0, [x26, #8]
  407284:	b	40718c <format_host_r@@Base+0xe4>
  407288:	ldr	w0, [x19]
  40728c:	cbnz	w0, 4070f8 <format_host_r@@Base+0x50>
  407290:	ldr	w0, [x19, #4]
  407294:	cbnz	w0, 4070f8 <format_host_r@@Base+0x50>
  407298:	ldr	w0, [x19, #8]
  40729c:	cmn	w0, #0x10, lsl #12
  4072a0:	b.ne	4070f8 <format_host_r@@Base+0x50>  // b.any
  4072a4:	add	x27, x19, #0xc
  4072a8:	mov	x23, #0x4                   	// #4
  4072ac:	mov	x0, x27
  4072b0:	mov	w24, w23
  4072b4:	mov	w25, #0x2                   	// #2
  4072b8:	b	407110 <format_host_r@@Base+0x68>
  4072bc:	bl	404bc0 <sethostent@plt>
  4072c0:	b	407254 <format_host_r@@Base+0x1ac>
  4072c4:	nop

00000000004072c8 <format_host@@Base>:
  4072c8:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  4072cc:	add	x3, x3, #0x2d0
  4072d0:	add	x3, x3, #0x910
  4072d4:	mov	w4, #0x100                 	// #256
  4072d8:	b	4070a8 <format_host_r@@Base>
  4072dc:	nop

00000000004072e0 <hexstring_n2a@@Base>:
  4072e0:	stp	x29, x30, [sp, #-80]!
  4072e4:	cmp	w1, #0x0
  4072e8:	ccmp	w3, #0x2, #0x4, gt
  4072ec:	mov	x29, sp
  4072f0:	stp	x23, x24, [sp, #48]
  4072f4:	mov	x24, x2
  4072f8:	b.le	407368 <hexstring_n2a@@Base+0x88>
  4072fc:	mov	w23, w1
  407300:	stp	x19, x20, [sp, #16]
  407304:	mov	x20, x2
  407308:	stp	x21, x22, [sp, #32]
  40730c:	sub	x22, x0, #0x1
  407310:	add	w21, w3, w2
  407314:	str	x25, [sp, #64]
  407318:	adrp	x25, 40d000 <rta_addattr_l@@Base+0x98>
  40731c:	add	x25, x25, #0x998
  407320:	mov	x19, #0x1                   	// #1
  407324:	nop
  407328:	ldrb	w2, [x22, x19]
  40732c:	mov	x0, x20
  407330:	mov	x1, x25
  407334:	add	x20, x20, #0x2
  407338:	bl	404bf0 <sprintf@plt>
  40733c:	cmp	w23, w19
  407340:	sub	w3, w21, w20
  407344:	cset	w0, le
  407348:	cmp	w3, #0x2
  40734c:	cset	w3, le
  407350:	add	x19, x19, #0x1
  407354:	orr	w0, w0, w3
  407358:	cbz	w0, 407328 <hexstring_n2a@@Base+0x48>
  40735c:	ldp	x19, x20, [sp, #16]
  407360:	ldp	x21, x22, [sp, #32]
  407364:	ldr	x25, [sp, #64]
  407368:	mov	x0, x24
  40736c:	ldp	x23, x24, [sp, #48]
  407370:	ldp	x29, x30, [sp], #80
  407374:	ret

0000000000407378 <hexstring_a2n@@Base>:
  407378:	stp	x29, x30, [sp, #-112]!
  40737c:	mov	x29, sp
  407380:	stp	x21, x22, [sp, #32]
  407384:	mov	x22, x1
  407388:	stp	x23, x24, [sp, #48]
  40738c:	mov	w23, w2
  407390:	stp	x25, x26, [sp, #64]
  407394:	mov	x25, x3
  407398:	mov	x26, x0
  40739c:	bl	404b60 <strlen@plt>
  4073a0:	tbnz	w0, #0, 40748c <hexstring_a2n@@Base+0x114>
  4073a4:	str	x27, [sp, #80]
  4073a8:	cbz	w23, 4074bc <hexstring_a2n@@Base+0x144>
  4073ac:	mov	x3, x0
  4073b0:	add	x21, sp, #0x60
  4073b4:	add	x24, sp, #0x68
  4073b8:	stp	x19, x20, [sp, #16]
  4073bc:	and	x20, x0, #0x1
  4073c0:	b	4073e8 <hexstring_a2n@@Base+0x70>
  4073c4:	ldr	x1, [sp, #104]
  4073c8:	ldrb	w1, [x1]
  4073cc:	cbnz	w1, 407444 <hexstring_a2n@@Base+0xcc>
  4073d0:	strb	w4, [x22, x20]
  4073d4:	add	x20, x20, #0x1
  4073d8:	cmp	w23, w20
  4073dc:	b.ls	407464 <hexstring_a2n@@Base+0xec>  // b.plast
  4073e0:	bl	404b60 <strlen@plt>
  4073e4:	mov	x3, x0
  4073e8:	mov	x1, x26
  4073ec:	mov	x0, x21
  4073f0:	cmp	x3, #0x1
  4073f4:	mov	w27, w20
  4073f8:	mov	x2, #0x2                   	// #2
  4073fc:	b.ls	407464 <hexstring_a2n@@Base+0xec>  // b.plast
  407400:	bl	404f80 <strncpy@plt>
  407404:	strb	wzr, [sp, #98]
  407408:	bl	404fd0 <__errno_location@plt>
  40740c:	mov	x19, x0
  407410:	mov	x1, x24
  407414:	mov	x0, x21
  407418:	mov	w2, #0x10                  	// #16
  40741c:	add	x26, x26, #0x2
  407420:	str	wzr, [x19]
  407424:	add	w27, w27, #0x1
  407428:	bl	404b50 <strtoul@plt>
  40742c:	mov	x4, x0
  407430:	ldr	w1, [x19]
  407434:	cmp	w4, #0xff
  407438:	mov	x0, x26
  40743c:	ccmp	w1, #0x0, #0x0, ls  // ls = plast
  407440:	b.eq	4073c4 <hexstring_a2n@@Base+0x4c>  // b.none
  407444:	mov	x0, #0x0                   	// #0
  407448:	ldp	x19, x20, [sp, #16]
  40744c:	ldp	x21, x22, [sp, #32]
  407450:	ldp	x23, x24, [sp, #48]
  407454:	ldp	x25, x26, [sp, #64]
  407458:	ldr	x27, [sp, #80]
  40745c:	ldp	x29, x30, [sp], #112
  407460:	ret
  407464:	ldp	x19, x20, [sp, #16]
  407468:	mov	x0, x22
  40746c:	cbz	x25, 4074a4 <hexstring_a2n@@Base+0x12c>
  407470:	str	w27, [x25]
  407474:	ldp	x21, x22, [sp, #32]
  407478:	ldp	x23, x24, [sp, #48]
  40747c:	ldp	x25, x26, [sp, #64]
  407480:	ldr	x27, [sp, #80]
  407484:	ldp	x29, x30, [sp], #112
  407488:	ret
  40748c:	mov	x0, #0x0                   	// #0
  407490:	ldp	x21, x22, [sp, #32]
  407494:	ldp	x23, x24, [sp, #48]
  407498:	ldp	x25, x26, [sp, #64]
  40749c:	ldp	x29, x30, [sp], #112
  4074a0:	ret
  4074a4:	ldp	x21, x22, [sp, #32]
  4074a8:	ldp	x23, x24, [sp, #48]
  4074ac:	ldp	x25, x26, [sp, #64]
  4074b0:	ldr	x27, [sp, #80]
  4074b4:	ldp	x29, x30, [sp], #112
  4074b8:	ret
  4074bc:	mov	w27, #0x0                   	// #0
  4074c0:	b	407468 <hexstring_a2n@@Base+0xf0>
  4074c4:	nop

00000000004074c8 <hex2mem@@Base>:
  4074c8:	cmp	w2, #0x0
  4074cc:	b.le	407558 <hex2mem@@Base+0x90>
  4074d0:	stp	x29, x30, [sp, #-48]!
  4074d4:	sub	w2, w2, #0x1
  4074d8:	mov	x29, sp
  4074dc:	str	x21, [sp, #32]
  4074e0:	add	x21, x1, #0x1
  4074e4:	add	x21, x21, x2
  4074e8:	stp	x19, x20, [sp, #16]
  4074ec:	mov	x19, x1
  4074f0:	add	x20, x0, #0x1
  4074f4:	b	407524 <hex2mem@@Base+0x5c>
  4074f8:	ubfiz	w0, w0, #4, #4
  4074fc:	strb	w0, [x19]
  407500:	add	x20, x20, #0x2
  407504:	ldurb	w0, [x20, #-2]
  407508:	bl	405948 <get_hex@@Base>
  40750c:	tbnz	w0, #31, 407530 <hex2mem@@Base+0x68>
  407510:	ldrb	w1, [x19]
  407514:	orr	w0, w0, w1
  407518:	strb	w0, [x19], #1
  40751c:	cmp	x19, x21
  407520:	b.eq	407544 <hex2mem@@Base+0x7c>  // b.none
  407524:	ldurb	w0, [x20, #-1]
  407528:	bl	405948 <get_hex@@Base>
  40752c:	tbz	w0, #31, 4074f8 <hex2mem@@Base+0x30>
  407530:	mov	w0, #0xffffffff            	// #-1
  407534:	ldp	x19, x20, [sp, #16]
  407538:	ldr	x21, [sp, #32]
  40753c:	ldp	x29, x30, [sp], #48
  407540:	ret
  407544:	mov	w0, #0x0                   	// #0
  407548:	ldp	x19, x20, [sp, #16]
  40754c:	ldr	x21, [sp, #32]
  407550:	ldp	x29, x30, [sp], #48
  407554:	ret
  407558:	mov	w0, #0x0                   	// #0
  40755c:	ret

0000000000407560 <addr64_n2a@@Base>:
  407560:	stp	x29, x30, [sp, #-96]!
  407564:	rev16	w3, w0
  407568:	and	w3, w3, #0xffff
  40756c:	mov	x29, sp
  407570:	stp	x19, x20, [sp, #16]
  407574:	add	x20, sp, #0x58
  407578:	mov	x19, #0x0                   	// #0
  40757c:	stp	x21, x22, [sp, #32]
  407580:	mov	x21, x1
  407584:	mov	x22, x2
  407588:	stp	x23, x24, [sp, #48]
  40758c:	adrp	x24, 40d000 <rta_addattr_l@@Base+0x98>
  407590:	add	x23, x20, #0x6
  407594:	add	x24, x24, #0x9a8
  407598:	str	x25, [sp, #64]
  40759c:	adrp	x25, 40d000 <rta_addattr_l@@Base+0x98>
  4075a0:	add	x25, x25, #0x9a0
  4075a4:	str	x0, [sp, #88]
  4075a8:	mov	x4, x25
  4075ac:	mov	x2, x24
  4075b0:	sub	x1, x22, x19
  4075b4:	add	x0, x21, x19
  4075b8:	bl	404c40 <snprintf@plt>
  4075bc:	tbnz	w0, #31, 4075fc <addr64_n2a@@Base+0x9c>
  4075c0:	ldrh	w3, [x20, #2]!
  4075c4:	add	x19, x19, w0, sxtw
  4075c8:	rev16	w3, w3
  4075cc:	cmp	x23, x20
  4075d0:	and	w3, w3, #0xffff
  4075d4:	b.ne	4075a8 <addr64_n2a@@Base+0x48>  // b.any
  4075d8:	sub	x1, x22, x19
  4075dc:	add	x0, x21, x19
  4075e0:	mov	x2, x24
  4075e4:	adrp	x4, 40d000 <rta_addattr_l@@Base+0x98>
  4075e8:	add	x4, x4, #0x730
  4075ec:	bl	404c40 <snprintf@plt>
  4075f0:	cmp	w0, #0x0
  4075f4:	add	x19, x19, w0, sxtw
  4075f8:	csel	w0, w0, w19, lt  // lt = tstop
  4075fc:	ldp	x19, x20, [sp, #16]
  407600:	ldp	x21, x22, [sp, #32]
  407604:	ldp	x23, x24, [sp, #48]
  407608:	ldr	x25, [sp, #64]
  40760c:	ldp	x29, x30, [sp], #96
  407610:	ret
  407614:	nop

0000000000407618 <print_escape_buf@@Base>:
  407618:	cbz	x1, 4076c4 <print_escape_buf@@Base+0xac>
  40761c:	stp	x29, x30, [sp, #-64]!
  407620:	mov	x29, sp
  407624:	stp	x19, x20, [sp, #16]
  407628:	mov	x20, x0
  40762c:	stp	x21, x22, [sp, #32]
  407630:	mov	x21, x1
  407634:	mov	x22, x2
  407638:	add	x21, x20, x21
  40763c:	stp	x23, x24, [sp, #48]
  407640:	adrp	x24, 40d000 <rta_addattr_l@@Base+0x98>
  407644:	bl	404e00 <__ctype_b_loc@plt>
  407648:	add	x24, x24, #0x9b0
  40764c:	mov	x23, x0
  407650:	b	40766c <print_escape_buf@@Base+0x54>
  407654:	mov	w1, w19
  407658:	mov	x0, x24
  40765c:	add	x20, x20, #0x1
  407660:	bl	404fb0 <printf@plt>
  407664:	cmp	x21, x20
  407668:	b.eq	4076b0 <print_escape_buf@@Base+0x98>  // b.none
  40766c:	ldrb	w19, [x20]
  407670:	mov	x0, x22
  407674:	ldr	x4, [x23]
  407678:	cmp	w19, #0x5c
  40767c:	ubfiz	x3, x19, #1, #8
  407680:	mov	w1, w19
  407684:	ldrh	w3, [x4, x3]
  407688:	and	w3, w3, #0x4000
  40768c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  407690:	b.eq	407654 <print_escape_buf@@Base+0x3c>  // b.none
  407694:	bl	404e90 <strchr@plt>
  407698:	cbnz	x0, 407654 <print_escape_buf@@Base+0x3c>
  40769c:	mov	w0, w19
  4076a0:	add	x20, x20, #0x1
  4076a4:	bl	404ff0 <putchar@plt>
  4076a8:	cmp	x21, x20
  4076ac:	b.ne	40766c <print_escape_buf@@Base+0x54>  // b.any
  4076b0:	ldp	x19, x20, [sp, #16]
  4076b4:	ldp	x21, x22, [sp, #32]
  4076b8:	ldp	x23, x24, [sp, #48]
  4076bc:	ldp	x29, x30, [sp], #64
  4076c0:	ret
  4076c4:	ret

00000000004076c8 <print_timestamp@@Base>:
  4076c8:	stp	x29, x30, [sp, #-96]!
  4076cc:	mov	x1, #0x0                   	// #0
  4076d0:	mov	x29, sp
  4076d4:	stp	x19, x20, [sp, #16]
  4076d8:	add	x19, sp, #0x28
  4076dc:	mov	x20, x0
  4076e0:	mov	x0, x19
  4076e4:	bl	404d00 <gettimeofday@plt>
  4076e8:	mov	x0, x19
  4076ec:	bl	404c60 <localtime@plt>
  4076f0:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13c90>
  4076f4:	ldr	x1, [x1, #4032]
  4076f8:	ldr	w1, [x1]
  4076fc:	cbz	w1, 407744 <print_timestamp@@Base+0x7c>
  407700:	add	x19, sp, #0x38
  407704:	mov	x3, x0
  407708:	mov	x1, #0x28                  	// #40
  40770c:	mov	x0, x19
  407710:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  407714:	add	x2, x2, #0x9b8
  407718:	bl	404c20 <strftime@plt>
  40771c:	ldr	x3, [sp, #48]
  407720:	mov	x2, x19
  407724:	mov	x0, x20
  407728:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40772c:	add	x1, x1, #0x9d0
  407730:	bl	405020 <fprintf@plt>
  407734:	mov	w0, #0x0                   	// #0
  407738:	ldp	x19, x20, [sp, #16]
  40773c:	ldp	x29, x30, [sp], #96
  407740:	ret
  407744:	bl	404f20 <asctime@plt>
  407748:	mov	x19, x0
  40774c:	bl	404b60 <strlen@plt>
  407750:	mov	x2, x19
  407754:	add	x19, x19, x0
  407758:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40775c:	mov	x0, x20
  407760:	add	x1, x1, #0x9e0
  407764:	sturb	wzr, [x19, #-1]
  407768:	ldr	x3, [sp, #48]
  40776c:	bl	405020 <fprintf@plt>
  407770:	mov	w0, #0x0                   	// #0
  407774:	ldp	x19, x20, [sp, #16]
  407778:	ldp	x29, x30, [sp], #96
  40777c:	ret

0000000000407780 <print_name_and_link@@Base>:
  407780:	stp	x29, x30, [sp, #-112]!
  407784:	mov	x29, sp
  407788:	stp	x19, x20, [sp, #16]
  40778c:	mov	x20, x0
  407790:	mov	x19, x1
  407794:	ldr	x0, [x2, #40]
  407798:	stp	x21, x22, [sp, #32]
  40779c:	mov	w21, #0x0                   	// #0
  4077a0:	cbz	x0, 4077e0 <print_name_and_link@@Base+0x60>
  4077a4:	ldr	w21, [x0, #4]
  4077a8:	cbz	w21, 407810 <print_name_and_link@@Base+0x90>
  4077ac:	ldr	x0, [x2, #296]
  4077b0:	cbz	x0, 407888 <print_name_and_link@@Base+0x108>
  4077b4:	bl	4093e0 <is_json_context@@Base>
  4077b8:	tst	w0, #0xff
  4077bc:	b.eq	40782c <print_name_and_link@@Base+0xac>  // b.none
  4077c0:	mov	w4, w21
  4077c4:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  4077c8:	mov	x3, #0x0                   	// #0
  4077cc:	add	x2, x2, #0xa00
  4077d0:	mov	w1, #0x6                   	// #6
  4077d4:	mov	w0, #0x2                   	// #2
  4077d8:	mov	w21, #0x0                   	// #0
  4077dc:	bl	409518 <print_color_int@@Base>
  4077e0:	mov	x4, x19
  4077e4:	mov	x3, x20
  4077e8:	mov	w1, #0x0                   	// #0
  4077ec:	mov	w0, #0x4                   	// #4
  4077f0:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  4077f4:	add	x2, x2, #0xa18
  4077f8:	bl	4098e0 <print_color_string@@Base>
  4077fc:	mov	w0, w21
  407800:	ldp	x19, x20, [sp, #16]
  407804:	ldp	x21, x22, [sp, #32]
  407808:	ldp	x29, x30, [sp], #112
  40780c:	ret
  407810:	bl	4093e0 <is_json_context@@Base>
  407814:	tst	w0, #0xff
  407818:	b.ne	407864 <print_name_and_link@@Base+0xe4>  // b.any
  40781c:	adrp	x22, 40d000 <rta_addattr_l@@Base+0x98>
  407820:	mov	w21, #0x0                   	// #0
  407824:	add	x22, x22, #0x9f8
  407828:	b	407840 <print_name_and_link@@Base+0xc0>
  40782c:	mov	w0, w21
  407830:	bl	408c68 <ll_idx_n2a@@Base>
  407834:	mov	x22, x0
  407838:	mov	w21, #0x0                   	// #0
  40783c:	cbz	x22, 4077e0 <print_name_and_link@@Base+0x60>
  407840:	add	x0, sp, #0x30
  407844:	mov	x3, x19
  407848:	mov	x4, x22
  40784c:	mov	x19, x0
  407850:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  407854:	mov	x1, #0x40                  	// #64
  407858:	add	x2, x2, #0xa10
  40785c:	bl	404c40 <snprintf@plt>
  407860:	b	4077e0 <print_name_and_link@@Base+0x60>
  407864:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  407868:	mov	x4, #0x0                   	// #0
  40786c:	add	x2, x2, #0x4a0
  407870:	mov	x3, #0x0                   	// #0
  407874:	mov	w1, #0x6                   	// #6
  407878:	mov	w0, #0x2                   	// #2
  40787c:	mov	w21, #0x0                   	// #0
  407880:	bl	409ba0 <print_color_null@@Base>
  407884:	b	4077e0 <print_name_and_link@@Base+0x60>
  407888:	mov	w0, w21
  40788c:	bl	408ca8 <ll_index_to_name@@Base>
  407890:	mov	x22, x0
  407894:	bl	4093e0 <is_json_context@@Base>
  407898:	tst	w0, #0xff
  40789c:	b.ne	4078b4 <print_name_and_link@@Base+0x134>  // b.any
  4078a0:	mov	w0, w21
  4078a4:	bl	408de8 <ll_index_to_flags@@Base>
  4078a8:	mvn	w21, w0
  4078ac:	and	w21, w21, #0x1
  4078b0:	b	40783c <print_name_and_link@@Base+0xbc>
  4078b4:	mov	x4, x22
  4078b8:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  4078bc:	add	x2, x2, #0x4a0
  4078c0:	mov	x3, #0x0                   	// #0
  4078c4:	mov	w1, #0x6                   	// #6
  4078c8:	mov	w0, #0x2                   	// #2
  4078cc:	bl	4098e0 <print_color_string@@Base>
  4078d0:	mov	w0, w21
  4078d4:	bl	408de8 <ll_index_to_flags@@Base>
  4078d8:	mvn	w21, w0
  4078dc:	and	w21, w21, #0x1
  4078e0:	b	4077e0 <print_name_and_link@@Base+0x60>
  4078e4:	nop

00000000004078e8 <getcmdline@@Base>:
  4078e8:	stp	x29, x30, [sp, #-128]!
  4078ec:	mov	x3, x2
  4078f0:	mov	x29, sp
  4078f4:	stp	x19, x20, [sp, #16]
  4078f8:	mov	x20, x0
  4078fc:	stp	x21, x22, [sp, #32]
  407900:	stp	x23, x24, [sp, #48]
  407904:	mov	x23, x2
  407908:	mov	w2, #0xa                   	// #10
  40790c:	str	x1, [sp, #96]
  407910:	bl	405000 <__getdelim@plt>
  407914:	mov	x21, x0
  407918:	tbnz	x0, #63, 407a54 <getcmdline@@Base+0x16c>
  40791c:	adrp	x22, 421000 <_IO_stdin_used@@Base+0x13c90>
  407920:	stp	x25, x26, [sp, #64]
  407924:	mov	w1, #0x23                  	// #35
  407928:	ldr	x3, [x22, #4000]
  40792c:	stp	x27, x28, [sp, #80]
  407930:	ldr	x19, [x20]
  407934:	ldr	w2, [x3]
  407938:	mov	x0, x19
  40793c:	add	w2, w2, #0x1
  407940:	str	w2, [x3]
  407944:	bl	404e90 <strchr@plt>
  407948:	cbz	x0, 407954 <getcmdline@@Base+0x6c>
  40794c:	strb	wzr, [x0]
  407950:	ldr	x19, [x20]
  407954:	adrp	x25, 40d000 <rta_addattr_l@@Base+0x98>
  407958:	ldr	x22, [x22, #4000]
  40795c:	add	x25, x25, #0xa50
  407960:	add	x27, sp, #0x78
  407964:	add	x26, sp, #0x70
  407968:	b	4079c4 <getcmdline@@Base+0xdc>
  40796c:	strb	wzr, [x0]
  407970:	ldr	x24, [x20]
  407974:	mov	x0, x24
  407978:	bl	404b60 <strlen@plt>
  40797c:	mov	x28, x0
  407980:	ldr	x0, [sp, #112]
  407984:	bl	404b60 <strlen@plt>
  407988:	add	x1, x0, x28
  40798c:	mov	x0, x24
  407990:	ldr	x2, [sp, #96]
  407994:	add	x1, x1, #0x1
  407998:	str	x1, [x2]
  40799c:	bl	404d40 <realloc@plt>
  4079a0:	str	x0, [x20]
  4079a4:	cbz	x0, 407ab0 <getcmdline@@Base+0x1c8>
  4079a8:	ldr	x1, [sp, #112]
  4079ac:	sub	x19, x19, #0x2
  4079b0:	add	x21, x21, x19
  4079b4:	bl	404cd0 <strcat@plt>
  4079b8:	ldr	x0, [sp, #112]
  4079bc:	bl	404e50 <free@plt>
  4079c0:	ldr	x19, [x20]
  4079c4:	mov	x1, x25
  4079c8:	mov	x0, x19
  4079cc:	bl	404f60 <strstr@plt>
  4079d0:	mov	x3, x23
  4079d4:	mov	x28, x0
  4079d8:	mov	x1, x27
  4079dc:	mov	x0, x26
  4079e0:	mov	w2, #0xa                   	// #10
  4079e4:	cbz	x28, 407a4c <getcmdline@@Base+0x164>
  4079e8:	stp	xzr, xzr, [sp, #112]
  4079ec:	bl	405000 <__getdelim@plt>
  4079f0:	mov	w1, #0x23                  	// #35
  4079f4:	mov	x19, x0
  4079f8:	tbnz	x0, #63, 407a6c <getcmdline@@Base+0x184>
  4079fc:	ldr	w0, [x22]
  407a00:	add	w0, w0, #0x1
  407a04:	str	w0, [x22]
  407a08:	strb	wzr, [x28]
  407a0c:	ldr	x28, [sp, #112]
  407a10:	mov	x0, x28
  407a14:	bl	404e90 <strchr@plt>
  407a18:	cbnz	x0, 40796c <getcmdline@@Base+0x84>
  407a1c:	ldr	x3, [x20]
  407a20:	str	x3, [sp, #104]
  407a24:	mov	x0, x3
  407a28:	bl	404b60 <strlen@plt>
  407a2c:	mov	x1, x0
  407a30:	mov	x0, x28
  407a34:	mov	x28, x1
  407a38:	bl	404b60 <strlen@plt>
  407a3c:	add	x1, x28, x0
  407a40:	ldr	x3, [sp, #104]
  407a44:	mov	x0, x3
  407a48:	b	407990 <getcmdline@@Base+0xa8>
  407a4c:	ldp	x25, x26, [sp, #64]
  407a50:	ldp	x27, x28, [sp, #80]
  407a54:	mov	x0, x21
  407a58:	ldp	x19, x20, [sp, #16]
  407a5c:	ldp	x21, x22, [sp, #32]
  407a60:	ldp	x23, x24, [sp, #48]
  407a64:	ldp	x29, x30, [sp], #128
  407a68:	ret
  407a6c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  407a70:	mov	x21, x0
  407a74:	mov	x2, #0x1a                  	// #26
  407a78:	mov	x1, #0x1                   	// #1
  407a7c:	ldr	x3, [x3, #3992]
  407a80:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  407a84:	add	x0, x0, #0xa20
  407a88:	ldr	x3, [x3]
  407a8c:	bl	404eb0 <fwrite@plt>
  407a90:	mov	x0, x21
  407a94:	ldp	x19, x20, [sp, #16]
  407a98:	ldp	x21, x22, [sp, #32]
  407a9c:	ldp	x23, x24, [sp, #48]
  407aa0:	ldp	x25, x26, [sp, #64]
  407aa4:	ldp	x27, x28, [sp, #80]
  407aa8:	ldp	x29, x30, [sp], #128
  407aac:	ret
  407ab0:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  407ab4:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  407ab8:	mov	x2, #0xe                   	// #14
  407abc:	add	x0, x0, #0xa40
  407ac0:	ldr	x3, [x3, #3992]
  407ac4:	mov	x1, #0x1                   	// #1
  407ac8:	mov	x21, #0xffffffffffffffff    	// #-1
  407acc:	ldr	x3, [x3]
  407ad0:	bl	404eb0 <fwrite@plt>
  407ad4:	ldr	x0, [sp, #96]
  407ad8:	ldp	x25, x26, [sp, #64]
  407adc:	ldp	x27, x28, [sp, #80]
  407ae0:	str	xzr, [x0]
  407ae4:	b	407a54 <getcmdline@@Base+0x16c>

0000000000407ae8 <makeargs@@Base>:
  407ae8:	stp	x29, x30, [sp, #-80]!
  407aec:	mov	x29, sp
  407af0:	stp	x19, x20, [sp, #16]
  407af4:	mov	x19, x0
  407af8:	stp	x23, x24, [sp, #48]
  407afc:	mov	x23, x1
  407b00:	stp	x25, x26, [sp, #64]
  407b04:	ldrb	w0, [x0]
  407b08:	cbz	w0, 407bcc <makeargs@@Base+0xe4>
  407b0c:	stp	x21, x22, [sp, #32]
  407b10:	adrp	x22, 40d000 <rta_addattr_l@@Base+0x98>
  407b14:	add	x22, x22, #0xb20
  407b18:	sub	w24, w2, #0x1
  407b1c:	add	x22, x22, #0x70
  407b20:	mov	x20, #0x0                   	// #0
  407b24:	mov	w25, #0x22                  	// #34
  407b28:	b	407b50 <makeargs@@Base+0x68>
  407b2c:	add	x0, x21, #0x1
  407b30:	str	x0, [x23, x20, lsl #3]
  407b34:	bl	404e90 <strchr@plt>
  407b38:	cbz	x0, 407bfc <makeargs@@Base+0x114>
  407b3c:	mov	x19, x0
  407b40:	add	x20, x20, #0x1
  407b44:	strb	wzr, [x19], #1
  407b48:	ldrb	w0, [x0, #1]
  407b4c:	cbz	w0, 407ba8 <makeargs@@Base+0xc0>
  407b50:	mov	x1, x22
  407b54:	mov	x0, x19
  407b58:	bl	404e80 <strspn@plt>
  407b5c:	ldrb	w1, [x19, x0]
  407b60:	add	x21, x19, x0
  407b64:	mov	w26, w20
  407b68:	cbz	w1, 407ba8 <makeargs@@Base+0xc0>
  407b6c:	cmp	w24, w20
  407b70:	b.le	407bd4 <makeargs@@Base+0xec>
  407b74:	cmp	w1, #0x27
  407b78:	add	w26, w20, #0x1
  407b7c:	ccmp	w1, w25, #0x4, ne  // ne = any
  407b80:	b.eq	407b2c <makeargs@@Base+0x44>  // b.none
  407b84:	str	x21, [x23, x20, lsl #3]
  407b88:	mov	x1, x22
  407b8c:	mov	x0, x21
  407b90:	bl	404f90 <strcspn@plt>
  407b94:	mov	x1, x0
  407b98:	add	x0, x21, x0
  407b9c:	ldrb	w1, [x21, x1]
  407ba0:	cbnz	w1, 407b3c <makeargs@@Base+0x54>
  407ba4:	nop
  407ba8:	ldp	x21, x22, [sp, #32]
  407bac:	add	x23, x23, w26, sxtw #3
  407bb0:	mov	w0, w26
  407bb4:	ldp	x19, x20, [sp, #16]
  407bb8:	ldp	x25, x26, [sp, #64]
  407bbc:	str	xzr, [x23]
  407bc0:	ldp	x23, x24, [sp, #48]
  407bc4:	ldp	x29, x30, [sp], #80
  407bc8:	ret
  407bcc:	mov	w26, #0x0                   	// #0
  407bd0:	b	407bb0 <makeargs@@Base+0xc8>
  407bd4:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  407bd8:	mov	x2, #0x1e                  	// #30
  407bdc:	mov	x1, #0x1                   	// #1
  407be0:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  407be4:	ldr	x3, [x3, #3992]
  407be8:	add	x0, x0, #0xa58
  407bec:	ldr	x3, [x3]
  407bf0:	bl	404eb0 <fwrite@plt>
  407bf4:	mov	w0, #0x1                   	// #1
  407bf8:	bl	404b70 <exit@plt>
  407bfc:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  407c00:	mov	x2, #0x1b                  	// #27
  407c04:	mov	x1, #0x1                   	// #1
  407c08:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  407c0c:	ldr	x3, [x3, #3992]
  407c10:	add	x0, x0, #0xa78
  407c14:	ldr	x3, [x3]
  407c18:	bl	404eb0 <fwrite@plt>
  407c1c:	mov	w0, #0x1                   	// #1
  407c20:	bl	404b70 <exit@plt>
  407c24:	nop

0000000000407c28 <print_nlmsg_timestamp@@Base>:
  407c28:	stp	x29, x30, [sp, #-64]!
  407c2c:	mov	x29, sp
  407c30:	ldr	w2, [x1, #16]
  407c34:	stp	x19, x20, [sp, #16]
  407c38:	mov	x20, x0
  407c3c:	add	x0, sp, #0x38
  407c40:	str	x21, [sp, #32]
  407c44:	ldr	w21, [x1, #20]
  407c48:	str	x2, [sp, #56]
  407c4c:	bl	404c60 <localtime@plt>
  407c50:	bl	404f20 <asctime@plt>
  407c54:	mov	x19, x0
  407c58:	bl	404b60 <strlen@plt>
  407c5c:	add	x4, x19, x0
  407c60:	mov	x3, x21
  407c64:	mov	x2, x19
  407c68:	mov	x0, x20
  407c6c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  407c70:	sturb	wzr, [x4, #-1]
  407c74:	add	x1, x1, #0xa98
  407c78:	bl	405020 <fprintf@plt>
  407c7c:	ldp	x19, x20, [sp, #16]
  407c80:	ldr	x21, [sp, #32]
  407c84:	ldp	x29, x30, [sp], #64
  407c88:	ret
  407c8c:	nop

0000000000407c90 <int_to_str@@Base>:
  407c90:	stp	x29, x30, [sp, #-32]!
  407c94:	mov	w2, w0
  407c98:	mov	x0, x1
  407c9c:	mov	x29, sp
  407ca0:	str	x19, [sp, #16]
  407ca4:	mov	x19, x1
  407ca8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  407cac:	add	x1, x1, #0xab0
  407cb0:	bl	404bf0 <sprintf@plt>
  407cb4:	mov	x0, x19
  407cb8:	ldr	x19, [sp, #16]
  407cbc:	ldp	x29, x30, [sp], #32
  407cc0:	ret
  407cc4:	nop

0000000000407cc8 <get_guid@@Base>:
  407cc8:	stp	x29, x30, [sp, #-64]!
  407ccc:	mov	x29, sp
  407cd0:	stp	x19, x20, [sp, #16]
  407cd4:	mov	x20, x1
  407cd8:	stp	x21, x22, [sp, #32]
  407cdc:	mov	x21, x0
  407ce0:	mov	x0, x1
  407ce4:	bl	404b60 <strlen@plt>
  407ce8:	cmp	x0, #0x17
  407cec:	b.ne	407dac <get_guid@@Base+0xe4>  // b.any
  407cf0:	ldrb	w0, [x20, #2]
  407cf4:	add	x19, x20, #0x2
  407cf8:	cmp	w0, #0x3a
  407cfc:	b.ne	407dac <get_guid@@Base+0xe4>  // b.any
  407d00:	ldrb	w0, [x20, #5]
  407d04:	cmp	w0, #0x3a
  407d08:	b.ne	407dac <get_guid@@Base+0xe4>  // b.any
  407d0c:	ldrb	w0, [x20, #8]
  407d10:	cmp	w0, #0x3a
  407d14:	b.ne	407dac <get_guid@@Base+0xe4>  // b.any
  407d18:	ldrb	w0, [x20, #11]
  407d1c:	cmp	w0, #0x3a
  407d20:	b.ne	407dac <get_guid@@Base+0xe4>  // b.any
  407d24:	ldrb	w0, [x20, #14]
  407d28:	cmp	w0, #0x3a
  407d2c:	b.ne	407dac <get_guid@@Base+0xe4>  // b.any
  407d30:	ldrb	w0, [x20, #17]
  407d34:	cmp	w0, #0x3a
  407d38:	b.ne	407dac <get_guid@@Base+0xe4>  // b.any
  407d3c:	ldrb	w0, [x20, #20]
  407d40:	cmp	w0, #0x3a
  407d44:	b.ne	407dac <get_guid@@Base+0xe4>  // b.any
  407d48:	add	x22, sp, #0x38
  407d4c:	mov	w20, #0x38                  	// #56
  407d50:	str	xzr, [x21]
  407d54:	nop
  407d58:	mov	w2, #0x10                  	// #16
  407d5c:	mov	x1, x22
  407d60:	sub	x0, x19, #0x2
  407d64:	bl	404b50 <strtoul@plt>
  407d68:	ldr	x2, [sp, #56]
  407d6c:	cmp	x0, #0xff
  407d70:	lsl	x0, x0, x20
  407d74:	sub	w20, w20, #0x8
  407d78:	ccmp	x2, x19, #0x0, ls  // ls = plast
  407d7c:	b.ne	407dac <get_guid@@Base+0xe4>  // b.any
  407d80:	ldr	x2, [x21]
  407d84:	add	x19, x19, #0x3
  407d88:	cmn	w20, #0x8
  407d8c:	orr	x0, x2, x0
  407d90:	str	x0, [x21]
  407d94:	b.ne	407d58 <get_guid@@Base+0x90>  // b.any
  407d98:	mov	w0, #0x0                   	// #0
  407d9c:	ldp	x19, x20, [sp, #16]
  407da0:	ldp	x21, x22, [sp, #32]
  407da4:	ldp	x29, x30, [sp], #64
  407da8:	ret
  407dac:	mov	w0, #0xffffffff            	// #-1
  407db0:	ldp	x19, x20, [sp, #16]
  407db4:	ldp	x21, x22, [sp, #32]
  407db8:	ldp	x29, x30, [sp], #64
  407dbc:	ret

0000000000407dc0 <get_real_family@@Base>:
  407dc0:	cmp	w0, #0x5
  407dc4:	mov	w0, w1
  407dc8:	b.ne	407de0 <get_real_family@@Base+0x20>  // b.any
  407dcc:	cmp	w1, #0x80
  407dd0:	b.eq	407de4 <get_real_family@@Base+0x24>  // b.none
  407dd4:	cmp	w1, #0x81
  407dd8:	mov	w1, #0xa                   	// #10
  407ddc:	csel	w0, w0, w1, ne  // ne = any
  407de0:	ret
  407de4:	mov	w0, #0x2                   	// #2
  407de8:	ret
  407dec:	nop

0000000000407df0 <get_rtnl_link_stats_rta@@Base>:
  407df0:	sub	sp, sp, #0x990
  407df4:	stp	x29, x30, [sp]
  407df8:	mov	x29, sp
  407dfc:	stp	x21, x22, [sp, #32]
  407e00:	ldr	x21, [x1, #184]
  407e04:	stp	x19, x20, [sp, #16]
  407e08:	mov	x19, x0
  407e0c:	str	x23, [sp, #48]
  407e10:	cbz	x21, 407ed4 <get_rtnl_link_stats_rta@@Base+0xe4>
  407e14:	mov	x22, #0xc0                  	// #192
  407e18:	mov	x20, x0
  407e1c:	mov	w23, w22
  407e20:	ldrh	w0, [x21]
  407e24:	sub	w0, w0, #0x4
  407e28:	cmp	w23, w0
  407e2c:	b.gt	407eb8 <get_rtnl_link_stats_rta@@Base+0xc8>
  407e30:	mov	x2, x22
  407e34:	add	x1, x21, #0x4
  407e38:	mov	x0, x20
  407e3c:	bl	404b30 <memcpy@plt>
  407e40:	cmp	x20, x19
  407e44:	b.eq	407e9c <get_rtnl_link_stats_rta@@Base+0xac>  // b.none
  407e48:	ldp	q5, q4, [x20]
  407e4c:	ldp	q3, q2, [x20, #32]
  407e50:	uxtl	v16.2d, v5.2s
  407e54:	uxtl	v7.2d, v4.2s
  407e58:	uxtl2	v5.2d, v5.4s
  407e5c:	uxtl2	v4.2d, v4.4s
  407e60:	uxtl	v6.2d, v3.2s
  407e64:	uxtl2	v3.2d, v3.4s
  407e68:	ldp	q1, q0, [x20, #64]
  407e6c:	stp	q16, q5, [x19]
  407e70:	uxtl	v5.2d, v2.2s
  407e74:	stp	q7, q4, [x19, #32]
  407e78:	uxtl2	v2.2d, v2.4s
  407e7c:	stp	q6, q3, [x19, #64]
  407e80:	uxtl	v4.2d, v1.2s
  407e84:	uxtl	v3.2d, v0.2s
  407e88:	uxtl2	v1.2d, v1.4s
  407e8c:	stp	q5, q2, [x19, #96]
  407e90:	uxtl2	v0.2d, v0.4s
  407e94:	stp	q4, q1, [x19, #128]
  407e98:	stp	q3, q0, [x19, #160]
  407e9c:	mov	w0, w23
  407ea0:	ldp	x29, x30, [sp]
  407ea4:	ldp	x19, x20, [sp, #16]
  407ea8:	ldp	x21, x22, [sp, #32]
  407eac:	ldr	x23, [sp, #48]
  407eb0:	add	sp, sp, #0x990
  407eb4:	ret
  407eb8:	sub	w2, w23, w0
  407ebc:	sxtw	x22, w0
  407ec0:	add	x0, x20, x22
  407ec4:	mov	w1, #0x0                   	// #0
  407ec8:	sxtw	x2, w2
  407ecc:	bl	404cf0 <memset@plt>
  407ed0:	b	407e30 <get_rtnl_link_stats_rta@@Base+0x40>
  407ed4:	ldr	x21, [x1, #56]
  407ed8:	cbz	x21, 407eec <get_rtnl_link_stats_rta@@Base+0xfc>
  407edc:	mov	x22, #0x60                  	// #96
  407ee0:	add	x20, sp, #0x48
  407ee4:	mov	w23, w22
  407ee8:	b	407e20 <get_rtnl_link_stats_rta@@Base+0x30>
  407eec:	ldr	x2, [x1, #96]
  407ef0:	cbz	x2, 407f88 <get_rtnl_link_stats_rta@@Base+0x198>
  407ef4:	ldrh	w3, [x2], #4
  407ef8:	add	x0, sp, #0x48
  407efc:	mov	w1, #0x128                 	// #296
  407f00:	sub	w3, w3, #0x4
  407f04:	bl	40d1e0 <parse_rtattr@@Base>
  407f08:	ldr	x0, [sp, #96]
  407f0c:	cbz	x0, 407f80 <get_rtnl_link_stats_rta@@Base+0x190>
  407f10:	stp	xzr, xzr, [x19]
  407f14:	stp	xzr, xzr, [x19, #16]
  407f18:	stp	xzr, xzr, [x19, #32]
  407f1c:	stp	xzr, xzr, [x19, #48]
  407f20:	stp	xzr, xzr, [x19, #64]
  407f24:	stp	xzr, xzr, [x19, #80]
  407f28:	stp	xzr, xzr, [x19, #96]
  407f2c:	stp	xzr, xzr, [x19, #112]
  407f30:	stp	xzr, xzr, [x19, #128]
  407f34:	stp	xzr, xzr, [x19, #144]
  407f38:	stp	xzr, xzr, [x19, #160]
  407f3c:	stp	xzr, xzr, [x19, #176]
  407f40:	ldur	x1, [x0, #12]
  407f44:	str	x1, [x19]
  407f48:	ldur	x1, [x0, #20]
  407f4c:	str	x1, [x19, #16]
  407f50:	ldur	x1, [x0, #44]
  407f54:	str	x1, [x19, #8]
  407f58:	ldur	x1, [x0, #52]
  407f5c:	str	x1, [x19, #24]
  407f60:	ldur	x1, [x0, #108]
  407f64:	str	x1, [x19, #32]
  407f68:	ldur	x1, [x0, #116]
  407f6c:	str	x1, [x19, #40]
  407f70:	ldur	x1, [x0, #188]
  407f74:	str	x1, [x19, #64]
  407f78:	ldur	x0, [x0, #252]
  407f7c:	str	x0, [x19, #104]
  407f80:	mov	w23, #0xc0                  	// #192
  407f84:	b	407e9c <get_rtnl_link_stats_rta@@Base+0xac>
  407f88:	mov	w23, #0xffffffff            	// #-1
  407f8c:	b	407e9c <get_rtnl_link_stats_rta@@Base+0xac>

0000000000407f90 <strlcpy@@Base>:
  407f90:	stp	x29, x30, [sp, #-48]!
  407f94:	mov	x29, sp
  407f98:	stp	x19, x20, [sp, #16]
  407f9c:	mov	x19, x2
  407fa0:	stp	x21, x22, [sp, #32]
  407fa4:	mov	x21, x1
  407fa8:	mov	x22, x0
  407fac:	mov	x0, x1
  407fb0:	bl	404b60 <strlen@plt>
  407fb4:	mov	x20, x0
  407fb8:	cbnz	x19, 407fd0 <strlcpy@@Base+0x40>
  407fbc:	mov	x0, x20
  407fc0:	ldp	x19, x20, [sp, #16]
  407fc4:	ldp	x21, x22, [sp, #32]
  407fc8:	ldp	x29, x30, [sp], #48
  407fcc:	ret
  407fd0:	sub	x19, x19, #0x1
  407fd4:	mov	x1, x21
  407fd8:	cmp	x19, x0
  407fdc:	mov	x0, x22
  407fe0:	csel	x19, x19, x20, ls  // ls = plast
  407fe4:	mov	x2, x19
  407fe8:	bl	404b30 <memcpy@plt>
  407fec:	strb	wzr, [x22, x19]
  407ff0:	mov	x0, x20
  407ff4:	ldp	x19, x20, [sp, #16]
  407ff8:	ldp	x21, x22, [sp, #32]
  407ffc:	ldp	x29, x30, [sp], #48
  408000:	ret
  408004:	nop

0000000000408008 <strlcat@@Base>:
  408008:	stp	x29, x30, [sp, #-48]!
  40800c:	mov	x29, sp
  408010:	stp	x19, x20, [sp, #16]
  408014:	mov	x20, x2
  408018:	stp	x21, x22, [sp, #32]
  40801c:	mov	x21, x1
  408020:	mov	x22, x0
  408024:	bl	404b60 <strlen@plt>
  408028:	mov	x19, x0
  40802c:	cmp	x0, x20
  408030:	b.cc	408050 <strlcat@@Base+0x48>  // b.lo, b.ul, b.last
  408034:	mov	x0, x21
  408038:	bl	404b60 <strlen@plt>
  40803c:	add	x0, x0, x19
  408040:	ldp	x19, x20, [sp, #16]
  408044:	ldp	x21, x22, [sp, #32]
  408048:	ldp	x29, x30, [sp], #48
  40804c:	ret
  408050:	sub	x2, x20, x0
  408054:	mov	x1, x21
  408058:	add	x0, x22, x0
  40805c:	bl	407f90 <strlcpy@@Base>
  408060:	add	x0, x0, x19
  408064:	ldp	x19, x20, [sp, #16]
  408068:	ldp	x21, x22, [sp, #32]
  40806c:	ldp	x29, x30, [sp], #48
  408070:	ret
  408074:	nop

0000000000408078 <drop_cap@@Base>:
  408078:	stp	x29, x30, [sp, #-48]!
  40807c:	mov	x29, sp
  408080:	bl	404c00 <getuid@plt>
  408084:	cbnz	w0, 408090 <drop_cap@@Base+0x18>
  408088:	ldp	x29, x30, [sp], #48
  40808c:	ret
  408090:	bl	404bb0 <geteuid@plt>
  408094:	cbz	w0, 408088 <drop_cap@@Base+0x10>
  408098:	str	x19, [sp, #16]
  40809c:	bl	404e20 <cap_get_proc@plt>
  4080a0:	mov	x19, x0
  4080a4:	cbz	x0, 4080f0 <drop_cap@@Base+0x78>
  4080a8:	add	x3, sp, #0x2c
  4080ac:	mov	w2, #0x2                   	// #2
  4080b0:	mov	w1, #0xc                   	// #12
  4080b4:	bl	404d20 <cap_get_flag@plt>
  4080b8:	cbnz	w0, 4080f0 <drop_cap@@Base+0x78>
  4080bc:	ldr	w0, [sp, #44]
  4080c0:	cbnz	w0, 4080dc <drop_cap@@Base+0x64>
  4080c4:	mov	x0, x19
  4080c8:	bl	404ef0 <cap_clear@plt>
  4080cc:	cbnz	w0, 4080f0 <drop_cap@@Base+0x78>
  4080d0:	mov	x0, x19
  4080d4:	bl	404d50 <cap_set_proc@plt>
  4080d8:	cbnz	w0, 4080f0 <drop_cap@@Base+0x78>
  4080dc:	mov	x0, x19
  4080e0:	bl	404f30 <cap_free@plt>
  4080e4:	ldr	x19, [sp, #16]
  4080e8:	ldp	x29, x30, [sp], #48
  4080ec:	ret
  4080f0:	mov	w0, #0x1                   	// #1
  4080f4:	bl	404b70 <exit@plt>

00000000004080f8 <get_time@@Base>:
  4080f8:	stp	x29, x30, [sp, #-64]!
  4080fc:	mov	x29, sp
  408100:	stp	x19, x20, [sp, #16]
  408104:	mov	x19, x1
  408108:	str	x21, [sp, #32]
  40810c:	mov	x21, x0
  408110:	mov	x0, x1
  408114:	add	x1, sp, #0x38
  408118:	bl	404ba0 <strtod@plt>
  40811c:	ldr	x20, [sp, #56]
  408120:	cmp	x20, x19
  408124:	b.eq	40823c <get_time@@Base+0x144>  // b.none
  408128:	str	d8, [sp, #40]
  40812c:	fmov	d8, d0
  408130:	ldrb	w0, [x20]
  408134:	cbz	w0, 408208 <get_time@@Base+0x110>
  408138:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40813c:	mov	x0, x20
  408140:	add	x1, x1, #0x50
  408144:	bl	404d30 <strcasecmp@plt>
  408148:	cbz	w0, 4081f8 <get_time@@Base+0x100>
  40814c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408150:	mov	x0, x20
  408154:	add	x1, x1, #0x690
  408158:	bl	404d30 <strcasecmp@plt>
  40815c:	cbz	w0, 4081f8 <get_time@@Base+0x100>
  408160:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408164:	mov	x0, x20
  408168:	add	x1, x1, #0x698
  40816c:	bl	404d30 <strcasecmp@plt>
  408170:	cbz	w0, 4081f8 <get_time@@Base+0x100>
  408174:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408178:	mov	x0, x20
  40817c:	add	x1, x1, #0x6a0
  408180:	bl	404d30 <strcasecmp@plt>
  408184:	cbz	w0, 408228 <get_time@@Base+0x130>
  408188:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40818c:	mov	x0, x20
  408190:	add	x1, x1, #0x6a8
  408194:	bl	404d30 <strcasecmp@plt>
  408198:	cbz	w0, 408228 <get_time@@Base+0x130>
  40819c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4081a0:	mov	x0, x20
  4081a4:	add	x1, x1, #0x6b0
  4081a8:	bl	404d30 <strcasecmp@plt>
  4081ac:	cbz	w0, 408228 <get_time@@Base+0x130>
  4081b0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4081b4:	mov	x0, x20
  4081b8:	add	x1, x1, #0xab8
  4081bc:	bl	404d30 <strcasecmp@plt>
  4081c0:	cbz	w0, 408208 <get_time@@Base+0x110>
  4081c4:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4081c8:	mov	x0, x20
  4081cc:	add	x1, x1, #0xac0
  4081d0:	bl	404d30 <strcasecmp@plt>
  4081d4:	cbz	w0, 408208 <get_time@@Base+0x110>
  4081d8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4081dc:	mov	x0, x20
  4081e0:	add	x1, x1, #0xac8
  4081e4:	bl	404d30 <strcasecmp@plt>
  4081e8:	cbz	w0, 408208 <get_time@@Base+0x110>
  4081ec:	mov	w0, #0xffffffff            	// #-1
  4081f0:	ldr	d8, [sp, #40]
  4081f4:	b	408218 <get_time@@Base+0x120>
  4081f8:	mov	x0, #0x848000000000        	// #145685290680320
  4081fc:	movk	x0, #0x412e, lsl #48
  408200:	fmov	d0, x0
  408204:	fmul	d8, d8, d0
  408208:	fcvtzu	w1, d8
  40820c:	mov	w0, #0x0                   	// #0
  408210:	ldr	d8, [sp, #40]
  408214:	str	w1, [x21]
  408218:	ldp	x19, x20, [sp, #16]
  40821c:	ldr	x21, [sp, #32]
  408220:	ldp	x29, x30, [sp], #64
  408224:	ret
  408228:	mov	x0, #0x400000000000        	// #70368744177664
  40822c:	movk	x0, #0x408f, lsl #48
  408230:	fmov	d0, x0
  408234:	fmul	d8, d8, d0
  408238:	b	408208 <get_time@@Base+0x110>
  40823c:	mov	w0, #0xffffffff            	// #-1
  408240:	b	408218 <get_time@@Base+0x120>
  408244:	nop

0000000000408248 <sprint_time@@Base>:
  408248:	stp	x29, x30, [sp, #-32]!
  40824c:	mov	w3, w0
  408250:	mov	w0, #0x423f                	// #16959
  408254:	mov	x29, sp
  408258:	str	x19, [sp, #16]
  40825c:	movk	w0, #0xf, lsl #16
  408260:	ucvtf	d0, w3
  408264:	cmp	w3, w0
  408268:	mov	x19, x1
  40826c:	b.hi	4082d0 <sprint_time@@Base+0x88>  // b.pmore
  408270:	cmp	w3, #0x3e7
  408274:	b.hi	40829c <sprint_time@@Base+0x54>  // b.pmore
  408278:	mov	x0, x19
  40827c:	mov	x1, #0x3f                  	// #63
  408280:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  408284:	add	x2, x2, #0xae0
  408288:	bl	404c40 <snprintf@plt>
  40828c:	mov	x0, x19
  408290:	ldr	x19, [sp, #16]
  408294:	ldp	x29, x30, [sp], #32
  408298:	ret
  40829c:	mov	x0, #0x400000000000        	// #70368744177664
  4082a0:	mov	x1, #0x3f                  	// #63
  4082a4:	movk	x0, #0x408f, lsl #48
  4082a8:	fmov	d1, x0
  4082ac:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  4082b0:	mov	x0, x19
  4082b4:	fdiv	d0, d0, d1
  4082b8:	add	x2, x2, #0xad8
  4082bc:	bl	404c40 <snprintf@plt>
  4082c0:	mov	x0, x19
  4082c4:	ldr	x19, [sp, #16]
  4082c8:	ldp	x29, x30, [sp], #32
  4082cc:	ret
  4082d0:	mov	x0, #0x848000000000        	// #145685290680320
  4082d4:	mov	x1, #0x3f                  	// #63
  4082d8:	movk	x0, #0x412e, lsl #48
  4082dc:	fmov	d1, x0
  4082e0:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  4082e4:	mov	x0, x19
  4082e8:	fdiv	d0, d0, d1
  4082ec:	add	x2, x2, #0xad0
  4082f0:	bl	404c40 <snprintf@plt>
  4082f4:	mov	x0, x19
  4082f8:	ldr	x19, [sp, #16]
  4082fc:	ldp	x29, x30, [sp], #32
  408300:	ret
  408304:	nop

0000000000408308 <get_time64@@Base>:
  408308:	stp	x29, x30, [sp, #-64]!
  40830c:	mov	x29, sp
  408310:	stp	x19, x20, [sp, #16]
  408314:	mov	x19, x1
  408318:	str	x21, [sp, #32]
  40831c:	mov	x21, x0
  408320:	mov	x0, x1
  408324:	add	x1, sp, #0x38
  408328:	bl	404ba0 <strtod@plt>
  40832c:	ldr	x20, [sp, #56]
  408330:	cmp	x20, x19
  408334:	b.eq	40849c <get_time64@@Base+0x194>  // b.none
  408338:	str	d8, [sp, #40]
  40833c:	fmov	d8, d0
  408340:	ldrb	w0, [x20]
  408344:	cbz	w0, 408454 <get_time64@@Base+0x14c>
  408348:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40834c:	mov	x0, x20
  408350:	add	x1, x1, #0x50
  408354:	bl	404d30 <strcasecmp@plt>
  408358:	cbz	w0, 408444 <get_time64@@Base+0x13c>
  40835c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408360:	mov	x0, x20
  408364:	add	x1, x1, #0x690
  408368:	bl	404d30 <strcasecmp@plt>
  40836c:	cbz	w0, 408444 <get_time64@@Base+0x13c>
  408370:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408374:	mov	x0, x20
  408378:	add	x1, x1, #0x698
  40837c:	bl	404d30 <strcasecmp@plt>
  408380:	cbz	w0, 408444 <get_time64@@Base+0x13c>
  408384:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408388:	mov	x0, x20
  40838c:	add	x1, x1, #0x6a0
  408390:	bl	404d30 <strcasecmp@plt>
  408394:	cbz	w0, 408474 <get_time64@@Base+0x16c>
  408398:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40839c:	mov	x0, x20
  4083a0:	add	x1, x1, #0x6a8
  4083a4:	bl	404d30 <strcasecmp@plt>
  4083a8:	cbz	w0, 408474 <get_time64@@Base+0x16c>
  4083ac:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4083b0:	mov	x0, x20
  4083b4:	add	x1, x1, #0x6b0
  4083b8:	bl	404d30 <strcasecmp@plt>
  4083bc:	cbz	w0, 408474 <get_time64@@Base+0x16c>
  4083c0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4083c4:	mov	x0, x20
  4083c8:	add	x1, x1, #0xab8
  4083cc:	bl	404d30 <strcasecmp@plt>
  4083d0:	cbz	w0, 408488 <get_time64@@Base+0x180>
  4083d4:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4083d8:	mov	x0, x20
  4083dc:	add	x1, x1, #0xac0
  4083e0:	bl	404d30 <strcasecmp@plt>
  4083e4:	cbz	w0, 408488 <get_time64@@Base+0x180>
  4083e8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  4083ec:	mov	x0, x20
  4083f0:	add	x1, x1, #0xac8
  4083f4:	bl	404d30 <strcasecmp@plt>
  4083f8:	cbz	w0, 408488 <get_time64@@Base+0x180>
  4083fc:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408400:	mov	x0, x20
  408404:	add	x1, x1, #0xae8
  408408:	bl	404d30 <strcasecmp@plt>
  40840c:	cbz	w0, 408454 <get_time64@@Base+0x14c>
  408410:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408414:	mov	x0, x20
  408418:	add	x1, x1, #0xaf0
  40841c:	bl	404d30 <strcasecmp@plt>
  408420:	cbz	w0, 408454 <get_time64@@Base+0x14c>
  408424:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408428:	mov	x0, x20
  40842c:	add	x1, x1, #0xaf8
  408430:	bl	404d30 <strcasecmp@plt>
  408434:	cbz	w0, 408454 <get_time64@@Base+0x14c>
  408438:	mov	w0, #0xffffffff            	// #-1
  40843c:	ldr	d8, [sp, #40]
  408440:	b	408464 <get_time64@@Base+0x15c>
  408444:	mov	x0, #0xcd6500000000        	// #225833675390976
  408448:	movk	x0, #0x41cd, lsl #48
  40844c:	fmov	d0, x0
  408450:	fmul	d8, d8, d0
  408454:	fcvtzs	d8, d8
  408458:	mov	w0, #0x0                   	// #0
  40845c:	str	d8, [x21]
  408460:	ldr	d8, [sp, #40]
  408464:	ldp	x19, x20, [sp, #16]
  408468:	ldr	x21, [sp, #32]
  40846c:	ldp	x29, x30, [sp], #64
  408470:	ret
  408474:	mov	x0, #0x848000000000        	// #145685290680320
  408478:	movk	x0, #0x412e, lsl #48
  40847c:	fmov	d0, x0
  408480:	fmul	d8, d8, d0
  408484:	b	408454 <get_time64@@Base+0x14c>
  408488:	mov	x0, #0x400000000000        	// #70368744177664
  40848c:	movk	x0, #0x408f, lsl #48
  408490:	fmov	d0, x0
  408494:	fmul	d8, d8, d0
  408498:	b	408454 <get_time64@@Base+0x14c>
  40849c:	mov	w0, #0xffffffff            	// #-1
  4084a0:	b	408464 <get_time64@@Base+0x15c>
  4084a4:	nop

00000000004084a8 <sprint_time64@@Base>:
  4084a8:	stp	x29, x30, [sp, #-32]!
  4084ac:	mov	x3, x0
  4084b0:	mov	x0, #0xc9ff                	// #51711
  4084b4:	mov	x29, sp
  4084b8:	str	x19, [sp, #16]
  4084bc:	movk	x0, #0x3b9a, lsl #16
  4084c0:	scvtf	d0, x3
  4084c4:	cmp	x3, x0
  4084c8:	mov	x19, x1
  4084cc:	b.gt	408550 <sprint_time64@@Base+0xa8>
  4084d0:	mov	x0, #0x423f                	// #16959
  4084d4:	movk	x0, #0xf, lsl #16
  4084d8:	cmp	x3, x0
  4084dc:	b.gt	40851c <sprint_time64@@Base+0x74>
  4084e0:	cmp	x3, #0x3e7
  4084e4:	b.le	408584 <sprint_time64@@Base+0xdc>
  4084e8:	mov	x0, #0x400000000000        	// #70368744177664
  4084ec:	mov	x1, #0x3f                  	// #63
  4084f0:	movk	x0, #0x408f, lsl #48
  4084f4:	fmov	d1, x0
  4084f8:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  4084fc:	mov	x0, x19
  408500:	fdiv	d0, d0, d1
  408504:	add	x2, x2, #0xb10
  408508:	bl	404c40 <snprintf@plt>
  40850c:	mov	x0, x19
  408510:	ldr	x19, [sp, #16]
  408514:	ldp	x29, x30, [sp], #32
  408518:	ret
  40851c:	mov	x0, #0x848000000000        	// #145685290680320
  408520:	mov	x1, #0x3f                  	// #63
  408524:	movk	x0, #0x412e, lsl #48
  408528:	fmov	d1, x0
  40852c:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  408530:	mov	x0, x19
  408534:	fdiv	d0, d0, d1
  408538:	add	x2, x2, #0xb08
  40853c:	bl	404c40 <snprintf@plt>
  408540:	mov	x0, x19
  408544:	ldr	x19, [sp, #16]
  408548:	ldp	x29, x30, [sp], #32
  40854c:	ret
  408550:	mov	x0, #0xcd6500000000        	// #225833675390976
  408554:	mov	x1, #0x3f                  	// #63
  408558:	movk	x0, #0x41cd, lsl #48
  40855c:	fmov	d1, x0
  408560:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  408564:	mov	x0, x19
  408568:	fdiv	d0, d0, d1
  40856c:	add	x2, x2, #0xb00
  408570:	bl	404c40 <snprintf@plt>
  408574:	mov	x0, x19
  408578:	ldr	x19, [sp, #16]
  40857c:	ldp	x29, x30, [sp], #32
  408580:	ret
  408584:	mov	x0, x19
  408588:	mov	x1, #0x3f                  	// #63
  40858c:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  408590:	add	x2, x2, #0xb18
  408594:	bl	404c40 <snprintf@plt>
  408598:	mov	x0, x19
  40859c:	ldr	x19, [sp, #16]
  4085a0:	ldp	x29, x30, [sp], #32
  4085a4:	ret

00000000004085a8 <namehash@@Base>:
  4085a8:	ldrb	w1, [x0]
  4085ac:	mov	x2, x0
  4085b0:	mov	w0, #0x1505                	// #5381
  4085b4:	cbz	w1, 4085c8 <namehash@@Base+0x20>
  4085b8:	add	w3, w1, w0, lsl #5
  4085bc:	ldrb	w1, [x2, #1]!
  4085c0:	add	w0, w0, w3
  4085c4:	cbnz	w1, 4085b8 <namehash@@Base+0x10>
  4085c8:	ret
  4085cc:	nop
  4085d0:	stp	x29, x30, [sp, #-64]!
  4085d4:	mov	x29, sp
  4085d8:	stp	x19, x20, [sp, #16]
  4085dc:	mov	x20, x2
  4085e0:	stp	x21, x22, [sp, #32]
  4085e4:	mov	x21, x1
  4085e8:	mov	x22, x0
  4085ec:	mov	x0, x1
  4085f0:	stp	x23, x24, [sp, #48]
  4085f4:	bl	404b60 <strlen@plt>
  4085f8:	mov	x23, x0
  4085fc:	add	x0, x0, #0x41
  408600:	bl	404c90 <malloc@plt>
  408604:	mov	x19, x0
  408608:	cbz	x0, 408688 <namehash@@Base+0xe0>
  40860c:	ldr	w24, [x22, #4]
  408610:	add	x2, x23, #0x1
  408614:	mov	x1, x21
  408618:	add	x0, x0, #0x40
  40861c:	str	w24, [x19, #36]
  408620:	bl	404b30 <memcpy@plt>
  408624:	ldrh	w1, [x22, #2]
  408628:	add	x0, x19, #0x30
  40862c:	ldr	w2, [x22, #8]
  408630:	str	w2, [x19, #32]
  408634:	strh	w1, [x19, #40]
  408638:	cbz	x20, 4086a0 <namehash@@Base+0xf8>
  40863c:	ldr	x1, [x20, #56]
  408640:	add	x2, x20, #0x30
  408644:	stp	x2, x1, [x19, #48]
  408648:	str	x0, [x20, #56]
  40864c:	str	x0, [x1]
  408650:	mov	x0, x21
  408654:	bl	4085a8 <namehash@@Base>
  408658:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  40865c:	and	x0, x0, #0x3ff
  408660:	add	x2, x1, #0xd10
  408664:	add	x3, x19, #0x10
  408668:	ldr	x2, [x2, x0, lsl #3]
  40866c:	str	x2, [x19, #16]
  408670:	cbz	x2, 408678 <namehash@@Base+0xd0>
  408674:	str	x3, [x2, #8]
  408678:	add	x1, x1, #0xd10
  40867c:	add	x2, x1, x0, lsl #3
  408680:	str	x2, [x19, #24]
  408684:	str	x3, [x1, x0, lsl #3]
  408688:	mov	x0, x19
  40868c:	ldp	x19, x20, [sp, #16]
  408690:	ldp	x21, x22, [sp, #32]
  408694:	ldp	x23, x24, [sp, #48]
  408698:	ldp	x29, x30, [sp], #64
  40869c:	ret
  4086a0:	and	x24, x24, #0x3ff
  4086a4:	adrp	x1, 424000 <stderr@@GLIBC_2.17+0x1d40>
  4086a8:	add	x2, x1, #0xd10
  4086ac:	ldr	x2, [x2, x24, lsl #3]
  4086b0:	str	x2, [x19]
  4086b4:	cbz	x2, 4086bc <namehash@@Base+0x114>
  4086b8:	str	x19, [x2, #8]
  4086bc:	dup	v0.2d, x0
  4086c0:	add	x1, x1, #0xd10
  4086c4:	add	x0, x1, x24, lsl #3
  4086c8:	str	x0, [x19, #8]
  4086cc:	str	x19, [x1, x24, lsl #3]
  4086d0:	str	q0, [x19, #48]
  4086d4:	b	408650 <namehash@@Base+0xa8>

00000000004086d8 <ll_remember_index@@Base>:
  4086d8:	sub	sp, sp, #0x220
  4086dc:	stp	x29, x30, [sp]
  4086e0:	mov	x29, sp
  4086e4:	ldrh	w2, [x0, #4]
  4086e8:	stp	x19, x20, [sp, #16]
  4086ec:	mov	x20, x0
  4086f0:	sub	w0, w2, #0x10
  4086f4:	and	w0, w0, #0xffff
  4086f8:	cmp	w0, #0x1
  4086fc:	b.hi	408930 <ll_remember_index@@Base+0x258>  // b.pmore
  408700:	ldr	w3, [x20]
  408704:	cmp	w3, #0x1f
  408708:	b.ls	408b2c <ll_remember_index@@Base+0x454>  // b.plast
  40870c:	ldr	w0, [x20, #20]
  408710:	add	x4, x20, #0x10
  408714:	adrp	x1, 424000 <stderr@@GLIBC_2.17+0x1d40>
  408718:	add	x1, x1, #0xd10
  40871c:	str	x4, [sp, #104]
  408720:	and	x4, x0, #0x3ff
  408724:	ldr	x19, [x1, x4, lsl #3]
  408728:	cbnz	x19, 408738 <ll_remember_index@@Base+0x60>
  40872c:	b	408944 <ll_remember_index@@Base+0x26c>
  408730:	ldr	x19, [x19]
  408734:	cbz	x19, 408944 <ll_remember_index@@Base+0x26c>
  408738:	ldr	w1, [x19, #36]
  40873c:	cmp	w0, w1
  408740:	b.ne	408730 <ll_remember_index@@Base+0x58>  // b.any
  408744:	cmp	w2, #0x11
  408748:	b.eq	4089e0 <ll_remember_index@@Base+0x308>  // b.none
  40874c:	sub	w3, w3, #0x20
  408750:	add	x2, x20, #0x20
  408754:	add	x0, sp, #0x70
  408758:	mov	w4, #0xffff8000            	// #-32768
  40875c:	mov	w1, #0x35                  	// #53
  408760:	stp	x21, x22, [sp, #32]
  408764:	stp	x23, x24, [sp, #48]
  408768:	stp	x25, x26, [sp, #64]
  40876c:	stp	x27, x28, [sp, #80]
  408770:	bl	40d0e0 <parse_rtattr_flags@@Base>
  408774:	ldr	x0, [sp, #136]
  408778:	cbz	x0, 4087e0 <ll_remember_index@@Base+0x108>
  40877c:	ldr	w1, [x20, #24]
  408780:	add	x20, x0, #0x4
  408784:	str	w1, [x19, #32]
  408788:	add	x0, x19, #0x40
  40878c:	mov	x1, x20
  408790:	bl	404df0 <strcmp@plt>
  408794:	cbz	w0, 4087e0 <ll_remember_index@@Base+0x108>
  408798:	ldp	x0, x1, [x19, #16]
  40879c:	str	x0, [x1]
  4087a0:	cbz	x0, 4087a8 <ll_remember_index@@Base+0xd0>
  4087a4:	str	x1, [x0, #8]
  4087a8:	mov	x0, x20
  4087ac:	bl	4085a8 <namehash@@Base>
  4087b0:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  4087b4:	and	x0, x0, #0x3ff
  4087b8:	add	x2, x1, #0xd10
  4087bc:	add	x3, x19, #0x10
  4087c0:	ldr	x2, [x2, x0, lsl #3]
  4087c4:	str	x2, [x19, #16]
  4087c8:	cbz	x2, 4087d0 <ll_remember_index@@Base+0xf8>
  4087cc:	str	x3, [x2, #8]
  4087d0:	add	x1, x1, #0xd10
  4087d4:	add	x2, x1, x0, lsl #3
  4087d8:	str	x3, [x1, x0, lsl #3]
  4087dc:	str	x2, [x19, #24]
  4087e0:	ldr	x22, [x19, #48]
  4087e4:	ldr	x23, [sp, #528]
  4087e8:	ldr	x26, [x22], #-48
  4087ec:	sub	x28, x26, #0x30
  4087f0:	cbz	x23, 408ad4 <ll_remember_index@@Base+0x3fc>
  4087f4:	ldrh	w27, [x23], #4
  4087f8:	mov	x25, x22
  4087fc:	sub	w27, w27, #0x4
  408800:	mov	x21, x23
  408804:	cmp	w27, #0x3
  408808:	mov	w24, w27
  40880c:	b.gt	408850 <ll_remember_index@@Base+0x178>
  408810:	b	408b34 <ll_remember_index@@Base+0x45c>
  408814:	cmp	w20, w24
  408818:	b.gt	408864 <ll_remember_index@@Base+0x18c>
  40881c:	ldrh	w3, [x21, #2]
  408820:	cmp	w3, #0x35
  408824:	b.ne	408838 <ll_remember_index@@Base+0x160>  // b.any
  408828:	bl	404df0 <strcmp@plt>
  40882c:	cbnz	w0, 408864 <ll_remember_index@@Base+0x18c>
  408830:	ldr	x2, [x25, #48]
  408834:	sub	x25, x2, #0x30
  408838:	add	w20, w20, #0x3
  40883c:	and	w20, w20, #0xfffffffc
  408840:	sub	w24, w24, w20
  408844:	cmp	w24, #0x3
  408848:	add	x21, x21, w20, uxtw
  40884c:	b.le	408864 <ll_remember_index@@Base+0x18c>
  408850:	ldrh	w20, [x21]
  408854:	add	x1, x25, #0x40
  408858:	add	x0, x21, #0x4
  40885c:	cmp	w20, #0x3
  408860:	b.hi	408814 <ll_remember_index@@Base+0x13c>  // b.pmore
  408864:	cmp	x22, x19
  408868:	b.ne	40889c <ll_remember_index@@Base+0x1c4>  // b.any
  40886c:	b	4088e8 <ll_remember_index@@Base+0x210>
  408870:	ldr	x3, [x22, #56]
  408874:	str	x2, [x1, #8]
  408878:	str	x3, [x26, #8]
  40887c:	str	x26, [x3]
  408880:	bl	404e50 <free@plt>
  408884:	ldr	x26, [x28, #48]
  408888:	cmp	x28, x19
  40888c:	sub	x0, x26, #0x30
  408890:	b.eq	4088cc <ll_remember_index@@Base+0x1f4>  // b.none
  408894:	mov	x22, x28
  408898:	mov	x28, x0
  40889c:	ldp	x1, x2, [x22, #16]
  4088a0:	mov	x0, x22
  4088a4:	str	x1, [x2]
  4088a8:	cbnz	x1, 408870 <ll_remember_index@@Base+0x198>
  4088ac:	ldr	x1, [x22, #56]
  4088b0:	str	x1, [x26, #8]
  4088b4:	str	x26, [x1]
  4088b8:	bl	404e50 <free@plt>
  4088bc:	ldr	x26, [x28, #48]
  4088c0:	cmp	x28, x19
  4088c4:	sub	x0, x26, #0x30
  4088c8:	b.ne	408894 <ll_remember_index@@Base+0x1bc>  // b.any
  4088cc:	ldr	x23, [sp, #528]
  4088d0:	cbz	x23, 408920 <ll_remember_index@@Base+0x248>
  4088d4:	ldrh	w27, [x23], #4
  4088d8:	sub	w27, w27, #0x4
  4088dc:	cmp	w27, #0x3
  4088e0:	b.le	408920 <ll_remember_index@@Base+0x248>
  4088e4:	nop
  4088e8:	ldrh	w1, [x23]
  4088ec:	add	w0, w1, #0x3
  4088f0:	cmp	w1, #0x3
  4088f4:	and	w0, w0, #0xfffffffc
  4088f8:	b.ls	408920 <ll_remember_index@@Base+0x248>  // b.plast
  4088fc:	cmp	w1, w27
  408900:	b.gt	408920 <ll_remember_index@@Base+0x248>
  408904:	ldrh	w1, [x23, #2]
  408908:	cmp	w1, #0x35
  40890c:	b.eq	408a44 <ll_remember_index@@Base+0x36c>  // b.none
  408910:	sub	w27, w27, w0
  408914:	add	x23, x23, w0, uxtw
  408918:	cmp	w27, #0x3
  40891c:	b.gt	4088e8 <ll_remember_index@@Base+0x210>
  408920:	ldp	x21, x22, [sp, #32]
  408924:	ldp	x23, x24, [sp, #48]
  408928:	ldp	x25, x26, [sp, #64]
  40892c:	ldp	x27, x28, [sp, #80]
  408930:	mov	w0, #0x0                   	// #0
  408934:	ldp	x29, x30, [sp]
  408938:	ldp	x19, x20, [sp, #16]
  40893c:	add	sp, sp, #0x220
  408940:	ret
  408944:	cmp	w2, #0x11
  408948:	b.eq	408930 <ll_remember_index@@Base+0x258>  // b.none
  40894c:	mov	w1, #0x35                  	// #53
  408950:	sub	w3, w3, #0x20
  408954:	add	x2, x20, #0x20
  408958:	add	x0, sp, #0x70
  40895c:	mov	w4, #0xffff8000            	// #-32768
  408960:	bl	40d0e0 <parse_rtattr_flags@@Base>
  408964:	ldr	x1, [sp, #136]
  408968:	cbz	x1, 408930 <ll_remember_index@@Base+0x258>
  40896c:	ldr	x0, [sp, #104]
  408970:	add	x1, x1, #0x4
  408974:	mov	x2, #0x0                   	// #0
  408978:	stp	x21, x22, [sp, #32]
  40897c:	bl	4085d0 <namehash@@Base+0x28>
  408980:	mov	x21, x0
  408984:	cbz	x0, 4089d8 <ll_remember_index@@Base+0x300>
  408988:	ldr	x19, [sp, #528]
  40898c:	cbz	x19, 4089d8 <ll_remember_index@@Base+0x300>
  408990:	ldrh	w20, [x19], #4
  408994:	sub	w20, w20, #0x4
  408998:	cmp	w20, #0x3
  40899c:	b.le	4089d8 <ll_remember_index@@Base+0x300>
  4089a0:	ldrh	w3, [x19]
  4089a4:	add	w1, w3, #0x3
  4089a8:	cmp	w3, #0x3
  4089ac:	and	w1, w1, #0xfffffffc
  4089b0:	b.ls	4089d8 <ll_remember_index@@Base+0x300>  // b.plast
  4089b4:	cmp	w3, w20
  4089b8:	b.gt	4089d8 <ll_remember_index@@Base+0x300>
  4089bc:	ldrh	w3, [x19, #2]
  4089c0:	cmp	w3, #0x35
  4089c4:	b.eq	408aa0 <ll_remember_index@@Base+0x3c8>  // b.none
  4089c8:	sub	w20, w20, w1
  4089cc:	add	x19, x19, w1, uxtw
  4089d0:	cmp	w20, #0x3
  4089d4:	b.gt	4089a0 <ll_remember_index@@Base+0x2c8>
  4089d8:	ldp	x21, x22, [sp, #32]
  4089dc:	b	408930 <ll_remember_index@@Base+0x258>
  4089e0:	ldr	x1, [x19, #48]
  4089e4:	ldr	x2, [x1], #-48
  4089e8:	cmp	x1, x19
  4089ec:	sub	x20, x2, #0x30
  4089f0:	b.ne	408a24 <ll_remember_index@@Base+0x34c>  // b.any
  4089f4:	b	408a74 <ll_remember_index@@Base+0x39c>
  4089f8:	ldr	x1, [x1, #56]
  4089fc:	str	x4, [x3, #8]
  408a00:	str	x1, [x2, #8]
  408a04:	str	x2, [x1]
  408a08:	bl	404e50 <free@plt>
  408a0c:	ldr	x2, [x20, #48]
  408a10:	cmp	x20, x19
  408a14:	sub	x0, x2, #0x30
  408a18:	b.eq	408a74 <ll_remember_index@@Base+0x39c>  // b.none
  408a1c:	mov	x1, x20
  408a20:	mov	x20, x0
  408a24:	ldp	x3, x4, [x1, #16]
  408a28:	mov	x0, x1
  408a2c:	str	x3, [x4]
  408a30:	cbnz	x3, 4089f8 <ll_remember_index@@Base+0x320>
  408a34:	ldr	x3, [x1, #56]
  408a38:	str	x3, [x2, #8]
  408a3c:	str	x2, [x3]
  408a40:	b	408a08 <ll_remember_index@@Base+0x330>
  408a44:	ldr	x0, [sp, #104]
  408a48:	add	x1, x23, #0x4
  408a4c:	mov	x2, x19
  408a50:	bl	4085d0 <namehash@@Base+0x28>
  408a54:	ldrh	w0, [x23]
  408a58:	add	w0, w0, #0x3
  408a5c:	and	w0, w0, #0xfffffffc
  408a60:	sub	w27, w27, w0
  408a64:	cmp	w27, #0x3
  408a68:	add	x23, x23, w0, uxtw
  408a6c:	b.gt	4088e8 <ll_remember_index@@Base+0x210>
  408a70:	b	408920 <ll_remember_index@@Base+0x248>
  408a74:	ldp	x0, x1, [x19, #16]
  408a78:	str	x0, [x1]
  408a7c:	cbz	x0, 408a84 <ll_remember_index@@Base+0x3ac>
  408a80:	str	x1, [x0, #8]
  408a84:	ldp	x0, x1, [x19]
  408a88:	str	x0, [x1]
  408a8c:	cbz	x0, 408a94 <ll_remember_index@@Base+0x3bc>
  408a90:	str	x1, [x0, #8]
  408a94:	mov	x0, x19
  408a98:	bl	404e50 <free@plt>
  408a9c:	b	408930 <ll_remember_index@@Base+0x258>
  408aa0:	ldr	x0, [sp, #104]
  408aa4:	add	x1, x19, #0x4
  408aa8:	mov	x2, x21
  408aac:	bl	4085d0 <namehash@@Base+0x28>
  408ab0:	ldrh	w1, [x19]
  408ab4:	add	w1, w1, #0x3
  408ab8:	and	w1, w1, #0xfffffffc
  408abc:	sub	w20, w20, w1
  408ac0:	cmp	w20, #0x3
  408ac4:	add	x19, x19, w1, uxtw
  408ac8:	b.gt	4089a0 <ll_remember_index@@Base+0x2c8>
  408acc:	ldp	x21, x22, [sp, #32]
  408ad0:	b	408930 <ll_remember_index@@Base+0x258>
  408ad4:	cmp	x22, x19
  408ad8:	b.ne	408b0c <ll_remember_index@@Base+0x434>  // b.any
  408adc:	b	408920 <ll_remember_index@@Base+0x248>
  408ae0:	ldr	x3, [x22, #56]
  408ae4:	str	x2, [x1, #8]
  408ae8:	str	x3, [x26, #8]
  408aec:	str	x26, [x3]
  408af0:	bl	404e50 <free@plt>
  408af4:	ldr	x26, [x28, #48]
  408af8:	cmp	x28, x19
  408afc:	sub	x0, x26, #0x30
  408b00:	b.eq	408920 <ll_remember_index@@Base+0x248>  // b.none
  408b04:	mov	x22, x28
  408b08:	mov	x28, x0
  408b0c:	ldp	x1, x2, [x22, #16]
  408b10:	mov	x0, x22
  408b14:	str	x1, [x2]
  408b18:	cbnz	x1, 408ae0 <ll_remember_index@@Base+0x408>
  408b1c:	ldr	x1, [x22, #56]
  408b20:	str	x1, [x26, #8]
  408b24:	str	x26, [x1]
  408b28:	b	408af0 <ll_remember_index@@Base+0x418>
  408b2c:	mov	w0, #0xffffffff            	// #-1
  408b30:	b	408934 <ll_remember_index@@Base+0x25c>
  408b34:	cmp	x22, x19
  408b38:	b.ne	40889c <ll_remember_index@@Base+0x1c4>  // b.any
  408b3c:	b	408920 <ll_remember_index@@Base+0x248>
  408b40:	sub	sp, sp, #0x490
  408b44:	mov	x2, #0x420                 	// #1056
  408b48:	stp	x29, x30, [sp]
  408b4c:	mov	x29, sp
  408b50:	stp	x21, x22, [sp, #32]
  408b54:	add	x21, sp, #0x70
  408b58:	add	x22, sp, #0x38
  408b5c:	stp	x19, x20, [sp, #16]
  408b60:	mov	w20, w1
  408b64:	mov	x19, x0
  408b68:	mov	w1, #0x0                   	// #0
  408b6c:	mov	x0, x21
  408b70:	bl	404cf0 <memset@plt>
  408b74:	stp	xzr, xzr, [sp, #56]
  408b78:	mov	x2, #0x20                  	// #32
  408b7c:	movk	x2, #0x12, lsl #32
  408b80:	mov	x0, x22
  408b84:	movk	x2, #0x1, lsl #48
  408b88:	mov	w1, #0x0                   	// #0
  408b8c:	stp	xzr, xzr, [sp, #72]
  408b90:	stp	xzr, xzr, [sp, #88]
  408b94:	stp	xzr, x2, [sp, #104]
  408b98:	str	w20, [sp, #132]
  408b9c:	bl	40b348 <rtnl_open@@Base>
  408ba0:	tbnz	w0, #31, 408c4c <ll_remember_index@@Base+0x574>
  408ba4:	mov	x0, x21
  408ba8:	mov	w3, #0x9                   	// #9
  408bac:	mov	w2, #0x1d                  	// #29
  408bb0:	mov	w1, #0x420                 	// #1056
  408bb4:	bl	40cc98 <addattr32@@Base>
  408bb8:	cbz	x19, 408bf4 <ll_remember_index@@Base+0x51c>
  408bbc:	mov	x0, x19
  408bc0:	bl	406948 <check_ifname@@Base>
  408bc4:	cmp	w0, #0x0
  408bc8:	mov	w2, #0x35                  	// #53
  408bcc:	mov	x0, x19
  408bd0:	mov	w20, #0x3                   	// #3
  408bd4:	csel	w20, w20, w2, eq  // eq = none
  408bd8:	bl	404b60 <strlen@plt>
  408bdc:	add	w4, w0, #0x1
  408be0:	mov	w2, w20
  408be4:	mov	x3, x19
  408be8:	mov	x0, x21
  408bec:	mov	w1, #0x420                 	// #1056
  408bf0:	bl	40cba8 <addattr_l@@Base>
  408bf4:	mov	x1, x21
  408bf8:	add	x2, sp, #0x30
  408bfc:	mov	x0, x22
  408c00:	mov	w19, #0x0                   	// #0
  408c04:	bl	40c668 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  408c08:	tbnz	w0, #31, 408c2c <ll_remember_index@@Base+0x554>
  408c0c:	ldr	x0, [sp, #48]
  408c10:	mov	x1, #0x0                   	// #0
  408c14:	bl	4086d8 <ll_remember_index@@Base>
  408c18:	mov	w19, w0
  408c1c:	ldr	x0, [sp, #48]
  408c20:	cbnz	w19, 408c28 <ll_remember_index@@Base+0x550>
  408c24:	ldr	w19, [x0, #20]
  408c28:	bl	404e50 <free@plt>
  408c2c:	mov	x0, x22
  408c30:	bl	40b150 <rtnl_close@@Base>
  408c34:	mov	w0, w19
  408c38:	ldp	x29, x30, [sp]
  408c3c:	ldp	x19, x20, [sp, #16]
  408c40:	ldp	x21, x22, [sp, #32]
  408c44:	add	sp, sp, #0x490
  408c48:	ret
  408c4c:	mov	w19, #0x0                   	// #0
  408c50:	mov	w0, w19
  408c54:	ldp	x29, x30, [sp]
  408c58:	ldp	x19, x20, [sp, #16]
  408c5c:	ldp	x21, x22, [sp, #32]
  408c60:	add	sp, sp, #0x490
  408c64:	ret

0000000000408c68 <ll_idx_n2a@@Base>:
  408c68:	stp	x29, x30, [sp, #-32]!
  408c6c:	mov	w3, w0
  408c70:	mov	x1, #0x10                  	// #16
  408c74:	mov	x29, sp
  408c78:	str	x19, [sp, #16]
  408c7c:	adrp	x19, 422000 <memcpy@GLIBC_2.17>
  408c80:	add	x19, x19, #0xce0
  408c84:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  408c88:	mov	x0, x19
  408c8c:	add	x2, x2, #0xb98
  408c90:	bl	404c40 <snprintf@plt>
  408c94:	mov	x0, x19
  408c98:	ldr	x19, [sp, #16]
  408c9c:	ldp	x29, x30, [sp], #32
  408ca0:	ret
  408ca4:	nop

0000000000408ca8 <ll_index_to_name@@Base>:
  408ca8:	stp	x29, x30, [sp, #-48]!
  408cac:	mov	x29, sp
  408cb0:	stp	x19, x20, [sp, #16]
  408cb4:	cbz	w0, 408d04 <ll_index_to_name@@Base+0x5c>
  408cb8:	mov	w20, w0
  408cbc:	adrp	x19, 424000 <stderr@@GLIBC_2.17+0x1d40>
  408cc0:	add	x0, x19, #0xd10
  408cc4:	str	x21, [sp, #32]
  408cc8:	and	x21, x20, #0x3ff
  408ccc:	ldr	x1, [x0, x21, lsl #3]
  408cd0:	cbnz	x1, 408ce0 <ll_index_to_name@@Base+0x38>
  408cd4:	b	408d1c <ll_index_to_name@@Base+0x74>
  408cd8:	ldr	x1, [x1]
  408cdc:	cbz	x1, 408d1c <ll_index_to_name@@Base+0x74>
  408ce0:	ldr	w0, [x1, #36]
  408ce4:	cmp	w20, w0
  408ce8:	b.ne	408cd8 <ll_index_to_name@@Base+0x30>  // b.any
  408cec:	ldr	x21, [sp, #32]
  408cf0:	add	x19, x1, #0x40
  408cf4:	mov	x0, x19
  408cf8:	ldp	x19, x20, [sp, #16]
  408cfc:	ldp	x29, x30, [sp], #48
  408d00:	ret
  408d04:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408d08:	add	x19, x1, #0xba0
  408d0c:	mov	x0, x19
  408d10:	ldp	x19, x20, [sp, #16]
  408d14:	ldp	x29, x30, [sp], #48
  408d18:	ret
  408d1c:	mov	w1, w20
  408d20:	mov	x0, #0x0                   	// #0
  408d24:	bl	408b40 <ll_remember_index@@Base+0x468>
  408d28:	cmp	w0, w20
  408d2c:	b.ne	408d58 <ll_index_to_name@@Base+0xb0>  // b.any
  408d30:	add	x19, x19, #0xd10
  408d34:	ldr	x1, [x19, x21, lsl #3]
  408d38:	cbnz	x1, 408d48 <ll_index_to_name@@Base+0xa0>
  408d3c:	b	408d58 <ll_index_to_name@@Base+0xb0>
  408d40:	ldr	x1, [x1]
  408d44:	cbz	x1, 408d58 <ll_index_to_name@@Base+0xb0>
  408d48:	ldr	w0, [x1, #36]
  408d4c:	cmp	w20, w0
  408d50:	b.ne	408d40 <ll_index_to_name@@Base+0x98>  // b.any
  408d54:	b	408cec <ll_index_to_name@@Base+0x44>
  408d58:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  408d5c:	add	x1, x1, #0xce0
  408d60:	add	x1, x1, #0x10
  408d64:	mov	w0, w20
  408d68:	mov	x19, x1
  408d6c:	bl	404ce0 <if_indextoname@plt>
  408d70:	cbz	x0, 408d88 <ll_index_to_name@@Base+0xe0>
  408d74:	mov	x0, x19
  408d78:	ldp	x19, x20, [sp, #16]
  408d7c:	ldr	x21, [sp, #32]
  408d80:	ldp	x29, x30, [sp], #48
  408d84:	ret
  408d88:	mov	w3, w20
  408d8c:	mov	x0, x19
  408d90:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  408d94:	mov	x1, #0x10                  	// #16
  408d98:	add	x2, x2, #0xb98
  408d9c:	bl	404c40 <snprintf@plt>
  408da0:	ldr	x21, [sp, #32]
  408da4:	b	408cf4 <ll_index_to_name@@Base+0x4c>

0000000000408da8 <ll_index_to_type@@Base>:
  408da8:	cbz	w0, 408de0 <ll_index_to_type@@Base+0x38>
  408dac:	and	x2, x0, #0x3ff
  408db0:	adrp	x1, 424000 <stderr@@GLIBC_2.17+0x1d40>
  408db4:	add	x1, x1, #0xd10
  408db8:	ldr	x1, [x1, x2, lsl #3]
  408dbc:	cbnz	x1, 408dcc <ll_index_to_type@@Base+0x24>
  408dc0:	b	408de0 <ll_index_to_type@@Base+0x38>
  408dc4:	ldr	x1, [x1]
  408dc8:	cbz	x1, 408de0 <ll_index_to_type@@Base+0x38>
  408dcc:	ldr	w2, [x1, #36]
  408dd0:	cmp	w0, w2
  408dd4:	b.ne	408dc4 <ll_index_to_type@@Base+0x1c>  // b.any
  408dd8:	ldrh	w0, [x1, #40]
  408ddc:	ret
  408de0:	mov	w0, #0xffffffff            	// #-1
  408de4:	ret

0000000000408de8 <ll_index_to_flags@@Base>:
  408de8:	cbz	w0, 408e20 <ll_index_to_flags@@Base+0x38>
  408dec:	and	x2, x0, #0x3ff
  408df0:	adrp	x1, 424000 <stderr@@GLIBC_2.17+0x1d40>
  408df4:	add	x1, x1, #0xd10
  408df8:	ldr	x1, [x1, x2, lsl #3]
  408dfc:	cbnz	x1, 408e0c <ll_index_to_flags@@Base+0x24>
  408e00:	b	408e28 <ll_index_to_flags@@Base+0x40>
  408e04:	ldr	x1, [x1]
  408e08:	cbz	x1, 408e28 <ll_index_to_flags@@Base+0x40>
  408e0c:	ldr	w2, [x1, #36]
  408e10:	cmp	w0, w2
  408e14:	b.ne	408e04 <ll_index_to_flags@@Base+0x1c>  // b.any
  408e18:	ldr	w0, [x1, #32]
  408e1c:	ret
  408e20:	mov	w0, #0x0                   	// #0
  408e24:	ret
  408e28:	mov	w0, #0xffffffff            	// #-1
  408e2c:	ret

0000000000408e30 <ll_name_to_index@@Base>:
  408e30:	cbz	x0, 408ed8 <ll_name_to_index@@Base+0xa8>
  408e34:	stp	x29, x30, [sp, #-64]!
  408e38:	mov	x29, sp
  408e3c:	stp	x19, x20, [sp, #16]
  408e40:	mov	x20, x0
  408e44:	bl	4085a8 <namehash@@Base>
  408e48:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  408e4c:	and	x0, x0, #0x3ff
  408e50:	add	x1, x1, #0xd10
  408e54:	ldr	x19, [x1, x0, lsl #3]
  408e58:	cbz	x19, 408e98 <ll_name_to_index@@Base+0x68>
  408e5c:	str	x21, [sp, #32]
  408e60:	b	408e6c <ll_name_to_index@@Base+0x3c>
  408e64:	ldr	x19, [x19]
  408e68:	cbz	x19, 408e94 <ll_name_to_index@@Base+0x64>
  408e6c:	mov	x1, x20
  408e70:	add	x0, x19, #0x30
  408e74:	sub	x21, x19, #0x10
  408e78:	bl	404df0 <strcmp@plt>
  408e7c:	cbnz	w0, 408e64 <ll_name_to_index@@Base+0x34>
  408e80:	ldr	w0, [x21, #36]
  408e84:	ldr	x21, [sp, #32]
  408e88:	ldp	x19, x20, [sp, #16]
  408e8c:	ldp	x29, x30, [sp], #64
  408e90:	ret
  408e94:	ldr	x21, [sp, #32]
  408e98:	mov	x0, x20
  408e9c:	mov	w1, #0x0                   	// #0
  408ea0:	bl	408b40 <ll_remember_index@@Base+0x468>
  408ea4:	cbnz	w0, 408e88 <ll_name_to_index@@Base+0x58>
  408ea8:	mov	x0, x20
  408eac:	bl	404f40 <if_nametoindex@plt>
  408eb0:	cbnz	w0, 408e88 <ll_name_to_index@@Base+0x58>
  408eb4:	mov	x0, x20
  408eb8:	add	x2, sp, #0x3c
  408ebc:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  408ec0:	add	x1, x1, #0xb98
  408ec4:	bl	404f70 <__isoc99_sscanf@plt>
  408ec8:	cmp	w0, #0x1
  408ecc:	ldr	w1, [sp, #60]
  408ed0:	csel	w0, w1, wzr, eq  // eq = none
  408ed4:	b	408e88 <ll_name_to_index@@Base+0x58>
  408ed8:	mov	w0, #0x0                   	// #0
  408edc:	ret

0000000000408ee0 <ll_drop_by_index@@Base>:
  408ee0:	mov	w3, w0
  408ee4:	adrp	x1, 424000 <stderr@@GLIBC_2.17+0x1d40>
  408ee8:	and	x0, x3, #0x3ff
  408eec:	add	x1, x1, #0xd10
  408ef0:	ldr	x1, [x1, x0, lsl #3]
  408ef4:	nop
  408ef8:	cbz	x1, 408f34 <ll_drop_by_index@@Base+0x54>
  408efc:	ldr	w2, [x1, #36]
  408f00:	mov	x0, x1
  408f04:	ldr	x1, [x1]
  408f08:	cmp	w3, w2
  408f0c:	b.ne	408ef8 <ll_drop_by_index@@Base+0x18>  // b.any
  408f10:	ldr	x2, [x0, #8]
  408f14:	str	x1, [x2]
  408f18:	cbz	x1, 408f20 <ll_drop_by_index@@Base+0x40>
  408f1c:	str	x2, [x1, #8]
  408f20:	ldp	x1, x2, [x0, #16]
  408f24:	str	x1, [x2]
  408f28:	cbz	x1, 408f30 <ll_drop_by_index@@Base+0x50>
  408f2c:	str	x2, [x1, #8]
  408f30:	b	404e50 <free@plt>
  408f34:	ret

0000000000408f38 <ll_init_map@@Base>:
  408f38:	stp	x29, x30, [sp, #-32]!
  408f3c:	mov	x29, sp
  408f40:	stp	x19, x20, [sp, #16]
  408f44:	adrp	x19, 422000 <memcpy@GLIBC_2.17>
  408f48:	add	x19, x19, #0xce0
  408f4c:	ldr	w1, [x19, #32]
  408f50:	cbz	w1, 408f60 <ll_init_map@@Base+0x28>
  408f54:	ldp	x19, x20, [sp, #16]
  408f58:	ldp	x29, x30, [sp], #32
  408f5c:	ret
  408f60:	mov	x20, x0
  408f64:	bl	40b8c8 <rtnl_linkdump_req@@Base>
  408f68:	tbnz	w0, #31, 408f9c <ll_init_map@@Base+0x64>
  408f6c:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13c90>
  408f70:	mov	x0, x20
  408f74:	mov	w3, #0x0                   	// #0
  408f78:	mov	x2, #0x0                   	// #0
  408f7c:	ldr	x1, [x1, #4008]
  408f80:	bl	40bdd0 <rtnl_dump_filter_nc@@Base>
  408f84:	tbnz	w0, #31, 408fb0 <ll_init_map@@Base+0x78>
  408f88:	mov	w0, #0x1                   	// #1
  408f8c:	str	w0, [x19, #32]
  408f90:	ldp	x19, x20, [sp, #16]
  408f94:	ldp	x29, x30, [sp], #32
  408f98:	ret
  408f9c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  408fa0:	add	x0, x0, #0x578
  408fa4:	bl	404b80 <perror@plt>
  408fa8:	mov	w0, #0x1                   	// #1
  408fac:	bl	404b70 <exit@plt>
  408fb0:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  408fb4:	mov	x2, #0x10                  	// #16
  408fb8:	mov	x1, #0x1                   	// #1
  408fbc:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  408fc0:	ldr	x3, [x3, #3992]
  408fc4:	add	x0, x0, #0x598
  408fc8:	ldr	x3, [x3]
  408fcc:	bl	404eb0 <fwrite@plt>
  408fd0:	mov	w0, #0x1                   	// #1
  408fd4:	bl	404b70 <exit@plt>

0000000000408fd8 <ll_addr_n2a@@Base>:
  408fd8:	stp	x29, x30, [sp, #-80]!
  408fdc:	cmp	w1, #0x4
  408fe0:	mov	x29, sp
  408fe4:	stp	x21, x22, [sp, #32]
  408fe8:	mov	w21, w1
  408fec:	mov	x22, x0
  408ff0:	stp	x23, x24, [sp, #48]
  408ff4:	mov	w23, w4
  408ff8:	stp	x25, x26, [sp, #64]
  408ffc:	mov	x25, x3
  409000:	b.eq	4090b8 <ll_addr_n2a@@Base+0xe0>  // b.none
  409004:	cmp	w1, #0x10
  409008:	b.ne	40901c <ll_addr_n2a@@Base+0x44>  // b.any
  40900c:	cmp	w2, #0x301
  409010:	mov	w0, #0x337                 	// #823
  409014:	ccmp	w2, w0, #0x4, ne  // ne = any
  409018:	b.eq	4090f0 <ll_addr_n2a@@Base+0x118>  // b.none
  40901c:	ldrb	w3, [x22]
  409020:	sxtw	x24, w23
  409024:	mov	x1, x24
  409028:	mov	x0, x25
  40902c:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  409030:	add	x2, x2, #0x998
  409034:	bl	404c40 <snprintf@plt>
  409038:	cmp	w23, #0x2
  40903c:	ccmp	w21, #0x1, #0x4, gt
  409040:	b.le	4090a0 <ll_addr_n2a@@Base+0xc8>
  409044:	adrp	x26, 40d000 <rta_addattr_l@@Base+0x98>
  409048:	sub	x22, x22, #0x1
  40904c:	add	x24, x25, x24
  409050:	add	x26, x26, #0xba8
  409054:	stp	x19, x20, [sp, #16]
  409058:	add	x20, x25, #0x2
  40905c:	mov	x19, #0x2                   	// #2
  409060:	ldrb	w3, [x22, x19]
  409064:	sub	x1, x24, x20
  409068:	mov	x0, x20
  40906c:	mov	x2, x26
  409070:	add	x20, x20, #0x3
  409074:	bl	404c40 <snprintf@plt>
  409078:	add	w0, w19, w19, lsl #1
  40907c:	sub	w0, w0, #0x1
  409080:	cmp	w0, w23
  409084:	cset	w1, lt  // lt = tstop
  409088:	cmp	w21, w19
  40908c:	cset	w0, gt
  409090:	add	x19, x19, #0x1
  409094:	tst	w1, w0
  409098:	b.ne	409060 <ll_addr_n2a@@Base+0x88>  // b.any
  40909c:	ldp	x19, x20, [sp, #16]
  4090a0:	mov	x0, x25
  4090a4:	ldp	x21, x22, [sp, #32]
  4090a8:	ldp	x23, x24, [sp, #48]
  4090ac:	ldp	x25, x26, [sp, #64]
  4090b0:	ldp	x29, x30, [sp], #80
  4090b4:	ret
  4090b8:	and	w1, w2, #0xfffffff7
  4090bc:	mov	w0, #0x30a                 	// #778
  4090c0:	cmp	w1, #0x300
  4090c4:	ccmp	w2, w0, #0x4, ne  // ne = any
  4090c8:	b.ne	40901c <ll_addr_n2a@@Base+0x44>  // b.any
  4090cc:	mov	w3, w4
  4090d0:	mov	x2, x25
  4090d4:	mov	x1, x22
  4090d8:	mov	w0, #0x2                   	// #2
  4090dc:	ldp	x21, x22, [sp, #32]
  4090e0:	ldp	x23, x24, [sp, #48]
  4090e4:	ldp	x25, x26, [sp, #64]
  4090e8:	ldp	x29, x30, [sp], #80
  4090ec:	b	405040 <inet_ntop@plt>
  4090f0:	mov	w3, w4
  4090f4:	mov	x2, x25
  4090f8:	mov	x1, x22
  4090fc:	mov	w0, #0xa                   	// #10
  409100:	b	4090dc <ll_addr_n2a@@Base+0x104>
  409104:	nop

0000000000409108 <ll_addr_a2n@@Base>:
  409108:	stp	x29, x30, [sp, #-352]!
  40910c:	mov	x29, sp
  409110:	stp	x21, x22, [sp, #32]
  409114:	mov	w22, w1
  409118:	mov	x21, x2
  40911c:	mov	w1, #0x2e                  	// #46
  409120:	stp	x23, x24, [sp, #48]
  409124:	mov	x23, x0
  409128:	mov	x0, x2
  40912c:	bl	404e90 <strchr@plt>
  409130:	cbz	x0, 409170 <ll_addr_a2n@@Base+0x68>
  409134:	mov	x1, x21
  409138:	add	x0, sp, #0x58
  40913c:	mov	w2, #0x2                   	// #2
  409140:	bl	4061a8 <get_addr_1@@Base>
  409144:	cbnz	w0, 409234 <ll_addr_a2n@@Base+0x12c>
  409148:	cmp	w22, #0x3
  40914c:	mov	w0, #0xffffffff            	// #-1
  409150:	b.le	409160 <ll_addr_a2n@@Base+0x58>
  409154:	ldr	w1, [sp, #96]
  409158:	mov	w0, #0x4                   	// #4
  40915c:	str	w1, [x23]
  409160:	ldp	x21, x22, [sp, #32]
  409164:	ldp	x23, x24, [sp, #48]
  409168:	ldp	x29, x30, [sp], #352
  40916c:	ret
  409170:	cmp	w22, #0x0
  409174:	mov	w0, #0x1                   	// #1
  409178:	b.le	409160 <ll_addr_a2n@@Base+0x58>
  40917c:	sub	w22, w22, #0x1
  409180:	adrp	x24, 40d000 <rta_addattr_l@@Base+0x98>
  409184:	sub	x23, x23, #0x1
  409188:	add	x22, x22, #0x2
  40918c:	add	x24, x24, #0xbd0
  409190:	stp	x19, x20, [sp, #16]
  409194:	mov	x20, #0x1                   	// #1
  409198:	str	x25, [sp, #64]
  40919c:	add	x25, sp, #0x58
  4091a0:	b	4091cc <ll_addr_a2n@@Base+0xc4>
  4091a4:	ldr	w1, [sp, #88]
  4091a8:	mov	w0, w20
  4091ac:	cmp	w1, #0xff
  4091b0:	b.hi	4091fc <ll_addr_a2n@@Base+0xf4>  // b.pmore
  4091b4:	strb	w1, [x23, x20]
  4091b8:	add	x20, x20, #0x1
  4091bc:	mov	x21, x19
  4091c0:	cmp	x20, x22
  4091c4:	cbz	x19, 409264 <ll_addr_a2n@@Base+0x15c>
  4091c8:	b.eq	40927c <ll_addr_a2n@@Base+0x174>  // b.none
  4091cc:	mov	w1, #0x3a                  	// #58
  4091d0:	mov	x0, x21
  4091d4:	bl	404e90 <strchr@plt>
  4091d8:	mov	x19, x0
  4091dc:	mov	x2, x25
  4091e0:	mov	x0, x21
  4091e4:	mov	x1, x24
  4091e8:	cbz	x19, 4091f0 <ll_addr_a2n@@Base+0xe8>
  4091ec:	strb	wzr, [x19], #1
  4091f0:	bl	404f70 <__isoc99_sscanf@plt>
  4091f4:	cmp	w0, #0x1
  4091f8:	b.eq	4091a4 <ll_addr_a2n@@Base+0x9c>  // b.none
  4091fc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409200:	mov	x2, x21
  409204:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  409208:	add	x1, x1, #0xbb0
  40920c:	ldr	x0, [x0, #3992]
  409210:	ldr	x0, [x0]
  409214:	bl	405020 <fprintf@plt>
  409218:	mov	w0, #0xffffffff            	// #-1
  40921c:	ldp	x19, x20, [sp, #16]
  409220:	ldp	x21, x22, [sp, #32]
  409224:	ldp	x23, x24, [sp, #48]
  409228:	ldr	x25, [sp, #64]
  40922c:	ldp	x29, x30, [sp], #352
  409230:	ret
  409234:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409238:	mov	x2, x21
  40923c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  409240:	add	x1, x1, #0xbb0
  409244:	ldr	x0, [x0, #3992]
  409248:	ldr	x0, [x0]
  40924c:	bl	405020 <fprintf@plt>
  409250:	mov	w0, #0xffffffff            	// #-1
  409254:	ldp	x21, x22, [sp, #32]
  409258:	ldp	x23, x24, [sp, #48]
  40925c:	ldp	x29, x30, [sp], #352
  409260:	ret
  409264:	ldp	x19, x20, [sp, #16]
  409268:	ldp	x21, x22, [sp, #32]
  40926c:	ldp	x23, x24, [sp, #48]
  409270:	ldr	x25, [sp, #64]
  409274:	ldp	x29, x30, [sp], #352
  409278:	ret
  40927c:	add	w0, w0, #0x1
  409280:	ldp	x19, x20, [sp, #16]
  409284:	ldp	x21, x22, [sp, #32]
  409288:	ldp	x23, x24, [sp, #48]
  40928c:	ldr	x25, [sp, #64]
  409290:	ldp	x29, x30, [sp], #352
  409294:	ret

0000000000409298 <new_json_obj@@Base>:
  409298:	cbnz	w0, 4092a0 <new_json_obj@@Base+0x8>
  40929c:	ret
  4092a0:	stp	x29, x30, [sp, #-32]!
  4092a4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  4092a8:	mov	x29, sp
  4092ac:	ldr	x0, [x0, #4016]
  4092b0:	ldr	x0, [x0]
  4092b4:	str	x19, [sp, #16]
  4092b8:	adrp	x19, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4092bc:	bl	40a348 <jsonw_new@@Base>
  4092c0:	str	x0, [x19, #3344]
  4092c4:	mov	x1, x0
  4092c8:	cbz	x0, 409308 <new_json_obj@@Base+0x70>
  4092cc:	adrp	x2, 421000 <_IO_stdin_used@@Base+0x13c90>
  4092d0:	ldr	x2, [x2, #4056]
  4092d4:	ldr	w2, [x2]
  4092d8:	cbnz	w2, 4092ec <new_json_obj@@Base+0x54>
  4092dc:	ldr	x19, [sp, #16]
  4092e0:	mov	x0, x1
  4092e4:	ldp	x29, x30, [sp], #32
  4092e8:	b	40a678 <jsonw_start_array@@Base>
  4092ec:	mov	w1, #0x1                   	// #1
  4092f0:	bl	40a3f0 <jsonw_pretty@@Base>
  4092f4:	ldr	x1, [x19, #3344]
  4092f8:	ldr	x19, [sp, #16]
  4092fc:	mov	x0, x1
  409300:	ldp	x29, x30, [sp], #32
  409304:	b	40a678 <jsonw_start_array@@Base>
  409308:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40930c:	add	x0, x0, #0xbd8
  409310:	bl	404b80 <perror@plt>
  409314:	mov	w0, #0x1                   	// #1
  409318:	bl	404b70 <exit@plt>
  40931c:	nop

0000000000409320 <delete_json_obj@@Base>:
  409320:	stp	x29, x30, [sp, #-32]!
  409324:	adrp	x0, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409328:	mov	x29, sp
  40932c:	str	x19, [sp, #16]
  409330:	add	x19, x0, #0xd10
  409334:	ldr	x0, [x0, #3344]
  409338:	cbz	x0, 409350 <delete_json_obj@@Base+0x30>
  40933c:	bl	40a6e8 <jsonw_end_array@@Base>
  409340:	mov	x0, x19
  409344:	ldr	x19, [sp, #16]
  409348:	ldp	x29, x30, [sp], #32
  40934c:	b	40a380 <jsonw_destroy@@Base>
  409350:	ldr	x19, [sp, #16]
  409354:	ldp	x29, x30, [sp], #32
  409358:	ret
  40935c:	nop

0000000000409360 <new_json_obj_plain@@Base>:
  409360:	cbnz	w0, 409368 <new_json_obj_plain@@Base+0x8>
  409364:	ret
  409368:	stp	x29, x30, [sp, #-16]!
  40936c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409370:	mov	x29, sp
  409374:	ldr	x0, [x0, #4016]
  409378:	ldr	x0, [x0]
  40937c:	bl	40a348 <jsonw_new@@Base>
  409380:	adrp	x2, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409384:	str	x0, [x2, #3344]
  409388:	cbz	x0, 4093b0 <new_json_obj_plain@@Base+0x50>
  40938c:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13c90>
  409390:	ldr	x1, [x1, #4056]
  409394:	ldr	w1, [x1]
  409398:	cbnz	w1, 4093a4 <new_json_obj_plain@@Base+0x44>
  40939c:	ldp	x29, x30, [sp], #16
  4093a0:	ret
  4093a4:	ldp	x29, x30, [sp], #16
  4093a8:	mov	w1, #0x1                   	// #1
  4093ac:	b	40a3f0 <jsonw_pretty@@Base>
  4093b0:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  4093b4:	add	x0, x0, #0xbd8
  4093b8:	bl	404b80 <perror@plt>
  4093bc:	mov	w0, #0x1                   	// #1
  4093c0:	bl	404b70 <exit@plt>
  4093c4:	nop

00000000004093c8 <delete_json_obj_plain@@Base>:
  4093c8:	adrp	x1, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4093cc:	add	x0, x1, #0xd10
  4093d0:	ldr	x1, [x1, #3344]
  4093d4:	cbz	x1, 4093dc <delete_json_obj_plain@@Base+0x14>
  4093d8:	b	40a380 <jsonw_destroy@@Base>
  4093dc:	ret

00000000004093e0 <is_json_context@@Base>:
  4093e0:	adrp	x0, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4093e4:	ldr	x0, [x0, #3344]
  4093e8:	cmp	x0, #0x0
  4093ec:	cset	w0, ne  // ne = any
  4093f0:	ret
  4093f4:	nop

00000000004093f8 <get_json_writer@@Base>:
  4093f8:	adrp	x0, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4093fc:	ldr	x0, [x0, #3344]
  409400:	ret
  409404:	nop

0000000000409408 <open_json_object@@Base>:
  409408:	stp	x29, x30, [sp, #-32]!
  40940c:	mov	x1, x0
  409410:	mov	x29, sp
  409414:	str	x19, [sp, #16]
  409418:	adrp	x19, 426000 <stderr@@GLIBC_2.17+0x3d40>
  40941c:	ldr	x0, [x19, #3344]
  409420:	cbz	x0, 40943c <open_json_object@@Base+0x34>
  409424:	cbz	x1, 409430 <open_json_object@@Base+0x28>
  409428:	bl	40a3f8 <jsonw_name@@Base>
  40942c:	ldr	x0, [x19, #3344]
  409430:	ldr	x19, [sp, #16]
  409434:	ldp	x29, x30, [sp], #32
  409438:	b	40a578 <jsonw_start_object@@Base>
  40943c:	ldr	x19, [sp, #16]
  409440:	ldp	x29, x30, [sp], #32
  409444:	ret

0000000000409448 <close_json_object@@Base>:
  409448:	adrp	x0, 426000 <stderr@@GLIBC_2.17+0x3d40>
  40944c:	ldr	x0, [x0, #3344]
  409450:	cbz	x0, 409458 <close_json_object@@Base+0x10>
  409454:	b	40a5d0 <jsonw_end_object@@Base>
  409458:	ret
  40945c:	nop

0000000000409460 <open_json_array@@Base>:
  409460:	stp	x29, x30, [sp, #-32]!
  409464:	mov	w2, w0
  409468:	tst	w0, #0x6
  40946c:	mov	x29, sp
  409470:	str	x19, [sp, #16]
  409474:	adrp	x19, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409478:	mov	x3, x1
  40947c:	ldr	x0, [x19, #3344]
  409480:	b.eq	4094a0 <open_json_array@@Base+0x40>  // b.none
  409484:	cbz	x0, 4094b0 <open_json_array@@Base+0x50>
  409488:	cbz	x1, 409494 <open_json_array@@Base+0x34>
  40948c:	bl	40a3f8 <jsonw_name@@Base>
  409490:	ldr	x0, [x19, #3344]
  409494:	ldr	x19, [sp, #16]
  409498:	ldp	x29, x30, [sp], #32
  40949c:	b	40a678 <jsonw_start_array@@Base>
  4094a0:	cbz	x0, 4094b0 <open_json_array@@Base+0x50>
  4094a4:	ldr	x19, [sp, #16]
  4094a8:	ldp	x29, x30, [sp], #32
  4094ac:	ret
  4094b0:	mov	w0, #0x5                   	// #5
  4094b4:	tst	w2, w0
  4094b8:	b.eq	4094a4 <open_json_array@@Base+0x44>  // b.none
  4094bc:	ldr	x19, [sp, #16]
  4094c0:	mov	x1, x3
  4094c4:	ldp	x29, x30, [sp], #32
  4094c8:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  4094cc:	add	x0, x0, #0x860
  4094d0:	b	404fb0 <printf@plt>
  4094d4:	nop

00000000004094d8 <close_json_array@@Base>:
  4094d8:	adrp	x3, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4094dc:	mov	w2, w0
  4094e0:	tst	w0, #0x6
  4094e4:	ldr	x0, [x3, #3344]
  4094e8:	b.eq	4094f4 <close_json_array@@Base+0x1c>  // b.none
  4094ec:	cbz	x0, 4094fc <close_json_array@@Base+0x24>
  4094f0:	b	40a6e8 <jsonw_end_array@@Base>
  4094f4:	cbz	x0, 4094fc <close_json_array@@Base+0x24>
  4094f8:	ret
  4094fc:	mov	w0, #0x5                   	// #5
  409500:	tst	w2, w0
  409504:	b.eq	4094f8 <close_json_array@@Base+0x20>  // b.none
  409508:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40950c:	add	x0, x0, #0x860
  409510:	b	404fb0 <printf@plt>
  409514:	nop

0000000000409518 <print_color_int@@Base>:
  409518:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  40951c:	mov	w5, w0
  409520:	tst	w0, #0x6
  409524:	mov	x6, x2
  409528:	ldr	x0, [x7, #3344]
  40952c:	mov	x2, x3
  409530:	b.eq	409548 <print_color_int@@Base+0x30>  // b.none
  409534:	cbz	x0, 409550 <print_color_int@@Base+0x38>
  409538:	cbz	x6, 409570 <print_color_int@@Base+0x58>
  40953c:	mov	w2, w4
  409540:	mov	x1, x6
  409544:	b	40aa70 <jsonw_int_field@@Base>
  409548:	cbz	x0, 409550 <print_color_int@@Base+0x38>
  40954c:	ret
  409550:	mov	w0, #0x5                   	// #5
  409554:	tst	w5, w0
  409558:	b.eq	40954c <print_color_int@@Base+0x34>  // b.none
  40955c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409560:	mov	w3, w4
  409564:	ldr	x0, [x0, #4016]
  409568:	ldr	x0, [x0]
  40956c:	b	409e08 <color_fprintf@@Base>
  409570:	mov	w1, w4
  409574:	b	40a868 <jsonw_int@@Base>

0000000000409578 <print_color_s64@@Base>:
  409578:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  40957c:	mov	w5, w0
  409580:	tst	w0, #0x6
  409584:	mov	x6, x2
  409588:	ldr	x0, [x7, #3344]
  40958c:	mov	x2, x3
  409590:	b.eq	4095a8 <print_color_s64@@Base+0x30>  // b.none
  409594:	cbz	x0, 4095b0 <print_color_s64@@Base+0x38>
  409598:	cbz	x6, 4095d0 <print_color_s64@@Base+0x58>
  40959c:	mov	x2, x4
  4095a0:	mov	x1, x6
  4095a4:	b	40aaa0 <jsonw_s64_field@@Base>
  4095a8:	cbz	x0, 4095b0 <print_color_s64@@Base+0x38>
  4095ac:	ret
  4095b0:	mov	w0, #0x5                   	// #5
  4095b4:	tst	w5, w0
  4095b8:	b.eq	4095ac <print_color_s64@@Base+0x34>  // b.none
  4095bc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  4095c0:	mov	x3, x4
  4095c4:	ldr	x0, [x0, #4016]
  4095c8:	ldr	x0, [x0]
  4095cc:	b	409e08 <color_fprintf@@Base>
  4095d0:	mov	x1, x4
  4095d4:	b	40a878 <jsonw_s64@@Base>

00000000004095d8 <print_color_hhu@@Base>:
  4095d8:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4095dc:	mov	w5, w0
  4095e0:	tst	w0, #0x6
  4095e4:	mov	w6, w1
  4095e8:	ldr	x0, [x7, #3344]
  4095ec:	mov	x1, x2
  4095f0:	mov	x2, x3
  4095f4:	and	w3, w4, #0xff
  4095f8:	b.eq	40960c <print_color_hhu@@Base+0x34>  // b.none
  4095fc:	cbz	x0, 409614 <print_color_hhu@@Base+0x3c>
  409600:	cbz	x1, 409634 <print_color_hhu@@Base+0x5c>
  409604:	mov	w2, w3
  409608:	b	40a9b0 <jsonw_hhu_field@@Base>
  40960c:	cbz	x0, 409614 <print_color_hhu@@Base+0x3c>
  409610:	ret
  409614:	mov	w0, #0x5                   	// #5
  409618:	tst	w5, w0
  40961c:	b.eq	409610 <print_color_hhu@@Base+0x38>  // b.none
  409620:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409624:	mov	w1, w6
  409628:	ldr	x0, [x0, #4016]
  40962c:	ldr	x0, [x0]
  409630:	b	409e08 <color_fprintf@@Base>
  409634:	mov	w1, w3
  409638:	b	40a7f8 <jsonw_hhu@@Base>
  40963c:	nop

0000000000409640 <print_color_hu@@Base>:
  409640:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409644:	mov	w5, w0
  409648:	tst	w0, #0x6
  40964c:	mov	w6, w1
  409650:	ldr	x0, [x7, #3344]
  409654:	mov	x1, x2
  409658:	mov	x2, x3
  40965c:	and	w3, w4, #0xffff
  409660:	b.eq	409674 <print_color_hu@@Base+0x34>  // b.none
  409664:	cbz	x0, 40967c <print_color_hu@@Base+0x3c>
  409668:	cbz	x1, 40969c <print_color_hu@@Base+0x5c>
  40966c:	mov	w2, w3
  409670:	b	40a9e0 <jsonw_hu_field@@Base>
  409674:	cbz	x0, 40967c <print_color_hu@@Base+0x3c>
  409678:	ret
  40967c:	mov	w0, #0x5                   	// #5
  409680:	tst	w5, w0
  409684:	b.eq	409678 <print_color_hu@@Base+0x38>  // b.none
  409688:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40968c:	mov	w1, w6
  409690:	ldr	x0, [x0, #4016]
  409694:	ldr	x0, [x0]
  409698:	b	409e08 <color_fprintf@@Base>
  40969c:	mov	w1, w3
  4096a0:	b	40a808 <jsonw_hu@@Base>
  4096a4:	nop

00000000004096a8 <print_color_uint@@Base>:
  4096a8:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4096ac:	mov	w5, w0
  4096b0:	tst	w0, #0x6
  4096b4:	mov	x6, x2
  4096b8:	ldr	x0, [x7, #3344]
  4096bc:	mov	x2, x3
  4096c0:	b.eq	4096d8 <print_color_uint@@Base+0x30>  // b.none
  4096c4:	cbz	x0, 4096e0 <print_color_uint@@Base+0x38>
  4096c8:	cbz	x6, 409700 <print_color_uint@@Base+0x58>
  4096cc:	mov	w2, w4
  4096d0:	mov	x1, x6
  4096d4:	b	40a920 <jsonw_uint_field@@Base>
  4096d8:	cbz	x0, 4096e0 <print_color_uint@@Base+0x38>
  4096dc:	ret
  4096e0:	mov	w0, #0x5                   	// #5
  4096e4:	tst	w5, w0
  4096e8:	b.eq	4096dc <print_color_uint@@Base+0x34>  // b.none
  4096ec:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  4096f0:	mov	w3, w4
  4096f4:	ldr	x0, [x0, #4016]
  4096f8:	ldr	x0, [x0]
  4096fc:	b	409e08 <color_fprintf@@Base>
  409700:	mov	w1, w4
  409704:	b	40a818 <jsonw_uint@@Base>

0000000000409708 <print_color_u64@@Base>:
  409708:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  40970c:	mov	w5, w0
  409710:	tst	w0, #0x6
  409714:	mov	x6, x2
  409718:	ldr	x0, [x7, #3344]
  40971c:	mov	x2, x3
  409720:	b.eq	409738 <print_color_u64@@Base+0x30>  // b.none
  409724:	cbz	x0, 409740 <print_color_u64@@Base+0x38>
  409728:	cbz	x6, 409760 <print_color_u64@@Base+0x58>
  40972c:	mov	x2, x4
  409730:	mov	x1, x6
  409734:	b	40a950 <jsonw_u64_field@@Base>
  409738:	cbz	x0, 409740 <print_color_u64@@Base+0x38>
  40973c:	ret
  409740:	mov	w0, #0x5                   	// #5
  409744:	tst	w5, w0
  409748:	b.eq	40973c <print_color_u64@@Base+0x34>  // b.none
  40974c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409750:	mov	x3, x4
  409754:	ldr	x0, [x0, #4016]
  409758:	ldr	x0, [x0]
  40975c:	b	409e08 <color_fprintf@@Base>
  409760:	mov	x1, x4
  409764:	b	40a828 <jsonw_u64@@Base>

0000000000409768 <print_color_luint@@Base>:
  409768:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  40976c:	mov	w5, w0
  409770:	tst	w0, #0x6
  409774:	mov	x6, x2
  409778:	ldr	x0, [x7, #3344]
  40977c:	mov	x2, x3
  409780:	b.eq	409798 <print_color_luint@@Base+0x30>  // b.none
  409784:	cbz	x0, 4097a0 <print_color_luint@@Base+0x38>
  409788:	cbz	x6, 4097c0 <print_color_luint@@Base+0x58>
  40978c:	mov	x2, x4
  409790:	mov	x1, x6
  409794:	b	40aa10 <jsonw_luint_field@@Base>
  409798:	cbz	x0, 4097a0 <print_color_luint@@Base+0x38>
  40979c:	ret
  4097a0:	mov	w0, #0x5                   	// #5
  4097a4:	tst	w5, w0
  4097a8:	b.eq	40979c <print_color_luint@@Base+0x34>  // b.none
  4097ac:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  4097b0:	mov	x3, x4
  4097b4:	ldr	x0, [x0, #4016]
  4097b8:	ldr	x0, [x0]
  4097bc:	b	409e08 <color_fprintf@@Base>
  4097c0:	mov	x1, x4
  4097c4:	b	40a848 <jsonw_luint@@Base>

00000000004097c8 <print_color_lluint@@Base>:
  4097c8:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4097cc:	mov	w5, w0
  4097d0:	tst	w0, #0x6
  4097d4:	mov	x6, x2
  4097d8:	ldr	x0, [x7, #3344]
  4097dc:	mov	x2, x3
  4097e0:	b.eq	4097f8 <print_color_lluint@@Base+0x30>  // b.none
  4097e4:	cbz	x0, 409800 <print_color_lluint@@Base+0x38>
  4097e8:	cbz	x6, 409820 <print_color_lluint@@Base+0x58>
  4097ec:	mov	x2, x4
  4097f0:	mov	x1, x6
  4097f4:	b	40aa40 <jsonw_lluint_field@@Base>
  4097f8:	cbz	x0, 409800 <print_color_lluint@@Base+0x38>
  4097fc:	ret
  409800:	mov	w0, #0x5                   	// #5
  409804:	tst	w5, w0
  409808:	b.eq	4097fc <print_color_lluint@@Base+0x34>  // b.none
  40980c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409810:	mov	x3, x4
  409814:	ldr	x0, [x0, #4016]
  409818:	ldr	x0, [x0]
  40981c:	b	409e08 <color_fprintf@@Base>
  409820:	mov	x1, x4
  409824:	b	40a858 <jsonw_lluint@@Base>

0000000000409828 <print_color_float@@Base>:
  409828:	adrp	x5, 426000 <stderr@@GLIBC_2.17+0x3d40>
  40982c:	mov	w4, w0
  409830:	tst	w0, #0x6
  409834:	fmov	d1, d0
  409838:	ldr	x0, [x5, #3344]
  40983c:	b.eq	409850 <print_color_float@@Base+0x28>  // b.none
  409840:	cbz	x0, 409858 <print_color_float@@Base+0x30>
  409844:	cbz	x2, 40987c <print_color_float@@Base+0x54>
  409848:	mov	x1, x2
  40984c:	b	40a8e8 <jsonw_float_field@@Base>
  409850:	cbz	x0, 409858 <print_color_float@@Base+0x30>
  409854:	ret
  409858:	mov	w0, #0x5                   	// #5
  40985c:	tst	w4, w0
  409860:	b.eq	409854 <print_color_float@@Base+0x2c>  // b.none
  409864:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409868:	fmov	d0, d1
  40986c:	mov	x2, x3
  409870:	ldr	x0, [x0, #4016]
  409874:	ldr	x0, [x0]
  409878:	b	409e08 <color_fprintf@@Base>
  40987c:	b	40a7e8 <jsonw_float@@Base>

0000000000409880 <print_uint_name_value@@Base>:
  409880:	stp	x29, x30, [sp, #-112]!
  409884:	mov	x3, x0
  409888:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  40988c:	mov	x29, sp
  409890:	stp	x19, x20, [sp, #16]
  409894:	add	x20, sp, #0x30
  409898:	mov	x19, x0
  40989c:	add	x2, x2, #0xbe8
  4098a0:	mov	x0, x20
  4098a4:	str	x21, [sp, #32]
  4098a8:	mov	w21, w1
  4098ac:	mov	x1, #0x40                  	// #64
  4098b0:	bl	404c40 <snprintf@plt>
  4098b4:	mov	w4, w21
  4098b8:	mov	x3, x20
  4098bc:	mov	x2, x19
  4098c0:	mov	w1, #0x6                   	// #6
  4098c4:	mov	w0, #0x4                   	// #4
  4098c8:	bl	4096a8 <print_color_uint@@Base>
  4098cc:	ldp	x19, x20, [sp, #16]
  4098d0:	ldr	x21, [sp, #32]
  4098d4:	ldp	x29, x30, [sp], #112
  4098d8:	ret
  4098dc:	nop

00000000004098e0 <print_color_string@@Base>:
  4098e0:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4098e4:	mov	w5, w0
  4098e8:	tst	w0, #0x6
  4098ec:	mov	w6, w1
  4098f0:	ldr	x0, [x7, #3344]
  4098f4:	mov	x1, x2
  4098f8:	mov	x2, x3
  4098fc:	b.eq	409924 <print_color_string@@Base+0x44>  // b.none
  409900:	cbz	x0, 40992c <print_color_string@@Base+0x4c>
  409904:	cmp	x1, #0x0
  409908:	ccmp	x4, #0x0, #0x0, ne  // ne = any
  40990c:	b.eq	409958 <print_color_string@@Base+0x78>  // b.none
  409910:	cmp	x1, #0x0
  409914:	ccmp	x4, #0x0, #0x4, eq  // eq = none
  409918:	b.eq	409950 <print_color_string@@Base+0x70>  // b.none
  40991c:	mov	x1, x4
  409920:	b	40a750 <jsonw_string@@Base>
  409924:	cbz	x0, 40992c <print_color_string@@Base+0x4c>
  409928:	ret
  40992c:	mov	w0, #0x5                   	// #5
  409930:	tst	w5, w0
  409934:	b.eq	409928 <print_color_string@@Base+0x48>  // b.none
  409938:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40993c:	mov	x3, x4
  409940:	mov	w1, w6
  409944:	ldr	x0, [x0, #4016]
  409948:	ldr	x0, [x0]
  40994c:	b	409e08 <color_fprintf@@Base>
  409950:	mov	x2, x4
  409954:	b	40a888 <jsonw_string_field@@Base>
  409958:	b	40a3f8 <jsonw_name@@Base>
  40995c:	nop

0000000000409960 <print_string_name_value@@Base>:
  409960:	stp	x29, x30, [sp, #-112]!
  409964:	mov	x3, x0
  409968:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  40996c:	mov	x29, sp
  409970:	stp	x19, x20, [sp, #16]
  409974:	add	x20, sp, #0x30
  409978:	mov	x19, x0
  40997c:	add	x2, x2, #0xbf0
  409980:	mov	x0, x20
  409984:	str	x21, [sp, #32]
  409988:	mov	x21, x1
  40998c:	mov	x1, #0x40                  	// #64
  409990:	bl	404c40 <snprintf@plt>
  409994:	mov	x4, x21
  409998:	mov	x3, x20
  40999c:	mov	x2, x19
  4099a0:	mov	w1, #0x6                   	// #6
  4099a4:	mov	w0, #0x4                   	// #4
  4099a8:	bl	4098e0 <print_color_string@@Base>
  4099ac:	ldp	x19, x20, [sp, #16]
  4099b0:	ldr	x21, [sp, #32]
  4099b4:	ldp	x29, x30, [sp], #112
  4099b8:	ret
  4099bc:	nop

00000000004099c0 <print_color_bool@@Base>:
  4099c0:	sub	sp, sp, #0x10
  4099c4:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  4099c8:	mov	w5, w0
  4099cc:	tst	w0, #0x6
  4099d0:	mov	w6, w1
  4099d4:	mov	x1, x2
  4099d8:	str	x3, [sp, #8]
  4099dc:	and	w2, w4, #0xff
  4099e0:	ldr	x0, [x7, #3344]
  4099e4:	b.eq	4099f8 <print_color_bool@@Base+0x38>  // b.none
  4099e8:	cbz	x0, 409a04 <print_color_bool@@Base+0x44>
  4099ec:	cbz	x1, 409a44 <print_color_bool@@Base+0x84>
  4099f0:	add	sp, sp, #0x10
  4099f4:	b	40a8b8 <jsonw_bool_field@@Base>
  4099f8:	cbz	x0, 409a04 <print_color_bool@@Base+0x44>
  4099fc:	add	sp, sp, #0x10
  409a00:	ret
  409a04:	mov	w0, #0x5                   	// #5
  409a08:	tst	w5, w0
  409a0c:	b.eq	4099fc <print_color_bool@@Base+0x3c>  // b.none
  409a10:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409a14:	cmp	w2, #0x0
  409a18:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  409a1c:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  409a20:	ldr	x0, [x0, #4016]
  409a24:	add	x2, x2, #0xc00
  409a28:	add	x3, x3, #0xbf8
  409a2c:	mov	w1, w6
  409a30:	csel	x3, x3, x2, ne  // ne = any
  409a34:	ldr	x0, [x0]
  409a38:	ldr	x2, [sp, #8]
  409a3c:	add	sp, sp, #0x10
  409a40:	b	409e08 <color_fprintf@@Base>
  409a44:	mov	w1, w2
  409a48:	add	sp, sp, #0x10
  409a4c:	b	40a7b0 <jsonw_bool@@Base>

0000000000409a50 <print_color_0xhex@@Base>:
  409a50:	stp	x29, x30, [sp, #-96]!
  409a54:	adrp	x5, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409a58:	tst	w0, #0x6
  409a5c:	mov	x29, sp
  409a60:	stp	x19, x20, [sp, #16]
  409a64:	mov	x19, x2
  409a68:	mov	x2, x3
  409a6c:	ldr	x3, [x5, #3344]
  409a70:	b.eq	409ab8 <print_color_0xhex@@Base+0x68>  // b.none
  409a74:	cbz	x3, 409ac8 <print_color_0xhex@@Base+0x78>
  409a78:	add	x20, sp, #0x20
  409a7c:	mov	x3, x4
  409a80:	mov	x0, x20
  409a84:	mov	x1, #0x40                  	// #64
  409a88:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  409a8c:	add	x2, x2, #0xc08
  409a90:	bl	404c40 <snprintf@plt>
  409a94:	mov	x4, x20
  409a98:	mov	x2, x19
  409a9c:	mov	x3, #0x0                   	// #0
  409aa0:	mov	w1, #0x6                   	// #6
  409aa4:	mov	w0, #0x2                   	// #2
  409aa8:	bl	4098e0 <print_color_string@@Base>
  409aac:	ldp	x19, x20, [sp, #16]
  409ab0:	ldp	x29, x30, [sp], #96
  409ab4:	ret
  409ab8:	cbz	x3, 409ac8 <print_color_0xhex@@Base+0x78>
  409abc:	ldp	x19, x20, [sp, #16]
  409ac0:	ldp	x29, x30, [sp], #96
  409ac4:	ret
  409ac8:	mov	w3, #0x5                   	// #5
  409acc:	tst	w0, w3
  409ad0:	b.eq	409abc <print_color_0xhex@@Base+0x6c>  // b.none
  409ad4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409ad8:	mov	x3, x4
  409adc:	ldr	x0, [x0, #4016]
  409ae0:	ldr	x0, [x0]
  409ae4:	bl	409e08 <color_fprintf@@Base>
  409ae8:	b	409abc <print_color_0xhex@@Base+0x6c>
  409aec:	nop

0000000000409af0 <print_color_hex@@Base>:
  409af0:	stp	x29, x30, [sp, #-112]!
  409af4:	tst	w0, #0x6
  409af8:	mov	x29, sp
  409afc:	stp	x19, x20, [sp, #16]
  409b00:	adrp	x20, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409b04:	mov	x19, x2
  409b08:	mov	x2, x3
  409b0c:	ldr	x3, [x20, #3344]
  409b10:	b.eq	409b5c <print_color_hex@@Base+0x6c>  // b.none
  409b14:	cbz	x3, 409b6c <print_color_hex@@Base+0x7c>
  409b18:	str	x21, [sp, #32]
  409b1c:	add	x21, sp, #0x30
  409b20:	mov	w3, w4
  409b24:	mov	x0, x21
  409b28:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  409b2c:	mov	x1, #0x40                  	// #64
  409b30:	add	x2, x2, #0xbd0
  409b34:	bl	404c40 <snprintf@plt>
  409b38:	ldr	x0, [x20, #3344]
  409b3c:	cbz	x19, 409b90 <print_color_hex@@Base+0xa0>
  409b40:	mov	x2, x21
  409b44:	mov	x1, x19
  409b48:	bl	40a888 <jsonw_string_field@@Base>
  409b4c:	ldp	x19, x20, [sp, #16]
  409b50:	ldr	x21, [sp, #32]
  409b54:	ldp	x29, x30, [sp], #112
  409b58:	ret
  409b5c:	cbz	x3, 409b6c <print_color_hex@@Base+0x7c>
  409b60:	ldp	x19, x20, [sp, #16]
  409b64:	ldp	x29, x30, [sp], #112
  409b68:	ret
  409b6c:	mov	w3, #0x5                   	// #5
  409b70:	tst	w0, w3
  409b74:	b.eq	409b60 <print_color_hex@@Base+0x70>  // b.none
  409b78:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409b7c:	mov	w3, w4
  409b80:	ldr	x0, [x0, #4016]
  409b84:	ldr	x0, [x0]
  409b88:	bl	409e08 <color_fprintf@@Base>
  409b8c:	b	409b60 <print_color_hex@@Base+0x70>
  409b90:	mov	x1, x21
  409b94:	bl	40a750 <jsonw_string@@Base>
  409b98:	ldr	x21, [sp, #32]
  409b9c:	b	409b60 <print_color_hex@@Base+0x70>

0000000000409ba0 <print_color_null@@Base>:
  409ba0:	adrp	x7, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409ba4:	mov	w5, w0
  409ba8:	tst	w0, #0x6
  409bac:	mov	x6, x3
  409bb0:	ldr	x0, [x7, #3344]
  409bb4:	b.eq	409bc8 <print_color_null@@Base+0x28>  // b.none
  409bb8:	cbz	x0, 409bd0 <print_color_null@@Base+0x30>
  409bbc:	cbz	x2, 409bf4 <print_color_null@@Base+0x54>
  409bc0:	mov	x1, x2
  409bc4:	b	40aad0 <jsonw_null_field@@Base>
  409bc8:	cbz	x0, 409bd0 <print_color_null@@Base+0x30>
  409bcc:	ret
  409bd0:	mov	w0, #0x5                   	// #5
  409bd4:	tst	w5, w0
  409bd8:	b.eq	409bcc <print_color_null@@Base+0x2c>  // b.none
  409bdc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409be0:	mov	x3, x4
  409be4:	mov	x2, x6
  409be8:	ldr	x0, [x0, #4016]
  409bec:	ldr	x0, [x0]
  409bf0:	b	409e08 <color_fprintf@@Base>
  409bf4:	b	40a7d8 <jsonw_null@@Base>

0000000000409bf8 <print_nl@@Base>:
  409bf8:	adrp	x0, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409bfc:	ldr	x0, [x0, #3344]
  409c00:	cbz	x0, 409c08 <print_nl@@Base+0x10>
  409c04:	ret
  409c08:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13c90>
  409c0c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  409c10:	add	x0, x0, #0x860
  409c14:	ldr	x1, [x1, #4048]
  409c18:	ldr	x1, [x1]
  409c1c:	b	404fb0 <printf@plt>

0000000000409c20 <check_enable_color@@Base>:
  409c20:	cmp	w1, #0x0
  409c24:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  409c28:	b.eq	409ccc <check_enable_color@@Base+0xac>  // b.none
  409c2c:	stp	x29, x30, [sp, #-32]!
  409c30:	cmp	w0, #0x2
  409c34:	mov	x29, sp
  409c38:	b.eq	409c60 <check_enable_color@@Base+0x40>  // b.none
  409c3c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  409c40:	ldr	x0, [x0, #4016]
  409c44:	ldr	x0, [x0]
  409c48:	bl	404c50 <fileno@plt>
  409c4c:	bl	404f00 <isatty@plt>
  409c50:	cbnz	w0, 409c60 <check_enable_color@@Base+0x40>
  409c54:	mov	w0, #0x0                   	// #0
  409c58:	ldp	x29, x30, [sp], #32
  409c5c:	ret
  409c60:	adrp	x1, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409c64:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  409c68:	add	x0, x0, #0xc10
  409c6c:	stp	x19, x20, [sp, #16]
  409c70:	mov	w19, #0x1                   	// #1
  409c74:	add	x20, x1, #0xd18
  409c78:	str	w19, [x1, #3352]
  409c7c:	bl	404fe0 <getenv@plt>
  409c80:	cbz	x0, 409ce0 <check_enable_color@@Base+0xc0>
  409c84:	mov	w1, #0x3b                  	// #59
  409c88:	bl	404d90 <strrchr@plt>
  409c8c:	mov	x2, x0
  409c90:	mov	w0, w19
  409c94:	cbz	x2, 409cd4 <check_enable_color@@Base+0xb4>
  409c98:	ldrb	w3, [x2, #1]
  409c9c:	sub	w0, w3, #0x30
  409ca0:	and	w0, w0, #0xff
  409ca4:	cmp	w0, #0x6
  409ca8:	cset	w1, ls  // ls = plast
  409cac:	cmp	w3, #0x38
  409cb0:	csinc	w0, w1, wzr, ne  // ne = any
  409cb4:	cbz	w0, 409ce0 <check_enable_color@@Base+0xc0>
  409cb8:	ldrb	w1, [x2, #2]
  409cbc:	cbnz	w1, 409cd4 <check_enable_color@@Base+0xb4>
  409cc0:	str	w19, [x20, #4]
  409cc4:	ldp	x19, x20, [sp, #16]
  409cc8:	b	409c58 <check_enable_color@@Base+0x38>
  409ccc:	mov	w0, #0x0                   	// #0
  409cd0:	ret
  409cd4:	ldp	x19, x20, [sp, #16]
  409cd8:	ldp	x29, x30, [sp], #32
  409cdc:	ret
  409ce0:	mov	w0, w19
  409ce4:	ldp	x19, x20, [sp, #16]
  409ce8:	ldp	x29, x30, [sp], #32
  409cec:	ret

0000000000409cf0 <matches_color@@Base>:
  409cf0:	cbz	x1, 409df0 <matches_color@@Base+0x100>
  409cf4:	stp	x29, x30, [sp, #-48]!
  409cf8:	mov	x29, sp
  409cfc:	stp	x19, x20, [sp, #16]
  409d00:	mov	x19, x0
  409d04:	mov	x20, x1
  409d08:	str	x21, [sp, #32]
  409d0c:	bl	404b60 <strlen@plt>
  409d10:	add	x3, x0, #0x10
  409d14:	add	x2, x0, #0x1
  409d18:	and	x3, x3, #0xfffffffffffffff0
  409d1c:	mov	x1, x19
  409d20:	sub	sp, sp, x3
  409d24:	mov	x0, sp
  409d28:	bl	404b30 <memcpy@plt>
  409d2c:	mov	x21, x0
  409d30:	mov	w1, #0x3d                  	// #61
  409d34:	bl	404f50 <strchrnul@plt>
  409d38:	mov	x19, x0
  409d3c:	ldrb	w0, [x0]
  409d40:	cbz	w0, 409d48 <matches_color@@Base+0x58>
  409d44:	strb	wzr, [x19], #1
  409d48:	mov	x0, x21
  409d4c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  409d50:	add	x1, x1, #0xc20
  409d54:	bl	406af0 <matches@@Base>
  409d58:	tst	w0, #0xff
  409d5c:	b.ne	409db8 <matches_color@@Base+0xc8>  // b.any
  409d60:	ldrb	w0, [x19]
  409d64:	cbz	w0, 409dd0 <matches_color@@Base+0xe0>
  409d68:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  409d6c:	mov	x0, x19
  409d70:	add	x1, x1, #0xc28
  409d74:	bl	404df0 <strcmp@plt>
  409d78:	cbz	w0, 409dd0 <matches_color@@Base+0xe0>
  409d7c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  409d80:	mov	x0, x19
  409d84:	add	x1, x1, #0xc30
  409d88:	bl	404df0 <strcmp@plt>
  409d8c:	cbnz	w0, 409da0 <matches_color@@Base+0xb0>
  409d90:	mov	w1, #0x1                   	// #1
  409d94:	mov	w0, w1
  409d98:	str	w1, [x20]
  409d9c:	b	409dbc <matches_color@@Base+0xcc>
  409da0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  409da4:	mov	x0, x19
  409da8:	add	x1, x1, #0xc38
  409dac:	bl	404df0 <strcmp@plt>
  409db0:	cbz	w0, 409df8 <matches_color@@Base+0x108>
  409db4:	nop
  409db8:	mov	w0, #0x0                   	// #0
  409dbc:	mov	sp, x29
  409dc0:	ldp	x19, x20, [sp, #16]
  409dc4:	ldr	x21, [sp, #32]
  409dc8:	ldp	x29, x30, [sp], #48
  409dcc:	ret
  409dd0:	mov	w1, #0x2                   	// #2
  409dd4:	str	w1, [x20]
  409dd8:	mov	w0, #0x1                   	// #1
  409ddc:	mov	sp, x29
  409de0:	ldp	x19, x20, [sp, #16]
  409de4:	ldr	x21, [sp, #32]
  409de8:	ldp	x29, x30, [sp], #48
  409dec:	ret
  409df0:	mov	w0, #0x0                   	// #0
  409df4:	ret
  409df8:	mov	w0, #0x1                   	// #1
  409dfc:	str	wzr, [x20]
  409e00:	b	409dbc <matches_color@@Base+0xcc>
  409e04:	nop

0000000000409e08 <color_fprintf@@Base>:
  409e08:	stp	x29, x30, [sp, #-288]!
  409e0c:	adrp	x8, 426000 <stderr@@GLIBC_2.17+0x3d40>
  409e10:	mov	w10, #0xffffffd8            	// #-40
  409e14:	mov	x29, sp
  409e18:	ldr	w12, [x8, #3352]
  409e1c:	add	x11, sp, #0xf0
  409e20:	mov	w9, #0xffffff80            	// #-128
  409e24:	stp	x21, x22, [sp, #32]
  409e28:	mov	x22, x2
  409e2c:	add	x2, sp, #0x120
  409e30:	stp	x2, x2, [sp, #80]
  409e34:	cmp	w12, #0x0
  409e38:	str	x11, [sp, #96]
  409e3c:	ccmp	w1, #0x6, #0x4, ne  // ne = any
  409e40:	stp	w10, w9, [sp, #104]
  409e44:	str	q0, [sp, #112]
  409e48:	str	q1, [sp, #128]
  409e4c:	str	q2, [sp, #144]
  409e50:	str	q3, [sp, #160]
  409e54:	str	q4, [sp, #176]
  409e58:	str	q5, [sp, #192]
  409e5c:	str	q6, [sp, #208]
  409e60:	str	q7, [sp, #224]
  409e64:	stp	x3, x4, [sp, #248]
  409e68:	stp	x5, x6, [sp, #264]
  409e6c:	str	x7, [sp, #280]
  409e70:	b.eq	409f18 <color_fprintf@@Base+0x110>  // b.none
  409e74:	add	x8, x8, #0xd18
  409e78:	stp	x19, x20, [sp, #16]
  409e7c:	mov	x20, x0
  409e80:	ldr	w0, [x8, #4]
  409e84:	cbnz	w0, 409f08 <color_fprintf@@Base+0x100>
  409e88:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  409e8c:	add	x0, x0, #0xcc0
  409e90:	add	x0, x0, #0x20
  409e94:	ldr	w2, [x0, w1, uxtw #2]
  409e98:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  409e9c:	add	x3, x3, #0xd00
  409ea0:	adrp	x21, 40d000 <rta_addattr_l@@Base+0x98>
  409ea4:	add	x21, x21, #0x860
  409ea8:	mov	x1, x21
  409eac:	mov	x0, x20
  409eb0:	ldr	x2, [x3, w2, uxtw #3]
  409eb4:	bl	405020 <fprintf@plt>
  409eb8:	mov	w19, w0
  409ebc:	ldp	x4, x5, [sp, #80]
  409ec0:	mov	x1, x22
  409ec4:	ldp	x6, x7, [sp, #96]
  409ec8:	add	x2, sp, #0x30
  409ecc:	mov	x0, x20
  409ed0:	stp	x4, x5, [sp, #48]
  409ed4:	stp	x6, x7, [sp, #64]
  409ed8:	bl	404fa0 <vfprintf@plt>
  409edc:	add	w19, w19, w0
  409ee0:	mov	x1, x21
  409ee4:	mov	x0, x20
  409ee8:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  409eec:	add	x2, x2, #0xc40
  409ef0:	bl	405020 <fprintf@plt>
  409ef4:	add	w0, w19, w0
  409ef8:	ldp	x19, x20, [sp, #16]
  409efc:	ldp	x21, x22, [sp, #32]
  409f00:	ldp	x29, x30, [sp], #288
  409f04:	ret
  409f08:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  409f0c:	add	x0, x0, #0xcc0
  409f10:	ldr	w2, [x0, w1, uxtw #2]
  409f14:	b	409e98 <color_fprintf@@Base+0x90>
  409f18:	ldp	x6, x7, [sp, #80]
  409f1c:	mov	x1, x22
  409f20:	ldp	x4, x5, [sp, #96]
  409f24:	add	x2, sp, #0x30
  409f28:	stp	x6, x7, [sp, #48]
  409f2c:	stp	x4, x5, [sp, #64]
  409f30:	bl	404fa0 <vfprintf@plt>
  409f34:	ldp	x21, x22, [sp, #32]
  409f38:	ldp	x29, x30, [sp], #288
  409f3c:	ret

0000000000409f40 <ifa_family_color@@Base>:
  409f40:	and	w0, w0, #0xff
  409f44:	cmp	w0, #0x2
  409f48:	b.eq	409f5c <ifa_family_color@@Base+0x1c>  // b.none
  409f4c:	cmp	w0, #0xa
  409f50:	mov	w1, #0x3                   	// #3
  409f54:	mov	w0, #0x6                   	// #6
  409f58:	csel	w0, w0, w1, ne  // ne = any
  409f5c:	ret

0000000000409f60 <oper_state_color@@Base>:
  409f60:	and	w0, w0, #0xff
  409f64:	cmp	w0, #0x2
  409f68:	b.eq	409f80 <oper_state_color@@Base+0x20>  // b.none
  409f6c:	cmp	w0, #0x6
  409f70:	mov	w1, #0x4                   	// #4
  409f74:	mov	w0, #0x6                   	// #6
  409f78:	csel	w0, w0, w1, ne  // ne = any
  409f7c:	ret
  409f80:	mov	w0, #0x5                   	// #5
  409f84:	ret

0000000000409f88 <mpls_ntop@@Base>:
  409f88:	stp	x29, x30, [sp, #-80]!
  409f8c:	mov	x29, sp
  409f90:	stp	x19, x20, [sp, #16]
  409f94:	mov	x20, x1
  409f98:	mov	x19, x3
  409f9c:	stp	x21, x22, [sp, #32]
  409fa0:	mov	w22, w0
  409fa4:	mov	x21, x2
  409fa8:	stp	x25, x26, [sp, #64]
  409fac:	bl	404fd0 <__errno_location@plt>
  409fb0:	cmp	w22, #0x1c
  409fb4:	mov	x25, x0
  409fb8:	b.eq	409fdc <mpls_ntop@@Base+0x54>  // b.none
  409fbc:	mov	w1, #0x61                  	// #97
  409fc0:	str	w1, [x25]
  409fc4:	mov	x0, #0x0                   	// #0
  409fc8:	ldp	x19, x20, [sp, #16]
  409fcc:	ldp	x21, x22, [sp, #32]
  409fd0:	ldp	x25, x26, [sp, #64]
  409fd4:	ldp	x29, x30, [sp], #80
  409fd8:	ret
  409fdc:	stp	x23, x24, [sp, #48]
  409fe0:	adrp	x26, 40d000 <rta_addattr_l@@Base+0x98>
  409fe4:	mov	x24, x21
  409fe8:	add	x26, x26, #0xd00
  409fec:	mov	w23, #0x2f                  	// #47
  409ff0:	str	wzr, [x0]
  409ff4:	b	40a008 <mpls_ntop@@Base+0x80>
  409ff8:	tbnz	w22, #8, 40a060 <mpls_ntop@@Base+0xd8>
  409ffc:	add	x19, x19, x1
  40a000:	strb	w23, [x24, w0, sxtw]
  40a004:	add	x24, x2, #0x1
  40a008:	ldr	w22, [x20]
  40a00c:	mov	x1, x19
  40a010:	mov	x2, x26
  40a014:	mov	x0, x24
  40a018:	rev	w22, w22
  40a01c:	add	x20, x20, #0x4
  40a020:	lsr	w3, w22, #12
  40a024:	bl	404c40 <snprintf@plt>
  40a028:	sxtw	x1, w0
  40a02c:	cmp	x19, w0, sxtw
  40a030:	add	x2, x24, x1
  40a034:	mvn	x1, x1
  40a038:	b.hi	409ff8 <mpls_ntop@@Base+0x70>  // b.pmore
  40a03c:	mov	w1, #0xfffffff9            	// #-7
  40a040:	mov	x0, #0x0                   	// #0
  40a044:	ldp	x23, x24, [sp, #48]
  40a048:	str	w1, [x25]
  40a04c:	ldp	x19, x20, [sp, #16]
  40a050:	ldp	x21, x22, [sp, #32]
  40a054:	ldp	x25, x26, [sp, #64]
  40a058:	ldp	x29, x30, [sp], #80
  40a05c:	ret
  40a060:	mov	x0, x21
  40a064:	ldp	x19, x20, [sp, #16]
  40a068:	ldp	x21, x22, [sp, #32]
  40a06c:	ldp	x23, x24, [sp, #48]
  40a070:	ldp	x25, x26, [sp, #64]
  40a074:	ldp	x29, x30, [sp], #80
  40a078:	ret
  40a07c:	nop

000000000040a080 <mpls_pton@@Base>:
  40a080:	stp	x29, x30, [sp, #-80]!
  40a084:	mov	x29, sp
  40a088:	stp	x19, x20, [sp, #16]
  40a08c:	lsr	x19, x3, #2
  40a090:	mov	x20, x2
  40a094:	stp	x21, x22, [sp, #32]
  40a098:	mov	w22, w0
  40a09c:	mov	x21, x1
  40a0a0:	bl	404fd0 <__errno_location@plt>
  40a0a4:	mov	x1, x0
  40a0a8:	cmp	w22, #0x1c
  40a0ac:	b.ne	40a194 <mpls_pton@@Base+0x114>  // b.any
  40a0b0:	str	wzr, [x0]
  40a0b4:	cbz	w19, 40a140 <mpls_pton@@Base+0xc0>
  40a0b8:	sub	w19, w19, #0x1
  40a0bc:	mov	x22, #0xfffff               	// #1048575
  40a0c0:	add	x19, x19, #0x1
  40a0c4:	str	x23, [sp, #48]
  40a0c8:	add	x23, sp, #0x48
  40a0cc:	add	x19, x20, x19, lsl #2
  40a0d0:	b	40a10c <mpls_pton@@Base+0x8c>
  40a0d4:	ldr	x2, [sp, #72]
  40a0d8:	lsl	w0, w0, #12
  40a0dc:	rev	w0, w0
  40a0e0:	cmp	x2, x21
  40a0e4:	b.eq	40a124 <mpls_pton@@Base+0xa4>  // b.none
  40a0e8:	str	w0, [x20]
  40a0ec:	add	x21, x2, #0x1
  40a0f0:	ldrb	w2, [x2]
  40a0f4:	cmp	w2, #0x2f
  40a0f8:	cbz	w2, 40a174 <mpls_pton@@Base+0xf4>
  40a0fc:	add	x20, x20, #0x4
  40a100:	b.ne	40a124 <mpls_pton@@Base+0xa4>  // b.any
  40a104:	cmp	x20, x19
  40a108:	b.eq	40a13c <mpls_pton@@Base+0xbc>  // b.none
  40a10c:	mov	x1, x23
  40a110:	mov	x0, x21
  40a114:	mov	w2, #0x0                   	// #0
  40a118:	bl	404b50 <strtoul@plt>
  40a11c:	cmp	x0, x22
  40a120:	b.ls	40a0d4 <mpls_pton@@Base+0x54>  // b.plast
  40a124:	ldr	x23, [sp, #48]
  40a128:	mov	w0, #0x0                   	// #0
  40a12c:	ldp	x19, x20, [sp, #16]
  40a130:	ldp	x21, x22, [sp, #32]
  40a134:	ldp	x29, x30, [sp], #80
  40a138:	ret
  40a13c:	ldr	x23, [sp, #48]
  40a140:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40a144:	mov	x2, #0x18                  	// #24
  40a148:	mov	x1, #0x1                   	// #1
  40a14c:	ldr	x3, [x3, #3992]
  40a150:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40a154:	add	x0, x0, #0xd08
  40a158:	ldr	x3, [x3]
  40a15c:	bl	404eb0 <fwrite@plt>
  40a160:	mov	w0, #0x0                   	// #0
  40a164:	ldp	x19, x20, [sp, #16]
  40a168:	ldp	x21, x22, [sp, #32]
  40a16c:	ldp	x29, x30, [sp], #80
  40a170:	ret
  40a174:	orr	w1, w0, #0x10000
  40a178:	mov	w0, #0x1                   	// #1
  40a17c:	ldr	x23, [sp, #48]
  40a180:	str	w1, [x20]
  40a184:	ldp	x19, x20, [sp, #16]
  40a188:	ldp	x21, x22, [sp, #32]
  40a18c:	ldp	x29, x30, [sp], #80
  40a190:	ret
  40a194:	mov	w2, #0x61                  	// #97
  40a198:	mov	w0, #0xffffffff            	// #-1
  40a19c:	str	w2, [x1]
  40a1a0:	b	40a12c <mpls_pton@@Base+0xac>
  40a1a4:	nop
  40a1a8:	stp	x29, x30, [sp, #-16]!
  40a1ac:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a1b0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40a1b4:	mov	x29, sp
  40a1b8:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40a1bc:	add	x3, x3, #0xde8
  40a1c0:	add	x1, x1, #0xd28
  40a1c4:	add	x0, x0, #0xd38
  40a1c8:	mov	w2, #0x85                  	// #133
  40a1cc:	bl	404fc0 <__assert_fail@plt>
  40a1d0:	stp	x29, x30, [sp, #-48]!
  40a1d4:	mov	x29, sp
  40a1d8:	stp	x19, x20, [sp, #16]
  40a1dc:	mov	x20, x0
  40a1e0:	mov	x19, x1
  40a1e4:	mov	w0, #0x22                  	// #34
  40a1e8:	ldr	x1, [x20]
  40a1ec:	bl	404c10 <putc@plt>
  40a1f0:	ldrb	w0, [x19]
  40a1f4:	cbz	w0, 40a284 <mpls_pton@@Base+0x204>
  40a1f8:	stp	x21, x22, [sp, #32]
  40a1fc:	adrp	x22, 40d000 <rta_addattr_l@@Base+0x98>
  40a200:	adrp	x21, 40d000 <rta_addattr_l@@Base+0x98>
  40a204:	add	x22, x22, #0xd58
  40a208:	add	x21, x21, #0xd80
  40a20c:	b	40a240 <mpls_pton@@Base+0x1c0>
  40a210:	cmp	w0, #0x8
  40a214:	b.eq	40a32c <mpls_pton@@Base+0x2ac>  // b.none
  40a218:	cmp	w0, #0x9
  40a21c:	b.ne	40a320 <mpls_pton@@Base+0x2a0>  // b.any
  40a220:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40a224:	mov	x2, #0x2                   	// #2
  40a228:	add	x0, x0, #0xd48
  40a22c:	mov	x1, #0x1                   	// #1
  40a230:	bl	404eb0 <fwrite@plt>
  40a234:	nop
  40a238:	ldrb	w0, [x19, #1]!
  40a23c:	cbz	w0, 40a280 <mpls_pton@@Base+0x200>
  40a240:	cmp	w0, #0xd
  40a244:	ldr	x3, [x20]
  40a248:	b.eq	40a2f8 <mpls_pton@@Base+0x278>  // b.none
  40a24c:	b.hi	40a298 <mpls_pton@@Base+0x218>  // b.pmore
  40a250:	cmp	w0, #0xa
  40a254:	b.eq	40a2e0 <mpls_pton@@Base+0x260>  // b.none
  40a258:	b.ls	40a210 <mpls_pton@@Base+0x190>  // b.plast
  40a25c:	cmp	w0, #0xc
  40a260:	b.ne	40a320 <mpls_pton@@Base+0x2a0>  // b.any
  40a264:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40a268:	mov	x2, #0x2                   	// #2
  40a26c:	add	x0, x0, #0xd60
  40a270:	mov	x1, #0x1                   	// #1
  40a274:	bl	404eb0 <fwrite@plt>
  40a278:	ldrb	w0, [x19, #1]!
  40a27c:	cbnz	w0, 40a240 <mpls_pton@@Base+0x1c0>
  40a280:	ldp	x21, x22, [sp, #32]
  40a284:	mov	w0, #0x22                  	// #34
  40a288:	ldr	x1, [x20]
  40a28c:	ldp	x19, x20, [sp, #16]
  40a290:	ldp	x29, x30, [sp], #48
  40a294:	b	404c10 <putc@plt>
  40a298:	cmp	w0, #0x27
  40a29c:	b.eq	40a30c <mpls_pton@@Base+0x28c>  // b.none
  40a2a0:	cmp	w0, #0x5c
  40a2a4:	b.ne	40a2c0 <mpls_pton@@Base+0x240>  // b.any
  40a2a8:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40a2ac:	mov	x2, #0x2                   	// #2
  40a2b0:	mov	x1, #0x1                   	// #1
  40a2b4:	add	x0, x0, #0xd70
  40a2b8:	bl	404eb0 <fwrite@plt>
  40a2bc:	b	40a238 <mpls_pton@@Base+0x1b8>
  40a2c0:	cmp	w0, #0x22
  40a2c4:	b.ne	40a320 <mpls_pton@@Base+0x2a0>  // b.any
  40a2c8:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40a2cc:	mov	x2, #0x2                   	// #2
  40a2d0:	mov	x1, #0x1                   	// #1
  40a2d4:	add	x0, x0, #0xd78
  40a2d8:	bl	404eb0 <fwrite@plt>
  40a2dc:	b	40a238 <mpls_pton@@Base+0x1b8>
  40a2e0:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40a2e4:	mov	x2, #0x2                   	// #2
  40a2e8:	mov	x1, #0x1                   	// #1
  40a2ec:	add	x0, x0, #0xd50
  40a2f0:	bl	404eb0 <fwrite@plt>
  40a2f4:	b	40a238 <mpls_pton@@Base+0x1b8>
  40a2f8:	mov	x0, x22
  40a2fc:	mov	x2, #0x2                   	// #2
  40a300:	mov	x1, #0x1                   	// #1
  40a304:	bl	404eb0 <fwrite@plt>
  40a308:	b	40a238 <mpls_pton@@Base+0x1b8>
  40a30c:	mov	x0, x21
  40a310:	mov	x2, #0x2                   	// #2
  40a314:	mov	x1, #0x1                   	// #1
  40a318:	bl	404eb0 <fwrite@plt>
  40a31c:	b	40a238 <mpls_pton@@Base+0x1b8>
  40a320:	mov	x1, x3
  40a324:	bl	404c10 <putc@plt>
  40a328:	b	40a238 <mpls_pton@@Base+0x1b8>
  40a32c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40a330:	mov	x2, #0x2                   	// #2
  40a334:	mov	x1, #0x1                   	// #1
  40a338:	add	x0, x0, #0xd68
  40a33c:	bl	404eb0 <fwrite@plt>
  40a340:	b	40a238 <mpls_pton@@Base+0x1b8>
  40a344:	nop

000000000040a348 <jsonw_new@@Base>:
  40a348:	stp	x29, x30, [sp, #-32]!
  40a34c:	mov	x29, sp
  40a350:	str	x19, [sp, #16]
  40a354:	mov	x19, x0
  40a358:	mov	x0, #0x10                  	// #16
  40a35c:	bl	404c90 <malloc@plt>
  40a360:	cbz	x0, 40a370 <jsonw_new@@Base+0x28>
  40a364:	str	x19, [x0]
  40a368:	str	wzr, [x0, #8]
  40a36c:	strh	wzr, [x0, #12]
  40a370:	ldr	x19, [sp, #16]
  40a374:	ldp	x29, x30, [sp], #32
  40a378:	ret
  40a37c:	nop

000000000040a380 <jsonw_destroy@@Base>:
  40a380:	stp	x29, x30, [sp, #-32]!
  40a384:	mov	x29, sp
  40a388:	stp	x19, x20, [sp, #16]
  40a38c:	mov	x19, x0
  40a390:	ldr	x20, [x0]
  40a394:	ldr	w0, [x20, #8]
  40a398:	cbnz	w0, 40a3c8 <jsonw_destroy@@Base+0x48>
  40a39c:	ldr	x1, [x20]
  40a3a0:	mov	w0, #0xa                   	// #10
  40a3a4:	bl	404c30 <fputc@plt>
  40a3a8:	ldr	x0, [x20]
  40a3ac:	bl	404ed0 <fflush@plt>
  40a3b0:	mov	x0, x20
  40a3b4:	bl	404e50 <free@plt>
  40a3b8:	str	xzr, [x19]
  40a3bc:	ldp	x19, x20, [sp, #16]
  40a3c0:	ldp	x29, x30, [sp], #32
  40a3c4:	ret
  40a3c8:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a3cc:	add	x3, x3, #0xde8
  40a3d0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40a3d4:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40a3d8:	add	x3, x3, #0x10
  40a3dc:	add	x1, x1, #0xd28
  40a3e0:	add	x0, x0, #0xd88
  40a3e4:	mov	w2, #0x6e                  	// #110
  40a3e8:	bl	404fc0 <__assert_fail@plt>
  40a3ec:	nop

000000000040a3f0 <jsonw_pretty@@Base>:
  40a3f0:	strb	w1, [x0, #12]
  40a3f4:	ret

000000000040a3f8 <jsonw_name@@Base>:
  40a3f8:	stp	x29, x30, [sp, #-48]!
  40a3fc:	mov	x29, sp
  40a400:	stp	x19, x20, [sp, #16]
  40a404:	mov	x19, x0
  40a408:	mov	x20, x1
  40a40c:	ldrb	w0, [x0, #13]
  40a410:	cbnz	w0, 40a4a4 <jsonw_name@@Base+0xac>
  40a414:	ldrb	w0, [x19, #12]
  40a418:	mov	w1, #0x2c                  	// #44
  40a41c:	strb	w1, [x19, #13]
  40a420:	cbnz	w0, 40a454 <jsonw_name@@Base+0x5c>
  40a424:	strb	wzr, [x19, #13]
  40a428:	mov	x1, x20
  40a42c:	mov	x0, x19
  40a430:	bl	40a1d0 <mpls_pton@@Base+0x150>
  40a434:	ldr	x1, [x19]
  40a438:	mov	w0, #0x3a                  	// #58
  40a43c:	bl	404c10 <putc@plt>
  40a440:	ldrb	w0, [x19, #12]
  40a444:	cbnz	w0, 40a4b0 <jsonw_name@@Base+0xb8>
  40a448:	ldp	x19, x20, [sp, #16]
  40a44c:	ldp	x29, x30, [sp], #48
  40a450:	ret
  40a454:	ldr	x1, [x19]
  40a458:	mov	w0, #0xa                   	// #10
  40a45c:	bl	404c10 <putc@plt>
  40a460:	ldr	w0, [x19, #8]
  40a464:	cbz	w0, 40a424 <jsonw_name@@Base+0x2c>
  40a468:	stp	x21, x22, [sp, #32]
  40a46c:	adrp	x22, 40d000 <rta_addattr_l@@Base+0x98>
  40a470:	add	x22, x22, #0xda0
  40a474:	mov	w21, #0x0                   	// #0
  40a478:	ldr	x3, [x19]
  40a47c:	mov	x0, x22
  40a480:	mov	x2, #0x4                   	// #4
  40a484:	mov	x1, #0x1                   	// #1
  40a488:	add	w21, w21, #0x1
  40a48c:	bl	404eb0 <fwrite@plt>
  40a490:	ldr	w0, [x19, #8]
  40a494:	cmp	w21, w0
  40a498:	b.cc	40a478 <jsonw_name@@Base+0x80>  // b.lo, b.ul, b.last
  40a49c:	ldp	x21, x22, [sp, #32]
  40a4a0:	b	40a424 <jsonw_name@@Base+0x2c>
  40a4a4:	ldr	x1, [x19]
  40a4a8:	bl	404c10 <putc@plt>
  40a4ac:	b	40a414 <jsonw_name@@Base+0x1c>
  40a4b0:	ldr	x1, [x19]
  40a4b4:	mov	w0, #0x20                  	// #32
  40a4b8:	ldp	x19, x20, [sp, #16]
  40a4bc:	ldp	x29, x30, [sp], #48
  40a4c0:	b	404c10 <putc@plt>
  40a4c4:	nop

000000000040a4c8 <jsonw_printf@@Base>:
  40a4c8:	stp	x29, x30, [sp, #-272]!
  40a4cc:	mov	w9, #0xffffffd0            	// #-48
  40a4d0:	mov	x29, sp
  40a4d4:	stp	x19, x20, [sp, #16]
  40a4d8:	mov	x19, x0
  40a4dc:	add	x10, sp, #0xe0
  40a4e0:	str	q0, [sp, #96]
  40a4e4:	mov	w0, #0xffffff80            	// #-128
  40a4e8:	mov	x20, x1
  40a4ec:	ldrb	w8, [x19, #13]
  40a4f0:	add	x1, sp, #0x110
  40a4f4:	stp	x1, x1, [sp, #64]
  40a4f8:	str	x10, [sp, #80]
  40a4fc:	stp	w9, w0, [sp, #88]
  40a500:	str	q1, [sp, #112]
  40a504:	str	q2, [sp, #128]
  40a508:	str	q3, [sp, #144]
  40a50c:	str	q4, [sp, #160]
  40a510:	str	q5, [sp, #176]
  40a514:	str	q6, [sp, #192]
  40a518:	str	q7, [sp, #208]
  40a51c:	stp	x2, x3, [sp, #224]
  40a520:	stp	x4, x5, [sp, #240]
  40a524:	stp	x6, x7, [sp, #256]
  40a528:	ldr	x0, [x19]
  40a52c:	cbnz	w8, 40a560 <jsonw_printf@@Base+0x98>
  40a530:	ldp	x6, x7, [sp, #64]
  40a534:	mov	w1, #0x2c                  	// #44
  40a538:	ldp	x4, x5, [sp, #80]
  40a53c:	strb	w1, [x19, #13]
  40a540:	add	x2, sp, #0x20
  40a544:	mov	x1, x20
  40a548:	stp	x6, x7, [sp, #32]
  40a54c:	stp	x4, x5, [sp, #48]
  40a550:	bl	404fa0 <vfprintf@plt>
  40a554:	ldp	x19, x20, [sp, #16]
  40a558:	ldp	x29, x30, [sp], #272
  40a55c:	ret
  40a560:	mov	x1, x0
  40a564:	mov	w0, w8
  40a568:	bl	404c10 <putc@plt>
  40a56c:	ldr	x0, [x19]
  40a570:	b	40a530 <jsonw_printf@@Base+0x68>
  40a574:	nop

000000000040a578 <jsonw_start_object@@Base>:
  40a578:	stp	x29, x30, [sp, #-32]!
  40a57c:	mov	x29, sp
  40a580:	str	x19, [sp, #16]
  40a584:	mov	x19, x0
  40a588:	ldrb	w0, [x0, #13]
  40a58c:	ldr	x1, [x19]
  40a590:	cbnz	w0, 40a5c0 <jsonw_start_object@@Base+0x48>
  40a594:	mov	w0, #0x2c                  	// #44
  40a598:	strb	w0, [x19, #13]
  40a59c:	mov	w0, #0x7b                  	// #123
  40a5a0:	bl	404c10 <putc@plt>
  40a5a4:	strb	wzr, [x19, #13]
  40a5a8:	ldr	w0, [x19, #8]
  40a5ac:	add	w0, w0, #0x1
  40a5b0:	str	w0, [x19, #8]
  40a5b4:	ldr	x19, [sp, #16]
  40a5b8:	ldp	x29, x30, [sp], #32
  40a5bc:	ret
  40a5c0:	bl	404c10 <putc@plt>
  40a5c4:	ldr	x1, [x19]
  40a5c8:	b	40a594 <jsonw_start_object@@Base+0x1c>
  40a5cc:	nop

000000000040a5d0 <jsonw_end_object@@Base>:
  40a5d0:	stp	x29, x30, [sp, #-48]!
  40a5d4:	mov	x29, sp
  40a5d8:	stp	x19, x20, [sp, #16]
  40a5dc:	mov	x19, x0
  40a5e0:	ldr	w0, [x0, #8]
  40a5e4:	cbz	w0, 40a670 <jsonw_end_object@@Base+0xa0>
  40a5e8:	ldrb	w2, [x19, #13]
  40a5ec:	sub	w0, w0, #0x1
  40a5f0:	str	w0, [x19, #8]
  40a5f4:	ldr	x1, [x19]
  40a5f8:	cbz	w2, 40a654 <jsonw_end_object@@Base+0x84>
  40a5fc:	ldrb	w0, [x19, #12]
  40a600:	cbz	w0, 40a654 <jsonw_end_object@@Base+0x84>
  40a604:	mov	w0, #0xa                   	// #10
  40a608:	str	x21, [sp, #32]
  40a60c:	bl	404c10 <putc@plt>
  40a610:	adrp	x21, 40d000 <rta_addattr_l@@Base+0x98>
  40a614:	ldr	w0, [x19, #8]
  40a618:	add	x21, x21, #0xda0
  40a61c:	mov	w20, #0x0                   	// #0
  40a620:	cbz	w0, 40a64c <jsonw_end_object@@Base+0x7c>
  40a624:	nop
  40a628:	ldr	x3, [x19]
  40a62c:	mov	x0, x21
  40a630:	mov	x2, #0x4                   	// #4
  40a634:	mov	x1, #0x1                   	// #1
  40a638:	add	w20, w20, #0x1
  40a63c:	bl	404eb0 <fwrite@plt>
  40a640:	ldr	w0, [x19, #8]
  40a644:	cmp	w20, w0
  40a648:	b.cc	40a628 <jsonw_end_object@@Base+0x58>  // b.lo, b.ul, b.last
  40a64c:	ldr	x1, [x19]
  40a650:	ldr	x21, [sp, #32]
  40a654:	mov	w0, #0x7d                  	// #125
  40a658:	bl	404c10 <putc@plt>
  40a65c:	mov	w0, #0x2c                  	// #44
  40a660:	strb	w0, [x19, #13]
  40a664:	ldp	x19, x20, [sp, #16]
  40a668:	ldp	x29, x30, [sp], #48
  40a66c:	ret
  40a670:	str	x21, [sp, #32]
  40a674:	bl	40a1a8 <mpls_pton@@Base+0x128>

000000000040a678 <jsonw_start_array@@Base>:
  40a678:	stp	x29, x30, [sp, #-32]!
  40a67c:	mov	x29, sp
  40a680:	str	x19, [sp, #16]
  40a684:	mov	x19, x0
  40a688:	ldrb	w0, [x0, #13]
  40a68c:	ldr	x1, [x19]
  40a690:	cbnz	w0, 40a6c8 <jsonw_start_array@@Base+0x50>
  40a694:	mov	w0, #0x2c                  	// #44
  40a698:	strb	w0, [x19, #13]
  40a69c:	mov	w0, #0x5b                  	// #91
  40a6a0:	bl	404c10 <putc@plt>
  40a6a4:	strb	wzr, [x19, #13]
  40a6a8:	ldr	w0, [x19, #8]
  40a6ac:	ldrb	w1, [x19, #12]
  40a6b0:	add	w0, w0, #0x1
  40a6b4:	str	w0, [x19, #8]
  40a6b8:	cbnz	w1, 40a6d4 <jsonw_start_array@@Base+0x5c>
  40a6bc:	ldr	x19, [sp, #16]
  40a6c0:	ldp	x29, x30, [sp], #32
  40a6c4:	ret
  40a6c8:	bl	404c10 <putc@plt>
  40a6cc:	ldr	x1, [x19]
  40a6d0:	b	40a694 <jsonw_start_array@@Base+0x1c>
  40a6d4:	ldr	x1, [x19]
  40a6d8:	mov	w0, #0x20                  	// #32
  40a6dc:	ldr	x19, [sp, #16]
  40a6e0:	ldp	x29, x30, [sp], #32
  40a6e4:	b	404c10 <putc@plt>

000000000040a6e8 <jsonw_end_array@@Base>:
  40a6e8:	stp	x29, x30, [sp, #-32]!
  40a6ec:	mov	x29, sp
  40a6f0:	str	x19, [sp, #16]
  40a6f4:	mov	x19, x0
  40a6f8:	ldrb	w0, [x0, #12]
  40a6fc:	cbz	w0, 40a708 <jsonw_end_array@@Base+0x20>
  40a700:	ldrb	w0, [x19, #13]
  40a704:	cbnz	w0, 40a73c <jsonw_end_array@@Base+0x54>
  40a708:	ldr	w0, [x19, #8]
  40a70c:	strb	wzr, [x19, #13]
  40a710:	cbz	w0, 40a74c <jsonw_end_array@@Base+0x64>
  40a714:	ldr	x1, [x19]
  40a718:	sub	w0, w0, #0x1
  40a71c:	str	w0, [x19, #8]
  40a720:	mov	w0, #0x5d                  	// #93
  40a724:	bl	404c10 <putc@plt>
  40a728:	mov	w0, #0x2c                  	// #44
  40a72c:	strb	w0, [x19, #13]
  40a730:	ldr	x19, [sp, #16]
  40a734:	ldp	x29, x30, [sp], #32
  40a738:	ret
  40a73c:	ldr	x1, [x19]
  40a740:	mov	w0, #0x20                  	// #32
  40a744:	bl	404c10 <putc@plt>
  40a748:	b	40a708 <jsonw_end_array@@Base+0x20>
  40a74c:	bl	40a1a8 <mpls_pton@@Base+0x128>

000000000040a750 <jsonw_string@@Base>:
  40a750:	stp	x29, x30, [sp, #-32]!
  40a754:	mov	x29, sp
  40a758:	stp	x19, x20, [sp, #16]
  40a75c:	mov	x19, x0
  40a760:	mov	x20, x1
  40a764:	ldrb	w0, [x0, #13]
  40a768:	cbnz	w0, 40a788 <jsonw_string@@Base+0x38>
  40a76c:	mov	w0, #0x2c                  	// #44
  40a770:	strb	w0, [x19, #13]
  40a774:	mov	x1, x20
  40a778:	mov	x0, x19
  40a77c:	ldp	x19, x20, [sp, #16]
  40a780:	ldp	x29, x30, [sp], #32
  40a784:	b	40a1d0 <mpls_pton@@Base+0x150>
  40a788:	ldr	x1, [x19]
  40a78c:	bl	404c10 <putc@plt>
  40a790:	mov	w0, #0x2c                  	// #44
  40a794:	strb	w0, [x19, #13]
  40a798:	mov	x1, x20
  40a79c:	mov	x0, x19
  40a7a0:	ldp	x19, x20, [sp, #16]
  40a7a4:	ldp	x29, x30, [sp], #32
  40a7a8:	b	40a1d0 <mpls_pton@@Base+0x150>
  40a7ac:	nop

000000000040a7b0 <jsonw_bool@@Base>:
  40a7b0:	tst	w1, #0xff
  40a7b4:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a7b8:	adrp	x2, 40d000 <rta_addattr_l@@Base+0x98>
  40a7bc:	add	x3, x3, #0xc00
  40a7c0:	add	x2, x2, #0xbf8
  40a7c4:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40a7c8:	csel	x2, x2, x3, ne  // ne = any
  40a7cc:	add	x1, x1, #0x860
  40a7d0:	b	40a4c8 <jsonw_printf@@Base>
  40a7d4:	nop

000000000040a7d8 <jsonw_null@@Base>:
  40a7d8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40a7dc:	add	x1, x1, #0xda8
  40a7e0:	b	40a4c8 <jsonw_printf@@Base>
  40a7e4:	nop

000000000040a7e8 <jsonw_float@@Base>:
  40a7e8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40a7ec:	add	x1, x1, #0xdb0
  40a7f0:	b	40a4c8 <jsonw_printf@@Base>
  40a7f4:	nop

000000000040a7f8 <jsonw_hhu@@Base>:
  40a7f8:	and	w2, w1, #0xff
  40a7fc:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40a800:	add	x1, x1, #0xdb8
  40a804:	b	40a4c8 <jsonw_printf@@Base>

000000000040a808 <jsonw_hu@@Base>:
  40a808:	and	w2, w1, #0xffff
  40a80c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40a810:	add	x1, x1, #0xdc0
  40a814:	b	40a4c8 <jsonw_printf@@Base>

000000000040a818 <jsonw_uint@@Base>:
  40a818:	mov	w2, w1
  40a81c:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a820:	add	x1, x3, #0xd00
  40a824:	b	40a4c8 <jsonw_printf@@Base>

000000000040a828 <jsonw_u64@@Base>:
  40a828:	mov	x2, x1
  40a82c:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a830:	add	x1, x3, #0xdc8
  40a834:	b	40a4c8 <jsonw_printf@@Base>

000000000040a838 <jsonw_xint@@Base>:
  40a838:	mov	x2, x1
  40a83c:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a840:	add	x1, x3, #0xdd0
  40a844:	b	40a4c8 <jsonw_printf@@Base>

000000000040a848 <jsonw_luint@@Base>:
  40a848:	mov	x2, x1
  40a84c:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a850:	add	x1, x3, #0xdc8
  40a854:	b	40a4c8 <jsonw_printf@@Base>

000000000040a858 <jsonw_lluint@@Base>:
  40a858:	mov	x2, x1
  40a85c:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a860:	add	x1, x3, #0xdd8
  40a864:	b	40a4c8 <jsonw_printf@@Base>

000000000040a868 <jsonw_int@@Base>:
  40a868:	mov	w2, w1
  40a86c:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a870:	add	x1, x3, #0xab0
  40a874:	b	40a4c8 <jsonw_printf@@Base>

000000000040a878 <jsonw_s64@@Base>:
  40a878:	mov	x2, x1
  40a87c:	adrp	x3, 40d000 <rta_addattr_l@@Base+0x98>
  40a880:	add	x1, x3, #0xde0
  40a884:	b	40a4c8 <jsonw_printf@@Base>

000000000040a888 <jsonw_string_field@@Base>:
  40a888:	stp	x29, x30, [sp, #-32]!
  40a88c:	mov	x29, sp
  40a890:	stp	x19, x20, [sp, #16]
  40a894:	mov	x20, x2
  40a898:	mov	x19, x0
  40a89c:	bl	40a3f8 <jsonw_name@@Base>
  40a8a0:	mov	x1, x20
  40a8a4:	mov	x0, x19
  40a8a8:	ldp	x19, x20, [sp, #16]
  40a8ac:	ldp	x29, x30, [sp], #32
  40a8b0:	b	40a750 <jsonw_string@@Base>
  40a8b4:	nop

000000000040a8b8 <jsonw_bool_field@@Base>:
  40a8b8:	stp	x29, x30, [sp, #-32]!
  40a8bc:	mov	x29, sp
  40a8c0:	stp	x19, x20, [sp, #16]
  40a8c4:	and	w20, w2, #0xff
  40a8c8:	mov	x19, x0
  40a8cc:	bl	40a3f8 <jsonw_name@@Base>
  40a8d0:	mov	w1, w20
  40a8d4:	mov	x0, x19
  40a8d8:	ldp	x19, x20, [sp, #16]
  40a8dc:	ldp	x29, x30, [sp], #32
  40a8e0:	b	40a7b0 <jsonw_bool@@Base>
  40a8e4:	nop

000000000040a8e8 <jsonw_float_field@@Base>:
  40a8e8:	stp	x29, x30, [sp, #-32]!
  40a8ec:	mov	x29, sp
  40a8f0:	str	d8, [sp, #24]
  40a8f4:	fmov	d8, d0
  40a8f8:	str	x19, [sp, #16]
  40a8fc:	mov	x19, x0
  40a900:	bl	40a3f8 <jsonw_name@@Base>
  40a904:	fmov	d0, d8
  40a908:	mov	x0, x19
  40a90c:	ldr	d8, [sp, #24]
  40a910:	ldr	x19, [sp, #16]
  40a914:	ldp	x29, x30, [sp], #32
  40a918:	b	40a7e8 <jsonw_float@@Base>
  40a91c:	nop

000000000040a920 <jsonw_uint_field@@Base>:
  40a920:	stp	x29, x30, [sp, #-32]!
  40a924:	mov	x29, sp
  40a928:	stp	x19, x20, [sp, #16]
  40a92c:	mov	w20, w2
  40a930:	mov	x19, x0
  40a934:	bl	40a3f8 <jsonw_name@@Base>
  40a938:	mov	w1, w20
  40a93c:	mov	x0, x19
  40a940:	ldp	x19, x20, [sp, #16]
  40a944:	ldp	x29, x30, [sp], #32
  40a948:	b	40a818 <jsonw_uint@@Base>
  40a94c:	nop

000000000040a950 <jsonw_u64_field@@Base>:
  40a950:	stp	x29, x30, [sp, #-32]!
  40a954:	mov	x29, sp
  40a958:	stp	x19, x20, [sp, #16]
  40a95c:	mov	x20, x2
  40a960:	mov	x19, x0
  40a964:	bl	40a3f8 <jsonw_name@@Base>
  40a968:	mov	x1, x20
  40a96c:	mov	x0, x19
  40a970:	ldp	x19, x20, [sp, #16]
  40a974:	ldp	x29, x30, [sp], #32
  40a978:	b	40a828 <jsonw_u64@@Base>
  40a97c:	nop

000000000040a980 <jsonw_xint_field@@Base>:
  40a980:	stp	x29, x30, [sp, #-32]!
  40a984:	mov	x29, sp
  40a988:	stp	x19, x20, [sp, #16]
  40a98c:	mov	x20, x2
  40a990:	mov	x19, x0
  40a994:	bl	40a3f8 <jsonw_name@@Base>
  40a998:	mov	x1, x20
  40a99c:	mov	x0, x19
  40a9a0:	ldp	x19, x20, [sp, #16]
  40a9a4:	ldp	x29, x30, [sp], #32
  40a9a8:	b	40a838 <jsonw_xint@@Base>
  40a9ac:	nop

000000000040a9b0 <jsonw_hhu_field@@Base>:
  40a9b0:	stp	x29, x30, [sp, #-32]!
  40a9b4:	mov	x29, sp
  40a9b8:	stp	x19, x20, [sp, #16]
  40a9bc:	and	w20, w2, #0xff
  40a9c0:	mov	x19, x0
  40a9c4:	bl	40a3f8 <jsonw_name@@Base>
  40a9c8:	mov	w1, w20
  40a9cc:	mov	x0, x19
  40a9d0:	ldp	x19, x20, [sp, #16]
  40a9d4:	ldp	x29, x30, [sp], #32
  40a9d8:	b	40a7f8 <jsonw_hhu@@Base>
  40a9dc:	nop

000000000040a9e0 <jsonw_hu_field@@Base>:
  40a9e0:	stp	x29, x30, [sp, #-32]!
  40a9e4:	mov	x29, sp
  40a9e8:	stp	x19, x20, [sp, #16]
  40a9ec:	and	w20, w2, #0xffff
  40a9f0:	mov	x19, x0
  40a9f4:	bl	40a3f8 <jsonw_name@@Base>
  40a9f8:	mov	w1, w20
  40a9fc:	mov	x0, x19
  40aa00:	ldp	x19, x20, [sp, #16]
  40aa04:	ldp	x29, x30, [sp], #32
  40aa08:	b	40a808 <jsonw_hu@@Base>
  40aa0c:	nop

000000000040aa10 <jsonw_luint_field@@Base>:
  40aa10:	stp	x29, x30, [sp, #-32]!
  40aa14:	mov	x29, sp
  40aa18:	stp	x19, x20, [sp, #16]
  40aa1c:	mov	x20, x2
  40aa20:	mov	x19, x0
  40aa24:	bl	40a3f8 <jsonw_name@@Base>
  40aa28:	mov	x1, x20
  40aa2c:	mov	x0, x19
  40aa30:	ldp	x19, x20, [sp, #16]
  40aa34:	ldp	x29, x30, [sp], #32
  40aa38:	b	40a848 <jsonw_luint@@Base>
  40aa3c:	nop

000000000040aa40 <jsonw_lluint_field@@Base>:
  40aa40:	stp	x29, x30, [sp, #-32]!
  40aa44:	mov	x29, sp
  40aa48:	stp	x19, x20, [sp, #16]
  40aa4c:	mov	x20, x2
  40aa50:	mov	x19, x0
  40aa54:	bl	40a3f8 <jsonw_name@@Base>
  40aa58:	mov	x1, x20
  40aa5c:	mov	x0, x19
  40aa60:	ldp	x19, x20, [sp, #16]
  40aa64:	ldp	x29, x30, [sp], #32
  40aa68:	b	40a858 <jsonw_lluint@@Base>
  40aa6c:	nop

000000000040aa70 <jsonw_int_field@@Base>:
  40aa70:	stp	x29, x30, [sp, #-32]!
  40aa74:	mov	x29, sp
  40aa78:	stp	x19, x20, [sp, #16]
  40aa7c:	mov	w20, w2
  40aa80:	mov	x19, x0
  40aa84:	bl	40a3f8 <jsonw_name@@Base>
  40aa88:	mov	w1, w20
  40aa8c:	mov	x0, x19
  40aa90:	ldp	x19, x20, [sp, #16]
  40aa94:	ldp	x29, x30, [sp], #32
  40aa98:	b	40a868 <jsonw_int@@Base>
  40aa9c:	nop

000000000040aaa0 <jsonw_s64_field@@Base>:
  40aaa0:	stp	x29, x30, [sp, #-32]!
  40aaa4:	mov	x29, sp
  40aaa8:	stp	x19, x20, [sp, #16]
  40aaac:	mov	x20, x2
  40aab0:	mov	x19, x0
  40aab4:	bl	40a3f8 <jsonw_name@@Base>
  40aab8:	mov	x1, x20
  40aabc:	mov	x0, x19
  40aac0:	ldp	x19, x20, [sp, #16]
  40aac4:	ldp	x29, x30, [sp], #32
  40aac8:	b	40a878 <jsonw_s64@@Base>
  40aacc:	nop

000000000040aad0 <jsonw_null_field@@Base>:
  40aad0:	stp	x29, x30, [sp, #-32]!
  40aad4:	mov	x29, sp
  40aad8:	str	x19, [sp, #16]
  40aadc:	mov	x19, x0
  40aae0:	bl	40a3f8 <jsonw_name@@Base>
  40aae4:	mov	x0, x19
  40aae8:	ldr	x19, [sp, #16]
  40aaec:	ldp	x29, x30, [sp], #32
  40aaf0:	b	40a7d8 <jsonw_null@@Base>
  40aaf4:	nop
  40aaf8:	stp	x29, x30, [sp, #-48]!
  40aafc:	mov	x29, sp
  40ab00:	stp	x19, x20, [sp, #16]
  40ab04:	mov	w20, w2
  40ab08:	stp	x21, x22, [sp, #32]
  40ab0c:	mov	w22, w0
  40ab10:	mov	x21, x1
  40ab14:	b	40ab30 <jsonw_null_field@@Base+0x60>
  40ab18:	bl	404fd0 <__errno_location@plt>
  40ab1c:	mov	x19, x0
  40ab20:	ldr	w0, [x0]
  40ab24:	cmp	w0, #0x4
  40ab28:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40ab2c:	b.ne	40ab60 <jsonw_null_field@@Base+0x90>  // b.any
  40ab30:	mov	x1, x21
  40ab34:	mov	w2, w20
  40ab38:	mov	w0, w22
  40ab3c:	bl	404b40 <recvmsg@plt>
  40ab40:	mov	w1, w0
  40ab44:	tbnz	w0, #31, 40ab18 <jsonw_null_field@@Base+0x48>
  40ab48:	cbz	w0, 40aba4 <jsonw_null_field@@Base+0xd4>
  40ab4c:	mov	w0, w1
  40ab50:	ldp	x19, x20, [sp, #16]
  40ab54:	ldp	x21, x22, [sp, #32]
  40ab58:	ldp	x29, x30, [sp], #48
  40ab5c:	ret
  40ab60:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13c90>
  40ab64:	ldr	x1, [x1, #3992]
  40ab68:	ldr	x20, [x1]
  40ab6c:	bl	404d70 <strerror@plt>
  40ab70:	ldr	w3, [x19]
  40ab74:	mov	x2, x0
  40ab78:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40ab7c:	mov	x0, x20
  40ab80:	add	x1, x1, #0xe18
  40ab84:	bl	405020 <fprintf@plt>
  40ab88:	ldr	w1, [x19]
  40ab8c:	ldp	x19, x20, [sp, #16]
  40ab90:	neg	w1, w1
  40ab94:	mov	w0, w1
  40ab98:	ldp	x21, x22, [sp, #32]
  40ab9c:	ldp	x29, x30, [sp], #48
  40aba0:	ret
  40aba4:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40aba8:	mov	x1, #0x1                   	// #1
  40abac:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40abb0:	mov	x2, #0xf                   	// #15
  40abb4:	ldr	x3, [x3, #3992]
  40abb8:	add	x0, x0, #0xe08
  40abbc:	ldr	x3, [x3]
  40abc0:	bl	404eb0 <fwrite@plt>
  40abc4:	mov	w1, #0xffffffc3            	// #-61
  40abc8:	b	40ab4c <jsonw_null_field@@Base+0x7c>
  40abcc:	nop
  40abd0:	stp	x29, x30, [sp, #-64]!
  40abd4:	mov	x29, sp
  40abd8:	stp	x21, x22, [sp, #32]
  40abdc:	mov	x22, x2
  40abe0:	mov	w2, #0x22                  	// #34
  40abe4:	ldr	x21, [x1, #16]
  40abe8:	stp	x19, x20, [sp, #16]
  40abec:	mov	x20, x1
  40abf0:	stp	x23, x24, [sp, #48]
  40abf4:	mov	w24, w0
  40abf8:	stp	xzr, xzr, [x21]
  40abfc:	bl	40aaf8 <jsonw_null_field@@Base+0x28>
  40ac00:	sxtw	x19, w0
  40ac04:	tbnz	w19, #31, 40ac44 <jsonw_null_field@@Base+0x174>
  40ac08:	cmp	w19, #0x8, lsl #12
  40ac0c:	mov	x0, #0x8000                	// #32768
  40ac10:	csel	x19, x19, x0, ge  // ge = tcont
  40ac14:	mov	x0, x19
  40ac18:	bl	404c90 <malloc@plt>
  40ac1c:	mov	x23, x0
  40ac20:	cbz	x0, 40ac68 <jsonw_null_field@@Base+0x198>
  40ac24:	stp	x23, x19, [x21]
  40ac28:	mov	x1, x20
  40ac2c:	mov	w0, w24
  40ac30:	mov	w2, #0x0                   	// #0
  40ac34:	bl	40aaf8 <jsonw_null_field@@Base+0x28>
  40ac38:	mov	w19, w0
  40ac3c:	tbnz	w0, #31, 40ac5c <jsonw_null_field@@Base+0x18c>
  40ac40:	str	x23, [x22]
  40ac44:	mov	w0, w19
  40ac48:	ldp	x19, x20, [sp, #16]
  40ac4c:	ldp	x21, x22, [sp, #32]
  40ac50:	ldp	x23, x24, [sp, #48]
  40ac54:	ldp	x29, x30, [sp], #64
  40ac58:	ret
  40ac5c:	mov	x0, x23
  40ac60:	bl	404e50 <free@plt>
  40ac64:	b	40ac44 <jsonw_null_field@@Base+0x174>
  40ac68:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40ac6c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40ac70:	mov	x2, #0x20                  	// #32
  40ac74:	mov	x1, #0x1                   	// #1
  40ac78:	ldr	x3, [x3, #3992]
  40ac7c:	mov	w19, #0xfffffff4            	// #-12
  40ac80:	add	x0, x0, #0xe38
  40ac84:	ldr	x3, [x3]
  40ac88:	bl	404eb0 <fwrite@plt>
  40ac8c:	b	40ac44 <jsonw_null_field@@Base+0x174>

000000000040ac90 <nl_dump_ext_ack@@Base>:
  40ac90:	mov	w0, #0x0                   	// #0
  40ac94:	ret
  40ac98:	stp	x29, x30, [sp, #-208]!
  40ac9c:	mov	x6, #0x1                   	// #1
  40aca0:	mov	w5, #0x10                  	// #16
  40aca4:	mov	x29, sp
  40aca8:	stp	x25, x26, [sp, #64]
  40acac:	mov	x26, x0
  40acb0:	mov	w0, #0xc                   	// #12
  40acb4:	ldr	x4, [x1]
  40acb8:	stp	x19, x20, [sp, #16]
  40acbc:	ldr	w19, [x26, #28]
  40acc0:	stp	x23, x24, [sp, #48]
  40acc4:	add	w19, w19, #0x1
  40acc8:	stp	x27, x28, [sp, #80]
  40accc:	stp	xzr, xzr, [sp, #160]
  40acd0:	stp	xzr, xzr, [sp, #176]
  40acd4:	str	w19, [x26, #28]
  40acd8:	str	xzr, [sp, #120]
  40acdc:	str	wzr, [sp, #128]
  40ace0:	str	w0, [sp, #160]
  40ace4:	add	x0, sp, #0x78
  40ace8:	stp	x1, x6, [sp, #168]
  40acec:	and	w1, w3, #0xff
  40acf0:	stp	xzr, xzr, [sp, #192]
  40acf4:	str	w19, [x4, #8]
  40acf8:	str	x2, [sp, #96]
  40acfc:	str	w1, [sp, #108]
  40ad00:	strh	w5, [sp, #120]
  40ad04:	str	x0, [sp, #152]
  40ad08:	cbnz	x2, 40ad18 <nl_dump_ext_ack@@Base+0x88>
  40ad0c:	ldrh	w0, [x4, #6]
  40ad10:	orr	w0, w0, #0x4
  40ad14:	strh	w0, [x4, #6]
  40ad18:	ldr	w0, [x26]
  40ad1c:	add	x24, sp, #0x98
  40ad20:	mov	x1, x24
  40ad24:	mov	w2, #0x0                   	// #0
  40ad28:	bl	404d10 <sendmsg@plt>
  40ad2c:	tbnz	w0, #31, 40b064 <nl_dump_ext_ack@@Base+0x3d4>
  40ad30:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13c90>
  40ad34:	mov	w20, w19
  40ad38:	sub	x20, x20, #0x1
  40ad3c:	add	x25, sp, #0x70
  40ad40:	ldr	x23, [x1, #3992]
  40ad44:	add	x0, sp, #0x88
  40ad48:	mov	x1, #0x1                   	// #1
  40ad4c:	stp	x21, x22, [sp, #32]
  40ad50:	str	wzr, [sp, #104]
  40ad54:	stp	x0, x1, [sp, #168]
  40ad58:	ldr	w0, [x26]
  40ad5c:	mov	x2, x25
  40ad60:	mov	x1, x24
  40ad64:	bl	40abd0 <jsonw_null_field@@Base+0x100>
  40ad68:	mov	w28, w0
  40ad6c:	tbnz	w0, #31, 40afe0 <nl_dump_ext_ack@@Base+0x350>
  40ad70:	ldr	w2, [sp, #160]
  40ad74:	cmp	w2, #0xc
  40ad78:	b.ne	40b09c <nl_dump_ext_ack@@Base+0x40c>  // b.any
  40ad7c:	ldr	x27, [sp, #112]
  40ad80:	mov	w21, w0
  40ad84:	cmp	w0, #0xf
  40ad88:	mov	x0, x27
  40ad8c:	b.le	40ae30 <nl_dump_ext_ack@@Base+0x1a0>
  40ad90:	ldr	w28, [x27]
  40ad94:	subs	w3, w28, #0x10
  40ad98:	ccmp	w28, w21, #0x0, pl  // pl = nfrst
  40ad9c:	b.gt	40ae80 <nl_dump_ext_ack@@Base+0x1f0>
  40ada0:	ldr	x1, [sp, #96]
  40ada4:	cbnz	x1, 40af68 <nl_dump_ext_ack@@Base+0x2d8>
  40ada8:	adrp	x22, 40d000 <rta_addattr_l@@Base+0x98>
  40adac:	b	40adc0 <nl_dump_ext_ack@@Base+0x130>
  40adb0:	ldr	w28, [x27]
  40adb4:	subs	w3, w28, #0x10
  40adb8:	ccmp	w21, w28, #0x1, pl  // pl = nfrst
  40adbc:	b.lt	40ae80 <nl_dump_ext_ack@@Base+0x1f0>  // b.tstop
  40adc0:	ldr	w1, [sp, #124]
  40adc4:	cbnz	w1, 40ae10 <nl_dump_ext_ack@@Base+0x180>
  40adc8:	ldr	w2, [x26, #8]
  40adcc:	ldr	w1, [x27, #12]
  40add0:	cmp	w2, w1
  40add4:	b.ne	40ae10 <nl_dump_ext_ack@@Base+0x180>  // b.any
  40add8:	ldr	w1, [x27, #8]
  40addc:	cmp	w1, w19
  40ade0:	b.hi	40ae10 <nl_dump_ext_ack@@Base+0x180>  // b.pmore
  40ade4:	cmp	x20, w1, uxtw
  40ade8:	b.hi	40ae10 <nl_dump_ext_ack@@Base+0x180>  // b.pmore
  40adec:	ldrh	w0, [x27, #4]
  40adf0:	cmp	w0, #0x2
  40adf4:	b.eq	40aefc <nl_dump_ext_ack@@Base+0x26c>  // b.none
  40adf8:	ldr	x3, [x23]
  40adfc:	add	x0, x22, #0xed8
  40ae00:	mov	x2, #0x14                  	// #20
  40ae04:	mov	x1, #0x1                   	// #1
  40ae08:	bl	404eb0 <fwrite@plt>
  40ae0c:	nop
  40ae10:	add	w4, w28, #0x3
  40ae14:	and	w4, w4, #0xfffffffc
  40ae18:	sub	w21, w21, w4
  40ae1c:	add	x27, x27, w4, uxtw
  40ae20:	mov	w28, w21
  40ae24:	cmp	w21, #0xf
  40ae28:	b.hi	40adb0 <nl_dump_ext_ack@@Base+0x120>  // b.pmore
  40ae2c:	ldr	x0, [sp, #112]
  40ae30:	bl	404e50 <free@plt>
  40ae34:	ldr	w0, [sp, #200]
  40ae38:	tbnz	w0, #5, 40aed4 <nl_dump_ext_ack@@Base+0x244>
  40ae3c:	cbnz	w28, 40b078 <nl_dump_ext_ack@@Base+0x3e8>
  40ae40:	ldr	w0, [sp, #104]
  40ae44:	add	w0, w0, #0x1
  40ae48:	str	w0, [sp, #104]
  40ae4c:	b	40ad58 <nl_dump_ext_ack@@Base+0xc8>
  40ae50:	add	w1, w28, #0x3
  40ae54:	and	w1, w1, #0xfffffffc
  40ae58:	sub	w21, w21, w1
  40ae5c:	cmp	w21, #0xf
  40ae60:	add	x6, x6, w1, uxtw
  40ae64:	mov	w28, w21
  40ae68:	b.ls	40ae30 <nl_dump_ext_ack@@Base+0x1a0>  // b.plast
  40ae6c:	ldr	w28, [x6]
  40ae70:	subs	w3, w28, #0x10
  40ae74:	ccmp	w28, w21, #0x0, pl  // pl = nfrst
  40ae78:	b.le	40af70 <nl_dump_ext_ack@@Base+0x2e0>
  40ae7c:	nop
  40ae80:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40ae84:	ldr	w1, [sp, #200]
  40ae88:	ldr	x0, [x0, #3992]
  40ae8c:	ldr	x3, [x0]
  40ae90:	tbz	w1, #5, 40b0ac <nl_dump_ext_ack@@Base+0x41c>
  40ae94:	mov	x2, #0x12                  	// #18
  40ae98:	mov	x1, #0x1                   	// #1
  40ae9c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40aea0:	add	x0, x0, #0xea0
  40aea4:	bl	404eb0 <fwrite@plt>
  40aea8:	mov	w28, #0xffffffff            	// #-1
  40aeac:	ldr	x0, [sp, #112]
  40aeb0:	bl	404e50 <free@plt>
  40aeb4:	ldp	x21, x22, [sp, #32]
  40aeb8:	mov	w0, w28
  40aebc:	ldp	x19, x20, [sp, #16]
  40aec0:	ldp	x23, x24, [sp, #48]
  40aec4:	ldp	x25, x26, [sp, #64]
  40aec8:	ldp	x27, x28, [sp, #80]
  40aecc:	ldp	x29, x30, [sp], #208
  40aed0:	ret
  40aed4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40aed8:	mov	x2, #0x12                  	// #18
  40aedc:	mov	x1, #0x1                   	// #1
  40aee0:	ldr	x3, [x0, #3992]
  40aee4:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40aee8:	add	x0, x0, #0xf20
  40aeec:	ldr	x3, [x3]
  40aef0:	bl	404eb0 <fwrite@plt>
  40aef4:	b	40ae40 <nl_dump_ext_ack@@Base+0x1b0>
  40aef8:	mov	x27, x6
  40aefc:	ldr	w28, [x27, #16]
  40af00:	cmp	w3, #0x13
  40af04:	b.ls	40b030 <nl_dump_ext_ack@@Base+0x3a0>  // b.plast
  40af08:	cbz	w28, 40afd0 <nl_dump_ext_ack@@Base+0x340>
  40af0c:	bl	404fd0 <__errno_location@plt>
  40af10:	neg	w1, w28
  40af14:	str	w1, [x0]
  40af18:	ldr	w2, [sp, #108]
  40af1c:	ldr	w0, [x26, #36]
  40af20:	cmp	w2, #0x0
  40af24:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  40af28:	b.ne	40aff0 <nl_dump_ext_ack@@Base+0x360>  // b.any
  40af2c:	ldr	x1, [sp, #96]
  40af30:	ldr	x0, [sp, #112]
  40af34:	cbz	x1, 40afe8 <nl_dump_ext_ack@@Base+0x358>
  40af38:	str	x0, [x1]
  40af3c:	ldr	w0, [sp, #104]
  40af40:	cmp	w28, #0x0
  40af44:	ldp	x19, x20, [sp, #16]
  40af48:	csinv	w28, w28, w0, eq  // eq = none
  40af4c:	mov	w0, w28
  40af50:	ldp	x21, x22, [sp, #32]
  40af54:	ldp	x23, x24, [sp, #48]
  40af58:	ldp	x25, x26, [sp, #64]
  40af5c:	ldp	x27, x28, [sp, #80]
  40af60:	ldp	x29, x30, [sp], #208
  40af64:	ret
  40af68:	ldr	w8, [sp, #124]
  40af6c:	mov	x6, x27
  40af70:	cbnz	w8, 40ae50 <nl_dump_ext_ack@@Base+0x1c0>
  40af74:	ldr	w2, [x6, #12]
  40af78:	ldr	w1, [x26, #8]
  40af7c:	cmp	w2, w1
  40af80:	b.ne	40ae50 <nl_dump_ext_ack@@Base+0x1c0>  // b.any
  40af84:	ldr	w1, [x6, #8]
  40af88:	cmp	w19, w1
  40af8c:	b.cc	40ae50 <nl_dump_ext_ack@@Base+0x1c0>  // b.lo, b.ul, b.last
  40af90:	cmp	x20, w1, uxtw
  40af94:	b.hi	40ae50 <nl_dump_ext_ack@@Base+0x1c0>  // b.pmore
  40af98:	ldrh	w1, [x6, #4]
  40af9c:	cmp	w1, #0x2
  40afa0:	b.eq	40aef8 <nl_dump_ext_ack@@Base+0x268>  // b.none
  40afa4:	ldr	x1, [sp, #96]
  40afa8:	mov	w28, #0x0                   	// #0
  40afac:	ldp	x21, x22, [sp, #32]
  40afb0:	str	x0, [x1]
  40afb4:	mov	w0, w28
  40afb8:	ldp	x19, x20, [sp, #16]
  40afbc:	ldp	x23, x24, [sp, #48]
  40afc0:	ldp	x25, x26, [sp, #64]
  40afc4:	ldp	x27, x28, [sp, #80]
  40afc8:	ldp	x29, x30, [sp], #208
  40afcc:	ret
  40afd0:	mov	x0, x27
  40afd4:	mov	x1, #0x0                   	// #0
  40afd8:	bl	40ac90 <nl_dump_ext_ack@@Base>
  40afdc:	b	40af2c <nl_dump_ext_ack@@Base+0x29c>
  40afe0:	ldp	x21, x22, [sp, #32]
  40afe4:	b	40aeb8 <nl_dump_ext_ack@@Base+0x228>
  40afe8:	bl	404e50 <free@plt>
  40afec:	b	40af3c <nl_dump_ext_ack@@Base+0x2ac>
  40aff0:	mov	x0, x27
  40aff4:	mov	x1, #0x0                   	// #0
  40aff8:	bl	40ac90 <nl_dump_ext_ack@@Base>
  40affc:	cbnz	w0, 40af2c <nl_dump_ext_ack@@Base+0x29c>
  40b000:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13c90>
  40b004:	ldr	w0, [x27, #16]
  40b008:	ldr	x1, [x1, #3992]
  40b00c:	neg	w0, w0
  40b010:	ldr	x19, [x1]
  40b014:	bl	404d70 <strerror@plt>
  40b018:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40b01c:	mov	x2, x0
  40b020:	add	x1, x1, #0xf08
  40b024:	mov	x0, x19
  40b028:	bl	405020 <fprintf@plt>
  40b02c:	b	40af2c <nl_dump_ext_ack@@Base+0x29c>
  40b030:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40b034:	mov	x2, #0x10                  	// #16
  40b038:	mov	x1, #0x1                   	// #1
  40b03c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40b040:	ldr	x3, [x3, #3992]
  40b044:	add	x0, x0, #0xef0
  40b048:	mov	w28, #0xffffffff            	// #-1
  40b04c:	ldr	x3, [x3]
  40b050:	bl	404eb0 <fwrite@plt>
  40b054:	ldr	x0, [sp, #112]
  40b058:	bl	404e50 <free@plt>
  40b05c:	ldp	x21, x22, [sp, #32]
  40b060:	b	40aeb8 <nl_dump_ext_ack@@Base+0x228>
  40b064:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40b068:	mov	w28, #0xffffffff            	// #-1
  40b06c:	add	x0, x0, #0xe60
  40b070:	bl	404b80 <perror@plt>
  40b074:	b	40aeb8 <nl_dump_ext_ack@@Base+0x228>
  40b078:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40b07c:	mov	w2, w28
  40b080:	add	x1, x1, #0xf38
  40b084:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40b088:	ldr	x0, [x0, #3992]
  40b08c:	ldr	x0, [x0]
  40b090:	bl	405020 <fprintf@plt>
  40b094:	mov	w0, #0x1                   	// #1
  40b098:	bl	404b70 <exit@plt>
  40b09c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40b0a0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40b0a4:	add	x1, x1, #0xe80
  40b0a8:	b	40b088 <nl_dump_ext_ack@@Base+0x3f8>
  40b0ac:	mov	w2, w28
  40b0b0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40b0b4:	add	x1, x1, #0xeb8
  40b0b8:	mov	x0, x3
  40b0bc:	bl	405020 <fprintf@plt>
  40b0c0:	mov	w0, #0x1                   	// #1
  40b0c4:	bl	404b70 <exit@plt>

000000000040b0c8 <nl_dump_ext_ack_done@@Base>:
  40b0c8:	mov	w0, #0x0                   	// #0
  40b0cc:	ret

000000000040b0d0 <rtnl_set_strict_dump@@Base>:
  40b0d0:	stp	x29, x30, [sp, #-48]!
  40b0d4:	mov	w5, #0x1                   	// #1
  40b0d8:	mov	w4, #0x4                   	// #4
  40b0dc:	mov	x29, sp
  40b0e0:	str	x19, [sp, #16]
  40b0e4:	mov	x19, x0
  40b0e8:	ldr	w0, [x0]
  40b0ec:	add	x3, sp, #0x2c
  40b0f0:	mov	w2, #0xc                   	// #12
  40b0f4:	mov	w1, #0x10e                 	// #270
  40b0f8:	str	w5, [sp, #44]
  40b0fc:	bl	404ca0 <setsockopt@plt>
  40b100:	tbnz	w0, #31, 40b110 <rtnl_set_strict_dump@@Base+0x40>
  40b104:	ldr	w0, [x19, #48]
  40b108:	orr	w0, w0, #0x4
  40b10c:	str	w0, [x19, #48]
  40b110:	ldr	x19, [sp, #16]
  40b114:	ldp	x29, x30, [sp], #48
  40b118:	ret
  40b11c:	nop

000000000040b120 <rtnl_add_nl_group@@Base>:
  40b120:	stp	x29, x30, [sp, #-32]!
  40b124:	mov	w4, #0x4                   	// #4
  40b128:	mov	w2, #0x1                   	// #1
  40b12c:	mov	x29, sp
  40b130:	ldr	w0, [x0]
  40b134:	add	x3, sp, #0x1c
  40b138:	str	w1, [sp, #28]
  40b13c:	mov	w1, #0x10e                 	// #270
  40b140:	bl	404ca0 <setsockopt@plt>
  40b144:	ldp	x29, x30, [sp], #32
  40b148:	ret
  40b14c:	nop

000000000040b150 <rtnl_close@@Base>:
  40b150:	stp	x29, x30, [sp, #-32]!
  40b154:	mov	x29, sp
  40b158:	str	x19, [sp, #16]
  40b15c:	mov	x19, x0
  40b160:	ldr	w0, [x0]
  40b164:	tbnz	w0, #31, 40b174 <rtnl_close@@Base+0x24>
  40b168:	bl	404d80 <close@plt>
  40b16c:	mov	w0, #0xffffffff            	// #-1
  40b170:	str	w0, [x19]
  40b174:	ldr	x19, [sp, #16]
  40b178:	ldp	x29, x30, [sp], #32
  40b17c:	ret

000000000040b180 <rtnl_open_byproto@@Base>:
  40b180:	stp	x29, x30, [sp, #-64]!
  40b184:	mov	w3, #0x8000                	// #32768
  40b188:	mov	x29, sp
  40b18c:	stp	x19, x20, [sp, #16]
  40b190:	mov	x19, x0
  40b194:	mov	w20, #0x1                   	// #1
  40b198:	str	x21, [sp, #32]
  40b19c:	mov	w21, w1
  40b1a0:	stp	xzr, xzr, [x0, #32]
  40b1a4:	mov	w1, #0x3                   	// #3
  40b1a8:	movk	w1, #0x8, lsl #16
  40b1ac:	stp	xzr, xzr, [x19]
  40b1b0:	mov	w0, #0x10                  	// #16
  40b1b4:	stp	xzr, xzr, [x19, #16]
  40b1b8:	str	w2, [x19, #36]
  40b1bc:	str	xzr, [x19, #48]
  40b1c0:	stp	w3, w20, [sp, #56]
  40b1c4:	bl	404ec0 <socket@plt>
  40b1c8:	str	w0, [x19]
  40b1cc:	tbnz	w0, #31, 40b2e4 <rtnl_open_byproto@@Base+0x164>
  40b1d0:	add	x3, sp, #0x38
  40b1d4:	mov	w1, w20
  40b1d8:	mov	w4, #0x4                   	// #4
  40b1dc:	mov	w2, #0x7                   	// #7
  40b1e0:	bl	404ca0 <setsockopt@plt>
  40b1e4:	tbnz	w0, #31, 40b2f8 <rtnl_open_byproto@@Base+0x178>
  40b1e8:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40b1ec:	ldr	w0, [x19]
  40b1f0:	mov	w1, w20
  40b1f4:	mov	w4, #0x4                   	// #4
  40b1f8:	ldr	x3, [x3, #4024]
  40b1fc:	mov	w2, #0x8                   	// #8
  40b200:	bl	404ca0 <setsockopt@plt>
  40b204:	tbnz	w0, #31, 40b30c <rtnl_open_byproto@@Base+0x18c>
  40b208:	mov	x20, x19
  40b20c:	mov	w2, #0xb                   	// #11
  40b210:	mov	w1, #0x10e                 	// #270
  40b214:	add	x3, sp, #0x3c
  40b218:	mov	w4, #0x4                   	// #4
  40b21c:	ldr	w0, [x20], #4
  40b220:	bl	404ca0 <setsockopt@plt>
  40b224:	stur	wzr, [x19, #6]
  40b228:	ldr	w0, [x19]
  40b22c:	mov	w2, #0x10                  	// #16
  40b230:	strh	w2, [x19, #4]
  40b234:	mov	x1, x20
  40b238:	strh	wzr, [x19, #10]
  40b23c:	mov	w2, #0xc                   	// #12
  40b240:	str	w21, [x19, #12]
  40b244:	bl	404bd0 <bind@plt>
  40b248:	tbnz	w0, #31, 40b320 <rtnl_open_byproto@@Base+0x1a0>
  40b24c:	ldr	w0, [x19]
  40b250:	mov	w3, #0xc                   	// #12
  40b254:	mov	x1, x20
  40b258:	add	x2, sp, #0x34
  40b25c:	str	w3, [sp, #52]
  40b260:	bl	405010 <getsockname@plt>
  40b264:	tbnz	w0, #31, 40b334 <rtnl_open_byproto@@Base+0x1b4>
  40b268:	ldr	w2, [sp, #52]
  40b26c:	cmp	w2, #0xc
  40b270:	b.ne	40b2c4 <rtnl_open_byproto@@Base+0x144>  // b.any
  40b274:	ldrh	w2, [x19, #4]
  40b278:	cmp	w2, #0x10
  40b27c:	b.ne	40b2a4 <rtnl_open_byproto@@Base+0x124>  // b.any
  40b280:	mov	x0, #0x0                   	// #0
  40b284:	bl	404c80 <time@plt>
  40b288:	mov	x1, x0
  40b28c:	mov	w0, #0x0                   	// #0
  40b290:	str	w1, [x19, #28]
  40b294:	ldp	x19, x20, [sp, #16]
  40b298:	ldr	x21, [sp, #32]
  40b29c:	ldp	x29, x30, [sp], #64
  40b2a0:	ret
  40b2a4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40b2a8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40b2ac:	add	x1, x1, #0xfe8
  40b2b0:	ldr	x0, [x0, #3992]
  40b2b4:	ldr	x0, [x0]
  40b2b8:	bl	405020 <fprintf@plt>
  40b2bc:	mov	w0, #0xffffffff            	// #-1
  40b2c0:	b	40b294 <rtnl_open_byproto@@Base+0x114>
  40b2c4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40b2c8:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40b2cc:	add	x1, x1, #0xfc8
  40b2d0:	ldr	x0, [x0, #3992]
  40b2d4:	ldr	x0, [x0]
  40b2d8:	bl	405020 <fprintf@plt>
  40b2dc:	mov	w0, #0xffffffff            	// #-1
  40b2e0:	b	40b294 <rtnl_open_byproto@@Base+0x114>
  40b2e4:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40b2e8:	add	x0, x0, #0xf50
  40b2ec:	bl	404b80 <perror@plt>
  40b2f0:	mov	w0, #0xffffffff            	// #-1
  40b2f4:	b	40b294 <rtnl_open_byproto@@Base+0x114>
  40b2f8:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40b2fc:	add	x0, x0, #0xf70
  40b300:	bl	404b80 <perror@plt>
  40b304:	mov	w0, #0xffffffff            	// #-1
  40b308:	b	40b294 <rtnl_open_byproto@@Base+0x114>
  40b30c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40b310:	add	x0, x0, #0xf80
  40b314:	bl	404b80 <perror@plt>
  40b318:	mov	w0, #0xffffffff            	// #-1
  40b31c:	b	40b294 <rtnl_open_byproto@@Base+0x114>
  40b320:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40b324:	add	x0, x0, #0xf90
  40b328:	bl	404b80 <perror@plt>
  40b32c:	mov	w0, #0xffffffff            	// #-1
  40b330:	b	40b294 <rtnl_open_byproto@@Base+0x114>
  40b334:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40b338:	add	x0, x0, #0xfb0
  40b33c:	bl	404b80 <perror@plt>
  40b340:	mov	w0, #0xffffffff            	// #-1
  40b344:	b	40b294 <rtnl_open_byproto@@Base+0x114>

000000000040b348 <rtnl_open@@Base>:
  40b348:	mov	w2, #0x0                   	// #0
  40b34c:	b	40b180 <rtnl_open_byproto@@Base>

000000000040b350 <rtnl_nexthopdump_req@@Base>:
  40b350:	stp	x29, x30, [sp, #-192]!
  40b354:	mov	x29, sp
  40b358:	stp	x19, x20, [sp, #16]
  40b35c:	mov	x19, x0
  40b360:	mov	x0, #0x18                  	// #24
  40b364:	stp	xzr, xzr, [sp, #48]
  40b368:	movk	x0, #0x6a, lsl #32
  40b36c:	ldr	w3, [x19, #28]
  40b370:	strb	w1, [sp, #56]
  40b374:	movk	x0, #0x301, lsl #48
  40b378:	add	w1, w3, #0x1
  40b37c:	str	x0, [sp, #40]
  40b380:	str	w1, [sp, #48]
  40b384:	add	x20, sp, #0x28
  40b388:	dup	v0.2s, w1
  40b38c:	stp	xzr, xzr, [sp, #64]
  40b390:	stp	xzr, xzr, [sp, #80]
  40b394:	stp	xzr, xzr, [sp, #96]
  40b398:	stp	xzr, xzr, [sp, #112]
  40b39c:	stp	xzr, xzr, [sp, #128]
  40b3a0:	stp	xzr, xzr, [sp, #144]
  40b3a4:	stp	xzr, xzr, [sp, #160]
  40b3a8:	stp	xzr, xzr, [sp, #176]
  40b3ac:	stur	d0, [x19, #28]
  40b3b0:	cbz	x2, 40b3c4 <rtnl_nexthopdump_req@@Base+0x74>
  40b3b4:	mov	x0, x20
  40b3b8:	mov	w1, #0x98                  	// #152
  40b3bc:	blr	x2
  40b3c0:	cbnz	w0, 40b3d8 <rtnl_nexthopdump_req@@Base+0x88>
  40b3c4:	ldr	w0, [x19]
  40b3c8:	mov	x1, x20
  40b3cc:	mov	w3, #0x0                   	// #0
  40b3d0:	mov	x2, #0x98                  	// #152
  40b3d4:	bl	404e70 <send@plt>
  40b3d8:	ldp	x19, x20, [sp, #16]
  40b3dc:	ldp	x29, x30, [sp], #192
  40b3e0:	ret
  40b3e4:	nop

000000000040b3e8 <rtnl_addrdump_req@@Base>:
  40b3e8:	stp	x29, x30, [sp, #-192]!
  40b3ec:	mov	x29, sp
  40b3f0:	stp	x19, x20, [sp, #16]
  40b3f4:	mov	x19, x0
  40b3f8:	mov	x0, #0x18                  	// #24
  40b3fc:	stp	xzr, xzr, [sp, #48]
  40b400:	movk	x0, #0x16, lsl #32
  40b404:	ldr	w3, [x19, #28]
  40b408:	strb	w1, [sp, #56]
  40b40c:	movk	x0, #0x301, lsl #48
  40b410:	add	w1, w3, #0x1
  40b414:	str	x0, [sp, #40]
  40b418:	str	w1, [sp, #48]
  40b41c:	add	x20, sp, #0x28
  40b420:	dup	v0.2s, w1
  40b424:	stp	xzr, xzr, [sp, #64]
  40b428:	stp	xzr, xzr, [sp, #80]
  40b42c:	stp	xzr, xzr, [sp, #96]
  40b430:	stp	xzr, xzr, [sp, #112]
  40b434:	stp	xzr, xzr, [sp, #128]
  40b438:	stp	xzr, xzr, [sp, #144]
  40b43c:	stp	xzr, xzr, [sp, #160]
  40b440:	stp	xzr, xzr, [sp, #176]
  40b444:	stur	d0, [x19, #28]
  40b448:	cbz	x2, 40b45c <rtnl_addrdump_req@@Base+0x74>
  40b44c:	mov	x0, x20
  40b450:	mov	w1, #0x98                  	// #152
  40b454:	blr	x2
  40b458:	cbnz	w0, 40b470 <rtnl_addrdump_req@@Base+0x88>
  40b45c:	ldr	w0, [x19]
  40b460:	mov	x1, x20
  40b464:	mov	w3, #0x0                   	// #0
  40b468:	mov	x2, #0x98                  	// #152
  40b46c:	bl	404e70 <send@plt>
  40b470:	ldp	x19, x20, [sp, #16]
  40b474:	ldp	x29, x30, [sp], #192
  40b478:	ret
  40b47c:	nop

000000000040b480 <rtnl_addrlbldump_req@@Base>:
  40b480:	mov	x5, x0
  40b484:	stp	x29, x30, [sp, #-48]!
  40b488:	mov	x7, #0x1c                  	// #28
  40b48c:	mov	x29, sp
  40b490:	ldr	w4, [x5, #28]
  40b494:	mov	w6, w1
  40b498:	ldr	w0, [x0]
  40b49c:	movk	x7, #0x4a, lsl #32
  40b4a0:	add	w4, w4, #0x1
  40b4a4:	movk	x7, #0x301, lsl #48
  40b4a8:	stp	xzr, xzr, [sp, #24]
  40b4ac:	add	x1, sp, #0x10
  40b4b0:	dup	v0.2s, w4
  40b4b4:	mov	w3, #0x0                   	// #0
  40b4b8:	mov	x2, #0x1c                  	// #28
  40b4bc:	str	x7, [sp, #16]
  40b4c0:	str	w4, [sp, #24]
  40b4c4:	stur	d0, [x5, #28]
  40b4c8:	strb	w6, [sp, #32]
  40b4cc:	str	wzr, [sp, #40]
  40b4d0:	bl	404e70 <send@plt>
  40b4d4:	ldp	x29, x30, [sp], #48
  40b4d8:	ret
  40b4dc:	nop

000000000040b4e0 <rtnl_routedump_req@@Base>:
  40b4e0:	stp	x29, x30, [sp, #-192]!
  40b4e4:	mov	x29, sp
  40b4e8:	stp	x19, x20, [sp, #16]
  40b4ec:	mov	x19, x0
  40b4f0:	mov	x0, #0x1c                  	// #28
  40b4f4:	stp	xzr, xzr, [sp, #40]
  40b4f8:	movk	x0, #0x1a, lsl #32
  40b4fc:	ldr	w3, [x19, #28]
  40b500:	strb	w1, [sp, #48]
  40b504:	movk	x0, #0x301, lsl #48
  40b508:	add	w1, w3, #0x1
  40b50c:	str	x0, [sp, #32]
  40b510:	str	w1, [sp, #40]
  40b514:	add	x20, sp, #0x20
  40b518:	dup	v0.2s, w1
  40b51c:	stp	xzr, xzr, [sp, #56]
  40b520:	stp	xzr, xzr, [sp, #72]
  40b524:	stp	xzr, xzr, [sp, #88]
  40b528:	stp	xzr, xzr, [sp, #104]
  40b52c:	stp	xzr, xzr, [sp, #120]
  40b530:	stp	xzr, xzr, [sp, #136]
  40b534:	stp	xzr, xzr, [sp, #152]
  40b538:	stp	xzr, xzr, [sp, #168]
  40b53c:	str	wzr, [sp, #184]
  40b540:	stur	d0, [x19, #28]
  40b544:	cbz	x2, 40b558 <rtnl_routedump_req@@Base+0x78>
  40b548:	mov	x0, x20
  40b54c:	mov	w1, #0x9c                  	// #156
  40b550:	blr	x2
  40b554:	cbnz	w0, 40b56c <rtnl_routedump_req@@Base+0x8c>
  40b558:	ldr	w0, [x19]
  40b55c:	mov	x1, x20
  40b560:	mov	w3, #0x0                   	// #0
  40b564:	mov	x2, #0x9c                  	// #156
  40b568:	bl	404e70 <send@plt>
  40b56c:	ldp	x19, x20, [sp, #16]
  40b570:	ldp	x29, x30, [sp], #192
  40b574:	ret

000000000040b578 <rtnl_ruledump_req@@Base>:
  40b578:	mov	x5, x0
  40b57c:	stp	x29, x30, [sp, #-48]!
  40b580:	mov	x7, #0x1c                  	// #28
  40b584:	mov	x29, sp
  40b588:	ldr	w4, [x5, #28]
  40b58c:	mov	w6, w1
  40b590:	ldr	w0, [x0]
  40b594:	movk	x7, #0x22, lsl #32
  40b598:	add	w4, w4, #0x1
  40b59c:	movk	x7, #0x301, lsl #48
  40b5a0:	stp	xzr, xzr, [sp, #24]
  40b5a4:	add	x1, sp, #0x10
  40b5a8:	dup	v0.2s, w4
  40b5ac:	mov	w3, #0x0                   	// #0
  40b5b0:	mov	x2, #0x1c                  	// #28
  40b5b4:	str	x7, [sp, #16]
  40b5b8:	str	w4, [sp, #24]
  40b5bc:	stur	d0, [x5, #28]
  40b5c0:	strb	w6, [sp, #32]
  40b5c4:	str	wzr, [sp, #40]
  40b5c8:	bl	404e70 <send@plt>
  40b5cc:	ldp	x29, x30, [sp], #48
  40b5d0:	ret
  40b5d4:	nop

000000000040b5d8 <rtnl_neighdump_req@@Base>:
  40b5d8:	stp	x29, x30, [sp, #-336]!
  40b5dc:	mov	x29, sp
  40b5e0:	stp	x19, x20, [sp, #16]
  40b5e4:	mov	x19, x0
  40b5e8:	mov	x20, x2
  40b5ec:	stp	x21, x22, [sp, #32]
  40b5f0:	add	x22, sp, #0x30
  40b5f4:	mov	w21, w1
  40b5f8:	mov	x0, x22
  40b5fc:	mov	x2, #0x11c                 	// #284
  40b600:	mov	w1, #0x0                   	// #0
  40b604:	bl	404cf0 <memset@plt>
  40b608:	ldr	w3, [x19, #28]
  40b60c:	mov	x0, #0x1c                  	// #28
  40b610:	movk	x0, #0x1e, lsl #32
  40b614:	strb	w21, [sp, #64]
  40b618:	add	w3, w3, #0x1
  40b61c:	movk	x0, #0x301, lsl #48
  40b620:	str	x0, [sp, #48]
  40b624:	dup	v0.2s, w3
  40b628:	str	w3, [sp, #56]
  40b62c:	stur	d0, [x19, #28]
  40b630:	cbz	x20, 40b644 <rtnl_neighdump_req@@Base+0x6c>
  40b634:	mov	x0, x22
  40b638:	mov	w1, #0x11c                 	// #284
  40b63c:	blr	x20
  40b640:	cbnz	w0, 40b658 <rtnl_neighdump_req@@Base+0x80>
  40b644:	ldr	w0, [x19]
  40b648:	mov	x1, x22
  40b64c:	mov	w3, #0x0                   	// #0
  40b650:	mov	x2, #0x11c                 	// #284
  40b654:	bl	404e70 <send@plt>
  40b658:	ldp	x19, x20, [sp, #16]
  40b65c:	ldp	x21, x22, [sp, #32]
  40b660:	ldp	x29, x30, [sp], #336
  40b664:	ret

000000000040b668 <rtnl_neightbldump_req@@Base>:
  40b668:	mov	x5, x0
  40b66c:	stp	x29, x30, [sp, #-48]!
  40b670:	mov	x7, #0x14                  	// #20
  40b674:	mov	x29, sp
  40b678:	ldr	w4, [x5, #28]
  40b67c:	mov	w6, w1
  40b680:	ldr	w0, [x0]
  40b684:	movk	x7, #0x42, lsl #32
  40b688:	add	w4, w4, #0x1
  40b68c:	movk	x7, #0x301, lsl #48
  40b690:	stur	xzr, [sp, #36]
  40b694:	add	x1, sp, #0x18
  40b698:	dup	v0.2s, w4
  40b69c:	mov	w3, #0x0                   	// #0
  40b6a0:	mov	x2, #0x14                  	// #20
  40b6a4:	str	x7, [sp, #24]
  40b6a8:	str	w4, [sp, #32]
  40b6ac:	strb	w6, [sp, #40]
  40b6b0:	stur	d0, [x5, #28]
  40b6b4:	bl	404e70 <send@plt>
  40b6b8:	ldp	x29, x30, [sp], #48
  40b6bc:	ret

000000000040b6c0 <rtnl_mdbdump_req@@Base>:
  40b6c0:	mov	x5, x0
  40b6c4:	stp	x29, x30, [sp, #-48]!
  40b6c8:	mov	x7, #0x18                  	// #24
  40b6cc:	mov	x29, sp
  40b6d0:	ldr	w4, [x5, #28]
  40b6d4:	mov	w6, w1
  40b6d8:	ldr	w0, [x0]
  40b6dc:	movk	x7, #0x56, lsl #32
  40b6e0:	add	w4, w4, #0x1
  40b6e4:	movk	x7, #0x301, lsl #48
  40b6e8:	stp	xzr, xzr, [sp, #32]
  40b6ec:	mov	x2, #0x18                  	// #24
  40b6f0:	dup	v0.2s, w4
  40b6f4:	add	x1, sp, x2
  40b6f8:	mov	w3, #0x0                   	// #0
  40b6fc:	str	x7, [sp, #24]
  40b700:	str	w4, [sp, #32]
  40b704:	stur	d0, [x5, #28]
  40b708:	strb	w6, [sp, #40]
  40b70c:	bl	404e70 <send@plt>
  40b710:	ldp	x29, x30, [sp], #48
  40b714:	ret

000000000040b718 <rtnl_netconfdump_req@@Base>:
  40b718:	mov	x5, x0
  40b71c:	stp	x29, x30, [sp, #-48]!
  40b720:	mov	x7, #0x14                  	// #20
  40b724:	mov	x29, sp
  40b728:	ldr	w4, [x5, #28]
  40b72c:	mov	w6, w1
  40b730:	ldr	w0, [x0]
  40b734:	movk	x7, #0x52, lsl #32
  40b738:	add	w4, w4, #0x1
  40b73c:	movk	x7, #0x301, lsl #48
  40b740:	stur	xzr, [sp, #36]
  40b744:	add	x1, sp, #0x18
  40b748:	dup	v0.2s, w4
  40b74c:	mov	w3, #0x0                   	// #0
  40b750:	mov	x2, #0x14                  	// #20
  40b754:	str	x7, [sp, #24]
  40b758:	str	w4, [sp, #32]
  40b75c:	strb	w6, [sp, #40]
  40b760:	stur	d0, [x5, #28]
  40b764:	bl	404e70 <send@plt>
  40b768:	ldp	x29, x30, [sp], #48
  40b76c:	ret

000000000040b770 <rtnl_nsiddump_req_filter_fn@@Base>:
  40b770:	sub	sp, sp, #0x450
  40b774:	stp	x29, x30, [sp]
  40b778:	mov	x29, sp
  40b77c:	stp	x19, x20, [sp, #16]
  40b780:	mov	x19, x0
  40b784:	mov	x20, x2
  40b788:	stp	x21, x22, [sp, #32]
  40b78c:	add	x22, sp, #0x38
  40b790:	mov	w21, w1
  40b794:	mov	x0, x22
  40b798:	mov	x2, #0x414                 	// #1044
  40b79c:	mov	w1, #0x0                   	// #0
  40b7a0:	bl	404cf0 <memset@plt>
  40b7a4:	ldr	w3, [x19, #28]
  40b7a8:	mov	x0, #0x14                  	// #20
  40b7ac:	movk	x0, #0x5a, lsl #32
  40b7b0:	strb	w21, [sp, #72]
  40b7b4:	add	w3, w3, #0x1
  40b7b8:	movk	x0, #0x301, lsl #48
  40b7bc:	str	x0, [sp, #56]
  40b7c0:	dup	v0.2s, w3
  40b7c4:	str	w3, [sp, #64]
  40b7c8:	stur	d0, [x19, #28]
  40b7cc:	cbz	x20, 40b808 <rtnl_nsiddump_req_filter_fn@@Base+0x98>
  40b7d0:	mov	x0, x22
  40b7d4:	mov	w1, #0x414                 	// #1044
  40b7d8:	blr	x20
  40b7dc:	cbnz	w0, 40b7f4 <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40b7e0:	ldr	w0, [x19]
  40b7e4:	mov	x1, x22
  40b7e8:	ldr	w2, [sp, #56]
  40b7ec:	mov	w3, #0x0                   	// #0
  40b7f0:	bl	404e70 <send@plt>
  40b7f4:	ldp	x29, x30, [sp]
  40b7f8:	ldp	x19, x20, [sp, #16]
  40b7fc:	ldp	x21, x22, [sp, #32]
  40b800:	add	sp, sp, #0x450
  40b804:	ret
  40b808:	mov	w0, #0xffffffea            	// #-22
  40b80c:	b	40b7f4 <rtnl_nsiddump_req_filter_fn@@Base+0x84>

000000000040b810 <rtnl_linkdump_req_filter@@Base>:
  40b810:	stp	x29, x30, [sp, #-64]!
  40b814:	cmp	w1, #0x0
  40b818:	mov	x5, x0
  40b81c:	mov	x29, sp
  40b820:	ldr	w6, [x0, #28]
  40b824:	ccmp	w1, #0x7, #0x4, ne  // ne = any
  40b828:	ldr	w0, [x0]
  40b82c:	and	w4, w1, #0xff
  40b830:	add	w6, w6, #0x1
  40b834:	b.eq	40b878 <rtnl_linkdump_req_filter@@Base+0x68>  // b.none
  40b838:	dup	v0.2s, w6
  40b83c:	mov	x7, #0x20                  	// #32
  40b840:	movk	x7, #0x12, lsl #32
  40b844:	stp	xzr, xzr, [sp, #32]
  40b848:	movk	x7, #0x301, lsl #48
  40b84c:	add	x1, sp, #0x18
  40b850:	mov	w3, #0x0                   	// #0
  40b854:	mov	x2, #0x20                  	// #32
  40b858:	str	x7, [sp, #24]
  40b85c:	stur	d0, [x5, #28]
  40b860:	str	w6, [sp, #32]
  40b864:	strb	w4, [sp, #40]
  40b868:	str	xzr, [sp, #48]
  40b86c:	bl	404e70 <send@plt>
  40b870:	ldp	x29, x30, [sp], #64
  40b874:	ret
  40b878:	dup	v0.2s, w6
  40b87c:	mov	x9, #0x28                  	// #40
  40b880:	mov	w7, w2
  40b884:	movk	x9, #0x12, lsl #32
  40b888:	mov	w8, #0x8                   	// #8
  40b88c:	movk	x9, #0x301, lsl #48
  40b890:	movk	w8, #0x1d, lsl #16
  40b894:	stp	xzr, xzr, [sp, #32]
  40b898:	add	x1, sp, #0x18
  40b89c:	mov	w3, #0x0                   	// #0
  40b8a0:	mov	x2, #0x28                  	// #40
  40b8a4:	str	x9, [sp, #24]
  40b8a8:	stur	d0, [x5, #28]
  40b8ac:	str	w6, [sp, #32]
  40b8b0:	strb	w4, [sp, #40]
  40b8b4:	str	xzr, [sp, #48]
  40b8b8:	stp	w8, w7, [sp, #56]
  40b8bc:	bl	404e70 <send@plt>
  40b8c0:	ldp	x29, x30, [sp], #64
  40b8c4:	ret

000000000040b8c8 <rtnl_linkdump_req@@Base>:
  40b8c8:	stp	x29, x30, [sp, #-48]!
  40b8cc:	mov	x29, sp
  40b8d0:	cbz	w1, 40b928 <rtnl_linkdump_req@@Base+0x60>
  40b8d4:	mov	x4, x0
  40b8d8:	mov	x7, #0x20                  	// #32
  40b8dc:	ldr	w0, [x0]
  40b8e0:	mov	w5, w1
  40b8e4:	movk	x7, #0x12, lsl #32
  40b8e8:	stp	xzr, xzr, [sp, #24]
  40b8ec:	ldr	w6, [x4, #28]
  40b8f0:	movk	x7, #0x301, lsl #48
  40b8f4:	add	x1, sp, #0x10
  40b8f8:	add	w6, w6, #0x1
  40b8fc:	mov	w3, #0x0                   	// #0
  40b900:	mov	x2, #0x20                  	// #32
  40b904:	str	x7, [sp, #16]
  40b908:	dup	v0.2s, w6
  40b90c:	str	w6, [sp, #24]
  40b910:	strb	w5, [sp, #32]
  40b914:	str	xzr, [sp, #40]
  40b918:	stur	d0, [x4, #28]
  40b91c:	bl	404e70 <send@plt>
  40b920:	ldp	x29, x30, [sp], #48
  40b924:	ret
  40b928:	mov	w2, #0x1                   	// #1
  40b92c:	bl	40b810 <rtnl_linkdump_req_filter@@Base>
  40b930:	ldp	x29, x30, [sp], #48
  40b934:	ret

000000000040b938 <rtnl_linkdump_req_filter_fn@@Base>:
  40b938:	sub	sp, sp, #0x460
  40b93c:	cmp	w1, #0x0
  40b940:	ccmp	w1, #0x11, #0x4, ne  // ne = any
  40b944:	stp	x29, x30, [sp]
  40b948:	mov	x29, sp
  40b94c:	stp	x19, x20, [sp, #16]
  40b950:	mov	x20, x0
  40b954:	and	w19, w1, #0xff
  40b958:	stp	x21, x22, [sp, #32]
  40b95c:	ldr	w21, [x0, #28]
  40b960:	add	w21, w21, #0x1
  40b964:	b.ne	40b9d0 <rtnl_linkdump_req_filter_fn@@Base+0x98>  // b.any
  40b968:	str	x23, [sp, #48]
  40b96c:	add	x23, sp, #0x40
  40b970:	mov	x22, x2
  40b974:	mov	x0, x23
  40b978:	mov	x2, #0x420                 	// #1056
  40b97c:	mov	w1, #0x0                   	// #0
  40b980:	bl	404cf0 <memset@plt>
  40b984:	str	w21, [sp, #72]
  40b988:	dup	v0.2s, w21
  40b98c:	mov	x0, #0x20                  	// #32
  40b990:	movk	x0, #0x12, lsl #32
  40b994:	strb	w19, [sp, #80]
  40b998:	movk	x0, #0x301, lsl #48
  40b99c:	str	x0, [sp, #64]
  40b9a0:	stur	d0, [x20, #28]
  40b9a4:	cbz	x22, 40ba4c <rtnl_linkdump_req_filter_fn@@Base+0x114>
  40b9a8:	mov	x0, x23
  40b9ac:	mov	w1, #0x420                 	// #1056
  40b9b0:	blr	x22
  40b9b4:	cbz	w0, 40ba20 <rtnl_linkdump_req_filter_fn@@Base+0xe8>
  40b9b8:	ldp	x29, x30, [sp]
  40b9bc:	ldp	x19, x20, [sp, #16]
  40b9c0:	ldp	x21, x22, [sp, #32]
  40b9c4:	ldr	x23, [sp, #48]
  40b9c8:	add	sp, sp, #0x460
  40b9cc:	ret
  40b9d0:	dup	v0.2s, w21
  40b9d4:	ldr	w0, [x0]
  40b9d8:	mov	x4, #0x20                  	// #32
  40b9dc:	stp	xzr, xzr, [sp, #72]
  40b9e0:	movk	x4, #0x12, lsl #32
  40b9e4:	movk	x4, #0x301, lsl #48
  40b9e8:	add	x1, sp, #0x40
  40b9ec:	mov	w3, #0x0                   	// #0
  40b9f0:	mov	x2, #0x20                  	// #32
  40b9f4:	stur	d0, [x20, #28]
  40b9f8:	str	x4, [sp, #64]
  40b9fc:	str	w21, [sp, #72]
  40ba00:	strb	w19, [sp, #80]
  40ba04:	str	xzr, [sp, #88]
  40ba08:	bl	404e70 <send@plt>
  40ba0c:	ldp	x29, x30, [sp]
  40ba10:	ldp	x19, x20, [sp, #16]
  40ba14:	ldp	x21, x22, [sp, #32]
  40ba18:	add	sp, sp, #0x460
  40ba1c:	ret
  40ba20:	ldr	w2, [sp, #64]
  40ba24:	mov	x1, x23
  40ba28:	ldr	w0, [x20]
  40ba2c:	mov	w3, #0x0                   	// #0
  40ba30:	bl	404e70 <send@plt>
  40ba34:	ldp	x29, x30, [sp]
  40ba38:	ldp	x19, x20, [sp, #16]
  40ba3c:	ldp	x21, x22, [sp, #32]
  40ba40:	ldr	x23, [sp, #48]
  40ba44:	add	sp, sp, #0x460
  40ba48:	ret
  40ba4c:	mov	w0, #0xffffffea            	// #-22
  40ba50:	ldp	x29, x30, [sp]
  40ba54:	ldp	x19, x20, [sp, #16]
  40ba58:	ldp	x21, x22, [sp, #32]
  40ba5c:	ldr	x23, [sp, #48]
  40ba60:	add	sp, sp, #0x460
  40ba64:	ret

000000000040ba68 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40ba68:	stp	x29, x30, [sp, #-192]!
  40ba6c:	mov	x5, #0x20                  	// #32
  40ba70:	movk	x5, #0x1e, lsl #32
  40ba74:	mov	x29, sp
  40ba78:	stp	x19, x20, [sp, #16]
  40ba7c:	mov	x19, x0
  40ba80:	movk	x5, #0x301, lsl #48
  40ba84:	stp	xzr, xzr, [sp, #40]
  40ba88:	mov	w4, #0x7                   	// #7
  40ba8c:	ldr	w2, [x19, #28]
  40ba90:	str	x5, [sp, #32]
  40ba94:	add	x20, sp, #0x20
  40ba98:	add	w2, w2, #0x1
  40ba9c:	str	w2, [sp, #40]
  40baa0:	strb	w4, [sp, #48]
  40baa4:	mov	x3, x1
  40baa8:	dup	v0.2s, w2
  40baac:	stp	xzr, xzr, [sp, #56]
  40bab0:	mov	x0, x20
  40bab4:	stp	xzr, xzr, [sp, #72]
  40bab8:	mov	w1, #0xa0                  	// #160
  40babc:	stp	xzr, xzr, [sp, #88]
  40bac0:	stp	xzr, xzr, [sp, #104]
  40bac4:	stp	xzr, xzr, [sp, #120]
  40bac8:	stp	xzr, xzr, [sp, #136]
  40bacc:	stp	xzr, xzr, [sp, #152]
  40bad0:	stp	xzr, xzr, [sp, #168]
  40bad4:	str	xzr, [sp, #184]
  40bad8:	stur	d0, [x19, #28]
  40badc:	blr	x3
  40bae0:	cbnz	w0, 40baf8 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x90>
  40bae4:	ldr	w0, [x19]
  40bae8:	mov	x1, x20
  40baec:	mov	w3, #0x0                   	// #0
  40baf0:	mov	x2, #0xa0                  	// #160
  40baf4:	bl	404e70 <send@plt>
  40baf8:	ldp	x19, x20, [sp, #16]
  40bafc:	ldp	x29, x30, [sp], #192
  40bb00:	ret
  40bb04:	nop

000000000040bb08 <rtnl_statsdump_req_filter@@Base>:
  40bb08:	mov	x5, x0
  40bb0c:	stp	x29, x30, [sp, #-48]!
  40bb10:	mov	x8, #0x1c                  	// #28
  40bb14:	mov	x29, sp
  40bb18:	ldr	w4, [x5, #28]
  40bb1c:	mov	w7, w1
  40bb20:	ldr	w0, [x0]
  40bb24:	mov	w6, w2
  40bb28:	add	w4, w4, #0x1
  40bb2c:	movk	x8, #0x5e, lsl #32
  40bb30:	movk	x8, #0x301, lsl #48
  40bb34:	stp	xzr, xzr, [sp, #24]
  40bb38:	dup	v0.2s, w4
  40bb3c:	add	x1, sp, #0x10
  40bb40:	mov	w3, #0x0                   	// #0
  40bb44:	mov	x2, #0x1c                  	// #28
  40bb48:	str	x8, [sp, #16]
  40bb4c:	str	w4, [sp, #24]
  40bb50:	stur	d0, [x5, #28]
  40bb54:	strb	w7, [sp, #32]
  40bb58:	str	w6, [sp, #40]
  40bb5c:	bl	404e70 <send@plt>
  40bb60:	ldp	x29, x30, [sp], #48
  40bb64:	ret

000000000040bb68 <rtnl_send@@Base>:
  40bb68:	stp	x29, x30, [sp, #-16]!
  40bb6c:	sxtw	x2, w2
  40bb70:	mov	w3, #0x0                   	// #0
  40bb74:	mov	x29, sp
  40bb78:	ldr	w0, [x0]
  40bb7c:	bl	404e70 <send@plt>
  40bb80:	ldp	x29, x30, [sp], #16
  40bb84:	ret

000000000040bb88 <rtnl_send_check@@Base>:
  40bb88:	sub	sp, sp, #0x420
  40bb8c:	sxtw	x2, w2
  40bb90:	mov	w3, #0x0                   	// #0
  40bb94:	stp	x29, x30, [sp]
  40bb98:	mov	x29, sp
  40bb9c:	str	x19, [sp, #16]
  40bba0:	mov	x19, x0
  40bba4:	ldr	w0, [x0]
  40bba8:	bl	404e70 <send@plt>
  40bbac:	tbnz	w0, #31, 40bc18 <rtnl_send_check@@Base+0x90>
  40bbb0:	ldr	w0, [x19]
  40bbb4:	add	x19, sp, #0x20
  40bbb8:	mov	x1, x19
  40bbbc:	mov	w3, #0x42                  	// #66
  40bbc0:	mov	x2, #0x400                 	// #1024
  40bbc4:	bl	404da0 <recv@plt>
  40bbc8:	mov	w1, w0
  40bbcc:	tbnz	w0, #31, 40bc28 <rtnl_send_check@@Base+0xa0>
  40bbd0:	cmp	w0, #0xf
  40bbd4:	b.gt	40bc00 <rtnl_send_check@@Base+0x78>
  40bbd8:	b	40bc14 <rtnl_send_check@@Base+0x8c>
  40bbdc:	cmp	w2, w1
  40bbe0:	sub	w1, w1, w0
  40bbe4:	b.hi	40bc14 <rtnl_send_check@@Base+0x8c>  // b.pmore
  40bbe8:	ldrh	w3, [x19, #4]
  40bbec:	cmp	w3, #0x2
  40bbf0:	b.eq	40bc48 <rtnl_send_check@@Base+0xc0>  // b.none
  40bbf4:	cmp	w1, #0xf
  40bbf8:	add	x19, x19, w0, uxtw
  40bbfc:	b.le	40bc14 <rtnl_send_check@@Base+0x8c>
  40bc00:	ldr	w2, [x19]
  40bc04:	add	w0, w2, #0x3
  40bc08:	cmp	w2, #0xf
  40bc0c:	and	w0, w0, #0xfffffffc
  40bc10:	b.hi	40bbdc <rtnl_send_check@@Base+0x54>  // b.pmore
  40bc14:	mov	w0, #0x0                   	// #0
  40bc18:	ldp	x29, x30, [sp]
  40bc1c:	ldr	x19, [sp, #16]
  40bc20:	add	sp, sp, #0x420
  40bc24:	ret
  40bc28:	bl	404fd0 <__errno_location@plt>
  40bc2c:	ldr	w0, [x0]
  40bc30:	ldp	x29, x30, [sp]
  40bc34:	cmp	w0, #0xb
  40bc38:	csetm	w0, ne  // ne = any
  40bc3c:	ldr	x19, [sp, #16]
  40bc40:	add	sp, sp, #0x420
  40bc44:	ret
  40bc48:	cmp	w2, #0x23
  40bc4c:	b.ls	40bc6c <rtnl_send_check@@Base+0xe4>  // b.plast
  40bc50:	bl	404fd0 <__errno_location@plt>
  40bc54:	mov	x2, x0
  40bc58:	ldr	w1, [x19, #16]
  40bc5c:	mov	w0, #0xffffffff            	// #-1
  40bc60:	neg	w1, w1
  40bc64:	str	w1, [x2]
  40bc68:	b	40bc18 <rtnl_send_check@@Base+0x90>
  40bc6c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40bc70:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40bc74:	mov	x2, #0x10                  	// #16
  40bc78:	add	x0, x0, #0xef0
  40bc7c:	ldr	x3, [x3, #3992]
  40bc80:	mov	x1, #0x1                   	// #1
  40bc84:	ldr	x3, [x3]
  40bc88:	bl	404eb0 <fwrite@plt>
  40bc8c:	mov	w0, #0xffffffff            	// #-1
  40bc90:	b	40bc18 <rtnl_send_check@@Base+0x90>
  40bc94:	nop

000000000040bc98 <rtnl_dump_request@@Base>:
  40bc98:	mov	x4, x0
  40bc9c:	stp	x29, x30, [sp, #-144]!
  40bca0:	mov	w14, w1
  40bca4:	mov	x29, sp
  40bca8:	ldr	w5, [x4, #28]
  40bcac:	mov	x11, x2
  40bcb0:	ldr	w0, [x0]
  40bcb4:	add	w15, w3, #0x10
  40bcb8:	add	w5, w5, #0x1
  40bcbc:	add	x8, sp, #0x28
  40bcc0:	add	x7, sp, #0x18
  40bcc4:	add	x6, sp, #0x38
  40bcc8:	dup	v0.2s, w5
  40bccc:	sxtw	x3, w3
  40bcd0:	mov	w13, #0x301                 	// #769
  40bcd4:	mov	w16, #0x10                  	// #16
  40bcd8:	mov	x12, #0x10                  	// #16
  40bcdc:	mov	w10, #0xc                   	// #12
  40bce0:	mov	x9, #0x2                   	// #2
  40bce4:	str	xzr, [sp, #24]
  40bce8:	stp	xzr, xzr, [sp, #96]
  40bcec:	add	x1, sp, #0x58
  40bcf0:	mov	w2, #0x0                   	// #0
  40bcf4:	stp	xzr, xzr, [sp, #112]
  40bcf8:	strh	w16, [sp, #24]
  40bcfc:	stur	d0, [x4, #28]
  40bd00:	str	wzr, [sp, #32]
  40bd04:	str	w15, [sp, #40]
  40bd08:	strh	w14, [sp, #44]
  40bd0c:	strh	w13, [sp, #46]
  40bd10:	stp	w5, wzr, [sp, #48]
  40bd14:	str	x8, [sp, #56]
  40bd18:	stp	x12, x11, [sp, #64]
  40bd1c:	str	x3, [sp, #80]
  40bd20:	str	x7, [sp, #88]
  40bd24:	str	w10, [sp, #96]
  40bd28:	str	x6, [sp, #104]
  40bd2c:	str	x9, [sp, #112]
  40bd30:	stp	xzr, xzr, [sp, #128]
  40bd34:	bl	404d10 <sendmsg@plt>
  40bd38:	ldp	x29, x30, [sp], #144
  40bd3c:	ret

000000000040bd40 <rtnl_dump_request_n@@Base>:
  40bd40:	mov	x4, x0
  40bd44:	stp	x29, x30, [sp, #-112]!
  40bd48:	mov	x3, x1
  40bd4c:	mov	x29, sp
  40bd50:	ldr	w5, [x4, #28]
  40bd54:	mov	w0, #0x301                 	// #769
  40bd58:	strh	w0, [x3, #6]
  40bd5c:	add	x7, sp, #0x18
  40bd60:	add	w5, w5, #0x1
  40bd64:	ldr	w0, [x4]
  40bd68:	str	wzr, [x3, #12]
  40bd6c:	add	x6, sp, #0x28
  40bd70:	dup	v0.2s, w5
  40bd74:	ldr	w10, [x3]
  40bd78:	mov	w11, #0x10                  	// #16
  40bd7c:	mov	w9, #0xc                   	// #12
  40bd80:	mov	x8, #0x1                   	// #1
  40bd84:	str	xzr, [sp, #24]
  40bd88:	stp	xzr, xzr, [sp, #64]
  40bd8c:	add	x1, sp, #0x38
  40bd90:	mov	w2, #0x0                   	// #0
  40bd94:	stur	d0, [x4, #28]
  40bd98:	str	w5, [x3, #8]
  40bd9c:	stp	xzr, xzr, [sp, #80]
  40bda0:	strh	w11, [sp, #24]
  40bda4:	str	wzr, [sp, #32]
  40bda8:	stp	x3, x10, [sp, #40]
  40bdac:	str	x7, [sp, #56]
  40bdb0:	str	w9, [sp, #64]
  40bdb4:	str	x6, [sp, #72]
  40bdb8:	str	x8, [sp, #80]
  40bdbc:	stp	xzr, xzr, [sp, #96]
  40bdc0:	bl	404d10 <sendmsg@plt>
  40bdc4:	ldp	x29, x30, [sp], #112
  40bdc8:	ret
  40bdcc:	nop

000000000040bdd0 <rtnl_dump_filter_nc@@Base>:
  40bdd0:	stp	x29, x30, [sp, #-272]!
  40bdd4:	mov	x4, #0x1                   	// #1
  40bdd8:	mov	w5, #0xc                   	// #12
  40bddc:	mov	x29, sp
  40bde0:	stp	x21, x22, [sp, #32]
  40bde4:	adrp	x21, 421000 <_IO_stdin_used@@Base+0x13c90>
  40bde8:	mov	w22, #0x0                   	// #0
  40bdec:	stp	x23, x24, [sp, #48]
  40bdf0:	add	x23, sp, #0xd8
  40bdf4:	stp	x25, x26, [sp, #64]
  40bdf8:	add	x25, sp, #0x80
  40bdfc:	stp	x27, x28, [sp, #80]
  40be00:	mov	x27, x0
  40be04:	ldr	x0, [x21, #3992]
  40be08:	stp	xzr, xzr, [sp, #224]
  40be0c:	stp	xzr, xzr, [sp, #240]
  40be10:	stp	x19, x20, [sp, #16]
  40be14:	mov	x20, x1
  40be18:	add	x1, sp, #0x88
  40be1c:	str	x0, [sp, #120]
  40be20:	add	x0, sp, #0x98
  40be24:	stp	x20, x2, [sp, #168]
  40be28:	strh	w3, [sp, #184]
  40be2c:	stp	xzr, xzr, [sp, #192]
  40be30:	strh	wzr, [sp, #208]
  40be34:	str	x1, [sp, #216]
  40be38:	str	w5, [sp, #224]
  40be3c:	str	x0, [sp, #232]
  40be40:	str	x4, [sp, #240]
  40be44:	stp	xzr, xzr, [sp, #256]
  40be48:	ldr	w0, [x27]
  40be4c:	mov	x2, x25
  40be50:	mov	x1, x23
  40be54:	bl	40abd0 <jsonw_null_field@@Base+0x100>
  40be58:	mov	w28, w0
  40be5c:	tbnz	w0, #31, 40c144 <rtnl_dump_filter_nc@@Base+0x374>
  40be60:	ldr	x3, [x27, #40]
  40be64:	ldr	x19, [sp, #128]
  40be68:	cbz	x3, 40be84 <rtnl_dump_filter_nc@@Base+0xb4>
  40be6c:	add	w2, w0, #0x3
  40be70:	mov	x1, #0x1                   	// #1
  40be74:	mov	x0, x19
  40be78:	and	x2, x2, #0xfffffffc
  40be7c:	bl	404eb0 <fwrite@plt>
  40be80:	ldr	x19, [sp, #128]
  40be84:	cbz	x20, 40c0f0 <rtnl_dump_filter_nc@@Base+0x320>
  40be88:	add	x24, sp, #0xc0
  40be8c:	mov	x6, x20
  40be90:	str	wzr, [sp, #116]
  40be94:	nop
  40be98:	cmp	w28, #0xf
  40be9c:	mov	w26, w28
  40bea0:	b.gt	40bec0 <rtnl_dump_filter_nc@@Base+0xf0>
  40bea4:	b	40bf74 <rtnl_dump_filter_nc@@Base+0x1a4>
  40bea8:	add	w3, w3, #0x3
  40beac:	and	w3, w3, #0xfffffffc
  40beb0:	sub	w26, w26, w3
  40beb4:	cmp	w26, #0xf
  40beb8:	add	x19, x19, w3, uxtw
  40bebc:	b.le	40bf70 <rtnl_dump_filter_nc@@Base+0x1a0>
  40bec0:	ldr	w3, [x19]
  40bec4:	cmp	w3, #0xf
  40bec8:	b.ls	40bf70 <rtnl_dump_filter_nc@@Base+0x1a0>  // b.plast
  40becc:	cmp	w26, w3
  40bed0:	b.cc	40bf70 <rtnl_dump_filter_nc@@Base+0x1a0>  // b.lo, b.ul, b.last
  40bed4:	ldrh	w5, [x19, #6]
  40bed8:	ldurh	w0, [x24, #-8]
  40bedc:	ldr	w1, [sp, #140]
  40bee0:	bic	w0, w5, w0
  40bee4:	and	w0, w0, #0xffff
  40bee8:	strh	w0, [x19, #6]
  40beec:	cbnz	w1, 40bea8 <rtnl_dump_filter_nc@@Base+0xd8>
  40bef0:	ldr	w5, [x19, #12]
  40bef4:	ldr	w1, [x27, #8]
  40bef8:	cmp	w5, w1
  40befc:	b.ne	40bea8 <rtnl_dump_filter_nc@@Base+0xd8>  // b.any
  40bf00:	ldr	w5, [x19, #8]
  40bf04:	ldr	w1, [x27, #32]
  40bf08:	cmp	w5, w1
  40bf0c:	b.ne	40bea8 <rtnl_dump_filter_nc@@Base+0xd8>  // b.any
  40bf10:	ldrh	w1, [x19, #4]
  40bf14:	tst	x0, #0x10
  40bf18:	csinc	w22, w22, wzr, eq  // eq = none
  40bf1c:	cmp	w1, #0x3
  40bf20:	b.eq	40bf84 <rtnl_dump_filter_nc@@Base+0x1b4>  // b.none
  40bf24:	cmp	w1, #0x2
  40bf28:	b.eq	40bfbc <rtnl_dump_filter_nc@@Base+0x1ec>  // b.none
  40bf2c:	ldr	x0, [x27, #40]
  40bf30:	cbnz	x0, 40bea8 <rtnl_dump_filter_nc@@Base+0xd8>
  40bf34:	ldur	x1, [x24, #-16]
  40bf38:	mov	x0, x19
  40bf3c:	str	x6, [sp, #104]
  40bf40:	blr	x6
  40bf44:	mov	w21, w0
  40bf48:	tbnz	w0, #31, 40c0b8 <rtnl_dump_filter_nc@@Base+0x2e8>
  40bf4c:	ldr	w3, [x19]
  40bf50:	ldr	x6, [sp, #104]
  40bf54:	add	w3, w3, #0x3
  40bf58:	and	w3, w3, #0xfffffffc
  40bf5c:	sub	w26, w26, w3
  40bf60:	cmp	w26, #0xf
  40bf64:	add	x19, x19, w3, uxtw
  40bf68:	b.gt	40bec0 <rtnl_dump_filter_nc@@Base+0xf0>
  40bf6c:	nop
  40bf70:	ldr	x19, [sp, #128]
  40bf74:	ldr	x6, [x24]
  40bf78:	cbz	x6, 40c014 <rtnl_dump_filter_nc@@Base+0x244>
  40bf7c:	add	x24, x24, #0x18
  40bf80:	b	40be98 <rtnl_dump_filter_nc@@Base+0xc8>
  40bf84:	ldr	w26, [x19, #16]
  40bf88:	cmp	w3, #0x13
  40bf8c:	b.ls	40c184 <rtnl_dump_filter_nc@@Base+0x3b4>  // b.plast
  40bf90:	mov	x0, x19
  40bf94:	tbnz	w26, #31, 40c054 <rtnl_dump_filter_nc@@Base+0x284>
  40bf98:	mov	x1, #0x0                   	// #0
  40bf9c:	bl	40ac90 <nl_dump_ext_ack@@Base>
  40bfa0:	ldr	x6, [x24]
  40bfa4:	cbz	x6, 40c14c <rtnl_dump_filter_nc@@Base+0x37c>
  40bfa8:	mov	w0, #0x1                   	// #1
  40bfac:	add	x24, x24, #0x18
  40bfb0:	str	w0, [sp, #116]
  40bfb4:	ldr	x19, [sp, #128]
  40bfb8:	b	40be98 <rtnl_dump_filter_nc@@Base+0xc8>
  40bfbc:	cmp	w3, #0x23
  40bfc0:	b.ls	40c094 <rtnl_dump_filter_nc@@Base+0x2c4>  // b.plast
  40bfc4:	bl	404fd0 <__errno_location@plt>
  40bfc8:	ldr	w1, [x19, #16]
  40bfcc:	neg	w2, w1
  40bfd0:	str	w2, [x0]
  40bfd4:	ldr	w0, [x27, #36]
  40bfd8:	cmp	w0, #0x4
  40bfdc:	b.eq	40c0e0 <rtnl_dump_filter_nc@@Base+0x310>  // b.none
  40bfe0:	ldr	w0, [x27, #48]
  40bfe4:	tbz	w0, #1, 40c084 <rtnl_dump_filter_nc@@Base+0x2b4>
  40bfe8:	ldr	x0, [sp, #128]
  40bfec:	mov	w21, #0xffffffff            	// #-1
  40bff0:	bl	404e50 <free@plt>
  40bff4:	mov	w0, w21
  40bff8:	ldp	x19, x20, [sp, #16]
  40bffc:	ldp	x21, x22, [sp, #32]
  40c000:	ldp	x23, x24, [sp, #48]
  40c004:	ldp	x25, x26, [sp, #64]
  40c008:	ldp	x27, x28, [sp, #80]
  40c00c:	ldp	x29, x30, [sp], #272
  40c010:	ret
  40c014:	mov	x0, x19
  40c018:	bl	404e50 <free@plt>
  40c01c:	ldr	w0, [sp, #116]
  40c020:	cbnz	w0, 40c1a8 <rtnl_dump_filter_nc@@Base+0x3d8>
  40c024:	ldr	w0, [sp, #264]
  40c028:	tbnz	w0, #5, 40c100 <rtnl_dump_filter_nc@@Base+0x330>
  40c02c:	cbz	w26, 40be48 <rtnl_dump_filter_nc@@Base+0x78>
  40c030:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c034:	mov	w2, w26
  40c038:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40c03c:	add	x1, x1, #0xf38
  40c040:	ldr	x0, [x0, #3992]
  40c044:	ldr	x0, [x0]
  40c048:	bl	405020 <fprintf@plt>
  40c04c:	mov	w0, #0x1                   	// #1
  40c050:	bl	404b70 <exit@plt>
  40c054:	mov	w1, w26
  40c058:	bl	40b0c8 <nl_dump_ext_ack_done@@Base>
  40c05c:	cbnz	w0, 40bfe8 <rtnl_dump_filter_nc@@Base+0x218>
  40c060:	bl	404fd0 <__errno_location@plt>
  40c064:	neg	w1, w26
  40c068:	str	w1, [x0]
  40c06c:	cmn	w26, #0x5a
  40c070:	b.eq	40c120 <rtnl_dump_filter_nc@@Base+0x350>  // b.none
  40c074:	cmn	w26, #0x5f
  40c078:	b.eq	40bfe8 <rtnl_dump_filter_nc@@Base+0x218>  // b.none
  40c07c:	cmn	w26, #0x2
  40c080:	b.eq	40bfe8 <rtnl_dump_filter_nc@@Base+0x218>  // b.none
  40c084:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0xc90>
  40c088:	add	x0, x0, #0x40
  40c08c:	bl	404b80 <perror@plt>
  40c090:	b	40bfe8 <rtnl_dump_filter_nc@@Base+0x218>
  40c094:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c098:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40c09c:	mov	x2, #0x10                  	// #16
  40c0a0:	mov	x1, #0x1                   	// #1
  40c0a4:	ldr	x3, [x3, #3992]
  40c0a8:	add	x0, x0, #0xef0
  40c0ac:	ldr	x3, [x3]
  40c0b0:	bl	404eb0 <fwrite@plt>
  40c0b4:	b	40bfe8 <rtnl_dump_filter_nc@@Base+0x218>
  40c0b8:	ldr	x0, [sp, #128]
  40c0bc:	bl	404e50 <free@plt>
  40c0c0:	mov	w0, w21
  40c0c4:	ldp	x19, x20, [sp, #16]
  40c0c8:	ldp	x21, x22, [sp, #32]
  40c0cc:	ldp	x23, x24, [sp, #48]
  40c0d0:	ldp	x25, x26, [sp, #64]
  40c0d4:	ldp	x27, x28, [sp, #80]
  40c0d8:	ldp	x29, x30, [sp], #272
  40c0dc:	ret
  40c0e0:	cmn	w1, #0x5f
  40c0e4:	ccmn	w1, #0x2, #0x4, ne  // ne = any
  40c0e8:	b.ne	40bfe0 <rtnl_dump_filter_nc@@Base+0x210>  // b.any
  40c0ec:	b	40bfe8 <rtnl_dump_filter_nc@@Base+0x218>
  40c0f0:	mov	x0, x19
  40c0f4:	bl	404e50 <free@plt>
  40c0f8:	ldr	w0, [sp, #264]
  40c0fc:	tbz	w0, #5, 40be48 <rtnl_dump_filter_nc@@Base+0x78>
  40c100:	ldr	x0, [sp, #120]
  40c104:	mov	x2, #0x12                  	// #18
  40c108:	mov	x1, #0x1                   	// #1
  40c10c:	ldr	x3, [x0]
  40c110:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40c114:	add	x0, x0, #0xf20
  40c118:	bl	404eb0 <fwrite@plt>
  40c11c:	b	40be48 <rtnl_dump_filter_nc@@Base+0x78>
  40c120:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c124:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0xc90>
  40c128:	mov	x2, #0x24                  	// #36
  40c12c:	mov	x1, #0x1                   	// #1
  40c130:	ldr	x3, [x3, #3992]
  40c134:	add	x0, x0, #0x18
  40c138:	ldr	x3, [x3]
  40c13c:	bl	404eb0 <fwrite@plt>
  40c140:	b	40bfe8 <rtnl_dump_filter_nc@@Base+0x218>
  40c144:	mov	w21, w0
  40c148:	b	40bff4 <rtnl_dump_filter_nc@@Base+0x224>
  40c14c:	ldr	x0, [sp, #128]
  40c150:	mov	w21, w22
  40c154:	bl	404e50 <free@plt>
  40c158:	cbz	w22, 40bff4 <rtnl_dump_filter_nc@@Base+0x224>
  40c15c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c160:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0xc90>
  40c164:	mov	x2, #0x2e                  	// #46
  40c168:	mov	x1, #0x1                   	// #1
  40c16c:	ldr	x3, [x3, #3992]
  40c170:	mov	w21, #0x0                   	// #0
  40c174:	add	x0, x0, #0x58
  40c178:	ldr	x3, [x3]
  40c17c:	bl	404eb0 <fwrite@plt>
  40c180:	b	40bff4 <rtnl_dump_filter_nc@@Base+0x224>
  40c184:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c188:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0xc90>
  40c18c:	mov	x2, #0xf                   	// #15
  40c190:	mov	x1, #0x1                   	// #1
  40c194:	ldr	x3, [x3, #3992]
  40c198:	add	x0, x0, #0x8
  40c19c:	ldr	x3, [x3]
  40c1a0:	bl	404eb0 <fwrite@plt>
  40c1a4:	b	40bfe8 <rtnl_dump_filter_nc@@Base+0x218>
  40c1a8:	mov	w21, w22
  40c1ac:	b	40c158 <rtnl_dump_filter_nc@@Base+0x388>

000000000040c1b0 <rtnl_talk@@Base>:
  40c1b0:	stp	x29, x30, [sp, #-32]!
  40c1b4:	mov	x4, x1
  40c1b8:	mov	w3, #0x1                   	// #1
  40c1bc:	mov	x29, sp
  40c1c0:	str	x4, [sp, #16]
  40c1c4:	add	x1, sp, #0x10
  40c1c8:	ldr	w4, [x4]
  40c1cc:	str	x4, [sp, #24]
  40c1d0:	bl	40ac98 <nl_dump_ext_ack@@Base+0x8>
  40c1d4:	ldp	x29, x30, [sp], #32
  40c1d8:	ret
  40c1dc:	nop

000000000040c1e0 <rtnl_talk_iov@@Base>:
  40c1e0:	stp	x29, x30, [sp, #-224]!
  40c1e4:	mov	w5, #0x10                  	// #16
  40c1e8:	mov	w4, #0xc                   	// #12
  40c1ec:	mov	x29, sp
  40c1f0:	str	xzr, [sp, #136]
  40c1f4:	stp	xzr, xzr, [sp, #176]
  40c1f8:	stp	xzr, xzr, [sp, #192]
  40c1fc:	stp	x19, x20, [sp, #16]
  40c200:	mov	x20, x2
  40c204:	add	x2, sp, #0x88
  40c208:	stp	x21, x22, [sp, #32]
  40c20c:	mov	x19, x0
  40c210:	stp	x23, x24, [sp, #48]
  40c214:	mov	x23, x3
  40c218:	stp	x25, x26, [sp, #64]
  40c21c:	stp	x27, x28, [sp, #80]
  40c220:	strh	w5, [sp, #136]
  40c224:	str	wzr, [sp, #144]
  40c228:	str	x2, [sp, #168]
  40c22c:	str	w4, [sp, #176]
  40c230:	stp	x1, x20, [sp, #184]
  40c234:	stp	xzr, xzr, [sp, #208]
  40c238:	cbz	x20, 40c580 <rtnl_talk_iov@@Base+0x3a0>
  40c23c:	ldr	w21, [x0, #28]
  40c240:	cbz	x3, 40c4c4 <rtnl_talk_iov@@Base+0x2e4>
  40c244:	add	w3, w21, w20
  40c248:	mov	w0, w21
  40c24c:	nop
  40c250:	ldr	x2, [x1], #16
  40c254:	add	w0, w0, #0x1
  40c258:	cmp	w3, w0
  40c25c:	str	w0, [x2, #8]
  40c260:	b.ne	40c250 <rtnl_talk_iov@@Base+0x70>  // b.any
  40c264:	add	w21, w21, w20
  40c268:	str	w21, [x19, #28]
  40c26c:	ldr	w0, [x19]
  40c270:	add	x26, sp, #0xa8
  40c274:	mov	x1, x26
  40c278:	mov	w2, #0x0                   	// #0
  40c27c:	bl	404d10 <sendmsg@plt>
  40c280:	tbnz	w0, #31, 40c5d4 <rtnl_talk_iov@@Base+0x3f4>
  40c284:	adrp	x25, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c288:	mov	w24, w21
  40c28c:	sub	x0, x24, x20
  40c290:	add	x27, sp, #0x80
  40c294:	ldr	x1, [x25, #3992]
  40c298:	mov	x22, #0x0                   	// #0
  40c29c:	str	x0, [sp, #96]
  40c2a0:	add	x0, sp, #0x98
  40c2a4:	str	x1, [sp, #112]
  40c2a8:	mov	x1, #0x1                   	// #1
  40c2ac:	stp	x0, x1, [sp, #184]
  40c2b0:	ldr	w0, [x19]
  40c2b4:	mov	x2, x27
  40c2b8:	mov	x1, x26
  40c2bc:	str	w22, [sp, #124]
  40c2c0:	bl	40abd0 <jsonw_null_field@@Base+0x100>
  40c2c4:	mov	w28, w0
  40c2c8:	tbnz	w0, #31, 40c420 <rtnl_talk_iov@@Base+0x240>
  40c2cc:	ldr	w2, [sp, #176]
  40c2d0:	cmp	w2, #0xc
  40c2d4:	b.ne	40c618 <rtnl_talk_iov@@Base+0x438>  // b.any
  40c2d8:	ldr	x24, [sp, #128]
  40c2dc:	mov	w5, w0
  40c2e0:	cmp	w0, #0xf
  40c2e4:	mov	x0, x24
  40c2e8:	b.le	40c3c0 <rtnl_talk_iov@@Base+0x1e0>
  40c2ec:	ldr	w28, [x24]
  40c2f0:	subs	w1, w28, #0x10
  40c2f4:	ccmp	w5, w28, #0x1, pl  // pl = nfrst
  40c2f8:	b.lt	40c470 <rtnl_talk_iov@@Base+0x290>  // b.tstop
  40c2fc:	cbnz	x23, 40c3d8 <rtnl_talk_iov@@Base+0x1f8>
  40c300:	ldr	x8, [x25, #3992]
  40c304:	adrp	x7, 40d000 <rta_addattr_l@@Base+0x98>
  40c308:	b	40c398 <rtnl_talk_iov@@Base+0x1b8>
  40c30c:	ldr	w2, [x19, #8]
  40c310:	ldr	w0, [x24, #12]
  40c314:	cmp	w2, w0
  40c318:	b.ne	40c3a0 <rtnl_talk_iov@@Base+0x1c0>  // b.any
  40c31c:	ldr	w0, [x24, #8]
  40c320:	cmp	w0, w21
  40c324:	b.hi	40c3a0 <rtnl_talk_iov@@Base+0x1c0>  // b.pmore
  40c328:	ldr	x2, [sp, #96]
  40c32c:	cmp	x2, w0, uxtw
  40c330:	b.hi	40c3a0 <rtnl_talk_iov@@Base+0x1c0>  // b.pmore
  40c334:	ldrh	w0, [x24, #4]
  40c338:	str	w5, [sp, #120]
  40c33c:	cmp	w0, #0x2
  40c340:	b.eq	40c520 <rtnl_talk_iov@@Base+0x340>  // b.none
  40c344:	ldr	x3, [x8]
  40c348:	add	x0, x7, #0xed8
  40c34c:	mov	x2, #0x14                  	// #20
  40c350:	mov	x1, #0x1                   	// #1
  40c354:	str	x8, [sp, #104]
  40c358:	bl	404eb0 <fwrite@plt>
  40c35c:	add	w4, w28, #0x3
  40c360:	ldr	w5, [sp, #120]
  40c364:	and	w4, w4, #0xfffffffc
  40c368:	adrp	x7, 40d000 <rta_addattr_l@@Base+0x98>
  40c36c:	sub	w5, w5, w4
  40c370:	add	x24, x24, w4, uxtw
  40c374:	mov	w28, w5
  40c378:	cmp	w5, #0xf
  40c37c:	ldr	x8, [sp, #104]
  40c380:	b.ls	40c3bc <rtnl_talk_iov@@Base+0x1dc>  // b.plast
  40c384:	nop
  40c388:	ldr	w28, [x24]
  40c38c:	subs	w1, w28, #0x10
  40c390:	ccmp	w28, w5, #0x0, pl  // pl = nfrst
  40c394:	b.gt	40c470 <rtnl_talk_iov@@Base+0x290>
  40c398:	ldr	w0, [sp, #140]
  40c39c:	cbz	w0, 40c30c <rtnl_talk_iov@@Base+0x12c>
  40c3a0:	add	w4, w28, #0x3
  40c3a4:	and	w4, w4, #0xfffffffc
  40c3a8:	sub	w5, w5, w4
  40c3ac:	add	x24, x24, w4, uxtw
  40c3b0:	mov	w28, w5
  40c3b4:	cmp	w5, #0xf
  40c3b8:	b.hi	40c388 <rtnl_talk_iov@@Base+0x1a8>  // b.pmore
  40c3bc:	ldr	x0, [sp, #128]
  40c3c0:	bl	404e50 <free@plt>
  40c3c4:	ldr	w0, [sp, #216]
  40c3c8:	tbnz	w0, #5, 40c4f4 <rtnl_talk_iov@@Base+0x314>
  40c3cc:	cbnz	w28, 40c654 <rtnl_talk_iov@@Base+0x474>
  40c3d0:	add	x22, x22, #0x1
  40c3d4:	b	40c2b0 <rtnl_talk_iov@@Base+0xd0>
  40c3d8:	ldr	w7, [sp, #140]
  40c3dc:	mov	x6, x24
  40c3e0:	cbnz	w7, 40c440 <rtnl_talk_iov@@Base+0x260>
  40c3e4:	ldr	w3, [x6, #12]
  40c3e8:	ldr	w2, [x19, #8]
  40c3ec:	cmp	w3, w2
  40c3f0:	b.ne	40c440 <rtnl_talk_iov@@Base+0x260>  // b.any
  40c3f4:	ldr	w2, [x6, #8]
  40c3f8:	cmp	w2, w21
  40c3fc:	b.hi	40c440 <rtnl_talk_iov@@Base+0x260>  // b.pmore
  40c400:	ldr	x3, [sp, #96]
  40c404:	cmp	x3, w2, uxtw
  40c408:	b.hi	40c440 <rtnl_talk_iov@@Base+0x260>  // b.pmore
  40c40c:	ldrh	w2, [x6, #4]
  40c410:	cmp	w2, #0x2
  40c414:	b.eq	40c518 <rtnl_talk_iov@@Base+0x338>  // b.none
  40c418:	mov	w28, #0x0                   	// #0
  40c41c:	str	x0, [x23]
  40c420:	mov	w0, w28
  40c424:	ldp	x19, x20, [sp, #16]
  40c428:	ldp	x21, x22, [sp, #32]
  40c42c:	ldp	x23, x24, [sp, #48]
  40c430:	ldp	x25, x26, [sp, #64]
  40c434:	ldp	x27, x28, [sp, #80]
  40c438:	ldp	x29, x30, [sp], #224
  40c43c:	ret
  40c440:	add	w4, w28, #0x3
  40c444:	and	w4, w4, #0xfffffffc
  40c448:	sub	w5, w5, w4
  40c44c:	cmp	w5, #0xf
  40c450:	add	x6, x6, w4, uxtw
  40c454:	mov	w28, w5
  40c458:	b.ls	40c3c0 <rtnl_talk_iov@@Base+0x1e0>  // b.plast
  40c45c:	ldr	w28, [x6]
  40c460:	subs	w1, w28, #0x10
  40c464:	ccmp	w28, w5, #0x0, pl  // pl = nfrst
  40c468:	b.le	40c3e0 <rtnl_talk_iov@@Base+0x200>
  40c46c:	nop
  40c470:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c474:	ldr	w1, [sp, #216]
  40c478:	ldr	x0, [x0, #3992]
  40c47c:	ldr	x3, [x0]
  40c480:	tbz	w1, #5, 40c638 <rtnl_talk_iov@@Base+0x458>
  40c484:	mov	x2, #0x12                  	// #18
  40c488:	mov	x1, #0x1                   	// #1
  40c48c:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40c490:	add	x0, x0, #0xea0
  40c494:	bl	404eb0 <fwrite@plt>
  40c498:	mov	w28, #0xffffffff            	// #-1
  40c49c:	ldr	x0, [sp, #128]
  40c4a0:	bl	404e50 <free@plt>
  40c4a4:	mov	w0, w28
  40c4a8:	ldp	x19, x20, [sp, #16]
  40c4ac:	ldp	x21, x22, [sp, #32]
  40c4b0:	ldp	x23, x24, [sp, #48]
  40c4b4:	ldp	x25, x26, [sp, #64]
  40c4b8:	ldp	x27, x28, [sp, #80]
  40c4bc:	ldp	x29, x30, [sp], #224
  40c4c0:	ret
  40c4c4:	add	w4, w20, #0x1
  40c4c8:	add	w0, w21, #0x1
  40c4cc:	add	w4, w4, w21
  40c4d0:	ldr	x2, [x1], #16
  40c4d4:	ldrh	w3, [x2, #6]
  40c4d8:	str	w0, [x2, #8]
  40c4dc:	add	w0, w0, #0x1
  40c4e0:	orr	w3, w3, #0x4
  40c4e4:	strh	w3, [x2, #6]
  40c4e8:	cmp	w0, w4
  40c4ec:	b.ne	40c4d0 <rtnl_talk_iov@@Base+0x2f0>  // b.any
  40c4f0:	b	40c264 <rtnl_talk_iov@@Base+0x84>
  40c4f4:	ldr	x0, [sp, #112]
  40c4f8:	add	x22, x22, #0x1
  40c4fc:	mov	x2, #0x12                  	// #18
  40c500:	mov	x1, #0x1                   	// #1
  40c504:	ldr	x3, [x0]
  40c508:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40c50c:	add	x0, x0, #0xf20
  40c510:	bl	404eb0 <fwrite@plt>
  40c514:	b	40c2b0 <rtnl_talk_iov@@Base+0xd0>
  40c518:	mov	x24, x6
  40c51c:	nop
  40c520:	ldr	w28, [x24, #16]
  40c524:	cmp	w1, #0x13
  40c528:	b.ls	40c5e8 <rtnl_talk_iov@@Base+0x408>  // b.plast
  40c52c:	cbz	w28, 40c5bc <rtnl_talk_iov@@Base+0x3dc>
  40c530:	bl	404fd0 <__errno_location@plt>
  40c534:	neg	w1, w28
  40c538:	str	w1, [x0]
  40c53c:	ldr	w0, [x19, #36]
  40c540:	cmp	w0, #0x4
  40c544:	b.eq	40c558 <rtnl_talk_iov@@Base+0x378>  // b.none
  40c548:	mov	x0, x24
  40c54c:	mov	x1, #0x0                   	// #0
  40c550:	bl	40ac90 <nl_dump_ext_ack@@Base>
  40c554:	cbz	w0, 40c588 <rtnl_talk_iov@@Base+0x3a8>
  40c558:	ldr	x0, [sp, #128]
  40c55c:	cbz	x23, 40c5cc <rtnl_talk_iov@@Base+0x3ec>
  40c560:	str	x0, [x23]
  40c564:	add	x22, x22, #0x1
  40c568:	cmp	x20, x22
  40c56c:	b.hi	40c2b0 <rtnl_talk_iov@@Base+0xd0>  // b.pmore
  40c570:	ldr	w0, [sp, #124]
  40c574:	cmp	w28, #0x0
  40c578:	csinv	w28, w28, w0, eq  // eq = none
  40c57c:	b	40c420 <rtnl_talk_iov@@Base+0x240>
  40c580:	mov	w21, #0x0                   	// #0
  40c584:	b	40c26c <rtnl_talk_iov@@Base+0x8c>
  40c588:	ldr	x1, [x25, #3992]
  40c58c:	ldr	w0, [x24, #16]
  40c590:	ldr	x1, [x1]
  40c594:	neg	w0, w0
  40c598:	str	x1, [sp, #104]
  40c59c:	bl	404d70 <strerror@plt>
  40c5a0:	mov	x2, x0
  40c5a4:	ldr	x1, [sp, #104]
  40c5a8:	mov	x0, x1
  40c5ac:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40c5b0:	add	x1, x1, #0xf08
  40c5b4:	bl	405020 <fprintf@plt>
  40c5b8:	b	40c558 <rtnl_talk_iov@@Base+0x378>
  40c5bc:	mov	x0, x24
  40c5c0:	mov	x1, #0x0                   	// #0
  40c5c4:	bl	40ac90 <nl_dump_ext_ack@@Base>
  40c5c8:	b	40c558 <rtnl_talk_iov@@Base+0x378>
  40c5cc:	bl	404e50 <free@plt>
  40c5d0:	b	40c564 <rtnl_talk_iov@@Base+0x384>
  40c5d4:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40c5d8:	mov	w28, #0xffffffff            	// #-1
  40c5dc:	add	x0, x0, #0xe60
  40c5e0:	bl	404b80 <perror@plt>
  40c5e4:	b	40c420 <rtnl_talk_iov@@Base+0x240>
  40c5e8:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c5ec:	mov	x2, #0x10                  	// #16
  40c5f0:	mov	x1, #0x1                   	// #1
  40c5f4:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40c5f8:	ldr	x3, [x3, #3992]
  40c5fc:	add	x0, x0, #0xef0
  40c600:	mov	w28, #0xffffffff            	// #-1
  40c604:	ldr	x3, [x3]
  40c608:	bl	404eb0 <fwrite@plt>
  40c60c:	ldr	x0, [sp, #128]
  40c610:	bl	404e50 <free@plt>
  40c614:	b	40c420 <rtnl_talk_iov@@Base+0x240>
  40c618:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40c61c:	add	x1, x1, #0xe80
  40c620:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c624:	ldr	x0, [x0, #3992]
  40c628:	ldr	x0, [x0]
  40c62c:	bl	405020 <fprintf@plt>
  40c630:	mov	w0, #0x1                   	// #1
  40c634:	bl	404b70 <exit@plt>
  40c638:	mov	w2, w28
  40c63c:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40c640:	add	x1, x1, #0xeb8
  40c644:	mov	x0, x3
  40c648:	bl	405020 <fprintf@plt>
  40c64c:	mov	w0, #0x1                   	// #1
  40c650:	bl	404b70 <exit@plt>
  40c654:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40c658:	mov	w2, w28
  40c65c:	add	x1, x1, #0xf38
  40c660:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c664:	b	40c624 <rtnl_talk_iov@@Base+0x444>

000000000040c668 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40c668:	stp	x29, x30, [sp, #-32]!
  40c66c:	mov	x4, x1
  40c670:	mov	w3, #0x0                   	// #0
  40c674:	mov	x29, sp
  40c678:	str	x4, [sp, #16]
  40c67c:	add	x1, sp, #0x10
  40c680:	ldr	w4, [x4]
  40c684:	str	x4, [sp, #24]
  40c688:	bl	40ac98 <nl_dump_ext_ack@@Base+0x8>
  40c68c:	ldp	x29, x30, [sp], #32
  40c690:	ret
  40c694:	nop

000000000040c698 <rtnl_listen_all_nsid@@Base>:
  40c698:	stp	x29, x30, [sp, #-48]!
  40c69c:	mov	w5, #0x1                   	// #1
  40c6a0:	mov	w4, #0x4                   	// #4
  40c6a4:	mov	x29, sp
  40c6a8:	str	x19, [sp, #16]
  40c6ac:	mov	x19, x0
  40c6b0:	ldr	w0, [x0]
  40c6b4:	add	x3, sp, #0x2c
  40c6b8:	mov	w2, #0x8                   	// #8
  40c6bc:	mov	w1, #0x10e                 	// #270
  40c6c0:	str	w5, [sp, #44]
  40c6c4:	bl	404ca0 <setsockopt@plt>
  40c6c8:	tbnz	w0, #31, 40c6e8 <rtnl_listen_all_nsid@@Base+0x50>
  40c6cc:	ldr	w1, [x19, #48]
  40c6d0:	mov	w0, #0x0                   	// #0
  40c6d4:	orr	w1, w1, #0x1
  40c6d8:	str	w1, [x19, #48]
  40c6dc:	ldr	x19, [sp, #16]
  40c6e0:	ldp	x29, x30, [sp], #48
  40c6e4:	ret
  40c6e8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0xc90>
  40c6ec:	add	x0, x0, #0x88
  40c6f0:	bl	404b80 <perror@plt>
  40c6f4:	mov	w0, #0xffffffff            	// #-1
  40c6f8:	b	40c6dc <rtnl_listen_all_nsid@@Base+0x44>
  40c6fc:	nop

000000000040c700 <rtnl_listen@@Base>:
  40c700:	mov	x12, #0x60c0                	// #24768
  40c704:	sub	sp, sp, x12
  40c708:	add	x3, sp, #0x68
  40c70c:	mov	w7, #0x10                  	// #16
  40c710:	mov	w6, #0xc                   	// #12
  40c714:	mov	x5, #0x1                   	// #1
  40c718:	stp	x29, x30, [sp]
  40c71c:	mov	x29, sp
  40c720:	ldr	w4, [x0, #48]
  40c724:	str	xzr, [sp, #104]
  40c728:	stp	xzr, xzr, [sp, #144]
  40c72c:	stp	xzr, xzr, [sp, #160]
  40c730:	stp	x19, x20, [sp, #16]
  40c734:	mov	x20, x1
  40c738:	stp	x21, x22, [sp, #32]
  40c73c:	mov	x21, x2
  40c740:	stp	x23, x24, [sp, #48]
  40c744:	mov	x23, x0
  40c748:	add	x0, sp, #0x78
  40c74c:	stp	x25, x26, [sp, #64]
  40c750:	stp	x27, x28, [sp, #80]
  40c754:	strh	w7, [sp, #104]
  40c758:	str	wzr, [sp, #112]
  40c75c:	str	x3, [sp, #136]
  40c760:	str	w6, [sp, #144]
  40c764:	stp	x0, x5, [sp, #152]
  40c768:	stp	xzr, xzr, [sp, #176]
  40c76c:	tbz	w4, #0, 40c77c <rtnl_listen@@Base+0x7c>
  40c770:	add	x0, sp, #0xc0
  40c774:	mov	x1, #0x2000                	// #8192
  40c778:	stp	x0, x1, [sp, #168]
  40c77c:	mov	x26, #0x10e                 	// #270
  40c780:	add	x24, sp, #0x88
  40c784:	add	x22, sp, #0x60
  40c788:	mov	x0, #0x20c0                	// #8384
  40c78c:	movk	x26, #0x8, lsl #32
  40c790:	add	x25, sp, x0
  40c794:	str	x25, [sp, #120]
  40c798:	ldr	w0, [x23]
  40c79c:	mov	x3, #0x4000                	// #16384
  40c7a0:	mov	x1, x24
  40c7a4:	mov	w2, #0x0                   	// #0
  40c7a8:	str	x3, [sp, #128]
  40c7ac:	bl	404b40 <recvmsg@plt>
  40c7b0:	cmp	w0, #0x0
  40c7b4:	mov	w1, w0
  40c7b8:	b.ge	40c830 <rtnl_listen@@Base+0x130>  // b.tcont
  40c7bc:	bl	404fd0 <__errno_location@plt>
  40c7c0:	mov	x19, x0
  40c7c4:	ldr	w0, [x0]
  40c7c8:	cmp	w0, #0x4
  40c7cc:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40c7d0:	b.eq	40c798 <rtnl_listen@@Base+0x98>  // b.none
  40c7d4:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c7d8:	ldr	x1, [x1, #3992]
  40c7dc:	ldr	x27, [x1]
  40c7e0:	bl	404d70 <strerror@plt>
  40c7e4:	ldr	w3, [x19]
  40c7e8:	mov	x2, x0
  40c7ec:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40c7f0:	mov	x0, x27
  40c7f4:	add	x1, x1, #0xe18
  40c7f8:	bl	405020 <fprintf@plt>
  40c7fc:	ldr	w0, [x19]
  40c800:	cmp	w0, #0x69
  40c804:	b.eq	40c798 <rtnl_listen@@Base+0x98>  // b.none
  40c808:	mov	w0, #0xffffffff            	// #-1
  40c80c:	mov	x12, #0x60c0                	// #24768
  40c810:	ldp	x29, x30, [sp]
  40c814:	ldp	x19, x20, [sp, #16]
  40c818:	ldp	x21, x22, [sp, #32]
  40c81c:	ldp	x23, x24, [sp, #48]
  40c820:	ldp	x25, x26, [sp, #64]
  40c824:	ldp	x27, x28, [sp, #80]
  40c828:	add	sp, sp, x12
  40c82c:	ret
  40c830:	b.eq	40c9c8 <rtnl_listen@@Base+0x2c8>  // b.none
  40c834:	ldr	w2, [sp, #144]
  40c838:	cmp	w2, #0xc
  40c83c:	b.ne	40c9f0 <rtnl_listen@@Base+0x2f0>  // b.any
  40c840:	ldr	w2, [x23, #48]
  40c844:	tbnz	w2, #0, 40c910 <rtnl_listen@@Base+0x210>
  40c848:	cmp	w0, #0xf
  40c84c:	mov	w28, w0
  40c850:	b.ls	40c99c <rtnl_listen@@Base+0x29c>  // b.plast
  40c854:	ldr	w19, [sp, #8384]
  40c858:	cmp	w19, #0x10
  40c85c:	ccmp	w0, w19, #0x1, pl  // pl = nfrst
  40c860:	b.lt	40c8b0 <rtnl_listen@@Base+0x1b0>  // b.tstop
  40c864:	mov	x27, x25
  40c868:	b	40c898 <rtnl_listen@@Base+0x198>
  40c86c:	add	w19, w19, #0x3
  40c870:	and	w19, w19, #0xfffffffc
  40c874:	sub	w1, w28, w19
  40c878:	cmp	w1, #0xf
  40c87c:	add	x27, x27, w19, uxtw
  40c880:	mov	w28, w1
  40c884:	b.ls	40c8e0 <rtnl_listen@@Base+0x1e0>  // b.plast
  40c888:	ldr	w19, [x27]
  40c88c:	cmp	w19, #0x10
  40c890:	ccmp	w19, w28, #0x0, pl  // pl = nfrst
  40c894:	b.gt	40c8b0 <rtnl_listen@@Base+0x1b0>
  40c898:	mov	x2, x21
  40c89c:	mov	x1, x27
  40c8a0:	mov	x0, x22
  40c8a4:	blr	x20
  40c8a8:	tbz	w0, #31, 40c86c <rtnl_listen@@Base+0x16c>
  40c8ac:	b	40c80c <rtnl_listen@@Base+0x10c>
  40c8b0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c8b4:	ldr	w1, [sp, #184]
  40c8b8:	ldr	x0, [x0, #3992]
  40c8bc:	ldr	x3, [x0]
  40c8c0:	tbz	w1, #5, 40ca00 <rtnl_listen@@Base+0x300>
  40c8c4:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40c8c8:	mov	x2, #0x12                  	// #18
  40c8cc:	add	x0, x0, #0xea0
  40c8d0:	mov	x1, #0x1                   	// #1
  40c8d4:	bl	404eb0 <fwrite@plt>
  40c8d8:	mov	w0, #0xffffffff            	// #-1
  40c8dc:	b	40c80c <rtnl_listen@@Base+0x10c>
  40c8e0:	ldr	w0, [sp, #184]
  40c8e4:	tbnz	w0, #5, 40c9a4 <rtnl_listen@@Base+0x2a4>
  40c8e8:	cbz	w1, 40c798 <rtnl_listen@@Base+0x98>
  40c8ec:	mov	w2, w1
  40c8f0:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40c8f4:	add	x1, x1, #0xf38
  40c8f8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c8fc:	ldr	x0, [x0, #3992]
  40c900:	ldr	x0, [x0]
  40c904:	bl	405020 <fprintf@plt>
  40c908:	mov	w0, #0x1                   	// #1
  40c90c:	bl	404b70 <exit@plt>
  40c910:	ldr	x4, [sp, #176]
  40c914:	mov	w3, #0xffffffff            	// #-1
  40c918:	str	w3, [sp, #96]
  40c91c:	cmp	x4, #0xf
  40c920:	b.ls	40c848 <rtnl_listen@@Base+0x148>  // b.plast
  40c924:	ldr	x2, [sp, #168]
  40c928:	mov	w6, w3
  40c92c:	mov	w7, #0x0                   	// #0
  40c930:	add	x4, x2, x4
  40c934:	cbz	x2, 40c97c <rtnl_listen@@Base+0x27c>
  40c938:	ldp	x3, x5, [x2]
  40c93c:	cmp	x5, x26
  40c940:	b.eq	40c988 <rtnl_listen@@Base+0x288>  // b.none
  40c944:	cmp	x3, #0xf
  40c948:	b.ls	40c97c <rtnl_listen@@Base+0x27c>  // b.plast
  40c94c:	add	x3, x3, #0x7
  40c950:	and	x3, x3, #0xfffffffffffffff8
  40c954:	add	x2, x2, x3
  40c958:	add	x3, x2, #0x10
  40c95c:	cmp	x4, x3
  40c960:	b.cc	40c97c <rtnl_listen@@Base+0x27c>  // b.lo, b.ul, b.last
  40c964:	ldr	x3, [x2]
  40c968:	add	x3, x3, #0x7
  40c96c:	and	x3, x3, #0xfffffffffffffff8
  40c970:	add	x3, x2, x3
  40c974:	cmp	x4, x3
  40c978:	b.cs	40c934 <rtnl_listen@@Base+0x234>  // b.hs, b.nlast
  40c97c:	cbz	w7, 40c848 <rtnl_listen@@Base+0x148>
  40c980:	str	w6, [sp, #96]
  40c984:	b	40c848 <rtnl_listen@@Base+0x148>
  40c988:	cmp	x3, #0x14
  40c98c:	b.ne	40c944 <rtnl_listen@@Base+0x244>  // b.any
  40c990:	ldr	w6, [x2, #16]
  40c994:	mov	w7, #0x1                   	// #1
  40c998:	b	40c94c <rtnl_listen@@Base+0x24c>
  40c99c:	ldr	w0, [sp, #184]
  40c9a0:	tbz	w0, #5, 40c8ec <rtnl_listen@@Base+0x1ec>
  40c9a4:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c9a8:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40c9ac:	mov	x2, #0x12                  	// #18
  40c9b0:	mov	x1, #0x1                   	// #1
  40c9b4:	ldr	x3, [x3, #3992]
  40c9b8:	add	x0, x0, #0xf20
  40c9bc:	ldr	x3, [x3]
  40c9c0:	bl	404eb0 <fwrite@plt>
  40c9c4:	b	40c798 <rtnl_listen@@Base+0x98>
  40c9c8:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c9cc:	adrp	x0, 40d000 <rta_addattr_l@@Base+0x98>
  40c9d0:	mov	x2, #0xf                   	// #15
  40c9d4:	add	x0, x0, #0xe08
  40c9d8:	ldr	x3, [x3, #3992]
  40c9dc:	mov	x1, #0x1                   	// #1
  40c9e0:	ldr	x3, [x3]
  40c9e4:	bl	404eb0 <fwrite@plt>
  40c9e8:	mov	w0, #0xffffffff            	// #-1
  40c9ec:	b	40c80c <rtnl_listen@@Base+0x10c>
  40c9f0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40c9f4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40c9f8:	add	x1, x1, #0xa0
  40c9fc:	b	40c8fc <rtnl_listen@@Base+0x1fc>
  40ca00:	mov	w2, w19
  40ca04:	adrp	x1, 40d000 <rta_addattr_l@@Base+0x98>
  40ca08:	add	x1, x1, #0xeb8
  40ca0c:	mov	x0, x3
  40ca10:	bl	405020 <fprintf@plt>
  40ca14:	mov	w0, #0x1                   	// #1
  40ca18:	bl	404b70 <exit@plt>
  40ca1c:	nop

000000000040ca20 <rtnl_from_file@@Base>:
  40ca20:	mov	x12, #0x4050                	// #16464
  40ca24:	sub	sp, sp, x12
  40ca28:	stp	x29, x30, [sp]
  40ca2c:	mov	x29, sp
  40ca30:	stp	x21, x22, [sp, #32]
  40ca34:	add	x21, sp, #0x50
  40ca38:	mov	x22, x2
  40ca3c:	stp	x19, x20, [sp, #16]
  40ca40:	mov	x20, x0
  40ca44:	stp	x23, x24, [sp, #48]
  40ca48:	mov	x23, x1
  40ca4c:	add	x24, x21, #0x10
  40ca50:	stp	x25, x26, [sp, #64]
  40ca54:	mov	w25, #0x3ff0                	// #16368
  40ca58:	b	40caa4 <rtnl_from_file@@Base+0x84>
  40ca5c:	cmp	x4, #0x10
  40ca60:	b.ne	40cad8 <rtnl_from_file@@Base+0xb8>  // b.any
  40ca64:	ldr	w26, [sp, #80]
  40ca68:	sub	w19, w26, #0xd
  40ca6c:	sub	w2, w26, #0x10
  40ca70:	and	x19, x19, #0xfffffffc
  40ca74:	cmp	w2, w25
  40ca78:	mov	x2, x19
  40ca7c:	b.hi	40cb14 <rtnl_from_file@@Base+0xf4>  // b.pmore
  40ca80:	bl	404e30 <fread@plt>
  40ca84:	mov	x3, x0
  40ca88:	mov	x2, x22
  40ca8c:	mov	x1, x21
  40ca90:	cmp	x19, x3
  40ca94:	mov	x0, #0x0                   	// #0
  40ca98:	b.ne	40cad8 <rtnl_from_file@@Base+0xb8>  // b.any
  40ca9c:	blr	x23
  40caa0:	tbnz	w0, #31, 40caf4 <rtnl_from_file@@Base+0xd4>
  40caa4:	mov	x3, x20
  40caa8:	mov	x1, #0x1                   	// #1
  40caac:	mov	x0, x21
  40cab0:	mov	x2, #0x10                  	// #16
  40cab4:	bl	404e30 <fread@plt>
  40cab8:	mov	x4, x0
  40cabc:	mov	x3, x20
  40cac0:	mov	x0, x24
  40cac4:	mov	x1, #0x1                   	// #1
  40cac8:	cbnz	x4, 40ca5c <rtnl_from_file@@Base+0x3c>
  40cacc:	mov	x0, x20
  40cad0:	bl	404dd0 <feof@plt>
  40cad4:	cbnz	w0, 40cb9c <rtnl_from_file@@Base+0x17c>
  40cad8:	mov	x0, x20
  40cadc:	bl	405050 <ferror@plt>
  40cae0:	cbnz	w0, 40cb8c <rtnl_from_file@@Base+0x16c>
  40cae4:	mov	x0, x20
  40cae8:	bl	404dd0 <feof@plt>
  40caec:	cbnz	w0, 40cb64 <rtnl_from_file@@Base+0x144>
  40caf0:	mov	w0, #0xffffffff            	// #-1
  40caf4:	mov	x12, #0x4050                	// #16464
  40caf8:	ldp	x29, x30, [sp]
  40cafc:	ldp	x19, x20, [sp, #16]
  40cb00:	ldp	x21, x22, [sp, #32]
  40cb04:	ldp	x23, x24, [sp, #48]
  40cb08:	ldp	x25, x26, [sp, #64]
  40cb0c:	add	sp, sp, x12
  40cb10:	ret
  40cb14:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13c90>
  40cb18:	mov	x0, x20
  40cb1c:	ldr	x1, [x1, #3992]
  40cb20:	ldr	x19, [x1]
  40cb24:	bl	404be0 <ftell@plt>
  40cb28:	mov	w2, w26
  40cb2c:	mov	x3, x0
  40cb30:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40cb34:	mov	x0, x19
  40cb38:	add	x1, x1, #0x100
  40cb3c:	bl	405020 <fprintf@plt>
  40cb40:	mov	w0, #0xffffffff            	// #-1
  40cb44:	mov	x12, #0x4050                	// #16464
  40cb48:	ldp	x29, x30, [sp]
  40cb4c:	ldp	x19, x20, [sp, #16]
  40cb50:	ldp	x21, x22, [sp, #32]
  40cb54:	ldp	x23, x24, [sp, #48]
  40cb58:	ldp	x25, x26, [sp, #64]
  40cb5c:	add	sp, sp, x12
  40cb60:	ret
  40cb64:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40cb68:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0xc90>
  40cb6c:	mov	x2, #0x22                  	// #34
  40cb70:	add	x0, x0, #0xd8
  40cb74:	ldr	x3, [x3, #3992]
  40cb78:	mov	x1, #0x1                   	// #1
  40cb7c:	ldr	x3, [x3]
  40cb80:	bl	404eb0 <fwrite@plt>
  40cb84:	mov	w0, #0xffffffff            	// #-1
  40cb88:	b	40caf4 <rtnl_from_file@@Base+0xd4>
  40cb8c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0xc90>
  40cb90:	add	x0, x0, #0xc0
  40cb94:	bl	404b80 <perror@plt>
  40cb98:	b	40cae4 <rtnl_from_file@@Base+0xc4>
  40cb9c:	mov	w0, #0x0                   	// #0
  40cba0:	b	40caf4 <rtnl_from_file@@Base+0xd4>
  40cba4:	nop

000000000040cba8 <addattr_l@@Base>:
  40cba8:	stp	x29, x30, [sp, #-32]!
  40cbac:	mov	x29, sp
  40cbb0:	ldr	w5, [x0]
  40cbb4:	stp	x19, x20, [sp, #16]
  40cbb8:	add	w20, w4, #0x7
  40cbbc:	add	w5, w5, #0x3
  40cbc0:	and	w20, w20, #0xfffffffc
  40cbc4:	and	w5, w5, #0xfffffffc
  40cbc8:	add	w6, w5, w20
  40cbcc:	mov	x19, x0
  40cbd0:	cmp	w6, w1
  40cbd4:	b.hi	40cc24 <addattr_l@@Base+0x7c>  // b.pmore
  40cbd8:	add	x0, x19, w5, uxtw
  40cbdc:	add	w1, w4, #0x4
  40cbe0:	strh	w2, [x0, #2]
  40cbe4:	strh	w1, [x19, w5, uxtw]
  40cbe8:	cbnz	w4, 40cc00 <addattr_l@@Base+0x58>
  40cbec:	mov	w0, #0x0                   	// #0
  40cbf0:	str	w6, [x19]
  40cbf4:	ldp	x19, x20, [sp, #16]
  40cbf8:	ldp	x29, x30, [sp], #32
  40cbfc:	ret
  40cc00:	sxtw	x2, w4
  40cc04:	mov	x1, x3
  40cc08:	add	x0, x0, #0x4
  40cc0c:	bl	404b30 <memcpy@plt>
  40cc10:	ldr	w6, [x19]
  40cc14:	add	w6, w6, #0x3
  40cc18:	and	w6, w6, #0xfffffffc
  40cc1c:	add	w6, w6, w20
  40cc20:	b	40cbec <addattr_l@@Base+0x44>
  40cc24:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13c90>
  40cc28:	mov	w2, w1
  40cc2c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40cc30:	add	x1, x1, #0x128
  40cc34:	ldr	x3, [x3, #3992]
  40cc38:	ldr	x0, [x3]
  40cc3c:	bl	405020 <fprintf@plt>
  40cc40:	mov	w0, #0xffffffff            	// #-1
  40cc44:	b	40cbf4 <addattr_l@@Base+0x4c>

000000000040cc48 <addattr@@Base>:
  40cc48:	mov	w4, #0x0                   	// #0
  40cc4c:	mov	x3, #0x0                   	// #0
  40cc50:	b	40cba8 <addattr_l@@Base>
  40cc54:	nop

000000000040cc58 <addattr8@@Base>:
  40cc58:	stp	x29, x30, [sp, #-32]!
  40cc5c:	mov	w4, #0x1                   	// #1
  40cc60:	mov	x29, sp
  40cc64:	strb	w3, [sp, #31]
  40cc68:	add	x3, sp, #0x1f
  40cc6c:	bl	40cba8 <addattr_l@@Base>
  40cc70:	ldp	x29, x30, [sp], #32
  40cc74:	ret

000000000040cc78 <addattr16@@Base>:
  40cc78:	stp	x29, x30, [sp, #-32]!
  40cc7c:	mov	w4, #0x2                   	// #2
  40cc80:	mov	x29, sp
  40cc84:	strh	w3, [sp, #30]
  40cc88:	add	x3, sp, #0x1e
  40cc8c:	bl	40cba8 <addattr_l@@Base>
  40cc90:	ldp	x29, x30, [sp], #32
  40cc94:	ret

000000000040cc98 <addattr32@@Base>:
  40cc98:	stp	x29, x30, [sp, #-32]!
  40cc9c:	mov	w4, #0x4                   	// #4
  40cca0:	mov	x29, sp
  40cca4:	str	w3, [sp, #28]
  40cca8:	add	x3, sp, #0x1c
  40ccac:	bl	40cba8 <addattr_l@@Base>
  40ccb0:	ldp	x29, x30, [sp], #32
  40ccb4:	ret

000000000040ccb8 <addattr64@@Base>:
  40ccb8:	stp	x29, x30, [sp, #-32]!
  40ccbc:	mov	w4, #0x8                   	// #8
  40ccc0:	mov	x29, sp
  40ccc4:	str	x3, [sp, #24]
  40ccc8:	add	x3, sp, #0x18
  40cccc:	bl	40cba8 <addattr_l@@Base>
  40ccd0:	ldp	x29, x30, [sp], #32
  40ccd4:	ret

000000000040ccd8 <addattrstrz@@Base>:
  40ccd8:	stp	x29, x30, [sp, #-48]!
  40ccdc:	mov	x29, sp
  40cce0:	stp	x19, x20, [sp, #16]
  40cce4:	mov	x19, x3
  40cce8:	mov	x20, x0
  40ccec:	mov	x0, x3
  40ccf0:	stp	x21, x22, [sp, #32]
  40ccf4:	mov	w21, w1
  40ccf8:	mov	w22, w2
  40ccfc:	bl	404b60 <strlen@plt>
  40cd00:	mov	x3, x19
  40cd04:	mov	x4, x0
  40cd08:	mov	w2, w22
  40cd0c:	mov	w1, w21
  40cd10:	mov	x0, x20
  40cd14:	add	w4, w4, #0x1
  40cd18:	ldp	x19, x20, [sp, #16]
  40cd1c:	ldp	x21, x22, [sp, #32]
  40cd20:	ldp	x29, x30, [sp], #48
  40cd24:	b	40cba8 <addattr_l@@Base>

000000000040cd28 <addraw_l@@Base>:
  40cd28:	stp	x29, x30, [sp, #-48]!
  40cd2c:	mov	x29, sp
  40cd30:	stp	x19, x20, [sp, #16]
  40cd34:	mov	x19, x0
  40cd38:	ldr	w0, [x0]
  40cd3c:	add	w20, w3, #0x3
  40cd40:	stp	x21, x22, [sp, #32]
  40cd44:	add	w0, w0, #0x3
  40cd48:	and	w20, w20, #0xfffffffc
  40cd4c:	and	w0, w0, #0xfffffffc
  40cd50:	mov	w21, w3
  40cd54:	mov	w3, w1
  40cd58:	mov	x1, x2
  40cd5c:	add	w2, w0, w20
  40cd60:	cmp	w2, w3
  40cd64:	b.hi	40cdc0 <addraw_l@@Base+0x98>  // b.pmore
  40cd68:	sxtw	x22, w21
  40cd6c:	add	x0, x19, w0, uxtw
  40cd70:	mov	x2, x22
  40cd74:	bl	404b30 <memcpy@plt>
  40cd78:	ldr	w0, [x19]
  40cd7c:	mov	w1, #0x0                   	// #0
  40cd80:	sub	w2, w20, w21
  40cd84:	add	w0, w0, #0x3
  40cd88:	and	x0, x0, #0xfffffffc
  40cd8c:	add	x0, x0, x22
  40cd90:	add	x0, x19, x0
  40cd94:	bl	404cf0 <memset@plt>
  40cd98:	ldr	w1, [x19]
  40cd9c:	mov	w0, #0x0                   	// #0
  40cda0:	add	w1, w1, #0x3
  40cda4:	and	w1, w1, #0xfffffffc
  40cda8:	add	w1, w1, w20
  40cdac:	str	w1, [x19]
  40cdb0:	ldp	x19, x20, [sp, #16]
  40cdb4:	ldp	x21, x22, [sp, #32]
  40cdb8:	ldp	x29, x30, [sp], #48
  40cdbc:	ret
  40cdc0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40cdc4:	mov	w2, w3
  40cdc8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40cdcc:	add	x1, x1, #0x158
  40cdd0:	ldr	x0, [x0, #3992]
  40cdd4:	ldr	x0, [x0]
  40cdd8:	bl	405020 <fprintf@plt>
  40cddc:	mov	w0, #0xffffffff            	// #-1
  40cde0:	b	40cdb0 <addraw_l@@Base+0x88>
  40cde4:	nop

000000000040cde8 <addattr_nest@@Base>:
  40cde8:	stp	x29, x30, [sp, #-32]!
  40cdec:	mov	w4, #0x0                   	// #0
  40cdf0:	mov	x3, #0x0                   	// #0
  40cdf4:	mov	x29, sp
  40cdf8:	str	x19, [sp, #16]
  40cdfc:	ldr	w19, [x0]
  40ce00:	add	w19, w19, #0x3
  40ce04:	and	x19, x19, #0xfffffffc
  40ce08:	add	x19, x0, x19
  40ce0c:	bl	40cba8 <addattr_l@@Base>
  40ce10:	mov	x0, x19
  40ce14:	ldr	x19, [sp, #16]
  40ce18:	ldp	x29, x30, [sp], #32
  40ce1c:	ret

000000000040ce20 <addattr_nest_end@@Base>:
  40ce20:	mov	x2, x0
  40ce24:	ldr	w0, [x0]
  40ce28:	add	w3, w0, #0x3
  40ce2c:	and	x3, x3, #0xfffffffc
  40ce30:	add	x2, x2, x3
  40ce34:	sub	x2, x2, x1
  40ce38:	strh	w2, [x1]
  40ce3c:	ret

000000000040ce40 <addattr_nest_compat@@Base>:
  40ce40:	stp	x29, x30, [sp, #-48]!
  40ce44:	mov	x29, sp
  40ce48:	stp	x19, x20, [sp, #16]
  40ce4c:	mov	x20, x0
  40ce50:	ldr	w19, [x0]
  40ce54:	stp	x21, x22, [sp, #32]
  40ce58:	mov	w21, w1
  40ce5c:	add	w19, w19, #0x3
  40ce60:	and	x19, x19, #0xfffffffc
  40ce64:	mov	w22, w2
  40ce68:	add	x19, x0, x19
  40ce6c:	bl	40cba8 <addattr_l@@Base>
  40ce70:	mov	w2, w22
  40ce74:	mov	w1, w21
  40ce78:	mov	x0, x20
  40ce7c:	bl	40cde8 <addattr_nest@@Base>
  40ce80:	mov	x0, x19
  40ce84:	ldp	x19, x20, [sp, #16]
  40ce88:	ldp	x21, x22, [sp, #32]
  40ce8c:	ldp	x29, x30, [sp], #48
  40ce90:	ret
  40ce94:	nop

000000000040ce98 <addattr_nest_compat_end@@Base>:
  40ce98:	stp	x29, x30, [sp, #-32]!
  40ce9c:	mov	x29, sp
  40cea0:	ldr	w2, [x0]
  40cea4:	ldrh	w3, [x1]
  40cea8:	add	w2, w2, #0x3
  40ceac:	str	x19, [sp, #16]
  40ceb0:	and	x2, x2, #0xfffffffc
  40ceb4:	add	w3, w3, #0x3
  40ceb8:	add	x2, x0, x2
  40cebc:	and	x3, x3, #0x1fffc
  40cec0:	sub	x2, x2, x1
  40cec4:	mov	x19, x0
  40cec8:	strh	w2, [x1]
  40cecc:	add	x1, x1, x3
  40ced0:	bl	40ce20 <addattr_nest_end@@Base>
  40ced4:	ldr	w0, [x19]
  40ced8:	ldr	x19, [sp, #16]
  40cedc:	ldp	x29, x30, [sp], #32
  40cee0:	ret
  40cee4:	nop

000000000040cee8 <rta_addattr32@@Base>:
  40cee8:	ldrh	w4, [x0]
  40ceec:	mov	x5, x0
  40cef0:	add	w4, w4, #0x3
  40cef4:	and	w4, w4, #0xfffffffc
  40cef8:	add	w0, w4, #0x8
  40cefc:	cmp	w0, w1
  40cf00:	b.hi	40cf34 <rta_addattr32@@Base+0x4c>  // b.pmore
  40cf04:	add	x1, x5, w4, uxtw
  40cf08:	mov	w6, #0x8                   	// #8
  40cf0c:	mov	w0, #0x0                   	// #0
  40cf10:	strh	w2, [x1, #2]
  40cf14:	strh	w6, [x5, w4, uxtw]
  40cf18:	str	w3, [x1, #4]
  40cf1c:	ldrh	w1, [x5]
  40cf20:	add	w1, w1, #0x3
  40cf24:	and	w1, w1, #0xfffffffc
  40cf28:	add	w1, w1, #0x8
  40cf2c:	strh	w1, [x5]
  40cf30:	ret
  40cf34:	stp	x29, x30, [sp, #-16]!
  40cf38:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40cf3c:	mov	w2, w1
  40cf40:	mov	x29, sp
  40cf44:	ldr	x0, [x0, #3992]
  40cf48:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40cf4c:	add	x1, x1, #0x188
  40cf50:	ldr	x0, [x0]
  40cf54:	bl	405020 <fprintf@plt>
  40cf58:	mov	w0, #0xffffffff            	// #-1
  40cf5c:	ldp	x29, x30, [sp], #16
  40cf60:	ret
  40cf64:	nop

000000000040cf68 <rta_addattr_l@@Base>:
  40cf68:	stp	x29, x30, [sp, #-32]!
  40cf6c:	mov	x29, sp
  40cf70:	stp	x19, x20, [sp, #16]
  40cf74:	mov	x20, x0
  40cf78:	add	w0, w4, #0x7
  40cf7c:	and	w0, w0, #0xfffffffc
  40cf80:	ldrh	w5, [x20]
  40cf84:	add	w5, w5, #0x3
  40cf88:	and	w5, w5, #0xfffffffc
  40cf8c:	add	w0, w0, w5
  40cf90:	cmp	w0, w1
  40cf94:	b.hi	40cff0 <rta_addattr_l@@Base+0x88>  // b.pmore
  40cf98:	add	x0, x20, w5, uxtw
  40cf9c:	add	w19, w4, #0x4
  40cfa0:	and	w19, w19, #0xffff
  40cfa4:	strh	w2, [x0, #2]
  40cfa8:	strh	w19, [x20, w5, uxtw]
  40cfac:	cbnz	w4, 40cfdc <rta_addattr_l@@Base+0x74>
  40cfb0:	ldrh	w1, [x20]
  40cfb4:	add	w19, w19, #0x3
  40cfb8:	and	w19, w19, #0xfffffffc
  40cfbc:	mov	w0, #0x0                   	// #0
  40cfc0:	add	w1, w1, #0x3
  40cfc4:	and	w1, w1, #0xfffffffc
  40cfc8:	add	w19, w1, w19
  40cfcc:	strh	w19, [x20]
  40cfd0:	ldp	x19, x20, [sp, #16]
  40cfd4:	ldp	x29, x30, [sp], #32
  40cfd8:	ret
  40cfdc:	sxtw	x2, w4
  40cfe0:	mov	x1, x3
  40cfe4:	add	x0, x0, #0x4
  40cfe8:	bl	404b30 <memcpy@plt>
  40cfec:	b	40cfb0 <rta_addattr_l@@Base+0x48>
  40cff0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40cff4:	mov	w2, w1
  40cff8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40cffc:	add	x1, x1, #0x1c0
  40d000:	ldr	x0, [x0, #3992]
  40d004:	ldr	x0, [x0]
  40d008:	bl	405020 <fprintf@plt>
  40d00c:	mov	w0, #0xffffffff            	// #-1
  40d010:	b	40cfd0 <rta_addattr_l@@Base+0x68>
  40d014:	nop

000000000040d018 <rta_addattr8@@Base>:
  40d018:	stp	x29, x30, [sp, #-32]!
  40d01c:	mov	w4, #0x1                   	// #1
  40d020:	mov	x29, sp
  40d024:	strb	w3, [sp, #31]
  40d028:	add	x3, sp, #0x1f
  40d02c:	bl	40cf68 <rta_addattr_l@@Base>
  40d030:	ldp	x29, x30, [sp], #32
  40d034:	ret

000000000040d038 <rta_addattr16@@Base>:
  40d038:	stp	x29, x30, [sp, #-32]!
  40d03c:	mov	w4, #0x2                   	// #2
  40d040:	mov	x29, sp
  40d044:	strh	w3, [sp, #30]
  40d048:	add	x3, sp, #0x1e
  40d04c:	bl	40cf68 <rta_addattr_l@@Base>
  40d050:	ldp	x29, x30, [sp], #32
  40d054:	ret

000000000040d058 <rta_addattr64@@Base>:
  40d058:	stp	x29, x30, [sp, #-32]!
  40d05c:	mov	w4, #0x8                   	// #8
  40d060:	mov	x29, sp
  40d064:	str	x3, [sp, #24]
  40d068:	add	x3, sp, #0x18
  40d06c:	bl	40cf68 <rta_addattr_l@@Base>
  40d070:	ldp	x29, x30, [sp], #32
  40d074:	ret

000000000040d078 <rta_nest@@Base>:
  40d078:	stp	x29, x30, [sp, #-32]!
  40d07c:	mov	w4, #0x0                   	// #0
  40d080:	mov	x3, #0x0                   	// #0
  40d084:	mov	x29, sp
  40d088:	ldrh	w5, [x0]
  40d08c:	str	x19, [sp, #16]
  40d090:	add	w5, w5, #0x3
  40d094:	and	x5, x5, #0x1fffc
  40d098:	add	x19, x0, x5
  40d09c:	bl	40cf68 <rta_addattr_l@@Base>
  40d0a0:	ldrh	w1, [x19, #2]
  40d0a4:	mov	x0, x19
  40d0a8:	orr	w1, w1, #0xffff8000
  40d0ac:	strh	w1, [x19, #2]
  40d0b0:	ldr	x19, [sp, #16]
  40d0b4:	ldp	x29, x30, [sp], #32
  40d0b8:	ret
  40d0bc:	nop

000000000040d0c0 <rta_nest_end@@Base>:
  40d0c0:	ldrh	w2, [x0]
  40d0c4:	add	w2, w2, #0x3
  40d0c8:	and	x2, x2, #0x1fffc
  40d0cc:	add	x2, x0, x2
  40d0d0:	sub	x2, x2, x1
  40d0d4:	strh	w2, [x1]
  40d0d8:	ldrh	w0, [x0]
  40d0dc:	ret

000000000040d0e0 <parse_rtattr_flags@@Base>:
  40d0e0:	stp	x29, x30, [sp, #-64]!
  40d0e4:	mov	x29, sp
  40d0e8:	stp	x21, x22, [sp, #32]
  40d0ec:	mov	w21, w1
  40d0f0:	add	w1, w1, #0x1
  40d0f4:	and	w22, w4, #0xffff
  40d0f8:	stp	x19, x20, [sp, #16]
  40d0fc:	mov	w19, w3
  40d100:	mov	x20, x2
  40d104:	sbfiz	x2, x1, #3, #32
  40d108:	mov	w1, #0x0                   	// #0
  40d10c:	str	x23, [sp, #48]
  40d110:	mov	x23, x0
  40d114:	bl	404cf0 <memset@plt>
  40d118:	mvn	w1, w22
  40d11c:	cmp	w19, #0x3
  40d120:	b.gt	40d134 <parse_rtattr_flags@@Base+0x54>
  40d124:	b	40d188 <parse_rtattr_flags@@Base+0xa8>
  40d128:	add	x20, x20, w5, uxtw
  40d12c:	cmp	w19, #0x3
  40d130:	b.le	40d188 <parse_rtattr_flags@@Base+0xa8>
  40d134:	ldrh	w4, [x20]
  40d138:	add	w5, w4, #0x3
  40d13c:	cmp	w4, #0x3
  40d140:	and	w5, w5, #0xfffffffc
  40d144:	mov	w3, w4
  40d148:	b.ls	40d1a8 <parse_rtattr_flags@@Base+0xc8>  // b.plast
  40d14c:	cmp	w19, w4
  40d150:	b.lt	40d1a8 <parse_rtattr_flags@@Base+0xc8>  // b.tstop
  40d154:	ldrh	w4, [x20, #2]
  40d158:	sub	w19, w19, w5
  40d15c:	and	w4, w1, w4
  40d160:	and	x2, x4, #0xffff
  40d164:	cmp	w21, w4, uxth
  40d168:	b.lt	40d128 <parse_rtattr_flags@@Base+0x48>  // b.tstop
  40d16c:	ldr	x0, [x23, x2, lsl #3]
  40d170:	cbnz	x0, 40d128 <parse_rtattr_flags@@Base+0x48>
  40d174:	str	x20, [x23, x2, lsl #3]
  40d178:	cmp	w19, #0x3
  40d17c:	add	x20, x20, w5, uxtw
  40d180:	b.gt	40d134 <parse_rtattr_flags@@Base+0x54>
  40d184:	nop
  40d188:	cbnz	w19, 40d1a4 <parse_rtattr_flags@@Base+0xc4>
  40d18c:	mov	w0, #0x0                   	// #0
  40d190:	ldp	x19, x20, [sp, #16]
  40d194:	ldp	x21, x22, [sp, #32]
  40d198:	ldr	x23, [sp, #48]
  40d19c:	ldp	x29, x30, [sp], #64
  40d1a0:	ret
  40d1a4:	ldrh	w3, [x20]
  40d1a8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40d1ac:	mov	w2, w19
  40d1b0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40d1b4:	add	x1, x1, #0x1f8
  40d1b8:	ldr	x0, [x0, #3992]
  40d1bc:	ldr	x0, [x0]
  40d1c0:	bl	405020 <fprintf@plt>
  40d1c4:	mov	w0, #0x0                   	// #0
  40d1c8:	ldp	x19, x20, [sp, #16]
  40d1cc:	ldp	x21, x22, [sp, #32]
  40d1d0:	ldr	x23, [sp, #48]
  40d1d4:	ldp	x29, x30, [sp], #64
  40d1d8:	ret
  40d1dc:	nop

000000000040d1e0 <parse_rtattr@@Base>:
  40d1e0:	mov	w4, #0x0                   	// #0
  40d1e4:	b	40d0e0 <parse_rtattr_flags@@Base>

000000000040d1e8 <parse_rtattr_one@@Base>:
  40d1e8:	b	40d220 <parse_rtattr_one@@Base+0x38>
  40d1ec:	ldrh	w4, [x1]
  40d1f0:	add	w5, w4, #0x3
  40d1f4:	cmp	w4, #0x3
  40d1f8:	and	w5, w5, #0xfffffffc
  40d1fc:	mov	w3, w4
  40d200:	b.ls	40d238 <parse_rtattr_one@@Base+0x50>  // b.plast
  40d204:	cmp	w2, w4
  40d208:	b.lt	40d238 <parse_rtattr_one@@Base+0x50>  // b.tstop
  40d20c:	ldrh	w3, [x1, #2]
  40d210:	sub	w2, w2, w5
  40d214:	cmp	w3, w0
  40d218:	b.eq	40d264 <parse_rtattr_one@@Base+0x7c>  // b.none
  40d21c:	add	x1, x1, w5, uxtw
  40d220:	cmp	w2, #0x3
  40d224:	b.gt	40d1ec <parse_rtattr_one@@Base+0x4>
  40d228:	mov	x0, #0x0                   	// #0
  40d22c:	cbnz	w2, 40d234 <parse_rtattr_one@@Base+0x4c>
  40d230:	ret
  40d234:	ldrh	w3, [x1]
  40d238:	stp	x29, x30, [sp, #-16]!
  40d23c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13c90>
  40d240:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0xc90>
  40d244:	mov	x29, sp
  40d248:	ldr	x0, [x0, #3992]
  40d24c:	add	x1, x1, #0x1f8
  40d250:	ldr	x0, [x0]
  40d254:	bl	405020 <fprintf@plt>
  40d258:	mov	x0, #0x0                   	// #0
  40d25c:	ldp	x29, x30, [sp], #16
  40d260:	ret
  40d264:	mov	x0, x1
  40d268:	ret
  40d26c:	nop

000000000040d270 <__parse_rtattr_nested_compat@@Base>:
  40d270:	ldrh	w5, [x2]
  40d274:	sub	x5, x5, #0x4
  40d278:	cmp	x5, w3, sxtw
  40d27c:	b.cc	40d2cc <__parse_rtattr_nested_compat@@Base+0x5c>  // b.lo, b.ul, b.last
  40d280:	add	w4, w3, #0x3
  40d284:	and	x4, x4, #0xfffffffc
  40d288:	add	x4, x4, #0x4
  40d28c:	cmp	x5, x4
  40d290:	b.cs	40d2b8 <__parse_rtattr_nested_compat@@Base+0x48>  // b.hs, b.nlast
  40d294:	stp	x29, x30, [sp, #-16]!
  40d298:	add	w2, w1, #0x1
  40d29c:	mov	w1, #0x0                   	// #0
  40d2a0:	mov	x29, sp
  40d2a4:	sbfiz	x2, x2, #3, #32
  40d2a8:	bl	404cf0 <memset@plt>
  40d2ac:	mov	w0, #0x0                   	// #0
  40d2b0:	ldp	x29, x30, [sp], #16
  40d2b4:	ret
  40d2b8:	ldrh	w3, [x2, x4]
  40d2bc:	add	x2, x2, x4
  40d2c0:	add	x2, x2, #0x4
  40d2c4:	sub	w3, w3, #0x4
  40d2c8:	b	40d1e0 <parse_rtattr@@Base>
  40d2cc:	mov	w0, #0xffffffff            	// #-1
  40d2d0:	ret
  40d2d4:	nop

000000000040d2d8 <__libc_csu_init@@Base>:
  40d2d8:	stp	x29, x30, [sp, #-64]!
  40d2dc:	mov	x29, sp
  40d2e0:	stp	x19, x20, [sp, #16]
  40d2e4:	adrp	x20, 421000 <_IO_stdin_used@@Base+0x13c90>
  40d2e8:	add	x20, x20, #0xcf8
  40d2ec:	stp	x21, x22, [sp, #32]
  40d2f0:	adrp	x21, 421000 <_IO_stdin_used@@Base+0x13c90>
  40d2f4:	add	x21, x21, #0xcf0
  40d2f8:	sub	x20, x20, x21
  40d2fc:	mov	w22, w0
  40d300:	stp	x23, x24, [sp, #48]
  40d304:	mov	x23, x1
  40d308:	mov	x24, x2
  40d30c:	bl	404af0 <memcpy@plt-0x40>
  40d310:	cmp	xzr, x20, asr #3
  40d314:	b.eq	40d340 <__libc_csu_init@@Base+0x68>  // b.none
  40d318:	asr	x20, x20, #3
  40d31c:	mov	x19, #0x0                   	// #0
  40d320:	ldr	x3, [x21, x19, lsl #3]
  40d324:	mov	x2, x24
  40d328:	add	x19, x19, #0x1
  40d32c:	mov	x1, x23
  40d330:	mov	w0, w22
  40d334:	blr	x3
  40d338:	cmp	x20, x19
  40d33c:	b.ne	40d320 <__libc_csu_init@@Base+0x48>  // b.any
  40d340:	ldp	x19, x20, [sp, #16]
  40d344:	ldp	x21, x22, [sp, #32]
  40d348:	ldp	x23, x24, [sp, #48]
  40d34c:	ldp	x29, x30, [sp], #64
  40d350:	ret
  40d354:	nop

000000000040d358 <__libc_csu_fini@@Base>:
  40d358:	ret

Disassembly of section .fini:

000000000040d35c <.fini>:
  40d35c:	stp	x29, x30, [sp, #-16]!
  40d360:	mov	x29, sp
  40d364:	ldp	x29, x30, [sp], #16
  40d368:	ret
